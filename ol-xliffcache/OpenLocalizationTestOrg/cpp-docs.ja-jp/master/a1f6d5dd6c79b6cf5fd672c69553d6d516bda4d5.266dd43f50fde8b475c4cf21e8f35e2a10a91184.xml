{"nodes":[{"pos":[12,47],"content":"CComUnkArray Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"CComUnkArray Class | Microsoft Docs","pos":[0,35]}]},{"pos":[764,782],"content":"CComUnkArray Class","linkify":"CComUnkArray Class","nodes":[{"content":"CComUnkArray Class","pos":[0,18]}]},{"pos":[783,962],"content":"This class stores <bpt id=\"p1\">**</bpt>IUnknown<ept id=\"p1\">**</ept> pointers, and is designed to be used as a parameter to the <bpt id=\"p2\">[</bpt>IConnectionPointImpl<ept id=\"p2\">](../../atl/reference/iconnectionpointimpl-class.md)</ept> template class.","source":"This class stores **IUnknown** pointers, and is designed to be used as a parameter to the [IConnectionPointImpl](../../atl/reference/iconnectionpointimpl-class.md) template class."},{"pos":[971,977],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[1052,1062],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"<bpt id=\"p1\">*</bpt>nMaxSize<ept id=\"p1\">*</ept>","pos":[1066,1076],"source":"*nMaxSize*"},{"content":"The maximum number of <bpt id=\"p1\">**</bpt>IUnknown<ept id=\"p1\">**</ept> pointers that can be held in the static array.","pos":[1080,1161],"source":" The maximum number of **IUnknown** pointers that can be held in the static array."},{"pos":[1170,1177],"content":"Members","linkify":"Members","nodes":[{"content":"Members","pos":[0,7]}]},{"pos":[1187,1206],"content":"Public Constructors","linkify":"Public Constructors","nodes":[{"content":"Public Constructors","pos":[0,19]}]},{"content":"Name","pos":[1213,1217]},{"content":"Description","pos":[1218,1229]},{"pos":[1267,1324],"content":"<bpt id=\"p1\">[</bpt>CComUnkArray::CComUnkArray<ept id=\"p1\">](#ccomunkarray__ccomunkarray)</ept>","source":"[CComUnkArray::CComUnkArray](#ccomunkarray__ccomunkarray)"},{"content":"Constructor.","pos":[1325,1337]},{"pos":[1348,1362],"content":"Public Methods","linkify":"Public Methods","nodes":[{"content":"Public Methods","pos":[0,14]}]},{"content":"Name","pos":[1369,1373]},{"content":"Description","pos":[1374,1385]},{"pos":[1423,1462],"content":"<bpt id=\"p1\">[</bpt>CComUnkArray::Add<ept id=\"p1\">](#ccomunkarray__add)</ept>","source":"[CComUnkArray::Add](#ccomunkarray__add)"},{"pos":[1463,1524],"content":"Call this method to add an <bpt id=\"p1\">**</bpt>IUnknown<ept id=\"p1\">**</ept> pointer to the array.","source":"Call this method to add an **IUnknown** pointer to the array."},{"pos":[1529,1572],"content":"<bpt id=\"p1\">[</bpt>CComUnkArray::begin<ept id=\"p1\">](#ccomunkarray__begin)</ept>","source":"[CComUnkArray::begin](#ccomunkarray__begin)"},{"pos":[1573,1643],"content":"Returns a pointer to the first <bpt id=\"p1\">**</bpt>IUnknown<ept id=\"p1\">**</ept> pointer in the collection.","source":"Returns a pointer to the first **IUnknown** pointer in the collection."},{"pos":[1648,1687],"content":"<bpt id=\"p1\">[</bpt>CComUnkArray::end<ept id=\"p1\">](#ccomunkarray__end)</ept>","source":"[CComUnkArray::end](#ccomunkarray__end)"},{"pos":[1688,1766],"content":"Returns a pointer to one past the last <bpt id=\"p1\">**</bpt>IUnknown<ept id=\"p1\">**</ept> pointer in the collection.","source":"Returns a pointer to one past the last **IUnknown** pointer in the collection."},{"pos":[1771,1822],"content":"<bpt id=\"p1\">[</bpt>CComUnkArray::GetCookie<ept id=\"p1\">](#ccomunkarray__getcookie)</ept>","source":"[CComUnkArray::GetCookie](#ccomunkarray__getcookie)"},{"pos":[1823,1903],"content":"Call this method to get the cookie associated with a given <bpt id=\"p1\">**</bpt>IUnknown<ept id=\"p1\">**</ept> pointer.","source":"Call this method to get the cookie associated with a given **IUnknown** pointer."},{"pos":[1908,1961],"content":"<bpt id=\"p1\">[</bpt>CComUnkArray::GetUnknown<ept id=\"p1\">](#ccomunkarray__getunknown)</ept>","source":"[CComUnkArray::GetUnknown](#ccomunkarray__getunknown)"},{"pos":[1962,2042],"content":"Call this method to get the <bpt id=\"p1\">**</bpt>IUnknown<ept id=\"p1\">**</ept> pointer associated with a given cookie.","source":"Call this method to get the **IUnknown** pointer associated with a given cookie."},{"pos":[2047,2092],"content":"<bpt id=\"p1\">[</bpt>CComUnkArray::Remove<ept id=\"p1\">](#ccomunkarray__remove)</ept>","source":"[CComUnkArray::Remove](#ccomunkarray__remove)"},{"pos":[2093,2159],"content":"Call this method to remove an <bpt id=\"p1\">**</bpt>IUnknown<ept id=\"p1\">**</ept> pointer from the array.","source":"Call this method to remove an **IUnknown** pointer from the array."},{"pos":[2169,2176],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"<bpt id=\"p1\">**</bpt>CComUnkArray<ept id=\"p1\">**</ept> holds a fixed number of <bpt id=\"p2\">**</bpt>IUnknown<ept id=\"p2\">**</ept> pointers, each an interface on a connection point.","pos":[2180,2284],"source":"**CComUnkArray** holds a fixed number of **IUnknown** pointers, each an interface on a connection point."},{"content":"<bpt id=\"p1\">**</bpt>CComUnkArray<ept id=\"p1\">**</ept> can be used as a parameter to the <bpt id=\"p2\">[</bpt>IConnectionPointImpl<ept id=\"p2\">](../../atl/reference/iconnectionpointimpl-class.md)</ept> template class.","pos":[2285,2425],"source":"**CComUnkArray** can be used as a parameter to the [IConnectionPointImpl](../../atl/reference/iconnectionpointimpl-class.md) template class."},{"content":"<bpt id=\"p1\">**</bpt>CComUnkArray<ph id=\"ph1\">\\&lt;</ph>1&gt;<ept id=\"p1\">**</ept> is a template specialization of <bpt id=\"p2\">**</bpt>CComUnkArray<ept id=\"p2\">**</ept> that has been optimized for one connection point.","pos":[2426,2545],"source":"**CComUnkArray\\<1>** is a template specialization of **CComUnkArray** that has been optimized for one connection point."},{"pos":[2552,2729],"content":"The <bpt id=\"p1\">**</bpt>CComUnkArray<ept id=\"p1\">**</ept> methods <bpt id=\"p2\">[</bpt>begin<ept id=\"p2\">](#ccomunkarray__begin)</ept> and <bpt id=\"p3\">[</bpt>end<ept id=\"p3\">](#ccomunkarray__end)</ept> can be used to loop through all connection points (for example, when an event is fired).","source":"The **CComUnkArray** methods [begin](#ccomunkarray__begin) and [end](#ccomunkarray__end) can be used to loop through all connection points (for example, when an event is fired)."},{"pos":[2736,2895],"content":"See <bpt id=\"p1\">[</bpt>Adding Connection Points to an Object<ept id=\"p1\">](../../atl/adding-connection-points-to-an-object.md)</ept> for details on automating creation of connection point proxies.","source":"See [Adding Connection Points to an Object](../../atl/adding-connection-points-to-an-object.md) for details on automating creation of connection point proxies."},{"pos":[2903,3290],"content":"[!NOTE]\n**Note** The class [CComDynamicUnkArray](../../atl/reference/ccomdynamicunkarray-class.md) is used by the **Add Class** wizard when creating a control which has Connection Points. If you wish to specify the number of Connection Points manually, change the reference from **CComDynamicUnkArray** to `CComUnkArray<` *n* `>`, where *n* is the number of connection points required.","leadings":["","> "],"nodes":[{"content":"**Note** The class [CComDynamicUnkArray](../../atl/reference/ccomdynamicunkarray-class.md) is used by the **Add Class** wizard when creating a control which has Connection Points. If you wish to specify the number of Connection Points manually, change the reference from **CComDynamicUnkArray** to `CComUnkArray<` *n* `>`, where *n* is the number of connection points required.","pos":[8,385],"nodes":[{"content":"<bpt id=\"p1\">**</bpt>Note<ept id=\"p1\">**</ept> The class <bpt id=\"p2\">[</bpt>CComDynamicUnkArray<ept id=\"p2\">](../../atl/reference/ccomdynamicunkarray-class.md)</ept> is used by the <bpt id=\"p3\">**</bpt>Add Class<ept id=\"p3\">**</ept> wizard when creating a control which has Connection Points.","pos":[0,179],"source":"**Note** The class [CComDynamicUnkArray](../../atl/reference/ccomdynamicunkarray-class.md) is used by the **Add Class** wizard when creating a control which has Connection Points."},{"content":"If you wish to specify the number of Connection Points manually, change the reference from <bpt id=\"p1\">**</bpt>CComDynamicUnkArray<ept id=\"p1\">**</ept> to <ph id=\"ph1\">`CComUnkArray&lt;`</ph> <bpt id=\"p2\">*</bpt>n<ept id=\"p2\">*</ept> <ph id=\"ph2\">`&gt;`</ph>, where <bpt id=\"p3\">*</bpt>n<ept id=\"p3\">*</ept> is the number of connection points required.","pos":[180,377],"source":" If you wish to specify the number of Connection Points manually, change the reference from **CComDynamicUnkArray** to `CComUnkArray<` *n* `>`, where *n* is the number of connection points required."}]}]},{"pos":[3299,3311],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[3315,3335],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> atlcom.h","source":"**Header:** atlcom.h"},{"pos":[3345,3396],"content":"<bpt id=\"p1\">&lt;a name=\"ccomunkarray__add\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CComUnkArray::Add","linkify":"<a name=\"ccomunkarray__add\"></a>  CComUnkArray::Add","source":"<a name=\"ccomunkarray__add\"></a>  CComUnkArray::Add"},{"pos":[3400,3461],"content":"Call this method to add an <bpt id=\"p1\">**</bpt>IUnknown<ept id=\"p1\">**</ept> pointer to the array.","source":"Call this method to add an **IUnknown** pointer to the array."},{"pos":[3511,3521],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"<bpt id=\"p1\">*</bpt>pUnk<ept id=\"p1\">*</ept>","pos":[3525,3531],"source":"*pUnk*"},{"content":"Call this method to add an <bpt id=\"p1\">**</bpt>IUnknown<ept id=\"p1\">**</ept> pointer to the array.","pos":[3535,3596],"source":" Call this method to add an **IUnknown** pointer to the array."},{"pos":[3606,3618],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Returns the cookie associated with the newly added pointer, or 0 if the array is not large enough to contain the new pointer.","pos":[3622,3747]},{"pos":[3757,3812],"content":"<bpt id=\"p1\">&lt;a name=\"ccomunkarray__begin\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CComUnkArray::begin","linkify":"<a name=\"ccomunkarray__begin\"></a>  CComUnkArray::begin","source":"<a name=\"ccomunkarray__begin\"></a>  CComUnkArray::begin"},{"pos":[3816,3904],"content":"Returns a pointer to the beginning of the collection of <bpt id=\"p1\">**</bpt>IUnknown<ept id=\"p1\">**</ept> interface pointers.","source":"Returns a pointer to the beginning of the collection of **IUnknown** interface pointers."},{"pos":[3954,3966],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[3970,4017],"content":"A pointer to an <bpt id=\"p1\">**</bpt>IUnknown<ept id=\"p1\">**</ept> interface pointer.","source":"A pointer to an **IUnknown** interface pointer."},{"pos":[4027,4034],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The collection contains pointers to interfaces stored locally as <bpt id=\"p1\">**</bpt>IUnknown<ept id=\"p1\">**</ept>.","pos":[4038,4116],"source":"The collection contains pointers to interfaces stored locally as **IUnknown**."},{"content":"You cast each <bpt id=\"p1\">**</bpt>IUnknown<ept id=\"p1\">**</ept> interface to the real interface type and then call through it.","pos":[4117,4206],"source":" You cast each **IUnknown** interface to the real interface type and then call through it."},{"content":"You do not need to query for the interface first.","pos":[4207,4256]},{"pos":[4263,4345],"content":"Before using the <bpt id=\"p1\">**</bpt>IUnknown<ept id=\"p1\">**</ept> interface, you should check that it is not <bpt id=\"p2\">**</bpt>NULL<ept id=\"p2\">**</ept>.","source":"Before using the **IUnknown** interface, you should check that it is not **NULL**."},{"pos":[4355,4424],"content":"<bpt id=\"p1\">&lt;a name=\"ccomunkarray__ccomunkarray\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CComUnkArray::CComUnkArray","linkify":"<a name=\"ccomunkarray__ccomunkarray\"></a>  CComUnkArray::CComUnkArray","source":"<a name=\"ccomunkarray__ccomunkarray\"></a>  CComUnkArray::CComUnkArray"},{"content":"The constructor.","pos":[4428,4444]},{"pos":[4483,4490],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[4494,4597],"content":"Sets the collection to hold <ph id=\"ph1\">`nMaxSize`</ph> <bpt id=\"p1\">**</bpt>IUnknown<ept id=\"p1\">**</ept> pointers, and initializes the pointers to <bpt id=\"p2\">**</bpt>NULL<ept id=\"p2\">**</ept>.","source":"Sets the collection to hold `nMaxSize` **IUnknown** pointers, and initializes the pointers to **NULL**."},{"pos":[4607,4658],"content":"<bpt id=\"p1\">&lt;a name=\"ccomunkarray__end\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CComUnkArray::end","linkify":"<a name=\"ccomunkarray__end\"></a>  CComUnkArray::end","source":"<a name=\"ccomunkarray__end\"></a>  CComUnkArray::end"},{"pos":[4662,4740],"content":"Returns a pointer to one past the last <bpt id=\"p1\">**</bpt>IUnknown<ept id=\"p1\">**</ept> pointer in the collection.","source":"Returns a pointer to one past the last **IUnknown** pointer in the collection."},{"pos":[4788,4800],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[4804,4851],"content":"A pointer to an <bpt id=\"p1\">**</bpt>IUnknown<ept id=\"p1\">**</ept> interface pointer.","source":"A pointer to an **IUnknown** interface pointer."},{"pos":[4861,4868],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[4872,5008],"content":"The <ph id=\"ph1\">`CComUnkArray`</ph> methods <bpt id=\"p1\">**</bpt>begin<ept id=\"p1\">**</ept> and <bpt id=\"p2\">**</bpt>end<ept id=\"p2\">**</ept> can be used to loop through all connection points, for example, when an event is fired.","source":"The `CComUnkArray` methods **begin** and **end** can be used to loop through all connection points, for example, when an event is fired."},{"pos":[5015,5094],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_ATL_COM#44<ept id=\"p2\">](../../atl/codesnippet/cpp/ccomunkarray-class_1.cpp)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_ATL_COM#44](../../atl/codesnippet/cpp/ccomunkarray-class_1.cpp)]"},{"pos":[5104,5167],"content":"<bpt id=\"p1\">&lt;a name=\"ccomunkarray__getcookie\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CComUnkArray::GetCookie","linkify":"<a name=\"ccomunkarray__getcookie\"></a>  CComUnkArray::GetCookie","source":"<a name=\"ccomunkarray__getcookie\"></a>  CComUnkArray::GetCookie"},{"pos":[5171,5251],"content":"Call this method to get the cookie associated with a given <bpt id=\"p1\">**</bpt>IUnknown<ept id=\"p1\">**</ept> pointer.","source":"Call this method to get the cookie associated with a given **IUnknown** pointer."},{"pos":[5317,5327],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"The <bpt id=\"p1\">**</bpt>IUnknown<ept id=\"p1\">**</ept> pointer for which the associated cookie is required.","pos":[5343,5412],"source":" The **IUnknown** pointer for which the associated cookie is required."},{"pos":[5422,5434],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[5438,5549],"content":"Returns the cookie associated with the <bpt id=\"p1\">**</bpt>IUnknown<ept id=\"p1\">**</ept> pointer, or 0 if no matching <bpt id=\"p2\">**</bpt>IUnknown<ept id=\"p2\">**</ept> pointer is found.","source":"Returns the cookie associated with the **IUnknown** pointer, or 0 if no matching **IUnknown** pointer is found."},{"pos":[5559,5566],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[5570,5690],"content":"If there is more than one instance of the same <bpt id=\"p1\">**</bpt>IUnknown<ept id=\"p1\">**</ept> pointer, this function returns the cookie for the first one.","source":"If there is more than one instance of the same **IUnknown** pointer, this function returns the cookie for the first one."},{"pos":[5700,5765],"content":"<bpt id=\"p1\">&lt;a name=\"ccomunkarray__getunknown\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CComUnkArray::GetUnknown","linkify":"<a name=\"ccomunkarray__getunknown\"></a>  CComUnkArray::GetUnknown","source":"<a name=\"ccomunkarray__getunknown\"></a>  CComUnkArray::GetUnknown"},{"pos":[5769,5849],"content":"Call this method to get the <bpt id=\"p1\">**</bpt>IUnknown<ept id=\"p1\">**</ept> pointer associated with a given cookie.","source":"Call this method to get the **IUnknown** pointer associated with a given cookie."},{"pos":[5917,5927],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"The cookie for which the associated <bpt id=\"p1\">**</bpt>IUnknown<ept id=\"p1\">**</ept> pointer is required.","pos":[5945,6014],"source":" The cookie for which the associated **IUnknown** pointer is required."},{"pos":[6024,6036],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[6040,6113],"content":"Returns the <bpt id=\"p1\">**</bpt>IUnknown<ept id=\"p1\">**</ept> pointer, or NULL if no matching cookie is found.","source":"Returns the **IUnknown** pointer, or NULL if no matching cookie is found."},{"pos":[6123,6180],"content":"<bpt id=\"p1\">&lt;a name=\"ccomunkarray__remove\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CComUnkArray::Remove","linkify":"<a name=\"ccomunkarray__remove\"></a>  CComUnkArray::Remove","source":"<a name=\"ccomunkarray__remove\"></a>  CComUnkArray::Remove"},{"pos":[6184,6250],"content":"Call this method to remove an <bpt id=\"p1\">**</bpt>IUnknown<ept id=\"p1\">**</ept> pointer from the array.","source":"Call this method to remove an **IUnknown** pointer from the array."},{"pos":[6302,6312],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"The cookie referencing the <bpt id=\"p1\">**</bpt>IUnknown<ept id=\"p1\">**</ept> pointer to be removed from the array.","pos":[6330,6407],"source":" The cookie referencing the **IUnknown** pointer to be removed from the array."},{"pos":[6417,6429],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[6433,6497],"content":"Returns <bpt id=\"p1\">**</bpt>TRUE<ept id=\"p1\">**</ept> if the pointer is removed, <bpt id=\"p2\">**</bpt>FALSE<ept id=\"p2\">**</ept> otherwise.","source":"Returns **TRUE** if the pointer is removed, **FALSE** otherwise."},{"pos":[6506,6514],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>CComDynamicUnkArray Class<ept id=\"p1\">](../../atl/reference/ccomdynamicunkarray-class.md)</ept><ph id=\"ph1\"> </ph>","pos":[6518,6596],"source":"[CComDynamicUnkArray Class](../../atl/reference/ccomdynamicunkarray-class.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Class Overview<ept id=\"p1\">](../../atl/atl-class-overview.md)</ept>","pos":[6599,6649],"source":" [Class Overview](../../atl/atl-class-overview.md)"}],"content":"---\ntitle: \"CComUnkArray Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"ATL.CComUnkArray\"\n  - \"ATL.CComUnkArray<nMaxSize>\"\n  - \"ATL::CComUnkArray<nMaxSize>\"\n  - \"ATL::CComUnkArray\"\n  - \"CComUnkArray\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"connection points [C++], managing\"\n  - \"CComUnkArray class\"\nms.assetid: 5fd4b378-a7b5-4cc1-8866-8ab72a73639e\ncaps.latest.revision: 17\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# CComUnkArray Class\nThis class stores **IUnknown** pointers, and is designed to be used as a parameter to the [IConnectionPointImpl](../../atl/reference/iconnectionpointimpl-class.md) template class.  \n  \n## Syntax  \n  \n```\ntemplate<unsigned int nMaxSize>\nclass CComUnkArray\n```  \n  \n#### Parameters  \n *nMaxSize*  \n The maximum number of **IUnknown** pointers that can be held in the static array.  \n  \n## Members  \n  \n### Public Constructors  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CComUnkArray::CComUnkArray](#ccomunkarray__ccomunkarray)|Constructor.|  \n  \n### Public Methods  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CComUnkArray::Add](#ccomunkarray__add)|Call this method to add an **IUnknown** pointer to the array.|  \n|[CComUnkArray::begin](#ccomunkarray__begin)|Returns a pointer to the first **IUnknown** pointer in the collection.|  \n|[CComUnkArray::end](#ccomunkarray__end)|Returns a pointer to one past the last **IUnknown** pointer in the collection.|  \n|[CComUnkArray::GetCookie](#ccomunkarray__getcookie)|Call this method to get the cookie associated with a given **IUnknown** pointer.|  \n|[CComUnkArray::GetUnknown](#ccomunkarray__getunknown)|Call this method to get the **IUnknown** pointer associated with a given cookie.|  \n|[CComUnkArray::Remove](#ccomunkarray__remove)|Call this method to remove an **IUnknown** pointer from the array.|  \n  \n## Remarks  \n **CComUnkArray** holds a fixed number of **IUnknown** pointers, each an interface on a connection point. **CComUnkArray** can be used as a parameter to the [IConnectionPointImpl](../../atl/reference/iconnectionpointimpl-class.md) template class. **CComUnkArray\\<1>** is a template specialization of **CComUnkArray** that has been optimized for one connection point.  \n  \n The **CComUnkArray** methods [begin](#ccomunkarray__begin) and [end](#ccomunkarray__end) can be used to loop through all connection points (for example, when an event is fired).  \n  \n See [Adding Connection Points to an Object](../../atl/adding-connection-points-to-an-object.md) for details on automating creation of connection point proxies.  \n  \n> [!NOTE]\n> **Note** The class [CComDynamicUnkArray](../../atl/reference/ccomdynamicunkarray-class.md) is used by the **Add Class** wizard when creating a control which has Connection Points. If you wish to specify the number of Connection Points manually, change the reference from **CComDynamicUnkArray** to `CComUnkArray<` *n* `>`, where *n* is the number of connection points required.  \n  \n## Requirements  \n **Header:** atlcom.h  \n  \n##  <a name=\"ccomunkarray__add\"></a>  CComUnkArray::Add  \n Call this method to add an **IUnknown** pointer to the array.  \n  \n```\nDWORD Add(IUnknown* pUnk);\n```  \n  \n### Parameters  \n *pUnk*  \n Call this method to add an **IUnknown** pointer to the array.  \n  \n### Return Value  \n Returns the cookie associated with the newly added pointer, or 0 if the array is not large enough to contain the new pointer.  \n  \n##  <a name=\"ccomunkarray__begin\"></a>  CComUnkArray::begin  \n Returns a pointer to the beginning of the collection of **IUnknown** interface pointers.  \n  \n```\nIUnknown**\n    begin();\n```     \n  \n### Return Value  \n A pointer to an **IUnknown** interface pointer.  \n  \n### Remarks  \n The collection contains pointers to interfaces stored locally as **IUnknown**. You cast each **IUnknown** interface to the real interface type and then call through it. You do not need to query for the interface first.  \n  \n Before using the **IUnknown** interface, you should check that it is not **NULL**.  \n  \n##  <a name=\"ccomunkarray__ccomunkarray\"></a>  CComUnkArray::CComUnkArray  \n The constructor.  \n  \n```\nCComUnkArray();\n```  \n  \n### Remarks  \n Sets the collection to hold `nMaxSize` **IUnknown** pointers, and initializes the pointers to **NULL**.  \n  \n##  <a name=\"ccomunkarray__end\"></a>  CComUnkArray::end  \n Returns a pointer to one past the last **IUnknown** pointer in the collection.  \n  \n```\nIUnknown**\n    end();\n```     \n  \n### Return Value  \n A pointer to an **IUnknown** interface pointer.  \n  \n### Remarks  \n The `CComUnkArray` methods **begin** and **end** can be used to loop through all connection points, for example, when an event is fired.  \n  \n [!code-cpp[NVC_ATL_COM#44](../../atl/codesnippet/cpp/ccomunkarray-class_1.cpp)]  \n  \n##  <a name=\"ccomunkarray__getcookie\"></a>  CComUnkArray::GetCookie  \n Call this method to get the cookie associated with a given **IUnknown** pointer.  \n  \n```\nDWORD WINAPI GetCookie(IUnknown** ppFind);\n```  \n  \n### Parameters  \n `ppFind`  \n The **IUnknown** pointer for which the associated cookie is required.  \n  \n### Return Value  \n Returns the cookie associated with the **IUnknown** pointer, or 0 if no matching **IUnknown** pointer is found.  \n  \n### Remarks  \n If there is more than one instance of the same **IUnknown** pointer, this function returns the cookie for the first one.  \n  \n##  <a name=\"ccomunkarray__getunknown\"></a>  CComUnkArray::GetUnknown  \n Call this method to get the **IUnknown** pointer associated with a given cookie.  \n  \n```\nIUnknown* WINAPI GetUnknown(DWORD dwCookie);\n```  \n  \n### Parameters  \n `dwCookie`  \n The cookie for which the associated **IUnknown** pointer is required.  \n  \n### Return Value  \n Returns the **IUnknown** pointer, or NULL if no matching cookie is found.  \n  \n##  <a name=\"ccomunkarray__remove\"></a>  CComUnkArray::Remove  \n Call this method to remove an **IUnknown** pointer from the array.  \n  \n```\nBOOL Remove(DWORD dwCookie);\n```  \n  \n### Parameters  \n `dwCookie`  \n The cookie referencing the **IUnknown** pointer to be removed from the array.  \n  \n### Return Value  \n Returns **TRUE** if the pointer is removed, **FALSE** otherwise.  \n  \n## See Also  \n [CComDynamicUnkArray Class](../../atl/reference/ccomdynamicunkarray-class.md)   \n [Class Overview](../../atl/atl-class-overview.md)\n"}