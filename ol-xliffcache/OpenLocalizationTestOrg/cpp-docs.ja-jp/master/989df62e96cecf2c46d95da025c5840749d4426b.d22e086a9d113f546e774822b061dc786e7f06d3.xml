{"nodes":[{"pos":[12,59],"content":"multiset::value_comp (STL-CLR) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"multiset::value_comp (STL-CLR) | Microsoft Docs","pos":[0,47]}]},{"content":"multiset::value_comp (STL/CLR)","pos":[646,676]},{"content":"Copies the ordering delegate for two element values.","pos":[677,729]},{"content":"Syntax","pos":[738,744]},{"content":"Remarks","pos":[799,806]},{"content":"The member function returns the ordering delegate used to order the controlled sequence.","pos":[810,898]},{"content":"You use it to compare two element values.","pos":[899,940]},{"content":"Example","pos":[949,956]},{"content":"Requirements","pos":[1685,1697]},{"pos":[1701,1726],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> <ph id=\"ph1\">\\&lt;</ph>cliext/set&gt;","source":"**Header:** \\<cliext/set>"},{"pos":[1733,1754],"content":"<bpt id=\"p1\">**</bpt>Namespace:<ept id=\"p1\">**</ept> cliext","source":"**Namespace:** cliext"},{"content":"See Also","pos":[1763,1771]},{"content":"multiset (STL/CLR)","pos":[1776,1794]},{"content":"multiset::value_compare (STL/CLR)","pos":[1832,1865]},{"content":"multiset::value_type (STL/CLR)","pos":[1917,1947]}],"content":"---\ntitle: \"multiset::value_comp (STL-CLR) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"cliext::multiset::value_comp\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"value_comp member [STL/CLR]\"\nms.assetid: 6b418e7a-9e82-4d35-a25d-f07b79a875a6\ncaps.latest.revision: 8\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# multiset::value_comp (STL/CLR)\nCopies the ordering delegate for two element values.  \n  \n## Syntax  \n  \n```  \nvalue_compare^ value_comp();  \n```  \n  \n## Remarks  \n The member function returns the ordering delegate used to order the controlled sequence. You use it to compare two element values.  \n  \n## Example  \n  \n```  \n// cliext_multiset_value_comp.cpp   \n// compile with: /clr   \n#include <cliext/set>   \n  \ntypedef cliext::multiset<wchar_t> Mymultiset;   \nint main()   \n    {   \n    Mymultiset c1;   \n    Mymultiset::value_compare^ kcomp = c1.value_comp();   \n  \n    System::Console::WriteLine(\"compare(L'a', L'a') = {0}\",   \n        kcomp(L'a', L'a'));   \n    System::Console::WriteLine(\"compare(L'a', L'b') = {0}\",   \n        kcomp(L'a', L'b'));   \n    System::Console::WriteLine(\"compare(L'b', L'a') = {0}\",   \n        kcomp(L'b', L'a'));   \n    System::Console::WriteLine();   \n    return (0);   \n    }  \n  \n```  \n  \n```Output  \ncompare(L'a', L'a') = False  \ncompare(L'a', L'b') = True  \ncompare(L'b', L'a') = False  \n```  \n  \n## Requirements  \n **Header:** \\<cliext/set>  \n  \n **Namespace:** cliext  \n  \n## See Also  \n [multiset (STL/CLR)](../dotnet/multiset-stl-clr.md)   \n [multiset::value_compare (STL/CLR)](../dotnet/multiset-value-compare-stl-clr.md)   \n [multiset::value_type (STL/CLR)](../dotnet/multiset-value-type-stl-clr.md)"}