{"nodes":[{"pos":[12,48],"content":"fmin, fminf, fminl2 | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"fmin, fminf, fminl2 | Microsoft Docs","pos":[0,36]}]},{"pos":[1026,1044],"content":"fmin, fminf, fminl","linkify":"fmin, fminf, fminl","nodes":[{"content":"fmin, fminf, fminl","pos":[0,18]}]},{"content":"Determines the smaller of the two specified values.","pos":[1045,1096]},{"pos":[1105,1111],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[1450,1460],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"The first value to compare.","pos":[1471,1498]},{"content":"The second value to compare.","pos":[1512,1540]},{"pos":[1549,1561],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[1565,1614],"content":"If successful, returns the smaller of <ph id=\"ph1\">`x`</ph> or <ph id=\"ph2\">`y`</ph>.","source":"If successful, returns the smaller of `x` or `y`."},{"content":"Input","pos":[1621,1626]},{"content":"Result","pos":[1627,1633]},{"pos":[1667,1677],"content":"<ph id=\"ph1\">`x`</ph> is NaN","source":"`x` is NaN"},{"pos":[1686,1696],"content":"<ph id=\"ph1\">`y`</ph> is NaN","source":"`y` is NaN"},{"pos":[1705,1724],"content":"<ph id=\"ph1\">`x`</ph> and <ph id=\"ph2\">`y`</ph> are NaN","source":"`x` and `y` are NaN"},{"content":"nan","pos":[1725,1728]},{"pos":[1736,1904],"content":"The function does not cause <bpt id=\"p1\">[</bpt>_matherr<ept id=\"p1\">](../../c-runtime-library/reference/matherr.md)</ept> to be invoked, cause any floating-point exceptions, or change the value of <ph id=\"ph1\">`errno`</ph>.","source":"The function does not cause [_matherr](../../c-runtime-library/reference/matherr.md) to be invoked, cause any floating-point exceptions, or change the value of `errno`."},{"pos":[1913,1920],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Because C++ allows overloading, you can call overloads of <ph id=\"ph1\">`fmin`</ph> that take and return float and long double types.","pos":[1924,2038],"source":"Because C++ allows overloading, you can call overloads of `fmin` that take and return float and long double types."},{"content":"In a C program, <ph id=\"ph1\">`fmin`</ph> always takes and returns a double.","pos":[2039,2096],"source":" In a C program, `fmin` always takes and returns a double."},{"pos":[2105,2117],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"content":"Routine","pos":[2124,2131]},{"content":"Required header","pos":[2132,2147]},{"pos":[2192,2232],"content":"<ph id=\"ph1\">`fmin`</ph>,                <ph id=\"ph2\">`fminf`</ph>,  <ph id=\"ph3\">`fminl`</ph>","source":"`fmin`,                `fminf`,  `fminl`"},{"content":"C: <ph id=\"ph1\">\\&lt;</ph>math.h&gt;","pos":[2233,2245],"source":"C: \\<math.h>"},{"content":"C++: <ph id=\"ph1\">\\&lt;</ph>math.h&gt; or <ph id=\"ph2\">\\&lt;</ph>cmath&gt;","pos":[2258,2284],"source":"C++: \\<math.h> or \\<cmath>"},{"pos":[2292,2396],"content":"For additional compatibility information, see <bpt id=\"p1\">[</bpt>Compatibility<ept id=\"p1\">](../../c-runtime-library/compatibility.md)</ept>.","source":"For additional compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md)."},{"pos":[2405,2413],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"pos":[2417,2524],"content":"<bpt id=\"p1\">[</bpt>Alphabetical Function Reference<ept id=\"p1\">](../../c-runtime-library/reference/crt-alphabetical-function-reference.md)</ept>","source":"[Alphabetical Function Reference](../../c-runtime-library/reference/crt-alphabetical-function-reference.md)"}],"content":"---\ntitle: \"fmin, fminf, fminl2 | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"cpp\"\n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\napiname: \n  - \"fmin\"\n  - \"fminf\"\n  - \"fminl\"\napilocation: \n  - \"msvcrt.dll\"\n  - \"msvcr80.dll\"\n  - \"msvcr90.dll\"\n  - \"msvcr100.dll\"\n  - \"msvcr100_clr0400.dll\"\n  - \"msvcr110.dll\"\n  - \"msvcr110_clr0400.dll\"\n  - \"msvcr120.dll\"\n  - \"msvcr120_clr0400.dll\"\n  - \"ucrtbase.dll\"\n  - \"api-ms-win-crt-math-l1-1-0.dll\"\napitype: \"DLLExport\"\nf1_keywords: \n  - \"fmin\"\n  - \"fminf\"\n  - \"fminl\"\n  - \"math/fmin\"\n  - \"math/fminf\"\n  - \"math/fminl\"\nhelpviewer_keywords: \n  - \"fmin function\"\n  - \"fminf function\"\n  - \"fminl function\"\nms.assetid: 1916dfb5-99c1-4b0d-aefb-513525c3f2ac\ncaps.latest.revision: 5\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# fmin, fminf, fminl\nDetermines the smaller of the two specified values.  \n  \n## Syntax  \n  \n```  \ndouble fmin(  \n   double x,   \n   double y  \n);  \n  \nfloat fmin(  \n   float x,   \n   float y  \n); //C++ only  \n  \nlong double fmin(  \n   long double x,   \n   long double y  \n); //C++ only  \n  \nfloat fminf(  \n   float x,   \n   float y  \n);  \n  \nlong double fminl(  \n   long double x,   \n   long double y  \n);  \n  \n```  \n  \n#### Parameters  \n `x`  \n The first value to compare.  \n  \n `y`  \n The second value to compare.  \n  \n## Return Value  \n If successful, returns the smaller of `x` or `y`.  \n  \n|Input|Result|  \n|-----------|------------|  \n|`x` is NaN|`y`|  \n|`y` is NaN|`x`|  \n|`x` and `y` are NaN|nan|  \n  \n The function does not cause [_matherr](../../c-runtime-library/reference/matherr.md) to be invoked, cause any floating-point exceptions, or change the value of `errno`.  \n  \n## Remarks  \n Because C++ allows overloading, you can call overloads of `fmin` that take and return float and long double types. In a C program, `fmin` always takes and returns a double.  \n  \n## Requirements  \n  \n|Routine|Required header|  \n|-------------|---------------------|  \n|`fmin`,                `fminf`,  `fminl`|C: \\<math.h><br /><br /> C++: \\<math.h> or \\<cmath>|  \n  \n For additional compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md).  \n  \n## See Also  \n [Alphabetical Function Reference](../../c-runtime-library/reference/crt-alphabetical-function-reference.md)"}