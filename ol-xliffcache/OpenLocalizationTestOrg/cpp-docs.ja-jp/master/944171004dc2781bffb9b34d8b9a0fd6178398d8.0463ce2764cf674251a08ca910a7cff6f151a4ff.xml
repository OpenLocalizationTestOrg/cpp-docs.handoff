{"nodes":[{"pos":[12,61],"content":"Compiler Warning (level 1) C4461 | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Compiler Warning (level 1) C4461 | Microsoft Docs","pos":[0,49]}]},{"pos":[635,667],"content":"Compiler Warning (level 1) C4461","linkify":"Compiler Warning (level 1) C4461","nodes":[{"content":"Compiler Warning (level 1) C4461","pos":[0,32]}]},{"content":"'type' : this class has a finalizer 'finalizer' but no destructor 'dtor'","pos":[668,740]},{"content":"The presence of a finalizer in a type implies resources to delete.","pos":[747,813]},{"content":"Unless a finalizer is explicitly called from the type's destructor, the common language runtime determines when to run the finalizer, after your object goes out of scope.","pos":[814,984]},{"content":"If you define a destructor in the type and explicitly call the finalizer from the destructor, you can deterministically run your finalizer.","pos":[991,1130]},{"pos":[1137,1295],"content":"For more information, see <bpt id=\"p1\">[</bpt>Destructors and finalizers<ept id=\"p1\">](../../dotnet/how-to-define-and-consume-classes-and-structs-cpp-cli.md#BKMK_Destructors_and_finalizers)</ept>.","source":"For more information, see [Destructors and finalizers](../../dotnet/how-to-define-and-consume-classes-and-structs-cpp-cli.md#BKMK_Destructors_and_finalizers)."},{"pos":[1304,1311],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following sample generates C4461.","pos":[1315,1352]}],"content":"---\ntitle: \"Compiler Warning (level 1) C4461 | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"error-reference\"\nf1_keywords: \n  - \"C4461\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"C4461\"\nms.assetid: 104ffecc-3dd4-4cb1-89a8-81154fbe46d9\ncaps.latest.revision: 5\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"ru-ru\"\n  - \"zh-cn\"\n  - \"zh-tw\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"tr-tr\"\n---\n# Compiler Warning (level 1) C4461\n'type' : this class has a finalizer 'finalizer' but no destructor 'dtor'  \n  \n The presence of a finalizer in a type implies resources to delete. Unless a finalizer is explicitly called from the type's destructor, the common language runtime determines when to run the finalizer, after your object goes out of scope.  \n  \n If you define a destructor in the type and explicitly call the finalizer from the destructor, you can deterministically run your finalizer.  \n  \n For more information, see [Destructors and finalizers](../../dotnet/how-to-define-and-consume-classes-and-structs-cpp-cli.md#BKMK_Destructors_and_finalizers).  \n  \n## Example  \n The following sample generates C4461.  \n  \n```  \n// C4461.cpp  \n// compile with: /W1 /clr /c  \nref class A {  \nprotected:  \n   !A() {}   // C4461  \n};  \n  \n// OK  \nref struct B {  \n   ~B() {  \n      B::!B();  \n   }  \n  \n   !B() {}  \n};  \n```"}