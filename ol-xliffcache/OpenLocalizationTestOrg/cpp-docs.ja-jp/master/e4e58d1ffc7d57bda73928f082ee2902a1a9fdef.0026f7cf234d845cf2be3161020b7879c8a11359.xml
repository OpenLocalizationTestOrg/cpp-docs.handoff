{"nodes":[{"pos":[12,49],"content":"CMFCMenuButton Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"CMFCMenuButton Class | Microsoft Docs","pos":[0,37]}]},{"pos":[642,662],"content":"CMFCMenuButton Class","linkify":"CMFCMenuButton Class","nodes":[{"content":"CMFCMenuButton Class","pos":[0,20]}]},{"content":"A button that displays a pop-up menu and reports on the user's menu selections.","pos":[663,742]},{"pos":[751,757],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[824,831],"content":"Members","linkify":"Members","nodes":[{"content":"Members","pos":[0,7]}]},{"pos":[841,860],"content":"Public Constructors","linkify":"Public Constructors","nodes":[{"content":"Public Constructors","pos":[0,19]}]},{"content":"Name","pos":[867,871]},{"content":"Description","pos":[872,883]},{"pos":[921,986],"content":"<bpt id=\"p1\">[</bpt>CMFCMenuButton::CMFCMenuButton<ept id=\"p1\">](#cmfcmenubutton__cmfcmenubutton)</ept>","source":"[CMFCMenuButton::CMFCMenuButton](#cmfcmenubutton__cmfcmenubutton)"},{"pos":[987,1024],"content":"Constructs a <ph id=\"ph1\">`CMFCMenuButton`</ph> object.","source":"Constructs a `CMFCMenuButton` object."},{"pos":[1035,1049],"content":"Public Methods","linkify":"Public Methods","nodes":[{"content":"Public Methods","pos":[0,14]}]},{"content":"Name","pos":[1056,1060]},{"content":"Description","pos":[1061,1072]},{"pos":[1110,1185],"content":"<bpt id=\"p1\">[</bpt>CMFCMenuButton::PreTranslateMessage<ept id=\"p1\">](#cmfcmenubutton__pretranslatemessage)</ept>","source":"[CMFCMenuButton::PreTranslateMessage](#cmfcmenubutton__pretranslatemessage)"},{"content":"Called by the framework to translate window messages before they are dispatched.","pos":[1186,1266]},{"content":"(Overrides <ph id=\"ph1\">`CMFCButton::PreTranslateMessage`</ph>.)","pos":[1267,1313],"source":" (Overrides `CMFCButton::PreTranslateMessage`.)"},{"pos":[1318,1381],"content":"<bpt id=\"p1\">[</bpt>CMFCMenuButton::SizeToContent<ept id=\"p1\">](#cmfcmenubutton__sizetocontent)</ept>","source":"[CMFCMenuButton::SizeToContent](#cmfcmenubutton__sizetocontent)"},{"content":"Changes the size of the button according to its text and image size.","pos":[1382,1450]},{"pos":[1461,1473],"content":"Data Members","linkify":"Data Members","nodes":[{"content":"Data Members","pos":[0,12]}]},{"content":"Name","pos":[1480,1484]},{"content":"Description","pos":[1485,1496]},{"pos":[1534,1589],"content":"<bpt id=\"p1\">[</bpt>CMFCMenuButton::m_bOSMenu<ept id=\"p1\">](#cmfcmenubutton__m_bosmenu)</ept>","source":"[CMFCMenuButton::m_bOSMenu](#cmfcmenubutton__m_bosmenu)"},{"pos":[1590,1784],"content":"Specifies whether to display the default system pop-up menu or to use <bpt id=\"p1\">[</bpt>CContextMenuManager::TrackPopupMenu<ept id=\"p1\">](../../mfc/reference/ccontextmenumanager-class.md#ccontextmenumanager__trackpopupmenu)</ept>.","source":"Specifies whether to display the default system pop-up menu or to use [CContextMenuManager::TrackPopupMenu](../../mfc/reference/ccontextmenumanager-class.md#ccontextmenumanager__trackpopupmenu)."},{"pos":[1789,1852],"content":"<bpt id=\"p1\">[</bpt>CMFCMenuButton::m_bRightArrow<ept id=\"p1\">](#cmfcmenubutton__m_brightarrow)</ept>","source":"[CMFCMenuButton::m_bRightArrow](#cmfcmenubutton__m_brightarrow)"},{"content":"Specifies whether the pop-up menu will appear underneath or to the right of the button.","pos":[1853,1940]},{"pos":[1945,2010],"content":"<bpt id=\"p1\">[</bpt>CMFCMenuButton::m_bStayPressed<ept id=\"p1\">](#cmfcmenubutton__m_bstaypressed)</ept>","source":"[CMFCMenuButton::m_bStayPressed](#cmfcmenubutton__m_bstaypressed)"},{"content":"Specifies whether the menu button changes its state after the user releases the button.","pos":[2011,2098]},{"pos":[2103,2154],"content":"<bpt id=\"p1\">[</bpt>CMFCMenuButton::m_hMenu<ept id=\"p1\">](#cmfcmenubutton__m_hmenu)</ept>","source":"[CMFCMenuButton::m_hMenu](#cmfcmenubutton__m_hmenu)"},{"content":"A handle to the attached Windows menu.","pos":[2155,2193]},{"pos":[2198,2261],"content":"<bpt id=\"p1\">[</bpt>CMFCMenuButton::m_nMenuResult<ept id=\"p1\">](#cmfcmenubutton__m_nmenuresult)</ept>","source":"[CMFCMenuButton::m_nMenuResult](#cmfcmenubutton__m_nmenuresult)"},{"content":"An identifier that indicates which item the user selected from the pop-up menu.","pos":[2262,2341]},{"pos":[2351,2358],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The <ph id=\"ph1\">`CMFCMenuButton`</ph> class is derived from the <bpt id=\"p1\">[</bpt>CMFCButton Class<ept id=\"p1\">](../../mfc/reference/cmfcbutton-class.md)</ept> which is, in turn, derived from the <bpt id=\"p2\">[</bpt>CButton Class<ept id=\"p2\">](../../mfc/reference/cbutton-class.md)</ept>.","pos":[2362,2559],"source":"The `CMFCMenuButton` class is derived from the [CMFCButton Class](../../mfc/reference/cmfcbutton-class.md) which is, in turn, derived from the [CButton Class](../../mfc/reference/cbutton-class.md)."},{"content":"Therefore, you can use <ph id=\"ph1\">`CMFCMenuButton`</ph> in your code the same way you would use <ph id=\"ph2\">`CButton`</ph>.","pos":[2560,2650],"source":" Therefore, you can use `CMFCMenuButton` in your code the same way you would use `CButton`."},{"content":"When you create a <ph id=\"ph1\">`CMFCMenuButton`</ph>, you must pass in a handle to the associated pop-up menu.","pos":[2657,2749],"source":"When you create a `CMFCMenuButton`, you must pass in a handle to the associated pop-up menu."},{"content":"Next, call the function <ph id=\"ph1\">`CMFCMenuButton::SizeToContent`</ph>.","pos":[2750,2806],"source":" Next, call the function `CMFCMenuButton::SizeToContent`."},{"content":"<ph id=\"ph1\">`CMFCMenuButton::SizeToContent`</ph> checks that the button size is sufficient to include an arrow that points to the location where the pop-up window will appear - namely, underneath or to the right of the button.","pos":[2807,3016],"source":"`CMFCMenuButton::SizeToContent` checks that the button size is sufficient to include an arrow that points to the location where the pop-up window will appear - namely, underneath or to the right of the button."},{"pos":[3025,3032],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following example demonstrates how to set the handle of the menu attached to the button, resize the button according to its text and image size, and set the pop-up menu that is displayed by the framework.","pos":[3036,3244]},{"content":"This code snippet is part of the <bpt id=\"p1\">[</bpt>New Controls sample<ept id=\"p1\">](../../visual-cpp-samples.md)</ept>.","pos":[3245,3329],"source":" This code snippet is part of the [New Controls sample](../../visual-cpp-samples.md)."},{"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_MFC_NewControls#38<ept id=\"p2\">](../../mfc/reference/codesnippet/cpp/cmfcmenubutton-class_1.h)</ept><ept id=\"p1\">]</ept>","pos":[3336,3433],"source":"[!code-cpp[NVC_MFC_NewControls#38](../../mfc/reference/codesnippet/cpp/cmfcmenubutton-class_1.h)]"},{"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_MFC_NewControls#39<ept id=\"p2\">](../../mfc/reference/codesnippet/cpp/cmfcmenubutton-class_2.cpp)</ept><ept id=\"p1\">]</ept>","pos":[3436,3535],"source":"[!code-cpp[NVC_MFC_NewControls#39](../../mfc/reference/codesnippet/cpp/cmfcmenubutton-class_2.cpp)]"},{"pos":[3544,3565],"content":"Inheritance Hierarchy","linkify":"Inheritance Hierarchy","nodes":[{"content":"Inheritance Hierarchy","pos":[0,21]}]},{"pos":[3569,3616],"content":"<bpt id=\"p1\">[</bpt>CObject<ept id=\"p1\">](../../mfc/reference/cobject-class.md)</ept>","source":"[CObject](../../mfc/reference/cobject-class.md)"},{"pos":[3623,3676],"content":"<bpt id=\"p1\">[</bpt>CCmdTarget<ept id=\"p1\">](../../mfc/reference/ccmdtarget-class.md)</ept>","source":"[CCmdTarget](../../mfc/reference/ccmdtarget-class.md)"},{"pos":[3683,3724],"content":"<bpt id=\"p1\">[</bpt>CWnd<ept id=\"p1\">](../../mfc/reference/cwnd-class.md)</ept>","source":"[CWnd](../../mfc/reference/cwnd-class.md)"},{"pos":[3731,3778],"content":"<bpt id=\"p1\">[</bpt>CButton<ept id=\"p1\">](../../mfc/reference/cbutton-class.md)</ept>","source":"[CButton](../../mfc/reference/cbutton-class.md)"},{"pos":[3785,3838],"content":"<bpt id=\"p1\">[</bpt>CMFCButton<ept id=\"p1\">](../../mfc/reference/cmfcbutton-class.md)</ept>","source":"[CMFCButton](../../mfc/reference/cmfcbutton-class.md)"},{"pos":[3845,3906],"content":"<bpt id=\"p1\">[</bpt>CMFCMenuButton<ept id=\"p1\">](../../mfc/reference/cmfcmenubutton-class.md)</ept>","source":"[CMFCMenuButton](../../mfc/reference/cmfcmenubutton-class.md)"},{"pos":[3915,3927],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[3931,3958],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> afxmenubutton.h","source":"**Header:** afxmenubutton.h"},{"pos":[3968,4045],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcmenubutton__cmfcmenubutton\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCMenuButton::CMFCMenuButton","linkify":"<a name=\"cmfcmenubutton__cmfcmenubutton\"></a>  CMFCMenuButton::CMFCMenuButton","source":"<a name=\"cmfcmenubutton__cmfcmenubutton\"></a>  CMFCMenuButton::CMFCMenuButton"},{"pos":[4049,4135],"content":"Constructs a new <bpt id=\"p1\">[</bpt>CMFCMenuButton<ept id=\"p1\">](../../mfc/reference/cmfcmenubutton-class.md)</ept> object.","source":"Constructs a new [CMFCMenuButton](../../mfc/reference/cmfcmenubutton-class.md) object."},{"pos":[4178,4245],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcmenubutton__m_bosmenu\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCMenuButton::m_bOSMenu","linkify":"<a name=\"cmfcmenubutton__m_bosmenu\"></a>  CMFCMenuButton::m_bOSMenu","source":"<a name=\"cmfcmenubutton__m_bosmenu\"></a>  CMFCMenuButton::m_bOSMenu"},{"content":"A Boolean member variable that indicates which pop-up menu the framework displays.","pos":[4249,4331]},{"pos":[4374,4381],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"If <ph id=\"ph1\">`m_bOSMenu`</ph> is <ph id=\"ph2\">`TRUE`</ph>, the framework calls the inherited <ph id=\"ph3\">`TrackPopupMenu`</ph> method for this object.","pos":[4385,4485],"source":"If `m_bOSMenu` is `TRUE`, the framework calls the inherited `TrackPopupMenu` method for this object."},{"content":"Otherwise, the framework calls <bpt id=\"p1\">[</bpt>CContextMenuManager::TrackPopupMenu<ept id=\"p1\">](../../mfc/reference/ccontextmenumanager-class.md#ccontextmenumanager__trackpopupmenu)</ept>.","pos":[4486,4641],"source":" Otherwise, the framework calls [CContextMenuManager::TrackPopupMenu](../../mfc/reference/ccontextmenumanager-class.md#ccontextmenumanager__trackpopupmenu)."},{"pos":[4651,4726],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcmenubutton__m_brightarrow\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCMenuButton::m_bRightArrow","linkify":"<a name=\"cmfcmenubutton__m_brightarrow\"></a>  CMFCMenuButton::m_bRightArrow","source":"<a name=\"cmfcmenubutton__m_brightarrow\"></a>  CMFCMenuButton::m_bRightArrow"},{"content":"A Boolean member variable that indicates the location of the pop-up menu.","pos":[4730,4803]},{"pos":[4850,4857],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"When the user presses the menu button, the application shows a pop-up menu.","pos":[4861,4936]},{"content":"The framework will display the pop-up menu either under the button or to the right of the button.","pos":[4937,5034]},{"content":"The button also has a small arrow that indicates where the pop-up menu will appear.","pos":[5035,5118]},{"content":"If <ph id=\"ph1\">`m_bRightArrow`</ph> is <ph id=\"ph2\">`TRUE`</ph>, the framework displays the pop-up menu to the right of the button.","pos":[5119,5215],"source":" If `m_bRightArrow` is `TRUE`, the framework displays the pop-up menu to the right of the button."},{"content":"Otherwise, it displays the pop-up menu under the button.","pos":[5216,5272]},{"pos":[5282,5359],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcmenubutton__m_bstaypressed\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCMenuButton::m_bStayPressed","linkify":"<a name=\"cmfcmenubutton__m_bstaypressed\"></a>  CMFCMenuButton::m_bStayPressed","source":"<a name=\"cmfcmenubutton__m_bstaypressed\"></a>  CMFCMenuButton::m_bStayPressed"},{"content":"A Boolean member variable that indicates whether the menu button appears pressed while the user makes a selection from the pop-up menu.","pos":[5363,5498]},{"pos":[5546,5553],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"If the <ph id=\"ph1\">`m_bStayPressed`</ph> member is <ph id=\"ph2\">`FALSE`</ph>, the menu button does not become pressed when the uses clicks the button.","pos":[5557,5672],"source":"If the `m_bStayPressed` member is `FALSE`, the menu button does not become pressed when the uses clicks the button."},{"content":"In this case, the framework displays only the pop-up menu.","pos":[5673,5731]},{"content":"If the <ph id=\"ph1\">`m_bStayPressed`</ph> member is <ph id=\"ph2\">`TRUE`</ph>, the menu button becomes pressed when the user clicks the button.","pos":[5738,5844],"source":"If the `m_bStayPressed` member is `TRUE`, the menu button becomes pressed when the user clicks the button."},{"content":"It stays pressed until after the user closes the pop-up menu, either by making a selection or canceling.","pos":[5845,5949]},{"pos":[5959,6022],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcmenubutton__m_hmenu\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCMenuButton::m_hMenu","linkify":"<a name=\"cmfcmenubutton__m_hmenu\"></a>  CMFCMenuButton::m_hMenu","source":"<a name=\"cmfcmenubutton__m_hmenu\"></a>  CMFCMenuButton::m_hMenu"},{"content":"The handle to the attached menu.","pos":[6026,6058]},{"pos":[6100,6107],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The framework displays the menu indicated by this member variable when the user clicks the menu button.","pos":[6111,6214]},{"pos":[6224,6299],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcmenubutton__m_nmenuresult\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCMenuButton::m_nMenuResult","linkify":"<a name=\"cmfcmenubutton__m_nmenuresult\"></a>  CMFCMenuButton::m_nMenuResult","source":"<a name=\"cmfcmenubutton__m_nmenuresult\"></a>  CMFCMenuButton::m_nMenuResult"},{"content":"An integer that indicates which item the user selects from the pop-up menu.","pos":[6303,6378]},{"pos":[6424,6431],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The value of this member variable is zero if the user cancels the menu without making a selection or if an error occurs.","pos":[6435,6555]},{"pos":[6565,6652],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcmenubutton__pretranslatemessage\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCMenuButton::PreTranslateMessage","linkify":"<a name=\"cmfcmenubutton__pretranslatemessage\"></a>  CMFCMenuButton::PreTranslateMessage","source":"<a name=\"cmfcmenubutton__pretranslatemessage\"></a>  CMFCMenuButton::PreTranslateMessage"},{"content":"Called by the framework to translate window messages before they are dispatched.","pos":[6656,6736]},{"pos":[6806,6816],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`pMsg`</ph>","pos":[6820,6831],"source":"[in] `pMsg`"},{"content":"Points to a <bpt id=\"p1\">[</bpt>MSG<ept id=\"p1\">](../../mfc/reference/msg-structure1.md)</ept> structure that contains the message to process.","pos":[6835,6939],"source":" Points to a [MSG](../../mfc/reference/msg-structure1.md) structure that contains the message to process."},{"pos":[6949,6961],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Nonzero if the message was translated and should not be dispatched; 0 if the message was not translated and should be dispatched.","pos":[6965,7094]},{"pos":[7104,7111],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[7121,7196],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcmenubutton__sizetocontent\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCMenuButton::SizeToContent","linkify":"<a name=\"cmfcmenubutton__sizetocontent\"></a>  CMFCMenuButton::SizeToContent","source":"<a name=\"cmfcmenubutton__sizetocontent\"></a>  CMFCMenuButton::SizeToContent"},{"content":"Changes the size of the button according to its text size and image size.","pos":[7200,7273]},{"pos":[7351,7361],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`bCalcOnly`</ph>","pos":[7365,7381],"source":"[in] `bCalcOnly`"},{"content":"A Boolean parameter that indicates whether this method resizes the button .","pos":[7385,7460]},{"pos":[7470,7482],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[7486,7593],"content":"A <bpt id=\"p1\">[</bpt>CSize<ept id=\"p1\">](../../atl-mfc-shared/reference/csize-class.md)</ept> object that specifies the new size for the button.","source":"A [CSize](../../atl-mfc-shared/reference/csize-class.md) object that specifies the new size for the button."},{"pos":[7603,7610],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[7614,7730],"content":"If you call this function and <ph id=\"ph1\">`bCalcOnly`</ph> is <ph id=\"ph2\">`TRUE`</ph>, <ph id=\"ph3\">`SizeToContent`</ph> will calculate only the new size of the button.","source":"If you call this function and `bCalcOnly` is `TRUE`, `SizeToContent` will calculate only the new size of the button."},{"content":"The new size of the button is calculated to fit the button text, image, and arrow.","pos":[7737,7819]},{"content":"The framework also adds in predefined margins of 10 pixels for the horizontal edge and 5 pixels for the vertical edge.","pos":[7820,7938]},{"pos":[7947,7955],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Hierarchy Chart<ept id=\"p1\">](../../mfc/hierarchy-chart.md)</ept><ph id=\"ph1\"> </ph>","pos":[7959,8007],"source":"[Hierarchy Chart](../../mfc/hierarchy-chart.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Classes<ept id=\"p1\">](../../mfc/reference/mfc-classes.md)</ept><ph id=\"ph1\"> </ph>","pos":[8010,8057],"source":" [Classes](../../mfc/reference/mfc-classes.md) "},{"content":"<bpt id=\"p1\"> [</bpt>CMFCButton Class<ept id=\"p1\">](../../mfc/reference/cmfcbutton-class.md)</ept>","pos":[8060,8120],"source":" [CMFCButton Class](../../mfc/reference/cmfcbutton-class.md)"}],"content":"---\ntitle: \"CMFCMenuButton Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"CMFCMenuButton\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"CMFCMenuButton class\"\nms.assetid: 53d3d459-1e5a-47c5-8b7f-2e61f6af5187\ncaps.latest.revision: 32\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"ru-ru\"\n  - \"zh-cn\"\n  - \"zh-tw\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"tr-tr\"\n---\n# CMFCMenuButton Class\nA button that displays a pop-up menu and reports on the user's menu selections.  \n  \n## Syntax  \n  \n```  \nclass CMFCMenuButton : public CMFCButton  \n```  \n  \n## Members  \n  \n### Public Constructors  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CMFCMenuButton::CMFCMenuButton](#cmfcmenubutton__cmfcmenubutton)|Constructs a `CMFCMenuButton` object.|  \n  \n### Public Methods  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CMFCMenuButton::PreTranslateMessage](#cmfcmenubutton__pretranslatemessage)|Called by the framework to translate window messages before they are dispatched. (Overrides `CMFCButton::PreTranslateMessage`.)|  \n|[CMFCMenuButton::SizeToContent](#cmfcmenubutton__sizetocontent)|Changes the size of the button according to its text and image size.|  \n  \n### Data Members  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CMFCMenuButton::m_bOSMenu](#cmfcmenubutton__m_bosmenu)|Specifies whether to display the default system pop-up menu or to use [CContextMenuManager::TrackPopupMenu](../../mfc/reference/ccontextmenumanager-class.md#ccontextmenumanager__trackpopupmenu).|  \n|[CMFCMenuButton::m_bRightArrow](#cmfcmenubutton__m_brightarrow)|Specifies whether the pop-up menu will appear underneath or to the right of the button.|  \n|[CMFCMenuButton::m_bStayPressed](#cmfcmenubutton__m_bstaypressed)|Specifies whether the menu button changes its state after the user releases the button.|  \n|[CMFCMenuButton::m_hMenu](#cmfcmenubutton__m_hmenu)|A handle to the attached Windows menu.|  \n|[CMFCMenuButton::m_nMenuResult](#cmfcmenubutton__m_nmenuresult)|An identifier that indicates which item the user selected from the pop-up menu.|  \n  \n## Remarks  \n The `CMFCMenuButton` class is derived from the [CMFCButton Class](../../mfc/reference/cmfcbutton-class.md) which is, in turn, derived from the [CButton Class](../../mfc/reference/cbutton-class.md). Therefore, you can use `CMFCMenuButton` in your code the same way you would use `CButton`.  \n  \n When you create a `CMFCMenuButton`, you must pass in a handle to the associated pop-up menu. Next, call the function `CMFCMenuButton::SizeToContent`. `CMFCMenuButton::SizeToContent` checks that the button size is sufficient to include an arrow that points to the location where the pop-up window will appear - namely, underneath or to the right of the button.  \n  \n## Example  \n The following example demonstrates how to set the handle of the menu attached to the button, resize the button according to its text and image size, and set the pop-up menu that is displayed by the framework. This code snippet is part of the [New Controls sample](../../visual-cpp-samples.md).  \n  \n [!code-cpp[NVC_MFC_NewControls#38](../../mfc/reference/codesnippet/cpp/cmfcmenubutton-class_1.h)]  \n[!code-cpp[NVC_MFC_NewControls#39](../../mfc/reference/codesnippet/cpp/cmfcmenubutton-class_2.cpp)]  \n  \n## Inheritance Hierarchy  \n [CObject](../../mfc/reference/cobject-class.md)  \n  \n [CCmdTarget](../../mfc/reference/ccmdtarget-class.md)  \n  \n [CWnd](../../mfc/reference/cwnd-class.md)  \n  \n [CButton](../../mfc/reference/cbutton-class.md)  \n  \n [CMFCButton](../../mfc/reference/cmfcbutton-class.md)  \n  \n [CMFCMenuButton](../../mfc/reference/cmfcmenubutton-class.md)  \n  \n## Requirements  \n **Header:** afxmenubutton.h  \n  \n##  <a name=\"cmfcmenubutton__cmfcmenubutton\"></a>  CMFCMenuButton::CMFCMenuButton  \n Constructs a new [CMFCMenuButton](../../mfc/reference/cmfcmenubutton-class.md) object.  \n  \n```  \nCMFCMenuButton();\n```  \n  \n##  <a name=\"cmfcmenubutton__m_bosmenu\"></a>  CMFCMenuButton::m_bOSMenu  \n A Boolean member variable that indicates which pop-up menu the framework displays.  \n  \n```  \nBOOL m_bOSMenu;  \n```  \n  \n### Remarks  \n If `m_bOSMenu` is `TRUE`, the framework calls the inherited `TrackPopupMenu` method for this object. Otherwise, the framework calls [CContextMenuManager::TrackPopupMenu](../../mfc/reference/ccontextmenumanager-class.md#ccontextmenumanager__trackpopupmenu).  \n  \n##  <a name=\"cmfcmenubutton__m_brightarrow\"></a>  CMFCMenuButton::m_bRightArrow  \n A Boolean member variable that indicates the location of the pop-up menu.  \n  \n```  \nBOOL m_bRightArrow;  \n```  \n  \n### Remarks  \n When the user presses the menu button, the application shows a pop-up menu. The framework will display the pop-up menu either under the button or to the right of the button. The button also has a small arrow that indicates where the pop-up menu will appear. If `m_bRightArrow` is `TRUE`, the framework displays the pop-up menu to the right of the button. Otherwise, it displays the pop-up menu under the button.  \n  \n##  <a name=\"cmfcmenubutton__m_bstaypressed\"></a>  CMFCMenuButton::m_bStayPressed  \n A Boolean member variable that indicates whether the menu button appears pressed while the user makes a selection from the pop-up menu.  \n  \n```  \nBOOL m_bStayPressed;  \n```  \n  \n### Remarks  \n If the `m_bStayPressed` member is `FALSE`, the menu button does not become pressed when the uses clicks the button. In this case, the framework displays only the pop-up menu.  \n  \n If the `m_bStayPressed` member is `TRUE`, the menu button becomes pressed when the user clicks the button. It stays pressed until after the user closes the pop-up menu, either by making a selection or canceling.  \n  \n##  <a name=\"cmfcmenubutton__m_hmenu\"></a>  CMFCMenuButton::m_hMenu  \n The handle to the attached menu.  \n  \n```  \nHMENU m_hMenu;  \n```  \n  \n### Remarks  \n The framework displays the menu indicated by this member variable when the user clicks the menu button.  \n  \n##  <a name=\"cmfcmenubutton__m_nmenuresult\"></a>  CMFCMenuButton::m_nMenuResult  \n An integer that indicates which item the user selects from the pop-up menu.  \n  \n```  \nint m_nMenuResult;  \n```  \n  \n### Remarks  \n The value of this member variable is zero if the user cancels the menu without making a selection or if an error occurs.  \n  \n##  <a name=\"cmfcmenubutton__pretranslatemessage\"></a>  CMFCMenuButton::PreTranslateMessage  \n Called by the framework to translate window messages before they are dispatched.  \n  \n```  \nvirtual BOOL PreTranslateMessage(MSG* pMsg);\n```  \n  \n### Parameters  \n [in] `pMsg`  \n Points to a [MSG](../../mfc/reference/msg-structure1.md) structure that contains the message to process.  \n  \n### Return Value  \n Nonzero if the message was translated and should not be dispatched; 0 if the message was not translated and should be dispatched.  \n  \n### Remarks  \n  \n##  <a name=\"cmfcmenubutton__sizetocontent\"></a>  CMFCMenuButton::SizeToContent  \n Changes the size of the button according to its text size and image size.  \n  \n```  \nvirtual CSize SizeToContent(BOOL bCalcOnly = FALSE);\n```  \n  \n### Parameters  \n [in] `bCalcOnly`  \n A Boolean parameter that indicates whether this method resizes the button .  \n  \n### Return Value  \n A [CSize](../../atl-mfc-shared/reference/csize-class.md) object that specifies the new size for the button.  \n  \n### Remarks  \n If you call this function and `bCalcOnly` is `TRUE`, `SizeToContent` will calculate only the new size of the button.  \n  \n The new size of the button is calculated to fit the button text, image, and arrow. The framework also adds in predefined margins of 10 pixels for the horizontal edge and 5 pixels for the vertical edge.  \n  \n## See Also  \n [Hierarchy Chart](../../mfc/hierarchy-chart.md)   \n [Classes](../../mfc/reference/mfc-classes.md)   \n [CMFCButton Class](../../mfc/reference/cmfcbutton-class.md)\n"}