{"nodes":[{"pos":[12,70],"content":"CDynamicParameterAccessor::GetParamStatus | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"CDynamicParameterAccessor::GetParamStatus | Microsoft Docs","pos":[0,58]}]},{"content":"CDynamicParameterAccessor::GetParamStatus","pos":[834,875]},{"content":"Retrieves the status of the specified parameter stored in the buffer.","pos":[876,945]},{"content":"Syntax","pos":[954,960]},{"content":"Parameters","pos":[1142,1152]},{"content":"[in] The parameter number (offset from 1).","pos":[1168,1210]},{"content":"Parameter 0 is reserved for return values.","pos":[1211,1253]},{"content":"The parameter number is the index of the parameter based on its order in the SQL or stored procedure call.","pos":[1254,1360]},{"content":"See <bpt id=\"p1\">[</bpt>SetParam<ept id=\"p1\">](../../data/oledb/cdynamicparameteraccessor-setparam.md)</ept> for an example.","pos":[1361,1447],"source":" See [SetParam](../../data/oledb/cdynamicparameteraccessor-setparam.md) for an example."},{"content":"[out] A pointer to the variable containing the <ph id=\"ph1\">`DBSTATUS`</ph> status of the specified parameter.","pos":[1467,1559],"source":" [out] A pointer to the variable containing the `DBSTATUS` status of the specified parameter."},{"content":"For information on <ph id=\"ph1\">`DBSTATUS`</ph> values, see <bpt id=\"p1\">[</bpt>Status<ept id=\"p1\">](https://msdn.microsoft.com/en-us/library/ms722617.aspx)</ept> in the <bpt id=\"p2\">*</bpt>OLE DB Programmer's Reference<ept id=\"p2\">*</ept>, or search for <ph id=\"ph2\">`DBSTATUS`</ph> in oledb.h.","pos":[1560,1743],"source":" For information on `DBSTATUS` values, see [Status](https://msdn.microsoft.com/en-us/library/ms722617.aspx) in the *OLE DB Programmer's Reference*, or search for `DBSTATUS` in oledb.h."},{"content":"Remarks","pos":[1752,1759]},{"content":"The first override returns <bpt id=\"p1\">**</bpt>true<ept id=\"p1\">**</ept> on success or <bpt id=\"p2\">**</bpt>false<ept id=\"p2\">**</ept> on failure.","pos":[1763,1834],"source":"The first override returns **true** on success or **false** on failure."},{"content":"The second override points to the memory containing the status of the specified parameter.","pos":[1835,1925]},{"content":"Requirements","pos":[1934,1946]},{"pos":[1950,1972],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> atldbcli.h","source":"**Header:** atldbcli.h"},{"content":"See Also","pos":[1981,1989]},{"content":"CDynamicParameterAccessor Class","pos":[1994,2025]}],"content":"---\ntitle: \"CDynamicParameterAccessor::GetParamStatus | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"CDynamicParameterAccessor::GetParamStatus\"\n  - \"CDynamicParameterAccessor.GetParamStatus\"\n  - \"ATL.CDynamicParameterAccessor.GetParamStatus\"\n  - \"ATL::CDynamicParameterAccessor::GetParamStatus\"\n  - \"GetParamStatus\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"GetParamStatus method\"\nms.assetid: 9300225a-616c-4a7d-82d0-8c2ecd4d8185\ncaps.latest.revision: 8\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# CDynamicParameterAccessor::GetParamStatus\nRetrieves the status of the specified parameter stored in the buffer.  \n  \n## Syntax  \n  \n```  \n  \n      bool GetParamStatus(  \n   DBORDINAL nParam,  \n   DBSTATUS* pStatus  \n);  \nDBSTATUS* GetParamStatus(   \n   DBORDINAL nParam    \n) const throw( );  \n```  \n  \n#### Parameters  \n `nParam`  \n [in] The parameter number (offset from 1). Parameter 0 is reserved for return values. The parameter number is the index of the parameter based on its order in the SQL or stored procedure call. See [SetParam](../../data/oledb/cdynamicparameteraccessor-setparam.md) for an example.  \n  \n `pStatus`  \n [out] A pointer to the variable containing the `DBSTATUS` status of the specified parameter. For information on `DBSTATUS` values, see [Status](https://msdn.microsoft.com/en-us/library/ms722617.aspx) in the *OLE DB Programmer's Reference*, or search for `DBSTATUS` in oledb.h.  \n  \n## Remarks  \n The first override returns **true** on success or **false** on failure. The second override points to the memory containing the status of the specified parameter.  \n  \n## Requirements  \n **Header:** atldbcli.h  \n  \n## See Also  \n [CDynamicParameterAccessor Class](../../data/oledb/cdynamicparameteraccessor-class.md)"}