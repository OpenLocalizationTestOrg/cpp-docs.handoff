{"nodes":[{"pos":[12,51],"content":"partial_sort (STL-CLR) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"partial_sort (STL-CLR) | Microsoft Docs","pos":[0,39]}]},{"content":"partial_sort (STL/CLR)","pos":[634,656]},{"content":"Arranges a specified number of the smaller elements in a range into a nondescending order or according to an ordering criterion specified by a binary predicate.","pos":[657,817]},{"content":"Syntax","pos":[826,832]},{"content":"Remarks","pos":[1086,1093]},{"content":"This function behaves the same as the STL function <ph id=\"ph1\">`partial_sort`</ph>.","pos":[1097,1163],"source":"This function behaves the same as the STL function `partial_sort`."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>partial_sort<ept id=\"p1\">](http://msdn.microsoft.com/Library/327453e4-16c0-423c-bc1a-abea8ca63157)</ept>.","pos":[1164,1277],"source":" For more information, see [partial_sort](http://msdn.microsoft.com/Library/327453e4-16c0-423c-bc1a-abea8ca63157)."},{"content":"Requirements","pos":[1286,1298]},{"pos":[1302,1333],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> <ph id=\"ph1\">\\&lt;</ph>cliext/algorithm&gt;","source":"**Header:** \\<cliext/algorithm>"},{"pos":[1340,1361],"content":"<bpt id=\"p1\">**</bpt>Namespace:<ept id=\"p1\">**</ept> cliext","source":"**Namespace:** cliext"},{"content":"See Also","pos":[1370,1378]},{"content":"algorithm (STL/CLR)","pos":[1383,1402]}],"content":"---\ntitle: \"partial_sort (STL-CLR) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"cliext::partial_sort\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"partial_sort function [STL/CLR]\"\nms.assetid: 5a73b275-aef0-4bda-8ae3-7c1196fe49c4\ncaps.latest.revision: 4\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# partial_sort (STL/CLR)\nArranges a specified number of the smaller elements in a range into a nondescending order or according to an ordering criterion specified by a binary predicate.  \n  \n## Syntax  \n  \n```  \ntemplate<class _RanIt> inline  \n    void partial_sort(_RanIt _First, _RanIt _Mid, _RanIt _Last);  \ntemplate<class _RanIt, class _Pr> inline  \n    void partial_sort(_RanIt _First, _RanIt _Mid, _RanIt _Last,  \n        _Pr _Pred);  \n```  \n  \n## Remarks  \n This function behaves the same as the STL function `partial_sort`. For more information, see [partial_sort](http://msdn.microsoft.com/Library/327453e4-16c0-423c-bc1a-abea8ca63157).  \n  \n## Requirements  \n **Header:** \\<cliext/algorithm>  \n  \n **Namespace:** cliext  \n  \n## See Also  \n [algorithm (STL/CLR)](../dotnet/algorithm-stl-clr.md)"}