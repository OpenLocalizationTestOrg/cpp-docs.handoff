{"nodes":[{"pos":[12,49],"content":"Compiler Error C2676 | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Compiler Error C2676 | Microsoft Docs","pos":[0,37]}]},{"content":"Compiler Error C2676","pos":[624,644]},{"content":"binary 'operator' : 'type' does not define this operator or a conversion to a type acceptable to the predefined operator","pos":[645,765]},{"content":"To use the operator, you must overload it for the specified type or define a conversion to a type for which the operator is defined.","pos":[772,904]},{"content":"Example","pos":[913,920]},{"content":"The following sample generates C2676.","pos":[924,961]},{"content":"Example","pos":[1542,1549]},{"pos":[1553,1656],"content":"C2676 can also occur if you attempt to do pointer arithmetic on the <ph id=\"ph1\">`this`</ph> pointer of a reference type.","source":"C2676 can also occur if you attempt to do pointer arithmetic on the `this` pointer of a reference type."},{"content":"The <ph id=\"ph1\">`this`</ph> pointer is of type handle in a reference type.","pos":[1663,1720],"source":"The `this` pointer is of type handle in a reference type."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Semantics of the this pointer<ept id=\"p1\">](../../dotnet/how-to-define-and-consume-classes-and-structs-cpp-cli.md#BKMK_Semantics_of_the_this_pointer)</ept>.","pos":[1721,1885],"source":" For more information, see [Semantics of the this pointer](../../dotnet/how-to-define-and-consume-classes-and-structs-cpp-cli.md#BKMK_Semantics_of_the_this_pointer)."},{"content":"The following sample generates C2676.","pos":[1892,1929]}],"content":"---\ntitle: \"Compiler Error C2676 | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"error-reference\"\nf1_keywords: \n  - \"C2676\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"C2676\"\nms.assetid: 838a5e34-c92f-4f65-a597-e150bf8cf737\ncaps.latest.revision: 11\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"ru-ru\"\n  - \"zh-cn\"\n  - \"zh-tw\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"tr-tr\"\n---\n# Compiler Error C2676\nbinary 'operator' : 'type' does not define this operator or a conversion to a type acceptable to the predefined operator  \n  \n To use the operator, you must overload it for the specified type or define a conversion to a type for which the operator is defined.  \n  \n## Example  \n The following sample generates C2676.  \n  \n```  \n// C2676.cpp  \n// C2676 expected  \nstruct C {  \n   C();  \n} c;  \n  \nstruct D {  \n   D();  \n   D operator >>( C& ){return * new D;}  \n   D operator <<( C& ){return * new D;}  \n} d;  \n  \nstruct E {  \n   // operator int();  \n};  \n  \nint main() {  \n   d >> c;  \n   d << c;  \n   E e1, e2;  \n   e1 == e2;   // uncomment operator int in class E, then  \n               // it is OK even though neither E::operator==(E) nor   \n               // operator==(E, E) defined. Uses the conversion to int   \n               // and then the builtin-operator==(int, int)  \n}  \n```  \n  \n## Example  \n C2676 can also occur if you attempt to do pointer arithmetic on the `this` pointer of a reference type.  \n  \n The `this` pointer is of type handle in a reference type. For more information, see [Semantics of the this pointer](../../dotnet/how-to-define-and-consume-classes-and-structs-cpp-cli.md#BKMK_Semantics_of_the_this_pointer).  \n  \n The following sample generates C2676.  \n  \n```  \n// C2676_a.cpp  \n// compile with: /clr  \nusing namespace System;  \n  \nref struct A {  \n   property Double default[Double] {  \n      Double get(Double data) {  \n         return data*data;  \n      }  \n   }  \n  \n   A() {  \n      Console::WriteLine(\"{0}\", this + 3.3);   // C2676  \n      Console::WriteLine(\"{0}\", this[3.3]);   // OK  \n   }  \n};  \n  \nint main() {  \n   A ^ mya = gcnew A();  \n}  \n```"}