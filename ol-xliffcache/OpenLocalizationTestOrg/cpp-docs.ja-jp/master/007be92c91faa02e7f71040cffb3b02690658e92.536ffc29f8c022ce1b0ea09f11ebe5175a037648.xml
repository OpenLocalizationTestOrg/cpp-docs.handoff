{"nodes":[{"pos":[12,47],"content":"CMonikerFile Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"CMonikerFile Class | Microsoft Docs","pos":[0,35]}]},{"pos":[689,707],"content":"CMonikerFile Class","linkify":"CMonikerFile Class","nodes":[{"content":"CMonikerFile Class","pos":[0,18]}]},{"pos":[708,892],"content":"Represents a stream of data ( <bpt id=\"p1\">[</bpt>IStream<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/aa380034)</ept>) named by an <bpt id=\"p2\">[</bpt>IMoniker<ept id=\"p2\">](http://msdn.microsoft.com/library/windows/desktop/ms679705)</ept>.","source":"Represents a stream of data ( [IStream](http://msdn.microsoft.com/library/windows/desktop/aa380034)) named by an [IMoniker](http://msdn.microsoft.com/library/windows/desktop/ms679705)."},{"pos":[901,907],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[976,983],"content":"Members","linkify":"Members","nodes":[{"content":"Members","pos":[0,7]}]},{"pos":[993,1012],"content":"Public Constructors","linkify":"Public Constructors","nodes":[{"content":"Public Constructors","pos":[0,19]}]},{"content":"Name","pos":[1019,1023]},{"content":"Description","pos":[1024,1035]},{"pos":[1073,1130],"content":"<bpt id=\"p1\">[</bpt>CMonikerFile::CMonikerFile<ept id=\"p1\">](#cmonikerfile__cmonikerfile)</ept>","source":"[CMonikerFile::CMonikerFile](#cmonikerfile__cmonikerfile)"},{"pos":[1131,1166],"content":"Constructs a <ph id=\"ph1\">`CMonikerFile`</ph> object.","source":"Constructs a `CMonikerFile` object."},{"pos":[1177,1191],"content":"Public Methods","linkify":"Public Methods","nodes":[{"content":"Public Methods","pos":[0,14]}]},{"content":"Name","pos":[1198,1202]},{"content":"Description","pos":[1203,1214]},{"pos":[1252,1295],"content":"<bpt id=\"p1\">[</bpt>CMonikerFile::Close<ept id=\"p1\">](#cmonikerfile__close)</ept>","source":"[CMonikerFile::Close](#cmonikerfile__close)"},{"content":"Detaches and releases the stream and releases the moniker.","pos":[1296,1354]},{"pos":[1359,1404],"content":"<bpt id=\"p1\">[</bpt>CMonikerFile::Detach<ept id=\"p1\">](#cmonikerfile__detach)</ept>","source":"[CMonikerFile::Detach](#cmonikerfile__detach)"},{"pos":[1405,1461],"content":"Detaches the <ph id=\"ph1\">`IMoniker`</ph> from this <ph id=\"ph2\">`CMonikerFile`</ph> object.","source":"Detaches the `IMoniker` from this `CMonikerFile` object."},{"pos":[1466,1519],"content":"<bpt id=\"p1\">[</bpt>CMonikerFile::GetMoniker<ept id=\"p1\">](#cmonikerfile__getmoniker)</ept>","source":"[CMonikerFile::GetMoniker](#cmonikerfile__getmoniker)"},{"content":"Returns the current moniker.","pos":[1520,1548]},{"pos":[1553,1594],"content":"<bpt id=\"p1\">[</bpt>CMonikerFile::Open<ept id=\"p1\">](#cmonikerfile__open)</ept>","source":"[CMonikerFile::Open](#cmonikerfile__open)"},{"content":"Opens the specified file to obtain a stream.","pos":[1595,1639]},{"pos":[1650,1667],"content":"Protected Methods","linkify":"Protected Methods","nodes":[{"content":"Protected Methods","pos":[0,17]}]},{"content":"Name","pos":[1674,1678]},{"content":"Description","pos":[1679,1690]},{"pos":[1728,1795],"content":"<bpt id=\"p1\">[</bpt>CMonikerFile::CreateBindContext<ept id=\"p1\">](#cmonikerfile__createbindcontext)</ept>","source":"[CMonikerFile::CreateBindContext](#cmonikerfile__createbindcontext)"},{"content":"Obtains the bind context or creates a default initialized bind context.","pos":[1796,1867]},{"pos":[1877,1884],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"A moniker contains information much like a pathname to a file.","pos":[1888,1950]},{"content":"If you have a pointer to a moniker object's <ph id=\"ph1\">`IMoniker`</ph> interface, you can get access to the identified file without having any other specific information about where the file is actually located.","pos":[1951,2146],"source":" If you have a pointer to a moniker object's `IMoniker` interface, you can get access to the identified file without having any other specific information about where the file is actually located."},{"content":"Derived from <ph id=\"ph1\">`COleStreamFile`</ph>, <ph id=\"ph2\">`CMonikerFile`</ph> takes a moniker or a string representation it can make into a moniker and binds to the stream for which the moniker is a name.","pos":[2153,2325],"source":"Derived from `COleStreamFile`, `CMonikerFile` takes a moniker or a string representation it can make into a moniker and binds to the stream for which the moniker is a name."},{"content":"You can then read and write to that stream.","pos":[2326,2369]},{"content":"The real purpose of <ph id=\"ph1\">`CMonikerFile`</ph> is to provide simple access to <ph id=\"ph2\">`IStream`</ph>s named by <ph id=\"ph3\">`IMoniker`</ph>s so that you do not have to bind to a stream yourself, yet have <ph id=\"ph4\">`CFile`</ph> functionality to the stream.","pos":[2370,2567],"source":" The real purpose of `CMonikerFile` is to provide simple access to `IStream`s named by `IMoniker`s so that you do not have to bind to a stream yourself, yet have `CFile` functionality to the stream."},{"content":"<ph id=\"ph1\">`CMonikerFile`</ph> cannot be used to bind to anything other than a stream.","pos":[2574,2644],"source":"`CMonikerFile` cannot be used to bind to anything other than a stream."},{"content":"If you want to bind to storage or an object, you must use the <ph id=\"ph1\">`IMoniker`</ph> interface directly.","pos":[2645,2737],"source":" If you want to bind to storage or an object, you must use the `IMoniker` interface directly."},{"pos":[2744,3087],"content":"For more information on streams and monikers, see <bpt id=\"p1\">[</bpt>COleStreamFile<ept id=\"p1\">](../../mfc/reference/colestreamfile-class.md)</ept> in the <bpt id=\"p2\">*</bpt>MFC Reference<ept id=\"p2\">*</ept> and <bpt id=\"p3\">[</bpt>IStream<ept id=\"p3\">](http://msdn.microsoft.com/library/windows/desktop/aa380034)</ept> and <bpt id=\"p4\">[</bpt>IMoniker<ept id=\"p4\">](http://msdn.microsoft.com/library/windows/desktop/ms679705)</ept> in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"For more information on streams and monikers, see [COleStreamFile](../../mfc/reference/colestreamfile-class.md) in the *MFC Reference* and [IStream](http://msdn.microsoft.com/library/windows/desktop/aa380034) and [IMoniker](http://msdn.microsoft.com/library/windows/desktop/ms679705) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"pos":[3096,3117],"content":"Inheritance Hierarchy","linkify":"Inheritance Hierarchy","nodes":[{"content":"Inheritance Hierarchy","pos":[0,21]}]},{"pos":[3121,3168],"content":"<bpt id=\"p1\">[</bpt>CObject<ept id=\"p1\">](../../mfc/reference/cobject-class.md)</ept>","source":"[CObject](../../mfc/reference/cobject-class.md)"},{"pos":[3175,3218],"content":"<bpt id=\"p1\">[</bpt>CFile<ept id=\"p1\">](../../mfc/reference/cfile-class.md)</ept>","source":"[CFile](../../mfc/reference/cfile-class.md)"},{"pos":[3225,3286],"content":"<bpt id=\"p1\">[</bpt>COleStreamFile<ept id=\"p1\">](../../mfc/reference/colestreamfile-class.md)</ept>","source":"[COleStreamFile](../../mfc/reference/colestreamfile-class.md)"},{"pos":[3316,3328],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[3332,3352],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> afxole.h","source":"**Header:** afxole.h"},{"pos":[3362,3417],"content":"<bpt id=\"p1\">&lt;a name=\"cmonikerfile__close\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMonikerFile::Close","linkify":"<a name=\"cmonikerfile__close\"></a>  CMonikerFile::Close","source":"<a name=\"cmonikerfile__close\"></a>  CMonikerFile::Close"},{"content":"Call this function to detach and release the stream and to release the moniker.","pos":[3421,3500]},{"pos":[3547,3554],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Can be called on unopened or already closed streams.","pos":[3558,3610]},{"pos":[3620,3689],"content":"<bpt id=\"p1\">&lt;a name=\"cmonikerfile__cmonikerfile\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMonikerFile::CMonikerFile","linkify":"<a name=\"cmonikerfile__cmonikerfile\"></a>  CMonikerFile::CMonikerFile","source":"<a name=\"cmonikerfile__cmonikerfile\"></a>  CMonikerFile::CMonikerFile"},{"pos":[3693,3728],"content":"Constructs a <ph id=\"ph1\">`CMonikerFile`</ph> object.","source":"Constructs a `CMonikerFile` object."},{"pos":[3769,3848],"content":"<bpt id=\"p1\">&lt;a name=\"cmonikerfile__createbindcontext\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMonikerFile::CreateBindContext","linkify":"<a name=\"cmonikerfile__createbindcontext\"></a>  CMonikerFile::CreateBindContext","source":"<a name=\"cmonikerfile__createbindcontext\"></a>  CMonikerFile::CreateBindContext"},{"content":"Call this function to create a default initialized bind context.","pos":[3852,3916]},{"pos":[3994,4004],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"A pointer to a file exception.","pos":[4020,4050]},{"content":"In the event of an error, it will be set to the cause.","pos":[4051,4105]},{"pos":[4115,4127],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A pointer to the bind context <bpt id=\"p1\">[</bpt>IBindCtx<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms693755)</ept> to bind with if successful; otherwise <bpt id=\"p2\">**</bpt>NULL<ept id=\"p2\">**</ept>.","pos":[4131,4279],"source":"A pointer to the bind context [IBindCtx](http://msdn.microsoft.com/library/windows/desktop/ms693755) to bind with if successful; otherwise **NULL**."},{"content":"If the instance was opened with an <ph id=\"ph1\">`IBindHost`</ph> interface, the bind context is retrieved from the <ph id=\"ph2\">`IBindHost`</ph>.","pos":[4280,4389],"source":" If the instance was opened with an `IBindHost` interface, the bind context is retrieved from the `IBindHost`."},{"content":"If there is no <ph id=\"ph1\">`IBindHost`</ph> interface or the interface fails to return a bind context, a bind context is created.","pos":[4390,4502],"source":" If there is no `IBindHost` interface or the interface fails to return a bind context, a bind context is created."},{"content":"For a description of the <bpt id=\"p1\">[</bpt>IBindHost<ept id=\"p1\">](http://msdn.microsoft.com/library/ie/ms775076)</ept> interface, see the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","pos":[4503,4658],"source":" For a description of the [IBindHost](http://msdn.microsoft.com/library/ie/ms775076) interface, see the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"pos":[4668,4675],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"A bind context is an object that stores information about a particular moniker binding operation.","pos":[4679,4776]},{"content":"You can override this function to provide a custom bind context.","pos":[4777,4841]},{"pos":[4851,4908],"content":"<bpt id=\"p1\">&lt;a name=\"cmonikerfile__detach\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMonikerFile::Detach","linkify":"<a name=\"cmonikerfile__detach\"></a>  CMonikerFile::Detach","source":"<a name=\"cmonikerfile__detach\"></a>  CMonikerFile::Detach"},{"content":"Call this function to close the stream.","pos":[4912,4951]},{"pos":[5020,5030],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"A pointer to a file exception.","pos":[5046,5076]},{"content":"In the event of an error, it will be set to the cause.","pos":[5077,5131]},{"pos":[5141,5153],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Nonzero if successful; otherwise 0.","pos":[5157,5192]},{"pos":[5202,5267],"content":"<bpt id=\"p1\">&lt;a name=\"cmonikerfile__getmoniker\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMonikerFile::GetMoniker","linkify":"<a name=\"cmonikerfile__getmoniker\"></a>  CMonikerFile::GetMoniker","source":"<a name=\"cmonikerfile__getmoniker\"></a>  CMonikerFile::GetMoniker"},{"content":"Call this function to retrieve a pointer to the current moniker.","pos":[5271,5335]},{"pos":[5393,5405],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[5409,5526],"content":"A pointer to the current moniker interface ( <bpt id=\"p1\">[</bpt>IMoniker<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms679705)</ept>).","source":"A pointer to the current moniker interface ( [IMoniker](http://msdn.microsoft.com/library/windows/desktop/ms679705))."},{"pos":[5536,5543],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Since <ph id=\"ph1\">`CMonikerFile`</ph> is not an interface, the pointer returned does not increment the reference count (through <bpt id=\"p1\">[</bpt>AddRef<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms691379)</ept>), and the moniker is released when the <ph id=\"ph2\">`CMonikerFile`</ph> object is released.","pos":[5547,5800],"source":"Since `CMonikerFile` is not an interface, the pointer returned does not increment the reference count (through [AddRef](http://msdn.microsoft.com/library/windows/desktop/ms691379)), and the moniker is released when the `CMonikerFile` object is released."},{"content":"If you want to hold onto the moniker or release it yourself, you must <ph id=\"ph1\">`AddRef`</ph> it.","pos":[5801,5883],"source":" If you want to hold onto the moniker or release it yourself, you must `AddRef` it."},{"pos":[5893,5946],"content":"<bpt id=\"p1\">&lt;a name=\"cmonikerfile__open\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMonikerFile::Open","linkify":"<a name=\"cmonikerfile__open\"></a>  CMonikerFile::Open","source":"<a name=\"cmonikerfile__open\"></a>  CMonikerFile::Open"},{"content":"Call this member function to open a file or moniker object.","pos":[5950,6009]},{"pos":[6196,6206],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"A URL or filename of the file to be opened.","pos":[6223,6266]},{"content":"A pointer to a file exception.","pos":[6285,6315]},{"content":"In the event of an error, it will be set to the cause.","pos":[6316,6370]},{"content":"A pointer to the moniker interface <ph id=\"ph1\">`IMoniker`</ph> to be used to obtain a stream.","pos":[6391,6467],"source":" A pointer to the moniker interface `IMoniker` to be used to obtain a stream."},{"pos":[6477,6489],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Nonzero if successful; otherwise 0.","pos":[6493,6528]},{"pos":[6538,6545],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The <ph id=\"ph1\">`lpszURL`</ph> parameter cannot be used on a Macintosh.","pos":[6549,6603],"source":"The `lpszURL` parameter cannot be used on a Macintosh."},{"content":"Only the <ph id=\"ph1\">`pMoniker`</ph> form of <bpt id=\"p1\">**</bpt>Open<ept id=\"p1\">**</ept> can be used on a Macintosh.","pos":[6604,6668],"source":" Only the `pMoniker` form of **Open** can be used on a Macintosh."},{"content":"You can use a URL or a filename for the <ph id=\"ph1\">`lpszURL`</ph> parameter.","pos":[6675,6735],"source":"You can use a URL or a filename for the `lpszURL` parameter."},{"content":"For example:","pos":[6736,6748]},{"pos":[6755,6836],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_MFCWinInet#6<ept id=\"p2\">](../../mfc/codesnippet/cpp/cmonikerfile-class_1.cpp)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_MFCWinInet#6](../../mfc/codesnippet/cpp/cmonikerfile-class_1.cpp)]"},{"content":"– or –","pos":[6843,6849]},{"pos":[6856,6937],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_MFCWinInet#7<ept id=\"p2\">](../../mfc/codesnippet/cpp/cmonikerfile-class_2.cpp)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_MFCWinInet#7](../../mfc/codesnippet/cpp/cmonikerfile-class_2.cpp)]"},{"pos":[6946,6954],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>COleStreamFile Class<ept id=\"p1\">](../../mfc/reference/colestreamfile-class.md)</ept><ph id=\"ph1\"> </ph>","pos":[6958,7026],"source":"[COleStreamFile Class](../../mfc/reference/colestreamfile-class.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Hierarchy Chart<ept id=\"p1\">](../../mfc/hierarchy-chart.md)</ept><ph id=\"ph1\"> </ph>","pos":[7029,7078],"source":" [Hierarchy Chart](../../mfc/hierarchy-chart.md) "},{"content":"<bpt id=\"p1\"> [</bpt>CAsyncMonikerFile Class<ept id=\"p1\">](../../mfc/reference/casyncmonikerfile-class.md)</ept>","pos":[7081,7155],"source":" [CAsyncMonikerFile Class](../../mfc/reference/casyncmonikerfile-class.md)"}],"content":"---\ntitle: \"CMonikerFile Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"CMonikerFile\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"CMonikerFile class\"\n  - \"monikers, MFC\"\n  - \"IMoniker interface, binding\"\n  - \"IMoniker interface\"\nms.assetid: 87be5966-f4f7-4235-bce2-1fa39e9417de\ncaps.latest.revision: 22\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# CMonikerFile Class\nRepresents a stream of data ( [IStream](http://msdn.microsoft.com/library/windows/desktop/aa380034)) named by an [IMoniker](http://msdn.microsoft.com/library/windows/desktop/ms679705).  \n  \n## Syntax  \n  \n```  \nclass CMonikerFile : public COleStreamFile  \n```  \n  \n## Members  \n  \n### Public Constructors  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CMonikerFile::CMonikerFile](#cmonikerfile__cmonikerfile)|Constructs a `CMonikerFile` object.|  \n  \n### Public Methods  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CMonikerFile::Close](#cmonikerfile__close)|Detaches and releases the stream and releases the moniker.|  \n|[CMonikerFile::Detach](#cmonikerfile__detach)|Detaches the `IMoniker` from this `CMonikerFile` object.|  \n|[CMonikerFile::GetMoniker](#cmonikerfile__getmoniker)|Returns the current moniker.|  \n|[CMonikerFile::Open](#cmonikerfile__open)|Opens the specified file to obtain a stream.|  \n  \n### Protected Methods  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CMonikerFile::CreateBindContext](#cmonikerfile__createbindcontext)|Obtains the bind context or creates a default initialized bind context.|  \n  \n## Remarks  \n A moniker contains information much like a pathname to a file. If you have a pointer to a moniker object's `IMoniker` interface, you can get access to the identified file without having any other specific information about where the file is actually located.  \n  \n Derived from `COleStreamFile`, `CMonikerFile` takes a moniker or a string representation it can make into a moniker and binds to the stream for which the moniker is a name. You can then read and write to that stream. The real purpose of `CMonikerFile` is to provide simple access to `IStream`s named by `IMoniker`s so that you do not have to bind to a stream yourself, yet have `CFile` functionality to the stream.  \n  \n `CMonikerFile` cannot be used to bind to anything other than a stream. If you want to bind to storage or an object, you must use the `IMoniker` interface directly.  \n  \n For more information on streams and monikers, see [COleStreamFile](../../mfc/reference/colestreamfile-class.md) in the *MFC Reference* and [IStream](http://msdn.microsoft.com/library/windows/desktop/aa380034) and [IMoniker](http://msdn.microsoft.com/library/windows/desktop/ms679705) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n## Inheritance Hierarchy  \n [CObject](../../mfc/reference/cobject-class.md)  \n  \n [CFile](../../mfc/reference/cfile-class.md)  \n  \n [COleStreamFile](../../mfc/reference/colestreamfile-class.md)  \n  \n `CMonikerFile`  \n  \n## Requirements  \n **Header:** afxole.h  \n  \n##  <a name=\"cmonikerfile__close\"></a>  CMonikerFile::Close  \n Call this function to detach and release the stream and to release the moniker.  \n  \n```  \nvirtual void Close();\n```  \n  \n### Remarks  \n Can be called on unopened or already closed streams.  \n  \n##  <a name=\"cmonikerfile__cmonikerfile\"></a>  CMonikerFile::CMonikerFile  \n Constructs a `CMonikerFile` object.  \n  \n```  \nCMonikerFile();\n```  \n  \n##  <a name=\"cmonikerfile__createbindcontext\"></a>  CMonikerFile::CreateBindContext  \n Call this function to create a default initialized bind context.  \n  \n```  \nIBindCtx* CreateBindContext(CFileException* pError);\n```  \n  \n### Parameters  \n `pError`  \n A pointer to a file exception. In the event of an error, it will be set to the cause.  \n  \n### Return Value  \n A pointer to the bind context [IBindCtx](http://msdn.microsoft.com/library/windows/desktop/ms693755) to bind with if successful; otherwise **NULL**. If the instance was opened with an `IBindHost` interface, the bind context is retrieved from the `IBindHost`. If there is no `IBindHost` interface or the interface fails to return a bind context, a bind context is created. For a description of the [IBindHost](http://msdn.microsoft.com/library/ie/ms775076) interface, see the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n### Remarks  \n A bind context is an object that stores information about a particular moniker binding operation. You can override this function to provide a custom bind context.  \n  \n##  <a name=\"cmonikerfile__detach\"></a>  CMonikerFile::Detach  \n Call this function to close the stream.  \n  \n```  \nBOOL Detach(CFileException* pError = NULL);\n```  \n  \n### Parameters  \n `pError`  \n A pointer to a file exception. In the event of an error, it will be set to the cause.  \n  \n### Return Value  \n Nonzero if successful; otherwise 0.  \n  \n##  <a name=\"cmonikerfile__getmoniker\"></a>  CMonikerFile::GetMoniker  \n Call this function to retrieve a pointer to the current moniker.  \n  \n```  \nIMoniker* GetMoniker() const;\n\n \n```  \n  \n### Return Value  \n A pointer to the current moniker interface ( [IMoniker](http://msdn.microsoft.com/library/windows/desktop/ms679705)).  \n  \n### Remarks  \n Since `CMonikerFile` is not an interface, the pointer returned does not increment the reference count (through [AddRef](http://msdn.microsoft.com/library/windows/desktop/ms691379)), and the moniker is released when the `CMonikerFile` object is released. If you want to hold onto the moniker or release it yourself, you must `AddRef` it.  \n  \n##  <a name=\"cmonikerfile__open\"></a>  CMonikerFile::Open  \n Call this member function to open a file or moniker object.  \n  \n```  \nvirtual BOOL Open(\n    LPCTSTR lpszURL,  \n    CFileException* pError = NULL);\n\n \nvirtual BOOL Open(\n    IMoniker* pMoniker,  \n    CFileException* pError = NULL);\n```  \n  \n### Parameters  \n `lpszURL`  \n A URL or filename of the file to be opened.  \n  \n `pError`  \n A pointer to a file exception. In the event of an error, it will be set to the cause.  \n  \n `pMoniker`  \n A pointer to the moniker interface `IMoniker` to be used to obtain a stream.  \n  \n### Return Value  \n Nonzero if successful; otherwise 0.  \n  \n### Remarks  \n The `lpszURL` parameter cannot be used on a Macintosh. Only the `pMoniker` form of **Open** can be used on a Macintosh.  \n  \n You can use a URL or a filename for the `lpszURL` parameter. For example:  \n  \n [!code-cpp[NVC_MFCWinInet#6](../../mfc/codesnippet/cpp/cmonikerfile-class_1.cpp)]  \n  \n – or –  \n  \n [!code-cpp[NVC_MFCWinInet#7](../../mfc/codesnippet/cpp/cmonikerfile-class_2.cpp)]  \n  \n## See Also  \n [COleStreamFile Class](../../mfc/reference/colestreamfile-class.md)   \n [Hierarchy Chart](../../mfc/hierarchy-chart.md)   \n [CAsyncMonikerFile Class](../../mfc/reference/casyncmonikerfile-class.md)\n"}