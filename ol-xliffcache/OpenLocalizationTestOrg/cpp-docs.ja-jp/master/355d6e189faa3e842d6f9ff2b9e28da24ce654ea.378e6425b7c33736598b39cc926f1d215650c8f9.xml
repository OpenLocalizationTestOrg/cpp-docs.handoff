{"nodes":[{"pos":[12,48],"content":"improper_lock Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"improper_lock Class | Microsoft Docs","pos":[0,36]}]},{"content":"improper_lock Class","pos":[631,650]},{"content":"This class describes an exception thrown when a lock is acquired improperly.","pos":[651,727]},{"content":"Syntax","pos":[736,742]},{"content":"Members","pos":[809,816]},{"content":"Public Constructors","pos":[826,845]},{"content":"Name","pos":[852,856]},{"content":"Description","pos":[857,868]},{"content":"improper_lock::improper_lock Constructor","pos":[907,947]},{"content":"Overloaded.","pos":[956,967]},{"content":"Constructs an <ph id=\"ph1\">`improper_lock exception`</ph>.","pos":[968,1008],"source":" Constructs an `improper_lock exception`."},{"content":"Remarks","pos":[1018,1025]},{"content":"Typically, this exception is thrown when an attempt is made to acquire a non-reentrant lock recursively on the same context.","pos":[1029,1153]},{"content":"Inheritance Hierarchy","pos":[1162,1183]},{"content":"Requirements","pos":[1229,1241]},{"pos":[1245,1265],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> concrt.h","source":"**Header:** concrt.h"},{"pos":[1272,1298],"content":"<bpt id=\"p1\">**</bpt>Namespace:<ept id=\"p1\">**</ept> concurrency","source":"**Namespace:** concurrency"},{"pos":[1329,1369],"content":"improper_lock::improper_lock Constructor"},{"pos":[1373,1413],"content":"Constructs an <ph id=\"ph1\">`improper_lock exception`</ph>.","source":"Constructs an `improper_lock exception`."},{"content":"Parameters","pos":[1531,1541]},{"content":"A descriptive message of the error.","pos":[1559,1594]},{"content":"See Also","pos":[1603,1611]},{"content":"concurrency Namespace","pos":[1616,1637]},{"content":"critical_section Class","pos":[1670,1692]},{"content":"reader_writer_lock Class","pos":[1726,1750]}],"content":"---\ntitle: \"improper_lock Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"concrt/concurrency::improper_lock\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"improper_lock class\"\nms.assetid: 8f494942-7748-4a2a-8de2-23414bfe6346\ncaps.latest.revision: 19\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# improper_lock Class\nThis class describes an exception thrown when a lock is acquired improperly.  \n  \n## Syntax  \n  \n```\nclass improper_lock : public std::exception;\n```  \n  \n## Members  \n  \n### Public Constructors  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[improper_lock::improper_lock Constructor](#ctor)|Overloaded. Constructs an `improper_lock exception`.|  \n  \n## Remarks  \n Typically, this exception is thrown when an attempt is made to acquire a non-reentrant lock recursively on the same context.  \n  \n## Inheritance Hierarchy  \n `exception`  \n  \n `improper_lock`  \n  \n## Requirements  \n **Header:** concrt.h  \n  \n **Namespace:** concurrency  \n  \n##  <a name=\"ctor\"></a>  improper_lock::improper_lock Constructor  \n Constructs an `improper_lock exception`.  \n  \n```\nexplicit _CRTIMP improper_lock(_In_z_ const char* _Message) throw();\n\nimproper_lock() throw();\n```  \n  \n### Parameters  \n `_Message`  \n A descriptive message of the error.  \n  \n## See Also  \n [concurrency Namespace](concurrency-namespace.md)   \n [critical_section Class](critical-section-class.md)   \n [reader_writer_lock Class](reader-writer-lock-class.md)\n"}