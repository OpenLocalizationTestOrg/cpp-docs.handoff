{"nodes":[{"pos":[12,45],"content":"_com_raise_error | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"_com_raise_error | Microsoft Docs","pos":[0,33]}]},{"content":"_com_raise_error","pos":[628,644]},{"content":"Microsoft Specific","pos":[647,665]},{"pos":[674,748],"content":"Throws a <bpt id=\"p1\">[</bpt>_com_error<ept id=\"p1\">](../cpp/com-error-class.md)</ept> in response to a failure.","source":"Throws a [_com_error](../cpp/com-error-class.md) in response to a failure."},{"content":"Syntax","pos":[757,763]},{"content":"Parameters","pos":[885,895]},{"content":"information.","pos":[917,929]},{"content":"<bpt id=\"p1\"> **</bpt>IErrorInfo<ept id=\"p1\">**</ept> object.","pos":[949,972],"source":" **IErrorInfo** object."},{"content":"Remarks","pos":[981,988]},{"content":", which is defined in comdef.h, can be replaced by a user-written version of the same name and prototype.","pos":[1010,1115]},{"content":"This could be done if you want to use <ph id=\"ph1\">`#import`</ph> but do not want to use C++ exception handling.","pos":[1116,1210],"source":" This could be done if you want to use `#import` but do not want to use C++ exception handling."},{"content":"In that case, a user version of <bpt id=\"p1\">**</bpt>_com_raise_error<ept id=\"p1\">**</ept> might decide to do a <ph id=\"ph1\">`longjmp`</ph> or display a message box and halt.","pos":[1211,1329],"source":" In that case, a user version of **_com_raise_error** might decide to do a `longjmp` or display a message box and halt."},{"content":"The user version should not return, though, because the compiler COM support code does not expect it to return.","pos":[1330,1441]},{"pos":[1448,1570],"content":"You can also use <bpt id=\"p1\">[</bpt>_set_com_error_handler<ept id=\"p1\">](../cpp/set-com-error-handler.md)</ept> to replace the default error-handling function.","source":"You can also use [_set_com_error_handler](../cpp/set-com-error-handler.md) to replace the default error-handling function."},{"pos":[1577,1630],"content":"By default, <ph id=\"ph1\">`_com_raise_error`</ph> is defined as follows:","source":"By default, `_com_raise_error` is defined as follows:"},{"content":"END Microsoft Specific","pos":[1765,1787]},{"content":"Requirements","pos":[1796,1808]},{"pos":[1812,1832],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> comdef.h","source":"**Header:** comdef.h"},{"content":"<bpt id=\"p1\">**</bpt>Lib:<ept id=\"p1\">**</ept> If the “wchar_t is Native Type” compiler option is on, use comsuppw.lib or comsuppwd.lib.","pos":[1839,1937],"source":"**Lib:** If the “wchar_t is Native Type” compiler option is on, use comsuppw.lib or comsuppwd.lib."},{"content":"If “wchar_t is Native Type” is off, use comsupp.lib.","pos":[1938,1990]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>/Zc:wchar_t (wchar_t Is Native Type)<ept id=\"p1\">](../build/reference/zc-wchar-t-wchar-t-is-native-type.md)</ept>.","pos":[1991,2113],"source":" For more information, see [/Zc:wchar_t (wchar_t Is Native Type)](../build/reference/zc-wchar-t-wchar-t-is-native-type.md)."},{"content":"See Also","pos":[2122,2130]},{"content":"Compiler COM Global Functions","pos":[2135,2164]},{"content":"_set_com_error_handler","pos":[2212,2234]}],"content":"---\ntitle: \"_com_raise_error | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"language-reference\"\nf1_keywords: \n  - \"_com_raise_error\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"_com_raise_error function\"\nms.assetid: a98226c2-c3fe-44f1-8ff5-85863de11cd6\ncaps.latest.revision: 10\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# _com_raise_error\n**Microsoft Specific**  \n  \n Throws a [_com_error](../cpp/com-error-class.md) in response to a failure.  \n  \n## Syntax  \n  \n```  \n  \n      void __stdcall _com_raise_error(  \n   HRESULT hr,  \n   IErrorInfo* perrinfo = 0  \n);  \n```  \n  \n#### Parameters  \n `hr`  \n `HRESULT` information.  \n  \n `perrinfo`  \n **IErrorInfo** object.  \n  \n## Remarks  \n `_com_raise_error`, which is defined in comdef.h, can be replaced by a user-written version of the same name and prototype. This could be done if you want to use `#import` but do not want to use C++ exception handling. In that case, a user version of **_com_raise_error** might decide to do a `longjmp` or display a message box and halt. The user version should not return, though, because the compiler COM support code does not expect it to return.  \n  \n You can also use [_set_com_error_handler](../cpp/set-com-error-handler.md) to replace the default error-handling function.  \n  \n By default, `_com_raise_error` is defined as follows:  \n  \n```  \nvoid __stdcall _com_raise_error(HRESULT hr, IErrorInfo* perrinfo) {  \n   throw _com_error(hr, perrinfo);  \n}  \n```  \n  \n## END Microsoft Specific  \n  \n## Requirements  \n **Header:** comdef.h  \n  \n **Lib:** If the “wchar_t is Native Type” compiler option is on, use comsuppw.lib or comsuppwd.lib. If “wchar_t is Native Type” is off, use comsupp.lib. For more information, see [/Zc:wchar_t (wchar_t Is Native Type)](../build/reference/zc-wchar-t-wchar-t-is-native-type.md).  \n  \n## See Also  \n [Compiler COM Global Functions](../cpp/compiler-com-global-functions.md)   \n [_set_com_error_handler](../cpp/set-com-error-handler.md)"}