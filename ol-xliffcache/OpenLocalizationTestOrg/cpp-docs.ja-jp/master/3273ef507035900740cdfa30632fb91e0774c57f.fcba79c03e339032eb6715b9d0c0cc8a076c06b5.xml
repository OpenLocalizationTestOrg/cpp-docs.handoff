{"nodes":[{"pos":[12,53],"content":"CMFCRibbonCategory Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"CMFCRibbonCategory Class | Microsoft Docs","pos":[0,41]}]},{"pos":[628,652],"content":"CMFCRibbonCategory Class","linkify":"CMFCRibbonCategory Class","nodes":[{"content":"CMFCRibbonCategory Class","pos":[0,24]}]},{"pos":[653,795],"content":"The <ph id=\"ph1\">`CMFCRibbonCategory`</ph> class implements a ribbon tab that contains a group of <bpt id=\"p1\">[</bpt>ribbon panels<ept id=\"p1\">](../../mfc/reference/cmfcribbonpanel-class.md)</ept>.","source":"The `CMFCRibbonCategory` class implements a ribbon tab that contains a group of [ribbon panels](../../mfc/reference/cmfcribbonpanel-class.md)."},{"pos":[804,810],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[878,885],"content":"Members","linkify":"Members","nodes":[{"content":"Members","pos":[0,7]}]},{"pos":[895,917],"content":"Protected Constructors","linkify":"Protected Constructors","nodes":[{"content":"Protected Constructors","pos":[0,22]}]},{"content":"Name","pos":[924,928]},{"content":"Description","pos":[929,940]},{"pos":[978,1059],"content":"<bpt id=\"p1\">[</bpt>CMFCRibbonCategory::CMFCRibbonCategory<ept id=\"p1\">](#cmfcribboncategory__cmfcribboncategory)</ept>","source":"[CMFCRibbonCategory::CMFCRibbonCategory](#cmfcribboncategory__cmfcribboncategory)"},{"content":"The constructor.","pos":[1060,1076]},{"pos":[1087,1101],"content":"Public Methods","linkify":"Public Methods","nodes":[{"content":"Public Methods","pos":[0,14]}]},{"content":"Name","pos":[1108,1112]},{"content":"Description","pos":[1113,1124]},{"pos":[1162,1225],"content":"<bpt id=\"p1\">[</bpt>CMFCRibbonCategory::AddHidden<ept id=\"p1\">](#cmfcribboncategory__addhidden)</ept>","source":"[CMFCRibbonCategory::AddHidden](#cmfcribboncategory__addhidden)"},{"content":"Adds a hidden element to the ribbon category.","pos":[1226,1271]},{"pos":[1276,1337],"content":"<bpt id=\"p1\">[</bpt>CMFCRibbonCategory::AddPanel<ept id=\"p1\">](#cmfcribboncategory__addpanel)</ept>","source":"[CMFCRibbonCategory::AddPanel](#cmfcribboncategory__addpanel)"},{"content":"Adds a new panel to the ribbon category.","pos":[1338,1378]},{"pos":[1383,1444],"content":"<bpt id=\"p1\">[</bpt>CMFCRibbonCategory::CopyFrom<ept id=\"p1\">](#cmfcribboncategory__copyfrom)</ept>","source":"[CMFCRibbonCategory::CopyFrom](#cmfcribboncategory__copyfrom)"},{"pos":[1450,1515],"content":"<bpt id=\"p1\">[</bpt>CMFCRibbonCategory::FindByData<ept id=\"p1\">](#cmfcribboncategory__findbydata)</ept>","source":"[CMFCRibbonCategory::FindByData](#cmfcribboncategory__findbydata)"},{"pos":[1521,1582],"content":"<bpt id=\"p1\">[</bpt>CMFCRibbonCategory::FindByID<ept id=\"p1\">](#cmfcribboncategory__findbyid)</ept>","source":"[CMFCRibbonCategory::FindByID](#cmfcribboncategory__findbyid)"},{"pos":[1588,1667],"content":"<bpt id=\"p1\">[</bpt>CMFCRibbonCategory::FindPanelWithElem<ept id=\"p1\">](#cmfcribboncategory__findpanelwithelem)</ept>","source":"[CMFCRibbonCategory::FindPanelWithElem](#cmfcribboncategory__findpanelwithelem)"},{"pos":[1673,1742],"content":"<bpt id=\"p1\">[</bpt>CMFCRibbonCategory::GetContextID<ept id=\"p1\">](#cmfcribboncategory__getcontextid)</ept>","source":"[CMFCRibbonCategory::GetContextID](#cmfcribboncategory__getcontextid)"},{"content":"Returns the context ID of the ribbon category.","pos":[1743,1789]},{"pos":[1794,1853],"content":"<bpt id=\"p1\">[</bpt>CMFCRibbonCategory::GetData<ept id=\"p1\">](#cmfcribboncategory__getdata)</ept>","source":"[CMFCRibbonCategory::GetData](#cmfcribboncategory__getdata)"},{"content":"Returns the user-defined data that is associated with the ribbon category.","pos":[1854,1928]},{"pos":[1933,2006],"content":"<bpt id=\"p1\">[</bpt>CMFCRibbonCategory::GetDroppedDown<ept id=\"p1\">](#cmfcribboncategory__getdroppeddown)</ept>","source":"[CMFCRibbonCategory::GetDroppedDown](#cmfcribboncategory__getdroppeddown)"},{"pos":[2012,2079],"content":"<bpt id=\"p1\">[</bpt>CMFCRibbonCategory::GetElements<ept id=\"p1\">](#cmfcribboncategory__getelements)</ept>","source":"[CMFCRibbonCategory::GetElements](#cmfcribboncategory__getelements)"},{"pos":[2085,2160],"content":"<bpt id=\"p1\">[</bpt>CMFCRibbonCategory::GetElementsByID<ept id=\"p1\">](#cmfcribboncategory__getelementsbyid)</ept>","source":"[CMFCRibbonCategory::GetElementsByID](#cmfcribboncategory__getelementsbyid)"},{"pos":[2166,2255],"content":"<bpt id=\"p1\">[</bpt>CMFCRibbonCategory::GetFirstVisibleElement<ept id=\"p1\">](#cmfcribboncategory__getfirstvisibleelement)</ept>","source":"[CMFCRibbonCategory::GetFirstVisibleElement](#cmfcribboncategory__getfirstvisibleelement)"},{"content":"Obtain a first visible element that belong to the ribbon category.","pos":[2256,2322]},{"pos":[2327,2392],"content":"<bpt id=\"p1\">[</bpt>CMFCRibbonCategory::GetFocused<ept id=\"p1\">](#cmfcribboncategory__getfocused)</ept>","source":"[CMFCRibbonCategory::GetFocused](#cmfcribboncategory__getfocused)"},{"content":"Returns a focused element.","pos":[2393,2419]},{"pos":[2424,2497],"content":"<bpt id=\"p1\">[</bpt>CMFCRibbonCategory::GetHighlighted<ept id=\"p1\">](#cmfcribboncategory__gethighlighted)</ept>","source":"[CMFCRibbonCategory::GetHighlighted](#cmfcribboncategory__gethighlighted)"},{"content":"Returns a highlighted element.","pos":[2498,2528]},{"pos":[2533,2604],"content":"<bpt id=\"p1\">[</bpt>CMFCRibbonCategory::GetImageCount<ept id=\"p1\">](#cmfcribboncategory__getimagecount)</ept>","source":"[CMFCRibbonCategory::GetImageCount](#cmfcribboncategory__getimagecount)"},{"pos":[2610,2679],"content":"<bpt id=\"p1\">[</bpt>CMFCRibbonCategory::GetImageSize<ept id=\"p1\">](#cmfcribboncategory__getimagesize)</ept>","source":"[CMFCRibbonCategory::GetImageSize](#cmfcribboncategory__getimagesize)"},{"pos":[2685,2758],"content":"<bpt id=\"p1\">[</bpt>CMFCRibbonCategory::GetItemIDsList<ept id=\"p1\">](#cmfcribboncategory__getitemidslist)</ept>","source":"[CMFCRibbonCategory::GetItemIDsList](#cmfcribboncategory__getitemidslist)"},{"pos":[2764,2851],"content":"<bpt id=\"p1\">[</bpt>CMFCRibbonCategory::GetLastVisibleElement<ept id=\"p1\">](#cmfcribboncategory__getlastvisibleelement)</ept>","source":"[CMFCRibbonCategory::GetLastVisibleElement](#cmfcribboncategory__getlastvisibleelement)"},{"content":"Obtain a last visible element that belong to the ribbon category","pos":[2852,2916]},{"pos":[2921,2994],"content":"<bpt id=\"p1\">[</bpt>CMFCRibbonCategory::GetLargeImages<ept id=\"p1\">](#cmfcribboncategory__getlargeimages)</ept>","source":"[CMFCRibbonCategory::GetLargeImages](#cmfcribboncategory__getlargeimages)"},{"content":"Returns a reference to the list of large images that the ribbon category uses.","pos":[2995,3073]},{"pos":[3078,3147],"content":"<bpt id=\"p1\">[</bpt>CMFCRibbonCategory::GetMaxHeight<ept id=\"p1\">](#cmfcribboncategory__getmaxheight)</ept>","source":"[CMFCRibbonCategory::GetMaxHeight](#cmfcribboncategory__getmaxheight)"},{"pos":[3153,3212],"content":"<bpt id=\"p1\">[</bpt>CMFCRibbonCategory::GetName<ept id=\"p1\">](#cmfcribboncategory__getname)</ept>","source":"[CMFCRibbonCategory::GetName](#cmfcribboncategory__getname)"},{"pos":[3218,3279],"content":"<bpt id=\"p1\">[</bpt>CMFCRibbonCategory::GetPanel<ept id=\"p1\">](#cmfcribboncategory__getpanel)</ept>","source":"[CMFCRibbonCategory::GetPanel](#cmfcribboncategory__getpanel)"},{"content":"Returns a pointer to the ribbon panel that is located at the specified index.","pos":[3280,3357]},{"pos":[3362,3433],"content":"<bpt id=\"p1\">[</bpt>CMFCRibbonCategory::GetPanelCount<ept id=\"p1\">](#cmfcribboncategory__getpanelcount)</ept>","source":"[CMFCRibbonCategory::GetPanelCount](#cmfcribboncategory__getpanelcount)"},{"content":"Returns the number of ribbon panels in the ribbon category.","pos":[3434,3493]},{"pos":[3498,3577],"content":"<bpt id=\"p1\">[</bpt>CMFCRibbonCategory::GetPanelFromPoint<ept id=\"p1\">](#cmfcribboncategory__getpanelfrompoint)</ept>","source":"[CMFCRibbonCategory::GetPanelFromPoint](#cmfcribboncategory__getpanelfrompoint)"},{"pos":[3583,3654],"content":"<bpt id=\"p1\">[</bpt>CMFCRibbonCategory::GetPanelIndex<ept id=\"p1\">](#cmfcribboncategory__getpanelindex)</ept>","source":"[CMFCRibbonCategory::GetPanelIndex](#cmfcribboncategory__getpanelindex)"},{"content":"Returns the index of the specified ribbon panel.","pos":[3655,3703]},{"pos":[3708,3783],"content":"<bpt id=\"p1\">[</bpt>CMFCRibbonCategory::GetParentButton<ept id=\"p1\">](#cmfcribboncategory__getparentbutton)</ept>","source":"[CMFCRibbonCategory::GetParentButton](#cmfcribboncategory__getparentbutton)"},{"pos":[3789,3866],"content":"<bpt id=\"p1\">[</bpt>CMFCRibbonCategory::GetParentMenuBar<ept id=\"p1\">](#cmfcribboncategory__getparentmenubar)</ept>","source":"[CMFCRibbonCategory::GetParentMenuBar](#cmfcribboncategory__getparentmenubar)"},{"pos":[3872,3953],"content":"<bpt id=\"p1\">[</bpt>CMFCRibbonCategory::GetParentRibbonBar<ept id=\"p1\">](#cmfcribboncategory__getparentribbonbar)</ept>","source":"[CMFCRibbonCategory::GetParentRibbonBar](#cmfcribboncategory__getparentribbonbar)"},{"pos":[3959,4018],"content":"<bpt id=\"p1\">[</bpt>CMFCRibbonCategory::GetRect<ept id=\"p1\">](#cmfcribboncategory__getrect)</ept>","source":"[CMFCRibbonCategory::GetRect](#cmfcribboncategory__getrect)"},{"pos":[4024,4097],"content":"<bpt id=\"p1\">[</bpt>CMFCRibbonCategory::GetSmallImages<ept id=\"p1\">](#cmfcribboncategory__getsmallimages)</ept>","source":"[CMFCRibbonCategory::GetSmallImages](#cmfcribboncategory__getsmallimages)"},{"content":"Returns a reference to the list of small images that the category uses.","pos":[4098,4169]},{"pos":[4174,4241],"content":"<bpt id=\"p1\">[</bpt>CMFCRibbonCategory::GetTabColor<ept id=\"p1\">](#cmfcribboncategory__gettabcolor)</ept>","source":"[CMFCRibbonCategory::GetTabColor](#cmfcribboncategory__gettabcolor)"},{"content":"Returns the current color of the ribbon category tab.","pos":[4242,4295]},{"pos":[4300,4365],"content":"<bpt id=\"p1\">[</bpt>CMFCRibbonCategory::GetTabRect<ept id=\"p1\">](#cmfcribboncategory__gettabrect)</ept>","source":"[CMFCRibbonCategory::GetTabRect](#cmfcribboncategory__gettabrect)"},{"pos":[4371,4444],"content":"<bpt id=\"p1\">[</bpt>CMFCRibbonCategory::GetTextTopLine<ept id=\"p1\">](#cmfcribboncategory__gettexttopline)</ept>","source":"[CMFCRibbonCategory::GetTextTopLine](#cmfcribboncategory__gettexttopline)"},{"pos":[4450,4531],"content":"<bpt id=\"p1\">[</bpt>CMFCRibbonCategory::GetVisibleElements<ept id=\"p1\">](#cmfcribboncategory__getvisibleelements)</ept>","source":"[CMFCRibbonCategory::GetVisibleElements](#cmfcribboncategory__getvisibleelements)"},{"content":"Obtain all visible elements that belong to the ribbon category.","pos":[4532,4595]},{"pos":[4600,4673],"content":"<bpt id=\"p1\">[</bpt>CMFCRibbonCategory::HighlightPanel<ept id=\"p1\">](#cmfcribboncategory__highlightpanel)</ept>","source":"[CMFCRibbonCategory::HighlightPanel](#cmfcribboncategory__highlightpanel)"},{"pos":[4679,4738],"content":"<bpt id=\"p1\">[</bpt>CMFCRibbonCategory::HitTest<ept id=\"p1\">](#cmfcribboncategory__hittest)</ept>","source":"[CMFCRibbonCategory::HitTest](#cmfcribboncategory__hittest)"},{"pos":[4744,4807],"content":"<bpt id=\"p1\">[</bpt>CMFCRibbonCategory::HitTestEx<ept id=\"p1\">](#cmfcribboncategory__hittestex)</ept>","source":"[CMFCRibbonCategory::HitTestEx](#cmfcribboncategory__hittestex)"},{"pos":[4813,4898],"content":"<bpt id=\"p1\">[</bpt>CMFCRibbonCategory::HitTestScrollButtons<ept id=\"p1\">](#cmfcribboncategory__hittestscrollbuttons)</ept>","source":"[CMFCRibbonCategory::HitTestScrollButtons](#cmfcribboncategory__hittestscrollbuttons)"},{"pos":[4904,4965],"content":"<bpt id=\"p1\">[</bpt>CMFCRibbonCategory::IsActive<ept id=\"p1\">](#cmfcribboncategory__isactive)</ept>","source":"[CMFCRibbonCategory::IsActive](#cmfcribboncategory__isactive)"},{"pos":[4971,5034],"content":"<bpt id=\"p1\">[</bpt>CMFCRibbonCategory::IsVisible<ept id=\"p1\">](#cmfcribboncategory__isvisible)</ept>","source":"[CMFCRibbonCategory::IsVisible](#cmfcribboncategory__isvisible)"},{"content":"Determines whether the ribbon category is visible.","pos":[5035,5085]},{"pos":[5090,5163],"content":"<bpt id=\"p1\">[</bpt>CMFCRibbonCategory::IsWindows7Look<ept id=\"p1\">](#cmfcribboncategory__iswindows7look)</ept>","source":"[CMFCRibbonCategory::IsWindows7Look](#cmfcribboncategory__iswindows7look)"},{"content":"Indicates whether the parent ribbon has Windows 7-style look (small rectangular application button)","pos":[5164,5263]},{"pos":[5268,5353],"content":"<bpt id=\"p1\">[</bpt>CMFCRibbonCategory::NotifyControlCommand<ept id=\"p1\">](#cmfcribboncategory__notifycontrolcommand)</ept>","source":"[CMFCRibbonCategory::NotifyControlCommand](#cmfcribboncategory__notifycontrolcommand)"},{"pos":[5359,5428],"content":"<bpt id=\"p1\">[</bpt>CMFCRibbonCategory::OnCancelMode<ept id=\"p1\">](#cmfcribboncategory__oncancelmode)</ept>","source":"[CMFCRibbonCategory::OnCancelMode](#cmfcribboncategory__oncancelmode)"},{"pos":[5434,5491],"content":"<bpt id=\"p1\">[</bpt>CMFCRibbonCategory::OnDraw<ept id=\"p1\">](#cmfcribboncategory__ondraw)</ept>","source":"[CMFCRibbonCategory::OnDraw](#cmfcribboncategory__ondraw)"},{"pos":[5497,5564],"content":"<bpt id=\"p1\">[</bpt>CMFCRibbonCategory::OnDrawImage<ept id=\"p1\">](#cmfcribboncategory__ondrawimage)</ept>","source":"[CMFCRibbonCategory::OnDrawImage](#cmfcribboncategory__ondrawimage)"},{"pos":[5570,5647],"content":"<bpt id=\"p1\">[</bpt>CMFCRibbonCategory::OnDrawMenuBorder<ept id=\"p1\">](#cmfcribboncategory__ondrawmenuborder)</ept>","source":"[CMFCRibbonCategory::OnDrawMenuBorder](#cmfcribboncategory__ondrawmenuborder)"},{"pos":[5653,5708],"content":"<bpt id=\"p1\">[</bpt>CMFCRibbonCategory::OnKey<ept id=\"p1\">](#cmfcribboncategory__onkey)</ept>","source":"[CMFCRibbonCategory::OnKey](#cmfcribboncategory__onkey)"},{"content":"Called by the framework when a user presses a keyboard button.","pos":[5709,5771]},{"pos":[5776,5847],"content":"<bpt id=\"p1\">[</bpt>CMFCRibbonCategory::OnLButtonDown<ept id=\"p1\">](#cmfcribboncategory__onlbuttondown)</ept>","source":"[CMFCRibbonCategory::OnLButtonDown](#cmfcribboncategory__onlbuttondown)"},{"pos":[5853,5920],"content":"<bpt id=\"p1\">[</bpt>CMFCRibbonCategory::OnLButtonUp<ept id=\"p1\">](#cmfcribboncategory__onlbuttonup)</ept>","source":"[CMFCRibbonCategory::OnLButtonUp](#cmfcribboncategory__onlbuttonup)"},{"pos":[5926,5993],"content":"<bpt id=\"p1\">[</bpt>CMFCRibbonCategory::OnMouseMove<ept id=\"p1\">](#cmfcribboncategory__onmousemove)</ept>","source":"[CMFCRibbonCategory::OnMouseMove](#cmfcribboncategory__onmousemove)"},{"pos":[5999,6068],"content":"<bpt id=\"p1\">[</bpt>CMFCRibbonCategory::OnRTLChanged<ept id=\"p1\">](#cmfcribboncategory__onrtlchanged)</ept>","source":"[CMFCRibbonCategory::OnRTLChanged](#cmfcribboncategory__onrtlchanged)"},{"pos":[6074,6143],"content":"<bpt id=\"p1\">[</bpt>CMFCRibbonCategory::OnScrollHorz<ept id=\"p1\">](#cmfcribboncategory__onscrollhorz)</ept>","source":"[CMFCRibbonCategory::OnScrollHorz](#cmfcribboncategory__onscrollhorz)"},{"pos":[6149,6220],"content":"<bpt id=\"p1\">[</bpt>CMFCRibbonCategory::OnUpdateCmdUI<ept id=\"p1\">](#cmfcribboncategory__onupdatecmdui)</ept>","source":"[CMFCRibbonCategory::OnUpdateCmdUI](#cmfcribboncategory__onupdatecmdui)"},{"pos":[6226,6295],"content":"<bpt id=\"p1\">[</bpt>CMFCRibbonCategory::RecalcLayout<ept id=\"p1\">](#cmfcribboncategory__recalclayout)</ept>","source":"[CMFCRibbonCategory::RecalcLayout](#cmfcribboncategory__recalclayout)"},{"pos":[6301,6368],"content":"<bpt id=\"p1\">[</bpt>CMFCRibbonCategory::RemovePanel<ept id=\"p1\">](#cmfcribboncategory__removepanel)</ept>","source":"[CMFCRibbonCategory::RemovePanel](#cmfcribboncategory__removepanel)"},{"pos":[6374,6441],"content":"<bpt id=\"p1\">[</bpt>CMFCRibbonCategory::ReposPanels<ept id=\"p1\">](#cmfcribboncategory__repospanels)</ept>","source":"[CMFCRibbonCategory::ReposPanels](#cmfcribboncategory__repospanels)"},{"pos":[6447,6524],"content":"<bpt id=\"p1\">[</bpt>CMFCRibbonCategory::SetCollapseOrder<ept id=\"p1\">](#cmfcribboncategory__setcollapseorder)</ept>","source":"[CMFCRibbonCategory::SetCollapseOrder](#cmfcribboncategory__setcollapseorder)"},{"content":"Defines the collapse order of the ribbon panels that are present in the ribbon category.","pos":[6525,6613]},{"pos":[6618,6677],"content":"<bpt id=\"p1\">[</bpt>CMFCRibbonCategory::SetData<ept id=\"p1\">](#cmfcribboncategory__setdata)</ept>","source":"[CMFCRibbonCategory::SetData](#cmfcribboncategory__setdata)"},{"content":"Stores the user defined data in the ribbon category.","pos":[6678,6730]},{"pos":[6735,6794],"content":"<bpt id=\"p1\">[</bpt>CMFCRibbonCategory::SetKeys<ept id=\"p1\">](#cmfcribboncategory__setkeys)</ept>","source":"[CMFCRibbonCategory::SetKeys](#cmfcribboncategory__setkeys)"},{"content":"Assigns a keytip to the ribbon category.","pos":[6795,6835]},{"pos":[6840,6899],"content":"<bpt id=\"p1\">[</bpt>CMFCRibbonCategory::SetName<ept id=\"p1\">](#cmfcribboncategory__setname)</ept>","source":"[CMFCRibbonCategory::SetName](#cmfcribboncategory__setname)"},{"pos":[6905,6972],"content":"<bpt id=\"p1\">[</bpt>CMFCRibbonCategory::SetTabColor<ept id=\"p1\">](#cmfcribboncategory__settabcolor)</ept>","source":"[CMFCRibbonCategory::SetTabColor](#cmfcribboncategory__settabcolor)"},{"content":"Sets the color of the ribbon category.","pos":[6973,7011]},{"pos":[7021,7028],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Typically, you create a ribbon category indirectly by calling <bpt id=\"p1\">[</bpt>CMFCRibbonBar::AddCategory<ept id=\"p1\">](../../mfc/reference/cmfcribbonbar-class.md#cmfcribbonbar__addcategory)</ept>, which returns a pointer to the newly created ribbon category.","pos":[7032,7256],"source":"Typically, you create a ribbon category indirectly by calling [CMFCRibbonBar::AddCategory](../../mfc/reference/cmfcribbonbar-class.md#cmfcribbonbar__addcategory), which returns a pointer to the newly created ribbon category."},{"content":"You add panels to the category by calling <bpt id=\"p1\">[</bpt>CMFCRibbonCategory::AddPanel<ept id=\"p1\">](#cmfcribboncategory__addpanel)</ept>.","pos":[7257,7361],"source":" You add panels to the category by calling [CMFCRibbonCategory::AddPanel](#cmfcribboncategory__addpanel)."},{"content":"The <ph id=\"ph1\">`CMFCRibbonTab`</ph> class draws ribbon categories.","pos":[7368,7418],"source":"The `CMFCRibbonTab` class draws ribbon categories."},{"content":"It is derived from <bpt id=\"p1\">[</bpt>CMFCRibbonBaseElement Class<ept id=\"p1\">](../../mfc/reference/cmfcribbonbaseelement-class.md)</ept>.","pos":[7419,7520],"source":" It is derived from [CMFCRibbonBaseElement Class](../../mfc/reference/cmfcribbonbaseelement-class.md)."},{"content":"This following example demonstrates how to create a ribbon category and add a panel to it.","pos":[7527,7617]},{"content":"The following diagram shows a figure of the Home category from the RibbonApp sample application.","pos":[8149,8245]},{"pos":[8252,8350],"content":"<bpt id=\"p1\">![</bpt>CMFCRibbonCategory image<ept id=\"p1\">]</ept><bpt id=\"p2\">(../../mfc/reference/media/cmfcribboncategory.png \"</bpt>cmfcribboncategory<ept id=\"p2\">\")</ept>","source":"![CMFCRibbonCategory image](../../mfc/reference/media/cmfcribboncategory.png \"cmfcribboncategory\")"},{"pos":[8359,8380],"content":"Inheritance Hierarchy","linkify":"Inheritance Hierarchy","nodes":[{"content":"Inheritance Hierarchy","pos":[0,21]}]},{"pos":[8384,8431],"content":"<bpt id=\"p1\">[</bpt>CObject<ept id=\"p1\">](../../mfc/reference/cobject-class.md)</ept>","source":"[CObject](../../mfc/reference/cobject-class.md)"},{"pos":[8438,8507],"content":"<bpt id=\"p1\">[</bpt>CMFCRibbonCategory<ept id=\"p1\">](../../mfc/reference/cmfcribboncategory-class.md)</ept>","source":"[CMFCRibbonCategory](../../mfc/reference/cmfcribboncategory-class.md)"},{"pos":[8516,8528],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[8532,8563],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> afxribboncategory.h","source":"**Header:** afxribboncategory.h"},{"pos":[8573,8648],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcribboncategory__addhidden\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCRibbonCategory::AddHidden","linkify":"<a name=\"cmfcribboncategory__addhidden\"></a>  CMFCRibbonCategory::AddHidden","source":"<a name=\"cmfcribboncategory__addhidden\"></a>  CMFCRibbonCategory::AddHidden"},{"content":"Adds the specified ribbon element to the array of ribbon elements that are displayed on the customization dialog box.","pos":[8652,8769]},{"pos":[8840,8850],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`pElem`</ph>","pos":[8854,8866],"source":"[in] `pElem`"},{"content":"Pointer to a ribbon element.","pos":[8870,8898]},{"pos":[8908,8915],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Ribbon elements on the customization dialog box are the commands that you can add to the quick access toolbar.","pos":[8919,9029]},{"pos":[9039,9112],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcribboncategory__addpanel\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCRibbonCategory::AddPanel","linkify":"<a name=\"cmfcribboncategory__addpanel\"></a>  CMFCRibbonCategory::AddPanel","source":"<a name=\"cmfcribboncategory__addpanel\"></a>  CMFCRibbonCategory::AddPanel"},{"content":"Creates a ribbon panel for the ribbon category.","pos":[9116,9163]},{"pos":[9300,9310],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`lpszPanelName`</ph>","pos":[9314,9334],"source":"[in] `lpszPanelName`"},{"content":"Pointer to the name of the new ribbon panel.","pos":[9338,9382]},{"content":"[in] <ph id=\"ph1\">`hIcon`</ph>","pos":[9389,9401],"source":"[in] `hIcon`"},{"content":"Handle to the default icon for the new ribbon panel.","pos":[9405,9457]},{"content":"[in] <ph id=\"ph1\">`pRTI`</ph>","pos":[9464,9475],"source":"[in] `pRTI`"},{"content":"Pointer to runtime class information for a custom ribbon panel.","pos":[9479,9542]},{"pos":[9552,9564],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[9568,9676],"content":"Pointer to the new ribbon panel if the method was successful; otherwise <ph id=\"ph1\">`NULL`</ph> if the panel was not created.","source":"Pointer to the new ribbon panel if the method was successful; otherwise `NULL` if the panel was not created."},{"pos":[9686,9693],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"If you want to create a custom ribbon panel, you must specify its runtime class information in <ph id=\"ph1\">`pRTI`</ph>.","pos":[9697,9799],"source":"If you want to create a custom ribbon panel, you must specify its runtime class information in `pRTI`."},{"content":"The custom ribbon panel class must be derived from the <ph id=\"ph1\">`CMFCRibbonPanel`</ph> class.","pos":[9800,9879],"source":" The custom ribbon panel class must be derived from the `CMFCRibbonPanel` class."},{"content":"The default icon for the ribbon panel is displayed when there is insufficient space to display the ribbon elements.","pos":[9886,10001]},{"pos":[10011,10018],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[10022,10124],"content":"The following example demonstrates how to use the <ph id=\"ph1\">`AddPanel`</ph> method in the <ph id=\"ph2\">`CMFCRibbonCategory`</ph> class.","source":"The following example demonstrates how to use the `AddPanel` method in the `CMFCRibbonCategory` class."},{"pos":[10131,10232],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_MFC_RibbonApp#10<ept id=\"p2\">](../../mfc/reference/codesnippet/cpp/cmfcribboncategory-class_1.cpp)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_MFC_RibbonApp#10](../../mfc/reference/codesnippet/cpp/cmfcribboncategory-class_1.cpp)]"},{"pos":[10242,10335],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcribboncategory__cmfcribboncategory\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCRibbonCategory::CMFCRibbonCategory","linkify":"<a name=\"cmfcribboncategory__cmfcribboncategory\"></a>  CMFCRibbonCategory::CMFCRibbonCategory","source":"<a name=\"cmfcribboncategory__cmfcribboncategory\"></a>  CMFCRibbonCategory::CMFCRibbonCategory"},{"pos":[10339,10445],"content":"Constructs and initializes a <bpt id=\"p1\">[</bpt>CMFCRibbonCategory<ept id=\"p1\">](../../mfc/reference/cmfcribboncategory-class.md)</ept> object.","source":"Constructs and initializes a [CMFCRibbonCategory](../../mfc/reference/cmfcribboncategory-class.md) object."},{"pos":[10710,10720],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`pParenrRibbonBar`</ph>","pos":[10724,10747],"source":"[in] `pParenrRibbonBar`"},{"content":"Pointer to the parent ribbon bar of the ribbon category.","pos":[10751,10807]},{"content":"[in] <ph id=\"ph1\">`lpszName`</ph>","pos":[10814,10829],"source":"[in] `lpszName`"},{"content":"Name of the ribbon category.","pos":[10833,10861]},{"content":"[in] <ph id=\"ph1\">`uiSmallImagesResID`</ph>","pos":[10868,10893],"source":"[in] `uiSmallImagesResID`"},{"content":"Resource ID of the image list for small images that are used by ribbon elements in the ribbon category.","pos":[10897,11000]},{"content":"[in] <ph id=\"ph1\">`uiLargeImagesResID`</ph>","pos":[11007,11032],"source":"[in] `uiLargeImagesResID`"},{"content":"Resource ID of the image list for large images that are used by ribbon elements in the ribbon category.","pos":[11036,11139]},{"content":"[in] <ph id=\"ph1\">`sizeSmallImage`</ph>","pos":[11146,11167],"source":"[in] `sizeSmallImage`"},{"content":"Default size of small images for ribbon elements in the ribbon category.","pos":[11171,11243]},{"content":"[in] <ph id=\"ph1\">`sizeLargeImage`</ph>","pos":[11250,11271],"source":"[in] `sizeLargeImage`"},{"content":"Default size of large images for ribbon elements in the ribbon category.","pos":[11275,11347]},{"pos":[11357,11430],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcribboncategory__copyfrom\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCRibbonCategory::CopyFrom","linkify":"<a name=\"cmfcribboncategory__copyfrom\"></a>  CMFCRibbonCategory::CopyFrom","source":"<a name=\"cmfcribboncategory__copyfrom\"></a>  CMFCRibbonCategory::CopyFrom"},{"pos":[11434,11630],"content":"Copies the state of the specified <bpt id=\"p1\">[</bpt>CMFCRibbonCategory<ept id=\"p1\">](../../mfc/reference/cmfcribboncategory-class.md)</ept> to the current <bpt id=\"p2\">[</bpt>CMFCRibbonCategory<ept id=\"p2\">](../../mfc/reference/cmfcribboncategory-class.md)</ept> object.","source":"Copies the state of the specified [CMFCRibbonCategory](../../mfc/reference/cmfcribboncategory-class.md) to the current [CMFCRibbonCategory](../../mfc/reference/cmfcribboncategory-class.md) object."},{"pos":[11703,11713],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`src`</ph>","pos":[11717,11727],"source":"[in] `src`"},{"content":"The source <bpt id=\"p1\">[</bpt>CMFCRibbonCategory<ept id=\"p1\">](../../mfc/reference/cmfcribboncategory-class.md)</ept> object.","pos":[11731,11819],"source":" The source [CMFCRibbonCategory](../../mfc/reference/cmfcribboncategory-class.md) object."},{"pos":[11829,11836],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[11846,11923],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcribboncategory__findbydata\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCRibbonCategory::FindByData","linkify":"<a name=\"cmfcribboncategory__findbydata\"></a>  CMFCRibbonCategory::FindByData","source":"<a name=\"cmfcribboncategory__findbydata\"></a>  CMFCRibbonCategory::FindByData"},{"content":"Retrieves the ribbon element associated with the specified data.","pos":[11927,11991]},{"pos":[12115,12125],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`dwData`</ph>","pos":[12129,12142],"source":"[in] `dwData`"},{"content":"The data associated with a ribbon element.","pos":[12146,12188]},{"content":"[in] <ph id=\"ph1\">`bVisibleOnly`</ph>","pos":[12195,12214],"source":"[in] `bVisibleOnly`"},{"content":"<ph id=\"ph1\"> `TRUE`</ph> to include quick access ribbon elements in the search; <ph id=\"ph2\">`FALSE`</ph> to exclude quick access ribbon elements in the search.","pos":[12217,12342],"source":" `TRUE` to include quick access ribbon elements in the search; `FALSE` to exclude quick access ribbon elements in the search."},{"pos":[12352,12364],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[12368,12443],"content":"Pointer to a ribbon element if the method was successful; otherwise <ph id=\"ph1\">`NULL`</ph>.","source":"Pointer to a ribbon element if the method was successful; otherwise `NULL`."},{"pos":[12453,12460],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[12470,12543],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcribboncategory__findbyid\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCRibbonCategory::FindByID","linkify":"<a name=\"cmfcribboncategory__findbyid\"></a>  CMFCRibbonCategory::FindByID","source":"<a name=\"cmfcribboncategory__findbyid\"></a>  CMFCRibbonCategory::FindByID"},{"content":"Retrieves the ribbon element associated with the specified command ID.","pos":[12547,12617]},{"pos":[12735,12745],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`uiCmdID`</ph>","pos":[12749,12763],"source":"[in] `uiCmdID`"},{"content":"Command ID associated with a ribbon element.","pos":[12767,12811]},{"content":"[in] <ph id=\"ph1\">`bVisibleOnly`</ph>","pos":[12818,12837],"source":"[in] `bVisibleOnly`"},{"content":"<ph id=\"ph1\"> `TRUE`</ph> to include quick access ribbon elements in the search; <ph id=\"ph2\">`FALSE`</ph> to exclude quick access ribbon elements in the search.","pos":[12840,12965],"source":" `TRUE` to include quick access ribbon elements in the search; `FALSE` to exclude quick access ribbon elements in the search."},{"pos":[12975,12987],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[12991,13066],"content":"Pointer to a ribbon element if the method was successful; otherwise <ph id=\"ph1\">`NULL`</ph>.","source":"Pointer to a ribbon element if the method was successful; otherwise `NULL`."},{"pos":[13076,13083],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[13093,13184],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcribboncategory__findpanelwithelem\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCRibbonCategory::FindPanelWithElem","linkify":"<a name=\"cmfcribboncategory__findpanelwithelem\"></a>  CMFCRibbonCategory::FindPanelWithElem","source":"<a name=\"cmfcribboncategory__findpanelwithelem\"></a>  CMFCRibbonCategory::FindPanelWithElem"},{"content":"Retrieves the ribbon panel that contains the specified ribbon element.","pos":[13188,13258]},{"pos":[13358,13368],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`pElement`</ph>","pos":[13372,13387],"source":"[in] `pElement`"},{"content":"Pointer to a ribbon element.","pos":[13391,13419]},{"pos":[13429,13441],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[13445,13518],"content":"Pointer to a ribbon panel if the method was successful; otherwise <ph id=\"ph1\">`NULL`</ph>.","source":"Pointer to a ribbon panel if the method was successful; otherwise `NULL`."},{"pos":[13528,13535],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[13545,13626],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcribboncategory__getcontextid\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCRibbonCategory::GetContextID","linkify":"<a name=\"cmfcribboncategory__getcontextid\"></a>  CMFCRibbonCategory::GetContextID","source":"<a name=\"cmfcribboncategory__getcontextid\"></a>  CMFCRibbonCategory::GetContextID"},{"content":"Retrieves the context ID of the ribbon category.","pos":[13630,13678]},{"pos":[13733,13745],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Context ID of the ribbon category.","pos":[13749,13783]},{"pos":[13793,13800],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The context ID is 0 if the ribbon category is not a context ribbon category.","pos":[13804,13880]},{"pos":[13890,13961],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcribboncategory__getdata\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCRibbonCategory::GetData","linkify":"<a name=\"cmfcribboncategory__getdata\"></a>  CMFCRibbonCategory::GetData","source":"<a name=\"cmfcribboncategory__getdata\"></a>  CMFCRibbonCategory::GetData"},{"content":"Retrieves the user-defined data that is associated with the ribbon category.","pos":[13965,14041]},{"pos":[14096,14108],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The user-defined data that is associated with the ribbon category.","pos":[14112,14178]},{"pos":[14188,14273],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcribboncategory__getdroppeddown\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCRibbonCategory::GetDroppedDown","linkify":"<a name=\"cmfcribboncategory__getdroppeddown\"></a>  CMFCRibbonCategory::GetDroppedDown","source":"<a name=\"cmfcribboncategory__getdroppeddown\"></a>  CMFCRibbonCategory::GetDroppedDown"},{"content":"Retrieves a pointer to the ribbon element that currently has its pop-up menu displayed.","pos":[14277,14364]},{"pos":[14430,14442],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[14446,14521],"content":"Pointer to a ribbon element if the method was successful; otherwise <ph id=\"ph1\">`NULL`</ph>.","source":"Pointer to a ribbon element if the method was successful; otherwise `NULL`."},{"pos":[14531,14538],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[14548,14627],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcribboncategory__getelements\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCRibbonCategory::GetElements","linkify":"<a name=\"cmfcribboncategory__getelements\"></a>  CMFCRibbonCategory::GetElements","source":"<a name=\"cmfcribboncategory__getelements\"></a>  CMFCRibbonCategory::GetElements"},{"content":"Retrieves all ribbon elements in the ribbon category.","pos":[14631,14684]},{"pos":[14801,14811],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in, out] <ph id=\"ph1\">`arElements`</ph>","pos":[14815,14837],"source":"[in, out] `arElements`"},{"content":"Reference to a <bpt id=\"p1\">[</bpt>CArray<ept id=\"p1\">](../../mfc/reference/carray-class.md)</ept> of ribbon elements.","pos":[14841,14921],"source":" Reference to a [CArray](../../mfc/reference/carray-class.md) of ribbon elements."},{"pos":[14931,14938],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Ribbon elements that are designed for use on the quick access toolbar are included in the array.","pos":[14942,15038]},{"pos":[15048,15135],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcribboncategory__getelementsbyid\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCRibbonCategory::GetElementsByID","linkify":"<a name=\"cmfcribboncategory__getelementsbyid\"></a>  CMFCRibbonCategory::GetElementsByID","source":"<a name=\"cmfcribboncategory__getelementsbyid\"></a>  CMFCRibbonCategory::GetElementsByID"},{"content":"Retrieves all ribbon elements that are associated with the specified command ID.","pos":[15139,15219]},{"pos":[15360,15370],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`uiCmdID`</ph>","pos":[15374,15388],"source":"[in] `uiCmdID`"},{"content":"Command ID associated with a ribbon element.","pos":[15392,15436]},{"content":"[in, out] <ph id=\"ph1\">`arElements`</ph>","pos":[15443,15465],"source":"[in, out] `arElements`"},{"content":"Reference to a <bpt id=\"p1\">[</bpt>CArray<ept id=\"p1\">](../../mfc/reference/carray-class.md)</ept> of ribbon elements.","pos":[15469,15549],"source":" Reference to a [CArray](../../mfc/reference/carray-class.md) of ribbon elements."},{"pos":[15559,15566],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Ribbon elements that are designed for use on the quick access toolbar are included in the array.","pos":[15570,15666]},{"pos":[15676,15777],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcribboncategory__getfirstvisibleelement\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCRibbonCategory::GetFirstVisibleElement","linkify":"<a name=\"cmfcribboncategory__getfirstvisibleelement\"></a>  CMFCRibbonCategory::GetFirstVisibleElement","source":"<a name=\"cmfcribboncategory__getfirstvisibleelement\"></a>  CMFCRibbonCategory::GetFirstVisibleElement"},{"content":"Retrieves the first visible element that belongs to the ribbon category.","pos":[15781,15853]},{"pos":[15936,15948],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[15952,16051],"content":"Pointer to the first visible element; may be <ph id=\"ph1\">`NULL`</ph> if category does not have any visible elements.","source":"Pointer to the first visible element; may be `NULL` if category does not have any visible elements."},{"pos":[16061,16068],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[16078,16155],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcribboncategory__getfocused\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCRibbonCategory::GetFocused","linkify":"<a name=\"cmfcribboncategory__getfocused\"></a>  CMFCRibbonCategory::GetFocused","source":"<a name=\"cmfcribboncategory__getfocused\"></a>  CMFCRibbonCategory::GetFocused"},{"content":"Returns a focused element.","pos":[16159,16185]},{"pos":[16247,16259],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[16263,16304],"content":"A pointer to a focused element or <ph id=\"ph1\">`NULL`</ph>.","source":"A pointer to a focused element or `NULL`."},{"pos":[16314,16321],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[16331,16416],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcribboncategory__gethighlighted\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCRibbonCategory::GetHighlighted","linkify":"<a name=\"cmfcribboncategory__gethighlighted\"></a>  CMFCRibbonCategory::GetHighlighted","source":"<a name=\"cmfcribboncategory__gethighlighted\"></a>  CMFCRibbonCategory::GetHighlighted"},{"content":"Returns a highlighted element.","pos":[16420,16450]},{"pos":[16516,16528],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[16532,16608],"content":"A pointer to a highlighted element or <ph id=\"ph1\">`NULL`</ph> if no elements are highlighted.","source":"A pointer to a highlighted element or `NULL` if no elements are highlighted."},{"pos":[16618,16625],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[16635,16718],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcribboncategory__getimagecount\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCRibbonCategory::GetImageCount","linkify":"<a name=\"cmfcribboncategory__getimagecount\"></a>  CMFCRibbonCategory::GetImageCount","source":"<a name=\"cmfcribboncategory__getimagecount\"></a>  CMFCRibbonCategory::GetImageCount"},{"content":"Retrieves the number of images in the specified image list that is contained in the ribbon category.","pos":[16722,16822]},{"pos":[16895,16905],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`bIsLargeImage`</ph>","pos":[16909,16929],"source":"[in] `bIsLargeImage`"},{"content":"<ph id=\"ph1\"> `TRUE`</ph> for the number of images in the large image list; <ph id=\"ph2\">`FALSE`</ph> for the number of images in the small image list.","pos":[16932,17047],"source":" `TRUE` for the number of images in the large image list; `FALSE` for the number of images in the small image list."},{"pos":[17057,17069],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The number of images in the specified image list.","pos":[17073,17122]},{"pos":[17132,17139],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[17149,17230],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcribboncategory__getimagesize\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCRibbonCategory::GetImageSize","linkify":"<a name=\"cmfcribboncategory__getimagesize\"></a>  CMFCRibbonCategory::GetImageSize","source":"<a name=\"cmfcribboncategory__getimagesize\"></a>  CMFCRibbonCategory::GetImageSize"},{"content":"Retrieves the size of an image in the specified image list that is contained in the ribbon category.","pos":[17234,17334]},{"pos":[17408,17418],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`bIsLargeImage`</ph>","pos":[17422,17442],"source":"[in] `bIsLargeImage`"},{"content":"<ph id=\"ph1\"> `TRUE`</ph> for the size of large images; <ph id=\"ph2\">`FALSE`</ph> for the size of small images.","pos":[17445,17520],"source":" `TRUE` for the size of large images; `FALSE` for the size of small images."},{"pos":[17530,17542],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The size of an image in the specified image list.","pos":[17546,17595]},{"pos":[17605,17612],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The size retrieved includes the global image scale factor.","pos":[17616,17674]},{"pos":[17684,17769],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcribboncategory__getitemidslist\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCRibbonCategory::GetItemIDsList","linkify":"<a name=\"cmfcribboncategory__getitemidslist\"></a>  CMFCRibbonCategory::GetItemIDsList","source":"<a name=\"cmfcribboncategory__getitemidslist\"></a>  CMFCRibbonCategory::GetItemIDsList"},{"content":"Retrieves the command IDs for the ribbon elements that are contained in the ribbon category.","pos":[17773,17865]},{"pos":[17986,17996],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[out] <ph id=\"ph1\">`lstItems`</ph>","pos":[18000,18016],"source":"[out] `lstItems`"},{"content":"The list of command IDs for the ribbon elements in the ribbon category.","pos":[18020,18091]},{"content":"[in] <ph id=\"ph1\">`bHiddenOnly`</ph>","pos":[18098,18116],"source":"[in] `bHiddenOnly`"},{"content":"<ph id=\"ph1\"> `TRUE`</ph> to exclude ribbon elements displayed on the ribbon panels in the ribbon category; <ph id=\"ph2\">`FALSE`</ph> to include all ribbon elements in the ribbon category.","pos":[18119,18271],"source":" `TRUE` to exclude ribbon elements displayed on the ribbon panels in the ribbon category; `FALSE` to include all ribbon elements in the ribbon category."},{"pos":[18281,18288],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[18298,18383],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcribboncategory__getlargeimages\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCRibbonCategory::GetLargeImages","linkify":"<a name=\"cmfcribboncategory__getlargeimages\"></a>  CMFCRibbonCategory::GetLargeImages","source":"<a name=\"cmfcribboncategory__getlargeimages\"></a>  CMFCRibbonCategory::GetLargeImages"},{"content":"Retrieves the list of large images that are contained in the ribbon category.","pos":[18387,18464]},{"pos":[18526,18538],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The list of large images that are contained in the ribbon category.","pos":[18542,18609]},{"pos":[18619,18718],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcribboncategory__getlastvisibleelement\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCRibbonCategory::GetLastVisibleElement","linkify":"<a name=\"cmfcribboncategory__getlastvisibleelement\"></a>  CMFCRibbonCategory::GetLastVisibleElement","source":"<a name=\"cmfcribboncategory__getlastvisibleelement\"></a>  CMFCRibbonCategory::GetLastVisibleElement"},{"content":"Retrieves the last visible element that belongs to the ribbon category.","pos":[18722,18793]},{"pos":[18875,18887],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[18891,18993],"content":"Pointer to the last visible element; may be <ph id=\"ph1\">`NULL`</ph> if the category does not have any visible elements.","source":"Pointer to the last visible element; may be `NULL` if the category does not have any visible elements."},{"pos":[19003,19010],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[19020,19101],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcribboncategory__getmaxheight\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCRibbonCategory::GetMaxHeight","linkify":"<a name=\"cmfcribboncategory__getmaxheight\"></a>  CMFCRibbonCategory::GetMaxHeight","source":"<a name=\"cmfcribboncategory__getmaxheight\"></a>  CMFCRibbonCategory::GetMaxHeight"},{"content":"Retrieves the maximum height of the ribbon panels that are contained in the ribbon category.","pos":[19105,19197]},{"pos":[19250,19260],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`pDC`</ph>","pos":[19264,19274],"source":"[in] `pDC`"},{"content":"Pointer to a device context for the ribbon panels.","pos":[19278,19328]},{"pos":[19338,19350],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The maximum height of the ribbon panels that are contained in the ribbon category.","pos":[19354,19436]},{"pos":[19446,19453],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The value retrieved includes the height of the top and bottom margins for the ribbon panels.","pos":[19457,19549]},{"pos":[19559,19630],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcribboncategory__getname\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCRibbonCategory::GetName","linkify":"<a name=\"cmfcribboncategory__getname\"></a>  CMFCRibbonCategory::GetName","source":"<a name=\"cmfcribboncategory__getname\"></a>  CMFCRibbonCategory::GetName"},{"content":"Retrieves the name of the ribbon category.","pos":[19634,19676]},{"pos":[19729,19741],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The name of the ribbon category.","pos":[19745,19777]},{"pos":[19787,19794],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[19804,19877],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcribboncategory__getpanel\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCRibbonCategory::GetPanel","linkify":"<a name=\"cmfcribboncategory__getpanel\"></a>  CMFCRibbonCategory::GetPanel","source":"<a name=\"cmfcribboncategory__getpanel\"></a>  CMFCRibbonCategory::GetPanel"},{"content":"Returns a pointer to the ribbon panel that is located at the specified index.","pos":[19881,19958]},{"pos":[20022,20032],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`nIndex`</ph>","pos":[20036,20049],"source":"[in] `nIndex`"},{"content":"The zero-based index of a ribbon panel.","pos":[20053,20092]},{"pos":[20102,20114],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Pointer to the ribbon panel that is located at the specified index.","pos":[20118,20185]},{"pos":[20195,20202],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[20206,20257],"content":"An exception is thrown if <ph id=\"ph1\">`nIndex`</ph> is out of range.","source":"An exception is thrown if `nIndex` is out of range."},{"pos":[20267,20350],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcribboncategory__getpanelcount\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCRibbonCategory::GetPanelCount","linkify":"<a name=\"cmfcribboncategory__getpanelcount\"></a>  CMFCRibbonCategory::GetPanelCount","source":"<a name=\"cmfcribboncategory__getpanelcount\"></a>  CMFCRibbonCategory::GetPanelCount"},{"content":"Returns the number of ribbon panels in the ribbon category.","pos":[20354,20413]},{"pos":[20468,20480],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The number of ribbon panels in the ribbon category.","pos":[20484,20535]},{"pos":[20545,20636],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcribboncategory__getpanelfrompoint\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCRibbonCategory::GetPanelFromPoint","linkify":"<a name=\"cmfcribboncategory__getpanelfrompoint\"></a>  CMFCRibbonCategory::GetPanelFromPoint","source":"<a name=\"cmfcribboncategory__getpanelfrompoint\"></a>  CMFCRibbonCategory::GetPanelFromPoint"},{"content":"Retrieves a pointer to a ribbon panel if the specified point is located in it.","pos":[20640,20718]},{"pos":[20802,20812],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`point`</ph>","pos":[20816,20828],"source":"[in] `point`"},{"content":"The x and y coordinates of the pointer, relative to the upper-left corner of the window.","pos":[20832,20920]},{"pos":[20930,20942],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[20946,21019],"content":"Pointer to a ribbon panel if the method was successful; otherwise <ph id=\"ph1\">`NULL`</ph>.","source":"Pointer to a ribbon panel if the method was successful; otherwise `NULL`."},{"pos":[21029,21036],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Only ribbon panels that are contained in the ribbon category are tested.","pos":[21040,21112]},{"pos":[21122,21205],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcribboncategory__getpanelindex\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCRibbonCategory::GetPanelIndex","linkify":"<a name=\"cmfcribboncategory__getpanelindex\"></a>  CMFCRibbonCategory::GetPanelIndex","source":"<a name=\"cmfcribboncategory__getpanelindex\"></a>  CMFCRibbonCategory::GetPanelIndex"},{"content":"Retrieves the zero-based index of the specified ribbon panel.","pos":[21209,21270]},{"pos":[21354,21364],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`pPanel`</ph>","pos":[21368,21381],"source":"[in] `pPanel`"},{"content":"Pointer to a ribbon panel.","pos":[21385,21411]},{"pos":[21421,21433],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Zero-based index of the specified ribbon panel if the method was successful; otherwise -1.","pos":[21437,21527]},{"pos":[21537,21544],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Only ribbon panels that are contained in the ribbon category are searched.","pos":[21548,21622]},{"pos":[21632,21719],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcribboncategory__getparentbutton\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCRibbonCategory::GetParentButton","linkify":"<a name=\"cmfcribboncategory__getparentbutton\"></a>  CMFCRibbonCategory::GetParentButton","source":"<a name=\"cmfcribboncategory__getparentbutton\"></a>  CMFCRibbonCategory::GetParentButton"},{"content":"Retrieves the parent ribbon element of the ribbon category.","pos":[21723,21782]},{"pos":[21858,21870],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[21874,21962],"content":"Returns a pointer to the parent ribbon element, or <ph id=\"ph1\">`NULL`</ph> if there is no parent element.","source":"Returns a pointer to the parent ribbon element, or `NULL` if there is no parent element."},{"pos":[21972,21979],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[21989,22078],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcribboncategory__getparentmenubar\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCRibbonCategory::GetParentMenuBar","linkify":"<a name=\"cmfcribboncategory__getparentmenubar\"></a>  CMFCRibbonCategory::GetParentMenuBar","source":"<a name=\"cmfcribboncategory__getparentmenubar\"></a>  CMFCRibbonCategory::GetParentMenuBar"},{"pos":[22082,22158],"content":"Returns a pointer to the parent menu bar of the <ph id=\"ph1\">`CMFCRibbonCategory`</ph> object.","source":"Returns a pointer to the parent menu bar of the `CMFCRibbonCategory` object."},{"pos":[22236,22248],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[22252,22316],"content":"Returns the contents of the <ph id=\"ph1\">`m_pParentMenuBar`</ph> protected member.","source":"Returns the contents of the `m_pParentMenuBar` protected member."},{"pos":[22326,22333],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[22343,22436],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcribboncategory__getparentribbonbar\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCRibbonCategory::GetParentRibbonBar","linkify":"<a name=\"cmfcribboncategory__getparentribbonbar\"></a>  CMFCRibbonCategory::GetParentRibbonBar","source":"<a name=\"cmfcribboncategory__getparentribbonbar\"></a>  CMFCRibbonCategory::GetParentRibbonBar"},{"content":"Retrieves the parent ribbon bar for the ribbon category.","pos":[22440,22496]},{"pos":[22567,22579],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Pointer to the parent ribbon bar for the ribbon category.","pos":[22583,22640]},{"pos":[22650,22657],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[22667,22738],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcribboncategory__getrect\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCRibbonCategory::GetRect","linkify":"<a name=\"cmfcribboncategory__getrect\"></a>  CMFCRibbonCategory::GetRect","source":"<a name=\"cmfcribboncategory__getrect\"></a>  CMFCRibbonCategory::GetRect"},{"content":"Retrieves the display rectangle for the ribbon category.","pos":[22742,22798]},{"pos":[22849,22861],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The display rectangle for the ribbon category.","pos":[22865,22911]},{"pos":[22921,22928],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The display rectangle for the ribbon category does not include the category tab.","pos":[22932,23012]},{"pos":[23022,23107],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcribboncategory__getsmallimages\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCRibbonCategory::GetSmallImages","linkify":"<a name=\"cmfcribboncategory__getsmallimages\"></a>  CMFCRibbonCategory::GetSmallImages","source":"<a name=\"cmfcribboncategory__getsmallimages\"></a>  CMFCRibbonCategory::GetSmallImages"},{"content":"Retrieves the list of small images that are contained in the ribbon category.","pos":[23111,23188]},{"pos":[23250,23262],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The list of small images that are contained in the ribbon category.","pos":[23266,23333]},{"pos":[23343,23422],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcribboncategory__gettabcolor\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCRibbonCategory::GetTabColor","linkify":"<a name=\"cmfcribboncategory__gettabcolor\"></a>  CMFCRibbonCategory::GetTabColor","source":"<a name=\"cmfcribboncategory__gettabcolor\"></a>  CMFCRibbonCategory::GetTabColor"},{"content":"Returns the current color of the ribbon category tab.","pos":[23426,23479]},{"pos":[23552,23564],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The current color of the ribbon category tab.","pos":[23568,23613]},{"pos":[23623,23630],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The returned value can be one of the following enumerated values:","pos":[23634,23699]},{"content":"AFX_CategoryColor_Red","pos":[23709,23730]},{"content":"AFX_CategoryColor_Orange","pos":[23740,23764]},{"content":"AFX_CategoryColor_Yellow","pos":[23774,23798]},{"content":"AFX_CategoryColor_Green","pos":[23808,23831]},{"content":"AFX_CategoryColor_Blue","pos":[23841,23863]},{"content":"AFX_CategoryColor_Indigo","pos":[23873,23897]},{"content":"AFX_CategoryColor_Violet","pos":[23907,23931]},{"pos":[23941,24018],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcribboncategory__gettabrect\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCRibbonCategory::GetTabRect","linkify":"<a name=\"cmfcribboncategory__gettabrect\"></a>  CMFCRibbonCategory::GetTabRect","source":"<a name=\"cmfcribboncategory__gettabrect\"></a>  CMFCRibbonCategory::GetTabRect"},{"content":"Retrieves the display rectangle for the ribbon category tab.","pos":[24022,24082]},{"pos":[24136,24148],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The display rectangle for the ribbon category tab.","pos":[24152,24202]},{"pos":[24212,24219],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[24229,24314],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcribboncategory__gettexttopline\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCRibbonCategory::GetTextTopLine","linkify":"<a name=\"cmfcribboncategory__gettexttopline\"></a>  CMFCRibbonCategory::GetTextTopLine","source":"<a name=\"cmfcribboncategory__gettexttopline\"></a>  CMFCRibbonCategory::GetTextTopLine"},{"content":"Retrieves the vertical location of text on ribbon buttons in the ribbon category that display large images.","pos":[24318,24425]},{"pos":[24481,24493],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The vertical location of text, in pixels, on ribbon buttons that display large images.","pos":[24497,24583]},{"pos":[24593,24600],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[24610,24703],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcribboncategory__getvisibleelements\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCRibbonCategory::GetVisibleElements","linkify":"<a name=\"cmfcribboncategory__getvisibleelements\"></a>  CMFCRibbonCategory::GetVisibleElements","source":"<a name=\"cmfcribboncategory__getvisibleelements\"></a>  CMFCRibbonCategory::GetVisibleElements"},{"content":"Retrieves all visible elements that belong to the ribbon category.","pos":[24707,24773]},{"pos":[24903,24913],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Array of all visible elements.","pos":[24933,24963]},{"pos":[24973,24980],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[24990,25075],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcribboncategory__highlightpanel\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCRibbonCategory::HighlightPanel","linkify":"<a name=\"cmfcribboncategory__highlightpanel\"></a>  CMFCRibbonCategory::HighlightPanel","source":"<a name=\"cmfcribboncategory__highlightpanel\"></a>  CMFCRibbonCategory::HighlightPanel"},{"content":"Highlights the specified ribbon panel.","pos":[25079,25117]},{"pos":[25227,25237],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`pHLPanel`</ph>","pos":[25241,25256],"source":"[in] `pHLPanel`"},{"content":"Pointer to the ribbon panel to highlight.","pos":[25260,25301]},{"content":"[in] <ph id=\"ph1\">`point`</ph>","pos":[25308,25320],"source":"[in] `point`"},{"content":"The x and y coordinates of the pointer, relative to the upper-left corner of the window.","pos":[25324,25412]},{"pos":[25422,25434],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[25438,25569],"content":"Pointer to the previously highlighted ribbon panel; otherwise <ph id=\"ph1\">`NULL`</ph> if no ribbon panel is highlighted when this method is invoked.","source":"Pointer to the previously highlighted ribbon panel; otherwise `NULL` if no ribbon panel is highlighted when this method is invoked."},{"pos":[25579,25586],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[25590,25752],"content":"For more information about highlighting a ribbon panel, see <bpt id=\"p1\">[</bpt>CMFCRibbonPanel::Highlight<ept id=\"p1\">](../../mfc/reference/cmfcribbonpanel-class.md#cmfcribbonpanel__highlight)</ept>.","source":"For more information about highlighting a ribbon panel, see [CMFCRibbonPanel::Highlight](../../mfc/reference/cmfcribbonpanel-class.md#cmfcribbonpanel__highlight)."},{"pos":[25762,25833],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcribboncategory__hittest\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCRibbonCategory::HitTest","linkify":"<a name=\"cmfcribboncategory__hittest\"></a>  CMFCRibbonCategory::HitTest","source":"<a name=\"cmfcribboncategory__hittest\"></a>  CMFCRibbonCategory::HitTest"},{"content":"Retrieves a pointer to a ribbon element if the specified point is located in it.","pos":[25837,25917]},{"pos":[26041,26051],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`point`</ph>","pos":[26055,26067],"source":"[in] `point`"},{"content":"The x and y coordinates of the mouse pointer, relative to the upper-left corner of the window.","pos":[26071,26165]},{"content":"[in] <ph id=\"ph1\">`bCheckPanelCaption`</ph>","pos":[26172,26197],"source":"[in] `bCheckPanelCaption`"},{"content":"<ph id=\"ph1\"> `TRUE`</ph> to test the ribbon panel caption; <ph id=\"ph2\">`FALSE`</ph> to exclude the ribbon panel caption.","pos":[26200,26286],"source":" `TRUE` to test the ribbon panel caption; `FALSE` to exclude the ribbon panel caption."},{"pos":[26296,26308],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[26312,26387],"content":"Pointer to a ribbon element if the method was successful; otherwise <ph id=\"ph1\">`NULL`</ph>.","source":"Pointer to a ribbon element if the method was successful; otherwise `NULL`."},{"pos":[26397,26404],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Only ribbon elements that are contained in the ribbon category are tested.","pos":[26408,26482]},{"pos":[26492,26567],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcribboncategory__hittestex\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCRibbonCategory::HitTestEx","linkify":"<a name=\"cmfcribboncategory__hittestex\"></a>  CMFCRibbonCategory::HitTestEx","source":"<a name=\"cmfcribboncategory__hittestex\"></a>  CMFCRibbonCategory::HitTestEx"},{"content":"Retrieves the zero-based index of a ribbon element if the specified point is located in it.","pos":[26571,26662]},{"pos":[26725,26735],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`point`</ph>","pos":[26739,26751],"source":"[in] `point`"},{"content":"The x and y coordinates of the mouse pointer, relative to the upper-left corner of the window.","pos":[26755,26849]},{"pos":[26859,26871],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Zero-based index of a ribbon element if the method was successful; otherwise -1.","pos":[26875,26955]},{"pos":[26965,26972],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Only ribbon elements that are contained in the ribbon category are tested.","pos":[26976,27050]},{"pos":[27060,27157],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcribboncategory__hittestscrollbuttons\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCRibbonCategory::HitTestScrollButtons","linkify":"<a name=\"cmfcribboncategory__hittestscrollbuttons\"></a>  CMFCRibbonCategory::HitTestScrollButtons","source":"<a name=\"cmfcribboncategory__hittestscrollbuttons\"></a>  CMFCRibbonCategory::HitTestScrollButtons"},{"content":"If a point falls within a ribbon category’s left or right scroll button, returns a pointer to that button.","pos":[27161,27267]},{"pos":[27360,27370],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`point`</ph>","pos":[27374,27386],"source":"[in] `point`"},{"content":"The point to test.","pos":[27390,27408]},{"pos":[27418,27430],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[27434,27614],"content":"If <ph id=\"ph1\">`point`</ph> falls within the bounding rectangle of either the left or the right scroll button of the ribbon category, returns a pointer to that button, or otherwise, returns <ph id=\"ph2\">`NULL`</ph>.","source":"If `point` falls within the bounding rectangle of either the left or the right scroll button of the ribbon category, returns a pointer to that button, or otherwise, returns `NULL`."},{"pos":[27624,27631],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[27641,27714],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcribboncategory__isactive\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCRibbonCategory::IsActive","linkify":"<a name=\"cmfcribboncategory__isactive\"></a>  CMFCRibbonCategory::IsActive","source":"<a name=\"cmfcribboncategory__isactive\"></a>  CMFCRibbonCategory::IsActive"},{"content":"Indicates whether the ribbon category is the active category on the ribbon bar.","pos":[27718,27797]},{"pos":[27848,27860],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[27864,27936],"content":"<ph id=\"ph1\">`TRUE`</ph> if the ribbon category is the active category; otherwise <ph id=\"ph2\">`FALSE`</ph>.","source":"`TRUE` if the ribbon category is the active category; otherwise `FALSE`."},{"pos":[27946,27953],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The active ribbon category displays its ribbon panels.","pos":[27957,28011]},{"pos":[28021,28096],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcribboncategory__isvisible\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCRibbonCategory::IsVisible","linkify":"<a name=\"cmfcribboncategory__isvisible\"></a>  CMFCRibbonCategory::IsVisible","source":"<a name=\"cmfcribboncategory__isvisible\"></a>  CMFCRibbonCategory::IsVisible"},{"content":"Indicates whether the ribbon category is visible.","pos":[28100,28149]},{"pos":[28201,28213],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[28217,28277],"content":"<ph id=\"ph1\">`TRUE`</ph> if the ribbon category is visible; otherwise <ph id=\"ph2\">`FALSE`</ph>.","source":"`TRUE` if the ribbon category is visible; otherwise `FALSE`."},{"pos":[28287,28294],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Ribbon categories that are visible display a category tab.","pos":[28298,28356]},{"pos":[28366,28451],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcribboncategory__iswindows7look\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCRibbonCategory::IsWindows7Look","linkify":"<a name=\"cmfcribboncategory__iswindows7look\"></a>  CMFCRibbonCategory::IsWindows7Look","source":"<a name=\"cmfcribboncategory__iswindows7look\"></a>  CMFCRibbonCategory::IsWindows7Look"},{"content":"Indicates whether the parent ribbon has Windows 7 look (small rectangular application button).","pos":[28455,28549]},{"pos":[28606,28618],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[28622,28688],"content":"<ph id=\"ph1\">`TRUE`</ph> if the parent ribbon has Windows 7 look; otherwise <ph id=\"ph2\">`FALSE`</ph>.","source":"`TRUE` if the parent ribbon has Windows 7 look; otherwise `FALSE`."},{"pos":[28698,28705],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[28715,28812],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcribboncategory__notifycontrolcommand\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCRibbonCategory::NotifyControlCommand","linkify":"<a name=\"cmfcribboncategory__notifycontrolcommand\"></a>  CMFCRibbonCategory::NotifyControlCommand","source":"<a name=\"cmfcribboncategory__notifycontrolcommand\"></a>  CMFCRibbonCategory::NotifyControlCommand"},{"pos":[28816,28944],"content":"Delivers a WM_NOTIFY command message to all <ph id=\"ph1\">`CMFCRibbonPanel`</ph> elements in the <ph id=\"ph2\">`CMFCRibbonCategory`</ph> until the message is handled.","source":"Delivers a WM_NOTIFY command message to all `CMFCRibbonPanel` elements in the `CMFCRibbonCategory` until the message is handled."},{"pos":[29093,29103],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`bAccelerator`</ph>","pos":[29107,29126],"source":"[in] `bAccelerator`"},{"content":"<ph id=\"ph1\"> `TRUE`</ph> if this command originated from an accelerator, or <ph id=\"ph2\">`FALSE`</ph> otherwise.","pos":[29129,29206],"source":" `TRUE` if this command originated from an accelerator, or `FALSE` otherwise."},{"content":"[in] <ph id=\"ph1\">`nNotifyCode`</ph>","pos":[29213,29231],"source":"[in] `nNotifyCode`"},{"content":"The notification code.","pos":[29235,29257]},{"content":"[in] <ph id=\"ph1\">`wParam`</ph>","pos":[29264,29277],"source":"[in] `wParam`"},{"content":"The WPARAM field of the message.","pos":[29281,29313]},{"content":"[in] <ph id=\"ph1\">`lParam`</ph>","pos":[29320,29333],"source":"[in] `lParam`"},{"content":"The LPARAM field of the message.","pos":[29337,29369]},{"pos":[29379,29391],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[29395,29456],"content":"Returns <ph id=\"ph1\">`TRUE`</ph> if the message was handled, or <ph id=\"ph2\">`FALSE`</ph> if not.","source":"Returns `TRUE` if the message was handled, or `FALSE` if not."},{"pos":[29466,29473],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[29483,29564],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcribboncategory__oncancelmode\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCRibbonCategory::OnCancelMode","linkify":"<a name=\"cmfcribboncategory__oncancelmode\"></a>  CMFCRibbonCategory::OnCancelMode","source":"<a name=\"cmfcribboncategory__oncancelmode\"></a>  CMFCRibbonCategory::OnCancelMode"},{"pos":[29568,29654],"content":"Invokes cancel mode in all the <ph id=\"ph1\">`CMFCRibbonPanel`</ph> elements of the <ph id=\"ph2\">`CMFCRibbonCategory`</ph>.","source":"Invokes cancel mode in all the `CMFCRibbonPanel` elements of the `CMFCRibbonCategory`."},{"pos":[29708,29715],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[29725,29794],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcribboncategory__ondraw\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCRibbonCategory::OnDraw","linkify":"<a name=\"cmfcribboncategory__ondraw\"></a>  CMFCRibbonCategory::OnDraw","source":"<a name=\"cmfcribboncategory__ondraw\"></a>  CMFCRibbonCategory::OnDraw"},{"content":"Called by the framework to draw the ribbon category.","pos":[29798,29850]},{"pos":[29906,29916],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`pDC`</ph>","pos":[29920,29930],"source":"[in] `pDC`"},{"content":"Pointer to a device context for the ribbon category.","pos":[29934,29986]},{"pos":[29996,30003],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[30013,30092],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcribboncategory__ondrawimage\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCRibbonCategory::OnDrawImage","linkify":"<a name=\"cmfcribboncategory__ondrawimage\"></a>  CMFCRibbonCategory::OnDrawImage","source":"<a name=\"cmfcribboncategory__ondrawimage\"></a>  CMFCRibbonCategory::OnDrawImage"},{"content":"Called by the framework to draw the specified image on the ribbon category.","pos":[30096,30171]},{"pos":[30364,30374],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`pDC`</ph>","pos":[30378,30388],"source":"[in] `pDC`"},{"content":"Pointer to a device context for the image.","pos":[30392,30434]},{"content":"[in] <ph id=\"ph1\">`rect`</ph>","pos":[30441,30452],"source":"[in] `rect`"},{"content":"Display rectangle for the image.","pos":[30456,30488]},{"content":"[in] <ph id=\"ph1\">`pElement`</ph>","pos":[30495,30510],"source":"[in] `pElement`"},{"content":"Pointer to the ribbon element that contains the image.","pos":[30514,30568]},{"content":"[in] <ph id=\"ph1\">`bIsLargeImage`</ph>","pos":[30575,30595],"source":"[in] `bIsLargeImage`"},{"content":"<ph id=\"ph1\"> `TRUE`</ph> if the image is the large size; <ph id=\"ph2\">`FALSE`</ph> if the image is the small size.","pos":[30598,30677],"source":" `TRUE` if the image is the large size; `FALSE` if the image is the small size."},{"content":"[in] <ph id=\"ph1\">`nImageIndex`</ph>","pos":[30684,30702],"source":"[in] `nImageIndex`"},{"content":"Zero-based index of the image in the image array that is contained in the ribbon category.","pos":[30706,30796]},{"content":"[in] <ph id=\"ph1\">`bCenter`</ph>","pos":[30803,30817],"source":"[in] `bCenter`"},{"content":"<ph id=\"ph1\"> `TRUE`</ph> to center the image in the display rectangle; <ph id=\"ph2\">`FALSE`</ph> to draw the image in the upper-left corner of the display rectangle.","pos":[30820,30950],"source":" `TRUE` to center the image in the display rectangle; `FALSE` to draw the image in the upper-left corner of the display rectangle."},{"pos":[30960,30972],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[30976,31031],"content":"<ph id=\"ph1\">`TRUE`</ph> if the method was successful; otherwise <ph id=\"ph2\">`FALSE`</ph>.","source":"`TRUE` if the method was successful; otherwise `FALSE`."},{"pos":[31041,31048],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[31058,31147],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcribboncategory__ondrawmenuborder\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCRibbonCategory::OnDrawMenuBorder","linkify":"<a name=\"cmfcribboncategory__ondrawmenuborder\"></a>  CMFCRibbonCategory::OnDrawMenuBorder","source":"<a name=\"cmfcribboncategory__ondrawmenuborder\"></a>  CMFCRibbonCategory::OnDrawMenuBorder"},{"content":"Called by the framework to draw the border of a popup menu.","pos":[31151,31210]},{"pos":[31321,31331],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`pDC`</ph>","pos":[31335,31345],"source":"[in] `pDC`"},{"content":"This parameter is not used.","pos":[31349,31376]},{"content":"[in] <ph id=\"ph1\">`pMenuBar`</ph>","pos":[31383,31398],"source":"[in] `pMenuBar`"},{"content":"This parameter is not used.","pos":[31402,31429]},{"pos":[31439,31446],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"By default this method does nothing.","pos":[31450,31486]},{"content":"Override this method to draw the border of a popup menu.","pos":[31487,31543]},{"pos":[31553,31620],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcribboncategory__onkey\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCRibbonCategory::OnKey","linkify":"<a name=\"cmfcribboncategory__onkey\"></a>  CMFCRibbonCategory::OnKey","source":"<a name=\"cmfcribboncategory__onkey\"></a>  CMFCRibbonCategory::OnKey"},{"content":"Called by the framework when a user presses a keyboard button.","pos":[31624,31686]},{"pos":[31743,31753],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"The virtual key code for the key that a user pressed.","pos":[31768,31821]},{"pos":[31831,31838],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[31848,31931],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcribboncategory__onlbuttondown\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCRibbonCategory::OnLButtonDown","linkify":"<a name=\"cmfcribboncategory__onlbuttondown\"></a>  CMFCRibbonCategory::OnLButtonDown","source":"<a name=\"cmfcribboncategory__onlbuttondown\"></a>  CMFCRibbonCategory::OnLButtonDown"},{"content":"Called by the framework to retrieve the ribbon element under the specified point when the user presses the left mouse button.","pos":[31935,32060]},{"pos":[32145,32155],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`point`</ph>","pos":[32159,32171],"source":"[in] `point`"},{"content":"The x and y coordinates of the mouse pointer, relative to the upper-left corner of the window.","pos":[32175,32269]},{"pos":[32279,32291],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[32295,32370],"content":"Pointer to a ribbon element if the method was successful; otherwise <ph id=\"ph1\">`NULL`</ph>.","source":"Pointer to a ribbon element if the method was successful; otherwise `NULL`."},{"pos":[32380,32387],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[32397,32476],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcribboncategory__onlbuttonup\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCRibbonCategory::OnLButtonUp","linkify":"<a name=\"cmfcribboncategory__onlbuttonup\"></a>  CMFCRibbonCategory::OnLButtonUp","source":"<a name=\"cmfcribboncategory__onlbuttonup\"></a>  CMFCRibbonCategory::OnLButtonUp"},{"content":"Called by the framework when the user releases the left mouse button and the pointer is over the ribbon category.","pos":[32480,32593]},{"pos":[32658,32668],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`point`</ph>","pos":[32672,32684],"source":"[in] `point`"},{"content":"The x and y coordinates of the pointer, relative to the upper-left corner of the window.","pos":[32688,32776]},{"pos":[32786,32793],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[32803,32882],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcribboncategory__onmousemove\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCRibbonCategory::OnMouseMove","linkify":"<a name=\"cmfcribboncategory__onmousemove\"></a>  CMFCRibbonCategory::OnMouseMove","source":"<a name=\"cmfcribboncategory__onmousemove\"></a>  CMFCRibbonCategory::OnMouseMove"},{"content":"Called by the framework when the pointer moves on the ribbon bar in order to update the ribbon category display.","pos":[32886,32998]},{"pos":[33063,33073],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`point`</ph>","pos":[33077,33089],"source":"[in] `point`"},{"content":"The x and y coordinates of the pointer, relative to the upper-left corner of the window.","pos":[33093,33181]},{"pos":[33191,33198],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[33208,33289],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcribboncategory__onrtlchanged\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCRibbonCategory::OnRTLChanged","linkify":"<a name=\"cmfcribboncategory__onrtlchanged\"></a>  CMFCRibbonCategory::OnRTLChanged","source":"<a name=\"cmfcribboncategory__onrtlchanged\"></a>  CMFCRibbonCategory::OnRTLChanged"},{"content":"Called by the framework when the layout changes direction.","pos":[33293,33351]},{"pos":[33416,33426],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`bIsRTL`</ph>","pos":[33430,33443],"source":"[in] `bIsRTL`"},{"content":"<ph id=\"ph1\"> `TRUE`</ph> if the layout is right-to-left; <ph id=\"ph2\">`FALSE`</ph> if the layout is left-to-right.","pos":[33446,33525],"source":" `TRUE` if the layout is right-to-left; `FALSE` if the layout is left-to-right."},{"pos":[33535,33542],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This method adjusts the layout of all ribbon panels and ribbon elements that are contained in the ribbon category.","pos":[33546,33660]},{"pos":[33670,33751],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcribboncategory__onscrollhorz\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCRibbonCategory::OnScrollHorz","linkify":"<a name=\"cmfcribboncategory__onscrollhorz\"></a>  CMFCRibbonCategory::OnScrollHorz","source":"<a name=\"cmfcribboncategory__onscrollhorz\"></a>  CMFCRibbonCategory::OnScrollHorz"},{"content":"Scrolls the ribbon category in the horizontal direction.","pos":[33755,33811]},{"pos":[33915,33925],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`bScrollLeft`</ph>","pos":[33929,33947],"source":"[in] `bScrollLeft`"},{"content":"<ph id=\"ph1\"> `TRUE`</ph> to scroll to the left; <ph id=\"ph2\">`FALSE`</ph> to scroll to the right.","pos":[33950,34012],"source":" `TRUE` to scroll to the left; `FALSE` to scroll to the right."},{"content":"[in] <ph id=\"ph1\">`nScrollOffset`</ph>","pos":[34019,34039],"source":"[in] `nScrollOffset`"},{"content":"The scroll distance in pixels.","pos":[34043,34073]},{"pos":[34083,34095],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[34099,34180],"content":"<ph id=\"ph1\">`TRUE`</ph> if the ribbon category moved in a horizontal direction; otherwise <ph id=\"ph2\">`FALSE`</ph>.","source":"`TRUE` if the ribbon category moved in a horizontal direction; otherwise `FALSE`."},{"pos":[34190,34197],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[34207,34290],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcribboncategory__onupdatecmdui\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCRibbonCategory::OnUpdateCmdUI","linkify":"<a name=\"cmfcribboncategory__onupdatecmdui\"></a>  CMFCRibbonCategory::OnUpdateCmdUI","source":"<a name=\"cmfcribboncategory__onupdatecmdui\"></a>  CMFCRibbonCategory::OnUpdateCmdUI"},{"pos":[34294,34463],"content":"Calls the <ph id=\"ph1\">`OnUpdateCmdUI`</ph> member function in each of the <ph id=\"ph2\">`CMFCRibbonPanel`</ph> elements of the <ph id=\"ph3\">`CMFCRibbonCategory`</ph> to enable or disable the user-interface elements in them.","source":"Calls the `OnUpdateCmdUI` member function in each of the `CMFCRibbonPanel` elements of the `CMFCRibbonCategory` to enable or disable the user-interface elements in them."},{"pos":[34603,34613],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`pCmdUI`</ph>","pos":[34617,34630],"source":"[in] `pCmdUI`"},{"content":"Pointer to the <ph id=\"ph1\">`CMFCRibbonCmdUI`</ph> object that specifies which user-interface elements are to be enabled and which are to be disabled.","pos":[34634,34766],"source":" Pointer to the `CMFCRibbonCmdUI` object that specifies which user-interface elements are to be enabled and which are to be disabled."},{"content":"[in] <ph id=\"ph1\">`pTarget`</ph>","pos":[34773,34787],"source":"[in] `pTarget`"},{"content":"Pointer to the window that controls the enabling or disabling of the user-interface elements.","pos":[34791,34884]},{"content":"[in] <ph id=\"ph1\">`bDisableIfNoHndler`</ph>","pos":[34891,34916],"source":"[in] `bDisableIfNoHndler`"},{"content":"<ph id=\"ph1\"> `TRUE`</ph> to disable the user-interface item if no handler is defined in a message map; otherwise, <ph id=\"ph2\">`FALSE`</ph>.","pos":[34919,35024],"source":" `TRUE` to disable the user-interface item if no handler is defined in a message map; otherwise, `FALSE`."},{"pos":[35034,35041],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[35051,35132],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcribboncategory__recalclayout\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCRibbonCategory::RecalcLayout","linkify":"<a name=\"cmfcribboncategory__recalclayout\"></a>  CMFCRibbonCategory::RecalcLayout","source":"<a name=\"cmfcribboncategory__recalclayout\"></a>  CMFCRibbonCategory::RecalcLayout"},{"content":"Adjusts the layout of all controls on the ribbon category.","pos":[35136,35194]},{"pos":[35256,35266],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`pDC`</ph>","pos":[35270,35280],"source":"[in] `pDC`"},{"content":"Pointer to a device context for the ribbon category.","pos":[35284,35336]},{"pos":[35346,35353],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[35363,35442],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcribboncategory__removepanel\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCRibbonCategory::RemovePanel","linkify":"<a name=\"cmfcribboncategory__removepanel\"></a>  CMFCRibbonCategory::RemovePanel","source":"<a name=\"cmfcribboncategory__removepanel\"></a>  CMFCRibbonCategory::RemovePanel"},{"content":"Removes a ribbon panel from the ribbon category.","pos":[35446,35494]},{"pos":[35584,35594],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`nIndex`</ph>","pos":[35598,35611],"source":"[in] `nIndex`"},{"content":"The index number of the panel to remove.","pos":[35615,35655]},{"content":"Obtained by calling the <bpt id=\"p1\">[</bpt>CMFCRibbonCategory::GetPanelIndex<ept id=\"p1\">](#cmfcribboncategory__getpanelindex)</ept> method.","pos":[35656,35759],"source":" Obtained by calling the [CMFCRibbonCategory::GetPanelIndex](#cmfcribboncategory__getpanelindex) method."},{"content":"[in] <ph id=\"ph1\">`bDelete`</ph>","pos":[35766,35780],"source":"[in] `bDelete`"},{"content":"<ph id=\"ph1\"> `TRUE`</ph> to delete the panel object from memory; <ph id=\"ph2\">`FALSE`</ph> to remove the panel object without deleting it.","pos":[35783,35886],"source":" `TRUE` to delete the panel object from memory; `FALSE` to remove the panel object without deleting it."},{"pos":[35896,35908],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[35912,35968],"content":"<ph id=\"ph1\">`TRUE`</ph> if the method was successful; otherwise, <ph id=\"ph2\">`FALSE`</ph>.","source":"`TRUE` if the method was successful; otherwise, `FALSE`."},{"pos":[35978,36057],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcribboncategory__repospanels\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCRibbonCategory::ReposPanels","linkify":"<a name=\"cmfcribboncategory__repospanels\"></a>  CMFCRibbonCategory::ReposPanels","source":"<a name=\"cmfcribboncategory__repospanels\"></a>  CMFCRibbonCategory::ReposPanels"},{"content":"Adjusts the layout of all controls on the ribbon panels that are contained in the ribbon category.","pos":[36061,36159]},{"pos":[36220,36230],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`pDC`</ph>","pos":[36234,36244],"source":"[in] `pDC`"},{"content":"Pointer to a device context for the ribbon panels that are contained in the ribbon category.","pos":[36248,36340]},{"pos":[36350,36357],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[36367,36456],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcribboncategory__setcollapseorder\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCRibbonCategory::SetCollapseOrder","linkify":"<a name=\"cmfcribboncategory__setcollapseorder\"></a>  CMFCRibbonCategory::SetCollapseOrder","source":"<a name=\"cmfcribboncategory__setcollapseorder\"></a>  CMFCRibbonCategory::SetCollapseOrder"},{"content":"Defines the order in which the ribbon panels of the ribbon category collapse.","pos":[36460,36537]},{"pos":[36630,36640],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`arCollapseOrder`</ph>","pos":[36644,36666],"source":"[in] `arCollapseOrder`"},{"content":"Specifies the collapse order.","pos":[36670,36699]},{"content":"The array contains zero-based indexes of ribbon panels.","pos":[36700,36755]},{"pos":[36765,36772],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The library defines the collapse order.","pos":[36776,36815]},{"content":"However, you can customize this behavior by providing the category with the list of indexes that specifies the collapse order.","pos":[36816,36942]},{"content":"When the category detects that it has to collapse a ribbon panel, it looks for the next element in the specified list.","pos":[36949,37067]},{"content":"If the list is empty, or you have not specified enough elements, then the category uses the internal algorithm.","pos":[37068,37179]},{"content":"For example, the category has three ribbon panels and can be collapsed several times until all panels are in the fully collapsed state.","pos":[37186,37321]},{"content":"You can set the following collapse order: 0, 0, 2, 2.","pos":[37322,37375]},{"content":"In this case, the category will collapse the panel 0 two times, the panel 2 two times.","pos":[37376,37462]},{"content":"The panel that has the index of 1 remains uncollapsed.","pos":[37463,37517]},{"pos":[37527,37534],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following example demonstrates how to use the <ph id=\"ph1\">`SetCollapseOrder`</ph> method in the <ph id=\"ph2\">`CMFCRibbonCategory`</ph> class.","pos":[37538,37648],"source":"The following example demonstrates how to use the `SetCollapseOrder` method in the `CMFCRibbonCategory` class."},{"content":"The example shows how to construct an array for the collapse order, and how to set the collapse order to the ribbon category.","pos":[37649,37774]},{"pos":[37781,37882],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_MFC_RibbonApp#13<ept id=\"p2\">](../../mfc/reference/codesnippet/cpp/cmfcribboncategory-class_2.cpp)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_MFC_RibbonApp#13](../../mfc/reference/codesnippet/cpp/cmfcribboncategory-class_2.cpp)]"},{"pos":[37892,37963],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcribboncategory__setdata\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCRibbonCategory::SetData","linkify":"<a name=\"cmfcribboncategory__setdata\"></a>  CMFCRibbonCategory::SetData","source":"<a name=\"cmfcribboncategory__setdata\"></a>  CMFCRibbonCategory::SetData"},{"content":"Sets the user-defined data to be associated with the ribbon category.","pos":[37967,38036]},{"pos":[38093,38103],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`dwData`</ph>","pos":[38107,38120],"source":"[in] `dwData`"},{"content":"The user-defined data.","pos":[38124,38146]},{"pos":[38156,38227],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcribboncategory__setkeys\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCRibbonCategory::SetKeys","linkify":"<a name=\"cmfcribboncategory__setkeys\"></a>  CMFCRibbonCategory::SetKeys","source":"<a name=\"cmfcribboncategory__setkeys\"></a>  CMFCRibbonCategory::SetKeys"},{"content":"Assigns a keytip to the ribbon category.","pos":[38231,38271]},{"pos":[38328,38338],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`lpszKeys`</ph>","pos":[38342,38357],"source":"[in] `lpszKeys`"},{"content":"The keytip text.","pos":[38361,38377]},{"pos":[38387,38394],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Keytips are displayed when the user presses the Alt key or the F10 key.","pos":[38398,38469]},{"pos":[38479,38550],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcribboncategory__setname\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCRibbonCategory::SetName","linkify":"<a name=\"cmfcribboncategory__setname\"></a>  CMFCRibbonCategory::SetName","source":"<a name=\"cmfcribboncategory__setname\"></a>  CMFCRibbonCategory::SetName"},{"content":"Assigns a name and keytip to the ribbon category.","pos":[38554,38603]},{"pos":[38660,38670],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`lpszName`</ph>","pos":[38674,38689],"source":"[in] `lpszName`"},{"content":"The name and keytip of the ribbon category.","pos":[38693,38736]},{"pos":[38746,38753],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[38757,38881],"content":"To set the keytip for the ribbon category, append a newline escape sequence followed by the keytip characters to <ph id=\"ph1\">`lpszName`</ph>.","source":"To set the keytip for the ribbon category, append a newline escape sequence followed by the keytip characters to `lpszName`."},{"pos":[38891,38970],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcribboncategory__settabcolor\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCRibbonCategory::SetTabColor","linkify":"<a name=\"cmfcribboncategory__settabcolor\"></a>  CMFCRibbonCategory::SetTabColor","source":"<a name=\"cmfcribboncategory__settabcolor\"></a>  CMFCRibbonCategory::SetTabColor"},{"content":"Sets the color of the ribbon category.","pos":[38974,39012]},{"pos":[39086,39096],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`color`</ph>","pos":[39100,39112],"source":"[in] `color`"},{"content":"Specifies the new color of the ribbon category.","pos":[39116,39163]},{"pos":[39173,39180],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Color can be one of the following values:","pos":[39184,39225]},{"content":"AFX_CategoryColor_None","pos":[39235,39257]},{"content":"AFX_CategoryColor_Red","pos":[39267,39288]},{"content":"AFX_CategoryColor_Orange","pos":[39298,39322]},{"content":"AFX_CategoryColor_Yellow","pos":[39332,39356]},{"content":"AFX_CategoryColor_Green","pos":[39366,39389]},{"content":"AFX_CategoryColor_Blue","pos":[39399,39421]},{"content":"AFX_CategoryColor_Indigo","pos":[39431,39455]},{"content":"AFX_CategoryColor_Violet","pos":[39465,39489]},{"pos":[39498,39506],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Hierarchy Chart<ept id=\"p1\">](../../mfc/hierarchy-chart.md)</ept><ph id=\"ph1\"> </ph>","pos":[39510,39558],"source":"[Hierarchy Chart](../../mfc/hierarchy-chart.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Classes<ept id=\"p1\">](../../mfc/reference/mfc-classes.md)</ept><ph id=\"ph1\"> </ph>","pos":[39561,39608],"source":" [Classes](../../mfc/reference/mfc-classes.md) "},{"content":"<bpt id=\"p1\"> [</bpt>CObject Class<ept id=\"p1\">](../../mfc/reference/cobject-class.md)</ept>","pos":[39611,39665],"source":" [CObject Class](../../mfc/reference/cobject-class.md)"}],"content":"---\ntitle: \"CMFCRibbonCategory Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"CMFCRibbonCategory\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"CMFCRibbonCategory class\"\nms.assetid: 99ba25b6-d060-4fdd-bfab-3c46c22981bb\ncaps.latest.revision: 38\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# CMFCRibbonCategory Class\nThe `CMFCRibbonCategory` class implements a ribbon tab that contains a group of [ribbon panels](../../mfc/reference/cmfcribbonpanel-class.md).  \n  \n## Syntax  \n  \n```  \nclass CMFCRibbonCategory : public CObject  \n```  \n  \n## Members  \n  \n### Protected Constructors  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CMFCRibbonCategory::CMFCRibbonCategory](#cmfcribboncategory__cmfcribboncategory)|The constructor.|  \n  \n### Public Methods  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CMFCRibbonCategory::AddHidden](#cmfcribboncategory__addhidden)|Adds a hidden element to the ribbon category.|  \n|[CMFCRibbonCategory::AddPanel](#cmfcribboncategory__addpanel)|Adds a new panel to the ribbon category.|  \n|[CMFCRibbonCategory::CopyFrom](#cmfcribboncategory__copyfrom)||  \n|[CMFCRibbonCategory::FindByData](#cmfcribboncategory__findbydata)||  \n|[CMFCRibbonCategory::FindByID](#cmfcribboncategory__findbyid)||  \n|[CMFCRibbonCategory::FindPanelWithElem](#cmfcribboncategory__findpanelwithelem)||  \n|[CMFCRibbonCategory::GetContextID](#cmfcribboncategory__getcontextid)|Returns the context ID of the ribbon category.|  \n|[CMFCRibbonCategory::GetData](#cmfcribboncategory__getdata)|Returns the user-defined data that is associated with the ribbon category.|  \n|[CMFCRibbonCategory::GetDroppedDown](#cmfcribboncategory__getdroppeddown)||  \n|[CMFCRibbonCategory::GetElements](#cmfcribboncategory__getelements)||  \n|[CMFCRibbonCategory::GetElementsByID](#cmfcribboncategory__getelementsbyid)||  \n|[CMFCRibbonCategory::GetFirstVisibleElement](#cmfcribboncategory__getfirstvisibleelement)|Obtain a first visible element that belong to the ribbon category.|  \n|[CMFCRibbonCategory::GetFocused](#cmfcribboncategory__getfocused)|Returns a focused element.|  \n|[CMFCRibbonCategory::GetHighlighted](#cmfcribboncategory__gethighlighted)|Returns a highlighted element.|  \n|[CMFCRibbonCategory::GetImageCount](#cmfcribboncategory__getimagecount)||  \n|[CMFCRibbonCategory::GetImageSize](#cmfcribboncategory__getimagesize)||  \n|[CMFCRibbonCategory::GetItemIDsList](#cmfcribboncategory__getitemidslist)||  \n|[CMFCRibbonCategory::GetLastVisibleElement](#cmfcribboncategory__getlastvisibleelement)|Obtain a last visible element that belong to the ribbon category|  \n|[CMFCRibbonCategory::GetLargeImages](#cmfcribboncategory__getlargeimages)|Returns a reference to the list of large images that the ribbon category uses.|  \n|[CMFCRibbonCategory::GetMaxHeight](#cmfcribboncategory__getmaxheight)||  \n|[CMFCRibbonCategory::GetName](#cmfcribboncategory__getname)||  \n|[CMFCRibbonCategory::GetPanel](#cmfcribboncategory__getpanel)|Returns a pointer to the ribbon panel that is located at the specified index.|  \n|[CMFCRibbonCategory::GetPanelCount](#cmfcribboncategory__getpanelcount)|Returns the number of ribbon panels in the ribbon category.|  \n|[CMFCRibbonCategory::GetPanelFromPoint](#cmfcribboncategory__getpanelfrompoint)||  \n|[CMFCRibbonCategory::GetPanelIndex](#cmfcribboncategory__getpanelindex)|Returns the index of the specified ribbon panel.|  \n|[CMFCRibbonCategory::GetParentButton](#cmfcribboncategory__getparentbutton)||  \n|[CMFCRibbonCategory::GetParentMenuBar](#cmfcribboncategory__getparentmenubar)||  \n|[CMFCRibbonCategory::GetParentRibbonBar](#cmfcribboncategory__getparentribbonbar)||  \n|[CMFCRibbonCategory::GetRect](#cmfcribboncategory__getrect)||  \n|[CMFCRibbonCategory::GetSmallImages](#cmfcribboncategory__getsmallimages)|Returns a reference to the list of small images that the category uses.|  \n|[CMFCRibbonCategory::GetTabColor](#cmfcribboncategory__gettabcolor)|Returns the current color of the ribbon category tab.|  \n|[CMFCRibbonCategory::GetTabRect](#cmfcribboncategory__gettabrect)||  \n|[CMFCRibbonCategory::GetTextTopLine](#cmfcribboncategory__gettexttopline)||  \n|[CMFCRibbonCategory::GetVisibleElements](#cmfcribboncategory__getvisibleelements)|Obtain all visible elements that belong to the ribbon category.|  \n|[CMFCRibbonCategory::HighlightPanel](#cmfcribboncategory__highlightpanel)||  \n|[CMFCRibbonCategory::HitTest](#cmfcribboncategory__hittest)||  \n|[CMFCRibbonCategory::HitTestEx](#cmfcribboncategory__hittestex)||  \n|[CMFCRibbonCategory::HitTestScrollButtons](#cmfcribboncategory__hittestscrollbuttons)||  \n|[CMFCRibbonCategory::IsActive](#cmfcribboncategory__isactive)||  \n|[CMFCRibbonCategory::IsVisible](#cmfcribboncategory__isvisible)|Determines whether the ribbon category is visible.|  \n|[CMFCRibbonCategory::IsWindows7Look](#cmfcribboncategory__iswindows7look)|Indicates whether the parent ribbon has Windows 7-style look (small rectangular application button)|  \n|[CMFCRibbonCategory::NotifyControlCommand](#cmfcribboncategory__notifycontrolcommand)||  \n|[CMFCRibbonCategory::OnCancelMode](#cmfcribboncategory__oncancelmode)||  \n|[CMFCRibbonCategory::OnDraw](#cmfcribboncategory__ondraw)||  \n|[CMFCRibbonCategory::OnDrawImage](#cmfcribboncategory__ondrawimage)||  \n|[CMFCRibbonCategory::OnDrawMenuBorder](#cmfcribboncategory__ondrawmenuborder)||  \n|[CMFCRibbonCategory::OnKey](#cmfcribboncategory__onkey)|Called by the framework when a user presses a keyboard button.|  \n|[CMFCRibbonCategory::OnLButtonDown](#cmfcribboncategory__onlbuttondown)||  \n|[CMFCRibbonCategory::OnLButtonUp](#cmfcribboncategory__onlbuttonup)||  \n|[CMFCRibbonCategory::OnMouseMove](#cmfcribboncategory__onmousemove)||  \n|[CMFCRibbonCategory::OnRTLChanged](#cmfcribboncategory__onrtlchanged)||  \n|[CMFCRibbonCategory::OnScrollHorz](#cmfcribboncategory__onscrollhorz)||  \n|[CMFCRibbonCategory::OnUpdateCmdUI](#cmfcribboncategory__onupdatecmdui)||  \n|[CMFCRibbonCategory::RecalcLayout](#cmfcribboncategory__recalclayout)||  \n|[CMFCRibbonCategory::RemovePanel](#cmfcribboncategory__removepanel)||  \n|[CMFCRibbonCategory::ReposPanels](#cmfcribboncategory__repospanels)||  \n|[CMFCRibbonCategory::SetCollapseOrder](#cmfcribboncategory__setcollapseorder)|Defines the collapse order of the ribbon panels that are present in the ribbon category.|  \n|[CMFCRibbonCategory::SetData](#cmfcribboncategory__setdata)|Stores the user defined data in the ribbon category.|  \n|[CMFCRibbonCategory::SetKeys](#cmfcribboncategory__setkeys)|Assigns a keytip to the ribbon category.|  \n|[CMFCRibbonCategory::SetName](#cmfcribboncategory__setname)||  \n|[CMFCRibbonCategory::SetTabColor](#cmfcribboncategory__settabcolor)|Sets the color of the ribbon category.|  \n  \n## Remarks  \n Typically, you create a ribbon category indirectly by calling [CMFCRibbonBar::AddCategory](../../mfc/reference/cmfcribbonbar-class.md#cmfcribbonbar__addcategory), which returns a pointer to the newly created ribbon category. You add panels to the category by calling [CMFCRibbonCategory::AddPanel](#cmfcribboncategory__addpanel).  \n  \n The `CMFCRibbonTab` class draws ribbon categories. It is derived from [CMFCRibbonBaseElement Class](../../mfc/reference/cmfcribbonbaseelement-class.md).  \n  \n This following example demonstrates how to create a ribbon category and add a panel to it.  \n  \n `// Create a new ribbon category and get a pointer to it`  \n  \n `CMFCRibbonCategory* pCategory = m_wndRibbonBar.AddCategory`  \n  \n `(_T(\"&Write\"),           // Category name`  \n  \n `IDB_WRITE,              // Category small images (16 x 16)`  \n  \n `IDB_WRITE_LARGE);   // Category large images (32 x 32)`  \n  \n `// Add a panel to the new category`  \n  \n `CMFCRibbonPanel* pPanel = pCategory->AddPanel (`  \n  \n `_T(\"Clipboard\"),                       // Panel name`  \n  \n `m_PanelIcons.ExtractIcon (0));  // Panel icon`  \n  \n The following diagram shows a figure of the Home category from the RibbonApp sample application.  \n  \n ![CMFCRibbonCategory image](../../mfc/reference/media/cmfcribboncategory.png \"cmfcribboncategory\")  \n  \n## Inheritance Hierarchy  \n [CObject](../../mfc/reference/cobject-class.md)  \n  \n [CMFCRibbonCategory](../../mfc/reference/cmfcribboncategory-class.md)  \n  \n## Requirements  \n **Header:** afxribboncategory.h  \n  \n##  <a name=\"cmfcribboncategory__addhidden\"></a>  CMFCRibbonCategory::AddHidden  \n Adds the specified ribbon element to the array of ribbon elements that are displayed on the customization dialog box.  \n  \n```  \nvoid AddHidden(CMFCRibbonBaseElement* pElem);\n```  \n  \n### Parameters  \n [in] `pElem`  \n Pointer to a ribbon element.  \n  \n### Remarks  \n Ribbon elements on the customization dialog box are the commands that you can add to the quick access toolbar.  \n  \n##  <a name=\"cmfcribboncategory__addpanel\"></a>  CMFCRibbonCategory::AddPanel  \n Creates a ribbon panel for the ribbon category.  \n  \n```  \nCMFCRibbonPanel* AddPanel(\n    LPCTSTR lpszPanelName,  \n    HICON hIcon = 0,  \n    CRuntimeClass* pRTI = NULL);\n```  \n  \n### Parameters  \n [in] `lpszPanelName`  \n Pointer to the name of the new ribbon panel.  \n  \n [in] `hIcon`  \n Handle to the default icon for the new ribbon panel.  \n  \n [in] `pRTI`  \n Pointer to runtime class information for a custom ribbon panel.  \n  \n### Return Value  \n Pointer to the new ribbon panel if the method was successful; otherwise `NULL` if the panel was not created.  \n  \n### Remarks  \n If you want to create a custom ribbon panel, you must specify its runtime class information in `pRTI`. The custom ribbon panel class must be derived from the `CMFCRibbonPanel` class.  \n  \n The default icon for the ribbon panel is displayed when there is insufficient space to display the ribbon elements.  \n  \n### Example  \n The following example demonstrates how to use the `AddPanel` method in the `CMFCRibbonCategory` class.  \n  \n [!code-cpp[NVC_MFC_RibbonApp#10](../../mfc/reference/codesnippet/cpp/cmfcribboncategory-class_1.cpp)]  \n  \n##  <a name=\"cmfcribboncategory__cmfcribboncategory\"></a>  CMFCRibbonCategory::CMFCRibbonCategory  \n Constructs and initializes a [CMFCRibbonCategory](../../mfc/reference/cmfcribboncategory-class.md) object.  \n  \n```  \nCMFCRibbonCategory(\n    CMFCRibbonBar* pParenrRibbonBar,  \n    LPCTSTR lpszName,  \n    UINT uiSmallImagesResID,  \n    UINT uiLargeImagesResID,  \n    CSize sizeSmallImage = CSize(16,\n    16),  \n    CSize sizeLargeImage = CSize(32,\n    32));\n```  \n  \n### Parameters  \n [in] `pParenrRibbonBar`  \n Pointer to the parent ribbon bar of the ribbon category.  \n  \n [in] `lpszName`  \n Name of the ribbon category.  \n  \n [in] `uiSmallImagesResID`  \n Resource ID of the image list for small images that are used by ribbon elements in the ribbon category.  \n  \n [in] `uiLargeImagesResID`  \n Resource ID of the image list for large images that are used by ribbon elements in the ribbon category.  \n  \n [in] `sizeSmallImage`  \n Default size of small images for ribbon elements in the ribbon category.  \n  \n [in] `sizeLargeImage`  \n Default size of large images for ribbon elements in the ribbon category.  \n  \n##  <a name=\"cmfcribboncategory__copyfrom\"></a>  CMFCRibbonCategory::CopyFrom  \n Copies the state of the specified [CMFCRibbonCategory](../../mfc/reference/cmfcribboncategory-class.md) to the current [CMFCRibbonCategory](../../mfc/reference/cmfcribboncategory-class.md) object.  \n  \n```  \nvirtual void CopyFrom(CMFCRibbonCategory& src);\n```  \n  \n### Parameters  \n [in] `src`  \n The source [CMFCRibbonCategory](../../mfc/reference/cmfcribboncategory-class.md) object.  \n  \n### Remarks  \n  \n##  <a name=\"cmfcribboncategory__findbydata\"></a>  CMFCRibbonCategory::FindByData  \n Retrieves the ribbon element associated with the specified data.  \n  \n```  \nCMFCRibbonBaseElement* FindByData(\n    DWORD_PTR dwData,  \n    BOOL bVisibleOnly = TRUE) const;\n\n \n```  \n  \n### Parameters  \n [in] `dwData`  \n The data associated with a ribbon element.  \n  \n [in] `bVisibleOnly`  \n `TRUE` to include quick access ribbon elements in the search; `FALSE` to exclude quick access ribbon elements in the search.  \n  \n### Return Value  \n Pointer to a ribbon element if the method was successful; otherwise `NULL`.  \n  \n### Remarks  \n  \n##  <a name=\"cmfcribboncategory__findbyid\"></a>  CMFCRibbonCategory::FindByID  \n Retrieves the ribbon element associated with the specified command ID.  \n  \n```  \nCMFCRibbonBaseElement* FindByID(\n    UINT uiCmdID,  \n    BOOL bVisibleOnly = TRUE) const;\n\n \n```  \n  \n### Parameters  \n [in] `uiCmdID`  \n Command ID associated with a ribbon element.  \n  \n [in] `bVisibleOnly`  \n `TRUE` to include quick access ribbon elements in the search; `FALSE` to exclude quick access ribbon elements in the search.  \n  \n### Return Value  \n Pointer to a ribbon element if the method was successful; otherwise `NULL`.  \n  \n### Remarks  \n  \n##  <a name=\"cmfcribboncategory__findpanelwithelem\"></a>  CMFCRibbonCategory::FindPanelWithElem  \n Retrieves the ribbon panel that contains the specified ribbon element.  \n  \n```  \nCMFCRibbonPanel* FindPanelWithElem(const CMFCRibbonBaseElement* pElement);\n```  \n  \n### Parameters  \n [in] `pElement`  \n Pointer to a ribbon element.  \n  \n### Return Value  \n Pointer to a ribbon panel if the method was successful; otherwise `NULL`.  \n  \n### Remarks  \n  \n##  <a name=\"cmfcribboncategory__getcontextid\"></a>  CMFCRibbonCategory::GetContextID  \n Retrieves the context ID of the ribbon category.  \n  \n```  \nUINT GetContextID() const;\n\n \n```  \n  \n### Return Value  \n Context ID of the ribbon category.  \n  \n### Remarks  \n The context ID is 0 if the ribbon category is not a context ribbon category.  \n  \n##  <a name=\"cmfcribboncategory__getdata\"></a>  CMFCRibbonCategory::GetData  \n Retrieves the user-defined data that is associated with the ribbon category.  \n  \n```  \nDWORD_PTR GetData() const;\n\n \n```  \n  \n### Return Value  \n The user-defined data that is associated with the ribbon category.  \n  \n##  <a name=\"cmfcribboncategory__getdroppeddown\"></a>  CMFCRibbonCategory::GetDroppedDown  \n Retrieves a pointer to the ribbon element that currently has its pop-up menu displayed.  \n  \n```  \nCMFCRibbonBaseElement* GetDroppedDown();\n```  \n  \n### Return Value  \n Pointer to a ribbon element if the method was successful; otherwise `NULL`.  \n  \n### Remarks  \n  \n##  <a name=\"cmfcribboncategory__getelements\"></a>  CMFCRibbonCategory::GetElements  \n Retrieves all ribbon elements in the ribbon category.  \n  \n```  \nvoid GetElements(\n    CArray <CMFCRibbonBaseElement*, CMFCRibbonBaseElement*>& arElements);\n```  \n  \n### Parameters  \n [in, out] `arElements`  \n Reference to a [CArray](../../mfc/reference/carray-class.md) of ribbon elements.  \n  \n### Remarks  \n Ribbon elements that are designed for use on the quick access toolbar are included in the array.  \n  \n##  <a name=\"cmfcribboncategory__getelementsbyid\"></a>  CMFCRibbonCategory::GetElementsByID  \n Retrieves all ribbon elements that are associated with the specified command ID.  \n  \n```  \nvoid GetElementsByID(\n    UINT uiCmdID,  \n    CArray <CMFCRibbonBaseElement*, CMFCRibbonBaseElement*>& arElements);\n```  \n  \n### Parameters  \n [in] `uiCmdID`  \n Command ID associated with a ribbon element.  \n  \n [in, out] `arElements`  \n Reference to a [CArray](../../mfc/reference/carray-class.md) of ribbon elements.  \n  \n### Remarks  \n Ribbon elements that are designed for use on the quick access toolbar are included in the array.  \n  \n##  <a name=\"cmfcribboncategory__getfirstvisibleelement\"></a>  CMFCRibbonCategory::GetFirstVisibleElement  \n Retrieves the first visible element that belongs to the ribbon category.  \n  \n```  \nCMFCRibbonBaseElement* GetFirstVisibleElement() const;\n\n \n```  \n  \n### Return Value  \n Pointer to the first visible element; may be `NULL` if category does not have any visible elements.  \n  \n### Remarks  \n  \n##  <a name=\"cmfcribboncategory__getfocused\"></a>  CMFCRibbonCategory::GetFocused  \n Returns a focused element.  \n  \n```  \nCMFCRibbonBaseElement* GetFocused();\n```  \n  \n### Return Value  \n A pointer to a focused element or `NULL`.  \n  \n### Remarks  \n  \n##  <a name=\"cmfcribboncategory__gethighlighted\"></a>  CMFCRibbonCategory::GetHighlighted  \n Returns a highlighted element.  \n  \n```  \nCMFCRibbonBaseElement* GetHighlighted();\n```  \n  \n### Return Value  \n A pointer to a highlighted element or `NULL` if no elements are highlighted.  \n  \n### Remarks  \n  \n##  <a name=\"cmfcribboncategory__getimagecount\"></a>  CMFCRibbonCategory::GetImageCount  \n Retrieves the number of images in the specified image list that is contained in the ribbon category.  \n  \n```  \nint GetImageCount(BOOL bIsLargeImage) const;\n\n \n```  \n  \n### Parameters  \n [in] `bIsLargeImage`  \n `TRUE` for the number of images in the large image list; `FALSE` for the number of images in the small image list.  \n  \n### Return Value  \n The number of images in the specified image list.  \n  \n### Remarks  \n  \n##  <a name=\"cmfcribboncategory__getimagesize\"></a>  CMFCRibbonCategory::GetImageSize  \n Retrieves the size of an image in the specified image list that is contained in the ribbon category.  \n  \n```  \nCSize GetImageSize(BOOL bIsLargeImage) const;\n\n \n```  \n  \n### Parameters  \n [in] `bIsLargeImage`  \n `TRUE` for the size of large images; `FALSE` for the size of small images.  \n  \n### Return Value  \n The size of an image in the specified image list.  \n  \n### Remarks  \n The size retrieved includes the global image scale factor.  \n  \n##  <a name=\"cmfcribboncategory__getitemidslist\"></a>  CMFCRibbonCategory::GetItemIDsList  \n Retrieves the command IDs for the ribbon elements that are contained in the ribbon category.  \n  \n```  \nvoid GetItemIDsList(\n    CList<UINT, UINT>& lstItems,  \n    BOOL bHiddenOnly = FALSE) const;\n\n \n```  \n  \n### Parameters  \n [out] `lstItems`  \n The list of command IDs for the ribbon elements in the ribbon category.  \n  \n [in] `bHiddenOnly`  \n `TRUE` to exclude ribbon elements displayed on the ribbon panels in the ribbon category; `FALSE` to include all ribbon elements in the ribbon category.  \n  \n### Remarks  \n  \n##  <a name=\"cmfcribboncategory__getlargeimages\"></a>  CMFCRibbonCategory::GetLargeImages  \n Retrieves the list of large images that are contained in the ribbon category.  \n  \n```  \nCMFCToolBarImages& GetLargeImages();\n```  \n  \n### Return Value  \n The list of large images that are contained in the ribbon category.  \n  \n##  <a name=\"cmfcribboncategory__getlastvisibleelement\"></a>  CMFCRibbonCategory::GetLastVisibleElement  \n Retrieves the last visible element that belongs to the ribbon category.  \n  \n```  \nCMFCRibbonBaseElement* GetLastVisibleElement() const;\n\n \n```  \n  \n### Return Value  \n Pointer to the last visible element; may be `NULL` if the category does not have any visible elements.  \n  \n### Remarks  \n  \n##  <a name=\"cmfcribboncategory__getmaxheight\"></a>  CMFCRibbonCategory::GetMaxHeight  \n Retrieves the maximum height of the ribbon panels that are contained in the ribbon category.  \n  \n```  \nint GetMaxHeight(CDC* pDC);\n```  \n  \n### Parameters  \n [in] `pDC`  \n Pointer to a device context for the ribbon panels.  \n  \n### Return Value  \n The maximum height of the ribbon panels that are contained in the ribbon category.  \n  \n### Remarks  \n The value retrieved includes the height of the top and bottom margins for the ribbon panels.  \n  \n##  <a name=\"cmfcribboncategory__getname\"></a>  CMFCRibbonCategory::GetName  \n Retrieves the name of the ribbon category.  \n  \n```  \nLPCTSTR GetName() const;\n\n \n```  \n  \n### Return Value  \n The name of the ribbon category.  \n  \n### Remarks  \n  \n##  <a name=\"cmfcribboncategory__getpanel\"></a>  CMFCRibbonCategory::GetPanel  \n Returns a pointer to the ribbon panel that is located at the specified index.  \n  \n```  \nCMFCRibbonPanel* GetPanel(int nIndex);\n```  \n  \n### Parameters  \n [in] `nIndex`  \n The zero-based index of a ribbon panel.  \n  \n### Return Value  \n Pointer to the ribbon panel that is located at the specified index.  \n  \n### Remarks  \n An exception is thrown if `nIndex` is out of range.  \n  \n##  <a name=\"cmfcribboncategory__getpanelcount\"></a>  CMFCRibbonCategory::GetPanelCount  \n Returns the number of ribbon panels in the ribbon category.  \n  \n```  \nint GetPanelCount() const;\n\n \n```  \n  \n### Return Value  \n The number of ribbon panels in the ribbon category.  \n  \n##  <a name=\"cmfcribboncategory__getpanelfrompoint\"></a>  CMFCRibbonCategory::GetPanelFromPoint  \n Retrieves a pointer to a ribbon panel if the specified point is located in it.  \n  \n```  \nCMFCRibbonPanel* GetPanelFromPoint(CPoint point) const;\n\n \n```  \n  \n### Parameters  \n [in] `point`  \n The x and y coordinates of the pointer, relative to the upper-left corner of the window.  \n  \n### Return Value  \n Pointer to a ribbon panel if the method was successful; otherwise `NULL`.  \n  \n### Remarks  \n Only ribbon panels that are contained in the ribbon category are tested.  \n  \n##  <a name=\"cmfcribboncategory__getpanelindex\"></a>  CMFCRibbonCategory::GetPanelIndex  \n Retrieves the zero-based index of the specified ribbon panel.  \n  \n```  \nint GetPanelIndex(const CMFCRibbonPanel* pPanel) const;\n\n \n```  \n  \n### Parameters  \n [in] `pPanel`  \n Pointer to a ribbon panel.  \n  \n### Return Value  \n Zero-based index of the specified ribbon panel if the method was successful; otherwise -1.  \n  \n### Remarks  \n Only ribbon panels that are contained in the ribbon category are searched.  \n  \n##  <a name=\"cmfcribboncategory__getparentbutton\"></a>  CMFCRibbonCategory::GetParentButton  \n Retrieves the parent ribbon element of the ribbon category.  \n  \n```  \nCMFCRibbonBaseElement* GetParentButton() const;\n\n \n```  \n  \n### Return Value  \n Returns a pointer to the parent ribbon element, or `NULL` if there is no parent element.  \n  \n### Remarks  \n  \n##  <a name=\"cmfcribboncategory__getparentmenubar\"></a>  CMFCRibbonCategory::GetParentMenuBar  \n Returns a pointer to the parent menu bar of the `CMFCRibbonCategory` object.  \n  \n```  \nCMFCRibbonPanelMenuBar* GetParentMenuBar() const;\n\n \n```  \n  \n### Return Value  \n Returns the contents of the `m_pParentMenuBar` protected member.  \n  \n### Remarks  \n  \n##  <a name=\"cmfcribboncategory__getparentribbonbar\"></a>  CMFCRibbonCategory::GetParentRibbonBar  \n Retrieves the parent ribbon bar for the ribbon category.  \n  \n```  \nCMFCRibbonBar* GetParentRibbonBar() const;\n\n \n```  \n  \n### Return Value  \n Pointer to the parent ribbon bar for the ribbon category.  \n  \n### Remarks  \n  \n##  <a name=\"cmfcribboncategory__getrect\"></a>  CMFCRibbonCategory::GetRect  \n Retrieves the display rectangle for the ribbon category.  \n  \n```  \nCRect GetRect() const;\n\n \n```  \n  \n### Return Value  \n The display rectangle for the ribbon category.  \n  \n### Remarks  \n The display rectangle for the ribbon category does not include the category tab.  \n  \n##  <a name=\"cmfcribboncategory__getsmallimages\"></a>  CMFCRibbonCategory::GetSmallImages  \n Retrieves the list of small images that are contained in the ribbon category.  \n  \n```  \nCMFCToolBarImages& GetSmallImages();\n```  \n  \n### Return Value  \n The list of small images that are contained in the ribbon category.  \n  \n##  <a name=\"cmfcribboncategory__gettabcolor\"></a>  CMFCRibbonCategory::GetTabColor  \n Returns the current color of the ribbon category tab.  \n  \n```  \nAFX_RibbonCategoryColor GetTabColor() const;\n\n \n```  \n  \n### Return Value  \n The current color of the ribbon category tab.  \n  \n### Remarks  \n The returned value can be one of the following enumerated values:  \n  \n-   AFX_CategoryColor_Red  \n  \n-   AFX_CategoryColor_Orange  \n  \n-   AFX_CategoryColor_Yellow  \n  \n-   AFX_CategoryColor_Green  \n  \n-   AFX_CategoryColor_Blue  \n  \n-   AFX_CategoryColor_Indigo  \n  \n-   AFX_CategoryColor_Violet  \n  \n##  <a name=\"cmfcribboncategory__gettabrect\"></a>  CMFCRibbonCategory::GetTabRect  \n Retrieves the display rectangle for the ribbon category tab.  \n  \n```  \nCRect GetTabRect() const;\n\n \n```  \n  \n### Return Value  \n The display rectangle for the ribbon category tab.  \n  \n### Remarks  \n  \n##  <a name=\"cmfcribboncategory__gettexttopline\"></a>  CMFCRibbonCategory::GetTextTopLine  \n Retrieves the vertical location of text on ribbon buttons in the ribbon category that display large images.  \n  \n```  \nint GetTextTopLine() const;\n\n \n```  \n  \n### Return Value  \n The vertical location of text, in pixels, on ribbon buttons that display large images.  \n  \n### Remarks  \n  \n##  <a name=\"cmfcribboncategory__getvisibleelements\"></a>  CMFCRibbonCategory::GetVisibleElements  \n Retrieves all visible elements that belong to the ribbon category.  \n  \n```  \nvoid GetVisibleElements(\n    CArray <CMFCRibbonBaseElement*,  \n    CMFCRibbonBaseElement*>& arElements);\n```  \n  \n### Parameters  \n `arElements`  \n Array of all visible elements.  \n  \n### Remarks  \n  \n##  <a name=\"cmfcribboncategory__highlightpanel\"></a>  CMFCRibbonCategory::HighlightPanel  \n Highlights the specified ribbon panel.  \n  \n```  \nCMFCRibbonPanel* HighlightPanel(\n    CMFCRibbonPanel* pHLPanel,  \n    CPoint point);\n```  \n  \n### Parameters  \n [in] `pHLPanel`  \n Pointer to the ribbon panel to highlight.  \n  \n [in] `point`  \n The x and y coordinates of the pointer, relative to the upper-left corner of the window.  \n  \n### Return Value  \n Pointer to the previously highlighted ribbon panel; otherwise `NULL` if no ribbon panel is highlighted when this method is invoked.  \n  \n### Remarks  \n For more information about highlighting a ribbon panel, see [CMFCRibbonPanel::Highlight](../../mfc/reference/cmfcribbonpanel-class.md#cmfcribbonpanel__highlight).  \n  \n##  <a name=\"cmfcribboncategory__hittest\"></a>  CMFCRibbonCategory::HitTest  \n Retrieves a pointer to a ribbon element if the specified point is located in it.  \n  \n```  \nCMFCRibbonBaseElement* HitTest(\n    CPoint point,  \n    BOOL bCheckPanelCaption = FALSE) const;\n\n \n```  \n  \n### Parameters  \n [in] `point`  \n The x and y coordinates of the mouse pointer, relative to the upper-left corner of the window.  \n  \n [in] `bCheckPanelCaption`  \n `TRUE` to test the ribbon panel caption; `FALSE` to exclude the ribbon panel caption.  \n  \n### Return Value  \n Pointer to a ribbon element if the method was successful; otherwise `NULL`.  \n  \n### Remarks  \n Only ribbon elements that are contained in the ribbon category are tested.  \n  \n##  <a name=\"cmfcribboncategory__hittestex\"></a>  CMFCRibbonCategory::HitTestEx  \n Retrieves the zero-based index of a ribbon element if the specified point is located in it.  \n  \n```  \nint HitTestEx(CPoint point) const;\n\n \n```  \n  \n### Parameters  \n [in] `point`  \n The x and y coordinates of the mouse pointer, relative to the upper-left corner of the window.  \n  \n### Return Value  \n Zero-based index of a ribbon element if the method was successful; otherwise -1.  \n  \n### Remarks  \n Only ribbon elements that are contained in the ribbon category are tested.  \n  \n##  <a name=\"cmfcribboncategory__hittestscrollbuttons\"></a>  CMFCRibbonCategory::HitTestScrollButtons  \n If a point falls within a ribbon category’s left or right scroll button, returns a pointer to that button.  \n  \n```  \nCMFCRibbonBaseElement* HitTestScrollButtons(CPoint point) const;\n\n \n```  \n  \n### Parameters  \n [in] `point`  \n The point to test.  \n  \n### Return Value  \n If `point` falls within the bounding rectangle of either the left or the right scroll button of the ribbon category, returns a pointer to that button, or otherwise, returns `NULL`.  \n  \n### Remarks  \n  \n##  <a name=\"cmfcribboncategory__isactive\"></a>  CMFCRibbonCategory::IsActive  \n Indicates whether the ribbon category is the active category on the ribbon bar.  \n  \n```  \nBOOL IsActive() const;\n\n \n```  \n  \n### Return Value  \n `TRUE` if the ribbon category is the active category; otherwise `FALSE`.  \n  \n### Remarks  \n The active ribbon category displays its ribbon panels.  \n  \n##  <a name=\"cmfcribboncategory__isvisible\"></a>  CMFCRibbonCategory::IsVisible  \n Indicates whether the ribbon category is visible.  \n  \n```  \nBOOL IsVisible() const;\n\n \n```  \n  \n### Return Value  \n `TRUE` if the ribbon category is visible; otherwise `FALSE`.  \n  \n### Remarks  \n Ribbon categories that are visible display a category tab.  \n  \n##  <a name=\"cmfcribboncategory__iswindows7look\"></a>  CMFCRibbonCategory::IsWindows7Look  \n Indicates whether the parent ribbon has Windows 7 look (small rectangular application button).  \n  \n```  \nBOOL IsWindows7Look() const;\n\n \n```  \n  \n### Return Value  \n `TRUE` if the parent ribbon has Windows 7 look; otherwise `FALSE`.  \n  \n### Remarks  \n  \n##  <a name=\"cmfcribboncategory__notifycontrolcommand\"></a>  CMFCRibbonCategory::NotifyControlCommand  \n Delivers a WM_NOTIFY command message to all `CMFCRibbonPanel` elements in the `CMFCRibbonCategory` until the message is handled.  \n  \n```  \nvirtual BOOL NotifyControlCommand(\n    BOOL bAccelerator,  \n    int nNotifyCode,  \n    WPARAM wParam,  \n    LPARAM lParam);\n```  \n  \n### Parameters  \n [in] `bAccelerator`  \n `TRUE` if this command originated from an accelerator, or `FALSE` otherwise.  \n  \n [in] `nNotifyCode`  \n The notification code.  \n  \n [in] `wParam`  \n The WPARAM field of the message.  \n  \n [in] `lParam`  \n The LPARAM field of the message.  \n  \n### Return Value  \n Returns `TRUE` if the message was handled, or `FALSE` if not.  \n  \n### Remarks  \n  \n##  <a name=\"cmfcribboncategory__oncancelmode\"></a>  CMFCRibbonCategory::OnCancelMode  \n Invokes cancel mode in all the `CMFCRibbonPanel` elements of the `CMFCRibbonCategory`.  \n  \n```  \nvirtual void OnCancelMode();\n```  \n  \n### Remarks  \n  \n##  <a name=\"cmfcribboncategory__ondraw\"></a>  CMFCRibbonCategory::OnDraw  \n Called by the framework to draw the ribbon category.  \n  \n```  \nvirtual void OnDraw(CDC* pDC);\n```  \n  \n### Parameters  \n [in] `pDC`  \n Pointer to a device context for the ribbon category.  \n  \n### Remarks  \n  \n##  <a name=\"cmfcribboncategory__ondrawimage\"></a>  CMFCRibbonCategory::OnDrawImage  \n Called by the framework to draw the specified image on the ribbon category.  \n  \n```  \nvirtual BOOL OnDrawImage(\n    CDC* pDC,  \n    CRect rect,  \n    CMFCRibbonBaseElement* pElement,  \n    BOOL bIsLargeImage,  \n    BOOL nImageIndex,  \n    BOOL bCenter);\n```  \n  \n### Parameters  \n [in] `pDC`  \n Pointer to a device context for the image.  \n  \n [in] `rect`  \n Display rectangle for the image.  \n  \n [in] `pElement`  \n Pointer to the ribbon element that contains the image.  \n  \n [in] `bIsLargeImage`  \n `TRUE` if the image is the large size; `FALSE` if the image is the small size.  \n  \n [in] `nImageIndex`  \n Zero-based index of the image in the image array that is contained in the ribbon category.  \n  \n [in] `bCenter`  \n `TRUE` to center the image in the display rectangle; `FALSE` to draw the image in the upper-left corner of the display rectangle.  \n  \n### Return Value  \n `TRUE` if the method was successful; otherwise `FALSE`.  \n  \n### Remarks  \n  \n##  <a name=\"cmfcribboncategory__ondrawmenuborder\"></a>  CMFCRibbonCategory::OnDrawMenuBorder  \n Called by the framework to draw the border of a popup menu.  \n  \n```  \nvirtual void OnDrawMenuBorder(\n    CDC* pDC,  \n    CMFCRibbonPanelMenuBar* pMenuBar);\n```  \n  \n### Parameters  \n [in] `pDC`  \n This parameter is not used.  \n  \n [in] `pMenuBar`  \n This parameter is not used.  \n  \n### Remarks  \n By default this method does nothing. Override this method to draw the border of a popup menu.  \n  \n##  <a name=\"cmfcribboncategory__onkey\"></a>  CMFCRibbonCategory::OnKey  \n Called by the framework when a user presses a keyboard button.  \n  \n```  \nvirtual BOOL OnKey(UINT nChar);\n```  \n  \n### Parameters  \n `nChar`  \n The virtual key code for the key that a user pressed.  \n  \n### Remarks  \n  \n##  <a name=\"cmfcribboncategory__onlbuttondown\"></a>  CMFCRibbonCategory::OnLButtonDown  \n Called by the framework to retrieve the ribbon element under the specified point when the user presses the left mouse button.  \n  \n```  \nvirtual CMFCRibbonBaseElement* OnLButtonDown(CPoint point);\n```  \n  \n### Parameters  \n [in] `point`  \n The x and y coordinates of the mouse pointer, relative to the upper-left corner of the window.  \n  \n### Return Value  \n Pointer to a ribbon element if the method was successful; otherwise `NULL`.  \n  \n### Remarks  \n  \n##  <a name=\"cmfcribboncategory__onlbuttonup\"></a>  CMFCRibbonCategory::OnLButtonUp  \n Called by the framework when the user releases the left mouse button and the pointer is over the ribbon category.  \n  \n```  \nvirtual void OnLButtonUp(CPoint point);\n```  \n  \n### Parameters  \n [in] `point`  \n The x and y coordinates of the pointer, relative to the upper-left corner of the window.  \n  \n### Remarks  \n  \n##  <a name=\"cmfcribboncategory__onmousemove\"></a>  CMFCRibbonCategory::OnMouseMove  \n Called by the framework when the pointer moves on the ribbon bar in order to update the ribbon category display.  \n  \n```  \nvirtual void OnMouseMove(CPoint point);\n```  \n  \n### Parameters  \n [in] `point`  \n The x and y coordinates of the pointer, relative to the upper-left corner of the window.  \n  \n### Remarks  \n  \n##  <a name=\"cmfcribboncategory__onrtlchanged\"></a>  CMFCRibbonCategory::OnRTLChanged  \n Called by the framework when the layout changes direction.  \n  \n```  \nvirtual void OnRTLChanged(BOOL bIsRTL);\n```  \n  \n### Parameters  \n [in] `bIsRTL`  \n `TRUE` if the layout is right-to-left; `FALSE` if the layout is left-to-right.  \n  \n### Remarks  \n This method adjusts the layout of all ribbon panels and ribbon elements that are contained in the ribbon category.  \n  \n##  <a name=\"cmfcribboncategory__onscrollhorz\"></a>  CMFCRibbonCategory::OnScrollHorz  \n Scrolls the ribbon category in the horizontal direction.  \n  \n```  \nvirtual BOOL OnScrollHorz(\n    BOOL bScrollLeft,  \n    int nScrollOffset = 0);\n```  \n  \n### Parameters  \n [in] `bScrollLeft`  \n `TRUE` to scroll to the left; `FALSE` to scroll to the right.  \n  \n [in] `nScrollOffset`  \n The scroll distance in pixels.  \n  \n### Return Value  \n `TRUE` if the ribbon category moved in a horizontal direction; otherwise `FALSE`.  \n  \n### Remarks  \n  \n##  <a name=\"cmfcribboncategory__onupdatecmdui\"></a>  CMFCRibbonCategory::OnUpdateCmdUI  \n Calls the `OnUpdateCmdUI` member function in each of the `CMFCRibbonPanel` elements of the `CMFCRibbonCategory` to enable or disable the user-interface elements in them.  \n  \n```  \nvirtual void OnUpdateCmdUI(\n    CMFCRibbonCmdUI* pCmdUI,  \n    CFrameWnd* pTarget,  \n    BOOL bDisableIfNoHndler);\n```  \n  \n### Parameters  \n [in] `pCmdUI`  \n Pointer to the `CMFCRibbonCmdUI` object that specifies which user-interface elements are to be enabled and which are to be disabled.  \n  \n [in] `pTarget`  \n Pointer to the window that controls the enabling or disabling of the user-interface elements.  \n  \n [in] `bDisableIfNoHndler`  \n `TRUE` to disable the user-interface item if no handler is defined in a message map; otherwise, `FALSE`.  \n  \n### Remarks  \n  \n##  <a name=\"cmfcribboncategory__recalclayout\"></a>  CMFCRibbonCategory::RecalcLayout  \n Adjusts the layout of all controls on the ribbon category.  \n  \n```  \nvirtual void RecalcLayout(CDC* pDC);\n```  \n  \n### Parameters  \n [in] `pDC`  \n Pointer to a device context for the ribbon category.  \n  \n### Remarks  \n  \n##  <a name=\"cmfcribboncategory__removepanel\"></a>  CMFCRibbonCategory::RemovePanel  \n Removes a ribbon panel from the ribbon category.  \n  \n```cpp  \nBOOL RemovePanel(\n    int nIndex,  \n    BOOL bDelete = TRUE);\n```  \n  \n### Parameters  \n [in] `nIndex`  \n The index number of the panel to remove. Obtained by calling the [CMFCRibbonCategory::GetPanelIndex](#cmfcribboncategory__getpanelindex) method.  \n  \n [in] `bDelete`  \n `TRUE` to delete the panel object from memory; `FALSE` to remove the panel object without deleting it.  \n  \n### Return Value  \n `TRUE` if the method was successful; otherwise, `FALSE`.  \n  \n##  <a name=\"cmfcribboncategory__repospanels\"></a>  CMFCRibbonCategory::ReposPanels  \n Adjusts the layout of all controls on the ribbon panels that are contained in the ribbon category.  \n  \n```  \nvirtual void ReposPanels(CDC* pDC);\n```  \n  \n### Parameters  \n [in] `pDC`  \n Pointer to a device context for the ribbon panels that are contained in the ribbon category.  \n  \n### Remarks  \n  \n##  <a name=\"cmfcribboncategory__setcollapseorder\"></a>  CMFCRibbonCategory::SetCollapseOrder  \n Defines the order in which the ribbon panels of the ribbon category collapse.  \n  \n```  \nvoid SetCollapseOrder(\n    const CArray<int,int>& arCollapseOrder);\n```  \n  \n### Parameters  \n [in] `arCollapseOrder`  \n Specifies the collapse order. The array contains zero-based indexes of ribbon panels.  \n  \n### Remarks  \n The library defines the collapse order. However, you can customize this behavior by providing the category with the list of indexes that specifies the collapse order.  \n  \n When the category detects that it has to collapse a ribbon panel, it looks for the next element in the specified list. If the list is empty, or you have not specified enough elements, then the category uses the internal algorithm.  \n  \n For example, the category has three ribbon panels and can be collapsed several times until all panels are in the fully collapsed state. You can set the following collapse order: 0, 0, 2, 2. In this case, the category will collapse the panel 0 two times, the panel 2 two times. The panel that has the index of 1 remains uncollapsed.  \n  \n### Example  \n The following example demonstrates how to use the `SetCollapseOrder` method in the `CMFCRibbonCategory` class. The example shows how to construct an array for the collapse order, and how to set the collapse order to the ribbon category.  \n  \n [!code-cpp[NVC_MFC_RibbonApp#13](../../mfc/reference/codesnippet/cpp/cmfcribboncategory-class_2.cpp)]  \n  \n##  <a name=\"cmfcribboncategory__setdata\"></a>  CMFCRibbonCategory::SetData  \n Sets the user-defined data to be associated with the ribbon category.  \n  \n```  \nvoid SetData(DWORD_PTR dwData);\n```  \n  \n### Parameters  \n [in] `dwData`  \n The user-defined data.  \n  \n##  <a name=\"cmfcribboncategory__setkeys\"></a>  CMFCRibbonCategory::SetKeys  \n Assigns a keytip to the ribbon category.  \n  \n```  \nvoid SetKeys(LPCTSTR lpszKeys);\n```  \n  \n### Parameters  \n [in] `lpszKeys`  \n The keytip text.  \n  \n### Remarks  \n Keytips are displayed when the user presses the Alt key or the F10 key.  \n  \n##  <a name=\"cmfcribboncategory__setname\"></a>  CMFCRibbonCategory::SetName  \n Assigns a name and keytip to the ribbon category.  \n  \n```  \nvoid SetName(LPCTSTR lpszName);\n```  \n  \n### Parameters  \n [in] `lpszName`  \n The name and keytip of the ribbon category.  \n  \n### Remarks  \n To set the keytip for the ribbon category, append a newline escape sequence followed by the keytip characters to `lpszName`.  \n  \n##  <a name=\"cmfcribboncategory__settabcolor\"></a>  CMFCRibbonCategory::SetTabColor  \n Sets the color of the ribbon category.  \n  \n```  \nvoid SetTabColor(AFX_RibbonCategoryColor color);\n```  \n  \n### Parameters  \n [in] `color`  \n Specifies the new color of the ribbon category.  \n  \n### Remarks  \n Color can be one of the following values:  \n  \n-   AFX_CategoryColor_None  \n  \n-   AFX_CategoryColor_Red  \n  \n-   AFX_CategoryColor_Orange  \n  \n-   AFX_CategoryColor_Yellow  \n  \n-   AFX_CategoryColor_Green  \n  \n-   AFX_CategoryColor_Blue  \n  \n-   AFX_CategoryColor_Indigo  \n  \n-   AFX_CategoryColor_Violet  \n  \n## See Also  \n [Hierarchy Chart](../../mfc/hierarchy-chart.md)   \n [Classes](../../mfc/reference/mfc-classes.md)   \n [CObject Class](../../mfc/reference/cobject-class.md)\n"}