{"nodes":[{"pos":[12,60],"content":"Relationships Among MFC Objects | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Relationships Among MFC Objects | Microsoft Docs","pos":[0,48]}]},{"content":"Relationships Among MFC Objects","pos":[706,737]},{"content":"To help put the document/view creation process in perspective, consider a running program: a document, the frame window used to contain the view, and the view associated with the document.","pos":[738,926]},{"content":"A document keeps a list of the views of that document and a pointer to the document template that created the document.","pos":[936,1055]},{"content":"A view keeps a pointer to its document and is a child of its parent frame window.","pos":[1065,1146]},{"content":"A document frame window keeps a pointer to its current active view.","pos":[1156,1223]},{"content":"A document template keeps a list of its open documents.","pos":[1233,1288]},{"content":"The application keeps a list of its document templates.","pos":[1298,1353]},{"content":"Windows keeps track of all open windows so it can send messages to them.","pos":[1363,1435]},{"content":"These relationships are established during document/view creation.","pos":[1442,1508]},{"content":"The following table shows how objects in a running program can access other objects.","pos":[1509,1593]},{"content":"Any object can obtain a pointer to the application object by calling the global function <bpt id=\"p1\">[</bpt>AfxGetApp<ept id=\"p1\">](../mfc/reference/application-information-and-management.md#afxgetapp)</ept>.","pos":[1594,1765],"source":" Any object can obtain a pointer to the application object by calling the global function [AfxGetApp](../mfc/reference/application-information-and-management.md#afxgetapp)."},{"content":"Gaining Access to Other Objects in Your Application","pos":[1775,1826]},{"content":"From object","pos":[1833,1844]},{"content":"How to access other objects","pos":[1845,1872]},{"content":"Document","pos":[1933,1941]},{"content":"Use <bpt id=\"p1\">[</bpt>GetFirstViewPosition<ept id=\"p1\">](../mfc/reference/cdocument-class.md#cdocument__getfirstviewposition)</ept> and <bpt id=\"p2\">[</bpt>GetNextView<ept id=\"p2\">](../mfc/reference/cdocument-class.md#cdocument__getnextview)</ept> to access the document's view list.","pos":[1942,2151],"source":"Use [GetFirstViewPosition](../mfc/reference/cdocument-class.md#cdocument__getfirstviewposition) and [GetNextView](../mfc/reference/cdocument-class.md#cdocument__getnextview) to access the document's view list."},{"content":"Call <bpt id=\"p1\">[</bpt>GetDocTemplate<ept id=\"p1\">](../mfc/reference/cdocument-class.md#cdocument__getdoctemplate)</ept> to get the document template.","pos":[2164,2278],"source":" Call [GetDocTemplate](../mfc/reference/cdocument-class.md#cdocument__getdoctemplate) to get the document template."},{"content":"View","pos":[2283,2287]},{"content":"Call <bpt id=\"p1\">[</bpt>GetDocument<ept id=\"p1\">](../mfc/reference/cview-class.md#cview__getdocument)</ept> to get the document.","pos":[2288,2379],"source":"Call [GetDocument](../mfc/reference/cview-class.md#cview__getdocument) to get the document."},{"content":"Call <bpt id=\"p1\">[</bpt>GetParentFrame<ept id=\"p1\">](../mfc/reference/cwnd-class.md#cwnd__getparentframe)</ept> to get the frame window.","pos":[2392,2491],"source":" Call [GetParentFrame](../mfc/reference/cwnd-class.md#cwnd__getparentframe) to get the frame window."},{"content":"Document frame window","pos":[2496,2517]},{"content":"Call <bpt id=\"p1\">[</bpt>GetActiveView<ept id=\"p1\">](../mfc/reference/cframewnd-class.md#cframewnd__getactiveview)</ept> to get the current view.","pos":[2518,2625],"source":"Call [GetActiveView](../mfc/reference/cframewnd-class.md#cframewnd__getactiveview) to get the current view."},{"content":"Call <bpt id=\"p1\">[</bpt>GetActiveDocument<ept id=\"p1\">](../mfc/reference/cframewnd-class.md#cframewnd__getactivedocument)</ept> to get the document attached to the current view.","pos":[2638,2778],"source":" Call [GetActiveDocument](../mfc/reference/cframewnd-class.md#cframewnd__getactivedocument) to get the document attached to the current view."},{"content":"MDI frame window","pos":[2783,2799]},{"pos":[2800,2970],"content":"Call <bpt id=\"p1\">[</bpt>MDIGetActive<ept id=\"p1\">](../mfc/reference/cmdiframewnd-class.md#cmdiframewnd__mdigetactive)</ept> to get the currently active <bpt id=\"p2\">[</bpt>CMDIChildWnd<ept id=\"p2\">](../mfc/reference/cmdichildwnd-class.md)</ept>.","source":"Call [MDIGetActive](../mfc/reference/cmdiframewnd-class.md#cmdiframewnd__mdigetactive) to get the currently active [CMDIChildWnd](../mfc/reference/cmdichildwnd-class.md)."},{"content":"Typically, a frame window has one view, but sometimes, as in splitter windows, the same frame window contains multiple views.","pos":[2978,3103]},{"content":"The frame window keeps a pointer to the currently active view; the pointer is updated any time another view is activated.","pos":[3104,3225]},{"pos":[3233,3812],"content":"[!NOTE]\n A pointer to the main frame window is stored in the [m_pMainWnd](../mfc/reference/cwinthread-class.md#cwinthread__m_pmainwnd) member variable of the application object. A call to `OnFileNew` in your override of the `InitInstance` member function of `CWinApp` sets `m_pMainWnd` for you. If you do not call `OnFileNew`, you must set the variable's value in `InitInstance` yourself. (SDI COM component (server) applications may not set the variable if /Embedding is on the command line.) Note that `m_pMainWnd` is now a member of class `CWinThread` rather than `CWinApp`.","leadings":["","> "],"nodes":[{"content":" A pointer to the main frame window is stored in the [m_pMainWnd](../mfc/reference/cwinthread-class.md#cwinthread__m_pmainwnd) member variable of the application object. A call to `OnFileNew` in your override of the `InitInstance` member function of `CWinApp` sets `m_pMainWnd` for you. If you do not call `OnFileNew`, you must set the variable's value in `InitInstance` yourself. (SDI COM component (server) applications may not set the variable if /Embedding is on the command line.) Note that `m_pMainWnd` is now a member of class `CWinThread` rather than `CWinApp`.","pos":[8,577],"nodes":[{"content":"A pointer to the main frame window is stored in the <bpt id=\"p1\">[</bpt>m_pMainWnd<ept id=\"p1\">](../mfc/reference/cwinthread-class.md#cwinthread__m_pmainwnd)</ept> member variable of the application object.","pos":[1,169],"source":" A pointer to the main frame window is stored in the [m_pMainWnd](../mfc/reference/cwinthread-class.md#cwinthread__m_pmainwnd) member variable of the application object."},{"content":"A call to <ph id=\"ph1\">`OnFileNew`</ph> in your override of the <ph id=\"ph2\">`InitInstance`</ph> member function of <ph id=\"ph3\">`CWinApp`</ph> sets <ph id=\"ph4\">`m_pMainWnd`</ph> for you.","pos":[170,286],"source":" A call to `OnFileNew` in your override of the `InitInstance` member function of `CWinApp` sets `m_pMainWnd` for you."},{"content":"If you do not call <ph id=\"ph1\">`OnFileNew`</ph>, you must set the variable's value in <ph id=\"ph2\">`InitInstance`</ph> yourself.","pos":[287,380],"source":" If you do not call `OnFileNew`, you must set the variable's value in `InitInstance` yourself."},{"content":"(SDI COM component (server) applications may not set the variable if /Embedding is on the command line.) Note that <ph id=\"ph1\">`m_pMainWnd`</ph> is now a member of class <ph id=\"ph2\">`CWinThread`</ph> rather than <ph id=\"ph3\">`CWinApp`</ph>.","pos":[381,569],"source":" (SDI COM component (server) applications may not set the variable if /Embedding is on the command line.) Note that `m_pMainWnd` is now a member of class `CWinThread` rather than `CWinApp`."}]}]},{"content":"See Also","pos":[3821,3829]},{"content":"Document Templates and the Document/View Creation Process","pos":[3834,3891]},{"content":"Document Template Creation","pos":[3967,3993]},{"content":"Document/View Creation","pos":[4038,4060]},{"content":"Creating New Documents, Windows, and Views","pos":[4101,4143]}],"content":"---\ntitle: \"Relationships Among MFC Objects | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"MFC, relationships between key objects\"\n  - \"objects [C++], relationships\"\n  - \"relationships, MFC objects\"\n  - \"MFC object relationships\"\nms.assetid: 6e8f3b51-e80f-4d88-94c8-4c1e4ee163ad\ncaps.latest.revision: 9\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Relationships Among MFC Objects\nTo help put the document/view creation process in perspective, consider a running program: a document, the frame window used to contain the view, and the view associated with the document.  \n  \n-   A document keeps a list of the views of that document and a pointer to the document template that created the document.  \n  \n-   A view keeps a pointer to its document and is a child of its parent frame window.  \n  \n-   A document frame window keeps a pointer to its current active view.  \n  \n-   A document template keeps a list of its open documents.  \n  \n-   The application keeps a list of its document templates.  \n  \n-   Windows keeps track of all open windows so it can send messages to them.  \n  \n These relationships are established during document/view creation. The following table shows how objects in a running program can access other objects. Any object can obtain a pointer to the application object by calling the global function [AfxGetApp](../mfc/reference/application-information-and-management.md#afxgetapp).  \n  \n### Gaining Access to Other Objects in Your Application  \n  \n|From object|How to access other objects|  \n|-----------------|---------------------------------|  \n|Document|Use [GetFirstViewPosition](../mfc/reference/cdocument-class.md#cdocument__getfirstviewposition) and [GetNextView](../mfc/reference/cdocument-class.md#cdocument__getnextview) to access the document's view list.<br /><br /> Call [GetDocTemplate](../mfc/reference/cdocument-class.md#cdocument__getdoctemplate) to get the document template.|  \n|View|Call [GetDocument](../mfc/reference/cview-class.md#cview__getdocument) to get the document.<br /><br /> Call [GetParentFrame](../mfc/reference/cwnd-class.md#cwnd__getparentframe) to get the frame window.|  \n|Document frame window|Call [GetActiveView](../mfc/reference/cframewnd-class.md#cframewnd__getactiveview) to get the current view.<br /><br /> Call [GetActiveDocument](../mfc/reference/cframewnd-class.md#cframewnd__getactivedocument) to get the document attached to the current view.|  \n|MDI frame window|Call [MDIGetActive](../mfc/reference/cmdiframewnd-class.md#cmdiframewnd__mdigetactive) to get the currently active [CMDIChildWnd](../mfc/reference/cmdichildwnd-class.md).|  \n  \n Typically, a frame window has one view, but sometimes, as in splitter windows, the same frame window contains multiple views. The frame window keeps a pointer to the currently active view; the pointer is updated any time another view is activated.  \n  \n> [!NOTE]\n>  A pointer to the main frame window is stored in the [m_pMainWnd](../mfc/reference/cwinthread-class.md#cwinthread__m_pmainwnd) member variable of the application object. A call to `OnFileNew` in your override of the `InitInstance` member function of `CWinApp` sets `m_pMainWnd` for you. If you do not call `OnFileNew`, you must set the variable's value in `InitInstance` yourself. (SDI COM component (server) applications may not set the variable if /Embedding is on the command line.) Note that `m_pMainWnd` is now a member of class `CWinThread` rather than `CWinApp`.  \n  \n## See Also  \n [Document Templates and the Document/View Creation Process](../mfc/document-templates-and-the-document-view-creation-process.md)   \n [Document Template Creation](../mfc/document-template-creation.md)   \n [Document/View Creation](../mfc/document-view-creation.md)   \n [Creating New Documents, Windows, and Views](../mfc/creating-new-documents-windows-and-views.md)\n\n"}