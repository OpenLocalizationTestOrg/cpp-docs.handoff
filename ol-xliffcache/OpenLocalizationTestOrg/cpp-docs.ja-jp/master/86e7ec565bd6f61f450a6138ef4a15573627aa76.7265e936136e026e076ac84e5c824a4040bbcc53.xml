{"nodes":[{"pos":[12,67],"content":"Incrementing and Decrementing Pointers | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Incrementing and Decrementing Pointers | Microsoft Docs","pos":[0,55]}]},{"content":"Incrementing and Decrementing Pointers","pos":[692,730]},{"content":"Use the following tips:","pos":[731,754]},{"content":"Point to lead bytes, not trail bytes.","pos":[764,801]},{"content":"It is usually unsafe to have a pointer to a trail byte.","pos":[802,857]},{"content":"It is usually safer to scan a string forward rather than in reverse.","pos":[858,926]},{"content":"There are pointer increment/decrement functions and macros available that move over a whole character:","pos":[936,1038]},{"content":"becomes:","pos":[1085,1093]},{"pos":[1155,1282],"content":"The <ph id=\"ph1\">`_mbsinc`</ph> and <ph id=\"ph2\">`_mbsdec`</ph> functions correctly increment and decrement in <ph id=\"ph3\">`character`</ph> units, regardless of the character size.","source":"The `_mbsinc` and `_mbsdec` functions correctly increment and decrement in `character` units, regardless of the character size."},{"content":"For decrements, you need a pointer to the head of the string, as in the following:","pos":[1292,1374]},{"content":"becomes:","pos":[1421,1429]},{"content":"Alternatively, your head pointer could be to a valid character in the string, such that:","pos":[1500,1588]},{"content":"You must have a pointer to a known valid lead byte.","pos":[1642,1693]},{"pos":[1703,1796],"content":"You might want to maintain a pointer to the previous character for faster calls to <ph id=\"ph1\">`_mbsdec`</ph>.","source":"You might want to maintain a pointer to the previous character for faster calls to `_mbsdec`."},{"content":"See Also","pos":[1805,1813]},{"content":"MBCS Programming Tips","pos":[1818,1839]},{"content":"Byte Indices","pos":[1880,1892]}],"content":"---\ntitle: \"Incrementing and Decrementing Pointers | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"incrementing pointers\"\n  - \"MBCS [C++], pointers\"\n  - \"pointers [C++], multibyte characters\"\n  - \"decrementing pointers\"\nms.assetid: 0872b4a0-e2bd-4004-8319-070efb76f2fd\ncaps.latest.revision: 7\nauthor: \"ghogen\"\nms.author: \"ghogen\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Incrementing and Decrementing Pointers\nUse the following tips:  \n  \n-   Point to lead bytes, not trail bytes. It is usually unsafe to have a pointer to a trail byte. It is usually safer to scan a string forward rather than in reverse.  \n  \n-   There are pointer increment/decrement functions and macros available that move over a whole character:  \n  \n    ```  \n    sz1++;  \n    ```  \n  \n     becomes:  \n  \n    ```  \n    sz1 = _mbsinc( sz1 );  \n    ```  \n  \n     The `_mbsinc` and `_mbsdec` functions correctly increment and decrement in `character` units, regardless of the character size.  \n  \n-   For decrements, you need a pointer to the head of the string, as in the following:  \n  \n    ```  \n    sz2--;  \n    ```  \n  \n     becomes:  \n  \n    ```  \n    sz2 = _mbsdec( sz2Head, sz2 );  \n    ```  \n  \n     Alternatively, your head pointer could be to a valid character in the string, such that:  \n  \n    ```  \n    sz2Head < sz2  \n    ```  \n  \n     You must have a pointer to a known valid lead byte.  \n  \n-   You might want to maintain a pointer to the previous character for faster calls to `_mbsdec`.  \n  \n## See Also  \n [MBCS Programming Tips](../text/mbcs-programming-tips.md)   \n [Byte Indices](../text/byte-indices.md)"}