{"nodes":[{"pos":[12,39],"content":"CMap Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"CMap Class | Microsoft Docs","pos":[0,27]}]},{"pos":[662,672],"content":"CMap Class","linkify":"CMap Class","nodes":[{"content":"CMap Class","pos":[0,10]}]},{"content":"A dictionary collection class that maps unique keys to values.","pos":[673,735]},{"pos":[744,750],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[870,880],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Class of the object used as the key to the map.","pos":[893,940]},{"content":"<ph id=\"ph1\">`ARG`</ph> <bpt id=\"p1\">*</bpt>_<ept id=\"p1\">*</ept> <ph id=\"ph2\">`KEY`</ph>","pos":[947,962],"source":"`ARG` *_* `KEY`"},{"content":"Data type used for <ph id=\"ph1\">`KEY`</ph> arguments; usually a reference to <ph id=\"ph2\">`KEY`</ph>.","pos":[966,1031],"source":" Data type used for `KEY` arguments; usually a reference to `KEY`."},{"content":"Class of the object stored in the map.","pos":[1049,1087]},{"content":"<ph id=\"ph1\">`ARG`</ph> <bpt id=\"p1\">*</bpt>_<ept id=\"p1\">*</ept> <ph id=\"ph2\">`VALUE`</ph>","pos":[1094,1111],"source":"`ARG` *_* `VALUE`"},{"content":"Data type used for <ph id=\"ph1\">`VALUE`</ph> arguments; usually a reference to <ph id=\"ph2\">`VALUE`</ph>.","pos":[1115,1184],"source":" Data type used for `VALUE` arguments; usually a reference to `VALUE`."},{"pos":[1193,1200],"content":"Members","linkify":"Members","nodes":[{"content":"Members","pos":[0,7]}]},{"pos":[1210,1227],"content":"Public Structures","linkify":"Public Structures","nodes":[{"content":"Public Structures","pos":[0,17]}]},{"content":"Name","pos":[1234,1238]},{"content":"Description","pos":[1239,1250]},{"pos":[1288,1315],"content":"<bpt id=\"p1\">[</bpt>CMap::CPair<ept id=\"p1\">](#cmap__cpair)</ept>","source":"[CMap::CPair](#cmap__cpair)"},{"content":"A nested structure containing a key value and the value of the associated object.","pos":[1316,1397]},{"pos":[1408,1427],"content":"Public Constructors","linkify":"Public Constructors","nodes":[{"content":"Public Constructors","pos":[0,19]}]},{"content":"Name","pos":[1434,1438]},{"content":"Description","pos":[1439,1450]},{"pos":[1488,1513],"content":"<bpt id=\"p1\">[</bpt>CMap::CMap<ept id=\"p1\">](#cmap__cmap)</ept>","source":"[CMap::CMap](#cmap__cmap)"},{"content":"Constructs a collection that maps keys to values.","pos":[1514,1563]},{"pos":[1574,1588],"content":"Public Methods","linkify":"Public Methods","nodes":[{"content":"Public Methods","pos":[0,14]}]},{"content":"Name","pos":[1595,1599]},{"content":"Description","pos":[1600,1611]},{"pos":[1649,1682],"content":"<bpt id=\"p1\">[</bpt>CMap::GetCount<ept id=\"p1\">](#cmap__getcount)</ept>","source":"[CMap::GetCount](#cmap__getcount)"},{"content":"Returns the number of elements in this map.","pos":[1683,1726]},{"pos":[1731,1780],"content":"<bpt id=\"p1\">[</bpt>CMap::GetHashTableSize<ept id=\"p1\">](#cmap__gethashtablesize)</ept>","source":"[CMap::GetHashTableSize](#cmap__gethashtablesize)"},{"content":"Returns the number of elements in the hash table.","pos":[1781,1830]},{"pos":[1835,1876],"content":"<bpt id=\"p1\">[</bpt>CMap::GetNextAssoc<ept id=\"p1\">](#cmap__getnextassoc)</ept>","source":"[CMap::GetNextAssoc](#cmap__getnextassoc)"},{"content":"Gets the next element for iterating.","pos":[1877,1913]},{"pos":[1918,1949],"content":"<bpt id=\"p1\">[</bpt>CMap::GetSize<ept id=\"p1\">](#cmap__getsize)</ept>","source":"[CMap::GetSize](#cmap__getsize)"},{"content":"Returns the number of elements in this map.","pos":[1950,1993]},{"pos":[1998,2047],"content":"<bpt id=\"p1\">[</bpt>CMap::GetStartPosition<ept id=\"p1\">](#cmap__getstartposition)</ept>","source":"[CMap::GetStartPosition](#cmap__getstartposition)"},{"content":"Returns the position of the first element.","pos":[2048,2090]},{"pos":[2095,2138],"content":"<bpt id=\"p1\">[</bpt>CMap::InitHashTable<ept id=\"p1\">](#cmap__inithashtable)</ept>","source":"[CMap::InitHashTable](#cmap__inithashtable)"},{"content":"Initializes the hash table and specifies its size.","pos":[2139,2189]},{"pos":[2194,2225],"content":"<bpt id=\"p1\">[</bpt>CMap::IsEmpty<ept id=\"p1\">](#cmap__isempty)</ept>","source":"[CMap::IsEmpty](#cmap__isempty)"},{"content":"Tests for the empty-map condition (no elements).","pos":[2226,2274]},{"pos":[2279,2308],"content":"<bpt id=\"p1\">[</bpt>CMap::Lookup<ept id=\"p1\">](#cmap__lookup)</ept>","source":"[CMap::Lookup](#cmap__lookup)"},{"content":"Looks up the value mapped to a given key.","pos":[2309,2350]},{"pos":[2355,2400],"content":"<bpt id=\"p1\">[</bpt>CMap::PGetFirstAssoc<ept id=\"p1\">](#cmap__pgetfirstassoc)</ept>","source":"[CMap::PGetFirstAssoc](#cmap__pgetfirstassoc)"},{"content":"Returns a pointer to the first element.","pos":[2401,2440]},{"pos":[2445,2488],"content":"<bpt id=\"p1\">[</bpt>CMap::PGetNextAssoc<ept id=\"p1\">](#cmap__pgetnextassoc)</ept>","source":"[CMap::PGetNextAssoc](#cmap__pgetnextassoc)"},{"content":"Gets a pointer to the next element for iterating.","pos":[2489,2538]},{"pos":[2543,2574],"content":"<bpt id=\"p1\">[</bpt>CMap::PLookup<ept id=\"p1\">](#cmap__plookup)</ept>","source":"[CMap::PLookup](#cmap__plookup)"},{"content":"Returns a pointer to a key whose value matches the specified value.","pos":[2575,2642]},{"pos":[2647,2682],"content":"<bpt id=\"p1\">[</bpt>CMap::RemoveAll<ept id=\"p1\">](#cmap__removeall)</ept>","source":"[CMap::RemoveAll](#cmap__removeall)"},{"content":"Removes all the elements from this map.","pos":[2683,2722]},{"pos":[2727,2762],"content":"<bpt id=\"p1\">[</bpt>CMap::RemoveKey<ept id=\"p1\">](#cmap__removekey)</ept>","source":"[CMap::RemoveKey](#cmap__removekey)"},{"content":"Removes an element specified by a key.","pos":[2763,2801]},{"pos":[2806,2833],"content":"<bpt id=\"p1\">[</bpt>CMap::SetAt<ept id=\"p1\">](#cmap__setat)</ept>","source":"[CMap::SetAt](#cmap__setat)"},{"content":"Inserts an element into the map; replaces an existing element if a matching key is found.","pos":[2834,2923]},{"pos":[2934,2950],"content":"Public Operators","linkify":"Public Operators","nodes":[{"content":"Public Operators","pos":[0,16]}]},{"content":"Name","pos":[2957,2961]},{"content":"Description","pos":[2962,2973]},{"pos":[3011,3051],"content":"<bpt id=\"p1\">[</bpt>CMap::operator [ ]<ept id=\"p1\">](#cmap__operator_at)</ept>","source":"[CMap::operator [ ]](#cmap__operator_at)"},{"pos":[3052,3122],"content":"Inserts an element into the map â€” operator substitution for <ph id=\"ph1\">`SetAt`</ph>.","source":"Inserts an element into the map â€” operator substitution for `SetAt`."},{"pos":[3132,3139],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Once you have inserted a key-value pair (element) into the map, you can efficiently retrieve or delete the pair using the key to access it.","pos":[3143,3282]},{"content":"You can also iterate over all the elements in the map.","pos":[3283,3337]},{"content":"A variable of type <bpt id=\"p1\">**</bpt>POSITION<ept id=\"p1\">**</ept> is used for alternate access to entries.","pos":[3344,3416],"source":"A variable of type **POSITION** is used for alternate access to entries."},{"content":"You can use a <bpt id=\"p1\">**</bpt>POSITION<ept id=\"p1\">**</ept> to \"remember\" an entry and to iterate through the map.","pos":[3417,3498],"source":" You can use a **POSITION** to \"remember\" an entry and to iterate through the map."},{"content":"You might think that this iteration is sequential by key value; it is not.","pos":[3499,3573]},{"content":"The sequence of retrieved elements is indeterminate.","pos":[3574,3626]},{"content":"Certain member functions of this class call global helper functions that must be customized for most uses of the <ph id=\"ph1\">`CMap`</ph> class.","pos":[3633,3759],"source":"Certain member functions of this class call global helper functions that must be customized for most uses of the `CMap` class."},{"content":"See <bpt id=\"p1\">[</bpt>Collection Class Helpers<ept id=\"p1\">](../../mfc/reference/collection-class-helpers.md)</ept> in the Macros and Globals section of the <ph id=\"ph1\">`MFC``Reference`</ph>.","pos":[3760,3898],"source":" See [Collection Class Helpers](../../mfc/reference/collection-class-helpers.md) in the Macros and Globals section of the `MFC``Reference`."},{"content":"<ph id=\"ph1\">`CMap`</ph> overrides <bpt id=\"p1\">[</bpt>CObject::Serialize<ept id=\"p1\">](../../mfc/reference/cobject-class.md#cobject__serialize)</ept> to support serialization and dumping of its elements.","pos":[3905,4053],"source":"`CMap` overrides [CObject::Serialize](../../mfc/reference/cobject-class.md#cobject__serialize) to support serialization and dumping of its elements."},{"content":"If a map is stored to an archive using <ph id=\"ph1\">`Serialize`</ph>, each map element is serialized in turn.","pos":[4054,4145],"source":" If a map is stored to an archive using `Serialize`, each map element is serialized in turn."},{"content":"The default implementation of the <ph id=\"ph1\">`SerializeElements`</ph> helper function does a bitwise write.","pos":[4146,4237],"source":" The default implementation of the `SerializeElements` helper function does a bitwise write."},{"content":"For information about serialization of pointer collection items derived from <ph id=\"ph1\">`CObject`</ph> or other user defined types, see <bpt id=\"p1\">[</bpt>How to: Make a Type-Safe Collection<ept id=\"p1\">](../../mfc/how-to-make-a-type-safe-collection.md)</ept>.","pos":[4238,4445],"source":" For information about serialization of pointer collection items derived from `CObject` or other user defined types, see [How to: Make a Type-Safe Collection](../../mfc/how-to-make-a-type-safe-collection.md)."},{"content":"If you need a diagnostic dump of the individual elements in the map (the keys and values), you must set the depth of the dump context to 1 or greater.","pos":[4452,4602]},{"pos":[4609,4713],"content":"When a <ph id=\"ph1\">`CMap`</ph> object is deleted, or when its elements are removed, the keys and values both are removed.","source":"When a `CMap` object is deleted, or when its elements are removed, the keys and values both are removed."},{"content":"Map class derivation is similar to list derivation.","pos":[4720,4771]},{"content":"See the article <bpt id=\"p1\">[</bpt>Collections<ept id=\"p1\">](../../mfc/collections.md)</ept> for an illustration of the derivation of a special-purpose list class.","pos":[4772,4898],"source":" See the article [Collections](../../mfc/collections.md) for an illustration of the derivation of a special-purpose list class."},{"pos":[4907,4928],"content":"Inheritance Hierarchy","linkify":"Inheritance Hierarchy","nodes":[{"content":"Inheritance Hierarchy","pos":[0,21]}]},{"pos":[4932,4979],"content":"<bpt id=\"p1\">[</bpt>CObject<ept id=\"p1\">](../../mfc/reference/cobject-class.md)</ept>","source":"[CObject](../../mfc/reference/cobject-class.md)"},{"pos":[5001,5013],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[5017,5039],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> afxtempl.h","source":"**Header:** afxtempl.h"},{"pos":[5049,5086],"content":"<bpt id=\"p1\">&lt;a name=\"cmap__cmap\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMap::CMap","linkify":"<a name=\"cmap__cmap\"></a>  CMap::CMap","source":"<a name=\"cmap__cmap\"></a>  CMap::CMap"},{"content":"Constructs an empty map.","pos":[5090,5114]},{"pos":[5170,5180],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Specifies the memory-allocation granularity for extending the map.","pos":[5200,5266]},{"pos":[5276,5283],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[5287,5358],"content":"As the map grows, memory is allocated in units of <ph id=\"ph1\">`nBlockSize`</ph> entries.","source":"As the map grows, memory is allocated in units of `nBlockSize` entries."},{"pos":[5368,5375],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[5379,5457],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_MFCCollections#56<ept id=\"p2\">](../../mfc/codesnippet/cpp/cmap-class_1.cpp)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_MFCCollections#56](../../mfc/codesnippet/cpp/cmap-class_1.cpp)]"},{"pos":[5467,5506],"content":"<bpt id=\"p1\">&lt;a name=\"cmap__cpair\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMap::CPair","linkify":"<a name=\"cmap__cpair\"></a>  CMap::CPair","source":"<a name=\"cmap__cpair\"></a>  CMap::CPair"},{"content":"Contains a key value and the value of the associated object.","pos":[5510,5570]},{"pos":[5580,5587],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[5591,5673],"content":"This is a nested structure within class <bpt id=\"p1\">[</bpt>CMap<ept id=\"p1\">](../../mfc/reference/cmap-class.md)</ept>.","source":"This is a nested structure within class [CMap](../../mfc/reference/cmap-class.md)."},{"content":"The structure is composed of two fields:","pos":[5680,5720]},{"pos":[5728,5774],"content":"<bpt id=\"p1\">**</bpt>keyÂ Â Â<ept id=\"p1\">**</ept> The actual value of the key type.","source":"**keyÂ Â Â** The actual value of the key type."},{"pos":[5782,5832],"content":"<bpt id=\"p1\">**</bpt>valueÂ Â Â<ept id=\"p1\">**</ept> The value of the associated object.","source":"**valueÂ Â Â** The value of the associated object."},{"pos":[5839,6010],"content":"It is used to store the return values from <bpt id=\"p1\">[</bpt>CMap::PLookup<ept id=\"p1\">](#cmap__plookup)</ept>, <bpt id=\"p2\">[</bpt>CMap::PGetFirstAssoc<ept id=\"p2\">](#cmap__pgetfirstassoc)</ept>, and <bpt id=\"p3\">[</bpt>CMap::PGetNextAssoc<ept id=\"p3\">](#cmap__pgetnextassoc)</ept>.","source":"It is used to store the return values from [CMap::PLookup](#cmap__plookup), [CMap::PGetFirstAssoc](#cmap__pgetfirstassoc), and [CMap::PGetNextAssoc](#cmap__pgetnextassoc)."},{"pos":[6020,6027],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[6031,6108],"content":"For an example of usage, see the example for <bpt id=\"p1\">[</bpt>CMap::PLookup<ept id=\"p1\">](#cmap__plookup)</ept>.","source":"For an example of usage, see the example for [CMap::PLookup](#cmap__plookup)."},{"pos":[6118,6163],"content":"<bpt id=\"p1\">&lt;a name=\"cmap__getcount\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMap::GetCount","linkify":"<a name=\"cmap__getcount\"></a>  CMap::GetCount","source":"<a name=\"cmap__getcount\"></a>  CMap::GetCount"},{"content":"Retrieves the number of elements in the map.","pos":[6167,6211]},{"pos":[6265,6277],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The number of elements.","pos":[6281,6304]},{"pos":[6314,6321],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[6325,6375],"content":"See the example for <bpt id=\"p1\">[</bpt>CMap::Lookup<ept id=\"p1\">](#cmap__lookup)</ept>.","source":"See the example for [CMap::Lookup](#cmap__lookup)."},{"pos":[6385,6446],"content":"<bpt id=\"p1\">&lt;a name=\"cmap__gethashtablesize\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMap::GetHashTableSize","linkify":"<a name=\"cmap__gethashtablesize\"></a>  CMap::GetHashTableSize","source":"<a name=\"cmap__gethashtablesize\"></a>  CMap::GetHashTableSize"},{"content":"Determines the number of elements in the hash table for the map.","pos":[6450,6514]},{"pos":[6573,6585],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The number of elements in the hash table.","pos":[6589,6630]},{"pos":[6640,6647],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[6651,6729],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_MFCCollections#57<ept id=\"p2\">](../../mfc/codesnippet/cpp/cmap-class_2.cpp)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_MFCCollections#57](../../mfc/codesnippet/cpp/cmap-class_2.cpp)]"},{"pos":[6739,6792],"content":"<bpt id=\"p1\">&lt;a name=\"cmap__getnextassoc\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMap::GetNextAssoc","linkify":"<a name=\"cmap__getnextassoc\"></a>  CMap::GetNextAssoc","source":"<a name=\"cmap__getnextassoc\"></a>  CMap::GetNextAssoc"},{"pos":[6796,6911],"content":"Retrieves the map element at <ph id=\"ph1\">`rNextPosition`</ph>, then updates <ph id=\"ph2\">`rNextPosition`</ph> to refer to the next element in the map.","source":"Retrieves the map element at `rNextPosition`, then updates `rNextPosition` to refer to the next element in the map."},{"pos":[7028,7038],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Specifies a reference to a <bpt id=\"p1\">**</bpt>POSITION<ept id=\"p1\">**</ept> value returned by a previous <ph id=\"ph1\">`GetNextAssoc`</ph> or <ph id=\"ph2\">`GetStartPosition`</ph> call.","pos":[7061,7172],"source":" Specifies a reference to a **POSITION** value returned by a previous `GetNextAssoc` or `GetStartPosition` call."},{"content":"<bpt id=\"p1\">*</bpt>KEY<ept id=\"p1\">*</ept>","pos":[7179,7184],"source":"*KEY*"},{"content":"Template parameter specifying the type of the map's key.","pos":[7188,7244]},{"content":"Specifies the returned key of the retrieved element.","pos":[7261,7313]},{"content":"<bpt id=\"p1\">*</bpt>VALUE<ept id=\"p1\">*</ept>","pos":[7320,7327],"source":"*VALUE*"},{"content":"Template parameter specifying the type of the map's value.","pos":[7331,7389]},{"content":"Specifies the returned value of the retrieved element.","pos":[7408,7462]},{"pos":[7472,7479],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This function is most useful for iterating through all the elements in the map.","pos":[7483,7562]},{"content":"Note that the position sequence is not necessarily the same as the key value sequence.","pos":[7563,7649]},{"pos":[7656,7762],"content":"If the retrieved element is the last in the map, then the new value of <ph id=\"ph1\">`rNextPosition`</ph> is set to <bpt id=\"p1\">**</bpt>NULL<ept id=\"p1\">**</ept>.","source":"If the retrieved element is the last in the map, then the new value of `rNextPosition` is set to **NULL**."},{"pos":[7772,7779],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[7783,7831],"content":"See the example for <bpt id=\"p1\">[</bpt>CMap::SetAt<ept id=\"p1\">](#cmap__setat)</ept>.","source":"See the example for [CMap::SetAt](#cmap__setat)."},{"pos":[7841,7884],"content":"<bpt id=\"p1\">&lt;a name=\"cmap__getsize\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMap::GetSize","linkify":"<a name=\"cmap__getsize\"></a>  CMap::GetSize","source":"<a name=\"cmap__getsize\"></a>  CMap::GetSize"},{"content":"Returns the number of map elements.","pos":[7888,7923]},{"pos":[7976,7988],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The number of items in the map.","pos":[7992,8023]},{"pos":[8033,8040],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Call this method to retrieve the number of elements in the map.","pos":[8044,8107]},{"pos":[8117,8124],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[8128,8206],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_MFCCollections#58<ept id=\"p2\">](../../mfc/codesnippet/cpp/cmap-class_3.cpp)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_MFCCollections#58](../../mfc/codesnippet/cpp/cmap-class_3.cpp)]"},{"pos":[8216,8277],"content":"<bpt id=\"p1\">&lt;a name=\"cmap__getstartposition\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMap::GetStartPosition","linkify":"<a name=\"cmap__getstartposition\"></a>  CMap::GetStartPosition","source":"<a name=\"cmap__getstartposition\"></a>  CMap::GetStartPosition"},{"pos":[8281,8382],"content":"Starts a map iteration by returning a <bpt id=\"p1\">**</bpt>POSITION<ept id=\"p1\">**</ept> value that can be passed to a <ph id=\"ph1\">`GetNextAssoc`</ph> call.","source":"Starts a map iteration by returning a **POSITION** value that can be passed to a `GetNextAssoc` call."},{"pos":[8445,8457],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[8461,8572],"content":"A <bpt id=\"p1\">**</bpt>POSITION<ept id=\"p1\">**</ept> value that indicates a starting position for iterating the map; or <bpt id=\"p2\">**</bpt>NULL<ept id=\"p2\">**</ept> if the map is empty.","source":"A **POSITION** value that indicates a starting position for iterating the map; or **NULL** if the map is empty."},{"pos":[8582,8589],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The iteration sequence is not predictable; therefore, the \"first element in the map\" has no special significance.","pos":[8593,8706]},{"pos":[8716,8723],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[8727,8775],"content":"See the example for <bpt id=\"p1\">[</bpt>CMap::SetAt<ept id=\"p1\">](#cmap__setat)</ept>.","source":"See the example for [CMap::SetAt](#cmap__setat)."},{"pos":[8785,8840],"content":"<bpt id=\"p1\">&lt;a name=\"cmap__inithashtable\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMap::InitHashTable","linkify":"<a name=\"cmap__inithashtable\"></a>  CMap::InitHashTable","source":"<a name=\"cmap__inithashtable\"></a>  CMap::InitHashTable"},{"content":"Initializes the hash table.","pos":[8844,8871]},{"pos":[8959,8969],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Number of entries in the hash table.","pos":[8987,9023]},{"content":"If <bpt id=\"p1\">**</bpt>TRUE<ept id=\"p1\">**</ept>, allocates the hash table upon initialization; otherwise the table is allocated when needed.","pos":[9045,9149],"source":" If **TRUE**, allocates the hash table upon initialization; otherwise the table is allocated when needed."},{"pos":[9159,9166],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"For best performance, the hash table size should be a prime number.","pos":[9170,9237]},{"content":"To minimize collisions, the size should be roughly 20 percent larger than the largest anticipated data set.","pos":[9238,9345]},{"pos":[9355,9362],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[9366,9416],"content":"See the example for <bpt id=\"p1\">[</bpt>CMap::Lookup<ept id=\"p1\">](#cmap__lookup)</ept>.","source":"See the example for [CMap::Lookup](#cmap__lookup)."},{"pos":[9426,9469],"content":"<bpt id=\"p1\">&lt;a name=\"cmap__isempty\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMap::IsEmpty","linkify":"<a name=\"cmap__isempty\"></a>  CMap::IsEmpty","source":"<a name=\"cmap__isempty\"></a>  CMap::IsEmpty"},{"content":"Determines whether the map is empty.","pos":[9473,9509]},{"pos":[9559,9571],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Nonzero if this map contains no elements; otherwise 0.","pos":[9575,9629]},{"pos":[9639,9646],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[9650,9706],"content":"See the example for <bpt id=\"p1\">[</bpt>CMap::RemoveAll<ept id=\"p1\">](#cmap__removeall)</ept>.","source":"See the example for [CMap::RemoveAll](#cmap__removeall)."},{"pos":[9716,9757],"content":"<bpt id=\"p1\">&lt;a name=\"cmap__lookup\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMap::Lookup","linkify":"<a name=\"cmap__lookup\"></a>  CMap::Lookup","source":"<a name=\"cmap__lookup\"></a>  CMap::Lookup"},{"content":"Looks up the value mapped to a given key.","pos":[9761,9802]},{"pos":[9882,9892],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Template parameter specifying the type of the <ph id=\"ph1\">`key`</ph> value.","pos":[9909,9967],"source":" Template parameter specifying the type of the `key` value."},{"content":"Specifies the key that identifies the element to be looked up.","pos":[9983,10045]},{"content":"<bpt id=\"p1\">*</bpt>VALUE<ept id=\"p1\">*</ept>","pos":[10052,10059],"source":"*VALUE*"},{"content":"Specifies the type of the value to be looked up.","pos":[10063,10111]},{"content":"Receives the looked-up value.","pos":[10130,10159]},{"pos":[10169,10181],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Nonzero if the element was found; otherwise 0.","pos":[10185,10231]},{"pos":[10241,10248],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[10252,10364],"content":"<ph id=\"ph1\">`Lookup`</ph> uses a hashing algorithm to quickly find the map element with a key that exactly matches the given key.","source":"`Lookup` uses a hashing algorithm to quickly find the map element with a key that exactly matches the given key."},{"pos":[10374,10381],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[10385,10463],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_MFCCollections#58<ept id=\"p2\">](../../mfc/codesnippet/cpp/cmap-class_3.cpp)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_MFCCollections#58](../../mfc/codesnippet/cpp/cmap-class_3.cpp)]"},{"pos":[10473,10525],"content":"<bpt id=\"p1\">&lt;a name=\"cmap__operator_at\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMap::operator [ ]","linkify":"<a name=\"cmap__operator_at\"></a>  CMap::operator [ ]","source":"<a name=\"cmap__operator_at\"></a>  CMap::operator [ ]"},{"pos":[10529,10585],"content":"A convenient substitute for the <ph id=\"ph1\">`SetAt`</ph> member function.","source":"A convenient substitute for the `SetAt` member function."},{"pos":[10642,10652],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"<bpt id=\"p1\">*</bpt>VALUE<ept id=\"p1\">*</ept>","pos":[10656,10663],"source":"*VALUE*"},{"content":"Template parameter specifying the type of the map value.","pos":[10667,10723]},{"content":"Template parameter specifying the type of the key value.","pos":[10743,10799]},{"content":"The key used to retrieve the value from the map.","pos":[10815,10863]},{"pos":[10873,10880],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Thus it can be used only on the left side of an assignment statement (an l-value).","pos":[10884,10966]},{"content":"If there is no map element with the specified key, then a new element is created.","pos":[10967,11048]},{"content":"There is no \"right side\" (r-value) equivalent to this operator because there is a possibility that a key may not be found in the map.","pos":[11055,11188]},{"content":"Use the <ph id=\"ph1\">`Lookup`</ph> member function for element retrieval.","pos":[11189,11244],"source":" Use the `Lookup` member function for element retrieval."},{"pos":[11254,11261],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[11265,11315],"content":"See the example for <bpt id=\"p1\">[</bpt>CMap::Lookup<ept id=\"p1\">](#cmap__lookup)</ept>.","source":"See the example for [CMap::Lookup](#cmap__lookup)."},{"pos":[11325,11382],"content":"<bpt id=\"p1\">&lt;a name=\"cmap__pgetfirstassoc\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMap::PGetFirstAssoc","linkify":"<a name=\"cmap__pgetfirstassoc\"></a>  CMap::PGetFirstAssoc","source":"<a name=\"cmap__pgetfirstassoc\"></a>  CMap::PGetFirstAssoc"},{"content":"Returns the first entry of the map object.","pos":[11386,11428]},{"pos":[11519,11531],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A pointer to the first entry in the map; see <bpt id=\"p1\">[</bpt>CMap::CPair<ept id=\"p1\">](#cmap__cpair)</ept>.","pos":[11535,11608],"source":"A pointer to the first entry in the map; see [CMap::CPair](#cmap__cpair)."},{"content":"If the map contains no entries, the value is <bpt id=\"p1\">**</bpt>NULL<ept id=\"p1\">**</ept>.","pos":[11609,11663],"source":" If the map contains no entries, the value is **NULL**."},{"pos":[11673,11680],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Call this function to return a pointer the first element in the map object.","pos":[11684,11759]},{"pos":[11769,11776],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[11780,11858],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_MFCCollections#59<ept id=\"p2\">](../../mfc/codesnippet/cpp/cmap-class_4.cpp)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_MFCCollections#59](../../mfc/codesnippet/cpp/cmap-class_4.cpp)]"},{"pos":[11868,11923],"content":"<bpt id=\"p1\">&lt;a name=\"cmap__pgetnextassoc\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMap::PGetNextAssoc","linkify":"<a name=\"cmap__pgetnextassoc\"></a>  CMap::PGetNextAssoc","source":"<a name=\"cmap__pgetnextassoc\"></a>  CMap::PGetNextAssoc"},{"pos":[11927,11979],"content":"Retrieves the map element pointed to by <ph id=\"ph1\">`pAssocRec`</ph>.","source":"Retrieves the map element pointed to by `pAssocRec`."},{"pos":[12113,12123],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"<bpt id=\"p1\">*</bpt>pAssocRet<ept id=\"p1\">*</ept>","pos":[12127,12138],"source":"*pAssocRet*"},{"content":"Points to a map entry returned by a previous <bpt id=\"p1\">[</bpt>PGetNextAssoc<ept id=\"p1\">](#cmap__pgetnextassoc)</ept> or <bpt id=\"p2\">[</bpt>CMap::PGetFirstAssoc<ept id=\"p2\">](#cmap__pgetfirstassoc)</ept> call.","pos":[12142,12279],"source":" Points to a map entry returned by a previous [PGetNextAssoc](#cmap__pgetnextassoc) or [CMap::PGetFirstAssoc](#cmap__pgetfirstassoc) call."},{"pos":[12289,12301],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A pointer to the next entry in the map; see <bpt id=\"p1\">[</bpt>CMap::CPair<ept id=\"p1\">](#cmap__cpair)</ept>.","pos":[12305,12377],"source":"A pointer to the next entry in the map; see [CMap::CPair](#cmap__cpair)."},{"content":"If the element is the last in the map, the value is <bpt id=\"p1\">**</bpt>NULL<ept id=\"p1\">**</ept>.","pos":[12378,12439],"source":" If the element is the last in the map, the value is **NULL**."},{"pos":[12449,12456],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Call this method to iterate through all the elements in the map.","pos":[12460,12524]},{"content":"Retrieve the first element with a call to <ph id=\"ph1\">`PGetFirstAssoc`</ph> and then iterate through the map with successive calls to <ph id=\"ph2\">`PGetNextAssoc`</ph>.","pos":[12525,12658],"source":" Retrieve the first element with a call to `PGetFirstAssoc` and then iterate through the map with successive calls to `PGetNextAssoc`."},{"pos":[12668,12675],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[12679,12745],"content":"See the example for <bpt id=\"p1\">[</bpt>CMap::PGetFirstAssoc<ept id=\"p1\">](#cmap__pgetfirstassoc)</ept>.","source":"See the example for [CMap::PGetFirstAssoc](#cmap__pgetfirstassoc)."},{"pos":[12755,12798],"content":"<bpt id=\"p1\">&lt;a name=\"cmap__plookup\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMap::PLookup","linkify":"<a name=\"cmap__plookup\"></a>  CMap::PLookup","source":"<a name=\"cmap__plookup\"></a>  CMap::PLookup"},{"content":"Finds the value mapped to a given key.","pos":[12802,12840]},{"pos":[12947,12957],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Key for the element to be searched for.","pos":[12970,13009]},{"pos":[13019,13031],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A pointer to a key structure; see <bpt id=\"p1\">[</bpt>CMap::CPair<ept id=\"p1\">](#cmap__cpair)</ept>.","pos":[13035,13097],"source":"A pointer to a key structure; see [CMap::CPair](#cmap__cpair)."},{"content":"If no match is found, <ph id=\"ph1\">`CMap::PLookup`</ph> returns <ph id=\"ph2\">`NULL`</ph>.","pos":[13098,13151],"source":" If no match is found, `CMap::PLookup` returns `NULL`."},{"pos":[13161,13168],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Call this method to search for a map element with a key that exactly matches the given key.","pos":[13172,13263]},{"pos":[13273,13280],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[13284,13362],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_MFCCollections#60<ept id=\"p2\">](../../mfc/codesnippet/cpp/cmap-class_5.cpp)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_MFCCollections#60](../../mfc/codesnippet/cpp/cmap-class_5.cpp)]"},{"pos":[13372,13419],"content":"<bpt id=\"p1\">&lt;a name=\"cmap__removeall\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMap::RemoveAll","linkify":"<a name=\"cmap__removeall\"></a>  CMap::RemoveAll","source":"<a name=\"cmap__removeall\"></a>  CMap::RemoveAll"},{"pos":[13423,13519],"content":"Removes all the values from this map by calling the global helper function <bpt id=\"p1\">**</bpt>DestructElements<ept id=\"p1\">**</ept>.","source":"Removes all the values from this map by calling the global helper function **DestructElements**."},{"pos":[13562,13569],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The function works correctly if the map is already empty.","pos":[13573,13630]},{"pos":[13640,13647],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[13651,13729],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_MFCCollections#61<ept id=\"p2\">](../../mfc/codesnippet/cpp/cmap-class_6.cpp)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_MFCCollections#61](../../mfc/codesnippet/cpp/cmap-class_6.cpp)]"},{"pos":[13739,13786],"content":"<bpt id=\"p1\">&lt;a name=\"cmap__removekey\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMap::RemoveKey","linkify":"<a name=\"cmap__removekey\"></a>  CMap::RemoveKey","source":"<a name=\"cmap__removekey\"></a>  CMap::RemoveKey"},{"content":"Looks up the map entry corresponding to the supplied key; then, if the key is found, removes the entry.","pos":[13790,13893]},{"pos":[13947,13957],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Template parameter specifying the type of the key.","pos":[13974,14024]},{"content":"Key for the element to be removed.","pos":[14040,14074]},{"pos":[14084,14096],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Nonzero if the entry was found and successfully removed; otherwise 0.","pos":[14100,14169]},{"pos":[14179,14186],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[14190,14259],"content":"The <bpt id=\"p1\">**</bpt>DestructElements<ept id=\"p1\">**</ept> helper function is used to remove the entry.","source":"The **DestructElements** helper function is used to remove the entry."},{"pos":[14269,14276],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[14280,14328],"content":"See the example for <bpt id=\"p1\">[</bpt>CMap::SetAt<ept id=\"p1\">](#cmap__setat)</ept>.","source":"See the example for [CMap::SetAt](#cmap__setat)."},{"pos":[14338,14377],"content":"<bpt id=\"p1\">&lt;a name=\"cmap__setat\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMap::SetAt","linkify":"<a name=\"cmap__setat\"></a>  CMap::SetAt","source":"<a name=\"cmap__setat\"></a>  CMap::SetAt"},{"content":"The primary means to insert an element in a map.","pos":[14381,14429]},{"pos":[14504,14514],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Template parameter specifying the type of the <ph id=\"ph1\">`key`</ph> parameter.","pos":[14531,14593],"source":" Template parameter specifying the type of the `key` parameter."},{"content":"Specifies the key of the new element.","pos":[14609,14646]},{"content":"Template parameter specifying the type of the <ph id=\"ph1\">`newValue`</ph> parameter.","pos":[14668,14735],"source":" Template parameter specifying the type of the `newValue` parameter."},{"content":"Specifies the value of the new element.","pos":[14756,14795]},{"pos":[14805,14812],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"First, the key is looked up.","pos":[14816,14844]},{"content":"If the key is found, then the corresponding value is changed; otherwise a new key-value pair is created.","pos":[14845,14949]},{"pos":[14959,14966],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[14970,15048],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_MFCCollections#62<ept id=\"p2\">](../../mfc/codesnippet/cpp/cmap-class_7.cpp)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_MFCCollections#62](../../mfc/codesnippet/cpp/cmap-class_7.cpp)]"},{"pos":[15057,15065],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>MFC Sample COLLECT<ept id=\"p1\">](../../visual-cpp-samples.md)</ept><ph id=\"ph1\"> </ph>","pos":[15069,15119],"source":"[MFC Sample COLLECT](../../visual-cpp-samples.md) "},{"content":"<bpt id=\"p1\"> [</bpt>CObject Class<ept id=\"p1\">](../../mfc/reference/cobject-class.md)</ept><ph id=\"ph1\"> </ph>","pos":[15122,15177],"source":" [CObject Class](../../mfc/reference/cobject-class.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Hierarchy Chart<ept id=\"p1\">](../../mfc/hierarchy-chart.md)</ept>","pos":[15180,15228],"source":" [Hierarchy Chart](../../mfc/hierarchy-chart.md)"}],"content":"---\ntitle: \"CMap Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"CMap\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"dictionary mapping class\"\n  - \"collection classes, dictionary mapping\"\n  - \"CMap class\"\nms.assetid: 640a45ab-0993-4def-97ec-42cc78eb10b9\ncaps.latest.revision: 24\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# CMap Class\nA dictionary collection class that maps unique keys to values.  \n  \n## Syntax  \n  \n```  \ntemplate<class KEY, class ARG_KEY, class VALUE, class ARG_VALUE>class CMap : public CObject  \n```  \n  \n#### Parameters  \n `KEY`  \n Class of the object used as the key to the map.  \n  \n `ARG` *_* `KEY`  \n Data type used for `KEY` arguments; usually a reference to `KEY`.  \n  \n `VALUE`  \n Class of the object stored in the map.  \n  \n `ARG` *_* `VALUE`  \n Data type used for `VALUE` arguments; usually a reference to `VALUE`.  \n  \n## Members  \n  \n### Public Structures  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CMap::CPair](#cmap__cpair)|A nested structure containing a key value and the value of the associated object.|  \n  \n### Public Constructors  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CMap::CMap](#cmap__cmap)|Constructs a collection that maps keys to values.|  \n  \n### Public Methods  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CMap::GetCount](#cmap__getcount)|Returns the number of elements in this map.|  \n|[CMap::GetHashTableSize](#cmap__gethashtablesize)|Returns the number of elements in the hash table.|  \n|[CMap::GetNextAssoc](#cmap__getnextassoc)|Gets the next element for iterating.|  \n|[CMap::GetSize](#cmap__getsize)|Returns the number of elements in this map.|  \n|[CMap::GetStartPosition](#cmap__getstartposition)|Returns the position of the first element.|  \n|[CMap::InitHashTable](#cmap__inithashtable)|Initializes the hash table and specifies its size.|  \n|[CMap::IsEmpty](#cmap__isempty)|Tests for the empty-map condition (no elements).|  \n|[CMap::Lookup](#cmap__lookup)|Looks up the value mapped to a given key.|  \n|[CMap::PGetFirstAssoc](#cmap__pgetfirstassoc)|Returns a pointer to the first element.|  \n|[CMap::PGetNextAssoc](#cmap__pgetnextassoc)|Gets a pointer to the next element for iterating.|  \n|[CMap::PLookup](#cmap__plookup)|Returns a pointer to a key whose value matches the specified value.|  \n|[CMap::RemoveAll](#cmap__removeall)|Removes all the elements from this map.|  \n|[CMap::RemoveKey](#cmap__removekey)|Removes an element specified by a key.|  \n|[CMap::SetAt](#cmap__setat)|Inserts an element into the map; replaces an existing element if a matching key is found.|  \n  \n### Public Operators  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CMap::operator [ ]](#cmap__operator_at)|Inserts an element into the map â€” operator substitution for `SetAt`.|  \n  \n## Remarks  \n Once you have inserted a key-value pair (element) into the map, you can efficiently retrieve or delete the pair using the key to access it. You can also iterate over all the elements in the map.  \n  \n A variable of type **POSITION** is used for alternate access to entries. You can use a **POSITION** to \"remember\" an entry and to iterate through the map. You might think that this iteration is sequential by key value; it is not. The sequence of retrieved elements is indeterminate.  \n  \n Certain member functions of this class call global helper functions that must be customized for most uses of the `CMap` class. See [Collection Class Helpers](../../mfc/reference/collection-class-helpers.md) in the Macros and Globals section of the `MFC``Reference`.  \n  \n `CMap` overrides [CObject::Serialize](../../mfc/reference/cobject-class.md#cobject__serialize) to support serialization and dumping of its elements. If a map is stored to an archive using `Serialize`, each map element is serialized in turn. The default implementation of the `SerializeElements` helper function does a bitwise write. For information about serialization of pointer collection items derived from `CObject` or other user defined types, see [How to: Make a Type-Safe Collection](../../mfc/how-to-make-a-type-safe-collection.md).  \n  \n If you need a diagnostic dump of the individual elements in the map (the keys and values), you must set the depth of the dump context to 1 or greater.  \n  \n When a `CMap` object is deleted, or when its elements are removed, the keys and values both are removed.  \n  \n Map class derivation is similar to list derivation. See the article [Collections](../../mfc/collections.md) for an illustration of the derivation of a special-purpose list class.  \n  \n## Inheritance Hierarchy  \n [CObject](../../mfc/reference/cobject-class.md)  \n  \n `CMap`  \n  \n## Requirements  \n **Header:** afxtempl.h  \n  \n##  <a name=\"cmap__cmap\"></a>  CMap::CMap  \n Constructs an empty map.  \n  \n```  \nCMap(INT_PTR nBlockSize = 10);\n```  \n  \n### Parameters  \n `nBlockSize`  \n Specifies the memory-allocation granularity for extending the map.  \n  \n### Remarks  \n As the map grows, memory is allocated in units of `nBlockSize` entries.  \n  \n### Example  \n [!code-cpp[NVC_MFCCollections#56](../../mfc/codesnippet/cpp/cmap-class_1.cpp)]  \n  \n##  <a name=\"cmap__cpair\"></a>  CMap::CPair  \n Contains a key value and the value of the associated object.  \n  \n### Remarks  \n This is a nested structure within class [CMap](../../mfc/reference/cmap-class.md).  \n  \n The structure is composed of two fields:  \n  \n- **keyÂ Â Â** The actual value of the key type.  \n  \n- **valueÂ Â Â** The value of the associated object.  \n  \n It is used to store the return values from [CMap::PLookup](#cmap__plookup), [CMap::PGetFirstAssoc](#cmap__pgetfirstassoc), and [CMap::PGetNextAssoc](#cmap__pgetnextassoc).  \n  \n### Example  \n For an example of usage, see the example for [CMap::PLookup](#cmap__plookup).  \n  \n##  <a name=\"cmap__getcount\"></a>  CMap::GetCount  \n Retrieves the number of elements in the map.  \n  \n```  \nINT_PTR GetCount() const;\n\n \n```  \n  \n### Return Value  \n The number of elements.  \n  \n### Example  \n See the example for [CMap::Lookup](#cmap__lookup).  \n  \n##  <a name=\"cmap__gethashtablesize\"></a>  CMap::GetHashTableSize  \n Determines the number of elements in the hash table for the map.  \n  \n```  \nUINT GetHashTableSize() const;\n\n \n```  \n  \n### Return Value  \n The number of elements in the hash table.  \n  \n### Example  \n [!code-cpp[NVC_MFCCollections#57](../../mfc/codesnippet/cpp/cmap-class_2.cpp)]  \n  \n##  <a name=\"cmap__getnextassoc\"></a>  CMap::GetNextAssoc  \n Retrieves the map element at `rNextPosition`, then updates `rNextPosition` to refer to the next element in the map.  \n  \n```  \nvoid GetNextAssoc(\n    POSITION& rNextPosition,\n    KEY& rKey,\n    VALUE& rValue) const;\n\n \n```  \n  \n### Parameters  \n `rNextPosition`  \n Specifies a reference to a **POSITION** value returned by a previous `GetNextAssoc` or `GetStartPosition` call.  \n  \n *KEY*  \n Template parameter specifying the type of the map's key.  \n  \n `rKey`  \n Specifies the returned key of the retrieved element.  \n  \n *VALUE*  \n Template parameter specifying the type of the map's value.  \n  \n `rValue`  \n Specifies the returned value of the retrieved element.  \n  \n### Remarks  \n This function is most useful for iterating through all the elements in the map. Note that the position sequence is not necessarily the same as the key value sequence.  \n  \n If the retrieved element is the last in the map, then the new value of `rNextPosition` is set to **NULL**.  \n  \n### Example  \n See the example for [CMap::SetAt](#cmap__setat).  \n  \n##  <a name=\"cmap__getsize\"></a>  CMap::GetSize  \n Returns the number of map elements.  \n  \n```  \nINT_PTR GetSize() const;\n\n \n```  \n  \n### Return Value  \n The number of items in the map.  \n  \n### Remarks  \n Call this method to retrieve the number of elements in the map.  \n  \n### Example  \n [!code-cpp[NVC_MFCCollections#58](../../mfc/codesnippet/cpp/cmap-class_3.cpp)]  \n  \n##  <a name=\"cmap__getstartposition\"></a>  CMap::GetStartPosition  \n Starts a map iteration by returning a **POSITION** value that can be passed to a `GetNextAssoc` call.  \n  \n```  \nPOSITION GetStartPosition() const;\n\n \n```  \n  \n### Return Value  \n A **POSITION** value that indicates a starting position for iterating the map; or **NULL** if the map is empty.  \n  \n### Remarks  \n The iteration sequence is not predictable; therefore, the \"first element in the map\" has no special significance.  \n  \n### Example  \n See the example for [CMap::SetAt](#cmap__setat).  \n  \n##  <a name=\"cmap__inithashtable\"></a>  CMap::InitHashTable  \n Initializes the hash table.  \n  \n```  \nvoid InitHashTable(UINT hashSize, BOOL  bAllocNow = TRUEÂ);\n\n \n```  \n  \n### Parameters  \n `hashSize`  \n Number of entries in the hash table.  \n  \n `bAllocNow`  \n If **TRUE**, allocates the hash table upon initialization; otherwise the table is allocated when needed.  \n  \n### Remarks  \n For best performance, the hash table size should be a prime number. To minimize collisions, the size should be roughly 20 percent larger than the largest anticipated data set.  \n  \n### Example  \n See the example for [CMap::Lookup](#cmap__lookup).  \n  \n##  <a name=\"cmap__isempty\"></a>  CMap::IsEmpty  \n Determines whether the map is empty.  \n  \n```  \nBOOL IsEmpty() const;\n\n \n```  \n  \n### Return Value  \n Nonzero if this map contains no elements; otherwise 0.  \n  \n### Example  \n See the example for [CMap::RemoveAll](#cmap__removeall).  \n  \n##  <a name=\"cmap__lookup\"></a>  CMap::Lookup  \n Looks up the value mapped to a given key.  \n  \n```  \nBOOL Lookup(\n    ARG_KEY key, VALUE& rValue) const;\n\n \n```  \n  \n### Parameters  \n `ARG_KEY`  \n Template parameter specifying the type of the `key` value.  \n  \n `key`  \n Specifies the key that identifies the element to be looked up.  \n  \n *VALUE*  \n Specifies the type of the value to be looked up.  \n  \n `rValue`  \n Receives the looked-up value.  \n  \n### Return Value  \n Nonzero if the element was found; otherwise 0.  \n  \n### Remarks  \n `Lookup` uses a hashing algorithm to quickly find the map element with a key that exactly matches the given key.  \n  \n### Example  \n [!code-cpp[NVC_MFCCollections#58](../../mfc/codesnippet/cpp/cmap-class_3.cpp)]  \n  \n##  <a name=\"cmap__operator_at\"></a>  CMap::operator [ ]  \n A convenient substitute for the `SetAt` member function.  \n  \n```  \nVALUE& operator[](arg_key key);\n```  \n  \n### Parameters  \n *VALUE*  \n Template parameter specifying the type of the map value.  \n  \n `ARG_KEY`  \n Template parameter specifying the type of the key value.  \n  \n `key`  \n The key used to retrieve the value from the map.  \n  \n### Remarks  \n Thus it can be used only on the left side of an assignment statement (an l-value). If there is no map element with the specified key, then a new element is created.  \n  \n There is no \"right side\" (r-value) equivalent to this operator because there is a possibility that a key may not be found in the map. Use the `Lookup` member function for element retrieval.  \n  \n### Example  \n See the example for [CMap::Lookup](#cmap__lookup).  \n  \n##  <a name=\"cmap__pgetfirstassoc\"></a>  CMap::PGetFirstAssoc  \n Returns the first entry of the map object.  \n  \n```  \nconst CPair* PGetFirstAssoc() const;Â CPair* PGetFirstAssoc();\n\n \n```  \n  \n### Return Value  \n A pointer to the first entry in the map; see [CMap::CPair](#cmap__cpair). If the map contains no entries, the value is **NULL**.  \n  \n### Remarks  \n Call this function to return a pointer the first element in the map object.  \n  \n### Example  \n [!code-cpp[NVC_MFCCollections#59](../../mfc/codesnippet/cpp/cmap-class_4.cpp)]  \n  \n##  <a name=\"cmap__pgetnextassoc\"></a>  CMap::PGetNextAssoc  \n Retrieves the map element pointed to by `pAssocRec`.  \n  \n```  \nconst CPair *PGetNextAssoc(const CPair* pAssocRet) const;\n\n \n \nCPair *PGetNextAssoc(const CPair* pAssocRet);\n```  \n  \n### Parameters  \n *pAssocRet*  \n Points to a map entry returned by a previous [PGetNextAssoc](#cmap__pgetnextassoc) or [CMap::PGetFirstAssoc](#cmap__pgetfirstassoc) call.  \n  \n### Return Value  \n A pointer to the next entry in the map; see [CMap::CPair](#cmap__cpair). If the element is the last in the map, the value is **NULL**.  \n  \n### Remarks  \n Call this method to iterate through all the elements in the map. Retrieve the first element with a call to `PGetFirstAssoc` and then iterate through the map with successive calls to `PGetNextAssoc`.  \n  \n### Example  \n See the example for [CMap::PGetFirstAssoc](#cmap__pgetfirstassoc).  \n  \n##  <a name=\"cmap__plookup\"></a>  CMap::PLookup  \n Finds the value mapped to a given key.  \n  \n```  \nconst CPair* PLookup(ARG_KEY  key) const;\n\nCPair* PLookup(Â    ARG_KEY  keyÂ);\n\n \n```  \n  \n### Parameters  \n `key`  \n Key for the element to be searched for.  \n  \n### Return Value  \n A pointer to a key structure; see [CMap::CPair](#cmap__cpair). If no match is found, `CMap::PLookup` returns `NULL`.  \n  \n### Remarks  \n Call this method to search for a map element with a key that exactly matches the given key.  \n  \n### Example  \n [!code-cpp[NVC_MFCCollections#60](../../mfc/codesnippet/cpp/cmap-class_5.cpp)]  \n  \n##  <a name=\"cmap__removeall\"></a>  CMap::RemoveAll  \n Removes all the values from this map by calling the global helper function **DestructElements**.  \n  \n```  \nvoid RemoveAll();\n```  \n  \n### Remarks  \n The function works correctly if the map is already empty.  \n  \n### Example  \n [!code-cpp[NVC_MFCCollections#61](../../mfc/codesnippet/cpp/cmap-class_6.cpp)]  \n  \n##  <a name=\"cmap__removekey\"></a>  CMap::RemoveKey  \n Looks up the map entry corresponding to the supplied key; then, if the key is found, removes the entry.  \n  \n```  \nBOOL RemoveKey(ARG_KEY key);\n```  \n  \n### Parameters  \n `ARG_KEY`  \n Template parameter specifying the type of the key.  \n  \n `key`  \n Key for the element to be removed.  \n  \n### Return Value  \n Nonzero if the entry was found and successfully removed; otherwise 0.  \n  \n### Remarks  \n The **DestructElements** helper function is used to remove the entry.  \n  \n### Example  \n See the example for [CMap::SetAt](#cmap__setat).  \n  \n##  <a name=\"cmap__setat\"></a>  CMap::SetAt  \n The primary means to insert an element in a map.  \n  \n```  \nvoid SetAt(\n    ARG_KEY key, ARG_VALUE newValue);\n```  \n  \n### Parameters  \n `ARG_KEY`  \n Template parameter specifying the type of the `key` parameter.  \n  \n `key`  \n Specifies the key of the new element.  \n  \n `ARG_VALUE`  \n Template parameter specifying the type of the `newValue` parameter.  \n  \n `newValue`  \n Specifies the value of the new element.  \n  \n### Remarks  \n First, the key is looked up. If the key is found, then the corresponding value is changed; otherwise a new key-value pair is created.  \n  \n### Example  \n [!code-cpp[NVC_MFCCollections#62](../../mfc/codesnippet/cpp/cmap-class_7.cpp)]  \n  \n## See Also  \n [MFC Sample COLLECT](../../visual-cpp-samples.md)   \n [CObject Class](../../mfc/reference/cobject-class.md)   \n [Hierarchy Chart](../../mfc/hierarchy-chart.md)\n\n\n\n"}