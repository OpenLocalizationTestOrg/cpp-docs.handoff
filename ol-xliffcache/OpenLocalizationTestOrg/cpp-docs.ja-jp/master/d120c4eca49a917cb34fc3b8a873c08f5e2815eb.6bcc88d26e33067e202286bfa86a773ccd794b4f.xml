{"nodes":[{"pos":[12,43],"content":"omp_set_nested | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"omp_set_nested | Microsoft Docs","pos":[0,31]}]},{"pos":[618,632],"content":"omp_set_nested","linkify":"omp_set_nested","nodes":[{"content":"omp_set_nested","pos":[0,14]}]},{"content":"Enables nested parallelism.","pos":[633,660]},{"pos":[669,675],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[740,747],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"where,","pos":[751,757]},{"content":"If nonzero, enables nested parallelism.","pos":[773,812]},{"content":"If zero, disables nested parallelism.","pos":[813,850]},{"pos":[859,866],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[870,1035],"content":"OMP nested parallelism can be turned on with <ph id=\"ph1\">`omp_set_nested`</ph>, or by setting the <bpt id=\"p1\">[</bpt>OMP_NESTED<ept id=\"p1\">](../../../parallel/openmp/reference/omp-nested.md)</ept> environment variable.","source":"OMP nested parallelism can be turned on with `omp_set_nested`, or by setting the [OMP_NESTED](../../../parallel/openmp/reference/omp-nested.md) environment variable."},{"pos":[1042,1142],"content":"The setting for <ph id=\"ph1\">`omp_set_nested`</ph> will override the setting of the <ph id=\"ph2\">`OMP_NESTED`</ph> environment variable.","source":"The setting for `omp_set_nested` will override the setting of the `OMP_NESTED` environment variable."},{"content":"When enabled, the environment variable can break an otherwise operational program because the number of threads increases exponentially when nesting parallel regions.","pos":[1149,1315]},{"content":"For example a function that recurses 6 times with the number of OMP threads set to 4 requires 4,096 (4 to the power of 6) threads  In general, the performance of your application will degrade if the number of thread exceeds the number of processors.","pos":[1317,1566]},{"content":"One exception to this would be I/O bound applications.","pos":[1567,1621]},{"pos":[1628,1754],"content":"Use <bpt id=\"p1\">[</bpt>omp_get_nested<ept id=\"p1\">](../../../parallel/openmp/reference/omp-get-nested.md)</ept> to display the current setting of <ph id=\"ph1\">`omp_set_nested`</ph>.","source":"Use [omp_get_nested](../../../parallel/openmp/reference/omp-get-nested.md) to display the current setting of `omp_set_nested`."},{"pos":[1761,1878],"content":"For more information, see <bpt id=\"p1\">[</bpt>3.1.9 omp_set_nested Function<ept id=\"p1\">](../../../parallel/openmp/3-1-9-omp-set-nested-function.md)</ept>.","source":"For more information, see [3.1.9 omp_set_nested Function](../../../parallel/openmp/3-1-9-omp-set-nested-function.md)."},{"pos":[1887,1894],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[2293,2301],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"pos":[2305,2372],"content":"<bpt id=\"p1\">[</bpt>Functions<ept id=\"p1\">](../../../parallel/openmp/reference/openmp-functions.md)</ept>","source":"[Functions](../../../parallel/openmp/reference/openmp-functions.md)"}],"content":"---\ntitle: \"omp_set_nested | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"omp_set_nested\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"omp_set_nested OpenMP function\"\nms.assetid: fa1cb08c-7b8b-42c9-8654-2c33dcffb5b6\ncaps.latest.revision: 13\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# omp_set_nested\nEnables nested parallelism.  \n  \n## Syntax  \n  \n```  \nvoid omp_set_nested(  \n   int val  \n);  \n```  \n  \n## Remarks  \n where,  \n  \n `val`  \n If nonzero, enables nested parallelism. If zero, disables nested parallelism.  \n  \n## Remarks  \n OMP nested parallelism can be turned on with `omp_set_nested`, or by setting the [OMP_NESTED](../../../parallel/openmp/reference/omp-nested.md) environment variable.  \n  \n The setting for `omp_set_nested` will override the setting of the `OMP_NESTED` environment variable.  \n  \n When enabled, the environment variable can break an otherwise operational program because the number of threads increases exponentially when nesting parallel regions.  For example a function that recurses 6 times with the number of OMP threads set to 4 requires 4,096 (4 to the power of 6) threads  In general, the performance of your application will degrade if the number of thread exceeds the number of processors. One exception to this would be I/O bound applications.  \n  \n Use [omp_get_nested](../../../parallel/openmp/reference/omp-get-nested.md) to display the current setting of `omp_set_nested`.  \n  \n For more information, see [3.1.9 omp_set_nested Function](../../../parallel/openmp/3-1-9-omp-set-nested-function.md).  \n  \n## Example  \n  \n```  \n// omp_set_nested.cpp  \n// compile with: /openmp  \n#include <stdio.h>  \n#include <omp.h>  \n  \nint main( )   \n{  \n    omp_set_nested(1);  \n    omp_set_num_threads(4);  \n    printf_s(\"%d\\n\", omp_get_nested( ));  \n    #pragma omp parallel  \n        #pragma omp master  \n        {  \n            printf_s(\"%d\\n\", omp_get_nested( ));  \n        }  \n}  \n```  \n  \n```Output  \n1  \n1  \n```  \n  \n## See Also  \n [Functions](../../../parallel/openmp/reference/openmp-functions.md)"}