{"nodes":[{"pos":[12,49],"content":"pair::pair (STL-CLR) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"pair::pair (STL-CLR) | Microsoft Docs","pos":[0,37]}]},{"content":"pair::pair (STL/CLR)","pos":[620,640]},{"content":"Constructs a pair object.","pos":[641,666]},{"content":"Syntax","pos":[675,681]},{"content":"Parameters","pos":[805,815]},{"content":"right","pos":[819,824]},{"content":"Pair to store.","pos":[828,842]},{"content":"val1","pos":[849,853]},{"content":"First value to store.","pos":[857,878]},{"content":"val2","pos":[885,889]},{"content":"Second value to store.","pos":[893,915]},{"content":"Remarks","pos":[924,931]},{"content":"The constructor:","pos":[935,951]},{"content":"initializes the stored pair with default constructed values.","pos":[974,1034]},{"content":"The constructor:","pos":[1041,1057]},{"pos":[1107,1280],"content":"initializes the stored pair with <ph id=\"ph1\">`right``.`</ph><bpt id=\"p1\">[</bpt>pair::first (STL/CLR)<ept id=\"p1\">](../dotnet/pair-first-stl-clr.md)</ept> and <ph id=\"ph2\">`right``.`</ph><bpt id=\"p2\">[</bpt>pair::second (STL/CLR)<ept id=\"p2\">](../dotnet/pair-second-stl-clr.md)</ept>.","source":"initializes the stored pair with `right``.`[pair::first (STL/CLR)](../dotnet/pair-first-stl-clr.md) and `right``.`[pair::second (STL/CLR)](../dotnet/pair-second-stl-clr.md)."},{"pos":[1330,1504],"content":"initializes the stored pair with <ph id=\"ph1\">`right``-&gt;`</ph><bpt id=\"p1\">[</bpt>pair::first (STL/CLR)<ept id=\"p1\">](../dotnet/pair-first-stl-clr.md)</ept> and <ph id=\"ph2\">`right``&gt;`</ph><bpt id=\"p2\">[</bpt>pair::second (STL/CLR)<ept id=\"p2\">](../dotnet/pair-second-stl-clr.md)</ept>.","source":"initializes the stored pair with `right``->`[pair::first (STL/CLR)](../dotnet/pair-first-stl-clr.md) and `right``>`[pair::second (STL/CLR)](../dotnet/pair-second-stl-clr.md)."},{"content":"The constructor:","pos":[1511,1527]},{"pos":[1574,1630],"content":"initializes the stored pair with with <ph id=\"ph1\">`val1`</ph> and <ph id=\"ph2\">`val2`</ph>.","source":"initializes the stored pair with with `val1` and `val2`."},{"content":"Example","pos":[1639,1646]},{"content":"Requirements","pos":[2521,2533]},{"pos":[2537,2566],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> <ph id=\"ph1\">\\&lt;</ph>cliext/utility&gt;","source":"**Header:** \\<cliext/utility>"},{"pos":[2573,2594],"content":"<bpt id=\"p1\">**</bpt>Namespace:<ept id=\"p1\">**</ept> cliext","source":"**Namespace:** cliext"},{"content":"See Also","pos":[2603,2611]},{"content":"pair (STL/CLR)","pos":[2616,2630]}],"content":"---\ntitle: \"pair::pair (STL-CLR) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"cliext::pair::pair\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"pair member [STL/CLR]\"\nms.assetid: 188035f3-bd37-4b46-96dd-5ceb9a16df79\ncaps.latest.revision: 8\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# pair::pair (STL/CLR)\nConstructs a pair object.  \n  \n## Syntax  \n  \n```  \npair();  \npair(pair<Coll>% right);  \npair(pair<Coll>^ right);  \npair(Value1 val1, Value2 val2);  \n```  \n  \n#### Parameters  \n right  \n Pair to store.  \n  \n val1  \n First value to store.  \n  \n val2  \n Second value to store.  \n  \n## Remarks  \n The constructor:  \n  \n `pair();`  \n  \n initializes the stored pair with default constructed values.  \n  \n The constructor:  \n  \n `pair(pair<Value1, Value2>% right);`  \n  \n initializes the stored pair with `right``.`[pair::first (STL/CLR)](../dotnet/pair-first-stl-clr.md) and `right``.`[pair::second (STL/CLR)](../dotnet/pair-second-stl-clr.md).  \n  \n `pair(pair<Value1, Value2>^ right);`  \n  \n initializes the stored pair with `right``->`[pair::first (STL/CLR)](../dotnet/pair-first-stl-clr.md) and `right``>`[pair::second (STL/CLR)](../dotnet/pair-second-stl-clr.md).  \n  \n The constructor:  \n  \n `pair(Value1 val1, Value2 val2);`  \n  \n initializes the stored pair with with `val1` and `val2`.  \n  \n## Example  \n  \n```  \n// cliext_pair_construct.cpp   \n// compile with: /clr   \n#include <cliext/utility>   \n  \nint main()   \n    {   \n// construct an empty container   \n    cliext::pair<wchar_t, int> c1;   \n    System::Console::WriteLine(\"[{0}, {1}]\",   \n        c1.first == L'\\0' ? \"\\\\0\" : \"??\", c1.second);   \n  \n// construct with a pair of values   \n    cliext::pair<wchar_t, int> c2(L'x', 3);   \n    System::Console::WriteLine(\"[{0}, {1}]\", c2.first, c2.second);   \n  \n// construct by copying another pair   \n    cliext::pair<wchar_t, int> c3(c2);   \n    System::Console::WriteLine(\"[{0}, {1}]\", c3.first, c3.second);   \n  \n// construct by copying a pair handle   \n    cliext::pair<wchar_t, int> c4(%c3);   \n    System::Console::WriteLine(\"[{0}, {1}]\", c4.first, c4.second);   \n  \n    return (0);   \n    }  \n  \n```  \n  \n```Output  \n[\\0, 0]  \n[x, 3]  \n[x, 3]  \n[x, 3]  \n```  \n  \n## Requirements  \n **Header:** \\<cliext/utility>  \n  \n **Namespace:** cliext  \n  \n## See Also  \n [pair (STL/CLR)](../dotnet/pair-stl-clr.md)"}