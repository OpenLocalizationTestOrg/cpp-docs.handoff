{"nodes":[{"pos":[12,57],"content":"&lt;include&gt; (Visual C++) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"include<ph id=\"ph1\">&amp;gt;</ph> (Visual C++) | Microsoft Docs","pos":[4,45],"source":"include&gt; (Visual C++) | Microsoft Docs"}]},{"content":"include<ph id=\"ph1\">&amp;gt;</ph> (Visual C++)","pos":[661,685],"source":"include&gt; (Visual C++)"},{"content":"The <ph id=\"ph1\">\\&lt;</ph>include&gt; tag lets you refer to comments in another file that describe the types and members in your source code.","pos":[686,804],"source":"The \\<include> tag lets you refer to comments in another file that describe the types and members in your source code."},{"content":"This is an alternative to placing documentation comments directly in your source code file.","pos":[805,896]},{"content":"For example, you can use <ph id=\"ph1\">\\&lt;</ph>include&gt; to insert standard \"boilerplate\" comments that are used throughout your team or company.","pos":[898,1022],"source":"  For example, you can use \\<include> to insert standard \"boilerplate\" comments that are used throughout your team or company."},{"content":"Syntax","pos":[1031,1037]},{"content":"Parameters","pos":[1108,1118]},{"content":"The name of the file containing the documentation.","pos":[1136,1186]},{"content":"The file name can be qualified with a path.","pos":[1187,1230]},{"content":"Enclose the name in single or double quotation marks.","pos":[1232,1285]},{"content":"The compiler issues a warning if it does not find <ph id=\"ph1\">`filename`</ph>.","pos":[1287,1348],"source":"  The compiler issues a warning if it does not find `filename`."},{"content":"A valid XPath expression that selects the desired node-set contained in the file.","pos":[1368,1449]},{"content":"The name specifier in the tag that precedes the comments; <ph id=\"ph1\">`name`</ph> will have an <ph id=\"ph2\">`id`</ph>.","pos":[1466,1549],"source":" The name specifier in the tag that precedes the comments; `name` will have an `id`."},{"content":"The ID for the tag that precedes the comments.","pos":[1564,1610]},{"content":"Enclose the name in single or double quotation marks.","pos":[1612,1665]},{"content":"Remarks","pos":[1674,1681]},{"content":"The <ph id=\"ph1\">\\&lt;</ph>include&gt; tag uses the XML XPath syntax.","pos":[1685,1730],"source":"The \\<include> tag uses the XML XPath syntax."},{"content":"Refer to XPath documentation for ways to customize using <ph id=\"ph1\">\\&lt;</ph>include&gt;.","pos":[1731,1799],"source":" Refer to XPath documentation for ways to customize using \\<include>."},{"pos":[1806,1934],"content":"Compile with <bpt id=\"p1\">[</bpt>/doc<ept id=\"p1\">](../build/reference/doc-process-documentation-comments-c-cpp.md)</ept> to process documentation comments to a file.","source":"Compile with [/doc](../build/reference/doc-process-documentation-comments-c-cpp.md) to process documentation comments to a file."},{"content":"Example","pos":[1943,1950]},{"content":"This is a multifile example.","pos":[1954,1982]},{"content":"The first file, which uses <ph id=\"ph1\">\\&lt;</ph>include&gt;, contains the following documentation comments:","pos":[1983,2068],"source":" The first file, which uses \\<include>, contains the following documentation comments:"},{"content":"The second file, xml_include_tag.doc, contains the following documentation comments:","pos":[2499,2583]},{"content":"Program Output","pos":[2836,2850]},{"content":"See Also","pos":[3254,3262]},{"content":"XML Documentation","pos":[3267,3284]}],"content":"---\ntitle: \"&lt;include&gt; (Visual C++) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"include\"\n  - \"<include>\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"include C++ XML tag\"\n  - \"<include> C++ XML tag\"\nms.assetid: 392a3e61-0371-4617-8362-446650876ce3\ncaps.latest.revision: 8\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# &lt;include&gt; (Visual C++)\nThe \\<include> tag lets you refer to comments in another file that describe the types and members in your source code. This is an alternative to placing documentation comments directly in your source code file.  For example, you can use \\<include> to insert standard \"boilerplate\" comments that are used throughout your team or company.  \n  \n## Syntax  \n  \n```  \n<include file='filename' path='tagpath' />  \n```  \n  \n#### Parameters  \n `filename`  \n The name of the file containing the documentation. The file name can be qualified with a path.  Enclose the name in single or double quotation marks.  The compiler issues a warning if it does not find `filename`.  \n  \n `tagpath`  \n A valid XPath expression that selects the desired node-set contained in the file.  \n  \n `name`  \n The name specifier in the tag that precedes the comments; `name` will have an `id`.  \n  \n `id`  \n The ID for the tag that precedes the comments.  Enclose the name in single or double quotation marks.  \n  \n## Remarks  \n The \\<include> tag uses the XML XPath syntax. Refer to XPath documentation for ways to customize using \\<include>.  \n  \n Compile with [/doc](../build/reference/doc-process-documentation-comments-c-cpp.md) to process documentation comments to a file.  \n  \n## Example  \n This is a multifile example. The first file, which uses \\<include>, contains the following documentation comments:  \n  \n```  \n// xml_include_tag.cpp  \n// compile with: /clr /doc /LD  \n// post-build command: xdcmake xml_include_tag.dll  \n  \n/// <include file='xml_include_tag.doc' path='MyDocs/MyMembers[@name=\"test\"]/*' />  \npublic ref class Test {  \n   void TestMethod() {  \n   }  \n};  \n  \n/// <include file='xml_include_tag.doc' path='MyDocs/MyMembers[@name=\"test2\"]/*' />  \npublic ref class Test2 {  \n   void Test() {  \n   }  \n};  \n```  \n  \n The second file, xml_include_tag.doc, contains the following documentation comments:  \n  \n```  \n<MyDocs>  \n  \n<MyMembers name=\"test\">  \n<summary>  \nThe summary for this type.  \n</summary>  \n</MyMembers>  \n  \n<MyMembers name=\"test2\">  \n<summary>  \nThe summary for this other type.  \n</summary>  \n</MyMembers>  \n  \n</MyDocs>  \n```  \n  \n## Program Output  \n  \n```  \n<?xml version=\"1.0\"?>  \n<doc>  \n    <assembly>  \n        <name>t2</name>  \n    </assembly>  \n    <members>  \n        <member name=\"T:Test\">  \n            <summary>  \nThe summary for this type.  \n</summary>  \n        </member>  \n        <member name=\"T:Test2\">  \n            <summary>  \nThe summary for this other type.  \n</summary>  \n        </member>  \n    </members>  \n</doc>  \n```  \n  \n## See Also  \n [XML Documentation](../ide/xml-documentation-visual-cpp.md)"}