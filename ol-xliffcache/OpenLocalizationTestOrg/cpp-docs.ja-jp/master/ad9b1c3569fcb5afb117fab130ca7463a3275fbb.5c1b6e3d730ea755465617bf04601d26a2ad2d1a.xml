{"nodes":[{"pos":[12,66],"content":"Compiler Warnings C4200 Through C4399 | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Compiler Warnings C4200 Through C4399 | Microsoft Docs","pos":[0,54]}]},{"content":"Compiler Warnings C4200 Through C4399","pos":[967,1004]},{"content":"The articles in this part of the documentation contain information about a subset of the Visual C++ compiler warnings.","pos":[1005,1123]},{"content":"You can access the information here or, in the <bpt id=\"p1\">**</bpt>Output<ept id=\"p1\">**</ept> window in Visual Studio, you can select a warning number and then choose the F1 key.","pos":[1124,1266],"source":" You can access the information here or, in the **Output** window in Visual Studio, you can select a warning number and then choose the F1 key."},{"content":"In This Section","pos":[1275,1290]},{"content":"Warning","pos":[1297,1304]},{"content":"Message","pos":[1305,1312]},{"content":"Compiler Warning (levels 2 and 4) C4200","pos":[1350,1389]},{"content":"nonstandard extension used: zero-sized array in struct/union","pos":[1472,1532]},{"content":"Compiler Warning (level 4) C4201","pos":[1538,1570]},{"content":"nonstandard extension used: nameless struct/union","pos":[1646,1695]},{"content":"Compiler Warning (level 4) C4202","pos":[1701,1733]},{"content":"nonstandard extension used: '...': prototype parameter in name list illegal","pos":[1809,1884]},{"content":"Compiler warning C4203","pos":[1889,1911]},{"content":"nonstandard extension used: union with static member variable","pos":[1912,1973]},{"content":"Compiler Warning (level 4) C4204","pos":[1979,2011]},{"content":"nonstandard extension used: non-constant aggregate initializer","pos":[2087,2149]},{"content":"Compiler Warning (level 4) C4205","pos":[2155,2187]},{"content":"nonstandard extension used: static function declaration in function scope","pos":[2263,2336]},{"content":"Compiler Warning (level 4) C4206","pos":[2342,2374]},{"content":"nonstandard extension used: translation unit is empty","pos":[2450,2503]},{"content":"Compiler Warning (level 4) C4207","pos":[2509,2541]},{"content":"nonstandard extension used: extended initializer form","pos":[2617,2670]},{"content":"Compiler Warning (level 4) C4208","pos":[2676,2708]},{"content":"nonstandard extension used: delete [exp] - exp evaluated but ignored","pos":[2784,2852]},{"content":"Compiler Warning (level 4) C4210","pos":[2858,2890]},{"content":"nonstandard extension used: function given file scope","pos":[2966,3019]},{"content":"Compiler Warning (level 4) C4211","pos":[3025,3057]},{"content":"nonstandard extension used: redefined extern to static","pos":[3133,3187]},{"content":"Compiler Warning (level 4) C4212","pos":[3193,3225]},{"content":"nonstandard extension used: function declaration used ellipsis","pos":[3301,3363]},{"content":"Compiler Warning (level 4) C4213","pos":[3369,3401]},{"content":"nonstandard extension used: cast on l-value","pos":[3477,3520]},{"content":"Compiler Warning (level 4) C4214","pos":[3526,3558]},{"content":"nonstandard extension used: bit field types other than int","pos":[3634,3692]},{"content":"Compiler Warning (level 1) C4215","pos":[3698,3730]},{"content":"nonstandard extension used: long float","pos":[3806,3844]},{"content":"Compiler Warning (level 1) C4216","pos":[3850,3882]},{"content":"nonstandard extension used: float long","pos":[3958,3996]},{"content":"Compiler Warning (level 1) C4218","pos":[4002,4034]},{"content":"nonstandard extension used: must specify at least a storage class or a type","pos":[4110,4185]},{"content":"Compiler Warning (level 4) C4220","pos":[4191,4223]},{"content":"varargs matches remaining parameters","pos":[4299,4335]},{"content":"Compiler Warning (level 4) C4221","pos":[4341,4373]},{"content":"nonstandard extension used: 'identifier': cannot be initialized using address of automatic variable 'variable'","pos":[4449,4559]},{"content":"Compiler Warning (levels 1 and 4) C4223","pos":[4565,4604]},{"content":"nonstandard extension used: non-lvalue array converted to pointer","pos":[4687,4752]},{"content":"Compiler Warning (level 1) C4224","pos":[4758,4790]},{"content":"nonstandard extension used: formal parameter 'identifier' was previously defined as a type","pos":[4866,4956]},{"content":"Compiler Warning (level 1) C4226","pos":[4962,4994]},{"content":"nonstandard extension used: 'keyword' is an obsolete keyword","pos":[5070,5130]},{"content":"Compiler Warning (level 1) C4227","pos":[5136,5168]},{"content":"anachronism used: qualifiers on reference are ignored","pos":[5244,5297]},{"content":"Compiler Warning (level 1) C4228","pos":[5303,5335]},{"content":"nonstandard extension used: qualifiers after comma in declarator list are ignored","pos":[5411,5492]},{"content":"Compiler Warning (level 1) C4229","pos":[5498,5530]},{"content":"anachronism used: modifiers on data are ignored","pos":[5606,5653]},{"content":"Compiler Warning (level 1) C4230","pos":[5659,5691]},{"content":"anachronism used: modifiers/qualifiers interspersed; qualifier ignored","pos":[5767,5837]},{"content":"Compiler Warning (level 4) C4232","pos":[5843,5875]},{"content":"nonstandard extension used: 'identifier': address of dllimport 'dllimport' is not static, identity not guaranteed","pos":[5951,6064]},{"content":"Compiler Warning (level 4) C4233","pos":[6070,6102]},{"content":"nonstandard extension used: 'keyword' keyword only supported in C++, not C","pos":[6178,6252]},{"content":"Compiler Warning (level 4) C4234","pos":[6258,6290]},{"content":"nonstandard extension used: 'keyword' keyword reserved for future use","pos":[6366,6435]},{"content":"Compiler Warning (level 4) C4235","pos":[6441,6473]},{"content":"nonstandard extension used: 'keyword' keyword not supported on this architecture","pos":[6549,6629]},{"content":"Compiler Warning (level 1) C4237","pos":[6635,6667]},{"content":"'keyword' keyword is not yet supported, but reserved for future use","pos":[6743,6810]},{"content":"Compiler Warning (level 4) C4238","pos":[6816,6848]},{"content":"nonstandard extension used: class rvalue used as lvalue","pos":[6924,6979]},{"content":"Compiler Warning (level 4) C4239","pos":[6985,7017]},{"content":"nonstandard extension used: 'token': conversion from 'type1' to 'type2'","pos":[7093,7164]},{"content":"Compiler Warning (level 3) C4240","pos":[7170,7202]},{"content":"nonstandard extension used: access to 'classname' now defined to be 'acess_specifier1', previously it was defined to be 'access_specifier2'","pos":[7278,7417]},{"content":"Compiler Warning (level 4) C4242","pos":[7423,7455]},{"content":"'identfier': conversion from 'type1' to 'type1', possible loss of data","pos":[7531,7601]},{"content":"Compiler Warning (level 3) C4243","pos":[7607,7639]},{"content":"'conversion_type' conversion from 'type1' to 'type1' exists, but is inaccessible","pos":[7715,7795]},{"content":"Compiler Warning (level 2) C4244","pos":[7801,7833]},{"content":"'conversion_type': conversion from 'type1' to 'type2', possible loss of data","pos":[7909,7985]},{"content":"Compiler Warning (levels 3 and 4) C4244","pos":[7991,8030]},{"content":"'conversion_type': conversion from 'type1' to 'type2', possible loss of data","pos":[8113,8189]},{"content":"Compiler Warning (level 4) C4245","pos":[8195,8227]},{"content":"'conversion_type': conversion from 'type1' to 'type2', signed/unsigned mismatch","pos":[8303,8382]},{"content":"Compiler Warning (level 2) C4250","pos":[8388,8420]},{"content":"'classname': inherits 'base_classname::member' via dominance","pos":[8496,8556]},{"content":"Compiler Warning (level 1) C4251","pos":[8562,8594]},{"content":"'identifier': 'object_type1' 'identifier1' needs to have dll-interface to be used by clients of 'object_type' 'identfier2'","pos":[8670,8792]},{"content":"Compiler Warning (level 4) C4254","pos":[8798,8830]},{"content":"'operator': conversion from 'type1:field_bits' to 'type2:field_bits', possible loss of data","pos":[8906,8997]},{"content":"Compiler Warning (level 4) C4255","pos":[9003,9035]},{"content":"'function': no function prototype given: converting '()' to '(void)'","pos":[9111,9179]},{"content":"Compiler Warning (level 4) C4256","pos":[9185,9217]},{"content":"'function': constructor for class with virtual bases has '...'; calls may not be compatible with older versions of Visual C++","pos":[9293,9418]},{"content":"Compiler Warning (level 1) C4258","pos":[9424,9456]},{"content":"'variable': definition from the for loop is ignored; the definition from the enclosing scope is used","pos":[9532,9632]},{"content":"Compiler Warning (level 4) C4263","pos":[9638,9670]},{"content":"'function': member function does not override any base class virtual member function","pos":[9746,9830]},{"content":"Compiler Warning (level 1) C4264","pos":[9836,9868]},{"content":"'virtual_function': no override available for virtual member function from base 'classname'; function is hidden","pos":[9944,10055]},{"content":"Compiler Warning (level 3) C4265","pos":[10061,10093]},{"content":"'classname': class has virtual functions, but destructor is not virtual\\n instances of this class may not be destructed correctly","pos":[10169,10298]},{"content":"Compiler Warning (level 4) C4266","pos":[10304,10336]},{"content":"'virtual_function': no override available for virtual member function from base 'classname'; function is hidden","pos":[10412,10523]},{"content":"Compiler Warning (level 3) C4267","pos":[10529,10561]},{"content":"'variable': conversion from 'size_t' to 'type', possible loss of data","pos":[10637,10706]},{"content":"Compiler Warning (level 4) C4268","pos":[10712,10744]},{"content":"'identifier': 'const' static/global data initialized with compiler generated default constructor fills the object with zeros","pos":[10820,10944]},{"content":"Compiler Warning (level 1) C4269","pos":[10950,10982]},{"content":"'identifier': 'const' automatic data initialized with compiler generated default constructor produces unreliable results","pos":[11058,11178]},{"content":"Compiler Warning (level 1) C4272","pos":[11184,11216]},{"content":"'function': is marked __declspec(dllimport); must specify native calling convention when importing a function.","pos":[11292,11402]},{"content":"Compiler Warning (level 1) C4273","pos":[11408,11440]},{"content":"'function': inconsistent dll linkage","pos":[11516,11552]},{"content":"Compiler warning (level 1) C4274","pos":[11557,11589]},{"content":"ident ignored; see documentation for #pragma comment(exestr, 'string')","pos":[11591,11661]},{"content":"Compiler Warning (level 2) C4275","pos":[11667,11699]},{"content":"non dll-interface 'classkey' 'identifier1' used as base for dll-interface 'classkey' 'identifier2'","pos":[11775,11873]},{"content":"Compiler Warning (level 1) C4276","pos":[11879,11911]},{"content":"'function': no prototype provided; assumed no parameters","pos":[11987,12043]},{"content":"Compiler warning (level 1) C4277","pos":[12048,12080]},{"content":"imported item 'classname::member' exists as both data member and function member; data member ignored","pos":[12081,12182]},{"content":"Compiler Warning (level 3) C4278","pos":[12188,12220]},{"content":"'identifier': identifier in type library 'library' is already a macro; use the 'rename' qualifier","pos":[12296,12393]},{"content":"Compiler warning (level 3 and level 4) C4279","pos":[12398,12442]},{"content":"'identifier': identifier in type library 'library' is a keyword; use the 'rename' qualifier","pos":[12443,12534]},{"content":"Compiler Warning (level 3) C4280","pos":[12540,12572]},{"content":"'operator -&gt;' was self recursive through type 'type'","pos":[12648,12700],"source":"'operator ->' was self recursive through type 'type'"},{"content":"Compiler Warning (level 3) C4281","pos":[12706,12738]},{"content":"'operator -&gt;' recursion occurred through type 'type1'","pos":[12814,12867],"source":"'operator ->' recursion occurred through type 'type1'"},{"content":"Compiler Warning (level 3) C4282","pos":[12873,12905]},{"content":"then through type 'type2'","pos":[12981,13006]},{"content":"Compiler Warning (level 3) C4283","pos":[13012,13044]},{"content":"and through type 'typeN'","pos":[13120,13144]},{"content":"Compiler Warning (level 2) C4285","pos":[13150,13182]},{"content":"return type for 'identifier::operator -&gt;' is recursive if applied using infix notation","pos":[13258,13344],"source":"return type for 'identifier::operator ->' is recursive if applied using infix notation"},{"content":"Compiler Warning (level 1) C4286","pos":[13350,13382]},{"content":"'derived_type': is caught by base class ('base_type') on line 'line_number'","pos":[13458,13533]},{"content":"Compiler Warning (level 3) C4287","pos":[13539,13571]},{"content":"'operator': unsigned/negative constant mismatch","pos":[13647,13694]},{"content":"Compiler Warning (level 1) C4288","pos":[13700,13732]},{"content":"nonstandard extension used: 'variable': loop control variable declared in the for-loop is used outside the for-loop scope; it conflicts with the declaration in the outer scope","pos":[13808,13983]},{"content":"Compiler Warning (level 4) C4289","pos":[13989,14021]},{"content":"nonstandard extension used: 'variable': loop control variable declared in the for-loop is used outside the for-loop scope","pos":[14097,14218]},{"content":"Compiler Warning (level 3) C4290","pos":[14224,14256]},{"content":"C++ exception specification ignored except to indicate a function is not __declspec(nothrow)","pos":[14332,14424]},{"content":"Compiler Warning (level 1) C4291","pos":[14430,14462]},{"content":"'declaration': no matching operator delete found; memory will not be freed if initialization throws an exception","pos":[14538,14650]},{"content":"Compiler Warning (level 1) C4293","pos":[14656,14688]},{"content":"'shift_operator': shift count negative or too big, undefined behavior","pos":[14764,14833]},{"content":"Compiler Warning (level 4) C4295","pos":[14839,14871]},{"content":"'array': array is too small to include a terminating null character","pos":[14947,15014]},{"content":"Compiler Warning (level 4) C4296","pos":[15020,15052]},{"content":"'operator': expression is always 'boolean_value'","pos":[15128,15176]},{"content":"Compiler Warning (level 1) C4297","pos":[15182,15214]},{"content":"'function': function assumed not to throw an exception but does","pos":[15290,15353]},{"content":"Compiler warning (level 4) C4298","pos":[15358,15390]},{"content":"'identifier': identifier in type library 'library' is already a macro; renaming to '__identifier'","pos":[15391,15488]},{"content":"Compiler warning (level 4) C4299","pos":[15493,15525]},{"content":"'identifier': identifier in type library 'library' is a keyword; renaming to '__identifier'","pos":[15526,15617]},{"content":"Compiler warning C4301","pos":[15622,15644]},{"content":"'derived_class::function': overriding virtual function only differs from 'base_class:function' by const/volatile qualifier","pos":[15645,15767]},{"content":"Compiler Warning (level 2) C4302","pos":[15773,15805]},{"content":"'conversion': truncation from 'type1' to 'type2'","pos":[15881,15929]},{"content":"Compiler warning C4303","pos":[15934,15956]},{"content":"C-style_cast' from 'type1' to 'type2' is deprecated, use static_cast, __try_cast or dynamic_cast","pos":[15957,16053]},{"content":"Compiler Warning (level 1) C4305","pos":[16059,16091]},{"content":"'conversion': truncation from 'type1' to 'type2'","pos":[16167,16215]},{"content":"Compiler Warning (level 3) C4306","pos":[16221,16253]},{"content":"'conversion': conversion from 'type1' to 'type2' of greater size","pos":[16329,16393]},{"content":"Compiler Warning (level 2) C4307","pos":[16399,16431]},{"content":"'operator': integral constant overflow","pos":[16507,16545]},{"content":"Compiler Warning (level 2) C4308","pos":[16551,16583]},{"content":"negative integral constant converted to unsigned type","pos":[16659,16712]},{"content":"Compiler Warning (level 2) C4309","pos":[16718,16750]},{"content":"'conversion': truncation of constant value","pos":[16826,16868]},{"content":"Compiler Warning (level 3) C4310","pos":[16874,16906]},{"content":"cast truncates constant value","pos":[16982,17011]},{"content":"Compiler Warning (level 1) C4311","pos":[17017,17049]},{"content":"'variable': pointer truncation from 'type1' to 'type2'","pos":[17125,17179]},{"content":"Compiler Warning (level 1) C4312","pos":[17185,17217]},{"content":"'operation': conversion from 'type1' to 'type2' of greater size","pos":[17293,17356]},{"content":"Compiler Warning (level 1) C4313","pos":[17362,17394]},{"content":"'function': 'format_specifier' in format string conflicts with argument 'argument_number' of type 'type'","pos":[17470,17574]},{"content":"Compiler warning C4314","pos":[17579,17601]},{"content":"expected pragma parameter to be '32' or '64'","pos":[17602,17646]},{"content":"Compiler warning (level 4) C4315","pos":[17651,17683]},{"content":"'classname': 'this' pointer for member 'member' may not be aligned 'alignment' as expected by the constructor","pos":[17684,17793]},{"content":"Compiler warning (level 3) C4316","pos":[17798,17830]},{"content":"'identifier': object allocated on the heap may not be aligned 'alignment'","pos":[17831,17904]},{"content":"Compiler warning (level 1) C4317","pos":[17909,17941]},{"content":"'printf_family' : not enough arguments passed for format string","pos":[17942,18005]},{"content":"Compiler warning C4318","pos":[18010,18032]},{"content":"passing constant zero as the length to memset","pos":[18033,18078]},{"content":"Compiler Warning (level 1) C4319","pos":[18084,18116]},{"content":"'operator': zero extending 'type1' to 'type2' of greater size","pos":[18192,18253]},{"content":"Compiler warning (level 1) C4321","pos":[18258,18290]},{"content":"automatically generating an IID for interface '%$S'","pos":[18291,18342]},{"content":"Compiler warning (level 1) C4322","pos":[18347,18379]},{"content":"automatically generating a CLSID for class '%$S'","pos":[18380,18428]},{"content":"Compiler warning (level 1) C4323","pos":[18433,18465]},{"content":"re-using registered CLSID for class '%$S'","pos":[18466,18507]},{"content":"Compiler Warning (level 4) C4324","pos":[18513,18545]},{"content":"'structname': structure was padded due to __declspec(align())","pos":[18621,18682]},{"content":"Compiler Warning (level 1) C4325","pos":[18688,18720]},{"content":"attributes for standard section 'section' ignored","pos":[18796,18845]},{"content":"Compiler Warning (level 1) C4326","pos":[18851,18883]},{"content":"return type of 'function' should be 'type1' instead of 'type2'","pos":[18959,19021]},{"content":"Compiler warning C4327","pos":[19026,19048]},{"content":"'assignment': indirection alignment of LHS ('alignment1') is greater than RHS ('alignment2')","pos":[19049,19141]},{"content":"Compiler warning C4328","pos":[19146,19168]},{"content":"'function': indirection alignment of formal parameter parameter_number (parameter_alignment) is greater than the actual argument alignment (argument_alignment)","pos":[19169,19328]},{"content":"Compiler Warning (level 1) C4329","pos":[19334,19366]},{"content":"__declspec(align()) is ignored on enum","pos":[19442,19480]},{"content":"Compiler warning (level 1) C4330","pos":[19485,19517]},{"content":"attribute '%s' for section '%s' ignored","pos":[19518,19557]},{"content":"Compiler Warning (level 1) C4333","pos":[19563,19595]},{"content":"'shift_operator': right shift by too large amount, data loss","pos":[19671,19731]},{"content":"Compiler Warning (level 3) C4334","pos":[19737,19769]},{"content":"'shift_operator': result of 32-bit shift implicitly converted to 64 bits (was 64-bit shift intended?)","pos":[19845,19946]},{"content":"Compiler Warning C4335","pos":[19952,19974]},{"content":"Mac file format detected: please convert the source file to either DOS or UNIX format","pos":[20042,20127]},{"content":"Compiler Warning (level 4) C4336","pos":[20133,20165]},{"content":"import cross-referenced type library 'library1' before importing 'library2'","pos":[20241,20316]},{"content":"Compiler Warning (level 4) C4337","pos":[20322,20354]},{"content":"cross-referenced type library 'library1' in 'library2' is being automatically imported","pos":[20430,20516]},{"content":"Compiler warning (level 4) C4338","pos":[20521,20553]},{"content":"pragma %s: standard section '%s' is used","pos":[20555,20595]},{"content":"Compiler Warning (level 4) C4339","pos":[20601,20633]},{"content":"'type': use of undefined type detected in 'WinRT&amp;#124;CLR' meta-data - use of this type may lead to a runtime exception","pos":[20709,20828],"source":"'type': use of undefined type detected in 'WinRT&#124;CLR' meta-data - use of this type may lead to a runtime exception"},{"content":"Compiler Warning (level 1) C4340","pos":[20834,20866]},{"content":"'value': value wrapped from positive to negative value","pos":[20942,20996]},{"content":"Compiler Warning (level 1) C4342","pos":[21002,21034]},{"content":"behavior change: 'function' called, but a member operator was called in previous versions","pos":[21110,21199]},{"content":"Compiler warning (level 4) C4343","pos":[21204,21236]},{"content":"pragma optimize(\"g\",off) overrides /Og option","pos":[21238,21283]},{"content":"Compiler Warning (level 1) C4344","pos":[21289,21321]},{"content":"behavior change: use of explicit template arguments results in call to 'function'","pos":[21397,21478]},{"content":"Compiler Warning (level 1) C4346","pos":[21484,21516]},{"content":"'name': dependent name is not a type","pos":[21592,21628]},{"content":"Compiler Warning (level 1) C4348","pos":[21634,21666]},{"content":"'type': redefinition of default parameter: parameter 'parameter_number'","pos":[21742,21813]},{"content":"Compiler Warning (level 1) C4350","pos":[21819,21851]},{"content":"behavior change: 'member1' called instead of 'member2'","pos":[21927,21981]},{"content":"Compiler warning (level 1) C4352","pos":[21986,22018]},{"content":"'%$I': intrinsic function already defined","pos":[22019,22060]},{"content":"Compiler Warning (level 1) C4353","pos":[22066,22098]},{"content":"nonstandard extension used: constant 0 as function expression.","pos":[22174,22236]},{"content":"Use '__noop' function intrinsic instead","pos":[22238,22277]},{"pos":[22282,22416],"content":"<bpt id=\"p1\">[</bpt>Compiler Warning C4355<ept id=\"p1\">](../../error-messages/compiler-warnings/compiler-warning-c4355.md)</ept>Compiler warning (level 1 and level 4) C4355","source":"[Compiler Warning C4355](../../error-messages/compiler-warnings/compiler-warning-c4355.md)Compiler warning (level 1 and level 4) C4355"},{"content":"'this': used in base member initializer list","pos":[22417,22461]},{"content":"Compiler Warning (level 2) C4356","pos":[22467,22499]},{"content":"'member': static data member cannot be initialized via derived class","pos":[22575,22643]},{"content":"Compiler Warning (level 3) C4357","pos":[22649,22681]},{"content":"param array argument found in formal argument list for delegate 'delegate' ignored when generating 'function'","pos":[22757,22866]},{"content":"Compiler Warning (level 1) C4358","pos":[22872,22904]},{"content":"'operator': return type of combined delegates is not 'void'; returned value is undefined","pos":[22980,23068]},{"content":"Compiler Warning (level 3) C4359","pos":[23074,23106]},{"content":"'type': Alignment specifier is less than actual alignment ('alignment'), and will be ignored.","pos":[23182,23275]},{"content":"Compiler warning (level 2) C4362","pos":[23280,23312]},{"content":"'%$S': alignment greater than 8 bytes is not supported by CLR","pos":[23313,23374]},{"content":"Compiler Warning (level 1) C4364","pos":[23380,23412]},{"content":"using for assembly 'assembly' previously seen at 'location'('line_number') without as_friend attribute; as_friend not applied","pos":[23489,23614]},{"content":"Compiler Warning (level 4) C4365","pos":[23620,23652]},{"content":"'expression': conversion from 'type1' to 'type2', signed/unsigned mismatch","pos":[23728,23802]},{"content":"Compiler Warning (level 4) C4366","pos":[23808,23840]},{"content":"The result of the unary 'operator' operator may be unaligned","pos":[23916,23976]},{"content":"Compiler warning (level 3) C4367","pos":[23981,24013]},{"content":"Conversion from '%$T' to '%$T' may cause datatype misalignment exception","pos":[24014,24086]},{"content":"Compiler Warning C4368","pos":[24092,24114]},{"content":"cannot define 'member' as a member of managed 'type': mixed types are not supported","pos":[24182,24265]},{"content":"Compiler Warning (level 1) C4369","pos":[24271,24303]},{"content":"'enumerator':  enumerator value 'value' cannot be represented as 'type', value is 'new_value'","pos":[24379,24472]},{"content":"Compiler warning C4370","pos":[24477,24499]},{"content":"'classname': layout of class has changed from a previous version of the compiler due to better packing","pos":[24500,24602]},{"content":"Compiler warning (level 3) C4371","pos":[24607,24639]},{"content":"'classname': layout of class may have changed from a previous version of the compiler due to better packing of member 'member'","pos":[24640,24766]},{"content":"Compiler warning (level 3) C4373","pos":[24771,24803]},{"content":"'derived_class::function': virtual function overrides 'base_class::function', previous versions of the compiler did not override when parameters only differed by const/volatile qualifiers","pos":[24804,24991]},{"content":"Compiler Warning (level 1) C4374","pos":[24997,25029]},{"content":"'function1': interface method will not be implemented by non-virtual method 'function2'","pos":[25105,25192]},{"content":"Compiler Warning (level 1) C4375","pos":[25198,25230]},{"content":"non-public method 'method2' does not override 'method2'","pos":[25306,25361]},{"content":"Compiler Warning (level 1) C4376","pos":[25367,25399]},{"content":"access specifier 'old_specifier:' is no longer supported: please use 'new_specifier:' instead","pos":[25475,25568]},{"content":"Compiler Warning (level 1) C4377","pos":[25574,25606]},{"content":"native types are private by default; -d1PrivateNativeTypes is deprecated","pos":[25682,25754]},{"content":"Compiler Warning (level 1) C4378","pos":[25760,25792]},{"content":"Must obtain function pointers to run initializers; consider System::ModuleHandle::ResolveMethodHandle","pos":[25868,25969]},{"content":"Compiler Warning (level 1) C4379","pos":[25975,26007]},{"content":"Version 'version_number' of the common language runtime is not supported by this compiler.","pos":[26083,26173]},{"content":"Using this version may cause unexpected results","pos":[26174,26221]},{"content":"Compiler warning (level 1) C4380","pos":[26226,26258]},{"content":"'%$S': A default constructor cannot be deprecated","pos":[26259,26308]},{"content":"Compiler Warning (level 1) C4381","pos":[26314,26346]},{"content":"'function1': interface method will not be implemented by non-public method 'function2'","pos":[26422,26508]},{"content":"Compiler Warning (level 1) C4382","pos":[26514,26546]},{"content":"throwing 'type': a type with __clrcall destructor or copy constructor can only be caught in /clr:pure module","pos":[26622,26730]},{"content":"Compiler Warning (level 1) C4383","pos":[26736,26768]},{"content":"'instance_dereference_operator': the meaning of dereferencing a handle can change, when a user-defined 'instance_dereference_operator' operator exists; write the operator as a static function to be explicit about the operand","pos":[26844,27068]},{"content":"Compiler Warning (level 1) C4384","pos":[27074,27106]},{"content":"pragma 'make_public' should only be used at global scope","pos":[27183,27239]},{"content":"Compiler warning (level 3) C4387","pos":[27244,27276]},{"content":"'%s': was considered","pos":[27277,27297]},{"content":"Compiler warning (level 4) C4388","pos":[27302,27334]},{"content":"'%$L': signed/unsigned mismatch","pos":[27335,27366]},{"content":"Compiler Warning (level 4) C4389","pos":[27372,27404]},{"content":"'operator': signed/unsigned mismatch","pos":[27480,27516]},{"content":"Compiler Warning (level 3) C4390","pos":[27522,27554]},{"content":"';': empty controlled statement found; is this the intent?","pos":[27630,27688]},{"content":"Compiler Warning (level 1) C4391","pos":[27694,27726]},{"content":"'function_signature': incorrect return type for intrinsic function, expected 'type'","pos":[27802,27885]},{"content":"Compiler Warning (level 1) C4392","pos":[27891,27923]},{"content":"'function_signature': incorrect number of arguments for intrinsic function, expected 'argument_count' arguments","pos":[27999,28110]},{"content":"Compiler Warning (level 1) C4393","pos":[28116,28148]},{"content":"'variable': const has no effect on 'literal' data member; ignored","pos":[28224,28289]},{"content":"Compiler Warning C4394","pos":[28295,28317]},{"content":"'function': per-appdomain symbol should not be marked with __declspec('dllexport')","pos":[28385,28467]},{"content":"Compiler Warning (level 1) C4395","pos":[28473,28505]},{"content":"'function': member function will be invoked on a copy of the initonly data member 'member'","pos":[28581,28671]},{"content":"Compiler warning (level 2) C4396","pos":[28676,28708]},{"content":"'%$S': the inline specifier cannot be used when a friend declaration refers to a specialization of a function template","pos":[28709,28827]},{"content":"Compiler Warning (level 1) C4397","pos":[28833,28865]},{"content":"DefaultCharSetAttribute is ignored","pos":[28941,28975]},{"content":"Compiler Warning (level 3) C4398","pos":[28981,29013]},{"content":"'variable': per-process global object might not work correctly with multiple appdomains; consider using __declspec(appdomain)","pos":[29089,29214]},{"content":"Compiler Warning (level 1) C4399","pos":[29220,29252]},{"content":"'symbol': per-process symbol should not be marked with __declspec('dllimport') when compiled with /clr:pure","pos":[29328,29435]}],"content":"---\ntitle: \"Compiler Warnings C4200 Through C4399 | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"error-reference\"\nf1_keywords: \n  - \"C4203\"\n  - \"C4274\"\n  - \"C4277\"\n  - \"C4279\"\n  - \"C4298\"\n  - \"C4299\"\n  - \"C4301\"\n  - \"C4303\"\n  - \"C4314\"\n  - \"C4315\"\n  - \"C4316\"\n  - \"C4317\"\n  - \"C4318\"\n  - \"C4321\"\n  - \"C4322\"\n  - \"C4323\"\n  - \"C4327\"\n  - \"C4328\"\n  - \"C4330\"\n  - \"C4338\"\n  - \"C4343\"\n  - \"C4352\"\n  - \"C4362\"\n  - \"C4367\"\n  - \"C4370\"\n  - \"C4371\"\n  - \"C4373\"\n  - \"C4380\"\n  - \"C4387\"\n  - \"C4388\"\n  - \"C4396\"\ndev_langs: \n  - \"C++\"\nms.assetid: 170248db-7bf2-4823-92d9-437b04c1290d\ncaps.latest.revision: 19\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"ru-ru\"\n  - \"zh-cn\"\n  - \"zh-tw\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"tr-tr\"\n---\n# Compiler Warnings C4200 Through C4399\nThe articles in this part of the documentation contain information about a subset of the Visual C++ compiler warnings. You can access the information here or, in the **Output** window in Visual Studio, you can select a warning number and then choose the F1 key.  \n  \n## In This Section  \n  \n|Warning|Message|  \n|-------------|-------------|  \n|[Compiler Warning (levels 2 and 4) C4200](../../error-messages/compiler-warnings/compiler-warning-levels-2-and-4-c4200.md)|nonstandard extension used: zero-sized array in struct/union|  \n|[Compiler Warning (level 4) C4201](../../error-messages/compiler-warnings/compiler-warning-level-4-c4201.md)|nonstandard extension used: nameless struct/union|  \n|[Compiler Warning (level 4) C4202](../../error-messages/compiler-warnings/compiler-warning-level-4-c4202.md)|nonstandard extension used: '...': prototype parameter in name list illegal|  \n|Compiler warning C4203|nonstandard extension used: union with static member variable|  \n|[Compiler Warning (level 4) C4204](../../error-messages/compiler-warnings/compiler-warning-level-4-c4204.md)|nonstandard extension used: non-constant aggregate initializer|  \n|[Compiler Warning (level 4) C4205](../../error-messages/compiler-warnings/compiler-warning-level-4-c4205.md)|nonstandard extension used: static function declaration in function scope|  \n|[Compiler Warning (level 4) C4206](../../error-messages/compiler-warnings/compiler-warning-level-4-c4206.md)|nonstandard extension used: translation unit is empty|  \n|[Compiler Warning (level 4) C4207](../../error-messages/compiler-warnings/compiler-warning-level-4-c4207.md)|nonstandard extension used: extended initializer form|  \n|[Compiler Warning (level 4) C4208](../../error-messages/compiler-warnings/compiler-warning-level-4-c4208.md)|nonstandard extension used: delete [exp] - exp evaluated but ignored|  \n|[Compiler Warning (level 4) C4210](../../error-messages/compiler-warnings/compiler-warning-level-4-c4210.md)|nonstandard extension used: function given file scope|  \n|[Compiler Warning (level 4) C4211](../../error-messages/compiler-warnings/compiler-warning-level-4-c4211.md)|nonstandard extension used: redefined extern to static|  \n|[Compiler Warning (level 4) C4212](../../error-messages/compiler-warnings/compiler-warning-level-4-c4212.md)|nonstandard extension used: function declaration used ellipsis|  \n|[Compiler Warning (level 4) C4213](../../error-messages/compiler-warnings/compiler-warning-level-4-c4213.md)|nonstandard extension used: cast on l-value|  \n|[Compiler Warning (level 4) C4214](../../error-messages/compiler-warnings/compiler-warning-level-4-c4214.md)|nonstandard extension used: bit field types other than int|  \n|[Compiler Warning (level 1) C4215](../../error-messages/compiler-warnings/compiler-warning-level-1-c4215.md)|nonstandard extension used: long float|  \n|[Compiler Warning (level 1) C4216](../../error-messages/compiler-warnings/compiler-warning-level-1-c4216.md)|nonstandard extension used: float long|  \n|[Compiler Warning (level 1) C4218](../../error-messages/compiler-warnings/compiler-warning-level-1-c4218.md)|nonstandard extension used: must specify at least a storage class or a type|  \n|[Compiler Warning (level 4) C4220](../../error-messages/compiler-warnings/compiler-warning-level-4-c4220.md)|varargs matches remaining parameters|  \n|[Compiler Warning (level 4) C4221](../../error-messages/compiler-warnings/compiler-warning-level-4-c4221.md)|nonstandard extension used: 'identifier': cannot be initialized using address of automatic variable 'variable'|  \n|[Compiler Warning (levels 1 and 4) C4223](../../error-messages/compiler-warnings/compiler-warning-levels-1-and-4-c4223.md)|nonstandard extension used: non-lvalue array converted to pointer|  \n|[Compiler Warning (level 1) C4224](../../error-messages/compiler-warnings/compiler-warning-level-1-c4224.md)|nonstandard extension used: formal parameter 'identifier' was previously defined as a type|  \n|[Compiler Warning (level 1) C4226](../../error-messages/compiler-warnings/compiler-warning-level-1-c4226.md)|nonstandard extension used: 'keyword' is an obsolete keyword|  \n|[Compiler Warning (level 1) C4227](../../error-messages/compiler-warnings/compiler-warning-level-1-c4227.md)|anachronism used: qualifiers on reference are ignored|  \n|[Compiler Warning (level 1) C4228](../../error-messages/compiler-warnings/compiler-warning-level-1-c4228.md)|nonstandard extension used: qualifiers after comma in declarator list are ignored|  \n|[Compiler Warning (level 1) C4229](../../error-messages/compiler-warnings/compiler-warning-level-1-c4229.md)|anachronism used: modifiers on data are ignored|  \n|[Compiler Warning (level 1) C4230](../../error-messages/compiler-warnings/compiler-warning-level-1-c4230.md)|anachronism used: modifiers/qualifiers interspersed; qualifier ignored|  \n|[Compiler Warning (level 4) C4232](../../error-messages/compiler-warnings/compiler-warning-level-4-c4232.md)|nonstandard extension used: 'identifier': address of dllimport 'dllimport' is not static, identity not guaranteed|  \n|[Compiler Warning (level 4) C4233](../../error-messages/compiler-warnings/compiler-warning-level-4-c4233.md)|nonstandard extension used: 'keyword' keyword only supported in C++, not C|  \n|[Compiler Warning (level 4) C4234](../../error-messages/compiler-warnings/compiler-warning-level-4-c4234.md)|nonstandard extension used: 'keyword' keyword reserved for future use|  \n|[Compiler Warning (level 4) C4235](../../error-messages/compiler-warnings/compiler-warning-level-4-c4235.md)|nonstandard extension used: 'keyword' keyword not supported on this architecture|  \n|[Compiler Warning (level 1) C4237](../../error-messages/compiler-warnings/compiler-warning-level-1-c4237.md)|'keyword' keyword is not yet supported, but reserved for future use|  \n|[Compiler Warning (level 4) C4238](../../error-messages/compiler-warnings/compiler-warning-level-4-c4238.md)|nonstandard extension used: class rvalue used as lvalue|  \n|[Compiler Warning (level 4) C4239](../../error-messages/compiler-warnings/compiler-warning-level-4-c4239.md)|nonstandard extension used: 'token': conversion from 'type1' to 'type2'|  \n|[Compiler Warning (level 3) C4240](../../error-messages/compiler-warnings/compiler-warning-level-3-c4240.md)|nonstandard extension used: access to 'classname' now defined to be 'acess_specifier1', previously it was defined to be 'access_specifier2'|  \n|[Compiler Warning (level 4) C4242](../../error-messages/compiler-warnings/compiler-warning-level-4-c4242.md)|'identfier': conversion from 'type1' to 'type1', possible loss of data|  \n|[Compiler Warning (level 3) C4243](../../error-messages/compiler-warnings/compiler-warning-level-3-c4243.md)|'conversion_type' conversion from 'type1' to 'type1' exists, but is inaccessible|  \n|[Compiler Warning (level 2) C4244](../../error-messages/compiler-warnings/compiler-warning-level-2-c4244.md)|'conversion_type': conversion from 'type1' to 'type2', possible loss of data|  \n|[Compiler Warning (levels 3 and 4) C4244](../../error-messages/compiler-warnings/compiler-warning-levels-3-and-4-c4244.md)|'conversion_type': conversion from 'type1' to 'type2', possible loss of data|  \n|[Compiler Warning (level 4) C4245](../../error-messages/compiler-warnings/compiler-warning-level-4-c4245.md)|'conversion_type': conversion from 'type1' to 'type2', signed/unsigned mismatch|  \n|[Compiler Warning (level 2) C4250](../../error-messages/compiler-warnings/compiler-warning-level-2-c4250.md)|'classname': inherits 'base_classname::member' via dominance|  \n|[Compiler Warning (level 1) C4251](../../error-messages/compiler-warnings/compiler-warning-level-1-c4251.md)|'identifier': 'object_type1' 'identifier1' needs to have dll-interface to be used by clients of 'object_type' 'identfier2'|  \n|[Compiler Warning (level 4) C4254](../../error-messages/compiler-warnings/compiler-warning-level-4-c4254.md)|'operator': conversion from 'type1:field_bits' to 'type2:field_bits', possible loss of data|  \n|[Compiler Warning (level 4) C4255](../../error-messages/compiler-warnings/compiler-warning-level-4-c4255.md)|'function': no function prototype given: converting '()' to '(void)'|  \n|[Compiler Warning (level 4) C4256](../../error-messages/compiler-warnings/compiler-warning-level-4-c4256.md)|'function': constructor for class with virtual bases has '...'; calls may not be compatible with older versions of Visual C++|  \n|[Compiler Warning (level 1) C4258](../../error-messages/compiler-warnings/compiler-warning-level-1-c4258.md)|'variable': definition from the for loop is ignored; the definition from the enclosing scope is used|  \n|[Compiler Warning (level 4) C4263](../../error-messages/compiler-warnings/compiler-warning-level-4-c4263.md)|'function': member function does not override any base class virtual member function|  \n|[Compiler Warning (level 1) C4264](../../error-messages/compiler-warnings/compiler-warning-level-1-c4264.md)|'virtual_function': no override available for virtual member function from base 'classname'; function is hidden|  \n|[Compiler Warning (level 3) C4265](../../error-messages/compiler-warnings/compiler-warning-level-3-c4265.md)|'classname': class has virtual functions, but destructor is not virtual\\n instances of this class may not be destructed correctly|  \n|[Compiler Warning (level 4) C4266](../../error-messages/compiler-warnings/compiler-warning-level-4-c4266.md)|'virtual_function': no override available for virtual member function from base 'classname'; function is hidden|  \n|[Compiler Warning (level 3) C4267](../../error-messages/compiler-warnings/compiler-warning-level-3-c4267.md)|'variable': conversion from 'size_t' to 'type', possible loss of data|  \n|[Compiler Warning (level 4) C4268](../../error-messages/compiler-warnings/compiler-warning-level-4-c4268.md)|'identifier': 'const' static/global data initialized with compiler generated default constructor fills the object with zeros|  \n|[Compiler Warning (level 1) C4269](../../error-messages/compiler-warnings/compiler-warning-level-1-c4269.md)|'identifier': 'const' automatic data initialized with compiler generated default constructor produces unreliable results|  \n|[Compiler Warning (level 1) C4272](../../error-messages/compiler-warnings/compiler-warning-level-1-c4272.md)|'function': is marked __declspec(dllimport); must specify native calling convention when importing a function.|  \n|[Compiler Warning (level 1) C4273](../../error-messages/compiler-warnings/compiler-warning-level-1-c4273.md)|'function': inconsistent dll linkage|  \n|Compiler warning (level 1) C4274|#ident ignored; see documentation for #pragma comment(exestr, 'string')|  \n|[Compiler Warning (level 2) C4275](../../error-messages/compiler-warnings/compiler-warning-level-2-c4275.md)|non dll-interface 'classkey' 'identifier1' used as base for dll-interface 'classkey' 'identifier2'|  \n|[Compiler Warning (level 1) C4276](../../error-messages/compiler-warnings/compiler-warning-level-1-c4276.md)|'function': no prototype provided; assumed no parameters|  \n|Compiler warning (level 1) C4277|imported item 'classname::member' exists as both data member and function member; data member ignored|  \n|[Compiler Warning (level 3) C4278](../../error-messages/compiler-warnings/compiler-warning-level-3-c4278.md)|'identifier': identifier in type library 'library' is already a macro; use the 'rename' qualifier|  \n|Compiler warning (level 3 and level 4) C4279|'identifier': identifier in type library 'library' is a keyword; use the 'rename' qualifier|  \n|[Compiler Warning (level 3) C4280](../../error-messages/compiler-warnings/compiler-warning-level-3-c4280.md)|'operator ->' was self recursive through type 'type'|  \n|[Compiler Warning (level 3) C4281](../../error-messages/compiler-warnings/compiler-warning-level-3-c4281.md)|'operator ->' recursion occurred through type 'type1'|  \n|[Compiler Warning (level 3) C4282](../../error-messages/compiler-warnings/compiler-warning-level-3-c4282.md)|then through type 'type2'|  \n|[Compiler Warning (level 3) C4283](../../error-messages/compiler-warnings/compiler-warning-level-3-c4283.md)|and through type 'typeN'|  \n|[Compiler Warning (level 2) C4285](../../error-messages/compiler-warnings/compiler-warning-level-2-c4285.md)|return type for 'identifier::operator ->' is recursive if applied using infix notation|  \n|[Compiler Warning (level 1) C4286](../../error-messages/compiler-warnings/compiler-warning-level-1-c4286.md)|'derived_type': is caught by base class ('base_type') on line 'line_number'|  \n|[Compiler Warning (level 3) C4287](../../error-messages/compiler-warnings/compiler-warning-level-3-c4287.md)|'operator': unsigned/negative constant mismatch|  \n|[Compiler Warning (level 1) C4288](../../error-messages/compiler-warnings/compiler-warning-level-1-c4288.md)|nonstandard extension used: 'variable': loop control variable declared in the for-loop is used outside the for-loop scope; it conflicts with the declaration in the outer scope|  \n|[Compiler Warning (level 4) C4289](../../error-messages/compiler-warnings/compiler-warning-level-4-c4289.md)|nonstandard extension used: 'variable': loop control variable declared in the for-loop is used outside the for-loop scope|  \n|[Compiler Warning (level 3) C4290](../../error-messages/compiler-warnings/compiler-warning-level-3-c4290.md)|C++ exception specification ignored except to indicate a function is not __declspec(nothrow)|  \n|[Compiler Warning (level 1) C4291](../../error-messages/compiler-warnings/compiler-warning-level-1-c4291.md)|'declaration': no matching operator delete found; memory will not be freed if initialization throws an exception|  \n|[Compiler Warning (level 1) C4293](../../error-messages/compiler-warnings/compiler-warning-level-1-c4293.md)|'shift_operator': shift count negative or too big, undefined behavior|  \n|[Compiler Warning (level 4) C4295](../../error-messages/compiler-warnings/compiler-warning-level-4-c4295.md)|'array': array is too small to include a terminating null character|  \n|[Compiler Warning (level 4) C4296](../../error-messages/compiler-warnings/compiler-warning-level-4-c4296.md)|'operator': expression is always 'boolean_value'|  \n|[Compiler Warning (level 1) C4297](../../error-messages/compiler-warnings/compiler-warning-level-1-c4297.md)|'function': function assumed not to throw an exception but does|  \n|Compiler warning (level 4) C4298|'identifier': identifier in type library 'library' is already a macro; renaming to '__identifier'|  \n|Compiler warning (level 4) C4299|'identifier': identifier in type library 'library' is a keyword; renaming to '__identifier'|  \n|Compiler warning C4301|'derived_class::function': overriding virtual function only differs from 'base_class:function' by const/volatile qualifier|  \n|[Compiler Warning (level 2) C4302](../../error-messages/compiler-warnings/compiler-warning-level-2-c4302.md)|'conversion': truncation from 'type1' to 'type2'|  \n|Compiler warning C4303|C-style_cast' from 'type1' to 'type2' is deprecated, use static_cast, __try_cast or dynamic_cast|  \n|[Compiler Warning (level 1) C4305](../../error-messages/compiler-warnings/compiler-warning-level-1-c4305.md)|'conversion': truncation from 'type1' to 'type2'|  \n|[Compiler Warning (level 3) C4306](../../error-messages/compiler-warnings/compiler-warning-level-3-c4306.md)|'conversion': conversion from 'type1' to 'type2' of greater size|  \n|[Compiler Warning (level 2) C4307](../../error-messages/compiler-warnings/compiler-warning-level-2-c4307.md)|'operator': integral constant overflow|  \n|[Compiler Warning (level 2) C4308](../../error-messages/compiler-warnings/compiler-warning-level-2-c4308.md)|negative integral constant converted to unsigned type|  \n|[Compiler Warning (level 2) C4309](../../error-messages/compiler-warnings/compiler-warning-level-2-c4309.md)|'conversion': truncation of constant value|  \n|[Compiler Warning (level 3) C4310](../../error-messages/compiler-warnings/compiler-warning-level-3-c4310.md)|cast truncates constant value|  \n|[Compiler Warning (level 1) C4311](../../error-messages/compiler-warnings/compiler-warning-level-1-c4311.md)|'variable': pointer truncation from 'type1' to 'type2'|  \n|[Compiler Warning (level 1) C4312](../../error-messages/compiler-warnings/compiler-warning-level-1-c4312.md)|'operation': conversion from 'type1' to 'type2' of greater size|  \n|[Compiler Warning (level 1) C4313](../../error-messages/compiler-warnings/compiler-warning-level-1-c4313.md)|'function': 'format_specifier' in format string conflicts with argument 'argument_number' of type 'type'|  \n|Compiler warning C4314|expected pragma parameter to be '32' or '64'|  \n|Compiler warning (level 4) C4315|'classname': 'this' pointer for member 'member' may not be aligned 'alignment' as expected by the constructor|  \n|Compiler warning (level 3) C4316|'identifier': object allocated on the heap may not be aligned 'alignment'|  \n|Compiler warning (level 1) C4317|'printf_family' : not enough arguments passed for format string|  \n|Compiler warning C4318|passing constant zero as the length to memset|  \n|[Compiler Warning (level 1) C4319](../../error-messages/compiler-warnings/compiler-warning-level-1-c4319.md)|'operator': zero extending 'type1' to 'type2' of greater size|  \n|Compiler warning (level 1) C4321|automatically generating an IID for interface '%$S'|  \n|Compiler warning (level 1) C4322|automatically generating a CLSID for class '%$S'|  \n|Compiler warning (level 1) C4323|re-using registered CLSID for class '%$S'|  \n|[Compiler Warning (level 4) C4324](../../error-messages/compiler-warnings/compiler-warning-level-4-c4324.md)|'structname': structure was padded due to __declspec(align())|  \n|[Compiler Warning (level 1) C4325](../../error-messages/compiler-warnings/compiler-warning-level-1-c4325.md)|attributes for standard section 'section' ignored|  \n|[Compiler Warning (level 1) C4326](../../error-messages/compiler-warnings/compiler-warning-level-1-c4326.md)|return type of 'function' should be 'type1' instead of 'type2'|  \n|Compiler warning C4327|'assignment': indirection alignment of LHS ('alignment1') is greater than RHS ('alignment2')|  \n|Compiler warning C4328|'function': indirection alignment of formal parameter parameter_number (parameter_alignment) is greater than the actual argument alignment (argument_alignment)|  \n|[Compiler Warning (level 1) C4329](../../error-messages/compiler-warnings/compiler-warning-level-1-c4329.md)|__declspec(align()) is ignored on enum|  \n|Compiler warning (level 1) C4330|attribute '%s' for section '%s' ignored|  \n|[Compiler Warning (level 1) C4333](../../error-messages/compiler-warnings/compiler-warning-level-1-c4333.md)|'shift_operator': right shift by too large amount, data loss|  \n|[Compiler Warning (level 3) C4334](../../error-messages/compiler-warnings/compiler-warning-level-3-c4334.md)|'shift_operator': result of 32-bit shift implicitly converted to 64 bits (was 64-bit shift intended?)|  \n|[Compiler Warning C4335](../../error-messages/compiler-warnings/compiler-warning-c4335.md)|Mac file format detected: please convert the source file to either DOS or UNIX format|  \n|[Compiler Warning (level 4) C4336](../../error-messages/compiler-warnings/compiler-warning-level-4-c4336.md)|import cross-referenced type library 'library1' before importing 'library2'|  \n|[Compiler Warning (level 4) C4337](../../error-messages/compiler-warnings/compiler-warning-level-4-c4337.md)|cross-referenced type library 'library1' in 'library2' is being automatically imported|  \n|Compiler warning (level 4) C4338|#pragma %s: standard section '%s' is used|  \n|[Compiler Warning (level 4) C4339](../../error-messages/compiler-warnings/compiler-warning-level-4-c4339.md)|'type': use of undefined type detected in 'WinRT&#124;CLR' meta-data - use of this type may lead to a runtime exception|  \n|[Compiler Warning (level 1) C4340](../../error-messages/compiler-warnings/compiler-warning-level-1-c4340.md)|'value': value wrapped from positive to negative value|  \n|[Compiler Warning (level 1) C4342](../../error-messages/compiler-warnings/compiler-warning-level-1-c4342.md)|behavior change: 'function' called, but a member operator was called in previous versions|  \n|Compiler warning (level 4) C4343|#pragma optimize(\"g\",off) overrides /Og option|  \n|[Compiler Warning (level 1) C4344](../../error-messages/compiler-warnings/compiler-warning-level-1-c4344.md)|behavior change: use of explicit template arguments results in call to 'function'|  \n|[Compiler Warning (level 1) C4346](../../error-messages/compiler-warnings/compiler-warning-level-1-c4346.md)|'name': dependent name is not a type|  \n|[Compiler Warning (level 1) C4348](../../error-messages/compiler-warnings/compiler-warning-level-1-c4348.md)|'type': redefinition of default parameter: parameter 'parameter_number'|  \n|[Compiler Warning (level 1) C4350](../../error-messages/compiler-warnings/compiler-warning-level-1-c4350.md)|behavior change: 'member1' called instead of 'member2'|  \n|Compiler warning (level 1) C4352|'%$I': intrinsic function already defined|  \n|[Compiler Warning (level 1) C4353](../../error-messages/compiler-warnings/compiler-warning-level-1-c4353.md)|nonstandard extension used: constant 0 as function expression.  Use '__noop' function intrinsic instead|  \n|[Compiler Warning C4355](../../error-messages/compiler-warnings/compiler-warning-c4355.md)Compiler warning (level 1 and level 4) C4355|'this': used in base member initializer list|  \n|[Compiler Warning (level 2) C4356](../../error-messages/compiler-warnings/compiler-warning-level-2-c4356.md)|'member': static data member cannot be initialized via derived class|  \n|[Compiler Warning (level 3) C4357](../../error-messages/compiler-warnings/compiler-warning-level-3-c4357.md)|param array argument found in formal argument list for delegate 'delegate' ignored when generating 'function'|  \n|[Compiler Warning (level 1) C4358](../../error-messages/compiler-warnings/compiler-warning-level-1-c4358.md)|'operator': return type of combined delegates is not 'void'; returned value is undefined|  \n|[Compiler Warning (level 3) C4359](../../error-messages/compiler-warnings/compiler-warning-level-3-c4359.md)|'type': Alignment specifier is less than actual alignment ('alignment'), and will be ignored.|  \n|Compiler warning (level 2) C4362|'%$S': alignment greater than 8 bytes is not supported by CLR|  \n|[Compiler Warning (level 1) C4364](../../error-messages/compiler-warnings/compiler-warning-level-1-c4364.md)|#using for assembly 'assembly' previously seen at 'location'('line_number') without as_friend attribute; as_friend not applied|  \n|[Compiler Warning (level 4) C4365](../../error-messages/compiler-warnings/compiler-warning-level-4-c4365.md)|'expression': conversion from 'type1' to 'type2', signed/unsigned mismatch|  \n|[Compiler Warning (level 4) C4366](../../error-messages/compiler-warnings/compiler-warning-level-4-c4366.md)|The result of the unary 'operator' operator may be unaligned|  \n|Compiler warning (level 3) C4367|Conversion from '%$T' to '%$T' may cause datatype misalignment exception|  \n|[Compiler Warning C4368](../../error-messages/compiler-warnings/compiler-warning-c4368.md)|cannot define 'member' as a member of managed 'type': mixed types are not supported|  \n|[Compiler Warning (level 1) C4369](../../error-messages/compiler-warnings/compiler-warning-level-1-c4369.md)|'enumerator':  enumerator value 'value' cannot be represented as 'type', value is 'new_value'|  \n|Compiler warning C4370|'classname': layout of class has changed from a previous version of the compiler due to better packing|  \n|Compiler warning (level 3) C4371|'classname': layout of class may have changed from a previous version of the compiler due to better packing of member 'member'|  \n|Compiler warning (level 3) C4373|'derived_class::function': virtual function overrides 'base_class::function', previous versions of the compiler did not override when parameters only differed by const/volatile qualifiers|  \n|[Compiler Warning (level 1) C4374](../../error-messages/compiler-warnings/compiler-warning-level-1-c4374.md)|'function1': interface method will not be implemented by non-virtual method 'function2'|  \n|[Compiler Warning (level 1) C4375](../../error-messages/compiler-warnings/compiler-warning-level-1-c4375.md)|non-public method 'method2' does not override 'method2'|  \n|[Compiler Warning (level 1) C4376](../../error-messages/compiler-warnings/compiler-warning-level-1-c4376.md)|access specifier 'old_specifier:' is no longer supported: please use 'new_specifier:' instead|  \n|[Compiler Warning (level 1) C4377](../../error-messages/compiler-warnings/compiler-warning-level-1-c4377.md)|native types are private by default; -d1PrivateNativeTypes is deprecated|  \n|[Compiler Warning (level 1) C4378](../../error-messages/compiler-warnings/compiler-warning-level-1-c4378.md)|Must obtain function pointers to run initializers; consider System::ModuleHandle::ResolveMethodHandle|  \n|[Compiler Warning (level 1) C4379](../../error-messages/compiler-warnings/compiler-warning-level-1-c4379.md)|Version 'version_number' of the common language runtime is not supported by this compiler. Using this version may cause unexpected results|  \n|Compiler warning (level 1) C4380|'%$S': A default constructor cannot be deprecated|  \n|[Compiler Warning (level 1) C4381](../../error-messages/compiler-warnings/compiler-warning-level-1-c4381.md)|'function1': interface method will not be implemented by non-public method 'function2'|  \n|[Compiler Warning (level 1) C4382](../../error-messages/compiler-warnings/compiler-warning-level-1-c4382.md)|throwing 'type': a type with __clrcall destructor or copy constructor can only be caught in /clr:pure module|  \n|[Compiler Warning (level 1) C4383](../../error-messages/compiler-warnings/compiler-warning-level-1-c4383.md)|'instance_dereference_operator': the meaning of dereferencing a handle can change, when a user-defined 'instance_dereference_operator' operator exists; write the operator as a static function to be explicit about the operand|  \n|[Compiler Warning (level 1) C4384](../../error-messages/compiler-warnings/compiler-warning-level-1-c4384.md)|#pragma 'make_public' should only be used at global scope|  \n|Compiler warning (level 3) C4387|'%s': was considered|  \n|Compiler warning (level 4) C4388|'%$L': signed/unsigned mismatch|  \n|[Compiler Warning (level 4) C4389](../../error-messages/compiler-warnings/compiler-warning-level-4-c4389.md)|'operator': signed/unsigned mismatch|  \n|[Compiler Warning (level 3) C4390](../../error-messages/compiler-warnings/compiler-warning-level-3-c4390.md)|';': empty controlled statement found; is this the intent?|  \n|[Compiler Warning (level 1) C4391](../../error-messages/compiler-warnings/compiler-warning-level-1-c4391.md)|'function_signature': incorrect return type for intrinsic function, expected 'type'|  \n|[Compiler Warning (level 1) C4392](../../error-messages/compiler-warnings/compiler-warning-level-1-c4392.md)|'function_signature': incorrect number of arguments for intrinsic function, expected 'argument_count' arguments|  \n|[Compiler Warning (level 1) C4393](../../error-messages/compiler-warnings/compiler-warning-level-1-c4393.md)|'variable': const has no effect on 'literal' data member; ignored|  \n|[Compiler Warning C4394](../../error-messages/compiler-warnings/compiler-warning-c4394.md)|'function': per-appdomain symbol should not be marked with __declspec('dllexport')|  \n|[Compiler Warning (level 1) C4395](../../error-messages/compiler-warnings/compiler-warning-level-1-c4395.md)|'function': member function will be invoked on a copy of the initonly data member 'member'|  \n|Compiler warning (level 2) C4396|'%$S': the inline specifier cannot be used when a friend declaration refers to a specialization of a function template|  \n|[Compiler Warning (level 1) C4397](../../error-messages/compiler-warnings/compiler-warning-level-1-c4397.md)|DefaultCharSetAttribute is ignored|  \n|[Compiler Warning (level 3) C4398](../../error-messages/compiler-warnings/compiler-warning-level-3-c4398.md)|'variable': per-process global object might not work correctly with multiple appdomains; consider using __declspec(appdomain)|  \n|[Compiler Warning (level 1) C4399](../../error-messages/compiler-warnings/compiler-warning-level-1-c4399.md)|'symbol': per-process symbol should not be marked with __declspec('dllimport') when compiled with /clr:pure|"}