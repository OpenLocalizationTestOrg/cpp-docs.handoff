{"nodes":[{"pos":[12,53],"content":"CMFCAutoHideButton Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"CMFCAutoHideButton Class | Microsoft Docs","pos":[0,41]}]},{"content":"CMFCAutoHideButton Class","pos":[628,652]},{"pos":[653,780],"content":"A button that displays or hides a <bpt id=\"p1\">[</bpt>CDockablePane Class<ept id=\"p1\">](../../mfc/reference/cdockablepane-class.md)</ept> that is configured to hide.","source":"A button that displays or hides a [CDockablePane Class](../../mfc/reference/cdockablepane-class.md) that is configured to hide."},{"content":"Syntax","pos":[789,795]},{"content":"Members","pos":[863,870]},{"content":"Public Methods","pos":[880,894]},{"content":"Name","pos":[901,905]},{"content":"Description","pos":[906,917]},{"content":"CMFCAutoHideButton::BringToTop","pos":[956,986]},{"content":"CMFCAutoHideButton::Create","pos":[1027,1053]},{"content":"Creates and initializes the auto-hide button.","pos":[1084,1129]},{"content":"CMFCAutoHideButton::GetAlignment","pos":[1135,1167]},{"content":"Retrieves the alignment of the auto-hide button.","pos":[1204,1252]},{"content":"CMFCAutoHideButton::GetAutoHideWindow","pos":[1258,1295]},{"pos":[1337,1453],"content":"Returns the <bpt id=\"p1\">[</bpt>CDockablePane<ept id=\"p1\">](../../mfc/reference/cdockablepane-class.md)</ept> object associated with the auto-hide button.","source":"Returns the [CDockablePane](../../mfc/reference/cdockablepane-class.md) object associated with the auto-hide button."},{"content":"CMFCAutoHideButton::GetParentToolBar","pos":[1459,1495]},{"content":"CMFCAutoHideButton::GetRect","pos":[1542,1569]},{"content":"CMFCAutoHideButton::GetSize","pos":[1607,1634]},{"content":"Determines the size of the auto-hide button.","pos":[1666,1710]},{"content":"CMFCAutoHideButton::GetTextSize","pos":[1716,1747]},{"content":"Returns the size of the text label for the auto-hide button.","pos":[1783,1843]},{"content":"CMFCAutoHideButton::HighlightButton","pos":[1849,1884]},{"content":"Highlights auto hide button.","pos":[1924,1952]},{"content":"CMFCAutoHideButton::IsActive","pos":[1958,1986]},{"content":"Indicates whether the auto-hide button is active.","pos":[2019,2068]},{"content":"CMFCAutoHideButton::IsHighlighted","pos":[2074,2107]},{"content":"Returns highlight state of auto hide button.","pos":[2145,2189]},{"content":"CMFCAutoHideButton::IsHorizontal","pos":[2195,2227]},{"content":"Determines whether the auto-hide button is horizontal or vertical.","pos":[2264,2330]},{"content":"CMFCAutoHideButton::IsTop","pos":[2336,2361]},{"content":"CMFCAutoHideButton::IsVisible","pos":[2397,2426]},{"content":"Indicates whether the button is visible.","pos":[2460,2500]},{"content":"CMFCAutoHideButton::Move","pos":[2506,2530]},{"content":"CMFCAutoHideButton::OnDraw","pos":[2565,2591]},{"content":"The framework calls this method when it draws the auto-hide button.","pos":[2622,2689]},{"content":"CMFCAutoHideButton::OnDrawBorder","pos":[2695,2727]},{"content":"The framework calls this method when it draws the border of an auto-hide button.","pos":[2764,2844]},{"content":"CMFCAutoHideButton::OnFillBackground","pos":[2850,2886]},{"content":"The framework calls this method when it fills the background of an auto-hide button.","pos":[2927,3011]},{"content":"CMFCAutoHideButton::ReplacePane","pos":[3017,3048]},{"content":"CMFCAutoHideButton::ShowAttachedWindow","pos":[3090,3128]},{"pos":[3171,3267],"content":"Shows or hides the associated <bpt id=\"p1\">[</bpt>CDockablePane Class<ept id=\"p1\">](../../mfc/reference/cdockablepane-class.md)</ept>.","source":"Shows or hides the associated [CDockablePane Class](../../mfc/reference/cdockablepane-class.md)."},{"content":"CMFCAutoHideButton::ShowButton","pos":[3273,3303]},{"content":"Shows or hides the auto-hide button.","pos":[3338,3374]},{"content":"CMFCAutoHideButton::UnSetAutoHideMode","pos":[3380,3417]},{"content":"Remarks","pos":[3469,3476]},{"content":"On creation, the <ph id=\"ph1\">`CMFCAutoHideButton`</ph> object is attached to a <bpt id=\"p1\">[</bpt>CDockablePane Class<ept id=\"p1\">](../../mfc/reference/cdockablepane-class.md)</ept>.","pos":[3480,3608],"source":"On creation, the `CMFCAutoHideButton` object is attached to a [CDockablePane Class](../../mfc/reference/cdockablepane-class.md)."},{"content":"The <ph id=\"ph1\">`CDockablePane`</ph> object is hidden or displayed as the user interacts with the <ph id=\"ph2\">`CMFCAutoHideButton`</ph> object.","pos":[3609,3718],"source":" The `CDockablePane` object is hidden or displayed as the user interacts with the `CMFCAutoHideButton` object."},{"content":"By default, the framework automatically creates a <ph id=\"ph1\">`CMFCAutoHideButton`</ph> when the user turns on auto-hide.","pos":[3725,3829],"source":"By default, the framework automatically creates a `CMFCAutoHideButton` when the user turns on auto-hide."},{"content":"The framework can create an element of a custom UI class instead of the <ph id=\"ph1\">`CMFCAutoHideButton`</ph> class.","pos":[3830,3929],"source":" The framework can create an element of a custom UI class instead of the `CMFCAutoHideButton` class."},{"content":"To specify which custom UI class the framework should use, set the static member variable <ph id=\"ph1\">`CMFCAutoHideBar::m_pAutoHideButtonRTS`</ph> equal to the custom UI class.","pos":[3930,4089],"source":" To specify which custom UI class the framework should use, set the static member variable `CMFCAutoHideBar::m_pAutoHideButtonRTS` equal to the custom UI class."},{"content":"By default, this variable is set to <ph id=\"ph1\">`CMFCAutoHideButton`</ph>.","pos":[4090,4147],"source":" By default, this variable is set to `CMFCAutoHideButton`."},{"content":"Example","pos":[4156,4163]},{"content":"The following example demonstrates how to construct a <ph id=\"ph1\">`CMFCAutoHideButton`</ph> object and use various methods in the <ph id=\"ph2\">`CMFCAutoHideButton`</ph> class.","pos":[4167,4307],"source":"The following example demonstrates how to construct a `CMFCAutoHideButton` object and use various methods in the `CMFCAutoHideButton` class."},{"content":"The example shows how to initialize a <ph id=\"ph1\">`CMFCAutoHideButton`</ph> object by using its <ph id=\"ph2\">`Create`</ph> method, show the associated <ph id=\"ph3\">`CDockablePane`</ph> class, and show the auto-hide button.","pos":[4308,4477],"source":" The example shows how to initialize a `CMFCAutoHideButton` object by using its `Create` method, show the associated `CDockablePane` class, and show the auto-hide button."},{"pos":[4495,4515],"content":"NVC_MFC_RibbonApp#32"},{"content":"Inheritance Hierarchy","pos":[4594,4615]},{"content":"CObject","pos":[4620,4627]},{"content":"CMFCAutoHideButton","pos":[4674,4692]},{"content":"Requirements","pos":[4751,4763]},{"pos":[4767,4798],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> afxautohidebutton.h","source":"**Header:** afxautohidebutton.h"},{"pos":[4855,4885],"content":"CMFCAutoHideButton::BringToTop"},{"content":"Remarks","pos":[5032,5039]},{"pos":[5092,5118],"content":"CMFCAutoHideButton::Create"},{"content":"Creates and initializes an auto-hide button.","pos":[5122,5166]},{"content":"Parameters","pos":[5306,5316]},{"content":"[in]","pos":[5320,5324]},{"content":"A pointer to the parent toolbar.","pos":[5341,5373]},{"content":"[in]","pos":[5380,5384]},{"content":"A pointer to a <bpt id=\"p1\">[</bpt>CDockablePane<ept id=\"p1\">](../../mfc/reference/cdockablepane-class.md)</ept> object.","pos":[5403,5485],"source":" A pointer to a [CDockablePane](../../mfc/reference/cdockablepane-class.md) object."},{"content":"This auto-hide button hides and shows that <ph id=\"ph1\">`CDockablePane`</ph>.","pos":[5486,5545],"source":" This auto-hide button hides and shows that `CDockablePane`."},{"content":"[in]","pos":[5552,5556]},{"content":"A value that specifies the alignment of the button with the main frame window.","pos":[5574,5652]},{"content":"Return Value","pos":[5662,5674]},{"content":"Nonzero if successful; otherwise 0.","pos":[5678,5713]},{"content":"Remarks","pos":[5723,5730]},{"content":"When you create a <bpt id=\"p1\">[</bpt>CMFCAutoHideButton<ept id=\"p1\">](../../mfc/reference/cmfcautohidebutton-class.md)</ept> object, you must associate the auto-hide button with a specific <ph id=\"ph1\">`CDockablePane`</ph>.","pos":[5734,5902],"source":"When you create a [CMFCAutoHideButton](../../mfc/reference/cmfcautohidebutton-class.md) object, you must associate the auto-hide button with a specific `CDockablePane`."},{"content":"The user can use the auto-hide button to hide and show the associated <ph id=\"ph1\">`CDockablePane`</ph>.","pos":[5903,5989],"source":" The user can use the auto-hide button to hide and show the associated `CDockablePane`."},{"content":"The <ph id=\"ph1\">`dwAlignment`</ph> parameter indicates where the auto-hide button resides in the application.","pos":[5996,6088],"source":"The `dwAlignment` parameter indicates where the auto-hide button resides in the application."},{"content":"The parameter can be any one of the following values:","pos":[6089,6142]},{"pos":[6303,6335],"content":"CMFCAutoHideButton::GetAlignment"},{"content":"Retrieves the alignment of the auto-hide button.","pos":[6339,6387]},{"content":"Return Value","pos":[6443,6455]},{"pos":[6459,6535],"content":"A <ph id=\"ph1\">`DWORD`</ph> value that contains the current alignment of the auto-hide button.","source":"A `DWORD` value that contains the current alignment of the auto-hide button."},{"content":"Remarks","pos":[6545,6552]},{"content":"The alignment of the auto-hide button indicates where the button resides on the application.","pos":[6556,6648]},{"content":"It can be any one of the following values:","pos":[6649,6691]},{"pos":[6857,6894],"content":"CMFCAutoHideButton::GetAutoHideWindow"},{"pos":[6898,7014],"content":"Returns the <bpt id=\"p1\">[</bpt>CDockablePane<ept id=\"p1\">](../../mfc/reference/cdockablepane-class.md)</ept> object associated with the auto-hide button.","source":"Returns the [CDockablePane](../../mfc/reference/cdockablepane-class.md) object associated with the auto-hide button."},{"content":"Return Value","pos":[7084,7096]},{"pos":[7100,7151],"content":"A pointer to the associated <ph id=\"ph1\">`CDockablePane`</ph> object.","source":"A pointer to the associated `CDockablePane` object."},{"content":"Remarks","pos":[7161,7168]},{"pos":[7172,7341],"content":"To associate an auto-hide button with a <ph id=\"ph1\">`CDockablePane`</ph>, pass the <ph id=\"ph2\">`CDockablePane`</ph> as a parameter to the <bpt id=\"p1\">[</bpt>CMFCAutoHideButton::Create<ept id=\"p1\">](#cmfcautohidebutton__create)</ept> method.","source":"To associate an auto-hide button with a `CDockablePane`, pass the `CDockablePane` as a parameter to the [CMFCAutoHideButton::Create](#cmfcautohidebutton__create) method."},{"pos":[7404,7440],"content":"CMFCAutoHideButton::GetParentToolBar"},{"content":"Return Value","pos":[7605,7617]},{"content":"Remarks","pos":[7627,7634]},{"pos":[7688,7715],"content":"CMFCAutoHideButton::GetRect"},{"content":"Return Value","pos":[7869,7881]},{"content":"Remarks","pos":[7891,7898]},{"pos":[7952,7979],"content":"CMFCAutoHideButton::GetSize"},{"content":"Determines the size of the auto-hide button.","pos":[7983,8027]},{"content":"Return Value","pos":[8078,8090]},{"pos":[8094,8141],"content":"A <ph id=\"ph1\">`CSize`</ph> object that contains the button size.","source":"A `CSize` object that contains the button size."},{"content":"Remarks","pos":[8151,8158]},{"content":"The calculated size includes the size of the border of the auto-hide button.","pos":[8162,8238]},{"pos":[8296,8327],"content":"CMFCAutoHideButton::GetTextSize"},{"content":"Returns the size of the text label for the auto-hide button.","pos":[8331,8391]},{"content":"Return Value","pos":[8454,8466]},{"pos":[8470,8594],"content":"A <bpt id=\"p1\">[</bpt>CSize<ept id=\"p1\">](../../atl-mfc-shared/reference/csize-class.md)</ept> object that contains the size of the text for the auto-hide button.","source":"A [CSize](../../atl-mfc-shared/reference/csize-class.md) object that contains the size of the text for the auto-hide button."},{"pos":[8649,8677],"content":"CMFCAutoHideButton::IsActive"},{"content":"Indicates whether the auto-hide button is active.","pos":[8681,8730]},{"content":"Return Value","pos":[8781,8793]},{"pos":[8804,8857],"content":"if the auto-hide button is active; <ph id=\"ph1\">`FALSE`</ph> otherwise.","source":" if the auto-hide button is active; `FALSE` otherwise."},{"content":"Remarks","pos":[8867,8874]},{"pos":[8878,9010],"content":"An auto-hide button is active when the associated <bpt id=\"p1\">[</bpt>CDockablePane Class<ept id=\"p1\">](../../mfc/reference/cdockablepane-class.md)</ept> window is shown.","source":"An auto-hide button is active when the associated [CDockablePane Class](../../mfc/reference/cdockablepane-class.md) window is shown."},{"pos":[9069,9101],"content":"CMFCAutoHideButton::IsHorizontal"},{"content":"Determines whether the auto-hide button is horizontal or vertical.","pos":[9105,9171]},{"content":"Return Value","pos":[9226,9238]},{"content":"Nonzero if the button is horizontal; 0 otherwise.","pos":[9242,9291]},{"content":"Remarks","pos":[9301,9308]},{"content":"The framework sets the orientation of a <bpt id=\"p1\">[</bpt>CMFCAutoHideButton<ept id=\"p1\">](../../mfc/reference/cmfcautohidebutton-class.md)</ept> object when you create it.","pos":[9312,9448],"source":"The framework sets the orientation of a [CMFCAutoHideButton](../../mfc/reference/cmfcautohidebutton-class.md) object when you create it."},{"content":"You can control the orientation by using the <ph id=\"ph1\">`dwAlignment`</ph> parameter in the <bpt id=\"p1\">[</bpt>CMFCAutoHideButton::Create<ept id=\"p1\">](#cmfcautohidebutton__create)</ept> method.","pos":[9450,9591],"source":"  You can control the orientation by using the `dwAlignment` parameter in the [CMFCAutoHideButton::Create](#cmfcautohidebutton__create) method."},{"pos":[9643,9668],"content":"CMFCAutoHideButton::IsTop"},{"content":"Return Value","pos":[9819,9831]},{"content":"Remarks","pos":[9841,9848]},{"pos":[9904,9933],"content":"CMFCAutoHideButton::IsVisible"},{"content":"Indicates whether the auto-hide button is visible.","pos":[9937,9987]},{"content":"Return Value","pos":[10047,10059]},{"pos":[10070,10114],"content":"if the button is visible; <ph id=\"ph1\">`FALSE`</ph> otherwise.","source":" if the button is visible; `FALSE` otherwise."},{"pos":[10167,10193],"content":"CMFCAutoHideButton::OnDraw"},{"content":"The framework calls this method when it draws the auto-hide button.","pos":[10197,10264]},{"content":"Parameters","pos":[10320,10330]},{"content":"[in]","pos":[10334,10338]},{"content":"A pointer to a device context.","pos":[10348,10378]},{"content":"Remarks","pos":[10388,10395]},{"content":"If you want to customize the appearance of auto-hide buttons in your application, create a new class derived from the <bpt id=\"p1\">[</bpt>CMFCAutoHideButton Class<ept id=\"p1\">](../../mfc/reference/cmfcautohidebutton-class.md)</ept>.","pos":[10399,10593],"source":"If you want to customize the appearance of auto-hide buttons in your application, create a new class derived from the [CMFCAutoHideButton Class](../../mfc/reference/cmfcautohidebutton-class.md)."},{"content":"In your derived class, override this method.","pos":[10594,10638]},{"pos":[10697,10729],"content":"CMFCAutoHideButton::OnDrawBorder"},{"content":"The framework calls this method when it draws the border of an auto-hide button.","pos":[10733,10813]},{"content":"Parameters","pos":[10932,10942]},{"content":"[in]","pos":[10946,10950]},{"content":"A pointer to a device context.","pos":[10960,10990]},{"content":"[in]","pos":[10997,11001]},{"content":"The bounding rectangle of the auto-hide button.","pos":[11018,11065]},{"content":"[in]","pos":[11072,11076]},{"content":"The border thickness for each side of the auto-hide button.","pos":[11097,11156]},{"content":"Remarks","pos":[11166,11173]},{"content":"If you want to customize the border of each auto-hide button in your application, create a new class derived from the <bpt id=\"p1\">[</bpt>CMFCAutoHideButton Class<ept id=\"p1\">](../../mfc/reference/cmfcautohidebutton-class.md)</ept>.","pos":[11177,11371],"source":"If you want to customize the border of each auto-hide button in your application, create a new class derived from the [CMFCAutoHideButton Class](../../mfc/reference/cmfcautohidebutton-class.md)."},{"content":"In your derived class, override this method.","pos":[11372,11416]},{"pos":[11479,11515],"content":"CMFCAutoHideButton::OnFillBackground"},{"content":"The framework calls this method when it fills the background of an auto-hide button.","pos":[11519,11603]},{"content":"Parameters","pos":[11692,11702]},{"content":"[in]","pos":[11706,11710]},{"content":"A pointer to a device context.","pos":[11720,11750]},{"content":"[in]","pos":[11757,11761]},{"content":"The bounding rectangle of the auto-hide button.","pos":[11772,11819]},{"content":"Remarks","pos":[11829,11836]},{"content":"If you want to customize the background for auto-hide buttons in your application, create a new class derived from the <bpt id=\"p1\">[</bpt>CMFCAutoHideButton Class<ept id=\"p1\">](../../mfc/reference/cmfcautohidebutton-class.md)</ept>.","pos":[11840,12035],"source":"If you want to customize the background for auto-hide buttons in your application, create a new class derived from the [CMFCAutoHideButton Class](../../mfc/reference/cmfcautohidebutton-class.md)."},{"content":"In your derived class, override this method.","pos":[12036,12080]},{"pos":[12145,12183],"content":"CMFCAutoHideButton::ShowAttachedWindow"},{"pos":[12187,12283],"content":"Shows or hides the associated <bpt id=\"p1\">[</bpt>CDockablePane Class<ept id=\"p1\">](../../mfc/reference/cdockablepane-class.md)</ept>.","source":"Shows or hides the associated [CDockablePane Class](../../mfc/reference/cdockablepane-class.md)."},{"content":"Parameters","pos":[12345,12355]},{"content":"[in]","pos":[12359,12363]},{"content":"A Boolean that specifies whether this method shows the attached <ph id=\"ph1\">`CDockablePane`</ph>.","pos":[12375,12455],"source":" A Boolean that specifies whether this method shows the attached `CDockablePane`."},{"pos":[12512,12542],"content":"CMFCAutoHideButton::ShowButton"},{"content":"Shows or hides the auto-hide button.","pos":[12546,12582]},{"content":"Parameters","pos":[12644,12654]},{"content":"[in]","pos":[12658,12662]},{"content":"A Boolean that specifies whether to show the auto-hide button.","pos":[12674,12736]},{"pos":[12787,12811],"content":"CMFCAutoHideButton::Move"},{"content":"Parameters","pos":[12963,12973]},{"pos":[12977,12981],"content":"[in]"},{"content":"Remarks","pos":[13001,13008]},{"pos":[13066,13097],"content":"CMFCAutoHideButton::ReplacePane"},{"content":"Parameters","pos":[13267,13277]},{"pos":[13281,13285],"content":"[in]"},{"content":"Remarks","pos":[13305,13312]},{"pos":[13376,13413],"content":"CMFCAutoHideButton::UnSetAutoHideMode"},{"content":"Disable auto-hide mode.","pos":[13417,13440]},{"content":"Parameters","pos":[13530,13540]},{"content":"[in]","pos":[13544,13548]},{"content":"A pointer to the first bar in the group.","pos":[13571,13611]},{"content":"Remarks","pos":[13621,13628]},{"pos":[13690,13725],"content":"CMFCAutoHideButton::HighlightButton"},{"content":"Highlights the auto hide button.","pos":[13729,13761]},{"content":"Parameters","pos":[13833,13843]},{"content":"Specifies the new auto hide button state.","pos":[13863,13904]},{"content":"indicates the button is highlighted, <ph id=\"ph1\">`FALSE`</ph> indicates the button is not highlighted.","pos":[13912,13997],"source":" indicates the button is highlighted, `FALSE` indicates the button is not highlighted."},{"content":"Remarks","pos":[14007,14014]},{"pos":[14074,14107],"content":"CMFCAutoHideButton::IsHighlighted"},{"content":"Returns the highlight state of the auto hide button.","pos":[14111,14163]},{"content":"Return Value","pos":[14227,14239]},{"pos":[14243,14316],"content":"Returns <ph id=\"ph1\">`TRUE`</ph> if the auto hide button is highlighted; otherwise <ph id=\"ph2\">`FALSE`</ph>.","source":"Returns `TRUE` if the auto hide button is highlighted; otherwise `FALSE`."},{"content":"Remarks","pos":[14326,14333]},{"content":"See Also","pos":[14342,14350]},{"content":"Hierarchy Chart","pos":[14355,14370]},{"content":"Classes","pos":[14407,14414]},{"content":"CMFCAutoHideBar Class","pos":[14457,14478]},{"content":"CAutoHideDockSite Class","pos":[14531,14554]}],"content":"---\ntitle: \"CMFCAutoHideButton Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"CMFCAutoHideButton\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"CMFCAutoHideButton class\"\nms.assetid: c80e6b8b-25ca-4d12-9d27-457731028ab0\ncaps.latest.revision: 33\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# CMFCAutoHideButton Class\nA button that displays or hides a [CDockablePane Class](../../mfc/reference/cdockablepane-class.md) that is configured to hide.  \n  \n## Syntax  \n  \n```  \nclass CMFCAutoHideButton : public CObject  \n```  \n  \n## Members  \n  \n### Public Methods  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CMFCAutoHideButton::BringToTop](#cmfcautohidebutton__bringtotop)||  \n|[CMFCAutoHideButton::Create](#cmfcautohidebutton__create)|Creates and initializes the auto-hide button.|  \n|[CMFCAutoHideButton::GetAlignment](#cmfcautohidebutton__getalignment)|Retrieves the alignment of the auto-hide button.|  \n|[CMFCAutoHideButton::GetAutoHideWindow](#cmfcautohidebutton__getautohidewindow)|Returns the [CDockablePane](../../mfc/reference/cdockablepane-class.md) object associated with the auto-hide button.|  \n|[CMFCAutoHideButton::GetParentToolBar](#cmfcautohidebutton__getparenttoolbar)||  \n|[CMFCAutoHideButton::GetRect](#cmfcautohidebutton__getrect)||  \n|[CMFCAutoHideButton::GetSize](#cmfcautohidebutton__getsize)|Determines the size of the auto-hide button.|  \n|[CMFCAutoHideButton::GetTextSize](#cmfcautohidebutton__gettextsize)|Returns the size of the text label for the auto-hide button.|  \n|[CMFCAutoHideButton::HighlightButton](#cmfcautohidebutton__highlightbutton)|Highlights auto hide button.|  \n|[CMFCAutoHideButton::IsActive](#cmfcautohidebutton__isactive)|Indicates whether the auto-hide button is active.|  \n|[CMFCAutoHideButton::IsHighlighted](#cmfcautohidebutton__ishighlighted)|Returns highlight state of auto hide button.|  \n|[CMFCAutoHideButton::IsHorizontal](#cmfcautohidebutton__ishorizontal)|Determines whether the auto-hide button is horizontal or vertical.|  \n|[CMFCAutoHideButton::IsTop](#cmfcautohidebutton__istop)||  \n|[CMFCAutoHideButton::IsVisible](#cmfcautohidebutton__isvisible)|Indicates whether the button is visible.|  \n|[CMFCAutoHideButton::Move](#cmfcautohidebutton__move)||  \n|[CMFCAutoHideButton::OnDraw](#cmfcautohidebutton__ondraw)|The framework calls this method when it draws the auto-hide button.|  \n|[CMFCAutoHideButton::OnDrawBorder](#cmfcautohidebutton__ondrawborder)|The framework calls this method when it draws the border of an auto-hide button.|  \n|[CMFCAutoHideButton::OnFillBackground](#cmfcautohidebutton__onfillbackground)|The framework calls this method when it fills the background of an auto-hide button.|  \n|[CMFCAutoHideButton::ReplacePane](#cmfcautohidebutton__replacepane)||  \n|[CMFCAutoHideButton::ShowAttachedWindow](#cmfcautohidebutton__showattachedwindow)|Shows or hides the associated [CDockablePane Class](../../mfc/reference/cdockablepane-class.md).|  \n|[CMFCAutoHideButton::ShowButton](#cmfcautohidebutton__showbutton)|Shows or hides the auto-hide button.|  \n|[CMFCAutoHideButton::UnSetAutoHideMode](#cmfcautohidebutton__unsetautohidemode)||  \n  \n## Remarks  \n On creation, the `CMFCAutoHideButton` object is attached to a [CDockablePane Class](../../mfc/reference/cdockablepane-class.md). The `CDockablePane` object is hidden or displayed as the user interacts with the `CMFCAutoHideButton` object.  \n  \n By default, the framework automatically creates a `CMFCAutoHideButton` when the user turns on auto-hide. The framework can create an element of a custom UI class instead of the `CMFCAutoHideButton` class. To specify which custom UI class the framework should use, set the static member variable `CMFCAutoHideBar::m_pAutoHideButtonRTS` equal to the custom UI class. By default, this variable is set to `CMFCAutoHideButton`.  \n  \n## Example  \n The following example demonstrates how to construct a `CMFCAutoHideButton` object and use various methods in the `CMFCAutoHideButton` class. The example shows how to initialize a `CMFCAutoHideButton` object by using its `Create` method, show the associated `CDockablePane` class, and show the auto-hide button.  \n  \n [!code-cpp[NVC_MFC_RibbonApp#32](../../mfc/reference/codesnippet/cpp/cmfcautohidebutton-class_1.cpp)]  \n  \n## Inheritance Hierarchy  \n [CObject](../../mfc/reference/cobject-class.md)  \n  \n [CMFCAutoHideButton](../../mfc/reference/cmfcautohidebutton-class.md)  \n  \n## Requirements  \n **Header:** afxautohidebutton.h  \n  \n##  <a name=\"cmfcautohidebutton__bringtotop\"></a>  CMFCAutoHideButton::BringToTop  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvoid BringToTop();\n```  \n  \n### Remarks  \n  \n##  <a name=\"cmfcautohidebutton__create\"></a>  CMFCAutoHideButton::Create  \n Creates and initializes an auto-hide button.  \n  \n```  \nvirtual BOOL Create(\n    CMFCAutoHideBar* pParentBar,  \n    CDockablePane* pAutoHideWnd,  \n    DWORD dwAlignment);\n```  \n  \n### Parameters  \n [in] `pParentBar`  \n A pointer to the parent toolbar.  \n  \n [in] `pAutoHideWnd`  \n A pointer to a [CDockablePane](../../mfc/reference/cdockablepane-class.md) object. This auto-hide button hides and shows that `CDockablePane`.  \n  \n [in] `dwAlignment`  \n A value that specifies the alignment of the button with the main frame window.  \n  \n### Return Value  \n Nonzero if successful; otherwise 0.  \n  \n### Remarks  \n When you create a [CMFCAutoHideButton](../../mfc/reference/cmfcautohidebutton-class.md) object, you must associate the auto-hide button with a specific `CDockablePane`. The user can use the auto-hide button to hide and show the associated `CDockablePane`.  \n  \n The `dwAlignment` parameter indicates where the auto-hide button resides in the application. The parameter can be any one of the following values:  \n  \n- `CBRS_ALIGN_LEFT`  \n  \n- `CBRS_ALIGN_RIGHT`  \n  \n- `CBRS_ALIGN_TOP`  \n  \n- `CBRS_ALIGN_BOTTOM`  \n  \n##  <a name=\"cmfcautohidebutton__getalignment\"></a>  CMFCAutoHideButton::GetAlignment  \n Retrieves the alignment of the auto-hide button.  \n  \n```  \nDWORD GetAlignment() const;\n\n \n```  \n  \n### Return Value  \n A `DWORD` value that contains the current alignment of the auto-hide button.  \n  \n### Remarks  \n The alignment of the auto-hide button indicates where the button resides on the application. It can be any one of the following values:  \n  \n- `CBRS_ALIGN_LEFT`  \n  \n- `CBRS_ALIGN_RIGHT`  \n  \n- `CRBS_ALIGN_TOP`  \n  \n- `CBRS_ALIGN_BOTTOM`  \n  \n##  <a name=\"cmfcautohidebutton__getautohidewindow\"></a>  CMFCAutoHideButton::GetAutoHideWindow  \n Returns the [CDockablePane](../../mfc/reference/cdockablepane-class.md) object associated with the auto-hide button.  \n  \n```  \nCDockablePane* GetAutoHideWindow() const;\n\n \n```  \n  \n### Return Value  \n A pointer to the associated `CDockablePane` object.  \n  \n### Remarks  \n To associate an auto-hide button with a `CDockablePane`, pass the `CDockablePane` as a parameter to the [CMFCAutoHideButton::Create](#cmfcautohidebutton__create) method.  \n  \n##  <a name=\"cmfcautohidebutton__getparenttoolbar\"></a>  CMFCAutoHideButton::GetParentToolBar  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nCMFCAutoHideBar* GetParentToolBar();\n```  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cmfcautohidebutton__getrect\"></a>  CMFCAutoHideButton::GetRect  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nCRect GetRect() const;\n\n \n```  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cmfcautohidebutton__getsize\"></a>  CMFCAutoHideButton::GetSize  \n Determines the size of the auto-hide button.  \n  \n```  \nCSize GetSize() const;\n\n \n```  \n  \n### Return Value  \n A `CSize` object that contains the button size.  \n  \n### Remarks  \n The calculated size includes the size of the border of the auto-hide button.  \n  \n##  <a name=\"cmfcautohidebutton__gettextsize\"></a>  CMFCAutoHideButton::GetTextSize  \n Returns the size of the text label for the auto-hide button.  \n  \n```  \nvirtual CSize GetTextSize() const;\n\n \n```  \n  \n### Return Value  \n A [CSize](../../atl-mfc-shared/reference/csize-class.md) object that contains the size of the text for the auto-hide button.  \n  \n##  <a name=\"cmfcautohidebutton__isactive\"></a>  CMFCAutoHideButton::IsActive  \n Indicates whether the auto-hide button is active.  \n  \n```  \nBOOL IsActive() const;\n\n \n```  \n  \n### Return Value  \n `TRUE` if the auto-hide button is active; `FALSE` otherwise.  \n  \n### Remarks  \n An auto-hide button is active when the associated [CDockablePane Class](../../mfc/reference/cdockablepane-class.md) window is shown.  \n  \n##  <a name=\"cmfcautohidebutton__ishorizontal\"></a>  CMFCAutoHideButton::IsHorizontal  \n Determines whether the auto-hide button is horizontal or vertical.  \n  \n```  \nBOOL IsHorizontal() const;\n\n \n```  \n  \n### Return Value  \n Nonzero if the button is horizontal; 0 otherwise.  \n  \n### Remarks  \n The framework sets the orientation of a [CMFCAutoHideButton](../../mfc/reference/cmfcautohidebutton-class.md) object when you create it.  You can control the orientation by using the `dwAlignment` parameter in the [CMFCAutoHideButton::Create](#cmfcautohidebutton__create) method.  \n  \n##  <a name=\"cmfcautohidebutton__istop\"></a>  CMFCAutoHideButton::IsTop  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nBOOL IsTop() const;\n\n \n```  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cmfcautohidebutton__isvisible\"></a>  CMFCAutoHideButton::IsVisible  \n Indicates whether the auto-hide button is visible.  \n  \n```  \nvirtual BOOL IsVisible() const;\n\n \n```  \n  \n### Return Value  \n `TRUE` if the button is visible; `FALSE` otherwise.  \n  \n##  <a name=\"cmfcautohidebutton__ondraw\"></a>  CMFCAutoHideButton::OnDraw  \n The framework calls this method when it draws the auto-hide button.  \n  \n```  \nvirtual void OnDraw(CDC* pDC);\n```  \n  \n### Parameters  \n [in] `pDC`  \n A pointer to a device context.  \n  \n### Remarks  \n If you want to customize the appearance of auto-hide buttons in your application, create a new class derived from the [CMFCAutoHideButton Class](../../mfc/reference/cmfcautohidebutton-class.md). In your derived class, override this method.  \n  \n##  <a name=\"cmfcautohidebutton__ondrawborder\"></a>  CMFCAutoHideButton::OnDrawBorder  \n The framework calls this method when it draws the border of an auto-hide button.  \n  \n```  \nvirtual void OnDrawBorder(\n    CDC* pDC,  \n    CRect rectBounds,  \n    CRect rectBorderSize);\n```  \n  \n### Parameters  \n [in] `pDC`  \n A pointer to a device context.  \n  \n [in] `rectBounds`  \n The bounding rectangle of the auto-hide button.  \n  \n [in] `rectBorderSize`  \n The border thickness for each side of the auto-hide button.  \n  \n### Remarks  \n If you want to customize the border of each auto-hide button in your application, create a new class derived from the [CMFCAutoHideButton Class](../../mfc/reference/cmfcautohidebutton-class.md). In your derived class, override this method.  \n  \n##  <a name=\"cmfcautohidebutton__onfillbackground\"></a>  CMFCAutoHideButton::OnFillBackground  \n The framework calls this method when it fills the background of an auto-hide button.  \n  \n```  \nvirtual void OnFillBackground(\n    CDC* pDC,  \n    CRect rect);\n```  \n  \n### Parameters  \n [in] `pDC`  \n A pointer to a device context.  \n  \n [in] `rect`  \n The bounding rectangle of the auto-hide button.  \n  \n### Remarks  \n If you want to customize the background for auto-hide buttons in your application, create a new class derived from the [CMFCAutoHideButton Class](../../mfc/reference/cmfcautohidebutton-class.md). In your derived class, override this method.  \n  \n##  <a name=\"cmfcautohidebutton__showattachedwindow\"></a>  CMFCAutoHideButton::ShowAttachedWindow  \n Shows or hides the associated [CDockablePane Class](../../mfc/reference/cdockablepane-class.md).  \n  \n```  \nvoid ShowAttachedWindow(BOOL bShow);\n```  \n  \n### Parameters  \n [in] `bShow`  \n A Boolean that specifies whether this method shows the attached `CDockablePane`.  \n  \n##  <a name=\"cmfcautohidebutton__showbutton\"></a>  CMFCAutoHideButton::ShowButton  \n Shows or hides the auto-hide button.  \n  \n```  \nvirtual void ShowButton(BOOL bShow);\n```  \n  \n### Parameters  \n [in] `bShow`  \n A Boolean that specifies whether to show the auto-hide button.  \n  \n##  <a name=\"cmfcautohidebutton__move\"></a>  CMFCAutoHideButton::Move  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvoid Move(int nOffset);\n```  \n  \n### Parameters  \n [in] `nOffset`  \n  \n### Remarks  \n  \n##  <a name=\"cmfcautohidebutton__replacepane\"></a>  CMFCAutoHideButton::ReplacePane  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvoid ReplacePane(CDockablePane* pNewBar);\n```  \n  \n### Parameters  \n [in] `pNewBar`  \n  \n### Remarks  \n  \n##  <a name=\"cmfcautohidebutton__unsetautohidemode\"></a>  CMFCAutoHideButton::UnSetAutoHideMode  \n Disable auto-hide mode.  \n  \n```  \nvirtual void UnSetAutoHideMode(CDockablePane* pFirstBarInGroup);\n```  \n  \n### Parameters  \n [in] `pFirstBarInGroup`  \n A pointer to the first bar in the group.  \n  \n### Remarks  \n  \n##  <a name=\"cmfcautohidebutton__highlightbutton\"></a>  CMFCAutoHideButton::HighlightButton  \n Highlights the auto hide button.  \n  \n```  \nvirtual void HighlightButton(BOOL bHighlight);\n```  \n  \n### Parameters  \n `bHighlight`  \n Specifies the new auto hide button state. `TRUE` indicates the button is highlighted, `FALSE` indicates the button is not highlighted.  \n  \n### Remarks  \n  \n##  <a name=\"cmfcautohidebutton__ishighlighted\"></a>  CMFCAutoHideButton::IsHighlighted  \n Returns the highlight state of the auto hide button.  \n  \n```  \nvirtual BOOL IsHighlighted() const;\n\n \n```  \n  \n### Return Value  \n Returns `TRUE` if the auto hide button is highlighted; otherwise `FALSE`.  \n  \n### Remarks  \n  \n## See Also  \n [Hierarchy Chart](../../mfc/hierarchy-chart.md)   \n [Classes](../../mfc/reference/mfc-classes.md)   \n [CMFCAutoHideBar Class](../../mfc/reference/cmfcautohidebar-class.md)   \n [CAutoHideDockSite Class](../../mfc/reference/cautohidedocksite-class.md)\n"}