{"nodes":[{"pos":[12,68],"content":"operator&lt; (&lt;sample container&gt;) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"operator<ph id=\"ph1\">&amp;lt;</ph> (<ph id=\"ph2\">&amp;lt;</ph>sample container<ph id=\"ph3\">&amp;gt;</ph>) | Microsoft Docs","pos":[0,56],"source":"operator&lt; (&lt;sample container&gt;) | Microsoft Docs"}]},{"pos":[791,830],"content":"operator&lt; (&lt;sample container&gt;)","linkify":"operator&lt; (&lt;sample container&gt;)","nodes":[{"content":"operator<ph id=\"ph1\">&amp;lt;</ph> (<ph id=\"ph2\">&amp;lt;</ph>sample container<ph id=\"ph3\">&amp;gt;</ph>)","pos":[0,39],"source":"operator&lt; (&lt;sample container&gt;)"}]},{"pos":[833,1047],"content":"[!NOTE]\n This topic is in the Visual C++ documentation as a nonfunctional example of containers used in the Standard C++ Library. For more information, see [STL Containers](../standard-library/stl-containers.md).","leadings":["","> "],"nodes":[{"content":" This topic is in the Visual C++ documentation as a nonfunctional example of containers used in the Standard C++ Library. For more information, see [STL Containers](../standard-library/stl-containers.md).","pos":[8,212],"nodes":[{"content":"This topic is in the Visual C++ documentation as a nonfunctional example of containers used in the Standard C++ Library.","pos":[1,121]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>STL Containers<ept id=\"p1\">](../standard-library/stl-containers.md)</ept>.","pos":[122,204],"source":" For more information, see [STL Containers](../standard-library/stl-containers.md)."}]}]},{"pos":[1054,1178],"content":"Overloads <bpt id=\"p1\">**</bpt>operator&lt;<ept id=\"p1\">**</ept> to compare two objects of template class <bpt id=\"p2\">[</bpt>Container<ept id=\"p2\">](../standard-library/sample-container-class.md)</ept>.","source":"Overloads **operator<** to compare two objects of template class [Container](../standard-library/sample-container-class.md)."},{"pos":[1187,1193],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[1329,1341],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Returns <ph id=\"ph1\">`lexicographical_compare`</ph>(_<bpt id=\"p1\">*</bpt>Left<ept id=\"p1\">*</ept>.","pos":[1345,1387],"source":"Returns `lexicographical_compare`(_*Left*."},{"content":"<bpt id=\"p1\">[</bpt>begin<ept id=\"p1\">](../standard-library/container-class-begin.md)</ept>, <ph id=\"ph1\">\\_</ph><bpt id=\"p2\">*</bpt>Left<ept id=\"p2\">*</ept>.","pos":[1388,1452],"source":"[begin](../standard-library/container-class-begin.md), \\_*Left*."},{"content":"<bpt id=\"p1\">[</bpt>end<ept id=\"p1\">](../standard-library/container-class-end.md)</ept>, <ph id=\"ph1\">\\_</ph><bpt id=\"p2\">*</bpt>Right<ept id=\"p2\">*</ept><bpt id=\"p3\">**</bpt>.begin<ept id=\"p3\">**</ept>, <ph id=\"ph2\">\\_</ph><bpt id=\"p4\">*</bpt>Right<ept id=\"p4\">*</ept>.<bpt id=\"p5\">**</bpt>end<ept id=\"p5\">**</ept>).","pos":[1453,1544],"source":"[end](../standard-library/container-class-end.md), \\_*Right***.begin**, \\_*Right*.**end**)."},{"pos":[1553,1561],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"pos":[1565,1627],"content":"<bpt id=\"p1\">[</bpt><ph id=\"ph1\">\\&lt;</ph>sample container&gt;<ept id=\"p1\">](../standard-library/sample-container.md)</ept>","source":"[\\<sample container>](../standard-library/sample-container.md)"}],"content":"---\ntitle: \"operator&lt; (&lt;sample container&gt;) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"std::operator<\"\n  - \"operator<\"\n  - \"std.<\"\n  - \"<\"\n  - \"std.operator<\"\n  - \"std::<\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"< operator, comparing specific objects\"\n  - \"operator<, valarrays\"\n  - \"< operator\"\n  - \"operator <, valarrays\"\nms.assetid: 31027dd6-53be-428b-b950-1dcb25393597\ncaps.latest.revision: 8\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# operator&lt; (&lt;sample container&gt;)\n> [!NOTE]\n>  This topic is in the Visual C++ documentation as a nonfunctional example of containers used in the Standard C++ Library. For more information, see [STL Containers](../standard-library/stl-containers.md).  \n  \n Overloads **operator<** to compare two objects of template class [Container](../standard-library/sample-container-class.md).  \n  \n## Syntax  \n  \n```  \n \n    template <class Ty>  \nbool operator<(\n    const Container <Ty>& left,  \n    const Container <Ty>& right);\n```  \n  \n## Return Value  \n Returns `lexicographical_compare`(_*Left*. [begin](../standard-library/container-class-begin.md), \\_*Left*. [end](../standard-library/container-class-end.md), \\_*Right***.begin**, \\_*Right*.**end**).  \n  \n## See Also  \n [\\<sample container>](../standard-library/sample-container.md)\n\n"}