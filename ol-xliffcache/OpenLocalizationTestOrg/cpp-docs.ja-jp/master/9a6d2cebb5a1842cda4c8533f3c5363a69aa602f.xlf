<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-04506c2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9a6d2cebb5a1842cda4c8533f3c5363a69aa602f</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\mfc\mfc-activex-controls-adding-stock-events-to-an-activex-control.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">47bf303ec143a0c348e9024dd591488b0aff7537</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e26edae29a9df7605a2ce260ee8a609df4f1f177</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>MFC ActiveX Controls: Adding Stock Events to an ActiveX Control | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>MFC ActiveX Controls: Adding Stock Events to an ActiveX Control</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Stock events differ from custom events in that they are automatically fired by class <bpt id="p1">[</bpt>COleControl<ept id="p1">](../mfc/reference/colecontrol-class.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>contains predefined member functions that fire events resulting from common actions.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Some common actions implemented by <ph id="ph1">`COleControl`</ph> include single- and double-clicks on the control, keyboard events, and changes in the state of the mouse buttons.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Event map entries for stock events are always preceded by the <bpt id="p1">**</bpt>EVENT_STOCK<ept id="p1">**</ept> prefix.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Stock Events Supported by the Add Event Wizard</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`COleControl`</ph> class provides ten stock events, listed in the following table.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>You can specify the events you want in your control using the <bpt id="p1">[</bpt>Add Event Wizard<ept id="p1">](../ide/add-event-wizard.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Stock Events</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Event</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Firing function</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Comments</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Click</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>void FireClick( )</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Fired when the control captures the mouse, any <bpt id="p1">**</bpt>BUTTONUP<ept id="p1">**</ept> (left, middle, or right) message is received, and the button is released over the control.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The stock MouseDown and MouseUp events occur before this event.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Event map entry: <bpt id="p1">**</bpt>EVENT_STOCK_CLICK( )<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>DblClick</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>void FireDblClick( )</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Similar to Click but fired when a <bpt id="p1">**</bpt>BUTTONDBLCLK<ept id="p1">**</ept> message is received.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Event map entry: <bpt id="p1">**</bpt>EVENT_STOCK_DBLCLICK( )<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Error</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>void FireError( SCODE<ept id="p1">**</ept>  <bpt id="p2">*</bpt>scode<ept id="p2">*</ept> <bpt id="p3">**</bpt>, LPCSTR<ept id="p3">**</ept>  <ph id="ph1">`lpszDescription`</ph> <bpt id="p4">**</bpt>, UINT<ept id="p4">**</ept>  <ph id="ph2">`nHelpID`</ph>  <bpt id="p5">**</bpt>= 0 )<ept id="p5">**</ept></source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Fired when an error occurs within your ActiveX control outside of the scope of a method call or property access.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Event map entry: <bpt id="p1">**</bpt>EVENT_STOCK_ERROREVENT( )<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>KeyDown</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>void FireKeyDown( short<ept id="p1">**</ept>  <ph id="ph1">`nChar`</ph> <bpt id="p2">**</bpt>, short<ept id="p2">**</ept>  <ph id="ph2">`nShiftState`</ph>  <bpt id="p3">**</bpt>)<ept id="p3">**</ept></source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Fired when a <ph id="ph1">`WM_SYSKEYDOWN`</ph> or <ph id="ph2">`WM_KEYDOWN`</ph> message is received.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Event map entry: <bpt id="p1">**</bpt>EVENT_STOCK_KEYDOWN( )<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>KeyPress</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>void FireKeyPress( short<ph id="ph1">\*</ph><ept id="p1">**</ept>  <ph id="ph2">`pnChar`</ph>  <bpt id="p2">**</bpt>)<ept id="p2">**</ept></source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Fired when a <ph id="ph1">`WM_CHAR`</ph> message is received.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Event map entry: <bpt id="p1">**</bpt>EVENT_STOCK_KEYPRESS( )<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>KeyUp</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>void FireKeyUp( short<ept id="p1">**</ept>  <ph id="ph1">`nChar`</ph> <bpt id="p2">**</bpt>, short<ept id="p2">**</ept>  <ph id="ph2">`nShiftState`</ph>  <bpt id="p3">**</bpt>)<ept id="p3">**</ept></source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Fired when a <ph id="ph1">`WM_SYSKEYUP`</ph> or <ph id="ph2">`WM_KEYUP`</ph> message is received.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Event map entry: <bpt id="p1">**</bpt>EVENT_STOCK_KEYUP( )<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>MouseDown</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>void FireMouseDown( short<ept id="p1">**</ept>  <ph id="ph1">`nButton`</ph> <bpt id="p2">**</bpt>, short<ept id="p2">**</ept>  <ph id="ph2">`nShiftState`</ph> <bpt id="p3">**</bpt>, float<ept id="p3">**</ept>  <bpt id="p4">*</bpt>x<ept id="p4">*</ept> <bpt id="p5">**</bpt>, float<ept id="p5">**</ept>  <bpt id="p6">*</bpt>y<ept id="p6">*</ept>  <bpt id="p7">**</bpt>)<ept id="p7">**</ept></source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Fired if any <bpt id="p1">**</bpt>BUTTONDOWN<ept id="p1">**</ept> (left, middle, or right) is received.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The mouse is captured immediately before this event is fired.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Event map entry: <bpt id="p1">**</bpt>EVENT_STOCK_MOUSEDOWN( )<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>MouseMove</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>void FireMouseMove( short<ept id="p1">**</ept>  <ph id="ph1">`nButton`</ph> <bpt id="p2">**</bpt>, short<ept id="p2">**</ept>  <ph id="ph2">`nShiftState`</ph> <bpt id="p3">**</bpt>, float<ept id="p3">**</ept>  <bpt id="p4">*</bpt>x<ept id="p4">*</ept> <bpt id="p5">**</bpt>, float<ept id="p5">**</ept>  <bpt id="p6">*</bpt>y<ept id="p6">*</ept>  <bpt id="p7">**</bpt>)<ept id="p7">**</ept></source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Fired when a <ph id="ph1">`WM_MOUSEMOVE`</ph> message is received.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Event map entry: <bpt id="p1">**</bpt>EVENT_STOCK_MOUSEMOVE( )<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>MouseUp</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>void FireMouseUp( short<ept id="p1">**</ept>  <ph id="ph1">`nButton`</ph> <bpt id="p2">**</bpt>, short<ept id="p2">**</ept>  <ph id="ph2">`nShiftState`</ph> <bpt id="p3">**</bpt>, float<ept id="p3">**</ept>  <bpt id="p4">*</bpt>x<ept id="p4">*</ept> <bpt id="p5">**</bpt>, float<ept id="p5">**</ept>  <bpt id="p6">*</bpt>y<ept id="p6">*</ept>  <bpt id="p7">**</bpt>)<ept id="p7">**</ept></source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Fired if any <bpt id="p1">**</bpt>BUTTONUP<ept id="p1">**</ept> (left, middle, or right) is received.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The mouse capture is released before this event is fired.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Event map entry: <bpt id="p1">**</bpt>EVENT_STOCK_MOUSEUP( )<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>ReadyStateChange</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>void FireReadyStateChange( )</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Fired when a control transitions to the next ready state due to the amount of data received.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Event map entry: <bpt id="p1">**</bpt>EVENT_STOCK_READYSTATECHANGE( )<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Adding a Stock Event Using the Add Event Wizard</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Adding stock events requires less work than adding custom events because the firing of the actual event is handled automatically by the base class, <ph id="ph1">`COleControl`</ph>.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The following procedure adds a stock event to a control that was developed using <bpt id="p1">[</bpt>MFC ActiveX Control Wizard<ept id="p1">](../mfc/reference/mfc-activex-control-wizard.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The event, called KeyPress, fires when a key is pressed and the control is active.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>This procedure can also be used to add other stock events.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Substitute the selected stock event name for KeyPress.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>To add the KeyPress stock event using the Add Event Wizard</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Load your control's project.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>In Class View, right-click your ActiveX control class to open the shortcut menu.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>From the shortcut menu, click <bpt id="p1">**</bpt>Add<ept id="p1">**</ept> and then click <bpt id="p2">**</bpt>Add Event<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>This opens the Add Event Wizard.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Event Name<ept id="p1">**</ept> drop-down list, select <ph id="ph1">`KeyPress`</ph>.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Click <bpt id="p1">**</bpt>Finish<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Add Event Wizard Changes for Stock Events</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Because stock events are handled by the control's base class, the Add Event Wizard does not change your class declaration in any way.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>It adds the event to the control's event map and makes an entry in its .IDL file.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>The following line is added to the control's event map, located in the control class implementation (.CPP) file:</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>NVC_MFC_AxUI#5</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Adding this code fires a KeyPress event when a <ph id="ph1">`WM_CHAR`</ph> message is received and the control is active.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>The KeyPress event can be fired at other times by calling its firing function (for example, <ph id="ph1">`FireKeyPress`</ph>) from within the control code.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>The Add Event Wizard adds the following line of code to the control's .IDL file:</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>NVC_MFC_AxUI#6</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>This line associates the KeyPress event with its standard dispatch ID and allows the container to anticipate the KeyPress event.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>MFC ActiveX Controls</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>MFC ActiveX Controls: Methods</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>COleControl Class</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>