{"nodes":[{"pos":[12,72],"content":"Unicode Stream I-O in Text and Binary Modes | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Unicode Stream I-O in Text and Binary Modes | Microsoft Docs","pos":[0,60]}]},{"content":"Unicode Stream I/O in Text and Binary Modes","pos":[751,794]},{"pos":[795,1010],"content":"When a Unicode stream I/O routine (such as <ph id=\"ph1\">`fwprintf`</ph>, <ph id=\"ph2\">`fwscanf`</ph>, <ph id=\"ph3\">`fgetwc`</ph>, <ph id=\"ph4\">`fputwc`</ph>, <ph id=\"ph5\">`fgetws`</ph>, or <ph id=\"ph6\">`fputws`</ph>) operates on a file that is open in text mode (the default), two kinds of character conversions take place:","source":"When a Unicode stream I/O routine (such as `fwprintf`, `fwscanf`, `fgetwc`, `fputwc`, `fgetws`, or `fputws`) operates on a file that is open in text mode (the default), two kinds of character conversions take place:"},{"content":"Unicode-to-MBCS or MBCS-to-Unicode conversion.","pos":[1020,1066]},{"content":"When a Unicode stream-I/O function operates in text mode, the source or destination stream is assumed to be a sequence of multibyte characters.","pos":[1067,1210]},{"content":"Therefore, the Unicode stream-input functions convert multibyte characters to wide characters (as if by a call to the <ph id=\"ph1\">`mbtowc`</ph> function).","pos":[1211,1348],"source":" Therefore, the Unicode stream-input functions convert multibyte characters to wide characters (as if by a call to the `mbtowc` function)."},{"content":"For the same reason, the Unicode stream-output functions convert wide characters to multibyte characters (as if by a call to the <ph id=\"ph1\">`wctomb`</ph> function).","pos":[1349,1497],"source":" For the same reason, the Unicode stream-output functions convert wide characters to multibyte characters (as if by a call to the `wctomb` function)."},{"content":"Carriage return – linefeed (CR-LF) translation.","pos":[1507,1554]},{"content":"This translation occurs before the MBCS – Unicode conversion (for Unicode stream input functions) and after the Unicode – MBCS conversion (for Unicode stream output functions).","pos":[1555,1731]},{"content":"During input, each carriage return – linefeed combination is translated into a single linefeed character.","pos":[1732,1837]},{"content":"During output, each linefeed character is translated into a carriage return – linefeed combination.","pos":[1838,1937]},{"content":"However, when a Unicode stream-I/O function operates in binary mode, the file is assumed to be Unicode, and no CR-LF translation or character conversion occurs during input or output.","pos":[1944,2127]},{"content":"Use the _setmode( _fileno( stdin ), _O_BINARY ); instruction in order to correctly use wcin on a UNICODE text file.","pos":[2128,2243]},{"content":"See Also","pos":[2252,2260]},{"content":"Run-Time Routines by Category","pos":[2265,2294]},{"content":"Input and Output","pos":[2356,2372]}],"content":"---\ntitle: \"Unicode Stream I-O in Text and Binary Modes | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"c.io\"\ndev_langs: \n  - \"C++\"\n  - \"C\"\nhelpviewer_keywords: \n  - \"stream I/O routines\"\n  - \"I/O [CRT], unicode stream\"\n  - \"Unicode, stream I/O routines\"\n  - \"Unicode stream I/O\"\nms.assetid: 68be0c3e-a9e6-4fd5-b34a-1b5207f0e7d6\ncaps.latest.revision: 7\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"ru-ru\"\n  - \"zh-cn\"\n  - \"zh-tw\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"tr-tr\"\n---\n# Unicode Stream I/O in Text and Binary Modes\nWhen a Unicode stream I/O routine (such as `fwprintf`, `fwscanf`, `fgetwc`, `fputwc`, `fgetws`, or `fputws`) operates on a file that is open in text mode (the default), two kinds of character conversions take place:  \n  \n-   Unicode-to-MBCS or MBCS-to-Unicode conversion. When a Unicode stream-I/O function operates in text mode, the source or destination stream is assumed to be a sequence of multibyte characters. Therefore, the Unicode stream-input functions convert multibyte characters to wide characters (as if by a call to the `mbtowc` function). For the same reason, the Unicode stream-output functions convert wide characters to multibyte characters (as if by a call to the `wctomb` function).  \n  \n-   Carriage return – linefeed (CR-LF) translation. This translation occurs before the MBCS – Unicode conversion (for Unicode stream input functions) and after the Unicode – MBCS conversion (for Unicode stream output functions). During input, each carriage return – linefeed combination is translated into a single linefeed character. During output, each linefeed character is translated into a carriage return – linefeed combination.  \n  \n However, when a Unicode stream-I/O function operates in binary mode, the file is assumed to be Unicode, and no CR-LF translation or character conversion occurs during input or output. Use the _setmode( _fileno( stdin ), _O_BINARY ); instruction in order to correctly use wcin on a UNICODE text file.  \n  \n## See Also  \n [Run-Time Routines by Category](../c-runtime-library/run-time-routines-by-category.md)   \n [Input and Output](../c-runtime-library/input-and-output.md)"}