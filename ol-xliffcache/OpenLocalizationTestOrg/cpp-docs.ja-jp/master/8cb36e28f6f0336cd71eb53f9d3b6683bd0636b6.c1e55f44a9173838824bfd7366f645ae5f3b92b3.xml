{"nodes":[{"pos":[12,115],"content":"strnlen, strnlen_s, wcsnlen, wcsnlen_s, _mbsnlen, _mbsnlen_l, _mbstrnlen, _mbstrnlen_l | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"strnlen, strnlen_s, wcsnlen, wcsnlen_s, _mbsnlen, _mbsnlen_l, _mbstrnlen, _mbstrnlen_l | Microsoft Docs","pos":[0,103]}]},{"content":"strnlen, strnlen_s, wcsnlen, wcsnlen_s, _mbsnlen, _mbsnlen_l, _mbstrnlen, _mbstrnlen_l","pos":[1750,1836]},{"content":"Gets the length of a string by using the current locale or one that has been passed in.","pos":[1837,1924]},{"content":"These are more secure versions of <bpt id=\"p1\">[</bpt>strlen, wcslen, _mbslen, _mbslen_l, _mbstrlen, _mbstrlen_l<ept id=\"p1\">](../../c-runtime-library/reference/strlen-wcslen-mbslen-mbslen-l-mbstrlen-mbstrlen-l.md)</ept>.","pos":[1925,2108],"source":" These are more secure versions of [strlen, wcslen, _mbslen, _mbslen_l, _mbstrlen, _mbstrlen_l](../../c-runtime-library/reference/strlen-wcslen-mbslen-mbslen-l-mbstrlen-mbstrlen-l.md)."},{"pos":[2116,2426],"content":"[!IMPORTANT]\n `_mbsnlen`, `_mbsnlen_l`, `_mbstrnlen`, and `_mbstrnlen_l` cannot be used in applications that execute in the [!INCLUDE[wrt](../../atl/reference/includes/wrt_md.md)]. For more information, see [CRT functions not supported with /ZW](http://msdn.microsoft.com/library/windows/apps/jj606124.aspx).","leadings":["","> "],"nodes":[{"content":", `_mbsnlen_l`, `_mbstrnlen`, and `_mbstrnlen_l` cannot be used in applications that execute in the [!INCLUDE[wrt](../../atl/reference/includes/wrt_md.md)]. For more information, see [CRT functions not supported with /ZW](http://msdn.microsoft.com/library/windows/apps/jj606124.aspx).","pos":[24,308],"nodes":[{"content":", <ph id=\"ph1\">`_mbsnlen_l`</ph>, <ph id=\"ph2\">`_mbstrnlen`</ph>, and <ph id=\"ph3\">`_mbstrnlen_l`</ph> cannot be used in applications that execute in the <ph id=\"ph4\">[!INCLUDE[wrt](../../atl/reference/includes/wrt_md.md)]</ph>.","pos":[0,156],"source":", `_mbsnlen_l`, `_mbstrnlen`, and `_mbstrnlen_l` cannot be used in applications that execute in the [!INCLUDE[wrt](../../atl/reference/includes/wrt_md.md)]."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>CRT functions not supported with /ZW<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/apps/jj606124.aspx)</ept>.","pos":[157,284],"source":" For more information, see [CRT functions not supported with /ZW](http://msdn.microsoft.com/library/windows/apps/jj606124.aspx)."}]}]},{"content":"Syntax","pos":[2435,2441]},{"content":"Parameters","pos":[3147,3157]},{"content":"Null-terminated string.","pos":[3170,3193]},{"content":"The size of the string buffer.","pos":[3222,3252]},{"content":"Locale to use.","pos":[3271,3285]},{"content":"Return Value","pos":[3294,3306]},{"content":"These functions return the number of characters in the string, not including the terminating null character.","pos":[3310,3418]},{"content":"If there is no null terminator within the first <ph id=\"ph1\">`numberOfElements`</ph> bytes of the string (or wide characters for <ph id=\"ph2\">`wcsnlen`</ph>), then <ph id=\"ph3\">`numberOfElements`</ph> is returned to indicate the error condition; null-terminated strings have lengths that are strictly less than <ph id=\"ph4\">`numberOfElements`</ph>.","pos":[3419,3695],"source":" If there is no null terminator within the first `numberOfElements` bytes of the string (or wide characters for `wcsnlen`), then `numberOfElements` is returned to indicate the error condition; null-terminated strings have lengths that are strictly less than `numberOfElements`."},{"pos":[3715,3798],"content":"and <ph id=\"ph1\">`_mbstrnlen_l`</ph> return -1 if the string contains an invalid multibyte character.","source":" and `_mbstrnlen_l` return -1 if the string contains an invalid multibyte character."},{"content":"Remarks","pos":[3807,3814]},{"pos":[3822,4227],"content":"[!NOTE]\n `strnlen` is not a replacement for `strlen`; `strnlen` is intended to be used only to calculate the size of incoming untrusted data in a buffer of known size—for example, a network packet. `strnlen` calculates the length but doesn't walk past the end of the buffer if the string is unterminated. For other situations, use `strlen`. (The same applies to `wcsnlen`, `_mbsnlen`, and `_mbstrnlen`.)","leadings":["","> "],"nodes":[{"content":" is not a replacement for `strlen`; `strnlen` is intended to be used only to calculate the size of incoming untrusted data in a buffer of known size—for example, a network packet. `strnlen` calculates the length but doesn't walk past the end of the buffer if the string is unterminated. For other situations, use `strlen`. (The same applies to `wcsnlen`, `_mbsnlen`, and `_mbstrnlen`.)","pos":[18,403],"nodes":[{"content":"is not a replacement for <ph id=\"ph1\">`strlen`</ph>; <ph id=\"ph2\">`strnlen`</ph> is intended to be used only to calculate the size of incoming untrusted data in a buffer of known size—for example, a network packet.","pos":[1,179],"source":" is not a replacement for `strlen`; `strnlen` is intended to be used only to calculate the size of incoming untrusted data in a buffer of known size—for example, a network packet."},{"content":"calculates the length but doesn't walk past the end of the buffer if the string is unterminated.","pos":[190,286]},{"content":"For other situations, use <ph id=\"ph1\">`strlen`</ph>.","pos":[287,322],"source":" For other situations, use `strlen`."},{"content":"(The same applies to <ph id=\"ph1\">`wcsnlen`</ph>, <ph id=\"ph2\">`_mbsnlen`</ph>, and <ph id=\"ph3\">`_mbstrnlen`</ph>.)","pos":[323,385],"source":" (The same applies to `wcsnlen`, `_mbsnlen`, and `_mbstrnlen`.)"}]}]},{"content":"Each of these functions returns the number of characters in <ph id=\"ph1\">`str`</ph>, not including the terminating null character.","pos":[4234,4346],"source":"Each of these functions returns the number of characters in `str`, not including the terminating null character."},{"content":"However, <ph id=\"ph1\">`strnlen`</ph> and <ph id=\"ph2\">`strnlen_s`</ph> interpret the string as a single-byte character string and therefore, the return value is always equal to the number of bytes, even if the string contains multibyte characters.","pos":[4347,4558],"source":" However, `strnlen` and `strnlen_s` interpret the string as a single-byte character string and therefore, the return value is always equal to the number of bytes, even if the string contains multibyte characters."},{"content":"and <ph id=\"ph1\">`wcsnlen_s`</ph> are wide-character versions of <ph id=\"ph2\">`strnlen`</ph> and <ph id=\"ph3\">`strnlen_s`</ph> respectively; the arguments for <ph id=\"ph4\">`wcsnlen`</ph> and <ph id=\"ph5\">`wcsnlen_s`</ph> are wide-character strings and the count of characters are in wide-character units.","pos":[4569,4783],"source":" and `wcsnlen_s` are wide-character versions of `strnlen` and `strnlen_s` respectively; the arguments for `wcsnlen` and `wcsnlen_s` are wide-character strings and the count of characters are in wide-character units."},{"content":"Otherwise, <ph id=\"ph1\">`wcsnlen`</ph> and <ph id=\"ph2\">`strnlen`</ph> behave identically, as do <ph id=\"ph3\">`strnlen_s`</ph> and <ph id=\"ph4\">`wcsnlen_s`</ph>.","pos":[4784,4873],"source":" Otherwise, `wcsnlen` and `strnlen` behave identically, as do `strnlen_s` and `wcsnlen_s`."},{"content":", <ph id=\"ph1\">`wcsnlen,`</ph> and <ph id=\"ph2\">`_mbsnlen`</ph> do not validate their parameters.","pos":[4889,4950],"source":", `wcsnlen,` and `_mbsnlen` do not validate their parameters."},{"content":"If <ph id=\"ph1\">`str`</ph> is <ph id=\"ph2\">`NULL`</ph>, an access violation occurs.","pos":[4951,4998],"source":" If `str` is `NULL`, an access violation occurs."},{"content":"and <ph id=\"ph1\">`wcsnlen_s`</ph> validate their parameters.","pos":[5017,5059],"source":" and `wcsnlen_s` validate their parameters."},{"content":"If <ph id=\"ph1\">`str`</ph> is <ph id=\"ph2\">`NULL`</ph>, the functions return 0.","pos":[5060,5103],"source":" If `str` is `NULL`, the functions return 0."},{"content":"also validates its parameters.","pos":[5123,5153]},{"content":"If <ph id=\"ph1\">`str`</ph> is <ph id=\"ph2\">`NULL`</ph>, or if <ph id=\"ph3\">`numberOfElements`</ph> is greater than <ph id=\"ph4\">`INT_MAX`</ph>, <ph id=\"ph5\">`_mbstrnlen`</ph> generates an invalid parameter exception, as described in <bpt id=\"p1\">[</bpt>Parameter Validation<ept id=\"p1\">](../../c-runtime-library/parameter-validation.md)</ept>.","pos":[5154,5369],"source":" If `str` is `NULL`, or if `numberOfElements` is greater than `INT_MAX`, `_mbstrnlen` generates an invalid parameter exception, as described in [Parameter Validation](../../c-runtime-library/parameter-validation.md)."},{"content":"If execution is allowed to continue, <ph id=\"ph1\">`_mbstrnlen`</ph> sets <ph id=\"ph2\">`errno`</ph> to <ph id=\"ph3\">`EINVAL`</ph> and returns -1.","pos":[5370,5460],"source":" If execution is allowed to continue, `_mbstrnlen` sets `errno` to `EINVAL` and returns -1."},{"content":"Generic-Text Routine Mappings","pos":[5470,5499]},{"content":"TCHAR.H routine","pos":[5506,5521]},{"content":"_UNICODE &amp; _MBCS not defined","pos":[5522,5550],"source":"_UNICODE & _MBCS not defined"},{"content":"_MBCS defined","pos":[5551,5564]},{"content":"_UNICODE defined","pos":[5565,5581]},{"content":"and <ph id=\"ph1\">`_mbstrnlen`</ph> return the number of multibyte characters in a multibyte-character string.","pos":[5851,5942],"source":" and `_mbstrnlen` return the number of multibyte characters in a multibyte-character string."},{"content":"recognizes multibyte-character sequences according to the multibyte code page that's currently in use or according to the locale that's passed in; it does not test for multibyte-character validity.","pos":[5954,6151]},{"content":"tests for multibyte-character validity and recognizes multibyte-character sequences.","pos":[6165,6249]},{"content":"If the string that's passed to <ph id=\"ph1\">`_mbstrnlen`</ph> contains an invalid multibyte character, <ph id=\"ph2\">`errno`</ph> is set to <ph id=\"ph3\">`EILSEQ`</ph>.","pos":[6250,6362],"source":" If the string that's passed to `_mbstrnlen` contains an invalid multibyte character, `errno` is set to `EILSEQ`."},{"content":"The output value is affected by the setting of the <ph id=\"ph1\">`LC_CTYPE`</ph> category setting of the locale; see <bpt id=\"p1\">[</bpt>setlocale, _wsetlocale<ept id=\"p1\">](../../c-runtime-library/reference/setlocale-wsetlocale.md)</ept> for more information.","pos":[6369,6572],"source":"The output value is affected by the setting of the `LC_CTYPE` category setting of the locale; see [setlocale, _wsetlocale](../../c-runtime-library/reference/setlocale-wsetlocale.md) for more information."},{"content":"The versions of these functions are identical, except that the ones that don't have the <ph id=\"ph1\">`_l`</ph> suffix use the current locale for this locale-dependent behavior and the versions that have the <ph id=\"ph2\">`_l`</ph> suffix instead use the locale parameter that's passed in.","pos":[6573,6824],"source":" The versions of these functions are identical, except that the ones that don't have the `_l` suffix use the current locale for this locale-dependent behavior and the versions that have the `_l` suffix instead use the locale parameter that's passed in."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Locale<ept id=\"p1\">](../../c-runtime-library/locale.md)</ept>.","pos":[6825,6895],"source":" For more information, see [Locale](../../c-runtime-library/locale.md)."},{"content":"Requirements","pos":[6904,6916]},{"content":"Routine","pos":[6923,6930]},{"content":"Required header","pos":[6931,6946]},{"pos":[7000,7001],"content":","},{"content":"string.h&gt;","pos":[7016,7025],"source":"string.h>"},{"pos":[7039,7040],"content":","},{"content":"string.h&gt; or <ph id=\"ph1\">\\&lt;</ph>wchar.h&gt;","pos":[7055,7078],"source":"string.h> or \\<wchar.h>"},{"pos":[7093,7094],"content":","},{"content":"mbstring.h&gt;","pos":[7110,7121],"source":"mbstring.h>"},{"pos":[7138,7139],"content":","},{"content":"stdlib.h&gt;","pos":[7157,7166],"source":"stdlib.h>"},{"pos":[7174,7278],"content":"For additional compatibility information, see <bpt id=\"p1\">[</bpt>Compatibility<ept id=\"p1\">](../../c-runtime-library/compatibility.md)</ept>.","source":"For additional compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md)."},{"content":"Example","pos":[7287,7294]},{"content":".NET Framework Equivalent","pos":[8333,8358]},{"content":"System::String::Length","pos":[8363,8385]},{"content":"See Also","pos":[8463,8471]},{"content":"String Manipulation","pos":[8476,8495]},{"content":"Locale","pos":[8554,8560]},{"content":"Interpretation of Multibyte-Character Sequences","pos":[8602,8649]},{"content":"setlocale, _wsetlocale","pos":[8732,8754]},{"content":"strncat, _strncat_l, wcsncat, _wcsncat_l, _mbsncat, _mbsncat_l","pos":[8820,8882]},{"content":"strncmp, wcsncmp, _mbsncmp, _mbsncmp_l","pos":[8981,9019]},{"content":"strcoll Functions","pos":[9098,9115]},{"content":"strncpy_s, _strncpy_s_l, wcsncpy_s, _wcsncpy_s_l, _mbsncpy_s, _mbsncpy_s_l","pos":[9168,9242]},{"content":"strrchr, wcsrchr, _mbsrchr, _mbsrchr_l","pos":[9353,9391]},{"content":"_strset, _strset_l, _wcsset, _wcsset_l, _mbsset, _mbsset_l","pos":[9470,9528]},{"content":"strspn, wcsspn, _mbsspn, _mbsspn_l","pos":[9621,9655]}],"content":"---\ntitle: \"strnlen, strnlen_s, wcsnlen, wcsnlen_s, _mbsnlen, _mbsnlen_l, _mbstrnlen, _mbstrnlen_l | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\napiname: \n  - \"wcsnlen\"\n  - \"strnlen_s\"\n  - \"_mbstrnlen\"\n  - \"_mbsnlen_l\"\n  - \"_mbstrnlen_l\"\n  - \"strnlen\"\n  - \"wcsnlen_s\"\n  - \"_mbsnlen\"\napilocation: \n  - \"msvcrt.dll\"\n  - \"msvcr80.dll\"\n  - \"msvcr90.dll\"\n  - \"msvcr100.dll\"\n  - \"msvcr100_clr0400.dll\"\n  - \"msvcr110.dll\"\n  - \"msvcr110_clr0400.dll\"\n  - \"msvcr120.dll\"\n  - \"msvcr120_clr0400.dll\"\n  - \"ucrtbase.dll\"\n  - \"api-ms-win-crt-multibyte-l1-1-0.dll\"\n  - \"api-ms-win-crt-string-l1-1-0.dll\"\napitype: \"DLLExport\"\nf1_keywords: \n  - \"wcsnlen\"\n  - \"strnlen_s\"\n  - \"_mbsnlen\"\n  - \"_mbsnlen_l\"\n  - \"_tcsnlen\"\n  - \"_tcscnlen\"\n  - \"_mbstrnlen_l\"\n  - \"wcsnlen_s\"\n  - \"_mbstrnlen\"\n  - \"strnlen\"\n  - \"_tcscnlen_l\"\ndev_langs: \n  - \"C++\"\n  - \"C\"\nhelpviewer_keywords: \n  - \"_tcscnlen function\"\n  - \"_mbstrnlen function\"\n  - \"_mbsnlen_l function\"\n  - \"lengths, strings\"\n  - \"mbstrnlen function\"\n  - \"mbsnlen_l function\"\n  - \"_mbstrnlen_l function\"\n  - \"_tcscnlen_l function\"\n  - \"wcsnlen_l function\"\n  - \"_tcsnlen function\"\n  - \"_mbsnlen function\"\n  - \"strnlen function\"\n  - \"mbsnlen function\"\n  - \"wcsnlen_s function\"\n  - \"strnlen_s function\"\n  - \"mbstrnlen_l function\"\n  - \"wcsnlen function\"\n  - \"string length\"\n  - \"strnlen_l function\"\nms.assetid: cc05ce1c-72ea-4ae4-a7e7-4464e56e5f80\ncaps.latest.revision: 35\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# strnlen, strnlen_s, wcsnlen, wcsnlen_s, _mbsnlen, _mbsnlen_l, _mbstrnlen, _mbstrnlen_l\nGets the length of a string by using the current locale or one that has been passed in. These are more secure versions of [strlen, wcslen, _mbslen, _mbslen_l, _mbstrlen, _mbstrlen_l](../../c-runtime-library/reference/strlen-wcslen-mbslen-mbslen-l-mbstrlen-mbstrlen-l.md).  \n  \n> [!IMPORTANT]\n>  `_mbsnlen`, `_mbsnlen_l`, `_mbstrnlen`, and `_mbstrnlen_l` cannot be used in applications that execute in the [!INCLUDE[wrt](../../atl/reference/includes/wrt_md.md)]. For more information, see [CRT functions not supported with /ZW](http://msdn.microsoft.com/library/windows/apps/jj606124.aspx).  \n  \n## Syntax  \n  \n```  \nsize_t strnlen(  \n   const char *str,  \n   size_t numberOfElements   \n);  \nsize_t strnlen_s(  \n   const char *str,  \n   size_t numberOfElements   \n);  \nsize_t wcsnlen(  \n   const wchar_t *str,  \n   size_t numberOfElements  \n);  \nsize_t wcsnlen_s(  \n   const wchar_t *str,  \n   size_t numberOfElements  \n);  \nsize_t _mbsnlen(  \n   const unsigned char *str,  \n   size_t numberOfElements  \n);  \nsize_t _mbsnlen_l(  \n   const unsigned char *str,  \n   size_t numberOfElements,  \n   _locale_t locale  \n);  \nsize_t _mbstrnlen(  \n   const char *str,  \n   size_t numberOfElements  \n);  \nsize_t _mbstrnlen_l(  \n   const char *str,  \n   size_t numberOfElements,  \n   _locale_t locale  \n);  \n```  \n  \n#### Parameters  \n `str`  \n Null-terminated string.  \n  \n `numberOfElements`  \n The size of the string buffer.  \n  \n `locale`  \n Locale to use.  \n  \n## Return Value  \n These functions return the number of characters in the string, not including the terminating null character. If there is no null terminator within the first `numberOfElements` bytes of the string (or wide characters for `wcsnlen`), then `numberOfElements` is returned to indicate the error condition; null-terminated strings have lengths that are strictly less than `numberOfElements`.  \n  \n `_mbstrnlen` and `_mbstrnlen_l` return -1 if the string contains an invalid multibyte character.  \n  \n## Remarks  \n  \n> [!NOTE]\n>  `strnlen` is not a replacement for `strlen`; `strnlen` is intended to be used only to calculate the size of incoming untrusted data in a buffer of known size—for example, a network packet. `strnlen` calculates the length but doesn't walk past the end of the buffer if the string is unterminated. For other situations, use `strlen`. (The same applies to `wcsnlen`, `_mbsnlen`, and `_mbstrnlen`.)  \n  \n Each of these functions returns the number of characters in `str`, not including the terminating null character. However, `strnlen` and `strnlen_s` interpret the string as a single-byte character string and therefore, the return value is always equal to the number of bytes, even if the string contains multibyte characters. `wcsnlen` and `wcsnlen_s` are wide-character versions of `strnlen` and `strnlen_s` respectively; the arguments for `wcsnlen` and `wcsnlen_s` are wide-character strings and the count of characters are in wide-character units. Otherwise, `wcsnlen` and `strnlen` behave identically, as do `strnlen_s` and `wcsnlen_s`.  \n  \n `strnlen`, `wcsnlen,` and `_mbsnlen` do not validate their parameters. If `str` is `NULL`, an access violation occurs.  \n  \n `strnlen_s` and `wcsnlen_s` validate their parameters. If `str` is `NULL`, the functions return 0.  \n  \n `_mbstrnlen` also validates its parameters. If `str` is `NULL`, or if `numberOfElements` is greater than `INT_MAX`, `_mbstrnlen` generates an invalid parameter exception, as described in [Parameter Validation](../../c-runtime-library/parameter-validation.md). If execution is allowed to continue, `_mbstrnlen` sets `errno` to `EINVAL` and returns -1.  \n  \n### Generic-Text Routine Mappings  \n  \n|TCHAR.H routine|_UNICODE & _MBCS not defined|_MBCS defined|_UNICODE defined|  \n|---------------------|------------------------------------|--------------------|-----------------------|  \n|`_tcsnlen`|`strnlen`|`strnlen`|`wcsnlen`|  \n|`_tcscnlen`|`strnlen`|`_mbsnlen`|`wcsnlen`|  \n|`_tcscnlen_l`|`strnlen`|`_mbsnlen_l`|`wcsnlen`|  \n  \n `_mbsnlen` and `_mbstrnlen` return the number of multibyte characters in a multibyte-character string. `_mbsnlen` recognizes multibyte-character sequences according to the multibyte code page that's currently in use or according to the locale that's passed in; it does not test for multibyte-character validity. `_mbstrnlen` tests for multibyte-character validity and recognizes multibyte-character sequences. If the string that's passed to `_mbstrnlen` contains an invalid multibyte character, `errno` is set to `EILSEQ`.  \n  \n The output value is affected by the setting of the `LC_CTYPE` category setting of the locale; see [setlocale, _wsetlocale](../../c-runtime-library/reference/setlocale-wsetlocale.md) for more information. The versions of these functions are identical, except that the ones that don't have the `_l` suffix use the current locale for this locale-dependent behavior and the versions that have the `_l` suffix instead use the locale parameter that's passed in. For more information, see [Locale](../../c-runtime-library/locale.md).  \n  \n## Requirements  \n  \n|Routine|Required header|  \n|-------------|---------------------|  \n|`strnlen`, `strnlen_s`|\\<string.h>|  \n|`wcsnlen`, `wcsnlen_s`|\\<string.h> or \\<wchar.h>|  \n|`_mbsnlen`, `_mbsnlen_l`|\\<mbstring.h>|  \n|`_mbstrnlen`, `_mbstrnlen_l`|\\<stdlib.h>|  \n  \n For additional compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md).  \n  \n## Example  \n  \n```  \n  \n      // crt_strnlen.c  \n  \n#include <string.h>  \n  \nint main()  \n{  \n   // str1 is 82 characters long. str2 is 159 characters long   \n  \n   char* str1 = \"The length of a string is the number of characters\\n\"  \n               \"excluding the terminating null.\";  \n   char* str2 = \"strnlen takes a maximum size. If the string is longer\\n\"  \n                \"than the maximum size specified, the maximum size is\\n\"  \n                \"returned rather than the actual size of the string.\";  \n   size_t len;  \n   size_t maxsize = 100;  \n  \n   len = strnlen(str1, maxsize);  \n   printf(\"%s\\n Length: %d \\n\\n\", str1, len);  \n  \n   len = strnlen(str2, maxsize);  \n   printf(\"%s\\n Length: %d \\n\", str2, len);  \n}  \n```  \n  \n```Output  \nThe length of a string is the number of characters  \nexcluding the terminating null.  \n Length: 82   \n  \nstrnlen takes a maximum size. If the string is longer  \nthan the maximum size specified, the maximum size is  \nreturned rather than the actual size of the string.  \n Length: 100   \n```  \n  \n## .NET Framework Equivalent  \n [System::String::Length](https://msdn.microsoft.com/en-us/library/system.string.length.aspx)  \n  \n## See Also  \n [String Manipulation](../../c-runtime-library/string-manipulation-crt.md)   \n [Locale](../../c-runtime-library/locale.md)   \n [Interpretation of Multibyte-Character Sequences](../../c-runtime-library/interpretation-of-multibyte-character-sequences.md)   \n [setlocale, _wsetlocale](../../c-runtime-library/reference/setlocale-wsetlocale.md)   \n [strncat, _strncat_l, wcsncat, _wcsncat_l, _mbsncat, _mbsncat_l](../../c-runtime-library/reference/strncat-strncat-l-wcsncat-wcsncat-l-mbsncat-mbsncat-l.md)   \n [strncmp, wcsncmp, _mbsncmp, _mbsncmp_l](../../c-runtime-library/reference/strncmp-wcsncmp-mbsncmp-mbsncmp-l.md)   \n [strcoll Functions](../../c-runtime-library/strcoll-functions.md)   \n [strncpy_s, _strncpy_s_l, wcsncpy_s, _wcsncpy_s_l, _mbsncpy_s, _mbsncpy_s_l](../../c-runtime-library/reference/strncpy-s-strncpy-s-l-wcsncpy-s-wcsncpy-s-l-mbsncpy-s-mbsncpy-s-l.md)   \n [strrchr, wcsrchr, _mbsrchr, _mbsrchr_l](../../c-runtime-library/reference/strrchr-wcsrchr-mbsrchr-mbsrchr-l.md)   \n [_strset, _strset_l, _wcsset, _wcsset_l, _mbsset, _mbsset_l](../../c-runtime-library/reference/strset-strset-l-wcsset-wcsset-l-mbsset-mbsset-l.md)   \n [strspn, wcsspn, _mbsspn, _mbsspn_l](../../c-runtime-library/reference/strspn-wcsspn-mbsspn-mbsspn-l.md)"}