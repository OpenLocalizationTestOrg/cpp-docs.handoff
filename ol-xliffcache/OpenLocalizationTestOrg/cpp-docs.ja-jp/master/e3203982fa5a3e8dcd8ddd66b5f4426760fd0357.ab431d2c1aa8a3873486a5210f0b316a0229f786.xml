{"nodes":[{"pos":[12,48],"content":"CRichEditView Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"CRichEditView Class | Microsoft Docs","pos":[0,36]}]},{"pos":[738,757],"content":"CRichEditView Class","linkify":"CRichEditView Class","nodes":[{"content":"CRichEditView Class","pos":[0,19]}]},{"pos":[758,1001],"content":"With <bpt id=\"p1\">[</bpt>CRichEditDoc<ept id=\"p1\">](../../mfc/reference/cricheditdoc-class.md)</ept> and <bpt id=\"p2\">[</bpt>CRichEditCntrItem<ept id=\"p2\">](../../mfc/reference/cricheditcntritem-class.md)</ept>, provides the functionality of the rich edit control within the context of MFC's document view architecture.","source":"With [CRichEditDoc](../../mfc/reference/cricheditdoc-class.md) and [CRichEditCntrItem](../../mfc/reference/cricheditcntritem-class.md), provides the functionality of the rich edit control within the context of MFC's document view architecture."},{"pos":[1010,1016],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[1081,1088],"content":"Members","linkify":"Members","nodes":[{"content":"Members","pos":[0,7]}]},{"pos":[1098,1117],"content":"Public Constructors","linkify":"Public Constructors","nodes":[{"content":"Public Constructors","pos":[0,19]}]},{"content":"Name","pos":[1124,1128]},{"content":"Description","pos":[1129,1140]},{"pos":[1178,1239],"content":"<bpt id=\"p1\">[</bpt>CRichEditView::CRichEditView<ept id=\"p1\">](#cricheditview__cricheditview)</ept>","source":"[CRichEditView::CRichEditView](#cricheditview__cricheditview)"},{"pos":[1240,1276],"content":"Constructs a <ph id=\"ph1\">`CRichEditView`</ph> object.","source":"Constructs a `CRichEditView` object."},{"pos":[1287,1301],"content":"Public Methods","linkify":"Public Methods","nodes":[{"content":"Public Methods","pos":[0,14]}]},{"content":"Name","pos":[1308,1312]},{"content":"Description","pos":[1313,1324]},{"pos":[1362,1437],"content":"<bpt id=\"p1\">[</bpt>CRichEditView::AdjustDialogPosition<ept id=\"p1\">](#cricheditview__adjustdialogposition)</ept>","source":"[CRichEditView::AdjustDialogPosition](#cricheditview__adjustdialogposition)"},{"content":"Moves a dialog box so that it doesn't obscure the current selection.","pos":[1438,1506]},{"pos":[1511,1562],"content":"<bpt id=\"p1\">[</bpt>CRichEditView::CanPaste<ept id=\"p1\">](#cricheditview__canpaste)</ept>","source":"[CRichEditView::CanPaste](#cricheditview__canpaste)"},{"content":"Tells whether the Clipboard contains data that can be pasted into the rich edit view.","pos":[1563,1648]},{"pos":[1653,1702],"content":"<bpt id=\"p1\">[</bpt>CRichEditView::DoPaste<ept id=\"p1\">](#cricheditview__dopaste)</ept>","source":"[CRichEditView::DoPaste](#cricheditview__dopaste)"},{"content":"Pastes an OLE item into this rich edit view.","pos":[1703,1747]},{"pos":[1752,1803],"content":"<bpt id=\"p1\">[</bpt>CRichEditView::FindText<ept id=\"p1\">](#cricheditview__findtext)</ept>","source":"[CRichEditView::FindText](#cricheditview__findtext)"},{"content":"Finds the specified text, invoking the wait cursor.","pos":[1804,1855]},{"pos":[1860,1923],"content":"<bpt id=\"p1\">[</bpt>CRichEditView::FindTextSimple<ept id=\"p1\">](#cricheditview__findtextsimple)</ept>","source":"[CRichEditView::FindTextSimple](#cricheditview__findtextsimple)"},{"content":"Finds the specified text.","pos":[1924,1949]},{"pos":[1954,2033],"content":"<bpt id=\"p1\">[</bpt>CRichEditView::GetCharFormatSelection<ept id=\"p1\">](#cricheditview__getcharformatselection)</ept>","source":"[CRichEditView::GetCharFormatSelection](#cricheditview__getcharformatselection)"},{"content":"Retrieves the character formatting attributes for the current selection.","pos":[2034,2106]},{"pos":[2111,2168],"content":"<bpt id=\"p1\">[</bpt>CRichEditView::GetDocument<ept id=\"p1\">](#cricheditview__getdocument)</ept>","source":"[CRichEditView::GetDocument](#cricheditview__getdocument)"},{"pos":[2169,2262],"content":"Retrieves a pointer to the related <bpt id=\"p1\">[</bpt>CRichEditDoc<ept id=\"p1\">](../../mfc/reference/cricheditdoc-class.md)</ept>.","source":"Retrieves a pointer to the related [CRichEditDoc](../../mfc/reference/cricheditdoc-class.md)."},{"pos":[2267,2342],"content":"<bpt id=\"p1\">[</bpt>CRichEditView::GetInPlaceActiveItem<ept id=\"p1\">](#cricheditview__getinplaceactiveitem)</ept>","source":"[CRichEditView::GetInPlaceActiveItem](#cricheditview__getinplaceactiveitem)"},{"content":"Retrieves the OLE item that is currently in-place active in the rich edit view.","pos":[2343,2422]},{"pos":[2427,2482],"content":"<bpt id=\"p1\">[</bpt>CRichEditView::GetMargins<ept id=\"p1\">](#cricheditview__getmargins)</ept>","source":"[CRichEditView::GetMargins](#cricheditview__getmargins)"},{"content":"Retrieves the margins for this rich edit view.","pos":[2483,2529]},{"pos":[2534,2591],"content":"<bpt id=\"p1\">[</bpt>CRichEditView::GetPageRect<ept id=\"p1\">](#cricheditview__getpagerect)</ept>","source":"[CRichEditView::GetPageRect](#cricheditview__getpagerect)"},{"content":"Retrieves the page rectangle for this rich edit view.","pos":[2592,2645]},{"pos":[2650,2709],"content":"<bpt id=\"p1\">[</bpt>CRichEditView::GetPaperSize<ept id=\"p1\">](#cricheditview__getpapersize)</ept>","source":"[CRichEditView::GetPaperSize](#cricheditview__getpapersize)"},{"content":"Retrieves the paper size for this rich edit view.","pos":[2710,2759]},{"pos":[2764,2843],"content":"<bpt id=\"p1\">[</bpt>CRichEditView::GetParaFormatSelection<ept id=\"p1\">](#cricheditview__getparaformatselection)</ept>","source":"[CRichEditView::GetParaFormatSelection](#cricheditview__getparaformatselection)"},{"content":"Retrieves the paragraph formatting attributes for the current selection.","pos":[2844,2916]},{"pos":[2921,2980],"content":"<bpt id=\"p1\">[</bpt>CRichEditView::GetPrintRect<ept id=\"p1\">](#cricheditview__getprintrect)</ept>","source":"[CRichEditView::GetPrintRect](#cricheditview__getprintrect)"},{"content":"Retrieves the print rectangle for this rich edit view.","pos":[2981,3035]},{"pos":[3040,3101],"content":"<bpt id=\"p1\">[</bpt>CRichEditView::GetPrintWidth<ept id=\"p1\">](#cricheditview__getprintwidth)</ept>","source":"[CRichEditView::GetPrintWidth](#cricheditview__getprintwidth)"},{"content":"Retrieves the print width for this rich edit view.","pos":[3102,3152]},{"pos":[3157,3222],"content":"<bpt id=\"p1\">[</bpt>CRichEditView::GetRichEditCtrl<ept id=\"p1\">](#cricheditview__getricheditctrl)</ept>","source":"[CRichEditView::GetRichEditCtrl](#cricheditview__getricheditctrl)"},{"content":"Retrieves the rich edit control.","pos":[3223,3255]},{"pos":[3260,3325],"content":"<bpt id=\"p1\">[</bpt>CRichEditView::GetSelectedItem<ept id=\"p1\">](#cricheditview__getselecteditem)</ept>","source":"[CRichEditView::GetSelectedItem](#cricheditview__getselecteditem)"},{"content":"Retrieves the selected item from the rich edit view.","pos":[3326,3378]},{"pos":[3383,3444],"content":"<bpt id=\"p1\">[</bpt>CRichEditView::GetTextLength<ept id=\"p1\">](#cricheditview__gettextlength)</ept>","source":"[CRichEditView::GetTextLength](#cricheditview__gettextlength)"},{"content":"Retrieves the length of the text in the rich edit view.","pos":[3445,3500]},{"pos":[3505,3570],"content":"<bpt id=\"p1\">[</bpt>CRichEditView::GetTextLengthEx<ept id=\"p1\">](#cricheditview__gettextlengthex)</ept>","source":"[CRichEditView::GetTextLengthEx](#cricheditview__gettextlengthex)"},{"content":"Retrieves the number of characters or bytes in the rich edit view.","pos":[3571,3637]},{"content":"Expanded flag list for method of determining the length.","pos":[3638,3694]},{"pos":[3699,3770],"content":"<bpt id=\"p1\">[</bpt>CRichEditView::InsertFileAsObject<ept id=\"p1\">](#cricheditview__insertfileasobject)</ept>","source":"[CRichEditView::InsertFileAsObject](#cricheditview__insertfileasobject)"},{"content":"Inserts a file as an OLE item.","pos":[3771,3801]},{"pos":[3806,3861],"content":"<bpt id=\"p1\">[</bpt>CRichEditView::InsertItem<ept id=\"p1\">](#cricheditview__insertitem)</ept>","source":"[CRichEditView::InsertItem](#cricheditview__insertitem)"},{"content":"Inserts a new item as an OLE item.","pos":[3862,3896]},{"pos":[3901,3968],"content":"<bpt id=\"p1\">[</bpt>CRichEditView::IsRichEditFormat<ept id=\"p1\">](#cricheditview__isricheditformat)</ept>","source":"[CRichEditView::IsRichEditFormat](#cricheditview__isricheditformat)"},{"content":"Tells whether the Clipboard contains data in a rich edit or text format.","pos":[3969,4041]},{"pos":[4046,4105],"content":"<bpt id=\"p1\">[</bpt>CRichEditView::OnCharEffect<ept id=\"p1\">](#cricheditview__onchareffect)</ept>","source":"[CRichEditView::OnCharEffect](#cricheditview__onchareffect)"},{"content":"Toggles the character formatting for the current selection.","pos":[4106,4165]},{"pos":[4170,4227],"content":"<bpt id=\"p1\">[</bpt>CRichEditView::OnParaAlign<ept id=\"p1\">](#cricheditview__onparaalign)</ept>","source":"[CRichEditView::OnParaAlign](#cricheditview__onparaalign)"},{"content":"Changes the alignment of paragraphs.","pos":[4228,4264]},{"pos":[4269,4340],"content":"<bpt id=\"p1\">[</bpt>CRichEditView::OnUpdateCharEffect<ept id=\"p1\">](#cricheditview__onupdatechareffect)</ept>","source":"[CRichEditView::OnUpdateCharEffect](#cricheditview__onupdatechareffect)"},{"content":"Updates the Command UI for character public member functions.","pos":[4341,4402]},{"pos":[4407,4476],"content":"<bpt id=\"p1\">[</bpt>CRichEditView::OnUpdateParaAlign<ept id=\"p1\">](#cricheditview__onupdateparaalign)</ept>","source":"[CRichEditView::OnUpdateParaAlign](#cricheditview__onupdateparaalign)"},{"content":"Updates the Command UI for paragraph public member functions.","pos":[4477,4538]},{"pos":[4543,4608],"content":"<bpt id=\"p1\">[</bpt>CRichEditView::PrintInsideRect<ept id=\"p1\">](#cricheditview__printinsiderect)</ept>","source":"[CRichEditView::PrintInsideRect](#cricheditview__printinsiderect)"},{"content":"Formats the specified text within the given rectangle.","pos":[4609,4663]},{"pos":[4668,4721],"content":"<bpt id=\"p1\">[</bpt>CRichEditView::PrintPage<ept id=\"p1\">](#cricheditview__printpage)</ept>","source":"[CRichEditView::PrintPage](#cricheditview__printpage)"},{"content":"Formats the specified text within the given page.","pos":[4722,4771]},{"pos":[4776,4837],"content":"<bpt id=\"p1\">[</bpt>CRichEditView::SetCharFormat<ept id=\"p1\">](#cricheditview__setcharformat)</ept>","source":"[CRichEditView::SetCharFormat](#cricheditview__setcharformat)"},{"content":"Sets the character formatting attributes for the current selection.","pos":[4838,4905]},{"pos":[4910,4965],"content":"<bpt id=\"p1\">[</bpt>CRichEditView::SetMargins<ept id=\"p1\">](#cricheditview__setmargins)</ept>","source":"[CRichEditView::SetMargins](#cricheditview__setmargins)"},{"content":"Sets the margins for this rich edit view.","pos":[4966,5007]},{"pos":[5012,5071],"content":"<bpt id=\"p1\">[</bpt>CRichEditView::SetPaperSize<ept id=\"p1\">](#cricheditview__setpapersize)</ept>","source":"[CRichEditView::SetPaperSize](#cricheditview__setpapersize)"},{"content":"Sets the paper size for this rich edit view.","pos":[5072,5116]},{"pos":[5121,5182],"content":"<bpt id=\"p1\">[</bpt>CRichEditView::SetParaFormat<ept id=\"p1\">](#cricheditview__setparaformat)</ept>","source":"[CRichEditView::SetParaFormat](#cricheditview__setparaformat)"},{"content":"Sets the paragraph formatting attributes for the current selection.","pos":[5183,5250]},{"pos":[5255,5314],"content":"<bpt id=\"p1\">[</bpt>CRichEditView::TextNotFound<ept id=\"p1\">](#cricheditview__textnotfound)</ept>","source":"[CRichEditView::TextNotFound](#cricheditview__textnotfound)"},{"content":"Resets the internal search state of the control.","pos":[5315,5363]},{"pos":[5374,5391],"content":"Protected Methods","linkify":"Protected Methods","nodes":[{"content":"Protected Methods","pos":[0,17]}]},{"content":"Name","pos":[5398,5402]},{"content":"Description","pos":[5403,5414]},{"pos":[5452,5519],"content":"<bpt id=\"p1\">[</bpt>CRichEditView::GetClipboardData<ept id=\"p1\">](#cricheditview__getclipboarddata)</ept>","source":"[CRichEditView::GetClipboardData](#cricheditview__getclipboarddata)"},{"content":"Retrieves a Clipboard object for a range in this rich edit view.","pos":[5520,5584]},{"pos":[5589,5652],"content":"<bpt id=\"p1\">[</bpt>CRichEditView::GetContextMenu<ept id=\"p1\">](#cricheditview__getcontextmenu)</ept>","source":"[CRichEditView::GetContextMenu](#cricheditview__getcontextmenu)"},{"content":"Retrieves a context menu to use on a right mouse-button down.","pos":[5653,5714]},{"pos":[5719,5774],"content":"<bpt id=\"p1\">[</bpt>CRichEditView::IsSelected<ept id=\"p1\">](#cricheditview__isselected)</ept>","source":"[CRichEditView::IsSelected](#cricheditview__isselected)"},{"content":"Indicates if the given OLE item is selected or not.","pos":[5775,5826]},{"pos":[5831,5886],"content":"<bpt id=\"p1\">[</bpt>CRichEditView::OnFindNext<ept id=\"p1\">](#cricheditview__onfindnext)</ept>","source":"[CRichEditView::OnFindNext](#cricheditview__onfindnext)"},{"content":"Finds the next occurrence of a substring.","pos":[5887,5928]},{"pos":[5933,5998],"content":"<bpt id=\"p1\">[</bpt>CRichEditView::OnInitialUpdate<ept id=\"p1\">](#cricheditview__oninitialupdate)</ept>","source":"[CRichEditView::OnInitialUpdate](#cricheditview__oninitialupdate)"},{"content":"Refreshes a view when it is first attached to a document.","pos":[5999,6056]},{"pos":[6061,6134],"content":"<bpt id=\"p1\">[</bpt>CRichEditView::OnPasteNativeObject<ept id=\"p1\">](#cricheditview__onpastenativeobject)</ept>","source":"[CRichEditView::OnPasteNativeObject](#cricheditview__onpastenativeobject)"},{"content":"Retrieves native data from an OLE item.","pos":[6135,6174]},{"pos":[6179,6246],"content":"<bpt id=\"p1\">[</bpt>CRichEditView::OnPrinterChanged<ept id=\"p1\">](#cricheditview__onprinterchanged)</ept>","source":"[CRichEditView::OnPrinterChanged](#cricheditview__onprinterchanged)"},{"content":"Sets the print characteristics to the given device.","pos":[6247,6298]},{"pos":[6303,6362],"content":"<bpt id=\"p1\">[</bpt>CRichEditView::OnReplaceAll<ept id=\"p1\">](#cricheditview__onreplaceall)</ept>","source":"[CRichEditView::OnReplaceAll](#cricheditview__onreplaceall)"},{"content":"Replaces all occurrences of a given string with a new string.","pos":[6363,6424]},{"pos":[6429,6488],"content":"<bpt id=\"p1\">[</bpt>CRichEditView::OnReplaceSel<ept id=\"p1\">](#cricheditview__onreplacesel)</ept>","source":"[CRichEditView::OnReplaceSel](#cricheditview__onreplacesel)"},{"content":"Replaces the current selection.","pos":[6489,6520]},{"pos":[6525,6588],"content":"<bpt id=\"p1\">[</bpt>CRichEditView::OnTextNotFound<ept id=\"p1\">](#cricheditview__ontextnotfound)</ept>","source":"[CRichEditView::OnTextNotFound](#cricheditview__ontextnotfound)"},{"content":"Handles user notification that the requested text was not found.","pos":[6589,6653]},{"pos":[6658,6723],"content":"<bpt id=\"p1\">[</bpt>CRichEditView::QueryAcceptData<ept id=\"p1\">](#cricheditview__queryacceptdata)</ept>","source":"[CRichEditView::QueryAcceptData](#cricheditview__queryacceptdata)"},{"pos":[6724,6775],"content":"Queries to see about the data on the <ph id=\"ph1\">`IDataObject`</ph>.","source":"Queries to see about the data on the `IDataObject`."},{"pos":[6780,6837],"content":"<bpt id=\"p1\">[</bpt>CRichEditView::WrapChanged<ept id=\"p1\">](#cricheditview__wrapchanged)</ept>","source":"[CRichEditView::WrapChanged](#cricheditview__wrapchanged)"},{"pos":[6838,6932],"content":"Adjusts the target output device for this rich edit view, based on the value of <ph id=\"ph1\">`m_nWordWrap`</ph>.","source":"Adjusts the target output device for this rich edit view, based on the value of `m_nWordWrap`."},{"pos":[6943,6962],"content":"Public Data Members","linkify":"Public Data Members","nodes":[{"content":"Public Data Members","pos":[0,19]}]},{"content":"Name","pos":[6969,6973]},{"content":"Description","pos":[6974,6985]},{"pos":[7023,7088],"content":"<bpt id=\"p1\">[</bpt>CRichEditView::m_nBulletIndent<ept id=\"p1\">](#cricheditview__m_nbulletindent)</ept>","source":"[CRichEditView::m_nBulletIndent](#cricheditview__m_nbulletindent)"},{"content":"Indicates the amount of indent for bullet lists.","pos":[7089,7137]},{"pos":[7142,7199],"content":"<bpt id=\"p1\">[</bpt>CRichEditView::m_nWordWrap<ept id=\"p1\">](#cricheditview__m_nwordwrap)</ept>","source":"[CRichEditView::m_nWordWrap](#cricheditview__m_nwordwrap)"},{"content":"Indicates the word wrap constraints.","pos":[7200,7236]},{"pos":[7246,7253],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"A \"rich edit control\" is a window in which the user can enter and edit text.","pos":[7257,7333]},{"content":"The text can be assigned character and paragraph formatting, and can include embedded OLE objects.","pos":[7334,7432]},{"content":"Rich edit controls provide a programming interface for formatting text.","pos":[7433,7504]},{"content":"However, an application must implement any user interface components necessary to make formatting operations available to the user.","pos":[7505,7636]},{"content":"<ph id=\"ph1\">`CRichEditView`</ph> maintains the text and formatting characteristic of text.","pos":[7643,7716],"source":"`CRichEditView` maintains the text and formatting characteristic of text."},{"content":"<ph id=\"ph1\">`CRichEditDoc`</ph> maintains the list of OLE client items which are in the view.","pos":[7717,7793],"source":"`CRichEditDoc` maintains the list of OLE client items which are in the view."},{"content":"<ph id=\"ph1\">`CRichEditCntrItem`</ph> provides container-side access to the OLE client item.","pos":[7794,7868],"source":"`CRichEditCntrItem` provides container-side access to the OLE client item."},{"pos":[7875,8100],"content":"This Windows Common control (and therefore the <bpt id=\"p1\">[</bpt>CRichEditCtrl<ept id=\"p1\">](../../mfc/reference/cricheditctrl-class.md)</ept> and related classes) is available only to programs running under Windows 95/98 and Windows NT versions 3.51 and later.","source":"This Windows Common control (and therefore the [CRichEditCtrl](../../mfc/reference/cricheditctrl-class.md) and related classes) is available only to programs running under Windows 95/98 and Windows NT versions 3.51 and later."},{"pos":[8107,8237],"content":"For an example of using a rich edit view in an MFC application, see the <bpt id=\"p1\">[</bpt>WORDPAD<ept id=\"p1\">](../../visual-cpp-samples.md)</ept> sample application.","source":"For an example of using a rich edit view in an MFC application, see the [WORDPAD](../../visual-cpp-samples.md) sample application."},{"pos":[8246,8267],"content":"Inheritance Hierarchy","linkify":"Inheritance Hierarchy","nodes":[{"content":"Inheritance Hierarchy","pos":[0,21]}]},{"pos":[8271,8318],"content":"<bpt id=\"p1\">[</bpt>CObject<ept id=\"p1\">](../../mfc/reference/cobject-class.md)</ept>","source":"[CObject](../../mfc/reference/cobject-class.md)"},{"pos":[8325,8378],"content":"<bpt id=\"p1\">[</bpt>CCmdTarget<ept id=\"p1\">](../../mfc/reference/ccmdtarget-class.md)</ept>","source":"[CCmdTarget](../../mfc/reference/ccmdtarget-class.md)"},{"pos":[8385,8426],"content":"<bpt id=\"p1\">[</bpt>CWnd<ept id=\"p1\">](../../mfc/reference/cwnd-class.md)</ept>","source":"[CWnd](../../mfc/reference/cwnd-class.md)"},{"pos":[8433,8476],"content":"<bpt id=\"p1\">[</bpt>CView<ept id=\"p1\">](../../mfc/reference/cview-class.md)</ept>","source":"[CView](../../mfc/reference/cview-class.md)"},{"pos":[8483,8534],"content":"<bpt id=\"p1\">[</bpt>CCtrlView<ept id=\"p1\">](../../mfc/reference/cctrlview-class.md)</ept>","source":"[CCtrlView](../../mfc/reference/cctrlview-class.md)"},{"pos":[8565,8577],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[8581,8602],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> afxrich.h","source":"**Header:** afxrich.h"},{"pos":[8612,8699],"content":"<bpt id=\"p1\">&lt;a name=\"cricheditview__adjustdialogposition\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CRichEditView::AdjustDialogPosition","linkify":"<a name=\"cricheditview__adjustdialogposition\"></a>  CRichEditView::AdjustDialogPosition","source":"<a name=\"cricheditview__adjustdialogposition\"></a>  CRichEditView::AdjustDialogPosition"},{"content":"Call this function to move the given dialog box so that it does not obscure the current selection.","pos":[8703,8801]},{"pos":[8868,8878],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"<bpt id=\"p1\">*</bpt>pDlg<ept id=\"p1\">*</ept>","pos":[8882,8888],"source":"*pDlg*"},{"content":"Pointer to a <ph id=\"ph1\">`CDialog`</ph> object.","pos":[8892,8922],"source":" Pointer to a `CDialog` object."},{"pos":[8932,8995],"content":"<bpt id=\"p1\">&lt;a name=\"cricheditview__canpaste\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CRichEditView::CanPaste","linkify":"<a name=\"cricheditview__canpaste\"></a>  CRichEditView::CanPaste","source":"<a name=\"cricheditview__canpaste\"></a>  CRichEditView::CanPaste"},{"content":"Call this function to determine if the Clipboard contains information that can be pasted into this rich edit view.","pos":[8999,9113]},{"pos":[9164,9176],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Nonzero if the Clipboard contains data in a format which this rich edit view can accept; otherwise, 0.","pos":[9180,9282]},{"pos":[9292,9365],"content":"<bpt id=\"p1\">&lt;a name=\"cricheditview__cricheditview\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CRichEditView::CRichEditView","linkify":"<a name=\"cricheditview__cricheditview\"></a>  CRichEditView::CRichEditView","source":"<a name=\"cricheditview__cricheditview\"></a>  CRichEditView::CRichEditView"},{"pos":[9369,9423],"content":"Call this function to create a <ph id=\"ph1\">`CRichEditView`</ph> object.","source":"Call this function to create a `CRichEditView` object."},{"pos":[9465,9526],"content":"<bpt id=\"p1\">&lt;a name=\"cricheditview__dopaste\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CRichEditView::DoPaste","linkify":"<a name=\"cricheditview__dopaste\"></a>  CRichEditView::DoPaste","source":"<a name=\"cricheditview__dopaste\"></a>  CRichEditView::DoPaste"},{"pos":[9530,9618],"content":"Call this function to paste the OLE item in <ph id=\"ph1\">`dataobj`</ph> into this rich edit document/view.","source":"Call this function to paste the OLE item in `dataobj` into this rich edit document/view."},{"pos":[9739,9749],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"The <bpt id=\"p1\">[</bpt>COleDataObject<ept id=\"p1\">](../../mfc/reference/coledataobject-class.md)</ept> containing the data to paste.","pos":[9766,9861],"source":" The [COleDataObject](../../mfc/reference/coledataobject-class.md) containing the data to paste."},{"content":"The desired Clipboard format.","pos":[9876,9905]},{"content":"The metafile that represents the item to be pasted.","pos":[9927,9978]},{"pos":[9988,9995],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[9999,10125],"content":"The framework calls this function as part of the default implementation of <bpt id=\"p1\">[</bpt>QueryAcceptData<ept id=\"p1\">](#cricheditview__queryacceptdata)</ept>.","source":"The framework calls this function as part of the default implementation of [QueryAcceptData](#cricheditview__queryacceptdata)."},{"content":"This function determines the type of paste based on the results of the handler for Paste Special.","pos":[10132,10229]},{"content":"If <ph id=\"ph1\">`cf`</ph> is 0, the new item uses the current iconic representation.","pos":[10230,10296],"source":" If `cf` is 0, the new item uses the current iconic representation."},{"content":"If <ph id=\"ph1\">`cf`</ph> is nonzero and <ph id=\"ph2\">`hMetaPict`</ph> is not <bpt id=\"p1\">**</bpt>NULL<ept id=\"p1\">**</ept>, the new item uses <ph id=\"ph3\">`hMetaPict`</ph> for its representation.","pos":[10297,10402],"source":" If `cf` is nonzero and `hMetaPict` is not **NULL**, the new item uses `hMetaPict` for its representation."},{"pos":[10412,10475],"content":"<bpt id=\"p1\">&lt;a name=\"cricheditview__findtext\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CRichEditView::FindText","linkify":"<a name=\"cricheditview__findtext\"></a>  CRichEditView::FindText","source":"<a name=\"cricheditview__findtext\"></a>  CRichEditView::FindText"},{"content":"Call this function to find the specified text and set it to be the current selection.","pos":[10479,10564]},{"pos":[10702,10712],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Contains the string to search for.","pos":[10730,10764]},{"content":"Indicates if the search is case sensitive.","pos":[10782,10824]},{"content":"Indicates if the search should match whole words only, not parts of words.","pos":[10842,10916]},{"content":"Indicates the direction of the search.","pos":[10934,10972]},{"content":"If <bpt id=\"p1\">**</bpt>TRUE<ept id=\"p1\">**</ept>, the search direction is toward the end of the buffer.","pos":[10973,11039],"source":" If **TRUE**, the search direction is toward the end of the buffer."},{"content":"If <bpt id=\"p1\">**</bpt>FALSE<ept id=\"p1\">**</ept>, the search direction is toward the beginning of the buffer.","pos":[11040,11113],"source":" If **FALSE**, the search direction is toward the beginning of the buffer."},{"pos":[11123,11135],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[11139,11192],"content":"Nonzero if the <ph id=\"ph1\">`lpszFind`</ph> text is found; otherwise 0.","source":"Nonzero if the `lpszFind` text is found; otherwise 0."},{"pos":[11202,11209],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This function displays the wait cursor during the find operation.","pos":[11213,11278]},{"pos":[11288,11295],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[11299,11383],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_MFCDocView#151<ept id=\"p2\">](../../mfc/codesnippet/cpp/cricheditview-class_1.cpp)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_MFCDocView#151](../../mfc/codesnippet/cpp/cricheditview-class_1.cpp)]"},{"pos":[11393,11468],"content":"<bpt id=\"p1\">&lt;a name=\"cricheditview__findtextsimple\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CRichEditView::FindTextSimple","linkify":"<a name=\"cricheditview__findtextsimple\"></a>  CRichEditView::FindTextSimple","source":"<a name=\"cricheditview__findtextsimple\"></a>  CRichEditView::FindTextSimple"},{"content":"Call this function to find the specified text and set it to be the current selection.","pos":[11472,11557]},{"pos":[11701,11711],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Contains the string to search for.","pos":[11729,11763]},{"content":"Indicates if the search is case sensitive.","pos":[11781,11823]},{"content":"Indicates if the search should match whole words only, not parts of words.","pos":[11841,11915]},{"content":"Indicates the direction of the search.","pos":[11933,11971]},{"content":"If <bpt id=\"p1\">**</bpt>TRUE<ept id=\"p1\">**</ept>, the search direction is toward the end of the buffer.","pos":[11972,12038],"source":" If **TRUE**, the search direction is toward the end of the buffer."},{"content":"If <bpt id=\"p1\">**</bpt>FALSE<ept id=\"p1\">**</ept>, the search direction is toward the beginning of the buffer.","pos":[12039,12112],"source":" If **FALSE**, the search direction is toward the beginning of the buffer."},{"pos":[12122,12134],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[12138,12191],"content":"Nonzero if the <ph id=\"ph1\">`lpszFind`</ph> text is found; otherwise 0.","source":"Nonzero if the `lpszFind` text is found; otherwise 0."},{"pos":[12201,12208],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[12213,12285],"content":"See the example for <bpt id=\"p1\">[</bpt>CRichEditView::FindText<ept id=\"p1\">](#cricheditview__findtext)</ept>.","source":"See the example for [CRichEditView::FindText](#cricheditview__findtext)."},{"pos":[12295,12386],"content":"<bpt id=\"p1\">&lt;a name=\"cricheditview__getcharformatselection\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CRichEditView::GetCharFormatSelection","linkify":"<a name=\"cricheditview__getcharformatselection\"></a>  CRichEditView::GetCharFormatSelection","source":"<a name=\"cricheditview__getcharformatselection\"></a>  CRichEditView::GetCharFormatSelection"},{"content":"Call this function to get the character formatting attributes of the current selection.","pos":[12390,12477]},{"pos":[12541,12553],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[12557,12719],"content":"A <bpt id=\"p1\">[</bpt>CHARFORMAT2<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb787883)</ept> structure which contains the character formatting attributes of the current selection.","source":"A [CHARFORMAT2](http://msdn.microsoft.com/library/windows/desktop/bb787883) structure which contains the character formatting attributes of the current selection."},{"pos":[12729,12736],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[12740,13008],"content":"For more information, see the <bpt id=\"p1\">[</bpt>EM_GETCHARFORMAT<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb788026)</ept> message and the <bpt id=\"p2\">[</bpt>CHARFORMAT2<ept id=\"p2\">](http://msdn.microsoft.com/library/windows/desktop/bb787883)</ept> structure in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"For more information, see the [EM_GETCHARFORMAT](http://msdn.microsoft.com/library/windows/desktop/bb788026) message and the [CHARFORMAT2](http://msdn.microsoft.com/library/windows/desktop/bb787883) structure in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"pos":[13018,13025],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[13029,13113],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_MFCDocView#152<ept id=\"p2\">](../../mfc/codesnippet/cpp/cricheditview-class_2.cpp)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_MFCDocView#152](../../mfc/codesnippet/cpp/cricheditview-class_2.cpp)]"},{"pos":[13123,13202],"content":"<bpt id=\"p1\">&lt;a name=\"cricheditview__getclipboarddata\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CRichEditView::GetClipboardData","linkify":"<a name=\"cricheditview__getclipboarddata\"></a>  CRichEditView::GetClipboardData","source":"<a name=\"cricheditview__getclipboarddata\"></a>  CRichEditView::GetClipboardData"},{"pos":[13206,13370],"content":"The framework calls this function as part of the processing of <bpt id=\"p1\">[</bpt>IRichEditOleCallback::GetClipboardData<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb774315)</ept>.","source":"The framework calls this function as part of the processing of [IRichEditOleCallback::GetClipboardData](http://msdn.microsoft.com/library/windows/desktop/bb774315)."},{"pos":[13540,13550],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Pointer to the <bpt id=\"p1\">[</bpt>CHARRANGE<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb787885)</ept> structure specifying the range of characters (and OLE items) to copy to the data object specified by <ph id=\"ph1\">`lplpdataobj`</ph>.","pos":[13566,13768],"source":" Pointer to the [CHARRANGE](http://msdn.microsoft.com/library/windows/desktop/bb787885) structure specifying the range of characters (and OLE items) to copy to the data object specified by `lplpdataobj`."},{"content":"Clipboard operation flag.","pos":[13787,13812]},{"content":"Can be one of these values.","pos":[13813,13840]},{"pos":[13848,13884],"content":"<bpt id=\"p1\">**</bpt>RECO_COPY<ept id=\"p1\">**</ept> Copy to the Clipboard.","source":"**RECO_COPY** Copy to the Clipboard."},{"pos":[13892,13926],"content":"<bpt id=\"p1\">**</bpt>RECO_CUT<ept id=\"p1\">**</ept> Cut to the Clipboard.","source":"**RECO_CUT** Cut to the Clipboard."},{"pos":[13934,13979],"content":"<bpt id=\"p1\">**</bpt>RECO_DRAG<ept id=\"p1\">**</ept> Drag operation (drag and drop).","source":"**RECO_DRAG** Drag operation (drag and drop)."},{"pos":[13987,14032],"content":"<bpt id=\"p1\">**</bpt>RECO_DROP<ept id=\"p1\">**</ept> Drop operation (drag and drop).","source":"**RECO_DROP** Drop operation (drag and drop)."},{"pos":[14040,14080],"content":"<bpt id=\"p1\">**</bpt>RECO_PASTE<ept id=\"p1\">**</ept> Paste from the Clipboard.","source":"**RECO_PASTE** Paste from the Clipboard."},{"pos":[14087,14354],"content":"`lpRichDataObj`  \nPointer to an [IDataObject](http://msdn.microsoft.com/library/windows/desktop/ms688421) object containing the Clipboard data from the rich edit control ( [IRichEditOle::GetClipboardData](http://msdn.microsoft.com/library/windows/desktop/bb774341)).","leadings":[""," "],"nodes":[{"content":"Pointer to an <bpt id=\"p1\">[</bpt>IDataObject<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms688421)</ept> object containing the Clipboard data from the rich edit control ( <bpt id=\"p2\">[</bpt>IRichEditOle::GetClipboardData<ept id=\"p2\">](http://msdn.microsoft.com/library/windows/desktop/bb774341)</ept>).","pos":[18,266],"source":"Pointer to an [IDataObject](http://msdn.microsoft.com/library/windows/desktop/ms688421) object containing the Clipboard data from the rich edit control ( [IRichEditOle::GetClipboardData](http://msdn.microsoft.com/library/windows/desktop/bb774341))."}]},{"pos":[14361,14586],"content":"`lplpdataobj`  \nPointer to the pointer variable that receives the address of the `IDataObject` object representing the range specified in the `lpchrg` parameter. The value of `lplpdataobj` is ignored if an error is returned.","leadings":[""," "],"nodes":[{"content":"Pointer to the pointer variable that receives the address of the `IDataObject` object representing the range specified in the `lpchrg` parameter. The value of `lplpdataobj` is ignored if an error is returned.","pos":[16,224],"nodes":[{"content":"Pointer to the pointer variable that receives the address of the <ph id=\"ph1\">`IDataObject`</ph> object representing the range specified in the <ph id=\"ph2\">`lpchrg`</ph> parameter.","pos":[0,145],"source":"Pointer to the pointer variable that receives the address of the `IDataObject` object representing the range specified in the `lpchrg` parameter."},{"content":"The value of <ph id=\"ph1\">`lplpdataobj`</ph> is ignored if an error is returned.","pos":[146,208],"source":" The value of `lplpdataobj` is ignored if an error is returned."}]}]},{"pos":[14596,14608],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"An <ph id=\"ph1\">`HRESULT`</ph> value reporting the success of the operation.","pos":[14612,14670],"source":"An `HRESULT` value reporting the success of the operation."},{"content":"For more information on <ph id=\"ph1\">`HRESULT`</ph>, see <bpt id=\"p1\">[</bpt>Structure of COM Error Codes<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms690088)</ept> in the <ph id=\"ph2\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","pos":[14671,14860],"source":" For more information on `HRESULT`, see [Structure of COM Error Codes](http://msdn.microsoft.com/library/windows/desktop/ms690088) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"pos":[14870,14877],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"If the return value indicates success, <bpt id=\"p1\">**</bpt>IRichEditOleCallback::GetClipboardData<ept id=\"p1\">**</ept> returns the <ph id=\"ph1\">`IDataObject`</ph> accessed by <ph id=\"ph2\">`lplpdataobj`</ph>; otherwise, it returns the one accessed by <ph id=\"ph3\">`lpRichDataObj`</ph>.","pos":[14881,15074],"source":"If the return value indicates success, **IRichEditOleCallback::GetClipboardData** returns the `IDataObject` accessed by `lplpdataobj`; otherwise, it returns the one accessed by `lpRichDataObj`."},{"content":"Override this function to supply your own Clipboard data.","pos":[15075,15132]},{"content":"The default implementation of this function returns <bpt id=\"p1\">**</bpt>E_NOTIMPL<ept id=\"p1\">**</ept>.","pos":[15133,15199],"source":" The default implementation of this function returns **E_NOTIMPL**."},{"content":"This is an advanced overridable.","pos":[15206,15238]},{"pos":[15245,15774],"content":"For more information, see <bpt id=\"p1\">[</bpt>IRichEditOle::GetClipboardData<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb774341)</ept>, <bpt id=\"p2\">[</bpt>IRichEditOleCallback::GetClipboardData<ept id=\"p2\">](http://msdn.microsoft.com/library/windows/desktop/bb774315)</ept>, and <bpt id=\"p3\">[</bpt>CHARRANGE<ept id=\"p3\">](http://msdn.microsoft.com/library/windows/desktop/bb787885)</ept> in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph> and see <bpt id=\"p4\">[</bpt>IDataObject<ept id=\"p4\">](http://msdn.microsoft.com/library/windows/desktop/ms688421)</ept> in the <ph id=\"ph2\">[!INCLUDE[winsdkshort](../../atl-mfc-shared/reference/includes/winsdkshort_md.md)]</ph>.","source":"For more information, see [IRichEditOle::GetClipboardData](http://msdn.microsoft.com/library/windows/desktop/bb774341), [IRichEditOleCallback::GetClipboardData](http://msdn.microsoft.com/library/windows/desktop/bb774315), and [CHARRANGE](http://msdn.microsoft.com/library/windows/desktop/bb787885) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)] and see [IDataObject](http://msdn.microsoft.com/library/windows/desktop/ms688421) in the [!INCLUDE[winsdkshort](../../atl-mfc-shared/reference/includes/winsdkshort_md.md)]."},{"pos":[15784,15859],"content":"<bpt id=\"p1\">&lt;a name=\"cricheditview__getcontextmenu\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CRichEditView::GetContextMenu","linkify":"<a name=\"cricheditview__getcontextmenu\"></a>  CRichEditView::GetContextMenu","source":"<a name=\"cricheditview__getcontextmenu\"></a>  CRichEditView::GetContextMenu"},{"pos":[15863,16025],"content":"The framework calls this function as part of the processing of <bpt id=\"p1\">[</bpt>IRichEditOleCallback::GetContextMenu<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb774317)</ept>.","source":"The framework calls this function as part of the processing of [IRichEditOleCallback::GetContextMenu](http://msdn.microsoft.com/library/windows/desktop/bb774317)."},{"pos":[16151,16161],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"<bpt id=\"p1\">*</bpt>seltyp<ept id=\"p1\">*</ept>","pos":[16165,16173],"source":"*seltyp*"},{"content":"The selection type.","pos":[16177,16196]},{"content":"The selection type values are described in the Remarks section.","pos":[16197,16260]},{"content":"Pointer to a <bpt id=\"p1\">**</bpt>OLEOBJECT<ept id=\"p1\">**</ept> structure specifying the first selected OLE object if the selection contains one or more OLE items.","pos":[16281,16407],"source":" Pointer to a **OLEOBJECT** structure specifying the first selected OLE object if the selection contains one or more OLE items."},{"content":"If the selection contains no items, <ph id=\"ph1\">`lpoleobj`</ph> is <bpt id=\"p1\">**</bpt>NULL<ept id=\"p1\">**</ept>.","pos":[16408,16467],"source":" If the selection contains no items, `lpoleobj` is **NULL**."},{"content":"The <bpt id=\"p1\">**</bpt>OLEOBJECT<ept id=\"p1\">**</ept> structure holds a pointer to an OLE object v-table.","pos":[16468,16537],"source":" The **OLEOBJECT** structure holds a pointer to an OLE object v-table."},{"content":"Pointer to a <bpt id=\"p1\">[</bpt>CHARRANGE<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb787885)</ept> structure containing the current selection.","pos":[16556,16684],"source":" Pointer to a [CHARRANGE](http://msdn.microsoft.com/library/windows/desktop/bb787885) structure containing the current selection."},{"pos":[16694,16706],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Handle to the context menu.","pos":[16710,16737]},{"pos":[16747,16754],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This function is a typical part of right mouse-button down processing.","pos":[16758,16828]},{"content":"The selection type can be any combination of the following flags:","pos":[16835,16900]},{"pos":[16908,16965],"content":"<ph id=\"ph1\">`SEL_EMPTY`</ph> Indicates that there is no current selection.","source":"`SEL_EMPTY` Indicates that there is no current selection."},{"pos":[16973,17035],"content":"<ph id=\"ph1\">`SEL_TEXT`</ph> Indicates that the current selection contains text.","source":"`SEL_TEXT` Indicates that the current selection contains text."},{"pos":[17043,17124],"content":"<ph id=\"ph1\">`SEL_OBJECT`</ph> Indicates that the current selection contains at least one OLE item.","source":"`SEL_OBJECT` Indicates that the current selection contains at least one OLE item."},{"pos":[17132,17226],"content":"<ph id=\"ph1\">`SEL_MULTICHAR`</ph> Indicates that the current selection contains more than one character of text.","source":"`SEL_MULTICHAR` Indicates that the current selection contains more than one character of text."},{"pos":[17234,17323],"content":"<ph id=\"ph1\">`SEL_MULTIOBJECT`</ph> Indicates that the current selection contains more than one OLE object.","source":"`SEL_MULTIOBJECT` Indicates that the current selection contains more than one OLE object."},{"content":"The default implementation returns <bpt id=\"p1\">**</bpt>NULL<ept id=\"p1\">**</ept>.","pos":[17330,17374],"source":"The default implementation returns **NULL**."},{"content":"This is an advanced overridable.","pos":[17375,17407]},{"pos":[17414,17674],"content":"For more information, see <bpt id=\"p1\">[</bpt>IRichEditOleCallback::GetContextMenu<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb774317)</ept> and <bpt id=\"p2\">[</bpt>CHARRANGE<ept id=\"p2\">](http://msdn.microsoft.com/library/windows/desktop/bb787885)</ept> in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"For more information, see [IRichEditOleCallback::GetContextMenu](http://msdn.microsoft.com/library/windows/desktop/bb774317) and [CHARRANGE](http://msdn.microsoft.com/library/windows/desktop/bb787885) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"pos":[17681,17818],"content":"For more information on the <bpt id=\"p1\">**</bpt>OLEOBJECT<ept id=\"p1\">**</ept> type, see the OLE Data Structures and Structure Allocation article in the <bpt id=\"p2\">*</bpt>OLE Knowledge Base<ept id=\"p2\">*</ept>.","source":"For more information on the **OLEOBJECT** type, see the OLE Data Structures and Structure Allocation article in the *OLE Knowledge Base*."},{"pos":[17828,17897],"content":"<bpt id=\"p1\">&lt;a name=\"cricheditview__getdocument\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CRichEditView::GetDocument","linkify":"<a name=\"cricheditview__getdocument\"></a>  CRichEditView::GetDocument","source":"<a name=\"cricheditview__getdocument\"></a>  CRichEditView::GetDocument"},{"pos":[17901,17985],"content":"Call this function to get a pointer to the <ph id=\"ph1\">`CRichEditDoc`</ph> associated with this view.","source":"Call this function to get a pointer to the `CRichEditDoc` associated with this view."},{"pos":[18048,18060],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[18064,18186],"content":"Pointer to a <bpt id=\"p1\">[</bpt>CRichEditDoc<ept id=\"p1\">](../../mfc/reference/cricheditdoc-class.md)</ept> object associated with your <ph id=\"ph1\">`CRichEditView`</ph> object.","source":"Pointer to a [CRichEditDoc](../../mfc/reference/cricheditdoc-class.md) object associated with your `CRichEditView` object."},{"pos":[18196,18283],"content":"<bpt id=\"p1\">&lt;a name=\"cricheditview__getinplaceactiveitem\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CRichEditView::GetInPlaceActiveItem","linkify":"<a name=\"cricheditview__getinplaceactiveitem\"></a>  CRichEditView::GetInPlaceActiveItem","source":"<a name=\"cricheditview__getinplaceactiveitem\"></a>  CRichEditView::GetInPlaceActiveItem"},{"pos":[18287,18394],"content":"Call this function to get the OLE item that is currently activated in place in this <ph id=\"ph1\">`CRichEditView`</ph> object.","source":"Call this function to get the OLE item that is currently activated in place in this `CRichEditView` object."},{"pos":[18471,18483],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[18487,18699],"content":"A pointer to the single, in-place active <bpt id=\"p1\">[</bpt>CRichEditCntrItem<ept id=\"p1\">](../../mfc/reference/cricheditcntritem-class.md)</ept> object in this rich edit view; <bpt id=\"p2\">**</bpt>NULL<ept id=\"p2\">**</ept> if there is no OLE item currently in the in-place active state.","source":"A pointer to the single, in-place active [CRichEditCntrItem](../../mfc/reference/cricheditcntritem-class.md) object in this rich edit view; **NULL** if there is no OLE item currently in the in-place active state."},{"pos":[18709,18776],"content":"<bpt id=\"p1\">&lt;a name=\"cricheditview__getmargins\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CRichEditView::GetMargins","linkify":"<a name=\"cricheditview__getmargins\"></a>  CRichEditView::GetMargins","source":"<a name=\"cricheditview__getmargins\"></a>  CRichEditView::GetMargins"},{"content":"Call this function to retrieve the current margins used in printing.","pos":[18780,18848]},{"pos":[18902,18914],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[18918,18971],"content":"The margins used in printing, measured in <ph id=\"ph1\">`MM_TWIPS`</ph>.","source":"The margins used in printing, measured in `MM_TWIPS`."},{"pos":[18981,19050],"content":"<bpt id=\"p1\">&lt;a name=\"cricheditview__getpagerect\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CRichEditView::GetPageRect","linkify":"<a name=\"cricheditview__getpagerect\"></a>  CRichEditView::GetPageRect","source":"<a name=\"cricheditview__getpagerect\"></a>  CRichEditView::GetPageRect"},{"content":"Call this function to get the dimensions of the page used in printing.","pos":[19054,19124]},{"pos":[19179,19191],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[19195,19259],"content":"The bounds of the page used in printing, measured in <ph id=\"ph1\">`MM_TWIPS`</ph>.","source":"The bounds of the page used in printing, measured in `MM_TWIPS`."},{"pos":[19269,19276],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This value is based on the paper size.","pos":[19280,19318]},{"pos":[19328,19399],"content":"<bpt id=\"p1\">&lt;a name=\"cricheditview__getpapersize\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CRichEditView::GetPaperSize","linkify":"<a name=\"cricheditview__getpapersize\"></a>  CRichEditView::GetPaperSize","source":"<a name=\"cricheditview__getpapersize\"></a>  CRichEditView::GetPaperSize"},{"content":"Call this function to retrieve the current paper size.","pos":[19403,19457]},{"pos":[19513,19525],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[19529,19592],"content":"The size of the paper used in printing, measured in <ph id=\"ph1\">`MM_TWIPS`</ph>.","source":"The size of the paper used in printing, measured in `MM_TWIPS`."},{"pos":[19602,19609],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[19613,19697],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_MFCDocView#153<ept id=\"p2\">](../../mfc/codesnippet/cpp/cricheditview-class_3.cpp)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_MFCDocView#153](../../mfc/codesnippet/cpp/cricheditview-class_3.cpp)]"},{"pos":[19707,19798],"content":"<bpt id=\"p1\">&lt;a name=\"cricheditview__getparaformatselection\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CRichEditView::GetParaFormatSelection","linkify":"<a name=\"cricheditview__getparaformatselection\"></a>  CRichEditView::GetParaFormatSelection","source":"<a name=\"cricheditview__getparaformatselection\"></a>  CRichEditView::GetParaFormatSelection"},{"content":"Call this function to get the paragraph formatting attributes of the current selection.","pos":[19802,19889]},{"pos":[19953,19965],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[19969,20131],"content":"A <bpt id=\"p1\">[</bpt>PARAFORMAT2<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb787942)</ept> structure which contains the paragraph formatting attributes of the current selection.","source":"A [PARAFORMAT2](http://msdn.microsoft.com/library/windows/desktop/bb787942) structure which contains the paragraph formatting attributes of the current selection."},{"pos":[20141,20148],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[20152,20412],"content":"For more information, see <bpt id=\"p1\">[</bpt>EM_GETPARAFORMAT<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb774182)</ept> message and <bpt id=\"p2\">[</bpt>PARAFORMAT2<ept id=\"p2\">](http://msdn.microsoft.com/library/windows/desktop/bb787942)</ept> structure in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"For more information, see [EM_GETPARAFORMAT](http://msdn.microsoft.com/library/windows/desktop/bb774182) message and [PARAFORMAT2](http://msdn.microsoft.com/library/windows/desktop/bb787942) structure in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"pos":[20422,20493],"content":"<bpt id=\"p1\">&lt;a name=\"cricheditview__getprintrect\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CRichEditView::GetPrintRect","linkify":"<a name=\"cricheditview__getprintrect\"></a>  CRichEditView::GetPrintRect","source":"<a name=\"cricheditview__getprintrect\"></a>  CRichEditView::GetPrintRect"},{"content":"Call this function to retrieve the bounds of the printing area within the page rectangle.","pos":[20497,20586]},{"pos":[20642,20654],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[20658,20728],"content":"The bounds of the image area used in printing, measured in <ph id=\"ph1\">`MM_TWIPS`</ph>.","source":"The bounds of the image area used in printing, measured in `MM_TWIPS`."},{"pos":[20738,20745],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[20749,20833],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_MFCDocView#154<ept id=\"p2\">](../../mfc/codesnippet/cpp/cricheditview-class_4.cpp)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_MFCDocView#154](../../mfc/codesnippet/cpp/cricheditview-class_4.cpp)]"},{"pos":[20843,20916],"content":"<bpt id=\"p1\">&lt;a name=\"cricheditview__getprintwidth\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CRichEditView::GetPrintWidth","linkify":"<a name=\"cricheditview__getprintwidth\"></a>  CRichEditView::GetPrintWidth","source":"<a name=\"cricheditview__getprintwidth\"></a>  CRichEditView::GetPrintWidth"},{"content":"Call this function to determine the width of the printing area.","pos":[20920,20983]},{"pos":[21038,21050],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[21054,21109],"content":"The width of the printing area, measured in <ph id=\"ph1\">`MM_TWIPS`</ph>.","source":"The width of the printing area, measured in `MM_TWIPS`."},{"pos":[21119,21196],"content":"<bpt id=\"p1\">&lt;a name=\"cricheditview__getricheditctrl\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CRichEditView::GetRichEditCtrl","linkify":"<a name=\"cricheditview__getricheditctrl\"></a>  CRichEditView::GetRichEditCtrl","source":"<a name=\"cricheditview__getricheditctrl\"></a>  CRichEditView::GetRichEditCtrl"},{"pos":[21200,21345],"content":"Call this function to retrieve the <bpt id=\"p1\">[</bpt>CRichEditCtrl<ept id=\"p1\">](../../mfc/reference/cricheditctrl-class.md)</ept> object associated with the <ph id=\"ph1\">`CRichEditView`</ph> object.","source":"Call this function to retrieve the [CRichEditCtrl](../../mfc/reference/cricheditctrl-class.md) object associated with the `CRichEditView` object."},{"pos":[21413,21425],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[21429,21470],"content":"The <ph id=\"ph1\">`CRichEditCtrl`</ph> object for this view.","source":"The `CRichEditCtrl` object for this view."},{"pos":[21480,21487],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[21492,21564],"content":"See the example for <bpt id=\"p1\">[</bpt>CRichEditView::FindText<ept id=\"p1\">](#cricheditview__findtext)</ept>.","source":"See the example for [CRichEditView::FindText](#cricheditview__findtext)."},{"pos":[21574,21651],"content":"<bpt id=\"p1\">&lt;a name=\"cricheditview__getselecteditem\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CRichEditView::GetSelectedItem","linkify":"<a name=\"cricheditview__getselecteditem\"></a>  CRichEditView::GetSelectedItem","source":"<a name=\"cricheditview__getselecteditem\"></a>  CRichEditView::GetSelectedItem"},{"pos":[21655,21780],"content":"Call this function to retrieve the OLE item (a <ph id=\"ph1\">`CRichEditCntrItem`</ph> object) currently selected in this <ph id=\"ph2\">`CRichEditView`</ph> object.","source":"Call this function to retrieve the OLE item (a `CRichEditCntrItem` object) currently selected in this `CRichEditView` object."},{"pos":[21852,21864],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[21868,22041],"content":"Pointer to a <bpt id=\"p1\">[</bpt>CRichEditCntrItem<ept id=\"p1\">](../../mfc/reference/cricheditcntritem-class.md)</ept> object selected in the <ph id=\"ph1\">`CRichEditView`</ph> object; <bpt id=\"p2\">**</bpt>NULL<ept id=\"p2\">**</ept> if no item is selected in this view.","source":"Pointer to a [CRichEditCntrItem](../../mfc/reference/cricheditcntritem-class.md) object selected in the `CRichEditView` object; **NULL** if no item is selected in this view."},{"pos":[22051,22124],"content":"<bpt id=\"p1\">&lt;a name=\"cricheditview__gettextlength\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CRichEditView::GetTextLength","linkify":"<a name=\"cricheditview__gettextlength\"></a>  CRichEditView::GetTextLength","source":"<a name=\"cricheditview__gettextlength\"></a>  CRichEditView::GetTextLength"},{"pos":[22128,22213],"content":"Call this function to retrieve the length of the text in this <ph id=\"ph1\">`CRichEditView`</ph> object.","source":"Call this function to retrieve the length of the text in this `CRichEditView` object."},{"pos":[22269,22281],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[22285,22339],"content":"The length of the text in this <ph id=\"ph1\">`CRichEditView`</ph> object.","source":"The length of the text in this `CRichEditView` object."},{"pos":[22349,22426],"content":"<bpt id=\"p1\">&lt;a name=\"cricheditview__gettextlengthex\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CRichEditView::GetTextLengthEx","linkify":"<a name=\"cricheditview__gettextlengthex\"></a>  CRichEditView::GetTextLengthEx","source":"<a name=\"cricheditview__gettextlengthex\"></a>  CRichEditView::GetTextLengthEx"},{"pos":[22430,22523],"content":"Call this member function to calculate the length of the text in this <ph id=\"ph1\">`CRichEditView`</ph> object.","source":"Call this member function to calculate the length of the text in this `CRichEditView` object."},{"pos":[22626,22636],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Value specifying the method to be used in determining the text length.","pos":[22653,22723]},{"content":"This member can be one or more of the values listed in the flags member of <bpt id=\"p1\">[</bpt>GETTEXTLENGTHEX<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb787915)</ept> described in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","pos":[22724,22946],"source":" This member can be one or more of the values listed in the flags member of [GETTEXTLENGTHEX](http://msdn.microsoft.com/library/windows/desktop/bb787915) described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"content":"Code page for translation (CP_ACP for ANSI Code Page, 1200 for Unicode).","pos":[22968,23040]},{"pos":[23050,23062],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The number of characters or bytes in the edit control.","pos":[23066,23120]},{"content":"If incompatible flags were set in <ph id=\"ph1\">`dwFlags`</ph>, this member function returns <ph id=\"ph2\">`E_INVALIDARG`</ph>.","pos":[23121,23210],"source":" If incompatible flags were set in `dwFlags`, this member function returns `E_INVALIDARG`."},{"pos":[23220,23227],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"<ph id=\"ph1\">`GetTextLengthEx`</ph> provides additional ways of determining the length of the text.","pos":[23231,23312],"source":"`GetTextLengthEx` provides additional ways of determining the length of the text."},{"content":"It supports the Rich Edit 2.0 functionality.","pos":[23313,23357]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>About Rich Edit Controls<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb787873)</ept> in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","pos":[23358,23530],"source":" For more information, see [About Rich Edit Controls](http://msdn.microsoft.com/library/windows/desktop/bb787873) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"pos":[23540,23623],"content":"<bpt id=\"p1\">&lt;a name=\"cricheditview__insertfileasobject\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CRichEditView::InsertFileAsObject","linkify":"<a name=\"cricheditview__insertfileasobject\"></a>  CRichEditView::InsertFileAsObject","source":"<a name=\"cricheditview__insertfileasobject\"></a>  CRichEditView::InsertFileAsObject"},{"pos":[23627,23779],"content":"Call this function to insert the specified file (as a <bpt id=\"p1\">[</bpt>CRichEditCntrItem<ept id=\"p1\">](../../mfc/reference/cricheditcntritem-class.md)</ept> object) into a rich edit view.","source":"Call this function to insert the specified file (as a [CRichEditCntrItem](../../mfc/reference/cricheditcntritem-class.md) object) into a rich edit view."},{"pos":[23851,23861],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"String containing the name of the file to be inserted.","pos":[23883,23937]},{"pos":[23947,24014],"content":"<bpt id=\"p1\">&lt;a name=\"cricheditview__insertitem\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CRichEditView::InsertItem","linkify":"<a name=\"cricheditview__insertitem\"></a>  CRichEditView::InsertItem","source":"<a name=\"cricheditview__insertitem\"></a>  CRichEditView::InsertItem"},{"pos":[24018,24146],"content":"Call this function to insert a <bpt id=\"p1\">[</bpt>CRichEditCntrItem<ept id=\"p1\">](../../mfc/reference/cricheditcntritem-class.md)</ept> object into a rich edit view.","source":"Call this function to insert a [CRichEditCntrItem](../../mfc/reference/cricheditcntritem-class.md) object into a rich edit view."},{"pos":[24217,24227],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Pointer to the item to be inserted.","pos":[24242,24277]},{"pos":[24287,24299],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[24303,24362],"content":"An <ph id=\"ph1\">`HRESULT`</ph> value indicating the success of the insertion.","source":"An `HRESULT` value indicating the success of the insertion."},{"pos":[24372,24379],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[24383,24572],"content":"For more information on <ph id=\"ph1\">`HRESULT`</ph>, see <bpt id=\"p1\">[</bpt>Structure of COM Error Codes<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms690088)</ept> in the <ph id=\"ph2\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"For more information on `HRESULT`, see [Structure of COM Error Codes](http://msdn.microsoft.com/library/windows/desktop/ms690088) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"pos":[24582,24661],"content":"<bpt id=\"p1\">&lt;a name=\"cricheditview__isricheditformat\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CRichEditView::IsRichEditFormat","linkify":"<a name=\"cricheditview__isricheditformat\"></a>  CRichEditView::IsRichEditFormat","source":"<a name=\"cricheditview__isricheditformat\"></a>  CRichEditView::IsRichEditFormat"},{"pos":[24665,24781],"content":"Call this function to determine if <ph id=\"ph1\">`cf`</ph> is a Clipboard format which is text, rich text, or rich text with OLE items.","source":"Call this function to determine if `cf` is a Clipboard format which is text, rich text, or rich text with OLE items."},{"pos":[24861,24871],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"The Clipboard format of interest.","pos":[24883,24916]},{"pos":[24926,24938],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[24942,24998],"content":"Nonzero if <ph id=\"ph1\">`cf`</ph> is a rich edit or text Clipboard format.","source":"Nonzero if `cf` is a rich edit or text Clipboard format."},{"pos":[25008,25075],"content":"<bpt id=\"p1\">&lt;a name=\"cricheditview__isselected\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CRichEditView::IsSelected","linkify":"<a name=\"cricheditview__isselected\"></a>  CRichEditView::IsSelected","source":"<a name=\"cricheditview__isselected\"></a>  CRichEditView::IsSelected"},{"content":"Call this function to determine if the specified OLE item is currently selected in this view.","pos":[25079,25172]},{"pos":[25256,25266],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Pointer to an object in the view.","pos":[25284,25317]},{"pos":[25327,25339],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Nonzero if the object is selected; otherwise 0.","pos":[25343,25390]},{"pos":[25400,25407],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Override this function if your derived view class has a different method for handling selection of OLE items.","pos":[25411,25520]},{"pos":[25530,25607],"content":"<bpt id=\"p1\">&lt;a name=\"cricheditview__m_nbulletindent\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CRichEditView::m_nBulletIndent","linkify":"<a name=\"cricheditview__m_nbulletindent\"></a>  CRichEditView::m_nBulletIndent","source":"<a name=\"cricheditview__m_nbulletindent\"></a>  CRichEditView::m_nBulletIndent"},{"content":"The indentation for bullet items in a list; by default, 720 units, which is 1/2 inch.","pos":[25611,25696]},{"pos":[25744,25813],"content":"<bpt id=\"p1\">&lt;a name=\"cricheditview__m_nwordwrap\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CRichEditView::m_nWordWrap","linkify":"<a name=\"cricheditview__m_nwordwrap\"></a>  CRichEditView::m_nWordWrap","source":"<a name=\"cricheditview__m_nwordwrap\"></a>  CRichEditView::m_nWordWrap"},{"content":"Indicates the type of word wrap for this rich edit view.","pos":[25817,25873]},{"pos":[25917,25924],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"One of the following values:","pos":[25928,25956]},{"pos":[25964,26012],"content":"<ph id=\"ph1\">`WrapNone`</ph> Indicates no automatic word wrapping.","source":"`WrapNone` Indicates no automatic word wrapping."},{"pos":[26020,26092],"content":"<ph id=\"ph1\">`WrapToWindow`</ph> Indicates word wrapping based on the width of the window.","source":"`WrapToWindow` Indicates word wrapping based on the width of the window."},{"pos":[26100,26195],"content":"<ph id=\"ph1\">`WrapToTargetDevice`</ph> Indicates word wrapping based on the characteristics of the target device.","source":"`WrapToTargetDevice` Indicates word wrapping based on the characteristics of the target device."},{"pos":[26205,26212],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[26217,26295],"content":"See the example for <bpt id=\"p1\">[</bpt>CRichEditView::WrapChanged<ept id=\"p1\">](#cricheditview__wrapchanged)</ept>.","source":"See the example for [CRichEditView::WrapChanged](#cricheditview__wrapchanged)."},{"pos":[26305,26376],"content":"<bpt id=\"p1\">&lt;a name=\"cricheditview__onchareffect\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CRichEditView::OnCharEffect","linkify":"<a name=\"cricheditview__onchareffect\"></a>  CRichEditView::OnCharEffect","source":"<a name=\"cricheditview__onchareffect\"></a>  CRichEditView::OnCharEffect"},{"content":"Call this function to toggle the character formatting effects for the current selection.","pos":[26380,26468]},{"pos":[26553,26563],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"The character formatting effects to modify in the current selection.","pos":[26579,26647]},{"content":"The desired list of character formatting effects to toggle.","pos":[26668,26727]},{"pos":[26737,26744],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Each call to this function toggles the specified formatting effects for the current selection.","pos":[26748,26842]},{"pos":[26849,27110],"content":"For more information on the <ph id=\"ph1\">`dwMask`</ph> and <ph id=\"ph2\">`dwEffect`</ph> parameters and their potential values, see the corresponding data members of <bpt id=\"p1\">[</bpt>CHARFORMAT<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb787881)</ept> in the <ph id=\"ph3\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"For more information on the `dwMask` and `dwEffect` parameters and their potential values, see the corresponding data members of [CHARFORMAT](http://msdn.microsoft.com/library/windows/desktop/bb787881) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"pos":[27120,27127],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[27131,27215],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_MFCDocView#155<ept id=\"p2\">](../../mfc/codesnippet/cpp/cricheditview-class_5.cpp)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_MFCDocView#155](../../mfc/codesnippet/cpp/cricheditview-class_5.cpp)]"},{"pos":[27225,27292],"content":"<bpt id=\"p1\">&lt;a name=\"cricheditview__onfindnext\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CRichEditView::OnFindNext","linkify":"<a name=\"cricheditview__onfindnext\"></a>  CRichEditView::OnFindNext","source":"<a name=\"cricheditview__onfindnext\"></a>  CRichEditView::OnFindNext"},{"content":"Called by the framework when processing commands from the Find/Replace dialog box.","pos":[27296,27378]},{"pos":[27505,27515],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"The string to find.","pos":[27533,27552]},{"content":"The direction to search: <bpt id=\"p1\">**</bpt>TRUE<ept id=\"p1\">**</ept> indicates down; <bpt id=\"p2\">**</bpt>FALSE<ept id=\"p2\">**</ept>, up.","pos":[27570,27634],"source":" The direction to search: **TRUE** indicates down; **FALSE**, up."},{"content":"Indicates whether the search is to be case sensitive.","pos":[27652,27705]},{"content":"Indicates whether the search is to match whole words only or not.","pos":[27723,27788]},{"pos":[27798,27805],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Call this function to find text within the <ph id=\"ph1\">`CRichEditView`</ph>.","pos":[27809,27868],"source":"Call this function to find text within the `CRichEditView`."},{"content":"Override this function to alter search characteristics for your derived view class.","pos":[27869,27952]},{"pos":[27962,28039],"content":"<bpt id=\"p1\">&lt;a name=\"cricheditview__oninitialupdate\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CRichEditView::OnInitialUpdate","linkify":"<a name=\"cricheditview__oninitialupdate\"></a>  CRichEditView::OnInitialUpdate","source":"<a name=\"cricheditview__oninitialupdate\"></a>  CRichEditView::OnInitialUpdate"},{"content":"Called by the framework after the view is first attached to the document, but before the view is initially displayed.","pos":[28043,28160]},{"pos":[28217,28224],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The default implementation of this function calls the <bpt id=\"p1\">[</bpt>CView::OnUpdate<ept id=\"p1\">](../../mfc/reference/cview-class.md#cview__onupdate)</ept> member function with no hint information (that is, using the default values of 0 for the <ph id=\"ph1\">`lHint`</ph> parameter and <bpt id=\"p2\">**</bpt>NULL<ept id=\"p2\">**</ept> for the <ph id=\"ph2\">`pHint`</ph> parameter).","pos":[28228,28499],"source":"The default implementation of this function calls the [CView::OnUpdate](../../mfc/reference/cview-class.md#cview__onupdate) member function with no hint information (that is, using the default values of 0 for the `lHint` parameter and **NULL** for the `pHint` parameter)."},{"content":"Override this function to perform any one-time initialization that requires information about the document.","pos":[28500,28607]},{"content":"For example, if your application has fixed-sized documents, you can use this function to initialize a view's scrolling limits based on the document size.","pos":[28608,28761]},{"content":"If your application supports variable-sized documents, use <ph id=\"ph1\">`OnUpdate`</ph> to update the scrolling limits every time the document changes.","pos":[28762,28895],"source":" If your application supports variable-sized documents, use `OnUpdate` to update the scrolling limits every time the document changes."},{"pos":[28905,28912],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[28917,28995],"content":"See the example for <bpt id=\"p1\">[</bpt>CRichEditView::m_nWordWrap<ept id=\"p1\">](#cricheditview__m_nwordwrap)</ept>.","source":"See the example for [CRichEditView::m_nWordWrap](#cricheditview__m_nwordwrap)."},{"pos":[29005,29090],"content":"<bpt id=\"p1\">&lt;a name=\"cricheditview__onpastenativeobject\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CRichEditView::OnPasteNativeObject","linkify":"<a name=\"cricheditview__onpastenativeobject\"></a>  CRichEditView::OnPasteNativeObject","source":"<a name=\"cricheditview__onpastenativeobject\"></a>  CRichEditView::OnPasteNativeObject"},{"content":"Use this function to load native data from an embedded item.","pos":[29094,29154]},{"pos":[29230,29240],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"<bpt id=\"p1\">*</bpt>lpStg<ept id=\"p1\">*</ept>","pos":[29244,29251],"source":"*lpStg*"},{"content":"Pointer to an <bpt id=\"p1\">[</bpt>IStorage<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/aa380015)</ept> object.","pos":[29255,29347],"source":" Pointer to an [IStorage](http://msdn.microsoft.com/library/windows/desktop/aa380015) object."},{"pos":[29357,29369],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Nonzero if successful; otherwise, 0;","pos":[29373,29409]},{"pos":[29419,29426],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Typically, you would do this by creating a <bpt id=\"p1\">[</bpt>COleStreamFile<ept id=\"p1\">](../../mfc/reference/colestreamfile-class.md)</ept> around the <ph id=\"ph1\">`IStorage`</ph>.","pos":[29430,29557],"source":"Typically, you would do this by creating a [COleStreamFile](../../mfc/reference/colestreamfile-class.md) around the `IStorage`."},{"content":"The <ph id=\"ph1\">`COleStreamFile`</ph> can be attached to an archive and <bpt id=\"p1\">[</bpt>CObject::Serialize<ept id=\"p1\">](../../mfc/reference/cobject-class.md#cobject__serialize)</ept> called to load the data.","pos":[29558,29715],"source":" The `COleStreamFile` can be attached to an archive and [CObject::Serialize](../../mfc/reference/cobject-class.md#cobject__serialize) called to load the data."},{"content":"This is an advanced overridable.","pos":[29722,29754]},{"pos":[29761,29917],"content":"For more information, see <bpt id=\"p1\">[</bpt>IStorage<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/aa380015)</ept> in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"For more information, see [IStorage](http://msdn.microsoft.com/library/windows/desktop/aa380015) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"pos":[29927,29996],"content":"<bpt id=\"p1\">&lt;a name=\"cricheditview__onparaalign\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CRichEditView::OnParaAlign","linkify":"<a name=\"cricheditview__onparaalign\"></a>  CRichEditView::OnParaAlign","source":"<a name=\"cricheditview__onparaalign\"></a>  CRichEditView::OnParaAlign"},{"content":"Call this function to change the paragraph alignment for the selected paragraphs.","pos":[30000,30081]},{"pos":[30137,30147],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Desired paragraph alignment.","pos":[30163,30191]},{"content":"One of the following values:","pos":[30192,30220]},{"pos":[30228,30281],"content":"<ph id=\"ph1\">`PFA_LEFT`</ph> Align the paragraphs with the left margin.","source":"`PFA_LEFT` Align the paragraphs with the left margin."},{"pos":[30289,30344],"content":"<ph id=\"ph1\">`PFA_RIGHT`</ph> Align the paragraphs with the right margin.","source":"`PFA_RIGHT` Align the paragraphs with the right margin."},{"pos":[30352,30407],"content":"<ph id=\"ph1\">`PFA_CENTER`</ph> Center the paragraphs between the margins.","source":"`PFA_CENTER` Center the paragraphs between the margins."},{"pos":[30417,30424],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[30428,30512],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_MFCDocView#156<ept id=\"p2\">](../../mfc/codesnippet/cpp/cricheditview-class_6.cpp)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_MFCDocView#156](../../mfc/codesnippet/cpp/cricheditview-class_6.cpp)]"},{"pos":[30522,30601],"content":"<bpt id=\"p1\">&lt;a name=\"cricheditview__onprinterchanged\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CRichEditView::OnPrinterChanged","linkify":"<a name=\"cricheditview__onprinterchanged\"></a>  CRichEditView::OnPrinterChanged","source":"<a name=\"cricheditview__onprinterchanged\"></a>  CRichEditView::OnPrinterChanged"},{"content":"Override this function to change characteristics for this rich edit view when the printer changes.","pos":[30605,30703]},{"pos":[30781,30791],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"A <bpt id=\"p1\">[</bpt>CDC<ept id=\"p1\">](../../mfc/reference/cdc-class.md)</ept> object for the new printer.","pos":[30810,30879],"source":" A [CDC](../../mfc/reference/cdc-class.md) object for the new printer."},{"pos":[30889,30896],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The default implementation sets the paper size to the physical height and width for the output device (printer).","pos":[30900,31012]},{"content":"If there is no device context associated with <ph id=\"ph1\">`dcPrinter`</ph>, the default implementation sets the paper size to 8.5 by 11 inches.","pos":[31013,31139],"source":" If there is no device context associated with `dcPrinter`, the default implementation sets the paper size to 8.5 by 11 inches."},{"pos":[31149,31220],"content":"<bpt id=\"p1\">&lt;a name=\"cricheditview__onreplaceall\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CRichEditView::OnReplaceAll","linkify":"<a name=\"cricheditview__onreplaceall\"></a>  CRichEditView::OnReplaceAll","source":"<a name=\"cricheditview__onreplaceall\"></a>  CRichEditView::OnReplaceAll"},{"content":"Called by the framework when processing Replace All commands from the Replace dialog box.","pos":[31224,31313]},{"pos":[31451,31461],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"The text to be replaced.","pos":[31479,31503]},{"content":"The replacement text.","pos":[31527,31548]},{"content":"Indicates if the search is case sensitive.","pos":[31566,31608]},{"content":"Indicates if the search must select whole words or not.","pos":[31626,31681]},{"pos":[31691,31698],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Call this function to replace all occurrences of some given text with another string.","pos":[31702,31787]},{"content":"Override this function to alter search characteristics for this view.","pos":[31788,31857]},{"pos":[31867,31874],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[31879,31951],"content":"See the example for <bpt id=\"p1\">[</bpt>CRichEditView::FindText<ept id=\"p1\">](#cricheditview__findtext)</ept>.","source":"See the example for [CRichEditView::FindText](#cricheditview__findtext)."},{"pos":[31961,32032],"content":"<bpt id=\"p1\">&lt;a name=\"cricheditview__onreplacesel\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CRichEditView::OnReplaceSel","linkify":"<a name=\"cricheditview__onreplacesel\"></a>  CRichEditView::OnReplaceSel","source":"<a name=\"cricheditview__onreplacesel\"></a>  CRichEditView::OnReplaceSel"},{"content":"Called by the framework when processing Replace commands from the Replace dialog box.","pos":[32036,32121]},{"pos":[32277,32287],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"The text to be replaced.","pos":[32305,32329]},{"content":"Indicates the direction of the search: <bpt id=\"p1\">**</bpt>TRUE<ept id=\"p1\">**</ept> is down; <bpt id=\"p2\">**</bpt>FALSE<ept id=\"p2\">**</ept>, up.","pos":[32347,32418],"source":" Indicates the direction of the search: **TRUE** is down; **FALSE**, up."},{"content":"Indicates if the search is case sensitive.","pos":[32436,32478]},{"content":"Indicates if the search must select whole words or not.","pos":[32496,32551]},{"content":"The replacement text.","pos":[32575,32596]},{"pos":[32606,32613],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Call this function to replace one occurrence of some given text with another string.","pos":[32617,32701]},{"content":"Override this function to alter search characteristics for this view.","pos":[32702,32771]},{"pos":[32781,32856],"content":"<bpt id=\"p1\">&lt;a name=\"cricheditview__ontextnotfound\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CRichEditView::OnTextNotFound","linkify":"<a name=\"cricheditview__ontextnotfound\"></a>  CRichEditView::OnTextNotFound","source":"<a name=\"cricheditview__ontextnotfound\"></a>  CRichEditView::OnTextNotFound"},{"content":"Called by the framework whenever a search fails.","pos":[32860,32908]},{"pos":[32980,32990],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"The text which was not found.","pos":[33008,33037]},{"pos":[33047,33054],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[33058,33196],"content":"Override this function to change the output notification from a <bpt id=\"p1\">[</bpt>MessageBeep<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms680356)</ept>.","source":"Override this function to change the output notification from a [MessageBeep](http://msdn.microsoft.com/library/windows/desktop/ms680356)."},{"pos":[33203,33362],"content":"For more information, see <bpt id=\"p1\">[</bpt>MessageBeep<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms680356)</ept> in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"For more information, see [MessageBeep](http://msdn.microsoft.com/library/windows/desktop/ms680356) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"pos":[33372,33379],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[33383,33467],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_MFCDocView#157<ept id=\"p2\">](../../mfc/codesnippet/cpp/cricheditview-class_7.cpp)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_MFCDocView#157](../../mfc/codesnippet/cpp/cricheditview-class_7.cpp)]"},{"pos":[33477,33560],"content":"<bpt id=\"p1\">&lt;a name=\"cricheditview__onupdatechareffect\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CRichEditView::OnUpdateCharEffect","linkify":"<a name=\"cricheditview__onupdatechareffect\"></a>  CRichEditView::OnUpdateCharEffect","source":"<a name=\"cricheditview__onupdatechareffect\"></a>  CRichEditView::OnUpdateCharEffect"},{"content":"The framework calls this function to update the command UI for character effect commands.","pos":[33564,33653]},{"pos":[33766,33776],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Pointer to a <bpt id=\"p1\">[</bpt>CCmdUI<ept id=\"p1\">](../../mfc/reference/ccmdui-class.md)</ept> object.","pos":[33792,33858],"source":" Pointer to a [CCmdUI](../../mfc/reference/ccmdui-class.md) object."},{"content":"Indicates the character formatting mask.","pos":[33877,33917]},{"content":"Indicates the character formatting effect.","pos":[33938,33980]},{"pos":[33990,33997],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The mask <ph id=\"ph1\">`dwMask`</ph> specifies which character formatting attributes to check.","pos":[34001,34076],"source":"The mask `dwMask` specifies which character formatting attributes to check."},{"content":"The flags <ph id=\"ph1\">`dwEffect`</ph> list the character formatting attributes to set/clear.","pos":[34077,34152],"source":" The flags `dwEffect` list the character formatting attributes to set/clear."},{"pos":[34159,34420],"content":"For more information on the <ph id=\"ph1\">`dwMask`</ph> and <ph id=\"ph2\">`dwEffect`</ph> parameters and their potential values, see the corresponding data members of <bpt id=\"p1\">[</bpt>CHARFORMAT<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb787881)</ept> in the <ph id=\"ph3\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"For more information on the `dwMask` and `dwEffect` parameters and their potential values, see the corresponding data members of [CHARFORMAT](http://msdn.microsoft.com/library/windows/desktop/bb787881) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"pos":[34430,34437],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[34441,34525],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_MFCDocView#158<ept id=\"p2\">](../../mfc/codesnippet/cpp/cricheditview-class_8.cpp)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_MFCDocView#158](../../mfc/codesnippet/cpp/cricheditview-class_8.cpp)]"},{"pos":[34535,34616],"content":"<bpt id=\"p1\">&lt;a name=\"cricheditview__onupdateparaalign\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CRichEditView::OnUpdateParaAlign","linkify":"<a name=\"cricheditview__onupdateparaalign\"></a>  CRichEditView::OnUpdateParaAlign","source":"<a name=\"cricheditview__onupdateparaalign\"></a>  CRichEditView::OnUpdateParaAlign"},{"content":"The framework calls this function to update the command UI for paragraph effect commands.","pos":[34620,34709]},{"pos":[34798,34808],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Pointer to a <bpt id=\"p1\">[</bpt>CCmdUI<ept id=\"p1\">](../../mfc/reference/ccmdui-class.md)</ept> object.","pos":[34824,34890],"source":" Pointer to a [CCmdUI](../../mfc/reference/ccmdui-class.md) object."},{"content":"The paragraph alignment to check.","pos":[34909,34942]},{"content":"One of the following values:","pos":[34943,34971]},{"pos":[34979,35032],"content":"<ph id=\"ph1\">`PFA_LEFT`</ph> Align the paragraphs with the left margin.","source":"`PFA_LEFT` Align the paragraphs with the left margin."},{"pos":[35040,35095],"content":"<ph id=\"ph1\">`PFA_RIGHT`</ph> Align the paragraphs with the right margin.","source":"`PFA_RIGHT` Align the paragraphs with the right margin."},{"pos":[35103,35158],"content":"<ph id=\"ph1\">`PFA_CENTER`</ph> Center the paragraphs between the margins.","source":"`PFA_CENTER` Center the paragraphs between the margins."},{"pos":[35168,35175],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[35179,35263],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_MFCDocView#159<ept id=\"p2\">](../../mfc/codesnippet/cpp/cricheditview-class_9.cpp)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_MFCDocView#159](../../mfc/codesnippet/cpp/cricheditview-class_9.cpp)]"},{"pos":[35273,35350],"content":"<bpt id=\"p1\">&lt;a name=\"cricheditview__printinsiderect\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CRichEditView::PrintInsideRect","linkify":"<a name=\"cricheditview__printinsiderect\"></a>  CRichEditView::PrintInsideRect","source":"<a name=\"cricheditview__printinsiderect\"></a>  CRichEditView::PrintInsideRect"},{"pos":[35354,35483],"content":"Call this function to format a range of text in a rich edit control to fit within <bpt id=\"p1\">*</bpt>rectLayout<ept id=\"p1\">*</ept> for the device specified by <ph id=\"ph1\">`pDC`</ph>.","source":"Call this function to format a range of text in a rich edit control to fit within *rectLayout* for the device specified by `pDC`."},{"pos":[35636,35646],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Pointer to a device context for the output area.","pos":[35659,35707]},{"content":"<bpt id=\"p1\">*</bpt>rectLayout<ept id=\"p1\">*</ept>","pos":[35714,35726],"source":"*rectLayout*"},{"content":"<bpt id=\"p1\"> [</bpt>RECT<ept id=\"p1\">](../../mfc/reference/rect-structure1.md)</ept> or <bpt id=\"p2\">[</bpt>CRect<ept id=\"p2\">](../../atl-mfc-shared/reference/crect-class.md)</ept> which defines the output area.","pos":[35729,35865],"source":" [RECT](../../mfc/reference/rect-structure1.md) or [CRect](../../atl-mfc-shared/reference/crect-class.md) which defines the output area."},{"content":"Zero-based index of the first character to be formatted.","pos":[35889,35945]},{"content":"Zero-based index of the last character to be formatted.","pos":[35968,36023]},{"content":"<bpt id=\"p1\">*</bpt>bOutput<ept id=\"p1\">*</ept>","pos":[36030,36039],"source":"*bOutput*"},{"content":"Indicates if the text should be rendered.","pos":[36043,36084]},{"content":"If <bpt id=\"p1\">**</bpt>FALSE<ept id=\"p1\">**</ept>, the text is just measured.","pos":[36085,36125],"source":" If **FALSE**, the text is just measured."},{"pos":[36135,36147],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The index of the last character that fits in the output area plus one.","pos":[36151,36221]},{"pos":[36231,36238],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[36242,36415],"content":"Typically, this call is followed by a call to <bpt id=\"p1\">[</bpt>CRichEditCtrl::DisplayBand<ept id=\"p1\">](../../mfc/reference/cricheditctrl-class.md#cricheditctrl__displayband)</ept> which generates the output.","source":"Typically, this call is followed by a call to [CRichEditCtrl::DisplayBand](../../mfc/reference/cricheditctrl-class.md#cricheditctrl__displayband) which generates the output."},{"pos":[36425,36432],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[36437,36517],"content":"See the example for <bpt id=\"p1\">[</bpt>CRichEditView::GetPaperSize<ept id=\"p1\">](#cricheditview__getpapersize)</ept>.","source":"See the example for [CRichEditView::GetPaperSize](#cricheditview__getpapersize)."},{"pos":[36527,36592],"content":"<bpt id=\"p1\">&lt;a name=\"cricheditview__printpage\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CRichEditView::PrintPage","linkify":"<a name=\"cricheditview__printpage\"></a>  CRichEditView::PrintPage","source":"<a name=\"cricheditview__printpage\"></a>  CRichEditView::PrintPage"},{"pos":[36596,36705],"content":"Call this function to format a range of text in a rich edit control for the output device specified by <ph id=\"ph1\">`pDC`</ph>.","source":"Call this function to format a range of text in a rich edit control for the output device specified by `pDC`."},{"pos":[36808,36818],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Pointer to a device context for page output.","pos":[36831,36875]},{"content":"Zero-based index of the first character to be formatted.","pos":[36899,36955]},{"content":"Zero-based index of the last character to be formatted.","pos":[36978,37033]},{"pos":[37043,37055],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The index of the last character that fits on the page plus one.","pos":[37059,37122]},{"pos":[37132,37139],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The layout of each page is controlled by <bpt id=\"p1\">[</bpt>GetPageRect<ept id=\"p1\">](#cricheditview__getpagerect)</ept> and <bpt id=\"p2\">[</bpt>GetPrintRect<ept id=\"p2\">](#cricheditview__getprintrect)</ept>.","pos":[37143,37276],"source":"The layout of each page is controlled by [GetPageRect](#cricheditview__getpagerect) and [GetPrintRect](#cricheditview__getprintrect)."},{"content":"Typically, this call is followed by a call to <bpt id=\"p1\">[</bpt>CRichEditCtrl::DisplayBand<ept id=\"p1\">](../../mfc/reference/cricheditctrl-class.md#cricheditctrl__displayband)</ept> which generates the output.","pos":[37277,37450],"source":" Typically, this call is followed by a call to [CRichEditCtrl::DisplayBand](../../mfc/reference/cricheditctrl-class.md#cricheditctrl__displayband) which generates the output."},{"content":"Note that margins are relative to the physical page, not the logical page.","pos":[37457,37531]},{"content":"Thus, margins of zero will often clip the text since many printers have unprintable areas on the page.","pos":[37532,37634]},{"content":"To avoid clipping your text, you should call <bpt id=\"p1\">[</bpt>SetMargins<ept id=\"p1\">](#cricheditview__setmargins)</ept> and set reasonable margins before printing.","pos":[37635,37764],"source":" To avoid clipping your text, you should call [SetMargins](#cricheditview__setmargins) and set reasonable margins before printing."},{"pos":[37774,37851],"content":"<bpt id=\"p1\">&lt;a name=\"cricheditview__queryacceptdata\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CRichEditView::QueryAcceptData","linkify":"<a name=\"cricheditview__queryacceptdata\"></a>  CRichEditView::QueryAcceptData","source":"<a name=\"cricheditview__queryacceptdata\"></a>  CRichEditView::QueryAcceptData"},{"content":"Called by the framework to paste an object into the rich edit.","pos":[37855,37917]},{"pos":[38099,38109],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"<bpt id=\"p1\">*</bpt>lpdataobj<ept id=\"p1\">*</ept>","pos":[38113,38124],"source":"*lpdataobj*"},{"content":"Pointer to the <bpt id=\"p1\">[</bpt>IDataObject<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms688421)</ept> to query.","pos":[38128,38226],"source":" Pointer to the [IDataObject](http://msdn.microsoft.com/library/windows/desktop/ms688421) to query."},{"content":"<bpt id=\"p1\">*</bpt>lpcfFormat<ept id=\"p1\">*</ept>","pos":[38233,38245],"source":"*lpcfFormat*"},{"content":"Pointer to the acceptable data format.","pos":[38249,38287]},{"content":"Not used.","pos":[38306,38315]},{"content":"<bpt id=\"p1\">*</bpt>bReally<ept id=\"p1\">*</ept>","pos":[38322,38331],"source":"*bReally*"},{"content":"Indicates if the paste operation should continue or not.","pos":[38335,38391]},{"content":"A handle to the metafile used for drawing the item's icon.","pos":[38413,38471]},{"pos":[38481,38493],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[38497,38555],"content":"An <ph id=\"ph1\">`HRESULT`</ph> value reporting the success of the operation.","source":"An `HRESULT` value reporting the success of the operation."},{"pos":[38565,38572],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Override this function to handle different organization of COM items in your derived document class.","pos":[38576,38676]},{"content":"This is an advanced overridable.","pos":[38677,38709]},{"pos":[38716,39016],"content":"For more information on <ph id=\"ph1\">`HRESULT`</ph> and <ph id=\"ph2\">`IDataObject`</ph>, see <bpt id=\"p1\">[</bpt>Structure of COM Error Codes<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms690088)</ept> and <bpt id=\"p2\">[</bpt>IDataObject<ept id=\"p2\">](http://msdn.microsoft.com/library/windows/desktop/ms688421)</ept>, respectively, in the <ph id=\"ph3\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"For more information on `HRESULT` and `IDataObject`, see [Structure of COM Error Codes](http://msdn.microsoft.com/library/windows/desktop/ms690088) and [IDataObject](http://msdn.microsoft.com/library/windows/desktop/ms688421), respectively, in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"pos":[39026,39033],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[39037,39122],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_MFCDocView#160<ept id=\"p2\">](../../mfc/codesnippet/cpp/cricheditview-class_10.cpp)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_MFCDocView#160](../../mfc/codesnippet/cpp/cricheditview-class_10.cpp)]"},{"pos":[39132,39205],"content":"<bpt id=\"p1\">&lt;a name=\"cricheditview__setcharformat\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CRichEditView::SetCharFormat","linkify":"<a name=\"cricheditview__setcharformat\"></a>  CRichEditView::SetCharFormat","source":"<a name=\"cricheditview__setcharformat\"></a>  CRichEditView::SetCharFormat"},{"pos":[39209,39315],"content":"Call this function to set the character formatting attributes for new text in this <ph id=\"ph1\">`CRichEditView`</ph> object.","source":"Call this function to set the character formatting attributes for new text in this `CRichEditView` object."},{"pos":[39376,39386],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"<bpt id=\"p1\"> [</bpt>CHARFORMAT2<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb787883)</ept> structure containing the new default character formatting attributes.","pos":[39397,39541],"source":" [CHARFORMAT2](http://msdn.microsoft.com/library/windows/desktop/bb787883) structure containing the new default character formatting attributes."},{"pos":[39551,39558],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[39562,39654],"content":"Only the attributes specified by the <bpt id=\"p1\">**</bpt>dwMask<ept id=\"p1\">**</ept> member of <ph id=\"ph1\">`cf`</ph> are changed by this function.","source":"Only the attributes specified by the **dwMask** member of `cf` are changed by this function."},{"pos":[39661,39921],"content":"For more information, see <bpt id=\"p1\">[</bpt>EM_SETCHARFORMAT<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb774230)</ept> message and <bpt id=\"p2\">[</bpt>CHARFORMAT2<ept id=\"p2\">](http://msdn.microsoft.com/library/windows/desktop/bb787883)</ept> structure in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"For more information, see [EM_SETCHARFORMAT](http://msdn.microsoft.com/library/windows/desktop/bb774230) message and [CHARFORMAT2](http://msdn.microsoft.com/library/windows/desktop/bb787883) structure in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"pos":[39931,39938],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[39942,40026],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_MFCDocView#152<ept id=\"p2\">](../../mfc/codesnippet/cpp/cricheditview-class_2.cpp)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_MFCDocView#152](../../mfc/codesnippet/cpp/cricheditview-class_2.cpp)]"},{"pos":[40036,40103],"content":"<bpt id=\"p1\">&lt;a name=\"cricheditview__setmargins\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CRichEditView::SetMargins","linkify":"<a name=\"cricheditview__setmargins\"></a>  CRichEditView::SetMargins","source":"<a name=\"cricheditview__setmargins\"></a>  CRichEditView::SetMargins"},{"content":"Call this function to set the printing margins for this rich edit view.","pos":[40107,40178]},{"pos":[40245,40255],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"<bpt id=\"p1\">*</bpt>rectMargin<ept id=\"p1\">*</ept>","pos":[40259,40271],"source":"*rectMargin*"},{"content":"The new margin values for printing, measured in <ph id=\"ph1\">`MM_TWIPS`</ph>.","pos":[40275,40334],"source":" The new margin values for printing, measured in `MM_TWIPS`."},{"pos":[40344,40351],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[40355,40546],"content":"If <bpt id=\"p1\">[</bpt>m_nWordWrap<ept id=\"p1\">](#cricheditview__m_nwordwrap)</ept> is <ph id=\"ph1\">`WrapToTargetDevice`</ph>, you should call <bpt id=\"p2\">[</bpt>WrapChanged<ept id=\"p2\">](#cricheditview__wrapchanged)</ept> after using this function to adjust printing characteristics.","source":"If [m_nWordWrap](#cricheditview__m_nwordwrap) is `WrapToTargetDevice`, you should call [WrapChanged](#cricheditview__wrapchanged) after using this function to adjust printing characteristics."},{"content":"Note that the margins used by <bpt id=\"p1\">[</bpt>PrintPage<ept id=\"p1\">](#cricheditview__printpage)</ept> are relative to the physical page, not the logical page.","pos":[40553,40678],"source":"Note that the margins used by [PrintPage](#cricheditview__printpage) are relative to the physical page, not the logical page."},{"content":"Thus, margins of zero will often clip the text since many printers have unprintable areas on the page.","pos":[40679,40781]},{"content":"To avoid clipping your text, you should call use <ph id=\"ph1\">`SetMargins`</ph> to set reasonable printer margins before printing.","pos":[40782,40894],"source":" To avoid clipping your text, you should call use `SetMargins` to set reasonable printer margins before printing."},{"pos":[40904,40911],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[40916,40996],"content":"See the example for <bpt id=\"p1\">[</bpt>CRichEditView::GetPaperSize<ept id=\"p1\">](#cricheditview__getpapersize)</ept>.","source":"See the example for [CRichEditView::GetPaperSize](#cricheditview__getpapersize)."},{"pos":[41006,41077],"content":"<bpt id=\"p1\">&lt;a name=\"cricheditview__setpapersize\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CRichEditView::SetPaperSize","linkify":"<a name=\"cricheditview__setpapersize\"></a>  CRichEditView::SetPaperSize","source":"<a name=\"cricheditview__setpapersize\"></a>  CRichEditView::SetPaperSize"},{"content":"Call this function to set the paper size for printing this rich edit view.","pos":[41081,41155]},{"pos":[41216,41226],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"<bpt id=\"p1\">*</bpt>sizePaper<ept id=\"p1\">*</ept>","pos":[41230,41241],"source":"*sizePaper*"},{"content":"The new paper size values for printing, measured in <ph id=\"ph1\">`MM_TWIPS`</ph>.","pos":[41245,41308],"source":" The new paper size values for printing, measured in `MM_TWIPS`."},{"pos":[41318,41325],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[41329,41520],"content":"If <bpt id=\"p1\">[</bpt>m_nWordWrap<ept id=\"p1\">](#cricheditview__m_nwordwrap)</ept> is <ph id=\"ph1\">`WrapToTargetDevice`</ph>, you should call <bpt id=\"p2\">[</bpt>WrapChanged<ept id=\"p2\">](#cricheditview__wrapchanged)</ept> after using this function to adjust printing characteristics.","source":"If [m_nWordWrap](#cricheditview__m_nwordwrap) is `WrapToTargetDevice`, you should call [WrapChanged](#cricheditview__wrapchanged) after using this function to adjust printing characteristics."},{"pos":[41530,41537],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[41541,41626],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_MFCDocView#161<ept id=\"p2\">](../../mfc/codesnippet/cpp/cricheditview-class_11.cpp)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_MFCDocView#161](../../mfc/codesnippet/cpp/cricheditview-class_11.cpp)]"},{"pos":[41636,41709],"content":"<bpt id=\"p1\">&lt;a name=\"cricheditview__setparaformat\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CRichEditView::SetParaFormat","linkify":"<a name=\"cricheditview__setparaformat\"></a>  CRichEditView::SetParaFormat","source":"<a name=\"cricheditview__setparaformat\"></a>  CRichEditView::SetParaFormat"},{"pos":[41713,41832],"content":"Call this function to set the paragraph formatting attributes for the current selection in this <ph id=\"ph1\">`CRichEditView`</ph> object.","source":"Call this function to set the paragraph formatting attributes for the current selection in this `CRichEditView` object."},{"pos":[41894,41904],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"<bpt id=\"p1\"> [</bpt>PARAFORMAT2<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb787942)</ept> structure containing the new default paragraph formatting attributes.","pos":[41915,42059],"source":" [PARAFORMAT2](http://msdn.microsoft.com/library/windows/desktop/bb787942) structure containing the new default paragraph formatting attributes."},{"pos":[42069,42081],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Nonzero if successful; otherwise, 0.","pos":[42085,42121]},{"pos":[42131,42138],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[42142,42234],"content":"Only the attributes specified by the <bpt id=\"p1\">**</bpt>dwMask<ept id=\"p1\">**</ept> member of <ph id=\"ph1\">`pf`</ph> are changed by this function.","source":"Only the attributes specified by the **dwMask** member of `pf` are changed by this function."},{"pos":[42241,42501],"content":"For more information, see <bpt id=\"p1\">[</bpt>EM_SETPARAFORMAT<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb774276)</ept> message and <bpt id=\"p2\">[</bpt>PARAFORMAT2<ept id=\"p2\">](http://msdn.microsoft.com/library/windows/desktop/bb787942)</ept> structure in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"For more information, see [EM_SETPARAFORMAT](http://msdn.microsoft.com/library/windows/desktop/bb774276) message and [PARAFORMAT2](http://msdn.microsoft.com/library/windows/desktop/bb787942) structure in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"pos":[42511,42518],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[42522,42607],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_MFCDocView#162<ept id=\"p2\">](../../mfc/codesnippet/cpp/cricheditview-class_12.cpp)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_MFCDocView#162](../../mfc/codesnippet/cpp/cricheditview-class_12.cpp)]"},{"pos":[42617,42688],"content":"<bpt id=\"p1\">&lt;a name=\"cricheditview__textnotfound\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CRichEditView::TextNotFound","linkify":"<a name=\"cricheditview__textnotfound\"></a>  CRichEditView::TextNotFound","source":"<a name=\"cricheditview__textnotfound\"></a>  CRichEditView::TextNotFound"},{"pos":[42692,42881],"content":"Call this function to reset the internal search state of the <bpt id=\"p1\">[</bpt>CRichEditView<ept id=\"p1\">](../../mfc/reference/cricheditview-class.md)</ept> control after a failed call to <bpt id=\"p2\">[</bpt>FindText<ept id=\"p2\">](#cricheditview__findtext)</ept>.","source":"Call this function to reset the internal search state of the [CRichEditView](../../mfc/reference/cricheditview-class.md) control after a failed call to [FindText](#cricheditview__findtext)."},{"pos":[42943,42953],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Contains the text string that was not found.","pos":[42971,43015]},{"pos":[43025,43032],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[43036,43219],"content":"It is recommended that this method be called immediately after failed calls to <bpt id=\"p1\">[</bpt>FindText<ept id=\"p1\">](#cricheditview__findtext)</ept> so that the internal search state of the control is properly reset.","source":"It is recommended that this method be called immediately after failed calls to [FindText](#cricheditview__findtext) so that the internal search state of the control is properly reset."},{"content":"The <ph id=\"ph1\">`lpszFind`</ph> parameter should include the same content as the string provided to <bpt id=\"p1\">[</bpt>FindText<ept id=\"p1\">](#cricheditview__findtext)</ept>.","pos":[43226,43346],"source":"The `lpszFind` parameter should include the same content as the string provided to [FindText](#cricheditview__findtext)."},{"content":"After resetting the internal search state, this method will call the <bpt id=\"p1\">[</bpt>OnTextNotFound<ept id=\"p1\">](#cricheditview__ontextnotfound)</ept> method with the provided search string.","pos":[43347,43504],"source":" After resetting the internal search state, this method will call the [OnTextNotFound](#cricheditview__ontextnotfound) method with the provided search string."},{"pos":[43514,43521],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[43526,43598],"content":"See the example for <bpt id=\"p1\">[</bpt>CRichEditView::FindText<ept id=\"p1\">](#cricheditview__findtext)</ept>.","source":"See the example for [CRichEditView::FindText](#cricheditview__findtext)."},{"pos":[43608,43677],"content":"<bpt id=\"p1\">&lt;a name=\"cricheditview__wrapchanged\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CRichEditView::WrapChanged","linkify":"<a name=\"cricheditview__wrapchanged\"></a>  CRichEditView::WrapChanged","source":"<a name=\"cricheditview__wrapchanged\"></a>  CRichEditView::WrapChanged"},{"pos":[43681,43839],"content":"Call this function when the printing characteristics have changed ( <bpt id=\"p1\">[</bpt>SetMargins<ept id=\"p1\">](#cricheditview__setmargins)</ept> or <bpt id=\"p2\">[</bpt>SetPaperSize<ept id=\"p2\">](#cricheditview__setpapersize)</ept>).","source":"Call this function when the printing characteristics have changed ( [SetMargins](#cricheditview__setmargins) or [SetPaperSize](#cricheditview__setpapersize))."},{"pos":[43892,43899],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[43903,44117],"content":"Override this function to modify the way the rich edit view responds to changes in <bpt id=\"p1\">[</bpt>m_nWordWrap<ept id=\"p1\">](#cricheditview__m_nwordwrap)</ept> or the printing characteristics ( <bpt id=\"p2\">[</bpt>OnPrinterChanged<ept id=\"p2\">](#cricheditview__onprinterchanged)</ept>).","source":"Override this function to modify the way the rich edit view responds to changes in [m_nWordWrap](#cricheditview__m_nwordwrap) or the printing characteristics ( [OnPrinterChanged](#cricheditview__onprinterchanged))."},{"pos":[44127,44134],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[44138,44223],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_MFCDocView#163<ept id=\"p2\">](../../mfc/codesnippet/cpp/cricheditview-class_13.cpp)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_MFCDocView#163](../../mfc/codesnippet/cpp/cricheditview-class_13.cpp)]"},{"pos":[44232,44240],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>MFC Sample WORDPAD<ept id=\"p1\">](../../visual-cpp-samples.md)</ept><ph id=\"ph1\"> </ph>","pos":[44244,44294],"source":"[MFC Sample WORDPAD](../../visual-cpp-samples.md) "},{"content":"<bpt id=\"p1\"> [</bpt>CCtrlView Class<ept id=\"p1\">](../../mfc/reference/cctrlview-class.md)</ept><ph id=\"ph1\"> </ph>","pos":[44297,44356],"source":" [CCtrlView Class](../../mfc/reference/cctrlview-class.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Hierarchy Chart<ept id=\"p1\">](../../mfc/hierarchy-chart.md)</ept><ph id=\"ph1\"> </ph>","pos":[44359,44408],"source":" [Hierarchy Chart](../../mfc/hierarchy-chart.md) "},{"content":"<bpt id=\"p1\"> [</bpt>CRichEditDoc Class<ept id=\"p1\">](../../mfc/reference/cricheditdoc-class.md)</ept><ph id=\"ph1\"> </ph>","pos":[44411,44476],"source":" [CRichEditDoc Class](../../mfc/reference/cricheditdoc-class.md) "},{"content":"<bpt id=\"p1\"> [</bpt>CRichEditCntrItem Class<ept id=\"p1\">](../../mfc/reference/cricheditcntritem-class.md)</ept>","pos":[44479,44553],"source":" [CRichEditCntrItem Class](../../mfc/reference/cricheditcntritem-class.md)"}],"content":"---\ntitle: \"CRichEditView Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"CRichEditView\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"document/view architecture, rich edit controls\"\n  - \"OLE containers, rich edit\"\n  - \"rich edit controls, OLE container\"\n  - \"CRichEditView class\"\nms.assetid: bd576b10-4cc0-4050-8f76-e1a0548411e4\ncaps.latest.revision: 25\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# CRichEditView Class\nWith [CRichEditDoc](../../mfc/reference/cricheditdoc-class.md) and [CRichEditCntrItem](../../mfc/reference/cricheditcntritem-class.md), provides the functionality of the rich edit control within the context of MFC's document view architecture.  \n  \n## Syntax  \n  \n```  \nclass CRichEditView : public CCtrlView  \n```  \n  \n## Members  \n  \n### Public Constructors  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CRichEditView::CRichEditView](#cricheditview__cricheditview)|Constructs a `CRichEditView` object.|  \n  \n### Public Methods  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CRichEditView::AdjustDialogPosition](#cricheditview__adjustdialogposition)|Moves a dialog box so that it doesn't obscure the current selection.|  \n|[CRichEditView::CanPaste](#cricheditview__canpaste)|Tells whether the Clipboard contains data that can be pasted into the rich edit view.|  \n|[CRichEditView::DoPaste](#cricheditview__dopaste)|Pastes an OLE item into this rich edit view.|  \n|[CRichEditView::FindText](#cricheditview__findtext)|Finds the specified text, invoking the wait cursor.|  \n|[CRichEditView::FindTextSimple](#cricheditview__findtextsimple)|Finds the specified text.|  \n|[CRichEditView::GetCharFormatSelection](#cricheditview__getcharformatselection)|Retrieves the character formatting attributes for the current selection.|  \n|[CRichEditView::GetDocument](#cricheditview__getdocument)|Retrieves a pointer to the related [CRichEditDoc](../../mfc/reference/cricheditdoc-class.md).|  \n|[CRichEditView::GetInPlaceActiveItem](#cricheditview__getinplaceactiveitem)|Retrieves the OLE item that is currently in-place active in the rich edit view.|  \n|[CRichEditView::GetMargins](#cricheditview__getmargins)|Retrieves the margins for this rich edit view.|  \n|[CRichEditView::GetPageRect](#cricheditview__getpagerect)|Retrieves the page rectangle for this rich edit view.|  \n|[CRichEditView::GetPaperSize](#cricheditview__getpapersize)|Retrieves the paper size for this rich edit view.|  \n|[CRichEditView::GetParaFormatSelection](#cricheditview__getparaformatselection)|Retrieves the paragraph formatting attributes for the current selection.|  \n|[CRichEditView::GetPrintRect](#cricheditview__getprintrect)|Retrieves the print rectangle for this rich edit view.|  \n|[CRichEditView::GetPrintWidth](#cricheditview__getprintwidth)|Retrieves the print width for this rich edit view.|  \n|[CRichEditView::GetRichEditCtrl](#cricheditview__getricheditctrl)|Retrieves the rich edit control.|  \n|[CRichEditView::GetSelectedItem](#cricheditview__getselecteditem)|Retrieves the selected item from the rich edit view.|  \n|[CRichEditView::GetTextLength](#cricheditview__gettextlength)|Retrieves the length of the text in the rich edit view.|  \n|[CRichEditView::GetTextLengthEx](#cricheditview__gettextlengthex)|Retrieves the number of characters or bytes in the rich edit view. Expanded flag list for method of determining the length.|  \n|[CRichEditView::InsertFileAsObject](#cricheditview__insertfileasobject)|Inserts a file as an OLE item.|  \n|[CRichEditView::InsertItem](#cricheditview__insertitem)|Inserts a new item as an OLE item.|  \n|[CRichEditView::IsRichEditFormat](#cricheditview__isricheditformat)|Tells whether the Clipboard contains data in a rich edit or text format.|  \n|[CRichEditView::OnCharEffect](#cricheditview__onchareffect)|Toggles the character formatting for the current selection.|  \n|[CRichEditView::OnParaAlign](#cricheditview__onparaalign)|Changes the alignment of paragraphs.|  \n|[CRichEditView::OnUpdateCharEffect](#cricheditview__onupdatechareffect)|Updates the Command UI for character public member functions.|  \n|[CRichEditView::OnUpdateParaAlign](#cricheditview__onupdateparaalign)|Updates the Command UI for paragraph public member functions.|  \n|[CRichEditView::PrintInsideRect](#cricheditview__printinsiderect)|Formats the specified text within the given rectangle.|  \n|[CRichEditView::PrintPage](#cricheditview__printpage)|Formats the specified text within the given page.|  \n|[CRichEditView::SetCharFormat](#cricheditview__setcharformat)|Sets the character formatting attributes for the current selection.|  \n|[CRichEditView::SetMargins](#cricheditview__setmargins)|Sets the margins for this rich edit view.|  \n|[CRichEditView::SetPaperSize](#cricheditview__setpapersize)|Sets the paper size for this rich edit view.|  \n|[CRichEditView::SetParaFormat](#cricheditview__setparaformat)|Sets the paragraph formatting attributes for the current selection.|  \n|[CRichEditView::TextNotFound](#cricheditview__textnotfound)|Resets the internal search state of the control.|  \n  \n### Protected Methods  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CRichEditView::GetClipboardData](#cricheditview__getclipboarddata)|Retrieves a Clipboard object for a range in this rich edit view.|  \n|[CRichEditView::GetContextMenu](#cricheditview__getcontextmenu)|Retrieves a context menu to use on a right mouse-button down.|  \n|[CRichEditView::IsSelected](#cricheditview__isselected)|Indicates if the given OLE item is selected or not.|  \n|[CRichEditView::OnFindNext](#cricheditview__onfindnext)|Finds the next occurrence of a substring.|  \n|[CRichEditView::OnInitialUpdate](#cricheditview__oninitialupdate)|Refreshes a view when it is first attached to a document.|  \n|[CRichEditView::OnPasteNativeObject](#cricheditview__onpastenativeobject)|Retrieves native data from an OLE item.|  \n|[CRichEditView::OnPrinterChanged](#cricheditview__onprinterchanged)|Sets the print characteristics to the given device.|  \n|[CRichEditView::OnReplaceAll](#cricheditview__onreplaceall)|Replaces all occurrences of a given string with a new string.|  \n|[CRichEditView::OnReplaceSel](#cricheditview__onreplacesel)|Replaces the current selection.|  \n|[CRichEditView::OnTextNotFound](#cricheditview__ontextnotfound)|Handles user notification that the requested text was not found.|  \n|[CRichEditView::QueryAcceptData](#cricheditview__queryacceptdata)|Queries to see about the data on the `IDataObject`.|  \n|[CRichEditView::WrapChanged](#cricheditview__wrapchanged)|Adjusts the target output device for this rich edit view, based on the value of `m_nWordWrap`.|  \n  \n### Public Data Members  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CRichEditView::m_nBulletIndent](#cricheditview__m_nbulletindent)|Indicates the amount of indent for bullet lists.|  \n|[CRichEditView::m_nWordWrap](#cricheditview__m_nwordwrap)|Indicates the word wrap constraints.|  \n  \n## Remarks  \n A \"rich edit control\" is a window in which the user can enter and edit text. The text can be assigned character and paragraph formatting, and can include embedded OLE objects. Rich edit controls provide a programming interface for formatting text. However, an application must implement any user interface components necessary to make formatting operations available to the user.  \n  \n `CRichEditView` maintains the text and formatting characteristic of text. `CRichEditDoc` maintains the list of OLE client items which are in the view. `CRichEditCntrItem` provides container-side access to the OLE client item.  \n  \n This Windows Common control (and therefore the [CRichEditCtrl](../../mfc/reference/cricheditctrl-class.md) and related classes) is available only to programs running under Windows 95/98 and Windows NT versions 3.51 and later.  \n  \n For an example of using a rich edit view in an MFC application, see the [WORDPAD](../../visual-cpp-samples.md) sample application.  \n  \n## Inheritance Hierarchy  \n [CObject](../../mfc/reference/cobject-class.md)  \n  \n [CCmdTarget](../../mfc/reference/ccmdtarget-class.md)  \n  \n [CWnd](../../mfc/reference/cwnd-class.md)  \n  \n [CView](../../mfc/reference/cview-class.md)  \n  \n [CCtrlView](../../mfc/reference/cctrlview-class.md)  \n  \n `CRichEditView`  \n  \n## Requirements  \n **Header:** afxrich.h  \n  \n##  <a name=\"cricheditview__adjustdialogposition\"></a>  CRichEditView::AdjustDialogPosition  \n Call this function to move the given dialog box so that it does not obscure the current selection.  \n  \n```  \nvoid AdjustDialogPosition(CDialog* pDlg);\n```  \n  \n### Parameters  \n *pDlg*  \n Pointer to a `CDialog` object.  \n  \n##  <a name=\"cricheditview__canpaste\"></a>  CRichEditView::CanPaste  \n Call this function to determine if the Clipboard contains information that can be pasted into this rich edit view.  \n  \n```  \nBOOL CanPaste() const;\n\n \n```  \n  \n### Return Value  \n Nonzero if the Clipboard contains data in a format which this rich edit view can accept; otherwise, 0.  \n  \n##  <a name=\"cricheditview__cricheditview\"></a>  CRichEditView::CRichEditView  \n Call this function to create a `CRichEditView` object.  \n  \n```  \nCRichEditView();\n```  \n  \n##  <a name=\"cricheditview__dopaste\"></a>  CRichEditView::DoPaste  \n Call this function to paste the OLE item in `dataobj` into this rich edit document/view.  \n  \n```  \nvoid DoPaste(\n    COleDataObject& dataobj,  \n    CLIPFORMAT cf,  \n    HMETAFILEPICT hMetaPict);\n```  \n  \n### Parameters  \n `dataobj`  \n The [COleDataObject](../../mfc/reference/coledataobject-class.md) containing the data to paste.  \n  \n `cf`  \n The desired Clipboard format.  \n  \n `hMetaPict`  \n The metafile that represents the item to be pasted.  \n  \n### Remarks  \n The framework calls this function as part of the default implementation of [QueryAcceptData](#cricheditview__queryacceptdata).  \n  \n This function determines the type of paste based on the results of the handler for Paste Special. If `cf` is 0, the new item uses the current iconic representation. If `cf` is nonzero and `hMetaPict` is not **NULL**, the new item uses `hMetaPict` for its representation.  \n  \n##  <a name=\"cricheditview__findtext\"></a>  CRichEditView::FindText  \n Call this function to find the specified text and set it to be the current selection.  \n  \n```  \nBOOL FindText(\n    LPCTSTR lpszFind,  \n    BOOL bCase = TRUE,  \n    BOOL bWord = TRUE,  \n    BOOL bNext = TRUE);\n```  \n  \n### Parameters  \n `lpszFind`  \n Contains the string to search for.  \n  \n `bCase`  \n Indicates if the search is case sensitive.  \n  \n `bWord`  \n Indicates if the search should match whole words only, not parts of words.  \n  \n `bNext`  \n Indicates the direction of the search. If **TRUE**, the search direction is toward the end of the buffer. If **FALSE**, the search direction is toward the beginning of the buffer.  \n  \n### Return Value  \n Nonzero if the `lpszFind` text is found; otherwise 0.  \n  \n### Remarks  \n This function displays the wait cursor during the find operation.  \n  \n### Example  \n [!code-cpp[NVC_MFCDocView#151](../../mfc/codesnippet/cpp/cricheditview-class_1.cpp)]  \n  \n##  <a name=\"cricheditview__findtextsimple\"></a>  CRichEditView::FindTextSimple  \n Call this function to find the specified text and set it to be the current selection.  \n  \n```  \nBOOL FindTextSimple(\n    LPCTSTR lpszFind,  \n    BOOL bCase = TRUE,  \n    BOOL bWord = TRUE,  \n    BOOL bNext = TRUE);\n```  \n  \n### Parameters  \n `lpszFind`  \n Contains the string to search for.  \n  \n `bCase`  \n Indicates if the search is case sensitive.  \n  \n `bWord`  \n Indicates if the search should match whole words only, not parts of words.  \n  \n `bNext`  \n Indicates the direction of the search. If **TRUE**, the search direction is toward the end of the buffer. If **FALSE**, the search direction is toward the beginning of the buffer.  \n  \n### Return Value  \n Nonzero if the `lpszFind` text is found; otherwise 0.  \n  \n### Example  \n  See the example for [CRichEditView::FindText](#cricheditview__findtext).  \n  \n##  <a name=\"cricheditview__getcharformatselection\"></a>  CRichEditView::GetCharFormatSelection  \n Call this function to get the character formatting attributes of the current selection.  \n  \n```  \nCHARFORMAT2& GetCharFormatSelection();\n```  \n  \n### Return Value  \n A [CHARFORMAT2](http://msdn.microsoft.com/library/windows/desktop/bb787883) structure which contains the character formatting attributes of the current selection.  \n  \n### Remarks  \n For more information, see the [EM_GETCHARFORMAT](http://msdn.microsoft.com/library/windows/desktop/bb788026) message and the [CHARFORMAT2](http://msdn.microsoft.com/library/windows/desktop/bb787883) structure in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n### Example  \n [!code-cpp[NVC_MFCDocView#152](../../mfc/codesnippet/cpp/cricheditview-class_2.cpp)]  \n  \n##  <a name=\"cricheditview__getclipboarddata\"></a>  CRichEditView::GetClipboardData  \n The framework calls this function as part of the processing of [IRichEditOleCallback::GetClipboardData](http://msdn.microsoft.com/library/windows/desktop/bb774315).  \n  \n```  \nvirtual HRESULT GetClipboardData(\n    CHARRANGE* lpchrg,  \n    DWORD dwReco,  \n    LPDATAOBJECT lpRichDataObj,  \n    LPDATAOBJECT* lplpdataobj);\n```  \n  \n### Parameters  \n `lpchrg`  \n Pointer to the [CHARRANGE](http://msdn.microsoft.com/library/windows/desktop/bb787885) structure specifying the range of characters (and OLE items) to copy to the data object specified by `lplpdataobj`.  \n  \n `dwReco`  \n Clipboard operation flag. Can be one of these values.  \n  \n- **RECO_COPY** Copy to the Clipboard.  \n  \n- **RECO_CUT** Cut to the Clipboard.  \n  \n- **RECO_DRAG** Drag operation (drag and drop).  \n  \n- **RECO_DROP** Drop operation (drag and drop).  \n  \n- **RECO_PASTE** Paste from the Clipboard.  \n  \n `lpRichDataObj`  \n Pointer to an [IDataObject](http://msdn.microsoft.com/library/windows/desktop/ms688421) object containing the Clipboard data from the rich edit control ( [IRichEditOle::GetClipboardData](http://msdn.microsoft.com/library/windows/desktop/bb774341)).  \n  \n `lplpdataobj`  \n Pointer to the pointer variable that receives the address of the `IDataObject` object representing the range specified in the `lpchrg` parameter. The value of `lplpdataobj` is ignored if an error is returned.  \n  \n### Return Value  \n An `HRESULT` value reporting the success of the operation. For more information on `HRESULT`, see [Structure of COM Error Codes](http://msdn.microsoft.com/library/windows/desktop/ms690088) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n### Remarks  \n If the return value indicates success, **IRichEditOleCallback::GetClipboardData** returns the `IDataObject` accessed by `lplpdataobj`; otherwise, it returns the one accessed by `lpRichDataObj`. Override this function to supply your own Clipboard data. The default implementation of this function returns **E_NOTIMPL**.  \n  \n This is an advanced overridable.  \n  \n For more information, see [IRichEditOle::GetClipboardData](http://msdn.microsoft.com/library/windows/desktop/bb774341), [IRichEditOleCallback::GetClipboardData](http://msdn.microsoft.com/library/windows/desktop/bb774315), and [CHARRANGE](http://msdn.microsoft.com/library/windows/desktop/bb787885) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)] and see [IDataObject](http://msdn.microsoft.com/library/windows/desktop/ms688421) in the [!INCLUDE[winsdkshort](../../atl-mfc-shared/reference/includes/winsdkshort_md.md)].  \n  \n##  <a name=\"cricheditview__getcontextmenu\"></a>  CRichEditView::GetContextMenu  \n The framework calls this function as part of the processing of [IRichEditOleCallback::GetContextMenu](http://msdn.microsoft.com/library/windows/desktop/bb774317).  \n  \n```  \nvirtual HMENU GetContextMenu(\n    WORD seltyp,  \n    LPOLEOBJECT lpoleobj,  \n    CHARRANGE* lpchrg);\n```  \n  \n### Parameters  \n *seltyp*  \n The selection type. The selection type values are described in the Remarks section.  \n  \n `lpoleobj`  \n Pointer to a **OLEOBJECT** structure specifying the first selected OLE object if the selection contains one or more OLE items. If the selection contains no items, `lpoleobj` is **NULL**. The **OLEOBJECT** structure holds a pointer to an OLE object v-table.  \n  \n `lpchrg`  \n Pointer to a [CHARRANGE](http://msdn.microsoft.com/library/windows/desktop/bb787885) structure containing the current selection.  \n  \n### Return Value  \n Handle to the context menu.  \n  \n### Remarks  \n This function is a typical part of right mouse-button down processing.  \n  \n The selection type can be any combination of the following flags:  \n  \n- `SEL_EMPTY` Indicates that there is no current selection.  \n  \n- `SEL_TEXT` Indicates that the current selection contains text.  \n  \n- `SEL_OBJECT` Indicates that the current selection contains at least one OLE item.  \n  \n- `SEL_MULTICHAR` Indicates that the current selection contains more than one character of text.  \n  \n- `SEL_MULTIOBJECT` Indicates that the current selection contains more than one OLE object.  \n  \n The default implementation returns **NULL**. This is an advanced overridable.  \n  \n For more information, see [IRichEditOleCallback::GetContextMenu](http://msdn.microsoft.com/library/windows/desktop/bb774317) and [CHARRANGE](http://msdn.microsoft.com/library/windows/desktop/bb787885) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n For more information on the **OLEOBJECT** type, see the OLE Data Structures and Structure Allocation article in the *OLE Knowledge Base*.  \n  \n##  <a name=\"cricheditview__getdocument\"></a>  CRichEditView::GetDocument  \n Call this function to get a pointer to the `CRichEditDoc` associated with this view.  \n  \n```  \nCRichEditDoc* GetDocument() const;\n\n \n```  \n  \n### Return Value  \n Pointer to a [CRichEditDoc](../../mfc/reference/cricheditdoc-class.md) object associated with your `CRichEditView` object.  \n  \n##  <a name=\"cricheditview__getinplaceactiveitem\"></a>  CRichEditView::GetInPlaceActiveItem  \n Call this function to get the OLE item that is currently activated in place in this `CRichEditView` object.  \n  \n```  \nCRichEditCntrItem* GetInPlaceActiveItem() const;\n\n \n```  \n  \n### Return Value  \n A pointer to the single, in-place active [CRichEditCntrItem](../../mfc/reference/cricheditcntritem-class.md) object in this rich edit view; **NULL** if there is no OLE item currently in the in-place active state.  \n  \n##  <a name=\"cricheditview__getmargins\"></a>  CRichEditView::GetMargins  \n Call this function to retrieve the current margins used in printing.  \n  \n```  \nCRect GetMargins() const;\n\n \n```  \n  \n### Return Value  \n The margins used in printing, measured in `MM_TWIPS`.  \n  \n##  <a name=\"cricheditview__getpagerect\"></a>  CRichEditView::GetPageRect  \n Call this function to get the dimensions of the page used in printing.  \n  \n```  \nCRect GetPageRect() const;\n\n \n```  \n  \n### Return Value  \n The bounds of the page used in printing, measured in `MM_TWIPS`.  \n  \n### Remarks  \n This value is based on the paper size.  \n  \n##  <a name=\"cricheditview__getpapersize\"></a>  CRichEditView::GetPaperSize  \n Call this function to retrieve the current paper size.  \n  \n```  \nCSize GetPaperSize() const;\n\n \n```  \n  \n### Return Value  \n The size of the paper used in printing, measured in `MM_TWIPS`.  \n  \n### Example  \n [!code-cpp[NVC_MFCDocView#153](../../mfc/codesnippet/cpp/cricheditview-class_3.cpp)]  \n  \n##  <a name=\"cricheditview__getparaformatselection\"></a>  CRichEditView::GetParaFormatSelection  \n Call this function to get the paragraph formatting attributes of the current selection.  \n  \n```  \nPARAFORMAT2& GetParaFormatSelection();\n```  \n  \n### Return Value  \n A [PARAFORMAT2](http://msdn.microsoft.com/library/windows/desktop/bb787942) structure which contains the paragraph formatting attributes of the current selection.  \n  \n### Remarks  \n For more information, see [EM_GETPARAFORMAT](http://msdn.microsoft.com/library/windows/desktop/bb774182) message and [PARAFORMAT2](http://msdn.microsoft.com/library/windows/desktop/bb787942) structure in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n##  <a name=\"cricheditview__getprintrect\"></a>  CRichEditView::GetPrintRect  \n Call this function to retrieve the bounds of the printing area within the page rectangle.  \n  \n```  \nCRect GetPrintRect() const;\n\n \n```  \n  \n### Return Value  \n The bounds of the image area used in printing, measured in `MM_TWIPS`.  \n  \n### Example  \n [!code-cpp[NVC_MFCDocView#154](../../mfc/codesnippet/cpp/cricheditview-class_4.cpp)]  \n  \n##  <a name=\"cricheditview__getprintwidth\"></a>  CRichEditView::GetPrintWidth  \n Call this function to determine the width of the printing area.  \n  \n```  \nint GetPrintWidth() const;\n\n \n```  \n  \n### Return Value  \n The width of the printing area, measured in `MM_TWIPS`.  \n  \n##  <a name=\"cricheditview__getricheditctrl\"></a>  CRichEditView::GetRichEditCtrl  \n Call this function to retrieve the [CRichEditCtrl](../../mfc/reference/cricheditctrl-class.md) object associated with the `CRichEditView` object.  \n  \n```  \nCRichEditCtrl& GetRichEditCtrl() const;\n\n \n```  \n  \n### Return Value  \n The `CRichEditCtrl` object for this view.  \n  \n### Example  \n  See the example for [CRichEditView::FindText](#cricheditview__findtext).  \n  \n##  <a name=\"cricheditview__getselecteditem\"></a>  CRichEditView::GetSelectedItem  \n Call this function to retrieve the OLE item (a `CRichEditCntrItem` object) currently selected in this `CRichEditView` object.  \n  \n```  \nCRichEditCntrItem* GetSelectedItem() const;\n\n \n```  \n  \n### Return Value  \n Pointer to a [CRichEditCntrItem](../../mfc/reference/cricheditcntritem-class.md) object selected in the `CRichEditView` object; **NULL** if no item is selected in this view.  \n  \n##  <a name=\"cricheditview__gettextlength\"></a>  CRichEditView::GetTextLength  \n Call this function to retrieve the length of the text in this `CRichEditView` object.  \n  \n```  \nlong GetTextLength() const;\n\n \n```  \n  \n### Return Value  \n The length of the text in this `CRichEditView` object.  \n  \n##  <a name=\"cricheditview__gettextlengthex\"></a>  CRichEditView::GetTextLengthEx  \n Call this member function to calculate the length of the text in this `CRichEditView` object.  \n  \n```  \nlong GetTextLengthEx(\n    DWORD dwFlags,  \n    UINT uCodePage = -1) const;\n\n \n```  \n  \n### Parameters  \n `dwFlags`  \n Value specifying the method to be used in determining the text length. This member can be one or more of the values listed in the flags member of [GETTEXTLENGTHEX](http://msdn.microsoft.com/library/windows/desktop/bb787915) described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n `uCodePage`  \n Code page for translation (CP_ACP for ANSI Code Page, 1200 for Unicode).  \n  \n### Return Value  \n The number of characters or bytes in the edit control. If incompatible flags were set in `dwFlags`, this member function returns `E_INVALIDARG`.  \n  \n### Remarks  \n `GetTextLengthEx` provides additional ways of determining the length of the text. It supports the Rich Edit 2.0 functionality. For more information, see [About Rich Edit Controls](http://msdn.microsoft.com/library/windows/desktop/bb787873) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n##  <a name=\"cricheditview__insertfileasobject\"></a>  CRichEditView::InsertFileAsObject  \n Call this function to insert the specified file (as a [CRichEditCntrItem](../../mfc/reference/cricheditcntritem-class.md) object) into a rich edit view.  \n  \n```  \nvoid InsertFileAsObject(LPCTSTR lpszFileName);\n```  \n  \n### Parameters  \n `lpszFileName`  \n String containing the name of the file to be inserted.  \n  \n##  <a name=\"cricheditview__insertitem\"></a>  CRichEditView::InsertItem  \n Call this function to insert a [CRichEditCntrItem](../../mfc/reference/cricheditcntritem-class.md) object into a rich edit view.  \n  \n```  \nHRESULT InsertItem(CRichEditCntrItem* pItem);\n```  \n  \n### Parameters  \n `pItem`  \n Pointer to the item to be inserted.  \n  \n### Return Value  \n An `HRESULT` value indicating the success of the insertion.  \n  \n### Remarks  \n For more information on `HRESULT`, see [Structure of COM Error Codes](http://msdn.microsoft.com/library/windows/desktop/ms690088) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n##  <a name=\"cricheditview__isricheditformat\"></a>  CRichEditView::IsRichEditFormat  \n Call this function to determine if `cf` is a Clipboard format which is text, rich text, or rich text with OLE items.  \n  \n```  \nstatic BOOL AFX_CDECL IsRichEditFormat(CLIPFORMAT cf);\n```  \n  \n### Parameters  \n `cf`  \n The Clipboard format of interest.  \n  \n### Return Value  \n Nonzero if `cf` is a rich edit or text Clipboard format.  \n  \n##  <a name=\"cricheditview__isselected\"></a>  CRichEditView::IsSelected  \n Call this function to determine if the specified OLE item is currently selected in this view.  \n  \n```  \nvirtual BOOL IsSelected(const CObject* pDocItem) const;\n\n \n```  \n  \n### Parameters  \n `pDocItem`  \n Pointer to an object in the view.  \n  \n### Return Value  \n Nonzero if the object is selected; otherwise 0.  \n  \n### Remarks  \n Override this function if your derived view class has a different method for handling selection of OLE items.  \n  \n##  <a name=\"cricheditview__m_nbulletindent\"></a>  CRichEditView::m_nBulletIndent  \n The indentation for bullet items in a list; by default, 720 units, which is 1/2 inch.  \n  \n```  \nint m_nBulletIndent;  \n```  \n  \n##  <a name=\"cricheditview__m_nwordwrap\"></a>  CRichEditView::m_nWordWrap  \n Indicates the type of word wrap for this rich edit view.  \n  \n```  \nint m_nWordWrap;  \n```  \n  \n### Remarks  \n One of the following values:  \n  \n- `WrapNone` Indicates no automatic word wrapping.  \n  \n- `WrapToWindow` Indicates word wrapping based on the width of the window.  \n  \n- `WrapToTargetDevice` Indicates word wrapping based on the characteristics of the target device.  \n  \n### Example  \n  See the example for [CRichEditView::WrapChanged](#cricheditview__wrapchanged).  \n  \n##  <a name=\"cricheditview__onchareffect\"></a>  CRichEditView::OnCharEffect  \n Call this function to toggle the character formatting effects for the current selection.  \n  \n```  \nvoid OnCharEffect(\n    DWORD dwMask,  \n    DWORD dwEffect);\n```  \n  \n### Parameters  \n `dwMask`  \n The character formatting effects to modify in the current selection.  \n  \n `dwEffect`  \n The desired list of character formatting effects to toggle.  \n  \n### Remarks  \n Each call to this function toggles the specified formatting effects for the current selection.  \n  \n For more information on the `dwMask` and `dwEffect` parameters and their potential values, see the corresponding data members of [CHARFORMAT](http://msdn.microsoft.com/library/windows/desktop/bb787881) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n### Example  \n [!code-cpp[NVC_MFCDocView#155](../../mfc/codesnippet/cpp/cricheditview-class_5.cpp)]  \n  \n##  <a name=\"cricheditview__onfindnext\"></a>  CRichEditView::OnFindNext  \n Called by the framework when processing commands from the Find/Replace dialog box.  \n  \n```  \nvirtual void OnFindNext(\n    LPCTSTR lpszFind,  \n    BOOL bNext,  \n    BOOL bCase,  \n    BOOL bWord);\n```  \n  \n### Parameters  \n `lpszFind`  \n The string to find.  \n  \n `bNext`  \n The direction to search: **TRUE** indicates down; **FALSE**, up.  \n  \n `bCase`  \n Indicates whether the search is to be case sensitive.  \n  \n `bWord`  \n Indicates whether the search is to match whole words only or not.  \n  \n### Remarks  \n Call this function to find text within the `CRichEditView`. Override this function to alter search characteristics for your derived view class.  \n  \n##  <a name=\"cricheditview__oninitialupdate\"></a>  CRichEditView::OnInitialUpdate  \n Called by the framework after the view is first attached to the document, but before the view is initially displayed.  \n  \n```  \nvirtual void OnInitialUpdate();\n```  \n  \n### Remarks  \n The default implementation of this function calls the [CView::OnUpdate](../../mfc/reference/cview-class.md#cview__onupdate) member function with no hint information (that is, using the default values of 0 for the `lHint` parameter and **NULL** for the `pHint` parameter). Override this function to perform any one-time initialization that requires information about the document. For example, if your application has fixed-sized documents, you can use this function to initialize a view's scrolling limits based on the document size. If your application supports variable-sized documents, use `OnUpdate` to update the scrolling limits every time the document changes.  \n  \n### Example  \n  See the example for [CRichEditView::m_nWordWrap](#cricheditview__m_nwordwrap).  \n  \n##  <a name=\"cricheditview__onpastenativeobject\"></a>  CRichEditView::OnPasteNativeObject  \n Use this function to load native data from an embedded item.  \n  \n```  \nvirtual BOOL OnPasteNativeObject(LPSTORAGE lpStg);\n```  \n  \n### Parameters  \n *lpStg*  \n Pointer to an [IStorage](http://msdn.microsoft.com/library/windows/desktop/aa380015) object.  \n  \n### Return Value  \n Nonzero if successful; otherwise, 0;  \n  \n### Remarks  \n Typically, you would do this by creating a [COleStreamFile](../../mfc/reference/colestreamfile-class.md) around the `IStorage`. The `COleStreamFile` can be attached to an archive and [CObject::Serialize](../../mfc/reference/cobject-class.md#cobject__serialize) called to load the data.  \n  \n This is an advanced overridable.  \n  \n For more information, see [IStorage](http://msdn.microsoft.com/library/windows/desktop/aa380015) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n##  <a name=\"cricheditview__onparaalign\"></a>  CRichEditView::OnParaAlign  \n Call this function to change the paragraph alignment for the selected paragraphs.  \n  \n```  \nvoid OnParaAlign(WORD wAlign);\n```  \n  \n### Parameters  \n `wAlign`  \n Desired paragraph alignment. One of the following values:  \n  \n- `PFA_LEFT` Align the paragraphs with the left margin.  \n  \n- `PFA_RIGHT` Align the paragraphs with the right margin.  \n  \n- `PFA_CENTER` Center the paragraphs between the margins.  \n  \n### Example  \n [!code-cpp[NVC_MFCDocView#156](../../mfc/codesnippet/cpp/cricheditview-class_6.cpp)]  \n  \n##  <a name=\"cricheditview__onprinterchanged\"></a>  CRichEditView::OnPrinterChanged  \n Override this function to change characteristics for this rich edit view when the printer changes.  \n  \n```  \nvirtual void OnPrinterChanged(const CDC& dcPrinter);\n```  \n  \n### Parameters  \n `dcPrinter`  \n A [CDC](../../mfc/reference/cdc-class.md) object for the new printer.  \n  \n### Remarks  \n The default implementation sets the paper size to the physical height and width for the output device (printer). If there is no device context associated with `dcPrinter`, the default implementation sets the paper size to 8.5 by 11 inches.  \n  \n##  <a name=\"cricheditview__onreplaceall\"></a>  CRichEditView::OnReplaceAll  \n Called by the framework when processing Replace All commands from the Replace dialog box.  \n  \n```  \nvirtual void OnReplaceAll(\n    LPCTSTR lpszFind,  \n    LPCTSTR lpszReplace,  \n    BOOL bCase,  \n    BOOL bWord);\n```  \n  \n### Parameters  \n `lpszFind`  \n The text to be replaced.  \n  \n `lpszReplace`  \n The replacement text.  \n  \n `bCase`  \n Indicates if the search is case sensitive.  \n  \n `bWord`  \n Indicates if the search must select whole words or not.  \n  \n### Remarks  \n Call this function to replace all occurrences of some given text with another string. Override this function to alter search characteristics for this view.  \n  \n### Example  \n  See the example for [CRichEditView::FindText](#cricheditview__findtext).  \n  \n##  <a name=\"cricheditview__onreplacesel\"></a>  CRichEditView::OnReplaceSel  \n Called by the framework when processing Replace commands from the Replace dialog box.  \n  \n```  \nvirtual void OnReplaceSel(\n    LPCTSTR lpszFind,  \n    BOOL bNext,  \n    BOOL bCase,  \n    BOOL bWord,  \n    LPCTSTR lpszReplace);\n```  \n  \n### Parameters  \n `lpszFind`  \n The text to be replaced.  \n  \n `bNext`  \n Indicates the direction of the search: **TRUE** is down; **FALSE**, up.  \n  \n `bCase`  \n Indicates if the search is case sensitive.  \n  \n `bWord`  \n Indicates if the search must select whole words or not.  \n  \n `lpszReplace`  \n The replacement text.  \n  \n### Remarks  \n Call this function to replace one occurrence of some given text with another string. Override this function to alter search characteristics for this view.  \n  \n##  <a name=\"cricheditview__ontextnotfound\"></a>  CRichEditView::OnTextNotFound  \n Called by the framework whenever a search fails.  \n  \n```  \nvirtual void OnTextNotFound(LPCTSTR lpszFind);\n```  \n  \n### Parameters  \n `lpszFind`  \n The text which was not found.  \n  \n### Remarks  \n Override this function to change the output notification from a [MessageBeep](http://msdn.microsoft.com/library/windows/desktop/ms680356).  \n  \n For more information, see [MessageBeep](http://msdn.microsoft.com/library/windows/desktop/ms680356) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n### Example  \n [!code-cpp[NVC_MFCDocView#157](../../mfc/codesnippet/cpp/cricheditview-class_7.cpp)]  \n  \n##  <a name=\"cricheditview__onupdatechareffect\"></a>  CRichEditView::OnUpdateCharEffect  \n The framework calls this function to update the command UI for character effect commands.  \n  \n```  \nvoid OnUpdateCharEffect(\n    CCmdUI* pCmdUI,  \n    DWORD dwMask,  \n    DWORD dwEffect);\n```  \n  \n### Parameters  \n `pCmdUI`  \n Pointer to a [CCmdUI](../../mfc/reference/ccmdui-class.md) object.  \n  \n `dwMask`  \n Indicates the character formatting mask.  \n  \n `dwEffect`  \n Indicates the character formatting effect.  \n  \n### Remarks  \n The mask `dwMask` specifies which character formatting attributes to check. The flags `dwEffect` list the character formatting attributes to set/clear.  \n  \n For more information on the `dwMask` and `dwEffect` parameters and their potential values, see the corresponding data members of [CHARFORMAT](http://msdn.microsoft.com/library/windows/desktop/bb787881) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n### Example  \n [!code-cpp[NVC_MFCDocView#158](../../mfc/codesnippet/cpp/cricheditview-class_8.cpp)]  \n  \n##  <a name=\"cricheditview__onupdateparaalign\"></a>  CRichEditView::OnUpdateParaAlign  \n The framework calls this function to update the command UI for paragraph effect commands.  \n  \n```  \nvoid OnUpdateParaAlign(\n    CCmdUI* pCmdUI,  \n    WORD wAlign);\n```  \n  \n### Parameters  \n `pCmdUI`  \n Pointer to a [CCmdUI](../../mfc/reference/ccmdui-class.md) object.  \n  \n `wAlign`  \n The paragraph alignment to check. One of the following values:  \n  \n- `PFA_LEFT` Align the paragraphs with the left margin.  \n  \n- `PFA_RIGHT` Align the paragraphs with the right margin.  \n  \n- `PFA_CENTER` Center the paragraphs between the margins.  \n  \n### Example  \n [!code-cpp[NVC_MFCDocView#159](../../mfc/codesnippet/cpp/cricheditview-class_9.cpp)]  \n  \n##  <a name=\"cricheditview__printinsiderect\"></a>  CRichEditView::PrintInsideRect  \n Call this function to format a range of text in a rich edit control to fit within *rectLayout* for the device specified by `pDC`.  \n  \n```  \nlong PrintInsideRect(\n    CDC* pDC,  \n    RECT& rectLayout,  \n    long nIndexStart,  \n    long nIndexStop,  \n    BOOL bOutput);\n```  \n  \n### Parameters  \n `pDC`  \n Pointer to a device context for the output area.  \n  \n *rectLayout*  \n [RECT](../../mfc/reference/rect-structure1.md) or [CRect](../../atl-mfc-shared/reference/crect-class.md) which defines the output area.  \n  \n `nIndexStart`  \n Zero-based index of the first character to be formatted.  \n  \n `nIndexStop`  \n Zero-based index of the last character to be formatted.  \n  \n *bOutput*  \n Indicates if the text should be rendered. If **FALSE**, the text is just measured.  \n  \n### Return Value  \n The index of the last character that fits in the output area plus one.  \n  \n### Remarks  \n Typically, this call is followed by a call to [CRichEditCtrl::DisplayBand](../../mfc/reference/cricheditctrl-class.md#cricheditctrl__displayband) which generates the output.  \n  \n### Example  \n  See the example for [CRichEditView::GetPaperSize](#cricheditview__getpapersize).  \n  \n##  <a name=\"cricheditview__printpage\"></a>  CRichEditView::PrintPage  \n Call this function to format a range of text in a rich edit control for the output device specified by `pDC`.  \n  \n```  \nlong PrintPage(\n    CDC* pDC,  \n    long nIndexStart,  \n    long nIndexStop);\n```  \n  \n### Parameters  \n `pDC`  \n Pointer to a device context for page output.  \n  \n `nIndexStart`  \n Zero-based index of the first character to be formatted.  \n  \n `nIndexStop`  \n Zero-based index of the last character to be formatted.  \n  \n### Return Value  \n The index of the last character that fits on the page plus one.  \n  \n### Remarks  \n The layout of each page is controlled by [GetPageRect](#cricheditview__getpagerect) and [GetPrintRect](#cricheditview__getprintrect). Typically, this call is followed by a call to [CRichEditCtrl::DisplayBand](../../mfc/reference/cricheditctrl-class.md#cricheditctrl__displayband) which generates the output.  \n  \n Note that margins are relative to the physical page, not the logical page. Thus, margins of zero will often clip the text since many printers have unprintable areas on the page. To avoid clipping your text, you should call [SetMargins](#cricheditview__setmargins) and set reasonable margins before printing.  \n  \n##  <a name=\"cricheditview__queryacceptdata\"></a>  CRichEditView::QueryAcceptData  \n Called by the framework to paste an object into the rich edit.  \n  \n```  \nvirtual HRESULT QueryAcceptData(\n    LPDATAOBJECT lpdataobj,  \n    CLIPFORMAT* lpcfFormat,  \n    DWORD dwReco,  \n    BOOL bReally,  \n    HGLOBAL hMetaFile);\n```  \n  \n### Parameters  \n *lpdataobj*  \n Pointer to the [IDataObject](http://msdn.microsoft.com/library/windows/desktop/ms688421) to query.  \n  \n *lpcfFormat*  \n Pointer to the acceptable data format.  \n  \n `dwReco`  \n Not used.  \n  \n *bReally*  \n Indicates if the paste operation should continue or not.  \n  \n `hMetaFile`  \n A handle to the metafile used for drawing the item's icon.  \n  \n### Return Value  \n An `HRESULT` value reporting the success of the operation.  \n  \n### Remarks  \n Override this function to handle different organization of COM items in your derived document class. This is an advanced overridable.  \n  \n For more information on `HRESULT` and `IDataObject`, see [Structure of COM Error Codes](http://msdn.microsoft.com/library/windows/desktop/ms690088) and [IDataObject](http://msdn.microsoft.com/library/windows/desktop/ms688421), respectively, in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n### Example  \n [!code-cpp[NVC_MFCDocView#160](../../mfc/codesnippet/cpp/cricheditview-class_10.cpp)]  \n  \n##  <a name=\"cricheditview__setcharformat\"></a>  CRichEditView::SetCharFormat  \n Call this function to set the character formatting attributes for new text in this `CRichEditView` object.  \n  \n```  \nvoid SetCharFormat(CHARFORMAT2 cf);\n```  \n  \n### Parameters  \n `cf`  \n [CHARFORMAT2](http://msdn.microsoft.com/library/windows/desktop/bb787883) structure containing the new default character formatting attributes.  \n  \n### Remarks  \n Only the attributes specified by the **dwMask** member of `cf` are changed by this function.  \n  \n For more information, see [EM_SETCHARFORMAT](http://msdn.microsoft.com/library/windows/desktop/bb774230) message and [CHARFORMAT2](http://msdn.microsoft.com/library/windows/desktop/bb787883) structure in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n### Example  \n [!code-cpp[NVC_MFCDocView#152](../../mfc/codesnippet/cpp/cricheditview-class_2.cpp)]  \n  \n##  <a name=\"cricheditview__setmargins\"></a>  CRichEditView::SetMargins  \n Call this function to set the printing margins for this rich edit view.  \n  \n```  \nvoid SetMargins(const CRect& rectMargin);\n```  \n  \n### Parameters  \n *rectMargin*  \n The new margin values for printing, measured in `MM_TWIPS`.  \n  \n### Remarks  \n If [m_nWordWrap](#cricheditview__m_nwordwrap) is `WrapToTargetDevice`, you should call [WrapChanged](#cricheditview__wrapchanged) after using this function to adjust printing characteristics.  \n  \n Note that the margins used by [PrintPage](#cricheditview__printpage) are relative to the physical page, not the logical page. Thus, margins of zero will often clip the text since many printers have unprintable areas on the page. To avoid clipping your text, you should call use `SetMargins` to set reasonable printer margins before printing.  \n  \n### Example  \n  See the example for [CRichEditView::GetPaperSize](#cricheditview__getpapersize).  \n  \n##  <a name=\"cricheditview__setpapersize\"></a>  CRichEditView::SetPaperSize  \n Call this function to set the paper size for printing this rich edit view.  \n  \n```  \nvoid SetPaperSize(CSize sizePaper);\n```  \n  \n### Parameters  \n *sizePaper*  \n The new paper size values for printing, measured in `MM_TWIPS`.  \n  \n### Remarks  \n If [m_nWordWrap](#cricheditview__m_nwordwrap) is `WrapToTargetDevice`, you should call [WrapChanged](#cricheditview__wrapchanged) after using this function to adjust printing characteristics.  \n  \n### Example  \n [!code-cpp[NVC_MFCDocView#161](../../mfc/codesnippet/cpp/cricheditview-class_11.cpp)]  \n  \n##  <a name=\"cricheditview__setparaformat\"></a>  CRichEditView::SetParaFormat  \n Call this function to set the paragraph formatting attributes for the current selection in this `CRichEditView` object.  \n  \n```  \nBOOL SetParaFormat(PARAFORMAT2& pf);\n```  \n  \n### Parameters  \n `pf`  \n [PARAFORMAT2](http://msdn.microsoft.com/library/windows/desktop/bb787942) structure containing the new default paragraph formatting attributes.  \n  \n### Return Value  \n Nonzero if successful; otherwise, 0.  \n  \n### Remarks  \n Only the attributes specified by the **dwMask** member of `pf` are changed by this function.  \n  \n For more information, see [EM_SETPARAFORMAT](http://msdn.microsoft.com/library/windows/desktop/bb774276) message and [PARAFORMAT2](http://msdn.microsoft.com/library/windows/desktop/bb787942) structure in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n### Example  \n [!code-cpp[NVC_MFCDocView#162](../../mfc/codesnippet/cpp/cricheditview-class_12.cpp)]  \n  \n##  <a name=\"cricheditview__textnotfound\"></a>  CRichEditView::TextNotFound  \n Call this function to reset the internal search state of the [CRichEditView](../../mfc/reference/cricheditview-class.md) control after a failed call to [FindText](#cricheditview__findtext).  \n  \n```  \nvoid TextNotFound(LPCTSTR lpszFind);\n```  \n  \n### Parameters  \n `lpszFind`  \n Contains the text string that was not found.  \n  \n### Remarks  \n It is recommended that this method be called immediately after failed calls to [FindText](#cricheditview__findtext) so that the internal search state of the control is properly reset.  \n  \n The `lpszFind` parameter should include the same content as the string provided to [FindText](#cricheditview__findtext). After resetting the internal search state, this method will call the [OnTextNotFound](#cricheditview__ontextnotfound) method with the provided search string.  \n  \n### Example  \n  See the example for [CRichEditView::FindText](#cricheditview__findtext).  \n  \n##  <a name=\"cricheditview__wrapchanged\"></a>  CRichEditView::WrapChanged  \n Call this function when the printing characteristics have changed ( [SetMargins](#cricheditview__setmargins) or [SetPaperSize](#cricheditview__setpapersize)).  \n  \n```  \nvirtual void WrapChanged();\n```  \n  \n### Remarks  \n Override this function to modify the way the rich edit view responds to changes in [m_nWordWrap](#cricheditview__m_nwordwrap) or the printing characteristics ( [OnPrinterChanged](#cricheditview__onprinterchanged)).  \n  \n### Example  \n [!code-cpp[NVC_MFCDocView#163](../../mfc/codesnippet/cpp/cricheditview-class_13.cpp)]  \n  \n## See Also  \n [MFC Sample WORDPAD](../../visual-cpp-samples.md)   \n [CCtrlView Class](../../mfc/reference/cctrlview-class.md)   \n [Hierarchy Chart](../../mfc/hierarchy-chart.md)   \n [CRichEditDoc Class](../../mfc/reference/cricheditdoc-class.md)   \n [CRichEditCntrItem Class](../../mfc/reference/cricheditcntritem-class.md)\n"}