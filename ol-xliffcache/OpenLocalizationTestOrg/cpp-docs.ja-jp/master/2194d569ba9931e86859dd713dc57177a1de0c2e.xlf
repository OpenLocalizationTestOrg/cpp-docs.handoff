<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-787e512" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2194d569ba9931e86859dd713dc57177a1de0c2e</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\build\reference\changes-in-the-dll-delayed-loading-helper-function-since-visual-cpp-6-0.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c48668a65873e20571386101b6b4ee9eb3a1abf3</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a48de10e171e5e9180715498886c9837852041c6</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Changes in the DLL Delayed Loading Helper Function Since Visual C++ 6.0 | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Changes in the DLL Delayed Loading Helper Function Since Visual C++ 6.0</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>If you have multiple versions of Visual C++ on your computer or if you defined your own helper function, you may be affected by changes made to the DLL delayed loading helper function.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>For example:</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>__delayLoadHelper<ept id="p1">**</ept> is now <bpt id="p2">**</bpt>__delayLoadHelper2<ept id="p2">**</ept></source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>__pfnDliNotifyHook<ept id="p1">**</ept> is now <bpt id="p2">**</bpt>__pfnDliNotifyHook2<ept id="p2">**</ept></source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>__pfnDliFailureHook<ept id="p1">**</ept> is now <bpt id="p2">**</bpt>__pfnDliFailureHook2<ept id="p2">**</ept></source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>__FUnloadDelayLoadedDLL<ept id="p1">**</ept> is now <bpt id="p2">**</bpt>__FUnloadDelayLoadedDLL2<ept id="p2">**</ept></source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>If you are using the default helper function, these changes will not affect you.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>There are no changes regarding how you invoke the linker.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Multiple Versions of Visual C++</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>If you have multiple versions of Visual C++ on your computer, make sure the linker matches delayimp.lib.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>If there is a mismatch, you will get a linker error reporting either <ph id="ph1">`___delayLoadHelper2@8`</ph> or <ph id="ph2">`___delayLoadHelper@8`</ph> as an unresolved external symbol.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The former implies a new linker with an old delayimp.lib, and the latter implies an old linker with a new delayimp.lib.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>If you get an unresolved linker error, run <bpt id="p1">[</bpt>dumpbin /linkermember<ept id="p1">](../../build/reference/linkermember.md)</ept>:1 on the delayimp.lib that you expect to contain the helper function to see which helper function is defined instead.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The helper function could also be defined in an object file; run <bpt id="p1">[</bpt>dumpbin /symbols<ept id="p1">](../../build/reference/symbols.md)</ept> and look for <ph id="ph1">`delayLoadHelper(2)`</ph>.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>If you know you have the Visual C++ 6.0 linker, then:</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Run dumpbin on the delay load helper's .lib or .obj file to determine whether it defines <bpt id="p1">**</bpt>__delayLoadHelper2<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>If not, the link will fail.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Define <bpt id="p1">**</bpt>__delayLoadHelper<ept id="p1">**</ept> in the delay load helper's .lib or .obj file.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>User-Defined Helper Function</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>If you defined your own helper function and are using the current version of Visual C++, do the following:</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Rename the helper function to <bpt id="p1">**</bpt>__delayLoadHelper2<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Since the pointers in the delay descriptor (ImgDelayDescr in delayimp.h) have been changed from absolute addresses (VAs) to relative addresses (RVAs) to work as expected in both 32- and 64-bit programs, you need to convert these back to pointers.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>A new function has been introduced: PFromRva, found in delayhlp.cpp.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>You can use this function on each of the fields in the descriptor to convert them back to either 32- or 64-bit pointers.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The default delay load helper function continues to be a good template to use as an example.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Load All Imports for a Delay-Loaded DLL</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The linker can load all imports from a DLL that you specified to be delay loaded.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Loading All Imports for a Delay-Loaded DLL<ept id="p1">](../../build/reference/loading-all-imports-for-a-delay-loaded-dll.md)</ept> for more information.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Understanding the Helper Function</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>