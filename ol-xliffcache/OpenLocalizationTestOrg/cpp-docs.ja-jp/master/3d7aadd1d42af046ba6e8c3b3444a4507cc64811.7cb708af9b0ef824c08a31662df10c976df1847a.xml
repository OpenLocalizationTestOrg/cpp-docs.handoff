{"nodes":[{"pos":[12,47],"content":"C++ Integer Limits | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"C++ Integer Limits | Microsoft Docs","pos":[0,35]}]},{"content":"C++ Integer Limits","pos":[633,651]},{"content":"Microsoft Specific","pos":[654,672]},{"content":"The limits for integer types are listed in the following table.","pos":[681,744]},{"content":"These limits are defined in the standard header file LIMITS.H.","pos":[745,807]},{"content":"Microsoft C also permits the declaration of sized integer variables, which are integral types of size 8-, 16-, or 32-bits.","pos":[808,930]},{"content":"For more information on sized integers, see <bpt id=\"p1\">[</bpt>Sized Integer Types<ept id=\"p1\">](../c-language/c-sized-integer-types.md)</ept>.","pos":[931,1037],"source":" For more information on sized integers, see [Sized Integer Types](../c-language/c-sized-integer-types.md)."},{"content":"Limits on Integer Constants","pos":[1047,1074]},{"content":"Constant","pos":[1083,1091]},{"content":"Meaning","pos":[1094,1101]},{"content":"Value","pos":[1102,1107]},{"content":"CHAR_BIT","pos":[1163,1171]},{"content":"Number of bits in the smallest variable that is not a bit field.","pos":[1174,1238]},{"content":"8","pos":[1239,1240]},{"content":"SCHAR_MIN","pos":[1247,1256]},{"pos":[1259,1312],"content":"Minimum value for a variable of type <bpt id=\"p1\">**</bpt>signed char<ept id=\"p1\">**</ept>.","source":"Minimum value for a variable of type **signed char**."},{"content":"–128","pos":[1313,1317]},{"content":"SCHAR_MAX","pos":[1324,1333]},{"pos":[1336,1389],"content":"Maximum value for a variable of type <bpt id=\"p1\">**</bpt>signed char<ept id=\"p1\">**</ept>.","source":"Maximum value for a variable of type **signed char**."},{"content":"127","pos":[1390,1393]},{"content":"UCHAR_MAX","pos":[1400,1409]},{"pos":[1412,1465],"content":"Maximum value for a variable of type <ph id=\"ph1\">`unsigned char`</ph>.","source":"Maximum value for a variable of type `unsigned char`."},{"content":"255 (0xff)","pos":[1466,1476]},{"content":"CHAR_MIN","pos":[1483,1491]},{"pos":[1494,1538],"content":"Minimum value for a variable of type <ph id=\"ph1\">`char`</ph>.","source":"Minimum value for a variable of type `char`."},{"content":"–128; 0 if /J option used","pos":[1539,1564]},{"content":"CHAR_MAX","pos":[1571,1579]},{"pos":[1582,1626],"content":"Maximum value for a variable of type <ph id=\"ph1\">`char`</ph>.","source":"Maximum value for a variable of type `char`."},{"content":"127; 255 if /J option used","pos":[1627,1653]},{"content":"MB_LEN_MAX","pos":[1660,1670]},{"content":"Maximum number of bytes in a multicharacter constant.","pos":[1673,1726]},{"content":"5","pos":[1727,1728]},{"content":"SHRT_MIN","pos":[1735,1743]},{"pos":[1746,1793],"content":"Minimum value for a variable of type <bpt id=\"p1\">**</bpt>short<ept id=\"p1\">**</ept>.","source":"Minimum value for a variable of type **short**."},{"content":"–32768","pos":[1794,1800]},{"content":"SHRT_MAX","pos":[1807,1815]},{"pos":[1818,1865],"content":"Maximum value for a variable of type <bpt id=\"p1\">**</bpt>short<ept id=\"p1\">**</ept>.","source":"Maximum value for a variable of type **short**."},{"content":"32767","pos":[1866,1871]},{"content":"USHRT_MAX","pos":[1878,1887]},{"pos":[1890,1946],"content":"Maximum value for a variable of type <bpt id=\"p1\">**</bpt>unsigned short<ept id=\"p1\">**</ept>.","source":"Maximum value for a variable of type **unsigned short**."},{"content":"65535 (0xffff)","pos":[1947,1961]},{"content":"INT_MIN","pos":[1968,1975]},{"pos":[1978,2021],"content":"Minimum value for a variable of type <ph id=\"ph1\">`int`</ph>.","source":"Minimum value for a variable of type `int`."},{"content":"–2147483647 – 1","pos":[2022,2037]},{"content":"INT_MAX","pos":[2044,2051]},{"pos":[2054,2097],"content":"Maximum value for a variable of type <ph id=\"ph1\">`int`</ph>.","source":"Maximum value for a variable of type `int`."},{"content":"2147483647","pos":[2098,2108]},{"content":"UINT_MAX","pos":[2115,2123]},{"pos":[2126,2178],"content":"Maximum value for a variable of type <ph id=\"ph1\">`unsigned int`</ph>.","source":"Maximum value for a variable of type `unsigned int`."},{"content":"4294967295 (0xffffffff)","pos":[2179,2202]},{"content":"LONG_MIN","pos":[2209,2217]},{"pos":[2220,2266],"content":"Minimum value for a variable of type <bpt id=\"p1\">**</bpt>long<ept id=\"p1\">**</ept>.","source":"Minimum value for a variable of type **long**."},{"content":"–2147483647 – 1","pos":[2267,2282]},{"content":"LONG_MAX","pos":[2289,2297]},{"pos":[2300,2346],"content":"Maximum value for a variable of type <bpt id=\"p1\">**</bpt>long<ept id=\"p1\">**</ept>.","source":"Maximum value for a variable of type **long**."},{"content":"2147483647","pos":[2347,2357]},{"content":"ULONG_MAX","pos":[2364,2373]},{"pos":[2376,2429],"content":"Maximum value for a variable of type <ph id=\"ph1\">`unsigned long`</ph>.","source":"Maximum value for a variable of type `unsigned long`."},{"content":"4294967295 (0xffffffff)","pos":[2430,2453]},{"content":"If a value exceeds the largest integer representation, the Microsoft compiler generates an error.","pos":[2461,2558]},{"content":"END Microsoft Specific","pos":[2567,2589]},{"content":"See Also","pos":[2600,2608]},{"content":"C Integer Constants","pos":[2613,2632]}],"content":"---\ntitle: \"C++ Integer Limits | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"C++\"\n  - \"C\"\nhelpviewer_keywords: \n  - \"limits, integer\"\n  - \"limits, integer constants\"\n  - \"integer limits\"\nms.assetid: 0c23cbd6-29fb-4d9c-b689-5984e19748de\ncaps.latest.revision: 11\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# C++ Integer Limits\n**Microsoft Specific**  \n  \n The limits for integer types are listed in the following table. These limits are defined in the standard header file LIMITS.H. Microsoft C also permits the declaration of sized integer variables, which are integral types of size 8-, 16-, or 32-bits. For more information on sized integers, see [Sized Integer Types](../c-language/c-sized-integer-types.md).  \n  \n### Limits on Integer Constants  \n  \n|**Constant**|Meaning|Value|  \n|------------------|-------------|-----------|  \n|**CHAR_BIT**|Number of bits in the smallest variable that is not a bit field.|8|  \n|**SCHAR_MIN**|Minimum value for a variable of type **signed char**.|–128|  \n|**SCHAR_MAX**|Maximum value for a variable of type **signed char**.|127|  \n|**UCHAR_MAX**|Maximum value for a variable of type `unsigned char`.|255 (0xff)|  \n|**CHAR_MIN**|Minimum value for a variable of type `char`.|–128; 0 if /J option used|  \n|**CHAR_MAX**|Maximum value for a variable of type `char`.|127; 255 if /J option used|  \n|**MB_LEN_MAX**|Maximum number of bytes in a multicharacter constant.|5|  \n|**SHRT_MIN**|Minimum value for a variable of type **short**.|–32768|  \n|**SHRT_MAX**|Maximum value for a variable of type **short**.|32767|  \n|**USHRT_MAX**|Maximum value for a variable of type **unsigned short**.|65535 (0xffff)|  \n|**INT_MIN**|Minimum value for a variable of type `int`.|–2147483647 – 1|  \n|**INT_MAX**|Maximum value for a variable of type `int`.|2147483647|  \n|**UINT_MAX**|Maximum value for a variable of type `unsigned int`.|4294967295 (0xffffffff)|  \n|**LONG_MIN**|Minimum value for a variable of type **long**.|–2147483647 – 1|  \n|**LONG_MAX**|Maximum value for a variable of type **long**.|2147483647|  \n|**ULONG_MAX**|Maximum value for a variable of type `unsigned long`.|4294967295 (0xffffffff)|  \n  \n If a value exceeds the largest integer representation, the Microsoft compiler generates an error.  \n  \n **END Microsoft Specific**  \n  \n## See Also  \n [C Integer Constants](../c-language/c-integer-constants.md)"}