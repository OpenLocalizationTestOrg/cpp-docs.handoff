{"nodes":[{"pos":[12,47],"content":"WeakRef::As Method | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"WeakRef::As Method | Microsoft Docs","pos":[0,35]}]},{"content":"WeakRef::As Method","pos":[648,666]},{"content":"Sets the specified ComPtr pointer parameter to represent the specified interface.","pos":[667,748]},{"content":"Syntax","pos":[757,763]},{"content":"Parameters","pos":[968,978]},{"content":"An interface ID.","pos":[989,1005]},{"content":"When this operation completes, an object that represents parameter <ph id=\"ph1\">`U`</ph>.","pos":[1021,1092],"source":" When this operation completes, an object that represents parameter `U`."},{"content":"Return Value","pos":[1101,1113]},{"pos":[1123,1256],"content":"S_OK if this operation succeeds; otherwise, an HRESULT that indicates the reason the operation failed, and <ph id=\"ph1\">`ptr`</ph> is set to <ph id=\"ph2\">`nullptr`</ph>.","source":"S_OK if this operation succeeds; otherwise, an HRESULT that indicates the reason the operation failed, and `ptr` is set to `nullptr`."},{"content":"S_OK if this operation succeeds, but the current WeakRef object has already been released.","pos":[1266,1356]},{"content":"Parameter <ph id=\"ph1\">`ptr`</ph> is set to <ph id=\"ph2\">`nullptr`</ph>.","pos":[1357,1393],"source":" Parameter `ptr` is set to `nullptr`."},{"content":"S_OK if this operation succeeds, but the current WeakRef object is not derived from parameter <ph id=\"ph1\">`U`</ph>.","pos":[1403,1501],"source":"S_OK if this operation succeeds, but the current WeakRef object is not derived from parameter `U`."},{"content":"Parameter <ph id=\"ph1\">`ptr`</ph> is set to <ph id=\"ph2\">`nullptr`</ph>.","pos":[1502,1538],"source":" Parameter `ptr` is set to `nullptr`."},{"content":"Remarks","pos":[1547,1554]},{"pos":[1558,1650],"content":"An error is emitted if parameter <ph id=\"ph1\">`U`</ph> is IWeakReference, or is not derived from IInspectable.","source":"An error is emitted if parameter `U` is IWeakReference, or is not derived from IInspectable."},{"content":"The first template is the form that you should use in your code.","pos":[1657,1721]},{"content":"The second template is an internal, helper specialization that supports C++ language features such as the <bpt id=\"p1\">[</bpt>auto<ept id=\"p1\">](../cpp/auto-cpp.md)</ept> type deduction keyword.","pos":[1722,1878],"source":" The second template is an internal, helper specialization that supports C++ language features such as the [auto](../cpp/auto-cpp.md) type deduction keyword."},{"content":"Starting in the Windows 10 SDK, this method does not set the WeakRef instance to <ph id=\"ph1\">`nullptr`</ph> if the weak reference could not be obtained, so you should avoid error-checking code that checks the WeakRef for <ph id=\"ph2\">`nullptr`</ph>.","pos":[1885,2099],"source":"Starting in the Windows 10 SDK, this method does not set the WeakRef instance to `nullptr` if the weak reference could not be obtained, so you should avoid error-checking code that checks the WeakRef for `nullptr`."},{"content":"Instead, check <ph id=\"ph1\">`ptr`</ph> for <ph id=\"ph2\">`nullptr`</ph>.","pos":[2100,2135],"source":" Instead, check `ptr` for `nullptr`."},{"content":"Requirements","pos":[2144,2156]},{"pos":[2160,2180],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> client.h","source":"**Header:** client.h"},{"pos":[2187,2216],"content":"<bpt id=\"p1\">**</bpt>Namespace:<ept id=\"p1\">**</ept> Microsoft::WRL","source":"**Namespace:** Microsoft::WRL"},{"content":"See Also","pos":[2225,2233]},{"content":"WeakRef Class","pos":[2238,2251]}],"content":"---\ntitle: \"WeakRef::As Method | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"client/Microsoft::WRL::WeakRef::As\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"As method\"\nms.assetid: 7173da62-b3fe-44d6-aea4-1aa97e69b221\ncaps.latest.revision: 6\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"ru-ru\"\n  - \"zh-cn\"\n  - \"zh-tw\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"tr-tr\"\n---\n# WeakRef::As Method\nSets the specified ComPtr pointer parameter to represent the specified interface.  \n  \n## Syntax  \n  \n```  \n  \ntemplate<  \n   typename U  \n>  \nHRESULT As(  \n   _Out_ ComPtr<U>* ptr  \n);  \n  \ntemplate<  \n   typename U  \n>  \nHRESULT As(  \n   _Out_ Details::ComPtrRef<ComPtr<U>> ptr  \n);  \n```  \n  \n#### Parameters  \n `U`  \n An interface ID.  \n  \n `ptr`  \n When this operation completes, an object that represents parameter `U`.  \n  \n## Return Value  \n  \n-   S_OK if this operation succeeds; otherwise, an HRESULT that indicates the reason the operation failed, and `ptr` is set to `nullptr`.  \n  \n-   S_OK if this operation succeeds, but the current WeakRef object has already been released. Parameter `ptr` is set to `nullptr`.  \n  \n-   S_OK if this operation succeeds, but the current WeakRef object is not derived from parameter `U`. Parameter `ptr` is set to `nullptr`.  \n  \n## Remarks  \n An error is emitted if parameter `U` is IWeakReference, or is not derived from IInspectable.  \n  \n The first template is the form that you should use in your code. The second template is an internal, helper specialization that supports C++ language features such as the [auto](../cpp/auto-cpp.md) type deduction keyword.  \n  \n Starting in the Windows 10 SDK, this method does not set the WeakRef instance to `nullptr` if the weak reference could not be obtained, so you should avoid error-checking code that checks the WeakRef for `nullptr`. Instead, check `ptr` for `nullptr`.  \n  \n## Requirements  \n **Header:** client.h  \n  \n **Namespace:** Microsoft::WRL  \n  \n## See Also  \n [WeakRef Class](../windows/weakref-class.md)"}