{"nodes":[{"pos":[12,46],"content":"CLongBinary Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"CLongBinary Class | Microsoft Docs","pos":[0,34]}]},{"pos":[703,720],"content":"CLongBinary Class","linkify":"CLongBinary Class","nodes":[{"content":"CLongBinary Class","pos":[0,17]}]},{"content":"Simplifies working with very large binary data objects (often called BLOBs, or \"binary large objects\") in a database.","pos":[721,838]},{"pos":[847,853],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[914,921],"content":"Members","linkify":"Members","nodes":[{"content":"Members","pos":[0,7]}]},{"pos":[931,950],"content":"Public Constructors","linkify":"Public Constructors","nodes":[{"content":"Public Constructors","pos":[0,19]}]},{"content":"Name","pos":[957,961]},{"content":"Description","pos":[962,973]},{"pos":[1011,1064],"content":"<bpt id=\"p1\">[</bpt>CLongBinary::CLongBinary<ept id=\"p1\">](#clongbinary__clongbinary)</ept>","source":"[CLongBinary::CLongBinary](#clongbinary__clongbinary)"},{"pos":[1065,1099],"content":"Constructs a <ph id=\"ph1\">`CLongBinary`</ph> object.","source":"Constructs a `CLongBinary` object."},{"pos":[1110,1129],"content":"Public Data Members","linkify":"Public Data Members","nodes":[{"content":"Public Data Members","pos":[0,19]}]},{"content":"Name","pos":[1136,1140]},{"content":"Description","pos":[1141,1152]},{"pos":[1190,1249],"content":"<bpt id=\"p1\">[</bpt>CLongBinary::m_dwDataLength<ept id=\"p1\">](#clongbinary__m_dwdatalength)</ept>","source":"[CLongBinary::m_dwDataLength](#clongbinary__m_dwdatalength)"},{"pos":[1250,1339],"content":"Contains the actual size in bytes of the data object whose handle is stored in <ph id=\"ph1\">`m_hData`</ph>.","source":"Contains the actual size in bytes of the data object whose handle is stored in `m_hData`."},{"pos":[1344,1389],"content":"<bpt id=\"p1\">[</bpt>CLongBinary::m_hData<ept id=\"p1\">](#clongbinary__m_hdata)</ept>","source":"[CLongBinary::m_hData](#clongbinary__m_hdata)"},{"pos":[1390,1453],"content":"Contains a Windows <ph id=\"ph1\">`HGLOBAL`</ph> handle to the actual image object.","source":"Contains a Windows `HGLOBAL` handle to the actual image object."},{"pos":[1463,1470],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"For example, a record field in a SQL table might contain a bitmap representing a picture.","pos":[1474,1563]},{"content":"A <ph id=\"ph1\">`CLongBinary`</ph> object stores such an object and keeps track of its size.","pos":[1564,1637],"source":" A `CLongBinary` object stores such an object and keeps track of its size."},{"pos":[1645,2170],"content":"[!NOTE]\n In general, it is better practice now to use [CByteArray](../../mfc/reference/cbytearray-class.md) in conjunction with the [DFX_Binary](http://msdn.microsoft.com/library/678021a3-2e46-44d7-8528-71bb692dcc07) function. You can still use `CLongBinary`, but in general `CByteArray` provides more functionality under Win32, since there is no longer the size limitation encountered with 16-bit `CByteArray`. This advice applies to programming with Data Access Objects (DAO) as well as Open Database Connectivity (ODBC).","leadings":["","> "],"nodes":[{"content":" In general, it is better practice now to use [CByteArray](../../mfc/reference/cbytearray-class.md) in conjunction with the [DFX_Binary](http://msdn.microsoft.com/library/678021a3-2e46-44d7-8528-71bb692dcc07) function. You can still use `CLongBinary`, but in general `CByteArray` provides more functionality under Win32, since there is no longer the size limitation encountered with 16-bit `CByteArray`. This advice applies to programming with Data Access Objects (DAO) as well as Open Database Connectivity (ODBC).","pos":[8,523],"nodes":[{"content":"In general, it is better practice now to use <bpt id=\"p1\">[</bpt>CByteArray<ept id=\"p1\">](../../mfc/reference/cbytearray-class.md)</ept> in conjunction with the <bpt id=\"p2\">[</bpt>DFX_Binary<ept id=\"p2\">](http://msdn.microsoft.com/library/678021a3-2e46-44d7-8528-71bb692dcc07)</ept> function.","pos":[1,218],"source":" In general, it is better practice now to use [CByteArray](../../mfc/reference/cbytearray-class.md) in conjunction with the [DFX_Binary](http://msdn.microsoft.com/library/678021a3-2e46-44d7-8528-71bb692dcc07) function."},{"content":"You can still use <ph id=\"ph1\">`CLongBinary`</ph>, but in general <ph id=\"ph2\">`CByteArray`</ph> provides more functionality under Win32, since there is no longer the size limitation encountered with 16-bit <ph id=\"ph3\">`CByteArray`</ph>.","pos":[219,403],"source":" You can still use `CLongBinary`, but in general `CByteArray` provides more functionality under Win32, since there is no longer the size limitation encountered with 16-bit `CByteArray`."},{"content":"This advice applies to programming with Data Access Objects (DAO) as well as Open Database Connectivity (ODBC).","pos":[404,515]}]}]},{"content":"To use a <ph id=\"ph1\">`CLongBinary`</ph> object, declare a field data member of type <ph id=\"ph2\">`CLongBinary`</ph> in your recordset class.","pos":[2177,2282],"source":"To use a `CLongBinary` object, declare a field data member of type `CLongBinary` in your recordset class."},{"content":"This member will be an embedded member of the recordset class and will be constructed when the recordset is constructed.","pos":[2283,2403]},{"content":"After the <ph id=\"ph1\">`CLongBinary`</ph> object is constructed, the record field exchange (RFX) mechanism loads the data object from a field in the current record on the data source and stores it back to the record when the record is updated.","pos":[2404,2629],"source":" After the `CLongBinary` object is constructed, the record field exchange (RFX) mechanism loads the data object from a field in the current record on the data source and stores it back to the record when the record is updated."},{"content":"RFX queries the data source for the size of the binary large object, allocates storage for it (via the <ph id=\"ph1\">`CLongBinary`</ph> object's <ph id=\"ph2\">`m_hData`</ph> data member), and stores an <ph id=\"ph3\">`HGLOBAL`</ph> handle to the data in <ph id=\"ph4\">`m_hData`</ph>.","pos":[2630,2836],"source":" RFX queries the data source for the size of the binary large object, allocates storage for it (via the `CLongBinary` object's `m_hData` data member), and stores an `HGLOBAL` handle to the data in `m_hData`."},{"content":"RFX also stores the actual size of the data object in the <ph id=\"ph1\">`m_dwDataLength`</ph> data member.","pos":[2837,2924],"source":" RFX also stores the actual size of the data object in the `m_dwDataLength` data member."},{"content":"Work with the data in the object through <ph id=\"ph1\">`m_hData`</ph>, using the same techniques you would normally use to manipulate the data stored in a Windows <ph id=\"ph2\">`HGLOBAL`</ph> handle.","pos":[2925,3086],"source":" Work with the data in the object through `m_hData`, using the same techniques you would normally use to manipulate the data stored in a Windows `HGLOBAL` handle."},{"pos":[3093,3236],"content":"When you destroy your recordset, the embedded <ph id=\"ph1\">`CLongBinary`</ph> object is also destroyed, and its destructor deallocates the <ph id=\"ph2\">`HGLOBAL`</ph> data handle.","source":"When you destroy your recordset, the embedded `CLongBinary` object is also destroyed, and its destructor deallocates the `HGLOBAL` data handle."},{"pos":[3243,3504],"content":"For more information about large objects and the use of <ph id=\"ph1\">`CLongBinary`</ph>, see the articles <bpt id=\"p1\">[</bpt>Recordset (ODBC)<ept id=\"p1\">](../../data/odbc/recordset-odbc.md)</ept> and <bpt id=\"p2\">[</bpt>Recordset: Working with Large Data Items (ODBC)<ept id=\"p2\">](../../data/odbc/recordset-working-with-large-data-items-odbc.md)</ept>.","source":"For more information about large objects and the use of `CLongBinary`, see the articles [Recordset (ODBC)](../../data/odbc/recordset-odbc.md) and [Recordset: Working with Large Data Items (ODBC)](../../data/odbc/recordset-working-with-large-data-items-odbc.md)."},{"pos":[3513,3534],"content":"Inheritance Hierarchy","linkify":"Inheritance Hierarchy","nodes":[{"content":"Inheritance Hierarchy","pos":[0,21]}]},{"pos":[3538,3585],"content":"<bpt id=\"p1\">[</bpt>CObject<ept id=\"p1\">](../../mfc/reference/cobject-class.md)</ept>","source":"[CObject](../../mfc/reference/cobject-class.md)"},{"pos":[3614,3626],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[3630,3650],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> afxdb_.h","source":"**Header:** afxdb_.h"},{"pos":[3660,3725],"content":"<bpt id=\"p1\">&lt;a name=\"clongbinary__clongbinary\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CLongBinary::CLongBinary","linkify":"<a name=\"clongbinary__clongbinary\"></a>  CLongBinary::CLongBinary","source":"<a name=\"clongbinary__clongbinary\"></a>  CLongBinary::CLongBinary"},{"pos":[3729,3763],"content":"Constructs a <ph id=\"ph1\">`CLongBinary`</ph> object.","source":"Constructs a `CLongBinary` object."},{"pos":[3803,3874],"content":"<bpt id=\"p1\">&lt;a name=\"clongbinary__m_dwdatalength\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CLongBinary::m_dwDataLength","linkify":"<a name=\"clongbinary__m_dwdatalength\"></a>  CLongBinary::m_dwDataLength","source":"<a name=\"clongbinary__m_dwdatalength\"></a>  CLongBinary::m_dwDataLength"},{"pos":[3878,3966],"content":"Stores the actual size in bytes of the data stored in the <ph id=\"ph1\">`HGLOBAL`</ph> handle in <ph id=\"ph2\">`m_hData`</ph>.","source":"Stores the actual size in bytes of the data stored in the `HGLOBAL` handle in `m_hData`."},{"pos":[4017,4024],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This size may be smaller than the size of the memory block allocated for the data.","pos":[4028,4110]},{"content":"Call the Win32 <bpt id=\"p1\">[</bpt>GLobalSize<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/aa366593)</ept> function to get the allocated size.","pos":[4111,4234],"source":" Call the Win32 [GLobalSize](http://msdn.microsoft.com/library/windows/desktop/aa366593) function to get the allocated size."},{"pos":[4244,4301],"content":"<bpt id=\"p1\">&lt;a name=\"clongbinary__m_hdata\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CLongBinary::m_hData","linkify":"<a name=\"clongbinary__m_hdata\"></a>  CLongBinary::m_hData","source":"<a name=\"clongbinary__m_hdata\"></a>  CLongBinary::m_hData"},{"pos":[4305,4378],"content":"Stores a Windows <ph id=\"ph1\">`HGLOBAL`</ph> handle to the actual binary large object data.","source":"Stores a Windows `HGLOBAL` handle to the actual binary large object data."},{"pos":[4421,4429],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>CObject Class<ept id=\"p1\">](../../mfc/reference/cobject-class.md)</ept><ph id=\"ph1\"> </ph>","pos":[4433,4487],"source":"[CObject Class](../../mfc/reference/cobject-class.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Hierarchy Chart<ept id=\"p1\">](../../mfc/hierarchy-chart.md)</ept><ph id=\"ph1\"> </ph>","pos":[4490,4539],"source":" [Hierarchy Chart](../../mfc/hierarchy-chart.md) "},{"content":"<bpt id=\"p1\"> [</bpt>CRecordset Class<ept id=\"p1\">](../../mfc/reference/crecordset-class.md)</ept>","pos":[4542,4602],"source":" [CRecordset Class](../../mfc/reference/crecordset-class.md)"}],"content":"---\ntitle: \"CLongBinary Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"BLOB\"\n  - \"CLongBinary\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"BLOB (binary large object)\"\n  - \"CLongBinary class\"\n  - \"BLOB (binary large object), CLongBinary class\"\nms.assetid: f4320059-aeb4-4ee5-bc2b-25f19d898ef5\ncaps.latest.revision: 21\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# CLongBinary Class\nSimplifies working with very large binary data objects (often called BLOBs, or \"binary large objects\") in a database.  \n  \n## Syntax  \n  \n```  \nclass CLongBinary : public CObject  \n```  \n  \n## Members  \n  \n### Public Constructors  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CLongBinary::CLongBinary](#clongbinary__clongbinary)|Constructs a `CLongBinary` object.|  \n  \n### Public Data Members  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CLongBinary::m_dwDataLength](#clongbinary__m_dwdatalength)|Contains the actual size in bytes of the data object whose handle is stored in `m_hData`.|  \n|[CLongBinary::m_hData](#clongbinary__m_hdata)|Contains a Windows `HGLOBAL` handle to the actual image object.|  \n  \n## Remarks  \n For example, a record field in a SQL table might contain a bitmap representing a picture. A `CLongBinary` object stores such an object and keeps track of its size.  \n  \n> [!NOTE]\n>  In general, it is better practice now to use [CByteArray](../../mfc/reference/cbytearray-class.md) in conjunction with the [DFX_Binary](http://msdn.microsoft.com/library/678021a3-2e46-44d7-8528-71bb692dcc07) function. You can still use `CLongBinary`, but in general `CByteArray` provides more functionality under Win32, since there is no longer the size limitation encountered with 16-bit `CByteArray`. This advice applies to programming with Data Access Objects (DAO) as well as Open Database Connectivity (ODBC).  \n  \n To use a `CLongBinary` object, declare a field data member of type `CLongBinary` in your recordset class. This member will be an embedded member of the recordset class and will be constructed when the recordset is constructed. After the `CLongBinary` object is constructed, the record field exchange (RFX) mechanism loads the data object from a field in the current record on the data source and stores it back to the record when the record is updated. RFX queries the data source for the size of the binary large object, allocates storage for it (via the `CLongBinary` object's `m_hData` data member), and stores an `HGLOBAL` handle to the data in `m_hData`. RFX also stores the actual size of the data object in the `m_dwDataLength` data member. Work with the data in the object through `m_hData`, using the same techniques you would normally use to manipulate the data stored in a Windows `HGLOBAL` handle.  \n  \n When you destroy your recordset, the embedded `CLongBinary` object is also destroyed, and its destructor deallocates the `HGLOBAL` data handle.  \n  \n For more information about large objects and the use of `CLongBinary`, see the articles [Recordset (ODBC)](../../data/odbc/recordset-odbc.md) and [Recordset: Working with Large Data Items (ODBC)](../../data/odbc/recordset-working-with-large-data-items-odbc.md).  \n  \n## Inheritance Hierarchy  \n [CObject](../../mfc/reference/cobject-class.md)  \n  \n `CLongBinary`  \n  \n## Requirements  \n **Header:** afxdb_.h  \n  \n##  <a name=\"clongbinary__clongbinary\"></a>  CLongBinary::CLongBinary  \n Constructs a `CLongBinary` object.  \n  \n```  \nCLongBinary();\n```  \n  \n##  <a name=\"clongbinary__m_dwdatalength\"></a>  CLongBinary::m_dwDataLength  \n Stores the actual size in bytes of the data stored in the `HGLOBAL` handle in `m_hData`.  \n  \n```  \nSQLULEN m_dwDataLength;  \n```  \n  \n### Remarks  \n This size may be smaller than the size of the memory block allocated for the data. Call the Win32 [GLobalSize](http://msdn.microsoft.com/library/windows/desktop/aa366593) function to get the allocated size.  \n  \n##  <a name=\"clongbinary__m_hdata\"></a>  CLongBinary::m_hData  \n Stores a Windows `HGLOBAL` handle to the actual binary large object data.  \n  \n```  \nHGLOBAL m_hData;  \n```  \n  \n## See Also  \n [CObject Class](../../mfc/reference/cobject-class.md)   \n [Hierarchy Chart](../../mfc/hierarchy-chart.md)   \n [CRecordset Class](../../mfc/reference/crecordset-class.md)\n"}