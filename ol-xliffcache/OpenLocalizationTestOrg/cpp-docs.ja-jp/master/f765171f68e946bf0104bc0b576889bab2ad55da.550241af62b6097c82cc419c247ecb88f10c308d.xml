{"nodes":[{"pos":[12,41],"content":"CCmdUI Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"CCmdUI Class | Microsoft Docs","pos":[0,29]}]},{"pos":[903,915],"content":"CCmdUI Class","linkify":"CCmdUI Class","nodes":[{"content":"CCmdUI Class","pos":[0,12]}]},{"pos":[916,1002],"content":"Is used only within an <ph id=\"ph1\">`ON_UPDATE_COMMAND_UI`</ph> handler in a <ph id=\"ph2\">`CCmdTarget`</ph>-derived class.","source":"Is used only within an `ON_UPDATE_COMMAND_UI` handler in a `CCmdTarget`-derived class."},{"pos":[1011,1017],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[1056,1063],"content":"Members","linkify":"Members","nodes":[{"content":"Members","pos":[0,7]}]},{"pos":[1073,1087],"content":"Public Methods","linkify":"Public Methods","nodes":[{"content":"Public Methods","pos":[0,14]}]},{"content":"Name","pos":[1094,1098]},{"content":"Description","pos":[1099,1110]},{"pos":[1148,1199],"content":"<bpt id=\"p1\">[</bpt>CCmdUI::ContinueRouting<ept id=\"p1\">](#ccmdui__continuerouting)</ept>","source":"[CCmdUI::ContinueRouting](#ccmdui__continuerouting)"},{"content":"Tells the command-routing mechanism to continue routing the current message down the chain of handlers.","pos":[1200,1303]},{"pos":[1308,1341],"content":"<bpt id=\"p1\">[</bpt>CCmdUI::Enable<ept id=\"p1\">](#ccmdui__enable)</ept>","source":"[CCmdUI::Enable](#ccmdui__enable)"},{"content":"Enables or disables the user-interface item for this command.","pos":[1342,1403]},{"pos":[1408,1445],"content":"<bpt id=\"p1\">[</bpt>CCmdUI::SetCheck<ept id=\"p1\">](#ccmdui__setcheck)</ept>","source":"[CCmdUI::SetCheck](#ccmdui__setcheck)"},{"content":"Sets the check state of the user-interface item for this command.","pos":[1446,1511]},{"pos":[1516,1553],"content":"<bpt id=\"p1\">[</bpt>CCmdUI::SetRadio<ept id=\"p1\">](#ccmdui__setradio)</ept>","source":"[CCmdUI::SetRadio](#ccmdui__setradio)"},{"pos":[1554,1620],"content":"Like the <ph id=\"ph1\">`SetCheck`</ph> member function, but operates on radio groups.","source":"Like the `SetCheck` member function, but operates on radio groups."},{"pos":[1625,1660],"content":"<bpt id=\"p1\">[</bpt>CCmdUI::SetText<ept id=\"p1\">](#ccmdui__settext)</ept>","source":"[CCmdUI::SetText](#ccmdui__settext)"},{"content":"Sets the text for the user-interface item for this command.","pos":[1661,1720]},{"pos":[1731,1750],"content":"Public Data Members","linkify":"Public Data Members","nodes":[{"content":"Public Data Members","pos":[0,19]}]},{"content":"Name","pos":[1757,1761]},{"content":"Description","pos":[1762,1773]},{"pos":[1811,1842],"content":"<bpt id=\"p1\">[</bpt>CCmdUI::m_nID<ept id=\"p1\">](#ccmdui__m_nid)</ept>","source":"[CCmdUI::m_nID](#ccmdui__m_nid)"},{"content":"The ID of the user-interface object.","pos":[1843,1879]},{"pos":[1884,1921],"content":"<bpt id=\"p1\">[</bpt>CCmdUI::m_nIndex<ept id=\"p1\">](#ccmdui__m_nindex)</ept>","source":"[CCmdUI::m_nIndex](#ccmdui__m_nindex)"},{"content":"The index of the user-interface object.","pos":[1922,1961]},{"pos":[1966,2001],"content":"<bpt id=\"p1\">[</bpt>CCmdUI::m_pMenu<ept id=\"p1\">](#ccmdui__m_pmenu)</ept>","source":"[CCmdUI::m_pMenu](#ccmdui__m_pmenu)"},{"pos":[2002,2056],"content":"Points to the menu represented by the <ph id=\"ph1\">`CCmdUI`</ph> object.","source":"Points to the menu represented by the `CCmdUI` object."},{"pos":[2061,2098],"content":"<bpt id=\"p1\">[</bpt>CCmdUI::m_pOther<ept id=\"p1\">](#ccmdui__m_pother)</ept>","source":"[CCmdUI::m_pOther](#ccmdui__m_pother)"},{"content":"Points to the window object that sent the notification.","pos":[2099,2154]},{"pos":[2159,2200],"content":"<bpt id=\"p1\">[</bpt>CCmdUI::m_pSubMenu<ept id=\"p1\">](#ccmdui__m_psubmenu)</ept>","source":"[CCmdUI::m_pSubMenu](#ccmdui__m_psubmenu)"},{"pos":[2201,2269],"content":"Points to the contained sub-menu represented by the <ph id=\"ph1\">`CCmdUI`</ph> object.","source":"Points to the contained sub-menu represented by the `CCmdUI` object."},{"pos":[2279,2286],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[2290,2326],"content":"<ph id=\"ph1\">`CCmdUI`</ph> does not have a base class.","source":"`CCmdUI` does not have a base class."},{"content":"When a user of your application pulls down a menu, each menu item needs to know whether it should be displayed as enabled or disabled.","pos":[2333,2467]},{"content":"The target of a menu command provides this information by implementing an <ph id=\"ph1\">`ON_UPDATE_COMMAND_UI`</ph> handler.","pos":[2468,2573],"source":" The target of a menu command provides this information by implementing an `ON_UPDATE_COMMAND_UI` handler."},{"content":"For each of the command user-interface objects in your application, use the Properties window to create a message-map entry and function prototype for each handler.","pos":[2574,2738]},{"pos":[2745,2989],"content":"When the menu is pulled down, the framework searches for and calls each <ph id=\"ph1\">`ON_UPDATE_COMMAND_UI`</ph> handler, each handler calls <ph id=\"ph2\">`CCmdUI`</ph> member functions such as <bpt id=\"p1\">**</bpt>Enable<ept id=\"p1\">**</ept> and <bpt id=\"p2\">**</bpt>Check<ept id=\"p2\">**</ept>, and the framework then appropriately displays each menu item.","source":"When the menu is pulled down, the framework searches for and calls each `ON_UPDATE_COMMAND_UI` handler, each handler calls `CCmdUI` member functions such as **Enable** and **Check**, and the framework then appropriately displays each menu item."},{"pos":[2996,3157],"content":"A menu item can be replaced with a control-bar button or other command user-interface object without changing the code within the <ph id=\"ph1\">`ON_UPDATE_COMMAND_UI`</ph> handler.","source":"A menu item can be replaced with a control-bar button or other command user-interface object without changing the code within the `ON_UPDATE_COMMAND_UI` handler."},{"pos":[3164,3279],"content":"The following table summarizes the effect <ph id=\"ph1\">`CCmdUI`</ph>'s member functions have on various command user-interface items.","source":"The following table summarizes the effect `CCmdUI`'s member functions have on various command user-interface items."},{"content":"User-Interface Item","pos":[3286,3305]},{"content":"Enable","pos":[3306,3312]},{"content":"SetCheck","pos":[3313,3321]},{"content":"SetRadio","pos":[3322,3330]},{"content":"SetText","pos":[3331,3338]},{"content":"Menu item","pos":[3431,3440]},{"content":"Enables or disables","pos":[3441,3460]},{"content":"Checks (×) or unchecks","pos":[3461,3483]},{"content":"Checks using dot (•)","pos":[3484,3504]},{"content":"Sets item text","pos":[3505,3519]},{"content":"Toolbar button","pos":[3524,3538]},{"content":"Enables or disables","pos":[3539,3558]},{"content":"Selects, unselects, or indeterminate","pos":[3559,3595]},{"pos":[3596,3614],"content":"Same as <ph id=\"ph1\">`SetCheck`</ph>","source":"Same as `SetCheck`"},{"content":"(Not applicable)","pos":[3615,3631]},{"content":"Status-bar pane","pos":[3636,3651]},{"content":"Makes text visible or invisible","pos":[3652,3683]},{"content":"Sets pop-out or normal border","pos":[3684,3713]},{"pos":[3714,3732],"content":"Same as <ph id=\"ph1\">`SetCheck`</ph>","source":"Same as `SetCheck`"},{"content":"Sets pane text","pos":[3733,3747]},{"pos":[3752,3781],"content":"Normal button in <ph id=\"ph1\">`CDialogBar`</ph>","source":"Normal button in `CDialogBar`"},{"content":"Enables or disables","pos":[3782,3801]},{"content":"Checks or unchecks check box","pos":[3802,3830]},{"pos":[3831,3849],"content":"Same as <ph id=\"ph1\">`SetCheck`</ph>","source":"Same as `SetCheck`"},{"content":"Sets button text","pos":[3850,3866]},{"pos":[3871,3901],"content":"Normal control in <ph id=\"ph1\">`CDialogBar`</ph>","source":"Normal control in `CDialogBar`"},{"content":"Enables or disables","pos":[3902,3921]},{"content":"(Not applicable)","pos":[3922,3938]},{"content":"(Not applicable)","pos":[3939,3955]},{"content":"Sets window text","pos":[3956,3972]},{"pos":[3980,4109],"content":"For more on the use of this class, see <bpt id=\"p1\">[</bpt>How to Update User-Interface Objects<ept id=\"p1\">](../../mfc/how-to-update-user-interface-objects.md)</ept>.","source":"For more on the use of this class, see [How to Update User-Interface Objects](../../mfc/how-to-update-user-interface-objects.md)."},{"pos":[4118,4139],"content":"Inheritance Hierarchy","linkify":"Inheritance Hierarchy","nodes":[{"content":"Inheritance Hierarchy","pos":[0,21]}]},{"pos":[4160,4172],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[4176,4196],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> afxwin.h","source":"**Header:** afxwin.h"},{"pos":[4206,4269],"content":"<bpt id=\"p1\">&lt;a name=\"ccmdui__continuerouting\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CCmdUI::ContinueRouting","linkify":"<a name=\"ccmdui__continuerouting\"></a>  CCmdUI::ContinueRouting","source":"<a name=\"ccmdui__continuerouting\"></a>  CCmdUI::ContinueRouting"},{"content":"Call this member function to tell the command-routing mechanism to continue routing the current message down the chain of handlers.","pos":[4273,4404]},{"pos":[4453,4460],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This is an advanced member function that should be used in conjunction with an <ph id=\"ph1\">`ON_COMMAND_EX`</ph> handler that returns <bpt id=\"p1\">**</bpt>FALSE<ept id=\"p1\">**</ept>.","pos":[4464,4590],"source":"This is an advanced member function that should be used in conjunction with an `ON_COMMAND_EX` handler that returns **FALSE**."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Technical Note 6<ept id=\"p1\">](../../mfc/tn006-message-maps.md)</ept>.","pos":[4591,4669],"source":" For more information, see [Technical Note 6](../../mfc/tn006-message-maps.md)."},{"pos":[4679,4724],"content":"<bpt id=\"p1\">&lt;a name=\"ccmdui__enable\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CCmdUI::Enable","linkify":"<a name=\"ccmdui__enable\"></a>  CCmdUI::Enable","source":"<a name=\"ccmdui__enable\"></a>  CCmdUI::Enable"},{"content":"Call this member function to enable or disable the user-interface item for this command.","pos":[4728,4816]},{"pos":[4879,4889],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"<bpt id=\"p1\"> **</bpt>TRUE<ept id=\"p1\">**</ept> to enable the item, <bpt id=\"p2\">**</bpt>FALSE<ept id=\"p2\">**</ept> to disable it.","pos":[4901,4955],"source":" **TRUE** to enable the item, **FALSE** to disable it."},{"pos":[4965,4972],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[4976,5052],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_MFCDocView#46<ept id=\"p2\">](../../mfc/codesnippet/cpp/ccmdui-class_1.cpp)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_MFCDocView#46](../../mfc/codesnippet/cpp/ccmdui-class_1.cpp)]"},{"pos":[5059,5135],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_MFCDocView#47<ept id=\"p2\">](../../mfc/codesnippet/cpp/ccmdui-class_2.cpp)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_MFCDocView#47](../../mfc/codesnippet/cpp/ccmdui-class_2.cpp)]"},{"pos":[5145,5188],"content":"<bpt id=\"p1\">&lt;a name=\"ccmdui__m_nid\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CCmdUI::m_nID","linkify":"<a name=\"ccmdui__m_nid\"></a>  CCmdUI::m_nID","source":"<a name=\"ccmdui__m_nid\"></a>  CCmdUI::m_nID"},{"pos":[5192,5299],"content":"The ID of the menu item, toolbar button, or other user-interface object represented by the <ph id=\"ph1\">`CCmdUI`</ph> object.","source":"The ID of the menu item, toolbar button, or other user-interface object represented by the `CCmdUI` object."},{"pos":[5338,5387],"content":"<bpt id=\"p1\">&lt;a name=\"ccmdui__m_nindex\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CCmdUI::m_nIndex","linkify":"<a name=\"ccmdui__m_nindex\"></a>  CCmdUI::m_nIndex","source":"<a name=\"ccmdui__m_nindex\"></a>  CCmdUI::m_nIndex"},{"pos":[5391,5501],"content":"The index of the menu item, toolbar button, or other user-interface object represented by the <ph id=\"ph1\">`CCmdUI`</ph> object.","source":"The index of the menu item, toolbar button, or other user-interface object represented by the `CCmdUI` object."},{"pos":[5543,5590],"content":"<bpt id=\"p1\">&lt;a name=\"ccmdui__m_pmenu\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CCmdUI::m_pMenu","linkify":"<a name=\"ccmdui__m_pmenu\"></a>  CCmdUI::m_pMenu","source":"<a name=\"ccmdui__m_pmenu\"></a>  CCmdUI::m_pMenu"},{"pos":[5594,5667],"content":"Pointer (of <ph id=\"ph1\">`CMenu`</ph> type) to the menu represented by the <ph id=\"ph2\">`CCmdUI`</ph> object.","source":"Pointer (of `CMenu` type) to the menu represented by the `CCmdUI` object."},{"pos":[5710,5717],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[5721,5756],"content":"<bpt id=\"p1\">**</bpt>NULL<ept id=\"p1\">**</ept> if the item is not a menu.","source":"**NULL** if the item is not a menu."},{"pos":[5766,5819],"content":"<bpt id=\"p1\">&lt;a name=\"ccmdui__m_psubmenu\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CCmdUI::m_pSubMenu","linkify":"<a name=\"ccmdui__m_psubmenu\"></a>  CCmdUI::m_pSubMenu","source":"<a name=\"ccmdui__m_psubmenu\"></a>  CCmdUI::m_pSubMenu"},{"pos":[5823,5910],"content":"Pointer (of <ph id=\"ph1\">`CMenu`</ph> type) to the contained sub-menu represented by the <ph id=\"ph2\">`CCmdUI`</ph> object.","source":"Pointer (of `CMenu` type) to the contained sub-menu represented by the `CCmdUI` object."},{"pos":[5956,5963],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"<bpt id=\"p1\">**</bpt>NULL<ept id=\"p1\">**</ept> if the item is not a menu.","pos":[5967,6002],"source":"**NULL** if the item is not a menu."},{"content":"If the sub menu is a pop-up, <ph id=\"ph1\">`m_nID`</ph> contains the ID of the first item in the pop-up menu.","pos":[6003,6093],"source":" If the sub menu is a pop-up, `m_nID` contains the ID of the first item in the pop-up menu."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Technical Note 21<ept id=\"p1\">](../../mfc/tn021-command-and-message-routing.md)</ept>.","pos":[6094,6188],"source":" For more information, see [Technical Note 21](../../mfc/tn021-command-and-message-routing.md)."},{"pos":[6198,6247],"content":"<bpt id=\"p1\">&lt;a name=\"ccmdui__m_pother\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CCmdUI::m_pOther","linkify":"<a name=\"ccmdui__m_pother\"></a>  CCmdUI::m_pOther","source":"<a name=\"ccmdui__m_pother\"></a>  CCmdUI::m_pOther"},{"pos":[6251,6355],"content":"Pointer (of type <ph id=\"ph1\">`CWnd`</ph>) to the window object, such as a tool or status bar, that sent the notification.","source":"Pointer (of type `CWnd`) to the window object, such as a tool or status bar, that sent the notification."},{"pos":[6398,6405],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[6409,6464],"content":"<bpt id=\"p1\">**</bpt>NULL<ept id=\"p1\">**</ept> if the item is a menu or a non- <ph id=\"ph1\">`CWnd`</ph> object.","source":"**NULL** if the item is a menu or a non- `CWnd` object."},{"pos":[6474,6523],"content":"<bpt id=\"p1\">&lt;a name=\"ccmdui__setcheck\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CCmdUI::SetCheck","linkify":"<a name=\"ccmdui__setcheck\"></a>  CCmdUI::SetCheck","source":"<a name=\"ccmdui__setcheck\"></a>  CCmdUI::SetCheck"},{"content":"Call this member function to set the user-interface item for this command to the appropriate check state.","pos":[6527,6632]},{"pos":[6696,6706],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Specifies the check state to set.","pos":[6722,6755]},{"content":"If 0, unchecks; if 1, checks; and if 2, sets indeterminate.","pos":[6756,6815]},{"pos":[6825,6832],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This member function works for menu items and toolbar buttons.","pos":[6836,6898]},{"content":"The indeterminate state applies only to toolbar buttons.","pos":[6899,6955]},{"pos":[6965,7014],"content":"<bpt id=\"p1\">&lt;a name=\"ccmdui__setradio\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CCmdUI::SetRadio","linkify":"<a name=\"ccmdui__setradio\"></a>  CCmdUI::SetRadio","source":"<a name=\"ccmdui__setradio\"></a>  CCmdUI::SetRadio"},{"content":"Call this member function to set the user-interface item for this command to the appropriate check state.","pos":[7018,7123]},{"pos":[7188,7198],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"<bpt id=\"p1\"> **</bpt>TRUE<ept id=\"p1\">**</ept> to enable the item; otherwise <bpt id=\"p2\">**</bpt>FALSE<ept id=\"p2\">**</ept>.","pos":[7210,7260],"source":" **TRUE** to enable the item; otherwise **FALSE**."},{"pos":[7270,7277],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This member function operates like <ph id=\"ph1\">`SetCheck`</ph>, except that it operates on user-interface items acting as part of a radio group.","pos":[7281,7408],"source":"This member function operates like `SetCheck`, except that it operates on user-interface items acting as part of a radio group."},{"content":"Unchecking the other items in the group is not automatic unless the items themselves maintain the radio-group behavior.","pos":[7409,7528]},{"pos":[7538,7585],"content":"<bpt id=\"p1\">&lt;a name=\"ccmdui__settext\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CCmdUI::SetText","linkify":"<a name=\"ccmdui__settext\"></a>  CCmdUI::SetText","source":"<a name=\"ccmdui__settext\"></a>  CCmdUI::SetText"},{"content":"Call this member function to set the text of the user-interface item for this command.","pos":[7589,7675]},{"pos":[7740,7750],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"A pointer to a text string.","pos":[7768,7795]},{"pos":[7805,7812],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[7816,7892],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_MFCDocView#48<ept id=\"p2\">](../../mfc/codesnippet/cpp/ccmdui-class_3.cpp)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_MFCDocView#48](../../mfc/codesnippet/cpp/ccmdui-class_3.cpp)]"},{"pos":[7901,7909],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>MFC Sample MDI<ept id=\"p1\">](../../visual-cpp-samples.md)</ept><ph id=\"ph1\"> </ph>","pos":[7913,7959],"source":"[MFC Sample MDI](../../visual-cpp-samples.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Hierarchy Chart<ept id=\"p1\">](../../mfc/hierarchy-chart.md)</ept><ph id=\"ph1\"> </ph>","pos":[7962,8011],"source":" [Hierarchy Chart](../../mfc/hierarchy-chart.md) "},{"content":"<bpt id=\"p1\"> [</bpt>CCmdTarget Class<ept id=\"p1\">](../../mfc/reference/ccmdtarget-class.md)</ept>","pos":[8014,8074],"source":" [CCmdTarget Class](../../mfc/reference/ccmdtarget-class.md)"}],"content":"---\ntitle: \"CCmdUI Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"CCmdUI\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"user interfaces, updating\"\n  - \"states, updating user interface object\"\n  - \"updating user interfaces for commands\"\n  - \"commands [C++], updating UI\"\n  - \"CCmdUI class\"\n  - \"toolbars [C++], updating\"\n  - \"command user interface\"\n  - \"menus [C++], updating as context changes\"\n  - \"buttons [C++], updating as context changes\"\nms.assetid: 04eaaaf5-f510-48ab-b425-94665ba24766\ncaps.latest.revision: 21\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# CCmdUI Class\nIs used only within an `ON_UPDATE_COMMAND_UI` handler in a `CCmdTarget`-derived class.  \n  \n## Syntax  \n  \n```  \nclass CCmdUI  \n```  \n  \n## Members  \n  \n### Public Methods  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CCmdUI::ContinueRouting](#ccmdui__continuerouting)|Tells the command-routing mechanism to continue routing the current message down the chain of handlers.|  \n|[CCmdUI::Enable](#ccmdui__enable)|Enables or disables the user-interface item for this command.|  \n|[CCmdUI::SetCheck](#ccmdui__setcheck)|Sets the check state of the user-interface item for this command.|  \n|[CCmdUI::SetRadio](#ccmdui__setradio)|Like the `SetCheck` member function, but operates on radio groups.|  \n|[CCmdUI::SetText](#ccmdui__settext)|Sets the text for the user-interface item for this command.|  \n  \n### Public Data Members  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CCmdUI::m_nID](#ccmdui__m_nid)|The ID of the user-interface object.|  \n|[CCmdUI::m_nIndex](#ccmdui__m_nindex)|The index of the user-interface object.|  \n|[CCmdUI::m_pMenu](#ccmdui__m_pmenu)|Points to the menu represented by the `CCmdUI` object.|  \n|[CCmdUI::m_pOther](#ccmdui__m_pother)|Points to the window object that sent the notification.|  \n|[CCmdUI::m_pSubMenu](#ccmdui__m_psubmenu)|Points to the contained sub-menu represented by the `CCmdUI` object.|  \n  \n## Remarks  \n `CCmdUI` does not have a base class.  \n  \n When a user of your application pulls down a menu, each menu item needs to know whether it should be displayed as enabled or disabled. The target of a menu command provides this information by implementing an `ON_UPDATE_COMMAND_UI` handler. For each of the command user-interface objects in your application, use the Properties window to create a message-map entry and function prototype for each handler.  \n  \n When the menu is pulled down, the framework searches for and calls each `ON_UPDATE_COMMAND_UI` handler, each handler calls `CCmdUI` member functions such as **Enable** and **Check**, and the framework then appropriately displays each menu item.  \n  \n A menu item can be replaced with a control-bar button or other command user-interface object without changing the code within the `ON_UPDATE_COMMAND_UI` handler.  \n  \n The following table summarizes the effect `CCmdUI`'s member functions have on various command user-interface items.  \n  \n|User-Interface Item|Enable|SetCheck|SetRadio|SetText|  \n|--------------------------|------------|--------------|--------------|-------------|  \n|Menu item|Enables or disables|Checks (×) or unchecks|Checks using dot (•)|Sets item text|  \n|Toolbar button|Enables or disables|Selects, unselects, or indeterminate|Same as `SetCheck`|(Not applicable)|  \n|Status-bar pane|Makes text visible or invisible|Sets pop-out or normal border|Same as `SetCheck`|Sets pane text|  \n|Normal button in `CDialogBar`|Enables or disables|Checks or unchecks check box|Same as `SetCheck`|Sets button text|  \n|Normal control in `CDialogBar`|Enables or disables|(Not applicable)|(Not applicable)|Sets window text|  \n  \n For more on the use of this class, see [How to Update User-Interface Objects](../../mfc/how-to-update-user-interface-objects.md).  \n  \n## Inheritance Hierarchy  \n `CCmdUI`  \n  \n## Requirements  \n **Header:** afxwin.h  \n  \n##  <a name=\"ccmdui__continuerouting\"></a>  CCmdUI::ContinueRouting  \n Call this member function to tell the command-routing mechanism to continue routing the current message down the chain of handlers.  \n  \n```  \nvoid ContinueRouting();\n```  \n  \n### Remarks  \n This is an advanced member function that should be used in conjunction with an `ON_COMMAND_EX` handler that returns **FALSE**. For more information, see [Technical Note 6](../../mfc/tn006-message-maps.md).  \n  \n##  <a name=\"ccmdui__enable\"></a>  CCmdUI::Enable  \n Call this member function to enable or disable the user-interface item for this command.  \n  \n```  \nvirtual void Enable(BOOL bOn = TRUE);\n```  \n  \n### Parameters  \n `bOn`  \n **TRUE** to enable the item, **FALSE** to disable it.  \n  \n### Example  \n [!code-cpp[NVC_MFCDocView#46](../../mfc/codesnippet/cpp/ccmdui-class_1.cpp)]  \n  \n [!code-cpp[NVC_MFCDocView#47](../../mfc/codesnippet/cpp/ccmdui-class_2.cpp)]  \n  \n##  <a name=\"ccmdui__m_nid\"></a>  CCmdUI::m_nID  \n The ID of the menu item, toolbar button, or other user-interface object represented by the `CCmdUI` object.  \n  \n```  \nUINT m_nID;  \n```  \n  \n##  <a name=\"ccmdui__m_nindex\"></a>  CCmdUI::m_nIndex  \n The index of the menu item, toolbar button, or other user-interface object represented by the `CCmdUI` object.  \n  \n```  \nUINT m_nIndex;  \n```  \n  \n##  <a name=\"ccmdui__m_pmenu\"></a>  CCmdUI::m_pMenu  \n Pointer (of `CMenu` type) to the menu represented by the `CCmdUI` object.  \n  \n```  \nCMenu* m_pMenu;  \n```  \n  \n### Remarks  \n **NULL** if the item is not a menu.  \n  \n##  <a name=\"ccmdui__m_psubmenu\"></a>  CCmdUI::m_pSubMenu  \n Pointer (of `CMenu` type) to the contained sub-menu represented by the `CCmdUI` object.  \n  \n```  \nCMenu* m_pSubMenu;  \n```  \n  \n### Remarks  \n **NULL** if the item is not a menu. If the sub menu is a pop-up, `m_nID` contains the ID of the first item in the pop-up menu. For more information, see [Technical Note 21](../../mfc/tn021-command-and-message-routing.md).  \n  \n##  <a name=\"ccmdui__m_pother\"></a>  CCmdUI::m_pOther  \n Pointer (of type `CWnd`) to the window object, such as a tool or status bar, that sent the notification.  \n  \n```  \nCWnd* m_pOther;  \n```  \n  \n### Remarks  \n **NULL** if the item is a menu or a non- `CWnd` object.  \n  \n##  <a name=\"ccmdui__setcheck\"></a>  CCmdUI::SetCheck  \n Call this member function to set the user-interface item for this command to the appropriate check state.  \n  \n```  \nvirtual void SetCheck(int nCheck = 1);\n```  \n  \n### Parameters  \n `nCheck`  \n Specifies the check state to set. If 0, unchecks; if 1, checks; and if 2, sets indeterminate.  \n  \n### Remarks  \n This member function works for menu items and toolbar buttons. The indeterminate state applies only to toolbar buttons.  \n  \n##  <a name=\"ccmdui__setradio\"></a>  CCmdUI::SetRadio  \n Call this member function to set the user-interface item for this command to the appropriate check state.  \n  \n```  \nvirtual void SetRadio(BOOL bOn = TRUE);\n```  \n  \n### Parameters  \n `bOn`  \n **TRUE** to enable the item; otherwise **FALSE**.  \n  \n### Remarks  \n This member function operates like `SetCheck`, except that it operates on user-interface items acting as part of a radio group. Unchecking the other items in the group is not automatic unless the items themselves maintain the radio-group behavior.  \n  \n##  <a name=\"ccmdui__settext\"></a>  CCmdUI::SetText  \n Call this member function to set the text of the user-interface item for this command.  \n  \n```  \nvirtual void SetText(LPCTSTR lpszText);\n```  \n  \n### Parameters  \n `lpszText`  \n A pointer to a text string.  \n  \n### Example  \n [!code-cpp[NVC_MFCDocView#48](../../mfc/codesnippet/cpp/ccmdui-class_3.cpp)]  \n  \n## See Also  \n [MFC Sample MDI](../../visual-cpp-samples.md)   \n [Hierarchy Chart](../../mfc/hierarchy-chart.md)   \n [CCmdTarget Class](../../mfc/reference/ccmdtarget-class.md)\n"}