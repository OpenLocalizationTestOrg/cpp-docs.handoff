{"nodes":[{"pos":[12,67],"content":"Standard Dialog Data Exchange Routines | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Standard Dialog Data Exchange Routines | Microsoft Docs","pos":[0,55]}]},{"pos":[616,654],"content":"Standard Dialog Data Exchange Routines","linkify":"Standard Dialog Data Exchange Routines","nodes":[{"content":"Standard Dialog Data Exchange Routines","pos":[0,38]}]},{"content":"This topic lists the standard dialog data exchange (DDX) routines used for common MFC dialog controls.","pos":[655,757]},{"pos":[765,906],"content":"[!NOTE]\n The standard dialog data exchange routines are defined in the header file afxdd_.h. However, applications should include afxwin.h.","leadings":["","> "],"nodes":[{"content":" The standard dialog data exchange routines are defined in the header file afxdd_.h. However, applications should include afxwin.h.","pos":[8,139],"nodes":[{"content":"The standard dialog data exchange routines are defined in the header file afxdd_.h.","pos":[1,84]},{"content":"However, applications should include afxwin.h.","pos":[85,131]}]}]},{"pos":[916,929],"content":"DDX Functions","linkify":"DDX Functions","nodes":[{"content":"DDX Functions","pos":[0,13]}]},{"pos":[950,977],"content":"<bpt id=\"p1\">[</bpt>DDX_CBIndex<ept id=\"p1\">](#ddx_cbindex)</ept>","source":"[DDX_CBIndex](#ddx_cbindex)"},{"content":"Initializes or retrieves the index of the current selection of a combo box control.","pos":[978,1061]},{"pos":[1066,1095],"content":"<bpt id=\"p1\">[</bpt>DDX_CBString<ept id=\"p1\">](#ddx_cbstring)</ept>","source":"[DDX_CBString](#ddx_cbstring)"},{"content":"Initializes or retrieves the current contents of the edit field of a combo box control.","pos":[1096,1183]},{"pos":[1188,1227],"content":"<bpt id=\"p1\">[</bpt>DDX_CBStringExact<ept id=\"p1\">](#ddx_cbstringexact)</ept>","source":"[DDX_CBStringExact](#ddx_cbstringexact)"},{"content":"Initializes or retrieves the current contents of the edit field of a combo box control.","pos":[1228,1315]},{"pos":[1320,1343],"content":"<bpt id=\"p1\">[</bpt>DDX_Check<ept id=\"p1\">](#ddx_check)</ept>","source":"[DDX_Check](#ddx_check)"},{"content":"Initializes or retrieves the current state of a check box control.","pos":[1344,1410]},{"pos":[1415,1442],"content":"<bpt id=\"p1\">[</bpt>DDX_Control<ept id=\"p1\">](#ddx_control)</ept>","source":"[DDX_Control](#ddx_control)"},{"content":"Subclasses a given control within a dialog box.","pos":[1443,1490]},{"pos":[1495,1532],"content":"<bpt id=\"p1\">[</bpt>DDX_DateTimeCtrl<ept id=\"p1\">](#ddx_datetimectrl)</ept>","source":"[DDX_DateTimeCtrl](#ddx_datetimectrl)"},{"content":"Initializes or retrieves date and/or time data of a date and time picker control.","pos":[1533,1614]},{"pos":[1619,1650],"content":"<bpt id=\"p1\">[</bpt>DDX_IPAddress<ept id=\"p1\">](#ddx_ipaddress)</ept>","source":"[DDX_IPAddress](#ddx_ipaddress)"},{"content":"Initializes or retrieves the current value of an IP address control.","pos":[1651,1719]},{"pos":[1724,1751],"content":"<bpt id=\"p1\">[</bpt>DDX_LBIndex<ept id=\"p1\">](#ddx_lbindex)</ept>","source":"[DDX_LBIndex](#ddx_lbindex)"},{"content":"Initializes or retrieves the index of the current selection of a list box control.","pos":[1752,1834]},{"pos":[1839,1868],"content":"<bpt id=\"p1\">[</bpt>DDX_LBString<ept id=\"p1\">](#ddx_lbstring)</ept>","source":"[DDX_LBString](#ddx_lbstring)"},{"content":"Initializes or retrieves the current selection within a list box control.","pos":[1869,1942]},{"pos":[1947,1986],"content":"<bpt id=\"p1\">[</bpt>DDX_LBStringExact<ept id=\"p1\">](#ddx_lbstringexact)</ept>","source":"[DDX_LBStringExact](#ddx_lbstringexact)"},{"content":"Initializes or retrieves the current selection within a list box control.","pos":[1987,2060]},{"pos":[2065,2102],"content":"<bpt id=\"p1\">[</bpt>DDX_MonthCalCtrl<ept id=\"p1\">](#ddx_monthcalctrl)</ept>","source":"[DDX_MonthCalCtrl](#ddx_monthcalctrl)"},{"content":"Initializes or retrieves the current value of a month calendar control.","pos":[2103,2174]},{"pos":[2179,2202],"content":"<bpt id=\"p1\">[</bpt>DDX_Radio<ept id=\"p1\">](#ddx_radio)</ept>","source":"[DDX_Radio](#ddx_radio)"},{"content":"Initializes or retrieves the 0-based index of the radio control that is currently checked within a radio control group.","pos":[2203,2322]},{"pos":[2327,2352],"content":"<bpt id=\"p1\">[</bpt>DDX_Scroll<ept id=\"p1\">](#ddx_scroll)</ept>","source":"[DDX_Scroll](#ddx_scroll)"},{"content":"Initializes or retrieves the current position of a scroll control's thumb.","pos":[2353,2427]},{"pos":[2432,2457],"content":"<bpt id=\"p1\">[</bpt>DDX_Slider<ept id=\"p1\">](#ddx_slider)</ept>","source":"[DDX_Slider](#ddx_slider)"},{"content":"Initializes or retrieves the current position of a slider control's thumb.","pos":[2458,2532]},{"pos":[2537,2558],"content":"<bpt id=\"p1\">[</bpt>DDX_Text<ept id=\"p1\">](#ddx_text)</ept>","source":"[DDX_Text](#ddx_text)"},{"content":"Initializes or retrieves the current value of an edit control.","pos":[2559,2621]},{"pos":[2632,2671],"content":"<bpt id=\"p1\">&lt;a name=\"ddx_cbindex\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  DDX_CBIndex","linkify":"<a name=\"ddx_cbindex\"></a>  DDX_CBIndex","source":"<a name=\"ddx_cbindex\"></a>  DDX_CBIndex"},{"pos":[2675,2893],"content":"The <ph id=\"ph1\">`DDX_CBIndex`</ph> function manages the transfer of <ph id=\"ph2\">`int`</ph> data between a combo box control in a dialog box, form view, or control view object and a <ph id=\"ph3\">`int`</ph> data member of the dialog box, form view, or control view object.","source":"The `DDX_CBIndex` function manages the transfer of `int` data between a combo box control in a dialog box, form view, or control view object and a `int` data member of the dialog box, form view, or control view object."},{"pos":[3013,3023],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"A pointer to a <ph id=\"ph1\">`CDataExchange`</ph> object.","pos":[3036,3074],"source":" A pointer to a `CDataExchange` object."},{"content":"The framework supplies this object to establish the context of the data exchange, including its direction.","pos":[3075,3181]},{"content":"The resource ID of the combo box control associated with the control property.","pos":[3198,3276]},{"content":"<bpt id=\"p1\">*</bpt>index<ept id=\"p1\">*</ept>","pos":[3283,3290],"source":"*index*"},{"content":"A reference to a member variable of the dialog box, form view, or control view object with which data is exchanged.","pos":[3294,3409]},{"pos":[3419,3426],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"When <ph id=\"ph1\">`DDX_CBIndex`</ph> is called, <bpt id=\"p1\">*</bpt>index<ept id=\"p1\">*</ept> is set to the index of the current combo box selection.","pos":[3430,3523],"source":"When `DDX_CBIndex` is called, *index* is set to the index of the current combo box selection."},{"content":"If no item is selected, <bpt id=\"p1\">*</bpt>index<ept id=\"p1\">*</ept> is set to 0.","pos":[3524,3568],"source":" If no item is selected, *index* is set to 0."},{"pos":[3575,3699],"content":"For more information about DDX, see <bpt id=\"p1\">[</bpt>Dialog Data Exchange and Validation<ept id=\"p1\">](../../mfc/dialog-data-exchange-and-validation.md)</ept>.","source":"For more information about DDX, see [Dialog Data Exchange and Validation](../../mfc/dialog-data-exchange-and-validation.md)."},{"pos":[3709,3750],"content":"<bpt id=\"p1\">&lt;a name=\"ddx_cbstring\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  DDX_CBString","linkify":"<a name=\"ddx_cbstring\"></a>  DDX_CBString","source":"<a name=\"ddx_cbstring\"></a>  DDX_CBString"},{"pos":[3754,4001],"content":"The <ph id=\"ph1\">`DDX_CBString`</ph> function manages the transfer of <ph id=\"ph2\">`CString`</ph> data between the edit control of a combo box control in a dialog box, form view, or control view object and a <ph id=\"ph3\">`CString`</ph> data member of the dialog box, form view, or control view object.","source":"The `DDX_CBString` function manages the transfer of `CString` data between the edit control of a combo box control in a dialog box, form view, or control view object and a `CString` data member of the dialog box, form view, or control view object."},{"pos":[4127,4137],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"A pointer to a <ph id=\"ph1\">`CDataExchange`</ph> object.","pos":[4150,4188],"source":" A pointer to a `CDataExchange` object."},{"content":"The framework supplies this object to establish the context of the data exchange, including its direction.","pos":[4189,4295]},{"content":"The resource ID of the combo box control associated with the control property.","pos":[4312,4390]},{"content":"<bpt id=\"p1\">*</bpt>value<ept id=\"p1\">*</ept>","pos":[4397,4404],"source":"*value*"},{"content":"A reference to a member variable of the dialog box, form view, or control view object with which data is exchanged.","pos":[4408,4523]},{"pos":[4533,4540],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"When <ph id=\"ph1\">`DDX_CBString`</ph> is called, <bpt id=\"p1\">*</bpt>value<ept id=\"p1\">*</ept> is set to the current combo box selection.","pos":[4544,4625],"source":"When `DDX_CBString` is called, *value* is set to the current combo box selection."},{"content":"If no item is selected, <bpt id=\"p1\">*</bpt>value<ept id=\"p1\">*</ept> is set to a string of zero length.","pos":[4626,4692],"source":" If no item is selected, *value* is set to a string of zero length."},{"pos":[4700,4802],"content":"[!NOTE]\n If the combo box is a drop-down list box, the value exchanged is limited to 255 characters.","leadings":["","> "],"nodes":[{"content":"If the combo box is a drop-down list box, the value exchanged is limited to 255 characters.","pos":[9,100]}]},{"pos":[4809,4933],"content":"For more information about DDX, see <bpt id=\"p1\">[</bpt>Dialog Data Exchange and Validation<ept id=\"p1\">](../../mfc/dialog-data-exchange-and-validation.md)</ept>.","source":"For more information about DDX, see [Dialog Data Exchange and Validation](../../mfc/dialog-data-exchange-and-validation.md)."},{"pos":[4943,4994],"content":"<bpt id=\"p1\">&lt;a name=\"ddx_cbstringexact\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  DDX_CBStringExact","linkify":"<a name=\"ddx_cbstringexact\"></a>  DDX_CBStringExact","source":"<a name=\"ddx_cbstringexact\"></a>  DDX_CBStringExact"},{"pos":[4998,5250],"content":"The <ph id=\"ph1\">`DDX_CBStringExact`</ph> function manages the transfer of <ph id=\"ph2\">`CString`</ph> data between the edit control of a combo box control in a dialog box, form view, or control view object and a <ph id=\"ph3\">`CString`</ph> data member of the dialog box, form view, or control view object.","source":"The `DDX_CBStringExact` function manages the transfer of `CString` data between the edit control of a combo box control in a dialog box, form view, or control view object and a `CString` data member of the dialog box, form view, or control view object."},{"pos":[5381,5391],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"A pointer to a <ph id=\"ph1\">`CDataExchange`</ph> object.","pos":[5404,5442],"source":" A pointer to a `CDataExchange` object."},{"content":"The framework supplies this object to establish the context of the data exchange, including its direction.","pos":[5443,5549]},{"content":"The resource ID of the combo box control associated with the control property.","pos":[5566,5644]},{"content":"<bpt id=\"p1\">*</bpt>value<ept id=\"p1\">*</ept>","pos":[5651,5658],"source":"*value*"},{"content":"A reference to a member variable of the dialog box, form view, or control view object with which data is exchanged.","pos":[5662,5777]},{"pos":[5787,5794],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"When <ph id=\"ph1\">`DDX_CBStringExact`</ph> is called, <bpt id=\"p1\">*</bpt>value<ept id=\"p1\">*</ept> is set to the current combo box selection.","pos":[5798,5884],"source":"When `DDX_CBStringExact` is called, *value* is set to the current combo box selection."},{"content":"If no item is selected, <bpt id=\"p1\">*</bpt>value<ept id=\"p1\">*</ept> is set to a string of zero length.","pos":[5885,5951],"source":" If no item is selected, *value* is set to a string of zero length."},{"pos":[5959,6061],"content":"[!NOTE]\n If the combo box is a drop-down list box, the value exchanged is limited to 255 characters.","leadings":["","> "],"nodes":[{"content":"If the combo box is a drop-down list box, the value exchanged is limited to 255 characters.","pos":[9,100]}]},{"pos":[6068,6192],"content":"For more information about DDX, see <bpt id=\"p1\">[</bpt>Dialog Data Exchange and Validation<ept id=\"p1\">](../../mfc/dialog-data-exchange-and-validation.md)</ept>.","source":"For more information about DDX, see [Dialog Data Exchange and Validation](../../mfc/dialog-data-exchange-and-validation.md)."},{"pos":[6202,6237],"content":"<bpt id=\"p1\">&lt;a name=\"ddx_check\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  DDX_Check","linkify":"<a name=\"ddx_check\"></a>  DDX_Check","source":"<a name=\"ddx_check\"></a>  DDX_Check"},{"pos":[6241,6457],"content":"The <ph id=\"ph1\">`DDX_Check`</ph> function manages the transfer of <ph id=\"ph2\">`int`</ph> data between a check box control in a dialog box, form view, or control view object and a <ph id=\"ph3\">`int`</ph> data member of the dialog box, form view, or control view object.","source":"The `DDX_Check` function manages the transfer of `int` data between a check box control in a dialog box, form view, or control view object and a `int` data member of the dialog box, form view, or control view object."},{"pos":[6575,6585],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"A pointer to a <ph id=\"ph1\">`CDataExchange`</ph> object.","pos":[6598,6636],"source":" A pointer to a `CDataExchange` object."},{"content":"The framework supplies this object to establish the context of the data exchange, including its direction.","pos":[6637,6743]},{"content":"The resource ID of the check box control associated with the control property.","pos":[6760,6838]},{"content":"<bpt id=\"p1\">*</bpt>value<ept id=\"p1\">*</ept>","pos":[6845,6852],"source":"*value*"},{"content":"A reference to a member variable of the dialog box, form view, or control view object with which data is exchanged.","pos":[6856,6971]},{"pos":[6981,6988],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"When <ph id=\"ph1\">`DDX_Check`</ph> is called, <bpt id=\"p1\">*</bpt>value<ept id=\"p1\">*</ept> is set to the current state of the check box control.","pos":[6992,7081],"source":"When `DDX_Check` is called, *value* is set to the current state of the check box control."},{"content":"For a list of the possible state values, see <bpt id=\"p1\">[</bpt>BM_GETCHECK<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb775986)</ept> in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph><bpt id=\"p2\">*</bpt>.<ept id=\"p2\">*</ept>","pos":[7082,7262],"source":" For a list of the possible state values, see [BM_GETCHECK](http://msdn.microsoft.com/library/windows/desktop/bb775986) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]*.*"},{"pos":[7269,7393],"content":"For more information about DDX, see <bpt id=\"p1\">[</bpt>Dialog Data Exchange and Validation<ept id=\"p1\">](../../mfc/dialog-data-exchange-and-validation.md)</ept>.","source":"For more information about DDX, see [Dialog Data Exchange and Validation](../../mfc/dialog-data-exchange-and-validation.md)."},{"pos":[7403,7442],"content":"<bpt id=\"p1\">&lt;a name=\"ddx_control\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  DDX_Control","linkify":"<a name=\"ddx_control\"></a>  DDX_Control","source":"<a name=\"ddx_control\"></a>  DDX_Control"},{"pos":[7446,7571],"content":"The <ph id=\"ph1\">`DDX_Control`</ph> function subclasses the control, specified by <ph id=\"ph2\">`nIDC`</ph>, of the dialog box, form view, or control view object.","source":"The `DDX_Control` function subclasses the control, specified by `nIDC`, of the dialog box, form view, or control view object."},{"pos":[7695,7705],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"A pointer to a <bpt id=\"p1\">[</bpt>CDataExchange<ept id=\"p1\">](../../mfc/reference/cdataexchange-class.md)</ept> object.","pos":[7718,7800],"source":" A pointer to a [CDataExchange](../../mfc/reference/cdataexchange-class.md) object."},{"content":"The resource ID of the control to be subclassed.","pos":[7817,7865]},{"content":"<bpt id=\"p1\">*</bpt>rControl<ept id=\"p1\">*</ept>","pos":[7872,7882],"source":"*rControl*"},{"content":"A reference to a member variable of the dialog box, form view, or control view object related to the specified control.","pos":[7886,8005]},{"pos":[8015,8022],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The <ph id=\"ph1\">`pDX`</ph> object is supplied by the framework when the <ph id=\"ph2\">`DoDataExchange`</ph> function is called.","pos":[8026,8117],"source":"The `pDX` object is supplied by the framework when the `DoDataExchange` function is called."},{"content":"Therefore, <ph id=\"ph1\">`DDX_Control`</ph> should only be called within your override of <ph id=\"ph2\">`DoDataExchange`</ph>.","pos":[8118,8206],"source":" Therefore, `DDX_Control` should only be called within your override of `DoDataExchange`."},{"pos":[8213,8337],"content":"For more information about DDX, see <bpt id=\"p1\">[</bpt>Dialog Data Exchange and Validation<ept id=\"p1\">](../../mfc/dialog-data-exchange-and-validation.md)</ept>.","source":"For more information about DDX, see [Dialog Data Exchange and Validation](../../mfc/dialog-data-exchange-and-validation.md)."},{"pos":[8347,8396],"content":"<bpt id=\"p1\">&lt;a name=\"ddx_datetimectrl\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  DDX_DateTimeCtrl","linkify":"<a name=\"ddx_datetimectrl\"></a>  DDX_DateTimeCtrl","source":"<a name=\"ddx_datetimectrl\"></a>  DDX_DateTimeCtrl"},{"pos":[8400,8808],"content":"The <ph id=\"ph1\">`DDX_DateTimeCtrl`</ph> function manages the transfer of date and/or time data between a date and time picker control ( <bpt id=\"p1\">[</bpt>CDateTimeCtrl<ept id=\"p1\">](../../mfc/reference/cdatetimectrl-class.md)</ept>) in a dialog box or form view object and either a <bpt id=\"p2\">[</bpt>CTime<ept id=\"p2\">](../../atl-mfc-shared/reference/ctime-class.md)</ept> or a <bpt id=\"p3\">[</bpt>COleDateTime<ept id=\"p3\">](../../atl-mfc-shared/reference/coledatetime-class.md)</ept> data member of the dialog box or form view object.","source":"The `DDX_DateTimeCtrl` function manages the transfer of date and/or time data between a date and time picker control ( [CDateTimeCtrl](../../mfc/reference/cdatetimectrl-class.md)) in a dialog box or form view object and either a [CTime](../../atl-mfc-shared/reference/ctime-class.md) or a [COleDateTime](../../atl-mfc-shared/reference/coledatetime-class.md) data member of the dialog box or form view object."},{"pos":[9140,9150],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"A pointer to a <bpt id=\"p1\">[</bpt>CDataExchange<ept id=\"p1\">](../../mfc/reference/cdataexchange-class.md)</ept> object.","pos":[9163,9245],"source":" A pointer to a [CDataExchange](../../mfc/reference/cdataexchange-class.md) object."},{"content":"The framework supplies this object to establish the context of the data exchange, including its direction.","pos":[9246,9352]},{"content":"You don't need to delete this object.","pos":[9353,9390]},{"content":"The resource ID of the date and time picker control associated with the member variable.","pos":[9407,9495]},{"content":"<bpt id=\"p1\">*</bpt>value<ept id=\"p1\">*</ept>","pos":[9502,9509],"source":"*value*"},{"content":"In the first two versions, a reference to a <ph id=\"ph1\">`CTime`</ph> or <ph id=\"ph2\">`COleDateTime`</ph> member variable, dialog box, form view, or control view object with which data is exchanged.","pos":[9513,9675],"source":" In the first two versions, a reference to a `CTime` or `COleDateTime` member variable, dialog box, form view, or control view object with which data is exchanged."},{"content":"In the third version, a reference to a <ph id=\"ph1\">`CString`</ph> data member control view object.","pos":[9676,9757],"source":" In the third version, a reference to a `CString` data member control view object."},{"pos":[9767,9774],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[9778,9963],"content":"When <ph id=\"ph1\">`DDX_DateTimeCtrl`</ph> is called, <bpt id=\"p1\">*</bpt>value<ept id=\"p1\">*</ept> is set to the current state of the date and time picker control, or the control is set to <bpt id=\"p2\">*</bpt>value<ept id=\"p2\">*</ept>, depending on the direction of the exchange.","source":"When `DDX_DateTimeCtrl` is called, *value* is set to the current state of the date and time picker control, or the control is set to *value*, depending on the direction of the exchange."},{"content":"In the third version above, <ph id=\"ph1\">`DDX_DateTimeCtrl`</ph> manages the transfer of <ph id=\"ph2\">`CString`</ph> data between a date time control and a <bpt id=\"p1\">[</bpt>CString<ept id=\"p1\">](../../atl-mfc-shared/reference/cstringt-class.md)</ept> data member of the control view object.","pos":[9970,10189],"source":"In the third version above, `DDX_DateTimeCtrl` manages the transfer of `CString` data between a date time control and a [CString](../../atl-mfc-shared/reference/cstringt-class.md) data member of the control view object."},{"content":"The string is formatted using the current locale's rules for formatting dates and times.","pos":[10190,10278]},{"pos":[10285,10409],"content":"For more information about DDX, see <bpt id=\"p1\">[</bpt>Dialog Data Exchange and Validation<ept id=\"p1\">](../../mfc/dialog-data-exchange-and-validation.md)</ept>.","source":"For more information about DDX, see [Dialog Data Exchange and Validation](../../mfc/dialog-data-exchange-and-validation.md)."},{"pos":[10419,10462],"content":"<bpt id=\"p1\">&lt;a name=\"ddx_ipaddress\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  DDX_IPAddress","linkify":"<a name=\"ddx_ipaddress\"></a>  DDX_IPAddress","source":"<a name=\"ddx_ipaddress\"></a>  DDX_IPAddress"},{"pos":[10466,10599],"content":"The <ph id=\"ph1\">`DDX_IPAddress`</ph> function manages the transfer of data between an IP Address control and a data member of the control view object.","source":"The `DDX_IPAddress` function manages the transfer of data between an IP Address control and a data member of the control view object."},{"pos":[10723,10733],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"A pointer to a <ph id=\"ph1\">`CDataExchange`</ph> object.","pos":[10746,10784],"source":" A pointer to a `CDataExchange` object."},{"content":"The framework supplies this object to establish the context of the data exchange, including its direction.","pos":[10785,10891]},{"content":"The resource ID of the IP Address control associated with the control property.","pos":[10908,10987]},{"content":"<bpt id=\"p1\">*</bpt>value<ept id=\"p1\">*</ept>","pos":[10994,11001],"source":"*value*"},{"content":"A reference to the <ph id=\"ph1\">`DWORD`</ph> containing the four-field value of the IP Address control.","pos":[11005,11090],"source":" A reference to the `DWORD` containing the four-field value of the IP Address control."},{"content":"The fields are filled or read as follows.","pos":[11091,11132]},{"content":"Field","pos":[11139,11144]},{"content":"Bits containing the field value","pos":[11145,11176]},{"content":"3","pos":[11235,11236]},{"content":"0 through 7","pos":[11237,11248]},{"content":"2","pos":[11253,11254]},{"content":"8 through 15","pos":[11255,11267]},{"content":"1","pos":[11272,11273]},{"content":"16 through 23","pos":[11274,11287]},{"content":"0","pos":[11292,11293]},{"content":"24 through 31","pos":[11294,11307]},{"content":"Use the Win32 <bpt id=\"p1\">[</bpt>IPM_GETADDRESS<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb761378)</ept> to read the value, or use <bpt id=\"p2\">[</bpt>IPM_SETADDRESS<ept id=\"p2\">](http://msdn.microsoft.com/library/windows/desktop/bb761380)</ept> to fill the value.","pos":[11315,11527],"source":"Use the Win32 [IPM_GETADDRESS](http://msdn.microsoft.com/library/windows/desktop/bb761378) to read the value, or use [IPM_SETADDRESS](http://msdn.microsoft.com/library/windows/desktop/bb761380) to fill the value."},{"content":"These messages are described in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","pos":[11528,11616],"source":" These messages are described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"pos":[11626,11633],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[11637,11802],"content":"When <ph id=\"ph1\">`DDX_IPAddress`</ph> is called, <bpt id=\"p1\">*</bpt>value<ept id=\"p1\">*</ept> is either read from the IP Address control, or <bpt id=\"p2\">*</bpt>value<ept id=\"p2\">*</ept> is written to the control, depending on the direction of the exchange.","source":"When `DDX_IPAddress` is called, *value* is either read from the IP Address control, or *value* is written to the control, depending on the direction of the exchange."},{"pos":[11809,11933],"content":"For more information about DDX, see <bpt id=\"p1\">[</bpt>Dialog Data Exchange and Validation<ept id=\"p1\">](../../mfc/dialog-data-exchange-and-validation.md)</ept>.","source":"For more information about DDX, see [Dialog Data Exchange and Validation](../../mfc/dialog-data-exchange-and-validation.md)."},{"pos":[11943,11982],"content":"<bpt id=\"p1\">&lt;a name=\"ddx_lbindex\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  DDX_LBIndex","linkify":"<a name=\"ddx_lbindex\"></a>  DDX_LBIndex","source":"<a name=\"ddx_lbindex\"></a>  DDX_LBIndex"},{"pos":[11986,12204],"content":"The <ph id=\"ph1\">`DDX_LBIndex`</ph> function manages the transfer of <ph id=\"ph2\">`int`</ph> data between a list box control in a dialog box, form view, or control view object and an <ph id=\"ph3\">`int`</ph> data member of the dialog box, form view, or control view object.","source":"The `DDX_LBIndex` function manages the transfer of `int` data between a list box control in a dialog box, form view, or control view object and an `int` data member of the dialog box, form view, or control view object."},{"pos":[12324,12334],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"A pointer to a <ph id=\"ph1\">`CDataExchange`</ph> object.","pos":[12347,12385],"source":" A pointer to a `CDataExchange` object."},{"content":"The framework supplies this object to establish the context of the data exchange, including its direction.","pos":[12386,12492]},{"content":"The resource ID of the list box control associated with the control property.","pos":[12509,12586]},{"content":"<bpt id=\"p1\">*</bpt>index<ept id=\"p1\">*</ept>","pos":[12593,12600],"source":"*index*"},{"content":"A reference to a member variable of the dialog box, form view, or control view object with which data is exchanged.","pos":[12604,12719]},{"pos":[12729,12736],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"When <ph id=\"ph1\">`DDX_LBIndex`</ph> is called, <bpt id=\"p1\">*</bpt>index<ept id=\"p1\">*</ept> is set to the index of the current list box selection.","pos":[12740,12832],"source":"When `DDX_LBIndex` is called, *index* is set to the index of the current list box selection."},{"content":"If no item is selected, <bpt id=\"p1\">*</bpt>index<ept id=\"p1\">*</ept> is set to -1.","pos":[12833,12878],"source":" If no item is selected, *index* is set to -1."},{"pos":[12885,13009],"content":"For more information about DDX, see <bpt id=\"p1\">[</bpt>Dialog Data Exchange and Validation<ept id=\"p1\">](../../mfc/dialog-data-exchange-and-validation.md)</ept>.","source":"For more information about DDX, see [Dialog Data Exchange and Validation](../../mfc/dialog-data-exchange-and-validation.md)."},{"pos":[13019,13060],"content":"<bpt id=\"p1\">&lt;a name=\"ddx_lbstring\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  DDX_LBString","linkify":"<a name=\"ddx_lbstring\"></a>  DDX_LBString","source":"<a name=\"ddx_lbstring\"></a>  DDX_LBString"},{"pos":[13064,13290],"content":"The <ph id=\"ph1\">`DDX_LBString`</ph> function manages the transfer of <ph id=\"ph2\">`CString`</ph> data between a list box control in a dialog box, form view, or control view object and a <ph id=\"ph3\">`CString`</ph> data member of the dialog box, form view, or control view object.","source":"The `DDX_LBString` function manages the transfer of `CString` data between a list box control in a dialog box, form view, or control view object and a `CString` data member of the dialog box, form view, or control view object."},{"pos":[13416,13426],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"A pointer to a <ph id=\"ph1\">`CDataExchange`</ph> object.","pos":[13439,13477],"source":" A pointer to a `CDataExchange` object."},{"content":"The framework supplies this object to establish the context of the data exchange, including its direction.","pos":[13478,13584]},{"content":"The resource ID of the list box control associated with the control property.","pos":[13601,13678]},{"content":"<bpt id=\"p1\">*</bpt>value<ept id=\"p1\">*</ept>","pos":[13685,13692],"source":"*value*"},{"content":"A reference to a member variable of the dialog box, form view, or control view object with which data is exchanged.","pos":[13696,13811]},{"pos":[13821,13828],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"When <ph id=\"ph1\">`DDX_LBString`</ph> is called to transfer data to a list box control, the first item in the control whose beginning matches <bpt id=\"p1\">*</bpt>value<ept id=\"p1\">*</ept> is selected.","pos":[13832,13976],"source":"When `DDX_LBString` is called to transfer data to a list box control, the first item in the control whose beginning matches *value* is selected."},{"content":"(To match the entire item rather than just a prefix, use <bpt id=\"p1\">[</bpt>DDX_LBStringExact<ept id=\"p1\">](#ddx_lbstringexact)</ept>.) If there are no matches, no items are selected.","pos":[13977,14123],"source":" (To match the entire item rather than just a prefix, use [DDX_LBStringExact](#ddx_lbstringexact).) If there are no matches, no items are selected."},{"content":"The matching is case-insensitive.","pos":[14124,14157]},{"content":"When <ph id=\"ph1\">`DDX_LBString`</ph> is called to transfer data from a list box control, <bpt id=\"p1\">*</bpt>value<ept id=\"p1\">*</ept> is set to the current list box selection.","pos":[14164,14285],"source":"When `DDX_LBString` is called to transfer data from a list box control, *value* is set to the current list box selection."},{"content":"If no item is selected, <bpt id=\"p1\">*</bpt>value<ept id=\"p1\">*</ept> is set to a string of zero length.","pos":[14286,14352],"source":" If no item is selected, *value* is set to a string of zero length."},{"pos":[14360,14461],"content":"[!NOTE]\n If the list box is a drop-down list box, the value exchanged is limited to 255 characters.","leadings":["","> "],"nodes":[{"content":"If the list box is a drop-down list box, the value exchanged is limited to 255 characters.","pos":[9,99]}]},{"pos":[14468,14592],"content":"For more information about DDX, see <bpt id=\"p1\">[</bpt>Dialog Data Exchange and Validation<ept id=\"p1\">](../../mfc/dialog-data-exchange-and-validation.md)</ept>.","source":"For more information about DDX, see [Dialog Data Exchange and Validation](../../mfc/dialog-data-exchange-and-validation.md)."},{"pos":[14602,14653],"content":"<bpt id=\"p1\">&lt;a name=\"ddx_lbstringexact\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  DDX_LBStringExact","linkify":"<a name=\"ddx_lbstringexact\"></a>  DDX_LBStringExact","source":"<a name=\"ddx_lbstringexact\"></a>  DDX_LBStringExact"},{"pos":[14657,14908],"content":"The <ph id=\"ph1\">`DDX_CBStringExact`</ph> function manages the transfer of <ph id=\"ph2\">`CString`</ph> data between the edit control of a list box control in a dialog box, form view, or control view object and a <ph id=\"ph3\">`CString`</ph> data member of the dialog box, form view, or control view object.","source":"The `DDX_CBStringExact` function manages the transfer of `CString` data between the edit control of a list box control in a dialog box, form view, or control view object and a `CString` data member of the dialog box, form view, or control view object."},{"pos":[15039,15049],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"A pointer to a <ph id=\"ph1\">`CDataExchange`</ph> object.","pos":[15062,15100],"source":" A pointer to a `CDataExchange` object."},{"content":"The framework supplies this object to establish the context of the data exchange, including its direction.","pos":[15101,15207]},{"content":"The resource ID of the list box control associated with the control property.","pos":[15224,15301]},{"content":"<bpt id=\"p1\">*</bpt>value<ept id=\"p1\">*</ept>","pos":[15308,15315],"source":"*value*"},{"content":"A reference to a member variable of the dialog box, form view, or control view object with which data is exchanged.","pos":[15319,15434]},{"pos":[15444,15451],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"When <ph id=\"ph1\">`DDX_LBStringExact`</ph> is called to transfer data to a list box control, the first item in the control that matches <bpt id=\"p1\">*</bpt>value<ept id=\"p1\">*</ept> is selected.","pos":[15455,15593],"source":"When `DDX_LBStringExact` is called to transfer data to a list box control, the first item in the control that matches *value* is selected."},{"content":"(To match just a prefix rather than the entire item, use <bpt id=\"p1\">[</bpt>DDX_LBString<ept id=\"p1\">](#ddx_lbstring)</ept>.) If there are no matches, no items are selected.","pos":[15594,15730],"source":" (To match just a prefix rather than the entire item, use [DDX_LBString](#ddx_lbstring).) If there are no matches, no items are selected."},{"content":"The matching is case-insensitive.","pos":[15731,15764]},{"content":"When <ph id=\"ph1\">`DDX_CBStringExact`</ph> is called to transfer data from a list box control, <bpt id=\"p1\">*</bpt>value<ept id=\"p1\">*</ept> is set to the current list box selection.","pos":[15771,15897],"source":"When `DDX_CBStringExact` is called to transfer data from a list box control, *value* is set to the current list box selection."},{"content":"If no item is selected, <bpt id=\"p1\">*</bpt>value<ept id=\"p1\">*</ept> is set to a string of zero length.","pos":[15898,15964],"source":" If no item is selected, *value* is set to a string of zero length."},{"pos":[15972,16073],"content":"[!NOTE]\n If the list box is a drop-down list box, the value exchanged is limited to 255 characters.","leadings":["","> "],"nodes":[{"content":"If the list box is a drop-down list box, the value exchanged is limited to 255 characters.","pos":[9,99]}]},{"pos":[16080,16204],"content":"For more information about DDX, see <bpt id=\"p1\">[</bpt>Dialog Data Exchange and Validation<ept id=\"p1\">](../../mfc/dialog-data-exchange-and-validation.md)</ept>.","source":"For more information about DDX, see [Dialog Data Exchange and Validation](../../mfc/dialog-data-exchange-and-validation.md)."},{"pos":[16214,16263],"content":"<bpt id=\"p1\">&lt;a name=\"ddx_monthcalctrl\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  DDX_MonthCalCtrl","linkify":"<a name=\"ddx_monthcalctrl\"></a>  DDX_MonthCalCtrl","source":"<a name=\"ddx_monthcalctrl\"></a>  DDX_MonthCalCtrl"},{"pos":[16267,16687],"content":"The <ph id=\"ph1\">`DDX_MonthCalCtrl`</ph> function manages the transfer of date data between a month calendar control ( <bpt id=\"p1\">[</bpt>CMonthCalCtrl<ept id=\"p1\">](../../mfc/reference/cmonthcalctrl-class.md)</ept>) in a dialog box, form view, or control view object and either a <bpt id=\"p2\">[</bpt>CTime<ept id=\"p2\">](../../atl-mfc-shared/reference/ctime-class.md)</ept> or a <bpt id=\"p3\">[</bpt>COleDateTime<ept id=\"p3\">](../../atl-mfc-shared/reference/coledatetime-class.md)</ept> data member of the dialog box, form view, or control view object.","source":"The `DDX_MonthCalCtrl` function manages the transfer of date data between a month calendar control ( [CMonthCalCtrl](../../mfc/reference/cmonthcalctrl-class.md)) in a dialog box, form view, or control view object and either a [CTime](../../atl-mfc-shared/reference/ctime-class.md) or a [COleDateTime](../../atl-mfc-shared/reference/coledatetime-class.md) data member of the dialog box, form view, or control view object."},{"pos":[16919,16929],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"A pointer to a <bpt id=\"p1\">[</bpt>CDataExchange<ept id=\"p1\">](../../mfc/reference/cdataexchange-class.md)</ept> object.","pos":[16942,17024],"source":" A pointer to a [CDataExchange](../../mfc/reference/cdataexchange-class.md) object."},{"content":"The framework supplies this object to establish the context of the data exchange, including its direction.","pos":[17025,17131]},{"content":"You don't need to delete this object.","pos":[17132,17169]},{"content":"The resource ID of the month calendar control associated with the member variable.","pos":[17186,17268]},{"content":"<bpt id=\"p1\">*</bpt>value<ept id=\"p1\">*</ept>","pos":[17275,17282],"source":"*value*"},{"content":"A reference to a <ph id=\"ph1\">`CTime`</ph> or <ph id=\"ph2\">`COleDateTime`</ph> member variable of the dialog box, form view, or control view object with which data is exchanged.","pos":[17286,17427],"source":" A reference to a `CTime` or `COleDateTime` member variable of the dialog box, form view, or control view object with which data is exchanged."},{"pos":[17437,17444],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[17452,17679],"content":"[!NOTE]\n The control manages a date value only. The time fields in the time object are set to reflect the creation time of the control window, or whatever time was set in the control with a call to `CMonthCalCtrl::SetCurSel`.","leadings":["","> "],"nodes":[{"content":" The control manages a date value only. The time fields in the time object are set to reflect the creation time of the control window, or whatever time was set in the control with a call to `CMonthCalCtrl::SetCurSel`.","pos":[8,225],"nodes":[{"content":"The control manages a date value only.","pos":[1,39]},{"content":"The time fields in the time object are set to reflect the creation time of the control window, or whatever time was set in the control with a call to <ph id=\"ph1\">`CMonthCalCtrl::SetCurSel`</ph>.","pos":[40,217],"source":" The time fields in the time object are set to reflect the creation time of the control window, or whatever time was set in the control with a call to `CMonthCalCtrl::SetCurSel`."}]}]},{"pos":[17686,17787],"content":"When <ph id=\"ph1\">`DDX_MonthCalCtrl`</ph> is called, <bpt id=\"p1\">*</bpt>value<ept id=\"p1\">*</ept> is set to the current state of the month calendar control.","source":"When `DDX_MonthCalCtrl` is called, *value* is set to the current state of the month calendar control."},{"pos":[17794,17918],"content":"For more information about DDX, see <bpt id=\"p1\">[</bpt>Dialog Data Exchange and Validation<ept id=\"p1\">](../../mfc/dialog-data-exchange-and-validation.md)</ept>.","source":"For more information about DDX, see [Dialog Data Exchange and Validation](../../mfc/dialog-data-exchange-and-validation.md)."},{"pos":[17928,17963],"content":"<bpt id=\"p1\">&lt;a name=\"ddx_radio\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  DDX_Radio","linkify":"<a name=\"ddx_radio\"></a>  DDX_Radio","source":"<a name=\"ddx_radio\"></a>  DDX_Radio"},{"content":"The <ph id=\"ph1\">`DDX_Radio`</ph> function manages the transfer of <ph id=\"ph2\">`int`</ph> data between a radio control group in a dialog box, form view, or control view object and a <ph id=\"ph3\">`int`</ph> data member of the dialog box, form view, or control view object.","pos":[17967,18185],"source":"The `DDX_Radio` function manages the transfer of `int` data between a radio control group in a dialog box, form view, or control view object and a `int` data member of the dialog box, form view, or control view object."},{"content":"The value of the <ph id=\"ph1\">`int`</ph> data member is determined according to which radio button within the group is selected.","pos":[18186,18296],"source":" The value of the `int` data member is determined according to which radio button within the group is selected."},{"pos":[18414,18424],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"A pointer to a <ph id=\"ph1\">`CDataExchange`</ph> object.","pos":[18437,18475],"source":" A pointer to a `CDataExchange` object."},{"content":"The framework supplies this object to establish the context of the data exchange, including its direction.","pos":[18476,18582]},{"content":"The resource ID of the first radio control in the group.","pos":[18599,18655]},{"content":"<bpt id=\"p1\">*</bpt>value<ept id=\"p1\">*</ept>","pos":[18662,18669],"source":"*value*"},{"content":"A reference to a member variable of the dialog box, form view, or control view object with which data is exchanged.","pos":[18673,18788]},{"pos":[18798,18805],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"When <ph id=\"ph1\">`DDX_Radio`</ph> is called, <bpt id=\"p1\">*</bpt>value<ept id=\"p1\">*</ept> is set to the current state of the radio control group.","pos":[18809,18900],"source":"When `DDX_Radio` is called, *value* is set to the current state of the radio control group."},{"content":"The value is set as a 0-based index of the radio control that is currently checked, or -1 if no radio controls are checked.","pos":[18901,19024]},{"pos":[19031,19182],"content":"For example, in case that the first radio button in the group is checked (the button with WS_GROUP style) the value of the <ph id=\"ph1\">`int`</ph> member is 0 and so on.","source":"For example, in case that the first radio button in the group is checked (the button with WS_GROUP style) the value of the `int` member is 0 and so on."},{"pos":[19189,19313],"content":"For more information about DDX, see <bpt id=\"p1\">[</bpt>Dialog Data Exchange and Validation<ept id=\"p1\">](../../mfc/dialog-data-exchange-and-validation.md)</ept>.","source":"For more information about DDX, see [Dialog Data Exchange and Validation](../../mfc/dialog-data-exchange-and-validation.md)."},{"pos":[19323,19360],"content":"<bpt id=\"p1\">&lt;a name=\"ddx_scroll\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  DDX_Scroll","linkify":"<a name=\"ddx_scroll\"></a>  DDX_Scroll","source":"<a name=\"ddx_scroll\"></a>  DDX_Scroll"},{"pos":[19364,19583],"content":"The <ph id=\"ph1\">`DDX_Scroll`</ph> function manages the transfer of <ph id=\"ph2\">`int`</ph> data between a scroll-bar control in a dialog box, form view, or control view object and an <ph id=\"ph3\">`int`</ph> data member of the dialog box, form view, or control view object.","source":"The `DDX_Scroll` function manages the transfer of `int` data between a scroll-bar control in a dialog box, form view, or control view object and an `int` data member of the dialog box, form view, or control view object."},{"pos":[19702,19712],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"A pointer to a <ph id=\"ph1\">`CDataExchange`</ph> object.","pos":[19725,19763],"source":" A pointer to a `CDataExchange` object."},{"content":"The framework supplies this object to establish the context of the data exchange, including its direction.","pos":[19764,19870]},{"content":"The resource ID of the scroll-bar control associated with the control property.","pos":[19887,19966]},{"content":"<bpt id=\"p1\">*</bpt>value<ept id=\"p1\">*</ept>","pos":[19973,19980],"source":"*value*"},{"content":"A reference to a member variable of the dialog box, form view or control view object with which data is exchanged.","pos":[19984,20098]},{"pos":[20108,20115],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"When <ph id=\"ph1\">`DDX_Scroll`</ph> is called, <bpt id=\"p1\">*</bpt>value<ept id=\"p1\">*</ept> is set to the current position of the control's thumb.","pos":[20119,20210],"source":"When `DDX_Scroll` is called, *value* is set to the current position of the control's thumb."},{"content":"For more information on the values associated with the current position of the control's thumb, see <bpt id=\"p1\">[</bpt>GetScrollPos<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb787585)</ept> in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","pos":[20211,20445],"source":" For more information on the values associated with the current position of the control's thumb, see [GetScrollPos](http://msdn.microsoft.com/library/windows/desktop/bb787585) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"pos":[20452,20576],"content":"For more information about DDX, see <bpt id=\"p1\">[</bpt>Dialog Data Exchange and Validation<ept id=\"p1\">](../../mfc/dialog-data-exchange-and-validation.md)</ept>.","source":"For more information about DDX, see [Dialog Data Exchange and Validation](../../mfc/dialog-data-exchange-and-validation.md)."},{"pos":[20586,20623],"content":"<bpt id=\"p1\">&lt;a name=\"ddx_slider\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  DDX_Slider","linkify":"<a name=\"ddx_slider\"></a>  DDX_Slider","source":"<a name=\"ddx_slider\"></a>  DDX_Slider"},{"pos":[20627,20805],"content":"The <ph id=\"ph1\">`DDX_Slider`</ph> function manages the transfer of <ph id=\"ph2\">`int`</ph> data between a slider control in a dialog box or form view and an <ph id=\"ph3\">`int`</ph> data member of the dialog box or form view object.","source":"The `DDX_Slider` function manages the transfer of `int` data between a slider control in a dialog box or form view and an `int` data member of the dialog box or form view object."},{"pos":[20924,20934],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"A pointer to a <bpt id=\"p1\">[</bpt>CDataExchange<ept id=\"p1\">](../../mfc/reference/cdataexchange-class.md)</ept> object.","pos":[20947,21029],"source":" A pointer to a [CDataExchange](../../mfc/reference/cdataexchange-class.md) object."},{"content":"The framework supplies this object to establish the context of the data exchange, including its direction.","pos":[21030,21136]},{"content":"The resource ID of the slider control.","pos":[21153,21191]},{"content":"<bpt id=\"p1\">*</bpt>value<ept id=\"p1\">*</ept>","pos":[21198,21205],"source":"*value*"},{"content":"A reference to the value to be exchanged.","pos":[21209,21250]},{"content":"This parameter holds or sets the slider control's current position.","pos":[21251,21318]},{"pos":[21328,21335],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[21339,21510],"content":"When <ph id=\"ph1\">`DDX_Slider`</ph> is called, <bpt id=\"p1\">*</bpt>value<ept id=\"p1\">*</ept> is set to the current position of the control's thumb, or the value receives the position, depending on the direction of the exchange.","source":"When `DDX_Slider` is called, *value* is set to the current position of the control's thumb, or the value receives the position, depending on the direction of the exchange."},{"content":"For more information about DDX, see <bpt id=\"p1\">[</bpt>Dialog Data Exchange and Validation<ept id=\"p1\">](../../mfc/dialog-data-exchange-and-validation.md)</ept>.","pos":[21517,21641],"source":"For more information about DDX, see [Dialog Data Exchange and Validation](../../mfc/dialog-data-exchange-and-validation.md)."},{"content":"For information about slider controls, see <bpt id=\"p1\">[</bpt>Using CSliderCtrl<ept id=\"p1\">](../../mfc/using-csliderctrl.md)</ept>.","pos":[21642,21737],"source":" For information about slider controls, see [Using CSliderCtrl](../../mfc/using-csliderctrl.md)."},{"pos":[21747,21780],"content":"<bpt id=\"p1\">&lt;a name=\"ddx_text\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  DDX_Text","linkify":"<a name=\"ddx_text\"></a>  DDX_Text","source":"<a name=\"ddx_text\"></a>  DDX_Text"},{"pos":[21784,22108],"content":"The <ph id=\"ph1\">`DDX_Text`</ph> function manages the transfer of <ph id=\"ph2\">`int`</ph>, <bpt id=\"p1\">**</bpt>UINT<ept id=\"p1\">**</ept>, <bpt id=\"p2\">**</bpt>long<ept id=\"p2\">**</ept>, <ph id=\"ph3\">`DWORD`</ph>, <ph id=\"ph4\">`CString`</ph>, <bpt id=\"p3\">**</bpt>float<ept id=\"p3\">**</ept>, or <bpt id=\"p4\">**</bpt>double<ept id=\"p4\">**</ept> data between an edit control in a dialog box, form view, or control view and a <bpt id=\"p5\">[</bpt>CString<ept id=\"p5\">](../../atl-mfc-shared/reference/cstringt-class.md)</ept> data member of the dialog box, form view, or control view object.","source":"The `DDX_Text` function manages the transfer of `int`, **UINT**, **long**, `DWORD`, `CString`, **float**, or **double** data between an edit control in a dialog box, form view, or control view and a [CString](../../atl-mfc-shared/reference/cstringt-class.md) data member of the dialog box, form view, or control view object."},{"pos":[23136,23146],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"A pointer to a <bpt id=\"p1\">[</bpt>CDataExchange<ept id=\"p1\">](../../mfc/reference/cdataexchange-class.md)</ept> object.","pos":[23159,23241],"source":" A pointer to a [CDataExchange](../../mfc/reference/cdataexchange-class.md) object."},{"content":"The framework supplies this object to establish the context of the data exchange, including its direction.","pos":[23242,23348]},{"content":"The ID of an edit control in the dialog box, form view, or control view object.","pos":[23365,23444]},{"content":"<bpt id=\"p1\">*</bpt>value<ept id=\"p1\">*</ept>","pos":[23451,23458],"source":"*value*"},{"content":"A reference to a data member in the dialog box, form view, or control view object.","pos":[23462,23544]},{"content":"The data type of <bpt id=\"p1\">*</bpt>value<ept id=\"p1\">*</ept> depends on which of the overloaded versions of <ph id=\"ph1\">`DDX_Text`</ph> you use.","pos":[23545,23636],"source":" The data type of *value* depends on which of the overloaded versions of `DDX_Text` you use."},{"pos":[23646,23653],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[23657,23781],"content":"For more information about DDX, see <bpt id=\"p1\">[</bpt>Dialog Data Exchange and Validation<ept id=\"p1\">](../../mfc/dialog-data-exchange-and-validation.md)</ept>.","source":"For more information about DDX, see [Dialog Data Exchange and Validation](../../mfc/dialog-data-exchange-and-validation.md)."},{"pos":[23790,23798],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Standard Dialog Data Validation Routines<ept id=\"p1\">](../../mfc/reference/standard-dialog-data-validation-routines.md)</ept><ph id=\"ph1\"> </ph>","pos":[23802,23910],"source":"[Standard Dialog Data Validation Routines](../../mfc/reference/standard-dialog-data-validation-routines.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Macros and Globals<ept id=\"p1\">](../../mfc/reference/mfc-macros-and-globals.md)</ept>","pos":[23913,23981],"source":" [Macros and Globals](../../mfc/reference/mfc-macros-and-globals.md)"}],"content":"---\ntitle: \"Standard Dialog Data Exchange Routines | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"standard dialog, data exchange routines\"\nms.assetid: c6adb7f3-f9af-4cc5-a9ea-315c5b60ad1a\ncaps.latest.revision: 13\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Standard Dialog Data Exchange Routines\nThis topic lists the standard dialog data exchange (DDX) routines used for common MFC dialog controls.  \n  \n> [!NOTE]\n>  The standard dialog data exchange routines are defined in the header file afxdd_.h. However, applications should include afxwin.h.  \n  \n### DDX Functions  \n  \n|||  \n|-|-|  \n|[DDX_CBIndex](#ddx_cbindex)|Initializes or retrieves the index of the current selection of a combo box control.|  \n|[DDX_CBString](#ddx_cbstring)|Initializes or retrieves the current contents of the edit field of a combo box control.|  \n|[DDX_CBStringExact](#ddx_cbstringexact)|Initializes or retrieves the current contents of the edit field of a combo box control.|  \n|[DDX_Check](#ddx_check)|Initializes or retrieves the current state of a check box control.|  \n|[DDX_Control](#ddx_control)|Subclasses a given control within a dialog box.|  \n|[DDX_DateTimeCtrl](#ddx_datetimectrl)|Initializes or retrieves date and/or time data of a date and time picker control.|  \n|[DDX_IPAddress](#ddx_ipaddress)|Initializes or retrieves the current value of an IP address control.|  \n|[DDX_LBIndex](#ddx_lbindex)|Initializes or retrieves the index of the current selection of a list box control.|  \n|[DDX_LBString](#ddx_lbstring)|Initializes or retrieves the current selection within a list box control.|  \n|[DDX_LBStringExact](#ddx_lbstringexact)|Initializes or retrieves the current selection within a list box control.|  \n|[DDX_MonthCalCtrl](#ddx_monthcalctrl)|Initializes or retrieves the current value of a month calendar control.|  \n|[DDX_Radio](#ddx_radio)|Initializes or retrieves the 0-based index of the radio control that is currently checked within a radio control group.|  \n|[DDX_Scroll](#ddx_scroll)|Initializes or retrieves the current position of a scroll control's thumb.|  \n|[DDX_Slider](#ddx_slider)|Initializes or retrieves the current position of a slider control's thumb.|  \n|[DDX_Text](#ddx_text)|Initializes or retrieves the current value of an edit control.|  \n  \n##  <a name=\"ddx_cbindex\"></a>  DDX_CBIndex  \n The `DDX_CBIndex` function manages the transfer of `int` data between a combo box control in a dialog box, form view, or control view object and a `int` data member of the dialog box, form view, or control view object.  \n  \n```  \n \nvoid AFXAPI DDX_CBIndex(\n    CDataExchange* \npDX  ,  \n    int \nnIDC  ,  \n    int& index);\n\n \n```  \n  \n### Parameters  \n `pDX`  \n A pointer to a `CDataExchange` object. The framework supplies this object to establish the context of the data exchange, including its direction.  \n  \n `nIDC`  \n The resource ID of the combo box control associated with the control property.  \n  \n *index*  \n A reference to a member variable of the dialog box, form view, or control view object with which data is exchanged.  \n  \n### Remarks  \n When `DDX_CBIndex` is called, *index* is set to the index of the current combo box selection. If no item is selected, *index* is set to 0.  \n  \n For more information about DDX, see [Dialog Data Exchange and Validation](../../mfc/dialog-data-exchange-and-validation.md).  \n  \n##  <a name=\"ddx_cbstring\"></a>  DDX_CBString  \n The `DDX_CBString` function manages the transfer of `CString` data between the edit control of a combo box control in a dialog box, form view, or control view object and a `CString` data member of the dialog box, form view, or control view object.  \n  \n```  \n \nvoid AFXAPI DDX_CBString(\n    CDataExchange* \npDX  ,  \n    int \nnIDC  ,  \n    CString& \nvalue);\n\n \n```  \n  \n### Parameters  \n `pDX`  \n A pointer to a `CDataExchange` object. The framework supplies this object to establish the context of the data exchange, including its direction.  \n  \n `nIDC`  \n The resource ID of the combo box control associated with the control property.  \n  \n *value*  \n A reference to a member variable of the dialog box, form view, or control view object with which data is exchanged.  \n  \n### Remarks  \n When `DDX_CBString` is called, *value* is set to the current combo box selection. If no item is selected, *value* is set to a string of zero length.  \n  \n> [!NOTE]\n>  If the combo box is a drop-down list box, the value exchanged is limited to 255 characters.  \n  \n For more information about DDX, see [Dialog Data Exchange and Validation](../../mfc/dialog-data-exchange-and-validation.md).  \n  \n##  <a name=\"ddx_cbstringexact\"></a>  DDX_CBStringExact  \n The `DDX_CBStringExact` function manages the transfer of `CString` data between the edit control of a combo box control in a dialog box, form view, or control view object and a `CString` data member of the dialog box, form view, or control view object.  \n  \n```  \n \nvoid AFXAPI DDX_CBStringExact(\n    CDataExchange* \npDX  ,  \n    int \nnIDC  ,  \n    CString& \nvalue);\n\n \n```  \n  \n### Parameters  \n `pDX`  \n A pointer to a `CDataExchange` object. The framework supplies this object to establish the context of the data exchange, including its direction.  \n  \n `nIDC`  \n The resource ID of the combo box control associated with the control property.  \n  \n *value*  \n A reference to a member variable of the dialog box, form view, or control view object with which data is exchanged.  \n  \n### Remarks  \n When `DDX_CBStringExact` is called, *value* is set to the current combo box selection. If no item is selected, *value* is set to a string of zero length.  \n  \n> [!NOTE]\n>  If the combo box is a drop-down list box, the value exchanged is limited to 255 characters.  \n  \n For more information about DDX, see [Dialog Data Exchange and Validation](../../mfc/dialog-data-exchange-and-validation.md).  \n  \n##  <a name=\"ddx_check\"></a>  DDX_Check  \n The `DDX_Check` function manages the transfer of `int` data between a check box control in a dialog box, form view, or control view object and a `int` data member of the dialog box, form view, or control view object.  \n  \n```  \n \nvoid AFXAPI DDX_Check(\n    CDataExchange* \npDX  ,  \n    int \nnIDC  ,  \n    int& value);\n\n \n```  \n  \n### Parameters  \n `pDX`  \n A pointer to a `CDataExchange` object. The framework supplies this object to establish the context of the data exchange, including its direction.  \n  \n `nIDC`  \n The resource ID of the check box control associated with the control property.  \n  \n *value*  \n A reference to a member variable of the dialog box, form view, or control view object with which data is exchanged.  \n  \n### Remarks  \n When `DDX_Check` is called, *value* is set to the current state of the check box control. For a list of the possible state values, see [BM_GETCHECK](http://msdn.microsoft.com/library/windows/desktop/bb775986) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]*.*  \n  \n For more information about DDX, see [Dialog Data Exchange and Validation](../../mfc/dialog-data-exchange-and-validation.md).  \n  \n##  <a name=\"ddx_control\"></a>  DDX_Control  \n The `DDX_Control` function subclasses the control, specified by `nIDC`, of the dialog box, form view, or control view object.  \n  \n```  \n \nvoid AFXAPI DDX_Control(\n    CDataExchange* \npDX  ,  \n    int \nnIDC  ,  \n    CWnd& rControl);\n\n \n```  \n  \n### Parameters  \n `pDX`  \n A pointer to a [CDataExchange](../../mfc/reference/cdataexchange-class.md) object.  \n  \n `nIDC`  \n The resource ID of the control to be subclassed.  \n  \n *rControl*  \n A reference to a member variable of the dialog box, form view, or control view object related to the specified control.  \n  \n### Remarks  \n The `pDX` object is supplied by the framework when the `DoDataExchange` function is called. Therefore, `DDX_Control` should only be called within your override of `DoDataExchange`.  \n  \n For more information about DDX, see [Dialog Data Exchange and Validation](../../mfc/dialog-data-exchange-and-validation.md).  \n  \n##  <a name=\"ddx_datetimectrl\"></a>  DDX_DateTimeCtrl  \n The `DDX_DateTimeCtrl` function manages the transfer of date and/or time data between a date and time picker control ( [CDateTimeCtrl](../../mfc/reference/cdatetimectrl-class.md)) in a dialog box or form view object and either a [CTime](../../atl-mfc-shared/reference/ctime-class.md) or a [COleDateTime](../../atl-mfc-shared/reference/coledatetime-class.md) data member of the dialog box or form view object.  \n  \n```  \n \nvoid AFXAPI DDX_DateTimeCtrl(\n    CDataExchange* \npDX  ,  \n    int \nnIDC  ,  \n    CTime& value);\n\nvoid AFXAPI DDX_DateTimeCtrl(\n    CDataExchange* \npDX  ,  \n    int \nnIDC  ,  \n    COleDateTime& value);\n\nvoid AFXAPI DDX_DateTimeCtrl(\n    CDataExchange* \npDX  ,  \n    int \nnIDC  ,  \n    CString& value);\n\n \n```  \n  \n### Parameters  \n `pDX`  \n A pointer to a [CDataExchange](../../mfc/reference/cdataexchange-class.md) object. The framework supplies this object to establish the context of the data exchange, including its direction. You don't need to delete this object.  \n  \n `nIDC`  \n The resource ID of the date and time picker control associated with the member variable.  \n  \n *value*  \n In the first two versions, a reference to a `CTime` or `COleDateTime` member variable, dialog box, form view, or control view object with which data is exchanged. In the third version, a reference to a `CString` data member control view object.  \n  \n### Remarks  \n When `DDX_DateTimeCtrl` is called, *value* is set to the current state of the date and time picker control, or the control is set to *value*, depending on the direction of the exchange.  \n  \n In the third version above, `DDX_DateTimeCtrl` manages the transfer of `CString` data between a date time control and a [CString](../../atl-mfc-shared/reference/cstringt-class.md) data member of the control view object. The string is formatted using the current locale's rules for formatting dates and times.  \n  \n For more information about DDX, see [Dialog Data Exchange and Validation](../../mfc/dialog-data-exchange-and-validation.md).  \n  \n##  <a name=\"ddx_ipaddress\"></a>  DDX_IPAddress  \n The `DDX_IPAddress` function manages the transfer of data between an IP Address control and a data member of the control view object.  \n  \n```  \n \nvoid AFXAPI DDX_IPAddress(\n    CDataExchange* \npDX  ,  \n    int \nnIDC  ,  \n    DWORD& value);\n\n \n```  \n  \n### Parameters  \n `pDX`  \n A pointer to a `CDataExchange` object. The framework supplies this object to establish the context of the data exchange, including its direction.  \n  \n `nIDC`  \n The resource ID of the IP Address control associated with the control property.  \n  \n *value*  \n A reference to the `DWORD` containing the four-field value of the IP Address control. The fields are filled or read as follows.  \n  \n|Field|Bits containing the field value|  \n|-----------|-------------------------------------|  \n|3|0 through 7|  \n|2|8 through 15|  \n|1|16 through 23|  \n|0|24 through 31|  \n  \n Use the Win32 [IPM_GETADDRESS](http://msdn.microsoft.com/library/windows/desktop/bb761378) to read the value, or use [IPM_SETADDRESS](http://msdn.microsoft.com/library/windows/desktop/bb761380) to fill the value. These messages are described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n### Remarks  \n When `DDX_IPAddress` is called, *value* is either read from the IP Address control, or *value* is written to the control, depending on the direction of the exchange.  \n  \n For more information about DDX, see [Dialog Data Exchange and Validation](../../mfc/dialog-data-exchange-and-validation.md).  \n  \n##  <a name=\"ddx_lbindex\"></a>  DDX_LBIndex  \n The `DDX_LBIndex` function manages the transfer of `int` data between a list box control in a dialog box, form view, or control view object and an `int` data member of the dialog box, form view, or control view object.  \n  \n```  \n \nvoid AFXAPI DDX_LBIndex(\n    CDataExchange* \npDX  ,  \n    int \nnIDC  ,  \n    int& index);\n\n \n```  \n  \n### Parameters  \n `pDX`  \n A pointer to a `CDataExchange` object. The framework supplies this object to establish the context of the data exchange, including its direction.  \n  \n `nIDC`  \n The resource ID of the list box control associated with the control property.  \n  \n *index*  \n A reference to a member variable of the dialog box, form view, or control view object with which data is exchanged.  \n  \n### Remarks  \n When `DDX_LBIndex` is called, *index* is set to the index of the current list box selection. If no item is selected, *index* is set to -1.  \n  \n For more information about DDX, see [Dialog Data Exchange and Validation](../../mfc/dialog-data-exchange-and-validation.md).  \n  \n##  <a name=\"ddx_lbstring\"></a>  DDX_LBString  \n The `DDX_LBString` function manages the transfer of `CString` data between a list box control in a dialog box, form view, or control view object and a `CString` data member of the dialog box, form view, or control view object.  \n  \n```  \n \nvoid AFXAPI DDX_LBString(\n    CDataExchange* \npDX  ,  \n    int \nnIDC  ,  \n    CString& \nvalue);\n\n \n```  \n  \n### Parameters  \n `pDX`  \n A pointer to a `CDataExchange` object. The framework supplies this object to establish the context of the data exchange, including its direction.  \n  \n `nIDC`  \n The resource ID of the list box control associated with the control property.  \n  \n *value*  \n A reference to a member variable of the dialog box, form view, or control view object with which data is exchanged.  \n  \n### Remarks  \n When `DDX_LBString` is called to transfer data to a list box control, the first item in the control whose beginning matches *value* is selected. (To match the entire item rather than just a prefix, use [DDX_LBStringExact](#ddx_lbstringexact).) If there are no matches, no items are selected. The matching is case-insensitive.  \n  \n When `DDX_LBString` is called to transfer data from a list box control, *value* is set to the current list box selection. If no item is selected, *value* is set to a string of zero length.  \n  \n> [!NOTE]\n>  If the list box is a drop-down list box, the value exchanged is limited to 255 characters.  \n  \n For more information about DDX, see [Dialog Data Exchange and Validation](../../mfc/dialog-data-exchange-and-validation.md).  \n  \n##  <a name=\"ddx_lbstringexact\"></a>  DDX_LBStringExact  \n The `DDX_CBStringExact` function manages the transfer of `CString` data between the edit control of a list box control in a dialog box, form view, or control view object and a `CString` data member of the dialog box, form view, or control view object.  \n  \n```  \n \nvoid AFXAPI DDX_LBStringExact(\n    CDataExchange* \npDX  ,  \n    int \nnIDC  ,  \n    CString& \nvalue);\n\n \n```  \n  \n### Parameters  \n `pDX`  \n A pointer to a `CDataExchange` object. The framework supplies this object to establish the context of the data exchange, including its direction.  \n  \n `nIDC`  \n The resource ID of the list box control associated with the control property.  \n  \n *value*  \n A reference to a member variable of the dialog box, form view, or control view object with which data is exchanged.  \n  \n### Remarks  \n When `DDX_LBStringExact` is called to transfer data to a list box control, the first item in the control that matches *value* is selected. (To match just a prefix rather than the entire item, use [DDX_LBString](#ddx_lbstring).) If there are no matches, no items are selected. The matching is case-insensitive.  \n  \n When `DDX_CBStringExact` is called to transfer data from a list box control, *value* is set to the current list box selection. If no item is selected, *value* is set to a string of zero length.  \n  \n> [!NOTE]\n>  If the list box is a drop-down list box, the value exchanged is limited to 255 characters.  \n  \n For more information about DDX, see [Dialog Data Exchange and Validation](../../mfc/dialog-data-exchange-and-validation.md).  \n  \n##  <a name=\"ddx_monthcalctrl\"></a>  DDX_MonthCalCtrl  \n The `DDX_MonthCalCtrl` function manages the transfer of date data between a month calendar control ( [CMonthCalCtrl](../../mfc/reference/cmonthcalctrl-class.md)) in a dialog box, form view, or control view object and either a [CTime](../../atl-mfc-shared/reference/ctime-class.md) or a [COleDateTime](../../atl-mfc-shared/reference/coledatetime-class.md) data member of the dialog box, form view, or control view object.  \n  \n```  \n \nvoid AFXAPI DDX_MonthCalCtrl(\n    CDataExchange* \npDX  ,  \n    int \nnIDC  ,  \n    CTime& value);\n\nvoid AFXAPI DDX_MonthCalCtrl(\n    CDataExchange* \npDX  ,  \n    int \nnIDC  ,  \n    COleDateTime& value);\n\n \n```  \n  \n### Parameters  \n `pDX`  \n A pointer to a [CDataExchange](../../mfc/reference/cdataexchange-class.md) object. The framework supplies this object to establish the context of the data exchange, including its direction. You don't need to delete this object.  \n  \n `nIDC`  \n The resource ID of the month calendar control associated with the member variable.  \n  \n *value*  \n A reference to a `CTime` or `COleDateTime` member variable of the dialog box, form view, or control view object with which data is exchanged.  \n  \n### Remarks  \n  \n> [!NOTE]\n>  The control manages a date value only. The time fields in the time object are set to reflect the creation time of the control window, or whatever time was set in the control with a call to `CMonthCalCtrl::SetCurSel`.  \n  \n When `DDX_MonthCalCtrl` is called, *value* is set to the current state of the month calendar control.  \n  \n For more information about DDX, see [Dialog Data Exchange and Validation](../../mfc/dialog-data-exchange-and-validation.md).  \n  \n##  <a name=\"ddx_radio\"></a>  DDX_Radio  \n The `DDX_Radio` function manages the transfer of `int` data between a radio control group in a dialog box, form view, or control view object and a `int` data member of the dialog box, form view, or control view object. The value of the `int` data member is determined according to which radio button within the group is selected.  \n  \n```  \n \nvoid AFXAPI DDX_Radio(\n    CDataExchange* \npDX  ,  \n    int \nnIDC  ,  \n    int& value);\n\n \n```  \n  \n### Parameters  \n `pDX`  \n A pointer to a `CDataExchange` object. The framework supplies this object to establish the context of the data exchange, including its direction.  \n  \n `nIDC`  \n The resource ID of the first radio control in the group.  \n  \n *value*  \n A reference to a member variable of the dialog box, form view, or control view object with which data is exchanged.  \n  \n### Remarks  \n When `DDX_Radio` is called, *value* is set to the current state of the radio control group. The value is set as a 0-based index of the radio control that is currently checked, or -1 if no radio controls are checked.  \n  \n For example, in case that the first radio button in the group is checked (the button with WS_GROUP style) the value of the `int` member is 0 and so on.  \n  \n For more information about DDX, see [Dialog Data Exchange and Validation](../../mfc/dialog-data-exchange-and-validation.md).  \n  \n##  <a name=\"ddx_scroll\"></a>  DDX_Scroll  \n The `DDX_Scroll` function manages the transfer of `int` data between a scroll-bar control in a dialog box, form view, or control view object and an `int` data member of the dialog box, form view, or control view object.  \n  \n```  \n \nvoid AFXAPI DDX_Scroll(\n    CDataExchange* \npDX  ,  \n    int \nnIDC  ,  \n    int& value);\n\n \n```  \n  \n### Parameters  \n `pDX`  \n A pointer to a `CDataExchange` object. The framework supplies this object to establish the context of the data exchange, including its direction.  \n  \n `nIDC`  \n The resource ID of the scroll-bar control associated with the control property.  \n  \n *value*  \n A reference to a member variable of the dialog box, form view or control view object with which data is exchanged.  \n  \n### Remarks  \n When `DDX_Scroll` is called, *value* is set to the current position of the control's thumb. For more information on the values associated with the current position of the control's thumb, see [GetScrollPos](http://msdn.microsoft.com/library/windows/desktop/bb787585) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n For more information about DDX, see [Dialog Data Exchange and Validation](../../mfc/dialog-data-exchange-and-validation.md).  \n  \n##  <a name=\"ddx_slider\"></a>  DDX_Slider  \n The `DDX_Slider` function manages the transfer of `int` data between a slider control in a dialog box or form view and an `int` data member of the dialog box or form view object.  \n  \n```  \n \nvoid AFXAPI DDX_Slider(\n    CDataExchange* \npDX  ,  \n    int \nnIDC  ,  \n    int& value);\n\n \n```  \n  \n### Parameters  \n `pDX`  \n A pointer to a [CDataExchange](../../mfc/reference/cdataexchange-class.md) object. The framework supplies this object to establish the context of the data exchange, including its direction.  \n  \n `nIDC`  \n The resource ID of the slider control.  \n  \n *value*  \n A reference to the value to be exchanged. This parameter holds or sets the slider control's current position.  \n  \n### Remarks  \n When `DDX_Slider` is called, *value* is set to the current position of the control's thumb, or the value receives the position, depending on the direction of the exchange.  \n  \n For more information about DDX, see [Dialog Data Exchange and Validation](../../mfc/dialog-data-exchange-and-validation.md). For information about slider controls, see [Using CSliderCtrl](../../mfc/using-csliderctrl.md).  \n  \n##  <a name=\"ddx_text\"></a>  DDX_Text  \n The `DDX_Text` function manages the transfer of `int`, **UINT**, **long**, `DWORD`, `CString`, **float**, or **double** data between an edit control in a dialog box, form view, or control view and a [CString](../../atl-mfc-shared/reference/cstringt-class.md) data member of the dialog box, form view, or control view object.  \n  \n```  \n \nvoid AFXAPI DDX_Text(\n    CDataExchange* \npDX  ,  \n    int \nnIDC  ,  \n    BYTE& value);\n\nvoid AFXAPI DDX_Text(\n    CDataExchange* \npDX  ,  \n    int nIDC,  \n    short& value);\n\nvoid AFXAPI DDX_Text(\n    CDataExchange* \npDX  ,  \n    int \nnIDC  ,  \n    int& value);\n\nvoid AFXAPI DDX_Text(\n    CDataExchange* \npDX  ,  \n    int \nnIDC  ,  \n    UINT& value);\n\nvoid AFXAPI DDX_Text(\n    CDataExchange* \npDX  ,  \n    int \nnIDC  ,  \n    long& value);\n\nvoid AFXAPI DDX_Text(\n    CDataExchange* \npDX  ,  \n    int \nnIDC  ,  \n    DWORD& value);\n\nvoid AFXAPI DDX_Text(\n    CDataExchange* \npDX  ,  \n    int \nnIDC  ,  \n    CString& value);\n\nvoid AFXAPI DDX_Text(\n    CDataExchange* \npDX  ,  \n    int \nnIDC  ,  \n    float& value);\n\nvoid AFXAPI DDX_Text(\n    CDataExchange* \npDX  ,  \n    int \nnIDC  ,  \n    double& value);\n\nvoid AFXAPI DDX_Text(\n    CDataExchange* \npDX  ,  \n    int \nnIDC  ,  \n    COleCurrency& value);\n\nvoid AFXAPI DDX_Text(\n    CDataExchange* \npDX  ,  \n    int \nnIDC  ,  \n    COleDateTime& value);\n\n \n```  \n  \n### Parameters  \n `pDX`  \n A pointer to a [CDataExchange](../../mfc/reference/cdataexchange-class.md) object. The framework supplies this object to establish the context of the data exchange, including its direction.  \n  \n `nIDC`  \n The ID of an edit control in the dialog box, form view, or control view object.  \n  \n *value*  \n A reference to a data member in the dialog box, form view, or control view object. The data type of *value* depends on which of the overloaded versions of `DDX_Text` you use.  \n  \n### Remarks  \n For more information about DDX, see [Dialog Data Exchange and Validation](../../mfc/dialog-data-exchange-and-validation.md).  \n  \n## See Also  \n [Standard Dialog Data Validation Routines](../../mfc/reference/standard-dialog-data-validation-routines.md)   \n [Macros and Globals](../../mfc/reference/mfc-macros-and-globals.md)\n"}