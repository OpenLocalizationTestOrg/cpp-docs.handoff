{"nodes":[{"pos":[12,50],"content":"CMFCAutoHideBar Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"CMFCAutoHideBar Class | Microsoft Docs","pos":[0,38]}]},{"content":"CMFCAutoHideBar Class","pos":[623,644]},{"pos":[645,738],"content":"The <ph id=\"ph1\">`CMFCAutoHideBar`</ph> class is a special toolbar class that implements the auto-hide feature.","source":"The `CMFCAutoHideBar` class is a special toolbar class that implements the auto-hide feature."},{"content":"Syntax","pos":[747,753]},{"content":"Members","pos":[816,823]},{"content":"Public Constructors","pos":[833,852]},{"content":"Name","pos":[859,863]},{"content":"Description","pos":[864,875]},{"content":"CMFCAutoHideBar::CMFCAutoHideBar","pos":[914,946]},{"content":"Public Methods","pos":[994,1008]},{"content":"Name","pos":[1015,1019]},{"content":"Description","pos":[1020,1031]},{"content":"CMFCAutoHideBar::AddAutoHideWindow","pos":[1070,1104]},{"content":"CMFCAutoHideBar::AllowShowOnPaneMenu","pos":[1149,1185]},{"pos":[1226,1267],"content":"(Overrides <ph id=\"ph1\">`CPane::AllowShowOnPaneMenu`</ph>.)","source":"(Overrides `CPane::AllowShowOnPaneMenu`.)"},{"content":"CMFCAutoHideBar::CalcFixedLayout","pos":[1273,1305]},{"pos":[1342,1450],"content":"(Overrides <bpt id=\"p1\">[</bpt>CBasePane::CalcFixedLayout<ept id=\"p1\">](../../mfc/reference/cbasepane-class.md#cbasepane__calcfixedlayout)</ept>.)","source":"(Overrides [CBasePane::CalcFixedLayout](../../mfc/reference/cbasepane-class.md#cbasepane__calcfixedlayout).)"},{"content":"CMFCAutoHideBar::Create","pos":[1456,1479]},{"content":"Creates a control bar and attaches it to the <bpt id=\"p1\">[</bpt>CPane<ept id=\"p1\">](../../mfc/reference/cpane-class.md)</ept> object.","pos":[1507,1603],"source":"Creates a control bar and attaches it to the [CPane](../../mfc/reference/cpane-class.md) object."},{"content":"(Overrides <bpt id=\"p1\">[</bpt>CPane::Create<ept id=\"p1\">](../../mfc/reference/cpane-class.md#cpane__create)</ept>.)","pos":[1604,1682],"source":" (Overrides [CPane::Create](../../mfc/reference/cpane-class.md#cpane__create).)"},{"content":"CMFCAutoHideBar::GetFirstAHWindow","pos":[1688,1721]},{"content":"CMFCAutoHideBar::GetVisibleCount","pos":[1765,1797]},{"content":"CMFCAutoHideBar::OnShowControlBarMenu","pos":[1840,1877]},{"content":"Called by the framework when a special pane menu is about to be displayed.","pos":[1919,1993]},{"content":"(Overrides <bpt id=\"p1\">[</bpt>CPane::OnShowControlBarMenu<ept id=\"p1\">](../../mfc/reference/cpane-class.md#cpane__onshowcontrolbarmenu)</ept>.)","pos":[1994,2100],"source":" (Overrides [CPane::OnShowControlBarMenu](../../mfc/reference/cpane-class.md#cpane__onshowcontrolbarmenu).)"},{"content":"CMFCAutoHideBar::RemoveAutoHideWindow","pos":[2106,2143]},{"content":"CMFCAutoHideBar::SetActiveInGroup","pos":[2191,2224]},{"pos":[2262,2360],"content":"(Overrides <bpt id=\"p1\">[</bpt>CPane::SetActiveInGroup<ept id=\"p1\">](../../mfc/reference/cpane-class.md#cpane__setactiveingroup)</ept>.)","source":"(Overrides [CPane::SetActiveInGroup](../../mfc/reference/cpane-class.md#cpane__setactiveingroup).)"},{"content":"CMFCAutoHideBar::SetRecentVisibleState","pos":[2366,2404]},{"content":"CMFCAutoHideBar::ShowAutoHideWindow","pos":[2453,2488]},{"content":"CMFCAutoHideBar::StretchPane","pos":[2534,2562]},{"content":"Stretches a pane vertically or horizontally.","pos":[2595,2639]},{"content":"(Overrides <bpt id=\"p1\">[</bpt>CBasePane::StretchPane<ept id=\"p1\">](../../mfc/reference/cbasepane-class.md#cbasepane__stretchpane)</ept>.)","pos":[2640,2740],"source":" (Overrides [CBasePane::StretchPane](../../mfc/reference/cbasepane-class.md#cbasepane__stretchpane).)"},{"content":"CMFCAutoHideBar::UnSetAutoHideMode","pos":[2746,2780]},{"content":"CMFCAutoHideBar::UpdateVisibleState","pos":[2825,2860]},{"content":"Data Members","pos":[2911,2923]},{"content":"Name","pos":[2930,2934]},{"content":"Description","pos":[2935,2946]},{"content":"CMFCAutoHideBar::m_nShowAHWndDelay","pos":[2985,3019]},{"pos":[3058,3275],"content":"The time delay between the moment when the user places the mouse cursor over a <bpt id=\"p1\">[</bpt>CMFCAutoHideButton Class<ept id=\"p1\">](../../mfc/reference/cmfcautohidebutton-class.md)</ept> and the moment when the framework shows the associated window.","source":"The time delay between the moment when the user places the mouse cursor over a [CMFCAutoHideButton Class](../../mfc/reference/cmfcautohidebutton-class.md) and the moment when the framework shows the associated window."},{"content":"Remarks","pos":[3285,3292]},{"content":"When the user switches a dock pane to auto-hide mode, the framework automatically creates a <ph id=\"ph1\">`CMFCAutoHideBar`</ph> object.","pos":[3296,3413],"source":"When the user switches a dock pane to auto-hide mode, the framework automatically creates a `CMFCAutoHideBar` object."},{"content":"It also creates the necessary <bpt id=\"p1\">[</bpt>CAutoHideDockSite<ept id=\"p1\">](../../mfc/reference/cautohidedocksite-class.md)</ept> and <bpt id=\"p2\">[</bpt>CMFCAutoHideButton<ept id=\"p2\">](../../mfc/reference/cmfcautohidebutton-class.md)</ept> objects.","pos":[3414,3594],"source":" It also creates the necessary [CAutoHideDockSite](../../mfc/reference/cautohidedocksite-class.md) and [CMFCAutoHideButton](../../mfc/reference/cmfcautohidebutton-class.md) objects."},{"content":"Each <ph id=\"ph1\">`CAutoHideDockSite`</ph> object is associated with an individual <ph id=\"ph2\">`CMFCAutoHideButton`</ph>.","pos":[3595,3681],"source":" Each `CAutoHideDockSite` object is associated with an individual `CMFCAutoHideButton`."},{"content":"The <ph id=\"ph1\">`CMFCAutoHideBar`</ph> class implements the display of a <ph id=\"ph2\">`CAutoHideDockSite`</ph> when a user's mouse hovers over a <ph id=\"ph3\">`CMFCAutoHideButton`</ph>.","pos":[3688,3819],"source":"The `CMFCAutoHideBar` class implements the display of a `CAutoHideDockSite` when a user's mouse hovers over a `CMFCAutoHideButton`."},{"content":"When the toolbar receives a WM_MOUSEMOVE message, <ph id=\"ph1\">`CMFCAutoHideBar`</ph> starts a timer.","pos":[3820,3903],"source":" When the toolbar receives a WM_MOUSEMOVE message, `CMFCAutoHideBar` starts a timer."},{"content":"When the timer finishes, it sends the toolbar a WM_TIMER event notification.","pos":[3904,3980]},{"content":"The toolbar handles this event by checking whether the mouse pointer is positioned over the same auto-hide button that it was positioned over when the timer started.","pos":[3981,4146]},{"content":"If it is, the attached <ph id=\"ph1\">`CAutoHideDockSite`</ph> is displayed.","pos":[4147,4203],"source":" If it is, the attached `CAutoHideDockSite` is displayed."},{"content":"You can control the length of the timer's delay by setting <ph id=\"ph1\">`m_nShowAHWndDelay`</ph>.","pos":[4210,4289],"source":"You can control the length of the timer's delay by setting `m_nShowAHWndDelay`."},{"content":"The default value is 400 ms.","pos":[4290,4318]},{"content":"Example","pos":[4327,4334]},{"pos":[4338,4453],"content":"The following example demonstrates how to construct a <ph id=\"ph1\">`CMFCAutoHideBar`</ph> object and use its <ph id=\"ph2\">`GetDockSiteRow`</ph> method.","source":"The following example demonstrates how to construct a `CMFCAutoHideBar` object and use its `GetDockSiteRow` method."},{"pos":[4471,4491],"content":"NVC_MFC_RibbonApp#26"},{"content":"Inheritance Hierarchy","pos":[4567,4588]},{"content":"CObject","pos":[4593,4600]},{"content":"CCmdTarget","pos":[4647,4657]},{"content":"CWnd","pos":[4707,4711]},{"content":"CBasePane","pos":[4755,4764]},{"content":"CPane","pos":[4813,4818]},{"content":"CMFCAutoHideBar","pos":[4863,4878]},{"content":"Requirements","pos":[4934,4946]},{"pos":[4950,4978],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> afxautohidebar.h","source":"**Header:** afxautohidebar.h"},{"pos":[5039,5073],"content":"CMFCAutoHideBar::AddAutoHideWindow"},{"pos":[5077,5153],"content":"Adds functionality to a <ph id=\"ph1\">`CDockablePane`</ph> window that enables it to auto-hide.","source":"Adds functionality to a `CDockablePane` window that enables it to auto-hide."},{"content":"Parameters","pos":[5276,5286]},{"content":"[in]","pos":[5290,5294]},{"content":"The window that you want to hide.","pos":[5313,5346]},{"content":"[in]","pos":[5353,5357]},{"content":"A value that specifies the alignment of the auto-hide button with the application window.","pos":[5375,5464]},{"content":"Return Value","pos":[5474,5486]},{"content":"Remarks","pos":[5496,5503]},{"content":"The <ph id=\"ph1\">`dwAlignment`</ph> parameter indicates where the auto-hide button resides in the application.","pos":[5507,5599],"source":"The `dwAlignment` parameter indicates where the auto-hide button resides in the application."},{"content":"The parameter can be any one of the following values:","pos":[5600,5653]},{"pos":[5818,5854],"content":"CMFCAutoHideBar::AllowShowOnPaneMenu"},{"content":"Return Value","pos":[6027,6039]},{"content":"Remarks","pos":[6049,6056]},{"pos":[6115,6147],"content":"CMFCAutoHideBar::CalcFixedLayout"},{"content":"Parameters","pos":[6344,6354]},{"content":"[in]","pos":[6358,6362]},{"content":"[in]","pos":[6377,6381]},{"content":"Return Value","pos":[6399,6411]},{"content":"Remarks","pos":[6421,6428]},{"pos":[6487,6519],"content":"CMFCAutoHideBar::CMFCAutoHideBar"},{"content":"Constructs a CMFCAutoHideBar object.","pos":[6523,6559]},{"content":"Remarks","pos":[6603,6610]},{"pos":[6660,6683],"content":"CMFCAutoHideBar::Create"},{"content":"Parameters","pos":[7040,7050]},{"content":"[in]","pos":[7054,7058]},{"content":"[in]","pos":[7078,7082]},{"content":"[in]","pos":[7096,7100]},{"content":"[in]","pos":[7111,7115]},{"content":"[in]","pos":[7132,7136]},{"content":"[in]","pos":[7146,7150]},{"content":"[in]","pos":[7174,7178]},{"content":"Return Value","pos":[7199,7211]},{"content":"Remarks","pos":[7221,7228]},{"pos":[7288,7321],"content":"CMFCAutoHideBar::GetFirstAHWindow"},{"content":"Returns a pointer to the first auto-hide window in the application.","pos":[7325,7392]},{"content":"Return Value","pos":[7452,7464]},{"content":"The first auto-hide window in the application, or NULL if there isn't one.","pos":[7468,7542]},{"content":"Remarks","pos":[7552,7559]},{"pos":[7618,7650],"content":"CMFCAutoHideBar::GetVisibleCount"},{"content":"Gets the number of visible auto-hide buttons.","pos":[7654,7699]},{"content":"Return Value","pos":[7747,7759]},{"content":"Returns the number of visible auto-hide buttons.","pos":[7763,7811]},{"content":"Remarks","pos":[7821,7828]},{"pos":[7889,7923],"content":"CMFCAutoHideBar::m_nShowAHWndDelay"},{"pos":[7927,8144],"content":"The time delay between the moment when the user places the mouse cursor over a <bpt id=\"p1\">[</bpt>CMFCAutoHideButton Class<ept id=\"p1\">](../../mfc/reference/cmfcautohidebutton-class.md)</ept> and the moment when the framework shows the associated window.","source":"The time delay between the moment when the user places the mouse cursor over a [CMFCAutoHideButton Class](../../mfc/reference/cmfcautohidebutton-class.md) and the moment when the framework shows the associated window."},{"content":"Remarks","pos":[8217,8224]},{"content":"When the user places the mouse cursor over a <ph id=\"ph1\">`CMFCAutoHideButton`</ph>, there is a slight delay before the framework displays the associated window.","pos":[8228,8371],"source":"When the user places the mouse cursor over a `CMFCAutoHideButton`, there is a slight delay before the framework displays the associated window."},{"content":"This parameter determines the length of that delay in milliseconds.","pos":[8372,8439]},{"pos":[8503,8540],"content":"CMFCAutoHideBar::OnShowControlBarMenu"},{"content":"Parameters","pos":[8711,8721]},{"pos":[8725,8729],"content":"[in]"},{"content":"Return Value","pos":[8748,8760]},{"content":"Remarks","pos":[8770,8777]},{"pos":[8841,8878],"content":"CMFCAutoHideBar::RemoveAutoHideWindow"},{"content":"Removes and destroys the auto-hide window.","pos":[8882,8924]},{"content":"Parameters","pos":[9022,9032]},{"content":"CDockablePane*","pos":[9036,9050]},{"content":"The auto-hide window to remove.","pos":[9069,9100]},{"content":"Return Value","pos":[9110,9122]},{"content":"TRUE if successful; otherwise FALSE.","pos":[9126,9162]},{"content":"Remarks","pos":[9172,9179]},{"pos":[9239,9272],"content":"CMFCAutoHideBar::SetActiveInGroup"},{"content":"Flags an auto-hide bar as active.","pos":[9276,9309]},{"content":"Parameters","pos":[9395,9405]},{"content":"[in] BOOL","pos":[9409,9418]},{"content":"TRUE to set to active; otherwise FALSE.","pos":[9432,9471]},{"content":"Remarks","pos":[9481,9488]},{"pos":[9492,9582],"content":"See <bpt id=\"p1\">[</bpt>CPane::SetActiveInGroup<ept id=\"p1\">](../../mfc/reference/cpane-class.md#cpane__setactiveingroup)</ept>.","source":"See [CPane::SetActiveInGroup](../../mfc/reference/cpane-class.md#cpane__setactiveingroup)."},{"pos":[9647,9685],"content":"CMFCAutoHideBar::SetRecentVisibleState"},{"content":"Parameters","pos":[9854,9864]},{"pos":[9868,9872],"content":"[in]"},{"content":"Remarks","pos":[9891,9898]},{"pos":[9960,9995],"content":"CMFCAutoHideBar::ShowAutoHideWindow"},{"content":"Shows the auto-hide window.","pos":[9999,10026]},{"content":"Parameters","pos":[10162,10172]},{"content":"[in] CDockablePane*","pos":[10176,10195]},{"content":"[in] BOOL","pos":[10214,10223]},{"content":"TRUE to show the window.","pos":[10235,10259]},{"content":"[in] BOOL","pos":[10266,10275]},{"content":"This parameter is ignored.","pos":[10288,10314]},{"content":"Return Value","pos":[10324,10336]},{"content":"TRUE if successful; otherwise FALSE.","pos":[10340,10376]},{"content":"Remarks","pos":[10386,10393]},{"pos":[10448,10476],"content":"CMFCAutoHideBar::StretchPane"},{"pos":[10480,10568],"content":"Resizes the auto-hide bar in its collapsed state to fit the <ph id=\"ph1\">`CMFCAutoHideButton`</ph> object.","source":"Resizes the auto-hide bar in its collapsed state to fit the `CMFCAutoHideButton` object."},{"content":"Parameters","pos":[10657,10667]},{"content":"[in]","pos":[10671,10675]},{"content":"The value is unused in the base implementation.","pos":[10689,10736]},{"content":"In derived implementations, use this value to indicate the length of the resized pane.","pos":[10737,10823]},{"content":"[in]","pos":[10830,10834]},{"content":"The value is unused in the base implementation.","pos":[10846,10893]},{"content":"In derived implementations, use <ph id=\"ph1\">`TRUE`</ph> to handle the case where the auto-hide bar is collapsed vertically, and <ph id=\"ph2\">`FALSE`</ph> for the case where the auto-hide bar is collapsed horizontally.","pos":[10894,11076],"source":" In derived implementations, use `TRUE` to handle the case where the auto-hide bar is collapsed vertically, and `FALSE` for the case where the auto-hide bar is collapsed horizontally."},{"content":"Return Value","pos":[11086,11098]},{"content":"The resulting size of the resized pane.","pos":[11102,11141]},{"content":"Remarks","pos":[11151,11158]},{"content":"Derived classes can override this method to customize the behavior.","pos":[11162,11229]},{"pos":[11290,11324],"content":"CMFCAutoHideBar::UnSetAutoHideMode"},{"content":"Disables auto-hide mode for a group of auto-hide bars.","pos":[11328,11382]},{"content":"Parameters","pos":[11465,11475]},{"content":"[in] pFirstBarInGroup","pos":[11479,11500]},{"content":"A pointer to the first auto-hide bar in the group.","pos":[11504,11554]},{"content":"Remarks","pos":[11564,11571]},{"pos":[11633,11668],"content":"CMFCAutoHideBar::UpdateVisibleState"},{"content":"Called by the framework when the auto-hide bar needs to be redrawn.","pos":[11672,11739]},{"content":"Remarks","pos":[11791,11798]},{"content":"See Also","pos":[11807,11815]},{"content":"Hierarchy Chart","pos":[11820,11835]},{"content":"Classes","pos":[11872,11879]},{"content":"CPane Class","pos":[11922,11933]},{"content":"CAutoHideDockSite Class","pos":[11976,11999]},{"content":"CMFCAutoHideButton Class","pos":[12054,12078]}],"content":"---\ntitle: \"CMFCAutoHideBar Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"CMFCAutoHideBar\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"CMFCAutoHideToolBar class\"\nms.assetid: 54c8d84f-de64-4efd-8a47-3ea0ade40a70\ncaps.latest.revision: 35\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# CMFCAutoHideBar Class\nThe `CMFCAutoHideBar` class is a special toolbar class that implements the auto-hide feature.  \n  \n## Syntax  \n  \n```  \nclass CMFCAutoHideBar : public CPane  \n```  \n  \n## Members  \n  \n### Public Constructors  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CMFCAutoHideBar::CMFCAutoHideBar](#cmfcautohidebar__cmfcautohidebar)||  \n  \n### Public Methods  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CMFCAutoHideBar::AddAutoHideWindow](#cmfcautohidebar__addautohidewindow)||  \n|[CMFCAutoHideBar::AllowShowOnPaneMenu](#cmfcautohidebar__allowshowonpanemenu)|(Overrides `CPane::AllowShowOnPaneMenu`.)|  \n|[CMFCAutoHideBar::CalcFixedLayout](#cmfcautohidebar__calcfixedlayout)|(Overrides [CBasePane::CalcFixedLayout](../../mfc/reference/cbasepane-class.md#cbasepane__calcfixedlayout).)|  \n|[CMFCAutoHideBar::Create](#cmfcautohidebar__create)|Creates a control bar and attaches it to the [CPane](../../mfc/reference/cpane-class.md) object. (Overrides [CPane::Create](../../mfc/reference/cpane-class.md#cpane__create).)|  \n|[CMFCAutoHideBar::GetFirstAHWindow](#cmfcautohidebar__getfirstahwindow)||  \n|[CMFCAutoHideBar::GetVisibleCount](#cmfcautohidebar__getvisiblecount)||  \n|[CMFCAutoHideBar::OnShowControlBarMenu](#cmfcautohidebar__onshowcontrolbarmenu)|Called by the framework when a special pane menu is about to be displayed. (Overrides [CPane::OnShowControlBarMenu](../../mfc/reference/cpane-class.md#cpane__onshowcontrolbarmenu).)|  \n|[CMFCAutoHideBar::RemoveAutoHideWindow](#cmfcautohidebar__removeautohidewindow)||  \n|[CMFCAutoHideBar::SetActiveInGroup](#cmfcautohidebar__setactiveingroup)|(Overrides [CPane::SetActiveInGroup](../../mfc/reference/cpane-class.md#cpane__setactiveingroup).)|  \n|[CMFCAutoHideBar::SetRecentVisibleState](#cmfcautohidebar__setrecentvisiblestate)||  \n|[CMFCAutoHideBar::ShowAutoHideWindow](#cmfcautohidebar__showautohidewindow)||  \n|[CMFCAutoHideBar::StretchPane](#cmfcautohidebar__stretchpane)|Stretches a pane vertically or horizontally. (Overrides [CBasePane::StretchPane](../../mfc/reference/cbasepane-class.md#cbasepane__stretchpane).)|  \n|[CMFCAutoHideBar::UnSetAutoHideMode](#cmfcautohidebar__unsetautohidemode)||  \n|[CMFCAutoHideBar::UpdateVisibleState](#cmfcautohidebar__updatevisiblestate)||  \n  \n### Data Members  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CMFCAutoHideBar::m_nShowAHWndDelay](#cmfcautohidebar__m_nshowahwnddelay)|The time delay between the moment when the user places the mouse cursor over a [CMFCAutoHideButton Class](../../mfc/reference/cmfcautohidebutton-class.md) and the moment when the framework shows the associated window.|  \n  \n## Remarks  \n When the user switches a dock pane to auto-hide mode, the framework automatically creates a `CMFCAutoHideBar` object. It also creates the necessary [CAutoHideDockSite](../../mfc/reference/cautohidedocksite-class.md) and [CMFCAutoHideButton](../../mfc/reference/cmfcautohidebutton-class.md) objects. Each `CAutoHideDockSite` object is associated with an individual `CMFCAutoHideButton`.  \n  \n The `CMFCAutoHideBar` class implements the display of a `CAutoHideDockSite` when a user's mouse hovers over a `CMFCAutoHideButton`. When the toolbar receives a WM_MOUSEMOVE message, `CMFCAutoHideBar` starts a timer. When the timer finishes, it sends the toolbar a WM_TIMER event notification. The toolbar handles this event by checking whether the mouse pointer is positioned over the same auto-hide button that it was positioned over when the timer started. If it is, the attached `CAutoHideDockSite` is displayed.  \n  \n You can control the length of the timer's delay by setting `m_nShowAHWndDelay`. The default value is 400 ms.  \n  \n## Example  \n The following example demonstrates how to construct a `CMFCAutoHideBar` object and use its `GetDockSiteRow` method.  \n  \n [!code-cpp[NVC_MFC_RibbonApp#26](../../mfc/reference/codesnippet/cpp/cmfcautohidebar-class_1.cpp)]  \n  \n## Inheritance Hierarchy  \n [CObject](../../mfc/reference/cobject-class.md)  \n  \n [CCmdTarget](../../mfc/reference/ccmdtarget-class.md)  \n  \n [CWnd](../../mfc/reference/cwnd-class.md)  \n  \n [CBasePane](../../mfc/reference/cbasepane-class.md)  \n  \n [CPane](../../mfc/reference/cpane-class.md)  \n  \n [CMFCAutoHideBar](../../mfc/reference/cmfcautohidebar-class.md)  \n  \n## Requirements  \n **Header:** afxautohidebar.h  \n  \n##  <a name=\"cmfcautohidebar__addautohidewindow\"></a>  CMFCAutoHideBar::AddAutoHideWindow  \n Adds functionality to a `CDockablePane` window that enables it to auto-hide.  \n  \n```  \nCMFCAutoHideButton* AddAutoHideWindow(\n    CDockablePane* pAutoHideWnd,  \n    DWORD dwAlignment);\n```  \n  \n### Parameters  \n [in] `pAutoHideWnd`  \n The window that you want to hide.  \n  \n [in] `dwAlignment`  \n A value that specifies the alignment of the auto-hide button with the application window.  \n  \n### Return Value  \n  \n### Remarks  \n The `dwAlignment` parameter indicates where the auto-hide button resides in the application. The parameter can be any one of the following values:  \n  \n- `CBRS_ALIGN_LEFT`  \n  \n- `CBRS_ALIGN_RIGHT`  \n  \n- `CBRS_ALIGN_TOP`  \n  \n- `CBRS_ALIGN_BOTTOM`  \n  \n##  <a name=\"cmfcautohidebar__allowshowonpanemenu\"></a>  CMFCAutoHideBar::AllowShowOnPaneMenu  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvirtual BOOL AllowShowOnPaneMenu() const;\n\n \n```  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cmfcautohidebar__calcfixedlayout\"></a>  CMFCAutoHideBar::CalcFixedLayout  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvirtual CSize CalcFixedLayout(\n    BOOL bStretch,  \n    BOOL bHorz);\n```  \n  \n### Parameters  \n [in] `bStretch`  \n [in] `bHorz`  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cmfcautohidebar__cmfcautohidebar\"></a>  CMFCAutoHideBar::CMFCAutoHideBar  \n Constructs a CMFCAutoHideBar object.  \n  \n```  \nCMFCAutoHideBar();\n```  \n  \n### Remarks  \n  \n##  <a name=\"cmfcautohidebar__create\"></a>  CMFCAutoHideBar::Create  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvirtual BOOL Create(\n    LPCTSTR lpszClassName,  \n    DWORD dwStyle,  \n    const RECT& rect,  \n    CWnd* pParentWnd,  \n    UINT nID,  \n    DWORD dwControlBarStyle = AFX_DEFAULT_PANE_STYLE,  \n    CCreateContext* pContext = NULL);\n```  \n  \n### Parameters  \n [in] `lpszClassName`  \n [in] `dwStyle`  \n [in] `rect`  \n [in] `pParentWnd`  \n [in] `nID`  \n [in] `dwControlBarStyle`  \n [in] `pContext`  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cmfcautohidebar__getfirstahwindow\"></a>  CMFCAutoHideBar::GetFirstAHWindow  \n Returns a pointer to the first auto-hide window in the application.  \n  \n```  \nCDockablePane* GetFirstAHWindow();\n```  \n  \n### Return Value  \n The first auto-hide window in the application, or NULL if there isn't one.  \n  \n### Remarks  \n  \n##  <a name=\"cmfcautohidebar__getvisiblecount\"></a>  CMFCAutoHideBar::GetVisibleCount  \n Gets the number of visible auto-hide buttons.  \n  \n```  \nint GetVisibleCount();\n```  \n  \n### Return Value  \n Returns the number of visible auto-hide buttons.  \n  \n### Remarks  \n  \n##  <a name=\"cmfcautohidebar__m_nshowahwnddelay\"></a>  CMFCAutoHideBar::m_nShowAHWndDelay  \n The time delay between the moment when the user places the mouse cursor over a [CMFCAutoHideButton Class](../../mfc/reference/cmfcautohidebutton-class.md) and the moment when the framework shows the associated window.  \n  \n```  \nint CMFCAutoHideBar::m_nShowAHWndDelay = 400;  \n```  \n  \n### Remarks  \n When the user places the mouse cursor over a `CMFCAutoHideButton`, there is a slight delay before the framework displays the associated window. This parameter determines the length of that delay in milliseconds.  \n  \n##  <a name=\"cmfcautohidebar__onshowcontrolbarmenu\"></a>  CMFCAutoHideBar::OnShowControlBarMenu  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvirtual BOOL OnShowControlBarMenu(CPoint);\n```  \n  \n### Parameters  \n [in] `CPoint`  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cmfcautohidebar__removeautohidewindow\"></a>  CMFCAutoHideBar::RemoveAutoHideWindow  \n Removes and destroys the auto-hide window.  \n  \n```  \n    BOOL RemoveAutoHideWindow(\n            CDockablePane* pAutoHideWnd);\n```  \n  \n### Parameters  \n CDockablePane* `pAutoHideWnd`  \n The auto-hide window to remove.  \n  \n### Return Value  \n TRUE if successful; otherwise FALSE.  \n  \n### Remarks  \n  \n##  <a name=\"cmfcautohidebar__setactiveingroup\"></a>  CMFCAutoHideBar::SetActiveInGroup  \n Flags an auto-hide bar as active.  \n  \n```  \nvirtual void SetActiveInGroup(\n            BOOL bActive);\n\n \n```  \n  \n### Parameters  \n [in] BOOL `bActive`  \n TRUE to set to active; otherwise FALSE.  \n  \n### Remarks  \n See [CPane::SetActiveInGroup](../../mfc/reference/cpane-class.md#cpane__setactiveingroup).  \n  \n##  <a name=\"cmfcautohidebar__setrecentvisiblestate\"></a>  CMFCAutoHideBar::SetRecentVisibleState  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvoid SetRecentVisibleState(BOOL bState);\n```  \n  \n### Parameters  \n [in] `bState`  \n  \n### Remarks  \n  \n##  <a name=\"cmfcautohidebar__showautohidewindow\"></a>  CMFCAutoHideBar::ShowAutoHideWindow  \n Shows the auto-hide window.  \n  \n```  \nBOOL ShowAutoHideWindow(\n        CDockablePane* pAutoHideWnd,  \n        BOOL bShow,  \n        BOOL bDelay);\n\n \n```  \n  \n### Parameters  \n [in] CDockablePane* `pAutoHideWnd`  \n [in] BOOL `bShow`  \n TRUE to show the window.  \n  \n [in] BOOL `bDelay`  \n This parameter is ignored.  \n  \n### Return Value  \n TRUE if successful; otherwise FALSE.  \n  \n### Remarks  \n  \n##  <a name=\"cmfcautohidebar__stretchpane\"></a>  CMFCAutoHideBar::StretchPane  \n Resizes the auto-hide bar in its collapsed state to fit the `CMFCAutoHideButton` object.  \n  \n```  \nvirtual CSize StretchPane(\n    int nLength,   \n    BOOL bVert);\n```  \n  \n### Parameters  \n [in] `nLength`  \n The value is unused in the base implementation. In derived implementations, use this value to indicate the length of the resized pane.  \n  \n [in] `bVert`  \n The value is unused in the base implementation. In derived implementations, use `TRUE` to handle the case where the auto-hide bar is collapsed vertically, and `FALSE` for the case where the auto-hide bar is collapsed horizontally.  \n  \n### Return Value  \n The resulting size of the resized pane.  \n  \n### Remarks  \n Derived classes can override this method to customize the behavior.  \n  \n##  <a name=\"cmfcautohidebar__unsetautohidemode\"></a>  CMFCAutoHideBar::UnSetAutoHideMode  \n Disables auto-hide mode for a group of auto-hide bars.  \n  \n```  \nvoid UnSetAutoHideMode(CDockablePane* pFirstBarInGroup)  \n```  \n  \n### Parameters  \n [in] pFirstBarInGroup  \n A pointer to the first auto-hide bar in the group.  \n  \n### Remarks  \n  \n##  <a name=\"cmfcautohidebar__updatevisiblestate\"></a>  CMFCAutoHideBar::UpdateVisibleState  \n Called by the framework when the auto-hide bar needs to be redrawn.  \n  \n```  \nvoid UpdateVisibleState();\n```  \n  \n### Remarks  \n  \n## See Also  \n [Hierarchy Chart](../../mfc/hierarchy-chart.md)   \n [Classes](../../mfc/reference/mfc-classes.md)   \n [CPane Class](../../mfc/reference/cpane-class.md)   \n [CAutoHideDockSite Class](../../mfc/reference/cautohidedocksite-class.md)   \n [CMFCAutoHideButton Class](../../mfc/reference/cmfcautohidebutton-class.md)\n"}