{"nodes":[{"pos":[12,41],"content":"orm_2 Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"orm_2 Class | Microsoft Docs","pos":[0,28]}]},{"content":"norm_2 Class","pos":[2068,2080]},{"content":"Represents a short vector of two normal numbers.","pos":[2081,2129]},{"content":"Syntax","pos":[2138,2144]},{"content":"Members","pos":[2184,2191]},{"content":"Public Typedefs","pos":[2201,2216]},{"content":"Name","pos":[2223,2227]},{"content":"Description","pos":[2228,2239]},{"content":"Public Constructors","pos":[2301,2320]},{"content":"Name","pos":[2327,2331]},{"content":"Description","pos":[2332,2343]},{"content":"norm_2::norm_2 Constructor","pos":[2382,2408]},{"content":"Overloaded.","pos":[2417,2428]},{"content":"Default constructor, initializes all elements with 0.","pos":[2429,2482]},{"content":"Public Methods","pos":[2493,2507]},{"content":"Name","pos":[2514,2518]},{"content":"Description","pos":[2519,2530]},{"content":"norm_2::get_x Method","pos":[2568,2588]},{"content":"norm_2::get_xy Method","pos":[2594,2615]},{"content":"norm_2::get_y Method","pos":[2621,2641]},{"content":"norm_2::get_yx Method","pos":[2647,2668]},{"content":"norm_2::ref_g Method","pos":[2674,2694]},{"content":"norm_2::ref_r Method","pos":[2700,2720]},{"content":"norm_2::ref_x Method","pos":[2726,2746]},{"content":"norm_2::ref_y Method","pos":[2752,2772]},{"content":"norm_2::set_x Method","pos":[2778,2798]},{"content":"norm_2::set_xy Method","pos":[2804,2825]},{"content":"norm_2::set_y Method","pos":[2831,2851]},{"content":"norm_2::set_yx Method","pos":[2857,2878]},{"content":"Public Operators","pos":[2890,2906]},{"content":"Name","pos":[2913,2917]},{"content":"Description","pos":[2918,2929]},{"content":"norm_2::operator- Operator","pos":[2967,2993]},{"content":"norm_2::operator-- Operator","pos":[2999,3026]},{"content":"norm_2::operator*= Operator","pos":[3032,3059]},{"content":"norm_2::operator/= Operator","pos":[3065,3092]},{"content":"norm_2::operator++ Operator","pos":[3098,3125]},{"content":"norm_2::operator+= Operator","pos":[3131,3158]},{"content":"norm_2::operator= Operator","pos":[3164,3190]},{"content":"norm_2::operator-= Operator","pos":[3196,3223]},{"content":"Public Constants","pos":[3235,3251]},{"content":"Name","pos":[3258,3262]},{"content":"Description","pos":[3263,3274]},{"content":"norm_2::size Constant","pos":[3313,3334]},{"content":"Public Data Members","pos":[3362,3381]},{"content":"Name","pos":[3388,3392]},{"content":"Description","pos":[3393,3404]},{"content":"norm_2::g Data Member","pos":[3442,3463]},{"content":"norm_2::gr Data Member","pos":[3469,3491]},{"content":"norm_2::r Data Member","pos":[3497,3518]},{"content":"norm_2::rg Data Member","pos":[3524,3546]},{"content":"norm_2::x Data Member","pos":[3552,3573]},{"content":"norm_2::xy Data Member","pos":[3579,3601]},{"content":"norm_2::y Data Member","pos":[3607,3628]},{"content":"norm_2::yx Data Member","pos":[3634,3656]},{"content":"Inheritance Hierarchy","pos":[3667,3688]},{"content":"Requirements","pos":[3709,3721]},{"pos":[3725,3756],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> amp_short_vectors.h","source":"**Header:** amp_short_vectors.h"},{"pos":[3763,3799],"content":"<bpt id=\"p1\">**</bpt>Namespace:<ept id=\"p1\">**</ept> Concurrency::graphics","source":"**Namespace:** Concurrency::graphics"},{"pos":[3830,3856],"content":"norm_2::norm_2 Constructor"},{"content":"Default constructor, initializes all elements with 0.","pos":[3860,3913]},{"content":"Parameters","pos":[4725,4735]},{"content":"The value to initialize element 0.","pos":[4748,4782]},{"content":"The value to initialize element 1.","pos":[4798,4832]},{"content":"The value for initialization.","pos":[4847,4876]},{"content":"The object used to initialize.","pos":[4895,4925]},{"pos":[4964,4985],"content":"norm_2::size Constant"},{"content":"See Also","pos":[5038,5046]},{"content":"Concurrency::graphics Namespace","pos":[5051,5082]}],"content":"---\ntitle: \"norm_2 Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"amp_short_vectors/Concurrency::graphics::norm_2::set_x\"\n  - \"amp_short_vectors/Concurrency::graphics::norm_2::set_xy\"\n  - \"amp_short_vectors/Concurrency::graphics::norm_2::g\"\n  - \"amp_short_vectors/Concurrency::graphics::norm_2::get_yx\"\n  - \"amp_short_vectors/Concurrency::graphics::norm_2::set_yx\"\n  - \"amp_short_vectors/Concurrency::graphics::norm_2::operator-=\"\n  - \"amp_short_vectors/Concurrency::graphics::norm_2::operator/=\"\n  - \"amp_short_vectors/Concurrency::graphics::norm_2::operator*=\"\n  - \"amp_short_vectors/Concurrency::graphics::norm_2::yx\"\n  - \"amp_short_vectors/Concurrency::graphics::norm_2::y\"\n  - \"amp_short_vectors/Concurrency::graphics::norm_2::xy\"\n  - \"amp_short_vectors/Concurrency::graphics::norm_2::operator++\"\n  - \"amp_short_vectors/Concurrency::graphics::norm_2::operator-\"\n  - \"amp_short_vectors/Concurrency::graphics::norm_2::rg\"\n  - \"amp_short_vectors/Concurrency::graphics::norm_2::operator=\"\n  - \"amp_short_vectors/Concurrency::graphics::norm_2::get_y\"\n  - \"amp_short_vectors/Concurrency::graphics::norm_2::r\"\n  - \"amp_short_vectors/Concurrency::graphics::norm_2::get_x\"\n  - \"amp_short_vectors/Concurrency::graphics::norm_2::get_xy\"\n  - \"amp_short_vectors/Concurrency::graphics::norm_2::gr\"\n  - \"amp_short_vectors/Concurrency::graphics::norm_2::set_y\"\n  - \"amp_short_vectors/Concurrency::graphics::norm_2::x\"\n  - \"amp_short_vectors/Concurrency::graphics::norm_2::operator+=\"\n  - \"amp_short_vectors/Concurrency::graphics::norm_2\"\n  - \"amp_short_vectors/Concurrency::graphics::norm_2::operator--\"\ndev_langs: \n  - \"C++\"\nms.assetid: 80703f9b-61f4-414a-93fd-bc774f7d3393\ncaps.latest.revision: 11\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# norm_2 Class\nRepresents a short vector of two normal numbers.  \n  \n## Syntax  \n  \n```  \nclass norm_2;  \n```  \n  \n## Members  \n  \n### Public Typedefs  \n  \n|Name|Description|  \n|----------|-----------------|  \n|`value_type`||  \n  \n### Public Constructors  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[norm_2::norm_2 Constructor](#ctor)|Overloaded. Default constructor, initializes all elements with 0.|  \n  \n### Public Methods  \n  \n|Name|Description|  \n|----------|-----------------|  \n|norm_2::get_x Method||  \n|norm_2::get_xy Method||  \n|norm_2::get_y Method||  \n|norm_2::get_yx Method||  \n|norm_2::ref_g Method||  \n|norm_2::ref_r Method||  \n|norm_2::ref_x Method||  \n|norm_2::ref_y Method||  \n|norm_2::set_x Method||  \n|norm_2::set_xy Method||  \n|norm_2::set_y Method||  \n|norm_2::set_yx Method||  \n  \n### Public Operators  \n  \n|Name|Description|  \n|----------|-----------------|  \n|norm_2::operator- Operator||  \n|norm_2::operator-- Operator||  \n|norm_2::operator*= Operator||  \n|norm_2::operator/= Operator||  \n|norm_2::operator++ Operator||  \n|norm_2::operator+= Operator||  \n|norm_2::operator= Operator||  \n|norm_2::operator-= Operator||  \n  \n### Public Constants  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[norm_2::size Constant](#norm_2__size)||  \n  \n### Public Data Members  \n  \n|Name|Description|  \n|----------|-----------------|  \n|norm_2::g Data Member||  \n|norm_2::gr Data Member||  \n|norm_2::r Data Member||  \n|norm_2::rg Data Member||  \n|norm_2::x Data Member||  \n|norm_2::xy Data Member||  \n|norm_2::y Data Member||  \n|norm_2::yx Data Member||  \n  \n## Inheritance Hierarchy  \n `norm_2`  \n  \n## Requirements  \n **Header:** amp_short_vectors.h  \n  \n **Namespace:** Concurrency::graphics  \n  \n##  <a name=\"ctor\"></a>  norm_2::norm_2 Constructor  \n Default constructor, initializes all elements with 0.  \n  \n```  \nnorm_2() restrict(amp,\n    cpu);\n\n \nnorm_2(\n    norm _V0,  \n    norm _V1) restrict(amp,\n    cpu);\n\n \nnorm_2(\n    float _V0,  \n    float _V1) restrict(amp,\n    cpu);\n\n \nnorm_2(\n    unorm _V0,  \n    unorm _V1) restrict(amp,\n    cpu);\n\n \nnorm_2(\n    norm _V) restrict(amp,\n    cpu);\n\n \nexplicit norm_2(\n    float _V) restrict(amp,\n    cpu);\n\n \nnorm_2(\n    const norm_2& _Other) restrict(amp,\n    cpu);\n\n \nexplicit inline norm_2(\n    const uint_2& _Other) restrict(amp,\n    cpu);\n\n \nexplicit inline norm_2(\n    const int_2& _Other) restrict(amp,\n    cpu);\n\n \nexplicit inline norm_2(\n    const float_2& _Other) restrict(amp,\n    cpu);\n\n \nexplicit inline norm_2(\n    const unorm_2& _Other) restrict(amp,\n    cpu);\n\n \nexplicit inline norm_2(\n    const double_2& _Other) restrict(amp,\n    cpu);\n```  \n  \n### Parameters  \n `_V0`  \n The value to initialize element 0.  \n  \n `_V1`  \n The value to initialize element 1.  \n  \n `_V`  \n The value for initialization.  \n  \n `_Other`  \n The object used to initialize.  \n  \n##  <a name=\"norm_2__size\"></a>  norm_2::size Constant  \n  \n```  \nstatic const int size = 2;  \n```  \n  \n## See Also  \n [Concurrency::graphics Namespace](concurrency-graphics-namespace.md)\n"}