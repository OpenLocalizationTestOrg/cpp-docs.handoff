{"nodes":[{"pos":[12,47],"content":"CAutoPtrList Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"CAutoPtrList Class | Microsoft Docs","pos":[0,35]}]},{"pos":[710,728],"content":"CAutoPtrList Class","linkify":"CAutoPtrList Class","nodes":[{"content":"CAutoPtrList Class","pos":[0,18]}]},{"content":"This class provides methods useful when constructing a list of smart pointers.","pos":[729,807]},{"pos":[815,925],"content":"[!IMPORTANT]\n This class and its members cannot be used in applications that execute in the Windows Runtime.","leadings":["","> "],"nodes":[{"content":"This class and its members cannot be used in applications that execute in the Windows Runtime.","pos":[14,108]}]},{"pos":[934,940],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[1073,1083],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"The pointer type.","pos":[1094,1111]},{"pos":[1120,1127],"content":"Members","linkify":"Members","nodes":[{"content":"Members","pos":[0,7]}]},{"pos":[1137,1156],"content":"Public Constructors","linkify":"Public Constructors","nodes":[{"content":"Public Constructors","pos":[0,19]}]},{"content":"Name","pos":[1163,1167]},{"content":"Description","pos":[1168,1179]},{"pos":[1217,1274],"content":"<bpt id=\"p1\">[</bpt>CAutoPtrList::CAutoPtrList<ept id=\"p1\">](#cautoptrlist__cautoptrlist)</ept>","source":"[CAutoPtrList::CAutoPtrList](#cautoptrlist__cautoptrlist)"},{"content":"The constructor.","pos":[1275,1291]},{"pos":[1301,1308],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This class provides a constructor and derives methods from <bpt id=\"p1\">[</bpt>CAtlList<ept id=\"p1\">](../../atl/reference/catllist-class.md)</ept> and <bpt id=\"p2\">[</bpt>CAutoPtrElementTraits<ept id=\"p2\">](../../atl/reference/cautoptrelementtraits-class.md)</ept> to aid the creation of a list object storing smart pointers.","pos":[1312,1561],"source":"This class provides a constructor and derives methods from [CAtlList](../../atl/reference/catllist-class.md) and [CAutoPtrElementTraits](../../atl/reference/cautoptrelementtraits-class.md) to aid the creation of a list object storing smart pointers."},{"content":"The class <bpt id=\"p1\">[</bpt>CAutoPtrArray<ept id=\"p1\">](../../atl/reference/cautoptrarray-class.md)</ept> provides a similar function for an array object.","pos":[1562,1680],"source":" The class [CAutoPtrArray](../../atl/reference/cautoptrarray-class.md) provides a similar function for an array object."},{"pos":[1687,1775],"content":"For more information, see <bpt id=\"p1\">[</bpt>ATL Collection Classes<ept id=\"p1\">](../../atl/atl-collection-classes.md)</ept>.","source":"For more information, see [ATL Collection Classes](../../atl/atl-collection-classes.md)."},{"pos":[1784,1805],"content":"Inheritance Hierarchy","linkify":"Inheritance Hierarchy","nodes":[{"content":"Inheritance Hierarchy","pos":[0,21]}]},{"pos":[1809,1858],"content":"<bpt id=\"p1\">[</bpt>CAtlList<ept id=\"p1\">](../../atl/reference/catllist-class.md)</ept>","source":"[CAtlList](../../atl/reference/catllist-class.md)"},{"pos":[1888,1900],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[1904,1925],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> atlcoll.h","source":"**Header:** atlcoll.h"},{"pos":[1935,2004],"content":"<bpt id=\"p1\">&lt;a name=\"cautoptrlist__cautoptrlist\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CAutoPtrList::CAutoPtrList","linkify":"<a name=\"cautoptrlist__cautoptrlist\"></a>  CAutoPtrList::CAutoPtrList","source":"<a name=\"cautoptrlist__cautoptrlist\"></a>  CAutoPtrList::CAutoPtrList"},{"content":"The constructor.","pos":[2008,2024]},{"pos":[2091,2101],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"The block size, with a default of 10.","pos":[2121,2158]},{"pos":[2168,2175],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The block size is a measure of the amount of memory allocated when a new element is required.","pos":[2179,2272]},{"content":"Larger block sizes reduce calls to memory allocation routines, but use more resources.","pos":[2273,2359]},{"pos":[2368,2376],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>CAtlList Class<ept id=\"p1\">](../../atl/reference/catllist-class.md)</ept><ph id=\"ph1\"> </ph>","pos":[2380,2436],"source":"[CAtlList Class](../../atl/reference/catllist-class.md) "},{"content":"<bpt id=\"p1\"> [</bpt>CAutoPtrElementTraits Class<ept id=\"p1\">](../../atl/reference/cautoptrelementtraits-class.md)</ept><ph id=\"ph1\"> </ph>","pos":[2439,2522],"source":" [CAutoPtrElementTraits Class](../../atl/reference/cautoptrelementtraits-class.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Class Overview<ept id=\"p1\">](../../atl/atl-class-overview.md)</ept>","pos":[2525,2575],"source":" [Class Overview](../../atl/atl-class-overview.md)"}],"content":"---\ntitle: \"CAutoPtrList Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"ATL::CAutoPtrList\"\n  - \"CAutoPtrList\"\n  - \"ATL.CAutoPtrList\"\n  - \"ATL::CAutoPtrList<E>\"\n  - \"ATL.CAutoPtrList<E>\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"CAutoPtrList class\"\nms.assetid: 11de4aca-28b0-4ff2-a74a-cb602312ffbd\ncaps.latest.revision: 20\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# CAutoPtrList Class\nThis class provides methods useful when constructing a list of smart pointers.  \n  \n> [!IMPORTANT]\n>  This class and its members cannot be used in applications that execute in the Windows Runtime.  \n  \n## Syntax  \n  \n```\ntemplate<typename E>  class CAutoPtrList : public CAtlList<\n    ATL::CAutoPtr<E>,\n CAutoPtrElementTraits<E>>\n```  \n  \n#### Parameters  \n `E`  \n The pointer type.  \n  \n## Members  \n  \n### Public Constructors  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CAutoPtrList::CAutoPtrList](#cautoptrlist__cautoptrlist)|The constructor.|  \n  \n## Remarks  \n This class provides a constructor and derives methods from [CAtlList](../../atl/reference/catllist-class.md) and [CAutoPtrElementTraits](../../atl/reference/cautoptrelementtraits-class.md) to aid the creation of a list object storing smart pointers. The class [CAutoPtrArray](../../atl/reference/cautoptrarray-class.md) provides a similar function for an array object.  \n  \n For more information, see [ATL Collection Classes](../../atl/atl-collection-classes.md).  \n  \n## Inheritance Hierarchy  \n [CAtlList](../../atl/reference/catllist-class.md)  \n  \n `CAutoPtrList`  \n  \n## Requirements  \n **Header:** atlcoll.h  \n  \n##  <a name=\"cautoptrlist__cautoptrlist\"></a>  CAutoPtrList::CAutoPtrList  \n The constructor.  \n  \n```\nCAutoPtrList(UINT nBlockSize = 10) throw();\n```  \n  \n### Parameters  \n `nBlockSize`  \n The block size, with a default of 10.  \n  \n### Remarks  \n The block size is a measure of the amount of memory allocated when a new element is required. Larger block sizes reduce calls to memory allocation routines, but use more resources.  \n  \n## See Also  \n [CAtlList Class](../../atl/reference/catllist-class.md)   \n [CAutoPtrElementTraits Class](../../atl/reference/cautoptrelementtraits-class.md)   \n [Class Overview](../../atl/atl-class-overview.md)\n"}