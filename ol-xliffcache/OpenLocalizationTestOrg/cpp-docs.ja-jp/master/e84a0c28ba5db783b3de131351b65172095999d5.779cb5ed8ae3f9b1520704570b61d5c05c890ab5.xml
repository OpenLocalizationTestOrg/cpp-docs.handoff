{"nodes":[{"pos":[12,46],"content":"OpenMP Directives | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"OpenMP Directives | Microsoft Docs","pos":[0,34]}]},{"pos":[526,543],"content":"OpenMP Directives","linkify":"OpenMP Directives","nodes":[{"content":"OpenMP Directives","pos":[0,17]}]},{"content":"Provides links to directives used in the OpenMP API.","pos":[544,596]},{"content":"Visual C++ supports the following OpenMP directives:","pos":[603,655]},{"content":"Directive","pos":[662,671]},{"content":"Description","pos":[672,683]},{"pos":[726,780],"content":"<bpt id=\"p1\">[</bpt>atomic<ept id=\"p1\">](../../../parallel/openmp/reference/atomic.md)</ept>","source":"[atomic](../../../parallel/openmp/reference/atomic.md)"},{"content":"Specifies that a memory location that will be updated atomically.","pos":[781,846]},{"pos":[851,907],"content":"<bpt id=\"p1\">[</bpt>barrier<ept id=\"p1\">](../../../parallel/openmp/reference/barrier.md)</ept>","source":"[barrier](../../../parallel/openmp/reference/barrier.md)"},{"content":"Synchronizes all threads in a team; all threads pause at the barrier, until all threads execute the barrier.","pos":[908,1016]},{"pos":[1021,1079],"content":"<bpt id=\"p1\">[</bpt>critical<ept id=\"p1\">](../../../parallel/openmp/reference/critical.md)</ept>","source":"[critical](../../../parallel/openmp/reference/critical.md)"},{"content":"Specifies that code is only executed on one thread at a time.","pos":[1080,1141]},{"pos":[1146,1205],"content":"<bpt id=\"p1\">[</bpt>flush<ept id=\"p1\">](../../../parallel/openmp/reference/flush-openmp.md)</ept>","source":"[flush](../../../parallel/openmp/reference/flush-openmp.md)"},{"content":"Specifies that all threads have the same view of memory for all shared objects.","pos":[1206,1285]},{"pos":[1290,1345],"content":"<bpt id=\"p1\">[</bpt>for<ept id=\"p1\">](../../../parallel/openmp/reference/for-openmp.md)</ept>","source":"[for](../../../parallel/openmp/reference/for-openmp.md)"},{"content":"Causes the work done in a for loop inside a parallel region to be divided among threads.","pos":[1346,1434]},{"pos":[1439,1493],"content":"<bpt id=\"p1\">[</bpt>master<ept id=\"p1\">](../../../parallel/openmp/reference/master.md)</ept>","source":"[master](../../../parallel/openmp/reference/master.md)"},{"content":"Specifies that only the master threadshould execute a section of the program.","pos":[1494,1571]},{"pos":[1576,1650],"content":"<bpt id=\"p1\">[</bpt>ordered<ept id=\"p1\">](../../../parallel/openmp/reference/ordered-openmp-directives.md)</ept>","source":"[ordered](../../../parallel/openmp/reference/ordered-openmp-directives.md)"},{"content":"Specifies that code under a parallelized for loop should be executed like a sequential loop.","pos":[1651,1743]},{"pos":[1748,1806],"content":"<bpt id=\"p1\">[</bpt>parallel<ept id=\"p1\">](../../../parallel/openmp/reference/parallel.md)</ept>","source":"[parallel](../../../parallel/openmp/reference/parallel.md)"},{"content":"Defines a parallel region, which is code that will be executed by multiple threads in parallel.","pos":[1807,1902]},{"pos":[1907,1972],"content":"<bpt id=\"p1\">[</bpt>sections<ept id=\"p1\">](../../../parallel/openmp/reference/sections-openmp.md)</ept>","source":"[sections](../../../parallel/openmp/reference/sections-openmp.md)"},{"content":"Identifies code sections to be divided among all threads.","pos":[1973,2030]},{"pos":[2035,2089],"content":"<bpt id=\"p1\">[</bpt>single<ept id=\"p1\">](../../../parallel/openmp/reference/single.md)</ept>","source":"[single](../../../parallel/openmp/reference/single.md)"},{"content":"Lets you specify that a section of code should be executed on a single thread, not necessarily the master thread.","pos":[2090,2203]},{"pos":[2208,2276],"content":"<bpt id=\"p1\">[</bpt>threadprivate<ept id=\"p1\">](../../../parallel/openmp/reference/threadprivate.md)</ept>","source":"[threadprivate](../../../parallel/openmp/reference/threadprivate.md)"},{"content":"Specifies that a variable is private to a thread.","pos":[2277,2326]},{"pos":[2336,2344],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>OpenMP<ept id=\"p1\">](../../../parallel/openmp/openmp-in-visual-cpp.md)</ept><ph id=\"ph1\"> </ph>","pos":[2348,2407],"source":"[OpenMP](../../../parallel/openmp/openmp-in-visual-cpp.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Clauses<ept id=\"p1\">](../../../parallel/openmp/reference/openmp-clauses.md)</ept>","pos":[2410,2474],"source":" [Clauses](../../../parallel/openmp/reference/openmp-clauses.md)"}],"content":"---\ntitle: \"OpenMP Directives | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"C++\"\nms.assetid: 0562c263-344c-466d-843e-de830d918940\ncaps.latest.revision: 7\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# OpenMP Directives\nProvides links to directives used in the OpenMP API.  \n  \n Visual C++ supports the following OpenMP directives:  \n  \n|Directive|Description|  \n|---------------|-----------------|  \n|[atomic](../../../parallel/openmp/reference/atomic.md)|Specifies that a memory location that will be updated atomically.|  \n|[barrier](../../../parallel/openmp/reference/barrier.md)|Synchronizes all threads in a team; all threads pause at the barrier, until all threads execute the barrier.|  \n|[critical](../../../parallel/openmp/reference/critical.md)|Specifies that code is only executed on one thread at a time.|  \n|[flush](../../../parallel/openmp/reference/flush-openmp.md)|Specifies that all threads have the same view of memory for all shared objects.|  \n|[for](../../../parallel/openmp/reference/for-openmp.md)|Causes the work done in a for loop inside a parallel region to be divided among threads.|  \n|[master](../../../parallel/openmp/reference/master.md)|Specifies that only the master threadshould execute a section of the program.|  \n|[ordered](../../../parallel/openmp/reference/ordered-openmp-directives.md)|Specifies that code under a parallelized for loop should be executed like a sequential loop.|  \n|[parallel](../../../parallel/openmp/reference/parallel.md)|Defines a parallel region, which is code that will be executed by multiple threads in parallel.|  \n|[sections](../../../parallel/openmp/reference/sections-openmp.md)|Identifies code sections to be divided among all threads.|  \n|[single](../../../parallel/openmp/reference/single.md)|Lets you specify that a section of code should be executed on a single thread, not necessarily the master thread.|  \n|[threadprivate](../../../parallel/openmp/reference/threadprivate.md)|Specifies that a variable is private to a thread.|  \n  \n## See Also  \n [OpenMP](../../../parallel/openmp/openmp-in-visual-cpp.md)   \n [Clauses](../../../parallel/openmp/reference/openmp-clauses.md)"}