<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-787e512" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">54eb9561d574555b02b33a25b87318587def5cd3</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\c-runtime-library\crt-library-features.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">96bee5fe3d82645049a49eb01691c74b2c0da949</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a1ae6e9ecb697272726990720927733bdf3546dc</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>CRT Library Features | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>CRT Library Features</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This topic discusses the various .lib files that comprise the C run-time libraries as well as their associated compiler options and preprocessor directives.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>C Run-Time Libraries (CRT)</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The C Run-time Library (CRT) is the part of the C++ Standard Library that incorporates the ISO C99 standard library.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The Visual C++ libraries that implement the CRT support native code development, and both mixed native and managed code, and pure managed code for .NET development.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>All versions of the CRT support multi-threaded development.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Most of the libraries support both static linking, to link the library directly into your code, or dynamic linking to let your code use common DLL files.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>In Visual Studio 2015, the CRT has been refactored into new binaries.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The Universal CRT (UCRT) contains the functions and globals exported by the standard C99 CRT library.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The UCRT is now a Windows component, and ships as part of Windows 10.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The static library, DLL import library, and header files for the UCRT are now found in the Windows 10 SDK.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>When you install Visual C++, Visual Studio setup installs the subset of the Windows 10 SDK required to use the UCRT.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>You can use the UCRT on any version of Windows supported by Visual Studio 2015.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>You can redistribute it using vcredist for supported versions of Windows other than Windows 10.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Redistributing Visual C++ Files<ept id="p1">](../ide/redistributing-visual-cpp-files.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The following table lists the libraries that implement the UCRT.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Library</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Associated DLL</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Characteristics</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Option</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Preprocessor directives</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>libucrt.lib</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>None</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Statically links the UCRT into your code.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>/MT</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>_MT</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>libucrtd.lib</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>None</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Debug version of the UCRT for static linking.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Not redistributable.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>/MTd</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>_DEBUG, _MT</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>ucrt.lib</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>ucrtbase.dll</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>DLL import library for the UCRT.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>/MD</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>_MT, _DLL</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>ucrtd.lib</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>ucrtbased.dll</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>DLL import library for the Debug version of the UCRT.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Not redistributable.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>/MDd</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>_DEBUG, _MT, _DLL</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The vcruntime library contains Visual C++ CRT implementation-specific code, such as exception handling and debugging support, runtime checks and type information, implementation details and certain extended library functions.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>This library is specific to the version of the compiler used.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>This table lists the libraries that implement the vcruntime library.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Library</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Associated DLL</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Characteristics</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Option</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Preprocessor directives</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>libvcruntime.lib</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>None</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Statically linked into your code.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>/MT</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>_MT</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>libvcruntimed.lib</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>None</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Debug version for static linking.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Not redistributable.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>/MTd</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>_MT, _DEBUG</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>vcruntime.lib</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>vcruntime<ph id="ph1">\&lt;</ph>version&gt;.dll</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>DLL import library for the vcruntime.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>/MD</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>_MT, _DLL</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>vcruntimed.lib</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>vcruntime<ph id="ph1">\&lt;</ph>version&gt;d.dll</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>DLL import library for the Debug vcruntime.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Not redistributable.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>/MDd</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>_DEBUG, _MT, _DLL</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The code that initializes the CRT is in one of several libraries, based on whether the CRT library is statically or dynamically linked, or native, managed, or mixed code.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>This code handles CRT startup, internal per-thread data initialization, and termination.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>It is specific to the version of the compiler used.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>This library is always statically linked, even when using a dynamically linked UCRT.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>This table lists the libraries that implement CRT initialization and termination.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Library</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Characteristics</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Option</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Preprocessor directives</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>libcmt.lib</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Statically links the native CRT startup into your code.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>/MT</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>_MT</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>libcmtd.lib</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Statically links the Debug version of the native CRT startup.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Not redistributable.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>/MTd</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>_DEBUG, _MT</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>msvcrt.lib</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Static library for the native CRT startup for use with DLL UCRT and vcruntime.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>/MD</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>_MT, _DLL</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>msvcrtd.lib</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Static library for the Debug version of the native CRT startup for use with DLL UCRT and vcruntime.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Not redistributable.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>/MDd</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>_DEBUG, _MT, _DLL</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>msvcmrt.lib</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Static library for the mixed native and managed CRT startup for use with DLL UCRT and vcruntime.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>/clr</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>msvcmrtd.lib</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Static library for the Debug version of the mixed native and managed CRT startup for use with DLL UCRT and vcruntime.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Not redistributable.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>/clr</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>msvcurt.lib</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Static library for the pure managed CRT.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>/clr:pure</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>msvcurtd.lib</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>Static library for the Debug version of the pure managed CRT.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Not redistributable.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>/clr:pure</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>If you link your program from the command line without a compiler option that specifies a C run-time library, the linker will usethe statically linked CRT libraries: libcmt.lib, libvcruntime.lib, and libucrt.lib.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Using the statically linked CRT implies that any state information saved by the C runtime library will be local to that instance of the CRT.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>For example, if you use <bpt id="p1">[</bpt>strtok, _strtok_l, wcstok, _wcstok_l, _mbstok, _mbstok_l<ept id="p1">](../c-runtime-library/reference/strtok-strtok-l-wcstok-wcstok-l-mbstok-mbstok-l.md)</ept> when using a statically linked CRT, the position of the <ph id="ph1">`strtok`</ph> parser is unrelated to the <ph id="ph2">`strtok`</ph> state used in code in the same process (but in a different DLL or EXE) that is linked to another instance of the static CRT.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>In contrast, the dynamically linked CRT shares state for all code within a process that is dynamically linked to the CRT.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>This concern does not apply if you use the new more secure versions of these functions; for example, <ph id="ph1">`strtok_s`</ph> does not have this problem.</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>Because a DLL built by linking to a static CRT will have its own CRT state, it is not recommended to link statically to the CRT in a DLL unless the consequences of this are specifically desired and understood.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>For example, if you call <bpt id="p1">[</bpt>_set_se_translator<ept id="p1">](../c-runtime-library/reference/set-se-translator.md)</ept> in an executable that loads the DLL linked to its own static CRT, any hardware exceptions generated by the code in the DLL will not be caught by the translator, but hardware exceptions generated by code in the main executable will be caught.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>If you are using the <bpt id="p1">**</bpt>/clr<ept id="p1">**</ept> compiler switch, your code will be linked with a static library, msvcmrt.lib.</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>The static library provides a proxy between your managed code and the native CRT.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>You cannot use the statically linked CRT ( <bpt id="p1">**</bpt>/MT<ept id="p1">**</ept> or <bpt id="p2">**</bpt>/MTd<ept id="p2">**</ept> options) with <bpt id="p3">**</bpt>/clr<ept id="p3">**</ept>.</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>Use the dynamically-linked libraries (<bpt id="p1">**</bpt>/MD<ept id="p1">**</ept> or <bpt id="p2">**</bpt>/MDd<ept id="p2">**</ept>) instead.</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>If you are using the <bpt id="p1">**</bpt>/clr:pure<ept id="p1">**</ept> compiler switch, your code will be linked with the static library msvcurt.lib.</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>As with <bpt id="p1">**</bpt>/clr<ept id="p1">**</ept>, you cannot link with the statically linked library.</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>For more information on using the CRT with <bpt id="p1">**</bpt>/clr<ept id="p1">**</ept>, see <bpt id="p2">[</bpt>Mixed (Native and Managed) Assemblies<ept id="p2">](../dotnet/mixed-native-and-managed-assemblies.md)</ept>; for <bpt id="p3">**</bpt>/clr:pure<ept id="p3">**</ept>, see <bpt id="p4">[</bpt>Pure and Verifiable Code (C++/CLI)<ept id="p4">](../dotnet/pure-and-verifiable-code-cpp-cli.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>To build a debug version of your application, the <bpt id="p1">[</bpt>_DEBUG<ept id="p1">](../c-runtime-library/debug.md)</ept> flag must be defined and the application must be linked with a debug version of one of these libraries.</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>For more information about using the debug versions of the library files, see <bpt id="p1">[</bpt>CRT Debugging Techniques<ept id="p1">](/visualstudio/debugger/crt-debugging-techniques)</ept>.</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>This version of the CRT is not fully conformant with the C99 standard.</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>In particular, the <ph id="ph1">\&lt;</ph>tgmath.h&gt; header and the CX_LIMITED_RANGE/FP_CONTRACT pragma macros are not supported.</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>Certain elements such as the meaning of parameter specifiers in standard IO functions use legacy interpretations by default.</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>You can use /Zc compiler conformance options and specify linker options to control some aspects of library conformance,</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>Standard C++ Library</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>Standard C++ Library</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>Characteristics</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>Option</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>Preprocessor directives</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>LIBCPMT.LIB</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>Multithreaded, static link</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>/MT</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>_MT</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>MSVCPRT.LIB</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>Multithreaded, dynamic link (import library for MSVCP<ph id="ph1">\&lt;</ph>version&gt;.dll)</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>/MD</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>_MT, _DLL</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>LIBCPMTD.LIB</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>Multithreaded, static link</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>/MTd</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>_DEBUG, _MT</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>MSVCPRTD.LIB</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>Multithreaded, dynamic link (import library for MSVCP<ph id="ph1">\&lt;</ph>version&gt;D.DLL)</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>/MDd</source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>_DEBUG, _MT, _DLL</source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>When you build a release version of your project, one of the basic C run-time libraries (LIBCMT.LIB, MSVCMRT.LIB, MSVCRT.LIB) is linked by default, depending on the compiler option you choose (multithreaded, DLL, /clr).</source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>If you include one of the <bpt id="p1">[</bpt>Header Files Reference<ept id="p1">](../standard-library/cpp-standard-library-header-files.md)</ept> in your code, a Standard C++ Library will be linked in automatically by <ph id="ph1">[!INCLUDE[vcprvc](../build/includes/vcprvc_md.md)]</ph> at compile time.</source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>For example:</source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>What problems exist if an application uses more than one CRT version?</source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>If you have more than one DLL or EXE, then you may have more than one CRT, whether or not you are using different versions of <ph id="ph1">[!INCLUDE[vcprvc](../build/includes/vcprvc_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>For example, statically linking the CRT into multiple DLLs can present the same problem.</source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>Developers encountering this problem with static CRTs have been instructed to compile with <bpt id="p1">**</bpt>/MD<ept id="p1">**</ept> to use the CRT DLL.</source>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>If your DLLs pass CRT resources across the DLL boundary, you may encounter issues with mismatched CRTs and need to recompile your project with Visual C++.</source>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>If your program is using more than one version of the CRT, some care is needed when passing certain CRT objects (such as file handles, locales and environment variables) across DLL boundaries.</source>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>For more information on the issues involved and how to resolve them, see <bpt id="p1">[</bpt>Potential Errors Passing CRT Objects Across DLL Boundaries<ept id="p1">](../c-runtime-library/potential-errors-passing-crt-objects-across-dll-boundaries.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>C Run-Time Library Reference</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>