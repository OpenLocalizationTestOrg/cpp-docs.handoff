{"nodes":[{"pos":[12,49],"content":"Compiler Error C2885 | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Compiler Error C2885 | Microsoft Docs","pos":[0,37]}]},{"content":"Compiler Error C2885","pos":[598,618]},{"content":"'class::identifier' : not a valid using-declaration at non-class scope","pos":[619,689]},{"pos":[696,771],"content":"You used a <bpt id=\"p1\">[</bpt>using<ept id=\"p1\">](../../cpp/using-declaration.md)</ept> declaration incorrectly.","source":"You used a [using](../../cpp/using-declaration.md) declaration incorrectly."},{"content":"Example","pos":[780,787]},{"pos":[791,1086],"content":"This error can be generated as a result of compiler conformance work that was done for Visual C++ 2005: it is no longer valid to have a <ph id=\"ph1\">`using`</ph> declaration to a nested type; you must explicitly qualify each reference you make to the nested type, put the type in a namespace, or create a typedef.","source":"This error can be generated as a result of compiler conformance work that was done for Visual C++ 2005: it is no longer valid to have a `using` declaration to a nested type; you must explicitly qualify each reference you make to the nested type, put the type in a namespace, or create a typedef."},{"content":"The following sample generates C2885.","pos":[1093,1130]},{"content":"Example","pos":[1490,1497]},{"pos":[1501,1631],"content":"If you use the <ph id=\"ph1\">`using`</ph> keyword with a class member, C++ requires you to define that member inside another class (a derived class).","source":"If you use the `using` keyword with a class member, C++ requires you to define that member inside another class (a derived class)."},{"content":"The following sample generates C2885.","pos":[1638,1675]}],"content":"---\ntitle: \"Compiler Error C2885 | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"error-reference\"\nf1_keywords: \n  - \"C2885\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"C2885\"\nms.assetid: 7743e5f3-a034-44b4-9ee8-5a6254c27f8c\ncaps.latest.revision: 14\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Compiler Error C2885\n'class::identifier' : not a valid using-declaration at non-class scope  \n  \n You used a [using](../../cpp/using-declaration.md) declaration incorrectly.  \n  \n## Example  \n This error can be generated as a result of compiler conformance work that was done for Visual C++ 2005: it is no longer valid to have a `using` declaration to a nested type; you must explicitly qualify each reference you make to the nested type, put the type in a namespace, or create a typedef.  \n  \n The following sample generates C2885.  \n  \n```  \n// C2885.cpp  \nnamespace MyNamespace {  \n   class X1 {};  \n}  \n  \nstruct MyStruct {  \n   struct X1 {  \n      int i;  \n   };  \n};  \n  \nint main () {  \n   using MyStruct::X1;   // C2885  \n  \n   // OK  \n   using MyNamespace::X1;  \n   X1 myX1;  \n  \n   MyStruct::X1 X12;  \n  \n   typedef MyStruct::X1 abc;  \n   abc X13;  \n   X13.i = 9;  \n}  \n```  \n  \n## Example  \n If you use the `using` keyword with a class member, C++ requires you to define that member inside another class (a derived class).  \n  \n The following sample generates C2885.  \n  \n```  \n// C2885_b.cpp  \n// compile with: /c  \nclass A {  \npublic:  \n   int i;  \n};  \n  \nvoid z() {  \n   using A::i;   // C2885 not in a class  \n}  \n  \nclass B : public A {  \npublic:  \n   using A::i;  \n};  \n```"}