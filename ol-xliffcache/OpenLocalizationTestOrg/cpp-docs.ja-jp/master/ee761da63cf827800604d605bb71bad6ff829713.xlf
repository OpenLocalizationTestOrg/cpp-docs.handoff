<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-04506c2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ee761da63cf827800604d605bb71bad6ff829713</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\error-messages\compiler-warnings\compiler-warnings-c4600-through-c4799.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9c6dabb9aad14dd5089cbf0a208e50150eb75b33</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7fdfd38d78e64fb2120e3c9b1d3fa885c893019e</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Compiler Warnings C4600 Through C4799 | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Compiler Warnings C4600 Through C4799</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The articles in this part of the documentation contain information about a subset of the Visual C++ compiler warnings.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>You can access the information here or, in the Output window in Visual Studio, you can select an error number and then press the F1 key.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>In This Section</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Warning</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Message</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Compiler Warning (level 1) C4600</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>pragma 'macro name': expected a valid non-empty string</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Compiler warning (level 1) C4602</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>pragma pop_macro: 'macro name' no previous #pragma push_macro for this identifier</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Compiler warning (level 1) C4603</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>'<ph id="ph1">\&lt;</ph>identifier&gt;': macro is not defined or definition is different after precompiled header use</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Compiler Warning (level 1) C4606</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>pragma warning: 'warning number' ignored; Code Analysis warnings are not associated with warning levels</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Compiler Warning (level 3) C4608</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>'union_member' has already been initialized by another union member in the initializer list, 'union_member'</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Compiler warning (level 3) C4609</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>'%$S' derives from default interface '%$S' on type '%$S'.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Use a different default interface for '%$S', or break the base/derived relationship.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Compiler Warning (level 4) C4610</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>object 'class' can never be instantiated - user defined constructor required</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Compiler Warning (level 4) C4611</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>interaction between 'function' and C++ object destruction is non-portable</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Compiler warning (level 1) C4612</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>error in include filename</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Compiler warning (level 1) C4613</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>'%$S': class of segment cannot be changed</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Compiler Warning (level 1) C4615</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>pragma warning: unknown user warning type</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Compiler Warning (level 1) C4616</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>pragma warning: warning number 'number' not a valid compiler warning</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Compiler Warning (level 1) C4618</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>pragma parameters included an empty string; pragma ignored</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Compiler Warning (level 3) C4619</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>pragma warning: there is no warning number 'number'</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Compiler warning (level 1) C4620</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>no postfix form of 'operator ++' found for type 'type', using prefix form</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Compiler Warning (level 1) C4621</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>no postfix form of 'operator --' found for type 'type', using prefix form</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Compiler warning (level 3) C4622</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>overwriting debug information formed during creation of the precompiled header in object file: 'file'</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Compiler Warning (level 4) C4623</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>'derived class': default constructor was implicitly defined as deleted because a base class default constructor is inaccessible or deleted</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Compiler Warning (level 1) C4624</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>'derived class': destructor was implicitly defined as deleted because a base class destructor is inaccessible or deleted</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Compiler Warning (level 4) C4625</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>'derived class': copy constructor was implicitly defined as deleted because a base class copy constructor is inaccessible or deleted</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Compiler Warning (level 4) C4626</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>'derived class': assignment operator was implicitly defined as deleted because a base class assignment operator is inaccessible or deleted</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Compiler Warning (level 1) C4627</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>'<ph id="ph1">\&lt;</ph>identifier&gt;': skipped when looking for precompiled header use</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Compiler Warning (level 1) C4628</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>digraphs not supported with -Ze.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Character sequence 'digraph' not interpreted as alternate token for '%s'</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Compiler warning (level 4) C4629</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>digraph used, character sequence 'digraph' interpreted as token 'char' (insert a space between the two characters if this is not what you intended)</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Compiler Warning (level 1) C4630</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>'symbol': 'extern' storage-class specifier illegal on member definition</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Compiler warning (level 2) C4631</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>MSXML or XPath unavailable, XML document comments will not be processed.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>reason</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Compiler Warning (level 1) C4632</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>XML document comment: file - access denied: reason</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Compiler Warning (level 3) C4633</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>XML document comment target: error: reason</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Compiler warning (level 4) C4634</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>XML document comment target: cannot be applied: reason</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Compiler warning (level 3) C4635</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>XML document comment target: badly-formed XML: reason</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Compiler warning (level 3) C4636</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>XML document comment applied to construct: tag requires non-empty 'attribute' attribute.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Compiler warning (level 3 and level 4) C4637</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>XML document comment target: <ph id="ph1">\&lt;</ph>include&gt; tag discarded.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Reason</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Compiler warning (level 3) C4638</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>XML document comment target: reference to unknown symbol 'symbol'.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Compiler Warning (level 4) C4639</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>MSXML error, XML document comments will not be processed.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Reason</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Compiler Warning (level 3) C4640</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>'instance': construction of local static object is not thread-safe</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Compiler Warning (level 3) C4641</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>XML document comment has an ambiguous cross reference:</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Compiler warning (level 3) C4645</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>function declared with __declspec(noreturn) has a return statement</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Compiler warning (level 3) C4646</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>function declared with __declspec(noreturn) has non-void return type</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Compiler Warning (level 1) C4650</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>debugging information not in precompiled header; only global symbols from the header will be available</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Compiler Warning (level 1) C4651</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>'definition' specified for precompiled header but not for current compile</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Compiler Warning (level 1) C4652</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>compiler option 'option' inconsistent with precompiled header; current command-line option will override that defined in the precompiled header</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Compiler Warning (level 2) C4653</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>compiler option 'option' inconsistent with precompiled header; current command-line option ignored</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Compiler warning (level 1) C4655</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>'symbol': variable type is new since the latest build, or is defined differently elsewhere</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Compiler Warning (level 1) C4656</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>'symbol': data type is new or has changed since the latest build, or is defined differently elsewhere</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Compiler warning (level 1) C4657</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>expression involves a data type that is new since the latest build</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Compiler warning (level 1) C4658</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>'function': function prototype is new since the latest build, or is declared differently elsewhere</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Compiler Warning (level 1) C4659</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>pragma 'pragma': use of reserved segment 'segment' has undefined behavior, use #pragma comment(linker, ...)</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Compiler Warning (level 1) C4661</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>'identifier': no suitable definition provided for explicit template instantiation request</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Compiler warning (level 1) C4662</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>explicit instantiation; template-class 'identifier1' has no definition from which to specialize 'identifier2'</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Compiler Warning (level 1) C4667</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>'function': no function template defined that matches forced instantiation</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>Compiler Warning (level 4) C4668</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>'symbol' is not defined as a preprocessor macro, replacing with '0' for 'directive'</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Compiler Warning (level 1) C4669</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>'cast': unsafe conversion: 'class' is a managed type object</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Compiler warning (level 4) C4670</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>'identifier': this base class is inaccessible</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>Compiler warning (level 4) C4671</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>'identifier': the copy constructor is inaccessible</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>Compiler warning (level 4) C4672</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>'identifier1': ambiguous.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>First seen as 'identifier2'</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Compiler Warning (level 4) C4673</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>throwing 'identifier' the following types will not be considered at the catch site</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>Compiler warning (level 1) C4674</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>'method' should be declared 'static' and have exactly one parameter</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>Compiler warning (level 4) C4676</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>'%s': the destructor is inaccessible</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>Compiler Warning (level 1) C4677</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>'function': signature of non-private member contains assembly private type 'private_type'</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>Compiler warning (level 1) C4678</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>base class 'base_type' is less accessible than 'derived_type'</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>Compiler Warning (level 1) C4679</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>'member': could not import member</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>Compiler Warning (level 4) C4680</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>'class': coclass does not specify a default interface</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>Compiler warning (level 4) C4681</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>'class': coclass does not specify a default interface that is an event source</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>Compiler warning (level 4) C4682</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>'parameter': no directional parameter attribute specified, defaulting to [in]</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>Compiler Warning (level 1) C4683</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>'function': event source has an 'out'-parameter; exercise caution when hooking multiple event handlers</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>Compiler Warning (level 1) C4684</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>'attribute': WARNING!!</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>attribute may cause invalid code generation: use with caution</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>Compiler warning (level 1) C4685</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>expecting '&gt; &gt;' found '&gt;&gt;' when parsing template parameters</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>Compiler Warning (level 3) C4686</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>'user-defined type': possible change in behavior, change in UDT return calling convention</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>Compiler Warning C4687</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>'class': a sealed abstract class cannot implement an interface 'interface'</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>Compiler warning (level 1) C4688</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>'constraint': constraint list contains assembly private type 'type'</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>Compiler warning (level 1) C4689</source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>'%c': unsupported character in #pragma detect_mismatch; #pragma ignored</source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>Compiler warning (level 4) C4690</source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>[ emitidl( pop ) ]: more pops than pushes</source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>Compiler Warning (level 1) C4691</source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>'type': type referenced was expected in unreferenced assembly 'file', type defined in current translation unit used instead</source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>Compiler Warning (level 1) C4692</source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>'function': signature of non-private member contains assembly private native type 'native_type'</source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>Compiler warning (level 1) C4693</source>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>'class': a sealed abstract class cannot have any instance members 'instance member'</source>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>Compiler warning (level 1) C4694</source>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>'class': a sealed abstract class cannot have a base-class 'base_class'</source>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>Compiler warning (level 1) C4695</source>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>pragma execution_character_set: 'character set' is not a supported argument: currently only 'UTF-8' is supported</source>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>Compiler warning (level 1) C4696</source>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>/ZBvalue1 option out of range; assuming 'value2'</source>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>Compiler Warning (level 1 and level 4) C4700</source>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>uninitialized local variable 'name' used</source>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>Compiler Warning (level 4) C4701</source>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>potentially uninitialized local variable 'name' used</source>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>Compiler Warning (level 4) C4702</source>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>unreachable code</source>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>Compiler Warning (level 4) C4703</source>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>potentially uninitialized local pointer variable '%s' used</source>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>Compiler Warning (level 4) C4706</source>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>assignment within conditional expression</source>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>Compiler Warning (level 4) C4709</source>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>comma operator within array index expression</source>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>Compiler Warning (level 4) C4710</source>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>'function': function not inlined</source>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>Compiler Warning (level 1) C4711</source>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>function 'function' selected for automatic inline expansion</source>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>Compiler Warning (level 4) C4714</source>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>function 'function' marked as __forceinline not inlined</source>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>Compiler Warning (level 1) C4715</source>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>'function': not all control paths return a value</source>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>Compiler Warning (level 1) C4716</source>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>'function': must return a value</source>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>Compiler Warning (level 1) C4717</source>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>'function': recursive on all control paths, function will cause runtime stack overflow</source>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>Compiler warning (level 4) C4718</source>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>'function call': recursive call has no side effects, deleting</source>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>Compiler warning (level 1) C4719</source>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>Double constant found when Qfast specified - use 'f' as a suffix to indicate single precision</source>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>Compiler warning (level 2) C4720</source>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>in-line assembler reports: 'message'</source>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>Compiler warning (level 1) C4721</source>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>'function': not available as an intrinsic</source>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>Compiler warning (level 1) C4722</source>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>'function': destructor never returns, potential memory leak</source>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>Compiler Warning (level 3) C4723</source>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>potential divide by 0</source>
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>Compiler warning (level 3) C4724</source>
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>potential mod by 0</source>
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>Compiler warning (level 3) C4725</source>
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>instruction may be inaccurate on some Pentiums</source>
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>Compiler Warning (level 1) C4727</source>
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>PCH named pch_file with same timestamp found in obj_file_1 and obj_file_2.</source>
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>Using first PCH.</source>
        </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>Compiler warning (level 1) C4728</source>
        </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>/Yl- option ignored because PCH reference is required</source>
        </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>Compiler warning (level 4) C4729</source>
        </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>function too big for flow graph based warnings</source>
        </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Compiler Warning (Level 1) C4730<ept id="p1">](../../error-messages/compiler-warnings/compiler-warning-level-1-c4730.md)</ept>Compiler warning (level 1) C4730</source>
        </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>'main': mixing _m64 and floating point expressions may result in incorrect code</source>
        </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>Compiler Warning (Level 1) C4731</source>
        </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>'pointer': frame pointer register 'register' modified by inline assembly code</source>
        </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>Compiler warning (level 1) C4732</source>
        </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>intrinsic '%s' is not supported in this architecture</source>
        </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>Compiler Warning (Level 1) C4733</source>
        </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>Inline asm assigning to 'FS:0': handler not registered as safe handler</source>
        </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>Compiler Warning (Level 3) C4738</source>
        </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>storing 32-bit float result in memory, possible loss of performance</source>
        </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>Compiler warning (level 1) C4739</source>
        </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>reference to variable 'var' exceeds its storage space</source>
        </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>Compiler Warning (Level 4) C4740</source>
        </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>flow in or out of inline asm code suppresses global optimization</source>
        </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>Compiler Warning (Level 1) C4742</source>
        </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>'var' has different alignment in 'file1' and 'file2': number and number</source>
        </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>Compiler Warning (Level 1) C4743</source>
        </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source>'type' has different size in 'file1' and 'file2': number and number bytes</source>
        </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>Compiler Warning (Level 1) C4744</source>
        </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>'var' has different type in 'file1' and 'file2': 'type1' and 'type2'</source>
        </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>Compiler Warning C4746</source>
        </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>volatile access of '%s' is subject to /volatile:<ph id="ph1">\&lt;</ph>iso&amp;#124;ms&gt; setting; consider using __iso_volatile_load/store intrinsic functions</source>
        </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>Compiler Warning (level 1) C4747</source>
        </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>Calling managed 'entrypoint': Managed code may not be run under loader lock, including the DLL entrypoint and calls reached from the DLL entrypoint</source>
        </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source>Compiler warning (level 1) C4750</source>
        </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source>'identifier': function with _alloca() inlined into a loop</source>
        </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>Compiler warning (level 4) C4751</source>
        </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>/arch:AVX does not apply to Intel(R) Streaming SIMD Extensions that are within inline ASM</source>
        </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>Compiler warning (level 4) C4752</source>
        </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>found Intel(R) Advanced Vector Extensions; consider using /arch:AVX</source>
        </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source>Compiler warning (level 4) C4754</source>
        </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source>Conversion rules for arithmetic operations in the comparison at %s(%d) mean that one branch cannot be executed.</source>
        </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>Cast '%s' to '%s' (or similar type of %d bytes).</source>
        </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source>Compiler warning C4755</source>
        </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source>Conversion rules for arithmetic operations in the comparison at %s(%d) mean that one branch cannot be executed in an inlined function.</source>
        </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source>Cast '%s' to '%s' (or similar type of %d bytes).</source>
        </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source>Compiler Warning (level 2) C4756</source>
        </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source>overflow in constant arithmetic</source>
        </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source>Compiler warning (level 4) C4757</source>
        </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source>subscript is a large unsigned value, did you intend a negative constant?</source>
        </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source>Compiler warning (level 4) C4764</source>
        </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve">
          <source>Can not align catch objects to greater than 16 bytes</source>
        </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve">
          <source>Compiler warning (level 4) C4767</source>
        </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve">
          <source>section name '%s' is longer than 8 characters and will be truncated by the linker</source>
        </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve">
          <source>Compiler warning C4770</source>
        </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve">
          <source>partially validated enum '%s' used as index</source>
        </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve">
          <source>Compiler Warning (level 1) C4772</source>
        </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve">
          <source>import referenced a type from a missing type library; 'missing_type' used as a placeholder</source>
        </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve">
          <source>Compiler Warning (Level 1) C4788</source>
        </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve">
          <source>'identifier': identifier was truncated to 'number' characters</source>
        </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve">
          <source>Compiler Warning (Level 1) C4789</source>
        </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve">
          <source>buffer 'identifier' of size N bytes will be overrun; M bytes will be written starting at offset L</source>
        </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve">
          <source>Compiler warning (level 2) C4792</source>
        </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve">
          <source>function '%s' declared using sysimport and referenced from native code; import library required to link</source>
        </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve">
          <source>Compiler Warning (level 1 and 3) C4793</source>
        </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve">
          <source>'function': function compiled as native:\n\t'reason'</source>
        </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve">
          <source>Compiler warning (level 1) C4794</source>
        </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve">
          <source>segment of thread local storage variable '%s' changed from '%s' to '%s'</source>
        </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve">
          <source>Compiler Warning (level 1) C4799</source>
        </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve">
          <source>function 'function' has no EMMS instruction</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>