{"nodes":[{"pos":[12,50],"content":"CAnimationPoint Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"CAnimationPoint Class | Microsoft Docs","pos":[0,38]}]},{"content":"CAnimationPoint Class","pos":[664,685]},{"content":"Implements the functionality of a point whose coordinates can be animated.","pos":[686,760]},{"content":"Syntax","pos":[769,775]},{"content":"Members","pos":[854,861]},{"content":"Public Constructors","pos":[871,890]},{"content":"Name","pos":[897,901]},{"content":"Description","pos":[902,913]},{"content":"CAnimationPoint::CAnimationPoint","pos":[952,984]},{"content":"Overloaded.","pos":[1021,1032]},{"content":"Constructs CAnimationPoint object.","pos":[1033,1067]},{"content":"Public Methods","pos":[1078,1092]},{"content":"Name","pos":[1099,1103]},{"content":"Description","pos":[1104,1115]},{"content":"CAnimationPoint::AddTransition","pos":[1154,1184]},{"content":"Adds transitions for X and Y coordinates.","pos":[1219,1260]},{"content":"CAnimationPoint::GetDefaultValue","pos":[1266,1298]},{"content":"Returns the default values for X and Y coordinates.","pos":[1335,1386]},{"content":"CAnimationPoint::GetValue","pos":[1392,1417]},{"content":"Returns current value.","pos":[1447,1469]},{"content":"CAnimationPoint::GetX","pos":[1475,1496]},{"content":"Provides access to CAnimationVariable for X coordinate.","pos":[1522,1577]},{"content":"CAnimationPoint::GetY","pos":[1583,1604]},{"content":"Provides access to CAnimationVariable for Y coordinate.","pos":[1630,1685]},{"content":"CAnimationPoint::SetDefaultValue","pos":[1691,1723]},{"content":"Sets default value.","pos":[1760,1779]},{"content":"Protected Methods","pos":[1790,1807]},{"content":"Name","pos":[1814,1818]},{"content":"Description","pos":[1819,1830]},{"content":"CAnimationPoint::GetAnimationVariableList","pos":[1869,1910]},{"content":"Puts the encapsulated animation variables into a list.","pos":[1956,2010]},{"content":"(Overrides <bpt id=\"p1\">[</bpt>CAnimationBaseObject::GetAnimationVariableList<ept id=\"p1\">](../../mfc/reference/canimationbaseobject-class.md#canimationbaseobject__getanimationvariablelist)</ept>.)","pos":[2011,2170],"source":" (Overrides [CAnimationBaseObject::GetAnimationVariableList](../../mfc/reference/canimationbaseobject-class.md#canimationbaseobject__getanimationvariablelist).)"},{"content":"Public Operators","pos":[2181,2197]},{"content":"Name","pos":[2204,2208]},{"content":"Description","pos":[2209,2220]},{"content":"CAnimationPoint::operator CPoint","pos":[2259,2291]},{"content":"Converts a CAnimationPoint to a CPoint.","pos":[2328,2367]},{"content":"CAnimationPoint::operator=","pos":[2373,2399]},{"content":"Assigns ptSrc to CAnimationPoint.","pos":[2432,2465]},{"content":"Protected Data Members","pos":[2476,2498]},{"content":"Name","pos":[2505,2509]},{"content":"Description","pos":[2510,2521]},{"content":"CAnimationPoint::m_xValue","pos":[2560,2585]},{"content":"The encapsulated animation variable that represents X coordinate of animation point.","pos":[2615,2699]},{"content":"CAnimationPoint::m_yValue","pos":[2705,2730]},{"content":"The encapsulated animation variable that represents Y coordinate of animation point.","pos":[2760,2844]},{"content":"Remarks","pos":[2854,2861]},{"content":"The CAnimationPoint class encapsulates two CAnimationVariable objects and can represent in applications a point.","pos":[2865,2977]},{"content":"For example, you can use this class to animate a position of any object on the screen (like text string, circle, point etc).","pos":[2978,3102]},{"content":"To use this class in application, just instantiate an object of this class, add it to animation controller using CAnimationController::AddAnimationObject and call AddTransition for each transition to be applied to X and/or Y coordinates.","pos":[3103,3340]},{"content":"Inheritance Hierarchy","pos":[3349,3370]},{"content":"CObject","pos":[3375,3382]},{"content":"CAnimationBaseObject","pos":[3429,3449]},{"content":"CAnimationPoint","pos":[3509,3524]},{"content":"Requirements","pos":[3580,3592]},{"pos":[3596,3632],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> afxanimationcontroller.h","source":"**Header:** afxanimationcontroller.h"},{"pos":[3689,3719],"content":"CAnimationPoint::AddTransition"},{"content":"Adds transitions for X and Y coordinates.","pos":[3723,3764]},{"content":"Parameters","pos":[3882,3892]},{"content":"A pointer to transition for X coordinates.","pos":[3914,3956]},{"content":"A pointer to transition for Y coordinate.","pos":[3981,4022]},{"content":"Remarks","pos":[4032,4039]},{"content":"Call this function to add the specified transitions to the internal list of transitions to be applied to animation variables for X and Y coordinates.","pos":[4043,4192]},{"content":"When you add transitions, they are not applied immediately and stored in an internal list.","pos":[4193,4283]},{"content":"Transitions are applied (added to a storyboard for a particular value) when you call CAnimationController::AnimateGroup.","pos":[4284,4404]},{"content":"If you don't need to apply a transition to one of coordinates, you can pass NULL.","pos":[4405,4486]},{"pos":[4545,4577],"content":"CAnimationPoint::CAnimationPoint"},{"content":"Constructs CAnimationPoint object.","pos":[4581,4615]},{"content":"Parameters","pos":[4797,4807]},{"content":"Specifies default point coordinates.","pos":[4826,4862]},{"content":"Specifies Group ID.","pos":[4883,4902]},{"content":"Specifies Object ID.","pos":[4924,4944]},{"content":"Specifies user-defined data.","pos":[4967,4995]},{"content":"Remarks","pos":[5005,5012]},{"content":"Constructs CAnimationPoint object with default properties: default point coordinates, Group ID and Object ID are set to 0.","pos":[5016,5138]},{"pos":[5206,5247],"content":"CAnimationPoint::GetAnimationVariableList"},{"content":"Puts the encapsulated animation variables into a list.","pos":[5251,5305]},{"content":"Parameters","pos":[5433,5443]},{"content":"When the function returns, it contains pointers to two CAnimationVariable objects representing the X and Y coordinates.","pos":[5456,5575]},{"pos":[5634,5666],"content":"CAnimationPoint::GetDefaultValue"},{"content":"Returns the default values for X and Y coordinates.","pos":[5670,5721]},{"content":"Return Value","pos":[5772,5784]},{"content":"A point containing default value.","pos":[5788,5821]},{"content":"Remarks","pos":[5831,5838]},{"content":"Call this function to retrieve default value, which was previously set by constructor or SetDefaultValue.","pos":[5842,5947]},{"pos":[5999,6024],"content":"CAnimationPoint::GetValue"},{"content":"Returns current value.","pos":[6028,6050]},{"content":"Parameters","pos":[6107,6117]},{"content":"Output.","pos":[6134,6141]},{"content":"Contains the current value when this method returns.","pos":[6142,6194]},{"content":"Return Value","pos":[6204,6216]},{"content":"TRUE, if the current value was successfully retrieved; otherwise FALSE.","pos":[6220,6291]},{"content":"Remarks","pos":[6301,6308]},{"content":"Call this function to retrieve the current value of animation point.","pos":[6312,6380]},{"content":"If this method fails or underlying COM objects for X and Y coordinates have not been initialized, ptValue contains default value, which was previously set in constructor or by SetDefaultValue.","pos":[6381,6573]},{"pos":[6621,6642],"content":"CAnimationPoint::GetX"},{"content":"Provides access to CAnimationVariable for X coordinate.","pos":[6646,6701]},{"content":"Return Value","pos":[6754,6766]},{"content":"A reference to encapsulated CAnimationVariable representing X coordinate.","pos":[6770,6843]},{"content":"Remarks","pos":[6853,6860]},{"content":"You can call this method to get direct access to underlying CAnimationVariable representing X coordinate.","pos":[6864,6969]},{"pos":[7017,7038],"content":"CAnimationPoint::GetY"},{"content":"Provides access to CAnimationVariable for Y coordinate.","pos":[7042,7097]},{"content":"Return Value","pos":[7150,7162]},{"content":"A reference to encapsulated CAnimationVariable representing Y coordinate.","pos":[7166,7239]},{"content":"Remarks","pos":[7249,7256]},{"content":"You can call this method to get direct access to underlying CAnimationVariable representing Y coordinate.","pos":[7260,7365]},{"pos":[7417,7442],"content":"CAnimationPoint::m_xValue"},{"content":"The encapsulated animation variable that represents X coordinate of animation point.","pos":[7446,7530]},{"pos":[7628,7653],"content":"CAnimationPoint::m_yValue"},{"content":"The encapsulated animation variable that represents Y coordinate of animation point.","pos":[7657,7741]},{"pos":[7846,7878],"content":"CAnimationPoint::operator CPoint"},{"content":"Converts a CAnimationPoint to a CPoint.","pos":[7882,7921]},{"content":"Return Value","pos":[7966,7978]},{"content":"Current value of CAnimationPoint as CPoint.","pos":[7982,8025]},{"content":"Remarks","pos":[8035,8042]},{"content":"This function internally calls GetValue.","pos":[8046,8086]},{"content":"If GetValue for some reason fails, the returned point will contain default values for X and Y coordinates.","pos":[8087,8193]},{"pos":[8248,8274],"content":"CAnimationPoint::operator="},{"content":"Assigns ptSrc to CAnimationPoint.","pos":[8278,8311]},{"content":"Parameters","pos":[8373,8383]},{"content":"Refers to CPoint or POINT.","pos":[8398,8424]},{"content":"Remarks","pos":[8434,8441]},{"content":"Assigns ptSrc to CAnimationPoint.","pos":[8445,8478]},{"content":"It's recommended to do that before animation start, because this operator calls SetDefaultValue, which recreates the underlying COM objects for X and Y coordinates if they have been created.","pos":[8479,8669]},{"content":"If you subscribed this animation object to events (ValueChanged or IntegerValueChanged), you need to re-enable these events.","pos":[8670,8794]},{"pos":[8853,8885],"content":"CAnimationPoint::SetDefaultValue"},{"content":"Sets default value.","pos":[8889,8908]},{"content":"Parameters","pos":[8979,8989]},{"content":"Specifies the default point value.","pos":[9008,9042]},{"content":"Remarks","pos":[9052,9059]},{"content":"Use this function to set a default value to animation object.","pos":[9063,9124]},{"content":"This methods assigns default values to X and Y coordinates of animation point.","pos":[9125,9203]},{"content":"It also recreates underlying COM objects if they have been created.","pos":[9204,9271]},{"content":"If you subscribed this animation object to events (ValueChanged or IntegerValueChanged), you need to re-enable these events.","pos":[9272,9396]},{"content":"See Also","pos":[9405,9413]},{"content":"Classes","pos":[9418,9425]}],"content":"---\ntitle: \"CAnimationPoint Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"CAnimationPoint\"\n  - \"afxanimationcontroller/CAnimationPoint\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"CAnimationPoint class\"\nms.assetid: 5dc4d46f-e695-4681-b15c-544b78b3e317\ncaps.latest.revision: 17\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# CAnimationPoint Class\nImplements the functionality of a point whose coordinates can be animated.  \n  \n## Syntax  \n  \n```  \nclass CAnimationPoint : public CAnimationBaseObject;  \n```  \n  \n## Members  \n  \n### Public Constructors  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CAnimationPoint::CAnimationPoint](#canimationpoint__canimationpoint)|Overloaded. Constructs CAnimationPoint object.|  \n  \n### Public Methods  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CAnimationPoint::AddTransition](#canimationpoint__addtransition)|Adds transitions for X and Y coordinates.|  \n|[CAnimationPoint::GetDefaultValue](#canimationpoint__getdefaultvalue)|Returns the default values for X and Y coordinates.|  \n|[CAnimationPoint::GetValue](#canimationpoint__getvalue)|Returns current value.|  \n|[CAnimationPoint::GetX](#canimationpoint__getx)|Provides access to CAnimationVariable for X coordinate.|  \n|[CAnimationPoint::GetY](#canimationpoint__gety)|Provides access to CAnimationVariable for Y coordinate.|  \n|[CAnimationPoint::SetDefaultValue](#canimationpoint__setdefaultvalue)|Sets default value.|  \n  \n### Protected Methods  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CAnimationPoint::GetAnimationVariableList](#canimationpoint__getanimationvariablelist)|Puts the encapsulated animation variables into a list. (Overrides [CAnimationBaseObject::GetAnimationVariableList](../../mfc/reference/canimationbaseobject-class.md#canimationbaseobject__getanimationvariablelist).)|  \n  \n### Public Operators  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CAnimationPoint::operator CPoint](#canimationpoint__operator_cpoint)|Converts a CAnimationPoint to a CPoint.|  \n|[CAnimationPoint::operator=](#canimationpoint__operator_eq)|Assigns ptSrc to CAnimationPoint.|  \n  \n### Protected Data Members  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CAnimationPoint::m_xValue](#canimationpoint__m_xvalue)|The encapsulated animation variable that represents X coordinate of animation point.|  \n|[CAnimationPoint::m_yValue](#canimationpoint__m_yvalue)|The encapsulated animation variable that represents Y coordinate of animation point.|  \n  \n## Remarks  \n The CAnimationPoint class encapsulates two CAnimationVariable objects and can represent in applications a point. For example, you can use this class to animate a position of any object on the screen (like text string, circle, point etc). To use this class in application, just instantiate an object of this class, add it to animation controller using CAnimationController::AddAnimationObject and call AddTransition for each transition to be applied to X and/or Y coordinates.  \n  \n## Inheritance Hierarchy  \n [CObject](../../mfc/reference/cobject-class.md)  \n  \n [CAnimationBaseObject](../../mfc/reference/canimationbaseobject-class.md)  \n  \n [CAnimationPoint](../../mfc/reference/canimationpoint-class.md)  \n  \n## Requirements  \n **Header:** afxanimationcontroller.h  \n  \n##  <a name=\"canimationpoint__addtransition\"></a>  CAnimationPoint::AddTransition  \n Adds transitions for X and Y coordinates.  \n  \n```  \nvoid AddTransition(\n    CBaseTransition* pXTransition,  \n    CBaseTransition* pYTransition);\n```  \n  \n### Parameters  \n `pXTransition`  \n A pointer to transition for X coordinates.  \n  \n `pYTransition`  \n A pointer to transition for Y coordinate.  \n  \n### Remarks  \n Call this function to add the specified transitions to the internal list of transitions to be applied to animation variables for X and Y coordinates. When you add transitions, they are not applied immediately and stored in an internal list. Transitions are applied (added to a storyboard for a particular value) when you call CAnimationController::AnimateGroup. If you don't need to apply a transition to one of coordinates, you can pass NULL.  \n  \n##  <a name=\"canimationpoint__canimationpoint\"></a>  CAnimationPoint::CAnimationPoint  \n Constructs CAnimationPoint object.  \n  \n```  \nCAnimationPoint();\n\n \nCAnimationPoint(\n    const CPoint& ptDefault,  \n    UINT32 nGroupID,  \n    UINT32 nObjectID = (UINT32)-1,  \n    DWORD dwUserData = 0);\n```  \n  \n### Parameters  \n `ptDefault`  \n Specifies default point coordinates.  \n  \n `nGroupID`  \n Specifies Group ID.  \n  \n `nObjectID`  \n Specifies Object ID.  \n  \n `dwUserData`  \n Specifies user-defined data.  \n  \n### Remarks  \n Constructs CAnimationPoint object with default properties: default point coordinates, Group ID and Object ID are set to 0.  \n  \n##  <a name=\"canimationpoint__getanimationvariablelist\"></a>  CAnimationPoint::GetAnimationVariableList  \n Puts the encapsulated animation variables into a list.  \n  \n```  \nvirtual void GetAnimationVariableList(\n    CList<CAnimationVariable*, \n    CAnimationVariable*>& lst);\n```  \n  \n### Parameters  \n `lst`  \n When the function returns, it contains pointers to two CAnimationVariable objects representing the X and Y coordinates.  \n  \n##  <a name=\"canimationpoint__getdefaultvalue\"></a>  CAnimationPoint::GetDefaultValue  \n Returns the default values for X and Y coordinates.  \n  \n```  \nCPoint GetDefaultValue();\n```  \n  \n### Return Value  \n A point containing default value.  \n  \n### Remarks  \n Call this function to retrieve default value, which was previously set by constructor or SetDefaultValue.  \n  \n##  <a name=\"canimationpoint__getvalue\"></a>  CAnimationPoint::GetValue  \n Returns current value.  \n  \n```  \nBOOL GetValue(CPoint& ptValue);\n```  \n  \n### Parameters  \n `ptValue`  \n Output. Contains the current value when this method returns.  \n  \n### Return Value  \n TRUE, if the current value was successfully retrieved; otherwise FALSE.  \n  \n### Remarks  \n Call this function to retrieve the current value of animation point. If this method fails or underlying COM objects for X and Y coordinates have not been initialized, ptValue contains default value, which was previously set in constructor or by SetDefaultValue.  \n  \n##  <a name=\"canimationpoint__getx\"></a>  CAnimationPoint::GetX  \n Provides access to CAnimationVariable for X coordinate.  \n  \n```  \nCAnimationVariable& GetX();\n```  \n  \n### Return Value  \n A reference to encapsulated CAnimationVariable representing X coordinate.  \n  \n### Remarks  \n You can call this method to get direct access to underlying CAnimationVariable representing X coordinate.  \n  \n##  <a name=\"canimationpoint__gety\"></a>  CAnimationPoint::GetY  \n Provides access to CAnimationVariable for Y coordinate.  \n  \n```  \nCAnimationVariable& GetY();\n```  \n  \n### Return Value  \n A reference to encapsulated CAnimationVariable representing Y coordinate.  \n  \n### Remarks  \n You can call this method to get direct access to underlying CAnimationVariable representing Y coordinate.  \n  \n##  <a name=\"canimationpoint__m_xvalue\"></a>  CAnimationPoint::m_xValue  \n The encapsulated animation variable that represents X coordinate of animation point.  \n  \n```  \nCAnimationVariable m_xValue;  \n```  \n  \n##  <a name=\"canimationpoint__m_yvalue\"></a>  CAnimationPoint::m_yValue  \n The encapsulated animation variable that represents Y coordinate of animation point.  \n  \n```  \nCAnimationVariable m_yValue;  \n```  \n  \n##  <a name=\"canimationpoint__operator_cpoint\"></a>  CAnimationPoint::operator CPoint  \n Converts a CAnimationPoint to a CPoint.  \n  \n```  \noperator CPoint();\n```   \n  \n### Return Value  \n Current value of CAnimationPoint as CPoint.  \n  \n### Remarks  \n This function internally calls GetValue. If GetValue for some reason fails, the returned point will contain default values for X and Y coordinates.  \n  \n##  <a name=\"canimationpoint__operator_eq\"></a>  CAnimationPoint::operator=  \n Assigns ptSrc to CAnimationPoint.  \n  \n```  \nvoid operator=(const CPoint& ptSrc);\n```  \n  \n### Parameters  \n `ptSrc`  \n Refers to CPoint or POINT.  \n  \n### Remarks  \n Assigns ptSrc to CAnimationPoint. It's recommended to do that before animation start, because this operator calls SetDefaultValue, which recreates the underlying COM objects for X and Y coordinates if they have been created. If you subscribed this animation object to events (ValueChanged or IntegerValueChanged), you need to re-enable these events.  \n  \n##  <a name=\"canimationpoint__setdefaultvalue\"></a>  CAnimationPoint::SetDefaultValue  \n Sets default value.  \n  \n```  \nvoid SetDefaultValue(const POINT& ptDefault);\n```  \n  \n### Parameters  \n `ptDefault`  \n Specifies the default point value.  \n  \n### Remarks  \n Use this function to set a default value to animation object. This methods assigns default values to X and Y coordinates of animation point. It also recreates underlying COM objects if they have been created. If you subscribed this animation object to events (ValueChanged or IntegerValueChanged), you need to re-enable these events.  \n  \n## See Also  \n [Classes](../../mfc/reference/mfc-classes.md)\n"}