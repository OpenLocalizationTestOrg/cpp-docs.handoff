{"nodes":[{"pos":[12,69],"content":"A.2   Specifying Conditional Compilation | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"A.2   Specifying Conditional Compilation | Microsoft Docs","pos":[0,57]}]},{"content":"A.2   Specifying Conditional Compilation","pos":[549,589]},{"content":"The following examples illustrate the use of conditional compilation using the OpenMP macro <ph id=\"ph1\">`_OPENMP`</ph> (<bpt id=\"p1\">[</bpt>Section 2.2<ept id=\"p1\">](../../parallel/openmp/2-2-conditional-compilation.md)</ept> on page 8).","pos":[590,772],"source":"The following examples illustrate the use of conditional compilation using the OpenMP macro `_OPENMP` ([Section 2.2](../../parallel/openmp/2-2-conditional-compilation.md) on page 8)."},{"content":"With OpenMP compilation, the <ph id=\"ph1\">`_OPENMP`</ph> macro becomes defined.","pos":[773,834],"source":" With OpenMP compilation, the `_OPENMP` macro becomes defined."},{"content":"The defined preprocessor operator allows more than one macro to be tested in a single directive.","pos":[954,1050]}],"content":"---\ntitle: \"A.2   Specifying Conditional Compilation | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"C++\"\nms.assetid: de4a21b9-f987-4738-9f13-c4795f6f2dff\ncaps.latest.revision: 8\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# A.2   Specifying Conditional Compilation\nThe following examples illustrate the use of conditional compilation using the OpenMP macro `_OPENMP` ([Section 2.2](../../parallel/openmp/2-2-conditional-compilation.md) on page 8). With OpenMP compilation, the `_OPENMP` macro becomes defined.  \n  \n```  \n# ifdef _OPENMP   \n    printf_s(\"Compiled by an OpenMP-compliant implementation.\\n\");  \n# endif  \n```  \n  \n The defined preprocessor operator allows more than one macro to be tested in a single directive.  \n  \n```  \n# if defined(_OPENMP) && defined(VERBOSE)  \n    printf_s(\"Compiled by an OpenMP-compliant implementation.\\n\");  \n# endif  \n```"}