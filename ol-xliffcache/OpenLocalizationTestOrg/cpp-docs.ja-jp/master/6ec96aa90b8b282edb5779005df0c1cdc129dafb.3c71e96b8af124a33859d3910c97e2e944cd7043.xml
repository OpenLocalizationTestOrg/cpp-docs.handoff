{"nodes":[{"pos":[12,46],"content":"putchar, putwchar | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"putchar, putwchar | Microsoft Docs","pos":[0,34]}]},{"pos":[1096,1113],"content":"putchar, putwchar","linkify":"putchar, putwchar","nodes":[{"content":"putchar, putwchar","pos":[0,17]}]},{"pos":[1114,1147],"content":"Writes a character to <bpt id=\"p1\">**</bpt>stdout<ept id=\"p1\">**</ept>.","source":"Writes a character to **stdout**."},{"pos":[1156,1162],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[1269,1279],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Character to be written.","pos":[1290,1314]},{"pos":[1323,1335],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Returns the character written.","pos":[1339,1369]},{"content":"To indicate an error or end-of-file condition, <ph id=\"ph1\">`putc`</ph> and <ph id=\"ph2\">`putchar`</ph> return <ph id=\"ph3\">`EOF`</ph>; <ph id=\"ph4\">`putwc`</ph> and <ph id=\"ph5\">`putwchar`</ph> return <bpt id=\"p1\">**</bpt>WEOF<ept id=\"p1\">**</ept>.","pos":[1370,1491],"source":" To indicate an error or end-of-file condition, `putc` and `putchar` return `EOF`; `putwc` and `putwchar` return **WEOF**."},{"content":"For all four routines, use <bpt id=\"p1\">[</bpt>ferror<ept id=\"p1\">](../../c-runtime-library/reference/ferror.md)</ept> or <bpt id=\"p2\">[</bpt>feof<ept id=\"p2\">](../../c-runtime-library/reference/feof.md)</ept> to check for an error or end of file.","pos":[1492,1663],"source":" For all four routines, use [ferror](../../c-runtime-library/reference/ferror.md) or [feof](../../c-runtime-library/reference/feof.md) to check for an error or end of file."},{"content":"If passed a null pointer for <ph id=\"ph1\">`stream`</ph>, these functions generate an invalid parameter exception, as described in <bpt id=\"p1\">[</bpt>Parameter Validation<ept id=\"p1\">](../../c-runtime-library/parameter-validation.md)</ept>.","pos":[1664,1848],"source":" If passed a null pointer for `stream`, these functions generate an invalid parameter exception, as described in [Parameter Validation](../../c-runtime-library/parameter-validation.md)."},{"content":"If execution is allowed to continue, they return <ph id=\"ph1\">`EOF`</ph> or <bpt id=\"p1\">**</bpt>WEOF<ept id=\"p1\">**</ept> and set <ph id=\"ph2\">`errno`</ph> to <ph id=\"ph3\">`EINVAL`</ph>.","pos":[1849,1944],"source":" If execution is allowed to continue, they return `EOF` or **WEOF** and set `errno` to `EINVAL`."},{"pos":[1951,2125],"content":"See <bpt id=\"p1\">[</bpt>_doserrno, errno, _sys_errlist, and _sys_nerr<ept id=\"p1\">](../../c-runtime-library/errno-doserrno-sys-errlist-and-sys-nerr.md)</ept> for more information on these, and other, error codes.","source":"See [_doserrno, errno, _sys_errlist, and _sys_nerr](../../c-runtime-library/errno-doserrno-sys-errlist-and-sys-nerr.md) for more information on these, and other, error codes."},{"pos":[2134,2141],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The <ph id=\"ph1\">`putc`</ph> routine writes the single character <ph id=\"ph2\">`c`</ph> to the output <ph id=\"ph3\">`stream`</ph> at the current position.","pos":[2145,2243],"source":"The `putc` routine writes the single character `c` to the output `stream` at the current position."},{"content":"Any integer can be passed to <ph id=\"ph1\">`putc`</ph>, but only the lower 8 bits are written.","pos":[2244,2319],"source":" Any integer can be passed to `putc`, but only the lower 8 bits are written."},{"content":"The <ph id=\"ph1\">`putchar`</ph> routine is identical to <bpt id=\"p1\">**</bpt>putc(<ept id=\"p1\">**</ept> <ph id=\"ph2\">`c`</ph><bpt id=\"p2\">**</bpt>, stdout )<ept id=\"p2\">**</ept>.","pos":[2320,2386],"source":" The `putchar` routine is identical to **putc(** `c`**, stdout )**."},{"content":"For each routine, if a read error occurs, the error indicator for the stream is set.","pos":[2387,2471]},{"content":"<ph id=\"ph1\">`putc`</ph> and <ph id=\"ph2\">`putchar`</ph> are similar to <ph id=\"ph3\">`fputc`</ph> and <ph id=\"ph4\">`_fputchar`</ph>, respectively, but are implemented both as functions and as macros (see <bpt id=\"p1\">[</bpt>Choosing Between Functions and Macros<ept id=\"p1\">](../../c-runtime-library/recommendations-for-choosing-between-functions-and-macros.md)</ept>).","pos":[2472,2731],"source":"`putc` and `putchar` are similar to `fputc` and `_fputchar`, respectively, but are implemented both as functions and as macros (see [Choosing Between Functions and Macros](../../c-runtime-library/recommendations-for-choosing-between-functions-and-macros.md))."},{"content":"<ph id=\"ph1\">`putwc`</ph> and <ph id=\"ph2\">`putwchar`</ph> are wide-character versions of <ph id=\"ph3\">`putc`</ph> and <ph id=\"ph4\">`putchar`</ph>, respectively.","pos":[2732,2821],"source":"`putwc` and `putwchar` are wide-character versions of `putc` and `putchar`, respectively."},{"content":"The versions with the <bpt id=\"p1\">**</bpt>_nolock<ept id=\"p1\">**</ept> suffix are identical except that they are not protected from interference by other threads.","pos":[2828,2953],"source":"The versions with the **_nolock** suffix are identical except that they are not protected from interference by other threads."},{"content":"They may be faster since they do not incur the overhead of locking out other threads.","pos":[2954,3039]},{"content":"Use these functions only in thread-safe contexts such as single-threaded applications or where the calling scope already handles thread isolation.","pos":[3040,3186]},{"pos":[3196,3225],"content":"Generic-Text Routine Mappings","linkify":"Generic-Text Routine Mappings","nodes":[{"content":"Generic-Text Routine Mappings","pos":[0,29]}]},{"content":"TCHAR.H routine","pos":[3232,3247]},{"content":"_UNICODE &amp; _MBCS not defined","pos":[3248,3276],"source":"_UNICODE & _MBCS not defined"},{"content":"_MBCS defined","pos":[3277,3290]},{"content":"_UNICODE defined","pos":[3291,3307]},{"pos":[3452,3464],"content":"<bpt id=\"p1\">**</bpt>putwchar<ept id=\"p1\">**</ept>","source":"**putwchar**"},{"pos":[3474,3486],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"content":"Routine","pos":[3493,3500]},{"content":"Required header","pos":[3501,3516]},{"content":"<ph id=\"ph1\">\\&lt;</ph>stdio.h&gt;","pos":[3571,3581],"source":"\\<stdio.h>"},{"content":"<ph id=\"ph1\">\\&lt;</ph>stdio.h&gt; or <ph id=\"ph2\">\\&lt;</ph>wchar.h&gt;","pos":[3597,3621],"source":"\\<stdio.h> or \\<wchar.h>"},{"content":"The console is not supported in <ph id=\"ph1\">[!INCLUDE[win8_appname_long](../../build/includes/win8_appname_long_md.md)]</ph> apps.","pos":[3629,3742],"source":"The console is not supported in [!INCLUDE[win8_appname_long](../../build/includes/win8_appname_long_md.md)] apps."},{"content":"The standard stream handles that are associated with the console—<ph id=\"ph1\">`stdin`</ph>, <ph id=\"ph2\">`stdout`</ph>, and <ph id=\"ph3\">`stderr`</ph>—must be redirected before C run-time functions can use them in <ph id=\"ph4\">[!INCLUDE[win8_appname_long](../../build/includes/win8_appname_long_md.md)]</ph> apps.","pos":[3743,3984],"source":" The standard stream handles that are associated with the console—`stdin`, `stdout`, and `stderr`—must be redirected before C run-time functions can use them in [!INCLUDE[win8_appname_long](../../build/includes/win8_appname_long_md.md)] apps."},{"content":"For additional compatibility information, see <bpt id=\"p1\">[</bpt>Compatibility<ept id=\"p1\">](../../c-runtime-library/compatibility.md)</ept>.","pos":[3985,4089],"source":" For additional compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md)."},{"pos":[4098,4107],"content":"Libraries","linkify":"Libraries","nodes":[{"content":"Libraries","pos":[0,9]}]},{"pos":[4111,4203],"content":"All versions of the <bpt id=\"p1\">[</bpt>C run-time libraries<ept id=\"p1\">](../../c-runtime-library/crt-library-features.md)</ept>.","source":"All versions of the [C run-time libraries](../../c-runtime-library/crt-library-features.md)."},{"pos":[4212,4219],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[4655,4661],"content":"Output","linkify":"Output","nodes":[{"content":"Output","pos":[0,6]}]},{"pos":[4714,4739],"content":".NET Framework Equivalent","linkify":".NET Framework Equivalent","nodes":[{"content":".NET Framework Equivalent","pos":[0,25]}]},{"pos":[4749,4858],"content":"<bpt id=\"p1\">[</bpt>System::IO::StreamWriter::Write<ept id=\"p1\">](https://msdn.microsoft.com/en-us/library/system.io.streamwriter.write.aspx)</ept>","source":"[System::IO::StreamWriter::Write](https://msdn.microsoft.com/en-us/library/system.io.streamwriter.write.aspx)"},{"pos":[4868,4960],"content":"<bpt id=\"p1\">[</bpt>System::Console::Write<ept id=\"p1\">](https://msdn.microsoft.com/en-us/library/system.console.write.aspx)</ept>","source":"[System::Console::Write](https://msdn.microsoft.com/en-us/library/system.console.write.aspx)"},{"pos":[4969,4977],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Stream I/O<ept id=\"p1\">](../../c-runtime-library/stream-i-o.md)</ept><ph id=\"ph1\"> </ph>","pos":[4981,5033],"source":"[Stream I/O](../../c-runtime-library/stream-i-o.md) "},{"content":"<bpt id=\"p1\"> [</bpt>fputc, fputwc<ept id=\"p1\">](../../c-runtime-library/reference/fputc-fputwc.md)</ept><ph id=\"ph1\"> </ph>","pos":[5036,5104],"source":" [fputc, fputwc](../../c-runtime-library/reference/fputc-fputwc.md) "},{"content":"<bpt id=\"p1\"> [</bpt>getc, getwc<ept id=\"p1\">](../../c-runtime-library/reference/getc-getwc.md)</ept>","pos":[5107,5170],"source":" [getc, getwc](../../c-runtime-library/reference/getc-getwc.md)"}],"content":"---\ntitle: \"putchar, putwchar | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\napiname: \n  - \"putchar\"\n  - \"putwchar\"\napilocation: \n  - \"msvcrt.dll\"\n  - \"msvcr80.dll\"\n  - \"msvcr90.dll\"\n  - \"msvcr100.dll\"\n  - \"msvcr100_clr0400.dll\"\n  - \"msvcr110.dll\"\n  - \"msvcr110_clr0400.dll\"\n  - \"msvcr120.dll\"\n  - \"msvcr120_clr0400.dll\"\n  - \"ucrtbase.dll\"\n  - \"api-ms-win-crt-stdio-l1-1-0.dll\"\napitype: \"DLLExport\"\nf1_keywords: \n  - \"putchar\"\n  - \"putwchar\"\n  - \"_puttchar\"\ndev_langs: \n  - \"C++\"\n  - \"C\"\nhelpviewer_keywords: \n  - \"putchar function\"\n  - \"_puttchar function\"\n  - \"characters, writing\"\n  - \"standard output, writing to\"\n  - \"putwchar function\"\nms.assetid: 93657c7f-cca1-4032-8e3a-cd6ab6193748\ncaps.latest.revision: 12\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"ru-ru\"\n  - \"zh-cn\"\n  - \"zh-tw\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"tr-tr\"\n---\n# putchar, putwchar\nWrites a character to **stdout**.  \n  \n## Syntax  \n  \n```  \n  \n      int putchar(  \n   int c   \n);  \nwint_t putwchar(  \n   wchar_t c   \n);  \n```  \n  \n#### Parameters  \n `c`  \n Character to be written.  \n  \n## Return Value  \n Returns the character written. To indicate an error or end-of-file condition, `putc` and `putchar` return `EOF`; `putwc` and `putwchar` return **WEOF**. For all four routines, use [ferror](../../c-runtime-library/reference/ferror.md) or [feof](../../c-runtime-library/reference/feof.md) to check for an error or end of file. If passed a null pointer for `stream`, these functions generate an invalid parameter exception, as described in [Parameter Validation](../../c-runtime-library/parameter-validation.md). If execution is allowed to continue, they return `EOF` or **WEOF** and set `errno` to `EINVAL`.  \n  \n See [_doserrno, errno, _sys_errlist, and _sys_nerr](../../c-runtime-library/errno-doserrno-sys-errlist-and-sys-nerr.md) for more information on these, and other, error codes.  \n  \n## Remarks  \n The `putc` routine writes the single character `c` to the output `stream` at the current position. Any integer can be passed to `putc`, but only the lower 8 bits are written. The `putchar` routine is identical to **putc(** `c`**, stdout )**. For each routine, if a read error occurs, the error indicator for the stream is set. `putc` and `putchar` are similar to `fputc` and `_fputchar`, respectively, but are implemented both as functions and as macros (see [Choosing Between Functions and Macros](../../c-runtime-library/recommendations-for-choosing-between-functions-and-macros.md)). `putwc` and `putwchar` are wide-character versions of `putc` and `putchar`, respectively.  \n  \n The versions with the **_nolock** suffix are identical except that they are not protected from interference by other threads. They may be faster since they do not incur the overhead of locking out other threads. Use these functions only in thread-safe contexts such as single-threaded applications or where the calling scope already handles thread isolation.  \n  \n### Generic-Text Routine Mappings  \n  \n|TCHAR.H routine|_UNICODE & _MBCS not defined|_MBCS defined|_UNICODE defined|  \n|---------------------|------------------------------------|--------------------|-----------------------|  \n|`_puttchar`|`putchar`|`putchar`|**putwchar**|  \n  \n## Requirements  \n  \n|Routine|Required header|  \n|-------------|---------------------|  \n|`putchar`|\\<stdio.h>|  \n|`putwchar`|\\<stdio.h> or \\<wchar.h>|  \n  \n The console is not supported in [!INCLUDE[win8_appname_long](../../build/includes/win8_appname_long_md.md)] apps. The standard stream handles that are associated with the console—`stdin`, `stdout`, and `stderr`—must be redirected before C run-time functions can use them in [!INCLUDE[win8_appname_long](../../build/includes/win8_appname_long_md.md)] apps. For additional compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md).  \n  \n## Libraries  \n All versions of the [C run-time libraries](../../c-runtime-library/crt-library-features.md).  \n  \n## Example  \n  \n```  \n// crt_putchar.c  \n/* This program uses putc to write buffer  \n * to a stream. If an error occurs, the program  \n * stops before writing the entire buffer.  \n */  \n  \n#include <stdio.h>  \n  \nint main( void )  \n{  \n   FILE *stream;  \n   char *p, buffer[] = \"This is the line of output\\n\";  \n   int  ch;  \n  \n   ch = 0;  \n  \n   for( p = buffer; (ch != EOF) && (*p != '\\0'); p++ )  \n      ch = putchar( *p );  \n}  \n```  \n  \n## Output  \n  \n```  \nThis is the line of output  \n```  \n  \n## .NET Framework Equivalent  \n  \n-   [System::IO::StreamWriter::Write](https://msdn.microsoft.com/en-us/library/system.io.streamwriter.write.aspx)  \n  \n-   [System::Console::Write](https://msdn.microsoft.com/en-us/library/system.console.write.aspx)  \n  \n## See Also  \n [Stream I/O](../../c-runtime-library/stream-i-o.md)   \n [fputc, fputwc](../../c-runtime-library/reference/fputc-fputwc.md)   \n [getc, getwc](../../c-runtime-library/reference/getc-getwc.md)"}