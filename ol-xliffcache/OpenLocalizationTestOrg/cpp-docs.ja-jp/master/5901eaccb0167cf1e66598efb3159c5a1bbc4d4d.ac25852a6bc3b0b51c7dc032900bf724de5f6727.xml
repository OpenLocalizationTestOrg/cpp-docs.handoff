{"nodes":[{"pos":[12,49],"content":"RemoveIUnknown Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"RemoveIUnknown Class | Microsoft Docs","pos":[0,37]}]},{"content":"RemoveIUnknown Class","pos":[624,644]},{"content":"Supports the WRL infrastructure and is not intended to be used directly from your code.","pos":[645,732]},{"content":"Syntax","pos":[741,747]},{"content":"Parameters","pos":[902,912]},{"content":"A class.","pos":[923,931]},{"content":"Remarks","pos":[940,947]},{"pos":[951,1091],"content":"Makes a type that is equivalent to an <ph id=\"ph1\">`IUnknown`</ph>-based type, but has  nonvirtual <ph id=\"ph2\">`QueryInterface`</ph>, <ph id=\"ph3\">`AddRef`</ph>, and <ph id=\"ph4\">`Release`</ph> member functions.","source":"Makes a type that is equivalent to an `IUnknown`-based type, but has  nonvirtual `QueryInterface`, `AddRef`, and `Release` member functions."},{"content":"By default, COM methods provide virtual <ph id=\"ph1\">`QueryInterface`</ph>, <ph id=\"ph2\">`AddRef`</ph>, and Release methods.","pos":[1098,1186],"source":"By default, COM methods provide virtual `QueryInterface`, `AddRef`, and Release methods."},{"content":"However, <ph id=\"ph1\">`ComPtr`</ph> doesn't require the overhead of virtual methods.","pos":[1187,1253],"source":" However, `ComPtr` doesn't require the overhead of virtual methods."},{"content":"eliminates that overhead by providing private, nonvirtual <ph id=\"ph1\">`QueryInterface`</ph>, <ph id=\"ph2\">`AddRef`</ph>, and <ph id=\"ph3\">`Release`</ph> methods.","pos":[1271,1379],"source":" eliminates that overhead by providing private, nonvirtual `QueryInterface`, `AddRef`, and `Release` methods."},{"content":"Members","pos":[1388,1395]},{"content":"Public Typedefs","pos":[1405,1420]},{"content":"Name","pos":[1427,1431]},{"content":"Description","pos":[1432,1443]},{"pos":[1494,1596],"content":"A synonym for a type that is equivalent to template parameter <ph id=\"ph1\">`T`</ph> but has nonvirtual IUnknown members.","source":"A synonym for a type that is equivalent to template parameter `T` but has nonvirtual IUnknown members."},{"content":"Inheritance Hierarchy","pos":[1606,1627]},{"content":"Requirements","pos":[1666,1678]},{"pos":[1682,1702],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> client.h","source":"**Header:** client.h"},{"pos":[1709,1747],"content":"<bpt id=\"p1\">**</bpt>Namespace:<ept id=\"p1\">**</ept> Microsoft::WRL::Details","source":"**Namespace:** Microsoft::WRL::Details"},{"content":"See Also","pos":[1756,1764]},{"content":"Microsoft::WRL::Details Namespace","pos":[1769,1802]}],"content":"---\ntitle: \"RemoveIUnknown Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"client/Microsoft::WRL::Details::RemoveIUnknown\"\ndev_langs: \n  - \"C++\"\nms.assetid: 998e711a-7d1a-44c6-a016-e6167aa40863\ncaps.latest.revision: 5\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"ru-ru\"\n  - \"zh-cn\"\n  - \"zh-tw\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"tr-tr\"\n---\n# RemoveIUnknown Class\nSupports the WRL infrastructure and is not intended to be used directly from your code.  \n  \n## Syntax  \n  \n```  \ntemplate <  \n   typename T  \n>  \nstruct RemoveIUnknown;  \n  \ntemplate <  \n   typename T  \n>  \nclass RemoveIUnknown : public T;  \n```  \n  \n#### Parameters  \n `T`  \n A class.  \n  \n## Remarks  \n Makes a type that is equivalent to an `IUnknown`-based type, but has  nonvirtual `QueryInterface`, `AddRef`, and `Release` member functions.  \n  \n By default, COM methods provide virtual `QueryInterface`, `AddRef`, and Release methods. However, `ComPtr` doesn't require the overhead of virtual methods. `RemoveIUnknown` eliminates that overhead by providing private, nonvirtual `QueryInterface`, `AddRef`, and `Release` methods.  \n  \n## Members  \n  \n### Public Typedefs  \n  \n|Name|Description|  \n|----------|-----------------|  \n|`ReturnType`|A synonym for a type that is equivalent to template parameter `T` but has nonvirtual IUnknown members.|  \n  \n## Inheritance Hierarchy  \n `T`  \n  \n `RemoveIUnknown`  \n  \n## Requirements  \n **Header:** client.h  \n  \n **Namespace:** Microsoft::WRL::Details  \n  \n## See Also  \n [Microsoft::WRL::Details Namespace](../windows/microsoft-wrl-details-namespace.md)"}