{"nodes":[{"pos":[12,49],"content":"WINDOWPOS Structure1 | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"WINDOWPOS Structure1 | Microsoft Docs","pos":[0,37]}]},{"content":"WINDOWPOS Structure1","pos":[608,628]},{"pos":[629,716],"content":"The <ph id=\"ph1\">`WINDOWPOS`</ph> structure contains information about the size and position of a window.","source":"The `WINDOWPOS` structure contains information about the size and position of a window."},{"content":"Syntax","pos":[725,731]},{"content":"Parameters","pos":[930,940]},{"content":"hwnd","pos":[945,949]},{"content":"Identifies the window.","pos":[954,976]},{"content":"hwndInsertAfter","pos":[984,999]},{"content":"Identifies the window behind which this window is placed.","pos":[1004,1061]},{"content":"x","pos":[1069,1070]},{"content":"Specifies the position of the left edge of the window.","pos":[1075,1129]},{"content":"y","pos":[1137,1138]},{"content":"Specifies the position of the right edge of the window.","pos":[1143,1198]},{"content":"Specifies the window width, in pixels.","pos":[1213,1251]},{"content":"Specifies the window height, in pixels.","pos":[1266,1305]},{"content":"Specifies window-positioning options.","pos":[1323,1360]},{"content":"This member can be one of the following values:","pos":[1361,1408]},{"content":"<bpt id=\"p1\">**</bpt>SWP_DRAWFRAME<ept id=\"p1\">**</ept> Draws a frame (defined in the class description for the window) around the window.","pos":[1416,1516],"source":"**SWP_DRAWFRAME** Draws a frame (defined in the class description for the window) around the window."},{"content":"The window receives a <ph id=\"ph1\">`WM_NCCALCSIZE`</ph> message.","pos":[1517,1563],"source":" The window receives a `WM_NCCALCSIZE` message."},{"content":"<bpt id=\"p1\">**</bpt>SWP_FRAMECHANGED<ept id=\"p1\">**</ept> Sends a <ph id=\"ph1\">`WM_NCCALCSIZE`</ph> message to the window, even if the window's size is not being changed.","pos":[1571,1686],"source":"**SWP_FRAMECHANGED** Sends a `WM_NCCALCSIZE` message to the window, even if the window's size is not being changed."},{"content":"If this flag is not specified, <ph id=\"ph1\">`WM_NCCALCSIZE`</ph> is sent only when the window's size is being changed.","pos":[1687,1787],"source":" If this flag is not specified, `WM_NCCALCSIZE` is sent only when the window's size is being changed."},{"pos":[1795,1831],"content":"<bpt id=\"p1\">**</bpt>SWP_HIDEWINDOW<ept id=\"p1\">**</ept> Hides the window.","source":"**SWP_HIDEWINDOW** Hides the window."},{"pos":[1856,1885],"content":"Does not activate the window."},{"content":"<bpt id=\"p1\">**</bpt>SWP_NOCOPYBITS<ept id=\"p1\">**</ept> Discards the entire contents of the client area.","pos":[1893,1960],"source":"**SWP_NOCOPYBITS** Discards the entire contents of the client area."},{"content":"If this flag is not specified, the valid contents of the client area are saved and copied back into the client area after the window is sized or repositioned.","pos":[1961,2119]},{"pos":[2140,2203],"content":"Retains current position (ignores the <bpt id=\"p1\">**</bpt>x<ept id=\"p1\">**</ept> and <bpt id=\"p2\">**</bpt>y<ept id=\"p2\">**</ept> members).","source":" Retains current position (ignores the **x** and **y** members)."},{"pos":[2211,2292],"content":"<bpt id=\"p1\">**</bpt>SWP_NOOWNERZORDER<ept id=\"p1\">**</ept> Does not change the owner window's position in the Z-order.","source":"**SWP_NOOWNERZORDER** Does not change the owner window's position in the Z-order."},{"pos":[2313,2374],"content":"Retains current size (ignores the <bpt id=\"p1\">**</bpt>cx<ept id=\"p1\">**</ept> and <bpt id=\"p2\">**</bpt>cy<ept id=\"p2\">**</ept> members).","source":" Retains current size (ignores the **cx** and **cy** members)."},{"pos":[2382,2423],"content":"<bpt id=\"p1\">**</bpt>SWP_NOREDRAW<ept id=\"p1\">**</ept> Does not redraw changes.","source":"**SWP_NOREDRAW** Does not redraw changes."},{"pos":[2431,2482],"content":"<bpt id=\"p1\">**</bpt>SWP_NOREPOSITION<ept id=\"p1\">**</ept> Same as <bpt id=\"p2\">**</bpt>SWP_NOOWNERZORDER<ept id=\"p2\">**</ept>.","source":"**SWP_NOREPOSITION** Same as **SWP_NOOWNERZORDER**."},{"pos":[2490,2583],"content":"<bpt id=\"p1\">**</bpt>SWP_NOSENDCHANGING<ept id=\"p1\">**</ept> Prevents the window from receiving the <ph id=\"ph1\">`WM_WINDOWPOSCHANGING`</ph> message.","source":"**SWP_NOSENDCHANGING** Prevents the window from receiving the `WM_WINDOWPOSCHANGING` message."},{"pos":[2606,2672],"content":"Retains current ordering (ignores the <bpt id=\"p1\">**</bpt>hwndInsertAfter<ept id=\"p1\">**</ept> member).","source":" Retains current ordering (ignores the **hwndInsertAfter** member)."},{"pos":[2680,2719],"content":"<bpt id=\"p1\">**</bpt>SWP_SHOWWINDOW<ept id=\"p1\">**</ept> Displays the window.","source":"**SWP_SHOWWINDOW** Displays the window."},{"content":"Requirements","pos":[2728,2740]},{"pos":[2744,2765],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> winuser.h","source":"**Header:** winuser.h"},{"content":"See Also","pos":[2774,2782]},{"content":"Structures, Styles, Callbacks, and Message Maps","pos":[2787,2834]},{"content":"CWnd::OnWindowPosChanging","pos":[2910,2935]}],"content":"---\ntitle: \"WINDOWPOS Structure1 | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"WINDOWPOS\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"WINDOWPOS structure\"\nms.assetid: a4ea7cd9-c4c2-4480-9c55-cbbff72195e1\ncaps.latest.revision: 11\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# WINDOWPOS Structure1\nThe `WINDOWPOS` structure contains information about the size and position of a window.  \n  \n## Syntax  \n  \n```  \ntypedef struct tagWINDOWPOS { /* wp */  \n    HWND hwnd;  \n    HWND hwndInsertAfter;  \n    int x;  \n    int y;  \n    int cx;  \n    int cy;  \n    UINT flags;  \n} WINDOWPOS;  \n```  \n  \n#### Parameters  \n *hwnd*  \n Identifies the window.  \n  \n *hwndInsertAfter*  \n Identifies the window behind which this window is placed.  \n  \n *x*  \n Specifies the position of the left edge of the window.  \n  \n *y*  \n Specifies the position of the right edge of the window.  \n  \n `cx`  \n Specifies the window width, in pixels.  \n  \n `cy`  \n Specifies the window height, in pixels.  \n  \n `flags`  \n Specifies window-positioning options. This member can be one of the following values:  \n  \n- **SWP_DRAWFRAME** Draws a frame (defined in the class description for the window) around the window. The window receives a `WM_NCCALCSIZE` message.  \n  \n- **SWP_FRAMECHANGED** Sends a `WM_NCCALCSIZE` message to the window, even if the window's size is not being changed. If this flag is not specified, `WM_NCCALCSIZE` is sent only when the window's size is being changed.  \n  \n- **SWP_HIDEWINDOW** Hides the window.  \n  \n- `SWP_NOACTIVATE` Does not activate the window.  \n  \n- **SWP_NOCOPYBITS** Discards the entire contents of the client area. If this flag is not specified, the valid contents of the client area are saved and copied back into the client area after the window is sized or repositioned.  \n  \n- `SWP_NOMOVE` Retains current position (ignores the **x** and **y** members).  \n  \n- **SWP_NOOWNERZORDER** Does not change the owner window's position in the Z-order.  \n  \n- `SWP_NOSIZE` Retains current size (ignores the **cx** and **cy** members).  \n  \n- **SWP_NOREDRAW** Does not redraw changes.  \n  \n- **SWP_NOREPOSITION** Same as **SWP_NOOWNERZORDER**.  \n  \n- **SWP_NOSENDCHANGING** Prevents the window from receiving the `WM_WINDOWPOSCHANGING` message.  \n  \n- `SWP_NOZORDER` Retains current ordering (ignores the **hwndInsertAfter** member).  \n  \n- **SWP_SHOWWINDOW** Displays the window.  \n  \n## Requirements  \n **Header:** winuser.h  \n  \n## See Also  \n [Structures, Styles, Callbacks, and Message Maps](../../mfc/reference/structures-styles-callbacks-and-message-maps.md)   \n [CWnd::OnWindowPosChanging](../../mfc/reference/cwnd-class.md#cwnd__onwindowposchanging)\n\n"}