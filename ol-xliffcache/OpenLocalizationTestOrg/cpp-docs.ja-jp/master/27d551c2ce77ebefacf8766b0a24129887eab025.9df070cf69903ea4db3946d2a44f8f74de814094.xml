{"nodes":[{"pos":[12,61],"content":"CComClassFactoryAutoThread Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"CComClassFactoryAutoThread Class | Microsoft Docs","pos":[0,49]}]},{"content":"CComClassFactoryAutoThread Class","pos":[727,759]},{"pos":[760,929],"content":"This class implements the <bpt id=\"p1\">[</bpt>IClassFactory<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms694364)</ept> interface, and allows objects to be created in multiple apartments.","source":"This class implements the [IClassFactory](http://msdn.microsoft.com/library/windows/desktop/ms694364) interface, and allows objects to be created in multiple apartments."},{"pos":[937,1047],"content":"[!IMPORTANT]\n This class and its members cannot be used in applications that execute in the Windows Runtime.","leadings":["","> "],"nodes":[{"content":"This class and its members cannot be used in applications that execute in the Windows Runtime.","pos":[14,108]}]},{"content":"Syntax","pos":[1056,1062]},{"content":"Members","pos":[1191,1198]},{"content":"Public Methods","pos":[1208,1222]},{"content":"Name","pos":[1229,1233]},{"content":"Description","pos":[1234,1245]},{"content":"CComClassFactoryAutoThread::CreateInstance","pos":[1284,1326]},{"content":"Creates an object of the specified CLSID.","pos":[1373,1414]},{"content":"CComClassFactoryAutoThread::LockServer","pos":[1420,1458]},{"content":"Locks the class factory in memory.","pos":[1501,1535]},{"content":"Remarks","pos":[1545,1552]},{"content":"is similar to <bpt id=\"p1\">[</bpt>CComClassFactory<ept id=\"p1\">](../../atl/reference/ccomclassfactory-class.md)</ept>, but allows objects to be created in multiple apartments.","pos":[1585,1722],"source":" is similar to [CComClassFactory](../../atl/reference/ccomclassfactory-class.md), but allows objects to be created in multiple apartments."},{"content":"To take advantage of this support, derive your EXE module from <bpt id=\"p1\">[</bpt>CComAutoThreadModule<ept id=\"p1\">](../../atl/reference/ccomautothreadmodule-class.md)</ept>.","pos":[1723,1860],"source":" To take advantage of this support, derive your EXE module from [CComAutoThreadModule](../../atl/reference/ccomautothreadmodule-class.md)."},{"content":"ATL objects normally acquire a class factory by deriving from <bpt id=\"p1\">[</bpt>CComCoClass<ept id=\"p1\">](../../atl/reference/ccomcoclass-class.md)</ept>.","pos":[1867,1985],"source":"ATL objects normally acquire a class factory by deriving from [CComCoClass](../../atl/reference/ccomcoclass-class.md)."},{"content":"This class includes the macro <bpt id=\"p1\">[</bpt>DECLARE_CLASSFACTORY<ept id=\"p1\">](http://msdn.microsoft.com/library/51a6b925-07c0-4d3a-9174-0b8c808975e4)</ept>, which declares <bpt id=\"p2\">[</bpt>CComClassFactory<ept id=\"p2\">](../../atl/reference/ccomclassfactory-class.md)</ept> as the default class factory.","pos":[1986,2222],"source":" This class includes the macro [DECLARE_CLASSFACTORY](http://msdn.microsoft.com/library/51a6b925-07c0-4d3a-9174-0b8c808975e4), which declares [CComClassFactory](../../atl/reference/ccomclassfactory-class.md) as the default class factory."},{"content":"To use <ph id=\"ph1\">`CComClassFactoryAutoThread`</ph>, specify the <bpt id=\"p1\">[</bpt>DECLARE_CLASSFACTORY_AUTO_THREAD<ept id=\"p1\">](http://msdn.microsoft.com/library/19d7105e-03e8-4412-9f5e-5384c8a5e18f)</ept> macro in your object's class definition.","pos":[2223,2419],"source":" To use `CComClassFactoryAutoThread`, specify the [DECLARE_CLASSFACTORY_AUTO_THREAD](http://msdn.microsoft.com/library/19d7105e-03e8-4412-9f5e-5384c8a5e18f) macro in your object's class definition."},{"content":"For example:","pos":[2420,2432]},{"pos":[2450,2463],"content":"NVC_ATL_COM#9"},{"content":"Inheritance Hierarchy","pos":[2538,2559]},{"content":"CComObjectRootEx","pos":[2591,2607]},{"content":"Requirements","pos":[2721,2733]},{"pos":[2737,2757],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> atlcom.h","source":"**Header:** atlcom.h"},{"pos":[2826,2868],"content":"CComClassFactoryAutoThread::CreateInstance"},{"content":"Creates an object of the specified CLSID and retrieves an interface pointer to this object.","pos":[2872,2963]},{"content":"Parameters","pos":[3072,3082]},{"content":"[in] If the object is being created as part of an aggregate, then <ph id=\"ph1\">`pUnkOuter`</ph> must be the outer unknown.","pos":[3101,3205],"source":" [in] If the object is being created as part of an aggregate, then `pUnkOuter` must be the outer unknown."},{"content":"Otherwise, <ph id=\"ph1\">`pUnkOuter`</ph> must be <bpt id=\"p1\">**</bpt>NULL<ept id=\"p1\">**</ept>.","pos":[3206,3246],"source":" Otherwise, `pUnkOuter` must be **NULL**."},{"content":"[in] The IID of the requested interface.","pos":[3263,3303]},{"content":"If <ph id=\"ph1\">`pUnkOuter`</ph> is non- <bpt id=\"p1\">**</bpt>NULL<ept id=\"p1\">**</ept>, <ph id=\"ph2\">`riid`</ph> must be <bpt id=\"p2\">**</bpt>IID_IUnknown<ept id=\"p2\">**</ept>.","pos":[3304,3369],"source":" If `pUnkOuter` is non- **NULL**, `riid` must be **IID_IUnknown**."},{"content":"[out] A pointer to the interface pointer identified by <ph id=\"ph1\">`riid`</ph>.","pos":[3388,3450],"source":" [out] A pointer to the interface pointer identified by `riid`."},{"content":"If the object does not support this interface, <ph id=\"ph1\">`ppvObj`</ph> is set to <bpt id=\"p1\">**</bpt>NULL<ept id=\"p1\">**</ept>.","pos":[3451,3526],"source":" If the object does not support this interface, `ppvObj` is set to **NULL**."},{"content":"Return Value","pos":[3536,3548]},{"pos":[3552,3579],"content":"A standard <ph id=\"ph1\">`HRESULT`</ph> value.","source":"A standard `HRESULT` value."},{"content":"Remarks","pos":[3589,3596]},{"pos":[3600,3792],"content":"If your module derives from <bpt id=\"p1\">[</bpt>CComAutoThreadModule<ept id=\"p1\">](../../atl/reference/ccomautothreadmodule-class.md)</ept>, <ph id=\"ph1\">`CreateInstance`</ph> first selects a thread to create the object in the associated apartment.","source":"If your module derives from [CComAutoThreadModule](../../atl/reference/ccomautothreadmodule-class.md), `CreateInstance` first selects a thread to create the object in the associated apartment."},{"pos":[3857,3895],"content":"CComClassFactoryAutoThread::LockServer"},{"pos":[3899,4014],"content":"Increments and decrements the module lock count by calling <bpt id=\"p1\">**</bpt>_Module::Lock<ept id=\"p1\">**</ept> and <bpt id=\"p2\">**</bpt>_Module::Unlock<ept id=\"p2\">**</ept>, respectively.","source":"Increments and decrements the module lock count by calling **_Module::Lock** and **_Module::Unlock**, respectively."},{"content":"Parameters","pos":[4074,4084]},{"content":"[in] If <bpt id=\"p1\">**</bpt>TRUE<ept id=\"p1\">**</ept>, the lock count is incremented; otherwise, the lock count is decremented.","pos":[4099,4189],"source":" [in] If **TRUE**, the lock count is incremented; otherwise, the lock count is decremented."},{"content":"Return Value","pos":[4199,4211]},{"pos":[4215,4242],"content":"A standard <ph id=\"ph1\">`HRESULT`</ph> value.","source":"A standard `HRESULT` value."},{"content":"Remarks","pos":[4252,4259]},{"pos":[4263,4433],"content":"When using <ph id=\"ph1\">`CComClassFactoryAutoThread`</ph>, <bpt id=\"p1\">**</bpt>_Module<ept id=\"p1\">**</ept> typically refers to the global instance of <bpt id=\"p2\">[</bpt>CComAutoThreadModule<ept id=\"p2\">](../../atl/reference/ccomautothreadmodule-class.md)</ept>.","source":"When using `CComClassFactoryAutoThread`, **_Module** typically refers to the global instance of [CComAutoThreadModule](../../atl/reference/ccomautothreadmodule-class.md)."},{"pos":[4440,4554],"content":"Calling <ph id=\"ph1\">`LockServer`</ph> allows a client to hold onto a class factory so that multiple objects can be quickly created.","source":"Calling `LockServer` allows a client to hold onto a class factory so that multiple objects can be quickly created."},{"content":"See Also","pos":[4563,4571]},{"content":"IClassFactory","pos":[4576,4589]},{"content":"CComClassFactory2 Class","pos":[4656,4679]},{"content":"CComClassFactorySingleton Class","pos":[4734,4765]},{"content":"CComObjectRootEx Class","pos":[4828,4850]},{"content":"CComGlobalsThreadModel","pos":[4904,4926]},{"content":"Class Overview","pos":[4973,4987]}],"content":"---\ntitle: \"CComClassFactoryAutoThread Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"ATL::CComClassFactoryAutoThread\"\n  - \"ATL.CComClassFactoryAutoThread\"\n  - \"CComClassFactoryAutoThread\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"CComClassFactoryAutoThread class\"\nms.assetid: 22008042-533f-4dd9-bf7e-191ee571f9a1\ncaps.latest.revision: 21\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# CComClassFactoryAutoThread Class\nThis class implements the [IClassFactory](http://msdn.microsoft.com/library/windows/desktop/ms694364) interface, and allows objects to be created in multiple apartments.  \n  \n> [!IMPORTANT]\n>  This class and its members cannot be used in applications that execute in the Windows Runtime.  \n  \n## Syntax  \n  \n```\nclass CComClassFactoryAutoThread : public IClassFactory,   public CComObjectRootEx<CComGlobalsThreadModel>\n```  \n  \n## Members  \n  \n### Public Methods  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CComClassFactoryAutoThread::CreateInstance](#ccomclassfactoryautothread__createinstance)|Creates an object of the specified CLSID.|  \n|[CComClassFactoryAutoThread::LockServer](#ccomclassfactoryautothread__lockserver)|Locks the class factory in memory.|  \n  \n## Remarks  \n `CComClassFactoryAutoThread` is similar to [CComClassFactory](../../atl/reference/ccomclassfactory-class.md), but allows objects to be created in multiple apartments. To take advantage of this support, derive your EXE module from [CComAutoThreadModule](../../atl/reference/ccomautothreadmodule-class.md).  \n  \n ATL objects normally acquire a class factory by deriving from [CComCoClass](../../atl/reference/ccomcoclass-class.md). This class includes the macro [DECLARE_CLASSFACTORY](http://msdn.microsoft.com/library/51a6b925-07c0-4d3a-9174-0b8c808975e4), which declares [CComClassFactory](../../atl/reference/ccomclassfactory-class.md) as the default class factory. To use `CComClassFactoryAutoThread`, specify the [DECLARE_CLASSFACTORY_AUTO_THREAD](http://msdn.microsoft.com/library/19d7105e-03e8-4412-9f5e-5384c8a5e18f) macro in your object's class definition. For example:  \n  \n [!code-cpp[NVC_ATL_COM#9](../../atl/codesnippet/cpp/ccomclassfactoryautothread-class_1.h)]  \n  \n## Inheritance Hierarchy  \n `CComObjectRootBase`  \n  \n [CComObjectRootEx](../../atl/reference/ccomobjectrootex-class.md)  \n  \n `IClassFactory`  \n  \n `CComClassFactoryAutoThread`  \n  \n## Requirements  \n **Header:** atlcom.h  \n  \n##  <a name=\"ccomclassfactoryautothread__createinstance\"></a>  CComClassFactoryAutoThread::CreateInstance  \n Creates an object of the specified CLSID and retrieves an interface pointer to this object.  \n  \n```\nSTDMETHODIMP CreateInstance(LPUNKNOWN pUnkOuter,\n    REFIID riid,\n    void** ppvObj);\n```  \n  \n### Parameters  \n `pUnkOuter`  \n [in] If the object is being created as part of an aggregate, then `pUnkOuter` must be the outer unknown. Otherwise, `pUnkOuter` must be **NULL**.  \n  \n `riid`  \n [in] The IID of the requested interface. If `pUnkOuter` is non- **NULL**, `riid` must be **IID_IUnknown**.  \n  \n `ppvObj`  \n [out] A pointer to the interface pointer identified by `riid`. If the object does not support this interface, `ppvObj` is set to **NULL**.  \n  \n### Return Value  \n A standard `HRESULT` value.  \n  \n### Remarks  \n If your module derives from [CComAutoThreadModule](../../atl/reference/ccomautothreadmodule-class.md), `CreateInstance` first selects a thread to create the object in the associated apartment.  \n  \n##  <a name=\"ccomclassfactoryautothread__lockserver\"></a>  CComClassFactoryAutoThread::LockServer  \n Increments and decrements the module lock count by calling **_Module::Lock** and **_Module::Unlock**, respectively.  \n  \n```\nSTDMETHODIMP LockServer(BOOL fLock);\n```  \n  \n### Parameters  \n `fLock`  \n [in] If **TRUE**, the lock count is incremented; otherwise, the lock count is decremented.  \n  \n### Return Value  \n A standard `HRESULT` value.  \n  \n### Remarks  \n When using `CComClassFactoryAutoThread`, **_Module** typically refers to the global instance of [CComAutoThreadModule](../../atl/reference/ccomautothreadmodule-class.md).  \n  \n Calling `LockServer` allows a client to hold onto a class factory so that multiple objects can be quickly created.  \n  \n## See Also  \n [IClassFactory](http://msdn.microsoft.com/library/windows/desktop/ms694364)   \n [CComClassFactory2 Class](../../atl/reference/ccomclassfactory2-class.md)   \n [CComClassFactorySingleton Class](../../atl/reference/ccomclassfactorysingleton-class.md)   \n [CComObjectRootEx Class](../../atl/reference/ccomobjectrootex-class.md)   \n [CComGlobalsThreadModel](atl-typedefs.md#ccomglobalsthreadmodel)   \n [Class Overview](../../atl/atl-class-overview.md)\n"}