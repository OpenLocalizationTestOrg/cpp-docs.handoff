{"nodes":[{"pos":[12,64],"content":"Multithreaded Libraries Performance | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Multithreaded Libraries Performance | Microsoft Docs","pos":[0,52]}]},{"content":"Multithreaded Libraries Performance","pos":[704,739]},{"content":"The single-threaded CRT is no longer available.","pos":[740,787]},{"content":"This topic discusses how to get the maximum performance from the multithreaded libraries.","pos":[788,877]},{"content":"Maximizing performance","pos":[886,908]},{"content":"The performance of the multithreaded libraries has been improved and is close to the performance of the now-eliminated single-threaded libraries.","pos":[912,1057]},{"content":"For those situations when even higher performance is required, there are several new features.","pos":[1058,1152]},{"content":"Independent stream locking allows you to lock a stream and then use <bpt id=\"p1\">[</bpt>_nolock Functions<ept id=\"p1\">](../c-runtime-library/nolock-functions.md)</ept> that access the stream directly.","pos":[1162,1324],"source":"Independent stream locking allows you to lock a stream and then use [_nolock Functions](../c-runtime-library/nolock-functions.md) that access the stream directly."},{"content":"This allows lock usage to be hoisted outside critical loops.","pos":[1325,1385]},{"pos":[1395,1557],"content":"Per-thread locale reduces the cost of locale access for multithreaded scenarios (see <bpt id=\"p1\">[</bpt>_configthreadlocale<ept id=\"p1\">](../c-runtime-library/reference/configthreadlocale.md)</ept>).","source":"Per-thread locale reduces the cost of locale access for multithreaded scenarios (see [_configthreadlocale](../c-runtime-library/reference/configthreadlocale.md))."},{"pos":[1567,1803],"content":"Locale-dependent functions (with names ending in _l) take the locale as a parameter, removing substantial cost (for example, <bpt id=\"p1\">[</bpt>printf, _printf_l, wprintf, _wprintf_l<ept id=\"p1\">](../c-runtime-library/reference/printf-printf-l-wprintf-wprintf-l.md)</ept>).","source":"Locale-dependent functions (with names ending in _l) take the locale as a parameter, removing substantial cost (for example, [printf, _printf_l, wprintf, _wprintf_l](../c-runtime-library/reference/printf-printf-l-wprintf-wprintf-l.md))."},{"content":"Optimizations for common codepages reduce the cost of many short operations.","pos":[1813,1889]},{"content":"Defining <bpt id=\"p1\">[</bpt>_CRT_DISABLE_PERFCRIT_LOCKS<ept id=\"p1\">](../c-runtime-library/crt-disable-perfcrit-locks.md)</ept> forces all I/O operations to assume a single-threaded I/O model and use the _nolock forms of the functions.","pos":[1899,2097],"source":"Defining [_CRT_DISABLE_PERFCRIT_LOCKS](../c-runtime-library/crt-disable-perfcrit-locks.md) forces all I/O operations to assume a single-threaded I/O model and use the _nolock forms of the functions."},{"content":"This allows highly I/O-based single-threaded applications to get better performance.","pos":[2098,2182]},{"content":"Exposure of the CRT heap handle allows you to enable the Windows Low Fragmentation Heap (LFH) for the CRT heap, which can substantially improve performance in highly scaled scenarios.","pos":[2192,2375]},{"content":"See Also","pos":[2384,2392]},{"content":"CRT Library Features","pos":[2397,2417]}],"content":"---\ntitle: \"Multithreaded Libraries Performance | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"C++\"\n  - \"C\"\nhelpviewer_keywords: \n  - \"threading [C++], performance\"\n  - \"libraries, multithreaded\"\n  - \"performance, multithreading\"\n  - \"multithreaded libraries\"\nms.assetid: faa5d808-087c-463d-8f0d-8c478d137296\ncaps.latest.revision: 4\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Multithreaded Libraries Performance\nThe single-threaded CRT is no longer available. This topic discusses how to get the maximum performance from the multithreaded libraries.  \n  \n## Maximizing performance  \n The performance of the multithreaded libraries has been improved and is close to the performance of the now-eliminated single-threaded libraries. For those situations when even higher performance is required, there are several new features.  \n  \n-   Independent stream locking allows you to lock a stream and then use [_nolock Functions](../c-runtime-library/nolock-functions.md) that access the stream directly. This allows lock usage to be hoisted outside critical loops.  \n  \n-   Per-thread locale reduces the cost of locale access for multithreaded scenarios (see [_configthreadlocale](../c-runtime-library/reference/configthreadlocale.md)).  \n  \n-   Locale-dependent functions (with names ending in _l) take the locale as a parameter, removing substantial cost (for example, [printf, _printf_l, wprintf, _wprintf_l](../c-runtime-library/reference/printf-printf-l-wprintf-wprintf-l.md)).  \n  \n-   Optimizations for common codepages reduce the cost of many short operations.  \n  \n-   Defining [_CRT_DISABLE_PERFCRIT_LOCKS](../c-runtime-library/crt-disable-perfcrit-locks.md) forces all I/O operations to assume a single-threaded I/O model and use the _nolock forms of the functions. This allows highly I/O-based single-threaded applications to get better performance.  \n  \n-   Exposure of the CRT heap handle allows you to enable the Windows Low Fragmentation Heap (LFH) for the CRT heap, which can substantially improve performance in highly scaled scenarios.  \n  \n## See Also  \n [CRT Library Features](../c-runtime-library/crt-library-features.md)"}