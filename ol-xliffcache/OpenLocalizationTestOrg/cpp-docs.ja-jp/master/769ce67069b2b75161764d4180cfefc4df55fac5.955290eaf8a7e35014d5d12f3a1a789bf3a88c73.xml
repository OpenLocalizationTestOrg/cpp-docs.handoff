{"nodes":[{"pos":[12,44],"content":"strstream Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"strstream Class | Microsoft Docs","pos":[0,32]}]},{"pos":[640,655],"content":"strstream Class","linkify":"strstream Class","nodes":[{"content":"strstream Class","pos":[0,15]}]},{"pos":[656,836],"content":"Describes an object that controls insertion and extraction of elements and encoded objects using a stream buffer of class <bpt id=\"p1\">[</bpt>strstreambuf<ept id=\"p1\">](../standard-library/strstreambuf-class.md)</ept>.","source":"Describes an object that controls insertion and extraction of elements and encoded objects using a stream buffer of class [strstreambuf](../standard-library/strstreambuf-class.md)."},{"pos":[845,851],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[907,914],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[918,970],"content":"The object stores an object of class <ph id=\"ph1\">`strstreambuf`</ph>.","source":"The object stores an object of class `strstreambuf`."},{"pos":[978,1181],"content":"[!NOTE]\n This class is deprecated. Consider using [stringstream](../standard-library/sstream-typedefs.md#stringstream) or [wstringstream](../standard-library/sstream-typedefs.md#wstringstream) instead.","leadings":["","> "],"nodes":[{"content":" This class is deprecated. Consider using [stringstream](../standard-library/sstream-typedefs.md#stringstream) or [wstringstream](../standard-library/sstream-typedefs.md#wstringstream) instead.","pos":[8,201],"nodes":[{"content":"This class is deprecated.","pos":[1,26]},{"content":"Consider using <bpt id=\"p1\">[</bpt>stringstream<ept id=\"p1\">](../standard-library/sstream-typedefs.md#stringstream)</ept> or <bpt id=\"p2\">[</bpt>wstringstream<ept id=\"p2\">](../standard-library/sstream-typedefs.md#wstringstream)</ept> instead.","pos":[27,193],"source":" Consider using [stringstream](../standard-library/sstream-typedefs.md#stringstream) or [wstringstream](../standard-library/sstream-typedefs.md#wstringstream) instead."}]}]},{"pos":[1191,1203],"content":"Constructors","linkify":"Constructors","nodes":[{"content":"Constructors","pos":[0,12]}]},{"pos":[1224,1258],"content":"<bpt id=\"p1\">[</bpt>strstream<ept id=\"p1\">](#strstream__strstream)</ept>","source":"[strstream](#strstream__strstream)"},{"pos":[1259,1300],"content":"Constructs an object of type <ph id=\"ph1\">`strstream`</ph>.","source":"Constructs an object of type `strstream`."},{"pos":[1311,1327],"content":"Member Functions","linkify":"Member Functions","nodes":[{"content":"Member Functions","pos":[0,16]}]},{"pos":[1348,1376],"content":"<bpt id=\"p1\">[</bpt>freeze<ept id=\"p1\">](#strstream__freeze)</ept>","source":"[freeze](#strstream__freeze)"},{"content":"Causes a stream buffer to be unavailable through stream buffer operations.","pos":[1377,1451]},{"pos":[1456,1484],"content":"<bpt id=\"p1\">[</bpt>pcount<ept id=\"p1\">](#strstream__pcount)</ept>","source":"[pcount](#strstream__pcount)"},{"content":"Returns a count of the number of elements written to the controlled sequence.","pos":[1485,1562]},{"pos":[1567,1593],"content":"<bpt id=\"p1\">[</bpt>rdbuf<ept id=\"p1\">](#strstream__rdbuf)</ept>","source":"[rdbuf](#strstream__rdbuf)"},{"pos":[1594,1661],"content":"Returns a pointer to the stream's associated <ph id=\"ph1\">`strstreambuf`</ph> object.","source":"Returns a pointer to the stream's associated `strstreambuf` object."},{"pos":[1666,1688],"content":"<bpt id=\"p1\">[</bpt>str<ept id=\"p1\">](#strstream__str)</ept>","source":"[str](#strstream__str)"},{"pos":[1689,1840],"content":"Calls <bpt id=\"p1\">[</bpt>freeze<ept id=\"p1\">](../standard-library/strstreambuf-class.md#strstreambuf__freeze)</ept>, and then returns a pointer to the beginning of the controlled sequence.","source":"Calls [freeze](../standard-library/strstreambuf-class.md#strstreambuf__freeze), and then returns a pointer to the beginning of the controlled sequence."},{"pos":[1850,1862],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[1866,1890],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> <ph id=\"ph1\">\\&lt;</ph>strstream&gt;","source":"**Header:** \\<strstream>"},{"pos":[1897,1915],"content":"<bpt id=\"p1\">**</bpt>Namespace:<ept id=\"p1\">**</ept> std","source":"**Namespace:** std"},{"pos":[1925,1976],"content":"<bpt id=\"p1\">&lt;a name=\"strstream__freeze\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  strstream::freeze","linkify":"<a name=\"strstream__freeze\"></a>  strstream::freeze","source":"<a name=\"strstream__freeze\"></a>  strstream::freeze"},{"content":"Causes a stream buffer to be unavailable through stream buffer operations.","pos":[1980,2054]},{"pos":[2113,2123],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"A <ph id=\"ph1\">`bool`</ph> indicating whether you want the stream to be frozen.","pos":[2142,2203],"source":" A `bool` indicating whether you want the stream to be frozen."},{"pos":[2213,2220],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[2224,2367],"content":"The member function calls <bpt id=\"p1\">[</bpt>rdbuf<ept id=\"p1\">](#strstream__rdbuf)</ept><ph id=\"ph1\"> -&gt; </ph><bpt id=\"p2\">[</bpt>freeze<ept id=\"p2\">](../standard-library/strstreambuf-class.md#strstreambuf__freeze)</ept>(_ <bpt id=\"p3\">*</bpt>Freezeit<ept id=\"p3\">*</ept>).","source":"The member function calls [rdbuf](#strstream__rdbuf) -> [freeze](../standard-library/strstreambuf-class.md#strstreambuf__freeze)(_ *Freezeit*)."},{"pos":[2377,2384],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[2389,2516],"content":"See <bpt id=\"p1\">[</bpt>strstreambuf::freeze<ept id=\"p1\">](../standard-library/strstreambuf-class.md#strstreambuf__freeze)</ept> for an example that uses <bpt id=\"p2\">**</bpt>freeze<ept id=\"p2\">**</ept>.","source":"See [strstreambuf::freeze](../standard-library/strstreambuf-class.md#strstreambuf__freeze) for an example that uses **freeze**."},{"pos":[2526,2577],"content":"<bpt id=\"p1\">&lt;a name=\"strstream__pcount\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  strstream::pcount","linkify":"<a name=\"strstream__pcount\"></a>  strstream::pcount","source":"<a name=\"strstream__pcount\"></a>  strstream::pcount"},{"content":"Returns a count of the number of elements written to the controlled sequence.","pos":[2581,2658]},{"pos":[2708,2720],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The number of elements written to the controlled sequence.","pos":[2724,2782]},{"pos":[2792,2799],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[2803,2934],"content":"The member function returns <bpt id=\"p1\">[</bpt>rdbuf<ept id=\"p1\">](#strstream__rdbuf)</ept><ph id=\"ph1\"> -&gt; </ph><bpt id=\"p2\">[</bpt>pcount<ept id=\"p2\">](../standard-library/strstreambuf-class.md#strstreambuf__pcount)</ept>.","source":"The member function returns [rdbuf](#strstream__rdbuf) -> [pcount](../standard-library/strstreambuf-class.md#strstreambuf__pcount)."},{"pos":[2944,2951],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[2956,3076],"content":"See <bpt id=\"p1\">[</bpt>strstreambuf::pcount<ept id=\"p1\">](../standard-library/strstreambuf-class.md#strstreambuf__pcount)</ept> for a sample of using pcount.","source":"See [strstreambuf::pcount](../standard-library/strstreambuf-class.md#strstreambuf__pcount) for a sample of using pcount."},{"pos":[3086,3135],"content":"<bpt id=\"p1\">&lt;a name=\"strstream__rdbuf\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  strstream::rdbuf","linkify":"<a name=\"strstream__rdbuf\"></a>  strstream::rdbuf","source":"<a name=\"strstream__rdbuf\"></a>  strstream::rdbuf"},{"content":"Returns a pointer to the stream's associated strstreambuf object.","pos":[3139,3204]},{"pos":[3255,3267],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A pointer to the stream's associated strstreambuf object.","pos":[3271,3328]},{"pos":[3338,3345],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[3349,3498],"content":"The member function returns the address of the stored stream buffer of type <bpt id=\"p1\">**</bpt>pointer<ept id=\"p1\">**</ept> to <bpt id=\"p2\">[</bpt>strstreambuf<ept id=\"p2\">](../standard-library/strstreambuf-class.md)</ept>.","source":"The member function returns the address of the stored stream buffer of type **pointer** to [strstreambuf](../standard-library/strstreambuf-class.md)."},{"pos":[3508,3515],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[3520,3642],"content":"See <bpt id=\"p1\">[</bpt>strstreambuf::pcount<ept id=\"p1\">](../standard-library/strstreambuf-class.md#strstreambuf__pcount)</ept> for a sample that uses <ph id=\"ph1\">`rdbuf`</ph>.","source":"See [strstreambuf::pcount](../standard-library/strstreambuf-class.md#strstreambuf__pcount) for a sample that uses `rdbuf`."},{"pos":[3652,3697],"content":"<bpt id=\"p1\">&lt;a name=\"strstream__str\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  strstream::str","linkify":"<a name=\"strstream__str\"></a>  strstream::str","source":"<a name=\"strstream__str\"></a>  strstream::str"},{"pos":[3701,3852],"content":"Calls <bpt id=\"p1\">[</bpt>freeze<ept id=\"p1\">](../standard-library/strstreambuf-class.md#strstreambuf__freeze)</ept>, and then returns a pointer to the beginning of the controlled sequence.","source":"Calls [freeze](../standard-library/strstreambuf-class.md#strstreambuf__freeze), and then returns a pointer to the beginning of the controlled sequence."},{"pos":[3888,3900],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A pointer to the beginning of the controlled sequence.","pos":[3904,3958]},{"pos":[3968,3975],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[3979,4104],"content":"The member function returns <bpt id=\"p1\">[</bpt>rdbuf<ept id=\"p1\">](#strstream__rdbuf)</ept><ph id=\"ph1\"> -&gt; </ph><bpt id=\"p2\">[</bpt>str<ept id=\"p2\">](../standard-library/strstreambuf-class.md#strstreambuf__str)</ept>.","source":"The member function returns [rdbuf](#strstream__rdbuf) -> [str](../standard-library/strstreambuf-class.md#strstreambuf__str)."},{"pos":[4114,4121],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[4126,4242],"content":"See <bpt id=\"p1\">[</bpt>strstreambuf::str<ept id=\"p1\">](../standard-library/strstreambuf-class.md#strstreambuf__str)</ept> for a sample that uses <bpt id=\"p2\">**</bpt>str<ept id=\"p2\">**</ept>.","source":"See [strstreambuf::str](../standard-library/strstreambuf-class.md#strstreambuf__str) for a sample that uses **str**."},{"pos":[4252,4309],"content":"<bpt id=\"p1\">&lt;a name=\"strstream__strstream\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  strstream::strstream","linkify":"<a name=\"strstream__strstream\"></a>  strstream::strstream","source":"<a name=\"strstream__strstream\"></a>  strstream::strstream"},{"pos":[4313,4354],"content":"Constructs an object of type <ph id=\"ph1\">`strstream`</ph>.","source":"Constructs an object of type `strstream`."},{"pos":[4496,4506],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"The size of the buffer.","pos":[4521,4544]},{"content":"The input and output mode of the buffer.","pos":[4562,4602]},{"content":"See <bpt id=\"p1\">[</bpt>ios_base::openmode<ept id=\"p1\">](../standard-library/ios-base-class.md#ios_base__openmode)</ept> for more information.","pos":[4603,4707],"source":" See [ios_base::openmode](../standard-library/ios-base-class.md#ios_base__openmode) for more information."},{"content":"The buffer.","pos":[4723,4734]},{"pos":[4744,4751],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Both constructors initialize the base class by calling <bpt id=\"p1\">[</bpt>streambuf<ept id=\"p1\">](../standard-library/streambuf-typedefs.md#streambuf)</ept>( <bpt id=\"p2\">**</bpt>sb<ept id=\"p2\">**</ept>), where <bpt id=\"p3\">**</bpt>sb<ept id=\"p3\">**</ept> is the stored object of class <bpt id=\"p4\">[</bpt>strstreambuf<ept id=\"p4\">](../standard-library/strstreambuf-class.md)</ept>.","pos":[4755,4986],"source":"Both constructors initialize the base class by calling [streambuf](../standard-library/streambuf-typedefs.md#streambuf)( **sb**), where **sb** is the stored object of class [strstreambuf](../standard-library/strstreambuf-class.md)."},{"content":"The first constructor also initializes <bpt id=\"p1\">**</bpt>sb<ept id=\"p1\">**</ept> by calling <bpt id=\"p2\">[</bpt>strstreambuf<ept id=\"p2\">](../standard-library/strstreambuf-class.md#strstreambuf__strstreambuf)</ept>.","pos":[4987,5129],"source":" The first constructor also initializes **sb** by calling [strstreambuf](../standard-library/strstreambuf-class.md#strstreambuf__strstreambuf)."},{"content":"The second constructor initializes the base class one of two ways:","pos":[5130,5196]},{"pos":[5206,5384],"content":"If <ph id=\"ph1\">`_Mode`</ph><ph id=\"ph2\"> &amp; </ph><bpt id=\"p1\">**</bpt>ios_base::app<ept id=\"p1\">**</ept>== 0, then <ph id=\"ph3\">`ptr`</ph> must designate the first element of an array of <ph id=\"ph4\">`count`</ph> elements, and the constructor calls <ph id=\"ph5\">`strstreambuf`</ph>( <ph id=\"ph6\">`ptr`</ph>, <ph id=\"ph7\">`count`</ph>, <ph id=\"ph8\">`ptr`</ph>).","source":"If `_Mode` & **ios_base::app**== 0, then `ptr` must designate the first element of an array of `count` elements, and the constructor calls `strstreambuf`( `ptr`, `count`, `ptr`)."},{"pos":[5394,5628],"content":"Otherwise, <ph id=\"ph1\">`ptr`</ph> must designate the first element of an array of count elements that contains a C string whose first element is designated by <ph id=\"ph2\">`ptr`</ph>, and the constructor calls <ph id=\"ph3\">`strstreambuf`</ph>( <ph id=\"ph4\">`ptr`</ph>, <ph id=\"ph5\">`count`</ph>, <ph id=\"ph6\">`ptr`</ph><ph id=\"ph7\"> + </ph><ph id=\"ph8\">`strlen`</ph>( <ph id=\"ph9\">`ptr`</ph>) ).","source":"Otherwise, `ptr` must designate the first element of an array of count elements that contains a C string whose first element is designated by `ptr`, and the constructor calls `strstreambuf`( `ptr`, `count`, `ptr` + `strlen`( `ptr`) )."},{"pos":[5637,5645],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>iostream<ept id=\"p1\">](../standard-library/istream-typedefs.md#iostream)</ept><ph id=\"ph1\"> </ph>","pos":[5649,5710],"source":"[iostream](../standard-library/istream-typedefs.md#iostream) "},{"content":"<bpt id=\"p1\"> [</bpt>Thread Safety in the C++ Standard Library<ept id=\"p1\">](../standard-library/thread-safety-in-the-cpp-standard-library.md)</ept><ph id=\"ph1\"> </ph>","pos":[5713,5824],"source":" [Thread Safety in the C++ Standard Library](../standard-library/thread-safety-in-the-cpp-standard-library.md) "},{"content":"<bpt id=\"p1\"> [</bpt>iostream Programming<ept id=\"p1\">](../standard-library/iostream-programming.md)</ept><ph id=\"ph1\"> </ph>","pos":[5827,5896],"source":" [iostream Programming](../standard-library/iostream-programming.md) "},{"content":"<bpt id=\"p1\"> [</bpt>iostreams Conventions<ept id=\"p1\">](../standard-library/iostreams-conventions.md)</ept>","pos":[5899,5969],"source":" [iostreams Conventions](../standard-library/iostreams-conventions.md)"}],"content":"---\ntitle: \"strstream Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"std::strstream\"\n  - \"strstream\"\n  - \"std.strstream\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"strstream class\"\nms.assetid: 63f3be31-9e36-42b1-9715-a474a5997e2a\ncaps.latest.revision: 21\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# strstream Class\nDescribes an object that controls insertion and extraction of elements and encoded objects using a stream buffer of class [strstreambuf](../standard-library/strstreambuf-class.md).  \n  \n## Syntax  \n  \n```\nclass strstream : public iostream\n```  \n  \n## Remarks  \n The object stores an object of class `strstreambuf`.  \n  \n> [!NOTE]\n>  This class is deprecated. Consider using [stringstream](../standard-library/sstream-typedefs.md#stringstream) or [wstringstream](../standard-library/sstream-typedefs.md#wstringstream) instead.  \n  \n### Constructors  \n  \n|||  \n|-|-|  \n|[strstream](#strstream__strstream)|Constructs an object of type `strstream`.|  \n  \n### Member Functions  \n  \n|||  \n|-|-|  \n|[freeze](#strstream__freeze)|Causes a stream buffer to be unavailable through stream buffer operations.|  \n|[pcount](#strstream__pcount)|Returns a count of the number of elements written to the controlled sequence.|  \n|[rdbuf](#strstream__rdbuf)|Returns a pointer to the stream's associated `strstreambuf` object.|  \n|[str](#strstream__str)|Calls [freeze](../standard-library/strstreambuf-class.md#strstreambuf__freeze), and then returns a pointer to the beginning of the controlled sequence.|  \n  \n## Requirements  \n **Header:** \\<strstream>  \n  \n **Namespace:** std  \n  \n##  <a name=\"strstream__freeze\"></a>  strstream::freeze  \n Causes a stream buffer to be unavailable through stream buffer operations.  \n  \n```\nvoid freeze(bool _Freezeit = true);\n```  \n  \n### Parameters  \n `_Freezeit`  \n A `bool` indicating whether you want the stream to be frozen.  \n  \n### Remarks  \n The member function calls [rdbuf](#strstream__rdbuf) -> [freeze](../standard-library/strstreambuf-class.md#strstreambuf__freeze)(_ *Freezeit*).  \n  \n### Example  \n  See [strstreambuf::freeze](../standard-library/strstreambuf-class.md#strstreambuf__freeze) for an example that uses **freeze**.  \n  \n##  <a name=\"strstream__pcount\"></a>  strstream::pcount  \n Returns a count of the number of elements written to the controlled sequence.  \n  \n```\nstreamsize pcount() const;\n```  \n  \n### Return Value  \n The number of elements written to the controlled sequence.  \n  \n### Remarks  \n The member function returns [rdbuf](#strstream__rdbuf) -> [pcount](../standard-library/strstreambuf-class.md#strstreambuf__pcount).  \n  \n### Example  \n  See [strstreambuf::pcount](../standard-library/strstreambuf-class.md#strstreambuf__pcount) for a sample of using pcount.  \n  \n##  <a name=\"strstream__rdbuf\"></a>  strstream::rdbuf  \n Returns a pointer to the stream's associated strstreambuf object.  \n  \n```\nstrstreambuf *rdbuf() const\n```  \n  \n### Return Value  \n A pointer to the stream's associated strstreambuf object.  \n  \n### Remarks  \n The member function returns the address of the stored stream buffer of type **pointer** to [strstreambuf](../standard-library/strstreambuf-class.md).  \n  \n### Example  \n  See [strstreambuf::pcount](../standard-library/strstreambuf-class.md#strstreambuf__pcount) for a sample that uses `rdbuf`.  \n  \n##  <a name=\"strstream__str\"></a>  strstream::str  \n Calls [freeze](../standard-library/strstreambuf-class.md#strstreambuf__freeze), and then returns a pointer to the beginning of the controlled sequence.  \n  \n```\nchar *str();\n```  \n  \n### Return Value  \n A pointer to the beginning of the controlled sequence.  \n  \n### Remarks  \n The member function returns [rdbuf](#strstream__rdbuf) -> [str](../standard-library/strstreambuf-class.md#strstreambuf__str).  \n  \n### Example  \n  See [strstreambuf::str](../standard-library/strstreambuf-class.md#strstreambuf__str) for a sample that uses **str**.  \n  \n##  <a name=\"strstream__strstream\"></a>  strstream::strstream  \n Constructs an object of type `strstream`.  \n  \n```\nstrstream();\n\nstrstream(char* ptr,\n    streamsize count,\n    ios_base::openmode _Mode = ios_base::in | ios_base::out);\n```  \n  \n### Parameters  \n `count`  \n The size of the buffer.  \n  \n `_Mode`  \n The input and output mode of the buffer. See [ios_base::openmode](../standard-library/ios-base-class.md#ios_base__openmode) for more information.  \n  \n `ptr`  \n The buffer.  \n  \n### Remarks  \n Both constructors initialize the base class by calling [streambuf](../standard-library/streambuf-typedefs.md#streambuf)( **sb**), where **sb** is the stored object of class [strstreambuf](../standard-library/strstreambuf-class.md). The first constructor also initializes **sb** by calling [strstreambuf](../standard-library/strstreambuf-class.md#strstreambuf__strstreambuf). The second constructor initializes the base class one of two ways:  \n  \n-   If `_Mode` & **ios_base::app**== 0, then `ptr` must designate the first element of an array of `count` elements, and the constructor calls `strstreambuf`( `ptr`, `count`, `ptr`).  \n  \n-   Otherwise, `ptr` must designate the first element of an array of count elements that contains a C string whose first element is designated by `ptr`, and the constructor calls `strstreambuf`( `ptr`, `count`, `ptr` + `strlen`( `ptr`) ).  \n  \n## See Also  \n [iostream](../standard-library/istream-typedefs.md#iostream)   \n [Thread Safety in the C++ Standard Library](../standard-library/thread-safety-in-the-cpp-standard-library.md)   \n [iostream Programming](../standard-library/iostream-programming.md)   \n [iostreams Conventions](../standard-library/iostreams-conventions.md)\n\n\n\n"}