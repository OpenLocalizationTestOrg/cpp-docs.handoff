{"nodes":[{"pos":[12,87],"content":"Understanding the Dependencies of a Visual C++ Application | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Understanding the Dependencies of a Visual C++ Application | Microsoft Docs","pos":[0,75]}]},{"content":"Understanding the Dependencies of a Visual C++ Application","pos":[889,947]},{"content":"To determine which <ph id=\"ph1\">[!INCLUDE[vcprvc](../build/includes/vcprvc_md.md)]</ph> libraries an application depends on, you can view the project properties.","pos":[948,1091],"source":"To determine which [!INCLUDE[vcprvc](../build/includes/vcprvc_md.md)] libraries an application depends on, you can view the project properties."},{"content":"(In Solution Explorer, right-click on the project and choose <bpt id=\"p1\">**</bpt>Properties<ept id=\"p1\">**</ept> to open the <bpt id=\"p2\">**</bpt>Property Pages<ept id=\"p2\">**</ept> dialog box.) You can also use the Dependency Walker (depends.exe), which gives a more comprehensive picture of the dependencies.","pos":[1092,1327],"source":" (In Solution Explorer, right-click on the project and choose **Properties** to open the **Property Pages** dialog box.) You can also use the Dependency Walker (depends.exe), which gives a more comprehensive picture of the dependencies."},{"content":"In the <bpt id=\"p1\">**</bpt>Property Pages<ept id=\"p1\">**</ept> dialog box, you can examine various pages under <bpt id=\"p2\">**</bpt>Configuration Properties<ept id=\"p2\">**</ept> to understand the dependencies.","pos":[1334,1468],"source":"In the **Property Pages** dialog box, you can examine various pages under **Configuration Properties** to understand the dependencies."},{"content":"For example, if your project uses the MFC libraries and you choose <bpt id=\"p1\">**</bpt>Use of MFC<ept id=\"p1\">**</ept>, <bpt id=\"p2\">**</bpt>Use MFC in a Shared DLL<ept id=\"p2\">**</ept> on the <bpt id=\"p3\">**</bpt>Configuration Properties<ept id=\"p3\">**</ept>, <bpt id=\"p4\">**</bpt>General<ept id=\"p4\">**</ept> page, your application at run time depends on MFC DLLs such as mfc<ph id=\"ph1\">\\&lt;</ph>version&gt;.dll.","pos":[1469,1710],"source":" For example, if your project uses the MFC libraries and you choose **Use of MFC**, **Use MFC in a Shared DLL** on the **Configuration Properties**, **General** page, your application at run time depends on MFC DLLs such as mfc\\<version>.dll."},{"content":"If your application doesn't use MFC, it might depend on the CRT library if you choose a <bpt id=\"p1\">**</bpt>Runtime Library<ept id=\"p1\">**</ept> value of <bpt id=\"p2\">**</bpt>Multi-threaded Debug DLL (/MDd)<ept id=\"p2\">**</ept> or <bpt id=\"p3\">**</bpt>Multi-threaded DLL (/MD)<ept id=\"p3\">**</ept> on the <bpt id=\"p4\">**</bpt>Configuration Properties<ept id=\"p4\">**</ept>, <bpt id=\"p5\">**</bpt>C/C++<ept id=\"p5\">**</ept>, <bpt id=\"p6\">**</bpt>Code Generation<ept id=\"p6\">**</ept> page.","pos":[1711,1969],"source":" If your application doesn't use MFC, it might depend on the CRT library if you choose a **Runtime Library** value of **Multi-threaded Debug DLL (/MDd)** or **Multi-threaded DLL (/MD)** on the **Configuration Properties**, **C/C++**, **Code Generation** page."},{"content":"A more comprehensive way to determine which DLLs your application depends on is to use Dependency Walker (depends.exe) to open the application.","pos":[1976,2119]},{"content":"You can download the tool from the <bpt id=\"p1\">[</bpt>Dependency Walker<ept id=\"p1\">](http://go.microsoft.com/fwlink/p/?LinkId=132640)</ept> web site.","pos":[2120,2233],"source":" You can download the tool from the [Dependency Walker](http://go.microsoft.com/fwlink/p/?LinkId=132640) web site."},{"content":"By using depends.exe, you can examine a list of DLLs that are linked to the application at load time, and a list of its delay-loaded DLLs.","pos":[2240,2378]},{"content":"If you want to get a complete list of DLLs that are dynamically loaded at run time, you can use the profiling feature in depends.exe to test the application until you're sure that all code paths have been exercised.","pos":[2379,2594]},{"content":"When you end the profiling session, depends.exe shows which DLLs were dynamically loaded during run time.","pos":[2595,2700]},{"content":"When you use depends.exe, be aware that a DLL might have a dependency on another DLL or on a specific version of a DLL.","pos":[2707,2826]},{"content":"You can use depends.exe on either the development computer or on a target computer.","pos":[2827,2910]},{"content":"On the development computer, depends.exe reports the DLLs that are required to support an application.","pos":[2911,3013]},{"content":"If you have trouble getting an application to run on a target computer, you can copy depends.exe to it and then open the application in the tool so that you can determine whether any required DLLs are missing or incorrect.","pos":[3014,3236]},{"content":"When you know which DLLs your application depends on, you can determine the ones that you have to redistribute with your application when you deploy it to another computer.","pos":[3243,3415]},{"content":"In most cases, you don't have to redistribute system DLLs, but you may have to redistribute DLLs for <ph id=\"ph1\">[!INCLUDE[vcprvc](../build/includes/vcprvc_md.md)]</ph> libraries.","pos":[3416,3578],"source":" In most cases, you don't have to redistribute system DLLs, but you may have to redistribute DLLs for [!INCLUDE[vcprvc](../build/includes/vcprvc_md.md)] libraries."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Determining Which DLLs to Redistribute<ept id=\"p1\">](../ide/determining-which-dlls-to-redistribute.md)</ept>.","pos":[3579,3696],"source":" For more information, see [Determining Which DLLs to Redistribute](../ide/determining-which-dlls-to-redistribute.md)."},{"content":"See Also","pos":[3705,3713]},{"content":"Deploying Desktop Applications","pos":[3718,3748]}],"content":"---\ntitle: \"Understanding the Dependencies of a Visual C++ Application | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"application deployment [C++], dependencies\"\n  - \"Dependency Walker\"\n  - \"dependencies [C++], application deployment and\"\n  - \"deploying applications [C++], dependencies\"\n  - \"DUMPBIN utility\"\n  - \"DLLs [C++], dependencies\"\n  - \"depends.exe\"\n  - \"libraries [C++], application deployment issues\"\nms.assetid: 62a44c95-c389-4c5f-82fd-07d7ef09dbf9\ncaps.latest.revision: 20\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Understanding the Dependencies of a Visual C++ Application\nTo determine which [!INCLUDE[vcprvc](../build/includes/vcprvc_md.md)] libraries an application depends on, you can view the project properties. (In Solution Explorer, right-click on the project and choose **Properties** to open the **Property Pages** dialog box.) You can also use the Dependency Walker (depends.exe), which gives a more comprehensive picture of the dependencies.  \n  \n In the **Property Pages** dialog box, you can examine various pages under **Configuration Properties** to understand the dependencies. For example, if your project uses the MFC libraries and you choose **Use of MFC**, **Use MFC in a Shared DLL** on the **Configuration Properties**, **General** page, your application at run time depends on MFC DLLs such as mfc\\<version>.dll. If your application doesn't use MFC, it might depend on the CRT library if you choose a **Runtime Library** value of **Multi-threaded Debug DLL (/MDd)** or **Multi-threaded DLL (/MD)** on the **Configuration Properties**, **C/C++**, **Code Generation** page.  \n  \n A more comprehensive way to determine which DLLs your application depends on is to use Dependency Walker (depends.exe) to open the application. You can download the tool from the [Dependency Walker](http://go.microsoft.com/fwlink/p/?LinkId=132640) web site.  \n  \n By using depends.exe, you can examine a list of DLLs that are linked to the application at load time, and a list of its delay-loaded DLLs. If you want to get a complete list of DLLs that are dynamically loaded at run time, you can use the profiling feature in depends.exe to test the application until you're sure that all code paths have been exercised. When you end the profiling session, depends.exe shows which DLLs were dynamically loaded during run time.  \n  \n When you use depends.exe, be aware that a DLL might have a dependency on another DLL or on a specific version of a DLL. You can use depends.exe on either the development computer or on a target computer. On the development computer, depends.exe reports the DLLs that are required to support an application. If you have trouble getting an application to run on a target computer, you can copy depends.exe to it and then open the application in the tool so that you can determine whether any required DLLs are missing or incorrect.  \n  \n When you know which DLLs your application depends on, you can determine the ones that you have to redistribute with your application when you deploy it to another computer. In most cases, you don't have to redistribute system DLLs, but you may have to redistribute DLLs for [!INCLUDE[vcprvc](../build/includes/vcprvc_md.md)] libraries. For more information, see [Determining Which DLLs to Redistribute](../ide/determining-which-dlls-to-redistribute.md).  \n  \n## See Also  \n [Deploying Desktop Applications](../ide/deploying-native-desktop-applications-visual-cpp.md)"}