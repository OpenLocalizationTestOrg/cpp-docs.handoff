{"nodes":[{"pos":[12,53],"content":"ICommandSource Interface | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"ICommandSource Interface | Microsoft Docs","pos":[0,41]}]},{"content":"ICommandSource Interface","pos":[624,648]},{"content":"Manages commands sent from a command source object to a user control.","pos":[649,718]},{"content":"Syntax","pos":[727,733]},{"content":"Members","pos":[790,797]},{"content":"Public Methods","pos":[807,821]},{"content":"Name","pos":[828,832]},{"content":"Description","pos":[833,844]},{"content":"ICommandSource::AddCommandHandler","pos":[883,916]},{"content":"Adds a command handler to a command source object.","pos":[954,1004]},{"content":"ICommandSource::AddCommandRangeHandler","pos":[1010,1048]},{"content":"Adds a group of command handlers to a command source object.","pos":[1091,1151]},{"content":"ICommandSource::AddCommandRangeUIHandler","pos":[1157,1197]},{"content":"Adds a group of user interface command message handlers to a command source object.","pos":[1242,1325]},{"content":"ICommandSource::AddCommandUIHandler","pos":[1331,1366]},{"content":"Adds a user interface command message handler to a command source object.","pos":[1411,1484]},{"content":"ICommandSource::PostCommand","pos":[1490,1517]},{"content":"Posts a message without waiting for it to be processed.","pos":[1549,1604]},{"content":"ICommandSource::RemoveCommandHandler","pos":[1610,1646]},{"content":"Removes a command handler from a command source object.","pos":[1687,1742]},{"content":"ICommandSource::RemoveCommandRangeHandler","pos":[1748,1789]},{"content":"Removes a group of command handlers from a command source object.","pos":[1835,1900]},{"content":"ICommandSource::RemoveCommandRangeUIHandler","pos":[1906,1949]},{"content":"Removes a group of user interface command message handlers from a command source object.","pos":[1997,2085]},{"content":"ICommandSource::RemoveCommandUIHandler","pos":[2091,2129]},{"content":"Removes a user interface command message handler from a command source object.","pos":[2177,2255]},{"content":"ICommandSource::SendCommand","pos":[2261,2288]},{"content":"Sends a message and waits for it to be processed before returning.","pos":[2320,2386]},{"content":"Remarks","pos":[2397,2404]},{"content":"When you host a user control in an MFC View, <bpt id=\"p1\">[</bpt>CWinFormsView Class<ept id=\"p1\">](../../mfc/reference/cwinformsview-class.md)</ept> routes commands and update command UI messages to the user control to allow it to handle MFC commands (for example, frame menu items and toolbar buttons).","pos":[2408,2673],"source":"When you host a user control in an MFC View, [CWinFormsView Class](../../mfc/reference/cwinformsview-class.md) routes commands and update command UI messages to the user control to allow it to handle MFC commands (for example, frame menu items and toolbar buttons)."},{"content":"By implementing <bpt id=\"p1\">[</bpt>ICommandTarget Interface<ept id=\"p1\">](../../mfc/reference/icommandtarget-interface.md)</ept>, you give the user control a reference to the <ph id=\"ph1\">`ICommandSource`</ph> object.","pos":[2674,2836],"source":" By implementing [ICommandTarget Interface](../../mfc/reference/icommandtarget-interface.md), you give the user control a reference to the `ICommandSource` object."},{"pos":[2843,3025],"content":"See <bpt id=\"p1\">[</bpt>How to: Add Command Routing to the Windows Forms Control<ept id=\"p1\">](../../dotnet/how-to-add-command-routing-to-the-windows-forms-control.md)</ept> for an example of how to use <ph id=\"ph1\">`ICommandTarget`</ph>.","source":"See [How to: Add Command Routing to the Windows Forms Control](../../dotnet/how-to-add-command-routing-to-the-windows-forms-control.md) for an example of how to use `ICommandTarget`."},{"pos":[3032,3182],"content":"For more information on using Windows Forms, see <bpt id=\"p1\">[</bpt>Using a Windows Form User Control in MFC<ept id=\"p1\">](../../dotnet/using-a-windows-form-user-control-in-mfc.md)</ept>.","source":"For more information on using Windows Forms, see [Using a Windows Form User Control in MFC](../../dotnet/using-a-windows-form-user-control-in-mfc.md)."},{"content":"Requirements","pos":[3192,3204]},{"pos":[3208,3280],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> afxwinforms.h (defined in assembly atlmfc\\lib\\mfcmifc80.dll)","source":"**Header:** afxwinforms.h (defined in assembly atlmfc\\lib\\mfcmifc80.dll)"},{"pos":[3339,3372],"content":"ICommandSource::AddCommandHandler"},{"content":"Adds a command handler to a command source object.","pos":[3373,3423]},{"content":"Parameters","pos":[3518,3528]},{"content":"The command ID.","pos":[3541,3556]},{"content":"A handle to the command handler method.","pos":[3574,3613]},{"content":"Remarks","pos":[3619,3626]},{"content":"This method adds the command handler cmdHandler to the command source object and maps the handler to cmdID.","pos":[3627,3734]},{"content":"See <bpt id=\"p1\">[</bpt>How to: Add Command Routing to the Windows Forms Control<ept id=\"p1\">](https://msdn.microsoft.com/library/y33d8624.aspx)</ept> for an example of how to use AddCommandHandler.","pos":[3735,3895],"source":"\nSee [How to: Add Command Routing to the Windows Forms Control](https://msdn.microsoft.com/library/y33d8624.aspx) for an example of how to use AddCommandHandler."},{"pos":[3954,3992],"content":"ICommandSource::AddCommandRangeHandler"},{"content":"Adds a group of command handlers to a command source object.","pos":[3994,4054]},{"content":"Parameters","pos":[4183,4193]},{"content":"The beginning index of the command ID range.","pos":[4209,4253]},{"content":"The ending index of the command ID range.","pos":[4267,4308]},{"content":"A handle to the message handler method to which the commands are mapped.","pos":[4324,4396]},{"content":"Remarks","pos":[4401,4408]},{"content":"This method maps a contiguous range of command IDs to a single message handler and adds it to the command source object.","pos":[4409,4529]},{"content":"This is used for handling a group of related buttons with one method.","pos":[4530,4599]},{"pos":[4660,4700],"content":"ICommandSource::AddCommandRangeUIHandler"},{"content":"Adds a group of user interface command message handlers to a command source object.","pos":[4701,4784]},{"content":"Parameters","pos":[4921,4931]},{"content":"The beginning index of the command ID range.","pos":[4947,4991]},{"content":"The ending index of the command ID range.","pos":[5005,5046]},{"content":"A handle to the message handler method to which the commands are mapped.","pos":[5062,5134]},{"content":"Remarks","pos":[5140,5147]},{"content":"This method maps a contiguous range of command IDs to a single user interface command message handler and adds it to the command source object.","pos":[5148,5291]},{"content":"This is used for handling a group of related buttons with one method.","pos":[5292,5361]},{"pos":[5417,5452],"content":"ICommandSource::AddCommandUIHandler"},{"content":"Adds a user interface command message handler to a command source object.","pos":[5453,5526]},{"content":"Parameters","pos":[5627,5637]},{"content":"The command ID.","pos":[5648,5663]},{"content":"A handle to the user interface command message handler method.","pos":[5683,5745]},{"content":"Remarks","pos":[5751,5758]},{"content":"This method adds the user interface command message handler cmdHandler to the command source object and maps the handler to cmdID.","pos":[5759,5889]},{"pos":[5937,5964],"content":"ICommandSource::PostCommand"},{"content":"Posts a message without waiting for it to be processed.","pos":[5965,6020]},{"content":"Parameters","pos":[6073,6083]},{"content":"The command ID of the message to be posted.","pos":[6096,6139]},{"content":"Remarks","pos":[6144,6151]},{"content":"This method asynchronously posts the message mapped to the ID specified by command.","pos":[6152,6235]},{"content":"It calls CWnd::PostMessage to place the message in the window's message queue and then returns without waiting for the corresponding window to process the message.","pos":[6236,6399]},{"pos":[6457,6493],"content":"ICommandSource::RemoveCommandHandler"},{"content":"Removes a command handler from a command source object.","pos":[6494,6549]},{"content":"Parameters","pos":[6609,6619]},{"content":"The command ID.","pos":[6630,6645]},{"content":"Remarks","pos":[6650,6657]},{"content":"This method removes the command handler mapped to cmdID from the command source object.","pos":[6658,6745]},{"pos":[6815,6856],"content":"ICommandSource::RemoveCommandRangeHandler"},{"content":"Removes a group of command handlers from a command source object.","pos":[6858,6923]},{"content":"Parameters","pos":[7025,7035]},{"content":"The beginning index of the command ID range.","pos":[7049,7093]},{"content":"The ending index of the command ID range.","pos":[7107,7148]},{"content":"Remarks","pos":[7153,7160]},{"content":"This method removes a group of message handlers, mapped to the command IDs specifed by cmdIDMin and cmdIDMax, from the command source object.","pos":[7161,7302]},{"pos":[7366,7409],"content":"ICommandSource::RemoveCommandRangeUIHandler"},{"content":"Removes a group of user interface command message handlers from a command source object.","pos":[7411,7499]},{"content":"Parameters","pos":[7601,7611]},{"content":"The beginning index of the command ID range.","pos":[7625,7669]},{"content":"The ending index of the command ID range.","pos":[7683,7724]},{"content":"Remarks","pos":[7729,7736]},{"content":"This method removes a group of user interface command message handlers, mapped to the command IDs specifed by cmdIDMin and cmdIDMax, from the command source object.","pos":[7737,7901]},{"pos":[7960,7998],"content":"ICommandSource::RemoveCommandUIHandler"},{"content":"Removes a user interface command message handler from a command source object.","pos":[8000,8078]},{"content":"Parameters","pos":[8140,8150]},{"content":"The command ID.","pos":[8161,8176]},{"content":"Remarks","pos":[8181,8188]},{"content":"This method removes the user interface command message handler mapped to cmdID from the command source object.","pos":[8189,8299]},{"pos":[8347,8374],"content":"ICommandSource::SendCommand"},{"content":"Sends a message and waits for it to be processed before returning.","pos":[8376,8442]},{"content":"Parameters","pos":[8495,8505]},{"content":"The command ID of the message to be sent.","pos":[8518,8559]},{"content":"Remarks","pos":[8564,8571]},{"content":"This method synchronously sends the message mapped to the ID specified by command.","pos":[8572,8654]},{"content":"It calls CWnd::SendMessage to place the message in the window's message queue and waits until that window procedure has processed the message before returning.","pos":[8655,8814]},{"content":"See Also","pos":[8818,8826]},{"content":"How to: Add Command Routing to the Windows Forms Control","pos":[8831,8887]},{"content":"ICommandTarget Interface","pos":[8967,8991]}],"content":"---\ntitle: \"ICommandSource Interface | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"ICommandSource\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"ICommandSource interface\"\nms.assetid: a4b1f698-c09f-4ba8-9b13-0e74a0a4967e\ncaps.latest.revision: 24\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# ICommandSource Interface\nManages commands sent from a command source object to a user control.  \n  \n## Syntax  \n  \n```  \ninterface class ICommandSource  \n```  \n  \n## Members  \n  \n### Public Methods  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[ICommandSource::AddCommandHandler](#icommandsource__addcommandhandler)|Adds a command handler to a command source object.|  \n|[ICommandSource::AddCommandRangeHandler](#icommandsource__addcommandrangehandler)|Adds a group of command handlers to a command source object.|  \n|[ICommandSource::AddCommandRangeUIHandler](#icommandsource__addcommandrangeuihandler)|Adds a group of user interface command message handlers to a command source object.|  \n|[ICommandSource::AddCommandUIHandler](#icommandsource__addcommandrangeuihandler)|Adds a user interface command message handler to a command source object.|  \n|[ICommandSource::PostCommand](#icommandsource__postcommand)|Posts a message without waiting for it to be processed.|  \n|[ICommandSource::RemoveCommandHandler](#icommandsource__removecommandhandler)|Removes a command handler from a command source object.|  \n|[ICommandSource::RemoveCommandRangeHandler](#icommandsource__removecommandrangehandler)|Removes a group of command handlers from a command source object.|  \n|[ICommandSource::RemoveCommandRangeUIHandler](#icommandsource__removecommandrangeuihandler)|Removes a group of user interface command message handlers from a command source object.|  \n|[ICommandSource::RemoveCommandUIHandler](#icommandsource__removecommandrangeuihandler)|Removes a user interface command message handler from a command source object.|  \n|[ICommandSource::SendCommand](#icommandsource__sendcommand)|Sends a message and waits for it to be processed before returning.|  \n  \n### Remarks  \n When you host a user control in an MFC View, [CWinFormsView Class](../../mfc/reference/cwinformsview-class.md) routes commands and update command UI messages to the user control to allow it to handle MFC commands (for example, frame menu items and toolbar buttons). By implementing [ICommandTarget Interface](../../mfc/reference/icommandtarget-interface.md), you give the user control a reference to the `ICommandSource` object.  \n  \n See [How to: Add Command Routing to the Windows Forms Control](../../dotnet/how-to-add-command-routing-to-the-windows-forms-control.md) for an example of how to use `ICommandTarget`.  \n  \n For more information on using Windows Forms, see [Using a Windows Form User Control in MFC](../../dotnet/using-a-windows-form-user-control-in-mfc.md).  \n  \n### Requirements  \n **Header:** afxwinforms.h (defined in assembly atlmfc\\lib\\mfcmifc80.dll)  \n  \n## <a name=\"icommandsource__addcommandhandler\"></a>  ICommandSource::AddCommandHandler\nAdds a command handler to a command source object.\n```\nvoid AddCommandHandler(\n    unsigned int cmdID,\n    CommandHandler^ cmdHandler);\n```\n\n### Parameters  \n`cmdID`  \nThe command ID.  \n`cmdHandler`  \nA handle to the command handler method.\n\n### Remarks\nThis method adds the command handler cmdHandler to the command source object and maps the handler to cmdID.\nSee [How to: Add Command Routing to the Windows Forms Control](https://msdn.microsoft.com/library/y33d8624.aspx) for an example of how to use AddCommandHandler.\n\n## <a name=\"icommandsource__addcommandrangehandler\"></a> ICommandSource::AddCommandRangeHandler\n\nAdds a group of command handlers to a command source object.\n```\nvoid AddCommandRangeHandler(\n    unsigned int cmdIDMin,\n    unsigned int cmdIDMax,\n    CommandHandler^ cmdHandler);\n```\n### Parameters  \n`cmdIDMin`  \nThe beginning index of the command ID range.\n`cmdIDMax`  \nThe ending index of the command ID range.\n`cmdHandler`  \nA handle to the message handler method to which the commands are mapped.\n### Remarks\nThis method maps a contiguous range of command IDs to a single message handler and adds it to the command source object. This is used for handling a group of related buttons with one method.\n\n## <a name=\"icommandsource__addcommandrangeuihandler\"></a> ICommandSource::AddCommandRangeUIHandler\nAdds a group of user interface command message handlers to a command source object.\n```\nvoid AddCommandRangeUIHandler(\n    unsigned int cmdIDMin, \n    unsigned int cmdIDMax, \n    CommandUIHandler^ cmdUIHandler);\n```\n### Parameters  \n`cmdIDMin`  \nThe beginning index of the command ID range.\n`cmdIDMax`  \nThe ending index of the command ID range.\n`cmdHandler`  \nA handle to the message handler method to which the commands are mapped.\n\n### Remarks\nThis method maps a contiguous range of command IDs to a single user interface command message handler and adds it to the command source object. This is used for handling a group of related buttons with one method.\n\n## <a name=\"icommandsource__addcommanduihandler\"></a> ICommandSource::AddCommandUIHandler\nAdds a user interface command message handler to a command source object.\n```\nvoid AddCommandUIHandler(\n    unsigned int cmdID, \n    CommandUIHandler^ cmdUIHandler);\n```\n### Parameters\n`cmdID`  \nThe command ID.  \n`cmdUIHandler`  \nA handle to the user interface command message handler method.\n\n### Remarks\nThis method adds the user interface command message handler cmdHandler to the command source object and maps the handler to cmdID.\n\n## <a name=\"icommandsource__postcommand\"></a> ICommandSource::PostCommand\nPosts a message without waiting for it to be processed.\n```\nvoid PostCommand(unsigned int command);\n```\n### Parameters\n`command`  \nThe command ID of the message to be posted.\n### Remarks\nThis method asynchronously posts the message mapped to the ID specified by command. It calls CWnd::PostMessage to place the message in the window's message queue and then returns without waiting for the corresponding window to process the message.\n\n\n## <a name=\"icommandsource__removecommandhandler\"></a> ICommandSource::RemoveCommandHandler\nRemoves a command handler from a command source object.\n```\nvoid RemoveCommandHandler(unsigned int cmdID);\n```\n### Parameters\n`cmdID`  \nThe command ID.\n### Remarks\nThis method removes the command handler mapped to cmdID from the command source object.\n\n\n## <a name=\"icommandsource__removecommandrangecommandhandler\"></a> ICommandSource::RemoveCommandRangeHandler \nRemoves a group of command handlers from a command source object.\n```\nvoid RemoveCommandRangeUIHandler(\n    unsigned int cmdIDMin,\n    unsigned int cmdIDMax);\n```\n### Parameters\n`cmdIDMin`  \nThe beginning index of the command ID range.\n`cmdIDMax`  \nThe ending index of the command ID range.\n### Remarks\nThis method removes a group of message handlers, mapped to the command IDs specifed by cmdIDMin and cmdIDMax, from the command source object.\n\n## <a name=\"icommandsource__removecommandrangeuihandler\"></a> ICommandSource::RemoveCommandRangeUIHandler \nRemoves a group of user interface command message handlers from a command source object.\n```\nvoid RemoveCommandRangeUIHandler(\n    unsigned int cmdIDMin,\n    unsigned int cmdIDMax);\n```\n### Parameters\n`cmdIDMin`  \nThe beginning index of the command ID range.\n`cmdIDMax`  \nThe ending index of the command ID range.\n### Remarks\nThis method removes a group of user interface command message handlers, mapped to the command IDs specifed by cmdIDMin and cmdIDMax, from the command source object.\n\n## <a name=\"icommandsource__removecommanduihandler\"></a> ICommandSource::RemoveCommandUIHandler \nRemoves a user interface command message handler from a command source object.\n```\nvoid RemoveCommandUIHandler(unsigned int cmdID);\n```\n### Parameters\n`cmdID`  \nThe command ID.\n### Remarks\nThis method removes the user interface command message handler mapped to cmdID from the command source object.\n\n## <a name=\"icommandsource__sendcommand\"></a> ICommandSource::SendCommand \nSends a message and waits for it to be processed before returning.\n```\nvoid SendCommand(unsigned int command);\n```\n### Parameters\n`command`  \nThe command ID of the message to be sent.\n### Remarks\nThis method synchronously sends the message mapped to the ID specified by command. It calls CWnd::SendMessage to place the message in the window's message queue and waits until that window procedure has processed the message before returning.\n## See Also  \n [How to: Add Command Routing to the Windows Forms Control](../../dotnet/how-to-add-command-routing-to-the-windows-forms-control.md)   \n [ICommandTarget Interface](../../mfc/reference/icommandtarget-interface.md)\n"}