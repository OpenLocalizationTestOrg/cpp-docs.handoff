{"nodes":[{"pos":[12,52],"content":"map::key_type (STL-CLR) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"map::key_type (STL-CLR) | Microsoft Docs","pos":[0,40]}]},{"content":"map::key_type (STL/CLR)","pos":[631,654]},{"content":"The type of an ordering key.","pos":[655,683]},{"content":"Syntax","pos":[692,698]},{"content":"Remarks","pos":[746,753]},{"pos":[757,812],"content":"The type is a synonym for the template parameter <ph id=\"ph1\">`Key`</ph>.","source":"The type is a synonym for the template parameter `Key`."},{"content":"Example","pos":[821,828]},{"content":"Requirements","pos":[1541,1553]},{"pos":[1557,1582],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> <ph id=\"ph1\">\\&lt;</ph>cliext/map&gt;","source":"**Header:** \\<cliext/map>"},{"pos":[1589,1610],"content":"<bpt id=\"p1\">**</bpt>Namespace:<ept id=\"p1\">**</ept> cliext","source":"**Namespace:** cliext"},{"content":"See Also","pos":[1619,1627]},{"content":"map (STL/CLR)","pos":[1632,1645]},{"content":"map::key_compare (STL/CLR)","pos":[1678,1704]},{"content":"map::mapped_type (STL/CLR)","pos":[1749,1775]},{"content":"map::value_type (STL/CLR)","pos":[1820,1845]}],"content":"---\ntitle: \"map::key_type (STL-CLR) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"cliext::map::key_type\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"key_type member [STL/CLR]\"\nms.assetid: 5bcf92e4-d9ff-48a2-86da-e24842ccf80c\ncaps.latest.revision: 13\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# map::key_type (STL/CLR)\nThe type of an ordering key.  \n  \n## Syntax  \n  \n```  \ntypedef Key key_type;  \n```  \n  \n## Remarks  \n The type is a synonym for the template parameter `Key`.  \n  \n## Example  \n  \n```  \n// cliext_map_key_type.cpp   \n// compile with: /clr   \n#include <cliext/map>   \n  \ntypedef cliext::map<wchar_t, int> Mymap;   \nint main()   \n    {   \n    Mymap c1;   \n    c1.insert(Mymap::make_value(L'a', 1));   \n    c1.insert(Mymap::make_value(L'b', 2));   \n    c1.insert(Mymap::make_value(L'c', 3));   \n  \n// display contents \" [a 1] [b 2] [c 3]\" using key_type   \n    for (Mymap::iterator it = c1.begin(); it != c1.end(); ++it)   \n        {   // store element in key_type object   \n        Mymap::key_type val = it->first;   \n  \n        System::Console::Write(\" {0}\", val);   \n        }   \n    System::Console::WriteLine();   \n    return (0);   \n    }  \n  \n```  \n  \n```Output  \na b c  \n```  \n  \n## Requirements  \n **Header:** \\<cliext/map>  \n  \n **Namespace:** cliext  \n  \n## See Also  \n [map (STL/CLR)](../dotnet/map-stl-clr.md)   \n [map::key_compare (STL/CLR)](../dotnet/map-key-compare-stl-clr.md)   \n [map::mapped_type (STL/CLR)](../dotnet/map-mapped-type-stl-clr.md)   \n [map::value_type (STL/CLR)](../dotnet/map-value-type-stl-clr.md)"}