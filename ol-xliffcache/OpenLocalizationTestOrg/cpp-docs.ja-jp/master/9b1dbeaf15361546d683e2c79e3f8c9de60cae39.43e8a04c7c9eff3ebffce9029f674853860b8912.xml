{"nodes":[{"pos":[12,49],"content":"Compiler Error C2064 | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Compiler Error C2064 | Microsoft Docs","pos":[0,37]}]},{"pos":[597,617],"content":"Compiler Error C2064","linkify":"Compiler Error C2064","nodes":[{"content":"Compiler Error C2064","pos":[0,20]}]},{"content":"term does not evaluate to a function taking N arguments","pos":[618,673]},{"content":"A call is made to a function through an expression.","pos":[680,731]},{"content":"The expression does not evaluate to a pointer to a function that takes the specified number of arguments.","pos":[732,837]},{"content":"In this example, the code attempts to call non-functions as functions.","pos":[844,914]},{"content":"The following sample generates C2064:","pos":[915,952]},{"content":"You must call pointers to non-static member functions from the context of an object instance.","pos":[1136,1229]},{"content":"The following sample generates C2064, and shows how to fix it:","pos":[1230,1292]},{"content":"Within a class, member function pointers must also indicate the calling object context.","pos":[1612,1699]},{"content":"The following sample generates C2064 and shows how to fix it:","pos":[1700,1761]}],"content":"---\ntitle: \"Compiler Error C2064 | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"error-reference\"\nf1_keywords: \n  - \"C2064\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"C2064\"\nms.assetid: 6cda05da-f437-4f50-9813-ae69538713a3\ncaps.latest.revision: 9\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Compiler Error C2064\nterm does not evaluate to a function taking N arguments  \n  \n A call is made to a function through an expression. The expression does not evaluate to a pointer to a function that takes the specified number of arguments.  \n  \n In this example, the code attempts to call non-functions as functions. The following sample generates C2064:  \n  \n```  \n// C2064.cpp  \nint i, j;  \nchar* p;  \nvoid func() {  \n   j = i();    // C2064, i is not a function  \n   p();        // C2064, p doesn't point to a function  \n}  \n```  \n  \n You must call pointers to non-static member functions from the context of an object instance. The following sample generates C2064, and shows how to fix it:  \n  \n```  \n// C2064b.cpp  \nstruct C {  \n   void func1(){}  \n   void func2(){}  \n};  \n  \ntypedef void (C::*pFunc)();  \n  \nint main() {  \n   C c;  \n   pFunc funcArray[2] = {&C::func1, &C::func2};  \n   (funcArray[0])();    // C2064   \n   (c.*funcArray[0])(); // OK - function called in instance context  \n}  \n  \n```  \n  \n Within a class, member function pointers must also indicate the calling object context. The following sample generates C2064 and shows how to fix it:  \n  \n```  \n// C2064d.cpp  \n// Compile by using: cl /c /W4 C2064d.cpp  \nstruct C {  \n   typedef void (C::*pFunc)();  \n   pFunc funcArray[2];  \n   void func1(){}  \n   void func2(){}  \n   C() {  \n      funcArray[0] = &C::func1;  \n      funcArray[1] = &C::func2;  \n   }  \n   void func3() {  \n      (funcArray[0])();   // C2064  \n      (this->*funcArray[0])(); // OK - called in this instance context  \n   }  \n};  \n```"}