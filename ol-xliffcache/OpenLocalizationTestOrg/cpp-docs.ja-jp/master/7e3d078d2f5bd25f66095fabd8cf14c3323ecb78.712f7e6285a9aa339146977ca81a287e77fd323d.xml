{"nodes":[{"pos":[12,34],"content":"_cabs | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"_cabs | Microsoft Docs","pos":[0,22]}]},{"pos":[1040,1045],"content":"_cabs","linkify":"_cabs","nodes":[{"content":"_cabs","pos":[0,5]}]},{"content":"Calculates the absolute value of a complex number.","pos":[1046,1096]},{"pos":[1105,1111],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[1183,1193],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Complex number.","pos":[1204,1219]},{"pos":[1228,1240],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"<ph id=\"ph1\">`_cabs`</ph> returns the absolute value of its argument if successful.","pos":[1244,1309],"source":"`_cabs` returns the absolute value of its argument if successful."},{"content":"On overflow, <ph id=\"ph1\">`_cabs`</ph> returns <ph id=\"ph2\">`HUGE_VAL`</ph> and sets <ph id=\"ph3\">`errno`</ph> to <ph id=\"ph4\">`ERANGE`</ph>.","pos":[1310,1379],"source":" On overflow, `_cabs` returns `HUGE_VAL` and sets `errno` to `ERANGE`."},{"content":"You can change error handling with <bpt id=\"p1\">[</bpt>_matherr<ept id=\"p1\">](../../c-runtime-library/reference/matherr.md)</ept>.","pos":[1380,1472],"source":" You can change error handling with [_matherr](../../c-runtime-library/reference/matherr.md)."},{"pos":[1481,1488],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The <ph id=\"ph1\">`_cabs`</ph> function calculates the absolute value of a complex number, which must be a structure of type <bpt id=\"p1\">[</bpt>_complex<ept id=\"p1\">](../../c-runtime-library/standard-types.md)</ept>.","pos":[1492,1652],"source":"The `_cabs` function calculates the absolute value of a complex number, which must be a structure of type [_complex](../../c-runtime-library/standard-types.md)."},{"content":"The structure <ph id=\"ph1\">`z`</ph> is composed of a real component <ph id=\"ph2\">`x`</ph> and an imaginary component <ph id=\"ph3\">`y`</ph>.","pos":[1653,1738],"source":" The structure `z` is composed of a real component `x` and an imaginary component `y`."},{"content":"A call to <ph id=\"ph1\">`_cabs`</ph> produces a value equivalent to that of the expression <ph id=\"ph2\">`sqrt`</ph>( <ph id=\"ph3\">`z.x``*``z.x``+``z.y`</ph><ph id=\"ph4\">*</ph><ph id=\"ph5\">`z.y`</ph> ).","pos":[1739,1849],"source":" A call to `_cabs` produces a value equivalent to that of the expression `sqrt`( `z.x``*``z.x``+``z.y`*`z.y` )."},{"pos":[1858,1870],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"content":"Routine","pos":[1877,1884]},{"content":"Required header","pos":[1885,1900]},{"content":"<ph id=\"ph1\">\\&lt;</ph>math.h&gt;","pos":[1953,1962],"source":"\\<math.h>"},{"pos":[1970,2088],"content":"For more compatibility information, see <bpt id=\"p1\">[</bpt>Compatibility<ept id=\"p1\">](../../c-runtime-library/compatibility.md)</ept> in the Introduction.","source":"For more compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md) in the Introduction."},{"pos":[2097,2104],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[2567,2592],"content":".NET Framework Equivalent","linkify":".NET Framework Equivalent","nodes":[{"content":".NET Framework Equivalent","pos":[0,25]}]},{"content":"Not applicable.","pos":[2596,2611]},{"content":"To call the standard C function, use <ph id=\"ph1\">`PInvoke`</ph>.","pos":[2612,2659],"source":" To call the standard C function, use `PInvoke`."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Platform Invoke Examples<ept id=\"p1\">](http://msdn.microsoft.com/Library/15926806-f0b7-487e-93a6-4e9367ec689f)</ept>.","pos":[2660,2785],"source":" For more information, see [Platform Invoke Examples](http://msdn.microsoft.com/Library/15926806-f0b7-487e-93a6-4e9367ec689f)."},{"pos":[2794,2802],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Floating-Point Support<ept id=\"p1\">](../../c-runtime-library/floating-point-support.md)</ept><ph id=\"ph1\"> </ph>","pos":[2806,2882],"source":"[Floating-Point Support](../../c-runtime-library/floating-point-support.md) "},{"content":"<bpt id=\"p1\"> [</bpt>abs, labs, llabs, _abs64<ept id=\"p1\">](../../c-runtime-library/reference/abs-labs-llabs-abs64.md)</ept><ph id=\"ph1\"> </ph>","pos":[2885,2972],"source":" [abs, labs, llabs, _abs64](../../c-runtime-library/reference/abs-labs-llabs-abs64.md) "},{"content":"<bpt id=\"p1\"> [</bpt>fabs, fabsf, fabsl<ept id=\"p1\">](../../c-runtime-library/reference/fabs-fabsf-fabsl.md)</ept>","pos":[2975,3051],"source":" [fabs, fabsf, fabsl](../../c-runtime-library/reference/fabs-fabsf-fabsl.md)"}],"content":"---\ntitle: \"_cabs | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\napiname: \n  - \"_cabs\"\napilocation: \n  - \"msvcrt.dll\"\n  - \"msvcr80.dll\"\n  - \"msvcr90.dll\"\n  - \"msvcr100.dll\"\n  - \"msvcr100_clr0400.dll\"\n  - \"msvcr110.dll\"\n  - \"msvcr110_clr0400.dll\"\n  - \"msvcr120.dll\"\n  - \"msvcr120_clr0400.dll\"\n  - \"ucrtbase.dll\"\n  - \"api-ms-win-crt-math-l1-1-0.dll\"\napitype: \"DLLExport\"\nf1_keywords: \n  - \"cabsl\"\n  - \"_cabs\"\n  - \"_cabsl\"\ndev_langs: \n  - \"C++\"\n  - \"C\"\nhelpviewer_keywords: \n  - \"cabs function\"\n  - \"cabsl function\"\n  - \"absolute values\"\n  - \"_cabsl function\"\n  - \"_cabs function\"\n  - \"calculating absolute values\"\nms.assetid: fea292ee-1a39-4a0a-b416-4a189346ff26\ncaps.latest.revision: 13\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# _cabs\nCalculates the absolute value of a complex number.  \n  \n## Syntax  \n  \n```  \ndouble _cabs(   \n   struct _complex z   \n);  \n```  \n  \n#### Parameters  \n `z`  \n Complex number.  \n  \n## Return Value  \n `_cabs` returns the absolute value of its argument if successful. On overflow, `_cabs` returns `HUGE_VAL` and sets `errno` to `ERANGE`. You can change error handling with [_matherr](../../c-runtime-library/reference/matherr.md).  \n  \n## Remarks  \n The `_cabs` function calculates the absolute value of a complex number, which must be a structure of type [_complex](../../c-runtime-library/standard-types.md). The structure `z` is composed of a real component `x` and an imaginary component `y`. A call to `_cabs` produces a value equivalent to that of the expression `sqrt`( `z.x``*``z.x``+``z.y`*`z.y` ).  \n  \n## Requirements  \n  \n|Routine|Required header|  \n|-------------|---------------------|  \n|`_cabs`|\\<math.h>|  \n  \n For more compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md) in the Introduction.  \n  \n## Example  \n  \n```  \n// crt_cabs.c  \n/* Using _cabs, this program calculates  \n * the absolute value of a complex number.  \n */  \n#include <math.h>  \n#include <stdio.h>  \n  \nint main( void )  \n{  \n   struct _complex number = { 3.0, 4.0 };  \n   double d;  \n  \n   d = _cabs( number );  \n   printf( \"The absolute value of %f + %fi is %f\\n\",  \n           number.x, number.y, d );  \n}  \n```  \n  \n```Output  \nThe absolute value of 3.000000 + 4.000000i is 5.000000  \n```  \n  \n## .NET Framework Equivalent  \n Not applicable. To call the standard C function, use `PInvoke`. For more information, see [Platform Invoke Examples](http://msdn.microsoft.com/Library/15926806-f0b7-487e-93a6-4e9367ec689f).  \n  \n## See Also  \n [Floating-Point Support](../../c-runtime-library/floating-point-support.md)   \n [abs, labs, llabs, _abs64](../../c-runtime-library/reference/abs-labs-llabs-abs64.md)   \n [fabs, fabsf, fabsl](../../c-runtime-library/reference/fabs-fabsf-fabsl.md)   "}