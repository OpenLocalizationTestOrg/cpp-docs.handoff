{"nodes":[{"pos":[12,45],"content":"gets_s, _getws_s | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"gets_s, _getws_s | Microsoft Docs","pos":[0,33]}]},{"content":"gets_s, _getws_s","pos":[1159,1175]},{"content":"Gets a line from the <ph id=\"ph1\">`stdin`</ph> stream.","pos":[1176,1212],"source":"Gets a line from the `stdin` stream."},{"content":"These versions of <bpt id=\"p1\">[</bpt>gets, _getws<ept id=\"p1\">](../../c-runtime-library/gets-getws.md)</ept> have security enhancements, as described in <bpt id=\"p2\">[</bpt>Security Features in the CRT<ept id=\"p2\">](../../c-runtime-library/security-features-in-the-crt.md)</ept>.","pos":[1213,1417],"source":" These versions of [gets, _getws](../../c-runtime-library/gets-getws.md) have security enhancements, as described in [Security Features in the CRT](../../c-runtime-library/security-features-in-the-crt.md)."},{"content":"Syntax","pos":[1426,1432]},{"content":"Parameters","pos":[1784,1794]},{"content":"[out]","pos":[1798,1803]},{"content":"Storage location for input string.","pos":[1816,1850]},{"content":"[in]","pos":[1857,1861]},{"content":"The size of the buffer.","pos":[1884,1907]},{"content":"Return Value","pos":[1916,1928]},{"content":"Returns <ph id=\"ph1\">`buffer`</ph> if successful.","pos":[1932,1963],"source":"Returns `buffer` if successful."},{"content":"A <ph id=\"ph1\">`NULL`</ph> pointer indicates an error or end-of-file condition.","pos":[1964,2025],"source":" A `NULL` pointer indicates an error or end-of-file condition."},{"content":"Use <bpt id=\"p1\">[</bpt>ferror<ept id=\"p1\">](../../c-runtime-library/reference/ferror.md)</ept> or <bpt id=\"p2\">[</bpt>feof<ept id=\"p2\">](../../c-runtime-library/reference/feof.md)</ept> to determine which one has occurred.","pos":[2026,2173],"source":" Use [ferror](../../c-runtime-library/reference/ferror.md) or [feof](../../c-runtime-library/reference/feof.md) to determine which one has occurred."},{"content":"Remarks","pos":[2182,2189]},{"content":"The <ph id=\"ph1\">`gets_s`</ph> function reads a line from the standard input stream <ph id=\"ph2\">`stdin`</ph> and stores it in <ph id=\"ph3\">`buffer`</ph>.","pos":[2193,2293],"source":"The `gets_s` function reads a line from the standard input stream `stdin` and stores it in `buffer`."},{"content":"The line consists of all characters up to and including the first newline character ('\\n').","pos":[2294,2385]},{"content":"then replaces the newline character with a null character ('\\0') before returning the line.","pos":[2395,2486]},{"content":"In contrast, the <ph id=\"ph1\">`fgets_s`</ph> function retains the newline character.","pos":[2487,2553],"source":" In contrast, the `fgets_s` function retains the newline character."},{"pos":[2560,2697],"content":"If the first character read is the end-of-file character, a null character is stored at the beginning of <ph id=\"ph1\">`buffer`</ph> and <ph id=\"ph2\">`NULL`</ph> is returned.","source":"If the first character read is the end-of-file character, a null character is stored at the beginning of `buffer` and `NULL` is returned."},{"pos":[2713,2811],"content":"is a wide-character version of <ph id=\"ph1\">`gets_s`</ph>; its argument and return value are wide-character strings.","source":" is a wide-character version of `gets_s`; its argument and return value are wide-character strings."},{"content":"If <ph id=\"ph1\">`buffer`</ph> is <ph id=\"ph2\">`NULL`</ph> or <ph id=\"ph3\">`sizeInCharacters`</ph> is less than or equal to zero, or if the buffer is too small to contain the input line and null terminator, these functions invoke an invalid parameter handler, as described in <bpt id=\"p1\">[</bpt>Parameter Validation<ept id=\"p1\">](../../c-runtime-library/parameter-validation.md)</ept>.","pos":[2818,3111],"source":"If `buffer` is `NULL` or `sizeInCharacters` is less than or equal to zero, or if the buffer is too small to contain the input line and null terminator, these functions invoke an invalid parameter handler, as described in [Parameter Validation](../../c-runtime-library/parameter-validation.md)."},{"content":"If execution is allowed to continue, these functions return <ph id=\"ph1\">`NULL`</ph> and set errno to <ph id=\"ph2\">`ERANGE`</ph>.","pos":[3112,3205],"source":" If execution is allowed to continue, these functions return `NULL` and set errno to `ERANGE`."},{"content":"In C++, using these functions is simplified by template overloads; the overloads can infer buffer length automatically (eliminating the need to specify a size argument) and they can automatically replace older, non-secure functions with their newer, secure counterparts.","pos":[3212,3482]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Secure Template Overloads<ept id=\"p1\">](../../c-runtime-library/secure-template-overloads.md)</ept>.","pos":[3483,3591],"source":" For more information, see [Secure Template Overloads](../../c-runtime-library/secure-template-overloads.md)."},{"content":"Generic-Text Routine Mappings","pos":[3601,3630]},{"content":"TCHAR.H routine","pos":[3637,3652]},{"content":"_UNICODE &amp; _MBCS not defined","pos":[3653,3681],"source":"_UNICODE & _MBCS not defined"},{"content":"_MBCS defined","pos":[3682,3695]},{"content":"_UNICODE defined","pos":[3696,3712]},{"content":"Requirements","pos":[3870,3882]},{"content":"Routine","pos":[3889,3896]},{"content":"Required header","pos":[3897,3912]},{"content":"stdio.h&gt;","pos":[3968,3976],"source":"stdio.h>"},{"content":"stdio.h&gt; or <ph id=\"ph1\">\\&lt;</ph>wchar.h&gt;","pos":[3992,4014],"source":"stdio.h> or \\<wchar.h>"},{"content":"The console is not supported in <ph id=\"ph1\">[!INCLUDE[win8_appname_long](../../build/includes/win8_appname_long_md.md)]</ph> apps.","pos":[4022,4135],"source":"The console is not supported in [!INCLUDE[win8_appname_long](../../build/includes/win8_appname_long_md.md)] apps."},{"content":"The standard stream handles that are associated with the console—<ph id=\"ph1\">`stdin`</ph>, <ph id=\"ph2\">`stdout`</ph>, and <ph id=\"ph3\">`stderr`</ph>—must be redirected before C run-time functions can use them in <ph id=\"ph4\">[!INCLUDE[win8_appname_long](../../build/includes/win8_appname_long_md.md)]</ph> apps.","pos":[4136,4377],"source":" The standard stream handles that are associated with the console—`stdin`, `stdout`, and `stderr`—must be redirected before C run-time functions can use them in [!INCLUDE[win8_appname_long](../../build/includes/win8_appname_long_md.md)] apps."},{"content":"For additional compatibility information, see <bpt id=\"p1\">[</bpt>Compatibility<ept id=\"p1\">](../../c-runtime-library/compatibility.md)</ept>.","pos":[4378,4482],"source":" For additional compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md)."},{"content":"Example","pos":[4491,4498]},{"content":".NET Framework Equivalent","pos":[4892,4917]},{"content":"System::Console::Read","pos":[4922,4943]},{"content":"See Also","pos":[5020,5028]},{"content":"Stream I/O","pos":[5033,5043]},{"content":"gets, _getws","pos":[5089,5101]},{"content":"fgets, fgetws","pos":[5147,5160]},{"content":"fputs, fputws","pos":[5218,5231]},{"content":"puts, _putws","pos":[5289,5301]}],"content":"---\ntitle: \"gets_s, _getws_s | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\napiname: \n  - \"_getws_s\"\n  - \"gets_s\"\napilocation: \n  - \"msvcrt.dll\"\n  - \"msvcr80.dll\"\n  - \"msvcr90.dll\"\n  - \"msvcr100.dll\"\n  - \"msvcr100_clr0400.dll\"\n  - \"msvcr110.dll\"\n  - \"msvcr110_clr0400.dll\"\n  - \"msvcr120.dll\"\n  - \"msvcr120_clr0400.dll\"\n  - \"ucrtbase.dll\"\n  - \"api-ms-win-crt-stdio-l1-1-0.dll\"\napitype: \"DLLExport\"\nf1_keywords: \n  - \"_getws_s\"\n  - \"gets_s\"\ndev_langs: \n  - \"C++\"\n  - \"C\"\nhelpviewer_keywords: \n  - \"getws_s function\"\n  - \"_getws_s function\"\n  - \"lines, getting\"\n  - \"streams, getting lines\"\n  - \"buffers, avoiding overruns\"\n  - \"buffer overruns\"\n  - \"buffers, buffer overruns\"\n  - \"gets_s function\"\n  - \"standard input, reading from\"\nms.assetid: 5880c36f-122c-4061-a1a5-aeeced6fe58c\ncaps.latest.revision: 29\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# gets_s, _getws_s\nGets a line from the `stdin` stream. These versions of [gets, _getws](../../c-runtime-library/gets-getws.md) have security enhancements, as described in [Security Features in the CRT](../../c-runtime-library/security-features-in-the-crt.md).  \n  \n## Syntax  \n  \n```  \nchar *gets_s(   \n   char *buffer,  \n   size_t sizeInCharacters  \n);  \nwchar_t *_getws_s(   \n   wchar_t *buffer,  \n   size_t sizeInCharacters  \n);  \ntemplate <size_t size>  \nchar *gets_s(   \n   char (&buffer)[size]  \n); // C++ only  \ntemplate <size_t size>  \nwchar_t *_getws_s(   \n   wchar_t (&buffer)[size]  \n); // C++ only  \n```  \n  \n#### Parameters  \n [out] `buffer`  \n Storage location for input string.  \n  \n [in] `sizeInCharacters`  \n The size of the buffer.  \n  \n## Return Value  \n Returns `buffer` if successful. A `NULL` pointer indicates an error or end-of-file condition. Use [ferror](../../c-runtime-library/reference/ferror.md) or [feof](../../c-runtime-library/reference/feof.md) to determine which one has occurred.  \n  \n## Remarks  \n The `gets_s` function reads a line from the standard input stream `stdin` and stores it in `buffer`. The line consists of all characters up to and including the first newline character ('\\n'). `gets_s` then replaces the newline character with a null character ('\\0') before returning the line. In contrast, the `fgets_s` function retains the newline character.  \n  \n If the first character read is the end-of-file character, a null character is stored at the beginning of `buffer` and `NULL` is returned.  \n  \n `_getws` is a wide-character version of `gets_s`; its argument and return value are wide-character strings.  \n  \n If `buffer` is `NULL` or `sizeInCharacters` is less than or equal to zero, or if the buffer is too small to contain the input line and null terminator, these functions invoke an invalid parameter handler, as described in [Parameter Validation](../../c-runtime-library/parameter-validation.md). If execution is allowed to continue, these functions return `NULL` and set errno to `ERANGE`.  \n  \n In C++, using these functions is simplified by template overloads; the overloads can infer buffer length automatically (eliminating the need to specify a size argument) and they can automatically replace older, non-secure functions with their newer, secure counterparts. For more information, see [Secure Template Overloads](../../c-runtime-library/secure-template-overloads.md).  \n  \n### Generic-Text Routine Mappings  \n  \n|TCHAR.H routine|_UNICODE & _MBCS not defined|_MBCS defined|_UNICODE defined|  \n|---------------------|------------------------------------|--------------------|-----------------------|  \n|`_getts`|`gets_s`|`gets_s`|`_getws`|  \n  \n## Requirements  \n  \n|Routine|Required header|  \n|-------------|---------------------|  \n|`gets_s`|\\<stdio.h>|  \n|`_getws`|\\<stdio.h> or \\<wchar.h>|  \n  \n The console is not supported in [!INCLUDE[win8_appname_long](../../build/includes/win8_appname_long_md.md)] apps. The standard stream handles that are associated with the console—`stdin`, `stdout`, and `stderr`—must be redirected before C run-time functions can use them in [!INCLUDE[win8_appname_long](../../build/includes/win8_appname_long_md.md)] apps. For additional compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md).  \n  \n## Example  \n  \n```  \n// crt_gets_s.c  \n// This program retrieves a string from the stdin and   \n// prints the same string to the console.  \n  \n#include <stdio.h>  \n  \nint main( void )  \n{  \n   char line[21]; // room for 20 chars + '\\0'  \n   gets_s( line, 20 );  \n   printf( \"The line entered was: %s\\n\", line );  \n}  \n```  \n  \n```Output  \n  \nHello there!The line entered was: Hello there!  \n```  \n  \n## .NET Framework Equivalent  \n [System::Console::Read](https://msdn.microsoft.com/en-us/library/system.console.read.aspx)  \n  \n## See Also  \n [Stream I/O](../../c-runtime-library/stream-i-o.md)   \n [gets, _getws](../../c-runtime-library/gets-getws.md)   \n [fgets, fgetws](../../c-runtime-library/reference/fgets-fgetws.md)   \n [fputs, fputws](../../c-runtime-library/reference/fputs-fputws.md)   \n [puts, _putws](../../c-runtime-library/reference/puts-putws.md)"}