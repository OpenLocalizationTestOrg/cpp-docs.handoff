{"nodes":[{"pos":[12,64],"content":"hash_set::const_reference (STL-CLR) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"hash_set::const_reference (STL-CLR) | Microsoft Docs","pos":[0,52]}]},{"content":"hash_set::const_reference (STL/CLR)","pos":[662,697]},{"content":"The type of a constant reference to an element.","pos":[698,745]},{"content":"Syntax","pos":[754,760]},{"content":"Remarks","pos":[823,830]},{"content":"The type describes a constant reference to an element.","pos":[834,888]},{"content":"Example","pos":[897,904]},{"content":"Requirements","pos":[1591,1603]},{"pos":[1607,1637],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> <ph id=\"ph1\">\\&lt;</ph>cliext/hash_set&gt;","source":"**Header:** \\<cliext/hash_set>"},{"pos":[1644,1665],"content":"<bpt id=\"p1\">**</bpt>Namespace:<ept id=\"p1\">**</ept> cliext","source":"**Namespace:** cliext"},{"content":"See Also","pos":[1674,1682]},{"content":"hash_set (STL/CLR)","pos":[1687,1705]},{"content":"hash_set::reference (STL/CLR)","pos":[1743,1772]},{"content":"hash_set::value_type (STL/CLR)","pos":[1820,1850]}],"content":"---\ntitle: \"hash_set::const_reference (STL-CLR) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"cliext::hash_set::const_reference\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"const_reference member [STL/CLR]\"\nms.assetid: 12e79114-91b6-4df8-9b5d-a92731d93f6a\ncaps.latest.revision: 16\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# hash_set::const_reference (STL/CLR)\nThe type of a constant reference to an element.  \n  \n## Syntax  \n  \n```  \ntypedef value_type% const_reference;  \n```  \n  \n## Remarks  \n The type describes a constant reference to an element.  \n  \n## Example  \n  \n```  \n// cliext_hash_set_const_reference.cpp   \n// compile with: /clr   \n#include <cliext/hash_set>   \n  \ntypedef cliext::hash_set<wchar_t> Myhash_set;   \nint main()   \n    {   \n    Myhash_set c1;   \n    c1.insert(L'a');   \n    c1.insert(L'b');   \n    c1.insert(L'c');   \n  \n// display initial contents \" a b c\"   \n    Myhash_set::const_iterator cit = c1.begin();   \n    for (; cit != c1.end(); ++cit)   \n        {   // get a const reference to an element   \n        Myhash_set::const_reference cref = *cit;   \n        System::Console::Write(\" {0}\", cref);   \n        }   \n    System::Console::WriteLine();   \n    return (0);   \n    }  \n  \n```  \n  \n```Output  \na b c  \n```  \n  \n## Requirements  \n **Header:** \\<cliext/hash_set>  \n  \n **Namespace:** cliext  \n  \n## See Also  \n [hash_set (STL/CLR)](../dotnet/hash-set-stl-clr.md)   \n [hash_set::reference (STL/CLR)](../dotnet/hash-set-reference-stl-clr.md)   \n [hash_set::value_type (STL/CLR)](../dotnet/hash-set-value-type-stl-clr.md)"}