{"nodes":[{"pos":[12,46],"content":"_unlink, _wunlink | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"_unlink, _wunlink | Microsoft Docs","pos":[0,34]}]},{"pos":[1151,1168],"content":"_unlink, _wunlink","linkify":"_unlink, _wunlink","nodes":[{"content":"_unlink, _wunlink","pos":[0,17]}]},{"content":"Delete a file.","pos":[1169,1183]},{"pos":[1192,1198],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[1322,1332],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Name of file to remove.","pos":[1350,1373]},{"pos":[1382,1394],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Each of these functions returns 0 if successful.","pos":[1398,1446]},{"content":"Otherwise, the function returns –1 and sets <ph id=\"ph1\">`errno`</ph> to <ph id=\"ph2\">`EACCES`</ph>, which means the path specifies a read-only file, or to <ph id=\"ph3\">`ENOENT`</ph>, which means the file or path is not found or the path specified a directory.","pos":[1447,1653],"source":" Otherwise, the function returns –1 and sets `errno` to `EACCES`, which means the path specifies a read-only file, or to `ENOENT`, which means the file or path is not found or the path specified a directory."},{"pos":[1660,1835],"content":"See <bpt id=\"p1\">[</bpt>_doserrno, errno, _sys_errlist, and _sys_nerr<ept id=\"p1\">](../../c-runtime-library/errno-doserrno-sys-errlist-and-sys-nerr.md)</ept> for more information on these, and other, return codes.","source":"See [_doserrno, errno, _sys_errlist, and _sys_nerr](../../c-runtime-library/errno-doserrno-sys-errlist-and-sys-nerr.md) for more information on these, and other, return codes."},{"pos":[1844,1851],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The <ph id=\"ph1\">`_unlink`</ph> function deletes the file specified by <ph id=\"ph2\">`filename`</ph>.","pos":[1855,1919],"source":"The `_unlink` function deletes the file specified by `filename`."},{"content":"<ph id=\"ph1\">`_wunlink`</ph> is a wide-character version of <ph id=\"ph2\">`_unlink`</ph>; the <ph id=\"ph3\">`filename`</ph> argument to <ph id=\"ph4\">`_wunlink`</ph> is a wide-character string.","pos":[1920,2038],"source":"`_wunlink` is a wide-character version of `_unlink`; the `filename` argument to `_wunlink` is a wide-character string."},{"content":"These functions behave identically otherwise.","pos":[2039,2084]},{"pos":[2094,2123],"content":"Generic-Text Routine Mappings","linkify":"Generic-Text Routine Mappings","nodes":[{"content":"Generic-Text Routine Mappings","pos":[0,29]}]},{"content":"TCHAR.H routine","pos":[2130,2145]},{"content":"_UNICODE &amp; _MBCS not defined","pos":[2146,2174],"source":"_UNICODE & _MBCS not defined"},{"content":"_MBCS defined","pos":[2175,2188]},{"content":"_UNICODE defined","pos":[2189,2205]},{"pos":[2369,2381],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"content":"Routine","pos":[2388,2395]},{"content":"Required header","pos":[2396,2411]},{"content":"<ph id=\"ph1\">\\&lt;</ph>io.h&gt; and <ph id=\"ph2\">\\&lt;</ph>stdio.h&gt;","pos":[2466,2488],"source":"\\<io.h> and \\<stdio.h>"},{"content":"<ph id=\"ph1\">\\&lt;</ph>io.h&gt; or <ph id=\"ph2\">\\&lt;</ph>wchar.h&gt;","pos":[2504,2525],"source":"\\<io.h> or \\<wchar.h>"},{"pos":[2533,2657],"content":"For additional compatibility information, see <bpt id=\"p1\">[</bpt>Compatibility<ept id=\"p1\">](../../c-runtime-library/compatibility.md)</ept> in the Introduction.","source":"For additional compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md) in the Introduction."},{"pos":[2666,2678],"content":"Code Example","linkify":"Code Example","nodes":[{"content":"Code Example","pos":[0,12]}]},{"content":"This program uses _unlink to delete CRT_UNLINK.TXT.","pos":[2682,2733]},{"pos":[2988,3009],"content":"Input: crt_unlink.txt","linkify":"Input: crt_unlink.txt","nodes":[{"content":"Input: crt_unlink.txt","pos":[0,21]}]},{"pos":[3063,3076],"content":"Sample Output","linkify":"Sample Output","nodes":[{"content":"Sample Output","pos":[0,13]}]},{"pos":[3127,3152],"content":".NET Framework Equivalent","linkify":".NET Framework Equivalent","nodes":[{"content":".NET Framework Equivalent","pos":[0,25]}]},{"pos":[3156,3251],"content":"<bpt id=\"p1\">[</bpt>System::IO::File::Delete<ept id=\"p1\">](https://msdn.microsoft.com/en-us/library/system.io.file.delete.aspx)</ept>","source":"[System::IO::File::Delete](https://msdn.microsoft.com/en-us/library/system.io.file.delete.aspx)"},{"pos":[3260,3268],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>File Handling<ept id=\"p1\">](../../c-runtime-library/file-handling.md)</ept><ph id=\"ph1\"> </ph>","pos":[3272,3330],"source":"[File Handling](../../c-runtime-library/file-handling.md) "},{"content":"<bpt id=\"p1\"> [</bpt>_close<ept id=\"p1\">](../../c-runtime-library/reference/close.md)</ept><ph id=\"ph1\"> </ph>","pos":[3333,3387],"source":" [_close](../../c-runtime-library/reference/close.md) "},{"content":"<bpt id=\"p1\"> [</bpt>remove, _wremove<ept id=\"p1\">](../../c-runtime-library/reference/remove-wremove.md)</ept>","pos":[3390,3462],"source":" [remove, _wremove](../../c-runtime-library/reference/remove-wremove.md)"}],"content":"---\ntitle: \"_unlink, _wunlink | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\napiname: \n  - \"_unlink\"\n  - \"_wunlink\"\napilocation: \n  - \"msvcrt.dll\"\n  - \"msvcr80.dll\"\n  - \"msvcr90.dll\"\n  - \"msvcr100.dll\"\n  - \"msvcr100_clr0400.dll\"\n  - \"msvcr110.dll\"\n  - \"msvcr110_clr0400.dll\"\n  - \"msvcr120.dll\"\n  - \"msvcr120_clr0400.dll\"\n  - \"ucrtbase.dll\"\n  - \"api-ms-win-crt-filesystem-l1-1-0.dll\"\napitype: \"DLLExport\"\nf1_keywords: \n  - \"_tunlink\"\n  - \"_unlink\"\n  - \"wunlink\"\n  - \"_wunlink\"\ndev_langs: \n  - \"C++\"\n  - \"C\"\nhelpviewer_keywords: \n  - \"files [C++], deleting\"\n  - \"_wunlink function\"\n  - \"wunlink function\"\n  - \"unlink function\"\n  - \"_unlink function\"\n  - \"tunlink function\"\n  - \"files [C++], removing\"\n  - \"_tunlink function\"\nms.assetid: 5e4f5f1b-1e99-4391-9b18-9ac63c32fae8\ncaps.latest.revision: 12\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# _unlink, _wunlink\nDelete a file.  \n  \n## Syntax  \n  \n```  \nint _unlink(  \n   const char *filename   \n);  \nint _wunlink(  \n   const wchar_t *filename   \n);  \n```  \n  \n#### Parameters  \n `filename`  \n Name of file to remove.  \n  \n## Return Value  \n Each of these functions returns 0 if successful. Otherwise, the function returns –1 and sets `errno` to `EACCES`, which means the path specifies a read-only file, or to `ENOENT`, which means the file or path is not found or the path specified a directory.  \n  \n See [_doserrno, errno, _sys_errlist, and _sys_nerr](../../c-runtime-library/errno-doserrno-sys-errlist-and-sys-nerr.md) for more information on these, and other, return codes.  \n  \n## Remarks  \n The `_unlink` function deletes the file specified by `filename`. `_wunlink` is a wide-character version of `_unlink`; the `filename` argument to `_wunlink` is a wide-character string. These functions behave identically otherwise.  \n  \n### Generic-Text Routine Mappings  \n  \n|TCHAR.H routine|_UNICODE & _MBCS not defined|_MBCS defined|_UNICODE defined|  \n|---------------------|------------------------------------|--------------------|-----------------------|  \n|`_tunlink`|`_unlink`|`_unlink`|`_wunlink`|  \n  \n## Requirements  \n  \n|Routine|Required header|  \n|-------------|---------------------|  \n|`_unlink`|\\<io.h> and \\<stdio.h>|  \n|`_wunlink`|\\<io.h> or \\<wchar.h>|  \n  \n For additional compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md) in the Introduction.  \n  \n## Code Example  \n This program uses _unlink to delete CRT_UNLINK.TXT.  \n  \n```  \n// crt_unlink.c  \n  \n#include <stdio.h>  \n  \nint main( void )  \n{  \n   if( _unlink( \"crt_unlink.txt\" ) == -1 )  \n      perror( \"Could not delete 'CRT_UNLINK.TXT'\" );  \n   else  \n      printf( \"Deleted 'CRT_UNLINK.TXT'\\n\" );  \n}  \n```  \n  \n### Input: crt_unlink.txt  \n  \n```  \nThis file will be deleted.  \n```  \n  \n### Sample Output  \n  \n```  \nDeleted 'CRT_UNLINK.TXT'  \n```  \n  \n## .NET Framework Equivalent  \n [System::IO::File::Delete](https://msdn.microsoft.com/en-us/library/system.io.file.delete.aspx)  \n  \n## See Also  \n [File Handling](../../c-runtime-library/file-handling.md)   \n [_close](../../c-runtime-library/reference/close.md)   \n [remove, _wremove](../../c-runtime-library/reference/remove-wremove.md)"}