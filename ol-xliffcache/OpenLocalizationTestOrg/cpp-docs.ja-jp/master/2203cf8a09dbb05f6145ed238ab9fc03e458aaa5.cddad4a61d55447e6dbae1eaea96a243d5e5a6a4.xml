{"nodes":[{"pos":[12,49],"content":"Compiler Error C2653 | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Compiler Error C2653 | Microsoft Docs","pos":[0,37]}]},{"content":"Compiler Error C2653","pos":[597,617]},{"content":"'identifier' : is not a class or namespace name","pos":[618,665]},{"content":"Syntax requires a class, structure, union, or namespace name.","pos":[671,732]},{"content":"The following sample generates C2653:","pos":[738,775]},{"content":"C2653 is also possible if you try to define a <bpt id=\"p1\">*</bpt>compound namespace<ept id=\"p1\">*</ept>, a namespace that contains one or more scope-nested namespace names, when you use a version of Visual C++ prior to Visual Studio 2015 Update 3.","pos":[954,1164],"source":"C2653 is also possible if you try to define a *compound namespace*, a namespace that contains one or more scope-nested namespace names, when you use a version of Visual C++ prior to Visual Studio 2015 Update 3."},{"content":"Compound namespace definitions are not allowed in C++ prior to C++17.","pos":[1165,1234]},{"content":"Starting in Visual C++ 2015 Update 3, the compiler supports compound namespace definitions when the <bpt id=\"p1\">[</bpt>/std:c++latest<ept id=\"p1\">](../../build/reference/std-specify-language-standard-version.md)</ept> compiler option is specified:","pos":[1235,1445],"source":" Starting in Visual C++ 2015 Update 3, the compiler supports compound namespace definitions when the [/std:c++latest](../../build/reference/std-specify-language-standard-version.md) compiler option is specified:"}],"content":"---\ntitle: \"Compiler Error C2653 | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"error-reference\"\nf1_keywords: \n  - \"C2653\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"C2653\"\nms.assetid: 3f49e731-affd-43a0-a8d0-181db7650bc3\ncaps.latest.revision: 9\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Compiler Error C2653\n'identifier' : is not a class or namespace name  \n  \nSyntax requires a class, structure, union, or namespace name.  \n  \nThe following sample generates C2653:  \n  \n```cpp  \n// C2653.cpp  \n// compile with: /c  \nclass yy {  \n   void func1(int i);  \n};  \n  \nvoid xx::func1(int m) {}   // C2653  \nvoid yy::func1(int m) {}   // OK  \n```  \n  \nC2653 is also possible if you try to define a *compound namespace*, a namespace that contains one or more scope-nested namespace names, when you use a version of Visual C++ prior to Visual Studio 2015 Update 3. Compound namespace definitions are not allowed in C++ prior to C++17. Starting in Visual C++ 2015 Update 3, the compiler supports compound namespace definitions when the [/std:c++latest](../../build/reference/std-specify-language-standard-version.md) compiler option is specified:  \n```cpp  \n// C2653b.cpp  \nnamespace a::b {int i;}   // C2653 prior to Visual C++ 2015 Update 3,  \n                          // C2429 thereafter. Use /std:c++latest to fix.\nnamespace a {  \n   namespace b {  \n      int i;  \n   }  \n}  \n  \nint main() {  \n   a::b::i = 2;  \n}  \n```  "}