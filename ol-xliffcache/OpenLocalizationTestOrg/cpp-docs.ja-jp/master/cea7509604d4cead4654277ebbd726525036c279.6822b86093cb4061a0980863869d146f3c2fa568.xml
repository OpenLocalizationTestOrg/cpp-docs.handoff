{"nodes":[{"pos":[12,40],"content":"transmit_as | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"transmit_as | Microsoft Docs","pos":[0,28]}]},{"content":"transmit_as","pos":[622,633]},{"content":"Instructs the compiler to associate a presented type that client and server applications manipulate, with a transmitted type.","pos":[634,759]},{"content":"Syntax","pos":[768,774]},{"content":"Parameters","pos":[842,852]},{"content":"Specifies the data type that is transmitted between client and server.","pos":[866,936]},{"content":"Remarks","pos":[945,952]},{"pos":[956,1113],"content":"The <bpt id=\"p1\">**</bpt>transmit_as<ept id=\"p1\">**</ept> C++ attribute has the same functionality as the <bpt id=\"p2\">[</bpt>transmit_as<ept id=\"p2\">](http://msdn.microsoft.com/library/windows/desktop/aa367286)</ept> MIDL attribute.","source":"The **transmit_as** C++ attribute has the same functionality as the [transmit_as](http://msdn.microsoft.com/library/windows/desktop/aa367286) MIDL attribute."},{"content":"Example","pos":[1122,1129]},{"pos":[1133,1197],"content":"The following code shows a use of the <bpt id=\"p1\">**</bpt>transmit_as<ept id=\"p1\">**</ept> attribute:","source":"The following code shows a use of the **transmit_as** attribute:"},{"content":"Requirements","pos":[1932,1944]},{"content":"Attribute Context","pos":[1954,1971]},{"content":"Applies to","pos":[1994,2004]},{"content":"Repeatable","pos":[2023,2033]},{"content":"No","pos":[2036,2038]},{"content":"Required attributes","pos":[2045,2064]},{"content":"None","pos":[2067,2071]},{"content":"Invalid attributes","pos":[2078,2096]},{"content":"None","pos":[2099,2103]},{"pos":[2111,2221],"content":"For more information about the attribute contexts, see <bpt id=\"p1\">[</bpt>Attribute Contexts<ept id=\"p1\">](../windows/attribute-contexts.md)</ept>.","source":"For more information about the attribute contexts, see [Attribute Contexts](../windows/attribute-contexts.md)."},{"content":"See Also","pos":[2230,2238]},{"content":"IDL Attributes","pos":[2243,2257]},{"content":"Typedef, Enum, Union, and Struct Attributes","pos":[2294,2337]},{"content":"export","pos":[2400,2406]},{"content":"Attributes Samples","pos":[2435,2453]}],"content":"---\ntitle: \"transmit_as | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"language-reference\"\nf1_keywords: \n  - \"vc-attr.transmit_as\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"transmit_as attribute\"\nms.assetid: 53d0b8ab-5b06-423e-83eb-3d01a10424b2\ncaps.latest.revision: 10\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# transmit_as\nInstructs the compiler to associate a presented type that client and server applications manipulate, with a transmitted type.  \n  \n## Syntax  \n  \n```  \n  \n      [ transmit_as(  \n   type  \n) ]  \n```  \n  \n#### Parameters  \n `type`  \n Specifies the data type that is transmitted between client and server.  \n  \n## Remarks  \n The **transmit_as** C++ attribute has the same functionality as the [transmit_as](http://msdn.microsoft.com/library/windows/desktop/aa367286) MIDL attribute.  \n  \n## Example  \n The following code shows a use of the **transmit_as** attribute:  \n  \n```  \n// cpp_attr_ref_transmit_as.cpp  \n// compile with: /LD  \n#include \"windows.h\"  \n[module(name=\"MyLibrary\")];  \n  \n[export] typedef struct _TREE_NODE_TYPE {  \nunsigned short data;   \nstruct _TREE_NODE_TYPE * left;  \nstruct _TREE_NODE_TYPE * right;   \n} TREE_NODE_TYPE;  \n  \n[export] struct PACKED_NODE {  \n   unsigned short data;   // same as normal node  \n   int index;   // array index of parent  \n};  \n  \n// A left node recursive built array of  \n// the nodes in the tree.  Can be unpacked with  \n// that knowledge  \n[export] typedef struct _TREE_XMIT_TYPE {  \n   int count;  \n   [size_is(count)] PACKED_NODE node[];  \n} TREE_XMIT_TYPE;  \n  \n[transmit_as(TREE_XMIT_TYPE)] typedef TREE_NODE_TYPE * TREE_TYPE;  \n```  \n  \n## Requirements  \n  \n### Attribute Context  \n  \n|||  \n|-|-|  \n|**Applies to**|`typedef`|  \n|**Repeatable**|No|  \n|**Required attributes**|None|  \n|**Invalid attributes**|None|  \n  \n For more information about the attribute contexts, see [Attribute Contexts](../windows/attribute-contexts.md).  \n  \n## See Also  \n [IDL Attributes](../windows/idl-attributes.md)   \n [Typedef, Enum, Union, and Struct Attributes](../windows/typedef-enum-union-and-struct-attributes.md)   \n [export](../windows/export.md)   \n [Attributes Samples](http://msdn.microsoft.com/en-us/558ebdb2-082f-44dc-b442-d8d33bf7bdb8)"}