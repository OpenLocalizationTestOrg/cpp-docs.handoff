{"nodes":[{"pos":[12,53],"content":"Supporting Notifications | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Supporting Notifications | Microsoft Docs","pos":[0,41]}]},{"content":"Supporting Notifications","pos":[801,825]},{"content":"Implementing Connection Point Interfaces on the Provider and Consumer","pos":[829,898]},{"pos":[902,1118],"content":"To implement notifications, a provider class must inherit from <bpt id=\"p1\">[</bpt>IRowsetNotifyCP<ept id=\"p1\">](../../data/oledb/irowsetnotifycp-class.md)</ept> and <bpt id=\"p2\">[</bpt>IConnectionPointContainer<ept id=\"p2\">](../../atl/reference/iconnectionpointcontainerimpl-class.md)</ept>.","source":"To implement notifications, a provider class must inherit from [IRowsetNotifyCP](../../data/oledb/irowsetnotifycp-class.md) and [IConnectionPointContainer](../../atl/reference/iconnectionpointcontainerimpl-class.md)."},{"content":"implements the provider site for the connection point interface <bpt id=\"p1\">[</bpt>IRowsetNotify<ept id=\"p1\">](https://msdn.microsoft.com/en-us/library/ms712959.aspx)</ept>.","pos":[1143,1279],"source":" implements the provider site for the connection point interface [IRowsetNotify](https://msdn.microsoft.com/en-us/library/ms712959.aspx)."},{"content":"implements broadcast functions to advise listeners on the connection point <bpt id=\"p1\">**</bpt>IID_IRowsetNotify<ept id=\"p1\">**</ept> of changes to the contents of the rowset.","pos":[1298,1436],"source":" implements broadcast functions to advise listeners on the connection point **IID_IRowsetNotify** of changes to the contents of the rowset."},{"content":"Note that you must also implement and register <ph id=\"ph1\">`IRowsetNotify`</ph> on the consumer (also known as the sink) using <bpt id=\"p1\">[</bpt>IRowsetNotifyImpl<ept id=\"p1\">](../../data/oledb/irowsetnotifyimpl-class.md)</ept> so that the consumer can handle notifications.","pos":[1443,1664],"source":"Note that you must also implement and register `IRowsetNotify` on the consumer (also known as the sink) using [IRowsetNotifyImpl](../../data/oledb/irowsetnotifyimpl-class.md) so that the consumer can handle notifications."},{"content":"For information about implementing the connection point interface on the consumer, see <bpt id=\"p1\">[</bpt>Receiving Notifications<ept id=\"p1\">](../../data/oledb/receiving-notifications.md)</ept>.","pos":[1665,1823],"source":" For information about implementing the connection point interface on the consumer, see [Receiving Notifications](../../data/oledb/receiving-notifications.md)."},{"content":"In addition, the class must also contain a map that defines the connection point entry, like this:","pos":[1830,1928]},{"content":"Adding IRowsetNotify","pos":[2055,2075]},{"pos":[2079,2225],"content":"To add <ph id=\"ph1\">`IRowsetNotify`</ph>, you need to add <ph id=\"ph2\">`IConnectionPointContainerImpl&lt;rowset-name&gt;`</ph> and <ph id=\"ph3\">`IRowsetNotifyCP&lt;rowset-name&gt;`</ph> to your inheritance chain.","source":"To add `IRowsetNotify`, you need to add `IConnectionPointContainerImpl<rowset-name>` and `IRowsetNotifyCP<rowset-name>` to your inheritance chain."},{"pos":[2232,2379],"content":"For example, here is the inheritance chain for <ph id=\"ph1\">`RUpdateRowset`</ph> in <bpt id=\"p1\">[</bpt>UpdatePV<ept id=\"p1\">](http://msdn.microsoft.com/en-us/c8bed873-223c-4a7d-af55-f90138c6f38f)</ept>:","source":"For example, here is the inheritance chain for `RUpdateRowset` in [UpdatePV](http://msdn.microsoft.com/en-us/c8bed873-223c-4a7d-af55-f90138c6f38f):"},{"pos":[2387,2518],"content":"[!NOTE]\n The sample code might differ from what is listed here; you should regard the sample code as the more up-to-date version.","leadings":["","> "],"nodes":[{"content":"The sample code might differ from what is listed here; you should regard the sample code as the more up-to-date version.","pos":[9,129]}]},{"content":"Setting COM Map Entries","pos":[3056,3079]},{"content":"You also need to add the following to the COM map in your rowset:","pos":[3083,3148]},{"content":"These macros allow anyone calling <ph id=\"ph1\">`QueryInterface`</ph> for your connection point container (the basis of <ph id=\"ph2\">`IRowsetNotify`</ph>) to find the requested interface on your provider.","pos":[3273,3440],"source":"These macros allow anyone calling `QueryInterface` for your connection point container (the basis of `IRowsetNotify`) to find the requested interface on your provider."},{"content":"For an example of how to use connection points, see the ATL POLYGON sample and tutorial.","pos":[3441,3529]},{"content":"Setting Connection Point Map Entries","pos":[3539,3575]},{"content":"You also need to add a connection point map.","pos":[3579,3623]},{"content":"It should look something like:","pos":[3624,3654]},{"pos":[3801,3916],"content":"This connection point map allows a component looking for the <ph id=\"ph1\">`IRowsetNotify`</ph> interface to find it in your provider.","source":"This connection point map allows a component looking for the `IRowsetNotify` interface to find it in your provider."},{"content":"Setting Properties","pos":[3926,3944]},{"content":"You also need to add the following properties to your provider.","pos":[3948,4011]},{"content":"You only need to add properties based on the interfaces that you support.","pos":[4012,4085]},{"content":"Property","pos":[4092,4100]},{"content":"Add if you support","pos":[4101,4119]},{"content":"DBPROP_IConnectionPointContainer","pos":[4170,4202]},{"content":"Always","pos":[4205,4211]},{"content":"DBPROP_NOTIFICATIONGRANULARITY","pos":[4218,4248]},{"content":"Always","pos":[4251,4257]},{"content":"DBPROP_NOTIFICATIONPHASES","pos":[4264,4289]},{"content":"Always","pos":[4292,4298]},{"content":"DBPROP_NOTIFYCOLUMNSET","pos":[4305,4327]},{"content":"DBPROP_NOTIFYROWDELETE","pos":[4352,4374]},{"content":"DBPROP_NOTIFYROWINSERT","pos":[4399,4421]},{"content":"DBPROP_NOTIFYROWSETFETCHPOSITIONCHANGE","pos":[4446,4484]},{"content":"Always","pos":[4487,4493]},{"content":"DBPROP_NOTIFYROWFIRSTCHANGE","pos":[4500,4527]},{"content":"DBPROP_NOTIFYROWSETRELEASE","pos":[4552,4578]},{"content":"Always","pos":[4581,4587]},{"content":"DBPROP_NOTIFYROWUNDOCHANGE","pos":[4594,4620]},{"content":"DBPROP_NOTIFYROWUNDODELETE","pos":[4645,4671]},{"content":"DBPROP_NOTIFYROWUNDOINSERT","pos":[4696,4722]},{"content":"DBPROP_NOTIFYROWUPDATE","pos":[4747,4769]},{"content":"Most of the implementation for the notifications is already embedded in the OLE DB Provider Templates.","pos":[4795,4897]},{"content":"Due to a compiler feature in Visual C++ .NET, if you do not add <ph id=\"ph1\">`IRowsetNotifyCP`</ph> to your inheritance chain, the compiler removes all that code from your compilation stream, thus making your code size smaller.","pos":[4898,5107],"source":" Due to a compiler feature in Visual C++ .NET, if you do not add `IRowsetNotifyCP` to your inheritance chain, the compiler removes all that code from your compilation stream, thus making your code size smaller."},{"content":"See Also","pos":[5116,5124]},{"content":"Advanced Provider Techniques","pos":[5129,5157]}],"content":"---\ntitle: \"Supporting Notifications | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"notifications [C++], OLE DB consumers\"\n  - \"events [C++], notifications in OLE DB\"\n  - \"OLE DB consumers, notifications\"\n  - \"rowsets, event notifications\"\n  - \"OLE DB provider templates, notifications\"\n  - \"OLE DB providers, notifications\"\nms.assetid: 76e875fd-2bfd-4e4e-9f43-dbe5a3fa7382\ncaps.latest.revision: 7\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Supporting Notifications\n## Implementing Connection Point Interfaces on the Provider and Consumer  \n To implement notifications, a provider class must inherit from [IRowsetNotifyCP](../../data/oledb/irowsetnotifycp-class.md) and [IConnectionPointContainer](../../atl/reference/iconnectionpointcontainerimpl-class.md).  \n  \n `IRowsetNotifyCP` implements the provider site for the connection point interface [IRowsetNotify](https://msdn.microsoft.com/en-us/library/ms712959.aspx). `IRowsetNotifyCP` implements broadcast functions to advise listeners on the connection point **IID_IRowsetNotify** of changes to the contents of the rowset.  \n  \n Note that you must also implement and register `IRowsetNotify` on the consumer (also known as the sink) using [IRowsetNotifyImpl](../../data/oledb/irowsetnotifyimpl-class.md) so that the consumer can handle notifications. For information about implementing the connection point interface on the consumer, see [Receiving Notifications](../../data/oledb/receiving-notifications.md).  \n  \n In addition, the class must also contain a map that defines the connection point entry, like this:  \n  \n```  \nBEGIN_CONNECTION_POINT_MAP  \n   CONNECTIONPOINT_ENTRY (IID_IRowsetNotify)  \nEND_CONNECTION_POINT_MAP  \n```  \n  \n## Adding IRowsetNotify  \n To add `IRowsetNotify`, you need to add `IConnectionPointContainerImpl<rowset-name>` and `IRowsetNotifyCP<rowset-name>` to your inheritance chain.  \n  \n For example, here is the inheritance chain for `RUpdateRowset` in [UpdatePV](http://msdn.microsoft.com/en-us/c8bed873-223c-4a7d-af55-f90138c6f38f):  \n  \n> [!NOTE]\n>  The sample code might differ from what is listed here; you should regard the sample code as the more up-to-date version.  \n  \n```  \n///////////////////////////////////////////////////////////////////////////  \n// class RUpdateRowset (in rowset.h)  \n  \nclass RUpdateRowset :   \npublic CRowsetImpl< RUpdateRowset, CAgentMan, CUpdateCommand,   \n         CAtlArray< CAgentMan, CAtlArray<CAgentMan> >, CSimpleRow,   \n         IRowsetScrollImpl< RUpdateRowset, IRowsetScroll > >,  \n      public IRowsetUpdateImpl< RUpdateRowset, CAgentMan >,  \n      public IConnectionPointContainerImpl<RUpdateRowset>,  \n      public IRowsetNotifyCP<RUpdateRowset>  \n```  \n  \n### Setting COM Map Entries  \n You also need to add the following to the COM map in your rowset:  \n  \n```  \nCOM_INTERFACE_ENTRY(IConnectionPointContainer)  \nCOM_INTERFACE_ENTRY_IMPL(IConnectionPointContainer)  \n```  \n  \n These macros allow anyone calling `QueryInterface` for your connection point container (the basis of `IRowsetNotify`) to find the requested interface on your provider. For an example of how to use connection points, see the ATL POLYGON sample and tutorial.  \n  \n### Setting Connection Point Map Entries  \n You also need to add a connection point map. It should look something like:  \n  \n```  \nBEGIN_CONNECTION_POINT_MAP(rowset-name)  \n     CONNECTION_POINT_ENTRY(_uuidof(IRowsetNotify))  \nEND_CONNECTION_POINT_MAP()  \n```  \n  \n This connection point map allows a component looking for the `IRowsetNotify` interface to find it in your provider.  \n  \n### Setting Properties  \n You also need to add the following properties to your provider. You only need to add properties based on the interfaces that you support.  \n  \n|Property|Add if you support|  \n|--------------|------------------------|  \n|**DBPROP_IConnectionPointContainer**|Always|  \n|**DBPROP_NOTIFICATIONGRANULARITY**|Always|  \n|**DBPROP_NOTIFICATIONPHASES**|Always|  \n|**DBPROP_NOTIFYCOLUMNSET**|`IRowsetChange`|  \n|**DBPROP_NOTIFYROWDELETE**|`IRowsetChange`|  \n|**DBPROP_NOTIFYROWINSERT**|`IRowsetChange`|  \n|**DBPROP_NOTIFYROWSETFETCHPOSITIONCHANGE**|Always|  \n|**DBPROP_NOTIFYROWFIRSTCHANGE**|`IRowsetUpdate`|  \n|**DBPROP_NOTIFYROWSETRELEASE**|Always|  \n|**DBPROP_NOTIFYROWUNDOCHANGE**|`IRowsetUpdate`|  \n|**DBPROP_NOTIFYROWUNDODELETE**|`IRowsetUpdate`|  \n|**DBPROP_NOTIFYROWUNDOINSERT**|`IRowsetUpdate`|  \n|**DBPROP_NOTIFYROWUPDATE**|`IRowsetUpdate`|  \n  \n Most of the implementation for the notifications is already embedded in the OLE DB Provider Templates. Due to a compiler feature in Visual C++ .NET, if you do not add `IRowsetNotifyCP` to your inheritance chain, the compiler removes all that code from your compilation stream, thus making your code size smaller.  \n  \n## See Also  \n [Advanced Provider Techniques](../../data/oledb/advanced-provider-techniques.md)"}