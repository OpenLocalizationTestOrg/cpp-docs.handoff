{"nodes":[{"pos":[12,50],"content":"CMapStringToPtr Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"CMapStringToPtr Class | Microsoft Docs","pos":[0,38]}]},{"pos":[699,720],"content":"CMapStringToPtr Class","linkify":"CMapStringToPtr Class","nodes":[{"content":"CMapStringToPtr Class","pos":[0,21]}]},{"pos":[721,779],"content":"Supports maps of void pointers keyed by <ph id=\"ph1\">`CString`</ph> objects.","source":"Supports maps of void pointers keyed by `CString` objects."},{"pos":[788,794],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[859,866],"content":"Members","linkify":"Members","nodes":[{"content":"Members","pos":[0,7]}]},{"content":"The member functions of <ph id=\"ph1\">`CMapStringToPtr`</ph> are similar to the member functions of class <bpt id=\"p1\">[</bpt>CMapStringToOb<ept id=\"p1\">](../../mfc/reference/cmapstringtoob-class.md)</ept>.","pos":[870,1019],"source":"The member functions of `CMapStringToPtr` are similar to the member functions of class [CMapStringToOb](../../mfc/reference/cmapstringtoob-class.md)."},{"content":"Because of this similarity, you can use the <ph id=\"ph1\">`CMapStringToOb`</ph> reference documentation for member function specifics.","pos":[1020,1135],"source":" Because of this similarity, you can use the `CMapStringToOb` reference documentation for member function specifics."},{"content":"Wherever you see a <ph id=\"ph1\">`CObject`</ph> pointer as a function parameter or return value, substitute a pointer to <ph id=\"ph2\">`void`</ph>.","pos":[1136,1245],"source":" Wherever you see a `CObject` pointer as a function parameter or return value, substitute a pointer to `void`."},{"content":"for example, translates to","pos":[1344,1370]},{"pos":[1466,1485],"content":"Public Constructors","linkify":"Public Constructors","nodes":[{"content":"Public Constructors","pos":[0,19]}]},{"content":"Name","pos":[1492,1496]},{"content":"Description","pos":[1497,1508]},{"pos":[1546,1654],"content":"<bpt id=\"p1\">[</bpt>CMapStringToOb::CMapStringToOb<ept id=\"p1\">](../../mfc/reference/cmapstringtoob-class.md#cmapstringtoob__cmapstringtoob)</ept>","source":"[CMapStringToOb::CMapStringToOb](../../mfc/reference/cmapstringtoob-class.md#cmapstringtoob__cmapstringtoob)"},{"content":"Constructor.","pos":[1655,1667]},{"pos":[1678,1692],"content":"Public Methods","linkify":"Public Methods","nodes":[{"content":"Public Methods","pos":[0,14]}]},{"content":"Name","pos":[1699,1703]},{"content":"Description","pos":[1704,1715]},{"pos":[1753,1849],"content":"<bpt id=\"p1\">[</bpt>CMapStringToOb::GetCount<ept id=\"p1\">](../../mfc/reference/cmapstringtoob-class.md#cmapstringtoob__getcount)</ept>","source":"[CMapStringToOb::GetCount](../../mfc/reference/cmapstringtoob-class.md#cmapstringtoob__getcount)"},{"content":"Returns the number of elements in this map.","pos":[1850,1893]},{"pos":[1898,2010],"content":"<bpt id=\"p1\">[</bpt>CMapStringToOb::GetHashTableSize<ept id=\"p1\">](../../mfc/reference/cmapstringtoob-class.md#cmapstringtoob__gethashtablesize)</ept>","source":"[CMapStringToOb::GetHashTableSize](../../mfc/reference/cmapstringtoob-class.md#cmapstringtoob__gethashtablesize)"},{"content":"Determines the current number of elements in the hash table.","pos":[2011,2071]},{"pos":[2076,2180],"content":"<bpt id=\"p1\">[</bpt>CMapStringToOb::GetNextAssoc<ept id=\"p1\">](../../mfc/reference/cmapstringtoob-class.md#cmapstringtoob__getnextassoc)</ept>","source":"[CMapStringToOb::GetNextAssoc](../../mfc/reference/cmapstringtoob-class.md#cmapstringtoob__getnextassoc)"},{"content":"Gets the next element for iterating.","pos":[2181,2217]},{"pos":[2222,2316],"content":"<bpt id=\"p1\">[</bpt>CMapStringToOb::GetSize<ept id=\"p1\">](../../mfc/reference/cmapstringtoob-class.md#cmapstringtoob__getsize)</ept>","source":"[CMapStringToOb::GetSize](../../mfc/reference/cmapstringtoob-class.md#cmapstringtoob__getsize)"},{"content":"Returns the number of elements in this map.","pos":[2317,2360]},{"pos":[2365,2477],"content":"<bpt id=\"p1\">[</bpt>CMapStringToOb::GetStartPosition<ept id=\"p1\">](../../mfc/reference/cmapstringtoob-class.md#cmapstringtoob__getstartposition)</ept>","source":"[CMapStringToOb::GetStartPosition](../../mfc/reference/cmapstringtoob-class.md#cmapstringtoob__getstartposition)"},{"content":"Returns the position of the first element.","pos":[2478,2520]},{"pos":[2525,2619],"content":"<bpt id=\"p1\">[</bpt>CMapStringToOb::HashKey<ept id=\"p1\">](../../mfc/reference/cmapstringtoob-class.md#cmapstringtoob__hashkey)</ept>","source":"[CMapStringToOb::HashKey](../../mfc/reference/cmapstringtoob-class.md#cmapstringtoob__hashkey)"},{"content":"Calculates the hash value of a specified key.","pos":[2620,2665]},{"pos":[2670,2776],"content":"<bpt id=\"p1\">[</bpt>CMapStringToOb::InitHashTable<ept id=\"p1\">](../../mfc/reference/cmapstringtoob-class.md#cmapstringtoob__inithashtable)</ept>","source":"[CMapStringToOb::InitHashTable](../../mfc/reference/cmapstringtoob-class.md#cmapstringtoob__inithashtable)"},{"content":"Initializes the hash table.","pos":[2777,2804]},{"pos":[2809,2903],"content":"<bpt id=\"p1\">[</bpt>CMapStringToOb::IsEmpty<ept id=\"p1\">](../../mfc/reference/cmapstringtoob-class.md#cmapstringtoob__isempty)</ept>","source":"[CMapStringToOb::IsEmpty](../../mfc/reference/cmapstringtoob-class.md#cmapstringtoob__isempty)"},{"content":"Tests for the empty-map condition (no elements).","pos":[2904,2952]},{"pos":[2957,3049],"content":"<bpt id=\"p1\">[</bpt>CMapStringToOb::Lookup<ept id=\"p1\">](../../mfc/reference/cmapstringtoob-class.md#cmapstringtoob__lookup)</ept>","source":"[CMapStringToOb::Lookup](../../mfc/reference/cmapstringtoob-class.md#cmapstringtoob__lookup)"},{"content":"Looks up a void pointer based on the void pointer key.","pos":[3050,3104]},{"content":"The pointer value, not the entity it points to, is used for the key comparison.","pos":[3105,3184]},{"pos":[3189,3287],"content":"<bpt id=\"p1\">[</bpt>CMapStringToOb::LookupKey<ept id=\"p1\">](../../mfc/reference/cmapstringtoob-class.md#cmapstringtoob__lookupkey)</ept>","source":"[CMapStringToOb::LookupKey](../../mfc/reference/cmapstringtoob-class.md#cmapstringtoob__lookupkey)"},{"content":"Returns a reference to the key associated with the specified key value.","pos":[3288,3359]},{"pos":[3364,3462],"content":"<bpt id=\"p1\">[</bpt>CMapStringToOb::RemoveAll<ept id=\"p1\">](../../mfc/reference/cmapstringtoob-class.md#cmapstringtoob__removeall)</ept>","source":"[CMapStringToOb::RemoveAll](../../mfc/reference/cmapstringtoob-class.md#cmapstringtoob__removeall)"},{"content":"Removes all the elements from this map.","pos":[3463,3502]},{"pos":[3507,3605],"content":"<bpt id=\"p1\">[</bpt>CMapStringToOb::RemoveKey<ept id=\"p1\">](../../mfc/reference/cmapstringtoob-class.md#cmapstringtoob__removekey)</ept>","source":"[CMapStringToOb::RemoveKey](../../mfc/reference/cmapstringtoob-class.md#cmapstringtoob__removekey)"},{"content":"Removes an element specified by a key.","pos":[3606,3644]},{"pos":[3649,3739],"content":"<bpt id=\"p1\">[</bpt>CMapStringToOb::SetAt<ept id=\"p1\">](../../mfc/reference/cmapstringtoob-class.md#cmapstringtoob__setat)</ept>","source":"[CMapStringToOb::SetAt](../../mfc/reference/cmapstringtoob-class.md#cmapstringtoob__setat)"},{"content":"Inserts an element into the map; replaces an existing element if a matching key is found.","pos":[3740,3829]},{"pos":[3840,3856],"content":"Public Operators","linkify":"Public Operators","nodes":[{"content":"Public Operators","pos":[0,16]}]},{"content":"Name","pos":[3863,3867]},{"content":"Description","pos":[3868,3879]},{"pos":[3917,4020],"content":"<bpt id=\"p1\">[</bpt>CMapStringToOb::operator [ ]<ept id=\"p1\">](../../mfc/reference/cmapstringtoob-class.md#cmapstringtoob__operator_at)</ept>","source":"[CMapStringToOb::operator [ ]](../../mfc/reference/cmapstringtoob-class.md#cmapstringtoob__operator_at)"},{"pos":[4021,4089],"content":"Inserts an element into the map — operator substitution for <ph id=\"ph1\">`SetAt`</ph>.","source":"Inserts an element into the map — operator substitution for `SetAt`."},{"pos":[4099,4106],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"<ph id=\"ph1\">`CMapStringToPtr`</ph> incorporates the <ph id=\"ph2\">`IMPLEMENT_DYNAMIC`</ph> macro to support run-time type access and dumping to a <ph id=\"ph3\">`CDumpContext`</ph> object.","pos":[4110,4242],"source":"`CMapStringToPtr` incorporates the `IMPLEMENT_DYNAMIC` macro to support run-time type access and dumping to a `CDumpContext` object."},{"content":"If you need a dump of individual map elements, you must set the depth of the dump context to 1 or greater.","pos":[4243,4349]},{"content":"String-to-pointer maps may not be serialized.","pos":[4356,4401]},{"pos":[4408,4538],"content":"When a <ph id=\"ph1\">`CMapStringToPtr`</ph> object is deleted, or when its elements are removed, the <ph id=\"ph2\">`CString`</ph> key objects and the words are removed.","source":"When a `CMapStringToPtr` object is deleted, or when its elements are removed, the `CString` key objects and the words are removed."},{"pos":[4547,4568],"content":"Inheritance Hierarchy","linkify":"Inheritance Hierarchy","nodes":[{"content":"Inheritance Hierarchy","pos":[0,21]}]},{"pos":[4572,4619],"content":"<bpt id=\"p1\">[</bpt>CObject<ept id=\"p1\">](../../mfc/reference/cobject-class.md)</ept>","source":"[CObject](../../mfc/reference/cobject-class.md)"},{"pos":[4652,4664],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[4668,4689],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> afxcoll.h","source":"**Header:** afxcoll.h"},{"pos":[4698,4706],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>CObject Class<ept id=\"p1\">](../../mfc/reference/cobject-class.md)</ept><ph id=\"ph1\"> </ph>","pos":[4710,4764],"source":"[CObject Class](../../mfc/reference/cobject-class.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Hierarchy Chart<ept id=\"p1\">](../../mfc/hierarchy-chart.md)</ept>","pos":[4767,4815],"source":" [Hierarchy Chart](../../mfc/hierarchy-chart.md)"}],"content":"---\ntitle: \"CMapStringToPtr Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"CMapStringToPtr\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"collection classes, string mapping\"\n  - \"strings [C++], class for mapping\"\n  - \"CMapStringToPtr class\"\nms.assetid: 1ac11143-eb0a-4511-a662-2df0d1d9005b\ncaps.latest.revision: 22\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# CMapStringToPtr Class\nSupports maps of void pointers keyed by `CString` objects.  \n  \n## Syntax  \n  \n```  \nclass CMapStringToPtr : public CObject  \n```  \n  \n## Members  \n The member functions of `CMapStringToPtr` are similar to the member functions of class [CMapStringToOb](../../mfc/reference/cmapstringtoob-class.md). Because of this similarity, you can use the `CMapStringToOb` reference documentation for member function specifics. Wherever you see a `CObject` pointer as a function parameter or return value, substitute a pointer to `void`.  \n  \n `BOOL CMapStringToOb::Lookup( const char* <key>,`  \n  \n `CObject*& <rValue> ) const;`  \n  \n for example, translates to  \n  \n `BOOL CMapStringToPtr::Lookup( LPCTSTR <key>, void*& <rValue> )`  \n  \n `const;`  \n  \n### Public Constructors  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CMapStringToOb::CMapStringToOb](../../mfc/reference/cmapstringtoob-class.md#cmapstringtoob__cmapstringtoob)|Constructor.|  \n  \n### Public Methods  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CMapStringToOb::GetCount](../../mfc/reference/cmapstringtoob-class.md#cmapstringtoob__getcount)|Returns the number of elements in this map.|  \n|[CMapStringToOb::GetHashTableSize](../../mfc/reference/cmapstringtoob-class.md#cmapstringtoob__gethashtablesize)|Determines the current number of elements in the hash table.|  \n|[CMapStringToOb::GetNextAssoc](../../mfc/reference/cmapstringtoob-class.md#cmapstringtoob__getnextassoc)|Gets the next element for iterating.|  \n|[CMapStringToOb::GetSize](../../mfc/reference/cmapstringtoob-class.md#cmapstringtoob__getsize)|Returns the number of elements in this map.|  \n|[CMapStringToOb::GetStartPosition](../../mfc/reference/cmapstringtoob-class.md#cmapstringtoob__getstartposition)|Returns the position of the first element.|  \n|[CMapStringToOb::HashKey](../../mfc/reference/cmapstringtoob-class.md#cmapstringtoob__hashkey)|Calculates the hash value of a specified key.|  \n|[CMapStringToOb::InitHashTable](../../mfc/reference/cmapstringtoob-class.md#cmapstringtoob__inithashtable)|Initializes the hash table.|  \n|[CMapStringToOb::IsEmpty](../../mfc/reference/cmapstringtoob-class.md#cmapstringtoob__isempty)|Tests for the empty-map condition (no elements).|  \n|[CMapStringToOb::Lookup](../../mfc/reference/cmapstringtoob-class.md#cmapstringtoob__lookup)|Looks up a void pointer based on the void pointer key. The pointer value, not the entity it points to, is used for the key comparison.|  \n|[CMapStringToOb::LookupKey](../../mfc/reference/cmapstringtoob-class.md#cmapstringtoob__lookupkey)|Returns a reference to the key associated with the specified key value.|  \n|[CMapStringToOb::RemoveAll](../../mfc/reference/cmapstringtoob-class.md#cmapstringtoob__removeall)|Removes all the elements from this map.|  \n|[CMapStringToOb::RemoveKey](../../mfc/reference/cmapstringtoob-class.md#cmapstringtoob__removekey)|Removes an element specified by a key.|  \n|[CMapStringToOb::SetAt](../../mfc/reference/cmapstringtoob-class.md#cmapstringtoob__setat)|Inserts an element into the map; replaces an existing element if a matching key is found.|  \n  \n### Public Operators  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CMapStringToOb::operator [ ]](../../mfc/reference/cmapstringtoob-class.md#cmapstringtoob__operator_at)|Inserts an element into the map — operator substitution for `SetAt`.|  \n  \n## Remarks  \n `CMapStringToPtr` incorporates the `IMPLEMENT_DYNAMIC` macro to support run-time type access and dumping to a `CDumpContext` object. If you need a dump of individual map elements, you must set the depth of the dump context to 1 or greater.  \n  \n String-to-pointer maps may not be serialized.  \n  \n When a `CMapStringToPtr` object is deleted, or when its elements are removed, the `CString` key objects and the words are removed.  \n  \n## Inheritance Hierarchy  \n [CObject](../../mfc/reference/cobject-class.md)  \n  \n `CMapStringToPtr`  \n  \n## Requirements  \n **Header:** afxcoll.h  \n  \n## See Also  \n [CObject Class](../../mfc/reference/cobject-class.md)   \n [Hierarchy Chart](../../mfc/hierarchy-chart.md)\n\n\n\n"}