{"nodes":[{"pos":[12,56],"content":"partial_sort_copy (STL-CLR) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"partial_sort_copy (STL-CLR) | Microsoft Docs","pos":[0,44]}]},{"content":"partial_sort_copy (STL/CLR)","pos":[649,676]},{"content":"Copies elements from a source range into a destination range where the source elements are ordered by either less than or another specified binary predicate.","pos":[677,834]},{"content":"Syntax","pos":[843,849]},{"content":"Remarks","pos":[1189,1196]},{"content":"This function behaves the same as the STL function <ph id=\"ph1\">`partial_sort_copy`</ph>.","pos":[1200,1271],"source":"This function behaves the same as the STL function `partial_sort_copy`."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>partial_sort_copy<ept id=\"p1\">](http://msdn.microsoft.com/Library/cf137213-7eb6-4109-a94b-3b3d572e19ce)</ept>.","pos":[1272,1390],"source":" For more information, see [partial_sort_copy](http://msdn.microsoft.com/Library/cf137213-7eb6-4109-a94b-3b3d572e19ce)."},{"content":"Requirements","pos":[1399,1411]},{"pos":[1415,1446],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> <ph id=\"ph1\">\\&lt;</ph>cliext/algorithm&gt;","source":"**Header:** \\<cliext/algorithm>"},{"pos":[1453,1474],"content":"<bpt id=\"p1\">**</bpt>Namespace:<ept id=\"p1\">**</ept> cliext","source":"**Namespace:** cliext"},{"content":"See Also","pos":[1483,1491]},{"content":"algorithm (STL/CLR)","pos":[1496,1515]}],"content":"---\ntitle: \"partial_sort_copy (STL-CLR) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"cliext::partial_sort_copy\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"partial_sort_copy function [STL/CLR]\"\nms.assetid: ed4af83e-7554-4f6d-bf54-c56fa6210fe8\ncaps.latest.revision: 4\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# partial_sort_copy (STL/CLR)\nCopies elements from a source range into a destination range where the source elements are ordered by either less than or another specified binary predicate.  \n  \n## Syntax  \n  \n```  \ntemplate<class _InIt, class _RanIt> inline  \n    _RanIt partial_sort_copy(_InIt _First1, _InIt _Last1,  \n        _RanIt _First2, _RanIt _Last2);  \ntemplate<class _InIt, class _RanIt, class _Pr> inline  \n    _RanIt partial_sort_copy(_InIt _First1, _InIt _Last1,  \n        _RanIt _First2, _RanIt _Last2, _Pr _Pred);  \n```  \n  \n## Remarks  \n This function behaves the same as the STL function `partial_sort_copy`. For more information, see [partial_sort_copy](http://msdn.microsoft.com/Library/cf137213-7eb6-4109-a94b-3b3d572e19ce).  \n  \n## Requirements  \n **Header:** \\<cliext/algorithm>  \n  \n **Namespace:** cliext  \n  \n## See Also  \n [algorithm (STL/CLR)](../dotnet/algorithm-stl-clr.md)"}