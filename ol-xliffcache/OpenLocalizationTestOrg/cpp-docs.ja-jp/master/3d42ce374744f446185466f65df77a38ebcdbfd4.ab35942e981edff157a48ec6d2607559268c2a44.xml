{"nodes":[{"pos":[12,44],"content":"bad_alloc Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"bad_alloc Class | Microsoft Docs","pos":[0,32]}]},{"pos":[664,679],"content":"bad_alloc Class","linkify":"bad_alloc Class","nodes":[{"content":"bad_alloc Class","pos":[0,15]}]},{"content":"The class describes an exception thrown to indicate that an allocation request did not succeed.","pos":[680,775]},{"pos":[784,790],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[898,905],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The value returned by <bpt id=\"p1\">**</bpt>what<ept id=\"p1\">**</ept> is an implementation-defined C string.","pos":[909,978],"source":"The value returned by **what** is an implementation-defined C string."},{"content":"None of the member functions throw any exceptions.","pos":[979,1029]},{"pos":[1038,1050],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[1054,1072],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> <ph id=\"ph1\">\\&lt;</ph>new&gt;","source":"**Header:** \\<new>"},{"pos":[1079,1097],"content":"<bpt id=\"p1\">**</bpt>Namespace:<ept id=\"p1\">**</ept> std","source":"**Namespace:** std"},{"pos":[1106,1113],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[1449,1462],"content":"Sample Output","linkify":"Sample Output","nodes":[{"content":"Sample Output","pos":[0,13]}]},{"pos":[1503,1515],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[1519,1537],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> <ph id=\"ph1\">\\&lt;</ph>new&gt;","source":"**Header:** \\<new>"},{"pos":[1546,1554],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>exception Class<ept id=\"p1\">](../standard-library/exception-class.md)</ept>","pos":[1556,1613],"source":"[exception Class](../standard-library/exception-class.md)"},{"content":"<bpt id=\"p1\"> [</bpt>Thread Safety in the C++ Standard Library<ept id=\"p1\">](../standard-library/thread-safety-in-the-cpp-standard-library.md)</ept>","pos":[1616,1726],"source":" [Thread Safety in the C++ Standard Library](../standard-library/thread-safety-in-the-cpp-standard-library.md)"}],"content":"---\ntitle: \"bad_alloc Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"std::bad_alloc\"\n  - \"new/std:bad_alloc\"\n  - \"bad_alloc\"\n  - \"std.bad_alloc\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"bad_alloc class\"\nms.assetid: 6429a8e6-5a49-4907-8d56-f4a4ec8131d0\ncaps.latest.revision: 26\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# bad_alloc Class\nThe class describes an exception thrown to indicate that an allocation request did not succeed.  \n  \n## Syntax  \n  \n```  \nclass bad_alloc : public exception {  \n    bad_alloc();\nvirtual ~bad_alloc();\n\n};  \n```  \n  \n## Remarks  \n The value returned by **what** is an implementation-defined C string. None of the member functions throw any exceptions.  \n  \n## Requirements  \n **Header:** \\<new>  \n  \n **Namespace:** std  \n  \n## Example  \n  \n```cpp  \n// bad_alloc.cpp  \n// compile with: /EHsc  \n#include<new>  \n#include<iostream>  \nusing namespace std;  \n  \nint main() {  \n   char* ptr;  \n   try {  \n      ptr = new char[(~unsigned int((int)0)/2) - 1];  \n      delete[] ptr;  \n   }  \n   catch( bad_alloc &ba) {  \n      cout << ba.what( ) << endl;  \n   }  \n}  \n```  \n  \n## Sample Output  \n  \n```  \nbad allocation  \n```  \n  \n## Requirements  \n **Header:** \\<new>  \n  \n## See Also\n [exception Class](../standard-library/exception-class.md)  \n [Thread Safety in the C++ Standard Library](../standard-library/thread-safety-in-the-cpp-standard-library.md)\n\n"}