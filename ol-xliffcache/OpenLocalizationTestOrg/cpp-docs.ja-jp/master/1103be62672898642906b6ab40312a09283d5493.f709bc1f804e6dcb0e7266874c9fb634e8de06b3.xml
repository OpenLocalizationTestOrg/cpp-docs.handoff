{"nodes":[{"pos":[12,80],"content":"Strong Name Assemblies (Assembly Signing) (C++-CLI) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Strong Name Assemblies (Assembly Signing) (C++-CLI) | Microsoft Docs","pos":[0,68]}]},{"content":"Strong Name Assemblies (Assembly Signing) (C++/CLI)","pos":[780,831]},{"content":"This topic discusses how you can sign your assembly, often referred to as giving your assembly a strong name.","pos":[832,941]},{"content":"Remarks","pos":[950,957]},{"content":"When using Visual C++, use linker options to sign your assembly to avoid issues related to the CLR attributes for assembly signing:","pos":[961,1092]},{"content":"&lt;xref:System.Reflection.AssemblyDelaySignAttribute&gt;","pos":[1102,1153],"source":"<xref:System.Reflection.AssemblyDelaySignAttribute>"},{"content":"&lt;xref:System.Reflection.AssemblyKeyFileAttribute&gt;","pos":[1163,1212],"source":"<xref:System.Reflection.AssemblyKeyFileAttribute>"},{"content":"&lt;xref:System.Reflection.AssemblyKeyNameAttribute&gt;","pos":[1222,1271],"source":"<xref:System.Reflection.AssemblyKeyNameAttribute>"},{"content":"Reasons for not using the attributes include the fact that the key name is visible in assembly metadata, which can be a security risk if the file name includes confidential information.","pos":[1278,1463]},{"content":"Also, the build process used by the Visual C++ development environment will invalidate the key with which the assembly is signed if you use CLR attributes to give an assembly a strong name, and then run a post-processing tool like mt.exe on the assembly.","pos":[1464,1718]},{"content":"If you build at the command line, use linker options to sign your assembly, and then run a post-processing tool (like mt.exe), you will need to re-sign the assembly with sn.exe.","pos":[1725,1902]},{"content":"Alternatively, you can build and delay sign the assembly and after running post-processing tools, complete the signing.","pos":[1903,2022]},{"content":"If you use the signing attributes when building in the development environment, you can successfully sign the assembly by explicitly calling sn.exe (<bpt id=\"p1\">[</bpt>Sn.exe (Strong Name Tool)<ept id=\"p1\">](http://msdn.microsoft.com/Library/c1d2b532-1b8e-4c7a-8ac5-53b801135ec6)</ept>) in a post-build event.","pos":[2029,2301],"source":"If you use the signing attributes when building in the development environment, you can successfully sign the assembly by explicitly calling sn.exe ([Sn.exe (Strong Name Tool)](http://msdn.microsoft.com/Library/c1d2b532-1b8e-4c7a-8ac5-53b801135ec6)) in a post-build event."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Specifying Build Events<ept id=\"p1\">](../ide/specifying-build-events.md)</ept>.","pos":[2302,2389],"source":" For more information, see [Specifying Build Events](../ide/specifying-build-events.md)."},{"content":"Build times may be less if you use attributes and a post-build event, compared to using a linker options.","pos":[2390,2495]},{"content":"The following linker options support assembly signing:","pos":[2502,2556]},{"content":"/DELAYSIGN (Partially Sign an Assembly)","pos":[2567,2606]},{"content":"/KEYFILE (Specify Key or Key Pair to Sign an Assembly)","pos":[2678,2732]},{"content":"/KEYCONTAINER (Specify a Key Container to Sign an Assembly)","pos":[2819,2878]},{"pos":[2966,3130],"content":"For more information on strong assemblies, see <bpt id=\"p1\">[</bpt>Creating and Using Strong-Named Assemblies<ept id=\"p1\">](http://msdn.microsoft.com/Library/ffbf6d9e-4a88-4a8a-9645-4ce0ee1ee5f9)</ept>.","source":"For more information on strong assemblies, see [Creating and Using Strong-Named Assemblies](http://msdn.microsoft.com/Library/ffbf6d9e-4a88-4a8a-9645-4ce0ee1ee5f9)."},{"content":"See Also","pos":[3139,3147]},{"content":".NET Programming with C++/CLI (Visual C++)","pos":[3152,3194]}],"content":"---\ntitle: \"Strong Name Assemblies (Assembly Signing) (C++-CLI) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"assemblies [C++]\"\n  - \"signing assemblies\"\n  - \".NET Framework [C++], assembly signing\"\n  - \"assemblies [C++], signing\"\n  - \"linker [C++], assembly signing\"\n  - \"strong-named assemblies [C++]\"\nms.assetid: c337cd3f-e5dd-4c6f-a1ad-437e85dba1cc\ncaps.latest.revision: 6\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Strong Name Assemblies (Assembly Signing) (C++/CLI)\nThis topic discusses how you can sign your assembly, often referred to as giving your assembly a strong name.  \n  \n## Remarks  \n When using Visual C++, use linker options to sign your assembly to avoid issues related to the CLR attributes for assembly signing:  \n  \n-   <xref:System.Reflection.AssemblyDelaySignAttribute>  \n  \n-   <xref:System.Reflection.AssemblyKeyFileAttribute>  \n  \n-   <xref:System.Reflection.AssemblyKeyNameAttribute>  \n  \n Reasons for not using the attributes include the fact that the key name is visible in assembly metadata, which can be a security risk if the file name includes confidential information. Also, the build process used by the Visual C++ development environment will invalidate the key with which the assembly is signed if you use CLR attributes to give an assembly a strong name, and then run a post-processing tool like mt.exe on the assembly.  \n  \n If you build at the command line, use linker options to sign your assembly, and then run a post-processing tool (like mt.exe), you will need to re-sign the assembly with sn.exe. Alternatively, you can build and delay sign the assembly and after running post-processing tools, complete the signing.  \n  \n If you use the signing attributes when building in the development environment, you can successfully sign the assembly by explicitly calling sn.exe ([Sn.exe (Strong Name Tool)](http://msdn.microsoft.com/Library/c1d2b532-1b8e-4c7a-8ac5-53b801135ec6)) in a post-build event. For more information, see [Specifying Build Events](../ide/specifying-build-events.md). Build times may be less if you use attributes and a post-build event, compared to using a linker options.  \n  \n The following linker options support assembly signing:  \n  \n-   [/DELAYSIGN (Partially Sign an Assembly)](../build/reference/delaysign-partially-sign-an-assembly.md)  \n  \n-   [/KEYFILE (Specify Key or Key Pair to Sign an Assembly)](../build/reference/keyfile-specify-key-or-key-pair-to-sign-an-assembly.md)  \n  \n-   [/KEYCONTAINER (Specify a Key Container to Sign an Assembly)](../build/reference/keycontainer-specify-a-key-container-to-sign-an-assembly.md)  \n  \n For more information on strong assemblies, see [Creating and Using Strong-Named Assemblies](http://msdn.microsoft.com/Library/ffbf6d9e-4a88-4a8a-9645-4ce0ee1ee5f9).  \n  \n## See Also  \n [.NET Programming with C++/CLI (Visual C++)](../dotnet/dotnet-programming-with-cpp-cli-visual-cpp.md)"}