{"nodes":[{"pos":[12,42],"content":"fputs, fputws | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"fputs, fputws | Microsoft Docs","pos":[0,30]}]},{"pos":[1046,1059],"content":"fputs, fputws","linkify":"fputs, fputws","nodes":[{"content":"fputs, fputws","pos":[0,13]}]},{"content":"Writes a string to a stream.","pos":[1060,1088]},{"pos":[1097,1103],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[1253,1263],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Output string.","pos":[1276,1290]},{"content":"Pointer to <ph id=\"ph1\">`FILE`</ph> structure.","pos":[1309,1337],"source":" Pointer to `FILE` structure."},{"pos":[1346,1358],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Each of these functions returns a nonnegative value if it is successful.","pos":[1362,1434]},{"content":"On an error, <ph id=\"ph1\">`fputs`</ph> and <ph id=\"ph2\">`fputws`</ph> return <ph id=\"ph3\">`EOF`</ph>.","pos":[1435,1482],"source":" On an error, `fputs` and `fputws` return `EOF`."},{"content":"If <ph id=\"ph1\">`str`</ph> or <ph id=\"ph2\">`stream`</ph> is a null pointer, these functions invoke the invalid parameter handler, as described in <bpt id=\"p1\">[</bpt>Parameter Validation<ept id=\"p1\">](../../c-runtime-library/parameter-validation.md)</ept>.","pos":[1483,1665],"source":" If `str` or `stream` is a null pointer, these functions invoke the invalid parameter handler, as described in [Parameter Validation](../../c-runtime-library/parameter-validation.md)."},{"content":"If execution is allowed to continue, these functions set <ph id=\"ph1\">`errno`</ph> to <ph id=\"ph2\">`EINVAL`</ph> and then <ph id=\"ph3\">`fputs`</ph> returns <ph id=\"ph4\">`EOF`</ph>, and <ph id=\"ph5\">`fputws`</ph> returns <ph id=\"ph6\">`WEOF`</ph>.","pos":[1666,1803],"source":" If execution is allowed to continue, these functions set `errno` to `EINVAL` and then `fputs` returns `EOF`, and `fputws` returns `WEOF`."},{"pos":[1810,1984],"content":"See <bpt id=\"p1\">[</bpt>_doserrno, errno, _sys_errlist, and _sys_nerr<ept id=\"p1\">](../../c-runtime-library/errno-doserrno-sys-errlist-and-sys-nerr.md)</ept> for more information on these, and other, error codes.","source":"See [_doserrno, errno, _sys_errlist, and _sys_nerr](../../c-runtime-library/errno-doserrno-sys-errlist-and-sys-nerr.md) for more information on these, and other, error codes."},{"pos":[1993,2000],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Each of these functions copies <ph id=\"ph1\">`str`</ph> to the output <ph id=\"ph2\">`stream`</ph> at the current position.","pos":[2004,2088],"source":"Each of these functions copies `str` to the output `stream` at the current position."},{"content":"<ph id=\"ph1\">`fputws`</ph> copies the wide-character argument <ph id=\"ph2\">`str`</ph> to <ph id=\"ph3\">`stream`</ph> as a multibyte-character string or a wide-character string according to whether <ph id=\"ph4\">`stream`</ph> is opened in text mode or binary mode, respectively.","pos":[2089,2292],"source":"`fputws` copies the wide-character argument `str` to `stream` as a multibyte-character string or a wide-character string according to whether `stream` is opened in text mode or binary mode, respectively."},{"content":"Neither function copies the terminating null character.","pos":[2293,2348]},{"content":"The two functions behave identically if the stream is opened in ANSI mode.","pos":[2355,2429]},{"content":"<ph id=\"ph1\">`fputs`</ph> does not currently support output into a UNICODE stream.","pos":[2430,2494],"source":"`fputs` does not currently support output into a UNICODE stream."},{"pos":[2504,2533],"content":"Generic-Text Routine Mappings","linkify":"Generic-Text Routine Mappings","nodes":[{"content":"Generic-Text Routine Mappings","pos":[0,29]}]},{"content":"TCHAR.H routine","pos":[2540,2555]},{"content":"_UNICODE &amp; _MBCS not defined","pos":[2556,2584],"source":"_UNICODE & _MBCS not defined"},{"content":"_MBCS defined","pos":[2585,2598]},{"content":"_UNICODE defined","pos":[2599,2615]},{"pos":[2772,2784],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"content":"Function","pos":[2791,2799]},{"content":"Required header","pos":[2800,2815]},{"content":"<ph id=\"ph1\">\\&lt;</ph>stdio.h&gt;","pos":[2869,2879],"source":"\\<stdio.h>"},{"content":"<ph id=\"ph1\">\\&lt;</ph>stdio.h&gt; or <ph id=\"ph2\">\\&lt;</ph>wchar.h&gt;","pos":[2893,2917],"source":"\\<stdio.h> or \\<wchar.h>"},{"content":"The console is not supported in <ph id=\"ph1\">[!INCLUDE[win8_appname_long](../../build/includes/win8_appname_long_md.md)]</ph> apps.","pos":[2925,3038],"source":"The console is not supported in [!INCLUDE[win8_appname_long](../../build/includes/win8_appname_long_md.md)] apps."},{"content":"The standard stream handles that are associated with the console—<ph id=\"ph1\">`stdin`</ph>, <ph id=\"ph2\">`stdout`</ph>, and <ph id=\"ph3\">`stderr`</ph>—must be redirected before C run-time functions can use them in <ph id=\"ph4\">[!INCLUDE[win8_appname_long](../../build/includes/win8_appname_long_md.md)]</ph> apps.","pos":[3039,3280],"source":" The standard stream handles that are associated with the console—`stdin`, `stdout`, and `stderr`—must be redirected before C run-time functions can use them in [!INCLUDE[win8_appname_long](../../build/includes/win8_appname_long_md.md)] apps."},{"content":"For additional compatibility information, see <bpt id=\"p1\">[</bpt>Compatibility<ept id=\"p1\">](../../c-runtime-library/compatibility.md)</ept>.","pos":[3281,3385],"source":" For additional compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md)."},{"pos":[3394,3401],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[3673,3698],"content":".NET Framework Equivalent","linkify":".NET Framework Equivalent","nodes":[{"content":".NET Framework Equivalent","pos":[0,25]}]},{"pos":[3702,3811],"content":"<bpt id=\"p1\">[</bpt>System::IO::StreamWriter::Write<ept id=\"p1\">](https://msdn.microsoft.com/en-us/library/system.io.streamwriter.write.aspx)</ept>","source":"[System::IO::StreamWriter::Write](https://msdn.microsoft.com/en-us/library/system.io.streamwriter.write.aspx)"},{"pos":[3820,3828],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Stream I/O<ept id=\"p1\">](../../c-runtime-library/stream-i-o.md)</ept><ph id=\"ph1\"> </ph>","pos":[3832,3884],"source":"[Stream I/O](../../c-runtime-library/stream-i-o.md) "},{"content":"<bpt id=\"p1\"> [</bpt>fgets, fgetws<ept id=\"p1\">](../../c-runtime-library/reference/fgets-fgetws.md)</ept><ph id=\"ph1\"> </ph>","pos":[3887,3955],"source":" [fgets, fgetws](../../c-runtime-library/reference/fgets-fgetws.md) "},{"content":"<bpt id=\"p1\"> [</bpt>gets, _getws<ept id=\"p1\">](../../c-runtime-library/gets-getws.md)</ept><ph id=\"ph1\"> </ph>","pos":[3958,4013],"source":" [gets, _getws](../../c-runtime-library/gets-getws.md) "},{"content":"<bpt id=\"p1\"> [</bpt>puts, _putws<ept id=\"p1\">](../../c-runtime-library/reference/puts-putws.md)</ept>","pos":[4016,4080],"source":" [puts, _putws](../../c-runtime-library/reference/puts-putws.md)"}],"content":"---\ntitle: \"fputs, fputws | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\napiname: \n  - \"fputs\"\n  - \"fputws\"\napilocation: \n  - \"msvcrt.dll\"\n  - \"msvcr80.dll\"\n  - \"msvcr90.dll\"\n  - \"msvcr100.dll\"\n  - \"msvcr100_clr0400.dll\"\n  - \"msvcr110.dll\"\n  - \"msvcr110_clr0400.dll\"\n  - \"msvcr120.dll\"\n  - \"msvcr120_clr0400.dll\"\n  - \"ucrtbase.dll\"\n  - \"api-ms-win-crt-stdio-l1-1-0.dll\"\napitype: \"DLLExport\"\nf1_keywords: \n  - \"fputs\"\n  - \"fputws\"\n  - \"_fputts\"\ndev_langs: \n  - \"C++\"\n  - \"C\"\nhelpviewer_keywords: \n  - \"streams, writing strings to\"\n  - \"fputws function\"\n  - \"_fputts function\"\n  - \"fputs function\"\n  - \"fputts function\"\nms.assetid: d48c82b8-aa17-4830-8c7d-30442ddbb326\ncaps.latest.revision: 18\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# fputs, fputws\nWrites a string to a stream.  \n  \n## Syntax  \n  \n```  \nint fputs(   \n   const char *str,  \n   FILE *stream   \n);  \nint fputws(   \n   const wchar_t *str,  \n   FILE *stream   \n);  \n```  \n  \n#### Parameters  \n `str`  \n Output string.  \n  \n `stream`  \n Pointer to `FILE` structure.  \n  \n## Return Value  \n Each of these functions returns a nonnegative value if it is successful. On an error, `fputs` and `fputws` return `EOF`. If `str` or `stream` is a null pointer, these functions invoke the invalid parameter handler, as described in [Parameter Validation](../../c-runtime-library/parameter-validation.md). If execution is allowed to continue, these functions set `errno` to `EINVAL` and then `fputs` returns `EOF`, and `fputws` returns `WEOF`.  \n  \n See [_doserrno, errno, _sys_errlist, and _sys_nerr](../../c-runtime-library/errno-doserrno-sys-errlist-and-sys-nerr.md) for more information on these, and other, error codes.  \n  \n## Remarks  \n Each of these functions copies `str` to the output `stream` at the current position. `fputws` copies the wide-character argument `str` to `stream` as a multibyte-character string or a wide-character string according to whether `stream` is opened in text mode or binary mode, respectively. Neither function copies the terminating null character.  \n  \n The two functions behave identically if the stream is opened in ANSI mode. `fputs` does not currently support output into a UNICODE stream.  \n  \n### Generic-Text Routine Mappings  \n  \n|TCHAR.H routine|_UNICODE & _MBCS not defined|_MBCS defined|_UNICODE defined|  \n|---------------------|------------------------------------|--------------------|-----------------------|  \n|`_fputts`|`fputs`|`fputs`|`fputws`|  \n  \n## Requirements  \n  \n|Function|Required header|  \n|--------------|---------------------|  \n|`fputs`|\\<stdio.h>|  \n|`fputws`|\\<stdio.h> or \\<wchar.h>|  \n  \n The console is not supported in [!INCLUDE[win8_appname_long](../../build/includes/win8_appname_long_md.md)] apps. The standard stream handles that are associated with the console—`stdin`, `stdout`, and `stderr`—must be redirected before C run-time functions can use them in [!INCLUDE[win8_appname_long](../../build/includes/win8_appname_long_md.md)] apps. For additional compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md).  \n  \n## Example  \n  \n```  \n// crt_fputs.c  \n// This program uses fputs to write  \n// a single line to the stdout stream.  \n  \n#include <stdio.h>  \n  \nint main( void )  \n{  \n   fputs( \"Hello world from fputs.\\n\", stdout );  \n}  \n```  \n  \n```Output  \nHello world from fputs.  \n```  \n  \n## .NET Framework Equivalent  \n [System::IO::StreamWriter::Write](https://msdn.microsoft.com/en-us/library/system.io.streamwriter.write.aspx)  \n  \n## See Also  \n [Stream I/O](../../c-runtime-library/stream-i-o.md)   \n [fgets, fgetws](../../c-runtime-library/reference/fgets-fgetws.md)   \n [gets, _getws](../../c-runtime-library/gets-getws.md)   \n [puts, _putws](../../c-runtime-library/reference/puts-putws.md)"}