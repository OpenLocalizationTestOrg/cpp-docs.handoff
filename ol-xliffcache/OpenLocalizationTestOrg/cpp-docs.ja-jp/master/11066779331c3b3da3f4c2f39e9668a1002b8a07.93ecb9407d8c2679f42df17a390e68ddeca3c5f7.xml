{"nodes":[{"pos":[12,47],"content":"fabs, fabsf, fabsl | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"fabs, fabsf, fabsl | Microsoft Docs","pos":[0,35]}]},{"pos":[1102,1120],"content":"fabs, fabsf, fabsl","linkify":"fabs, fabsf, fabsl","nodes":[{"content":"fabs, fabsf, fabsl","pos":[0,18]}]},{"content":"Calculates the absolute value of the floating-point argument.","pos":[1121,1182]},{"pos":[1191,1197],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[1440,1450],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Floating-point value.","pos":[1461,1482]},{"pos":[1491,1503],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The <ph id=\"ph1\">`fabs`</ph> functions return the absolute value of the argument <ph id=\"ph2\">`x`</ph>.","pos":[1507,1574],"source":"The `fabs` functions return the absolute value of the argument `x`."},{"content":"There is no error return.","pos":[1575,1600]},{"content":"Input","pos":[1607,1612]},{"content":"SEH Exception","pos":[1613,1626]},{"content":"Matherr Exception","pos":[1627,1644]},{"content":"± QNAN,IND","pos":[1709,1719]},{"content":"none","pos":[1720,1724]},{"content":"_DOMAIN","pos":[1725,1732]},{"pos":[1742,1749],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"C++ allows overloading, so you can call overloads of <ph id=\"ph1\">`fabs`</ph> if you include the <ph id=\"ph2\">\\&lt;</ph>cmath&gt; header.","pos":[1753,1848],"source":"C++ allows overloading, so you can call overloads of `fabs` if you include the \\<cmath> header."},{"content":"In a C program, <ph id=\"ph1\">`fabs`</ph> always takes and returns a double.","pos":[1849,1906],"source":" In a C program, `fabs` always takes and returns a double."},{"pos":[1915,1927],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"content":"Function","pos":[1934,1942]},{"content":"Required C header","pos":[1943,1960]},{"content":"Required C++ header","pos":[1961,1980]},{"pos":[2056,2080],"content":"<ph id=\"ph1\">`fabs`</ph>, <ph id=\"ph2\">`fabsf`</ph>, <ph id=\"ph3\">`fabsl`</ph>","source":"`fabs`, `fabsf`, `fabsl`"},{"content":"<ph id=\"ph1\">\\&lt;</ph>math.h&gt;","pos":[2081,2090],"source":"\\<math.h>"},{"content":"<ph id=\"ph1\">\\&lt;</ph>cmath&gt; or <ph id=\"ph2\">\\&lt;</ph>math.h&gt;","pos":[2091,2112],"source":"\\<cmath> or \\<math.h>"},{"pos":[2120,2244],"content":"For additional compatibility information, see <bpt id=\"p1\">[</bpt>Compatibility<ept id=\"p1\">](../../c-runtime-library/compatibility.md)</ept> in the Introduction.","source":"For additional compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md) in the Introduction."},{"pos":[2253,2260],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[2264,2349],"content":"See the example for <bpt id=\"p1\">[</bpt>abs<ept id=\"p1\">](../../c-runtime-library/reference/abs-labs-llabs-abs64.md)</ept>.","source":"See the example for [abs](../../c-runtime-library/reference/abs-labs-llabs-abs64.md)."},{"pos":[2358,2366],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Floating-Point Support<ept id=\"p1\">](../../c-runtime-library/floating-point-support.md)</ept><ph id=\"ph1\"> </ph>","pos":[2370,2446],"source":"[Floating-Point Support](../../c-runtime-library/floating-point-support.md) "},{"content":"<bpt id=\"p1\"> [</bpt>abs, labs, llabs, _abs64<ept id=\"p1\">](../../c-runtime-library/reference/abs-labs-llabs-abs64.md)</ept><ph id=\"ph1\"> </ph>","pos":[2449,2536],"source":" [abs, labs, llabs, _abs64](../../c-runtime-library/reference/abs-labs-llabs-abs64.md) "},{"content":"<bpt id=\"p1\"> [</bpt>_cabs<ept id=\"p1\">](../../c-runtime-library/reference/cabs.md)</ept>","pos":[2539,2590],"source":" [_cabs](../../c-runtime-library/reference/cabs.md)"}],"content":"---\ntitle: \"fabs, fabsf, fabsl | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\napiname: \n  - \"fabsf\"\n  - \"fabs\"\n  - \"fabsl\"\napilocation: \n  - \"msvcrt.dll\"\n  - \"msvcr80.dll\"\n  - \"msvcr90.dll\"\n  - \"msvcr100.dll\"\n  - \"msvcr100_clr0400.dll\"\n  - \"msvcr110.dll\"\n  - \"msvcr110_clr0400.dll\"\n  - \"msvcr120.dll\"\n  - \"msvcr120_clr0400.dll\"\n  - \"ucrtbase.dll\"\n  - \"api-ms-win-crt-math-l1-1-0.dll\"\napitype: \"DLLExport\"\nf1_keywords: \n  - \"fabs\"\n  - \"fabsf\"\n  - \"fabsl\"\n  - \"math\\fabs\"\n  - \"math\\fabsf\"\n  - \"math\\fabsl\"\ndev_langs: \n  - \"C++\"\n  - \"C\"\nhelpviewer_keywords: \n  - \"absolute values\"\n  - \"fabsf function\"\n  - \"calculating absolute values\"\n  - \"fabs function\"\n  - \"fabsl function\"\nms.assetid: 23bca210-f408-4f5e-b46b-0ccaaec31e36\ncaps.latest.revision: 11\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# fabs, fabsf, fabsl\nCalculates the absolute value of the floating-point argument.  \n  \n## Syntax  \n  \n```  \ndouble fabs(   \n   double x   \n);  \nfloat fabs(  \n   float x   \n); // C++ only  \nlong double fabs(  \n   long double x  \n); // C++ only  \nfloat fabsf(   \n   float x   \n);  \nlong double fabsl(  \n   long double x  \n);  \n```  \n  \n#### Parameters  \n `x`  \n Floating-point value.  \n  \n## Return Value  \n The `fabs` functions return the absolute value of the argument `x`. There is no error return.  \n  \n|Input|SEH Exception|Matherr Exception|  \n|-----------|-------------------|-----------------------|  \n|± QNAN,IND|none|_DOMAIN|  \n  \n## Remarks  \n C++ allows overloading, so you can call overloads of `fabs` if you include the \\<cmath> header. In a C program, `fabs` always takes and returns a double.  \n  \n## Requirements  \n  \n|Function|Required C header|Required C++ header|  \n|--------------|-----------------------|---------------------------|  \n|`fabs`, `fabsf`, `fabsl`|\\<math.h>|\\<cmath> or \\<math.h>|  \n  \n For additional compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md) in the Introduction.  \n  \n## Example  \n See the example for [abs](../../c-runtime-library/reference/abs-labs-llabs-abs64.md).  \n  \n## See Also  \n [Floating-Point Support](../../c-runtime-library/floating-point-support.md)   \n [abs, labs, llabs, _abs64](../../c-runtime-library/reference/abs-labs-llabs-abs64.md)   \n [_cabs](../../c-runtime-library/reference/cabs.md)   "}