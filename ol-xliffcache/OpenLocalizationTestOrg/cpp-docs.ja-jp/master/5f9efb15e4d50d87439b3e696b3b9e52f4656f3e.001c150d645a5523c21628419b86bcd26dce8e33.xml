{"nodes":[{"pos":[12,48],"content":"once_flag Structure | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"once_flag Structure | Microsoft Docs","pos":[0,36]}]},{"content":"once_flag Structure","pos":[596,615]},{"pos":[616,859],"content":"Represents a <ph id=\"ph1\">`struct`</ph> that is used with the template function <bpt id=\"p1\">[</bpt>call_once<ept id=\"p1\">](../standard-library/mutex-functions.md#call_once_function)</ept> to ensure that initialization code is called only once, even in the presence of multiple threads of execution.","source":"Represents a `struct` that is used with the template function [call_once](../standard-library/mutex-functions.md#call_once_function) to ensure that initialization code is called only once, even in the presence of multiple threads of execution."},{"content":"Syntax","pos":[868,874]},{"pos":[880,1017],"content":"struct once_flag { constexpr once_flag() noexcept; once_flag(const once_flag&amp;); once_flag&amp; operator=(const once_flag&amp;); };","source":"struct once_flag\n   {\n   constexpr once_flag() noexcept;\n   once_flag(const once_flag&);\n   once_flag& operator=(const once_flag&);\n   };"},{"content":"Remarks","pos":[1026,1033]},{"pos":[1037,1092],"content":"The <ph id=\"ph1\">`once_flag``struct`</ph> has only a default constructor.","source":"The `once_flag``struct` has only a default constructor."},{"pos":[1099,1169],"content":"Objects of type <ph id=\"ph1\">`once_flag`</ph> can be created, but they cannot be copied.","source":"Objects of type `once_flag` can be created, but they cannot be copied."},{"content":"Requirements","pos":[1178,1190]},{"pos":[1194,1211],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> mutex","source":"**Header:** mutex"},{"pos":[1218,1236],"content":"<bpt id=\"p1\">**</bpt>Namespace:<ept id=\"p1\">**</ept> std","source":"**Namespace:** std"},{"content":"See Also","pos":[1245,1253]},{"content":"Header Files Reference","pos":[1258,1280]},{"content":"mutex&gt;","pos":[1347,1353],"source":"mutex>"}],"content":"---\ntitle: \"once_flag Structure | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"mutex/std::once_flag\"\ndev_langs: \n  - \"C++\"\nms.assetid: 71bfb88d-ca8c-4082-a6e1-ff52151e8629\ncaps.latest.revision: 13\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"ru-ru\"\n  - \"zh-cn\"\n  - \"zh-tw\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"tr-tr\"\n---\n# once_flag Structure\nRepresents a `struct` that is used with the template function [call_once](../standard-library/mutex-functions.md#call_once_function) to ensure that initialization code is called only once, even in the presence of multiple threads of execution.  \n  \n## Syntax  \n  \nstruct once_flag\n   {\n   constexpr once_flag() noexcept;\n   once_flag(const once_flag&);\n   once_flag& operator=(const once_flag&);\n   };  \n  \n## Remarks  \n The `once_flag``struct` has only a default constructor.  \n  \n Objects of type `once_flag` can be created, but they cannot be copied.  \n  \n## Requirements  \n **Header:** mutex  \n  \n **Namespace:** std  \n  \n## See Also  \n [Header Files Reference](../standard-library/cpp-standard-library-header-files.md)   \n [\\<mutex>](../standard-library/mutex.md)\n\n\n\n"}