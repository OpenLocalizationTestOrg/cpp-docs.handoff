{"nodes":[{"pos":[12,43],"content":"_lrotl, _lrotr | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"_lrotl, _lrotr | Microsoft Docs","pos":[0,31]}]},{"content":"_lrotl, _lrotr","pos":[1077,1091]},{"pos":[1092,1148],"content":"Rotates bits to the left (<ph id=\"ph1\">`_lrotl`</ph>) or right (<ph id=\"ph2\">`_lrotr`</ph>).","source":"Rotates bits to the left (`_lrotl`) or right (`_lrotr`)."},{"content":"Syntax","pos":[1157,1163]},{"content":"Parameters","pos":[1340,1350]},{"content":"value","pos":[1355,1360]},{"content":"Value to be rotated.","pos":[1365,1385]},{"content":"Number of bits to shift <bpt id=\"p1\">*</bpt>value<ept id=\"p1\">*</ept>.","pos":[1403,1435],"source":" Number of bits to shift *value*."},{"content":"Return Value","pos":[1444,1456]},{"content":"Both functions return the rotated value.","pos":[1460,1500]},{"content":"There is no error return.","pos":[1501,1526]},{"content":"Remarks","pos":[1535,1542]},{"content":"The <ph id=\"ph1\">`_lrotl`</ph> and <ph id=\"ph2\">`_lrotr`</ph> functions rotate <bpt id=\"p1\">*</bpt>value<ept id=\"p1\">*</ept> by <ph id=\"ph3\">`shift`</ph> bits.","pos":[1546,1613],"source":"The `_lrotl` and `_lrotr` functions rotate *value* by `shift` bits."},{"content":"rotates the value left.","pos":[1623,1646]},{"content":"rotates the value right.","pos":[1656,1680]},{"content":"Both functions wrap bits rotated off one end of <bpt id=\"p1\">*</bpt>value<ept id=\"p1\">*</ept> to the other end.","pos":[1681,1754],"source":" Both functions wrap bits rotated off one end of *value* to the other end."},{"content":"Requirements","pos":[1763,1775]},{"content":"Routine","pos":[1782,1789]},{"content":"Required header","pos":[1790,1805]},{"content":"stdlib.h&gt;","pos":[1861,1870],"source":"stdlib.h>"},{"content":"stdlib.h&gt;","pos":[1886,1895],"source":"stdlib.h>"},{"pos":[1903,2021],"content":"For more compatibility information, see <bpt id=\"p1\">[</bpt>Compatibility<ept id=\"p1\">](../../c-runtime-library/compatibility.md)</ept> in the Introduction.","source":"For more compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md) in the Introduction."},{"content":"Libraries","pos":[2030,2039]},{"pos":[2043,2135],"content":"All versions of the <bpt id=\"p1\">[</bpt>C run-time libraries<ept id=\"p1\">](../../c-runtime-library/crt-library-features.md)</ept>.","source":"All versions of the [C run-time libraries](../../c-runtime-library/crt-library-features.md)."},{"content":"Example","pos":[2144,2151]},{"content":"Output","pos":[2516,2522]},{"content":".NET Framework Equivalent","pos":[2650,2675]},{"content":"Not applicable.","pos":[2679,2694]},{"content":"To call the standard C function, use <ph id=\"ph1\">`PInvoke`</ph>.","pos":[2695,2742],"source":" To call the standard C function, use `PInvoke`."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Platform Invoke Examples<ept id=\"p1\">](http://msdn.microsoft.com/Library/15926806-f0b7-487e-93a6-4e9367ec689f)</ept>.","pos":[2743,2868],"source":" For more information, see [Platform Invoke Examples](http://msdn.microsoft.com/Library/15926806-f0b7-487e-93a6-4e9367ec689f)."},{"content":"See Also","pos":[2877,2885]},{"content":"Floating-Point Support","pos":[2890,2912]},{"content":"_rotl, _rotl64, _rotr, _rotr64","pos":[2970,3000]}],"content":"---\ntitle: \"_lrotl, _lrotr | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\napiname: \n  - \"_lrotl\"\n  - \"_lrotr\"\napilocation: \n  - \"msvcrt.dll\"\n  - \"msvcr80.dll\"\n  - \"msvcr90.dll\"\n  - \"msvcr100.dll\"\n  - \"msvcr100_clr0400.dll\"\n  - \"msvcr110.dll\"\n  - \"msvcr110_clr0400.dll\"\n  - \"msvcr120.dll\"\n  - \"msvcr120_clr0400.dll\"\n  - \"ucrtbase.dll\"\n  - \"api-ms-win-crt-utility-l1-1-0.dll\"\napitype: \"DLLExport\"\nf1_keywords: \n  - \"lrotr\"\n  - \"lrotl\"\n  - \"_lrotr\"\n  - \"_lrotl\"\ndev_langs: \n  - \"C++\"\n  - \"C\"\nhelpviewer_keywords: \n  - \"lrotl function\"\n  - \"bits\"\n  - \"_lrotr function\"\n  - \"lrotr function\"\n  - \"rotating bits\"\n  - \"_lrotl function\"\n  - \"bits, rotating\"\nms.assetid: d42f295b-35f9-49d2-9ee4-c66896ffe68e\ncaps.latest.revision: 10\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# _lrotl, _lrotr\nRotates bits to the left (`_lrotl`) or right (`_lrotr`).  \n  \n## Syntax  \n  \n```  \n  \n      unsigned long _lrotl(  \n   unsigned long value,  \n   int shift   \n);  \nunsigned long _lrotr(  \n   unsigned long value,  \n   int shift   \n);  \n```  \n  \n#### Parameters  \n *value*  \n Value to be rotated.  \n  \n `shift`  \n Number of bits to shift *value*.  \n  \n## Return Value  \n Both functions return the rotated value. There is no error return.  \n  \n## Remarks  \n The `_lrotl` and `_lrotr` functions rotate *value* by `shift` bits. `_lrotl` rotates the value left. `_lrotr` rotates the value right. Both functions wrap bits rotated off one end of *value* to the other end.  \n  \n## Requirements  \n  \n|Routine|Required header|  \n|-------------|---------------------|  \n|`_lrotl`|\\<stdlib.h>|  \n|`_lrotr`|\\<stdlib.h>|  \n  \n For more compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md) in the Introduction.  \n  \n## Libraries  \n All versions of the [C run-time libraries](../../c-runtime-library/crt-library-features.md).  \n  \n## Example  \n  \n```  \n// crt_lrot.c  \n  \n#include <stdlib.h>  \n#include <stdio.h>  \n  \nint main( void )  \n{  \n   unsigned long val = 0x0fac35791;  \n  \n   printf( \"0x%8.8lx rotated left eight times is 0x%8.8lx\\n\",   \n            val, _lrotl( val, 8 ) );  \n   printf( \"0x%8.8lx rotated right four times is 0x%8.8lx\\n\",   \n            val, _lrotr( val, 4 ) );  \n}  \n```  \n  \n## Output  \n  \n```  \n0xfac35791 rotated left eight times is 0xc35791fa  \n0xfac35791 rotated right four times is 0x1fac3579  \n```  \n  \n## .NET Framework Equivalent  \n Not applicable. To call the standard C function, use `PInvoke`. For more information, see [Platform Invoke Examples](http://msdn.microsoft.com/Library/15926806-f0b7-487e-93a6-4e9367ec689f).  \n  \n## See Also  \n [Floating-Point Support](../../c-runtime-library/floating-point-support.md)   \n [_rotl, _rotl64, _rotr, _rotr64](../../c-runtime-library/reference/rotl-rotl64-rotr-rotr64.md)"}