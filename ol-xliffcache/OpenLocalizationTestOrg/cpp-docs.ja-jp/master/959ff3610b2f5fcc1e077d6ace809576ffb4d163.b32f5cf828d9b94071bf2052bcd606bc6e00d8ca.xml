{"nodes":[{"pos":[12,81],"content":"_vscprintf, _vscprintf_l, _vscwprintf, _vscwprintf_l | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"_vscprintf, _vscprintf_l, _vscwprintf, _vscwprintf_l | Microsoft Docs","pos":[0,69]}]},{"pos":[1431,1483],"content":"_vscprintf, _vscprintf_l, _vscwprintf, _vscwprintf_l","linkify":"_vscprintf, _vscprintf_l, _vscwprintf, _vscwprintf_l","nodes":[{"content":"_vscprintf, _vscprintf_l, _vscwprintf, _vscwprintf_l","pos":[0,52]}]},{"content":"Returns the number of characters in the formatted string using a pointer to a list of arguments.","pos":[1484,1580]},{"pos":[1589,1595],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[1953,1963],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Format-control string.","pos":[1979,2001]},{"content":"Pointer to list of arguments.","pos":[2020,2049]},{"content":"The locale to use.","pos":[2068,2086]},{"pos":[2093,2228],"content":"For more information, see <bpt id=\"p1\">[</bpt>Format Specifications<ept id=\"p1\">](../../c-runtime-library/format-specification-syntax-printf-and-wprintf-functions.md)</ept>.","source":"For more information, see [Format Specifications](../../c-runtime-library/format-specification-syntax-printf-and-wprintf-functions.md)."},{"pos":[2237,2249],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"<ph id=\"ph1\">`_vscprintf`</ph> returns the number of characters that would be generated if the string pointed to by the list of arguments was printed or sent to a file or buffer using the specified formatting codes.","pos":[2253,2450],"source":"`_vscprintf` returns the number of characters that would be generated if the string pointed to by the list of arguments was printed or sent to a file or buffer using the specified formatting codes."},{"content":"The value returned does not include the terminating null character.","pos":[2451,2518]},{"content":"<ph id=\"ph1\">`_vscwprintf`</ph> performs the same function for wide characters.","pos":[2519,2580],"source":"`_vscwprintf` performs the same function for wide characters."},{"pos":[2587,2743],"content":"The versions of these functions with the <ph id=\"ph1\">`_l`</ph> suffix are identical except that they use the locale parameter passed in instead of the current thread locale.","source":"The versions of these functions with the `_l` suffix are identical except that they use the locale parameter passed in instead of the current thread locale."},{"content":"If <ph id=\"ph1\">`format`</ph> is a null pointer, the invalid parameter handler is invoked, as described in <bpt id=\"p1\">[</bpt>Parameter Validation<ept id=\"p1\">](../../c-runtime-library/parameter-validation.md)</ept>.","pos":[2750,2911],"source":"If `format` is a null pointer, the invalid parameter handler is invoked, as described in [Parameter Validation](../../c-runtime-library/parameter-validation.md)."},{"content":"If execution is allowed to continue, the functions return -1 and set <ph id=\"ph1\">`errno`</ph> to <ph id=\"ph2\">`EINVAL`</ph>.","pos":[2912,3001],"source":" If execution is allowed to continue, the functions return -1 and set `errno` to `EINVAL`."},{"pos":[3010,3017],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Each <ph id=\"ph1\">`argument`</ph> (if any) is converted according to the corresponding format specification in <ph id=\"ph2\">`format`</ph>.","pos":[3021,3123],"source":"Each `argument` (if any) is converted according to the corresponding format specification in `format`."},{"content":"The format consists of ordinary characters and has the same form and function as the <ph id=\"ph1\">`format`</ph> argument for <bpt id=\"p1\">[</bpt>printf<ept id=\"p1\">](../../c-runtime-library/reference/printf-printf-l-wprintf-wprintf-l.md)</ept>.","pos":[3124,3312],"source":" The format consists of ordinary characters and has the same form and function as the `format` argument for [printf](../../c-runtime-library/reference/printf-printf-l-wprintf-wprintf-l.md)."},{"pos":[3320,3572],"content":"[!IMPORTANT]\n Ensure that if `format` is a user-defined string, it is null terminated and has the correct number and type of parameters. For more information, see [Avoiding Buffer Overruns](http://msdn.microsoft.com/library/windows/desktop/ms717795).","leadings":["","> "],"nodes":[{"content":" Ensure that if `format` is a user-defined string, it is null terminated and has the correct number and type of parameters. For more information, see [Avoiding Buffer Overruns](http://msdn.microsoft.com/library/windows/desktop/ms717795).","pos":[13,250],"nodes":[{"content":"Ensure that if <ph id=\"ph1\">`format`</ph> is a user-defined string, it is null terminated and has the correct number and type of parameters.","pos":[1,123],"source":" Ensure that if `format` is a user-defined string, it is null terminated and has the correct number and type of parameters."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Avoiding Buffer Overruns<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms717795)</ept>.","pos":[124,237],"source":" For more information, see [Avoiding Buffer Overruns](http://msdn.microsoft.com/library/windows/desktop/ms717795)."}]}]},{"pos":[3582,3611],"content":"Generic-Text Routine Mappings","linkify":"Generic-Text Routine Mappings","nodes":[{"content":"Generic-Text Routine Mappings","pos":[0,29]}]},{"content":"TCHAR.H routine","pos":[3618,3633]},{"content":"_UNICODE &amp; _MBCS not defined","pos":[3634,3662],"source":"_UNICODE & _MBCS not defined"},{"content":"_MBCS defined","pos":[3663,3676]},{"content":"_UNICODE defined","pos":[3677,3693]},{"pos":[3935,3947],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"content":"Routine","pos":[3954,3961]},{"content":"Required header","pos":[3962,3977]},{"pos":[4022,4050],"content":"<ph id=\"ph1\">`_vscprintf`</ph>, <ph id=\"ph2\">`_vscprintf_l`</ph>","source":"`_vscprintf`, `_vscprintf_l`"},{"content":"<ph id=\"ph1\">\\&lt;</ph>stdio.h&gt;","pos":[4051,4061],"source":"\\<stdio.h>"},{"pos":[4066,4096],"content":"<ph id=\"ph1\">`_vscwprintf`</ph>, <ph id=\"ph2\">`_vscwprintf_l`</ph>","source":"`_vscwprintf`, `_vscwprintf_l`"},{"content":"<ph id=\"ph1\">\\&lt;</ph>stdio.h&gt; or <ph id=\"ph2\">\\&lt;</ph>wchar.h&gt;","pos":[4097,4121],"source":"\\<stdio.h> or \\<wchar.h>"},{"pos":[4129,4253],"content":"For additional compatibility information, see <bpt id=\"p1\">[</bpt>Compatibility<ept id=\"p1\">](../../c-runtime-library/compatibility.md)</ept> in the Introduction.","source":"For additional compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md) in the Introduction."},{"pos":[4262,4269],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[4273,4396],"content":"See the example for <bpt id=\"p1\">[</bpt>vsprintf<ept id=\"p1\">](../../c-runtime-library/reference/vsprintf-vsprintf-l-vswprintf-vswprintf-l-vswprintf-l.md)</ept>.","source":"See the example for [vsprintf](../../c-runtime-library/reference/vsprintf-vsprintf-l-vswprintf-vswprintf-l-vswprintf-l.md)."},{"pos":[4405,4413],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Stream I/O<ept id=\"p1\">](../../c-runtime-library/stream-i-o.md)</ept><ph id=\"ph1\"> </ph>","pos":[4417,4469],"source":"[Stream I/O](../../c-runtime-library/stream-i-o.md) "},{"content":"<bpt id=\"p1\"> [</bpt>fprintf, _fprintf_l, fwprintf, _fwprintf_l<ept id=\"p1\">](../../c-runtime-library/reference/fprintf-fprintf-l-fwprintf-fwprintf-l.md)</ept><ph id=\"ph1\"> </ph>","pos":[4472,4594],"source":" [fprintf, _fprintf_l, fwprintf, _fwprintf_l](../../c-runtime-library/reference/fprintf-fprintf-l-fwprintf-fwprintf-l.md) "},{"content":"<bpt id=\"p1\"> [</bpt>printf, _printf_l, wprintf, _wprintf_l<ept id=\"p1\">](../../c-runtime-library/reference/printf-printf-l-wprintf-wprintf-l.md)</ept><ph id=\"ph1\"> </ph>","pos":[4597,4711],"source":" [printf, _printf_l, wprintf, _wprintf_l](../../c-runtime-library/reference/printf-printf-l-wprintf-wprintf-l.md) "},{"content":"<bpt id=\"p1\"> [</bpt>scanf, _scanf_l, wscanf, _wscanf_l<ept id=\"p1\">](../../c-runtime-library/reference/scanf-scanf-l-wscanf-wscanf-l.md)</ept><ph id=\"ph1\"> </ph>","pos":[4714,4820],"source":" [scanf, _scanf_l, wscanf, _wscanf_l](../../c-runtime-library/reference/scanf-scanf-l-wscanf-wscanf-l.md) "},{"content":"<bpt id=\"p1\"> [</bpt>sscanf, _sscanf_l, swscanf, _swscanf_l<ept id=\"p1\">](../../c-runtime-library/reference/sscanf-sscanf-l-swscanf-swscanf-l.md)</ept><ph id=\"ph1\"> </ph>","pos":[4823,4937],"source":" [sscanf, _sscanf_l, swscanf, _swscanf_l](../../c-runtime-library/reference/sscanf-sscanf-l-swscanf-swscanf-l.md) "},{"content":"<bpt id=\"p1\"> [</bpt>vprintf Functions<ept id=\"p1\">](../../c-runtime-library/vprintf-functions.md)</ept>","pos":[4940,5006],"source":" [vprintf Functions](../../c-runtime-library/vprintf-functions.md)"}],"content":"---\ntitle: \"_vscprintf, _vscprintf_l, _vscwprintf, _vscwprintf_l | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\napiname: \n  - \"_vscprintf\"\n  - \"_vscprintf_l\"\n  - \"_vscwprintf_l\"\n  - \"_vscwprintf\"\napilocation: \n  - \"msvcrt.dll\"\n  - \"msvcr80.dll\"\n  - \"msvcr90.dll\"\n  - \"msvcr100.dll\"\n  - \"msvcr100_clr0400.dll\"\n  - \"msvcr110.dll\"\n  - \"msvcr110_clr0400.dll\"\n  - \"msvcr120.dll\"\n  - \"msvcr120_clr0400.dll\"\n  - \"ucrtbase.dll\"\napitype: \"DLLExport\"\nf1_keywords: \n  - \"vscprintf_l\"\n  - \"vscwpeintf\"\n  - \"_vscwprintf\"\n  - \"_vsctprintf\"\n  - \"_vscprintf\"\n  - \"vscwprintf_l\"\n  - \"vscprintf\"\n  - \"_vscwprintf_l\"\ndev_langs: \n  - \"C++\"\n  - \"C\"\nhelpviewer_keywords: \n  - \"vsctprintf function\"\n  - \"_vscprintf_l function\"\n  - \"_vsctprintf_l function\"\n  - \"_vsctprintf function\"\n  - \"_vscwprintf_l function\"\n  - \"vscwprintf_l function\"\n  - \"_vscprintf function\"\n  - \"_vscwprintf function\"\n  - \"vscwprintf function\"\n  - \"vsctprintf_l function\"\n  - \"formatted text [C++]\"\n  - \"vscprintf function\"\n  - \"vscprintf_l function\"\nms.assetid: 1bc67d3d-21d5-49c9-ac8d-69e26b16a3c3\ncaps.latest.revision: 12\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# _vscprintf, _vscprintf_l, _vscwprintf, _vscwprintf_l\nReturns the number of characters in the formatted string using a pointer to a list of arguments.  \n  \n## Syntax  \n  \n```  \nint _vscprintf(  \n   const char *format,  \n   va_list argptr   \n);  \nint _vscprintf_l(  \n   const char *format,  \n   locale_t locale,  \n   va_list argptr   \n);  \nint _vscwprintf(  \n   const wchar_t *format,  \n   va_list argptr   \n);  \nint _vscwprintf_l(  \n   const wchar_t *format,  \n   locale_t locale,  \n   va_list argptr   \n);  \n```  \n  \n#### Parameters  \n `format`  \n Format-control string.  \n  \n `argptr`  \n Pointer to list of arguments.  \n  \n `locale`  \n The locale to use.  \n  \n For more information, see [Format Specifications](../../c-runtime-library/format-specification-syntax-printf-and-wprintf-functions.md).  \n  \n## Return Value  \n `_vscprintf` returns the number of characters that would be generated if the string pointed to by the list of arguments was printed or sent to a file or buffer using the specified formatting codes. The value returned does not include the terminating null character. `_vscwprintf` performs the same function for wide characters.  \n  \n The versions of these functions with the `_l` suffix are identical except that they use the locale parameter passed in instead of the current thread locale.  \n  \n If `format` is a null pointer, the invalid parameter handler is invoked, as described in [Parameter Validation](../../c-runtime-library/parameter-validation.md). If execution is allowed to continue, the functions return -1 and set `errno` to `EINVAL`.  \n  \n## Remarks  \n Each `argument` (if any) is converted according to the corresponding format specification in `format`. The format consists of ordinary characters and has the same form and function as the `format` argument for [printf](../../c-runtime-library/reference/printf-printf-l-wprintf-wprintf-l.md).  \n  \n> [!IMPORTANT]\n>  Ensure that if `format` is a user-defined string, it is null terminated and has the correct number and type of parameters. For more information, see [Avoiding Buffer Overruns](http://msdn.microsoft.com/library/windows/desktop/ms717795).  \n  \n### Generic-Text Routine Mappings  \n  \n|TCHAR.H routine|_UNICODE & _MBCS not defined|_MBCS defined|_UNICODE defined|  \n|---------------------|------------------------------------|--------------------|-----------------------|  \n|`_vsctprintf`|`_vscprintf`|`_vscprintf`|`_vscwprintf`|  \n|`_vsctprintf_l`|`_vscprintf_l`|`_vscprintf_l`|`_vscwprintf_l`|  \n  \n## Requirements  \n  \n|Routine|Required header|  \n|-------------|---------------------|  \n|`_vscprintf`, `_vscprintf_l`|\\<stdio.h>|  \n|`_vscwprintf`, `_vscwprintf_l`|\\<stdio.h> or \\<wchar.h>|  \n  \n For additional compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md) in the Introduction.  \n  \n## Example  \n See the example for [vsprintf](../../c-runtime-library/reference/vsprintf-vsprintf-l-vswprintf-vswprintf-l-vswprintf-l.md).  \n  \n## See Also  \n [Stream I/O](../../c-runtime-library/stream-i-o.md)   \n [fprintf, _fprintf_l, fwprintf, _fwprintf_l](../../c-runtime-library/reference/fprintf-fprintf-l-fwprintf-fwprintf-l.md)   \n [printf, _printf_l, wprintf, _wprintf_l](../../c-runtime-library/reference/printf-printf-l-wprintf-wprintf-l.md)   \n [scanf, _scanf_l, wscanf, _wscanf_l](../../c-runtime-library/reference/scanf-scanf-l-wscanf-wscanf-l.md)   \n [sscanf, _sscanf_l, swscanf, _swscanf_l](../../c-runtime-library/reference/sscanf-sscanf-l-swscanf-swscanf-l.md)   \n [vprintf Functions](../../c-runtime-library/vprintf-functions.md)"}