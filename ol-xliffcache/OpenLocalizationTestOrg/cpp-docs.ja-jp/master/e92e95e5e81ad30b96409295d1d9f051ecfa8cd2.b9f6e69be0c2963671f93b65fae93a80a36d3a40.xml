{"nodes":[{"pos":[12,53],"content":"deque::operator(STL-CLR) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"deque::operator(STL-CLR) | Microsoft Docs","pos":[0,41]}]},{"content":"deque::operator(STL/CLR)","pos":[638,662]},{"content":"Accesses an element at a specified position.","pos":[663,707]},{"content":"Syntax","pos":[716,722]},{"content":"Parameters","pos":[787,797]},{"content":"pos","pos":[801,804]},{"content":"Position of element to access.","pos":[808,838]},{"content":"Remarks","pos":[847,854]},{"content":"The member operator returns a referene to the element at position <ph id=\"ph1\">`pos`</ph>.","pos":[858,930],"source":"The member operator returns a referene to the element at position `pos`."},{"content":"You use it to access an element whose position you know.","pos":[931,987]},{"content":"Example","pos":[996,1003]},{"content":"Requirements","pos":[1697,1709]},{"pos":[1713,1740],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> <ph id=\"ph1\">\\&lt;</ph>cliext/deque&gt;","source":"**Header:** \\<cliext/deque>"},{"pos":[1747,1768],"content":"<bpt id=\"p1\">**</bpt>Namespace:<ept id=\"p1\">**</ept> cliext","source":"**Namespace:** cliext"},{"content":"See Also","pos":[1777,1785]},{"content":"deque (STL/CLR)","pos":[1790,1805]},{"content":"deque::at (STL/CLR)","pos":[1840,1859]}],"content":"---\ntitle: \"deque::operator(STL-CLR) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"cliext::deque::operator[]\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"operatormember [] [STL/CLR]\"\nms.assetid: d7653bb5-db48-4637-a25c-e7303e5d28da\ncaps.latest.revision: 16\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# deque::operator(STL/CLR)\nAccesses an element at a specified position.  \n  \n## Syntax  \n  \n```  \nreference operator[](size_type pos);  \n```  \n  \n#### Parameters  \n pos  \n Position of element to access.  \n  \n## Remarks  \n The member operator returns a referene to the element at position `pos`. You use it to access an element whose position you know.  \n  \n## Example  \n  \n```  \n// cliext_deque_operator_sub.cpp   \n// compile with: /clr   \n#include <cliext/deque>   \n  \nint main()   \n    {   \n    cliext::deque<wchar_t> c1;   \n    c1.push_back(L'a');   \n    c1.push_back(L'b');   \n    c1.push_back(L'c');   \n  \n// display contents \" a b c\" using subscripting   \n    for (int i = 0; i < c1.size(); ++i)   \n        System::Console::Write(\" {0}\", c1[i]);   \n    System::Console::WriteLine();   \n  \n// change an entry and redisplay   \n    c1[1] = L'x';   \n    for (int i = 0; i < c1.size(); ++i)   \n        System::Console::Write(\" {0}\", c1[i]);   \n    System::Console::WriteLine();   \n    return (0);   \n    }  \n  \n```  \n  \n```Output  \na b c  \na x c  \n```  \n  \n## Requirements  \n **Header:** \\<cliext/deque>  \n  \n **Namespace:** cliext  \n  \n## See Also  \n [deque (STL/CLR)](../dotnet/deque-stl-clr.md)   \n [deque::at (STL/CLR)](../dotnet/deque-at-stl-clr.md)"}