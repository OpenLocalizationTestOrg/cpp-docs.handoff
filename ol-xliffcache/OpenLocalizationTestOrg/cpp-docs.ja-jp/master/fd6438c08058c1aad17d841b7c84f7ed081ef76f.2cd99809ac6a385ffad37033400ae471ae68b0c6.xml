{"nodes":[{"pos":[12,93],"content":"_stricmp, _wcsicmp, _mbsicmp, _stricmp_l, _wcsicmp_l, _mbsicmp_l | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"_stricmp, _wcsicmp, _mbsicmp, _stricmp_l, _wcsicmp_l, _mbsicmp_l | Microsoft Docs","pos":[0,81]}]},{"pos":[1708,1772],"content":"_stricmp, _wcsicmp, _mbsicmp, _stricmp_l, _wcsicmp_l, _mbsicmp_l","linkify":"_stricmp, _wcsicmp, _mbsicmp, _stricmp_l, _wcsicmp_l, _mbsicmp_l","nodes":[{"content":"_stricmp, _wcsicmp, _mbsicmp, _stricmp_l, _wcsicmp_l, _mbsicmp_l","pos":[0,64]}]},{"content":"Performs a case-insensitive comparison of strings.","pos":[1773,1823]},{"pos":[1831,2070],"content":"[!IMPORTANT]\n `_mbsicmp` and `_mbsicmp_l` cannot be used in applications that execute in the Windows Runtime. For more information, see [CRT functions not supported with /ZW](http://msdn.microsoft.com/library/windows/apps/jj606124.aspx).","leadings":["","> "],"nodes":[{"content":" `_mbsicmp` and `_mbsicmp_l` cannot be used in applications that execute in the Windows Runtime. For more information, see [CRT functions not supported with /ZW](http://msdn.microsoft.com/library/windows/apps/jj606124.aspx).","pos":[13,237],"nodes":[{"content":"<ph id=\"ph1\"> `_mbsicmp`</ph> and <ph id=\"ph2\">`_mbsicmp_l`</ph> cannot be used in applications that execute in the Windows Runtime.","pos":[0,96],"source":" `_mbsicmp` and `_mbsicmp_l` cannot be used in applications that execute in the Windows Runtime."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>CRT functions not supported with /ZW<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/apps/jj606124.aspx)</ept>.","pos":[97,224],"source":" For more information, see [CRT functions not supported with /ZW](http://msdn.microsoft.com/library/windows/apps/jj606124.aspx)."}]}]},{"pos":[2079,2085],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[2669,2679],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Null-terminated strings to compare.","pos":[2705,2740]},{"content":"Locale to use.","pos":[2759,2773]},{"pos":[2782,2794],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[2798,2875],"content":"The return value indicates the relation of <ph id=\"ph1\">`string1`</ph> to <ph id=\"ph2\">`string2`</ph> as follows.","source":"The return value indicates the relation of `string1` to `string2` as follows."},{"content":"Return value","pos":[2882,2894]},{"content":"Description","pos":[2895,2906]},{"content":"&lt; 0","pos":[2952,2955],"source":"< 0"},{"pos":[2956,2985],"content":"<ph id=\"ph1\">`string1`</ph> less than <ph id=\"ph2\">`string2`</ph>","source":"`string1` less than `string2`"},{"content":"0","pos":[2990,2991]},{"pos":[2992,3024],"content":"<ph id=\"ph1\">`string1`</ph> identical to <ph id=\"ph2\">`string2`</ph>","source":"`string1` identical to `string2`"},{"content":"&gt; 0","pos":[3029,3032],"source":"> 0"},{"pos":[3033,3065],"content":"<ph id=\"ph1\">`string1`</ph> greater than <ph id=\"ph2\">`string2`</ph>","source":"`string1` greater than `string2`"},{"pos":[3073,3171],"content":"On an error, <ph id=\"ph1\">`_mbsicmp`</ph> returns <ph id=\"ph2\">`_NLSCMPERROR`</ph>, which is defined in <ph id=\"ph3\">\\&lt;</ph>string.h&gt; and <ph id=\"ph4\">\\&lt;</ph>mbstring.h&gt;.","source":"On an error, `_mbsicmp` returns `_NLSCMPERROR`, which is defined in \\<string.h> and \\<mbstring.h>."},{"pos":[3180,3187],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The <ph id=\"ph1\">`_stricmp`</ph> function ordinally compares <ph id=\"ph2\">`string1`</ph> and <ph id=\"ph3\">`string2`</ph> after converting each character to lowercase, and returns a value indicating their relationship.","pos":[3191,3354],"source":"The `_stricmp` function ordinally compares `string1` and `string2` after converting each character to lowercase, and returns a value indicating their relationship."},{"content":"<ph id=\"ph1\">`_stricmp`</ph> differs from <ph id=\"ph2\">`_stricoll`</ph> in that the <ph id=\"ph3\">`_stricmp`</ph> comparison is only affected by <ph id=\"ph4\">`LC_CTYPE`</ph>, which determines which characters are upper and lowercase.","pos":[3355,3515],"source":"`_stricmp` differs from `_stricoll` in that the `_stricmp` comparison is only affected by `LC_CTYPE`, which determines which characters are upper and lowercase."},{"content":"The <ph id=\"ph1\">`_stricoll`</ph> function compares strings according to both the <ph id=\"ph2\">`LC_CTYPE`</ph> and <ph id=\"ph3\">`LC_COLLATE`</ph> categories of the locale, which includes both the case and the collation order.","pos":[3516,3687],"source":" The `_stricoll` function compares strings according to both the `LC_CTYPE` and `LC_COLLATE` categories of the locale, which includes both the case and the collation order."},{"content":"For more information about the <ph id=\"ph1\">`LC_COLLATE`</ph> category, see <bpt id=\"p1\">[</bpt>setlocale<ept id=\"p1\">](../../c-runtime-library/reference/setlocale-wsetlocale.md)</ept> and <bpt id=\"p2\">[</bpt>Locale Categories<ept id=\"p2\">](../../c-runtime-library/locale-categories.md)</ept>.","pos":[3688,3887],"source":" For more information about the `LC_COLLATE` category, see [setlocale](../../c-runtime-library/reference/setlocale-wsetlocale.md) and [Locale Categories](../../c-runtime-library/locale-categories.md)."},{"content":"The versions of these functions without the <ph id=\"ph1\">`_l`</ph> suffix use the current locale for locale-dependent behavior.","pos":[3888,3997],"source":" The versions of these functions without the `_l` suffix use the current locale for locale-dependent behavior."},{"content":"The versions with the suffix are identical except that they use the locale passed in instead.","pos":[3998,4091]},{"content":"If the locale has not been set, the C locale is used.","pos":[4092,4145]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Locale<ept id=\"p1\">](../../c-runtime-library/locale.md)</ept>.","pos":[4146,4216],"source":" For more information, see [Locale](../../c-runtime-library/locale.md)."},{"pos":[4224,4349],"content":"[!NOTE]\n `_stricmp` is equivalent to `_strcmpi`. They can be used interchangeably but `_stricmp` is the preferred standard.","leadings":["","> "],"nodes":[{"content":" `_stricmp` is equivalent to `_strcmpi`. They can be used interchangeably but `_stricmp` is the preferred standard.","pos":[8,123],"nodes":[{"content":"<ph id=\"ph1\"> `_stricmp`</ph> is equivalent to <ph id=\"ph2\">`_strcmpi`</ph>.","pos":[0,40],"source":" `_stricmp` is equivalent to `_strcmpi`."},{"content":"They can be used interchangeably but <ph id=\"ph1\">`_stricmp`</ph> is the preferred standard.","pos":[41,115],"source":" They can be used interchangeably but `_stricmp` is the preferred standard."}]}]},{"pos":[4356,4456],"content":"The <ph id=\"ph1\">`_strcmpi`</ph> function is equivalent to <ph id=\"ph2\">`_stricmp`</ph> and is provided for backward compatibility only.","source":"The `_strcmpi` function is equivalent to `_stricmp` and is provided for backward compatibility only."},{"pos":[4463,4547],"content":"Because <ph id=\"ph1\">`_stricmp`</ph> does lowercase comparisons, it may result in unexpected behavior.","source":"Because `_stricmp` does lowercase comparisons, it may result in unexpected behavior."},{"content":"To illustrate when case conversion by <ph id=\"ph1\">`_stricmp`</ph> affects the outcome of a comparison, assume that you have the two strings JOHNSTON and JOHN_HENRY.","pos":[4554,4701],"source":"To illustrate when case conversion by `_stricmp` affects the outcome of a comparison, assume that you have the two strings JOHNSTON and JOHN_HENRY."},{"content":"The string JOHN_HENRY will be considered less than JOHNSTON because the \"_\" has a lower ASCII value than a lowercase S. In fact, any character that has an ASCII value between 91 and 96 will be considered less than any letter.","pos":[4702,4927]},{"pos":[4934,5090],"content":"If the <bpt id=\"p1\">[</bpt>strcmp<ept id=\"p1\">](../../c-runtime-library/reference/strcmp-wcscmp-mbscmp.md)</ept> function is used instead of <ph id=\"ph1\">`_stricmp`</ph>, JOHN_HENRY will be greater than JOHNSTON.","source":"If the [strcmp](../../c-runtime-library/reference/strcmp-wcscmp-mbscmp.md) function is used instead of `_stricmp`, JOHN_HENRY will be greater than JOHNSTON."},{"content":"<ph id=\"ph1\">`_wcsicmp`</ph> and <ph id=\"ph2\">`_mbsicmp`</ph> are wide-character and multibyte-character versions of <ph id=\"ph3\">`_stricmp`</ph>.","pos":[5097,5189],"source":"`_wcsicmp` and `_mbsicmp` are wide-character and multibyte-character versions of `_stricmp`."},{"content":"The arguments and return value of <ph id=\"ph1\">`_wcsicmp`</ph> are wide-character strings; those of <ph id=\"ph2\">`_mbsicmp`</ph> are multibyte-character strings.","pos":[5190,5315],"source":" The arguments and return value of `_wcsicmp` are wide-character strings; those of `_mbsicmp` are multibyte-character strings."},{"content":"<ph id=\"ph1\">`_mbsicmp`</ph> recognizes multibyte-character sequences according to the current multibyte code page and returns <ph id=\"ph2\">`_NLSCMPERROR`</ph> on an error.","pos":[5316,5452],"source":"`_mbsicmp` recognizes multibyte-character sequences according to the current multibyte code page and returns `_NLSCMPERROR` on an error."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Code Pages<ept id=\"p1\">](../../c-runtime-library/code-pages.md)</ept>.","pos":[5453,5531],"source":" For more information, see [Code Pages](../../c-runtime-library/code-pages.md)."},{"content":"These three functions behave identically otherwise.","pos":[5532,5583]},{"content":"<ph id=\"ph1\">`_wcsicmp`</ph> and <ph id=\"ph2\">`wcscmp`</ph> behave identically except that <ph id=\"ph3\">`wcscmp`</ph> does not convert its arguments to lowercase before comparing them.","pos":[5590,5720],"source":"`_wcsicmp` and `wcscmp` behave identically except that `wcscmp` does not convert its arguments to lowercase before comparing them."},{"content":"<ph id=\"ph1\">`_mbsicmp`</ph> and <ph id=\"ph2\">`_mbscmp`</ph> behave identically except that <ph id=\"ph3\">`_mbscmp`</ph> does not convert its arguments to lowercase before comparing them.","pos":[5721,5853],"source":"`_mbsicmp` and `_mbscmp` behave identically except that `_mbscmp` does not convert its arguments to lowercase before comparing them."},{"content":"You will need to call <bpt id=\"p1\">[</bpt>setlocale<ept id=\"p1\">](../../c-runtime-library/reference/setlocale-wsetlocale.md)</ept> for <ph id=\"ph1\">`_wcsicmp`</ph> to work with Latin 1 characters.","pos":[5860,6000],"source":"You will need to call [setlocale](../../c-runtime-library/reference/setlocale-wsetlocale.md) for `_wcsicmp` to work with Latin 1 characters."},{"content":"The C locale is in effect by default, so, for example, ä will not compare equal to Ä.","pos":[6001,6086]},{"content":"Call <ph id=\"ph1\">`setlocale`</ph> with any locale other than the C locale before the call to <ph id=\"ph2\">`_wcsicmp`</ph>.","pos":[6087,6174],"source":" Call `setlocale` with any locale other than the C locale before the call to `_wcsicmp`."},{"content":"The following sample demonstrates how <ph id=\"ph1\">`_wcsicmp`</ph> is sensitive to the locale:","pos":[6175,6251],"source":" The following sample demonstrates how `_wcsicmp` is sensitive to the locale:"},{"pos":[6592,6786],"content":"An alternative is to call <bpt id=\"p1\">[</bpt>_create_locale, _wcreate_locale<ept id=\"p1\">](../../c-runtime-library/reference/create-locale-wcreate-locale.md)</ept> and pass the returned locale object as a parameter to <ph id=\"ph1\">`_wcsicmp_l`</ph>.","source":"An alternative is to call [_create_locale, _wcreate_locale](../../c-runtime-library/reference/create-locale-wcreate-locale.md) and pass the returned locale object as a parameter to `_wcsicmp_l`."},{"content":"All of these functions validate their parameters.","pos":[6793,6842]},{"content":"If either <ph id=\"ph1\">`string1`</ph> or <ph id=\"ph2\">`string2`</ph> are null pointers, the invalid parameter handler is invoked, as described in <bpt id=\"p1\">[</bpt>Parameter Validation<ept id=\"p1\">](../../c-runtime-library/parameter-validation.md)</ept> .","pos":[6843,7026],"source":" If either `string1` or `string2` are null pointers, the invalid parameter handler is invoked, as described in [Parameter Validation](../../c-runtime-library/parameter-validation.md) ."},{"content":"If execution is allowed to continue, these functions return <ph id=\"ph1\">`_NLSCMPERROR`</ph> and set <ph id=\"ph2\">`errno`</ph> to <ph id=\"ph3\">`EINVAL`</ph>.","pos":[7027,7130],"source":" If execution is allowed to continue, these functions return `_NLSCMPERROR` and set `errno` to `EINVAL`."},{"pos":[7140,7169],"content":"Generic-Text Routine Mappings","linkify":"Generic-Text Routine Mappings","nodes":[{"content":"Generic-Text Routine Mappings","pos":[0,29]}]},{"content":"TCHAR.H routine","pos":[7176,7191]},{"content":"_UNICODE &amp; _MBCS not defined","pos":[7192,7220],"source":"_UNICODE & _MBCS not defined"},{"content":"_MBCS defined","pos":[7221,7234]},{"content":"_UNICODE defined","pos":[7235,7251]},{"pos":[7417,7429],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"content":"Routine","pos":[7436,7443]},{"content":"Required header","pos":[7444,7459]},{"pos":[7504,7528],"content":"<ph id=\"ph1\">`_stricmp`</ph>, <ph id=\"ph2\">`_stricmp_l`</ph>","source":"`_stricmp`, `_stricmp_l`"},{"content":"<ph id=\"ph1\">\\&lt;</ph>string.h&gt;","pos":[7529,7540],"source":"\\<string.h>"},{"pos":[7545,7569],"content":"<ph id=\"ph1\">`_wcsicmp`</ph>, <ph id=\"ph2\">`_wcsicmp_l`</ph>","source":"`_wcsicmp`, `_wcsicmp_l`"},{"content":"<ph id=\"ph1\">\\&lt;</ph>string.h&gt; or <ph id=\"ph2\">\\&lt;</ph>wchar.h&gt;","pos":[7570,7595],"source":"\\<string.h> or \\<wchar.h>"},{"pos":[7600,7624],"content":"<ph id=\"ph1\">`_mbsicmp`</ph>, <ph id=\"ph2\">`_mbsicmp_l`</ph>","source":"`_mbsicmp`, `_mbsicmp_l`"},{"content":"<ph id=\"ph1\">\\&lt;</ph>mbstring.h&gt;","pos":[7625,7638],"source":"\\<mbstring.h>"},{"pos":[7646,7750],"content":"For additional compatibility information, see <bpt id=\"p1\">[</bpt>Compatibility<ept id=\"p1\">](../../c-runtime-library/compatibility.md)</ept>.","source":"For additional compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md)."},{"pos":[7759,7766],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[9122,9147],"content":".NET Framework Equivalent","linkify":".NET Framework Equivalent","nodes":[{"content":".NET Framework Equivalent","pos":[0,25]}]},{"pos":[9151,9245],"content":"<bpt id=\"p1\">[</bpt>System::String::Compare<ept id=\"p1\">](https://msdn.microsoft.com/en-us/library/system.string.compare.aspx)</ept>","source":"[System::String::Compare](https://msdn.microsoft.com/en-us/library/system.string.compare.aspx)"},{"pos":[9254,9262],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>String Manipulation<ept id=\"p1\">](../../c-runtime-library/string-manipulation-crt.md)</ept><ph id=\"ph1\"> </ph>","pos":[9266,9340],"source":"[String Manipulation](../../c-runtime-library/string-manipulation-crt.md) "},{"content":"<bpt id=\"p1\"> [</bpt>memcmp, wmemcmp<ept id=\"p1\">](../../c-runtime-library/reference/memcmp-wmemcmp.md)</ept><ph id=\"ph1\"> </ph>","pos":[9343,9415],"source":" [memcmp, wmemcmp](../../c-runtime-library/reference/memcmp-wmemcmp.md) "},{"content":"<bpt id=\"p1\"> [</bpt>_memicmp, _memicmp_l<ept id=\"p1\">](../../c-runtime-library/reference/memicmp-memicmp-l.md)</ept><ph id=\"ph1\"> </ph>","pos":[9418,9498],"source":" [_memicmp, _memicmp_l](../../c-runtime-library/reference/memicmp-memicmp-l.md) "},{"content":"<bpt id=\"p1\"> [</bpt>strcmp, wcscmp, _mbscmp<ept id=\"p1\">](../../c-runtime-library/reference/strcmp-wcscmp-mbscmp.md)</ept><ph id=\"ph1\"> </ph>","pos":[9501,9587],"source":" [strcmp, wcscmp, _mbscmp](../../c-runtime-library/reference/strcmp-wcscmp-mbscmp.md) "},{"content":"<bpt id=\"p1\"> [</bpt>strcoll Functions<ept id=\"p1\">](../../c-runtime-library/strcoll-functions.md)</ept><ph id=\"ph1\"> </ph>","pos":[9590,9657],"source":" [strcoll Functions](../../c-runtime-library/strcoll-functions.md) "},{"content":"<bpt id=\"p1\"> [</bpt>strncmp, wcsncmp, _mbsncmp, _mbsncmp_l<ept id=\"p1\">](../../c-runtime-library/reference/strncmp-wcsncmp-mbsncmp-mbsncmp-l.md)</ept><ph id=\"ph1\"> </ph>","pos":[9660,9774],"source":" [strncmp, wcsncmp, _mbsncmp, _mbsncmp_l](../../c-runtime-library/reference/strncmp-wcsncmp-mbsncmp-mbsncmp-l.md) "},{"content":"<bpt id=\"p1\"> [</bpt>_strnicmp, _wcsnicmp, _mbsnicmp, _strnicmp_l, _wcsnicmp_l, _mbsnicmp_l<ept id=\"p1\">](../../c-runtime-library/reference/strnicmp-wcsnicmp-mbsnicmp-strnicmp-l-wcsnicmp-l-mbsnicmp-l.md)</ept><ph id=\"ph1\"> </ph>","pos":[9777,9949],"source":" [_strnicmp, _wcsnicmp, _mbsnicmp, _strnicmp_l, _wcsnicmp_l, _mbsnicmp_l](../../c-runtime-library/reference/strnicmp-wcsnicmp-mbsnicmp-strnicmp-l-wcsnicmp-l-mbsnicmp-l.md) "},{"content":"<bpt id=\"p1\"> [</bpt>strrchr, wcsrchr, _mbsrchr, _mbsrchr_l<ept id=\"p1\">](../../c-runtime-library/reference/strrchr-wcsrchr-mbsrchr-mbsrchr-l.md)</ept><ph id=\"ph1\"> </ph>","pos":[9952,10066],"source":" [strrchr, wcsrchr, _mbsrchr, _mbsrchr_l](../../c-runtime-library/reference/strrchr-wcsrchr-mbsrchr-mbsrchr-l.md) "},{"content":"<bpt id=\"p1\"> [</bpt>_strset, _strset_l, _wcsset, _wcsset_l, _mbsset, _mbsset_l<ept id=\"p1\">](../../c-runtime-library/reference/strset-strset-l-wcsset-wcsset-l-mbsset-mbsset-l.md)</ept><ph id=\"ph1\"> </ph>","pos":[10069,10217],"source":" [_strset, _strset_l, _wcsset, _wcsset_l, _mbsset, _mbsset_l](../../c-runtime-library/reference/strset-strset-l-wcsset-wcsset-l-mbsset-mbsset-l.md) "},{"content":"<bpt id=\"p1\"> [</bpt>strspn, wcsspn, _mbsspn, _mbsspn_l<ept id=\"p1\">](../../c-runtime-library/reference/strspn-wcsspn-mbsspn-mbsspn-l.md)</ept>","pos":[10220,10325],"source":" [strspn, wcsspn, _mbsspn, _mbsspn_l](../../c-runtime-library/reference/strspn-wcsspn-mbsspn-mbsspn-l.md)"}],"content":"---\ntitle: \"_stricmp, _wcsicmp, _mbsicmp, _stricmp_l, _wcsicmp_l, _mbsicmp_l | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\napiname: \n  - \"_stricmp_l\"\n  - \"_mbsicmp\"\n  - \"_wcsicmp\"\n  - \"_mbsicmp_l\"\n  - \"_stricmp\"\n  - \"_wcsicmp_l\"\napilocation: \n  - \"msvcrt.dll\"\n  - \"msvcr80.dll\"\n  - \"msvcr90.dll\"\n  - \"msvcr100.dll\"\n  - \"msvcr100_clr0400.dll\"\n  - \"msvcr110.dll\"\n  - \"msvcr110_clr0400.dll\"\n  - \"msvcr120.dll\"\n  - \"msvcr120_clr0400.dll\"\n  - \"ucrtbase.dll\"\n  - \"api-ms-win-crt-multibyte-l1-1-0.dll\"\n  - \"api-ms-win-crt-string-l1-1-0.dll\"\napitype: \"DLLExport\"\nf1_keywords: \n  - \"_ftcsicmp\"\n  - \"_stricmp\"\n  - \"wcsicmp_l\"\n  - \"_wcsicmp\"\n  - \"_tcsicmp\"\n  - \"_strcmpi\"\n  - \"stricmp_l\"\n  - \"_mbsicmp\"\n  - \"_fstricmp\"\n  - \"mbsicmp_l\"\n  - \"mbsicmp\"\ndev_langs: \n  - \"C++\"\n  - \"C\"\nhelpviewer_keywords: \n  - \"_wcsicmp function\"\n  - \"_stricmp_l function\"\n  - \"fstricmp function\"\n  - \"_tcsicmp function\"\n  - \"ftcsicmp function\"\n  - \"string comparison [C++], lowercase\"\n  - \"_wcsicmp_l function\"\n  - \"_fstricmp function\"\n  - \"strings [C++], comparing\"\n  - \"mbsicmp function\"\n  - \"_ftcsicmp function\"\n  - \"_mbsicmp_l function\"\n  - \"wcsicmp_l function\"\n  - \"_stricmp function\"\n  - \"_mbsicmp function\"\n  - \"tcsicmp function\"\n  - \"stricmp_l function\"\n  - \"mbsicmp_l function\"\n  - \"_strcmpi function\"\nms.assetid: 0e1ee515-0d75-435a-a445-8875d4669b50\ncaps.latest.revision: 28\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# _stricmp, _wcsicmp, _mbsicmp, _stricmp_l, _wcsicmp_l, _mbsicmp_l\nPerforms a case-insensitive comparison of strings.  \n  \n> [!IMPORTANT]\n>  `_mbsicmp` and `_mbsicmp_l` cannot be used in applications that execute in the Windows Runtime. For more information, see [CRT functions not supported with /ZW](http://msdn.microsoft.com/library/windows/apps/jj606124.aspx).  \n  \n## Syntax  \n  \n```  \nint _stricmp(  \n   const char *string1,  \n   const char *string2   \n);  \nint _wcsicmp(  \n   const wchar_t *string1,  \n   const wchar_t *string2   \n);  \nint _mbsicmp(  \n   const unsigned char *string1,  \n   const unsigned char *string2   \n);  \nint _stricmp_l(  \n   const char *string1,  \n   const char *string2,  \n   _locale_t locale  \n);  \nint _wcsicmp_l(  \n   const wchar_t *string1,  \n   const wchar_t *string2,  \n   _locale_t locale  \n);  \nint _mbsicmp_l(  \n   const unsigned char *string1,  \n   const unsigned char *string2,  \n   _locale_t locale  \n);  \n```  \n  \n#### Parameters  \n `string1, string2`  \n Null-terminated strings to compare.  \n  \n `locale`  \n Locale to use.  \n  \n## Return Value  \n The return value indicates the relation of `string1` to `string2` as follows.  \n  \n|Return value|Description|  \n|------------------|-----------------|  \n|< 0|`string1` less than `string2`|  \n|0|`string1` identical to `string2`|  \n|> 0|`string1` greater than `string2`|  \n  \n On an error, `_mbsicmp` returns `_NLSCMPERROR`, which is defined in \\<string.h> and \\<mbstring.h>.  \n  \n## Remarks  \n The `_stricmp` function ordinally compares `string1` and `string2` after converting each character to lowercase, and returns a value indicating their relationship. `_stricmp` differs from `_stricoll` in that the `_stricmp` comparison is only affected by `LC_CTYPE`, which determines which characters are upper and lowercase. The `_stricoll` function compares strings according to both the `LC_CTYPE` and `LC_COLLATE` categories of the locale, which includes both the case and the collation order. For more information about the `LC_COLLATE` category, see [setlocale](../../c-runtime-library/reference/setlocale-wsetlocale.md) and [Locale Categories](../../c-runtime-library/locale-categories.md). The versions of these functions without the `_l` suffix use the current locale for locale-dependent behavior. The versions with the suffix are identical except that they use the locale passed in instead. If the locale has not been set, the C locale is used. For more information, see [Locale](../../c-runtime-library/locale.md).  \n  \n> [!NOTE]\n>  `_stricmp` is equivalent to `_strcmpi`. They can be used interchangeably but `_stricmp` is the preferred standard.  \n  \n The `_strcmpi` function is equivalent to `_stricmp` and is provided for backward compatibility only.  \n  \n Because `_stricmp` does lowercase comparisons, it may result in unexpected behavior.  \n  \n To illustrate when case conversion by `_stricmp` affects the outcome of a comparison, assume that you have the two strings JOHNSTON and JOHN_HENRY. The string JOHN_HENRY will be considered less than JOHNSTON because the \"_\" has a lower ASCII value than a lowercase S. In fact, any character that has an ASCII value between 91 and 96 will be considered less than any letter.  \n  \n If the [strcmp](../../c-runtime-library/reference/strcmp-wcscmp-mbscmp.md) function is used instead of `_stricmp`, JOHN_HENRY will be greater than JOHNSTON.  \n  \n `_wcsicmp` and `_mbsicmp` are wide-character and multibyte-character versions of `_stricmp`. The arguments and return value of `_wcsicmp` are wide-character strings; those of `_mbsicmp` are multibyte-character strings. `_mbsicmp` recognizes multibyte-character sequences according to the current multibyte code page and returns `_NLSCMPERROR` on an error. For more information, see [Code Pages](../../c-runtime-library/code-pages.md). These three functions behave identically otherwise.  \n  \n `_wcsicmp` and `wcscmp` behave identically except that `wcscmp` does not convert its arguments to lowercase before comparing them. `_mbsicmp` and `_mbscmp` behave identically except that `_mbscmp` does not convert its arguments to lowercase before comparing them.  \n  \n You will need to call [setlocale](../../c-runtime-library/reference/setlocale-wsetlocale.md) for `_wcsicmp` to work with Latin 1 characters. The C locale is in effect by default, so, for example, ä will not compare equal to Ä. Call `setlocale` with any locale other than the C locale before the call to `_wcsicmp`. The following sample demonstrates how `_wcsicmp` is sensitive to the locale:  \n  \n```  \n// crt_stricmp_locale.c  \n#include <string.h>  \n#include <stdio.h>  \n#include <locale.h>  \n  \nint main() {  \n   setlocale(LC_ALL,\"C\");   // in effect by default  \n   printf(\"\\n%d\",_wcsicmp(L\"ä\", L\"Ä\"));   // compare fails  \n   setlocale(LC_ALL,\"\");  \n   printf(\"\\n%d\",_wcsicmp(L\"ä\", L\"Ä\"));   // compare succeeds  \n}  \n```  \n  \n An alternative is to call [_create_locale, _wcreate_locale](../../c-runtime-library/reference/create-locale-wcreate-locale.md) and pass the returned locale object as a parameter to `_wcsicmp_l`.  \n  \n All of these functions validate their parameters. If either `string1` or `string2` are null pointers, the invalid parameter handler is invoked, as described in [Parameter Validation](../../c-runtime-library/parameter-validation.md) . If execution is allowed to continue, these functions return `_NLSCMPERROR` and set `errno` to `EINVAL`.  \n  \n### Generic-Text Routine Mappings  \n  \n|TCHAR.H routine|_UNICODE & _MBCS not defined|_MBCS defined|_UNICODE defined|  \n|---------------------|------------------------------------|--------------------|-----------------------|  \n|`_tcsicmp`|`_stricmp`|`_mbsicmp`|`_wcsicmp`|  \n  \n## Requirements  \n  \n|Routine|Required header|  \n|-------------|---------------------|  \n|`_stricmp`, `_stricmp_l`|\\<string.h>|  \n|`_wcsicmp`, `_wcsicmp_l`|\\<string.h> or \\<wchar.h>|  \n|`_mbsicmp`, `_mbsicmp_l`|\\<mbstring.h>|  \n  \n For additional compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md).  \n  \n## Example  \n  \n```  \n// crt_stricmp.c  \n  \n#include <string.h>  \n#include <stdio.h>  \n#include <stdlib.h>  \n  \nchar string1[] = \"The quick brown dog jumps over the lazy fox\";  \nchar string2[] = \"The QUICK brown dog jumps over the lazy fox\";  \n  \nint main( void )  \n{  \n   char tmp[20];  \n   int result;  \n  \n   // Case sensitive  \n   printf( \"Compare strings:\\n   %s\\n   %s\\n\\n\", string1, string2 );  \n   result = strcmp( string1, string2 );  \n   if( result > 0 )  \n      strcpy_s( tmp, _countof(tmp), \"greater than\" );  \n   else if( result < 0 )  \n      strcpy_s( tmp, _countof(tmp), \"less than\" );  \n   else  \n      strcpy_s( tmp, _countof(tmp), \"equal to\" );  \n   printf( \"   strcmp:   String 1 is %s string 2\\n\", tmp );  \n  \n   // Case insensitive (could use equivalent _stricmp)  \n   result = _stricmp( string1, string2 );  \n   if( result > 0 )  \n      strcpy_s( tmp, _countof(tmp), \"greater than\" );  \n   else if( result < 0 )  \n      strcpy_s( tmp, _countof(tmp), \"less than\" );  \n   else  \n      strcpy_s( tmp, _countof(tmp), \"equal to\" );  \n   printf( \"   _stricmp:  String 1 is %s string 2\\n\", tmp );  \n}  \n```  \n  \n```Output  \nCompare strings:  \n   The quick brown dog jumps over the lazy fox  \n   The QUICK brown dog jumps over the lazy fox  \n  \n   strcmp:   String 1 is greater than string 2  \n   _stricmp:  String 1 is equal to string 2  \n```  \n  \n## .NET Framework Equivalent  \n [System::String::Compare](https://msdn.microsoft.com/en-us/library/system.string.compare.aspx)  \n  \n## See Also  \n [String Manipulation](../../c-runtime-library/string-manipulation-crt.md)   \n [memcmp, wmemcmp](../../c-runtime-library/reference/memcmp-wmemcmp.md)   \n [_memicmp, _memicmp_l](../../c-runtime-library/reference/memicmp-memicmp-l.md)   \n [strcmp, wcscmp, _mbscmp](../../c-runtime-library/reference/strcmp-wcscmp-mbscmp.md)   \n [strcoll Functions](../../c-runtime-library/strcoll-functions.md)   \n [strncmp, wcsncmp, _mbsncmp, _mbsncmp_l](../../c-runtime-library/reference/strncmp-wcsncmp-mbsncmp-mbsncmp-l.md)   \n [_strnicmp, _wcsnicmp, _mbsnicmp, _strnicmp_l, _wcsnicmp_l, _mbsnicmp_l](../../c-runtime-library/reference/strnicmp-wcsnicmp-mbsnicmp-strnicmp-l-wcsnicmp-l-mbsnicmp-l.md)   \n [strrchr, wcsrchr, _mbsrchr, _mbsrchr_l](../../c-runtime-library/reference/strrchr-wcsrchr-mbsrchr-mbsrchr-l.md)   \n [_strset, _strset_l, _wcsset, _wcsset_l, _mbsset, _mbsset_l](../../c-runtime-library/reference/strset-strset-l-wcsset-wcsset-l-mbsset-mbsset-l.md)   \n [strspn, wcsspn, _mbsspn, _mbsspn_l](../../c-runtime-library/reference/strspn-wcsspn-mbsspn-mbsspn-l.md)"}