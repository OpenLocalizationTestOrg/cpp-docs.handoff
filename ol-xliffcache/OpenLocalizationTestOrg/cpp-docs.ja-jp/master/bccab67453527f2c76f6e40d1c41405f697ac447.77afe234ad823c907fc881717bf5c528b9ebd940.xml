{"nodes":[{"pos":[12,36],"content":"_isatty | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"_isatty | Microsoft Docs","pos":[0,24]}]},{"content":"_isatty","pos":[992,999]},{"content":"Determines whether a file descriptor is associated with a character device.","pos":[1000,1075]},{"content":"Syntax","pos":[1084,1090]},{"content":"Parameters","pos":[1155,1165]},{"content":"File descriptor that refers to the device to be tested.","pos":[1177,1232]},{"content":"Return Value","pos":[1241,1253]},{"content":"returns a nonzero value if the descriptor is associated with a character device.","pos":[1267,1347]},{"content":"Otherwise, <ph id=\"ph1\">`_isatty`</ph> returns 0.","pos":[1348,1379],"source":" Otherwise, `_isatty` returns 0."},{"content":"Remarks","pos":[1388,1395]},{"pos":[1399,1531],"content":"The <ph id=\"ph1\">`_isatty`</ph> function determines whether <ph id=\"ph2\">`fd`</ph> is associated with a character device (a terminal, console, printer, or serial port).","source":"The `_isatty` function determines whether `fd` is associated with a character device (a terminal, console, printer, or serial port)."},{"content":"This function validates the <ph id=\"ph1\">`fd`</ph> parameter.","pos":[1538,1581],"source":"This function validates the `fd` parameter."},{"content":"If <ph id=\"ph1\">`fd`</ph> is a bad file pointer, the invalid parameter handler is invoked, as described in <bpt id=\"p1\">[</bpt>Parameter Validation<ept id=\"p1\">](../../c-runtime-library/parameter-validation.md)</ept>.","pos":[1582,1743],"source":" If `fd` is a bad file pointer, the invalid parameter handler is invoked, as described in [Parameter Validation](../../c-runtime-library/parameter-validation.md)."},{"content":"If execution is allowed to continue, the function returns 0 and sets <ph id=\"ph1\">`errno`</ph> to <ph id=\"ph2\">`EBADF`</ph>.","pos":[1744,1832],"source":" If execution is allowed to continue, the function returns 0 and sets `errno` to `EBADF`."},{"content":"Requirements","pos":[1841,1853]},{"content":"Routine","pos":[1860,1867]},{"content":"Required header","pos":[1868,1883]},{"content":"io.h&gt;","pos":[1940,1945],"source":"io.h>"},{"pos":[1953,2051],"content":"For more compatibility information, see <bpt id=\"p1\">[</bpt>Compatibility<ept id=\"p1\">](../../c-runtime-library/compatibility.md)</ept>.","source":"For more compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md)."},{"content":"Libraries","pos":[2060,2069]},{"pos":[2073,2165],"content":"All versions of the <bpt id=\"p1\">[</bpt>C run-time libraries<ept id=\"p1\">](../../c-runtime-library/crt-library-features.md)</ept>.","source":"All versions of the [C run-time libraries](../../c-runtime-library/crt-library-features.md)."},{"content":"Example","pos":[2174,2181]},{"content":"Sample Output","pos":[2557,2570]},{"content":"See Also","pos":[2637,2645]},{"content":"File Handling","pos":[2650,2663]}],"content":"---\ntitle: \"_isatty | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\napiname: \n  - \"_isatty\"\napilocation: \n  - \"msvcrt.dll\"\n  - \"msvcr80.dll\"\n  - \"msvcr90.dll\"\n  - \"msvcr100.dll\"\n  - \"msvcr100_clr0400.dll\"\n  - \"msvcr110.dll\"\n  - \"msvcr110_clr0400.dll\"\n  - \"msvcr120.dll\"\n  - \"msvcr120_clr0400.dll\"\n  - \"ucrtbase.dll\"\n  - \"api-ms-win-crt-stdio-l1-1-0.dll\"\napitype: \"DLLExport\"\nf1_keywords: \n  - \"_isatty\"\ndev_langs: \n  - \"C++\"\n  - \"C\"\nhelpviewer_keywords: \n  - \"isatty function\"\n  - \"character device checking\"\n  - \"_isatty function\"\n  - \"checking character devices\"\nms.assetid: 9f1b2e87-0cd7-4079-b187-f2b7ca15fcbe\ncaps.latest.revision: 18\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# _isatty\nDetermines whether a file descriptor is associated with a character device.  \n  \n## Syntax  \n  \n```  \n  \n      int _isatty(  \nint fd   \n);  \n```  \n  \n#### Parameters  \n `fd`  \n File descriptor that refers to the device to be tested.  \n  \n## Return Value  \n `_isatty` returns a nonzero value if the descriptor is associated with a character device. Otherwise, `_isatty` returns 0.  \n  \n## Remarks  \n The `_isatty` function determines whether `fd` is associated with a character device (a terminal, console, printer, or serial port).  \n  \n This function validates the `fd` parameter. If `fd` is a bad file pointer, the invalid parameter handler is invoked, as described in [Parameter Validation](../../c-runtime-library/parameter-validation.md). If execution is allowed to continue, the function returns 0 and sets `errno` to `EBADF`.  \n  \n## Requirements  \n  \n|Routine|Required header|  \n|-------------|---------------------|  \n|`_isatty`|\\<io.h>|  \n  \n For more compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md).  \n  \n## Libraries  \n All versions of the [C run-time libraries](../../c-runtime-library/crt-library-features.md).  \n  \n## Example  \n  \n```  \n// crt_isatty.c  \n/* This program checks to see whether  \n * stdout has been redirected to a file.  \n */  \n  \n#include <stdio.h>  \n#include <io.h>  \n  \nint main( void )  \n{  \n   if( _isatty( _fileno( stdout ) ) )  \n      printf( \"stdout has not been redirected to a file\\n\" );  \n   else  \n      printf( \"stdout has been redirected to a file\\n\");  \n}  \n```  \n  \n## Sample Output  \n  \n```  \nstdout has not been redirected to a file  \n```  \n  \n## See Also  \n [File Handling](../../c-runtime-library/file-handling.md)"}