{"nodes":[{"pos":[12,44],"content":"_putch, _putwch | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"_putch, _putwch | Microsoft Docs","pos":[0,32]}]},{"pos":[1080,1095],"content":"_putch, _putwch","linkify":"_putch, _putwch","nodes":[{"content":"_putch, _putwch","pos":[0,15]}]},{"content":"Writes a character to the console.","pos":[1096,1130]},{"pos":[1138,1358],"content":"[!IMPORTANT]\n This API cannot be used in applications that execute in the Windows Runtime. For more information, see [CRT functions not supported with /ZW](http://msdn.microsoft.com/library/windows/apps/jj606124.aspx).","leadings":["","> "],"nodes":[{"content":" This API cannot be used in applications that execute in the Windows Runtime. For more information, see [CRT functions not supported with /ZW](http://msdn.microsoft.com/library/windows/apps/jj606124.aspx).","pos":[13,218],"nodes":[{"content":"This API cannot be used in applications that execute in the Windows Runtime.","pos":[1,77]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>CRT functions not supported with /ZW<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/apps/jj606124.aspx)</ept>.","pos":[78,205],"source":" For more information, see [CRT functions not supported with /ZW](http://msdn.microsoft.com/library/windows/apps/jj606124.aspx)."}]}]},{"pos":[1367,1373],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[1474,1484],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Character to be output.","pos":[1495,1518]},{"pos":[1527,1539],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Returns <ph id=\"ph1\">`c`</ph> if successful.","pos":[1543,1569],"source":"Returns `c` if successful."},{"content":"If <ph id=\"ph1\">`_putch`</ph> fails, it returns <ph id=\"ph2\">`EOF`</ph>; if <bpt id=\"p1\">**</bpt>_putwch<ept id=\"p1\">**</ept> fails, it returns <bpt id=\"p2\">**</bpt>WEOF<ept id=\"p2\">**</ept>.","pos":[1570,1649],"source":" If `_putch` fails, it returns `EOF`; if **_putwch** fails, it returns **WEOF**."},{"pos":[1658,1665],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"These functions write the character <ph id=\"ph1\">`c`</ph> directly, without buffering, to the console.","pos":[1669,1753],"source":"These functions write the character `c` directly, without buffering, to the console."},{"content":"In Windows NT, <bpt id=\"p1\">**</bpt>_putwch<ept id=\"p1\">**</ept> writes Unicode characters using the current console locale setting.","pos":[1754,1848],"source":" In Windows NT, **_putwch** writes Unicode characters using the current console locale setting."},{"content":"The versions with the <bpt id=\"p1\">**</bpt>_nolock<ept id=\"p1\">**</ept> suffix are identical except that they are not protected from interference by other threads.","pos":[1855,1980],"source":"The versions with the **_nolock** suffix are identical except that they are not protected from interference by other threads."},{"content":"For more information, see <ph id=\"ph1\">`_putch_nolock`</ph>, <ph id=\"ph2\">`_putwch_nolock`</ph>.","pos":[1981,2041],"source":" For more information, see `_putch_nolock`, `_putwch_nolock`."},{"pos":[2051,2080],"content":"Generic-Text Routine Mappings","linkify":"Generic-Text Routine Mappings","nodes":[{"content":"Generic-Text Routine Mappings","pos":[0,29]}]},{"content":"Tchar.h routine","pos":[2087,2102]},{"content":"_UNICODE and _MBCS not defined","pos":[2103,2133]},{"content":"_MBCS defined","pos":[2134,2147]},{"content":"_UNICODE defined","pos":[2148,2164]},{"pos":[2279,2290],"content":"<bpt id=\"p1\">**</bpt>_puttch<ept id=\"p1\">**</ept>","source":"**_puttch**"},{"pos":[2309,2320],"content":"<bpt id=\"p1\">**</bpt>_putwch<ept id=\"p1\">**</ept>","source":"**_putwch**"},{"pos":[2330,2342],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"content":"Routine","pos":[2349,2356]},{"content":"Required header","pos":[2357,2372]},{"content":"<ph id=\"ph1\">\\&lt;</ph>conio.h&gt;","pos":[2426,2436],"source":"\\<conio.h>"},{"pos":[2441,2452],"content":"<bpt id=\"p1\">**</bpt>_putwch<ept id=\"p1\">**</ept>","source":"**_putwch**"},{"content":"<ph id=\"ph1\">\\&lt;</ph>conio.h&gt;","pos":[2453,2463],"source":"\\<conio.h>"},{"pos":[2471,2569],"content":"For more compatibility information, see <bpt id=\"p1\">[</bpt>Compatibility<ept id=\"p1\">](../../c-runtime-library/compatibility.md)</ept>.","source":"For more compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md)."},{"pos":[2578,2587],"content":"Libraries","linkify":"Libraries","nodes":[{"content":"Libraries","pos":[0,9]}]},{"pos":[2591,2683],"content":"All versions of the <bpt id=\"p1\">[</bpt>C run-time libraries<ept id=\"p1\">](../../c-runtime-library/crt-library-features.md)</ept>.","source":"All versions of the [C run-time libraries](../../c-runtime-library/crt-library-features.md)."},{"pos":[2692,2699],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[2703,2783],"content":"See the example for <bpt id=\"p1\">[</bpt>_getch<ept id=\"p1\">](../../c-runtime-library/reference/getch-getwch.md)</ept>.","source":"See the example for [_getch](../../c-runtime-library/reference/getch-getwch.md)."},{"pos":[2792,2800],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Console and Port I/O<ept id=\"p1\">](../../c-runtime-library/console-and-port-i-o.md)</ept><ph id=\"ph1\"> </ph>","pos":[2804,2876],"source":"[Console and Port I/O](../../c-runtime-library/console-and-port-i-o.md) "},{"content":"<bpt id=\"p1\"> [</bpt>_cprintf, _cprintf_l, _cwprintf, _cwprintf_l<ept id=\"p1\">](../../c-runtime-library/reference/cprintf-cprintf-l-cwprintf-cwprintf-l.md)</ept><ph id=\"ph1\"> </ph>","pos":[2879,3003],"source":" [_cprintf, _cprintf_l, _cwprintf, _cwprintf_l](../../c-runtime-library/reference/cprintf-cprintf-l-cwprintf-cwprintf-l.md) "},{"content":"<bpt id=\"p1\"> [</bpt>_getch, _getwch<ept id=\"p1\">](../../c-runtime-library/reference/getch-getwch.md)</ept>","pos":[3006,3075],"source":" [_getch, _getwch](../../c-runtime-library/reference/getch-getwch.md)"}],"content":"---\ntitle: \"_putch, _putwch | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\napiname: \n  - \"_putwch\"\n  - \"_putch\"\napilocation: \n  - \"msvcrt.dll\"\n  - \"msvcr80.dll\"\n  - \"msvcr90.dll\"\n  - \"msvcr100.dll\"\n  - \"msvcr100_clr0400.dll\"\n  - \"msvcr110.dll\"\n  - \"msvcr110_clr0400.dll\"\n  - \"msvcr120.dll\"\n  - \"msvcr120_clr0400.dll\"\n  - \"ucrtbase.dll\"\n  - \"api-ms-win-crt-conio-l1-1-0.dll\"\napitype: \"DLLExport\"\nf1_keywords: \n  - \"_putch\"\n  - \"putwch\"\n  - \"_putwch\"\ndev_langs: \n  - \"C++\"\n  - \"C\"\nhelpviewer_keywords: \n  - \"_putch function\"\n  - \"characters, writing\"\n  - \"putwch function\"\n  - \"_putwch function\"\n  - \"putch function\"\n  - \"console, writing characters to\"\nms.assetid: 3babc7cf-e333-405d-8449-c788d61d51aa\ncaps.latest.revision: 19\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# _putch, _putwch\nWrites a character to the console.  \n  \n> [!IMPORTANT]\n>  This API cannot be used in applications that execute in the Windows Runtime. For more information, see [CRT functions not supported with /ZW](http://msdn.microsoft.com/library/windows/apps/jj606124.aspx).  \n  \n## Syntax  \n  \n```  \n  \n      int _putch(  \nint c   \n);  \nwint_t _putwch(  \n   wchar_t c  \n);  \n```  \n  \n#### Parameters  \n `c`  \n Character to be output.  \n  \n## Return Value  \n Returns `c` if successful. If `_putch` fails, it returns `EOF`; if **_putwch** fails, it returns **WEOF**.  \n  \n## Remarks  \n These functions write the character `c` directly, without buffering, to the console. In Windows NT, **_putwch** writes Unicode characters using the current console locale setting.  \n  \n The versions with the **_nolock** suffix are identical except that they are not protected from interference by other threads. For more information, see `_putch_nolock`, `_putwch_nolock`.  \n  \n### Generic-Text Routine Mappings  \n  \n|Tchar.h routine|_UNICODE and _MBCS not defined|_MBCS defined|_UNICODE defined|  \n|---------------------|--------------------------------------|--------------------|-----------------------|  \n|**_puttch**|`_putch`|`_putch`|**_putwch**|  \n  \n## Requirements  \n  \n|Routine|Required header|  \n|-------------|---------------------|  \n|`_putch`|\\<conio.h>|  \n|**_putwch**|\\<conio.h>|  \n  \n For more compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md).  \n  \n## Libraries  \n All versions of the [C run-time libraries](../../c-runtime-library/crt-library-features.md).  \n  \n## Example  \n See the example for [_getch](../../c-runtime-library/reference/getch-getwch.md).  \n  \n## See Also  \n [Console and Port I/O](../../c-runtime-library/console-and-port-i-o.md)   \n [_cprintf, _cprintf_l, _cwprintf, _cwprintf_l](../../c-runtime-library/reference/cprintf-cprintf-l-cwprintf-cwprintf-l.md)   \n [_getch, _getwch](../../c-runtime-library/reference/getch-getwch.md)"}