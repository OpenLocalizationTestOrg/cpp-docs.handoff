{"nodes":[{"pos":[12,45],"content":"CD2DBitmap Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"CD2DBitmap Class | Microsoft Docs","pos":[0,33]}]},{"content":"CD2DBitmap Class","pos":[637,653]},{"content":"A wrapper for ID2D1Bitmap.","pos":[654,680]},{"content":"Syntax","pos":[689,695]},{"content":"Members","pos":[761,768]},{"content":"Public Constructors","pos":[778,797]},{"content":"Name","pos":[804,808]},{"content":"Description","pos":[809,820]},{"content":"CD2DBitmap::CD2DBitmap","pos":[859,881]},{"content":"Overloaded.","pos":[908,919]},{"content":"Constructs a CD2DBitmap object from HBITMAP.","pos":[920,964]},{"content":"CD2DBitmap::~CD2DBitmap","pos":[970,993]},{"content":"The destructor.","pos":[1025,1040]},{"content":"Called when a D2D bitmap object is being destroyed.","pos":[1041,1092]},{"content":"Protected Constructors","pos":[1103,1125]},{"content":"Name","pos":[1132,1136]},{"content":"Description","pos":[1137,1148]},{"content":"CD2DBitmap::CD2DBitmap","pos":[1187,1209]},{"content":"Overloaded.","pos":[1236,1247]},{"content":"Constructs a CD2DBitmap object.","pos":[1248,1279]},{"content":"Public Methods","pos":[1290,1304]},{"content":"Name","pos":[1311,1315]},{"content":"Description","pos":[1316,1327]},{"content":"CD2DBitmap::Attach","pos":[1366,1384]},{"content":"Attaches existing resource interface to the object","pos":[1407,1457]},{"content":"CD2DBitmap::CopyFromBitmap","pos":[1463,1489]},{"content":"Copies the specified region from the specified bitmap into the current bitmap","pos":[1520,1597]},{"content":"CD2DBitmap::CopyFromMemory","pos":[1603,1629]},{"content":"Copies the specified region from memory into the current bitmap","pos":[1660,1723]},{"content":"CD2DBitmap::CopyFromRenderTarget","pos":[1729,1761]},{"content":"Copies the specified region from the specified render target into the current bitmap","pos":[1798,1882]},{"content":"CD2DBitmap::Create","pos":[1888,1906]},{"content":"Creates a CD2DBitmap.","pos":[1929,1950]},{"content":"(Overrides <bpt id=\"p1\">[</bpt>CD2DResource::Create<ept id=\"p1\">](../../mfc/reference/cd2dresource-class.md#cd2dresource__create)</ept>.)","pos":[1951,2050],"source":" (Overrides [CD2DResource::Create](../../mfc/reference/cd2dresource-class.md#cd2dresource__create).)"},{"content":"CD2DBitmap::Destroy","pos":[2056,2075]},{"content":"Destroys a CD2DBitmap object.","pos":[2099,2128]},{"content":"(Overrides <bpt id=\"p1\">[</bpt>CD2DResource::Destroy<ept id=\"p1\">](../../mfc/reference/cd2dresource-class.md#cd2dresource__destroy)</ept>.)","pos":[2129,2230],"source":" (Overrides [CD2DResource::Destroy](../../mfc/reference/cd2dresource-class.md#cd2dresource__destroy).)"},{"content":"CD2DBitmap::Detach","pos":[2236,2254]},{"content":"Detaches resource interface from the object","pos":[2277,2320]},{"content":"CD2DBitmap::Get","pos":[2326,2341]},{"content":"Returns ID2D1Bitmap interface","pos":[2361,2390]},{"content":"CD2DBitmap::GetDPI","pos":[2396,2414]},{"content":"Return the dots per inch (DPI) of the bitmap","pos":[2437,2481]},{"content":"CD2DBitmap::GetPixelFormat","pos":[2487,2513]},{"content":"Retrieves the pixel format and alpha mode of the bitmap","pos":[2544,2599]},{"content":"CD2DBitmap::GetPixelSize","pos":[2605,2629]},{"content":"Returns the size, in device-dependent units (pixels), of the bitmap","pos":[2658,2725]},{"content":"CD2DBitmap::GetSize","pos":[2731,2750]},{"content":"Returns the size, in device-independent pixels (DIPs), of the bitmap","pos":[2774,2842]},{"content":"CD2DBitmap::IsValid","pos":[2848,2867]},{"pos":[2891,3017],"content":"Checks resource validity (Overrides <bpt id=\"p1\">[</bpt>CD2DResource::IsValid<ept id=\"p1\">](../../mfc/reference/cd2dresource-class.md#cd2dresource__isvalid)</ept>.)","source":"Checks resource validity (Overrides [CD2DResource::IsValid](../../mfc/reference/cd2dresource-class.md#cd2dresource__isvalid).)"},{"content":"Protected Methods","pos":[3028,3045]},{"content":"Name","pos":[3052,3056]},{"content":"Description","pos":[3057,3068]},{"content":"CD2DBitmap::CommonInit","pos":[3107,3129]},{"content":"Initializes the object","pos":[3156,3178]},{"content":"Public Operators","pos":[3189,3205]},{"content":"Name","pos":[3212,3216]},{"content":"Description","pos":[3217,3228]},{"content":"CD2DBitmap::operator ID2D1Bitmap*","pos":[3267,3300]},{"content":"Returns ID2D1Bitmap interface","pos":[3342,3371]},{"content":"Protected Data Members","pos":[3382,3404]},{"content":"Name","pos":[3411,3415]},{"content":"Description","pos":[3416,3427]},{"content":"CD2DBitmap::m_bAutoDestroyHBMP","pos":[3466,3496]},{"content":"TRUE if m_hBmpSrc should be destroyed; otherwise FALSE.","pos":[3531,3586]},{"content":"CD2DBitmap::m_hBmpSrc","pos":[3592,3613]},{"content":"Source bitmap handle.","pos":[3639,3660]},{"content":"CD2DBitmap::m_lpszType","pos":[3666,3688]},{"content":"Resource type.","pos":[3715,3729]},{"content":"CD2DBitmap::m_pBitmap","pos":[3735,3756]},{"content":"Stores a pointer to an ID2D1Bitmap object.","pos":[3782,3824]},{"content":"CD2DBitmap::m_sizeDest","pos":[3830,3852]},{"content":"Bitmap destination size.","pos":[3879,3903]},{"content":"CD2DBitmap::m_strPath","pos":[3909,3930]},{"content":"Botmap file path.","pos":[3956,3973]},{"content":"CD2DBitmap::m_uiResID","pos":[3979,4000]},{"content":"Bitmap resource ID.","pos":[4026,4045]},{"content":"Inheritance Hierarchy","pos":[4055,4076]},{"content":"CObject","pos":[4081,4088]},{"content":"CD2DResource","pos":[4135,4147]},{"content":"CD2DBitmap","pos":[4199,4209]},{"content":"Requirements","pos":[4260,4272]},{"pos":[4276,4305],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> afxrendertarget.h","source":"**Header:** afxrendertarget.h"},{"pos":[4359,4382],"content":"CD2DBitmap::~CD2DBitmap"},{"content":"The destructor.","pos":[4386,4401]},{"content":"Called when a D2D bitmap object is being destroyed.","pos":[4402,4453]},{"pos":[4536,4554],"content":"CD2DBitmap::Attach"},{"content":"Attaches existing resource interface to the object","pos":[4558,4608]},{"content":"Parameters","pos":[4670,4680]},{"content":"Existing resource interface.","pos":[4699,4727]},{"content":"Cannot be NULL","pos":[4728,4742]},{"pos":[4791,4813],"content":"CD2DBitmap::CD2DBitmap"},{"content":"Constructs a CD2DBitmap object from resource.","pos":[4817,4862]},{"content":"Parameters","pos":[5457,5467]},{"content":"A pointer to the render target.","pos":[5490,5521]},{"content":"The resource ID number of the resource.","pos":[5541,5580]},{"content":"Pointer to a null-terminated string that contains the resource type.","pos":[5601,5669]},{"content":"Destination size of the bitmap.","pos":[5690,5721]},{"content":"Indicates that the object will be destroyed by owner (pParentTarget).","pos":[5746,5815]},{"content":"Pointer to a null-terminated string that contains the name of file.","pos":[5836,5903]},{"content":"Handle to the bitmap.","pos":[5923,5944]},{"pos":[5993,6015],"content":"CD2DBitmap::CommonInit"},{"content":"Initializes the object","pos":[6019,6041]},{"pos":[6128,6154],"content":"CD2DBitmap::CopyFromBitmap"},{"content":"Copies the specified region from the specified bitmap into the current bitmap","pos":[6158,6235]},{"content":"Parameters","pos":[6397,6407]},{"content":"The bitmap to copy from","pos":[6424,6447]},{"content":"In the current bitmap, the upper-left corner of the area to which the region specified by srcRect is copied","pos":[6469,6576]},{"content":"The area of bitmap to copy","pos":[6596,6622]},{"content":"Return Value","pos":[6632,6644]},{"content":"If the method succeeds, it returns S_OK.","pos":[6648,6688]},{"content":"Otherwise, it returns an HRESULT error code.","pos":[6689,6733]},{"pos":[6786,6812],"content":"CD2DBitmap::CopyFromMemory"},{"content":"Copies the specified region from memory into the current bitmap","pos":[6816,6879]},{"content":"Parameters","pos":[7014,7024]},{"content":"The data to copy","pos":[7041,7057]},{"content":"The stride, or pitch, of the source bitmap stored in srcData.","pos":[7075,7136]},{"content":"The stride is the byte count of a scanline (one row of pixels in memory).","pos":[7137,7210]},{"content":"The stride can be computed from the following formula: pixel width * bytes per pixel + memory padding","pos":[7211,7312]},{"content":"In the current bitmap, the upper-left corner of the area to which the region specified by srcRect is copied","pos":[7333,7440]},{"content":"Return Value","pos":[7450,7462]},{"content":"If the method succeeds, it returns S_OK.","pos":[7466,7506]},{"content":"Otherwise, it returns an HRESULT error code.","pos":[7507,7551]},{"pos":[7610,7642],"content":"CD2DBitmap::CopyFromRenderTarget"},{"content":"Copies the specified region from the specified render target into the current bitmap","pos":[7646,7730]},{"content":"Parameters","pos":[7907,7917]},{"content":"The render target that contains the region to copy","pos":[7940,7990]},{"content":"In the current bitmap, the upper-left corner of the area to which the region specified by srcRect is copied","pos":[8012,8119]},{"content":"The area of renderTarget to copy","pos":[8139,8171]},{"content":"Return Value","pos":[8181,8193]},{"content":"If the method succeeds, it returns S_OK.","pos":[8197,8237]},{"content":"Otherwise, it returns an HRESULT error code.","pos":[8238,8282]},{"pos":[8327,8345],"content":"CD2DBitmap::Create"},{"content":"Creates a CD2DBitmap.","pos":[8349,8370]},{"content":"Parameters","pos":[8449,8459]},{"content":"A pointer to the render target.","pos":[8482,8513]},{"content":"Return Value","pos":[8523,8535]},{"content":"If the method succeeds, it returns S_OK.","pos":[8539,8579]},{"content":"Otherwise, it returns an HRESULT error code.","pos":[8580,8624]},{"pos":[8670,8689],"content":"CD2DBitmap::Destroy"},{"content":"Destroys a CD2DBitmap object.","pos":[8693,8722]},{"pos":[8806,8824],"content":"CD2DBitmap::Detach"},{"content":"Detaches resource interface from the object","pos":[8828,8871]},{"content":"Return Value","pos":[8919,8931]},{"content":"Pointer to detached resource interface.","pos":[8935,8974]},{"pos":[9016,9031],"content":"CD2DBitmap::Get"},{"content":"Returns ID2D1Bitmap interface","pos":[9035,9064]},{"content":"Return Value","pos":[9109,9121]},{"content":"Pointer to an ID2D1Bitmap interface or NULL if object is not initialized yet.","pos":[9125,9202]},{"pos":[9247,9265],"content":"CD2DBitmap::GetDPI"},{"content":"Return the dots per inch (DPI) of the bitmap","pos":[9269,9313]},{"content":"Return Value","pos":[9367,9379]},{"content":"The horizontal and vertical DPI of the bitmap.","pos":[9383,9429]},{"pos":[9482,9508],"content":"CD2DBitmap::GetPixelFormat"},{"content":"Retrieves the pixel format and alpha mode of the bitmap","pos":[9512,9567]},{"content":"Return Value","pos":[9637,9649]},{"content":"The pixel format and alpha mode of the bitmap.","pos":[9653,9699]},{"pos":[9750,9774],"content":"CD2DBitmap::GetPixelSize"},{"content":"Returns the size, in device-dependent units (pixels), of the bitmap","pos":[9778,9845]},{"content":"Return Value","pos":[9905,9917]},{"content":"The size, in pixels, of the bitmap..","pos":[9921,9957]},{"pos":[10003,10022],"content":"CD2DBitmap::GetSize"},{"content":"Returns the size, in device-independent pixels (DIPs), of the bitmap","pos":[10026,10094]},{"content":"Return Value","pos":[10149,10161]},{"content":"The size, in DIPs, of the bitmap.","pos":[10165,10198]},{"pos":[10244,10263],"content":"CD2DBitmap::IsValid"},{"content":"Checks resource validity","pos":[10267,10291]},{"content":"Return Value","pos":[10349,10361]},{"content":"TRUE if resource is valid; otherwise FALSE.","pos":[10365,10408]},{"pos":[10465,10495],"content":"CD2DBitmap::m_bAutoDestroyHBMP"},{"content":"TRUE if m_hBmpSrc should be destroyed; otherwise FALSE.","pos":[10499,10554]},{"pos":[10644,10665],"content":"CD2DBitmap::m_hBmpSrc"},{"content":"Source bitmap handle.","pos":[10669,10690]},{"pos":[10775,10797],"content":"CD2DBitmap::m_lpszType"},{"content":"Resource type.","pos":[10801,10815]},{"pos":[10900,10921],"content":"CD2DBitmap::m_pBitmap"},{"content":"Stores a pointer to an ID2D1Bitmap object.","pos":[10925,10967]},{"pos":[11057,11079],"content":"CD2DBitmap::m_sizeDest"},{"content":"Bitmap destination size.","pos":[11083,11107]},{"pos":[11194,11215],"content":"CD2DBitmap::m_strPath"},{"content":"Botmap file path.","pos":[11219,11236]},{"pos":[11320,11341],"content":"CD2DBitmap::m_uiResID"},{"content":"Bitmap resource ID.","pos":[11345,11364]},{"pos":[11461,11494],"content":"CD2DBitmap::operator ID2D1Bitmap*"},{"content":"Returns ID2D1Bitmap interface","pos":[11498,11527]},{"content":"Return Value","pos":[11578,11590]},{"content":"Pointer to an ID2D1Bitmap interface or NULL if object is not initialized yet.","pos":[11594,11671]},{"content":"See Also","pos":[11680,11688]},{"content":"Classes","pos":[11693,11700]}],"content":"---\ntitle: \"CD2DBitmap Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"afxrendertarget/CD2DBitmap\"\n  - \"CD2DBitmap\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"CD2DBitmap class\"\nms.assetid: 2b3686f1-812c-462b-b449-9f0cb6949bf6\ncaps.latest.revision: 17\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# CD2DBitmap Class\nA wrapper for ID2D1Bitmap.  \n  \n## Syntax  \n  \n```  \nclass CD2DBitmap : public CD2DResource;  \n```  \n  \n## Members  \n  \n### Public Constructors  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CD2DBitmap::CD2DBitmap](#cd2dbitmap__cd2dbitmap)|Overloaded. Constructs a CD2DBitmap object from HBITMAP.|  \n|[CD2DBitmap::~CD2DBitmap](#cd2dbitmap___dtorcd2dbitmap)|The destructor. Called when a D2D bitmap object is being destroyed.|  \n  \n### Protected Constructors  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CD2DBitmap::CD2DBitmap](#cd2dbitmap__cd2dbitmap)|Overloaded. Constructs a CD2DBitmap object.|  \n  \n### Public Methods  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CD2DBitmap::Attach](#cd2dbitmap__attach)|Attaches existing resource interface to the object|  \n|[CD2DBitmap::CopyFromBitmap](#cd2dbitmap__copyfrombitmap)|Copies the specified region from the specified bitmap into the current bitmap|  \n|[CD2DBitmap::CopyFromMemory](#cd2dbitmap__copyfrommemory)|Copies the specified region from memory into the current bitmap|  \n|[CD2DBitmap::CopyFromRenderTarget](#cd2dbitmap__copyfromrendertarget)|Copies the specified region from the specified render target into the current bitmap|  \n|[CD2DBitmap::Create](#cd2dbitmap__create)|Creates a CD2DBitmap. (Overrides [CD2DResource::Create](../../mfc/reference/cd2dresource-class.md#cd2dresource__create).)|  \n|[CD2DBitmap::Destroy](#cd2dbitmap__destroy)|Destroys a CD2DBitmap object. (Overrides [CD2DResource::Destroy](../../mfc/reference/cd2dresource-class.md#cd2dresource__destroy).)|  \n|[CD2DBitmap::Detach](#cd2dbitmap__detach)|Detaches resource interface from the object|  \n|[CD2DBitmap::Get](#cd2dbitmap__get)|Returns ID2D1Bitmap interface|  \n|[CD2DBitmap::GetDPI](#cd2dbitmap__getdpi)|Return the dots per inch (DPI) of the bitmap|  \n|[CD2DBitmap::GetPixelFormat](#cd2dbitmap__getpixelformat)|Retrieves the pixel format and alpha mode of the bitmap|  \n|[CD2DBitmap::GetPixelSize](#cd2dbitmap__getpixelsize)|Returns the size, in device-dependent units (pixels), of the bitmap|  \n|[CD2DBitmap::GetSize](#cd2dbitmap__getsize)|Returns the size, in device-independent pixels (DIPs), of the bitmap|  \n|[CD2DBitmap::IsValid](#cd2dbitmap__isvalid)|Checks resource validity (Overrides [CD2DResource::IsValid](../../mfc/reference/cd2dresource-class.md#cd2dresource__isvalid).)|  \n  \n### Protected Methods  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CD2DBitmap::CommonInit](#cd2dbitmap__commoninit)|Initializes the object|  \n  \n### Public Operators  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CD2DBitmap::operator ID2D1Bitmap*](#cd2dbitmap__operator_id2d1bitmap_star)|Returns ID2D1Bitmap interface|  \n  \n### Protected Data Members  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CD2DBitmap::m_bAutoDestroyHBMP](#cd2dbitmap__m_bautodestroyhbmp)|TRUE if m_hBmpSrc should be destroyed; otherwise FALSE.|  \n|[CD2DBitmap::m_hBmpSrc](#cd2dbitmap__m_hbmpsrc)|Source bitmap handle.|  \n|[CD2DBitmap::m_lpszType](#cd2dbitmap__m_lpsztype)|Resource type.|  \n|[CD2DBitmap::m_pBitmap](#cd2dbitmap__m_pbitmap)|Stores a pointer to an ID2D1Bitmap object.|  \n|[CD2DBitmap::m_sizeDest](#cd2dbitmap__m_sizedest)|Bitmap destination size.|  \n|[CD2DBitmap::m_strPath](#cd2dbitmap__m_strpath)|Botmap file path.|  \n|[CD2DBitmap::m_uiResID](#cd2dbitmap__m_uiresid)|Bitmap resource ID.|  \n  \n## Inheritance Hierarchy  \n [CObject](../../mfc/reference/cobject-class.md)  \n  \n [CD2DResource](../../mfc/reference/cd2dresource-class.md)  \n  \n [CD2DBitmap](../../mfc/reference/cd2dbitmap-class.md)  \n  \n## Requirements  \n **Header:** afxrendertarget.h  \n  \n##  <a name=\"cd2dbitmap___dtorcd2dbitmap\"></a>  CD2DBitmap::~CD2DBitmap  \n The destructor. Called when a D2D bitmap object is being destroyed.  \n  \n```  \nvirtual ~CD2DBitmap();\n```  \n  \n##  <a name=\"cd2dbitmap__attach\"></a>  CD2DBitmap::Attach  \n Attaches existing resource interface to the object  \n  \n```  \nvoid Attach(ID2D1Bitmap* pResource);\n```  \n  \n### Parameters  \n `pResource`  \n Existing resource interface. Cannot be NULL  \n  \n##  <a name=\"cd2dbitmap__cd2dbitmap\"></a>  CD2DBitmap::CD2DBitmap  \n Constructs a CD2DBitmap object from resource.  \n  \n```  \nCD2DBitmap(\n    CRenderTarget* pParentTarget,  \n    UINT uiResID,  \n    LPCTSTR lpszType = NULL,  \n    CD2DSizeU sizeDest = CD2DSizeU(0,  \n    0), \n    BOOL bAutoDestroy = TRUE);\n\n \nCD2DBitmap(\n    CRenderTarget* pParentTarget,  \n    LPCTSTR lpszPath,  \n    CD2DSizeU sizeDest = CD2DSizeU(0,  \n    0), \n    BOOL bAutoDestroy = TRUE);\n\n \nCD2DBitmap(\n    CRenderTarget* pParentTarget,  \n    HBITMAP hbmpSrc,  \n    CD2DSizeU sizeDest = CD2DSizeU(0,  \n    0), \n    BOOL bAutoDestroy = TRUE);\n\n \nCD2DBitmap(\n    CRenderTarget* pParentTarget,  \n    BOOL bAutoDestroy = TRUE);\n```  \n  \n### Parameters  \n `pParentTarget`  \n A pointer to the render target.  \n  \n `uiResID`  \n The resource ID number of the resource.  \n  \n `lpszType`  \n Pointer to a null-terminated string that contains the resource type.  \n  \n `sizeDest`  \n Destination size of the bitmap.  \n  \n `bAutoDestroy`  \n Indicates that the object will be destroyed by owner (pParentTarget).  \n  \n `lpszPath`  \n Pointer to a null-terminated string that contains the name of file.  \n  \n `hbmpSrc`  \n Handle to the bitmap.  \n  \n##  <a name=\"cd2dbitmap__commoninit\"></a>  CD2DBitmap::CommonInit  \n Initializes the object  \n  \n```  \nvoid CommonInit();\n```  \n  \n##  <a name=\"cd2dbitmap__copyfrombitmap\"></a>  CD2DBitmap::CopyFromBitmap  \n Copies the specified region from the specified bitmap into the current bitmap  \n  \n```  \nHRESULT CopyFromBitmap(\n    const CD2DBitmap* pBitmap,  \n    const CD2DPointU* destPoint = NULL,  \n    const CD2DRectU* srcRect = NULL);\n```  \n  \n### Parameters  \n `pBitmap`  \n The bitmap to copy from  \n  \n `destPoint`  \n In the current bitmap, the upper-left corner of the area to which the region specified by srcRect is copied  \n  \n `srcRect`  \n The area of bitmap to copy  \n  \n### Return Value  \n If the method succeeds, it returns S_OK. Otherwise, it returns an HRESULT error code.  \n  \n##  <a name=\"cd2dbitmap__copyfrommemory\"></a>  CD2DBitmap::CopyFromMemory  \n Copies the specified region from memory into the current bitmap  \n  \n```  \nHRESULT CopyFromMemory(\n    const void* srcData,  \n    UINT32 pitch,  \n    const CD2DRectU* destRect = NULL);\n```  \n  \n### Parameters  \n `srcData`  \n The data to copy  \n  \n `pitch`  \n The stride, or pitch, of the source bitmap stored in srcData. The stride is the byte count of a scanline (one row of pixels in memory). The stride can be computed from the following formula: pixel width * bytes per pixel + memory padding  \n  \n `destRect`  \n In the current bitmap, the upper-left corner of the area to which the region specified by srcRect is copied  \n  \n### Return Value  \n If the method succeeds, it returns S_OK. Otherwise, it returns an HRESULT error code.  \n  \n##  <a name=\"cd2dbitmap__copyfromrendertarget\"></a>  CD2DBitmap::CopyFromRenderTarget  \n Copies the specified region from the specified render target into the current bitmap  \n  \n```  \nHRESULT CopyFromRenderTarget(\n    const CRenderTarget* pRenderTarget,  \n    const CD2DPointU* destPoint = NULL,  \n    const CD2DRectU* srcRect = NULL);\n```  \n  \n### Parameters  \n `pRenderTarget`  \n The render target that contains the region to copy  \n  \n `destPoint`  \n In the current bitmap, the upper-left corner of the area to which the region specified by srcRect is copied  \n  \n `srcRect`  \n The area of renderTarget to copy  \n  \n### Return Value  \n If the method succeeds, it returns S_OK. Otherwise, it returns an HRESULT error code.  \n  \n##  <a name=\"cd2dbitmap__create\"></a>  CD2DBitmap::Create  \n Creates a CD2DBitmap.  \n  \n```  \nvirtual HRESULT Create(CRenderTarget* pRenderTarget);\n```  \n  \n### Parameters  \n `pRenderTarget`  \n A pointer to the render target.  \n  \n### Return Value  \n If the method succeeds, it returns S_OK. Otherwise, it returns an HRESULT error code.  \n  \n##  <a name=\"cd2dbitmap__destroy\"></a>  CD2DBitmap::Destroy  \n Destroys a CD2DBitmap object.  \n  \n```  \nvirtual void Destroy();\n```  \n  \n##  <a name=\"cd2dbitmap__detach\"></a>  CD2DBitmap::Detach  \n Detaches resource interface from the object  \n  \n```  \nID2D1Bitmap* Detach();\n```  \n  \n### Return Value  \n Pointer to detached resource interface.  \n  \n##  <a name=\"cd2dbitmap__get\"></a>  CD2DBitmap::Get  \n Returns ID2D1Bitmap interface  \n  \n```  \nID2D1Bitmap* Get();\n```  \n  \n### Return Value  \n Pointer to an ID2D1Bitmap interface or NULL if object is not initialized yet.  \n  \n##  <a name=\"cd2dbitmap__getdpi\"></a>  CD2DBitmap::GetDPI  \n Return the dots per inch (DPI) of the bitmap  \n  \n```  \nCD2DSizeF GetDPI() const;\n\n \n```  \n  \n### Return Value  \n The horizontal and vertical DPI of the bitmap.  \n  \n##  <a name=\"cd2dbitmap__getpixelformat\"></a>  CD2DBitmap::GetPixelFormat  \n Retrieves the pixel format and alpha mode of the bitmap  \n  \n```  \nD2D1_PIXEL_FORMAT GetPixelFormat() const;\n\n \n```  \n  \n### Return Value  \n The pixel format and alpha mode of the bitmap.  \n  \n##  <a name=\"cd2dbitmap__getpixelsize\"></a>  CD2DBitmap::GetPixelSize  \n Returns the size, in device-dependent units (pixels), of the bitmap  \n  \n```  \nCD2DSizeU GetPixelSize() const;\n\n \n```  \n  \n### Return Value  \n The size, in pixels, of the bitmap..  \n  \n##  <a name=\"cd2dbitmap__getsize\"></a>  CD2DBitmap::GetSize  \n Returns the size, in device-independent pixels (DIPs), of the bitmap  \n  \n```  \nCD2DSizeF GetSize() const;\n\n \n```  \n  \n### Return Value  \n The size, in DIPs, of the bitmap.  \n  \n##  <a name=\"cd2dbitmap__isvalid\"></a>  CD2DBitmap::IsValid  \n Checks resource validity  \n  \n```  \nvirtual BOOL IsValid() const;\n\n \n```  \n  \n### Return Value  \n TRUE if resource is valid; otherwise FALSE.  \n  \n##  <a name=\"cd2dbitmap__m_bautodestroyhbmp\"></a>  CD2DBitmap::m_bAutoDestroyHBMP  \n TRUE if m_hBmpSrc should be destroyed; otherwise FALSE.  \n  \n```  \nBOOL m_bAutoDestroyHBMP;  \n```  \n  \n##  <a name=\"cd2dbitmap__m_hbmpsrc\"></a>  CD2DBitmap::m_hBmpSrc  \n Source bitmap handle.  \n  \n```  \nHBITMAP m_hBmpSrc;  \n```  \n  \n##  <a name=\"cd2dbitmap__m_lpsztype\"></a>  CD2DBitmap::m_lpszType  \n Resource type.  \n  \n```  \nLPCTSTR m_lpszType;  \n```  \n  \n##  <a name=\"cd2dbitmap__m_pbitmap\"></a>  CD2DBitmap::m_pBitmap  \n Stores a pointer to an ID2D1Bitmap object.  \n  \n```  \nID2D1Bitmap* m_pBitmap;  \n```  \n  \n##  <a name=\"cd2dbitmap__m_sizedest\"></a>  CD2DBitmap::m_sizeDest  \n Bitmap destination size.  \n  \n```  \nCD2DSizeU m_sizeDest;  \n```  \n  \n##  <a name=\"cd2dbitmap__m_strpath\"></a>  CD2DBitmap::m_strPath  \n Botmap file path.  \n  \n```  \nCString m_strPath;  \n```  \n  \n##  <a name=\"cd2dbitmap__m_uiresid\"></a>  CD2DBitmap::m_uiResID  \n Bitmap resource ID.  \n  \n```  \nUINT m_uiResID;  \n```  \n  \n##  <a name=\"cd2dbitmap__operator_id2d1bitmap_star\"></a>  CD2DBitmap::operator ID2D1Bitmap*  \n Returns ID2D1Bitmap interface  \n  \n```  \noperator ID2D1Bitmap*();\n```   \n  \n### Return Value  \n Pointer to an ID2D1Bitmap interface or NULL if object is not initialized yet.  \n  \n## See Also  \n [Classes](../../mfc/reference/mfc-classes.md)\n"}