<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-04506c2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d8337eec3d8ad0351c69e7df4b10896dd419ddab</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\c-runtime-library\flag-directives.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6c9bf3b98bb32f615ec9a451aee3aab91d24b6c5</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2bdda26c43119023188a1860c815599541d2d5ae</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Flag Directives | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Flag Directives</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>In a format specification, the first optional field is <ph id="ph1">`flags`</ph>.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>A flag directive is a character that specifies output justification and output of signs, blanks, leading zeros, decimal points, and octal and hexadecimal prefixes.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>More than one flag directive may appear in a format specification, and flags can appear in any order.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Flag Characters</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Flag</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Meaning</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Default</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Left align the result within the given field width.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Right align.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Use a sign (+ or –) to prefix the output value if it is of a signed type.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Sign appears only for negative signed values (–).</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`width`</ph> is prefixed by <ph id="ph2">`0`</ph>, leading zeros are added until the minimum width is reached.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>If both <ph id="ph1">`0`</ph> and <ph id="ph2">`–`</ph> appear, the <ph id="ph3">`0`</ph> is ignored.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`0`</ph> is specified as an integer format (<ph id="ph2">`i`</ph>, <ph id="ph3">`u`</ph>, <ph id="ph4">`x`</ph>, <ph id="ph5">`X`</ph>, <ph id="ph6">`o`</ph>, <ph id="ph7">`d`</ph>) and a precision specification is also present—for example, <ph id="ph8">`%04.d`</ph>—the <ph id="ph9">`0`</ph> is ignored.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>No padding.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>blank (' ')</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Use a blank to prefix the output value if it is signed and positive.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The blank is ignored if both the blank and + flags appear.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>No blank appears.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>When it's used with the <ph id="ph1">`o`</ph>, <ph id="ph2">`x`</ph>, or <ph id="ph3">`X`</ph> format, the <ph id="ph4">`#`</ph> flag uses 0, 0x, or 0X, respectively, to prefix any nonzero output value.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>No blank appears.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>When it's used with the <ph id="ph1">`e`</ph>, <ph id="ph2">`E`</ph>, <ph id="ph3">`f`</ph>, <ph id="ph4">`a`</ph> or <ph id="ph5">`A`</ph> format, the <ph id="ph6">`#`</ph> flag forces the output value to contain a decimal point.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Decimal point appears only if digits follow it.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>When it's used with the <ph id="ph1">`g`</ph> or <ph id="ph2">`G`</ph> format, the <ph id="ph3">`#`</ph> flag forces the output value to contain a decimal point and prevents the truncation of trailing zeros.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Ignored when used with <ph id="ph1">`c`</ph>, <ph id="ph2">`d`</ph>, <ph id="ph3">`i`</ph>, <ph id="ph4">`u`</ph>, or <ph id="ph5">`s`</ph>.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Decimal point appears only if digits follow it.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Trailing zeros are truncated.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>printf, _printf_l, wprintf, _wprintf_l</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Format Specification Syntax: printf and wprintf Functions</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>printf Width Specification</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Precision Specification</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Size Specification</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>printf Type Field Characters</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>