{"nodes":[{"pos":[12,43],"content":"offsetof Macro | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"offsetof Macro | Microsoft Docs","pos":[0,31]}]},{"content":"offsetof Macro","pos":[881,895]},{"content":"Retrieves the offset of a member from the beginning of its parent structure.","pos":[896,972]},{"content":"Syntax","pos":[981,987]},{"content":"Parameters","pos":[1080,1090]},{"content":"structName","pos":[1095,1105]},{"content":"Name of the parent data structure.","pos":[1110,1144]},{"content":"Name of the member in the parent data structure for which to determine the offset.","pos":[1167,1249]},{"content":"Return Value","pos":[1258,1270]},{"content":"returns the offset in bytes of the specified member from the beginning of its parent data structure.","pos":[1285,1385]},{"content":"It is undefined for bit fields.","pos":[1386,1417]},{"content":"Remarks","pos":[1426,1433]},{"content":"The <ph id=\"ph1\">`offsetof`</ph> macro returns the offset in bytes of <ph id=\"ph2\">`memberName`</ph> from the beginning of the structure specified by <bpt id=\"p1\">*</bpt>structName<ept id=\"p1\">*</ept> as a value of type <ph id=\"ph3\">`size_t`</ph>.","pos":[1437,1592],"source":"The `offsetof` macro returns the offset in bytes of `memberName` from the beginning of the structure specified by *structName* as a value of type `size_t`."},{"content":"You can specify types with the <ph id=\"ph1\">`struct`</ph> keyword.","pos":[1593,1641],"source":" You can specify types with the `struct` keyword."},{"pos":[1649,1733],"content":"[!NOTE]\n `offsetof` is not a function and cannot be described using a C prototype.","leadings":["","> "],"nodes":[{"content":"is not a function and cannot be described using a C prototype.","pos":[20,82]}]},{"content":"Requirements","pos":[1742,1754]},{"content":"Routine","pos":[1761,1768]},{"content":"Required header","pos":[1769,1784]},{"content":"stddef.h&gt;","pos":[1842,1851],"source":"stddef.h>"},{"pos":[1859,1983],"content":"For additional compatibility information, see <bpt id=\"p1\">[</bpt>Compatibility<ept id=\"p1\">](../../c-runtime-library/compatibility.md)</ept> in the Introduction.","source":"For additional compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md) in the Introduction."},{"content":"Libraries","pos":[1992,2001]},{"pos":[2005,2097],"content":"All versions of the <bpt id=\"p1\">[</bpt>C run-time libraries<ept id=\"p1\">](../../c-runtime-library/crt-library-features.md)</ept>.","source":"All versions of the [C run-time libraries](../../c-runtime-library/crt-library-features.md)."},{"content":"See Also","pos":[2106,2114]},{"content":"Memory Allocation","pos":[2119,2136]}],"content":"---\ntitle: \"offsetof Macro | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\napilocation: \n  - \"msvcrt.dll\"\n  - \"msvcr80.dll\"\n  - \"msvcr90.dll\"\n  - \"msvcr100.dll\"\n  - \"msvcr100_clr0400.dll\"\n  - \"msvcr110.dll\"\n  - \"msvcr110_clr0400.dll\"\n  - \"msvcr120.dll\"\n  - \"msvcr120_clr0400.dll\"\n  - \"ucrtbase.dll\"\napitype: \"DLLExport\"\nf1_keywords: \n  - \"offsetof\"\ndev_langs: \n  - \"C++\"\n  - \"C\"\nhelpviewer_keywords: \n  - \"structure members, offset\"\n  - \"offsetof macro\"\nms.assetid: f3b4eb16-a882-4d38-afc9-eebd976a7352\ncaps.latest.revision: 10\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# offsetof Macro\nRetrieves the offset of a member from the beginning of its parent structure.  \n  \n## Syntax  \n  \n```  \n  \n      size_t offsetof(  \n   structName,  \n   memberName   \n);  \n```  \n  \n#### Parameters  \n *structName*  \n Name of the parent data structure.  \n  \n `memberName`  \n Name of the member in the parent data structure for which to determine the offset.  \n  \n## Return Value  \n `offsetof` returns the offset in bytes of the specified member from the beginning of its parent data structure. It is undefined for bit fields.  \n  \n## Remarks  \n The `offsetof` macro returns the offset in bytes of `memberName` from the beginning of the structure specified by *structName* as a value of type `size_t`. You can specify types with the `struct` keyword.  \n  \n> [!NOTE]\n>  `offsetof` is not a function and cannot be described using a C prototype.  \n  \n## Requirements  \n  \n|Routine|Required header|  \n|-------------|---------------------|  \n|`offsetof`|\\<stddef.h>|  \n  \n For additional compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md) in the Introduction.  \n  \n## Libraries  \n All versions of the [C run-time libraries](../../c-runtime-library/crt-library-features.md).  \n  \n## See Also  \n [Memory Allocation](../../c-runtime-library/memory-allocation.md)"}