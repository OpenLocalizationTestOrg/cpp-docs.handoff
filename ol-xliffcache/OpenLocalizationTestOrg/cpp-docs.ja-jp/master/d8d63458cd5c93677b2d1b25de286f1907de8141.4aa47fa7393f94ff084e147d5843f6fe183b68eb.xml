{"nodes":[{"pos":[12,41],"content":"CRBMap Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"CRBMap Class | Microsoft Docs","pos":[0,29]}]},{"content":"CRBMap Class","pos":[627,639]},{"content":"This class represents a mapping structure, using a Red-Black binary tree.","pos":[640,713]},{"content":"Syntax","pos":[722,728]},{"content":"Parameters","pos":[927,937]},{"content":"The key element type.","pos":[948,969]},{"content":"V","pos":[977,978]},{"content":"The value element type.","pos":[983,1006]},{"content":"The code used to copy or move key elements.","pos":[1026,1069]},{"content":"See <bpt id=\"p1\">[</bpt>CElementTraits Class<ept id=\"p1\">](../../atl/reference/celementtraits-class.md)</ept> for more details.","pos":[1070,1159],"source":" See [CElementTraits Class](../../atl/reference/celementtraits-class.md) for more details."},{"content":"The code used to copy or move value elements.","pos":[1179,1224]},{"content":"Members","pos":[1233,1240]},{"content":"Public Constructors","pos":[1250,1269]},{"content":"Name","pos":[1276,1280]},{"content":"Description","pos":[1281,1292]},{"content":"CRBMap::CRBMap","pos":[1331,1345]},{"content":"The constructor.","pos":[1364,1380]},{"content":"CRBMap::~CRBMap","pos":[1386,1401]},{"content":"The destructor.","pos":[1425,1440]},{"content":"Public Methods","pos":[1451,1465]},{"content":"Name","pos":[1472,1476]},{"content":"Description","pos":[1477,1488]},{"content":"CRBMap::Lookup","pos":[1527,1541]},{"pos":[1560,1626],"content":"Call this method to look up keys or values in the <ph id=\"ph1\">`CRBMap`</ph> object.","source":"Call this method to look up keys or values in the `CRBMap` object."},{"content":"CRBMap::RemoveKey","pos":[1632,1649]},{"pos":[1671,1749],"content":"Call this method to remove an element from the <ph id=\"ph1\">`CRBMap`</ph> object, given the key.","source":"Call this method to remove an element from the `CRBMap` object, given the key."},{"content":"CRBMap::SetAt","pos":[1755,1768]},{"content":"Call this method to insert an element pair into the map.","pos":[1786,1842]},{"content":"Remarks","pos":[1852,1859]},{"content":"provides support for a mapping array of any given type, managing an ordered array of key elements and their associated values.","pos":[1872,1998]},{"content":"Each key can have only one associated value.","pos":[1999,2043]},{"content":"Elements (consisting of a key and a value) are stored in a binary tree structure, using the <bpt id=\"p1\">[</bpt>CRBMap::SetAt<ept id=\"p1\">](#crbmap__setat)</ept> method.","pos":[2044,2175],"source":" Elements (consisting of a key and a value) are stored in a binary tree structure, using the [CRBMap::SetAt](#crbmap__setat) method."},{"content":"Elements can be removed using the <bpt id=\"p1\">[</bpt>CRBMap::RemoveKey<ept id=\"p1\">](#crbmap__removekey)</ept> method, which deletes the element with the given key value.","pos":[2176,2309],"source":" Elements can be removed using the [CRBMap::RemoveKey](#crbmap__removekey) method, which deletes the element with the given key value."},{"pos":[2316,2628],"content":"Traversing the tree is made possible with methods such as <bpt id=\"p1\">[</bpt>CRBTree::GetHeadPosition<ept id=\"p1\">](../../atl/reference/crbtree-class.md#crbtree__getheadposition)</ept>, <bpt id=\"p2\">[</bpt>CRBTree::GetNext<ept id=\"p2\">](../../atl/reference/crbtree-class.md#crbtree__getnext)</ept>, and <bpt id=\"p3\">[</bpt>CRBTree::GetNextValue<ept id=\"p3\">](../../atl/reference/crbtree-class.md#crbtree__getnextvalue)</ept>.","source":"Traversing the tree is made possible with methods such as [CRBTree::GetHeadPosition](../../atl/reference/crbtree-class.md#crbtree__getheadposition), [CRBTree::GetNext](../../atl/reference/crbtree-class.md#crbtree__getnext), and [CRBTree::GetNextValue](../../atl/reference/crbtree-class.md#crbtree__getnextvalue)."},{"pos":[2635,2760],"content":"The <ph id=\"ph1\">`KTraits`</ph> and <ph id=\"ph2\">`VTraits`</ph> parameters are traits classes that contain any supplemental code needed to copy or move elements.","source":"The `KTraits` and `VTraits` parameters are traits classes that contain any supplemental code needed to copy or move elements."},{"content":"is derived from <bpt id=\"p1\">[</bpt>CRBTree<ept id=\"p1\">](../../atl/reference/crbtree-class.md)</ept>, which implements a binary tree using the Red-Black algorithm.","pos":[2776,2902],"source":" is derived from [CRBTree](../../atl/reference/crbtree-class.md), which implements a binary tree using the Red-Black algorithm."},{"content":"<bpt id=\"p1\">[</bpt>CRBMultiMap<ept id=\"p1\">](../../atl/reference/crbmultimap-class.md)</ept> is a variation that allows multiple values for each key.","pos":[2903,3015],"source":"[CRBMultiMap](../../atl/reference/crbmultimap-class.md) is a variation that allows multiple values for each key."},{"content":"It too is derived from <ph id=\"ph1\">`CRBTree`</ph>, and so shares many features with <ph id=\"ph2\">`CRBMap`</ph>.","pos":[3016,3092],"source":" It too is derived from `CRBTree`, and so shares many features with `CRBMap`."},{"content":"An alternative to both <ph id=\"ph1\">`CRBMap`</ph> and <ph id=\"ph2\">`CRBMultiMap`</ph> is offered by the <bpt id=\"p1\">[</bpt>CAtlMap<ept id=\"p1\">](../../atl/reference/catlmap-class.md)</ept> class.","pos":[3099,3221],"source":"An alternative to both `CRBMap` and `CRBMultiMap` is offered by the [CAtlMap](../../atl/reference/catlmap-class.md) class."},{"content":"When only a small number of elements needs to be stored, consider using the <bpt id=\"p1\">[</bpt>CSimpleMap<ept id=\"p1\">](../../atl/reference/csimplemap-class.md)</ept> class instead.","pos":[3222,3366],"source":" When only a small number of elements needs to be stored, consider using the [CSimpleMap](../../atl/reference/csimplemap-class.md) class instead."},{"pos":[3373,3556],"content":"For a more complete discussion of the various collection classes and their features and performance characteristics, see <bpt id=\"p1\">[</bpt>ATL Collection Classes<ept id=\"p1\">](../../atl/atl-collection-classes.md)</ept>.","source":"For a more complete discussion of the various collection classes and their features and performance characteristics, see [ATL Collection Classes](../../atl/atl-collection-classes.md)."},{"content":"Inheritance Hierarchy","pos":[3565,3586]},{"content":"CRBTree","pos":[3591,3598]},{"content":"Requirements","pos":[3661,3673]},{"pos":[3677,3698],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> atlcoll.h","source":"**Header:** atlcoll.h"},{"pos":[3739,3753],"content":"CRBMap::CRBMap"},{"content":"The constructor.","pos":[3757,3773]},{"content":"Parameters","pos":[3847,3857]},{"content":"The block size.","pos":[3877,3892]},{"content":"Remarks","pos":[3902,3909]},{"content":"The <ph id=\"ph1\">`nBlockSize`</ph> parameter is a measure of the amount of memory allocated when a new element is required.","pos":[3913,4018],"source":"The `nBlockSize` parameter is a measure of the amount of memory allocated when a new element is required."},{"content":"Larger block sizes reduce calls to memory allocation routines, but use more resources.","pos":[4019,4105]},{"content":"The default will allocate space for 10 elements at a time.","pos":[4106,4164]},{"pos":[4171,4307],"content":"See the documentation for the base class <bpt id=\"p1\">[</bpt>CRBTree<ept id=\"p1\">](../../atl/reference/crbtree-class.md)</ept> for information on the other methods available.","source":"See the documentation for the base class [CRBTree](../../atl/reference/crbtree-class.md) for information on the other methods available."},{"content":"Example","pos":[4317,4324]},{"pos":[4339,4359],"content":"NVC_ATL_Utilities#81"},{"pos":[4453,4468],"content":"CRBMap::~CRBMap"},{"content":"The destructor.","pos":[4472,4487]},{"content":"Remarks","pos":[4529,4536]},{"content":"Frees any allocated resources.","pos":[4540,4570]},{"pos":[4577,4713],"content":"See the documentation for the base class <bpt id=\"p1\">[</bpt>CRBTree<ept id=\"p1\">](../../atl/reference/crbtree-class.md)</ept> for information on the other methods available.","source":"See the documentation for the base class [CRBTree](../../atl/reference/crbtree-class.md) for information on the other methods available."},{"pos":[4754,4768],"content":"CRBMap::Lookup"},{"pos":[4772,4838],"content":"Call this method to look up keys or values in the <ph id=\"ph1\">`CRBMap`</ph> object.","source":"Call this method to look up keys or values in the `CRBMap` object."},{"content":"Parameters","pos":[5036,5046]},{"content":"Specifies the key that identifies the element to be looked up.","pos":[5059,5121]},{"content":"value","pos":[5129,5134]},{"content":"Variable that receives the looked-up value.","pos":[5139,5182]},{"content":"Return Value","pos":[5192,5204]},{"content":"The first form of the method returns true if the key is found, otherwise false.","pos":[5208,5287]},{"content":"The second and third forms return a pointer to a <bpt id=\"p1\">[</bpt>CPair<ept id=\"p1\">](crbtree-class.md#crbtree__cpair_class)</ept>.","pos":[5288,5384],"source":" The second and third forms return a pointer to a [CPair](crbtree-class.md#crbtree__cpair_class)."},{"content":"Remarks","pos":[5394,5401]},{"pos":[5405,5541],"content":"See the documentation for the base class <bpt id=\"p1\">[</bpt>CRBTree<ept id=\"p1\">](../../atl/reference/crbtree-class.md)</ept> for information on the other methods available.","source":"See the documentation for the base class [CRBTree](../../atl/reference/crbtree-class.md) for information on the other methods available."},{"content":"Example","pos":[5551,5558]},{"pos":[5573,5593],"content":"NVC_ATL_Utilities#82"},{"pos":[5685,5702],"content":"CRBMap::RemoveKey"},{"pos":[5706,5784],"content":"Call this method to remove an element from the <ph id=\"ph1\">`CRBMap`</ph> object, given the key.","source":"Call this method to remove an element from the `CRBMap` object, given the key."},{"content":"Parameters","pos":[5849,5859]},{"content":"The key corresponding to the element pair you want to remove.","pos":[5872,5933]},{"content":"Return Value","pos":[5943,5955]},{"content":"Returns true if the key is found and removed, false on failure.","pos":[5959,6022]},{"content":"Remarks","pos":[6032,6039]},{"pos":[6043,6179],"content":"See the documentation for the base class <bpt id=\"p1\">[</bpt>CRBTree<ept id=\"p1\">](../../atl/reference/crbtree-class.md)</ept> for information on the other methods available.","source":"See the documentation for the base class [CRBTree](../../atl/reference/crbtree-class.md) for information on the other methods available."},{"content":"Example","pos":[6189,6196]},{"pos":[6211,6231],"content":"NVC_ATL_Utilities#83"},{"pos":[6319,6332],"content":"CRBMap::SetAt"},{"content":"Call this method to insert an element pair into the map.","pos":[6336,6392]},{"content":"Parameters","pos":[6485,6495]},{"content":"The key value to add to the <ph id=\"ph1\">`CRBMap`</ph> object.","pos":[6508,6552],"source":" The key value to add to the `CRBMap` object."},{"content":"value","pos":[6560,6565]},{"content":"The value to add to the <ph id=\"ph1\">`CRBMap`</ph> object.","pos":[6570,6610],"source":" The value to add to the `CRBMap` object."},{"content":"Return Value","pos":[6620,6632]},{"pos":[6636,6710],"content":"Returns the position of the key/value element pair in the <ph id=\"ph1\">`CRBMap`</ph> object.","source":"Returns the position of the key/value element pair in the `CRBMap` object."},{"content":"Remarks","pos":[6720,6727]},{"content":"replaces an existing element if a matching key is found.","pos":[6739,6795]},{"content":"If the key is not found, a new key/value pair is created.","pos":[6796,6853]},{"pos":[6860,6996],"content":"See the documentation for the base class <bpt id=\"p1\">[</bpt>CRBTree<ept id=\"p1\">](../../atl/reference/crbtree-class.md)</ept> for information on the other methods available.","source":"See the documentation for the base class [CRBTree](../../atl/reference/crbtree-class.md) for information on the other methods available."},{"content":"Example","pos":[7006,7013]},{"pos":[7028,7048],"content":"NVC_ATL_Utilities#84"},{"content":"See Also","pos":[7105,7113]},{"content":"CRBTree Class","pos":[7118,7131]},{"content":"CAtlMap Class","pos":[7176,7189]},{"content":"CRBMultiMap Class","pos":[7234,7251]},{"content":"Class Overview","pos":[7300,7314]}],"content":"---\ntitle: \"CRBMap Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"ATL.CRBMap\"\n  - \"CRBMap\"\n  - \"ATL::CRBMap\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"CRBMap class\"\nms.assetid: 658e94dc-e835-4356-aed1-1513e1f66969\ncaps.latest.revision: 18\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# CRBMap Class\nThis class represents a mapping structure, using a Red-Black binary tree.  \n  \n## Syntax  \n  \n```\ntemplate <typename   K,\n    typename V, class KTraits = CElementTraits<K>, class VTraits = CElementTraits<V>> class CRBMap : public CRBTree<K,\n    V,\n KTraits,\n    VTraits>\n```    \n  \n#### Parameters  \n `K`  \n The key element type.  \n  \n *V*  \n The value element type.  \n  \n `KTraits`  \n The code used to copy or move key elements. See [CElementTraits Class](../../atl/reference/celementtraits-class.md) for more details.  \n  \n `VTraits`  \n The code used to copy or move value elements.  \n  \n## Members  \n  \n### Public Constructors  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CRBMap::CRBMap](#crbmap__crbmap)|The constructor.|  \n|[CRBMap::~CRBMap](#crbmap___dtorcrbmap)|The destructor.|  \n  \n### Public Methods  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CRBMap::Lookup](#crbmap__lookup)|Call this method to look up keys or values in the `CRBMap` object.|  \n|[CRBMap::RemoveKey](#crbmap__removekey)|Call this method to remove an element from the `CRBMap` object, given the key.|  \n|[CRBMap::SetAt](#crbmap__setat)|Call this method to insert an element pair into the map.|  \n  \n## Remarks  \n `CRBMap` provides support for a mapping array of any given type, managing an ordered array of key elements and their associated values. Each key can have only one associated value. Elements (consisting of a key and a value) are stored in a binary tree structure, using the [CRBMap::SetAt](#crbmap__setat) method. Elements can be removed using the [CRBMap::RemoveKey](#crbmap__removekey) method, which deletes the element with the given key value.  \n  \n Traversing the tree is made possible with methods such as [CRBTree::GetHeadPosition](../../atl/reference/crbtree-class.md#crbtree__getheadposition), [CRBTree::GetNext](../../atl/reference/crbtree-class.md#crbtree__getnext), and [CRBTree::GetNextValue](../../atl/reference/crbtree-class.md#crbtree__getnextvalue).  \n  \n The `KTraits` and `VTraits` parameters are traits classes that contain any supplemental code needed to copy or move elements.  \n  \n `CRBMap` is derived from [CRBTree](../../atl/reference/crbtree-class.md), which implements a binary tree using the Red-Black algorithm. [CRBMultiMap](../../atl/reference/crbmultimap-class.md) is a variation that allows multiple values for each key. It too is derived from `CRBTree`, and so shares many features with `CRBMap`.  \n  \n An alternative to both `CRBMap` and `CRBMultiMap` is offered by the [CAtlMap](../../atl/reference/catlmap-class.md) class. When only a small number of elements needs to be stored, consider using the [CSimpleMap](../../atl/reference/csimplemap-class.md) class instead.  \n  \n For a more complete discussion of the various collection classes and their features and performance characteristics, see [ATL Collection Classes](../../atl/atl-collection-classes.md).  \n  \n## Inheritance Hierarchy  \n [CRBTree](../../atl/reference/crbtree-class.md)  \n  \n `CRBMap`  \n  \n## Requirements  \n **Header:** atlcoll.h  \n  \n##  <a name=\"crbmap__crbmap\"></a>  CRBMap::CRBMap  \n The constructor.  \n  \n```\nexplicit CRBMap(size_t   nBlockSize = 10) throw();\n```  \n  \n### Parameters  \n `nBlockSize`  \n The block size.  \n  \n### Remarks  \n The `nBlockSize` parameter is a measure of the amount of memory allocated when a new element is required. Larger block sizes reduce calls to memory allocation routines, but use more resources. The default will allocate space for 10 elements at a time.  \n  \n See the documentation for the base class [CRBTree](../../atl/reference/crbtree-class.md) for information on the other methods available.  \n  \n### Example  \n [!code-cpp[NVC_ATL_Utilities#81](../../atl/codesnippet/cpp/crbmap-class_1.cpp)]  \n  \n##  <a name=\"crbmap___dtorcrbmap\"></a>  CRBMap::~CRBMap  \n The destructor.  \n  \n```\n~CRBMap() throw();\n```  \n  \n### Remarks  \n Frees any allocated resources.  \n  \n See the documentation for the base class [CRBTree](../../atl/reference/crbtree-class.md) for information on the other methods available.  \n  \n##  <a name=\"crbmap__lookup\"></a>  CRBMap::Lookup  \n Call this method to look up keys or values in the `CRBMap` object.  \n  \n```\nbool Lookup(\n    KINARGTYPE key,\n    VOUTARGTYPE value) const throw(...);\n\nconst CPair* Lookup(\n    KINARGTYPE key) const throw();\nCPair* Lookup(\n    KINARGTYPE key) throw();\n```  \n  \n### Parameters  \n `key`  \n Specifies the key that identifies the element to be looked up.  \n  \n *value*  \n Variable that receives the looked-up value.  \n  \n### Return Value  \n The first form of the method returns true if the key is found, otherwise false. The second and third forms return a pointer to a [CPair](crbtree-class.md#crbtree__cpair_class).  \n  \n### Remarks  \n See the documentation for the base class [CRBTree](../../atl/reference/crbtree-class.md) for information on the other methods available.  \n  \n### Example  \n [!code-cpp[NVC_ATL_Utilities#82](../../atl/codesnippet/cpp/crbmap-class_2.cpp)]  \n  \n##  <a name=\"crbmap__removekey\"></a>  CRBMap::RemoveKey  \n Call this method to remove an element from the `CRBMap` object, given the key.  \n  \n```\nbool RemoveKey(KINARGTYPE   key) throw();\n```  \n  \n### Parameters  \n `key`  \n The key corresponding to the element pair you want to remove.  \n  \n### Return Value  \n Returns true if the key is found and removed, false on failure.  \n  \n### Remarks  \n See the documentation for the base class [CRBTree](../../atl/reference/crbtree-class.md) for information on the other methods available.  \n  \n### Example  \n [!code-cpp[NVC_ATL_Utilities#83](../../atl/codesnippet/cpp/crbmap-class_3.cpp)]  \n  \n##  <a name=\"crbmap__setat\"></a>  CRBMap::SetAt  \n Call this method to insert an element pair into the map.  \n  \n```\nPOSITION SetAt(\n    KINARGTYPE key,\n    VINARGTYPE value) throw(...);\n```  \n  \n### Parameters  \n `key`  \n The key value to add to the `CRBMap` object.  \n  \n *value*  \n The value to add to the `CRBMap` object.  \n  \n### Return Value  \n Returns the position of the key/value element pair in the `CRBMap` object.  \n  \n### Remarks  \n `SetAt` replaces an existing element if a matching key is found. If the key is not found, a new key/value pair is created.  \n  \n See the documentation for the base class [CRBTree](../../atl/reference/crbtree-class.md) for information on the other methods available.  \n  \n### Example  \n [!code-cpp[NVC_ATL_Utilities#84](../../atl/codesnippet/cpp/crbmap-class_4.cpp)]  \n  \n## See Also  \n [CRBTree Class](../../atl/reference/crbtree-class.md)   \n [CAtlMap Class](../../atl/reference/catlmap-class.md)   \n [CRBMultiMap Class](../../atl/reference/crbmultimap-class.md)   \n [Class Overview](../../atl/atl-class-overview.md)\n"}