{"nodes":[{"pos":[12,39],"content":"localeconv | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"localeconv | Microsoft Docs","pos":[0,27]}]},{"pos":[934,944],"content":"localeconv","linkify":"localeconv","nodes":[{"content":"localeconv","pos":[0,10]}]},{"content":"Gets detailed information on locale settings.","pos":[945,990]},{"pos":[999,1005],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[1068,1080],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"<ph id=\"ph1\">`localeconv`</ph> returns a pointer to a filled-in object of type <bpt id=\"p1\">[</bpt>struct lconv<ept id=\"p1\">](../../c-runtime-library/standard-types.md)</ept>.","pos":[1084,1203],"source":"`localeconv` returns a pointer to a filled-in object of type [struct lconv](../../c-runtime-library/standard-types.md)."},{"content":"The values contained in the object can be overwritten by subsequent calls to <ph id=\"ph1\">`localeconv`</ph> and do not directly modify the object.","pos":[1204,1332],"source":" The values contained in the object can be overwritten by subsequent calls to `localeconv` and do not directly modify the object."},{"content":"Calls to <bpt id=\"p1\">[</bpt>setlocale<ept id=\"p1\">](../../c-runtime-library/reference/setlocale-wsetlocale.md)</ept> with <ph id=\"ph1\">`category`</ph> values of <ph id=\"ph2\">`LC_ALL`</ph>, <ph id=\"ph3\">`LC_MONETARY`</ph>, or <ph id=\"ph4\">`LC_NUMERIC`</ph> overwrite the contents of the structure.","pos":[1333,1520],"source":" Calls to [setlocale](../../c-runtime-library/reference/setlocale-wsetlocale.md) with `category` values of `LC_ALL`, `LC_MONETARY`, or `LC_NUMERIC` overwrite the contents of the structure."},{"pos":[1529,1536],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The <ph id=\"ph1\">`localeconv`</ph> function gets detailed information about numeric formatting for the current locale.","pos":[1540,1640],"source":"The `localeconv` function gets detailed information about numeric formatting for the current locale."},{"content":"This information is stored in a structure of type <bpt id=\"p1\">**</bpt>lconv<ept id=\"p1\">**</ept>.","pos":[1641,1701],"source":" This information is stored in a structure of type **lconv**."},{"content":"The <bpt id=\"p1\">**</bpt>lconv<ept id=\"p1\">**</ept> structure, defined in LOCALE.H, contains the following members:","pos":[1702,1779],"source":" The **lconv** structure, defined in LOCALE.H, contains the following members:"},{"content":"Decimal-point character for nonmonetary quantities.","pos":[1838,1889]},{"content":"Character that separates groups of digits to left of decimal point for nonmonetary quantities.","pos":[1948,2042]},{"content":"Size of each group of digits in nonmonetary quantities.","pos":[2069,2124]},{"content":"International currency symbol for current locale.","pos":[2187,2236]},{"content":"First three characters specify alphabetic international currency symbol as defined in the <bpt id=\"p1\">*</bpt>ISO 4217 Codes for the Representation of Currency and Funds<ept id=\"p1\">*</ept> standard.","pos":[2237,2398],"source":" First three characters specify alphabetic international currency symbol as defined in the *ISO 4217 Codes for the Representation of Currency and Funds* standard."},{"content":"Fourth character (immediately preceding null character) separates international currency symbol from monetary quantity.","pos":[2399,2518]},{"content":"Local currency symbol for current locale.","pos":[2581,2622]},{"content":"Decimal-point character for monetary quantities.","pos":[2689,2737]},{"content":"Separator for groups of digits to left of decimal place in monetary quantities.","pos":[2804,2883]},{"content":"Size of each group of digits in monetary quantities.","pos":[2914,2966]},{"content":"String denoting sign for nonnegative monetary quantities.","pos":[3025,3082]},{"content":"String denoting sign for negative monetary quantities.","pos":[3141,3195]},{"content":"Number of digits to right of decimal point in internationally formatted monetary quantities.","pos":[3228,3320]},{"content":"Number of digits to right of decimal point in formatted monetary quantities.","pos":[3349,3425]},{"content":"Set to 1 if currency symbol precedes value for nonnegative formatted monetary quantity.","pos":[3456,3543]},{"content":"Set to 0 if symbol follows value.","pos":[3544,3577]},{"content":"Set to 1 if currency symbol is separated by space from value for nonnegative formatted monetary quantity.","pos":[3609,3714]},{"content":"Set to 0 if there is no space separation.","pos":[3715,3756]},{"content":"Set to 1 if currency symbol precedes value for negative formatted monetary quantity.","pos":[3787,3871]},{"content":"Set to 0 if symbol succeeds value.","pos":[3872,3906]},{"content":"Set to 1 if currency symbol is separated by space from value for negative formatted monetary quantity.","pos":[3938,4040]},{"content":"Set to 0 if there is no space separation.","pos":[4041,4082]},{"content":"Position of positive sign in nonnegative formatted monetary quantities.","pos":[4111,4182]},{"content":"Position of positive sign in negative formatted monetary quantities.","pos":[4211,4279]},{"content":"Members of the structure that have <ph id=\"ph1\">`char`</ph> <ph id=\"ph2\">`*`</ph> and <ph id=\"ph3\">`wchar_t *`</ph> versions are pointers to strings.","pos":[4286,4381],"source":"Members of the structure that have `char` `*` and `wchar_t *` versions are pointers to strings."},{"content":"Any of these that equals <ph id=\"ph1\">`\"\"`</ph> (or <ph id=\"ph2\">`L\"\"`</ph> for <ph id=\"ph3\">`wchar_t *`</ph>) is either of zero length or not supported in the current locale.","pos":[4382,4503],"source":" Any of these that equals `\"\"` (or `L\"\"` for `wchar_t *`) is either of zero length or not supported in the current locale."},{"content":"Note that <ph id=\"ph1\">`decimal_point`</ph> and <ph id=\"ph2\">`_W_decimal_point`</ph> are always supported and of nonzero length.","pos":[4504,4596],"source":" Note that `decimal_point` and `_W_decimal_point` are always supported and of nonzero length."},{"content":"The <ph id=\"ph1\">`char`</ph> members of the structure are small nonnegative numbers, not characters.","pos":[4603,4685],"source":"The `char` members of the structure are small nonnegative numbers, not characters."},{"content":"Any of these that equals <bpt id=\"p1\">**</bpt>CHAR_MAX<ept id=\"p1\">**</ept> is not supported in the current locale.","pos":[4686,4763],"source":" Any of these that equals **CHAR_MAX** is not supported in the current locale."},{"pos":[4770,4869],"content":"The elements of <bpt id=\"p1\">**</bpt>grouping<ept id=\"p1\">**</ept> and <bpt id=\"p2\">**</bpt>mon_grouping<ept id=\"p2\">**</ept> are interpreted according to the following rules.","source":"The elements of **grouping** and **mon_grouping** are interpreted according to the following rules."},{"content":"<bpt id=\"p1\">**</bpt>CHAR_MAX<ept id=\"p1\">**</ept>","pos":[4876,4888],"source":"**CHAR_MAX**"},{"content":"Do not perform any further grouping.","pos":[4892,4928]},{"content":"0","pos":[4935,4936]},{"content":"Use previous element for each of remaining digits.","pos":[4940,4990]},{"content":"<bpt id=\"p1\">*</bpt>n<ept id=\"p1\">*</ept>","pos":[4997,5000],"source":"*n*"},{"content":"Number of digits that make up current group.","pos":[5004,5048]},{"content":"Next element is examined to determine size of next group of digits before current group.","pos":[5049,5137]},{"pos":[5144,5228],"content":"The values for <bpt id=\"p1\">**</bpt>int_curr_symbol<ept id=\"p1\">**</ept> are interpreted according to the following rules:","source":"The values for **int_curr_symbol** are interpreted according to the following rules:"},{"pos":[5238,5407],"content":"The first three characters specify the alphabetic international currency symbol as defined in the <bpt id=\"p1\">*</bpt>ISO 4217 Codes for the Representation of Currency and Funds<ept id=\"p1\">*</ept> standard.","source":"The first three characters specify the alphabetic international currency symbol as defined in the *ISO 4217 Codes for the Representation of Currency and Funds* standard."},{"content":"The fourth character (immediately preceding the null character) separates the international currency symbol from the monetary quantity.","pos":[5417,5552]},{"pos":[5559,5710],"content":"The values for <bpt id=\"p1\">**</bpt>p_cs_precedes<ept id=\"p1\">**</ept> and <bpt id=\"p2\">**</bpt>n_cs_precedes<ept id=\"p2\">**</ept> are interpreted according to the following rules (the <bpt id=\"p3\">**</bpt>n_cs_precedes<ept id=\"p3\">**</ept> rule is in parentheses):","source":"The values for **p_cs_precedes** and **n_cs_precedes** are interpreted according to the following rules (the **n_cs_precedes** rule is in parentheses):"},{"pos":[5717,5804],"content":"0  \nCurrency symbol follows value for nonnegative (negative) formatted monetary value.","leadings":[""," "],"nodes":[{"content":"0","pos":[0,1]},{"content":"Currency symbol follows value for nonnegative (negative) formatted monetary value.","pos":[4,86]}]},{"pos":[5811,5899],"content":"1  \nCurrency symbol precedes value for nonnegative (negative) formatted monetary value.","leadings":[""," "],"nodes":[{"content":"1","pos":[0,1]},{"content":"Currency symbol precedes value for nonnegative (negative) formatted monetary value.","pos":[4,87]}]},{"pos":[5906,6060],"content":"The values for <bpt id=\"p1\">**</bpt>p_sep_by_space<ept id=\"p1\">**</ept> and <bpt id=\"p2\">**</bpt>n_sep_by_space<ept id=\"p2\">**</ept> are interpreted according to the following rules (the <bpt id=\"p3\">**</bpt>n_sep_by_space<ept id=\"p3\">**</ept> rule is in parentheses):","source":"The values for **p_sep_by_space** and **n_sep_by_space** are interpreted according to the following rules (the **n_sep_by_space** rule is in parentheses):"},{"pos":[6067,6173],"content":"0  \nCurrency symbol is separated from value by space for nonnegative (negative) formatted monetary value.","leadings":[""," "],"nodes":[{"content":"0","pos":[0,1]},{"content":"Currency symbol is separated from value by space for nonnegative (negative) formatted monetary value.","pos":[4,105]}]},{"pos":[6180,6300],"content":"1  \nThere is no space separation between currency symbol and value for nonnegative (negative) formatted monetary value.","leadings":[""," "],"nodes":[{"content":"1","pos":[0,1]},{"content":"There is no space separation between currency symbol and value for nonnegative (negative) formatted monetary value.","pos":[4,119]}]},{"pos":[6307,6407],"content":"The values for <bpt id=\"p1\">**</bpt>p_sign_posn<ept id=\"p1\">**</ept> and <bpt id=\"p2\">**</bpt>n_sign_posn<ept id=\"p2\">**</ept> are interpreted according to the following rules:","source":"The values for **p_sign_posn** and **n_sign_posn** are interpreted according to the following rules:"},{"pos":[6414,6469],"content":"0  \nParentheses surround quantity and currency symbol.","leadings":[""," "],"nodes":[{"content":"0","pos":[0,1]},{"content":"Parentheses surround quantity and currency symbol.","pos":[4,54]}]},{"pos":[6476,6531],"content":"1  \nSign string precedes quantity and currency symbol.","leadings":[""," "],"nodes":[{"content":"1","pos":[0,1]},{"content":"Sign string precedes quantity and currency symbol.","pos":[4,54]}]},{"pos":[6538,6592],"content":"2  \nSign string follows quantity and currency symbol.","leadings":[""," "],"nodes":[{"content":"2","pos":[0,1]},{"content":"Sign string follows quantity and currency symbol.","pos":[4,53]}]},{"pos":[6599,6653],"content":"3  \nSign string immediately precedes currency symbol.","leadings":[""," "],"nodes":[{"content":"3","pos":[0,1]},{"content":"Sign string immediately precedes currency symbol.","pos":[4,53]}]},{"pos":[6660,6713],"content":"4  \nSign string immediately follows currency symbol.","leadings":[""," "],"nodes":[{"content":"4","pos":[0,1]},{"content":"Sign string immediately follows currency symbol.","pos":[4,52]}]},{"pos":[6722,6734],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"content":"Routine","pos":[6741,6748]},{"content":"Required header","pos":[6749,6764]},{"content":"<ph id=\"ph1\">\\&lt;</ph>locale.h&gt;","pos":[6822,6833],"source":"\\<locale.h>"},{"pos":[6841,6965],"content":"For additional compatibility information, see <bpt id=\"p1\">[</bpt>Compatibility<ept id=\"p1\">](../../c-runtime-library/compatibility.md)</ept> in the Introduction.","source":"For additional compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md) in the Introduction."},{"pos":[6974,6983],"content":"Libraries","linkify":"Libraries","nodes":[{"content":"Libraries","pos":[0,9]}]},{"pos":[6987,7079],"content":"All versions of the <bpt id=\"p1\">[</bpt>C run-time libraries<ept id=\"p1\">](../../c-runtime-library/crt-library-features.md)</ept>.","source":"All versions of the [C run-time libraries](../../c-runtime-library/crt-library-features.md)."},{"pos":[7088,7096],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Locale<ept id=\"p1\">](../../c-runtime-library/locale.md)</ept><ph id=\"ph1\"> </ph>","pos":[7100,7144],"source":"[Locale](../../c-runtime-library/locale.md) "},{"content":"<bpt id=\"p1\"> [</bpt>setlocale<ept id=\"p1\">](../../preprocessor/setlocale.md)</ept><ph id=\"ph1\"> </ph>","pos":[7147,7193],"source":" [setlocale](../../preprocessor/setlocale.md) "},{"content":"<bpt id=\"p1\"> [</bpt>strcoll Functions<ept id=\"p1\">](../../c-runtime-library/strcoll-functions.md)</ept><ph id=\"ph1\"> </ph>","pos":[7196,7263],"source":" [strcoll Functions](../../c-runtime-library/strcoll-functions.md) "},{"content":"<bpt id=\"p1\"> [</bpt>strftime, wcsftime, _strftime_l, _wcsftime_l<ept id=\"p1\">](../../c-runtime-library/reference/strftime-wcsftime-strftime-l-wcsftime-l.md)</ept><ph id=\"ph1\"> </ph>","pos":[7266,7392],"source":" [strftime, wcsftime, _strftime_l, _wcsftime_l](../../c-runtime-library/reference/strftime-wcsftime-strftime-l-wcsftime-l.md) "},{"content":"<bpt id=\"p1\"> [</bpt>strxfrm, wcsxfrm, _strxfrm_l, _wcsxfrm_l<ept id=\"p1\">](../../c-runtime-library/reference/strxfrm-wcsxfrm-strxfrm-l-wcsxfrm-l.md)</ept>","pos":[7395,7512],"source":" [strxfrm, wcsxfrm, _strxfrm_l, _wcsxfrm_l](../../c-runtime-library/reference/strxfrm-wcsxfrm-strxfrm-l-wcsxfrm-l.md)"}],"content":"---\ntitle: \"localeconv | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\napiname: \n  - \"localeconv\"\napilocation: \n  - \"msvcrt.dll\"\n  - \"msvcr80.dll\"\n  - \"msvcr90.dll\"\n  - \"msvcr100.dll\"\n  - \"msvcr100_clr0400.dll\"\n  - \"msvcr110.dll\"\n  - \"msvcr110_clr0400.dll\"\n  - \"msvcr120.dll\"\n  - \"msvcr120_clr0400.dll\"\n  - \"ucrtbase.dll\"\napitype: \"DLLExport\"\nf1_keywords: \n  - \"localeconv\"\ndev_langs: \n  - \"C++\"\n  - \"C\"\nhelpviewer_keywords: \n  - \"lconv type\"\n  - \"localeconv function\"\n  - \"locales, getting information on\"\nms.assetid: 7ecdb1f2-88f5-4037-a0e7-c754ab003660\ncaps.latest.revision: 12\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# localeconv\nGets detailed information on locale settings.  \n  \n## Syntax  \n  \n```  \n  \nstruct lconv *localeconv( void );  \n```  \n  \n## Return Value  \n `localeconv` returns a pointer to a filled-in object of type [struct lconv](../../c-runtime-library/standard-types.md). The values contained in the object can be overwritten by subsequent calls to `localeconv` and do not directly modify the object. Calls to [setlocale](../../c-runtime-library/reference/setlocale-wsetlocale.md) with `category` values of `LC_ALL`, `LC_MONETARY`, or `LC_NUMERIC` overwrite the contents of the structure.  \n  \n## Remarks  \n The `localeconv` function gets detailed information about numeric formatting for the current locale. This information is stored in a structure of type **lconv**. The **lconv** structure, defined in LOCALE.H, contains the following members:  \n  \n `char *decimal_point, wchar_t *_W_decimal_point`  \n Decimal-point character for nonmonetary quantities.  \n  \n `char *thousands_sep, wchar_t *_W_thousands_sep`  \n Character that separates groups of digits to left of decimal point for nonmonetary quantities.  \n  \n `char *grouping`  \n Size of each group of digits in nonmonetary quantities.  \n  \n `char *int_curr_symbol, wchar_t *_W_int_curr_symbol`  \n International currency symbol for current locale. First three characters specify alphabetic international currency symbol as defined in the *ISO 4217 Codes for the Representation of Currency and Funds* standard. Fourth character (immediately preceding null character) separates international currency symbol from monetary quantity.  \n  \n `char *currency_symbol, wchar_t *_W_currency_symbol`  \n Local currency symbol for current locale.  \n  \n `char *mon_decimal_point, wchar_t *_W_mon_decimal_point`  \n Decimal-point character for monetary quantities.  \n  \n `char *mon_thousands_sep, wchar_t *_W_mon_thousands_sep`  \n Separator for groups of digits to left of decimal place in monetary quantities.  \n  \n `char *mon_grouping`  \n Size of each group of digits in monetary quantities.  \n  \n `char *positive_sign, wchar_t *_W_positive_sign`  \n String denoting sign for nonnegative monetary quantities.  \n  \n `char *negative_sign, wchar_t *_W_negative_sign`  \n String denoting sign for negative monetary quantities.  \n  \n `char int_frac_digits`  \n Number of digits to right of decimal point in internationally formatted monetary quantities.  \n  \n `char frac_digits`  \n Number of digits to right of decimal point in formatted monetary quantities.  \n  \n `char p_cs_precedes`  \n Set to 1 if currency symbol precedes value for nonnegative formatted monetary quantity. Set to 0 if symbol follows value.  \n  \n `char p_sep_by_space`  \n Set to 1 if currency symbol is separated by space from value for nonnegative formatted monetary quantity. Set to 0 if there is no space separation.  \n  \n `char n_cs_precedes`  \n Set to 1 if currency symbol precedes value for negative formatted monetary quantity. Set to 0 if symbol succeeds value.  \n  \n `char n_sep_by_space`  \n Set to 1 if currency symbol is separated by space from value for negative formatted monetary quantity. Set to 0 if there is no space separation.  \n  \n `char p_sign_posn`  \n Position of positive sign in nonnegative formatted monetary quantities.  \n  \n `char n_sign_posn`  \n Position of positive sign in negative formatted monetary quantities.  \n  \n Members of the structure that have `char` `*` and `wchar_t *` versions are pointers to strings. Any of these that equals `\"\"` (or `L\"\"` for `wchar_t *`) is either of zero length or not supported in the current locale. Note that `decimal_point` and `_W_decimal_point` are always supported and of nonzero length.  \n  \n The `char` members of the structure are small nonnegative numbers, not characters. Any of these that equals **CHAR_MAX** is not supported in the current locale.  \n  \n The elements of **grouping** and **mon_grouping** are interpreted according to the following rules.  \n  \n **CHAR_MAX**  \n Do not perform any further grouping.  \n  \n 0  \n Use previous element for each of remaining digits.  \n  \n *n*  \n Number of digits that make up current group. Next element is examined to determine size of next group of digits before current group.  \n  \n The values for **int_curr_symbol** are interpreted according to the following rules:  \n  \n-   The first three characters specify the alphabetic international currency symbol as defined in the *ISO 4217 Codes for the Representation of Currency and Funds* standard.  \n  \n-   The fourth character (immediately preceding the null character) separates the international currency symbol from the monetary quantity.  \n  \n The values for **p_cs_precedes** and **n_cs_precedes** are interpreted according to the following rules (the **n_cs_precedes** rule is in parentheses):  \n  \n 0  \n Currency symbol follows value for nonnegative (negative) formatted monetary value.  \n  \n 1  \n Currency symbol precedes value for nonnegative (negative) formatted monetary value.  \n  \n The values for **p_sep_by_space** and **n_sep_by_space** are interpreted according to the following rules (the **n_sep_by_space** rule is in parentheses):  \n  \n 0  \n Currency symbol is separated from value by space for nonnegative (negative) formatted monetary value.  \n  \n 1  \n There is no space separation between currency symbol and value for nonnegative (negative) formatted monetary value.  \n  \n The values for **p_sign_posn** and **n_sign_posn** are interpreted according to the following rules:  \n  \n 0  \n Parentheses surround quantity and currency symbol.  \n  \n 1  \n Sign string precedes quantity and currency symbol.  \n  \n 2  \n Sign string follows quantity and currency symbol.  \n  \n 3  \n Sign string immediately precedes currency symbol.  \n  \n 4  \n Sign string immediately follows currency symbol.  \n  \n## Requirements  \n  \n|Routine|Required header|  \n|-------------|---------------------|  \n|`localeconv`|\\<locale.h>|  \n  \n For additional compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md) in the Introduction.  \n  \n## Libraries  \n All versions of the [C run-time libraries](../../c-runtime-library/crt-library-features.md).  \n  \n## See Also  \n [Locale](../../c-runtime-library/locale.md)   \n [setlocale](../../preprocessor/setlocale.md)   \n [strcoll Functions](../../c-runtime-library/strcoll-functions.md)   \n [strftime, wcsftime, _strftime_l, _wcsftime_l](../../c-runtime-library/reference/strftime-wcsftime-strftime-l-wcsftime-l.md)   \n [strxfrm, wcsxfrm, _strxfrm_l, _wcsxfrm_l](../../c-runtime-library/reference/strxfrm-wcsxfrm-strxfrm-l-wcsxfrm-l.md)"}