{"nodes":[{"pos":[12,42],"content":"private (C++) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"private (C++) | Microsoft Docs","pos":[0,30]}]},{"content":"private (C++)","pos":[630,643]},{"content":"Syntax","pos":[647,653]},{"content":"Remarks","pos":[728,735]},{"content":"When preceding a list of class members, the <ph id=\"ph1\">`private`</ph> keyword specifies that those members are accessible only from member functions and friends of the class.","pos":[739,897],"source":"When preceding a list of class members, the `private` keyword specifies that those members are accessible only from member functions and friends of the class."},{"content":"This applies to all members declared up to the next access specifier or the end of the class.","pos":[898,991]},{"pos":[998,1168],"content":"When preceding the name of a base class, the <ph id=\"ph1\">`private`</ph> keyword specifies that the public and protected members of the base class are private members of the derived class.","source":"When preceding the name of a base class, the `private` keyword specifies that the public and protected members of the base class are private members of the derived class."},{"content":"Default access of members in a class is private.","pos":[1175,1223]},{"content":"Default access of members in a structure or union is public.","pos":[1224,1284]},{"content":"Default access of a base class is private for classes and public for structures.","pos":[1291,1371]},{"content":"Unions cannot have base classes.","pos":[1372,1404]},{"pos":[1411,1641],"content":"For related information, see <bpt id=\"p1\">[</bpt>friend<ept id=\"p1\">](../cpp/friend-cpp.md)</ept>, <bpt id=\"p2\">[</bpt>public<ept id=\"p2\">](../cpp/public-cpp.md)</ept>, <bpt id=\"p3\">[</bpt>protected<ept id=\"p3\">](../cpp/protected-cpp.md)</ept>, and the member-access table in <bpt id=\"p4\">[</bpt>Controlling Access to Class Members<ept id=\"p4\">](member-access-control-cpp.md)</ept>.","source":"For related information, see [friend](../cpp/friend-cpp.md), [public](../cpp/public-cpp.md), [protected](../cpp/protected-cpp.md), and the member-access table in [Controlling Access to Class Members](member-access-control-cpp.md)."},{"content":"/clr Specific","pos":[1650,1663]},{"content":"In CLR types, the C++ access specifier keywords (<bpt id=\"p1\">**</bpt>public<ept id=\"p1\">**</ept>, <ph id=\"ph1\">`private`</ph>, and <ph id=\"ph2\">`protected`</ph>) can affect the visibility of types and methods with regard to assemblies.","pos":[1667,1829],"source":"In CLR types, the C++ access specifier keywords (**public**, `private`, and `protected`) can affect the visibility of types and methods with regard to assemblies."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Member Access Control<ept id=\"p1\">](member-access-control-cpp.md)</ept>.","pos":[1830,1910],"source":" For more information, see [Member Access Control](member-access-control-cpp.md)."},{"pos":[1918,2112],"content":"[!NOTE]\n Files compiled with [/LN](../build/reference/ln-create-msil-module.md) are not affected by this behavior. In this case, all managed classes (either public or private) will be visible.","leadings":["","> "],"nodes":[{"content":" Files compiled with [/LN](../build/reference/ln-create-msil-module.md) are not affected by this behavior. In this case, all managed classes (either public or private) will be visible.","pos":[8,192],"nodes":[{"content":"Files compiled with <bpt id=\"p1\">[</bpt>/LN<ept id=\"p1\">](../build/reference/ln-create-msil-module.md)</ept> are not affected by this behavior.","pos":[1,106],"source":" Files compiled with [/LN](../build/reference/ln-create-msil-module.md) are not affected by this behavior."},{"content":"In this case, all managed classes (either public or private) will be visible.","pos":[107,184]}]}]},{"content":"END /clr Specific","pos":[2121,2138]},{"content":"Example","pos":[2147,2154]},{"content":"See Also","pos":[3092,3100]},{"content":"Controlling Access to Class Members","pos":[3105,3140]},{"content":"Keywords","pos":[3177,3185]}],"content":"---\ntitle: \"private (C++) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"language-reference\"\nf1_keywords: \n  - \"private_cpp\"\n  - \"private\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"private keyword [C++]\"\nms.assetid: 94e99983-46a5-4e21-800c-28f8a7c6a8ff\ncaps.latest.revision: 10\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# private (C++)\n## Syntax  \n  \n```  \nprivate:  \n   [member-list]  \nprivate base-class  \n```  \n  \n## Remarks  \n When preceding a list of class members, the `private` keyword specifies that those members are accessible only from member functions and friends of the class. This applies to all members declared up to the next access specifier or the end of the class.  \n  \n When preceding the name of a base class, the `private` keyword specifies that the public and protected members of the base class are private members of the derived class.  \n  \n Default access of members in a class is private. Default access of members in a structure or union is public.  \n  \n Default access of a base class is private for classes and public for structures. Unions cannot have base classes.  \n  \n For related information, see [friend](../cpp/friend-cpp.md), [public](../cpp/public-cpp.md), [protected](../cpp/protected-cpp.md), and the member-access table in [Controlling Access to Class Members](member-access-control-cpp.md).  \n  \n## /clr Specific  \n In CLR types, the C++ access specifier keywords (**public**, `private`, and `protected`) can affect the visibility of types and methods with regard to assemblies. For more information, see [Member Access Control](member-access-control-cpp.md).  \n  \n> [!NOTE]\n>  Files compiled with [/LN](../build/reference/ln-create-msil-module.md) are not affected by this behavior. In this case, all managed classes (either public or private) will be visible.  \n  \n## END /clr Specific  \n  \n## Example  \n  \n```  \n// keyword_private.cpp  \nclass BaseClass {  \npublic:  \n   // privMem accessible from member function  \n   int pubFunc() { return privMem; }  \nprivate:  \n   void privMem;  \n};  \n  \nclass DerivedClass : public BaseClass {  \npublic:  \n   void usePrivate( int i )  \n      { privMem = i; }   // C2248: privMem not accessible  \n                         // from derived class  \n};  \n  \nclass DerivedClass2 : private BaseClass {  \npublic:  \n   // pubFunc() accessible from derived class  \n   int usePublic() { return pubFunc(); }  \n};  \n  \nint main() {  \n   BaseClass aBase;  \n   DerivedClass aDerived;  \n   DerivedClass2 aDerived2;  \n   aBase.privMem = 1;     // C2248: privMem not accessible  \n   aDerived.privMem = 1;  // C2248: privMem not accessible  \n                          //    in derived class  \n   aDerived2.pubFunc();   // C2247: pubFunc() is private in  \n                          //    derived class  \n}  \n```  \n  \n## See Also  \n [Controlling Access to Class Members](member-access-control-cpp.md)   \n [Keywords](../cpp/keywords-cpp.md)"}