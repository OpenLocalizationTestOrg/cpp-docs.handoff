<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-04506c2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4b97f2a8c144d2e3ff20b7c2bc746fe5c3944eaf</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\atl\adding-a-property-page-atl-tutorial-part-6.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">26e1d4dd2d25ee76c727bf88857edb56f17e3247</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">900e427c0bc568e73905e02af875dce61737356d</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Adding a Property Page (ATL Tutorial, Part 6) | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Adding a Property Page (ATL Tutorial, Part 6)</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Property pages are implemented as separate COM objects, which allow them to be shared if required.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>In this step, you will do the following tasks to add a property page to the control:</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Creating the Property Page Resource</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Adding Code to Create and Manage the Property Page</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Adding the Property Page to the Control</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Creating the Property Page Resource</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>To add a property page to your control, use the ATL Add Class Wizard.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>To add a Property Page</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>In Solution Explorer, right-click Polygon.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>On the shortcut menu, click <bpt id="p1">**</bpt>Add<ept id="p1">**</ept>, and then click <bpt id="p2">**</bpt>Add Class<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>From the list of templates, select <bpt id="p1">**</bpt>ATL Property Page<ept id="p1">**</ept> and click <bpt id="p2">**</bpt>Add<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>When the ATL Property Page Wizard appears, enter <ph id="ph1">`PolyProp`</ph> as the <bpt id="p1">**</bpt>Short<ept id="p1">**</ept> name.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Click <bpt id="p1">**</bpt>Strings<ept id="p1">**</ept> to open the <bpt id="p2">**</bpt>Strings<ept id="p2">**</ept> page and enter <bpt id="p3">**</bpt>&amp;Polygon<ept id="p3">**</ept> as the <bpt id="p4">**</bpt>Title<ept id="p4">**</ept>.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Title<ept id="p1">**</ept> of the property page is the string that appears in the tab for that page.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Doc string<ept id="p1">**</ept> is a description that a property frame uses to put in a status line or tool tip.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Note that the standard property frame currently does not use this string, so you can leave it with the default contents.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>You will not generate a <bpt id="p1">**</bpt>Help file<ept id="p1">**</ept> at the moment, so delete the entry in that text box.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Click <bpt id="p1">**</bpt>Finish<ept id="p1">**</ept>, and the property page object will be created.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The following three files are created:</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>File</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>PolyProp.h</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Contains the C++ class <ph id="ph1">`CPolyProp`</ph>, which implements the property page.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>PolyProp.cpp</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Includes the PolyProp.h file.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>PolyProp.rgs</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The registry script that registers the property page object.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The following code changes are also made:</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The new property page is added to the object entry map in Polygon.cpp.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`PolyProp`</ph> class is added to the Polygon.idl file.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The new registry script file PolyProp.rgs is added to the project resource.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>A dialog box template is added to the project resource for the property page.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The property strings that you specified are added to the resource string table.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Now add the fields that you want to appear on the property page.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>To add fields to the Property Page</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>In Solution Explorer, double-click the Polygon.rc resource file.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>This will open Resource View.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>In Resource View, expand the Dialog node and double-click IDD_POLYPROP.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Note that the dialog box that appears is empty except for a label that tells you to insert your controls here.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Select that label and change it to read <ph id="ph1">`Sides:`</ph> by altering the <bpt id="p1">**</bpt>Caption<ept id="p1">**</ept> text in the <bpt id="p2">**</bpt>Properties<ept id="p2">**</ept> window.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Resize the label box so that it fits the size of the text.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Drag an Edit control from the Toolbox to the right of the label.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Finally, change the <bpt id="p1">**</bpt>ID<ept id="p1">**</ept> of the Edit control to <ph id="ph1">`IDC_SIDES`</ph> using the Properties window.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>This completes the process of creating the property page resource.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Adding Code to Create and Manage the Property Page</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Now that you have created the property page resource, you need to write the implementation code.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>First, enable the <ph id="ph1">`CPolyProp`</ph> class to set the number of sides in your object when the <bpt id="p1">**</bpt>Apply<ept id="p1">**</ept> button is pressed.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>To modify the Apply function to set the number of sides</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Replace the <ph id="ph1">`Apply`</ph> function in PolyProp.h with the following code:</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>NVC_ATL_Windowing#58</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>A property page can have more than one client attached to it at a time, so the <ph id="ph1">`Apply`</ph> function loops around and calls <ph id="ph2">`put_Sides`</ph> on each client with the value retrieved from the edit box.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>You are using the <bpt id="p1">[</bpt>CComQIPtr<ept id="p1">](../atl/reference/ccomqiptr-class.md)</ept> class, which performs the <ph id="ph1">`QueryInterface`</ph> on each object to obtain the <ph id="ph2">`IPolyCtl`</ph> interface from the <bpt id="p2">**</bpt>IUnknown<ept id="p2">**</ept> interface (stored in the <ph id="ph3">`m_ppUnk`</ph> array).</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The code now checks that setting the <ph id="ph1">`Sides`</ph> property actually worked.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>If it fails, the code displays a message box displaying error details from the <bpt id="p1">**</bpt>IErrorInfo<ept id="p1">**</ept> interface.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Typically, a container asks an object for the <bpt id="p1">**</bpt>ISupportErrorInfo<ept id="p1">**</ept> interface and calls <ph id="ph1">`InterfaceSupportsErrorInfo`</ph> first, to determine whether the object supports setting error information.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>You can skip this task.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CComPtr<ept id="p1">](../atl/reference/ccomptr-class.md)</ept> helps you by automatically handling the reference counting, so you do not need to call <ph id="ph1">`Release`</ph> on the interface.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>helps you with <ph id="ph1">`BSTR`</ph> processing, so you do not have to perform the final <ph id="ph2">`SysFreeString`</ph> call.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>You also use one of the various string conversion classes, so you can convert the <ph id="ph1">`BSTR`</ph> if necessary (this is why the <ph id="ph2">`USES_CONVERSION`</ph> macro is at the start of the function).</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>You also need to set the property page's dirty flag to indicate that the <bpt id="p1">**</bpt>Apply<ept id="p1">**</ept> button should be enabled.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>This occurs when the user changes the value in the <bpt id="p1">**</bpt>Sides<ept id="p1">**</ept> edit box.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>To handle the Apply button</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>In Class View, right-click CPolyProp and click <bpt id="p1">**</bpt>Properties<ept id="p1">**</ept> on the shortcut menu.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>In the Properties window, click the <bpt id="p1">**</bpt>Events<ept id="p1">**</ept> icon.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Expand the <ph id="ph1">`IDC_SIDES`</ph> node in the event list.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Select <ph id="ph1">`EN_CHANGE`</ph>, and from the drop-down menu to the right, click <bpt id="p1">**</bpt><ph id="ph2">\&lt;</ph>Add&gt; OnEnChangeSides<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`OnEnChangeSides`</ph> handler declaration will be added to Polyprop.h, and the handler implementation to Polyprop.cpp.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Next, you will modify the handler.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>To modify the OnEnChangeSides method</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Add the following code in Polyprop.cpp to the <ph id="ph1">`OnEnChangeSides`</ph> method (deleting any code that the wizard put there):</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>NVC_ATL_Windowing#59</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>will be called when a <bpt id="p1">**</bpt>WM_COMMAND<ept id="p1">**</ept> message is sent with the <bpt id="p2">**</bpt>EN_CHANGE<ept id="p2">**</ept> notification for the <ph id="ph1">`IDC_SIDES`</ph> control.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>then calls <ph id="ph1">`SetDirty`</ph> and passes <ph id="ph2">`TRUE`</ph> to indicate the property page is now dirty and the <bpt id="p1">**</bpt>Apply<ept id="p1">**</ept> button should be enabled.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Adding the Property Page to the Control</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>The ATL Add Class Wizard and the ATL Property Page Wizard do not add the property page to your control for you automatically, because there could be multiple controls in your project.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>You will need to add an entry to the control's property map.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>To add the property page</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Open PolyCtl.h and add this line to the property map:</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>NVC_ATL_Windowing#60</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>The control's property map now looks like this:</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>NVC_ATL_Windowing#61</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>You could have added a <ph id="ph1">`PROP_PAGE`</ph> macro with the CLSID of your property page, but if you use the <ph id="ph2">`PROP_ENTRY`</ph> macro as shown, the <ph id="ph3">`Sides`</ph> property value is also saved when the control is saved.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The three parameters to the macro are the property description, the DISPID of the property, and the CLSID of the property page that has the property on it.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>This is useful if, for example, you load the control into Visual Basic and set the number of Sides at design time.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Because the number of Sides is saved, when you reload your Visual Basic project, the number of Sides will be restored.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Building and Testing the Control</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Now build that control and insert it into ActiveX Control Test Container.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>In Test Container, on the <bpt id="p1">**</bpt>Edit<ept id="p1">**</ept> menu, click <bpt id="p2">**</bpt>PolyCtl Class Object<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>The property page appears; click the <bpt id="p1">**</bpt>Polygon<ept id="p1">**</ept> tab.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Apply<ept id="p1">**</ept> button is initially disabled.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Start typing a value in the <bpt id="p1">**</bpt>Sides<ept id="p1">**</ept> box and the <bpt id="p2">**</bpt>Apply<ept id="p2">**</ept> button will become enabled.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>After you have finished entering the value, click the <bpt id="p1">**</bpt>Apply<ept id="p1">**</ept> button.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>The control display changes, and the <bpt id="p1">**</bpt>Apply<ept id="p1">**</ept> button is again disabled.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Try entering an invalid value.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>You will see a message box containing the error description that you set from the <ph id="ph1">`put_Sides`</ph> function.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Next, you will put your control on a Web page.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Back to Step 5<ept id="p1">](../atl/adding-an-event-atl-tutorial-part-5.md)</ept> &amp;#124; <bpt id="p2">[</bpt>On to Step 7<ept id="p2">](../atl/putting-the-control-on-a-web-page-atl-tutorial-part-7.md)</ept></source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Tutorial</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>