{"nodes":[{"pos":[12,63],"content":"strstr, wcsstr, _mbsstr, _mbsstr_l | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"strstr, wcsstr, _mbsstr, _mbsstr_l | Microsoft Docs","pos":[0,51]}]},{"content":"strstr, wcsstr, _mbsstr, _mbsstr_l","pos":[1359,1393]},{"content":"Returns a pointer to the first occurrence of a search string in a string.","pos":[1394,1467]},{"pos":[1475,1752],"content":"[!IMPORTANT]\n `_mbsstr` and `_mbsstr_l` cannot be used in applications that execute in the [!INCLUDE[wrt](../../atl/reference/includes/wrt_md.md)]. For more information, see [CRT functions not supported with /ZW](http://msdn.microsoft.com/library/windows/apps/jj606124.aspx).","leadings":["","> "],"nodes":[{"content":" and `_mbsstr_l` cannot be used in applications that execute in the [!INCLUDE[wrt](../../atl/reference/includes/wrt_md.md)]. For more information, see [CRT functions not supported with /ZW](http://msdn.microsoft.com/library/windows/apps/jj606124.aspx).","pos":[23,275],"nodes":[{"content":"and <ph id=\"ph1\">`_mbsstr_l`</ph> cannot be used in applications that execute in the <ph id=\"ph2\">[!INCLUDE[wrt](../../atl/reference/includes/wrt_md.md)]</ph>.","pos":[1,124],"source":" and `_mbsstr_l` cannot be used in applications that execute in the [!INCLUDE[wrt](../../atl/reference/includes/wrt_md.md)]."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>CRT functions not supported with /ZW<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/apps/jj606124.aspx)</ept>.","pos":[125,252],"source":" For more information, see [CRT functions not supported with /ZW](http://msdn.microsoft.com/library/windows/apps/jj606124.aspx)."}]}]},{"content":"Syntax","pos":[1761,1767]},{"content":"Parameters","pos":[3048,3058]},{"content":"Null-terminated string to search.","pos":[3071,3104]},{"content":"Null-terminated string to search for.","pos":[3126,3163]},{"content":"Locale to use.","pos":[3182,3196]},{"content":"Return Value","pos":[3205,3217]},{"content":"Returns a pointer to the first occurrence of <ph id=\"ph1\">`strSearch`</ph> in <ph id=\"ph2\">`str`</ph>, or <ph id=\"ph3\">`NULL`</ph> if <ph id=\"ph4\">`strSearch`</ph> does not appear in <ph id=\"ph5\">`str`</ph>.","pos":[3221,3338],"source":"Returns a pointer to the first occurrence of `strSearch` in `str`, or `NULL` if `strSearch` does not appear in `str`."},{"content":"If <ph id=\"ph1\">`strSearch`</ph> points to a string of zero length, the function returns <ph id=\"ph2\">`str`</ph>.","pos":[3339,3416],"source":" If `strSearch` points to a string of zero length, the function returns `str`."},{"content":"Remarks","pos":[3425,3432]},{"content":"The <ph id=\"ph1\">`strstr`</ph> function returns a pointer to the first occurrence of <ph id=\"ph2\">`strSearch`</ph> in <ph id=\"ph3\">`str`</ph>.","pos":[3436,3524],"source":"The `strstr` function returns a pointer to the first occurrence of `strSearch` in `str`."},{"content":"The search does not include terminating null characters.","pos":[3525,3581]},{"content":"is the wide-character version of <ph id=\"ph1\">`strstr`</ph> and <ph id=\"ph2\">`_mbsstr`</ph> is the multibyte-character version.","pos":[3591,3682],"source":" is the wide-character version of `strstr` and `_mbsstr` is the multibyte-character version."},{"content":"The arguments and return value of <ph id=\"ph1\">`wcsstr`</ph> are wide-character strings; those of <ph id=\"ph2\">`_mbsstr`</ph> are multibyte-character strings.","pos":[3683,3805],"source":" The arguments and return value of `wcsstr` are wide-character strings; those of `_mbsstr` are multibyte-character strings."},{"content":"validates its parameters.","pos":[3816,3841]},{"content":"If <ph id=\"ph1\">`str`</ph> or <ph id=\"ph2\">`strSearch`</ph> is <ph id=\"ph3\">`NULL`</ph>, the invalid parameter handler is invoked, as described in <bpt id=\"p1\">[</bpt>Parameter Validation<ept id=\"p1\">](../../c-runtime-library/parameter-validation.md)</ept> .","pos":[3842,4008],"source":" If `str` or `strSearch` is `NULL`, the invalid parameter handler is invoked, as described in [Parameter Validation](../../c-runtime-library/parameter-validation.md) ."},{"content":"If execution is allowed to continue, <ph id=\"ph1\">`_mbsstr`</ph> sets <ph id=\"ph2\">`errno`</ph> to <ph id=\"ph3\">`EINVAL`</ph> and returns 0.","pos":[4009,4095],"source":" If execution is allowed to continue, `_mbsstr` sets `errno` to `EINVAL` and returns 0."},{"content":"and <ph id=\"ph1\">`wcsstr`</ph> do not validate their parameters.","pos":[4105,4151],"source":" and `wcsstr` do not validate their parameters."},{"content":"These three functions behave identically otherwise.","pos":[4152,4203]},{"pos":[4211,4574],"content":"[!IMPORTANT]\n These functions might incur a threat from a buffer overrun problem. Buffer overrun problems can be used to attack a system because they can allow the execution of arbitrary code, which can cause an unwarranted elevation of privilege. For more information, see [Avoiding Buffer Overruns](http://msdn.microsoft.com/library/windows/desktop/ms717795).","leadings":["","> "],"nodes":[{"content":" These functions might incur a threat from a buffer overrun problem. Buffer overrun problems can be used to attack a system because they can allow the execution of arbitrary code, which can cause an unwarranted elevation of privilege. For more information, see [Avoiding Buffer Overruns](http://msdn.microsoft.com/library/windows/desktop/ms717795).","pos":[13,361],"nodes":[{"content":"These functions might incur a threat from a buffer overrun problem.","pos":[1,68]},{"content":"Buffer overrun problems can be used to attack a system because they can allow the execution of arbitrary code, which can cause an unwarranted elevation of privilege.","pos":[69,234]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Avoiding Buffer Overruns<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms717795)</ept>.","pos":[235,348],"source":" For more information, see [Avoiding Buffer Overruns](http://msdn.microsoft.com/library/windows/desktop/ms717795)."}]}]},{"content":"In C, these functions take a <ph id=\"ph1\">`const`</ph> pointer for the first argument.","pos":[4581,4649],"source":"In C, these functions take a `const` pointer for the first argument."},{"content":"In C++, two overloads are available.","pos":[4650,4686]},{"content":"The overload that takes a pointer to <ph id=\"ph1\">`const`</ph> returns a pointer to <ph id=\"ph2\">`const`</ph>; the version that takes a pointer to non-<ph id=\"ph3\">`const`</ph> returns a pointer to non-<ph id=\"ph4\">`const`</ph>.","pos":[4687,4843],"source":" The overload that takes a pointer to `const` returns a pointer to `const`; the version that takes a pointer to non-`const` returns a pointer to non-`const`."},{"content":"The macro _CONST_CORRECT_OVERLOADS is defined if both the <ph id=\"ph1\">`const`</ph> and non-<ph id=\"ph2\">`const`</ph> versions of these functions are available.","pos":[4844,4968],"source":" The macro _CONST_CORRECT_OVERLOADS is defined if both the `const` and non-`const` versions of these functions are available."},{"content":"If you require the non-<ph id=\"ph1\">`const`</ph> behavior for both C++ overloads, define the symbol _CONST_RETURN.","pos":[4969,5065],"source":" If you require the non-`const` behavior for both C++ overloads, define the symbol _CONST_RETURN."},{"content":"The output value is affected by the locale-category setting of <ph id=\"ph1\">`LC_CTYPE`</ph>; for more information, see <bpt id=\"p1\">[</bpt>setlocale, _wsetlocale<ept id=\"p1\">](../../c-runtime-library/reference/setlocale-wsetlocale.md)</ept>.","pos":[5072,5257],"source":"The output value is affected by the locale-category setting of `LC_CTYPE`; for more information, see [setlocale, _wsetlocale](../../c-runtime-library/reference/setlocale-wsetlocale.md)."},{"content":"The versions of these functions that do not have the <ph id=\"ph1\">`_l`</ph> suffix use the current locale for this locale-dependent behavior; the versions that have the <ph id=\"ph2\">`_l`</ph> suffix are identical except that they instead use the locale parameter that's passed in.","pos":[5258,5502],"source":" The versions of these functions that do not have the `_l` suffix use the current locale for this locale-dependent behavior; the versions that have the `_l` suffix are identical except that they instead use the locale parameter that's passed in."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Locale<ept id=\"p1\">](../../c-runtime-library/locale.md)</ept>.","pos":[5503,5573],"source":" For more information, see [Locale](../../c-runtime-library/locale.md)."},{"content":"Generic-Text Routine Mappings","pos":[5583,5612]},{"content":"TCHAR.H routine","pos":[5619,5634]},{"content":"_UNICODE &amp; _MBCS not defined","pos":[5635,5663],"source":"_UNICODE & _MBCS not defined"},{"content":"_MBCS defined","pos":[5664,5677]},{"content":"_UNICODE defined","pos":[5678,5694]},{"content":"n/a","pos":[5851,5854]},{"content":"n/a","pos":[5859,5862]},{"content":"n/a","pos":[5879,5882]},{"content":"Requirements","pos":[5894,5906]},{"content":"Routine","pos":[5913,5920]},{"content":"Required header","pos":[5921,5936]},{"content":"string.h&gt;","pos":[5992,6001],"source":"string.h>"},{"content":"string.h&gt; or <ph id=\"ph1\">\\&lt;</ph>wchar.h&gt;","pos":[6017,6040],"source":"string.h> or \\<wchar.h>"},{"pos":[6054,6055],"content":","},{"content":"mbstring.h&gt;","pos":[6070,6081],"source":"mbstring.h>"},{"pos":[6089,6193],"content":"For more information about compatibility, see <bpt id=\"p1\">[</bpt>Compatibility<ept id=\"p1\">](../../c-runtime-library/compatibility.md)</ept>.","source":"For more information about compatibility, see [Compatibility](../../c-runtime-library/compatibility.md)."},{"content":"Example","pos":[6202,6209]},{"content":".NET Framework Equivalent","pos":[7167,7192]},{"content":"System::String::IndexOf","pos":[7197,7220]},{"content":"See Also","pos":[7299,7307]},{"content":"String Manipulation","pos":[7312,7331]},{"content":"Locale","pos":[7390,7396]},{"content":"Interpretation of Multibyte-Character Sequences","pos":[7438,7485]},{"content":"strcspn, wcscspn, _mbscspn, _mbscspn_l","pos":[7568,7606]},{"content":"strcmp, wcscmp, _mbscmp","pos":[7685,7708]},{"content":"strpbrk, wcspbrk, _mbspbrk, _mbspbrk_l","pos":[7774,7812]},{"content":"strrchr, wcsrchr, _mbsrchr, _mbsrchr_l","pos":[7891,7929]},{"content":"strspn, wcsspn, _mbsspn, _mbsspn_l","pos":[8008,8042]},{"content":"basic_string::find","pos":[8117,8135]}],"content":"---\ntitle: \"strstr, wcsstr, _mbsstr, _mbsstr_l | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\napiname: \n  - \"_mbsstr\"\n  - \"wcsstr\"\n  - \"_mbsstr_l\"\n  - \"strstr\"\napilocation: \n  - \"msvcrt.dll\"\n  - \"msvcr80.dll\"\n  - \"msvcr90.dll\"\n  - \"msvcr100.dll\"\n  - \"msvcr100_clr0400.dll\"\n  - \"msvcr110.dll\"\n  - \"msvcr110_clr0400.dll\"\n  - \"msvcr120.dll\"\n  - \"msvcr120_clr0400.dll\"\n  - \"ucrtbase.dll\"\n  - \"api-ms-win-crt-multibyte-l1-1-0.dll\"\napitype: \"DLLExport\"\nf1_keywords: \n  - \"_fstrstr\"\n  - \"_ftcsstr\"\n  - \"strstr\"\n  - \"wcsstr\"\n  - \"_mbsstr\"\n  - \"_tcsstr\"\ndev_langs: \n  - \"C++\"\n  - \"C\"\nhelpviewer_keywords: \n  - \"strings [C++], searching\"\n  - \"mbsstr function\"\n  - \"_ftcsstr function\"\n  - \"ftcsstr function\"\n  - \"fstrstr function\"\n  - \"_tcsstr function\"\n  - \"substrings, finding\"\n  - \"mbsstr_l function\"\n  - \"tcsstr function\"\n  - \"_mbsstr function\"\n  - \"wcsstr function\"\n  - \"_fstrstr function\"\n  - \"_mbsstr_l function\"\n  - \"strstr function\"\nms.assetid: 03d70c3f-2473-45cb-a5f8-b35beeb2748a\ncaps.latest.revision: 32\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# strstr, wcsstr, _mbsstr, _mbsstr_l\nReturns a pointer to the first occurrence of a search string in a string.  \n  \n> [!IMPORTANT]\n>  `_mbsstr` and `_mbsstr_l` cannot be used in applications that execute in the [!INCLUDE[wrt](../../atl/reference/includes/wrt_md.md)]. For more information, see [CRT functions not supported with /ZW](http://msdn.microsoft.com/library/windows/apps/jj606124.aspx).  \n  \n## Syntax  \n  \n```  \nchar *strstr(  \n   const char *str,  \n   const char *strSearch   \n); // C only  \nchar *strstr(  \n   char *str,  \n   const char *strSearch   \n); // C++ only  \nconst char *strstr(  \n   const char *str,  \n   const char *strSearch   \n); // C++ only  \nwchar_t *wcsstr(  \n   const wchar_t *str,  \n   const wchar_t *strSearch   \n); // C only  \nwchar_t *wcsstr(  \n   wchar_t *str,  \n   const wchar_t *strSearch   \n); // C++ only  \nconst wchar_t *wcsstr(  \n   const wchar_t *str,  \n   const wchar_t *strSearch   \n); // C++ only  \nunsigned char *_mbsstr(  \n   const unsigned char *str,  \n   const unsigned char *strSearch   \n); // C only  \nunsigned char *_mbsstr(  \n   unsigned char *str,  \n   const unsigned char *strSearch   \n); // C++ only  \nconst unsigned char *_mbsstr(  \n   const unsigned char *str,  \n   const unsigned char *strSearch   \n); // C++ only  \nunsigned char *_mbsstr_l(  \n   const unsigned char *str,  \n   const unsigned char *strSearch,  \n   _locale_t locale  \n); // C only  \nunsigned char *_mbsstr_l(  \n   unsigned char *str,  \n   const unsigned char *strSearch,  \n   _locale_t locale  \n); // C++ only  \nconst unsigned char *_mbsstr_l(  \n   const unsigned char *str,  \n   const unsigned char *strSearch,  \n   _locale_t locale  \n); // C++ only  \n```  \n  \n#### Parameters  \n `str`  \n Null-terminated string to search.  \n  \n `strSearch`  \n Null-terminated string to search for.  \n  \n `locale`  \n Locale to use.  \n  \n## Return Value  \n Returns a pointer to the first occurrence of `strSearch` in `str`, or `NULL` if `strSearch` does not appear in `str`. If `strSearch` points to a string of zero length, the function returns `str`.  \n  \n## Remarks  \n The `strstr` function returns a pointer to the first occurrence of `strSearch` in `str`. The search does not include terminating null characters. `wcsstr` is the wide-character version of `strstr` and `_mbsstr` is the multibyte-character version. The arguments and return value of `wcsstr` are wide-character strings; those of `_mbsstr` are multibyte-character strings. `_mbsstr` validates its parameters. If `str` or `strSearch` is `NULL`, the invalid parameter handler is invoked, as described in [Parameter Validation](../../c-runtime-library/parameter-validation.md) . If execution is allowed to continue, `_mbsstr` sets `errno` to `EINVAL` and returns 0. `strstr` and `wcsstr` do not validate their parameters. These three functions behave identically otherwise.  \n  \n> [!IMPORTANT]\n>  These functions might incur a threat from a buffer overrun problem. Buffer overrun problems can be used to attack a system because they can allow the execution of arbitrary code, which can cause an unwarranted elevation of privilege. For more information, see [Avoiding Buffer Overruns](http://msdn.microsoft.com/library/windows/desktop/ms717795).  \n  \n In C, these functions take a `const` pointer for the first argument. In C++, two overloads are available. The overload that takes a pointer to `const` returns a pointer to `const`; the version that takes a pointer to non-`const` returns a pointer to non-`const`. The macro _CONST_CORRECT_OVERLOADS is defined if both the `const` and non-`const` versions of these functions are available. If you require the non-`const` behavior for both C++ overloads, define the symbol _CONST_RETURN.  \n  \n The output value is affected by the locale-category setting of `LC_CTYPE`; for more information, see [setlocale, _wsetlocale](../../c-runtime-library/reference/setlocale-wsetlocale.md). The versions of these functions that do not have the `_l` suffix use the current locale for this locale-dependent behavior; the versions that have the `_l` suffix are identical except that they instead use the locale parameter that's passed in. For more information, see [Locale](../../c-runtime-library/locale.md).  \n  \n### Generic-Text Routine Mappings  \n  \n|TCHAR.H routine|_UNICODE & _MBCS not defined|_MBCS defined|_UNICODE defined|  \n|---------------------|------------------------------------|--------------------|-----------------------|  \n|`_tcsstr`|`strstr`|`_mbsstr`|`wcsstr`|  \n|**n/a**|**n/a**|`_mbsstr_l`|**n/a**|  \n  \n## Requirements  \n  \n|Routine|Required header|  \n|-------------|---------------------|  \n|`strstr`|\\<string.h>|  \n|`wcsstr`|\\<string.h> or \\<wchar.h>|  \n|`_mbsstr`, `_mbsstr_l`|\\<mbstring.h>|  \n  \n For more information about compatibility, see [Compatibility](../../c-runtime-library/compatibility.md).  \n  \n## Example  \n  \n```  \n  \n      // crt_strstr.c  \n  \n#include <string.h>  \n#include <stdio.h>  \n  \nchar str[] =    \"lazy\";  \nchar string[] = \"The quick brown dog jumps over the lazy fox\";  \nchar fmt1[] =   \"         1         2         3         4         5\";  \nchar fmt2[] =   \"12345678901234567890123456789012345678901234567890\";  \n  \nint main( void )  \n{  \n   char *pdest;  \n   int  result;  \n   printf( \"String to be searched:\\n   %s\\n\", string );  \n   printf( \"   %s\\n   %s\\n\\n\", fmt1, fmt2 );  \n   pdest = strstr( string, str );  \n   result = (int)(pdest - string + 1);  \n   if ( pdest != NULL )  \n      printf( \"%s found at position %d\\n\", str, result );  \n   else  \n      printf( \"%s not found\\n\", str );  \n}  \n```  \n  \n```Output  \nString to be searched:  \n   The quick brown dog jumps over the lazy fox  \n            1         2         3         4         5  \n   12345678901234567890123456789012345678901234567890  \n  \nlazy found at position 36  \n```  \n  \n## .NET Framework Equivalent  \n [System::String::IndexOf](https://msdn.microsoft.com/en-us/library/system.string.indexof.aspx)  \n  \n## See Also  \n [String Manipulation](../../c-runtime-library/string-manipulation-crt.md)   \n [Locale](../../c-runtime-library/locale.md)   \n [Interpretation of Multibyte-Character Sequences](../../c-runtime-library/interpretation-of-multibyte-character-sequences.md)   \n [strcspn, wcscspn, _mbscspn, _mbscspn_l](../../c-runtime-library/reference/strcspn-wcscspn-mbscspn-mbscspn-l.md)   \n [strcmp, wcscmp, _mbscmp](../../c-runtime-library/reference/strcmp-wcscmp-mbscmp.md)   \n [strpbrk, wcspbrk, _mbspbrk, _mbspbrk_l](../../c-runtime-library/reference/strpbrk-wcspbrk-mbspbrk-mbspbrk-l.md)   \n [strrchr, wcsrchr, _mbsrchr, _mbsrchr_l](../../c-runtime-library/reference/strrchr-wcsrchr-mbsrchr-mbsrchr-l.md)   \n [strspn, wcsspn, _mbsspn, _mbsspn_l](../../c-runtime-library/reference/strspn-wcsspn-mbsspn-mbsspn-l.md)   \n [basic_string::find](http://msdn.microsoft.com/Library/e8254589-ae65-4414-b28f-54ba8f544656)"}