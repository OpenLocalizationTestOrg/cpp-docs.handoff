{"nodes":[{"pos":[12,43],"content":"flush (OpenMP) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"flush (OpenMP) | Microsoft Docs","pos":[0,31]}]},{"pos":[601,615],"content":"flush (OpenMP)","linkify":"flush (OpenMP)","nodes":[{"content":"flush (OpenMP)","pos":[0,14]}]},{"content":"Specifies that all threads have the same view of memory for all shared objects.","pos":[616,695]},{"pos":[704,710],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[762,769],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"where,","pos":[773,779]},{"content":"<ph id=\"ph1\">`var`</ph> (optional)","pos":[786,802],"source":"`var` (optional)"},{"content":"A comma-separated list of variables that represent objects you want to synchronize.","pos":[806,889]},{"content":"If <ph id=\"ph1\">`var`</ph> is not specified, all memory is flushed.","pos":[890,939],"source":" If `var` is not specified, all memory is flushed."},{"pos":[948,955],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[959,1010],"content":"The <bpt id=\"p1\">**</bpt>flush<ept id=\"p1\">**</ept> directive supports no OpenMP clauses.","source":"The **flush** directive supports no OpenMP clauses."},{"pos":[1017,1118],"content":"For more information, see <bpt id=\"p1\">[</bpt>2.6.5 flush Directive<ept id=\"p1\">](../../../parallel/openmp/2-6-5-flush-directive.md)</ept>.","source":"For more information, see [2.6.5 flush Directive](../../../parallel/openmp/2-6-5-flush-directive.md)."},{"pos":[1127,1134],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[2169,2177],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"pos":[2181,2250],"content":"<bpt id=\"p1\">[</bpt>Directives<ept id=\"p1\">](../../../parallel/openmp/reference/openmp-directives.md)</ept>","source":"[Directives](../../../parallel/openmp/reference/openmp-directives.md)"}],"content":"---\ntitle: \"flush (OpenMP) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"Flush\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"flush OpenMP directive\"\nms.assetid: 150ca46e-d4f7-4423-b0a4-838df40aeb67\ncaps.latest.revision: 10\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# flush (OpenMP)\nSpecifies that all threads have the same view of memory for all shared objects.  \n  \n## Syntax  \n  \n```  \n#pragma omp flush [(var)]  \n```  \n  \n## Remarks  \n where,  \n  \n `var` (optional)  \n A comma-separated list of variables that represent objects you want to synchronize. If `var` is not specified, all memory is flushed.  \n  \n## Remarks  \n The **flush** directive supports no OpenMP clauses.  \n  \n For more information, see [2.6.5 flush Directive](../../../parallel/openmp/2-6-5-flush-directive.md).  \n  \n## Example  \n  \n```  \n// omp_flush.cpp  \n// compile with: /openmp   \n#include <stdio.h>  \n#include <omp.h>  \n  \nvoid read(int *data) {  \n   printf_s(\"read data\\n\");  \n   *data = 1;  \n}  \n  \nvoid process(int *data) {  \n   printf_s(\"process data\\n\");  \n   (*data)++;  \n}  \n  \nint main() {  \n   int data;  \n   int flag;  \n  \n   flag = 0;  \n  \n   #pragma omp parallel sections num_threads(2)  \n   {  \n      #pragma omp section  \n      {  \n         printf_s(\"Thread %d: \", omp_get_thread_num( ));  \n         read(&data);  \n         #pragma omp flush(data)  \n         flag = 1;  \n         #pragma omp flush(flag)  \n         // Do more work.  \n      }  \n  \n      #pragma omp section   \n      {  \n         while (!flag) {  \n            #pragma omp flush(flag)  \n         }  \n         #pragma omp flush(data)  \n  \n         printf_s(\"Thread %d: \", omp_get_thread_num( ));  \n         process(&data);  \n         printf_s(\"data = %d\\n\", data);  \n      }  \n   }  \n}  \n```  \n  \n```Output  \nThread 0: read data  \nThread 1: process data  \ndata = 2  \n```  \n  \n## See Also  \n [Directives](../../../parallel/openmp/reference/openmp-directives.md)"}