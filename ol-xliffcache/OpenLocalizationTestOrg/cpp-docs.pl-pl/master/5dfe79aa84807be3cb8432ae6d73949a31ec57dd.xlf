<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="pl-pl">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-787e512" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5dfe79aa84807be3cb8432ae6d73949a31ec57dd</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\preprocessor\include-alias.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7a43641ae4d38475941fe38c71ac8c1b3ca4f2c2</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d8004db8ed0fe6e2fdd2cbf5f8415f77b156aa14</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>include_alias | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>include_alias</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Specifies that <bpt id="p1">*</bpt>short_filename<ept id="p1">*</ept> is to be used as an alias for <bpt id="p2">*</bpt>long_filename<ept id="p2">*</ept>.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Some file systems allow longer header filenames than the 8.3 FAT file system limit.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The compiler cannot simply truncate the longer names to 8.3, because the first eight characters of the longer header filenames may not be unique.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Whenever the compiler encounters the <bpt id="p1">*</bpt>long_filename<ept id="p1">*</ept> string, it substitutes <bpt id="p2">*</bpt>short_filename<ept id="p2">*</ept>, and looks for the header file <bpt id="p3">*</bpt>short_filename<ept id="p3">*</ept> instead.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>This pragma must appear before the corresponding <ph id="ph1">`#include`</ph> directives.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>For example:</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The alias being searched for must match the specification exactly, in case as well as in spelling and in use of double quotation marks or angle brackets.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>include_alias<ept id="p1">**</ept> pragma performs simple string matching on the filenames; no other filename validation is performed.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>For example, given the following directives,</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>no aliasing (substitution) is performed, since the header file strings do not match exactly.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Also, header filenames used as arguments to the /Yu and /Yc compiler options, or the <bpt id="p1">**</bpt>hdrstop<ept id="p1">**</ept> pragma, are not substituted.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>For example, if your source file contains the following directive,</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>the corresponding compiler option should be</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>You can use the <bpt id="p1">**</bpt>include_alias<ept id="p1">**</ept> pragma to map any header filename to another.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>For example:</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Do not mix filenames enclosed in double quotation marks with filenames enclosed in angle brackets.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>For example, given the above two <bpt id="p1">**</bpt>#pragma include_alias<ept id="p1">**</ept> directives, the compiler performs no substitution on the following <ph id="ph1">`#include`</ph> directives:</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Furthermore, the following directive generates an error:</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Note that the filename reported in error messages, or as the value of the predefined <bpt id="p1">**</bpt>__FILE<ph id="ph1">\_\_</ph><ept id="p1">**</ept> macro, is the name of the file after the substitution has been performed.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>For example, after the following directives,</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>an error in VERYLONGFILENAME.H produces the following error message:</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Also note that transitivity is not supported.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Given the following directives,</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>the compiler searches for the file TWO.H rather than THREE.H.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Pragma Directives and the __Pragma Keyword</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>