{"nodes":[{"pos":[12,49],"content":"basic_ifstream Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"basic_ifstream Class | Microsoft Docs","pos":[0,37]}]},{"pos":[699,719],"content":"basic_ifstream Class","linkify":"basic_ifstream Class","nodes":[{"content":"basic_ifstream Class","pos":[0,20]}]},{"pos":[720,989],"content":"Describes an object that controls extraction of elements and encoded objects from a stream buffer of class <bpt id=\"p1\">[</bpt>basic_filebuf<ept id=\"p1\">](../standard-library/basic-filebuf-class.md)</ept><ph id=\"ph1\">&lt; </ph><ph id=\"ph2\">`Elem`</ph>, <ph id=\"ph3\">`Tr`</ph>&gt;, with elements of type <ph id=\"ph4\">`Elem`</ph>, whose character traits are determined by the class <ph id=\"ph5\">`Tr`</ph>.","source":"Describes an object that controls extraction of elements and encoded objects from a stream buffer of class [basic_filebuf](../standard-library/basic-filebuf-class.md)< `Elem`, `Tr`>, with elements of type `Elem`, whose character traits are determined by the class `Tr`."},{"pos":[998,1004],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[1140,1150],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"The basic element of the file buffer.","pos":[1164,1201]},{"content":"The traits of the basic element of the file buffer (usually <ph id=\"ph1\">`char_traits`</ph><ph id=\"ph2\">&lt; </ph><ph id=\"ph3\">`Elem`</ph>&gt;).","pos":[1216,1300],"source":" The traits of the basic element of the file buffer (usually `char_traits`< `Elem`>)."},{"pos":[1309,1316],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[1320,1388],"content":"The object stores an object of class <ph id=\"ph1\">`basic_filebuf`</ph><ph id=\"ph2\">&lt; </ph><ph id=\"ph3\">`Elem`</ph>, <ph id=\"ph4\">`Tr`</ph>&gt;.","source":"The object stores an object of class `basic_filebuf`< `Elem`, `Tr`>."},{"pos":[1397,1404],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following example shows how to read in text from a file.","pos":[1408,1468]},{"pos":[1856,1887],"content":"Input: basic_ifstream_class.txt","linkify":"Input: basic_ifstream_class.txt","nodes":[{"content":"Input: basic_ifstream_class.txt","pos":[0,31]}]},{"pos":[1963,1969],"content":"Output","linkify":"Output","nodes":[{"content":"Output","pos":[0,6]}]},{"pos":[2046,2058],"content":"Constructors","linkify":"Constructors","nodes":[{"content":"Constructors","pos":[0,12]}]},{"pos":[2079,2128],"content":"<bpt id=\"p1\">[</bpt>basic_ifstream<ept id=\"p1\">](#basic_ifstream__basic_ifstream)</ept>","source":"[basic_ifstream](#basic_ifstream__basic_ifstream)"},{"pos":[2129,2185],"content":"Initializes a new instance of a <ph id=\"ph1\">`basic_ifstream`</ph> object.","source":"Initializes a new instance of a `basic_ifstream` object."},{"pos":[2196,2212],"content":"Member Functions","linkify":"Member Functions","nodes":[{"content":"Member Functions","pos":[0,16]}]},{"pos":[2233,2264],"content":"<bpt id=\"p1\">[</bpt>close<ept id=\"p1\">](#basic_ifstream__close)</ept>","source":"[close](#basic_ifstream__close)"},{"content":"Closes a file.","pos":[2265,2279]},{"pos":[2284,2319],"content":"<bpt id=\"p1\">[</bpt>is_open<ept id=\"p1\">](#basic_ifstream__is_open)</ept>","source":"[is_open](#basic_ifstream__is_open)"},{"content":"Determines if a file is open.","pos":[2320,2349]},{"pos":[2354,2383],"content":"<bpt id=\"p1\">[</bpt>open<ept id=\"p1\">](#basic_ifstream__open)</ept>","source":"[open](#basic_ifstream__open)"},{"content":"Opens a file.","pos":[2384,2397]},{"pos":[2402,2433],"content":"<bpt id=\"p1\">[</bpt>rdbuf<ept id=\"p1\">](#basic_ifstream__rdbuf)</ept>","source":"[rdbuf](#basic_ifstream__rdbuf)"},{"content":"Returns the address of the stored stream buffer.","pos":[2434,2482]},{"pos":[2487,2516],"content":"<bpt id=\"p1\">[</bpt>swap<ept id=\"p1\">](#basic_ifstream__swap)</ept>","source":"[swap](#basic_ifstream__swap)"},{"pos":[2517,2613],"content":"Exchanges the content of this <ph id=\"ph1\">`basic_ifstream`</ph> for the content of the provided <ph id=\"ph2\">`basic_ifstream`</ph>.","source":"Exchanges the content of this `basic_ifstream` for the content of the provided `basic_ifstream`."},{"pos":[2624,2633],"content":"Operators","linkify":"Operators","nodes":[{"content":"Operators","pos":[0,9]}]},{"pos":[2654,2695],"content":"<bpt id=\"p1\">[</bpt>operator=<ept id=\"p1\">](#basic_ifstream__operator_eq)</ept>","source":"[operator=](#basic_ifstream__operator_eq)"},{"content":"Assigns the content of this stream object.","pos":[2696,2738]},{"content":"This is a move assignment involving an <ph id=\"ph1\">`rvalue`</ph> that does not leave a copy behind.","pos":[2739,2821],"source":" This is a move assignment involving an `rvalue` that does not leave a copy behind."},{"pos":[2831,2843],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[2847,2869],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> <ph id=\"ph1\">\\&lt;</ph>fstream&gt;","source":"**Header:** \\<fstream>"},{"pos":[2876,2894],"content":"<bpt id=\"p1\">**</bpt>Namespace:<ept id=\"p1\">**</ept> std","source":"**Namespace:** std"},{"pos":[2904,2981],"content":"<bpt id=\"p1\">&lt;a name=\"basic_ifstream__basic_ifstream\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  basic_ifstream::basic_ifstream","linkify":"<a name=\"basic_ifstream__basic_ifstream\"></a>  basic_ifstream::basic_ifstream","source":"<a name=\"basic_ifstream__basic_ifstream\"></a>  basic_ifstream::basic_ifstream"},{"pos":[2985,3031],"content":"Constructs an object of type <ph id=\"ph1\">`basic_ifstream`</ph>.","source":"Constructs an object of type `basic_ifstream`."},{"pos":[3408,3418],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"The name of the file to open.","pos":[3437,3466]},{"content":"One of the enumerations in <bpt id=\"p1\">[</bpt>ios_base::openmode<ept id=\"p1\">](../standard-library/ios-base-class.md#ios_base__openmode)</ept>.","pos":[3484,3590],"source":" One of the enumerations in [ios_base::openmode](../standard-library/ios-base-class.md#ios_base__openmode)."},{"content":"The default file opening protection, equivalent to the <ph id=\"ph1\">`shflag`</ph> parameter in <bpt id=\"p1\">[</bpt>_fsopen, _wfsopen<ept id=\"p1\">](../c-runtime-library/reference/fsopen-wfsopen.md)</ept>.","pos":[3608,3755],"source":" The default file opening protection, equivalent to the `shflag` parameter in [_fsopen, _wfsopen](../c-runtime-library/reference/fsopen-wfsopen.md)."},{"pos":[3765,3772],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The first constructor initializes the base class by calling <bpt id=\"p1\">[</bpt>basic_istream<ept id=\"p1\">](../standard-library/basic-istream-class.md)</ept>( <ph id=\"ph1\">`sb`</ph>), where <ph id=\"ph2\">`sb`</ph> is the stored object of class <bpt id=\"p2\">[</bpt>basic_filebuf<ept id=\"p2\">](../standard-library/basic-filebuf-class.md)</ept><ph id=\"ph3\">&lt; </ph><ph id=\"ph4\">`Elem`</ph>, <ph id=\"ph5\">`Tr`</ph>&gt;.","pos":[3776,4020],"source":"The first constructor initializes the base class by calling [basic_istream](../standard-library/basic-istream-class.md)( `sb`), where `sb` is the stored object of class [basic_filebuf](../standard-library/basic-filebuf-class.md)< `Elem`, `Tr`>."},{"content":"It also initializes <ph id=\"ph1\">`sb`</ph> by calling <ph id=\"ph2\">`basic_filebuf`</ph><ph id=\"ph3\">&lt; </ph><ph id=\"ph4\">`Elem`</ph>, <ph id=\"ph5\">`Tr`</ph>&gt;.","pos":[4021,4088],"source":" It also initializes `sb` by calling `basic_filebuf`< `Elem`, `Tr`>."},{"content":"The second and third constructors initializes the base class by calling <ph id=\"ph1\">`basic_istream`</ph>( <ph id=\"ph2\">`sb`</ph>).","pos":[4095,4190],"source":"The second and third constructors initializes the base class by calling `basic_istream`( `sb`)."},{"content":"It also initializes <ph id=\"ph1\">`sb`</ph> by calling <bpt id=\"p1\">[</bpt>basic_filebuf<ept id=\"p1\">](../standard-library/basic-filebuf-class.md#basic_filebuf__basic_filebuf)</ept><ph id=\"ph2\">&lt; </ph><ph id=\"ph3\">`Elem`</ph>, <ph id=\"ph4\">`Tr`</ph>&gt;, then <ph id=\"ph5\">`sb`</ph>.","pos":[4191,4342],"source":" It also initializes `sb` by calling [basic_filebuf](../standard-library/basic-filebuf-class.md#basic_filebuf__basic_filebuf)< `Elem`, `Tr`>, then `sb`."},{"content":"<bpt id=\"p1\">[</bpt>open<ept id=\"p1\">](../standard-library/basic-filebuf-class.md#basic_filebuf__open)</ept>( <ph id=\"ph1\">`_Filename`</ph>, <ph id=\"ph2\">`_Mode`</ph> &amp;#124; <ph id=\"ph3\">`ios_base::in`</ph>).","pos":[4343,4459],"source":"[open](../standard-library/basic-filebuf-class.md#basic_filebuf__open)( `_Filename`, `_Mode` &#124; `ios_base::in`)."},{"content":"If the latter function returns a null pointer, the constructor calls <bpt id=\"p1\">**</bpt>setstate<ept id=\"p1\">**</ept>( <ph id=\"ph1\">`failbit`</ph>).","pos":[4460,4554],"source":" If the latter function returns a null pointer, the constructor calls **setstate**( `failbit`)."},{"pos":[4561,4668],"content":"The fourth constructor initializes the object with the contents of <ph id=\"ph1\">`right`</ph>, treated as an rvalue reference.","source":"The fourth constructor initializes the object with the contents of `right`, treated as an rvalue reference."},{"pos":[4678,4685],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following example shows how to read in text from a file.","pos":[4690,4750]},{"content":"To create the file, see the example for <bpt id=\"p1\">[</bpt>basic_ofstream::basic_ofstream<ept id=\"p1\">](../standard-library/basic-ofstream-class.md#basic_ofstream__basic_ofstream)</ept>.","pos":[4751,4900],"source":" To create the file, see the example for [basic_ofstream::basic_ofstream](../standard-library/basic-ofstream-class.md#basic_ofstream__basic_ofstream)."},{"pos":[5287,5346],"content":"<bpt id=\"p1\">&lt;a name=\"basic_ifstream__close\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  basic_ifstream::close","linkify":"<a name=\"basic_ifstream__close\"></a>  basic_ifstream::close","source":"<a name=\"basic_ifstream__close\"></a>  basic_ifstream::close"},{"content":"Closes a file.","pos":[5350,5364]},{"pos":[5403,5410],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[5414,5552],"content":"The member function calls <bpt id=\"p1\">[</bpt>rdbuf<ept id=\"p1\">](#basic_ifstream__rdbuf)</ept> <bpt id=\"p2\">**</bpt><ph id=\"ph1\">-&gt;</ph><ept id=\"p2\">**</ept> <bpt id=\"p3\">[</bpt>close<ept id=\"p3\">](../standard-library/basic-filebuf-class.md#basic_filebuf__close)</ept>.","source":"The member function calls [rdbuf](#basic_ifstream__rdbuf) **->** [close](../standard-library/basic-filebuf-class.md#basic_filebuf__close)."},{"pos":[5562,5569],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[5574,5701],"content":"See <bpt id=\"p1\">[</bpt>basic_filebuf::close<ept id=\"p1\">](../standard-library/basic-filebuf-class.md#basic_filebuf__close)</ept> for an example that uses <bpt id=\"p2\">**</bpt>close<ept id=\"p2\">**</ept>.","source":"See [basic_filebuf::close](../standard-library/basic-filebuf-class.md#basic_filebuf__close) for an example that uses **close**."},{"pos":[5711,5774],"content":"<bpt id=\"p1\">&lt;a name=\"basic_ifstream__is_open\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  basic_ifstream::is_open","linkify":"<a name=\"basic_ifstream__is_open\"></a>  basic_ifstream::is_open","source":"<a name=\"basic_ifstream__is_open\"></a>  basic_ifstream::is_open"},{"content":"Determines if a file is open.","pos":[5778,5807]},{"pos":[5854,5866],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[5870,5920],"content":"<bpt id=\"p1\">**</bpt>true<ept id=\"p1\">**</ept> if the file is open, <bpt id=\"p2\">**</bpt>false<ept id=\"p2\">**</ept> otherwise.","source":"**true** if the file is open, **false** otherwise."},{"pos":[5930,5937],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[5941,6085],"content":"The member function returns <bpt id=\"p1\">[</bpt>rdbuf<ept id=\"p1\">](#basic_ifstream__rdbuf)</ept> <bpt id=\"p2\">**</bpt><ph id=\"ph1\">-&gt;</ph><ept id=\"p2\">**</ept> <bpt id=\"p3\">[</bpt>is_open<ept id=\"p3\">](../standard-library/basic-filebuf-class.md#basic_filebuf__is_open)</ept>.","source":"The member function returns [rdbuf](#basic_ifstream__rdbuf) **->** [is_open](../standard-library/basic-filebuf-class.md#basic_filebuf__is_open)."},{"pos":[6095,6102],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[6107,6238],"content":"See <bpt id=\"p1\">[</bpt>basic_filebuf::is_open<ept id=\"p1\">](../standard-library/basic-filebuf-class.md#basic_filebuf__is_open)</ept> for an example that uses <ph id=\"ph1\">`is_open`</ph>.","source":"See [basic_filebuf::is_open](../standard-library/basic-filebuf-class.md#basic_filebuf__is_open) for an example that uses `is_open`."},{"pos":[6248,6305],"content":"<bpt id=\"p1\">&lt;a name=\"basic_ifstream__open\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  basic_ifstream::open","linkify":"<a name=\"basic_ifstream__open\"></a>  basic_ifstream::open","source":"<a name=\"basic_ifstream__open\"></a>  basic_ifstream::open"},{"content":"Opens a file.","pos":[6309,6322]},{"pos":[6758,6768],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"The name of the file to open.","pos":[6787,6816]},{"content":"One of the enumerations in <bpt id=\"p1\">[</bpt>ios_base::openmode<ept id=\"p1\">](../standard-library/ios-base-class.md#ios_base__openmode)</ept>.","pos":[6834,6940],"source":" One of the enumerations in [ios_base::openmode](../standard-library/ios-base-class.md#ios_base__openmode)."},{"content":"The default file opening protection, equivalent to the <ph id=\"ph1\">`shflag`</ph> parameter in <bpt id=\"p1\">[</bpt>_fsopen, _wfsopen<ept id=\"p1\">](../c-runtime-library/reference/fsopen-wfsopen.md)</ept>.","pos":[6958,7105],"source":" The default file opening protection, equivalent to the `shflag` parameter in [_fsopen, _wfsopen](../c-runtime-library/reference/fsopen-wfsopen.md)."},{"pos":[7115,7122],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The member function calls <bpt id=\"p1\">[</bpt>rdbuf<ept id=\"p1\">](#basic_ifstream__rdbuf)</ept> <bpt id=\"p2\">**</bpt><ph id=\"ph1\">-&gt;</ph><ept id=\"p2\">**</ept> <bpt id=\"p3\">[</bpt>open<ept id=\"p3\">](../standard-library/basic-filebuf-class.md#basic_filebuf__open)</ept>(_ <bpt id=\"p4\">*</bpt>Filename<ept id=\"p4\">*</ept>, <ph id=\"ph2\">`_Mode`</ph> &amp;#124; <bpt id=\"p5\">**</bpt>ios_base::in<ept id=\"p5\">**</ept>).","pos":[7126,7309],"source":"The member function calls [rdbuf](#basic_ifstream__rdbuf) **->** [open](../standard-library/basic-filebuf-class.md#basic_filebuf__open)(_ *Filename*, `_Mode` &#124; **ios_base::in**)."},{"content":"If open fails, the function calls <bpt id=\"p1\">[</bpt>setstate<ept id=\"p1\">](../standard-library/basic-ios-class.md#basic_ios__setstate)</ept>( <bpt id=\"p2\">**</bpt>failbit<ept id=\"p2\">**</ept>), which may throw an ios_base::failure exception.","pos":[7310,7477],"source":" If open fails, the function calls [setstate](../standard-library/basic-ios-class.md#basic_ios__setstate)( **failbit**), which may throw an ios_base::failure exception."},{"pos":[7487,7494],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[7499,7623],"content":"See <bpt id=\"p1\">[</bpt>basic_filebuf::open<ept id=\"p1\">](../standard-library/basic-filebuf-class.md#basic_filebuf__open)</ept> for an example that uses <bpt id=\"p2\">**</bpt>open<ept id=\"p2\">**</ept>.","source":"See [basic_filebuf::open](../standard-library/basic-filebuf-class.md#basic_filebuf__open) for an example that uses **open**."},{"pos":[7633,7702],"content":"<bpt id=\"p1\">&lt;a name=\"basic_ifstream__operator_eq\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  basic_ifstream::operator=","linkify":"<a name=\"basic_ifstream__operator_eq\"></a>  basic_ifstream::operator=","source":"<a name=\"basic_ifstream__operator_eq\"></a>  basic_ifstream::operator="},{"content":"Assigns the content of this stream object.","pos":[7706,7748]},{"content":"This is a move assignment involving an rvalue that does not leave a copy behind.","pos":[7749,7829]},{"pos":[7905,7915],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"An rvalue reference to a <ph id=\"ph1\">`basic_ifstream`</ph> object.","pos":[7931,7980],"source":" An rvalue reference to a `basic_ifstream` object."},{"pos":[7990,8002],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[8006,8022],"content":"Returns <ph id=\"ph1\">`*this`</ph>.","source":"Returns `*this`."},{"pos":[8032,8039],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The member operator replaces the contents of the object by using the contents of <ph id=\"ph1\">` right`</ph>, treated as an rvalue reference.","pos":[8043,8165],"source":"The member operator replaces the contents of the object by using the contents of ` right`, treated as an rvalue reference."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Lvalues and Rvalues<ept id=\"p1\">](../cpp/lvalues-and-rvalues-visual-cpp.md)</ept>.","pos":[8166,8256],"source":" For more information, see [Lvalues and Rvalues](../cpp/lvalues-and-rvalues-visual-cpp.md)."},{"pos":[8266,8325],"content":"<bpt id=\"p1\">&lt;a name=\"basic_ifstream__rdbuf\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  basic_ifstream::rdbuf","linkify":"<a name=\"basic_ifstream__rdbuf\"></a>  basic_ifstream::rdbuf","source":"<a name=\"basic_ifstream__rdbuf\"></a>  basic_ifstream::rdbuf"},{"content":"Returns the address of the stored stream buffer.","pos":[8329,8377]},{"pos":[8442,8454],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[8458,8578],"content":"A pointer to a <bpt id=\"p1\">[</bpt>basic_filebuf<ept id=\"p1\">](../standard-library/basic-filebuf-class.md)</ept> object representing the stored stream buffer.","source":"A pointer to a [basic_filebuf](../standard-library/basic-filebuf-class.md) object representing the stored stream buffer."},{"pos":[8588,8595],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[8600,8725],"content":"See <bpt id=\"p1\">[</bpt>basic_filebuf::close<ept id=\"p1\">](../standard-library/basic-filebuf-class.md#basic_filebuf__close)</ept> for an example that uses <ph id=\"ph1\">`rdbuf`</ph>.","source":"See [basic_filebuf::close](../standard-library/basic-filebuf-class.md#basic_filebuf__close) for an example that uses `rdbuf`."},{"pos":[8735,8792],"content":"<bpt id=\"p1\">&lt;a name=\"basic_ifstream__swap\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  basic_ifstream::swap","linkify":"<a name=\"basic_ifstream__swap\"></a>  basic_ifstream::swap","source":"<a name=\"basic_ifstream__swap\"></a>  basic_ifstream::swap"},{"pos":[8796,8851],"content":"Exchanges the contents of two <ph id=\"ph1\">`basic_ifstream`</ph> objects.","source":"Exchanges the contents of two `basic_ifstream` objects."},{"pos":[8910,8920],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"A reference to another stream buffer.","pos":[8936,8973]},{"pos":[8983,8990],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[8994,9081],"content":"The member function exchanges the contents of this object for the contents of <ph id=\"ph1\">` right`</ph>.","source":"The member function exchanges the contents of this object for the contents of ` right`."},{"pos":[9090,9098],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Thread Safety in the C++ Standard Library<ept id=\"p1\">](../standard-library/thread-safety-in-the-cpp-standard-library.md)</ept><ph id=\"ph1\"> </ph>","pos":[9102,9212],"source":"[Thread Safety in the C++ Standard Library](../standard-library/thread-safety-in-the-cpp-standard-library.md) "},{"content":"<bpt id=\"p1\"> [</bpt>iostream Programming<ept id=\"p1\">](../standard-library/iostream-programming.md)</ept><ph id=\"ph1\"> </ph>","pos":[9215,9284],"source":" [iostream Programming](../standard-library/iostream-programming.md) "},{"content":"<bpt id=\"p1\"> [</bpt>iostreams Conventions<ept id=\"p1\">](../standard-library/iostreams-conventions.md)</ept>","pos":[9287,9357],"source":" [iostreams Conventions](../standard-library/iostreams-conventions.md)"}],"content":"---\ntitle: \"basic_ifstream Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"basic_ifstream\"\n  - \"fstream/std::basic_ifstream\"\n  - \"std::basic_ifstream\"\n  - \"std.basic_ifstream\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"basic_ifstream class\"\nms.assetid: 366cd9a7-efc4-4b7f-ba10-c8271e47ffcf\ncaps.latest.revision: 23\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# basic_ifstream Class\nDescribes an object that controls extraction of elements and encoded objects from a stream buffer of class [basic_filebuf](../standard-library/basic-filebuf-class.md)< `Elem`, `Tr`>, with elements of type `Elem`, whose character traits are determined by the class `Tr`.  \n  \n## Syntax  \n  \n```  \ntemplate <class Elem, class Tr = char_traits<Elem>>  \nclass basic_ifstream : public basic_istream<Elem, Tr>  \n```  \n  \n#### Parameters  \n `Elem`  \n The basic element of the file buffer.  \n  \n `Tr`  \n The traits of the basic element of the file buffer (usually `char_traits`< `Elem`>).  \n  \n## Remarks  \n The object stores an object of class `basic_filebuf`< `Elem`, `Tr`>.  \n  \n## Example  \n The following example shows how to read in text from a file.  \n  \n```  \n// basic_ifstream_class.cpp  \n// compile with: /EHsc  \n  \n#include <fstream>  \n#include <iostream>  \n  \nusing namespace std;  \n  \nint main(int argc, char **argv)  \n{  \n    ifstream ifs(\"basic_ifstream_class.txt\");  \n    if (!ifs.bad())  \n    {  \n        // Dump the contents of the file to cout.  \n        cout << ifs.rdbuf();  \n        ifs.close();  \n    }  \n}  \n```  \n  \n## Input: basic_ifstream_class.txt  \n  \n```  \nThis is the contents of basic_ifstream_class.txt.  \n```  \n  \n## Output  \n  \n```  \nThis is the contents of basic_ifstream_class.txt.  \n```  \n  \n### Constructors  \n  \n|||  \n|-|-|  \n|[basic_ifstream](#basic_ifstream__basic_ifstream)|Initializes a new instance of a `basic_ifstream` object.|  \n  \n### Member Functions  \n  \n|||  \n|-|-|  \n|[close](#basic_ifstream__close)|Closes a file.|  \n|[is_open](#basic_ifstream__is_open)|Determines if a file is open.|  \n|[open](#basic_ifstream__open)|Opens a file.|  \n|[rdbuf](#basic_ifstream__rdbuf)|Returns the address of the stored stream buffer.|  \n|[swap](#basic_ifstream__swap)|Exchanges the content of this `basic_ifstream` for the content of the provided `basic_ifstream`.|  \n  \n### Operators  \n  \n|||  \n|-|-|  \n|[operator=](#basic_ifstream__operator_eq)|Assigns the content of this stream object. This is a move assignment involving an `rvalue` that does not leave a copy behind.|  \n  \n## Requirements  \n **Header:** \\<fstream>  \n  \n **Namespace:** std  \n  \n##  <a name=\"basic_ifstream__basic_ifstream\"></a>  basic_ifstream::basic_ifstream  \n Constructs an object of type `basic_ifstream`.  \n  \n```  \nbasic_ifstream();\n\nexplicit basic_ifstream(\n    const char* _Filename,  \n    ios_base::openmode _Mode = ios_base::in,  \n    int _Prot = (int)ios_base::_Openprot);\n\nexplicit basic_ifstream(\n    const wchar_t* _Filename,  \n    ios_base::openmode _Mode = ios_base::in,  \n    int _Prot = (int)ios_base::_Openprot);\n\nbasic_ifstream(basic_ifstream&& right);\n```  \n  \n### Parameters  \n `_Filename`  \n The name of the file to open.  \n  \n `_Mode`  \n One of the enumerations in [ios_base::openmode](../standard-library/ios-base-class.md#ios_base__openmode).  \n  \n `_Prot`  \n The default file opening protection, equivalent to the `shflag` parameter in [_fsopen, _wfsopen](../c-runtime-library/reference/fsopen-wfsopen.md).  \n  \n### Remarks  \n The first constructor initializes the base class by calling [basic_istream](../standard-library/basic-istream-class.md)( `sb`), where `sb` is the stored object of class [basic_filebuf](../standard-library/basic-filebuf-class.md)< `Elem`, `Tr`>. It also initializes `sb` by calling `basic_filebuf`< `Elem`, `Tr`>.  \n  \n The second and third constructors initializes the base class by calling `basic_istream`( `sb`). It also initializes `sb` by calling [basic_filebuf](../standard-library/basic-filebuf-class.md#basic_filebuf__basic_filebuf)< `Elem`, `Tr`>, then `sb`. [open](../standard-library/basic-filebuf-class.md#basic_filebuf__open)( `_Filename`, `_Mode` &#124; `ios_base::in`). If the latter function returns a null pointer, the constructor calls **setstate**( `failbit`).  \n  \n The fourth constructor initializes the object with the contents of `right`, treated as an rvalue reference.  \n  \n### Example  \n  The following example shows how to read in text from a file. To create the file, see the example for [basic_ofstream::basic_ofstream](../standard-library/basic-ofstream-class.md#basic_ofstream__basic_ofstream).  \n  \n```  \n// basic_ifstream_ctor.cpp  \n// compile with: /EHsc  \n  \n#include <fstream>  \n#include <iostream>  \n  \nusing namespace std;  \n  \nint main(int argc, char **argv)  \n{  \n    ifstream ifs(\"basic_ifstream_ctor.txt\");  \n    if (!ifs.bad())  \n    {  \n        // Dump the contents of the file to cout.  \n        cout << ifs.rdbuf();  \n        ifs.close();  \n    }  \n}  \n```  \n  \n##  <a name=\"basic_ifstream__close\"></a>  basic_ifstream::close  \n Closes a file.  \n  \n```  \nvoid close();\n```  \n  \n### Remarks  \n The member function calls [rdbuf](#basic_ifstream__rdbuf) **->** [close](../standard-library/basic-filebuf-class.md#basic_filebuf__close).  \n  \n### Example  \n  See [basic_filebuf::close](../standard-library/basic-filebuf-class.md#basic_filebuf__close) for an example that uses **close**.  \n  \n##  <a name=\"basic_ifstream__is_open\"></a>  basic_ifstream::is_open  \n Determines if a file is open.  \n  \n```  \nbool is_open() const;\n```  \n  \n### Return Value  \n **true** if the file is open, **false** otherwise.  \n  \n### Remarks  \n The member function returns [rdbuf](#basic_ifstream__rdbuf) **->** [is_open](../standard-library/basic-filebuf-class.md#basic_filebuf__is_open).  \n  \n### Example  \n  See [basic_filebuf::is_open](../standard-library/basic-filebuf-class.md#basic_filebuf__is_open) for an example that uses `is_open`.  \n  \n##  <a name=\"basic_ifstream__open\"></a>  basic_ifstream::open  \n Opens a file.  \n  \n```  \nvoid open(\n    const char* _Filename,  \n    ios_base::openmode _Mode = ios_base::in,  \n    int _Prot = (int)ios_base::_Openprot);\n\nvoid open(\n    const char* _Filename,  \n    ios_base::openmode _Mode);\n\nvoid open(\n    const wchar_t* _Filename,  \n    ios_base::openmode _Mode = ios_base::in,  \n    int _Prot = (int)ios_base::_Openprot);\n\nvoid open(\n    const wchar_t* _Filename,  \n    ios_base::openmode _Mode);\n```  \n  \n### Parameters  \n `_Filename`  \n The name of the file to open.  \n  \n `_Mode`  \n One of the enumerations in [ios_base::openmode](../standard-library/ios-base-class.md#ios_base__openmode).  \n  \n `_Prot`  \n The default file opening protection, equivalent to the `shflag` parameter in [_fsopen, _wfsopen](../c-runtime-library/reference/fsopen-wfsopen.md).  \n  \n### Remarks  \n The member function calls [rdbuf](#basic_ifstream__rdbuf) **->** [open](../standard-library/basic-filebuf-class.md#basic_filebuf__open)(_ *Filename*, `_Mode` &#124; **ios_base::in**). If open fails, the function calls [setstate](../standard-library/basic-ios-class.md#basic_ios__setstate)( **failbit**), which may throw an ios_base::failure exception.  \n  \n### Example  \n  See [basic_filebuf::open](../standard-library/basic-filebuf-class.md#basic_filebuf__open) for an example that uses **open**.  \n  \n##  <a name=\"basic_ifstream__operator_eq\"></a>  basic_ifstream::operator=  \n Assigns the content of this stream object. This is a move assignment involving an rvalue that does not leave a copy behind.  \n  \n```  \nbasic_ifstream& operator=(basic_ifstream&& right);\n```  \n  \n### Parameters  \n ` right`  \n An rvalue reference to a `basic_ifstream` object.  \n  \n### Return Value  \n Returns `*this`.  \n  \n### Remarks  \n The member operator replaces the contents of the object by using the contents of ` right`, treated as an rvalue reference. For more information, see [Lvalues and Rvalues](../cpp/lvalues-and-rvalues-visual-cpp.md).  \n  \n##  <a name=\"basic_ifstream__rdbuf\"></a>  basic_ifstream::rdbuf  \n Returns the address of the stored stream buffer.  \n  \n```  \nbasic_filebuf<Elem, Tr> *rdbuf() const \n```  \n  \n### Return Value  \n A pointer to a [basic_filebuf](../standard-library/basic-filebuf-class.md) object representing the stored stream buffer.  \n  \n### Example  \n  See [basic_filebuf::close](../standard-library/basic-filebuf-class.md#basic_filebuf__close) for an example that uses `rdbuf`.  \n  \n##  <a name=\"basic_ifstream__swap\"></a>  basic_ifstream::swap  \n Exchanges the contents of two `basic_ifstream` objects.  \n  \n```  \nvoid swap(basic_ifstream& right);\n```  \n  \n### Parameters  \n ` right`  \n A reference to another stream buffer.  \n  \n### Remarks  \n The member function exchanges the contents of this object for the contents of ` right`.  \n  \n## See Also  \n [Thread Safety in the C++ Standard Library](../standard-library/thread-safety-in-the-cpp-standard-library.md)   \n [iostream Programming](../standard-library/iostream-programming.md)   \n [iostreams Conventions](../standard-library/iostreams-conventions.md)\n\n\n"}