{"nodes":[{"pos":[12,52],"content":"CTreeCtrl vs. CTreeView | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"CTreeCtrl vs. CTreeView | Microsoft Docs","pos":[0,40]}]},{"content":"CTreeCtrl vs. CTreeView","pos":[747,770]},{"content":"MFC provides two classes that encapsulate tree controls: <bpt id=\"p1\">[</bpt>CTreeCtrl<ept id=\"p1\">](../mfc/reference/ctreectrl-class.md)</ept> and <bpt id=\"p2\">[</bpt>CTreeView<ept id=\"p2\">](../mfc/reference/ctreeview-class.md)</ept>.","pos":[771,930],"source":"MFC provides two classes that encapsulate tree controls: [CTreeCtrl](../mfc/reference/ctreectrl-class.md) and [CTreeView](../mfc/reference/ctreeview-class.md)."},{"content":"Each class is useful in different situations.","pos":[931,976]},{"content":"Use <ph id=\"ph1\">`CTreeCtrl`</ph> when you need a plain child window control; for instance, in a dialog box.","pos":[983,1073],"source":"Use `CTreeCtrl` when you need a plain child window control; for instance, in a dialog box."},{"content":"You'd especially want to use <ph id=\"ph1\">`CTreeCtrl`</ph> if there will be other child controls in the window, as in a typical dialog box.","pos":[1074,1195],"source":" You'd especially want to use `CTreeCtrl` if there will be other child controls in the window, as in a typical dialog box."},{"content":"Use <ph id=\"ph1\">`CTreeView`</ph> when you want the tree control to act like a view window in document/view architecture as well as a tree control.","pos":[1202,1331],"source":"Use `CTreeView` when you want the tree control to act like a view window in document/view architecture as well as a tree control."},{"content":"A <ph id=\"ph1\">`CTreeView`</ph> will occupy the entire client area of a frame window or splitter window.","pos":[1332,1418],"source":" A `CTreeView` will occupy the entire client area of a frame window or splitter window."},{"content":"It will be automatically resized when its parent window is resized, and it can process command messages from menus, accelerator keys, and toolbars.","pos":[1419,1566]},{"content":"Since a tree control contains the data necessary to display the tree, the corresponding document object does not have to be complicated — you could even use <bpt id=\"p1\">[</bpt>CDocument<ept id=\"p1\">](../mfc/reference/cdocument-class.md)</ept> as the document type in your document template.","pos":[1567,1820],"source":" Since a tree control contains the data necessary to display the tree, the corresponding document object does not have to be complicated — you could even use [CDocument](../mfc/reference/cdocument-class.md) as the document type in your document template."},{"content":"See Also","pos":[1829,1837]},{"content":"Using CTreeCtrl","pos":[1842,1857]},{"content":"Controls","pos":[1891,1899]}],"content":"---\ntitle: \"CTreeCtrl vs. CTreeView | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"CTreeCtrl\"\n  - \"CTreeView\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"tree view controls\"\n  - \"CTreeCtrl class, vs. CTreeView class\"\n  - \"CTreeView class, vs. CTreeCtrl class\"\n  - \"tree controls, and tree view\"\nms.assetid: bba5af25-103f-4b53-84d3-071bc9bd6494\ncaps.latest.revision: 10\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# CTreeCtrl vs. CTreeView\nMFC provides two classes that encapsulate tree controls: [CTreeCtrl](../mfc/reference/ctreectrl-class.md) and [CTreeView](../mfc/reference/ctreeview-class.md). Each class is useful in different situations.  \n  \n Use `CTreeCtrl` when you need a plain child window control; for instance, in a dialog box. You'd especially want to use `CTreeCtrl` if there will be other child controls in the window, as in a typical dialog box.  \n  \n Use `CTreeView` when you want the tree control to act like a view window in document/view architecture as well as a tree control. A `CTreeView` will occupy the entire client area of a frame window or splitter window. It will be automatically resized when its parent window is resized, and it can process command messages from menus, accelerator keys, and toolbars. Since a tree control contains the data necessary to display the tree, the corresponding document object does not have to be complicated — you could even use [CDocument](../mfc/reference/cdocument-class.md) as the document type in your document template.  \n  \n## See Also  \n [Using CTreeCtrl](../mfc/using-ctreectrl.md)   \n [Controls](../mfc/controls-mfc.md)\n\n"}