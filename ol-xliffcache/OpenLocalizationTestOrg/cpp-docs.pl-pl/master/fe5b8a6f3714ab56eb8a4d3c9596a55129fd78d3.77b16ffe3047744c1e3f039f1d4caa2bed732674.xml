{"nodes":[{"pos":[12,64],"content":"CComSafeDeleteCriticalSection Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"CComSafeDeleteCriticalSection Class | Microsoft Docs","pos":[0,52]}]},{"pos":[742,777],"content":"CComSafeDeleteCriticalSection Class","linkify":"CComSafeDeleteCriticalSection Class","nodes":[{"content":"CComSafeDeleteCriticalSection Class","pos":[0,35]}]},{"content":"This class provides methods for obtaining and releasing ownership of a critical section object.","pos":[778,873]},{"pos":[882,888],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[975,982],"content":"Members","linkify":"Members","nodes":[{"content":"Members","pos":[0,7]}]},{"pos":[992,1011],"content":"Public Constructors","linkify":"Public Constructors","nodes":[{"content":"Public Constructors","pos":[0,19]}]},{"content":"Name","pos":[1018,1022]},{"content":"Description","pos":[1023,1034]},{"pos":[1072,1197],"content":"<bpt id=\"p1\">[</bpt>CComSafeDeleteCriticalSection::CComSafeDeleteCriticalSection<ept id=\"p1\">](#ccomsafedeletecriticalsection__ccomsafedeletecriticalsection)</ept>","source":"[CComSafeDeleteCriticalSection::CComSafeDeleteCriticalSection](#ccomsafedeletecriticalsection__ccomsafedeletecriticalsection)"},{"content":"The constructor.","pos":[1198,1214]},{"pos":[1219,1350],"content":"<bpt id=\"p1\">[</bpt>CComSafeDeleteCriticalSection::~CComSafeDeleteCriticalSection<ept id=\"p1\">](#ccomsafedeletecriticalsection___dtorccomsafedeletecriticalsection)</ept>","source":"[CComSafeDeleteCriticalSection::~CComSafeDeleteCriticalSection](#ccomsafedeletecriticalsection___dtorccomsafedeletecriticalsection)"},{"content":"The destructor.","pos":[1351,1366]},{"pos":[1377,1391],"content":"Public Methods","linkify":"Public Methods","nodes":[{"content":"Public Methods","pos":[0,14]}]},{"content":"Name","pos":[1398,1402]},{"content":"Description","pos":[1403,1414]},{"pos":[1452,1527],"content":"<bpt id=\"p1\">[</bpt>CComSafeDeleteCriticalSection::Init<ept id=\"p1\">](#ccomsafedeletecriticalsection__init)</ept>","source":"[CComSafeDeleteCriticalSection::Init](#ccomsafedeletecriticalsection__init)"},{"content":"Creates and initializes a critical section object.","pos":[1528,1578]},{"pos":[1583,1658],"content":"<bpt id=\"p1\">[</bpt>CComSafeDeleteCriticalSection::Lock<ept id=\"p1\">](#ccomsafedeletecriticalsection__lock)</ept>","source":"[CComSafeDeleteCriticalSection::Lock](#ccomsafedeletecriticalsection__lock)"},{"content":"Obtains ownership of the critical section object.","pos":[1659,1708]},{"pos":[1713,1788],"content":"<bpt id=\"p1\">[</bpt>CComSafeDeleteCriticalSection::Term<ept id=\"p1\">](#ccomsafedeletecriticalsection__term)</ept>","source":"[CComSafeDeleteCriticalSection::Term](#ccomsafedeletecriticalsection__term)"},{"content":"Releases system resources used by the critical section object.","pos":[1789,1851]},{"pos":[1862,1874],"content":"Data Members","linkify":"Data Members","nodes":[{"content":"Data Members","pos":[0,12]}]},{"pos":[1895,1959],"content":"<bpt id=\"p1\">[</bpt>m_bInitialized<ept id=\"p1\">](#ccomsafedeletecriticalsection__m_binitialized)</ept>","source":"[m_bInitialized](#ccomsafedeletecriticalsection__m_binitialized)"},{"pos":[1960,2036],"content":"Flags whether the internal <bpt id=\"p1\">**</bpt>CRITICAL_SECTION<ept id=\"p1\">**</ept> object has been initialized.","source":"Flags whether the internal **CRITICAL_SECTION** object has been initialized."},{"pos":[2046,2053],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"<ph id=\"ph1\">`CComSafeDeleteCriticalSection`</ph> derives from the class <bpt id=\"p1\">[</bpt>CComCriticalSection<ept id=\"p1\">](../../atl/reference/ccomcriticalsection-class.md)</ept>.","pos":[2057,2184],"source":"`CComSafeDeleteCriticalSection` derives from the class [CComCriticalSection](../../atl/reference/ccomcriticalsection-class.md)."},{"content":"However, <ph id=\"ph1\">`CComSafeDeleteCriticalSection`</ph> provides additional safety mechanisms over <bpt id=\"p1\">[</bpt>CComCriticalSection<ept id=\"p1\">](../../atl/reference/ccomcriticalsection-class.md)</ept>.","pos":[2185,2341],"source":" However, `CComSafeDeleteCriticalSection` provides additional safety mechanisms over [CComCriticalSection](../../atl/reference/ccomcriticalsection-class.md)."},{"content":"When an instance of <ph id=\"ph1\">`CComSafeDeleteCriticalSection`</ph> goes out of scope or is explicitly deleted from memory, the underlying critical section object will automatically be cleaned up if it is still valid.","pos":[2348,2549],"source":"When an instance of `CComSafeDeleteCriticalSection` goes out of scope or is explicitly deleted from memory, the underlying critical section object will automatically be cleaned up if it is still valid."},{"content":"In addition, the <bpt id=\"p1\">[</bpt>CComSafeDeleteCriticalSection::Term<ept id=\"p1\">](#ccomsafedeletecriticalsection__term)</ept> method will exit gracefully if the underlying critical section object has not yet been allocated or has already been released from memory.","pos":[2550,2781],"source":" In addition, the [CComSafeDeleteCriticalSection::Term](#ccomsafedeletecriticalsection__term) method will exit gracefully if the underlying critical section object has not yet been allocated or has already been released from memory."},{"pos":[2788,2920],"content":"See <bpt id=\"p1\">[</bpt>CComCriticalSection<ept id=\"p1\">](../../atl/reference/ccomcriticalsection-class.md)</ept> for more information on critical section helper classes.","source":"See [CComCriticalSection](../../atl/reference/ccomcriticalsection-class.md) for more information on critical section helper classes."},{"pos":[2929,2950],"content":"Inheritance Hierarchy","linkify":"Inheritance Hierarchy","nodes":[{"content":"Inheritance Hierarchy","pos":[0,21]}]},{"pos":[2954,3025],"content":"<bpt id=\"p1\">[</bpt>CComCriticalSection<ept id=\"p1\">](../../atl/reference/ccomcriticalsection-class.md)</ept>","source":"[CComCriticalSection](../../atl/reference/ccomcriticalsection-class.md)"},{"pos":[3072,3084],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[3088,3109],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> atlcore.h","source":"**Header:** atlcore.h"},{"pos":[3119,3256],"content":"<bpt id=\"p1\">&lt;a name=\"ccomsafedeletecriticalsection__ccomsafedeletecriticalsection\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CComSafeDeleteCriticalSection::CComSafeDeleteCriticalSection","linkify":"<a name=\"ccomsafedeletecriticalsection__ccomsafedeletecriticalsection\"></a>  CComSafeDeleteCriticalSection::CComSafeDeleteCriticalSection","source":"<a name=\"ccomsafedeletecriticalsection__ccomsafedeletecriticalsection\"></a>  CComSafeDeleteCriticalSection::CComSafeDeleteCriticalSection"},{"content":"The constructor.","pos":[3260,3276]},{"pos":[3332,3339],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[3343,3442],"content":"Sets the <bpt id=\"p1\">[</bpt>m_bInitialized<ept id=\"p1\">](#ccomsafedeletecriticalsection__m_binitialized)</ept> data member to <bpt id=\"p2\">**</bpt>false<ept id=\"p2\">**</ept>.","source":"Sets the [m_bInitialized](#ccomsafedeletecriticalsection__m_binitialized) data member to **false**."},{"pos":[3452,3595],"content":"<bpt id=\"p1\">&lt;a name=\"ccomsafedeletecriticalsection___dtorccomsafedeletecriticalsection\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CComSafeDeleteCriticalSection::~CComSafeDeleteCriticalSection","linkify":"<a name=\"ccomsafedeletecriticalsection___dtorccomsafedeletecriticalsection\"></a>  CComSafeDeleteCriticalSection::~CComSafeDeleteCriticalSection","source":"<a name=\"ccomsafedeletecriticalsection___dtorccomsafedeletecriticalsection\"></a>  CComSafeDeleteCriticalSection::~CComSafeDeleteCriticalSection"},{"content":"The destructor.","pos":[3599,3614]},{"pos":[3679,3686],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[3690,3855],"content":"Releases the internal <bpt id=\"p1\">**</bpt>CRITICAL_SECTION<ept id=\"p1\">**</ept> object from memory if the <bpt id=\"p2\">[</bpt>m_bInitialized<ept id=\"p2\">](#ccomsafedeletecriticalsection__m_binitialized)</ept> data member is set to <bpt id=\"p3\">**</bpt>true<ept id=\"p3\">**</ept>.","source":"Releases the internal **CRITICAL_SECTION** object from memory if the [m_bInitialized](#ccomsafedeletecriticalsection__m_binitialized) data member is set to **true**."},{"pos":[3865,3952],"content":"<bpt id=\"p1\">&lt;a name=\"ccomsafedeletecriticalsection__init\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CComSafeDeleteCriticalSection::Init","linkify":"<a name=\"ccomsafedeletecriticalsection__init\"></a>  CComSafeDeleteCriticalSection::Init","source":"<a name=\"ccomsafedeletecriticalsection__init\"></a>  CComSafeDeleteCriticalSection::Init"},{"pos":[3956,4131],"content":"Calls the base class implementation of <bpt id=\"p1\">[</bpt>Init<ept id=\"p1\">](/visualstudio/debugger/init)</ept> and sets <bpt id=\"p2\">[</bpt>m_bInitialized<ept id=\"p2\">](#ccomsafedeletecriticalsection__m_binitialized)</ept> to <bpt id=\"p3\">**</bpt>true<ept id=\"p3\">**</ept> if successful.","source":"Calls the base class implementation of [Init](/visualstudio/debugger/init) and sets [m_bInitialized](#ccomsafedeletecriticalsection__m_binitialized) to **true** if successful."},{"pos":[4178,4190],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[4194,4320],"content":"Returns the result of <bpt id=\"p1\">[</bpt>CComCriticalSection::Init<ept id=\"p1\">](../../atl/reference/ccomcriticalsection-class.md#ccomcriticalsection__init)</ept>.","source":"Returns the result of [CComCriticalSection::Init](../../atl/reference/ccomcriticalsection-class.md#ccomcriticalsection__init)."},{"pos":[4330,4417],"content":"<bpt id=\"p1\">&lt;a name=\"ccomsafedeletecriticalsection__lock\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CComSafeDeleteCriticalSection::Lock","linkify":"<a name=\"ccomsafedeletecriticalsection__lock\"></a>  CComSafeDeleteCriticalSection::Lock","source":"<a name=\"ccomsafedeletecriticalsection__lock\"></a>  CComSafeDeleteCriticalSection::Lock"},{"pos":[4420,4522],"content":"Calls the base class implementation of <bpt id=\"p1\">[</bpt>Lock<ept id=\"p1\">](ccomcriticalsection-class.md#ccomcriticalsection__lock)</ept>.","source":"Calls the base class implementation of [Lock](ccomcriticalsection-class.md#ccomcriticalsection__lock)."},{"pos":[4562,4574],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[4578,4704],"content":"Returns the result of <bpt id=\"p1\">[</bpt>CComCriticalSection::Lock<ept id=\"p1\">](../../atl/reference/ccomcriticalsection-class.md#ccomcriticalsection__lock)</ept>.","source":"Returns the result of [CComCriticalSection::Lock](../../atl/reference/ccomcriticalsection-class.md#ccomcriticalsection__lock)."},{"pos":[4714,4721],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This method assumes the <bpt id=\"p1\">[</bpt>m_bInitialized<ept id=\"p1\">](#ccomsafedeletecriticalsection__m_binitialized)</ept> data member is set to <bpt id=\"p2\">**</bpt>true<ept id=\"p2\">**</ept> upon entry.","pos":[4725,4856],"source":"This method assumes the [m_bInitialized](#ccomsafedeletecriticalsection__m_binitialized) data member is set to **true** upon entry."},{"content":"An assertion is generated in Debug builds if this condidtion is not met.","pos":[4857,4929]},{"pos":[4936,5103],"content":"For more information on the behavior of the function, refer to <bpt id=\"p1\">[</bpt>CComCriticalSection::Lock<ept id=\"p1\">](../../atl/reference/ccomcriticalsection-class.md#ccomcriticalsection__lock)</ept>.","source":"For more information on the behavior of the function, refer to [CComCriticalSection::Lock](../../atl/reference/ccomcriticalsection-class.md#ccomcriticalsection__lock)."},{"pos":[5113,5220],"content":"<bpt id=\"p1\">&lt;a name=\"ccomsafedeletecriticalsection__m_binitialized\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CComSafeDeleteCriticalSection::m_bInitialized","linkify":"<a name=\"ccomsafedeletecriticalsection__m_binitialized\"></a>  CComSafeDeleteCriticalSection::m_bInitialized","source":"<a name=\"ccomsafedeletecriticalsection__m_binitialized\"></a>  CComSafeDeleteCriticalSection::m_bInitialized"},{"pos":[5224,5300],"content":"Flags whether the internal <bpt id=\"p1\">**</bpt>CRITICAL_SECTION<ept id=\"p1\">**</ept> object has been initialized.","source":"Flags whether the internal **CRITICAL_SECTION** object has been initialized."},{"pos":[5344,5351],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The <bpt id=\"p1\">**</bpt>m_bInitialized<ept id=\"p1\">**</ept> data member is used to track validity of the underlying <bpt id=\"p2\">**</bpt>CRITICAL_SECTION<ept id=\"p2\">**</ept> object associated with the <bpt id=\"p3\">[</bpt>CComSafeDeleteCriticalSection<ept id=\"p3\">](../../atl/reference/ccomsafedeletecriticalsection-class.md)</ept> class.","pos":[5355,5580],"source":"The **m_bInitialized** data member is used to track validity of the underlying **CRITICAL_SECTION** object associated with the [CComSafeDeleteCriticalSection](../../atl/reference/ccomsafedeletecriticalsection-class.md) class."},{"content":"The underlying <bpt id=\"p1\">**</bpt>CRITICAL_SECTION<ept id=\"p1\">**</ept> object will not be attempted to be released from memory if this flag is not set to <bpt id=\"p2\">**</bpt>true<ept id=\"p2\">**</ept>.","pos":[5581,5709],"source":" The underlying **CRITICAL_SECTION** object will not be attempted to be released from memory if this flag is not set to **true**."},{"pos":[5719,5806],"content":"<bpt id=\"p1\">&lt;a name=\"ccomsafedeletecriticalsection__term\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CComSafeDeleteCriticalSection::Term","linkify":"<a name=\"ccomsafedeletecriticalsection__term\"></a>  CComSafeDeleteCriticalSection::Term","source":"<a name=\"ccomsafedeletecriticalsection__term\"></a>  CComSafeDeleteCriticalSection::Term"},{"pos":[5810,6006],"content":"Calls the base class implementation of <bpt id=\"p1\">[</bpt>CComCriticalSection::Term<ept id=\"p1\">](../../atl/reference/ccomcriticalsection-class.md#ccomcriticalsection__term)</ept> if the internal <bpt id=\"p2\">**</bpt>CRITICAL_SECTION<ept id=\"p2\">**</ept> object is valid.","source":"Calls the base class implementation of [CComCriticalSection::Term](../../atl/reference/ccomcriticalsection-class.md#ccomcriticalsection__term) if the internal **CRITICAL_SECTION** object is valid."},{"pos":[6053,6065],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[6069,6308],"content":"Returns the result of <bpt id=\"p1\">[</bpt>CComCriticalSection::Term<ept id=\"p1\">](../../atl/reference/ccomcriticalsection-class.md#ccomcriticalsection__term)</ept>, or <bpt id=\"p2\">**</bpt>S_OK<ept id=\"p2\">**</ept> if <bpt id=\"p3\">[</bpt>m_bInitialized<ept id=\"p3\">](#ccomsafedeletecriticalsection__m_binitialized)</ept> was set to <bpt id=\"p4\">**</bpt>false<ept id=\"p4\">**</ept> upon entry.","source":"Returns the result of [CComCriticalSection::Term](../../atl/reference/ccomcriticalsection-class.md#ccomcriticalsection__term), or **S_OK** if [m_bInitialized](#ccomsafedeletecriticalsection__m_binitialized) was set to **false** upon entry."},{"pos":[6318,6325],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"It is safe to call this method even if the internal <bpt id=\"p1\">**</bpt>CRITICAL_SECTION<ept id=\"p1\">**</ept> object is not valid.","pos":[6329,6422],"source":"It is safe to call this method even if the internal **CRITICAL_SECTION** object is not valid."},{"content":"The destructor of this class calls this method if the <bpt id=\"p1\">[</bpt>m_bInitialized<ept id=\"p1\">](#ccomsafedeletecriticalsection__m_binitialized)</ept> data member is set to <bpt id=\"p2\">**</bpt>true<ept id=\"p2\">**</ept>.","pos":[6423,6573],"source":" The destructor of this class calls this method if the [m_bInitialized](#ccomsafedeletecriticalsection__m_binitialized) data member is set to **true**."},{"pos":[6582,6590],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>CComCriticalSection Class<ept id=\"p1\">](../../atl/reference/ccomcriticalsection-class.md)</ept><ph id=\"ph1\"> </ph>","pos":[6594,6672],"source":"[CComCriticalSection Class](../../atl/reference/ccomcriticalsection-class.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Class Overview<ept id=\"p1\">](../../atl/atl-class-overview.md)</ept>","pos":[6675,6725],"source":" [Class Overview](../../atl/atl-class-overview.md)"}],"content":"---\ntitle: \"CComSafeDeleteCriticalSection Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"CComSafeDeleteCriticalSection\"\n  - \"ATL::CComSafeDeleteCriticalSection\"\n  - \"ATL.CComSafeDeleteCriticalSection\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"CComSafeDeleteCriticalSection class\"\nms.assetid: 4d2932c4-ba8f-48ec-8664-1db8bed01314\ncaps.latest.revision: 18\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# CComSafeDeleteCriticalSection Class\nThis class provides methods for obtaining and releasing ownership of a critical section object.  \n  \n## Syntax  \n  \n```\nclass CComSafeDeleteCriticalSection : public CComCriticalSection\n```  \n  \n## Members  \n  \n### Public Constructors  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CComSafeDeleteCriticalSection::CComSafeDeleteCriticalSection](#ccomsafedeletecriticalsection__ccomsafedeletecriticalsection)|The constructor.|  \n|[CComSafeDeleteCriticalSection::~CComSafeDeleteCriticalSection](#ccomsafedeletecriticalsection___dtorccomsafedeletecriticalsection)|The destructor.|  \n  \n### Public Methods  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CComSafeDeleteCriticalSection::Init](#ccomsafedeletecriticalsection__init)|Creates and initializes a critical section object.|  \n|[CComSafeDeleteCriticalSection::Lock](#ccomsafedeletecriticalsection__lock)|Obtains ownership of the critical section object.|  \n|[CComSafeDeleteCriticalSection::Term](#ccomsafedeletecriticalsection__term)|Releases system resources used by the critical section object.|  \n  \n### Data Members  \n  \n|||  \n|-|-|  \n|[m_bInitialized](#ccomsafedeletecriticalsection__m_binitialized)|Flags whether the internal **CRITICAL_SECTION** object has been initialized.|  \n  \n## Remarks  \n `CComSafeDeleteCriticalSection` derives from the class [CComCriticalSection](../../atl/reference/ccomcriticalsection-class.md). However, `CComSafeDeleteCriticalSection` provides additional safety mechanisms over [CComCriticalSection](../../atl/reference/ccomcriticalsection-class.md).  \n  \n When an instance of `CComSafeDeleteCriticalSection` goes out of scope or is explicitly deleted from memory, the underlying critical section object will automatically be cleaned up if it is still valid. In addition, the [CComSafeDeleteCriticalSection::Term](#ccomsafedeletecriticalsection__term) method will exit gracefully if the underlying critical section object has not yet been allocated or has already been released from memory.  \n  \n See [CComCriticalSection](../../atl/reference/ccomcriticalsection-class.md) for more information on critical section helper classes.  \n  \n## Inheritance Hierarchy  \n [CComCriticalSection](../../atl/reference/ccomcriticalsection-class.md)  \n  \n `CComSafeDeleteCriticalSection`  \n  \n## Requirements  \n **Header:** atlcore.h  \n  \n##  <a name=\"ccomsafedeletecriticalsection__ccomsafedeletecriticalsection\"></a>  CComSafeDeleteCriticalSection::CComSafeDeleteCriticalSection  \n The constructor.  \n  \n```\nCComSafeDeleteCriticalSection();\n```  \n  \n### Remarks  \n Sets the [m_bInitialized](#ccomsafedeletecriticalsection__m_binitialized) data member to **false**.  \n  \n##  <a name=\"ccomsafedeletecriticalsection___dtorccomsafedeletecriticalsection\"></a>  CComSafeDeleteCriticalSection::~CComSafeDeleteCriticalSection  \n The destructor.  \n  \n```\n~CComSafeDeleteCriticalSection() throw();\n```  \n  \n### Remarks  \n Releases the internal **CRITICAL_SECTION** object from memory if the [m_bInitialized](#ccomsafedeletecriticalsection__m_binitialized) data member is set to **true**.  \n  \n##  <a name=\"ccomsafedeletecriticalsection__init\"></a>  CComSafeDeleteCriticalSection::Init  \n Calls the base class implementation of [Init](/visualstudio/debugger/init) and sets [m_bInitialized](#ccomsafedeletecriticalsection__m_binitialized) to **true** if successful.  \n  \n```\nHRESULT Init() throw();\n```  \n  \n### Return Value  \n Returns the result of [CComCriticalSection::Init](../../atl/reference/ccomcriticalsection-class.md#ccomcriticalsection__init).  \n  \n##  <a name=\"ccomsafedeletecriticalsection__lock\"></a>  CComSafeDeleteCriticalSection::Lock  \nCalls the base class implementation of [Lock](ccomcriticalsection-class.md#ccomcriticalsection__lock).  \n\n  \n```\nHRESULT Lock();\n```  \n  \n### Return Value  \n Returns the result of [CComCriticalSection::Lock](../../atl/reference/ccomcriticalsection-class.md#ccomcriticalsection__lock).  \n  \n### Remarks  \n This method assumes the [m_bInitialized](#ccomsafedeletecriticalsection__m_binitialized) data member is set to **true** upon entry. An assertion is generated in Debug builds if this condidtion is not met.  \n  \n For more information on the behavior of the function, refer to [CComCriticalSection::Lock](../../atl/reference/ccomcriticalsection-class.md#ccomcriticalsection__lock).  \n  \n##  <a name=\"ccomsafedeletecriticalsection__m_binitialized\"></a>  CComSafeDeleteCriticalSection::m_bInitialized  \n Flags whether the internal **CRITICAL_SECTION** object has been initialized.  \n  \n```\nbool m_bInitialized;\n```  \n  \n### Remarks  \n The **m_bInitialized** data member is used to track validity of the underlying **CRITICAL_SECTION** object associated with the [CComSafeDeleteCriticalSection](../../atl/reference/ccomsafedeletecriticalsection-class.md) class. The underlying **CRITICAL_SECTION** object will not be attempted to be released from memory if this flag is not set to **true**.  \n  \n##  <a name=\"ccomsafedeletecriticalsection__term\"></a>  CComSafeDeleteCriticalSection::Term  \n Calls the base class implementation of [CComCriticalSection::Term](../../atl/reference/ccomcriticalsection-class.md#ccomcriticalsection__term) if the internal **CRITICAL_SECTION** object is valid.  \n  \n```\nHRESULT Term() throw();\n```  \n  \n### Return Value  \n Returns the result of [CComCriticalSection::Term](../../atl/reference/ccomcriticalsection-class.md#ccomcriticalsection__term), or **S_OK** if [m_bInitialized](#ccomsafedeletecriticalsection__m_binitialized) was set to **false** upon entry.  \n  \n### Remarks  \n It is safe to call this method even if the internal **CRITICAL_SECTION** object is not valid. The destructor of this class calls this method if the [m_bInitialized](#ccomsafedeletecriticalsection__m_binitialized) data member is set to **true**.  \n  \n## See Also  \n [CComCriticalSection Class](../../atl/reference/ccomcriticalsection-class.md)   \n [Class Overview](../../atl/atl-class-overview.md)\n"}