{"nodes":[{"pos":[12,64],"content":"Windows Sockets: Converting Strings | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Windows Sockets: Converting Strings | Microsoft Docs","pos":[0,52]}]},{"content":"Windows Sockets: Converting Strings","pos":[753,788]},{"content":"This article and two companion articles explain several issues in Windows Sockets programming.","pos":[789,883]},{"content":"This article covers converting strings.","pos":[884,923]},{"content":"The other issues are covered in <bpt id=\"p1\">[</bpt>Windows Sockets: Blocking<ept id=\"p1\">](../mfc/windows-sockets-blocking.md)</ept> and <bpt id=\"p2\">[</bpt>Windows Sockets: Byte Ordering<ept id=\"p2\">](../mfc/windows-sockets-byte-ordering.md)</ept>.","pos":[924,1098],"source":" The other issues are covered in [Windows Sockets: Blocking](../mfc/windows-sockets-blocking.md) and [Windows Sockets: Byte Ordering](../mfc/windows-sockets-byte-ordering.md)."},{"content":"If you use or derive from class <bpt id=\"p1\">[</bpt>CAsyncSocket<ept id=\"p1\">](../mfc/reference/casyncsocket-class.md)</ept>, you will need to manage these issues yourself.","pos":[1105,1239],"source":"If you use or derive from class [CAsyncSocket](../mfc/reference/casyncsocket-class.md), you will need to manage these issues yourself."},{"content":"If you use or derive from class <bpt id=\"p1\">[</bpt>CSocket<ept id=\"p1\">](../mfc/reference/csocket-class.md)</ept>, MFC manages them for you.","pos":[1240,1343],"source":" If you use or derive from class [CSocket](../mfc/reference/csocket-class.md), MFC manages them for you."},{"content":"Converting Strings","pos":[1352,1370]},{"content":"If you communicate between applications that use strings stored in different wide-character formats, such as Unicode or multibyte character sets (MBCS), or between one of these and an application using ANSI character strings, you must manage the conversions yourself under <ph id=\"ph1\">`CAsyncSocket`</ph>.","pos":[1374,1662],"source":"If you communicate between applications that use strings stored in different wide-character formats, such as Unicode or multibyte character sets (MBCS), or between one of these and an application using ANSI character strings, you must manage the conversions yourself under `CAsyncSocket`."},{"content":"The <ph id=\"ph1\">`CArchive`</ph> object used with a <ph id=\"ph2\">`CSocket`</ph> object manages this conversion for you through the capabilities of class <bpt id=\"p1\">[</bpt>CString<ept id=\"p1\">](../atl-mfc-shared/reference/cstringt-class.md)</ept>.","pos":[1663,1837],"source":" The `CArchive` object used with a `CSocket` object manages this conversion for you through the capabilities of class [CString](../atl-mfc-shared/reference/cstringt-class.md)."},{"content":"For more information, see the Windows Sockets specification, located in the <ph id=\"ph1\">[!INCLUDE[winSDK](../atl/includes/winsdk_md.md)]</ph>.","pos":[1838,1963],"source":" For more information, see the Windows Sockets specification, located in the [!INCLUDE[winSDK](../atl/includes/winsdk_md.md)]."},{"content":"For more information, see:","pos":[1970,1996]},{"content":"Windows Sockets: Using Class CAsyncSocket","pos":[2007,2048]},{"content":"Windows Sockets: Using Sockets with Archives","pos":[2112,2156]},{"content":"Windows Sockets: Background","pos":[2223,2250]},{"content":"Windows Sockets: Stream Sockets","pos":[2300,2331]},{"content":"Windows Sockets: Datagram Sockets","pos":[2385,2418]},{"content":"See Also","pos":[2472,2480]},{"content":"Windows Sockets in MFC","pos":[2485,2507]}],"content":"---\ntitle: \"Windows Sockets: Converting Strings | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"Windows Sockets [C++], multibyte character string conversion\"\n  - \"sockets [C++], multibyte character string conversion issues\"\n  - \"string conversion, multibyte character strings\"\nms.assetid: 9df522b5-6b23-41e0-bb96-e4e623baf141\ncaps.latest.revision: 11\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Windows Sockets: Converting Strings\nThis article and two companion articles explain several issues in Windows Sockets programming. This article covers converting strings. The other issues are covered in [Windows Sockets: Blocking](../mfc/windows-sockets-blocking.md) and [Windows Sockets: Byte Ordering](../mfc/windows-sockets-byte-ordering.md).  \n  \n If you use or derive from class [CAsyncSocket](../mfc/reference/casyncsocket-class.md), you will need to manage these issues yourself. If you use or derive from class [CSocket](../mfc/reference/csocket-class.md), MFC manages them for you.  \n  \n## Converting Strings  \n If you communicate between applications that use strings stored in different wide-character formats, such as Unicode or multibyte character sets (MBCS), or between one of these and an application using ANSI character strings, you must manage the conversions yourself under `CAsyncSocket`. The `CArchive` object used with a `CSocket` object manages this conversion for you through the capabilities of class [CString](../atl-mfc-shared/reference/cstringt-class.md). For more information, see the Windows Sockets specification, located in the [!INCLUDE[winSDK](../atl/includes/winsdk_md.md)].  \n  \n For more information, see:  \n  \n-   [Windows Sockets: Using Class CAsyncSocket](../mfc/windows-sockets-using-class-casyncsocket.md)  \n  \n-   [Windows Sockets: Using Sockets with Archives](../mfc/windows-sockets-using-sockets-with-archives.md)  \n  \n-   [Windows Sockets: Background](../mfc/windows-sockets-background.md)  \n  \n-   [Windows Sockets: Stream Sockets](../mfc/windows-sockets-stream-sockets.md)  \n  \n-   [Windows Sockets: Datagram Sockets](../mfc/windows-sockets-datagram-sockets.md)  \n  \n## See Also  \n [Windows Sockets in MFC](../mfc/windows-sockets-in-mfc.md)\n\n"}