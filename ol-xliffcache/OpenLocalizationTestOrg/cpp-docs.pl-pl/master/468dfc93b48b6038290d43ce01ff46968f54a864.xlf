<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="pl-pl">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-04506c2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">468dfc93b48b6038290d43ce01ff46968f54a864</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\cpp\main-program-startup.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">18cf9f18ed98df2e97bff99ffc1c9a4610730206</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ab0a8d0a6142e483233551ebfbe1bb837122a42c</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>main: Program Startup | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>main: Program Startup</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>A special function named <ph id="ph1">`main`</ph> is the starting point of execution for all C and <ph id="ph2">[!INCLUDE[TLA#tla_cpp](../cpp/includes/tlasharptla_cpp_md.md)]</ph> programs.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>If you are writing code that adheres to the <ph id="ph1">[!INCLUDE[TLA#tla_unicode](../atl-mfc-shared/reference/includes/tlasharptla_unicode_md.md)]</ph> programming model, you can use <ph id="ph2">`wmain`</ph>, which is the wide-character version of <ph id="ph3">`main`</ph>.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`main`</ph> function is not predefined by the compiler.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>It must be supplied in the program text.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The declaration syntax for <ph id="ph1">`main`</ph> is</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>or, optionally,</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Microsoft Specific</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The declaration syntax for <ph id="ph1">`wmain`</ph> is as follows:</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>or, optionally,</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>You can also use <ph id="ph1">`_tmain`</ph>, which is defined in TCHAR.h.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>resolves to <ph id="ph1">`main`</ph> unless _UNICODE is defined.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>In that case, <ph id="ph1">`_tmain`</ph> resolves to <ph id="ph2">`wmain`</ph>.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Alternatively, the <ph id="ph1">`main`</ph> and <ph id="ph2">`wmain`</ph> functions can be declared as returning <ph id="ph3">`void`</ph> (no return value).</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>If you declare <ph id="ph1">`main`</ph> or <ph id="ph2">`wmain`</ph> as returning <ph id="ph3">`void`</ph>, you cannot return an exit code to the parent process or operating system by using a <bpt id="p1">[</bpt>return<ept id="p1">](../cpp/return-statement-in-program-termination-cpp.md)</ept> statement.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>To return an exit code when <ph id="ph1">`main`</ph> or <ph id="ph2">`wmain`</ph> is declared as <ph id="ph3">`void`</ph>, you must use the <bpt id="p1">[</bpt>exit<ept id="p1">](../cpp/exit-function.md)</ept> function.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>END Microsoft Specific</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The types for <ph id="ph1">`argc`</ph> and <ph id="ph2">`argv`</ph> are defined by the language.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The names <ph id="ph1">`argc`</ph>, <ph id="ph2">`argv`</ph>, and <ph id="ph3">`envp`</ph> are traditional, but are not required by the compiler.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>For more information and an example, see <bpt id="p1">[</bpt>Argument Definitions<ept id="p1">](../cpp/argument-definitions.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Keywords</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Using wmain Instead of main</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>main Function Restrictions</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>