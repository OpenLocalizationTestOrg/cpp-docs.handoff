{"nodes":[{"pos":[12,61],"content":"stack::const_reference (STL-CLR) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"stack::const_reference (STL-CLR) | Microsoft Docs","pos":[0,49]}]},{"content":"stack::const_reference (STL/CLR)","pos":[656,688]},{"content":"The type of a constant reference to an element.","pos":[689,736]},{"content":"Syntax","pos":[745,751]},{"content":"Remarks","pos":[814,821]},{"content":"The type describes a constant reference to an element.","pos":[825,879]},{"content":"Example","pos":[888,895]},{"content":"Requirements","pos":[1510,1522]},{"pos":[1526,1553],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> <ph id=\"ph1\">\\&lt;</ph>cliext/stack&gt;","source":"**Header:** \\<cliext/stack>"},{"pos":[1560,1581],"content":"<bpt id=\"p1\">**</bpt>Namespace:<ept id=\"p1\">**</ept> cliext","source":"**Namespace:** cliext"},{"content":"See Also","pos":[1590,1598]},{"content":"stack (STL/CLR)","pos":[1603,1618]},{"content":"stack::reference (STL/CLR)","pos":[1653,1679]},{"content":"stack::value_type (STL/CLR)","pos":[1724,1751]}],"content":"---\ntitle: \"stack::const_reference (STL-CLR) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"cliext::stack::const_reference\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"const_reference member [STL/CLR]\"\nms.assetid: 36be8e21-f2b8-4c2e-a00e-276e73f0d802\ncaps.latest.revision: 14\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# stack::const_reference (STL/CLR)\nThe type of a constant reference to an element.  \n  \n## Syntax  \n  \n```  \ntypedef value_type% const_reference;  \n```  \n  \n## Remarks  \n The type describes a constant reference to an element.  \n  \n## Example  \n  \n```  \n// cliext_stack_const_reference.cpp   \n// compile with: /clr   \n#include <cliext/stack>   \n  \ntypedef cliext::stack<wchar_t> Mystack;   \nint main()   \n    {   \n    Mystack c1;   \n    c1.push(L'a');   \n    c1.push(L'b');   \n    c1.push(L'c');   \n  \n// display reversed contents \" c b a\"   \n    for (; !c1.empty(); c1.pop())   \n        {   // get a const reference to an element   \n        Mystack::const_reference cref = c1.top();   \n        System::Console::Write(\" {0}\", cref);   \n        }   \n    System::Console::WriteLine();   \n    return (0);   \n    }  \n  \n```  \n  \n```Output  \nc b a  \n```  \n  \n## Requirements  \n **Header:** \\<cliext/stack>  \n  \n **Namespace:** cliext  \n  \n## See Also  \n [stack (STL/CLR)](../dotnet/stack-stl-clr.md)   \n [stack::reference (STL/CLR)](../dotnet/stack-reference-stl-clr.md)   \n [stack::value_type (STL/CLR)](../dotnet/stack-value-type-stl-clr.md)"}