{"nodes":[{"pos":[12,51],"content":"CDockingPanesRow Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"CDockingPanesRow Class | Microsoft Docs","pos":[0,39]}]},{"content":"CDockingPanesRow Class","pos":[622,644]},{"content":"Manages a list of panes that are located in the same horizontal or vertical row (column) of a dock site.","pos":[645,749]},{"content":"Syntax","pos":[758,764]},{"content":"Members","pos":[830,837]},{"content":"Public Constructors","pos":[847,866]},{"content":"Name","pos":[873,877]},{"content":"Description","pos":[878,889]},{"content":"Default constructor.","pos":[964,984]},{"content":"Public Methods","pos":[995,1009]},{"content":"Name","pos":[1016,1020]},{"content":"Description","pos":[1021,1032]},{"content":"CDockingPanesRow::AddPane","pos":[1071,1096]},{"content":"CDockingPanesRow::AddPaneFromRow","pos":[1132,1164]},{"content":"CDockingPanesRow::ArrangePanes","pos":[1207,1237]},{"content":"Arranges the panes in a row according to the specified margin and spacing parameters.","pos":[1272,1357]},{"content":"CDockingPanesRow::CalcFixedLayout","pos":[1363,1396]},{"content":"CDockingPanesRow::Create","pos":[1440,1464]},{"content":"CDockingPanesRow::ExpandStretchedPanes","pos":[1499,1537]},{"content":"CDockingPanesRow::ExpandStretchedPanesRect","pos":[1586,1628]},{"content":"CDockingPanesRow::FixupVirtualRects","pos":[1681,1716]},{"content":"CDockingPanesRow::GetAvailableLength","pos":[1762,1798]},{"content":"CDockingPanesRow::GetAvailableSpace","pos":[1845,1880]},{"content":"CDockingPanesRow::GetClientRect","pos":[1926,1957]},{"content":"CDockingPanesRow::GetDockSite","pos":[1999,2028]},{"content":"CDockingPanesRow::GetExtraSpace","pos":[2068,2099]},{"content":"CDockingPanesRow::GetGroupFromPane","pos":[2141,2175]},{"content":"CDockingPanesRow::GetID","pos":[2220,2243]},{"content":"CDockingPanesRow::GetMaxPaneSize","pos":[2277,2309]},{"content":"CDockingPanesRow::GetPaneCount","pos":[2352,2382]},{"content":"CDockingPanesRow::GetPaneList","pos":[2423,2452]},{"content":"CDockingPanesRow::GetRowAlignment","pos":[2492,2525]},{"content":"CDockingPanesRow::GetRowHeight","pos":[2569,2599]},{"content":"CDockingPanesRow::GetRowOffset","pos":[2640,2670]},{"content":"CDockingPanesRow::GetVisibleCount","pos":[2711,2744]},{"content":"CDockingPanesRow::GetWindowRect","pos":[2788,2819]},{"content":"CDockingPanesRow::HasPane","pos":[2861,2886]},{"content":"CDockingPanesRow::IsEmpty","pos":[2922,2947]},{"content":"CDockingPanesRow::IsExclusiveRow","pos":[2983,3015]},{"content":"CDockingPanesRow::IsHorizontal","pos":[3058,3088]},{"content":"CDockingPanesRow::IsVisible","pos":[3129,3156]},{"content":"CDockingPanesRow::Move","pos":[3194,3216]},{"content":"CDockingPanesRow::MovePane","pos":[3249,3275]},{"content":"CDockingPanesRow::OnResizePane","pos":[3312,3342]},{"content":"CDockingPanesRow::RedrawAll","pos":[3383,3410]},{"content":"CDockingPanesRow::RemovePane","pos":[3448,3476]},{"content":"CDockingPanesRow::ReplacePane","pos":[3515,3544]},{"content":"CDockingPanesRow::RepositionPanes","pos":[3584,3617]},{"content":"CDockingPanesRow::Resize","pos":[3661,3685]},{"content":"CDockingPanesRow::ResizeByPaneDivider","pos":[3720,3757]},{"content":"CDockingPanesRow::ScreenToClient","pos":[3805,3837]},{"content":"CDockingPanesRow::SetExtra","pos":[3880,3906]},{"content":"CDockingPanesRow::ShowDockSiteRow","pos":[3943,3976]},{"content":"CDockingPanesRow::ShowPane","pos":[4020,4046]},{"content":"CDockingPanesRow::UpdateVisibleState","pos":[4083,4119]},{"content":"Remarks","pos":[4170,4177]},{"pos":[4200,4252],"content":"objects are created internally by dock site objects."},{"content":"Example","pos":[4261,4268]},{"pos":[4272,4378],"content":"The following example demonstrates how to get a <ph id=\"ph1\">`CDockingPanesRow`</ph> object from a <ph id=\"ph2\">`CMFCAutoHideBar`</ph> object.","source":"The following example demonstrates how to get a `CDockingPanesRow` object from a `CMFCAutoHideBar` object."},{"pos":[4396,4416],"content":"NVC_MFC_RibbonApp#26"},{"content":"Inheritance Hierarchy","pos":[4493,4514]},{"content":"CObject","pos":[4519,4526]},{"content":"CDockingPanesRow","pos":[4573,4589]},{"content":"Requirements","pos":[4646,4658]},{"pos":[4662,4694],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> afxDockingPanesRow.h","source":"**Header:** afxDockingPanesRow.h"},{"pos":[4746,4771],"content":"CDockingPanesRow::AddPane"},{"content":"Parameters","pos":[5038,5048]},{"content":"[in]","pos":[5052,5056]},{"content":"[in]","pos":[5074,5078]},{"content":"[in]","pos":[5095,5099]},{"content":"[in]","pos":[5112,5116]},{"content":"Remarks","pos":[5137,5144]},{"pos":[5203,5235],"content":"CDockingPanesRow::AddPaneFromRow"},{"content":"Parameters","pos":[5451,5461]},{"content":"[in]","pos":[5465,5469]},{"content":"[in]","pos":[5487,5491]},{"content":"Remarks","pos":[5514,5521]},{"pos":[5578,5608],"content":"CDockingPanesRow::ArrangePanes"},{"content":"Arranges docking panes in a row according to the specified margin and spacing parameters.","pos":[5612,5701]},{"content":"Parameters","pos":[5791,5801]},{"content":"[in]","pos":[5805,5809]},{"content":"Specifies the offset, in pixels, of the first pane from the upper-left corner of the row.","pos":[5823,5912]},{"content":"[in]","pos":[5919,5923]},{"content":"Specifies the spacing, in pixels, between panes.","pos":[5938,5986]},{"content":"Remarks","pos":[5996,6003]},{"content":"Call this method to arrange panes in the row where they will dock.","pos":[6007,6073]},{"content":"After calling this method, you must call <ph id=\"ph1\">`CDockingPanesRow::FixupVirtualRects(FALSE, NULL)`</ph>.","pos":[6074,6166],"source":" After calling this method, you must call `CDockingPanesRow::FixupVirtualRects(FALSE, NULL)`."},{"pos":[6226,6259],"content":"CDockingPanesRow::CalcFixedLayout"},{"content":"Parameters","pos":[6456,6466]},{"content":"[in]","pos":[6470,6474]},{"content":"[in]","pos":[6489,6493]},{"content":"Return Value","pos":[6511,6523]},{"content":"Remarks","pos":[6533,6540]},{"pos":[6601,6635],"content":"CDockingPanesRow::CDockingPanesRow"},{"content":"Parameters","pos":[6851,6861]},{"content":"[in]","pos":[6865,6869]},{"content":"[in]","pos":[6890,6894]},{"content":"[in]","pos":[6908,6912]},{"content":"Remarks","pos":[6932,6939]},{"pos":[6990,7014],"content":"CDockingPanesRow::Create"},{"content":"Return Value","pos":[7165,7177]},{"content":"Remarks","pos":[7187,7194]},{"pos":[7259,7297],"content":"CDockingPanesRow::ExpandStretchedPanes"},{"content":"Remarks","pos":[7454,7461]},{"pos":[7530,7572],"content":"CDockingPanesRow::ExpandStretchedPanesRect"},{"content":"Remarks","pos":[7733,7740]},{"pos":[7802,7837],"content":"CDockingPanesRow::FixupVirtualRects"},{"content":"Parameters","pos":[8058,8068]},{"content":"[in]","pos":[8072,8076]},{"content":"[in]","pos":[8105,8109]},{"content":"Remarks","pos":[8135,8142]},{"pos":[8205,8241],"content":"CDockingPanesRow::GetAvailableLength"},{"content":"Parameters","pos":[8440,8450]},{"pos":[8454,8458],"content":"[in]"},{"content":"Return Value","pos":[8486,8498]},{"content":"Remarks","pos":[8508,8515]},{"pos":[8577,8612],"content":"CDockingPanesRow::GetAvailableSpace"},{"content":"Parameters","pos":[8785,8795]},{"pos":[8799,8803],"content":"[in]"},{"content":"Remarks","pos":[8820,8827]},{"pos":[8885,8916],"content":"CDockingPanesRow::GetClientRect"},{"content":"Parameters","pos":[9086,9096]},{"pos":[9100,9104],"content":"[in]"},{"content":"Remarks","pos":[9121,9128]},{"pos":[9184,9213],"content":"CDockingPanesRow::GetDockSite"},{"content":"Return Value","pos":[9376,9388]},{"content":"Remarks","pos":[9398,9405]},{"pos":[9463,9494],"content":"CDockingPanesRow::GetExtraSpace"},{"content":"Return Value","pos":[9652,9664]},{"content":"Remarks","pos":[9674,9681]},{"pos":[9742,9776],"content":"CDockingPanesRow::GetGroupFromPane"},{"content":"Parameters","pos":[9965,9975]},{"content":"[in]","pos":[9979,9983]},{"content":"[in]","pos":[9994,9998]},{"content":"Remarks","pos":[10014,10021]},{"pos":[10071,10094],"content":"CDockingPanesRow::GetID"},{"content":"Return Value","pos":[10244,10256]},{"content":"Remarks","pos":[10266,10273]},{"pos":[10332,10364],"content":"CDockingPanesRow::GetMaxPaneSize"},{"content":"Parameters","pos":[10550,10560]},{"pos":[10564,10568],"content":"[in]"},{"content":"Return Value","pos":[10596,10608]},{"content":"Remarks","pos":[10618,10625]},{"pos":[10682,10712],"content":"CDockingPanesRow::GetPaneCount"},{"content":"Return Value","pos":[10869,10881]},{"content":"Remarks","pos":[10891,10898]},{"pos":[10954,10983],"content":"CDockingPanesRow::GetPaneList"},{"content":"Return Value","pos":[11150,11162]},{"content":"Remarks","pos":[11172,11179]},{"pos":[11239,11272],"content":"CDockingPanesRow::GetRowAlignment"},{"content":"Return Value","pos":[11434,11446]},{"content":"Remarks","pos":[11456,11463]},{"pos":[11520,11550],"content":"CDockingPanesRow::GetRowHeight"},{"content":"Return Value","pos":[11707,11719]},{"content":"Remarks","pos":[11729,11736]},{"pos":[11793,11823],"content":"CDockingPanesRow::GetRowOffset"},{"content":"Return Value","pos":[11980,11992]},{"content":"Remarks","pos":[12002,12009]},{"pos":[12069,12102],"content":"CDockingPanesRow::GetVisibleCount"},{"content":"Return Value","pos":[12261,12273]},{"content":"Remarks","pos":[12283,12290]},{"pos":[12348,12379],"content":"CDockingPanesRow::GetWindowRect"},{"content":"Parameters","pos":[12549,12559]},{"pos":[12563,12567],"content":"[in]"},{"content":"Remarks","pos":[12584,12591]},{"pos":[12643,12668],"content":"CDockingPanesRow::HasPane"},{"content":"Parameters","pos":[12834,12844]},{"pos":[12848,12852],"content":"[in]"},{"content":"Return Value","pos":[12876,12888]},{"content":"Remarks","pos":[12898,12905]},{"pos":[12957,12982],"content":"CDockingPanesRow::IsEmpty"},{"content":"Return Value","pos":[13143,13155]},{"content":"Remarks","pos":[13165,13172]},{"pos":[13231,13263],"content":"CDockingPanesRow::IsExclusiveRow"},{"content":"Return Value","pos":[13431,13443]},{"content":"Remarks","pos":[13453,13460]},{"pos":[13517,13547],"content":"CDockingPanesRow::IsHorizontal"},{"content":"Return Value","pos":[13705,13717]},{"content":"Remarks","pos":[13727,13734]},{"pos":[13788,13815],"content":"CDockingPanesRow::IsVisible"},{"content":"Return Value","pos":[13978,13990]},{"content":"Remarks","pos":[14000,14007]},{"pos":[14056,14078],"content":"CDockingPanesRow::Move"},{"content":"Parameters","pos":[14238,14248]},{"pos":[14252,14256],"content":"[in]"},{"content":"Remarks","pos":[14276,14283]},{"pos":[14336,14362],"content":"CDockingPanesRow::MovePane"},{"content":"Parameters","pos":[14873,14883]},{"content":"[in]","pos":[14887,14891]},{"content":"[in]","pos":[14909,14913]},{"content":"[in]","pos":[14928,14932]},{"content":"[in]","pos":[14955,14959]},{"content":"[in]","pos":[14970,14974]},{"content":"[in]","pos":[14991,14995]},{"content":"[in]","pos":[15009,15013]},{"content":"[in]","pos":[15028,15032]},{"content":"Remarks","pos":[15059,15066]},{"pos":[15123,15153],"content":"CDockingPanesRow::OnResizePane"},{"content":"Parameters","pos":[15332,15342]},{"pos":[15346,15350],"content":"[in]"},{"content":"Remarks","pos":[15374,15381]},{"pos":[15435,15462],"content":"CDockingPanesRow::RedrawAll"},{"content":"Remarks","pos":[15608,15615]},{"pos":[15670,15698],"content":"CDockingPanesRow::RemovePane"},{"content":"Parameters","pos":[15871,15881]},{"pos":[15885,15889],"content":"[in]"},{"content":"Remarks","pos":[15913,15920]},{"pos":[15976,16005],"content":"CDockingPanesRow::ReplacePane"},{"content":"Parameters","pos":[16202,16212]},{"content":"[in]","pos":[16216,16220]},{"content":"[in]","pos":[16234,16238]},{"content":"Return Value","pos":[16258,16270]},{"content":"Remarks","pos":[16280,16287]},{"pos":[16347,16380],"content":"CDockingPanesRow::RepositionPanes"},{"content":"Parameters","pos":[16652,16662]},{"content":"[in]","pos":[16666,16670]},{"content":"[in]","pos":[16697,16701]},{"content":"[in]","pos":[16713,16717]},{"content":"[in]","pos":[16731,16735]},{"content":"Remarks","pos":[16755,16762]},{"pos":[16813,16837],"content":"CDockingPanesRow::Resize"},{"content":"Parameters","pos":[16998,17008]},{"pos":[17012,17016],"content":"[in]"},{"content":"Return Value","pos":[17036,17048]},{"content":"Remarks","pos":[17058,17065]},{"pos":[17129,17166],"content":"CDockingPanesRow::ResizeByPaneDivider"},{"content":"Parameters","pos":[17332,17342]},{"pos":[17346,17350],"content":"[in]"},{"content":"Return Value","pos":[17366,17378]},{"content":"Remarks","pos":[17388,17395]},{"pos":[17454,17486],"content":"CDockingPanesRow::ScreenToClient"},{"content":"Parameters","pos":[17657,17667]},{"pos":[17671,17675],"content":"[in]"},{"content":"Remarks","pos":[17692,17699]},{"pos":[17752,17778],"content":"CDockingPanesRow::SetExtra"},{"content":"Parameters","pos":[17982,17992]},{"content":"[in]","pos":[17996,18000]},{"content":"[in]","pos":[18018,18022]},{"content":"Remarks","pos":[18048,18055]},{"pos":[18115,18148],"content":"CDockingPanesRow::ShowDockSiteRow"},{"content":"Parameters","pos":[18342,18352]},{"content":"[in]","pos":[18356,18360]},{"content":"[in]","pos":[18372,18376]},{"content":"Remarks","pos":[18395,18402]},{"pos":[18455,18481],"content":"CDockingPanesRow::ShowPane"},{"content":"Parameters","pos":[18702,18712]},{"content":"[in]","pos":[18716,18720]},{"content":"[in]","pos":[18738,18742]},{"content":"[in]","pos":[18754,18758]},{"content":"Return Value","pos":[18777,18789]},{"content":"Remarks","pos":[18799,18806]},{"pos":[18869,18905],"content":"CDockingPanesRow::UpdateVisibleState"},{"content":"Parameters","pos":[19079,19089]},{"pos":[19093,19097],"content":"[in]"},{"content":"Remarks","pos":[19116,19123]},{"content":"See Also","pos":[19132,19140]},{"content":"Hierarchy Chart","pos":[19145,19160]},{"content":"Classes","pos":[19197,19204]},{"content":"CObject Class","pos":[19247,19260]},{"content":"CDockSite Class","pos":[19305,19320]},{"content":"CPane Class","pos":[19367,19378]}],"content":"---\ntitle: \"CDockingPanesRow Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"CDockingPanesRow\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"CDockingPanesRow class\"\nms.assetid: e7a17832-0ebb-4bce-b799-cec9b60f76fe\ncaps.latest.revision: 25\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# CDockingPanesRow Class\nManages a list of panes that are located in the same horizontal or vertical row (column) of a dock site.  \n  \n## Syntax  \n  \n```  \nclass CDockingPanesRow : public CObject  \n```  \n  \n## Members  \n  \n### Public Constructors  \n  \n|Name|Description|  \n|----------|-----------------|  \n|`CDockingPanesRow::CDockingPanesRow`|Default constructor.|  \n  \n### Public Methods  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CDockingPanesRow::AddPane](#cdockingpanesrow__addpane)||  \n|[CDockingPanesRow::AddPaneFromRow](#cdockingpanesrow__addpanefromrow)||  \n|[CDockingPanesRow::ArrangePanes](#cdockingpanesrow__arrangepanes)|Arranges the panes in a row according to the specified margin and spacing parameters.|  \n|[CDockingPanesRow::CalcFixedLayout](#cdockingpanesrow__calcfixedlayout)||  \n|[CDockingPanesRow::Create](#cdockingpanesrow__create)||  \n|[CDockingPanesRow::ExpandStretchedPanes](#cdockingpanesrow__expandstretchedpanes)||  \n|[CDockingPanesRow::ExpandStretchedPanesRect](#cdockingpanesrow__expandstretchedpanesrect)||  \n|[CDockingPanesRow::FixupVirtualRects](#cdockingpanesrow__fixupvirtualrects)||  \n|[CDockingPanesRow::GetAvailableLength](#cdockingpanesrow__getavailablelength)||  \n|[CDockingPanesRow::GetAvailableSpace](#cdockingpanesrow__getavailablespace)||  \n|[CDockingPanesRow::GetClientRect](#cdockingpanesrow__getclientrect)||  \n|[CDockingPanesRow::GetDockSite](#cdockingpanesrow__getdocksite)||  \n|[CDockingPanesRow::GetExtraSpace](#cdockingpanesrow__getextraspace)||  \n|[CDockingPanesRow::GetGroupFromPane](#cdockingpanesrow__getgroupfrompane)||  \n|[CDockingPanesRow::GetID](#cdockingpanesrow__getid)||  \n|[CDockingPanesRow::GetMaxPaneSize](#cdockingpanesrow__getmaxpanesize)||  \n|[CDockingPanesRow::GetPaneCount](#cdockingpanesrow__getpanecount)||  \n|[CDockingPanesRow::GetPaneList](#cdockingpanesrow__getpanelist)||  \n|[CDockingPanesRow::GetRowAlignment](#cdockingpanesrow__getrowalignment)||  \n|[CDockingPanesRow::GetRowHeight](#cdockingpanesrow__getrowheight)||  \n|[CDockingPanesRow::GetRowOffset](#cdockingpanesrow__getrowoffset)||  \n|[CDockingPanesRow::GetVisibleCount](#cdockingpanesrow__getvisiblecount)||  \n|[CDockingPanesRow::GetWindowRect](#cdockingpanesrow__getwindowrect)||  \n|[CDockingPanesRow::HasPane](#cdockingpanesrow__haspane)||  \n|[CDockingPanesRow::IsEmpty](#cdockingpanesrow__isempty)||  \n|[CDockingPanesRow::IsExclusiveRow](#cdockingpanesrow__isexclusiverow)||  \n|[CDockingPanesRow::IsHorizontal](#cdockingpanesrow__ishorizontal)||  \n|[CDockingPanesRow::IsVisible](#cdockingpanesrow__isvisible)||  \n|[CDockingPanesRow::Move](#cdockingpanesrow__move)||  \n|[CDockingPanesRow::MovePane](#cdockingpanesrow__movepane)||  \n|[CDockingPanesRow::OnResizePane](#cdockingpanesrow__onresizepane)||  \n|[CDockingPanesRow::RedrawAll](#cdockingpanesrow__redrawall)||  \n|[CDockingPanesRow::RemovePane](#cdockingpanesrow__removepane)||  \n|[CDockingPanesRow::ReplacePane](#cdockingpanesrow__replacepane)||  \n|[CDockingPanesRow::RepositionPanes](#cdockingpanesrow__repositionpanes)||  \n|[CDockingPanesRow::Resize](#cdockingpanesrow__resize)||  \n|[CDockingPanesRow::ResizeByPaneDivider](#cdockingpanesrow__resizebypanedivider)||  \n|[CDockingPanesRow::ScreenToClient](#cdockingpanesrow__screentoclient)||  \n|[CDockingPanesRow::SetExtra](#cdockingpanesrow__setextra)||  \n|[CDockingPanesRow::ShowDockSiteRow](#cdockingpanesrow__showdocksiterow)||  \n|[CDockingPanesRow::ShowPane](#cdockingpanesrow__showpane)||  \n|[CDockingPanesRow::UpdateVisibleState](#cdockingpanesrow__updatevisiblestate)||  \n  \n## Remarks  \n `CDockingPanesRow` objects are created internally by dock site objects.  \n  \n## Example  \n The following example demonstrates how to get a `CDockingPanesRow` object from a `CMFCAutoHideBar` object.  \n  \n [!code-cpp[NVC_MFC_RibbonApp#26](../../mfc/reference/codesnippet/cpp/cdockingpanesrow-class_1.cpp)]  \n  \n## Inheritance Hierarchy  \n [CObject](../../mfc/reference/cobject-class.md)  \n  \n [CDockingPanesRow](../../mfc/reference/cdockingpanesrow-class.md)  \n  \n## Requirements  \n **Header:** afxDockingPanesRow.h  \n  \n##  <a name=\"cdockingpanesrow__addpane\"></a>  CDockingPanesRow::AddPane  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvirtual void AddPane(\n    CPane* pControlBar,  \n    AFX_DOCK_METHOD dockMethod,  \n    LPCRECT lpRect = NULL,  \n    BOOL bAddLast = FALSE);\n```  \n  \n### Parameters  \n [in] `pControlBar`  \n [in] `dockMethod`  \n [in] `lpRect`  \n [in] `bAddLast`  \n  \n### Remarks  \n  \n##  <a name=\"cdockingpanesrow__addpanefromrow\"></a>  CDockingPanesRow::AddPaneFromRow  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvirtual void AddPaneFromRow(\n    CPane* pControlBar,  \n    AFX_DOCK_METHOD dockMethod);\n```  \n  \n### Parameters  \n [in] `pControlBar`  \n [in] `dockMethod`  \n  \n### Remarks  \n  \n##  <a name=\"cdockingpanesrow__arrangepanes\"></a>  CDockingPanesRow::ArrangePanes  \n Arranges docking panes in a row according to the specified margin and spacing parameters.  \n  \n```  \nvirtual void ArrangePanes(\n    int nMargin,  \n    int nSpacing);\n```  \n  \n### Parameters  \n [in] `nMargin`  \n Specifies the offset, in pixels, of the first pane from the upper-left corner of the row.  \n  \n [in] `nSpacing`  \n Specifies the spacing, in pixels, between panes.  \n  \n### Remarks  \n Call this method to arrange panes in the row where they will dock. After calling this method, you must call `CDockingPanesRow::FixupVirtualRects(FALSE, NULL)`.  \n  \n##  <a name=\"cdockingpanesrow__calcfixedlayout\"></a>  CDockingPanesRow::CalcFixedLayout  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvirtual CSize CalcFixedLayout(\n    BOOL bStretch,  \n    BOOL bHorz);\n```  \n  \n### Parameters  \n [in] `bStretch`  \n [in] `bHorz`  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cdockingpanesrow__cdockingpanesrow\"></a>  CDockingPanesRow::CDockingPanesRow  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nCDockingPanesRow(\n    CDockSite* pParentDockBar,  \n    int nOffset,  \n    int nHeight);\n```  \n  \n### Parameters  \n [in] `pParentDockBar`  \n [in] `nOffset`  \n [in] `nHeight`  \n  \n### Remarks  \n  \n##  <a name=\"cdockingpanesrow__create\"></a>  CDockingPanesRow::Create  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvirtual BOOL Create();\n```  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cdockingpanesrow__expandstretchedpanes\"></a>  CDockingPanesRow::ExpandStretchedPanes  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvoid ExpandStretchedPanes();\n```  \n  \n### Remarks  \n  \n##  <a name=\"cdockingpanesrow__expandstretchedpanesrect\"></a>  CDockingPanesRow::ExpandStretchedPanesRect  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvoid ExpandStretchedPanesRect();\n```  \n  \n### Remarks  \n  \n##  <a name=\"cdockingpanesrow__fixupvirtualrects\"></a>  CDockingPanesRow::FixupVirtualRects  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvoid FixupVirtualRects(\n    bool bMoveBackToVirtualRect,  \n    CPane* pBarToExclude = NULL);\n```  \n  \n### Parameters  \n [in] `bMoveBackToVirtualRect`  \n [in] `pBarToExclude`  \n  \n### Remarks  \n  \n##  <a name=\"cdockingpanesrow__getavailablelength\"></a>  CDockingPanesRow::GetAvailableLength  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvirtual int GetAvailableLength(BOOL bUseVirtualRect = FALSE) const;\n\n \n```  \n  \n### Parameters  \n [in] `bUseVirtualRect`  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cdockingpanesrow__getavailablespace\"></a>  CDockingPanesRow::GetAvailableSpace  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvirtual void GetAvailableSpace(CRect& rect);\n```  \n  \n### Parameters  \n [in] `rect`  \n  \n### Remarks  \n  \n##  <a name=\"cdockingpanesrow__getclientrect\"></a>  CDockingPanesRow::GetClientRect  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvoid GetClientRect(CRect& rect) const;\n\n \n```  \n  \n### Parameters  \n [in] `rect`  \n  \n### Remarks  \n  \n##  <a name=\"cdockingpanesrow__getdocksite\"></a>  CDockingPanesRow::GetDockSite  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nCDockSite* GetDockSite() const;\n\n \n```  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cdockingpanesrow__getextraspace\"></a>  CDockingPanesRow::GetExtraSpace  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nint GetExtraSpace() const;\n\n \n```  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cdockingpanesrow__getgroupfrompane\"></a>  CDockingPanesRow::GetGroupFromPane  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvoid GetGroupFromPane(\n    CPane* pBar,  \n    CObList& lst);\n```  \n  \n### Parameters  \n [in] `pBar`  \n [in] `lst`  \n  \n### Remarks  \n  \n##  <a name=\"cdockingpanesrow__getid\"></a>  CDockingPanesRow::GetID  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nint GetID() const;\n\n \n```  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cdockingpanesrow__getmaxpanesize\"></a>  CDockingPanesRow::GetMaxPaneSize  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nint GetMaxPaneSize(BOOL bSkipHiddenBars = TRUE) const;\n\n \n```  \n  \n### Parameters  \n [in] `bSkipHiddenBars`  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cdockingpanesrow__getpanecount\"></a>  CDockingPanesRow::GetPaneCount  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nint GetPaneCount() const;\n\n \n```  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cdockingpanesrow__getpanelist\"></a>  CDockingPanesRow::GetPaneList  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nconst CObList& GetPaneList() const;\n\n \n```  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cdockingpanesrow__getrowalignment\"></a>  CDockingPanesRow::GetRowAlignment  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nDWORD GetRowAlignment() const;\n\n \n```  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cdockingpanesrow__getrowheight\"></a>  CDockingPanesRow::GetRowHeight  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nint GetRowHeight() const;\n\n \n```  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cdockingpanesrow__getrowoffset\"></a>  CDockingPanesRow::GetRowOffset  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nint GetRowOffset() const;\n\n \n```  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cdockingpanesrow__getvisiblecount\"></a>  CDockingPanesRow::GetVisibleCount  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvirtual int GetVisibleCount();\n```  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cdockingpanesrow__getwindowrect\"></a>  CDockingPanesRow::GetWindowRect  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvoid GetWindowRect(CRect& rect) const;\n\n \n```  \n  \n### Parameters  \n [in] `rect`  \n  \n### Remarks  \n  \n##  <a name=\"cdockingpanesrow__haspane\"></a>  CDockingPanesRow::HasPane  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nBOOL HasPane(CBasePane* pControlBar);\n```  \n  \n### Parameters  \n [in] `pControlBar`  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cdockingpanesrow__isempty\"></a>  CDockingPanesRow::IsEmpty  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvirtual BOOL IsEmpty() const;\n\n \n```  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cdockingpanesrow__isexclusiverow\"></a>  CDockingPanesRow::IsExclusiveRow  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvirtual BOOL IsExclusiveRow() const;\n\n \n```  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cdockingpanesrow__ishorizontal\"></a>  CDockingPanesRow::IsHorizontal  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nbool IsHorizontal() const;\n\n \n```  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cdockingpanesrow__isvisible\"></a>  CDockingPanesRow::IsVisible  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvirtual BOOL IsVisible() const;\n\n \n```  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cdockingpanesrow__move\"></a>  CDockingPanesRow::Move  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvirtual void Move(int nOffset);\n```  \n  \n### Parameters  \n [in] `nOffset`  \n  \n### Remarks  \n  \n##  <a name=\"cdockingpanesrow__movepane\"></a>  CDockingPanesRow::MovePane  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvoid MovePane(\n    CPane* pControlBar,  \n    CPoint ptOffset,  \n    BOOL bSwapControlBars,  \n    HDWP& hdwp);\n\n \nvoid MovePane(\n    CPane* pControlBar,  \n    CRect rectTarget,  \n    HDWP& hdwp);\n\n \nvoid MovePane(\n    CPane* pControlBar,  \n    int nOffset,  \n    bool bForward,  \n    HDWP& hdwp);\n\n \nvoid MovePane(\n    CPane* pControlBar,  \n    int nAbsolutOffset,  \n    HDWP& hdwp);\n```  \n  \n### Parameters  \n [in] `pControlBar`  \n [in] `ptOffset`  \n [in] `bSwapControlBars`  \n [in] `hdwp`  \n [in] `rectTarget`  \n [in] `nOffset`  \n [in] `bForward`  \n [in] `nAbsolutOffset`  \n  \n### Remarks  \n  \n##  <a name=\"cdockingpanesrow__onresizepane\"></a>  CDockingPanesRow::OnResizePane  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvirtual void OnResizePane(CBasePane* pControlBar);\n```  \n  \n### Parameters  \n [in] `pControlBar`  \n  \n### Remarks  \n  \n##  <a name=\"cdockingpanesrow__redrawall\"></a>  CDockingPanesRow::RedrawAll  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvoid RedrawAll();\n```  \n  \n### Remarks  \n  \n##  <a name=\"cdockingpanesrow__removepane\"></a>  CDockingPanesRow::RemovePane  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvirtual void RemovePane(CPane* pControlBar);\n```  \n  \n### Parameters  \n [in] `pControlBar`  \n  \n### Remarks  \n  \n##  <a name=\"cdockingpanesrow__replacepane\"></a>  CDockingPanesRow::ReplacePane  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvirtual BOOL ReplacePane(\n    CPane* pBarOld,  \n    CPane* pBarNew);\n```  \n  \n### Parameters  \n [in] `pBarOld`  \n [in] `pBarNew`  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cdockingpanesrow__repositionpanes\"></a>  CDockingPanesRow::RepositionPanes  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvirtual void RepositionPanes(\n    CRect& rectNewParentBarArea,  \n    UINT nSide = (UINT)-1,  \n    BOOL bExpand = FALSE,  \n    int nOffset = 0);\n```  \n  \n### Parameters  \n [in] `rectNewParentBarArea`  \n [in] `nSide`  \n [in] `bExpand`  \n [in] `nOffset`  \n  \n### Remarks  \n  \n##  <a name=\"cdockingpanesrow__resize\"></a>  CDockingPanesRow::Resize  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvirtual int Resize(int nOffset);\n```  \n  \n### Parameters  \n [in] `nOffset`  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cdockingpanesrow__resizebypanedivider\"></a>  CDockingPanesRow::ResizeByPaneDivider  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvirtual int ResizeByPaneDivider(int);\n```  \n  \n### Parameters  \n [in] `int`  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cdockingpanesrow__screentoclient\"></a>  CDockingPanesRow::ScreenToClient  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvoid ScreenToClient(CRect& rect) const;\n\n \n```  \n  \n### Parameters  \n [in] `rect`  \n  \n### Remarks  \n  \n##  <a name=\"cdockingpanesrow__setextra\"></a>  CDockingPanesRow::SetExtra  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvoid SetExtra(\n    int nExtraSpace,  \n    AFX_ROW_ALIGNMENT rowExtraAlign);\n```  \n  \n### Parameters  \n [in] `nExtraSpace`  \n [in] `rowExtraAlign`  \n  \n### Remarks  \n  \n##  <a name=\"cdockingpanesrow__showdocksiterow\"></a>  CDockingPanesRow::ShowDockSiteRow  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvirtual void ShowDockSiteRow(\n    BOOL bShow,  \n    BOOL bDelay);\n```  \n  \n### Parameters  \n [in] `bShow`  \n [in] `bDelay`  \n  \n### Remarks  \n  \n##  <a name=\"cdockingpanesrow__showpane\"></a>  CDockingPanesRow::ShowPane  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvirtual BOOL ShowPane(\n    CPane* pControlBar,  \n    BOOL bShow,  \n    BOOL bDelay = FALSE);\n```  \n  \n### Parameters  \n [in] `pControlBar`  \n [in] `bShow`  \n [in] `bDelay`  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cdockingpanesrow__updatevisiblestate\"></a>  CDockingPanesRow::UpdateVisibleState  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvirtual void UpdateVisibleState(BOOL bDelay);\n```  \n  \n### Parameters  \n [in] `bDelay`  \n  \n### Remarks  \n  \n## See Also  \n [Hierarchy Chart](../../mfc/hierarchy-chart.md)   \n [Classes](../../mfc/reference/mfc-classes.md)   \n [CObject Class](../../mfc/reference/cobject-class.md)   \n [CDockSite Class](../../mfc/reference/cdocksite-class.md)   \n [CPane Class](../../mfc/reference/cpane-class.md)\n"}