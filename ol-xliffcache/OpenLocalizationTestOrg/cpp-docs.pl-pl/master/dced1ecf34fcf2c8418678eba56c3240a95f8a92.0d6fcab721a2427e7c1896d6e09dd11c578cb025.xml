{"nodes":[{"pos":[12,51],"content":"queue::queue (STL-CLR) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"queue::queue (STL-CLR) | Microsoft Docs","pos":[0,39]}]},{"content":"queue::queue (STL/CLR)","pos":[626,648]},{"content":"Constructs a container adapter object.","pos":[649,687]},{"content":"Syntax","pos":[696,702]},{"content":"Parameters","pos":[864,874]},{"content":"right","pos":[878,883]},{"content":"Object to copy.","pos":[887,902]},{"content":"wrapped","pos":[909,916]},{"content":"Wrapped container to use.","pos":[920,945]},{"content":"Remarks","pos":[954,961]},{"content":"The constructor:","pos":[965,981]},{"content":"creates an empty wrapped container.","pos":[1005,1040]},{"content":"You use it to specify an empty initial controlled sequence.","pos":[1041,1100]},{"content":"The constructor:","pos":[1107,1123]},{"content":"creates a wrapped container that is a copy of <ph id=\"ph1\">`right.get_container()`</ph>.","pos":[1177,1247],"source":"creates a wrapped container that is a copy of `right.get_container()`."},{"content":"You use it to specify an initial controlled sequence that is a copy of the sequence controlled by the queue object <ph id=\"ph1\">`right`</ph>.","pos":[1248,1371],"source":" You use it to specify an initial controlled sequence that is a copy of the sequence controlled by the queue object `right`."},{"content":"The constructor:","pos":[1378,1394]},{"content":"creates a wrapped container that is a copy of <ph id=\"ph1\">`right-&gt;get_container()`</ph>.","pos":[1448,1519],"source":"creates a wrapped container that is a copy of `right->get_container()`."},{"content":"You use it to specify an initial controlled sequence that is a copy of the sequence controlled by the queue object <ph id=\"ph1\">`*right`</ph>.","pos":[1520,1644],"source":" You use it to specify an initial controlled sequence that is a copy of the sequence controlled by the queue object `*right`."},{"content":"The constructor:","pos":[1651,1667]},{"content":"uses the existing container <ph id=\"ph1\">`wrapped`</ph> as the wrapped container.","pos":[1722,1785],"source":"uses the existing container `wrapped` as the wrapped container."},{"content":"You use it to construct a queue from an existing container.","pos":[1786,1845]},{"content":"Example","pos":[1854,1861]},{"content":"Requirements","pos":[3073,3085]},{"pos":[3089,3116],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> <ph id=\"ph1\">\\&lt;</ph>cliext/queue&gt;","source":"**Header:** \\<cliext/queue>"},{"pos":[3123,3144],"content":"<bpt id=\"p1\">**</bpt>Namespace:<ept id=\"p1\">**</ept> cliext","source":"**Namespace:** cliext"},{"content":"See Also","pos":[3153,3161]},{"content":"queue (STL/CLR)","pos":[3166,3181]},{"content":"queue::assign (STL/CLR)","pos":[3216,3239]},{"content":"queue::generic_container (STL/CLR)","pos":[3281,3315]},{"content":"queue::operator= (STL/CLR)","pos":[3368,3394]}],"content":"---\ntitle: \"queue::queue (STL-CLR) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"cliext::queue::queue\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"queue member [STL/CLR]\"\nms.assetid: 6106c07f-d5eb-4f0b-82df-ee4e2e751047\ncaps.latest.revision: 18\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# queue::queue (STL/CLR)\nConstructs a container adapter object.  \n  \n## Syntax  \n  \n```  \nqueue();  \nqueue(queue<Value, Container>% right);  \nqueue(queue<Value, Container>^ right);  \nexplicit queue(container_type% wrapped);  \n```  \n  \n#### Parameters  \n right  \n Object to copy.  \n  \n wrapped  \n Wrapped container to use.  \n  \n## Remarks  \n The constructor:  \n  \n `queue();`  \n  \n creates an empty wrapped container. You use it to specify an empty initial controlled sequence.  \n  \n The constructor:  \n  \n `queue(queue<Value, Container>% right);`  \n  \n creates a wrapped container that is a copy of `right.get_container()`. You use it to specify an initial controlled sequence that is a copy of the sequence controlled by the queue object `right`.  \n  \n The constructor:  \n  \n `queue(queue<Value, Container>^ right);`  \n  \n creates a wrapped container that is a copy of `right->get_container()`. You use it to specify an initial controlled sequence that is a copy of the sequence controlled by the queue object `*right`.  \n  \n The constructor:  \n  \n `explicit queue(container_type wrapped);`  \n  \n uses the existing container `wrapped` as the wrapped container. You use it to construct a queue from an existing container.  \n  \n## Example  \n  \n```  \n// cliext_queue_construct.cpp   \n// compile with: /clr   \n#include <cliext/queue>   \n#include <cliext/list>   \n  \ntypedef cliext::queue<wchar_t> Myqueue;   \ntypedef cliext::list<wchar_t> Mylist;   \ntypedef cliext::queue<wchar_t, Mylist> Myqueue_list;   \nint main()   \n    {   \n// construct an empty container   \n    Myqueue c1;   \n    System::Console::WriteLine(\"size() = {0}\", c1.size());   \n  \n// construct from an underlying container   \n    Mylist v2(5, L'x');   \n    Myqueue_list c2(v2);       \n    for each (wchar_t elem in c2.get_container())   \n        System::Console::Write(\" {0}\", elem);   \n    System::Console::WriteLine();   \n  \n// construct by copying another container   \n    Myqueue_list c3(c2);   \n    for each (wchar_t elem in c3.get_container())   \n        System::Console::Write(\" {0}\", elem);   \n    System::Console::WriteLine();   \n  \n// construct by copying another container through handle   \n    Myqueue_list c4(%c2);   \n    for each (wchar_t elem in c4.get_container())   \n        System::Console::Write(\" {0}\", elem);   \n    System::Console::WriteLine();   \n    return (0);   \n    }  \n  \n```  \n  \n```Output  \nsize() = 0  \n x x x x x  \n x x x x x  \n x x x x x  \n```  \n  \n## Requirements  \n **Header:** \\<cliext/queue>  \n  \n **Namespace:** cliext  \n  \n## See Also  \n [queue (STL/CLR)](../dotnet/queue-stl-clr.md)   \n [queue::assign (STL/CLR)](../dotnet/queue-assign-stl-clr.md)   \n [queue::generic_container (STL/CLR)](../dotnet/queue-generic-container-stl-clr.md)   \n [queue::operator= (STL/CLR)](../dotnet/queue-operator-assign-stl-clr.md)"}