{"nodes":[{"pos":[12,61],"content":"Compiler Warning (level 3) C4191 | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Compiler Warning (level 3) C4191 | Microsoft Docs","pos":[0,49]}]},{"pos":[631,663],"content":"Compiler Warning (level 3) C4191","linkify":"Compiler Warning (level 3) C4191","nodes":[{"content":"Compiler Warning (level 3) C4191","pos":[0,32]}]},{"content":"'operator/operation' : unsafe conversion from 'type of expression' to 'type required'","pos":[664,749]},{"content":"Several operations involving function pointers are considered unsafe:","pos":[756,825]},{"content":"Function types with different calling conventions.","pos":[835,885]},{"content":"Function types with different return conventions.","pos":[895,944]},{"content":"Argument or return types with different sizes, type categories, or classifications.","pos":[954,1037]},{"pos":[1047,1169],"content":"Differing argument list lengths (on <ph id=\"ph1\">`__cdecl`</ph>, only on cast from longer list to shorter list, even if shorter is varargs).","source":"Differing argument list lengths (on `__cdecl`, only on cast from longer list to shorter list, even if shorter is varargs)."},{"pos":[1179,1257],"content":"Pointer to data (other than <bpt id=\"p1\">**</bpt>void<ph id=\"ph1\">\\*</ph><ept id=\"p1\">**</ept>) aliased against a pointer to function.","source":"Pointer to data (other than **void\\***) aliased against a pointer to function."},{"pos":[1267,1354],"content":"Any other type difference that would yield an error or warning on a <ph id=\"ph1\">`reinterpret_cast`</ph>.","source":"Any other type difference that would yield an error or warning on a `reinterpret_cast`."},{"content":"Calling this function through the result pointer might cause your program to crash.","pos":[1361,1444]},{"content":"This warning is off by default.","pos":[1451,1482]},{"content":"See <bpt id=\"p1\">[</bpt>Compiler Warnings That Are Off by Default<ept id=\"p1\">](../../preprocessor/compiler-warnings-that-are-off-by-default.md)</ept> for more information.","pos":[1483,1617],"source":" See [Compiler Warnings That Are Off by Default](../../preprocessor/compiler-warnings-that-are-off-by-default.md) for more information."},{"content":"The following sample generates C4191:","pos":[1624,1661]}],"content":"---\ntitle: \"Compiler Warning (level 3) C4191 | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-csharp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"C4191\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"C4191\"\nms.assetid: 576d3bc6-95b7-448a-af31-5d798452df09\ncaps.latest.revision: 11\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"ru-ru\"\n  - \"zh-cn\"\n  - \"zh-tw\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"tr-tr\"\n---\n# Compiler Warning (level 3) C4191\n'operator/operation' : unsafe conversion from 'type of expression' to 'type required'  \n  \n Several operations involving function pointers are considered unsafe:  \n  \n-   Function types with different calling conventions.  \n  \n-   Function types with different return conventions.  \n  \n-   Argument or return types with different sizes, type categories, or classifications.  \n  \n-   Differing argument list lengths (on `__cdecl`, only on cast from longer list to shorter list, even if shorter is varargs).  \n  \n-   Pointer to data (other than **void\\***) aliased against a pointer to function.  \n  \n-   Any other type difference that would yield an error or warning on a `reinterpret_cast`.  \n  \n Calling this function through the result pointer might cause your program to crash.  \n  \n This warning is off by default. See [Compiler Warnings That Are Off by Default](../../preprocessor/compiler-warnings-that-are-off-by-default.md) for more information.  \n  \n The following sample generates C4191:  \n  \n```  \n// C4191.cpp  \n// compile with: /W3 /clr  \n#pragma warning(default: 4191)  \n  \nvoid __clrcall f1() { }  \nvoid __cdecl   f2() { }  \n  \ntypedef void (__clrcall * fnptr1)();  \ntypedef void (__cdecl   * fnptr2)();  \n  \nint main() {  \n   fnptr1 fp1 = static_cast<fnptr1>(&f1);  \n   fnptr2 fp2 = (fnptr2) &f2;  \n  \n   fnptr1 fp3 = (fnptr1) &f2;   // C4191  \n   fnptr2 fp4 = (fnptr2) &f1;   // C4191  \n};  \n```"}