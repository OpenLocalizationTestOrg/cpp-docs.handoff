{"nodes":[{"pos":[12,78],"content":"How to: Convert System::String to Standard String | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"How to: Convert System::String to Standard String | Microsoft Docs","pos":[0,66]}]},{"content":"How to: Convert System::String to Standard String","pos":[705,754]},{"pos":[755,874],"content":"You can convert a &lt;xref:System.String&gt; to <ph id=\"ph1\">`std::string`</ph> or <ph id=\"ph2\">`std::wstring`</ph>, without using <ph id=\"ph3\">`PtrToStringChars`</ph> in Vcclr.h.","source":"You can convert a <xref:System.String> to `std::string` or `std::wstring`, without using `PtrToStringChars` in Vcclr.h."},{"content":"Example","pos":[883,890]},{"content":"See Also","pos":[1888,1896]},{"content":"Using C++ Interop (Implicit PInvoke)","pos":[1901,1937]}],"content":"---\ntitle: \"How to: Convert System::String to Standard String | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"get-started-article\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"Standard C++ Library, converting System::String to standard string\"\n  - \"string conversion, System::String\"\nms.assetid: 79e2537e-d4eb-459f-9506-0e738045b59e\ncaps.latest.revision: 9\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# How to: Convert System::String to Standard String\nYou can convert a <xref:System.String> to `std::string` or `std::wstring`, without using `PtrToStringChars` in Vcclr.h.  \n  \n## Example  \n  \n```  \n// convert_system_string.cpp  \n// compile with: /clr  \n#include <string>  \n#include <iostream>  \nusing namespace std;  \nusing namespace System;  \n  \nvoid MarshalString ( String ^ s, string& os ) {  \n   using namespace Runtime::InteropServices;  \n   const char* chars =   \n      (const char*)(Marshal::StringToHGlobalAnsi(s)).ToPointer();  \n   os = chars;  \n   Marshal::FreeHGlobal(IntPtr((void*)chars));  \n}  \n  \nvoid MarshalString ( String ^ s, wstring& os ) {  \n   using namespace Runtime::InteropServices;  \n   const wchar_t* chars =   \n      (const wchar_t*)(Marshal::StringToHGlobalUni(s)).ToPointer();  \n   os = chars;  \n   Marshal::FreeHGlobal(IntPtr((void*)chars));  \n}  \n  \nint main() {  \n   string a = \"test\";  \n   wstring b = L\"test2\";  \n   String ^ c = gcnew String(\"abcd\");  \n  \n   cout << a << endl;  \n   MarshalString(c, a);  \n   c = \"efgh\";  \n   MarshalString(c, b);  \n   cout << a << endl;  \n   wcout << b << endl;  \n}  \n```  \n  \n```  \ntest  \nabcd  \nefgh  \n```  \n  \n## See Also  \n [Using C++ Interop (Implicit PInvoke)](../dotnet/using-cpp-interop-implicit-pinvoke.md)"}