{"nodes":[{"pos":[12,49],"content":"Compiler Error C2893 | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Compiler Error C2893 | Microsoft Docs","pos":[0,37]}]},{"pos":[598,618],"content":"Compiler Error C2893","linkify":"Compiler Error C2893","nodes":[{"content":"Compiler Error C2893","pos":[0,20]}]},{"content":"Failed to specialize function template 'template name'","pos":[619,673]},{"content":"The compiler failed to specialize a function template.","pos":[680,734]},{"content":"There can be many causes for this error.","pos":[735,775]},{"content":"In general, the way to resolve a C2893 error is to review the function's signature and make sure you can instantiate every type.","pos":[782,910]},{"pos":[919,926],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"C2893 occurs because <ph id=\"ph1\">`f`</ph>'s template parameter <ph id=\"ph2\">`T`</ph> is deduced to be <ph id=\"ph3\">`std::map&lt;int,int&gt;`</ph>, but <ph id=\"ph4\">`std::map&lt;int,int&gt;`</ph> has no member <ph id=\"ph5\">`data_type`</ph> (<ph id=\"ph6\">`T::data_type`</ph> can not be instantiated with <ph id=\"ph7\">`T = std::map&lt;int,int&gt;`</ph>.).","pos":[930,1139],"source":"C2893 occurs because `f`'s template parameter `T` is deduced to be `std::map<int,int>`, but `std::map<int,int>` has no member `data_type` (`T::data_type` can not be instantiated with `T = std::map<int,int>`.)."},{"content":"The following sample generates C2893.","pos":[1140,1177]}],"content":"---\ntitle: \"Compiler Error C2893 | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"error-reference\"\nf1_keywords: \n  - \"C2893\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"C2893\"\nms.assetid: ec0cbe43-005d-45da-8742-aaeb9b81d28e\ncaps.latest.revision: 12\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Compiler Error C2893\nFailed to specialize function template 'template name'  \n  \n The compiler failed to specialize a function template. There can be many causes for this error.  \n  \n In general, the way to resolve a C2893 error is to review the function's signature and make sure you can instantiate every type.  \n  \n## Example  \n C2893 occurs because `f`'s template parameter `T` is deduced to be `std::map<int,int>`, but `std::map<int,int>` has no member `data_type` (`T::data_type` can not be instantiated with `T = std::map<int,int>`.). The following sample generates C2893.  \n  \n```  \n// C2893.cpp  \n// compile with: /c /EHsc  \n#include<map>  \nusing namespace std;  \nclass MyClass {};  \n  \ntemplate<class T>   \ninline typename T::data_type  \n// try the following line instead  \n// inline typename  T::mapped_type  \nf(T const& p1, MyClass const& p2);  \n  \ntemplate<class T>  \nvoid bar(T const& p1) {  \n    MyClass r;  \n    f(p1,r);   // C2893  \n}  \n  \nint main() {  \n   map<int,int> m;  \n   bar(m);  \n}  \n```"}