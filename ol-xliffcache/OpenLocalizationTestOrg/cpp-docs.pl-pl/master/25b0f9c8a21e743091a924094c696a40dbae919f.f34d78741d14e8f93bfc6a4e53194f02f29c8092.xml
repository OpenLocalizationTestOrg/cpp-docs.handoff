{"nodes":[{"pos":[12,92],"content":"Using Replaceable Parameters (The Registrar&#39;s Preprocessor) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Using Replaceable Parameters (The Registrar&amp;#39;s Preprocessor) | Microsoft Docs","pos":[0,80],"source":"Using Replaceable Parameters (The Registrar&#39;s Preprocessor) | Microsoft Docs"}]},{"content":"Using Replaceable Parameters (The Registrar&amp;#39;s Preprocessor)","pos":[695,758],"source":"Using Replaceable Parameters (The Registrar&#39;s Preprocessor)"},{"content":"Replaceable parameters allow a Registrar's client to specify run-time data.","pos":[759,834]},{"content":"To do this, the Registrar maintains a replacement map into which it enters the values associated with the replaceable parameters in your script.","pos":[835,979]},{"content":"The Registrar makes these entries at run time.","pos":[980,1026]},{"pos":[1076,1090],"content":"Using %MODULE%"},{"content":"The <bpt id=\"p1\">[</bpt>ATL Control Wizard<ept id=\"p1\">](../atl/reference/atl-control-wizard.md)</ept> automatically generates a script that uses <ph id=\"ph1\">`%MODULE%`</ph>.","pos":[1094,1213],"source":"The [ATL Control Wizard](../atl/reference/atl-control-wizard.md) automatically generates a script that uses `%MODULE%`."},{"content":"ATL uses this replaceable parameter for the actual location of your server's DLL or EXE.","pos":[1214,1302]},{"content":"Concatenating Run-Time Data with Script Data","pos":[1311,1355]},{"content":"Another use of the preprocessor is to concatenate run-time data with script data.","pos":[1359,1440]},{"content":"For example, suppose an entry is needed that contains a full path to a module with the string \"<ph id=\"ph1\">`, 1`</ph>\" appended at the end.","pos":[1441,1563],"source":" For example, suppose an entry is needed that contains a full path to a module with the string \"`, 1`\" appended at the end."},{"content":"First, define the following expansion:","pos":[1564,1602]},{"pos":[1658,1803],"content":"Then, before calling one of the script processing methods listed in <bpt id=\"p1\">[</bpt>Invoking Scripts<ept id=\"p1\">](../atl/invoking-scripts.md)</ept>, add a replacement to the map:","source":"Then, before calling one of the script processing methods listed in [Invoking Scripts](../atl/invoking-scripts.md), add a replacement to the map:"},{"pos":[1821,1842],"content":"NVC_ATL_Utilities#113"},{"pos":[1939,2039],"content":"During the parsing of the script, the Registrar expands <ph id=\"ph1\">`'%MODULE%, 1'`</ph> to <ph id=\"ph2\">`c:\\mycode\\mydll.dll, 1`</ph>.","source":"During the parsing of the script, the Registrar expands `'%MODULE%, 1'` to `c:\\mycode\\mydll.dll, 1`."},{"pos":[2047,2235],"content":"[!NOTE]\n In a Registrar script, 4K is the maximum token size. (A token is any recognizable element in the syntax.) This includes tokens that were created or expanded by the preprocessor.","leadings":["","> "],"nodes":[{"content":" In a Registrar script, 4K is the maximum token size. (A token is any recognizable element in the syntax.) This includes tokens that were created or expanded by the preprocessor.","pos":[8,186],"nodes":[{"content":"In a Registrar script, 4K is the maximum token size.","pos":[1,53]},{"content":"(A token is any recognizable element in the syntax.) This includes tokens that were created or expanded by the preprocessor.","pos":[54,178]}]}]},{"pos":[2243,3153],"content":"[!NOTE]\n To substitute replacement values at run time, remove the call in the script to the [DECLARE_REGISTRY_RESOURCE](../atl/reference/registry-macros.md#declare_registry_resource) or [DECLARE_REGISTRY_RESOURCEID](../atl/reference/registry-macros.md#declare_registry_resourceid) macro. Instead, replace it with your own `UpdateRegistry` method that calls [CAtlModule::UpdateRegistryFromResourceD](../atl/reference/catlmodule-class.md#catlmodule__updateregistryfromresourced) or [CAtlModule::UpdateRegistryFromResourceS](../atl/reference/catlmodule-class.md#catlmodule__updateregistryfromresources), and pass your array of **_ATL_REGMAP_ENTRY** structures. Your array of **_ATL_REGMAP_ENTRY** must have at least one entry that is set to {**NULL**,**NULL**}, and this entry should always be the last entry. Otherwise, an access violation error will be generated when **UpdateRegistryFromResource** is called.","leadings":["","> "],"nodes":[{"content":" To substitute replacement values at run time, remove the call in the script to the [DECLARE_REGISTRY_RESOURCE](../atl/reference/registry-macros.md#declare_registry_resource) or [DECLARE_REGISTRY_RESOURCEID](../atl/reference/registry-macros.md#declare_registry_resourceid) macro. Instead, replace it with your own `UpdateRegistry` method that calls [CAtlModule::UpdateRegistryFromResourceD](../atl/reference/catlmodule-class.md#catlmodule__updateregistryfromresourced) or [CAtlModule::UpdateRegistryFromResourceS](../atl/reference/catlmodule-class.md#catlmodule__updateregistryfromresources), and pass your array of **_ATL_REGMAP_ENTRY** structures. Your array of **_ATL_REGMAP_ENTRY** must have at least one entry that is set to {**NULL**,**NULL**}, and this entry should always be the last entry. Otherwise, an access violation error will be generated when **UpdateRegistryFromResource** is called.","pos":[8,908],"nodes":[{"content":"To substitute replacement values at run time, remove the call in the script to the <bpt id=\"p1\">[</bpt>DECLARE_REGISTRY_RESOURCE<ept id=\"p1\">](../atl/reference/registry-macros.md#declare_registry_resource)</ept> or <bpt id=\"p2\">[</bpt>DECLARE_REGISTRY_RESOURCEID<ept id=\"p2\">](../atl/reference/registry-macros.md#declare_registry_resourceid)</ept> macro.","pos":[1,279],"source":" To substitute replacement values at run time, remove the call in the script to the [DECLARE_REGISTRY_RESOURCE](../atl/reference/registry-macros.md#declare_registry_resource) or [DECLARE_REGISTRY_RESOURCEID](../atl/reference/registry-macros.md#declare_registry_resourceid) macro."},{"content":"Instead, replace it with your own <ph id=\"ph1\">`UpdateRegistry`</ph> method that calls <bpt id=\"p1\">[</bpt>CAtlModule::UpdateRegistryFromResourceD<ept id=\"p1\">](../atl/reference/catlmodule-class.md#catlmodule__updateregistryfromresourced)</ept> or <bpt id=\"p2\">[</bpt>CAtlModule::UpdateRegistryFromResourceS<ept id=\"p2\">](../atl/reference/catlmodule-class.md#catlmodule__updateregistryfromresources)</ept>, and pass your array of <bpt id=\"p3\">**</bpt>_ATL_REGMAP_ENTRY<ept id=\"p3\">**</ept> structures.","pos":[280,649],"source":" Instead, replace it with your own `UpdateRegistry` method that calls [CAtlModule::UpdateRegistryFromResourceD](../atl/reference/catlmodule-class.md#catlmodule__updateregistryfromresourced) or [CAtlModule::UpdateRegistryFromResourceS](../atl/reference/catlmodule-class.md#catlmodule__updateregistryfromresources), and pass your array of **_ATL_REGMAP_ENTRY** structures."},{"content":"Your array of <bpt id=\"p1\">**</bpt>_ATL_REGMAP_ENTRY<ept id=\"p1\">**</ept> must have at least one entry that is set to {<bpt id=\"p2\">**</bpt>NULL<ept id=\"p2\">**</ept>,<bpt id=\"p3\">**</bpt>NULL<ept id=\"p3\">**</ept>}, and this entry should always be the last entry.","pos":[650,798],"source":" Your array of **_ATL_REGMAP_ENTRY** must have at least one entry that is set to {**NULL**,**NULL**}, and this entry should always be the last entry."},{"content":"Otherwise, an access violation error will be generated when <bpt id=\"p1\">**</bpt>UpdateRegistryFromResource<ept id=\"p1\">**</ept> is called.","pos":[799,900],"source":" Otherwise, an access violation error will be generated when **UpdateRegistryFromResource** is called."}]}]},{"pos":[3161,3466],"content":"[!NOTE]\n When building a project that outputs an executable, ATL automatically adds quotation marks around the path name created at run time with the **%MODULE%** registrar script parameter. If you do not want the path name to include the quotation marks, use the new **%MODULE_RAW%** parameter instead.","leadings":["","> "],"nodes":[{"content":" When building a project that outputs an executable, ATL automatically adds quotation marks around the path name created at run time with the **%MODULE%** registrar script parameter. If you do not want the path name to include the quotation marks, use the new **%MODULE_RAW%** parameter instead.","pos":[8,303],"nodes":[{"content":"When building a project that outputs an executable, ATL automatically adds quotation marks around the path name created at run time with the <bpt id=\"p1\">**</bpt>%MODULE%<ept id=\"p1\">**</ept> registrar script parameter.","pos":[1,182],"source":" When building a project that outputs an executable, ATL automatically adds quotation marks around the path name created at run time with the **%MODULE%** registrar script parameter."},{"content":"If you do not want the path name to include the quotation marks, use the new <bpt id=\"p1\">**</bpt>%MODULE_RAW%<ept id=\"p1\">**</ept> parameter instead.","pos":[183,295],"source":" If you do not want the path name to include the quotation marks, use the new **%MODULE_RAW%** parameter instead."}]}]},{"pos":[3477,3615],"content":"When building a project that outputs a DLL, ATL will not add quotation marks to the path name if <bpt id=\"p1\">**</bpt>%MODULE%<ept id=\"p1\">**</ept> or <bpt id=\"p2\">**</bpt>%MODULE_RAW%<ept id=\"p2\">**</ept> is used.","source":"When building a project that outputs a DLL, ATL will not add quotation marks to the path name if **%MODULE%** or **%MODULE_RAW%** is used."},{"content":"See Also","pos":[3624,3632]},{"content":"Creating Registrar Scripts","pos":[3637,3663]}],"content":"---\ntitle: \"Using Replaceable Parameters (The Registrar&#39;s Preprocessor) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"AddReplacement\"\n  - \"ClearReplacements\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"%MODULE%\"\nms.assetid: 0b376994-84a6-4967-8d97-8c01dfc94efe\ncaps.latest.revision: 12\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"ru-ru\"\n  - \"zh-cn\"\n  - \"zh-tw\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"tr-tr\"\n---\n# Using Replaceable Parameters (The Registrar&#39;s Preprocessor)\nReplaceable parameters allow a Registrar's client to specify run-time data. To do this, the Registrar maintains a replacement map into which it enters the values associated with the replaceable parameters in your script. The Registrar makes these entries at run time.  \n  \n##  <a name=\"_atl_using_.25.module.25\"></a> Using %MODULE%  \n The [ATL Control Wizard](../atl/reference/atl-control-wizard.md) automatically generates a script that uses `%MODULE%`. ATL uses this replaceable parameter for the actual location of your server's DLL or EXE.  \n  \n## Concatenating Run-Time Data with Script Data  \n Another use of the preprocessor is to concatenate run-time data with script data. For example, suppose an entry is needed that contains a full path to a module with the string \"`, 1`\" appended at the end. First, define the following expansion:  \n  \n```  \n'MySampleKey' = s '%MODULE%, 1'  \n```  \n  \n Then, before calling one of the script processing methods listed in [Invoking Scripts](../atl/invoking-scripts.md), add a replacement to the map:  \n  \n [!code-cpp[NVC_ATL_Utilities#113](../atl/codesnippet/cpp/using-replaceable-parameters-the-registrar-s-preprocessor_1.cpp)]  \n  \n During the parsing of the script, the Registrar expands `'%MODULE%, 1'` to `c:\\mycode\\mydll.dll, 1`.  \n  \n> [!NOTE]\n>  In a Registrar script, 4K is the maximum token size. (A token is any recognizable element in the syntax.) This includes tokens that were created or expanded by the preprocessor.  \n  \n> [!NOTE]\n>  To substitute replacement values at run time, remove the call in the script to the [DECLARE_REGISTRY_RESOURCE](../atl/reference/registry-macros.md#declare_registry_resource) or [DECLARE_REGISTRY_RESOURCEID](../atl/reference/registry-macros.md#declare_registry_resourceid) macro. Instead, replace it with your own `UpdateRegistry` method that calls [CAtlModule::UpdateRegistryFromResourceD](../atl/reference/catlmodule-class.md#catlmodule__updateregistryfromresourced) or [CAtlModule::UpdateRegistryFromResourceS](../atl/reference/catlmodule-class.md#catlmodule__updateregistryfromresources), and pass your array of **_ATL_REGMAP_ENTRY** structures. Your array of **_ATL_REGMAP_ENTRY** must have at least one entry that is set to {**NULL**,**NULL**}, and this entry should always be the last entry. Otherwise, an access violation error will be generated when **UpdateRegistryFromResource** is called.  \n  \n> [!NOTE]\n>  When building a project that outputs an executable, ATL automatically adds quotation marks around the path name created at run time with the **%MODULE%** registrar script parameter. If you do not want the path name to include the quotation marks, use the new **%MODULE_RAW%** parameter instead.  \n>   \n>  When building a project that outputs a DLL, ATL will not add quotation marks to the path name if **%MODULE%** or **%MODULE_RAW%** is used.  \n  \n## See Also  \n [Creating Registrar Scripts](../atl/creating-registrar-scripts.md)\n\n"}