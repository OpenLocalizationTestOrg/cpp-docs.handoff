{"nodes":[{"pos":[12,41],"content":"Byte Indices | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Byte Indices | Microsoft Docs","pos":[0,29]}]},{"content":"Byte Indices","pos":[596,608]},{"content":"Use the following tips:","pos":[609,632]},{"content":"Working with a bytewise index into a string presents problems similar to those posed by pointer manipulation.","pos":[642,751]},{"content":"Consider this example, which scans a string for a backslash character:","pos":[752,822]},{"pos":[905,998],"content":"This might index a trail byte, not a lead byte, and thus it might not point to a <ph id=\"ph1\">`character`</ph>.","source":"This might index a trail byte, not a lead byte, and thus it might not point to a `character`."},{"pos":[1008,1122],"content":"Use the <bpt id=\"p1\">[</bpt>_mbclen<ept id=\"p1\">](../c-runtime-library/reference/mbclen-mblen-mblen-l.md)</ept> function to solve the preceding problem:","source":"Use the [_mbclen](../c-runtime-library/reference/mbclen-mblen-mblen-l.md) function to solve the preceding problem:"},{"content":"This correctly indexes to a lead byte, hence to a <ph id=\"ph1\">`character`</ph>.","pos":[1227,1289],"source":"This correctly indexes to a lead byte, hence to a `character`."},{"content":"The <ph id=\"ph1\">`_mbclen`</ph> function determines the size of a character (1 or 2 bytes).","pos":[1290,1363],"source":" The `_mbclen` function determines the size of a character (1 or 2 bytes)."},{"content":"See Also","pos":[1372,1380]},{"content":"MBCS Programming Tips","pos":[1385,1406]},{"content":"Last Character in a String","pos":[1447,1473]}],"content":"---\ntitle: \"Byte Indices | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"MBCS [C++], byte indices\"\n  - \"byte indices [C++]\"\nms.assetid: f6e7774a-86c6-41c2-89e3-74fd46432e47\ncaps.latest.revision: 7\nauthor: \"ghogen\"\nms.author: \"ghogen\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Byte Indices\nUse the following tips:  \n  \n-   Working with a bytewise index into a string presents problems similar to those posed by pointer manipulation. Consider this example, which scans a string for a backslash character:  \n  \n    ```  \n    while ( rgch[ i ] != '\\\\' )  \n        i++;  \n    ```  \n  \n     This might index a trail byte, not a lead byte, and thus it might not point to a `character`.  \n  \n-   Use the [_mbclen](../c-runtime-library/reference/mbclen-mblen-mblen-l.md) function to solve the preceding problem:  \n  \n    ```  \n    while ( rgch[ i ] != '\\\\' )  \n        i += _mbclen ( rgch + i );  \n    ```  \n  \n     This correctly indexes to a lead byte, hence to a `character`. The `_mbclen` function determines the size of a character (1 or 2 bytes).  \n  \n## See Also  \n [MBCS Programming Tips](../text/mbcs-programming-tips.md)   \n [Last Character in a String](../text/last-character-in-a-string.md)"}