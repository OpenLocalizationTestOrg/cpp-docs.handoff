{"nodes":[{"pos":[12,39],"content":".PUSHFRAME | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":".PUSHFRAME | Microsoft Docs","pos":[0,27]}]},{"content":".PUSHFRAME","pos":[599,609]},{"content":"Generates a <ph id=\"ph1\">`UWOP_PUSH_MACHFRAME`</ph> unwind code entry.","pos":[610,662],"source":"Generates a `UWOP_PUSH_MACHFRAME` unwind code entry."},{"content":"If the optional <ph id=\"ph1\">`code`</ph> is specified, the unwind code entry is given a modifier of 1.","pos":[663,747],"source":" If the optional `code` is specified, the unwind code entry is given a modifier of 1."},{"content":"Otherwise the modifier is 0.","pos":[748,776]},{"content":"Syntax","pos":[785,791]},{"content":"Remarks","pos":[835,842]},{"content":".PUSHFRAME allows ml64.exe users to specify how a frame function unwinds and is only allowed within the prologue, which extends from the <bpt id=\"p1\">[</bpt>PROC<ept id=\"p1\">](../../assembler/masm/proc.md)</ept> FRAME declaration to the <bpt id=\"p2\">[</bpt>.ENDPROLOG<ept id=\"p2\">](../../assembler/masm/dot-endprolog.md)</ept> directive.","pos":[846,1107],"source":".PUSHFRAME allows ml64.exe users to specify how a frame function unwinds and is only allowed within the prologue, which extends from the [PROC](../../assembler/masm/proc.md) FRAME declaration to the [.ENDPROLOG](../../assembler/masm/dot-endprolog.md) directive."},{"content":"These directives do not generate code; they only generate <ph id=\"ph1\">`.xdata`</ph> and <ph id=\"ph2\">`.pdata`</ph>.","pos":[1108,1188],"source":" These directives do not generate code; they only generate `.xdata` and `.pdata`."},{"content":".PUSHFRAME should be preceded by instructions that actually implement the actions to be unwound.","pos":[1189,1285]},{"content":"It is a good practice to wrap both the unwind directives and the code they are meant to unwind in a macro to ensure agreement.","pos":[1286,1412]},{"pos":[1419,1518],"content":"For more information, see <bpt id=\"p1\">[</bpt>MASM for x64 (ml64.exe)<ept id=\"p1\">](../../assembler/masm/masm-for-x64-ml64-exe.md)</ept>.","source":"For more information, see [MASM for x64 (ml64.exe)](../../assembler/masm/masm-for-x64-ml64-exe.md)."},{"content":"See Also","pos":[1527,1535]},{"content":"Directives Reference","pos":[1540,1560]}],"content":"---\ntitle: \".PUSHFRAME | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \".PUSHFRAME\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \".PUSHFRAME directive\"\nms.assetid: 17b123d0-4c6d-4fd2-85eb-798e8ad0a73c\ncaps.latest.revision: 8\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# .PUSHFRAME\nGenerates a `UWOP_PUSH_MACHFRAME` unwind code entry. If the optional `code` is specified, the unwind code entry is given a modifier of 1. Otherwise the modifier is 0.  \n  \n## Syntax  \n  \n```  \n.PUSHFRAME [code]  \n```  \n  \n## Remarks  \n .PUSHFRAME allows ml64.exe users to specify how a frame function unwinds and is only allowed within the prologue, which extends from the [PROC](../../assembler/masm/proc.md) FRAME declaration to the [.ENDPROLOG](../../assembler/masm/dot-endprolog.md) directive. These directives do not generate code; they only generate `.xdata` and `.pdata`. .PUSHFRAME should be preceded by instructions that actually implement the actions to be unwound. It is a good practice to wrap both the unwind directives and the code they are meant to unwind in a macro to ensure agreement.  \n  \n For more information, see [MASM for x64 (ml64.exe)](../../assembler/masm/masm-for-x64-ml64-exe.md).  \n  \n## See Also  \n [Directives Reference](../../assembler/masm/directives-reference.md)"}