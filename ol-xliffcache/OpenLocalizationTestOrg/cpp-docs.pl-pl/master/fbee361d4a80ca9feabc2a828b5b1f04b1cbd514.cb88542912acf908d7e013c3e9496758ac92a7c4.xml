{"nodes":[{"pos":[12,49],"content":"Compiler Error C2247 | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Compiler Error C2247 | Microsoft Docs","pos":[0,37]}]},{"content":"Compiler Error C2247","pos":[598,618]},{"content":"'identifier' not accessible because 'class' uses 'specifier' to inherit from 'class'","pos":[619,703]},{"pos":[723,791],"content":"is inherited from a class declared with private or protected access."},{"content":"The following sample generates C2247:","pos":[798,835]},{"content":"This error can also be generated as a result of compiler conformance work that was done for Visual Studio .NET 2003: access control with protected members.","pos":[1085,1240]},{"content":"A protected member (n) can only be accessed through a member function of a class (B) that inherits from the class (A) of which it (n) is a member.","pos":[1241,1387]},{"content":"For code that is valid in both the Visual Studio .NET 2003 and Visual Studio .NET versions of Visual C++, declare the member to be a friend of the type.","pos":[1394,1546]},{"content":"Public inheritance could also be used.","pos":[1547,1585]},{"content":"C2247 can also be generated as a result of compiler conformance work that was done for Visual Studio .NET 2003: private base classes now inaccessible.","pos":[1872,2022]},{"content":"A class (A) that is a private base class to a type (B) should not be accessible to a type (C) that uses B as a base class.","pos":[2023,2145]},{"content":"For code that is valid in both the Visual Studio .NET 2003 and Visual Studio .NET versions of Visual C++, use the scope operator.","pos":[2152,2281]}],"content":"---\ntitle: \"Compiler Error C2247 | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"error-reference\"\nf1_keywords: \n  - \"C2247\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"C2247\"\nms.assetid: 72efa03e-615e-4ef9-aede-0a98654b20fd\ncaps.latest.revision: 13\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Compiler Error C2247\n'identifier' not accessible because 'class' uses 'specifier' to inherit from 'class'  \n  \n `identifier` is inherited from a class declared with private or protected access.  \n  \n The following sample generates C2247:  \n  \n```  \n// C2247.cpp  \nclass A {  \npublic:  \n   int i;  \n};  \nclass B : private A {};    // B inherits a private A  \nclass C : public B {} c;   // so even though C's B is public  \nint j = c.i;               // C2247, i not accessible  \n```  \n  \n This error can also be generated as a result of compiler conformance work that was done for Visual Studio .NET 2003: access control with protected members. A protected member (n) can only be accessed through a member function of a class (B) that inherits from the class (A) of which it (n) is a member.  \n  \n For code that is valid in both the Visual Studio .NET 2003 and Visual Studio .NET versions of Visual C++, declare the member to be a friend of the type. Public inheritance could also be used.  \n  \n```  \n// C2247b.cpp  \n// compile with: /c  \n// C2247 expected  \nclass A {  \npublic:  \n   void f();  \n   int n;  \n};  \n  \nclass B: protected A {  \n   // Uncomment the following line to resolve.  \n   // friend void A::f();  \n};  \n  \nvoid A::f() {  \n   B b;  \n   b.n;  \n}  \n```  \n  \n C2247 can also be generated as a result of compiler conformance work that was done for Visual Studio .NET 2003: private base classes now inaccessible. A class (A) that is a private base class to a type (B) should not be accessible to a type (C) that uses B as a base class.  \n  \n For code that is valid in both the Visual Studio .NET 2003 and Visual Studio .NET versions of Visual C++, use the scope operator.  \n  \n```  \n// C2247c.cpp  \n// compile with: /c  \nstruct A {};  \n  \nstruct B: private A {};  \n  \nstruct C : B {  \n   void f() {  \n      A *p1 = (A*) this;   // C2247  \n      // try the following line instead  \n      // ::A *p2 = (::A*) this;  \n   }  \n};  \n```"}