{"nodes":[{"pos":[12,67],"content":"range_adapter::range_adapter (STL-CLR) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"range_adapter::range_adapter (STL-CLR) | Microsoft Docs","pos":[0,55]}]},{"content":"range_adapter::range_adapter (STL/CLR)","pos":[665,703]},{"content":"Constructs an adapter object.","pos":[704,733]},{"content":"Syntax","pos":[742,748]},{"content":"Parameters","pos":[923,933]},{"content":"first","pos":[937,942]},{"content":"First iterator to wrap.","pos":[946,969]},{"content":"last","pos":[976,980]},{"content":"Second iterator to wrap.","pos":[984,1008]},{"content":"right","pos":[1015,1020]},{"content":"Object to copy.","pos":[1024,1039]},{"content":"Remarks","pos":[1048,1055]},{"content":"The constructor:","pos":[1059,1075]},{"content":"initializes the stored iterator pair with default constructed iterators.","pos":[1107,1179]},{"content":"The constructor:","pos":[1186,1202]},{"pos":[1260,1335],"content":"initializes the stored iterator pair by copying the pair stored in <ph id=\"ph1\">`right`</ph>.","source":"initializes the stored iterator pair by copying the pair stored in `right`."},{"content":"The constructor:","pos":[1342,1358]},{"pos":[1416,1492],"content":"initializes the stored iterator pair by copying the pair stored in <ph id=\"ph1\">`*right`</ph>.","source":"initializes the stored iterator pair by copying the pair stored in `*right`."},{"content":"The constructor:","pos":[1499,1515]},{"pos":[1564,1625],"content":"initializes the stored iterator pair with <ph id=\"ph1\">`first`</ph> and <ph id=\"ph2\">`last`</ph>.","source":"initializes the stored iterator pair with `first` and `last`."},{"content":"Example","pos":[1634,1641]},{"content":"Requirements","pos":[2755,2767]},{"pos":[2771,2800],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> <ph id=\"ph1\">\\&lt;</ph>cliext/adapter&gt;","source":"**Header:** \\<cliext/adapter>"},{"pos":[2807,2828],"content":"<bpt id=\"p1\">**</bpt>Namespace:<ept id=\"p1\">**</ept> cliext","source":"**Namespace:** cliext"},{"content":"See Also","pos":[2837,2845]},{"content":"range_adapter (STL/CLR)","pos":[2850,2873]},{"content":"range_adapter::operator= (STL/CLR)","pos":[2916,2950]}],"content":"---\ntitle: \"range_adapter::range_adapter (STL-CLR) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"cliext::range_adapter::range_adapter\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"range_adapter member [STL/CLR]\"\nms.assetid: b16af13f-3358-4e82-927d-d0d4986bcb18\ncaps.latest.revision: 9\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# range_adapter::range_adapter (STL/CLR)\nConstructs an adapter object.  \n  \n## Syntax  \n  \n```  \nrange_adapter();  \nrange_adapter(range_adapter<Iter>% right);  \nrange_adapter(range_adapter<Iter>^ right);  \nrange_adapter(Iter first, Iter last);  \n```  \n  \n#### Parameters  \n first  \n First iterator to wrap.  \n  \n last  \n Second iterator to wrap.  \n  \n right  \n Object to copy.  \n  \n## Remarks  \n The constructor:  \n  \n `range_adapter();`  \n  \n initializes the stored iterator pair with default constructed iterators.  \n  \n The constructor:  \n  \n `range_adapter(range_adapter<Iter>% right);`  \n  \n initializes the stored iterator pair by copying the pair stored in `right`.  \n  \n The constructor:  \n  \n `range_adapter(range_adapter<Iter>^ right);`  \n  \n initializes the stored iterator pair by copying the pair stored in `*right`.  \n  \n The constructor:  \n  \n `range_adapter(Iter^ first, last);`  \n  \n initializes the stored iterator pair with `first` and `last`.  \n  \n## Example  \n  \n```  \n// cliext_range_adapter_construct.cpp   \n// compile with: /clr   \n#include <cliext/adapter>   \n#include <cliext/deque>   \n  \ntypedef cliext::deque<wchar_t> Mycont;   \ntypedef cliext::range_adapter<Mycont::iterator> Myrange;   \nint main()   \n    {   \n    cliext::deque<wchar_t> d1;   \n    d1.push_back(L'a');   \n    d1.push_back(L'b');   \n    d1.push_back(L'c');   \n  \n// construct an empty adapter   \n    Myrange c1;   \n  \n// construct with an iterator pair   \n    Myrange c2(d1.begin(), d1.end());   \n    for each (wchar_t elem in c2)   \n        System::Console::Write(\" {0}\", elem);   \n    System::Console::WriteLine();   \n  \n// construct by copying another adapter   \n    Myrange c3(c2);   \n    for each (wchar_t elem in c3)   \n        System::Console::Write(\" {0}\", elem);   \n    System::Console::WriteLine();   \n  \n// construct by copying an adapter handle   \n    Myrange c4(%c3);   \n    for each (wchar_t elem in c4)   \n        System::Console::Write(\" {0}\", elem);   \n    System::Console::WriteLine();   \n  \n    return (0);   \n    }  \n  \n```  \n  \n```Output  \na b c  \na b c  \na b c  \n```  \n  \n## Requirements  \n **Header:** \\<cliext/adapter>  \n  \n **Namespace:** cliext  \n  \n## See Also  \n [range_adapter (STL/CLR)](../dotnet/range-adapter-stl-clr.md)   \n [range_adapter::operator= (STL/CLR)](../dotnet/range-adapter-operator-assign-stl-clr.md)"}