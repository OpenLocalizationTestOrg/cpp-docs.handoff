{"nodes":[{"pos":[12,61],"content":"Compiler Warning (level 1) C4312 | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Compiler Warning (level 1) C4312 | Microsoft Docs","pos":[0,49]}]},{"content":"Compiler Warning (level 1) C4312","pos":[609,641]},{"content":"'operation' : conversion from 'type1' to 'type2' of greater size","pos":[642,706]},{"pos":[713,862],"content":"This warning detects an attempt to assign a 32-bit value to a 64-bit pointer type, for example, casting a 32-bit <ph id=\"ph1\">`int`</ph> or <ph id=\"ph2\">`long`</ph> to a 64-bit pointer.","source":"This warning detects an attempt to assign a 32-bit value to a 64-bit pointer type, for example, casting a 32-bit `int` or `long` to a 64-bit pointer."},{"content":"This can be an unsafe conversion even for pointer values that fit in 32 bits when sign extension occurs.","pos":[869,973]},{"content":"If a negative 32-bit integer is assigned to a 64-bit pointer type, sign extension causes the pointer value to reference a memory address different from the value of the integer.","pos":[974,1151]},{"content":"This warning is only issued for 64-bit compilation targets.","pos":[1158,1217]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Rules for Using Pointers<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/aa384242)</ept>.","pos":[1218,1331],"source":" For more information, see [Rules for Using Pointers](http://msdn.microsoft.com/library/windows/desktop/aa384242)."},{"content":"The following code example generates C4312 when it is compiled for 64-bit targets:","pos":[1338,1420]}],"content":"---\ntitle: \"Compiler Warning (level 1) C4312 | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"error-reference\"\nf1_keywords: \n  - \"C4312\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"C4312\"\nms.assetid: 541906ed-4f62-4bcb-947f-cf9ae7411bcb\ncaps.latest.revision: 9\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Compiler Warning (level 1) C4312\n'operation' : conversion from 'type1' to 'type2' of greater size  \n  \n This warning detects an attempt to assign a 32-bit value to a 64-bit pointer type, for example, casting a 32-bit `int` or `long` to a 64-bit pointer.  \n  \n This can be an unsafe conversion even for pointer values that fit in 32 bits when sign extension occurs. If a negative 32-bit integer is assigned to a 64-bit pointer type, sign extension causes the pointer value to reference a memory address different from the value of the integer.  \n  \n This warning is only issued for 64-bit compilation targets. For more information, see [Rules for Using Pointers](http://msdn.microsoft.com/library/windows/desktop/aa384242).  \n  \n The following code example generates C4312 when it is compiled for 64-bit targets:  \n  \n```  \n// C4312.cpp  \n// compile by using: cl /W1 /LD C4312.cpp  \nvoid* f(int i) {  \n   return (void*)i;   // C4312 for 64-bit targets  \n}  \n  \nvoid* f2(__int64 i) {  \n   return (void*)i;   // OK  \n}  \n```"}