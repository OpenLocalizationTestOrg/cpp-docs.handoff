{"nodes":[{"pos":[12,49],"content":"Compiler Error C2179 | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Compiler Error C2179 | Microsoft Docs","pos":[0,37]}]},{"pos":[597,617],"content":"Compiler Error C2179","linkify":"Compiler Error C2179","nodes":[{"content":"Compiler Error C2179","pos":[0,20]}]},{"content":"'type' : an attribute argument cannot use type parameters","pos":[618,675]},{"content":"A generic type parameter is resolved at runtime.","pos":[682,730]},{"content":"However, an attribute parameter must be resolved at compile time.","pos":[731,796]},{"content":"Therefore, you cannot use a generic type parameter as an argument to an attribute.","pos":[797,879]},{"pos":[888,895],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following sample generates C2179.","pos":[899,936]}],"content":"---\ntitle: \"Compiler Error C2179 | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"error-reference\"\nf1_keywords: \n  - \"C2179\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"C2179\"\nms.assetid: f929bfc6-3964-4e54-87d6-7529b9b6c0b9\ncaps.latest.revision: 7\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Compiler Error C2179\n'type' : an attribute argument cannot use type parameters  \n  \n A generic type parameter is resolved at runtime. However, an attribute parameter must be resolved at compile time. Therefore, you cannot use a generic type parameter as an argument to an attribute.  \n  \n## Example  \n The following sample generates C2179.  \n  \n```  \n// C2179.cpp  \n// compile with: /clr  \nusing namespace System;  \n  \npublic ref struct Attr : Attribute {  \n   Attr(Type ^ a) {  \n      x = a;  \n   }  \n  \n   Type ^ x;  \n};  \n  \nref struct G {};  \n  \ngeneric<typename T>   \npublic ref class Z {   \npublic:  \n   Type ^ d;  \n   [Attr(T::typeid)]   // C2179  \n   // try the following line instead  \n   // [Attr(G::typeid)]  \n   T t;  \n};  \n```"}