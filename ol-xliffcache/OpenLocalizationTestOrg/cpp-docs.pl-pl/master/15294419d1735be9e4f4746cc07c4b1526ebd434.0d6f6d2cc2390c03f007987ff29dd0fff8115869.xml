{"nodes":[{"pos":[12,45],"content":"_com_ptr_t Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"_com_ptr_t Class | Microsoft Docs","pos":[0,33]}]},{"content":"_com_ptr_t Class","pos":[612,628]},{"content":"Microsoft Specific","pos":[631,649]},{"content":"A <ph id=\"ph1\">`_com_ptr_t`</ph> object encapsulates a COM interface pointer and is called a \"smart\" pointer.","pos":[658,749],"source":"A `_com_ptr_t` object encapsulates a COM interface pointer and is called a \"smart\" pointer."},{"content":"This template class manages resource allocation and deallocation through function calls to the <bpt id=\"p1\">**</bpt>IUnknown<ept id=\"p1\">**</ept> member functions: <ph id=\"ph1\">`QueryInterface`</ph>, <ph id=\"ph2\">`AddRef`</ph>, and <bpt id=\"p2\">**</bpt>Release<ept id=\"p2\">**</ept>.","pos":[750,920],"source":" This template class manages resource allocation and deallocation through function calls to the **IUnknown** member functions: `QueryInterface`, `AddRef`, and **Release**."},{"content":"A smart pointer is usually referenced by the typedef definition provided by the <bpt id=\"p1\">**</bpt>_COM_SMARTPTR_TYPEDEF<ept id=\"p1\">**</ept> macro.","pos":[927,1039],"source":"A smart pointer is usually referenced by the typedef definition provided by the **_COM_SMARTPTR_TYPEDEF** macro."},{"content":"This macro takes an interface name and the IID and declares a specialization of <ph id=\"ph1\">`_com_ptr_t`</ph> with the name of the interface plus a suffix of <ph id=\"ph2\">`Ptr`</ph>.","pos":[1040,1187],"source":" This macro takes an interface name and the IID and declares a specialization of `_com_ptr_t` with the name of the interface plus a suffix of `Ptr`."},{"content":"For example:","pos":[1188,1200]},{"pos":[1285,1346],"content":"declares the <ph id=\"ph1\">`_com_ptr_t`</ph> specialization <bpt id=\"p1\">**</bpt>IMyInterfacePtr<ept id=\"p1\">**</ept>.","source":"declares the `_com_ptr_t` specialization **IMyInterfacePtr**."},{"pos":[1353,1547],"content":"A set of <bpt id=\"p1\">[</bpt>function templates<ept id=\"p1\">](../cpp/relational-function-templates.md)</ept>, not members of this template class, support comparisons with a smart pointer on the right side of the comparison operator.","source":"A set of [function templates](../cpp/relational-function-templates.md), not members of this template class, support comparisons with a smart pointer on the right side of the comparison operator."},{"content":"Construction","pos":[1557,1569]},{"content":"_com_ptr_t","pos":[1591,1601]},{"pos":[1634,1667],"content":"Constructs a <ph id=\"ph1\">`_com_ptr_t`</ph> object.","source":"Constructs a `_com_ptr_t` object."},{"content":"Low-Level Operations","pos":[1678,1698]},{"content":"AddRef","pos":[1720,1726]},{"pos":[1756,1845],"content":"Calls the <ph id=\"ph1\">`AddRef`</ph> member function of <bpt id=\"p1\">**</bpt>IUnknown<ept id=\"p1\">**</ept> on the encapsulated interface pointer.","source":"Calls the `AddRef` member function of **IUnknown** on the encapsulated interface pointer."},{"content":"Attach","pos":[1851,1857]},{"content":"Encapsulates a raw interface pointer of this smart pointer's type.","pos":[1887,1953]},{"content":"CreateInstance","pos":[1959,1973]},{"pos":[2011,2079],"content":"Creates a new instance of an object given a <bpt id=\"p1\">**</bpt>CLSID<ept id=\"p1\">**</ept> or <bpt id=\"p2\">**</bpt>ProgID<ept id=\"p2\">**</ept>.","source":"Creates a new instance of an object given a **CLSID** or **ProgID**."},{"content":"Detach","pos":[2085,2091]},{"content":"Extracts and returns the encapsulated interface pointer.","pos":[2121,2177]},{"content":"GetActiveObject","pos":[2183,2198]},{"pos":[2237,2315],"content":"Attaches to an existing instance of an object given a <bpt id=\"p1\">**</bpt>CLSID<ept id=\"p1\">**</ept> or <bpt id=\"p2\">**</bpt>ProgID<ept id=\"p2\">**</ept>.","source":"Attaches to an existing instance of an object given a **CLSID** or **ProgID**."},{"content":"GetInterfacePtr","pos":[2321,2336]},{"content":"Returns the encapsulated interface pointer.","pos":[2375,2418]},{"content":"QueryInterface","pos":[2424,2438]},{"pos":[2476,2573],"content":"Calls the <ph id=\"ph1\">`QueryInterface`</ph> member function of <bpt id=\"p1\">**</bpt>IUnknown<ept id=\"p1\">**</ept> on the encapsulated interface pointer.","source":"Calls the `QueryInterface` member function of **IUnknown** on the encapsulated interface pointer."},{"content":"Release","pos":[2579,2586]},{"pos":[2617,2709],"content":"Calls the <bpt id=\"p1\">**</bpt>Release<ept id=\"p1\">**</ept> member function of <bpt id=\"p2\">**</bpt>IUnknown<ept id=\"p2\">**</ept> on the encapsulated interface pointer.","source":"Calls the **Release** member function of **IUnknown** on the encapsulated interface pointer."},{"content":"Operators","pos":[2720,2729]},{"content":"operator =","pos":[2751,2761]},{"pos":[2799,2854],"content":"Assigns a new value to an existing <ph id=\"ph1\">`_com_ptr_t`</ph> object.","source":"Assigns a new value to an existing `_com_ptr_t` object."},{"content":"operators ==, !=, <ph id=\"ph1\">\\&lt;</ph>, &gt;, <ph id=\"ph2\">\\&lt;</ph>=, &gt;=","pos":[2860,2892],"source":"operators ==, !=, \\<, >, \\<=, >="},{"pos":[2936,3030],"content":"Compare the smart pointer object to another smart pointer, raw interface pointer, or <bpt id=\"p1\">**</bpt>NULL<ept id=\"p1\">**</ept>.","source":"Compare the smart pointer object to another smart pointer, raw interface pointer, or **NULL**."},{"content":"Extractors","pos":[3036,3046]},{"content":"Extract the encapsulated COM interface pointer.","pos":[3080,3127]},{"content":"END Microsoft Specific","pos":[3137,3159]},{"content":"Requirements","pos":[3168,3180]},{"pos":[3184,3203],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> comip.h","source":"**Header:** comip.h"},{"pos":[3210,3371],"content":"<bpt id=\"p1\">**</bpt>Lib:<ept id=\"p1\">**</ept> comsuppw.lib or comsuppwd.lib (see <bpt id=\"p2\">[</bpt>/Zc:wchar_t (wchar_t Is Native Type)<ept id=\"p2\">](../build/reference/zc-wchar-t-wchar-t-is-native-type.md)</ept> for more information)","source":"**Lib:** comsuppw.lib or comsuppwd.lib (see [/Zc:wchar_t (wchar_t Is Native Type)](../build/reference/zc-wchar-t-wchar-t-is-native-type.md) for more information)"},{"content":"See Also","pos":[3380,3388]},{"content":"Compiler COM Support Classes","pos":[3393,3421]}],"content":"---\ntitle: \"_com_ptr_t Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"language-reference\"\nf1_keywords: \n  - \"_com_ptr_t\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"_com_ptr_t class\"\nms.assetid: 3753a8a0-03d4-4cfd-8a9a-74872ea53971\ncaps.latest.revision: 8\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# _com_ptr_t Class\n**Microsoft Specific**  \n  \n A `_com_ptr_t` object encapsulates a COM interface pointer and is called a \"smart\" pointer. This template class manages resource allocation and deallocation through function calls to the **IUnknown** member functions: `QueryInterface`, `AddRef`, and **Release**.  \n  \n A smart pointer is usually referenced by the typedef definition provided by the **_COM_SMARTPTR_TYPEDEF** macro. This macro takes an interface name and the IID and declares a specialization of `_com_ptr_t` with the name of the interface plus a suffix of `Ptr`. For example:  \n  \n```  \n_COM_SMARTPTR_TYPEDEF(IMyInterface, __uuidof(IMyInterface));  \n```  \n  \n declares the `_com_ptr_t` specialization **IMyInterfacePtr**.  \n  \n A set of [function templates](../cpp/relational-function-templates.md), not members of this template class, support comparisons with a smart pointer on the right side of the comparison operator.  \n  \n### Construction  \n  \n|||  \n|-|-|  \n|[_com_ptr_t](../cpp/com-ptr-t-com-ptr-t.md)|Constructs a `_com_ptr_t` object.|  \n  \n### Low-Level Operations  \n  \n|||  \n|-|-|  \n|[AddRef](../cpp/com-ptr-t-addref.md)|Calls the `AddRef` member function of **IUnknown** on the encapsulated interface pointer.|  \n|[Attach](../cpp/com-ptr-t-attach.md)|Encapsulates a raw interface pointer of this smart pointer's type.|  \n|[CreateInstance](../cpp/com-ptr-t-createinstance.md)|Creates a new instance of an object given a **CLSID** or **ProgID**.|  \n|[Detach](../cpp/com-ptr-t-detach.md)|Extracts and returns the encapsulated interface pointer.|  \n|[GetActiveObject](../cpp/com-ptr-t-getactiveobject.md)|Attaches to an existing instance of an object given a **CLSID** or **ProgID**.|  \n|[GetInterfacePtr](../cpp/com-ptr-t-getinterfaceptr.md)|Returns the encapsulated interface pointer.|  \n|[QueryInterface](../cpp/com-ptr-t-queryinterface.md)|Calls the `QueryInterface` member function of **IUnknown** on the encapsulated interface pointer.|  \n|[Release](../cpp/com-ptr-t-release.md)|Calls the **Release** member function of **IUnknown** on the encapsulated interface pointer.|  \n  \n### Operators  \n  \n|||  \n|-|-|  \n|[operator =](../cpp/com-ptr-t-operator-equal.md)|Assigns a new value to an existing `_com_ptr_t` object.|  \n|[operators ==, !=, \\<, >, \\<=, >=](../cpp/com-ptr-t-relational-operators.md)|Compare the smart pointer object to another smart pointer, raw interface pointer, or **NULL**.|  \n|[Extractors](../cpp/com-ptr-t-extractors.md)|Extract the encapsulated COM interface pointer.|  \n  \n## END Microsoft Specific  \n  \n## Requirements  \n **Header:** comip.h  \n  \n **Lib:** comsuppw.lib or comsuppwd.lib (see [/Zc:wchar_t (wchar_t Is Native Type)](../build/reference/zc-wchar-t-wchar-t-is-native-type.md) for more information)  \n  \n## See Also  \n [Compiler COM Support Classes](../cpp/compiler-com-support-classes.md)"}