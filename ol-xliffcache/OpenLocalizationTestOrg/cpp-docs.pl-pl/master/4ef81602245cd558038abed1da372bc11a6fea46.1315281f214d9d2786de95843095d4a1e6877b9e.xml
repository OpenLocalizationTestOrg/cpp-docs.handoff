{"nodes":[{"pos":[12,41],"content":"_ltoa, _ltow | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"_ltoa, _ltow | Microsoft Docs","pos":[0,29]}]},{"pos":[1077,1089],"content":"_ltoa, _ltow","linkify":"_ltoa, _ltow","nodes":[{"content":"_ltoa, _ltow","pos":[0,12]}]},{"content":"Converts a long integer to a string.","pos":[1090,1126]},{"content":"More secure versions of these functions are available; see <bpt id=\"p1\">[</bpt>_ltoa_s, _ltow_s<ept id=\"p1\">](../../c-runtime-library/reference/ltoa-s-ltow-s.md)</ept>.","pos":[1127,1257],"source":" More secure versions of these functions are available; see [_ltoa_s, _ltow_s](../../c-runtime-library/reference/ltoa-s-ltow-s.md)."},{"pos":[1266,1272],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[1676,1686],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Number to be converted.","pos":[1701,1724]},{"content":"String result.","pos":[1740,1754]},{"content":"Base of <ph id=\"ph1\">`value`</ph>.","pos":[1772,1788],"source":" Base of `value`."},{"pos":[1797,1809],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Each of these functions returns a pointer to <ph id=\"ph1\">`str`</ph>.","pos":[1813,1864],"source":"Each of these functions returns a pointer to `str`."},{"content":"There is no error return.","pos":[1865,1890]},{"pos":[1899,1906],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The <ph id=\"ph1\">`_ltoa`</ph> function converts the digits of <ph id=\"ph2\">`value`</ph> to a null-terminated character string and stores the result (up to 33 bytes) in <ph id=\"ph3\">`str`</ph>.","pos":[1910,2048],"source":"The `_ltoa` function converts the digits of `value` to a null-terminated character string and stores the result (up to 33 bytes) in `str`."},{"content":"The <ph id=\"ph1\">`radix`</ph> argument specifies the base of <ph id=\"ph2\">`value`</ph>, which must be in the range 2 – 36.","pos":[2049,2135],"source":" The `radix` argument specifies the base of `value`, which must be in the range 2 – 36."},{"content":"If <ph id=\"ph1\">`radix`</ph> equals 10 and <ph id=\"ph2\">`value`</ph> is negative, the first character of the stored string is the minus sign (–).","pos":[2136,2245],"source":" If `radix` equals 10 and `value` is negative, the first character of the stored string is the minus sign (–)."},{"content":"<ph id=\"ph1\">`_ltow`</ph> is a wide-character version of <ph id=\"ph2\">`_ltoa`</ph>; the second argument and return value of <ph id=\"ph3\">`_ltow`</ph> are wide-character strings.","pos":[2246,2369],"source":"`_ltow` is a wide-character version of `_ltoa`; the second argument and return value of `_ltow` are wide-character strings."},{"content":"Each of these functions is Microsoft-specific.","pos":[2370,2416]},{"pos":[2424,2596],"content":"[!IMPORTANT]\n To prevent buffer overruns, ensure that the `str` buffer is large enough to hold the converted digits plus the trailing null-character and a sign character.","leadings":["","> "],"nodes":[{"content":"To prevent buffer overruns, ensure that the <ph id=\"ph1\">`str`</ph> buffer is large enough to hold the converted digits plus the trailing null-character and a sign character.","pos":[14,170],"source":" To prevent buffer overruns, ensure that the `str` buffer is large enough to hold the converted digits plus the trailing null-character and a sign character."}]},{"content":"In C++, these functions have template overloads.","pos":[2603,2651]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Secure Template Overloads<ept id=\"p1\">](../../c-runtime-library/secure-template-overloads.md)</ept>.","pos":[2652,2760],"source":" For more information, see [Secure Template Overloads](../../c-runtime-library/secure-template-overloads.md)."},{"pos":[2770,2799],"content":"Generic-Text Routine Mappings","linkify":"Generic-Text Routine Mappings","nodes":[{"content":"Generic-Text Routine Mappings","pos":[0,29]}]},{"content":"Tchar.h routine","pos":[2806,2821]},{"content":"_UNICODE and _MBCS not defined","pos":[2822,2852]},{"content":"_MBCS defined","pos":[2853,2866]},{"content":"_UNICODE defined","pos":[2867,2883]},{"pos":[3039,3051],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"content":"Routine","pos":[3058,3065]},{"content":"Required header","pos":[3066,3081]},{"content":"<ph id=\"ph1\">\\&lt;</ph>stdlib.h&gt;","pos":[3134,3145],"source":"\\<stdlib.h>"},{"content":"<ph id=\"ph1\">\\&lt;</ph>stdlib.h&gt;","pos":[3158,3169],"source":"\\<stdlib.h>"},{"pos":[3177,3295],"content":"For more compatibility information, see <bpt id=\"p1\">[</bpt>Compatibility<ept id=\"p1\">](../../c-runtime-library/compatibility.md)</ept> in the Introduction.","source":"For more compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md) in the Introduction."},{"pos":[3304,3311],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[3315,3421],"content":"See the example for <bpt id=\"p1\">[</bpt>_itoa<ept id=\"p1\">](../../c-runtime-library/reference/itoa-i64toa-ui64toa-itow-i64tow-ui64tow.md)</ept>.","source":"See the example for [_itoa](../../c-runtime-library/reference/itoa-i64toa-ui64toa-itow-i64tow-ui64tow.md)."},{"pos":[3430,3455],"content":".NET Framework Equivalent","linkify":".NET Framework Equivalent","nodes":[{"content":".NET Framework Equivalent","pos":[0,25]}]},{"pos":[3459,3557],"content":"<bpt id=\"p1\">[</bpt>System::Convert::ToString<ept id=\"p1\">](https://msdn.microsoft.com/en-us/library/system.convert.tostring.aspx)</ept>","source":"[System::Convert::ToString](https://msdn.microsoft.com/en-us/library/system.convert.tostring.aspx)"},{"pos":[3566,3574],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Data Conversion<ept id=\"p1\">](../../c-runtime-library/data-conversion.md)</ept><ph id=\"ph1\"> </ph>","pos":[3578,3640],"source":"[Data Conversion](../../c-runtime-library/data-conversion.md) "},{"content":"<bpt id=\"p1\"> [</bpt>_itoa, _i64toa, _ui64toa, _itow, _i64tow, _ui64tow<ept id=\"p1\">](../../c-runtime-library/reference/itoa-i64toa-ui64toa-itow-i64tow-ui64tow.md)</ept><ph id=\"ph1\"> </ph>","pos":[3643,3775],"source":" [_itoa, _i64toa, _ui64toa, _itow, _i64tow, _ui64tow](../../c-runtime-library/reference/itoa-i64toa-ui64toa-itow-i64tow-ui64tow.md) "},{"content":"<bpt id=\"p1\"> [</bpt>_ultoa, _ultow<ept id=\"p1\">](../../c-runtime-library/reference/ultoa-ultow.md)</ept>","pos":[3778,3845],"source":" [_ultoa, _ultow](../../c-runtime-library/reference/ultoa-ultow.md)"}],"content":"---\ntitle: \"_ltoa, _ltow | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\napiname: \n  - \"_ltoa\"\n  - \"_ltow\"\napilocation: \n  - \"msvcrt.dll\"\n  - \"msvcr80.dll\"\n  - \"msvcr90.dll\"\n  - \"msvcr100.dll\"\n  - \"msvcr100_clr0400.dll\"\n  - \"msvcr110.dll\"\n  - \"msvcr110_clr0400.dll\"\n  - \"msvcr120.dll\"\n  - \"msvcr120_clr0400.dll\"\n  - \"ucrtbase.dll\"\napitype: \"DLLExport\"\nf1_keywords: \n  - \"ltow\"\n  - \"_ltot\"\n  - \"_ltoa\"\n  - \"_ltow\"\ndev_langs: \n  - \"C++\"\n  - \"C\"\nhelpviewer_keywords: \n  - \"converting integers\"\n  - \"_ltoa function\"\n  - \"_ltow function\"\n  - \"ltow function\"\n  - \"ltoa function\"\n  - \"long integer conversion to string\"\n  - \"converting numbers, to strings\"\nms.assetid: 14036104-2c25-4759-87c0-918ed8521e47\ncaps.latest.revision: 17\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# _ltoa, _ltow\nConverts a long integer to a string. More secure versions of these functions are available; see [_ltoa_s, _ltow_s](../../c-runtime-library/reference/ltoa-s-ltow-s.md).  \n  \n## Syntax  \n  \n```  \nchar *_ltoa(  \n   long value,  \n   char *str,  \n   int radix   \n);  \nwchar_t *_ltow(  \n   long value,  \n   wchar_t *str,  \n   int radix   \n);  \ntemplate <size_t size>  \nchar *_ltoa(  \n   long value,  \n   char (&str)[size],  \n   int radix   \n); // C++ only  \ntemplate <size_t size>  \nwchar_t *_ltow(  \n   long value,  \n   wchar_t (&str)[size],  \n   int radix   \n); // C++ only  \n```  \n  \n#### Parameters  \n `value`  \n Number to be converted.  \n  \n `str`  \n String result.  \n  \n `radix`  \n Base of `value`.  \n  \n## Return Value  \n Each of these functions returns a pointer to `str`. There is no error return.  \n  \n## Remarks  \n The `_ltoa` function converts the digits of `value` to a null-terminated character string and stores the result (up to 33 bytes) in `str`. The `radix` argument specifies the base of `value`, which must be in the range 2 – 36. If `radix` equals 10 and `value` is negative, the first character of the stored string is the minus sign (–). `_ltow` is a wide-character version of `_ltoa`; the second argument and return value of `_ltow` are wide-character strings. Each of these functions is Microsoft-specific.  \n  \n> [!IMPORTANT]\n>  To prevent buffer overruns, ensure that the `str` buffer is large enough to hold the converted digits plus the trailing null-character and a sign character.  \n  \n In C++, these functions have template overloads. For more information, see [Secure Template Overloads](../../c-runtime-library/secure-template-overloads.md).  \n  \n### Generic-Text Routine Mappings  \n  \n|Tchar.h routine|_UNICODE and _MBCS not defined|_MBCS defined|_UNICODE defined|  \n|---------------------|--------------------------------------|--------------------|-----------------------|  \n|`_ltot`|`_ltoa`|`_ltoa`|`_ltow`|  \n  \n## Requirements  \n  \n|Routine|Required header|  \n|-------------|---------------------|  \n|`_ltoa`|\\<stdlib.h>|  \n|`_ltow`|\\<stdlib.h>|  \n  \n For more compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md) in the Introduction.  \n  \n## Example  \n See the example for [_itoa](../../c-runtime-library/reference/itoa-i64toa-ui64toa-itow-i64tow-ui64tow.md).  \n  \n## .NET Framework Equivalent  \n [System::Convert::ToString](https://msdn.microsoft.com/en-us/library/system.convert.tostring.aspx)  \n  \n## See Also  \n [Data Conversion](../../c-runtime-library/data-conversion.md)   \n [_itoa, _i64toa, _ui64toa, _itow, _i64tow, _ui64tow](../../c-runtime-library/reference/itoa-i64toa-ui64toa-itow-i64tow-ui64tow.md)   \n [_ultoa, _ultow](../../c-runtime-library/reference/ultoa-ultow.md)"}