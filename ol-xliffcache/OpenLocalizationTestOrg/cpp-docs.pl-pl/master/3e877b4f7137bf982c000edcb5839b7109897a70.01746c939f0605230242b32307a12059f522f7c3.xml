{"nodes":[{"pos":[12,44],"content":"CFileFind Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"CFileFind Class | Microsoft Docs","pos":[0,32]}]},{"content":"CFileFind Class","pos":[747,762]},{"pos":[763,982],"content":"Performs local file searches and is the base class for <bpt id=\"p1\">[</bpt>CGopherFileFind<ept id=\"p1\">](../../mfc/reference/cgopherfilefind-class.md)</ept> and <bpt id=\"p2\">[</bpt>CFtpFileFind<ept id=\"p2\">](../../mfc/reference/cftpfilefind-class.md)</ept>, which perform Internet file searches.","source":"Performs local file searches and is the base class for [CGopherFileFind](../../mfc/reference/cgopherfilefind-class.md) and [CFtpFileFind](../../mfc/reference/cftpfilefind-class.md), which perform Internet file searches."},{"content":"Syntax","pos":[991,997]},{"content":"Members","pos":[1056,1063]},{"content":"Public Constructors","pos":[1073,1092]},{"content":"Name","pos":[1099,1103]},{"content":"Description","pos":[1104,1115]},{"content":"CFileFind::CFileFind","pos":[1154,1174]},{"pos":[1199,1231],"content":"Constructs a <ph id=\"ph1\">`CFileFind`</ph> object.","source":"Constructs a `CFileFind` object."},{"content":"Public Methods","pos":[1242,1256]},{"content":"Name","pos":[1263,1267]},{"content":"Description","pos":[1268,1279]},{"content":"CFileFind::Close","pos":[1318,1334]},{"content":"Closes the search request.","pos":[1355,1381]},{"content":"CFileFind::FindFile","pos":[1387,1406]},{"content":"Searches a directory for a specified file name.","pos":[1430,1477]},{"content":"CFileFind::FindNextFile","pos":[1483,1506]},{"pos":[1534,1615],"content":"Continues a file search from a previous call to <bpt id=\"p1\">[</bpt>FindFile<ept id=\"p1\">](#cfilefind__findfile)</ept>.","source":"Continues a file search from a previous call to [FindFile](#cfilefind__findfile)."},{"content":"CFileFind::GetCreationTime","pos":[1621,1647]},{"content":"Gets the time the file was created.","pos":[1678,1713]},{"content":"CFileFind::GetFileName","pos":[1719,1741]},{"content":"Gets the name, including the extension, of the found file","pos":[1768,1825]},{"content":"CFileFind::GetFilePath","pos":[1831,1853]},{"content":"Gets the whole path of the found file.","pos":[1880,1918]},{"content":"CFileFind::GetFileTitle","pos":[1924,1947]},{"content":"Gets the title of the found file.","pos":[1975,2008]},{"content":"The title does not include the extension.","pos":[2009,2050]},{"content":"CFileFind::GetFileURL","pos":[2056,2077]},{"content":"Gets the URL, including the file path, of the found file.","pos":[2103,2160]},{"content":"CFileFind::GetLastAccessTime","pos":[2166,2194]},{"content":"Gets the time that the file was last accessed.","pos":[2227,2273]},{"content":"CFileFind::GetLastWriteTime","pos":[2279,2306]},{"content":"Gets the time the file was last changed and saved.","pos":[2338,2388]},{"content":"CFileFind::GetLength","pos":[2394,2414]},{"content":"Gets the length of the found file, in bytes.","pos":[2439,2483]},{"content":"CFileFind::GetRoot","pos":[2489,2507]},{"content":"Gets the root directory of the found file.","pos":[2530,2572]},{"content":"CFileFind::IsArchived","pos":[2578,2599]},{"content":"Determines if the found file is archived.","pos":[2625,2666]},{"content":"CFileFind::IsCompressed","pos":[2672,2695]},{"content":"Determines if the found file is compressed.","pos":[2723,2766]},{"content":"CFileFind::IsDirectory","pos":[2772,2794]},{"content":"Determines if the found file is a directory.","pos":[2821,2865]},{"content":"CFileFind::IsDots","pos":[2871,2888]},{"content":"Determines if the name of the found file has the name \".\" or \"..\", indicating that is actually a directory.","pos":[2910,3017]},{"content":"CFileFind::IsHidden","pos":[3023,3042]},{"content":"Determines if the found file is hidden.","pos":[3066,3105]},{"content":"CFileFind::IsNormal","pos":[3111,3130]},{"content":"Determines if the found file is normal (in other words, has no other attributes).","pos":[3154,3235]},{"content":"CFileFind::IsReadOnly","pos":[3241,3262]},{"content":"Determines if the found file is read-only.","pos":[3288,3330]},{"content":"CFileFind::IsSystem","pos":[3336,3355]},{"content":"Determines if the found file is a system file.","pos":[3379,3425]},{"content":"CFileFind::IsTemporary","pos":[3431,3453]},{"content":"Determines if the found file is temporary.","pos":[3480,3522]},{"content":"CFileFind::MatchesMask","pos":[3528,3550]},{"content":"Indicates the desired file attributes of the file to be found.","pos":[3577,3639]},{"content":"Protected Methods","pos":[3650,3667]},{"content":"Name","pos":[3674,3678]},{"content":"Description","pos":[3679,3690]},{"content":"CFileFind::CloseContext","pos":[3729,3752]},{"content":"Closes the file specified by the current search handle.","pos":[3780,3835]},{"content":"Protected Data Members","pos":[3846,3868]},{"content":"Name","pos":[3875,3879]},{"content":"Description","pos":[3880,3891]},{"content":"CFileFind::m_pTM","pos":[3930,3946]},{"pos":[3967,4012],"content":"Pointer to a <ph id=\"ph1\">`CAtlTransactionManager`</ph> object.","source":"Pointer to a `CAtlTransactionManager` object."},{"content":"Remarks","pos":[4022,4029]},{"content":"includes member functions that begin a search, locate a file, and return the title, name, or path of the file.","pos":[4045,4155]},{"content":"For Internet searches, the member function <bpt id=\"p1\">[</bpt>GetFileURL<ept id=\"p1\">](#cfilefind__getfileurl)</ept> returns the file's URL.","pos":[4156,4259],"source":" For Internet searches, the member function [GetFileURL](#cfilefind__getfileurl) returns the file's URL."},{"content":"is the base class for two other MFC classes designed to search particular server types: <ph id=\"ph1\">`CGopherFileFind`</ph> works specifically with gopher servers, and <ph id=\"ph2\">`CFtpFileFind`</ph> works specifically with FTP servers.","pos":[4278,4479],"source":" is the base class for two other MFC classes designed to search particular server types: `CGopherFileFind` works specifically with gopher servers, and `CFtpFileFind` works specifically with FTP servers."},{"content":"Together, these three classes provide a seamless mechanism for the client to find files, regardless of the server protocol, the file type, or location, on either a local machine or a remote server.","pos":[4480,4677]},{"content":"The following code will enumerate all the files in the current directory, printing the name of each file:","pos":[4684,4789]},{"pos":[4807,4822],"content":"NVC_MFCFiles#31"},{"content":"To keep the example simple, this code uses the standard C++ library <ph id=\"ph1\">`cout`</ph> class.","pos":[4901,4982],"source":"To keep the example simple, this code uses the standard C++ library `cout` class."},{"content":"The <ph id=\"ph1\">`cout`</ph> line could be replaced with a call to <ph id=\"ph2\">`CListBox::AddString`</ph>, for example, in a program with a graphical user interface.","pos":[4983,5113],"source":" The `cout` line could be replaced with a call to `CListBox::AddString`, for example, in a program with a graphical user interface."},{"pos":[5120,5301],"content":"For more information about how to use <ph id=\"ph1\">`CFileFind`</ph> and the other WinInet classes, see the article <bpt id=\"p1\">[</bpt>Internet Programming with WinInet<ept id=\"p1\">](../../mfc/win32-internet-extensions-wininet.md)</ept>.","source":"For more information about how to use `CFileFind` and the other WinInet classes, see the article [Internet Programming with WinInet](../../mfc/win32-internet-extensions-wininet.md)."},{"content":"Inheritance Hierarchy","pos":[5310,5331]},{"content":"CObject","pos":[5336,5343]},{"content":"Requirements","pos":[5409,5421]},{"pos":[5425,5442],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> afx.h","source":"**Header:** afx.h"},{"pos":[5489,5509],"content":"CFileFind::CFileFind"},{"pos":[5513,5585],"content":"This member function is called when a <ph id=\"ph1\">`CFileFind`</ph> object is constructed.","source":"This member function is called when a `CFileFind` object is constructed."},{"content":"Parameters","pos":[5666,5676]},{"content":"Pointer to CAtlTransactionManager object","pos":[5689,5729]},{"content":"Example","pos":[5739,5746]},{"pos":[5751,5821],"content":"See the example for <bpt id=\"p1\">[</bpt>CFileFind::GetFileName<ept id=\"p1\">](#cfilefind__getfilename)</ept>.","source":"See the example for [CFileFind::GetFileName](#cfilefind__getfilename)."},{"pos":[5864,5880],"content":"CFileFind::Close"},{"content":"Call this member function to end the search, reset the context, and release all resources.","pos":[5884,5974]},{"content":"Remarks","pos":[6013,6020]},{"pos":[6024,6172],"content":"After calling <bpt id=\"p1\">**</bpt>Close<ept id=\"p1\">**</ept>, you do not have to create a new <ph id=\"ph1\">`CFileFind`</ph> instance before calling <bpt id=\"p2\">[</bpt>FindFile<ept id=\"p2\">](#cfilefind__findfile)</ept> to begin a new search.","source":"After calling **Close**, you do not have to create a new `CFileFind` instance before calling [FindFile](#cfilefind__findfile) to begin a new search."},{"content":"Example","pos":[6182,6189]},{"pos":[6194,6264],"content":"See the example for <bpt id=\"p1\">[</bpt>CFileFind::GetFileName<ept id=\"p1\">](#cfilefind__getfilename)</ept>.","source":"See the example for [CFileFind::GetFileName](#cfilefind__getfilename)."},{"pos":[6314,6337],"content":"CFileFind::CloseContext"},{"content":"Closes the file specified by the current search handle.","pos":[6341,6396]},{"content":"Remarks","pos":[6450,6457]},{"content":"Closes the file specified by the current value of the search handle.","pos":[6461,6529]},{"content":"Override this function to change the default behavior.","pos":[6530,6584]},{"content":"You must call the <bpt id=\"p1\">[</bpt>FindFile<ept id=\"p1\">](#cfilefind__findfile)</ept> or <bpt id=\"p2\">[</bpt>FindNextFile<ept id=\"p2\">](#cfilefind__findnextfile)</ept> functions at least once to retrieve a valid search handle.","pos":[6591,6744],"source":"You must call the [FindFile](#cfilefind__findfile) or [FindNextFile](#cfilefind__findnextfile) functions at least once to retrieve a valid search handle."},{"content":"The <bpt id=\"p1\">**</bpt>FindFile<ept id=\"p1\">**</ept> and <ph id=\"ph1\">`FindNextFile`</ph> functions use the search handle to locate files with names that match a given name.","pos":[6745,6864],"source":" The **FindFile** and `FindNextFile` functions use the search handle to locate files with names that match a given name."},{"pos":[6910,6929],"content":"CFileFind::FindFile"},{"content":"Call this member function to open a file search.","pos":[6933,6981]},{"content":"Parameters","pos":[7085,7095]},{"content":"A pointer to a string containing the name of the file to find.","pos":[7113,7175]},{"content":"If you pass <bpt id=\"p1\">**</bpt>NULL<ept id=\"p1\">**</ept> for <ph id=\"ph1\">`pstrName`</ph>, <bpt id=\"p2\">**</bpt>FindFile<ept id=\"p2\">**</ept> does a wildcard (*.<ph id=\"ph2\">\\*</ph>) search.","pos":[7176,7256],"source":" If you pass **NULL** for `pstrName`, **FindFile** does a wildcard (*.\\*) search."},{"content":"dwUnused","pos":[7264,7272]},{"content":"Reserved to make <bpt id=\"p1\">**</bpt>FindFile<ept id=\"p1\">**</ept> polymorphic with derived classes.","pos":[7277,7340],"source":" Reserved to make **FindFile** polymorphic with derived classes."},{"content":"Must be 0.","pos":[7341,7351]},{"content":"Return Value","pos":[7361,7373]},{"content":"Nonzero if successful; otherwise 0.","pos":[7377,7412]},{"content":"To get extended error information, call the Win32 function <bpt id=\"p1\">[</bpt>GetLastError<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms679360)</ept>.","pos":[7413,7547],"source":" To get extended error information, call the Win32 function [GetLastError](http://msdn.microsoft.com/library/windows/desktop/ms679360)."},{"content":"Remarks","pos":[7557,7564]},{"content":"After calling <bpt id=\"p1\">**</bpt>FindFile<ept id=\"p1\">**</ept> to begin the file search, call <bpt id=\"p2\">[</bpt>FindNextFile<ept id=\"p2\">](#cfilefind__findnextfile)</ept> to retrieve subsequent files.","pos":[7568,7696],"source":"After calling **FindFile** to begin the file search, call [FindNextFile](#cfilefind__findnextfile) to retrieve subsequent files."},{"content":"You must call <ph id=\"ph1\">`FindNextFile`</ph> at least once before calling any of the following attribute member functions:","pos":[7697,7803],"source":" You must call `FindNextFile` at least once before calling any of the following attribute member functions:"},{"content":"GetCreationTime","pos":[7812,7827]},{"content":"GetFileName","pos":[7866,7877]},{"content":"GetFileTitle","pos":[7912,7924]},{"content":"GetFilePath","pos":[7960,7971]},{"content":"GetFileURL","pos":[8006,8016]},{"content":"GetLastAccessTime","pos":[8050,8067]},{"content":"GetLastWriteTime","pos":[8108,8124]},{"content":"GetLength","pos":[8164,8173]},{"content":"GetRoot","pos":[8206,8213]},{"content":"IsArchived","pos":[8244,8254]},{"content":"IsCompressed","pos":[8288,8300]},{"content":"IsDirectory","pos":[8336,8347]},{"content":"IsDots","pos":[8382,8388]},{"content":"IsHidden","pos":[8418,8426]},{"content":"IsNormal","pos":[8458,8466]},{"content":"IsReadOnly","pos":[8498,8508]},{"content":"IsSystem","pos":[8542,8550]},{"content":"IsTemporary","pos":[8582,8593]},{"content":"MatchesMask","pos":[8628,8639]},{"content":"Example","pos":[8675,8682]},{"pos":[8687,8757],"content":"See the example for <bpt id=\"p1\">[</bpt>CFileFind::IsDirectory<ept id=\"p1\">](#cfilefind__isdirectory)</ept>.","source":"See the example for [CFileFind::IsDirectory](#cfilefind__isdirectory)."},{"pos":[8807,8830],"content":"CFileFind::FindNextFile"},{"pos":[8834,8943],"content":"Call this member function to continue a file search from a previous call to <bpt id=\"p1\">[</bpt>FindFile<ept id=\"p1\">](#cfilefind__findfile)</ept>.","source":"Call this member function to continue a file search from a previous call to [FindFile](#cfilefind__findfile)."},{"content":"Return Value","pos":[8997,9009]},{"content":"Nonzero if there are more files; zero if the file found is the last one in the directory or if an error occurred.","pos":[9013,9126]},{"content":"To get extended error information, call the Win32 function <bpt id=\"p1\">[</bpt>GetLastError<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms679360)</ept>.","pos":[9127,9261],"source":" To get extended error information, call the Win32 function [GetLastError](http://msdn.microsoft.com/library/windows/desktop/ms679360)."},{"content":"If the file found is the last file in the directory, or if no matching files can be found, the <ph id=\"ph1\">`GetLastError`</ph> function returns ERROR_NO_MORE_FILES.","pos":[9262,9409],"source":" If the file found is the last file in the directory, or if no matching files can be found, the `GetLastError` function returns ERROR_NO_MORE_FILES."},{"content":"Remarks","pos":[9419,9426]},{"pos":[9430,9536],"content":"You must call <ph id=\"ph1\">`FindNextFile`</ph> at least once before calling any of the following attribute member functions:","source":"You must call `FindNextFile` at least once before calling any of the following attribute member functions:"},{"content":"GetCreationTime","pos":[9545,9560]},{"content":"GetFileName","pos":[9599,9610]},{"content":"GetFileTitle","pos":[9645,9657]},{"content":"GetFilePath","pos":[9693,9704]},{"content":"GetFileURL","pos":[9739,9749]},{"content":"GetLastAccessTime","pos":[9783,9800]},{"content":"GetLastWriteTime","pos":[9841,9857]},{"content":"GetLength","pos":[9897,9906]},{"content":"GetRoot","pos":[9939,9946]},{"content":"IsArchived","pos":[9977,9987]},{"content":"IsCompressed","pos":[10021,10033]},{"content":"IsDirectory","pos":[10069,10080]},{"content":"IsDots","pos":[10115,10121]},{"content":"IsHidden","pos":[10151,10159]},{"content":"IsNormal","pos":[10191,10199]},{"content":"IsReadOnly","pos":[10231,10241]},{"content":"IsSystem","pos":[10275,10283]},{"content":"IsTemporary","pos":[10315,10326]},{"content":"MatchesMask","pos":[10361,10372]},{"pos":[10420,10520],"content":"wraps the Win32 function <bpt id=\"p1\">[</bpt>FindNextFile<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/aa364428)</ept>.","source":" wraps the Win32 function [FindNextFile](http://msdn.microsoft.com/library/windows/desktop/aa364428)."},{"content":"Example","pos":[10530,10537]},{"pos":[10542,10612],"content":"See the example for <bpt id=\"p1\">[</bpt>CFileFind::IsDirectory<ept id=\"p1\">](#cfilefind__isdirectory)</ept>.","source":"See the example for [CFileFind::IsDirectory](#cfilefind__isdirectory)."},{"pos":[10665,10691],"content":"CFileFind::GetCreationTime"},{"content":"Call this member function to get the time the specified file was created.","pos":[10695,10768]},{"content":"Parameters","pos":[10911,10921]},{"content":"A pointer to a <bpt id=\"p1\">[</bpt>FILETIME<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms724284)</ept> structure containing the time the file was created.","pos":[10941,11078],"source":" A pointer to a [FILETIME](http://msdn.microsoft.com/library/windows/desktop/ms724284) structure containing the time the file was created."},{"content":"A reference to a <bpt id=\"p1\">[</bpt>CTime<ept id=\"p1\">](../../atl-mfc-shared/reference/ctime-class.md)</ept> object.","pos":[11098,11177],"source":" A reference to a [CTime](../../atl-mfc-shared/reference/ctime-class.md) object."},{"content":"Return Value","pos":[11187,11199]},{"content":"Nonzero if successful; 0 if unsuccessful.","pos":[11203,11244]},{"content":"returns 0 only if <bpt id=\"p1\">[</bpt>FindNextFile<ept id=\"p1\">](#cfilefind__findnextfile)</ept> has never been called on this <ph id=\"ph1\">`CFileFind`</ph> object.","pos":[11263,11371],"source":" returns 0 only if [FindNextFile](#cfilefind__findnextfile) has never been called on this `CFileFind` object."},{"content":"Remarks","pos":[11381,11388]},{"pos":[11392,11494],"content":"You must call <bpt id=\"p1\">[</bpt>FindNextFile<ept id=\"p1\">](#cfilefind__findnextfile)</ept> at least once before calling <ph id=\"ph1\">`GetCreationTime`</ph>.","source":"You must call [FindNextFile](#cfilefind__findnextfile) at least once before calling `GetCreationTime`."},{"pos":[11502,12145],"content":"[!NOTE]\n Not all file systems use the same semantics to implement the time stamp returned by this function. This function may return the same value returned by other time stamp functions if the underlying file system or server does not support keeping the time attribute. See the [Win32_FIND_DATA](http://msdn.microsoft.com/library/windows/desktop/aa365740) structure for information about time formats. On some operation systems, the returned time is in the time zone local to the machine were the file is located. See the Win32 [FileTimeToLocalFileTime](http://msdn.microsoft.com/library/windows/desktop/ms724277) API for more information.","leadings":["","> "],"nodes":[{"content":" Not all file systems use the same semantics to implement the time stamp returned by this function. This function may return the same value returned by other time stamp functions if the underlying file system or server does not support keeping the time attribute. See the [Win32_FIND_DATA](http://msdn.microsoft.com/library/windows/desktop/aa365740) structure for information about time formats. On some operation systems, the returned time is in the time zone local to the machine were the file is located. See the Win32 [FileTimeToLocalFileTime](http://msdn.microsoft.com/library/windows/desktop/ms724277) API for more information.","pos":[8,641],"nodes":[{"content":"Not all file systems use the same semantics to implement the time stamp returned by this function.","pos":[1,99]},{"content":"This function may return the same value returned by other time stamp functions if the underlying file system or server does not support keeping the time attribute.","pos":[100,263]},{"content":"See the <bpt id=\"p1\">[</bpt>Win32_FIND_DATA<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/aa365740)</ept> structure for information about time formats.","pos":[264,395],"source":" See the [Win32_FIND_DATA](http://msdn.microsoft.com/library/windows/desktop/aa365740) structure for information about time formats."},{"content":"On some operation systems, the returned time is in the time zone local to the machine were the file is located.","pos":[396,507]},{"content":"See the Win32 <bpt id=\"p1\">[</bpt>FileTimeToLocalFileTime<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms724277)</ept> API for more information.","pos":[508,633],"source":" See the Win32 [FileTimeToLocalFileTime](http://msdn.microsoft.com/library/windows/desktop/ms724277) API for more information."}]}]},{"content":"Example","pos":[12155,12162]},{"pos":[12167,12233],"content":"See the example for <bpt id=\"p1\">[</bpt>CFileFind::GetLength<ept id=\"p1\">](#cfilefind__getlength)</ept>.","source":"See the example for [CFileFind::GetLength](#cfilefind__getlength)."},{"pos":[12282,12304],"content":"CFileFind::GetFileName"},{"content":"Call this member function to get the name of the found file.","pos":[12308,12368]},{"content":"Return Value","pos":[12433,12445]},{"content":"The name of the most-recently-found file.","pos":[12449,12490]},{"content":"Remarks","pos":[12500,12507]},{"pos":[12511,12607],"content":"You must call <bpt id=\"p1\">[</bpt>FindNextFile<ept id=\"p1\">](#cfilefind__findnextfile)</ept> at least once before calling GetFileName.","source":"You must call [FindNextFile](#cfilefind__findnextfile) at least once before calling GetFileName."},{"content":"is one of three <ph id=\"ph1\">`CFileFind`</ph> member functions that return some form of the file name.","pos":[12628,12712],"source":" is one of three `CFileFind` member functions that return some form of the file name."},{"content":"The following list describes the three and how they vary:","pos":[12713,12770]},{"content":"returns the file name, including the extension.","pos":[12792,12839]},{"content":"For example, calling <ph id=\"ph1\">`GetFileName`</ph> to generate a user message about the file <ph id=\"ph2\">`c:\\myhtml\\myfile.txt`</ph> returns the file name <ph id=\"ph3\">`myfile.txt`</ph>.","pos":[12840,12975],"source":" For example, calling `GetFileName` to generate a user message about the file `c:\\myhtml\\myfile.txt` returns the file name `myfile.txt`."},{"content":"<bpt id=\"p1\">[</bpt>GetFilePath<ept id=\"p1\">](#cfilefind__getfilepath)</ept> returns the entire path for the file.","pos":[12983,13059],"source":"[GetFilePath](#cfilefind__getfilepath) returns the entire path for the file."},{"content":"For example, calling <ph id=\"ph1\">`GetFilePath`</ph> to generate a user message about the file <ph id=\"ph2\">`c:\\myhtml\\myfile.txt`</ph> returns the file path <ph id=\"ph3\">`c:\\myhtml\\myfile.txt`</ph>.","pos":[13060,13205],"source":" For example, calling `GetFilePath` to generate a user message about the file `c:\\myhtml\\myfile.txt` returns the file path `c:\\myhtml\\myfile.txt`."},{"content":"<bpt id=\"p1\">[</bpt>GetFileTitle<ept id=\"p1\">](#cfilefind__getfiletitle)</ept> returns the file name, excluding the file extension.","pos":[13213,13306],"source":"[GetFileTitle](#cfilefind__getfiletitle) returns the file name, excluding the file extension."},{"content":"For example, calling <ph id=\"ph1\">`GetFileTitle`</ph> to generate a user message about the file <ph id=\"ph2\">`c:\\myhtml\\myfile.txt`</ph> returns the file title <ph id=\"ph3\">`myfile`</ph>.","pos":[13307,13440],"source":" For example, calling `GetFileTitle` to generate a user message about the file `c:\\myhtml\\myfile.txt` returns the file title `myfile`."},{"content":"Example","pos":[13450,13457]},{"pos":[13472,13487],"content":"NVC_MFCFiles#32"},{"pos":[13608,13630],"content":"CFileFind::GetFilePath"},{"content":"Call this member function to get the full path of the specified file.","pos":[13634,13703]},{"content":"Return Value","pos":[13768,13780]},{"content":"The path of the specified file.","pos":[13784,13815]},{"content":"Remarks","pos":[13825,13832]},{"pos":[13836,13934],"content":"You must call <bpt id=\"p1\">[</bpt>FindNextFile<ept id=\"p1\">](#cfilefind__findnextfile)</ept> at least once before calling <ph id=\"ph1\">`GetFilePath`</ph>.","source":"You must call [FindNextFile](#cfilefind__findnextfile) at least once before calling `GetFilePath`."},{"content":"is one of three <ph id=\"ph1\">`CFileFind`</ph> member functions that return some form of the file name.","pos":[13955,14039],"source":" is one of three `CFileFind` member functions that return some form of the file name."},{"content":"The following list describes the three and how they vary:","pos":[14040,14097]},{"content":"<bpt id=\"p1\">[</bpt>GetFileName<ept id=\"p1\">](#cfilefind__getfilename)</ept> returns the file name, including the extension.","pos":[14105,14191],"source":"[GetFileName](#cfilefind__getfilename) returns the file name, including the extension."},{"content":"For example, calling <ph id=\"ph1\">`GetFileName`</ph> to generate a user message about the file <ph id=\"ph2\">`c:\\myhtml\\myfile.txt`</ph> returns the file name <ph id=\"ph3\">`myfile.txt`</ph>.","pos":[14192,14327],"source":" For example, calling `GetFileName` to generate a user message about the file `c:\\myhtml\\myfile.txt` returns the file name `myfile.txt`."},{"content":"returns the entire path for the file.","pos":[14349,14386]},{"content":"For example, calling <ph id=\"ph1\">`GetFilePath`</ph> to generate a user message about the file <ph id=\"ph2\">`c:\\myhtml\\myfile.txt`</ph> returns the file path <ph id=\"ph3\">`c:\\myhtml\\myfile.txt`</ph>.","pos":[14387,14532],"source":" For example, calling `GetFilePath` to generate a user message about the file `c:\\myhtml\\myfile.txt` returns the file path `c:\\myhtml\\myfile.txt`."},{"content":"<bpt id=\"p1\">[</bpt>GetFileTitle<ept id=\"p1\">](#cfilefind__getfiletitle)</ept> returns the file name, excluding the file extension.","pos":[14540,14633],"source":"[GetFileTitle](#cfilefind__getfiletitle) returns the file name, excluding the file extension."},{"content":"For example, calling <ph id=\"ph1\">`GetFileTitle`</ph> to generate a user message about the file <ph id=\"ph2\">`c:\\myhtml\\myfile.txt`</ph> returns the file title <ph id=\"ph3\">`myfile`</ph>.","pos":[14634,14767],"source":" For example, calling `GetFileTitle` to generate a user message about the file `c:\\myhtml\\myfile.txt` returns the file title `myfile`."},{"content":"Example","pos":[14777,14784]},{"pos":[14789,14859],"content":"See the example for <bpt id=\"p1\">[</bpt>CFileFind::GetFileName<ept id=\"p1\">](#cfilefind__getfilename)</ept>.","source":"See the example for [CFileFind::GetFileName](#cfilefind__getfilename)."},{"pos":[14909,14932],"content":"CFileFind::GetFileTitle"},{"content":"Call this member function to get the title of the found file.","pos":[14936,14997]},{"content":"Return Value","pos":[15063,15075]},{"content":"The title of the file.","pos":[15079,15101]},{"content":"Remarks","pos":[15111,15118]},{"pos":[15122,15221],"content":"You must call <bpt id=\"p1\">[</bpt>FindNextFile<ept id=\"p1\">](#cfilefind__findnextfile)</ept> at least once before calling <ph id=\"ph1\">`GetFileTitle`</ph>.","source":"You must call [FindNextFile](#cfilefind__findnextfile) at least once before calling `GetFileTitle`."},{"content":"is one of three <ph id=\"ph1\">`CFileFind`</ph> member functions that return some form of the file name.","pos":[15243,15327],"source":" is one of three `CFileFind` member functions that return some form of the file name."},{"content":"The following list describes the three and how they vary:","pos":[15328,15385]},{"content":"<bpt id=\"p1\">[</bpt>GetFileName<ept id=\"p1\">](#cfilefind__getfilename)</ept> returns the file name, including the extension.","pos":[15393,15479],"source":"[GetFileName](#cfilefind__getfilename) returns the file name, including the extension."},{"content":"For example, calling <ph id=\"ph1\">`GetFileName`</ph> to generate a user message about the file <ph id=\"ph2\">`c:\\myhtml\\myfile.txt`</ph> returns the file name <ph id=\"ph3\">`myfile.txt`</ph>.","pos":[15480,15615],"source":" For example, calling `GetFileName` to generate a user message about the file `c:\\myhtml\\myfile.txt` returns the file name `myfile.txt`."},{"content":"<bpt id=\"p1\">[</bpt>GetFilePath<ept id=\"p1\">](#cfilefind__getfilepath)</ept> returns the entire path for the file.","pos":[15623,15699],"source":"[GetFilePath](#cfilefind__getfilepath) returns the entire path for the file."},{"content":"For example, calling <ph id=\"ph1\">`GetFilePath`</ph> to generate a user message about the file <ph id=\"ph2\">`c:\\myhtml\\myfile.txt`</ph> returns the file path <ph id=\"ph3\">`c:\\myhtml\\myfile.txt`</ph>.","pos":[15700,15845],"source":" For example, calling `GetFilePath` to generate a user message about the file `c:\\myhtml\\myfile.txt` returns the file path `c:\\myhtml\\myfile.txt`."},{"content":"returns the file name, excluding the file extension.","pos":[15868,15920]},{"content":"For example, calling <ph id=\"ph1\">`GetFileTitle`</ph> to generate a user message about the file <ph id=\"ph2\">`c:\\myhtml\\myfile.txt`</ph> returns the file title <ph id=\"ph3\">`myfile`</ph>.","pos":[15921,16054],"source":" For example, calling `GetFileTitle` to generate a user message about the file `c:\\myhtml\\myfile.txt` returns the file title `myfile`."},{"content":"Example","pos":[16064,16071]},{"pos":[16076,16146],"content":"See the example for <bpt id=\"p1\">[</bpt>CFileFind::GetFileName<ept id=\"p1\">](#cfilefind__getfilename)</ept>.","source":"See the example for [CFileFind::GetFileName](#cfilefind__getfilename)."},{"pos":[16194,16215],"content":"CFileFind::GetFileURL"},{"content":"Call this member function to retrieve the specified URL.","pos":[16219,16275]},{"content":"Return Value","pos":[16339,16351]},{"content":"The complete URL.","pos":[16355,16372]},{"content":"Remarks","pos":[16382,16389]},{"pos":[16393,16490],"content":"You must call <bpt id=\"p1\">[</bpt>FindNextFile<ept id=\"p1\">](#cfilefind__findnextfile)</ept> at least once before calling <ph id=\"ph1\">`GetFileURL`</ph>.","source":"You must call [FindNextFile](#cfilefind__findnextfile) at least once before calling `GetFileURL`."},{"content":"is similar to the member function <bpt id=\"p1\">[</bpt>GetFilePath<ept id=\"p1\">](#cfilefind__getfilepath)</ept>, except that it returns the URL in the form <ph id=\"ph1\">`file://path`</ph>.","pos":[16510,16641],"source":" is similar to the member function [GetFilePath](#cfilefind__getfilepath), except that it returns the URL in the form `file://path`."},{"content":"For example, calling <ph id=\"ph1\">`GetFileURL`</ph> to get the complete URL for <ph id=\"ph2\">`myfile.txt`</ph> returns the URL <ph id=\"ph3\">`file://c:\\myhtml\\myfile.txt`</ph>.","pos":[16642,16763],"source":" For example, calling `GetFileURL` to get the complete URL for `myfile.txt` returns the URL `file://c:\\myhtml\\myfile.txt`."},{"content":"Example","pos":[16773,16780]},{"pos":[16785,16855],"content":"See the example for <bpt id=\"p1\">[</bpt>CFileFind::GetFileName<ept id=\"p1\">](#cfilefind__getfilename)</ept>.","source":"See the example for [CFileFind::GetFileName](#cfilefind__getfilename)."},{"pos":[16910,16938],"content":"CFileFind::GetLastAccessTime"},{"content":"Call this member function to get the time that the specified file was last accessed.","pos":[16942,17026]},{"content":"Parameters","pos":[17173,17183]},{"content":"A reference to a <bpt id=\"p1\">[</bpt>CTime<ept id=\"p1\">](../../atl-mfc-shared/reference/ctime-class.md)</ept> object.","pos":[17200,17279],"source":" A reference to a [CTime](../../atl-mfc-shared/reference/ctime-class.md) object."},{"content":"A pointer to a <bpt id=\"p1\">[</bpt>FILETIME<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms724284)</ept> structure containing the time the file was last accessed.","pos":[17302,17445],"source":" A pointer to a [FILETIME](http://msdn.microsoft.com/library/windows/desktop/ms724284) structure containing the time the file was last accessed."},{"content":"Return Value","pos":[17455,17467]},{"content":"Nonzero if successful; 0 if unsuccessful.","pos":[17471,17512]},{"content":"returns 0 only if <bpt id=\"p1\">[</bpt>FindNextFile<ept id=\"p1\">](#cfilefind__findnextfile)</ept> has never been called on this <ph id=\"ph1\">`CFileFind`</ph> object.","pos":[17533,17641],"source":" returns 0 only if [FindNextFile](#cfilefind__findnextfile) has never been called on this `CFileFind` object."},{"content":"Remarks","pos":[17651,17658]},{"pos":[17662,17766],"content":"You must call <bpt id=\"p1\">[</bpt>FindNextFile<ept id=\"p1\">](#cfilefind__findnextfile)</ept> at least once before calling <ph id=\"ph1\">`GetLastAccessTime`</ph>.","source":"You must call [FindNextFile](#cfilefind__findnextfile) at least once before calling `GetLastAccessTime`."},{"pos":[17774,18417],"content":"[!NOTE]\n Not all file systems use the same semantics to implement the time stamp returned by this function. This function may return the same value returned by other time stamp functions if the underlying file system or server does not support keeping the time attribute. See the [Win32_FIND_DATA](http://msdn.microsoft.com/library/windows/desktop/aa365740) structure for information about time formats. On some operation systems, the returned time is in the time zone local to the machine were the file is located. See the Win32 [FileTimeToLocalFileTime](http://msdn.microsoft.com/library/windows/desktop/ms724277) API for more information.","leadings":["","> "],"nodes":[{"content":" Not all file systems use the same semantics to implement the time stamp returned by this function. This function may return the same value returned by other time stamp functions if the underlying file system or server does not support keeping the time attribute. See the [Win32_FIND_DATA](http://msdn.microsoft.com/library/windows/desktop/aa365740) structure for information about time formats. On some operation systems, the returned time is in the time zone local to the machine were the file is located. See the Win32 [FileTimeToLocalFileTime](http://msdn.microsoft.com/library/windows/desktop/ms724277) API for more information.","pos":[8,641],"nodes":[{"content":"Not all file systems use the same semantics to implement the time stamp returned by this function.","pos":[1,99]},{"content":"This function may return the same value returned by other time stamp functions if the underlying file system or server does not support keeping the time attribute.","pos":[100,263]},{"content":"See the <bpt id=\"p1\">[</bpt>Win32_FIND_DATA<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/aa365740)</ept> structure for information about time formats.","pos":[264,395],"source":" See the [Win32_FIND_DATA](http://msdn.microsoft.com/library/windows/desktop/aa365740) structure for information about time formats."},{"content":"On some operation systems, the returned time is in the time zone local to the machine were the file is located.","pos":[396,507]},{"content":"See the Win32 <bpt id=\"p1\">[</bpt>FileTimeToLocalFileTime<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms724277)</ept> API for more information.","pos":[508,633],"source":" See the Win32 [FileTimeToLocalFileTime](http://msdn.microsoft.com/library/windows/desktop/ms724277) API for more information."}]}]},{"content":"Example","pos":[18427,18434]},{"pos":[18439,18505],"content":"See the example for <bpt id=\"p1\">[</bpt>CFileFind::GetLength<ept id=\"p1\">](#cfilefind__getlength)</ept>.","source":"See the example for [CFileFind::GetLength](#cfilefind__getlength)."},{"pos":[18559,18586],"content":"CFileFind::GetLastWriteTime"},{"content":"Call this member function to get the last time the file was changed.","pos":[18590,18658]},{"content":"Parameters","pos":[18803,18813]},{"content":"A pointer to a <bpt id=\"p1\">[</bpt>FILETIME<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms724284)</ept> structure containing the time the file was last written to.","pos":[18833,18978],"source":" A pointer to a [FILETIME](http://msdn.microsoft.com/library/windows/desktop/ms724284) structure containing the time the file was last written to."},{"content":"A reference to a <bpt id=\"p1\">[</bpt>CTime<ept id=\"p1\">](../../atl-mfc-shared/reference/ctime-class.md)</ept> object.","pos":[18998,19077],"source":" A reference to a [CTime](../../atl-mfc-shared/reference/ctime-class.md) object."},{"content":"Return Value","pos":[19087,19099]},{"content":"Nonzero if successful; 0 if unsuccessful.","pos":[19103,19144]},{"content":"returns 0 only if <bpt id=\"p1\">[</bpt>FindNextFile<ept id=\"p1\">](#cfilefind__findnextfile)</ept> has never been called on this <ph id=\"ph1\">`CFileFind`</ph> object.","pos":[19164,19272],"source":" returns 0 only if [FindNextFile](#cfilefind__findnextfile) has never been called on this `CFileFind` object."},{"content":"Remarks","pos":[19282,19289]},{"pos":[19293,19396],"content":"You must call <bpt id=\"p1\">[</bpt>FindNextFile<ept id=\"p1\">](#cfilefind__findnextfile)</ept> at least once before calling <ph id=\"ph1\">`GetLastWriteTime`</ph>.","source":"You must call [FindNextFile](#cfilefind__findnextfile) at least once before calling `GetLastWriteTime`."},{"pos":[19404,20047],"content":"[!NOTE]\n Not all file systems use the same semantics to implement the time stamp returned by this function. This function may return the same value returned by other time stamp functions if the underlying file system or server does not support keeping the time attribute. See the [Win32_Find_Data](http://msdn.microsoft.com/library/windows/desktop/aa365740) structure for information about time formats. On some operation systems, the returned time is in the time zone local to the machine were the file is located. See the Win32 [FileTimeToLocalFileTime](http://msdn.microsoft.com/library/windows/desktop/ms724277) API for more information.","leadings":["","> "],"nodes":[{"content":" Not all file systems use the same semantics to implement the time stamp returned by this function. This function may return the same value returned by other time stamp functions if the underlying file system or server does not support keeping the time attribute. See the [Win32_Find_Data](http://msdn.microsoft.com/library/windows/desktop/aa365740) structure for information about time formats. On some operation systems, the returned time is in the time zone local to the machine were the file is located. See the Win32 [FileTimeToLocalFileTime](http://msdn.microsoft.com/library/windows/desktop/ms724277) API for more information.","pos":[8,641],"nodes":[{"content":"Not all file systems use the same semantics to implement the time stamp returned by this function.","pos":[1,99]},{"content":"This function may return the same value returned by other time stamp functions if the underlying file system or server does not support keeping the time attribute.","pos":[100,263]},{"content":"See the <bpt id=\"p1\">[</bpt>Win32_Find_Data<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/aa365740)</ept> structure for information about time formats.","pos":[264,395],"source":" See the [Win32_Find_Data](http://msdn.microsoft.com/library/windows/desktop/aa365740) structure for information about time formats."},{"content":"On some operation systems, the returned time is in the time zone local to the machine were the file is located.","pos":[396,507]},{"content":"See the Win32 <bpt id=\"p1\">[</bpt>FileTimeToLocalFileTime<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms724277)</ept> API for more information.","pos":[508,633],"source":" See the Win32 [FileTimeToLocalFileTime](http://msdn.microsoft.com/library/windows/desktop/ms724277) API for more information."}]}]},{"content":"Example","pos":[20057,20064]},{"pos":[20069,20135],"content":"See the example for <bpt id=\"p1\">[</bpt>CFileFind::GetLength<ept id=\"p1\">](#cfilefind__getlength)</ept>.","source":"See the example for [CFileFind::GetLength](#cfilefind__getlength)."},{"pos":[20182,20202],"content":"CFileFind::GetLength"},{"content":"Call this member function to get the length of the found file, in bytes.","pos":[20206,20278]},{"content":"Return Value","pos":[20335,20347]},{"content":"The length of the found file, in bytes.","pos":[20351,20390]},{"content":"Remarks","pos":[20400,20407]},{"pos":[20411,20507],"content":"You must call <bpt id=\"p1\">[</bpt>FindNextFile<ept id=\"p1\">](#cfilefind__findnextfile)</ept> at least once before calling <ph id=\"ph1\">`GetLength`</ph>.","source":"You must call [FindNextFile](#cfilefind__findnextfile) at least once before calling `GetLength`."},{"pos":[20526,20684],"content":"uses the Win32 structure <bpt id=\"p1\">[</bpt>WIN32_FIND_DATA<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/aa365740)</ept> to get and return the value of the file size, in bytes.","source":" uses the Win32 structure [WIN32_FIND_DATA](http://msdn.microsoft.com/library/windows/desktop/aa365740) to get and return the value of the file size, in bytes."},{"pos":[20692,20865],"content":"[!NOTE]\n As of MFC 7.0, `GetLength` supports 64-bit integer types. Previously existing code built with this newer version of the library may result in truncation warnings.","leadings":["","> "],"nodes":[{"content":" As of MFC 7.0, `GetLength` supports 64-bit integer types. Previously existing code built with this newer version of the library may result in truncation warnings.","pos":[8,171],"nodes":[{"content":"As of MFC 7.0, <ph id=\"ph1\">`GetLength`</ph> supports 64-bit integer types.","pos":[1,58],"source":" As of MFC 7.0, `GetLength` supports 64-bit integer types."},{"content":"Previously existing code built with this newer version of the library may result in truncation warnings.","pos":[59,163]}]}]},{"content":"Example","pos":[20875,20882]},{"pos":[20897,20912],"content":"NVC_MFCFiles#33"},{"pos":[21029,21047],"content":"CFileFind::GetRoot"},{"content":"Call this member function to get the root of the found file.","pos":[21051,21111]},{"content":"Return Value","pos":[21172,21184]},{"content":"The root of the active search.","pos":[21188,21218]},{"content":"Remarks","pos":[21228,21235]},{"pos":[21239,21333],"content":"You must call <bpt id=\"p1\">[</bpt>FindNextFile<ept id=\"p1\">](#cfilefind__findnextfile)</ept> at least once before calling <ph id=\"ph1\">`GetRoot`</ph>.","source":"You must call [FindNextFile](#cfilefind__findnextfile) at least once before calling `GetRoot`."},{"content":"This member function returns the drive specifier and path name used to start a search.","pos":[21340,21426]},{"content":"For example, calling <bpt id=\"p1\">[</bpt>FindFile<ept id=\"p1\">](#cfilefind__findfile)</ept> with <ph id=\"ph1\">`*.dat`</ph> results in <ph id=\"ph2\">`GetRoot`</ph> returning an empty string.","pos":[21427,21541],"source":" For example, calling [FindFile](#cfilefind__findfile) with `*.dat` results in `GetRoot` returning an empty string."},{"content":"Passing a path, such as <ph id=\"ph1\">`c:\\windows\\system\\*.dll`</ph>, to <bpt id=\"p1\">**</bpt>FindFile<ept id=\"p1\">**</ept> results <ph id=\"ph2\">`GetRoot`</ph> returning <ph id=\"ph3\">`c:\\windows\\system\\`</ph>.","pos":[21542,21658],"source":" Passing a path, such as `c:\\windows\\system\\*.dll`, to **FindFile** results `GetRoot` returning `c:\\windows\\system\\`."},{"content":"Example","pos":[21668,21675]},{"pos":[21680,21750],"content":"See the example for <bpt id=\"p1\">[</bpt>CFileFind::GetFileName<ept id=\"p1\">](#cfilefind__getfilename)</ept>.","source":"See the example for [CFileFind::GetFileName](#cfilefind__getfilename)."},{"pos":[21798,21819],"content":"CFileFind::IsArchived"},{"content":"Call this member function to determine if the found file is archived.","pos":[21823,21892]},{"content":"Return Value","pos":[21945,21957]},{"content":"Nonzero if successful; otherwise 0.","pos":[21961,21996]},{"content":"Remarks","pos":[22006,22013]},{"pos":[22017,22241],"content":"Applications mark an archive file, which is to be backed up or removed, with FILE_ATTRIBUTE_ARCHIVE, a file attribute identified in the <bpt id=\"p1\">[</bpt>WIN32_FIND_DATA<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/aa365740)</ept> structure.","source":"Applications mark an archive file, which is to be backed up or removed, with FILE_ATTRIBUTE_ARCHIVE, a file attribute identified in the [WIN32_FIND_DATA](http://msdn.microsoft.com/library/windows/desktop/aa365740) structure."},{"pos":[22248,22345],"content":"You must call <bpt id=\"p1\">[</bpt>FindNextFile<ept id=\"p1\">](#cfilefind__findnextfile)</ept> at least once before calling <ph id=\"ph1\">`IsArchived`</ph>.","source":"You must call [FindNextFile](#cfilefind__findnextfile) at least once before calling `IsArchived`."},{"pos":[22352,22454],"content":"See the member function <bpt id=\"p1\">[</bpt>MatchesMask<ept id=\"p1\">](#cfilefind__matchesmask)</ept> for a complete list of file attributes.","source":"See the member function [MatchesMask](#cfilefind__matchesmask) for a complete list of file attributes."},{"content":"Example","pos":[22464,22471]},{"pos":[22476,22542],"content":"See the example for <bpt id=\"p1\">[</bpt>CFileFind::GetLength<ept id=\"p1\">](#cfilefind__getlength)</ept>.","source":"See the example for [CFileFind::GetLength](#cfilefind__getlength)."},{"pos":[22592,22615],"content":"CFileFind::IsCompressed"},{"content":"Call this member function to determine if the found file is compressed.","pos":[22619,22690]},{"content":"Return Value","pos":[22745,22757]},{"content":"Nonzero if successful; otherwise 0.","pos":[22761,22796]},{"content":"Remarks","pos":[22806,22813]},{"content":"A compressed file is marked with FILE_ATTRIBUTE_COMPRESSED, a file attribute identified in the <bpt id=\"p1\">[</bpt>WIN32_FIND_DATA<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/aa365740)</ept> structure.","pos":[22817,23000],"source":"A compressed file is marked with FILE_ATTRIBUTE_COMPRESSED, a file attribute identified in the [WIN32_FIND_DATA](http://msdn.microsoft.com/library/windows/desktop/aa365740) structure."},{"content":"For a file, this attribute indicates that all of the data in the file is compressed.","pos":[23001,23085]},{"content":"For a directory, this attribute indicates that compression is the default for newly created files and subdirectories.","pos":[23086,23203]},{"pos":[23210,23309],"content":"You must call <bpt id=\"p1\">[</bpt>FindNextFile<ept id=\"p1\">](#cfilefind__findnextfile)</ept> at least once before calling <ph id=\"ph1\">`IsCompressed`</ph>.","source":"You must call [FindNextFile](#cfilefind__findnextfile) at least once before calling `IsCompressed`."},{"pos":[23316,23418],"content":"See the member function <bpt id=\"p1\">[</bpt>MatchesMask<ept id=\"p1\">](#cfilefind__matchesmask)</ept> for a complete list of file attributes.","source":"See the member function [MatchesMask](#cfilefind__matchesmask) for a complete list of file attributes."},{"content":"Example","pos":[23428,23435]},{"pos":[23440,23506],"content":"See the example for <bpt id=\"p1\">[</bpt>CFileFind::GetLength<ept id=\"p1\">](#cfilefind__getlength)</ept>.","source":"See the example for [CFileFind::GetLength](#cfilefind__getlength)."},{"pos":[23555,23577],"content":"CFileFind::IsDirectory"},{"content":"Call this member function to determine if the found file is a directory.","pos":[23581,23653]},{"content":"Return Value","pos":[23707,23719]},{"content":"Nonzero if successful; otherwise 0.","pos":[23723,23758]},{"content":"Remarks","pos":[23768,23775]},{"pos":[23779,23969],"content":"A file that is a directory is marked with FILE_ATTRIBUTE_DIRECTORY a file attribute identified in the <bpt id=\"p1\">[</bpt>WIN32_FIND_DATA<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/aa365740)</ept> structure.","source":"A file that is a directory is marked with FILE_ATTRIBUTE_DIRECTORY a file attribute identified in the [WIN32_FIND_DATA](http://msdn.microsoft.com/library/windows/desktop/aa365740) structure."},{"pos":[23976,24074],"content":"You must call <bpt id=\"p1\">[</bpt>FindNextFile<ept id=\"p1\">](#cfilefind__findnextfile)</ept> at least once before calling <ph id=\"ph1\">`IsDirectory`</ph>.","source":"You must call [FindNextFile](#cfilefind__findnextfile) at least once before calling `IsDirectory`."},{"pos":[24081,24183],"content":"See the member function <bpt id=\"p1\">[</bpt>MatchesMask<ept id=\"p1\">](#cfilefind__matchesmask)</ept> for a complete list of file attributes.","source":"See the member function [MatchesMask](#cfilefind__matchesmask) for a complete list of file attributes."},{"content":"Example","pos":[24193,24200]},{"content":"This small program recurses every directory on the C:\\ drive and prints the name of the directory.","pos":[24204,24302]},{"pos":[24320,24335],"content":"NVC_MFCFiles#34"},{"pos":[24451,24468],"content":"CFileFind::IsDots"},{"content":"Call this member function to test for the current directory and parent directory markers while iterating through files.","pos":[24472,24591]},{"content":"Return Value","pos":[24648,24660]},{"content":"Nonzero if the found file has the name \".\" or \"..\", which indicates that the found file is actually a directory.","pos":[24664,24776]},{"content":"Otherwise 0.","pos":[24777,24789]},{"content":"Remarks","pos":[24799,24806]},{"pos":[24810,24903],"content":"You must call <bpt id=\"p1\">[</bpt>FindNextFile<ept id=\"p1\">](#cfilefind__findnextfile)</ept> at least once before calling <ph id=\"ph1\">`IsDots`</ph>.","source":"You must call [FindNextFile](#cfilefind__findnextfile) at least once before calling `IsDots`."},{"content":"Example","pos":[24913,24920]},{"pos":[24925,24995],"content":"See the example for <bpt id=\"p1\">[</bpt>CFileFind::IsDirectory<ept id=\"p1\">](#cfilefind__isdirectory)</ept>.","source":"See the example for [CFileFind::IsDirectory](#cfilefind__isdirectory)."},{"pos":[25041,25060],"content":"CFileFind::IsHidden"},{"content":"Call this member function to determine if the found file is hidden.","pos":[25064,25131]},{"content":"Return Value","pos":[25182,25194]},{"content":"Nonzero if successful; otherwise 0.","pos":[25198,25233]},{"content":"Remarks","pos":[25243,25250]},{"content":"Hidden files, which are marked with FILE_ATTRIBUTE_HIDDEN, a file attribute identified in the <bpt id=\"p1\">[</bpt>WIN32_FIND_DATA<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/aa365740)</ept> structure.","pos":[25254,25436],"source":"Hidden files, which are marked with FILE_ATTRIBUTE_HIDDEN, a file attribute identified in the [WIN32_FIND_DATA](http://msdn.microsoft.com/library/windows/desktop/aa365740) structure."},{"content":"A hidden file is not included in an ordinary directory listing.","pos":[25437,25500]},{"pos":[25507,25602],"content":"You must call <bpt id=\"p1\">[</bpt>FindNextFile<ept id=\"p1\">](#cfilefind__findnextfile)</ept> at least once before calling <ph id=\"ph1\">`IsHidden`</ph>.","source":"You must call [FindNextFile](#cfilefind__findnextfile) at least once before calling `IsHidden`."},{"pos":[25609,25711],"content":"See the member function <bpt id=\"p1\">[</bpt>MatchesMask<ept id=\"p1\">](#cfilefind__matchesmask)</ept> for a complete list of file attributes.","source":"See the member function [MatchesMask](#cfilefind__matchesmask) for a complete list of file attributes."},{"content":"Example","pos":[25721,25728]},{"pos":[25733,25799],"content":"See the example for <bpt id=\"p1\">[</bpt>CFileFind::GetLength<ept id=\"p1\">](#cfilefind__getlength)</ept>.","source":"See the example for [CFileFind::GetLength](#cfilefind__getlength)."},{"pos":[25845,25864],"content":"CFileFind::IsNormal"},{"content":"Call this member function to determine if the found file is a normal file.","pos":[25868,25942]},{"content":"Return Value","pos":[25993,26005]},{"content":"Nonzero if successful; otherwise 0.","pos":[26009,26044]},{"content":"Remarks","pos":[26054,26061]},{"content":"Files marked with FILE_ATTRIBUTE_NORMAL, a file attribute identified in the <bpt id=\"p1\">[</bpt>WIN32_FIND_DATA<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/aa365740)</ept> structure.","pos":[26065,26229],"source":"Files marked with FILE_ATTRIBUTE_NORMAL, a file attribute identified in the [WIN32_FIND_DATA](http://msdn.microsoft.com/library/windows/desktop/aa365740) structure."},{"content":"A normal file has no other attributes set.","pos":[26230,26272]},{"content":"All other file attributes override this attribute.","pos":[26273,26323]},{"pos":[26330,26425],"content":"You must call <bpt id=\"p1\">[</bpt>FindNextFile<ept id=\"p1\">](#cfilefind__findnextfile)</ept> at least once before calling <ph id=\"ph1\">`IsNormal`</ph>.","source":"You must call [FindNextFile](#cfilefind__findnextfile) at least once before calling `IsNormal`."},{"pos":[26432,26534],"content":"See the member function <bpt id=\"p1\">[</bpt>MatchesMask<ept id=\"p1\">](#cfilefind__matchesmask)</ept> for a complete list of file attributes.","source":"See the member function [MatchesMask](#cfilefind__matchesmask) for a complete list of file attributes."},{"content":"Example","pos":[26544,26551]},{"pos":[26556,26622],"content":"See the example for <bpt id=\"p1\">[</bpt>CFileFind::GetLength<ept id=\"p1\">](#cfilefind__getlength)</ept>.","source":"See the example for [CFileFind::GetLength](#cfilefind__getlength)."},{"pos":[26670,26691],"content":"CFileFind::IsReadOnly"},{"content":"Call this member function to determine if the found file is read-only.","pos":[26695,26765]},{"content":"Return Value","pos":[26818,26830]},{"content":"Nonzero if successful; otherwise 0.","pos":[26834,26869]},{"content":"Remarks","pos":[26879,26886]},{"content":"A read-only file is marked with FILE_ATTRIBUTE_READONLY, a file attribute identified in the <bpt id=\"p1\">[</bpt>WIN32_FIND_DATA<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/aa365740)</ept> structure.","pos":[26890,27070],"source":"A read-only file is marked with FILE_ATTRIBUTE_READONLY, a file attribute identified in the [WIN32_FIND_DATA](http://msdn.microsoft.com/library/windows/desktop/aa365740) structure."},{"content":"Applications can read such a file, but they cannot write to it or delete it.","pos":[27071,27147]},{"pos":[27154,27251],"content":"You must call <bpt id=\"p1\">[</bpt>FindNextFile<ept id=\"p1\">](#cfilefind__findnextfile)</ept> at least once before calling <ph id=\"ph1\">`IsReadOnly`</ph>.","source":"You must call [FindNextFile](#cfilefind__findnextfile) at least once before calling `IsReadOnly`."},{"pos":[27258,27360],"content":"See the member function <bpt id=\"p1\">[</bpt>MatchesMask<ept id=\"p1\">](#cfilefind__matchesmask)</ept> for a complete list of file attributes.","source":"See the member function [MatchesMask](#cfilefind__matchesmask) for a complete list of file attributes."},{"content":"Example","pos":[27370,27377]},{"pos":[27382,27448],"content":"See the example for <bpt id=\"p1\">[</bpt>CFileFind::GetLength<ept id=\"p1\">](#cfilefind__getlength)</ept>.","source":"See the example for [CFileFind::GetLength](#cfilefind__getlength)."},{"pos":[27494,27513],"content":"CFileFind::IsSystem"},{"content":"Call this member function to determine if the found file is a system file.","pos":[27517,27591]},{"content":"Return Value","pos":[27642,27654]},{"content":"Nonzero if successful; otherwise 0.","pos":[27658,27693]},{"content":"Remarks","pos":[27703,27710]},{"content":"A system file is marked with FILE_ATTRIBUTE_SYSTEM, , a file attribute identified in the <bpt id=\"p1\">[</bpt>WIN32_FIND_DATA<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/aa365740)</ept> structure.","pos":[27714,27891],"source":"A system file is marked with FILE_ATTRIBUTE_SYSTEM, , a file attribute identified in the [WIN32_FIND_DATA](http://msdn.microsoft.com/library/windows/desktop/aa365740) structure."},{"content":"A system file is part of, or is used exclusively by, the operating system.","pos":[27892,27966]},{"pos":[27973,28068],"content":"You must call <bpt id=\"p1\">[</bpt>FindNextFile<ept id=\"p1\">](#cfilefind__findnextfile)</ept> at least once before calling <ph id=\"ph1\">`IsSystem`</ph>.","source":"You must call [FindNextFile](#cfilefind__findnextfile) at least once before calling `IsSystem`."},{"pos":[28075,28177],"content":"See the member function <bpt id=\"p1\">[</bpt>MatchesMask<ept id=\"p1\">](#cfilefind__matchesmask)</ept> for a complete list of file attributes.","source":"See the member function [MatchesMask](#cfilefind__matchesmask) for a complete list of file attributes."},{"content":"Example","pos":[28187,28194]},{"pos":[28199,28265],"content":"See the example for <bpt id=\"p1\">[</bpt>CFileFind::GetLength<ept id=\"p1\">](#cfilefind__getlength)</ept>.","source":"See the example for [CFileFind::GetLength](#cfilefind__getlength)."},{"pos":[28314,28336],"content":"CFileFind::IsTemporary"},{"content":"Call this member function to determine if the found file is a temporary file.","pos":[28340,28417]},{"content":"Return Value","pos":[28471,28483]},{"content":"Nonzero if successful; otherwise 0.","pos":[28487,28522]},{"content":"Remarks","pos":[28532,28539]},{"content":"A temporary file is marked with FILE_ATTRIBUTE_TEMPORARY, a file attribute identified in the <bpt id=\"p1\">[</bpt>WIN32_FIND_DATA<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/aa365740)</ept> structure.","pos":[28543,28724],"source":"A temporary file is marked with FILE_ATTRIBUTE_TEMPORARY, a file attribute identified in the [WIN32_FIND_DATA](http://msdn.microsoft.com/library/windows/desktop/aa365740) structure."},{"content":"A temporary file is used for temporary storage.","pos":[28725,28772]},{"content":"Applications should write to the file only if absolutely necessary.","pos":[28773,28840]},{"content":"Most of the file's data remains in memory without being flushed to the media because the file will soon be deleted.","pos":[28841,28956]},{"pos":[28963,29061],"content":"You must call <bpt id=\"p1\">[</bpt>FindNextFile<ept id=\"p1\">](#cfilefind__findnextfile)</ept> at least once before calling <ph id=\"ph1\">`IsTemporary`</ph>.","source":"You must call [FindNextFile](#cfilefind__findnextfile) at least once before calling `IsTemporary`."},{"pos":[29068,29170],"content":"See the member function <bpt id=\"p1\">[</bpt>MatchesMask<ept id=\"p1\">](#cfilefind__matchesmask)</ept> for a complete list of file attributes.","source":"See the member function [MatchesMask](#cfilefind__matchesmask) for a complete list of file attributes."},{"content":"Example","pos":[29180,29187]},{"pos":[29192,29258],"content":"See the example for <bpt id=\"p1\">[</bpt>CFileFind::GetLength<ept id=\"p1\">](#cfilefind__getlength)</ept>.","source":"See the example for [CFileFind::GetLength](#cfilefind__getlength)."},{"pos":[29301,29317],"content":"CFileFind::m_pTM"},{"pos":[29321,29366],"content":"Pointer to a <ph id=\"ph1\">`CAtlTransactionManager`</ph> object.","source":"Pointer to a `CAtlTransactionManager` object."},{"content":"Remarks","pos":[29424,29431]},{"pos":[29480,29502],"content":"CFileFind::MatchesMask"},{"content":"Call this member function to test the file attributes on the found file.","pos":[29506,29578]},{"content":"Parameters","pos":[29652,29662]},{"content":"Specifies one or more file attributes, identified in the <bpt id=\"p1\">[</bpt>WIN32_FIND_DATA<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/aa365740)</ept> structure, for the found file.","pos":[29678,29843],"source":" Specifies one or more file attributes, identified in the [WIN32_FIND_DATA](http://msdn.microsoft.com/library/windows/desktop/aa365740) structure, for the found file."},{"content":"To search for multiple attributes, use the bitwise OR (&amp;#124;) operator.","pos":[29844,29916],"source":" To search for multiple attributes, use the bitwise OR (&#124;) operator."},{"content":"Any combination of the following attributes is acceptable:","pos":[29917,29975]},{"content":"FILE_ATTRIBUTE_ARCHIVE   The file is an archive file.","pos":[29985,30038]},{"content":"Applications use this attribute to mark files for backup or removal.","pos":[30039,30107]},{"content":"FILE_ATTRIBUTE_COMPRESSED   The file or directory is compressed.","pos":[30117,30181]},{"content":"For a file, this means that all of the data in the file is compressed.","pos":[30182,30252]},{"content":"For a directory, this means that compression is the default for newly created files and subdirectories.","pos":[30253,30356]},{"content":"FILE_ATTRIBUTE_DIRECTORY   The file is a directory.","pos":[30366,30417]},{"content":"FILE_ATTRIBUTE_NORMAL   The file has no other attributes set.","pos":[30427,30488]},{"content":"This attribute is valid only if used alone.","pos":[30489,30532]},{"content":"All other file attributes override this attribute.","pos":[30533,30583]},{"content":"FILE_ATTRIBUTE_HIDDEN   The file is hidden.","pos":[30593,30636]},{"content":"It is not to be included in an ordinary directory listing.","pos":[30637,30695]},{"content":"FILE_ATTRIBUTE_READONLY   The file is read only.","pos":[30705,30753]},{"content":"Applications can read the file but cannot write to it or delete it.","pos":[30754,30821]},{"content":"FILE_ATTRIBUTE_SYSTEM   The file is part of or is used exclusively by the operating system.","pos":[30831,30922]},{"content":"FILE_ATTRIBUTE_TEMPORARY   The file is being used for temporary storage.","pos":[30932,31004]},{"content":"Applications should write to the file only if absolutely necessary.","pos":[31005,31072]},{"content":"Most of the file's data remains in memory without being flushed to the media because the file will soon be deleted.","pos":[31073,31188]},{"content":"Return Value","pos":[31198,31210]},{"content":"Nonzero if successful; otherwise 0.","pos":[31214,31249]},{"content":"To get extended error information, call the Win32 function <bpt id=\"p1\">[</bpt>GetLastError<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms679360)</ept>.","pos":[31250,31384],"source":" To get extended error information, call the Win32 function [GetLastError](http://msdn.microsoft.com/library/windows/desktop/ms679360)."},{"content":"Remarks","pos":[31394,31401]},{"pos":[31405,31503],"content":"You must call <bpt id=\"p1\">[</bpt>FindNextFile<ept id=\"p1\">](#cfilefind__findnextfile)</ept> at least once before calling <ph id=\"ph1\">`MatchesMask`</ph>.","source":"You must call [FindNextFile](#cfilefind__findnextfile) at least once before calling `MatchesMask`."},{"content":"Example","pos":[31513,31520]},{"pos":[31535,31550],"content":"NVC_MFCFiles#35"},{"content":"See Also","pos":[31631,31639]},{"content":"CObject Class","pos":[31644,31657]},{"content":"Hierarchy Chart","pos":[31702,31717]},{"content":"CFtpFileFind Class","pos":[31754,31772]},{"content":"CGopherFileFind Class","pos":[31822,31843]},{"content":"CInternetFile Class","pos":[31896,31915]},{"content":"CGopherFile Class","pos":[31966,31983]},{"content":"CHttpFile Class","pos":[32032,32047]}],"content":"---\ntitle: \"CFileFind Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"CFileFind\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"files [C++], finding\"\n  - \"Internet files [C++], finding\"\n  - \"CFileFind class\"\n  - \"URLs [C++], searching for\"\n  - \"local files\"\n  - \"local files, searching for\"\nms.assetid: 9990068c-b023-4114-9580-a50182d15240\ncaps.latest.revision: 22\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# CFileFind Class\nPerforms local file searches and is the base class for [CGopherFileFind](../../mfc/reference/cgopherfilefind-class.md) and [CFtpFileFind](../../mfc/reference/cftpfilefind-class.md), which perform Internet file searches.  \n  \n## Syntax  \n  \n```  \nclass CFileFind : public CObject  \n```  \n  \n## Members  \n  \n### Public Constructors  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CFileFind::CFileFind](#cfilefind__cfilefind)|Constructs a `CFileFind` object.|  \n  \n### Public Methods  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CFileFind::Close](#cfilefind__close)|Closes the search request.|  \n|[CFileFind::FindFile](#cfilefind__findfile)|Searches a directory for a specified file name.|  \n|[CFileFind::FindNextFile](#cfilefind__findnextfile)|Continues a file search from a previous call to [FindFile](#cfilefind__findfile).|  \n|[CFileFind::GetCreationTime](#cfilefind__getcreationtime)|Gets the time the file was created.|  \n|[CFileFind::GetFileName](#cfilefind__getfilename)|Gets the name, including the extension, of the found file|  \n|[CFileFind::GetFilePath](#cfilefind__getfilepath)|Gets the whole path of the found file.|  \n|[CFileFind::GetFileTitle](#cfilefind__getfiletitle)|Gets the title of the found file. The title does not include the extension.|  \n|[CFileFind::GetFileURL](#cfilefind__getfileurl)|Gets the URL, including the file path, of the found file.|  \n|[CFileFind::GetLastAccessTime](#cfilefind__getlastaccesstime)|Gets the time that the file was last accessed.|  \n|[CFileFind::GetLastWriteTime](#cfilefind__getlastwritetime)|Gets the time the file was last changed and saved.|  \n|[CFileFind::GetLength](#cfilefind__getlength)|Gets the length of the found file, in bytes.|  \n|[CFileFind::GetRoot](#cfilefind__getroot)|Gets the root directory of the found file.|  \n|[CFileFind::IsArchived](#cfilefind__isarchived)|Determines if the found file is archived.|  \n|[CFileFind::IsCompressed](#cfilefind__iscompressed)|Determines if the found file is compressed.|  \n|[CFileFind::IsDirectory](#cfilefind__isdirectory)|Determines if the found file is a directory.|  \n|[CFileFind::IsDots](#cfilefind__isdots)|Determines if the name of the found file has the name \".\" or \"..\", indicating that is actually a directory.|  \n|[CFileFind::IsHidden](#cfilefind__ishidden)|Determines if the found file is hidden.|  \n|[CFileFind::IsNormal](#cfilefind__isnormal)|Determines if the found file is normal (in other words, has no other attributes).|  \n|[CFileFind::IsReadOnly](#cfilefind__isreadonly)|Determines if the found file is read-only.|  \n|[CFileFind::IsSystem](#cfilefind__issystem)|Determines if the found file is a system file.|  \n|[CFileFind::IsTemporary](#cfilefind__istemporary)|Determines if the found file is temporary.|  \n|[CFileFind::MatchesMask](#cfilefind__matchesmask)|Indicates the desired file attributes of the file to be found.|  \n  \n### Protected Methods  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CFileFind::CloseContext](#cfilefind__closecontext)|Closes the file specified by the current search handle.|  \n  \n### Protected Data Members  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CFileFind::m_pTM](#cfilefind__m_ptm)|Pointer to a `CAtlTransactionManager` object.|  \n  \n## Remarks  \n `CFileFind` includes member functions that begin a search, locate a file, and return the title, name, or path of the file. For Internet searches, the member function [GetFileURL](#cfilefind__getfileurl) returns the file's URL.  \n  \n `CFileFind` is the base class for two other MFC classes designed to search particular server types: `CGopherFileFind` works specifically with gopher servers, and `CFtpFileFind` works specifically with FTP servers. Together, these three classes provide a seamless mechanism for the client to find files, regardless of the server protocol, the file type, or location, on either a local machine or a remote server.  \n  \n The following code will enumerate all the files in the current directory, printing the name of each file:  \n  \n [!code-cpp[NVC_MFCFiles#31](../../atl-mfc-shared/reference/codesnippet/cpp/cfilefind-class_1.cpp)]  \n  \n To keep the example simple, this code uses the standard C++ library `cout` class. The `cout` line could be replaced with a call to `CListBox::AddString`, for example, in a program with a graphical user interface.  \n  \n For more information about how to use `CFileFind` and the other WinInet classes, see the article [Internet Programming with WinInet](../../mfc/win32-internet-extensions-wininet.md).  \n  \n## Inheritance Hierarchy  \n [CObject](../../mfc/reference/cobject-class.md)  \n  \n `CFileFind`  \n  \n## Requirements  \n **Header:** afx.h  \n  \n##  <a name=\"cfilefind__cfilefind\"></a>  CFileFind::CFileFind  \n This member function is called when a `CFileFind` object is constructed.  \n  \n```  \nCFileFind();\n\n \nCFileFind(CAtlTransactionManager* pTM);\n```  \n  \n### Parameters  \n `pTM`  \n Pointer to CAtlTransactionManager object  \n  \n### Example  \n  See the example for [CFileFind::GetFileName](#cfilefind__getfilename).  \n  \n##  <a name=\"cfilefind__close\"></a>  CFileFind::Close  \n Call this member function to end the search, reset the context, and release all resources.  \n  \n```  \nvoid Close();\n```  \n  \n### Remarks  \n After calling **Close**, you do not have to create a new `CFileFind` instance before calling [FindFile](#cfilefind__findfile) to begin a new search.  \n  \n### Example  \n  See the example for [CFileFind::GetFileName](#cfilefind__getfilename).  \n  \n##  <a name=\"cfilefind__closecontext\"></a>  CFileFind::CloseContext  \n Closes the file specified by the current search handle.  \n  \n```  \nvirtual void CloseContext();\n```  \n  \n### Remarks  \n Closes the file specified by the current value of the search handle. Override this function to change the default behavior.  \n  \n You must call the [FindFile](#cfilefind__findfile) or [FindNextFile](#cfilefind__findnextfile) functions at least once to retrieve a valid search handle. The **FindFile** and `FindNextFile` functions use the search handle to locate files with names that match a given name.  \n  \n##  <a name=\"cfilefind__findfile\"></a>  CFileFind::FindFile  \n Call this member function to open a file search.  \n  \n```  \nvirtual BOOL FindFile(\n    LPCTSTR pstrName = NULL,  \n    DWORD dwUnused = 0);\n```  \n  \n### Parameters  \n `pstrName`  \n A pointer to a string containing the name of the file to find. If you pass **NULL** for `pstrName`, **FindFile** does a wildcard (*.\\*) search.  \n  \n *dwUnused*  \n Reserved to make **FindFile** polymorphic with derived classes. Must be 0.  \n  \n### Return Value  \n Nonzero if successful; otherwise 0. To get extended error information, call the Win32 function [GetLastError](http://msdn.microsoft.com/library/windows/desktop/ms679360).  \n  \n### Remarks  \n After calling **FindFile** to begin the file search, call [FindNextFile](#cfilefind__findnextfile) to retrieve subsequent files. You must call `FindNextFile` at least once before calling any of the following attribute member functions:  \n  \n- [GetCreationTime](#cfilefind__getcreationtime)  \n  \n- [GetFileName](#cfilefind__getfilename)  \n  \n- [GetFileTitle](#cfilefind__getfiletitle)  \n  \n- [GetFilePath](#cfilefind__getfilepath)  \n  \n- [GetFileURL](#cfilefind__getfileurl)  \n  \n- [GetLastAccessTime](#cfilefind__getlastaccesstime)  \n  \n- [GetLastWriteTime](#cfilefind__getlastwritetime)  \n  \n- [GetLength](#cfilefind__getlength)  \n  \n- [GetRoot](#cfilefind__getroot)  \n  \n- [IsArchived](#cfilefind__isarchived)  \n  \n- [IsCompressed](#cfilefind__iscompressed)  \n  \n- [IsDirectory](#cfilefind__isdirectory)  \n  \n- [IsDots](#cfilefind__isdots)  \n  \n- [IsHidden](#cfilefind__ishidden)  \n  \n- [IsNormal](#cfilefind__isnormal)  \n  \n- [IsReadOnly](#cfilefind__isreadonly)  \n  \n- [IsSystem](#cfilefind__issystem)  \n  \n- [IsTemporary](#cfilefind__istemporary)  \n  \n- [MatchesMask](#cfilefind__matchesmask)  \n  \n### Example  \n  See the example for [CFileFind::IsDirectory](#cfilefind__isdirectory).  \n  \n##  <a name=\"cfilefind__findnextfile\"></a>  CFileFind::FindNextFile  \n Call this member function to continue a file search from a previous call to [FindFile](#cfilefind__findfile).  \n  \n```  \nvirtual BOOL FindNextFile();\n```  \n  \n### Return Value  \n Nonzero if there are more files; zero if the file found is the last one in the directory or if an error occurred. To get extended error information, call the Win32 function [GetLastError](http://msdn.microsoft.com/library/windows/desktop/ms679360). If the file found is the last file in the directory, or if no matching files can be found, the `GetLastError` function returns ERROR_NO_MORE_FILES.  \n  \n### Remarks  \n You must call `FindNextFile` at least once before calling any of the following attribute member functions:  \n  \n- [GetCreationTime](#cfilefind__getcreationtime)  \n  \n- [GetFileName](#cfilefind__getfilename)  \n  \n- [GetFileTitle](#cfilefind__getfiletitle)  \n  \n- [GetFilePath](#cfilefind__getfilepath)  \n  \n- [GetFileURL](#cfilefind__getfileurl)  \n  \n- [GetLastAccessTime](#cfilefind__getlastaccesstime)  \n  \n- [GetLastWriteTime](#cfilefind__getlastwritetime)  \n  \n- [GetLength](#cfilefind__getlength)  \n  \n- [GetRoot](#cfilefind__getroot)  \n  \n- [IsArchived](#cfilefind__isarchived)  \n  \n- [IsCompressed](#cfilefind__iscompressed)  \n  \n- [IsDirectory](#cfilefind__isdirectory)  \n  \n- [IsDots](#cfilefind__isdots)  \n  \n- [IsHidden](#cfilefind__ishidden)  \n  \n- [IsNormal](#cfilefind__isnormal)  \n  \n- [IsReadOnly](#cfilefind__isreadonly)  \n  \n- [IsSystem](#cfilefind__issystem)  \n  \n- [IsTemporary](#cfilefind__istemporary)  \n  \n- [MatchesMask](#cfilefind__matchesmask)  \n  \n `FindNextFile` wraps the Win32 function [FindNextFile](http://msdn.microsoft.com/library/windows/desktop/aa364428).  \n  \n### Example  \n  See the example for [CFileFind::IsDirectory](#cfilefind__isdirectory).  \n  \n##  <a name=\"cfilefind__getcreationtime\"></a>  CFileFind::GetCreationTime  \n Call this member function to get the time the specified file was created.  \n  \n```  \nvirtual BOOL GetCreationTime(FILETIME* pTimeStamp) const;\n\n \n \nvirtual BOOL GetCreationTime(CTime& refTime) const;\n\n \n```  \n  \n### Parameters  \n `pTimeStamp`  \n A pointer to a [FILETIME](http://msdn.microsoft.com/library/windows/desktop/ms724284) structure containing the time the file was created.  \n  \n `refTime`  \n A reference to a [CTime](../../atl-mfc-shared/reference/ctime-class.md) object.  \n  \n### Return Value  \n Nonzero if successful; 0 if unsuccessful. `GetCreationTime` returns 0 only if [FindNextFile](#cfilefind__findnextfile) has never been called on this `CFileFind` object.  \n  \n### Remarks  \n You must call [FindNextFile](#cfilefind__findnextfile) at least once before calling `GetCreationTime`.  \n  \n> [!NOTE]\n>  Not all file systems use the same semantics to implement the time stamp returned by this function. This function may return the same value returned by other time stamp functions if the underlying file system or server does not support keeping the time attribute. See the [Win32_FIND_DATA](http://msdn.microsoft.com/library/windows/desktop/aa365740) structure for information about time formats. On some operation systems, the returned time is in the time zone local to the machine were the file is located. See the Win32 [FileTimeToLocalFileTime](http://msdn.microsoft.com/library/windows/desktop/ms724277) API for more information.  \n  \n### Example  \n  See the example for [CFileFind::GetLength](#cfilefind__getlength).  \n  \n##  <a name=\"cfilefind__getfilename\"></a>  CFileFind::GetFileName  \n Call this member function to get the name of the found file.  \n  \n```  \nvirtual CString GetFileName() const;\n\n \n```  \n  \n### Return Value  \n The name of the most-recently-found file.  \n  \n### Remarks  \n You must call [FindNextFile](#cfilefind__findnextfile) at least once before calling GetFileName.  \n  \n `GetFileName` is one of three `CFileFind` member functions that return some form of the file name. The following list describes the three and how they vary:  \n  \n- `GetFileName` returns the file name, including the extension. For example, calling `GetFileName` to generate a user message about the file `c:\\myhtml\\myfile.txt` returns the file name `myfile.txt`.  \n  \n- [GetFilePath](#cfilefind__getfilepath) returns the entire path for the file. For example, calling `GetFilePath` to generate a user message about the file `c:\\myhtml\\myfile.txt` returns the file path `c:\\myhtml\\myfile.txt`.  \n  \n- [GetFileTitle](#cfilefind__getfiletitle) returns the file name, excluding the file extension. For example, calling `GetFileTitle` to generate a user message about the file `c:\\myhtml\\myfile.txt` returns the file title `myfile`.  \n  \n### Example  \n [!code-cpp[NVC_MFCFiles#32](../../atl-mfc-shared/reference/codesnippet/cpp/cfilefind-class_2.cpp)]  \n  \n##  <a name=\"cfilefind__getfilepath\"></a>  CFileFind::GetFilePath  \n Call this member function to get the full path of the specified file.  \n  \n```  \nvirtual CString GetFilePath() const;\n\n \n```  \n  \n### Return Value  \n The path of the specified file.  \n  \n### Remarks  \n You must call [FindNextFile](#cfilefind__findnextfile) at least once before calling `GetFilePath`.  \n  \n `GetFilePath` is one of three `CFileFind` member functions that return some form of the file name. The following list describes the three and how they vary:  \n  \n- [GetFileName](#cfilefind__getfilename) returns the file name, including the extension. For example, calling `GetFileName` to generate a user message about the file `c:\\myhtml\\myfile.txt` returns the file name `myfile.txt`.  \n  \n- `GetFilePath` returns the entire path for the file. For example, calling `GetFilePath` to generate a user message about the file `c:\\myhtml\\myfile.txt` returns the file path `c:\\myhtml\\myfile.txt`.  \n  \n- [GetFileTitle](#cfilefind__getfiletitle) returns the file name, excluding the file extension. For example, calling `GetFileTitle` to generate a user message about the file `c:\\myhtml\\myfile.txt` returns the file title `myfile`.  \n  \n### Example  \n  See the example for [CFileFind::GetFileName](#cfilefind__getfilename).  \n  \n##  <a name=\"cfilefind__getfiletitle\"></a>  CFileFind::GetFileTitle  \n Call this member function to get the title of the found file.  \n  \n```  \nvirtual CString GetFileTitle() const;\n\n \n```  \n  \n### Return Value  \n The title of the file.  \n  \n### Remarks  \n You must call [FindNextFile](#cfilefind__findnextfile) at least once before calling `GetFileTitle`.  \n  \n `GetFileTitle` is one of three `CFileFind` member functions that return some form of the file name. The following list describes the three and how they vary:  \n  \n- [GetFileName](#cfilefind__getfilename) returns the file name, including the extension. For example, calling `GetFileName` to generate a user message about the file `c:\\myhtml\\myfile.txt` returns the file name `myfile.txt`.  \n  \n- [GetFilePath](#cfilefind__getfilepath) returns the entire path for the file. For example, calling `GetFilePath` to generate a user message about the file `c:\\myhtml\\myfile.txt` returns the file path `c:\\myhtml\\myfile.txt`.  \n  \n- `GetFileTitle` returns the file name, excluding the file extension. For example, calling `GetFileTitle` to generate a user message about the file `c:\\myhtml\\myfile.txt` returns the file title `myfile`.  \n  \n### Example  \n  See the example for [CFileFind::GetFileName](#cfilefind__getfilename).  \n  \n##  <a name=\"cfilefind__getfileurl\"></a>  CFileFind::GetFileURL  \n Call this member function to retrieve the specified URL.  \n  \n```  \nvirtual CString GetFileURL() const;\n\n \n```  \n  \n### Return Value  \n The complete URL.  \n  \n### Remarks  \n You must call [FindNextFile](#cfilefind__findnextfile) at least once before calling `GetFileURL`.  \n  \n `GetFileURL` is similar to the member function [GetFilePath](#cfilefind__getfilepath), except that it returns the URL in the form `file://path`. For example, calling `GetFileURL` to get the complete URL for `myfile.txt` returns the URL `file://c:\\myhtml\\myfile.txt`.  \n  \n### Example  \n  See the example for [CFileFind::GetFileName](#cfilefind__getfilename).  \n  \n##  <a name=\"cfilefind__getlastaccesstime\"></a>  CFileFind::GetLastAccessTime  \n Call this member function to get the time that the specified file was last accessed.  \n  \n```  \nvirtual BOOL GetLastAccessTime(CTime& refTime) const;\n\n \n \nvirtual BOOL GetLastAccessTime(FILETIME* pTimeStamp) const;\n\n \n```  \n  \n### Parameters  \n `refTime`  \n A reference to a [CTime](../../atl-mfc-shared/reference/ctime-class.md) object.  \n  \n `pTimeStamp`  \n A pointer to a [FILETIME](http://msdn.microsoft.com/library/windows/desktop/ms724284) structure containing the time the file was last accessed.  \n  \n### Return Value  \n Nonzero if successful; 0 if unsuccessful. `GetLastAccessTime` returns 0 only if [FindNextFile](#cfilefind__findnextfile) has never been called on this `CFileFind` object.  \n  \n### Remarks  \n You must call [FindNextFile](#cfilefind__findnextfile) at least once before calling `GetLastAccessTime`.  \n  \n> [!NOTE]\n>  Not all file systems use the same semantics to implement the time stamp returned by this function. This function may return the same value returned by other time stamp functions if the underlying file system or server does not support keeping the time attribute. See the [Win32_FIND_DATA](http://msdn.microsoft.com/library/windows/desktop/aa365740) structure for information about time formats. On some operation systems, the returned time is in the time zone local to the machine were the file is located. See the Win32 [FileTimeToLocalFileTime](http://msdn.microsoft.com/library/windows/desktop/ms724277) API for more information.  \n  \n### Example  \n  See the example for [CFileFind::GetLength](#cfilefind__getlength).  \n  \n##  <a name=\"cfilefind__getlastwritetime\"></a>  CFileFind::GetLastWriteTime  \n Call this member function to get the last time the file was changed.  \n  \n```  \nvirtual BOOL GetLastWriteTime(FILETIME* pTimeStamp) const;\n\n \n \nvirtual BOOL GetLastWriteTime(CTime& refTime) const;\n\n \n```  \n  \n### Parameters  \n `pTimeStamp`  \n A pointer to a [FILETIME](http://msdn.microsoft.com/library/windows/desktop/ms724284) structure containing the time the file was last written to.  \n  \n `refTime`  \n A reference to a [CTime](../../atl-mfc-shared/reference/ctime-class.md) object.  \n  \n### Return Value  \n Nonzero if successful; 0 if unsuccessful. `GetLastWriteTime` returns 0 only if [FindNextFile](#cfilefind__findnextfile) has never been called on this `CFileFind` object.  \n  \n### Remarks  \n You must call [FindNextFile](#cfilefind__findnextfile) at least once before calling `GetLastWriteTime`.  \n  \n> [!NOTE]\n>  Not all file systems use the same semantics to implement the time stamp returned by this function. This function may return the same value returned by other time stamp functions if the underlying file system or server does not support keeping the time attribute. See the [Win32_Find_Data](http://msdn.microsoft.com/library/windows/desktop/aa365740) structure for information about time formats. On some operation systems, the returned time is in the time zone local to the machine were the file is located. See the Win32 [FileTimeToLocalFileTime](http://msdn.microsoft.com/library/windows/desktop/ms724277) API for more information.  \n  \n### Example  \n  See the example for [CFileFind::GetLength](#cfilefind__getlength).  \n  \n##  <a name=\"cfilefind__getlength\"></a>  CFileFind::GetLength  \n Call this member function to get the length of the found file, in bytes.  \n  \n```  \nULONGLONG GetLength() const;\n\n \n```  \n  \n### Return Value  \n The length of the found file, in bytes.  \n  \n### Remarks  \n You must call [FindNextFile](#cfilefind__findnextfile) at least once before calling `GetLength`.  \n  \n `GetLength` uses the Win32 structure [WIN32_FIND_DATA](http://msdn.microsoft.com/library/windows/desktop/aa365740) to get and return the value of the file size, in bytes.  \n  \n> [!NOTE]\n>  As of MFC 7.0, `GetLength` supports 64-bit integer types. Previously existing code built with this newer version of the library may result in truncation warnings.  \n  \n### Example  \n [!code-cpp[NVC_MFCFiles#33](../../atl-mfc-shared/reference/codesnippet/cpp/cfilefind-class_3.cpp)]  \n  \n##  <a name=\"cfilefind__getroot\"></a>  CFileFind::GetRoot  \n Call this member function to get the root of the found file.  \n  \n```  \nvirtual CString GetRoot() const;\n\n \n```  \n  \n### Return Value  \n The root of the active search.  \n  \n### Remarks  \n You must call [FindNextFile](#cfilefind__findnextfile) at least once before calling `GetRoot`.  \n  \n This member function returns the drive specifier and path name used to start a search. For example, calling [FindFile](#cfilefind__findfile) with `*.dat` results in `GetRoot` returning an empty string. Passing a path, such as `c:\\windows\\system\\*.dll`, to **FindFile** results `GetRoot` returning `c:\\windows\\system\\`.  \n  \n### Example  \n  See the example for [CFileFind::GetFileName](#cfilefind__getfilename).  \n  \n##  <a name=\"cfilefind__isarchived\"></a>  CFileFind::IsArchived  \n Call this member function to determine if the found file is archived.  \n  \n```  \nBOOL IsArchived() const;\n\n \n```  \n  \n### Return Value  \n Nonzero if successful; otherwise 0.  \n  \n### Remarks  \n Applications mark an archive file, which is to be backed up or removed, with FILE_ATTRIBUTE_ARCHIVE, a file attribute identified in the [WIN32_FIND_DATA](http://msdn.microsoft.com/library/windows/desktop/aa365740) structure.  \n  \n You must call [FindNextFile](#cfilefind__findnextfile) at least once before calling `IsArchived`.  \n  \n See the member function [MatchesMask](#cfilefind__matchesmask) for a complete list of file attributes.  \n  \n### Example  \n  See the example for [CFileFind::GetLength](#cfilefind__getlength).  \n  \n##  <a name=\"cfilefind__iscompressed\"></a>  CFileFind::IsCompressed  \n Call this member function to determine if the found file is compressed.  \n  \n```  \nBOOL IsCompressed() const;\n\n \n```  \n  \n### Return Value  \n Nonzero if successful; otherwise 0.  \n  \n### Remarks  \n A compressed file is marked with FILE_ATTRIBUTE_COMPRESSED, a file attribute identified in the [WIN32_FIND_DATA](http://msdn.microsoft.com/library/windows/desktop/aa365740) structure. For a file, this attribute indicates that all of the data in the file is compressed. For a directory, this attribute indicates that compression is the default for newly created files and subdirectories.  \n  \n You must call [FindNextFile](#cfilefind__findnextfile) at least once before calling `IsCompressed`.  \n  \n See the member function [MatchesMask](#cfilefind__matchesmask) for a complete list of file attributes.  \n  \n### Example  \n  See the example for [CFileFind::GetLength](#cfilefind__getlength).  \n  \n##  <a name=\"cfilefind__isdirectory\"></a>  CFileFind::IsDirectory  \n Call this member function to determine if the found file is a directory.  \n  \n```  \nBOOL IsDirectory() const;\n\n \n```  \n  \n### Return Value  \n Nonzero if successful; otherwise 0.  \n  \n### Remarks  \n A file that is a directory is marked with FILE_ATTRIBUTE_DIRECTORY a file attribute identified in the [WIN32_FIND_DATA](http://msdn.microsoft.com/library/windows/desktop/aa365740) structure.  \n  \n You must call [FindNextFile](#cfilefind__findnextfile) at least once before calling `IsDirectory`.  \n  \n See the member function [MatchesMask](#cfilefind__matchesmask) for a complete list of file attributes.  \n  \n### Example  \n This small program recurses every directory on the C:\\ drive and prints the name of the directory.  \n  \n [!code-cpp[NVC_MFCFiles#34](../../atl-mfc-shared/reference/codesnippet/cpp/cfilefind-class_4.cpp)]  \n  \n##  <a name=\"cfilefind__isdots\"></a>  CFileFind::IsDots  \n Call this member function to test for the current directory and parent directory markers while iterating through files.  \n  \n```  \nvirtual BOOL IsDots() const;\n\n \n```  \n  \n### Return Value  \n Nonzero if the found file has the name \".\" or \"..\", which indicates that the found file is actually a directory. Otherwise 0.  \n  \n### Remarks  \n You must call [FindNextFile](#cfilefind__findnextfile) at least once before calling `IsDots`.  \n  \n### Example  \n  See the example for [CFileFind::IsDirectory](#cfilefind__isdirectory).  \n  \n##  <a name=\"cfilefind__ishidden\"></a>  CFileFind::IsHidden  \n Call this member function to determine if the found file is hidden.  \n  \n```  \nBOOL IsHidden() const;\n\n \n```  \n  \n### Return Value  \n Nonzero if successful; otherwise 0.  \n  \n### Remarks  \n Hidden files, which are marked with FILE_ATTRIBUTE_HIDDEN, a file attribute identified in the [WIN32_FIND_DATA](http://msdn.microsoft.com/library/windows/desktop/aa365740) structure. A hidden file is not included in an ordinary directory listing.  \n  \n You must call [FindNextFile](#cfilefind__findnextfile) at least once before calling `IsHidden`.  \n  \n See the member function [MatchesMask](#cfilefind__matchesmask) for a complete list of file attributes.  \n  \n### Example  \n  See the example for [CFileFind::GetLength](#cfilefind__getlength).  \n  \n##  <a name=\"cfilefind__isnormal\"></a>  CFileFind::IsNormal  \n Call this member function to determine if the found file is a normal file.  \n  \n```  \nBOOL IsNormal() const;\n\n \n```  \n  \n### Return Value  \n Nonzero if successful; otherwise 0.  \n  \n### Remarks  \n Files marked with FILE_ATTRIBUTE_NORMAL, a file attribute identified in the [WIN32_FIND_DATA](http://msdn.microsoft.com/library/windows/desktop/aa365740) structure. A normal file has no other attributes set. All other file attributes override this attribute.  \n  \n You must call [FindNextFile](#cfilefind__findnextfile) at least once before calling `IsNormal`.  \n  \n See the member function [MatchesMask](#cfilefind__matchesmask) for a complete list of file attributes.  \n  \n### Example  \n  See the example for [CFileFind::GetLength](#cfilefind__getlength).  \n  \n##  <a name=\"cfilefind__isreadonly\"></a>  CFileFind::IsReadOnly  \n Call this member function to determine if the found file is read-only.  \n  \n```  \nBOOL IsReadOnly() const;\n\n \n```  \n  \n### Return Value  \n Nonzero if successful; otherwise 0.  \n  \n### Remarks  \n A read-only file is marked with FILE_ATTRIBUTE_READONLY, a file attribute identified in the [WIN32_FIND_DATA](http://msdn.microsoft.com/library/windows/desktop/aa365740) structure. Applications can read such a file, but they cannot write to it or delete it.  \n  \n You must call [FindNextFile](#cfilefind__findnextfile) at least once before calling `IsReadOnly`.  \n  \n See the member function [MatchesMask](#cfilefind__matchesmask) for a complete list of file attributes.  \n  \n### Example  \n  See the example for [CFileFind::GetLength](#cfilefind__getlength).  \n  \n##  <a name=\"cfilefind__issystem\"></a>  CFileFind::IsSystem  \n Call this member function to determine if the found file is a system file.  \n  \n```  \nBOOL IsSystem() const;\n\n \n```  \n  \n### Return Value  \n Nonzero if successful; otherwise 0.  \n  \n### Remarks  \n A system file is marked with FILE_ATTRIBUTE_SYSTEM, , a file attribute identified in the [WIN32_FIND_DATA](http://msdn.microsoft.com/library/windows/desktop/aa365740) structure. A system file is part of, or is used exclusively by, the operating system.  \n  \n You must call [FindNextFile](#cfilefind__findnextfile) at least once before calling `IsSystem`.  \n  \n See the member function [MatchesMask](#cfilefind__matchesmask) for a complete list of file attributes.  \n  \n### Example  \n  See the example for [CFileFind::GetLength](#cfilefind__getlength).  \n  \n##  <a name=\"cfilefind__istemporary\"></a>  CFileFind::IsTemporary  \n Call this member function to determine if the found file is a temporary file.  \n  \n```  \nBOOL IsTemporary() const;\n\n \n```  \n  \n### Return Value  \n Nonzero if successful; otherwise 0.  \n  \n### Remarks  \n A temporary file is marked with FILE_ATTRIBUTE_TEMPORARY, a file attribute identified in the [WIN32_FIND_DATA](http://msdn.microsoft.com/library/windows/desktop/aa365740) structure. A temporary file is used for temporary storage. Applications should write to the file only if absolutely necessary. Most of the file's data remains in memory without being flushed to the media because the file will soon be deleted.  \n  \n You must call [FindNextFile](#cfilefind__findnextfile) at least once before calling `IsTemporary`.  \n  \n See the member function [MatchesMask](#cfilefind__matchesmask) for a complete list of file attributes.  \n  \n### Example  \n  See the example for [CFileFind::GetLength](#cfilefind__getlength).  \n  \n##  <a name=\"cfilefind__m_ptm\"></a>  CFileFind::m_pTM  \n Pointer to a `CAtlTransactionManager` object.  \n  \n```  \nCAtlTransactionManager* m_pTM;  \n```  \n  \n### Remarks  \n  \n##  <a name=\"cfilefind__matchesmask\"></a>  CFileFind::MatchesMask  \n Call this member function to test the file attributes on the found file.  \n  \n```  \nvirtual BOOL MatchesMask(DWORD dwMask) const;\n\n \n```  \n  \n### Parameters  \n `dwMask`  \n Specifies one or more file attributes, identified in the [WIN32_FIND_DATA](http://msdn.microsoft.com/library/windows/desktop/aa365740) structure, for the found file. To search for multiple attributes, use the bitwise OR (&#124;) operator. Any combination of the following attributes is acceptable:  \n  \n-   FILE_ATTRIBUTE_ARCHIVE   The file is an archive file. Applications use this attribute to mark files for backup or removal.  \n  \n-   FILE_ATTRIBUTE_COMPRESSED   The file or directory is compressed. For a file, this means that all of the data in the file is compressed. For a directory, this means that compression is the default for newly created files and subdirectories.  \n  \n-   FILE_ATTRIBUTE_DIRECTORY   The file is a directory.  \n  \n-   FILE_ATTRIBUTE_NORMAL   The file has no other attributes set. This attribute is valid only if used alone. All other file attributes override this attribute.  \n  \n-   FILE_ATTRIBUTE_HIDDEN   The file is hidden. It is not to be included in an ordinary directory listing.  \n  \n-   FILE_ATTRIBUTE_READONLY   The file is read only. Applications can read the file but cannot write to it or delete it.  \n  \n-   FILE_ATTRIBUTE_SYSTEM   The file is part of or is used exclusively by the operating system.  \n  \n-   FILE_ATTRIBUTE_TEMPORARY   The file is being used for temporary storage. Applications should write to the file only if absolutely necessary. Most of the file's data remains in memory without being flushed to the media because the file will soon be deleted.  \n  \n### Return Value  \n Nonzero if successful; otherwise 0. To get extended error information, call the Win32 function [GetLastError](http://msdn.microsoft.com/library/windows/desktop/ms679360).  \n  \n### Remarks  \n You must call [FindNextFile](#cfilefind__findnextfile) at least once before calling `MatchesMask`.  \n  \n### Example  \n [!code-cpp[NVC_MFCFiles#35](../../atl-mfc-shared/reference/codesnippet/cpp/cfilefind-class_5.cpp)]  \n  \n## See Also  \n [CObject Class](../../mfc/reference/cobject-class.md)   \n [Hierarchy Chart](../../mfc/hierarchy-chart.md)   \n [CFtpFileFind Class](../../mfc/reference/cftpfilefind-class.md)   \n [CGopherFileFind Class](../../mfc/reference/cgopherfilefind-class.md)   \n [CInternetFile Class](../../mfc/reference/cinternetfile-class.md)   \n [CGopherFile Class](../../mfc/reference/cgopherfile-class.md)   \n [CHttpFile Class](../../mfc/reference/chttpfile-class.md)\n"}