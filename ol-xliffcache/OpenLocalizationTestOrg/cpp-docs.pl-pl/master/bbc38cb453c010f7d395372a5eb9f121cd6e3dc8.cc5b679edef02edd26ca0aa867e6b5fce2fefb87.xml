{"nodes":[{"pos":[12,54],"content":"&lt;sstream&gt; functions | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"sstream<ph id=\"ph1\">&amp;gt;</ph> functions | Microsoft Docs","pos":[4,42],"source":"sstream&gt; functions | Microsoft Docs"}]},{"content":"sstream<ph id=\"ph1\">&amp;gt;</ph> functions","pos":[261,282],"source":"sstream&gt; functions"},{"content":"swap","pos":[296,300]},{"pos":[356,360],"content":"swap"},{"pos":[364,415],"content":"Exchanges the values between two <ph id=\"ph1\">`sstream`</ph> objects.","source":"Exchanges the values between two `sstream` objects."},{"content":"Parameters","pos":[1065,1075]},{"content":"Parameter","pos":[1082,1091]},{"content":"Description","pos":[1092,1103]},{"pos":[1154,1187],"content":"Reference to an <ph id=\"ph1\">`sstream`</ph> object.","source":"Reference to an `sstream` object."},{"pos":[1201,1234],"content":"Reference to an <ph id=\"ph1\">`sstream`</ph> object.","source":"Reference to an `sstream` object."},{"content":"Remarks","pos":[1245,1252]},{"pos":[1256,1314],"content":"The template function executes <ph id=\"ph1\">` left``.swap(`` right``)`</ph>.","source":"The template function executes ` left``.swap(`` right``)`."},{"content":"See Also","pos":[1323,1331]},{"content":"sstream&gt;","pos":[1338,1346],"source":"sstream>"}],"content":"---\ntitle: \"&lt;sstream&gt; functions | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nms.assetid: bc9607e8-7c6b-44ef-949b-19e917b450ad\ncaps.latest.revision: 10\nmanager: \"ghogen\"\n---\n# &lt;sstream&gt; functions\n||  \n|-|  \n|[swap](#sstream_swap)|  \n  \n##  <a name=\"sstream_swap\"></a>  swap  \n Exchanges the values between two `sstream` objects.  \n  \n```  \ntemplate <class Elem, class Tr, class Alloc>  \nvoid swap(\n    basic_stringbuf<Elem, Tr, Alloc>& left,  \n    basic_stringbuf<Elem, Tr, Alloc>& right);\n\ntemplate <class Elem, class Tr, class Alloc>  \nvoid swap(\n    basic_istringstream<Elem, Tr, Alloc>& left,  \n    basic_istringstream<Elem, Tr, Alloc>& right);\n\ntemplate <class Elem, class Tr, class Alloc>  \nvoid swap(\n    basic_ostringstream<Elem, Tr, Alloc>& left,  \n    basic_ostringstream<Elem, Tr, Alloc>& right);\n\ntemplate <class Elem, class Tr, class Alloc>  \nvoid swap(\n    basic_stringstream<Elem, Tr, Alloc>& left,  \n    basic_stringstream<Elem, Tr, Alloc>& right);\n```  \n  \n### Parameters  \n  \n|Parameter|Description|  \n|---------------|-----------------|  \n|` left`|Reference to an `sstream` object.|  \n|` right`|Reference to an `sstream` object.|  \n  \n### Remarks  \n The template function executes ` left``.swap(`` right``)`.  \n  \n## See Also  \n [\\<sstream>](../standard-library/sstream.md)\n\n"}