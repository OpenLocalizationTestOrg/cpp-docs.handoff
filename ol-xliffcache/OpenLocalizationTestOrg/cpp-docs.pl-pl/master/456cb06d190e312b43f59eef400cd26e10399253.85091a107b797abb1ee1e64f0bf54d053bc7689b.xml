{"nodes":[{"pos":[12,43],"content":"CCRTHeap Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"CCRTHeap Class | Microsoft Docs","pos":[0,31]}]},{"pos":[637,651],"content":"CCRTHeap Class","linkify":"CCRTHeap Class","nodes":[{"content":"CCRTHeap Class","pos":[0,14]}]},{"pos":[652,757],"content":"This class implements <bpt id=\"p1\">[</bpt>IAtlMemMgr<ept id=\"p1\">](../../atl/reference/iatlmemmgr-class.md)</ept> using the CRT heap functions.","source":"This class implements [IAtlMemMgr](../../atl/reference/iatlmemmgr-class.md) using the CRT heap functions."},{"pos":[766,772],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[829,836],"content":"Members","linkify":"Members","nodes":[{"content":"Members","pos":[0,7]}]},{"pos":[846,860],"content":"Public Methods","linkify":"Public Methods","nodes":[{"content":"Public Methods","pos":[0,14]}]},{"content":"Name","pos":[867,871]},{"content":"Description","pos":[872,883]},{"pos":[921,962],"content":"<bpt id=\"p1\">[</bpt>CCRTHeap::Allocate<ept id=\"p1\">](#ccrtheap__allocate)</ept>","source":"[CCRTHeap::Allocate](#ccrtheap__allocate)"},{"content":"Call this method to allocate a block of memory.","pos":[963,1010]},{"pos":[1015,1048],"content":"<bpt id=\"p1\">[</bpt>CCRTHeap::Free<ept id=\"p1\">](#ccrtheap__free)</ept>","source":"[CCRTHeap::Free](#ccrtheap__free)"},{"content":"Call this method to free a block of memory allocated by this memory manager.","pos":[1049,1125]},{"pos":[1130,1169],"content":"<bpt id=\"p1\">[</bpt>CCRTHeap::GetSize<ept id=\"p1\">](#ccrtheap__getsize)</ept>","source":"[CCRTHeap::GetSize](#ccrtheap__getsize)"},{"content":"Call this method to get the allocated size of a memory block allocated by this memory manager.","pos":[1170,1264]},{"pos":[1269,1314],"content":"<bpt id=\"p1\">[</bpt>CCRTHeap::Reallocate<ept id=\"p1\">](#ccrtheap__reallocate)</ept>","source":"[CCRTHeap::Reallocate](#ccrtheap__reallocate)"},{"content":"Call this method to reallocate memory allocated by this memory manager.","pos":[1315,1386]},{"pos":[1396,1403],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[1407,1717],"content":"<ph id=\"ph1\">`CCRTHeap`</ph> implements memory allocation functions using the CRT heap functions, including <bpt id=\"p1\">[</bpt>malloc<ept id=\"p1\">](../../c-runtime-library/reference/malloc.md)</ept>, <bpt id=\"p2\">[</bpt>free<ept id=\"p2\">](../../c-runtime-library/reference/free.md)</ept>, <bpt id=\"p3\">[</bpt>realloc<ept id=\"p3\">](../../c-runtime-library/reference/realloc.md)</ept>, and <bpt id=\"p4\">[</bpt>_msize<ept id=\"p4\">](../../c-runtime-library/reference/msize.md)</ept>.","source":"`CCRTHeap` implements memory allocation functions using the CRT heap functions, including [malloc](../../c-runtime-library/reference/malloc.md), [free](../../c-runtime-library/reference/free.md), [realloc](../../c-runtime-library/reference/realloc.md), and [_msize](../../c-runtime-library/reference/msize.md)."},{"pos":[1726,1733],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[1737,1811],"content":"See the example for <bpt id=\"p1\">[</bpt>IAtlMemMgr<ept id=\"p1\">](../../atl/reference/iatlmemmgr-class.md)</ept>.","source":"See the example for [IAtlMemMgr](../../atl/reference/iatlmemmgr-class.md)."},{"pos":[1820,1841],"content":"Inheritance Hierarchy","linkify":"Inheritance Hierarchy","nodes":[{"content":"Inheritance Hierarchy","pos":[0,21]}]},{"pos":[1883,1895],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[1899,1919],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> atlmem.h","source":"**Header:** atlmem.h"},{"pos":[1929,1982],"content":"<bpt id=\"p1\">&lt;a name=\"ccrtheap__allocate\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CCRTHeap::Allocate","linkify":"<a name=\"ccrtheap__allocate\"></a>  CCRTHeap::Allocate","source":"<a name=\"ccrtheap__allocate\"></a>  CCRTHeap::Allocate"},{"content":"Call this method to allocate a block of memory.","pos":[1986,2033]},{"pos":[2125,2135],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"The requested number of bytes in the new memory block.","pos":[2151,2205]},{"pos":[2215,2227],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Returns a pointer to the start of the newly allocated memory block.","pos":[2231,2298]},{"pos":[2308,2315],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[2319,2451],"content":"Call <bpt id=\"p1\">[</bpt>CCRTHeap::Free<ept id=\"p1\">](#ccrtheap__free)</ept> or <bpt id=\"p2\">[</bpt>CCRTHeap::Reallocate<ept id=\"p2\">](#ccrtheap__reallocate)</ept> to free the memory allocated by this method.","source":"Call [CCRTHeap::Free](#ccrtheap__free) or [CCRTHeap::Reallocate](#ccrtheap__reallocate) to free the memory allocated by this method."},{"pos":[2458,2530],"content":"Implemented using <bpt id=\"p1\">[</bpt>malloc<ept id=\"p1\">](../../c-runtime-library/reference/malloc.md)</ept>.","source":"Implemented using [malloc](../../c-runtime-library/reference/malloc.md)."},{"pos":[2540,2585],"content":"<bpt id=\"p1\">&lt;a name=\"ccrtheap__free\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CCRTHeap::Free","linkify":"<a name=\"ccrtheap__free\"></a>  CCRTHeap::Free","source":"<a name=\"ccrtheap__free\"></a>  CCRTHeap::Free"},{"content":"Call this method to free a block of memory allocated by this memory manager.","pos":[2589,2665]},{"pos":[2724,2734],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Pointer to memory previously allocated by this memory manager.","pos":[2745,2807]},{"content":"NULL is a valid value and does nothing.","pos":[2808,2847]},{"pos":[2857,2864],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[2868,2936],"content":"Implemented using <bpt id=\"p1\">[</bpt>free<ept id=\"p1\">](../../c-runtime-library/reference/free.md)</ept>.","source":"Implemented using [free](../../c-runtime-library/reference/free.md)."},{"pos":[2946,2997],"content":"<bpt id=\"p1\">&lt;a name=\"ccrtheap__getsize\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CCRTHeap::GetSize","linkify":"<a name=\"ccrtheap__getsize\"></a>  CCRTHeap::GetSize","source":"<a name=\"ccrtheap__getsize\"></a>  CCRTHeap::GetSize"},{"content":"Call this method to get the allocated size of a memory block allocated by this memory manager.","pos":[3001,3095]},{"pos":[3159,3169],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Pointer to memory previously allocated by this memory manager.","pos":[3180,3242]},{"pos":[3252,3264],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Returns the size of the allocated memory block in bytes.","pos":[3268,3324]},{"pos":[3334,3341],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[3345,3416],"content":"Implemented using <bpt id=\"p1\">[</bpt>_msize<ept id=\"p1\">](../../c-runtime-library/reference/msize.md)</ept>.","source":"Implemented using [_msize](../../c-runtime-library/reference/msize.md)."},{"pos":[3426,3483],"content":"<bpt id=\"p1\">&lt;a name=\"ccrtheap__reallocate\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CCRTHeap::Reallocate","linkify":"<a name=\"ccrtheap__reallocate\"></a>  CCRTHeap::Reallocate","source":"<a name=\"ccrtheap__reallocate\"></a>  CCRTHeap::Reallocate"},{"content":"Call this method to reallocate memory allocated by this memory manager.","pos":[3487,3558]},{"pos":[3667,3677],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Pointer to memory previously allocated by this memory manager.","pos":[3688,3750]},{"content":"The requested number of bytes in the new memory block.","pos":[3769,3823]},{"pos":[3833,3845],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Returns a pointer to the start of the newly allocated memory block.","pos":[3849,3916]},{"pos":[3926,3933],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Call <bpt id=\"p1\">[</bpt>CCRTHeap::Free<ept id=\"p1\">](#ccrtheap__free)</ept> to free the memory allocated by this method.","pos":[3937,4020],"source":"Call [CCRTHeap::Free](#ccrtheap__free) to free the memory allocated by this method."},{"content":"Implemented using <bpt id=\"p1\">[</bpt>realloc<ept id=\"p1\">](../../c-runtime-library/reference/realloc.md)</ept>.","pos":[4021,4095],"source":" Implemented using [realloc](../../c-runtime-library/reference/realloc.md)."},{"pos":[4104,4112],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Class Overview<ept id=\"p1\">](../../atl/atl-class-overview.md)</ept><ph id=\"ph1\"> </ph>","pos":[4116,4166],"source":"[Class Overview](../../atl/atl-class-overview.md) "},{"content":"<bpt id=\"p1\"> [</bpt>CComHeap Class<ept id=\"p1\">](../../atl/reference/ccomheap-class.md)</ept><ph id=\"ph1\"> </ph>","pos":[4169,4226],"source":" [CComHeap Class](../../atl/reference/ccomheap-class.md) "},{"content":"<bpt id=\"p1\"> [</bpt>CWin32Heap Class<ept id=\"p1\">](../../atl/reference/cwin32heap-class.md)</ept><ph id=\"ph1\"> </ph>","pos":[4229,4290],"source":" [CWin32Heap Class](../../atl/reference/cwin32heap-class.md) "},{"content":"<bpt id=\"p1\"> [</bpt>CLocalHeap Class<ept id=\"p1\">](../../atl/reference/clocalheap-class.md)</ept><ph id=\"ph1\"> </ph>","pos":[4293,4354],"source":" [CLocalHeap Class](../../atl/reference/clocalheap-class.md) "},{"content":"<bpt id=\"p1\"> [</bpt>CGlobalHeap Class<ept id=\"p1\">](../../atl/reference/cglobalheap-class.md)</ept><ph id=\"ph1\"> </ph>","pos":[4357,4420],"source":" [CGlobalHeap Class](../../atl/reference/cglobalheap-class.md) "},{"content":"<bpt id=\"p1\"> [</bpt>IAtlMemMgr Class<ept id=\"p1\">](../../atl/reference/iatlmemmgr-class.md)</ept>","pos":[4423,4483],"source":" [IAtlMemMgr Class](../../atl/reference/iatlmemmgr-class.md)"}],"content":"---\ntitle: \"CCRTHeap Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"ATL::CCRTHeap\"\n  - \"ATL.CCRTHeap\"\n  - \"CCRTHeap\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"CCRTHeap class\"\nms.assetid: 321bd6c5-1856-4ff7-8590-95044a1209f7\ncaps.latest.revision: 19\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# CCRTHeap Class\nThis class implements [IAtlMemMgr](../../atl/reference/iatlmemmgr-class.md) using the CRT heap functions.  \n  \n## Syntax  \n  \n```\nclass CCRTHeap : public IAtlMemMgr\n```  \n  \n## Members  \n  \n### Public Methods  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CCRTHeap::Allocate](#ccrtheap__allocate)|Call this method to allocate a block of memory.|  \n|[CCRTHeap::Free](#ccrtheap__free)|Call this method to free a block of memory allocated by this memory manager.|  \n|[CCRTHeap::GetSize](#ccrtheap__getsize)|Call this method to get the allocated size of a memory block allocated by this memory manager.|  \n|[CCRTHeap::Reallocate](#ccrtheap__reallocate)|Call this method to reallocate memory allocated by this memory manager.|  \n  \n## Remarks  \n `CCRTHeap` implements memory allocation functions using the CRT heap functions, including [malloc](../../c-runtime-library/reference/malloc.md), [free](../../c-runtime-library/reference/free.md), [realloc](../../c-runtime-library/reference/realloc.md), and [_msize](../../c-runtime-library/reference/msize.md).  \n  \n## Example  \n See the example for [IAtlMemMgr](../../atl/reference/iatlmemmgr-class.md).  \n  \n## Inheritance Hierarchy  \n `IAtlMemMgr`  \n  \n `CCRTHeap`  \n  \n## Requirements  \n **Header:** atlmem.h  \n  \n##  <a name=\"ccrtheap__allocate\"></a>  CCRTHeap::Allocate  \n Call this method to allocate a block of memory.  \n  \n```\nvirtual __declspec(allocator) void* Allocate(size_t nBytes) throw();\n```  \n  \n### Parameters  \n `nBytes`  \n The requested number of bytes in the new memory block.  \n  \n### Return Value  \n Returns a pointer to the start of the newly allocated memory block.  \n  \n### Remarks  \n Call [CCRTHeap::Free](#ccrtheap__free) or [CCRTHeap::Reallocate](#ccrtheap__reallocate) to free the memory allocated by this method.  \n  \n Implemented using [malloc](../../c-runtime-library/reference/malloc.md).  \n  \n##  <a name=\"ccrtheap__free\"></a>  CCRTHeap::Free  \n Call this method to free a block of memory allocated by this memory manager.  \n  \n```\nvirtual void Free(void* p) throw();\n```  \n  \n### Parameters  \n `p`  \n Pointer to memory previously allocated by this memory manager. NULL is a valid value and does nothing.  \n  \n### Remarks  \n Implemented using [free](../../c-runtime-library/reference/free.md).  \n  \n##  <a name=\"ccrtheap__getsize\"></a>  CCRTHeap::GetSize  \n Call this method to get the allocated size of a memory block allocated by this memory manager.  \n  \n```\nvirtual size_t GetSize(void* p) throw();\n```  \n  \n### Parameters  \n `p`  \n Pointer to memory previously allocated by this memory manager.  \n  \n### Return Value  \n Returns the size of the allocated memory block in bytes.  \n  \n### Remarks  \n Implemented using [_msize](../../c-runtime-library/reference/msize.md).  \n  \n##  <a name=\"ccrtheap__reallocate\"></a>  CCRTHeap::Reallocate  \n Call this method to reallocate memory allocated by this memory manager.  \n  \n```\nvirtual __declspec(allocator) void* Reallocate(\n    void* p,  size_t nBytes) throw();\n```  \n  \n### Parameters  \n `p`  \n Pointer to memory previously allocated by this memory manager.  \n  \n `nBytes`  \n The requested number of bytes in the new memory block.  \n  \n### Return Value  \n Returns a pointer to the start of the newly allocated memory block.  \n  \n### Remarks  \n Call [CCRTHeap::Free](#ccrtheap__free) to free the memory allocated by this method. Implemented using [realloc](../../c-runtime-library/reference/realloc.md).  \n  \n## See Also  \n [Class Overview](../../atl/atl-class-overview.md)   \n [CComHeap Class](../../atl/reference/ccomheap-class.md)   \n [CWin32Heap Class](../../atl/reference/cwin32heap-class.md)   \n [CLocalHeap Class](../../atl/reference/clocalheap-class.md)   \n [CGlobalHeap Class](../../atl/reference/cglobalheap-class.md)   \n [IAtlMemMgr Class](../../atl/reference/iatlmemmgr-class.md)\n"}