{"nodes":[{"pos":[12,49],"content":"Compiler Error C2783 | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Compiler Error C2783 | Microsoft Docs","pos":[0,37]}]},{"pos":[598,618],"content":"Compiler Error C2783","linkify":"Compiler Error C2783","nodes":[{"content":"Compiler Error C2783","pos":[0,20]}]},{"content":"'declaration' : could not deduce template argument for 'identifier'","pos":[619,686]},{"content":"The compiler cannot determine a template argument.","pos":[693,743]},{"content":"Default arguments cannot be used to deduce a template argument.","pos":[744,807]},{"content":"The following sample generates C2783:","pos":[814,851]},{"content":"C2783 can also occur when using generics:","pos":[1066,1107]}],"content":"---\ntitle: \"Compiler Error C2783 | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"error-reference\"\nf1_keywords: \n  - \"C2783\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"C2783\"\nms.assetid: 1ce94a11-bb8b-4be3-a222-f1f105da74b3\ncaps.latest.revision: 14\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Compiler Error C2783\n'declaration' : could not deduce template argument for 'identifier'  \n  \n The compiler cannot determine a template argument. Default arguments cannot be used to deduce a template argument.  \n  \n The following sample generates C2783:  \n  \n```  \n// C2783.cpp  \ntemplate<typename T1, typename T2>  \nT1 f(T2) {  \n   return 248;  \n}  \n  \nint main() {  \n   f(1);   // C2783  \n   // try the following line instead  \n   int i = f<int>(1);  \n}  \n```  \n  \n C2783 can also occur when using generics:  \n  \n```  \n// C2783b.cpp  \n// compile with: /clr  \nusing namespace System;  \ngeneric<typename T1, typename T2>   \nT1 gf(T2) {  \n   T1 t1 = safe_cast<T1>( Activator::CreateInstance(T1::typeid));  \n   return t1;  \n}  \n  \nref class MyClass{};  \n  \nint main() {  \n   int i;  \n   i = gf(9);   // C2783  \n  \n   // OK  \n   i = gf<int>(9);  \n}  \n```"}