<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="pl-pl">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-04506c2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">444e61e88c63def587d77398bab04efbd06d00fa</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\preprocessor\compiler-warnings-that-are-off-by-default.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b7aa4bbe74be3a14cb61ee57a67a197d41040311</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">553299e4d231883cda36b844a8f8441d36aeded6</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Compiler Warnings That Are Off by Default | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Compiler Warnings That Are Off by Default</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The compiler includes warnings that are turned off by default because most users don't want to see them.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>However, you can enable these warnings by using one of the following options.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The specified warning (<ph id="ph1">`warning_number`</ph>) is enabled at its default level.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Documentation for the warning contains the default level of the warning.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The specified warning (<ph id="ph1">`warning_number`</ph>) is enabled at the specified level (<ph id="ph2">`warning_level`</ph>).</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>/Wall</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> **</bpt>/Wall<ept id="p1">**</ept> enables all warnings that are off by default.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The following warnings are turned off by default.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>C4061<ept id="p1">](../error-messages/compiler-warnings/compiler-warning-level-4-c4061.md)</ept> (level 4)</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>enumerator 'identifier' in a switch of enum 'enumeration' is not explicitly handled by a case label</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>C4062<ept id="p1">](../error-messages/compiler-warnings/compiler-warning-level-4-c4062.md)</ept> (level 4)</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>enumerator 'identifier' in a switch of enum 'enumeration' is not handled</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>C4191 (level 3)</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>'operator/operation': unsafe conversion from 'type of expression' to 'type required'</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>C4242<ept id="p1">](../error-messages/compiler-warnings/compiler-warning-level-4-c4242.md)</ept> (level 4)</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>'identifier': conversion from 'type1' to 'type2', possible loss of data</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>C4254<ept id="p1">](../error-messages/compiler-warnings/compiler-warning-level-4-c4254.md)</ept> (level 4)</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>'operator': conversion from 'type1' to 'type2', possible loss of data</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>C4255<ept id="p1">](../error-messages/compiler-warnings/compiler-warning-level-4-c4255.md)</ept> (level 4)</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>'function': no function prototype given: converting '()' to '(void)'</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>C4263<ept id="p1">](../error-messages/compiler-warnings/compiler-warning-level-4-c4263.md)</ept> (level 4)</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>'function': member function does not override any base class virtual member function</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>C4264<ept id="p1">](../error-messages/compiler-warnings/compiler-warning-level-1-c4264.md)</ept> (level 1)</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>'virtual_function': no override available for virtual member function from base 'class'; function is hidden</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>C4265<ept id="p1">](../error-messages/compiler-warnings/compiler-warning-level-3-c4265.md)</ept> (level 3)</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>'class': class has virtual functions, but destructor is not virtual</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>C4266<ept id="p1">](../error-messages/compiler-warnings/compiler-warning-level-4-c4266.md)</ept> (level 4)</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>'function': no override available for virtual member function from base 'type'; function is hidden</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>C4287<ept id="p1">](../error-messages/compiler-warnings/compiler-warning-level-3-c4287.md)</ept> (level 3)</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>'operator': unsigned/negative constant mismatch</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>C4289<ept id="p1">](../error-messages/compiler-warnings/compiler-warning-level-4-c4289.md)</ept> (level 4)</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>nonstandard extension used : 'var' : loop control variable declared in the for-loop is used outside the for-loop scope</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>C4296<ept id="p1">](../error-messages/compiler-warnings/compiler-warning-level-4-c4296.md)</ept> (level 4)</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>'operator': expression is always false</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>C4302<ept id="p1">](../error-messages/compiler-warnings/compiler-warning-level-2-c4302.md)</ept> (level 2)</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>'conversion': truncation from 'type1' to 'type2'</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>C4311<ept id="p1">](../error-messages/compiler-warnings/compiler-warning-level-1-c4311.md)</ept> (level 1)</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>'variable' : pointer truncation from 'type' to 'type'</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>C4312<ept id="p1">](../error-messages/compiler-warnings/compiler-warning-level-1-c4312.md)</ept> (level 1)</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>'operation' : conversion from 'type1' to 'type2' of greater size</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>C4339<ept id="p1">](../error-messages/compiler-warnings/compiler-warning-level-4-c4339.md)</ept> (level 4)</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>'type' : use of undefined type detected in CLR meta-data - use of this type may lead to a runtime exception</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>C4342<ept id="p1">](../error-messages/compiler-warnings/compiler-warning-level-1-c4342.md)</ept> (level 1)</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>behavior change: 'function' called, but a member operator was called in previous versions</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>C4350<ept id="p1">](../error-messages/compiler-warnings/compiler-warning-level-1-c4350.md)</ept> (level 1)</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>behavior change: 'member1' called instead of 'member2'</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>C4355</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>'this' : used in base member initializer list</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>C4365<ept id="p1">](../error-messages/compiler-warnings/compiler-warning-level-4-c4365.md)</ept> (level 4)</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>'action': conversion from 'type_1' to 'type_2', signed/unsigned mismatch</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>C4370 (level 3)</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>layout of class has changed from a previous version of the compiler due to better packing</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>C4371 (level 3)</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>layout of class may have changed from a previous version of the compiler due to better packing of member 'member'</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>C4388 (level 4)</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>signed/unsigned mismatch</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>C4412<ept id="p1">](../error-messages/compiler-warnings/compiler-warning-level-2-c4412.md)</ept> (level 2)</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>'function': function signature contains type 'type'; C++ objects are unsafe to pass between pure code and mixed or native</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>C4431<ept id="p1">](../error-messages/compiler-warnings/compiler-warning-level-4-c4431.md)</ept> (level 4)</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>missing type specifier - int assumed.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Note: C no longer supports default-int</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>C4435<ept id="p1">](../error-messages/compiler-warnings/compiler-warning-level-4-c4435.md)</ept> (level 4)</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>'class1' : Object layout under /vd2 will change due to virtual base 'class2'</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>C4437<ept id="p1">](../error-messages/compiler-warnings/compiler-warning-level-4-c4437.md)</ept> (level 4)</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>dynamic_cast from virtual base 'class1' to 'class2' could fail in some contexts</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>C4444 (level 3)</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>top level '__unaligned' is not implemented in this context</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>C4471 (level 4)</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>a forward declaration of an unscoped enumeration must have an underlying type (int assumed)</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>C4472 (level 1)</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>'identifier' is a native enum: add an access specifier (private/public) to declare a managed enum</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>C4514<ept id="p1">](../error-messages/compiler-warnings/compiler-warning-level-4-c4514.md)</ept> (level 4)</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>'function': unreferenced inline function has been removed</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>C4536<ept id="p1">](../error-messages/compiler-warnings/compiler-warning-level-4-c4536.md)</ept> (level 4)</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>'type name': type-name exceeds meta-data limit of 'limit' characters</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>C4545<ept id="p1">](../error-messages/compiler-warnings/compiler-warning-level-1-c4545.md)</ept> (level 1)</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>expression before comma evaluates to a function which is missing an argument list</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>C4546<ept id="p1">](../error-messages/compiler-warnings/compiler-warning-level-1-c4546.md)</ept> (level 1)</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>function call before comma missing argument list</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>C4547<ept id="p1">](../error-messages/compiler-warnings/compiler-warning-level-1-c4547.md)</ept> (level 1)</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>'operator': operator before comma has no effect; expected operator with side-effect</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>C4548<ept id="p1">](../error-messages/compiler-warnings/compiler-warning-level-1-c4548.md)</ept> (level 1)</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>expression before comma has no effect; expected expression with side-effect</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>C4549<ept id="p1">](../error-messages/compiler-warnings/compiler-warning-level-1-c4549.md)</ept> (level 1)</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>'operator': operator before comma has no effect; did you intend 'operator'?</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>C4555<ept id="p1">](../error-messages/compiler-warnings/compiler-warning-level-1-c4555.md)</ept> (level 1)</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>expression has no effect; expected expression with side-effect</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>C4557<ept id="p1">](../error-messages/compiler-warnings/compiler-warning-level-3-c4557.md)</ept> (level 3)</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>'__assume' contains effect 'effect'</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>C4571<ept id="p1">](../error-messages/compiler-warnings/compiler-warning-level-4-c4571.md)</ept> (level 4)</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>informational: catch(…) semantics changed since Visual C++ 7.1; structured exceptions (SEH) are no longer caught</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>C4574 (level 4)</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>'identifier' is defined to be '0': did you mean to use '#if identifier'?</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>C4608 (level 3)</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>'symbol1' has already been initialized by another union member in the initializer list, 'symbol2'</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>C4619<ept id="p1">](../error-messages/compiler-warnings/compiler-warning-level-3-c4619.md)</ept> (level 3)</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>pragma warning: there is no warning number 'number'</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>C4623<ept id="p1">](../error-messages/compiler-warnings/compiler-warning-level-4-c4623.md)</ept> (level 4)</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>'derived class': default constructor could not be generated because a base class default constructor is inaccessible</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>C4625<ept id="p1">](../error-messages/compiler-warnings/compiler-warning-level-4-c4625.md)</ept> (level 4)</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>'derived class': copy constructor could not be generated because a base class copy constructor is inaccessible</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>C4626<ept id="p1">](../error-messages/compiler-warnings/compiler-warning-level-4-c4626.md)</ept> (level 4)</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>'derived class': assignment operator could not be generated because a base class assignment operator is inaccessible</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>C4628<ept id="p1">](../error-messages/compiler-warnings/compiler-warning-level-1-c4628.md)</ept> (level 1)</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>digraphs not supported with -Ze.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Character sequence 'digraph' not interpreted as alternate token for 'char'</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>C4640<ept id="p1">](../error-messages/compiler-warnings/compiler-warning-level-3-c4640.md)</ept> (level 3)</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>'instance': construction of local static object is not thread-safe</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>C4668<ept id="p1">](../error-messages/compiler-warnings/compiler-warning-level-4-c4668.md)</ept> (level 4)</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>'symbol' is not defined as a preprocessor macro, replacing with '0' for 'directives'</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>C4682 (level 4)</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>'symbol' : no directional parameter attribute specified, defaulting to [in]</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>C4686<ept id="p1">](../error-messages/compiler-warnings/compiler-warning-level-3-c4686.md)</ept> (level 3)</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>'user-defined type': possible change in behavior, change in UDT return calling convention</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>C4692<ept id="p1">](../error-messages/compiler-warnings/compiler-warning-level-1-c4692.md)</ept> (level 1)</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>'function': signature of non-private member contains assembly private native type 'native_type'</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>C4710<ept id="p1">](../error-messages/compiler-warnings/compiler-warning-level-4-c4710.md)</ept> (level 4)</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>'function': function not inlined</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>C4738<ept id="p1">](../error-messages/compiler-warnings/compiler-warning-level-3-c4738.md)</ept> (level 3)</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>storing 32-bit float result in memory, possible loss of performance</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>C4767 (level 4)</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>section name 'symbol' is longer than 8 characters and will be truncated by the linker</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>C4786 (level 3)</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>'symbol' : object name was truncated to 'number' characters in the debug information</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>C4820<ept id="p1">](../error-messages/compiler-warnings/compiler-warning-level-4-c4820.md)</ept> (level 4)</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>'bytes' bytes padding added after construct 'member_name'</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>C4905<ept id="p1">](../error-messages/compiler-warnings/compiler-warning-level-1-c4905.md)</ept> (level 1)</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>wide string literal cast to 'LPSTR'</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>C4906<ept id="p1">](../error-messages/compiler-warnings/compiler-warning-level-1-c4906.md)</ept> (level 1)</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>string literal cast to 'LPWSTR'</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>C4917<ept id="p1">](../error-messages/compiler-warnings/compiler-warning-level-1-c4917.md)</ept> (level 1)</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>'declarator': a GUID can only be associated with a class, interface, or namespace</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>C4928<ept id="p1">](../error-messages/compiler-warnings/compiler-warning-level-1-c4928.md)</ept> (level 1)</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>illegal copy-initialization; more than one user-defined conversion has been implicitly applied</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>C4931<ept id="p1">](../error-messages/compiler-warnings/compiler-warning-level-4-c4931.md)</ept> (level 4)</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>we are assuming the type library was built for number-bit pointers</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>C4946<ept id="p1">](../error-messages/compiler-warnings/compiler-warning-level-1-c4946.md)</ept> (level 1)</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>reinterpret_cast used between related classes: 'class1' and 'class2'</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>C4962</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>'function': profile-guided optimizations disabled because optimizations caused profile data to become inconsistent</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>C4986<ept id="p1">](../error-messages/compiler-warnings/compiler-warning-c4986.md)</ept> (level 4)</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>'symbol': exception specification does not match previous declaration</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>C4987 (level 4)</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>nonstandard extension used: 'throw (...)'</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>C4988 (level 4)</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>'symbol': variable declared outside class/function scope</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>warning</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>