{"nodes":[{"pos":[12,58],"content":"IWorkerThreadClient Interface | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"IWorkerThreadClient Interface | Microsoft Docs","pos":[0,46]}]},{"content":"IWorkerThreadClient Interface","pos":[700,729]},{"pos":[752,865],"content":"is the interface implemented by clients of the <bpt id=\"p1\">[</bpt>CWorkerThread<ept id=\"p1\">](../../atl/reference/cworkerthread-class.md)</ept> class.","source":" is the interface implemented by clients of the [CWorkerThread](../../atl/reference/cworkerthread-class.md) class."},{"pos":[873,1023],"content":"[!IMPORTANT]\n This class and its members cannot be used in applications that execute in the [!INCLUDE[wrt](../../atl/reference/includes/wrt_md.md)].","leadings":["","> "],"nodes":[{"content":"This class and its members cannot be used in applications that execute in the <ph id=\"ph1\">[!INCLUDE[wrt](../../atl/reference/includes/wrt_md.md)]</ph>.","pos":[14,148],"source":" This class and its members cannot be used in applications that execute in the [!INCLUDE[wrt](../../atl/reference/includes/wrt_md.md)]."}]},{"content":"Syntax","pos":[1032,1038]},{"content":"Members","pos":[1092,1099]},{"content":"Methods","pos":[1109,1116]},{"content":"CloseHandle","pos":[1138,1149]},{"content":"Implement this method to close the handle associated with this object.","pos":[1186,1256]},{"content":"Execute","pos":[1262,1269]},{"content":"Implement this method to execute code when the handle associated with this object becomes signaled.","pos":[1302,1401]},{"content":"Remarks","pos":[1411,1418]},{"content":"Implement this interface when you have code that needs to execute on a worker thread in response to a handle becoming signaled.","pos":[1422,1549]},{"content":"Requirements","pos":[1558,1570]},{"pos":[1574,1595],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> atlutil.h","source":"**Header:** atlutil.h"},{"pos":[1654,1686],"content":"IWorkerThreadClient::CloseHandle"},{"content":"Implement this method to close the handle associated with this object.","pos":[1690,1760]},{"content":"Parameters","pos":[1823,1833]},{"content":"hHandle","pos":[1838,1845]},{"content":"The handle to be closed.","pos":[1850,1874]},{"content":"Return Value","pos":[1884,1896]},{"content":"Return S_OK on success, or an error HRESULT on failure.","pos":[1900,1955]},{"content":"Remarks","pos":[1965,1972]},{"pos":[1976,2161],"content":"The handle passed to this method was previously associated with this object by a call to <bpt id=\"p1\">[</bpt>CWorkerThread::AddHandle<ept id=\"p1\">](../../atl/reference/cworkerthread-class.md#cworkerthread__addhandle)</ept>.","source":"The handle passed to this method was previously associated with this object by a call to [CWorkerThread::AddHandle](../../atl/reference/cworkerthread-class.md#cworkerthread__addhandle)."},{"content":"Example","pos":[2171,2178]},{"pos":[2182,2269],"content":"The following code shows a simple implementation of <ph id=\"ph1\">`IWorkerThreadClient::CloseHandle`</ph>.","source":"The following code shows a simple implementation of `IWorkerThreadClient::CloseHandle`."},{"pos":[2287,2308],"content":"NVC_ATL_Utilities#135"},{"pos":[2428,2456],"content":"IWorkerThreadClient::Execute"},{"content":"Implement this method to execute code when the handle associated with this object becomes signaled.","pos":[2460,2559]},{"content":"Parameters","pos":[2642,2652]},{"content":"The user parameter.","pos":[2669,2688]},{"content":"The handle that has become signaled.","pos":[2708,2744]},{"content":"Return Value","pos":[2754,2766]},{"content":"Return S_OK on success, or an error HRESULT on failure.","pos":[2770,2825]},{"content":"Remarks","pos":[2835,2842]},{"pos":[2846,3050],"content":"The handle and DWORD/pointer passed to this method were previously associated with this object by a call to <bpt id=\"p1\">[</bpt>CWorkerThread::AddHandle<ept id=\"p1\">](../../atl/reference/cworkerthread-class.md#cworkerthread__addhandle)</ept>.","source":"The handle and DWORD/pointer passed to this method were previously associated with this object by a call to [CWorkerThread::AddHandle](../../atl/reference/cworkerthread-class.md#cworkerthread__addhandle)."},{"content":"Example","pos":[3060,3067]},{"pos":[3071,3154],"content":"The following code shows a simple implementation of <ph id=\"ph1\">`IWorkerThreadClient::Execute`</ph>.","source":"The following code shows a simple implementation of `IWorkerThreadClient::Execute`."},{"pos":[3172,3193],"content":"NVC_ATL_Utilities#136"},{"content":"See Also","pos":[3267,3275]},{"content":"Classes","pos":[3280,3287]},{"content":"CWorkerThread Class","pos":[3330,3349]}],"content":"---\ntitle: \"IWorkerThreadClient Interface | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"ATL.IWorkerThreadClient\"\n  - \"ATL::IWorkerThreadClient\"\n  - \"IWorkerThreadClient\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"IWorkerThreadClient interface\"\nms.assetid: 56f4a2f5-007e-4a33-9e20-05187629f715\ncaps.latest.revision: 24\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# IWorkerThreadClient Interface\n`IWorkerThreadClient` is the interface implemented by clients of the [CWorkerThread](../../atl/reference/cworkerthread-class.md) class.  \n  \n> [!IMPORTANT]\n>  This class and its members cannot be used in applications that execute in the [!INCLUDE[wrt](../../atl/reference/includes/wrt_md.md)].  \n  \n## Syntax  \n  \n```\n__interface IWorkerThreadClient\n```  \n  \n## Members  \n  \n### Methods  \n  \n|||  \n|-|-|  \n|[CloseHandle](#iworkerthreadclient__closehandle)|Implement this method to close the handle associated with this object.|  \n|[Execute](#iworkerthreadclient__execute)|Implement this method to execute code when the handle associated with this object becomes signaled.|  \n  \n## Remarks  \n Implement this interface when you have code that needs to execute on a worker thread in response to a handle becoming signaled.  \n  \n## Requirements  \n **Header:** atlutil.h  \n  \n##  <a name=\"iworkerthreadclient__closehandle\"></a>  IWorkerThreadClient::CloseHandle  \n Implement this method to close the handle associated with this object.  \n  \n```\nHRESULT CloseHandle(HANDLE    hHandle);\n```  \n  \n### Parameters  \n *hHandle*  \n The handle to be closed.  \n  \n### Return Value  \n Return S_OK on success, or an error HRESULT on failure.  \n  \n### Remarks  \n The handle passed to this method was previously associated with this object by a call to [CWorkerThread::AddHandle](../../atl/reference/cworkerthread-class.md#cworkerthread__addhandle).  \n  \n### Example  \n The following code shows a simple implementation of `IWorkerThreadClient::CloseHandle`.  \n  \n [!code-cpp[NVC_ATL_Utilities#135](../../atl/codesnippet/cpp/iworkerthreadclient-interface_1.cpp)]  \n  \n##  <a name=\"iworkerthreadclient__execute\"></a>  IWorkerThreadClient::Execute  \n Implement this method to execute code when the handle associated with this object becomes signaled.  \n  \n```\nHRESULT Execute(\n    DWORD_PTR\ndwParam,\n HANDLE   hObject);\n```  \n  \n### Parameters  \n `dwParam`  \n The user parameter.  \n  \n `hObject`  \n The handle that has become signaled.  \n  \n### Return Value  \n Return S_OK on success, or an error HRESULT on failure.  \n  \n### Remarks  \n The handle and DWORD/pointer passed to this method were previously associated with this object by a call to [CWorkerThread::AddHandle](../../atl/reference/cworkerthread-class.md#cworkerthread__addhandle).  \n  \n### Example  \n The following code shows a simple implementation of `IWorkerThreadClient::Execute`.  \n  \n [!code-cpp[NVC_ATL_Utilities#136](../../atl/codesnippet/cpp/iworkerthreadclient-interface_2.cpp)]  \n  \n## See Also  \n [Classes](../../atl/reference/atl-classes.md)   \n [CWorkerThread Class](../../atl/reference/cworkerthread-class.md)\n"}