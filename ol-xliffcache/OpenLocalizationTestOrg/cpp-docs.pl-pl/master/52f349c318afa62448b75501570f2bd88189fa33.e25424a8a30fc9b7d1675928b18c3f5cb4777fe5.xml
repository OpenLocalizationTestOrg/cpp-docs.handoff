{"nodes":[{"pos":[12,81],"content":"_cprintf_s, _cprintf_s_l, _cwprintf_s, _cwprintf_s_l | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"_cprintf_s, _cprintf_s_l, _cwprintf_s, _cwprintf_s_l | Microsoft Docs","pos":[0,69]}]},{"content":"_cprintf_s, _cprintf_s_l, _cwprintf_s, _cwprintf_s_l","pos":[1440,1492]},{"content":"Formats and prints to the console.","pos":[1493,1527]},{"content":"These versions of <bpt id=\"p1\">[</bpt>_cprintf, _cprintf_l, _cwprintf, _cwprintf_l<ept id=\"p1\">](../../c-runtime-library/reference/cprintf-cprintf-l-cwprintf-cwprintf-l.md)</ept> have security enhancements, as described in <bpt id=\"p2\">[</bpt>Security Features in the CRT<ept id=\"p2\">](../../c-runtime-library/security-features-in-the-crt.md)</ept>.","pos":[1528,1801],"source":" These versions of [_cprintf, _cprintf_l, _cwprintf, _cwprintf_l](../../c-runtime-library/reference/cprintf-cprintf-l-cwprintf-cwprintf-l.md) have security enhancements, as described in [Security Features in the CRT](../../c-runtime-library/security-features-in-the-crt.md)."},{"pos":[1809,2029],"content":"[!IMPORTANT]\n This API cannot be used in applications that execute in the Windows Runtime. For more information, see [CRT functions not supported with /ZW](http://msdn.microsoft.com/library/windows/apps/jj606124.aspx).","leadings":["","> "],"nodes":[{"content":" This API cannot be used in applications that execute in the Windows Runtime. For more information, see [CRT functions not supported with /ZW](http://msdn.microsoft.com/library/windows/apps/jj606124.aspx).","pos":[13,218],"nodes":[{"content":"This API cannot be used in applications that execute in the Windows Runtime.","pos":[1,77]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>CRT functions not supported with /ZW<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/apps/jj606124.aspx)</ept>.","pos":[78,205],"source":" For more information, see [CRT functions not supported with /ZW](http://msdn.microsoft.com/library/windows/apps/jj606124.aspx)."}]}]},{"content":"Syntax","pos":[2038,2044]},{"content":"Parameters","pos":[2410,2420]},{"content":"Format-control string.","pos":[2436,2458]},{"content":"Optional parameters.","pos":[2479,2499]},{"content":"The locale to use.","pos":[2518,2536]},{"content":"Return Value","pos":[2545,2557]},{"content":"The number of characters printed.","pos":[2561,2594]},{"content":"Remarks","pos":[2603,2610]},{"content":"These functions format and print a series of characters and values directly to the console, using the <ph id=\"ph1\">`_putch`</ph> function (<ph id=\"ph2\">`_putwch`</ph> for <ph id=\"ph3\">`_cwprintf_s`</ph>) to output characters.","pos":[2614,2785],"source":"These functions format and print a series of characters and values directly to the console, using the `_putch` function (`_putwch` for `_cwprintf_s`) to output characters."},{"content":"Each <ph id=\"ph1\">`argument`</ph> (if any) is converted and output according to the corresponding format specification in <ph id=\"ph2\">`format`</ph>.","pos":[2786,2899],"source":" Each `argument` (if any) is converted and output according to the corresponding format specification in `format`."},{"content":"The format has the same form and function as the <ph id=\"ph1\">`format`</ph> parameter for the <bpt id=\"p1\">[</bpt>printf_s<ept id=\"p1\">](../../c-runtime-library/format-specification-syntax-printf-and-wprintf-functions.md)</ept> function.","pos":[2900,3081],"source":" The format has the same form and function as the `format` parameter for the [printf_s](../../c-runtime-library/format-specification-syntax-printf-and-wprintf-functions.md) function."},{"content":"Unlike the <ph id=\"ph1\">`fprintf_s`</ph>, <ph id=\"ph2\">`printf_s`</ph>, and <ph id=\"ph3\">`sprintf_s`</ph> functions, neither <ph id=\"ph4\">`_cprintf_s`</ph> nor <ph id=\"ph5\">`_cwprintf_s`</ph> translates line-feed characters into carriage return–line feed (CR-LF) combinations when output.","pos":[3082,3280],"source":" Unlike the `fprintf_s`, `printf_s`, and `sprintf_s` functions, neither `_cprintf_s` nor `_cwprintf_s` translates line-feed characters into carriage return–line feed (CR-LF) combinations when output."},{"content":"An important distinction is that <ph id=\"ph1\">`_cwprintf_s`</ph> displays Unicode characters when used in Windows NT.","pos":[3287,3386],"source":"An important distinction is that `_cwprintf_s` displays Unicode characters when used in Windows NT."},{"content":"Unlike <ph id=\"ph1\">`_cprintf_s`</ph>, <ph id=\"ph2\">`_cwprintf_s`</ph> uses the current console locale","pos":[3387,3453],"source":" Unlike `_cprintf_s`, `_cwprintf_s` uses the current console locale"},{"pos":[3460,3609],"content":"The versions of these functions with the <ph id=\"ph1\">`_l`</ph> suffix are identical except that they use the locale parameter passed in instead of the current locale.","source":"The versions of these functions with the `_l` suffix are identical except that they use the locale parameter passed in instead of the current locale."},{"pos":[3617,3683],"content":"[!IMPORTANT]\n Ensure that `format` is not a user-defined string.","leadings":["","> "],"nodes":[{"content":"Ensure that <ph id=\"ph1\">`format`</ph> is not a user-defined string.","pos":[14,64],"source":" Ensure that `format` is not a user-defined string."}]},{"content":"Like the non-secure versions (see <bpt id=\"p1\">[</bpt>_cprintf, _cprintf_l, _cwprintf, _cwprintf_l<ept id=\"p1\">](../../c-runtime-library/reference/cprintf-cprintf-l-cwprintf-cwprintf-l.md)</ept>), these functions validate their parameters and invoke the invalid parameter handler, as described in <bpt id=\"p2\">[</bpt>Parameter Validation<ept id=\"p2\">](../../c-runtime-library/parameter-validation.md)</ept>, if <ph id=\"ph1\">`format`</ph> is a null pointer.","pos":[3690,4052],"source":"Like the non-secure versions (see [_cprintf, _cprintf_l, _cwprintf, _cwprintf_l](../../c-runtime-library/reference/cprintf-cprintf-l-cwprintf-cwprintf-l.md)), these functions validate their parameters and invoke the invalid parameter handler, as described in [Parameter Validation](../../c-runtime-library/parameter-validation.md), if `format` is a null pointer."},{"content":"These functions differ from the non-secure versions in that the format string itself is also validated.","pos":[4053,4156]},{"content":"If there are any unknown or badly formed formatting specifiers, these functions invoke the invalid parameter handler.","pos":[4157,4274]},{"content":"In all cases, If execution is allowed to continue, the functions return -1 and set <ph id=\"ph1\">`errno`</ph> to <ph id=\"ph2\">`EINVAL`</ph>.","pos":[4275,4378],"source":" In all cases, If execution is allowed to continue, the functions return -1 and set `errno` to `EINVAL`."},{"content":"Generic-Text Routine Mappings","pos":[4388,4417]},{"content":"Tchar.h routine","pos":[4424,4439]},{"content":"_UNICODE and _MBCS not defined","pos":[4440,4470]},{"content":"_MBCS defined","pos":[4471,4484]},{"content":"_UNICODE defined","pos":[4485,4501]},{"content":"Requirements","pos":[4745,4757]},{"content":"Routine","pos":[4764,4771]},{"content":"Required header","pos":[4772,4787]},{"pos":[4844,4845],"content":","},{"content":"conio.h&gt;","pos":[4862,4870],"source":"conio.h>"},{"pos":[4888,4889],"content":","},{"content":"conio.h&gt;","pos":[4908,4916],"source":"conio.h>"},{"pos":[4924,5022],"content":"For more compatibility information, see <bpt id=\"p1\">[</bpt>Compatibility<ept id=\"p1\">](../../c-runtime-library/compatibility.md)</ept>.","source":"For more compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md)."},{"content":"Libraries","pos":[5031,5040]},{"pos":[5044,5136],"content":"All versions of the <bpt id=\"p1\">[</bpt>C run-time libraries<ept id=\"p1\">](../../c-runtime-library/crt-library-features.md)</ept>.","source":"All versions of the [C run-time libraries](../../c-runtime-library/crt-library-features.md)."},{"content":"Example","pos":[5145,5152]},{"content":"Output","pos":[5617,5623]},{"content":"See Also","pos":[5674,5682]},{"content":"Console and Port I/O","pos":[5687,5707]},{"content":"_cscanf, _cscanf_l, _cwscanf, _cwscanf_l","pos":[5763,5803]},{"content":"fprintf_s, _fprintf_s_l, fwprintf_s, _fwprintf_s_l","pos":[5882,5932]},{"content":"printf_s, _printf_s_l, wprintf_s, _wprintf_s_l","pos":[6023,6069]},{"content":"sprintf_s, _sprintf_s_l, swprintf_s, _swprintf_s_l","pos":[6156,6206]},{"content":"vfprintf_s, _vfprintf_s_l, vfwprintf_s, _vfwprintf_s_l","pos":[6297,6351]},{"content":"Format Specification Syntax: printf and wprintf Functions","pos":[6446,6503]}],"content":"---\ntitle: \"_cprintf_s, _cprintf_s_l, _cwprintf_s, _cwprintf_s_l | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\napiname: \n  - \"_cwprintf_s_l\"\n  - \"_cprintf_s_l\"\n  - \"_cprintf_s\"\n  - \"_cwprintf_s\"\napilocation: \n  - \"msvcrt.dll\"\n  - \"msvcr80.dll\"\n  - \"msvcr90.dll\"\n  - \"msvcr100.dll\"\n  - \"msvcr100_clr0400.dll\"\n  - \"msvcr110.dll\"\n  - \"msvcr110_clr0400.dll\"\n  - \"msvcr120.dll\"\n  - \"msvcr120_clr0400.dll\"\n  - \"ucrtbase.dll\"\napitype: \"DLLExport\"\nf1_keywords: \n  - \"_cwprintf_s_l\"\n  - \"_cprintf_s\"\n  - \"cwprintf_s\"\n  - \"_cprintf_s_l\"\n  - \"cwprintf_s_l\"\n  - \"cprintf_s_l\"\n  - \"_tcprintf_s\"\n  - \"cprintf_s\"\n  - \"_cwprintf_s\"\n  - \"tcprintf_s\"\ndev_langs: \n  - \"C++\"\n  - \"C\"\nhelpviewer_keywords: \n  - \"tcprintf_s_l function\"\n  - \"_cprintf_s_l function\"\n  - \"_cwprintf_s_l function\"\n  - \"tcprintf_s function\"\n  - \"_tcprintf_s_l function\"\n  - \"_cwprintf_s function\"\n  - \"cwprintf_s function\"\n  - \"_cprintf_s function\"\n  - \"cprintf_s function\"\n  - \"_tcprintf_s function\"\n  - \"cprintf_s_l function\"\n  - \"cwprintf_s_l function\"\nms.assetid: c28504fe-0d20-4f06-8f97-ee33225922ad\ncaps.latest.revision: 26\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# _cprintf_s, _cprintf_s_l, _cwprintf_s, _cwprintf_s_l\nFormats and prints to the console. These versions of [_cprintf, _cprintf_l, _cwprintf, _cwprintf_l](../../c-runtime-library/reference/cprintf-cprintf-l-cwprintf-cwprintf-l.md) have security enhancements, as described in [Security Features in the CRT](../../c-runtime-library/security-features-in-the-crt.md).  \n  \n> [!IMPORTANT]\n>  This API cannot be used in applications that execute in the Windows Runtime. For more information, see [CRT functions not supported with /ZW](http://msdn.microsoft.com/library/windows/apps/jj606124.aspx).  \n  \n## Syntax  \n  \n```  \nint _cprintf_s(   \n   const char * format [,   \n   argument] ...   \n);  \nint _cprintf_s_l(   \n   const char * format,  \n   locale_t locale [,   \n   argument] ...   \n);  \nint _cwprintf_s(  \n   const wchar * format [,   \n   argument] ...  \n);  \nint _cwprintf_s_l(  \n   const wchar * format,  \n   locale_t locale [,   \n   argument] ...  \n);  \n```  \n  \n#### Parameters  \n `format`  \n Format-control string.  \n  \n `argument`  \n Optional parameters.  \n  \n `locale`  \n The locale to use.  \n  \n## Return Value  \n The number of characters printed.  \n  \n## Remarks  \n These functions format and print a series of characters and values directly to the console, using the `_putch` function (`_putwch` for `_cwprintf_s`) to output characters. Each `argument` (if any) is converted and output according to the corresponding format specification in `format`. The format has the same form and function as the `format` parameter for the [printf_s](../../c-runtime-library/format-specification-syntax-printf-and-wprintf-functions.md) function. Unlike the `fprintf_s`, `printf_s`, and `sprintf_s` functions, neither `_cprintf_s` nor `_cwprintf_s` translates line-feed characters into carriage return–line feed (CR-LF) combinations when output.  \n  \n An important distinction is that `_cwprintf_s` displays Unicode characters when used in Windows NT. Unlike `_cprintf_s`, `_cwprintf_s` uses the current console locale  \n  \n The versions of these functions with the `_l` suffix are identical except that they use the locale parameter passed in instead of the current locale.  \n  \n> [!IMPORTANT]\n>  Ensure that `format` is not a user-defined string.  \n  \n Like the non-secure versions (see [_cprintf, _cprintf_l, _cwprintf, _cwprintf_l](../../c-runtime-library/reference/cprintf-cprintf-l-cwprintf-cwprintf-l.md)), these functions validate their parameters and invoke the invalid parameter handler, as described in [Parameter Validation](../../c-runtime-library/parameter-validation.md), if `format` is a null pointer. These functions differ from the non-secure versions in that the format string itself is also validated. If there are any unknown or badly formed formatting specifiers, these functions invoke the invalid parameter handler. In all cases, If execution is allowed to continue, the functions return -1 and set `errno` to `EINVAL`.  \n  \n### Generic-Text Routine Mappings  \n  \n|Tchar.h routine|_UNICODE and _MBCS not defined|_MBCS defined|_UNICODE defined|  \n|---------------------|--------------------------------------|--------------------|-----------------------|  \n|`_tcprintf_s`|`_cprintf_s`|`_cprintf_s`|`_cwprintf_s`|  \n|`_tcprintf_s_l`|`_cprintf_s_l`|`_cprintf_s_l`|`_cwprintf_s_l`|  \n  \n## Requirements  \n  \n|Routine|Required header|  \n|-------------|---------------------|  \n|`_cprintf_s`,`_cprintf_s_l`|\\<conio.h>|  \n|`_cwprintf_s`, `_cwprintf_s_l`|\\<conio.h>|  \n  \n For more compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md).  \n  \n## Libraries  \n All versions of the [C run-time libraries](../../c-runtime-library/crt-library-features.md).  \n  \n## Example  \n  \n```  \n// crt_cprintf_s.c  \n// compile with: /c  \n// This program displays some variables to the console.  \n  \n#include <conio.h>  \n  \nint main( void )  \n{  \n   int      i = -16, h = 29;  \n   unsigned u = 62511;  \n   char     c = 'A';  \n   char     s[] = \"Test\";  \n  \n   /* Note that console output does not translate \\n as  \n    * standard output does. Use \\r\\n instead.  \n    */  \n   _cprintf_s( \"%d  %.4x  %u  %c %s\\r\\n\", i, h, u, c, s );  \n}  \n```  \n  \n## Output  \n  \n```  \n-16  001d  62511  A Test  \n```  \n  \n## See Also  \n [Console and Port I/O](../../c-runtime-library/console-and-port-i-o.md)   \n [_cscanf, _cscanf_l, _cwscanf, _cwscanf_l](../../c-runtime-library/reference/cscanf-cscanf-l-cwscanf-cwscanf-l.md)   \n [fprintf_s, _fprintf_s_l, fwprintf_s, _fwprintf_s_l](../../c-runtime-library/reference/fprintf-s-fprintf-s-l-fwprintf-s-fwprintf-s-l.md)   \n [printf_s, _printf_s_l, wprintf_s, _wprintf_s_l](../../c-runtime-library/reference/printf-s-printf-s-l-wprintf-s-wprintf-s-l.md)   \n [sprintf_s, _sprintf_s_l, swprintf_s, _swprintf_s_l](../../c-runtime-library/reference/sprintf-s-sprintf-s-l-swprintf-s-swprintf-s-l.md)   \n [vfprintf_s, _vfprintf_s_l, vfwprintf_s, _vfwprintf_s_l](../../c-runtime-library/reference/vfprintf-s-vfprintf-s-l-vfwprintf-s-vfwprintf-s-l.md)   \n [Format Specification Syntax: printf and wprintf Functions](../../c-runtime-library/format-specification-syntax-printf-and-wprintf-functions.md)"}