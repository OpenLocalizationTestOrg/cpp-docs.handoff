{"nodes":[{"pos":[12,75],"content":"Bessel Functions: _j0, _j1, _jn, _y0, _y1, _yn | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Bessel Functions: _j0, _j1, _jn, _y0, _y1, _yn | Microsoft Docs","pos":[0,63]}]},{"content":"Bessel Functions: _j0, _j1, _jn, _y0, _y1, _yn","pos":[1164,1210]},{"content":"Computes the Bessel function of the first or second kind, of orders 0, 1, or n.","pos":[1211,1290]},{"content":"The Bessel functions are commonly used in the mathematics of electromagnetic wave theory.","pos":[1291,1380]},{"content":"Syntax","pos":[1389,1395]},{"content":"Parameters","pos":[1655,1665]},{"content":"Floating-point value.","pos":[1676,1697]},{"content":"Integer order of Bessel function.","pos":[1711,1744]},{"content":"Return Value","pos":[1753,1765]},{"content":"Each of these routines returns a Bessel function of <ph id=\"ph1\">`x`</ph>.","pos":[1769,1825],"source":"Each of these routines returns a Bessel function of `x`."},{"content":"If <ph id=\"ph1\">`x`</ph> is negative in the <ph id=\"ph2\">`_y0`</ph>, <ph id=\"ph3\">`_y1`</ph>, or <ph id=\"ph4\">`_yn`</ph> functions, the routine sets <ph id=\"ph5\">`errno`</ph> to <ph id=\"ph6\">`EDOM`</ph>, prints a <ph id=\"ph7\">`_DOMAIN`</ph> error message to <ph id=\"ph8\">`stderr`</ph>, and returns <ph id=\"ph9\">`_HUGE_VAL`</ph>.","pos":[1826,1992],"source":" If `x` is negative in the `_y0`, `_y1`, or `_yn` functions, the routine sets `errno` to `EDOM`, prints a `_DOMAIN` error message to `stderr`, and returns `_HUGE_VAL`."},{"content":"You can modify error handling by using <ph id=\"ph1\">`_matherr`</ph>.","pos":[1993,2043],"source":" You can modify error handling by using `_matherr`."},{"content":"Remarks","pos":[2052,2059]},{"pos":[2063,2176],"content":"The <ph id=\"ph1\">`_j0`</ph>, <ph id=\"ph2\">`_j1`</ph>, and <ph id=\"ph3\">`_jn`</ph> routines return Bessel functions of the first kind: orders 0, 1, and n, respectively.","source":"The `_j0`, `_j1`, and `_jn` routines return Bessel functions of the first kind: orders 0, 1, and n, respectively."},{"content":"Input","pos":[2183,2188]},{"content":"SEH Exception","pos":[2189,2202]},{"content":"Matherr Exception","pos":[2203,2220]},{"pos":[2285,2294],"content":"± <ph id=\"ph1\">`QNAN`</ph>,","source":"± `QNAN`,"},{"pos":[2327,2441],"content":"The <ph id=\"ph1\">`_y0`</ph>, <ph id=\"ph2\">`_y1`</ph>, and <ph id=\"ph3\">`_yn`</ph> routines return Bessel functions of the second kind: orders 0, 1, and n, respectively.","source":"The `_y0`, `_y1`, and `_yn` routines return Bessel functions of the second kind: orders 0, 1, and n, respectively."},{"content":"Input","pos":[2448,2453]},{"content":"SEH Exception","pos":[2454,2467]},{"content":"Matherr Exception","pos":[2468,2485]},{"pos":[2550,2559],"content":"± <ph id=\"ph1\">`QNAN`</ph>,","source":"± `QNAN`,"},{"content":"± 0","pos":[2589,2592]},{"content":"&amp;#124;x&amp;#124;&lt;0.0","pos":[2618,2635],"source":"&#124;x&#124;<0.0"},{"content":"Requirements","pos":[2665,2677]},{"content":"Routine","pos":[2684,2691]},{"content":"Required header","pos":[2692,2707]},{"pos":[2757,2786],"content":", <ph id=\"ph1\">`_j1`</ph>, <ph id=\"ph2\">`_jn`</ph>, <ph id=\"ph3\">`_y0`</ph>, <ph id=\"ph4\">`_y1`</ph>,","source":", `_j1`, `_jn`, `_y0`, `_y1`, "},{"content":"cmath&gt; (C++), <ph id=\"ph1\">\\&lt;</ph>math.h&gt; (C, C++)","pos":[2795,2827],"source":"cmath> (C++), \\<math.h> (C, C++)"},{"pos":[2835,2959],"content":"For additional compatibility information, see <bpt id=\"p1\">[</bpt>Compatibility<ept id=\"p1\">](../../c-runtime-library/compatibility.md)</ept> in the Introduction.","source":"For additional compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md) in the Introduction."},{"content":"Example","pos":[2968,2975]},{"content":"See Also","pos":[4188,4196]},{"content":"Floating-Point Support","pos":[4201,4223]},{"content":"_matherr","pos":[4281,4289]}],"content":"---\ntitle: \"Bessel Functions: _j0, _j1, _jn, _y0, _y1, _yn | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\napiname: \n  - \"_j0\"\n  - \"_j1\"\n  - \"_jn\"\n  - \"_y0\"\n  - \"_y1\"\n  - \"_yn\"\napilocation: \n  - \"msvcrt.dll\"\n  - \"msvcr80.dll\"\n  - \"msvcr90.dll\"\n  - \"msvcr100.dll\"\n  - \"msvcr100_clr0400.dll\"\n  - \"msvcr110.dll\"\n  - \"msvcr110_clr0400.dll\"\n  - \"msvcr120.dll\"\n  - \"msvcr120_clr0400.dll\"\n  - \"ucrtbase.dll\"\n  - \"api-ms-win-crt-math-l1-1-0.dll\"\napitype: \"DLLExport\"\nf1_keywords: \n  - \"c.bessel\"\n  - \"_j0\"\n  - \"_j1\"\n  - \"_jn\"\n  - \"_y0\"\n  - \"_y1\"\n  - \"_yn\"\ndev_langs: \n  - \"C++\"\n  - \"C\"\nhelpviewer_keywords: \n  - \"Bessel functions\"\n  - \"_j0 function\"\n  - \"_j1 function\"\n  - \"_jn function\"\n  - \"_y0 function\"\n  - \"_y1 function\"\n  - \"_yn function\"\nms.assetid: a21a8bf1-df9d-4ba0-a8c2-e7ef71921d96\ncaps.latest.revision: 14\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Bessel Functions: _j0, _j1, _jn, _y0, _y1, _yn\nComputes the Bessel function of the first or second kind, of orders 0, 1, or n. The Bessel functions are commonly used in the mathematics of electromagnetic wave theory.  \n  \n## Syntax  \n  \n```  \ndouble _j0(   \n   double x   \n);  \ndouble _j1(   \n   double x   \n);  \ndouble _jn(   \n   int n,  \n   double x   \n);  \ndouble _y0(   \n   double x   \n);  \ndouble _y1(   \n   double x   \n);  \ndouble _yn(   \n   int n,  \n   double x   \n);  \n```  \n  \n#### Parameters  \n `x`  \n Floating-point value.  \n  \n `n`  \n Integer order of Bessel function.  \n  \n## Return Value  \n Each of these routines returns a Bessel function of `x`. If `x` is negative in the `_y0`, `_y1`, or `_yn` functions, the routine sets `errno` to `EDOM`, prints a `_DOMAIN` error message to `stderr`, and returns `_HUGE_VAL`. You can modify error handling by using `_matherr`.  \n  \n## Remarks  \n The `_j0`, `_j1`, and `_jn` routines return Bessel functions of the first kind: orders 0, 1, and n, respectively.  \n  \n|Input|SEH Exception|Matherr Exception|  \n|-----------|-------------------|-----------------------|  \n|± `QNAN`,`IND`|`INVALID`|`_DOMAIN`|  \n  \n The `_y0`, `_y1`, and `_yn` routines return Bessel functions of the second kind: orders 0, 1, and n, respectively.  \n  \n|Input|SEH Exception|Matherr Exception|  \n|-----------|-------------------|-----------------------|  \n|± `QNAN`,`IND`|`INVALID`|`_DOMAIN`|  \n|± 0|`ZERODIVIDE`|`_SING`|  \n|&#124;x&#124;<0.0|`INVALID`|`_DOMAIN`|  \n  \n## Requirements  \n  \n|Routine|Required header|  \n|-------------|---------------------|  \n|`_j0`, `_j1`, `_jn`, `_y0`, `_y1`, `_yn`|\\<cmath> (C++), \\<math.h> (C, C++)|  \n  \n For additional compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md) in the Introduction.  \n  \n## Example  \n  \n```  \n// crt_bessel1.c  \n#include <math.h>  \n#include <stdio.h>  \n  \nint main( void )  \n{  \n   double x = 2.387;  \n   int n = 3, c;  \n  \n   printf( \"Bessel functions for x = %f:\\n\", x );  \n   printf( \" Kind   Order  Function     Result\\n\\n\" );  \n   printf( \" First  0      _j0( x )     %f\\n\", _j0( x ) );  \n   printf( \" First  1      _j1( x )     %f\\n\", _j1( x ) );  \n   for( c = 2; c < 5; c++ )  \n      printf( \" First  %d      _jn( %d, x )  %f\\n\", c, c, _jn( c, x ) );  \n   printf( \" Second 0      _y0( x )     %f\\n\", _y0( x ) );  \n   printf( \" Second 1      _y1( x )     %f\\n\", _y1( x ) );  \n   for( c = 2; c < 5; c++ )  \n      printf( \" Second %d      _yn( %d, x )  %f\\n\", c, c, _yn( c, x ) );  \n}  \n```  \n  \n```Output  \nBessel functions for x = 2.387000:  \n Kind   Order  Function     Result  \n  \n First  0      _j0( x )     0.009288  \n First  1      _j1( x )     0.522941  \n First  2      _jn( 2, x )  0.428870  \n First  3      _jn( 3, x )  0.195734  \n First  4      _jn( 4, x )  0.063131  \n Second 0      _y0( x )     0.511681  \n Second 1      _y1( x )     0.094374  \n Second 2      _yn( 2, x )  -0.432608  \n Second 3      _yn( 3, x )  -0.819314  \n Second 4      _yn( 4, x )  -1.626833  \n```  \n  \n## See Also  \n [Floating-Point Support](../../c-runtime-library/floating-point-support.md)   \n [_matherr](../../c-runtime-library/reference/matherr.md)"}