{"nodes":[{"pos":[12,71],"content":"isupper, _isupper_l, iswupper, _iswupper_l | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"isupper, _isupper_l, iswupper, _iswupper_l | Microsoft Docs","pos":[0,59]}]},{"content":"isupper, _isupper_l, iswupper, _iswupper_l","pos":[1199,1241]},{"content":"Determines whether an integer represents an uppercase character.","pos":[1242,1306]},{"content":"Syntax","pos":[1315,1321]},{"content":"Parameters","pos":[1535,1545]},{"content":"Integer to test.","pos":[1556,1572]},{"content":"Locale to use.","pos":[1591,1605]},{"content":"Return Value","pos":[1614,1626]},{"content":"Each of these routines returns nonzero if <ph id=\"ph1\">`c`</ph> is a particular representation of an uppercase letter.","pos":[1630,1730],"source":"Each of these routines returns nonzero if `c` is a particular representation of an uppercase letter."},{"content":"returns a nonzero value if <ph id=\"ph1\">`c`</ph> is an uppercase character (A – Z).","pos":[1741,1806],"source":" returns a nonzero value if `c` is an uppercase character (A – Z)."},{"content":"returns a nonzero value if <ph id=\"ph1\">`c`</ph> is a wide character that corresponds to an uppercase letter, or if <ph id=\"ph2\">`c`</ph> is one of an implementation-defined set of wide characters for which none of <ph id=\"ph3\">`iswcntrl`</ph>, <ph id=\"ph4\">`iswdigit`</ph>, <ph id=\"ph5\">`iswpunct`</ph>, or <ph id=\"ph6\">`iswspace`</ph> is nonzero.","pos":[1818,2058],"source":" returns a nonzero value if `c` is a wide character that corresponds to an uppercase letter, or if `c` is one of an implementation-defined set of wide characters for which none of `iswcntrl`, `iswdigit`, `iswpunct`, or `iswspace` is nonzero."},{"content":"Each of these routines returns 0 if <ph id=\"ph1\">`c`</ph> does not satisfy the test condition.","pos":[2059,2135],"source":" Each of these routines returns 0 if `c` does not satisfy the test condition."},{"content":"The versions of these functions that have the <ph id=\"ph1\">`_l`</ph> suffix use the locale that's passed in instead of the current locale for their locale-dependent behavior.","pos":[2142,2298],"source":"The versions of these functions that have the `_l` suffix use the locale that's passed in instead of the current locale for their locale-dependent behavior."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Locale<ept id=\"p1\">](../../c-runtime-library/locale.md)</ept>.","pos":[2299,2369],"source":" For more information, see [Locale](../../c-runtime-library/locale.md)."},{"content":"The behavior of <ph id=\"ph1\">`isupper`</ph> and <ph id=\"ph2\">`_isupper_l`</ph> is undefined if <ph id=\"ph3\">`c`</ph> is not EOF or in the range 0 through 0xFF, inclusive.","pos":[2376,2492],"source":"The behavior of `isupper` and `_isupper_l` is undefined if `c` is not EOF or in the range 0 through 0xFF, inclusive."},{"content":"When a debug CRT library is used and <ph id=\"ph1\">`c`</ph> is not one of these values, the functions raise an assertion.","pos":[2493,2595],"source":" When a debug CRT library is used and `c` is not one of these values, the functions raise an assertion."},{"content":"Generic-Text Routine Mappings","pos":[2605,2634]},{"content":"TCHAR.H routine","pos":[2641,2656]},{"content":"_UNICODE &amp; _MBCS not defined","pos":[2657,2685],"source":"_UNICODE & _MBCS not defined"},{"content":"_MBCS defined","pos":[2686,2699]},{"content":"_UNICODE defined","pos":[2700,2716]},{"content":"_ismbcupper","pos":[2852,2863]},{"content":"_ismbclower, _ismbclower_l, _ismbcupper, _ismbcupper_l","pos":[2994,3048]},{"content":"Requirements","pos":[3159,3171]},{"content":"Routine","pos":[3178,3185]},{"content":"Required header","pos":[3186,3201]},{"content":"ctype.h&gt;","pos":[3258,3266],"source":"ctype.h>"},{"content":"ctype.h&gt;","pos":[3286,3294],"source":"ctype.h>"},{"content":"ctype.h&gt; or <ph id=\"ph1\">\\&lt;</ph>wchar.h&gt;","pos":[3312,3334],"source":"ctype.h> or \\<wchar.h>"},{"content":"ctype.h&gt;","pos":[3355,3363],"source":"ctype.h>"},{"pos":[3371,3475],"content":"For additional compatibility information, see <bpt id=\"p1\">[</bpt>Compatibility<ept id=\"p1\">](../../c-runtime-library/compatibility.md)</ept>.","source":"For additional compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md)."},{"content":".NET Framework Equivalent","pos":[3484,3509]},{"content":"System::Char::IsUpper","pos":[3514,3535]},{"content":"See Also","pos":[3612,3620]},{"content":"Character Classification","pos":[3625,3649]},{"content":"Locale","pos":[3709,3715]},{"content":"is, isw Routines","pos":[3757,3773]}],"content":"---\ntitle: \"isupper, _isupper_l, iswupper, _iswupper_l | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\napiname: \n  - \"isupper\"\n  - \"iswupper\"\n  - \"_iswupper_l\"\n  - \"_isupper_l\"\napilocation: \n  - \"msvcrt.dll\"\n  - \"msvcr80.dll\"\n  - \"msvcr90.dll\"\n  - \"msvcr100.dll\"\n  - \"msvcr100_clr0400.dll\"\n  - \"msvcr110.dll\"\n  - \"msvcr110_clr0400.dll\"\n  - \"msvcr120.dll\"\n  - \"msvcr120_clr0400.dll\"\n  - \"ucrtbase.dll\"\n  - \"api-ms-win-crt-string-l1-1-0.dll\"\napitype: \"DLLExport\"\nf1_keywords: \n  - \"isupper\"\n  - \"_istupper\"\n  - \"iswupper\"\ndev_langs: \n  - \"C++\"\n  - \"C\"\nhelpviewer_keywords: \n  - \"istupper function\"\n  - \"iswupper function\"\n  - \"isupper_l function\"\n  - \"_isupper_l function\"\n  - \"iswupper_l function\"\n  - \"_istupper function\"\n  - \"_iswupper_l function\"\n  - \"isupper function\"\nms.assetid: da2bcc9f-241c-48c0-9a0e-ad273827e16a\ncaps.latest.revision: 21\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# isupper, _isupper_l, iswupper, _iswupper_l\nDetermines whether an integer represents an uppercase character.  \n  \n## Syntax  \n  \n```  \nint isupper(  \n   int c   \n);  \nint _isupper_l (  \n   int c,  \n   _locale_t locale  \n);  \nint iswupper(  \n   wint_t c   \n);  \nint _iwsupper_l(  \n   wint_t c,  \n   _locale_t locale   \n);  \n```  \n  \n#### Parameters  \n `c`  \n Integer to test.  \n  \n `locale`  \n Locale to use.  \n  \n## Return Value  \n Each of these routines returns nonzero if `c` is a particular representation of an uppercase letter. `isupper` returns a nonzero value if `c` is an uppercase character (A – Z). `iswupper` returns a nonzero value if `c` is a wide character that corresponds to an uppercase letter, or if `c` is one of an implementation-defined set of wide characters for which none of `iswcntrl`, `iswdigit`, `iswpunct`, or `iswspace` is nonzero. Each of these routines returns 0 if `c` does not satisfy the test condition.  \n  \n The versions of these functions that have the `_l` suffix use the locale that's passed in instead of the current locale for their locale-dependent behavior. For more information, see [Locale](../../c-runtime-library/locale.md).  \n  \n The behavior of `isupper` and `_isupper_l` is undefined if `c` is not EOF or in the range 0 through 0xFF, inclusive. When a debug CRT library is used and `c` is not one of these values, the functions raise an assertion.  \n  \n### Generic-Text Routine Mappings  \n  \n|TCHAR.H routine|_UNICODE & _MBCS not defined|_MBCS defined|_UNICODE defined|  \n|---------------------|------------------------------------|--------------------|-----------------------|  \n|`_istupper`|`isupper`|[_ismbcupper](../../c-runtime-library/reference/ismbclower-ismbclower-l-ismbcupper-ismbcupper-l.md)|`iswupper`|  \n|`_istupper_l`|`_isupper_l`|[_ismbclower, _ismbclower_l, _ismbcupper, _ismbcupper_l](../../c-runtime-library/reference/ismbclower-ismbclower-l-ismbcupper-ismbcupper-l.md)|`_iswupper_l`|  \n  \n## Requirements  \n  \n|Routine|Required header|  \n|-------------|---------------------|  \n|`isupper`|\\<ctype.h>|  \n|`_isupper_l`|\\<ctype.h>|  \n|`iswupper`|\\<ctype.h> or \\<wchar.h>|  \n|`_iswupper_l`|\\<ctype.h>|  \n  \n For additional compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md).  \n  \n## .NET Framework Equivalent  \n [System::Char::IsUpper](https://msdn.microsoft.com/en-us/library/system.char.isupper.aspx)  \n  \n## See Also  \n [Character Classification](../../c-runtime-library/character-classification.md)   \n [Locale](../../c-runtime-library/locale.md)   \n [is, isw Routines](../../c-runtime-library/is-isw-routines.md)"}