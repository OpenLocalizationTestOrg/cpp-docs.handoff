{"nodes":[{"pos":[12,53],"content":"remquo, remquof, remquol | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"remquo, remquof, remquol | Microsoft Docs","pos":[0,41]}]},{"pos":[1037,1061],"content":"remquo, remquof, remquol","linkify":"remquo, remquof, remquol","nodes":[{"content":"remquo, remquof, remquol","pos":[0,24]}]},{"content":"Computes the remainder of two integer values, and stores an integer value with the sign and approximate magnitude of the quotient in a location that's specified in a parameter.","pos":[1062,1238]},{"pos":[1247,1253],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[1713,1723],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"The numerator.","pos":[1738,1752]},{"content":"The denominator.","pos":[1770,1786]},{"content":"A pointer to an integer to store a value that has the sign and approximate magnitude of the quotient.","pos":[1802,1903]},{"pos":[1912,1924],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"<ph id=\"ph1\">`remquo`</ph> returns the floating-point remainder of <ph id=\"ph2\">`x`</ph><ph id=\"ph3\"> / </ph><ph id=\"ph4\">`y`</ph>.","pos":[1928,1987],"source":"`remquo` returns the floating-point remainder of `x` / `y`."},{"content":"If the value of <ph id=\"ph1\">`y`</ph> is 0.0, <ph id=\"ph2\">`remquo`</ph> returns a quiet NaN.","pos":[1988,2045],"source":" If the value of `y` is 0.0, `remquo` returns a quiet NaN."},{"content":"For information about the representation of a quiet NaN by the <ph id=\"ph1\">`printf`</ph> family, see <bpt id=\"p1\">[</bpt>printf, _printf_l, wprintf, _wprintf_l<ept id=\"p1\">](../../c-runtime-library/reference/printf-printf-l-wprintf-wprintf-l.md)</ept>.","pos":[2046,2243],"source":" For information about the representation of a quiet NaN by the `printf` family, see [printf, _printf_l, wprintf, _wprintf_l](../../c-runtime-library/reference/printf-printf-l-wprintf-wprintf-l.md)."},{"pos":[2252,2259],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[2263,2501],"content":"The <ph id=\"ph1\">`remquo`</ph> function calculates the floating-point remainder <ph id=\"ph2\">`f`</ph> of <ph id=\"ph3\">`x`</ph><ph id=\"ph4\"> / </ph><ph id=\"ph5\">`y`</ph> such that <ph id=\"ph6\">`x`</ph><ph id=\"ph7\"> = </ph><ph id=\"ph8\">`i`</ph> <ph id=\"ph9\">`*`</ph> <ph id=\"ph10\">`y`</ph><ph id=\"ph11\"> + </ph><ph id=\"ph12\">`f`</ph>, where <ph id=\"ph13\">`i`</ph> is an integer, <ph id=\"ph14\">`f`</ph> has the same sign as <ph id=\"ph15\">`x`</ph>, and the absolute value of <ph id=\"ph16\">`f`</ph> is less than the absolute value of <ph id=\"ph17\">`y`</ph>.","source":"The `remquo` function calculates the floating-point remainder `f` of `x` / `y` such that `x` = `i` `*` `y` + `f`, where `i` is an integer, `f` has the same sign as `x`, and the absolute value of `f` is less than the absolute value of `y`."},{"content":"C++ allows overloading, so you can call overloads of <ph id=\"ph1\">`remquo`</ph> that take and return <ph id=\"ph2\">`float`</ph> or <ph id=\"ph3\">`long double`</ph> values.","pos":[2508,2623],"source":"C++ allows overloading, so you can call overloads of `remquo` that take and return `float` or `long double` values."},{"content":"In a C program, <ph id=\"ph1\">`remquo`</ph> always takes two doubles and returns a double.","pos":[2624,2695],"source":" In a C program, `remquo` always takes two doubles and returns a double."},{"pos":[2704,2716],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"content":"Function","pos":[2723,2731]},{"content":"Required header","pos":[2732,2747]},{"pos":[2793,2823],"content":"<ph id=\"ph1\">`remquo`</ph>, <ph id=\"ph2\">`remquof`</ph>, <ph id=\"ph3\">`remquol`</ph>","source":"`remquo`, `remquof`, `remquol`"},{"content":"<ph id=\"ph1\">\\&lt;</ph>math.h&gt;","pos":[2824,2833],"source":"\\<math.h>"},{"pos":[2841,2934],"content":"For compatibility information, see <bpt id=\"p1\">[</bpt>Compatibility<ept id=\"p1\">](../../c-runtime-library/compatibility.md)</ept>.","source":"For compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md)."},{"pos":[2943,2950],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[3429,3454],"content":".NET Framework Equivalent","linkify":".NET Framework Equivalent","nodes":[{"content":".NET Framework Equivalent","pos":[0,25]}]},{"pos":[3458,3560],"content":"<bpt id=\"p1\">[</bpt>System::Math::IEEERemainder<ept id=\"p1\">](https://msdn.microsoft.com/en-us/library/system.math.ieeeremainder.aspx)</ept>","source":"[System::Math::IEEERemainder](https://msdn.microsoft.com/en-us/library/system.math.ieeeremainder.aspx)"},{"pos":[3569,3577],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Floating-Point Support<ept id=\"p1\">](../../c-runtime-library/floating-point-support.md)</ept><ph id=\"ph1\"> </ph>","pos":[3581,3657],"source":"[Floating-Point Support](../../c-runtime-library/floating-point-support.md) "},{"content":"<bpt id=\"p1\"> [</bpt>ldiv, lldiv<ept id=\"p1\">](../../c-runtime-library/reference/ldiv-lldiv.md)</ept><ph id=\"ph1\"> </ph>","pos":[3660,3724],"source":" [ldiv, lldiv](../../c-runtime-library/reference/ldiv-lldiv.md) "},{"content":"<bpt id=\"p1\"> [</bpt>imaxdiv<ept id=\"p1\">](../../c-runtime-library/reference/imaxdiv.md)</ept><ph id=\"ph1\"> </ph>","pos":[3727,3784],"source":" [imaxdiv](../../c-runtime-library/reference/imaxdiv.md) "},{"content":"<bpt id=\"p1\"> [</bpt>fmod, fmodf<ept id=\"p1\">](../../c-runtime-library/reference/fmod-fmodf.md)</ept><ph id=\"ph1\"> </ph>","pos":[3787,3851],"source":" [fmod, fmodf](../../c-runtime-library/reference/fmod-fmodf.md) "},{"content":"<bpt id=\"p1\"> [</bpt>remainder, remainderf, remainderl<ept id=\"p1\">](../../c-runtime-library/reference/remainder-remainderf-remainderl.md)</ept>","pos":[3854,3960],"source":" [remainder, remainderf, remainderl](../../c-runtime-library/reference/remainder-remainderf-remainderl.md)"}],"content":"---\ntitle: \"remquo, remquof, remquol | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\napiname: \n  - \"remquof\"\n  - \"remquo\"\n  - \"remquol\"\napilocation: \n  - \"msvcrt.dll\"\n  - \"msvcr80.dll\"\n  - \"msvcr90.dll\"\n  - \"msvcr100.dll\"\n  - \"msvcr100_clr0400.dll\"\n  - \"msvcr110.dll\"\n  - \"msvcr110_clr0400.dll\"\n  - \"msvcr120.dll\"\n  - \"msvcr120_clr0400.dll\"\n  - \"ucrtbase.dll\"\n  - \"api-ms-win-crt-math-l1-1-0.dll\"\napitype: \"DLLExport\"\nf1_keywords: \n  - \"remquof\"\n  - \"remquol\"\n  - \"remquo\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"remquol function\"\n  - \"remquof function\"\n  - \"remquo function\"\nms.assetid: a1d3cb8b-8027-4cd3-8deb-04eb17f299fc\ncaps.latest.revision: 8\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"ru-ru\"\n  - \"zh-cn\"\n  - \"zh-tw\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"tr-tr\"\n---\n# remquo, remquof, remquol\nComputes the remainder of two integer values, and stores an integer value with the sign and approximate magnitude of the quotient in a location that's specified in a parameter.  \n  \n## Syntax  \n  \n```  \ndouble remquo(   \n   double numer,  \n   double denom,  \n   int* quo  \n);  \nfloat remquo(   \n   float numer,  \n   float denom,  \n   int* quo  \n); /* C++ only */  \nlong double remquo(   \n   long double numer,  \n   long double denom,  \n   int* quo  \n); /* C++ only */  \nfloat remquof(   \n   float numer,  \n   float denom,  \n   int* quo  \n);  \nlong double remquol(   \n   long double numer,  \n   long double denom,  \n   int* quo  \n);  \n  \n```  \n  \n#### Parameters  \n `numer`  \n The numerator.  \n  \n `denom`  \n The denominator.  \n  \n `quo`  \n A pointer to an integer to store a value that has the sign and approximate magnitude of the quotient.  \n  \n## Return Value  \n `remquo` returns the floating-point remainder of `x` / `y`. If the value of `y` is 0.0, `remquo` returns a quiet NaN. For information about the representation of a quiet NaN by the `printf` family, see [printf, _printf_l, wprintf, _wprintf_l](../../c-runtime-library/reference/printf-printf-l-wprintf-wprintf-l.md).  \n  \n## Remarks  \n The `remquo` function calculates the floating-point remainder `f` of `x` / `y` such that `x` = `i` `*` `y` + `f`, where `i` is an integer, `f` has the same sign as `x`, and the absolute value of `f` is less than the absolute value of `y`.  \n  \n C++ allows overloading, so you can call overloads of `remquo` that take and return `float` or `long double` values. In a C program, `remquo` always takes two doubles and returns a double.  \n  \n## Requirements  \n  \n|Function|Required header|  \n|--------------|---------------------|  \n|`remquo`, `remquof`, `remquol`|\\<math.h>|  \n  \n For compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md).  \n  \n## Example  \n  \n```c  \n// crt_remquo.c  \n// This program displays a floating-point remainder.  \n  \n#include <math.h>  \n#include <stdio.h>  \n  \nint main( void )  \n{  \n   double w = -10.0, x = 3.0, z;  \n   int quo = 0;  \n  \n   z = remquo(w, x, &quo);  \n   printf(\"The remainder of %.2f / %.2f is %f\\n\", w, x, z);  \n   printf(\"Approximate signed quotient is %d\\n\", quo);  \n}  \n```  \n  \n```Output  \nThe remainder of -10.00 / 3.00 is -1.000000  \nApproximate signed quotient is -3  \n```  \n  \n## .NET Framework Equivalent  \n [System::Math::IEEERemainder](https://msdn.microsoft.com/en-us/library/system.math.ieeeremainder.aspx)  \n  \n## See Also  \n [Floating-Point Support](../../c-runtime-library/floating-point-support.md)   \n [ldiv, lldiv](../../c-runtime-library/reference/ldiv-lldiv.md)   \n [imaxdiv](../../c-runtime-library/reference/imaxdiv.md)   \n [fmod, fmodf](../../c-runtime-library/reference/fmod-fmodf.md)   \n [remainder, remainderf, remainderl](../../c-runtime-library/reference/remainder-remainderf-remainderl.md)"}