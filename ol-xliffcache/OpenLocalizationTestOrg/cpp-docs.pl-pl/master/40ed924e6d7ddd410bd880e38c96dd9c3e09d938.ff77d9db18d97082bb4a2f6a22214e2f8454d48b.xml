{"nodes":[{"pos":[12,61],"content":"Compiler Warning (level 4) C4210 | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Compiler Warning (level 4) C4210 | Microsoft Docs","pos":[0,49]}]},{"content":"Compiler Warning (level 4) C4210","pos":[609,641]},{"content":"nonstandard extension used : function given file scope","pos":[642,696]},{"pos":[703,848],"content":"With the default Microsoft extensions (<bpt id=\"p1\">[</bpt>/Ze<ept id=\"p1\">](../../build/reference/za-ze-disable-language-extensions.md)</ept>), function declarations have file scope.","source":"With the default Microsoft extensions ([/Ze](../../build/reference/za-ze-disable-language-extensions.md)), function declarations have file scope."},{"content":"This extension can prevent your code from being portable to other compilers.","pos":[1104,1180]}],"content":"---\ntitle: \"Compiler Warning (level 4) C4210 | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"error-reference\"\nf1_keywords: \n  - \"C4210\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"C4210\"\nms.assetid: f8600adf-dfe2-4022-a37a-3d4997641dfd\ncaps.latest.revision: 7\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Compiler Warning (level 4) C4210\nnonstandard extension used : function given file scope  \n  \n With the default Microsoft extensions ([/Ze](../../build/reference/za-ze-disable-language-extensions.md)), function declarations have file scope.  \n  \n```  \n// C4210.c  \n// compile with: /W4 /c  \nvoid func1()  \n{  \n   extern int func2( double );   // C4210 expected  \n}  \n  \nint main()  \n{  \n   func2( 4 );   //  /Ze passes 4 as type double  \n}                //  /Za passes 4 as type int  \n```  \n  \n This extension can prevent your code from being portable to other compilers."}