<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="pl-pl">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-04506c2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8314288957fee08a16294a7c86343444a9d9d1d0</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\mfc\reference\csplitterwnd-class.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6a090af36d6be56b2ca671ffe87d36bccbde57ed</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f6e412bb744bb5e4e9285fda3939188d58759015</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>CSplitterWnd Class | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>CSplitterWnd Class</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Provides the functionality of a splitter window, which is a window that contains multiple panes.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Members</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Public Constructors</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>CSplitterWnd::CSplitterWnd</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Call to construct a <ph id="ph1">`CSplitterWnd`</ph> object.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Public Methods</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>CSplitterWnd::ActivateNext</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Performs the Next Pane or Previous Pane command.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>CSplitterWnd::CanActivateNext</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Checks to see if the Next Pane or Previous Pane command is currently possible.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>CSplitterWnd::Create</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Call to create a dynamic splitter window and attach it to the <ph id="ph1">`CSplitterWnd`</ph> object.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>CSplitterWnd::CreateScrollBarCtrl</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Creates a shared scroll bar control.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>CSplitterWnd::CreateStatic</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Call to create a static splitter window and attach it to the <ph id="ph1">`CSplitterWnd`</ph> object.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>CSplitterWnd::CreateView</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Call to create a pane in a splitter window.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>CSplitterWnd::DeleteColumn</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Deletes a column from the splitter window.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>CSplitterWnd::DeleteRow</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Deletes a row from the splitter window.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>CSplitterWnd::DeleteView</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Deletes a view from the splitter window.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>CSplitterWnd::DoKeyboardSplit</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Performs the keyboard split command, usually "Window Split."</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>CSplitterWnd::DoScroll</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Performs synchronized scrolling of split windows.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>CSplitterWnd::DoScrollBy</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Scrolls split windows by a given number of pixels.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>CSplitterWnd::GetActivePane</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Determines the active pane from the focus or active view in the frame.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>CSplitterWnd::GetColumnCount</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Returns the current pane column count.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>CSplitterWnd::GetColumnInfo</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Returns information on the specified column.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>CSplitterWnd::GetPane</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Returns the pane at the specified row and column.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>CSplitterWnd::GetRowCount</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Returns the current pane row count.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>CSplitterWnd::GetRowInfo</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Returns information on the specified row.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>CSplitterWnd::GetScrollStyle</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Returns the shared scroll-bar style.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>CSplitterWnd::IdFromRowCol</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Returns the child window ID of the pane at the specified row and column.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>CSplitterWnd::IsChildPane</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Call to determine whether the window is currently a child pane of this splitter window.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>CSplitterWnd::IsTracking</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Determines if splitter bar is currently being moved.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>CSplitterWnd::RecalcLayout</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Call to redisplay the splitter window after adjusting row or column size.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>CSplitterWnd::SetActivePane</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Sets a pane to be the active one in the frame.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>CSplitterWnd::SetColumnInfo</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Call to set the specified column information.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>CSplitterWnd::SetRowInfo</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Call to set the specified row information.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>CSplitterWnd::SetScrollStyle</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Specifies the new scroll-bar style for the splitter window's shared scroll-bar support.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>CSplitterWnd::SplitColumn</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Indicates where a frame window splits vertically.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>CSplitterWnd::SplitRow</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Indicates where a frame window splits horizontally.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Protected Methods</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>CSplitterWnd::OnDraw</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Called by the framework to draw the splitter window.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>CSplitterWnd::OnDrawSplitter</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Renders an image of a split window.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>CSplitterWnd::OnInvertTracker</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Renders the image of a split window to be the same size and shape as the frame window.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>A pane is usually an application-specific object derived from <bpt id="p1">[</bpt>CView<ept id="p1">](../../mfc/reference/cview-class.md)</ept>, but it can be any <bpt id="p2">[</bpt>CWnd<ept id="p2">](../../mfc/reference/cwnd-class.md)</ept> object that has the appropriate child window ID.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">`CSplitterWnd`</ph> object is usually embedded in a parent <bpt id="p1">[</bpt>CFrameWnd<ept id="p1">](../../mfc/reference/cframewnd-class.md)</ept> or <bpt id="p2">[</bpt>CMDIChildWnd<ept id="p2">](../../mfc/reference/cmdichildwnd-class.md)</ept> object.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Create a <ph id="ph1">`CSplitterWnd`</ph> object using the following steps:</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Embed a <ph id="ph1">`CSplitterWnd`</ph> member variable in the parent frame.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Override the parent frame's <bpt id="p1">[</bpt>CFrameWnd::OnCreateClient<ept id="p1">](../../mfc/reference/cframewnd-class.md#cframewnd__oncreateclient)</ept> member function.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>From within the overridden <ph id="ph1">`OnCreateClient`</ph>, call the <bpt id="p1">[</bpt>Create<ept id="p1">](#csplitterwnd__create)</ept> or <bpt id="p2">[</bpt>CreateStatic<ept id="p2">](#csplitterwnd__createstatic)</ept> member function of <ph id="ph2">`CSplitterWnd`</ph>.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Call the <bpt id="p1">**</bpt>Create<ept id="p1">**</ept> member function to create a dynamic splitter window.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>A dynamic splitter window typically is used to create and scroll a number of individual panes, or views, of the same document.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The framework automatically creates an initial pane for the splitter; then the framework creates, resizes, and disposes of additional panes as the user operates the splitter window's controls.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>When you call <bpt id="p1">**</bpt>Create<ept id="p1">**</ept>, you specify a minimum row height and column width that determine when the panes are too small to be fully displayed.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>After you call <bpt id="p1">**</bpt>Create<ept id="p1">**</ept>, you can adjust these minimums by calling the <bpt id="p2">[</bpt>SetColumnInfo<ept id="p2">](#csplitterwnd__setcolumninfo)</ept> and <bpt id="p3">[</bpt>SetRowInfo<ept id="p3">](#csplitterwnd__setrowinfo)</ept> member functions.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Also use the <ph id="ph1">`SetColumnInfo`</ph> and <ph id="ph2">`SetRowInfo`</ph> member functions to set an "ideal" width for a column and "ideal" height for a row.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>When the framework displays a splitter window, it first displays the parent frame, then the splitter window.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>The framework then lays out the panes in columns and rows according to their ideal dimensions, working from the upper-left to the lower-right corner of the splitter window's client area.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>All panes in a dynamic splitter window must be of the same class.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Familiar applications that support dynamic splitter windows include Microsoft Word and Microsoft Excel.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Use the <ph id="ph1">`CreateStatic`</ph> member function to create a static splitter window.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>The user can change only the size of the panes in a static splitter window, not their number or order.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>You must specifically create all the static splitter's panes when you create the static splitter.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Make sure you create all the panes before the parent frame's <ph id="ph1">`OnCreateClient`</ph> member function returns, or the framework will not display the window correctly.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`CreateStatic`</ph> member function automatically initializes a static splitter with a minimum row height and column width of 0.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>After you call <bpt id="p1">**</bpt>Create<ept id="p1">**</ept>, adjust these minimums by calling the <bpt id="p2">[</bpt>SetColumnInfo<ept id="p2">](#csplitterwnd__setcolumninfo)</ept> and <bpt id="p3">[</bpt>SetRowInfo<ept id="p3">](#csplitterwnd__setrowinfo)</ept> member functions.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Also use <ph id="ph1">`SetColumnInfo`</ph> and <ph id="ph2">`SetRowInfo`</ph> after you call <ph id="ph3">`CreateStatic`</ph> to indicate desired ideal pane dimensions.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>The individual panes of a static splitter often belong to different classes.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>For examples of static splitter windows, see the graphics editor and the Windows File Manager.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>A splitter window supports special scroll bars (apart from the scroll bars that panes may have).</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>These scroll bars are children of the <ph id="ph1">`CSplitterWnd`</ph> object and are shared with the panes.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>You create these special scroll bars when you create the splitter window.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>For example, a <ph id="ph1">`CSplitterWnd`</ph> that has one row, two columns, and the <bpt id="p1">**</bpt>WS_VSCROLL<ept id="p1">**</ept> style will display a vertical scroll bar that is shared by the two panes.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>When the user moves the scroll bar, <ph id="ph1">`WM_VSCROLL`</ph> messages are sent to both panes.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>When the panes set the scroll-bar position, the shared scroll bar is set.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>For further information on splitter windows, see:</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Technical Note 29</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Knowledge Base article Q262024: HOWTO: Use CPropertySheet as a Child of CSplitterWnd</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>For more information on how to create dynamic splitter windows, see:</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>MFC sample <bpt id="p1">[</bpt>Scribble<ept id="p1">](../../visual-cpp-samples.md)</ept></source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>MFC sample <bpt id="p1">[</bpt>VIEWEX<ept id="p1">](../../visual-cpp-samples.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>Inheritance Hierarchy</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>CObject</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>CCmdTarget</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>CWnd</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Requirements</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Header:<ept id="p1">**</ept> afxext.h</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>CSplitterWnd::ActivateNext</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>Called by the framework to perform the Next Pane or Previous Pane command.</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>Indicates which window to activate.</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>TRUE<ept id="p1">**</ept> for previous; <bpt id="p2">**</bpt>FALSE<ept id="p2">**</ept> for next.</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>This member function is a high level command that is used by the <bpt id="p1">[</bpt>CView<ept id="p1">](../../mfc/reference/cview-class.md)</ept> class to delegate to the <ph id="ph1">`CSplitterWnd`</ph> implementation.</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>CSplitterWnd::CanActivateNext</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>Called by the framework to check to see if the Next Pane or Previous Pane command is currently possible.</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>Indicates which window to activate.</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>TRUE<ept id="p1">**</ept> for previous; <bpt id="p2">**</bpt>FALSE<ept id="p2">**</ept> for next.</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>Nonzero if successful; otherwise 0.</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>This member function is a high level command that is used by the <bpt id="p1">[</bpt>CView<ept id="p1">](../../mfc/reference/cview-class.md)</ept> class to delegate to the <ph id="ph1">`CSplitterWnd`</ph> implementation.</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>CSplitterWnd::Create</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>To create a dynamic splitter window, call the <bpt id="p1">**</bpt>Create<ept id="p1">**</ept> member function.</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>The parent frame window of the splitter window.</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>nMaxRows</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>The maximum number of rows in the splitter window.</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>This value must not exceed 2.</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>nMaxCols</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>The maximum number of columns in the splitter window.</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>This value must not exceed 2.</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>Specifies the minimum size at which a pane may be displayed.</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>A pointer to a <bpt id="p1">[</bpt>CCreateContext<ept id="p1">](../../mfc/reference/ccreatecontext-structure.md)</ept> structure.</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>In most cases, this can be the <ph id="ph1">`pContext`</ph> passed to the parent frame window.</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>Specifies the window style.</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>The child window ID of the window.</source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>The ID can be <bpt id="p1">**</bpt>AFX_IDW_PANE_FIRST<ept id="p1">**</ept> unless the splitter window is nested inside another splitter window.</source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>Nonzero if successful; otherwise 0.</source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>You can embed a <ph id="ph1">`CSplitterWnd`</ph> in a parent <bpt id="p1">[</bpt>CFrameWnd<ept id="p1">](../../mfc/reference/cframewnd-class.md)</ept> or <bpt id="p2">[</bpt>CMDIChildWnd<ept id="p2">](../../mfc/reference/cmdichildwnd-class.md)</ept> object by taking the following steps:</source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>Embed a <ph id="ph1">`CSplitterWnd`</ph> member variable in the parent frame.</source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>Override the parent frame's <bpt id="p1">[</bpt>CFrameWnd::OnCreateClient<ept id="p1">](../../mfc/reference/cframewnd-class.md#cframewnd__oncreateclient)</ept> member function.</source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>Call the <bpt id="p1">**</bpt>Create<ept id="p1">**</ept> member function from within the overridden <ph id="ph1">`OnCreateClient`</ph>.</source>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>When you create a splitter window from within a parent frame, pass the parent frame's <ph id="ph1">`pContext`</ph> parameter to the splitter window.</source>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>Otherwise, this parameter can be <bpt id="p1">**</bpt>NULL<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>The initial minimum row height and column width of a dynamic splitter window are set by the <ph id="ph1">`sizeMin`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>These minimums, which determine whether a pane is too small to be shown in its entirety, can be changed with the <bpt id="p1">[</bpt>SetRowInfo<ept id="p1">](#csplitterwnd__setrowinfo)</ept> and <bpt id="p2">[</bpt>SetColumnInfo<ept id="p2">](#csplitterwnd__setcolumninfo)</ept> member functions.</source>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>For more on dynamic splitter windows, see "Splitter Windows" in the article <bpt id="p1">[</bpt>Multiple Document Types, Views, and Frame Windows<ept id="p1">](../../mfc/multiple-document-types-views-and-frame-windows.md)</ept>, <bpt id="p2">[</bpt>Technical Note 29<ept id="p2">](../../mfc/tn029-splitter-windows.md)</ept>, and the <bpt id="p3">[</bpt>CSplitterWnd<ept id="p3">](../../mfc/reference/csplitterwnd-class.md)</ept> class overview.</source>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>NVC_MFCWindowing#125</source>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>CSplitterWnd::CreateScrollBarCtrl</source>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>Called by the framework to create a shared scroll bar control.</source>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>Specifies the window style.</source>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>The child window ID of the window.</source>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>The ID can be <bpt id="p1">**</bpt>AFX_IDW_PANE_FIRST<ept id="p1">**</ept> unless the splitter window is nested inside another splitter window.</source>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>Nonzero if successful; otherwise 0.</source>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>Override <ph id="ph1">`CreateScrollBarCtrl`</ph> to include extra controls next to a scroll bar.</source>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>The default behavior is to create normal Windows scroll bar controls.</source>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>CSplitterWnd::CreateStatic</source>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>To create a static splitter window, call the <ph id="ph1">`CreateStatic`</ph> member function.</source>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>The parent frame window of the splitter window.</source>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>The number of rows.</source>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>This value must not exceed 16.</source>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>nCols</source>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>The number of columns.</source>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>This value must not exceed 16.</source>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>Specifies the window style.</source>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>The child window ID of the window.</source>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>The ID can be <bpt id="p1">**</bpt>AFX_IDW_PANE_FIRST<ept id="p1">**</ept> unless the splitter window is nested inside another splitter window.</source>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>Nonzero if successful; otherwise 0.</source>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">`CSplitterWnd`</ph> is usually embedded in a parent <ph id="ph2">`CFrameWnd`</ph> or <bpt id="p1">[</bpt>CMDIChildWnd<ept id="p1">](../../mfc/reference/cmdichildwnd-class.md)</ept> object by taking the following steps:</source>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>Embed a <ph id="ph1">`CSplitterWnd`</ph> member variable in the parent frame.</source>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>Override the parent frame's <ph id="ph1">`OnCreateClient`</ph> member function.</source>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>Call the <ph id="ph1">`CreateStatic`</ph> member function from within the overridden <bpt id="p1">[</bpt>CFrameWnd::OnCreateClient<ept id="p1">](../../mfc/reference/cframewnd-class.md#cframewnd__oncreateclient)</ept>.</source>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>A static splitter window contains a fixed number of panes, often from different classes.</source>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>When you create a static splitter window, you must at the same time create all its panes.</source>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>CreateView<ept id="p1">](#csplitterwnd__createview)</ept> member function is usually used for this purpose, but you can create other nonview classes as well.</source>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>The initial minimum row height and column width for a static splitter window is 0.</source>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>These minimums, which determine when a pane is too small to be shown in its entirety, can be changed with the <bpt id="p1">[</bpt>SetRowInfo<ept id="p1">](#csplitterwnd__setrowinfo)</ept> and <bpt id="p2">[</bpt>SetColumnInfo<ept id="p2">](#csplitterwnd__setcolumninfo)</ept> member functions.</source>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>To add scroll bars to a static splitter window, add the <bpt id="p1">**</bpt>WS_HSCROLL<ept id="p1">**</ept> and <bpt id="p2">**</bpt>WS_VSCROLL<ept id="p2">**</ept> styles to <ph id="ph1">`dwStyle`</ph>.</source>
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>See "Splitter Windows" in the article <bpt id="p1">[</bpt>Multiple Document Types, Views, and Frame Windows<ept id="p1">](../../mfc/multiple-document-types-views-and-frame-windows.md)</ept>, <bpt id="p2">[</bpt>Technical Note 29<ept id="p2">](../../mfc/tn029-splitter-windows.md)</ept>, and the <bpt id="p3">[</bpt>CSplitterWnd<ept id="p3">](../../mfc/reference/csplitterwnd-class.md)</ept> class overview for more on static splitter windows.</source>
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>CSplitterWnd::CreateView</source>
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>Creates the panes for a static splitter window.</source>
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>Specifies the splitter window row in which to place the new view.</source>
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>Specifies the splitter window column in which to place the new view.</source>
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>Specifies the <bpt id="p1">[</bpt>CRuntimeClass<ept id="p1">](../../mfc/reference/cruntimeclass-structure.md)</ept> of the new view.</source>
        </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>sizeInit</source>
        </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>Specifies the initial size of the new view.</source>
        </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>A pointer to a creation context used to create the view (usually the <ph id="ph1">`pContext`</ph> passed into the parent frame's overridden <bpt id="p1">[</bpt>CFrameWnd::OnCreateClient<ept id="p1">](../../mfc/reference/cframewnd-class.md#cframewnd__oncreateclient)</ept> member function in which the splitter window is being created).</source>
        </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>Nonzero if successful; otherwise 0.</source>
        </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>All panes of a static splitter window must be created before the framework displays the splitter.</source>
        </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>The framework also calls this member function to create new panes when the user of a dynamic splitter window splits a pane, row, or column.</source>
        </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>NVC_MFCWindowing#4</source>
        </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>CSplitterWnd::CSplitterWnd</source>
        </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>Call to construct a <ph id="ph1">`CSplitterWnd`</ph> object.</source>
        </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>Construct a <ph id="ph1">`CSplitterWnd`</ph> object in two steps.</source>
        </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>First, call the constructor, which creates the <ph id="ph1">`CSplitterWnd`</ph> object, and then call the <bpt id="p1">[</bpt>Create<ept id="p1">](#csplitterwnd__create)</ept> member function, which creates the splitter window and attaches it to the <ph id="ph2">`CSplitterWnd`</ph> object.</source>
        </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>CSplitterWnd::DeleteColumn</source>
        </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>Deletes a column from the splitter window.</source>
        </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>colDelete</source>
        </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>Specifies the column to be deleted.</source>
        </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source>This member function is called by the framework to implement the logic of the dynamic splitter window (that is, if the splitter window has the <bpt id="p1">**</bpt>SPLS_DYNAMIC_SPLIT<ept id="p1">**</ept> style).</source>
        </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>It can be customized, along with the virtual function <bpt id="p1">[</bpt>CreateView<ept id="p1">](#csplitterwnd__createview)</ept>, to implement more advanced dynamic splitters.</source>
        </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>CSplitterWnd::DeleteRow</source>
        </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>Deletes a row from the splitter window.</source>
        </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>rowDelete</source>
        </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>Specifies the row to be deleted.</source>
        </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source>This member function is called by the framework to implement the logic of the dynamic splitter window (that is, if the splitter window has the <bpt id="p1">**</bpt>SPLS_DYNAMIC_SPLIT<ept id="p1">**</ept> style).</source>
        </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>It can be customized, along with the virtual function <bpt id="p1">[</bpt>CreateView<ept id="p1">](#csplitterwnd__createview)</ept>, to implement more advanced dynamic splitters.</source>
        </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>CSplitterWnd::DeleteView</source>
        </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>Deletes a view from the splitter window.</source>
        </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source>Specifies the splitter window row at which to delete the view.</source>
        </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source>Specifies the splitter window column at which to delete the view.</source>
        </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source>If the active view is being deleted, the next view will become active.</source>
        </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source>The default implementation assumes the view will auto delete in <bpt id="p1">[</bpt>PostNcDestroy<ept id="p1">](../../mfc/reference/cwnd-class.md#cwnd__postncdestroy)</ept>.</source>
        </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source>This member function is called by the framework to implement the logic of the dynamic splitter window (that is, if the splitter window has the <bpt id="p1">**</bpt>SPLS_DYNAMIC_SPLIT<ept id="p1">**</ept> style).</source>
        </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source>It can be customized, along with the virtual function <bpt id="p1">[</bpt>CreateView<ept id="p1">](#csplitterwnd__createview)</ept>, to implement more advanced dynamic splitters.</source>
        </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source>CSplitterWnd::DoKeyboardSplit</source>
        </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source>Performs the keyboard split command, usually "Window Split."</source>
        </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source>Nonzero if successful; otherwise 0.</source>
        </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve">
          <source>This member function is a high level command that is used by the <bpt id="p1">[</bpt>CView<ept id="p1">](../../mfc/reference/cview-class.md)</ept> class to delegate to the <ph id="ph1">`CSplitterWnd`</ph> implementation.</source>
        </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve">
          <source>CSplitterWnd::DoScroll</source>
        </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve">
          <source>Performs synchronized scrolling of split windows.</source>
        </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve">
          <source>A pointer to the view from which the scrolling message originates.</source>
        </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve">
          <source>A scroll-bar code that indicates the user's scrolling request.</source>
        </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve">
          <source>This parameter is composed of two parts: a low-order byte, which determines the type of scrolling occurring horizontally, and a high-order byte, which determines the type of scrolling occurring vertically:</source>
        </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>SB_BOTTOM<ept id="p1">**</ept> Scrolls to bottom.</source>
        </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>SB_LINEDOWN<ept id="p1">**</ept> Scrolls one line down.</source>
        </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>SB_LINEUP<ept id="p1">**</ept> Scrolls one line up.</source>
        </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>SB_PAGEDOWN<ept id="p1">**</ept> Scrolls one page down.</source>
        </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>SB_PAGEUP<ept id="p1">**</ept> Scrolls one page up.</source>
        </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>SB_TOP<ept id="p1">**</ept> Scrolls to top.</source>
        </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve">
          <source>Determines whether the specified scrolling action occurs.</source>
        </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`bDoScroll`</ph> is <bpt id="p1">**</bpt>TRUE<ept id="p1">**</ept> (that is, if a child window exists, and if the split windows have a scroll range), then the specified scrolling action can take place; if <ph id="ph2">`bDoScroll`</ph> is <bpt id="p2">**</bpt>FALSE<ept id="p2">**</ept> (that is, if no child window exists, or the split views have no scroll range), then scrolling does not occur.</source>
        </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve">
          <source>Nonzero if synchronized scrolling occurs; otherwise 0.</source>
        </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve">
          <source>This member function is called by the framework to perform synchronized scrolling of split windows when the view receives a scroll message.</source>
        </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve">
          <source>Override to require an action by the user before synchronized scrolling is allowed.</source>
        </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve">
          <source>CSplitterWnd::DoScrollBy</source>
        </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve">
          <source>Scrolls split windows by a given number of pixels.</source>
        </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve">
          <source>A pointer to the view from which the scrolling message originates.</source>
        </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve">
          <source>Number of pixels to be scrolled horizontally and vertically.</source>
        </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve">
          <source>bDoScroll</source>
        </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve">
          <source>Determines whether the specified scrolling action occurs.</source>
        </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`bDoScroll`</ph> is <bpt id="p1">**</bpt>TRUE<ept id="p1">**</ept> (that is, if a child window exists, and if the split windows have a scroll range), then the specified scrolling action can take place; if <ph id="ph2">`bDoScroll`</ph> is <bpt id="p2">**</bpt>FALSE<ept id="p2">**</ept> (that is, if no child window exists, or the split views have no scroll range), then scrolling does not occur.</source>
        </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve">
          <source>Nonzero if synchronized scrolling occurs; otherwise 0.</source>
        </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve">
          <source>This member function is called by the framework in response to a scroll message, to perform synchronized scrolling of the split windows by the amount, in pixels, indicated by <ph id="ph1">`sizeScroll`</ph>.</source>
        </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve">
          <source>Positive values indicate scrolling down and to the right; negative values indicate scrolling up and to the left.</source>
        </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve">
          <source>Override to require an action by the user before allowing scroll.</source>
        </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve">
          <source>CSplitterWnd::GetActivePane</source>
        </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve">
          <source>Determines the active pane from the focus or active view in the frame.</source>
        </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve">
          <source>A pointer to an <bpt id="p1">**</bpt>int<ept id="p1">**</ept> to retrieve the row number of the active pane.</source>
        </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve">
          <source>A pointer to an <bpt id="p1">**</bpt>int<ept id="p1">**</ept> to retrieve the column number of the active pane.</source>
        </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve">
          <source>Pointer to the active pane.</source>
        </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>NULL<ept id="p1">**</ept> if no active pane exists.</source>
        </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve">
          <source>This member function is called by the framework to determine the active pane in a splitter window.</source>
        </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve">
          <source>Override to require an action by the user before getting the active pane.</source>
        </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve">
          <source>CSplitterWnd::GetColumnCount</source>
        </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve">
          <source>Returns the current pane column count.</source>
        </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve">
          <source>Returns the current number of columns in the splitter.</source>
        </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve">
          <source>For a static splitter, this will also be the maximum number of columns.</source>
        </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve">
          <source>CSplitterWnd::GetColumnInfo</source>
        </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve">
          <source>Returns information on the specified column.</source>
        </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve">
          <source>Specifies a column.</source>
        </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve">
          <source>cxCur</source>
        </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve">
          <source>A reference to an <ph id="ph1">`int`</ph> to be set to the current width of the column.</source>
        </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve">
          <source>A reference to an <ph id="ph1">`int`</ph> to be set to the current minimum width of the column.</source>
        </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve">
          <source>CSplitterWnd::GetPane</source>
        </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve">
          <source>Returns the pane at the specified row and column.</source>
        </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve">
          <source>Specifies a row.</source>
        </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve">
          <source>Specifies a column.</source>
        </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve">
          <source>Returns the pane at the specified row and column.</source>
        </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve">
          <source>The returned pane is usually a <bpt id="p1">[</bpt>CView<ept id="p1">](../../mfc/reference/cview-class.md)</ept>-derived class.</source>
        </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve">
          <source>CSplitterWnd::GetRowCount</source>
        </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve">
          <source>Returns the current pane row count.</source>
        </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve">
          <source>Returns the current number of rows in the splitter window.</source>
        </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve">
          <source>For a static splitter window, this will also be the maximum number of rows.</source>
        </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve">
          <source>CSplitterWnd::GetRowInfo</source>
        </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve">
          <source>Returns information on the specified row.</source>
        </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve">
          <source>Specifies a row.</source>
        </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve">
          <source>Reference to <ph id="ph1">`int`</ph> to be set to the current height of the row in pixels.</source>
        </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve">
          <source>Reference to <ph id="ph1">`int`</ph> to be set to the current minimum height of the row in pixels.</source>
        </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve">
          <source>Call this member function to obtain information about the specified row.</source>
        </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`cyCur`</ph> parameter is filled with the current height of the specified row, and <ph id="ph2">`cyMin`</ph> is filled with the minimum height of the row.</source>
        </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve">
          <source>CSplitterWnd::GetScrollStyle</source>
        </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve">
          <source>Returns the shared scroll-bar style for the splitter window.</source>
        </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve">
          <source>One or more of the following windows style flags, if successful:</source>
        </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>WS_HSCROLL<ept id="p1">**</ept> If the splitter currently manages shared horizontal scroll bars.</source>
        </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>WS_VSCROLL<ept id="p1">**</ept> If the splitter currently manages shared vertical scroll bars.</source>
        </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve">
          <source>If zero, the splitter window does not currently manage any shared scroll bars.</source>
        </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve">
          <source>CSplitterWnd::IdFromRowCol</source>
        </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve">
          <source>Obtains the child window ID for the pane at the specified row and column.</source>
        </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve">
          <source>Specifies the splitter window row.</source>
        </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve">
          <source>Specifies the splitter window column.</source>
        </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve">
          <source>The child window ID for the pane.</source>
        </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve">
          <source>This member function is used for creating nonviews as panes and may be called before the pane exists.</source>
        </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve">
          <source>NVC_MFCWindowing#5</source>
        </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve">
          <source>CSplitterWnd::IsChildPane</source>
        </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve">
          <source>Determines whether <ph id="ph1">`pWnd`</ph> is currently a child pane of this splitter window.</source>
        </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve">
          <source>A pointer to a <bpt id="p1">[</bpt>CWnd<ept id="p1">](../../mfc/reference/cwnd-class.md)</ept> object to be tested.</source>
        </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve">
          <source>A pointer to an <ph id="ph1">`int`</ph> in which to store row number.</source>
        </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve">
          <source>A pointer to an <ph id="ph1">`int`</ph> in which to store a column number.</source>
        </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve">
          <source>If nonzero, <ph id="ph1">`pWnd`</ph> is currently a child pane of this splitter window, and <ph id="ph2">`pRow`</ph> and <ph id="ph3">`pCol`</ph> are filled in with the position of the pane in the splitter window.</source>
        </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`pWnd`</ph> is not a child pane of this splitter window, 0 is returned.</source>
        </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve">
          <source>In Visual C++ versions prior to 6.0, this function was defined as</source>
        </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve">
          <source>This version is now obsolete and should not be used.</source>
        </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve">
          <source>CSplitterWnd::IsTracking</source>
        </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve">
          <source>Call this member function to determine if the splitter bar in the window is currently being moved.</source>
        </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve">
          <source>Nonzero if a splitter operation is in progress; otherwise 0.</source>
        </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve">
          <source>CSplitterWnd::OnDrawSplitter</source>
        </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve">
          <source>Renders an image of a split window.</source>
        </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve">
          <source>A pointer to the device context in which to draw.</source>
        </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`pDC`</ph> is <bpt id="p1">**</bpt>NULL<ept id="p1">**</ept>, then <bpt id="p2">[</bpt>CWnd::RedrawWindow<ept id="p2">](../../mfc/reference/cwnd-class.md#cwnd__redrawwindow)</ept> is called by the framework and no split window is drawn.</source>
        </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve">
          <source>A value of the <bpt id="p1">**</bpt>enum ESplitType<ept id="p1">**</ept>, which can be one of the following:</source>
        </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>splitBox<ept id="p1">**</ept> The splitter drag box.</source>
        </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve">
          <source>The bar that appears between the two split windows.</source>
        </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>splitIntersection<ept id="p1">**</ept> The intersection of the split windows.</source>
        </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve">
          <source>This element will not be called when running on Windows 95/98.</source>
        </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>splitBorder<ept id="p1">**</ept> The split window borders.</source>
        </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve">
          <source>A reference to a <bpt id="p1">[</bpt>CRect<ept id="p1">](../../atl-mfc-shared/reference/crect-class.md)</ept> object specifying the size and shape of the split windows.</source>
        </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve">
          <source>This member function is called by the framework to draw and specify the exact characteristics of a splitter window.</source>
        </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve">
          <source>Override <ph id="ph1">`OnDrawSplitter`</ph> for advanced customization of the imagery for the various graphical components of a splitter window.</source>
        </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve">
          <source>The default imagery is similar to the splitter in Microsoft Works for Windows or Microsoft Windows 95/98, in that the intersections of the splitter bars are blended together.</source>
        </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve">
          <source>For more on dynamic splitter windows, see "Splitter Windows" in the article <bpt id="p1">[</bpt>Multiple Document Types, Views, and Frame Windows<ept id="p1">](../../mfc/multiple-document-types-views-and-frame-windows.md)</ept>, <bpt id="p2">[</bpt>Technical Note 29<ept id="p2">](../../mfc/tn029-splitter-windows.md)</ept>, and the <bpt id="p3">[</bpt>CSplitterWnd<ept id="p3">](../../mfc/reference/csplitterwnd-class.md)</ept> class overview.</source>
        </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve">
          <source>CSplitterWnd::OnInvertTracker</source>
        </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve">
          <source>Renders the image of a split window to be the same size and shape as the frame window.</source>
        </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve">
          <source>Reference to a <ph id="ph1">`CRect`</ph> object specifying the tracking rectangle.</source>
        </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve">
          <source>This member function is called by the framework during resizing of splitters.</source>
        </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve">
          <source>Override <ph id="ph1">`OnInvertTracker`</ph> for advanced customization of the imagery of the splitter window.</source>
        </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve">
          <source>The default imagery is similar to the splitter in Microsoft Works for Windows or Microsoft Windows 95/98, in that the intersections of the splitter bars are blended together.</source>
        </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve">
          <source>For more on dynamic splitter windows, see "Splitter Windows" in the article <bpt id="p1">[</bpt>Multiple Document Types, Views, and Frame Windows<ept id="p1">](../../mfc/multiple-document-types-views-and-frame-windows.md)</ept>, <bpt id="p2">[</bpt>Technical Note 29<ept id="p2">](../../mfc/tn029-splitter-windows.md)</ept>, and the <bpt id="p3">[</bpt>CSplitterWnd<ept id="p3">](../../mfc/reference/csplitterwnd-class.md)</ept> class overview.</source>
        </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve">
          <source>CSplitterWnd::RecalcLayout</source>
        </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve">
          <source>Call to redisplay the splitter window after adjusting row or column size.</source>
        </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve">
          <source>Call this member function to correctly redisplay the splitter window after you have adjusted row and column sizes with the <bpt id="p1">[</bpt>SetRowInfo<ept id="p1">](#csplitterwnd__setrowinfo)</ept> and <bpt id="p2">[</bpt>SetColumnInfo<ept id="p2">](#csplitterwnd__setcolumninfo)</ept> member functions.</source>
        </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve">
          <source>If you change row and column sizes as part of the creation process before the splitter window is visible, it is not necessary to call this member function.</source>
        </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve">
          <source>The framework calls this member function whenever the user resizes the splitter window or moves a split.</source>
        </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve">
          <source>See the example for <bpt id="p1">[</bpt>CSplitterWnd::SetColumnInfo<ept id="p1">](#csplitterwnd__setcolumninfo)</ept>.</source>
        </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve">
          <source>CSplitterWnd::SetActivePane</source>
        </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve">
          <source>Sets a pane to be the active one in the frame.</source>
        </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`pWnd`</ph> is <bpt id="p1">**</bpt>NULL<ept id="p1">**</ept>, specifies the row in the pane that will be active.</source>
        </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`pWnd`</ph> is <bpt id="p1">**</bpt>NULL<ept id="p1">**</ept>, specifies the column in the pane that will be active.</source>
        </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve">
          <source>A pointer to a <ph id="ph1">`CWnd`</ph> object.</source>
        </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">**</bpt>NULL<ept id="p1">**</ept>, the pane specified by <ph id="ph1">`row`</ph> and <ph id="ph2">`col`</ph> is set active.</source>
        </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve">
          <source>If not <bpt id="p1">**</bpt>NULL<ept id="p1">**</ept>, specifies the pane that is set active.</source>
        </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve">
          <source>This member function is called by the framework to set a pane as active when the user changes the focus to a pane within the frame window.</source>
        </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve">
          <source>You can explicitly call <ph id="ph1">`SetActivePane`</ph> to change the focus to the specified view.</source>
        </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve">
          <source>Specify pane by providing either row and column, <bpt id="p1">**</bpt>or<ept id="p1">**</ept> by providing <ph id="ph1">`pWnd`</ph>.</source>
        </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve">
          <source>CSplitterWnd::SetColumnInfo</source>
        </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve">
          <source>Call to set the specified column information.</source>
        </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve">
          <source>Specifies a splitter window column.</source>
        </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve">
          <source>cxIdeal</source>
        </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve">
          <source>Specifies an ideal width for the splitter window column in pixels.</source>
        </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve">
          <source>Specifies a minimum width for the splitter window column in pixels.</source>
        </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve">
          <source>Call this member function to set a new minimum width and ideal width for a column.</source>
        </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve">
          <source>The column minimum value determines when the column will be too small to be fully displayed.</source>
        </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve">
          <source>When the framework displays the splitter window, it lays out the panes in columns and rows according to their ideal dimensions, working from the upper-left to the lower-right corner of the splitter window's client area.</source>
        </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve">
          <source>NVC_MFCWindowing#6</source>
        </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve">
          <source>CSplitterWnd::SetRowInfo</source>
        </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve">
          <source>Call to set the specified row information.</source>
        </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve">
          <source>Specifies a splitter window row.</source>
        </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve">
          <source>cyIdeal</source>
        </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve">
          <source>Specifies an ideal height for the splitter window row in pixels.</source>
        </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve">
          <source>Specifies a minimum height for the splitter window row in pixels.</source>
        </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve">
          <source>Call this member function to set a new minimum height and ideal height for a row.</source>
        </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve">
          <source>The row minimum value determines when the row will be too small to be fully displayed.</source>
        </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve">
          <source>When the framework displays the splitter window, it lays out the panes in columns and rows according to their ideal dimensions, working from the upper-left to the lower-right corner of the splitter window's client area.</source>
        </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve">
          <source>CSplitterWnd::SetScrollStyle</source>
        </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve">
          <source>Specifies the new scroll style for the splitter window's shared scroll-bar support.</source>
        </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve">
          <source>The new scroll style for the splitter window's shared scroll-bar support, which can be one of the following values:</source>
        </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>WS_HSCROLL<ept id="p1">**</ept> Create/show horizontal shared scroll bars.</source>
        </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>WS_VSCROLL<ept id="p1">**</ept> Create/show vertical shared scroll bars.</source>
        </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve">
          <source>Once a scroll bar is created it will not be destroyed even if <ph id="ph1">`SetScrollStyle`</ph> is called without that style; instead those scroll bars are hidden.</source>
        </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve">
          <source>This allows the scroll bars to retain their state even though they are hidden.</source>
        </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve">
          <source>After calling <ph id="ph1">`SetScrollStyle`</ph> it is necessary to call <bpt id="p1">[</bpt>RecalcLayout<ept id="p1">](#csplitterwnd__recalclayout)</ept> for all the changes to take effect.</source>
        </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve">
          <source>CSplitterWnd::SplitColumn</source>
        </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve">
          <source>Indicates where a frame window splits vertically.</source>
        </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve">
          <source>cxBefore</source>
        </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve">
          <source>The position, in pixels, before which the split occurs.</source>
        </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve">
          <source>Nonzero if successful; otherwise 0.</source>
        </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve">
          <source>This member function is called when a vertical splitter window is created.</source>
        </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve">
          <source>indicates the default location where the split occurs.</source>
        </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve">
          <source>is called by the framework to implement the logic of the dynamic splitter window (that is, if the splitter window has the <bpt id="p1">**</bpt>SPLS_DYNAMIC_SPLIT<ept id="p1">**</ept> style).</source>
        </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve">
          <source>It can be customized, along with the virtual function <bpt id="p1">[</bpt>CreateView<ept id="p1">](#csplitterwnd__createview)</ept>, to implement more advanced dynamic splitters.</source>
        </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve">
          <source>CSplitterWnd::SplitRow</source>
        </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve">
          <source>Indicates where a frame window splits horizontally.</source>
        </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve">
          <source>cyBefore</source>
        </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve">
          <source>The position, in pixels, before which the split occurs.</source>
        </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve">
          <source>Nonzero if successful; otherwise 0.</source>
        </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve">
          <source>This member function is called when a horizontal splitter window is created.</source>
        </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve">
          <source>indicates the default location where the split occurs.</source>
        </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve">
          <source>is called by the framework to implement the logic of the dynamic splitter window (that is, if the splitter window has the <bpt id="p1">**</bpt>SPLS_DYNAMIC_SPLIT<ept id="p1">**</ept> style).</source>
        </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve">
          <source>It can be customized, along with the virtual function <bpt id="p1">[</bpt>CreateView<ept id="p1">](#csplitterwnd__createview)</ept>, to implement more advanced dynamic splitters.</source>
        </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve">
          <source>CSplitterWnd::OnDraw</source>
        </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve">
          <source>Called by the framework to draw the splitter window.</source>
        </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve">
          <source>A pointer to a device context.</source>
        </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve">
          <source>MFC Sample VIEWEX</source>
        </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve">
          <source>CWnd Class</source>
        </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve">
          <source>Hierarchy Chart</source>
        </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve">
          <source>CView Class</source>
        </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve">
          <source>CWnd Class</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>