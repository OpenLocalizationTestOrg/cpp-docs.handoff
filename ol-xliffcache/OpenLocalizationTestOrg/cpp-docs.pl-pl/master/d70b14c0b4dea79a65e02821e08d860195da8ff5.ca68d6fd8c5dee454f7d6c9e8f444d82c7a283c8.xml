{"nodes":[{"pos":[12,49],"content":"Compiler Error C3855 | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Compiler Error C3855 | Microsoft Docs","pos":[0,37]}]},{"pos":[597,617],"content":"Compiler Error C3855","linkify":"Compiler Error C3855","nodes":[{"content":"Compiler Error C3855","pos":[0,20]}]},{"content":"'class': type parameter 'param' is incompatible with the declaration","pos":[618,686]},{"content":"The compiler found nontype template or generic parameters with different names.","pos":[693,772]},{"content":"This can occur when a specified template parameter in the definition of a template specialization is incompatible with its declaration.","pos":[773,908]},{"content":"The following sample generates C3855:","pos":[915,952]},{"content":"Possible resolution:","pos":[1095,1115]},{"content":"C3855 can also occur when using generics:","pos":[1269,1310]},{"content":"Possible resolution:","pos":[1564,1584]}],"content":"---\ntitle: \"Compiler Error C3855 | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"error-reference\"\nf1_keywords: \n  - \"C3855\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"C3855\"\nms.assetid: ed90f8c0-4154-4243-b066-493913df5727\ncaps.latest.revision: 9\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Compiler Error C3855\n'class': type parameter 'param' is incompatible with the declaration  \n  \n The compiler found nontype template or generic parameters with different names. This can occur when a specified template parameter in the definition of a template specialization is incompatible with its declaration.  \n  \n The following sample generates C3855:  \n  \n```  \n// C3855.cpp  \ntemplate <int N>  \nstruct C {  \n   void f();  \n};  \n  \ntemplate <char N>  \nvoid C<N>::f() {}   // C3855  \n```  \n  \n Possible resolution:  \n  \n```  \n// C3855b.cpp  \n// compile with: /c  \ntemplate <int N>  \nstruct C {  \n   void f();  \n};  \n  \ntemplate <int N>  \nvoid C<N>::f() {}  \n```  \n  \n C3855 can also occur when using generics:  \n  \n```  \n// C3855c.cpp  \n// compile with: /clr  \ngeneric <class T>  \nref struct GC1 {  \n   generic <class U>  \n   ref struct GC2;  \n};  \n  \ngeneric <class T>  \ngeneric <class U>  \ngeneric <class V>  \nref struct GC1<T>::GC2 { };   // C3855  \n```  \n  \n Possible resolution:  \n  \n```  \n// C3855d.cpp  \n// compile with: /clr /c  \ngeneric <class T>  \nref struct GC1 {  \n   generic <class U>  \n   ref struct GC2;  \n};  \n  \ngeneric <class T>  \ngeneric <class U>  \nref struct GC1<T>::GC2 { };  \n```"}