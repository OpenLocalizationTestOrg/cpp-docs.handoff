{"nodes":[{"pos":[12,47],"content":"Message Maps (MFC) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Message Maps (MFC) | Microsoft Docs","pos":[0,35]}]},{"content":"Message Maps (MFC)","pos":[715,733]},{"pos":[734,972],"content":"This section of the reference lists all <bpt id=\"p1\">[</bpt>message mapping macros<ept id=\"p1\">](../../mfc/reference/message-map-macros-mfc.md)</ept> and all <bpt id=\"p2\">[</bpt>CWnd<ept id=\"p2\">](../../mfc/reference/cwnd-class.md)</ept> message-map entries along with the corresponding member function prototypes:","source":"This section of the reference lists all [message mapping macros](../../mfc/reference/message-map-macros-mfc.md) and all [CWnd](../../mfc/reference/cwnd-class.md) message-map entries along with the corresponding member function prototypes:"},{"content":"Category","pos":[979,987]},{"content":"Description","pos":[988,999]},{"content":"WM_COMMAND Message Handler","pos":[1042,1068]},{"pos":[1121,1207],"content":"Handles <bpt id=\"p1\">**</bpt>WM_COMMAND<ept id=\"p1\">**</ept> messages generated by user menu selections or menu access keys.","source":"Handles **WM_COMMAND** messages generated by user menu selections or menu access keys."},{"content":"Child Window Notification Message Handlers","pos":[1213,1255]},{"content":"Handle notification messages from child windows.","pos":[1324,1372]},{"content":"WM_ Message Handlers","pos":[1378,1398]},{"pos":[1449,1493],"content":"Handle <bpt id=\"p1\">**</bpt>WM_<ept id=\"p1\">**</ept> messages, such as <ph id=\"ph1\">`WM_PAINT`</ph>.","source":"Handle **WM_** messages, such as `WM_PAINT`."},{"content":"User-Defined Message Handlers","pos":[1499,1528]},{"content":"Handle user-defined messages.","pos":[1576,1605]},{"pos":[1613,1809],"content":"(For an explanation of the terminology and conventions used in this reference, see <bpt id=\"p1\">[</bpt>How to Use the Message Map Cross-Reference<ept id=\"p1\">](../../mfc/reference/how-to-use-the-message-map-cross-reference.md)</ept>.)","source":"(For an explanation of the terminology and conventions used in this reference, see [How to Use the Message Map Cross-Reference](../../mfc/reference/how-to-use-the-message-map-cross-reference.md).)"},{"content":"Since Windows is a message-oriented operating system, a large portion of programming for the Windows environment involves message handling.","pos":[1816,1955]},{"content":"Each time an event such as a keystroke or mouse click occurs, a message is sent to the application, which must then handle the event.","pos":[1956,2089]},{"content":"The Microsoft Foundation Class Library offers a programming model optimized for message-based programming.","pos":[2096,2202]},{"content":"In this model, \"message maps\" are used to designate which functions will handle various messages for a particular class.","pos":[2203,2323]},{"content":"Message maps contain one or more macros that specify which messages will be handled by which functions.","pos":[2324,2427]},{"content":"For example, a message map containing an <ph id=\"ph1\">`ON_COMMAND`</ph> macro might look something like this:","pos":[2428,2519],"source":" For example, a message map containing an `ON_COMMAND` macro might look something like this:"},{"pos":[2537,2558],"content":"NVC_MFCMessageMaps#16"},{"content":"The <ph id=\"ph1\">`ON_COMMAND`</ph> macro is used to handle command messages generated by menus, buttons, and accelerator keys.","pos":[2627,2735],"source":"The `ON_COMMAND` macro is used to handle command messages generated by menus, buttons, and accelerator keys."},{"content":"<bpt id=\"p1\">[</bpt>Macros<ept id=\"p1\">](../../mfc/reference/message-map-macros-mfc.md)</ept> are available to map the following:","pos":[2736,2827],"source":"[Macros](../../mfc/reference/message-map-macros-mfc.md) are available to map the following:"},{"content":"Windows Messages","pos":[2836,2852]},{"content":"Control notifications","pos":[2862,2883]},{"content":"User-defined messages","pos":[2893,2914]},{"content":"Command Messages","pos":[2923,2939]},{"content":"Registered user-defined messages","pos":[2949,2981]},{"content":"User-interface update messages","pos":[2991,3021]},{"content":"Ranges of Messages","pos":[3030,3048]},{"content":"Commands","pos":[3058,3066]},{"content":"Update handler messages","pos":[3076,3099]},{"content":"Control notifications","pos":[3109,3130]},{"content":"Although message-map macros are important, you generally won't have to use them directly.","pos":[3137,3226]},{"content":"This is because the Properties window automatically creates message-map entries in your source files when you use it to associate message-handling functions with messages.","pos":[3227,3398]},{"content":"Any time you want to edit or add a message-map entry, you can use the Properties window.","pos":[3399,3487]},{"pos":[3495,3615],"content":"[!NOTE]\n The Properties window does not support message-map ranges. You must write these message-map entries yourself.","leadings":["","> "],"nodes":[{"content":" The Properties window does not support message-map ranges. You must write these message-map entries yourself.","pos":[8,118],"nodes":[{"content":"The Properties window does not support message-map ranges.","pos":[1,59]},{"content":"You must write these message-map entries yourself.","pos":[60,110]}]}]},{"content":"However, message maps are an important part of the Microsoft Foundation Class Library.","pos":[3622,3708]},{"content":"You should understand what they do, and documentation is provided for them.","pos":[3709,3784]},{"content":"See Also","pos":[3793,3801]},{"content":"Structures, Styles, Callbacks, and Message Maps","pos":[3806,3853]}],"content":"---\ntitle: \"Message Maps (MFC) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"vc.mfc.messages\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"message maps [C++], MFC\"\n  - \"Windows messages [C++], message maps\"\n  - \"messages [C++], Windows\"\n  - \"MFC [C++], messages\"\nms.assetid: 3f9855e4-9d7d-4b64-8f3f-a19ea3cf79ba\ncaps.latest.revision: 10\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Message Maps (MFC)\nThis section of the reference lists all [message mapping macros](../../mfc/reference/message-map-macros-mfc.md) and all [CWnd](../../mfc/reference/cwnd-class.md) message-map entries along with the corresponding member function prototypes:  \n  \n|Category|Description|  \n|--------------|-----------------|  \n|[WM_COMMAND Message Handler](../../mfc/reference/wm-command-message-handler.md)|Handles **WM_COMMAND** messages generated by user menu selections or menu access keys.|  \n|[Child Window Notification Message Handlers](../../mfc/reference/child-window-notification-message-handlers.md)|Handle notification messages from child windows.|  \n|[WM_ Message Handlers](../../mfc/reference/handlers-for-wm-messages.md)|Handle **WM_** messages, such as `WM_PAINT`.|  \n|[User-Defined Message Handlers](../../mfc/reference/user-defined-handlers.md)|Handle user-defined messages.|  \n  \n (For an explanation of the terminology and conventions used in this reference, see [How to Use the Message Map Cross-Reference](../../mfc/reference/how-to-use-the-message-map-cross-reference.md).)  \n  \n Since Windows is a message-oriented operating system, a large portion of programming for the Windows environment involves message handling. Each time an event such as a keystroke or mouse click occurs, a message is sent to the application, which must then handle the event.  \n  \n The Microsoft Foundation Class Library offers a programming model optimized for message-based programming. In this model, \"message maps\" are used to designate which functions will handle various messages for a particular class. Message maps contain one or more macros that specify which messages will be handled by which functions. For example, a message map containing an `ON_COMMAND` macro might look something like this:  \n  \n [!code-cpp[NVC_MFCMessageMaps#16](../../mfc/reference/codesnippet/cpp/message-maps-mfc_1.cpp)]  \n  \n The `ON_COMMAND` macro is used to handle command messages generated by menus, buttons, and accelerator keys. [Macros](../../mfc/reference/message-map-macros-mfc.md) are available to map the following:  \n  \n## Windows Messages  \n  \n-   Control notifications  \n  \n-   User-defined messages  \n  \n## Command Messages  \n  \n-   Registered user-defined messages  \n  \n-   User-interface update messages  \n  \n## Ranges of Messages  \n  \n-   Commands  \n  \n-   Update handler messages  \n  \n-   Control notifications  \n  \n Although message-map macros are important, you generally won't have to use them directly. This is because the Properties window automatically creates message-map entries in your source files when you use it to associate message-handling functions with messages. Any time you want to edit or add a message-map entry, you can use the Properties window.  \n  \n> [!NOTE]\n>  The Properties window does not support message-map ranges. You must write these message-map entries yourself.  \n  \n However, message maps are an important part of the Microsoft Foundation Class Library. You should understand what they do, and documentation is provided for them.  \n  \n## See Also  \n [Structures, Styles, Callbacks, and Message Maps](../../mfc/reference/structures-styles-callbacks-and-message-maps.md)\n\n"}