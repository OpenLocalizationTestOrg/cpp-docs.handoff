{"nodes":[{"pos":[12,63],"content":"General Language Changes (C++-CLI) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"General Language Changes (C++-CLI) | Microsoft Docs","pos":[0,51]}]},{"content":"General Language Changes (C++/CLI)","pos":[543,577]},{"pos":[578,727],"content":"A number of CLR language features changed from Managed Extensions for C++ to <ph id=\"ph1\">[!INCLUDE[cpp_current_long](../dotnet/includes/cpp_current_long_md.md)]</ph>.","source":"A number of CLR language features changed from Managed Extensions for C++ to [!INCLUDE[cpp_current_long](../dotnet/includes/cpp_current_long_md.md)]."},{"content":"The changes described in this section are a sort of language miscellany.","pos":[734,806]},{"content":"It includes a change in the handling of string literals, a change in the overload resolution between an ellipsis and the <ph id=\"ph1\">`Param`</ph> attribute, the change of <ph id=\"ph2\">`typeof`</ph> to <ph id=\"ph3\">`typeid`</ph>, a change in the calling of constructor initializer lists, and the introduction of a new cast notation, that of <ph id=\"ph4\">`safe_cast`</ph>.","pos":[807,1106],"source":" It includes a change in the handling of string literals, a change in the overload resolution between an ellipsis and the `Param` attribute, the change of `typeof` to `typeid`, a change in the calling of constructor initializer lists, and the introduction of a new cast notation, that of `safe_cast`."},{"content":"String Literal","pos":[1114,1128]},{"content":"Discusses how the handling of string literals has changed.","pos":[1162,1220]},{"content":"Param Array and Ellipsis","pos":[1228,1252]},{"content":"Discusses how <ph id=\"ph1\">`ParamArray`</ph> is now given precedence over the ellipsis (<ph id=\"ph2\">`…`</ph>) for resolving function calls with varying numbers of arguments.","pos":[1296,1434],"source":" Discusses how `ParamArray` is now given precedence over the ellipsis (`…`) for resolving function calls with varying numbers of arguments."},{"content":"typeof Goes to T::typeid","pos":[1442,1466]},{"content":"Discusses how the <ph id=\"ph1\">`typeof`</ph> operator has been supplanted by <ph id=\"ph2\">`typeid`</ph>.","pos":[1509,1577],"source":" Discusses how the `typeof` operator has been supplanted by `typeid`."},{"content":"Initializer Lists","pos":[1585,1602]},{"content":"Discusses changes in the calling order of initializer lists.","pos":[1639,1699]},{"content":"Cast Notation and Introduction of safe_cast&lt;&gt;","pos":[1707,1752],"source":"Cast Notation and Introduction of safe_cast<>"},{"content":"Discusses changes to cast notation and in particular the introduction of <ph id=\"ph1\">`safe_cast`</ph>.","pos":[1822,1907],"source":" Discusses changes to cast notation and in particular the introduction of `safe_cast`."},{"content":"See Also","pos":[1916,1924]},{"content":"C++/CLI Migration Primer","pos":[1929,1953]}],"content":"---\ntitle: \"General Language Changes (C++-CLI) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"C++\"\nms.assetid: 79a70768-225c-4ae2-84d1-178b20a9b042\ncaps.latest.revision: 7\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# General Language Changes (C++/CLI)\nA number of CLR language features changed from Managed Extensions for C++ to [!INCLUDE[cpp_current_long](../dotnet/includes/cpp_current_long_md.md)].  \n  \n The changes described in this section are a sort of language miscellany. It includes a change in the handling of string literals, a change in the overload resolution between an ellipsis and the `Param` attribute, the change of `typeof` to `typeid`, a change in the calling of constructor initializer lists, and the introduction of a new cast notation, that of `safe_cast`.  \n  \n [String Literal](../dotnet/string-literal.md)  \n Discusses how the handling of string literals has changed.  \n  \n [Param Array and Ellipsis](../dotnet/param-array-and-ellipsis.md)  \n Discusses how `ParamArray` is now given precedence over the ellipsis (`…`) for resolving function calls with varying numbers of arguments.  \n  \n [typeof Goes to T::typeid](../dotnet/typeof-goes-to-t-typeid.md)  \n Discusses how the `typeof` operator has been supplanted by `typeid`.  \n  \n [Initializer Lists](../dotnet/initializer-lists.md)  \n Discusses changes in the calling order of initializer lists.  \n  \n [Cast Notation and Introduction of safe_cast<>](../dotnet/cast-notation-and-introduction-of-safe-cast-angles.md)  \n Discusses changes to cast notation and in particular the introduction of `safe_cast`.  \n  \n## See Also  \n [C++/CLI Migration Primer](../dotnet/cpp-cli-migration-primer.md)"}