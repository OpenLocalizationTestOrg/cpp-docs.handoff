<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="pl-pl">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-04506c2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6424541c1da238644bd9ac6b8a18c8742fa851cb</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\data\oledb\implementing-a-simple-consumer.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c397034f81825ddd27895c950fa2c2f8d7c14edc</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e0cdc0b8f4dd761bb2aecdbf9c4c1b90b988effc</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Implementing a Simple Consumer | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Implementing a Simple Consumer</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The following topics show how to edit the files created by the MFC Application Wizard and ATL OLE DB Consumer Wizard to create a simple consumer.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>This example has the following parts:</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>"Retrieving Data with the Consumer" shows how to implement code in the consumer that reads all the data, row by row, from a database table.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>"Adding Bookmark Support to the Consumer" shows how to add bookmark support to the consumer.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>"Adding XML Support to the Consumer" shows how to modify the consumer code to output the retrieved rowset data as XML data.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>You can use the consumer application described in this section to test the MyProv and Provider sample providers.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>To build a consumer application to test MyProv (the same provider described in <bpt id="p1">[</bpt>Enhancing the Simple Read-Only Provider<ept id="p1">](../../data/oledb/enhancing-the-simple-read-only-provider.md)</ept>), you must include bookmark support as described in "Adding Bookmark Support to the Consumer."</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>To build a consumer application to test Provider, leave out the bookmark support described in "Adding Bookmark Support to the Consumer" and skip to "Adding XML Support to the Consumer."</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Retrieving Data with the Consumer</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>To modify the console application to use the OLE DB consumer</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>In MyCons.cpp, change the main code by inserting the bold text as follows:</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Adding Bookmark Support to the Consumer</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>A bookmark is a column that uniquely identifies rows in the table.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Typically it is the key column, but not always; it is provider-specific.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>This section shows you how to add bookmark support.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>To do so, you need to do the following in the user record class:</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Instantiate the bookmarks.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>These are objects of type <bpt id="p1">[</bpt>CBookmark<ept id="p1">](../../data/oledb/cbookmark-class.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Request a bookmark column from the provider by setting the <bpt id="p1">**</bpt>DBPROP_IRowsetLocate<ept id="p1">**</ept> property.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Add a bookmark entry to the column map by using the <bpt id="p1">[</bpt>BOOKMARK_ENTRY<ept id="p1">](../../data/oledb/bookmark-entry.md)</ept> macro.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The previous steps give you bookmark support and a bookmark object with which to work.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>This code example demonstrates a bookmark as follows:</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Open a file for writing.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Output rowset data to the file row by row.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Move the rowset cursor to the bookmark by calling <bpt id="p1">[</bpt>MoveToBookmark<ept id="p1">](../../data/oledb/crowset-movetobookmark.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Output the bookmarked row, appending it to the end of the file.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>If you use this consumer application to test the Provider sample provider application, leave out the bookmark support described in this section.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>To instantiate the bookmark</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The accessor needs to contain an object of type <bpt id="p1">[</bpt>CBookmark<ept id="p1">](../../data/oledb/cbookmark-class.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`nSize`</ph> parameter specifies the size of the bookmark buffer in bytes (typically 4 for 32-bit platforms and 8 for 64-bit platforms).</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Add the following declaration to the column data members in the user record class:</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>To request a bookmark column from the provider</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Add the following code in the <ph id="ph1">`GetRowsetProperties`</ph> method in the user record class:</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>To add a bookmark entry to the column map</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Add the following entry to the column map in the user record class:</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>To use a bookmark in your main code</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>In the MyCons.cpp file from the console application you previously created, change the main code to read as follows.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>To use bookmarks, the main code needs to instantiate its own bookmark object (<ph id="ph1">`myBookmark`</ph>); this is a different bookmark from the one in the accessor (<ph id="ph2">`m_bookmark`</ph>).</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>For more information about bookmarks, see <bpt id="p1">[</bpt>Using Bookmarks<ept id="p1">](../../data/oledb/using-bookmarks.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Examples of bookmarks are also shown in <bpt id="p1">[</bpt>Updating Rowsets<ept id="p1">](../../data/oledb/updating-rowsets.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Adding XML Support to the Consumer</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>As discussed in <bpt id="p1">[</bpt>Accessing XML Data<ept id="p1">](../../data/oledb/accessing-xml-data.md)</ept>, there are two ways to retrieve XML data from a data source: using <bpt id="p2">[</bpt>CStreamRowset<ept id="p2">](../../data/oledb/cstreamrowset-class.md)</ept> or using <bpt id="p3">[</bpt>CXMLAccessor<ept id="p3">](../../data/oledb/cxmlaccessor-class.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>This example uses <ph id="ph1">`CStreamRowset`</ph>, which is more efficient, but requires you to have SQL Server 2000 running on the computer on which you execute this sample application.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>To modify the command class to inherit from CStreamRowset</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>In the consumer application you previously created, change your <ph id="ph1">`CCommand`</ph> declaration to specify <ph id="ph2">`CStreamRowset`</ph> as the rowset class as follows:</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>To modify the main code to retrieve and output the XML data</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>In the MyCons.cpp file from the console application you previously created, change the main code to read as follows:</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Creating an OLE DB Consumer Using a Wizard</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>