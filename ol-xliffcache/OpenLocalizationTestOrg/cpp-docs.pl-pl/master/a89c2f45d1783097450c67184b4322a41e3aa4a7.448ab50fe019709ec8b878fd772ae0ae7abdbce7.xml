{"nodes":[{"pos":[12,48],"content":"CMFCStatusBar Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"CMFCStatusBar Class | Microsoft Docs","pos":[0,36]}]},{"content":"CMFCStatusBar Class","pos":[613,632]},{"content":"The <ph id=\"ph1\">`CMFCStatusBar`</ph> class implements a status bar similar to the <ph id=\"ph2\">`CStatusBar`</ph> class.","pos":[633,717],"source":"The `CMFCStatusBar` class implements a status bar similar to the `CStatusBar` class."},{"content":"However, the <ph id=\"ph1\">`CMFCStatusBar`</ph> class has features not offered by the <ph id=\"ph2\">`CStatusBar`</ph> class, such as the ability to display images, animations, and progress bars; and the ability to respond to mouse double-clicks.","pos":[718,925],"source":" However, the `CMFCStatusBar` class has features not offered by the `CStatusBar` class, such as the ability to display images, animations, and progress bars; and the ability to respond to mouse double-clicks."},{"content":"Syntax","pos":[934,940]},{"content":"Members","pos":[1001,1008]},{"content":"Public Methods","pos":[1018,1032]},{"content":"Name","pos":[1039,1043]},{"content":"Description","pos":[1044,1055]},{"content":"CMFCStatusBar::CalcFixedLayout","pos":[1094,1124]},{"pos":[1159,1267],"content":"(Overrides <bpt id=\"p1\">[</bpt>CBasePane::CalcFixedLayout<ept id=\"p1\">](../../mfc/reference/cbasepane-class.md#cbasepane__calcfixedlayout)</ept>.)","source":"(Overrides [CBasePane::CalcFixedLayout](../../mfc/reference/cbasepane-class.md#cbasepane__calcfixedlayout).)"},{"content":"CMFCStatusBar::CommandToIndex","pos":[1273,1302]},{"content":"CMFCStatusBar::Create","pos":[1342,1363]},{"content":"Creates a control bar and attaches it to the <bpt id=\"p1\">[</bpt>CPane<ept id=\"p1\">](../../mfc/reference/cpane-class.md)</ept> object.","pos":[1389,1485],"source":"Creates a control bar and attaches it to the [CPane](../../mfc/reference/cpane-class.md) object."},{"content":"(Overrides <bpt id=\"p1\">[</bpt>CPane::Create<ept id=\"p1\">](../../mfc/reference/cpane-class.md#cpane__create)</ept>.)","pos":[1486,1564],"source":" (Overrides [CPane::Create](../../mfc/reference/cpane-class.md#cpane__create).)"},{"content":"CMFCStatusBar::CreateEx","pos":[1570,1593]},{"content":"Creates a control bar and attaches it to the <bpt id=\"p1\">[</bpt>CPane<ept id=\"p1\">](../../mfc/reference/cpane-class.md)</ept> object.","pos":[1621,1717],"source":"Creates a control bar and attaches it to the [CPane](../../mfc/reference/cpane-class.md) object."},{"content":"(Overrides <bpt id=\"p1\">[</bpt>CPane::CreateEx<ept id=\"p1\">](../../mfc/reference/cpane-class.md#cpane__createex)</ept>.)","pos":[1718,1800],"source":" (Overrides [CPane::CreateEx](../../mfc/reference/cpane-class.md#cpane__createex).)"},{"content":"CMFCStatusBar::DoesAllowDynInsertBefore","pos":[1806,1845]},{"content":"Determines whether another pane can be dynamically inserted between this pane and the parent frame.","pos":[1889,1988]},{"content":"(Overrides <bpt id=\"p1\">[</bpt>CBasePane::DoesAllowDynInsertBefore<ept id=\"p1\">](../../mfc/reference/cbasepane-class.md#cbasepane__doesallowdyninsertbefore)</ept>.)","pos":[1989,2115],"source":" (Overrides [CBasePane::DoesAllowDynInsertBefore](../../mfc/reference/cbasepane-class.md#cbasepane__doesallowdyninsertbefore).)"},{"content":"CMFCStatusBar::EnablePaneDoubleClick","pos":[2121,2157]},{"content":"Enables or disables the handling of mouse double-clicks on the status bar.","pos":[2198,2272]},{"content":"CMFCStatusBar::EnablePaneProgressBar","pos":[2278,2314]},{"content":"Displays a progress bar on the specified pane.","pos":[2355,2401]},{"content":"CMFCStatusBar::GetCount","pos":[2407,2430]},{"content":"Returns the number of panes on the status bar.","pos":[2458,2504]},{"content":"CMFCStatusBar::GetDrawExtendedArea","pos":[2510,2544]},{"content":"CMFCStatusBar::GetExtendedArea","pos":[2589,2619]},{"content":"CMFCStatusBar::GetItemID","pos":[2660,2684]},{"content":"CMFCStatusBar::GetItemRect","pos":[2719,2745]},{"content":"CMFCStatusBar::GetPaneInfo","pos":[2782,2808]},{"content":"CMFCStatusBar::GetPaneProgress","pos":[2845,2875]},{"content":"CMFCStatusBar::GetPaneStyle","pos":[2916,2943]},{"content":"Returns the pane style.","pos":[2975,2998]},{"content":"(Overrides <bpt id=\"p1\">[</bpt>CBasePane::GetPaneStyle<ept id=\"p1\">](../../mfc/reference/cbasepane-class.md#cbasepane__getpanestyle)</ept>.)","pos":[2999,3101],"source":" (Overrides [CBasePane::GetPaneStyle](../../mfc/reference/cbasepane-class.md#cbasepane__getpanestyle).)"},{"content":"CMFCStatusBar::GetPaneText","pos":[3107,3133]},{"content":"CMFCStatusBar::GetPaneWidth","pos":[3170,3197]},{"content":"Returns the width, in pixels, of the specified pane of the status bar.","pos":[3229,3299]},{"content":"CMFCStatusBar::GetTipText","pos":[3305,3330]},{"content":"Returns the tool tip text for the specified pane of the status bar.","pos":[3360,3427]},{"content":"CMFCStatusBar::InvalidatePaneContent","pos":[3433,3469]},{"content":"Invalidates the specified pane and redraws its content.","pos":[3510,3565]},{"content":"CMFCStatusBar::PreCreateWindow","pos":[3571,3601]},{"content":"Called by the framework before the creation of the Windows window attached to this <ph id=\"ph1\">`CWnd`</ph> object.","pos":[3636,3733],"source":"Called by the framework before the creation of the Windows window attached to this `CWnd` object."},{"content":"(Overrides <bpt id=\"p1\">[</bpt>CWnd::PreCreateWindow<ept id=\"p1\">](../../mfc/reference/cwnd-class.md#cwnd__precreatewindow)</ept>.)","pos":[3734,3827],"source":" (Overrides [CWnd::PreCreateWindow](../../mfc/reference/cwnd-class.md#cwnd__precreatewindow).)"},{"content":"CMFCStatusBar::SetDrawExtendedArea","pos":[3833,3867]},{"content":"CMFCStatusBar::SetIndicators","pos":[3912,3940]},{"content":"CMFCStatusBar::SetPaneAnimation","pos":[3979,4010]},{"content":"Assigns an animation to the specified pane.","pos":[4046,4089]},{"content":"CMFCStatusBar::SetPaneBackgroundColor","pos":[4095,4132]},{"content":"Sets the background color for the specified pane of the status bar.","pos":[4174,4241]},{"content":"CMFCStatusBar::SetPaneIcon","pos":[4247,4273]},{"content":"Sets the indicator icon for the specified pane of the status bar.","pos":[4304,4369]},{"content":"CMFCStatusBar::SetPaneInfo","pos":[4375,4401]},{"content":"CMFCStatusBar::SetPaneProgress","pos":[4438,4468]},{"content":"Sets the current progress of the progress bar for the specified pane of the status bar.","pos":[4503,4590]},{"content":"CMFCStatusBar::SetPaneStyle","pos":[4596,4623]},{"content":"Sets the style of the pane.","pos":[4655,4682]},{"content":"(Overrides <bpt id=\"p1\">[</bpt>CBasePane::SetPaneStyle<ept id=\"p1\">](../../mfc/reference/cbasepane-class.md#cbasepane__setpanestyle)</ept>.)","pos":[4683,4785],"source":" (Overrides [CBasePane::SetPaneStyle](../../mfc/reference/cbasepane-class.md#cbasepane__setpanestyle).)"},{"content":"CMFCStatusBar::SetPaneText","pos":[4791,4817]},{"content":"CMFCStatusBar::SetPaneTextColor","pos":[4854,4885]},{"content":"Sets the text color for the specified pane of the status bar.","pos":[4921,4982]},{"content":"CMFCStatusBar::SetPaneWidth","pos":[4988,5015]},{"content":"Sets the width in pixels of the specified pane of the status bar.","pos":[5047,5112]},{"content":"CMFCStatusBar::SetTipText","pos":[5118,5143]},{"content":"Sets the tool tip text for the specified pane of the status bar.","pos":[5173,5237]},{"content":"Protected Methods","pos":[5248,5265]},{"content":"Name","pos":[5272,5276]},{"content":"Description","pos":[5277,5288]},{"content":"CMFCStatusBar::OnDrawPane","pos":[5327,5352]},{"content":"Called by the framework when it redraws the pane of the status bar.","pos":[5382,5449]},{"content":"Remarks","pos":[5459,5466]},{"pos":[5470,5596],"content":"The following diagram shows a figure of the status bar from <bpt id=\"p1\">[</bpt>Status Bar Demo sample<ept id=\"p1\">](../../visual-cpp-samples.md)</ept> application.","source":"The following diagram shows a figure of the status bar from [Status Bar Demo sample](../../visual-cpp-samples.md) application."},{"content":"Example of CMFCStatusBar","pos":[5605,5629]},{"content":"Example","pos":[5700,5707]},{"content":"The following example demonstrates the local variables that the application uses to call various methods in the <ph id=\"ph1\">`CMFCStatusBar`</ph> class.","pos":[5711,5845],"source":"The following example demonstrates the local variables that the application uses to call various methods in the `CMFCStatusBar` class."},{"content":"These variables are declared in StatusBarDemoView.h.","pos":[5846,5898]},{"content":"The main frame is declared in MainFrm.h, the document is declared in StatusBarDemoDoc.h, and the view is declared in StatusBarDemoView.h.","pos":[5899,6036]},{"content":"This code snippet is part of the <bpt id=\"p1\">[</bpt>Status Bar Demo sample<ept id=\"p1\">](../../visual-cpp-samples.md)</ept>.","pos":[6037,6124],"source":" This code snippet is part of the [Status Bar Demo sample](../../visual-cpp-samples.md)."},{"pos":[6142,6165],"content":"NVC_MFC_StatusBarDemo#9"},{"content":"Example","pos":[6237,6244]},{"content":"The following example demonstrates how to get a reference to <ph id=\"ph1\">`CMFCStatusBar`</ph> object by introducing the <ph id=\"ph2\">`GetStatusBar`</ph> method in MainFrm.h and then calling this method from the <ph id=\"ph3\">`GetStatusBar`</ph> method in StatusBarDemoView.h.","pos":[6248,6469],"source":"The following example demonstrates how to get a reference to `CMFCStatusBar` object by introducing the `GetStatusBar` method in MainFrm.h and then calling this method from the `GetStatusBar` method in StatusBarDemoView.h."},{"content":"This code snippet is part of the <bpt id=\"p1\">[</bpt>Status Bar Demo sample<ept id=\"p1\">](../../visual-cpp-samples.md)</ept>.","pos":[6470,6557],"source":" This code snippet is part of the [Status Bar Demo sample](../../visual-cpp-samples.md)."},{"content":"NVC_MFC_StatusBarDemo#7","pos":[6575,6598]},{"content":"NVC_MFC_StatusBarDemo#8","pos":[6675,6698]},{"content":"Example","pos":[6770,6777]},{"content":"The following example demonstrates how to call various methods in the <ph id=\"ph1\">`CMFCStatusBar`</ph> class in StatusBarDemoView.cpp.","pos":[6781,6898],"source":"The following example demonstrates how to call various methods in the `CMFCStatusBar` class in StatusBarDemoView.cpp."},{"content":"The constants are declared in MainFrm.h.","pos":[6899,6939]},{"content":"The example shows how to set the icon, set the tooltip text of the status bar pane, display a progress bar on the specified pane, assign an animation to the specified pane, set the text and the width of the status bar pane, and set the current progress indicator of the progress bar for the status bar pane.","pos":[6940,7247]},{"content":"This code snippet is part of the <bpt id=\"p1\">[</bpt>Status Bar Demo sample<ept id=\"p1\">](../../visual-cpp-samples.md)</ept>.","pos":[7248,7335],"source":" This code snippet is part of the [Status Bar Demo sample](../../visual-cpp-samples.md)."},{"content":"NVC_MFC_StatusBarDemo#6","pos":[7353,7376]},{"content":"NVC_MFC_StatusBarDemo#1","pos":[7453,7476]},{"content":"NVC_MFC_StatusBarDemo#2","pos":[7555,7578]},{"content":"NVC_MFC_StatusBarDemo#3","pos":[7657,7680]},{"content":"NVC_MFC_StatusBarDemo#4","pos":[7759,7782]},{"content":"NVC_MFC_StatusBarDemo#5","pos":[7861,7884]},{"content":"Inheritance Hierarchy","pos":[7958,7979]},{"content":"CObject","pos":[7984,7991]},{"content":"CCmdTarget","pos":[8038,8048]},{"content":"CWnd","pos":[8098,8102]},{"content":"CBasePane","pos":[8146,8155]},{"content":"CPane","pos":[8204,8209]},{"content":"CMFCStatusBar","pos":[8254,8267]},{"content":"Requirements","pos":[8321,8333]},{"pos":[8337,8363],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> afxstatusbar.h","source":"**Header:** afxstatusbar.h"},{"pos":[8420,8450],"content":"CMFCStatusBar::CalcFixedLayout"},{"content":"Parameters","pos":[8647,8657]},{"content":"[in]","pos":[8661,8665]},{"content":"[in]","pos":[8680,8684]},{"content":"Return Value","pos":[8702,8714]},{"content":"Remarks","pos":[8724,8731]},{"pos":[8787,8816],"content":"CMFCStatusBar::CommandToIndex"},{"content":"Parameters","pos":[8987,8997]},{"pos":[9001,9005],"content":"[in]"},{"content":"Return Value","pos":[9025,9037]},{"content":"Remarks","pos":[9047,9054]},{"pos":[9102,9123],"content":"CMFCStatusBar::Create"},{"content":"Parameters","pos":[9383,9393]},{"content":"[in]","pos":[9397,9401]},{"content":"[in]","pos":[9418,9422]},{"content":"[in]","pos":[9436,9440]},{"content":"Return Value","pos":[9456,9468]},{"content":"Remarks","pos":[9478,9485]},{"pos":[9535,9558],"content":"CMFCStatusBar::CreateEx"},{"content":"Parameters","pos":[9849,9859]},{"content":"[in]","pos":[9863,9867]},{"content":"[in]","pos":[9884,9888]},{"content":"[in]","pos":[9906,9910]},{"content":"[in]","pos":[9924,9928]},{"content":"Return Value","pos":[9944,9956]},{"content":"Remarks","pos":[9966,9973]},{"pos":[10039,10078],"content":"CMFCStatusBar::DoesAllowDynInsertBefore"},{"content":"Return Value","pos":[10256,10268]},{"content":"Remarks","pos":[10278,10285]},{"pos":[10348,10384],"content":"CMFCStatusBar::EnablePaneDoubleClick"},{"content":"Enables or disables the handling of mouse double-clicks on the status bar.","pos":[10388,10462]},{"content":"Parameters","pos":[10534,10544]},{"content":"[in]","pos":[10548,10552]},{"content":"If <ph id=\"ph1\">`TRUE`</ph>, enable the processing of the mouse double-click.","pos":[10566,10625],"source":" If `TRUE`, enable the processing of the mouse double-click."},{"content":"Otherwise disable the processing of the mouse double-click.","pos":[10626,10685]},{"content":"Remarks","pos":[10695,10702]},{"pos":[10706,10926],"content":"If the status bar is enabled to process double clicks, Windows sends the <ph id=\"ph1\">`WM_COMMAND`</ph> notification together with a resource ID to the owner of the status bar every time that the user double clicks on the status bar pane.","source":"If the status bar is enabled to process double clicks, Windows sends the `WM_COMMAND` notification together with a resource ID to the owner of the status bar every time that the user double clicks on the status bar pane."},{"pos":[10989,11025],"content":"CMFCStatusBar::EnablePaneProgressBar"},{"content":"Display a progress bar on the specified pane.","pos":[11029,11074]},{"content":"Parameters","pos":[11289,11299]},{"content":"[in]","pos":[11303,11307]},{"content":"Specifies the index of the pane whose progress bar to enable.","pos":[11320,11381]},{"content":"[in]","pos":[11388,11392]},{"content":"Specifies the maximum value for the progress bar.","pos":[11405,11454]},{"content":"[in]","pos":[11461,11465]},{"content":"Specifies whether the progress bar should display the current progress value.","pos":[11484,11561]},{"content":"[in]","pos":[11568,11572]},{"content":"Specifies the background color of the progress bar.","pos":[11585,11636]},{"content":"[in]","pos":[11643,11647]},{"content":"Specifies the secondary color of the progress bar background.","pos":[11664,11725]},{"content":"Use different value than <ph id=\"ph1\">`clrBar`</ph> to fill by a color blended into a gradient.","pos":[11726,11803],"source":" Use different value than `clrBar` to fill by a color blended into a gradient."},{"content":"[in]","pos":[11810,11814]},{"content":"Specifies the color of the text of the progress bar.","pos":[11836,11888]},{"content":"Remarks","pos":[11898,11905]},{"content":"If you want to disable the progress bar call <ph id=\"ph1\">`EnablePaneProgressBar`</ph> with <ph id=\"ph2\">`nTotal`</ph> set to -1.","pos":[11909,12002],"source":"If you want to disable the progress bar call `EnablePaneProgressBar` with `nTotal` set to -1."},{"content":"By default <ph id=\"ph1\">`nTotal`</ph> is set to 100.","pos":[12003,12037],"source":" By default `nTotal` is set to 100."},{"content":"Therefore, you do not need any additional calculations to display progress as percentage.","pos":[12038,12127]},{"content":"You should pass different values for <ph id=\"ph1\">`clrBar`</ph> and <ph id=\"ph2\">`clrBarDest`</ph> so that the background color of the progress bar displays a color blended into a gradient.","pos":[12134,12287],"source":"You should pass different values for `clrBar` and `clrBarDest` so that the background color of the progress bar displays a color blended into a gradient."},{"content":".","pos":[12288,12289]},{"pos":[12296,12407],"content":"To set the current progress, call the <bpt id=\"p1\">[</bpt>CMFCStatusBar::SetPaneProgress<ept id=\"p1\">](#cmfcstatusbar__setpaneprogress)</ept> method.","source":"To set the current progress, call the [CMFCStatusBar::SetPaneProgress](#cmfcstatusbar__setpaneprogress) method."},{"pos":[12457,12480],"content":"CMFCStatusBar::GetCount"},{"content":"Retrieves the number of panes in the status bar.","pos":[12484,12532]},{"content":"Return Value","pos":[12582,12594]},{"content":"The number of panes in the status bar.","pos":[12598,12636]},{"pos":[12697,12731],"content":"CMFCStatusBar::GetDrawExtendedArea"},{"content":"Return Value","pos":[12896,12908]},{"content":"Remarks","pos":[12918,12925]},{"pos":[12982,13012],"content":"CMFCStatusBar::GetExtendedArea"},{"content":"Parameters","pos":[13192,13202]},{"pos":[13206,13210],"content":"[in]"},{"content":"Return Value","pos":[13227,13239]},{"content":"Remarks","pos":[13249,13256]},{"pos":[13307,13331],"content":"CMFCStatusBar::GetItemID"},{"content":"Parameters","pos":[13496,13506]},{"pos":[13510,13514],"content":"[in]"},{"content":"Return Value","pos":[13533,13545]},{"content":"Remarks","pos":[13555,13562]},{"pos":[13615,13641],"content":"CMFCStatusBar::GetItemRect"},{"content":"Parameters","pos":[13834,13844]},{"content":"[in]","pos":[13848,13852]},{"content":"[in]","pos":[13865,13869]},{"content":"Remarks","pos":[13888,13895]},{"pos":[13948,13974],"content":"CMFCStatusBar::GetPaneInfo"},{"content":"Parameters","pos":[14203,14213]},{"content":"[in]","pos":[14217,14221]},{"content":"[in]","pos":[14234,14238]},{"content":"[in]","pos":[14248,14252]},{"content":"[in]","pos":[14265,14269]},{"content":"Remarks","pos":[14289,14296]},{"pos":[14353,14383],"content":"CMFCStatusBar::GetPaneProgress"},{"content":"Parameters","pos":[14554,14564]},{"pos":[14568,14572],"content":"[in]"},{"content":"Return Value","pos":[14591,14603]},{"content":"Remarks","pos":[14613,14620]},{"pos":[14674,14701],"content":"CMFCStatusBar::GetPaneStyle"},{"content":"Parameters","pos":[14869,14879]},{"pos":[14883,14887],"content":"[in]"},{"content":"Return Value","pos":[14906,14918]},{"content":"Remarks","pos":[14928,14935]},{"pos":[14988,15014],"content":"CMFCStatusBar::GetPaneText"},{"content":"Parameters","pos":[15251,15261]},{"content":"[in]","pos":[15265,15269]},{"content":"[in]","pos":[15282,15286]},{"content":"Return Value","pos":[15300,15312]},{"content":"Remarks","pos":[15322,15329]},{"pos":[15383,15410],"content":"CMFCStatusBar::GetPaneWidth"},{"content":"Retrieves the width of the pane of a status bar.","pos":[15414,15462]},{"content":"Parameters","pos":[15526,15536]},{"content":"[in]","pos":[15540,15544]},{"content":"Specifies the index of the status bar pane.","pos":[15557,15600]},{"content":"Return Value","pos":[15610,15622]},{"pos":[15626,15736],"content":"The width of the status bar pane that <ph id=\"ph1\">`nIndex`</ph> specifies; otherwise, zero if a status-bar pane does not exist.","source":"The width of the status bar pane that `nIndex` specifies; otherwise, zero if a status-bar pane does not exist."},{"pos":[15788,15813],"content":"CMFCStatusBar::GetTipText"},{"content":"Retrieve the tooltip text of a status bar's pane.","pos":[15817,15866]},{"content":"Parameters","pos":[15932,15942]},{"content":"[in]","pos":[15946,15950]},{"content":"Specifies the index of the pane for which to retrieve tool tip text.","pos":[15963,16031]},{"content":"Return Value","pos":[16041,16053]},{"content":"The tooltip text of the status-bar pane that <ph id=\"ph1\">`nIndex`</ph> specifies.","pos":[16057,16121],"source":"The tooltip text of the status-bar pane that `nIndex` specifies."},{"content":"Otherwise, the empty string if a status bar pane does not exist for the specified <ph id=\"ph1\">`nIndex`</ph> or if its tooltip text is empty.","pos":[16122,16245],"source":" Otherwise, the empty string if a status bar pane does not exist for the specified `nIndex` or if its tooltip text is empty."},{"pos":[16308,16344],"content":"CMFCStatusBar::InvalidatePaneContent"},{"content":"Invalidate the status bar pane and redraw its content.","pos":[16348,16402]},{"content":"Parameters","pos":[16467,16477]},{"content":"[in]","pos":[16481,16485]},{"content":"Specifies the index of the pane whose content is to be invalidated and redrawn.","pos":[16498,16577]},{"content":"Remarks","pos":[16587,16594]},{"content":"When the status bar is invalidated, it is marked for redrawing.","pos":[16598,16661]},{"content":"Windows redraws it when the <ph id=\"ph1\">`UpdateWindow`</ph> method sends a <ph id=\"ph2\">`WM_PAINT`</ph> message to the <ph id=\"ph3\">`OnPaint`</ph> method.","pos":[16662,16763],"source":" Windows redraws it when the `UpdateWindow` method sends a `WM_PAINT` message to the `OnPaint` method."},{"pos":[16815,16840],"content":"CMFCStatusBar::OnDrawPane"},{"content":"Redraw the pane of the status bar.","pos":[16844,16878]},{"content":"Parameters","pos":[16979,16989]},{"content":"[in]","pos":[16993,16997]},{"content":"A pointer to a device context for drawing.","pos":[17007,17049]},{"content":"[in]","pos":[17056,17060]},{"content":"A pointer to a <ph id=\"ph1\">`CMFCStatusBarPaneInfo`</ph> structure that contains the information about the pane to be redrawn.","pos":[17072,17180],"source":" A pointer to a `CMFCStatusBarPaneInfo` structure that contains the information about the pane to be redrawn."},{"content":"Remarks","pos":[17190,17197]},{"pos":[17201,17319],"content":"By default, <ph id=\"ph1\">`OnDrawPane`</ph> redraws the pane by using the device context <ph id=\"ph2\">`pDC`</ph> according to the pane's style and content.","source":"By default, `OnDrawPane` redraws the pane by using the device context `pDC` according to the pane's style and content."},{"pos":[17326,17420],"content":"Override this method in a <ph id=\"ph1\">`CMFCStatusBar`</ph>-derived class to customize the appearance of a pane.","source":"Override this method in a `CMFCStatusBar`-derived class to customize the appearance of a pane."},{"pos":[17477,17507],"content":"CMFCStatusBar::PreCreateWindow"},{"content":"Parameters","pos":[17683,17693]},{"pos":[17697,17701],"content":"[in]"},{"content":"Return Value","pos":[17716,17728]},{"content":"Remarks","pos":[17738,17745]},{"pos":[17806,17840],"content":"CMFCStatusBar::SetDrawExtendedArea"},{"content":"Parameters","pos":[18012,18022]},{"pos":[18026,18030],"content":"[in]"},{"content":"Remarks","pos":[18047,18054]},{"pos":[18109,18137],"content":"CMFCStatusBar::SetIndicators"},{"content":"Parameters","pos":[18333,18343]},{"content":"[in]","pos":[18347,18351]},{"content":"[in]","pos":[18367,18371]},{"content":"Return Value","pos":[18392,18404]},{"content":"Remarks","pos":[18414,18421]},{"pos":[18479,18510],"content":"CMFCStatusBar::SetPaneAnimation"},{"content":"Assigns an animation to the specified pane.","pos":[18514,18557]},{"content":"Parameters","pos":[18703,18713]},{"content":"[in]","pos":[18717,18721]},{"content":"Specifies the index of the pane to which you want to assign to it an animation.","pos":[18734,18813]},{"content":"[in]","pos":[18820,18824]},{"content":"Specifies a handle to the image list that holds the animation frames.","pos":[18841,18910]},{"content":"[in]","pos":[18917,18921]},{"content":"Specifies the frame rate, in milliseconds, for the animation.","pos":[18938,18999]},{"content":"[in]","pos":[19006,19010]},{"content":"If <ph id=\"ph1\">`TRUE`</ph>, update the pane content immediately.","pos":[19024,19071],"source":" If `TRUE`, update the pane content immediately."},{"content":"Otherwise, the pane content is updated when it is invalidated.","pos":[19072,19134]},{"content":"Remarks","pos":[19144,19151]},{"pos":[19155,19257],"content":"If you want to disable the current animation, call <ph id=\"ph1\">`SetPaneAnimation`</ph> with <ph id=\"ph2\">`hImageList`</ph> set to <ph id=\"ph3\">`NULL`</ph>.","source":"If you want to disable the current animation, call `SetPaneAnimation` with `hImageList` set to `NULL`."},{"pos":[19321,19358],"content":"CMFCStatusBar::SetPaneBackgroundColor"},{"content":"Sets the background color of the status bar pane.","pos":[19362,19411]},{"content":"Parameters","pos":[19550,19560]},{"content":"[in]","pos":[19564,19568]},{"content":"Specifies the index of the pane for which to set a new background color.","pos":[19581,19653]},{"content":"[in]","pos":[19660,19664]},{"content":"Specifies the new background color.","pos":[19684,19719]},{"content":"[in]","pos":[19726,19730]},{"content":"If <ph id=\"ph1\">`TRUE`</ph>, update the pane content immediately.","pos":[19744,19791],"source":" If `TRUE`, update the pane content immediately."},{"content":"Otherwise, do not update the pane content until the pane is invalidated by another method.","pos":[19792,19882]},{"pos":[19935,19961],"content":"CMFCStatusBar::SetPaneIcon"},{"content":"Set the icon of the status bar pane.","pos":[19965,20001]},{"content":"Parameters","pos":[20244,20254]},{"content":"[in]","pos":[20258,20262]},{"content":"Specifies the index of the pane for which to set the image.","pos":[20275,20334]},{"content":"[in]","pos":[20341,20345]},{"content":"Specifies a handle to the icon to be set as the pane image.","pos":[20357,20416]},{"content":"[in]","pos":[20423,20427]},{"content":"Specifies whether to update the pane content immediately.","pos":[20441,20498]},{"content":"[in]","pos":[20505,20509]},{"content":"Specifies a handle to the bitmap to be set as the pane image.","pos":[20520,20581]},{"content":"[in]","pos":[20588,20592]},{"content":"Specifies the transparent color of the bitmap that the <ph id=\"ph1\">`hBmp`</ph> indicates.","pos":[20613,20685],"source":" Specifies the transparent color of the bitmap that the `hBmp` indicates."},{"content":"Remarks","pos":[20695,20702]},{"content":"You can pass either <ph id=\"ph1\">`HICON`</ph> or <ph id=\"ph2\">`HBITMAP`</ph> together with the transparent color to set the pane's image.","pos":[20706,20807],"source":"You can pass either `HICON` or `HBITMAP` together with the transparent color to set the pane's image."},{"content":"If you do not want to display the image any longer, pass the <ph id=\"ph1\">`NULL`</ph> value as the image handle.","pos":[20808,20902],"source":" If you do not want to display the image any longer, pass the `NULL` value as the image handle."},{"pos":[20909,21055],"content":"If there is any running animation that <bpt id=\"p1\">[</bpt>CMFCStatusBar::SetPaneAnimation<ept id=\"p1\">](#cmfcstatusbar__setpaneanimation)</ept> has set, the animation will be stopped.","source":"If there is any running animation that [CMFCStatusBar::SetPaneAnimation](#cmfcstatusbar__setpaneanimation) has set, the animation will be stopped."},{"pos":[21108,21134],"content":"CMFCStatusBar::SetPaneInfo"},{"content":"Parameters","pos":[21351,21361]},{"content":"[in]","pos":[21365,21369]},{"content":"[in]","pos":[21382,21386]},{"content":"[in]","pos":[21396,21400]},{"content":"[in]","pos":[21413,21417]},{"content":"Remarks","pos":[21437,21444]},{"pos":[21501,21531],"content":"CMFCStatusBar::SetPaneProgress"},{"content":"Set the current progress indicator of the progress bar for the specified pane.","pos":[21535,21613]},{"content":"Parameters","pos":[21720,21730]},{"content":"[in]","pos":[21734,21738]},{"content":"Specifies the index of the pane for which to update the progress indicator.","pos":[21751,21826]},{"content":"[in]","pos":[21833,21837]},{"content":"Specifies the current value of the progress indicator.","pos":[21849,21903]},{"content":"[in]","pos":[21910,21914]},{"content":"Specifies whether the pane should be updated immediately.","pos":[21928,21985]},{"content":"Remarks","pos":[21995,22002]},{"content":"Call this method when you want to update the progress indicator for the progress bar in the specified pane.","pos":[22006,22113]},{"pos":[22120,22259],"content":"To use this function for the given pane, you must call <bpt id=\"p1\">[</bpt>CMFCStatusBar::EnablePaneProgressBar<ept id=\"p1\">](#cmfcstatusbar__enablepaneprogressbar)</ept> first.","source":"To use this function for the given pane, you must call [CMFCStatusBar::EnablePaneProgressBar](#cmfcstatusbar__enablepaneprogressbar) first."},{"pos":[22313,22340],"content":"CMFCStatusBar::SetPaneStyle"},{"content":"Parameters","pos":[22523,22533]},{"content":"[in]","pos":[22537,22541]},{"content":"[in]","pos":[22554,22558]},{"content":"Remarks","pos":[22577,22584]},{"pos":[22637,22663],"content":"CMFCStatusBar::SetPaneText"},{"content":"Parameters","pos":[22888,22898]},{"content":"[in]","pos":[22902,22906]},{"content":"[in]","pos":[22919,22923]},{"content":"[in]","pos":[22941,22945]},{"content":"Return Value","pos":[22965,22977]},{"content":"Remarks","pos":[22987,22994]},{"pos":[23052,23083],"content":"CMFCStatusBar::SetPaneTextColor"},{"content":"Sets the text color of the specified pane.","pos":[23087,23129]},{"content":"Parameters","pos":[23256,23266]},{"content":"[in]","pos":[23270,23274]},{"content":"Specifies the index of the pane to which you want to assign a new text color.","pos":[23287,23364]},{"content":"[in]","pos":[23371,23375]},{"content":"Specifies the text color.","pos":[23389,23414]},{"content":"[in]","pos":[23421,23425]},{"content":"If <ph id=\"ph1\">`TRUE`</ph>, update the pane content immediately.","pos":[23439,23486],"source":" If `TRUE`, update the pane content immediately."},{"content":"Otherwise, do not update the pane content until the pane is invalidated by another method.","pos":[23487,23577]},{"pos":[23631,23658],"content":"CMFCStatusBar::SetPaneWidth"},{"content":"Set the width of the status bar pane.","pos":[23662,23699]},{"content":"Parameters","pos":[23774,23784]},{"content":"[in]","pos":[23788,23792]},{"content":"The index of the status bar pane for which to set a new width.","pos":[23805,23867]},{"content":"[in]","pos":[23874,23878]},{"content":"The new width of the status bar pane, in pixels.","pos":[23887,23935]},{"pos":[23987,24012],"content":"CMFCStatusBar::SetTipText"},{"content":"Set the tooltip text of a status bar pane.","pos":[24016,24058]},{"content":"Parameters","pos":[24143,24153]},{"content":"[in]","pos":[24157,24161]},{"content":"The index of the pane to which you want to assign the tooltip text.","pos":[24174,24241]},{"content":"[in]","pos":[24248,24252]},{"content":"The new tooltip text.","pos":[24269,24290]},{"content":"See Also","pos":[24299,24307]},{"content":"Hierarchy Chart","pos":[24312,24327]},{"content":"Classes","pos":[24364,24371]},{"content":"CPane Class","pos":[24414,24425]},{"content":"CStatusBar Class","pos":[24468,24484]}],"content":"---\ntitle: \"CMFCStatusBar Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"CMFCStatusBar\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"CMFCStatusBar class\"\nms.assetid: f2960d1d-f4ed-41e8-bd99-0382b2f8d88e\ncaps.latest.revision: 36\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# CMFCStatusBar Class\nThe `CMFCStatusBar` class implements a status bar similar to the `CStatusBar` class. However, the `CMFCStatusBar` class has features not offered by the `CStatusBar` class, such as the ability to display images, animations, and progress bars; and the ability to respond to mouse double-clicks.  \n  \n## Syntax  \n  \n```  \nclass CMFCStatusBar : public CPane  \n```  \n  \n## Members  \n  \n### Public Methods  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CMFCStatusBar::CalcFixedLayout](#cmfcstatusbar__calcfixedlayout)|(Overrides [CBasePane::CalcFixedLayout](../../mfc/reference/cbasepane-class.md#cbasepane__calcfixedlayout).)|  \n|[CMFCStatusBar::CommandToIndex](#cmfcstatusbar__commandtoindex)||  \n|[CMFCStatusBar::Create](#cmfcstatusbar__create)|Creates a control bar and attaches it to the [CPane](../../mfc/reference/cpane-class.md) object. (Overrides [CPane::Create](../../mfc/reference/cpane-class.md#cpane__create).)|  \n|[CMFCStatusBar::CreateEx](#cmfcstatusbar__createex)|Creates a control bar and attaches it to the [CPane](../../mfc/reference/cpane-class.md) object. (Overrides [CPane::CreateEx](../../mfc/reference/cpane-class.md#cpane__createex).)|  \n|[CMFCStatusBar::DoesAllowDynInsertBefore](#cmfcstatusbar__doesallowdyninsertbefore)|Determines whether another pane can be dynamically inserted between this pane and the parent frame. (Overrides [CBasePane::DoesAllowDynInsertBefore](../../mfc/reference/cbasepane-class.md#cbasepane__doesallowdyninsertbefore).)|  \n|[CMFCStatusBar::EnablePaneDoubleClick](#cmfcstatusbar__enablepanedoubleclick)|Enables or disables the handling of mouse double-clicks on the status bar.|  \n|[CMFCStatusBar::EnablePaneProgressBar](#cmfcstatusbar__enablepaneprogressbar)|Displays a progress bar on the specified pane.|  \n|[CMFCStatusBar::GetCount](#cmfcstatusbar__getcount)|Returns the number of panes on the status bar.|  \n|[CMFCStatusBar::GetDrawExtendedArea](#cmfcstatusbar__getdrawextendedarea)||  \n|[CMFCStatusBar::GetExtendedArea](#cmfcstatusbar__getextendedarea)||  \n|[CMFCStatusBar::GetItemID](#cmfcstatusbar__getitemid)||  \n|[CMFCStatusBar::GetItemRect](#cmfcstatusbar__getitemrect)||  \n|[CMFCStatusBar::GetPaneInfo](#cmfcstatusbar__getpaneinfo)||  \n|[CMFCStatusBar::GetPaneProgress](#cmfcstatusbar__getpaneprogress)||  \n|[CMFCStatusBar::GetPaneStyle](#cmfcstatusbar__getpanestyle)|Returns the pane style. (Overrides [CBasePane::GetPaneStyle](../../mfc/reference/cbasepane-class.md#cbasepane__getpanestyle).)|  \n|[CMFCStatusBar::GetPaneText](#cmfcstatusbar__getpanetext)||  \n|[CMFCStatusBar::GetPaneWidth](#cmfcstatusbar__getpanewidth)|Returns the width, in pixels, of the specified pane of the status bar.|  \n|[CMFCStatusBar::GetTipText](#cmfcstatusbar__gettiptext)|Returns the tool tip text for the specified pane of the status bar.|  \n|[CMFCStatusBar::InvalidatePaneContent](#cmfcstatusbar__invalidatepanecontent)|Invalidates the specified pane and redraws its content.|  \n|[CMFCStatusBar::PreCreateWindow](#cmfcstatusbar__precreatewindow)|Called by the framework before the creation of the Windows window attached to this `CWnd` object. (Overrides [CWnd::PreCreateWindow](../../mfc/reference/cwnd-class.md#cwnd__precreatewindow).)|  \n|[CMFCStatusBar::SetDrawExtendedArea](#cmfcstatusbar__setdrawextendedarea)||  \n|[CMFCStatusBar::SetIndicators](#cmfcstatusbar__setindicators)||  \n|[CMFCStatusBar::SetPaneAnimation](#cmfcstatusbar__setpaneanimation)|Assigns an animation to the specified pane.|  \n|[CMFCStatusBar::SetPaneBackgroundColor](#cmfcstatusbar__setpanebackgroundcolor)|Sets the background color for the specified pane of the status bar.|  \n|[CMFCStatusBar::SetPaneIcon](#cmfcstatusbar__setpaneicon)|Sets the indicator icon for the specified pane of the status bar.|  \n|[CMFCStatusBar::SetPaneInfo](#cmfcstatusbar__setpaneinfo)||  \n|[CMFCStatusBar::SetPaneProgress](#cmfcstatusbar__setpaneprogress)|Sets the current progress of the progress bar for the specified pane of the status bar.|  \n|[CMFCStatusBar::SetPaneStyle](#cmfcstatusbar__setpanestyle)|Sets the style of the pane. (Overrides [CBasePane::SetPaneStyle](../../mfc/reference/cbasepane-class.md#cbasepane__setpanestyle).)|  \n|[CMFCStatusBar::SetPaneText](#cmfcstatusbar__setpanetext)||  \n|[CMFCStatusBar::SetPaneTextColor](#cmfcstatusbar__setpanetextcolor)|Sets the text color for the specified pane of the status bar.|  \n|[CMFCStatusBar::SetPaneWidth](#cmfcstatusbar__setpanewidth)|Sets the width in pixels of the specified pane of the status bar.|  \n|[CMFCStatusBar::SetTipText](#cmfcstatusbar__settiptext)|Sets the tool tip text for the specified pane of the status bar.|  \n  \n### Protected Methods  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CMFCStatusBar::OnDrawPane](#cmfcstatusbar__ondrawpane)|Called by the framework when it redraws the pane of the status bar.|  \n  \n## Remarks  \n The following diagram shows a figure of the status bar from [Status Bar Demo sample](../../visual-cpp-samples.md) application.  \n  \n ![Example of CMFCStatusBar](../../mfc/reference/media/cmfcstatusbar.png \"cmfcstatusbar\")  \n  \n## Example  \n The following example demonstrates the local variables that the application uses to call various methods in the `CMFCStatusBar` class. These variables are declared in StatusBarDemoView.h. The main frame is declared in MainFrm.h, the document is declared in StatusBarDemoDoc.h, and the view is declared in StatusBarDemoView.h. This code snippet is part of the [Status Bar Demo sample](../../visual-cpp-samples.md).  \n  \n [!code-cpp[NVC_MFC_StatusBarDemo#9](../../mfc/reference/codesnippet/cpp/cmfcstatusbar-class_1.h)]  \n  \n## Example  \n The following example demonstrates how to get a reference to `CMFCStatusBar` object by introducing the `GetStatusBar` method in MainFrm.h and then calling this method from the `GetStatusBar` method in StatusBarDemoView.h. This code snippet is part of the [Status Bar Demo sample](../../visual-cpp-samples.md).  \n  \n [!code-cpp[NVC_MFC_StatusBarDemo#7](../../mfc/reference/codesnippet/cpp/cmfcstatusbar-class_2.h)]  \n[!code-cpp[NVC_MFC_StatusBarDemo#8](../../mfc/reference/codesnippet/cpp/cmfcstatusbar-class_3.h)]  \n  \n## Example  \n The following example demonstrates how to call various methods in the `CMFCStatusBar` class in StatusBarDemoView.cpp. The constants are declared in MainFrm.h. The example shows how to set the icon, set the tooltip text of the status bar pane, display a progress bar on the specified pane, assign an animation to the specified pane, set the text and the width of the status bar pane, and set the current progress indicator of the progress bar for the status bar pane. This code snippet is part of the [Status Bar Demo sample](../../visual-cpp-samples.md).  \n  \n [!code-cpp[NVC_MFC_StatusBarDemo#6](../../mfc/reference/codesnippet/cpp/cmfcstatusbar-class_4.h)]  \n[!code-cpp[NVC_MFC_StatusBarDemo#1](../../mfc/reference/codesnippet/cpp/cmfcstatusbar-class_5.cpp)]  \n[!code-cpp[NVC_MFC_StatusBarDemo#2](../../mfc/reference/codesnippet/cpp/cmfcstatusbar-class_6.cpp)]  \n[!code-cpp[NVC_MFC_StatusBarDemo#3](../../mfc/reference/codesnippet/cpp/cmfcstatusbar-class_7.cpp)]  \n[!code-cpp[NVC_MFC_StatusBarDemo#4](../../mfc/reference/codesnippet/cpp/cmfcstatusbar-class_8.cpp)]  \n[!code-cpp[NVC_MFC_StatusBarDemo#5](../../mfc/reference/codesnippet/cpp/cmfcstatusbar-class_9.cpp)]  \n  \n## Inheritance Hierarchy  \n [CObject](../../mfc/reference/cobject-class.md)  \n  \n [CCmdTarget](../../mfc/reference/ccmdtarget-class.md)  \n  \n [CWnd](../../mfc/reference/cwnd-class.md)  \n  \n [CBasePane](../../mfc/reference/cbasepane-class.md)  \n  \n [CPane](../../mfc/reference/cpane-class.md)  \n  \n [CMFCStatusBar](../../mfc/reference/cmfcstatusbar-class.md)  \n  \n## Requirements  \n **Header:** afxstatusbar.h  \n  \n##  <a name=\"cmfcstatusbar__calcfixedlayout\"></a>  CMFCStatusBar::CalcFixedLayout  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvirtual CSize CalcFixedLayout(\n    BOOL bStretch,  \n    BOOL bHorz);\n```  \n  \n### Parameters  \n [in] `bStretch`  \n [in] `bHorz`  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cmfcstatusbar__commandtoindex\"></a>  CMFCStatusBar::CommandToIndex  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nint CommandToIndex(UINT nIDFind) const;\n\n \n```  \n  \n### Parameters  \n [in] `nIDFind`  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cmfcstatusbar__create\"></a>  CMFCStatusBar::Create  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nBOOL Create(\n    CWnd* pParentWnd,  \n    DWORD dwStyle = WS_CHILD | WS_VISIBLE | CBRS_BOTTOM,  \n    UINT nID = AFX_IDW_STATUS_BAR);\n```  \n  \n### Parameters  \n [in] `pParentWnd`  \n [in] `dwStyle`  \n [in] `nID`  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cmfcstatusbar__createex\"></a>  CMFCStatusBar::CreateEx  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nBOOL CreateEx(\n    CWnd* pParentWnd,  \n    DWORD dwCtrlStyle = 0,  \n    DWORD dwStyle = WS_CHILD | WS_VISIBLE | CBRS_BOTTOM,  \n    UINT nID = AFX_IDW_STATUS_BAR);\n```  \n  \n### Parameters  \n [in] `pParentWnd`  \n [in] `dwCtrlStyle`  \n [in] `dwStyle`  \n [in] `nID`  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cmfcstatusbar__doesallowdyninsertbefore\"></a>  CMFCStatusBar::DoesAllowDynInsertBefore  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvirtual BOOL DoesAllowDynInsertBefore() const;\n\n \n```  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cmfcstatusbar__enablepanedoubleclick\"></a>  CMFCStatusBar::EnablePaneDoubleClick  \n Enables or disables the handling of mouse double-clicks on the status bar.  \n  \n```  \nvoid EnablePaneDoubleClick(BOOL bEnable=TRUE);\n```  \n  \n### Parameters  \n [in] `bEnable`  \n If `TRUE`, enable the processing of the mouse double-click. Otherwise disable the processing of the mouse double-click.  \n  \n### Remarks  \n If the status bar is enabled to process double clicks, Windows sends the `WM_COMMAND` notification together with a resource ID to the owner of the status bar every time that the user double clicks on the status bar pane.  \n  \n##  <a name=\"cmfcstatusbar__enablepaneprogressbar\"></a>  CMFCStatusBar::EnablePaneProgressBar  \n Display a progress bar on the specified pane.  \n  \n```  \nvoid EnablePaneProgressBar(\n    int nIndex,  \n    long nTotal=100,  \n    BOOL bDisplayText=FALSE,  \n    COLORREF clrBar=-1,  \n    COLORREF clrBarDest=-1,  \n    COLORREF clrProgressText=-1);\n```  \n  \n### Parameters  \n [in] `nIndex`  \n Specifies the index of the pane whose progress bar to enable.  \n  \n [in] `nTotal`  \n Specifies the maximum value for the progress bar.  \n  \n [in] `bDisplayText`  \n Specifies whether the progress bar should display the current progress value.  \n  \n [in] `clrBar`  \n Specifies the background color of the progress bar.  \n  \n [in] `clrBarDest`  \n Specifies the secondary color of the progress bar background. Use different value than `clrBar` to fill by a color blended into a gradient.  \n  \n [in] `clrProgressText`  \n Specifies the color of the text of the progress bar.  \n  \n### Remarks  \n If you want to disable the progress bar call `EnablePaneProgressBar` with `nTotal` set to -1. By default `nTotal` is set to 100. Therefore, you do not need any additional calculations to display progress as percentage.  \n  \n You should pass different values for `clrBar` and `clrBarDest` so that the background color of the progress bar displays a color blended into a gradient. .  \n  \n To set the current progress, call the [CMFCStatusBar::SetPaneProgress](#cmfcstatusbar__setpaneprogress) method.  \n  \n##  <a name=\"cmfcstatusbar__getcount\"></a>  CMFCStatusBar::GetCount  \n Retrieves the number of panes in the status bar.  \n  \n```  \nint GetCount() const;\n\n \n```  \n  \n### Return Value  \n The number of panes in the status bar.  \n  \n##  <a name=\"cmfcstatusbar__getdrawextendedarea\"></a>  CMFCStatusBar::GetDrawExtendedArea  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nBOOL GetDrawExtendedArea() const;\n\n \n```  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cmfcstatusbar__getextendedarea\"></a>  CMFCStatusBar::GetExtendedArea  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvirtual BOOL GetExtendedArea(CRect& rect) const;\n\n \n```  \n  \n### Parameters  \n [in] `rect`  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cmfcstatusbar__getitemid\"></a>  CMFCStatusBar::GetItemID  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nUINT GetItemID(int nIndex) const;\n\n \n```  \n  \n### Parameters  \n [in] `nIndex`  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cmfcstatusbar__getitemrect\"></a>  CMFCStatusBar::GetItemRect  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvoid GetItemRect(\n    int nIndex,  \n    LPRECT lpRect) const;\n\n \n```  \n  \n### Parameters  \n [in] `nIndex`  \n [in] `lpRect`  \n  \n### Remarks  \n  \n##  <a name=\"cmfcstatusbar__getpaneinfo\"></a>  CMFCStatusBar::GetPaneInfo  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvoid GetPaneInfo(\n    int nIndex,  \n    UINT& nID,  \n    UINT& nStyle,  \n    int& cxWidth) const;\n\n \n```  \n  \n### Parameters  \n [in] `nIndex`  \n [in] `nID`  \n [in] `nStyle`  \n [in] `cxWidth`  \n  \n### Remarks  \n  \n##  <a name=\"cmfcstatusbar__getpaneprogress\"></a>  CMFCStatusBar::GetPaneProgress  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nlong GetPaneProgress(int nIndex) const;\n\n \n```  \n  \n### Parameters  \n [in] `nIndex`  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cmfcstatusbar__getpanestyle\"></a>  CMFCStatusBar::GetPaneStyle  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nUINT GetPaneStyle(int nIndex) const;\n\n \n```  \n  \n### Parameters  \n [in] `nIndex`  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cmfcstatusbar__getpanetext\"></a>  CMFCStatusBar::GetPaneText  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvoid GetPaneText(\n    int nIndex,  \n    CString& s) const;\n\n \nCString GetPaneText(\n    int nIndex) const;\n\n \n```  \n  \n### Parameters  \n [in] `nIndex`  \n [in] `s`  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cmfcstatusbar__getpanewidth\"></a>  CMFCStatusBar::GetPaneWidth  \n Retrieves the width of the pane of a status bar.  \n  \n```  \nint GetPaneWidth(int nIndex) const;\n\n \n```  \n  \n### Parameters  \n [in] `nIndex`  \n Specifies the index of the status bar pane.  \n  \n### Return Value  \n The width of the status bar pane that `nIndex` specifies; otherwise, zero if a status-bar pane does not exist.  \n  \n##  <a name=\"cmfcstatusbar__gettiptext\"></a>  CMFCStatusBar::GetTipText  \n Retrieve the tooltip text of a status bar's pane.  \n  \n```  \nCString GetTipText(int nIndex) const;\n\n \n```  \n  \n### Parameters  \n [in] `nIndex`  \n Specifies the index of the pane for which to retrieve tool tip text.  \n  \n### Return Value  \n The tooltip text of the status-bar pane that `nIndex` specifies. Otherwise, the empty string if a status bar pane does not exist for the specified `nIndex` or if its tooltip text is empty.  \n  \n##  <a name=\"cmfcstatusbar__invalidatepanecontent\"></a>  CMFCStatusBar::InvalidatePaneContent  \n Invalidate the status bar pane and redraw its content.  \n  \n```  \nvoid InvalidatePaneContent(int nIndex);\n```  \n  \n### Parameters  \n [in] `nIndex`  \n Specifies the index of the pane whose content is to be invalidated and redrawn.  \n  \n### Remarks  \n When the status bar is invalidated, it is marked for redrawing. Windows redraws it when the `UpdateWindow` method sends a `WM_PAINT` message to the `OnPaint` method.  \n  \n##  <a name=\"cmfcstatusbar__ondrawpane\"></a>  CMFCStatusBar::OnDrawPane  \n Redraw the pane of the status bar.  \n  \n```  \nvirtual void OnDrawPane(\n    CDC* pDC,  \n    CMFCStatusBarPaneInfo* pPane);\n```  \n  \n### Parameters  \n [in] `pDC`  \n A pointer to a device context for drawing.  \n  \n [in] `pPane`  \n A pointer to a `CMFCStatusBarPaneInfo` structure that contains the information about the pane to be redrawn.  \n  \n### Remarks  \n By default, `OnDrawPane` redraws the pane by using the device context `pDC` according to the pane's style and content.  \n  \n Override this method in a `CMFCStatusBar`-derived class to customize the appearance of a pane.  \n  \n##  <a name=\"cmfcstatusbar__precreatewindow\"></a>  CMFCStatusBar::PreCreateWindow  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvirtual BOOL PreCreateWindow(CREATESTRUCT& cs);\n```  \n  \n### Parameters  \n [in] `cs`  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cmfcstatusbar__setdrawextendedarea\"></a>  CMFCStatusBar::SetDrawExtendedArea  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvoid SetDrawExtendedArea(BOOL bSet = TRUE);\n```  \n  \n### Parameters  \n [in] `bSet`  \n  \n### Remarks  \n  \n##  <a name=\"cmfcstatusbar__setindicators\"></a>  CMFCStatusBar::SetIndicators  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nBOOL SetIndicators(\n    const UINT* lpIDArray,  \n    int nIDCount);\n```  \n  \n### Parameters  \n [in] `lpIDArray`  \n [in] `nIDCount`  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cmfcstatusbar__setpaneanimation\"></a>  CMFCStatusBar::SetPaneAnimation  \n Assigns an animation to the specified pane.  \n  \n```  \nvoid SetPaneAnimation(\n    int nIndex,  \n    HIMAGELIST hImageList,  \n    UINT nFrameRate=500,  \n    BOOL bUpdate=TRUE);\n```  \n  \n### Parameters  \n [in] `nIndex`  \n Specifies the index of the pane to which you want to assign to it an animation.  \n  \n [in] `hImageList`  \n Specifies a handle to the image list that holds the animation frames.  \n  \n [in] `nFrameRate`  \n Specifies the frame rate, in milliseconds, for the animation.  \n  \n [in] `bUpdate`  \n If `TRUE`, update the pane content immediately. Otherwise, the pane content is updated when it is invalidated.  \n  \n### Remarks  \n If you want to disable the current animation, call `SetPaneAnimation` with `hImageList` set to `NULL`.  \n  \n##  <a name=\"cmfcstatusbar__setpanebackgroundcolor\"></a>  CMFCStatusBar::SetPaneBackgroundColor  \n Sets the background color of the status bar pane.  \n  \n```  \nvoid SetPaneBackgroundColor(\n    int nIndex,  \n    COLORREF clrBackground=(COLORREF)-1,  \n    BOOL bUpdate=TRUE);\n```  \n  \n### Parameters  \n [in] `nIndex`  \n Specifies the index of the pane for which to set a new background color.  \n  \n [in] `clrBackground`  \n Specifies the new background color.  \n  \n [in] `bUpdate`  \n If `TRUE`, update the pane content immediately. Otherwise, do not update the pane content until the pane is invalidated by another method.  \n  \n##  <a name=\"cmfcstatusbar__setpaneicon\"></a>  CMFCStatusBar::SetPaneIcon  \n Set the icon of the status bar pane.  \n  \n```  \nvoid SetPaneIcon(\n    int nIndex,  \n    HICON hIcon,  \n    BOOL bUpdate=TRUE);\n\n \nvoid SetPaneIcon(\n    int nIndex,  \n    HBITMAP hBmp,  \n    COLORREF clrTransparent=RGB(255,\n    0,\n    255),  \n    BOOL bUpdate=TRUE);\n```  \n  \n### Parameters  \n [in] `nIndex`  \n Specifies the index of the pane for which to set the image.  \n  \n [in] `hIcon`  \n Specifies a handle to the icon to be set as the pane image.  \n  \n [in] `bUpdate`  \n Specifies whether to update the pane content immediately.  \n  \n [in] `hBmp`  \n Specifies a handle to the bitmap to be set as the pane image.  \n  \n [in] `clrTransparent`  \n Specifies the transparent color of the bitmap that the `hBmp` indicates.  \n  \n### Remarks  \n You can pass either `HICON` or `HBITMAP` together with the transparent color to set the pane's image. If you do not want to display the image any longer, pass the `NULL` value as the image handle.  \n  \n If there is any running animation that [CMFCStatusBar::SetPaneAnimation](#cmfcstatusbar__setpaneanimation) has set, the animation will be stopped.  \n  \n##  <a name=\"cmfcstatusbar__setpaneinfo\"></a>  CMFCStatusBar::SetPaneInfo  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvoid SetPaneInfo(\n    int nIndex,  \n    UINT nID,  \n    UINT nStyle,  \n    int cxWidth);\n```  \n  \n### Parameters  \n [in] `nIndex`  \n [in] `nID`  \n [in] `nStyle`  \n [in] `cxWidth`  \n  \n### Remarks  \n  \n##  <a name=\"cmfcstatusbar__setpaneprogress\"></a>  CMFCStatusBar::SetPaneProgress  \n Set the current progress indicator of the progress bar for the specified pane.  \n  \n```  \nvoid SetPaneProgress(\n    int nIndex,  \n    long nCurr,  \n    BOOL bUpdate=TRUE);\n```  \n  \n### Parameters  \n [in] `nIndex`  \n Specifies the index of the pane for which to update the progress indicator.  \n  \n [in] `nCurr`  \n Specifies the current value of the progress indicator.  \n  \n [in] `bUpdate`  \n Specifies whether the pane should be updated immediately.  \n  \n### Remarks  \n Call this method when you want to update the progress indicator for the progress bar in the specified pane.  \n  \n To use this function for the given pane, you must call [CMFCStatusBar::EnablePaneProgressBar](#cmfcstatusbar__enablepaneprogressbar) first.  \n  \n##  <a name=\"cmfcstatusbar__setpanestyle\"></a>  CMFCStatusBar::SetPaneStyle  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvoid SetPaneStyle(\n    int nIndex,  \n    UINT nStyle);\n```  \n  \n### Parameters  \n [in] `nIndex`  \n [in] `nStyle`  \n  \n### Remarks  \n  \n##  <a name=\"cmfcstatusbar__setpanetext\"></a>  CMFCStatusBar::SetPaneText  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvirtual BOOL SetPaneText(\n    int nIndex,  \n    LPCTSTR lpszNewText,  \n    BOOL bUpdate = TRUE);\n```  \n  \n### Parameters  \n [in] `nIndex`  \n [in] `lpszNewText`  \n [in] `bUpdate`  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cmfcstatusbar__setpanetextcolor\"></a>  CMFCStatusBar::SetPaneTextColor  \n Sets the text color of the specified pane.  \n  \n```  \nvoid SetPaneTextColor(\n    int nIndex,  \n    COLORREF clrText=(COLORREF)-1,  \n    BOOL bUpdate=TRUE);\n```  \n  \n### Parameters  \n [in] `nIndex`  \n Specifies the index of the pane to which you want to assign a new text color.  \n  \n [in] `clrText`  \n Specifies the text color.  \n  \n [in] `bUpdate`  \n If `TRUE`, update the pane content immediately. Otherwise, do not update the pane content until the pane is invalidated by another method.  \n  \n##  <a name=\"cmfcstatusbar__setpanewidth\"></a>  CMFCStatusBar::SetPaneWidth  \n Set the width of the status bar pane.  \n  \n```  \nvoid SetPaneWidth(\n    int nIndex,  \n    int cx);\n```  \n  \n### Parameters  \n [in] `nIndex`  \n The index of the status bar pane for which to set a new width.  \n  \n [in] `cx`  \n The new width of the status bar pane, in pixels.  \n  \n##  <a name=\"cmfcstatusbar__settiptext\"></a>  CMFCStatusBar::SetTipText  \n Set the tooltip text of a status bar pane.  \n  \n```  \nvoid SetTipText(\n    int nIndex,  \n    LPCTSTR pszTipText);\n```  \n  \n### Parameters  \n [in] `nIndex`  \n The index of the pane to which you want to assign the tooltip text.  \n  \n [in] `pszTipText`  \n The new tooltip text.  \n  \n## See Also  \n [Hierarchy Chart](../../mfc/hierarchy-chart.md)   \n [Classes](../../mfc/reference/mfc-classes.md)   \n [CPane Class](../../mfc/reference/cpane-class.md)   \n [CStatusBar Class](../../mfc/reference/cstatusbar-class.md)\n"}