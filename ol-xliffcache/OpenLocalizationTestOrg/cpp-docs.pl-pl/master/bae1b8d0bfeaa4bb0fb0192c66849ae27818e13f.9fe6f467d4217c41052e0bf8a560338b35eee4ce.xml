{"nodes":[{"pos":[12,52],"content":"map::iterator (STL-CLR) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"map::iterator (STL-CLR) | Microsoft Docs","pos":[0,40]}]},{"content":"map::iterator (STL/CLR)","pos":[631,654]},{"content":"The type of an iterator for the controlled sequence.","pos":[655,707]},{"content":"Syntax","pos":[716,722]},{"content":"Remarks","pos":[769,776]},{"pos":[780,905],"content":"The type describes an object of unspecified type <ph id=\"ph1\">`T1`</ph> that can serve as a bidirectional iterator for the controlled sequence.","source":"The type describes an object of unspecified type `T1` that can serve as a bidirectional iterator for the controlled sequence."},{"content":"Example","pos":[914,921]},{"content":"Requirements","pos":[1553,1565]},{"pos":[1569,1594],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> <ph id=\"ph1\">\\&lt;</ph>cliext/map&gt;","source":"**Header:** \\<cliext/map>"},{"pos":[1601,1622],"content":"<bpt id=\"p1\">**</bpt>Namespace:<ept id=\"p1\">**</ept> cliext","source":"**Namespace:** cliext"},{"content":"See Also","pos":[1631,1639]},{"content":"map (STL/CLR)","pos":[1644,1657]},{"content":"map::const_iterator (STL/CLR)","pos":[1690,1719]}],"content":"---\ntitle: \"map::iterator (STL-CLR) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"cliext::map::iterator\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"iterator member [STL/CLR]\"\nms.assetid: b2953b9b-0e6d-49f3-a28f-47d04d16d5f6\ncaps.latest.revision: 15\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# map::iterator (STL/CLR)\nThe type of an iterator for the controlled sequence.  \n  \n## Syntax  \n  \n```  \ntypedef T1 iterator;  \n```  \n  \n## Remarks  \n The type describes an object of unspecified type `T1` that can serve as a bidirectional iterator for the controlled sequence.  \n  \n## Example  \n  \n```  \n// cliext_map_iterator.cpp   \n// compile with: /clr   \n#include <cliext/map>   \n  \ntypedef cliext::map<wchar_t, int> Mymap;   \nint main()   \n    {   \n    Mymap c1;   \n    c1.insert(Mymap::make_value(L'a', 1));   \n    c1.insert(Mymap::make_value(L'b', 2));   \n    c1.insert(Mymap::make_value(L'c', 3));   \n  \n// display contents \" [a 1] [b 2] [c 3]\"   \n    Mymap::iterator it = c1.begin();   \n    for (; it != c1.end(); ++it)   \n        System::Console::Write(\" [{0} {1}]\", it->first, it->second);   \n    System::Console::WriteLine();   \n    return (0);   \n    }  \n  \n```  \n  \n```Output  \n[a 1] [b 2] [c 3]  \n```  \n  \n## Requirements  \n **Header:** \\<cliext/map>  \n  \n **Namespace:** cliext  \n  \n## See Also  \n [map (STL/CLR)](../dotnet/map-stl-clr.md)   \n [map::const_iterator (STL/CLR)](../dotnet/map-const-iterator-stl-clr.md)"}