{"nodes":[{"pos":[12,54],"content":"vector::reserve (STL-CLR) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"vector::reserve (STL-CLR) | Microsoft Docs","pos":[0,42]}]},{"content":"vector::reserve (STL/CLR)","pos":[634,659]},{"content":"Ensures a minimum growth capacity for the container.","pos":[660,712]},{"content":"Syntax","pos":[721,727]},{"content":"Parameters","pos":[786,796]},{"content":"count","pos":[800,805]},{"content":"New minimum capacity of the container.","pos":[809,847]},{"content":"Remarks","pos":[856,863]},{"content":"The member function ensures that <ph id=\"ph1\">`capacity()`</ph> henceforth returns at least <ph id=\"ph2\">`count`</ph>.","pos":[867,949],"source":"The member function ensures that `capacity()` henceforth returns at least `count`."},{"content":"You use it to ensure that the container need not reallocate storage for the controlled sequence until it has grown to the specified size.","pos":[950,1087]},{"content":"Example","pos":[1096,1103]},{"content":"Description","pos":[1980,1991]},{"pos":[1995,2104],"content":"Note that the actual capacities may differ from the values shown here, so long as all <ph id=\"ph1\">`ok`</ph> tests report true.","source":"Note that the actual capacities may differ from the values shown here, so long as all `ok` tests report true."},{"content":"Requirements","pos":[2113,2125]},{"pos":[2129,2157],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> <ph id=\"ph1\">\\&lt;</ph>cliext/vector&gt;","source":"**Header:** \\<cliext/vector>"},{"pos":[2164,2185],"content":"<bpt id=\"p1\">**</bpt>Namespace:<ept id=\"p1\">**</ept> cliext","source":"**Namespace:** cliext"},{"content":"See Also","pos":[2194,2202]},{"content":"vector (STL/CLR)","pos":[2207,2223]},{"content":"vector::capacity (STL/CLR)","pos":[2259,2285]},{"content":"vector::resize (STL/CLR)","pos":[2330,2354]}],"content":"---\ntitle: \"vector::reserve (STL-CLR) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"cliext::vector::reserve\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"reserve member [STL/CLR]\"\nms.assetid: d1d5ede9-9628-4b55-95ec-f087a57205f2\ncaps.latest.revision: 16\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# vector::reserve (STL/CLR)\nEnsures a minimum growth capacity for the container.  \n  \n## Syntax  \n  \n```  \nvoid reserve(size_type count);  \n```  \n  \n#### Parameters  \n count  \n New minimum capacity of the container.  \n  \n## Remarks  \n The member function ensures that `capacity()` henceforth returns at least `count`. You use it to ensure that the container need not reallocate storage for the controlled sequence until it has grown to the specified size.  \n  \n## Example  \n  \n```  \n// cliext_vector_reserve.cpp   \n// compile with: /clr   \n#include <cliext/vector>   \n  \nint main()   \n    {   \n    cliext::vector<wchar_t> c1;   \n    c1.push_back(L'a');   \n    c1.push_back(L'b');   \n    c1.push_back(L'c');   \n  \n// display initial contents \" a b c\"   \n    for (int i = 0; i < c1.size(); ++i)   \n        System::Console::Write(\" {0}\", c1.at(i));   \n    System::Console::WriteLine();   \n  \n// increase capacity   \n    cliext::vector<wchar_t>::size_type cap = c1.capacity();   \n    System::Console::WriteLine(\"capacity() = {0}, ok = {1}\",   \n        cap, c1.size() <= cap);   \n    c1.reserve(cap + 5);   \n    System::Console::WriteLine(\"capacity() = {0}, ok = {1}\",   \n        c1.capacity(), cap + 5 <= c1.capacity());   \n    return (0);   \n    }  \n  \n```  \n  \n```Output  \n a b c  \ncapacity() = 4, ok = True  \ncapacity() = 9, ok = True  \n```  \n  \n## Description  \n Note that the actual capacities may differ from the values shown here, so long as all `ok` tests report true.  \n  \n## Requirements  \n **Header:** \\<cliext/vector>  \n  \n **Namespace:** cliext  \n  \n## See Also  \n [vector (STL/CLR)](../dotnet/vector-stl-clr.md)   \n [vector::capacity (STL/CLR)](../dotnet/vector-capacity-stl-clr.md)   \n [vector::resize (STL/CLR)](../dotnet/vector-resize-stl-clr.md)"}