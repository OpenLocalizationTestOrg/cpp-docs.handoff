<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="pl-pl">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-04506c2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">76eda76f7872096df3eec06e9bcaf6fb781eb1ac</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\c-language\c-storage-classes.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">782fb3e7703d29107eed489673fe90143519ee1c</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">017001d6842be328698c6dcfe51e993ea85d9d6a</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>C Storage Classes | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>C Storage Classes</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The "storage class" of a variable determines whether the item has a "global" or "local" lifetime.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>C calls these two lifetimes "static" and "automatic."</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>An item with a global lifetime exists and has a value throughout the execution of the program.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>All functions have global lifetimes.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Automatic variables, or variables with local lifetimes, are allocated new storage each time execution control passes to the block in which they are defined.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>When execution returns, the variables no longer have meaningful values.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>C provides the following storage-class specifiers:</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>storage-class-specifier<ept id="p1">*</ept>:</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>auto</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>register</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>static</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>extern</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>typedef</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>__declspec<ept id="p1">**</ept> ( <bpt id="p2">*</bpt>extended-decl-modifier-seq<ept id="p2">*</ept> ) /* Microsoft Specific</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Except for <ph id="ph1">`__declspec`</ph>, you can use only one <bpt id="p1">*</bpt>storage-class-specifier<ept id="p1">*</ept> in the <bpt id="p2">*</bpt>declaration-specifier<ept id="p2">*</ept> in a declaration.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>If no storage-class specification is made, declarations within a block create automatic objects.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Items declared with the <bpt id="p1">**</bpt>auto<ept id="p1">**</ept> or <bpt id="p2">**</bpt>register<ept id="p2">**</ept> specifier have local lifetimes.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Items declared with the <bpt id="p1">**</bpt>static<ept id="p1">**</ept> or <ph id="ph1">`extern`</ph> specifier have global lifetimes.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Since <ph id="ph1">`typedef`</ph> and <ph id="ph2">`__declspec`</ph> are semantically different from the other four <bpt id="p1">*</bpt>storage-class-specifier<ept id="p1">*</ept> terminals, they are discussed separately.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>For specific information on <ph id="ph1">`typedef`</ph>, see <bpt id="p1">[</bpt>Typedef Declarations<ept id="p1">](../c-language/typedef-declarations.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>For specific information on <ph id="ph1">`__declspec`</ph>, see <bpt id="p1">[</bpt>Extended Storage-Class Attributes<ept id="p1">](../c-language/c-extended-storage-class-attributes.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The placement of variable and function declarations within source files also affects storage class and visibility.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Declarations outside all function definitions are said to appear at the "external level."</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Declarations within function definitions appear at the "internal level."</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The exact meaning of each storage-class specifier depends on two factors:</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Whether the declaration appears at the external or internal level</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Whether the item being declared is a variable or a function</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Storage-Class Specifiers for External-Level Declarations<ept id="p1">](../c-language/storage-class-specifiers-for-external-level-declarations.md)</ept> and <bpt id="p2">[</bpt>Storage-Class Specifiers for Internal-Level Declarations<ept id="p2">](../c-language/storage-class-specifiers-for-internal-level-declarations.md)</ept> describe the <bpt id="p3">*</bpt>storage-class-specifier<ept id="p3">*</ept> terminals in each kind of declaration and explain the default behavior when the <bpt id="p4">*</bpt>storage-class-specifier<ept id="p4">*</ept> is omitted from a variable.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Storage-Class Specifiers with Function Declarations<ept id="p1">](../c-language/storage-class-specifiers-with-function-declarations.md)</ept> discusses storage-class specifiers used with functions.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Declarations and Types</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>