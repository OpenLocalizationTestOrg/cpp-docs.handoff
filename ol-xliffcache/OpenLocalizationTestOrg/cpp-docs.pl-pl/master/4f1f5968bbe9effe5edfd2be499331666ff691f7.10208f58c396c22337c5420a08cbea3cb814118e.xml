{"nodes":[{"pos":[12,69],"content":"collection_adapter::value_type (STL-CLR) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"collection_adapter::value_type (STL-CLR) | Microsoft Docs","pos":[0,57]}]},{"content":"collection_adapter::value_type (STL/CLR)","pos":[666,706]},{"content":"The type of an element.","pos":[707,730]},{"content":"Syntax","pos":[739,745]},{"content":"Remarks","pos":[797,804]},{"pos":[808,948],"content":"The type is a synonym for the template parameter <ph id=\"ph1\">`Value`</ph>, if present in the specialization; otherwise it is a synonym for <ph id=\"ph2\">`System::Object^`</ph>.","source":"The type is a synonym for the template parameter `Value`, if present in the specialization; otherwise it is a synonym for `System::Object^`."},{"content":"Example","pos":[957,964]},{"content":"Requirements","pos":[1753,1765]},{"pos":[1769,1798],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> <ph id=\"ph1\">\\&lt;</ph>cliext/adapter&gt;","source":"**Header:** \\<cliext/adapter>"},{"pos":[1805,1826],"content":"<bpt id=\"p1\">**</bpt>Namespace:<ept id=\"p1\">**</ept> cliext","source":"**Namespace:** cliext"},{"content":"See Also","pos":[1835,1843]},{"content":"collection_adapter (STL/CLR)","pos":[1848,1876]},{"content":"collection_adapter::reference (STL/CLR)","pos":[1924,1963]}],"content":"---\ntitle: \"collection_adapter::value_type (STL-CLR) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"cliext::collection_adapter::value_type\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"value_type member [STL/CLR]\"\nms.assetid: 4a77ec36-6113-4ec3-86a2-ea24d96605c1\ncaps.latest.revision: 9\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# collection_adapter::value_type (STL/CLR)\nThe type of an element.  \n  \n## Syntax  \n  \n```  \ntypedef Value value_type;  \n```  \n  \n## Remarks  \n The type is a synonym for the template parameter `Value`, if present in the specialization; otherwise it is a synonym for `System::Object^`.  \n  \n## Example  \n  \n```  \n// cliext_collection_adapter_value_type.cpp   \n// compile with: /clr   \n#include <cliext/adapter>   \n#include <cliext/deque>   \n  \ntypedef cliext::collection_adapter<   \n    System::Collections::ICollection> Mycoll;   \nint main()   \n    {   \n    cliext::deque<wchar_t> d1;   \n    d1.push_back(L'a');   \n    d1.push_back(L'b');   \n    d1.push_back(L'c');   \n    Mycoll c1(%d1);   \n  \n// display contents \" a b c\" using value_type   \n    for (Mycoll::iterator it = c1.begin();   \n        it != c1.end(); ++it)   \n        {   // store element in value_type object   \n        Mycoll::value_type val = *it;   \n  \n        System::Console::Write(\" {0}\", val);   \n        }   \n    System::Console::WriteLine();   \n    return (0);   \n    }  \n  \n```  \n  \n```Output  \na b c  \n```  \n  \n## Requirements  \n **Header:** \\<cliext/adapter>  \n  \n **Namespace:** cliext  \n  \n## See Also  \n [collection_adapter (STL/CLR)](../dotnet/collection-adapter-stl-clr.md)   \n [collection_adapter::reference (STL/CLR)](../dotnet/collection-adapter-reference-stl-clr.md)"}