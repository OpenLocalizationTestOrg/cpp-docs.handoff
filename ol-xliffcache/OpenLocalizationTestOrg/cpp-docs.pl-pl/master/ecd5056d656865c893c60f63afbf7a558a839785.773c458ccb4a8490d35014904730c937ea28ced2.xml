{"nodes":[{"pos":[12,49],"content":"Compiler Error C2715 | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Compiler Error C2715 | Microsoft Docs","pos":[0,37]}]},{"content":"Compiler Error C2715","pos":[598,618]},{"content":"'type' : cannot throw or catch this type","pos":[619,659]},{"pos":[666,858],"content":"Value types are not valid arguments when using exception handling in managed code (see <bpt id=\"p1\">[</bpt>Exception Handling<ept id=\"p1\">](../../windows/exception-handling-cpp-component-extensions.md)</ept> for more information).","source":"Value types are not valid arguments when using exception handling in managed code (see [Exception Handling](../../windows/exception-handling-cpp-component-extensions.md) for more information)."}],"content":"---\ntitle: \"Compiler Error C2715 | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"error-reference\"\nf1_keywords: \n  - \"C2715\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"C2715\"\nms.assetid: c81567a7-5b65-468f-aaf9-835f91e468e4\ncaps.latest.revision: 15\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Compiler Error C2715\n'type' : cannot throw or catch this type  \n  \n Value types are not valid arguments when using exception handling in managed code (see [Exception Handling](../../windows/exception-handling-cpp-component-extensions.md) for more information).  \n  \n```  \n// C2715a.cpp  \n// compile with: /clr  \nusing namespace System;  \n  \nvalue struct V {  \n   int i;  \n};  \n  \nvoid f1() {  \n   V v;  \n   v.i = 10;  \n   throw v;   // C2715  \n   // try the following line instead  \n   // throw ((V^)v);  \n}  \n  \nint main() {  \n   try {  \n      f1();  \n   }  \n  \n   catch(V v) { if ( v.i == 10 ) {   // C2715  \n   // try the following line instead  \n   // catch(V^ pv) { if ( pv->i == 10 ) {  \n         Console::WriteLine(\"caught 10 - looks OK\");  \n      }   \n      else {  \n         Console::WriteLine(\"catch looks bad\");  \n      }  \n   }  \n   catch(...) {  \n      Console::WriteLine(\"catch looks REALLY bad\");  \n   }  \n}  \n```  \n"}