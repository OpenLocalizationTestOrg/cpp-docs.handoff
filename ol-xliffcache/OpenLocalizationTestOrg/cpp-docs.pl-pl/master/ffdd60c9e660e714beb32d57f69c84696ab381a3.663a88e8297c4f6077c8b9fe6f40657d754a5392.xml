{"nodes":[{"pos":[12,89],"content":"_atodbl, _atodbl_l, _atoldbl, _atoldbl_l, _atoflt, _atoflt_l | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"_atodbl, _atodbl_l, _atoldbl, _atoldbl_l, _atoflt, _atoflt_l | Microsoft Docs","pos":[0,77]}]},{"pos":[1541,1601],"content":"_atodbl, _atodbl_l, _atoldbl, _atoldbl_l, _atoflt, _atoflt_l","linkify":"_atodbl, _atodbl_l, _atoldbl, _atoldbl_l, _atoflt, _atoflt_l","nodes":[{"content":"_atodbl, _atodbl_l, _atoldbl, _atoldbl_l, _atoflt, _atoflt_l","pos":[0,60]}]},{"pos":[1602,1692],"content":"Converts a string to a double (<ph id=\"ph1\">`_atodbl`</ph>), long double (<ph id=\"ph2\">`_atoldbl`</ph>), or float (<ph id=\"ph3\">`_atoflt`</ph>).","source":"Converts a string to a double (`_atodbl`), long double (`_atoldbl`), or float (`_atoflt`)."},{"pos":[1701,1707],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[2185,2195],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"The double, long double, or float value that's produced by converting the string to a floating-point value.","pos":[2210,2317]},{"content":"These values are wrapped in a structure.","pos":[2318,2358]},{"content":"The string to be parsed to convert into a floating-point value.","pos":[2374,2437]},{"content":"The locale to use.","pos":[2456,2474]},{"pos":[2483,2495],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Returns 0 if successful.","pos":[2499,2523]},{"content":"Possible error codes are <ph id=\"ph1\">`_UNDERFLOW`</ph> or <ph id=\"ph2\">`_OVERFLOW`</ph>, which are defined in the header file Math.h.","pos":[2524,2622],"source":" Possible error codes are `_UNDERFLOW` or `_OVERFLOW`, which are defined in the header file Math.h."},{"pos":[2631,2638],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"These functions convert a string to a floating-point value.","pos":[2642,2701]},{"content":"The difference between these functions and the <ph id=\"ph1\">`atof`</ph> family of functions is that these functions do not generate floating-point code and do not cause hardware exceptions.","pos":[2702,2873],"source":" The difference between these functions and the `atof` family of functions is that these functions do not generate floating-point code and do not cause hardware exceptions."},{"content":"Instead, error conditions are reported as error codes.","pos":[2874,2928]},{"pos":[2935,3063],"content":"If a string does not have a valid interpretation as a floating-point value, <ph id=\"ph1\">`value`</ph> is set to zero and the return value is zero.","source":"If a string does not have a valid interpretation as a floating-point value, `value` is set to zero and the return value is zero."},{"pos":[3070,3279],"content":"The versions of these functions that have the <ph id=\"ph1\">`_l`</ph> suffix are identical the versions that don't have the suffix, except that they use the locale parameter that's passed in instead of the current thread locale.","source":"The versions of these functions that have the `_l` suffix are identical the versions that don't have the suffix, except that they use the locale parameter that's passed in instead of the current thread locale."},{"pos":[3288,3300],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"content":"Routines","pos":[3307,3315]},{"content":"Required header","pos":[3316,3331]},{"content":"<ph id=\"ph1\">`_atodbl`</ph>, <ph id=\"ph2\">`_atoldbl`</ph>, <ph id=\"ph3\">`_atoflt`</ph>","pos":[3377,3409],"source":"`_atodbl`, `_atoldbl`, `_atoflt`"},{"content":"<ph id=\"ph1\">`_atodbl_l`</ph>, <ph id=\"ph2\">`_atoldbl_l`</ph>, <ph id=\"ph3\">`_atoflt_l`</ph>","pos":[3422,3460],"source":"`_atodbl_l`, `_atoldbl_l`, `_atoflt_l`"},{"content":"<ph id=\"ph1\">\\&lt;</ph>stdlib.h&gt;","pos":[3461,3472],"source":"\\<stdlib.h>"},{"pos":[3482,3489],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[4662,4670],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Data Conversion<ept id=\"p1\">](../../c-runtime-library/data-conversion.md)</ept><ph id=\"ph1\"> </ph>","pos":[4674,4736],"source":"[Data Conversion](../../c-runtime-library/data-conversion.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Floating-Point Support<ept id=\"p1\">](../../c-runtime-library/floating-point-support.md)</ept><ph id=\"ph1\"> </ph>","pos":[4739,4816],"source":" [Floating-Point Support](../../c-runtime-library/floating-point-support.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Locale<ept id=\"p1\">](../../c-runtime-library/locale.md)</ept><ph id=\"ph1\"> </ph>","pos":[4819,4864],"source":" [Locale](../../c-runtime-library/locale.md) "},{"content":"<bpt id=\"p1\"> [</bpt>atof, _atof_l, _wtof, _wtof_l<ept id=\"p1\">](../../c-runtime-library/reference/atof-atof-l-wtof-wtof-l.md)</ept>","pos":[4867,4961],"source":" [atof, _atof_l, _wtof, _wtof_l](../../c-runtime-library/reference/atof-atof-l-wtof-wtof-l.md)"}],"content":"---\ntitle: \"_atodbl, _atodbl_l, _atoldbl, _atoldbl_l, _atoflt, _atoflt_l | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\napiname: \n  - \"_atoldbl\"\n  - \"_atoldbl_l\"\n  - \"_atodbl\"\n  - \"_atoflt\"\n  - \"_atoflt_l\"\n  - \"_atodbl_l\"\napilocation: \n  - \"msvcrt.dll\"\n  - \"msvcr80.dll\"\n  - \"msvcr90.dll\"\n  - \"msvcr100.dll\"\n  - \"msvcr100_clr0400.dll\"\n  - \"msvcr110.dll\"\n  - \"msvcr110_clr0400.dll\"\n  - \"msvcr120.dll\"\n  - \"msvcr120_clr0400.dll\"\n  - \"ucrtbase.dll\"\n  - \"api-ms-win-crt-convert-l1-1-0.dll\"\napitype: \"DLLExport\"\nf1_keywords: \n  - \"_atoflt\"\n  - \"_atoflt_l\"\n  - \"atodbl_l\"\n  - \"atoflt_l\"\n  - \"_atoldbl\"\n  - \"_atoldbl_l\"\n  - \"atodbl\"\n  - \"_atodbl_l\"\n  - \"atoldbl\"\n  - \"atoflt\"\n  - \"atoldbl_l\"\n  - \"_atodbl\"\ndev_langs: \n  - \"C++\"\n  - \"C\"\nhelpviewer_keywords: \n  - \"_atodbl function\"\n  - \"_atoldbl_l function\"\n  - \"atoflt function\"\n  - \"atoflt_l function\"\n  - \"atoldbl function\"\n  - \"_atoldbl function\"\n  - \"atodbl_l function\"\n  - \"_atoflt_l function\"\n  - \"atoldbl_l function\"\n  - \"atodbl function\"\n  - \"string conversion, to floating point values\"\n  - \"_atoflt function\"\n  - \"_atodbl_l function\"\nms.assetid: 2d2530f4-4bd4-42e3-8083-f2d2fbc8432a\ncaps.latest.revision: 22\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"ru-ru\"\n  - \"zh-cn\"\n  - \"zh-tw\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"tr-tr\"\n---\n# _atodbl, _atodbl_l, _atoldbl, _atoldbl_l, _atoflt, _atoflt_l\nConverts a string to a double (`_atodbl`), long double (`_atoldbl`), or float (`_atoflt`).  \n  \n## Syntax  \n  \n```  \nint _atodbl(  \n   _CRT_DOUBLE * value,  \n   char * str  \n);  \nint _atodbl_l (  \n   _CRT_DOUBLE * value,  \n   char * str,  \n   locale_t locale  \n);  \nint _atoldbl(  \n   _LDOUBLE * value,  \n   char * str  \n);  \nint _atoldbl_l (  \n   _LDOUBLE * value,  \n   char * str,  \n   locale_t locale  \n);  \nint _atoflt(  \n   _CRT_FLOAT * value,  \n   const char * str  \n);  \nint _atoflt_l(  \n   _CRT_FLOAT * value,  \n   const char * str,  \n   locale_t locale  \n);  \n```  \n  \n#### Parameters  \n `value`  \n The double, long double, or float value that's produced by converting the string to a floating-point value. These values are wrapped in a structure.  \n  \n `str`  \n The string to be parsed to convert into a floating-point value.  \n  \n `locale`  \n The locale to use.  \n  \n## Return Value  \n Returns 0 if successful. Possible error codes are `_UNDERFLOW` or `_OVERFLOW`, which are defined in the header file Math.h.  \n  \n## Remarks  \n These functions convert a string to a floating-point value. The difference between these functions and the `atof` family of functions is that these functions do not generate floating-point code and do not cause hardware exceptions. Instead, error conditions are reported as error codes.  \n  \n If a string does not have a valid interpretation as a floating-point value, `value` is set to zero and the return value is zero.  \n  \n The versions of these functions that have the `_l` suffix are identical the versions that don't have the suffix, except that they use the locale parameter that's passed in instead of the current thread locale.  \n  \n## Requirements  \n  \n|Routines|Required header|  \n|--------------|---------------------|  \n|`_atodbl`, `_atoldbl`, `_atoflt`<br /><br /> `_atodbl_l`, `_atoldbl_l`, `_atoflt_l`|\\<stdlib.h>|  \n  \n## Example  \n  \n```  \n// crt_atodbl.c  \n// Uses _atodbl to convert a string to a double precision  \n// floating point value.  \n  \n#include <stdlib.h>  \n#include <stdio.h>  \n  \nint main()  \n{  \n   char str1[256] = \"3.141592654\";  \n   char abc[256] = \"abc\";  \n   char oflow[256] = \"1.0E+5000\";  \n   _CRT_DOUBLE dblval;  \n   _CRT_FLOAT fltval;  \n   int retval;  \n  \n   retval = _atodbl(&dblval, str1);  \n  \n   printf(\"Double value: %lf\\n\", dblval.x);  \n   printf(\"Return value: %d\\n\\n\", retval);  \n  \n   retval = _atoflt(&fltval, str1);  \n   printf(\"Float value: %f\\n\", fltval.f);  \n   printf(\"Return value: %d\\n\\n\", retval);  \n  \n   // A non-floating point value: returns 0.  \n   retval = _atoflt(&fltval, abc);  \n   printf(\"Float value: %f\\n\", fltval.f);  \n   printf(\"Return value: %d\\n\\n\", retval);  \n  \n   // Overflow.  \n   retval = _atoflt(&fltval, oflow);  \n   printf(\"Float value: %f\\n\", fltval.f);  \n   printf(\"Return value: %d\\n\\n\", retval);  \n  \n   return 0;  \n}  \n```  \n  \n```Output  \nDouble value: 3.141593  \nReturn value: 0  \n  \nFloat value: 3.141593  \nReturn value: 0  \n  \nFloat value: 0.000000  \nReturn value: 0  \n  \nFloat value: 1.#INF00  \nReturn value: 3  \n```  \n  \n## See Also  \n [Data Conversion](../../c-runtime-library/data-conversion.md)   \n [Floating-Point Support](../../c-runtime-library/floating-point-support.md)   \n [Locale](../../c-runtime-library/locale.md)   \n [atof, _atof_l, _wtof, _wtof_l](../../c-runtime-library/reference/atof-atof-l-wtof-wtof-l.md)"}