{"nodes":[{"pos":[12,53],"content":"_mbclen, mblen, _mblen_l | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"_mbclen, mblen, _mblen_l | Microsoft Docs","pos":[0,41]}]},{"pos":[1202,1226],"content":"_mbclen, mblen, _mblen_l","linkify":"_mbclen, mblen, _mblen_l","nodes":[{"content":"_mbclen, mblen, _mblen_l","pos":[0,24]}]},{"content":"Gets the length and determines the validity of a multibyte character.","pos":[1227,1296]},{"pos":[1304,1524],"content":"[!IMPORTANT]\n This API cannot be used in applications that execute in the Windows Runtime. For more information, see [CRT functions not supported with /ZW](http://msdn.microsoft.com/library/windows/apps/jj606124.aspx).","leadings":["","> "],"nodes":[{"content":" This API cannot be used in applications that execute in the Windows Runtime. For more information, see [CRT functions not supported with /ZW](http://msdn.microsoft.com/library/windows/apps/jj606124.aspx).","pos":[13,218],"nodes":[{"content":"This API cannot be used in applications that execute in the Windows Runtime.","pos":[1,77]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>CRT functions not supported with /ZW<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/apps/jj606124.aspx)</ept>.","pos":[78,205],"source":" For more information, see [CRT functions not supported with /ZW](http://msdn.microsoft.com/library/windows/apps/jj606124.aspx)."}]}]},{"pos":[1533,1539],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[1764,1774],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Multibyte character.","pos":[1785,1805]},{"content":"Address of a multibyte-character byte sequence.","pos":[1823,1870]},{"content":"Number of bytes to check.","pos":[1888,1913]},{"content":"Locale to use.","pos":[1932,1946]},{"pos":[1955,1967],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"<ph id=\"ph1\">`_mbclen`</ph> returns 1 or 2, according to whether the multibyte character <ph id=\"ph2\">`c`</ph> is 1 or 2 bytes long.","pos":[1971,2067],"source":"`_mbclen` returns 1 or 2, according to whether the multibyte character `c` is 1 or 2 bytes long."},{"content":"There is no error return for <ph id=\"ph1\">`_mbclen`</ph>.","pos":[2068,2107],"source":" There is no error return for `_mbclen`."},{"content":"If <ph id=\"ph1\">`mbstr`</ph> is not <ph id=\"ph2\">`NULL`</ph>, <ph id=\"ph3\">`mblen`</ph> returns the length, in bytes, of the multibyte character.","pos":[2108,2199],"source":" If `mbstr` is not `NULL`, `mblen` returns the length, in bytes, of the multibyte character."},{"content":"If <ph id=\"ph1\">`mbstr`</ph> is <ph id=\"ph2\">`NULL`</ph> or it points to the wide-character null character, <ph id=\"ph3\">`mblen`</ph> returns 0.","pos":[2200,2290],"source":" If `mbstr` is `NULL` or it points to the wide-character null character, `mblen` returns 0."},{"content":"If the object that <ph id=\"ph1\">`mbstr`</ph> points to does not form a valid multibyte character within the first <ph id=\"ph2\">`count`</ph> characters, <ph id=\"ph3\">`mblen`</ph> returns –1.","pos":[2291,2426],"source":" If the object that `mbstr` points to does not form a valid multibyte character within the first `count` characters, `mblen` returns –1."},{"pos":[2435,2442],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The <ph id=\"ph1\">`_mbclen`</ph> function returns the length, in bytes, of the multibyte character <ph id=\"ph2\">`c`</ph>.","pos":[2446,2530],"source":"The `_mbclen` function returns the length, in bytes, of the multibyte character `c`."},{"content":"If <ph id=\"ph1\">`c`</ph> does not point to the lead byte of a multibyte character as determined by an implicit call to <ph id=\"ph2\">`_ismbblead`</ph>, the result of <ph id=\"ph3\">`_mbclen`</ph> is unpredictable.","pos":[2531,2687],"source":" If `c` does not point to the lead byte of a multibyte character as determined by an implicit call to `_ismbblead`, the result of `_mbclen` is unpredictable."},{"content":"<ph id=\"ph1\">`mblen`</ph> returns the length in bytes of <ph id=\"ph2\">`mbstr`</ph> if it is a valid multibyte character and determines multibyte-character validity associated with the code page.","pos":[2694,2852],"source":"`mblen` returns the length in bytes of `mbstr` if it is a valid multibyte character and determines multibyte-character validity associated with the code page."},{"content":"<ph id=\"ph1\">`mblen`</ph> examines <ph id=\"ph2\">`count`</ph> or fewer bytes contained in <ph id=\"ph3\">`mbstr`</ph>, but not more than <ph id=\"ph4\">`MB_CUR_MAX`</ph> bytes.","pos":[2853,2952],"source":"`mblen` examines `count` or fewer bytes contained in `mbstr`, but not more than `MB_CUR_MAX` bytes."},{"content":"The output value is affected by the setting of the <ph id=\"ph1\">`LC_CTYPE`</ph> category setting of the locale; see <bpt id=\"p1\">[</bpt>setlocale<ept id=\"p1\">](../../c-runtime-library/reference/setlocale-wsetlocale.md)</ept> for more information.","pos":[2959,3149],"source":"The output value is affected by the setting of the `LC_CTYPE` category setting of the locale; see [setlocale](../../c-runtime-library/reference/setlocale-wsetlocale.md) for more information."},{"content":"The versions of these functions without the <ph id=\"ph1\">`_l`</ph> suffix use the current locale for this locale-dependent behavior; the versions with the <ph id=\"ph2\">`_l`</ph> suffix are identical except that they use the locale parameter passed in instead.","pos":[3150,3373],"source":" The versions of these functions without the `_l` suffix use the current locale for this locale-dependent behavior; the versions with the `_l` suffix are identical except that they use the locale parameter passed in instead."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Locale<ept id=\"p1\">](../../c-runtime-library/locale.md)</ept>.","pos":[3374,3444],"source":" For more information, see [Locale](../../c-runtime-library/locale.md)."},{"pos":[3454,3483],"content":"Generic-Text Routine Mappings","linkify":"Generic-Text Routine Mappings","nodes":[{"content":"Generic-Text Routine Mappings","pos":[0,29]}]},{"content":"Tchar.h routine","pos":[3490,3505]},{"content":"_UNICODE and _MBCS not defined","pos":[3506,3536]},{"content":"_MBCS defined","pos":[3537,3550]},{"content":"_UNICODE defined","pos":[3551,3567]},{"content":"Maps to macro or inline function","pos":[3691,3723]},{"content":"Maps to macro or inline function","pos":[3734,3766]},{"pos":[3776,3788],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"content":"Routine","pos":[3795,3802]},{"content":"Required header","pos":[3803,3818]},{"content":"<ph id=\"ph1\">\\&lt;</ph>mbstring.h&gt;","pos":[3873,3886],"source":"\\<mbstring.h>"},{"content":"<ph id=\"ph1\">\\&lt;</ph>stdlib.h&gt;","pos":[3899,3910],"source":"\\<stdlib.h>"},{"content":"<ph id=\"ph1\">\\&lt;</ph>stdlib.h&gt;","pos":[3926,3937],"source":"\\<stdlib.h>"},{"pos":[3945,4043],"content":"For more compatibility information, see <bpt id=\"p1\">[</bpt>Compatibility<ept id=\"p1\">](../../c-runtime-library/compatibility.md)</ept>.","source":"For more compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md)."},{"pos":[4052,4059],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[4817,4823],"content":"Output","linkify":"Output","nodes":[{"content":"Output","pos":[0,6]}]},{"pos":[5053,5078],"content":".NET Framework Equivalent","linkify":".NET Framework Equivalent","nodes":[{"content":".NET Framework Equivalent","pos":[0,25]}]},{"content":"Not applicable.","pos":[5082,5097]},{"content":"To call the standard C function, use <ph id=\"ph1\">`PInvoke`</ph>.","pos":[5098,5145],"source":" To call the standard C function, use `PInvoke`."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Platform Invoke Examples<ept id=\"p1\">](http://msdn.microsoft.com/Library/15926806-f0b7-487e-93a6-4e9367ec689f)</ept>.","pos":[5146,5271],"source":" For more information, see [Platform Invoke Examples](http://msdn.microsoft.com/Library/15926806-f0b7-487e-93a6-4e9367ec689f)."},{"pos":[5280,5288],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Character Classification<ept id=\"p1\">](../../c-runtime-library/character-classification.md)</ept><ph id=\"ph1\"> </ph>","pos":[5292,5372],"source":"[Character Classification](../../c-runtime-library/character-classification.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Locale<ept id=\"p1\">](../../c-runtime-library/locale.md)</ept><ph id=\"ph1\"> </ph>","pos":[5375,5420],"source":" [Locale](../../c-runtime-library/locale.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Interpretation of Multibyte-Character Sequences<ept id=\"p1\">](../../c-runtime-library/interpretation-of-multibyte-character-sequences.md)</ept><ph id=\"ph1\"> </ph>","pos":[5423,5550],"source":" [Interpretation of Multibyte-Character Sequences](../../c-runtime-library/interpretation-of-multibyte-character-sequences.md) "},{"content":"<bpt id=\"p1\"> [</bpt>_mbccpy, _mbccpy_l<ept id=\"p1\">](../../c-runtime-library/reference/mbccpy-mbccpy-l.md)</ept><ph id=\"ph1\"> </ph>","pos":[5553,5629],"source":" [_mbccpy, _mbccpy_l](../../c-runtime-library/reference/mbccpy-mbccpy-l.md) "},{"content":"<bpt id=\"p1\"> [</bpt>strlen, wcslen, _mbslen, _mbslen_l, _mbstrlen, _mbstrlen_l<ept id=\"p1\">](../../c-runtime-library/reference/strlen-wcslen-mbslen-mbslen-l-mbstrlen-mbstrlen-l.md)</ept>","pos":[5632,5781],"source":" [strlen, wcslen, _mbslen, _mbslen_l, _mbstrlen, _mbstrlen_l](../../c-runtime-library/reference/strlen-wcslen-mbslen-mbslen-l-mbstrlen-mbstrlen-l.md)"}],"content":"---\ntitle: \"_mbclen, mblen, _mblen_l | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\napiname: \n  - \"_mbclen\"\n  - \"mblen\"\n  - \"_mblen_l\"\napilocation: \n  - \"msvcrt.dll\"\n  - \"msvcr80.dll\"\n  - \"msvcr90.dll\"\n  - \"msvcr100.dll\"\n  - \"msvcr100_clr0400.dll\"\n  - \"msvcr110.dll\"\n  - \"msvcr110_clr0400.dll\"\n  - \"msvcr120.dll\"\n  - \"msvcr120_clr0400.dll\"\n  - \"ucrtbase.dll\"\n  - \"api-ms-win-crt-multibyte-l1-1-0.dll\"\n  - \"api-ms-win-crt-string-l1-1-0.dll\"\napitype: \"DLLExport\"\nf1_keywords: \n  - \"mblen\"\n  - \"ftclen\"\n  - \"_mbclen\"\n  - \"tclen\"\n  - \"_ftclen\"\n  - \"_tclen\"\n  - \"mbclen\"\ndev_langs: \n  - \"C++\"\n  - \"C\"\nhelpviewer_keywords: \n  - \"tclen function\"\n  - \"_mblen_l function\"\n  - \"_tclen function\"\n  - \"mblen_l function\"\n  - \"_mbclen function\"\n  - \"mbclen function\"\n  - \"mblen function\"\nms.assetid: d5eb92a0-b7a3-464a-aaf7-9890a8e3ed70\ncaps.latest.revision: 24\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# _mbclen, mblen, _mblen_l\nGets the length and determines the validity of a multibyte character.  \n  \n> [!IMPORTANT]\n>  This API cannot be used in applications that execute in the Windows Runtime. For more information, see [CRT functions not supported with /ZW](http://msdn.microsoft.com/library/windows/apps/jj606124.aspx).  \n  \n## Syntax  \n  \n```  \nsize_t _mbclen(  \n   const unsigned char *c   \n);  \nint mblen(  \n   const char *mbstr,  \n   size_t count   \n);  \nint _mblen_l(  \n   const char *mbstr,  \n   size_t count,  \n   _locale_t locale  \n);  \n```  \n  \n#### Parameters  \n `c`  \n Multibyte character.  \n  \n `mbstr`  \n Address of a multibyte-character byte sequence.  \n  \n `count`  \n Number of bytes to check.  \n  \n `locale`  \n Locale to use.  \n  \n## Return Value  \n `_mbclen` returns 1 or 2, according to whether the multibyte character `c` is 1 or 2 bytes long. There is no error return for `_mbclen`. If `mbstr` is not `NULL`, `mblen` returns the length, in bytes, of the multibyte character. If `mbstr` is `NULL` or it points to the wide-character null character, `mblen` returns 0. If the object that `mbstr` points to does not form a valid multibyte character within the first `count` characters, `mblen` returns –1.  \n  \n## Remarks  \n The `_mbclen` function returns the length, in bytes, of the multibyte character `c`. If `c` does not point to the lead byte of a multibyte character as determined by an implicit call to `_ismbblead`, the result of `_mbclen` is unpredictable.  \n  \n `mblen` returns the length in bytes of `mbstr` if it is a valid multibyte character and determines multibyte-character validity associated with the code page. `mblen` examines `count` or fewer bytes contained in `mbstr`, but not more than `MB_CUR_MAX` bytes.  \n  \n The output value is affected by the setting of the `LC_CTYPE` category setting of the locale; see [setlocale](../../c-runtime-library/reference/setlocale-wsetlocale.md) for more information. The versions of these functions without the `_l` suffix use the current locale for this locale-dependent behavior; the versions with the `_l` suffix are identical except that they use the locale parameter passed in instead. For more information, see [Locale](../../c-runtime-library/locale.md).  \n  \n### Generic-Text Routine Mappings  \n  \n|Tchar.h routine|_UNICODE and _MBCS not defined|_MBCS defined|_UNICODE defined|  \n|---------------------|--------------------------------------|--------------------|-----------------------|  \n|`_tclen`|Maps to macro or inline function|`_mbclen`|Maps to macro or inline function|  \n  \n## Requirements  \n  \n|Routine|Required header|  \n|-------------|---------------------|  \n|`_mbclen`|\\<mbstring.h>|  \n|`mblen`|\\<stdlib.h>|  \n|`_mblen_l`|\\<stdlib.h>|  \n  \n For more compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md).  \n  \n## Example  \n  \n```  \n// crt_mblen.c  \n/* illustrates the behavior of the mblen function  \n */  \n  \n#include <stdlib.h>  \n#include <stdio.h>  \n  \nint main( void )  \n{  \n    int      i;  \n    char    *pmbc = (char *)malloc( sizeof( char ) );  \n    wchar_t  wc   = L'a';  \n  \n    printf( \"Convert wide character to multibyte character:\\n\" );  \n    wctomb_s( &i, pmbc, sizeof(char), wc );  \n    printf( \"  Characters converted: %u\\n\", i );  \n    printf( \"  Multibyte character: %x\\n\\n\", *pmbc );  \n  \n    i = mblen( pmbc, MB_CUR_MAX );  \n    printf( \"Length in bytes of multibyte character %x: %u\\n\", *pmbc, i );  \n  \n    pmbc = NULL;  \n    i = mblen( pmbc, MB_CUR_MAX );  \n    printf( \"Length in bytes of NULL multibyte character %x: %u\\n\", pmbc, i );  \n}  \n```  \n  \n## Output  \n  \n```  \nConvert wide character to multibyte character:  \n  Characters converted: 1  \n  Multibyte character: 61  \n  \nLength in bytes of multibyte character 61: 1  \nLength in bytes of NULL multibyte character 0: 0  \n```  \n  \n## .NET Framework Equivalent  \n Not applicable. To call the standard C function, use `PInvoke`. For more information, see [Platform Invoke Examples](http://msdn.microsoft.com/Library/15926806-f0b7-487e-93a6-4e9367ec689f).  \n  \n## See Also  \n [Character Classification](../../c-runtime-library/character-classification.md)   \n [Locale](../../c-runtime-library/locale.md)   \n [Interpretation of Multibyte-Character Sequences](../../c-runtime-library/interpretation-of-multibyte-character-sequences.md)   \n [_mbccpy, _mbccpy_l](../../c-runtime-library/reference/mbccpy-mbccpy-l.md)   \n [strlen, wcslen, _mbslen, _mbslen_l, _mbstrlen, _mbstrlen_l](../../c-runtime-library/reference/strlen-wcslen-mbslen-mbslen-l-mbstrlen-mbstrlen-l.md)"}