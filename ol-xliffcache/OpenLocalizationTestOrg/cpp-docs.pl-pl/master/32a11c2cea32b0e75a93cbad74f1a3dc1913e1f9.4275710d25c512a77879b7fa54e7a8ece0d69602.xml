{"nodes":[{"pos":[12,57],"content":"Writing an Exception Handler | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Writing an Exception Handler | Microsoft Docs","pos":[0,45]}]},{"content":"Writing an Exception Handler","pos":[671,699]},{"content":"Exception handlers are typically used to respond to specific errors.","pos":[700,768]},{"content":"You can use the exception-handling syntax to filter out all exceptions other than those you know how to handle.","pos":[769,880]},{"content":"Other exceptions should be passed to other handlers (possibly in the run-time library or the operating system) written to look for those specific exceptions.","pos":[881,1038]},{"content":"Exception handlers use the try-except statement.","pos":[1045,1093]},{"content":"What do you want to know more about?","pos":[1102,1138]},{"content":"The try-except statement","pos":[1149,1173]},{"content":"Writing an exception filter","pos":[1217,1244]},{"content":"Raising software exceptions","pos":[1295,1322]},{"content":"Hardware exceptions","pos":[1373,1392]},{"content":"Restrictions on exception handlers","pos":[1435,1469]},{"content":"See Also","pos":[1525,1533]},{"content":"Structured Exception Handling (C/C++)","pos":[1538,1575]}],"content":"---\ntitle: \"Writing an Exception Handler | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"language-reference\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"structured exception handling, exception handlers\"\n  - \"exception handling, exception handlers\"\nms.assetid: 71473fee-f773-4a34-bf12-82a3af79579c\ncaps.latest.revision: 7\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Writing an Exception Handler\nException handlers are typically used to respond to specific errors. You can use the exception-handling syntax to filter out all exceptions other than those you know how to handle. Other exceptions should be passed to other handlers (possibly in the run-time library or the operating system) written to look for those specific exceptions.  \n  \n Exception handlers use the try-except statement.  \n  \n## What do you want to know more about?  \n  \n-   [The try-except statement](../cpp/try-except-statement.md)  \n  \n-   [Writing an exception filter](../cpp/writing-an-exception-filter.md)  \n  \n-   [Raising software exceptions](../cpp/raising-software-exceptions.md)  \n  \n-   [Hardware exceptions](../cpp/hardware-exceptions.md)  \n  \n-   [Restrictions on exception handlers](../cpp/restrictions-on-exception-handlers.md)  \n  \n## See Also  \n [Structured Exception Handling (C/C++)](../cpp/structured-exception-handling-c-cpp.md)"}