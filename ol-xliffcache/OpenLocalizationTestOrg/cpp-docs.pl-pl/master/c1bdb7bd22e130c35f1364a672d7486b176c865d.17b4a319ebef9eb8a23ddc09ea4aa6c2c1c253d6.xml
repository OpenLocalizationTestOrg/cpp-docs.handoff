{"nodes":[{"pos":[12,40],"content":"mbsrtowcs_s | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"mbsrtowcs_s | Microsoft Docs","pos":[0,28]}]},{"pos":[923,934],"content":"mbsrtowcs_s","linkify":"mbsrtowcs_s","nodes":[{"content":"mbsrtowcs_s","pos":[0,11]}]},{"content":"Convert a multibyte character string in the current locale to its wide character string representation.","pos":[935,1038]},{"content":"A version of <bpt id=\"p1\">[</bpt>mbsrtowcs<ept id=\"p1\">](../../c-runtime-library/reference/mbsrtowcs.md)</ept> with security enhancements as described in <bpt id=\"p2\">[</bpt>Security Features in the CRT<ept id=\"p2\">](../../c-runtime-library/security-features-in-the-crt.md)</ept>.","pos":[1039,1243],"source":" A version of [mbsrtowcs](../../c-runtime-library/reference/mbsrtowcs.md) with security enhancements as described in [Security Features in the CRT](../../c-runtime-library/security-features-in-the-crt.md)."},{"pos":[1252,1258],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[1649,1659],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[out] <ph id=\"ph1\">`pReturnValue`</ph>","pos":[1663,1683],"source":"[out] `pReturnValue`"},{"content":"The number of characters converted.","pos":[1687,1722]},{"content":"[out] <ph id=\"ph1\">`wcstr`</ph>","pos":[1729,1742],"source":"[out] `wcstr`"},{"content":"Address of buffer to store the resulting converted wide character string.","pos":[1746,1819]},{"content":"[out] <ph id=\"ph1\">`sizeInWords`</ph>","pos":[1826,1845],"source":"[out] `sizeInWords`"},{"content":"The size of <ph id=\"ph1\">`wcstr`</ph> in words (wide characters).","pos":[1849,1896],"source":" The size of `wcstr` in words (wide characters)."},{"content":"[in, out] <ph id=\"ph1\">`mbstr`</ph>","pos":[1903,1920],"source":"[in, out] `mbstr`"},{"content":"Indirect pointer to the location of the multibyte character string to be converted.","pos":[1924,2007]},{"content":"[in] <ph id=\"ph1\">`count`</ph>","pos":[2014,2026],"source":"[in] `count`"},{"content":"The maximum number of wide characters to store in the <ph id=\"ph1\">`wcstr`</ph> buffer, not including the terminating null, or <bpt id=\"p1\">[</bpt>_TRUNCATE<ept id=\"p1\">](../../c-runtime-library/truncate.md)</ept>.","pos":[2030,2188],"source":" The maximum number of wide characters to store in the `wcstr` buffer, not including the terminating null, or [_TRUNCATE](../../c-runtime-library/truncate.md)."},{"content":"[in, out] <ph id=\"ph1\">`mbstate`</ph>","pos":[2195,2214],"source":"[in, out] `mbstate`"},{"content":"A pointer to an <ph id=\"ph1\">`mbstate_t`</ph> conversion state object.","pos":[2218,2270],"source":" A pointer to an `mbstate_t` conversion state object."},{"content":"If this value is a null pointer, a static internal conversion state object is used.","pos":[2271,2354]},{"content":"Because the internal <ph id=\"ph1\">`mbstate_t`</ph> object is not thread-safe, we recommend that you always pass your own <ph id=\"ph2\">`mbstate`</ph> parameter.","pos":[2355,2478],"source":" Because the internal `mbstate_t` object is not thread-safe, we recommend that you always pass your own `mbstate` parameter."},{"pos":[2487,2499],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Zero if conversion is successful, or an error code on failure.","pos":[2503,2565]},{"content":"Error condition","pos":[2572,2587]},{"pos":[2588,2612],"content":"Return value and <ph id=\"ph1\">`errno`</ph>","source":"Return value and `errno`"},{"pos":[2674,2721],"content":"<ph id=\"ph1\">`wcstr`</ph> is a null pointer and <ph id=\"ph2\">`sizeInWords`</ph> &gt; 0","source":"`wcstr` is a null pointer and `sizeInWords` > 0"},{"pos":[2735,2760],"content":"<ph id=\"ph1\">`mbstr`</ph> is a null pointer","source":"`mbstr` is a null pointer"},{"pos":[2774,2889],"content":"The string indirectly pointed to by <ph id=\"ph1\">`mbstr`</ph> contains a multibyte sequence that is not valid for the current locale.","source":"The string indirectly pointed to by `mbstr` contains a multibyte sequence that is not valid for the current locale."},{"pos":[2903,3037],"content":"The destination buffer is too small to contain the converted string (unless <ph id=\"ph1\">`count`</ph> is <ph id=\"ph2\">`_TRUNCATE`</ph>; for more information, see Remarks)","source":"The destination buffer is too small to contain the converted string (unless `count` is `_TRUNCATE`; for more information, see Remarks)"},{"content":"If any one of these conditions occurs, the invalid parameter exception is invoked as described in <bpt id=\"p1\">[</bpt>Parameter Validation<ept id=\"p1\">](../../c-runtime-library/parameter-validation.md)</ept> .","pos":[3054,3225],"source":"If any one of these conditions occurs, the invalid parameter exception is invoked as described in [Parameter Validation](../../c-runtime-library/parameter-validation.md) ."},{"content":"If execution is allowed to continue, the function returns an error code and sets <ph id=\"ph1\">`errno`</ph> as indicated in the table.","pos":[3226,3341],"source":" If execution is allowed to continue, the function returns an error code and sets `errno` as indicated in the table."},{"pos":[3350,3357],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The <ph id=\"ph1\">`mbsrtowcs_s`</ph> function converts a string of multibyte characters indirectly pointed to by <ph id=\"ph2\">`mbstr`</ph> into wide characters stored in the buffer pointed to by <ph id=\"ph3\">`wcstr`</ph>, by using the conversion state contained in <ph id=\"ph4\">`mbstate`</ph>.","pos":[3361,3581],"source":"The `mbsrtowcs_s` function converts a string of multibyte characters indirectly pointed to by `mbstr` into wide characters stored in the buffer pointed to by `wcstr`, by using the conversion state contained in `mbstate`."},{"content":"The conversion will continue for each character until one of these conditions is met:","pos":[3582,3667]},{"content":"A multibyte null character is encountered","pos":[3677,3718]},{"content":"An invalid multibyte character is encountered","pos":[3728,3773]},{"pos":[3783,3857],"content":"The number of wide characters stored in the <ph id=\"ph1\">`wcstr`</ph> buffer equals <ph id=\"ph2\">`count`</ph>.","source":"The number of wide characters stored in the `wcstr` buffer equals `count`."},{"pos":[3864,3985],"content":"The destination string <ph id=\"ph1\">`wcstr`</ph> is always null-terminated, even in the case of an error, unless <ph id=\"ph2\">`wcstr`</ph> is a null pointer.","source":"The destination string `wcstr` is always null-terminated, even in the case of an error, unless `wcstr` is a null pointer."},{"pos":[3992,4207],"content":"If <ph id=\"ph1\">`count`</ph> is the special value <bpt id=\"p1\">[</bpt>_TRUNCATE<ept id=\"p1\">](../../c-runtime-library/truncate.md)</ept>, <ph id=\"ph2\">`mbsrtowcs_s`</ph> converts as much of the string as will fit into the destination buffer, while still leaving room for a null terminator.","source":"If `count` is the special value [_TRUNCATE](../../c-runtime-library/truncate.md), `mbsrtowcs_s` converts as much of the string as will fit into the destination buffer, while still leaving room for a null terminator."},{"content":"If <ph id=\"ph1\">`mbsrtowcs_s`</ph> successfully converts the source string, it puts the size in wide characters of the converted string and the null terminator into <ph id=\"ph2\">`*``pReturnValue`</ph>, provided <ph id=\"ph3\">`pReturnValue`</ph> is not a null pointer.","pos":[4214,4426],"source":"If `mbsrtowcs_s` successfully converts the source string, it puts the size in wide characters of the converted string and the null terminator into `*``pReturnValue`, provided `pReturnValue` is not a null pointer."},{"content":"This occurs even if the <ph id=\"ph1\">`wcstr`</ph> argument is a null pointer and lets you determine the required buffer size.","pos":[4427,4534],"source":" This occurs even if the `wcstr` argument is a null pointer and lets you determine the required buffer size."},{"content":"Note that if <ph id=\"ph1\">`wcstr`</ph> is a null pointer, <ph id=\"ph2\">`count`</ph> is ignored.","pos":[4535,4594],"source":" Note that if `wcstr` is a null pointer, `count` is ignored."},{"content":"If <ph id=\"ph1\">`wcstr`</ph> is not a null pointer, the pointer object pointed to by <ph id=\"ph2\">`mbstr`</ph> is assigned a null pointer if conversion stopped because a terminating null character was reached.","pos":[4601,4774],"source":"If `wcstr` is not a null pointer, the pointer object pointed to by `mbstr` is assigned a null pointer if conversion stopped because a terminating null character was reached."},{"content":"Otherwise, it is assigned the address just past the last multibyte character converted, if any.","pos":[4775,4870]},{"content":"This allows a subsequent function call to restart conversion where this call stopped.","pos":[4871,4956]},{"content":"If <ph id=\"ph1\">`mbstate`</ph> is a null pointer, the library internal <ph id=\"ph2\">`mbstate_t`</ph> conversion state static object is used.","pos":[4963,5067],"source":"If `mbstate` is a null pointer, the library internal `mbstate_t` conversion state static object is used."},{"content":"Because this internal static object is not thread-safe, we recommend that you pass your own <ph id=\"ph1\">`mbstate`</ph> value.","pos":[5068,5176],"source":" Because this internal static object is not thread-safe, we recommend that you pass your own `mbstate` value."},{"pos":[5183,5410],"content":"If <ph id=\"ph1\">`mbsrtowcs_s`</ph> encounters a multibyte character that is not valid in the current locale, it puts -1 in <ph id=\"ph2\">`*``pReturnValue`</ph>, sets the destination buffer <ph id=\"ph3\">`wcstr`</ph> to an empty string, sets <ph id=\"ph4\">`errno`</ph> to <ph id=\"ph5\">`EILSEQ`</ph>, and returns <ph id=\"ph6\">`EILSEQ`</ph>.","source":"If `mbsrtowcs_s` encounters a multibyte character that is not valid in the current locale, it puts -1 in `*``pReturnValue`, sets the destination buffer `wcstr` to an empty string, sets `errno` to `EILSEQ`, and returns `EILSEQ`."},{"content":"If the sequences pointed to by <ph id=\"ph1\">`mbstr`</ph> and <ph id=\"ph2\">`wcstr`</ph> overlap, the behavior of <ph id=\"ph3\">`mbsrtowcs_s`</ph> is undefined.","pos":[5417,5520],"source":"If the sequences pointed to by `mbstr` and `wcstr` overlap, the behavior of `mbsrtowcs_s` is undefined."},{"content":"<ph id=\"ph1\">`mbsrtowcs_s`</ph> is affected by the LC_TYPE category of the current locale.","pos":[5521,5593],"source":"`mbsrtowcs_s` is affected by the LC_TYPE category of the current locale."},{"pos":[5601,5747],"content":"[!IMPORTANT]\n Ensure that `wcstr` and `mbstr` do not overlap, and that `count` correctly reflects the number of multibyte characters to convert.","leadings":["","> "],"nodes":[{"content":"Ensure that <ph id=\"ph1\">`wcstr`</ph> and <ph id=\"ph2\">`mbstr`</ph> do not overlap, and that <ph id=\"ph3\">`count`</ph> correctly reflects the number of multibyte characters to convert.","pos":[14,144],"source":" Ensure that `wcstr` and `mbstr` do not overlap, and that `count` correctly reflects the number of multibyte characters to convert."}]},{"content":"The <ph id=\"ph1\">`mbsrtowcs_s`</ph> function differs from <bpt id=\"p1\">[</bpt>mbstowcs_s, _mbstowcs_s_l<ept id=\"p1\">](../../c-runtime-library/reference/mbstowcs-s-mbstowcs-s-l.md)</ept> by its restartability.","pos":[5754,5906],"source":"The `mbsrtowcs_s` function differs from [mbstowcs_s, _mbstowcs_s_l](../../c-runtime-library/reference/mbstowcs-s-mbstowcs-s-l.md) by its restartability."},{"content":"The conversion state is stored in <ph id=\"ph1\">`mbstate`</ph> for subsequent calls to the same or other restartable functions.","pos":[5907,6015],"source":" The conversion state is stored in `mbstate` for subsequent calls to the same or other restartable functions."},{"content":"Results are undefined when mixing the use of restartable and nonrestartable functions.","pos":[6016,6102]},{"content":"For example, an application should use <ph id=\"ph1\">`mbsrlen`</ph> instead of <ph id=\"ph2\">`mbslen`</ph>, if a subsequent call to <ph id=\"ph3\">`mbsrtowcs_s`</ph> is used instead of <ph id=\"ph4\">`mbstowcs_s.`</ph>","pos":[6103,6243],"source":" For example, an application should use `mbsrlen` instead of `mbslen`, if a subsequent call to `mbsrtowcs_s` is used instead of `mbstowcs_s.`"},{"content":"In C++, using this function is simplified by template overloads; the overloads can infer buffer length automatically (eliminating the requirement to specify a size argument) and they can automatically replace older, non-secure functions by using their newer, secure counterparts.","pos":[6250,6529]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Secure Template Overloads<ept id=\"p1\">](../../c-runtime-library/secure-template-overloads.md)</ept>.","pos":[6530,6638],"source":" For more information, see [Secure Template Overloads](../../c-runtime-library/secure-template-overloads.md)."},{"pos":[6647,6657],"content":"Exceptions","linkify":"Exceptions","nodes":[{"content":"Exceptions","pos":[0,10]}]},{"pos":[6661,6850],"content":"The <ph id=\"ph1\">`mbsrtowcs_s`</ph> function is multithread safe if no function in the current thread calls <ph id=\"ph2\">`setlocale`</ph> as long as this function is executing and the <ph id=\"ph3\">`mbstate`</ph> argument is not a null pointer.","source":"The `mbsrtowcs_s` function is multithread safe if no function in the current thread calls `setlocale` as long as this function is executing and the `mbstate` argument is not a null pointer."},{"pos":[6859,6884],"content":".NET Framework Equivalent","linkify":".NET Framework Equivalent","nodes":[{"content":".NET Framework Equivalent","pos":[0,25]}]},{"content":"Not applicable.","pos":[6888,6903]},{"content":"To call the standard C function, use <ph id=\"ph1\">`PInvoke`</ph>.","pos":[6904,6951],"source":" To call the standard C function, use `PInvoke`."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Platform Invoke Examples<ept id=\"p1\">](http://msdn.microsoft.com/Library/15926806-f0b7-487e-93a6-4e9367ec689f)</ept>.","pos":[6952,7077],"source":" For more information, see [Platform Invoke Examples](http://msdn.microsoft.com/Library/15926806-f0b7-487e-93a6-4e9367ec689f)."},{"pos":[7086,7098],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"content":"Routine","pos":[7105,7112]},{"content":"Required header","pos":[7113,7128]},{"content":"<ph id=\"ph1\">\\&lt;</ph>wchar.h&gt;","pos":[7187,7197],"source":"\\<wchar.h>"},{"pos":[7207,7215],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Data Conversion<ept id=\"p1\">](../../c-runtime-library/data-conversion.md)</ept><ph id=\"ph1\"> </ph>","pos":[7219,7281],"source":"[Data Conversion](../../c-runtime-library/data-conversion.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Locale<ept id=\"p1\">](../../c-runtime-library/locale.md)</ept><ph id=\"ph1\"> </ph>","pos":[7284,7329],"source":" [Locale](../../c-runtime-library/locale.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Interpretation of Multibyte-Character Sequences<ept id=\"p1\">](../../c-runtime-library/interpretation-of-multibyte-character-sequences.md)</ept><ph id=\"ph1\"> </ph>","pos":[7332,7459],"source":" [Interpretation of Multibyte-Character Sequences](../../c-runtime-library/interpretation-of-multibyte-character-sequences.md) "},{"content":"<bpt id=\"p1\"> [</bpt>mbrtowc<ept id=\"p1\">](../../c-runtime-library/reference/mbrtowc.md)</ept><ph id=\"ph1\"> </ph>","pos":[7462,7519],"source":" [mbrtowc](../../c-runtime-library/reference/mbrtowc.md) "},{"content":"<bpt id=\"p1\"> [</bpt>mbtowc, _mbtowc_l<ept id=\"p1\">](../../c-runtime-library/reference/mbtowc-mbtowc-l.md)</ept><ph id=\"ph1\"> </ph>","pos":[7522,7597],"source":" [mbtowc, _mbtowc_l](../../c-runtime-library/reference/mbtowc-mbtowc-l.md) "},{"content":"<bpt id=\"p1\"> [</bpt>mbstowcs_s, _mbstowcs_s_l<ept id=\"p1\">](../../c-runtime-library/reference/mbstowcs-s-mbstowcs-s-l.md)</ept><ph id=\"ph1\"> </ph>","pos":[7600,7691],"source":" [mbstowcs_s, _mbstowcs_s_l](../../c-runtime-library/reference/mbstowcs-s-mbstowcs-s-l.md) "},{"content":"<bpt id=\"p1\"> [</bpt>mbsinit<ept id=\"p1\">](../../c-runtime-library/reference/mbsinit.md)</ept>","pos":[7694,7750],"source":" [mbsinit](../../c-runtime-library/reference/mbsinit.md)"}],"content":"---\ntitle: \"mbsrtowcs_s | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\napiname: \n  - \"mbsrtowcs_s\"\napilocation: \n  - \"msvcrt.dll\"\n  - \"msvcr80.dll\"\n  - \"msvcr90.dll\"\n  - \"msvcr100.dll\"\n  - \"msvcr100_clr0400.dll\"\n  - \"msvcr110.dll\"\n  - \"msvcr110_clr0400.dll\"\n  - \"msvcr120.dll\"\n  - \"msvcr120_clr0400.dll\"\n  - \"ucrtbase.dll\"\n  - \"api-ms-win-crt-convert-l1-1-0.dll\"\napitype: \"DLLExport\"\nf1_keywords: \n  - \"mbsrtowcs_s\"\ndev_langs: \n  - \"C++\"\n  - \"C\"\nhelpviewer_keywords: \n  - \"mbsrtowcs_s function\"\nms.assetid: 4ee084ec-b15d-4e5a-921d-6584ec3b5a60\ncaps.latest.revision: 24\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# mbsrtowcs_s\nConvert a multibyte character string in the current locale to its wide character string representation. A version of [mbsrtowcs](../../c-runtime-library/reference/mbsrtowcs.md) with security enhancements as described in [Security Features in the CRT](../../c-runtime-library/security-features-in-the-crt.md).  \n  \n## Syntax  \n  \n```  \nerrno_t mbsrtowcs_s(  \n   size_t * pReturnValue,  \n   wchar_t * wcstr,  \n   size_t sizeInWords,  \n   const char ** mbstr,  \n   size_t count,  \n   mbstate_t * mbstate  \n);  \ntemplate <size_t size>  \nerrno_t mbsrtowcs_s(  \n   size_t * pReturnValue,  \n   wchar_t (&wcstr)[size],  \n   const char ** mbstr,  \n   size_t count,  \n   mbstate_t * mbstate  \n); // C++ only  \n```  \n  \n#### Parameters  \n [out] `pReturnValue`  \n The number of characters converted.  \n  \n [out] `wcstr`  \n Address of buffer to store the resulting converted wide character string.  \n  \n [out] `sizeInWords`  \n The size of `wcstr` in words (wide characters).  \n  \n [in, out] `mbstr`  \n Indirect pointer to the location of the multibyte character string to be converted.  \n  \n [in] `count`  \n The maximum number of wide characters to store in the `wcstr` buffer, not including the terminating null, or [_TRUNCATE](../../c-runtime-library/truncate.md).  \n  \n [in, out] `mbstate`  \n A pointer to an `mbstate_t` conversion state object. If this value is a null pointer, a static internal conversion state object is used. Because the internal `mbstate_t` object is not thread-safe, we recommend that you always pass your own `mbstate` parameter.  \n  \n## Return Value  \n Zero if conversion is successful, or an error code on failure.  \n  \n|Error condition|Return value and `errno`|  \n|---------------------|------------------------------|  \n|`wcstr` is a null pointer and `sizeInWords` > 0|`EINVAL`|  \n|`mbstr` is a null pointer|`EINVAL`|  \n|The string indirectly pointed to by `mbstr` contains a multibyte sequence that is not valid for the current locale.|`EILSEQ`|  \n|The destination buffer is too small to contain the converted string (unless `count` is `_TRUNCATE`; for more information, see Remarks)|`ERANGE`|  \n  \n If any one of these conditions occurs, the invalid parameter exception is invoked as described in [Parameter Validation](../../c-runtime-library/parameter-validation.md) . If execution is allowed to continue, the function returns an error code and sets `errno` as indicated in the table.  \n  \n## Remarks  \n The `mbsrtowcs_s` function converts a string of multibyte characters indirectly pointed to by `mbstr` into wide characters stored in the buffer pointed to by `wcstr`, by using the conversion state contained in `mbstate`. The conversion will continue for each character until one of these conditions is met:  \n  \n-   A multibyte null character is encountered  \n  \n-   An invalid multibyte character is encountered  \n  \n-   The number of wide characters stored in the `wcstr` buffer equals `count`.  \n  \n The destination string `wcstr` is always null-terminated, even in the case of an error, unless `wcstr` is a null pointer.  \n  \n If `count` is the special value [_TRUNCATE](../../c-runtime-library/truncate.md), `mbsrtowcs_s` converts as much of the string as will fit into the destination buffer, while still leaving room for a null terminator.  \n  \n If `mbsrtowcs_s` successfully converts the source string, it puts the size in wide characters of the converted string and the null terminator into `*``pReturnValue`, provided `pReturnValue` is not a null pointer. This occurs even if the `wcstr` argument is a null pointer and lets you determine the required buffer size. Note that if `wcstr` is a null pointer, `count` is ignored.  \n  \n If `wcstr` is not a null pointer, the pointer object pointed to by `mbstr` is assigned a null pointer if conversion stopped because a terminating null character was reached. Otherwise, it is assigned the address just past the last multibyte character converted, if any. This allows a subsequent function call to restart conversion where this call stopped.  \n  \n If `mbstate` is a null pointer, the library internal `mbstate_t` conversion state static object is used. Because this internal static object is not thread-safe, we recommend that you pass your own `mbstate` value.  \n  \n If `mbsrtowcs_s` encounters a multibyte character that is not valid in the current locale, it puts -1 in `*``pReturnValue`, sets the destination buffer `wcstr` to an empty string, sets `errno` to `EILSEQ`, and returns `EILSEQ`.  \n  \n If the sequences pointed to by `mbstr` and `wcstr` overlap, the behavior of `mbsrtowcs_s` is undefined. `mbsrtowcs_s` is affected by the LC_TYPE category of the current locale.  \n  \n> [!IMPORTANT]\n>  Ensure that `wcstr` and `mbstr` do not overlap, and that `count` correctly reflects the number of multibyte characters to convert.  \n  \n The `mbsrtowcs_s` function differs from [mbstowcs_s, _mbstowcs_s_l](../../c-runtime-library/reference/mbstowcs-s-mbstowcs-s-l.md) by its restartability. The conversion state is stored in `mbstate` for subsequent calls to the same or other restartable functions. Results are undefined when mixing the use of restartable and nonrestartable functions. For example, an application should use `mbsrlen` instead of `mbslen`, if a subsequent call to `mbsrtowcs_s` is used instead of `mbstowcs_s.`  \n  \n In C++, using this function is simplified by template overloads; the overloads can infer buffer length automatically (eliminating the requirement to specify a size argument) and they can automatically replace older, non-secure functions by using their newer, secure counterparts. For more information, see [Secure Template Overloads](../../c-runtime-library/secure-template-overloads.md).  \n  \n## Exceptions  \n The `mbsrtowcs_s` function is multithread safe if no function in the current thread calls `setlocale` as long as this function is executing and the `mbstate` argument is not a null pointer.  \n  \n## .NET Framework Equivalent  \n Not applicable. To call the standard C function, use `PInvoke`. For more information, see [Platform Invoke Examples](http://msdn.microsoft.com/Library/15926806-f0b7-487e-93a6-4e9367ec689f).  \n  \n## Requirements  \n  \n|Routine|Required header|  \n|-------------|---------------------|  \n|`mbsrtowcs_s`|\\<wchar.h>|  \n  \n## See Also  \n [Data Conversion](../../c-runtime-library/data-conversion.md)   \n [Locale](../../c-runtime-library/locale.md)   \n [Interpretation of Multibyte-Character Sequences](../../c-runtime-library/interpretation-of-multibyte-character-sequences.md)   \n [mbrtowc](../../c-runtime-library/reference/mbrtowc.md)   \n [mbtowc, _mbtowc_l](../../c-runtime-library/reference/mbtowc-mbtowc-l.md)   \n [mbstowcs_s, _mbstowcs_s_l](../../c-runtime-library/reference/mbstowcs-s-mbstowcs-s-l.md)   \n [mbsinit](../../c-runtime-library/reference/mbsinit.md)"}