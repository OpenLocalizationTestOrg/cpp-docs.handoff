{"nodes":[{"pos":[12,43],"content":"Event Handling | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Event Handling | Microsoft Docs","pos":[0,31]}]},{"content":"Event Handling","pos":[670,684]},{"content":"Event handling is primarily supported for COM classes (C++ classes that implement COM objects, typically using ATL classes or the <bpt id=\"p1\">[</bpt>coclass<ept id=\"p1\">](../windows/coclass.md)</ept> attribute).","pos":[685,859],"source":"Event handling is primarily supported for COM classes (C++ classes that implement COM objects, typically using ATL classes or the [coclass](../windows/coclass.md) attribute)."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Event Handling in COM<ept id=\"p1\">](../cpp/event-handling-in-com.md)</ept>.","pos":[861,944],"source":"  For more information, see [Event Handling in COM](../cpp/event-handling-in-com.md)."},{"content":"Event handling is also supported for native C++ classes (C++ classes that do not implement COM objects), however, that support is deprecated and will be removed in a future release.","pos":[951,1132]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Event Handling in Native C++<ept id=\"p1\">](../cpp/event-handling-in-native-cpp.md)</ept>.","pos":[1134,1231],"source":"  For more information, see [Event Handling in Native C++](../cpp/event-handling-in-native-cpp.md)."},{"content":"Event handling supports single- and multithreaded usage and protects data from simultaneous multithread access.","pos":[1238,1349]},{"content":"It also allows you to derive subclasses from event source or receiver classes and support extended event sourcing/receiving in the derived class.","pos":[1350,1495]},{"content":"Visual C++ includes attributes and keywords for declaring events and event handlers.","pos":[1502,1586]},{"content":"The event attributes and keywords can be used in CLR programs and in native C++ programs.","pos":[1587,1676]},{"content":"Topic","pos":[1683,1688]},{"content":"Description","pos":[1689,1700]},{"content":"event_source","pos":[1740,1752]},{"content":"Creates an event source.","pos":[1782,1806]},{"content":"event_receiver","pos":[1812,1826]},{"content":"Creates an event receiver (sink).","pos":[1858,1891]},{"content":"__event","pos":[1897,1904]},{"content":"Declares an event.","pos":[1923,1941]},{"content":"__raise","pos":[1947,1954]},{"content":"Emphasizes the call site of an event.","pos":[1973,2010]},{"content":"__hook","pos":[2016,2022]},{"content":"Associates a handler method with an event.","pos":[2040,2082]},{"content":"__unhook","pos":[2088,2096]},{"content":"Dissociates a handler method from an event.","pos":[2116,2159]},{"content":"See Also","pos":[2169,2177]},{"content":"C++ Language Reference","pos":[2182,2204]},{"content":"Keywords","pos":[2245,2253]},{"content":"Event Handling Samples","pos":[2284,2306]}],"content":"---\ntitle: \"Event Handling | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"language-reference\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"attributes [C++], event handling\"\n  - \"intrinsic functions, event handling\"\n  - \"event handling, Visual C++\"\nms.assetid: 82de3f9a-2d88-470c-9527-8a5b54c8ced4\ncaps.latest.revision: 7\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Event Handling\nEvent handling is primarily supported for COM classes (C++ classes that implement COM objects, typically using ATL classes or the [coclass](../windows/coclass.md) attribute).  For more information, see [Event Handling in COM](../cpp/event-handling-in-com.md).  \n  \n Event handling is also supported for native C++ classes (C++ classes that do not implement COM objects), however, that support is deprecated and will be removed in a future release.  For more information, see [Event Handling in Native C++](../cpp/event-handling-in-native-cpp.md).  \n  \n Event handling supports single- and multithreaded usage and protects data from simultaneous multithread access. It also allows you to derive subclasses from event source or receiver classes and support extended event sourcing/receiving in the derived class.  \n  \n Visual C++ includes attributes and keywords for declaring events and event handlers. The event attributes and keywords can be used in CLR programs and in native C++ programs.  \n  \n|Topic|Description|  \n|-----------|-----------------|  \n|[event_source](../windows/event-source.md)|Creates an event source.|  \n|[event_receiver](../windows/event-receiver.md)|Creates an event receiver (sink).|  \n|[__event](../cpp/event.md)|Declares an event.|  \n|[__raise](../cpp/raise.md)|Emphasizes the call site of an event.|  \n|[__hook](../cpp/hook.md)|Associates a handler method with an event.|  \n|[__unhook](../cpp/unhook.md)|Dissociates a handler method from an event.|  \n  \n## See Also  \n [C++ Language Reference](../cpp/cpp-language-reference.md)   \n [Keywords](../cpp/keywords-cpp.md)   \n [Event Handling Samples](http://msdn.microsoft.com/en-us/cc0287d4-f92b-4da5-85fc-a0f186e16424)"}