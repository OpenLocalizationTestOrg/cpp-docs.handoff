{"nodes":[{"pos":[12,99],"content":"_strupr_s, _strupr_s_l, _mbsupr_s, _mbsupr_s_l, _wcsupr_s, _wcsupr_s_l | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"_strupr_s, _strupr_s_l, _mbsupr_s, _mbsupr_s_l, _wcsupr_s, _wcsupr_s_l | Microsoft Docs","pos":[0,87]}]},{"content":"_strupr_s, _strupr_s_l, _mbsupr_s, _mbsupr_s_l, _wcsupr_s, _wcsupr_s_l","pos":[1877,1947]},{"content":"Converts a string to uppercase, by using the current locale or a specified locale that's passed in.","pos":[1948,2047]},{"content":"These versions of <bpt id=\"p1\">[</bpt>_strupr, _strupr_l, _mbsupr, _mbsupr_l, _wcsupr_l, _wcsupr<ept id=\"p1\">](../../c-runtime-library/reference/strupr-strupr-l-mbsupr-mbsupr-l-wcsupr-l-wcsupr.md)</ept> have security enhancements, as described in <bpt id=\"p2\">[</bpt>Security Features in the CRT<ept id=\"p2\">](../../c-runtime-library/security-features-in-the-crt.md)</ept>.","pos":[2048,2345],"source":" These versions of [_strupr, _strupr_l, _mbsupr, _mbsupr_l, _wcsupr_l, _wcsupr](../../c-runtime-library/reference/strupr-strupr-l-mbsupr-mbsupr-l-wcsupr-l-wcsupr.md) have security enhancements, as described in [Security Features in the CRT](../../c-runtime-library/security-features-in-the-crt.md)."},{"pos":[2353,2594],"content":"[!IMPORTANT]\n `_mbsupr_s` and `_mbsupr_s_l` cannot be used in applications that execute in the Windows Runtime. For more information, see [CRT functions not supported with /ZW](http://msdn.microsoft.com/library/windows/apps/jj606124.aspx).","leadings":["","> "],"nodes":[{"content":" and `_mbsupr_s_l` cannot be used in applications that execute in the Windows Runtime. For more information, see [CRT functions not supported with /ZW](http://msdn.microsoft.com/library/windows/apps/jj606124.aspx).","pos":[25,239],"nodes":[{"content":"and <ph id=\"ph1\">`_mbsupr_s_l`</ph> cannot be used in applications that execute in the Windows Runtime.","pos":[1,86],"source":" and `_mbsupr_s_l` cannot be used in applications that execute in the Windows Runtime."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>CRT functions not supported with /ZW<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/apps/jj606124.aspx)</ept>.","pos":[87,214],"source":" For more information, see [CRT functions not supported with /ZW](http://msdn.microsoft.com/library/windows/apps/jj606124.aspx)."}]}]},{"content":"Syntax","pos":[2603,2609]},{"content":"Parameters","pos":[3778,3788]},{"content":"String to capitalize.","pos":[3801,3822]},{"content":"Size of the buffer.","pos":[3851,3870]},{"content":"The locale to use.","pos":[3889,3907]},{"content":"Return Value","pos":[3916,3928]},{"content":"Zero if successful; a non-zero error code on failure.","pos":[3932,3985]},{"content":"These functions validate their parameters.","pos":[3992,4034]},{"content":"If <ph id=\"ph1\">`str`</ph> is a <ph id=\"ph2\">`NULL`</ph> pointer, the invalid parameter handler is invoked, as described in <bpt id=\"p1\">[</bpt>Parameter Validation<ept id=\"p1\">](../../c-runtime-library/parameter-validation.md)</ept> .","pos":[4035,4196],"source":" If `str` is a `NULL` pointer, the invalid parameter handler is invoked, as described in [Parameter Validation](../../c-runtime-library/parameter-validation.md) ."},{"content":"If execution is allowed to continue, the functions return <ph id=\"ph1\">`EINVAL`</ph> and set <ph id=\"ph2\">`errno`</ph> to <ph id=\"ph3\">`EINVAL`</ph>.","pos":[4197,4292],"source":" If execution is allowed to continue, the functions return `EINVAL` and set `errno` to `EINVAL`."},{"content":"If <ph id=\"ph1\">`numberOfElements`</ph> is less than the length of the string, the functions return <ph id=\"ph2\">`ERANGE`</ph> and set <ph id=\"ph3\">`errno`</ph> to <ph id=\"ph4\">`ERANGE`</ph>.","pos":[4293,4412],"source":" If `numberOfElements` is less than the length of the string, the functions return `ERANGE` and set `errno` to `ERANGE`."},{"content":"Remarks","pos":[4421,4428]},{"content":"The <ph id=\"ph1\">`_strupr_s`</ph> function converts, in place, each lowercase letter in <ph id=\"ph2\">`str`</ph> to uppercase.","pos":[4432,4521],"source":"The `_strupr_s` function converts, in place, each lowercase letter in `str` to uppercase."},{"content":"is the wide-character version of <ph id=\"ph1\">`_strupr_s`</ph>.","pos":[4534,4579],"source":" is the wide-character version of `_strupr_s`."},{"content":"is the multi-byte character version of <ph id=\"ph1\">`_strupr_s`</ph>.","pos":[4592,4643],"source":" is the multi-byte character version of `_strupr_s`."},{"content":"The conversion is determined by the <ph id=\"ph1\">`LC_CTYPE`</ph> category setting of the locale.","pos":[4650,4728],"source":"The conversion is determined by the `LC_CTYPE` category setting of the locale."},{"content":"Other characters are not affected.","pos":[4729,4763]},{"content":"For more information on <ph id=\"ph1\">`LC_CTYPE`</ph>, see <bpt id=\"p1\">[</bpt>setlocale<ept id=\"p1\">](../../c-runtime-library/reference/setlocale-wsetlocale.md)</ept>.","pos":[4764,4875],"source":" For more information on `LC_CTYPE`, see [setlocale](../../c-runtime-library/reference/setlocale-wsetlocale.md)."},{"content":"The versions of these functions without the <ph id=\"ph1\">`_l`</ph> suffix use the current locale; the visions with the <ph id=\"ph2\">`_l`</ph> suffix are identical except that they use the locale passed in instead.","pos":[4876,5053],"source":" The versions of these functions without the `_l` suffix use the current locale; the visions with the `_l` suffix are identical except that they use the locale passed in instead."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Locale<ept id=\"p1\">](../../c-runtime-library/locale.md)</ept>.","pos":[5054,5124],"source":" For more information, see [Locale](../../c-runtime-library/locale.md)."},{"content":"In C++, using these functions is simplified by template overloads; the overloads can infer buffer length automatically (eliminating the need to specify a size argument) and they can automatically replace older, non-secure functions with their newer, secure counterparts.","pos":[5131,5401]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Secure Template Overloads<ept id=\"p1\">](../../c-runtime-library/secure-template-overloads.md)</ept>.","pos":[5402,5510],"source":" For more information, see [Secure Template Overloads](../../c-runtime-library/secure-template-overloads.md)."},{"content":"The debug versions of these functions first fill the buffer with 0xFD.","pos":[5517,5587]},{"content":"To disable this behavior, use <bpt id=\"p1\">[</bpt>_CrtSetDebugFillThreshold<ept id=\"p1\">](../../c-runtime-library/reference/crtsetdebugfillthreshold.md)</ept>.","pos":[5588,5709],"source":" To disable this behavior, use [_CrtSetDebugFillThreshold](../../c-runtime-library/reference/crtsetdebugfillthreshold.md)."},{"content":"Generic-Text Routine Mappings","pos":[5719,5748]},{"content":"TCHAR.H routine","pos":[5755,5770]},{"content":"_UNICODE &amp; _MBCS not defined","pos":[5771,5799],"source":"_UNICODE & _MBCS not defined"},{"content":"_MBCS defined","pos":[5800,5813]},{"content":"_UNICODE defined","pos":[5814,5830]},{"content":"Requirements","pos":[6060,6072]},{"content":"Routine","pos":[6079,6086]},{"content":"Required header","pos":[6087,6102]},{"pos":[6158,6159],"content":","},{"content":"string.h&gt;","pos":[6176,6185],"source":"string.h>"},{"pos":[6201,6230],"content":", <ph id=\"ph1\">`_wcsupr_s_l`</ph>, <ph id=\"ph2\">`_mbsupr_s`</ph>,","source":", `_wcsupr_s_l`, `_mbsupr_s`, "},{"content":"string.h&gt; or <ph id=\"ph1\">\\&lt;</ph>wchar.h&gt;","pos":[6247,6270],"source":"string.h> or \\<wchar.h>"},{"pos":[6278,6382],"content":"For additional compatibility information, see <bpt id=\"p1\">[</bpt>Compatibility<ept id=\"p1\">](../../c-runtime-library/compatibility.md)</ept>.","source":"For additional compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md)."},{"content":"Example","pos":[6391,6398]},{"pos":[6402,6594],"content":"See the example for <bpt id=\"p1\">[</bpt>_strlwr_s, _strlwr_s_l, _mbslwr_s, _mbslwr_s_l, _wcslwr_s, _wcslwr_s_l<ept id=\"p1\">](../../c-runtime-library/reference/strlwr-s-strlwr-s-l-mbslwr-s-mbslwr-s-l-wcslwr-s-wcslwr-s-l.md)</ept> .","source":"See the example for [_strlwr_s, _strlwr_s_l, _mbslwr_s, _mbslwr_s_l, _wcslwr_s, _wcslwr_s_l](../../c-runtime-library/reference/strlwr-s-strlwr-s-l-mbslwr-s-mbslwr-s-l-wcslwr-s-wcslwr-s-l.md) ."},{"content":".NET Framework Equivalent","pos":[6603,6628]},{"content":"System::String::ToUpper","pos":[6633,6656]},{"content":"See Also","pos":[6735,6743]},{"content":"Locale","pos":[6748,6754]},{"content":"Interpretation of Multibyte-Character Sequences","pos":[6796,6843]},{"content":"String Manipulation","pos":[6926,6945]},{"content":"_strlwr_s, _strlwr_s_l, _mbslwr_s, _mbslwr_s_l, _wcslwr_s, _wcslwr_s_l","pos":[7004,7074]}],"content":"---\ntitle: \"_strupr_s, _strupr_s_l, _mbsupr_s, _mbsupr_s_l, _wcsupr_s, _wcsupr_s_l | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\napiname: \n  - \"_strupr_s\"\n  - \"_strupr_s_l\"\n  - \"_mbsupr_s\"\n  - \"_wcsupr_s_l\"\n  - \"_mbsupr_s_l\"\n  - \"_wcsupr_s\"\napilocation: \n  - \"msvcrt.dll\"\n  - \"msvcr80.dll\"\n  - \"msvcr90.dll\"\n  - \"msvcr100.dll\"\n  - \"msvcr100_clr0400.dll\"\n  - \"msvcr110.dll\"\n  - \"msvcr110_clr0400.dll\"\n  - \"msvcr120.dll\"\n  - \"msvcr120_clr0400.dll\"\n  - \"ucrtbase.dll\"\n  - \"api-ms-win-crt-multibyte-l1-1-0.dll\"\n  - \"api-ms-win-crt-string-l1-1-0.dll\"\napitype: \"DLLExport\"\nf1_keywords: \n  - \"strupr_s\"\n  - \"mbsupr_s\"\n  - \"wcsupr_s\"\n  - \"_mbsupr_s_l\"\n  - \"mbsupr_s_l\"\n  - \"wcsupr_s_l\"\n  - \"_wcsupr_s\"\n  - \"_tcsupr_s_l\"\n  - \"_mbsupr_s\"\n  - \"_tcsupr_s\"\n  - \"strupr_s_l\"\n  - \"_wcsupr_s_l\"\n  - \"_strupr_s\"\n  - \"_strupr_s_l\"\ndev_langs: \n  - \"C++\"\n  - \"C\"\nhelpviewer_keywords: \n  - \"mbsupr_s_l function\"\n  - \"strupr_s_l function\"\n  - \"_wcsupr_s_l function\"\n  - \"_tcsupr_s_l function\"\n  - \"mbsupr_s function\"\n  - \"_wcsupr_s function\"\n  - \"uppercase, converting strings to\"\n  - \"tcsupr_s function\"\n  - \"string conversion [C++], case\"\n  - \"strupr_s function\"\n  - \"wcsupr_s_l function\"\n  - \"_mbsupr_s function\"\n  - \"_mbsupr_s_l function\"\n  - \"_strupr_s_l function\"\n  - \"tcsupr_s_l function\"\n  - \"strings [C++], case\"\n  - \"converting case, CRT functions\"\n  - \"_tcsupr_s function\"\n  - \"strings [C++], converting case\"\n  - \"_strupr_s function\"\n  - \"wcsupr_s function\"\nms.assetid: 82d3a273-9f6f-4a26-9560-919d891e4581\ncaps.latest.revision: 30\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# _strupr_s, _strupr_s_l, _mbsupr_s, _mbsupr_s_l, _wcsupr_s, _wcsupr_s_l\nConverts a string to uppercase, by using the current locale or a specified locale that's passed in. These versions of [_strupr, _strupr_l, _mbsupr, _mbsupr_l, _wcsupr_l, _wcsupr](../../c-runtime-library/reference/strupr-strupr-l-mbsupr-mbsupr-l-wcsupr-l-wcsupr.md) have security enhancements, as described in [Security Features in the CRT](../../c-runtime-library/security-features-in-the-crt.md).  \n  \n> [!IMPORTANT]\n>  `_mbsupr_s` and `_mbsupr_s_l` cannot be used in applications that execute in the Windows Runtime. For more information, see [CRT functions not supported with /ZW](http://msdn.microsoft.com/library/windows/apps/jj606124.aspx).  \n  \n## Syntax  \n  \n```  \nerrno_t _strupr_s(  \n   char *str,  \n   size_t numberOfElements  \n);  \nerrno_t _wcsupr_s(  \n   wchar_t * str,  \n   size_t numberOfElements  \n);  \nerrno_t _strupr_s_l(  \n   char * str,  \n   size_t numberOfElements,  \n   _locale_t locale  \n);  \nerrno_t _wcsupr_s_l(  \n   wchar_t * str,  \n   size_t numberOfElements,  \n   _locale_t locale  \n);  \nerrno_t _mbsupr_s(  \n   unsigned char *str,  \n   size_t numberOfElements  \n);  \nerrno_t _mbsupr_s_l(  \n   unsigned char *str,  \n   size_t numberOfElements,  \n   _locale_t locale  \n);  \ntemplate <size_t size>  \nerrno_t _strupr_s(  \n   char (&str)[size]  \n); // C++ only  \ntemplate <size_t size>  \nerrno_t _wcsupr_s(  \n   wchar_t (&str)[size]  \n); // C++ only  \ntemplate <size_t size>  \nerrno_t _strupr_s_l(  \n   char (&str)[size],  \n   _locale_t locale  \n); // C++ only  \ntemplate <size_t size>  \nerrno_t _wcsupr_s_l(  \n   wchar_t (&str)[size],  \n   _locale_t locale  \n); // C++ only  \ntemplate <size_t size>  \nerrno_t _mbsupr_s(  \n   unsigned char (&str)[size]  \n); // C++ only  \ntemplate <size_t size>  \nerrno_t _mbsupr_s_l(  \n   unsigned char (&str)[size],  \n   _locale_t locale  \n); // C++ only  \n```  \n  \n#### Parameters  \n `str`  \n String to capitalize.  \n  \n `numberOfElements`  \n Size of the buffer.  \n  \n `locale`  \n The locale to use.  \n  \n## Return Value  \n Zero if successful; a non-zero error code on failure.  \n  \n These functions validate their parameters. If `str` is a `NULL` pointer, the invalid parameter handler is invoked, as described in [Parameter Validation](../../c-runtime-library/parameter-validation.md) . If execution is allowed to continue, the functions return `EINVAL` and set `errno` to `EINVAL`. If `numberOfElements` is less than the length of the string, the functions return `ERANGE` and set `errno` to `ERANGE`.  \n  \n## Remarks  \n The `_strupr_s` function converts, in place, each lowercase letter in `str` to uppercase. `_wcsupr_s` is the wide-character version of `_strupr_s`. `_mbsupr_s` is the multi-byte character version of `_strupr_s`.  \n  \n The conversion is determined by the `LC_CTYPE` category setting of the locale. Other characters are not affected. For more information on `LC_CTYPE`, see [setlocale](../../c-runtime-library/reference/setlocale-wsetlocale.md). The versions of these functions without the `_l` suffix use the current locale; the visions with the `_l` suffix are identical except that they use the locale passed in instead. For more information, see [Locale](../../c-runtime-library/locale.md).  \n  \n In C++, using these functions is simplified by template overloads; the overloads can infer buffer length automatically (eliminating the need to specify a size argument) and they can automatically replace older, non-secure functions with their newer, secure counterparts. For more information, see [Secure Template Overloads](../../c-runtime-library/secure-template-overloads.md).  \n  \n The debug versions of these functions first fill the buffer with 0xFD. To disable this behavior, use [_CrtSetDebugFillThreshold](../../c-runtime-library/reference/crtsetdebugfillthreshold.md).  \n  \n### Generic-Text Routine Mappings  \n  \n|TCHAR.H routine|_UNICODE & _MBCS not defined|_MBCS defined|_UNICODE defined|  \n|---------------------|------------------------------------|--------------------|-----------------------|  \n|`_tcsupr_s`|`_strupr_s`|`_mbsupr_s`|`_wcsupr_s`|  \n|`_tcsupr_s_l`|`_strupr_s_l`|`_mbsupr_s_l`|`_wcsupr_s_l`|  \n  \n## Requirements  \n  \n|Routine|Required header|  \n|-------------|---------------------|  \n|`_strupr_s`, `_strupr_s_l`|\\<string.h>|  \n|`_wcsupr_s`, `_wcsupr_s_l`, `_mbsupr_s`, `_mbsupr_s_l`|\\<string.h> or \\<wchar.h>|  \n  \n For additional compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md).  \n  \n## Example  \n See the example for [_strlwr_s, _strlwr_s_l, _mbslwr_s, _mbslwr_s_l, _wcslwr_s, _wcslwr_s_l](../../c-runtime-library/reference/strlwr-s-strlwr-s-l-mbslwr-s-mbslwr-s-l-wcslwr-s-wcslwr-s-l.md) .  \n  \n## .NET Framework Equivalent  \n [System::String::ToUpper](https://msdn.microsoft.com/en-us/library/system.string.toupper.aspx)  \n  \n## See Also  \n [Locale](../../c-runtime-library/locale.md)   \n [Interpretation of Multibyte-Character Sequences](../../c-runtime-library/interpretation-of-multibyte-character-sequences.md)   \n [String Manipulation](../../c-runtime-library/string-manipulation-crt.md)   \n [_strlwr_s, _strlwr_s_l, _mbslwr_s, _mbslwr_s_l, _wcslwr_s, _wcslwr_s_l](../../c-runtime-library/reference/strlwr-s-strlwr-s-l-mbslwr-s-mbslwr-s-l-wcslwr-s-wcslwr-s-l.md)"}