{"nodes":[{"pos":[12,58],"content":"SimpleActivationFactory Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"SimpleActivationFactory Class | Microsoft Docs","pos":[0,46]}]},{"content":"SimpleActivationFactory Class","pos":[691,720]},{"content":"Provides a fundamental mechanism to create a Windows Runtime or classic COM base class.","pos":[721,808]},{"content":"Syntax","pos":[817,823]},{"content":"Parameters","pos":[946,956]},{"content":"A base class.","pos":[970,983]},{"content":"Remarks","pos":[992,999]},{"content":"The base class must provide a default constructor.","pos":[1003,1053]},{"pos":[1060,1221],"content":"The following code example demonstrates how to use SimpleActivationFactory with the <bpt id=\"p1\">[</bpt>ActivatableClassWithFactoryEx<ept id=\"p1\">](../windows/activatableclass-macros.md)</ept> macro.","source":"The following code example demonstrates how to use SimpleActivationFactory with the [ActivatableClassWithFactoryEx](../windows/activatableclass-macros.md) macro."},{"content":"Members","pos":[1317,1324]},{"content":"Public Methods","pos":[1334,1348]},{"content":"Name","pos":[1355,1359]},{"content":"Description","pos":[1360,1371]},{"content":"SimpleActivationFactory::ActivateInstance Method","pos":[1410,1458]},{"content":"Creates an instance of the specified interface.","pos":[1523,1570]},{"content":"SimpleActivationFactory::GetRuntimeClassName Method","pos":[1576,1627]},{"pos":[1695,1800],"content":"Gets the runtime class name of an instance of the class specified by the <ph id=\"ph1\">`Base`</ph> class template parameter.","source":"Gets the runtime class name of an instance of the class specified by the `Base` class template parameter."},{"content":"SimpleActivationFactory::GetTrustLevel Method","pos":[1806,1851]},{"pos":[1913,2011],"content":"Gets the trust level of an instance of the class specified by the <ph id=\"ph1\">`Base`</ph> class template parameter.","source":"Gets the trust level of an instance of the class specified by the `Base` class template parameter."},{"content":"Inheritance Hierarchy","pos":[2021,2042]},{"content":"Requirements","pos":[2301,2313]},{"pos":[2317,2337],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> module.h","source":"**Header:** module.h"},{"pos":[2344,2373],"content":"<bpt id=\"p1\">**</bpt>Namespace:<ept id=\"p1\">**</ept> Microsoft::WRL","source":"**Namespace:** Microsoft::WRL"},{"content":"See Also","pos":[2382,2390]},{"content":"Microsoft::WRL Namespace","pos":[2395,2419]}],"content":"---\ntitle: \"SimpleActivationFactory Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"module/Microsoft::WRL::SimpleActivationFactory\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"SimpleActivationFactory class\"\nms.assetid: aff768e0-0038-4fd7-95d2-ad7d308da41c\ncaps.latest.revision: 4\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"ru-ru\"\n  - \"zh-cn\"\n  - \"zh-tw\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"tr-tr\"\n---\n# SimpleActivationFactory Class\nProvides a fundamental mechanism to create a Windows Runtime or classic COM base class.  \n  \n## Syntax  \n  \n```  \ntemplate<  \n   typename Base  \n>  \nclass SimpleActivationFactory : public ActivationFactory<>;  \n```  \n  \n#### Parameters  \n `Base`  \n A base class.  \n  \n## Remarks  \n The base class must provide a default constructor.  \n  \n The following code example demonstrates how to use SimpleActivationFactory with the [ActivatableClassWithFactoryEx](../windows/activatableclass-macros.md) macro.  \n  \n `ActivatableClassWithFactoryEx(MyClass, SimpleActivationFactory, MyServerName);`  \n  \n## Members  \n  \n### Public Methods  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[SimpleActivationFactory::ActivateInstance Method](../windows/simpleactivationfactory-activateinstance-method.md)|Creates an instance of the specified interface.|  \n|[SimpleActivationFactory::GetRuntimeClassName Method](../windows/simpleactivationfactory-getruntimeclassname-method.md)|Gets the runtime class name of an instance of the class specified by the `Base` class template parameter.|  \n|[SimpleActivationFactory::GetTrustLevel Method](../windows/simpleactivationfactory-gettrustlevel-method.md)|Gets the trust level of an instance of the class specified by the `Base` class template parameter.|  \n  \n## Inheritance Hierarchy  \n `I0`  \n  \n `ChainInterfaces`  \n  \n `I0`  \n  \n `RuntimeClassBase`  \n  \n `ImplementsHelper`  \n  \n `DontUseNewUseMake`  \n  \n `RuntimeClassFlags`  \n  \n `RuntimeClassBaseT`  \n  \n `RuntimeClass`  \n  \n `ActivationFactory`  \n  \n `SimpleActivationFactory`  \n  \n## Requirements  \n **Header:** module.h  \n  \n **Namespace:** Microsoft::WRL  \n  \n## See Also  \n [Microsoft::WRL Namespace](../windows/microsoft-wrl-namespace.md)"}