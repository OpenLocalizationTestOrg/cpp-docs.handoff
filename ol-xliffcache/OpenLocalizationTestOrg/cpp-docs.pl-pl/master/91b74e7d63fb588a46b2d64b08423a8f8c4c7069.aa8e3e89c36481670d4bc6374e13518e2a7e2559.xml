{"nodes":[{"pos":[12,51],"content":"_initterm, _initterm_e | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"_initterm, _initterm_e | Microsoft Docs","pos":[0,39]}]},{"pos":[1090,1112],"content":"_initterm, _initterm_e","linkify":"_initterm, _initterm_e","nodes":[{"content":"_initterm, _initterm_e","pos":[0,22]}]},{"content":"Internal methods that walk a table of function pointers and initialize them.","pos":[1113,1189]},{"content":"The first pointer is the starting location in the table and the second pointer is the ending location.","pos":[1196,1298]},{"pos":[1307,1313],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[1453,1465],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A non-zero error code if an initialization fails and throws an error; 0 if no error occurs.","pos":[1469,1560]},{"pos":[1569,1576],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"These methods are only called internally during the initialization of a C++ program.","pos":[1580,1664]},{"content":"Do not call these methods in a program.","pos":[1665,1704]},{"pos":[1711,1802],"content":"When these methods walk a table of function entries, they skip <ph id=\"ph1\">`NULL`</ph> entries and continue.","source":"When these methods walk a table of function entries, they skip `NULL` entries and continue."},{"pos":[1811,1819],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"pos":[1823,1930],"content":"<bpt id=\"p1\">[</bpt>Alphabetical Function Reference<ept id=\"p1\">](../../c-runtime-library/reference/crt-alphabetical-function-reference.md)</ept>","source":"[Alphabetical Function Reference](../../c-runtime-library/reference/crt-alphabetical-function-reference.md)"}],"content":"---\ntitle: \"_initterm, _initterm_e | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\napiname: \n  - \"_initterm_e\"\n  - \"_initterm\"\napilocation: \n  - \"msvcrt.dll\"\n  - \"msvcr80.dll\"\n  - \"msvcr90.dll\"\n  - \"msvcr100.dll\"\n  - \"msvcr100_clr0400.dll\"\n  - \"msvcr110.dll\"\n  - \"msvcr110_clr0400.dll\"\n  - \"msvcr120.dll\"\n  - \"msvcr120_clr0400.dll\"\n  - \"ucrtbase.dll\"\n  - \"api-ms-win-crt-runtime-l1-1-0.dll\"\napitype: \"DLLExport\"\nf1_keywords: \n  - \"_initterm_e\"\n  - \"initterm\"\n  - \"_initterm\"\n  - \"initterm_e\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"initterm function\"\n  - \"initterm_e function\"\n  - \"_initterm function\"\n  - \"_initterm_e function\"\nms.assetid: 85131efe-c747-429a-8897-bcdedb000172\ncaps.latest.revision: 7\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"ru-ru\"\n  - \"zh-cn\"\n  - \"zh-tw\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"tr-tr\"\n---\n# _initterm, _initterm_e\nInternal methods that walk a table of function pointers and initialize them.  \n  \n The first pointer is the starting location in the table and the second pointer is the ending location.  \n  \n## Syntax  \n  \n```  \nvoid __cdecl _initterm(  \n   PVFV *,  \n   PVFV *  \n);  \n  \nint __cdecl _initterm_e(  \n   PVFV *,  \n   PVFV *  \n);  \n```  \n  \n## Return Value  \n A non-zero error code if an initialization fails and throws an error; 0 if no error occurs.  \n  \n## Remarks  \n These methods are only called internally during the initialization of a C++ program. Do not call these methods in a program.  \n  \n When these methods walk a table of function entries, they skip `NULL` entries and continue.  \n  \n## See Also  \n [Alphabetical Function Reference](../../c-runtime-library/reference/crt-alphabetical-function-reference.md)"}