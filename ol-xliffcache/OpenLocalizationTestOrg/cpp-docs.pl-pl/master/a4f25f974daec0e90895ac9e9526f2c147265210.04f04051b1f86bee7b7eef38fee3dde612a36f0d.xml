{"nodes":[{"pos":[12,52],"content":"Debugging Your Provider | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Debugging Your Provider | Microsoft Docs","pos":[0,40]}]},{"content":"Debugging Your Provider","pos":[720,743]},{"content":"There are two ways to debug your provider:","pos":[744,786]},{"content":"Because providers are created in process, you can create some consumer code using the OLE DB consumer templates and step into the provider normally.","pos":[796,944]},{"content":"You can use the ITEST utility that comes with Visual C++.","pos":[954,1011]},{"content":"To use the ITEST utility","pos":[1021,1045]},{"content":"Open the provider project.","pos":[1055,1081]},{"pos":[1091,1136],"content":"On the <bpt id=\"p1\">**</bpt>Projects<ept id=\"p1\">**</ept> menu, click <bpt id=\"p2\">**</bpt>Settings<ept id=\"p2\">**</ept>.","source":"On the **Projects** menu, click **Settings**."},{"pos":[1146,1208],"content":"In the <bpt id=\"p1\">**</bpt>Property Pages<ept id=\"p1\">**</ept> dialog box, click the <bpt id=\"p2\">**</bpt>Debug<ept id=\"p2\">**</ept> tab.","source":"In the **Property Pages** dialog box, click the **Debug** tab."},{"pos":[1218,1292],"content":"In the <bpt id=\"p1\">**</bpt>Executable for Debug Session<ept id=\"p1\">**</ept> box, select the ITEST application.","source":"In the **Executable for Debug Session** box, select the ITEST application."},{"content":"Set breakpoints, and then debug as usual.","pos":[1302,1343]},{"content":"See Also","pos":[1352,1360]},{"content":"Working with OLE DB Provider Templates","pos":[1365,1403]}],"content":"---\ntitle: \"Debugging Your Provider | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"debugging [C++], providers\"\n  - \"OLE DB providers, debugging\"\n  - \"Visual C++ debugger, debugging providers\"\n  - \"Visual C++ debugger\"\nms.assetid: 90d4e7db-06ea-4de0-a7f4-4f3751d50d93\ncaps.latest.revision: 7\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"ru-ru\"\n  - \"zh-cn\"\n  - \"zh-tw\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"tr-tr\"\n---\n# Debugging Your Provider\nThere are two ways to debug your provider:  \n  \n-   Because providers are created in process, you can create some consumer code using the OLE DB consumer templates and step into the provider normally.  \n  \n-   You can use the ITEST utility that comes with Visual C++.  \n  \n### To use the ITEST utility  \n  \n1.  Open the provider project.  \n  \n2.  On the **Projects** menu, click **Settings**.  \n  \n3.  In the **Property Pages** dialog box, click the **Debug** tab.  \n  \n4.  In the **Executable for Debug Session** box, select the ITEST application.  \n  \n5.  Set breakpoints, and then debug as usual.  \n  \n## See Also  \n [Working with OLE DB Provider Templates](../../data/oledb/working-with-ole-db-provider-templates.md)"}