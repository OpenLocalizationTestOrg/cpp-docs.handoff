{"nodes":[{"pos":[12,47],"content":"CPrintDialog Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"CPrintDialog Class | Microsoft Docs","pos":[0,35]}]},{"content":"CPrintDialog Class","pos":[662,680]},{"content":"Encapsulates the services provided by the Windows common dialog box for printing.","pos":[681,762]},{"content":"Syntax","pos":[771,777]},{"content":"Members","pos":[845,852]},{"content":"Public Constructors","pos":[862,881]},{"content":"Name","pos":[888,892]},{"content":"Description","pos":[893,904]},{"content":"CPrintDialog::CPrintDialog","pos":[943,969]},{"pos":[1000,1035],"content":"Constructs a <ph id=\"ph1\">`CPrintDialog`</ph> object.","source":"Constructs a `CPrintDialog` object."},{"content":"Public Methods","pos":[1046,1060]},{"content":"Name","pos":[1067,1071]},{"content":"Description","pos":[1072,1083]},{"content":"CPrintDialog::CreatePrinterDC","pos":[1122,1151]},{"content":"Creates a printer device context without displaying the Print dialog box.","pos":[1185,1258]},{"content":"CPrintDialog::DoModal","pos":[1264,1285]},{"content":"Displays the dialog box and allows the user to make a selection.","pos":[1311,1375]},{"content":"CPrintDialog::GetCopies","pos":[1381,1404]},{"content":"Retrieves the number of copies requested.","pos":[1432,1473]},{"content":"CPrintDialog::GetDefaults","pos":[1479,1504]},{"content":"Retrieves device defaults without displaying a dialog box.","pos":[1534,1592]},{"content":"CPrintDialog::GetDeviceName","pos":[1598,1625]},{"content":"Retrieves the name of the currently selected printer device.","pos":[1657,1717]},{"content":"CPrintDialog::GetDevMode","pos":[1723,1747]},{"pos":[1776,1810],"content":"Retrieves the <ph id=\"ph1\">`DEVMODE`</ph> structure.","source":"Retrieves the `DEVMODE` structure."},{"content":"CPrintDialog::GetDriverName","pos":[1816,1843]},{"content":"Retrieves the name of the currently selected printer driver.","pos":[1875,1935]},{"content":"CPrintDialog::GetFromPage","pos":[1941,1966]},{"content":"Retrieves the starting page of the print range.","pos":[1996,2043]},{"content":"CPrintDialog::GetPortName","pos":[2049,2074]},{"content":"Retrieves the name of the currently selected printer port.","pos":[2104,2162]},{"content":"CPrintDialog::GetPrinterDC","pos":[2168,2194]},{"content":"Retrieves a handle to the printer device context.","pos":[2225,2274]},{"content":"CPrintDialog::GetToPage","pos":[2280,2303]},{"content":"Retrieves the ending page of the print range.","pos":[2331,2376]},{"content":"CPrintDialog::PrintAll","pos":[2382,2404]},{"content":"Determines whether to print all pages of the document.","pos":[2431,2485]},{"content":"CPrintDialog::PrintCollate","pos":[2491,2517]},{"content":"Determines whether collated copies are requested.","pos":[2548,2597]},{"content":"CPrintDialog::PrintRange","pos":[2603,2627]},{"content":"Determines whether to print only a specified range of pages.","pos":[2656,2716]},{"content":"CPrintDialog::PrintSelection","pos":[2722,2750]},{"content":"Determines whether to print only the currently selected items.","pos":[2783,2845]},{"content":"Public Data Members","pos":[2856,2875]},{"content":"Name","pos":[2882,2886]},{"content":"Description","pos":[2887,2898]},{"content":"CPrintDialog::m_pd","pos":[2937,2955]},{"pos":[2978,3032],"content":"A structure used to customize a <ph id=\"ph1\">`CPrintDialog`</ph> object.","source":"A structure used to customize a `CPrintDialog` object."},{"content":"Remarks","pos":[3042,3049]},{"content":"Common print dialog boxes provide an easy way to implement Print and Print Setup dialog boxes in a manner consistent with Windows standards.","pos":[3053,3193]},{"pos":[3201,3416],"content":"[!NOTE]\n The `CPrintDialogEx` class encapsulates the services provided by the Windows 2000 Print property sheet. For more information see the [CPrintDialogEx](../../mfc/reference/cprintdialogex-class.md) overview.","leadings":["","> "],"nodes":[{"content":" The `CPrintDialogEx` class encapsulates the services provided by the Windows 2000 Print property sheet. For more information see the [CPrintDialogEx](../../mfc/reference/cprintdialogex-class.md) overview.","pos":[8,213],"nodes":[{"content":"The <ph id=\"ph1\">`CPrintDialogEx`</ph> class encapsulates the services provided by the Windows 2000 Print property sheet.","pos":[1,104],"source":" The `CPrintDialogEx` class encapsulates the services provided by the Windows 2000 Print property sheet."},{"content":"For more information see the <bpt id=\"p1\">[</bpt>CPrintDialogEx<ept id=\"p1\">](../../mfc/reference/cprintdialogex-class.md)</ept> overview.","pos":[105,205],"source":" For more information see the [CPrintDialogEx](../../mfc/reference/cprintdialogex-class.md) overview."}]}]},{"pos":[3437,3640],"content":"'s functionality is superceded by that of <bpt id=\"p1\">[</bpt>CPageSetupDialog<ept id=\"p1\">](../../mfc/reference/cpagesetupdialog-class.md)</ept>, which is designed to provide you with a common dialog box for both print setup and page setup.","source":"'s functionality is superceded by that of [CPageSetupDialog](../../mfc/reference/cpagesetupdialog-class.md), which is designed to provide you with a common dialog box for both print setup and page setup."},{"content":"You can rely on the framework to handle many aspects of the printing process for your application.","pos":[3647,3745]},{"content":"In this case, the framework automatically displays the Windows common dialog box for printing.","pos":[3746,3840]},{"content":"You can also have the framework handle printing for your application but override the common Print dialog box with your own print dialog box.","pos":[3841,3982]},{"content":"For more information about using the framework to handle printing tasks, see the article <bpt id=\"p1\">[</bpt>Printing<ept id=\"p1\">](../../mfc/printing.md)</ept>.","pos":[3983,4106],"source":" For more information about using the framework to handle printing tasks, see the article [Printing](../../mfc/printing.md)."},{"content":"If you want your application to handle printing without the framework's involvement, you can use the <ph id=\"ph1\">`CPrintDialog`</ph> class \"as is\" with the constructor provided, or you can derive your own dialog class from <ph id=\"ph2\">`CPrintDialog`</ph> and write a constructor to suit your needs.","pos":[4113,4377],"source":"If you want your application to handle printing without the framework's involvement, you can use the `CPrintDialog` class \"as is\" with the constructor provided, or you can derive your own dialog class from `CPrintDialog` and write a constructor to suit your needs."},{"content":"In either case, these dialog boxes will behave like standard MFC dialog boxes because they are derived from class <ph id=\"ph1\">`CCommonDialog`</ph>.","pos":[4378,4508],"source":" In either case, these dialog boxes will behave like standard MFC dialog boxes because they are derived from class `CCommonDialog`."},{"content":"To use a <ph id=\"ph1\">`CPrintDialog`</ph> object, first create the object using the <ph id=\"ph2\">`CPrintDialog`</ph> constructor.","pos":[4515,4608],"source":"To use a `CPrintDialog` object, first create the object using the `CPrintDialog` constructor."},{"content":"Once the dialog box has been constructed, you can set or modify any values in the <bpt id=\"p1\">[</bpt>m_pd<ept id=\"p1\">](#cprintdialog__m_pd)</ept> structure to initialize the values of the dialog box's controls.","pos":[4609,4783],"source":" Once the dialog box has been constructed, you can set or modify any values in the [m_pd](#cprintdialog__m_pd) structure to initialize the values of the dialog box's controls."},{"content":"The <ph id=\"ph1\">`m_pd`</ph> structure is of type <bpt id=\"p1\">[</bpt>PRINTDLG<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms646843)</ept>.","pos":[4784,4887],"source":" The `m_pd` structure is of type [PRINTDLG](http://msdn.microsoft.com/library/windows/desktop/ms646843)."},{"content":"For more information on this structure, see the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","pos":[4888,4988],"source":" For more information on this structure, see the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"content":"If you do not supply your own handles in <ph id=\"ph1\">`m_pd`</ph> for the <bpt id=\"p1\">**</bpt>hDevMode<ept id=\"p1\">**</ept> and <bpt id=\"p2\">**</bpt>hDevNames<ept id=\"p2\">**</ept> members, be sure to call the Windows function <bpt id=\"p3\">**</bpt>GlobalFree<ept id=\"p3\">**</ept> for these handles when you are done with the dialog box.","pos":[4995,5199],"source":"If you do not supply your own handles in `m_pd` for the **hDevMode** and **hDevNames** members, be sure to call the Windows function **GlobalFree** for these handles when you are done with the dialog box."},{"content":"When using the framework's Print Setup implementation provided by <ph id=\"ph1\">`CWinApp::OnFilePrintSetup`</ph>, you do not have to free these handles.","pos":[5200,5333],"source":" When using the framework's Print Setup implementation provided by `CWinApp::OnFilePrintSetup`, you do not have to free these handles."},{"content":"The handles are maintained by <ph id=\"ph1\">`CWinApp`</ph> and are freed in <ph id=\"ph2\">`CWinApp`</ph>'s destructor.","pos":[5334,5414],"source":" The handles are maintained by `CWinApp` and are freed in `CWinApp`'s destructor."},{"content":"It is only necessary to free these handles when using <ph id=\"ph1\">`CPrintDialog`</ph> stand-alone.","pos":[5415,5496],"source":" It is only necessary to free these handles when using `CPrintDialog` stand-alone."},{"content":"After initializing the dialog box controls, call the <ph id=\"ph1\">`DoModal`</ph> member function to display the dialog box and allow the user to select print options.","pos":[5503,5651],"source":"After initializing the dialog box controls, call the `DoModal` member function to display the dialog box and allow the user to select print options."},{"content":"returns whether the user selected the OK ( <bpt id=\"p1\">**</bpt>IDOK<ept id=\"p1\">**</ept>) or Cancel ( <bpt id=\"p2\">**</bpt>IDCANCEL<ept id=\"p2\">**</ept>) button.","pos":[5662,5748],"source":" returns whether the user selected the OK ( **IDOK**) or Cancel ( **IDCANCEL**) button."},{"pos":[5755,5885],"content":"If <ph id=\"ph1\">`DoModal`</ph> returns <bpt id=\"p1\">**</bpt>IDOK<ept id=\"p1\">**</ept>, you can use one of <ph id=\"ph2\">`CPrintDialog`</ph>'s member functions to retrieve the information input by the user.","source":"If `DoModal` returns **IDOK**, you can use one of `CPrintDialog`'s member functions to retrieve the information input by the user."},{"content":"The <ph id=\"ph1\">`CPrintDialog::GetDefaults`</ph> member function is useful for retrieving the current printer defaults without displaying a dialog box.","pos":[5892,6026],"source":"The `CPrintDialog::GetDefaults` member function is useful for retrieving the current printer defaults without displaying a dialog box."},{"content":"This member function requires no user interaction.","pos":[6027,6077]},{"content":"You can use the Windows <bpt id=\"p1\">**</bpt>CommDlgExtendedError<ept id=\"p1\">**</ept> function to determine whether an error occurred during initialization of the dialog box and to learn more about the error.","pos":[6084,6255],"source":"You can use the Windows **CommDlgExtendedError** function to determine whether an error occurred during initialization of the dialog box and to learn more about the error."},{"content":"For more information on this function, see the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","pos":[6256,6355],"source":" For more information on this function, see the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"pos":[6377,6455],"content":"relies on the COMMDLG.DLL file that ships with Windows versions 3.1 and later."},{"content":"To customize the dialog box, derive a class from <ph id=\"ph1\">`CPrintDialog`</ph>, provide a custom dialog template, and add a message map to process the notification messages from the extended controls.","pos":[6462,6647],"source":"To customize the dialog box, derive a class from `CPrintDialog`, provide a custom dialog template, and add a message map to process the notification messages from the extended controls."},{"content":"Any unprocessed messages should be passed on to the base class.","pos":[6648,6711]},{"content":"Customizing the hook function is not required.","pos":[6712,6758]},{"content":"To process the same message differently depending on whether the dialog box is Print or Print Setup, you must derive a class for each dialog box.","pos":[6765,6910]},{"content":"You must also override the Windows <bpt id=\"p1\">**</bpt>AttachOnSetup<ept id=\"p1\">**</ept> function, which handles the creation of a new dialog box when the Print Setup button is selected within a Print dialog box.","pos":[6911,7087],"source":" You must also override the Windows **AttachOnSetup** function, which handles the creation of a new dialog box when the Print Setup button is selected within a Print dialog box."},{"pos":[7094,7204],"content":"For more information on using <ph id=\"ph1\">`CPrintDialog`</ph>, see <bpt id=\"p1\">[</bpt>Common Dialog Classes<ept id=\"p1\">](../../mfc/common-dialog-classes.md)</ept>.","source":"For more information on using `CPrintDialog`, see [Common Dialog Classes](../../mfc/common-dialog-classes.md)."},{"content":"Inheritance Hierarchy","pos":[7213,7234]},{"content":"CObject","pos":[7239,7246]},{"content":"CCmdTarget","pos":[7293,7303]},{"content":"CWnd","pos":[7353,7357]},{"content":"CDialog","pos":[7401,7408]},{"content":"CCommonDialog","pos":[7455,7468]},{"content":"Requirements","pos":[7543,7555]},{"pos":[7559,7580],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> afxdlgs.h","source":"**Header:** afxdlgs.h"},{"pos":[7633,7659],"content":"CPrintDialog::CPrintDialog"},{"content":"Constructs either a Windows Print or Print Setup dialog object.","pos":[7663,7726]},{"content":"Parameters","pos":[7934,7944]},{"content":"Specifies whether the standard Windows Print dialog box or Print Setup dialog box is displayed.","pos":[7969,8064]},{"content":"Set this parameter to <bpt id=\"p1\">**</bpt>TRUE<ept id=\"p1\">**</ept> to display the standard Windows Print Setup dialog box.","pos":[8065,8151],"source":" Set this parameter to **TRUE** to display the standard Windows Print Setup dialog box."},{"content":"Set it to <bpt id=\"p1\">**</bpt>FALSE<ept id=\"p1\">**</ept> to display the Windows Print dialog box.","pos":[8152,8212],"source":" Set it to **FALSE** to display the Windows Print dialog box."},{"content":"If <ph id=\"ph1\">`bPrintSetupOnly`</ph> is <bpt id=\"p1\">**</bpt>FALSE<ept id=\"p1\">**</ept>, a Print Setup option button is still displayed in the Print dialog box.","pos":[8213,8319],"source":" If `bPrintSetupOnly` is **FALSE**, a Print Setup option button is still displayed in the Print dialog box."},{"content":"One or more flags you can use to customize the settings of the dialog box, combined using the bitwise OR operator.","pos":[8339,8453]},{"content":"For example, the <bpt id=\"p1\">**</bpt>PD_ALLPAGES<ept id=\"p1\">**</ept> flag sets the default print range to all pages of the document.","pos":[8454,8550],"source":" For example, the **PD_ALLPAGES** flag sets the default print range to all pages of the document."},{"content":"See the <bpt id=\"p1\">[</bpt>PRINTDLG<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms646843)</ept> structure in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph> for more information on these flags.","pos":[8551,8735],"source":" See the [PRINTDLG](http://msdn.microsoft.com/library/windows/desktop/ms646843) structure in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)] for more information on these flags."},{"content":"A pointer to the dialog box's parent or owner window.","pos":[8758,8811]},{"content":"Remarks","pos":[8821,8828]},{"content":"This member function only constructs the object.","pos":[8832,8880]},{"content":"Use the <ph id=\"ph1\">`DoModal`</ph> member function to display the dialog box.","pos":[8881,8941],"source":" Use the `DoModal` member function to display the dialog box."},{"content":"Note that when you call the constructor with <ph id=\"ph1\">`bPrintSetupOnly`</ph> set to <bpt id=\"p1\">**</bpt>FALSE<ept id=\"p1\">**</ept>, the <bpt id=\"p2\">**</bpt>PD_RETURNDC<ept id=\"p2\">**</ept> flag is automatically used.","pos":[8948,9076],"source":"Note that when you call the constructor with `bPrintSetupOnly` set to **FALSE**, the **PD_RETURNDC** flag is automatically used."},{"content":"After calling <ph id=\"ph1\">`DoModal`</ph>, <ph id=\"ph2\">`GetDefaults`</ph>, or <ph id=\"ph3\">`GetPrinterDC`</ph>, a printer DC will be returned in <ph id=\"ph4\">`m_pd.hDC`</ph>.","pos":[9077,9180],"source":" After calling `DoModal`, `GetDefaults`, or `GetPrinterDC`, a printer DC will be returned in `m_pd.hDC`."},{"content":"This DC must be freed with a call to <bpt id=\"p1\">[</bpt>DeleteDC<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/dd183533)</ept> by the caller of <ph id=\"ph1\">`CPrintDialog`</ph>.","pos":[9181,9321],"source":" This DC must be freed with a call to [DeleteDC](http://msdn.microsoft.com/library/windows/desktop/dd183533) by the caller of `CPrintDialog`."},{"content":"Example","pos":[9331,9338]},{"pos":[9353,9371],"content":"NVC_MFCDocView#174"},{"pos":[9481,9510],"content":"CPrintDialog::CreatePrinterDC"},{"pos":[9514,9700],"content":"Creates a printer device context (DC) from the <bpt id=\"p1\">[</bpt>DEVMODE<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/dd183565)</ept> and <bpt id=\"p2\">[</bpt>DEVNAMES<ept id=\"p2\">](../../mfc/reference/devnames-structure.md)</ept> structures.","source":"Creates a printer device context (DC) from the [DEVMODE](http://msdn.microsoft.com/library/windows/desktop/dd183565) and [DEVNAMES](../../mfc/reference/devnames-structure.md) structures."},{"content":"Return Value","pos":[9748,9760]},{"content":"Handle to the newly created printer device context.","pos":[9764,9815]},{"content":"Remarks","pos":[9825,9832]},{"content":"This DC is assumed to be the current printer DC, and any other previously obtained printer DCs must be deleted by the user.","pos":[9836,9959]},{"content":"This function can be called, and the resulting DC used, without ever displaying the Print dialog box.","pos":[9960,10061]},{"content":"Example","pos":[10071,10078]},{"pos":[10093,10111],"content":"NVC_MFCDocView#106"},{"pos":[10213,10234],"content":"CPrintDialog::DoModal"},{"content":"Displays the Windows common print dialog box and allows the user to select various printing options such as the number of copies, page range, and whether copies should be collated.","pos":[10238,10418]},{"content":"Return Value","pos":[10470,10482]},{"content":"<bpt id=\"p1\">**</bpt>IDOK<ept id=\"p1\">**</ept> or <bpt id=\"p2\">**</bpt>IDCANCEL<ept id=\"p2\">**</ept>.","pos":[10486,10511],"source":"**IDOK** or **IDCANCEL**."},{"content":"If <bpt id=\"p1\">**</bpt>IDCANCEL<ept id=\"p1\">**</ept> is returned, call the Windows <bpt id=\"p2\">[</bpt>CommDlgExtendedError<ept id=\"p2\">](http://msdn.microsoft.com/library/windows/desktop/ms646916)</ept> function to determine whether an error occurred.","pos":[10512,10689],"source":" If **IDCANCEL** is returned, call the Windows [CommDlgExtendedError](http://msdn.microsoft.com/library/windows/desktop/ms646916) function to determine whether an error occurred."},{"pos":[10696,10800],"content":"<bpt id=\"p1\">**</bpt>IDOK<ept id=\"p1\">**</ept> and <bpt id=\"p2\">**</bpt>IDCANCEL<ept id=\"p2\">**</ept> are constants that indicate whether the user selected the OK or Cancel button.","source":"**IDOK** and **IDCANCEL** are constants that indicate whether the user selected the OK or Cancel button."},{"content":"Remarks","pos":[10810,10817]},{"pos":[10821,11012],"content":"If you want to initialize the various print dialog options by setting members of the <ph id=\"ph1\">`m_pd`</ph> structure, you should do this before calling <ph id=\"ph2\">`DoModal`</ph>, but after the dialog object is constructed.","source":"If you want to initialize the various print dialog options by setting members of the `m_pd` structure, you should do this before calling `DoModal`, but after the dialog object is constructed."},{"pos":[11019,11158],"content":"After calling <ph id=\"ph1\">`DoModal`</ph>, you can call other member functions to retrieve the settings or information input by the user into the dialog box.","source":"After calling `DoModal`, you can call other member functions to retrieve the settings or information input by the user into the dialog box."},{"content":"Note that when you call the constructor with <ph id=\"ph1\">`bPrintSetupOnly`</ph> set to <bpt id=\"p1\">**</bpt>FALSE<ept id=\"p1\">**</ept>, the <bpt id=\"p2\">**</bpt>PD_RETURNDC<ept id=\"p2\">**</ept> flag is automatically used.","pos":[11165,11293],"source":"Note that when you call the constructor with `bPrintSetupOnly` set to **FALSE**, the **PD_RETURNDC** flag is automatically used."},{"content":"After calling <ph id=\"ph1\">`DoModal`</ph>, <ph id=\"ph2\">`GetDefaults`</ph>, or <ph id=\"ph3\">`GetPrinterDC`</ph>, a printer DC will be returned in <ph id=\"ph4\">`m_pd.hDC`</ph>.","pos":[11294,11397],"source":" After calling `DoModal`, `GetDefaults`, or `GetPrinterDC`, a printer DC will be returned in `m_pd.hDC`."},{"content":"This DC must be freed with a call to <bpt id=\"p1\">[</bpt>DeleteDC<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/dd183533)</ept> by the caller of <ph id=\"ph1\">`CPrintDialog`</ph>.","pos":[11398,11538],"source":" This DC must be freed with a call to [DeleteDC](http://msdn.microsoft.com/library/windows/desktop/dd183533) by the caller of `CPrintDialog`."},{"content":"Example","pos":[11548,11555]},{"pos":[11560,11644],"content":"See the example for <bpt id=\"p1\">[</bpt>CPrintDialog::CreatePrinterDC<ept id=\"p1\">](#cprintdialog__createprinterdc)</ept>.","source":"See the example for [CPrintDialog::CreatePrinterDC](#cprintdialog__createprinterdc)."},{"pos":[11694,11717],"content":"CPrintDialog::GetCopies"},{"content":"Retrieves the number of copies requested.","pos":[11721,11762]},{"content":"Return Value","pos":[11813,11825]},{"content":"The number of copies requested.","pos":[11829,11860]},{"content":"Remarks","pos":[11870,11877]},{"pos":[11881,11967],"content":"Call this function after calling <ph id=\"ph1\">`DoModal`</ph> to retrieve the number of copies requested.","source":"Call this function after calling `DoModal` to retrieve the number of copies requested."},{"content":"Example","pos":[11977,11984]},{"pos":[11989,12067],"content":"See the example for <bpt id=\"p1\">[</bpt>CPrintDialog::PrintCollate<ept id=\"p1\">](#cprintdialog__printcollate)</ept>.","source":"See the example for [CPrintDialog::PrintCollate](#cprintdialog__printcollate)."},{"pos":[12119,12144],"content":"CPrintDialog::GetDefaults"},{"content":"Retrieves the device defaults of the default printer without displaying a dialog box.","pos":[12148,12233]},{"content":"Return Value","pos":[12278,12290]},{"content":"Nonzero if the function was successful; otherwise 0.","pos":[12294,12346]},{"content":"Remarks","pos":[12356,12363]},{"pos":[12367,12423],"content":"The retrieved values are placed in the <ph id=\"ph1\">`m_pd`</ph> structure.","source":"The retrieved values are placed in the `m_pd` structure."},{"content":"In some cases, a call to this function will call the <bpt id=\"p1\">[</bpt>constructor<ept id=\"p1\">](#cprintdialog__cprintdialog)</ept> for <ph id=\"ph1\">`CPrintDialog`</ph> with <ph id=\"ph2\">`bPrintSetupOnly`</ph> set to <bpt id=\"p2\">**</bpt>FALSE<ept id=\"p2\">**</ept>.","pos":[12430,12585],"source":"In some cases, a call to this function will call the [constructor](#cprintdialog__cprintdialog) for `CPrintDialog` with `bPrintSetupOnly` set to **FALSE**."},{"content":"In these cases, a printer DC and <bpt id=\"p1\">**</bpt>hDevNames<ept id=\"p1\">**</ept> and <bpt id=\"p2\">**</bpt>hDevMode<ept id=\"p2\">**</ept> (two handles located in the <ph id=\"ph1\">`m_pd`</ph> data member) are automatically allocated.","pos":[12586,12726],"source":" In these cases, a printer DC and **hDevNames** and **hDevMode** (two handles located in the `m_pd` data member) are automatically allocated."},{"content":"If the constructor for <ph id=\"ph1\">`CPrintDialog`</ph> was called with <ph id=\"ph2\">`bPrintSetupOnly`</ph> set to <bpt id=\"p1\">**</bpt>FALSE<ept id=\"p1\">**</ept>, this function will not only return <bpt id=\"p2\">**</bpt>hDevNames<ept id=\"p2\">**</ept> and <bpt id=\"p3\">**</bpt>hDevMode<ept id=\"p3\">**</ept> (located in <bpt id=\"p4\">**</bpt>m_pd.hDevNames<ept id=\"p4\">**</ept> and <bpt id=\"p5\">**</bpt>m_pd.hDevMode<ept id=\"p5\">**</ept>) to the caller, but will also return a printer DC in <bpt id=\"p6\">**</bpt>m_pd.hDC<ept id=\"p6\">**</ept>.","pos":[12733,13008],"source":"If the constructor for `CPrintDialog` was called with `bPrintSetupOnly` set to **FALSE**, this function will not only return **hDevNames** and **hDevMode** (located in **m_pd.hDevNames** and **m_pd.hDevMode**) to the caller, but will also return a printer DC in **m_pd.hDC**."},{"content":"It is the responsibility of the caller to delete the printer DC and call the Windows <bpt id=\"p1\">[</bpt>GlobalFree<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/aa366579)</ept> function on the handles when you are finished with the <ph id=\"ph1\">`CPrintDialog`</ph> object.","pos":[13009,13244],"source":" It is the responsibility of the caller to delete the printer DC and call the Windows [GlobalFree](http://msdn.microsoft.com/library/windows/desktop/aa366579) function on the handles when you are finished with the `CPrintDialog` object."},{"content":"Example","pos":[13254,13261]},{"content":"This code fragment gets the default printer's device context and reports to the user the resolution of the printer in dots per inch.","pos":[13265,13397]},{"content":"(This attribute of the printer's capabilities is often referred to as DPI.)","pos":[13398,13473]},{"pos":[13491,13509],"content":"NVC_MFCDocView#107"},{"pos":[13617,13644],"content":"CPrintDialog::GetDeviceName"},{"content":"Retrieves the name of the currently selected printer device.","pos":[13648,13708]},{"content":"Return Value","pos":[13767,13779]},{"content":"The name of the currently selected printer.","pos":[13783,13826]},{"content":"Remarks","pos":[13836,13843]},{"content":"Call this function after calling <bpt id=\"p1\">[</bpt>DoModal<ept id=\"p1\">](#cprintdialog__domodal)</ept> to retrieve the name of the currently selected printer, or after calling <bpt id=\"p2\">[</bpt>GetDefaults<ept id=\"p2\">](#cprintdialog__getdefaults)</ept> to retrieve the current device defaults of the default printer.","pos":[13847,14092],"source":"Call this function after calling [DoModal](#cprintdialog__domodal) to retrieve the name of the currently selected printer, or after calling [GetDefaults](#cprintdialog__getdefaults) to retrieve the current device defaults of the default printer."},{"content":"Use a pointer to the <ph id=\"ph1\">`CString`</ph> object returned by <ph id=\"ph2\">`GetDeviceName`</ph> as the value of <ph id=\"ph3\">`lpszDeviceName`</ph> in a call to <bpt id=\"p1\">[</bpt>CDC::CreateDC<ept id=\"p1\">](../../mfc/reference/cdc-class.md#cdc__createdc)</ept>.","pos":[14093,14269],"source":" Use a pointer to the `CString` object returned by `GetDeviceName` as the value of `lpszDeviceName` in a call to [CDC::CreateDC](../../mfc/reference/cdc-class.md#cdc__createdc)."},{"content":"Example","pos":[14279,14286]},{"content":"This code fragment shows the user's default printer name and the port it is connected to, along with the spooler name the printer uses.","pos":[14290,14425]},{"content":"The code might show a message box that says, \"Your default printer is HP LaserJet IIIP on <ph id=\"ph1\">\\\\</ph>\\server\\share using winspool.\", for example.","pos":[14426,14562],"source":" The code might show a message box that says, \"Your default printer is HP LaserJet IIIP on \\\\\\server\\share using winspool.\", for example."},{"pos":[14580,14598],"content":"NVC_MFCDocView#108"},{"pos":[14703,14727],"content":"CPrintDialog::GetDevMode"},{"pos":[14731,14765],"content":"Retrieves the <ph id=\"ph1\">`DEVMODE`</ph> structure.","source":"Retrieves the `DEVMODE` structure."},{"content":"Return Value","pos":[14823,14835]},{"content":"The <bpt id=\"p1\">[</bpt>DEVMODE<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/dd183565)</ept> data structure, which contains information about the device initialization and environment of a print driver.","pos":[14839,15022],"source":"The [DEVMODE](http://msdn.microsoft.com/library/windows/desktop/dd183565) data structure, which contains information about the device initialization and environment of a print driver."},{"content":"You must unlock the memory taken by this structure with the Windows <bpt id=\"p1\">[</bpt>GlobalUnlock<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/aa366595)</ept> function, which is described in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","pos":[15023,15254],"source":" You must unlock the memory taken by this structure with the Windows [GlobalUnlock](http://msdn.microsoft.com/library/windows/desktop/aa366595) function, which is described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"content":"Remarks","pos":[15264,15271]},{"pos":[15275,15437],"content":"Call this function after calling <bpt id=\"p1\">[</bpt>DoModal<ept id=\"p1\">](#cprintdialog__domodal)</ept> or <bpt id=\"p2\">[</bpt>GetDefaults<ept id=\"p2\">](#cprintdialog__getdefaults)</ept> to retrieve information about the printing device.","source":"Call this function after calling [DoModal](#cprintdialog__domodal) or [GetDefaults](#cprintdialog__getdefaults) to retrieve information about the printing device."},{"content":"Example","pos":[15447,15454]},{"pos":[15459,15537],"content":"See the example for <bpt id=\"p1\">[</bpt>CPrintDialog::PrintCollate<ept id=\"p1\">](#cprintdialog__printcollate)</ept>.","source":"See the example for [CPrintDialog::PrintCollate](#cprintdialog__printcollate)."},{"pos":[15591,15618],"content":"CPrintDialog::GetDriverName"},{"content":"Retrieves the name of the currently selected printer driver.","pos":[15622,15682]},{"content":"Return Value","pos":[15741,15753]},{"pos":[15757,15811],"content":"A <ph id=\"ph1\">`CString`</ph> specifying the system-defined driver name.","source":"A `CString` specifying the system-defined driver name."},{"content":"Remarks","pos":[15821,15828]},{"content":"Call this function after calling <bpt id=\"p1\">[</bpt>DoModal<ept id=\"p1\">](#cprintdialog__domodal)</ept> or <bpt id=\"p2\">[</bpt>GetDefaults<ept id=\"p2\">](#cprintdialog__getdefaults)</ept> to retrieve the name of the system-defined printer device driver.","pos":[15832,16009],"source":"Call this function after calling [DoModal](#cprintdialog__domodal) or [GetDefaults](#cprintdialog__getdefaults) to retrieve the name of the system-defined printer device driver."},{"content":"Use a pointer to the <ph id=\"ph1\">`CString`</ph> object returned by <ph id=\"ph2\">`GetDriverName`</ph> as the value of <ph id=\"ph3\">`lpszDriverName`</ph> in a call to <bpt id=\"p1\">[</bpt>CDC::CreateDC<ept id=\"p1\">](../../mfc/reference/cdc-class.md#cdc__createdc)</ept>.","pos":[16010,16186],"source":" Use a pointer to the `CString` object returned by `GetDriverName` as the value of `lpszDriverName` in a call to [CDC::CreateDC](../../mfc/reference/cdc-class.md#cdc__createdc)."},{"content":"Example","pos":[16196,16203]},{"pos":[16208,16288],"content":"See the example for <bpt id=\"p1\">[</bpt>CPrintDialog::GetDeviceName<ept id=\"p1\">](#cprintdialog__getdevicename)</ept>.","source":"See the example for [CPrintDialog::GetDeviceName](#cprintdialog__getdevicename)."},{"pos":[16340,16365],"content":"CPrintDialog::GetFromPage"},{"content":"Retrieves the starting page of the print range.","pos":[16369,16416]},{"content":"Return Value","pos":[16469,16481]},{"content":"The starting page number in the range of pages to be printed.","pos":[16485,16546]},{"content":"Remarks","pos":[16556,16563]},{"pos":[16567,16683],"content":"Call this function after calling <ph id=\"ph1\">`DoModal`</ph> to retrieve the starting page number in the range of pages to be printed.","source":"Call this function after calling `DoModal` to retrieve the starting page number in the range of pages to be printed."},{"content":"Example","pos":[16693,16700]},{"pos":[16705,16767],"content":"See the example for <bpt id=\"p1\">[</bpt>CPrintDialog::m_pd<ept id=\"p1\">](#cprintdialog__m_pd)</ept>.","source":"See the example for [CPrintDialog::m_pd](#cprintdialog__m_pd)."},{"pos":[16819,16844],"content":"CPrintDialog::GetPortName"},{"content":"Retrieves the name of the currently selected printer port.","pos":[16848,16906]},{"content":"Return Value","pos":[16963,16975]},{"content":"The name of the currently selected printer port.","pos":[16979,17027]},{"content":"Remarks","pos":[17037,17044]},{"pos":[17048,17220],"content":"Call this function after calling <bpt id=\"p1\">[</bpt>DoModal<ept id=\"p1\">](#cprintdialog__domodal)</ept> or <bpt id=\"p2\">[</bpt>GetDefaults<ept id=\"p2\">](#cprintdialog__getdefaults)</ept> to retrieve the name of the currently selected printer port.","source":"Call this function after calling [DoModal](#cprintdialog__domodal) or [GetDefaults](#cprintdialog__getdefaults) to retrieve the name of the currently selected printer port."},{"content":"Example","pos":[17230,17237]},{"pos":[17242,17322],"content":"See the example for <bpt id=\"p1\">[</bpt>CPrintDialog::GetDeviceName<ept id=\"p1\">](#cprintdialog__getdevicename)</ept>.","source":"See the example for [CPrintDialog::GetDeviceName](#cprintdialog__getdevicename)."},{"pos":[17375,17401],"content":"CPrintDialog::GetPrinterDC"},{"content":"Retrieves a handle to the printer device context.","pos":[17405,17454]},{"content":"Return Value","pos":[17508,17520]},{"pos":[17524,17597],"content":"A handle to the printer device context if successful; otherwise <bpt id=\"p1\">**</bpt>NULL<ept id=\"p1\">**</ept>.","source":"A handle to the printer device context if successful; otherwise **NULL**."},{"content":"Remarks","pos":[17607,17614]},{"content":"If the <ph id=\"ph1\">`bPrintSetupOnly`</ph> parameter of the <ph id=\"ph2\">`CPrintDialog`</ph> constructor was <bpt id=\"p1\">**</bpt>FALSE<ept id=\"p1\">**</ept> (indicating that the Print dialog box is displayed), then <ph id=\"ph3\">`GetPrinterDC`</ph> returns a handle to the printer device context.","pos":[17618,17821],"source":"If the `bPrintSetupOnly` parameter of the `CPrintDialog` constructor was **FALSE** (indicating that the Print dialog box is displayed), then `GetPrinterDC` returns a handle to the printer device context."},{"content":"You must call the Windows <bpt id=\"p1\">[</bpt>DeleteDC<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/dd183533)</ept> function to delete the device context when you are done using it.","pos":[17822,17984],"source":" You must call the Windows [DeleteDC](http://msdn.microsoft.com/library/windows/desktop/dd183533) function to delete the device context when you are done using it."},{"content":"Example","pos":[17994,18001]},{"pos":[18016,18034],"content":"NVC_MFCDocView#109"},{"pos":[18138,18161],"content":"CPrintDialog::GetToPage"},{"content":"Retrieves the ending page of the print range.","pos":[18165,18210]},{"content":"Return Value","pos":[18261,18273]},{"content":"The ending page number in the range of pages to be printed.","pos":[18277,18336]},{"content":"Remarks","pos":[18346,18353]},{"pos":[18357,18471],"content":"Call this function after calling <ph id=\"ph1\">`DoModal`</ph> to retrieve the ending page number in the range of pages to be printed.","source":"Call this function after calling `DoModal` to retrieve the ending page number in the range of pages to be printed."},{"content":"Example","pos":[18481,18488]},{"pos":[18493,18555],"content":"See the example for <bpt id=\"p1\">[</bpt>CPrintDialog::m_pd<ept id=\"p1\">](#cprintdialog__m_pd)</ept>.","source":"See the example for [CPrintDialog::m_pd](#cprintdialog__m_pd)."},{"pos":[18600,18618],"content":"CPrintDialog::m_pd"},{"content":"A structure whose members store the characteristics of the dialog object.","pos":[18622,18695]},{"content":"Remarks","pos":[18738,18745]},{"content":"After constructing a <ph id=\"ph1\">`CPrintDialog`</ph> object, you can use <ph id=\"ph2\">`m_pd`</ph> to set various aspects of the dialog box before calling the <bpt id=\"p1\">[</bpt>DoModal<ept id=\"p1\">](#cprintdialog__domodal)</ept> member function.","pos":[18749,18922],"source":"After constructing a `CPrintDialog` object, you can use `m_pd` to set various aspects of the dialog box before calling the [DoModal](#cprintdialog__domodal) member function."},{"content":"For more information on the <ph id=\"ph1\">`m_pd`</ph> structure, see <bpt id=\"p1\">[</bpt>PRINTDLG<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms646843)</ept> in the <ph id=\"ph2\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","pos":[18923,19103],"source":" For more information on the `m_pd` structure, see [PRINTDLG](http://msdn.microsoft.com/library/windows/desktop/ms646843) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"pos":[19110,19196],"content":"If you modify the <ph id=\"ph1\">`m_pd`</ph> data member directly, you will override any default behavior.","source":"If you modify the `m_pd` data member directly, you will override any default behavior."},{"content":"Example","pos":[19206,19213]},{"pos":[19228,19246],"content":"NVC_MFCDocView#111"},{"pos":[19349,19371],"content":"CPrintDialog::PrintAll"},{"content":"Determines whether to print all pages of the document.","pos":[19375,19429]},{"content":"Return Value","pos":[19480,19492]},{"content":"Nonzero if all pages in the document are to be printed; otherwise 0.","pos":[19496,19564]},{"content":"Remarks","pos":[19574,19581]},{"pos":[19585,19684],"content":"Call this function after calling <ph id=\"ph1\">`DoModal`</ph> to determine whether to print all pages in the document.","source":"Call this function after calling `DoModal` to determine whether to print all pages in the document."},{"content":"Example","pos":[19694,19701]},{"pos":[19706,19768],"content":"See the example for <bpt id=\"p1\">[</bpt>CPrintDialog::m_pd<ept id=\"p1\">](#cprintdialog__m_pd)</ept>.","source":"See the example for [CPrintDialog::m_pd](#cprintdialog__m_pd)."},{"pos":[19821,19847],"content":"CPrintDialog::PrintCollate"},{"content":"Determines whether collated copies are requested.","pos":[19851,19900]},{"content":"Return Value","pos":[19955,19967]},{"content":"Nonzero if the user selects the collate check box in the dialog box; otherwise 0.","pos":[19971,20052]},{"content":"Remarks","pos":[20062,20069]},{"pos":[20073,20199],"content":"Call this function after calling <ph id=\"ph1\">`DoModal`</ph> to determine whether the printer should collate all printed copies of the document.","source":"Call this function after calling `DoModal` to determine whether the printer should collate all printed copies of the document."},{"content":"Example","pos":[20209,20216]},{"pos":[20231,20249],"content":"NVC_MFCDocView#110"},{"pos":[20354,20378],"content":"CPrintDialog::PrintRange"},{"content":"Determines whether to print only a specified range of pages.","pos":[20382,20442]},{"content":"Return Value","pos":[20495,20507]},{"content":"Nonzero if only a range of pages in the document are to be printed; otherwise 0.","pos":[20511,20591]},{"content":"Remarks","pos":[20601,20608]},{"pos":[20612,20723],"content":"Call this function after calling <ph id=\"ph1\">`DoModal`</ph> to determine whether to print only a range of pages in the document.","source":"Call this function after calling `DoModal` to determine whether to print only a range of pages in the document."},{"content":"Example","pos":[20733,20740]},{"pos":[20745,20807],"content":"See the example for <bpt id=\"p1\">[</bpt>CPrintDialog::m_pd<ept id=\"p1\">](#cprintdialog__m_pd)</ept>.","source":"See the example for [CPrintDialog::m_pd](#cprintdialog__m_pd)."},{"pos":[20862,20890],"content":"CPrintDialog::PrintSelection"},{"content":"Determines whether to print only the currently selected items.","pos":[20894,20956]},{"content":"Return Value","pos":[21013,21025]},{"content":"Nonzero if only the selected items are to be printed; otherwise 0.","pos":[21029,21095]},{"content":"Remarks","pos":[21105,21112]},{"pos":[21116,21223],"content":"Call this function after calling <ph id=\"ph1\">`DoModal`</ph> to determine whether to print only the currently selected items.","source":"Call this function after calling `DoModal` to determine whether to print only the currently selected items."},{"content":"Example","pos":[21233,21240]},{"pos":[21245,21307],"content":"See the example for <bpt id=\"p1\">[</bpt>CPrintDialog::m_pd<ept id=\"p1\">](#cprintdialog__m_pd)</ept>.","source":"See the example for [CPrintDialog::m_pd](#cprintdialog__m_pd)."},{"content":"See Also","pos":[21316,21324]},{"content":"MFC Sample DIBLOOK","pos":[21329,21347]},{"content":"CCommonDialog Class","pos":[21383,21402]},{"content":"Hierarchy Chart","pos":[21453,21468]},{"content":"CPrintInfo Structure","pos":[21505,21525]}],"content":"---\ntitle: \"CPrintDialog Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"CPrintDialog\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"Print Setup dialog box\"\n  - \"Print dialog box\"\n  - \"CPrintDialog class\"\nms.assetid: 5bdb2424-adf8-433d-a97c-df11a83bc4e4\ncaps.latest.revision: 23\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# CPrintDialog Class\nEncapsulates the services provided by the Windows common dialog box for printing.  \n  \n## Syntax  \n  \n```  \nclass CPrintDialog : public CCommonDialog  \n```  \n  \n## Members  \n  \n### Public Constructors  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CPrintDialog::CPrintDialog](#cprintdialog__cprintdialog)|Constructs a `CPrintDialog` object.|  \n  \n### Public Methods  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CPrintDialog::CreatePrinterDC](#cprintdialog__createprinterdc)|Creates a printer device context without displaying the Print dialog box.|  \n|[CPrintDialog::DoModal](#cprintdialog__domodal)|Displays the dialog box and allows the user to make a selection.|  \n|[CPrintDialog::GetCopies](#cprintdialog__getcopies)|Retrieves the number of copies requested.|  \n|[CPrintDialog::GetDefaults](#cprintdialog__getdefaults)|Retrieves device defaults without displaying a dialog box.|  \n|[CPrintDialog::GetDeviceName](#cprintdialog__getdevicename)|Retrieves the name of the currently selected printer device.|  \n|[CPrintDialog::GetDevMode](#cprintdialog__getdevmode)|Retrieves the `DEVMODE` structure.|  \n|[CPrintDialog::GetDriverName](#cprintdialog__getdrivername)|Retrieves the name of the currently selected printer driver.|  \n|[CPrintDialog::GetFromPage](#cprintdialog__getfrompage)|Retrieves the starting page of the print range.|  \n|[CPrintDialog::GetPortName](#cprintdialog__getportname)|Retrieves the name of the currently selected printer port.|  \n|[CPrintDialog::GetPrinterDC](#cprintdialog__getprinterdc)|Retrieves a handle to the printer device context.|  \n|[CPrintDialog::GetToPage](#cprintdialog__gettopage)|Retrieves the ending page of the print range.|  \n|[CPrintDialog::PrintAll](#cprintdialog__printall)|Determines whether to print all pages of the document.|  \n|[CPrintDialog::PrintCollate](#cprintdialog__printcollate)|Determines whether collated copies are requested.|  \n|[CPrintDialog::PrintRange](#cprintdialog__printrange)|Determines whether to print only a specified range of pages.|  \n|[CPrintDialog::PrintSelection](#cprintdialog__printselection)|Determines whether to print only the currently selected items.|  \n  \n### Public Data Members  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CPrintDialog::m_pd](#cprintdialog__m_pd)|A structure used to customize a `CPrintDialog` object.|  \n  \n## Remarks  \n Common print dialog boxes provide an easy way to implement Print and Print Setup dialog boxes in a manner consistent with Windows standards.  \n  \n> [!NOTE]\n>  The `CPrintDialogEx` class encapsulates the services provided by the Windows 2000 Print property sheet. For more information see the [CPrintDialogEx](../../mfc/reference/cprintdialogex-class.md) overview.  \n  \n `CPrintDialog`'s functionality is superceded by that of [CPageSetupDialog](../../mfc/reference/cpagesetupdialog-class.md), which is designed to provide you with a common dialog box for both print setup and page setup.  \n  \n You can rely on the framework to handle many aspects of the printing process for your application. In this case, the framework automatically displays the Windows common dialog box for printing. You can also have the framework handle printing for your application but override the common Print dialog box with your own print dialog box. For more information about using the framework to handle printing tasks, see the article [Printing](../../mfc/printing.md).  \n  \n If you want your application to handle printing without the framework's involvement, you can use the `CPrintDialog` class \"as is\" with the constructor provided, or you can derive your own dialog class from `CPrintDialog` and write a constructor to suit your needs. In either case, these dialog boxes will behave like standard MFC dialog boxes because they are derived from class `CCommonDialog`.  \n  \n To use a `CPrintDialog` object, first create the object using the `CPrintDialog` constructor. Once the dialog box has been constructed, you can set or modify any values in the [m_pd](#cprintdialog__m_pd) structure to initialize the values of the dialog box's controls. The `m_pd` structure is of type [PRINTDLG](http://msdn.microsoft.com/library/windows/desktop/ms646843). For more information on this structure, see the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n If you do not supply your own handles in `m_pd` for the **hDevMode** and **hDevNames** members, be sure to call the Windows function **GlobalFree** for these handles when you are done with the dialog box. When using the framework's Print Setup implementation provided by `CWinApp::OnFilePrintSetup`, you do not have to free these handles. The handles are maintained by `CWinApp` and are freed in `CWinApp`'s destructor. It is only necessary to free these handles when using `CPrintDialog` stand-alone.  \n  \n After initializing the dialog box controls, call the `DoModal` member function to display the dialog box and allow the user to select print options. `DoModal` returns whether the user selected the OK ( **IDOK**) or Cancel ( **IDCANCEL**) button.  \n  \n If `DoModal` returns **IDOK**, you can use one of `CPrintDialog`'s member functions to retrieve the information input by the user.  \n  \n The `CPrintDialog::GetDefaults` member function is useful for retrieving the current printer defaults without displaying a dialog box. This member function requires no user interaction.  \n  \n You can use the Windows **CommDlgExtendedError** function to determine whether an error occurred during initialization of the dialog box and to learn more about the error. For more information on this function, see the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n `CPrintDialog` relies on the COMMDLG.DLL file that ships with Windows versions 3.1 and later.  \n  \n To customize the dialog box, derive a class from `CPrintDialog`, provide a custom dialog template, and add a message map to process the notification messages from the extended controls. Any unprocessed messages should be passed on to the base class. Customizing the hook function is not required.  \n  \n To process the same message differently depending on whether the dialog box is Print or Print Setup, you must derive a class for each dialog box. You must also override the Windows **AttachOnSetup** function, which handles the creation of a new dialog box when the Print Setup button is selected within a Print dialog box.  \n  \n For more information on using `CPrintDialog`, see [Common Dialog Classes](../../mfc/common-dialog-classes.md).  \n  \n## Inheritance Hierarchy  \n [CObject](../../mfc/reference/cobject-class.md)  \n  \n [CCmdTarget](../../mfc/reference/ccmdtarget-class.md)  \n  \n [CWnd](../../mfc/reference/cwnd-class.md)  \n  \n [CDialog](../../mfc/reference/cdialog-class.md)  \n  \n [CCommonDialog](../../mfc/reference/ccommondialog-class.md)  \n  \n `CPrintDialog`  \n  \n## Requirements  \n **Header:** afxdlgs.h  \n  \n##  <a name=\"cprintdialog__cprintdialog\"></a>  CPrintDialog::CPrintDialog  \n Constructs either a Windows Print or Print Setup dialog object.  \n  \n```  \nCPrintDialog(\n    BOOL bPrintSetupOnly,  \n    DWORD dwFlags = PD_ALLPAGES | PD_USEDEVMODECOPIES | PD_NOPAGENUMS | PD_HIDEPRINTTOFILE | PD_NOSELECTION,  \n    CWnd* pParentWnd = NULL);\n```  \n  \n### Parameters  \n `bPrintSetupOnly`  \n Specifies whether the standard Windows Print dialog box or Print Setup dialog box is displayed. Set this parameter to **TRUE** to display the standard Windows Print Setup dialog box. Set it to **FALSE** to display the Windows Print dialog box. If `bPrintSetupOnly` is **FALSE**, a Print Setup option button is still displayed in the Print dialog box.  \n  \n `dwFlags`  \n One or more flags you can use to customize the settings of the dialog box, combined using the bitwise OR operator. For example, the **PD_ALLPAGES** flag sets the default print range to all pages of the document. See the [PRINTDLG](http://msdn.microsoft.com/library/windows/desktop/ms646843) structure in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)] for more information on these flags.  \n  \n `pParentWnd`  \n A pointer to the dialog box's parent or owner window.  \n  \n### Remarks  \n This member function only constructs the object. Use the `DoModal` member function to display the dialog box.  \n  \n Note that when you call the constructor with `bPrintSetupOnly` set to **FALSE**, the **PD_RETURNDC** flag is automatically used. After calling `DoModal`, `GetDefaults`, or `GetPrinterDC`, a printer DC will be returned in `m_pd.hDC`. This DC must be freed with a call to [DeleteDC](http://msdn.microsoft.com/library/windows/desktop/dd183533) by the caller of `CPrintDialog`.  \n  \n### Example  \n [!code-cpp[NVC_MFCDocView#174](../../mfc/codesnippet/cpp/cprintdialog-class_1.cpp)]  \n  \n##  <a name=\"cprintdialog__createprinterdc\"></a>  CPrintDialog::CreatePrinterDC  \n Creates a printer device context (DC) from the [DEVMODE](http://msdn.microsoft.com/library/windows/desktop/dd183565) and [DEVNAMES](../../mfc/reference/devnames-structure.md) structures.  \n  \n```  \nHDC CreatePrinterDC();\n```  \n  \n### Return Value  \n Handle to the newly created printer device context.  \n  \n### Remarks  \n This DC is assumed to be the current printer DC, and any other previously obtained printer DCs must be deleted by the user. This function can be called, and the resulting DC used, without ever displaying the Print dialog box.  \n  \n### Example  \n [!code-cpp[NVC_MFCDocView#106](../../mfc/codesnippet/cpp/cprintdialog-class_2.cpp)]  \n  \n##  <a name=\"cprintdialog__domodal\"></a>  CPrintDialog::DoModal  \n Displays the Windows common print dialog box and allows the user to select various printing options such as the number of copies, page range, and whether copies should be collated.  \n  \n```  \nvirtual INT_PTR DoModal();\n```  \n  \n### Return Value  \n **IDOK** or **IDCANCEL**. If **IDCANCEL** is returned, call the Windows [CommDlgExtendedError](http://msdn.microsoft.com/library/windows/desktop/ms646916) function to determine whether an error occurred.  \n  \n **IDOK** and **IDCANCEL** are constants that indicate whether the user selected the OK or Cancel button.  \n  \n### Remarks  \n If you want to initialize the various print dialog options by setting members of the `m_pd` structure, you should do this before calling `DoModal`, but after the dialog object is constructed.  \n  \n After calling `DoModal`, you can call other member functions to retrieve the settings or information input by the user into the dialog box.  \n  \n Note that when you call the constructor with `bPrintSetupOnly` set to **FALSE**, the **PD_RETURNDC** flag is automatically used. After calling `DoModal`, `GetDefaults`, or `GetPrinterDC`, a printer DC will be returned in `m_pd.hDC`. This DC must be freed with a call to [DeleteDC](http://msdn.microsoft.com/library/windows/desktop/dd183533) by the caller of `CPrintDialog`.  \n  \n### Example  \n  See the example for [CPrintDialog::CreatePrinterDC](#cprintdialog__createprinterdc).  \n  \n##  <a name=\"cprintdialog__getcopies\"></a>  CPrintDialog::GetCopies  \n Retrieves the number of copies requested.  \n  \n```  \nint GetCopies() const;\n\n \n```  \n  \n### Return Value  \n The number of copies requested.  \n  \n### Remarks  \n Call this function after calling `DoModal` to retrieve the number of copies requested.  \n  \n### Example  \n  See the example for [CPrintDialog::PrintCollate](#cprintdialog__printcollate).  \n  \n##  <a name=\"cprintdialog__getdefaults\"></a>  CPrintDialog::GetDefaults  \n Retrieves the device defaults of the default printer without displaying a dialog box.  \n  \n```  \nBOOL GetDefaults();\n```  \n  \n### Return Value  \n Nonzero if the function was successful; otherwise 0.  \n  \n### Remarks  \n The retrieved values are placed in the `m_pd` structure.  \n  \n In some cases, a call to this function will call the [constructor](#cprintdialog__cprintdialog) for `CPrintDialog` with `bPrintSetupOnly` set to **FALSE**. In these cases, a printer DC and **hDevNames** and **hDevMode** (two handles located in the `m_pd` data member) are automatically allocated.  \n  \n If the constructor for `CPrintDialog` was called with `bPrintSetupOnly` set to **FALSE**, this function will not only return **hDevNames** and **hDevMode** (located in **m_pd.hDevNames** and **m_pd.hDevMode**) to the caller, but will also return a printer DC in **m_pd.hDC**. It is the responsibility of the caller to delete the printer DC and call the Windows [GlobalFree](http://msdn.microsoft.com/library/windows/desktop/aa366579) function on the handles when you are finished with the `CPrintDialog` object.  \n  \n### Example  \n This code fragment gets the default printer's device context and reports to the user the resolution of the printer in dots per inch. (This attribute of the printer's capabilities is often referred to as DPI.)  \n  \n [!code-cpp[NVC_MFCDocView#107](../../mfc/codesnippet/cpp/cprintdialog-class_3.cpp)]  \n  \n##  <a name=\"cprintdialog__getdevicename\"></a>  CPrintDialog::GetDeviceName  \n Retrieves the name of the currently selected printer device.  \n  \n```  \nCString GetDeviceName() const;\n\n \n```  \n  \n### Return Value  \n The name of the currently selected printer.  \n  \n### Remarks  \n Call this function after calling [DoModal](#cprintdialog__domodal) to retrieve the name of the currently selected printer, or after calling [GetDefaults](#cprintdialog__getdefaults) to retrieve the current device defaults of the default printer. Use a pointer to the `CString` object returned by `GetDeviceName` as the value of `lpszDeviceName` in a call to [CDC::CreateDC](../../mfc/reference/cdc-class.md#cdc__createdc).  \n  \n### Example  \n This code fragment shows the user's default printer name and the port it is connected to, along with the spooler name the printer uses. The code might show a message box that says, \"Your default printer is HP LaserJet IIIP on \\\\\\server\\share using winspool.\", for example.  \n  \n [!code-cpp[NVC_MFCDocView#108](../../mfc/codesnippet/cpp/cprintdialog-class_4.cpp)]  \n  \n##  <a name=\"cprintdialog__getdevmode\"></a>  CPrintDialog::GetDevMode  \n Retrieves the `DEVMODE` structure.  \n  \n```  \nLPDEVMODE GetDevMode() const;\n\n \n```  \n  \n### Return Value  \n The [DEVMODE](http://msdn.microsoft.com/library/windows/desktop/dd183565) data structure, which contains information about the device initialization and environment of a print driver. You must unlock the memory taken by this structure with the Windows [GlobalUnlock](http://msdn.microsoft.com/library/windows/desktop/aa366595) function, which is described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n### Remarks  \n Call this function after calling [DoModal](#cprintdialog__domodal) or [GetDefaults](#cprintdialog__getdefaults) to retrieve information about the printing device.  \n  \n### Example  \n  See the example for [CPrintDialog::PrintCollate](#cprintdialog__printcollate).  \n  \n##  <a name=\"cprintdialog__getdrivername\"></a>  CPrintDialog::GetDriverName  \n Retrieves the name of the currently selected printer driver.  \n  \n```  \nCString GetDriverName() const;\n\n \n```  \n  \n### Return Value  \n A `CString` specifying the system-defined driver name.  \n  \n### Remarks  \n Call this function after calling [DoModal](#cprintdialog__domodal) or [GetDefaults](#cprintdialog__getdefaults) to retrieve the name of the system-defined printer device driver. Use a pointer to the `CString` object returned by `GetDriverName` as the value of `lpszDriverName` in a call to [CDC::CreateDC](../../mfc/reference/cdc-class.md#cdc__createdc).  \n  \n### Example  \n  See the example for [CPrintDialog::GetDeviceName](#cprintdialog__getdevicename).  \n  \n##  <a name=\"cprintdialog__getfrompage\"></a>  CPrintDialog::GetFromPage  \n Retrieves the starting page of the print range.  \n  \n```  \nint GetFromPage() const;\n\n \n```  \n  \n### Return Value  \n The starting page number in the range of pages to be printed.  \n  \n### Remarks  \n Call this function after calling `DoModal` to retrieve the starting page number in the range of pages to be printed.  \n  \n### Example  \n  See the example for [CPrintDialog::m_pd](#cprintdialog__m_pd).  \n  \n##  <a name=\"cprintdialog__getportname\"></a>  CPrintDialog::GetPortName  \n Retrieves the name of the currently selected printer port.  \n  \n```  \nCString GetPortName() const;\n\n \n```  \n  \n### Return Value  \n The name of the currently selected printer port.  \n  \n### Remarks  \n Call this function after calling [DoModal](#cprintdialog__domodal) or [GetDefaults](#cprintdialog__getdefaults) to retrieve the name of the currently selected printer port.  \n  \n### Example  \n  See the example for [CPrintDialog::GetDeviceName](#cprintdialog__getdevicename).  \n  \n##  <a name=\"cprintdialog__getprinterdc\"></a>  CPrintDialog::GetPrinterDC  \n Retrieves a handle to the printer device context.  \n  \n```  \nHDC GetPrinterDC() const;\n\n \n```  \n  \n### Return Value  \n A handle to the printer device context if successful; otherwise **NULL**.  \n  \n### Remarks  \n If the `bPrintSetupOnly` parameter of the `CPrintDialog` constructor was **FALSE** (indicating that the Print dialog box is displayed), then `GetPrinterDC` returns a handle to the printer device context. You must call the Windows [DeleteDC](http://msdn.microsoft.com/library/windows/desktop/dd183533) function to delete the device context when you are done using it.  \n  \n### Example  \n [!code-cpp[NVC_MFCDocView#109](../../mfc/codesnippet/cpp/cprintdialog-class_5.cpp)]  \n  \n##  <a name=\"cprintdialog__gettopage\"></a>  CPrintDialog::GetToPage  \n Retrieves the ending page of the print range.  \n  \n```  \nint GetToPage() const;\n\n \n```  \n  \n### Return Value  \n The ending page number in the range of pages to be printed.  \n  \n### Remarks  \n Call this function after calling `DoModal` to retrieve the ending page number in the range of pages to be printed.  \n  \n### Example  \n  See the example for [CPrintDialog::m_pd](#cprintdialog__m_pd).  \n  \n##  <a name=\"cprintdialog__m_pd\"></a>  CPrintDialog::m_pd  \n A structure whose members store the characteristics of the dialog object.  \n  \n```  \nPRINTDLG& m_pd;  \n```  \n  \n### Remarks  \n After constructing a `CPrintDialog` object, you can use `m_pd` to set various aspects of the dialog box before calling the [DoModal](#cprintdialog__domodal) member function. For more information on the `m_pd` structure, see [PRINTDLG](http://msdn.microsoft.com/library/windows/desktop/ms646843) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n If you modify the `m_pd` data member directly, you will override any default behavior.  \n  \n### Example  \n [!code-cpp[NVC_MFCDocView#111](../../mfc/codesnippet/cpp/cprintdialog-class_6.cpp)]  \n  \n##  <a name=\"cprintdialog__printall\"></a>  CPrintDialog::PrintAll  \n Determines whether to print all pages of the document.  \n  \n```  \nBOOL PrintAll() const;\n\n \n```  \n  \n### Return Value  \n Nonzero if all pages in the document are to be printed; otherwise 0.  \n  \n### Remarks  \n Call this function after calling `DoModal` to determine whether to print all pages in the document.  \n  \n### Example  \n  See the example for [CPrintDialog::m_pd](#cprintdialog__m_pd).  \n  \n##  <a name=\"cprintdialog__printcollate\"></a>  CPrintDialog::PrintCollate  \n Determines whether collated copies are requested.  \n  \n```  \nBOOL PrintCollate() const;\n\n \n```  \n  \n### Return Value  \n Nonzero if the user selects the collate check box in the dialog box; otherwise 0.  \n  \n### Remarks  \n Call this function after calling `DoModal` to determine whether the printer should collate all printed copies of the document.  \n  \n### Example  \n [!code-cpp[NVC_MFCDocView#110](../../mfc/codesnippet/cpp/cprintdialog-class_7.cpp)]  \n  \n##  <a name=\"cprintdialog__printrange\"></a>  CPrintDialog::PrintRange  \n Determines whether to print only a specified range of pages.  \n  \n```  \nBOOL PrintRange() const;\n\n \n```  \n  \n### Return Value  \n Nonzero if only a range of pages in the document are to be printed; otherwise 0.  \n  \n### Remarks  \n Call this function after calling `DoModal` to determine whether to print only a range of pages in the document.  \n  \n### Example  \n  See the example for [CPrintDialog::m_pd](#cprintdialog__m_pd).  \n  \n##  <a name=\"cprintdialog__printselection\"></a>  CPrintDialog::PrintSelection  \n Determines whether to print only the currently selected items.  \n  \n```  \nBOOL PrintSelection() const;\n\n \n```  \n  \n### Return Value  \n Nonzero if only the selected items are to be printed; otherwise 0.  \n  \n### Remarks  \n Call this function after calling `DoModal` to determine whether to print only the currently selected items.  \n  \n### Example  \n  See the example for [CPrintDialog::m_pd](#cprintdialog__m_pd).  \n  \n## See Also  \n [MFC Sample DIBLOOK](../../visual-cpp-samples.md)   \n [CCommonDialog Class](../../mfc/reference/ccommondialog-class.md)   \n [Hierarchy Chart](../../mfc/hierarchy-chart.md)   \n [CPrintInfo Structure](../../mfc/reference/cprintinfo-structure.md)\n"}