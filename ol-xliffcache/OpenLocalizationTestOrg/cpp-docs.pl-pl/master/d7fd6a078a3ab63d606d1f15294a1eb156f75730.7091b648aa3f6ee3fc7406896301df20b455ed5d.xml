{"nodes":[{"pos":[12,53],"content":"Tree Control Item Labels | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Tree Control Item Labels | Microsoft Docs","pos":[0,41]}]},{"content":"Tree Control Item Labels","pos":[705,729]},{"content":"You typically specify the text of an item's label when adding the item to the tree control (<bpt id=\"p1\">[</bpt>CTreeCtrl<ept id=\"p1\">](../mfc/reference/ctreectrl-class.md)</ept>).","pos":[730,872],"source":"You typically specify the text of an item's label when adding the item to the tree control ([CTreeCtrl](../mfc/reference/ctreectrl-class.md))."},{"content":"The <ph id=\"ph1\">`InsertItem`</ph> member function can pass a <bpt id=\"p1\">[</bpt>TVITEM<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb773456)</ept> structure that defines the item's properties, including a string containing the text of the label.","pos":[873,1084],"source":" The `InsertItem` member function can pass a [TVITEM](http://msdn.microsoft.com/library/windows/desktop/bb773456) structure that defines the item's properties, including a string containing the text of the label."},{"content":"has several overloads that can be called with various combinations of parameters.","pos":[1098,1179]},{"content":"A tree control allocates memory for storing each item; the text of the item labels takes up a significant portion of this memory.","pos":[1186,1315]},{"content":"If your application maintains a copy of the strings in the tree control, you can decrease the memory requirements of the control by specifying the <bpt id=\"p1\">**</bpt>LPSTR_TEXTCALLBACK<ept id=\"p1\">**</ept> value in the <bpt id=\"p2\">**</bpt>pszText<ept id=\"p2\">**</ept> member of <ph id=\"ph1\">`TV_ITEM`</ph> or the <ph id=\"ph2\">`lpszItem`</ph> parameter instead of passing actual strings to the tree control.","pos":[1316,1613],"source":" If your application maintains a copy of the strings in the tree control, you can decrease the memory requirements of the control by specifying the **LPSTR_TEXTCALLBACK** value in the **pszText** member of `TV_ITEM` or the `lpszItem` parameter instead of passing actual strings to the tree control."},{"content":"Using <bpt id=\"p1\">**</bpt>LPSTR_TEXTCALLBACK<ept id=\"p1\">**</ept> causes the tree control to retrieve the text of an item's label from the application whenever the item needs to be redrawn.","pos":[1614,1766],"source":" Using **LPSTR_TEXTCALLBACK** causes the tree control to retrieve the text of an item's label from the application whenever the item needs to be redrawn."},{"content":"To retrieve the text, the tree control sends a <bpt id=\"p1\">[</bpt>TVN_GETDISPINFO<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb773518)</ept> notification message, which includes the address of a <bpt id=\"p2\">[</bpt>NMTVDISPINFO<ept id=\"p2\">](http://msdn.microsoft.com/library/windows/desktop/bb773418)</ept> structure.","pos":[1767,2031],"source":" To retrieve the text, the tree control sends a [TVN_GETDISPINFO](http://msdn.microsoft.com/library/windows/desktop/bb773518) notification message, which includes the address of a [NMTVDISPINFO](http://msdn.microsoft.com/library/windows/desktop/bb773418) structure."},{"content":"You must respond by setting the appropriate members of the included structure.","pos":[2032,2110]},{"content":"A tree control uses memory allocated from the heap of the process that creates the tree control.","pos":[2117,2213]},{"content":"The maximum number of items in a tree control is based on the amount of memory available in the heap.","pos":[2214,2315]},{"content":"Each item takes 64 bytes.","pos":[2316,2341]},{"content":"See Also","pos":[2350,2358]},{"content":"Using CTreeCtrl","pos":[2363,2378]},{"content":"Controls","pos":[2412,2420]}],"content":"---\ntitle: \"Tree Control Item Labels | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"tree controls, item labels\"\n  - \"labels, CTreeCtrl items\"\n  - \"CTreeCtrl class, item labels\"\n  - \"item labels, tree controls\"\n  - \"item labels\"\nms.assetid: fe834107-1a25-4280-aced-774c11565805\ncaps.latest.revision: 10\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Tree Control Item Labels\nYou typically specify the text of an item's label when adding the item to the tree control ([CTreeCtrl](../mfc/reference/ctreectrl-class.md)). The `InsertItem` member function can pass a [TVITEM](http://msdn.microsoft.com/library/windows/desktop/bb773456) structure that defines the item's properties, including a string containing the text of the label. `InsertItem` has several overloads that can be called with various combinations of parameters.  \n  \n A tree control allocates memory for storing each item; the text of the item labels takes up a significant portion of this memory. If your application maintains a copy of the strings in the tree control, you can decrease the memory requirements of the control by specifying the **LPSTR_TEXTCALLBACK** value in the **pszText** member of `TV_ITEM` or the `lpszItem` parameter instead of passing actual strings to the tree control. Using **LPSTR_TEXTCALLBACK** causes the tree control to retrieve the text of an item's label from the application whenever the item needs to be redrawn. To retrieve the text, the tree control sends a [TVN_GETDISPINFO](http://msdn.microsoft.com/library/windows/desktop/bb773518) notification message, which includes the address of a [NMTVDISPINFO](http://msdn.microsoft.com/library/windows/desktop/bb773418) structure. You must respond by setting the appropriate members of the included structure.  \n  \n A tree control uses memory allocated from the heap of the process that creates the tree control. The maximum number of items in a tree control is based on the amount of memory available in the heap. Each item takes 64 bytes.  \n  \n## See Also  \n [Using CTreeCtrl](../mfc/using-ctreectrl.md)   \n [Controls](../mfc/controls-mfc.md)\n\n"}