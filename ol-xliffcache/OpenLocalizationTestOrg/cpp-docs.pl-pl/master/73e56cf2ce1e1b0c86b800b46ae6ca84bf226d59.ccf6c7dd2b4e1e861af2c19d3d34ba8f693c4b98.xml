{"nodes":[{"pos":[12,51],"content":"overwrite_buffer Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"overwrite_buffer Class | Microsoft Docs","pos":[0,39]}]},{"pos":[640,662],"content":"overwrite_buffer Class","linkify":"overwrite_buffer Class","nodes":[{"content":"overwrite_buffer Class","pos":[0,22]}]},{"content":"An <ph id=\"ph1\">`overwrite_buffer`</ph> messaging block is a multi-target, multi-source, ordered <ph id=\"ph2\">`propagator_block`</ph> capable of storing a single message at a time.","pos":[663,807],"source":"An `overwrite_buffer` messaging block is a multi-target, multi-source, ordered `propagator_block` capable of storing a single message at a time."},{"content":"New messages overwrite previously held ones.","pos":[808,852]},{"pos":[861,867],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[1025,1035],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"The payload type of the messages stored and propagated by the buffer.","pos":[1046,1115]},{"pos":[1124,1131],"content":"Members","linkify":"Members","nodes":[{"content":"Members","pos":[0,7]}]},{"pos":[1141,1160],"content":"Public Constructors","linkify":"Public Constructors","nodes":[{"content":"Public Constructors","pos":[0,19]}]},{"content":"Name","pos":[1167,1171]},{"content":"Description","pos":[1172,1183]},{"pos":[1221,1276],"content":"<bpt id=\"p1\">[</bpt>overwrite_buffer::overwrite_buffer Constructor<ept id=\"p1\">](#ctor)</ept>","source":"[overwrite_buffer::overwrite_buffer Constructor](#ctor)"},{"content":"Overloaded.","pos":[1277,1288]},{"content":"Constructs an <ph id=\"ph1\">`overwrite_buffer`</ph> messaging block.","pos":[1289,1338],"source":" Constructs an `overwrite_buffer` messaging block."},{"pos":[1343,1398],"content":"<bpt id=\"p1\">[</bpt>overwrite_buffer::~overwrite_buffer Destructor<ept id=\"p1\">](#dtor)</ept>","source":"[overwrite_buffer::~overwrite_buffer Destructor](#dtor)"},{"pos":[1399,1447],"content":"Destroys the <ph id=\"ph1\">`overwrite_buffer`</ph> messaging block.","source":"Destroys the `overwrite_buffer` messaging block."},{"pos":[1458,1472],"content":"Public Methods","linkify":"Public Methods","nodes":[{"content":"Public Methods","pos":[0,14]}]},{"content":"Name","pos":[1479,1483]},{"content":"Description","pos":[1484,1495]},{"pos":[1533,1581],"content":"<bpt id=\"p1\">[</bpt>overwrite_buffer::has_value Method<ept id=\"p1\">](#has_value)</ept>","source":"[overwrite_buffer::has_value Method](#has_value)"},{"pos":[1582,1653],"content":"Checks whether this <ph id=\"ph1\">`overwrite_buffer`</ph> messaging block has a value yet.","source":"Checks whether this `overwrite_buffer` messaging block has a value yet."},{"pos":[1658,1698],"content":"<bpt id=\"p1\">[</bpt>overwrite_buffer::value Method<ept id=\"p1\">](#value)</ept>","source":"[overwrite_buffer::value Method](#value)"},{"pos":[1699,1809],"content":"Gets a reference to the current payload of the message being stored in the <ph id=\"ph1\">`overwrite_buffer`</ph> messaging block.","source":"Gets a reference to the current payload of the message being stored in the `overwrite_buffer` messaging block."},{"pos":[1820,1837],"content":"Protected Methods","linkify":"Protected Methods","nodes":[{"content":"Protected Methods","pos":[0,17]}]},{"content":"Name","pos":[1844,1848]},{"content":"Description","pos":[1849,1860]},{"pos":[1898,1956],"content":"<bpt id=\"p1\">[</bpt>overwrite_buffer::accept_message Method<ept id=\"p1\">](#accept_message)</ept>","source":"[overwrite_buffer::accept_message Method](#accept_message)"},{"pos":[1957,2082],"content":"Accepts a message that was offered by this <ph id=\"ph1\">`overwrite_buffer`</ph> messaging block, returning a copy of the message to the caller.","source":"Accepts a message that was offered by this `overwrite_buffer` messaging block, returning a copy of the message to the caller."},{"pos":[2087,2147],"content":"<bpt id=\"p1\">[</bpt>overwrite_buffer::consume_message Method<ept id=\"p1\">](#consume_message)</ept>","source":"[overwrite_buffer::consume_message Method](#consume_message)"},{"pos":[2148,2302],"content":"Consumes a message previously offered by the <ph id=\"ph1\">`overwrite_buffer`</ph> messaging block and reserved by the target, returning a copy of the message to the caller.","source":"Consumes a message previously offered by the `overwrite_buffer` messaging block and reserved by the target, returning a copy of the message to the caller."},{"pos":[2307,2385],"content":"<bpt id=\"p1\">[</bpt>overwrite_buffer::link_target_notification Method<ept id=\"p1\">](#link_target_notification)</ept>","source":"[overwrite_buffer::link_target_notification Method](#link_target_notification)"},{"pos":[2386,2488],"content":"A callback that notifies that a new target has been linked to this <ph id=\"ph1\">`overwrite_buffer`</ph> messaging block.","source":"A callback that notifies that a new target has been linked to this `overwrite_buffer` messaging block."},{"pos":[2493,2557],"content":"<bpt id=\"p1\">[</bpt>overwrite_buffer::propagate_message Method<ept id=\"p1\">](#propagate_message)</ept>","source":"[overwrite_buffer::propagate_message Method](#propagate_message)"},{"content":"Asynchronously passes a message from an <ph id=\"ph1\">`ISource`</ph> block to this <ph id=\"ph2\">`overwrite_buffer`</ph> messaging block.","pos":[2558,2657],"source":"Asynchronously passes a message from an `ISource` block to this `overwrite_buffer` messaging block."},{"content":"It is invoked by the <ph id=\"ph1\">`propagate`</ph> method, when called by a source block.","pos":[2658,2729],"source":" It is invoked by the `propagate` method, when called by a source block."},{"pos":[2734,2812],"content":"<bpt id=\"p1\">[</bpt>overwrite_buffer::propagate_to_any_targets Method<ept id=\"p1\">](#propagate_to_any_targets)</ept>","source":"[overwrite_buffer::propagate_to_any_targets Method](#propagate_to_any_targets)"},{"pos":[2813,2931],"content":"Places the <ph id=\"ph1\">`message``_PMessage`</ph> in this <ph id=\"ph2\">`overwrite_buffer`</ph> messaging block and offers it to all of the linked targets.","source":"Places the `message``_PMessage` in this `overwrite_buffer` messaging block and offers it to all of the linked targets."},{"pos":[2936,2996],"content":"<bpt id=\"p1\">[</bpt>overwrite_buffer::release_message Method<ept id=\"p1\">](#release_message)</ept>","source":"[overwrite_buffer::release_message Method](#release_message)"},{"content":"Releases a previous message reservation.","pos":[2997,3037]},{"content":"(Overrides <bpt id=\"p1\">[</bpt>source_block::release_message<ept id=\"p1\">](source-block-class.md#release_message)</ept>.)","pos":[3038,3121],"source":" (Overrides [source_block::release_message](source-block-class.md#release_message).)"},{"pos":[3126,3186],"content":"<bpt id=\"p1\">[</bpt>overwrite_buffer::reserve_message Method<ept id=\"p1\">](#reserve_message)</ept>","source":"[overwrite_buffer::reserve_message Method](#reserve_message)"},{"content":"Reserves a message previously offered by this <ph id=\"ph1\">`overwrite_buffer`</ph> messaging block.","pos":[3187,3268],"source":"Reserves a message previously offered by this `overwrite_buffer` messaging block."},{"content":"(Overrides <bpt id=\"p1\">[</bpt>source_block::reserve_message<ept id=\"p1\">](source-block-class.md#reserve_message)</ept>.)","pos":[3269,3352],"source":" (Overrides [source_block::reserve_message](source-block-class.md#reserve_message).)"},{"pos":[3357,3423],"content":"<bpt id=\"p1\">[</bpt>overwrite_buffer::resume_propagation Method<ept id=\"p1\">](#resume_propagation)</ept>","source":"[overwrite_buffer::resume_propagation Method](#resume_propagation)"},{"content":"Resumes propagation after a reservation has been released.","pos":[3424,3482]},{"content":"(Overrides <bpt id=\"p1\">[</bpt>source_block::resume_propagation<ept id=\"p1\">](source-block-class.md#resume_propagation)</ept>.)","pos":[3483,3572],"source":" (Overrides [source_block::resume_propagation](source-block-class.md#resume_propagation).)"},{"pos":[3577,3631],"content":"<bpt id=\"p1\">[</bpt>overwrite_buffer::send_message Method<ept id=\"p1\">](#send_message)</ept>","source":"[overwrite_buffer::send_message Method](#send_message)"},{"content":"Synchronously passes a message from an <ph id=\"ph1\">`ISource`</ph> block to this <ph id=\"ph2\">`overwrite_buffer`</ph> messaging block.","pos":[3632,3730],"source":"Synchronously passes a message from an `ISource` block to this `overwrite_buffer` messaging block."},{"content":"It is invoked by the <ph id=\"ph1\">`send`</ph> method, when called by a source block.","pos":[3731,3797],"source":" It is invoked by the `send` method, when called by a source block."},{"pos":[3802,3882],"content":"<bpt id=\"p1\">[</bpt>overwrite_buffer::supports_anonymous_source Method<ept id=\"p1\">](#supports_anonymous_source)</ept>","source":"[overwrite_buffer::supports_anonymous_source Method](#supports_anonymous_source)"},{"content":"Overrides the <ph id=\"ph1\">`supports_anonymous_source`</ph> method to indicate that this block can accept messages offered to it by a source that is not linked.","pos":[3883,4025],"source":"Overrides the `supports_anonymous_source` method to indicate that this block can accept messages offered to it by a source that is not linked."},{"content":"(Overrides <bpt id=\"p1\">[</bpt>ITarget::supports_anonymous_source<ept id=\"p1\">](itarget-class.md#supports_anonymous_source)</ept>.)","pos":[4026,4119],"source":" (Overrides [ITarget::supports_anonymous_source](itarget-class.md#supports_anonymous_source).)"},{"pos":[4129,4136],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[4140,4245],"content":"An <ph id=\"ph1\">`overwrite_buffer`</ph> messaging block propagates out copies of its stored message to each of its targets.","source":"An `overwrite_buffer` messaging block propagates out copies of its stored message to each of its targets."},{"pos":[4252,4365],"content":"For more information, see <bpt id=\"p1\">[</bpt>Asynchronous Message Blocks<ept id=\"p1\">](../../../parallel/concrt/asynchronous-message-blocks.md)</ept>.","source":"For more information, see [Asynchronous Message Blocks](../../../parallel/concrt/asynchronous-message-blocks.md)."},{"pos":[4374,4395],"content":"Inheritance Hierarchy","linkify":"Inheritance Hierarchy","nodes":[{"content":"Inheritance Hierarchy","pos":[0,21]}]},{"pos":[4399,4426],"content":"<bpt id=\"p1\">[</bpt>ISource<ept id=\"p1\">](isource-class.md)</ept>","source":"[ISource](isource-class.md)"},{"pos":[4433,4460],"content":"<bpt id=\"p1\">[</bpt>ITarget<ept id=\"p1\">](itarget-class.md)</ept>","source":"[ITarget](itarget-class.md)"},{"pos":[4467,4504],"content":"<bpt id=\"p1\">[</bpt>source_block<ept id=\"p1\">](source-block-class.md)</ept>","source":"[source_block](source-block-class.md)"},{"pos":[4511,4556],"content":"<bpt id=\"p1\">[</bpt>propagator_block<ept id=\"p1\">](propagator-block-class.md)</ept>","source":"[propagator_block](propagator-block-class.md)"},{"pos":[4590,4602],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[4606,4626],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> agents.h","source":"**Header:** agents.h"},{"pos":[4633,4659],"content":"<bpt id=\"p1\">**</bpt>Namespace:<ept id=\"p1\">**</ept> concurrency","source":"**Namespace:** concurrency"},{"pos":[4669,4739],"content":"<bpt id=\"p1\">&lt;a name=\"accept_message\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  overwrite_buffer::accept_message Method","linkify":"<a name=\"accept_message\"></a>  overwrite_buffer::accept_message Method","source":"<a name=\"accept_message\"></a>  overwrite_buffer::accept_message Method"},{"pos":[4743,4868],"content":"Accepts a message that was offered by this <ph id=\"ph1\">`overwrite_buffer`</ph> messaging block, returning a copy of the message to the caller.","source":"Accepts a message that was offered by this `overwrite_buffer` messaging block, returning a copy of the message to the caller."},{"pos":[4959,4969],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"The <ph id=\"ph1\">`runtime_object_identity`</ph> of the offered <ph id=\"ph2\">`message`</ph> object.","pos":[4985,5047],"source":" The `runtime_object_identity` of the offered `message` object."},{"pos":[5057,5069],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[5073,5144],"content":"A pointer to the <ph id=\"ph1\">`message`</ph> object that the caller now has ownership of.","source":"A pointer to the `message` object that the caller now has ownership of."},{"pos":[5154,5161],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[5165,5315],"content":"The <ph id=\"ph1\">`overwrite_buffer`</ph> messaging block returns copies of the message to its targets, rather than transferring ownership of the currently held message.","source":"The `overwrite_buffer` messaging block returns copies of the message to its targets, rather than transferring ownership of the currently held message."},{"pos":[5325,5397],"content":"<bpt id=\"p1\">&lt;a name=\"consume_message\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  overwrite_buffer::consume_message Method","linkify":"<a name=\"consume_message\"></a>  overwrite_buffer::consume_message Method","source":"<a name=\"consume_message\"></a>  overwrite_buffer::consume_message Method"},{"pos":[5401,5555],"content":"Consumes a message previously offered by the <ph id=\"ph1\">`overwrite_buffer`</ph> messaging block and reserved by the target, returning a copy of the message to the caller.","source":"Consumes a message previously offered by the `overwrite_buffer` messaging block and reserved by the target, returning a copy of the message to the caller."},{"pos":[5647,5657],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"The <ph id=\"ph1\">`runtime_object_identity`</ph> of the <ph id=\"ph2\">`message`</ph> object being consumed.","pos":[5673,5742],"source":" The `runtime_object_identity` of the `message` object being consumed."},{"pos":[5752,5764],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[5768,5839],"content":"A pointer to the <ph id=\"ph1\">`message`</ph> object that the caller now has ownership of.","source":"A pointer to the `message` object that the caller now has ownership of."},{"pos":[5849,5856],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[5860,5927],"content":"Similar to <ph id=\"ph1\">`accept`</ph>, but is always preceded by a call to <ph id=\"ph2\">`reserve`</ph>.","source":"Similar to `accept`, but is always preceded by a call to `reserve`."},{"pos":[5937,5997],"content":"<bpt id=\"p1\">&lt;a name=\"has_value\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  overwrite_buffer::has_value Method","linkify":"<a name=\"has_value\"></a>  overwrite_buffer::has_value Method","source":"<a name=\"has_value\"></a>  overwrite_buffer::has_value Method"},{"pos":[6001,6072],"content":"Checks whether this <ph id=\"ph1\">`overwrite_buffer`</ph> messaging block has a value yet.","source":"Checks whether this `overwrite_buffer` messaging block has a value yet."},{"pos":[6119,6131],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[6135,6195],"content":"<ph id=\"ph1\">`true`</ph> if the block has received a value, <ph id=\"ph2\">`false`</ph> otherwise.","source":"`true` if the block has received a value, `false` otherwise."},{"pos":[6205,6295],"content":"<bpt id=\"p1\">&lt;a name=\"link_target_notification\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  overwrite_buffer::link_target_notification Method","linkify":"<a name=\"link_target_notification\"></a>  overwrite_buffer::link_target_notification Method","source":"<a name=\"link_target_notification\"></a>  overwrite_buffer::link_target_notification Method"},{"pos":[6299,6401],"content":"A callback that notifies that a new target has been linked to this <ph id=\"ph1\">`overwrite_buffer`</ph> messaging block.","source":"A callback that notifies that a new target has been linked to this `overwrite_buffer` messaging block."},{"pos":[6493,6503],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"A pointer to the newly linked target.","pos":[6521,6558]},{"pos":[6568,6635],"content":"<bpt id=\"p1\">&lt;a name=\"dtor\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  overwrite_buffer::~overwrite_buffer Destructor","linkify":"<a name=\"dtor\"></a>  overwrite_buffer::~overwrite_buffer Destructor","source":"<a name=\"dtor\"></a>  overwrite_buffer::~overwrite_buffer Destructor"},{"pos":[6639,6687],"content":"Destroys the <ph id=\"ph1\">`overwrite_buffer`</ph> messaging block.","source":"Destroys the `overwrite_buffer` messaging block."},{"pos":[6731,6798],"content":"<bpt id=\"p1\">&lt;a name=\"ctor\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  overwrite_buffer::overwrite_buffer Constructor","linkify":"<a name=\"ctor\"></a>  overwrite_buffer::overwrite_buffer Constructor","source":"<a name=\"ctor\"></a>  overwrite_buffer::overwrite_buffer Constructor"},{"pos":[6802,6851],"content":"Constructs an <ph id=\"ph1\">`overwrite_buffer`</ph> messaging block.","source":"Constructs an `overwrite_buffer` messaging block."},{"pos":[7224,7234],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"A filter function which determines whether offered messages should be accepted.","pos":[7251,7330]},{"content":"The <ph id=\"ph1\">`Scheduler`</ph> object within which the propagation task for the <ph id=\"ph2\">`overwrite_buffer`</ph> messaging block is scheduled.","pos":[7354,7467],"source":" The `Scheduler` object within which the propagation task for the `overwrite_buffer` messaging block is scheduled."},{"content":"The <ph id=\"ph1\">`ScheduleGroup`</ph> object within which the propagation task for the <ph id=\"ph2\">`overwrite_buffer`</ph> messaging block is scheduled.","pos":[7495,7612],"source":" The `ScheduleGroup` object within which the propagation task for the `overwrite_buffer` messaging block is scheduled."},{"content":"The <ph id=\"ph1\">`Scheduler`</ph> object used is implied by the schedule group.","pos":[7613,7674],"source":" The `Scheduler` object used is implied by the schedule group."},{"pos":[7684,7691],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[7695,7806],"content":"The runtime uses the default scheduler if you do not specify the <ph id=\"ph1\">`_PScheduler`</ph> or <ph id=\"ph2\">`_PScheduleGroup`</ph> parameters.","source":"The runtime uses the default scheduler if you do not specify the `_PScheduler` or `_PScheduleGroup` parameters."},{"pos":[7813,8009],"content":"The type <ph id=\"ph1\">`filter_method`</ph> is a functor with signature <ph id=\"ph2\">`bool (T const &amp;)`</ph> which is invoked by this <ph id=\"ph3\">`overwrite_buffer`</ph> messaging block to determine whether or not it should accept an offered message.","source":"The type `filter_method` is a functor with signature `bool (T const &)` which is invoked by this `overwrite_buffer` messaging block to determine whether or not it should accept an offered message."},{"pos":[8019,8095],"content":"<bpt id=\"p1\">&lt;a name=\"propagate_message\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  overwrite_buffer::propagate_message Method","linkify":"<a name=\"propagate_message\"></a>  overwrite_buffer::propagate_message Method","source":"<a name=\"propagate_message\"></a>  overwrite_buffer::propagate_message Method"},{"content":"Asynchronously passes a message from an <ph id=\"ph1\">`ISource`</ph> block to this <ph id=\"ph2\">`overwrite_buffer`</ph> messaging block.","pos":[8099,8198],"source":"Asynchronously passes a message from an `ISource` block to this `overwrite_buffer` messaging block."},{"content":"It is invoked by the <ph id=\"ph1\">`propagate`</ph> method, when called by a source block.","pos":[8199,8270],"source":" It is invoked by the `propagate` method, when called by a source block."},{"pos":[8405,8415],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"A pointer to the <ph id=\"ph1\">`message`</ph> object.","pos":[8434,8468],"source":" A pointer to the `message` object."},{"content":"A pointer to the source block offering the message.","pos":[8489,8540]},{"pos":[8550,8562],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[8566,8678],"content":"A <bpt id=\"p1\">[</bpt>message_status<ept id=\"p1\">](concurrency-namespace-enums.md)</ept> indication of what the target decided to do with the message.","source":"A [message_status](concurrency-namespace-enums.md) indication of what the target decided to do with the message."},{"pos":[8688,8778],"content":"<bpt id=\"p1\">&lt;a name=\"propagate_to_any_targets\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  overwrite_buffer::propagate_to_any_targets Method","linkify":"<a name=\"propagate_to_any_targets\"></a>  overwrite_buffer::propagate_to_any_targets Method","source":"<a name=\"propagate_to_any_targets\"></a>  overwrite_buffer::propagate_to_any_targets Method"},{"pos":[8782,8900],"content":"Places the <ph id=\"ph1\">`message``_PMessage`</ph> in this <ph id=\"ph2\">`overwrite_buffer`</ph> messaging block and offers it to all of the linked targets.","source":"Places the `message``_PMessage` in this `overwrite_buffer` messaging block and offers it to all of the linked targets."},{"pos":[8993,9003],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"A pointer to a <ph id=\"ph1\">`message`</ph> object that this <ph id=\"ph2\">`overwrite_buffer`</ph> has taken ownership of.","pos":[9022,9106],"source":" A pointer to a `message` object that this `overwrite_buffer` has taken ownership of."},{"pos":[9116,9123],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[9127,9240],"content":"This method overwrites the current message in the <ph id=\"ph1\">`overwrite_buffer`</ph> with the newly accepted message <ph id=\"ph2\">`_PMessage`</ph>.","source":"This method overwrites the current message in the `overwrite_buffer` with the newly accepted message `_PMessage`."},{"pos":[9250,9316],"content":"<bpt id=\"p1\">&lt;a name=\"send_message\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  overwrite_buffer::send_message Method","linkify":"<a name=\"send_message\"></a>  overwrite_buffer::send_message Method","source":"<a name=\"send_message\"></a>  overwrite_buffer::send_message Method"},{"content":"Synchronously passes a message from an <ph id=\"ph1\">`ISource`</ph> block to this <ph id=\"ph2\">`overwrite_buffer`</ph> messaging block.","pos":[9320,9418],"source":"Synchronously passes a message from an `ISource` block to this `overwrite_buffer` messaging block."},{"content":"It is invoked by the <ph id=\"ph1\">`send`</ph> method, when called by a source block.","pos":[9419,9485],"source":" It is invoked by the `send` method, when called by a source block."},{"pos":[9615,9625],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"A pointer to the <ph id=\"ph1\">`message`</ph> object.","pos":[9644,9678],"source":" A pointer to the `message` object."},{"content":"A pointer to the source block offering the message.","pos":[9699,9750]},{"pos":[9760,9772],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[9776,9888],"content":"A <bpt id=\"p1\">[</bpt>message_status<ept id=\"p1\">](concurrency-namespace-enums.md)</ept> indication of what the target decided to do with the message.","source":"A [message_status](concurrency-namespace-enums.md) indication of what the target decided to do with the message."},{"pos":[9898,9990],"content":"<bpt id=\"p1\">&lt;a name=\"supports_anonymous_source\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  overwrite_buffer::supports_anonymous_source Method","linkify":"<a name=\"supports_anonymous_source\"></a>  overwrite_buffer::supports_anonymous_source Method","source":"<a name=\"supports_anonymous_source\"></a>  overwrite_buffer::supports_anonymous_source Method"},{"pos":[9994,10136],"content":"Overrides the <ph id=\"ph1\">`supports_anonymous_source`</ph> method to indicate that this block can accept messages offered to it by a source that is not linked.","source":"Overrides the `supports_anonymous_source` method to indicate that this block can accept messages offered to it by a source that is not linked."},{"pos":[10201,10213],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[10217,10277],"content":"<ph id=\"ph1\">`true`</ph> because the block does not postpone offered messages.","source":"`true` because the block does not postpone offered messages."},{"pos":[10287,10359],"content":"<bpt id=\"p1\">&lt;a name=\"release_message\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  overwrite_buffer::release_message Method","linkify":"<a name=\"release_message\"></a>  overwrite_buffer::release_message Method","source":"<a name=\"release_message\"></a>  overwrite_buffer::release_message Method"},{"content":"Releases a previous message reservation.","pos":[10363,10403]},{"pos":[10488,10498],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"The <ph id=\"ph1\">`runtime_object_identity`</ph> of the <ph id=\"ph2\">`message`</ph> object being released.","pos":[10514,10583],"source":" The `runtime_object_identity` of the `message` object being released."},{"pos":[10593,10665],"content":"<bpt id=\"p1\">&lt;a name=\"reserve_message\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  overwrite_buffer::reserve_message Method","linkify":"<a name=\"reserve_message\"></a>  overwrite_buffer::reserve_message Method","source":"<a name=\"reserve_message\"></a>  overwrite_buffer::reserve_message Method"},{"pos":[10669,10750],"content":"Reserves a message previously offered by this <ph id=\"ph1\">`overwrite_buffer`</ph> messaging block.","source":"Reserves a message previously offered by this `overwrite_buffer` messaging block."},{"pos":[10835,10845],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"The <ph id=\"ph1\">`runtime_object_identity`</ph> of the <ph id=\"ph2\">`message`</ph> object being reserved.","pos":[10861,10930],"source":" The `runtime_object_identity` of the `message` object being reserved."},{"pos":[10940,10952],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[10956,11023],"content":"<ph id=\"ph1\">`true`</ph> if the message was successfully reserved, <ph id=\"ph2\">`false`</ph> otherwise.","source":"`true` if the message was successfully reserved, `false` otherwise."},{"pos":[11033,11040],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[11044,11189],"content":"After <ph id=\"ph1\">`reserve`</ph> is called, if it returns <ph id=\"ph2\">`true`</ph>, either <ph id=\"ph3\">`consume`</ph> or <ph id=\"ph4\">`release`</ph> must be called to either take or release ownership of the message.","source":"After `reserve` is called, if it returns `true`, either `consume` or `release` must be called to either take or release ownership of the message."},{"pos":[11199,11277],"content":"<bpt id=\"p1\">&lt;a name=\"resume_propagation\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  overwrite_buffer::resume_propagation Method","linkify":"<a name=\"resume_propagation\"></a>  overwrite_buffer::resume_propagation Method","source":"<a name=\"resume_propagation\"></a>  overwrite_buffer::resume_propagation Method"},{"content":"Resumes propagation after a reservation has been released.","pos":[11281,11339]},{"pos":[11397,11449],"content":"<bpt id=\"p1\">&lt;a name=\"value\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  overwrite_buffer::value Method","linkify":"<a name=\"value\"></a>  overwrite_buffer::value Method","source":"<a name=\"value\"></a>  overwrite_buffer::value Method"},{"pos":[11453,11563],"content":"Gets a reference to the current payload of the message being stored in the <ph id=\"ph1\">`overwrite_buffer`</ph> messaging block.","source":"Gets a reference to the current payload of the message being stored in the `overwrite_buffer` messaging block."},{"pos":[11597,11609],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The payload of the currently stored message.","pos":[11613,11657]},{"pos":[11667,11674],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The value stored in the <ph id=\"ph1\">`overwrite_buffer`</ph> could change immediately after this method returns.","pos":[11678,11772],"source":"The value stored in the `overwrite_buffer` could change immediately after this method returns."},{"content":"This method will wait until a message arrives if no message is currently stored in the <ph id=\"ph1\">`overwrite_buffer`</ph>.","pos":[11773,11879],"source":" This method will wait until a message arrives if no message is currently stored in the `overwrite_buffer`."},{"pos":[11888,11896],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>concurrency Namespace<ept id=\"p1\">](concurrency-namespace.md)</ept><ph id=\"ph1\"> </ph>","pos":[11900,11950],"source":"[concurrency Namespace](concurrency-namespace.md) "},{"content":"<bpt id=\"p1\"> [</bpt>unbounded_buffer Class<ept id=\"p1\">](unbounded-buffer-class.md)</ept><ph id=\"ph1\"> </ph>","pos":[11953,12006],"source":" [unbounded_buffer Class](unbounded-buffer-class.md) "},{"content":"<bpt id=\"p1\"> [</bpt>single_assignment Class<ept id=\"p1\">](single-assignment-class.md)</ept>","pos":[12009,12063],"source":" [single_assignment Class](single-assignment-class.md)"}],"content":"---\ntitle: \"overwrite_buffer Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"agents/concurrency::overwrite_buffer\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"overwrite_buffer class\"\nms.assetid: 5cc428fe-3697-419c-9fb2-78f6181c9293\ncaps.latest.revision: 22\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# overwrite_buffer Class\nAn `overwrite_buffer` messaging block is a multi-target, multi-source, ordered `propagator_block` capable of storing a single message at a time. New messages overwrite previously held ones.  \n  \n## Syntax  \n  \n```\ntemplate<class T>\nclass overwrite_buffer : public propagator_block<multi_link_registry<ITarget<T>>, multi_link_registry<ISource<T>>>;\n```  \n  \n#### Parameters  \n `T`  \n The payload type of the messages stored and propagated by the buffer.  \n  \n## Members  \n  \n### Public Constructors  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[overwrite_buffer::overwrite_buffer Constructor](#ctor)|Overloaded. Constructs an `overwrite_buffer` messaging block.|  \n|[overwrite_buffer::~overwrite_buffer Destructor](#dtor)|Destroys the `overwrite_buffer` messaging block.|  \n  \n### Public Methods  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[overwrite_buffer::has_value Method](#has_value)|Checks whether this `overwrite_buffer` messaging block has a value yet.|  \n|[overwrite_buffer::value Method](#value)|Gets a reference to the current payload of the message being stored in the `overwrite_buffer` messaging block.|  \n  \n### Protected Methods  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[overwrite_buffer::accept_message Method](#accept_message)|Accepts a message that was offered by this `overwrite_buffer` messaging block, returning a copy of the message to the caller.|  \n|[overwrite_buffer::consume_message Method](#consume_message)|Consumes a message previously offered by the `overwrite_buffer` messaging block and reserved by the target, returning a copy of the message to the caller.|  \n|[overwrite_buffer::link_target_notification Method](#link_target_notification)|A callback that notifies that a new target has been linked to this `overwrite_buffer` messaging block.|  \n|[overwrite_buffer::propagate_message Method](#propagate_message)|Asynchronously passes a message from an `ISource` block to this `overwrite_buffer` messaging block. It is invoked by the `propagate` method, when called by a source block.|  \n|[overwrite_buffer::propagate_to_any_targets Method](#propagate_to_any_targets)|Places the `message``_PMessage` in this `overwrite_buffer` messaging block and offers it to all of the linked targets.|  \n|[overwrite_buffer::release_message Method](#release_message)|Releases a previous message reservation. (Overrides [source_block::release_message](source-block-class.md#release_message).)|  \n|[overwrite_buffer::reserve_message Method](#reserve_message)|Reserves a message previously offered by this `overwrite_buffer` messaging block. (Overrides [source_block::reserve_message](source-block-class.md#reserve_message).)|  \n|[overwrite_buffer::resume_propagation Method](#resume_propagation)|Resumes propagation after a reservation has been released. (Overrides [source_block::resume_propagation](source-block-class.md#resume_propagation).)|  \n|[overwrite_buffer::send_message Method](#send_message)|Synchronously passes a message from an `ISource` block to this `overwrite_buffer` messaging block. It is invoked by the `send` method, when called by a source block.|  \n|[overwrite_buffer::supports_anonymous_source Method](#supports_anonymous_source)|Overrides the `supports_anonymous_source` method to indicate that this block can accept messages offered to it by a source that is not linked. (Overrides [ITarget::supports_anonymous_source](itarget-class.md#supports_anonymous_source).)|  \n  \n## Remarks  \n An `overwrite_buffer` messaging block propagates out copies of its stored message to each of its targets.  \n  \n For more information, see [Asynchronous Message Blocks](../../../parallel/concrt/asynchronous-message-blocks.md).  \n  \n## Inheritance Hierarchy  \n [ISource](isource-class.md)  \n  \n [ITarget](itarget-class.md)  \n  \n [source_block](source-block-class.md)  \n  \n [propagator_block](propagator-block-class.md)  \n  \n `overwrite_buffer`  \n  \n## Requirements  \n **Header:** agents.h  \n  \n **Namespace:** concurrency  \n  \n##  <a name=\"accept_message\"></a>  overwrite_buffer::accept_message Method  \n Accepts a message that was offered by this `overwrite_buffer` messaging block, returning a copy of the message to the caller.  \n  \n```\nvirtual message<T>* accept_message(runtime_object_identity _MsgId);\n```  \n  \n### Parameters  \n `_MsgId`  \n The `runtime_object_identity` of the offered `message` object.  \n  \n### Return Value  \n A pointer to the `message` object that the caller now has ownership of.  \n  \n### Remarks  \n The `overwrite_buffer` messaging block returns copies of the message to its targets, rather than transferring ownership of the currently held message.  \n  \n##  <a name=\"consume_message\"></a>  overwrite_buffer::consume_message Method  \n Consumes a message previously offered by the `overwrite_buffer` messaging block and reserved by the target, returning a copy of the message to the caller.  \n  \n```\nvirtual message<T>* consume_message(runtime_object_identity _MsgId);\n```  \n  \n### Parameters  \n `_MsgId`  \n The `runtime_object_identity` of the `message` object being consumed.  \n  \n### Return Value  \n A pointer to the `message` object that the caller now has ownership of.  \n  \n### Remarks  \n Similar to `accept`, but is always preceded by a call to `reserve`.  \n  \n##  <a name=\"has_value\"></a>  overwrite_buffer::has_value Method  \n Checks whether this `overwrite_buffer` messaging block has a value yet.  \n  \n```\nbool has_value() const;\n```  \n  \n### Return Value  \n `true` if the block has received a value, `false` otherwise.  \n  \n##  <a name=\"link_target_notification\"></a>  overwrite_buffer::link_target_notification Method  \n A callback that notifies that a new target has been linked to this `overwrite_buffer` messaging block.  \n  \n```\nvirtual void link_target_notification(_Inout_ ITarget<T>* _PTarget);\n```  \n  \n### Parameters  \n `_PTarget`  \n A pointer to the newly linked target.  \n  \n##  <a name=\"dtor\"></a>  overwrite_buffer::~overwrite_buffer Destructor  \n Destroys the `overwrite_buffer` messaging block.  \n  \n```\n~overwrite_buffer();\n```  \n  \n##  <a name=\"ctor\"></a>  overwrite_buffer::overwrite_buffer Constructor  \n Constructs an `overwrite_buffer` messaging block.  \n  \n```\noverwrite_buffer();\n\noverwrite_buffer(\n    filter_method const& _Filter);\n\noverwrite_buffer(\n    Scheduler& _PScheduler);\n\noverwrite_buffer(\n    Scheduler& _PScheduler,\n    filter_method const& _Filter);\n\noverwrite_buffer(\n    ScheduleGroup& _PScheduleGroup);\n\noverwrite_buffer(\n    ScheduleGroup& _PScheduleGroup,\n    filter_method const& _Filter);\n```  \n  \n### Parameters  \n `_Filter`  \n A filter function which determines whether offered messages should be accepted.  \n  \n `_PScheduler`  \n The `Scheduler` object within which the propagation task for the `overwrite_buffer` messaging block is scheduled.  \n  \n `_PScheduleGroup`  \n The `ScheduleGroup` object within which the propagation task for the `overwrite_buffer` messaging block is scheduled. The `Scheduler` object used is implied by the schedule group.  \n  \n### Remarks  \n The runtime uses the default scheduler if you do not specify the `_PScheduler` or `_PScheduleGroup` parameters.  \n  \n The type `filter_method` is a functor with signature `bool (T const &)` which is invoked by this `overwrite_buffer` messaging block to determine whether or not it should accept an offered message.  \n  \n##  <a name=\"propagate_message\"></a>  overwrite_buffer::propagate_message Method  \n Asynchronously passes a message from an `ISource` block to this `overwrite_buffer` messaging block. It is invoked by the `propagate` method, when called by a source block.  \n  \n```\nvirtual message_status propagate_message(\n    _Inout_ message<T>* _PMessage,\n    _Inout_ ISource<T>* _PSource);\n```  \n  \n### Parameters  \n `_PMessage`  \n A pointer to the `message` object.  \n  \n `_PSource`  \n A pointer to the source block offering the message.  \n  \n### Return Value  \n A [message_status](concurrency-namespace-enums.md) indication of what the target decided to do with the message.  \n  \n##  <a name=\"propagate_to_any_targets\"></a>  overwrite_buffer::propagate_to_any_targets Method  \n Places the `message``_PMessage` in this `overwrite_buffer` messaging block and offers it to all of the linked targets.  \n  \n```\nvirtual void propagate_to_any_targets(_Inout_ message<T>* _PMessage);\n```  \n  \n### Parameters  \n `_PMessage`  \n A pointer to a `message` object that this `overwrite_buffer` has taken ownership of.  \n  \n### Remarks  \n This method overwrites the current message in the `overwrite_buffer` with the newly accepted message `_PMessage`.  \n  \n##  <a name=\"send_message\"></a>  overwrite_buffer::send_message Method  \n Synchronously passes a message from an `ISource` block to this `overwrite_buffer` messaging block. It is invoked by the `send` method, when called by a source block.  \n  \n```\nvirtual message_status send_message(\n    _Inout_ message<T>* _PMessage,\n    _Inout_ ISource<T>* _PSource);\n```  \n  \n### Parameters  \n `_PMessage`  \n A pointer to the `message` object.  \n  \n `_PSource`  \n A pointer to the source block offering the message.  \n  \n### Return Value  \n A [message_status](concurrency-namespace-enums.md) indication of what the target decided to do with the message.  \n  \n##  <a name=\"supports_anonymous_source\"></a>  overwrite_buffer::supports_anonymous_source Method  \n Overrides the `supports_anonymous_source` method to indicate that this block can accept messages offered to it by a source that is not linked.  \n  \n```\nvirtual bool supports_anonymous_source();\n```  \n  \n### Return Value  \n `true` because the block does not postpone offered messages.  \n  \n##  <a name=\"release_message\"></a>  overwrite_buffer::release_message Method  \n Releases a previous message reservation.  \n  \n```\nvirtual void release_message(runtime_object_identity _MsgId);\n```  \n  \n### Parameters  \n `_MsgId`  \n The `runtime_object_identity` of the `message` object being released.  \n  \n##  <a name=\"reserve_message\"></a>  overwrite_buffer::reserve_message Method  \n Reserves a message previously offered by this `overwrite_buffer` messaging block.  \n  \n```\nvirtual bool reserve_message(runtime_object_identity _MsgId);\n```  \n  \n### Parameters  \n `_MsgId`  \n The `runtime_object_identity` of the `message` object being reserved.  \n  \n### Return Value  \n `true` if the message was successfully reserved, `false` otherwise.  \n  \n### Remarks  \n After `reserve` is called, if it returns `true`, either `consume` or `release` must be called to either take or release ownership of the message.  \n  \n##  <a name=\"resume_propagation\"></a>  overwrite_buffer::resume_propagation Method  \n Resumes propagation after a reservation has been released.  \n  \n```\nvirtual void resume_propagation();\n```  \n  \n##  <a name=\"value\"></a>  overwrite_buffer::value Method  \n Gets a reference to the current payload of the message being stored in the `overwrite_buffer` messaging block.  \n  \n```\nT value();\n```  \n  \n### Return Value  \n The payload of the currently stored message.  \n  \n### Remarks  \n The value stored in the `overwrite_buffer` could change immediately after this method returns. This method will wait until a message arrives if no message is currently stored in the `overwrite_buffer`.  \n  \n## See Also  \n [concurrency Namespace](concurrency-namespace.md)   \n [unbounded_buffer Class](unbounded-buffer-class.md)   \n [single_assignment Class](single-assignment-class.md)\n"}