{"nodes":[{"pos":[12,59],"content":"is_default_constructible Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"is_default_constructible Class | Microsoft Docs","pos":[0,47]}]},{"content":"is_default_constructible Class","pos":[783,813]},{"content":"Tests if a type has a default constructor.","pos":[814,856]},{"content":"Syntax","pos":[865,871]},{"content":"Parameters","pos":[954,964]},{"content":"The type to query.","pos":[975,993]},{"content":"Remarks","pos":[1002,1009]},{"content":"An instance of the type predicate holds true if the type <ph id=\"ph1\">`T`</ph> is a class type that has a default constructor, otherwise it holds false.","pos":[1013,1147],"source":"An instance of the type predicate holds true if the type `T` is a class type that has a default constructor, otherwise it holds false."},{"content":"This is equivalent to the predicate <ph id=\"ph1\">`is_constructible&lt;T&gt;`</ph>.","pos":[1148,1206],"source":" This is equivalent to the predicate `is_constructible<T>`."},{"content":"Type <ph id=\"ph1\">`T`</ph> must be a complete type, <ph id=\"ph2\">`void`</ph>, or an array of unknown bound.","pos":[1207,1278],"source":" Type `T` must be a complete type, `void`, or an array of unknown bound."},{"content":"Example","pos":[1287,1294]},{"content":"Requirements","pos":[1975,1987]},{"pos":[1991,2016],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> &lt;type_traits&gt;","source":"**Header:** <type_traits>"},{"pos":[2023,2041],"content":"<bpt id=\"p1\">**</bpt>Namespace:<ept id=\"p1\">**</ept> std","source":"**Namespace:** std"},{"content":"See Also","pos":[2050,2058]},{"content":"&lt;type_traits&gt;","pos":[2063,2076],"source":"<type_traits>"}],"content":"---\ntitle: \"is_default_constructible Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"is_default_constructible\"\n  - \"std.is_default_constructible\"\n  - \"std::is_default_constructible\"\n  - \"type_traits/std::is_default_constructible\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"is_default_constructible\"\nms.assetid: dd8f1c44-dae5-4258-891f-c5e048d94092\ncaps.latest.revision: 14\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"ru-ru\"\n  - \"zh-cn\"\n  - \"zh-tw\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"tr-tr\"\n---\n# is_default_constructible Class\nTests if a type has a default constructor.  \n  \n## Syntax  \n  \n```  \ntemplate <class Ty>  \nstruct is_default_constructible;  \n```  \n  \n#### Parameters  \n `T`  \n The type to query.  \n  \n## Remarks  \n An instance of the type predicate holds true if the type `T` is a class type that has a default constructor, otherwise it holds false. This is equivalent to the predicate `is_constructible<T>`. Type `T` must be a complete type, `void`, or an array of unknown bound.  \n  \n## Example  \n  \n```cpp  \n  \n#include <type_traits>   \n#include <iostream>   \n  \nstruct Simple  \n{  \n    Simple() : val(0) {}  \n    int val;  \n};  \n  \nstruct Simple2  \n{  \n    Simple2(int v) : val(v) {}  \n    int val;  \n};  \n  \nint main()  \n{  \n    std::cout << \"is_default_constructible<Simple> == \" << std::boolalpha  \n        << std::is_default_constructible<Simple>::value << std::endl;  \n    std::cout << \"is_default_constructible<Simple2> == \" << std::boolalpha  \n        << std::is_default_constructible<Simple2>::value << std::endl;  \n  \n    return (0);  \n}  \n  \n```  \n  \n```Output  \nis_default_constructible<Simple> == true  \nis_default_constructible<Simple2> == false  \n```  \n  \n## Requirements  \n **Header:** <type_traits>  \n  \n **Namespace:** std  \n  \n## See Also  \n [<type_traits>](../standard-library/type-traits.md)\n\n"}