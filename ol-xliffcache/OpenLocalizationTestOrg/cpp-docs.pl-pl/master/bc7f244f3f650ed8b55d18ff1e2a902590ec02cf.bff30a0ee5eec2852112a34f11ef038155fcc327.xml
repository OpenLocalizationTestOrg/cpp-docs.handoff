{"nodes":[{"pos":[12,56],"content":"is_move_constructible Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"is_move_constructible Class | Microsoft Docs","pos":[0,44]}]},{"pos":[739,766],"content":"is_move_constructible Class","linkify":"is_move_constructible Class","nodes":[{"content":"is_move_constructible Class","pos":[0,27]}]},{"content":"Tests whether the type has a move constructor.","pos":[767,813]},{"pos":[822,828],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[903,913],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"T","pos":[917,918]},{"content":"The type to be evaluated","pos":[922,946]},{"pos":[955,962],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"A type predicate that evaluates to true if the type <ph id=\"ph1\">`T`</ph> can be constructed by using a move operation.","pos":[966,1067],"source":"A type predicate that evaluates to true if the type `T` can be constructed by using a move operation."},{"content":"This predicate is equivalent to <ph id=\"ph1\">`is_constructible&lt;T, T&amp;&amp;&gt;`</ph>.","pos":[1068,1127],"source":" This predicate is equivalent to `is_constructible<T, T&&>`."},{"pos":[1136,1148],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[1152,1177],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> &lt;type_traits&gt;","source":"**Header:** <type_traits>"},{"pos":[1184,1202],"content":"<bpt id=\"p1\">**</bpt>Namespace:<ept id=\"p1\">**</ept> std","source":"**Namespace:** std"},{"pos":[1211,1219],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"pos":[1223,1274],"content":"<bpt id=\"p1\">[</bpt>&lt;type_traits&gt;<ept id=\"p1\">](../standard-library/type-traits.md)</ept>","source":"[<type_traits>](../standard-library/type-traits.md)"}],"content":"---\ntitle: \"is_move_constructible Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"is_move_constructible\"\n  - \"std.is_move_constructible\"\n  - \"std::is_move_constructible\"\n  - \"type_traits/std::is_move_constructible\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"is_move_constructible\"\nms.assetid: becdf076-7419-488d-a335-78adf2478b9b\ncaps.latest.revision: 12\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# is_move_constructible Class\nTests whether the type has a move constructor.  \n  \n## Syntax  \n  \n```\ntemplate <class T>  \nstruct is_move_constructible;\n```  \n  \n#### Parameters  \n T  \n The type to be evaluated  \n  \n## Remarks  \n A type predicate that evaluates to true if the type `T` can be constructed by using a move operation. This predicate is equivalent to `is_constructible<T, T&&>`.  \n  \n## Requirements  \n **Header:** <type_traits>  \n  \n **Namespace:** std  \n  \n## See Also  \n [<type_traits>](../standard-library/type-traits.md)\n\n\n\n"}