<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="pl-pl">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-787e512" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a10025019879bcf0b034953003c613f7ed463dbc</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\c-runtime-library\reference\cscanf-cscanf-l-cwscanf-cwscanf-l.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3618a35124105f8ce50d98cbadf83dbc15abc0aa</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">65f2dd5c7edf1b45f077278aa956bd70ca2a6fb4</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>_cscanf, _cscanf_l, _cwscanf, _cwscanf_l | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>_cscanf, _cscanf_l, _cwscanf, _cwscanf_l</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Reads formatted data from the console.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>More secure versions of these functions are available; see <bpt id="p1">[</bpt>_cscanf_s, _cscanf_s_l, _cwscanf_s, _cwscanf_s_l<ept id="p1">](../../c-runtime-library/reference/cscanf-s-cscanf-s-l-cwscanf-s-cwscanf-s-l.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>This API cannot be used in applications that execute in the Windows Runtime.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>CRT functions not supported with /ZW<ept id="p1">](http://msdn.microsoft.com/library/windows/apps/jj606124.aspx)</ept>.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Format-control string.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Optional parameters.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The locale to use.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The number of fields that were successfully converted and assigned.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The return value does not include fields that were read but not assigned.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The return value is <ph id="ph1">`EOF`</ph> for an attempt to read at end of file.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>This can occur when keyboard input is redirected at the operating-system command-line level.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>A return value of 0 means that no fields were assigned.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`_cscanf`</ph> function reads data directly from the console into the locations given by <ph id="ph2">`argument`</ph>.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>_getche<ept id="p1">](../../c-runtime-library/reference/getch-getwch.md)</ept> function is used to read characters.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Each optional parameter must be a pointer to a variable with a type that corresponds to a type specifier in <ph id="ph1">`format`</ph>.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The format controls the interpretation of the input fields and has the same form and function as the <ph id="ph1">`format`</ph> parameter for the <bpt id="p1">[</bpt>scanf<ept id="p1">](../../c-runtime-library/reference/scanf-scanf-l-wscanf-wscanf-l.md)</ept> function.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>While <ph id="ph1">`_cscanf`</ph> normally echoes the input character, it does not do so if the last call was to <ph id="ph2">`_ungetch`</ph>.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>This function validates its parameters.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>If format is NULL, the invalid parameter handler is invoked, as described in <bpt id="p1">[</bpt>Parameter Validation<ept id="p1">](../../c-runtime-library/parameter-validation.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>If execution is allowed to continue, <ph id="ph1">`errno`</ph> is set to <ph id="ph2">`EINVAL`</ph> and the function returns <ph id="ph3">`EOF`</ph>.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The versions of these functions with the <ph id="ph1">`_l`</ph> suffix are identical except that they use the locale parameter passed in instead of the current thread locale.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Generic-Text Routine Mappings</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>TCHAR.H routine</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>_UNICODE and _MBCS not defined</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>_MBCS defined</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>_UNICODE defined</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Requirements</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Routine</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Required header</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>,</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>conio.h&gt;</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>,</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>conio.h&gt; or <ph id="ph1">\&lt;</ph>wchar.h&gt;</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>For more compatibility information, see <bpt id="p1">[</bpt>Compatibility<ept id="p1">](../../c-runtime-library/compatibility.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Input</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Output</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Console and Port I/O</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>_cprintf, _cprintf_l, _cwprintf, _cwprintf_l</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>fscanf, _fscanf_l, fwscanf, _fwscanf_l</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>scanf_s, _scanf_s_l, wscanf_s, _wscanf_s_l</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>sscanf, _sscanf_l, swscanf, _swscanf_l</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>