{"nodes":[{"pos":[12,49],"content":"stack::top (STL-CLR) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"stack::top (STL-CLR) | Microsoft Docs","pos":[0,37]}]},{"content":"stack::top (STL/CLR)","pos":[620,640]},{"content":"Accesses the last element.","pos":[641,667]},{"content":"Syntax","pos":[676,682]},{"content":"Remarks","pos":[725,732]},{"content":"The member function returns a reference to the last element of the controlled sequence, which must be non-empty.","pos":[736,848]},{"content":"You use it to access the last element, when you know it exists.","pos":[849,912]},{"content":"Example","pos":[921,928]},{"content":"Requirements","pos":[1737,1749]},{"pos":[1753,1780],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> <ph id=\"ph1\">\\&lt;</ph>cliext/stack&gt;","source":"**Header:** \\<cliext/stack>"},{"pos":[1787,1808],"content":"<bpt id=\"p1\">**</bpt>Namespace:<ept id=\"p1\">**</ept> cliext","source":"**Namespace:** cliext"},{"content":"See Also","pos":[1817,1825]},{"content":"stack (STL/CLR)","pos":[1830,1845]},{"content":"stack::top_item (STL/CLR)","pos":[1880,1905]}],"content":"---\ntitle: \"stack::top (STL-CLR) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"cliext::stack::top\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"top member [STL/CLR]\"\nms.assetid: 5d8b7b69-336e-4d01-8b91-413a17aa2533\ncaps.latest.revision: 15\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# stack::top (STL/CLR)\nAccesses the last element.  \n  \n## Syntax  \n  \n```  \nreference top();  \n```  \n  \n## Remarks  \n The member function returns a reference to the last element of the controlled sequence, which must be non-empty. You use it to access the last element, when you know it exists.  \n  \n## Example  \n  \n```  \n// cliext_stack_top.cpp   \n// compile with: /clr   \n#include <cliext/stack>   \n  \ntypedef cliext::stack<wchar_t> Mystack;   \nint main()   \n    {   \n    Mystack c1;   \n    c1.push(L'a');   \n    c1.push(L'b');   \n    c1.push(L'c');   \n  \n// display initial contents \" a b c\"   \n    for each (wchar_t elem in c1.get_container())   \n        System::Console::Write(\" {0}\", elem);   \n    System::Console::WriteLine();   \n  \n// inspect last item   \n    System::Console::WriteLine(\"top() = {0}\", c1.top());   \n  \n// alter last item and reinspect   \n    c1.top() = L'x';   \n    for each (wchar_t elem in c1.get_container())   \n        System::Console::Write(\" {0}\", elem);   \n    System::Console::WriteLine();   \n    return (0);   \n    }  \n  \n```  \n  \n```Output  \n a b c  \ntop() = c  \n a b x  \n```  \n  \n## Requirements  \n **Header:** \\<cliext/stack>  \n  \n **Namespace:** cliext  \n  \n## See Also  \n [stack (STL/CLR)](../dotnet/stack-stl-clr.md)   \n [stack::top_item (STL/CLR)](../dotnet/stack-top-item-stl-clr.md)"}