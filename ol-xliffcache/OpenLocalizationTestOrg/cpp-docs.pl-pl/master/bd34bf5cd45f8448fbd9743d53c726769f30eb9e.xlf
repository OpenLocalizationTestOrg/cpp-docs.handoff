<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="pl-pl">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-787e512" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">bd34bf5cd45f8448fbd9743d53c726769f30eb9e</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\atl\reference\cnonstatelessworker-class.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">45569dd2b35be4df33f3a62fd4e1733eb92aa987</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f51fd2b14b5cd7d7d7d6026a3877afc97fc97278</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>CNonStatelessWorker Class | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>CNonStatelessWorker Class</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Receives requests from a thread pool and passes them on to a worker object that is created and destroyed on each request.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>This class and its members cannot be used in applications that execute in the Windows Runtime.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Worker</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>A worker thread class conforming to the <bpt id="p1">[</bpt>worker archetype<ept id="p1">](../../atl/reference/worker-archetype.md)</ept> suitable for handling requests queued on <bpt id="p2">[</bpt>CThreadPool<ept id="p2">](../../atl/reference/cthreadpool-class.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Members</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Public Typedefs</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>CNonStatelessWorker::RequestType</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Implementation of <bpt id="p1">[</bpt>WorkerArchetype::RequestType<ept id="p1">](worker-archetype.md#workerarchetype__requesttype)</ept>.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Public Methods</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>CNonStatelessWorker::Execute</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Implementation of <bpt id="p1">[</bpt>WorkerArchetype::Execute<ept id="p1">](worker-archetype.md#workerarchetype__execute)</ept>.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>CNonStatelessWorker::Initialize</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Implementation of <bpt id="p1">[</bpt>WorkerArchetype::Initialize<ept id="p1">](worker-archetype.md#workerarchetype__initialize)</ept>.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>CNonStatelessWorker::Terminate</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Implementation of <bpt id="p1">[</bpt>WorkerArchetype::Terminate<ept id="p1">](worker-archetype.md#workerarchetype__terminate)</ept>.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>This class is a simple worker thread for use with <bpt id="p1">[</bpt>CThreadPool<ept id="p1">](../../atl/reference/cthreadpool-class.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>This class doesn't provide any request-handling capabilities of its own.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Instead, it instantiates one instance of <bpt id="p1">*</bpt>Worker<ept id="p1">*</ept> per request and delegates the implementation of its methods to that instance.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The benefit of this class is that it provides a convenient way to change the state model for existing worker thread classes.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>will create a single worker for the lifetime of the thread, so if the worker class holds state, it will hold it across multiple requests.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>By simply wrapping that class in the <ph id="ph1">`CNonStatelessWorker`</ph> template before using it with <ph id="ph2">`CThreadPool`</ph>, the lifetime of the worker and the state it holds is limited to a single request.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Requirements</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Header:<ept id="p1">**</ept> atlutil.h</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>CNonStatelessWorker::Execute</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Implementation of <bpt id="p1">[</bpt>WorkerArchetype::Execute<ept id="p1">](worker-archetype.md#workerarchetype__execute)</ept>.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>This method creates an instance of the <bpt id="p1">*</bpt>Worker<ept id="p1">*</ept> class on the stack and calls <bpt id="p2">[</bpt>Initialize<ept id="p2">](worker-archetype.md#workerarchetype__initialize)</ept> on that object.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>If the initialization is successful, this method also calls <bpt id="p1">[</bpt>Execute<ept id="p1">](worker-archetype.md#workerarchetype__execute)</ept> and <bpt id="p2">[</bpt>Terminate<ept id="p2">](worker-archetype.md#workerarchetype__terminate)</ept> on the same object.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>CNonStatelessWorker::Initialize</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Implementation of <bpt id="p1">[</bpt>WorkerArchetype::Initialize<ept id="p1">](worker-archetype.md#workerarchetype__initialize)</ept>.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Always returns TRUE.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>This class does not do any initialization in <ph id="ph1">`Initialize`</ph>.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>CNonStatelessWorker::RequestType</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Implementation of <bpt id="p1">[</bpt>WorkerArchetype::RequestType<ept id="p1">](worker-archetype.md#workerarchetype__requesttype)</ept>.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>This class handles the same type of work item as the class used for the <bpt id="p1">*</bpt>Worker<ept id="p1">*</ept> template parameter.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>CNonStatelessWorker Overview<ept id="p1">](../../atl/reference/cnonstatelessworker-class.md)</ept> for details.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>CNonStatelessWorker::Terminate</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Implementation of <bpt id="p1">[</bpt>WorkerArchetype::Terminate<ept id="p1">](worker-archetype.md#workerarchetype__terminate)</ept>.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>This class does not do any cleanup in <ph id="ph1">`Terminate`</ph>.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>CThreadPool Class</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Worker Archetype</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Classes</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>