{"nodes":[{"pos":[12,53],"content":"4. Environment Variables | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"4. Environment Variables | Microsoft D","pos":[0,38]}]},{"content":"4. Environment Variables","pos":[533,557]},{"content":"This chapter describes the OpenMP C and C++ API environment variables (or equivalent platform-specific mechanisms) that control the execution of parallel code.","pos":[558,717]},{"content":"The names of environment variables must be uppercase.","pos":[719,772]},{"content":"The values assigned to them are case insensitive and may have leading and trailing white space.","pos":[773,868]},{"content":"Modifications to the values after the program has started are ignored.","pos":[870,940]},{"content":"The environment variables are as follows:","pos":[947,988]},{"pos":[998,1062],"content":"<bpt id=\"p1\">**</bpt>OMP_SCHEDULE<ept id=\"p1\">**</ept> sets the run-time schedule type and chunk size.","source":"**OMP_SCHEDULE** sets the run-time schedule type and chunk size."},{"pos":[1072,1143],"content":"<bpt id=\"p1\">**</bpt>OMP_NUM_THREADS<ept id=\"p1\">**</ept> sets the number of threads to use during execution.","source":"**OMP_NUM_THREADS** sets the number of threads to use during execution."},{"pos":[1153,1233],"content":"<bpt id=\"p1\">**</bpt>OMP_DYNAMIC<ept id=\"p1\">**</ept> enables or disables dynamic adjustment of the number of threads.","source":"**OMP_DYNAMIC** enables or disables dynamic adjustment of the number of threads."},{"pos":[1243,1297],"content":"<bpt id=\"p1\">**</bpt>OMP_NESTED<ept id=\"p1\">**</ept> enables or disables nested parallelism.","source":"**OMP_NESTED** enables or disables nested parallelism."},{"content":"The examples in this chapter only demonstrate how these variables might be set in Unix C shell (csh) environments.","pos":[1304,1418]},{"content":"In Korn shell and DOS environments the actions are similar, as follows:","pos":[1419,1490]},{"pos":[1497,1534],"content":"csh:  \nsetenv OMP_SCHEDULE \"dynamic\"","leadings":[""," "],"nodes":[{"content":"csh:","pos":[0,4]},{"content":"setenv OMP_SCHEDULE \"dynamic\"","pos":[7,36]}]},{"pos":[1541,1578],"content":"ksh:  \nexport OMP_SCHEDULE=\"dynamic\"","leadings":[""," "],"nodes":[{"content":"ksh:","pos":[0,4]},{"content":"export OMP_SCHEDULE=\"dynamic\"","pos":[7,36]}]},{"pos":[1585,1619],"content":"DOS:  \nset OMP_SCHEDULE=\"dynamic\"","leadings":[""," "],"nodes":[{"content":"DOS:","pos":[0,4]},{"content":"set OMP_SCHEDULE=\"dynamic\"","pos":[7,33]}]}],"content":"---\ntitle: \"4. Environment Variables | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"C++\"\nms.assetid: 4ec7ed81-e9ca-46a1-84f8-8f9ce4587346\ncaps.latest.revision: 4\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# 4. Environment Variables\nThis chapter describes the OpenMP C and C++ API environment variables (or equivalent platform-specific mechanisms) that control the execution of parallel code.  The names of environment variables must be uppercase. The values assigned to them are case insensitive and may have leading and trailing white space.  Modifications to the values after the program has started are ignored.  \n  \n The environment variables are as follows:  \n  \n-   **OMP_SCHEDULE** sets the run-time schedule type and chunk size.  \n  \n-   **OMP_NUM_THREADS** sets the number of threads to use during execution.  \n  \n-   **OMP_DYNAMIC** enables or disables dynamic adjustment of the number of threads.  \n  \n-   **OMP_NESTED** enables or disables nested parallelism.  \n  \n The examples in this chapter only demonstrate how these variables might be set in Unix C shell (csh) environments. In Korn shell and DOS environments the actions are similar, as follows:  \n  \n csh:  \n setenv OMP_SCHEDULE \"dynamic\"  \n  \n ksh:  \n export OMP_SCHEDULE=\"dynamic\"  \n  \n DOS:  \n set OMP_SCHEDULE=\"dynamic\""}