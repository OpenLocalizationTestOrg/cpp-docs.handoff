{"nodes":[{"pos":[12,33],"content":"loop | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"loop | Microsoft Docs","pos":[0,21]}]},{"content":"loop","pos":[563,567]},{"content":"Controls how loop code is to be considered by the auto-parallelizer, and/or excludes a loop from consideration by the auto-vectorizer.","pos":[568,702]},{"content":"Syntax","pos":[711,717]},{"content":"Parameters","pos":[869,879]},{"content":"Hints to the compiler that this loop should be parallelized across <ph id=\"ph1\">`n`</ph> threads, where <ph id=\"ph2\">`n`</ph> is a positive integer literal or zero.","pos":[911,1039],"source":" Hints to the compiler that this loop should be parallelized across `n` threads, where `n` is a positive integer literal or zero."},{"content":"If <ph id=\"ph1\">`n`</ph> is zero, the maximum number of threads is used at run time.","pos":[1040,1106],"source":" If `n` is zero, the maximum number of threads is used at run time."},{"content":"This is a hint to the compiler, not a command, and there is no guarantee that the loop will be parallelized.","pos":[1107,1215]},{"content":"If the loop has data dependencies, or structural issues—for example, the loop stores to a scalar that's used beyond the loop body—then the loop will not be parallelized.","pos":[1216,1385]},{"pos":[1392,1519],"content":"The compiler ignores this option unless the <bpt id=\"p1\">[</bpt>/Qpar<ept id=\"p1\">](../build/reference/qpar-auto-parallelizer.md)</ept> compiler switch is specified.","source":"The compiler ignores this option unless the [/Qpar](../build/reference/qpar-auto-parallelizer.md) compiler switch is specified."},{"content":"By default, the auto-vectorizer is on and will attempt to vectorize all loops that it evaluates as benefitting from it.","pos":[1541,1660]},{"content":"Specify this pragma to disable the auto-vectorizer for the loop that follows it.","pos":[1661,1741]},{"content":"Hints to the compiler to ignore vector dependencies for this loop.","pos":[1759,1825]},{"content":"Use this in conjunction with <ph id=\"ph1\">`hint_parallel`</ph>.","pos":[1826,1871],"source":" Use this in conjunction with `hint_parallel`."},{"content":"Remarks","pos":[1880,1887]},{"content":"To use the <ph id=\"ph1\">`loop`</ph> pragma, place it immediately before—not in—a loop definition.","pos":[1891,1970],"source":"To use the `loop` pragma, place it immediately before—not in—a loop definition."},{"content":"The pragma takes effect for the scope of the loop that follows it.","pos":[1971,2037]},{"content":"You can apply multiple pragmas to a loop, in any order, but you must state each one in a separate pragma statement.","pos":[2038,2153]},{"content":"See Also","pos":[2162,2170]},{"content":"Auto-Parallelization and Auto-Vectorization","pos":[2175,2218]},{"content":"Pragma Directives and the __Pragma Keyword","pos":[2285,2327]}],"content":"---\ntitle: \"loop | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"loop_CPP\"\n  - \"vc-pragma.loop\"\ndev_langs: \n  - \"C++\"\nms.assetid: 6d5bb428-cead-47e7-941d-7513bbb162c7\ncaps.latest.revision: 7\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# loop\nControls how loop code is to be considered by the auto-parallelizer, and/or excludes a loop from consideration by the auto-vectorizer.  \n  \n## Syntax  \n  \n```  \n  \n#pragma loop( hint_parallel(n) )  \n```  \n  \n```  \n  \n#pragma loop( no_vector )  \n```  \n  \n```  \n  \n#pragma loop( ivdep )  \n```  \n  \n#### Parameters  \n `hint_parallel(` `n` `)`  \n Hints to the compiler that this loop should be parallelized across `n` threads, where `n` is a positive integer literal or zero. If `n` is zero, the maximum number of threads is used at run time. This is a hint to the compiler, not a command, and there is no guarantee that the loop will be parallelized. If the loop has data dependencies, or structural issues—for example, the loop stores to a scalar that's used beyond the loop body—then the loop will not be parallelized.  \n  \n The compiler ignores this option unless the [/Qpar](../build/reference/qpar-auto-parallelizer.md) compiler switch is specified.  \n  \n `no_vector`  \n By default, the auto-vectorizer is on and will attempt to vectorize all loops that it evaluates as benefitting from it. Specify this pragma to disable the auto-vectorizer for the loop that follows it.  \n  \n `ivdep`  \n Hints to the compiler to ignore vector dependencies for this loop. Use this in conjunction with `hint_parallel`.  \n  \n## Remarks  \n To use the `loop` pragma, place it immediately before—not in—a loop definition. The pragma takes effect for the scope of the loop that follows it. You can apply multiple pragmas to a loop, in any order, but you must state each one in a separate pragma statement.  \n  \n## See Also  \n [Auto-Parallelization and Auto-Vectorization](../parallel/auto-parallelization-and-auto-vectorization.md)   \n [Pragma Directives and the __Pragma Keyword](../preprocessor/pragma-directives-and-the-pragma-keyword.md)"}