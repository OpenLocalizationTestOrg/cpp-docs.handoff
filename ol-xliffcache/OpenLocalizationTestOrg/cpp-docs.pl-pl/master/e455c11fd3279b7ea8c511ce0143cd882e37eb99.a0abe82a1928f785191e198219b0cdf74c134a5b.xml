{"nodes":[{"pos":[12,62],"content":"Connection Point Global Functions | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Connection Point Global Functions | Microsoft Docs","pos":[0,50]}]},{"pos":[615,648],"content":"Connection Point Global Functions","linkify":"Connection Point Global Functions","nodes":[{"content":"Connection Point Global Functions","pos":[0,33]}]},{"content":"These functions provide support for connection points and sink maps.","pos":[649,717]},{"pos":[725,892],"content":"[!IMPORTANT]\n The functions listed in the following table cannot be used in applications that execute in the [!INCLUDE[wrt](../../atl/reference/includes/wrt_md.md)].","leadings":["","> "],"nodes":[{"content":"The functions listed in the following table cannot be used in applications that execute in the <ph id=\"ph1\">[!INCLUDE[wrt](../../atl/reference/includes/wrt_md.md)]</ph>.","pos":[14,165],"source":" The functions listed in the following table cannot be used in applications that execute in the [!INCLUDE[wrt](../../atl/reference/includes/wrt_md.md)]."}]},{"pos":[913,936],"content":"<bpt id=\"p1\">[</bpt>AtlAdvise<ept id=\"p1\">](#atladvise)</ept>","source":"[AtlAdvise](#atladvise)"},{"content":"Creates a connection between an object's connection point and a client's sink.","pos":[937,1015]},{"pos":[1020,1047],"content":"<bpt id=\"p1\">[</bpt>AtlUnadvise<ept id=\"p1\">](#atlunadvise)</ept>","source":"[AtlUnadvise](#atlunadvise)"},{"pos":[1048,1106],"content":"Terminates the connection established through <ph id=\"ph1\">`AtlAdvise`</ph>.","source":"Terminates the connection established through `AtlAdvise`."},{"pos":[1111,1148],"content":"<bpt id=\"p1\">[</bpt>AtlAdviseSinkMap<ept id=\"p1\">](#atladvisesinkmap)</ept>","source":"[AtlAdviseSinkMap](#atladvisesinkmap)"},{"content":"Advises or unadvises entries in an event sink map.","pos":[1149,1199]},{"pos":[1210,1245],"content":"<bpt id=\"p1\">&lt;a name=\"atladvise\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  AtlAdvise","linkify":"<a name=\"atladvise\"></a>  AtlAdvise","source":"<a name=\"atladvise\"></a>  AtlAdvise"},{"content":"Creates a connection between an object's connection point and a client's sink.","pos":[1249,1327]},{"pos":[1335,1472],"content":"[!IMPORTANT]\n This function cannot be used in applications that execute in the [!INCLUDE[wrt](../../atl/reference/includes/wrt_md.md)].","leadings":["","> "],"nodes":[{"content":"This function cannot be used in applications that execute in the <ph id=\"ph1\">[!INCLUDE[wrt](../../atl/reference/includes/wrt_md.md)]</ph>.","pos":[14,135],"source":" This function cannot be used in applications that execute in the [!INCLUDE[wrt](../../atl/reference/includes/wrt_md.md)]."}]},{"pos":[1598,1608],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] A pointer to the <bpt id=\"p1\">**</bpt>IUnknown<ept id=\"p1\">**</ept> of the object the client wants to connect with.","pos":[1624,1706],"source":" [in] A pointer to the **IUnknown** of the object the client wants to connect with."},{"content":"<bpt id=\"p1\">*</bpt>pUnk<ept id=\"p1\">*</ept>","pos":[1713,1719],"source":"*pUnk*"},{"content":"[in] A pointer to the client's <bpt id=\"p1\">**</bpt>IUnknown<ept id=\"p1\">**</ept>.","pos":[1723,1767],"source":" [in] A pointer to the client's **IUnknown**."},{"content":"[in] The GUID of the connection point.","pos":[1783,1821]},{"content":"Typically, this is the same as the outgoing interface managed by the connection point.","pos":[1822,1908]},{"content":"[out] A pointer to the cookie that uniquely identifies the connection.","pos":[1924,1994]},{"pos":[2004,2016],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A standard HRESULT value.","pos":[2020,2045]},{"pos":[2055,2062],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The sink implements the outgoing interface supported by the connection point.","pos":[2066,2143]},{"content":"The client uses the <ph id=\"ph1\">`pdw`</ph> cookie to remove the connection by passing it to <bpt id=\"p1\">[</bpt>AtlUnadvise<ept id=\"p1\">](#atlunadvise)</ept>.","pos":[2144,2247],"source":" The client uses the `pdw` cookie to remove the connection by passing it to [AtlUnadvise](#atlunadvise)."},{"pos":[2257,2264],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[2268,2368],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_ATL_Windowing#91<ept id=\"p2\">](../../atl/codesnippet/cpp/connection-point-global-functions_1.cpp)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_ATL_Windowing#91](../../atl/codesnippet/cpp/connection-point-global-functions_1.cpp)]"},{"pos":[2378,2417],"content":"<bpt id=\"p1\">&lt;a name=\"atlunadvise\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  AtlUnadvise","linkify":"<a name=\"atlunadvise\"></a>  AtlUnadvise","source":"<a name=\"atlunadvise\"></a>  AtlUnadvise"},{"pos":[2421,2491],"content":"Terminates the connection established through <bpt id=\"p1\">[</bpt>AtlAdvise<ept id=\"p1\">](#atladvise)</ept>.","source":"Terminates the connection established through [AtlAdvise](#atladvise)."},{"pos":[2499,2636],"content":"[!IMPORTANT]\n This function cannot be used in applications that execute in the [!INCLUDE[wrt](../../atl/reference/includes/wrt_md.md)].","leadings":["","> "],"nodes":[{"content":"This function cannot be used in applications that execute in the <ph id=\"ph1\">[!INCLUDE[wrt](../../atl/reference/includes/wrt_md.md)]</ph>.","pos":[14,135],"source":" This function cannot be used in applications that execute in the [!INCLUDE[wrt](../../atl/reference/includes/wrt_md.md)]."}]},{"pos":[2741,2751],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] A pointer to the <bpt id=\"p1\">**</bpt>IUnknown<ept id=\"p1\">**</ept> of the object that the client is connected with.","pos":[2767,2850],"source":" [in] A pointer to the **IUnknown** of the object that the client is connected with."},{"content":"[in] The GUID of the connection point.","pos":[2866,2904]},{"content":"Typically, this is the same as the outgoing interface managed by the connection point.","pos":[2905,2991]},{"content":"[in] The cookie that uniquely identifies the connection.","pos":[3006,3062]},{"pos":[3072,3084],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A standard HRESULT value.","pos":[3088,3113]},{"pos":[3123,3130],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[3134,3234],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_ATL_Windowing#96<ept id=\"p2\">](../../atl/codesnippet/cpp/connection-point-global-functions_2.cpp)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_ATL_Windowing#96](../../atl/codesnippet/cpp/connection-point-global-functions_2.cpp)]"},{"pos":[3244,3293],"content":"<bpt id=\"p1\">&lt;a name=\"atladvisesinkmap\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  AtlAdviseSinkMap","linkify":"<a name=\"atladvisesinkmap\"></a>  AtlAdviseSinkMap","source":"<a name=\"atladvisesinkmap\"></a>  AtlAdviseSinkMap"},{"content":"Call this function to advise or unadvise all entries in the object's sink event map.","pos":[3297,3381]},{"pos":[3389,3526],"content":"[!IMPORTANT]\n This function cannot be used in applications that execute in the [!INCLUDE[wrt](../../atl/reference/includes/wrt_md.md)].","leadings":["","> "],"nodes":[{"content":"This function cannot be used in applications that execute in the <ph id=\"ph1\">[!INCLUDE[wrt](../../atl/reference/includes/wrt_md.md)]</ph>.","pos":[14,135],"source":" This function cannot be used in applications that execute in the [!INCLUDE[wrt](../../atl/reference/includes/wrt_md.md)]."}]},{"pos":[3602,3612],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"<bpt id=\"p1\">*</bpt>pT<ept id=\"p1\">*</ept>","pos":[3616,3620],"source":"*pT*"},{"content":"[in] A pointer to the object containing the sink map.","pos":[3624,3677]},{"content":"[in] <bpt id=\"p1\">**</bpt>true<ept id=\"p1\">**</ept> if all sink entries are to be advised; <bpt id=\"p2\">**</bpt>false<ept id=\"p2\">**</ept> if all sink entries are to be unadvised.","pos":[3697,3800],"source":" [in] **true** if all sink entries are to be advised; **false** if all sink entries are to be unadvised."},{"pos":[3810,3822],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A standard HRESULT value.","pos":[3826,3851]},{"pos":[3861,3868],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[3872,3970],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_ATL_Windowing#92<ept id=\"p2\">](../../atl/codesnippet/cpp/connection-point-global-functions_3.h)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_ATL_Windowing#92](../../atl/codesnippet/cpp/connection-point-global-functions_3.h)]"},{"pos":[3979,3987],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Functions<ept id=\"p1\">](../../atl/reference/atl-functions.md)</ept><ph id=\"ph1\"> </ph>","pos":[3991,4041],"source":"[Functions](../../atl/reference/atl-functions.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Connection Point Macros<ept id=\"p1\">](../../atl/reference/connection-point-macros.md)</ept>","pos":[4044,4118],"source":" [Connection Point Macros](../../atl/reference/connection-point-macros.md)"}],"content":"---\ntitle: \"Connection Point Global Functions | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"connection points [C++], global functions\"\nms.assetid: bcb4bf50-2155-4e20-b8bb-f2908b03a6e7\ncaps.latest.revision: 20\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Connection Point Global Functions\nThese functions provide support for connection points and sink maps.  \n  \n> [!IMPORTANT]\n>  The functions listed in the following table cannot be used in applications that execute in the [!INCLUDE[wrt](../../atl/reference/includes/wrt_md.md)].  \n  \n|||  \n|-|-|  \n|[AtlAdvise](#atladvise)|Creates a connection between an object's connection point and a client's sink.|  \n|[AtlUnadvise](#atlunadvise)|Terminates the connection established through `AtlAdvise`.|  \n|[AtlAdviseSinkMap](#atladvisesinkmap)|Advises or unadvises entries in an event sink map.|  \n  \n##  <a name=\"atladvise\"></a>  AtlAdvise  \n Creates a connection between an object's connection point and a client's sink.  \n  \n> [!IMPORTANT]\n>  This function cannot be used in applications that execute in the [!INCLUDE[wrt](../../atl/reference/includes/wrt_md.md)].  \n  \n```\nHRESULT     AtlAdvise(\n    IUnknown* pUnkCP,\n    IUnknown* pUnk,\n    const IID& iid,\n    LPDWORD pdw);\n```  \n  \n### Parameters  \n `pUnkCP`  \n [in] A pointer to the **IUnknown** of the object the client wants to connect with.  \n  \n *pUnk*  \n [in] A pointer to the client's **IUnknown**.  \n  \n `iid`  \n [in] The GUID of the connection point. Typically, this is the same as the outgoing interface managed by the connection point.  \n  \n `pdw`  \n [out] A pointer to the cookie that uniquely identifies the connection.  \n  \n### Return Value  \n A standard HRESULT value.  \n  \n### Remarks  \n The sink implements the outgoing interface supported by the connection point. The client uses the `pdw` cookie to remove the connection by passing it to [AtlUnadvise](#atlunadvise).  \n  \n### Example  \n [!code-cpp[NVC_ATL_Windowing#91](../../atl/codesnippet/cpp/connection-point-global-functions_1.cpp)]  \n  \n##  <a name=\"atlunadvise\"></a>  AtlUnadvise  \n Terminates the connection established through [AtlAdvise](#atladvise).  \n  \n> [!IMPORTANT]\n>  This function cannot be used in applications that execute in the [!INCLUDE[wrt](../../atl/reference/includes/wrt_md.md)].  \n  \n```\nHRESULT     AtlUnadvise(\n    IUnknown* pUnkCP,\n    const IID& iid,\n    DWORD dw);\n```  \n  \n### Parameters  \n `pUnkCP`  \n [in] A pointer to the **IUnknown** of the object that the client is connected with.  \n  \n `iid`  \n [in] The GUID of the connection point. Typically, this is the same as the outgoing interface managed by the connection point.  \n  \n `dw`  \n [in] The cookie that uniquely identifies the connection.  \n  \n### Return Value  \n A standard HRESULT value.  \n  \n### Example  \n [!code-cpp[NVC_ATL_Windowing#96](../../atl/codesnippet/cpp/connection-point-global-functions_2.cpp)]  \n  \n##  <a name=\"atladvisesinkmap\"></a>  AtlAdviseSinkMap  \n Call this function to advise or unadvise all entries in the object's sink event map.  \n  \n> [!IMPORTANT]\n>  This function cannot be used in applications that execute in the [!INCLUDE[wrt](../../atl/reference/includes/wrt_md.md)].  \n  \n```\nHRESULT AtlAdviseSinkMap(\n    T* pT,  bool bAdvise);\n```  \n  \n### Parameters  \n *pT*  \n [in] A pointer to the object containing the sink map.  \n  \n `bAdvise`  \n [in] **true** if all sink entries are to be advised; **false** if all sink entries are to be unadvised.  \n  \n### Return Value  \n A standard HRESULT value.  \n  \n### Example  \n [!code-cpp[NVC_ATL_Windowing#92](../../atl/codesnippet/cpp/connection-point-global-functions_3.h)]  \n  \n## See Also  \n [Functions](../../atl/reference/atl-functions.md)   \n [Connection Point Macros](../../atl/reference/connection-point-macros.md)\n"}