{"nodes":[{"pos":[12,50],"content":"_putenv_s, _wputenv_s | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"_putenv_s, _wputenv_s | Microsoft Docs","pos":[0,38]}]},{"pos":[1142,1163],"content":"_putenv_s, _wputenv_s","linkify":"_putenv_s, _wputenv_s","nodes":[{"content":"_putenv_s, _wputenv_s","pos":[0,21]}]},{"content":"Creates, modifies, or removes environment variables.","pos":[1164,1216]},{"content":"These are versions of <bpt id=\"p1\">[</bpt>_putenv, _wputenv<ept id=\"p1\">](../../c-runtime-library/reference/putenv-wputenv.md)</ept> but have security enhancements, as described in <bpt id=\"p2\">[</bpt>Security Features in the CRT<ept id=\"p2\">](../../c-runtime-library/security-features-in-the-crt.md)</ept>.","pos":[1217,1448],"source":" These are versions of [_putenv, _wputenv](../../c-runtime-library/reference/putenv-wputenv.md) but have security enhancements, as described in [Security Features in the CRT](../../c-runtime-library/security-features-in-the-crt.md)."},{"pos":[1456,1722],"content":"[!IMPORTANT]\n This API cannot be used in applications that execute in the [!INCLUDE[wrt](../../atl/reference/includes/wrt_md.md)]. For more information, see [CRT functions not supported with /ZW](http://msdn.microsoft.com/en-us/library/windows/apps/jj606124.aspx).","leadings":["","> "],"nodes":[{"content":" This API cannot be used in applications that execute in the [!INCLUDE[wrt](../../atl/reference/includes/wrt_md.md)]. For more information, see [CRT functions not supported with /ZW](http://msdn.microsoft.com/en-us/library/windows/apps/jj606124.aspx).","pos":[13,264],"nodes":[{"content":"This API cannot be used in applications that execute in the <ph id=\"ph1\">[!INCLUDE[wrt](../../atl/reference/includes/wrt_md.md)]</ph>.","pos":[1,117],"source":" This API cannot be used in applications that execute in the [!INCLUDE[wrt](../../atl/reference/includes/wrt_md.md)]."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>CRT functions not supported with /ZW<ept id=\"p1\">](http://msdn.microsoft.com/en-us/library/windows/apps/jj606124.aspx)</ept>.","pos":[118,251],"source":" For more information, see [CRT functions not supported with /ZW](http://msdn.microsoft.com/en-us/library/windows/apps/jj606124.aspx)."}]}]},{"pos":[1731,1737],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[1915,1925],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"The environment variable name.","pos":[1939,1969]},{"content":"The value to set the environment variable to.","pos":[1987,2032]},{"pos":[2041,2053],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Returns 0 if successful, or an error code.","pos":[2057,2099]},{"pos":[2109,2125],"content":"Error Conditions","linkify":"Error Conditions","nodes":[{"content":"Error Conditions","pos":[0,16]}]},{"content":"Return value","pos":[2147,2159]},{"content":"any","pos":[2221,2224]},{"content":"any","pos":[2238,2241]},{"content":"If one of the error conditions occurs, these functions invoke an invalid parameter handler, as described in <bpt id=\"p1\">[</bpt>Parameter Validation<ept id=\"p1\">](../../c-runtime-library/parameter-validation.md)</ept>.","pos":[2265,2445],"source":"If one of the error conditions occurs, these functions invoke an invalid parameter handler, as described in [Parameter Validation](../../c-runtime-library/parameter-validation.md)."},{"content":"If execution is allowed to continue, these functions return <ph id=\"ph1\">`EINVAL`</ph> and set <ph id=\"ph2\">`errno`</ph> to <ph id=\"ph3\">`EINVAL`</ph>.","pos":[2446,2543],"source":" If execution is allowed to continue, these functions return `EINVAL` and set `errno` to `EINVAL`."},{"pos":[2552,2559],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The <ph id=\"ph1\">`_putenv_s`</ph> function adds new environment variables or modifies the values of existing environment variables.","pos":[2563,2676],"source":"The `_putenv_s` function adds new environment variables or modifies the values of existing environment variables."},{"content":"Environment variables define the environment in which a process executes (for example, the default search path for libraries to be linked with a program).","pos":[2677,2831]},{"content":"<ph id=\"ph1\">`_wputenv_s`</ph> is a wide-character version of <ph id=\"ph2\">`_putenv_s`</ph>; the <ph id=\"ph3\">`envstring`</ph> argument to <ph id=\"ph4\">`_wputenv_s`</ph> is a wide-character string.","pos":[2832,2957],"source":"`_wputenv_s` is a wide-character version of `_putenv_s`; the `envstring` argument to `_wputenv_s` is a wide-character string."},{"pos":[2967,2996],"content":"Generic-Text Routine Mappings","linkify":"Generic-Text Routine Mappings","nodes":[{"content":"Generic-Text Routine Mappings","pos":[0,29]}]},{"content":"TCHAR.H routine","pos":[3003,3018]},{"content":"_UNICODE &amp; _MBCS not defined","pos":[3019,3047],"source":"_UNICODE & _MBCS not defined"},{"content":"_MBCS defined","pos":[3048,3061]},{"content":"_UNICODE defined","pos":[3062,3078]},{"content":"<ph id=\"ph1\">`name`</ph> is the name of the environment variable to be added or modified and <ph id=\"ph2\">`value`</ph> is the variable's value.","pos":[3248,3355],"source":"`name` is the name of the environment variable to be added or modified and `value` is the variable's value."},{"content":"If <ph id=\"ph1\">`name`</ph> is already part of the environment, its value is replaced by <ph id=\"ph2\">`value`</ph>; otherwise, the new <ph id=\"ph3\">`name`</ph> variable and its <ph id=\"ph4\">`value`</ph> are added to the environment.","pos":[3356,3516],"source":" If `name` is already part of the environment, its value is replaced by `value`; otherwise, the new `name` variable and its `value` are added to the environment."},{"content":"You can remove a variable from the environment by specifying an empty string (that is, \"\") for <ph id=\"ph1\">`value`</ph>.","pos":[3517,3620],"source":" You can remove a variable from the environment by specifying an empty string (that is, \"\") for `value`."},{"content":"<ph id=\"ph1\">`_putenv_s`</ph> and <ph id=\"ph2\">`_wputenv_s`</ph> affect only the environment that is local to the current process; you cannot use them to modify the command-level environment.","pos":[3627,3782],"source":"`_putenv_s` and `_wputenv_s` affect only the environment that is local to the current process; you cannot use them to modify the command-level environment."},{"content":"These functions operate only on data structures that are accessible to the run-time library and not on the environment \"segment\" that the operating system creates for a process.","pos":[3783,3960]},{"content":"When the current process terminates, the environment reverts to the level of the calling process, which in most cases is the operating-system level.","pos":[3961,4109]},{"content":"However, the modified environment can be passed to any new processes that are created by <ph id=\"ph1\">`_spawn`</ph>, <ph id=\"ph2\">`_exec`</ph>, or <ph id=\"ph3\">`system`</ph>, and these new processes get any new items that are added by <ph id=\"ph4\">`_putenv_s`</ph> and <ph id=\"ph5\">`_wputenv_s`</ph>.","pos":[4110,4320],"source":" However, the modified environment can be passed to any new processes that are created by `_spawn`, `_exec`, or `system`, and these new processes get any new items that are added by `_putenv_s` and `_wputenv_s`."},{"content":"Do not change an environment entry directly; instead, use <ph id=\"ph1\">`_putenv_s`</ph> or <ph id=\"ph2\">`_wputenv_s`</ph> to change it.","pos":[4327,4426],"source":"Do not change an environment entry directly; instead, use `_putenv_s` or `_wputenv_s` to change it."},{"content":"In particular, directly freeing elements of the <ph id=\"ph1\">`_environ[]`</ph> global array might cause invalid memory to be addressed.","pos":[4427,4544],"source":" In particular, directly freeing elements of the `_environ[]` global array might cause invalid memory to be addressed."},{"content":"<ph id=\"ph1\">`getenv`</ph> and <ph id=\"ph2\">`_putenv_s`</ph> use the global variable <ph id=\"ph3\">`_environ`</ph> to access the environment table; <ph id=\"ph4\">`_wgetenv`</ph> and <ph id=\"ph5\">`_wputenv_s`</ph> use <ph id=\"ph6\">`_wenviron`</ph>.","pos":[4551,4688],"source":"`getenv` and `_putenv_s` use the global variable `_environ` to access the environment table; `_wgetenv` and `_wputenv_s` use `_wenviron`."},{"content":"<ph id=\"ph1\">`_putenv_s`</ph> and <ph id=\"ph2\">`_wputenv_s`</ph> may change the value of <ph id=\"ph3\">`_environ`</ph> and <ph id=\"ph4\">`_wenviron`</ph>, and thereby invalidate the <ph id=\"ph5\">`envp`</ph> argument to <ph id=\"ph6\">`main`</ph> and the <ph id=\"ph7\">`_wenvp`</ph> argument to <ph id=\"ph8\">`wmain`</ph>.","pos":[4689,4860],"source":"`_putenv_s` and `_wputenv_s` may change the value of `_environ` and `_wenviron`, and thereby invalidate the `envp` argument to `main` and the `_wenvp` argument to `wmain`."},{"content":"Therefore, it is safer to use <ph id=\"ph1\">`_environ`</ph> or <ph id=\"ph2\">`_wenviron`</ph> to access the environment information.","pos":[4861,4955],"source":" Therefore, it is safer to use `_environ` or `_wenviron` to access the environment information."},{"content":"For more information about the relationship of <ph id=\"ph1\">`_putenv_s`</ph> and <ph id=\"ph2\">`_wputenv_s`</ph> to global variables, see <bpt id=\"p1\">[</bpt>_environ, _wenviron<ept id=\"p1\">](../../c-runtime-library/environ-wenviron.md)</ept>.","pos":[4956,5124],"source":" For more information about the relationship of `_putenv_s` and `_wputenv_s` to global variables, see [_environ, _wenviron](../../c-runtime-library/environ-wenviron.md)."},{"pos":[5132,5395],"content":"[!NOTE]\n The `_putenv_s` and `_getenv_s` families of functions are not thread-safe. `_getenv_s` could return a string pointer while `_putenv_s` is modifying the string, and thereby cause random failures. Make sure that calls to these functions are synchronized.","leadings":["","> "],"nodes":[{"content":" The `_putenv_s` and `_getenv_s` families of functions are not thread-safe. `_getenv_s` could return a string pointer while `_putenv_s` is modifying the string, and thereby cause random failures. Make sure that calls to these functions are synchronized.","pos":[8,261],"nodes":[{"content":"The <ph id=\"ph1\">`_putenv_s`</ph> and <ph id=\"ph2\">`_getenv_s`</ph> families of functions are not thread-safe.","pos":[1,75],"source":" The `_putenv_s` and `_getenv_s` families of functions are not thread-safe."},{"content":"<ph id=\"ph1\">`_getenv_s`</ph> could return a string pointer while <ph id=\"ph2\">`_putenv_s`</ph> is modifying the string, and thereby cause random failures.","pos":[76,195],"source":"`_getenv_s` could return a string pointer while `_putenv_s` is modifying the string, and thereby cause random failures."},{"content":"Make sure that calls to these functions are synchronized.","pos":[196,253]}]}]},{"pos":[5404,5416],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"content":"Routine","pos":[5423,5430]},{"content":"Required header","pos":[5431,5446]},{"content":"<ph id=\"ph1\">\\&lt;</ph>stdlib.h&gt;","pos":[5503,5514],"source":"\\<stdlib.h>"},{"content":"<ph id=\"ph1\">\\&lt;</ph>stdlib.h&gt; or <ph id=\"ph2\">\\&lt;</ph>wchar.h&gt;","pos":[5532,5557],"source":"\\<stdlib.h> or \\<wchar.h>"},{"pos":[5565,5669],"content":"For additional compatibility information, see <bpt id=\"p1\">[</bpt>Compatibility<ept id=\"p1\">](../../c-runtime-library/compatibility.md)</ept>.","source":"For additional compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md)."},{"pos":[5678,5685],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[5689,5821],"content":"For a sample that shows how to use <ph id=\"ph1\">`_putenv_s`</ph>, see <bpt id=\"p1\">[</bpt>getenv_s, _wgetenv_s<ept id=\"p1\">](../../c-runtime-library/reference/getenv-s-wgetenv-s.md)</ept>.","source":"For a sample that shows how to use `_putenv_s`, see [getenv_s, _wgetenv_s](../../c-runtime-library/reference/getenv-s-wgetenv-s.md)."},{"pos":[5830,5855],"content":".NET Framework Equivalent","linkify":".NET Framework Equivalent","nodes":[{"content":".NET Framework Equivalent","pos":[0,25]}]},{"content":"Not applicable.","pos":[5859,5874]},{"content":"To call the standard C function, use <ph id=\"ph1\">`PInvoke`</ph>.","pos":[5875,5922],"source":" To call the standard C function, use `PInvoke`."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Platform Invoke Examples<ept id=\"p1\">](http://msdn.microsoft.com/Library/15926806-f0b7-487e-93a6-4e9367ec689f)</ept>.","pos":[5923,6048],"source":" For more information, see [Platform Invoke Examples](http://msdn.microsoft.com/Library/15926806-f0b7-487e-93a6-4e9367ec689f)."},{"pos":[6057,6065],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Process and Environment Control<ept id=\"p1\">](../../c-runtime-library/process-and-environment-control.md)</ept><ph id=\"ph1\"> </ph>","pos":[6069,6163],"source":"[Process and Environment Control](../../c-runtime-library/process-and-environment-control.md) "},{"content":"<bpt id=\"p1\"> [</bpt>getenv, _wgetenv<ept id=\"p1\">](../../c-runtime-library/reference/getenv-wgetenv.md)</ept><ph id=\"ph1\"> </ph>","pos":[6166,6239],"source":" [getenv, _wgetenv](../../c-runtime-library/reference/getenv-wgetenv.md) "},{"content":"<bpt id=\"p1\"> [</bpt>_searchenv, _wsearchenv<ept id=\"p1\">](../../c-runtime-library/reference/searchenv-wsearchenv.md)</ept>","pos":[6242,6327],"source":" [_searchenv, _wsearchenv](../../c-runtime-library/reference/searchenv-wsearchenv.md)"}],"content":"---\ntitle: \"_putenv_s, _wputenv_s | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\napiname: \n  - \"_wputenv_s\"\n  - \"_putenv_s\"\napilocation: \n  - \"msvcrt.dll\"\n  - \"msvcr80.dll\"\n  - \"msvcr90.dll\"\n  - \"msvcr100.dll\"\n  - \"msvcr100_clr0400.dll\"\n  - \"msvcr110.dll\"\n  - \"msvcr110_clr0400.dll\"\n  - \"msvcr120.dll\"\n  - \"msvcr120_clr0400.dll\"\n  - \"ucrtbase.dll\"\napitype: \"DLLExport\"\nf1_keywords: \n  - \"putenv_s\"\n  - \"wputenv_s\"\n  - \"_wputenv_s\"\n  - \"_putenv_s\"\ndev_langs: \n  - \"C++\"\n  - \"C\"\nhelpviewer_keywords: \n  - \"wputenv_s function\"\n  - \"_putenv_s function\"\n  - \"environment variables, deleting\"\n  - \"putenv_s function\"\n  - \"_wputenv_s function\"\n  - \"environment variables, creating\"\n  - \"environment variables, modifying\"\nms.assetid: fbf51225-a8da-4b9b-9d7c-0b84ef72df18\ncaps.latest.revision: 20\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# _putenv_s, _wputenv_s\nCreates, modifies, or removes environment variables. These are versions of [_putenv, _wputenv](../../c-runtime-library/reference/putenv-wputenv.md) but have security enhancements, as described in [Security Features in the CRT](../../c-runtime-library/security-features-in-the-crt.md).  \n  \n> [!IMPORTANT]\n>  This API cannot be used in applications that execute in the [!INCLUDE[wrt](../../atl/reference/includes/wrt_md.md)]. For more information, see [CRT functions not supported with /ZW](http://msdn.microsoft.com/en-us/library/windows/apps/jj606124.aspx).  \n  \n## Syntax  \n  \n```  \nerrno_t _putenv_s(  \n   const char *name,  \n   const char *value   \n);  \nerrno_t _wputenv_s(  \n   const wchar_t *name,  \n   const wchar_t *value  \n);  \n```  \n  \n#### Parameters  \n `name`  \n The environment variable name.  \n  \n `value`  \n The value to set the environment variable to.  \n  \n## Return Value  \n Returns 0 if successful, or an error code.  \n  \n### Error Conditions  \n  \n|`name`|`value`|Return value|  \n|------------|-------------|------------------|  \n|`NULL`|any|`EINVAL`|  \n|any|`NULL`|`EINVAL`|  \n  \n If one of the error conditions occurs, these functions invoke an invalid parameter handler, as described in [Parameter Validation](../../c-runtime-library/parameter-validation.md). If execution is allowed to continue, these functions return `EINVAL` and set `errno` to `EINVAL`.  \n  \n## Remarks  \n The `_putenv_s` function adds new environment variables or modifies the values of existing environment variables. Environment variables define the environment in which a process executes (for example, the default search path for libraries to be linked with a program). `_wputenv_s` is a wide-character version of `_putenv_s`; the `envstring` argument to `_wputenv_s` is a wide-character string.  \n  \n### Generic-Text Routine Mappings  \n  \n|TCHAR.H routine|_UNICODE & _MBCS not defined|_MBCS defined|_UNICODE defined|  \n|---------------------|------------------------------------|--------------------|-----------------------|  \n|`_tputenv_s`|`_putenv_s`|`_putenv_s`|`_wputenv_s`|  \n  \n `name` is the name of the environment variable to be added or modified and `value` is the variable's value. If `name` is already part of the environment, its value is replaced by `value`; otherwise, the new `name` variable and its `value` are added to the environment. You can remove a variable from the environment by specifying an empty string (that is, \"\") for `value`.  \n  \n `_putenv_s` and `_wputenv_s` affect only the environment that is local to the current process; you cannot use them to modify the command-level environment. These functions operate only on data structures that are accessible to the run-time library and not on the environment \"segment\" that the operating system creates for a process. When the current process terminates, the environment reverts to the level of the calling process, which in most cases is the operating-system level. However, the modified environment can be passed to any new processes that are created by `_spawn`, `_exec`, or `system`, and these new processes get any new items that are added by `_putenv_s` and `_wputenv_s`.  \n  \n Do not change an environment entry directly; instead, use `_putenv_s` or `_wputenv_s` to change it. In particular, directly freeing elements of the `_environ[]` global array might cause invalid memory to be addressed.  \n  \n `getenv` and `_putenv_s` use the global variable `_environ` to access the environment table; `_wgetenv` and `_wputenv_s` use `_wenviron`. `_putenv_s` and `_wputenv_s` may change the value of `_environ` and `_wenviron`, and thereby invalidate the `envp` argument to `main` and the `_wenvp` argument to `wmain`. Therefore, it is safer to use `_environ` or `_wenviron` to access the environment information. For more information about the relationship of `_putenv_s` and `_wputenv_s` to global variables, see [_environ, _wenviron](../../c-runtime-library/environ-wenviron.md).  \n  \n> [!NOTE]\n>  The `_putenv_s` and `_getenv_s` families of functions are not thread-safe. `_getenv_s` could return a string pointer while `_putenv_s` is modifying the string, and thereby cause random failures. Make sure that calls to these functions are synchronized.  \n  \n## Requirements  \n  \n|Routine|Required header|  \n|-------------|---------------------|  \n|`_putenv_s`|\\<stdlib.h>|  \n|`_wputenv_s`|\\<stdlib.h> or \\<wchar.h>|  \n  \n For additional compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md).  \n  \n## Example  \n For a sample that shows how to use `_putenv_s`, see [getenv_s, _wgetenv_s](../../c-runtime-library/reference/getenv-s-wgetenv-s.md).  \n  \n## .NET Framework Equivalent  \n Not applicable. To call the standard C function, use `PInvoke`. For more information, see [Platform Invoke Examples](http://msdn.microsoft.com/Library/15926806-f0b7-487e-93a6-4e9367ec689f).  \n  \n## See Also  \n [Process and Environment Control](../../c-runtime-library/process-and-environment-control.md)   \n [getenv, _wgetenv](../../c-runtime-library/reference/getenv-wgetenv.md)   \n [_searchenv, _wsearchenv](../../c-runtime-library/reference/searchenv-wsearchenv.md)"}