{"nodes":[{"pos":[12,47],"content":"_query_new_handler | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"_query_new_handler | Microsoft Docs","pos":[0,35]}]},{"content":"_query_new_handler","pos":[1049,1067]},{"content":"Returns the address of the current new handler routine.","pos":[1068,1123]},{"content":"Syntax","pos":[1132,1138]},{"content":"Return Value","pos":[1205,1217]},{"pos":[1221,1305],"content":"Returns the address of the current new handler routine as set by <ph id=\"ph1\">`_set_new_handler`</ph>.","source":"Returns the address of the current new handler routine as set by `_set_new_handler`."},{"content":"Remarks","pos":[1314,1321]},{"content":"The C++ <ph id=\"ph1\">`_query_new_handler`</ph> function returns the address of the current exception-handling function set by the C++ <bpt id=\"p1\">[</bpt>_set_new_handler<ept id=\"p1\">](../../c-runtime-library/reference/set-new-handler.md)</ept> function.","pos":[1325,1523],"source":"The C++ `_query_new_handler` function returns the address of the current exception-handling function set by the C++ [_set_new_handler](../../c-runtime-library/reference/set-new-handler.md) function."},{"content":"is used to specify an exception-handling function that is to gain control if the <bpt id=\"p1\">**</bpt>new<ept id=\"p1\">**</ept> operator fails to allocate memory.","pos":[1543,1666],"source":" is used to specify an exception-handling function that is to gain control if the **new** operator fails to allocate memory."},{"content":"For more information, see the discussion of the <bpt id=\"p1\">[</bpt>new and delete operators<ept id=\"p1\">](../../cpp/new-and-delete-operators.md)</ept> in the C++ Language Reference.","pos":[1667,1811],"source":" For more information, see the discussion of the [new and delete operators](../../cpp/new-and-delete-operators.md) in the C++ Language Reference."},{"content":"Requirements","pos":[1820,1832]},{"content":"Routine","pos":[1839,1846]},{"content":"Required header","pos":[1847,1862]},{"content":"new.h&gt;","pos":[1930,1936],"source":"new.h>"},{"pos":[1944,2062],"content":"For more compatibility information, see <bpt id=\"p1\">[</bpt>Compatibility<ept id=\"p1\">](../../c-runtime-library/compatibility.md)</ept> in the Introduction.","source":"For more compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md) in the Introduction."},{"content":"Libraries","pos":[2071,2080]},{"pos":[2084,2176],"content":"All versions of the <bpt id=\"p1\">[</bpt>C run-time libraries<ept id=\"p1\">](../../c-runtime-library/crt-library-features.md)</ept>.","source":"All versions of the [C run-time libraries](../../c-runtime-library/crt-library-features.md)."},{"content":".NET Framework Equivalent","pos":[2185,2210]},{"content":"Not applicable.","pos":[2214,2229]},{"content":"To call the standard C function, use <ph id=\"ph1\">`PInvoke`</ph>.","pos":[2230,2277],"source":" To call the standard C function, use `PInvoke`."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Platform Invoke Examples<ept id=\"p1\">](http://msdn.microsoft.com/Library/15926806-f0b7-487e-93a6-4e9367ec689f)</ept>.","pos":[2278,2403],"source":" For more information, see [Platform Invoke Examples](http://msdn.microsoft.com/Library/15926806-f0b7-487e-93a6-4e9367ec689f)."},{"content":"See Also","pos":[2412,2420]},{"content":"Memory Allocation","pos":[2425,2442]},{"content":"free","pos":[2495,2499]}],"content":"---\ntitle: \"_query_new_handler | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\napiname: \n  - \"_query_new_handler\"\napilocation: \n  - \"msvcrt.dll\"\n  - \"msvcr80.dll\"\n  - \"msvcr90.dll\"\n  - \"msvcr100.dll\"\n  - \"msvcr100_clr0400.dll\"\n  - \"msvcr110.dll\"\n  - \"msvcr110_clr0400.dll\"\n  - \"msvcr120.dll\"\n  - \"msvcr120_clr0400.dll\"\n  - \"ucrtbase.dll\"\n  - \"api-ms-win-crt-heap-l1-1-0.dll\"\napitype: \"DLLExport\"\nf1_keywords: \n  - \"_query_new_handler\"\n  - \"query_new_handler\"\ndev_langs: \n  - \"C++\"\n  - \"C\"\nhelpviewer_keywords: \n  - \"query_new_handler function\"\n  - \"handler routines\"\n  - \"error handling\"\n  - \"_query_new_handler function\"\nms.assetid: 9a84b5c3-fe33-4c01-83a0-be87dc3ec518\ncaps.latest.revision: 10\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# _query_new_handler\nReturns the address of the current new handler routine.  \n  \n## Syntax  \n  \n```  \n_PNH _query_new_handler(  \n   void   \n);  \n```  \n  \n## Return Value  \n Returns the address of the current new handler routine as set by `_set_new_handler`.  \n  \n## Remarks  \n The C++ `_query_new_handler` function returns the address of the current exception-handling function set by the C++ [_set_new_handler](../../c-runtime-library/reference/set-new-handler.md) function. `_set_new_handler` is used to specify an exception-handling function that is to gain control if the **new** operator fails to allocate memory. For more information, see the discussion of the [new and delete operators](../../cpp/new-and-delete-operators.md) in the C++ Language Reference.  \n  \n## Requirements  \n  \n|Routine|Required header|  \n|-------------|---------------------|  \n|`_query_new_handler`|\\<new.h>|  \n  \n For more compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md) in the Introduction.  \n  \n## Libraries  \n All versions of the [C run-time libraries](../../c-runtime-library/crt-library-features.md).  \n  \n## .NET Framework Equivalent  \n Not applicable. To call the standard C function, use `PInvoke`. For more information, see [Platform Invoke Examples](http://msdn.microsoft.com/Library/15926806-f0b7-487e-93a6-4e9367ec689f).  \n  \n## See Also  \n [Memory Allocation](../../c-runtime-library/memory-allocation.md)   \n [free](../../c-runtime-library/reference/free.md)"}