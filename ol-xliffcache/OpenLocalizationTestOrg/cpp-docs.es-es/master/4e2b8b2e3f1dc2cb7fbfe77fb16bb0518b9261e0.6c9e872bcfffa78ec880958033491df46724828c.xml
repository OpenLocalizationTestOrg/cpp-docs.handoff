{"nodes":[{"pos":[12,45],"content":"_set_SSE2_enable | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"_set_SSE2_enable | Microsoft Docs","pos":[0,33]}]},{"pos":[1066,1082],"content":"_set_SSE2_enable","linkify":"_set_SSE2_enable","nodes":[{"content":"_set_SSE2_enable","pos":[0,16]}]},{"content":"Enables or disables the use of <bpt id=\"p1\">[</bpt>Streaming SIMD Extensions 2<ept id=\"p1\">](http://msdn.microsoft.com/en-us/f98440eb-73a9-4f96-b203-ac41bb6701ea)</ept> (SSE2) instructions in CRT math routines.","pos":[1083,1255],"source":"Enables or disables the use of [Streaming SIMD Extensions 2](http://msdn.microsoft.com/en-us/f98440eb-73a9-4f96-b203-ac41bb6701ea) (SSE2) instructions in CRT math routines."},{"content":"(This function is not available on x64 architectures because SSE2 is enabled by default.)","pos":[1256,1345]},{"pos":[1354,1360],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[1429,1439],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"1 to enable the SSE2 implementation; 0 to disable the SSE2 implementation.","pos":[1453,1527]},{"content":"By default, SSE2 implementation is enabled on processors that support it.","pos":[1528,1601]},{"pos":[1610,1622],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Nonzero if SSE2 implementation is enabled; zero if SSE2 implementation is disabled.","pos":[1626,1709]},{"pos":[1718,1725],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[1729,1827],"content":"The following functions have SSE2 implementations that can be enabled by using <ph id=\"ph1\">`_set_SSE2_enable`</ph>:","source":"The following functions have SSE2 implementations that can be enabled by using `_set_SSE2_enable`:"},{"pos":[1837,1918],"content":"<bpt id=\"p1\">[</bpt>atan<ept id=\"p1\">](../../c-runtime-library/reference/atan-atanf-atanl-atan2-atan2f-atan2l.md)</ept>","source":"[atan](../../c-runtime-library/reference/atan-atanf-atanl-atan2-atan2f-atan2l.md)"},{"pos":[1928,1989],"content":"<bpt id=\"p1\">[</bpt>ceil<ept id=\"p1\">](../../c-runtime-library/reference/ceil-ceilf-ceill.md)</ept>","source":"[ceil](../../c-runtime-library/reference/ceil-ceilf-ceill.md)"},{"pos":[1999,2051],"content":"<bpt id=\"p1\">[</bpt>exp<ept id=\"p1\">](../../c-runtime-library/reference/exp-expf.md)</ept>","source":"[exp](../../c-runtime-library/reference/exp-expf.md)"},{"pos":[2061,2126],"content":"<bpt id=\"p1\">[</bpt>floor<ept id=\"p1\">](../../c-runtime-library/reference/floor-floorf-floorl.md)</ept>","source":"[floor](../../c-runtime-library/reference/floor-floorf-floorl.md)"},{"pos":[2136,2201],"content":"<bpt id=\"p1\">[</bpt>log<ept id=\"p1\">](../../c-runtime-library/reference/log-logf-log10-log10f.md)</ept>","source":"[log](../../c-runtime-library/reference/log-logf-log10-log10f.md)"},{"pos":[2211,2278],"content":"<bpt id=\"p1\">[</bpt>log10<ept id=\"p1\">](../../c-runtime-library/reference/log-logf-log10-log10f.md)</ept>","source":"[log10](../../c-runtime-library/reference/log-logf-log10-log10f.md)"},{"pos":[2288,2349],"content":"<bpt id=\"p1\">[</bpt>modf<ept id=\"p1\">](../../c-runtime-library/reference/modf-modff-modfl.md)</ept>","source":"[modf](../../c-runtime-library/reference/modf-modff-modfl.md)"},{"pos":[2359,2416],"content":"<bpt id=\"p1\">[</bpt>pow<ept id=\"p1\">](../../c-runtime-library/reference/pow-powf-powl.md)</ept>","source":"[pow](../../c-runtime-library/reference/pow-powf-powl.md)"},{"content":"The SSE2 implementations of these functions might give slightly different answers than the default implementations, because SSE2 intermediate values are 64-bit floating-point quantities but the default implementation intermediate values are 80-bit floating-point quantities.","pos":[2423,2697]},{"pos":[2705,3273],"content":"[!NOTE]\n If you use the [/Oi (Generate Intrinsic Functions)](../../build/reference/oi-generate-intrinsic-functions.md) compiler option to compile the project, it may appear that `_set_SSE2_enable` has no effect. The `/Oi` compiler option gives the compiler the authority to use intrinsics to replace CRT calls; this behavior overrides the effect of `_set_SSE2_enable`. If you want to guarantee that `/Oi` does not override `_set_SSE2_enable`, use `/Oi-` to compile your project. This might also be good practice when you use other compiler switches that imply `/Oi`.","leadings":["","> "],"nodes":[{"content":" If you use the [/Oi (Generate Intrinsic Functions)](../../build/reference/oi-generate-intrinsic-functions.md) compiler option to compile the project, it may appear that `_set_SSE2_enable` has no effect. The `/Oi` compiler option gives the compiler the authority to use intrinsics to replace CRT calls; this behavior overrides the effect of `_set_SSE2_enable`. If you want to guarantee that `/Oi` does not override `_set_SSE2_enable`, use `/Oi-` to compile your project. This might also be good practice when you use other compiler switches that imply `/Oi`.","pos":[8,566],"nodes":[{"content":"If you use the <bpt id=\"p1\">[</bpt>/Oi (Generate Intrinsic Functions)<ept id=\"p1\">](../../build/reference/oi-generate-intrinsic-functions.md)</ept> compiler option to compile the project, it may appear that <ph id=\"ph1\">`_set_SSE2_enable`</ph> has no effect.","pos":[1,203],"source":" If you use the [/Oi (Generate Intrinsic Functions)](../../build/reference/oi-generate-intrinsic-functions.md) compiler option to compile the project, it may appear that `_set_SSE2_enable` has no effect."},{"content":"The <ph id=\"ph1\">`/Oi`</ph> compiler option gives the compiler the authority to use intrinsics to replace CRT calls; this behavior overrides the effect of <ph id=\"ph2\">`_set_SSE2_enable`</ph>.","pos":[204,360],"source":" The `/Oi` compiler option gives the compiler the authority to use intrinsics to replace CRT calls; this behavior overrides the effect of `_set_SSE2_enable`."},{"content":"If you want to guarantee that <ph id=\"ph1\">`/Oi`</ph> does not override <ph id=\"ph2\">`_set_SSE2_enable`</ph>, use <ph id=\"ph3\">`/Oi-`</ph> to compile your project.","pos":[361,470],"source":" If you want to guarantee that `/Oi` does not override `_set_SSE2_enable`, use `/Oi-` to compile your project."},{"content":"This might also be good practice when you use other compiler switches that imply <ph id=\"ph1\">`/Oi`</ph>.","pos":[471,558],"source":" This might also be good practice when you use other compiler switches that imply `/Oi`."}]}]},{"content":"The SSE2 implementation is only used if all exceptions are masked.","pos":[3280,3346]},{"content":"Use <bpt id=\"p1\">[</bpt>_control87, _controlfp<ept id=\"p1\">](../../c-runtime-library/reference/control87-controlfp-control87-2.md)</ept> to mask exceptions.","pos":[3347,3465],"source":" Use [_control87, _controlfp](../../c-runtime-library/reference/control87-controlfp-control87-2.md) to mask exceptions."},{"pos":[3474,3486],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"content":"Routine","pos":[3493,3500]},{"content":"Required header","pos":[3501,3516]},{"content":"<ph id=\"ph1\">\\&lt;</ph>math.h&gt;","pos":[3580,3589],"source":"\\<math.h>"},{"pos":[3597,3715],"content":"For more compatibility information, see <bpt id=\"p1\">[</bpt>Compatibility<ept id=\"p1\">](../../c-runtime-library/compatibility.md)</ept> in the Introduction.","source":"For more compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md) in the Introduction."},{"pos":[3724,3731],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[4031,4041],"content":"<bpt id=\"p1\">**</bpt>Output<ept id=\"p1\">**</ept>","source":"**Output**"},{"pos":[4072,4097],"content":".NET Framework Equivalent","linkify":".NET Framework Equivalent","nodes":[{"content":".NET Framework Equivalent","pos":[0,25]}]},{"content":"Not applicable.","pos":[4101,4116]},{"content":"To call the standard C function, use <ph id=\"ph1\">`PInvoke`</ph>.","pos":[4117,4164],"source":" To call the standard C function, use `PInvoke`."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Platform Invoke Examples<ept id=\"p1\">](http://msdn.microsoft.com/Library/15926806-f0b7-487e-93a6-4e9367ec689f)</ept>.","pos":[4165,4290],"source":" For more information, see [Platform Invoke Examples](http://msdn.microsoft.com/Library/15926806-f0b7-487e-93a6-4e9367ec689f)."},{"pos":[4299,4307],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"pos":[4311,4382],"content":"<bpt id=\"p1\">[</bpt>CRT Library Features<ept id=\"p1\">](../../c-runtime-library/crt-library-features.md)</ept>","source":"[CRT Library Features](../../c-runtime-library/crt-library-features.md)"}],"content":"---\ntitle: \"_set_SSE2_enable | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\napiname: \n  - \"_set_SSE2_enable\"\napilocation: \n  - \"msvcrt.dll\"\n  - \"msvcr80.dll\"\n  - \"msvcr90.dll\"\n  - \"msvcr100.dll\"\n  - \"msvcr100_clr0400.dll\"\n  - \"msvcr110.dll\"\n  - \"msvcr110_clr0400.dll\"\n  - \"msvcr120.dll\"\n  - \"msvcr120_clr0400.dll\"\n  - \"ucrtbase.dll\"\n  - \"api-ms-win-crt-math-l1-1-0.dll\"\napitype: \"DLLExport\"\nf1_keywords: \n  - \"_set_SSE2_enable\"\n  - \"set_SSE2_enable\"\ndev_langs: \n  - \"C++\"\n  - \"C\"\nhelpviewer_keywords: \n  - \"_set_SSE2_enable function\"\n  - \"Streaming SIMD Extensions 2 instructions\"\n  - \"set_SSE2_enable function\"\nms.assetid: 55db895d-fc1e-475a-9110-b781a9bb51c5\ncaps.latest.revision: 19\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"ru-ru\"\n  - \"zh-cn\"\n  - \"zh-tw\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"tr-tr\"\n---\n# _set_SSE2_enable\nEnables or disables the use of [Streaming SIMD Extensions 2](http://msdn.microsoft.com/en-us/f98440eb-73a9-4f96-b203-ac41bb6701ea) (SSE2) instructions in CRT math routines. (This function is not available on x64 architectures because SSE2 is enabled by default.)  \n  \n## Syntax  \n  \n```  \nint _set_SSE2_enable(  \n   int flag  \n);  \n```  \n  \n#### Parameters  \n `flag`  \n 1 to enable the SSE2 implementation; 0 to disable the SSE2 implementation. By default, SSE2 implementation is enabled on processors that support it.  \n  \n## Return Value  \n Nonzero if SSE2 implementation is enabled; zero if SSE2 implementation is disabled.  \n  \n## Remarks  \n The following functions have SSE2 implementations that can be enabled by using `_set_SSE2_enable`:  \n  \n-   [atan](../../c-runtime-library/reference/atan-atanf-atanl-atan2-atan2f-atan2l.md)  \n  \n-   [ceil](../../c-runtime-library/reference/ceil-ceilf-ceill.md)  \n  \n-   [exp](../../c-runtime-library/reference/exp-expf.md)  \n  \n-   [floor](../../c-runtime-library/reference/floor-floorf-floorl.md)  \n  \n-   [log](../../c-runtime-library/reference/log-logf-log10-log10f.md)  \n  \n-   [log10](../../c-runtime-library/reference/log-logf-log10-log10f.md)  \n  \n-   [modf](../../c-runtime-library/reference/modf-modff-modfl.md)  \n  \n-   [pow](../../c-runtime-library/reference/pow-powf-powl.md)  \n  \n The SSE2 implementations of these functions might give slightly different answers than the default implementations, because SSE2 intermediate values are 64-bit floating-point quantities but the default implementation intermediate values are 80-bit floating-point quantities.  \n  \n> [!NOTE]\n>  If you use the [/Oi (Generate Intrinsic Functions)](../../build/reference/oi-generate-intrinsic-functions.md) compiler option to compile the project, it may appear that `_set_SSE2_enable` has no effect. The `/Oi` compiler option gives the compiler the authority to use intrinsics to replace CRT calls; this behavior overrides the effect of `_set_SSE2_enable`. If you want to guarantee that `/Oi` does not override `_set_SSE2_enable`, use `/Oi-` to compile your project. This might also be good practice when you use other compiler switches that imply `/Oi`.  \n  \n The SSE2 implementation is only used if all exceptions are masked. Use [_control87, _controlfp](../../c-runtime-library/reference/control87-controlfp-control87-2.md) to mask exceptions.  \n  \n## Requirements  \n  \n|Routine|Required header|  \n|-------------|---------------------|  \n|`_set_SSE2_enable`|\\<math.h>|  \n  \n For more compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md) in the Introduction.  \n  \n## Example  \n  \n```  \n// crt_set_SSE2_enable.c  \n// processor: x86  \n#include <math.h>  \n#include <stdio.h>  \n  \nint main()  \n{  \n   int i = _set_SSE2_enable(1);  \n  \n   if (i)  \n      printf(\"SSE2 enabled.\\n\");  \n   else  \n      printf(\"SSE2 not enabled; processor does not support SSE2.\\n\");  \n}  \n```  \n  \n **Output**  \n  \n `SSE2 enabled.`  \n  \n## .NET Framework Equivalent  \n Not applicable. To call the standard C function, use `PInvoke`. For more information, see [Platform Invoke Examples](http://msdn.microsoft.com/Library/15926806-f0b7-487e-93a6-4e9367ec689f).  \n  \n## See Also  \n [CRT Library Features](../../c-runtime-library/crt-library-features.md)"}