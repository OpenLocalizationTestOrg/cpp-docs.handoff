{"nodes":[{"pos":[12,46],"content":"CMFCTabCtrl Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"CMFCTabCtrl Class | Microsoft Docs","pos":[0,34]}]},{"content":"CMFCTabCtrl Class","pos":[873,890]},{"content":"The <ph id=\"ph1\">`CMFCTabCtrl`</ph> class provides functionality for a tab control.","pos":[891,956],"source":"The `CMFCTabCtrl` class provides functionality for a tab control."},{"content":"The tab control displays a dockable window with flat or three-dimensional tabs at its top or bottom.","pos":[957,1057]},{"content":"The tabs can display text and an image and can change color when active.","pos":[1058,1130]},{"content":"Syntax","pos":[1139,1145]},{"content":"Members","pos":[1214,1221]},{"content":"Public Constructors","pos":[1231,1250]},{"content":"Name","pos":[1257,1261]},{"content":"Description","pos":[1262,1273]},{"content":"Default constructor.","pos":[1338,1358]},{"content":"Destructor.","pos":[1391,1402]},{"content":"Public Methods","pos":[1413,1427]},{"content":"Name","pos":[1434,1438]},{"content":"Description","pos":[1439,1450]},{"content":"CMFCTabCtrl::ActivateMDITab","pos":[1489,1516]},{"content":"Displays the specified tab of the current tab control and sets the focus on that tab.","pos":[1548,1633]},{"content":"CMFCTabCtrl::AllowDestroyEmptyTabbedPane","pos":[1639,1679]},{"content":"CMFCTabCtrl::AutoSizeWindow","pos":[1730,1757]},{"content":"Specifies whether the framework is to resize the client area of all tab control windows when a user interface element of the tab control changes.","pos":[1789,1934]},{"content":"CMFCTabCtrl::CalcRectEdit","pos":[1940,1965]},{"content":"Deflates the size of the specified tab area.","pos":[1995,2039]},{"content":"(Overrides <ph id=\"ph1\">`CMFCBaseTabCtrl::CalcRectEdit`</ph>.)","pos":[2040,2084],"source":" (Overrides `CMFCBaseTabCtrl::CalcRectEdit`.)"},{"content":"CMFCTabCtrl::Create","pos":[2090,2109]},{"pos":[2133,2201],"content":"Creates the tab control and attaches it to the <ph id=\"ph1\">`CMFCTabCtrl`</ph> object.","source":"Creates the tab control and attaches it to the `CMFCTabCtrl` object."},{"content":"Used by the framework to create a dynamic instance of this class type.","pos":[2234,2304]},{"content":"CMFCTabCtrl::EnableActiveTabCloseButton","pos":[2310,2349]},{"pos":[2393,2450],"content":"Shows or hides a Close button ( <bpt id=\"p1\">**</bpt>X<ept id=\"p1\">**</ept>) on the active tab.","source":"Shows or hides a Close button ( **X**) on the active tab."},{"content":"CMFCTabCtrl::EnableInPlaceEdit","pos":[2456,2486]},{"content":"Enables or disables editable tab labels.","pos":[2521,2561]},{"content":"(Overrides <bpt id=\"p1\">[</bpt>CMFCBaseTabCtrl::EnableInPlaceEdit<ept id=\"p1\">](../../mfc/reference/cmfcbasetabctrl-class.md#cmfcbasetabctrl__enableinplaceedit)</ept>.)","pos":[2562,2692],"source":" (Overrides [CMFCBaseTabCtrl::EnableInPlaceEdit](../../mfc/reference/cmfcbasetabctrl-class.md#cmfcbasetabctrl__enableinplaceedit).)"},{"content":"CMFCTabCtrl::EnableTabDocumentsMenu","pos":[2698,2733]},{"content":"Replaces two buttons that scroll the window tabs with a button that opens a menu of tabbed windows.","pos":[2773,2872]},{"content":"CMFCTabCtrl::EnsureVisible","pos":[2878,2904]},{"content":"Ensures that a tab is visible.","pos":[2935,2965]},{"content":"CMFCTabCtrl::GetDocumentIcon","pos":[2971,2999]},{"content":"Retrieves the symbol that is associated with a tab in a popup menu of tabbed windows.","pos":[3032,3117]},{"content":"CMFCTabCtrl::GetFirstVisibleTabNum","pos":[3123,3157]},{"content":"Retrieves the index of the first tab that is visible in the current tab control.","pos":[3196,3276]},{"content":"CMFCTabCtrl::GetResizeMode","pos":[3282,3308]},{"content":"Retrieves a value that specifies how the current tab control can be resized.","pos":[3339,3415]},{"content":"CMFCTabCtrl::GetScrollBar","pos":[3421,3446]},{"content":"Retrieves a pointer to the scroll bar object that is associated with the tab control.","pos":[3476,3561]},{"content":"CMFCTabCtrl::GetTabArea","pos":[3567,3590]},{"content":"Retrieves the bounding rectangle of the tab label area at the top or bottom of the tab control.","pos":[3618,3713]},{"content":"(Overrides <bpt id=\"p1\">[</bpt>CMFCBaseTabCtrl::GetTabArea<ept id=\"p1\">](../../mfc/reference/cmfcbasetabctrl-class.md#cmfcbasetabctrl__gettabarea)</ept>.)","pos":[3714,3830],"source":" (Overrides [CMFCBaseTabCtrl::GetTabArea](../../mfc/reference/cmfcbasetabctrl-class.md#cmfcbasetabctrl__gettabarea).)"},{"content":"Retrieves the tab that contains a specified point.","pos":[3866,3916]},{"content":"(Overrides <bpt id=\"p1\">[</bpt>CMFCBaseTabCtrl::GetTabFromPoint<ept id=\"p1\">](../../mfc/reference/cmfcbasetabctrl-class.md#cmfcbasetabctrl__gettabfrompoint)</ept>.)","pos":[3917,4043],"source":" (Overrides [CMFCBaseTabCtrl::GetTabFromPoint](../../mfc/reference/cmfcbasetabctrl-class.md#cmfcbasetabctrl__gettabfrompoint).)"},{"content":"CMFCTabCtrl::GetTabMaxWidth","pos":[4049,4076]},{"content":"Retrieves the maximum width of a tab.","pos":[4108,4145]},{"content":"CMFCTabCtrl::GetTabsHeight","pos":[4151,4177]},{"content":"Retrieves the height of the tab area of the current tab control.","pos":[4208,4272]},{"content":"CMFCTabCtrl::GetTabsRect","pos":[4278,4302]},{"content":"Retrieves a rectangle that bounds the tab area of the current tab control.","pos":[4331,4405]},{"content":"(Overrides <bpt id=\"p1\">[</bpt>CMFCBaseTabCtrl::GetTabsRect<ept id=\"p1\">](../../mfc/reference/cmfcbasetabctrl-class.md#cmfcbasetabctrl__gettabsrect)</ept>.)","pos":[4406,4524],"source":" (Overrides [CMFCBaseTabCtrl::GetTabsRect](../../mfc/reference/cmfcbasetabctrl-class.md#cmfcbasetabctrl__gettabsrect).)"},{"pos":[4557,4717],"content":"Used by the framework to obtain a pointer to the <bpt id=\"p1\">[</bpt>CRuntimeClass<ept id=\"p1\">](../../mfc/reference/cruntimeclass-structure.md)</ept> object that is associated with this class type.","source":"Used by the framework to obtain a pointer to the [CRuntimeClass](../../mfc/reference/cruntimeclass-structure.md) object that is associated with this class type."},{"content":"CMFCTabCtrl::GetWndArea","pos":[4723,4746]},{"content":"Retrieves the boundary of the client area of the current tab control.","pos":[4774,4843]},{"content":"CMFCTabCtrl::HideActiveWindowHorzScrollBar","pos":[4849,4891]},{"content":"Hides the horizontal scroll bar, if any, of the active window.","pos":[4938,5000]},{"content":"CMFCTabCtrl::HideInactiveWindow","pos":[5006,5037]},{"content":"Specifies whether the framework is to display inactive tab control windows.","pos":[5073,5148]},{"content":"CMFCTabCtrl::HideNoTabs","pos":[5154,5177]},{"content":"Enables or disables drawing the tab area if there are no visible tabs.","pos":[5205,5275]},{"content":"CMFCTabCtrl::HideSingleTab","pos":[5281,5307]},{"content":"Enables or disables drawing a tab when there is a single tabbed window.","pos":[5338,5409]},{"content":"(Overrides <bpt id=\"p1\">[</bpt>CMFCBaseTabCtrl::HideSingleTab<ept id=\"p1\">](../../mfc/reference/cmfcbasetabctrl-class.md#cmfcbasetabctrl__hidesingletab)</ept>.)","pos":[5410,5532],"source":" (Overrides [CMFCBaseTabCtrl::HideSingleTab](../../mfc/reference/cmfcbasetabctrl-class.md#cmfcbasetabctrl__hidesingletab).)"},{"content":"CMFCTabCtrl::IsActiveInMDITabGroup","pos":[5538,5572]},{"content":"Indicates whether the current tab of a tab control is the active tab in an multiple document interface tab group.","pos":[5611,5724]},{"content":"CMFCTabCtrl::IsActiveTabBoldFont","pos":[5730,5762]},{"content":"Indicates whether the text of the active tab is displayed using a bold font.","pos":[5799,5875]},{"content":"CMFCTabCtrl::IsActiveTabCloseButton","pos":[5881,5916]},{"pos":[5956,6072],"content":"Indicates whether the Close button ( <bpt id=\"p1\">**</bpt>X<ept id=\"p1\">**</ept>) is displayed on an active tab or the upper-right corner of the tab area.","source":"Indicates whether the Close button ( **X**) is displayed on an active tab or the upper-right corner of the tab area."},{"content":"CMFCTabCtrl::IsDrawFrame","pos":[6078,6102]},{"content":"Indicates whether the tabbed window draws a frame rectangle around embedded panes.","pos":[6131,6213]},{"content":"CMFCTabCtrl::IsFlatFrame","pos":[6219,6243]},{"content":"Indicates whether the frame around the tab area is flat or 3D.","pos":[6272,6334]},{"content":"CMFCTabCtrl::IsFlatTab","pos":[6340,6362]},{"content":"Indicates whether the appearance of the tabs in the current tab control is flat or not.","pos":[6389,6476]},{"content":"CMFCTabCtrl::IsLeftRightRounded","pos":[6482,6513]},{"content":"Indicates whether the appearance of the left and right side of a tab in the current tab control is rounded.","pos":[6549,6656]},{"content":"CMFCTabCtrl::IsMDITabGroup","pos":[6662,6688]},{"content":"Indicates whether the current tab control is contained in the client area of a multiple-document interface window.","pos":[6719,6833]},{"content":"CMFCTabCtrl::IsOneNoteStyle","pos":[6839,6866]},{"content":"Indicates whether the current tab control is displayed in the style of Microsoft OneNote.","pos":[6898,6987]},{"content":"Determines if a point is inside the tab area.","pos":[7021,7066]},{"content":"(Overrides <bpt id=\"p1\">[</bpt>CMFCBaseTabCtrl::IsPtInTabArea<ept id=\"p1\">](../../mfc/reference/cmfcbasetabctrl-class.md#cmfcbasetabctrl__isptintabarea)</ept>.)","pos":[7067,7189],"source":" (Overrides [CMFCBaseTabCtrl::IsPtInTabArea](../../mfc/reference/cmfcbasetabctrl-class.md#cmfcbasetabctrl__isptintabarea).)"},{"content":"CMFCTabCtrl::IsSharedScroll","pos":[7195,7222]},{"content":"Indicates whether the current tab control has a scroll bar that can scroll its tabs as a group.","pos":[7254,7349]},{"content":"CMFCTabCtrl::IsTabDocumentsMenu","pos":[7355,7386]},{"content":"Indicates whether the tab control displays scroll buttons or a button that displays a menu of tabbed windows.","pos":[7422,7531]},{"content":"CMFCTabCtrl::IsVS2005Style","pos":[7537,7563]},{"content":"Indicates whether tabs are displayed in the style of Visual Studio .NET 2005.","pos":[7594,7671]},{"content":"CMFCTabCtrl::ModifyTabStyle","pos":[7677,7704]},{"content":"Specifies the appearance of tabs in the current tab control.","pos":[7736,7796]},{"content":"Moves a tab to another tab position.","pos":[7824,7860]},{"content":"(Overrides <bpt id=\"p1\">[</bpt>CMFCBaseTabCtrl::MoveTab<ept id=\"p1\">](../../mfc/reference/cmfcbasetabctrl-class.md#cmfcbasetabctrl__movetab)</ept>.)","pos":[7861,7971],"source":" (Overrides [CMFCBaseTabCtrl::MoveTab](../../mfc/reference/cmfcbasetabctrl-class.md#cmfcbasetabctrl__movetab).)"},{"content":"CMFCTabCtrl::OnDragEnter","pos":[7977,8001]},{"content":"Called by the framework when the cursor is first dragged into the tab control window.","pos":[8030,8115]},{"content":"CMFCTabCtrl::OnDragOver","pos":[8121,8144]},{"content":"Called by the framework during a drag operation when the mouse is moved over the drop target window.","pos":[8172,8272]},{"content":"(Overrides <bpt id=\"p1\">[</bpt>CMFCBaseTabCtrl::OnDragOver<ept id=\"p1\">](../../mfc/reference/cmfcbasetabctrl-class.md#cmfcbasetabctrl__ondragover)</ept>.)","pos":[8273,8389],"source":" (Overrides [CMFCBaseTabCtrl::OnDragOver](../../mfc/reference/cmfcbasetabctrl-class.md#cmfcbasetabctrl__ondragover).)"},{"content":"CMFCTabCtrl::OnShowTabDocumentsMenu","pos":[8395,8430]},{"content":"Displays a popup menu of tabbed windows, waits until the user selects a tab, and makes the selected tab the active tab.","pos":[8470,8589]},{"content":"Translates window messages before they are dispatched to the <bpt id=\"p1\">[</bpt>TranslateMessage<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms644955)</ept> and <bpt id=\"p2\">[</bpt>DispatchMessage<ept id=\"p2\">](http://msdn.microsoft.com/library/windows/desktop/ms644934)</ept> Windows functions.","pos":[8629,8869],"source":"Translates window messages before they are dispatched to the [TranslateMessage](http://msdn.microsoft.com/library/windows/desktop/ms644955) and [DispatchMessage](http://msdn.microsoft.com/library/windows/desktop/ms644934) Windows functions."},{"content":"(Overrides <bpt id=\"p1\">[</bpt>CMFCBaseTabCtrl::PreTranslateMessage<ept id=\"p1\">](../../mfc/reference/cmfcbasetabctrl-class.md#cmfcbasetabctrl__pretranslatemessage)</ept>.)","pos":[8870,9004],"source":" (Overrides [CMFCBaseTabCtrl::PreTranslateMessage](../../mfc/reference/cmfcbasetabctrl-class.md#cmfcbasetabctrl__pretranslatemessage).)"},{"content":"Recalculates the internal layout of the tab control.","pos":[9037,9089]},{"content":"(Overrides <bpt id=\"p1\">[</bpt>CMFCBaseTabCtrl::RecalcLayout<ept id=\"p1\">](../../mfc/reference/cmfcbasetabctrl-class.md#cmfcbasetabctrl__recalclayout)</ept>.)","pos":[9090,9210],"source":" (Overrides [CMFCBaseTabCtrl::RecalcLayout](../../mfc/reference/cmfcbasetabctrl-class.md#cmfcbasetabctrl__recalclayout).)"},{"content":"CMFCTabCtrl::SetActiveInMDITabGroup","pos":[9216,9251]},{"content":"Sets the current tab of a tab control as the active tab in an multiple document interface tab group.","pos":[9291,9391]},{"content":"CMFCTabCtrl::SetActiveTab","pos":[9397,9422]},{"content":"Activates a tab.","pos":[9452,9468]},{"content":"(Overrides <bpt id=\"p1\">[</bpt>CMFCBaseTabCtrl::SetActiveTab<ept id=\"p1\">](../../mfc/reference/cmfcbasetabctrl-class.md#cmfcbasetabctrl__setactivetab)</ept>.)","pos":[9469,9589],"source":" (Overrides [CMFCBaseTabCtrl::SetActiveTab](../../mfc/reference/cmfcbasetabctrl-class.md#cmfcbasetabctrl__setactivetab).)"},{"content":"CMFCTabCtrl::SetActiveTabBoldFont","pos":[9595,9628]},{"content":"Enables or disables use of a bold font on active tabs.","pos":[9666,9720]},{"content":"CMFCTabCtrl::SetDrawFrame","pos":[9726,9751]},{"content":"Enables or disables drawinga frame rectangle around an embedded bar.","pos":[9781,9849]},{"content":"CMFCTabCtrl::SetFlatFrame","pos":[9855,9880]},{"content":"Specifies whether to draw a flat or a 3D frame around the tab area.","pos":[9910,9977]},{"content":"CMFCTabCtrl::SetImageList","pos":[9983,10008]},{"content":"Specifies an image list.","pos":[10038,10062]},{"content":"(Overrides <bpt id=\"p1\">[</bpt>CMFCBaseTabCtrl::SetImageList<ept id=\"p1\">](../../mfc/reference/cmfcbasetabctrl-class.md#cmfcbasetabctrl__setimagelist)</ept>.)","pos":[10063,10183],"source":" (Overrides [CMFCBaseTabCtrl::SetImageList](../../mfc/reference/cmfcbasetabctrl-class.md#cmfcbasetabctrl__setimagelist).)"},{"content":"CMFCTabCtrl::SetResizeMode","pos":[10189,10215]},{"content":"Specifies how the current tab control can be resized and then redisplays the control.","pos":[10246,10331]},{"content":"CMFCTabCtrl::SetTabMaxWidth","pos":[10337,10364]},{"content":"Specifies the maximum tab width in a tabbed window.","pos":[10396,10447]},{"content":"CMFCTabCtrl::StopResize","pos":[10453,10476]},{"content":"Terminates the current resize operation on the tab control.","pos":[10504,10563]},{"content":"Swaps a pair of tabs.","pos":[10592,10613]},{"content":"(Overrides <bpt id=\"p1\">[</bpt>CMFCBaseTabCtrl::SwapTabs<ept id=\"p1\">](../../mfc/reference/cmfcbasetabctrl-class.md#cmfcbasetabctrl__swaptabs)</ept>.)","pos":[10614,10726],"source":" (Overrides [CMFCBaseTabCtrl::SwapTabs](../../mfc/reference/cmfcbasetabctrl-class.md#cmfcbasetabctrl__swaptabs).)"},{"content":"CMFCTabCtrl::SynchronizeScrollBar","pos":[10732,10765]},{"content":"Draws a horizontal scroll bar on a tab control that displays flat tabs.","pos":[10803,10874]},{"content":"Data Members","pos":[10885,10897]},{"content":"Name","pos":[10904,10908]},{"content":"Description","pos":[10909,10920]},{"content":"CMFCTabCtrl::m_bEnableActivate","pos":[10959,10989]},{"content":"Prevents the active view from losing focus when a new tab is inserted and enabled.","pos":[11024,11106]},{"content":"Remarks","pos":[11116,11123]},{"pos":[11127,11160],"content":"The <ph id=\"ph1\">`CMFCTabCtrl`</ph> class supports:","source":"The `CMFCTabCtrl` class supports:"},{"content":"Tab control styles that include 3D, flat, and flat with a shared horizontal scroll bar.","pos":[11170,11257]},{"content":"Tabs located at the top or the bottom of the window.","pos":[11267,11319]},{"content":"Tabs that display text, images, or text and images.","pos":[11329,11380]},{"content":"Tabs that change color when the tab is active.","pos":[11390,11436]},{"content":"Border size changes for adjustable tabs.","pos":[11446,11486]},{"content":"Detachable tabbed windows.","pos":[11496,11522]},{"content":"The <ph id=\"ph1\">`CMFCTabCtrl`</ph> class can be used with a dialog box, but is intended for applications that use docking control bars like <ph id=\"ph2\">[!INCLUDE[ofprexcel](../../mfc/reference/includes/ofprexcel_md.md)]</ph> and <ph id=\"ph3\">[!INCLUDE[vsprvs](../../assembler/masm/includes/vsprvs_md.md)]</ph>.","pos":[11529,11787],"source":"The `CMFCTabCtrl` class can be used with a dialog box, but is intended for applications that use docking control bars like [!INCLUDE[ofprexcel](../../mfc/reference/includes/ofprexcel_md.md)] and [!INCLUDE[vsprvs](../../assembler/masm/includes/vsprvs_md.md)]."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>CDockablePane Class<ept id=\"p1\">](../../mfc/reference/cdockablepane-class.md)</ept>.","pos":[11788,11880],"source":" For more information, see [CDockablePane Class](../../mfc/reference/cdockablepane-class.md)."},{"content":"Follow these steps to add a resizable, docking tab control in your application:","pos":[11887,11966]},{"pos":[11976,12060],"content":"Create an instance of <bpt id=\"p1\">[</bpt>CTabbedPane Class<ept id=\"p1\">](../../mfc/reference/ctabbedpane-class.md)</ept>.","source":"Create an instance of [CTabbedPane Class](../../mfc/reference/ctabbedpane-class.md)."},{"pos":[12070,12165],"content":"Call <bpt id=\"p1\">[</bpt>CDockablePane::Create<ept id=\"p1\">](../../mfc/reference/cdockablepane-class.md#cdockablepane__create)</ept>.","source":"Call [CDockablePane::Create](../../mfc/reference/cdockablepane-class.md#cdockablepane__create)."},{"pos":[12175,12396],"content":"Use <bpt id=\"p1\">[</bpt>CBaseTabbedPane::AddTab<ept id=\"p1\">](../../mfc/reference/cbasetabbedpane-class.md#cbasetabbedpane__addtab)</ept> or <bpt id=\"p2\">[</bpt>CMFCBaseTabCtrl::InsertTab<ept id=\"p2\">](../../mfc/reference/cmfcbasetabctrl-class.md#cmfcbasetabctrl__inserttab)</ept> to add new tabs.","source":"Use [CBaseTabbedPane::AddTab](../../mfc/reference/cbasetabbedpane-class.md#cbasetabbedpane__addtab) or [CMFCBaseTabCtrl::InsertTab](../../mfc/reference/cmfcbasetabctrl-class.md#cmfcbasetabctrl__inserttab) to add new tabs."},{"pos":[12406,12577],"content":"Call <bpt id=\"p1\">[</bpt>CBasePane::EnableDocking<ept id=\"p1\">](../../mfc/reference/cbasepane-class.md#cbasepane__enabledocking)</ept> so that the current docking tab control can dock at the main frame window.","source":"Call [CBasePane::EnableDocking](../../mfc/reference/cbasepane-class.md#cbasepane__enabledocking) so that the current docking tab control can dock at the main frame window."},{"pos":[12587,12724],"content":"Call <bpt id=\"p1\">[</bpt>CFrameWndEx::DockPane<ept id=\"p1\">](../../mfc/reference/cframewndex-class.md#cframewndex__dockpane)</ept> to dock the tabbed window at the main frame.","source":"Call [CFrameWndEx::DockPane](../../mfc/reference/cframewndex-class.md#cframewndex__dockpane) to dock the tabbed window at the main frame."},{"content":"For an example of how to create a tabbed window as a docking control bar, see <bpt id=\"p1\">[</bpt>CTabbedPane Class<ept id=\"p1\">](../../mfc/reference/ctabbedpane-class.md)</ept>.","pos":[12731,12871],"source":"For an example of how to create a tabbed window as a docking control bar, see [CTabbedPane Class](../../mfc/reference/ctabbedpane-class.md)."},{"content":"To use <ph id=\"ph1\">`CMFCTabCtrl`</ph> as a non-docking control, create a <ph id=\"ph2\">`CMFCTabCtrl`</ph> object and then call <bpt id=\"p1\">[</bpt>CMFCTabCtrl::Create<ept id=\"p1\">](#cmfctabctrl__create)</ept>.","pos":[12872,13007],"source":" To use `CMFCTabCtrl` as a non-docking control, create a `CMFCTabCtrl` object and then call [CMFCTabCtrl::Create](#cmfctabctrl__create)."},{"content":"Inheritance Hierarchy","pos":[13016,13037]},{"content":"CObject","pos":[13042,13049]},{"content":"CCmdTarget","pos":[13096,13106]},{"content":"CWnd","pos":[13156,13160]},{"content":"CMFCBaseTabCtrl","pos":[13204,13219]},{"content":"CMFCTabCtrl","pos":[13274,13285]},{"content":"Example","pos":[13337,13344]},{"content":"The following example demonstrates how to use various methods in the <ph id=\"ph1\">`CMFCTabCtrl`</ph> class to configure a <ph id=\"ph2\">`CMFCTabCtrl`</ph> object.","pos":[13348,13473],"source":"The following example demonstrates how to use various methods in the `CMFCTabCtrl` class to configure a `CMFCTabCtrl` object."},{"content":"The example explains how to add a tab, show the Close button on the active tab, enable editable tab labels, and display a pop-up menu of tabbed window labels.","pos":[13474,13632]},{"content":"This example is part of the <bpt id=\"p1\">[</bpt>State Collection sample<ept id=\"p1\">](../../visual-cpp-samples.md)</ept>.","pos":[13633,13716],"source":" This example is part of the [State Collection sample](../../visual-cpp-samples.md)."},{"content":"NVC_MFC_StateCollection#1","pos":[13734,13759]},{"content":"NVC_MFC_StateCollection#3","pos":[13834,13859]},{"content":"Requirements","pos":[13931,13943]},{"pos":[13947,13971],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> afxtabctrl.h","source":"**Header:** afxtabctrl.h"},{"pos":[14025,14052],"content":"CMFCTabCtrl::ActivateMDITab"},{"content":"Displays the specified tab of the current tab control and sets the focus on that tab.","pos":[14056,14141]},{"content":"Parameters","pos":[14202,14212]},{"content":"[in]","pos":[14216,14220]},{"content":"The zero-based index of a tab to display, or -1 to specify the currently active tab.","pos":[14231,14315]},{"pos":[14382,14422],"content":"CMFCTabCtrl::AllowDestroyEmptyTabbedPane"},{"content":"Return Value","pos":[14603,14615]},{"pos":[14619,14633],"content":"Always <ph id=\"ph1\">`TRUE`</ph>.","source":"Always `TRUE`."},{"content":"Remarks","pos":[14643,14650]},{"pos":[14704,14731],"content":"CMFCTabCtrl::AutoSizeWindow"},{"content":"Specifies whether the framework is to resize the client area of all tab control windows when a user interface element of the tab control changes.","pos":[14735,14880]},{"content":"Parameters","pos":[14949,14959]},{"content":"[in]","pos":[14963,14967]},{"content":"to automatically resize tab control windows; otherwise, <ph id=\"ph1\">`FALSE`</ph>.","pos":[14990,15054],"source":" to automatically resize tab control windows; otherwise, `FALSE`."},{"content":"The default value is <ph id=\"ph1\">`TRUE`</ph>.","pos":[15055,15083],"source":" The default value is `TRUE`."},{"content":"Remarks","pos":[15093,15100]},{"pos":[15146,15165],"content":"CMFCTabCtrl::Create"},{"pos":[15169,15237],"content":"Creates the tab control and attaches it to the <ph id=\"ph1\">`CMFCTabCtrl`</ph> object.","source":"Creates the tab control and attaches it to the `CMFCTabCtrl` object."},{"content":"Parameters","pos":[15426,15436]},{"content":"[in]","pos":[15440,15444]},{"content":"The style of the tab control.","pos":[15456,15485]},{"content":"For more information, see Remarks.","pos":[15486,15520]},{"content":"[in]","pos":[15527,15531]},{"content":"A rectangle that bounds the tab control.","pos":[15542,15582]},{"content":"[in]","pos":[15589,15593]},{"content":"A pointer to a parent window.","pos":[15610,15639]},{"content":"Must not be <ph id=\"ph1\">`NULL`</ph>.","pos":[15640,15659],"source":" Must not be `NULL`."},{"content":"[in]","pos":[15666,15670]},{"content":"The ID of the tab control.","pos":[15680,15706]},{"content":"[in]","pos":[15713,15717]},{"content":"The location of tabs.","pos":[15732,15753]},{"content":"The default value is <ph id=\"ph1\">`LOCATION_BOTTOM`</ph>.","pos":[15754,15793],"source":" The default value is `LOCATION_BOTTOM`."},{"content":"For more information, see Remarks.","pos":[15794,15828]},{"content":"[in]","pos":[15835,15839]},{"content":"to display a close button on the tab; otherwise, <ph id=\"ph1\">`FALSE`</ph>.","pos":[15862,15919],"source":" to display a close button on the tab; otherwise, `FALSE`."},{"content":"The default value is <ph id=\"ph1\">`FALSE`</ph>.","pos":[15920,15949],"source":" The default value is `FALSE`."},{"content":"Return Value","pos":[15959,15971]},{"pos":[15982,16016],"content":"if successful; otherwise, <ph id=\"ph1\">`FALSE`</ph>.","source":" if successful; otherwise, `FALSE`."},{"content":"Remarks","pos":[16026,16033]},{"pos":[16037,16120],"content":"The following table describes the values you can specify for the <ph id=\"ph1\">`style`</ph> parameter.","source":"The following table describes the values you can specify for the `style` parameter."},{"content":"Style","pos":[16127,16132]},{"content":"Description","pos":[16133,16144]},{"content":"STYLE_3D","pos":[16183,16191]},{"content":"Creates a tab control with a three-dimensional appearance.","pos":[16192,16250]},{"content":"STYLE_FLAT","pos":[16255,16265]},{"content":"Creates a tab control with flat tabs.","pos":[16266,16303]},{"content":"STYLE_FLAT_SHARED_HORZ_SCROLL","pos":[16308,16337]},{"content":"Creates a tab control with flat tabs and a scroll bar that can scroll the tabs if they are clipped by a parent window.","pos":[16338,16456]},{"content":"STYLE_3D_ONENOTE","pos":[16461,16477]},{"content":"Creates a tab control in the style of Microsoft OneNote.","pos":[16478,16534]},{"content":"STYLE_3D_VS2005","pos":[16539,16554]},{"content":"Creates a tab control in the style of Microsoft Visual Studio 2005.","pos":[16555,16622]},{"content":"STYLE_3D_ROUNDED","pos":[16627,16643]},{"content":"Creates a tab control with rounded tabs in the style of Microsoft Visual Studio 2005.","pos":[16644,16729]},{"content":"STYLE_3D_ROUNDED_SCROLL","pos":[16734,16757]},{"content":"Creates a tab control with rounded tabs and scroll buttons in the style of Microsoft Visual Studio 2005.","pos":[16758,16862]},{"pos":[16870,16952],"content":"The following table lists the values you can specify for the <ph id=\"ph1\">`location`</ph> parameter.","source":"The following table lists the values you can specify for the `location` parameter."},{"content":"Location","pos":[16959,16967]},{"content":"Description","pos":[16968,16979]},{"content":"LOCATION_BOTTOM","pos":[17021,17036]},{"content":"Tabs are located at the bottom of the tab control.","pos":[17037,17087]},{"content":"LOCATION_TOP","pos":[17092,17104]},{"content":"Tabs are located at the top of the tab control.","pos":[17105,17152]},{"content":"Example","pos":[17163,17170]},{"content":"The following example demonstrates how to use the <ph id=\"ph1\">`Create`</ph> method in the <ph id=\"ph2\">`CMFCTabCtrl`</ph> class.","pos":[17174,17267],"source":"The following example demonstrates how to use the `Create` method in the `CMFCTabCtrl` class."},{"content":"This example is part of the <bpt id=\"p1\">[</bpt>State Collection sample<ept id=\"p1\">](../../visual-cpp-samples.md)</ept>.","pos":[17268,17351],"source":" This example is part of the [State Collection sample](../../visual-cpp-samples.md)."},{"content":"NVC_MFC_StateCollection#1","pos":[17369,17394]},{"content":"NVC_MFC_StateCollection#2","pos":[17469,17494]},{"pos":[17609,17634],"content":"CMFCTabCtrl::CalcRectEdit"},{"content":"Deflates the size of the specified tab area.","pos":[17638,17682]},{"content":"Parameters","pos":[17751,17761]},{"content":"[in]","pos":[17765,17769]},{"content":"A rectangle that specifies the area of a tab.","pos":[17784,17829]},{"content":"Remarks","pos":[17839,17846]},{"content":"This method is called when you change the label of a tab.","pos":[17850,17907]},{"content":"This method deflates the left and right sides of the specified rectangle by one-half the current tab height, and deflates the top and bottom by one unit.","pos":[17908,18061]},{"pos":[18127,18166],"content":"CMFCTabCtrl::EnableActiveTabCloseButton"},{"pos":[18170,18227],"content":"Shows or hides a Close button ( <bpt id=\"p1\">**</bpt>X<ept id=\"p1\">**</ept>) on the active tab.","source":"Shows or hides a Close button ( **X**) on the active tab."},{"content":"Parameters","pos":[18304,18314]},{"content":"[in]","pos":[18318,18322]},{"content":"to display the Close button on the active tab; <ph id=\"ph1\">`FALSE`</ph> to display the Close button on the upper-right corner of the tab area.","pos":[18343,18468],"source":" to display the Close button on the active tab; `FALSE` to display the Close button on the upper-right corner of the tab area."},{"content":"The default value is <ph id=\"ph1\">`TRUE`</ph>.","pos":[18469,18497],"source":" The default value is `TRUE`."},{"pos":[18554,18584],"content":"CMFCTabCtrl::EnableInPlaceEdit"},{"content":"Enables or disables editable tab labels.","pos":[18588,18628]},{"content":"Parameters","pos":[18699,18709]},{"content":"[in]","pos":[18713,18717]},{"content":"to enable editable tab labels; <ph id=\"ph1\">`FALSE`</ph> to disable editable tab labels.","pos":[18738,18808],"source":" to enable editable tab labels; `FALSE` to disable editable tab labels."},{"content":"Remarks","pos":[18818,18825]},{"pos":[18887,18922],"content":"CMFCTabCtrl::EnableTabDocumentsMenu"},{"content":"Toggles between a user interface that uses two buttons to scroll the window tabs and an interface that displays a pop-up menu of tabbed windows.","pos":[18926,19070]},{"content":"Parameters","pos":[19143,19153]},{"content":"[in]","pos":[19157,19161]},{"content":"to display a pop-up menu of tabbed window labels; <ph id=\"ph1\">`FALSE`</ph> to display forward and backward scroll buttons.","pos":[19182,19287],"source":" to display a pop-up menu of tabbed window labels; `FALSE` to display forward and backward scroll buttons."},{"content":"The default value is <ph id=\"ph1\">`TRUE`</ph>.","pos":[19288,19316],"source":" The default value is `TRUE`."},{"content":"Remarks","pos":[19326,19333]},{"content":"When the user clicks a tab label, the framework displays the corresponding tabbed window.","pos":[19337,19426]},{"content":"If the tab label is visible, the tabbed window is opened without changing its position.","pos":[19427,19514]},{"content":"If the user selects a document from the pop-up menu and the corresponding tabbed window is off screen, the tabbed window becomes the first tab.","pos":[19515,19658]},{"pos":[19711,19737],"content":"CMFCTabCtrl::EnsureVisible"},{"content":"Ensures that a tab is visible.","pos":[19741,19771]},{"content":"Parameters","pos":[19834,19844]},{"content":"[in]","pos":[19848,19852]},{"content":"The zero-based index of a tab.","pos":[19863,19893]},{"content":"Return Value","pos":[19903,19915]},{"pos":[19926,19996],"content":"if it is successful; <ph id=\"ph1\">`FALSE`</ph> if the <ph id=\"ph2\">`iTab`</ph> parameter index is invalid.","source":" if it is successful; `FALSE` if the `iTab` parameter index is invalid."},{"content":"Remarks","pos":[20006,20013]},{"content":"Use this method to guarantee that the specified tab is visible.","pos":[20017,20080]},{"content":"The tab control will scroll if it is required.","pos":[20081,20127]},{"pos":[20182,20210],"content":"CMFCTabCtrl::GetDocumentIcon"},{"content":"Retrieves the image that is associated with a tab in a pop-up menu of tabbed windows.","pos":[20214,20299]},{"content":"Parameters","pos":[20377,20387]},{"content":"[in]","pos":[20391,20395]},{"content":"The command ID of a tab in a pop-up menu of tabbed windows.","pos":[20408,20467]},{"content":"Return Value","pos":[20477,20489]},{"content":"The handle of a bitmap image.","pos":[20493,20522]},{"pos":[20583,20617],"content":"CMFCTabCtrl::GetFirstVisibleTabNum"},{"content":"Retrieves the index of the first tab that is visible in the current tab control.","pos":[20621,20701]},{"content":"Return Value","pos":[20772,20784]},{"content":"The zero-based index of a tab in the tab control.","pos":[20788,20837]},{"content":"Remarks","pos":[20847,20854]},{"content":"Use this method only when the tab control is displayed in the style of Microsoft OneNote.","pos":[20858,20947]},{"content":"Use the <bpt id=\"p1\">[</bpt>CMFCTabCtrl::IsOneNoteStyle<ept id=\"p1\">](#cmfctabctrl__isonenotestyle)</ept> method to determine the style.","pos":[20948,21046],"source":" Use the [CMFCTabCtrl::IsOneNoteStyle](#cmfctabctrl__isonenotestyle) method to determine the style."},{"pos":[21099,21125],"content":"CMFCTabCtrl::GetResizeMode"},{"content":"Retrieves a value that specifies how the current tab control can be resized.","pos":[21129,21205]},{"content":"Return Value","pos":[21267,21279]},{"content":"One of the <ph id=\"ph1\">`CMFCTabCtrl::ResizeMode`</ph> enumeration values that specifies how the tab control can be resized.","pos":[21283,21389],"source":"One of the `CMFCTabCtrl::ResizeMode` enumeration values that specifies how the tab control can be resized."},{"content":"For a list of possible values, see the Remarks section of the <bpt id=\"p1\">[</bpt>CMFCTabCtrl::SetResizeMode<ept id=\"p1\">](#cmfctabctrl__setresizemode)</ept> method.","pos":[21390,21517],"source":" For a list of possible values, see the Remarks section of the [CMFCTabCtrl::SetResizeMode](#cmfctabctrl__setresizemode) method."},{"pos":[21569,21594],"content":"CMFCTabCtrl::GetScrollBar"},{"content":"Retrieves a pointer to the scroll bar object that is associated with the tab control.","pos":[21598,21683]},{"content":"Return Value","pos":[21736,21748]},{"pos":[21752,21883],"content":"A pointer to a scrollbar object, or a <ph id=\"ph1\">`NULL`</ph> if the tab control was not created by using the <ph id=\"ph2\">`STYLE_FLAT_SHARED_HORZ_SCROLL`</ph> style.","source":"A pointer to a scrollbar object, or a `NULL` if the tab control was not created by using the `STYLE_FLAT_SHARED_HORZ_SCROLL` style."},{"content":"Remarks","pos":[21893,21900]},{"content":"Use this method to access the tab control's embedded scroll bar.","pos":[21904,21968]},{"content":"A scroll bar object is created only when the tab control has the <ph id=\"ph1\">`STYLE_FLAT_SHARED_HORZ_SCROLL`</ph> style.","pos":[21969,22072],"source":" A scroll bar object is created only when the tab control has the `STYLE_FLAT_SHARED_HORZ_SCROLL` style."},{"pos":[22122,22145],"content":"CMFCTabCtrl::GetTabArea"},{"content":"Retrieves the bounding rectangle of the tab label area at the top or bottom of the tab control.","pos":[22149,22244]},{"content":"Parameters","pos":[22355,22365]},{"content":"[out]","pos":[22369,22374]},{"content":"When this method returns, this reference contains a rectangle that bounds the top tab label area.","pos":[22395,22492]},{"content":"The rectangle is in client coordinates.","pos":[22493,22532]},{"content":"This reference is empty if no tab label area exists at the top of the tab control.","pos":[22533,22615]},{"content":"[out]","pos":[22622,22627]},{"content":"When this method returns, this reference contains a rectangle that bounds the bottom tab label area.","pos":[22651,22751]},{"content":"The rectangle is in client coordinates.","pos":[22752,22791]},{"content":"This reference is empty if no tab label area exists at the bottom of the tab control.","pos":[22792,22877]},{"content":"Remarks","pos":[22887,22894]},{"content":"Use this method to determine the size and position of the tab area in the tabbed window.","pos":[22898,22986]},{"pos":[23040,23067],"content":"CMFCTabCtrl::GetTabMaxWidth"},{"content":"Retrieves the maximum width of a tab.","pos":[23071,23108]},{"content":"Return Value","pos":[23164,23176]},{"content":"Maximum width of a tab, in pixels.","pos":[23180,23214]},{"content":"If the return value is 0, the tab width is unlimited.","pos":[23215,23268]},{"content":"Remarks","pos":[23278,23285]},{"pos":[23289,23389],"content":"Use the <bpt id=\"p1\">[</bpt>CMFCTabCtrl::SetTabMaxWidth<ept id=\"p1\">](#cmfctabctrl__settabmaxwidth)</ept> method to set maximum tab width.","source":"Use the [CMFCTabCtrl::SetTabMaxWidth](#cmfctabctrl__settabmaxwidth) method to set maximum tab width."},{"pos":[23442,23468],"content":"CMFCTabCtrl::GetTabsHeight"},{"content":"Retrieves the height of the tab area of the current tab control.","pos":[23472,23536]},{"content":"Return Value","pos":[23599,23611]},{"content":"The height of the tab area if any tab is visible, or zero if no tab is visible.","pos":[23615,23694]},{"pos":[23745,23769],"content":"CMFCTabCtrl::GetTabsRect"},{"content":"Retrieves a rectangle that bounds the tab area of the current tab control.","pos":[23773,23847]},{"content":"Parameters","pos":[23920,23930]},{"content":"[out]","pos":[23934,23939]},{"content":"When this method returns, the <ph id=\"ph1\">`rect`</ph> parameter contains a rectangle that bounds the tab area.","pos":[23950,24043],"source":" When this method returns, the `rect` parameter contains a rectangle that bounds the tab area."},{"pos":[24093,24116],"content":"CMFCTabCtrl::GetWndArea"},{"content":"Retrieves the boundary of the client area of the current tab control.","pos":[24120,24189]},{"content":"Parameters","pos":[24253,24263]},{"content":"[in, out]","pos":[24267,24276]},{"content":"When this method returns, this parameter contains a rectangle that bounds the current tab control.","pos":[24287,24385]},{"content":"Remarks","pos":[24395,24402]},{"pos":[24471,24513],"content":"CMFCTabCtrl::HideActiveWindowHorzScrollBar"},{"content":"Hides the horizontal scroll bar, if any, in the active window.","pos":[24517,24579]},{"content":"Remarks","pos":[24642,24649]},{"content":"Use this method to prevent the tab control from blinking when the user switches between tab control pages.","pos":[24653,24759]},{"pos":[24817,24848],"content":"CMFCTabCtrl::HideInactiveWindow"},{"content":"Specifies whether the framework displays inactive tab control windows.","pos":[24852,24922]},{"content":"Parameters","pos":[24991,25001]},{"content":"[in]","pos":[25005,25009]},{"content":"not to display an inactive window; <ph id=\"ph1\">`FALSE`</ph> to display an inactive window.","pos":[25028,25101],"source":" not to display an inactive window; `FALSE` to display an inactive window."},{"content":"The default value is <ph id=\"ph1\">`TRUE`</ph>.","pos":[25102,25130],"source":" The default value is `TRUE`."},{"content":"Remarks","pos":[25140,25147]},{"pos":[25197,25220],"content":"CMFCTabCtrl::HideNoTabs"},{"content":"Enables or disables drawing of the tab area if there are no visible tabs.","pos":[25224,25297]},{"content":"Parameters","pos":[25356,25366]},{"content":"[in]","pos":[25370,25374]},{"content":"to enable drawing the tab area; <ph id=\"ph1\">`FALSE`</ph> to disable drawing.","pos":[25393,25452],"source":" to enable drawing the tab area; `FALSE` to disable drawing."},{"content":"The default value is <ph id=\"ph1\">`TRUE`</ph>.","pos":[25453,25481],"source":" The default value is `TRUE`."},{"content":"Remarks","pos":[25491,25498]},{"pos":[25551,25577],"content":"CMFCTabCtrl::HideSingleTab"},{"content":"Enables or disables tab drawing if there is a single tabbed window.","pos":[25581,25648]},{"content":"Parameters","pos":[25718,25728]},{"content":"[in]","pos":[25732,25736]},{"content":"to not draw a tab for a single tabbed window; <ph id=\"ph1\">`FALSE`</ph> to draw a single tab.","pos":[25755,25830],"source":" to not draw a tab for a single tabbed window; `FALSE` to draw a single tab."},{"content":"The default value is <ph id=\"ph1\">`TRUE`</ph>.","pos":[25831,25859],"source":" The default value is `TRUE`."},{"content":"Remarks","pos":[25869,25876]},{"pos":[25937,25971],"content":"CMFCTabCtrl::IsActiveInMDITabGroup"},{"content":"Indicates whether the current tab of a tab control is the active tab in a multiple document interface tab group.","pos":[25975,26087]},{"content":"Return Value","pos":[26151,26163]},{"pos":[26174,26268],"content":"if the current tab of a tab control is the active tab in an MDI tab group; otherwise, <ph id=\"ph1\">`FALSE`</ph>.","source":" if the current tab of a tab control is the active tab in an MDI tab group; otherwise, `FALSE`."},{"content":"Remarks","pos":[26278,26285]},{"content":"You can organize multiple document windows into either vertical or horizontal tab groups and easily shuffle documents from one tab group to another.","pos":[26289,26437]},{"pos":[26496,26528],"content":"CMFCTabCtrl::IsActiveTabBoldFont"},{"content":"Indicates whether the text of the active tab is displayed using a bold font.","pos":[26532,26608]},{"content":"Return Value","pos":[26670,26682]},{"pos":[26693,26764],"content":"if the active tab is displayed using the bold font; otherwise, <ph id=\"ph1\">`FALSE`</ph>.","source":" if the active tab is displayed using the bold font; otherwise, `FALSE`."},{"content":"Remarks","pos":[26774,26781]},{"pos":[26785,26902],"content":"Use the <bpt id=\"p1\">[</bpt>CMFCTabCtrl::SetActiveTabBoldFont<ept id=\"p1\">](#cmfctabctrl__setactivetabboldfont)</ept> method to change the active tab font.","source":"Use the [CMFCTabCtrl::SetActiveTabBoldFont](#cmfctabctrl__setactivetabboldfont) method to change the active tab font."},{"pos":[26964,26999],"content":"CMFCTabCtrl::IsActiveTabCloseButton"},{"pos":[27003,27122],"content":"Indicates whether the Close button ( <bpt id=\"p1\">**</bpt>X<ept id=\"p1\">**</ept>) is displayed on an active tab or on the upper-right corner of the tab area.","source":"Indicates whether the Close button ( **X**) is displayed on an active tab or on the upper-right corner of the tab area."},{"content":"Return Value","pos":[27195,27207]},{"pos":[27218,27353],"content":"if the Close button is displayed on the active tab; <ph id=\"ph1\">`FALSE`</ph> if the Close button is displayed on the upper-right corner of the tab area.","source":" if the Close button is displayed on the active tab; `FALSE` if the Close button is displayed on the upper-right corner of the tab area."},{"content":"Remarks","pos":[27363,27370]},{"pos":[27421,27445],"content":"CMFCTabCtrl::IsDrawFrame"},{"content":"Indicates whether the tabbed window draws a frame rectangle around embedded panes.","pos":[27449,27531]},{"content":"Return Value","pos":[27585,27597]},{"pos":[27608,27658],"content":"if a frame rectangle is drawn; otherwise, <ph id=\"ph1\">`FALSE`</ph>.","source":" if a frame rectangle is drawn; otherwise, `FALSE`."},{"content":"Remarks","pos":[27668,27675]},{"pos":[27679,27797],"content":"Use the <bpt id=\"p1\">[</bpt>CMFCTabCtrl::SetDrawFrame<ept id=\"p1\">](#cmfctabctrl__setdrawframe)</ept> method to enable or disable drawing a frame rectangle.","source":"Use the [CMFCTabCtrl::SetDrawFrame](#cmfctabctrl__setdrawframe) method to enable or disable drawing a frame rectangle."},{"pos":[27848,27872],"content":"CMFCTabCtrl::IsFlatFrame"},{"content":"Indicates whether the frame around the tab area is flat or 3D.","pos":[27876,27938]},{"content":"Return Value","pos":[27992,28004]},{"pos":[28015,28099],"content":"if the frame around the tab area is flat; <ph id=\"ph1\">`FALSE`</ph> if the frame is three-dimensional.","source":" if the frame around the tab area is flat; `FALSE` if the frame is three-dimensional."},{"content":"Remarks","pos":[28109,28116]},{"pos":[28120,28224],"content":"Use the <bpt id=\"p1\">[</bpt>CMFCTabCtrl::SetFlatFrame<ept id=\"p1\">](#cmfctabctrl__setflatframe)</ept> method to change how the frame is drawn.","source":"Use the [CMFCTabCtrl::SetFlatFrame](#cmfctabctrl__setflatframe) method to change how the frame is drawn."},{"pos":[28273,28295],"content":"CMFCTabCtrl::IsFlatTab"},{"content":"Indicates whether the appearance of the tabs in the current tab control is flat or not.","pos":[28299,28386]},{"content":"Return Value","pos":[28446,28458]},{"pos":[28469,28554],"content":"if the appearance of the tabs in the current tab control is flat; otherwise, <ph id=\"ph1\">`FALSE`</ph>.","source":" if the appearance of the tabs in the current tab control is flat; otherwise, `FALSE`."},{"pos":[28612,28643],"content":"CMFCTabCtrl::IsLeftRightRounded"},{"content":"Indicates whether the appearance of the left and right side of a tab in the current tab control is rounded.","pos":[28647,28754]},{"content":"Return Value","pos":[28823,28835]},{"pos":[28846,28902],"content":"if the sides of each tab is rounded; otherwise, <ph id=\"ph1\">`FALSE`</ph>.","source":" if the sides of each tab is rounded; otherwise, `FALSE`."},{"pos":[28955,28981],"content":"CMFCTabCtrl::IsMDITabGroup"},{"content":"Indicates whether the current tab control is contained in the client area of a multiple-document interface window.","pos":[28985,29099]},{"content":"Return Value","pos":[29163,29175]},{"pos":[29186,29265],"content":"if the current tab control is in an MDI client area window; otherwise, <ph id=\"ph1\">`FALSE`</ph>.","source":" if the current tab control is in an MDI client area window; otherwise, `FALSE`."},{"pos":[29319,29346],"content":"CMFCTabCtrl::IsOneNoteStyle"},{"content":"Indicates whether the current tab control is displayed in the style of Microsoft OneNote.","pos":[29350,29439]},{"content":"Return Value","pos":[29504,29516]},{"pos":[29527,29613],"content":"if the tab control is displayed in the style of Microsoft OneNote; otherwise, <ph id=\"ph1\">`FALSE`</ph>.","source":" if the tab control is displayed in the style of Microsoft OneNote; otherwise, `FALSE`."},{"pos":[29667,29694],"content":"CMFCTabCtrl::IsSharedScroll"},{"content":"Indicates whether the current tab control has a scroll bar that can scroll its tabs as a group.","pos":[29698,29793]},{"content":"Return Value","pos":[29850,29862]},{"pos":[29873,29936],"content":"if the tab control has a shared scroll bar; otherwise, <ph id=\"ph1\">`FALSE`</ph>.","source":" if the tab control has a shared scroll bar; otherwise, `FALSE`."},{"content":"Remarks","pos":[29946,29953]},{"pos":[29957,30100],"content":"This method returns <ph id=\"ph1\">`TRUE`</ph> if the <ph id=\"ph2\">`style`</ph> parameter of the <bpt id=\"p1\">[</bpt>CMFCTabCtrl::Create<ept id=\"p1\">](#cmfctabctrl__create)</ept> method is STYLE_FLAT_SHARED_HORZ_SCROLL.","source":"This method returns `TRUE` if the `style` parameter of the [CMFCTabCtrl::Create](#cmfctabctrl__create) method is STYLE_FLAT_SHARED_HORZ_SCROLL."},{"pos":[30158,30189],"content":"CMFCTabCtrl::IsTabDocumentsMenu"},{"content":"Indicates whether the tab control displays scroll buttons or a button that displays a menu of tabbed windows.","pos":[30193,30302]},{"content":"Return Value","pos":[30363,30375]},{"pos":[30386,30542],"content":"if tabbed windows are scrolled using a popup menu of tabbed window labels; <ph id=\"ph1\">`FALSE`</ph> if tabbed windows are scrolled using forward and backward scroll buttons.","source":" if tabbed windows are scrolled using a popup menu of tabbed window labels; `FALSE` if tabbed windows are scrolled using forward and backward scroll buttons."},{"content":"Remarks","pos":[30552,30559]},{"pos":[30563,30704],"content":"Use the <bpt id=\"p1\">[</bpt>CMFCTabCtrl::EnableTabDocumentsMenu<ept id=\"p1\">](#cmfctabctrl__enabletabdocumentsmenu)</ept> method to specify the method of scrolling tabbed windows.","source":"Use the [CMFCTabCtrl::EnableTabDocumentsMenu](#cmfctabctrl__enabletabdocumentsmenu) method to specify the method of scrolling tabbed windows."},{"pos":[30757,30783],"content":"CMFCTabCtrl::IsVS2005Style"},{"content":"Indicates whether tabs are drawn using the style of Visual Studio 2005.","pos":[30787,30858]},{"content":"Return Value","pos":[30922,30934]},{"pos":[30945,31021],"content":"if tabs are drawn using the style of Visual Studio 2005; otherwise, <ph id=\"ph1\">`FALSE`</ph>.","source":" if tabs are drawn using the style of Visual Studio 2005; otherwise, `FALSE`."},{"content":"Remarks","pos":[31031,31038]},{"pos":[31042,31156],"content":"Use the <ph id=\"ph1\">`style`</ph> parameter of the <bpt id=\"p1\">[</bpt>CMFCTabCtrl::Create<ept id=\"p1\">](#cmfctabctrl__create)</ept> method to specify how tabs are drawn.","source":"Use the `style` parameter of the [CMFCTabCtrl::Create](#cmfctabctrl__create) method to specify how tabs are drawn."},{"pos":[31213,31243],"content":"CMFCTabCtrl::m_bEnableActivate"},{"content":"Prevents the active view from losing focus when a new tab is inserted and enabled.","pos":[31247,31329]},{"content":"Remarks","pos":[31387,31394]},{"content":"The focus is usually taken by a new tabbed window when the tab is inserted and made active.","pos":[31398,31489]},{"content":"Set the <ph id=\"ph1\">`CMFCTabCtrl::m_bEnableActivate`</ph> member variable to <ph id=\"ph2\">`FALSE`</ph> to retain the original focus.","pos":[31490,31587],"source":" Set the `CMFCTabCtrl::m_bEnableActivate` member variable to `FALSE` to retain the original focus."},{"content":"The default value is <ph id=\"ph1\">`TRUE`</ph>.","pos":[31588,31616],"source":" The default value is `TRUE`."},{"pos":[31670,31697],"content":"CMFCTabCtrl::ModifyTabStyle"},{"content":"Specifies the appearance of tabs in the current tab control.","pos":[31701,31761]},{"content":"Parameters","pos":[31820,31830]},{"content":"[in]","pos":[31834,31838]},{"content":"One of the enumeration values that specifies the appearance of the tab control.","pos":[31850,31929]},{"content":"For more information, see the table in Remarks.","pos":[31930,31977]},{"content":"Return Value","pos":[31987,31999]},{"pos":[32003,32017],"content":"Always <ph id=\"ph1\">`TRUE`</ph>.","source":"Always `TRUE`."},{"content":"Remarks","pos":[32027,32034]},{"pos":[32038,32135],"content":"The value of the <ph id=\"ph1\">`style`</ph> parameter can be one of the following <ph id=\"ph2\">`CMFCTabCtrl::Style`</ph> enumerations.","source":"The value of the `style` parameter can be one of the following `CMFCTabCtrl::Style` enumerations."},{"content":"Name","pos":[32142,32146]},{"content":"Description","pos":[32147,32158]},{"content":"STYLE_3D","pos":[32196,32204]},{"content":"Displays three-dimensional, rectangular tabs that have round corners.","pos":[32205,32274]},{"content":"STYLE_3D_ONENOTE","pos":[32279,32295]},{"content":"Displays three-dimensional tabs that have one vertical side and one slanted side and that have rounded corners.","pos":[32296,32407]},{"content":"STYLE_3D_ROUNDED","pos":[32412,32428]},{"content":"Displays three-dimensional tabs that have slanted sides and rounded corners.","pos":[32429,32505]},{"content":"STYLE_3D_ROUNDED_SCROLL","pos":[32510,32533]},{"content":"Displays three-dimensional tabs that have slanted sides and rounded corners.","pos":[32534,32610]},{"content":"If there are more tabs than can be displayed at the same time, the framework displays a drop-down arrow and a menu of tabs to make active.","pos":[32611,32749]},{"content":"STYLE_3D_SCROLLED","pos":[32754,32771]},{"content":"Displays three-dimensional, rectangular tabs.","pos":[32772,32817]},{"content":"If there are more tabs than can be displayed at the same time, the framework displays a drop-down arrow and a menu of tabs to make active.","pos":[32818,32956]},{"content":"STYLE_3D_VS2005","pos":[32961,32976]},{"content":"Displays three-dimensional, rounded tabs that have one slanted side and one vertical side.","pos":[32977,33067]},{"content":"STYLE_FLAT","pos":[33072,33082]},{"content":"Displays two-dimensional tabs that have slanted left and right sides.","pos":[33083,33152]},{"content":"STYLE_FLAT_SHARED_HORZ_SCROLL","pos":[33157,33186]},{"content":"Displays two-dimensional tabs.","pos":[33187,33217]},{"content":"If there are more tabs than can be displayed at the same time, the framework displays scroll arrows at the ends of the tab area.","pos":[33218,33346]},{"pos":[33398,33422],"content":"CMFCTabCtrl::OnDragEnter"},{"content":"Called by the framework during a drag-and-drop operation when the cursor first enters the window of the current tab control.","pos":[33426,33550]},{"content":"Parameters","pos":[33685,33695]},{"content":"[in]","pos":[33699,33703]},{"content":"Points to a data object that contains data that the user drags.","pos":[33721,33784]},{"content":"[in]","pos":[33791,33795]},{"content":"Contains the state of the modifier keys.","pos":[33812,33852]},{"content":"This parameter is a bitwise combination (OR) of the following values: <ph id=\"ph1\">`MK_CONTROL`</ph>, <ph id=\"ph2\">`MK_SHIFT`</ph>, <ph id=\"ph3\">`MK_ALT`</ph>, <ph id=\"ph4\">`MK_LBUTTON`</ph>, <ph id=\"ph5\">`MK_MBUTTON`</ph>, and <ph id=\"ph6\">`MK_RBUTTON`</ph>.","pos":[33853,34004],"source":" This parameter is a bitwise combination (OR) of the following values: `MK_CONTROL`, `MK_SHIFT`, `MK_ALT`, `MK_LBUTTON`, `MK_MBUTTON`, and `MK_RBUTTON`."},{"content":"For more information, see the <bpt id=\"p1\">**</bpt>Message Parameters<ept id=\"p1\">**</ept> section of <bpt id=\"p2\">[</bpt>About Mouse Input<ept id=\"p2\">](http://msdn.microsoft.com/library/windows/desktop/ms645601)</ept>.","pos":[34005,34149],"source":" For more information, see the **Message Parameters** section of [About Mouse Input](http://msdn.microsoft.com/library/windows/desktop/ms645601)."},{"content":"[in]","pos":[34156,34160]},{"content":"Contains the current location of the cursor in client coordinates.","pos":[34172,34238]},{"content":"Return Value","pos":[34248,34260]},{"pos":[34264,34346],"content":"Always <ph id=\"ph1\">`DROPEFFECT_NONE`</ph>, which means that the drop target cannot accept the data.","source":"Always `DROPEFFECT_NONE`, which means that the drop target cannot accept the data."},{"content":"Remarks","pos":[34356,34363]},{"content":"Use this method to support a drag-and-drop operation.","pos":[34367,34420]},{"content":"Override this method to implement your own custom behavior.","pos":[34421,34480]},{"pos":[34487,34588],"content":"By default, this method only calls <ph id=\"ph1\">`CMFCTabCtrl::OnDragOver`</ph>, which always returns <ph id=\"ph2\">`DROPEFFECT_NONE`</ph>.","source":"By default, this method only calls `CMFCTabCtrl::OnDragOver`, which always returns `DROPEFFECT_NONE`."},{"pos":[34638,34661],"content":"CMFCTabCtrl::OnDragOver"},{"content":"Called by the framework during a drag operation when the mouse is moved over the drop target window.","pos":[34665,34765]},{"content":"Parameters","pos":[34899,34909]},{"content":"[in]","pos":[34913,34917]},{"content":"Pointer to a <bpt id=\"p1\">[</bpt>COleDataObject<ept id=\"p1\">](../../mfc/reference/coledataobject-class.md)</ept> object that is being dragged over the drop target.","pos":[34935,35060],"source":" Pointer to a [COleDataObject](../../mfc/reference/coledataobject-class.md) object that is being dragged over the drop target."},{"content":"[in]","pos":[35067,35071]},{"content":"The state of the modifier keys, which is a bitwise combination (OR) of <ph id=\"ph1\">`MK_CONTROL`</ph>, <ph id=\"ph2\">`MK_SHIFT`</ph>, <ph id=\"ph3\">`MK_ALT`</ph>, <ph id=\"ph4\">`MK_LBUTTON`</ph>, <ph id=\"ph5\">`MK_MBUTTON`</ph>, and <ph id=\"ph6\">`MK_RBUTTON`</ph>.","pos":[35088,35240],"source":" The state of the modifier keys, which is a bitwise combination (OR) of `MK_CONTROL`, `MK_SHIFT`, `MK_ALT`, `MK_LBUTTON`, `MK_MBUTTON`, and `MK_RBUTTON`."},{"content":"For more information, see \"Message Parameters\" in <bpt id=\"p1\">[</bpt>About Mouse Input<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms645601)</ept>.","pos":[35241,35371],"source":" For more information, see \"Message Parameters\" in [About Mouse Input](http://msdn.microsoft.com/library/windows/desktop/ms645601)."},{"content":"[in]","pos":[35378,35382]},{"content":"The current mouse position.","pos":[35394,35421]},{"content":"Return Value","pos":[35431,35443]},{"pos":[35447,35472],"content":"Always <ph id=\"ph1\">`DROPEFFECT_NONE`</ph>.","source":"Always `DROPEFFECT_NONE`."},{"content":"Remarks","pos":[35482,35489]},{"content":"Override this method with your custom implementation.","pos":[35493,35546]},{"content":"For more information, see the <bpt id=\"p1\">[</bpt>CView::OnDragOver<ept id=\"p1\">](../../mfc/reference/cview-class.md#cview__ondragover)</ept> method.","pos":[35547,35658],"source":" For more information, see the [CView::OnDragOver](../../mfc/reference/cview-class.md#cview__ondragover) method."},{"pos":[35720,35755],"content":"CMFCTabCtrl::OnShowTabDocumentsMenu"},{"content":"Displays a pop-up menu of tabbed windows, waits until the user selects a tab, and makes the selected tab the active tab.","pos":[35759,35879]},{"content":"Parameters","pos":[35955,35965]},{"content":"[in]","pos":[35969,35973]},{"content":"The coordinates of where to display the pop-up menu.","pos":[35985,36037]},{"content":"Remarks","pos":[36047,36054]},{"pos":[36116,36151],"content":"CMFCTabCtrl::SetActiveInMDITabGroup"},{"content":"Sets the current tab of a tab control as the active tab in a multiple document interface tab group.","pos":[36155,36254]},{"content":"Parameters","pos":[36322,36332]},{"content":"[in]","pos":[36336,36340]},{"content":"to make the current tab the active tab; <ph id=\"ph1\">`FALSE`</ph> to make the current tab inactive.","pos":[36361,36442],"source":" to make the current tab the active tab; `FALSE` to make the current tab inactive."},{"content":"Remarks","pos":[36452,36459]},{"content":"You can organize multiple document windows into either vertical or horizontal tab groups and easily shuffle documents from one tab group to another.","pos":[36463,36611]},{"pos":[36663,36688],"content":"CMFCTabCtrl::SetActiveTab"},{"content":"Activates a tab.","pos":[36692,36708]},{"content":"Parameters","pos":[36770,36780]},{"content":"[in]","pos":[36784,36788]},{"content":"Specifies the zero-based index of the tab to activate.","pos":[36799,36853]},{"content":"Return Value","pos":[36863,36875]},{"pos":[36886,36983],"content":"if the specified tab was made active; <ph id=\"ph1\">`FALSE`</ph> if the specified <ph id=\"ph2\">`iTab`</ph> parameter value is invalid.","source":" if the specified tab was made active; `FALSE` if the specified `iTab` parameter value is invalid."},{"content":"Remarks","pos":[36993,37000]},{"pos":[37004,37114],"content":"This method does not send the <ph id=\"ph1\">`AFX_WM_CHANGE_ACTIVE_TAB`</ph> notification to the parent window of the tab control.","source":"This method does not send the `AFX_WM_CHANGE_ACTIVE_TAB` notification to the parent window of the tab control."},{"pos":[37121,37304],"content":"The <ph id=\"ph1\">`SetActiveTab`</ph> method automatically calls the <bpt id=\"p1\">[</bpt>CMFCTabCtrl::HideActiveWindowHorzScrollBar<ept id=\"p1\">](#cmfctabctrl__hideactivewindowhorzscrollbar)</ept> method to prevent the screen from blinking.","source":"The `SetActiveTab` method automatically calls the [CMFCTabCtrl::HideActiveWindowHorzScrollBar](#cmfctabctrl__hideactivewindowhorzscrollbar) method to prevent the screen from blinking."},{"pos":[37364,37397],"content":"CMFCTabCtrl::SetActiveTabBoldFont"},{"content":"Enables or disables use of a bold font on active tabs.","pos":[37401,37455]},{"content":"Parameters","pos":[37526,37536]},{"content":"[in]","pos":[37540,37544]},{"content":"to use a bold font to display the label of the active tab; <ph id=\"ph1\">`FALSE`</ph> to use the standard font to display the label.","pos":[37565,37678],"source":" to use a bold font to display the label of the active tab; `FALSE` to use the standard font to display the label."},{"content":"The default value is <ph id=\"ph1\">`TRUE`</ph>.","pos":[37679,37707],"source":" The default value is `TRUE`."},{"content":"Remarks","pos":[37717,37724]},{"pos":[37776,37801],"content":"CMFCTabCtrl::SetDrawFrame"},{"content":"Specifies whether a frame rectangle is drawn around an embedded bar.","pos":[37805,37873]},{"content":"Parameters","pos":[37934,37944]},{"content":"[in]","pos":[37948,37952]},{"content":"to display a frame rectangle around an embedded bar; otherwise, <ph id=\"ph1\">`FALSE`</ph>.","pos":[37971,38043],"source":" to display a frame rectangle around an embedded bar; otherwise, `FALSE`."},{"content":"The default value is <ph id=\"ph1\">`TRUE`</ph>.","pos":[38044,38072],"source":" The default value is `TRUE`."},{"content":"Remarks","pos":[38082,38089]},{"pos":[38141,38166],"content":"CMFCTabCtrl::SetFlatFrame"},{"content":"Specifies whether to draw a flat or a 3D frame around the tab area.","pos":[38170,38237]},{"content":"Parameters","pos":[38329,38339]},{"content":"[in]","pos":[38343,38347]},{"content":"to draw a flat (2D) frame around the tab area; <ph id=\"ph1\">`FALSE`</ph> to draw a three-dimensional (3D) frame.","pos":[38366,38460],"source":" to draw a flat (2D) frame around the tab area; `FALSE` to draw a three-dimensional (3D) frame."},{"content":"The default value is <ph id=\"ph1\">`TRUE`</ph>.","pos":[38461,38489],"source":" The default value is `TRUE`."},{"content":"[in]","pos":[38496,38500]},{"content":"to redraw the window immediately; otherwise, <ph id=\"ph1\">`FALSE`</ph>.","pos":[38522,38575],"source":" to redraw the window immediately; otherwise, `FALSE`."},{"content":"The default value is <ph id=\"ph1\">`TRUE`</ph>.","pos":[38576,38604],"source":" The default value is `TRUE`."},{"content":"Remarks","pos":[38614,38621]},{"pos":[38673,38698],"content":"CMFCTabCtrl::SetImageList"},{"content":"Specifies an image list.","pos":[38702,38726]},{"content":"Parameters","pos":[38920,38930]},{"content":"[in]","pos":[38934,38938]},{"content":"The ID of a bitmap resource that contains the image list.","pos":[38949,39006]},{"content":"[in]","pos":[39013,39017]},{"content":"The width of each image, in pixels.","pos":[39026,39061]},{"content":"The default value is 15.","pos":[39062,39086]},{"content":"[in]","pos":[39093,39097]},{"content":"The transparent image color.","pos":[39113,39141]},{"content":"The parts of the image that are this color will be transparent.","pos":[39142,39205]},{"content":"The default value is the color magenta, RGB(255,0,255).","pos":[39206,39261]},{"content":"[in]","pos":[39268,39272]},{"content":"A handle to a preloaded image list.","pos":[39289,39324]},{"content":"Return Value","pos":[39334,39346]},{"content":"if this method is successful.","pos":[39357,39386]},{"content":"if the tab control is created by using a flat style or if the first method overload cannot load the bitmap that is specified by the <ph id=\"ph1\">`uiID`</ph> parameter.","pos":[39395,39544],"source":" if the tab control is created by using a flat style or if the first method overload cannot load the bitmap that is specified by the `uiID` parameter."},{"content":"Remarks","pos":[39554,39561]},{"content":"Use this method to set an image list for the tab control.","pos":[39565,39622]},{"content":"The images from the image list are displayed next to the tab label.","pos":[39623,39690]},{"content":"This method recalculates the tab height so that the tab is sized to contain both the image and the text.","pos":[39691,39795]},{"pos":[39802,39995],"content":"Use the <bpt id=\"p1\">[</bpt>CMFCBaseTabCtrl::AddTab<ept id=\"p1\">](../../mfc/reference/cmfcbasetabctrl-class.md#cmfcbasetabctrl__addtab)</ept> method that is inherited by the tab control to specify the index of the image to display.","source":"Use the [CMFCBaseTabCtrl::AddTab](../../mfc/reference/cmfcbasetabctrl-class.md#cmfcbasetabctrl__addtab) method that is inherited by the tab control to specify the index of the image to display."},{"pos":[40048,40074],"content":"CMFCTabCtrl::SetResizeMode"},{"content":"Specifies how the current tab control can be resized and then redisplays the control.","pos":[40078,40163]},{"content":"Parameters","pos":[40231,40241]},{"content":"[in]","pos":[40245,40249]},{"content":"One of the <ph id=\"ph1\">`CMFCTabCtrl::ResizeMode`</ph> enumeration values that specifies how the tab control can be resized.","pos":[40266,40372],"source":" One of the `CMFCTabCtrl::ResizeMode` enumeration values that specifies how the tab control can be resized."},{"content":"For a list of possible values, see the table in Remarks.","pos":[40373,40429]},{"content":"Remarks","pos":[40439,40446]},{"pos":[40450,40537],"content":"The <ph id=\"ph1\">`resizeMode`</ph> parameter can be one of the following <ph id=\"ph2\">`ResizeMode`</ph> enumeration values.","source":"The `resizeMode` parameter can be one of the following `ResizeMode` enumeration values."},{"content":"Name","pos":[40544,40548]},{"content":"Description","pos":[40549,40560]},{"content":"RESIZE_NO","pos":[40598,40607]},{"content":"The tab control cannot be resized.","pos":[40608,40642]},{"content":"RESIZE_VERT","pos":[40647,40658]},{"content":"The tab control can be resized vertically but not horizontally.","pos":[40659,40722]},{"content":"RESIZE_HORIZ","pos":[40727,40739]},{"content":"The tab control can be resized horizontally but not vertically.","pos":[40740,40803]},{"pos":[40858,40885],"content":"CMFCTabCtrl::SetTabMaxWidth"},{"content":"Specifies the maximum tab width in a tabbed window.","pos":[40889,40940]},{"content":"Parameters","pos":[41004,41014]},{"content":"[in]","pos":[41018,41022]},{"content":"The maximum tab width, in pixels.","pos":[41041,41074]},{"content":"Remarks","pos":[41084,41091]},{"content":"Use this method to limit the width of each tab in a tabbed window.","pos":[41095,41161]},{"content":"This method is useful if tabs have very long labels.","pos":[41162,41214]},{"content":"The <bpt id=\"p1\">[</bpt>CMFCTabCtrl<ept id=\"p1\">](../../mfc/reference/cmfctabctrl-class.md)</ept> class constructor initializes the maximum tab width to 0, which actually means that the width is not limited.","pos":[41215,41384],"source":" The [CMFCTabCtrl](../../mfc/reference/cmfctabctrl-class.md) class constructor initializes the maximum tab width to 0, which actually means that the width is not limited."},{"pos":[41434,41457],"content":"CMFCTabCtrl::StopResize"},{"content":"Terminates the current resize operation on the tab control.","pos":[41461,41520]},{"content":"Parameters","pos":[41576,41586]},{"content":"[in]","pos":[41590,41594]},{"content":"to abandon the current resize operation; <ph id=\"ph1\">`FALSE`</ph> to complete the current resize operation.","pos":[41615,41705],"source":" to abandon the current resize operation; `FALSE` to complete the current resize operation."},{"content":"In either case, the framework stops drawing the resize rectangle.","pos":[41706,41771]},{"pos":[41831,41864],"content":"CMFCTabCtrl::SynchronizeScrollBar"},{"content":"Draws a horizontal scroll bar on a tab control that displays flat tabs.","pos":[41868,41939]},{"content":"Parameters","pos":[42023,42033]},{"content":"[out]","pos":[42037,42042]},{"content":"Pointer to a <bpt id=\"p1\">[</bpt>SCROLLINFO<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb787537)</ept> structure or <ph id=\"ph1\">`NULL`</ph>.","pos":[42060,42166],"source":" Pointer to a [SCROLLINFO](http://msdn.microsoft.com/library/windows/desktop/bb787537) structure or `NULL`."},{"content":"When this method returns, and if this parameter is not <ph id=\"ph1\">`NULL`</ph>, the structure contains all the parameters of the scroll bar.","pos":[42167,42290],"source":" When this method returns, and if this parameter is not `NULL`, the structure contains all the parameters of the scroll bar."},{"content":"The default value is <ph id=\"ph1\">`NULL`</ph>.","pos":[42291,42319],"source":" The default value is `NULL`."},{"content":"Return Value","pos":[42329,42341]},{"pos":[42352,42396],"content":"if this method succeeds; otherwise, <ph id=\"ph1\">`FALSE`</ph>.","source":" if this method succeeds; otherwise, `FALSE`."},{"content":"Remarks","pos":[42406,42413]},{"content":"This method affects only a tab control that displays flat tabs.","pos":[42417,42480]},{"content":"The scroll bar influences all the tabs at the same time.","pos":[42481,42537]},{"content":"See Also","pos":[42546,42554]},{"content":"Hierarchy Chart","pos":[42559,42574]},{"content":"Classes","pos":[42611,42618]},{"content":"CDockablePane Class","pos":[42661,42680]},{"content":"CDockablePane Class","pos":[42731,42750]},{"content":"CMFCBaseTabCtrl Class","pos":[42801,42822]}],"content":"---\ntitle: \"CMFCTabCtrl Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"CMFCTabCtrl\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"CMFCTabCtrl::SwapTabs method\"\n  - \"CMFCTabCtrl constructor\"\n  - \"CMFCTabCtrl::MoveTab method\"\n  - \"CMFCTabCtrl::GetTabFromPoint method\"\n  - \"CMFCTabCtrl::PreTranslateMessage method\"\n  - \"CMFCTabCtrl::RecalcLayout method\"\n  - \"CMFCTabCtrl class\"\n  - \"CMFCTabCtrl::IsPtInTabArea method\"\nms.assetid: d441385d-2c72-4203-96fa-deae2273da35\ncaps.latest.revision: 33\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# CMFCTabCtrl Class\nThe `CMFCTabCtrl` class provides functionality for a tab control. The tab control displays a dockable window with flat or three-dimensional tabs at its top or bottom. The tabs can display text and an image and can change color when active.  \n  \n## Syntax  \n  \n```  \nclass CMFCTabCtrl : public CMFCBaseTabCtrl  \n```  \n  \n## Members  \n  \n### Public Constructors  \n  \n|Name|Description|  \n|----------|-----------------|  \n|`CMFCTabCtrl::CMFCTabCtrl`|Default constructor.|  \n|`CMFCTabCtrl::~CMFCTabCtrl`|Destructor.|  \n  \n### Public Methods  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CMFCTabCtrl::ActivateMDITab](#cmfctabctrl__activatemditab)|Displays the specified tab of the current tab control and sets the focus on that tab.|  \n|[CMFCTabCtrl::AllowDestroyEmptyTabbedPane](#cmfctabctrl__allowdestroyemptytabbedpane)||  \n|[CMFCTabCtrl::AutoSizeWindow](#cmfctabctrl__autosizewindow)|Specifies whether the framework is to resize the client area of all tab control windows when a user interface element of the tab control changes.|  \n|[CMFCTabCtrl::CalcRectEdit](#cmfctabctrl__calcrectedit)|Deflates the size of the specified tab area. (Overrides `CMFCBaseTabCtrl::CalcRectEdit`.)|  \n|[CMFCTabCtrl::Create](#cmfctabctrl__create)|Creates the tab control and attaches it to the `CMFCTabCtrl` object.|  \n|`CMFCTabCtrl::CreateObject`|Used by the framework to create a dynamic instance of this class type.|  \n|[CMFCTabCtrl::EnableActiveTabCloseButton](#cmfctabctrl__enableactivetabclosebutton)|Shows or hides a Close button ( **X**) on the active tab.|  \n|[CMFCTabCtrl::EnableInPlaceEdit](#cmfctabctrl__enableinplaceedit)|Enables or disables editable tab labels. (Overrides [CMFCBaseTabCtrl::EnableInPlaceEdit](../../mfc/reference/cmfcbasetabctrl-class.md#cmfcbasetabctrl__enableinplaceedit).)|  \n|[CMFCTabCtrl::EnableTabDocumentsMenu](#cmfctabctrl__enabletabdocumentsmenu)|Replaces two buttons that scroll the window tabs with a button that opens a menu of tabbed windows.|  \n|[CMFCTabCtrl::EnsureVisible](#cmfctabctrl__ensurevisible)|Ensures that a tab is visible.|  \n|[CMFCTabCtrl::GetDocumentIcon](#cmfctabctrl__getdocumenticon)|Retrieves the symbol that is associated with a tab in a popup menu of tabbed windows.|  \n|[CMFCTabCtrl::GetFirstVisibleTabNum](#cmfctabctrl__getfirstvisibletabnum)|Retrieves the index of the first tab that is visible in the current tab control.|  \n|[CMFCTabCtrl::GetResizeMode](#cmfctabctrl__getresizemode)|Retrieves a value that specifies how the current tab control can be resized.|  \n|[CMFCTabCtrl::GetScrollBar](#cmfctabctrl__getscrollbar)|Retrieves a pointer to the scroll bar object that is associated with the tab control.|  \n|[CMFCTabCtrl::GetTabArea](#cmfctabctrl__gettabarea)|Retrieves the bounding rectangle of the tab label area at the top or bottom of the tab control. (Overrides [CMFCBaseTabCtrl::GetTabArea](../../mfc/reference/cmfcbasetabctrl-class.md#cmfcbasetabctrl__gettabarea).)|  \n|`CMFCTabCtrl::GetTabFromPoint`|Retrieves the tab that contains a specified point. (Overrides [CMFCBaseTabCtrl::GetTabFromPoint](../../mfc/reference/cmfcbasetabctrl-class.md#cmfcbasetabctrl__gettabfrompoint).)|  \n|[CMFCTabCtrl::GetTabMaxWidth](#cmfctabctrl__gettabmaxwidth)|Retrieves the maximum width of a tab.|  \n|[CMFCTabCtrl::GetTabsHeight](#cmfctabctrl__gettabsheight)|Retrieves the height of the tab area of the current tab control.|  \n|[CMFCTabCtrl::GetTabsRect](#cmfctabctrl__gettabsrect)|Retrieves a rectangle that bounds the tab area of the current tab control. (Overrides [CMFCBaseTabCtrl::GetTabsRect](../../mfc/reference/cmfcbasetabctrl-class.md#cmfcbasetabctrl__gettabsrect).)|  \n|`CMFCTabCtrl::GetThisClass`|Used by the framework to obtain a pointer to the [CRuntimeClass](../../mfc/reference/cruntimeclass-structure.md) object that is associated with this class type.|  \n|[CMFCTabCtrl::GetWndArea](#cmfctabctrl__getwndarea)|Retrieves the boundary of the client area of the current tab control.|  \n|[CMFCTabCtrl::HideActiveWindowHorzScrollBar](#cmfctabctrl__hideactivewindowhorzscrollbar)|Hides the horizontal scroll bar, if any, of the active window.|  \n|[CMFCTabCtrl::HideInactiveWindow](#cmfctabctrl__hideinactivewindow)|Specifies whether the framework is to display inactive tab control windows.|  \n|[CMFCTabCtrl::HideNoTabs](#cmfctabctrl__hidenotabs)|Enables or disables drawing the tab area if there are no visible tabs.|  \n|[CMFCTabCtrl::HideSingleTab](#cmfctabctrl__hidesingletab)|Enables or disables drawing a tab when there is a single tabbed window. (Overrides [CMFCBaseTabCtrl::HideSingleTab](../../mfc/reference/cmfcbasetabctrl-class.md#cmfcbasetabctrl__hidesingletab).)|  \n|[CMFCTabCtrl::IsActiveInMDITabGroup](#cmfctabctrl__isactiveinmditabgroup)|Indicates whether the current tab of a tab control is the active tab in an multiple document interface tab group.|  \n|[CMFCTabCtrl::IsActiveTabBoldFont](#cmfctabctrl__isactivetabboldfont)|Indicates whether the text of the active tab is displayed using a bold font.|  \n|[CMFCTabCtrl::IsActiveTabCloseButton](#cmfctabctrl__isactivetabclosebutton)|Indicates whether the Close button ( **X**) is displayed on an active tab or the upper-right corner of the tab area.|  \n|[CMFCTabCtrl::IsDrawFrame](#cmfctabctrl__isdrawframe)|Indicates whether the tabbed window draws a frame rectangle around embedded panes.|  \n|[CMFCTabCtrl::IsFlatFrame](#cmfctabctrl__isflatframe)|Indicates whether the frame around the tab area is flat or 3D.|  \n|[CMFCTabCtrl::IsFlatTab](#cmfctabctrl__isflattab)|Indicates whether the appearance of the tabs in the current tab control is flat or not.|  \n|[CMFCTabCtrl::IsLeftRightRounded](#cmfctabctrl__isleftrightrounded)|Indicates whether the appearance of the left and right side of a tab in the current tab control is rounded.|  \n|[CMFCTabCtrl::IsMDITabGroup](#cmfctabctrl__ismditabgroup)|Indicates whether the current tab control is contained in the client area of a multiple-document interface window.|  \n|[CMFCTabCtrl::IsOneNoteStyle](#cmfctabctrl__isonenotestyle)|Indicates whether the current tab control is displayed in the style of Microsoft OneNote.|  \n|`CMFCTabCtrl::IsPtInTabArea`|Determines if a point is inside the tab area. (Overrides [CMFCBaseTabCtrl::IsPtInTabArea](../../mfc/reference/cmfcbasetabctrl-class.md#cmfcbasetabctrl__isptintabarea).)|  \n|[CMFCTabCtrl::IsSharedScroll](#cmfctabctrl__issharedscroll)|Indicates whether the current tab control has a scroll bar that can scroll its tabs as a group.|  \n|[CMFCTabCtrl::IsTabDocumentsMenu](#cmfctabctrl__istabdocumentsmenu)|Indicates whether the tab control displays scroll buttons or a button that displays a menu of tabbed windows.|  \n|[CMFCTabCtrl::IsVS2005Style](#cmfctabctrl__isvs2005style)|Indicates whether tabs are displayed in the style of Visual Studio .NET 2005.|  \n|[CMFCTabCtrl::ModifyTabStyle](#cmfctabctrl__modifytabstyle)|Specifies the appearance of tabs in the current tab control.|  \n|`CMFCTabCtrl::MoveTab`|Moves a tab to another tab position. (Overrides [CMFCBaseTabCtrl::MoveTab](../../mfc/reference/cmfcbasetabctrl-class.md#cmfcbasetabctrl__movetab).)|  \n|[CMFCTabCtrl::OnDragEnter](#cmfctabctrl__ondragenter)|Called by the framework when the cursor is first dragged into the tab control window.|  \n|[CMFCTabCtrl::OnDragOver](#cmfctabctrl__ondragover)|Called by the framework during a drag operation when the mouse is moved over the drop target window. (Overrides [CMFCBaseTabCtrl::OnDragOver](../../mfc/reference/cmfcbasetabctrl-class.md#cmfcbasetabctrl__ondragover).)|  \n|[CMFCTabCtrl::OnShowTabDocumentsMenu](#cmfctabctrl__onshowtabdocumentsmenu)|Displays a popup menu of tabbed windows, waits until the user selects a tab, and makes the selected tab the active tab.|  \n|`CMFCTabCtrl::PreTranslateMessage`|Translates window messages before they are dispatched to the [TranslateMessage](http://msdn.microsoft.com/library/windows/desktop/ms644955) and [DispatchMessage](http://msdn.microsoft.com/library/windows/desktop/ms644934) Windows functions. (Overrides [CMFCBaseTabCtrl::PreTranslateMessage](../../mfc/reference/cmfcbasetabctrl-class.md#cmfcbasetabctrl__pretranslatemessage).)|  \n|`CMFCTabCtrl::RecalcLayout`|Recalculates the internal layout of the tab control. (Overrides [CMFCBaseTabCtrl::RecalcLayout](../../mfc/reference/cmfcbasetabctrl-class.md#cmfcbasetabctrl__recalclayout).)|  \n|[CMFCTabCtrl::SetActiveInMDITabGroup](#cmfctabctrl__setactiveinmditabgroup)|Sets the current tab of a tab control as the active tab in an multiple document interface tab group.|  \n|[CMFCTabCtrl::SetActiveTab](#cmfctabctrl__setactivetab)|Activates a tab. (Overrides [CMFCBaseTabCtrl::SetActiveTab](../../mfc/reference/cmfcbasetabctrl-class.md#cmfcbasetabctrl__setactivetab).)|  \n|[CMFCTabCtrl::SetActiveTabBoldFont](#cmfctabctrl__setactivetabboldfont)|Enables or disables use of a bold font on active tabs.|  \n|[CMFCTabCtrl::SetDrawFrame](#cmfctabctrl__setdrawframe)|Enables or disables drawinga frame rectangle around an embedded bar.|  \n|[CMFCTabCtrl::SetFlatFrame](#cmfctabctrl__setflatframe)|Specifies whether to draw a flat or a 3D frame around the tab area.|  \n|[CMFCTabCtrl::SetImageList](#cmfctabctrl__setimagelist)|Specifies an image list. (Overrides [CMFCBaseTabCtrl::SetImageList](../../mfc/reference/cmfcbasetabctrl-class.md#cmfcbasetabctrl__setimagelist).)|  \n|[CMFCTabCtrl::SetResizeMode](#cmfctabctrl__setresizemode)|Specifies how the current tab control can be resized and then redisplays the control.|  \n|[CMFCTabCtrl::SetTabMaxWidth](#cmfctabctrl__settabmaxwidth)|Specifies the maximum tab width in a tabbed window.|  \n|[CMFCTabCtrl::StopResize](#cmfctabctrl__stopresize)|Terminates the current resize operation on the tab control.|  \n|`CMFCTabCtrl::SwapTabs`|Swaps a pair of tabs. (Overrides [CMFCBaseTabCtrl::SwapTabs](../../mfc/reference/cmfcbasetabctrl-class.md#cmfcbasetabctrl__swaptabs).)|  \n|[CMFCTabCtrl::SynchronizeScrollBar](#cmfctabctrl__synchronizescrollbar)|Draws a horizontal scroll bar on a tab control that displays flat tabs.|  \n  \n### Data Members  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CMFCTabCtrl::m_bEnableActivate](#cmfctabctrl__m_benableactivate)|Prevents the active view from losing focus when a new tab is inserted and enabled.|  \n  \n## Remarks  \n The `CMFCTabCtrl` class supports:  \n  \n-   Tab control styles that include 3D, flat, and flat with a shared horizontal scroll bar.  \n  \n-   Tabs located at the top or the bottom of the window.  \n  \n-   Tabs that display text, images, or text and images.  \n  \n-   Tabs that change color when the tab is active.  \n  \n-   Border size changes for adjustable tabs.  \n  \n-   Detachable tabbed windows.  \n  \n The `CMFCTabCtrl` class can be used with a dialog box, but is intended for applications that use docking control bars like [!INCLUDE[ofprexcel](../../mfc/reference/includes/ofprexcel_md.md)] and [!INCLUDE[vsprvs](../../assembler/masm/includes/vsprvs_md.md)]. For more information, see [CDockablePane Class](../../mfc/reference/cdockablepane-class.md).  \n  \n Follow these steps to add a resizable, docking tab control in your application:  \n  \n1.  Create an instance of [CTabbedPane Class](../../mfc/reference/ctabbedpane-class.md).  \n  \n2.  Call [CDockablePane::Create](../../mfc/reference/cdockablepane-class.md#cdockablepane__create).  \n  \n3.  Use [CBaseTabbedPane::AddTab](../../mfc/reference/cbasetabbedpane-class.md#cbasetabbedpane__addtab) or [CMFCBaseTabCtrl::InsertTab](../../mfc/reference/cmfcbasetabctrl-class.md#cmfcbasetabctrl__inserttab) to add new tabs.  \n  \n4.  Call [CBasePane::EnableDocking](../../mfc/reference/cbasepane-class.md#cbasepane__enabledocking) so that the current docking tab control can dock at the main frame window.  \n  \n5.  Call [CFrameWndEx::DockPane](../../mfc/reference/cframewndex-class.md#cframewndex__dockpane) to dock the tabbed window at the main frame.  \n  \n For an example of how to create a tabbed window as a docking control bar, see [CTabbedPane Class](../../mfc/reference/ctabbedpane-class.md). To use `CMFCTabCtrl` as a non-docking control, create a `CMFCTabCtrl` object and then call [CMFCTabCtrl::Create](#cmfctabctrl__create).  \n  \n## Inheritance Hierarchy  \n [CObject](../../mfc/reference/cobject-class.md)  \n  \n [CCmdTarget](../../mfc/reference/ccmdtarget-class.md)  \n  \n [CWnd](../../mfc/reference/cwnd-class.md)  \n  \n [CMFCBaseTabCtrl](../../mfc/reference/cmfcbasetabctrl-class.md)  \n  \n [CMFCTabCtrl](../../mfc/reference/cmfctabctrl-class.md)  \n  \n## Example  \n The following example demonstrates how to use various methods in the `CMFCTabCtrl` class to configure a `CMFCTabCtrl` object. The example explains how to add a tab, show the Close button on the active tab, enable editable tab labels, and display a pop-up menu of tabbed window labels. This example is part of the [State Collection sample](../../visual-cpp-samples.md).  \n  \n [!code-cpp[NVC_MFC_StateCollection#1](../../mfc/reference/codesnippet/cpp/cmfctabctrl-class_1.h)]  \n[!code-cpp[NVC_MFC_StateCollection#3](../../mfc/reference/codesnippet/cpp/cmfctabctrl-class_2.cpp)]  \n  \n## Requirements  \n **Header:** afxtabctrl.h  \n  \n##  <a name=\"cmfctabctrl__activatemditab\"></a>  CMFCTabCtrl::ActivateMDITab  \n Displays the specified tab of the current tab control and sets the focus on that tab.  \n  \n```  \nvoid ActivateMDITab(int nTab = -1);\n```  \n  \n### Parameters  \n [in] `nTab`  \n The zero-based index of a tab to display, or -1 to specify the currently active tab.  \n  \n##  <a name=\"cmfctabctrl__allowdestroyemptytabbedpane\"></a>  CMFCTabCtrl::AllowDestroyEmptyTabbedPane  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvirtual BOOL AllowDestroyEmptyTabbedPane() const;\n\n \n```  \n  \n### Return Value  \n Always `TRUE`.  \n  \n### Remarks  \n  \n##  <a name=\"cmfctabctrl__autosizewindow\"></a>  CMFCTabCtrl::AutoSizeWindow  \n Specifies whether the framework is to resize the client area of all tab control windows when a user interface element of the tab control changes.  \n  \n```  \nvoid AutoSizeWindow(BOOL bAutoSize = TRUE);\n```  \n  \n### Parameters  \n [in] `bAutoSize`  \n `TRUE` to automatically resize tab control windows; otherwise, `FALSE`. The default value is `TRUE`.  \n  \n### Remarks  \n  \n##  <a name=\"cmfctabctrl__create\"></a>  CMFCTabCtrl::Create  \n Creates the tab control and attaches it to the `CMFCTabCtrl` object.  \n  \n```  \nBOOL Create(\n    Style style,  \n    const RECT& rect,  \n    CWnd* pParentWnd,  \n    UINT nID,  \n    Location location=LOCATION_BOTTOM,  \n    BOOL bCloseBtn=FALSE);\n```  \n  \n### Parameters  \n [in] `style`  \n The style of the tab control. For more information, see Remarks.  \n  \n [in] `rect`  \n A rectangle that bounds the tab control.  \n  \n [in] `pParentWnd`  \n A pointer to a parent window. Must not be `NULL`.  \n  \n [in] `nID`  \n The ID of the tab control.  \n  \n [in] `location`  \n The location of tabs. The default value is `LOCATION_BOTTOM`. For more information, see Remarks.  \n  \n [in] `bCloseBtn`  \n `TRUE` to display a close button on the tab; otherwise, `FALSE`. The default value is `FALSE`.  \n  \n### Return Value  \n `TRUE` if successful; otherwise, `FALSE`.  \n  \n### Remarks  \n The following table describes the values you can specify for the `style` parameter.  \n  \n|Style|Description|  \n|-----------|-----------------|  \n|STYLE_3D|Creates a tab control with a three-dimensional appearance.|  \n|STYLE_FLAT|Creates a tab control with flat tabs.|  \n|STYLE_FLAT_SHARED_HORZ_SCROLL|Creates a tab control with flat tabs and a scroll bar that can scroll the tabs if they are clipped by a parent window.|  \n|STYLE_3D_ONENOTE|Creates a tab control in the style of Microsoft OneNote.|  \n|STYLE_3D_VS2005|Creates a tab control in the style of Microsoft Visual Studio 2005.|  \n|STYLE_3D_ROUNDED|Creates a tab control with rounded tabs in the style of Microsoft Visual Studio 2005.|  \n|STYLE_3D_ROUNDED_SCROLL|Creates a tab control with rounded tabs and scroll buttons in the style of Microsoft Visual Studio 2005.|  \n  \n The following table lists the values you can specify for the `location` parameter.  \n  \n|Location|Description|  \n|--------------|-----------------|  \n|LOCATION_BOTTOM|Tabs are located at the bottom of the tab control.|  \n|LOCATION_TOP|Tabs are located at the top of the tab control.|  \n  \n### Example  \n The following example demonstrates how to use the `Create` method in the `CMFCTabCtrl` class. This example is part of the [State Collection sample](../../visual-cpp-samples.md).  \n  \n [!code-cpp[NVC_MFC_StateCollection#1](../../mfc/reference/codesnippet/cpp/cmfctabctrl-class_1.h)]  \n[!code-cpp[NVC_MFC_StateCollection#2](../../mfc/reference/codesnippet/cpp/cmfctabctrl-class_3.cpp)]  \n  \n##  <a name=\"cmfctabctrl__calcrectedit\"></a>  CMFCTabCtrl::CalcRectEdit  \n Deflates the size of the specified tab area.  \n  \n```  \nvirtual void CalcRectEdit(CRect& rectEdit);\n```  \n  \n### Parameters  \n [in] `rectEdit`  \n A rectangle that specifies the area of a tab.  \n  \n### Remarks  \n This method is called when you change the label of a tab. This method deflates the left and right sides of the specified rectangle by one-half the current tab height, and deflates the top and bottom by one unit.  \n  \n##  <a name=\"cmfctabctrl__enableactivetabclosebutton\"></a>  CMFCTabCtrl::EnableActiveTabCloseButton  \n Shows or hides a Close button ( **X**) on the active tab.  \n  \n```  \nvoid EnableActiveTabCloseButton(BOOL bEnable=TRUE);\n```  \n  \n### Parameters  \n [in] `bEnable`  \n `TRUE` to display the Close button on the active tab; `FALSE` to display the Close button on the upper-right corner of the tab area. The default value is `TRUE`.  \n  \n##  <a name=\"cmfctabctrl__enableinplaceedit\"></a>  CMFCTabCtrl::EnableInPlaceEdit  \n Enables or disables editable tab labels.  \n  \n```  \nvirtual void EnableInPlaceEdit(BOOL bEnable);\n```  \n  \n### Parameters  \n [in] `bEnable`  \n `TRUE` to enable editable tab labels; `FALSE` to disable editable tab labels.  \n  \n### Remarks  \n  \n##  <a name=\"cmfctabctrl__enabletabdocumentsmenu\"></a>  CMFCTabCtrl::EnableTabDocumentsMenu  \n Toggles between a user interface that uses two buttons to scroll the window tabs and an interface that displays a pop-up menu of tabbed windows.  \n  \n```  \nvoid EnableTabDocumentsMenu(BOOL bEnable=TRUE);\n```  \n  \n### Parameters  \n [in] `bEnable`  \n `TRUE` to display a pop-up menu of tabbed window labels; `FALSE` to display forward and backward scroll buttons. The default value is `TRUE`.  \n  \n### Remarks  \n When the user clicks a tab label, the framework displays the corresponding tabbed window. If the tab label is visible, the tabbed window is opened without changing its position. If the user selects a document from the pop-up menu and the corresponding tabbed window is off screen, the tabbed window becomes the first tab.  \n  \n##  <a name=\"cmfctabctrl__ensurevisible\"></a>  CMFCTabCtrl::EnsureVisible  \n Ensures that a tab is visible.  \n  \n```  \nvirtual BOOL EnsureVisible(int iTab);\n```  \n  \n### Parameters  \n [in] `iTab`  \n The zero-based index of a tab.  \n  \n### Return Value  \n `TRUE` if it is successful; `FALSE` if the `iTab` parameter index is invalid.  \n  \n### Remarks  \n Use this method to guarantee that the specified tab is visible. The tab control will scroll if it is required.  \n  \n##  <a name=\"cmfctabctrl__getdocumenticon\"></a>  CMFCTabCtrl::GetDocumentIcon  \n Retrieves the image that is associated with a tab in a pop-up menu of tabbed windows.  \n  \n```  \nstatic HICON __stdcall GetDocumentIcon(UINT nCmdID);\n```  \n  \n### Parameters  \n [in] `nCmdID`  \n The command ID of a tab in a pop-up menu of tabbed windows.  \n  \n### Return Value  \n The handle of a bitmap image.  \n  \n##  <a name=\"cmfctabctrl__getfirstvisibletabnum\"></a>  CMFCTabCtrl::GetFirstVisibleTabNum  \n Retrieves the index of the first tab that is visible in the current tab control.  \n  \n```  \nvirtual int GetFirstVisibleTabNum() const;\n\n \n```  \n  \n### Return Value  \n The zero-based index of a tab in the tab control.  \n  \n### Remarks  \n Use this method only when the tab control is displayed in the style of Microsoft OneNote. Use the [CMFCTabCtrl::IsOneNoteStyle](#cmfctabctrl__isonenotestyle) method to determine the style.  \n  \n##  <a name=\"cmfctabctrl__getresizemode\"></a>  CMFCTabCtrl::GetResizeMode  \n Retrieves a value that specifies how the current tab control can be resized.  \n  \n```  \nResizeMode GetResizeMode() const;\n\n \n```  \n  \n### Return Value  \n One of the `CMFCTabCtrl::ResizeMode` enumeration values that specifies how the tab control can be resized. For a list of possible values, see the Remarks section of the [CMFCTabCtrl::SetResizeMode](#cmfctabctrl__setresizemode) method.  \n  \n##  <a name=\"cmfctabctrl__getscrollbar\"></a>  CMFCTabCtrl::GetScrollBar  \n Retrieves a pointer to the scroll bar object that is associated with the tab control.  \n  \n```  \nCScrollBar* GetScrollBar();\n```  \n  \n### Return Value  \n A pointer to a scrollbar object, or a `NULL` if the tab control was not created by using the `STYLE_FLAT_SHARED_HORZ_SCROLL` style.  \n  \n### Remarks  \n Use this method to access the tab control's embedded scroll bar. A scroll bar object is created only when the tab control has the `STYLE_FLAT_SHARED_HORZ_SCROLL` style.  \n  \n##  <a name=\"cmfctabctrl__gettabarea\"></a>  CMFCTabCtrl::GetTabArea  \n Retrieves the bounding rectangle of the tab label area at the top or bottom of the tab control.  \n  \n```  \nvoid GetTabArea(\n    CRect& rectTabAreaTop,  \n    CRect& rectTabAreaBottom) const;\n\n \n```  \n  \n### Parameters  \n [out] `rectTabAreaTop`  \n When this method returns, this reference contains a rectangle that bounds the top tab label area. The rectangle is in client coordinates. This reference is empty if no tab label area exists at the top of the tab control.  \n  \n [out] `rectTabAreaBottom`  \n When this method returns, this reference contains a rectangle that bounds the bottom tab label area. The rectangle is in client coordinates. This reference is empty if no tab label area exists at the bottom of the tab control.  \n  \n### Remarks  \n Use this method to determine the size and position of the tab area in the tabbed window.  \n  \n##  <a name=\"cmfctabctrl__gettabmaxwidth\"></a>  CMFCTabCtrl::GetTabMaxWidth  \n Retrieves the maximum width of a tab.  \n  \n```  \nint GetTabMaxWidth() const;\n\n \n```  \n  \n### Return Value  \n Maximum width of a tab, in pixels. If the return value is 0, the tab width is unlimited.  \n  \n### Remarks  \n Use the [CMFCTabCtrl::SetTabMaxWidth](#cmfctabctrl__settabmaxwidth) method to set maximum tab width.  \n  \n##  <a name=\"cmfctabctrl__gettabsheight\"></a>  CMFCTabCtrl::GetTabsHeight  \n Retrieves the height of the tab area of the current tab control.  \n  \n```  \nvirtual int GetTabsHeight() const;\n\n \n```  \n  \n### Return Value  \n The height of the tab area if any tab is visible, or zero if no tab is visible.  \n  \n##  <a name=\"cmfctabctrl__gettabsrect\"></a>  CMFCTabCtrl::GetTabsRect  \n Retrieves a rectangle that bounds the tab area of the current tab control.  \n  \n```  \nvirtual void GetTabsRect(CRect& rect) const;\n\n \n```  \n  \n### Parameters  \n [out] `rect`  \n When this method returns, the `rect` parameter contains a rectangle that bounds the tab area.  \n  \n##  <a name=\"cmfctabctrl__getwndarea\"></a>  CMFCTabCtrl::GetWndArea  \n Retrieves the boundary of the client area of the current tab control.  \n  \n```  \nvoid GetWndArea(CRect& rect) const;\n\n \n```  \n  \n### Parameters  \n [in, out] `rect`  \n When this method returns, this parameter contains a rectangle that bounds the current tab control.  \n  \n### Remarks  \n  \n##  <a name=\"cmfctabctrl__hideactivewindowhorzscrollbar\"></a>  CMFCTabCtrl::HideActiveWindowHorzScrollBar  \n Hides the horizontal scroll bar, if any, in the active window.  \n  \n```  \nvoid HideActiveWindowHorzScrollBar();\n```  \n  \n### Remarks  \n Use this method to prevent the tab control from blinking when the user switches between tab control pages.  \n  \n##  <a name=\"cmfctabctrl__hideinactivewindow\"></a>  CMFCTabCtrl::HideInactiveWindow  \n Specifies whether the framework displays inactive tab control windows.  \n  \n```  \nvoid HideInactiveWindow(BOOL bHide = TRUE);\n```  \n  \n### Parameters  \n [in] `bHide`  \n `TRUE` not to display an inactive window; `FALSE` to display an inactive window. The default value is `TRUE`.  \n  \n### Remarks  \n  \n##  <a name=\"cmfctabctrl__hidenotabs\"></a>  CMFCTabCtrl::HideNoTabs  \n Enables or disables drawing of the tab area if there are no visible tabs.  \n  \n```  \nvoid HideNoTabs(BOOL bHide=TRUE);\n```  \n  \n### Parameters  \n [in] `bHide`  \n `TRUE` to enable drawing the tab area; `FALSE` to disable drawing. The default value is `TRUE`.  \n  \n### Remarks  \n  \n##  <a name=\"cmfctabctrl__hidesingletab\"></a>  CMFCTabCtrl::HideSingleTab  \n Enables or disables tab drawing if there is a single tabbed window.  \n  \n```  \nvirtual void HideSingleTab(BOOL bHide=TRUE);\n```  \n  \n### Parameters  \n [in] `bHide`  \n `TRUE` to not draw a tab for a single tabbed window; `FALSE` to draw a single tab. The default value is `TRUE`.  \n  \n### Remarks  \n  \n##  <a name=\"cmfctabctrl__isactiveinmditabgroup\"></a>  CMFCTabCtrl::IsActiveInMDITabGroup  \n Indicates whether the current tab of a tab control is the active tab in a multiple document interface tab group.  \n  \n```  \nBOOL IsActiveInMDITabGroup() const;\n\n \n```  \n  \n### Return Value  \n `TRUE` if the current tab of a tab control is the active tab in an MDI tab group; otherwise, `FALSE`.  \n  \n### Remarks  \n You can organize multiple document windows into either vertical or horizontal tab groups and easily shuffle documents from one tab group to another.  \n  \n##  <a name=\"cmfctabctrl__isactivetabboldfont\"></a>  CMFCTabCtrl::IsActiveTabBoldFont  \n Indicates whether the text of the active tab is displayed using a bold font.  \n  \n```  \nBOOL IsActiveTabBoldFont() const;\n\n \n```  \n  \n### Return Value  \n `TRUE` if the active tab is displayed using the bold font; otherwise, `FALSE`.  \n  \n### Remarks  \n Use the [CMFCTabCtrl::SetActiveTabBoldFont](#cmfctabctrl__setactivetabboldfont) method to change the active tab font.  \n  \n##  <a name=\"cmfctabctrl__isactivetabclosebutton\"></a>  CMFCTabCtrl::IsActiveTabCloseButton  \n Indicates whether the Close button ( **X**) is displayed on an active tab or on the upper-right corner of the tab area.  \n  \n```  \nvirtual BOOL IsActiveTabCloseButton() const;\n\n \n```  \n  \n### Return Value  \n `TRUE` if the Close button is displayed on the active tab; `FALSE` if the Close button is displayed on the upper-right corner of the tab area.  \n  \n### Remarks  \n  \n##  <a name=\"cmfctabctrl__isdrawframe\"></a>  CMFCTabCtrl::IsDrawFrame  \n Indicates whether the tabbed window draws a frame rectangle around embedded panes.  \n  \n```  \nBOOL IsDrawFrame() const;\n\n \n```  \n  \n### Return Value  \n `TRUE` if a frame rectangle is drawn; otherwise, `FALSE`.  \n  \n### Remarks  \n Use the [CMFCTabCtrl::SetDrawFrame](#cmfctabctrl__setdrawframe) method to enable or disable drawing a frame rectangle.  \n  \n##  <a name=\"cmfctabctrl__isflatframe\"></a>  CMFCTabCtrl::IsFlatFrame  \n Indicates whether the frame around the tab area is flat or 3D.  \n  \n```  \nBOOL IsFlatFrame() const;\n\n \n```  \n  \n### Return Value  \n `TRUE` if the frame around the tab area is flat; `FALSE` if the frame is three-dimensional.  \n  \n### Remarks  \n Use the [CMFCTabCtrl::SetFlatFrame](#cmfctabctrl__setflatframe) method to change how the frame is drawn.  \n  \n##  <a name=\"cmfctabctrl__isflattab\"></a>  CMFCTabCtrl::IsFlatTab  \n Indicates whether the appearance of the tabs in the current tab control is flat or not.  \n  \n```  \nvirtual BOOL IsFlatTab() const;\n\n \n```  \n  \n### Return Value  \n `TRUE` if the appearance of the tabs in the current tab control is flat; otherwise, `FALSE`.  \n  \n##  <a name=\"cmfctabctrl__isleftrightrounded\"></a>  CMFCTabCtrl::IsLeftRightRounded  \n Indicates whether the appearance of the left and right side of a tab in the current tab control is rounded.  \n  \n```  \nvirtual BOOL IsLeftRightRounded() const;\n\n \n```  \n  \n### Return Value  \n `TRUE` if the sides of each tab is rounded; otherwise, `FALSE`.  \n  \n##  <a name=\"cmfctabctrl__ismditabgroup\"></a>  CMFCTabCtrl::IsMDITabGroup  \n Indicates whether the current tab control is contained in the client area of a multiple-document interface window.  \n  \n```  \nvirtual BOOL IsMDITabGroup() const;\n\n \n```  \n  \n### Return Value  \n `TRUE` if the current tab control is in an MDI client area window; otherwise, `FALSE`.  \n  \n##  <a name=\"cmfctabctrl__isonenotestyle\"></a>  CMFCTabCtrl::IsOneNoteStyle  \n Indicates whether the current tab control is displayed in the style of Microsoft OneNote.  \n  \n```  \nvirtual BOOL IsOneNoteStyle() const;\n\n \n```  \n  \n### Return Value  \n `TRUE` if the tab control is displayed in the style of Microsoft OneNote; otherwise, `FALSE`.  \n  \n##  <a name=\"cmfctabctrl__issharedscroll\"></a>  CMFCTabCtrl::IsSharedScroll  \n Indicates whether the current tab control has a scroll bar that can scroll its tabs as a group.  \n  \n```  \nBOOL IsSharedScroll() const;\n\n \n```  \n  \n### Return Value  \n `TRUE` if the tab control has a shared scroll bar; otherwise, `FALSE`.  \n  \n### Remarks  \n This method returns `TRUE` if the `style` parameter of the [CMFCTabCtrl::Create](#cmfctabctrl__create) method is STYLE_FLAT_SHARED_HORZ_SCROLL.  \n  \n##  <a name=\"cmfctabctrl__istabdocumentsmenu\"></a>  CMFCTabCtrl::IsTabDocumentsMenu  \n Indicates whether the tab control displays scroll buttons or a button that displays a menu of tabbed windows.  \n  \n```  \nBOOL IsTabDocumentsMenu() const;\n\n \n```  \n  \n### Return Value  \n `TRUE` if tabbed windows are scrolled using a popup menu of tabbed window labels; `FALSE` if tabbed windows are scrolled using forward and backward scroll buttons.  \n  \n### Remarks  \n Use the [CMFCTabCtrl::EnableTabDocumentsMenu](#cmfctabctrl__enabletabdocumentsmenu) method to specify the method of scrolling tabbed windows.  \n  \n##  <a name=\"cmfctabctrl__isvs2005style\"></a>  CMFCTabCtrl::IsVS2005Style  \n Indicates whether tabs are drawn using the style of Visual Studio 2005.  \n  \n```  \nvirtual BOOL IsVS2005Style() const;\n\n \n```  \n  \n### Return Value  \n `TRUE` if tabs are drawn using the style of Visual Studio 2005; otherwise, `FALSE`.  \n  \n### Remarks  \n Use the `style` parameter of the [CMFCTabCtrl::Create](#cmfctabctrl__create) method to specify how tabs are drawn.  \n  \n##  <a name=\"cmfctabctrl__m_benableactivate\"></a>  CMFCTabCtrl::m_bEnableActivate  \n Prevents the active view from losing focus when a new tab is inserted and enabled.  \n  \n```  \nstatic BOOL m_bEnableActivate;  \n```  \n  \n### Remarks  \n The focus is usually taken by a new tabbed window when the tab is inserted and made active. Set the `CMFCTabCtrl::m_bEnableActivate` member variable to `FALSE` to retain the original focus. The default value is `TRUE`.  \n  \n##  <a name=\"cmfctabctrl__modifytabstyle\"></a>  CMFCTabCtrl::ModifyTabStyle  \n Specifies the appearance of tabs in the current tab control.  \n  \n```  \nBOOL ModifyTabStyle(Style style);\n```  \n  \n### Parameters  \n [in] `style`  \n One of the enumeration values that specifies the appearance of the tab control. For more information, see the table in Remarks.  \n  \n### Return Value  \n Always `TRUE`.  \n  \n### Remarks  \n The value of the `style` parameter can be one of the following `CMFCTabCtrl::Style` enumerations.  \n  \n|Name|Description|  \n|----------|-----------------|  \n|STYLE_3D|Displays three-dimensional, rectangular tabs that have round corners.|  \n|STYLE_3D_ONENOTE|Displays three-dimensional tabs that have one vertical side and one slanted side and that have rounded corners.|  \n|STYLE_3D_ROUNDED|Displays three-dimensional tabs that have slanted sides and rounded corners.|  \n|STYLE_3D_ROUNDED_SCROLL|Displays three-dimensional tabs that have slanted sides and rounded corners. If there are more tabs than can be displayed at the same time, the framework displays a drop-down arrow and a menu of tabs to make active.|  \n|STYLE_3D_SCROLLED|Displays three-dimensional, rectangular tabs. If there are more tabs than can be displayed at the same time, the framework displays a drop-down arrow and a menu of tabs to make active.|  \n|STYLE_3D_VS2005|Displays three-dimensional, rounded tabs that have one slanted side and one vertical side.|  \n|STYLE_FLAT|Displays two-dimensional tabs that have slanted left and right sides.|  \n|STYLE_FLAT_SHARED_HORZ_SCROLL|Displays two-dimensional tabs. If there are more tabs than can be displayed at the same time, the framework displays scroll arrows at the ends of the tab area.|  \n  \n##  <a name=\"cmfctabctrl__ondragenter\"></a>  CMFCTabCtrl::OnDragEnter  \n Called by the framework during a drag-and-drop operation when the cursor first enters the window of the current tab control.  \n  \n```  \nvirtual DROPEFFECT OnDragEnter(\n    COleDataObject* pDataObject,  \n    DWORD dwKeyState,  \n    CPoint point);\n```  \n  \n### Parameters  \n [in] `pDataObject`  \n Points to a data object that contains data that the user drags.  \n  \n [in] `dwKeyState`  \n Contains the state of the modifier keys. This parameter is a bitwise combination (OR) of the following values: `MK_CONTROL`, `MK_SHIFT`, `MK_ALT`, `MK_LBUTTON`, `MK_MBUTTON`, and `MK_RBUTTON`. For more information, see the **Message Parameters** section of [About Mouse Input](http://msdn.microsoft.com/library/windows/desktop/ms645601).  \n  \n [in] `point`  \n Contains the current location of the cursor in client coordinates.  \n  \n### Return Value  \n Always `DROPEFFECT_NONE`, which means that the drop target cannot accept the data.  \n  \n### Remarks  \n Use this method to support a drag-and-drop operation. Override this method to implement your own custom behavior.  \n  \n By default, this method only calls `CMFCTabCtrl::OnDragOver`, which always returns `DROPEFFECT_NONE`.  \n  \n##  <a name=\"cmfctabctrl__ondragover\"></a>  CMFCTabCtrl::OnDragOver  \n Called by the framework during a drag operation when the mouse is moved over the drop target window.  \n  \n```  \nvirtual DROPEFFECT OnDragOver(\n    COleDataObject* pDataObject,  \n    DWORD dwKeyState,  \n    CPoint point);\n```  \n  \n### Parameters  \n [in] `pDataObject`  \n Pointer to a [COleDataObject](../../mfc/reference/coledataobject-class.md) object that is being dragged over the drop target.  \n  \n [in] `dwKeyState`  \n The state of the modifier keys, which is a bitwise combination (OR) of `MK_CONTROL`, `MK_SHIFT`, `MK_ALT`, `MK_LBUTTON`, `MK_MBUTTON`, and `MK_RBUTTON`. For more information, see \"Message Parameters\" in [About Mouse Input](http://msdn.microsoft.com/library/windows/desktop/ms645601).  \n  \n [in] `point`  \n The current mouse position.  \n  \n### Return Value  \n Always `DROPEFFECT_NONE`.  \n  \n### Remarks  \n Override this method with your custom implementation. For more information, see the [CView::OnDragOver](../../mfc/reference/cview-class.md#cview__ondragover) method.  \n  \n##  <a name=\"cmfctabctrl__onshowtabdocumentsmenu\"></a>  CMFCTabCtrl::OnShowTabDocumentsMenu  \n Displays a pop-up menu of tabbed windows, waits until the user selects a tab, and makes the selected tab the active tab.  \n  \n```  \nvirtual void OnShowTabDocumentsMenu(CPoint point);\n```  \n  \n### Parameters  \n [in] `point`  \n The coordinates of where to display the pop-up menu.  \n  \n### Remarks  \n  \n##  <a name=\"cmfctabctrl__setactiveinmditabgroup\"></a>  CMFCTabCtrl::SetActiveInMDITabGroup  \n Sets the current tab of a tab control as the active tab in a multiple document interface tab group.  \n  \n```  \nvoid SetActiveInMDITabGroup(BOOL bActive);\n```  \n  \n### Parameters  \n [in] `bActive`  \n `TRUE` to make the current tab the active tab; `FALSE` to make the current tab inactive.  \n  \n### Remarks  \n You can organize multiple document windows into either vertical or horizontal tab groups and easily shuffle documents from one tab group to another.  \n  \n##  <a name=\"cmfctabctrl__setactivetab\"></a>  CMFCTabCtrl::SetActiveTab  \n Activates a tab.  \n  \n```  \nvirtual BOOL SetActiveTab(int iTab);\n```  \n  \n### Parameters  \n [in] `iTab`  \n Specifies the zero-based index of the tab to activate.  \n  \n### Return Value  \n `TRUE` if the specified tab was made active; `FALSE` if the specified `iTab` parameter value is invalid.  \n  \n### Remarks  \n This method does not send the `AFX_WM_CHANGE_ACTIVE_TAB` notification to the parent window of the tab control.  \n  \n The `SetActiveTab` method automatically calls the [CMFCTabCtrl::HideActiveWindowHorzScrollBar](#cmfctabctrl__hideactivewindowhorzscrollbar) method to prevent the screen from blinking.  \n  \n##  <a name=\"cmfctabctrl__setactivetabboldfont\"></a>  CMFCTabCtrl::SetActiveTabBoldFont  \n Enables or disables use of a bold font on active tabs.  \n  \n```  \nvoid SetActiveTabBoldFont(BOOL bIsBold=TRUE);\n```  \n  \n### Parameters  \n [in] `bIsBold`  \n `TRUE` to use a bold font to display the label of the active tab; `FALSE` to use the standard font to display the label. The default value is `TRUE`.  \n  \n### Remarks  \n  \n##  <a name=\"cmfctabctrl__setdrawframe\"></a>  CMFCTabCtrl::SetDrawFrame  \n Specifies whether a frame rectangle is drawn around an embedded bar.  \n  \n```  \nvoid SetDrawFrame(BOOL bDraw=TRUE);\n```  \n  \n### Parameters  \n [in] `bDraw`  \n `TRUE` to display a frame rectangle around an embedded bar; otherwise, `FALSE`. The default value is `TRUE`.  \n  \n### Remarks  \n  \n##  <a name=\"cmfctabctrl__setflatframe\"></a>  CMFCTabCtrl::SetFlatFrame  \n Specifies whether to draw a flat or a 3D frame around the tab area.  \n  \n```  \nvoid SetFlatFrame(\n    BOOL bFlat=TRUE,  \n    BOOL bRepaint=TRUE);\n```  \n  \n### Parameters  \n [in] `bFlat`  \n `TRUE` to draw a flat (2D) frame around the tab area; `FALSE` to draw a three-dimensional (3D) frame. The default value is `TRUE`.  \n  \n [in] `bRepaint`  \n `TRUE` to redraw the window immediately; otherwise, `FALSE`. The default value is `TRUE`.  \n  \n### Remarks  \n  \n##  <a name=\"cmfctabctrl__setimagelist\"></a>  CMFCTabCtrl::SetImageList  \n Specifies an image list.  \n  \n```  \nvirtual BOOL SetImageList(\n    UINT uiID,  \n    int cx=15,  \n    COLORREF clrTransp=RGB(255,\n    0,\n    255));\n\n \nvirtual BOOL SetImageList(\n    HIMAGELIST hImageList);\n```  \n  \n### Parameters  \n [in] `uiID`  \n The ID of a bitmap resource that contains the image list.  \n  \n [in] `cx`  \n The width of each image, in pixels. The default value is 15.  \n  \n [in] `clrTransp`  \n The transparent image color. The parts of the image that are this color will be transparent. The default value is the color magenta, RGB(255,0,255).  \n  \n [in] `hImageList`  \n A handle to a preloaded image list.  \n  \n### Return Value  \n `TRUE` if this method is successful. `FALSE` if the tab control is created by using a flat style or if the first method overload cannot load the bitmap that is specified by the `uiID` parameter.  \n  \n### Remarks  \n Use this method to set an image list for the tab control. The images from the image list are displayed next to the tab label. This method recalculates the tab height so that the tab is sized to contain both the image and the text.  \n  \n Use the [CMFCBaseTabCtrl::AddTab](../../mfc/reference/cmfcbasetabctrl-class.md#cmfcbasetabctrl__addtab) method that is inherited by the tab control to specify the index of the image to display.  \n  \n##  <a name=\"cmfctabctrl__setresizemode\"></a>  CMFCTabCtrl::SetResizeMode  \n Specifies how the current tab control can be resized and then redisplays the control.  \n  \n```  \nvoid SetResizeMode(ResizeMode resizeMode);\n```  \n  \n### Parameters  \n [in] `resizeMode`  \n One of the `CMFCTabCtrl::ResizeMode` enumeration values that specifies how the tab control can be resized. For a list of possible values, see the table in Remarks.  \n  \n### Remarks  \n The `resizeMode` parameter can be one of the following `ResizeMode` enumeration values.  \n  \n|Name|Description|  \n|----------|-----------------|  \n|RESIZE_NO|The tab control cannot be resized.|  \n|RESIZE_VERT|The tab control can be resized vertically but not horizontally.|  \n|RESIZE_HORIZ|The tab control can be resized horizontally but not vertically.|  \n  \n##  <a name=\"cmfctabctrl__settabmaxwidth\"></a>  CMFCTabCtrl::SetTabMaxWidth  \n Specifies the maximum tab width in a tabbed window.  \n  \n```  \nvoid SetTabMaxWidth(int nTabMaxWidth);\n```  \n  \n### Parameters  \n [in] `nTabMaxWidth`  \n The maximum tab width, in pixels.  \n  \n### Remarks  \n Use this method to limit the width of each tab in a tabbed window. This method is useful if tabs have very long labels. The [CMFCTabCtrl](../../mfc/reference/cmfctabctrl-class.md) class constructor initializes the maximum tab width to 0, which actually means that the width is not limited.  \n  \n##  <a name=\"cmfctabctrl__stopresize\"></a>  CMFCTabCtrl::StopResize  \n Terminates the current resize operation on the tab control.  \n  \n```  \nvoid StopResize(BOOL bCancel);\n```  \n  \n### Parameters  \n [in] `bCancel`  \n `TRUE` to abandon the current resize operation; `FALSE` to complete the current resize operation. In either case, the framework stops drawing the resize rectangle.  \n  \n##  <a name=\"cmfctabctrl__synchronizescrollbar\"></a>  CMFCTabCtrl::SynchronizeScrollBar  \n Draws a horizontal scroll bar on a tab control that displays flat tabs.  \n  \n```  \nBOOL SynchronizeScrollBar(SCROLLINFO* pScrollInfo = NULL);\n```  \n  \n### Parameters  \n [out] `pScrollInfo`  \n Pointer to a [SCROLLINFO](http://msdn.microsoft.com/library/windows/desktop/bb787537) structure or `NULL`. When this method returns, and if this parameter is not `NULL`, the structure contains all the parameters of the scroll bar. The default value is `NULL`.  \n  \n### Return Value  \n `TRUE` if this method succeeds; otherwise, `FALSE`.  \n  \n### Remarks  \n This method affects only a tab control that displays flat tabs. The scroll bar influences all the tabs at the same time.  \n  \n## See Also  \n [Hierarchy Chart](../../mfc/hierarchy-chart.md)   \n [Classes](../../mfc/reference/mfc-classes.md)   \n [CDockablePane Class](../../mfc/reference/cdockablepane-class.md)   \n [CDockablePane Class](../../mfc/reference/cdockablepane-class.md)   \n [CMFCBaseTabCtrl Class](../../mfc/reference/cmfcbasetabctrl-class.md)\n"}