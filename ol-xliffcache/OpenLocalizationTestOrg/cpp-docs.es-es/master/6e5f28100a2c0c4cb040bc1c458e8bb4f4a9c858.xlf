<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="es-es">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-04506c2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6e5f28100a2c0c4cb040bc1c458e8bb4f4a9c858</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\ide\walkthrough-working-with-projects-and-solutions-cpp.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c07a6d1147bf64fc19b0702e849d2bab2f18a409</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">69c8ba9df14207053db5f8d0c10e8a0f0787e776</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Walkthrough: Working with Projects and Solutions (C++) | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Walkthrough: Working with Projects and Solutions (C++)</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Here's how to create a C++ project in Visual Studio, add code, and then build and run the project.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The project in this walkthrough is a program that tracks how many players are playing different card games.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>In <ph id="ph1">[!INCLUDE[vsprvs](../assembler/masm/includes/vsprvs_md.md)]</ph>, work is organized in projects and solutions.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>A solution can contain more than one project—for example, a DLL and an executable that references that DLL.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Solutions and Projects<ept id="p1">](/visualstudio/ide/solutions-and-projects-in-visual-studio)</ept>.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Prerequisites</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>To complete this walkthrough, you must understand the fundamentals of the C++ language.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Creating a Project</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>To create a project, first choose a project-type template.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>For each project type, <ph id="ph1">[!INCLUDE[vsprvs](../assembler/masm/includes/vsprvs_md.md)]</ph> sets compiler settings and—depending on the type—generates starter code that you can modify later.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>To create a project</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>On the menu bar, choose <bpt id="p1">**</bpt>File<ept id="p1">**</ept>, <bpt id="p2">**</bpt>New<ept id="p2">**</ept>, <bpt id="p3">**</bpt>Project<ept id="p3">**</ept>.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>In the left pane of the <bpt id="p1">**</bpt>New Project<ept id="p1">**</ept> dialog box, expand the <bpt id="p2">**</bpt>Installed Templates<ept id="p2">**</ept> node, expand the <bpt id="p3">**</bpt>Visual C++<ept id="p3">**</ept> node, and then select <bpt id="p4">**</bpt>Win32<ept id="p4">**</ept>.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>In the list of installed templates in the center pane, select <bpt id="p1">**</bpt>Win32 Console Application<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Enter a name for the project in the <bpt id="p1">**</bpt>Name<ept id="p1">**</ept> box.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>For this example, enter <bpt id="p1">**</bpt>Game<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>You can accept the default location in the <bpt id="p1">**</bpt>Location<ept id="p1">**</ept> drop-down list, enter a different location, or choose the <bpt id="p2">**</bpt>Browse<ept id="p2">**</ept> button to browse to a directory where you want to save the project.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>When you create a project, <ph id="ph1">[!INCLUDE[vsprvs](../assembler/masm/includes/vsprvs_md.md)]</ph> puts the project in a solution.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>By default, the solution has the same name as the project.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>You can change the name in the <bpt id="p1">**</bpt>Solution name<ept id="p1">**</ept> box, but for this example, keep the default name.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Choose the <bpt id="p1">**</bpt>OK<ept id="p1">**</ept> button to start the <bpt id="p2">**</bpt>Win32 Application Wizard<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>On the <bpt id="p1">**</bpt>Overview<ept id="p1">**</ept> page of the <bpt id="p2">**</bpt>Win32 Application Wizard<ept id="p2">**</ept>, choose the <bpt id="p3">**</bpt>Next<ept id="p3">**</ept> button.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>On the <bpt id="p1">**</bpt>Application Settings<ept id="p1">**</ept> page, under <bpt id="p2">**</bpt>Application type<ept id="p2">**</ept>, select <bpt id="p3">**</bpt>Console Application<ept id="p3">**</ept>.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Under <bpt id="p1">**</bpt>Additional options<ept id="p1">**</ept>, clear the <bpt id="p2">**</bpt>Precompiled header<ept id="p2">**</ept> setting, and then select the <bpt id="p3">**</bpt>Empty Project<ept id="p3">**</ept> setting.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Choose the <bpt id="p1">**</bpt>Finish<ept id="p1">**</ept> button to create the project.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>You now have a project, but it does not yet have source code files.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Organizing Projects and Files in a Solution</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>You can use <bpt id="p1">**</bpt>Solution Explorer<ept id="p1">**</ept> to organize and manage the projects, files, and other resources in your solution.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>This part of the walkthrough shows how add a class to the project.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>When you add the class, <ph id="ph1">[!INCLUDE[vsprvs](../assembler/masm/includes/vsprvs_md.md)]</ph> adds the corresponding .h and .cpp files.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Next, you add a new source code file for the main program that tests the class.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>To add a class to a project</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">**</bpt>Solution Explorer<ept id="p1">**</ept> is not displayed, on the menu bar, choose <bpt id="p2">**</bpt>View<ept id="p2">**</ept>, <bpt id="p3">**</bpt>Solution Explorer<ept id="p3">**</ept>.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>In <bpt id="p1">**</bpt>Solution Explorer<ept id="p1">**</ept>, open the shortcut menu for the <bpt id="p2">**</bpt>Header Files<ept id="p2">**</ept> folder and then choose <bpt id="p3">**</bpt>Add<ept id="p3">**</ept>, <bpt id="p4">**</bpt>Class<ept id="p4">**</ept>.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>In the left pane of the <bpt id="p1">**</bpt>Add Class<ept id="p1">**</ept> dialog box, expand the <bpt id="p2">**</bpt>Visual C++<ept id="p2">**</ept> node and select <bpt id="p3">**</bpt>C++<ept id="p3">**</ept>, and then in the list of installed templates in the center pane, select <bpt id="p4">**</bpt>C++ Class<ept id="p4">**</ept>.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Choose the <bpt id="p1">**</bpt>Add<ept id="p1">**</ept> button.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Generic C++ Class Wizard<ept id="p1">**</ept>, enter <bpt id="p2">**</bpt>Cardgame<ept id="p2">**</ept> in the <bpt id="p3">**</bpt>Class name<ept id="p3">**</ept> box.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Don't modify the default file names and settings.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Choose the <bpt id="p1">**</bpt>Finish<ept id="p1">**</ept> button.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The Cardgame.h file is opened in the editor.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Make these changes:</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Add two private data members after the opening brace of the class definition.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>NVC_Walkthrough_Working_With_Projects#100</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Modify the default constructor that Visual Studio generated.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>After the <ph id="ph1">`public:`</ph> access specifier, find the line that looks like this:</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Modify it to take one parameter of type <ph id="ph1">`int`</ph>, named <bpt id="p1">**</bpt>players<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>NVC_Walkthrough_Working_With_Projects#101</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>After the default destructor, add an inline declaration for a static int member function named <bpt id="p1">**</bpt>GetParticipants<ept id="p1">**</ept> that takes no parameters and returns the <bpt id="p2">**</bpt>totalParticipants<ept id="p2">**</ept> value.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>NVC_Walkthrough_Working_With_Projects#102</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The Cardgame.h file should resemble this after you change it:</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>NVC_Walkthrough_Working_With_Projects#103</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The line <ph id="ph1">`#pragma once`</ph> tells the compiler to include the file only one time.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>once<ept id="p1">](../preprocessor/once.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>For information about other C++ keywords in this header file, see <bpt id="p1">[</bpt>class<ept id="p1">](../cpp/class-cpp.md)</ept>, <bpt id="p2">[</bpt>int<ept id="p2">](../cpp/fundamental-types-cpp.md)</ept>, <bpt id="p3">[</bpt>static<ept id="p3">](../cpp/storage-classes-cpp.md)</ept>, and <bpt id="p4">[</bpt>public<ept id="p4">](../cpp/public-cpp.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Choose the <bpt id="p1">**</bpt>Cardgame.cpp<ept id="p1">**</ept> tab in the editing pane to open it for editing.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Delete everything in the file and replace it with this code:</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>NVC_Walkthrough_Working_With_Projects#111</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>You can use auto-completion when you are entering code.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>For example, if you were entering this code, you could enter <bpt id="p1">**</bpt>pl<ept id="p1">**</ept> or <bpt id="p2">**</bpt>tot<ept id="p2">**</ept> and then press Ctrl+Spacebar so that auto-completion finishes entering <ph id="ph1">`players`</ph> or <ph id="ph2">`totalParticipants`</ph> for you.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>For information about <ph id="ph1">`#include`</ph>, see <bpt id="p1">[</bpt>#include Directive (C/C++)<ept id="p1">](../preprocessor/hash-include-directive-c-cpp.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Adding a Source File</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Now, add a source code file for the main program that tests the class.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>To add a new source file</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>In <bpt id="p1">**</bpt>Solution Explorer<ept id="p1">**</ept>, open the shortcut menu for the <bpt id="p2">**</bpt>Source Files<ept id="p2">**</ept> folder and then choose <bpt id="p3">**</bpt>Add<ept id="p3">**</ept>, <bpt id="p4">**</bpt>New Item<ept id="p4">**</ept>.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Add New Item<ept id="p1">**</ept> dialog box, in the left pane, expand the <bpt id="p2">**</bpt>Installed<ept id="p2">**</ept> node, expand the <bpt id="p3">**</bpt>Visual C++<ept id="p3">**</ept> node, and then select <bpt id="p4">**</bpt>Code<ept id="p4">**</ept>.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>In the center pane, select <bpt id="p1">**</bpt>C++ File (.cpp)<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Enter <bpt id="p1">**</bpt>TestGames.cpp<ept id="p1">**</ept> in the <bpt id="p2">**</bpt>Name<ept id="p2">**</ept> box, and then choose the <bpt id="p3">**</bpt>Add<ept id="p3">**</ept> button.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>In the TestGames.cpp editing window, enter the following code.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>NVC_Walkthrough_Working_With_Projects#120</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Building and Running a Project</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Now, build the project and run the application.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>To build and run the project</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>On the menu bar, choose <bpt id="p1">**</bpt>Build<ept id="p1">**</ept>, <bpt id="p2">**</bpt>Build Solution<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>If you are using an Express edition that does not display a <bpt id="p1">**</bpt>Build<ept id="p1">**</ept> menu, on the menu bar, choose <bpt id="p2">**</bpt>Tools<ept id="p2">**</ept>, <bpt id="p3">**</bpt>Settings<ept id="p3">**</ept>, <bpt id="p4">**</bpt>Expert Settings<ept id="p4">**</ept> to enable it.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Output from a build is displayed in the <bpt id="p1">**</bpt>Output<ept id="p1">**</ept> window.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>If your build is successful, the output should resemble this:</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Output<ept id="p1">**</ept> window can show different steps, depending on the edition and the build configuration, but if the project build succeeds, the last line should resemble the output shown.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>If your build did not succeed, compare your code to the code that is given in the earlier steps.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>To run the project, on the menu bar, choose <bpt id="p1">**</bpt>Debug<ept id="p1">**</ept>, <bpt id="p2">**</bpt>Start Without Debugging<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>The output should resemble this:</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Next Steps</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Previous:<ept id="p1">**</ept> <bpt id="p2">[</bpt>Using the Visual Studio IDE for C++ Desktop Development<ept id="p2">](../ide/using-the-visual-studio-ide-for-cpp-desktop-development.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Next:<ept id="p1">**</ept><bpt id="p2">[</bpt>Walkthrough: Building a Project (C++)<ept id="p2">](../ide/walkthrough-building-a-project-cpp.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Visual C++ Guided Tour</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>