{"nodes":[{"pos":[12,50],"content":"CSpinButtonCtrl Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"CSpinButtonCtrl Class | Microsoft Docs","pos":[0,38]}]},{"pos":[787,808],"content":"CSpinButtonCtrl Class","linkify":"CSpinButtonCtrl Class","nodes":[{"content":"CSpinButtonCtrl Class","pos":[0,21]}]},{"content":"Provides the functionality of the Windows common spin button control.","pos":[809,878]},{"pos":[887,893],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[955,962],"content":"Members","linkify":"Members","nodes":[{"content":"Members","pos":[0,7]}]},{"pos":[972,991],"content":"Public Constructors","linkify":"Public Constructors","nodes":[{"content":"Public Constructors","pos":[0,19]}]},{"content":"Name","pos":[998,1002]},{"content":"Description","pos":[1003,1014]},{"pos":[1052,1121],"content":"<bpt id=\"p1\">[</bpt>CSpinButtonCtrl::CSpinButtonCtrl<ept id=\"p1\">](#cspinbuttonctrl__cspinbuttonctrl)</ept>","source":"[CSpinButtonCtrl::CSpinButtonCtrl](#cspinbuttonctrl__cspinbuttonctrl)"},{"pos":[1122,1160],"content":"Constructs a <ph id=\"ph1\">`CSpinButtonCtrl`</ph> object.","source":"Constructs a `CSpinButtonCtrl` object."},{"pos":[1171,1185],"content":"Public Methods","linkify":"Public Methods","nodes":[{"content":"Public Methods","pos":[0,14]}]},{"content":"Name","pos":[1192,1196]},{"content":"Description","pos":[1197,1208]},{"pos":[1246,1297],"content":"<bpt id=\"p1\">[</bpt>CSpinButtonCtrl::Create<ept id=\"p1\">](#cspinbuttonctrl__create)</ept>","source":"[CSpinButtonCtrl::Create](#cspinbuttonctrl__create)"},{"pos":[1298,1374],"content":"Creates a spin button control and attaches it to a <ph id=\"ph1\">`CSpinButtonCtrl`</ph> object.","source":"Creates a spin button control and attaches it to a `CSpinButtonCtrl` object."},{"pos":[1379,1434],"content":"<bpt id=\"p1\">[</bpt>CSpinButtonCtrl::CreateEx<ept id=\"p1\">](#cspinbuttonctrl__createex)</ept>","source":"[CSpinButtonCtrl::CreateEx](#cspinbuttonctrl__createex)"},{"pos":[1435,1554],"content":"Creates a spin button control with the specified Windows extended styles and attaches it to a <ph id=\"ph1\">`CSpinButtonCtrl`</ph> object.","source":"Creates a spin button control with the specified Windows extended styles and attaches it to a `CSpinButtonCtrl` object."},{"pos":[1559,1614],"content":"<bpt id=\"p1\">[</bpt>CSpinButtonCtrl::GetAccel<ept id=\"p1\">](#cspinbuttonctrl__getaccel)</ept>","source":"[CSpinButtonCtrl::GetAccel](#cspinbuttonctrl__getaccel)"},{"content":"Retrieves acceleration information for a spin button control.","pos":[1615,1676]},{"pos":[1681,1734],"content":"<bpt id=\"p1\">[</bpt>CSpinButtonCtrl::GetBase<ept id=\"p1\">](#cspinbuttonctrl__getbase)</ept>","source":"[CSpinButtonCtrl::GetBase](#cspinbuttonctrl__getbase)"},{"content":"Retrieves the current base for a spin button control.","pos":[1735,1788]},{"pos":[1793,1848],"content":"<bpt id=\"p1\">[</bpt>CSpinButtonCtrl::GetBuddy<ept id=\"p1\">](#cspinbuttonctrl__getbuddy)</ept>","source":"[CSpinButtonCtrl::GetBuddy](#cspinbuttonctrl__getbuddy)"},{"content":"Retrieves a pointer to the current buddy window.","pos":[1849,1897]},{"pos":[1902,1953],"content":"<bpt id=\"p1\">[</bpt>CSpinButtonCtrl::GetPos<ept id=\"p1\">](#cspinbuttonctrl__getpos)</ept>","source":"[CSpinButtonCtrl::GetPos](#cspinbuttonctrl__getpos)"},{"content":"Retrieves the current position of a spin button control.","pos":[1954,2010]},{"pos":[2015,2070],"content":"<bpt id=\"p1\">[</bpt>CSpinButtonCtrl::GetRange<ept id=\"p1\">](#cspinbuttonctrl__getrange)</ept>","source":"[CSpinButtonCtrl::GetRange](#cspinbuttonctrl__getrange)"},{"content":"Retrieves the upper and lower limits (range) for a spin button control.","pos":[2071,2142]},{"pos":[2147,2202],"content":"<bpt id=\"p1\">[</bpt>CSpinButtonCtrl::SetAccel<ept id=\"p1\">](#cspinbuttonctrl__setaccel)</ept>","source":"[CSpinButtonCtrl::SetAccel](#cspinbuttonctrl__setaccel)"},{"content":"Sets the acceleration for a spin button control.","pos":[2203,2251]},{"pos":[2256,2309],"content":"<bpt id=\"p1\">[</bpt>CSpinButtonCtrl::SetBase<ept id=\"p1\">](#cspinbuttonctrl__setbase)</ept>","source":"[CSpinButtonCtrl::SetBase](#cspinbuttonctrl__setbase)"},{"content":"Sets the base for a spin button control.","pos":[2310,2350]},{"pos":[2355,2410],"content":"<bpt id=\"p1\">[</bpt>CSpinButtonCtrl::SetBuddy<ept id=\"p1\">](#cspinbuttonctrl__setbuddy)</ept>","source":"[CSpinButtonCtrl::SetBuddy](#cspinbuttonctrl__setbuddy)"},{"content":"Sets the buddy window for a spin button control.","pos":[2411,2459]},{"pos":[2464,2515],"content":"<bpt id=\"p1\">[</bpt>CSpinButtonCtrl::SetPos<ept id=\"p1\">](#cspinbuttonctrl__setpos)</ept>","source":"[CSpinButtonCtrl::SetPos](#cspinbuttonctrl__setpos)"},{"content":"Sets the current position for the control.","pos":[2516,2558]},{"pos":[2563,2618],"content":"<bpt id=\"p1\">[</bpt>CSpinButtonCtrl::SetRange<ept id=\"p1\">](#cspinbuttonctrl__setrange)</ept>","source":"[CSpinButtonCtrl::SetRange](#cspinbuttonctrl__setrange)"},{"content":"Sets the upper and lower limits (range) for a spin button control.","pos":[2619,2685]},{"pos":[2695,2702],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"A \"spin button control\" (also known as an up-down control) is a pair of arrow buttons that the user can click to increment or decrement a value, such as a scroll position or a number displayed in a companion control.","pos":[2706,2922]},{"content":"The value associated with a spin button control is called its current position.","pos":[2923,3002]},{"content":"A spin button control is most often used with a companion control, called a \"buddy window.\"","pos":[3003,3094]},{"pos":[3101,3254],"content":"This control (and therefore the <ph id=\"ph1\">`CSpinButtonCtrl`</ph> class) is available only to programs running under Windows 95/98 and Windows NT version 3.51 and later.","source":"This control (and therefore the `CSpinButtonCtrl` class) is available only to programs running under Windows 95/98 and Windows NT version 3.51 and later."},{"content":"To the user, a spin button control and its buddy window often look like a single control.","pos":[3261,3350]},{"content":"You can specify that a spin button control automatically position itself next to its buddy window, and that it automatically set the caption of the buddy window to its current position.","pos":[3351,3536]},{"content":"You can use a spin button control with an edit control to prompt the user for numeric input.","pos":[3537,3629]},{"content":"Clicking the up arrow moves the current position toward the maximum, and clicking the down arrow moves the current position toward the minimum.","pos":[3636,3779]},{"content":"By default, the minimum is 100 and the maximum is 0.","pos":[3780,3832]},{"content":"Any time the minimum setting is greater than the maximum setting (for example, when the default settings are used), clicking the up arrow decreases the position value and clicking the down arrow increases it.","pos":[3833,4041]},{"content":"A spin button control without a buddy window functions as a sort of simplified scroll bar.","pos":[4048,4138]},{"content":"For example, a tab control sometimes displays a spin button control to enable the user to scroll additional tabs into view.","pos":[4139,4262]},{"pos":[4269,4424],"content":"For more information on using <ph id=\"ph1\">`CSpinButtonCtrl`</ph>, see <bpt id=\"p1\">[</bpt>Controls<ept id=\"p1\">](../../mfc/controls-mfc.md)</ept> and <bpt id=\"p2\">[</bpt>Using CSpinButtonCtrl<ept id=\"p2\">](../../mfc/using-cspinbuttonctrl.md)</ept>.","source":"For more information on using `CSpinButtonCtrl`, see [Controls](../../mfc/controls-mfc.md) and [Using CSpinButtonCtrl](../../mfc/using-cspinbuttonctrl.md)."},{"pos":[4433,4454],"content":"Inheritance Hierarchy","linkify":"Inheritance Hierarchy","nodes":[{"content":"Inheritance Hierarchy","pos":[0,21]}]},{"pos":[4458,4505],"content":"<bpt id=\"p1\">[</bpt>CObject<ept id=\"p1\">](../../mfc/reference/cobject-class.md)</ept>","source":"[CObject](../../mfc/reference/cobject-class.md)"},{"pos":[4512,4565],"content":"<bpt id=\"p1\">[</bpt>CCmdTarget<ept id=\"p1\">](../../mfc/reference/ccmdtarget-class.md)</ept>","source":"[CCmdTarget](../../mfc/reference/ccmdtarget-class.md)"},{"pos":[4572,4613],"content":"<bpt id=\"p1\">[</bpt>CWnd<ept id=\"p1\">](../../mfc/reference/cwnd-class.md)</ept>","source":"[CWnd](../../mfc/reference/cwnd-class.md)"},{"pos":[4646,4658],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[4662,4682],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> afxcmn.h","source":"**Header:** afxcmn.h"},{"pos":[4692,4755],"content":"<bpt id=\"p1\">&lt;a name=\"cspinbuttonctrl__create\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CSpinButtonCtrl::Create","linkify":"<a name=\"cspinbuttonctrl__create\"></a>  CSpinButtonCtrl::Create","source":"<a name=\"cspinbuttonctrl__create\"></a>  CSpinButtonCtrl::Create"},{"pos":[4759,4836],"content":"Creates a spin button control and attaches it to a <ph id=\"ph1\">`CSpinButtonCtrl`</ph> object..","source":"Creates a spin button control and attaches it to a `CSpinButtonCtrl` object.."},{"pos":[4966,4976],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Specifies the spin button control's style.","pos":[4993,5035]},{"content":"Apply any combination of spin button control styles to the control.","pos":[5036,5103]},{"content":"These styles are described in <bpt id=\"p1\">[</bpt>Up-Down Control Styles<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb759885)</ept> in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","pos":[5104,5278],"source":" These styles are described in [Up-Down Control Styles](http://msdn.microsoft.com/library/windows/desktop/bb759885) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"content":"Specifies the spin button control's size and position.","pos":[5295,5349]},{"content":"It can be either a <bpt id=\"p1\">[</bpt>CRect<ept id=\"p1\">](../../atl-mfc-shared/reference/crect-class.md)</ept> object or a <bpt id=\"p2\">[</bpt>RECT<ept id=\"p2\">](http://msdn.microsoft.com/library/windows/desktop/dd162897)</ept> structure","pos":[5350,5512],"source":" It can be either a [CRect](../../atl-mfc-shared/reference/crect-class.md) object or a [RECT](http://msdn.microsoft.com/library/windows/desktop/dd162897) structure"},{"content":"A pointer to the spin button control's parent window, usually a <ph id=\"ph1\">`CDialog`</ph>.","pos":[5535,5609],"source":" A pointer to the spin button control's parent window, usually a `CDialog`."},{"content":"It must not be <bpt id=\"p1\">**</bpt>NULL.<ept id=\"p1\">**</ept>","pos":[5610,5634],"source":" It must not be **NULL.**"},{"content":"Specifies the spin button control's ID.","pos":[5650,5689]},{"pos":[5699,5711],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Nonzero if initialization was successful; otherwise 0.","pos":[5715,5769]},{"pos":[5779,5786],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[5790,5985],"content":"You construct a <ph id=\"ph1\">`CSpinButtonCtrl`</ph> object in two steps First, call the constructor, and then call <bpt id=\"p1\">**</bpt>Create<ept id=\"p1\">**</ept>, which creates the spin button control and attaches it to the <ph id=\"ph2\">`CSpinButtonCtrl`</ph> object.","source":"You construct a `CSpinButtonCtrl` object in two steps First, call the constructor, and then call **Create**, which creates the spin button control and attaches it to the `CSpinButtonCtrl` object."},{"pos":[5992,6136],"content":"To create a spin button control with extended window styles, call <bpt id=\"p1\">[</bpt>CSpinButtonCtrl::CreateEx<ept id=\"p1\">](#cspinbuttonctrl__createex)</ept> instead of <bpt id=\"p2\">**</bpt>Create<ept id=\"p2\">**</ept>.","source":"To create a spin button control with extended window styles, call [CSpinButtonCtrl::CreateEx](#cspinbuttonctrl__createex) instead of **Create**."},{"pos":[6146,6213],"content":"<bpt id=\"p1\">&lt;a name=\"cspinbuttonctrl__createex\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CSpinButtonCtrl::CreateEx","linkify":"<a name=\"cspinbuttonctrl__createex\"></a>  CSpinButtonCtrl::CreateEx","source":"<a name=\"cspinbuttonctrl__createex\"></a>  CSpinButtonCtrl::CreateEx"},{"pos":[6217,6304],"content":"Creates a control (a child window) and associates it with the <ph id=\"ph1\">`CSpinButtonCtrl`</ph> object.","source":"Creates a control (a child window) and associates it with the `CSpinButtonCtrl` object."},{"pos":[6459,6469],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Specifies the extended style of the control being created.","pos":[6488,6546]},{"content":"For a list of extended windows styles, see the <ph id=\"ph1\">`dwExStyle`</ph> parameter for <bpt id=\"p1\">[</bpt>CreateWindowEx<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms632680)</ept> in the <ph id=\"ph2\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","pos":[6547,6756],"source":" For a list of extended windows styles, see the `dwExStyle` parameter for [CreateWindowEx](http://msdn.microsoft.com/library/windows/desktop/ms632680) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"content":"Specifies the spin button control's style.","pos":[6776,6818]},{"content":"Apply any combination of spin button control styles to the control.","pos":[6819,6886]},{"content":"These styles are described in <bpt id=\"p1\">[</bpt>Up-Down Control Styles<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb759885)</ept> in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","pos":[6887,7061],"source":" These styles are described in [Up-Down Control Styles](http://msdn.microsoft.com/library/windows/desktop/bb759885) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"content":"A reference to a <bpt id=\"p1\">[</bpt>RECT<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/dd162897)</ept> structure describing the size and position of the window to be created, in client coordinates of <ph id=\"ph1\">`pParentWnd`</ph>.","pos":[7078,7272],"source":" A reference to a [RECT](http://msdn.microsoft.com/library/windows/desktop/dd162897) structure describing the size and position of the window to be created, in client coordinates of `pParentWnd`."},{"content":"A pointer to the window that is the control's parent.","pos":[7295,7348]},{"content":"The control's child-window ID.","pos":[7364,7394]},{"pos":[7404,7416],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Nonzero if successful; otherwise 0.","pos":[7420,7455]},{"pos":[7465,7472],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[7476,7630],"content":"Use <ph id=\"ph1\">`CreateEx`</ph> instead of <bpt id=\"p1\">[</bpt>Create<ept id=\"p1\">](#cspinbuttonctrl__create)</ept> to apply extended Windows styles, specified by the Windows extended style preface <bpt id=\"p2\">**</bpt>WS_EX_<ept id=\"p2\">**</ept>.","source":"Use `CreateEx` instead of [Create](#cspinbuttonctrl__create) to apply extended Windows styles, specified by the Windows extended style preface **WS_EX_**."},{"pos":[7640,7721],"content":"<bpt id=\"p1\">&lt;a name=\"cspinbuttonctrl__cspinbuttonctrl\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CSpinButtonCtrl::CSpinButtonCtrl","linkify":"<a name=\"cspinbuttonctrl__cspinbuttonctrl\"></a>  CSpinButtonCtrl::CSpinButtonCtrl","source":"<a name=\"cspinbuttonctrl__cspinbuttonctrl\"></a>  CSpinButtonCtrl::CSpinButtonCtrl"},{"pos":[7725,7763],"content":"Constructs a <ph id=\"ph1\">`CSpinButtonCtrl`</ph> object.","source":"Constructs a `CSpinButtonCtrl` object."},{"pos":[7807,7874],"content":"<bpt id=\"p1\">&lt;a name=\"cspinbuttonctrl__getaccel\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CSpinButtonCtrl::GetAccel","linkify":"<a name=\"cspinbuttonctrl__getaccel\"></a>  CSpinButtonCtrl::GetAccel","source":"<a name=\"cspinbuttonctrl__getaccel\"></a>  CSpinButtonCtrl::GetAccel"},{"content":"Retrieves acceleration information for a spin button control.","pos":[7878,7939]},{"pos":[8028,8038],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Number of elements in the array specified by <ph id=\"ph1\">`pAccel`</ph>.","pos":[8054,8108],"source":" Number of elements in the array specified by `pAccel`."},{"content":"Pointer to an array of <bpt id=\"p1\">[</bpt>UDACCEL<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb759897)</ept> structures that receives acceleration information.","pos":[8127,8270],"source":" Pointer to an array of [UDACCEL](http://msdn.microsoft.com/library/windows/desktop/bb759897) structures that receives acceleration information."},{"pos":[8280,8292],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Number of accelerator structures retrieved.","pos":[8296,8339]},{"pos":[8349,8414],"content":"<bpt id=\"p1\">&lt;a name=\"cspinbuttonctrl__getbase\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CSpinButtonCtrl::GetBase","linkify":"<a name=\"cspinbuttonctrl__getbase\"></a>  CSpinButtonCtrl::GetBase","source":"<a name=\"cspinbuttonctrl__getbase\"></a>  CSpinButtonCtrl::GetBase"},{"content":"Retrieves the current base for a spin button control.","pos":[8418,8471]},{"pos":[8521,8533],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The current base value.","pos":[8537,8560]},{"pos":[8570,8637],"content":"<bpt id=\"p1\">&lt;a name=\"cspinbuttonctrl__getbuddy\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CSpinButtonCtrl::GetBuddy","linkify":"<a name=\"cspinbuttonctrl__getbuddy\"></a>  CSpinButtonCtrl::GetBuddy","source":"<a name=\"cspinbuttonctrl__getbuddy\"></a>  CSpinButtonCtrl::GetBuddy"},{"content":"Retrieves a pointer to the current buddy window.","pos":[8641,8689]},{"pos":[8741,8753],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A pointer to the current buddy window.","pos":[8757,8795]},{"pos":[8805,8868],"content":"<bpt id=\"p1\">&lt;a name=\"cspinbuttonctrl__getpos\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CSpinButtonCtrl::GetPos","linkify":"<a name=\"cspinbuttonctrl__getpos\"></a>  CSpinButtonCtrl::GetPos","source":"<a name=\"cspinbuttonctrl__getpos\"></a>  CSpinButtonCtrl::GetPos"},{"content":"Retrieves the current position of a spin button control.","pos":[8872,8928]},{"pos":[9025,9035],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"<bpt id=\"p1\">*</bpt>lpbError<ept id=\"p1\">*</ept>","pos":[9039,9049],"source":"*lpbError*"},{"content":"A pointer to a boolean value that is set to zero if the value is successfully retrieved or non-zero if an error occurs.","pos":[9053,9172]},{"content":"If this parameter is set to <bpt id=\"p1\">**</bpt>NULL<ept id=\"p1\">**</ept>, errors are not reported.","pos":[9173,9235],"source":" If this parameter is set to **NULL**, errors are not reported."},{"pos":[9245,9257],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The first version returns the 16-bit current position in the low-order word.","pos":[9261,9337]},{"content":"The high-order word is nonzero if an error occurred.","pos":[9338,9390]},{"content":"The second version returns the 32-bit position.","pos":[9397,9444]},{"pos":[9454,9461],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"When it processes the value returned, the control updates its current position based on the caption of the buddy window.","pos":[9465,9585]},{"content":"The control returns an error if there is no buddy window or if the caption specifies an invalid or out-of-range value.","pos":[9586,9704]},{"pos":[9714,9781],"content":"<bpt id=\"p1\">&lt;a name=\"cspinbuttonctrl__getrange\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CSpinButtonCtrl::GetRange","linkify":"<a name=\"cspinbuttonctrl__getrange\"></a>  CSpinButtonCtrl::GetRange","source":"<a name=\"cspinbuttonctrl__getrange\"></a>  CSpinButtonCtrl::GetRange"},{"content":"Retrieves the upper and lower limits (range) for a spin button control.","pos":[9785,9856]},{"pos":[10032,10042],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"<bpt id=\"p1\">*</bpt>lower<ept id=\"p1\">*</ept>","pos":[10046,10053],"source":"*lower*"},{"content":"Reference to an integer that receives the lower limit for the control.","pos":[10057,10127]},{"content":"<bpt id=\"p1\">*</bpt>upper<ept id=\"p1\">*</ept>","pos":[10134,10141],"source":"*upper*"},{"content":"Reference to an integer that receives the upper limit for the control.","pos":[10145,10215]},{"pos":[10225,10237],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The first version returns a 32-bit value containing the upper and lower limits.","pos":[10241,10320]},{"content":"The low-order word is the upper limit for the control, and the high-order word is the lower limit.","pos":[10321,10419]},{"pos":[10429,10436],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[10440,10535],"content":"The member function <ph id=\"ph1\">`GetRange32`</ph> retrieves the spin button control's range as a 32-bit integer.","source":"The member function `GetRange32` retrieves the spin button control's range as a 32-bit integer."},{"pos":[10545,10612],"content":"<bpt id=\"p1\">&lt;a name=\"cspinbuttonctrl__setaccel\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CSpinButtonCtrl::SetAccel","linkify":"<a name=\"cspinbuttonctrl__setaccel\"></a>  CSpinButtonCtrl::SetAccel","source":"<a name=\"cspinbuttonctrl__setaccel\"></a>  CSpinButtonCtrl::SetAccel"},{"content":"Sets the acceleration for a spin button control.","pos":[10616,10664]},{"pos":[10744,10754],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Number of <bpt id=\"p1\">[</bpt>UDACCEL<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb759897)</ept> structures specified by <ph id=\"ph1\">`pAccel`</ph>.","pos":[10770,10883],"source":" Number of [UDACCEL](http://msdn.microsoft.com/library/windows/desktop/bb759897) structures specified by `pAccel`."},{"content":"Pointer to an array of <ph id=\"ph1\">`UDACCEL`</ph> structures, which contain acceleration information.","pos":[10902,10986],"source":" Pointer to an array of `UDACCEL` structures, which contain acceleration information."},{"content":"Elements should be sorted in ascending order based on the <bpt id=\"p1\">**</bpt>nSec<ept id=\"p1\">**</ept> member.","pos":[10987,11061],"source":" Elements should be sorted in ascending order based on the **nSec** member."},{"pos":[11071,11083],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Nonzero if successful; otherwise 0.","pos":[11087,11122]},{"pos":[11132,11197],"content":"<bpt id=\"p1\">&lt;a name=\"cspinbuttonctrl__setbase\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CSpinButtonCtrl::SetBase","linkify":"<a name=\"cspinbuttonctrl__setbase\"></a>  CSpinButtonCtrl::SetBase","source":"<a name=\"cspinbuttonctrl__setbase\"></a>  CSpinButtonCtrl::SetBase"},{"content":"Sets the base for a spin button control.","pos":[11201,11241]},{"pos":[11290,11300],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"New base value for the control.","pos":[11315,11346]},{"content":"It can be 10 for decimal or 16 for hexadecimal.","pos":[11347,11394]},{"pos":[11404,11416],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The previous base value if successful, or zero if an invalid base is given.","pos":[11420,11495]},{"pos":[11505,11512],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The base value determines whether the buddy window displays numbers in decimal or hexadecimal digits.","pos":[11516,11617]},{"content":"Hexadecimal numbers are always unsigned; decimal numbers are signed.","pos":[11618,11686]},{"pos":[11696,11763],"content":"<bpt id=\"p1\">&lt;a name=\"cspinbuttonctrl__setbuddy\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CSpinButtonCtrl::SetBuddy","linkify":"<a name=\"cspinbuttonctrl__setbuddy\"></a>  CSpinButtonCtrl::SetBuddy","source":"<a name=\"cspinbuttonctrl__setbuddy\"></a>  CSpinButtonCtrl::SetBuddy"},{"content":"Sets the buddy window for a spin button control.","pos":[11767,11815]},{"pos":[11873,11883],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Pointer to the new buddy window.","pos":[11902,11934]},{"pos":[11944,11956],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A pointer to the previous buddy window.","pos":[11960,11999]},{"pos":[12009,12016],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"A spin control is almost always associated with another window, such as an edit control, that displays some content.","pos":[12020,12136]},{"content":"This other window is called the \"buddy\" of the spin control.","pos":[12137,12197]},{"pos":[12207,12270],"content":"<bpt id=\"p1\">&lt;a name=\"cspinbuttonctrl__setpos\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CSpinButtonCtrl::SetPos","linkify":"<a name=\"cspinbuttonctrl__setpos\"></a>  CSpinButtonCtrl::SetPos","source":"<a name=\"cspinbuttonctrl__setpos\"></a>  CSpinButtonCtrl::SetPos"},{"content":"Sets the current position for a spin button control.","pos":[12274,12326]},{"pos":[12400,12410],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"New position for the control.","pos":[12424,12453]},{"content":"This value must be in the range specified by the upper and lower limits for the control.","pos":[12454,12542]},{"pos":[12552,12564],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[12568,12655],"content":"The previous position (16-bit precision for <ph id=\"ph1\">`SetPos`</ph>, 32-bit precision for <ph id=\"ph2\">`SetPos32`</ph>).","source":"The previous position (16-bit precision for `SetPos`, 32-bit precision for `SetPos32`)."},{"pos":[12665,12672],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[12676,12712],"content":"<ph id=\"ph1\">`SetPos32`</ph> sets the 32-bit position.","source":"`SetPos32` sets the 32-bit position."},{"pos":[12722,12789],"content":"<bpt id=\"p1\">&lt;a name=\"cspinbuttonctrl__setrange\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CSpinButtonCtrl::SetRange","linkify":"<a name=\"cspinbuttonctrl__setrange\"></a>  CSpinButtonCtrl::SetRange","source":"<a name=\"cspinbuttonctrl__setrange\"></a>  CSpinButtonCtrl::SetRange"},{"content":"Sets the upper and lower limits (range) for a spin button control.","pos":[12793,12859]},{"pos":[12993,13003],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"<ph id=\"ph1\">`nLower`</ph>and <ph id=\"ph2\">`nUpper`</ph>","pos":[13007,13027],"source":"`nLower`and `nUpper`"},{"content":"Upper and lower limits for the control.","pos":[13031,13070]},{"content":"For <ph id=\"ph1\">`SetRange`</ph>, neither limit can be greater than <bpt id=\"p1\">**</bpt>UD_MAXVAL<ept id=\"p1\">**</ept> or less than <bpt id=\"p2\">**</bpt>UD_MINVAL<ept id=\"p2\">**</ept>; in addition, the difference between the two limits cannot exceed <bpt id=\"p3\">**</bpt>UD_MAXVAL<ept id=\"p3\">**</ept>.","pos":[13071,13242],"source":" For `SetRange`, neither limit can be greater than **UD_MAXVAL** or less than **UD_MINVAL**; in addition, the difference between the two limits cannot exceed **UD_MAXVAL**."},{"content":"<ph id=\"ph1\">`SetRange32`</ph> places no restrictions on the limits; use any integers.","pos":[13243,13311],"source":"`SetRange32` places no restrictions on the limits; use any integers."},{"pos":[13321,13328],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[13332,13415],"content":"The member function <ph id=\"ph1\">`SetRange32`</ph> sets the 32-bit range for the spin button control.","source":"The member function `SetRange32` sets the 32-bit range for the spin button control."},{"pos":[13423,13740],"content":"[!NOTE]\n The default range for the spin button has the maximum set to zero (0) and the minimum set to 100. Because the maximum value is less than the minimum value, clicking the up arrow will decrease the position and clicking the down arrow will increase it. Use `CSpinButtonCtrl::SetRange` to adjust these values.","leadings":["","> "],"nodes":[{"content":" The default range for the spin button has the maximum set to zero (0) and the minimum set to 100. Because the maximum value is less than the minimum value, clicking the up arrow will decrease the position and clicking the down arrow will increase it. Use `CSpinButtonCtrl::SetRange` to adjust these values.","pos":[8,315],"nodes":[{"content":"The default range for the spin button has the maximum set to zero (0) and the minimum set to 100.","pos":[1,98]},{"content":"Because the maximum value is less than the minimum value, clicking the up arrow will decrease the position and clicking the down arrow will increase it.","pos":[99,251]},{"content":"Use <ph id=\"ph1\">`CSpinButtonCtrl::SetRange`</ph> to adjust these values.","pos":[252,307],"source":" Use `CSpinButtonCtrl::SetRange` to adjust these values."}]}]},{"pos":[13749,13757],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>MFC Sample CMNCTRL2<ept id=\"p1\">](../../visual-cpp-samples.md)</ept><ph id=\"ph1\"> </ph>","pos":[13761,13812],"source":"[MFC Sample CMNCTRL2](../../visual-cpp-samples.md) "},{"content":"<bpt id=\"p1\"> [</bpt>CWnd Class<ept id=\"p1\">](../../mfc/reference/cwnd-class.md)</ept><ph id=\"ph1\"> </ph>","pos":[13815,13864],"source":" [CWnd Class](../../mfc/reference/cwnd-class.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Hierarchy Chart<ept id=\"p1\">](../../mfc/hierarchy-chart.md)</ept><ph id=\"ph1\"> </ph>","pos":[13867,13916],"source":" [Hierarchy Chart](../../mfc/hierarchy-chart.md) "},{"content":"<bpt id=\"p1\"> [</bpt>CSliderCtrl Class<ept id=\"p1\">](../../mfc/reference/csliderctrl-class.md)</ept>","pos":[13919,13981],"source":" [CSliderCtrl Class](../../mfc/reference/csliderctrl-class.md)"}],"content":"---\ntitle: \"CSpinButtonCtrl Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"CSpinButtonCtrl\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"Windows common controls [C++], CSpinButtonCtrl\"\n  - \"CSpinButtonCtrl class\"\n  - \"CSpinButtonCtrl class, common controls\"\n  - \"up-down controls, spin button control\"\n  - \"spin button control\"\nms.assetid: 509bfd76-1c5a-4af6-973f-e133c0b87734\ncaps.latest.revision: 23\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# CSpinButtonCtrl Class\nProvides the functionality of the Windows common spin button control.  \n  \n## Syntax  \n  \n```  \nclass CSpinButtonCtrl : public CWnd  \n```  \n  \n## Members  \n  \n### Public Constructors  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CSpinButtonCtrl::CSpinButtonCtrl](#cspinbuttonctrl__cspinbuttonctrl)|Constructs a `CSpinButtonCtrl` object.|  \n  \n### Public Methods  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CSpinButtonCtrl::Create](#cspinbuttonctrl__create)|Creates a spin button control and attaches it to a `CSpinButtonCtrl` object.|  \n|[CSpinButtonCtrl::CreateEx](#cspinbuttonctrl__createex)|Creates a spin button control with the specified Windows extended styles and attaches it to a `CSpinButtonCtrl` object.|  \n|[CSpinButtonCtrl::GetAccel](#cspinbuttonctrl__getaccel)|Retrieves acceleration information for a spin button control.|  \n|[CSpinButtonCtrl::GetBase](#cspinbuttonctrl__getbase)|Retrieves the current base for a spin button control.|  \n|[CSpinButtonCtrl::GetBuddy](#cspinbuttonctrl__getbuddy)|Retrieves a pointer to the current buddy window.|  \n|[CSpinButtonCtrl::GetPos](#cspinbuttonctrl__getpos)|Retrieves the current position of a spin button control.|  \n|[CSpinButtonCtrl::GetRange](#cspinbuttonctrl__getrange)|Retrieves the upper and lower limits (range) for a spin button control.|  \n|[CSpinButtonCtrl::SetAccel](#cspinbuttonctrl__setaccel)|Sets the acceleration for a spin button control.|  \n|[CSpinButtonCtrl::SetBase](#cspinbuttonctrl__setbase)|Sets the base for a spin button control.|  \n|[CSpinButtonCtrl::SetBuddy](#cspinbuttonctrl__setbuddy)|Sets the buddy window for a spin button control.|  \n|[CSpinButtonCtrl::SetPos](#cspinbuttonctrl__setpos)|Sets the current position for the control.|  \n|[CSpinButtonCtrl::SetRange](#cspinbuttonctrl__setrange)|Sets the upper and lower limits (range) for a spin button control.|  \n  \n## Remarks  \n A \"spin button control\" (also known as an up-down control) is a pair of arrow buttons that the user can click to increment or decrement a value, such as a scroll position or a number displayed in a companion control. The value associated with a spin button control is called its current position. A spin button control is most often used with a companion control, called a \"buddy window.\"  \n  \n This control (and therefore the `CSpinButtonCtrl` class) is available only to programs running under Windows 95/98 and Windows NT version 3.51 and later.  \n  \n To the user, a spin button control and its buddy window often look like a single control. You can specify that a spin button control automatically position itself next to its buddy window, and that it automatically set the caption of the buddy window to its current position. You can use a spin button control with an edit control to prompt the user for numeric input.  \n  \n Clicking the up arrow moves the current position toward the maximum, and clicking the down arrow moves the current position toward the minimum. By default, the minimum is 100 and the maximum is 0. Any time the minimum setting is greater than the maximum setting (for example, when the default settings are used), clicking the up arrow decreases the position value and clicking the down arrow increases it.  \n  \n A spin button control without a buddy window functions as a sort of simplified scroll bar. For example, a tab control sometimes displays a spin button control to enable the user to scroll additional tabs into view.  \n  \n For more information on using `CSpinButtonCtrl`, see [Controls](../../mfc/controls-mfc.md) and [Using CSpinButtonCtrl](../../mfc/using-cspinbuttonctrl.md).  \n  \n## Inheritance Hierarchy  \n [CObject](../../mfc/reference/cobject-class.md)  \n  \n [CCmdTarget](../../mfc/reference/ccmdtarget-class.md)  \n  \n [CWnd](../../mfc/reference/cwnd-class.md)  \n  \n `CSpinButtonCtrl`  \n  \n## Requirements  \n **Header:** afxcmn.h  \n  \n##  <a name=\"cspinbuttonctrl__create\"></a>  CSpinButtonCtrl::Create  \n Creates a spin button control and attaches it to a `CSpinButtonCtrl` object..  \n  \n```  \nvirtual BOOL Create(\n    DWORD dwStyle,  \n    const RECT& rect,  \n    CWnd* pParentWnd,  \n    UINT nID);\n```  \n  \n### Parameters  \n `dwStyle`  \n Specifies the spin button control's style. Apply any combination of spin button control styles to the control. These styles are described in [Up-Down Control Styles](http://msdn.microsoft.com/library/windows/desktop/bb759885) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n `rect`  \n Specifies the spin button control's size and position. It can be either a [CRect](../../atl-mfc-shared/reference/crect-class.md) object or a [RECT](http://msdn.microsoft.com/library/windows/desktop/dd162897) structure  \n  \n `pParentWnd`  \n A pointer to the spin button control's parent window, usually a `CDialog`. It must not be **NULL.**  \n  \n `nID`  \n Specifies the spin button control's ID.  \n  \n### Return Value  \n Nonzero if initialization was successful; otherwise 0.  \n  \n### Remarks  \n You construct a `CSpinButtonCtrl` object in two steps First, call the constructor, and then call **Create**, which creates the spin button control and attaches it to the `CSpinButtonCtrl` object.  \n  \n To create a spin button control with extended window styles, call [CSpinButtonCtrl::CreateEx](#cspinbuttonctrl__createex) instead of **Create**.  \n  \n##  <a name=\"cspinbuttonctrl__createex\"></a>  CSpinButtonCtrl::CreateEx  \n Creates a control (a child window) and associates it with the `CSpinButtonCtrl` object.  \n  \n```  \nvirtual BOOL CreateEx(\n    DWORD dwExStyle,  \n    DWORD dwStyle,  \n    const RECT& rect,  \n    CWnd* pParentWnd,  \n    UINT nID);\n```  \n  \n### Parameters  \n `dwExStyle`  \n Specifies the extended style of the control being created. For a list of extended windows styles, see the `dwExStyle` parameter for [CreateWindowEx](http://msdn.microsoft.com/library/windows/desktop/ms632680) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n `dwStyle`  \n Specifies the spin button control's style. Apply any combination of spin button control styles to the control. These styles are described in [Up-Down Control Styles](http://msdn.microsoft.com/library/windows/desktop/bb759885) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n `rect`  \n A reference to a [RECT](http://msdn.microsoft.com/library/windows/desktop/dd162897) structure describing the size and position of the window to be created, in client coordinates of `pParentWnd`.  \n  \n `pParentWnd`  \n A pointer to the window that is the control's parent.  \n  \n `nID`  \n The control's child-window ID.  \n  \n### Return Value  \n Nonzero if successful; otherwise 0.  \n  \n### Remarks  \n Use `CreateEx` instead of [Create](#cspinbuttonctrl__create) to apply extended Windows styles, specified by the Windows extended style preface **WS_EX_**.  \n  \n##  <a name=\"cspinbuttonctrl__cspinbuttonctrl\"></a>  CSpinButtonCtrl::CSpinButtonCtrl  \n Constructs a `CSpinButtonCtrl` object.  \n  \n```  \nCSpinButtonCtrl();\n```  \n  \n##  <a name=\"cspinbuttonctrl__getaccel\"></a>  CSpinButtonCtrl::GetAccel  \n Retrieves acceleration information for a spin button control.  \n  \n```  \nUINT GetAccel(\n    int nAccel,  \n    UDACCEL* pAccel) const;\n\n \n```  \n  \n### Parameters  \n `nAccel`  \n Number of elements in the array specified by `pAccel`.  \n  \n `pAccel`  \n Pointer to an array of [UDACCEL](http://msdn.microsoft.com/library/windows/desktop/bb759897) structures that receives acceleration information.  \n  \n### Return Value  \n Number of accelerator structures retrieved.  \n  \n##  <a name=\"cspinbuttonctrl__getbase\"></a>  CSpinButtonCtrl::GetBase  \n Retrieves the current base for a spin button control.  \n  \n```  \nUINT GetBase() const;\n\n \n```  \n  \n### Return Value  \n The current base value.  \n  \n##  <a name=\"cspinbuttonctrl__getbuddy\"></a>  CSpinButtonCtrl::GetBuddy  \n Retrieves a pointer to the current buddy window.  \n  \n```  \nCWnd* GetBuddy() const;\n\n \n```  \n  \n### Return Value  \n A pointer to the current buddy window.  \n  \n##  <a name=\"cspinbuttonctrl__getpos\"></a>  CSpinButtonCtrl::GetPos  \n Retrieves the current position of a spin button control.  \n  \n```  \nint GetPos() const;\n\n \n \nint GetPos32(LPBOOL lpbError = NULL) const;\n\n \n```  \n  \n### Parameters  \n *lpbError*  \n A pointer to a boolean value that is set to zero if the value is successfully retrieved or non-zero if an error occurs. If this parameter is set to **NULL**, errors are not reported.  \n  \n### Return Value  \n The first version returns the 16-bit current position in the low-order word. The high-order word is nonzero if an error occurred.  \n  \n The second version returns the 32-bit position.  \n  \n### Remarks  \n When it processes the value returned, the control updates its current position based on the caption of the buddy window. The control returns an error if there is no buddy window or if the caption specifies an invalid or out-of-range value.  \n  \n##  <a name=\"cspinbuttonctrl__getrange\"></a>  CSpinButtonCtrl::GetRange  \n Retrieves the upper and lower limits (range) for a spin button control.  \n  \n```  \nDWORD GetRange() const;\n\n \n \nvoid GetRange(\n    int& lower,  \n    int& upper) const;\n\n \n \nvoid GetRange32(\n    int& lower,  \n    int &upper) const;\n\n \n```  \n  \n### Parameters  \n *lower*  \n Reference to an integer that receives the lower limit for the control.  \n  \n *upper*  \n Reference to an integer that receives the upper limit for the control.  \n  \n### Return Value  \n The first version returns a 32-bit value containing the upper and lower limits. The low-order word is the upper limit for the control, and the high-order word is the lower limit.  \n  \n### Remarks  \n The member function `GetRange32` retrieves the spin button control's range as a 32-bit integer.  \n  \n##  <a name=\"cspinbuttonctrl__setaccel\"></a>  CSpinButtonCtrl::SetAccel  \n Sets the acceleration for a spin button control.  \n  \n```  \nBOOL SetAccel(\n    int nAccel,  \n    UDACCEL* pAccel);\n```  \n  \n### Parameters  \n `nAccel`  \n Number of [UDACCEL](http://msdn.microsoft.com/library/windows/desktop/bb759897) structures specified by `pAccel`.  \n  \n `pAccel`  \n Pointer to an array of `UDACCEL` structures, which contain acceleration information. Elements should be sorted in ascending order based on the **nSec** member.  \n  \n### Return Value  \n Nonzero if successful; otherwise 0.  \n  \n##  <a name=\"cspinbuttonctrl__setbase\"></a>  CSpinButtonCtrl::SetBase  \n Sets the base for a spin button control.  \n  \n```  \nint SetBase(int nBase);\n```  \n  \n### Parameters  \n `nBase`  \n New base value for the control. It can be 10 for decimal or 16 for hexadecimal.  \n  \n### Return Value  \n The previous base value if successful, or zero if an invalid base is given.  \n  \n### Remarks  \n The base value determines whether the buddy window displays numbers in decimal or hexadecimal digits. Hexadecimal numbers are always unsigned; decimal numbers are signed.  \n  \n##  <a name=\"cspinbuttonctrl__setbuddy\"></a>  CSpinButtonCtrl::SetBuddy  \n Sets the buddy window for a spin button control.  \n  \n```  \nCWnd* SetBuddy(CWnd* pWndBuddy);\n```  \n  \n### Parameters  \n `pWndBuddy`  \n Pointer to the new buddy window.  \n  \n### Return Value  \n A pointer to the previous buddy window.  \n  \n### Remarks  \n A spin control is almost always associated with another window, such as an edit control, that displays some content. This other window is called the \"buddy\" of the spin control.  \n  \n##  <a name=\"cspinbuttonctrl__setpos\"></a>  CSpinButtonCtrl::SetPos  \n Sets the current position for a spin button control.  \n  \n```  \nint SetPos(int nPos);\n\n \nint SetPos32(int nPos);\n```  \n  \n### Parameters  \n `nPos`  \n New position for the control. This value must be in the range specified by the upper and lower limits for the control.  \n  \n### Return Value  \n The previous position (16-bit precision for `SetPos`, 32-bit precision for `SetPos32`).  \n  \n### Remarks  \n `SetPos32` sets the 32-bit position.  \n  \n##  <a name=\"cspinbuttonctrl__setrange\"></a>  CSpinButtonCtrl::SetRange  \n Sets the upper and lower limits (range) for a spin button control.  \n  \n```  \nvoid SetRange(\n    short nLower,  \n    short nUpper);\n\n \nvoid SetRange32(\n    int nLower,  \n    int nUpper);\n```  \n  \n### Parameters  \n `nLower`and `nUpper`  \n Upper and lower limits for the control. For `SetRange`, neither limit can be greater than **UD_MAXVAL** or less than **UD_MINVAL**; in addition, the difference between the two limits cannot exceed **UD_MAXVAL**. `SetRange32` places no restrictions on the limits; use any integers.  \n  \n### Remarks  \n The member function `SetRange32` sets the 32-bit range for the spin button control.  \n  \n> [!NOTE]\n>  The default range for the spin button has the maximum set to zero (0) and the minimum set to 100. Because the maximum value is less than the minimum value, clicking the up arrow will decrease the position and clicking the down arrow will increase it. Use `CSpinButtonCtrl::SetRange` to adjust these values.  \n  \n## See Also  \n [MFC Sample CMNCTRL2](../../visual-cpp-samples.md)   \n [CWnd Class](../../mfc/reference/cwnd-class.md)   \n [Hierarchy Chart](../../mfc/hierarchy-chart.md)   \n [CSliderCtrl Class](../../mfc/reference/csliderctrl-class.md)\n"}