{"nodes":[{"pos":[12,45],"content":"getenv, _wgetenv | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"getenv, _wgetenv | Microsoft Docs","pos":[0,33]}]},{"pos":[1109,1125],"content":"getenv, _wgetenv","linkify":"getenv, _wgetenv","nodes":[{"content":"getenv, _wgetenv","pos":[0,16]}]},{"content":"Gets a value from the current environment.","pos":[1126,1168]},{"content":"More secure versions of these functions are available; see <bpt id=\"p1\">[</bpt>getenv_s, _wgetenv_s<ept id=\"p1\">](../../c-runtime-library/reference/getenv-s-wgetenv-s.md)</ept>.","pos":[1169,1308],"source":" More secure versions of these functions are available; see [getenv_s, _wgetenv_s](../../c-runtime-library/reference/getenv-s-wgetenv-s.md)."},{"pos":[1316,1536],"content":"[!IMPORTANT]\n This API cannot be used in applications that execute in the Windows Runtime. For more information, see [CRT functions not supported with /ZW](http://msdn.microsoft.com/library/windows/apps/jj606124.aspx).","leadings":["","> "],"nodes":[{"content":" This API cannot be used in applications that execute in the Windows Runtime. For more information, see [CRT functions not supported with /ZW](http://msdn.microsoft.com/library/windows/apps/jj606124.aspx).","pos":[13,218],"nodes":[{"content":"This API cannot be used in applications that execute in the Windows Runtime.","pos":[1,77]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>CRT functions not supported with /ZW<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/apps/jj606124.aspx)</ept>.","pos":[78,205],"source":" For more information, see [CRT functions not supported with /ZW](http://msdn.microsoft.com/library/windows/apps/jj606124.aspx)."}]}]},{"pos":[1545,1551],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[1681,1691],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Environment variable name.","pos":[1708,1734]},{"pos":[1743,1755],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Returns a pointer to the environment table entry containing <ph id=\"ph1\">`varname`</ph>.","pos":[1759,1829],"source":"Returns a pointer to the environment table entry containing `varname`."},{"content":"It is not safe to modify the value of the environment variable using the returned pointer.","pos":[1830,1920]},{"content":"Use the <ph id=\"ph1\">`_putenv`</ph> function to modify the value of an environment variable.","pos":[1921,1995],"source":" Use the `_putenv` function to modify the value of an environment variable."},{"content":"The return value is <ph id=\"ph1\">`NULL`</ph> if <ph id=\"ph2\">`varname`</ph> is not found in the environment table.","pos":[1996,2074],"source":" The return value is `NULL` if `varname` is not found in the environment table."},{"pos":[2083,2090],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The <ph id=\"ph1\">`getenv`</ph> function searches the list of environment variables for <ph id=\"ph2\">`varname`</ph>.","pos":[2094,2173],"source":"The `getenv` function searches the list of environment variables for `varname`."},{"content":"<ph id=\"ph1\">`getenv`</ph> is not case sensitive in the Windows operating system.","pos":[2174,2237],"source":"`getenv` is not case sensitive in the Windows operating system."},{"content":"<ph id=\"ph1\">`getenv`</ph> and <ph id=\"ph2\">`_putenv`</ph> use the copy of the environment pointed to by the global variable <ph id=\"ph3\">`_environ`</ph> to access the environment.","pos":[2238,2364],"source":"`getenv` and `_putenv` use the copy of the environment pointed to by the global variable `_environ` to access the environment."},{"content":"<ph id=\"ph1\">`getenv`</ph> operates only on the data structures accessible to the run-time library and not on the environment \"segment\" created for the process by the operating system.","pos":[2365,2531],"source":"`getenv` operates only on the data structures accessible to the run-time library and not on the environment \"segment\" created for the process by the operating system."},{"content":"Therefore, programs that use the <ph id=\"ph1\">`envp`</ph> argument to <bpt id=\"p1\">[</bpt>main<ept id=\"p1\">](../../cpp/main-program-startup.md)</ept> or <bpt id=\"p2\">[</bpt>wmain<ept id=\"p2\">](../../cpp/main-program-startup.md)</ept> may retrieve invalid information.","pos":[2532,2705],"source":" Therefore, programs that use the `envp` argument to [main](../../cpp/main-program-startup.md) or [wmain](../../cpp/main-program-startup.md) may retrieve invalid information."},{"content":"If <ph id=\"ph1\">`varname`</ph> is <ph id=\"ph2\">`NULL`</ph>, this function invokes an invalid parameter handler, as described in <bpt id=\"p1\">[</bpt>Parameter Validation<ept id=\"p1\">](../../c-runtime-library/parameter-validation.md)</ept>.","pos":[2712,2876],"source":"If `varname` is `NULL`, this function invokes an invalid parameter handler, as described in [Parameter Validation](../../c-runtime-library/parameter-validation.md)."},{"content":"If execution is allowed to continue, this function sets <ph id=\"ph1\">`errno`</ph> to <ph id=\"ph2\">`EINVAL`</ph> and returns <ph id=\"ph3\">`NULL`</ph>.","pos":[2877,2972],"source":" If execution is allowed to continue, this function sets `errno` to `EINVAL` and returns `NULL`."},{"content":"<ph id=\"ph1\">`_wgetenv`</ph> is a wide-character version of <ph id=\"ph2\">`getenv`</ph>; the argument and return value of <ph id=\"ph3\">`_wgetenv`</ph> are wide-character strings.","pos":[2979,3102],"source":"`_wgetenv` is a wide-character version of `getenv`; the argument and return value of `_wgetenv` are wide-character strings."},{"content":"The <ph id=\"ph1\">`_wenviron`</ph> global variable is a wide-character version of <ph id=\"ph2\">`_environ`</ph>.","pos":[3103,3177],"source":" The `_wenviron` global variable is a wide-character version of `_environ`."},{"content":"In an MBCS program (for example, in an SBCS ASCII program), <ph id=\"ph1\">`_wenviron`</ph> is initially <ph id=\"ph2\">`NULL`</ph> because the environment is composed of multibyte-character strings.","pos":[3184,3343],"source":"In an MBCS program (for example, in an SBCS ASCII program), `_wenviron` is initially `NULL` because the environment is composed of multibyte-character strings."},{"content":"Then, on the first call to <ph id=\"ph1\">`_wputenv`</ph>, or on the first call to <ph id=\"ph2\">`_wgetenv`</ph> if an (MBCS) environment already exists, a corresponding wide-character string environment is created and is then pointed to by <ph id=\"ph3\">`_wenviron`</ph>.","pos":[3344,3558],"source":" Then, on the first call to `_wputenv`, or on the first call to `_wgetenv` if an (MBCS) environment already exists, a corresponding wide-character string environment is created and is then pointed to by `_wenviron`."},{"content":"Similarly in a Unicode (<ph id=\"ph1\">`_wmain`</ph>) program, <ph id=\"ph2\">`_environ`</ph> is initially <ph id=\"ph3\">`NULL`</ph> because the environment is composed of wide-character strings.","pos":[3565,3701],"source":"Similarly in a Unicode (`_wmain`) program, `_environ` is initially `NULL` because the environment is composed of wide-character strings."},{"content":"Then, on the first call to <ph id=\"ph1\">`_putenv`</ph>, or on the first call to <ph id=\"ph2\">`getenv`</ph> if a (Unicode) environment already exists, a corresponding MBCS environment is created and is then pointed to by <ph id=\"ph3\">`_environ`</ph>.","pos":[3702,3897],"source":" Then, on the first call to `_putenv`, or on the first call to `getenv` if a (Unicode) environment already exists, a corresponding MBCS environment is created and is then pointed to by `_environ`."},{"content":"When two copies of the environment (MBCS and Unicode) exist simultaneously in a program, the run-time system must maintain both copies, resulting in slower execution time.","pos":[3904,4075]},{"content":"For example, whenever you call <ph id=\"ph1\">`_putenv`</ph>, a call to <ph id=\"ph2\">`_wputenv`</ph> is also executed automatically, so that the two environment strings correspond.","pos":[4076,4218],"source":" For example, whenever you call `_putenv`, a call to `_wputenv` is also executed automatically, so that the two environment strings correspond."},{"pos":[4226,4715],"content":"[!CAUTION]\n In rare instances, when the run-time system is maintaining both a Unicode version and a multibyte version of the environment, these two environment versions may not correspond exactly. This is because, although any unique multibyte-character string maps to a unique Unicode string, the mapping from a unique Unicode string to a multibyte-character string is not necessarily unique. For more information, see [_environ, _wenviron](../../c-runtime-library/environ-wenviron.md).","leadings":["","> "],"nodes":[{"content":" In rare instances, when the run-time system is maintaining both a Unicode version and a multibyte version of the environment, these two environment versions may not correspond exactly. This is because, although any unique multibyte-character string maps to a unique Unicode string, the mapping from a unique Unicode string to a multibyte-character string is not necessarily unique. For more information, see [_environ, _wenviron](../../c-runtime-library/environ-wenviron.md).","pos":[11,487],"nodes":[{"content":"In rare instances, when the run-time system is maintaining both a Unicode version and a multibyte version of the environment, these two environment versions may not correspond exactly.","pos":[1,185]},{"content":"This is because, although any unique multibyte-character string maps to a unique Unicode string, the mapping from a unique Unicode string to a multibyte-character string is not necessarily unique.","pos":[186,382]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>_environ, _wenviron<ept id=\"p1\">](../../c-runtime-library/environ-wenviron.md)</ept>.","pos":[383,476],"source":" For more information, see [_environ, _wenviron](../../c-runtime-library/environ-wenviron.md)."}]}]},{"pos":[4723,4968],"content":"[!NOTE]\n The `_putenv` and `_getenv` families of functions are not thread-safe. `_getenv` could return a string pointer while `_putenv` is modifying the string, causing random failures. Make sure that calls to these functions are synchronized.","leadings":["","> "],"nodes":[{"content":" The `_putenv` and `_getenv` families of functions are not thread-safe. `_getenv` could return a string pointer while `_putenv` is modifying the string, causing random failures. Make sure that calls to these functions are synchronized.","pos":[8,243],"nodes":[{"content":"The <ph id=\"ph1\">`_putenv`</ph> and <ph id=\"ph2\">`_getenv`</ph> families of functions are not thread-safe.","pos":[1,71],"source":" The `_putenv` and `_getenv` families of functions are not thread-safe."},{"content":"<ph id=\"ph1\">`_getenv`</ph> could return a string pointer while <ph id=\"ph2\">`_putenv`</ph> is modifying the string, causing random failures.","pos":[72,177],"source":"`_getenv` could return a string pointer while `_putenv` is modifying the string, causing random failures."},{"content":"Make sure that calls to these functions are synchronized.","pos":[178,235]}]}]},{"pos":[4978,5007],"content":"Generic-Text Routine Mappings","linkify":"Generic-Text Routine Mappings","nodes":[{"content":"Generic-Text Routine Mappings","pos":[0,29]}]},{"content":"TCHAR.H routine","pos":[5014,5029]},{"content":"_UNICODE &amp; _MBCS not defined","pos":[5030,5058],"source":"_UNICODE & _MBCS not defined"},{"content":"_MBCS defined","pos":[5059,5072]},{"content":"_UNICODE defined","pos":[5073,5089]},{"content":"To check or change the value of the <ph id=\"ph1\">`TZ`</ph> environment variable, use <ph id=\"ph2\">`getenv`</ph>, <ph id=\"ph3\">`_putenv`</ph> and <ph id=\"ph4\">`_tzset`</ph> as necessary.","pos":[5249,5362],"source":"To check or change the value of the `TZ` environment variable, use `getenv`, `_putenv` and `_tzset` as necessary."},{"content":"For more information about <ph id=\"ph1\">`TZ`</ph>, see <bpt id=\"p1\">[</bpt>_tzset<ept id=\"p1\">](../../c-runtime-library/reference/tzset.md)</ept> and <bpt id=\"p2\">[</bpt>_daylight, timezone, and _tzname<ept id=\"p2\">](../../c-runtime-library/daylight-dstbias-timezone-and-tzname.md)</ept>.","pos":[5363,5557],"source":" For more information about `TZ`, see [_tzset](../../c-runtime-library/reference/tzset.md) and [_daylight, timezone, and _tzname](../../c-runtime-library/daylight-dstbias-timezone-and-tzname.md)."},{"pos":[5566,5578],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"content":"Routine","pos":[5585,5592]},{"content":"Required header","pos":[5593,5608]},{"content":"<ph id=\"ph1\">\\&lt;</ph>stdlib.h&gt;","pos":[5662,5673],"source":"\\<stdlib.h>"},{"content":"<ph id=\"ph1\">\\&lt;</ph>stdlib.h&gt; or <ph id=\"ph2\">\\&lt;</ph>wchar.h&gt;","pos":[5689,5714],"source":"\\<stdlib.h> or \\<wchar.h>"},{"pos":[5722,5826],"content":"For additional compatibility information, see <bpt id=\"p1\">[</bpt>Compatibility<ept id=\"p1\">](../../c-runtime-library/compatibility.md)</ept>.","source":"For additional compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md)."},{"pos":[5835,5842],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[6962,6987],"content":".NET Framework Equivalent","linkify":".NET Framework Equivalent","nodes":[{"content":".NET Framework Equivalent","pos":[0,25]}]},{"pos":[6991,7125],"content":"<bpt id=\"p1\">[</bpt>System::Environment::GetEnvironmentVariable<ept id=\"p1\">](https://msdn.microsoft.com/en-us/library/system.environment.getenvironmentvariable.aspx)</ept>","source":"[System::Environment::GetEnvironmentVariable](https://msdn.microsoft.com/en-us/library/system.environment.getenvironmentvariable.aspx)"},{"pos":[7134,7142],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Process and Environment Control<ept id=\"p1\">](../../c-runtime-library/process-and-environment-control.md)</ept><ph id=\"ph1\"> </ph>","pos":[7146,7240],"source":"[Process and Environment Control](../../c-runtime-library/process-and-environment-control.md) "},{"content":"<bpt id=\"p1\"> [</bpt>_putenv, _wputenv<ept id=\"p1\">](../../c-runtime-library/reference/putenv-wputenv.md)</ept><ph id=\"ph1\"> </ph>","pos":[7243,7317],"source":" [_putenv, _wputenv](../../c-runtime-library/reference/putenv-wputenv.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Environmental Constants<ept id=\"p1\">](../../c-runtime-library/environmental-constants.md)</ept>","pos":[7320,7398],"source":" [Environmental Constants](../../c-runtime-library/environmental-constants.md)"}],"content":"---\ntitle: \"getenv, _wgetenv | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\napiname: \n  - \"getenv\"\n  - \"_wgetenv\"\napilocation: \n  - \"msvcrt.dll\"\n  - \"msvcr80.dll\"\n  - \"msvcr90.dll\"\n  - \"msvcr100.dll\"\n  - \"msvcr100_clr0400.dll\"\n  - \"msvcr110.dll\"\n  - \"msvcr110_clr0400.dll\"\n  - \"msvcr120.dll\"\n  - \"msvcr120_clr0400.dll\"\n  - \"ucrtbase.dll\"\n  - \"api-ms-win-crt-environment-l1-1-0.dll\"\napitype: \"DLLExport\"\nf1_keywords: \n  - \"_wgetenv\"\n  - \"getenv\"\n  - \"_tgetenv\"\ndev_langs: \n  - \"C++\"\n  - \"C\"\nhelpviewer_keywords: \n  - \"getenv function\"\n  - \"tgetenv function\"\n  - \"wgetenv function\"\n  - \"environment values\"\n  - \"environment variables\"\n  - \"_tgetenv function\"\n  - \"_wgetenv function\"\nms.assetid: 3b9cb9ab-a126-4e0e-a44f-6c5a7134daf4\ncaps.latest.revision: 31\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# getenv, _wgetenv\nGets a value from the current environment. More secure versions of these functions are available; see [getenv_s, _wgetenv_s](../../c-runtime-library/reference/getenv-s-wgetenv-s.md).  \n  \n> [!IMPORTANT]\n>  This API cannot be used in applications that execute in the Windows Runtime. For more information, see [CRT functions not supported with /ZW](http://msdn.microsoft.com/library/windows/apps/jj606124.aspx).  \n  \n## Syntax  \n  \n```  \nchar *getenv(   \n   const char *varname   \n);  \nwchar_t *_wgetenv(   \n   const wchar_t *varname   \n);  \n```  \n  \n#### Parameters  \n `varname`  \n Environment variable name.  \n  \n## Return Value  \n Returns a pointer to the environment table entry containing `varname`. It is not safe to modify the value of the environment variable using the returned pointer. Use the `_putenv` function to modify the value of an environment variable. The return value is `NULL` if `varname` is not found in the environment table.  \n  \n## Remarks  \n The `getenv` function searches the list of environment variables for `varname`. `getenv` is not case sensitive in the Windows operating system. `getenv` and `_putenv` use the copy of the environment pointed to by the global variable `_environ` to access the environment. `getenv` operates only on the data structures accessible to the run-time library and not on the environment \"segment\" created for the process by the operating system. Therefore, programs that use the `envp` argument to [main](../../cpp/main-program-startup.md) or [wmain](../../cpp/main-program-startup.md) may retrieve invalid information.  \n  \n If `varname` is `NULL`, this function invokes an invalid parameter handler, as described in [Parameter Validation](../../c-runtime-library/parameter-validation.md). If execution is allowed to continue, this function sets `errno` to `EINVAL` and returns `NULL`.  \n  \n `_wgetenv` is a wide-character version of `getenv`; the argument and return value of `_wgetenv` are wide-character strings. The `_wenviron` global variable is a wide-character version of `_environ`.  \n  \n In an MBCS program (for example, in an SBCS ASCII program), `_wenviron` is initially `NULL` because the environment is composed of multibyte-character strings. Then, on the first call to `_wputenv`, or on the first call to `_wgetenv` if an (MBCS) environment already exists, a corresponding wide-character string environment is created and is then pointed to by `_wenviron`.  \n  \n Similarly in a Unicode (`_wmain`) program, `_environ` is initially `NULL` because the environment is composed of wide-character strings. Then, on the first call to `_putenv`, or on the first call to `getenv` if a (Unicode) environment already exists, a corresponding MBCS environment is created and is then pointed to by `_environ`.  \n  \n When two copies of the environment (MBCS and Unicode) exist simultaneously in a program, the run-time system must maintain both copies, resulting in slower execution time. For example, whenever you call `_putenv`, a call to `_wputenv` is also executed automatically, so that the two environment strings correspond.  \n  \n> [!CAUTION]\n>  In rare instances, when the run-time system is maintaining both a Unicode version and a multibyte version of the environment, these two environment versions may not correspond exactly. This is because, although any unique multibyte-character string maps to a unique Unicode string, the mapping from a unique Unicode string to a multibyte-character string is not necessarily unique. For more information, see [_environ, _wenviron](../../c-runtime-library/environ-wenviron.md).  \n  \n> [!NOTE]\n>  The `_putenv` and `_getenv` families of functions are not thread-safe. `_getenv` could return a string pointer while `_putenv` is modifying the string, causing random failures. Make sure that calls to these functions are synchronized.  \n  \n### Generic-Text Routine Mappings  \n  \n|TCHAR.H routine|_UNICODE & _MBCS not defined|_MBCS defined|_UNICODE defined|  \n|---------------------|------------------------------------|--------------------|-----------------------|  \n|`_tgetenv`|`getenv`|`getenv`|`_wgetenv`|  \n  \n To check or change the value of the `TZ` environment variable, use `getenv`, `_putenv` and `_tzset` as necessary. For more information about `TZ`, see [_tzset](../../c-runtime-library/reference/tzset.md) and [_daylight, timezone, and _tzname](../../c-runtime-library/daylight-dstbias-timezone-and-tzname.md).  \n  \n## Requirements  \n  \n|Routine|Required header|  \n|-------------|---------------------|  \n|`getenv`|\\<stdlib.h>|  \n|`_wgetenv`|\\<stdlib.h> or \\<wchar.h>|  \n  \n For additional compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md).  \n  \n## Example  \n  \n```  \n// crt_getenv.c  \n// compile with: /W3  \n// This program uses getenv to retrieve  \n// the LIB environment variable and then uses  \n// _putenv to change it to a new value.  \n  \n#include <stdlib.h>  \n#include <stdio.h>  \n  \nint main( void )  \n{  \n   char *libvar;  \n  \n   // Get the value of the LIB environment variable.  \n   libvar = getenv( \"LIB\" ); // C4996  \n   // Note: getenv is deprecated; consider using getenv_s instead  \n  \n   if( libvar != NULL )  \n      printf( \"Original LIB variable is: %s\\n\", libvar );  \n  \n   // Attempt to change path. Note that this only affects the environment  \n   // variable of the current process. The command processor's  \n   // environment is not changed.  \n   _putenv( \"LIB=c:\\\\mylib;c:\\\\yourlib\" ); // C4996  \n   // Note: _putenv is deprecated; consider using putenv_s instead  \n  \n   // Get new value.  \n   libvar = getenv( \"LIB\" ); // C4996  \n  \n   if( libvar != NULL )  \n      printf( \"New LIB variable is: %s\\n\", libvar );  \n}  \n```  \n  \n```Output  \nOriginal LIB variable is: C:\\progra~1\\devstu~1\\vc\\lib  \nNew LIB variable is: c:\\mylib;c:\\yourlib  \n```  \n  \n## .NET Framework Equivalent  \n [System::Environment::GetEnvironmentVariable](https://msdn.microsoft.com/en-us/library/system.environment.getenvironmentvariable.aspx)  \n  \n## See Also  \n [Process and Environment Control](../../c-runtime-library/process-and-environment-control.md)   \n [_putenv, _wputenv](../../c-runtime-library/reference/putenv-wputenv.md)   \n [Environmental Constants](../../c-runtime-library/environmental-constants.md)"}