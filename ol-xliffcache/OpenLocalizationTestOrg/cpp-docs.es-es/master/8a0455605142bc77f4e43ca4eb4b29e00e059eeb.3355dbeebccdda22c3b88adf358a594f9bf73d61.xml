{"nodes":[{"pos":[12,72],"content":"Receiving Notification from Common Controls | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Receiving Notification from Common Controls | Microsoft Docs","pos":[0,60]}]},{"content":"Receiving Notification from Common Controls","pos":[907,950]},{"content":"Common controls are child windows that send notification messages to the parent window when events, such as input from the user, occur in the control.","pos":[951,1101]},{"content":"The application relies on these notification messages to determine what action the user wants it to take.","pos":[1108,1213]},{"content":"Most common controls send notification messages as <bpt id=\"p1\">**</bpt>WM_NOTIFY<ept id=\"p1\">**</ept> messages.","pos":[1214,1288],"source":" Most common controls send notification messages as **WM_NOTIFY** messages."},{"content":"Windows controls send most notification messages as <bpt id=\"p1\">**</bpt>WM_COMMAND<ept id=\"p1\">**</ept> messages.","pos":[1289,1365],"source":" Windows controls send most notification messages as **WM_COMMAND** messages."},{"content":"<bpt id=\"p1\">[</bpt>CWnd::OnNotify<ept id=\"p1\">](../mfc/reference/cwnd-class.md#cwnd__onnotify)</ept> is the handler for the <bpt id=\"p2\">**</bpt>WM_NOTIFY<ept id=\"p2\">**</ept> message.","pos":[1366,1475],"source":"[CWnd::OnNotify](../mfc/reference/cwnd-class.md#cwnd__onnotify) is the handler for the **WM_NOTIFY** message."},{"content":"As with <ph id=\"ph1\">`CWnd::OnCommand`</ph>, the implementation of <ph id=\"ph2\">`OnNotify`</ph> dispatches the notification message to <ph id=\"ph3\">`OnCmdMsg`</ph> for handling in message maps.","pos":[1476,1615],"source":" As with `CWnd::OnCommand`, the implementation of `OnNotify` dispatches the notification message to `OnCmdMsg` for handling in message maps."},{"content":"The message-map entry for handling notifications is <ph id=\"ph1\">`ON_NOTIFY`</ph>.","pos":[1616,1680],"source":" The message-map entry for handling notifications is `ON_NOTIFY`."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Technical Note 61: ON_NOTIFY and WM_NOTIFY Messages<ept id=\"p1\">](../mfc/tn061-on-notify-and-wm-notify-messages.md)</ept>.","pos":[1681,1811],"source":" For more information, see [Technical Note 61: ON_NOTIFY and WM_NOTIFY Messages](../mfc/tn061-on-notify-and-wm-notify-messages.md)."},{"content":"Alternately, a derived class can handle its own notification messages using \"message reflection.\"","pos":[1818,1915]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Technical Note 62: Message Reflection for Windows Controls<ept id=\"p1\">](../mfc/tn062-message-reflection-for-windows-controls.md)</ept>.","pos":[1916,2060],"source":" For more information, see [Technical Note 62: Message Reflection for Windows Controls](../mfc/tn062-message-reflection-for-windows-controls.md)."},{"content":"Retrieving the Cursor Position in a Notification Message","pos":[2069,2125]},{"content":"On occasion, it is useful to determine the current position of the cursor when certain notification messages are received by a common control.","pos":[2129,2271]},{"content":"For example, it would be helpful to determine the current cursor location when a common control receives a <bpt id=\"p1\">**</bpt>NM_RCLICK<ept id=\"p1\">**</ept> notification message.","pos":[2272,2414],"source":" For example, it would be helpful to determine the current cursor location when a common control receives a **NM_RCLICK** notification message."},{"content":"There is a simple way to accomplish this by calling <ph id=\"ph1\">`CWnd::GetCurrentMessage`</ph>.","pos":[2421,2499],"source":"There is a simple way to accomplish this by calling `CWnd::GetCurrentMessage`."},{"content":"However, this method only retrieves the cursor position at the time the message was sent.","pos":[2500,2589]},{"content":"Because the cursor may have been moved since the message was sent you must call <bpt id=\"p1\">**</bpt>CWnd::GetCursorPos<ept id=\"p1\">**</ept> to get the current cursor position.","pos":[2590,2728],"source":" Because the cursor may have been moved since the message was sent you must call **CWnd::GetCursorPos** to get the current cursor position."},{"pos":[2736,2820],"content":"[!NOTE]\n `CWnd::GetCurrentMessage` should only be called within a message handler.","leadings":["","> "],"nodes":[{"content":"should only be called within a message handler.","pos":[35,82]}]},{"pos":[2827,2931],"content":"Add the following code to the body of the notification message handler (in this example, <bpt id=\"p1\">**</bpt>NM_RCLICK<ept id=\"p1\">**</ept>):","source":"Add the following code to the body of the notification message handler (in this example, **NM_RCLICK**):"},{"pos":[2949,2976],"content":"NVC_MFCControlLadenDialog#4"},{"pos":[3059,3136],"content":"At this point, the mouse cursor location is stored in the <ph id=\"ph1\">`cursorPos`</ph> object.","source":"At this point, the mouse cursor location is stored in the `cursorPos` object."},{"content":"See Also","pos":[3145,3153]},{"content":"Making and Using Controls","pos":[3158,3183]},{"content":"Controls","pos":[3227,3235]}],"content":"---\ntitle: \"Receiving Notification from Common Controls | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"ON_NOTIFY\"\n  - \"WM_NOTIFY\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"OnNotify method\"\n  - \"common controls [C++], notifications\"\n  - \"ON_NOTIFY macro\"\n  - \"controls [MFC], notifications\"\n  - \"receiving notifications from common controls\"\n  - \"notifications, common controls\"\n  - \"Windows common controls [C++], notifications\"\n  - \"WM_NOTIFY message\"\nms.assetid: 50194592-d60d-44d0-8ab3-338a2a2c63e7\ncaps.latest.revision: 11\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Receiving Notification from Common Controls\nCommon controls are child windows that send notification messages to the parent window when events, such as input from the user, occur in the control.  \n  \n The application relies on these notification messages to determine what action the user wants it to take. Most common controls send notification messages as **WM_NOTIFY** messages. Windows controls send most notification messages as **WM_COMMAND** messages. [CWnd::OnNotify](../mfc/reference/cwnd-class.md#cwnd__onnotify) is the handler for the **WM_NOTIFY** message. As with `CWnd::OnCommand`, the implementation of `OnNotify` dispatches the notification message to `OnCmdMsg` for handling in message maps. The message-map entry for handling notifications is `ON_NOTIFY`. For more information, see [Technical Note 61: ON_NOTIFY and WM_NOTIFY Messages](../mfc/tn061-on-notify-and-wm-notify-messages.md).  \n  \n Alternately, a derived class can handle its own notification messages using \"message reflection.\" For more information, see [Technical Note 62: Message Reflection for Windows Controls](../mfc/tn062-message-reflection-for-windows-controls.md).  \n  \n## Retrieving the Cursor Position in a Notification Message  \n On occasion, it is useful to determine the current position of the cursor when certain notification messages are received by a common control. For example, it would be helpful to determine the current cursor location when a common control receives a **NM_RCLICK** notification message.  \n  \n There is a simple way to accomplish this by calling `CWnd::GetCurrentMessage`. However, this method only retrieves the cursor position at the time the message was sent. Because the cursor may have been moved since the message was sent you must call **CWnd::GetCursorPos** to get the current cursor position.  \n  \n> [!NOTE]\n>  `CWnd::GetCurrentMessage` should only be called within a message handler.  \n  \n Add the following code to the body of the notification message handler (in this example, **NM_RCLICK**):  \n  \n [!code-cpp[NVC_MFCControlLadenDialog#4](../mfc/codesnippet/cpp/receiving-notification-from-common-controls_1.cpp)]  \n  \n At this point, the mouse cursor location is stored in the `cursorPos` object.  \n  \n## See Also  \n [Making and Using Controls](../mfc/making-and-using-controls.md)   \n [Controls](../mfc/controls-mfc.md)\n\n"}