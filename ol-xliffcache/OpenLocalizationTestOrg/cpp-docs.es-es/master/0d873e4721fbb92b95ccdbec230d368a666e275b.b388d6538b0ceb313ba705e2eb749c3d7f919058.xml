{"nodes":[{"pos":[12,42],"content":"Functions (C) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Functions (C) | Microsoft Docs","pos":[0,30]}]},{"content":"Functions (C)","pos":[598,611]},{"content":"The function is the fundamental modular unit in C. A function is usually designed to perform a specific task, and its name often reflects that task.","pos":[612,760]},{"content":"A function contains declarations and statements.","pos":[761,809]},{"content":"This section describes how to declare, define, and call C functions.","pos":[810,878]},{"content":"Other topics discussed are:","pos":[879,906]},{"content":"Overview of functions","pos":[917,938]},{"content":"Function attributes","pos":[990,1009]},{"content":"Specifying calling conventions","pos":[1059,1089]},{"content":"Inline functions","pos":[1150,1166]},{"content":"DLL export and import functions","pos":[1213,1244]},{"content":"Naked functions","pos":[1306,1321]},{"content":"Storage class","pos":[1367,1380]},{"content":"Return type","pos":[1424,1435]},{"content":"Arguments","pos":[1477,1486]},{"content":"Parameters","pos":[1526,1536]},{"content":"See Also","pos":[1575,1583]},{"content":"C Language Reference","pos":[1588,1608]}],"content":"---\ntitle: \"Functions (C) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"C++\"\n  - \"C\"\nhelpviewer_keywords: \n  - \"functions [C]\"\n  - \"Visual C, functions\"\nms.assetid: 31839f65-49f4-43e1-85ec-8769924ffa96\ncaps.latest.revision: 7\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Functions (C)\nThe function is the fundamental modular unit in C. A function is usually designed to perform a specific task, and its name often reflects that task. A function contains declarations and statements. This section describes how to declare, define, and call C functions. Other topics discussed are:  \n  \n-   [Overview of functions](../c-language/overview-of-functions.md)  \n  \n-   [Function attributes](../c-language/function-attributes.md)  \n  \n-   [Specifying calling conventions](../c-language/specifying-calling-conventions.md)  \n  \n-   [Inline functions](../c-language/inline-functions.md)  \n  \n-   [DLL export and import functions](../c-language/dll-import-and-export-functions.md)  \n  \n-   [Naked functions](../c-language/naked-functions.md)  \n  \n-   [Storage class](../c-language/storage-class.md)  \n  \n-   [Return type](../c-language/return-type.md)  \n  \n-   [Arguments](../c-language/arguments.md)  \n  \n-   [Parameters](../c-language/parameters.md)  \n  \n## See Also  \n [C Language Reference](../c-language/c-language-reference.md)"}