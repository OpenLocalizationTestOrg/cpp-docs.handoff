{"nodes":[{"pos":[12,49],"content":"CMFCOutlookBar Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"CMFCOutlookBar Class | Microsoft Docs","pos":[0,37]}]},{"pos":[642,662],"content":"CMFCOutlookBar Class","linkify":"CMFCOutlookBar Class","nodes":[{"content":"CMFCOutlookBar Class","pos":[0,20]}]},{"content":"A tabbed pane with the visual appearance of the <bpt id=\"p1\">**</bpt>Navigation Pane<ept id=\"p1\">**</ept> in Microsoft Outlook 2000 or Outlook 2003.","pos":[663,773],"source":"A tabbed pane with the visual appearance of the **Navigation Pane** in Microsoft Outlook 2000 or Outlook 2003."},{"content":"The <ph id=\"ph1\">`CMFCOutlookBar`</ph> object contains a <bpt id=\"p1\">[</bpt>CMFCOutlookBarTabCtrl Class<ept id=\"p1\">](../../mfc/reference/cmfcoutlookbartabctrl-class.md)</ept> object and a series of tabs.","pos":[774,923],"source":" The `CMFCOutlookBar` object contains a [CMFCOutlookBarTabCtrl Class](../../mfc/reference/cmfcoutlookbartabctrl-class.md) object and a series of tabs."},{"content":"The tabs can be either <bpt id=\"p1\">[</bpt>CMFCOutlookBarPane Class<ept id=\"p1\">](../../mfc/reference/cmfcoutlookbarpane-class.md)</ept> objects or <ph id=\"ph1\">`CWnd`</ph>-derived objects.","pos":[924,1057],"source":" The tabs can be either [CMFCOutlookBarPane Class](../../mfc/reference/cmfcoutlookbarpane-class.md) objects or `CWnd`-derived objects."},{"content":"To the user, the Outlook bar appears as a series of buttons and a display area.","pos":[1058,1137]},{"content":"When the user clicks a button, the corresponding control or button pane is displayed.","pos":[1138,1223]},{"pos":[1232,1238],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[1310,1317],"content":"Members","linkify":"Members","nodes":[{"content":"Members","pos":[0,7]}]},{"pos":[1327,1346],"content":"Public Constructors","linkify":"Public Constructors","nodes":[{"content":"Public Constructors","pos":[0,19]}]},{"content":"Name","pos":[1353,1357]},{"content":"Description","pos":[1358,1369]},{"content":"Default constructor.","pos":[1440,1460]},{"content":"Destructor.","pos":[1499,1510]},{"pos":[1521,1535],"content":"Public Methods","linkify":"Public Methods","nodes":[{"content":"Public Methods","pos":[0,14]}]},{"content":"Name","pos":[1542,1546]},{"content":"Description","pos":[1547,1558]},{"pos":[1596,1687],"content":"<bpt id=\"p1\">[</bpt>CMFCOutlookBar::AllowDestroyEmptyTabbedPane<ept id=\"p1\">](#cmfcoutlookbar__allowdestroyemptytabbedpane)</ept>","source":"[CMFCOutlookBar::AllowDestroyEmptyTabbedPane](#cmfcoutlookbar__allowdestroyemptytabbedpane)"},{"content":"Specifies whether an empty tabbed pane can be destroyed.","pos":[1688,1744]},{"content":"(Overrides <bpt id=\"p1\">[</bpt>CBaseTabbedPane::AllowDestroyEmptyTabbedPane<ept id=\"p1\">](../../mfc/reference/cbasetabbedpane-class.md#cbasetabbedpane__allowdestroyemptytabbedpane)</ept>.)","pos":[1745,1895],"source":" (Overrides [CBaseTabbedPane::AllowDestroyEmptyTabbedPane](../../mfc/reference/cbasetabbedpane-class.md#cbasetabbedpane__allowdestroyemptytabbedpane).)"},{"pos":[1900,1963],"content":"<bpt id=\"p1\">[</bpt>CMFCOutlookBar::CanAcceptPane<ept id=\"p1\">](#cmfcoutlookbar__canacceptpane)</ept>","source":"[CMFCOutlookBar::CanAcceptPane](#cmfcoutlookbar__canacceptpane)"},{"content":"Determines whether another pane can be docked to the Outlook bar pane.","pos":[1964,2034]},{"content":"(Overrides CDockablePane::CanAcceptPane.)","pos":[2035,2076]},{"pos":[2081,2170],"content":"<bpt id=\"p1\">[</bpt>CMFCOutlookBar::CanSetCaptionTextToTabName<ept id=\"p1\">](#cmfcoutlookbar__cansetcaptiontexttotabname)</ept>","source":"[CMFCOutlookBar::CanSetCaptionTextToTabName](#cmfcoutlookbar__cansetcaptiontexttotabname)"},{"content":"Determines whether the caption for the tabbed pane displays the same text as the active tab.","pos":[2171,2263]},{"content":"(Overrides <bpt id=\"p1\">[</bpt>CBaseTabbedPane::CanSetCaptionTextToTabName<ept id=\"p1\">](../../mfc/reference/cbasetabbedpane-class.md#cbasetabbedpane__cansetcaptiontexttotabname)</ept>.)","pos":[2264,2412],"source":" (Overrides [CBaseTabbedPane::CanSetCaptionTextToTabName](../../mfc/reference/cbasetabbedpane-class.md#cbasetabbedpane__cansetcaptiontexttotabname).)"},{"pos":[2417,2466],"content":"<bpt id=\"p1\">[</bpt>CMFCOutlookBar::Create<ept id=\"p1\">](#cmfcoutlookbar__create)</ept>","source":"[CMFCOutlookBar::Create](#cmfcoutlookbar__create)"},{"content":"Creates the Outlook bar control.","pos":[2467,2499]},{"pos":[2504,2573],"content":"<bpt id=\"p1\">[</bpt>CMFCOutlookBar::CreateCustomPage<ept id=\"p1\">](#cmfcoutlookbar__createcustompage)</ept>","source":"[CMFCOutlookBar::CreateCustomPage](#cmfcoutlookbar__createcustompage)"},{"content":"Creates a custom Outlook bar tab.","pos":[2574,2607]},{"content":"Used by the framework to create a dynamic instance of this class type.","pos":[2643,2713]},{"pos":[2718,2803],"content":"<bpt id=\"p1\">[</bpt>CMFCOutlookBar::DoesAllowDynInsertBefore<ept id=\"p1\">](#cmfcoutlookbar__doesallowdyninsertbefore)</ept>","source":"[CMFCOutlookBar::DoesAllowDynInsertBefore](#cmfcoutlookbar__doesallowdyninsertbefore)"},{"content":"Determines whether a user can dock a control bar at the outer edge of the Outlook bar.","pos":[2804,2890]},{"pos":[2895,2948],"content":"<bpt id=\"p1\">[</bpt>CMFCOutlookBar::FloatTab<ept id=\"p1\">](#cmfcoutlookbar__floattab)</ept>","source":"[CMFCOutlookBar::FloatTab](#cmfcoutlookbar__floattab)"},{"content":"Floats a pane, but only if the pane currently resides in a detachable tab.","pos":[2949,3023]},{"content":"(Overrides <bpt id=\"p1\">[</bpt>CBaseTabbedPane::FloatTab<ept id=\"p1\">](../../mfc/reference/cbasetabbedpane-class.md#cbasetabbedpane__floattab)</ept>.)","pos":[3024,3136],"source":" (Overrides [CBaseTabbedPane::FloatTab](../../mfc/reference/cbasetabbedpane-class.md#cbasetabbedpane__floattab).)"},{"pos":[3141,3206],"content":"<bpt id=\"p1\">[</bpt>CMFCOutlookBar::GetButtonsFont<ept id=\"p1\">](#cmfcoutlookbar__getbuttonsfont)</ept>","source":"[CMFCOutlookBar::GetButtonsFont](#cmfcoutlookbar__getbuttonsfont)"},{"content":"Returns the font of the text on the buttons of the Outlook bar.","pos":[3207,3270]},{"pos":[3275,3332],"content":"<bpt id=\"p1\">[</bpt>CMFCOutlookBar::GetTabArea<ept id=\"p1\">](#cmfcoutlookbar__gettabarea)</ept>","source":"[CMFCOutlookBar::GetTabArea](#cmfcoutlookbar__gettabarea)"},{"content":"Returns the size and position of the tab areas on the Outlook bar.","pos":[3333,3399]},{"content":"(Overrides <bpt id=\"p1\">[</bpt>CBaseTabbedPane::GetTabArea<ept id=\"p1\">](../../mfc/reference/cbasetabbedpane-class.md#cbasetabbedpane__gettabarea)</ept>.)","pos":[3400,3516],"source":" (Overrides [CBaseTabbedPane::GetTabArea](../../mfc/reference/cbasetabbedpane-class.md#cbasetabbedpane__gettabarea).)"},{"pos":[3552,3712],"content":"Used by the framework to obtain a pointer to the <bpt id=\"p1\">[</bpt>CRuntimeClass<ept id=\"p1\">](../../mfc/reference/cruntimeclass-structure.md)</ept> object that is associated with this class type.","source":"Used by the framework to obtain a pointer to the [CRuntimeClass](../../mfc/reference/cruntimeclass-structure.md) object that is associated with this class type."},{"pos":[3717,3774],"content":"<bpt id=\"p1\">[</bpt>CMFCOutlookBar::IsMode2003<ept id=\"p1\">](#cmfcoutlookbar__ismode2003)</ept>","source":"[CMFCOutlookBar::IsMode2003](#cmfcoutlookbar__ismode2003)"},{"content":"Determines whether the behavior of the Outlook bar mimics that of Microsoft Office Outlook 2003 (see Remarks).","pos":[3775,3885]},{"pos":[3890,3959],"content":"<bpt id=\"p1\">[</bpt>CMFCOutlookBar::OnAfterAnimation<ept id=\"p1\">](#cmfcoutlookbar__onafteranimation)</ept>","source":"[CMFCOutlookBar::OnAfterAnimation](#cmfcoutlookbar__onafteranimation)"},{"pos":[3960,4146],"content":"Called by <bpt id=\"p1\">[</bpt>CMFCOutlookBarTabCtrl::SetActiveTab<ept id=\"p1\">](../../mfc/reference/cmfcoutlookbartabctrl-class.md#cmfcoutlookbartabctrl__setactivetab)</ept> after the active tab has been set using animation.","source":"Called by [CMFCOutlookBarTabCtrl::SetActiveTab](../../mfc/reference/cmfcoutlookbartabctrl-class.md#cmfcoutlookbartabctrl__setactivetab) after the active tab has been set using animation."},{"pos":[4151,4222],"content":"<bpt id=\"p1\">[</bpt>CMFCOutlookBar::OnBeforeAnimation<ept id=\"p1\">](#cmfcoutlookbar__onbeforeanimation)</ept>","source":"[CMFCOutlookBar::OnBeforeAnimation](#cmfcoutlookbar__onbeforeanimation)"},{"pos":[4223,4418],"content":"Called by <bpt id=\"p1\">[</bpt>CMFCOutlookBarTabCtrl::SetActiveTab<ept id=\"p1\">](../../mfc/reference/cmfcoutlookbartabctrl-class.md#cmfcoutlookbartabctrl__setactivetab)</ept> before a tab page is set as the active tab using animation.","source":"Called by [CMFCOutlookBarTabCtrl::SetActiveTab](../../mfc/reference/cmfcoutlookbartabctrl-class.md#cmfcoutlookbartabctrl__setactivetab) before a tab page is set as the active tab using animation."},{"pos":[4423,4476],"content":"<bpt id=\"p1\">[</bpt>CMFCOutlookBar::OnScroll<ept id=\"p1\">](#cmfcoutlookbar__onscroll)</ept>","source":"[CMFCOutlookBar::OnScroll](#cmfcoutlookbar__onscroll)"},{"content":"Called by the framework if the Outlook bar is scrolling up or down.","pos":[4477,4544]},{"pos":[4549,4618],"content":"<bpt id=\"p1\">[</bpt>CMFCOutlookBar::RemoveCustomPage<ept id=\"p1\">](#cmfcoutlookbar__removecustompage)</ept>","source":"[CMFCOutlookBar::RemoveCustomPage](#cmfcoutlookbar__removecustompage)"},{"content":"Removes a custom Outlook bar tab.","pos":[4619,4652]},{"pos":[4657,4722],"content":"<bpt id=\"p1\">[</bpt>CMFCOutlookBar::SetButtonsFont<ept id=\"p1\">](#cmfcoutlookbar__setbuttonsfont)</ept>","source":"[CMFCOutlookBar::SetButtonsFont](#cmfcoutlookbar__setbuttonsfont)"},{"content":"Sets the font of the text on the buttons of the Outlook bar.","pos":[4723,4783]},{"pos":[4788,4847],"content":"<bpt id=\"p1\">[</bpt>CMFCOutlookBar::SetMode2003<ept id=\"p1\">](#cmfcoutlookbar__setmode2003)</ept>","source":"[CMFCOutlookBar::SetMode2003](#cmfcoutlookbar__setmode2003)"},{"content":"Specifies whether the behavior of the Outlook bar mimics that of Outlook 2003 (see Remarks).","pos":[4848,4940]},{"pos":[4950,4957],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[4961,5082],"content":"For an example of an Outlook bar, see the <bpt id=\"p1\">[</bpt>OutlookDemo Sample: MFC OutlookDemo Application<ept id=\"p1\">](../../visual-cpp-samples.md)</ept>.","source":"For an example of an Outlook bar, see the [OutlookDemo Sample: MFC OutlookDemo Application](../../visual-cpp-samples.md)."},{"pos":[5091,5119],"content":"Implementing the Outlook Bar","linkify":"Implementing the Outlook Bar","nodes":[{"content":"Implementing the Outlook Bar","pos":[0,28]}]},{"pos":[5123,5199],"content":"To use the <ph id=\"ph1\">`CMFCOutlookBar`</ph> control in your application, follow these steps:","source":"To use the `CMFCOutlookBar` control in your application, follow these steps:"},{"pos":[5209,5274],"content":"Embed a <ph id=\"ph1\">`CMFCOutlookBar`</ph> object into the main frame window class.","source":"Embed a `CMFCOutlookBar` object into the main frame window class."},{"pos":[5446,5609],"content":"When processing the <ph id=\"ph1\">`WM_CREATE`</ph> message in the main frame, call the <bpt id=\"p1\">[</bpt>CMFCOutlookBar::Create<ept id=\"p1\">](#cmfcoutlookbar__create)</ept> method to create the Outlook bar tab control.","source":"When processing the `WM_CREATE` message in the main frame, call the [CMFCOutlookBar::Create](#cmfcoutlookbar__create) method to create the Outlook bar tab control."},{"pos":[5796,5986],"content":"Obtain a pointer to the underlying <ph id=\"ph1\">`CMFCOutlookBarTabCtrl`</ph> by using <bpt id=\"p1\">[</bpt>CBaseTabbedPane::GetUnderlyingWindow<ept id=\"p1\">](../../mfc/reference/cbasetabbedpane-class.md#cbasetabbedpane__getunderlyingwindow)</ept>.","source":"Obtain a pointer to the underlying `CMFCOutlookBarTabCtrl` by using [CBaseTabbedPane::GetUnderlyingWindow](../../mfc/reference/cbasetabbedpane-class.md#cbasetabbedpane__getunderlyingwindow)."},{"pos":[6120,6247],"content":"Create a <bpt id=\"p1\">[</bpt>CMFCOutlookBarPane Class<ept id=\"p1\">](../../mfc/reference/cmfcoutlookbarpane-class.md)</ept> object for each tab that contains buttons.","source":"Create a [CMFCOutlookBarPane Class](../../mfc/reference/cmfcoutlookbarpane-class.md) object for each tab that contains buttons."},{"content":"Call <bpt id=\"p1\">[</bpt>CMFCOutlookBarTabCtrl::AddTab<ept id=\"p1\">](../../mfc/reference/cmfcbasetabctrl-class.md#cmfcbasetabctrl__addtab)</ept> to add each new tab.","pos":[6741,6868],"source":"Call [CMFCOutlookBarTabCtrl::AddTab](../../mfc/reference/cmfcbasetabctrl-class.md#cmfcbasetabctrl__addtab) to add each new tab."},{"content":"Set the <ph id=\"ph1\">`bDetachable`</ph> parameter to <ph id=\"ph2\">`FALSE`</ph> to make a page non-detachable.","pos":[6869,6942],"source":" Set the `bDetachable` parameter to `FALSE` to make a page non-detachable."},{"content":"Or, use <bpt id=\"p1\">[</bpt>CMFCOutlookBarTabCtrl::AddControl<ept id=\"p1\">](../../mfc/reference/cmfcoutlookbartabctrl-class.md#cmfcoutlookbartabctrl__addcontrol)</ept> to add detachable pages.","pos":[6943,7097],"source":" Or, use [CMFCOutlookBarTabCtrl::AddControl](../../mfc/reference/cmfcoutlookbartabctrl-class.md#cmfcoutlookbartabctrl__addcontrol) to add detachable pages."},{"pos":[7202,7492],"content":"To add a <ph id=\"ph1\">`CWnd`</ph>-derived control (for example, <bpt id=\"p1\">[</bpt>CMFCShellTreeCtrl Class<ept id=\"p1\">](../../mfc/reference/cmfcshelltreectrl-class.md)</ept>) as a tab, create the control and call <bpt id=\"p2\">[</bpt>CMFCOutlookBarTabCtrl::AddTab<ept id=\"p2\">](../../mfc/reference/cmfcbasetabctrl-class.md#cmfcbasetabctrl__addtab)</ept> to add it to the Outlook bar.","source":"To add a `CWnd`-derived control (for example, [CMFCShellTreeCtrl Class](../../mfc/reference/cmfcshelltreectrl-class.md)) as a tab, create the control and call [CMFCOutlookBarTabCtrl::AddTab](../../mfc/reference/cmfcbasetabctrl-class.md#cmfcbasetabctrl__addtab) to add it to the Outlook bar."},{"pos":[7500,7672],"content":"[!NOTE]\n You should use unique control IDs for each [CMFCOutlookBarPane Class](../../mfc/reference/cmfcoutlookbarpane-class.md) object and for each `CWnd`-derived object.","leadings":["","> "],"nodes":[{"content":"You should use unique control IDs for each <bpt id=\"p1\">[</bpt>CMFCOutlookBarPane Class<ept id=\"p1\">](../../mfc/reference/cmfcoutlookbarpane-class.md)</ept> object and for each <ph id=\"ph1\">`CWnd`</ph>-derived object.","pos":[9,170],"source":" You should use unique control IDs for each [CMFCOutlookBarPane Class](../../mfc/reference/cmfcoutlookbarpane-class.md) object and for each `CWnd`-derived object."}]},{"pos":[7679,7878],"content":"To dynamically add or delete new pages at runtime, use <bpt id=\"p1\">[</bpt>CMFCOutlookBar::CreateCustomPage<ept id=\"p1\">](#cmfcoutlookbar__createcustompage)</ept> and <bpt id=\"p2\">[</bpt>CMFCOutlookBar::RemoveCustomPage<ept id=\"p2\">](#cmfcoutlookbar__removecustompage)</ept>.","source":"To dynamically add or delete new pages at runtime, use [CMFCOutlookBar::CreateCustomPage](#cmfcoutlookbar__createcustompage) and [CMFCOutlookBar::RemoveCustomPage](#cmfcoutlookbar__removecustompage)."},{"pos":[7887,7904],"content":"Outlook 2003 Mode","linkify":"Outlook 2003 Mode","nodes":[{"content":"Outlook 2003 Mode","pos":[0,17]}]},{"content":"In Outlook 2003 mode, the tab buttons are positioned at the bottom of the Outlook bar pane.","pos":[7908,7999]},{"content":"When there is not sufficient room to display the buttons, they are displayed as icons in a toolbar-like area along the bottom of the pane.","pos":[8000,8138]},{"content":"Use <bpt id=\"p1\">[</bpt>CMFCOutlookBar::SetMode2003<ept id=\"p1\">](#cmfcoutlookbar__setmode2003)</ept> to enable Outlook 2003 mode.","pos":[8145,8237],"source":"Use [CMFCOutlookBar::SetMode2003](#cmfcoutlookbar__setmode2003) to enable Outlook 2003 mode."},{"content":"Use <bpt id=\"p1\">[</bpt>CMFCOutlookBarTabCtrl::SetToolbarImageList<ept id=\"p1\">](../../mfc/reference/cmfcoutlookbartabctrl-class.md#cmfcoutlookbartabctrl__settoolbarimagelist)</ept> to set the bitmap that contains the icons that are displayed on the bottom of the Outlook bar.","pos":[8238,8476],"source":" Use [CMFCOutlookBarTabCtrl::SetToolbarImageList](../../mfc/reference/cmfcoutlookbartabctrl-class.md#cmfcoutlookbartabctrl__settoolbarimagelist) to set the bitmap that contains the icons that are displayed on the bottom of the Outlook bar."},{"content":"The icons in the bitmap must be ordered by tab index.","pos":[8477,8530]},{"pos":[8539,8560],"content":"Inheritance Hierarchy","linkify":"Inheritance Hierarchy","nodes":[{"content":"Inheritance Hierarchy","pos":[0,21]}]},{"pos":[8564,8611],"content":"<bpt id=\"p1\">[</bpt>CObject<ept id=\"p1\">](../../mfc/reference/cobject-class.md)</ept>","source":"[CObject](../../mfc/reference/cobject-class.md)"},{"pos":[8618,8671],"content":"<bpt id=\"p1\">[</bpt>CCmdTarget<ept id=\"p1\">](../../mfc/reference/ccmdtarget-class.md)</ept>","source":"[CCmdTarget](../../mfc/reference/ccmdtarget-class.md)"},{"pos":[8678,8719],"content":"<bpt id=\"p1\">[</bpt>CWnd<ept id=\"p1\">](../../mfc/reference/cwnd-class.md)</ept>","source":"[CWnd](../../mfc/reference/cwnd-class.md)"},{"pos":[8726,8777],"content":"<bpt id=\"p1\">[</bpt>CBasePane<ept id=\"p1\">](../../mfc/reference/cbasepane-class.md)</ept>","source":"[CBasePane](../../mfc/reference/cbasepane-class.md)"},{"pos":[8784,8827],"content":"<bpt id=\"p1\">[</bpt>CPane<ept id=\"p1\">](../../mfc/reference/cpane-class.md)</ept>","source":"[CPane](../../mfc/reference/cpane-class.md)"},{"pos":[8834,8893],"content":"<bpt id=\"p1\">[</bpt>CDockablePane<ept id=\"p1\">](../../mfc/reference/cdockablepane-class.md)</ept>","source":"[CDockablePane](../../mfc/reference/cdockablepane-class.md)"},{"pos":[8900,8963],"content":"<bpt id=\"p1\">[</bpt>CBaseTabbedPane<ept id=\"p1\">](../../mfc/reference/cbasetabbedpane-class.md)</ept>","source":"[CBaseTabbedPane](../../mfc/reference/cbasetabbedpane-class.md)"},{"pos":[8970,9031],"content":"<bpt id=\"p1\">[</bpt>CMFCOutlookBar<ept id=\"p1\">](../../mfc/reference/cmfcoutlookbar-class.md)</ept>","source":"[CMFCOutlookBar](../../mfc/reference/cmfcoutlookbar-class.md)"},{"pos":[9040,9052],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[9056,9083],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> afxoutlookbar.h","source":"**Header:** afxoutlookbar.h"},{"pos":[9093,9196],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcoutlookbar__allowdestroyemptytabbedpane\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCOutlookBar::AllowDestroyEmptyTabbedPane","linkify":"<a name=\"cmfcoutlookbar__allowdestroyemptytabbedpane\"></a>  CMFCOutlookBar::AllowDestroyEmptyTabbedPane","source":"<a name=\"cmfcoutlookbar__allowdestroyemptytabbedpane\"></a>  CMFCOutlookBar::AllowDestroyEmptyTabbedPane"},{"content":"Specifies whether an empty tabbed pane can be destroyed.","pos":[9200,9256]},{"pos":[9334,9346],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"<ph id=\"ph1\">`TRUE`</ph> if an empty tabbed pane can be destroyed; otherwise, <ph id=\"ph2\">`FALSE`</ph>.","pos":[9350,9418],"source":"`TRUE` if an empty tabbed pane can be destroyed; otherwise, `FALSE`."},{"content":"The default implementation always returns <ph id=\"ph1\">`TRUE`</ph>.","pos":[9419,9468],"source":" The default implementation always returns `TRUE`."},{"pos":[9478,9485],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"If an empty tabbed pane cannot be destroyed, the framework hides it instead.","pos":[9489,9565]},{"pos":[9575,9650],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcoutlookbar__canacceptpane\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCOutlookBar::CanAcceptPane","linkify":"<a name=\"cmfcoutlookbar__canacceptpane\"></a>  CMFCOutlookBar::CanAcceptPane","source":"<a name=\"cmfcoutlookbar__canacceptpane\"></a>  CMFCOutlookBar::CanAcceptPane"},{"content":"Determines whether another pane can be docked to the Outlook bar pane.","pos":[9654,9724]},{"pos":[9809,9819],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`pBar`</ph>","pos":[9823,9834],"source":"[in] `pBar`"},{"content":"A pointer to another pane that is being docked to this pane.","pos":[9838,9898]},{"pos":[9908,9920],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[9924,10004],"content":"<ph id=\"ph1\">`TRUE`</ph> if another pane can be docked to the Outlook bar pane; otherwise <ph id=\"ph2\">`FALSE`</ph>.","source":"`TRUE` if another pane can be docked to the Outlook bar pane; otherwise `FALSE`."},{"pos":[10014,10021],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[10025,10126],"content":"If the Outlook bar is in Outlook 2003 mode, docking is not supported, so the return value is <ph id=\"ph1\">`FALSE`</ph>.","source":"If the Outlook bar is in Outlook 2003 mode, docking is not supported, so the return value is `FALSE`."},{"pos":[10133,10196],"content":"If the <ph id=\"ph1\">`pBar`</ph> parameter is <ph id=\"ph2\">`NULL`</ph>, this method returns <ph id=\"ph3\">`FALSE`</ph>.","source":"If the `pBar` parameter is `NULL`, this method returns `FALSE`."},{"pos":[10203,10463],"content":"Otherwise, this method behaves as the base method <bpt id=\"p1\">[</bpt>CBasePane::CanAcceptPane<ept id=\"p1\">](../../mfc/reference/cbasepane-class.md#cbasepane__canacceptpane)</ept>, except that even if docking is not enabled, an Outlook bar can still enable another Outlook bar to be docked over it.","source":"Otherwise, this method behaves as the base method [CBasePane::CanAcceptPane](../../mfc/reference/cbasepane-class.md#cbasepane__canacceptpane), except that even if docking is not enabled, an Outlook bar can still enable another Outlook bar to be docked over it."},{"pos":[10473,10574],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcoutlookbar__cansetcaptiontexttotabname\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCOutlookBar::CanSetCaptionTextToTabName","linkify":"<a name=\"cmfcoutlookbar__cansetcaptiontexttotabname\"></a>  CMFCOutlookBar::CanSetCaptionTextToTabName","source":"<a name=\"cmfcoutlookbar__cansetcaptiontexttotabname\"></a>  CMFCOutlookBar::CanSetCaptionTextToTabName"},{"content":"Determines whether the caption for the tabbed pane displays the same text as the active tab.","pos":[10578,10670]},{"pos":[10747,10759],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[10763,10874],"content":"<ph id=\"ph1\">`TRUE`</ph> if the Outlook bar window caption is automatically set to the text of the active tab; otherwise <ph id=\"ph2\">`FALSE`</ph>.","source":"`TRUE` if the Outlook bar window caption is automatically set to the text of the active tab; otherwise `FALSE`."},{"pos":[10884,10891],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[10895,11081],"content":"Use <bpt id=\"p1\">[</bpt>CBaseTabbedPane::EnableSetCaptionTextToTabName<ept id=\"p1\">](../../mfc/reference/cbasetabbedpane-class.md#cbasetabbedpane__enablesetcaptiontexttotabname)</ept> to enable or disable this functionality.","source":"Use [CBaseTabbedPane::EnableSetCaptionTextToTabName](../../mfc/reference/cbasetabbedpane-class.md#cbasetabbedpane__enablesetcaptiontexttotabname) to enable or disable this functionality."},{"content":"In Outlook 2003 mode, this setting is always enabled.","pos":[11088,11141]},{"pos":[11151,11212],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcoutlookbar__create\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCOutlookBar::Create","linkify":"<a name=\"cmfcoutlookbar__create\"></a>  CMFCOutlookBar::Create","source":"<a name=\"cmfcoutlookbar__create\"></a>  CMFCOutlookBar::Create"},{"content":"Creates the Outlook bar control.","pos":[11216,11248]},{"pos":[11489,11499],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`lpszCaption`</ph>","pos":[11503,11521],"source":"[in] `lpszCaption`"},{"content":"Specifies the window caption.","pos":[11525,11554]},{"content":"[in] <ph id=\"ph1\">`pParentWnd`</ph>","pos":[11561,11578],"source":"[in] `pParentWnd`"},{"content":"Specifies a pointer to a parent window.","pos":[11582,11621]},{"content":"It must not be NULL.","pos":[11622,11642]},{"content":"[in] <ph id=\"ph1\">`rect`</ph>","pos":[11649,11660],"source":"[in] `rect`"},{"content":"Specifies the outlook bar size and position in pixels.","pos":[11664,11718]},{"content":"[in] <ph id=\"ph1\">`nID`</ph>","pos":[11725,11735],"source":"[in] `nID`"},{"content":"Specifies the control ID.","pos":[11739,11764]},{"content":"Must be distinct from other control IDs used in the application.","pos":[11765,11829]},{"content":"[in] <ph id=\"ph1\">`dwStyle`</ph>","pos":[11836,11850],"source":"[in] `dwStyle`"},{"content":"Specifies the desired control bar style.","pos":[11854,11894]},{"content":"For possible values, see <bpt id=\"p1\">[</bpt>Window Styles<ept id=\"p1\">](../../mfc/reference/window-styles.md)</ept>.","pos":[11895,11974],"source":" For possible values, see [Window Styles](../../mfc/reference/window-styles.md)."},{"content":"[in] <ph id=\"ph1\">`dwControlBarStyle`</ph>","pos":[11981,12005],"source":"[in] `dwControlBarStyle`"},{"content":"Specifies the special library-defined styles.","pos":[12009,12054]},{"content":"[in] <ph id=\"ph1\">`pContext`</ph>","pos":[12061,12076],"source":"[in] `pContext`"},{"content":"Create context.","pos":[12080,12095]},{"pos":[12105,12117],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Nonzero if the method is successful; otherwise 0.","pos":[12121,12170]},{"pos":[12180,12187],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"You construct a <ph id=\"ph1\">`CMFCOutlookBar`</ph> object in two steps.","pos":[12191,12244],"source":"You construct a `CMFCOutlookBar` object in two steps."},{"content":"First call the constructor, and then call <ph id=\"ph1\">`Create`</ph>, which creates the outlook bar control and attaches it to the <ph id=\"ph2\">`CMFCOutlookBar`</ph> object.","pos":[12245,12382],"source":" First call the constructor, and then call `Create`, which creates the outlook bar control and attaches it to the `CMFCOutlookBar` object."},{"pos":[12389,12567],"content":"See <bpt id=\"p1\">[</bpt>CBasePane::CreateEx<ept id=\"p1\">](../../mfc/reference/cbasepane-class.md#cbasepane__createex)</ept> for the list of the available library-defined styles to be specified by <ph id=\"ph1\">`dwControlBarStyle`</ph>.","source":"See [CBasePane::CreateEx](../../mfc/reference/cbasepane-class.md#cbasepane__createex) for the list of the available library-defined styles to be specified by `dwControlBarStyle`."},{"pos":[12577,12584],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following example demonstrates how to use the <ph id=\"ph1\">`Create`</ph> method of the <ph id=\"ph2\">`CMFCOutlookBar`</ph> class.","pos":[12588,12684],"source":"The following example demonstrates how to use the `Create` method of the `CMFCOutlookBar` class."},{"content":"This code snippet is part of the <bpt id=\"p1\">[</bpt>Outlook Multi Views sample<ept id=\"p1\">](../../visual-cpp-samples.md)</ept>.","pos":[12685,12776],"source":" This code snippet is part of the [Outlook Multi Views sample](../../visual-cpp-samples.md)."},{"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_MFC_OutlookMultiViews#1<ept id=\"p2\">](../../mfc/reference/codesnippet/cpp/cmfcoutlookbar-class_1.h)</ept><ept id=\"p1\">]</ept>","pos":[12783,12885],"source":"[!code-cpp[NVC_MFC_OutlookMultiViews#1](../../mfc/reference/codesnippet/cpp/cmfcoutlookbar-class_1.h)]"},{"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_MFC_OutlookMultiViews#2<ept id=\"p2\">](../../mfc/reference/codesnippet/cpp/cmfcoutlookbar-class_2.cpp)</ept><ept id=\"p1\">]</ept>","pos":[12888,12992],"source":"[!code-cpp[NVC_MFC_OutlookMultiViews#2](../../mfc/reference/codesnippet/cpp/cmfcoutlookbar-class_2.cpp)]"},{"pos":[13002,13083],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcoutlookbar__createcustompage\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCOutlookBar::CreateCustomPage","linkify":"<a name=\"cmfcoutlookbar__createcustompage\"></a>  CMFCOutlookBar::CreateCustomPage","source":"<a name=\"cmfcoutlookbar__createcustompage\"></a>  CMFCOutlookBar::CreateCustomPage"},{"content":"Creates a custom Outlook bar tab.","pos":[13087,13120]},{"pos":[13321,13331],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`lpszPageName`</ph>","pos":[13335,13354],"source":"[in] `lpszPageName`"},{"content":"The page label.","pos":[13358,13373]},{"content":"[in] <ph id=\"ph1\">`bActivatePage`</ph>","pos":[13380,13400],"source":"[in] `bActivatePage`"},{"content":"If <ph id=\"ph1\">`TRUE`</ph>, the page becomes active upon creation.","pos":[13404,13453],"source":" If `TRUE`, the page becomes active upon creation."},{"content":"[in] <ph id=\"ph1\">`dwEnabledDocking`</ph>","pos":[13460,13483],"source":"[in] `dwEnabledDocking`"},{"content":"A combination of CBRS_ALIGN_ flags that specifies the enabled docking sides when the page is detached.","pos":[13487,13589]},{"content":"[in] <ph id=\"ph1\">`bEnableTextLabels`</ph>","pos":[13596,13620],"source":"[in] `bEnableTextLabels`"},{"content":"If <ph id=\"ph1\">`TRUE`</ph>, the text labels are enabled for the buttons that reside on the page.","pos":[13624,13703],"source":" If `TRUE`, the text labels are enabled for the buttons that reside on the page."},{"pos":[13713,13725],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[13729,13799],"content":"A pointer to the newly created page, or <ph id=\"ph1\">`NULL`</ph> if the creation failed.","source":"A pointer to the newly created page, or `NULL` if the creation failed."},{"pos":[13809,13816],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Use this method to enable the users to create custom Outlook bar pages.","pos":[13820,13891]},{"content":"You can create up to 100 pages per application.","pos":[13892,13939]},{"content":"The page control IDs start from 0xF000.","pos":[13940,13979]},{"content":"The creation fails if the total number of custom Outlook bar pages exceeds 100.","pos":[13980,14059]},{"pos":[14066,14163],"content":"Use <bpt id=\"p1\">[</bpt>CMFCOutlookBar::RemoveCustomPage<ept id=\"p1\">](#cmfcoutlookbar__removecustompage)</ept> to delete custom pages.","source":"Use [CMFCOutlookBar::RemoveCustomPage](#cmfcoutlookbar__removecustompage) to delete custom pages."},{"pos":[14173,14270],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcoutlookbar__doesallowdyninsertbefore\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCOutlookBar::DoesAllowDynInsertBefore","linkify":"<a name=\"cmfcoutlookbar__doesallowdyninsertbefore\"></a>  CMFCOutlookBar::DoesAllowDynInsertBefore","source":"<a name=\"cmfcoutlookbar__doesallowdyninsertbefore\"></a>  CMFCOutlookBar::DoesAllowDynInsertBefore"},{"content":"Specifies whether a user can dock a pane at the outer edge of the Outlook bar.","pos":[14274,14352]},{"pos":[14447,14459],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[14463,14506],"content":"The default implementation returns <ph id=\"ph1\">`FALSE`</ph>.","source":"The default implementation returns `FALSE`."},{"pos":[14516,14523],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The framework calls the <ph id=\"ph1\">`DoesAllowDynInsertBefore`</ph> method when it looks for a location to dock a dynamic pane.","pos":[14527,14637],"source":"The framework calls the `DoesAllowDynInsertBefore` method when it looks for a location to dock a dynamic pane."},{"content":"If the function returns <ph id=\"ph1\">`FALSE`</ph>, the framework does not allow the docking of any dynamic pane at the outer edges of the pane.","pos":[14638,14763],"source":" If the function returns `FALSE`, the framework does not allow the docking of any dynamic pane at the outer edges of the pane."},{"content":"Usually, you create an Outlook bar as a static non-floating control.","pos":[14770,14838]},{"content":"You can override this function in a derived class and return <ph id=\"ph1\">`TRUE`</ph> to change this behavior.","pos":[14839,14931],"source":" You can override this function in a derived class and return `TRUE` to change this behavior."},{"pos":[14939,15093],"content":"[!NOTE]\n Because dynamic panes check the status of docked static panes when docking, you should dock dynamic panes after static panes whenever possible.","leadings":["","> "],"nodes":[{"content":"Because dynamic panes check the status of docked static panes when docking, you should dock dynamic panes after static panes whenever possible.","pos":[9,152]}]},{"pos":[15103,15168],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcoutlookbar__floattab\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCOutlookBar::FloatTab","linkify":"<a name=\"cmfcoutlookbar__floattab\"></a>  CMFCOutlookBar::FloatTab","source":"<a name=\"cmfcoutlookbar__floattab\"></a>  CMFCOutlookBar::FloatTab"},{"content":"Floats a pane.","pos":[15172,15186]},{"pos":[15321,15331],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`pBar`</ph>","pos":[15335,15346],"source":"[in] `pBar`"},{"content":"A pointer to the pane to float.","pos":[15350,15381]},{"content":"[in] <ph id=\"ph1\">`nTabID`</ph>","pos":[15388,15401],"source":"[in] `nTabID`"},{"content":"The zero-based index of the tab to float.","pos":[15405,15446]},{"content":"[in] <ph id=\"ph1\">`dockMethod`</ph>","pos":[15453,15470],"source":"[in] `dockMethod`"},{"content":"Specifies the method to use to make the pane float.","pos":[15474,15525]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>CBaseTabbedPane::FloatTab<ept id=\"p1\">](../../mfc/reference/cbasetabbedpane-class.md#cbasetabbedpane__floattab)</ept>.","pos":[15527,15653],"source":"  For more information, see [CBaseTabbedPane::FloatTab](../../mfc/reference/cbasetabbedpane-class.md#cbasetabbedpane__floattab)."},{"content":"[in] <ph id=\"ph1\">`bHide`</ph>","pos":[15660,15672],"source":"[in] `bHide`"},{"content":"<ph id=\"ph1\"> `TRUE`</ph> to hide the pane before floating; otherwise, <ph id=\"ph2\">`FALSE`</ph>.","pos":[15675,15736],"source":" `TRUE` to hide the pane before floating; otherwise, `FALSE`."},{"content":"Unlike the base class version of this method, this parameter does not have a default value.","pos":[15737,15828]},{"pos":[15838,15850],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[15854,15901],"content":"<ph id=\"ph1\">`TRUE`</ph> if the pane floated; otherwise, <ph id=\"ph2\">`FALSE`</ph>.","source":"`TRUE` if the pane floated; otherwise, `FALSE`."},{"pos":[15911,15918],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[15922,16131],"content":"This method is like <bpt id=\"p1\">[</bpt>CBaseTabbedPane::FloatTab<ept id=\"p1\">](../../mfc/reference/cbasetabbedpane-class.md#cbasetabbedpane__floattab)</ept> except that it does not enable the last remaining tab on an Outlook bar control to float.","source":"This method is like [CBaseTabbedPane::FloatTab](../../mfc/reference/cbasetabbedpane-class.md#cbasetabbedpane__floattab) except that it does not enable the last remaining tab on an Outlook bar control to float."},{"pos":[16141,16218],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcoutlookbar__getbuttonsfont\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCOutlookBar::GetButtonsFont","linkify":"<a name=\"cmfcoutlookbar__getbuttonsfont\"></a>  CMFCOutlookBar::GetButtonsFont","source":"<a name=\"cmfcoutlookbar__getbuttonsfont\"></a>  CMFCOutlookBar::GetButtonsFont"},{"content":"Returns the font of the text on the page button tabs of the Outlook bar.","pos":[16222,16294]},{"pos":[16353,16365],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A pointer to the font object that is used to display text on Outlook bar page button tabs.","pos":[16369,16459]},{"pos":[16469,16476],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Use this function to retrieve the font that is used to display the text on Outlook page button tabs.","pos":[16480,16580]},{"content":"You can set the font by calling on <bpt id=\"p1\">[</bpt>CMFCOutlookBar::SetButtonsFont<ept id=\"p1\">](#cmfcoutlookbar__setbuttonsfont)</ept>.","pos":[16581,16682],"source":" You can set the font by calling on [CMFCOutlookBar::SetButtonsFont](#cmfcoutlookbar__setbuttonsfont)."},{"pos":[16692,16761],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcoutlookbar__gettabarea\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCOutlookBar::GetTabArea","linkify":"<a name=\"cmfcoutlookbar__gettabarea\"></a>  CMFCOutlookBar::GetTabArea","source":"<a name=\"cmfcoutlookbar__gettabarea\"></a>  CMFCOutlookBar::GetTabArea"},{"content":"Determines the size and position of the tab areas on the Outlook bar.","pos":[16765,16834]},{"pos":[16953,16963],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[out] <ph id=\"ph1\">`rectTabAreaTop`</ph>","pos":[16967,16989],"source":"[out] `rectTabAreaTop`"},{"content":"Contains the size and position (in the client coordinates) of the top tab area when the function returns.","pos":[16993,17098]},{"content":"[out] <ph id=\"ph1\">`rectTabAreaBottom`</ph>","pos":[17105,17130],"source":"[out] `rectTabAreaBottom`"},{"content":"Contains the size and position (in the client coordinates) of the bottom tab area when the function returns.","pos":[17134,17242]},{"pos":[17252,17259],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The framework calls this method to determine the type of docking to the target pane.","pos":[17263,17347]},{"content":"When the framework determines that the user drags the pane to be docked over the tab area of the target pane, it tries to add the first pane as a new tab of the target pane.","pos":[17348,17521]},{"content":"Otherwise, it tries to dock the first pane at an appropriate side of the target pane.","pos":[17522,17607]},{"content":"The framework creates a new container with a slider to accommodate the additional docked pane.","pos":[17608,17702]},{"content":"The default implementation of <ph id=\"ph1\">`GetTabArea`</ph> returns the whole client area of the Outlook bar if the Outlook bar is static; that is, if the Outlook bar cannot float.","pos":[17709,17872],"source":"The default implementation of `GetTabArea` returns the whole client area of the Outlook bar if the Outlook bar is static; that is, if the Outlook bar cannot float."},{"content":"Otherwise, it returns the area that page buttons take at the top and bottom of the Outlook bar control.","pos":[17873,17976]},{"pos":[17983,18067],"content":"Override this method in class derived from <ph id=\"ph1\">`CMFCOutlookBar`</ph> to change this behavior.","source":"Override this method in class derived from `CMFCOutlookBar` to change this behavior."},{"pos":[18077,18146],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcoutlookbar__ismode2003\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCOutlookBar::IsMode2003","linkify":"<a name=\"cmfcoutlookbar__ismode2003\"></a>  CMFCOutlookBar::IsMode2003","source":"<a name=\"cmfcoutlookbar__ismode2003\"></a>  CMFCOutlookBar::IsMode2003"},{"content":"Specifies whether the behavior of the Outlook bar mimics that of Microsoft Office Outlook 2003.","pos":[18150,18245]},{"pos":[18298,18310],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Nonzero if the Outlook bar is running in Microsoft Office 2003 mode; otherwise 0.","pos":[18314,18395]},{"pos":[18405,18412],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[18416,18510],"content":"You can enable this mode by using <bpt id=\"p1\">[</bpt>CMFCOutlookBar::SetMode2003<ept id=\"p1\">](#cmfcoutlookbar__setmode2003)</ept>.","source":"You can enable this mode by using [CMFCOutlookBar::SetMode2003](#cmfcoutlookbar__setmode2003)."},{"pos":[18520,18601],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcoutlookbar__onafteranimation\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCOutlookBar::OnAfterAnimation","linkify":"<a name=\"cmfcoutlookbar__onafteranimation\"></a>  CMFCOutlookBar::OnAfterAnimation","source":"<a name=\"cmfcoutlookbar__onafteranimation\"></a>  CMFCOutlookBar::OnAfterAnimation"},{"pos":[18605,18791],"content":"Called by <bpt id=\"p1\">[</bpt>CMFCOutlookBarTabCtrl::SetActiveTab<ept id=\"p1\">](../../mfc/reference/cmfcoutlookbartabctrl-class.md#cmfcoutlookbartabctrl__setactivetab)</ept> after the active tab has been set using animation.","source":"Called by [CMFCOutlookBarTabCtrl::SetActiveTab](../../mfc/reference/cmfcoutlookbartabctrl-class.md#cmfcoutlookbartabctrl__setactivetab) after the active tab has been set using animation."},{"pos":[18858,18868],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`nPage`</ph>","pos":[18872,18884],"source":"[in] `nPage`"},{"content":"The zero-based index of the tab page that has been made active.","pos":[18888,18951]},{"pos":[18961,18968],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The visual effect of setting the active tab depends on whether you have enabled animation.","pos":[18972,19062]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>CMFCOutlookBarTabCtrl::EnableAnimation<ept id=\"p1\">](../../mfc/reference/cmfcoutlookbartabctrl-class.md#cmfcoutlookbartabctrl__enableanimation)</ept>.","pos":[19063,19221],"source":" For more information, see [CMFCOutlookBarTabCtrl::EnableAnimation](../../mfc/reference/cmfcoutlookbartabctrl-class.md#cmfcoutlookbartabctrl__enableanimation)."},{"pos":[19231,19314],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcoutlookbar__onbeforeanimation\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCOutlookBar::OnBeforeAnimation","linkify":"<a name=\"cmfcoutlookbar__onbeforeanimation\"></a>  CMFCOutlookBar::OnBeforeAnimation","source":"<a name=\"cmfcoutlookbar__onbeforeanimation\"></a>  CMFCOutlookBar::OnBeforeAnimation"},{"pos":[19318,19513],"content":"Called by <bpt id=\"p1\">[</bpt>CMFCOutlookBarTabCtrl::SetActiveTab<ept id=\"p1\">](../../mfc/reference/cmfcoutlookbartabctrl-class.md#cmfcoutlookbartabctrl__setactivetab)</ept> before a tab page is set as the active tab using animation.","source":"Called by [CMFCOutlookBarTabCtrl::SetActiveTab](../../mfc/reference/cmfcoutlookbartabctrl-class.md#cmfcoutlookbartabctrl__setactivetab) before a tab page is set as the active tab using animation."},{"pos":[19581,19591],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`nPage`</ph>","pos":[19595,19607],"source":"[in] `nPage`"},{"content":"The zero-based index of the tab page that is about to be set active.","pos":[19611,19679]},{"pos":[19689,19701],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[19705,19822],"content":"Returns <ph id=\"ph1\">`TRUE`</ph> if animation should be used in setting the new active tab, or <ph id=\"ph2\">`FALSE`</ph> if animation should be disabled.","source":"Returns `TRUE` if animation should be used in setting the new active tab, or `FALSE` if animation should be disabled."},{"pos":[19832,19839],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[19849,19914],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcoutlookbar__onscroll\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCOutlookBar::OnScroll","linkify":"<a name=\"cmfcoutlookbar__onscroll\"></a>  CMFCOutlookBar::OnScroll","source":"<a name=\"cmfcoutlookbar__onscroll\"></a>  CMFCOutlookBar::OnScroll"},{"content":"Called by the framework if the Outlook bar is scrolling up or down.","pos":[19918,19985]},{"pos":[20045,20055],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`bDown`</ph>","pos":[20059,20071],"source":"[in] `bDown`"},{"content":"<ph id=\"ph1\"> `TRUE`</ph> if the Outlook bar is scrolling down, or <ph id=\"ph2\">`FALSE`</ph> if it is scrolling up.","pos":[20074,20153],"source":" `TRUE` if the Outlook bar is scrolling down, or `FALSE` if it is scrolling up."},{"pos":[20163,20170],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[20180,20261],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcoutlookbar__removecustompage\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCOutlookBar::RemoveCustomPage","linkify":"<a name=\"cmfcoutlookbar__removecustompage\"></a>  CMFCOutlookBar::RemoveCustomPage","source":"<a name=\"cmfcoutlookbar__removecustompage\"></a>  CMFCOutlookBar::RemoveCustomPage"},{"content":"Removes a custom Outlook bar tab page.","pos":[20265,20303]},{"pos":[20410,20420],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`uiPage`</ph>","pos":[20424,20437],"source":"[in] `uiPage`"},{"content":"Zero-based index of the page in the parent Outlook window.","pos":[20441,20499]},{"content":"[in] <ph id=\"ph1\">`pTargetWnd`</ph>","pos":[20506,20523],"source":"[in] `pTargetWnd`"},{"content":"Pointerto the parent Outlook window.","pos":[20527,20563]},{"pos":[20573,20585],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Nonzero if the custom page has been removed successfully; otherwise 0.","pos":[20589,20659]},{"pos":[20669,20676],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Call this function to delete custom pages.","pos":[20680,20722]},{"content":"When the page is removed its control ID is returned to the pool of available IDs.","pos":[20723,20804]},{"content":"You must provide a pointer to <bpt id=\"p1\">[</bpt>CMFCOutlookBarTabCtrl Class<ept id=\"p1\">](../../mfc/reference/cmfcoutlookbartabctrl-class.md)</ept> object in which the page to be removed currently resides.","pos":[20811,20980],"source":"You must provide a pointer to [CMFCOutlookBarTabCtrl Class](../../mfc/reference/cmfcoutlookbartabctrl-class.md) object in which the page to be removed currently resides."},{"content":"Note that a user can move detachable pages between different Outlook bars, but the information about a custom page resides in the Outlook bar object for which you have called <bpt id=\"p1\">[</bpt>CMFCOutlookBar::CreateCustomPage<ept id=\"p1\">](#cmfcoutlookbar__createcustompage)</ept>.","pos":[20981,21226],"source":" Note that a user can move detachable pages between different Outlook bars, but the information about a custom page resides in the Outlook bar object for which you have called [CMFCOutlookBar::CreateCustomPage](#cmfcoutlookbar__createcustompage)."},{"pos":[21233,21401],"content":"Use <bpt id=\"p1\">[</bpt>CBaseTabbedPane::GetUnderlyingWindow<ept id=\"p1\">](../../mfc/reference/cbasetabbedpane-class.md#cbasetabbedpane__getunderlyingwindow)</ept> to obtain a pointer to the Outlook window.","source":"Use [CBaseTabbedPane::GetUnderlyingWindow](../../mfc/reference/cbasetabbedpane-class.md#cbasetabbedpane__getunderlyingwindow) to obtain a pointer to the Outlook window."},{"pos":[21411,21488],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcoutlookbar__setbuttonsfont\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCOutlookBar::SetButtonsFont","linkify":"<a name=\"cmfcoutlookbar__setbuttonsfont\"></a>  CMFCOutlookBar::SetButtonsFont","source":"<a name=\"cmfcoutlookbar__setbuttonsfont\"></a>  CMFCOutlookBar::SetButtonsFont"},{"content":"Sets the font of the text on the buttons of the Outlook bar.","pos":[21492,21552]},{"pos":[21642,21652],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`pFont`</ph>","pos":[21656,21668],"source":"[in] `pFont`"},{"content":"Specifies the new font.","pos":[21672,21695]},{"content":"[in] <ph id=\"ph1\">`bRedraw`</ph>","pos":[21702,21716],"source":"[in] `bRedraw`"},{"content":"If <ph id=\"ph1\">`TRUE`</ph>, the Outlook bar will be redrawn.","pos":[21720,21763],"source":" If `TRUE`, the Outlook bar will be redrawn."},{"pos":[21773,21780],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Use this method to set a font for the text displayed on outlook tab page buttons.","pos":[21784,21865]},{"pos":[21875,21946],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcoutlookbar__setmode2003\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCOutlookBar::SetMode2003","linkify":"<a name=\"cmfcoutlookbar__setmode2003\"></a>  CMFCOutlookBar::SetMode2003","source":"<a name=\"cmfcoutlookbar__setmode2003\"></a>  CMFCOutlookBar::SetMode2003"},{"content":"Specifies whether the behavior of the Outlook bar mimics that of Outlook 2003.","pos":[21950,22028]},{"pos":[22092,22102],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`bMode2003`</ph>","pos":[22106,22122],"source":"[in] `bMode2003`"},{"content":"If TRUE, Office 2003 mode is enabled.","pos":[22126,22163]},{"pos":[22173,22180],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Use this function to enable or disable Office 2003 mode.","pos":[22184,22240]},{"content":"In this mode, the Outlook bar has an additional toolbar with a customization button.","pos":[22241,22325]},{"content":"The behavior of the Outlook bar conforms to the behavior of the Outlook bar in Microsoft Office 2003.","pos":[22326,22427]},{"content":"By default, this mode is disabled.","pos":[22434,22468]},{"pos":[22476,22573],"content":"[!NOTE]\n This function must be called before [CMFCOutlookBar::Create](#cmfcoutlookbar__create).","leadings":["","> "],"nodes":[{"content":"This function must be called before <bpt id=\"p1\">[</bpt>CMFCOutlookBar::Create<ept id=\"p1\">](#cmfcoutlookbar__create)</ept>.","pos":[9,95],"source":" This function must be called before [CMFCOutlookBar::Create](#cmfcoutlookbar__create)."}]},{"pos":[22582,22590],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Hierarchy Chart<ept id=\"p1\">](../../mfc/hierarchy-chart.md)</ept><ph id=\"ph1\"> </ph>","pos":[22594,22642],"source":"[Hierarchy Chart](../../mfc/hierarchy-chart.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Classes<ept id=\"p1\">](../../mfc/reference/mfc-classes.md)</ept><ph id=\"ph1\"> </ph>","pos":[22645,22692],"source":" [Classes](../../mfc/reference/mfc-classes.md) "},{"content":"<bpt id=\"p1\"> [</bpt>CBaseTabbedPane Class<ept id=\"p1\">](../../mfc/reference/cbasetabbedpane-class.md)</ept><ph id=\"ph1\"> </ph>","pos":[22695,22766],"source":" [CBaseTabbedPane Class](../../mfc/reference/cbasetabbedpane-class.md) "},{"content":"<bpt id=\"p1\"> [</bpt>CMFCOutlookBarTabCtrl Class<ept id=\"p1\">](../../mfc/reference/cmfcoutlookbartabctrl-class.md)</ept><ph id=\"ph1\"> </ph>","pos":[22769,22852],"source":" [CMFCOutlookBarTabCtrl Class](../../mfc/reference/cmfcoutlookbartabctrl-class.md) "},{"content":"<bpt id=\"p1\"> [</bpt>CMFCOutlookBarPane Class<ept id=\"p1\">](../../mfc/reference/cmfcoutlookbarpane-class.md)</ept>","pos":[22855,22931],"source":" [CMFCOutlookBarPane Class](../../mfc/reference/cmfcoutlookbarpane-class.md)"}],"content":"---\ntitle: \"CMFCOutlookBar Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"CMFCOutlookBar\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"CMFCOutlookBar class\"\nms.assetid: 2b335f71-ce99-4efd-b103-e65ba43ffc36\ncaps.latest.revision: 34\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"ru-ru\"\n  - \"zh-cn\"\n  - \"zh-tw\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"tr-tr\"\n---\n# CMFCOutlookBar Class\nA tabbed pane with the visual appearance of the **Navigation Pane** in Microsoft Outlook 2000 or Outlook 2003. The `CMFCOutlookBar` object contains a [CMFCOutlookBarTabCtrl Class](../../mfc/reference/cmfcoutlookbartabctrl-class.md) object and a series of tabs. The tabs can be either [CMFCOutlookBarPane Class](../../mfc/reference/cmfcoutlookbarpane-class.md) objects or `CWnd`-derived objects. To the user, the Outlook bar appears as a series of buttons and a display area. When the user clicks a button, the corresponding control or button pane is displayed.  \n  \n## Syntax  \n  \n```  \nclass CMFCOutlookBar : public CBaseTabbedPane  \n```  \n  \n## Members  \n  \n### Public Constructors  \n  \n|Name|Description|  \n|----------|-----------------|  \n|`CMFCOutlookBar::CMFCOutlookBar`|Default constructor.|  \n|`CMFCOutlookBar::~CMFCOutlookBar`|Destructor.|  \n  \n### Public Methods  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CMFCOutlookBar::AllowDestroyEmptyTabbedPane](#cmfcoutlookbar__allowdestroyemptytabbedpane)|Specifies whether an empty tabbed pane can be destroyed. (Overrides [CBaseTabbedPane::AllowDestroyEmptyTabbedPane](../../mfc/reference/cbasetabbedpane-class.md#cbasetabbedpane__allowdestroyemptytabbedpane).)|  \n|[CMFCOutlookBar::CanAcceptPane](#cmfcoutlookbar__canacceptpane)|Determines whether another pane can be docked to the Outlook bar pane. (Overrides CDockablePane::CanAcceptPane.)|  \n|[CMFCOutlookBar::CanSetCaptionTextToTabName](#cmfcoutlookbar__cansetcaptiontexttotabname)|Determines whether the caption for the tabbed pane displays the same text as the active tab. (Overrides [CBaseTabbedPane::CanSetCaptionTextToTabName](../../mfc/reference/cbasetabbedpane-class.md#cbasetabbedpane__cansetcaptiontexttotabname).)|  \n|[CMFCOutlookBar::Create](#cmfcoutlookbar__create)|Creates the Outlook bar control.|  \n|[CMFCOutlookBar::CreateCustomPage](#cmfcoutlookbar__createcustompage)|Creates a custom Outlook bar tab.|  \n|`CMFCOutlookBar::CreateObject`|Used by the framework to create a dynamic instance of this class type.|  \n|[CMFCOutlookBar::DoesAllowDynInsertBefore](#cmfcoutlookbar__doesallowdyninsertbefore)|Determines whether a user can dock a control bar at the outer edge of the Outlook bar.|  \n|[CMFCOutlookBar::FloatTab](#cmfcoutlookbar__floattab)|Floats a pane, but only if the pane currently resides in a detachable tab. (Overrides [CBaseTabbedPane::FloatTab](../../mfc/reference/cbasetabbedpane-class.md#cbasetabbedpane__floattab).)|  \n|[CMFCOutlookBar::GetButtonsFont](#cmfcoutlookbar__getbuttonsfont)|Returns the font of the text on the buttons of the Outlook bar.|  \n|[CMFCOutlookBar::GetTabArea](#cmfcoutlookbar__gettabarea)|Returns the size and position of the tab areas on the Outlook bar. (Overrides [CBaseTabbedPane::GetTabArea](../../mfc/reference/cbasetabbedpane-class.md#cbasetabbedpane__gettabarea).)|  \n|`CMFCOutlookBar::GetThisClass`|Used by the framework to obtain a pointer to the [CRuntimeClass](../../mfc/reference/cruntimeclass-structure.md) object that is associated with this class type.|  \n|[CMFCOutlookBar::IsMode2003](#cmfcoutlookbar__ismode2003)|Determines whether the behavior of the Outlook bar mimics that of Microsoft Office Outlook 2003 (see Remarks).|  \n|[CMFCOutlookBar::OnAfterAnimation](#cmfcoutlookbar__onafteranimation)|Called by [CMFCOutlookBarTabCtrl::SetActiveTab](../../mfc/reference/cmfcoutlookbartabctrl-class.md#cmfcoutlookbartabctrl__setactivetab) after the active tab has been set using animation.|  \n|[CMFCOutlookBar::OnBeforeAnimation](#cmfcoutlookbar__onbeforeanimation)|Called by [CMFCOutlookBarTabCtrl::SetActiveTab](../../mfc/reference/cmfcoutlookbartabctrl-class.md#cmfcoutlookbartabctrl__setactivetab) before a tab page is set as the active tab using animation.|  \n|[CMFCOutlookBar::OnScroll](#cmfcoutlookbar__onscroll)|Called by the framework if the Outlook bar is scrolling up or down.|  \n|[CMFCOutlookBar::RemoveCustomPage](#cmfcoutlookbar__removecustompage)|Removes a custom Outlook bar tab.|  \n|[CMFCOutlookBar::SetButtonsFont](#cmfcoutlookbar__setbuttonsfont)|Sets the font of the text on the buttons of the Outlook bar.|  \n|[CMFCOutlookBar::SetMode2003](#cmfcoutlookbar__setmode2003)|Specifies whether the behavior of the Outlook bar mimics that of Outlook 2003 (see Remarks).|  \n  \n## Remarks  \n For an example of an Outlook bar, see the [OutlookDemo Sample: MFC OutlookDemo Application](../../visual-cpp-samples.md).  \n  \n## Implementing the Outlook Bar  \n To use the `CMFCOutlookBar` control in your application, follow these steps:  \n  \n1.  Embed a `CMFCOutlookBar` object into the main frame window class.  \n  \n ```  \n    class CMainFrame : public CMDIFrameWnd  \n { ...  \n    CMFCOutlookBar m_wndOutlookBar;  \n    CMFCOutlookBarPane m_wndOutlookPane;  \n ... };  \n ```  \n  \n2.  When processing the `WM_CREATE` message in the main frame, call the [CMFCOutlookBar::Create](#cmfcoutlookbar__create) method to create the Outlook bar tab control.  \n  \n ```  \n    m_wndOutlookBar.Create (_T(\"Shortcuts\"),\n    this,\n    CRect (0,\n    0,\n    100,\n    100),\n    ID_VIEW_OUTLOOKBAR,\n    WS_CHILD | WS_VISIBLE | CBRS_LEFT);\n\n ```  \n  \n3.  Obtain a pointer to the underlying `CMFCOutlookBarTabCtrl` by using [CBaseTabbedPane::GetUnderlyingWindow](../../mfc/reference/cbasetabbedpane-class.md#cbasetabbedpane__getunderlyingwindow).  \n  \n ```  \n    CMFCOutlookBarTabCtrl* pOutlookBar = (CMFCOutlookBarTabCtrl*) m_wndOutlookBar.GetUnderlyingWindow ();\n\n ```  \n  \n4.  Create a [CMFCOutlookBarPane Class](../../mfc/reference/cmfcoutlookbarpane-class.md) object for each tab that contains buttons.  \n  \n ```  \n    m_wndOutlookPane.Create (&m_wndOutlookBar,\n    AFX_DEFAULT_TOOLBAR_STYLE,\n    ID_OUTLOOK_PANE_GENERAL,\n    AFX_CBRS_FLOAT | AFX_CBRS_RESIZE);\n*// make the Outlook pane detachable (enable docking)  \n    m_wndOutlookPane.EnableDocking (CBRS_ALIGN_ANY);\n*// add buttons  \n    m_wndOutlookPane.AddButton (theApp.LoadIcon (IDR_MAINFRAME), \"About\",\n    ID_APP_ABOUT);\n\n    m_wndOutlookPane.AddButton (theApp.LoadIcon (IDR_CUSTOM_OPEN_ICON), \"Open\",\n    ID_FILE_OPEN);\n\n ```  \n  \n5.  Call [CMFCOutlookBarTabCtrl::AddTab](../../mfc/reference/cmfcbasetabctrl-class.md#cmfcbasetabctrl__addtab) to add each new tab. Set the `bDetachable` parameter to `FALSE` to make a page non-detachable. Or, use [CMFCOutlookBarTabCtrl::AddControl](../../mfc/reference/cmfcoutlookbartabctrl-class.md#cmfcoutlookbartabctrl__addcontrol) to add detachable pages.  \n  \n ```  \n    pOutlookBar->AddTab (&m_wndOutlookPane, \"General\", (UINT) -1,\n    TRUE);\n\n ```  \n  \n6.  To add a `CWnd`-derived control (for example, [CMFCShellTreeCtrl Class](../../mfc/reference/cmfcshelltreectrl-class.md)) as a tab, create the control and call [CMFCOutlookBarTabCtrl::AddTab](../../mfc/reference/cmfcbasetabctrl-class.md#cmfcbasetabctrl__addtab) to add it to the Outlook bar.  \n  \n> [!NOTE]\n>  You should use unique control IDs for each [CMFCOutlookBarPane Class](../../mfc/reference/cmfcoutlookbarpane-class.md) object and for each `CWnd`-derived object.  \n  \n To dynamically add or delete new pages at runtime, use [CMFCOutlookBar::CreateCustomPage](#cmfcoutlookbar__createcustompage) and [CMFCOutlookBar::RemoveCustomPage](#cmfcoutlookbar__removecustompage).  \n  \n## Outlook 2003 Mode  \n In Outlook 2003 mode, the tab buttons are positioned at the bottom of the Outlook bar pane. When there is not sufficient room to display the buttons, they are displayed as icons in a toolbar-like area along the bottom of the pane.  \n  \n Use [CMFCOutlookBar::SetMode2003](#cmfcoutlookbar__setmode2003) to enable Outlook 2003 mode. Use [CMFCOutlookBarTabCtrl::SetToolbarImageList](../../mfc/reference/cmfcoutlookbartabctrl-class.md#cmfcoutlookbartabctrl__settoolbarimagelist) to set the bitmap that contains the icons that are displayed on the bottom of the Outlook bar. The icons in the bitmap must be ordered by tab index.  \n  \n## Inheritance Hierarchy  \n [CObject](../../mfc/reference/cobject-class.md)  \n  \n [CCmdTarget](../../mfc/reference/ccmdtarget-class.md)  \n  \n [CWnd](../../mfc/reference/cwnd-class.md)  \n  \n [CBasePane](../../mfc/reference/cbasepane-class.md)  \n  \n [CPane](../../mfc/reference/cpane-class.md)  \n  \n [CDockablePane](../../mfc/reference/cdockablepane-class.md)  \n  \n [CBaseTabbedPane](../../mfc/reference/cbasetabbedpane-class.md)  \n  \n [CMFCOutlookBar](../../mfc/reference/cmfcoutlookbar-class.md)  \n  \n## Requirements  \n **Header:** afxoutlookbar.h  \n  \n##  <a name=\"cmfcoutlookbar__allowdestroyemptytabbedpane\"></a>  CMFCOutlookBar::AllowDestroyEmptyTabbedPane  \n Specifies whether an empty tabbed pane can be destroyed.  \n  \n```  \nvirtual BOOL AllowDestroyEmptyTabbedPane() const;\n\n \n```  \n  \n### Return Value  \n `TRUE` if an empty tabbed pane can be destroyed; otherwise, `FALSE`. The default implementation always returns `TRUE`.  \n  \n### Remarks  \n If an empty tabbed pane cannot be destroyed, the framework hides it instead.  \n  \n##  <a name=\"cmfcoutlookbar__canacceptpane\"></a>  CMFCOutlookBar::CanAcceptPane  \n Determines whether another pane can be docked to the Outlook bar pane.  \n  \n```  \nvirtual BOOL CanAcceptPane(const CBasePane* pBar) const;\n\n \n```  \n  \n### Parameters  \n [in] `pBar`  \n A pointer to another pane that is being docked to this pane.  \n  \n### Return Value  \n `TRUE` if another pane can be docked to the Outlook bar pane; otherwise `FALSE`.  \n  \n### Remarks  \n If the Outlook bar is in Outlook 2003 mode, docking is not supported, so the return value is `FALSE`.  \n  \n If the `pBar` parameter is `NULL`, this method returns `FALSE`.  \n  \n Otherwise, this method behaves as the base method [CBasePane::CanAcceptPane](../../mfc/reference/cbasepane-class.md#cbasepane__canacceptpane), except that even if docking is not enabled, an Outlook bar can still enable another Outlook bar to be docked over it.  \n  \n##  <a name=\"cmfcoutlookbar__cansetcaptiontexttotabname\"></a>  CMFCOutlookBar::CanSetCaptionTextToTabName  \n Determines whether the caption for the tabbed pane displays the same text as the active tab.  \n  \n```  \nvirtual BOOL CanSetCaptionTextToTabName() const;\n\n \n```  \n  \n### Return Value  \n `TRUE` if the Outlook bar window caption is automatically set to the text of the active tab; otherwise `FALSE`.  \n  \n### Remarks  \n Use [CBaseTabbedPane::EnableSetCaptionTextToTabName](../../mfc/reference/cbasetabbedpane-class.md#cbasetabbedpane__enablesetcaptiontexttotabname) to enable or disable this functionality.  \n  \n In Outlook 2003 mode, this setting is always enabled.  \n  \n##  <a name=\"cmfcoutlookbar__create\"></a>  CMFCOutlookBar::Create  \n Creates the Outlook bar control.  \n  \n```  \nvirtual BOOL Create(\n    LPCTSTR lpszCaption,  \n    CWnd* pParentWnd,  \n    const RECT& rect,  \n    UINT nID,  \n    DWORD dwStyle,  \n    DWORD dwControlBarStyle=AFX_CBRS_RESIZE,  \n    CCreateContext* pContext=NULL);\n```  \n  \n### Parameters  \n [in] `lpszCaption`  \n Specifies the window caption.  \n  \n [in] `pParentWnd`  \n Specifies a pointer to a parent window. It must not be NULL.  \n  \n [in] `rect`  \n Specifies the outlook bar size and position in pixels.  \n  \n [in] `nID`  \n Specifies the control ID. Must be distinct from other control IDs used in the application.  \n  \n [in] `dwStyle`  \n Specifies the desired control bar style. For possible values, see [Window Styles](../../mfc/reference/window-styles.md).  \n  \n [in] `dwControlBarStyle`  \n Specifies the special library-defined styles.  \n  \n [in] `pContext`  \n Create context.  \n  \n### Return Value  \n Nonzero if the method is successful; otherwise 0.  \n  \n### Remarks  \n You construct a `CMFCOutlookBar` object in two steps. First call the constructor, and then call `Create`, which creates the outlook bar control and attaches it to the `CMFCOutlookBar` object.  \n  \n See [CBasePane::CreateEx](../../mfc/reference/cbasepane-class.md#cbasepane__createex) for the list of the available library-defined styles to be specified by `dwControlBarStyle`.  \n  \n### Example  \n The following example demonstrates how to use the `Create` method of the `CMFCOutlookBar` class. This code snippet is part of the [Outlook Multi Views sample](../../visual-cpp-samples.md).  \n  \n [!code-cpp[NVC_MFC_OutlookMultiViews#1](../../mfc/reference/codesnippet/cpp/cmfcoutlookbar-class_1.h)]  \n[!code-cpp[NVC_MFC_OutlookMultiViews#2](../../mfc/reference/codesnippet/cpp/cmfcoutlookbar-class_2.cpp)]  \n  \n##  <a name=\"cmfcoutlookbar__createcustompage\"></a>  CMFCOutlookBar::CreateCustomPage  \n Creates a custom Outlook bar tab.  \n  \n```  \nCMFCOutlookBarPane* CreateCustomPage(\n    LPCTSTR lpszPageName,  \n    BOOL bActivatePage=TRUE,  \n    DWORD dwEnabledDocking=CBRS_ALIGN_ANY,  \n    BOOL bEnableTextLabels=TRUE);\n```  \n  \n### Parameters  \n [in] `lpszPageName`  \n The page label.  \n  \n [in] `bActivatePage`  \n If `TRUE`, the page becomes active upon creation.  \n  \n [in] `dwEnabledDocking`  \n A combination of CBRS_ALIGN_ flags that specifies the enabled docking sides when the page is detached.  \n  \n [in] `bEnableTextLabels`  \n If `TRUE`, the text labels are enabled for the buttons that reside on the page.  \n  \n### Return Value  \n A pointer to the newly created page, or `NULL` if the creation failed.  \n  \n### Remarks  \n Use this method to enable the users to create custom Outlook bar pages. You can create up to 100 pages per application. The page control IDs start from 0xF000. The creation fails if the total number of custom Outlook bar pages exceeds 100.  \n  \n Use [CMFCOutlookBar::RemoveCustomPage](#cmfcoutlookbar__removecustompage) to delete custom pages.  \n  \n##  <a name=\"cmfcoutlookbar__doesallowdyninsertbefore\"></a>  CMFCOutlookBar::DoesAllowDynInsertBefore  \n Specifies whether a user can dock a pane at the outer edge of the Outlook bar.  \n  \n```  \nDECLARE_MESSAGE_MAP virtual BOOL DoesAllowDynInsertBefore() const;\n\n \n```  \n  \n### Return Value  \n The default implementation returns `FALSE`.  \n  \n### Remarks  \n The framework calls the `DoesAllowDynInsertBefore` method when it looks for a location to dock a dynamic pane. If the function returns `FALSE`, the framework does not allow the docking of any dynamic pane at the outer edges of the pane.  \n  \n Usually, you create an Outlook bar as a static non-floating control. You can override this function in a derived class and return `TRUE` to change this behavior.  \n  \n> [!NOTE]\n>  Because dynamic panes check the status of docked static panes when docking, you should dock dynamic panes after static panes whenever possible.  \n  \n##  <a name=\"cmfcoutlookbar__floattab\"></a>  CMFCOutlookBar::FloatTab  \n Floats a pane.  \n  \n```  \nvirtual BOOL FloatTab(\n    CWnd* pBar,  \n    int nTabID,  \n    AFX_DOCK_METHOD dockMethod,  \n    BOOL bHide);\n```  \n  \n### Parameters  \n [in] `pBar`  \n A pointer to the pane to float.  \n  \n [in] `nTabID`  \n The zero-based index of the tab to float.  \n  \n [in] `dockMethod`  \n Specifies the method to use to make the pane float.  For more information, see [CBaseTabbedPane::FloatTab](../../mfc/reference/cbasetabbedpane-class.md#cbasetabbedpane__floattab).  \n  \n [in] `bHide`  \n `TRUE` to hide the pane before floating; otherwise, `FALSE`. Unlike the base class version of this method, this parameter does not have a default value.  \n  \n### Return Value  \n `TRUE` if the pane floated; otherwise, `FALSE`.  \n  \n### Remarks  \n This method is like [CBaseTabbedPane::FloatTab](../../mfc/reference/cbasetabbedpane-class.md#cbasetabbedpane__floattab) except that it does not enable the last remaining tab on an Outlook bar control to float.  \n  \n##  <a name=\"cmfcoutlookbar__getbuttonsfont\"></a>  CMFCOutlookBar::GetButtonsFont  \n Returns the font of the text on the page button tabs of the Outlook bar.  \n  \n```  \nCFont* GetButtonsFont() const;\n\n \n```  \n  \n### Return Value  \n A pointer to the font object that is used to display text on Outlook bar page button tabs.  \n  \n### Remarks  \n Use this function to retrieve the font that is used to display the text on Outlook page button tabs. You can set the font by calling on [CMFCOutlookBar::SetButtonsFont](#cmfcoutlookbar__setbuttonsfont).  \n  \n##  <a name=\"cmfcoutlookbar__gettabarea\"></a>  CMFCOutlookBar::GetTabArea  \n Determines the size and position of the tab areas on the Outlook bar.  \n  \n```  \nvirtual void GetTabArea(\n    CRect& rectTabAreaTop,  \n    CRect& rectTabAreaBottom) const;\n\n \n```  \n  \n### Parameters  \n [out] `rectTabAreaTop`  \n Contains the size and position (in the client coordinates) of the top tab area when the function returns.  \n  \n [out] `rectTabAreaBottom`  \n Contains the size and position (in the client coordinates) of the bottom tab area when the function returns.  \n  \n### Remarks  \n The framework calls this method to determine the type of docking to the target pane. When the framework determines that the user drags the pane to be docked over the tab area of the target pane, it tries to add the first pane as a new tab of the target pane. Otherwise, it tries to dock the first pane at an appropriate side of the target pane. The framework creates a new container with a slider to accommodate the additional docked pane.  \n  \n The default implementation of `GetTabArea` returns the whole client area of the Outlook bar if the Outlook bar is static; that is, if the Outlook bar cannot float. Otherwise, it returns the area that page buttons take at the top and bottom of the Outlook bar control.  \n  \n Override this method in class derived from `CMFCOutlookBar` to change this behavior.  \n  \n##  <a name=\"cmfcoutlookbar__ismode2003\"></a>  CMFCOutlookBar::IsMode2003  \n Specifies whether the behavior of the Outlook bar mimics that of Microsoft Office Outlook 2003.  \n  \n```  \nBOOL IsMode2003() const;\n\n \n```  \n  \n### Return Value  \n Nonzero if the Outlook bar is running in Microsoft Office 2003 mode; otherwise 0.  \n  \n### Remarks  \n You can enable this mode by using [CMFCOutlookBar::SetMode2003](#cmfcoutlookbar__setmode2003).  \n  \n##  <a name=\"cmfcoutlookbar__onafteranimation\"></a>  CMFCOutlookBar::OnAfterAnimation  \n Called by [CMFCOutlookBarTabCtrl::SetActiveTab](../../mfc/reference/cmfcoutlookbartabctrl-class.md#cmfcoutlookbartabctrl__setactivetab) after the active tab has been set using animation.  \n  \n```  \nvirtual void OnAfterAnimation(int nPage);\n```  \n  \n### Parameters  \n [in] `nPage`  \n The zero-based index of the tab page that has been made active.  \n  \n### Remarks  \n The visual effect of setting the active tab depends on whether you have enabled animation. For more information, see [CMFCOutlookBarTabCtrl::EnableAnimation](../../mfc/reference/cmfcoutlookbartabctrl-class.md#cmfcoutlookbartabctrl__enableanimation).  \n  \n##  <a name=\"cmfcoutlookbar__onbeforeanimation\"></a>  CMFCOutlookBar::OnBeforeAnimation  \n Called by [CMFCOutlookBarTabCtrl::SetActiveTab](../../mfc/reference/cmfcoutlookbartabctrl-class.md#cmfcoutlookbartabctrl__setactivetab) before a tab page is set as the active tab using animation.  \n  \n```  \nvirtual BOOL OnBeforeAnimation(int nPage);\n```  \n  \n### Parameters  \n [in] `nPage`  \n The zero-based index of the tab page that is about to be set active.  \n  \n### Return Value  \n Returns `TRUE` if animation should be used in setting the new active tab, or `FALSE` if animation should be disabled.  \n  \n### Remarks  \n  \n##  <a name=\"cmfcoutlookbar__onscroll\"></a>  CMFCOutlookBar::OnScroll  \n Called by the framework if the Outlook bar is scrolling up or down.  \n  \n```  \nvirtual void OnScroll(BOOL bDown);\n```  \n  \n### Parameters  \n [in] `bDown`  \n `TRUE` if the Outlook bar is scrolling down, or `FALSE` if it is scrolling up.  \n  \n### Remarks  \n  \n##  <a name=\"cmfcoutlookbar__removecustompage\"></a>  CMFCOutlookBar::RemoveCustomPage  \n Removes a custom Outlook bar tab page.  \n  \n```  \nBOOL RemoveCustomPage(\n    UINT uiPage,  \n    CMFCOutlookBarTabCtrl* pTargetWnd);\n```  \n  \n### Parameters  \n [in] `uiPage`  \n Zero-based index of the page in the parent Outlook window.  \n  \n [in] `pTargetWnd`  \n Pointerto the parent Outlook window.  \n  \n### Return Value  \n Nonzero if the custom page has been removed successfully; otherwise 0.  \n  \n### Remarks  \n Call this function to delete custom pages. When the page is removed its control ID is returned to the pool of available IDs.  \n  \n You must provide a pointer to [CMFCOutlookBarTabCtrl Class](../../mfc/reference/cmfcoutlookbartabctrl-class.md) object in which the page to be removed currently resides. Note that a user can move detachable pages between different Outlook bars, but the information about a custom page resides in the Outlook bar object for which you have called [CMFCOutlookBar::CreateCustomPage](#cmfcoutlookbar__createcustompage).  \n  \n Use [CBaseTabbedPane::GetUnderlyingWindow](../../mfc/reference/cbasetabbedpane-class.md#cbasetabbedpane__getunderlyingwindow) to obtain a pointer to the Outlook window.  \n  \n##  <a name=\"cmfcoutlookbar__setbuttonsfont\"></a>  CMFCOutlookBar::SetButtonsFont  \n Sets the font of the text on the buttons of the Outlook bar.  \n  \n```  \nvoid SetButtonsFont(\n    CFont* pFont,  \n    BOOL bRedraw=TRUE);\n```  \n  \n### Parameters  \n [in] `pFont`  \n Specifies the new font.  \n  \n [in] `bRedraw`  \n If `TRUE`, the Outlook bar will be redrawn.  \n  \n### Remarks  \n Use this method to set a font for the text displayed on outlook tab page buttons.  \n  \n##  <a name=\"cmfcoutlookbar__setmode2003\"></a>  CMFCOutlookBar::SetMode2003  \n Specifies whether the behavior of the Outlook bar mimics that of Outlook 2003.  \n  \n```  \nvoid SetMode2003(BOOL bMode2003=TRUE);\n```  \n  \n### Parameters  \n [in] `bMode2003`  \n If TRUE, Office 2003 mode is enabled.  \n  \n### Remarks  \n Use this function to enable or disable Office 2003 mode. In this mode, the Outlook bar has an additional toolbar with a customization button. The behavior of the Outlook bar conforms to the behavior of the Outlook bar in Microsoft Office 2003.  \n  \n By default, this mode is disabled.  \n  \n> [!NOTE]\n>  This function must be called before [CMFCOutlookBar::Create](#cmfcoutlookbar__create).  \n  \n## See Also  \n [Hierarchy Chart](../../mfc/hierarchy-chart.md)   \n [Classes](../../mfc/reference/mfc-classes.md)   \n [CBaseTabbedPane Class](../../mfc/reference/cbasetabbedpane-class.md)   \n [CMFCOutlookBarTabCtrl Class](../../mfc/reference/cmfcoutlookbartabctrl-class.md)   \n [CMFCOutlookBarPane Class](../../mfc/reference/cmfcoutlookbarpane-class.md)\n"}