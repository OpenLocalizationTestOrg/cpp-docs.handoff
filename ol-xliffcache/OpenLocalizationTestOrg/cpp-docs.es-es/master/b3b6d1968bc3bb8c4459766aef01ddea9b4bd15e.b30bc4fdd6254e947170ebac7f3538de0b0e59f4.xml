{"nodes":[{"pos":[12,66],"content":"How to: Write a Binary File (C++-CLI) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"How to: Write a Binary File (C++-CLI) | Microsoft Docs","pos":[0,54]}]},{"content":"How to: Write a Binary File (C++/CLI)","pos":[630,667]},{"content":"The following code example demonstrates writing binary data to a file.","pos":[668,738]},{"content":"Two classes from the &lt;xref:System.IO&gt; namespace are used: &lt;xref:System.IO.FileStream&gt; and &lt;xref:System.IO.BinaryWriter&gt;.","pos":[739,859],"source":" Two classes from the <xref:System.IO> namespace are used: <xref:System.IO.FileStream> and <xref:System.IO.BinaryWriter>."},{"content":"&lt;xref:System.IO.FileStream&gt; represents the actual file, while &lt;xref:System.IO.BinaryWriter&gt; provides an interface to the stream that allows binary access.","pos":[860,1014],"source":" <xref:System.IO.FileStream> represents the actual file, while <xref:System.IO.BinaryWriter> provides an interface to the stream that allows binary access."},{"content":"The following code example writes a file containing integers in binary format.","pos":[1021,1099]},{"content":"This file can be read with the code in <bpt id=\"p1\">[</bpt>How to: Read a Binary File (C++/CLI)<ept id=\"p1\">](../dotnet/how-to-read-a-binary-file-cpp-cli.md)</ept>.","pos":[1100,1226],"source":" This file can be read with the code in [How to: Read a Binary File (C++/CLI)](../dotnet/how-to-read-a-binary-file-cpp-cli.md)."},{"content":"Example","pos":[1235,1242]},{"content":"See Also","pos":[1959,1967]},{"content":"File and Stream I-O","pos":[1972,1991]},{"content":".NET Programming with C++/CLI (Visual C++)","pos":[2070,2112]}],"content":"---\ntitle: \"How to: Write a Binary File (C++-CLI) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"binary files, writing in C++\"\n  - \"files [C++], binary\"\nms.assetid: 35d97ee6-fc7e-4c36-be18-8bbb3b44b3ae\ncaps.latest.revision: 10\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# How to: Write a Binary File (C++/CLI)\nThe following code example demonstrates writing binary data to a file. Two classes from the <xref:System.IO> namespace are used: <xref:System.IO.FileStream> and <xref:System.IO.BinaryWriter>. <xref:System.IO.FileStream> represents the actual file, while <xref:System.IO.BinaryWriter> provides an interface to the stream that allows binary access.  \n  \n The following code example writes a file containing integers in binary format. This file can be read with the code in [How to: Read a Binary File (C++/CLI)](../dotnet/how-to-read-a-binary-file-cpp-cli.md).  \n  \n## Example  \n  \n```  \n// binary_write.cpp  \n// compile with: /clr  \n#using<system.dll>  \nusing namespace System;  \nusing namespace System::IO;  \n  \nint main()  \n{  \n   array<Int32>^ data = {1, 2, 3, 10000};  \n  \n   FileStream^ fs = gcnew FileStream(\"data.bin\", FileMode::Create);  \n   BinaryWriter^ w = gcnew BinaryWriter(fs);  \n  \n   try   \n   {  \n      Console::WriteLine(\"writing data to file:\");  \n      for (int i=0; i<data->Length; i++)  \n      {  \n         Console::WriteLine(data[i]);  \n         w->Write(data[i]);  \n      }  \n   }  \n   catch (Exception^)   \n   {  \n     Console::WriteLine(\"data could not be written\");  \n     fs->Close();  \n     return -1;  \n   }  \n  \n   fs->Close();  \n   return 0;  \n}  \n```  \n  \n## See Also  \n [File and Stream I-O](http://msdn.microsoft.com/Library/4f4a33a9-66b7-4cd7-a285-4ad3e4276cd2)   \n [.NET Programming with C++/CLI (Visual C++)](../dotnet/dotnet-programming-with-cpp-cli-visual-cpp.md)"}