{"nodes":[{"pos":[12,75],"content":"Modifying the Inheritance of RMyProviderRowset | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Modifying the Inheritance of RMyProviderRowset | Microsoft Docs","pos":[0,63]}]},{"content":"Modifying the Inheritance of RMyProviderRowset","pos":[625,671]},{"content":"To add the <ph id=\"ph1\">`IRowsetLocate`</ph> interface to the simple read-only provider example, modify the inheritance of <bpt id=\"p1\">**</bpt>RMyProviderRowset<ept id=\"p1\">**</ept>.","pos":[672,799],"source":"To add the `IRowsetLocate` interface to the simple read-only provider example, modify the inheritance of **RMyProviderRowset**."},{"content":"Initially, <bpt id=\"p1\">**</bpt>RMyProviderRowset<ept id=\"p1\">**</ept> inherits from <ph id=\"ph1\">`CRowsetImpl`</ph>.","pos":[800,861],"source":" Initially, **RMyProviderRowset** inherits from `CRowsetImpl`."},{"content":"You need to modify it to inherit from <bpt id=\"p1\">**</bpt>CRowsetBaseImpl<ept id=\"p1\">**</ept>.","pos":[862,920],"source":" You need to modify it to inherit from **CRowsetBaseImpl**."},{"pos":[927,994],"content":"To do this, create a new class, <ph id=\"ph1\">`CMyRowsetImpl`</ph>, in MyProviderRS.h:","source":"To do this, create a new class, `CMyRowsetImpl`, in MyProviderRS.h:"},{"content":"Now, edit the COM interface map in MyProviderRS.h to be as follows:","pos":[1360,1427]},{"content":"This creates a COM interface map that tells <ph id=\"ph1\">`CMyRowsetImpl`</ph> to call <bpt id=\"p1\">**</bpt>QueryInterface<ept id=\"p1\">**</ept> for both the <ph id=\"ph2\">`IRowset`</ph> and <ph id=\"ph3\">`IRowsetLocate`</ph> interfaces.","pos":[1585,1726],"source":"This creates a COM interface map that tells `CMyRowsetImpl` to call **QueryInterface** for both the `IRowset` and `IRowsetLocate` interfaces."},{"content":"To get all of the implementation for the other rowset classes, the map links the <ph id=\"ph1\">`CMyRowsetImpl`</ph> class back to the <bpt id=\"p1\">**</bpt>CRowsetBaseImpl<ept id=\"p1\">**</ept> class defined by the OLE DB Templates; the map uses the COM_INTERFACE_ENTRY_CHAIN macro, which tells OLE DB templates to scan the COM map in <bpt id=\"p2\">**</bpt>CRowsetBaseImpl<ept id=\"p2\">**</ept> in response to a <ph id=\"ph2\">`QueryInterface`</ph> call.","pos":[1727,2062],"source":" To get all of the implementation for the other rowset classes, the map links the `CMyRowsetImpl` class back to the **CRowsetBaseImpl** class defined by the OLE DB Templates; the map uses the COM_INTERFACE_ENTRY_CHAIN macro, which tells OLE DB templates to scan the COM map in **CRowsetBaseImpl** in response to a `QueryInterface` call."},{"pos":[2069,2193],"content":"Finally, link <ph id=\"ph1\">`RAgentRowset`</ph> to <ph id=\"ph2\">`CMyRowsetBaseImpl`</ph> by modifying <ph id=\"ph3\">`RAgentRowset`</ph> to inherit from <ph id=\"ph4\">`CMyRowsetImpl`</ph>, as follows:","source":"Finally, link `RAgentRowset` to `CMyRowsetBaseImpl` by modifying `RAgentRowset` to inherit from `CMyRowsetImpl`, as follows:"},{"pos":[2319,2439],"content":"can now use the <ph id=\"ph1\">`IRowsetLocate`</ph> interface while taking advantage of the rest of the implementation for the rowset class.","source":" can now use the `IRowsetLocate` interface while taking advantage of the rest of the implementation for the rowset class."},{"pos":[2446,2608],"content":"When this is done, you can <bpt id=\"p1\">[</bpt>dynamically determine columns returned to the consumer<ept id=\"p1\">](../../data/oledb/dynamically-determining-columns-returned-to-the-consumer.md)</ept>.","source":"When this is done, you can [dynamically determine columns returned to the consumer](../../data/oledb/dynamically-determining-columns-returned-to-the-consumer.md)."},{"content":"See Also","pos":[2617,2625]},{"content":"Enhancing the Simple Read-Only Provider","pos":[2630,2669]}],"content":"---\ntitle: \"Modifying the Inheritance of RMyProviderRowset | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"RMyProviderRowset\"\n  - \"inheritance [C++]\"\nms.assetid: 33089c90-98a4-43e7-8e67-d4bb137e267e\ncaps.latest.revision: 8\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Modifying the Inheritance of RMyProviderRowset\nTo add the `IRowsetLocate` interface to the simple read-only provider example, modify the inheritance of **RMyProviderRowset**. Initially, **RMyProviderRowset** inherits from `CRowsetImpl`. You need to modify it to inherit from **CRowsetBaseImpl**.  \n  \n To do this, create a new class, `CMyRowsetImpl`, in MyProviderRS.h:  \n  \n```  \n////////////////////////////////////////////////////////////////////////  \n// MyProviderRS.h  \n  \ntemplate <class T, class Storage, class CreatorClass, class ArrayType = CAtlArray<Storage> >  \nclass CMyRowsetImpl:  \n   public CRowsetImpl<T, Storage, CreatorClass, ArrayType, CSimpleRow, IRowsetLocateImpl< T, IRowsetLocate > >  \n{  \n...  \n};  \n```  \n  \n Now, edit the COM interface map in MyProviderRS.h to be as follows:  \n  \n```  \nBEGIN_COM_MAP(CMyRowsetImpl)  \n   COM_INTERFACE_ENTRY(IRowsetLocate)  \n   COM_INTERFACE_ENTRY_CHAIN(_RowsetBaseClass)  \nEND_COM_MAP()  \n```  \n  \n This creates a COM interface map that tells `CMyRowsetImpl` to call **QueryInterface** for both the `IRowset` and `IRowsetLocate` interfaces. To get all of the implementation for the other rowset classes, the map links the `CMyRowsetImpl` class back to the **CRowsetBaseImpl** class defined by the OLE DB Templates; the map uses the COM_INTERFACE_ENTRY_CHAIN macro, which tells OLE DB templates to scan the COM map in **CRowsetBaseImpl** in response to a `QueryInterface` call.  \n  \n Finally, link `RAgentRowset` to `CMyRowsetBaseImpl` by modifying `RAgentRowset` to inherit from `CMyRowsetImpl`, as follows:  \n  \n```  \nclass RAgentRowset : public CMyRowsetImpl<RAgentRowset, CAgentMan, CMyProviderCommand>  \n```  \n  \n `RAgentRowset` can now use the `IRowsetLocate` interface while taking advantage of the rest of the implementation for the rowset class.  \n  \n When this is done, you can [dynamically determine columns returned to the consumer](../../data/oledb/dynamically-determining-columns-returned-to-the-consumer.md).  \n  \n## See Also  \n [Enhancing the Simple Read-Only Provider](../../data/oledb/enhancing-the-simple-read-only-provider.md)"}