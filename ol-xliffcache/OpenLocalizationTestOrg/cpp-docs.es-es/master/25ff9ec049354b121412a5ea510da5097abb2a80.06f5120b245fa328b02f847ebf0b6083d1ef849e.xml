{"nodes":[{"pos":[12,53],"content":"CCreateContext Structure | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"CCreateContext Structure | Microsoft Docs","pos":[0,41]}]},{"pos":[624,648],"content":"CCreateContext Structure","linkify":"CCreateContext Structure","nodes":[{"content":"CCreateContext Structure","pos":[0,24]}]},{"pos":[649,779],"content":"The framework uses the <ph id=\"ph1\">`CCreateContext`</ph> structure when it creates the frame windows and views that are associated with a document.","source":"The framework uses the `CCreateContext` structure when it creates the frame windows and views that are associated with a document."},{"pos":[788,794],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[842,849],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[853,916],"content":"<ph id=\"ph1\">`CCreateContext`</ph> is a structure and does not have a base class.","source":"`CCreateContext` is a structure and does not have a base class."},{"content":"When you create a window, the values in this structure provide the information used to connect the components of a document to the view of its data.","pos":[923,1071]},{"content":"You only have to use <ph id=\"ph1\">`CCreateContext`</ph> if you are overriding parts of the creation process.","pos":[1072,1162],"source":" You only have to use `CCreateContext` if you are overriding parts of the creation process."},{"content":"A <ph id=\"ph1\">`CCreateContext`</ph> structure contains pointers to the document, the frame window, the view, and the document template.","pos":[1169,1287],"source":"A `CCreateContext` structure contains pointers to the document, the frame window, the view, and the document template."},{"content":"It also contains a pointer to a <ph id=\"ph1\">`CRuntimeClass`</ph> that identifies the type of view to create.","pos":[1288,1379],"source":" It also contains a pointer to a `CRuntimeClass` that identifies the type of view to create."},{"content":"The run-time class information and the current document pointer are used to create a new view dynamically.","pos":[1380,1486]},{"content":"The following table suggests how and when each <ph id=\"ph1\">`CCreateContext`</ph> member might be used:","pos":[1487,1572],"source":" The following table suggests how and when each `CCreateContext` member might be used:"},{"content":"Member","pos":[1579,1585]},{"content":"Type","pos":[1586,1590]},{"content":"What it is for","pos":[1591,1605]},{"pos":[1694,1736],"content":"<ph id=\"ph1\">`CRuntimeClass`</ph> of the new view to create.","source":"`CRuntimeClass` of the new view to create."},{"content":"The existing document to be associated with the new view.","pos":[1770,1827]},{"content":"The document template associated with the creation of a new MDI frame window.","pos":[1868,1945]},{"content":"The original view on which additional views are modeled, as in the creation of splitter window views or the creation of a second view on a document.","pos":[1973,2121]},{"content":"The frame window on which additional frame windows are modeled, as in the creation of a second frame window on a document.","pos":[2157,2279]},{"content":"When a document template creates a document and its associated components, it validates the information stored in the <ph id=\"ph1\">`CCreateContext`</ph> structure.","pos":[2287,2432],"source":"When a document template creates a document and its associated components, it validates the information stored in the `CCreateContext` structure."},{"content":"For example, a view should not be created for a nonexistent document.","pos":[2433,2502]},{"pos":[2510,2618],"content":"[!NOTE]\n All of the pointers in `CCreateContext` are optional and can be `NULL` if unspecified or unknown.","leadings":["","> "],"nodes":[{"content":"All of the pointers in <ph id=\"ph1\">`CCreateContext`</ph> are optional and can be <ph id=\"ph2\">`NULL`</ph> if unspecified or unknown.","pos":[9,106],"source":" All of the pointers in `CCreateContext` are optional and can be `NULL` if unspecified or unknown."}]},{"content":"<ph id=\"ph1\">`CCreateContext`</ph> is used by the member functions listed under \"See Also.\"","pos":[2625,2698],"source":"`CCreateContext` is used by the member functions listed under \"See Also.\""},{"content":"Consult the descriptions of these functions for specific information if you plan to override them.","pos":[2699,2797]},{"content":"Here are a few general guidelines:","pos":[2804,2838]},{"content":"When passed as an argument for window creation, as in <ph id=\"ph1\">`CWnd::Create`</ph>, <ph id=\"ph2\">`CFrameWnd::Create`</ph>, and <ph id=\"ph3\">`CFrameWnd::LoadFrame`</ph>, the create context specifies what the new window should be connected to.","pos":[2848,3039],"source":"When passed as an argument for window creation, as in `CWnd::Create`, `CFrameWnd::Create`, and `CFrameWnd::LoadFrame`, the create context specifies what the new window should be connected to."},{"content":"For most windows, the entire structure is optional and a <ph id=\"ph1\">`NULL`</ph> pointer can be passed.","pos":[3040,3126],"source":" For most windows, the entire structure is optional and a `NULL` pointer can be passed."},{"pos":[3136,3249],"content":"For overridable member functions, such as <ph id=\"ph1\">`CFrameWnd::OnCreateClient`</ph>, the <ph id=\"ph2\">`CCreateContext`</ph> argument is optional.","source":"For overridable member functions, such as `CFrameWnd::OnCreateClient`, the `CCreateContext` argument is optional."},{"content":"For member functions involved in view creation, you must provide enough information to create the view.","pos":[3259,3362]},{"content":"For example, for the first view in a splitter window, you must supply the view class information and the current document.","pos":[3363,3485]},{"content":"In general, if you use the framework defaults, you can ignore <ph id=\"ph1\">`CCreateContext`</ph>.","pos":[3492,3571],"source":"In general, if you use the framework defaults, you can ignore `CCreateContext`."},{"content":"If you attempt more advanced modifications, the Microsoft Foundation Class Library source code or the sample programs, such as VIEWEX, will guide you.","pos":[3572,3722]},{"content":"If you do forget a required parameter, a framework assertion will tell you what you forgot.","pos":[3723,3814]},{"pos":[3821,3920],"content":"For more information on <ph id=\"ph1\">`CCreateContext`</ph>, see the MFC sample <bpt id=\"p1\">[</bpt>VIEWEX<ept id=\"p1\">](../../visual-cpp-samples.md)</ept>.","source":"For more information on `CCreateContext`, see the MFC sample [VIEWEX](../../visual-cpp-samples.md)."},{"pos":[3929,3941],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[3945,3965],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> afxext.h","source":"**Header:** afxext.h"},{"pos":[3974,3982],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Hierarchy Chart<ept id=\"p1\">](../../mfc/hierarchy-chart.md)</ept><ph id=\"ph1\"> </ph>","pos":[3986,4034],"source":"[Hierarchy Chart](../../mfc/hierarchy-chart.md) "},{"content":"<bpt id=\"p1\"> [</bpt>CFrameWnd::Create<ept id=\"p1\">](../../mfc/reference/cframewnd-class.md#cframewnd__create)</ept><ph id=\"ph1\"> </ph>","pos":[4037,4116],"source":" [CFrameWnd::Create](../../mfc/reference/cframewnd-class.md#cframewnd__create) "},{"content":"<bpt id=\"p1\"> [</bpt>CFrameWnd::LoadFrame<ept id=\"p1\">](../../mfc/reference/cframewnd-class.md#cframewnd__loadframe)</ept><ph id=\"ph1\"> </ph>","pos":[4119,4204],"source":" [CFrameWnd::LoadFrame](../../mfc/reference/cframewnd-class.md#cframewnd__loadframe) "},{"content":"<bpt id=\"p1\"> [</bpt>CFrameWnd::OnCreateClient<ept id=\"p1\">](../../mfc/reference/cframewnd-class.md#cframewnd__oncreateclient)</ept><ph id=\"ph1\"> </ph>","pos":[4207,4302],"source":" [CFrameWnd::OnCreateClient](../../mfc/reference/cframewnd-class.md#cframewnd__oncreateclient) "},{"content":"<bpt id=\"p1\"> [</bpt>CSplitterWnd::Create<ept id=\"p1\">](../../mfc/reference/csplitterwnd-class.md#csplitterwnd__create)</ept><ph id=\"ph1\"> </ph>","pos":[4305,4393],"source":" [CSplitterWnd::Create](../../mfc/reference/csplitterwnd-class.md#csplitterwnd__create) "},{"content":"<bpt id=\"p1\"> [</bpt>CSplitterWnd::CreateView<ept id=\"p1\">](../../mfc/reference/csplitterwnd-class.md#csplitterwnd__createview)</ept><ph id=\"ph1\"> </ph>","pos":[4396,4492],"source":" [CSplitterWnd::CreateView](../../mfc/reference/csplitterwnd-class.md#csplitterwnd__createview) "},{"content":"<bpt id=\"p1\"> [</bpt>CWnd::Create<ept id=\"p1\">](../../mfc/reference/cwnd-class.md#cwnd__create)</ept>","pos":[4495,4558],"source":" [CWnd::Create](../../mfc/reference/cwnd-class.md#cwnd__create)"}],"content":"---\ntitle: \"CCreateContext Structure | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"CCreateContext\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"CCreateContext structure\"\nms.assetid: 337a0e44-d910-49a8-afc0-c7207666a9dc\ncaps.latest.revision: 22\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# CCreateContext Structure\nThe framework uses the `CCreateContext` structure when it creates the frame windows and views that are associated with a document.  \n  \n## Syntax  \n  \n```  \nstruct CCreateContext  \n```  \n  \n## Remarks  \n `CCreateContext` is a structure and does not have a base class.  \n  \n When you create a window, the values in this structure provide the information used to connect the components of a document to the view of its data. You only have to use `CCreateContext` if you are overriding parts of the creation process.  \n  \n A `CCreateContext` structure contains pointers to the document, the frame window, the view, and the document template. It also contains a pointer to a `CRuntimeClass` that identifies the type of view to create. The run-time class information and the current document pointer are used to create a new view dynamically. The following table suggests how and when each `CCreateContext` member might be used:  \n  \n|Member|Type|What it is for|  \n|------------|----------|--------------------|  \n|`m_pNewViewClass`|`CRuntimeClass*`|`CRuntimeClass` of the new view to create.|  \n|`m_pCurrentDoc`|`CDocument*`|The existing document to be associated with the new view.|  \n|`m_pNewDocTemplate`|`CDocTemplate*`|The document template associated with the creation of a new MDI frame window.|  \n|`m_pLastView`|`CView*`|The original view on which additional views are modeled, as in the creation of splitter window views or the creation of a second view on a document.|  \n|`m_pCurrentFrame`|`CFrameWnd*`|The frame window on which additional frame windows are modeled, as in the creation of a second frame window on a document.|  \n  \n When a document template creates a document and its associated components, it validates the information stored in the `CCreateContext` structure. For example, a view should not be created for a nonexistent document.  \n  \n> [!NOTE]\n>  All of the pointers in `CCreateContext` are optional and can be `NULL` if unspecified or unknown.  \n  \n `CCreateContext` is used by the member functions listed under \"See Also.\" Consult the descriptions of these functions for specific information if you plan to override them.  \n  \n Here are a few general guidelines:  \n  \n-   When passed as an argument for window creation, as in `CWnd::Create`, `CFrameWnd::Create`, and `CFrameWnd::LoadFrame`, the create context specifies what the new window should be connected to. For most windows, the entire structure is optional and a `NULL` pointer can be passed.  \n  \n-   For overridable member functions, such as `CFrameWnd::OnCreateClient`, the `CCreateContext` argument is optional.  \n  \n-   For member functions involved in view creation, you must provide enough information to create the view. For example, for the first view in a splitter window, you must supply the view class information and the current document.  \n  \n In general, if you use the framework defaults, you can ignore `CCreateContext`. If you attempt more advanced modifications, the Microsoft Foundation Class Library source code or the sample programs, such as VIEWEX, will guide you. If you do forget a required parameter, a framework assertion will tell you what you forgot.  \n  \n For more information on `CCreateContext`, see the MFC sample [VIEWEX](../../visual-cpp-samples.md).  \n  \n## Requirements  \n **Header:** afxext.h  \n  \n## See Also  \n [Hierarchy Chart](../../mfc/hierarchy-chart.md)   \n [CFrameWnd::Create](../../mfc/reference/cframewnd-class.md#cframewnd__create)   \n [CFrameWnd::LoadFrame](../../mfc/reference/cframewnd-class.md#cframewnd__loadframe)   \n [CFrameWnd::OnCreateClient](../../mfc/reference/cframewnd-class.md#cframewnd__oncreateclient)   \n [CSplitterWnd::Create](../../mfc/reference/csplitterwnd-class.md#csplitterwnd__create)   \n [CSplitterWnd::CreateView](../../mfc/reference/csplitterwnd-class.md#csplitterwnd__createview)   \n [CWnd::Create](../../mfc/reference/cwnd-class.md#cwnd__create)\n\n"}