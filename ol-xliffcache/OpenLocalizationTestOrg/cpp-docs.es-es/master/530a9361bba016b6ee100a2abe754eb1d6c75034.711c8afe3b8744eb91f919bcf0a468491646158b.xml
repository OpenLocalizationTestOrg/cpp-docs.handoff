{"nodes":[{"pos":[12,98],"content":"Data Source: Programmatically Creating a Table in an ODBC Data Source | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Data Source: Programmatically Creating a Table in an ODBC Data Source | Microsoft Docs","pos":[0,86]}]},{"content":"Data Source: Programmatically Creating a Table in an ODBC Data Source","pos":[760,829]},{"pos":[830,1032],"content":"This topic explains how to create a table for your data source, using the <ph id=\"ph1\">`ExecuteSQL`</ph> member function of class <ph id=\"ph2\">`CDatabase`</ph>, passing the function a string that contains a <bpt id=\"p1\">**</bpt>CREATE TABLE<ept id=\"p1\">**</ept> SQL statement.","source":"This topic explains how to create a table for your data source, using the `ExecuteSQL` member function of class `CDatabase`, passing the function a string that contains a **CREATE TABLE** SQL statement."},{"content":"For general information about ODBC data sources in MFC, see <bpt id=\"p1\">[</bpt>Data Source (ODBC)<ept id=\"p1\">](../../data/odbc/data-source-odbc.md)</ept>.","pos":[1039,1157],"source":"For general information about ODBC data sources in MFC, see [Data Source (ODBC)](../../data/odbc/data-source-odbc.md)."},{"content":"The topic <bpt id=\"p1\">[</bpt>Data Source: Programmatically Configuring an ODBC Data Source<ept id=\"p1\">](../../data/odbc/data-source-programmatically-configuring-an-odbc-data-source.md)</ept> describes creating data sources.","pos":[1158,1345],"source":" The topic [Data Source: Programmatically Configuring an ODBC Data Source](../../data/odbc/data-source-programmatically-configuring-an-odbc-data-source.md) describes creating data sources."},{"content":"When you have the data source established, you can easily create tables using the <ph id=\"ph1\">`ExecuteSQL`</ph> member function and the <bpt id=\"p1\">**</bpt>CREATE TABLE<ept id=\"p1\">**</ept> SQL statement.","pos":[1352,1502],"source":"When you have the data source established, you can easily create tables using the `ExecuteSQL` member function and the **CREATE TABLE** SQL statement."},{"content":"For example, if you had a <ph id=\"ph1\">`CDatabase`</ph> object called <ph id=\"ph2\">`myDB`</ph>, you could use the following MFC code to create a table:","pos":[1503,1618],"source":" For example, if you had a `CDatabase` object called `myDB`, you could use the following MFC code to create a table:"},{"pos":[1754,1932],"content":"This code example creates a table called \"OFFICES\" in the Microsoft Access data source connection maintained by <ph id=\"ph1\">`myDB`</ph>; the table contains two fields \"OfficeID\" and \"OfficeName.\"","source":"This code example creates a table called \"OFFICES\" in the Microsoft Access data source connection maintained by `myDB`; the table contains two fields \"OfficeID\" and \"OfficeName.\""},{"pos":[1940,2404],"content":"[!NOTE]\n The field types specified in the **CREATE TABLE** SQL statement might vary according to the ODBC driver that you are using. The Microsoft Query program (distributed with Visual C++ 1.5) is one way to discover what field types are available for a data source. In Microsoft Query, click **File**, click **Table_Definition**, select a table from a data source, and look at the type shown in the **Type** combo box. SQL syntax also exists to create indexes.","leadings":["","> "],"nodes":[{"content":" The field types specified in the **CREATE TABLE** SQL statement might vary according to the ODBC driver that you are using. The Microsoft Query program (distributed with Visual C++ 1.5) is one way to discover what field types are available for a data source. In Microsoft Query, click **File**, click **Table_Definition**, select a table from a data source, and look at the type shown in the **Type** combo box. SQL syntax also exists to create indexes.","pos":[8,462],"nodes":[{"content":"The field types specified in the <bpt id=\"p1\">**</bpt>CREATE TABLE<ept id=\"p1\">**</ept> SQL statement might vary according to the ODBC driver that you are using.","pos":[1,124],"source":" The field types specified in the **CREATE TABLE** SQL statement might vary according to the ODBC driver that you are using."},{"content":"The Microsoft Query program (distributed with Visual C++ 1.5) is one way to discover what field types are available for a data source.","pos":[125,259]},{"content":"In Microsoft Query, click <bpt id=\"p1\">**</bpt>File<ept id=\"p1\">**</ept>, click <bpt id=\"p2\">**</bpt>Table_Definition<ept id=\"p2\">**</ept>, select a table from a data source, and look at the type shown in the <bpt id=\"p3\">**</bpt>Type<ept id=\"p3\">**</ept> combo box.","pos":[260,412],"source":" In Microsoft Query, click **File**, click **Table_Definition**, select a table from a data source, and look at the type shown in the **Type** combo box."},{"content":"SQL syntax also exists to create indexes.","pos":[413,454]}]}]},{"content":"See Also","pos":[2413,2421]},{"content":"Data Source (ODBC)","pos":[2426,2444]}],"content":"---\ntitle: \"Data Source: Programmatically Creating a Table in an ODBC Data Source | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"programmatically creating ODBC tables [C++]\"\n  - \"tables [C++]\"\n  - \"ODBC data sources, creating tables in\"\n  - \"tables [C++], creating programmatically\"\nms.assetid: 9ca68fb5-c3df-424a-a75c-e3fb01cc1b18\ncaps.latest.revision: 11\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Data Source: Programmatically Creating a Table in an ODBC Data Source\nThis topic explains how to create a table for your data source, using the `ExecuteSQL` member function of class `CDatabase`, passing the function a string that contains a **CREATE TABLE** SQL statement.  \n  \n For general information about ODBC data sources in MFC, see [Data Source (ODBC)](../../data/odbc/data-source-odbc.md). The topic [Data Source: Programmatically Configuring an ODBC Data Source](../../data/odbc/data-source-programmatically-configuring-an-odbc-data-source.md) describes creating data sources.  \n  \n When you have the data source established, you can easily create tables using the `ExecuteSQL` member function and the **CREATE TABLE** SQL statement. For example, if you had a `CDatabase` object called `myDB`, you could use the following MFC code to create a table:  \n  \n```  \nmyDB.ExecuteSQL(\"CREATE TABLE OFFICES (OfficeID TEXT(4)\" \",   \n                         OfficeName TEXT(10))\");  \n```  \n  \n This code example creates a table called \"OFFICES\" in the Microsoft Access data source connection maintained by `myDB`; the table contains two fields \"OfficeID\" and \"OfficeName.\"  \n  \n> [!NOTE]\n>  The field types specified in the **CREATE TABLE** SQL statement might vary according to the ODBC driver that you are using. The Microsoft Query program (distributed with Visual C++ 1.5) is one way to discover what field types are available for a data source. In Microsoft Query, click **File**, click **Table_Definition**, select a table from a data source, and look at the type shown in the **Type** combo box. SQL syntax also exists to create indexes.  \n  \n## See Also  \n [Data Source (ODBC)](../../data/odbc/data-source-odbc.md)"}