{"nodes":[{"pos":[12,43],"content":"feclearexcept1 | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"feclearexcept1 | Microsoft Docs","pos":[0,31]}]},{"pos":[966,979],"content":"feclearexcept","linkify":"feclearexcept","nodes":[{"content":"feclearexcept","pos":[0,13]}]},{"content":"Attempts to clear the floating-point exception flags        specified by the argument.","pos":[980,1066]},{"pos":[1075,1081],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[1150,1160],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"The exception status flags to clear.","pos":[1177,1213]},{"pos":[1222,1234],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Returns zero if <ph id=\"ph1\">`excepts`</ph> is zero, or if all        the specified exceptions were successfully cleared.","pos":[1238,1341],"source":"Returns zero if `excepts` is zero, or if all        the specified exceptions were successfully cleared."},{"content":"Otherwise, returns a nonzero value.","pos":[1342,1377]},{"pos":[1386,1393],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The <ph id=\"ph1\">`feclearexcept`</ph> function attempts to clear the floating point exception status flags specified by <ph id=\"ph2\">`excepts`</ph>.","pos":[1397,1509],"source":"The `feclearexcept` function attempts to clear the floating point exception status flags specified by `excepts`."},{"content":"The function supports these exception macros, defined in fenv.h:","pos":[1510,1574]},{"content":"Exception Macro","pos":[1581,1596]},{"content":"Description","pos":[1597,1608]},{"content":"FE_DIVBYZERO","pos":[1657,1669]},{"content":"A singularity or pole error occurred in an earlier floating-point operation; an infinity value was created.","pos":[1670,1777]},{"content":"FE_INEXACT","pos":[1782,1792]},{"content":"The function was forced to round the stored result of an earlier floating-point operation.","pos":[1793,1883]},{"content":"FE_INVALID","pos":[1888,1898]},{"content":"A domain error occurred in an earlier floating-point operation.","pos":[1899,1962]},{"content":"FE_OVERFLOW","pos":[1967,1978]},{"content":"A range error occurred; an earlier floating-point operation result was too large to be represented.","pos":[1979,2078]},{"content":"FE_UNDERFLOW","pos":[2083,2095]},{"content":"An earlier floating-point operation result was too small to be represented at full precision; a denormal value was created.","pos":[2096,2219]},{"content":"FE_ALLEXCEPT","pos":[2224,2236]},{"content":"The bitwise OR of all supported floating-point exceptions.","pos":[2237,2295]},{"content":"The <ph id=\"ph1\">`excepts`</ph> argument may be zero, or the bitwise OR of one or more of the supported exception macros.","pos":[2303,2406],"source":"The `excepts` argument may be zero, or the bitwise OR of one or more of the supported exception macros."},{"content":"The result of any other argument value is undefined.","pos":[2407,2459]},{"pos":[2468,2480],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"content":"Function","pos":[2487,2495]},{"content":"C header","pos":[2496,2504]},{"content":"C++ header","pos":[2505,2515]},{"content":"<ph id=\"ph1\">\\&lt;</ph>fenv.h&gt;","pos":[2589,2598],"source":"\\<fenv.h>"},{"content":"<ph id=\"ph1\">\\&lt;</ph>cfenv&gt;","pos":[2599,2607],"source":"\\<cfenv>"},{"pos":[2615,2719],"content":"For additional compatibility information, see <bpt id=\"p1\">[</bpt>Compatibility<ept id=\"p1\">](../../c-runtime-library/compatibility.md)</ept>.","source":"For additional compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md)."},{"pos":[2728,2736],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Alphabetical Function Reference<ept id=\"p1\">](../../c-runtime-library/reference/crt-alphabetical-function-reference.md)</ept><ph id=\"ph1\"> </ph>","pos":[2740,2848],"source":"[Alphabetical Function Reference](../../c-runtime-library/reference/crt-alphabetical-function-reference.md) "},{"content":"<bpt id=\"p1\"> [</bpt>fetestexcept<ept id=\"p1\">](../../c-runtime-library/reference/fetestexcept1.md)</ept>","pos":[2851,2918],"source":" [fetestexcept](../../c-runtime-library/reference/fetestexcept1.md)"}],"content":"---\ntitle: \"feclearexcept1 | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"cpp\"\n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\napiname: \n  - \"feclearexcept\"\napilocation: \n  - \"msvcrt.dll\"\n  - \"msvcr80.dll\"\n  - \"msvcr90.dll\"\n  - \"msvcr100.dll\"\n  - \"msvcr100_clr0400.dll\"\n  - \"msvcr110.dll\"\n  - \"msvcr110_clr0400.dll\"\n  - \"msvcr120.dll\"\n  - \"msvcr120_clr0400.dll\"\n  - \"ucrtbase.dll\"\n  - \"api-ms-win-crt-runtime-l1-1-0.dll\"\napitype: \"DLLExport\"\nf1_keywords: \n  - \"feclearexcept\"\n  - \"fenv/feclearexcept\"\ndev_langs: \n  - \"C\"\n  - \"C++\"\nhelpviewer_keywords: \n  - \"feclearexcept function\"\nms.assetid: ef419da3-c248-4432-b53c-8e7a475d9533\ncaps.latest.revision: 5\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# feclearexcept\nAttempts to clear the floating-point exception flags        specified by the argument.  \n  \n## Syntax  \n  \n```  \nint feclearexcept(  \n   int excepts  \n);  \n```  \n  \n#### Parameters  \n `excepts`  \n The exception status flags to clear.  \n  \n## Return Value  \n Returns zero if `excepts` is zero, or if all        the specified exceptions were successfully cleared. Otherwise, returns a nonzero value.  \n  \n## Remarks  \n The `feclearexcept` function attempts to clear the floating point exception status flags specified by `excepts`. The function supports these exception macros, defined in fenv.h:  \n  \n|Exception Macro|Description|  \n|---------------------|-----------------|  \n|FE_DIVBYZERO|A singularity or pole error occurred in an earlier floating-point operation; an infinity value was created.|  \n|FE_INEXACT|The function was forced to round the stored result of an earlier floating-point operation.|  \n|FE_INVALID|A domain error occurred in an earlier floating-point operation.|  \n|FE_OVERFLOW|A range error occurred; an earlier floating-point operation result was too large to be represented.|  \n|FE_UNDERFLOW|An earlier floating-point operation result was too small to be represented at full precision; a denormal value was created.|  \n|FE_ALLEXCEPT|The bitwise OR of all supported floating-point exceptions.|  \n  \n The `excepts` argument may be zero, or the bitwise OR of one or more of the supported exception macros. The result of any other argument value is undefined.  \n  \n## Requirements  \n  \n|Function|C header|C++ header|  \n|--------------|--------------|------------------|  \n|`feclearexcept`|\\<fenv.h>|\\<cfenv>|  \n  \n For additional compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md).  \n  \n## See Also  \n [Alphabetical Function Reference](../../c-runtime-library/reference/crt-alphabetical-function-reference.md)   \n [fetestexcept](../../c-runtime-library/reference/fetestexcept1.md)"}