{"nodes":[{"pos":[12,45],"content":"Unicode and MBCS | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Unicode and MBCS | Microsoft Docs","pos":[0,33]}]},{"content":"Unicode and MBCS","pos":[906,922]},{"content":"The Microsoft Foundation Classes (MFC) library, the C run-time library for Visual C++, and the Visual C++ development environment are enabled to assist your international programming.","pos":[923,1106]},{"content":"They provide:","pos":[1107,1120]},{"content":"Support for the Unicode standard on Windows 2000 (formerly Windows NT).","pos":[1130,1201]},{"content":"Unicode is the current standard and should be used whenever possible.","pos":[1202,1271]},{"content":"Unicode is a 16-bit character encoding, providing enough encodings for all languages.","pos":[1282,1367]},{"content":"All ASCII characters are included in Unicode as widened characters.","pos":[1368,1435]},{"pos":[1447,1557],"content":"[!NOTE]\n The Unicode standard is not supported on Windows 95, Windows 98, or Windows Millennium Edition.","leadings":["","    > "],"nodes":[{"content":"The Unicode standard is not supported on Windows 95, Windows 98, or Windows Millennium Edition.","pos":[9,104]}]},{"content":"Support for a form of multibyte character set (MBCS) called double-byte character set (DBCS) on all platforms.","pos":[1567,1677]},{"content":"DBCS characters are composed of 1 or 2 bytes.","pos":[1688,1733]},{"content":"Some ranges of bytes are set aside for use as lead bytes.","pos":[1734,1791]},{"content":"A lead byte specifies that it and the following trail byte comprise a single 2-byte-wide character.","pos":[1792,1891]},{"content":"You must keep track of which bytes are lead bytes.","pos":[1892,1942]},{"content":"In a particular multibyte-character set, the lead bytes fall within a certain range, as do the trail bytes.","pos":[1943,2050]},{"content":"When these ranges overlap, it might be necessary to evaluate the context to determine whether a given byte is functioning as a lead byte or a trail byte.","pos":[2051,2204]},{"content":"Support for tools that simplify MBCS programming of applications written for international markets.","pos":[2214,2313]},{"content":"When run on an MBCS-enabled version of the Windows operating system, the Visual C++ development system — including the integrated source code editor, debugger, and command-line tools — is completely MBCS-enabled.","pos":[2324,2536]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>MBCS Support in Visual C++<ept id=\"p1\">](../text/mbcs-support-in-visual-cpp.md)</ept>.","pos":[2537,2631],"source":" For more information, see [MBCS Support in Visual C++](../text/mbcs-support-in-visual-cpp.md)."},{"pos":[2639,2839],"content":"[!NOTE]\n In this documentation, MBCS is used to describe all non-Unicode support for multibyte characters. In Visual C++, MBCS always means DBCS. Character sets wider than 2 bytes are not supported.","leadings":["","> "],"nodes":[{"content":" In this documentation, MBCS is used to describe all non-Unicode support for multibyte characters. In Visual C++, MBCS always means DBCS. Character sets wider than 2 bytes are not supported.","pos":[8,198],"nodes":[{"content":"In this documentation, MBCS is used to describe all non-Unicode support for multibyte characters.","pos":[1,98]},{"content":"In Visual C++, MBCS always means DBCS.","pos":[99,137]},{"content":"Character sets wider than 2 bytes are not supported.","pos":[138,190]}]}]},{"content":"By definition, the ASCII character set is a subset of all multibyte-character sets.","pos":[2846,2929]},{"content":"In many multibyte character sets, each character in the range 0x00 – 0x7F is identical to the character that has the same value in the ASCII character set.","pos":[2930,3085]},{"content":"For example, in both ASCII and MBCS character strings, the 1-byte <bpt id=\"p1\">**</bpt>NULL<ept id=\"p1\">**</ept> character ('\\0') has value 0x00 and indicates the terminating null character.","pos":[3086,3238],"source":" For example, in both ASCII and MBCS character strings, the 1-byte **NULL** character ('\\0') has value 0x00 and indicates the terminating null character."},{"content":"See Also","pos":[3247,3255]},{"content":"Text and Strings","pos":[3260,3276]},{"content":"International Enabling","pos":[3326,3348]}],"content":"---\ntitle: \"Unicode and MBCS | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"_mbcs\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"MBCS [C++], Unicode\"\n  - \"MFC [C++], character sets\"\n  - \"character sets [C++], multibyte\"\n  - \"run-time libraries [C++], language portability\"\n  - \"character sets [C++], Unicode\"\n  - \"Unicode [C++], MFC and C run-time functions\"\n  - \"multibyte characters [C++]\"\n  - \"runtime [C++], language portability\"\nms.assetid: 677baec6-71b4-4579-94df-64f18bc117c4\ncaps.latest.revision: 9\nauthor: \"ghogen\"\nms.author: \"ghogen\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"ru-ru\"\n  - \"zh-cn\"\n  - \"zh-tw\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"tr-tr\"\n---\n# Unicode and MBCS\nThe Microsoft Foundation Classes (MFC) library, the C run-time library for Visual C++, and the Visual C++ development environment are enabled to assist your international programming. They provide:  \n  \n-   Support for the Unicode standard on Windows 2000 (formerly Windows NT). Unicode is the current standard and should be used whenever possible.  \n  \n     Unicode is a 16-bit character encoding, providing enough encodings for all languages. All ASCII characters are included in Unicode as widened characters.  \n  \n    > [!NOTE]\n    >  The Unicode standard is not supported on Windows 95, Windows 98, or Windows Millennium Edition.  \n  \n-   Support for a form of multibyte character set (MBCS) called double-byte character set (DBCS) on all platforms.  \n  \n     DBCS characters are composed of 1 or 2 bytes. Some ranges of bytes are set aside for use as lead bytes. A lead byte specifies that it and the following trail byte comprise a single 2-byte-wide character. You must keep track of which bytes are lead bytes. In a particular multibyte-character set, the lead bytes fall within a certain range, as do the trail bytes. When these ranges overlap, it might be necessary to evaluate the context to determine whether a given byte is functioning as a lead byte or a trail byte.  \n  \n-   Support for tools that simplify MBCS programming of applications written for international markets.  \n  \n     When run on an MBCS-enabled version of the Windows operating system, the Visual C++ development system — including the integrated source code editor, debugger, and command-line tools — is completely MBCS-enabled. For more information, see [MBCS Support in Visual C++](../text/mbcs-support-in-visual-cpp.md).  \n  \n> [!NOTE]\n>  In this documentation, MBCS is used to describe all non-Unicode support for multibyte characters. In Visual C++, MBCS always means DBCS. Character sets wider than 2 bytes are not supported.  \n  \n By definition, the ASCII character set is a subset of all multibyte-character sets. In many multibyte character sets, each character in the range 0x00 – 0x7F is identical to the character that has the same value in the ASCII character set. For example, in both ASCII and MBCS character strings, the 1-byte **NULL** character ('\\0') has value 0x00 and indicates the terminating null character.  \n  \n## See Also  \n [Text and Strings](../text/text-and-strings-in-visual-cpp.md)   \n [International Enabling](../text/international-enabling.md)"}