{"nodes":[{"pos":[12,78],"content":"hash_multimap::generic_reverse_iterator (STL-CLR) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"hash_multimap::generic_reverse_iterator (STL-CLR) | Microsoft Docs","pos":[0,66]}]},{"content":"hash_multimap::generic_reverse_iterator (STL/CLR)","pos":[698,747]},{"content":"The type of a reverse iterator for use with the generic interface for the container.","pos":[748,832]},{"content":"Syntax","pos":[841,847]},{"content":"Remarks","pos":[1000,1007]},{"content":"The type describes a generic reverse iterator that can be used with the generic interface for this template container class.","pos":[1011,1135]},{"content":"Example","pos":[1144,1151]},{"content":"Requirements","pos":[2392,2404]},{"pos":[2408,2438],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> <ph id=\"ph1\">\\&lt;</ph>cliext/hash_map&gt;","source":"**Header:** \\<cliext/hash_map>"},{"pos":[2445,2466],"content":"<bpt id=\"p1\">**</bpt>Namespace:<ept id=\"p1\">**</ept> cliext","source":"**Namespace:** cliext"},{"content":"See Also","pos":[2475,2483]},{"content":"hash_multimap (STL/CLR)","pos":[2488,2511]},{"content":"hash_multimap::generic_container (STL/CLR)","pos":[2554,2596]},{"content":"hash_multimap::generic_iterator (STL/CLR)","pos":[2657,2698]}],"content":"---\ntitle: \"hash_multimap::generic_reverse_iterator (STL-CLR) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"cliext::hash_multimap::generic_reverse_iterator\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"generic_reverse_iterator member [STL/CLR]\"\nms.assetid: 490dc65b-939b-4fe3-9bad-2e738da35a38\ncaps.latest.revision: 8\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# hash_multimap::generic_reverse_iterator (STL/CLR)\nThe type of a reverse iterator for use with the generic interface for the container.  \n  \n## Syntax  \n  \n```  \ntypedef Microsoft::VisualC::StlClr::Generic::  \n    ReverseRandomAccessIterator<generic_value>  \n    generic_reverse_iterator;  \n```  \n  \n## Remarks  \n The type describes a generic reverse iterator that can be used with the generic interface for this template container class.  \n  \n## Example  \n  \n```  \n// cliext_hash_multimap_generic_reverse_iterator.cpp   \n// compile with: /clr   \n#include <cliext/hash_map>   \n  \ntypedef cliext::hash_multimap<wchar_t, int> Myhash_multimap;   \nint main()   \n    {   \n    Myhash_multimap c1;   \n    c1.insert(Myhash_multimap::make_value(L'a', 1));   \n    c1.insert(Myhash_multimap::make_value(L'b', 2));   \n    c1.insert(Myhash_multimap::make_value(L'c', 3));   \n  \n// display contents \" [a 1] [b 2] [c 3]\"   \n    for each (Myhash_multimap::value_type elem in c1)   \n        System::Console::Write(\" [{0} {1}]\", elem->first, elem->second);   \n    System::Console::WriteLine();   \n  \n// construct a generic container   \n    Myhash_multimap::generic_container^ gc1 = %c1;   \n    for each (Myhash_multimap::value_type elem in gc1)   \n        System::Console::Write(\" [{0} {1}]\", elem->first, elem->second);   \n    System::Console::WriteLine();   \n  \n// get an element and display it   \n    Myhash_multimap::generic_reverse_iterator gcit = gc1->rbegin();   \n    Myhash_multimap::generic_value gcval = *gcit;   \n    System::Console::WriteLine(\" [{0} {1}]\", gcval->first, gcval->second);   \n    return (0);   \n    }  \n  \n```  \n  \n```Output  \n[a 1] [b 2] [c 3]  \n[a 1] [b 2] [c 3]  \n[c 3]  \n```  \n  \n## Requirements  \n **Header:** \\<cliext/hash_map>  \n  \n **Namespace:** cliext  \n  \n## See Also  \n [hash_multimap (STL/CLR)](../dotnet/hash-multimap-stl-clr.md)   \n [hash_multimap::generic_container (STL/CLR)](../dotnet/hash-multimap-generic-container-stl-clr.md)   \n [hash_multimap::generic_iterator (STL/CLR)](../dotnet/hash-multimap-generic-iterator-stl-clr.md)"}