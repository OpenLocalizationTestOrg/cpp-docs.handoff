<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="es-es">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-04506c2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0494efcbd4c50dca25a8d0cd9c4200ada429bac0</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\mfc\reference\coledataobject-class.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ec03620f18182332af4687239ae0445985744432</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">38a0723db5b1ede7126056c94f6ceee384c6feae</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>COleDataObject Class | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>COleDataObject Class</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Used in data transfers for retrieving data in various formats from the Clipboard, through drag and drop, or from an embedded OLE item.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Members</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Public Constructors</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>COleDataObject::COleDataObject</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Constructs a <ph id="ph1">`COleDataObject`</ph> object.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Public Methods</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>COleDataObject::Attach</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Attaches the specified OLE data object to the <ph id="ph1">`COleDataObject`</ph>.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>COleDataObject::AttachClipboard</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Attaches the data object that is on the Clipboard.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>COleDataObject::BeginEnumFormats</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Prepares for one or more subsequent <ph id="ph1">`GetNextFormat`</ph> calls.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>COleDataObject::Detach</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Detaches the associated <ph id="ph1">`IDataObject`</ph> object.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>COleDataObject::GetData</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Copies data from the attached OLE data object in a specified format.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>COleDataObject::GetFileData</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Copies data from the attached OLE data object into a <ph id="ph1">`CFile`</ph> pointer in the specified format.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>COleDataObject::GetGlobalData</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Copies data from the attached OLE data object into an <ph id="ph1">`HGLOBAL`</ph> in the specified format.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>COleDataObject::GetNextFormat</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Returns the next data format available.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>COleDataObject::IsDataAvailable</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Checks whether data is available in a specified format.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>COleDataObject::Release</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Detaches and releases the associated <ph id="ph1">`IDataObject`</ph> object.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>does not have a base class.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>These kinds of data transfers include a source and a destination.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The data source is implemented as an object of the <bpt id="p1">[</bpt>COleDataSource<ept id="p1">](../../mfc/reference/coledatasource-class.md)</ept> class.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Whenever a destination application has data dropped in it or is asked to perform a paste operation from the Clipboard, an object of the <ph id="ph1">`COleDataObject`</ph> class must be created.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>This class enables you to determine whether the data exists in a specified format.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>You can also enumerate the available data formats or check whether a given format is available and then retrieve the data in the preferred format.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Object retrieval can be accomplished in several different ways, including the use of a <bpt id="p1">[</bpt>CFile<ept id="p1">](../../mfc/reference/cfile-class.md)</ept>, an <ph id="ph1">`HGLOBAL`</ph>, or an <bpt id="p2">**</bpt>STGMEDIUM<ept id="p2">**</ept> structure.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>For more information, see the <bpt id="p1">[</bpt>STGMEDIUM<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms683812)</ept> structure in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>For more information about using data objects in your application, see the article <bpt id="p1">[</bpt>Data Objects and Data Sources (OLE)<ept id="p1">](../../mfc/data-objects-and-data-sources-ole.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Inheritance Hierarchy</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Requirements</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Header:<ept id="p1">**</ept> afxole.h</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>COleDataObject::Attach</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Call this function to associate the <ph id="ph1">`COleDataObject`</ph> object with an OLE data object.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>lpDataObject</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Points to an OLE data object.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> **</bpt>TRUE<ept id="p1">**</ept> if the OLE data object should be released when the <ph id="ph1">`COleDataObject`</ph> object is destroyed; otherwise <bpt id="p2">**</bpt>FALSE<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>IDataObject<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms688421)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>COleDataObject::AttachClipboard</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Call this function to attach the data object that is currently on the Clipboard to the <ph id="ph1">`COleDataObject`</ph> object.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Nonzero if successful; otherwise 0.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Calling this function locks the Clipboard until this data object is released.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The data object is released in the destructor for the <ph id="ph1">`COleDataObject`</ph>.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>OpenClipboard<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms649048)</ept> and <bpt id="p2">[</bpt>CloseClipboard<ept id="p2">](http://msdn.microsoft.com/library/windows/desktop/ms649035)</ept> in the Win32 documention.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>COleDataObject::BeginEnumFormats</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Call this function to prepare for subsequent calls to <ph id="ph1">`GetNextFormat`</ph> for retrieving a list of data formats from the item.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>After a call to <ph id="ph1">`BeginEnumFormats`</ph>, the position of the first format supported by this data object is stored.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Successive calls to <ph id="ph1">`GetNextFormat`</ph> will enumerate the list of available formats in the data object.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>To check on the availability of data in a given format, use <bpt id="p1">[</bpt>COleDataObject::IsDataAvailable<ept id="p1">](#coledataobject__isdataavailable)</ept>.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>IDataObject::EnumFormatEtc<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms683979)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>COleDataObject::COleDataObject</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Constructs a <ph id="ph1">`COleDataObject`</ph> object.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>A call to <bpt id="p1">[</bpt>COleDataObject::Attach<ept id="p1">](#coledataobject__attach)</ept> or <bpt id="p2">[</bpt>COleDataObject::AttachClipboard<ept id="p2">](#coledataobject__attachclipboard)</ept> must be made before calling other <ph id="ph1">`COleDataObject`</ph> functions.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Since one of the parameters to the drag-and-drop handlers is a pointer to a <ph id="ph1">`COleDataObject`</ph>, there is no need to call this constructor to support drag and drop.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>COleDataObject::Detach</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Call this function to detach the <ph id="ph1">`COleDataObject`</ph> object from its associated OLE data object without releasing the data object.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>A pointer to the OLE data object that was detached.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>COleDataObject::GetData</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Call this function to retrieve data from the item in the specified format.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>The format in which data is to be returned.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>This parameter can be one of the predefined Clipboard formats or the value returned by the native Windows <bpt id="p1">[</bpt>RegisterClipboardFormat<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms649049)</ept> function.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Points to a <bpt id="p1">[</bpt>STGMEDIUM<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms683812)</ept> structure that will receive data.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Points to a <bpt id="p1">[</bpt>FORMATETC<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms682177)</ept> structure describing the format in which data is to be returned.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Provide a value for this parameter if you want to specify additional format information beyond the Clipboard format specified by <ph id="ph1">`cfFormat`</ph>.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>If it is <bpt id="p1">**</bpt>NULL<ept id="p1">**</ept>, the default values are used for the other fields in the <bpt id="p2">**</bpt>FORMATETC<ept id="p2">**</ept> structure.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Nonzero if successful; otherwise 0.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>IDataObject::GetData<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms678431)</ept>, <bpt id="p2">[</bpt>STGMEDIUM<ept id="p2">](http://msdn.microsoft.com/library/windows/desktop/ms683812)</ept>, and <bpt id="p3">[</bpt>FORMATETC<ept id="p3">](http://msdn.microsoft.com/library/windows/desktop/ms682177)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>RegisterClipboardFormat<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms649049)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>COleDataObject::GetFileData</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Call this function to create a <ph id="ph1">`CFile`</ph> or <ph id="ph2">`CFile`</ph>-derived object and to retrieve data in the specified format into a <ph id="ph3">`CFile`</ph> pointer.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>The format in which data is to be returned.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>This parameter can be one of the predefined Clipboard formats or the value returned by the native Windows <bpt id="p1">[</bpt>RegisterClipboardFormat<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms649049)</ept> function.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Points to a <bpt id="p1">[</bpt>FORMATETC<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms682177)</ept> structure describing the format in which data is to be returned.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Provide a value for this parameter if you want to specify additional format information beyond the Clipboard format specified by <ph id="ph1">`cfFormat`</ph>.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>If it is <bpt id="p1">**</bpt>NULL<ept id="p1">**</ept>, the default values are used for the other fields in the <bpt id="p2">**</bpt>FORMATETC<ept id="p2">**</ept> structure.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Pointer to the new <ph id="ph1">`CFile`</ph> or <ph id="ph2">`CFile`</ph>-derived object containing the data if successful; otherwise <bpt id="p1">**</bpt>NULL<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Depending on the medium the data is stored in, the actual type pointed to by the return value may be <ph id="ph1">`CFile`</ph>, <ph id="ph2">`CSharedFile`</ph>, or <ph id="ph3">`COleStreamFile`</ph>.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`CFile`</ph> object accessed by the return value of this function is owned by the caller.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>It is the responsibility of the caller to <bpt id="p1">**</bpt>delete<ept id="p1">**</ept> the <ph id="ph1">`CFile`</ph> object, thereby closing the file.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>FORMATETC<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms682177)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>RegisterClipboardFormat<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms649049)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>COleDataObject::GetGlobalData</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Call this function to allocate a global memory block and to retrieve data in the specified format into an <ph id="ph1">`HGLOBAL`</ph>.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>The format in which data is to be returned.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>This parameter can be one of the predefined Clipboard formats or the value returned by the native Windows <bpt id="p1">[</bpt>RegisterClipboardFormat<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms649049)</ept> function.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Points to a <bpt id="p1">[</bpt>FORMATETC<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms682177)</ept> structure describing the format in which data is to be returned.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Provide a value for this parameter if you want to specify additional format information beyond the Clipboard format specified by <ph id="ph1">`cfFormat`</ph>.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>If it is <bpt id="p1">**</bpt>NULL<ept id="p1">**</ept>, the default values are used for the other fields in the <bpt id="p2">**</bpt>FORMATETC<ept id="p2">**</ept> structure.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>The handle of the global memory block containing the data if successful; otherwise <bpt id="p1">**</bpt>NULL<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>FORMATETC<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms682177)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>RegisterClipboardFormat<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms649049)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>COleDataObject::GetNextFormat</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Call this function repeatedly to obtain all the formats available for retrieving data from the item.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>Points to the <bpt id="p1">[</bpt>FORMATETC<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms682177)</ept> structure that receives the format information when the function call returns.</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>Nonzero if another format is available; otherwise 0.</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>After a call to <bpt id="p1">[</bpt>COleDataObject::BeginEnumFormats<ept id="p1">](#coledataobject__beginenumformats)</ept>, the position of the first format supported by this data object is stored.</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>Successive calls to <ph id="ph1">`GetNextFormat`</ph> will enumerate the list of available formats in the data object.</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>Use these functions to list the available formats.</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>To check for the availability of a given format, call <bpt id="p1">[</bpt>COleDataObject::IsDataAvailable<ept id="p1">](#coledataobject__isdataavailable)</ept>.</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>IEnumXXXX::Next<ept id="p1">](https://msdn.microsoft.com/library/ms695273.aspx)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>COleDataObject::IsDataAvailable</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>Call this function to determine if a particular format is available for retrieving data from the OLE item.</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>The Clipboard data format to be used in the structure pointed to by <ph id="ph1">`lpFormatEtc`</ph>.</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>This parameter can be one of the predefined Clipboard formats or the value returned by the native Windows <bpt id="p1">[</bpt>RegisterClipboardFormat<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms649049)</ept> function.</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>Points to a <bpt id="p1">[</bpt>FORMATETC<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms682177)</ept> structure describing the format desired.</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>Provide a value for this parameter only if you want to specify additional format information beyond the Clipboard format specified by <ph id="ph1">`cfFormat`</ph>.</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>If it is <bpt id="p1">**</bpt>NULL<ept id="p1">**</ept>, the default values are used for the other fields in the <bpt id="p2">**</bpt>FORMATETC<ept id="p2">**</ept> structure.</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>Nonzero if data is available in the specified format; otherwise 0.</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>This function is useful before calling <ph id="ph1">`GetData`</ph>, <ph id="ph2">`GetFileData`</ph>, or <ph id="ph3">`GetGlobalData`</ph>.</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>IDataObject::QueryGetData<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms680637)</ept> and <bpt id="p2">[</bpt>FORMATETC<ept id="p2">](http://msdn.microsoft.com/library/windows/desktop/ms682177)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>RegisterClipboardFormat<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms649049)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>See the example for <bpt id="p1">[</bpt>CRichEditView::QueryAcceptData<ept id="p1">](../../mfc/reference/cricheditview-class.md#cricheditview__queryacceptdata)</ept>.</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>COleDataObject::Release</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>Call this function to release ownership of the <bpt id="p1">[</bpt>IDataObject<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms688421)</ept> object that was previously associated with the <ph id="ph1">`COleDataObject`</ph> object.</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`IDataObject`</ph> was associated with the <ph id="ph2">`COleDataObject`</ph> by calling <bpt id="p1">**</bpt>Attach<ept id="p1">**</ept> or <ph id="ph3">`AttachClipboard`</ph> explicitly or by the framework.</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>If the <ph id="ph1">`bAutoRelease`</ph> parameter of <bpt id="p1">**</bpt>Attach<ept id="p1">**</ept> is <bpt id="p2">**</bpt>FALSE<ept id="p2">**</ept>, the <ph id="ph2">`IDataObject`</ph> object will not be released.</source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>In this case, the caller is responsible for releasing the <ph id="ph1">`IDataObject`</ph> by calling <bpt id="p1">[</bpt>IUnknown::Release<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms682317)</ept>.</source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>MFC Sample HIERSVR</source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>MFC Sample OCLIENT</source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>Hierarchy Chart</source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>COleDataSource Class</source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>COleClientItem Class</source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>COleServerItem Class</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>