{"nodes":[{"pos":[12,49],"content":"Compiler Error C3185 | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Compiler Error C3185 | Microsoft Docs","pos":[0,37]}]},{"pos":[598,618],"content":"Compiler Error C3185","linkify":"Compiler Error C3185","nodes":[{"content":"Compiler Error C3185","pos":[0,20]}]},{"content":"'typeid' used on managed or WinRT type 'type', use 'operator' instead","pos":[619,688]},{"pos":[695,863],"content":"You cannot apply the <bpt id=\"p1\">[</bpt>typeid<ept id=\"p1\">](../../cpp/typeid-operator.md)</ept> operator to a managed or WinRT type; use <bpt id=\"p2\">[</bpt>typeid<ept id=\"p2\">](../../windows/typeid-cpp-component-extensions.md)</ept> instead.","source":"You cannot apply the [typeid](../../cpp/typeid-operator.md) operator to a managed or WinRT type; use [typeid](../../windows/typeid-cpp-component-extensions.md) instead."},{"content":"The following sample generates C3185 and shows how to fix it:","pos":[870,931]}],"content":"---\ntitle: \"Compiler Error C3185 | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"error-reference\"\nf1_keywords: \n  - \"C3185\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"C3185\"\nms.assetid: 5bf96279-043c-4981-9d02-b4550071b192\ncaps.latest.revision: 13\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Compiler Error C3185\n'typeid' used on managed or WinRT type 'type', use 'operator' instead  \n  \n You cannot apply the [typeid](../../cpp/typeid-operator.md) operator to a managed or WinRT type; use [typeid](../../windows/typeid-cpp-component-extensions.md) instead.  \n  \n The following sample generates C3185 and shows how to fix it:  \n  \n```  \n// C3185a.cpp  \n// compile with: /clr  \nref class Base {};  \nref class Derived : public Base {};  \n  \nint main() {  \n   Derived ^ pd = gcnew Derived;  \n   Base ^pb = pd;  \n   const type_info & t1 = typeid(pb);   // C3185  \n   System::Type ^ MyType = Base::typeid;   // OK  \n};  \n```  \n"}