{"nodes":[{"pos":[12,45],"content":"&lt;valarray&gt; | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"valarray<ph id=\"ph1\">&amp;gt;</ph> | Microsoft Docs","pos":[4,33],"source":"valarray&gt; | Microsoft Docs"}]},{"content":"valarray","pos":[679,687]},{"content":"Defines the template class valarray and numerous supporting template classes and functions.","pos":[692,783]},{"content":"Syntax","pos":[792,798]},{"content":"Remarks","pos":[847,854]},{"content":"These template classes and functions are permitted unusual latitude in the interest of improved performance.","pos":[858,966]},{"content":"Specifically, any function returning type <bpt id=\"p1\">**</bpt>valarray<ph id=\"ph1\">\\&lt;</ph><ept id=\"p1\">**</ept>T1<bpt id=\"p2\">**</bpt><ph id=\"ph2\">&gt;</ph><ept id=\"p2\">**</ept> may return an object of some other type T2.","pos":[967,1074],"source":" Specifically, any function returning type **valarray\\<**T1**>** may return an object of some other type T2."},{"content":"In that case, any function that accepts one or more arguments of type <bpt id=\"p1\">**</bpt>valarray<ph id=\"ph1\">\\&lt;</ph><ept id=\"p1\">**</ept>T2<bpt id=\"p2\">**</bpt><ph id=\"ph2\">&gt;</ph><ept id=\"p2\">**</ept> must have overloads that accept arbitrary combinations of those arguments, each replaced with an argument of type T2.","pos":[1075,1284],"source":" In that case, any function that accepts one or more arguments of type **valarray\\<**T2**>** must have overloads that accept arbitrary combinations of those arguments, each replaced with an argument of type T2."},{"content":"Functions","pos":[1294,1303]},{"content":"abs","pos":[1325,1328]},{"content":"Operates on the elements of an input valarray, returning a valarray whose elements are equal to the absolute value of the elements of the input valarray.","pos":[1377,1530]},{"content":"acos","pos":[1536,1540]},{"content":"Operates on the elements of an input valarray, returning a valarray whose elements are equal to the arccosine of the elements of the input valarray.","pos":[1590,1738]},{"content":"asin","pos":[1744,1748]},{"content":"Operates on the elements of an input valarray, returning a valarray whose elements are equal to the arcsine of the elements of the input valarray.","pos":[1798,1944]},{"content":"atan","pos":[1950,1954]},{"content":"Operates on the elements of an input valarray, returning a valarray whose elements are equal to the principal value of the arctangent of the elements of the input valarray.","pos":[2004,2176]},{"content":"atan2","pos":[2182,2187]},{"content":"Returns a valarray whose elements are equal to the arctangent of the Cartesian components specified by a combination of constants and elements of valarrays.","pos":[2238,2394]},{"content":"cos","pos":[2400,2403]},{"content":"Operates on the elements of an input valarray, returning a valarray whose elements are equal to the cosine of the elements of the input valarray.","pos":[2452,2597]},{"content":"cosh","pos":[2603,2607]},{"content":"Operates on the elements of an input valarray, returning a valarray whose elements are equal to the hyperbolic cosine of the elements of the input valarray.","pos":[2657,2813]},{"content":"exp","pos":[2819,2822]},{"content":"Operates on the elements of an input valarray, returning a valarray whose elements are equal to the natural exponential of the elements of the input valarray.","pos":[2871,3029]},{"content":"log","pos":[3035,3038]},{"content":"Operates on the elements of an input valarray, returning a valarray whose elements are equal to the natural logarithm of the elements of the input valarray.","pos":[3087,3243]},{"content":"log10","pos":[3249,3254]},{"content":"Operates on the elements of an input valarray, returning a valarray whose elements are equal to the base 10 or common logarithm of the elements of the input valarray.","pos":[3305,3471]},{"content":"pow","pos":[3477,3480]},{"content":"Operates on the elements of input valarrays and constants, returning a valarray whose elements are equal to a base specified either by the elements of an input valarray or a constant raised to an exponent specified either by the elements of an input valarray or a constant.","pos":[3529,3802]},{"content":"sin","pos":[3808,3811]},{"content":"Operates on the elements of an input valarray, returning a valarray whose elements are equal to the sine of the elements of the input valarray.","pos":[3860,4003]},{"content":"sinh","pos":[4009,4013]},{"content":"Operates on the elements of an input valarray, returning a valarray whose elements are equal to the hyperbolic sine of the elements of the input valarray.","pos":[4063,4217]},{"content":"sqrt","pos":[4223,4227]},{"content":"Operates on the elements of an input valarray, returning a valarray whose elements are equal to the square root of the elements of the input valarray.","pos":[4277,4427]},{"content":"swap","pos":[4433,4437]},{"content":"tan","pos":[4493,4496]},{"content":"Operates on the elements of an input valarray, returning a valarray whose elements are equal to the tangent of the elements of the input valarray.","pos":[4545,4691]},{"content":"tanh","pos":[4697,4701]},{"content":"Operates on the elements of an input valarray, returning a valarray whose elements are equal to the hyperbolic tangent of the elements of the input valarray.","pos":[4751,4908]},{"content":"Operators","pos":[4919,4928]},{"content":"operator!=","pos":[4950,4960]},{"content":"Tests whether the corresponding elements of two equally sized valarrays are unequal or whether all the elements of a valarray are unequal a specified value of the valarray's element type.","pos":[5018,5205]},{"content":"operator%","pos":[5211,5220]},{"content":"Obtains the remainder of dividing the corresponding elements of two equally sized valarrays or of dividing a valarray by a specified value of the valarray's element type or of dividing a specified value by a valarray.","pos":[5278,5495]},{"content":"operator&amp;","pos":[5501,5510],"source":"operator&"},{"pos":[5569,5723],"content":"Obtains the bitwise <bpt id=\"p1\">**</bpt>AND<ept id=\"p1\">**</ept> between corresponding elements of two equally sized valarrays or between a valarray and a specified value of the element type.","source":"Obtains the bitwise **AND** between corresponding elements of two equally sized valarrays or between a valarray and a specified value of the element type."},{"content":"operator&amp;&amp;","pos":[5729,5739],"source":"operator&&"},{"pos":[5803,5968],"content":"Obtains the logical <bpt id=\"p1\">**</bpt>AND<ept id=\"p1\">**</ept> between corresponding elements of two equally sized valarrays or between a valarray and a specified value of the valarray's element type.","source":"Obtains the logical **AND** between corresponding elements of two equally sized valarrays or between a valarray and a specified value of the valarray's element type."},{"content":"operator&gt;","pos":[5974,5983],"source":"operator>"},{"content":"Tests whether the elements of one valarray are greater than the elements of an equally sized valarray or whether all the elements of a valarray are greater or less than a specified value of the valarray's element type.","pos":[6041,6259]},{"content":"operator&gt;=","pos":[6265,6275],"source":"operator>="},{"content":"Tests whether the elements of one valarray are greater than or equal to the elements of an equally sized valarray or whether all the elements of a valarray are greater than or equal to or less than or equal to a specified value.","pos":[6336,6564]},{"content":"operator&gt;&gt;","pos":[6570,6580],"source":"operator>>"},{"content":"Right-shifts the bits for each element of a valarray a specified number of positions or by an element-wise amount specified by a second valarray.","pos":[6642,6787]},{"content":"operator&lt;","pos":[6793,6802],"source":"operator<"},{"content":"Tests whether the elements of one valarray are less than the elements of an equally sized valarray or whether all the elements of a valarray are greater or less than a specified value.","pos":[6860,7044]},{"content":"operator&lt;=","pos":[7050,7060],"source":"operator<="},{"content":"Tests whether the elements of one valarray are less than or equal to the elements of an equally sized valarray or whether all the elements of a valarray are greater than or equal to or less than or equal to a specified value.","pos":[7121,7346]},{"content":"operator&lt;&lt;","pos":[7352,7362],"source":"operator<<"},{"content":"Left shifts the bits for each element of a valarray a specified number of positions or by an element-wise amount specified by a second valarray.","pos":[7424,7568]},{"content":"operator*","pos":[7574,7583]},{"content":"Obtains the element-wise product between corresponding elements of two equally sized valarrays or of between a valarray a specified value of the valarray's element type.","pos":[7642,7811]},{"content":"operator+","pos":[7817,7826]},{"content":"Obtains the element-wise sum between corresponding elements of two equally sized valarrays or of between a valarray a specified value of the valarray's element type.","pos":[7884,8049]},{"content":"operator-","pos":[8055,8064]},{"content":"Obtains the element-wise difference between corresponding elements of two equally sized valarrays or of between a valarray a specified value of the valarray's element type.","pos":[8119,8291]},{"content":"operator/","pos":[8297,8306]},{"content":"Obtains the element-wise quotient between corresponding elements of two equally sized valarrays or of between a valarray a specified value of the valarray's element type.","pos":[8361,8531]},{"content":"operator==","pos":[8537,8547]},{"content":"Tests whether the corresponding elements of two equally sized valarrays are equal or whether all the elements of a valarray are equal a specified value of the valarray's element type.","pos":[8607,8790]},{"content":"operator^","pos":[8796,8805]},{"pos":[8863,9024],"content":"Obtains the bitwise exclusive <ph id=\"ph1\">`OR`</ph> between corresponding elements of two equally sized valarrays or between a valarray and a specified value of the element type.","source":"Obtains the bitwise exclusive `OR` between corresponding elements of two equally sized valarrays or between a valarray and a specified value of the element type."},{"content":"operator&amp;#124;","pos":[9030,9044],"source":"operator&#124;"},{"pos":[9101,9252],"content":"Obtains the bitwise <ph id=\"ph1\">`OR`</ph> between corresponding elements of two equally sized valarrays or between a valarray and a specified value of the element type.","source":"Obtains the bitwise `OR` between corresponding elements of two equally sized valarrays or between a valarray and a specified value of the element type."},{"content":"operator&amp;#124;&amp;#124;","pos":[9258,9278],"source":"operator&#124;&#124;"},{"pos":[9336,9498],"content":"Obtains the logical <ph id=\"ph1\">`OR`</ph> between corresponding elements of two equally sized valarrays or between a valarray and a specified value of the valarray's element type.","source":"Obtains the logical `OR` between corresponding elements of two equally sized valarrays or between a valarray and a specified value of the valarray's element type."},{"content":"Classes","pos":[9509,9516]},{"content":"gslice Class","pos":[9538,9550]},{"content":"A utility class to valarray that is used to define multi-dimensional slices of a valarray.","pos":[9589,9679]},{"content":"gslice_array Class","pos":[9685,9703]},{"content":"An internal, auxiliary template class that supports general slice objects by providing operations between subset arrays defined by the general slice of a valarray.","pos":[9748,9911]},{"content":"indirect_array Class","pos":[9917,9937]},{"content":"An internal, auxiliary template class that supports objects that are subsets of valarrays by providing operations between subset arrays defined by specifying a subset of indices of a parent valarray.","pos":[9984,10183]},{"content":"mask_array Class","pos":[10189,10205]},{"content":"An internal, auxiliary template class that supports objects that are subsets of parent valarrays, specified with a Boolean expression, by providing operations between the subset arrays.","pos":[10248,10433]},{"content":"slice Class","pos":[10439,10450]},{"content":"A utility class to valarray that is used to define one-dimensional, vector-like subsets of a valarray.","pos":[10488,10590]},{"content":"slice_array Class","pos":[10596,10613]},{"content":"An internal, auxiliary template class that supports slice objects by providing operations between subset arrays defined by the slice of a valarray.","pos":[10657,10804]},{"content":"valarray Class","pos":[10810,10824]},{"pos":[10865,11090],"content":"The template class describes an object that controls a sequence of elements of type <bpt id=\"p1\">**</bpt>Type<ept id=\"p1\">**</ept> that are stored as an array and designed for performing high-speed mathematical operations, optimized for computational performance.","source":"The template class describes an object that controls a sequence of elements of type **Type** that are stored as an array and designed for performing high-speed mathematical operations, optimized for computational performance."},{"content":"Specializations","pos":[11101,11116]},{"content":"valarray<ph id=\"ph1\">\\&lt;</ph>bool&gt; Class","pos":[11138,11159],"source":"valarray\\<bool> Class"},{"pos":[11205,11296],"content":"A specialized version of the template class valarray<ph id=\"ph1\">\\&lt;</ph><bpt id=\"p1\">**</bpt>Type<ept id=\"p1\">**</ept>&gt; to elements of type <ph id=\"ph2\">`bool`</ph>.","source":"A specialized version of the template class valarray\\<**Type**> to elements of type `bool`."},{"content":"See Also","pos":[11306,11314]},{"content":"Header Files Reference","pos":[11319,11341]},{"content":"Thread Safety in the C++ Standard Library","pos":[11406,11447]}],"content":"---\ntitle: \"&lt;valarray&gt; | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"std.<valarray>\"\n  - \"valarray/std::<valarray>\"\n  - \"std::<valarray>\"\n  - \"<valarray>\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"valarray header\"\nms.assetid: 30835415-21c1-4801-8f24-6bbef7dd8ecd\ncaps.latest.revision: 19\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# &lt;valarray&gt;\nDefines the template class valarray and numerous supporting template classes and functions.  \n  \n## Syntax  \n  \n```  \n#include <valarray>  \n  \n```  \n  \n## Remarks  \n These template classes and functions are permitted unusual latitude in the interest of improved performance. Specifically, any function returning type **valarray\\<**T1**>** may return an object of some other type T2. In that case, any function that accepts one or more arguments of type **valarray\\<**T2**>** must have overloads that accept arbitrary combinations of those arguments, each replaced with an argument of type T2.  \n  \n### Functions  \n  \n|||  \n|-|-|  \n|[abs](../standard-library/valarray-functions.md#abs)|Operates on the elements of an input valarray, returning a valarray whose elements are equal to the absolute value of the elements of the input valarray.|  \n|[acos](../standard-library/valarray-functions.md#acos)|Operates on the elements of an input valarray, returning a valarray whose elements are equal to the arccosine of the elements of the input valarray.|  \n|[asin](../standard-library/valarray-functions.md#asin)|Operates on the elements of an input valarray, returning a valarray whose elements are equal to the arcsine of the elements of the input valarray.|  \n|[atan](../standard-library/valarray-functions.md#atan)|Operates on the elements of an input valarray, returning a valarray whose elements are equal to the principal value of the arctangent of the elements of the input valarray.|  \n|[atan2](../standard-library/valarray-functions.md#atan2)|Returns a valarray whose elements are equal to the arctangent of the Cartesian components specified by a combination of constants and elements of valarrays.|  \n|[cos](../standard-library/valarray-functions.md#cos)|Operates on the elements of an input valarray, returning a valarray whose elements are equal to the cosine of the elements of the input valarray.|  \n|[cosh](../standard-library/valarray-functions.md#cosh)|Operates on the elements of an input valarray, returning a valarray whose elements are equal to the hyperbolic cosine of the elements of the input valarray.|  \n|[exp](../standard-library/valarray-functions.md#exp)|Operates on the elements of an input valarray, returning a valarray whose elements are equal to the natural exponential of the elements of the input valarray.|  \n|[log](../standard-library/valarray-functions.md#log)|Operates on the elements of an input valarray, returning a valarray whose elements are equal to the natural logarithm of the elements of the input valarray.|  \n|[log10](../standard-library/valarray-functions.md#log10)|Operates on the elements of an input valarray, returning a valarray whose elements are equal to the base 10 or common logarithm of the elements of the input valarray.|  \n|[pow](../standard-library/valarray-functions.md#pow)|Operates on the elements of input valarrays and constants, returning a valarray whose elements are equal to a base specified either by the elements of an input valarray or a constant raised to an exponent specified either by the elements of an input valarray or a constant.|  \n|[sin](../standard-library/valarray-functions.md#sin)|Operates on the elements of an input valarray, returning a valarray whose elements are equal to the sine of the elements of the input valarray.|  \n|[sinh](../standard-library/valarray-functions.md#sinh)|Operates on the elements of an input valarray, returning a valarray whose elements are equal to the hyperbolic sine of the elements of the input valarray.|  \n|[sqrt](../standard-library/valarray-functions.md#sqrt)|Operates on the elements of an input valarray, returning a valarray whose elements are equal to the square root of the elements of the input valarray.|  \n|[swap](../standard-library/valarray-functions.md#swap)||  \n|[tan](../standard-library/valarray-functions.md#tan)|Operates on the elements of an input valarray, returning a valarray whose elements are equal to the tangent of the elements of the input valarray.|  \n|[tanh](../standard-library/valarray-functions.md#tanh)|Operates on the elements of an input valarray, returning a valarray whose elements are equal to the hyperbolic tangent of the elements of the input valarray.|  \n  \n### Operators  \n  \n|||  \n|-|-|  \n|[operator!=](../standard-library/valarray-operators.md#operator_neq)|Tests whether the corresponding elements of two equally sized valarrays are unequal or whether all the elements of a valarray are unequal a specified value of the valarray's element type.|  \n|[operator%](../standard-library/valarray-operators.md#operator_mod)|Obtains the remainder of dividing the corresponding elements of two equally sized valarrays or of dividing a valarray by a specified value of the valarray's element type or of dividing a specified value by a valarray.|  \n|[operator&](../standard-library/valarray-operators.md#operator_amp_)|Obtains the bitwise **AND** between corresponding elements of two equally sized valarrays or between a valarray and a specified value of the element type.|  \n|[operator&&](../standard-library/valarray-operators.md#operator_amp__amp_)|Obtains the logical **AND** between corresponding elements of two equally sized valarrays or between a valarray and a specified value of the valarray's element type.|  \n|[operator>](../standard-library/valarray-operators.md#operator_gt_)|Tests whether the elements of one valarray are greater than the elements of an equally sized valarray or whether all the elements of a valarray are greater or less than a specified value of the valarray's element type.|  \n|[operator>=](../standard-library/valarray-operators.md#operator_gt__eq)|Tests whether the elements of one valarray are greater than or equal to the elements of an equally sized valarray or whether all the elements of a valarray are greater than or equal to or less than or equal to a specified value.|  \n|[operator>>](../standard-library/valarray-operators.md#operator_gt__gt_)|Right-shifts the bits for each element of a valarray a specified number of positions or by an element-wise amount specified by a second valarray.|  \n|[operator<](../standard-library/valarray-operators.md#operator_lt_)|Tests whether the elements of one valarray are less than the elements of an equally sized valarray or whether all the elements of a valarray are greater or less than a specified value.|  \n|[operator<=](../standard-library/valarray-operators.md#operator_lt__eq)|Tests whether the elements of one valarray are less than or equal to the elements of an equally sized valarray or whether all the elements of a valarray are greater than or equal to or less than or equal to a specified value.|  \n|[operator<<](../standard-library/valarray-operators.md#operator_lt__lt_)|Left shifts the bits for each element of a valarray a specified number of positions or by an element-wise amount specified by a second valarray.|  \n|[operator*](../standard-library/valarray-operators.md#operator_star)|Obtains the element-wise product between corresponding elements of two equally sized valarrays or of between a valarray a specified value of the valarray's element type.|  \n|[operator+](../standard-library/valarray-operators.md#operator_add)|Obtains the element-wise sum between corresponding elements of two equally sized valarrays or of between a valarray a specified value of the valarray's element type.|  \n|[operator-](../standard-library/valarray-operators.md#operator-)|Obtains the element-wise difference between corresponding elements of two equally sized valarrays or of between a valarray a specified value of the valarray's element type.|  \n|[operator/](../standard-library/valarray-operators.md#operator_)|Obtains the element-wise quotient between corresponding elements of two equally sized valarrays or of between a valarray a specified value of the valarray's element type.|  \n|[operator==](../standard-library/valarray-operators.md#operator_eq_eq)|Tests whether the corresponding elements of two equally sized valarrays are equal or whether all the elements of a valarray are equal a specified value of the valarray's element type.|  \n|[operator^](../standard-library/valarray-operators.md#operator_xor)|Obtains the bitwise exclusive `OR` between corresponding elements of two equally sized valarrays or between a valarray and a specified value of the element type.|  \n|[operator&#124;](../standard-library/valarray-operators.md#operator_or)|Obtains the bitwise `OR` between corresponding elements of two equally sized valarrays or between a valarray and a specified value of the element type.|  \n|[operator&#124;&#124;](../standard-library/valarray-operators.md#operator_lor)|Obtains the logical `OR` between corresponding elements of two equally sized valarrays or between a valarray and a specified value of the valarray's element type.|  \n  \n### Classes  \n  \n|||  \n|-|-|  \n|[gslice Class](../standard-library/gslice-class.md)|A utility class to valarray that is used to define multi-dimensional slices of a valarray.|  \n|[gslice_array Class](../standard-library/gslice-array-class.md)|An internal, auxiliary template class that supports general slice objects by providing operations between subset arrays defined by the general slice of a valarray.|  \n|[indirect_array Class](../standard-library/indirect-array-class.md)|An internal, auxiliary template class that supports objects that are subsets of valarrays by providing operations between subset arrays defined by specifying a subset of indices of a parent valarray.|  \n|[mask_array Class](../standard-library/mask-array-class.md)|An internal, auxiliary template class that supports objects that are subsets of parent valarrays, specified with a Boolean expression, by providing operations between the subset arrays.|  \n|[slice Class](../standard-library/slice-class.md)|A utility class to valarray that is used to define one-dimensional, vector-like subsets of a valarray.|  \n|[slice_array Class](../standard-library/slice-array-class.md)|An internal, auxiliary template class that supports slice objects by providing operations between subset arrays defined by the slice of a valarray.|  \n|[valarray Class](../standard-library/valarray-class.md)|The template class describes an object that controls a sequence of elements of type **Type** that are stored as an array and designed for performing high-speed mathematical operations, optimized for computational performance.|  \n  \n### Specializations  \n  \n|||  \n|-|-|  \n|[valarray\\<bool> Class](../standard-library/valarray-bool-class.md)|A specialized version of the template class valarray\\<**Type**> to elements of type `bool`.|  \n  \n## See Also  \n [Header Files Reference](../standard-library/cpp-standard-library-header-files.md)   \n [Thread Safety in the C++ Standard Library](../standard-library/thread-safety-in-the-cpp-standard-library.md)\n\n\n\n"}