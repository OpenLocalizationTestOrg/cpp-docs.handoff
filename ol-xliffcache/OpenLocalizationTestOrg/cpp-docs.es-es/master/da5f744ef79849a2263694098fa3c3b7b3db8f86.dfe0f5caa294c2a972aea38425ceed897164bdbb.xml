{"nodes":[{"pos":[12,49],"content":"Compiler Error C2975 | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Compiler Error C2975 | Microsoft Docs","pos":[0,37]}]},{"pos":[598,618],"content":"Compiler Error C2975","linkify":"Compiler Error C2975","nodes":[{"content":"Compiler Error C2975","pos":[0,20]}]},{"content":"'arg' : invalid template argument for 'type', expected compile-time constant expression","pos":[619,706]},{"content":"The template argument does not match the template declaration; a constant expression should appear within the angle brackets.","pos":[713,838]},{"content":"Variables are not allowed as template actual arguments.","pos":[839,894]},{"content":"Check the template definition to find the correct types.","pos":[895,951]},{"content":"The following sample generates C2975:","pos":[958,995]},{"content":"C2975 will also occur when you use __LINE<ph id=\"ph1\">\\_</ph><ph id=\"ph2\">\\_</ph> as a compile-time constant with <bpt id=\"p1\">[</bpt>/ZI<ept id=\"p1\">](../../build/reference/z7-zi-zi-debug-information-format.md)</ept>.","pos":[1160,1304],"source":"C2975 will also occur when you use __LINE\\_\\_ as a compile-time constant with [/ZI](../../build/reference/z7-zi-zi-debug-information-format.md)."},{"content":"One solution would be to compile with <bpt id=\"p1\">[</bpt>/Zi<ept id=\"p1\">](../../build/reference/z7-zi-zi-debug-information-format.md)</ept> instead of <bpt id=\"p2\">**</bpt>/ZI<ept id=\"p2\">**</ept>.","pos":[1305,1428],"source":" One solution would be to compile with [/Zi](../../build/reference/z7-zi-zi-debug-information-format.md) instead of **/ZI**."}],"content":"---\ntitle: \"Compiler Error C2975 | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"error-reference\"\nf1_keywords: \n  - \"C2975\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"C2975\"\nms.assetid: 526f6b9d-6c76-4c12-9252-1b1d7c1e06c7\ncaps.latest.revision: 10\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Compiler Error C2975\n'arg' : invalid template argument for 'type', expected compile-time constant expression  \n  \n The template argument does not match the template declaration; a constant expression should appear within the angle brackets. Variables are not allowed as template actual arguments. Check the template definition to find the correct types.  \n  \n The following sample generates C2975:  \n  \n```  \n// C2975.cpp  \ntemplate<int I>  \nclass X {};  \n  \nint main() {  \n   int i = 4, j = 2;  \n   X<i + j> x1;   // C2975  \n   X<6> x2;   // OK  \n}  \n```  \n  \n C2975 will also occur when you use __LINE\\_\\_ as a compile-time constant with [/ZI](../../build/reference/z7-zi-zi-debug-information-format.md). One solution would be to compile with [/Zi](../../build/reference/z7-zi-zi-debug-information-format.md) instead of **/ZI**.  \n  \n```  \n// C2975b.cpp  \n// compile with: /ZI  \n// processor: x86  \ntemplate<long line>   \nvoid test(void) {}  \n  \nint main() {  \n   test<__LINE__>();   // C2975  \n}  \n```"}