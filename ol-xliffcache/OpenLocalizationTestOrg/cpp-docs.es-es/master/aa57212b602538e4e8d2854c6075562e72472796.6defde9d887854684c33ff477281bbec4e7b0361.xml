{"nodes":[{"pos":[12,41],"content":"ATL Typedefs | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"ATL Typedefs | Microsoft Docs","pos":[0,29]}]},{"pos":[603,615],"content":"ATL Typedefs","linkify":"ATL Typedefs","nodes":[{"content":"ATL Typedefs","pos":[0,12]}]},{"content":"The Active Template Library includes the following typedefs.","pos":[616,676]},{"pos":[697,734],"content":"<bpt id=\"p1\">[</bpt>_ATL_BASE_MODULE<ept id=\"p1\">](#_atl_base_module)</ept>","source":"[_ATL_BASE_MODULE](#_atl_base_module)"},{"pos":[735,838],"content":"Defined as a typedef based on <bpt id=\"p1\">[</bpt>_ATL_BASE_MODULE70<ept id=\"p1\">](../../atl/reference/atl-base-module70-structure.md)</ept>.","source":"Defined as a typedef based on [_ATL_BASE_MODULE70](../../atl/reference/atl-base-module70-structure.md)."},{"pos":[843,878],"content":"<bpt id=\"p1\">[</bpt>_ATL_COM_MODULE<ept id=\"p1\">](#_atl_com_module)</ept>","source":"[_ATL_COM_MODULE](#_atl_com_module)"},{"pos":[879,980],"content":"Defined as a typedef based on <bpt id=\"p1\">[</bpt>_ATL_COM_MODULE70<ept id=\"p1\">](../../atl/reference/atl-com-module70-structure.md)</ept>.","source":"Defined as a typedef based on [_ATL_COM_MODULE70](../../atl/reference/atl-com-module70-structure.md)."},{"pos":[985,1012],"content":"<bpt id=\"p1\">[</bpt>_ATL_MODULE<ept id=\"p1\">](#_atl_module)</ept>","source":"[_ATL_MODULE](#_atl_module)"},{"pos":[1013,1106],"content":"Defined as a typedef based on <bpt id=\"p1\">[</bpt>_ATL_MODULE70<ept id=\"p1\">](../../atl/reference/atl-module70-structure.md)</ept>.","source":"Defined as a typedef based on [_ATL_MODULE70](../../atl/reference/atl-module70-structure.md)."},{"pos":[1111,1146],"content":"<bpt id=\"p1\">[</bpt>_ATL_WIN_MODULE<ept id=\"p1\">](#_atl_win_module)</ept>","source":"[_ATL_WIN_MODULE](#_atl_win_module)"},{"pos":[1147,1247],"content":"Defined as a typedef based on <bpt id=\"p1\">[</bpt>_ATL_WIN_MODULE70<ept id=\"p1\">](../../atl/reference/atl-win-module70-structure.md)</ept>","source":"Defined as a typedef based on [_ATL_WIN_MODULE70](../../atl/reference/atl-win-module70-structure.md)"},{"pos":[1252,1281],"content":"<bpt id=\"p1\">[</bpt>ATL_URL_PORT<ept id=\"p1\">](#atl_url_port)</ept>","source":"[ATL_URL_PORT](#atl_url_port)"},{"pos":[1282,1370],"content":"The type used by <bpt id=\"p1\">[</bpt>CUrl<ept id=\"p1\">](../../atl/reference/curl-class.md)</ept> for specifying a port number.","source":"The type used by [CUrl](../../atl/reference/curl-class.md) for specifying a port number."},{"pos":[1375,1416],"content":"<bpt id=\"p1\">[</bpt>CComDispatchDriver<ept id=\"p1\">](#ccomdispatchdriver)</ept>","source":"[CComDispatchDriver](#ccomdispatchdriver)"},{"content":"This class manages COM interface pointers.","pos":[1417,1459]},{"pos":[1464,1513],"content":"<bpt id=\"p1\">[</bpt>CComGlobalsThreadModel<ept id=\"p1\">](#ccomglobalsthreadmodel)</ept>","source":"[CComGlobalsThreadModel](#ccomglobalsthreadmodel)"},{"content":"Calls the appropriate thread model methods, regardless of the threading model being used.","pos":[1514,1603]},{"pos":[1608,1655],"content":"<bpt id=\"p1\">[</bpt>CComObjectThreadModel<ept id=\"p1\">](#ccomobjectthreadmodel)</ept>","source":"[CComObjectThreadModel](#ccomobjectthreadmodel)"},{"content":"Calls the appropriate thread model methods, regardless of the threading model being used.","pos":[1656,1745]},{"pos":[1750,1787],"content":"<bpt id=\"p1\">[</bpt>CContainedWindow<ept id=\"p1\">](#ccontainedwindow)</ept>","source":"[CContainedWindow](#ccontainedwindow)"},{"pos":[1788,1844],"content":"This class is a specialization of <bpt id=\"p1\">**</bpt>CContainedWindowT.<ept id=\"p1\">**</ept>","source":"This class is a specialization of **CContainedWindowT.**"},{"pos":[1849,1864],"content":"<bpt id=\"p1\">[</bpt>CPath<ept id=\"p1\">](#cpath)</ept>","source":"[CPath](#cpath)"},{"pos":[1865,1947],"content":"A specialization of <bpt id=\"p1\">[</bpt>CPathT<ept id=\"p1\">](../../atl/reference/cpatht-class.md)</ept> using <ph id=\"ph1\">`CString`</ph>.","source":"A specialization of [CPathT](../../atl/reference/cpatht-class.md) using `CString`."},{"pos":[1952,1969],"content":"<bpt id=\"p1\">[</bpt>CPathA<ept id=\"p1\">](#cpatha)</ept>","source":"[CPathA](#cpatha)"},{"pos":[1970,2053],"content":"A specialization of <bpt id=\"p1\">[</bpt>CPathT<ept id=\"p1\">](../../atl/reference/cpatht-class.md)</ept> using <ph id=\"ph1\">`CStringA`</ph>.","source":"A specialization of [CPathT](../../atl/reference/cpatht-class.md) using `CStringA`."},{"pos":[2058,2075],"content":"<bpt id=\"p1\">[</bpt>CPathW<ept id=\"p1\">](#cpathw)</ept>","source":"[CPathW](#cpathw)"},{"pos":[2076,2159],"content":"A specialization of <bpt id=\"p1\">[</bpt>CPathT<ept id=\"p1\">](../../atl/reference/cpatht-class.md)</ept> using <ph id=\"ph1\">`CStringW`</ph>.","source":"A specialization of [CPathT](../../atl/reference/cpatht-class.md) using `CStringW`."},{"pos":[2164,2199],"content":"<bpt id=\"p1\">[</bpt>CSimpleValArray<ept id=\"p1\">](#csimplevalarray)</ept>","source":"[CSimpleValArray](#csimplevalarray)"},{"content":"Represents an array for storing simple types.","pos":[2200,2245]},{"pos":[2250,2293],"content":"<bpt id=\"p1\">[</bpt>DefaultThreadTraits<ept id=\"p1\">](#defaultthreadtraits)</ept>","source":"[DefaultThreadTraits](#defaultthreadtraits)"},{"content":"The default thread traits class.","pos":[2294,2326]},{"pos":[2331,2348],"content":"<bpt id=\"p1\">[</bpt>LPCURL<ept id=\"p1\">](#lpcurl)</ept>","source":"[LPCURL](#lpcurl)"},{"pos":[2349,2422],"content":"A pointer to a constant <bpt id=\"p1\">[</bpt>CUrl<ept id=\"p1\">](../../atl/reference/curl-class.md)</ept> object.","source":"A pointer to a constant [CUrl](../../atl/reference/curl-class.md) object."},{"pos":[2427,2442],"content":"<bpt id=\"p1\">[</bpt>LPURL<ept id=\"p1\">](#lpurl)</ept>","source":"[LPURL](#lpurl)"},{"pos":[2443,2507],"content":"A pointer to a <bpt id=\"p1\">[</bpt>CUrl<ept id=\"p1\">](../../atl/reference/curl-class.md)</ept> object.","source":"A pointer to a [CUrl](../../atl/reference/curl-class.md) object."},{"pos":[2518,2567],"content":"<bpt id=\"p1\">&lt;a name=\"_atl_base_module\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  _ATL_BASE_MODULE","linkify":"<a name=\"_atl_base_module\"></a>  _ATL_BASE_MODULE","source":"<a name=\"_atl_base_module\"></a>  _ATL_BASE_MODULE"},{"content":"Defined as a typedef based on _ATL_BASE_MODULE70.","pos":[2571,2620]},{"pos":[2699,2706],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Used in every ATL project.","pos":[2710,2736]},{"content":"Based on <bpt id=\"p1\">[</bpt>_ATL_BASE_MODULE70<ept id=\"p1\">](../../atl/reference/atl-base-module70-structure.md)</ept>.","pos":[2737,2819],"source":" Based on [_ATL_BASE_MODULE70](../../atl/reference/atl-base-module70-structure.md)."},{"content":"Classes that are part of the ATL 7.0 Module Classes derive from the _ATL_BASE_MODULE structure.","pos":[2826,2921]},{"content":"For more information on ATL Module Classes, refer to <bpt id=\"p1\">[</bpt>COM Modules Classes<ept id=\"p1\">](../../atl/com-modules-classes.md)</ept>.","pos":[2923,3032],"source":"  For more information on ATL Module Classes, refer to [COM Modules Classes](../../atl/com-modules-classes.md)."},{"pos":[3042,3089],"content":"<bpt id=\"p1\">&lt;a name=\"_atl_com_module\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  _ATL_COM_MODULE","linkify":"<a name=\"_atl_com_module\"></a>  _ATL_COM_MODULE","source":"<a name=\"_atl_com_module\"></a>  _ATL_COM_MODULE"},{"content":"Defined as a typedef based on _ATL_COM_MODULE70.","pos":[3093,3141]},{"pos":[3218,3225],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Used by ATL projects which use COM features.","pos":[3229,3273]},{"content":"Based on <bpt id=\"p1\">[</bpt>_ATL_COM_MODULE70<ept id=\"p1\">](../../atl/reference/atl-com-module70-structure.md)</ept>.","pos":[3274,3354],"source":" Based on [_ATL_COM_MODULE70](../../atl/reference/atl-com-module70-structure.md)."},{"pos":[3364,3403],"content":"<bpt id=\"p1\">&lt;a name=\"_atl_module\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  _ATL_MODULE","linkify":"<a name=\"_atl_module\"></a>  _ATL_MODULE","source":"<a name=\"_atl_module\"></a>  _ATL_MODULE"},{"content":"Defined as a typedef based on _ATL_MODULE70.","pos":[3407,3451]},{"pos":[3520,3527],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[3531,3603],"content":"Based on <bpt id=\"p1\">[</bpt>_ATL_MODULE70<ept id=\"p1\">](../../atl/reference/atl-module70-structure.md)</ept>.","source":"Based on [_ATL_MODULE70](../../atl/reference/atl-module70-structure.md)."},{"pos":[3613,3660],"content":"<bpt id=\"p1\">&lt;a name=\"_atl_win_module\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  _ATL_WIN_MODULE","linkify":"<a name=\"_atl_win_module\"></a>  _ATL_WIN_MODULE","source":"<a name=\"_atl_win_module\"></a>  _ATL_WIN_MODULE"},{"content":"Defined as a typedef based on _ATL_WIN_MODULE70.","pos":[3664,3712]},{"pos":[3789,3796],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Used by any ATL projects which use windowing features.","pos":[3800,3854]},{"content":"Based on <bpt id=\"p1\">[</bpt>_ATL_WIN_MODULE70<ept id=\"p1\">](../../atl/reference/atl-win-module70-structure.md)</ept>.","pos":[3855,3935],"source":" Based on [_ATL_WIN_MODULE70](../../atl/reference/atl-win-module70-structure.md)."},{"pos":[3945,3986],"content":"<bpt id=\"p1\">&lt;a name=\"atl_url_port\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  ATL_URL_PORT","linkify":"<a name=\"atl_url_port\"></a>  ATL_URL_PORT","source":"<a name=\"atl_url_port\"></a>  ATL_URL_PORT"},{"pos":[3990,4058],"content":"The type used by <bpt id=\"p1\">[</bpt>CUrl<ept id=\"p1\">](curl-class.md)</ept> for specifying a port number.","source":"The type used by [CUrl](curl-class.md) for specifying a port number."},{"pos":[4103,4156],"content":"<bpt id=\"p1\">&lt;a name=\"ccomdispatchdriver\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CComDispatchDriver","linkify":"<a name=\"ccomdispatchdriver\"></a>  CComDispatchDriver","source":"<a name=\"ccomdispatchdriver\"></a>  CComDispatchDriver"},{"content":"This class manages COM interface pointers.","pos":[4160,4202]},{"pos":[4302,4363],"content":"<bpt id=\"p1\">&lt;a name=\"ccomglobalsthreadmodel\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CComGlobalsThreadModel","linkify":"<a name=\"ccomglobalsthreadmodel\"></a>  CComGlobalsThreadModel","source":"<a name=\"ccomglobalsthreadmodel\"></a>  CComGlobalsThreadModel"},{"content":"Calls the appropriate thread model methods, regardless of the threading model being used.","pos":[4367,4456]},{"pos":[4835,4842],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Depending on the threading model used by your application, the <ph id=\"ph1\">`typedef`</ph> name <ph id=\"ph2\">`CComGlobalsThreadModel`</ph> references either <bpt id=\"p1\">[</bpt>CComSingleThreadModel<ept id=\"p1\">](../../atl/reference/ccomsinglethreadmodel-class.md)</ept> or <bpt id=\"p2\">[</bpt>CComMultiThreadModel<ept id=\"p2\">](../../atl/reference/ccommultithreadmodel-class.md)</ept>.","pos":[4846,5120],"source":"Depending on the threading model used by your application, the `typedef` name `CComGlobalsThreadModel` references either [CComSingleThreadModel](../../atl/reference/ccomsinglethreadmodel-class.md) or [CComMultiThreadModel](../../atl/reference/ccommultithreadmodel-class.md)."},{"content":"These classes provide additional <ph id=\"ph1\">`typedef`</ph> names to reference a critical section class.","pos":[5121,5208],"source":" These classes provide additional `typedef` names to reference a critical section class."},{"pos":[5216,5358],"content":"[!NOTE]\n`CComGlobalsThreadModel` does not reference class [CComMultiThreadModelNoCS](../../atl/reference/ccommultithreadmodelnocs-class.md).","leadings":["","> "],"nodes":[{"content":"<ph id=\"ph1\">`CComGlobalsThreadModel`</ph> does not reference class <bpt id=\"p1\">[</bpt>CComMultiThreadModelNoCS<ept id=\"p1\">](../../atl/reference/ccommultithreadmodelnocs-class.md)</ept>.","pos":[8,140],"source":"`CComGlobalsThreadModel` does not reference class [CComMultiThreadModelNoCS](../../atl/reference/ccommultithreadmodelnocs-class.md)."}]},{"content":"Using <ph id=\"ph1\">`CComGlobalsThreadModel`</ph> frees you from specifying a particular threading model class.","pos":[5365,5457],"source":"Using `CComGlobalsThreadModel` frees you from specifying a particular threading model class."},{"content":"Regardless of the threading model being used, the appropriate methods will be called.","pos":[5458,5543]},{"content":"In addition to <ph id=\"ph1\">`CComGlobalsThreadModel`</ph>, ATL provides the <ph id=\"ph2\">`typedef`</ph> name <bpt id=\"p1\">[</bpt>CComObjectThreadModel<ept id=\"p1\">](#ccomobjectthreadmodel)</ept>.","pos":[5550,5671],"source":"In addition to `CComGlobalsThreadModel`, ATL provides the `typedef` name [CComObjectThreadModel](#ccomobjectthreadmodel)."},{"content":"The class referenced by each <ph id=\"ph1\">`typedef`</ph> depends on the threading model used, as shown in the following table:","pos":[5672,5780],"source":" The class referenced by each `typedef` depends on the threading model used, as shown in the following table:"},{"content":"typedef","pos":[5787,5794]},{"content":"Single threading","pos":[5795,5811]},{"content":"Apartment threading","pos":[5812,5831]},{"content":"Free threading","pos":[5832,5846]},{"content":"S","pos":[5963,5964]},{"content":"S","pos":[5965,5966]},{"content":"M","pos":[5967,5968]},{"content":"S","pos":[5998,5999]},{"content":"M","pos":[6000,6001]},{"content":"M","pos":[6002,6003]},{"pos":[6011,6064],"content":"S= <ph id=\"ph1\">`CComSingleThreadModel`</ph>; M= <ph id=\"ph2\">`CComMultiThreadModel`</ph>","source":"S= `CComSingleThreadModel`; M= `CComMultiThreadModel`"},{"content":"Use <ph id=\"ph1\">`CComObjectThreadModel`</ph> within a single object class.","pos":[6071,6128],"source":"Use `CComObjectThreadModel` within a single object class."},{"content":"Use <ph id=\"ph1\">`CComGlobalsThreadModel`</ph> in an object that is globally available to your program, or when you want to protect module resources across multiple threads.","pos":[6129,6284],"source":" Use `CComGlobalsThreadModel` in an object that is globally available to your program, or when you want to protect module resources across multiple threads."},{"pos":[6294,6353],"content":"<bpt id=\"p1\">&lt;a name=\"ccomobjectthreadmodel\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CComObjectThreadModel","linkify":"<a name=\"ccomobjectthreadmodel\"></a>  CComObjectThreadModel","source":"<a name=\"ccomobjectthreadmodel\"></a>  CComObjectThreadModel"},{"content":"Calls the appropriate thread model methods, regardless of the threading model being used.","pos":[6357,6446]},{"pos":[6823,6830],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Depending on the threading model used by your application, the <ph id=\"ph1\">`typedef`</ph> name <ph id=\"ph2\">`CComObjectThreadModel`</ph> references either <bpt id=\"p1\">[</bpt>CComSingleThreadModel<ept id=\"p1\">](../../atl/reference/ccomsinglethreadmodel-class.md)</ept> or <bpt id=\"p2\">[</bpt>CComMultiThreadModel<ept id=\"p2\">](../../atl/reference/ccommultithreadmodel-class.md)</ept>.","pos":[6834,7107],"source":"Depending on the threading model used by your application, the `typedef` name `CComObjectThreadModel` references either [CComSingleThreadModel](../../atl/reference/ccomsinglethreadmodel-class.md) or [CComMultiThreadModel](../../atl/reference/ccommultithreadmodel-class.md)."},{"content":"These classes provide additional <ph id=\"ph1\">`typedef`</ph> names to reference a critical section class.","pos":[7108,7195],"source":" These classes provide additional `typedef` names to reference a critical section class."},{"pos":[7203,7344],"content":"[!NOTE]\n`CComObjectThreadModel` does not reference class [CComMultiThreadModelNoCS](../../atl/reference/ccommultithreadmodelnocs-class.md).","leadings":["","> "],"nodes":[{"content":"<ph id=\"ph1\">`CComObjectThreadModel`</ph> does not reference class <bpt id=\"p1\">[</bpt>CComMultiThreadModelNoCS<ept id=\"p1\">](../../atl/reference/ccommultithreadmodelnocs-class.md)</ept>.","pos":[8,139],"source":"`CComObjectThreadModel` does not reference class [CComMultiThreadModelNoCS](../../atl/reference/ccommultithreadmodelnocs-class.md)."}]},{"content":"Using <ph id=\"ph1\">`CComObjectThreadModel`</ph> frees you from specifying a particular threading model class.","pos":[7351,7442],"source":"Using `CComObjectThreadModel` frees you from specifying a particular threading model class."},{"content":"Regardless of the threading model being used, the appropriate methods will be called.","pos":[7443,7528]},{"content":"In addition to <ph id=\"ph1\">`CComObjectThreadModel`</ph>, ATL provides the <ph id=\"ph2\">`typedef`</ph> name <bpt id=\"p1\">[</bpt>CComGlobalsThreadModel<ept id=\"p1\">](#ccomglobalsthreadmodel)</ept>.","pos":[7535,7657],"source":"In addition to `CComObjectThreadModel`, ATL provides the `typedef` name [CComGlobalsThreadModel](#ccomglobalsthreadmodel)."},{"content":"The class referenced by each <ph id=\"ph1\">`typedef`</ph> depends on the threading model used, as shown in the following table:","pos":[7658,7766],"source":" The class referenced by each `typedef` depends on the threading model used, as shown in the following table:"},{"content":"typedef","pos":[7773,7780]},{"content":"Single threading","pos":[7781,7797]},{"content":"Apartment threading","pos":[7798,7817]},{"content":"Free threading","pos":[7818,7832]},{"content":"S","pos":[7949,7950]},{"content":"S","pos":[7951,7952]},{"content":"M","pos":[7953,7954]},{"content":"S","pos":[7984,7985]},{"content":"M","pos":[7986,7987]},{"content":"M","pos":[7988,7989]},{"pos":[7997,8050],"content":"S= <ph id=\"ph1\">`CComSingleThreadModel`</ph>; M= <ph id=\"ph2\">`CComMultiThreadModel`</ph>","source":"S= `CComSingleThreadModel`; M= `CComMultiThreadModel`"},{"content":"Use <ph id=\"ph1\">`CComObjectThreadModel`</ph> within a single object class.","pos":[8057,8114],"source":"Use `CComObjectThreadModel` within a single object class."},{"content":"Use <ph id=\"ph1\">`CComGlobalsThreadModel`</ph> in an object that is either globally available to your program, or when you want to protect module resources across multiple threads.","pos":[8115,8277],"source":" Use `CComGlobalsThreadModel` in an object that is either globally available to your program, or when you want to protect module resources across multiple threads."},{"pos":[8287,8336],"content":"<bpt id=\"p1\">&lt;a name=\"ccontainedwindow\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CContainedWindow","linkify":"<a name=\"ccontainedwindow\"></a>  CContainedWindow","source":"<a name=\"ccontainedwindow\"></a>  CContainedWindow"},{"pos":[8340,8396],"content":"This class is a specialization of <bpt id=\"p1\">**</bpt>CContainedWindowT.<ept id=\"p1\">**</ept>","source":"This class is a specialization of **CContainedWindowT.**"},{"pos":[8478,8485],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"<ph id=\"ph1\">`CContainedWindow`</ph> is a specialization of <bpt id=\"p1\">[</bpt>CContainedWindowT<ept id=\"p1\">](../../atl/reference/ccontainedwindowt-class.md)</ept>.","pos":[8489,8599],"source":"`CContainedWindow` is a specialization of [CContainedWindowT](../../atl/reference/ccontainedwindowt-class.md)."},{"content":"If you want to change the base class or traits, use <ph id=\"ph1\">`CContainedWindowT`</ph> directly.","pos":[8600,8681],"source":" If you want to change the base class or traits, use `CContainedWindowT` directly."},{"pos":[8691,8718],"content":"<bpt id=\"p1\">&lt;a name=\"cpath\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CPath","linkify":"<a name=\"cpath\"></a>  CPath","source":"<a name=\"cpath\"></a>  CPath"},{"pos":[8722,8804],"content":"A specialization of <bpt id=\"p1\">[</bpt>CPathT<ept id=\"p1\">](../../atl/reference/cpatht-class.md)</ept> using <ph id=\"ph1\">`CString`</ph>.","source":"A specialization of [CPathT](../../atl/reference/cpatht-class.md) using `CString`."},{"pos":[8864,8893],"content":"<bpt id=\"p1\">&lt;a name=\"cpatha\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CPathA","linkify":"<a name=\"cpatha\"></a>  CPathA","source":"<a name=\"cpatha\"></a>  CPathA"},{"pos":[8897,8980],"content":"A specialization of <bpt id=\"p1\">[</bpt>CPathT<ept id=\"p1\">](../../atl/reference/cpatht-class.md)</ept> using <ph id=\"ph1\">`CStringA`</ph>.","source":"A specialization of [CPathT](../../atl/reference/cpatht-class.md) using `CStringA`."},{"pos":[9042,9071],"content":"<bpt id=\"p1\">&lt;a name=\"cpathw\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CPathW","linkify":"<a name=\"cpathw\"></a>  CPathW","source":"<a name=\"cpathw\"></a>  CPathW"},{"pos":[9075,9158],"content":"A specialization of <bpt id=\"p1\">[</bpt>CPathT<ept id=\"p1\">](../../atl/reference/cpatht-class.md)</ept> using <ph id=\"ph1\">`CStringW`</ph>.","source":"A specialization of [CPathT](../../atl/reference/cpatht-class.md) using `CStringW`."},{"pos":[9225,9272],"content":"<bpt id=\"p1\">&lt;a name=\"csimplevalarray\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CSimpleValArray","linkify":"<a name=\"csimplevalarray\"></a>  CSimpleValArray","source":"<a name=\"csimplevalarray\"></a>  CSimpleValArray"},{"content":"Represents an array for storing simple types.","pos":[9276,9321]},{"pos":[9387,9394],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"<ph id=\"ph1\">`CSimpleValArray`</ph> is provided for creating and managing arrays containing simple data types.","pos":[9398,9490],"source":"`CSimpleValArray` is provided for creating and managing arrays containing simple data types."},{"content":"It is a simple #define of <bpt id=\"p1\">[</bpt>CSimpleArray<ept id=\"p1\">](../../atl/reference/csimplearray-class.md)</ept>.","pos":[9491,9575],"source":" It is a simple #define of [CSimpleArray](../../atl/reference/csimplearray-class.md)."},{"pos":[9585,9614],"content":"<bpt id=\"p1\">&lt;a name=\"lpcurl\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  LPCURL","linkify":"<a name=\"lpcurl\"></a>  LPCURL","source":"<a name=\"lpcurl\"></a>  LPCURL"},{"pos":[9618,9691],"content":"A pointer to a constant <bpt id=\"p1\">[</bpt>CUrl<ept id=\"p1\">](../../atl/reference/curl-class.md)</ept> object.","source":"A pointer to a constant [CUrl](../../atl/reference/curl-class.md) object."},{"pos":[9746,9801],"content":"<bpt id=\"p1\">&lt;a name=\"defaultthreadtraits\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  DefaultThreadTraits","linkify":"<a name=\"defaultthreadtraits\"></a>  DefaultThreadTraits","source":"<a name=\"defaultthreadtraits\"></a>  DefaultThreadTraits"},{"content":"The default thread traits class.","pos":[9802,9834]},{"pos":[9840,9846],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[10005,10012],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"If the current project uses the multithreaded CRT, DefaultThreadTraits is defined as CRTThreadTraits.","pos":[10013,10114]},{"content":"Otherwise, Win32ThreadTraits is used.","pos":[10115,10152]},{"pos":[10160,10187],"content":"<bpt id=\"p1\">&lt;a name=\"lpurl\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  LPURL","linkify":"<a name=\"lpurl\"></a>  LPURL","source":"<a name=\"lpurl\"></a>  LPURL"},{"pos":[10191,10255],"content":"A pointer to a <bpt id=\"p1\">[</bpt>CUrl<ept id=\"p1\">](../../atl/reference/curl-class.md)</ept> object.","source":"A pointer to a [CUrl](../../atl/reference/curl-class.md) object."},{"pos":[10304,10312],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>ATL COM Desktop Components<ept id=\"p1\">](../../atl/atl-com-desktop-components.md)</ept><ph id=\"ph1\"> </ph>","pos":[10316,10386],"source":"[ATL COM Desktop Components](../../atl/atl-com-desktop-components.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Functions<ept id=\"p1\">](../../atl/reference/atl-functions.md)</ept><ph id=\"ph1\"> </ph>","pos":[10389,10440],"source":" [Functions](../../atl/reference/atl-functions.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Global Variables<ept id=\"p1\">](../../atl/reference/atl-global-variables.md)</ept><ph id=\"ph1\"> </ph>","pos":[10443,10508],"source":" [Global Variables](../../atl/reference/atl-global-variables.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Structures<ept id=\"p1\">](../../atl/reference/atl-structures.md)</ept><ph id=\"ph1\"> </ph>","pos":[10511,10564],"source":" [Structures](../../atl/reference/atl-structures.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Macros<ept id=\"p1\">](../../atl/reference/atl-macros.md)</ept><ph id=\"ph1\"> </ph>","pos":[10567,10612],"source":" [Macros](../../atl/reference/atl-macros.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Classes<ept id=\"p1\">](../../atl/reference/atl-classes.md)</ept>","pos":[10615,10661],"source":" [Classes](../../atl/reference/atl-classes.md)"}],"content":"---\ntitle: \"ATL Typedefs | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"index-page \"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"typedefs, ATL\"\n  - \"typedefs\"\n  - \"ATL, typedefs\"\nms.assetid: 7dd05baa-3efb-4e3b-af23-793c610f4560\ncaps.latest.revision: 20\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# ATL Typedefs\nThe Active Template Library includes the following typedefs.  \n  \n|||  \n|-|-|  \n|[_ATL_BASE_MODULE](#_atl_base_module)|Defined as a typedef based on [_ATL_BASE_MODULE70](../../atl/reference/atl-base-module70-structure.md).|  \n|[_ATL_COM_MODULE](#_atl_com_module)|Defined as a typedef based on [_ATL_COM_MODULE70](../../atl/reference/atl-com-module70-structure.md).|  \n|[_ATL_MODULE](#_atl_module)|Defined as a typedef based on [_ATL_MODULE70](../../atl/reference/atl-module70-structure.md).|  \n|[_ATL_WIN_MODULE](#_atl_win_module)|Defined as a typedef based on [_ATL_WIN_MODULE70](../../atl/reference/atl-win-module70-structure.md)|  \n|[ATL_URL_PORT](#atl_url_port)|The type used by [CUrl](../../atl/reference/curl-class.md) for specifying a port number.|  \n|[CComDispatchDriver](#ccomdispatchdriver)|This class manages COM interface pointers.|  \n|[CComGlobalsThreadModel](#ccomglobalsthreadmodel)|Calls the appropriate thread model methods, regardless of the threading model being used.|  \n|[CComObjectThreadModel](#ccomobjectthreadmodel)|Calls the appropriate thread model methods, regardless of the threading model being used.|  \n|[CContainedWindow](#ccontainedwindow)|This class is a specialization of **CContainedWindowT.**|  \n|[CPath](#cpath)|A specialization of [CPathT](../../atl/reference/cpatht-class.md) using `CString`.|  \n|[CPathA](#cpatha)|A specialization of [CPathT](../../atl/reference/cpatht-class.md) using `CStringA`.|  \n|[CPathW](#cpathw)|A specialization of [CPathT](../../atl/reference/cpatht-class.md) using `CStringW`.|  \n|[CSimpleValArray](#csimplevalarray)|Represents an array for storing simple types.|  \n|[DefaultThreadTraits](#defaultthreadtraits)|The default thread traits class.|  \n|[LPCURL](#lpcurl)|A pointer to a constant [CUrl](../../atl/reference/curl-class.md) object.|  \n|[LPURL](#lpurl)|A pointer to a [CUrl](../../atl/reference/curl-class.md) object.|  \n  \n##  <a name=\"_atl_base_module\"></a>  _ATL_BASE_MODULE  \n Defined as a typedef based on _ATL_BASE_MODULE70.  \n  \n```   \ntypedef ATL::_ATL_BASE_MODULE70 _ATL_BASE_MODULE;   \n```  \n  \n### Remarks  \n Used in every ATL project. Based on [_ATL_BASE_MODULE70](../../atl/reference/atl-base-module70-structure.md).  \n  \n Classes that are part of the ATL 7.0 Module Classes derive from the _ATL_BASE_MODULE structure.  For more information on ATL Module Classes, refer to [COM Modules Classes](../../atl/com-modules-classes.md).  \n  \n##  <a name=\"_atl_com_module\"></a>  _ATL_COM_MODULE  \n Defined as a typedef based on _ATL_COM_MODULE70.  \n  \n```   \ntypedef ATL::_ATL_COM_MODULE70 _ATL_COM_MODULE;   \n```  \n  \n### Remarks  \n Used by ATL projects which use COM features. Based on [_ATL_COM_MODULE70](../../atl/reference/atl-com-module70-structure.md).  \n  \n##  <a name=\"_atl_module\"></a>  _ATL_MODULE  \n Defined as a typedef based on _ATL_MODULE70.  \n  \n```   \ntypedef ATL::_ATL_MODULE70 _ATL_MODULE;   \n```  \n  \n### Remarks  \n Based on [_ATL_MODULE70](../../atl/reference/atl-module70-structure.md).  \n  \n##  <a name=\"_atl_win_module\"></a>  _ATL_WIN_MODULE  \n Defined as a typedef based on _ATL_WIN_MODULE70.  \n  \n```   \ntypedef ATL::_ATL_WIN_MODULE70 _ATL_WIN_MODULE; \n \n```  \n  \n### Remarks  \n Used by any ATL projects which use windowing features. Based on [_ATL_WIN_MODULE70](../../atl/reference/atl-win-module70-structure.md).  \n  \n##  <a name=\"atl_url_port\"></a>  ATL_URL_PORT \n  The type used by [CUrl](curl-class.md) for specifying a port number.\n```  \ntypedef WORD ATL_URL_PORT;\n```  \n\n##  <a name=\"ccomdispatchdriver\"></a>  CComDispatchDriver  \n This class manages COM interface pointers.  \n  \n```   \ntypedef CComQIPtr<IDispatch, &__uuidof(IDispatch)> CComDispatchDriver;   \n```  \n  \n##  <a name=\"ccomglobalsthreadmodel\"></a>  CComGlobalsThreadModel  \n Calls the appropriate thread model methods, regardless of the threading model being used.  \n  \n```   \n#if defined(_ATL_SINGLE_THREADED)  \ntypedef CComSingleThreadModel CComGlobalsThreadModel;  \n#elif defined(_ATL_APARTMENT_THREADED)  \ntypedef CComMultiThreadModel CComGlobalsThreadModel;  \n#elif defined(_ATL_FREE_THREADED)  \ntypedef CComMultiThreadModel CComGlobalsThreadModel;  \n#else  \n#pragma message (\"No global threading model defined\")  \n#endif   \n```  \n  \n### Remarks  \n Depending on the threading model used by your application, the `typedef` name `CComGlobalsThreadModel` references either [CComSingleThreadModel](../../atl/reference/ccomsinglethreadmodel-class.md) or [CComMultiThreadModel](../../atl/reference/ccommultithreadmodel-class.md). These classes provide additional `typedef` names to reference a critical section class.  \n  \n> [!NOTE]\n> `CComGlobalsThreadModel` does not reference class [CComMultiThreadModelNoCS](../../atl/reference/ccommultithreadmodelnocs-class.md).  \n  \n Using `CComGlobalsThreadModel` frees you from specifying a particular threading model class. Regardless of the threading model being used, the appropriate methods will be called.  \n  \n In addition to `CComGlobalsThreadModel`, ATL provides the `typedef` name [CComObjectThreadModel](#ccomobjectthreadmodel). The class referenced by each `typedef` depends on the threading model used, as shown in the following table:  \n  \n|typedef|Single threading|Apartment threading|Free threading|  \n|-------------|----------------------|-------------------------|--------------------|  \n|`CComObjectThreadModel`|S|S|M|  \n|`CComGlobalsThreadModel`|S|M|M|  \n  \n S= `CComSingleThreadModel`; M= `CComMultiThreadModel`  \n  \n Use `CComObjectThreadModel` within a single object class. Use `CComGlobalsThreadModel` in an object that is globally available to your program, or when you want to protect module resources across multiple threads.  \n  \n##  <a name=\"ccomobjectthreadmodel\"></a>  CComObjectThreadModel  \n Calls the appropriate thread model methods, regardless of the threading model being used.  \n  \n```   \n#if defined(_ATL_SINGLE_THREADED)  \ntypedef CComSingleThreadModel CComObjectThreadModel;  \n#elif defined(_ATL_APARTMENT_THREADED)  \ntypedef CComSingleThreadModel CComObjectThreadModel;  \n#elif defined(_ATL_FREE_THREADED)  \ntypedef CComMultiThreadModel CComObjectThreadModel;  \n#else  \n#pragma message (\"No global threading model defined\")  \n#endif   \n```  \n  \n### Remarks  \n Depending on the threading model used by your application, the `typedef` name `CComObjectThreadModel` references either [CComSingleThreadModel](../../atl/reference/ccomsinglethreadmodel-class.md) or [CComMultiThreadModel](../../atl/reference/ccommultithreadmodel-class.md). These classes provide additional `typedef` names to reference a critical section class.  \n  \n> [!NOTE]\n> `CComObjectThreadModel` does not reference class [CComMultiThreadModelNoCS](../../atl/reference/ccommultithreadmodelnocs-class.md).  \n  \n Using `CComObjectThreadModel` frees you from specifying a particular threading model class. Regardless of the threading model being used, the appropriate methods will be called.  \n  \n In addition to `CComObjectThreadModel`, ATL provides the `typedef` name [CComGlobalsThreadModel](#ccomglobalsthreadmodel). The class referenced by each `typedef` depends on the threading model used, as shown in the following table:  \n  \n|typedef|Single threading|Apartment threading|Free threading|  \n|-------------|----------------------|-------------------------|--------------------|  \n|`CComObjectThreadModel`|S|S|M|  \n|`CComGlobalsThreadModel`|S|M|M|  \n  \n S= `CComSingleThreadModel`; M= `CComMultiThreadModel`  \n  \n Use `CComObjectThreadModel` within a single object class. Use `CComGlobalsThreadModel` in an object that is either globally available to your program, or when you want to protect module resources across multiple threads.  \n  \n##  <a name=\"ccontainedwindow\"></a>  CContainedWindow  \n This class is a specialization of **CContainedWindowT.**  \n  \n```   \ntypedef CContainedWindowT<CWindow> CContainedWindow;   \n```  \n  \n### Remarks  \n `CContainedWindow` is a specialization of [CContainedWindowT](../../atl/reference/ccontainedwindowt-class.md). If you want to change the base class or traits, use `CContainedWindowT` directly.  \n  \n##  <a name=\"cpath\"></a>  CPath  \n A specialization of [CPathT](../../atl/reference/cpatht-class.md) using `CString`.  \n  \n```   \ntypedef CPathT<CString> CPath;   \n```  \n  \n##  <a name=\"cpatha\"></a>  CPathA  \n A specialization of [CPathT](../../atl/reference/cpatht-class.md) using `CStringA`.  \n  \n```   \ntypedef CPathT<CStringA> CPathA;   \n```  \n  \n##  <a name=\"cpathw\"></a>  CPathW  \n A specialization of [CPathT](../../atl/reference/cpatht-class.md) using `CStringW`.  \n  \n```   \ntypedef ATL::CPathT<CStringW> CPathW;   \n```  \n  \n##  <a name=\"csimplevalarray\"></a>  CSimpleValArray  \n Represents an array for storing simple types.  \n  \n```   \n#define CSimpleValArray CSimpleArray   \n```  \n  \n### Remarks  \n `CSimpleValArray` is provided for creating and managing arrays containing simple data types. It is a simple #define of [CSimpleArray](../../atl/reference/csimplearray-class.md).  \n  \n##  <a name=\"lpcurl\"></a>  LPCURL  \n A pointer to a constant [CUrl](../../atl/reference/curl-class.md) object.  \n  \n```   \ntypedef const CUrl* LPCURL;   \n```  \n\n##  <a name=\"defaultthreadtraits\"></a>  DefaultThreadTraits\nThe default thread traits class.\n\n### Syntax\n```  \n      #if defined(_MT)  \n   typedef CRTThreadTraits DefaultThreadTraits;  \n#else  \n   typedef Win32ThreadTraits DefaultThreadTraits;  \n#endif  \n```\n\n## Remarks\nIf the current project uses the multithreaded CRT, DefaultThreadTraits is defined as CRTThreadTraits. Otherwise, Win32ThreadTraits is used.\n  \n##  <a name=\"lpurl\"></a>  LPURL  \n A pointer to a [CUrl](../../atl/reference/curl-class.md) object.  \n  \n```   \ntypedef CUrl* LPURL;   \n```  \n  \n## See Also  \n [ATL COM Desktop Components](../../atl/atl-com-desktop-components.md)   \n [Functions](../../atl/reference/atl-functions.md)   \n [Global Variables](../../atl/reference/atl-global-variables.md)   \n [Structures](../../atl/reference/atl-structures.md)   \n [Macros](../../atl/reference/atl-macros.md)   \n [Classes](../../atl/reference/atl-classes.md)"}