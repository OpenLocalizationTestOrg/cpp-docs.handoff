{"nodes":[{"pos":[12,50],"content":"COleControlSite Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"COleControlSite Class | Microsoft Docs","pos":[0,38]}]},{"pos":[619,640],"content":"COleControlSite Class","linkify":"COleControlSite Class","nodes":[{"content":"COleControlSite Class","pos":[0,21]}]},{"content":"Provides support for custom client-side control interfaces.","pos":[641,700]},{"pos":[709,715],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[783,790],"content":"Members","linkify":"Members","nodes":[{"content":"Members","pos":[0,7]}]},{"pos":[800,819],"content":"Public Constructors","linkify":"Public Constructors","nodes":[{"content":"Public Constructors","pos":[0,19]}]},{"content":"Name","pos":[826,830]},{"content":"Description","pos":[831,842]},{"pos":[880,949],"content":"<bpt id=\"p1\">[</bpt>COleControlSite::COleControlSite<ept id=\"p1\">](#colecontrolsite__colecontrolsite)</ept>","source":"[COleControlSite::COleControlSite](#colecontrolsite__colecontrolsite)"},{"pos":[950,988],"content":"Constructs a <ph id=\"ph1\">`COleControlSite`</ph> object.","source":"Constructs a `COleControlSite` object."},{"pos":[999,1013],"content":"Public Methods","linkify":"Public Methods","nodes":[{"content":"Public Methods","pos":[0,14]}]},{"content":"Name","pos":[1020,1024]},{"content":"Description","pos":[1025,1036]},{"pos":[1074,1151],"content":"<bpt id=\"p1\">[</bpt>COleControlSite::BindDefaultProperty<ept id=\"p1\">](#colecontrolsite__binddefaultproperty)</ept>","source":"[COleControlSite::BindDefaultProperty](#colecontrolsite__binddefaultproperty)"},{"content":"Binds the default property of the hosted control to a data source.","pos":[1152,1218]},{"pos":[1223,1286],"content":"<bpt id=\"p1\">[</bpt>COleControlSite::BindProperty<ept id=\"p1\">](#colecontrolsite__bindproperty)</ept>","source":"[COleControlSite::BindProperty](#colecontrolsite__bindproperty)"},{"content":"Binds a property of the hosted control to a data source.","pos":[1287,1343]},{"pos":[1348,1413],"content":"<bpt id=\"p1\">[</bpt>COleControlSite::CreateControl<ept id=\"p1\">](#colecontrolsite__createcontrol)</ept>","source":"[COleControlSite::CreateControl](#colecontrolsite__createcontrol)"},{"content":"Creates a hosted ActiveX control.","pos":[1414,1447]},{"pos":[1452,1519],"content":"<bpt id=\"p1\">[</bpt>COleControlSite::DestroyControl<ept id=\"p1\">](#colecontrolsite__destroycontrol)</ept>","source":"[COleControlSite::DestroyControl](#colecontrolsite__destroycontrol)"},{"content":"Destroys the hosted control.","pos":[1520,1548]},{"pos":[1553,1604],"content":"<bpt id=\"p1\">[</bpt>COleControlSite::DoVerb<ept id=\"p1\">](#colecontrolsite__doverb)</ept>","source":"[COleControlSite::DoVerb](#colecontrolsite__doverb)"},{"content":"Executes a specific verb of the hosted control.","pos":[1605,1652]},{"pos":[1657,1714],"content":"<bpt id=\"p1\">[</bpt>COleControlSite::EnableDSC<ept id=\"p1\">](#colecontrolsite__enabledsc)</ept>","source":"[COleControlSite::EnableDSC](#colecontrolsite__enabledsc)"},{"content":"Enables data sourcing for a control site.","pos":[1715,1756]},{"pos":[1761,1824],"content":"<bpt id=\"p1\">[</bpt>COleControlSite::EnableWindow<ept id=\"p1\">](#colecontrolsite__enablewindow)</ept>","source":"[COleControlSite::EnableWindow](#colecontrolsite__enablewindow)"},{"content":"Enables the control site.","pos":[1825,1850]},{"pos":[1855,1918],"content":"<bpt id=\"p1\">[</bpt>COleControlSite::FreezeEvents<ept id=\"p1\">](#colecontrolsite__freezeevents)</ept>","source":"[COleControlSite::FreezeEvents](#colecontrolsite__freezeevents)"},{"content":"Specifies if the control site is accepting events.","pos":[1919,1969]},{"pos":[1974,2039],"content":"<bpt id=\"p1\">[</bpt>COleControlSite::GetDefBtnCode<ept id=\"p1\">](#colecontrolsite__getdefbtncode)</ept>","source":"[COleControlSite::GetDefBtnCode](#colecontrolsite__getdefbtncode)"},{"content":"Retrieves the default button code for the hosted control.","pos":[2040,2097]},{"pos":[2102,2165],"content":"<bpt id=\"p1\">[</bpt>COleControlSite::GetDlgCtrlID<ept id=\"p1\">](#colecontrolsite__getdlgctrlid)</ept>","source":"[COleControlSite::GetDlgCtrlID](#colecontrolsite__getdlgctrlid)"},{"content":"Retrieves the identifier of the control.","pos":[2166,2206]},{"pos":[2211,2272],"content":"<bpt id=\"p1\">[</bpt>COleControlSite::GetEventIID<ept id=\"p1\">](#colecontrolsite__geteventiid)</ept>","source":"[COleControlSite::GetEventIID](#colecontrolsite__geteventiid)"},{"content":"Retrieves the ID of an event interface for a hosted control.","pos":[2273,2333]},{"pos":[2338,2397],"content":"<bpt id=\"p1\">[</bpt>COleControlSite::GetExStyle<ept id=\"p1\">](#colecontrolsite__getexstyle)</ept>","source":"[COleControlSite::GetExStyle](#colecontrolsite__getexstyle)"},{"content":"Retrieves the extended styles of the control site.","pos":[2398,2448]},{"pos":[2453,2514],"content":"<bpt id=\"p1\">[</bpt>COleControlSite::GetProperty<ept id=\"p1\">](#colecontrolsite__getproperty)</ept>","source":"[COleControlSite::GetProperty](#colecontrolsite__getproperty)"},{"content":"Retrieves a specific property of the hosted control.","pos":[2515,2567]},{"pos":[2572,2627],"content":"<bpt id=\"p1\">[</bpt>COleControlSite::GetStyle<ept id=\"p1\">](#colecontrolsite__getstyle)</ept>","source":"[COleControlSite::GetStyle](#colecontrolsite__getstyle)"},{"content":"Retrieves the styles of the control site.","pos":[2628,2669]},{"pos":[2674,2739],"content":"<bpt id=\"p1\">[</bpt>COleControlSite::GetWindowText<ept id=\"p1\">](#colecontrolsite__getwindowtext)</ept>","source":"[COleControlSite::GetWindowText](#colecontrolsite__getwindowtext)"},{"content":"Retrieves the text of the hosted control.","pos":[2740,2781]},{"pos":[2786,2849],"content":"<bpt id=\"p1\">[</bpt>COleControlSite::InvokeHelper<ept id=\"p1\">](#colecontrolsite__invokehelper)</ept>","source":"[COleControlSite::InvokeHelper](#colecontrolsite__invokehelper)"},{"content":"Invoke a specific method of the hosted control.","pos":[2850,2897]},{"pos":[2902,2967],"content":"<bpt id=\"p1\">[</bpt>COleControlSite::InvokeHelperV<ept id=\"p1\">](#colecontrolsite__invokehelperv)</ept>","source":"[COleControlSite::InvokeHelperV](#colecontrolsite__invokehelperv)"},{"content":"Invoke a specific method of the hosted control with a variable list of arguments.","pos":[2968,3049]},{"pos":[3054,3123],"content":"<bpt id=\"p1\">[</bpt>COleControlSite::IsDefaultButton<ept id=\"p1\">](#colecontrolsite__isdefaultbutton)</ept>","source":"[COleControlSite::IsDefaultButton](#colecontrolsite__isdefaultbutton)"},{"content":"Determines if the control is the default button in the window.","pos":[3124,3186]},{"pos":[3191,3260],"content":"<bpt id=\"p1\">[</bpt>COleControlSite::IsWindowEnabled<ept id=\"p1\">](#colecontrolsite__iswindowenabled)</ept>","source":"[COleControlSite::IsWindowEnabled](#colecontrolsite__iswindowenabled)"},{"content":"Checks the visible state of the control site.","pos":[3261,3306]},{"pos":[3311,3372],"content":"<bpt id=\"p1\">[</bpt>COleControlSite::ModifyStyle<ept id=\"p1\">](#colecontrolsite__modifystyle)</ept>","source":"[COleControlSite::ModifyStyle](#colecontrolsite__modifystyle)"},{"content":"Modifies the current extended styles of the control site.","pos":[3373,3430]},{"pos":[3435,3500],"content":"<bpt id=\"p1\">[</bpt>COleControlSite::ModifyStyleEx<ept id=\"p1\">](#colecontrolsite__modifystyleex)</ept>","source":"[COleControlSite::ModifyStyleEx](#colecontrolsite__modifystyleex)"},{"content":"Modifies the current styles of the control site.","pos":[3501,3549]},{"pos":[3554,3613],"content":"<bpt id=\"p1\">[</bpt>COleControlSite::MoveWindow<ept id=\"p1\">](#colecontrolsite__movewindow)</ept>","source":"[COleControlSite::MoveWindow](#colecontrolsite__movewindow)"},{"content":"Changes the position of the control site.","pos":[3614,3655]},{"pos":[3660,3725],"content":"<bpt id=\"p1\">[</bpt>COleControlSite::QuickActivate<ept id=\"p1\">](#colecontrolsite__quickactivate)</ept>","source":"[COleControlSite::QuickActivate](#colecontrolsite__quickactivate)"},{"content":"Quick activates the hosted control.","pos":[3726,3761]},{"pos":[3766,3835],"content":"<bpt id=\"p1\">[</bpt>COleControlSite::SafeSetProperty<ept id=\"p1\">](#colecontrolsite__safesetproperty)</ept>","source":"[COleControlSite::SafeSetProperty](#colecontrolsite__safesetproperty)"},{"content":"Sets a property or method of the control without chance of throwing an exception.","pos":[3836,3917]},{"pos":[3922,3993],"content":"<bpt id=\"p1\">[</bpt>COleControlSite::SetDefaultButton<ept id=\"p1\">](#colecontrolsite__setdefaultbutton)</ept>","source":"[COleControlSite::SetDefaultButton](#colecontrolsite__setdefaultbutton)"},{"content":"Sets the default button in the window.","pos":[3994,4032]},{"pos":[4037,4100],"content":"<bpt id=\"p1\">[</bpt>COleControlSite::SetDlgCtrlID<ept id=\"p1\">](#colecontrolsite__setdlgctrlid)</ept>","source":"[COleControlSite::SetDlgCtrlID](#colecontrolsite__setdlgctrlid)"},{"content":"Retrieves the identifier of the control.","pos":[4101,4141]},{"pos":[4146,4201],"content":"<bpt id=\"p1\">[</bpt>COleControlSite::SetFocus<ept id=\"p1\">](#colecontrolsite__setfocus)</ept>","source":"[COleControlSite::SetFocus](#colecontrolsite__setfocus)"},{"content":"Sets the focus to the control site.","pos":[4202,4237]},{"pos":[4242,4303],"content":"<bpt id=\"p1\">[</bpt>COleControlSite::SetProperty<ept id=\"p1\">](#colecontrolsite__setproperty)</ept>","source":"[COleControlSite::SetProperty](#colecontrolsite__setproperty)"},{"content":"Sets a specific property of the hosted control.","pos":[4304,4351]},{"pos":[4356,4419],"content":"<bpt id=\"p1\">[</bpt>COleControlSite::SetPropertyV<ept id=\"p1\">](#colecontrolsite__setpropertyv)</ept>","source":"[COleControlSite::SetPropertyV](#colecontrolsite__setpropertyv)"},{"content":"Sets a specific property of the hosted control with a variable list of arguments.","pos":[4420,4501]},{"pos":[4506,4569],"content":"<bpt id=\"p1\">[</bpt>COleControlSite::SetWindowPos<ept id=\"p1\">](#colecontrolsite__setwindowpos)</ept>","source":"[COleControlSite::SetWindowPos](#colecontrolsite__setwindowpos)"},{"content":"Sets the position of the control site.","pos":[4570,4608]},{"pos":[4613,4678],"content":"<bpt id=\"p1\">[</bpt>COleControlSite::SetWindowText<ept id=\"p1\">](#colecontrolsite__setwindowtext)</ept>","source":"[COleControlSite::SetWindowText](#colecontrolsite__setwindowtext)"},{"content":"Sets the text of the hosted control.","pos":[4679,4715]},{"pos":[4720,4779],"content":"<bpt id=\"p1\">[</bpt>COleControlSite::ShowWindow<ept id=\"p1\">](#colecontrolsite__showwindow)</ept>","source":"[COleControlSite::ShowWindow](#colecontrolsite__showwindow)"},{"content":"Shows or hides the control site.","pos":[4780,4812]},{"pos":[4823,4840],"content":"Protected Methods","linkify":"Protected Methods","nodes":[{"content":"Protected Methods","pos":[0,17]}]},{"content":"Name","pos":[4847,4851]},{"content":"Description","pos":[4852,4863]},{"pos":[4901,4968],"content":"<bpt id=\"p1\">[</bpt>COleControlSite::GetControlInfo<ept id=\"p1\">](#colecontrolsite__getcontrolinfo)</ept>","source":"[COleControlSite::GetControlInfo](#colecontrolsite__getcontrolinfo)"},{"content":"Retrieves keyboard information and mnemonics for the hosted control.","pos":[4969,5037]},{"pos":[5048,5067],"content":"Public Data Members","linkify":"Public Data Members","nodes":[{"content":"Public Data Members","pos":[0,19]}]},{"content":"Name","pos":[5074,5078]},{"content":"Description","pos":[5079,5090]},{"pos":[5128,5197],"content":"<bpt id=\"p1\">[</bpt>COleControlSite::m_bIsWindowless<ept id=\"p1\">](#colecontrolsite__m_biswindowless)</ept>","source":"[COleControlSite::m_bIsWindowless](#colecontrolsite__m_biswindowless)"},{"content":"Determines if the hosted control is a windowless control.","pos":[5198,5255]},{"pos":[5260,5317],"content":"<bpt id=\"p1\">[</bpt>COleControlSite::m_ctlInfo<ept id=\"p1\">](#colecontrolsite__m_ctlinfo)</ept>","source":"[COleControlSite::m_ctlInfo](#colecontrolsite__m_ctlinfo)"},{"content":"Contains information on keyboard handling for the control.","pos":[5318,5376]},{"pos":[5381,5446],"content":"<bpt id=\"p1\">[</bpt>COleControlSite::m_dwEventSink<ept id=\"p1\">](#colecontrolsite__m_dweventsink)</ept>","source":"[COleControlSite::m_dwEventSink](#colecontrolsite__m_dweventsink)"},{"content":"The cookie of the control's connection point.","pos":[5447,5492]},{"pos":[5497,5564],"content":"<bpt id=\"p1\">[</bpt>COleControlSite::m_dwMiscStatus<ept id=\"p1\">](#colecontrolsite__m_dwmiscstatus)</ept>","source":"[COleControlSite::m_dwMiscStatus](#colecontrolsite__m_dwmiscstatus)"},{"content":"The miscellaneous states for the hosted control.","pos":[5565,5613]},{"pos":[5618,5693],"content":"<bpt id=\"p1\">[</bpt>COleControlSite::m_dwPropNotifySink<ept id=\"p1\">](#colecontrolsite__m_dwpropnotifysink)</ept>","source":"[COleControlSite::m_dwPropNotifySink](#colecontrolsite__m_dwpropnotifysink)"},{"pos":[5694,5742],"content":"The <ph id=\"ph1\">`IPropertyNotifySink`</ph> cookie of the control.","source":"The `IPropertyNotifySink` cookie of the control."},{"pos":[5747,5804],"content":"<bpt id=\"p1\">[</bpt>COleControlSite::m_dwStyle<ept id=\"p1\">](#colecontrolsite__m_dwstyle)</ept>","source":"[COleControlSite::m_dwStyle](#colecontrolsite__m_dwstyle)"},{"content":"The styles of the hosted control.","pos":[5805,5838]},{"pos":[5843,5894],"content":"<bpt id=\"p1\">[</bpt>COleControlSite::m_hWnd<ept id=\"p1\">](#colecontrolsite__m_hwnd)</ept>","source":"[COleControlSite::m_hWnd](#colecontrolsite__m_hwnd)"},{"content":"The handle of the control site.","pos":[5895,5926]},{"pos":[5931,5992],"content":"<bpt id=\"p1\">[</bpt>COleControlSite::m_iidEvents<ept id=\"p1\">](#colecontrolsite__m_iidevents)</ept>","source":"[COleControlSite::m_iidEvents](#colecontrolsite__m_iidevents)"},{"content":"The ID of the event interface for the hosted control.","pos":[5993,6046]},{"pos":[6051,6100],"content":"<bpt id=\"p1\">[</bpt>COleControlSite::m_nID<ept id=\"p1\">](#colecontrolsite__m_nid)</ept>","source":"[COleControlSite::m_nID](#colecontrolsite__m_nid)"},{"content":"The ID of the hosted control.","pos":[6101,6130]},{"pos":[6135,6204],"content":"<bpt id=\"p1\">[</bpt>COleControlSite::m_pActiveObject<ept id=\"p1\">](#colecontrolsite__m_pactiveobject)</ept>","source":"[COleControlSite::m_pActiveObject](#colecontrolsite__m_pactiveobject)"},{"pos":[6205,6277],"content":"A pointer to the <ph id=\"ph1\">`IOleInPlaceActiveObject`</ph> object of the hosted control.","source":"A pointer to the `IOleInPlaceActiveObject` object of the hosted control."},{"pos":[6282,6343],"content":"<bpt id=\"p1\">[</bpt>COleControlSite::m_pCtrlCont<ept id=\"p1\">](#colecontrolsite__m_pctrlcont)</ept>","source":"[COleControlSite::m_pCtrlCont](#colecontrolsite__m_pctrlcont)"},{"content":"The container of the hosted control.","pos":[6344,6380]},{"pos":[6385,6456],"content":"<bpt id=\"p1\">[</bpt>COleControlSite::m_pInPlaceObject<ept id=\"p1\">](#colecontrolsite__m_pinplaceobject)</ept>","source":"[COleControlSite::m_pInPlaceObject](#colecontrolsite__m_pinplaceobject)"},{"pos":[6457,6523],"content":"A pointer to the <ph id=\"ph1\">`IOleInPlaceObject`</ph> object of the hosted control.","source":"A pointer to the `IOleInPlaceObject` object of the hosted control."},{"pos":[6528,6585],"content":"<bpt id=\"p1\">[</bpt>COleControlSite::m_pObject<ept id=\"p1\">](#colecontrolsite__m_pobject)</ept>","source":"[COleControlSite::m_pObject](#colecontrolsite__m_pobject)"},{"pos":[6586,6650],"content":"A pointer to the <ph id=\"ph1\">`IOleObjectInterface`</ph> interface of the control.","source":"A pointer to the `IOleObjectInterface` interface of the control."},{"pos":[6655,6732],"content":"<bpt id=\"p1\">[</bpt>COleControlSite::m_pWindowlessObject<ept id=\"p1\">](#colecontrolsite__m_pwindowlessobject)</ept>","source":"[COleControlSite::m_pWindowlessObject](#colecontrolsite__m_pwindowlessobject)"},{"pos":[6733,6805],"content":"A pointer to the <ph id=\"ph1\">`IOleInPlaceObjectWindowless`</ph> interface of the control.","source":"A pointer to the `IOleInPlaceObjectWindowless` interface of the control."},{"pos":[6810,6869],"content":"<bpt id=\"p1\">[</bpt>COleControlSite::m_pWndCtrl<ept id=\"p1\">](#colecontrolsite__m_pwndctrl)</ept>","source":"[COleControlSite::m_pWndCtrl](#colecontrolsite__m_pwndctrl)"},{"content":"A pointer to the window object for the hosted control.","pos":[6870,6924]},{"pos":[6929,6980],"content":"<bpt id=\"p1\">[</bpt>COleControlSite::m_rect<ept id=\"p1\">](#colecontrolsite__m_rect)</ept>","source":"[COleControlSite::m_rect](#colecontrolsite__m_rect)"},{"content":"The dimensions of the control site.","pos":[6981,7016]},{"pos":[7026,7033],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This support is the primary means by which an embedded ActiveX control obtains information about the location and extent of its display site, its moniker, its user interface, its ambient properties, and other resources provided by its container.","pos":[7037,7282]},{"content":"<ph id=\"ph1\">`COleControlSite`</ph> fully implements the <bpt id=\"p1\">[</bpt>IOleControlSite<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms688502)</ept>, <bpt id=\"p2\">[</bpt>IOleInPlaceSite<ept id=\"p2\">](http://msdn.microsoft.com/library/windows/desktop/ms686586)</ept>, <bpt id=\"p3\">[</bpt>IOleClientSite<ept id=\"p3\">](http://msdn.microsoft.com/library/windows/desktop/ms693706)</ept>, <bpt id=\"p4\">[</bpt>IPropertyNotifySink<ept id=\"p4\">](http://msdn.microsoft.com/library/windows/desktop/ms692638)</ept>, <bpt id=\"p5\">**</bpt>IBoundObjectSite<ept id=\"p5\">**</ept>, <bpt id=\"p6\">**</bpt>INotifyDBEvents<ept id=\"p6\">**</ept>, <bpt id=\"p7\">[</bpt>IRowSetNotify<ept id=\"p7\">](../../data/oledb/irowsetnotifyimpl-class.md)</ept>       interfaces.","pos":[7283,7762],"source":"`COleControlSite` fully implements the [IOleControlSite](http://msdn.microsoft.com/library/windows/desktop/ms688502), [IOleInPlaceSite](http://msdn.microsoft.com/library/windows/desktop/ms686586), [IOleClientSite](http://msdn.microsoft.com/library/windows/desktop/ms693706), [IPropertyNotifySink](http://msdn.microsoft.com/library/windows/desktop/ms692638), **IBoundObjectSite**, **INotifyDBEvents**, [IRowSetNotify](../../data/oledb/irowsetnotifyimpl-class.md)       interfaces."},{"content":"In addition, the IDispatch interface (providing support for ambient properties and event sinks) is also implemented.","pos":[7763,7879]},{"content":"To create an ActiveX control site using <ph id=\"ph1\">`COleControlSite`</ph>, derive a class from <ph id=\"ph2\">`COleControlSite`</ph>.","pos":[7886,7983],"source":"To create an ActiveX control site using `COleControlSite`, derive a class from `COleControlSite`."},{"content":"In your <ph id=\"ph1\">`CWnd`</ph>-derived class for the container (for instance, your dialog box) override the <bpt id=\"p1\">**</bpt>CWnd::CreateControlSite<ept id=\"p1\">**</ept> function.","pos":[7984,8113],"source":" In your `CWnd`-derived class for the container (for instance, your dialog box) override the **CWnd::CreateControlSite** function."},{"pos":[8122,8143],"content":"Inheritance Hierarchy","linkify":"Inheritance Hierarchy","nodes":[{"content":"Inheritance Hierarchy","pos":[0,21]}]},{"pos":[8147,8194],"content":"<bpt id=\"p1\">[</bpt>CObject<ept id=\"p1\">](../../mfc/reference/cobject-class.md)</ept>","source":"[CObject](../../mfc/reference/cobject-class.md)"},{"pos":[8201,8254],"content":"<bpt id=\"p1\">[</bpt>CCmdTarget<ept id=\"p1\">](../../mfc/reference/ccmdtarget-class.md)</ept>","source":"[CCmdTarget](../../mfc/reference/ccmdtarget-class.md)"},{"pos":[8287,8299],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[8303,8323],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> afxocc.h","source":"**Header:** afxocc.h"},{"pos":[8333,8422],"content":"<bpt id=\"p1\">&lt;a name=\"colecontrolsite__binddefaultproperty\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  COleControlSite::BindDefaultProperty","linkify":"<a name=\"colecontrolsite__binddefaultproperty\"></a>  COleControlSite::BindDefaultProperty","source":"<a name=\"colecontrolsite__binddefaultproperty\"></a>  COleControlSite::BindDefaultProperty"},{"content":"Binds the calling object's default simple bound property, as marked in the type library, to the underlying cursor that is defined by the DataSource, UserName, Password, and SQL properties of the data-source control.","pos":[8426,8641]},{"pos":[8792,8802],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Specifies the <bpt id=\"p1\">**</bpt>DISPID<ept id=\"p1\">**</ept> of a property on a data-bound control that is to be bound to a data-source control.","pos":[8820,8928],"source":" Specifies the **DISPID** of a property on a data-bound control that is to be bound to a data-source control."},{"content":"Specifies the type of the property to be bound — for example, <ph id=\"ph1\">`VT_BSTR`</ph>, <bpt id=\"p1\">**</bpt>VT_VARIANT<ept id=\"p1\">**</ept>, and so on.","pos":[8947,9046],"source":" Specifies the type of the property to be bound — for example, `VT_BSTR`, **VT_VARIANT**, and so on."},{"content":"Specifies the name of the column, in the cursor provided by the data-source control, to which the property will be bound.","pos":[9070,9191]},{"content":"A pointer to the <ph id=\"ph1\">`CWnd`</ph>-derived object that hosts the data-source control to which the property will be bound.","pos":[9211,9321],"source":" A pointer to the `CWnd`-derived object that hosts the data-source control to which the property will be bound."},{"pos":[9331,9338],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[9342,9421],"content":"The <ph id=\"ph1\">`CWnd`</ph> object on which you call this function must be a data-bound control.","source":"The `CWnd` object on which you call this function must be a data-bound control."},{"pos":[9431,9506],"content":"<bpt id=\"p1\">&lt;a name=\"colecontrolsite__bindproperty\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  COleControlSite::BindProperty","linkify":"<a name=\"colecontrolsite__bindproperty\"></a>  COleControlSite::BindProperty","source":"<a name=\"colecontrolsite__bindproperty\"></a>  COleControlSite::BindProperty"},{"content":"Binds the calling object's simple bound property, as marked in the type library, to the underlying cursor that is defined by the DataSource, UserName, Password, and SQL properties of the data-source control.","pos":[9510,9717]},{"pos":[9812,9822],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"<bpt id=\"p1\">*</bpt>dwDispId<ept id=\"p1\">*</ept>","pos":[9826,9836],"source":"*dwDispId*"},{"content":"Specifies the <bpt id=\"p1\">**</bpt>DISPID<ept id=\"p1\">**</ept> of a property on a data-bound control that is to be bound to a data-source control.","pos":[9840,9948],"source":" Specifies the **DISPID** of a property on a data-bound control that is to be bound to a data-source control."},{"content":"A pointer to the <ph id=\"ph1\">`CWnd`</ph>-derived object that hosts the data-source control to which the property will be bound.","pos":[9968,10078],"source":" A pointer to the `CWnd`-derived object that hosts the data-source control to which the property will be bound."},{"pos":[10088,10095],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[10099,10178],"content":"The <ph id=\"ph1\">`CWnd`</ph> object on which you call this function must be a data-bound control.","source":"The `CWnd` object on which you call this function must be a data-bound control."},{"pos":[10188,10269],"content":"<bpt id=\"p1\">&lt;a name=\"colecontrolsite__colecontrolsite\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  COleControlSite::COleControlSite","linkify":"<a name=\"colecontrolsite__colecontrolsite\"></a>  COleControlSite::COleControlSite","source":"<a name=\"colecontrolsite__colecontrolsite\"></a>  COleControlSite::COleControlSite"},{"pos":[10273,10315],"content":"Constructs a new <ph id=\"ph1\">`COleControlSite`</ph> object.","source":"Constructs a new `COleControlSite` object."},{"pos":[10399,10409],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"A pointer to the control's container (which represents the window that hosts the AtiveX control).","pos":[10428,10525]},{"pos":[10535,10542],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This function is called by the <bpt id=\"p1\">[</bpt>COccManager::CreateContainer<ept id=\"p1\">](../../mfc/reference/coccmanager-class.md#coccmanager__createcontainer)</ept> function.","pos":[10546,10688],"source":"This function is called by the [COccManager::CreateContainer](../../mfc/reference/coccmanager-class.md#coccmanager__createcontainer) function."},{"content":"For more information on customizing the creation of containers, see <bpt id=\"p1\">[</bpt>COccManager::CreateSite<ept id=\"p1\">](../../mfc/reference/coccmanager-class.md#coccmanager__createsite)</ept>.","pos":[10689,10849],"source":" For more information on customizing the creation of containers, see [COccManager::CreateSite](../../mfc/reference/coccmanager-class.md#coccmanager__createsite)."},{"pos":[10859,10936],"content":"<bpt id=\"p1\">&lt;a name=\"colecontrolsite__createcontrol\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  COleControlSite::CreateControl","linkify":"<a name=\"colecontrolsite__createcontrol\"></a>  COleControlSite::CreateControl","source":"<a name=\"colecontrolsite__createcontrol\"></a>  COleControlSite::CreateControl"},{"pos":[10940,11007],"content":"Creates an ActiveX control, hosted by the <ph id=\"ph1\">`COleControlSite`</ph> object.","source":"Creates an ActiveX control, hosted by the `COleControlSite` object."},{"pos":[11568,11578],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"A pointer to the window object representing the control.","pos":[11596,11652]},{"content":"The unique class ID of the control.","pos":[11670,11705]},{"content":"A pointer to the text to be displayed in the control.","pos":[11732,11785]},{"content":"Sets the value of the winodw's Caption or Text property (if any).","pos":[11786,11851]},{"content":"Windows styles.","pos":[11871,11886]},{"content":"The available styles are listed under the <bpt id=\"p1\">**</bpt>Remarks<ept id=\"p1\">**</ept> section.","pos":[11887,11949],"source":" The available styles are listed under the **Remarks** section."},{"content":"Specifies the control's size and position.","pos":[11966,12008]},{"content":"It can be either a <ph id=\"ph1\">`CRect`</ph> object or a <ph id=\"ph2\">`RECT`</ph> structure.","pos":[12009,12065],"source":" It can be either a `CRect` object or a `RECT` structure."},{"content":"Specifies the control's child window ID.","pos":[12081,12121]},{"content":"A pointer to a <ph id=\"ph1\">`CFile`</ph> containing the persistent state for the control.","pos":[12142,12213],"source":" A pointer to a `CFile` containing the persistent state for the control."},{"content":"The default value is <bpt id=\"p1\">**</bpt>NULL<ept id=\"p1\">**</ept>, indicating that the control initializes itself without restoring its state from any persistent storage.","pos":[12214,12348],"source":" The default value is **NULL**, indicating that the control initializes itself without restoring its state from any persistent storage."},{"content":"If not <bpt id=\"p1\">**</bpt>NULL<ept id=\"p1\">**</ept>, it should be a pointer to a <ph id=\"ph1\">`CFile`</ph>-derived object that contains the control's persistent data, in the form of either a stream or a storage.","pos":[12349,12506],"source":" If not **NULL**, it should be a pointer to a `CFile`-derived object that contains the control's persistent data, in the form of either a stream or a storage."},{"content":"This data could have been saved in a previous activation of the client.","pos":[12507,12578]},{"content":"The <ph id=\"ph1\">`CFile`</ph> can contain other data, but must have its read-write pointer set to the first byte of persistent data at the time of the call to <ph id=\"ph2\">`CreateControl`</ph>.","pos":[12579,12736],"source":" The `CFile` can contain other data, but must have its read-write pointer set to the first byte of persistent data at the time of the call to `CreateControl`."},{"content":"Indicates whether the data in <ph id=\"ph1\">`pPersist`</ph> should be interpreted as <ph id=\"ph2\">`IStorage`</ph> or <ph id=\"ph3\">`IStream`</ph> data.","pos":[12757,12852],"source":" Indicates whether the data in `pPersist` should be interpreted as `IStorage` or `IStream` data."},{"content":"If the data in <ph id=\"ph1\">`pPersist`</ph> is a storage, <ph id=\"ph2\">`bStorage`</ph> should be <bpt id=\"p1\">**</bpt>TRUE<ept id=\"p1\">**</ept>.","pos":[12853,12923],"source":" If the data in `pPersist` is a storage, `bStorage` should be **TRUE**."},{"content":"If the data in <ph id=\"ph1\">`pPersist`</ph> is a stream, <ph id=\"ph2\">`bStorage`</ph> should be <bpt id=\"p1\">**</bpt>FALSE<ept id=\"p1\">**</ept>.","pos":[12924,12994],"source":" If the data in `pPersist` is a stream, `bStorage` should be **FALSE**."},{"content":"The default value is <bpt id=\"p1\">**</bpt>FALSE<ept id=\"p1\">**</ept>.","pos":[12995,13026],"source":" The default value is **FALSE**."},{"content":"Optional license key data.","pos":[13049,13075]},{"content":"This data is needed only for creating controls that require a run-time license key.","pos":[13076,13159]},{"content":"If the control supports licensing, you must provide a license key for the creation of the control to succeed.","pos":[13160,13269]},{"content":"The default value is <bpt id=\"p1\">**</bpt>NULL<ept id=\"p1\">**</ept>.","pos":[13270,13300],"source":" The default value is **NULL**."},{"content":"A pointer to a <bpt id=\"p1\">**</bpt>POINT<ept id=\"p1\">**</ept> structure that contains the upper-left corner of the control.","pos":[13316,13402],"source":" A pointer to a **POINT** structure that contains the upper-left corner of the control."},{"content":"The size of the control is determined by the value of <bpt id=\"p1\">*</bpt>psize<ept id=\"p1\">*</ept>.","pos":[13403,13465],"source":" The size of the control is determined by the value of *psize*."},{"content":"The <ph id=\"ph1\">`ppt`</ph> and <bpt id=\"p1\">*</bpt>psize<ept id=\"p1\">*</ept> values are an optional method of specifying the size and position opf the control.","pos":[13466,13570],"source":" The `ppt` and *psize* values are an optional method of specifying the size and position opf the control."},{"content":"<bpt id=\"p1\">*</bpt>psize<ept id=\"p1\">*</ept>","pos":[13577,13584],"source":"*psize*"},{"content":"A pointer to a <bpt id=\"p1\">**</bpt>SIZE<ept id=\"p1\">**</ept> structure that contains the size of the control.","pos":[13588,13660],"source":" A pointer to a **SIZE** structure that contains the size of the control."},{"content":"The upper-left corner is determined by the value of <ph id=\"ph1\">`ppt`</ph>.","pos":[13661,13719],"source":" The upper-left corner is determined by the value of `ppt`."},{"content":"The <ph id=\"ph1\">`ppt`</ph> and <bpt id=\"p1\">*</bpt>psize<ept id=\"p1\">*</ept> values are an optional method of specifying the size and position opf the control.","pos":[13720,13824],"source":" The `ppt` and *psize* values are an optional method of specifying the size and position opf the control."},{"pos":[13834,13846],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[13850,13877],"content":"A standard <ph id=\"ph1\">`HRESULT`</ph> value.","source":"A standard `HRESULT` value."},{"pos":[13887,13894],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[13898,13976],"content":"Only a subset of the Windows <ph id=\"ph1\">`dwStyle`</ph> flags are supported by <ph id=\"ph2\">`CreateControl`</ph>:","source":"Only a subset of the Windows `dwStyle` flags are supported by `CreateControl`:"},{"content":"<bpt id=\"p1\">**</bpt>WS_VISIBLE<ept id=\"p1\">**</ept> Creates a window that is initially visible.","pos":[13984,14042],"source":"**WS_VISIBLE** Creates a window that is initially visible."},{"content":"Required if you want the control to be visible immediately, like ordinary windows.","pos":[14043,14125]},{"content":"<bpt id=\"p1\">**</bpt>WS_DISABLED<ept id=\"p1\">**</ept> Creates a window that is initially disabled.","pos":[14133,14193],"source":"**WS_DISABLED** Creates a window that is initially disabled."},{"content":"A disabled window cannot receive input from the user.","pos":[14194,14247]},{"content":"Can be set if the control has an Enabled property.","pos":[14248,14298]},{"content":"<ph id=\"ph1\">`WS_BORDER`</ph> Creates a window with a thin-line border.","pos":[14306,14359],"source":"`WS_BORDER` Creates a window with a thin-line border."},{"content":"Can be set if control has a BorderStyle property.","pos":[14360,14409]},{"content":"<bpt id=\"p1\">**</bpt>WS_GROUP<ept id=\"p1\">**</ept> Specifies the first control of a group of controls.","pos":[14417,14481],"source":"**WS_GROUP** Specifies the first control of a group of controls."},{"content":"The user can change the keyboard focus from one control in the group to the next by using the direction keys.","pos":[14482,14591]},{"content":"All controls defined with the <bpt id=\"p1\">**</bpt>WS_GROUP<ept id=\"p1\">**</ept> style after the first control belong to the same group.","pos":[14592,14690],"source":" All controls defined with the **WS_GROUP** style after the first control belong to the same group."},{"content":"The next control with the <bpt id=\"p1\">**</bpt>WS_GROUP<ept id=\"p1\">**</ept> style ends the group and starts the next group.","pos":[14691,14777],"source":" The next control with the **WS_GROUP** style ends the group and starts the next group."},{"content":"<bpt id=\"p1\">**</bpt>WS_TABSTOP<ept id=\"p1\">**</ept> Specifies a control that can receive the keyboard focus when the user presses the TAB key.","pos":[14785,14890],"source":"**WS_TABSTOP** Specifies a control that can receive the keyboard focus when the user presses the TAB key."},{"content":"Pressing the TAB key changes the keyboard focus to the next control of the <bpt id=\"p1\">**</bpt>WS_TABSTOP<ept id=\"p1\">**</ept> style.","pos":[14891,14987],"source":" Pressing the TAB key changes the keyboard focus to the next control of the **WS_TABSTOP** style."},{"content":"Use the second overload to create default-sized controls.","pos":[14994,15051]},{"pos":[15061,15140],"content":"<bpt id=\"p1\">&lt;a name=\"colecontrolsite__destroycontrol\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  COleControlSite::DestroyControl","linkify":"<a name=\"colecontrolsite__destroycontrol\"></a>  COleControlSite::DestroyControl","source":"<a name=\"colecontrolsite__destroycontrol\"></a>  COleControlSite::DestroyControl"},{"pos":[15144,15182],"content":"Destroys the <ph id=\"ph1\">`COleControlSite`</ph> object.","source":"Destroys the `COleControlSite` object."},{"pos":[15238,15250],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Nonzero if successful, otherwise 0.","pos":[15254,15289]},{"pos":[15299,15306],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Once completed, the object is freed from memory and any pointers to the object are no longer valid.","pos":[15310,15409]},{"pos":[15419,15482],"content":"<bpt id=\"p1\">&lt;a name=\"colecontrolsite__doverb\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  COleControlSite::DoVerb","linkify":"<a name=\"colecontrolsite__doverb\"></a>  COleControlSite::DoVerb","source":"<a name=\"colecontrolsite__doverb\"></a>  COleControlSite::DoVerb"},{"content":"Executes the specified verb.","pos":[15486,15514]},{"pos":[15606,15616],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Specifies the verb to execute.","pos":[15631,15661]},{"content":"It can include one of the following:","pos":[15662,15698]},{"content":"Value","pos":[15705,15710]},{"content":"Meaning","pos":[15711,15718]},{"content":"Symbol","pos":[15719,15725]},{"content":"0","pos":[15773,15774]},{"content":"Primary verb","pos":[15775,15787]},{"content":"-1","pos":[15811,15813]},{"content":"Secondary verb","pos":[15814,15828]},{"content":"(None)","pos":[15829,15835]},{"content":"1","pos":[15840,15841]},{"content":"Displays the object for editing.","pos":[15842,15874]},{"content":"-2","pos":[15895,15897]},{"content":"Edits the item in a separate window.","pos":[15898,15934]},{"content":"-3","pos":[15955,15957]},{"content":"Hides the object.","pos":[15958,15975]},{"content":"-4","pos":[15996,15998]},{"content":"Activates a control in-place.","pos":[15999,16028]},{"content":"-5","pos":[16055,16057]},{"content":"Activates a control in-place, without additional user interface elements.","pos":[16058,16131]},{"pos":[16132,16160],"content":"<bpt id=\"p1\">**</bpt>OLEIVERB_INPLACEACTIVATE<ept id=\"p1\">**</ept>","source":"**OLEIVERB_INPLACEACTIVATE**"},{"content":"-7","pos":[16165,16167]},{"content":"Display the control's properties.","pos":[16168,16201]},{"pos":[16202,16225],"content":"<bpt id=\"p1\">**</bpt>OLEIVERB_PROPERTIES<ept id=\"p1\">**</ept>","source":"**OLEIVERB_PROPERTIES**"},{"content":"Pointer to the message that caused the item to be activated.","pos":[16244,16304]},{"pos":[16314,16326],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[16330,16357],"content":"A standard <ph id=\"ph1\">`HRESULT`</ph> value.","source":"A standard `HRESULT` value."},{"pos":[16367,16374],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This function directly calls through the control's <ph id=\"ph1\">`IOleObject`</ph> interface to execute the specified verb.","pos":[16378,16482],"source":"This function directly calls through the control's `IOleObject` interface to execute the specified verb."},{"content":"If an exception is thrown as a result of this function call, an <ph id=\"ph1\">`HRESULT`</ph> error code is returned.","pos":[16483,16580],"source":" If an exception is thrown as a result of this function call, an `HRESULT` error code is returned."},{"pos":[16587,16753],"content":"For more information, see <bpt id=\"p1\">[</bpt>IOleObject::DoVerb<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms694508)</ept> in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"For more information, see [IOleObject::DoVerb](http://msdn.microsoft.com/library/windows/desktop/ms694508) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"pos":[16763,16832],"content":"<bpt id=\"p1\">&lt;a name=\"colecontrolsite__enabledsc\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  COleControlSite::EnableDSC","linkify":"<a name=\"colecontrolsite__enabledsc\"></a>  COleControlSite::EnableDSC","source":"<a name=\"colecontrolsite__enabledsc\"></a>  COleControlSite::EnableDSC"},{"content":"Enables data sourcing for the control site.","pos":[16836,16879]},{"pos":[16930,16937],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Called by the framework to enable and initialize data sourcing for the control site.","pos":[16941,17025]},{"content":"Override this function to provide customized behavior.","pos":[17026,17080]},{"pos":[17090,17165],"content":"<bpt id=\"p1\">&lt;a name=\"colecontrolsite__enablewindow\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  COleControlSite::EnableWindow","linkify":"<a name=\"colecontrolsite__enablewindow\"></a>  COleControlSite::EnableWindow","source":"<a name=\"colecontrolsite__enablewindow\"></a>  COleControlSite::EnableWindow"},{"content":"Enables or disables mouse and keyboard input to the control site.","pos":[17169,17234]},{"pos":[17300,17310],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Specifies whether to enable or disable the window: <bpt id=\"p1\">**</bpt>TRUE<ept id=\"p1\">**</ept> if window input is to be enabled, otherwise <bpt id=\"p2\">**</bpt>FALSE<ept id=\"p2\">**</ept>.","pos":[17327,17441],"source":" Specifies whether to enable or disable the window: **TRUE** if window input is to be enabled, otherwise **FALSE**."},{"pos":[17451,17463],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Nonzero if the window was previously disabled, otherwise 0.","pos":[17467,17526]},{"pos":[17536,17611],"content":"<bpt id=\"p1\">&lt;a name=\"colecontrolsite__freezeevents\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  COleControlSite::FreezeEvents","linkify":"<a name=\"colecontrolsite__freezeevents\"></a>  COleControlSite::FreezeEvents","source":"<a name=\"colecontrolsite__freezeevents\"></a>  COleControlSite::FreezeEvents"},{"content":"Specifies whether the control site will handle or ignore events fired from a control.","pos":[17615,17700]},{"pos":[17758,17768],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Specifies whether the control site wishes to stop accepting events.","pos":[17785,17852]},{"content":"Nonzero if the control is not accepting events; otherwise zero.","pos":[17853,17916]},{"pos":[17926,17933],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"If <ph id=\"ph1\">`bFreeze`</ph> is <bpt id=\"p1\">**</bpt>TRUE<ept id=\"p1\">**</ept>, the control site requests the control to stop fring events.","pos":[17937,18022],"source":"If `bFreeze` is **TRUE**, the control site requests the control to stop fring events."},{"content":"If <ph id=\"ph1\">`bFreeze`</ph> is <bpt id=\"p1\">**</bpt>FALSE<ept id=\"p1\">**</ept>, the control site requests the control to continue firing events.","pos":[18023,18114],"source":" If `bFreeze` is **FALSE**, the control site requests the control to continue firing events."},{"pos":[18122,18302],"content":"[!NOTE]\n The control is not required to stop firing events if requested by the control site. It can continue firing but all subsequent events will be ignored by the control site.","leadings":["","> "],"nodes":[{"content":" The control is not required to stop firing events if requested by the control site. It can continue firing but all subsequent events will be ignored by the control site.","pos":[8,178],"nodes":[{"content":"The control is not required to stop firing events if requested by the control site.","pos":[1,84]},{"content":"It can continue firing but all subsequent events will be ignored by the control site.","pos":[85,170]}]}]},{"pos":[18312,18391],"content":"<bpt id=\"p1\">&lt;a name=\"colecontrolsite__getcontrolinfo\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  COleControlSite::GetControlInfo","linkify":"<a name=\"colecontrolsite__getcontrolinfo\"></a>  COleControlSite::GetControlInfo","source":"<a name=\"colecontrolsite__getcontrolinfo\"></a>  COleControlSite::GetControlInfo"},{"content":"Retrieves information about a control's keyboard mnemonics and keyboard behavior.","pos":[18395,18476]},{"pos":[18524,18531],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[18535,18622],"content":"The information is stored in <bpt id=\"p1\">[</bpt>COleControlSite::m_ctlInfo<ept id=\"p1\">](#colecontrolsite__m_ctlinfo)</ept>.","source":"The information is stored in [COleControlSite::m_ctlInfo](#colecontrolsite__m_ctlinfo)."},{"pos":[18632,18709],"content":"<bpt id=\"p1\">&lt;a name=\"colecontrolsite__getdefbtncode\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  COleControlSite::GetDefBtnCode","linkify":"<a name=\"colecontrolsite__getdefbtncode\"></a>  COleControlSite::GetDefBtnCode","source":"<a name=\"colecontrolsite__getdefbtncode\"></a>  COleControlSite::GetDefBtnCode"},{"content":"Determines if the control is a default push button.","pos":[18713,18764]},{"pos":[18812,18824],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Can be one of the following values:","pos":[18828,18863]},{"pos":[18871,18938],"content":"<bpt id=\"p1\">**</bpt>DLGC_DEFPUSHBUTTON<ept id=\"p1\">**</ept> Control is the default button in the dialog.","source":"**DLGC_DEFPUSHBUTTON** Control is the default button in the dialog."},{"pos":[18946,19019],"content":"<bpt id=\"p1\">**</bpt>DLGC_UNDEFPUSHBUTTON<ept id=\"p1\">**</ept> Control is not the default button in the dialog.","source":"**DLGC_UNDEFPUSHBUTTON** Control is not the default button in the dialog."},{"pos":[19027,19057],"content":"<bpt id=\"p1\">**</bpt>0<ept id=\"p1\">**</ept> Control is not a button.","source":"**0** Control is not a button."},{"pos":[19067,19142],"content":"<bpt id=\"p1\">&lt;a name=\"colecontrolsite__getdlgctrlid\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  COleControlSite::GetDlgCtrlID","linkify":"<a name=\"colecontrolsite__getdlgctrlid\"></a>  COleControlSite::GetDlgCtrlID","source":"<a name=\"colecontrolsite__getdlgctrlid\"></a>  COleControlSite::GetDlgCtrlID"},{"content":"Retrieves the identifier of the control.","pos":[19146,19186]},{"pos":[19248,19260],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The dialog item identifier of the control.","pos":[19264,19306]},{"pos":[19316,19389],"content":"<bpt id=\"p1\">&lt;a name=\"colecontrolsite__geteventiid\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  COleControlSite::GetEventIID","linkify":"<a name=\"colecontrolsite__geteventiid\"></a>  COleControlSite::GetEventIID","source":"<a name=\"colecontrolsite__geteventiid\"></a>  COleControlSite::GetEventIID"},{"content":"Retrieves a pointer to the control's default event interface.","pos":[19393,19454]},{"pos":[19508,19518],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"A pointer to an interface ID.","pos":[19532,19561]},{"pos":[19571,19583],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Nonzero if successful, otherwise 0.","pos":[19587,19622]},{"content":"If successful, <ph id=\"ph1\">`piid`</ph> contains the interface ID for the control's default event interface.","pos":[19623,19713],"source":" If successful, `piid` contains the interface ID for the control's default event interface."},{"pos":[19723,19794],"content":"<bpt id=\"p1\">&lt;a name=\"colecontrolsite__getexstyle\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  COleControlSite::GetExStyle","linkify":"<a name=\"colecontrolsite__getexstyle\"></a>  COleControlSite::GetExStyle","source":"<a name=\"colecontrolsite__getexstyle\"></a>  COleControlSite::GetExStyle"},{"content":"Retrieves the window's extended styles.","pos":[19798,19837]},{"pos":[19899,19911],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The control window's extended styles.","pos":[19915,19952]},{"pos":[19962,19969],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[19973,20066],"content":"To retrieve the regular styles, call <bpt id=\"p1\">[</bpt>COleControlSite::GetStyle<ept id=\"p1\">](#colecontrolsite__getstyle)</ept>.","source":"To retrieve the regular styles, call [COleControlSite::GetStyle](#colecontrolsite__getstyle)."},{"pos":[20076,20149],"content":"<bpt id=\"p1\">&lt;a name=\"colecontrolsite__getproperty\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  COleControlSite::GetProperty","linkify":"<a name=\"colecontrolsite__getproperty\"></a>  COleControlSite::GetProperty","source":"<a name=\"colecontrolsite__getproperty\"></a>  COleControlSite::GetProperty"},{"pos":[20153,20203],"content":"Gets the control property specified by <ph id=\"ph1\">`dwDispID`</ph>.","source":"Gets the control property specified by `dwDispID`."},{"pos":[20327,20337],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Identifies the dispatch ID of the property, found on the control's default <ph id=\"ph1\">`IDispatch`</ph> interface, to be retrieved.","pos":[20355,20469],"source":" Identifies the dispatch ID of the property, found on the control's default `IDispatch` interface, to be retrieved."},{"content":"Specifies the type of the property to be retrieved.","pos":[20488,20539]},{"content":"For possible values, see the Remarks section for <bpt id=\"p1\">[</bpt>COleDispatchDriver::InvokeHelper<ept id=\"p1\">](../../mfc/reference/coledispatchdriver-class.md#coledispatchdriver__invokehelper)</ept>.","pos":[20540,20706],"source":" For possible values, see the Remarks section for [COleDispatchDriver::InvokeHelper](../../mfc/reference/coledispatchdriver-class.md#coledispatchdriver__invokehelper)."},{"content":"Address of the variable that will receive the property value.","pos":[20725,20786]},{"content":"It must match the type specified by <ph id=\"ph1\">`vtProp`</ph>.","pos":[20787,20832],"source":" It must match the type specified by `vtProp`."},{"pos":[20842,20849],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[20853,20892],"content":"The value is returned through <ph id=\"ph1\">`pvProp`</ph>.","source":"The value is returned through `pvProp`."},{"pos":[20902,20969],"content":"<bpt id=\"p1\">&lt;a name=\"colecontrolsite__getstyle\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  COleControlSite::GetStyle","linkify":"<a name=\"colecontrolsite__getstyle\"></a>  COleControlSite::GetStyle","source":"<a name=\"colecontrolsite__getstyle\"></a>  COleControlSite::GetStyle"},{"content":"Retrieves the styles of the control site.","pos":[20973,21014]},{"pos":[21074,21086],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The window's styles.","pos":[21090,21110]},{"pos":[21120,21127],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"For a list of possible values, see <bpt id=\"p1\">[</bpt>Windows Styles<ept id=\"p1\">](../../mfc/reference/window-styles.md)</ept>.","pos":[21131,21221],"source":"For a list of possible values, see [Windows Styles](../../mfc/reference/window-styles.md)."},{"content":"To retrieve the extended styles of the control site, call <bpt id=\"p1\">[</bpt>COleControlSite::GetExStyle<ept id=\"p1\">](#colecontrolsite__getexstyle)</ept>.","pos":[21222,21340],"source":" To retrieve the extended styles of the control site, call [COleControlSite::GetExStyle](#colecontrolsite__getexstyle)."},{"pos":[21350,21427],"content":"<bpt id=\"p1\">&lt;a name=\"colecontrolsite__getwindowtext\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  COleControlSite::GetWindowText","linkify":"<a name=\"colecontrolsite__getwindowtext\"></a>  COleControlSite::GetWindowText","source":"<a name=\"colecontrolsite__getwindowtext\"></a>  COleControlSite::GetWindowText"},{"content":"Retrieves the current text of the control.","pos":[21431,21473]},{"pos":[21549,21559],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"A reference to a <ph id=\"ph1\">`CString`</ph> object that contains the current text of the control.","pos":[21572,21652],"source":" A reference to a `CString` object that contains the current text of the control."},{"pos":[21662,21669],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"If the control supports the Caption stock property, this value is returned.","pos":[21673,21748]},{"content":"If the Caption stock property is not supported, the value for the Text property is returned.","pos":[21749,21841]},{"pos":[21851,21926],"content":"<bpt id=\"p1\">&lt;a name=\"colecontrolsite__invokehelper\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  COleControlSite::InvokeHelper","linkify":"<a name=\"colecontrolsite__invokehelper\"></a>  COleControlSite::InvokeHelper","source":"<a name=\"colecontrolsite__invokehelper\"></a>  COleControlSite::InvokeHelper"},{"pos":[21930,22023],"content":"Invokes the method or property specified by <ph id=\"ph1\">`dwDispID`</ph>, in the context specified by <ph id=\"ph2\">`wFlags`</ph>.","source":"Invokes the method or property specified by `dwDispID`, in the context specified by `wFlags`."},{"pos":[22202,22212],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Identifies the dispatch ID of the property or method, found on the control's <ph id=\"ph1\">`IDispatch`</ph> interface, to be invoked.","pos":[22230,22344],"source":" Identifies the dispatch ID of the property or method, found on the control's `IDispatch` interface, to be invoked."},{"content":"Flags describing the context of the call to IDispatch::Invoke.","pos":[22363,22425]},{"content":"For possible <ph id=\"ph1\">`wFlags`</ph> values, see <ph id=\"ph2\">`IDispatch::Invoke`</ph> in the <ph id=\"ph3\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","pos":[22426,22539],"source":" For possible `wFlags` values, see `IDispatch::Invoke` in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"content":"Specifies the type of the return value.","pos":[22557,22596]},{"content":"For possible values, see the Remarks section for <bpt id=\"p1\">[</bpt>COleDispatchDriver::InvokeHelper<ept id=\"p1\">](../../mfc/reference/coledispatchdriver-class.md#coledispatchdriver__invokehelper)</ept>.","pos":[22597,22763],"source":" For possible values, see the Remarks section for [COleDispatchDriver::InvokeHelper](../../mfc/reference/coledispatchdriver-class.md#coledispatchdriver__invokehelper)."},{"content":"Address of the variable that will receive the property value or return value.","pos":[22781,22858]},{"content":"It must match the type specified by <ph id=\"ph1\">`vtRet`</ph>.","pos":[22859,22903],"source":" It must match the type specified by `vtRet`."},{"content":"Pointer to a null-terminated string of bytes specifying the types of the parameters following <ph id=\"ph1\">`pbParamInfo`</ph>.","pos":[22927,23035],"source":" Pointer to a null-terminated string of bytes specifying the types of the parameters following `pbParamInfo`."},{"content":"For possible values, see the Remarks section for <bpt id=\"p1\">[</bpt>COleDispatchDriver::InvokeHelper<ept id=\"p1\">](../../mfc/reference/coledispatchdriver-class.md#coledispatchdriver__invokehelper)</ept>.","pos":[23036,23202],"source":" For possible values, see the Remarks section for [COleDispatchDriver::InvokeHelper](../../mfc/reference/coledispatchdriver-class.md#coledispatchdriver__invokehelper)."},{"content":"<bpt id=\"p1\">*</bpt>...<ept id=\"p1\">*</ept>","pos":[23209,23214],"source":"*...*"},{"content":"Variable list of parameters, of types specified in <ph id=\"ph1\">`pbParamInfo`</ph>.","pos":[23218,23283],"source":" Variable list of parameters, of types specified in `pbParamInfo`."},{"pos":[23293,23300],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The <ph id=\"ph1\">`pbParamInfo`</ph> parameter specifies the types of the parameters passed to the method or property.","pos":[23304,23403],"source":"The `pbParamInfo` parameter specifies the types of the parameters passed to the method or property."},{"content":"The variable list of arguments is represented by ... in the syntax declaration.","pos":[23404,23483]},{"content":"This function converts the parameters to <bpt id=\"p1\">**</bpt>VARIANTARG<ept id=\"p1\">**</ept> values, then invokes the <bpt id=\"p2\">**</bpt>IDispatch::Invoke<ept id=\"p2\">**</ept> method on the control.","pos":[23490,23615],"source":"This function converts the parameters to **VARIANTARG** values, then invokes the **IDispatch::Invoke** method on the control."},{"content":"If the call to <bpt id=\"p1\">**</bpt>IDispatch::Invoke<ept id=\"p1\">**</ept> fails, this function will throw an exception.","pos":[23616,23698],"source":" If the call to **IDispatch::Invoke** fails, this function will throw an exception."},{"content":"If the status code returned by <bpt id=\"p1\">**</bpt>IDispatch::Invoke<ept id=\"p1\">**</ept> is <ph id=\"ph1\">`DISP_E_EXCEPTION`</ph>, this function throws a <bpt id=\"p2\">**</bpt>COleDispatchException<ept id=\"p2\">**</ept> object, otherwise it throws a <ph id=\"ph2\">`COleException`</ph>.","pos":[23699,23870],"source":" If the status code returned by **IDispatch::Invoke** is `DISP_E_EXCEPTION`, this function throws a **COleDispatchException** object, otherwise it throws a `COleException`."},{"pos":[23880,23957],"content":"<bpt id=\"p1\">&lt;a name=\"colecontrolsite__invokehelperv\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  COleControlSite::InvokeHelperV","linkify":"<a name=\"colecontrolsite__invokehelperv\"></a>  COleControlSite::InvokeHelperV","source":"<a name=\"colecontrolsite__invokehelperv\"></a>  COleControlSite::InvokeHelperV"},{"pos":[23961,24054],"content":"Invokes the method or property specified by <ph id=\"ph1\">`dwDispID`</ph>, in the context specified by <ph id=\"ph2\">`wFlags`</ph>.","source":"Invokes the method or property specified by `dwDispID`, in the context specified by `wFlags`."},{"pos":[24242,24252],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Identifies the dispatch ID of the property or method, found on the control's <ph id=\"ph1\">`IDispatch`</ph> interface, to be invoked.","pos":[24270,24384],"source":" Identifies the dispatch ID of the property or method, found on the control's `IDispatch` interface, to be invoked."},{"content":"Flags describing the context of the call to IDispatch::Invoke.","pos":[24403,24465]},{"content":"Specifies the type of the return value.","pos":[24483,24522]},{"content":"For possible values, see the Remarks section for <bpt id=\"p1\">[</bpt>COleDispatchDriver::InvokeHelper<ept id=\"p1\">](../../mfc/reference/coledispatchdriver-class.md#coledispatchdriver__invokehelper)</ept>.","pos":[24523,24689],"source":" For possible values, see the Remarks section for [COleDispatchDriver::InvokeHelper](../../mfc/reference/coledispatchdriver-class.md#coledispatchdriver__invokehelper)."},{"content":"Address of the variable that will receive the property value or return value.","pos":[24707,24784]},{"content":"It must match the type specified by <ph id=\"ph1\">`vtRet`</ph>.","pos":[24785,24829],"source":" It must match the type specified by `vtRet`."},{"content":"Pointer to a null-terminated string of bytes specifying the types of the parameters following <ph id=\"ph1\">`pbParamInfo`</ph>.","pos":[24853,24961],"source":" Pointer to a null-terminated string of bytes specifying the types of the parameters following `pbParamInfo`."},{"content":"For possible values, see the Remarks section for <bpt id=\"p1\">[</bpt>COleDispatchDriver::InvokeHelper<ept id=\"p1\">](../../mfc/reference/coledispatchdriver-class.md#coledispatchdriver__invokehelper)</ept>.","pos":[24962,25128],"source":" For possible values, see the Remarks section for [COleDispatchDriver::InvokeHelper](../../mfc/reference/coledispatchdriver-class.md#coledispatchdriver__invokehelper)."},{"content":"Pointer to a variable argument list.","pos":[25148,25184]},{"pos":[25194,25201],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The <ph id=\"ph1\">`pbParamInfo`</ph> parameter specifies the types of the parameters passed to the method or property.","pos":[25205,25304],"source":"The `pbParamInfo` parameter specifies the types of the parameters passed to the method or property."},{"content":"Extra parameters for the method or property being invoked can be passed using the <bpt id=\"p1\">*</bpt>va_list<ept id=\"p1\">*</ept> parameter.","pos":[25305,25407],"source":" Extra parameters for the method or property being invoked can be passed using the *va_list* parameter."},{"pos":[25414,25484],"content":"Typically, this function is called by <ph id=\"ph1\">`COleControlSite::InvokeHelper`</ph>.","source":"Typically, this function is called by `COleControlSite::InvokeHelper`."},{"pos":[25494,25575],"content":"<bpt id=\"p1\">&lt;a name=\"colecontrolsite__isdefaultbutton\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  COleControlSite::IsDefaultButton","linkify":"<a name=\"colecontrolsite__isdefaultbutton\"></a>  COleControlSite::IsDefaultButton","source":"<a name=\"colecontrolsite__isdefaultbutton\"></a>  COleControlSite::IsDefaultButton"},{"content":"Determines if the control is the default button.","pos":[25579,25627]},{"pos":[25676,25688],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Nonzero if the control is the default button on the window, otherwise zero.","pos":[25692,25767]},{"pos":[25777,25858],"content":"<bpt id=\"p1\">&lt;a name=\"colecontrolsite__iswindowenabled\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  COleControlSite::IsWindowEnabled","linkify":"<a name=\"colecontrolsite__iswindowenabled\"></a>  COleControlSite::IsWindowEnabled","source":"<a name=\"colecontrolsite__iswindowenabled\"></a>  COleControlSite::IsWindowEnabled"},{"content":"Determines if the control site is enabled.","pos":[25862,25904]},{"pos":[25970,25982],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Nonzero if the control is enabled, otherwise zero.","pos":[25986,26036]},{"pos":[26046,26053],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The value is retrieved from the control's Enabled stock property.","pos":[26057,26122]},{"pos":[26132,26213],"content":"<bpt id=\"p1\">&lt;a name=\"colecontrolsite__m_biswindowless\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  COleControlSite::m_bIsWindowless","linkify":"<a name=\"colecontrolsite__m_biswindowless\"></a>  COleControlSite::m_bIsWindowless","source":"<a name=\"colecontrolsite__m_biswindowless\"></a>  COleControlSite::m_bIsWindowless"},{"content":"Determines if the object is a windowless control.","pos":[26217,26266]},{"pos":[26315,26322],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Nonzero if the control has no window, otherwise zero.","pos":[26326,26379]},{"pos":[26389,26458],"content":"<bpt id=\"p1\">&lt;a name=\"colecontrolsite__m_ctlinfo\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  COleControlSite::m_ctlInfo","linkify":"<a name=\"colecontrolsite__m_ctlinfo\"></a>  COleControlSite::m_ctlInfo","source":"<a name=\"colecontrolsite__m_ctlinfo\"></a>  COleControlSite::m_ctlInfo"},{"content":"Information on how keyboard input is handled by the control.","pos":[26462,26522]},{"pos":[26572,26579],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[26583,26699],"content":"This information is stored in a <bpt id=\"p1\">[</bpt>CONTROLINFO<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms680734)</ept> structure.","source":"This information is stored in a [CONTROLINFO](http://msdn.microsoft.com/library/windows/desktop/ms680734) structure."},{"pos":[26709,26786],"content":"<bpt id=\"p1\">&lt;a name=\"colecontrolsite__m_dweventsink\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  COleControlSite::m_dwEventSink","linkify":"<a name=\"colecontrolsite__m_dweventsink\"></a>  COleControlSite::m_dwEventSink","source":"<a name=\"colecontrolsite__m_dweventsink\"></a>  COleControlSite::m_dwEventSink"},{"content":"Contains the connection point's cookie from the control's event sink.","pos":[26790,26859]},{"pos":[26907,26986],"content":"<bpt id=\"p1\">&lt;a name=\"colecontrolsite__m_dwmiscstatus\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  COleControlSite::m_dwMiscStatus","linkify":"<a name=\"colecontrolsite__m_dwmiscstatus\"></a>  COleControlSite::m_dwMiscStatus","source":"<a name=\"colecontrolsite__m_dwmiscstatus\"></a>  COleControlSite::m_dwMiscStatus"},{"content":"Contains miscellaneous information about the control.","pos":[26990,27043]},{"pos":[27092,27099],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[27103,27257],"content":"For more information, see <bpt id=\"p1\">[</bpt>OLEMISC<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms678497)</ept>in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"For more information, see [OLEMISC](http://msdn.microsoft.com/library/windows/desktop/ms678497)in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"pos":[27267,27354],"content":"<bpt id=\"p1\">&lt;a name=\"colecontrolsite__m_dwpropnotifysink\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  COleControlSite::m_dwPropNotifySink","linkify":"<a name=\"colecontrolsite__m_dwpropnotifysink\"></a>  COleControlSite::m_dwPropNotifySink","source":"<a name=\"colecontrolsite__m_dwpropnotifysink\"></a>  COleControlSite::m_dwPropNotifySink"},{"pos":[27358,27460],"content":"Contains the <bpt id=\"p1\">[</bpt>IPropertyNotifySink<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms692638)</ept> cookie.","source":"Contains the [IPropertyNotifySink](http://msdn.microsoft.com/library/windows/desktop/ms692638) cookie."},{"pos":[27513,27582],"content":"<bpt id=\"p1\">&lt;a name=\"colecontrolsite__m_dwstyle\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  COleControlSite::m_dwStyle","linkify":"<a name=\"colecontrolsite__m_dwstyle\"></a>  COleControlSite::m_dwStyle","source":"<a name=\"colecontrolsite__m_dwstyle\"></a>  COleControlSite::m_dwStyle"},{"content":"Contains the Window styles of the control.","pos":[27586,27628]},{"pos":[27672,27735],"content":"<bpt id=\"p1\">&lt;a name=\"colecontrolsite__m_hwnd\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  COleControlSite::m_hWnd","linkify":"<a name=\"colecontrolsite__m_hwnd\"></a>  COleControlSite::m_hWnd","source":"<a name=\"colecontrolsite__m_hwnd\"></a>  COleControlSite::m_hWnd"},{"pos":[27739,27816],"content":"Contains the <ph id=\"ph1\">`HWND`</ph> of the control, or <bpt id=\"p1\">**</bpt>NULL<ept id=\"p1\">**</ept> if the control is windowless.","source":"Contains the `HWND` of the control, or **NULL** if the control is windowless."},{"pos":[27856,27929],"content":"<bpt id=\"p1\">&lt;a name=\"colecontrolsite__m_iidevents\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  COleControlSite::m_iidEvents","linkify":"<a name=\"colecontrolsite__m_iidevents\"></a>  COleControlSite::m_iidEvents","source":"<a name=\"colecontrolsite__m_iidevents\"></a>  COleControlSite::m_iidEvents"},{"content":"Contains the interface ID of the control's default event sink interface.","pos":[27933,28005]},{"pos":[28049,28110],"content":"<bpt id=\"p1\">&lt;a name=\"colecontrolsite__m_nid\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  COleControlSite::m_nID","linkify":"<a name=\"colecontrolsite__m_nid\"></a>  COleControlSite::m_nID","source":"<a name=\"colecontrolsite__m_nid\"></a>  COleControlSite::m_nID"},{"content":"Contains the control's dialog item ID.","pos":[28114,28152]},{"pos":[28191,28272],"content":"<bpt id=\"p1\">&lt;a name=\"colecontrolsite__m_pactiveobject\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  COleControlSite::m_pActiveObject","linkify":"<a name=\"colecontrolsite__m_pactiveobject\"></a>  COleControlSite::m_pActiveObject","source":"<a name=\"colecontrolsite__m_pactiveobject\"></a>  COleControlSite::m_pActiveObject"},{"pos":[28276,28400],"content":"Contains the <bpt id=\"p1\">[</bpt>IOleInPlaceActiveObject<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms691299)</ept> interface of the control.","source":"Contains the [IOleInPlaceActiveObject](http://msdn.microsoft.com/library/windows/desktop/ms691299) interface of the control."},{"pos":[28469,28542],"content":"<bpt id=\"p1\">&lt;a name=\"colecontrolsite__m_pctrlcont\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  COleControlSite::m_pCtrlCont","linkify":"<a name=\"colecontrolsite__m_pctrlcont\"></a>  COleControlSite::m_pCtrlCont","source":"<a name=\"colecontrolsite__m_pctrlcont\"></a>  COleControlSite::m_pCtrlCont"},{"content":"Contains the control's container (representing the form).","pos":[28546,28603]},{"pos":[28665,28748],"content":"<bpt id=\"p1\">&lt;a name=\"colecontrolsite__m_pinplaceobject\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  COleControlSite::m_pInPlaceObject","linkify":"<a name=\"colecontrolsite__m_pinplaceobject\"></a>  COleControlSite::m_pInPlaceObject","source":"<a name=\"colecontrolsite__m_pinplaceobject\"></a>  COleControlSite::m_pInPlaceObject"},{"pos":[28752,28890],"content":"Contains the <ph id=\"ph1\">`IOleInPlaceObject`</ph> <bpt id=\"p1\">[</bpt>IOleInPlaceObject<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms692646)</ept> interface of the control.","source":"Contains the `IOleInPlaceObject` [IOleInPlaceObject](http://msdn.microsoft.com/library/windows/desktop/ms692646) interface of the control."},{"pos":[28954,29023],"content":"<bpt id=\"p1\">&lt;a name=\"colecontrolsite__m_pobject\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  COleControlSite::m_pObject","linkify":"<a name=\"colecontrolsite__m_pobject\"></a>  COleControlSite::m_pObject","source":"<a name=\"colecontrolsite__m_pobject\"></a>  COleControlSite::m_pObject"},{"pos":[29027,29089],"content":"Contains the <bpt id=\"p1\">**</bpt>IOleObjectInterface<ept id=\"p1\">**</ept> interface of the control.","source":"Contains the **IOleObjectInterface** interface of the control."},{"pos":[29139,29228],"content":"<bpt id=\"p1\">&lt;a name=\"colecontrolsite__m_pwindowlessobject\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  COleControlSite::m_pWindowlessObject","linkify":"<a name=\"colecontrolsite__m_pwindowlessobject\"></a>  COleControlSite::m_pWindowlessObject","source":"<a name=\"colecontrolsite__m_pwindowlessobject\"></a>  COleControlSite::m_pWindowlessObject"},{"pos":[29232,29389],"content":"Contains the <ph id=\"ph1\">`IOleInPlaceObjectWindowless`</ph><bpt id=\"p1\">[</bpt>IOleInPlaceObjectWindowless<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms687304)</ept> interface of the control.","source":"Contains the `IOleInPlaceObjectWindowless`[IOleInPlaceObjectWindowless](http://msdn.microsoft.com/library/windows/desktop/ms687304) interface of the control."},{"pos":[29466,29537],"content":"<bpt id=\"p1\">&lt;a name=\"colecontrolsite__m_pwndctrl\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  COleControlSite::m_pWndCtrl","linkify":"<a name=\"colecontrolsite__m_pwndctrl\"></a>  COleControlSite::m_pWndCtrl","source":"<a name=\"colecontrolsite__m_pwndctrl\"></a>  COleControlSite::m_pWndCtrl"},{"pos":[29541,29616],"content":"Contains a pointer to the <ph id=\"ph1\">`CWnd`</ph> object that represents the control itself.","source":"Contains a pointer to the `CWnd` object that represents the control itself."},{"pos":[29661,29724],"content":"<bpt id=\"p1\">&lt;a name=\"colecontrolsite__m_rect\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  COleControlSite::m_rect","linkify":"<a name=\"colecontrolsite__m_rect\"></a>  COleControlSite::m_rect","source":"<a name=\"colecontrolsite__m_rect\"></a>  COleControlSite::m_rect"},{"content":"Contains the bounds of the control, relative to the container's window.","pos":[29728,29799]},{"pos":[29840,29913],"content":"<bpt id=\"p1\">&lt;a name=\"colecontrolsite__modifystyle\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  COleControlSite::ModifyStyle","linkify":"<a name=\"colecontrolsite__modifystyle\"></a>  COleControlSite::ModifyStyle","source":"<a name=\"colecontrolsite__modifystyle\"></a>  COleControlSite::ModifyStyle"},{"content":"Modifies the styles of the control.","pos":[29917,29952]},{"pos":[30062,30072],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"The styles to be removed from the current window styles.","pos":[30090,30146]},{"content":"The styles to be added from the current window styles.","pos":[30164,30218]},{"content":"Window positioning flags.","pos":[30237,30262]},{"content":"For a list of possible values, see the <bpt id=\"p1\">[</bpt>SetWindowPos<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms633545)</ept> function in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","pos":[30263,30445],"source":" For a list of possible values, see the [SetWindowPos](http://msdn.microsoft.com/library/windows/desktop/ms633545) function in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"pos":[30455,30467],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Nonzero if the styles are changed, otherwise zero.","pos":[30471,30521]},{"pos":[30531,30538],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The control's stock Enabled property will be modified to match the setting for <bpt id=\"p1\">**</bpt>WS_DISABLED<ept id=\"p1\">**</ept>.","pos":[30542,30637],"source":"The control's stock Enabled property will be modified to match the setting for **WS_DISABLED**."},{"content":"The control's stock Border Style property will be modified to match the requested setting for <ph id=\"ph1\">`WS_BORDER`</ph>.","pos":[30638,30744],"source":" The control's stock Border Style property will be modified to match the requested setting for `WS_BORDER`."},{"content":"All other styles are applied directly to the control's window handle, if one is present.","pos":[30745,30833]},{"content":"Modifies the window styles of the control.","pos":[30840,30882]},{"content":"Styles to be added or removed can be combined by using the bitwise OR ( &amp;#124; ) operator.","pos":[30883,30973],"source":" Styles to be added or removed can be combined by using the bitwise OR ( &#124; ) operator."},{"content":"See the <bpt id=\"p1\">[</bpt>CreateWindow<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms632679)</ept> function in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph> for information about the available window styles.","pos":[30974,31175],"source":" See the [CreateWindow](http://msdn.microsoft.com/library/windows/desktop/ms632679) function in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)] for information about the available window styles."},{"pos":[31182,31336],"content":"If <ph id=\"ph1\">`nFlags`</ph> is nonzero, <ph id=\"ph2\">`ModifyStyle`</ph> calls the Win32 function <ph id=\"ph3\">`SetWindowPos`</ph>, and redraws the window by combining <ph id=\"ph4\">`nFlags`</ph> with the following four flags:","source":"If `nFlags` is nonzero, `ModifyStyle` calls the Win32 function `SetWindowPos`, and redraws the window by combining `nFlags` with the following four flags:"},{"pos":[31344,31382],"content":"<ph id=\"ph1\">`SWP_NOSIZE`</ph> Retains the current size.","source":"`SWP_NOSIZE` Retains the current size."},{"pos":[31390,31432],"content":"<ph id=\"ph1\">`SWP_NOMOVE`</ph> Retains the current position.","source":"`SWP_NOMOVE` Retains the current position."},{"pos":[31440,31483],"content":"<ph id=\"ph1\">`SWP_NOZORDER`</ph> Retains the current Z order.","source":"`SWP_NOZORDER` Retains the current Z order."},{"pos":[31491,31537],"content":"<ph id=\"ph1\">`SWP_NOACTIVATE`</ph> Does not activate the window.","source":"`SWP_NOACTIVATE` Does not activate the window."},{"pos":[31544,31636],"content":"To modify a window's extended styles, call <bpt id=\"p1\">[</bpt>ModifyStyleEx<ept id=\"p1\">](#colecontrolsite__modifystyleex)</ept>.","source":"To modify a window's extended styles, call [ModifyStyleEx](#colecontrolsite__modifystyleex)."},{"pos":[31646,31723],"content":"<bpt id=\"p1\">&lt;a name=\"colecontrolsite__modifystyleex\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  COleControlSite::ModifyStyleEx","linkify":"<a name=\"colecontrolsite__modifystyleex\"></a>  COleControlSite::ModifyStyleEx","source":"<a name=\"colecontrolsite__modifystyleex\"></a>  COleControlSite::ModifyStyleEx"},{"content":"Modifies the extended styles of the control.","pos":[31727,31771]},{"pos":[31883,31893],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"The extended styles to be removed from the current window styles.","pos":[31911,31976]},{"content":"The extended styles to be added from the current window styles.","pos":[31994,32057]},{"content":"Window positioning flags.","pos":[32076,32101]},{"content":"For a list of possible values, see the <bpt id=\"p1\">[</bpt>SetWindowPos<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms633545)</ept> function in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","pos":[32102,32284],"source":" For a list of possible values, see the [SetWindowPos](http://msdn.microsoft.com/library/windows/desktop/ms633545) function in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"pos":[32294,32306],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Nonzero if the styles are changed, otherwise zero.","pos":[32310,32360]},{"pos":[32370,32377],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The control's stock Appearance property will be modified to match the setting for <bpt id=\"p1\">**</bpt>WS_EX_CLIENTEDGE<ept id=\"p1\">**</ept>.","pos":[32381,32484],"source":"The control's stock Appearance property will be modified to match the setting for **WS_EX_CLIENTEDGE**."},{"content":"All other extended window styles are applied directly to the control's window handle, if one is present.","pos":[32485,32589]},{"content":"Modifies the window extended styles of the control site object.","pos":[32596,32659]},{"content":"Styles to be added or removed can be combined by using the bitwise OR ( &amp;#124; ) operator.","pos":[32660,32750],"source":" Styles to be added or removed can be combined by using the bitwise OR ( &#124; ) operator."},{"content":"See the <bpt id=\"p1\">[</bpt>CreateWindowEx<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms632680)</ept> function in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph> for information about the available window styles.","pos":[32751,32954],"source":" See the [CreateWindowEx](http://msdn.microsoft.com/library/windows/desktop/ms632680) function in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)] for information about the available window styles."},{"pos":[32961,33117],"content":"If <ph id=\"ph1\">`nFlags`</ph> is nonzero, <ph id=\"ph2\">`ModifyStyleEx`</ph> calls the Win32 function <ph id=\"ph3\">`SetWindowPos`</ph>, and redraws the window by combining <ph id=\"ph4\">`nFlags`</ph> with the following four flags:","source":"If `nFlags` is nonzero, `ModifyStyleEx` calls the Win32 function `SetWindowPos`, and redraws the window by combining `nFlags` with the following four flags:"},{"pos":[33125,33163],"content":"<ph id=\"ph1\">`SWP_NOSIZE`</ph> Retains the current size.","source":"`SWP_NOSIZE` Retains the current size."},{"pos":[33171,33213],"content":"<ph id=\"ph1\">`SWP_NOMOVE`</ph> Retains the current position.","source":"`SWP_NOMOVE` Retains the current position."},{"pos":[33221,33264],"content":"<ph id=\"ph1\">`SWP_NOZORDER`</ph> Retains the current Z order.","source":"`SWP_NOZORDER` Retains the current Z order."},{"pos":[33272,33318],"content":"<ph id=\"ph1\">`SWP_NOACTIVATE`</ph> Does not activate the window.","source":"`SWP_NOACTIVATE` Does not activate the window."},{"pos":[33325,33413],"content":"To modify a window's extended styles, call <bpt id=\"p1\">[</bpt>ModifyStyle<ept id=\"p1\">](#colecontrolsite__modifystyle)</ept>.","source":"To modify a window's extended styles, call [ModifyStyle](#colecontrolsite__modifystyle)."},{"pos":[33423,33494],"content":"<bpt id=\"p1\">&lt;a name=\"colecontrolsite__movewindow\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  COleControlSite::MoveWindow","linkify":"<a name=\"colecontrolsite__movewindow\"></a>  COleControlSite::MoveWindow","source":"<a name=\"colecontrolsite__movewindow\"></a>  COleControlSite::MoveWindow"},{"content":"Changes the position of the control.","pos":[33498,33534]},{"pos":[33646,33656],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"<bpt id=\"p1\">*</bpt>x<ept id=\"p1\">*</ept>","pos":[33660,33663],"source":"*x*"},{"content":"The new position of the left side of the window.","pos":[33667,33715]},{"content":"<bpt id=\"p1\">*</bpt>y<ept id=\"p1\">*</ept>","pos":[33722,33725],"source":"*y*"},{"content":"The new position of the top of the window.","pos":[33729,33771]},{"content":"The new width of the window","pos":[33790,33817]},{"content":"The new height of the window.","pos":[33837,33866]},{"pos":[33876,33953],"content":"<bpt id=\"p1\">&lt;a name=\"colecontrolsite__quickactivate\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  COleControlSite::QuickActivate","linkify":"<a name=\"colecontrolsite__quickactivate\"></a>  COleControlSite::QuickActivate","source":"<a name=\"colecontrolsite__quickactivate\"></a>  COleControlSite::QuickActivate"},{"content":"Quick activates the contained control.","pos":[33957,33995]},{"pos":[34050,34062],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Nonzero if the control site was activated, otherwise zero.","pos":[34066,34124]},{"pos":[34134,34141],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This function should be called only if the user is overriding the creation process of the control.","pos":[34145,34243]},{"content":"The <ph id=\"ph1\">`IPersist*::Load`</ph> and <ph id=\"ph2\">`IPersist*::InitNew`</ph> methods should be called after quick activation occurs.","pos":[34250,34352],"source":"The `IPersist*::Load` and `IPersist*::InitNew` methods should be called after quick activation occurs."},{"content":"The control should establish its connections to the container's sinks during quick activation.","pos":[34353,34447]},{"content":"However, these connections are not live until <ph id=\"ph1\">`IPersist*::Load`</ph> or <ph id=\"ph2\">`IPersist*::InitNew`</ph> has been called.","pos":[34448,34552],"source":" However, these connections are not live until `IPersist*::Load` or `IPersist*::InitNew` has been called."},{"pos":[34562,34643],"content":"<bpt id=\"p1\">&lt;a name=\"colecontrolsite__safesetproperty\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  COleControlSite::SafeSetProperty","linkify":"<a name=\"colecontrolsite__safesetproperty\"></a>  COleControlSite::SafeSetProperty","source":"<a name=\"colecontrolsite__safesetproperty\"></a>  COleControlSite::SafeSetProperty"},{"pos":[34647,34697],"content":"Sets the control property specified by <ph id=\"ph1\">`dwDispID`</ph>.","source":"Sets the control property specified by `dwDispID`."},{"pos":[34811,34821],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Identifies the dispatch ID of the property or method, found on the control's <ph id=\"ph1\">`IDispatch`</ph> interface, to be set.","pos":[34839,34949],"source":" Identifies the dispatch ID of the property or method, found on the control's `IDispatch` interface, to be set."},{"content":"Specifies the type of property to be set.","pos":[34968,35009]},{"content":"For possible values, see the Remarks section for <bpt id=\"p1\">[</bpt>COleDispatchDriver::InvokeHelper<ept id=\"p1\">](../../mfc/reference/coledispatchdriver-class.md#coledispatchdriver__invokehelper)</ept>.","pos":[35010,35176],"source":" For possible values, see the Remarks section for [COleDispatchDriver::InvokeHelper](../../mfc/reference/coledispatchdriver-class.md#coledispatchdriver__invokehelper)."},{"content":"<bpt id=\"p1\">*</bpt>...<ept id=\"p1\">*</ept>","pos":[35183,35188],"source":"*...*"},{"content":"A single parameter of the type specified by <ph id=\"ph1\">`vtProp`</ph>.","pos":[35192,35245],"source":" A single parameter of the type specified by `vtProp`."},{"pos":[35255,35267],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Nonzero if successful; otherwise zero.","pos":[35271,35309]},{"pos":[35319,35326],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[35334,35484],"content":"[!NOTE]\n Unlike `SetProperty` and `SetPropertyV`, if an error is encountered (such as trying to set a nonexistent property), no exception is thrown.","leadings":["","> "],"nodes":[{"content":"Unlike <ph id=\"ph1\">`SetProperty`</ph> and <ph id=\"ph2\">`SetPropertyV`</ph>, if an error is encountered (such as trying to set a nonexistent property), no exception is thrown.","pos":[9,148],"source":" Unlike `SetProperty` and `SetPropertyV`, if an error is encountered (such as trying to set a nonexistent property), no exception is thrown."}]},{"pos":[35494,35577],"content":"<bpt id=\"p1\">&lt;a name=\"colecontrolsite__setdefaultbutton\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  COleControlSite::SetDefaultButton","linkify":"<a name=\"colecontrolsite__setdefaultbutton\"></a>  COleControlSite::SetDefaultButton","source":"<a name=\"colecontrolsite__setdefaultbutton\"></a>  COleControlSite::SetDefaultButton"},{"content":"Sets the control as the default button.","pos":[35581,35620]},{"pos":[35683,35693],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Nonzero if the control should become the default button; otherwise zero.","pos":[35711,35783]},{"pos":[35793,35800],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[35808,35887],"content":"[!NOTE]\n The control must have the **OLEMISC_ACTSLIKEBUTTON** status bit set.","leadings":["","> "],"nodes":[{"content":"The control must have the <bpt id=\"p1\">**</bpt>OLEMISC_ACTSLIKEBUTTON<ept id=\"p1\">**</ept> status bit set.","pos":[9,77],"source":" The control must have the **OLEMISC_ACTSLIKEBUTTON** status bit set."}]},{"pos":[35897,35972],"content":"<bpt id=\"p1\">&lt;a name=\"colecontrolsite__setdlgctrlid\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  COleControlSite::SetDlgCtrlID","linkify":"<a name=\"colecontrolsite__setdlgctrlid\"></a>  COleControlSite::SetDlgCtrlID","source":"<a name=\"colecontrolsite__setdlgctrlid\"></a>  COleControlSite::SetDlgCtrlID"},{"content":"Changes the value of the control's dialog item identifier.","pos":[35976,36034]},{"pos":[36094,36104],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"The new identifier value.","pos":[36117,36142]},{"pos":[36152,36164],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"If successful, the previous dialog item identifier of the window; otherwise 0.","pos":[36168,36246]},{"pos":[36256,36263],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[36273,36340],"content":"<bpt id=\"p1\">&lt;a name=\"colecontrolsite__setfocus\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  COleControlSite::SetFocus","linkify":"<a name=\"colecontrolsite__setfocus\"></a>  COleControlSite::SetFocus","source":"<a name=\"colecontrolsite__setfocus\"></a>  COleControlSite::SetFocus"},{"content":"Sets focus to the control.","pos":[36344,36370]},{"pos":[36461,36471],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"<bpt id=\"p1\">*</bpt>lpmsg<ept id=\"p1\">*</ept>","pos":[36475,36482],"source":"*lpmsg*"},{"content":"A pointer to a <bpt id=\"p1\">[</bpt>MSG structure<ept id=\"p1\">](../../mfc/reference/msg-structure1.md)</ept>.","pos":[36486,36556],"source":" A pointer to a [MSG structure](../../mfc/reference/msg-structure1.md)."},{"content":"This structure contains the Windows message triggering the <ph id=\"ph1\">`SetFocus`</ph> request for the control contained in the current control site.","pos":[36557,36689],"source":" This structure contains the Windows message triggering the `SetFocus` request for the control contained in the current control site."},{"pos":[36699,36711],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A pointer to the window that previously had focus.","pos":[36715,36765]},{"pos":[36775,36848],"content":"<bpt id=\"p1\">&lt;a name=\"colecontrolsite__setproperty\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  COleControlSite::SetProperty","linkify":"<a name=\"colecontrolsite__setproperty\"></a>  COleControlSite::SetProperty","source":"<a name=\"colecontrolsite__setproperty\"></a>  COleControlSite::SetProperty"},{"pos":[36852,36902],"content":"Sets the control property specified by <ph id=\"ph1\">`dwDispID`</ph>.","source":"Sets the control property specified by `dwDispID`."},{"pos":[37012,37022],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Identifies the dispatch ID of the property or method, found on the control's <ph id=\"ph1\">`IDispatch`</ph> interface, to be set.","pos":[37040,37150],"source":" Identifies the dispatch ID of the property or method, found on the control's `IDispatch` interface, to be set."},{"content":"Specifies the type of property to be set.","pos":[37169,37210]},{"content":"For possible values, see the Remarks section for <bpt id=\"p1\">[</bpt>COleDispatchDriver::InvokeHelper<ept id=\"p1\">](../../mfc/reference/coledispatchdriver-class.md#coledispatchdriver__invokehelper)</ept>.","pos":[37211,37377],"source":" For possible values, see the Remarks section for [COleDispatchDriver::InvokeHelper](../../mfc/reference/coledispatchdriver-class.md#coledispatchdriver__invokehelper)."},{"content":"<bpt id=\"p1\">*</bpt>...<ept id=\"p1\">*</ept>","pos":[37384,37389],"source":"*...*"},{"content":"A single parameter of the type specified by <ph id=\"ph1\">`vtProp`</ph>.","pos":[37393,37446],"source":" A single parameter of the type specified by `vtProp`."},{"pos":[37456,37463],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[37467,37528],"content":"If <ph id=\"ph1\">`SetProperty`</ph> encounters an error, an exception is thrown.","source":"If `SetProperty` encounters an error, an exception is thrown."},{"content":"The type of exception is determined by the return value of the attempt to set the property or method.","pos":[37535,37636]},{"content":"If the return value is <ph id=\"ph1\">`DISP_E_EXCEPTION`</ph>, a <bpt id=\"p1\">**</bpt>COleDispatchExcpetion<ept id=\"p1\">**</ept> is thrown; otherwise a <ph id=\"ph2\">`COleException`</ph>.","pos":[37637,37747],"source":" If the return value is `DISP_E_EXCEPTION`, a **COleDispatchExcpetion** is thrown; otherwise a `COleException`."},{"pos":[37757,37832],"content":"<bpt id=\"p1\">&lt;a name=\"colecontrolsite__setpropertyv\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  COleControlSite::SetPropertyV","linkify":"<a name=\"colecontrolsite__setpropertyv\"></a>  COleControlSite::SetPropertyV","source":"<a name=\"colecontrolsite__setpropertyv\"></a>  COleControlSite::SetPropertyV"},{"pos":[37836,37886],"content":"Sets the control property specified by <ph id=\"ph1\">`dwDispID`</ph>.","source":"Sets the control property specified by `dwDispID`."},{"pos":[38005,38015],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Identifies the dispatch ID of the property or method, found on the control's <ph id=\"ph1\">`IDispatch`</ph> interface, to be set.","pos":[38033,38143],"source":" Identifies the dispatch ID of the property or method, found on the control's `IDispatch` interface, to be set."},{"content":"Specifies the type of property to be set.","pos":[38162,38203]},{"content":"For possible values, see the Remarks section for <bpt id=\"p1\">[</bpt>COleDispatchDriver::InvokeHelper<ept id=\"p1\">](../../mfc/reference/coledispatchdriver-class.md#coledispatchdriver__invokehelper)</ept>.","pos":[38204,38370],"source":" For possible values, see the Remarks section for [COleDispatchDriver::InvokeHelper](../../mfc/reference/coledispatchdriver-class.md#coledispatchdriver__invokehelper)."},{"content":"Pointer to the list of arguments.","pos":[38390,38423]},{"pos":[38433,38440],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Extra parameters for the method or property being invoked can be passeed using the <bpt id=\"p1\">*</bpt>arg_list<ept id=\"p1\">*</ept> parameter.","pos":[38444,38548],"source":"Extra parameters for the method or property being invoked can be passeed using the *arg_list* parameter."},{"content":"If <ph id=\"ph1\">`SetProperty`</ph> encounters an error, an exception is thrown.","pos":[38549,38610],"source":" If `SetProperty` encounters an error, an exception is thrown."},{"content":"The type of exception is determined by the return value of the attempt to set the property or method.","pos":[38617,38718]},{"content":"If the return value is <ph id=\"ph1\">`DISP_E_EXCEPTION`</ph>, a <bpt id=\"p1\">**</bpt>COleDispatchExcpetion<ept id=\"p1\">**</ept> is thrown; otherwise a <ph id=\"ph2\">`COleException`</ph>.","pos":[38719,38829],"source":" If the return value is `DISP_E_EXCEPTION`, a **COleDispatchExcpetion** is thrown; otherwise a `COleException`."},{"pos":[38839,38914],"content":"<bpt id=\"p1\">&lt;a name=\"colecontrolsite__setwindowpos\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  COleControlSite::SetWindowPos","linkify":"<a name=\"colecontrolsite__setwindowpos\"></a>  COleControlSite::SetWindowPos","source":"<a name=\"colecontrolsite__setwindowpos\"></a>  COleControlSite::SetWindowPos"},{"content":"Sets the size, position, and Z order of the control site.","pos":[38918,38975]},{"pos":[39134,39144],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"A pointer to the window.","pos":[39169,39193]},{"content":"<bpt id=\"p1\">*</bpt>x<ept id=\"p1\">*</ept>","pos":[39200,39203],"source":"*x*"},{"content":"The new position of the left side of the window.","pos":[39207,39255]},{"content":"<bpt id=\"p1\">*</bpt>y<ept id=\"p1\">*</ept>","pos":[39262,39265],"source":"*y*"},{"content":"The new position of the top of the window.","pos":[39269,39311]},{"content":"The new width of the window","pos":[39326,39353]},{"content":"The new height of the window.","pos":[39368,39397]},{"content":"Specifies the window sizing and positioning flags.","pos":[39416,39466]},{"content":"For possible values, see the Remarks section for <bpt id=\"p1\">[</bpt>SetWindowPos<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms633545)</ept> in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","pos":[39467,39650],"source":" For possible values, see the Remarks section for [SetWindowPos](http://msdn.microsoft.com/library/windows/desktop/ms633545) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"pos":[39660,39672],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Nonzero if successful, otherwise zero.","pos":[39676,39714]},{"pos":[39724,39801],"content":"<bpt id=\"p1\">&lt;a name=\"colecontrolsite__setwindowtext\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  COleControlSite::SetWindowText","linkify":"<a name=\"colecontrolsite__setwindowtext\"></a>  COleControlSite::SetWindowText","source":"<a name=\"colecontrolsite__setwindowtext\"></a>  COleControlSite::SetWindowText"},{"content":"Sets the text for the control site.","pos":[39805,39840]},{"pos":[39913,39923],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Pointer to a null-terminated string to be used as the new title or control text.","pos":[39943,40023]},{"pos":[40033,40040],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This function first attempts to set the Caption stock property.","pos":[40044,40107]},{"content":"If the Caption stock property is not supported, the Text property is set instead.","pos":[40108,40189]},{"pos":[40199,40270],"content":"<bpt id=\"p1\">&lt;a name=\"colecontrolsite__showwindow\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  COleControlSite::ShowWindow","linkify":"<a name=\"colecontrolsite__showwindow\"></a>  COleControlSite::ShowWindow","source":"<a name=\"colecontrolsite__showwindow\"></a>  COleControlSite::ShowWindow"},{"content":"Sets the window's show state.","pos":[40274,40303]},{"pos":[40367,40377],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Specifies how the control site is to be shown.","pos":[40395,40441]},{"content":"It must be one of the following values:","pos":[40442,40481]},{"pos":[40489,40559],"content":"<bpt id=\"p1\">**</bpt>SW_HIDE<ept id=\"p1\">**</ept> Hides this window and passes activation to another window.","source":"**SW_HIDE** Hides this window and passes activation to another window."},{"pos":[40567,40660],"content":"<bpt id=\"p1\">**</bpt>SW_MINIMIZE<ept id=\"p1\">**</ept> Minimizes the window and activates the top-level window in the system's list.","source":"**SW_MINIMIZE** Minimizes the window and activates the top-level window in the system's list."},{"content":"<bpt id=\"p1\">**</bpt>SW_RESTORE<ept id=\"p1\">**</ept> Activates and displays the window.","pos":[40668,40717],"source":"**SW_RESTORE** Activates and displays the window."},{"content":"If the window is minimized or maximized, Windows restores it to its original size and position.","pos":[40718,40813]},{"pos":[40821,40903],"content":"<bpt id=\"p1\">**</bpt>SW_SHOW<ept id=\"p1\">**</ept> Activates the window and displays it in its current size and position.","source":"**SW_SHOW** Activates the window and displays it in its current size and position."},{"pos":[40911,40991],"content":"<bpt id=\"p1\">**</bpt>SW_SHOWMAXIMIZED<ept id=\"p1\">**</ept> Activates the window and displays it as a maximized window.","source":"**SW_SHOWMAXIMIZED** Activates the window and displays it as a maximized window."},{"pos":[40999,41068],"content":"<bpt id=\"p1\">**</bpt>SW_SHOWMINIMIZED<ept id=\"p1\">**</ept> Activates the window and displays it as an icon.","source":"**SW_SHOWMINIMIZED** Activates the window and displays it as an icon."},{"content":"<bpt id=\"p1\">**</bpt>SW_SHOWMINNOACTIVE<ept id=\"p1\">**</ept> Displays the window as an icon.","pos":[41076,41130],"source":"**SW_SHOWMINNOACTIVE** Displays the window as an icon."},{"content":"The window that is currently active remains active.","pos":[41131,41182]},{"content":"<bpt id=\"p1\">**</bpt>SW_SHOWNA<ept id=\"p1\">**</ept> Displays the window in its current state.","pos":[41190,41245],"source":"**SW_SHOWNA** Displays the window in its current state."},{"content":"The window that is currently active remains active.","pos":[41246,41297]},{"content":"<bpt id=\"p1\">**</bpt>SW_SHOWNOACTIVATE<ept id=\"p1\">**</ept> Displays the window in its most recent size and position.","pos":[41305,41384],"source":"**SW_SHOWNOACTIVATE** Displays the window in its most recent size and position."},{"content":"The window that is currently active remains active.","pos":[41385,41436]},{"content":"<bpt id=\"p1\">**</bpt>SW_SHOWNORMAL<ept id=\"p1\">**</ept> Activates and displays the window.","pos":[41444,41496],"source":"**SW_SHOWNORMAL** Activates and displays the window."},{"content":"If the window is minimized or maximized, Windows restores it to its original size and position.","pos":[41497,41592]},{"pos":[41602,41614],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Nonzero if the window was previously visible; 0 if the window was previously hidden.","pos":[41618,41702]},{"pos":[41711,41719],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>CCmdTarget Class<ept id=\"p1\">](../../mfc/reference/ccmdtarget-class.md)</ept><ph id=\"ph1\"> </ph>","pos":[41723,41783],"source":"[CCmdTarget Class](../../mfc/reference/ccmdtarget-class.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Hierarchy Chart<ept id=\"p1\">](../../mfc/hierarchy-chart.md)</ept><ph id=\"ph1\"> </ph>","pos":[41786,41835],"source":" [Hierarchy Chart](../../mfc/hierarchy-chart.md) "},{"content":"<bpt id=\"p1\"> [</bpt>COleControlContainer Class<ept id=\"p1\">](../../mfc/reference/colecontrolcontainer-class.md)</ept>","pos":[41838,41918],"source":" [COleControlContainer Class](../../mfc/reference/colecontrolcontainer-class.md)"}],"content":"---\ntitle: \"COleControlSite Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"COleControlSite\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"COleControlSite class\"\nms.assetid: 43970644-5eab-434a-8ba6-56d144ff1e3f\ncaps.latest.revision: 24\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# COleControlSite Class\nProvides support for custom client-side control interfaces.  \n  \n## Syntax  \n  \n```  \nclass COleControlSite : public CCmdTarget  \n```  \n  \n## Members  \n  \n### Public Constructors  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[COleControlSite::COleControlSite](#colecontrolsite__colecontrolsite)|Constructs a `COleControlSite` object.|  \n  \n### Public Methods  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[COleControlSite::BindDefaultProperty](#colecontrolsite__binddefaultproperty)|Binds the default property of the hosted control to a data source.|  \n|[COleControlSite::BindProperty](#colecontrolsite__bindproperty)|Binds a property of the hosted control to a data source.|  \n|[COleControlSite::CreateControl](#colecontrolsite__createcontrol)|Creates a hosted ActiveX control.|  \n|[COleControlSite::DestroyControl](#colecontrolsite__destroycontrol)|Destroys the hosted control.|  \n|[COleControlSite::DoVerb](#colecontrolsite__doverb)|Executes a specific verb of the hosted control.|  \n|[COleControlSite::EnableDSC](#colecontrolsite__enabledsc)|Enables data sourcing for a control site.|  \n|[COleControlSite::EnableWindow](#colecontrolsite__enablewindow)|Enables the control site.|  \n|[COleControlSite::FreezeEvents](#colecontrolsite__freezeevents)|Specifies if the control site is accepting events.|  \n|[COleControlSite::GetDefBtnCode](#colecontrolsite__getdefbtncode)|Retrieves the default button code for the hosted control.|  \n|[COleControlSite::GetDlgCtrlID](#colecontrolsite__getdlgctrlid)|Retrieves the identifier of the control.|  \n|[COleControlSite::GetEventIID](#colecontrolsite__geteventiid)|Retrieves the ID of an event interface for a hosted control.|  \n|[COleControlSite::GetExStyle](#colecontrolsite__getexstyle)|Retrieves the extended styles of the control site.|  \n|[COleControlSite::GetProperty](#colecontrolsite__getproperty)|Retrieves a specific property of the hosted control.|  \n|[COleControlSite::GetStyle](#colecontrolsite__getstyle)|Retrieves the styles of the control site.|  \n|[COleControlSite::GetWindowText](#colecontrolsite__getwindowtext)|Retrieves the text of the hosted control.|  \n|[COleControlSite::InvokeHelper](#colecontrolsite__invokehelper)|Invoke a specific method of the hosted control.|  \n|[COleControlSite::InvokeHelperV](#colecontrolsite__invokehelperv)|Invoke a specific method of the hosted control with a variable list of arguments.|  \n|[COleControlSite::IsDefaultButton](#colecontrolsite__isdefaultbutton)|Determines if the control is the default button in the window.|  \n|[COleControlSite::IsWindowEnabled](#colecontrolsite__iswindowenabled)|Checks the visible state of the control site.|  \n|[COleControlSite::ModifyStyle](#colecontrolsite__modifystyle)|Modifies the current extended styles of the control site.|  \n|[COleControlSite::ModifyStyleEx](#colecontrolsite__modifystyleex)|Modifies the current styles of the control site.|  \n|[COleControlSite::MoveWindow](#colecontrolsite__movewindow)|Changes the position of the control site.|  \n|[COleControlSite::QuickActivate](#colecontrolsite__quickactivate)|Quick activates the hosted control.|  \n|[COleControlSite::SafeSetProperty](#colecontrolsite__safesetproperty)|Sets a property or method of the control without chance of throwing an exception.|  \n|[COleControlSite::SetDefaultButton](#colecontrolsite__setdefaultbutton)|Sets the default button in the window.|  \n|[COleControlSite::SetDlgCtrlID](#colecontrolsite__setdlgctrlid)|Retrieves the identifier of the control.|  \n|[COleControlSite::SetFocus](#colecontrolsite__setfocus)|Sets the focus to the control site.|  \n|[COleControlSite::SetProperty](#colecontrolsite__setproperty)|Sets a specific property of the hosted control.|  \n|[COleControlSite::SetPropertyV](#colecontrolsite__setpropertyv)|Sets a specific property of the hosted control with a variable list of arguments.|  \n|[COleControlSite::SetWindowPos](#colecontrolsite__setwindowpos)|Sets the position of the control site.|  \n|[COleControlSite::SetWindowText](#colecontrolsite__setwindowtext)|Sets the text of the hosted control.|  \n|[COleControlSite::ShowWindow](#colecontrolsite__showwindow)|Shows or hides the control site.|  \n  \n### Protected Methods  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[COleControlSite::GetControlInfo](#colecontrolsite__getcontrolinfo)|Retrieves keyboard information and mnemonics for the hosted control.|  \n  \n### Public Data Members  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[COleControlSite::m_bIsWindowless](#colecontrolsite__m_biswindowless)|Determines if the hosted control is a windowless control.|  \n|[COleControlSite::m_ctlInfo](#colecontrolsite__m_ctlinfo)|Contains information on keyboard handling for the control.|  \n|[COleControlSite::m_dwEventSink](#colecontrolsite__m_dweventsink)|The cookie of the control's connection point.|  \n|[COleControlSite::m_dwMiscStatus](#colecontrolsite__m_dwmiscstatus)|The miscellaneous states for the hosted control.|  \n|[COleControlSite::m_dwPropNotifySink](#colecontrolsite__m_dwpropnotifysink)|The `IPropertyNotifySink` cookie of the control.|  \n|[COleControlSite::m_dwStyle](#colecontrolsite__m_dwstyle)|The styles of the hosted control.|  \n|[COleControlSite::m_hWnd](#colecontrolsite__m_hwnd)|The handle of the control site.|  \n|[COleControlSite::m_iidEvents](#colecontrolsite__m_iidevents)|The ID of the event interface for the hosted control.|  \n|[COleControlSite::m_nID](#colecontrolsite__m_nid)|The ID of the hosted control.|  \n|[COleControlSite::m_pActiveObject](#colecontrolsite__m_pactiveobject)|A pointer to the `IOleInPlaceActiveObject` object of the hosted control.|  \n|[COleControlSite::m_pCtrlCont](#colecontrolsite__m_pctrlcont)|The container of the hosted control.|  \n|[COleControlSite::m_pInPlaceObject](#colecontrolsite__m_pinplaceobject)|A pointer to the `IOleInPlaceObject` object of the hosted control.|  \n|[COleControlSite::m_pObject](#colecontrolsite__m_pobject)|A pointer to the `IOleObjectInterface` interface of the control.|  \n|[COleControlSite::m_pWindowlessObject](#colecontrolsite__m_pwindowlessobject)|A pointer to the `IOleInPlaceObjectWindowless` interface of the control.|  \n|[COleControlSite::m_pWndCtrl](#colecontrolsite__m_pwndctrl)|A pointer to the window object for the hosted control.|  \n|[COleControlSite::m_rect](#colecontrolsite__m_rect)|The dimensions of the control site.|  \n  \n## Remarks  \n This support is the primary means by which an embedded ActiveX control obtains information about the location and extent of its display site, its moniker, its user interface, its ambient properties, and other resources provided by its container. `COleControlSite` fully implements the [IOleControlSite](http://msdn.microsoft.com/library/windows/desktop/ms688502), [IOleInPlaceSite](http://msdn.microsoft.com/library/windows/desktop/ms686586), [IOleClientSite](http://msdn.microsoft.com/library/windows/desktop/ms693706), [IPropertyNotifySink](http://msdn.microsoft.com/library/windows/desktop/ms692638), **IBoundObjectSite**, **INotifyDBEvents**, [IRowSetNotify](../../data/oledb/irowsetnotifyimpl-class.md)       interfaces. In addition, the IDispatch interface (providing support for ambient properties and event sinks) is also implemented.  \n  \n To create an ActiveX control site using `COleControlSite`, derive a class from `COleControlSite`. In your `CWnd`-derived class for the container (for instance, your dialog box) override the **CWnd::CreateControlSite** function.  \n  \n## Inheritance Hierarchy  \n [CObject](../../mfc/reference/cobject-class.md)  \n  \n [CCmdTarget](../../mfc/reference/ccmdtarget-class.md)  \n  \n `COleControlSite`  \n  \n## Requirements  \n **Header:** afxocc.h  \n  \n##  <a name=\"colecontrolsite__binddefaultproperty\"></a>  COleControlSite::BindDefaultProperty  \n Binds the calling object's default simple bound property, as marked in the type library, to the underlying cursor that is defined by the DataSource, UserName, Password, and SQL properties of the data-source control.  \n  \n```  \nvirtual void BindDefaultProperty(\n    DISPID dwDispID,  \n    VARTYPE vtProp,  \n    LPCTSTR szFieldName,  \n    CWnd* pDSCWnd);\n```  \n  \n### Parameters  \n `dwDispID`  \n Specifies the **DISPID** of a property on a data-bound control that is to be bound to a data-source control.  \n  \n `vtProp`  \n Specifies the type of the property to be bound — for example, `VT_BSTR`, **VT_VARIANT**, and so on.  \n  \n `szFieldName`  \n Specifies the name of the column, in the cursor provided by the data-source control, to which the property will be bound.  \n  \n `pDSCWnd`  \n A pointer to the `CWnd`-derived object that hosts the data-source control to which the property will be bound.  \n  \n### Remarks  \n The `CWnd` object on which you call this function must be a data-bound control.  \n  \n##  <a name=\"colecontrolsite__bindproperty\"></a>  COleControlSite::BindProperty  \n Binds the calling object's simple bound property, as marked in the type library, to the underlying cursor that is defined by the DataSource, UserName, Password, and SQL properties of the data-source control.  \n  \n```  \nvirtual void BindProperty(\n    DISPID dwDispId,  \n    CWnd* pWndDSC);\n```  \n  \n### Parameters  \n *dwDispId*  \n Specifies the **DISPID** of a property on a data-bound control that is to be bound to a data-source control.  \n  \n `pWndDSC`  \n A pointer to the `CWnd`-derived object that hosts the data-source control to which the property will be bound.  \n  \n### Remarks  \n The `CWnd` object on which you call this function must be a data-bound control.  \n  \n##  <a name=\"colecontrolsite__colecontrolsite\"></a>  COleControlSite::COleControlSite  \n Constructs a new `COleControlSite` object.  \n  \n```  \nexplicit COleControlSite(COleControlContainer* pCtrlCont);\n```  \n  \n### Parameters  \n `pCtrlCont`  \n A pointer to the control's container (which represents the window that hosts the AtiveX control).  \n  \n### Remarks  \n This function is called by the [COccManager::CreateContainer](../../mfc/reference/coccmanager-class.md#coccmanager__createcontainer) function. For more information on customizing the creation of containers, see [COccManager::CreateSite](../../mfc/reference/coccmanager-class.md#coccmanager__createsite).  \n  \n##  <a name=\"colecontrolsite__createcontrol\"></a>  COleControlSite::CreateControl  \n Creates an ActiveX control, hosted by the `COleControlSite` object.  \n  \n```  \nvirtual HRESULT CreateControl(\n    CWnd* pWndCtrl,  \n    REFCLSID clsid,  \n    LPCTSTR lpszWindowName,  \n    DWORD dwStyle,  \n    const RECT& rect,  \n    UINT nID,  \n    CFile* pPersist = NULL,  \n    BOOL bStorage = FALSE,  \n    BSTR bstrLicKey = NULL);\n\n \nvirtual HRESULT CreateControl(\n    CWnd* pWndCtrl,  \n    REFCLSID clsid,  \n    LPCTSTR lpszWindowName,  \n    DWORD dwStyle,  \n    const POINT* ppt,  \n    const SIZE* psize,  \n    UINT nID,  \n    CFile* pPersist = NULL,  \n    BOOL bStorage = FALSE,  \n    BSTR bstrLicKey = NULL);\n```  \n  \n### Parameters  \n `pWndCtrl`  \n A pointer to the window object representing the control.  \n  \n `clsid`  \n The unique class ID of the control.  \n  \n `lpszWindowName`  \n A pointer to the text to be displayed in the control. Sets the value of the winodw's Caption or Text property (if any).  \n  \n `dwStyle`  \n Windows styles. The available styles are listed under the **Remarks** section.  \n  \n `rect`  \n Specifies the control's size and position. It can be either a `CRect` object or a `RECT` structure.  \n  \n `nID`  \n Specifies the control's child window ID.  \n  \n `pPersist`  \n A pointer to a `CFile` containing the persistent state for the control. The default value is **NULL**, indicating that the control initializes itself without restoring its state from any persistent storage. If not **NULL**, it should be a pointer to a `CFile`-derived object that contains the control's persistent data, in the form of either a stream or a storage. This data could have been saved in a previous activation of the client. The `CFile` can contain other data, but must have its read-write pointer set to the first byte of persistent data at the time of the call to `CreateControl`.  \n  \n `bStorage`  \n Indicates whether the data in `pPersist` should be interpreted as `IStorage` or `IStream` data. If the data in `pPersist` is a storage, `bStorage` should be **TRUE**. If the data in `pPersist` is a stream, `bStorage` should be **FALSE**. The default value is **FALSE**.  \n  \n `bstrLicKey`  \n Optional license key data. This data is needed only for creating controls that require a run-time license key. If the control supports licensing, you must provide a license key for the creation of the control to succeed. The default value is **NULL**.  \n  \n `ppt`  \n A pointer to a **POINT** structure that contains the upper-left corner of the control. The size of the control is determined by the value of *psize*. The `ppt` and *psize* values are an optional method of specifying the size and position opf the control.  \n  \n *psize*  \n A pointer to a **SIZE** structure that contains the size of the control. The upper-left corner is determined by the value of `ppt`. The `ppt` and *psize* values are an optional method of specifying the size and position opf the control.  \n  \n### Return Value  \n A standard `HRESULT` value.  \n  \n### Remarks  \n Only a subset of the Windows `dwStyle` flags are supported by `CreateControl`:  \n  \n- **WS_VISIBLE** Creates a window that is initially visible. Required if you want the control to be visible immediately, like ordinary windows.  \n  \n- **WS_DISABLED** Creates a window that is initially disabled. A disabled window cannot receive input from the user. Can be set if the control has an Enabled property.  \n  \n- `WS_BORDER` Creates a window with a thin-line border. Can be set if control has a BorderStyle property.  \n  \n- **WS_GROUP** Specifies the first control of a group of controls. The user can change the keyboard focus from one control in the group to the next by using the direction keys. All controls defined with the **WS_GROUP** style after the first control belong to the same group. The next control with the **WS_GROUP** style ends the group and starts the next group.  \n  \n- **WS_TABSTOP** Specifies a control that can receive the keyboard focus when the user presses the TAB key. Pressing the TAB key changes the keyboard focus to the next control of the **WS_TABSTOP** style.  \n  \n Use the second overload to create default-sized controls.  \n  \n##  <a name=\"colecontrolsite__destroycontrol\"></a>  COleControlSite::DestroyControl  \n Destroys the `COleControlSite` object.  \n  \n```  \nvirtual BOOL DestroyControl();\n```  \n  \n### Return Value  \n Nonzero if successful, otherwise 0.  \n  \n### Remarks  \n Once completed, the object is freed from memory and any pointers to the object are no longer valid.  \n  \n##  <a name=\"colecontrolsite__doverb\"></a>  COleControlSite::DoVerb  \n Executes the specified verb.  \n  \n```  \nvirtual HRESULT DoVerb(\n    LONG nVerb,  \n    LPMSG lpMsg = NULL);\n```  \n  \n### Parameters  \n `nVerb`  \n Specifies the verb to execute. It can include one of the following:  \n  \n|Value|Meaning|Symbol|  \n|-----------|-------------|------------|  \n|0|Primary verb|`OLEIVERB_PRIMARY`|  \n|-1|Secondary verb|(None)|  \n|1|Displays the object for editing.|`OLEIVERB_SHOW`|  \n|-2|Edits the item in a separate window.|`OLEIVERB_OPEN`|  \n|-3|Hides the object.|`OLEIVERB_HIDE`|  \n|-4|Activates a control in-place.|`OLEIVERB_UIACTIVATE`|  \n|-5|Activates a control in-place, without additional user interface elements.|**OLEIVERB_INPLACEACTIVATE**|  \n|-7|Display the control's properties.|**OLEIVERB_PROPERTIES**|  \n  \n `lpMsg`  \n Pointer to the message that caused the item to be activated.  \n  \n### Return Value  \n A standard `HRESULT` value.  \n  \n### Remarks  \n This function directly calls through the control's `IOleObject` interface to execute the specified verb. If an exception is thrown as a result of this function call, an `HRESULT` error code is returned.  \n  \n For more information, see [IOleObject::DoVerb](http://msdn.microsoft.com/library/windows/desktop/ms694508) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n##  <a name=\"colecontrolsite__enabledsc\"></a>  COleControlSite::EnableDSC  \n Enables data sourcing for the control site.  \n  \n```  \nvirtual void EnableDSC();\n```  \n  \n### Remarks  \n Called by the framework to enable and initialize data sourcing for the control site. Override this function to provide customized behavior.  \n  \n##  <a name=\"colecontrolsite__enablewindow\"></a>  COleControlSite::EnableWindow  \n Enables or disables mouse and keyboard input to the control site.  \n  \n```  \nvirtual BOOL EnableWindow(BOOL bEnable);\n```  \n  \n### Parameters  \n `bEnable`  \n Specifies whether to enable or disable the window: **TRUE** if window input is to be enabled, otherwise **FALSE**.  \n  \n### Return Value  \n Nonzero if the window was previously disabled, otherwise 0.  \n  \n##  <a name=\"colecontrolsite__freezeevents\"></a>  COleControlSite::FreezeEvents  \n Specifies whether the control site will handle or ignore events fired from a control.  \n  \n```  \nvoid FreezeEvents(BOOL bFreeze);\n```  \n  \n### Parameters  \n `bFreeze`  \n Specifies whether the control site wishes to stop accepting events. Nonzero if the control is not accepting events; otherwise zero.  \n  \n### Remarks  \n If `bFreeze` is **TRUE**, the control site requests the control to stop fring events. If `bFreeze` is **FALSE**, the control site requests the control to continue firing events.  \n  \n> [!NOTE]\n>  The control is not required to stop firing events if requested by the control site. It can continue firing but all subsequent events will be ignored by the control site.  \n  \n##  <a name=\"colecontrolsite__getcontrolinfo\"></a>  COleControlSite::GetControlInfo  \n Retrieves information about a control's keyboard mnemonics and keyboard behavior.  \n  \n```  \nvoid GetControlInfo();\n```  \n  \n### Remarks  \n The information is stored in [COleControlSite::m_ctlInfo](#colecontrolsite__m_ctlinfo).  \n  \n##  <a name=\"colecontrolsite__getdefbtncode\"></a>  COleControlSite::GetDefBtnCode  \n Determines if the control is a default push button.  \n  \n```  \nDWORD GetDefBtnCode();\n```  \n  \n### Return Value  \n Can be one of the following values:  \n  \n- **DLGC_DEFPUSHBUTTON** Control is the default button in the dialog.  \n  \n- **DLGC_UNDEFPUSHBUTTON** Control is not the default button in the dialog.  \n  \n- **0** Control is not a button.  \n  \n##  <a name=\"colecontrolsite__getdlgctrlid\"></a>  COleControlSite::GetDlgCtrlID  \n Retrieves the identifier of the control.  \n  \n```  \nvirtual int GetDlgCtrlID() const;\n\n \n```  \n  \n### Return Value  \n The dialog item identifier of the control.  \n  \n##  <a name=\"colecontrolsite__geteventiid\"></a>  COleControlSite::GetEventIID  \n Retrieves a pointer to the control's default event interface.  \n  \n```  \nBOOL GetEventIID(IID* piid);\n```  \n  \n### Parameters  \n `piid`  \n A pointer to an interface ID.  \n  \n### Return Value  \n Nonzero if successful, otherwise 0. If successful, `piid` contains the interface ID for the control's default event interface.  \n  \n##  <a name=\"colecontrolsite__getexstyle\"></a>  COleControlSite::GetExStyle  \n Retrieves the window's extended styles.  \n  \n```  \nvirtual DWORD GetExStyle() const;\n\n \n```  \n  \n### Return Value  \n The control window's extended styles.  \n  \n### Remarks  \n To retrieve the regular styles, call [COleControlSite::GetStyle](#colecontrolsite__getstyle).  \n  \n##  <a name=\"colecontrolsite__getproperty\"></a>  COleControlSite::GetProperty  \n Gets the control property specified by `dwDispID`.  \n  \n```  \nvirtual void GetProperty(\n    DISPID dwDispID,  \n    VARTYPE vtProp,  \n    void* pvProp) const;\n\n \n```  \n  \n### Parameters  \n `dwDispID`  \n Identifies the dispatch ID of the property, found on the control's default `IDispatch` interface, to be retrieved.  \n  \n `vtProp`  \n Specifies the type of the property to be retrieved. For possible values, see the Remarks section for [COleDispatchDriver::InvokeHelper](../../mfc/reference/coledispatchdriver-class.md#coledispatchdriver__invokehelper).  \n  \n `pvProp`  \n Address of the variable that will receive the property value. It must match the type specified by `vtProp`.  \n  \n### Remarks  \n The value is returned through `pvProp`.  \n  \n##  <a name=\"colecontrolsite__getstyle\"></a>  COleControlSite::GetStyle  \n Retrieves the styles of the control site.  \n  \n```  \nvirtual DWORD GetStyle() const;\n\n \n```  \n  \n### Return Value  \n The window's styles.  \n  \n### Remarks  \n For a list of possible values, see [Windows Styles](../../mfc/reference/window-styles.md). To retrieve the extended styles of the control site, call [COleControlSite::GetExStyle](#colecontrolsite__getexstyle).  \n  \n##  <a name=\"colecontrolsite__getwindowtext\"></a>  COleControlSite::GetWindowText  \n Retrieves the current text of the control.  \n  \n```  \nvirtual void GetWindowText(CString& str) const;\n\n \n```  \n  \n### Parameters  \n `str`  \n A reference to a `CString` object that contains the current text of the control.  \n  \n### Remarks  \n If the control supports the Caption stock property, this value is returned. If the Caption stock property is not supported, the value for the Text property is returned.  \n  \n##  <a name=\"colecontrolsite__invokehelper\"></a>  COleControlSite::InvokeHelper  \n Invokes the method or property specified by `dwDispID`, in the context specified by `wFlags`.  \n  \n```  \nvirtual void AFX_CDECL InvokeHelper(\n    DISPID dwDispID,  \n    WORD wFlags,  \n    VARTYPE vtRet,  \n    void* pvRet,  \n    const BYTE* pbParamInfo, ...);\n```  \n  \n### Parameters  \n `dwDispID`  \n Identifies the dispatch ID of the property or method, found on the control's `IDispatch` interface, to be invoked.  \n  \n `wFlags`  \n Flags describing the context of the call to IDispatch::Invoke. For possible `wFlags` values, see `IDispatch::Invoke` in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n `vtRet`  \n Specifies the type of the return value. For possible values, see the Remarks section for [COleDispatchDriver::InvokeHelper](../../mfc/reference/coledispatchdriver-class.md#coledispatchdriver__invokehelper).  \n  \n `pvRet`  \n Address of the variable that will receive the property value or return value. It must match the type specified by `vtRet`.  \n  \n `pbParamInfo`  \n Pointer to a null-terminated string of bytes specifying the types of the parameters following `pbParamInfo`. For possible values, see the Remarks section for [COleDispatchDriver::InvokeHelper](../../mfc/reference/coledispatchdriver-class.md#coledispatchdriver__invokehelper).  \n  \n *...*  \n Variable list of parameters, of types specified in `pbParamInfo`.  \n  \n### Remarks  \n The `pbParamInfo` parameter specifies the types of the parameters passed to the method or property. The variable list of arguments is represented by ... in the syntax declaration.  \n  \n This function converts the parameters to **VARIANTARG** values, then invokes the **IDispatch::Invoke** method on the control. If the call to **IDispatch::Invoke** fails, this function will throw an exception. If the status code returned by **IDispatch::Invoke** is `DISP_E_EXCEPTION`, this function throws a **COleDispatchException** object, otherwise it throws a `COleException`.  \n  \n##  <a name=\"colecontrolsite__invokehelperv\"></a>  COleControlSite::InvokeHelperV  \n Invokes the method or property specified by `dwDispID`, in the context specified by `wFlags`.  \n  \n```  \nvirtual void InvokeHelperV(\n    DISPID dwDispID,  \n    WORD wFlags,  \n    VARTYPE vtRet,  \n    void* pvRet,  \n    const BYTE* pbParamInfo,  \n    va_list argList);\n```  \n  \n### Parameters  \n `dwDispID`  \n Identifies the dispatch ID of the property or method, found on the control's `IDispatch` interface, to be invoked.  \n  \n `wFlags`  \n Flags describing the context of the call to IDispatch::Invoke.  \n  \n `vtRet`  \n Specifies the type of the return value. For possible values, see the Remarks section for [COleDispatchDriver::InvokeHelper](../../mfc/reference/coledispatchdriver-class.md#coledispatchdriver__invokehelper).  \n  \n `pvRet`  \n Address of the variable that will receive the property value or return value. It must match the type specified by `vtRet`.  \n  \n `pbParamInfo`  \n Pointer to a null-terminated string of bytes specifying the types of the parameters following `pbParamInfo`. For possible values, see the Remarks section for [COleDispatchDriver::InvokeHelper](../../mfc/reference/coledispatchdriver-class.md#coledispatchdriver__invokehelper).  \n  \n `argList`  \n Pointer to a variable argument list.  \n  \n### Remarks  \n The `pbParamInfo` parameter specifies the types of the parameters passed to the method or property. Extra parameters for the method or property being invoked can be passed using the *va_list* parameter.  \n  \n Typically, this function is called by `COleControlSite::InvokeHelper`.  \n  \n##  <a name=\"colecontrolsite__isdefaultbutton\"></a>  COleControlSite::IsDefaultButton  \n Determines if the control is the default button.  \n  \n```  \nBOOL IsDefaultButton();\n```  \n  \n### Return Value  \n Nonzero if the control is the default button on the window, otherwise zero.  \n  \n##  <a name=\"colecontrolsite__iswindowenabled\"></a>  COleControlSite::IsWindowEnabled  \n Determines if the control site is enabled.  \n  \n```  \nvirtual BOOL IsWindowEnabled() const;\n\n \n```  \n  \n### Return Value  \n Nonzero if the control is enabled, otherwise zero.  \n  \n### Remarks  \n The value is retrieved from the control's Enabled stock property.  \n  \n##  <a name=\"colecontrolsite__m_biswindowless\"></a>  COleControlSite::m_bIsWindowless  \n Determines if the object is a windowless control.  \n  \n```  \nBOOL m_bIsWindowless;  \n```  \n  \n### Remarks  \n Nonzero if the control has no window, otherwise zero.  \n  \n##  <a name=\"colecontrolsite__m_ctlinfo\"></a>  COleControlSite::m_ctlInfo  \n Information on how keyboard input is handled by the control.  \n  \n```  \nCONTROLINFO m_ctlInfo;  \n```  \n  \n### Remarks  \n This information is stored in a [CONTROLINFO](http://msdn.microsoft.com/library/windows/desktop/ms680734) structure.  \n  \n##  <a name=\"colecontrolsite__m_dweventsink\"></a>  COleControlSite::m_dwEventSink  \n Contains the connection point's cookie from the control's event sink.  \n  \n```  \nDWORD m_dwEventSink;  \n```  \n  \n##  <a name=\"colecontrolsite__m_dwmiscstatus\"></a>  COleControlSite::m_dwMiscStatus  \n Contains miscellaneous information about the control.  \n  \n```  \nDWORD m_dwMiscStatus;  \n```  \n  \n### Remarks  \n For more information, see [OLEMISC](http://msdn.microsoft.com/library/windows/desktop/ms678497)in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n##  <a name=\"colecontrolsite__m_dwpropnotifysink\"></a>  COleControlSite::m_dwPropNotifySink  \n Contains the [IPropertyNotifySink](http://msdn.microsoft.com/library/windows/desktop/ms692638) cookie.  \n  \n```  \nDWORD m_dwPropNotifySink;  \n```  \n  \n##  <a name=\"colecontrolsite__m_dwstyle\"></a>  COleControlSite::m_dwStyle  \n Contains the Window styles of the control.  \n  \n```  \nDWORD m_dwStyle;  \n```  \n  \n##  <a name=\"colecontrolsite__m_hwnd\"></a>  COleControlSite::m_hWnd  \n Contains the `HWND` of the control, or **NULL** if the control is windowless.  \n  \n```  \nHWND m_hWnd;  \n```  \n  \n##  <a name=\"colecontrolsite__m_iidevents\"></a>  COleControlSite::m_iidEvents  \n Contains the interface ID of the control's default event sink interface.  \n  \n```  \nIID m_iidEvents;  \n```  \n  \n##  <a name=\"colecontrolsite__m_nid\"></a>  COleControlSite::m_nID  \n Contains the control's dialog item ID.  \n  \n```  \nUINT m_nID;  \n```  \n  \n##  <a name=\"colecontrolsite__m_pactiveobject\"></a>  COleControlSite::m_pActiveObject  \n Contains the [IOleInPlaceActiveObject](http://msdn.microsoft.com/library/windows/desktop/ms691299) interface of the control.  \n  \n```  \nLPOLEINPLACEACTIVEOBJECT m_pActiveObject;  \n```  \n  \n##  <a name=\"colecontrolsite__m_pctrlcont\"></a>  COleControlSite::m_pCtrlCont  \n Contains the control's container (representing the form).  \n  \n```  \nCOleControlContainer* m_pCtrlCont;  \n```  \n  \n##  <a name=\"colecontrolsite__m_pinplaceobject\"></a>  COleControlSite::m_pInPlaceObject  \n Contains the `IOleInPlaceObject` [IOleInPlaceObject](http://msdn.microsoft.com/library/windows/desktop/ms692646) interface of the control.  \n  \n```  \nLPOLEINPLACEOBJECT m_pInPlaceObject;  \n```  \n  \n##  <a name=\"colecontrolsite__m_pobject\"></a>  COleControlSite::m_pObject  \n Contains the **IOleObjectInterface** interface of the control.  \n  \n```  \nLPOLEOBJECT m_pObject;  \n```  \n  \n##  <a name=\"colecontrolsite__m_pwindowlessobject\"></a>  COleControlSite::m_pWindowlessObject  \n Contains the `IOleInPlaceObjectWindowless`[IOleInPlaceObjectWindowless](http://msdn.microsoft.com/library/windows/desktop/ms687304) interface of the control.  \n  \n```  \nIOleInPlaceObjectWindowless* m_pWindowlessObject;  \n```  \n  \n##  <a name=\"colecontrolsite__m_pwndctrl\"></a>  COleControlSite::m_pWndCtrl  \n Contains a pointer to the `CWnd` object that represents the control itself.  \n  \n```  \nCWnd* m_pWndCtrl;  \n```  \n  \n##  <a name=\"colecontrolsite__m_rect\"></a>  COleControlSite::m_rect  \n Contains the bounds of the control, relative to the container's window.  \n  \n```  \nCRect m_rect;  \n```  \n  \n##  <a name=\"colecontrolsite__modifystyle\"></a>  COleControlSite::ModifyStyle  \n Modifies the styles of the control.  \n  \n```  \nvirtual BOOL ModifyStyle(\n    DWORD dwRemove,  \n    DWORD dwAdd,  \n    UINT nFlags);\n```  \n  \n### Parameters  \n `dwRemove`  \n The styles to be removed from the current window styles.  \n  \n `dwAdd`  \n The styles to be added from the current window styles.  \n  \n `nFlags`  \n Window positioning flags. For a list of possible values, see the [SetWindowPos](http://msdn.microsoft.com/library/windows/desktop/ms633545) function in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n### Return Value  \n Nonzero if the styles are changed, otherwise zero.  \n  \n### Remarks  \n The control's stock Enabled property will be modified to match the setting for **WS_DISABLED**. The control's stock Border Style property will be modified to match the requested setting for `WS_BORDER`. All other styles are applied directly to the control's window handle, if one is present.  \n  \n Modifies the window styles of the control. Styles to be added or removed can be combined by using the bitwise OR ( &#124; ) operator. See the [CreateWindow](http://msdn.microsoft.com/library/windows/desktop/ms632679) function in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)] for information about the available window styles.  \n  \n If `nFlags` is nonzero, `ModifyStyle` calls the Win32 function `SetWindowPos`, and redraws the window by combining `nFlags` with the following four flags:  \n  \n- `SWP_NOSIZE` Retains the current size.  \n  \n- `SWP_NOMOVE` Retains the current position.  \n  \n- `SWP_NOZORDER` Retains the current Z order.  \n  \n- `SWP_NOACTIVATE` Does not activate the window.  \n  \n To modify a window's extended styles, call [ModifyStyleEx](#colecontrolsite__modifystyleex).  \n  \n##  <a name=\"colecontrolsite__modifystyleex\"></a>  COleControlSite::ModifyStyleEx  \n Modifies the extended styles of the control.  \n  \n```  \nvirtual BOOL ModifyStyleEx(\n    DWORD dwRemove,  \n    DWORD dwAdd,  \n    UINT nFlags);\n```  \n  \n### Parameters  \n `dwRemove`  \n The extended styles to be removed from the current window styles.  \n  \n `dwAdd`  \n The extended styles to be added from the current window styles.  \n  \n `nFlags`  \n Window positioning flags. For a list of possible values, see the [SetWindowPos](http://msdn.microsoft.com/library/windows/desktop/ms633545) function in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n### Return Value  \n Nonzero if the styles are changed, otherwise zero.  \n  \n### Remarks  \n The control's stock Appearance property will be modified to match the setting for **WS_EX_CLIENTEDGE**. All other extended window styles are applied directly to the control's window handle, if one is present.  \n  \n Modifies the window extended styles of the control site object. Styles to be added or removed can be combined by using the bitwise OR ( &#124; ) operator. See the [CreateWindowEx](http://msdn.microsoft.com/library/windows/desktop/ms632680) function in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)] for information about the available window styles.  \n  \n If `nFlags` is nonzero, `ModifyStyleEx` calls the Win32 function `SetWindowPos`, and redraws the window by combining `nFlags` with the following four flags:  \n  \n- `SWP_NOSIZE` Retains the current size.  \n  \n- `SWP_NOMOVE` Retains the current position.  \n  \n- `SWP_NOZORDER` Retains the current Z order.  \n  \n- `SWP_NOACTIVATE` Does not activate the window.  \n  \n To modify a window's extended styles, call [ModifyStyle](#colecontrolsite__modifystyle).  \n  \n##  <a name=\"colecontrolsite__movewindow\"></a>  COleControlSite::MoveWindow  \n Changes the position of the control.  \n  \n```  \nvirtual void MoveWindow(\n    int x,  \n    int y,  \n    int nWidth,  \n    int nHeight);\n```  \n  \n### Parameters  \n *x*  \n The new position of the left side of the window.  \n  \n *y*  \n The new position of the top of the window.  \n  \n `nWidth`  \n The new width of the window  \n  \n `nHeight`  \n The new height of the window.  \n  \n##  <a name=\"colecontrolsite__quickactivate\"></a>  COleControlSite::QuickActivate  \n Quick activates the contained control.  \n  \n```  \nvirtual BOOL QuickActivate();\n```  \n  \n### Return Value  \n Nonzero if the control site was activated, otherwise zero.  \n  \n### Remarks  \n This function should be called only if the user is overriding the creation process of the control.  \n  \n The `IPersist*::Load` and `IPersist*::InitNew` methods should be called after quick activation occurs. The control should establish its connections to the container's sinks during quick activation. However, these connections are not live until `IPersist*::Load` or `IPersist*::InitNew` has been called.  \n  \n##  <a name=\"colecontrolsite__safesetproperty\"></a>  COleControlSite::SafeSetProperty  \n Sets the control property specified by `dwDispID`.  \n  \n```  \nvirtual BOOL AFX_CDECL SafeSetProperty(\n    DISPID dwDispID,  \n    VARTYPE vtProp, ...);\n```  \n  \n### Parameters  \n `dwDispID`  \n Identifies the dispatch ID of the property or method, found on the control's `IDispatch` interface, to be set.  \n  \n `vtProp`  \n Specifies the type of property to be set. For possible values, see the Remarks section for [COleDispatchDriver::InvokeHelper](../../mfc/reference/coledispatchdriver-class.md#coledispatchdriver__invokehelper).  \n  \n *...*  \n A single parameter of the type specified by `vtProp`.  \n  \n### Return Value  \n Nonzero if successful; otherwise zero.  \n  \n### Remarks  \n  \n> [!NOTE]\n>  Unlike `SetProperty` and `SetPropertyV`, if an error is encountered (such as trying to set a nonexistent property), no exception is thrown.  \n  \n##  <a name=\"colecontrolsite__setdefaultbutton\"></a>  COleControlSite::SetDefaultButton  \n Sets the control as the default button.  \n  \n```  \nvoid SetDefaultButton(BOOL bDefault);\n```  \n  \n### Parameters  \n `bDefault`  \n Nonzero if the control should become the default button; otherwise zero.  \n  \n### Remarks  \n  \n> [!NOTE]\n>  The control must have the **OLEMISC_ACTSLIKEBUTTON** status bit set.  \n  \n##  <a name=\"colecontrolsite__setdlgctrlid\"></a>  COleControlSite::SetDlgCtrlID  \n Changes the value of the control's dialog item identifier.  \n  \n```  \nvirtual int SetDlgCtrlID(int nID);\n```  \n  \n### Parameters  \n `nID`  \n The new identifier value.  \n  \n### Return Value  \n If successful, the previous dialog item identifier of the window; otherwise 0.  \n  \n### Remarks  \n  \n##  <a name=\"colecontrolsite__setfocus\"></a>  COleControlSite::SetFocus  \n Sets focus to the control.  \n  \n```  \nvirtual CWnd* SetFocus();\n\n \nvirtual CWnd* SetFocus(LPMSG lpmsg);\n```  \n  \n### Parameters  \n *lpmsg*  \n A pointer to a [MSG structure](../../mfc/reference/msg-structure1.md). This structure contains the Windows message triggering the `SetFocus` request for the control contained in the current control site.  \n  \n### Return Value  \n A pointer to the window that previously had focus.  \n  \n##  <a name=\"colecontrolsite__setproperty\"></a>  COleControlSite::SetProperty  \n Sets the control property specified by `dwDispID`.  \n  \n```  \nvirtual void AFX_CDECL SetProperty(\n    DISPID dwDispID,  \n    VARTYPE vtProp, ...);\n```  \n  \n### Parameters  \n `dwDispID`  \n Identifies the dispatch ID of the property or method, found on the control's `IDispatch` interface, to be set.  \n  \n `vtProp`  \n Specifies the type of property to be set. For possible values, see the Remarks section for [COleDispatchDriver::InvokeHelper](../../mfc/reference/coledispatchdriver-class.md#coledispatchdriver__invokehelper).  \n  \n *...*  \n A single parameter of the type specified by `vtProp`.  \n  \n### Remarks  \n If `SetProperty` encounters an error, an exception is thrown.  \n  \n The type of exception is determined by the return value of the attempt to set the property or method. If the return value is `DISP_E_EXCEPTION`, a **COleDispatchExcpetion** is thrown; otherwise a `COleException`.  \n  \n##  <a name=\"colecontrolsite__setpropertyv\"></a>  COleControlSite::SetPropertyV  \n Sets the control property specified by `dwDispID`.  \n  \n```  \nvirtual void SetPropertyV(\n    DISPID dwDispID,  \n    VARTYPE vtProp,  \n    va_list argList);\n```  \n  \n### Parameters  \n `dwDispID`  \n Identifies the dispatch ID of the property or method, found on the control's `IDispatch` interface, to be set.  \n  \n `vtProp`  \n Specifies the type of property to be set. For possible values, see the Remarks section for [COleDispatchDriver::InvokeHelper](../../mfc/reference/coledispatchdriver-class.md#coledispatchdriver__invokehelper).  \n  \n `argList`  \n Pointer to the list of arguments.  \n  \n### Remarks  \n Extra parameters for the method or property being invoked can be passeed using the *arg_list* parameter. If `SetProperty` encounters an error, an exception is thrown.  \n  \n The type of exception is determined by the return value of the attempt to set the property or method. If the return value is `DISP_E_EXCEPTION`, a **COleDispatchExcpetion** is thrown; otherwise a `COleException`.  \n  \n##  <a name=\"colecontrolsite__setwindowpos\"></a>  COleControlSite::SetWindowPos  \n Sets the size, position, and Z order of the control site.  \n  \n```  \nvirtual BOOL SetWindowPos(\n    const CWnd* pWndInsertAfter,  \n    int x,  \n    int y,  \n    int cx,  \n    int cy,  \n    UINT nFlags);\n```  \n  \n### Parameters  \n `pWndInsertAfter`  \n A pointer to the window.  \n  \n *x*  \n The new position of the left side of the window.  \n  \n *y*  \n The new position of the top of the window.  \n  \n `cx`  \n The new width of the window  \n  \n `cy`  \n The new height of the window.  \n  \n `nFlags`  \n Specifies the window sizing and positioning flags. For possible values, see the Remarks section for [SetWindowPos](http://msdn.microsoft.com/library/windows/desktop/ms633545) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n### Return Value  \n Nonzero if successful, otherwise zero.  \n  \n##  <a name=\"colecontrolsite__setwindowtext\"></a>  COleControlSite::SetWindowText  \n Sets the text for the control site.  \n  \n```  \nvirtual void SetWindowText(LPCTSTR lpszString);\n```  \n  \n### Parameters  \n `lpszString`  \n Pointer to a null-terminated string to be used as the new title or control text.  \n  \n### Remarks  \n This function first attempts to set the Caption stock property. If the Caption stock property is not supported, the Text property is set instead.  \n  \n##  <a name=\"colecontrolsite__showwindow\"></a>  COleControlSite::ShowWindow  \n Sets the window's show state.  \n  \n```  \nvirtual BOOL ShowWindow(int nCmdShow);\n```  \n  \n### Parameters  \n `nCmdShow`  \n Specifies how the control site is to be shown. It must be one of the following values:  \n  \n- **SW_HIDE** Hides this window and passes activation to another window.  \n  \n- **SW_MINIMIZE** Minimizes the window and activates the top-level window in the system's list.  \n  \n- **SW_RESTORE** Activates and displays the window. If the window is minimized or maximized, Windows restores it to its original size and position.  \n  \n- **SW_SHOW** Activates the window and displays it in its current size and position.  \n  \n- **SW_SHOWMAXIMIZED** Activates the window and displays it as a maximized window.  \n  \n- **SW_SHOWMINIMIZED** Activates the window and displays it as an icon.  \n  \n- **SW_SHOWMINNOACTIVE** Displays the window as an icon. The window that is currently active remains active.  \n  \n- **SW_SHOWNA** Displays the window in its current state. The window that is currently active remains active.  \n  \n- **SW_SHOWNOACTIVATE** Displays the window in its most recent size and position. The window that is currently active remains active.  \n  \n- **SW_SHOWNORMAL** Activates and displays the window. If the window is minimized or maximized, Windows restores it to its original size and position.  \n  \n### Return Value  \n Nonzero if the window was previously visible; 0 if the window was previously hidden.  \n  \n## See Also  \n [CCmdTarget Class](../../mfc/reference/ccmdtarget-class.md)   \n [Hierarchy Chart](../../mfc/hierarchy-chart.md)   \n [COleControlContainer Class](../../mfc/reference/colecontrolcontainer-class.md)\n"}