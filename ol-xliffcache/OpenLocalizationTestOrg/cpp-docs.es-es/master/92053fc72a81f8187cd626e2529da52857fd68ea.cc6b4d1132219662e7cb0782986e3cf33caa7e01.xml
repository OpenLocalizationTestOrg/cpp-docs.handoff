{"nodes":[{"pos":[12,41],"content":"public (C++) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"public (C++) | Microsoft Docs","pos":[0,29]}]},{"content":"public (C++)","pos":[609,621]},{"content":"Syntax","pos":[625,631]},{"content":"Remarks","pos":[704,711]},{"content":"When preceding a list of class members, the <bpt id=\"p1\">**</bpt>public<ept id=\"p1\">**</ept> keyword specifies that those members are accessible from any function.","pos":[715,840],"source":"When preceding a list of class members, the **public** keyword specifies that those members are accessible from any function."},{"content":"This applies to all members declared up to the next access specifier or the end of the class.","pos":[841,934]},{"pos":[941,1140],"content":"When preceding the name of a base class, the <bpt id=\"p1\">**</bpt>public<ept id=\"p1\">**</ept> keyword specifies that the public and protected members of the base class are public and protected members, respectively, of the derived class.","source":"When preceding the name of a base class, the **public** keyword specifies that the public and protected members of the base class are public and protected members, respectively, of the derived class."},{"content":"Default access of members in a class is private.","pos":[1147,1195]},{"content":"Default access of members in a structure or union is public.","pos":[1196,1256]},{"content":"Default access of a base class is private for classes and public for structures.","pos":[1263,1343]},{"content":"Unions cannot have base classes.","pos":[1344,1376]},{"pos":[1383,1612],"content":"For more information, see <bpt id=\"p1\">[</bpt>private<ept id=\"p1\">](../cpp/private-cpp.md)</ept>, <bpt id=\"p2\">[</bpt>protected<ept id=\"p2\">](../cpp/protected-cpp.md)</ept>, <bpt id=\"p3\">[</bpt>friend<ept id=\"p3\">](../cpp/friend-cpp.md)</ept>, and the member-access table in <bpt id=\"p4\">[</bpt>Controlling Access to Class Members<ept id=\"p4\">](member-access-control-cpp.md)</ept>.","source":"For more information, see [private](../cpp/private-cpp.md), [protected](../cpp/protected-cpp.md), [friend](../cpp/friend-cpp.md), and the member-access table in [Controlling Access to Class Members](member-access-control-cpp.md)."},{"content":"/clr Specific","pos":[1621,1634]},{"content":"In CLR types, the C++ access specifier keywords (<bpt id=\"p1\">**</bpt>public<ept id=\"p1\">**</ept>, <ph id=\"ph1\">`private`</ph>, and <ph id=\"ph2\">`protected`</ph>) can affect the visibility of types and methods with regard to assemblies.","pos":[1638,1800],"source":"In CLR types, the C++ access specifier keywords (**public**, `private`, and `protected`) can affect the visibility of types and methods with regard to assemblies."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Member Access Control<ept id=\"p1\">](member-access-control-cpp.md)</ept>.","pos":[1801,1881],"source":" For more information, see [Member Access Control](member-access-control-cpp.md)."},{"pos":[1889,2083],"content":"[!NOTE]\n Files compiled with [/LN](../build/reference/ln-create-msil-module.md) are not affected by this behavior. In this case, all managed classes (either public or private) will be visible.","leadings":["","> "],"nodes":[{"content":" Files compiled with [/LN](../build/reference/ln-create-msil-module.md) are not affected by this behavior. In this case, all managed classes (either public or private) will be visible.","pos":[8,192],"nodes":[{"content":"Files compiled with <bpt id=\"p1\">[</bpt>/LN<ept id=\"p1\">](../build/reference/ln-create-msil-module.md)</ept> are not affected by this behavior.","pos":[1,106],"source":" Files compiled with [/LN](../build/reference/ln-create-msil-module.md) are not affected by this behavior."},{"content":"In this case, all managed classes (either public or private) will be visible.","pos":[107,184]}]}]},{"content":"END /clr Specific","pos":[2092,2109]},{"content":"Example","pos":[2118,2125]},{"content":"See Also","pos":[2577,2585]},{"content":"Controlling Access to Class Members","pos":[2590,2625]},{"content":"Keywords","pos":[2662,2670]}],"content":"---\ntitle: \"public (C++) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"language-reference\"\nf1_keywords: \n  - \"public\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"public keyword [C++]\"\nms.assetid: f3e10a59-39f6-4bcd-827e-3e99f8f89497\ncaps.latest.revision: 10\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# public (C++)\n## Syntax  \n  \n```  \npublic:  \n   [member-list]  \npublic base-class  \n```  \n  \n## Remarks  \n When preceding a list of class members, the **public** keyword specifies that those members are accessible from any function. This applies to all members declared up to the next access specifier or the end of the class.  \n  \n When preceding the name of a base class, the **public** keyword specifies that the public and protected members of the base class are public and protected members, respectively, of the derived class.  \n  \n Default access of members in a class is private. Default access of members in a structure or union is public.  \n  \n Default access of a base class is private for classes and public for structures. Unions cannot have base classes.  \n  \n For more information, see [private](../cpp/private-cpp.md), [protected](../cpp/protected-cpp.md), [friend](../cpp/friend-cpp.md), and the member-access table in [Controlling Access to Class Members](member-access-control-cpp.md).  \n  \n## /clr Specific  \n In CLR types, the C++ access specifier keywords (**public**, `private`, and `protected`) can affect the visibility of types and methods with regard to assemblies. For more information, see [Member Access Control](member-access-control-cpp.md).  \n  \n> [!NOTE]\n>  Files compiled with [/LN](../build/reference/ln-create-msil-module.md) are not affected by this behavior. In this case, all managed classes (either public or private) will be visible.  \n  \n## END /clr Specific  \n  \n## Example  \n  \n```  \n// keyword_public.cpp  \nclass BaseClass {  \npublic:  \n   int pubFunc() { return 0; }  \n};  \n  \nclass DerivedClass : public BaseClass {};  \n  \nint main() {  \n   BaseClass aBase;  \n   DerivedClass aDerived;  \n   aBase.pubFunc();       // pubFunc() is accessible   \n                          //    from any function  \n   aDerived.pubFunc();    // pubFunc() is still public in   \n                          //    derived class  \n}  \n```  \n  \n## See Also  \n [Controlling Access to Class Members](member-access-control-cpp.md)   \n [Keywords](../cpp/keywords-cpp.md)"}