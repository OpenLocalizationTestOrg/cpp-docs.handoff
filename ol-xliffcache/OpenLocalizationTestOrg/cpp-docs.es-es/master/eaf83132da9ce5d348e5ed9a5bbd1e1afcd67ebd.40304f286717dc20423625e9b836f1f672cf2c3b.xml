{"nodes":[{"pos":[12,42],"content":"omp_get_wtime | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"omp_get_wtime | Microsoft Docs","pos":[0,30]}]},{"content":"omp_get_wtime","pos":[615,628]},{"content":"Returns a value in seconds of the time elapsed from some point.","pos":[629,692]},{"content":"Syntax","pos":[701,707]},{"content":"Return Value","pos":[758,770]},{"content":"Returns a value in seconds of the time elapsed from some arbitrary, but consistent point.","pos":[774,863]},{"content":"Remarks","pos":[872,879]},{"content":"That point will remain consistent during program execution, making subsequent comparisons possible.","pos":[883,982]},{"pos":[989,1104],"content":"For more information, see <bpt id=\"p1\">[</bpt>3.3.1 omp_get_wtime Function<ept id=\"p1\">](../../../parallel/openmp/3-3-1-omp-get-wtime-function.md)</ept>.","source":"For more information, see [3.3.1 omp_get_wtime Function](../../../parallel/openmp/3-3-1-omp-get-wtime-function.md)."},{"content":"Example","pos":[1113,1120]},{"content":"See Also","pos":[1764,1772]},{"content":"Functions","pos":[1777,1786]}],"content":"---\ntitle: \"omp_get_wtime | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"omp_get_wtime\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"omp_get_wtime OpenMP function\"\nms.assetid: c8dee105-ec1b-42e5-a6e3-edeedcf9854c\ncaps.latest.revision: 11\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# omp_get_wtime\nReturns a value in seconds of the time elapsed from some point.  \n  \n## Syntax  \n  \n```  \ndouble omp_get_wtime( );  \n```  \n  \n## Return Value  \n Returns a value in seconds of the time elapsed from some arbitrary, but consistent point.  \n  \n## Remarks  \n That point will remain consistent during program execution, making subsequent comparisons possible.  \n  \n For more information, see [3.3.1 omp_get_wtime Function](../../../parallel/openmp/3-3-1-omp-get-wtime-function.md).  \n  \n## Example  \n  \n```  \n// omp_get_wtime.cpp  \n// compile with: /openmp  \n#include \"omp.h\"  \n#include <stdio.h>  \n#include <windows.h>  \n  \nint main() {  \n    double start = omp_get_wtime( );  \n    Sleep(1000);  \n    double end = omp_get_wtime( );  \n    double wtick = omp_get_wtick( );  \n  \n    printf_s(\"start = %.16g\\nend = %.16g\\ndiff = %.16g\\n\",  \n             start, end, end - start);  \n  \n    printf_s(\"wtick = %.16g\\n1/wtick = %.16g\\n\",  \n             wtick, 1.0 / wtick);  \n}  \n```  \n  \n```Output  \nstart = 594255.3671159324  \nend = 594256.3664474116  \ndiff = 0.9993314791936427  \nwtick = 2.793651148400146e-007  \n1/wtick = 3579545  \n```  \n  \n## See Also  \n [Functions](../../../parallel/openmp/reference/openmp-functions.md)"}