{"nodes":[{"pos":[12,47],"content":"CMFCColorBar Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"CMFCColorBar Class | Microsoft Docs","pos":[0,35]}]},{"content":"CMFCColorBar Class","pos":[1866,1884]},{"pos":[1885,1995],"content":"The <ph id=\"ph1\">`CMFCColorBar`</ph> class represents a docking control bar that can select colors in a document or application.","source":"The `CMFCColorBar` class represents a docking control bar that can select colors in a document or application."},{"content":"Syntax","pos":[2004,2010]},{"content":"Members","pos":[2081,2088]},{"content":"Protected Constructors","pos":[2098,2120]},{"content":"Name","pos":[2127,2131]},{"content":"Description","pos":[2132,2143]},{"content":"CMFCColorBar::CMFCColorBar","pos":[2182,2208]},{"pos":[2239,2274],"content":"Constructs a <ph id=\"ph1\">`CMFCColorBar`</ph> object.","source":"Constructs a `CMFCColorBar` object."},{"content":"Public Methods","pos":[2285,2299]},{"content":"Name","pos":[2306,2310]},{"content":"Description","pos":[2311,2322]},{"content":"CMFCColorBar::ContextToSize","pos":[2361,2388]},{"content":"Calculates the vertical and horizontal margins that are required to contain the buttons on the color bar control and then adjusts the location of those buttons.","pos":[2420,2580]},{"content":"CMFCColorBar::CreateControl","pos":[2586,2613]},{"pos":[2645,2790],"content":"Creates a color bar control window, attaches it to the <ph id=\"ph1\">`CMFCColorBar`</ph> object, and resizes the control to contain the specified palette of colors.","source":"Creates a color bar control window, attaches it to the `CMFCColorBar` object, and resizes the control to contain the specified palette of colors."},{"content":"CMFCColorBar::Create","pos":[2796,2816]},{"pos":[2841,2921],"content":"Creates a color bar control window and attaches it to the <ph id=\"ph1\">`CMFCColorBar`</ph> object.","source":"Creates a color bar control window and attaches it to the `CMFCColorBar` object."},{"content":"CMFCColorBar::EnableAutomaticButton","pos":[2927,2962]},{"content":"Shows or hides the automatic button.","pos":[3002,3038]},{"content":"CMFCColorBar::EnableOtherButton","pos":[3044,3075]},{"content":"Enables or disables the display of a dialog box that lets the user select more colors.","pos":[3111,3197]},{"content":"CMFCColorBar::GetColor","pos":[3203,3225]},{"content":"Retrieves the currently selected color.","pos":[3252,3291]},{"content":"CMFCColorBar::GetCommandID","pos":[3297,3323]},{"content":"Retrieves the command ID of the current color bar control.","pos":[3354,3412]},{"content":"CMFCColorBar::GetHighlightedColor","pos":[3418,3451]},{"pos":[3489,3588],"content":"Retrieves the color that signifies that a color button has the focus; that is, the button is <bpt id=\"p1\">*</bpt>hot<ept id=\"p1\">*</ept>.","source":"Retrieves the color that signifies that a color button has the focus; that is, the button is *hot*."},{"content":"CMFCColorBar::GetHorzMargin","pos":[3594,3621]},{"content":"Retrieves the horizontal margin, which is the space between the left or right color cell and the client area boundary.","pos":[3653,3771]},{"content":"CMFCColorBar::GetVertMargin","pos":[3777,3804]},{"content":"Retrieves the vertical margin, which is the space between the top or bottom color cell and the client area boundary.","pos":[3836,3952]},{"content":"CMFCColorBar::IsTearOff","pos":[3958,3981]},{"content":"Indicates whether the current color bar is dockable.","pos":[4009,4061]},{"content":"CMFCColorBar::SetColor","pos":[4067,4089]},{"content":"Sets the color that is currently selected.","pos":[4116,4158]},{"content":"CMFCColorBar::SetColorName","pos":[4164,4190]},{"content":"Sets a new name for a specified color.","pos":[4221,4259]},{"content":"CMFCColorBar::SetCommandID","pos":[4265,4291]},{"content":"Sets a new command ID for a color bar control.","pos":[4322,4368]},{"content":"CMFCColorBar::SetDocumentColors","pos":[4374,4405]},{"content":"Sets the list of colors that are used in the current document.","pos":[4441,4503]},{"content":"CMFCColorBar::SetHorzMargin","pos":[4509,4536]},{"content":"Sets the horizontal margin, which is the space between the left or right color cell and the client area boundary.","pos":[4568,4681]},{"content":"CMFCColorBar::SetVertMargin","pos":[4687,4714]},{"content":"Sets the vertical margin, which is the space between the top or bottom color cell and the client area boundary.","pos":[4746,4857]},{"content":"Protected Methods","pos":[4868,4885]},{"content":"Name","pos":[4892,4896]},{"content":"Description","pos":[4897,4908]},{"content":"CMFCColorBar::AdjustLocations","pos":[4947,4976]},{"content":"Adjusts the positions of the color buttons on the color bar control.","pos":[5010,5078]},{"content":"CMFCColorBar::AllowChangeTextLabels","pos":[5084,5119]},{"content":"Indicates whether the text label of color buttons can change.","pos":[5159,5220]},{"content":"CMFCColorBar::AllowShowOnList","pos":[5226,5255]},{"content":"Indicates whether the color bar control object can appear in a toolbar list during the customization process.","pos":[5289,5398]},{"content":"CMFCColorBar::CalcSize","pos":[5404,5426]},{"content":"Called by the framework as part of the layout calculation process.","pos":[5453,5519]},{"content":"CMFCColorBar::CreatePalette","pos":[5525,5552]},{"content":"Initalizes a palette with the colors in a specified array of colors.","pos":[5584,5652]},{"content":"CMFCColorBar::GetColorGridSize","pos":[5658,5688]},{"content":"Calculates the number of rows and columns in the grid of a color bar control.","pos":[5723,5800]},{"content":"CMFCColorBar::GetExtraHeight","pos":[5806,5834]},{"pos":[5867,6042],"content":"Calculates the additional height that the current color bar requires to display miscellaneous user interface elements such as the <bpt id=\"p1\">**</bpt>Other<ept id=\"p1\">**</ept> button, document colors, and so on.","source":"Calculates the additional height that the current color bar requires to display miscellaneous user interface elements such as the **Other** button, document colors, and so on."},{"content":"CMFCColorBar::InitColors","pos":[6048,6072]},{"content":"Initializes an array of colors with the colors in a specified palette or the system default palette.","pos":[6101,6201]},{"content":"CMFCColorBar::OnKey","pos":[6207,6226]},{"content":"Called by the framework when a user presses a keyboard button.","pos":[6250,6312]},{"content":"CMFCColorBar::OnSendCommand","pos":[6318,6345]},{"content":"Called by the framework to close a hierarchy of popup controls.","pos":[6377,6440]},{"content":"CMFCColorBar::OnUpdateCmdUI","pos":[6446,6473]},{"content":"Called by the framework to enable or disable a user-interface item of a color bar control before the item is displayed.","pos":[6505,6624]},{"content":"CMFCColorBar::OpenColorDialog","pos":[6630,6659]},{"content":"Opens a color dialog box.","pos":[6693,6718]},{"content":"CMFCColorBar::Rebuild","pos":[6724,6745]},{"content":"Completely redraws the color bar control.","pos":[6771,6812]},{"content":"CMFCColorBar::SelectPalette","pos":[6818,6845]},{"content":"Sets the logical palette of the specified device context to the palette of the parent button of the current color bar control.","pos":[6877,7003]},{"content":"CMFCColorBar::SetPropList","pos":[7009,7034]},{"pos":[7064,7164],"content":"Sets the <ph id=\"ph1\">`m_pWndPropList`</ph> protected data member to the specified pointer to a property grid control.","source":"Sets the `m_pWndPropList` protected data member to the specified pointer to a property grid control."},{"content":"CMFCColorBar::ShowCommandMessageString","pos":[7170,7208]},{"content":"Requests the frame window that owns the color bar control to update the message line in the status bar.","pos":[7251,7354]},{"content":"Protected Data Members","pos":[7365,7387]},{"content":"Name","pos":[7394,7398]},{"content":"Description","pos":[7399,7410]},{"content":"A Boolean field that determines whether mouse events are processed.","pos":[7462,7529]},{"content":"Typically, mouse events are processed when this field is <ph id=\"ph1\">`TRUE`</ph> and customization mode is <ph id=\"ph2\">`FALSE`</ph>.","pos":[7530,7628],"source":" Typically, mouse events are processed when this field is `TRUE` and customization mode is `FALSE`."},{"content":"A Boolean that indicates whether a control is enabled.","pos":[7648,7702]},{"content":"A Boolean that indicates whether the color bar control supports docking.","pos":[7722,7794]},{"pos":[7811,7929],"content":"A <bpt id=\"p1\">[</bpt>CSize<ept id=\"p1\">](../../atl-mfc-shared/reference/csize-class.md)</ept> object that specifies the size of a cell in a color bar grid.","source":"A [CSize](../../atl-mfc-shared/reference/csize-class.md) object that specifies the size of a cell in a color bar grid."},{"content":"A Boolean that indicates whether to show document colors when the color bar is docked.","pos":[7963,8049]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>CMFCColorBar::SetDocumentColors<ept id=\"p1\">](#cmfccolorbar__setdocumentcolors)</ept>.","pos":[8050,8144],"source":" For more information, see [CMFCColorBar::SetDocumentColors](#cmfccolorbar__setdocumentcolors)."},{"content":"A Boolean that indicates whether to show the standard system color dialog box or the <bpt id=\"p1\">[</bpt>CMFCColorDialog<ept id=\"p1\">](../../mfc/reference/cmfccolordialog-class.md)</ept> dialog box.","pos":[8166,8326],"source":"A Boolean that indicates whether to show the standard system color dialog box or the [CMFCColorDialog](../../mfc/reference/cmfccolordialog-class.md) dialog box."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>CMFCColorBar::EnableOtherButton<ept id=\"p1\">](#cmfccolorbar__enableotherbutton)</ept>.","pos":[8327,8421],"source":" For more information, see [CMFCColorBar::EnableOtherButton](#cmfccolorbar__enableotherbutton)."},{"content":"A <bpt id=\"p1\">[</bpt>COLORREF<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/dd183449)</ept> that stores the current automatic color.","pos":[8445,8558],"source":"A [COLORREF](http://msdn.microsoft.com/library/windows/desktop/dd183449) that stores the current automatic color."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>CMFCColorBar::EnableOtherButton<ept id=\"p1\">](#cmfccolorbar__enableotherbutton)</ept>.","pos":[8559,8653],"source":" For more information, see [CMFCColorBar::EnableOtherButton](#cmfccolorbar__enableotherbutton)."},{"pos":[8673,8778],"content":"An <bpt id=\"p1\">[</bpt>CMap<ept id=\"p1\">](../../mfc/reference/cmap-class.md)</ept> object that associates a set of RGB colors with their names.","source":"An [CMap](../../mfc/reference/cmap-class.md) object that associates a set of RGB colors with their names."},{"pos":[8794,8992],"content":"A <bpt id=\"p1\">[</bpt>CArray<ept id=\"p1\">](../../mfc/reference/carray-class.md)</ept> of <bpt id=\"p2\">[</bpt>COLORREF<ept id=\"p2\">](http://msdn.microsoft.com/library/windows/desktop/dd183449)</ept> values that contains the colors that are displayed in the color bar control.","source":"A [CArray](../../mfc/reference/carray-class.md) of [COLORREF](http://msdn.microsoft.com/library/windows/desktop/dd183449) values that contains the colors that are displayed in the color bar control."},{"pos":[9015,9176],"content":"A <bpt id=\"p1\">[</bpt>COLORREF<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/dd183449)</ept> value that is the color that the user has currently selected from the color bar control.","source":"A [COLORREF](http://msdn.microsoft.com/library/windows/desktop/dd183449) value that is the color that the user has currently selected from the color bar control."},{"pos":[9198,9388],"content":"A <bpt id=\"p1\">[</bpt>CList<ept id=\"p1\">](../../mfc/reference/clist-class.md)</ept> of <bpt id=\"p2\">[</bpt>COLORREF<ept id=\"p2\">](http://msdn.microsoft.com/library/windows/desktop/dd183449)</ept> values that contains the colors that are currently used in a document.","source":"A [CList](../../mfc/reference/clist-class.md) of [COLORREF](http://msdn.microsoft.com/library/windows/desktop/dd183449) values that contains the colors that are currently used in a document."},{"content":"An unsigned integer that is the command ID of a color button.","pos":[9408,9469]},{"content":"An integer that is the horizontal margin between the color buttons in a grid of colors.","pos":[9490,9577]},{"content":"An integer that is the horizontal offset to the center of the color button.","pos":[9598,9673]},{"content":"This value is significant if the button displays text or an image in addition to a color.","pos":[9674,9763]},{"content":"An integer that is the number of columns in a color bar control grid of colors.","pos":[9784,9863]},{"content":"An integer that is the number of columns in a vertically oriented grid of colors.","pos":[9888,9969]},{"content":"An integer that is the number of columns in a horizontally oriented grid of colors.","pos":[9991,10074]},{"content":"An integer that is the height of a row of color buttons in a grid of colors.","pos":[10094,10170]},{"content":"An integer that is the vertical margin between the color buttons in a grid of colors.","pos":[10191,10276]},{"content":"An integer that is the vertical offset to the center of the color button.","pos":[10297,10370]},{"content":"This value is significant if the button displays text or an image in addition to a color.","pos":[10371,10460]},{"pos":[10477,10582],"content":"A <bpt id=\"p1\">[</bpt>CPalette<ept id=\"p1\">](../../mfc/reference/cpalette-class.md)</ept> of the colors that are used in the color bar control.","source":"A [CPalette](../../mfc/reference/cpalette-class.md) of the colors that are used in the color bar control."},{"content":"A pointer to a <bpt id=\"p1\">[</bpt>CMFCColorButton<ept id=\"p1\">](../../mfc/reference/cmfccolorbutton-class.md)</ept> object that is the parent of the current button.","pos":[10602,10729],"source":"A pointer to a [CMFCColorButton](../../mfc/reference/cmfccolorbutton-class.md) object that is the parent of the current button."},{"content":"This value is significant if the color button is in a hierarchy of toolbar controls or is in a color property grid control.","pos":[10730,10853]},{"content":"A pointer to a <bpt id=\"p1\">[</bpt>CMFCRibbonColorButton<ept id=\"p1\">](../../mfc/reference/cmfcribboncolorbutton-class.md)</ept> object that is on the ribbon and is the parent button of the current button.","pos":[10879,11046],"source":"A pointer to a [CMFCRibbonColorButton](../../mfc/reference/cmfcribboncolorbutton-class.md) object that is on the ribbon and is the parent button of the current button."},{"content":"This value is significant if the color button is in a hierarchy of toolbar controls or is in a color property grid control.","pos":[11047,11170]},{"pos":[11192,11288],"content":"A pointer to a <bpt id=\"p1\">[</bpt>CMFCPropertyGridCtrl<ept id=\"p1\">](../../mfc/reference/cmfcpropertygridctrl-class.md)</ept> object.","source":"A pointer to a [CMFCPropertyGridCtrl](../../mfc/reference/cmfcpropertygridctrl-class.md) object."},{"content":"A <bpt id=\"p1\">[</bpt>CString<ept id=\"p1\">](../../atl-mfc-shared/reference/cstringt-class.md)</ept> that is the text that is displayed on the <bpt id=\"p2\">**</bpt>Automatic<ept id=\"p2\">**</ept> button.","pos":[11310,11435],"source":"A [CString](../../atl-mfc-shared/reference/cstringt-class.md) that is the text that is displayed on the **Automatic** button."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>CMFCColorBar::EnableAutomaticButton<ept id=\"p1\">](#cmfccolorbar__enableautomaticbutton)</ept>.","pos":[11436,11538],"source":" For more information, see [CMFCColorBar::EnableAutomaticButton](#cmfccolorbar__enableautomaticbutton)."},{"content":"A <bpt id=\"p1\">[</bpt>CString<ept id=\"p1\">](../../atl-mfc-shared/reference/cstringt-class.md)</ept> that is the text that is displayed on the document colors button.","pos":[11560,11687],"source":"A [CString](../../atl-mfc-shared/reference/cstringt-class.md) that is the text that is displayed on the document colors button."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>CMFCColorBar::SetDocumentColors<ept id=\"p1\">](#cmfccolorbar__setdocumentcolors)</ept>.","pos":[11688,11782],"source":" For more information, see [CMFCColorBar::SetDocumentColors](#cmfccolorbar__setdocumentcolors)."},{"content":"A <bpt id=\"p1\">[</bpt>CString<ept id=\"p1\">](../../atl-mfc-shared/reference/cstringt-class.md)</ept> that is the text that is displayed on the <bpt id=\"p2\">*</bpt>other<ept id=\"p2\">*</ept> button.","pos":[11805,11924],"source":"A [CString](../../atl-mfc-shared/reference/cstringt-class.md) that is the text that is displayed on the *other* button."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>CMFCColorBar::EnableOtherButton<ept id=\"p1\">](#cmfccolorbar__enableotherbutton)</ept>.","pos":[11925,12019],"source":" For more information, see [CMFCColorBar::EnableOtherButton](#cmfccolorbar__enableotherbutton)."},{"content":"Remarks","pos":[12029,12036]},{"content":"Usually, you do not create a <ph id=\"ph1\">`CMFCColorBar`</ph> object directly.","pos":[12040,12100],"source":"Usually, you do not create a `CMFCColorBar` object directly."},{"content":"Instead, the <bpt id=\"p1\">[</bpt>CMFCColorMenuButton Class<ept id=\"p1\">](../../mfc/reference/cmfccolormenubutton-class.md)</ept> (used in menus and toolbars) or the <bpt id=\"p2\">[</bpt>CMFCColorButton Class<ept id=\"p2\">](../../mfc/reference/cmfccolorbutton-class.md)</ept> creates the <ph id=\"ph1\">`CMFCColorBar`</ph> object.","pos":[12101,12332],"source":" Instead, the [CMFCColorMenuButton Class](../../mfc/reference/cmfccolormenubutton-class.md) (used in menus and toolbars) or the [CMFCColorButton Class](../../mfc/reference/cmfccolorbutton-class.md) creates the `CMFCColorBar` object."},{"pos":[12339,12401],"content":"The <ph id=\"ph1\">`CMFCColorBar`</ph> class provides the following functionality:","source":"The `CMFCColorBar` class provides the following functionality:"},{"content":"Automatically adjusts the list of document colors.","pos":[12411,12461]},{"content":"Saves and restores its state, together with the document state.","pos":[12471,12534]},{"content":"Manages the \"automatic\" button.","pos":[12544,12575]},{"pos":[12585,12705],"content":"Uses the <bpt id=\"p1\">[</bpt>CMFCColorPickerCtrl Class<ept id=\"p1\">](../../mfc/reference/cmfccolorpickerctrl-class.md)</ept> control to select a custom color.","source":"Uses the [CMFCColorPickerCtrl Class](../../mfc/reference/cmfccolorpickerctrl-class.md) control to select a custom color."},{"pos":[12715,12853],"content":"Supports a \"tear-off\" state (if it is created by using the <bpt id=\"p1\">[</bpt>CMFCColorMenuButton Class<ept id=\"p1\">](../../mfc/reference/cmfccolormenubutton-class.md)</ept>).","source":"Supports a \"tear-off\" state (if it is created by using the [CMFCColorMenuButton Class](../../mfc/reference/cmfccolormenubutton-class.md))."},{"pos":[12860,12930],"content":"To incorporate the <ph id=\"ph1\">`CMFCColorBar`</ph> functionality into your application:","source":"To incorporate the `CMFCColorBar` functionality into your application:"},{"content":"Create a regular menu button and assign it an ID, for example ID_CHAR_COLOR.","pos":[12940,13016]},{"pos":[13026,13415],"content":"In your frame window class, override the <bpt id=\"p1\">[</bpt>CFrameWndEx::OnShowPopupMenu<ept id=\"p1\">](../../mfc/reference/cframewndex-class.md#cframewndex__onshowpopupmenu)</ept> method and replace the regular menu button with a <bpt id=\"p2\">[</bpt>CMFCColorMenuButton Class<ept id=\"p2\">](../../mfc/reference/cmfccolormenubutton-class.md)</ept> object (by calling <bpt id=\"p3\">[</bpt>CMFCToolBar::ReplaceButton<ept id=\"p3\">](../../mfc/reference/cmfctoolbar-class.md#cmfctoolbar__replacebutton)</ept>).","source":"In your frame window class, override the [CFrameWndEx::OnShowPopupMenu](../../mfc/reference/cframewndex-class.md#cframewndex__onshowpopupmenu) method and replace the regular menu button with a [CMFCColorMenuButton Class](../../mfc/reference/cmfccolormenubutton-class.md) object (by calling [CMFCToolBar::ReplaceButton](../../mfc/reference/cmfctoolbar-class.md#cmfctoolbar__replacebutton))."},{"content":"Set all the styles and enable or disable the features of the <ph id=\"ph1\">`CMFCColorBar`</ph> object during <bpt id=\"p1\">[</bpt>CMFCColorMenuButton Class<ept id=\"p1\">](../../mfc/reference/cmfccolormenubutton-class.md)</ept> creation.","pos":[13425,13602],"source":"Set all the styles and enable or disable the features of the `CMFCColorBar` object during [CMFCColorMenuButton Class](../../mfc/reference/cmfccolormenubutton-class.md) creation."},{"content":"The <ph id=\"ph1\">`CMFCColorMenuButton`</ph> object dynamically creates the <ph id=\"ph2\">`CMFCColorBar`</ph> object after the framework calls the <ph id=\"ph3\">`CreatePopupMenu`</ph> method.","pos":[13603,13737],"source":" The `CMFCColorMenuButton` object dynamically creates the `CMFCColorBar` object after the framework calls the `CreatePopupMenu` method."},{"content":"When the user clicks a color bar control button, the framework uses the <ph id=\"ph1\">`ON_COMMAND`</ph> macro to notify the parent of the color bar control.","pos":[13744,13881],"source":"When the user clicks a color bar control button, the framework uses the `ON_COMMAND` macro to notify the parent of the color bar control."},{"content":"In the macro, the command ID parameter is the value that you assigned to the color bar control button in step 1 (ID_CHAR_COLOR in this example).","pos":[13882,14026]},{"content":"For more information, see the <bpt id=\"p1\">[</bpt>CMFCColorMenuButton Class<ept id=\"p1\">](../../mfc/reference/cmfccolormenubutton-class.md)</ept>, <bpt id=\"p2\">[</bpt>CMFCColorButton Class<ept id=\"p2\">](../../mfc/reference/cmfccolorbutton-class.md)</ept>, <bpt id=\"p3\">[</bpt>CMFCColorPickerCtrl Class<ept id=\"p3\">](../../mfc/reference/cmfccolorpickerctrl-class.md)</ept>, <bpt id=\"p4\">[</bpt>CFrameWndEx Class<ept id=\"p4\">](../../mfc/reference/cframewndex-class.md)</ept>, and <bpt id=\"p5\">[</bpt>CMFCToolBar Class<ept id=\"p5\">](../../mfc/reference/cmfctoolbar-class.md)</ept> classes.","pos":[14027,14423],"source":" For more information, see the [CMFCColorMenuButton Class](../../mfc/reference/cmfccolormenubutton-class.md), [CMFCColorButton Class](../../mfc/reference/cmfccolorbutton-class.md), [CMFCColorPickerCtrl Class](../../mfc/reference/cmfccolorpickerctrl-class.md), [CFrameWndEx Class](../../mfc/reference/cframewndex-class.md), and [CMFCToolBar Class](../../mfc/reference/cmfctoolbar-class.md) classes."},{"content":"Example","pos":[14432,14439]},{"content":"The following example demonstrates how to configure a color bar by using various methods in the <ph id=\"ph1\">`CMFCColorBar`</ph> class.","pos":[14443,14560],"source":"The following example demonstrates how to configure a color bar by using various methods in the `CMFCColorBar` class."},{"content":"The methods set the horizontal and vertical margins, enable the other button, create a color bar control window, and sets the currently selected color.","pos":[14561,14712]},{"content":"This example is part of the <bpt id=\"p1\">[</bpt>New Controls sample<ept id=\"p1\">](../../visual-cpp-samples.md)</ept>.","pos":[14713,14792],"source":" This example is part of the [New Controls sample](../../visual-cpp-samples.md)."},{"content":"NVC_MFC_NewControls#1","pos":[14810,14831]},{"content":"NVC_MFC_NewControls#2","pos":[14907,14928]},{"content":"Inheritance Hierarchy","pos":[15001,15022]},{"content":"CObject","pos":[15027,15034]},{"content":"CCmdTarget","pos":[15081,15091]},{"content":"CWnd","pos":[15141,15145]},{"content":"CBasePane","pos":[15189,15198]},{"content":"CPane","pos":[15247,15252]},{"content":"CMFCBaseToolBar","pos":[15297,15312]},{"content":"CMFCToolBar","pos":[15367,15378]},{"content":"CMFCPopupMenuBar","pos":[15429,15445]},{"content":"CMFCColorBar","pos":[15501,15513]},{"content":"Requirements","pos":[15566,15578]},{"pos":[15582,15607],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> afxcolorbar.h","source":"**Header:** afxcolorbar.h"},{"pos":[15663,15692],"content":"CMFCColorBar::AdjustLocations"},{"content":"Adjusts the positions of the color buttons on the color bar control.","pos":[15696,15764]},{"content":"Remarks","pos":[15821,15828]},{"pos":[15832,15907],"content":"This method is called by the framework during <ph id=\"ph1\">`WM_SIZE`</ph> message processing.","source":"This method is called by the framework during `WM_SIZE` message processing."},{"pos":[15969,16004],"content":"CMFCColorBar::AllowChangeTextLabels"},{"content":"Indicates whether the text label of color buttons can change.","pos":[16008,16069]},{"content":"Return Value","pos":[16141,16153]},{"pos":[16157,16172],"content":"Always <ph id=\"ph1\">`FALSE`</ph>.","source":"Always `FALSE`."},{"content":"Remarks","pos":[16182,16189]},{"content":"By default, this method always returns <ph id=\"ph1\">`FALSE`</ph>, which means text labels cannot be modified.","pos":[16193,16284],"source":"By default, this method always returns `FALSE`, which means text labels cannot be modified."},{"content":"Override this method to enable modifying text labels.","pos":[16285,16338]},{"pos":[16394,16423],"content":"CMFCColorBar::AllowShowOnList"},{"content":"Indicates whether the color bar control object can appear in a toolbar list during the customization process.","pos":[16427,16536]},{"content":"Return Value","pos":[16602,16614]},{"pos":[16618,16632],"content":"Always <ph id=\"ph1\">`TRUE`</ph>.","source":"Always `TRUE`."},{"content":"Remarks","pos":[16642,16649]},{"content":"By default, this method always returns <ph id=\"ph1\">`TRUE`</ph>, which means the framework can display the color bar control during the customization process.","pos":[16653,16793],"source":"By default, this method always returns `TRUE`, which means the framework can display the color bar control during the customization process."},{"content":"Override this method to implement a different behavior.","pos":[16794,16849]},{"pos":[16898,16920],"content":"CMFCColorBar::CalcSize"},{"content":"Called by the framework as part of the layout calculation process.","pos":[16924,16990]},{"content":"Parameters","pos":[17055,17065]},{"content":"[in]","pos":[17069,17073]},{"content":"to specify that the color bar control is docked vertically; <ph id=\"ph1\">`FALSE`</ph> to specify that the color bar control is docked horizontally.","pos":[17096,17225],"source":" to specify that the color bar control is docked vertically; `FALSE` to specify that the color bar control is docked horizontally."},{"content":"Return Value","pos":[17235,17247]},{"content":"The size of the array of color buttons in a color bar control.","pos":[17251,17313]},{"pos":[17366,17392],"content":"CMFCColorBar::CMFCColorBar"},{"pos":[17396,17431],"content":"Constructs a <ph id=\"ph1\">`CMFCColorBar`</ph> object.","source":"Constructs a `CMFCColorBar` object."},{"content":"Parameters","pos":[18235,18245]},{"content":"[in]","pos":[18249,18253]},{"content":"An array of colors that the framework displays on the color bar control.","pos":[18266,18338]},{"content":"[in]","pos":[18345,18349]},{"content":"The initially selected color.","pos":[18361,18390]},{"content":"[in]","pos":[18397,18401]},{"content":"The text label of the <bpt id=\"p1\">*</bpt>automatic<ept id=\"p1\">*</ept> (default) color button, or <ph id=\"ph1\">`NULL`</ph>.","pos":[18421,18489],"source":" The text label of the *automatic* (default) color button, or `NULL`."},{"pos":[18496,18557],"content":"The standard label for the automatic button is <bpt id=\"p1\">**</bpt>Automatic<ept id=\"p1\">**</ept>.","source":"The standard label for the automatic button is **Automatic**."},{"content":"[in]","pos":[18564,18568]},{"content":"The text label of the <bpt id=\"p1\">*</bpt>other<ept id=\"p1\">*</ept> button, which displays more color choices, or <ph id=\"ph1\">`NULL`</ph>.","pos":[18589,18672],"source":" The text label of the *other* button, which displays more color choices, or `NULL`."},{"pos":[18679,18741],"content":"The standard label for the other button is <bpt id=\"p1\">**</bpt>More Colors...<ept id=\"p1\">**</ept>.","source":"The standard label for the other button is **More Colors...**."},{"content":"[in]","pos":[18748,18752]},{"content":"The text label of the document colors button.","pos":[18772,18817]},{"content":"The document colors palette lists all the colors that the document currently uses.","pos":[18818,18900]},{"content":"[in]","pos":[18907,18911]},{"content":"A list of colors that the document currently uses.","pos":[18930,18980]},{"content":"[in]","pos":[18987,18991]},{"content":"The number of columns that the array of colors has.","pos":[19006,19057]},{"content":"[in]","pos":[19064,19068]},{"content":"The number of rows that the color bar has when it is docked horizontally.","pos":[19088,19161]},{"content":"[in]","pos":[19168,19172]},{"content":"The number of columns that the color bar has when it is docked vertically.","pos":[19191,19265]},{"content":"[in]","pos":[19272,19276]},{"content":"The default color that the framework applies when you click the automatic button.","pos":[19297,19378]},{"content":"[in]","pos":[19385,19389]},{"content":"The color bar control command ID.","pos":[19406,19439]},{"content":"[in]","pos":[19446,19450]},{"content":"A pointer to a parent button.","pos":[19467,19496]},{"content":"[in]","pos":[19503,19507]},{"content":"An existing <ph id=\"ph1\">`CMFCColorBar`</ph> object to be copied into the new <ph id=\"ph2\">`CMFCColorBar`</ph> object.","pos":[19517,19599],"source":" An existing `CMFCColorBar` object to be copied into the new `CMFCColorBar` object."},{"content":"[in]","pos":[19606,19610]},{"content":"The command ID.","pos":[19628,19643]},{"pos":[19697,19724],"content":"CMFCColorBar::ContextToSize"},{"content":"Calculates the vertical and horizontal margins that are required to contain the buttons on the color bar control, and adjusts the location of those buttons.","pos":[19728,19884]},{"content":"Parameters","pos":[19997,20007]},{"content":"Parameter","pos":[20014,20023]},{"content":"Description","pos":[20024,20035]},{"pos":[20078,20082],"content":"[in]"},{"content":"to specify that the shape of the buttons on a color bar control are square; otherwise, <ph id=\"ph1\">`FALSE`</ph>.","pos":[20107,20202],"source":" to specify that the shape of the buttons on a color bar control are square; otherwise, `FALSE`."},{"content":"The default value is <ph id=\"ph1\">`TRUE`</ph>.","pos":[20203,20231],"source":" The default value is `TRUE`."},{"pos":[20236,20240],"content":"[in]"},{"content":"to specify that the content on the face of a color bar control button is centered; otherwise, <ph id=\"ph1\">`FALSE`</ph>.","pos":[20265,20367],"source":" to specify that the content on the face of a color bar control button is centered; otherwise, `FALSE`."},{"content":"The default value is <ph id=\"ph1\">`TRUE`</ph>.","pos":[20368,20396],"source":" The default value is `TRUE`."},{"content":"Remarks","pos":[20407,20414]},{"pos":[20461,20481],"content":"CMFCColorBar::Create"},{"pos":[20485,20565],"content":"Creates a color bar control window and attaches it to the <ph id=\"ph1\">`CMFCColorBar`</ph> object.","source":"Creates a color bar control window and attaches it to the `CMFCColorBar` object."},{"content":"Parameters","pos":[20777,20787]},{"content":"[in]","pos":[20791,20795]},{"content":"Pointer to the parent window.","pos":[20812,20841]},{"content":"[in]","pos":[20848,20852]},{"content":"A bitwise combination (OR) of <bpt id=\"p1\">[</bpt>window styles<ept id=\"p1\">](../../mfc/reference/window-styles.md)</ept>.","pos":[20866,20950],"source":" A bitwise combination (OR) of [window styles](../../mfc/reference/window-styles.md)."},{"content":"[in]","pos":[20957,20961]},{"content":"The command ID.","pos":[20971,20986]},{"content":"[in]","pos":[20993,20997]},{"content":"Pointer to a palette of colors.","pos":[21012,21043]},{"content":"The default is <ph id=\"ph1\">`NULL`</ph>.","pos":[21044,21066],"source":" The default is `NULL`."},{"content":"[in]","pos":[21073,21077]},{"content":"The number of columns in the color bar control.","pos":[21092,21139]},{"content":"The default is 0.","pos":[21140,21157]},{"content":"[in]","pos":[21164,21168]},{"content":"The number of rows in the color bar control when it is docked horizontally.","pos":[21188,21263]},{"content":"The default is 0.","pos":[21264,21281]},{"content":"[in]","pos":[21288,21292]},{"content":"The number of columns in the color bar control when it is docked vertically.","pos":[21311,21387]},{"content":"The default is 0.","pos":[21388,21405]},{"content":"Return Value","pos":[21415,21427]},{"pos":[21438,21487],"content":"if this method is successful; otherwise, <ph id=\"ph1\">`FALSE`</ph>.","source":" if this method is successful; otherwise, `FALSE`."},{"content":"Remarks","pos":[21497,21504]},{"content":"To construct a <ph id=\"ph1\">`CMFCColorBar`</ph> object, call the class constructor then this method.","pos":[21508,21590],"source":"To construct a `CMFCColorBar` object, call the class constructor then this method."},{"content":"The <ph id=\"ph1\">`Create`</ph> method creates the Windows control and initializes a list of colors.","pos":[21591,21672],"source":" The `Create` method creates the Windows control and initializes a list of colors."},{"pos":[21726,21753],"content":"CMFCColorBar::CreateControl"},{"pos":[21757,21909],"content":"Creates a color bar control window, attaches it to the <ph id=\"ph1\">`CMFCColorBar`</ph> object, and resizes the control window to contain the specified palette of colors.","source":"Creates a color bar control window, attaches it to the `CMFCColorBar` object, and resizes the control window to contain the specified palette of colors."},{"content":"Parameters","pos":[22080,22090]},{"content":"[in]","pos":[22094,22098]},{"content":"Pointer to the parent window.","pos":[22115,22144]},{"content":"Cannot be <ph id=\"ph1\">`NULL`</ph>.","pos":[22145,22162],"source":" Cannot be `NULL`."},{"content":"[in]","pos":[22169,22173]},{"content":"A bounding rectangle that specifies where to draw the color bar control.","pos":[22184,22256]},{"content":"[in]","pos":[22263,22267]},{"content":"The control ID.","pos":[22277,22292]},{"content":"[in]","pos":[22299,22303]},{"content":"The ideal number of columns in the color bar control.","pos":[22318,22371]},{"content":"This method modifies that number to fit the specified palette of colors.","pos":[22372,22444]},{"content":"The default is -1, which means this parameter is not specified.","pos":[22445,22508]},{"content":"[in]","pos":[22515,22519]},{"content":"Pointer to a palette of colors, or <ph id=\"ph1\">`NULL`</ph>.","pos":[22534,22576],"source":" Pointer to a palette of colors, or `NULL`."},{"content":"If this parameter is <ph id=\"ph1\">`NULL`</ph>, this method calculates the size of the color bar control as if 20 colors were specified.","pos":[22577,22694],"source":" If this parameter is `NULL`, this method calculates the size of the color bar control as if 20 colors were specified."},{"content":"The default is <ph id=\"ph1\">`NULL`</ph>.","pos":[22695,22717],"source":" The default is `NULL`."},{"content":"Return Value","pos":[22727,22739]},{"pos":[22750,22793],"content":"if this method succeeds; otherwise <ph id=\"ph1\">`FALSE`</ph>.","source":" if this method succeeds; otherwise `FALSE`."},{"content":"Remarks","pos":[22803,22810]},{"pos":[22814,23035],"content":"This method uses the <ph id=\"ph1\">`rect`</ph>, <ph id=\"ph2\">`nColumns`</ph>, and <ph id=\"ph3\">`pPalette`</ph> parameters to calculate the appropriate number or rows and columns in the color bar control, and then calls the <bpt id=\"p1\">[</bpt>CMFCColorBar::Create<ept id=\"p1\">](#cmfccolorbar__create)</ept> method.","source":"This method uses the `rect`, `nColumns`, and `pPalette` parameters to calculate the appropriate number or rows and columns in the color bar control, and then calls the [CMFCColorBar::Create](#cmfccolorbar__create) method."},{"pos":[23089,23116],"content":"CMFCColorBar::CreatePalette"},{"content":"Initializes a palette with the colors in a specified array of colors.","pos":[23120,23189]},{"content":"Parameters","pos":[23316,23326]},{"content":"Parameter","pos":[23333,23342]},{"content":"Description","pos":[23343,23354]},{"pos":[23397,23401],"content":"[in]"},{"content":"An array of colors.","pos":[23413,23432]},{"pos":[23437,23441],"content":"[in]"},{"content":"A palette of colors.","pos":[23452,23472]},{"content":"Return Value","pos":[23483,23495]},{"pos":[23506,23555],"content":"if this method is successful; otherwise, <ph id=\"ph1\">`FALSE`</ph>.","source":" if this method is successful; otherwise, `FALSE`."},{"pos":[23617,23652],"content":"CMFCColorBar::EnableAutomaticButton"},{"content":"Shows or hides the automatic button.","pos":[23656,23692]},{"content":"Parameters","pos":[23825,23835]},{"content":"[in]","pos":[23839,23843]},{"content":"The text label of the <bpt id=\"p1\">*</bpt>automatic<ept id=\"p1\">*</ept> (default) color button, or <ph id=\"ph1\">`NULL`</ph>.","pos":[23859,23927],"source":" The text label of the *automatic* (default) color button, or `NULL`."},{"pos":[23934,23995],"content":"The standard label for the automatic button is <bpt id=\"p1\">**</bpt>Automatic<ept id=\"p1\">**</ept>.","source":"The standard label for the automatic button is **Automatic**."},{"content":"[in]","pos":[24002,24006]},{"content":"The default color that the framework applies when you click the automatic button.","pos":[24027,24108]},{"content":"[in]","pos":[24115,24119]},{"content":"to enable the automatic button; <ph id=\"ph1\">`FALSE`</ph> to disable the automatic button.","pos":[24140,24212],"source":" to enable the automatic button; `FALSE` to disable the automatic button."},{"content":"The default value is <ph id=\"ph1\">`TRUE`</ph>.","pos":[24213,24241],"source":" The default value is `TRUE`."},{"content":"Remarks","pos":[24251,24258]},{"pos":[24262,24389],"content":"The text label of the automatic button is deleted if the <ph id=\"ph1\">`lpszLabel`</ph> parameter is <ph id=\"ph2\">`NULL`</ph> or the <ph id=\"ph3\">`bEnable`</ph> parameter is <ph id=\"ph4\">`FALSE`</ph>.","source":"The text label of the automatic button is deleted if the `lpszLabel` parameter is `NULL` or the `bEnable` parameter is `FALSE`."},{"pos":[24447,24478],"content":"CMFCColorBar::EnableOtherButton"},{"content":"Enables or disables the display of a dialog box that lets the user select more colors.","pos":[24482,24568]},{"content":"Parameters","pos":[24696,24706]},{"content":"[in]","pos":[24710,24714]},{"content":"The text label of the <bpt id=\"p1\">*</bpt>other<ept id=\"p1\">*</ept> button, which displays more color choices, or <ph id=\"ph1\">`NULL`</ph>.","pos":[24730,24813],"source":" The text label of the *other* button, which displays more color choices, or `NULL`."},{"pos":[24820,24877],"content":"The standard label for this button is <bpt id=\"p1\">**</bpt>More Colors...<ept id=\"p1\">**</ept>.","source":"The standard label for this button is **More Colors...**."},{"content":"[in]","pos":[24884,24888]},{"content":"to display the <bpt id=\"p1\">[</bpt>CMFCColorDialog<ept id=\"p1\">](../../mfc/reference/cmfccolordialog-class.md)</ept> dialog box; <ph id=\"ph1\">`FALSE`</ph> to display the standard <bpt id=\"p2\">[</bpt>CColorDialog<ept id=\"p2\">](../../mfc/reference/ccolordialog-class.md)</ept> dialog box.","pos":[24914,25106],"source":" to display the [CMFCColorDialog](../../mfc/reference/cmfccolordialog-class.md) dialog box; `FALSE` to display the standard [CColorDialog](../../mfc/reference/ccolordialog-class.md) dialog box."},{"content":"The default value is <ph id=\"ph1\">`TRUE`</ph>.","pos":[25107,25135],"source":" The default value is `TRUE`."},{"content":"[in]","pos":[25142,25146]},{"content":"to enable the                                button; <ph id=\"ph1\">`FALSE`</ph> to disable the button.","pos":[25167,25250],"source":" to enable the                                button; `FALSE` to disable the button."},{"content":"The default value is <ph id=\"ph1\">`TRUE`</ph>.","pos":[25251,25279],"source":" The default value is `TRUE`."},{"pos":[25328,25350],"content":"CMFCColorBar::GetColor"},{"content":"Retrieves the currently selected color.","pos":[25354,25393]},{"content":"Return Value","pos":[25448,25460]},{"content":"The currently selected color.","pos":[25464,25493]},{"pos":[25550,25580],"content":"CMFCColorBar::GetColorGridSize"},{"content":"Calculates the number of rows and columns in the grid of a color bar control.","pos":[25584,25661]},{"content":"Parameters","pos":[25735,25745]},{"content":"Parameter","pos":[25752,25761]},{"content":"Description","pos":[25762,25773]},{"pos":[25816,25820],"content":"[in]"},{"pos":[25840,25979],"content":"to perform the calculation for a vertically docked color bar control; otherwise, perform the calculation for a horizontally docked control."},{"content":"Return Value","pos":[25990,26002]},{"pos":[26006,26175],"content":"A <bpt id=\"p1\">[</bpt>CSize<ept id=\"p1\">](../../atl-mfc-shared/reference/csize-class.md)</ept> object whose <ph id=\"ph1\">`cx`</ph> component contains the number of columns and whose <ph id=\"ph2\">`cy`</ph> component contains the number of rows.","source":"A [CSize](../../atl-mfc-shared/reference/csize-class.md) object whose `cx` component contains the number of columns and whose `cy` component contains the number of rows."},{"pos":[26228,26254],"content":"CMFCColorBar::GetCommandID"},{"content":"Retrieves the command ID of the current color bar control.","pos":[26258,26316]},{"content":"Return Value","pos":[26371,26383]},{"content":"A command ID.","pos":[26387,26400]},{"content":"Remarks","pos":[26410,26417]},{"pos":[26421,26567],"content":"When the user selects a new color, the framework sends the command ID in a <ph id=\"ph1\">`WM_COMMAND`</ph> message to notify the parent of the <ph id=\"ph2\">`CMFCColorBar`</ph> object.","source":"When the user selects a new color, the framework sends the command ID in a `WM_COMMAND` message to notify the parent of the `CMFCColorBar` object."},{"pos":[26622,26650],"content":"CMFCColorBar::GetExtraHeight"},{"pos":[26654,26821],"content":"Calculates the additional height that the current color bar requires to display miscellaneous user interface elements, such as the <bpt id=\"p1\">**</bpt>Other<ept id=\"p1\">**</ept> button or document colors.","source":"Calculates the additional height that the current color bar requires to display miscellaneous user interface elements, such as the **Other** button or document colors."},{"content":"Parameters","pos":[26892,26902]},{"content":"Parameter","pos":[26909,26918]},{"content":"Description","pos":[26919,26930]},{"pos":[26973,26977],"content":"[in]"},{"content":"If the color bar control contains document colors, the number of columns to display in the grid of document colors.","pos":[26992,27107]},{"content":"Otherwise, this value is not used.","pos":[27108,27142]},{"content":"Return Value","pos":[27153,27165]},{"content":"The calculated extra height that is required.","pos":[27169,27214]},{"pos":[27274,27307],"content":"CMFCColorBar::GetHighlightedColor"},{"pos":[27311,27410],"content":"Retrieves the color that signifies that a color button has the focus; that is, the button is <bpt id=\"p1\">*</bpt>hot<ept id=\"p1\">*</ept>.","source":"Retrieves the color that signifies that a color button has the focus; that is, the button is *hot*."},{"content":"Return Value","pos":[27476,27488]},{"content":"An RGB value.","pos":[27492,27505]},{"content":"Remarks","pos":[27515,27522]},{"pos":[27576,27603],"content":"CMFCColorBar::GetHorzMargin"},{"content":"Retrieves the horizontal margin, which is the space between the left or right color cell and the client area boundary.","pos":[27607,27725]},{"content":"Return Value","pos":[27771,27783]},{"content":"The horizontal margin.","pos":[27787,27809]},{"pos":[27863,27890],"content":"CMFCColorBar::GetVertMargin"},{"content":"Retrieves the vertical margin, which is the space between the top or bottom color cell and the client area boundary.","pos":[27894,28010]},{"content":"Return Value","pos":[28065,28077]},{"content":"The vertical margin.","pos":[28081,28101]},{"pos":[28152,28176],"content":"CMFCColorBar::InitColors"},{"content":"Initializes an array of colors with the colors in a specified palette, or with the system default palette.","pos":[28180,28286]},{"content":"Parameters","pos":[28404,28414]},{"content":"Parameter","pos":[28421,28430]},{"content":"Description","pos":[28431,28442]},{"pos":[28485,28489],"content":"[in]"},{"content":"A pointer to a palette object, or <ph id=\"ph1\">`NULL`</ph>.","pos":[28501,28542],"source":"A pointer to a palette object, or `NULL`."},{"content":"If this parameter is <ph id=\"ph1\">`NULL`</ph>, this method uses the default palette of the operating system.","pos":[28543,28633],"source":" If this parameter is `NULL`, this method uses the default palette of the operating system."},{"pos":[28638,28642],"content":"[in]"},{"content":"An array of colors.","pos":[28654,28673]},{"content":"Return Value","pos":[28684,28696]},{"content":"The number of elements in the array of colors.","pos":[28700,28746]},{"pos":[28796,28819],"content":"CMFCColorBar::IsTearOff"},{"content":"Indicates whether the current color bar is dockable.","pos":[28823,28875]},{"content":"Return Value","pos":[28927,28939]},{"pos":[28950,29015],"content":"if the current color bar control is dockable; otherwise, <ph id=\"ph1\">`FALSE`</ph>.","source":" if the current color bar control is dockable; otherwise, `FALSE`."},{"content":"Remarks","pos":[29025,29032]},{"content":"If the color bar control is dockable, it can be torn off a control bar and docked at another location.","pos":[29036,29138]},{"pos":[29184,29203],"content":"CMFCColorBar::OnKey"},{"content":"Called by the framework when a user presses a keyboard button.","pos":[29207,29269]},{"content":"Parameters","pos":[29326,29336]},{"content":"[in]","pos":[29340,29344]},{"content":"The virtual-key code for the key that a user pressed.","pos":[29356,29409]},{"content":"Return Value","pos":[29419,29431]},{"pos":[29442,29505],"content":"if this method processes the specified key; otherwise, <ph id=\"ph1\">`FALSE`</ph>.","source":" if this method processes the specified key; otherwise, `FALSE`."},{"pos":[29559,29586],"content":"CMFCColorBar::OnSendCommand"},{"content":"Called by the framework to close a hierarchy of pop-up controls.","pos":[29590,29654]},{"content":"Parameters","pos":[29741,29751]},{"content":"Parameter","pos":[29758,29767]},{"content":"Description","pos":[29768,29779]},{"pos":[29822,29826],"content":"[in]"},{"content":"Pointer to a control that resides on a toolbar.","pos":[29837,29884]},{"content":"Return Value","pos":[29895,29907]},{"pos":[29918,29967],"content":"if this method is successful; otherwise, <ph id=\"ph1\">`FALSE`</ph>.","source":" if this method is successful; otherwise, `FALSE`."},{"pos":[30021,30048],"content":"CMFCColorBar::OnUpdateCmdUI"},{"content":"Called by the framework to enable or disable a user-interface item of a color bar control before the item is displayed.","pos":[30052,30171]},{"content":"Parameters","pos":[30280,30290]},{"content":"[in]","pos":[30294,30298]},{"content":"Pointer to a window that contains a user-interface item to update.","pos":[30312,30378]},{"content":"[in]","pos":[30385,30389]},{"content":"to disable the user-interface item if no handler is defined in a message map; otherwise, <ph id=\"ph1\">`FALSE`</ph>.","pos":[30421,30518],"source":" to disable the user-interface item if no handler is defined in a message map; otherwise, `FALSE`."},{"content":"Remarks","pos":[30528,30535]},{"content":"When a user of your application clicks a user-interface item, the item must know whether it should be displayed as enabled or disabled.","pos":[30539,30674]},{"content":"The target of the command message provides this information by implementing an <ph id=\"ph1\">`ON_UPDATE_COMMAND_UI`</ph> command handler.","pos":[30675,30793],"source":" The target of the command message provides this information by implementing an `ON_UPDATE_COMMAND_UI` command handler."},{"content":"Use this method to help process the command.","pos":[30794,30838]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>CCmdUI Class<ept id=\"p1\">](../../mfc/reference/ccmdui-class.md)</ept>.","pos":[30839,30917],"source":" For more information, see [CCmdUI Class](../../mfc/reference/ccmdui-class.md)."},{"pos":[30973,31002],"content":"CMFCColorBar::OpenColorDialog"},{"content":"Opens a color dialog box.","pos":[31006,31031]},{"content":"Parameters","pos":[31146,31156]},{"content":"[in]","pos":[31160,31164]},{"content":"The color that is selected by default when the color dialog box opens.","pos":[31183,31253]},{"content":"[out]","pos":[31260,31265]},{"content":"The color that a user selected.","pos":[31280,31311]},{"content":"Return Value","pos":[31321,31333]},{"pos":[31344,31424],"content":"if the user selected a color; <ph id=\"ph1\">`FALSE`</ph> if the user canceled the color dialog box.","source":" if the user selected a color; `FALSE` if the user canceled the color dialog box."},{"content":"Remarks","pos":[31434,31441]},{"pos":[31489,31510],"content":"CMFCColorBar::Rebuild"},{"content":"Completely redraws the color bar control.","pos":[31514,31555]},{"pos":[31648,31675],"content":"CMFCColorBar::SelectPalette"},{"content":"Sets the logical palette of the specified device context to the palette of the parent button of the current color bar control.","pos":[31679,31805]},{"content":"Parameters","pos":[31865,31875]},{"content":"Parameter","pos":[31882,31891]},{"content":"Description","pos":[31892,31903]},{"pos":[31946,31950],"content":"[in]"},{"content":"Pointer to the device context of the parent button of the current color bar control.","pos":[31957,32041]},{"content":"Return Value","pos":[32052,32064]},{"content":"Pointer to the palette that is replaced by the palette of the parent button of the current color bar control.","pos":[32068,32177]},{"pos":[32226,32248],"content":"CMFCColorBar::SetColor"},{"content":"Sets the color that is currently selected.","pos":[32252,32294]},{"content":"Parameters","pos":[32350,32360]},{"content":"[in]","pos":[32364,32368]},{"content":"An RGB color value.","pos":[32380,32399]},{"pos":[32452,32478],"content":"CMFCColorBar::SetColorName"},{"content":"Sets a new name for a specified color.","pos":[32482,32520]},{"content":"Parameters","pos":[32622,32632]},{"content":"[in]","pos":[32636,32640]},{"content":"The RGB value of a color.","pos":[32652,32677]},{"content":"[in]","pos":[32684,32688]},{"content":"The new name for the specified color.","pos":[32702,32739]},{"content":"Remarks","pos":[32749,32756]},{"pos":[32760,32862],"content":"This method changes the name of the specified color in all <ph id=\"ph1\">`CMFCColorBar`</ph> objects in your application.","source":"This method changes the name of the specified color in all `CMFCColorBar` objects in your application."},{"pos":[32915,32941],"content":"CMFCColorBar::SetCommandID"},{"content":"Sets a new command ID for a color bar control.","pos":[32945,32991]},{"content":"Parameters","pos":[33052,33062]},{"content":"[in]","pos":[33066,33070]},{"content":"A command ID.","pos":[33087,33100]},{"content":"Remarks","pos":[33110,33117]},{"content":"Call this method to modify the command ID of a color bar control and to notify the parent window of the control that the ID has changed.","pos":[33121,33257]},{"pos":[33315,33346],"content":"CMFCColorBar::SetDocumentColors"},{"content":"Sets the list of colors that are used in the current document.","pos":[33350,33412]},{"content":"Parameters","pos":[33567,33577]},{"content":"[in]","pos":[33581,33585]},{"content":"A caption that is displayed when the color bar control is not docked.","pos":[33603,33672]},{"content":"[in]","pos":[33679,33683]},{"content":"A list of colors that replaces the current document colors.","pos":[33702,33761]},{"content":"[in]","pos":[33768,33772]},{"content":"to show document colors when the color bar control is docked; otherwise, <ph id=\"ph1\">`FALSE`</ph>.","pos":[33801,33882],"source":" to show document colors when the color bar control is docked; otherwise, `FALSE`."},{"content":"The default value is <ph id=\"ph1\">`FALSE`</ph>.","pos":[33883,33912],"source":" The default value is `FALSE`."},{"content":"Remarks","pos":[33922,33929]},{"content":"<bpt id=\"p1\">*</bpt>Document colors<ept id=\"p1\">*</ept> are the colors that are currently used in a document.","pos":[33933,34004],"source":"*Document colors* are the colors that are currently used in a document."},{"content":"The framework automatically maintains a list of document colors, but you can use this method to modify the list.","pos":[34005,34117]},{"pos":[34171,34198],"content":"CMFCColorBar::SetHorzMargin"},{"content":"Sets the horizontal margin, which is the space between the left or right color cell and the boundary of the client area.","pos":[34202,34322]},{"content":"Parameters","pos":[34384,34394]},{"content":"[in]","pos":[34398,34402]},{"content":"The horizontal margin, in pixels.","pos":[34420,34453]},{"content":"Remarks","pos":[34463,34470]},{"pos":[34474,34599],"content":"By default, the <bpt id=\"p1\">[</bpt>CMFCColorBar::CMFCColorBar<ept id=\"p1\">](#cmfccolorbar__cmfccolorbar)</ept> constructor sets the horizontal margin to 4 pixels.","source":"By default, the [CMFCColorBar::CMFCColorBar](#cmfccolorbar__cmfccolorbar) constructor sets the horizontal margin to 4 pixels."},{"pos":[34651,34676],"content":"CMFCColorBar::SetPropList"},{"pos":[34680,34780],"content":"Sets the <ph id=\"ph1\">`m_pWndPropList`</ph> protected data member to the specified pointer to a property grid control.","source":"Sets the `m_pWndPropList` protected data member to the specified pointer to a property grid control."},{"content":"Parameters","pos":[34855,34865]},{"content":"Parameter","pos":[34872,34881]},{"content":"Description","pos":[34882,34893]},{"pos":[34936,34940],"content":"[in]"},{"content":"Pointer to property grid control object.","pos":[34952,34992]},{"pos":[35047,35074],"content":"CMFCColorBar::SetVertMargin"},{"content":"Sets the vertical margin, which is the space between the top or bottom color cell and the client area boundary.","pos":[35078,35189]},{"content":"Parameters","pos":[35251,35261]},{"content":"[in]","pos":[35265,35269]},{"content":"The vertical margin, in pixels.","pos":[35287,35318]},{"content":"Remarks","pos":[35328,35335]},{"pos":[35339,35462],"content":"By default, the <bpt id=\"p1\">[</bpt>CMFCColorBar::CMFCColorBar<ept id=\"p1\">](#cmfccolorbar__cmfccolorbar)</ept> constructor sets the vertical margin to 4 pixels.","source":"By default, the [CMFCColorBar::CMFCColorBar](#cmfccolorbar__cmfccolorbar) constructor sets the vertical margin to 4 pixels."},{"pos":[35527,35565],"content":"CMFCColorBar::ShowCommandMessageString"},{"content":"Requests the frame window that owns the color bar control to update the message line in the status bar.","pos":[35569,35672]},{"content":"Parameters","pos":[35750,35760]},{"content":"[in]","pos":[35764,35768]},{"content":"A command ID.","pos":[35782,35795]},{"content":"(This parameter is ignored.)","pos":[35796,35824]},{"content":"Remarks","pos":[35834,35841]},{"pos":[35845,35935],"content":"This method sends the <ph id=\"ph1\">`WM_SETMESSAGESTRING`</ph> message to the owner of the color bar control.","source":"This method sends the `WM_SETMESSAGESTRING` message to the owner of the color bar control."},{"content":"See Also","pos":[35944,35952]},{"content":"Hierarchy Chart","pos":[35957,35972]},{"content":"Classes","pos":[36009,36016]}],"content":"---\ntitle: \"CMFCColorBar Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"CMFCColorBar\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"CMFCColorBar class\"\n  - \"CMFCColorBar::m_ColorAutomatic data member\"\n  - \"CMFCColorBar::m_bInternal data member\"\n  - \"CMFCColorBar::m_bIsEnabled data member\"\n  - \"CMFCColorBar::m_nNumColumnsVert data member\"\n  - \"CMFCColorBar::m_nVertMargin data member\"\n  - \"CMFCColorBar::m_strDocColors data member\"\n  - \"CMFCColorBar::m_BoxSize data member\"\n  - \"CMFCColorBar::m_pParentBtn data member\"\n  - \"CMFCColorBar::m_bIsTearOff data member\"\n  - \"CMFCColorBar::m_nHorzOffset data member\"\n  - \"CMFCColorBar::m_pParentRibbonBtn data member\"\n  - \"CMFCColorBar::m_nNumRowsHorz data member\"\n  - \"CMFCColorBar::m_bStdColorDlg data member\"\n  - \"CMFCColorBar::m_strAutoColor data member\"\n  - \"CMFCColorBar::m_ColorNames data member\"\n  - \"CMFCColorBar::m_strOtherColor data member\"\n  - \"CMFCColorBar::m_lstDocColors data member\"\n  - \"CMFCColorBar::m_pWndPropList data member\"\n  - \"CMFCColorBar::m_ColorSelected data member\"\n  - \"CMFCColorBar::m_nCommandID data member\"\n  - \"CMFCColorBar::m_nHorzMargin data member\"\n  - \"CMFCColorBar::m_nRowHeight data member\"\n  - \"CMFCColorBar::m_Palette data member\"\n  - \"CMFCColorBar::m_colors data member\"\n  - \"CMFCColorBar::m_nVertOffset data member\"\n  - \"CMFCColorBar::m_nNumColumns data member\"\n  - \"CMFCColorBar::m_bShowDocColorsWhenDocked data member\"\nms.assetid: 4756ee40-25a5-4cee-af7f-acab7993d1c7\ncaps.latest.revision: 35\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# CMFCColorBar Class\nThe `CMFCColorBar` class represents a docking control bar that can select colors in a document or application.  \n  \n## Syntax  \n  \n```  \nclass CMFCColorBar : public CMFCPopupMenuBar  \n```  \n  \n## Members  \n  \n### Protected Constructors  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CMFCColorBar::CMFCColorBar](#cmfccolorbar__cmfccolorbar)|Constructs a `CMFCColorBar` object.|  \n  \n### Public Methods  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CMFCColorBar::ContextToSize](#cmfccolorbar__contexttosize)|Calculates the vertical and horizontal margins that are required to contain the buttons on the color bar control and then adjusts the location of those buttons.|  \n|[CMFCColorBar::CreateControl](#cmfccolorbar__createcontrol)|Creates a color bar control window, attaches it to the `CMFCColorBar` object, and resizes the control to contain the specified palette of colors.|  \n|[CMFCColorBar::Create](#cmfccolorbar__create)|Creates a color bar control window and attaches it to the `CMFCColorBar` object.|  \n|[CMFCColorBar::EnableAutomaticButton](#cmfccolorbar__enableautomaticbutton)|Shows or hides the automatic button.|  \n|[CMFCColorBar::EnableOtherButton](#cmfccolorbar__enableotherbutton)|Enables or disables the display of a dialog box that lets the user select more colors.|  \n|[CMFCColorBar::GetColor](#cmfccolorbar__getcolor)|Retrieves the currently selected color.|  \n|[CMFCColorBar::GetCommandID](#cmfccolorbar__getcommandid)|Retrieves the command ID of the current color bar control.|  \n|[CMFCColorBar::GetHighlightedColor](#cmfccolorbar__gethighlightedcolor)|Retrieves the color that signifies that a color button has the focus; that is, the button is *hot*.|  \n|[CMFCColorBar::GetHorzMargin](#cmfccolorbar__gethorzmargin)|Retrieves the horizontal margin, which is the space between the left or right color cell and the client area boundary.|  \n|[CMFCColorBar::GetVertMargin](#cmfccolorbar__getvertmargin)|Retrieves the vertical margin, which is the space between the top or bottom color cell and the client area boundary.|  \n|[CMFCColorBar::IsTearOff](#cmfccolorbar__istearoff)|Indicates whether the current color bar is dockable.|  \n|[CMFCColorBar::SetColor](#cmfccolorbar__setcolor)|Sets the color that is currently selected.|  \n|[CMFCColorBar::SetColorName](#cmfccolorbar__setcolorname)|Sets a new name for a specified color.|  \n|[CMFCColorBar::SetCommandID](#cmfccolorbar__setcommandid)|Sets a new command ID for a color bar control.|  \n|[CMFCColorBar::SetDocumentColors](#cmfccolorbar__setdocumentcolors)|Sets the list of colors that are used in the current document.|  \n|[CMFCColorBar::SetHorzMargin](#cmfccolorbar__sethorzmargin)|Sets the horizontal margin, which is the space between the left or right color cell and the client area boundary.|  \n|[CMFCColorBar::SetVertMargin](#cmfccolorbar__setvertmargin)|Sets the vertical margin, which is the space between the top or bottom color cell and the client area boundary.|  \n  \n### Protected Methods  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CMFCColorBar::AdjustLocations](#cmfccolorbar__adjustlocations)|Adjusts the positions of the color buttons on the color bar control.|  \n|[CMFCColorBar::AllowChangeTextLabels](#cmfccolorbar__allowchangetextlabels)|Indicates whether the text label of color buttons can change.|  \n|[CMFCColorBar::AllowShowOnList](#cmfccolorbar__allowshowonlist)|Indicates whether the color bar control object can appear in a toolbar list during the customization process.|  \n|[CMFCColorBar::CalcSize](#cmfccolorbar__calcsize)|Called by the framework as part of the layout calculation process.|  \n|[CMFCColorBar::CreatePalette](#cmfccolorbar__createpalette)|Initalizes a palette with the colors in a specified array of colors.|  \n|[CMFCColorBar::GetColorGridSize](#cmfccolorbar__getcolorgridsize)|Calculates the number of rows and columns in the grid of a color bar control.|  \n|[CMFCColorBar::GetExtraHeight](#cmfccolorbar__getextraheight)|Calculates the additional height that the current color bar requires to display miscellaneous user interface elements such as the **Other** button, document colors, and so on.|  \n|[CMFCColorBar::InitColors](#cmfccolorbar__initcolors)|Initializes an array of colors with the colors in a specified palette or the system default palette.|  \n|[CMFCColorBar::OnKey](#cmfccolorbar__onkey)|Called by the framework when a user presses a keyboard button.|  \n|[CMFCColorBar::OnSendCommand](#cmfccolorbar__onsendcommand)|Called by the framework to close a hierarchy of popup controls.|  \n|[CMFCColorBar::OnUpdateCmdUI](#cmfccolorbar__onupdatecmdui)|Called by the framework to enable or disable a user-interface item of a color bar control before the item is displayed.|  \n|[CMFCColorBar::OpenColorDialog](#cmfccolorbar__opencolordialog)|Opens a color dialog box.|  \n|[CMFCColorBar::Rebuild](#cmfccolorbar__rebuild)|Completely redraws the color bar control.|  \n|[CMFCColorBar::SelectPalette](#cmfccolorbar__selectpalette)|Sets the logical palette of the specified device context to the palette of the parent button of the current color bar control.|  \n|[CMFCColorBar::SetPropList](#cmfccolorbar__setproplist)|Sets the `m_pWndPropList` protected data member to the specified pointer to a property grid control.|  \n|[CMFCColorBar::ShowCommandMessageString](#cmfccolorbar__showcommandmessagestring)|Requests the frame window that owns the color bar control to update the message line in the status bar.|  \n  \n### Protected Data Members  \n  \n|Name|Description|  \n|----------|-----------------|  \n|`m_bInternal`|A Boolean field that determines whether mouse events are processed. Typically, mouse events are processed when this field is `TRUE` and customization mode is `FALSE`.|  \n|`m_bIsEnabled`|A Boolean that indicates whether a control is enabled.|  \n|`m_bIsTearOff`|A Boolean that indicates whether the color bar control supports docking.|  \n|`m_BoxSize`|A [CSize](../../atl-mfc-shared/reference/csize-class.md) object that specifies the size of a cell in a color bar grid.|  \n|`m_bShowDocColorsWhenDocked`|A Boolean that indicates whether to show document colors when the color bar is docked. For more information, see [CMFCColorBar::SetDocumentColors](#cmfccolorbar__setdocumentcolors).|  \n|`m_bStdColorDlg`|A Boolean that indicates whether to show the standard system color dialog box or the [CMFCColorDialog](../../mfc/reference/cmfccolordialog-class.md) dialog box. For more information, see [CMFCColorBar::EnableOtherButton](#cmfccolorbar__enableotherbutton).|  \n|`m_ColorAutomatic`|A [COLORREF](http://msdn.microsoft.com/library/windows/desktop/dd183449) that stores the current automatic color. For more information, see [CMFCColorBar::EnableOtherButton](#cmfccolorbar__enableotherbutton).|  \n|`m_ColorNames`|An [CMap](../../mfc/reference/cmap-class.md) object that associates a set of RGB colors with their names.|  \n|`m_colors`|A [CArray](../../mfc/reference/carray-class.md) of [COLORREF](http://msdn.microsoft.com/library/windows/desktop/dd183449) values that contains the colors that are displayed in the color bar control.|  \n|`m_ColorSelected`|A [COLORREF](http://msdn.microsoft.com/library/windows/desktop/dd183449) value that is the color that the user has currently selected from the color bar control.|  \n|`m_lstDocColors`|A [CList](../../mfc/reference/clist-class.md) of [COLORREF](http://msdn.microsoft.com/library/windows/desktop/dd183449) values that contains the colors that are currently used in a document.|  \n|`m_nCommandID`|An unsigned integer that is the command ID of a color button.|  \n|`m_nHorzMargin`|An integer that is the horizontal margin between the color buttons in a grid of colors.|  \n|`m_nHorzOffset`|An integer that is the horizontal offset to the center of the color button. This value is significant if the button displays text or an image in addition to a color.|  \n|`m_nNumColumns`|An integer that is the number of columns in a color bar control grid of colors.|  \n|`m_nNumColumnsVert`|An integer that is the number of columns in a vertically oriented grid of colors.|  \n|`m_nNumRowsHorz`|An integer that is the number of columns in a horizontally oriented grid of colors.|  \n|`m_nRowHeight`|An integer that is the height of a row of color buttons in a grid of colors.|  \n|`m_nVertMargin`|An integer that is the vertical margin between the color buttons in a grid of colors.|  \n|`m_nVertOffset`|An integer that is the vertical offset to the center of the color button. This value is significant if the button displays text or an image in addition to a color.|  \n|`m_Palette`|A [CPalette](../../mfc/reference/cpalette-class.md) of the colors that are used in the color bar control.|  \n|`m_pParentBtn`|A pointer to a [CMFCColorButton](../../mfc/reference/cmfccolorbutton-class.md) object that is the parent of the current button. This value is significant if the color button is in a hierarchy of toolbar controls or is in a color property grid control.|  \n|`m_pParentRibbonBtn`|A pointer to a [CMFCRibbonColorButton](../../mfc/reference/cmfcribboncolorbutton-class.md) object that is on the ribbon and is the parent button of the current button. This value is significant if the color button is in a hierarchy of toolbar controls or is in a color property grid control.|  \n|`m_pWndPropList`|A pointer to a [CMFCPropertyGridCtrl](../../mfc/reference/cmfcpropertygridctrl-class.md) object.|  \n|`m_strAutoColor`|A [CString](../../atl-mfc-shared/reference/cstringt-class.md) that is the text that is displayed on the **Automatic** button. For more information, see [CMFCColorBar::EnableAutomaticButton](#cmfccolorbar__enableautomaticbutton).|  \n|`m_strDocColors`|A [CString](../../atl-mfc-shared/reference/cstringt-class.md) that is the text that is displayed on the document colors button. For more information, see [CMFCColorBar::SetDocumentColors](#cmfccolorbar__setdocumentcolors).|  \n|`m_strOtherColor`|A [CString](../../atl-mfc-shared/reference/cstringt-class.md) that is the text that is displayed on the *other* button. For more information, see [CMFCColorBar::EnableOtherButton](#cmfccolorbar__enableotherbutton).|  \n  \n## Remarks  \n Usually, you do not create a `CMFCColorBar` object directly. Instead, the [CMFCColorMenuButton Class](../../mfc/reference/cmfccolormenubutton-class.md) (used in menus and toolbars) or the [CMFCColorButton Class](../../mfc/reference/cmfccolorbutton-class.md) creates the `CMFCColorBar` object.  \n  \n The `CMFCColorBar` class provides the following functionality:  \n  \n-   Automatically adjusts the list of document colors.  \n  \n-   Saves and restores its state, together with the document state.  \n  \n-   Manages the \"automatic\" button.  \n  \n-   Uses the [CMFCColorPickerCtrl Class](../../mfc/reference/cmfccolorpickerctrl-class.md) control to select a custom color.  \n  \n-   Supports a \"tear-off\" state (if it is created by using the [CMFCColorMenuButton Class](../../mfc/reference/cmfccolormenubutton-class.md)).  \n  \n To incorporate the `CMFCColorBar` functionality into your application:  \n  \n1.  Create a regular menu button and assign it an ID, for example ID_CHAR_COLOR.  \n  \n2.  In your frame window class, override the [CFrameWndEx::OnShowPopupMenu](../../mfc/reference/cframewndex-class.md#cframewndex__onshowpopupmenu) method and replace the regular menu button with a [CMFCColorMenuButton Class](../../mfc/reference/cmfccolormenubutton-class.md) object (by calling [CMFCToolBar::ReplaceButton](../../mfc/reference/cmfctoolbar-class.md#cmfctoolbar__replacebutton)).  \n  \n3.  Set all the styles and enable or disable the features of the `CMFCColorBar` object during [CMFCColorMenuButton Class](../../mfc/reference/cmfccolormenubutton-class.md) creation. The `CMFCColorMenuButton` object dynamically creates the `CMFCColorBar` object after the framework calls the `CreatePopupMenu` method.  \n  \n When the user clicks a color bar control button, the framework uses the `ON_COMMAND` macro to notify the parent of the color bar control. In the macro, the command ID parameter is the value that you assigned to the color bar control button in step 1 (ID_CHAR_COLOR in this example). For more information, see the [CMFCColorMenuButton Class](../../mfc/reference/cmfccolormenubutton-class.md), [CMFCColorButton Class](../../mfc/reference/cmfccolorbutton-class.md), [CMFCColorPickerCtrl Class](../../mfc/reference/cmfccolorpickerctrl-class.md), [CFrameWndEx Class](../../mfc/reference/cframewndex-class.md), and [CMFCToolBar Class](../../mfc/reference/cmfctoolbar-class.md) classes.  \n  \n## Example  \n The following example demonstrates how to configure a color bar by using various methods in the `CMFCColorBar` class. The methods set the horizontal and vertical margins, enable the other button, create a color bar control window, and sets the currently selected color. This example is part of the [New Controls sample](../../visual-cpp-samples.md).  \n  \n [!code-cpp[NVC_MFC_NewControls#1](../../mfc/reference/codesnippet/cpp/cmfccolorbar-class_1.h)]  \n[!code-cpp[NVC_MFC_NewControls#2](../../mfc/reference/codesnippet/cpp/cmfccolorbar-class_2.cpp)]  \n  \n## Inheritance Hierarchy  \n [CObject](../../mfc/reference/cobject-class.md)  \n  \n [CCmdTarget](../../mfc/reference/ccmdtarget-class.md)  \n  \n [CWnd](../../mfc/reference/cwnd-class.md)  \n  \n [CBasePane](../../mfc/reference/cbasepane-class.md)  \n  \n [CPane](../../mfc/reference/cpane-class.md)  \n  \n [CMFCBaseToolBar](../../mfc/reference/cmfcbasetoolbar-class.md)  \n  \n [CMFCToolBar](../../mfc/reference/cmfctoolbar-class.md)  \n  \n [CMFCPopupMenuBar](../../mfc/reference/cmfcpopupmenubar-class.md)  \n  \n [CMFCColorBar](../../mfc/reference/cmfccolorbar-class.md)  \n  \n## Requirements  \n **Header:** afxcolorbar.h  \n  \n##  <a name=\"cmfccolorbar__adjustlocations\"></a>  CMFCColorBar::AdjustLocations  \n Adjusts the positions of the color buttons on the color bar control.  \n  \n```  \nvirtual void AdjustLocations();\n```  \n  \n### Remarks  \n This method is called by the framework during `WM_SIZE` message processing.  \n  \n##  <a name=\"cmfccolorbar__allowchangetextlabels\"></a>  CMFCColorBar::AllowChangeTextLabels  \n Indicates whether the text label of color buttons can change.  \n  \n```  \nvirtual BOOL AllowChangeTextLabels() const;\n\n \n```  \n  \n### Return Value  \n Always `FALSE`.  \n  \n### Remarks  \n By default, this method always returns `FALSE`, which means text labels cannot be modified. Override this method to enable modifying text labels.  \n  \n##  <a name=\"cmfccolorbar__allowshowonlist\"></a>  CMFCColorBar::AllowShowOnList  \n Indicates whether the color bar control object can appear in a toolbar list during the customization process.  \n  \n```  \nvirtual BOOL AllowShowOnList() const;\n\n \n```  \n  \n### Return Value  \n Always `TRUE`.  \n  \n### Remarks  \n By default, this method always returns `TRUE`, which means the framework can display the color bar control during the customization process. Override this method to implement a different behavior.  \n  \n##  <a name=\"cmfccolorbar__calcsize\"></a>  CMFCColorBar::CalcSize  \n Called by the framework as part of the layout calculation process.  \n  \n```  \nvirtual CSize CalcSize(BOOL bVertDock);\n```  \n  \n### Parameters  \n [in] `bVertDock`  \n `TRUE` to specify that the color bar control is docked vertically; `FALSE` to specify that the color bar control is docked horizontally.  \n  \n### Return Value  \n The size of the array of color buttons in a color bar control.  \n  \n##  <a name=\"cmfccolorbar__cmfccolorbar\"></a>  CMFCColorBar::CMFCColorBar  \n Constructs a `CMFCColorBar` object.  \n  \n```  \nCMFCColorBar(\n    const CArray<COLORREF,COLORREF>& colors,  \n    COLORREF color,  \n    LPCTSTR lpszAutoColor,  \n    LPCTSTR lpszOtherColor,  \n    LPCTSTR lpszDocColors,  \n    CList<COLORREF,COLORREF>& lstDocColors,  \n    int nColumns,  \n    int nRowsDockHorz,  \n    int nColDockVert,  \n    COLORREF colorAutomatic,  \n    UINT nCommandID,  \n    CMFCColorButton* pParentBtn);\n\n \nCMFCColorBar(\n    const CArray<COLORREF,COLORREF>& colors,  \n    COLORREF color,  \n    LPCTSTR lpszAutoColor,  \n    LPCTSTR lpszOtherColor,  \n    LPCTSTR lpszDocColors,  \n    CList<COLORREF,COLORREF>& lstDocColors,  \n    int nColumns,  \n    COLORREF colorAutomatic,  \n    UINT nCommandID,  \n    CMFCRibbonColorButton* pParentRibbonBtn);\n\n \nCMFCColorBar(\n    CMFCColorBar& src,  \n    UINT uiCommandID);\n```  \n  \n### Parameters  \n [in] `colors`  \n An array of colors that the framework displays on the color bar control.  \n  \n [in] `color`  \n The initially selected color.  \n  \n [in] `lpszAutoColor`  \n The text label of the *automatic* (default) color button, or `NULL`.  \n  \n The standard label for the automatic button is **Automatic**.  \n  \n [in] `lpszOtherColor`  \n The text label of the *other* button, which displays more color choices, or `NULL`.  \n  \n The standard label for the other button is **More Colors...**.  \n  \n [in] `lpszDocColors`  \n The text label of the document colors button. The document colors palette lists all the colors that the document currently uses.  \n  \n [in] `lstDocColors`  \n A list of colors that the document currently uses.  \n  \n [in] `nColumns`  \n The number of columns that the array of colors has.  \n  \n [in] `nRowsDockHorz`  \n The number of rows that the color bar has when it is docked horizontally.  \n  \n [in] `nColDockVert`  \n The number of columns that the color bar has when it is docked vertically.  \n  \n [in] `colorAutomatic`  \n The default color that the framework applies when you click the automatic button.  \n  \n [in] `nCommandID`  \n The color bar control command ID.  \n  \n [in] `pParentBtn`  \n A pointer to a parent button.  \n  \n [in] `src`  \n An existing `CMFCColorBar` object to be copied into the new `CMFCColorBar` object.  \n  \n [in] `uiCommandID`  \n The command ID.  \n  \n##  <a name=\"cmfccolorbar__contexttosize\"></a>  CMFCColorBar::ContextToSize  \n Calculates the vertical and horizontal margins that are required to contain the buttons on the color bar control, and adjusts the location of those buttons.  \n  \n```  \nvoid ContextToSize(\n    BOOL bSquareButtons = TRUE,   \n    BOOL bCenterButtons = TRUE);\n```  \n  \n### Parameters  \n  \n|Parameter|Description|  \n|---------------|-----------------|  \n|[in] `bSquareButtons`|`TRUE` to specify that the shape of the buttons on a color bar control are square; otherwise, `FALSE`. The default value is `TRUE`.|  \n|[in] `bCenterButtons`|`TRUE` to specify that the content on the face of a color bar control button is centered; otherwise, `FALSE`. The default value is `TRUE`.|  \n  \n### Remarks  \n  \n##  <a name=\"cmfccolorbar__create\"></a>  CMFCColorBar::Create  \n Creates a color bar control window and attaches it to the `CMFCColorBar` object.  \n  \n```  \nvirtual BOOL Create(\n    CWnd* pParentWnd,  \n    DWORD dwStyle,  \n    UINT nID,  \n    CPalette* pPalette=NULL,  \n    int nColumns=0,  \n    int nRowsDockHorz=0,  \n    int nColDockVert=0);\n```  \n  \n### Parameters  \n [in] `pParentWnd`  \n Pointer to the parent window.  \n  \n [in] `dwStyle`  \n A bitwise combination (OR) of [window styles](../../mfc/reference/window-styles.md).  \n  \n [in] `nID`  \n The command ID.  \n  \n [in] `pPalette`  \n Pointer to a palette of colors. The default is `NULL`.  \n  \n [in] `nColumns`  \n The number of columns in the color bar control. The default is 0.  \n  \n [in] `nRowsDockHorz`  \n The number of rows in the color bar control when it is docked horizontally. The default is 0.  \n  \n [in] `nColDockVert`  \n The number of columns in the color bar control when it is docked vertically. The default is 0.  \n  \n### Return Value  \n `TRUE` if this method is successful; otherwise, `FALSE`.  \n  \n### Remarks  \n To construct a `CMFCColorBar` object, call the class constructor then this method. The `Create` method creates the Windows control and initializes a list of colors.  \n  \n##  <a name=\"cmfccolorbar__createcontrol\"></a>  CMFCColorBar::CreateControl  \n Creates a color bar control window, attaches it to the `CMFCColorBar` object, and resizes the control window to contain the specified palette of colors.  \n  \n```  \nvirtual BOOL CreateControl(\n    CWnd* pParentWnd,  \n    const CRect& rect,  \n    UINT nID,  \n    int nColumns=-1,  \n    CPalette* pPalette=NULL);\n```  \n  \n### Parameters  \n [in] `pParentWnd`  \n Pointer to the parent window. Cannot be `NULL`.  \n  \n [in] `rect`  \n A bounding rectangle that specifies where to draw the color bar control.  \n  \n [in] `nID`  \n The control ID.  \n  \n [in] `nColumns`  \n The ideal number of columns in the color bar control. This method modifies that number to fit the specified palette of colors. The default is -1, which means this parameter is not specified.  \n  \n [in] `pPalette`  \n Pointer to a palette of colors, or `NULL`. If this parameter is `NULL`, this method calculates the size of the color bar control as if 20 colors were specified. The default is `NULL`.  \n  \n### Return Value  \n `TRUE` if this method succeeds; otherwise `FALSE`.  \n  \n### Remarks  \n This method uses the `rect`, `nColumns`, and `pPalette` parameters to calculate the appropriate number or rows and columns in the color bar control, and then calls the [CMFCColorBar::Create](#cmfccolorbar__create) method.  \n  \n##  <a name=\"cmfccolorbar__createpalette\"></a>  CMFCColorBar::CreatePalette  \n Initializes a palette with the colors in a specified array of colors.  \n  \n```  \nstatic BOOL CreatePalette(\n    const CArray<COLORREF, COLORREF>& arColors,   \n    CPalette& palette);\n```  \n  \n### Parameters  \n  \n|Parameter|Description|  \n|---------------|-----------------|  \n|[in] `arColors`|An array of colors.|  \n|[in] `palette`|A palette of colors.|  \n  \n### Return Value  \n `TRUE` if this method is successful; otherwise, `FALSE`.  \n  \n##  <a name=\"cmfccolorbar__enableautomaticbutton\"></a>  CMFCColorBar::EnableAutomaticButton  \n Shows or hides the automatic button.  \n  \n```  \nvoid EnableAutomaticButton(\n    LPCTSTR lpszLabel,  \n    COLORREF colorAutomatic,  \n    BOOL bEnable=TRUE);\n```  \n  \n### Parameters  \n [in] `lpszLabel`  \n The text label of the *automatic* (default) color button, or `NULL`.  \n  \n The standard label for the automatic button is **Automatic**.  \n  \n [in] `colorAutomatic`  \n The default color that the framework applies when you click the automatic button.  \n  \n [in] `bEnable`  \n `TRUE` to enable the automatic button; `FALSE` to disable the automatic button. The default value is `TRUE`.  \n  \n### Remarks  \n The text label of the automatic button is deleted if the `lpszLabel` parameter is `NULL` or the `bEnable` parameter is `FALSE`.  \n  \n##  <a name=\"cmfccolorbar__enableotherbutton\"></a>  CMFCColorBar::EnableOtherButton  \n Enables or disables the display of a dialog box that lets the user select more colors.  \n  \n```  \nvoid EnableOtherButton(\n    LPCTSTR lpszLabel,  \n    BOOL bAltColorDlg=TRUE,  \n    BOOL bEnable=TRUE);\n```  \n  \n### Parameters  \n [in] `lpszLabel`  \n The text label of the *other* button, which displays more color choices, or `NULL`.  \n  \n The standard label for this button is **More Colors...**.  \n  \n [in] `bAltColorDlg`  \n `TRUE` to display the [CMFCColorDialog](../../mfc/reference/cmfccolordialog-class.md) dialog box; `FALSE` to display the standard [CColorDialog](../../mfc/reference/ccolordialog-class.md) dialog box. The default value is `TRUE`.  \n  \n [in] `bEnable`  \n `TRUE` to enable the                                button; `FALSE` to disable the button. The default value is `TRUE`.  \n  \n##  <a name=\"cmfccolorbar__getcolor\"></a>  CMFCColorBar::GetColor  \n Retrieves the currently selected color.  \n  \n```  \nCOLORREF GetColor() const;\n\n \n```  \n  \n### Return Value  \n The currently selected color.  \n  \n##  <a name=\"cmfccolorbar__getcolorgridsize\"></a>  CMFCColorBar::GetColorGridSize  \n Calculates the number of rows and columns in the grid of a color bar control.  \n  \n```  \nCSize GetColorGridSize(BOOL bVertDock) const;\n\n \n```  \n  \n### Parameters  \n  \n|Parameter|Description|  \n|---------------|-----------------|  \n|[in] `bVertDock`|`TRUE` to perform the calculation for a vertically docked color bar control; otherwise, perform the calculation for a horizontally docked control.|  \n  \n### Return Value  \n A [CSize](../../atl-mfc-shared/reference/csize-class.md) object whose `cx` component contains the number of columns and whose `cy` component contains the number of rows.  \n  \n##  <a name=\"cmfccolorbar__getcommandid\"></a>  CMFCColorBar::GetCommandID  \n Retrieves the command ID of the current color bar control.  \n  \n```  \nUINT GetCommandID() const;\n\n \n```  \n  \n### Return Value  \n A command ID.  \n  \n### Remarks  \n When the user selects a new color, the framework sends the command ID in a `WM_COMMAND` message to notify the parent of the `CMFCColorBar` object.  \n  \n##  <a name=\"cmfccolorbar__getextraheight\"></a>  CMFCColorBar::GetExtraHeight  \n Calculates the additional height that the current color bar requires to display miscellaneous user interface elements, such as the **Other** button or document colors.  \n  \n```  \nint GetExtraHeight(int nNumColumns) const;\n\n \n```  \n  \n### Parameters  \n  \n|Parameter|Description|  \n|---------------|-----------------|  \n|[in] `nNumColumns`|If the color bar control contains document colors, the number of columns to display in the grid of document colors. Otherwise, this value is not used.|  \n  \n### Return Value  \n The calculated extra height that is required.  \n  \n##  <a name=\"cmfccolorbar__gethighlightedcolor\"></a>  CMFCColorBar::GetHighlightedColor  \n Retrieves the color that signifies that a color button has the focus; that is, the button is *hot*.  \n  \n```  \nCOLORREF GetHighlightedColor() const;\n\n \n```  \n  \n### Return Value  \n An RGB value.  \n  \n### Remarks  \n  \n##  <a name=\"cmfccolorbar__gethorzmargin\"></a>  CMFCColorBar::GetHorzMargin  \n Retrieves the horizontal margin, which is the space between the left or right color cell and the client area boundary.  \n  \n```  \nint GetHorzMargin();\n```  \n  \n### Return Value  \n The horizontal margin.  \n  \n##  <a name=\"cmfccolorbar__getvertmargin\"></a>  CMFCColorBar::GetVertMargin  \n Retrieves the vertical margin, which is the space between the top or bottom color cell and the client area boundary.  \n  \n```  \nint GetVertMargin() const;\n\n \n```  \n  \n### Return Value  \n The vertical margin.  \n  \n##  <a name=\"cmfccolorbar__initcolors\"></a>  CMFCColorBar::InitColors  \n Initializes an array of colors with the colors in a specified palette, or with the system default palette.  \n  \n```  \nstatic int InitColors(\n    CPalette* pPalette,   \n    CArray<COLORREF, COLORREF>& arColors);\n```  \n  \n### Parameters  \n  \n|Parameter|Description|  \n|---------------|-----------------|  \n|[in] `pPalette`|A pointer to a palette object, or `NULL`. If this parameter is `NULL`, this method uses the default palette of the operating system.|  \n|[in] `arColors`|An array of colors.|  \n  \n### Return Value  \n The number of elements in the array of colors.  \n  \n##  <a name=\"cmfccolorbar__istearoff\"></a>  CMFCColorBar::IsTearOff  \n Indicates whether the current color bar is dockable.  \n  \n```  \nBOOL IsTearOff() const;\n\n \n```  \n  \n### Return Value  \n `TRUE` if the current color bar control is dockable; otherwise, `FALSE`.  \n  \n### Remarks  \n If the color bar control is dockable, it can be torn off a control bar and docked at another location.  \n  \n##  <a name=\"cmfccolorbar__onkey\"></a>  CMFCColorBar::OnKey  \n Called by the framework when a user presses a keyboard button.  \n  \n```  \nvirtual BOOL OnKey(UINT nChar);\n```  \n  \n### Parameters  \n [in] `nChar`  \n The virtual-key code for the key that a user pressed.  \n  \n### Return Value  \n `TRUE` if this method processes the specified key; otherwise, `FALSE`.  \n  \n##  <a name=\"cmfccolorbar__onsendcommand\"></a>  CMFCColorBar::OnSendCommand  \n Called by the framework to close a hierarchy of pop-up controls.  \n  \n```  \nvirtual BOOL OnSendCommand(const CMFCToolBarButton* pButton);\n```  \n  \n### Parameters  \n  \n|Parameter|Description|  \n|---------------|-----------------|  \n|[in] `pButton`|Pointer to a control that resides on a toolbar.|  \n  \n### Return Value  \n `TRUE` if this method is successful; otherwise, `FALSE`.  \n  \n##  <a name=\"cmfccolorbar__onupdatecmdui\"></a>  CMFCColorBar::OnUpdateCmdUI  \n Called by the framework to enable or disable a user-interface item of a color bar control before the item is displayed.  \n  \n```  \nvirtual void OnUpdateCmdUI(\n    CFrameWnd* pTarget,  \n    BOOL bDisableIfNoHndler);\n```  \n  \n### Parameters  \n [in] `pTarget`  \n Pointer to a window that contains a user-interface item to update.  \n  \n [in] `bDisableIfNoHndler`  \n `TRUE` to disable the user-interface item if no handler is defined in a message map; otherwise, `FALSE`.  \n  \n### Remarks  \n When a user of your application clicks a user-interface item, the item must know whether it should be displayed as enabled or disabled. The target of the command message provides this information by implementing an `ON_UPDATE_COMMAND_UI` command handler. Use this method to help process the command. For more information, see [CCmdUI Class](../../mfc/reference/ccmdui-class.md).  \n  \n##  <a name=\"cmfccolorbar__opencolordialog\"></a>  CMFCColorBar::OpenColorDialog  \n Opens a color dialog box.  \n  \n```  \nvirtual BOOL OpenColorDialog(\n    const COLORREF colorDefault,  \n    COLORREF& colorRes);\n```  \n  \n### Parameters  \n [in] `colorDefault`  \n The color that is selected by default when the color dialog box opens.  \n  \n [out] `colorRes`  \n The color that a user selected.  \n  \n### Return Value  \n `TRUE` if the user selected a color; `FALSE` if the user canceled the color dialog box.  \n  \n### Remarks  \n  \n##  <a name=\"cmfccolorbar__rebuild\"></a>  CMFCColorBar::Rebuild  \n Completely redraws the color bar control.  \n  \n```  \nvirtual void Rebuild();\n```  \n  \n##  <a name=\"cmfccolorbar__selectpalette\"></a>  CMFCColorBar::SelectPalette  \n Sets the logical palette of the specified device context to the palette of the parent button of the current color bar control.  \n  \n```  \nCPalette* SelectPalette(CDC* pDC);\n```  \n  \n### Parameters  \n  \n|Parameter|Description|  \n|---------------|-----------------|  \n|[in] `pDC`|Pointer to the device context of the parent button of the current color bar control.|  \n  \n### Return Value  \n Pointer to the palette that is replaced by the palette of the parent button of the current color bar control.  \n  \n##  <a name=\"cmfccolorbar__setcolor\"></a>  CMFCColorBar::SetColor  \n Sets the color that is currently selected.  \n  \n```  \nvoid SetColor(COLORREF color);\n```  \n  \n### Parameters  \n [in] `color`  \n An RGB color value.  \n  \n##  <a name=\"cmfccolorbar__setcolorname\"></a>  CMFCColorBar::SetColorName  \n Sets a new name for a specified color.  \n  \n```  \nstatic void SetColorName(\n    COLORREF color,  \n    const CString& strName);\n```  \n  \n### Parameters  \n [in] `color`  \n The RGB value of a color.  \n  \n [in] `strName`  \n The new name for the specified color.  \n  \n### Remarks  \n This method changes the name of the specified color in all `CMFCColorBar` objects in your application.  \n  \n##  <a name=\"cmfccolorbar__setcommandid\"></a>  CMFCColorBar::SetCommandID  \n Sets a new command ID for a color bar control.  \n  \n```  \nvoid SetCommandID(UINT nCommandID);\n```  \n  \n### Parameters  \n [in] `nCommandID`  \n A command ID.  \n  \n### Remarks  \n Call this method to modify the command ID of a color bar control and to notify the parent window of the control that the ID has changed.  \n  \n##  <a name=\"cmfccolorbar__setdocumentcolors\"></a>  CMFCColorBar::SetDocumentColors  \n Sets the list of colors that are used in the current document.  \n  \n```  \nvoid SetDocumentColors(\n    LPCTSTR lpszCaption,  \n    CList<COLORREF,COLORREF>& lstDocColors,  \n    BOOL bShowWhenDocked=FALSE);\n```  \n  \n### Parameters  \n [in] `lpszCaption`  \n A caption that is displayed when the color bar control is not docked.  \n  \n [in] `lstDocColors`  \n A list of colors that replaces the current document colors.  \n  \n [in] `bShowWhenDocked`  \n `TRUE` to show document colors when the color bar control is docked; otherwise, `FALSE`. The default value is `FALSE`.  \n  \n### Remarks  \n *Document colors* are the colors that are currently used in a document. The framework automatically maintains a list of document colors, but you can use this method to modify the list.  \n  \n##  <a name=\"cmfccolorbar__sethorzmargin\"></a>  CMFCColorBar::SetHorzMargin  \n Sets the horizontal margin, which is the space between the left or right color cell and the boundary of the client area.  \n  \n```  \nvoid SetHorzMargin(int nHorzMargin);\n```  \n  \n### Parameters  \n [in] `nHorzMargin`  \n The horizontal margin, in pixels.  \n  \n### Remarks  \n By default, the [CMFCColorBar::CMFCColorBar](#cmfccolorbar__cmfccolorbar) constructor sets the horizontal margin to 4 pixels.  \n  \n##  <a name=\"cmfccolorbar__setproplist\"></a>  CMFCColorBar::SetPropList  \n Sets the `m_pWndPropList` protected data member to the specified pointer to a property grid control.  \n  \n```  \nvoid SetPropList(CMFCPropertyGridCtrl* pWndList);\n```  \n  \n### Parameters  \n  \n|Parameter|Description|  \n|---------------|-----------------|  \n|[in] `pWndList`|Pointer to property grid control object.|  \n  \n##  <a name=\"cmfccolorbar__setvertmargin\"></a>  CMFCColorBar::SetVertMargin  \n Sets the vertical margin, which is the space between the top or bottom color cell and the client area boundary.  \n  \n```  \nvoid SetVertMargin(int nVertMargin);\n```  \n  \n### Parameters  \n [in] `nVertMargin`  \n The vertical margin, in pixels.  \n  \n### Remarks  \n By default, the [CMFCColorBar::CMFCColorBar](#cmfccolorbar__cmfccolorbar) constructor sets the vertical margin to 4 pixels.  \n  \n##  <a name=\"cmfccolorbar__showcommandmessagestring\"></a>  CMFCColorBar::ShowCommandMessageString  \n Requests the frame window that owns the color bar control to update the message line in the status bar.  \n  \n```  \nvirtual void ShowCommandMessageString(UINT uiCmdId);\n```  \n  \n### Parameters  \n [in] `uiCmdId`  \n A command ID. (This parameter is ignored.)  \n  \n### Remarks  \n This method sends the `WM_SETMESSAGESTRING` message to the owner of the color bar control.  \n  \n## See Also  \n [Hierarchy Chart](../../mfc/hierarchy-chart.md)   \n [Classes](../../mfc/reference/mfc-classes.md)\n"}