{"nodes":[{"pos":[12,46],"content":"Casting Operators | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Casting Operators | Microsoft Docs","pos":[0,34]}]},{"content":"Casting Operators","pos":[607,624]},{"content":"There are several casting operators specific to the C++ language.","pos":[625,690]},{"content":"These operators are intended to remove some of the ambiguity and danger inherent in old style C language casts.","pos":[691,802]},{"content":"These operators are:","pos":[803,823]},{"pos":[833,922],"content":"<bpt id=\"p1\">[</bpt>dynamic_cast<ept id=\"p1\">](../cpp/dynamic-cast-operator.md)</ept> Used for conversion of polymorphic types.","source":"[dynamic_cast](../cpp/dynamic-cast-operator.md) Used for conversion of polymorphic types."},{"pos":[932,1022],"content":"<bpt id=\"p1\">[</bpt>static_cast<ept id=\"p1\">](../cpp/static-cast-operator.md)</ept> Used for conversion of nonpolymorphic types.","source":"[static_cast](../cpp/static-cast-operator.md) Used for conversion of nonpolymorphic types."},{"pos":[1032,1145],"content":"<bpt id=\"p1\">[</bpt>const_cast<ept id=\"p1\">](../cpp/const-cast-operator.md)</ept> Used to remove the <ph id=\"ph1\">`const`</ph>, <ph id=\"ph2\">`volatile`</ph>, and <ph id=\"ph3\">`__unaligned`</ph> attributes.","source":"[const_cast](../cpp/const-cast-operator.md) Used to remove the `const`, `volatile`, and `__unaligned` attributes."},{"pos":[1155,1252],"content":"<bpt id=\"p1\">[</bpt>reinterpret_cast<ept id=\"p1\">](../cpp/reinterpret-cast-operator.md)</ept> Used for simple reinterpretation of bits.","source":"[reinterpret_cast](../cpp/reinterpret-cast-operator.md) Used for simple reinterpretation of bits."},{"pos":[1262,1356],"content":"<bpt id=\"p1\">[</bpt>safe_cast<ept id=\"p1\">](../windows/safe-cast-cpp-component-extensions.md)</ept> Used to produce verifiable MSIL.","source":"[safe_cast](../windows/safe-cast-cpp-component-extensions.md) Used to produce verifiable MSIL."},{"content":"Use <ph id=\"ph1\">`const_cast`</ph> and <ph id=\"ph2\">`reinterpret_cast`</ph> as a last resort, since these operators present the same dangers as old style casts.","pos":[1363,1487],"source":"Use `const_cast` and `reinterpret_cast` as a last resort, since these operators present the same dangers as old style casts."},{"content":"However, they are still necessary in order to completely replace old style casts.","pos":[1488,1569]},{"content":"See Also","pos":[1578,1586]},{"content":"Casting","pos":[1591,1598]}],"content":"---\ntitle: \"Casting Operators | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"index-page \"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"operators [C++], casting\"\n  - \"casting operators\"\nms.assetid: 16240348-26bc-4f77-8eab-57253f00ce52\ncaps.latest.revision: 7\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Casting Operators\nThere are several casting operators specific to the C++ language. These operators are intended to remove some of the ambiguity and danger inherent in old style C language casts. These operators are:  \n  \n-   [dynamic_cast](../cpp/dynamic-cast-operator.md) Used for conversion of polymorphic types.  \n  \n-   [static_cast](../cpp/static-cast-operator.md) Used for conversion of nonpolymorphic types.  \n  \n-   [const_cast](../cpp/const-cast-operator.md) Used to remove the `const`, `volatile`, and `__unaligned` attributes.  \n  \n-   [reinterpret_cast](../cpp/reinterpret-cast-operator.md) Used for simple reinterpretation of bits.  \n  \n-   [safe_cast](../windows/safe-cast-cpp-component-extensions.md) Used to produce verifiable MSIL.  \n  \n Use `const_cast` and `reinterpret_cast` as a last resort, since these operators present the same dangers as old style casts. However, they are still necessary in order to completely replace old style casts.  \n  \n## See Also  \n [Casting](../cpp/casting.md)"}