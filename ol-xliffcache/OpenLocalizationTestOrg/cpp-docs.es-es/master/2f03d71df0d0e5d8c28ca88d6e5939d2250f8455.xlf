<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="es-es">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-04506c2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2f03d71df0d0e5d8c28ca88d6e5939d2250f8455</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\mfc\storing-and-loading-cobjects-via-an-archive.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5dc20d24b819269a6bb2b05537874f425fe616b6</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">aa7310c1dd9bbabb92dc5a65f327730dd320f77b</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Storing and Loading CObjects via an Archive | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Storing and Loading CObjects via an Archive</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Storing and loading <ph id="ph1">`CObject`</ph>s via an archive requires extra consideration.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>In certain cases, you should call the <ph id="ph1">`Serialize`</ph> function of the object, where the <ph id="ph2">`CArchive`</ph> object is a parameter of the <ph id="ph3">`Serialize`</ph> call, as opposed to using the <bpt id="p1">**</bpt><ph id="ph4">&lt;\&lt;</ph><ept id="p1">**</ept> or <bpt id="p2">**</bpt><ph id="ph5">&gt;&gt;</ph><ept id="p2">**</ept> operator of the <ph id="ph6">`CArchive`</ph>.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The important fact to keep in mind is that the <ph id="ph1">`CArchive`</ph> <bpt id="p1">**</bpt><ph id="ph2">&gt;&gt;</ph><ept id="p1">**</ept> operator constructs the <ph id="ph3">`CObject`</ph> in memory based on <ph id="ph4">`CRuntimeClass`</ph> information previously written to the file by the storing archive.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Therefore, whether you use the <ph id="ph1">`CArchive`</ph> <bpt id="p1">**</bpt><ph id="ph2">&lt;\&lt;</ph><ept id="p1">**</ept> and <bpt id="p2">**</bpt><ph id="ph3">&gt;&gt;</ph><ept id="p2">**</ept> operators, versus calling <ph id="ph4">`Serialize`</ph>, depends on whether you <bpt id="p3">*</bpt>need<ept id="p3">*</ept> the loading archive to dynamically reconstruct the object based on previously stored <ph id="ph5">`CRuntimeClass`</ph> information.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Use the <ph id="ph1">`Serialize`</ph> function in the following cases:</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>When deserializing the object, you know the exact class of the object beforehand.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>When deserializing the object, you already have memory allocated for it.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>If you load the object using the <ph id="ph1">`Serialize`</ph> function, you must also store the object using the <ph id="ph2">`Serialize`</ph> function.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Don't store using the <ph id="ph1">`CArchive`</ph> <bpt id="p1">**</bpt><ph id="ph2">&lt;&lt;</ph><ept id="p1">**</ept> operator and then load using the <ph id="ph3">`Serialize`</ph> function, or store using the <ph id="ph4">`Serialize`</ph> function and then load using <bpt id="p2">**</bpt>CArchive &gt;&gt;<ept id="p2">**</ept> operator.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The following example illustrates the cases:</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>NVC_MFCSerialization#36</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>NVC_MFCSerialization#37</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>In summary, if your serializable class defines an embedded <bpt id="p1">**</bpt>CObjec<ept id="p1">**</ept>t as a member, you should <bpt id="p2">*</bpt>not<ept id="p2">*</ept> use the <ph id="ph1">`CArchive`</ph> <bpt id="p3">**</bpt><ph id="ph2">&lt;\&lt;</ph><ept id="p3">**</ept> and <bpt id="p4">**</bpt><ph id="ph3">&gt;&gt;</ph><ept id="p4">**</ept> operators for that object, but should call the <ph id="ph4">`Serialize`</ph> function instead.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Also, if your serializable class defines a pointer to a <ph id="ph1">`CObject`</ph> (or an object derived from <ph id="ph2">`CObject`</ph>) as a member, but constructs this other object in its own constructor, you should also call <ph id="ph3">`Serialize`</ph>.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Serialization: Serializing an Object</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>