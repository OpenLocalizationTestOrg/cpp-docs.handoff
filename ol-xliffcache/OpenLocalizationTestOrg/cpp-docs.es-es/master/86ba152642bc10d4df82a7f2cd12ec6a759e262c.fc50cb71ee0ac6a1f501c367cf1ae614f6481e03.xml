{"nodes":[{"pos":[12,35],"content":"__mulh | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"__mulh | Microsoft Docs","pos":[0,23]}]},{"content":"__mulh","pos":[614,620]},{"content":"Microsoft Specific","pos":[623,641]},{"content":"Returns the high 64 bits of the product of two 64-bit signed integers.","pos":[650,720]},{"content":"Syntax","pos":[729,735]},{"content":"Parameters","pos":[818,828]},{"content":"[in]","pos":[832,836]},{"content":"The first number to multiply.","pos":[844,873]},{"content":"[in]","pos":[880,884]},{"content":"The second number to multiply.","pos":[892,922]},{"content":"Return Value","pos":[931,943]},{"content":"The high 64 bits of the 128-bit result of the multiplication.","pos":[947,1008]},{"content":"Requirements","pos":[1017,1029]},{"content":"Intrinsic","pos":[1036,1045]},{"content":"Architecture","pos":[1046,1058]},{"pos":[1182,1209],"content":"<bpt id=\"p1\">**</bpt>Header file<ept id=\"p1\">**</ept> <ph id=\"ph1\">\\&lt;</ph>intrin.h&gt;","source":"**Header file** \\<intrin.h>"},{"content":"Remarks","pos":[1218,1225]},{"content":"This routine is only available as an intrinsic.","pos":[1229,1276]},{"content":"Example","pos":[1285,1292]},{"content":"END Microsoft Specific","pos":[1808,1830]},{"content":"See Also","pos":[1839,1847]},{"content":"Compiler Intrinsics","pos":[1852,1871]}],"content":"---\ntitle: \"__mulh | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"__mulh\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"__mulh intrinsic\"\nms.assetid: cd2ab093-9ef6-404d-ac34-0bee033882f3\ncaps.latest.revision: 14\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"ru-ru\"\n  - \"zh-cn\"\n  - \"zh-tw\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"tr-tr\"\n---\n# __mulh\n**Microsoft Specific**  \n  \n Returns the high 64 bits of the product of two 64-bit signed integers.  \n  \n## Syntax  \n  \n```  \n__int64 __mulh(   \n   __int64 a,   \n   __int64 b   \n);  \n```  \n  \n#### Parameters  \n [in] `a`  \n The first number to multiply.  \n  \n [in] `b`  \n The second number to multiply.  \n  \n## Return Value  \n The high 64 bits of the 128-bit result of the multiplication.  \n  \n## Requirements  \n  \n|Intrinsic|Architecture|  \n|---------------|------------------|  \n|`__mulh`|[!INCLUDE[vcprx64](../assembler/inline/includes/vcprx64_md.md)]|  \n  \n **Header file** \\<intrin.h>  \n  \n## Remarks  \n This routine is only available as an intrinsic.  \n  \n## Example  \n  \n```  \n// mulh.cpp  \n// processor: x64  \n#include <stdio.h>  \n#include <intrin.h>  \n  \n#pragma intrinsic (__mulh)  \n  \nint main()  \n{  \n    __int64 a = 0x0fffffffffffffffI64;  \n    __int64 b = 0xf0000000I64;  \n  \n    __int64 result = __mulh(a, b); // the high 64 bits  \n    __int64 result2 = a * b; // the low 64 bits  \n  \n    printf_s(\" %#I64x * %#I64x = %#I64x%I64x\\n\",  \n             a, b, result, result2);  \n}  \n```  \n  \n```Output  \n0xfffffffffffffff * 0xf0000000 = 0xeffffffffffffff10000000  \n```  \n  \n## END Microsoft Specific  \n  \n## See Also  \n [Compiler Intrinsics](../intrinsics/compiler-intrinsics.md)"}