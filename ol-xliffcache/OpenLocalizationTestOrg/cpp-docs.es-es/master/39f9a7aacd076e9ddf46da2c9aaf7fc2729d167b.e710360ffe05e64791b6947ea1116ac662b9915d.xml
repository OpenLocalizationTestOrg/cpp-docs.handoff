{"nodes":[{"pos":[12,49],"content":"Compiler Error C2912 | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Compiler Error C2912 | Microsoft Docs","pos":[0,37]}]},{"pos":[598,618],"content":"Compiler Error C2912","linkify":"Compiler Error C2912","nodes":[{"content":"Compiler Error C2912","pos":[0,20]}]},{"content":"explicit specialization 'declaration' is not a specialization of a function template","pos":[619,703]},{"content":"You cannot specialize a non-template function.","pos":[710,756]},{"content":"The following sample generates C2912:","pos":[763,800]},{"content":"This error will also be generated as a result of compiler conformance work that was done in Visual Studio .NET 2003: for every explicit specialization, you must choose the parameters of the explicit specialization, such that, they match the parameters of the primary template.","pos":[952,1228]}],"content":"---\ntitle: \"Compiler Error C2912 | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"error-reference\"\nf1_keywords: \n  - \"C2912\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"C2912\"\nms.assetid: bd55cecd-ab1a-4636-ab8a-a00393fe7b3d\ncaps.latest.revision: 11\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Compiler Error C2912\nexplicit specialization 'declaration' is not a specialization of a function template  \n  \n You cannot specialize a non-template function.  \n  \n The following sample generates C2912:  \n  \n```  \n// C2912.cpp  \n// compile with: /c  \nvoid f(char);  \ntemplate<> void f(char);   // C2912  \ntemplate<class T> void f(T);   // OK  \n```  \n  \n This error will also be generated as a result of compiler conformance work that was done in Visual Studio .NET 2003: for every explicit specialization, you must choose the parameters of the explicit specialization, such that, they match the parameters of the primary template.  \n  \n```  \n// C2912b.cpp  \nclass CF {  \npublic:  \n   template <class A> CF(const A& a) {}   // primary template  \n  \n   // attempted explicit specialization  \n   template <> CF(const char* p) {}   // C2912  \n  \n   // try the following line instead  \n   // template <> CF(const char& p) {}  \n};  \n```"}