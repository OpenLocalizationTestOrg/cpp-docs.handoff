{"nodes":[{"pos":[12,61],"content":"Compiler Warning (level 3) C4316 | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Compiler Warning (level 3) C4316 | Microsoft Docs","pos":[0,49]}]},{"content":"Compiler Warning (level 3) C4316","pos":[609,641]},{"content":"Object allocated on the heap may not be aligned for this type.","pos":[642,704]},{"content":"An over-aligned object allocated by using <ph id=\"ph1\">`operator new`</ph> may not have the specified alignment.","pos":[711,805],"source":"An over-aligned object allocated by using `operator new` may not have the specified alignment."},{"content":"Override <bpt id=\"p1\">[</bpt>operator new<ept id=\"p1\">](../../c-runtime-library/operator-new-crt.md)</ept> and <bpt id=\"p2\">[</bpt>operator delete<ept id=\"p2\">](../../c-runtime-library/operator-delete-crt.md)</ept> for over-aligned types so that they use the aligned allocation routines—for example, <bpt id=\"p3\">[</bpt>_aligned_malloc<ept id=\"p3\">](../../c-runtime-library/reference/aligned-malloc.md)</ept> and <bpt id=\"p4\">[</bpt>_aligned_free<ept id=\"p4\">](../../c-runtime-library/reference/aligned-free.md)</ept>.","pos":[806,1172],"source":" Override [operator new](../../c-runtime-library/operator-new-crt.md) and [operator delete](../../c-runtime-library/operator-delete-crt.md) for over-aligned types so that they use the aligned allocation routines—for example, [_aligned_malloc](../../c-runtime-library/reference/aligned-malloc.md) and [_aligned_free](../../c-runtime-library/reference/aligned-free.md)."},{"content":"The following sample generates C4316:","pos":[1173,1210]}],"content":"---\ntitle: \"Compiler Warning (level 3) C4316 | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"error-reference\"\nf1_keywords: \n  - \"C4316\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"C4316\"\nms.assetid: 10371f01-aeb8-40ac-a290-59e63efa5ad4\ncaps.latest.revision: 5\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Compiler Warning (level 3) C4316\nObject allocated on the heap may not be aligned for this type.  \n  \n An over-aligned object allocated by using `operator new` may not have the specified alignment. Override [operator new](../../c-runtime-library/operator-new-crt.md) and [operator delete](../../c-runtime-library/operator-delete-crt.md) for over-aligned types so that they use the aligned allocation routines—for example, [_aligned_malloc](../../c-runtime-library/reference/aligned-malloc.md) and [_aligned_free](../../c-runtime-library/reference/aligned-free.md). The following sample generates C4316:  \n  \n```cpp  \n// C4316.cpp  \n// Test: cl /W3 /c C4316.cpp  \n  \n__declspec(align(32)) struct S {}; // C4324  \n  \nint main() {  \n    new S; // C4316  \n}  \n```"}