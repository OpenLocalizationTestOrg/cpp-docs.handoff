{"nodes":[{"pos":[12,50],"content":"trunc, truncf, truncl | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"trunc, truncf, truncl | Microsoft Docs","pos":[0,38]}]},{"pos":[1071,1092],"content":"trunc, truncf, truncl","linkify":"trunc, truncf, truncl","nodes":[{"content":"trunc, truncf, truncl","pos":[0,21]}]},{"content":"Determines the nearest integer that is less than or equal to the specified floating-point value.","pos":[1093,1189]},{"pos":[1198,1204],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[1470,1480],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`x`</ph>","pos":[1484,1492],"source":"[in] `x`"},{"content":"The value to truncate.","pos":[1496,1518]},{"pos":[1527,1539],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[1543,1612],"content":"If successful, returns an integer value of <ph id=\"ph1\">`x`</ph>, rounded towards zero.","source":"If successful, returns an integer value of `x`, rounded towards zero."},{"content":"Otherwise, may return one of the following:","pos":[1619,1662]},{"content":"Issue","pos":[1669,1674]},{"content":"Return","pos":[1675,1681]},{"pos":[1715,1730],"content":"<ph id=\"ph1\">`x`</ph> = ±INFINITY","source":"`x` = ±INFINITY"},{"content":"x","pos":[1731,1732]},{"pos":[1737,1746],"content":"<ph id=\"ph1\">`x`</ph> =  ±0","source":"`x` =  ±0"},{"content":"x","pos":[1747,1748]},{"pos":[1753,1762],"content":"<ph id=\"ph1\">`x`</ph> = NaN","source":"`x` = NaN"},{"content":"NaN","pos":[1763,1766]},{"pos":[1774,1867],"content":"Errors are reported as specified in <bpt id=\"p1\">[</bpt>_matherr<ept id=\"p1\">](../../c-runtime-library/reference/matherr.md)</ept>.","source":"Errors are reported as specified in [_matherr](../../c-runtime-library/reference/matherr.md)."},{"pos":[1876,1883],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Because C++ allows overloading, you can call overloads of <ph id=\"ph1\">`trunc`</ph> that take and return float and long double types.","pos":[1887,2002],"source":"Because C++ allows overloading, you can call overloads of `trunc` that take and return float and long double types."},{"content":"In a C program, <ph id=\"ph1\">`trunc`</ph> always takes and returns a double.","pos":[2003,2061],"source":" In a C program, `trunc` always takes and returns a double."},{"content":"Because the largest floating-point values are exact integers, this function will not overflow on its own.","pos":[2068,2173]},{"content":"However, you may cause the function to overflow by returning a value into an integer type.","pos":[2174,2264]},{"content":"You can also round down by implicitly converting from floating-point to integral; however, doing so is limited to the values that can be stored in the target type.","pos":[2271,2434]},{"pos":[2443,2455],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"content":"Function","pos":[2462,2470]},{"content":"C header","pos":[2471,2479]},{"content":"C++ header","pos":[2480,2490]},{"pos":[2548,2591],"content":"<ph id=\"ph1\">`trunc`</ph>,                <ph id=\"ph2\">`truncf`</ph>,  <ph id=\"ph3\">`truncl`</ph>","source":"`trunc`,                `truncf`,  `truncl`"},{"content":"<ph id=\"ph1\">\\&lt;</ph>math.h&gt;","pos":[2592,2601],"source":"\\<math.h>"},{"content":"<ph id=\"ph1\">\\&lt;</ph>cmath&gt;","pos":[2602,2610],"source":"\\<cmath>"},{"pos":[2618,2722],"content":"For additional compatibility information, see <bpt id=\"p1\">[</bpt>Compatibility<ept id=\"p1\">](../../c-runtime-library/compatibility.md)</ept>.","source":"For additional compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md)."},{"pos":[2731,2739],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Alphabetical Function Reference<ept id=\"p1\">](../../c-runtime-library/reference/crt-alphabetical-function-reference.md)</ept><ph id=\"ph1\"> </ph>","pos":[2743,2851],"source":"[Alphabetical Function Reference](../../c-runtime-library/reference/crt-alphabetical-function-reference.md) "},{"content":"<bpt id=\"p1\"> [</bpt>floor, floorf, floorl<ept id=\"p1\">](../../c-runtime-library/reference/floor-floorf-floorl.md)</ept><ph id=\"ph1\"> </ph>","pos":[2854,2937],"source":" [floor, floorf, floorl](../../c-runtime-library/reference/floor-floorf-floorl.md) "},{"content":"<bpt id=\"p1\"> [</bpt>ceil, ceilf, ceill<ept id=\"p1\">](../../c-runtime-library/reference/ceil-ceilf-ceill.md)</ept><ph id=\"ph1\"> </ph>","pos":[2940,3017],"source":" [ceil, ceilf, ceill](../../c-runtime-library/reference/ceil-ceilf-ceill.md) "},{"content":"<bpt id=\"p1\"> [</bpt>round, roundf, roundl<ept id=\"p1\">](../../c-runtime-library/reference/round-roundf-roundl.md)</ept>","pos":[3020,3102],"source":" [round, roundf, roundl](../../c-runtime-library/reference/round-roundf-roundl.md)"}],"content":"---\ntitle: \"trunc, truncf, truncl | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"cpp\"\n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\napiname: \n  - \"trunc\"\n  - \"truncf\"\n  - \"truncl\"\napilocation: \n  - \"msvcrt.dll\"\n  - \"msvcr80.dll\"\n  - \"msvcr90.dll\"\n  - \"msvcr100.dll\"\n  - \"msvcr100_clr0400.dll\"\n  - \"msvcr110.dll\"\n  - \"msvcr110_clr0400.dll\"\n  - \"msvcr120.dll\"\n  - \"msvcr120_clr0400.dll\"\n  - \"ucrtbase.dll\"\n  - \"api-ms-win-crt-math-l1-1-0.dll\"\napitype: \"DLLExport\"\nf1_keywords: \n  - \"trunc\"\n  - \"truncf\"\n  - \"truncl\"\n  - \"math/trunc\"\n  - \"math/truncf\"\n  - \"math/truncl\"\ndev_langs: \n  - \"C\"\n  - \"C++\"\nhelpviewer_keywords: \n  - \"trunc function\"\n  - \"truncf function\"\n  - \"truncl function\"\nms.assetid: de2038ac-ac0b-483e-870c-e8992dcd4fd0\ncaps.latest.revision: 13\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# trunc, truncf, truncl\nDetermines the nearest integer that is less than or equal to the specified floating-point value.  \n  \n## Syntax  \n  \n```  \ndouble trunc(  \n   double x  \n);  \n  \nfloat trunc(  \n   float x  \n); //C++ only  \n  \nlong double trunc(  \n   long double x  \n); //C++ only  \n  \nfloat trunc(  \n   float x  \n); //C++ only  \n  \nlong double truncl(  \n   long double x  \n);  \n  \n```  \n  \n#### Parameters  \n [in] `x`  \n The value to truncate.  \n  \n## Return Value  \n If successful, returns an integer value of `x`, rounded towards zero.  \n  \n Otherwise, may return one of the following:  \n  \n|Issue|Return|  \n|-----------|------------|  \n|`x` = ±INFINITY|x|  \n|`x` =  ±0|x|  \n|`x` = NaN|NaN|  \n  \n Errors are reported as specified in [_matherr](../../c-runtime-library/reference/matherr.md).  \n  \n## Remarks  \n Because C++ allows overloading, you can call overloads of `trunc` that take and return float and long double types. In a C program, `trunc` always takes and returns a double.  \n  \n Because the largest floating-point values are exact integers, this function will not overflow on its own. However, you may cause the function to overflow by returning a value into an integer type.  \n  \n You can also round down by implicitly converting from floating-point to integral; however, doing so is limited to the values that can be stored in the target type.  \n  \n## Requirements  \n  \n|Function|C header|C++ header|  \n|--------------|--------------|------------------|  \n|`trunc`,                `truncf`,  `truncl`|\\<math.h>|\\<cmath>|  \n  \n For additional compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md).  \n  \n## See Also  \n [Alphabetical Function Reference](../../c-runtime-library/reference/crt-alphabetical-function-reference.md)   \n [floor, floorf, floorl](../../c-runtime-library/reference/floor-floorf-floorl.md)   \n [ceil, ceilf, ceill](../../c-runtime-library/reference/ceil-ceilf-ceill.md)   \n [round, roundf, roundl](../../c-runtime-library/reference/round-roundf-roundl.md)"}