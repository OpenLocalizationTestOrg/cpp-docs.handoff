{"nodes":[{"pos":[12,39],"content":"CAcl Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"CAcl Class | Microsoft Docs","pos":[0,27]}]},{"content":"CAcl Class","pos":[640,650]},{"pos":[651,720],"content":"This class is a wrapper for an <ph id=\"ph1\">`ACL`</ph> (access-control list) structure.","source":"This class is a wrapper for an `ACL` (access-control list) structure."},{"pos":[728,838],"content":"[!IMPORTANT]\n This class and its members cannot be used in applications that execute in the Windows Runtime.","leadings":["","> "],"nodes":[{"content":"This class and its members cannot be used in applications that execute in the Windows Runtime.","pos":[14,108]}]},{"content":"Syntax","pos":[847,853]},{"content":"Members","pos":[886,893]},{"content":"Public Typedefs","pos":[903,918]},{"content":"Name","pos":[925,929]},{"content":"Description","pos":[930,941]},{"content":"CAcl::CAccessMaskArray","pos":[980,1002]},{"pos":[1029,1056],"content":"An array of <ph id=\"ph1\">`ACCESS_MASK`</ph>s.","source":"An array of `ACCESS_MASK`s."},{"content":"CAcl::CAceFlagArray","pos":[1062,1081]},{"pos":[1105,1125],"content":"An array of <ph id=\"ph1\">`BYTE`</ph>s.","source":"An array of `BYTE`s."},{"content":"CAcl::CAceTypeArray","pos":[1131,1150]},{"pos":[1174,1194],"content":"An array of <ph id=\"ph1\">`BYTE`</ph>s.","source":"An array of `BYTE`s."},{"content":"Public Constructors","pos":[1205,1224]},{"content":"Name","pos":[1231,1235]},{"content":"Description","pos":[1236,1247]},{"content":"CAcl::CAcl","pos":[1286,1296]},{"content":"The constructor.","pos":[1311,1327]},{"content":"CAcl::~CAcl","pos":[1333,1344]},{"content":"The destructor.","pos":[1364,1379]},{"content":"Public Methods","pos":[1390,1404]},{"content":"Name","pos":[1411,1415]},{"content":"Description","pos":[1416,1427]},{"content":"CAcl::GetAceCount","pos":[1466,1483]},{"content":"Returns the number of access-control entry (ACE) objects.","pos":[1505,1562]},{"content":"CAcl::GetAclEntries","pos":[1568,1587]},{"pos":[1611,1682],"content":"Retrieves the access-control list (ACL) entries from the <ph id=\"ph1\">`CAcl`</ph> object.","source":"Retrieves the access-control list (ACL) entries from the `CAcl` object."},{"content":"CAcl::GetAclEntry","pos":[1688,1705]},{"pos":[1727,1794],"content":"Retrieves all of the information about an entry in a <ph id=\"ph1\">`CAcl`</ph> object.","source":"Retrieves all of the information about an entry in a `CAcl` object."},{"content":"CAcl::GetLength","pos":[1800,1815]},{"content":"Returns the length of the ACL.","pos":[1835,1865]},{"content":"CAcl::GetPACL","pos":[1871,1884]},{"content":"Returns a PACL (pointer to an ACL).","pos":[1902,1937]},{"content":"CAcl::IsEmpty","pos":[1943,1956]},{"pos":[1974,2010],"content":"Tests the <ph id=\"ph1\">`CAcl`</ph> object for entries.","source":"Tests the `CAcl` object for entries."},{"content":"CAcl::IsNull","pos":[2016,2028]},{"pos":[2045,2085],"content":"Returns the status of the <ph id=\"ph1\">`CAcl`</ph> object.","source":"Returns the status of the `CAcl` object."},{"content":"CAcl::RemoveAce","pos":[2091,2106]},{"pos":[2126,2195],"content":"Removes a specific ACE (access-control entry) from the <ph id=\"ph1\">`CAcl`</ph> object.","source":"Removes a specific ACE (access-control entry) from the `CAcl` object."},{"content":"CAcl::RemoveAces","pos":[2201,2217]},{"pos":[2238,2327],"content":"Removes all ACEs (access-control entries) from the <ph id=\"ph1\">`CAcl`</ph> that apply to the given <ph id=\"ph2\">`CSid`</ph>.","source":"Removes all ACEs (access-control entries) from the `CAcl` that apply to the given `CSid`."},{"content":"CAcl::SetEmpty","pos":[2333,2347]},{"pos":[2366,2399],"content":"Marks the <ph id=\"ph1\">`CAcl`</ph> object as empty.","source":"Marks the `CAcl` object as empty."},{"content":"CAcl::SetNull","pos":[2405,2418]},{"pos":[2436,2470],"content":"Marks the <ph id=\"ph1\">`CAcl`</ph> object as <ph id=\"ph2\">`NULL`</ph>.","source":"Marks the `CAcl` object as `NULL`."},{"content":"Public Operators","pos":[2481,2497]},{"content":"Name","pos":[2504,2508]},{"content":"Description","pos":[2509,2520]},{"content":"CAcl::operator const ACL *","pos":[2559,2585]},{"pos":[2620,2664],"content":"Casts a <ph id=\"ph1\">`CAcl`</ph> object to an <ph id=\"ph2\">`ACL`</ph> structure.","source":"Casts a `CAcl` object to an `ACL` structure."},{"content":"CAcl::operator =","pos":[2670,2686]},{"content":"Assignment operator.","pos":[2708,2728]},{"content":"Remarks","pos":[2738,2745]},{"content":"The <bpt id=\"p1\">**</bpt>ACL<ept id=\"p1\">**</ept> structure is the header of an ACL (access-control list).","pos":[2749,2817],"source":"The **ACL** structure is the header of an ACL (access-control list)."},{"content":"An ACL includes a sequential list of zero or more <bpt id=\"p1\">[</bpt>ACEs<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/aa374868)</ept> (access-control entries).","pos":[2818,2960],"source":" An ACL includes a sequential list of zero or more [ACEs](http://msdn.microsoft.com/library/windows/desktop/aa374868) (access-control entries)."},{"content":"The individual ACEs in an ACL are numbered from 0 to <bpt id=\"p1\">*</bpt>n-1<ept id=\"p1\">*</ept>, where <bpt id=\"p2\">*</bpt>n<ept id=\"p2\">*</ept> is the number of ACEs in the ACL.","pos":[2961,3064],"source":" The individual ACEs in an ACL are numbered from 0 to *n-1*, where *n* is the number of ACEs in the ACL."},{"content":"When editing an ACL, an application refers to an access-control entry (ACE) within the ACL by its index.","pos":[3065,3169]},{"content":"There are two ACL types:","pos":[3176,3200]},{"content":"Discretionary","pos":[3210,3223]},{"content":"System","pos":[3233,3239]},{"content":"A discretionary ACL is controlled by the owner of an object or anyone granted <bpt id=\"p1\">**</bpt>WRITE_DAC<ept id=\"p1\">**</ept> access to the object.","pos":[3246,3359],"source":"A discretionary ACL is controlled by the owner of an object or anyone granted **WRITE_DAC** access to the object."},{"content":"It specifies the access particular users and groups can have to an object.","pos":[3360,3434]},{"content":"For example, the owner of a file can use a discretionary ACL to control which users and groups can and cannot have access to the file.","pos":[3435,3569]},{"content":"An object can also have system-level security information associated with it, in the form of a system ACL controlled by a system administrator.","pos":[3576,3719]},{"content":"A system ACL can allow the system administrator to audit any attempts to gain access to an object.","pos":[3720,3818]},{"pos":[3825,3987],"content":"For more details, see the <bpt id=\"p1\">[</bpt>ACL<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/aa374872)</ept> discussion in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"For more details, see the [ACL](http://msdn.microsoft.com/library/windows/desktop/aa374872) discussion in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"pos":[3994,4194],"content":"For an introduction to the access control model in Windows, see <bpt id=\"p1\">[</bpt>Access Control<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/aa374860)</ept> in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"For an introduction to the access control model in Windows, see [Access Control](http://msdn.microsoft.com/library/windows/desktop/aa374860) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"content":"Requirements","pos":[4203,4215]},{"pos":[4219,4244],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> atlsecurity.h","source":"**Header:** atlsecurity.h"},{"pos":[4293,4315],"content":"CAcl::CAccessMaskArray"},{"content":"An array of ACCESS_MASK objects.","pos":[4319,4351]},{"content":"Remarks","pos":[4423,4430]},{"content":"This typedef specifies the array type that can be used to store access rights used in access-control entries (ACEs).","pos":[4434,4550]},{"pos":[4596,4615],"content":"CAcl::CAceFlagArray"},{"content":"An array of BYTEs.","pos":[4619,4637]},{"content":"Remarks","pos":[4699,4706]},{"content":"This typedef specifies the array type used to define the access-control entry (ACE) type-specific control flags.","pos":[4710,4822]},{"content":"See the <bpt id=\"p1\">[</bpt>ACE_HEADER<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/aa374919)</ept> definition for the complete list of possible flags.","pos":[4823,4955],"source":" See the [ACE_HEADER](http://msdn.microsoft.com/library/windows/desktop/aa374919) definition for the complete list of possible flags."},{"pos":[5001,5020],"content":"CAcl::CAceTypeArray"},{"content":"An array of BYTEs.","pos":[5024,5042]},{"content":"Remarks","pos":[5104,5111]},{"content":"This typedef specifies the array type used to define the nature of the access-control entry (ACE) objects, such as ACCESS_ALLOWED_ACE_TYPE or ACCESS_DENIED_ACE_TYPE.","pos":[5115,5280]},{"content":"See the <bpt id=\"p1\">[</bpt>ACE_HEADER<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/aa374919)</ept> definition for the complete list of possible types.","pos":[5281,5413],"source":" See the [ACE_HEADER](http://msdn.microsoft.com/library/windows/desktop/aa374919) definition for the complete list of possible types."},{"pos":[5450,5460],"content":"CAcl::CAcl"},{"content":"The constructor.","pos":[5464,5480]},{"content":"Parameters","pos":[5553,5563]},{"content":"An existing <ph id=\"ph1\">`CAcl`</ph> object.","pos":[5576,5602],"source":" An existing `CAcl` object."},{"content":"Remarks","pos":[5612,5619]},{"pos":[5623,5699],"content":"The <ph id=\"ph1\">`CAcl`</ph> object can be optionally created using an existing <ph id=\"ph2\">`CAcl`</ph> object.","source":"The `CAcl` object can be optionally created using an existing `CAcl` object."},{"pos":[5741,5752],"content":"CAcl::~CAcl"},{"content":"The destructor.","pos":[5756,5771]},{"content":"Remarks","pos":[5819,5826]},{"content":"The destructor frees any resources acquired by the object.","pos":[5830,5888]},{"pos":[5932,5949],"content":"CAcl::GetAceCount"},{"content":"Returns the number of access-control entry (ACE) objects.","pos":[5953,6010]},{"content":"Return Value","pos":[6079,6091]},{"pos":[6095,6150],"content":"Returns the number of ACE entries in the <ph id=\"ph1\">`CAcl`</ph> object.","source":"Returns the number of ACE entries in the `CAcl` object."},{"pos":[6196,6215],"content":"CAcl::GetAclEntries"},{"pos":[6219,6290],"content":"Retrieves the access-control list (ACL) entries from the <ph id=\"ph1\">`CAcl`</ph> object.","source":"Retrieves the access-control list (ACL) entries from the `CAcl` object."},{"content":"Parameters","pos":[6490,6500]},{"content":"A pointer to an array of <bpt id=\"p1\">[</bpt>CSid<ept id=\"p1\">](../../atl/reference/csid-class.md)</ept> objects.","pos":[6515,6590],"source":" A pointer to an array of [CSid](../../atl/reference/csid-class.md) objects."},{"content":"pAccessMasks","pos":[6598,6610]},{"content":"The access masks.","pos":[6615,6632]},{"content":"pAceTypes","pos":[6640,6649]},{"content":"The access-control entry ( <bpt id=\"p1\">**</bpt>ACE<ept id=\"p1\">**</ept>) types.","pos":[6654,6696],"source":" The access-control entry ( **ACE**) types."},{"content":"pAceFlags","pos":[6704,6713]},{"content":"The <bpt id=\"p1\">**</bpt>ACE<ept id=\"p1\">**</ept> flags.","pos":[6718,6736],"source":" The **ACE** flags."},{"content":"Remarks","pos":[6746,6753]},{"content":"This method fills the array parameters with the details of every <bpt id=\"p1\">**</bpt>ACE<ept id=\"p1\">**</ept> object contained in the <ph id=\"ph1\">`CAcl`</ph> object.","pos":[6757,6868],"source":"This method fills the array parameters with the details of every **ACE** object contained in the `CAcl` object."},{"content":"Use NULL when the details for that particular array are not required.","pos":[6869,6938]},{"pos":[6945,7126],"content":"The contents of each array correspond to each other, that is, the first element of the <ph id=\"ph1\">`CAccessMaskArray`</ph> array corresponds to the first element in the <ph id=\"ph2\">`CSidArray`</ph> array, and so on.","source":"The contents of each array correspond to each other, that is, the first element of the `CAccessMaskArray` array corresponds to the first element in the `CSidArray` array, and so on."},{"pos":[7133,7250],"content":"See <bpt id=\"p1\">[</bpt>ACE_HEADER<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/aa374919)</ept> for more details on ACE types and flags.","source":"See [ACE_HEADER](http://msdn.microsoft.com/library/windows/desktop/aa374919) for more details on ACE types and flags."},{"pos":[7294,7311],"content":"CAcl::GetAclEntry"},{"content":"Retrieves all of the information about an entry in an access-control list (ACL).","pos":[7315,7395]},{"content":"Parameters","pos":[7633,7643]},{"content":"Index to the ACL entry to retrieve.","pos":[7659,7694]},{"content":"The <bpt id=\"p1\">[</bpt>CSid<ept id=\"p1\">](../../atl/reference/csid-class.md)</ept> object to which the ACL entry applies.","pos":[7711,7795],"source":" The [CSid](../../atl/reference/csid-class.md) object to which the ACL entry applies."},{"content":"pMask","pos":[7803,7808]},{"content":"The mask specifying permissions to grant or deny access.","pos":[7813,7869]},{"content":"The ACE type.","pos":[7887,7900]},{"content":"The ACE flags.","pos":[7919,7933]},{"content":"The object type.","pos":[7957,7973]},{"content":"This will be set to GUID_NULL if the object type is not specified in the ACE, or if the ACE is not an OBJECT ACE.","pos":[7974,8087]},{"content":"The inherited object type.","pos":[8120,8146]},{"content":"This will be set to GUID_NULL if the inherited object type is not specified in the ACE, or if the ACE is not an OBJECT ACE.","pos":[8147,8270]},{"content":"Remarks","pos":[8280,8287]},{"pos":[8291,8463],"content":"This method will retrieve all of the information about an individual ACE, providing more information than <bpt id=\"p1\">[</bpt>CAcl::GetAclEntries<ept id=\"p1\">](#cacl__getaclentries)</ept> alone makes available.","source":"This method will retrieve all of the information about an individual ACE, providing more information than [CAcl::GetAclEntries](#cacl__getaclentries) alone makes available."},{"pos":[8470,8587],"content":"See <bpt id=\"p1\">[</bpt>ACE_HEADER<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/aa374919)</ept> for more details on ACE types and flags.","source":"See [ACE_HEADER](http://msdn.microsoft.com/library/windows/desktop/aa374919) for more details on ACE types and flags."},{"pos":[8629,8644],"content":"CAcl::GetLength"},{"content":"Returns the length of the access-control list (ACL).","pos":[8648,8700]},{"content":"Return Value","pos":[8755,8767]},{"pos":[8771,8848],"content":"Returns the required length in bytes necessary to hold the <bpt id=\"p1\">**</bpt>ACL<ept id=\"p1\">**</ept> structure.","source":"Returns the required length in bytes necessary to hold the **ACL** structure."},{"pos":[8888,8901],"content":"CAcl::GetPACL"},{"content":"Returns a pointer to an access-control list (ACL).","pos":[8905,8955]},{"content":"Return Value","pos":[9017,9029]},{"pos":[9033,9076],"content":"Returns a pointer to the <bpt id=\"p1\">**</bpt>ACL<ept id=\"p1\">**</ept> structure.","source":"Returns a pointer to the **ACL** structure."},{"pos":[9116,9129],"content":"CAcl::IsEmpty"},{"pos":[9133,9169],"content":"Tests the <ph id=\"ph1\">`CAcl`</ph> object for entries.","source":"Tests the `CAcl` object for entries."},{"content":"Remarks","pos":[9222,9229]},{"content":"Returns <bpt id=\"p1\">**</bpt>true<ept id=\"p1\">**</ept> if the <ph id=\"ph1\">`CAcl`</ph> object is not NULL, and contains no entries.","pos":[9233,9308],"source":"Returns **true** if the `CAcl` object is not NULL, and contains no entries."},{"content":"Returns <bpt id=\"p1\">**</bpt>false<ept id=\"p1\">**</ept> if the <ph id=\"ph1\">`CAcl`</ph> object is either NULL, or contains at least one entry.","pos":[9309,9395],"source":" Returns **false** if the `CAcl` object is either NULL, or contains at least one entry."},{"pos":[9434,9446],"content":"CAcl::IsNull"},{"pos":[9450,9490],"content":"Returns the status of the <ph id=\"ph1\">`CAcl`</ph> object.","source":"Returns the status of the `CAcl` object."},{"content":"Return Value","pos":[9542,9554]},{"pos":[9558,9625],"content":"Returns <bpt id=\"p1\">**</bpt>true<ept id=\"p1\">**</ept> if the <ph id=\"ph1\">`CAcl`</ph> object is NULL, <bpt id=\"p2\">**</bpt>false<ept id=\"p2\">**</ept> otherwise.","source":"Returns **true** if the `CAcl` object is NULL, **false** otherwise."},{"pos":[9682,9708],"content":"CAcl::operator const ACL *"},{"pos":[9712,9780],"content":"Casts a <ph id=\"ph1\">`CAcl`</ph> object to an <bpt id=\"p1\">**</bpt>ACL<ept id=\"p1\">**</ept> (access-control list) structure.","source":"Casts a `CAcl` object to an **ACL** (access-control list) structure."},{"content":"```operator const ACL *() const throw(...);","pos":[9786,9829]},{"content":"CAcl&amp; operator= (const CAcl&amp; rhs) throw(...);","pos":[9993,10038],"source":"CAcl& operator= (const CAcl& rhs) throw(...);"},{"content":"void RemoveAce(UINT   nIndex) throw();","pos":[10336,10374]},{"content":"bool RemoveAces(const CSid&amp; rSid) throw(...)","pos":[10741,10785],"source":"bool RemoveAces(const CSid& rSid) throw(...)"},{"content":"void SetEmpty() throw();","pos":[10956,10980]},{"content":"void SetNull() throw();","pos":[11175,11198]}],"content":"---\ntitle: \"CAcl Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"CAcl\"\n  - \"ATL::CAcl\"\n  - \"ATLSECURITY/CAcl\"\n  - \"ATL.CAcl\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"CAcl class\"\nms.assetid: 20bcb9af-dc1c-4737-b923-3864776680d6\ncaps.latest.revision: 21\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# CAcl Class\nThis class is a wrapper for an `ACL` (access-control list) structure.  \n  \n> [!IMPORTANT]\n>  This class and its members cannot be used in applications that execute in the Windows Runtime.  \n  \n## Syntax  \n  \n```\nclass CAcl\n```  \n  \n## Members  \n  \n### Public Typedefs  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CAcl::CAccessMaskArray](#cacl__caccessmaskarray)|An array of `ACCESS_MASK`s.|  \n|[CAcl::CAceFlagArray](#cacl__caceflagarray)|An array of `BYTE`s.|  \n|[CAcl::CAceTypeArray](#cacl__cacetypearray)|An array of `BYTE`s.|  \n  \n### Public Constructors  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CAcl::CAcl](#cacl__cacl)|The constructor.|  \n|[CAcl::~CAcl](#cacl___dtorcacl)|The destructor.|  \n  \n### Public Methods  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CAcl::GetAceCount](#cacl__getacecount)|Returns the number of access-control entry (ACE) objects.|  \n|[CAcl::GetAclEntries](#cacl__getaclentries)|Retrieves the access-control list (ACL) entries from the `CAcl` object.|  \n|[CAcl::GetAclEntry](#cacl__getaclentry)|Retrieves all of the information about an entry in a `CAcl` object.|  \n|[CAcl::GetLength](#cacl__getlength)|Returns the length of the ACL.|  \n|[CAcl::GetPACL](#cacl__getpacl)|Returns a PACL (pointer to an ACL).|  \n|[CAcl::IsEmpty](#cacl__isempty)|Tests the `CAcl` object for entries.|  \n|[CAcl::IsNull](#cacl__isnull)|Returns the status of the `CAcl` object.|  \n|[CAcl::RemoveAce](#cacl__removeace)|Removes a specific ACE (access-control entry) from the `CAcl` object.|  \n|[CAcl::RemoveAces](#cacl__removeaces)|Removes all ACEs (access-control entries) from the `CAcl` that apply to the given `CSid`.|  \n|[CAcl::SetEmpty](#cacl__setempty)|Marks the `CAcl` object as empty.|  \n|[CAcl::SetNull](#cacl__setnull)|Marks the `CAcl` object as `NULL`.|  \n  \n### Public Operators  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CAcl::operator const ACL *](#cacl__operator_const_acl__star)|Casts a `CAcl` object to an `ACL` structure.|  \n|[CAcl::operator =](#cacl__operator_eq)|Assignment operator.|  \n  \n## Remarks  \n The **ACL** structure is the header of an ACL (access-control list). An ACL includes a sequential list of zero or more [ACEs](http://msdn.microsoft.com/library/windows/desktop/aa374868) (access-control entries). The individual ACEs in an ACL are numbered from 0 to *n-1*, where *n* is the number of ACEs in the ACL. When editing an ACL, an application refers to an access-control entry (ACE) within the ACL by its index.  \n  \n There are two ACL types:  \n  \n-   Discretionary  \n  \n-   System  \n  \n A discretionary ACL is controlled by the owner of an object or anyone granted **WRITE_DAC** access to the object. It specifies the access particular users and groups can have to an object. For example, the owner of a file can use a discretionary ACL to control which users and groups can and cannot have access to the file.  \n  \n An object can also have system-level security information associated with it, in the form of a system ACL controlled by a system administrator. A system ACL can allow the system administrator to audit any attempts to gain access to an object.  \n  \n For more details, see the [ACL](http://msdn.microsoft.com/library/windows/desktop/aa374872) discussion in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n For an introduction to the access control model in Windows, see [Access Control](http://msdn.microsoft.com/library/windows/desktop/aa374860) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n## Requirements  \n **Header:** atlsecurity.h  \n  \n##  <a name=\"cacl__caccessmaskarray\"></a>  CAcl::CAccessMaskArray  \n An array of ACCESS_MASK objects.  \n  \n```\ntypedef CAtlArray<ACCESS_MASK> CAccessMaskArray;\n```  \n  \n### Remarks  \n This typedef specifies the array type that can be used to store access rights used in access-control entries (ACEs).  \n  \n##  <a name=\"cacl__caceflagarray\"></a>  CAcl::CAceFlagArray  \n An array of BYTEs.  \n  \n```\ntypedef CAtlArray<BYTE> CAceFlagArray;\n```  \n  \n### Remarks  \n This typedef specifies the array type used to define the access-control entry (ACE) type-specific control flags. See the [ACE_HEADER](http://msdn.microsoft.com/library/windows/desktop/aa374919) definition for the complete list of possible flags.  \n  \n##  <a name=\"cacl__cacetypearray\"></a>  CAcl::CAceTypeArray  \n An array of BYTEs.  \n  \n```\ntypedef CAtlArray<BYTE> CAceTypeArray;\n```  \n  \n### Remarks  \n This typedef specifies the array type used to define the nature of the access-control entry (ACE) objects, such as ACCESS_ALLOWED_ACE_TYPE or ACCESS_DENIED_ACE_TYPE. See the [ACE_HEADER](http://msdn.microsoft.com/library/windows/desktop/aa374919) definition for the complete list of possible types.  \n  \n##  <a name=\"cacl__cacl\"></a>  CAcl::CAcl  \n The constructor.  \n  \n```\nCAcl() throw();\nCAcl(const CAcl& rhs) throw(...);\n```  \n  \n### Parameters  \n `rhs`  \n An existing `CAcl` object.  \n  \n### Remarks  \n The `CAcl` object can be optionally created using an existing `CAcl` object.  \n  \n##  <a name=\"cacl___dtorcacl\"></a>  CAcl::~CAcl  \n The destructor.  \n  \n```\nvirtual ~CAcl() throw();\n```  \n  \n### Remarks  \n The destructor frees any resources acquired by the object.  \n  \n##  <a name=\"cacl__getacecount\"></a>  CAcl::GetAceCount  \n Returns the number of access-control entry (ACE) objects.  \n  \n```\nvirtual UINT GetAceCount() const throw() = 0;\n```  \n  \n### Return Value  \n Returns the number of ACE entries in the `CAcl` object.  \n  \n##  <a name=\"cacl__getaclentries\"></a>  CAcl::GetAclEntries  \n Retrieves the access-control list (ACL) entries from the `CAcl` object.  \n  \n```\nvoid GetAclEntries(\n    CSid::CSidArray* pSids,\n    CAccessMaskArray* pAccessMasks = NULL,\n CAceTypeArray* pAceTypes = NULL,\n CAceFlagArray* pAceFlags = NULL) const throw(...);\n```  \n  \n### Parameters  \n `pSids`  \n A pointer to an array of [CSid](../../atl/reference/csid-class.md) objects.  \n  \n *pAccessMasks*  \n The access masks.  \n  \n *pAceTypes*  \n The access-control entry ( **ACE**) types.  \n  \n *pAceFlags*  \n The **ACE** flags.  \n  \n### Remarks  \n This method fills the array parameters with the details of every **ACE** object contained in the `CAcl` object. Use NULL when the details for that particular array are not required.  \n  \n The contents of each array correspond to each other, that is, the first element of the `CAccessMaskArray` array corresponds to the first element in the `CSidArray` array, and so on.  \n  \n See [ACE_HEADER](http://msdn.microsoft.com/library/windows/desktop/aa374919) for more details on ACE types and flags.  \n  \n##  <a name=\"cacl__getaclentry\"></a>  CAcl::GetAclEntry  \n Retrieves all of the information about an entry in an access-control list (ACL).  \n  \n```\nvoid GetAclEntry(\n    UINT nIndex,\n    CSid* pSid,\n    ACCESS_MASK* pMask = NULL,\n BYTE* pType = NULL,\n    BYTE* pFlags = NULL,\n    GUID* pObjectType = NULL,\n    GUID* pInheritedObjectType = NULL) const throw(...);\n```  \n  \n### Parameters  \n `nIndex`  \n Index to the ACL entry to retrieve.  \n  \n `pSid`  \n The [CSid](../../atl/reference/csid-class.md) object to which the ACL entry applies.  \n  \n *pMask*  \n The mask specifying permissions to grant or deny access.  \n  \n `pType`  \n The ACE type.  \n  \n `pFlags`  \n The ACE flags.  \n  \n `pObjectType`  \n The object type. This will be set to GUID_NULL if the object type is not specified in the ACE, or if the ACE is not an OBJECT ACE.  \n  \n `pInheritedObjectType`  \n The inherited object type. This will be set to GUID_NULL if the inherited object type is not specified in the ACE, or if the ACE is not an OBJECT ACE.  \n  \n### Remarks  \n This method will retrieve all of the information about an individual ACE, providing more information than [CAcl::GetAclEntries](#cacl__getaclentries) alone makes available.  \n  \n See [ACE_HEADER](http://msdn.microsoft.com/library/windows/desktop/aa374919) for more details on ACE types and flags.  \n  \n##  <a name=\"cacl__getlength\"></a>  CAcl::GetLength  \n Returns the length of the access-control list (ACL).  \n  \n```\nUINT GetLength() const throw();\n```  \n  \n### Return Value  \n Returns the required length in bytes necessary to hold the **ACL** structure.  \n  \n##  <a name=\"cacl__getpacl\"></a>  CAcl::GetPACL  \n Returns a pointer to an access-control list (ACL).  \n  \n```\nconst ACL* GetPACL() const throw(...);\n```  \n  \n### Return Value  \n Returns a pointer to the **ACL** structure.  \n  \n##  <a name=\"cacl__isempty\"></a>  CAcl::IsEmpty  \n Tests the `CAcl` object for entries.  \n  \n```\nbool IsEmpty() const throw();\n```  \n  \n### Remarks  \n Returns **true** if the `CAcl` object is not NULL, and contains no entries. Returns **false** if the `CAcl` object is either NULL, or contains at least one entry.  \n  \n##  <a name=\"cacl__isnull\"></a>  CAcl::IsNull  \n Returns the status of the `CAcl` object.  \n  \n```\nbool IsNull() const throw();\n```  \n  \n### Return Value  \n Returns **true** if the `CAcl` object is NULL, **false** otherwise.  \n  \n##  <a name=\"cacl__operator_const_acl__star\"></a>  CAcl::operator const ACL *  \n Casts a `CAcl` object to an **ACL** (access-control list) structure.  \n  \n```operator const ACL *() const throw(...);\n```  \n  \n### Remarks  \n Returns the address of the **ACL** structure.  \n  \n##  <a name=\"cacl__operator_eq\"></a>  CAcl::operator =  \n Assignment operator.  \n  \n```\nCAcl& operator= (const CAcl& rhs) throw(...);\n```  \n  \n### Parameters  \n `rhs`  \n The `CAcl` to assign to the existing object.  \n  \n### Return Value  \n Returns a reference to the updated `CAcl` object.  \n  \n##  <a name=\"cacl__removeace\"></a>  CAcl::RemoveAce  \n Removes a specific ACE (access-control entry) from the **CAcl** object.  \n  \n```\nvoid RemoveAce(UINT   nIndex) throw();\n```  \n  \n### Parameters  \n `nIndex`  \n Index to the ACE entry to remove.  \n  \n### Remarks  \n This method is derived from [CAtlArray::RemoveAt](../../atl/reference/catlarray-class.md#catlarray__removeat).  \n  \n##  <a name=\"cacl__removeaces\"></a>  CAcl::RemoveAces  \n Removes alls ACEs (access-control entries) from the `CAcl` that apply to the given `CSid`.  \n  \n```\nbool RemoveAces(const CSid& rSid) throw(...)\n```  \n  \n### Parameters  \n `rSid`  \n A reference to a `CSid` object.  \n  \n##  <a name=\"cacl__setempty\"></a>  CAcl::SetEmpty  \n Marks the `CAcl` object as empty.  \n  \n```\nvoid SetEmpty() throw();\n```  \n  \n### Remarks  \n The `CAcl` can be set to empty or to NULL: the two states are distinct.  \n  \n##  <a name=\"cacl__setnull\"></a>  CAcl::SetNull  \n Marks the `CAcl` object as NULL.  \n  \n```\nvoid SetNull() throw();\n```  \n  \n### Remarks  \n The `CAcl` can be set to empty or to NULL: the two states are distinct.  \n  \n## See Also  \n [Class Overview](../../atl/atl-class-overview.md)   \n [Security Global Functions](../../atl/reference/security-global-functions.md)\n"}