{"nodes":[{"pos":[12,80],"content":"How to: Hold Reference to Value Type in Native Type | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"How to: Hold Reference to Value Type in Native Type | Microsoft Docs","pos":[0,68]}]},{"content":"How to: Hold Reference to Value Type in Native Type","pos":[681,732]},{"pos":[733,817],"content":"Use <ph id=\"ph1\">`gcroot`</ph> on the boxed type to hold a reference to a value type in a native type.","source":"Use `gcroot` on the boxed type to hold a reference to a value type in a native type."},{"content":"Example","pos":[826,833]},{"content":"See Also","pos":[1334,1342]},{"content":"Using C++ Interop (Implicit PInvoke)","pos":[1347,1383]}],"content":"---\ntitle: \"How to: Hold Reference to Value Type in Native Type | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"get-started-article\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"value type reference in native type\"\n  - \"reference to value type in native type\"\nms.assetid: 1eabf8be-7d4f-4339-9027-48d5c4244483\ncaps.latest.revision: 8\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# How to: Hold Reference to Value Type in Native Type\nUse `gcroot` on the boxed type to hold a reference to a value type in a native type.  \n  \n## Example  \n  \n```  \n// reference_to_value_in_native.cpp  \n// compile with: /clr  \n#using <mscorlib.dll>  \n#include <vcclr.h>   \n  \nusing namespace System;   \n  \npublic value struct V {  \n   String ^str;  \n};  \n  \nclass Native {  \npublic:  \n   gcroot< V^ > v_handle;  \n};  \n  \nint main() {  \n   Native native;  \n   V v;  \n   native.v_handle = v;  \n   native.v_handle->str = \"Hello\";  \n   Console::WriteLine(\"String in V: {0}\", native.v_handle->str);  \n}  \n```  \n  \n```Output  \nString in V: Hello  \n```  \n  \n## See Also  \n [Using C++ Interop (Implicit PInvoke)](../dotnet/using-cpp-interop-implicit-pinvoke.md)"}