{"nodes":[{"pos":[12,49],"content":"Compiler Error C3056 | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Compiler Error C3056 | Microsoft Docs","pos":[0,37]}]},{"content":"Compiler Error C3056","pos":[618,638]},{"content":"'symbol' : symbol is not in the same scope with 'threadprivate' directive","pos":[639,712]},{"pos":[719,867],"content":"A symbol used in a <bpt id=\"p1\">[</bpt>threadprivate<ept id=\"p1\">](../../parallel/openmp/reference/threadprivate.md)</ept> clause must be in the same scope as the <ph id=\"ph1\">`threadprivate`</ph> clause.","source":"A symbol used in a [threadprivate](../../parallel/openmp/reference/threadprivate.md) clause must be in the same scope as the `threadprivate` clause."},{"content":"The following sample generates C3056:","pos":[874,911]},{"content":"Possible resolution:","pos":[1123,1143]}],"content":"---\ntitle: \"Compiler Error C3056 | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-csharp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"C3056\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"C3056\"\nms.assetid: 9500173d-870b-49b3-8e88-0ee93586d19a\ncaps.latest.revision: 7\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"ru-ru\"\n  - \"zh-cn\"\n  - \"zh-tw\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"tr-tr\"\n---\n# Compiler Error C3056\n'symbol' : symbol is not in the same scope with 'threadprivate' directive  \n  \n A symbol used in a [threadprivate](../../parallel/openmp/reference/threadprivate.md) clause must be in the same scope as the `threadprivate` clause.  \n  \n The following sample generates C3056:  \n  \n```  \n// C3056.cpp  \n// compile with: /openmp  \nint x, y;  \nvoid test() {  \n   #pragma omp threadprivate(x, y)   // C3056  \n   #pragma omp parallel copyin(x, y)  \n   {  \n      x = y;  \n   }  \n}  \n```  \n  \n Possible resolution:  \n  \n```  \n// C3056b.cpp  \n// compile with: /openmp /LD  \nint x, y;  \n#pragma omp threadprivate(x, y)  \nvoid test() {  \n   #pragma omp parallel copyin(x, y)  \n   {  \n      x = y;  \n   }  \n}  \n```"}