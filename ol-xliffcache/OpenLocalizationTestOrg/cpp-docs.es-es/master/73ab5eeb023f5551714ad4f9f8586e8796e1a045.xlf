<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="es-es">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-04506c2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">73ab5eeb023f5551714ad4f9f8586e8796e1a045</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\mfc\changing-the-styles-of-a-window-created-by-mfc.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8947181bf6e75db51c54b60ed86483340c026220</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">812d75234ba554303257a7569c073873aa3c756a</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Changing the Styles of a Window Created by MFC | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Changing the Styles of a Window Created by MFC</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>In its version of the <ph id="ph1">`WinMain`</ph> function, MFC registers several standard window classes for you.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Because you don't normally edit MFC's <ph id="ph1">`WinMain`</ph>, that function gives you no opportunity to change the MFC default window styles.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>This article explains how you can change the styles of such a preregistered window class in an existing application.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Changing Styles in a New MFC Application</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>If you're using Visual C++ 2.0 or later, you can change the default window styles in the Application Wizard when you create your application.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>In the Application Wizard's User Interface Features page, you can change styles for your main frame window and MDI child windows.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>For either window type, you can specify its frame thickness (thick or thin) and any of the following:</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Whether the window has Minimize or Maximize controls.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Whether the window appears initially minimized, maximized, or neither.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>For main frame windows, you can also specify whether the window has a System Menu.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>For MDI child windows, you can specify whether the window supports splitter panes.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Changing Styles in an Existing Application</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>If you're changing window attributes in an existing application, follow the instructions in the rest of this article instead.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>To change the default window attributes used by a framework application created with the Application Wizard, override the window's <bpt id="p1">[</bpt>PreCreateWindow<ept id="p1">](../mfc/reference/cwnd-class.md#cwnd__precreatewindow)</ept> virtual member function.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>allows an application to access the creation process normally managed internally by the <bpt id="p1">[</bpt>CDocTemplate<ept id="p1">](../mfc/reference/cdoctemplate-class.md)</ept> class.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The framework calls <ph id="ph1">`PreCreateWindow`</ph> just prior to creating the window.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>By modifying the <bpt id="p1">[</bpt>CREATESTRUCT<ept id="p1">](../mfc/reference/createstruct-structure.md)</ept> structure passed to <ph id="ph1">`PreCreateWindow`</ph>, your application can change the attributes used to create the window.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>For example, to ensure that a window does not use a caption, use the following bitwise operation:</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>NVC_MFCDocView#15</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>CTRLBARS<ept id="p1">](../visual-cpp-samples.md)</ept> sample application demonstrates this technique for changing window attributes.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Depending on what your application changes in <ph id="ph1">`PreCreateWindow`</ph>, it may be necessary to call the base class implementation of the function.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The following discussion covers the SDI case and the <bpt id="p1">[</bpt>MDI case<ept id="p1">](#_core_the_mdi_case)</ept>.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The SDI Case</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>In a single document interface (SDI) application, the default window style in the framework is a combination of the <bpt id="p1">**</bpt>WS_OVERLAPPEDWINDOW<ept id="p1">**</ept> and <bpt id="p2">**</bpt>FWS_ADDTOTITLE<ept id="p2">**</ept> styles.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>FWS_ADDTOTITLE<ept id="p1">**</ept> is an MFC-specific style that instructs the framework to add the document title to the window's caption.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>To change the window attributes in an SDI application, override the <ph id="ph1">`PreCreateWindow`</ph> function in your class derived from <ph id="ph2">`CFrameWnd`</ph> (which the Application Wizard names <ph id="ph3">`CMainFrame`</ph>).</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>For example:</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>NVC_MFCDocViewSDI#11</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>This code creates a main frame window without Minimize and Maximize buttons and without a sizable border.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The window is initially centered on the screen.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The MDI Case</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>A little more work is required to change the window style of a child window in a multiple document interface (MDI) application.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>By default, an MDI application created with the Application Wizard uses the default <bpt id="p1">[</bpt>CMDIChildWnd<ept id="p1">](../mfc/reference/cmdichildwnd-class.md)</ept> class defined in MFC.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>To change the window style of an MDI child window, you must derive a new class from <ph id="ph1">`CMDIChildWnd`</ph> and replace all references to <ph id="ph2">`CMDIChildWnd`</ph> in your project with references to the new class.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Most likely, the only reference to <ph id="ph1">`CMDIChildWnd`</ph> in the application is located in your application's <ph id="ph2">`InitInstance`</ph> member function.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The default window style used in an MDI application is a combination of the <bpt id="p1">**</bpt>WS_CHILD<ept id="p1">**</ept>, <bpt id="p2">**</bpt>WS_OVERLAPPEDWINDOW<ept id="p2">**</ept>, and <bpt id="p3">**</bpt>FWS_ADDTOTITLE<ept id="p3">**</ept> styles.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>To change the window attributes of an MDI application's child windows, override the <bpt id="p1">[</bpt>PreCreateWindow<ept id="p1">](../mfc/reference/cwnd-class.md#cwnd__precreatewindow)</ept> function in your class derived from <ph id="ph1">`CMDIChildWnd`</ph>.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>For example:</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>NVC_MFCDocView#16</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>This code creates MDI child windows without a Maximize button.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>What do you want to know more about</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Windows styles</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Frame-window styles</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Window styles</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Frame-Window Styles</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>