{"nodes":[{"pos":[12,46],"content":"OpenMP Directives | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"OpenMP Directives | Microsoft Docs","pos":[0,34]}]},{"content":"OpenMP Directives","pos":[526,543]},{"content":"Provides links to directives used in the OpenMP API.","pos":[544,596]},{"content":"Visual C++ supports the following OpenMP directives:","pos":[603,655]},{"content":"Directive","pos":[662,671]},{"content":"Description","pos":[672,683]},{"content":"atomic","pos":[727,733]},{"content":"Specifies that a memory location that will be updated atomically.","pos":[781,846]},{"content":"barrier","pos":[852,859]},{"content":"Synchronizes all threads in a team; all threads pause at the barrier, until all threads execute the barrier.","pos":[908,1016]},{"content":"critical","pos":[1022,1030]},{"content":"Specifies that code is only executed on one thread at a time.","pos":[1080,1141]},{"content":"flush","pos":[1147,1152]},{"content":"Specifies that all threads have the same view of memory for all shared objects.","pos":[1206,1285]},{"content":"for","pos":[1291,1294]},{"content":"Causes the work done in a for loop inside a parallel region to be divided among threads.","pos":[1346,1434]},{"content":"master","pos":[1440,1446]},{"content":"Specifies that only the master threadshould execute a section of the program.","pos":[1494,1571]},{"content":"ordered","pos":[1577,1584]},{"content":"Specifies that code under a parallelized for loop should be executed like a sequential loop.","pos":[1651,1743]},{"content":"parallel","pos":[1749,1757]},{"content":"Defines a parallel region, which is code that will be executed by multiple threads in parallel.","pos":[1807,1902]},{"content":"sections","pos":[1908,1916]},{"content":"Identifies code sections to be divided among all threads.","pos":[1973,2030]},{"content":"single","pos":[2036,2042]},{"content":"Lets you specify that a section of code should be executed on a single thread, not necessarily the master thread.","pos":[2090,2203]},{"content":"threadprivate","pos":[2209,2222]},{"content":"Specifies that a variable is private to a thread.","pos":[2277,2326]},{"content":"See Also","pos":[2336,2344]},{"content":"OpenMP","pos":[2349,2355]},{"content":"Clauses","pos":[2412,2419]}],"content":"---\ntitle: \"OpenMP Directives | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"C++\"\nms.assetid: 0562c263-344c-466d-843e-de830d918940\ncaps.latest.revision: 7\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# OpenMP Directives\nProvides links to directives used in the OpenMP API.  \n  \n Visual C++ supports the following OpenMP directives:  \n  \n|Directive|Description|  \n|---------------|-----------------|  \n|[atomic](../../../parallel/openmp/reference/atomic.md)|Specifies that a memory location that will be updated atomically.|  \n|[barrier](../../../parallel/openmp/reference/barrier.md)|Synchronizes all threads in a team; all threads pause at the barrier, until all threads execute the barrier.|  \n|[critical](../../../parallel/openmp/reference/critical.md)|Specifies that code is only executed on one thread at a time.|  \n|[flush](../../../parallel/openmp/reference/flush-openmp.md)|Specifies that all threads have the same view of memory for all shared objects.|  \n|[for](../../../parallel/openmp/reference/for-openmp.md)|Causes the work done in a for loop inside a parallel region to be divided among threads.|  \n|[master](../../../parallel/openmp/reference/master.md)|Specifies that only the master threadshould execute a section of the program.|  \n|[ordered](../../../parallel/openmp/reference/ordered-openmp-directives.md)|Specifies that code under a parallelized for loop should be executed like a sequential loop.|  \n|[parallel](../../../parallel/openmp/reference/parallel.md)|Defines a parallel region, which is code that will be executed by multiple threads in parallel.|  \n|[sections](../../../parallel/openmp/reference/sections-openmp.md)|Identifies code sections to be divided among all threads.|  \n|[single](../../../parallel/openmp/reference/single.md)|Lets you specify that a section of code should be executed on a single thread, not necessarily the master thread.|  \n|[threadprivate](../../../parallel/openmp/reference/threadprivate.md)|Specifies that a variable is private to a thread.|  \n  \n## See Also  \n [OpenMP](../../../parallel/openmp/openmp-in-visual-cpp.md)   \n [Clauses](../../../parallel/openmp/reference/openmp-clauses.md)"}