{"nodes":[{"pos":[12,67],"content":"How to: Use combinable to Combine Sets | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"How to: Use combinable to Combine Sets | Microsoft Docs","pos":[0,55]}]},{"content":"How to: Use combinable to Combine Sets","pos":[687,725]},{"pos":[726,879],"content":"This topic shows how to use the <bpt id=\"p1\">[</bpt>concurrency::combinable<ept id=\"p1\">](../../parallel/concrt/reference/combinable-class.md)</ept> class to compute the set of prime numbers.","source":"This topic shows how to use the [concurrency::combinable](../../parallel/concrt/reference/combinable-class.md) class to compute the set of prime numbers."},{"content":"Example","pos":[888,895]},{"content":"The following example computes the set of prime numbers two times.","pos":[899,965]},{"content":"Each computation stores the result in a <bpt id=\"p1\">[</bpt>std::bitset<ept id=\"p1\">](../../standard-library/bitset-class.md)</ept> object.","pos":[966,1067],"source":" Each computation stores the result in a [std::bitset](../../standard-library/bitset-class.md) object."},{"content":"The example first computes the set serially and then computes the set in parallel.","pos":[1068,1150]},{"content":"The example also prints to the console the time that is required to perform both computations.","pos":[1151,1245]},{"content":"This example uses the <bpt id=\"p1\">[</bpt>concurrency::parallel_for<ept id=\"p1\">](reference/concurrency-namespace-functions.md#parallel_for)</ept> algorithm and a <ph id=\"ph1\">`combinable`</ph> object to generate thread-local sets.","pos":[1252,1427],"source":"This example uses the [concurrency::parallel_for](reference/concurrency-namespace-functions.md#parallel_for) algorithm and a `combinable` object to generate thread-local sets."},{"content":"It then uses the <bpt id=\"p1\">[</bpt>concurrency::combinable::combine_each<ept id=\"p1\">](reference/combinable-class.md#combine_each)</ept> method to combine the thread-local sets into the final set.","pos":[1428,1588],"source":" It then uses the [concurrency::combinable::combine_each](reference/combinable-class.md#combine_each) method to combine the thread-local sets into the final set."},{"pos":[1607,1639],"content":"concrt-parallel-combine-primes#1"},{"content":"The following sample output is for a computer that has four processors.","pos":[1731,1802]},{"content":"Compiling the Code","pos":[1879,1897]},{"pos":[1901,2106],"content":"Copy the example code and paste it in a Visual Studio project, or paste it in a file that is named <ph id=\"ph1\">`parallel-combine-primes.cpp`</ph> and then run the following command in a Visual Studio Command Prompt window.","source":"Copy the example code and paste it in a Visual Studio project, or paste it in a file that is named `parallel-combine-primes.cpp` and then run the following command in a Visual Studio Command Prompt window."},{"content":"cl.exe /EHsc parallel-combine-primes.cpp","pos":[2115,2155]},{"content":"See Also","pos":[2166,2174]},{"content":"Parallel Containers and Objects","pos":[2179,2210]},{"content":"combinable Class","pos":[2275,2291]},{"content":"combinable::combine_each Method","pos":[2351,2382]}],"content":"---\ntitle: \"How to: Use combinable to Combine Sets | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"combinable class, example\"\n  - \"combining sets with combinable [Concurrency Runtime]\"\nms.assetid: 66ffe8e3-6bbb-4e9f-b790-b612922a68a7\ncaps.latest.revision: 14\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"ru-ru\"\n  - \"zh-cn\"\n  - \"zh-tw\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"tr-tr\"\n---\n# How to: Use combinable to Combine Sets\nThis topic shows how to use the [concurrency::combinable](../../parallel/concrt/reference/combinable-class.md) class to compute the set of prime numbers.  \n  \n## Example  \n The following example computes the set of prime numbers two times. Each computation stores the result in a [std::bitset](../../standard-library/bitset-class.md) object. The example first computes the set serially and then computes the set in parallel. The example also prints to the console the time that is required to perform both computations.  \n  \n This example uses the [concurrency::parallel_for](reference/concurrency-namespace-functions.md#parallel_for) algorithm and a `combinable` object to generate thread-local sets. It then uses the [concurrency::combinable::combine_each](reference/combinable-class.md#combine_each) method to combine the thread-local sets into the final set.  \n\n  \n [!code-cpp[concrt-parallel-combine-primes#1](../../parallel/concrt/codesnippet/cpp/how-to-use-combinable-to-combine-sets_1.cpp)]  \n  \n The following sample output is for a computer that has four processors.  \n  \n```Output  \nserial time: 312 ms  \n \nparallel time: 78 ms  \n```  \n  \n## Compiling the Code  \n Copy the example code and paste it in a Visual Studio project, or paste it in a file that is named `parallel-combine-primes.cpp` and then run the following command in a Visual Studio Command Prompt window.  \n  \n **cl.exe /EHsc parallel-combine-primes.cpp**  \n  \n## See Also  \n [Parallel Containers and Objects](../../parallel/concrt/parallel-containers-and-objects.md)   \n [combinable Class](../../parallel/concrt/reference/combinable-class.md)   \n [combinable::combine_each Method](reference/combinable-class.md#combine_each)\n\n\n"}