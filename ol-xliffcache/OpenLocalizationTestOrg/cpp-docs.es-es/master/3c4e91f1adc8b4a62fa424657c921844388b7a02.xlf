<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="es-es">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-787e512" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3c4e91f1adc8b4a62fa424657c921844388b7a02</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\dotnet\ptr-queryinterface.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">adc4240784d75fcfb3876d19b22e762fe253ecdc</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ba79e9a02a962ebc5bc294a562d12fd6db2a81c3</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>ptr::QueryInterface | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>ptr::QueryInterface</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Queries the owned COM object for an interface and attaches the result to another <ph id="ph1">`com::ptr`</ph>.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`com::ptr`</ph> that will get the interface.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Exceptions</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Internally, <ph id="ph1">`QueryInterface`</ph> is called on the owned COM object and any error <ph id="ph2">`HRESULT`</ph> is converted to an exception by &lt;xref:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR%2A&gt;.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Use this method to create a COM wrapper for a different interface of the COM object owned by the current wrapper.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>This method calls <ph id="ph1">`QueryInterface`</ph> through the owned COM object to request a pointer to a specific interface of the COM object and attaches the returned interface pointer to the passed-in <ph id="ph2">`com::ptr`</ph>.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>This example implements a CLR class that uses a <ph id="ph1">`com::ptr`</ph> to wrap its private member <ph id="ph2">`IXMLDOMDocument`</ph> object.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`WriteTopLevelNode`</ph> member function uses <ph id="ph2">`QueryInterface`</ph> to fill a local <ph id="ph3">`com::ptr`</ph> with an <ph id="ph4">`IXMLDOMNode`</ph> and then passes the <ph id="ph5">`com::ptr`</ph> (by tracking reference) to a private member function that writes the node's name and text properties to the console.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Requirements</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Header file<ept id="p1">**</ept> <ph id="ph1">\&lt;</ph>msclr\com\ptr.h&gt;</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Namespace<ept id="p1">**</ept> msclr::com</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>ptr Members</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>ptr::GetInterface</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>