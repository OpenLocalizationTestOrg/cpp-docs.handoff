{"nodes":[{"pos":[12,45],"content":"system, _wsystem | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"system, _wsystem | Microsoft Docs","pos":[0,33]}]},{"content":"system, _wsystem","pos":[1091,1107]},{"content":"Executes a command.","pos":[1108,1127]},{"pos":[1135,1395],"content":"[!IMPORTANT]\n This API cannot be used in applications that execute in the [!INCLUDE[wrt](../../atl/reference/includes/wrt_md.md)]. For more information, see [CRT functions not supported with /ZW](http://msdn.microsoft.com/library/windows/apps/jj606124.aspx).","leadings":["","> "],"nodes":[{"content":" This API cannot be used in applications that execute in the [!INCLUDE[wrt](../../atl/reference/includes/wrt_md.md)]. For more information, see [CRT functions not supported with /ZW](http://msdn.microsoft.com/library/windows/apps/jj606124.aspx).","pos":[13,258],"nodes":[{"content":"This API cannot be used in applications that execute in the <ph id=\"ph1\">[!INCLUDE[wrt](../../atl/reference/includes/wrt_md.md)]</ph>.","pos":[1,117],"source":" This API cannot be used in applications that execute in the [!INCLUDE[wrt](../../atl/reference/includes/wrt_md.md)]."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>CRT functions not supported with /ZW<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/apps/jj606124.aspx)</ept>.","pos":[118,245],"source":" For more information, see [CRT functions not supported with /ZW](http://msdn.microsoft.com/library/windows/apps/jj606124.aspx)."}]}]},{"content":"Syntax","pos":[1404,1410]},{"content":"Parameters","pos":[1531,1541]},{"content":"The command to be executed.","pos":[1558,1585]},{"content":"Return Value","pos":[1594,1606]},{"content":"If <ph id=\"ph1\">`command`</ph> is <ph id=\"ph2\">`NULL`</ph> and the command interpreter is found, returns a nonzero value.","pos":[1610,1695],"source":"If `command` is `NULL` and the command interpreter is found, returns a nonzero value."},{"content":"If the command interpreter is not found, returns 0 and sets <ph id=\"ph1\">`errno`</ph> to <ph id=\"ph2\">`ENOENT`</ph>.","pos":[1696,1776],"source":" If the command interpreter is not found, returns 0 and sets `errno` to `ENOENT`."},{"content":"If <ph id=\"ph1\">`command`</ph> is not <ph id=\"ph2\">`NULL`</ph>, <ph id=\"ph3\">`system`</ph> returns the value that is returned by the command interpreter.","pos":[1777,1876],"source":" If `command` is not `NULL`, `system` returns the value that is returned by the command interpreter."},{"content":"It returns the value 0 only if the command interpreter returns the value 0.","pos":[1877,1952]},{"content":"A return value of – 1 indicates an error, and <ph id=\"ph1\">`errno`</ph> is set to one of the following values:","pos":[1953,2045],"source":" A return value of – 1 indicates an error, and `errno` is set to one of the following values:"},{"content":"The argument list (which is system-dependent) is too big.","pos":[2063,2120]},{"content":"The command interpreter cannot be found.","pos":[2139,2179]},{"content":"The command-interpreter file cannot be executed because the format is not valid.","pos":[2199,2279]},{"content":"Not enough memory is available to execute command; or available memory has been corrupted; or a non-valid block exists, which indicates that the process that's making the call was not allocated correctly.","pos":[2298,2502]},{"pos":[2509,2675],"content":"See <bpt id=\"p1\">[</bpt>_doserrno, errno, _sys_errlist, and _sys_nerr<ept id=\"p1\">](../../c-runtime-library/errno-doserrno-sys-errlist-and-sys-nerr.md)</ept> for more information about these return codes.","source":"See [_doserrno, errno, _sys_errlist, and _sys_nerr](../../c-runtime-library/errno-doserrno-sys-errlist-and-sys-nerr.md) for more information about these return codes."},{"content":"Remarks","pos":[2684,2691]},{"content":"The <ph id=\"ph1\">`system`</ph> function passes <ph id=\"ph2\">`command`</ph> to the command interpreter, which executes the string as an operating-system command.","pos":[2695,2819],"source":"The `system` function passes `command` to the command interpreter, which executes the string as an operating-system command."},{"content":"uses the <ph id=\"ph1\">`COMSPEC`</ph> and <ph id=\"ph2\">`PATH`</ph> environment variables to locate the command-interpreter file CMD.exe.","pos":[2829,2928],"source":" uses the `COMSPEC` and `PATH` environment variables to locate the command-interpreter file CMD.exe."},{"content":"If <ph id=\"ph1\">`command`</ph> is <ph id=\"ph2\">`NULL`</ph>, the function just checks whether the command interpreter exists.","pos":[2929,3017],"source":" If `command` is `NULL`, the function just checks whether the command interpreter exists."},{"pos":[3024,3128],"content":"You must explicitly flush—by using <ph id=\"ph1\">`fflush`</ph> or <ph id=\"ph2\">`_flushall`</ph>—or close any stream before you call <ph id=\"ph3\">`system`</ph>.","source":"You must explicitly flush—by using `fflush` or `_flushall`—or close any stream before you call `system`."},{"content":"is a wide-character version of <ph id=\"ph1\">`system`</ph>; the <ph id=\"ph2\">`command`</ph> argument to <ph id=\"ph3\">`_wsystem`</ph> is a wide-character string.","pos":[3146,3251],"source":" is a wide-character version of `system`; the `command` argument to `_wsystem` is a wide-character string."},{"content":"These functions behave identically otherwise.","pos":[3252,3297]},{"content":"Generic-Text Routine Mappings","pos":[3307,3336]},{"content":"TCHAR.H routine","pos":[3343,3358]},{"content":"_UNICODE &amp; _MBCS not defined","pos":[3359,3387],"source":"_UNICODE & _MBCS not defined"},{"content":"_MBCS defined","pos":[3388,3401]},{"content":"_UNICODE defined","pos":[3402,3418]},{"content":"Requirements","pos":[3580,3592]},{"content":"Routine","pos":[3599,3606]},{"content":"Required header","pos":[3607,3622]},{"content":"process.h&gt; or <ph id=\"ph1\">\\&lt;</ph>stdlib.h&gt;","pos":[3678,3703],"source":"process.h> or \\<stdlib.h>"},{"content":"process.h&gt; or <ph id=\"ph1\">\\&lt;</ph>stdlib.h&gt; or <ph id=\"ph2\">\\&lt;</ph>wchar.h&gt;","pos":[3721,3760],"source":"process.h> or \\<stdlib.h> or \\<wchar.h>"},{"pos":[3768,3872],"content":"For additional compatibility information, see <bpt id=\"p1\">[</bpt>Compatibility<ept id=\"p1\">](../../c-runtime-library/compatibility.md)</ept>.","source":"For additional compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md)."},{"content":"Example","pos":[3881,3888]},{"pos":[3892,3939],"content":"This example uses <ph id=\"ph1\">`system`</ph> to TYPE a text file.","source":"This example uses `system` to TYPE a text file."},{"content":"Input: crt_system.txt","pos":[4075,4096]},{"content":"Output","pos":[4145,4151]},{"content":".NET Framework Equivalent","pos":[4199,4224]},{"content":"System::Diagnostics::ProcessStartInfo Class","pos":[4235,4278]},{"content":"System::Diagnostics::Process Class","pos":[4373,4407]},{"content":"See Also","pos":[4491,4499]},{"content":"Process and Environment Control","pos":[4504,4535]},{"content":"_exec, _wexec Functions","pos":[4602,4625]},{"content":"exit, _Exit, _exit","pos":[4681,4699]},{"content":"_flushall","pos":[4759,4768]},{"content":"_spawn, _wspawn Functions","pos":[4822,4847]}],"content":"---\ntitle: \"system, _wsystem | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\napiname: \n  - \"system\"\n  - \"_wsystem\"\napilocation: \n  - \"msvcrt.dll\"\n  - \"msvcr80.dll\"\n  - \"msvcr90.dll\"\n  - \"msvcr100.dll\"\n  - \"msvcr100_clr0400.dll\"\n  - \"msvcr110.dll\"\n  - \"msvcr110_clr0400.dll\"\n  - \"msvcr120.dll\"\n  - \"msvcr120_clr0400.dll\"\n  - \"ucrtbase.dll\"\n  - \"api-ms-win-crt-runtime-l1-1-0.dll\"\napitype: \"DLLExport\"\nf1_keywords: \n  - \"_tsystem\"\n  - \"_wsystem\"\ndev_langs: \n  - \"C++\"\n  - \"C\"\nhelpviewer_keywords: \n  - \"_wsystem function\"\n  - \"wsystem function\"\n  - \"tsystem function\"\n  - \"_tsystem function\"\n  - \"system function\"\n  - \"commands, executing\"\n  - \"command interpreter\"\nms.assetid: 7d3df2b6-f742-49ce-bf52-012b0aee3df5\ncaps.latest.revision: 17\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# system, _wsystem\nExecutes a command.  \n  \n> [!IMPORTANT]\n>  This API cannot be used in applications that execute in the [!INCLUDE[wrt](../../atl/reference/includes/wrt_md.md)]. For more information, see [CRT functions not supported with /ZW](http://msdn.microsoft.com/library/windows/apps/jj606124.aspx).  \n  \n## Syntax  \n  \n```  \nint system(  \n   const char *command   \n);  \nint _wsystem(  \n   const wchar_t *command   \n);  \n```  \n  \n#### Parameters  \n `command`  \n The command to be executed.  \n  \n## Return Value  \n If `command` is `NULL` and the command interpreter is found, returns a nonzero value. If the command interpreter is not found, returns 0 and sets `errno` to `ENOENT`. If `command` is not `NULL`, `system` returns the value that is returned by the command interpreter. It returns the value 0 only if the command interpreter returns the value 0. A return value of – 1 indicates an error, and `errno` is set to one of the following values:  \n  \n `E2BIG`  \n The argument list (which is system-dependent) is too big.  \n  \n `ENOENT`  \n The command interpreter cannot be found.  \n  \n `ENOEXEC`  \n The command-interpreter file cannot be executed because the format is not valid.  \n  \n `ENOMEM`  \n Not enough memory is available to execute command; or available memory has been corrupted; or a non-valid block exists, which indicates that the process that's making the call was not allocated correctly.  \n  \n See [_doserrno, errno, _sys_errlist, and _sys_nerr](../../c-runtime-library/errno-doserrno-sys-errlist-and-sys-nerr.md) for more information about these return codes.  \n  \n## Remarks  \n The `system` function passes `command` to the command interpreter, which executes the string as an operating-system command. `system` uses the `COMSPEC` and `PATH` environment variables to locate the command-interpreter file CMD.exe. If `command` is `NULL`, the function just checks whether the command interpreter exists.  \n  \n You must explicitly flush—by using `fflush` or `_flushall`—or close any stream before you call `system`.  \n  \n `_wsystem` is a wide-character version of `system`; the `command` argument to `_wsystem` is a wide-character string. These functions behave identically otherwise.  \n  \n### Generic-Text Routine Mappings  \n  \n|TCHAR.H routine|_UNICODE & _MBCS not defined|_MBCS defined|_UNICODE defined|  \n|---------------------|------------------------------------|--------------------|-----------------------|  \n|`_tsystem`|`system`|`system`|`_wsystem`|  \n  \n## Requirements  \n  \n|Routine|Required header|  \n|-------------|---------------------|  \n|`system`|\\<process.h> or \\<stdlib.h>|  \n|`_wsystem`|\\<process.h> or \\<stdlib.h> or \\<wchar.h>|  \n  \n For additional compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md).  \n  \n## Example  \n This example uses `system` to TYPE a text file.  \n  \n```  \n// crt_system.c  \n  \n#include <process.h>  \n  \nint main( void )  \n{  \n   system( \"type crt_system.txt\" );  \n}  \n```  \n  \n## Input: crt_system.txt  \n  \n```  \nLine one.  \nLine two.  \n```  \n  \n### Output  \n  \n```  \nLine one.  \nLine two.  \n```  \n  \n## .NET Framework Equivalent  \n  \n-   [System::Diagnostics::ProcessStartInfo Class](https://msdn.microsoft.com/en-us/library/system.diagnostics.processstartinfo.aspx)  \n  \n-   [System::Diagnostics::Process Class](https://msdn.microsoft.com/en-us/library/system.diagnostics.process.aspx)  \n  \n## See Also  \n [Process and Environment Control](../../c-runtime-library/process-and-environment-control.md)   \n [_exec, _wexec Functions](../../c-runtime-library/exec-wexec-functions.md)   \n [exit, _Exit, _exit](../../c-runtime-library/reference/exit-exit-exit.md)   \n [_flushall](../../c-runtime-library/reference/flushall.md)   \n [_spawn, _wspawn Functions](../../c-runtime-library/spawn-wspawn-functions.md)"}