{"nodes":[{"pos":[12,38],"content":"tmpfile_s | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"tmpfile_s | Microsoft Docs","pos":[0,26]}]},{"content":"tmpfile_s","pos":[993,1002]},{"content":"Creates a temporary file.","pos":[1003,1028]},{"content":"It is a version of <bpt id=\"p1\">[</bpt>tmpfile<ept id=\"p1\">](../../c-runtime-library/reference/tmpfile.md)</ept> with security enhancements as described in <bpt id=\"p2\">[</bpt>Security Features in the CRT<ept id=\"p2\">](../../c-runtime-library/security-features-in-the-crt.md)</ept>.","pos":[1029,1235],"source":" It is a version of [tmpfile](../../c-runtime-library/reference/tmpfile.md) with security enhancements as described in [Security Features in the CRT](../../c-runtime-library/security-features-in-the-crt.md)."},{"content":"Syntax","pos":[1244,1250]},{"content":"Parameters","pos":[1323,1333]},{"content":"[out]","pos":[1337,1342]},{"content":"The address of a pointer to store the address of the generated pointer to a stream.","pos":[1357,1440]},{"content":"Return Value","pos":[1449,1461]},{"content":"Returns 0 if successful, an error code on failure.","pos":[1465,1515]},{"content":"Error Conditions","pos":[1525,1541]},{"content":"Return Value","pos":[1561,1573]},{"pos":[1578,1589],"content":"Contents of"},{"content":"not changed","pos":[1702,1713]},{"content":"If the above parameter validation error occurs, the invalid parameter handler is invoked, as described in <bpt id=\"p1\">[</bpt>Parameter Validation<ept id=\"p1\">](../../c-runtime-library/parameter-validation.md)</ept>.","pos":[1721,1899],"source":"If the above parameter validation error occurs, the invalid parameter handler is invoked, as described in [Parameter Validation](../../c-runtime-library/parameter-validation.md)."},{"content":"If execution is allowed to continue, <ph id=\"ph1\">`errno`</ph> is set to <ph id=\"ph2\">`EINVAL`</ph> and the return value is <ph id=\"ph3\">`EINVAL`</ph>.","pos":[1900,1997],"source":" If execution is allowed to continue, `errno` is set to `EINVAL` and the return value is `EINVAL`."},{"content":"Remarks","pos":[2006,2013]},{"content":"The <ph id=\"ph1\">`tmpfile_s`</ph> function creates a temporary file and puts a pointer to that stream in the <ph id=\"ph2\">`pFilePtr`</ph> argument.","pos":[2017,2128],"source":"The `tmpfile_s` function creates a temporary file and puts a pointer to that stream in the `pFilePtr` argument."},{"content":"The temporary file is created in the root directory.","pos":[2129,2181]},{"content":"To create a temporary file in a directory other than the root, use <bpt id=\"p1\">[</bpt>tmpnam_s<ept id=\"p1\">](../../c-runtime-library/reference/tmpnam-s-wtmpnam-s.md)</ept> or <bpt id=\"p2\">[</bpt>tempnam<ept id=\"p2\">](../../c-runtime-library/reference/tempnam-wtempnam-tmpnam-wtmpnam.md)</ept> in conjunction with <bpt id=\"p3\">[</bpt>fopen<ept id=\"p3\">](../../c-runtime-library/reference/fopen-wfopen.md)</ept>.","pos":[2182,2479],"source":" To create a temporary file in a directory other than the root, use [tmpnam_s](../../c-runtime-library/reference/tmpnam-s-wtmpnam-s.md) or [tempnam](../../c-runtime-library/reference/tempnam-wtempnam-tmpnam-wtmpnam.md) in conjunction with [fopen](../../c-runtime-library/reference/fopen-wfopen.md)."},{"content":"If the file cannot be opened, <ph id=\"ph1\">`tmpfile_s`</ph> writes <ph id=\"ph2\">`NULL`</ph> to the <ph id=\"ph3\">`pFilePtr`</ph> parameter.","pos":[2486,2570],"source":"If the file cannot be opened, `tmpfile_s` writes `NULL` to the `pFilePtr` parameter."},{"content":"This temporary file is automatically deleted when the file is closed, when the program terminates normally, or when <ph id=\"ph1\">`_rmtmp`</ph> is called, assuming that the current working directory does not change.","pos":[2571,2767],"source":" This temporary file is automatically deleted when the file is closed, when the program terminates normally, or when `_rmtmp` is called, assuming that the current working directory does not change."},{"content":"The temporary file is opened in <ph id=\"ph1\">`w+b`</ph> (binary read/write) mode.","pos":[2768,2831],"source":" The temporary file is opened in `w+b` (binary read/write) mode."},{"pos":[2838,2917],"content":"Failure can occur if you attempt more than <ph id=\"ph1\">`TMP_MAX_S`</ph> (see STDIO.H) calls with","source":"Failure can occur if you attempt more than `TMP_MAX_S` (see STDIO.H) calls with "},{"content":"Requirements","pos":[2939,2951]},{"content":"Routine","pos":[2958,2965]},{"content":"Required header","pos":[2966,2981]},{"content":"stdio.h&gt;","pos":[3040,3048],"source":"stdio.h>"},{"pos":[3056,3180],"content":"For additional compatibility information, see <bpt id=\"p1\">[</bpt>Compatibility<ept id=\"p1\">](../../c-runtime-library/compatibility.md)</ept> in the Introduction.","source":"For additional compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md) in the Introduction."},{"content":"Example","pos":[3189,3196]},{"pos":[3204,3287],"content":"[!NOTE]\n This example requires administrative privileges to run on Windows Vista.","leadings":["","> "],"nodes":[{"content":"This example requires administrative privileges to run on Windows Vista.","pos":[9,81]}]},{"content":".NET Framework Equivalent","pos":[4090,4115]},{"content":"Not applicable.","pos":[4119,4134]},{"content":"To call the standard C function, use <ph id=\"ph1\">`PInvoke`</ph>.","pos":[4135,4182],"source":" To call the standard C function, use `PInvoke`."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Platform Invoke Examples<ept id=\"p1\">](http://msdn.microsoft.com/Library/15926806-f0b7-487e-93a6-4e9367ec689f)</ept>.","pos":[4183,4308],"source":" For more information, see [Platform Invoke Examples](http://msdn.microsoft.com/Library/15926806-f0b7-487e-93a6-4e9367ec689f)."},{"content":"See Also","pos":[4317,4325]},{"content":"Stream I/O","pos":[4330,4340]},{"content":"_rmtmp","pos":[4386,4392]},{"content":"_tempnam, _wtempnam, tmpnam, _wtmpnam","pos":[4443,4480]}],"content":"---\ntitle: \"tmpfile_s | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\napiname: \n  - \"tmpfile_s\"\napilocation: \n  - \"msvcrt.dll\"\n  - \"msvcr80.dll\"\n  - \"msvcr90.dll\"\n  - \"msvcr100.dll\"\n  - \"msvcr100_clr0400.dll\"\n  - \"msvcr110.dll\"\n  - \"msvcr110_clr0400.dll\"\n  - \"msvcr120.dll\"\n  - \"msvcr120_clr0400.dll\"\n  - \"ucrtbase.dll\"\n  - \"api-ms-win-crt-stdio-l1-1-0.dll\"\napitype: \"DLLExport\"\nf1_keywords: \n  - \"tmpfile_s\"\ndev_langs: \n  - \"C++\"\n  - \"C\"\nhelpviewer_keywords: \n  - \"temporary files\"\n  - \"tmpfile_s function\"\n  - \"temporary files, creating\"\nms.assetid: 50879c69-215e-425a-a2a3-8b5467121eae\ncaps.latest.revision: 20\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"ru-ru\"\n  - \"zh-cn\"\n  - \"zh-tw\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"tr-tr\"\n---\n# tmpfile_s\nCreates a temporary file. It is a version of [tmpfile](../../c-runtime-library/reference/tmpfile.md) with security enhancements as described in [Security Features in the CRT](../../c-runtime-library/security-features-in-the-crt.md).  \n  \n## Syntax  \n  \n```  \nerrno_t tmpfile_s(  \n   FILE** pFilePtr  \n);  \n```  \n  \n#### Parameters  \n [out] `pFilePtr`  \n The address of a pointer to store the address of the generated pointer to a stream.  \n  \n## Return Value  \n Returns 0 if successful, an error code on failure.  \n  \n### Error Conditions  \n  \n|`pFilePtr`|**Return Value**|**Contents of**  `pFilePtr`|  \n|----------------|----------------------|---------------------------------|  \n|`NULL`|`EINVAL`|not changed|  \n  \n If the above parameter validation error occurs, the invalid parameter handler is invoked, as described in [Parameter Validation](../../c-runtime-library/parameter-validation.md). If execution is allowed to continue, `errno` is set to `EINVAL` and the return value is `EINVAL`.  \n  \n## Remarks  \n The `tmpfile_s` function creates a temporary file and puts a pointer to that stream in the `pFilePtr` argument. The temporary file is created in the root directory. To create a temporary file in a directory other than the root, use [tmpnam_s](../../c-runtime-library/reference/tmpnam-s-wtmpnam-s.md) or [tempnam](../../c-runtime-library/reference/tempnam-wtempnam-tmpnam-wtmpnam.md) in conjunction with [fopen](../../c-runtime-library/reference/fopen-wfopen.md).  \n  \n If the file cannot be opened, `tmpfile_s` writes `NULL` to the `pFilePtr` parameter. This temporary file is automatically deleted when the file is closed, when the program terminates normally, or when `_rmtmp` is called, assuming that the current working directory does not change. The temporary file is opened in `w+b` (binary read/write) mode.  \n  \n Failure can occur if you attempt more than `TMP_MAX_S` (see STDIO.H) calls with `tmpfile_s.`  \n  \n## Requirements  \n  \n|Routine|Required header|  \n|-------------|---------------------|  \n|`tmpfile_s`|\\<stdio.h>|  \n  \n For additional compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md) in the Introduction.  \n  \n## Example  \n  \n> [!NOTE]\n>  This example requires administrative privileges to run on Windows Vista.  \n  \n```  \n// crt_tmpfile_s.c  \n// This program uses tmpfile_s to create a  \n// temporary file, then deletes this file with _rmtmp.  \n//  \n  \n#include <stdio.h>  \n  \nint main( void )  \n{  \n   FILE *stream;  \n   char tempstring[] = \"String to be written\";  \n   int  i;  \n   errno_t err;  \n  \n   // Create temporary files.  \n   for( i = 1; i <= 3; i++ )  \n   {  \n      err = tmpfile_s(&stream);  \n      if( err )  \n         perror( \"Could not open new temporary file\\n\" );  \n      else  \n         printf( \"Temporary file %d was created\\n\", i );  \n   }  \n  \n   // Remove temporary files.  \n   printf( \"%d temporary files deleted\\n\", _rmtmp() );  \n}  \n```  \n  \n```Output  \nTemporary file 1 was created  \nTemporary file 2 was created  \nTemporary file 3 was created  \n3 temporary files deleted  \n```  \n  \n## .NET Framework Equivalent  \n Not applicable. To call the standard C function, use `PInvoke`. For more information, see [Platform Invoke Examples](http://msdn.microsoft.com/Library/15926806-f0b7-487e-93a6-4e9367ec689f).  \n  \n## See Also  \n [Stream I/O](../../c-runtime-library/stream-i-o.md)   \n [_rmtmp](../../c-runtime-library/reference/rmtmp.md)   \n [_tempnam, _wtempnam, tmpnam, _wtmpnam](../../c-runtime-library/reference/tempnam-wtempnam-tmpnam-wtmpnam.md)"}