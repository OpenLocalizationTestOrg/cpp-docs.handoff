{"nodes":[{"pos":[12,48],"content":"break Statement (C) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"break Statement (C) | Microsoft Docs","pos":[0,36]}]},{"content":"break Statement (C)","pos":[608,627]},{"content":"The <ph id=\"ph1\">`break`</ph> statement terminates the execution of the nearest enclosing <ph id=\"ph2\">`do`</ph>, <ph id=\"ph3\">`for`</ph>, <ph id=\"ph4\">`switch`</ph>, or <ph id=\"ph5\">`while`</ph> statement in which it appears.","pos":[628,764],"source":"The `break` statement terminates the execution of the nearest enclosing `do`, `for`, `switch`, or `while` statement in which it appears."},{"content":"Control passes to the statement that follows the terminated statement.","pos":[765,835]},{"content":"Syntax","pos":[844,850]},{"content":"<bpt id=\"p1\">*</bpt>jump-statement<ept id=\"p1\">*</ept>:","pos":[854,871],"source":"*jump-statement*:"},{"content":"The <ph id=\"ph1\">`break`</ph> statement is frequently used to terminate the processing of a particular case within a <ph id=\"ph2\">`switch`</ph> statement.","pos":[890,1008],"source":"The `break` statement is frequently used to terminate the processing of a particular case within a `switch` statement."},{"content":"Lack of an enclosing iterative or <ph id=\"ph1\">`switch`</ph> statement generates an error.","pos":[1009,1081],"source":" Lack of an enclosing iterative or `switch` statement generates an error."},{"content":"Within nested statements, the <ph id=\"ph1\">`break`</ph> statement terminates only the <ph id=\"ph2\">`do`</ph>, <ph id=\"ph3\">`for`</ph>, <ph id=\"ph4\">`switch`</ph>, or <ph id=\"ph5\">`while`</ph> statement that immediately encloses it.","pos":[1088,1229],"source":"Within nested statements, the `break` statement terminates only the `do`, `for`, `switch`, or `while` statement that immediately encloses it."},{"content":"You can use a <ph id=\"ph1\">`return`</ph> or <ph id=\"ph2\">`goto`</ph> statement to transfer control elsewhere out of the nested structure.","pos":[1230,1331],"source":" You can use a `return` or `goto` statement to transfer control elsewhere out of the nested structure."},{"pos":[1338,1385],"content":"This example illustrates the <ph id=\"ph1\">`break`</ph> statement:","source":"This example illustrates the `break` statement:"},{"content":"See Also","pos":[1684,1692]},{"content":"break Statement","pos":[1697,1712]}],"content":"---\ntitle: \"break Statement (C) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"break\"\ndev_langs: \n  - \"C++\"\n  - \"C\"\nhelpviewer_keywords: \n  - \"break keyword [C]\"\nms.assetid: 015627c7-0924-49b2-a4d1-c77edf5eae6a\ncaps.latest.revision: 8\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# break Statement (C)\nThe `break` statement terminates the execution of the nearest enclosing `do`, `for`, `switch`, or `while` statement in which it appears. Control passes to the statement that follows the terminated statement.  \n  \n## Syntax  \n *jump-statement*:  \n `break;`  \n  \n The `break` statement is frequently used to terminate the processing of a particular case within a `switch` statement. Lack of an enclosing iterative or `switch` statement generates an error.  \n  \n Within nested statements, the `break` statement terminates only the `do`, `for`, `switch`, or `while` statement that immediately encloses it. You can use a `return` or `goto` statement to transfer control elsewhere out of the nested structure.  \n  \n This example illustrates the `break` statement:  \n  \n```  \n#include <stdio.h>  \nint main() {  \n   char c;  \n   for(;;) {  \n      printf_s( \"\\nPress any key, Q to quit: \" );  \n  \n      // Convert to character value  \n      scanf_s(\"%c\", &c);  \n      if (c == 'Q')  \n          break;  \n   }  \n} // Loop exits only when 'Q' is pressed  \n```  \n  \n## See Also  \n [break Statement](../cpp/break-statement-cpp.md)"}