{"nodes":[{"pos":[12,46],"content":"mbtowc, _mbtowc_l | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"mbtowc, _mbtowc_l | Microsoft Docs","pos":[0,34]}]},{"pos":[1021,1038],"content":"mbtowc, _mbtowc_l","linkify":"mbtowc, _mbtowc_l","nodes":[{"content":"mbtowc, _mbtowc_l","pos":[0,17]}]},{"content":"Convert a multibyte character to a corresponding wide character.","pos":[1039,1103]},{"pos":[1112,1118],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[1337,1347],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"<bpt id=\"p1\">*</bpt>wchar<ept id=\"p1\">*</ept>","pos":[1351,1358],"source":"*wchar*"},{"content":"Address of a wide character (type <ph id=\"ph1\">`wchar_t`</ph>).","pos":[1362,1407],"source":" Address of a wide character (type `wchar_t`)."},{"content":"Address of a sequence of bytes (a multibyte character).","pos":[1426,1481]},{"content":"<bpt id=\"p1\">*</bpt>count<ept id=\"p1\">*</ept>","pos":[1488,1495],"source":"*count*"},{"content":"Number of bytes to check.","pos":[1499,1524]},{"content":"<bpt id=\"p1\">*</bpt>locale<ept id=\"p1\">*</ept>","pos":[1531,1539],"source":"*locale*"},{"content":"The locale to use.","pos":[1543,1561]},{"pos":[1570,1582],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"If <bpt id=\"p1\">**</bpt>mbchar<ept id=\"p1\">**</ept> is not <bpt id=\"p2\">**</bpt>NULL<ept id=\"p2\">**</ept> and if the object that <ph id=\"ph1\">`mbchar`</ph> points to forms a valid multibyte character, <ph id=\"ph2\">`mbtowc`</ph> returns the length in bytes of the multibyte character.","pos":[1586,1757],"source":"If **mbchar** is not **NULL** and if the object that `mbchar` points to forms a valid multibyte character, `mbtowc` returns the length in bytes of the multibyte character."},{"content":"If <ph id=\"ph1\">`mbchar`</ph> is <bpt id=\"p1\">**</bpt>NULL<ept id=\"p1\">**</ept> or the object that it points to is a wide-character null character (L'\\0'), the function returns 0.","pos":[1758,1881],"source":" If `mbchar` is **NULL** or the object that it points to is a wide-character null character (L'\\0'), the function returns 0."},{"content":"If the object that <ph id=\"ph1\">`mbchar`</ph> points to does not form a valid multibyte character within the first <bpt id=\"p1\">*</bpt>count<ept id=\"p1\">*</ept> characters, it returns –1.","pos":[1882,2013],"source":" If the object that `mbchar` points to does not form a valid multibyte character within the first *count* characters, it returns –1."},{"pos":[2022,2029],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The <ph id=\"ph1\">`mbtowc`</ph> function converts <bpt id=\"p1\">*</bpt>count<ept id=\"p1\">*</ept> or fewer bytes pointed to by <ph id=\"ph2\">`mbchar`</ph>, if <ph id=\"ph3\">`mbchar`</ph> is not <bpt id=\"p2\">**</bpt>NULL<ept id=\"p2\">**</ept>, to a corresponding wide character.","pos":[2033,2174],"source":"The `mbtowc` function converts *count* or fewer bytes pointed to by `mbchar`, if `mbchar` is not **NULL**, to a corresponding wide character."},{"content":"<ph id=\"ph1\">`mbtowc`</ph> stores the resulting wide character at <bpt id=\"p1\">*</bpt>wchar,<ept id=\"p1\">*</ept> if <bpt id=\"p2\">*</bpt>wchar<ept id=\"p2\">*</ept> is not <bpt id=\"p3\">**</bpt>NULL<ept id=\"p3\">**</ept>.","pos":[2175,2259],"source":"`mbtowc` stores the resulting wide character at *wchar,* if *wchar* is not **NULL**."},{"content":"<ph id=\"ph1\">`mbtowc`</ph> does not examine more than <ph id=\"ph2\">`MB_CUR_MAX`</ph> bytes.","pos":[2260,2315],"source":"`mbtowc` does not examine more than `MB_CUR_MAX` bytes."},{"content":"<ph id=\"ph1\">`mbtowc`</ph> uses the current locale for locale-dependent behavior; <ph id=\"ph2\">`_mbtowc_l`</ph> is identical except that it uses the locale passed in instead.","pos":[2316,2454],"source":"`mbtowc` uses the current locale for locale-dependent behavior; `_mbtowc_l` is identical except that it uses the locale passed in instead."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Locale<ept id=\"p1\">](../../c-runtime-library/locale.md)</ept>.","pos":[2455,2525],"source":" For more information, see [Locale](../../c-runtime-library/locale.md)."},{"pos":[2534,2546],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"content":"Routine","pos":[2553,2560]},{"content":"Required header","pos":[2561,2576]},{"content":"<ph id=\"ph1\">\\&lt;</ph>stdlib.h&gt;","pos":[2630,2641],"source":"\\<stdlib.h>"},{"pos":[2646,2659],"content":"<bpt id=\"p1\">**</bpt>_mbtowc_l<ept id=\"p1\">**</ept>","source":"**_mbtowc_l**"},{"content":"<ph id=\"ph1\">\\&lt;</ph>stdlib.h&gt;","pos":[2660,2671],"source":"\\<stdlib.h>"},{"pos":[2679,2803],"content":"For additional compatibility information, see <bpt id=\"p1\">[</bpt>Compatibility<ept id=\"p1\">](../../c-runtime-library/compatibility.md)</ept> in the Introduction.","source":"For additional compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md) in the Introduction."},{"pos":[2812,2821],"content":"Libraries","linkify":"Libraries","nodes":[{"content":"Libraries","pos":[0,9]}]},{"pos":[2825,2917],"content":"All versions of the <bpt id=\"p1\">[</bpt>C run-time libraries<ept id=\"p1\">](../../c-runtime-library/crt-library-features.md)</ept>.","source":"All versions of the [C run-time libraries](../../c-runtime-library/crt-library-features.md)."},{"pos":[2926,2933],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[4217,4223],"content":"Output","linkify":"Output","nodes":[{"content":"Output","pos":[0,6]}]},{"pos":[4674,4699],"content":".NET Framework Equivalent","linkify":".NET Framework Equivalent","nodes":[{"content":".NET Framework Equivalent","pos":[0,25]}]},{"content":"Not applicable.","pos":[4703,4718]},{"content":"To call the standard C function, use <ph id=\"ph1\">`PInvoke`</ph>.","pos":[4719,4766],"source":" To call the standard C function, use `PInvoke`."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Platform Invoke Examples<ept id=\"p1\">](http://msdn.microsoft.com/Library/15926806-f0b7-487e-93a6-4e9367ec689f)</ept>.","pos":[4767,4892],"source":" For more information, see [Platform Invoke Examples](http://msdn.microsoft.com/Library/15926806-f0b7-487e-93a6-4e9367ec689f)."},{"pos":[4901,4909],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Data Conversion<ept id=\"p1\">](../../c-runtime-library/data-conversion.md)</ept><ph id=\"ph1\"> </ph>","pos":[4913,4975],"source":"[Data Conversion](../../c-runtime-library/data-conversion.md) "},{"content":"<bpt id=\"p1\"> [</bpt>MultiByteToWideChar<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/dd319072)</ept><ph id=\"ph1\"> </ph>","pos":[4978,5061],"source":" [MultiByteToWideChar](http://msdn.microsoft.com/library/windows/desktop/dd319072) "},{"content":"<bpt id=\"p1\"> [</bpt>Locale<ept id=\"p1\">](../../c-runtime-library/locale.md)</ept><ph id=\"ph1\"> </ph>","pos":[5064,5109],"source":" [Locale](../../c-runtime-library/locale.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Interpretation of Multibyte-Character Sequences<ept id=\"p1\">](../../c-runtime-library/interpretation-of-multibyte-character-sequences.md)</ept><ph id=\"ph1\"> </ph>","pos":[5112,5239],"source":" [Interpretation of Multibyte-Character Sequences](../../c-runtime-library/interpretation-of-multibyte-character-sequences.md) "},{"content":"<bpt id=\"p1\"> [</bpt>_mbclen, mblen, _mblen_l<ept id=\"p1\">](../../c-runtime-library/reference/mbclen-mblen-mblen-l.md)</ept><ph id=\"ph1\"> </ph>","pos":[5242,5329],"source":" [_mbclen, mblen, _mblen_l](../../c-runtime-library/reference/mbclen-mblen-mblen-l.md) "},{"content":"<bpt id=\"p1\"> [</bpt>wcstombs, _wcstombs_l<ept id=\"p1\">](../../c-runtime-library/reference/wcstombs-wcstombs-l.md)</ept><ph id=\"ph1\"> </ph>","pos":[5332,5415],"source":" [wcstombs, _wcstombs_l](../../c-runtime-library/reference/wcstombs-wcstombs-l.md) "},{"content":"<bpt id=\"p1\"> [</bpt>wctomb, _wctomb_l<ept id=\"p1\">](../../c-runtime-library/reference/wctomb-wctomb-l.md)</ept>","pos":[5418,5492],"source":" [wctomb, _wctomb_l](../../c-runtime-library/reference/wctomb-wctomb-l.md)"}],"content":"---\ntitle: \"mbtowc, _mbtowc_l | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\napiname: \n  - \"mbtowc\"\n  - \"_mbtowc_l\"\napilocation: \n  - \"msvcrt.dll\"\n  - \"msvcr80.dll\"\n  - \"msvcr90.dll\"\n  - \"msvcr100.dll\"\n  - \"msvcr100_clr0400.dll\"\n  - \"msvcr110.dll\"\n  - \"msvcr110_clr0400.dll\"\n  - \"msvcr120.dll\"\n  - \"msvcr120_clr0400.dll\"\n  - \"ucrtbase.dll\"\n  - \"api-ms-win-crt-convert-l1-1-0.dll\"\n  - \"api-ms-win-crt-multibyte-l1-1-0.dll\"\napitype: \"DLLExport\"\nf1_keywords: \n  - \"mbtowc\"\ndev_langs: \n  - \"C++\"\n  - \"C\"\nhelpviewer_keywords: \n  - \"mbtowc function\"\n  - \"_mbtowc_l function\"\n  - \"mbtowc_l function\"\nms.assetid: dfd1c8a7-e73a-4307-9353-53b70b45d4d1\ncaps.latest.revision: 16\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# mbtowc, _mbtowc_l\nConvert a multibyte character to a corresponding wide character.  \n  \n## Syntax  \n  \n```  \nint mbtowc(  \n   wchar_t *wchar,  \n   const char *mbchar,  \n   size_t count   \n);  \nint _mbtowc_l(  \n   wchar_t *wchar,  \n   const char *mbchar,  \n   size_t count,  \n   _locale_t locale  \n);  \n```  \n  \n#### Parameters  \n *wchar*  \n Address of a wide character (type `wchar_t`).  \n  \n `mbchar`  \n Address of a sequence of bytes (a multibyte character).  \n  \n *count*  \n Number of bytes to check.  \n  \n *locale*  \n The locale to use.  \n  \n## Return Value  \n If **mbchar** is not **NULL** and if the object that `mbchar` points to forms a valid multibyte character, `mbtowc` returns the length in bytes of the multibyte character. If `mbchar` is **NULL** or the object that it points to is a wide-character null character (L'\\0'), the function returns 0. If the object that `mbchar` points to does not form a valid multibyte character within the first *count* characters, it returns –1.  \n  \n## Remarks  \n The `mbtowc` function converts *count* or fewer bytes pointed to by `mbchar`, if `mbchar` is not **NULL**, to a corresponding wide character. `mbtowc` stores the resulting wide character at *wchar,* if *wchar* is not **NULL**. `mbtowc` does not examine more than `MB_CUR_MAX` bytes. `mbtowc` uses the current locale for locale-dependent behavior; `_mbtowc_l` is identical except that it uses the locale passed in instead. For more information, see [Locale](../../c-runtime-library/locale.md).  \n  \n## Requirements  \n  \n|Routine|Required header|  \n|-------------|---------------------|  \n|`mbtowc`|\\<stdlib.h>|  \n|**_mbtowc_l**|\\<stdlib.h>|  \n  \n For additional compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md) in the Introduction.  \n  \n## Libraries  \n All versions of the [C run-time libraries](../../c-runtime-library/crt-library-features.md).  \n  \n## Example  \n  \n```  \n// crt_mbtowc.c  \n/* Illustrates the behavior of the mbtowc function  \n */  \n  \n#include <stdlib.h>  \n#include <stdio.h>  \n  \nint main( void )  \n{  \n    int      i;  \n    char    *pmbc    = (char *)malloc( sizeof( char ) );  \n    wchar_t  wc      = L'a';  \n    wchar_t *pwcnull = NULL;  \n    wchar_t *pwc     = (wchar_t *)malloc( sizeof( wchar_t ) );  \n    printf( \"Convert a wide character to multibyte character:\\n\" );  \n    wctomb_s( &i, pmbc, sizeof(char), wc );  \n    printf( \"  Characters converted: %u\\n\", i );  \n    printf( \"  Multibyte character: %x\\n\\n\", *pmbc );  \n  \n    printf( \"Convert multibyte character back to a wide \"  \n            \"character:\\n\" );  \n    i = mbtowc( pwc, pmbc, MB_CUR_MAX );  \n    printf( \"  Bytes converted: %u\\n\", i );  \n    printf( \"  Wide character: %x\\n\\n\", *pwc );  \n    printf( \"Attempt to convert when target is NULL\\n\" );  \n    printf( \"  returns the length of the multibyte character:\\n\" );  \n    i = mbtowc( pwcnull, pmbc, MB_CUR_MAX );  \n    printf( \"  Length of multibyte character: %u\\n\\n\", i );  \n  \n    printf( \"Attempt to convert a NULL pointer to a\" );  \n    printf( \" wide character:\\n\" );  \n    pmbc = NULL;  \n    i = mbtowc( pwc, pmbc, MB_CUR_MAX );  \n    printf( \"  Bytes converted: %u\\n\", i );  \n}  \n```  \n  \n## Output  \n  \n```  \nConvert a wide character to multibyte character:  \n  Characters converted: 1  \n  Multibyte character: 61  \n  \nConvert multibyte character back to a wide character:  \n  Bytes converted: 1  \n  Wide character: 61  \n  \nAttempt to convert when target is NULL  \n  returns the length of the multibyte character:  \n  Length of multibyte character: 1  \n  \nAttempt to convert a NULL pointer to a wide character:  \n  Bytes converted: 0  \n```  \n  \n## .NET Framework Equivalent  \n Not applicable. To call the standard C function, use `PInvoke`. For more information, see [Platform Invoke Examples](http://msdn.microsoft.com/Library/15926806-f0b7-487e-93a6-4e9367ec689f).  \n  \n## See Also  \n [Data Conversion](../../c-runtime-library/data-conversion.md)   \n [MultiByteToWideChar](http://msdn.microsoft.com/library/windows/desktop/dd319072)   \n [Locale](../../c-runtime-library/locale.md)   \n [Interpretation of Multibyte-Character Sequences](../../c-runtime-library/interpretation-of-multibyte-character-sequences.md)   \n [_mbclen, mblen, _mblen_l](../../c-runtime-library/reference/mbclen-mblen-mblen-l.md)   \n [wcstombs, _wcstombs_l](../../c-runtime-library/reference/wcstombs-wcstombs-l.md)   \n [wctomb, _wctomb_l](../../c-runtime-library/reference/wctomb-wctomb-l.md)"}