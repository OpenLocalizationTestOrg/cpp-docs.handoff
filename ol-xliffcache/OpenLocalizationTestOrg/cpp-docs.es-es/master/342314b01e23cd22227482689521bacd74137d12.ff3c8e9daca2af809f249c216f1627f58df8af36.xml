{"nodes":[{"pos":[12,52],"content":"Summary of Declarations | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Summary of Declarations | Microsoft Docs","pos":[0,40]}]},{"content":"Summary of Declarations","pos":[541,564]},{"content":":","pos":[578,579]},{"content":"<bpt id=\"p1\"> *</bpt>declaration-specifiers attribute-seq<ept id=\"p1\">*</ept> opt<bpt id=\"p2\">*</bpt>init-declarator-list<ept id=\"p2\">*</ept>opt<bpt id=\"p3\">**</bpt>;<ept id=\"p3\">**</ept>","pos":[582,655],"source":" *declaration-specifiers attribute-seq* opt*init-declarator-list*opt**;**"},{"pos":[666,706],"content":"<bpt id=\"p1\">*</bpt>attribute-seq<ept id=\"p1\">*</ept> is Microsoft Specific */","source":"*attribute-seq* is Microsoft Specific */"},{"content":"<bpt id=\"p1\">*</bpt>declaration-specifiers<ept id=\"p1\">*</ept>:","pos":[713,738],"source":"*declaration-specifiers*:"},{"content":"<bpt id=\"p1\"> *</bpt>storage-class-specifier declaration-specifiers<ept id=\"p1\">*</ept>opt","pos":[741,793],"source":" *storage-class-specifier declaration-specifiers*opt"},{"pos":[800,842],"content":"<bpt id=\"p1\">*</bpt>type-specifier declaration-specifiers<ept id=\"p1\">*</ept>opt","source":"*type-specifier declaration-specifiers*opt"},{"pos":[849,891],"content":"<bpt id=\"p1\">*</bpt>type-qualifier declaration-specifiers<ept id=\"p1\">*</ept>opt","source":"*type-qualifier declaration-specifiers*opt"},{"content":"<bpt id=\"p1\">*</bpt>attribute-seq<ept id=\"p1\">*</ept> :            /<ph id=\"ph1\">\\*</ph> <bpt id=\"p2\">*</bpt>attribute-seq<ept id=\"p2\">*</ept> is Microsoft Specific","pos":[898,968],"source":"*attribute-seq* :            /\\* *attribute-seq* is Microsoft Specific "},{"content":"<bpt id=\"p1\"> *</bpt>attribute attribute-seq<ept id=\"p1\">*</ept> opt","pos":[975,1005],"source":" *attribute attribute-seq* opt"},{"pos":[1012,1059],"content":"<bpt id=\"p1\">*</bpt>attribute<ept id=\"p1\">*</ept> : one of      /* Microsoft Specific","source":"*attribute* : one of      /* Microsoft Specific "},{"content":"__asm","pos":[1086,1091]},{"content":"__clrcall","pos":[1122,1131]},{"content":"__stdcall","pos":[1153,1162]},{"content":"__based","pos":[1188,1195]},{"content":"__fastcall","pos":[1223,1233]},{"content":"__thiscall","pos":[1256,1266]},{"content":"__cdecl","pos":[1293,1300]},{"content":"__inline","pos":[1320,1328]},{"content":"__vectorcall","pos":[1363,1375]},{"content":"<bpt id=\"p1\">*</bpt>init-declarator-list<ept id=\"p1\">*</ept>:","pos":[1406,1429],"source":"*init-declarator-list*:"},{"content":"init-declarator","pos":[1434,1449]},{"pos":[1457,1505],"content":"<bpt id=\"p1\">*</bpt>init-declarator-list<ept id=\"p1\">*</ept>  <bpt id=\"p2\">**</bpt>,<ept id=\"p2\">**</ept>  <bpt id=\"p3\">*</bpt>init-declarator<ept id=\"p3\">*</ept>","source":"*init-declarator-list*  **,**  *init-declarator*"},{"content":"<bpt id=\"p1\">*</bpt>init-declarator<ept id=\"p1\">*</ept>:","pos":[1512,1530],"source":"*init-declarator*:"},{"content":"declarator","pos":[1535,1545]},{"pos":[1553,1616],"content":"<bpt id=\"p1\">*</bpt>declarator<ept id=\"p1\">*</ept>  <bpt id=\"p2\">**</bpt><ph id=\"ph1\">=</ph><ept id=\"p2\">**</ept>  <bpt id=\"p3\">*</bpt>initializer<ept id=\"p3\">*</ept> /* For scalar initialization","source":"*declarator*  **=**  *initializer* /* For scalar initialization "},{"content":"<bpt id=\"p1\">*</bpt>storage-class-specifier<ept id=\"p1\">*</ept>:","pos":[1627,1653],"source":"*storage-class-specifier*:"},{"content":"auto","pos":[1659,1663]},{"content":"register","pos":[1674,1682]},{"content":"static","pos":[1693,1699]},{"content":"extern","pos":[1710,1716]},{"content":"typedef","pos":[1727,1734]},{"pos":[1743,1818],"content":"<bpt id=\"p1\">**</bpt>__declspec (<ept id=\"p1\">**</ept>  <bpt id=\"p2\">*</bpt>extended-decl-modifier-seq<ept id=\"p2\">*</ept>  <bpt id=\"p3\">**</bpt>)<ept id=\"p3\">**</ept> /* Microsoft Specific","source":"**__declspec (**  *extended-decl-modifier-seq*  **)** /* Microsoft Specific "},{"content":"<bpt id=\"p1\">*</bpt>type-specifier<ept id=\"p1\">*</ept>:","pos":[1829,1846],"source":"*type-specifier*:"},{"content":"void","pos":[1852,1856]},{"content":"char","pos":[1867,1871]},{"content":"short","pos":[1882,1887]},{"content":"int","pos":[1898,1901]},{"pos":[1919,1940],"content":"/* Microsoft Specific"},{"pos":[1961,1982],"content":"/* Microsoft Specific"},{"pos":[2003,2024],"content":"/* Microsoft Specific"},{"pos":[2045,2066],"content":"/* Microsoft Specific"},{"content":"long","pos":[2079,2083]},{"content":"float","pos":[2094,2099]},{"content":"double","pos":[2110,2116]},{"content":"signed","pos":[2127,2133]},{"content":"unsigned","pos":[2144,2152]},{"content":"struct-or-union-specifier","pos":[2162,2187]},{"content":"enum-specifier","pos":[2196,2210]},{"content":"typedef-name","pos":[2219,2231]},{"content":"<bpt id=\"p1\">*</bpt>type-qualifier<ept id=\"p1\">*</ept>:","pos":[2239,2256],"source":"*type-qualifier*:"},{"content":"const","pos":[2262,2267]},{"content":":","pos":[2305,2306]},{"content":"opt<bpt id=\"p1\">*</bpt>direct-declarator<ept id=\"p1\">*</ept>","pos":[2319,2341],"source":"opt*direct-declarator*"},{"content":"<bpt id=\"p1\">*</bpt>direct-declarator<ept id=\"p1\">*</ept>:","pos":[2348,2368],"source":"*direct-declarator*:"},{"content":"identifier","pos":[2373,2383]},{"pos":[2391,2417],"content":"<bpt id=\"p1\">**</bpt>(<ept id=\"p1\">**</ept>  <bpt id=\"p2\">*</bpt>declarator<ept id=\"p2\">*</ept>  <bpt id=\"p3\">**</bpt>)<ept id=\"p3\">**</ept>","source":"**(**  *declarator*  **)**"},{"pos":[2424,2482],"content":"<bpt id=\"p1\">*</bpt>direct-declarator<ept id=\"p1\">*</ept>  <bpt id=\"p2\">**</bpt>[<ept id=\"p2\">**</ept>  <bpt id=\"p3\">*</bpt>constant-expression<ept id=\"p3\">*</ept> opt<bpt id=\"p4\">**</bpt>]<ept id=\"p4\">**</ept>","source":"*direct-declarator*  **[**  *constant-expression* opt**]**"},{"pos":[2489,2569],"content":"<bpt id=\"p1\">*</bpt>direct-declarator<ept id=\"p1\">*</ept>  <bpt id=\"p2\">**</bpt>(<ept id=\"p2\">**</ept>  <bpt id=\"p3\">*</bpt>parameter-type-list<ept id=\"p3\">*</ept>  <bpt id=\"p4\">**</bpt>)<ept id=\"p4\">**</ept> /* New-style declarator","source":"*direct-declarator*  **(**  *parameter-type-list*  **)** /* New-style declarator "},{"pos":[2580,2662],"content":"<bpt id=\"p1\">*</bpt>direct-declarator<ept id=\"p1\">*</ept>  <bpt id=\"p2\">**</bpt>(<ept id=\"p2\">**</ept>  <bpt id=\"p3\">*</bpt>identifier-list<ept id=\"p3\">*</ept>opt<bpt id=\"p4\">**</bpt>)<ept id=\"p4\">**</ept> /* Obsolete-style declarator","source":"*direct-declarator*  **(**  *identifier-list*opt**)** /* Obsolete-style declarator "},{"content":":","pos":[2682,2683]},{"content":"<bpt id=\"p1\"> **</bpt><ph id=\"ph1\">\\*</ph><ept id=\"p1\">**</ept> <bpt id=\"p2\">*</bpt>type-qualifier-list<ept id=\"p2\">*</ept>opt","pos":[2686,2718],"source":" **\\*** *type-qualifier-list*opt"},{"pos":[2725,2756],"content":"<bpt id=\"p1\">**</bpt><ph id=\"ph1\">\\*</ph><ept id=\"p1\">**</ept> <bpt id=\"p2\">*</bpt>type-qualifier-list<ept id=\"p2\">*</ept>opt","source":"**\\*** *type-qualifier-list*opt"},{"content":"<bpt id=\"p1\">*</bpt>parameter-type-list<ept id=\"p1\">*</ept>:                           /<ph id=\"ph1\">\\*</ph> The parameter list","pos":[2772,2843],"source":"*parameter-type-list*:                           /\\* The parameter list "},{"content":"parameter-list","pos":[2852,2866]},{"pos":[2874,2900],"content":"<bpt id=\"p1\">*</bpt>parameter-list<ept id=\"p1\">*</ept> <bpt id=\"p2\">**</bpt>, ...<ept id=\"p2\">**</ept>","source":"*parameter-list* **, ...**"},{"content":"<bpt id=\"p1\">*</bpt>parameter-list<ept id=\"p1\">*</ept>:","pos":[2907,2924],"source":"*parameter-list*:"},{"content":"parameter-declaration","pos":[2929,2950]},{"pos":[2958,3006],"content":"<bpt id=\"p1\">*</bpt>parameter-list<ept id=\"p1\">*</ept>  <bpt id=\"p2\">**</bpt>,<ept id=\"p2\">**</ept>  <bpt id=\"p3\">*</bpt>parameter-declaration<ept id=\"p3\">*</ept>","source":"*parameter-list*  **,**  *parameter-declaration*"},{"content":"<bpt id=\"p1\">*</bpt>type-qualifier-list<ept id=\"p1\">*</ept>:","pos":[3013,3035],"source":"*type-qualifier-list*:"},{"content":"type-qualifier","pos":[3040,3054]},{"content":"type-qualifier-list type-qualifier","pos":[3063,3097]},{"content":"<bpt id=\"p1\">*</bpt>enum-specifier<ept id=\"p1\">*</ept>:","pos":[3105,3122],"source":"*enum-specifier*:"},{"content":"<bpt id=\"p1\"> **</bpt>enum<ept id=\"p1\">**</ept>  <bpt id=\"p2\">*</bpt>identifier<ept id=\"p2\">*</ept>opt<bpt id=\"p3\">**</bpt>{<ept id=\"p3\">**</ept> <bpt id=\"p4\">*</bpt>enumerator-list<ept id=\"p4\">*</ept> <bpt id=\"p5\">**</bpt>}<ept id=\"p5\">**</ept>","pos":[3125,3180],"source":" **enum**  *identifier*opt**{** *enumerator-list* **}**"},{"pos":[3187,3209],"content":"<bpt id=\"p1\">**</bpt>enum<ept id=\"p1\">**</ept>  <bpt id=\"p2\">*</bpt>identifier<ept id=\"p2\">*</ept>","source":"**enum**  *identifier*"},{"content":"<bpt id=\"p1\">*</bpt>enumerator-list<ept id=\"p1\">*</ept>:","pos":[3216,3234],"source":"*enumerator-list*:"},{"content":"enumerator","pos":[3239,3249]},{"pos":[3257,3281],"content":"<bpt id=\"p1\">*</bpt>enumerator-list<ept id=\"p1\">*</ept>  <bpt id=\"p2\">**</bpt>,<ept id=\"p2\">**</ept>","source":"*enumerator-list*  **,**"},{"content":":","pos":[3314,3315]},{"content":"enumeration-constant","pos":[3320,3340]},{"pos":[3348,3400],"content":"<bpt id=\"p1\">*</bpt>enumeration-constant<ept id=\"p1\">*</ept>  <bpt id=\"p2\">**</bpt><ph id=\"ph1\">=</ph><ept id=\"p2\">**</ept>  <bpt id=\"p3\">*</bpt>constant-expression<ept id=\"p3\">*</ept>","source":"*enumeration-constant*  **=**  *constant-expression*"},{"content":"<bpt id=\"p1\">*</bpt>enumeration-constant<ept id=\"p1\">*</ept>:","pos":[3407,3430],"source":"*enumeration-constant*:"},{"content":"identifier","pos":[3435,3445]},{"content":"<bpt id=\"p1\">*</bpt>struct-or-union-specifier<ept id=\"p1\">*</ept>:","pos":[3453,3481],"source":"*struct-or-union-specifier*:"},{"content":"<bpt id=\"p1\"> *</bpt>struct-or-union identifier<ept id=\"p1\">*</ept>opt<bpt id=\"p2\">**</bpt>{<ept id=\"p2\">**</ept> <bpt id=\"p3\">*</bpt>struct-declaration-list<ept id=\"p3\">*</ept> <bpt id=\"p4\">**</bpt>}<ept id=\"p4\">**</ept> <bpt id=\"p5\">*</bpt>struct-or-union identifier<ept id=\"p5\">*</ept>","pos":[3484,3582],"source":" *struct-or-union identifier*opt**{** *struct-declaration-list* **}** *struct-or-union identifier*"},{"content":"<bpt id=\"p1\">*</bpt>struct-or-union<ept id=\"p1\">*</ept>:","pos":[3589,3607],"source":"*struct-or-union*:"},{"content":"struct","pos":[3613,3619]},{"content":"union","pos":[3630,3635]},{"content":"<bpt id=\"p1\">*</bpt>struct-declaration-list<ept id=\"p1\">*</ept>:","pos":[3644,3670],"source":"*struct-declaration-list*:"},{"content":"struct-declaration","pos":[3675,3693]},{"content":"struct-declaration-list struct-declaration","pos":[3702,3744]},{"content":"<bpt id=\"p1\">*</bpt>struct-declaration<ept id=\"p1\">*</ept>:","pos":[3752,3773],"source":"*struct-declaration*:"},{"content":"<bpt id=\"p1\"> *</bpt>specifier-qualifier-list struct-declarator-list<ept id=\"p1\">*</ept>  <bpt id=\"p2\">**</bpt>;<ept id=\"p2\">**</ept>","pos":[3776,3833],"source":" *specifier-qualifier-list struct-declarator-list*  **;**"},{"content":"<bpt id=\"p1\">*</bpt>specifier-qualifier-list<ept id=\"p1\">*</ept>:","pos":[3840,3867],"source":"*specifier-qualifier-list*:"},{"content":"<bpt id=\"p1\"> *</bpt>type-specifier specifier-qualifier-list<ept id=\"p1\">*</ept>opt","pos":[3870,3915],"source":" *type-specifier specifier-qualifier-list*opt"},{"pos":[3922,3966],"content":"<bpt id=\"p1\">*</bpt>type-qualifier specifier-qualifier-list<ept id=\"p1\">*</ept>opt","source":"*type-qualifier specifier-qualifier-list*opt"},{"content":"<bpt id=\"p1\">*</bpt>struct-declarator-list<ept id=\"p1\">*</ept>:","pos":[3973,3998],"source":"*struct-declarator-list*:"},{"content":"<bpt id=\"p1\"> *</bpt>struct-declarator struct-declarator-list<ept id=\"p1\">*</ept>  <bpt id=\"p2\">**</bpt>,<ept id=\"p2\">**</ept>  <bpt id=\"p3\">*</bpt>struct-declarator<ept id=\"p3\">*</ept>","pos":[4001,4072],"source":" *struct-declarator struct-declarator-list*  **,**  *struct-declarator*"},{"content":"<bpt id=\"p1\">*</bpt>struct-declarator<ept id=\"p1\">*</ept>:","pos":[4079,4099],"source":"*struct-declarator*:"},{"content":"declarator","pos":[4104,4114]},{"pos":[4122,4179],"content":"<bpt id=\"p1\">*</bpt>type-specifier declarator<ept id=\"p1\">*</ept>opt<bpt id=\"p2\">**</bpt>:<ept id=\"p2\">**</ept> <bpt id=\"p3\">*</bpt>constant-expression<ept id=\"p3\">*</ept>","source":"*type-specifier declarator*opt**:** *constant-expression*"},{"content":"<bpt id=\"p1\">*</bpt>parameter-declaration<ept id=\"p1\">*</ept>:","pos":[4186,4210],"source":"*parameter-declaration*:"},{"content":"<bpt id=\"p1\"> *</bpt>declaration-specifiers declarator<ept id=\"p1\">*</ept> /* Named declarator","pos":[4213,4269],"source":" *declaration-specifiers declarator* /* Named declarator "},{"pos":[4280,4363],"content":"<bpt id=\"p1\">*</bpt>declaration-specifiers abstract-declarator<ept id=\"p1\">*</ept>opt<bpt id=\"p2\">**</bpt><ph id=\"ph1\">/\\*</ph><ept id=\"p2\">**</ept> Anonymous declarator <bpt id=\"p3\">**</bpt><ph id=\"ph2\">\\*/</ph><ept id=\"p3\">**</ept>","source":"*declaration-specifiers abstract-declarator*opt**/\\*** Anonymous declarator **\\*/**"},{"content":"<bpt id=\"p1\">*</bpt>identifier-list<ept id=\"p1\">*</ept>: <bpt id=\"p2\">**</bpt><ph id=\"ph1\">/\\*</ph><ept id=\"p2\">**</ept> For old-style declarator <bpt id=\"p3\">**</bpt><ph id=\"ph2\">\\* /</ph><ept id=\"p3\">**</ept>","pos":[4370,4430],"source":"*identifier-list*: **/\\*** For old-style declarator **\\* /**"},{"content":"identifier","pos":[4435,4445]},{"pos":[4453,4491],"content":"<bpt id=\"p1\">*</bpt>identifier-list<ept id=\"p1\">*</ept>  <bpt id=\"p2\">**</bpt>,<ept id=\"p2\">**</ept>  <bpt id=\"p3\">*</bpt>identifier<ept id=\"p3\">*</ept>","source":"*identifier-list*  **,**  *identifier*"},{"content":"<bpt id=\"p1\">*</bpt>abstract-declarator<ept id=\"p1\">*</ept>: <bpt id=\"p2\">**</bpt><ph id=\"ph1\">/\\*</ph><ept id=\"p2\">**</ept> Used with anonymous declarators <bpt id=\"p3\">**</bpt><ph id=\"ph2\">\\*/</ph><ept id=\"p3\">**</ept>","pos":[4498,4568],"source":"*abstract-declarator*: **/\\*** Used with anonymous declarators **\\*/**"},{"content":"pointer","pos":[4573,4580]},{"pos":[4597,4628],"content":"opt<bpt id=\"p1\">*</bpt>direct-abstract-declarator<ept id=\"p1\">*</ept>","source":"opt*direct-abstract-declarator*"},{"content":"<bpt id=\"p1\">*</bpt>direct-abstract-declarator<ept id=\"p1\">*</ept>:","pos":[4635,4664],"source":"*direct-abstract-declarator*:"},{"content":"<bpt id=\"p1\"> **</bpt>(<ept id=\"p1\">**</ept>  <bpt id=\"p2\">*</bpt>abstract-declarator<ept id=\"p2\">*</ept>  <bpt id=\"p3\">**</bpt>)<ept id=\"p3\">**</ept>","pos":[4667,4703],"source":" **(**  *abstract-declarator*  **)**"},{"pos":[4710,4776],"content":"<bpt id=\"p1\">*</bpt>direct-abstract-declarator<ept id=\"p1\">*</ept>opt<bpt id=\"p2\">**</bpt>[<ept id=\"p2\">**</ept> <bpt id=\"p3\">*</bpt>constant-expression<ept id=\"p3\">*</ept>opt<bpt id=\"p4\">**</bpt>]<ept id=\"p4\">**</ept>","source":"*direct-abstract-declarator*opt**[** *constant-expression*opt**]**"},{"pos":[4783,4850],"content":"<bpt id=\"p1\">*</bpt>direct-abstract-declarator<ept id=\"p1\">*</ept>opt<bpt id=\"p2\">**</bpt>(<ept id=\"p2\">**</ept> <bpt id=\"p3\">*</bpt>parameter-type-list<ept id=\"p3\">*</ept> opt<bpt id=\"p4\">**</bpt>)<ept id=\"p4\">**</ept>","source":"*direct-abstract-declarator*opt**(** *parameter-type-list* opt**)**"},{"content":"<bpt id=\"p1\">*</bpt>initializer<ept id=\"p1\">*</ept>:","pos":[4857,4871],"source":"*initializer*:"},{"content":"assignment-expression","pos":[4876,4897]},{"pos":[4905,4969],"content":"<bpt id=\"p1\">**</bpt>{<ept id=\"p1\">**</ept>  <bpt id=\"p2\">*</bpt>initializer-list<ept id=\"p2\">*</ept>  <bpt id=\"p3\">**</bpt>}<ept id=\"p3\">**</ept> /* For aggregate initialization","source":"**{**  *initializer-list*  **}** /* For aggregate initialization "},{"pos":[4980,5014],"content":"<bpt id=\"p1\">**</bpt>{<ept id=\"p1\">**</ept>  <bpt id=\"p2\">*</bpt>initializer-list<ept id=\"p2\">*</ept>  <bpt id=\"p3\">**</bpt>, }<ept id=\"p3\">**</ept>","source":"**{**  *initializer-list*  **, }**"},{"content":"<bpt id=\"p1\">*</bpt>initializer-list<ept id=\"p1\">*</ept>:","pos":[5021,5040],"source":"*initializer-list*:"},{"content":"initializer","pos":[5045,5056]},{"pos":[5064,5104],"content":"<bpt id=\"p1\">*</bpt>initializer-list<ept id=\"p1\">*</ept>  <bpt id=\"p2\">**</bpt>,<ept id=\"p2\">**</ept>  <bpt id=\"p3\">*</bpt>initializer<ept id=\"p3\">*</ept>","source":"*initializer-list*  **,**  *initializer*"},{"content":"<bpt id=\"p1\">*</bpt>type-name<ept id=\"p1\">*</ept>:","pos":[5111,5123],"source":"*type-name*:"},{"content":"<bpt id=\"p1\"> *</bpt>specifier-qualifier-list abstract-declarator<ept id=\"p1\">*</ept>opt","pos":[5126,5176],"source":" *specifier-qualifier-list abstract-declarator*opt"},{"content":"<bpt id=\"p1\">*</bpt>typedef-name<ept id=\"p1\">*</ept>:","pos":[5183,5198],"source":"*typedef-name*:"},{"content":"identifier","pos":[5203,5213]},{"content":"<bpt id=\"p1\">*</bpt>extended-decl-modifier-seq<ept id=\"p1\">*</ept>:/<ph id=\"ph1\">\\*</ph>    Microsoft Specific","pos":[5221,5275],"source":"*extended-decl-modifier-seq*:/\\*    Microsoft Specific "},{"content":"<bpt id=\"p1\"> *</bpt>extended-decl-modifier<ept id=\"p1\">*</ept>opt","pos":[5282,5310],"source":" *extended-decl-modifier*opt"},{"content":"extended-decl-modifier-seq extended-decl-modifier","pos":[5318,5367]},{"content":"<bpt id=\"p1\">*</bpt>extended-decl-modifier<ept id=\"p1\">*</ept>:   /<ph id=\"ph1\">\\*</ph> Microsoft Specific","pos":[5375,5425],"source":"*extended-decl-modifier*:   /\\* Microsoft Specific "},{"content":"thread","pos":[5435,5441]},{"content":"naked","pos":[5452,5457]},{"content":"dllimport","pos":[5468,5477]},{"content":"See Also","pos":[5506,5514]},{"content":"Calling Conventions","pos":[5519,5538]},{"content":"Phrase Structure Grammar","pos":[5576,5600]},{"content":"Obsolete Calling Conventions","pos":[5650,5678]}],"content":"---\ntitle: \"Summary of Declarations | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"C++\"\n  - \"C\"\nms.assetid: 53a5e9e5-1a33-40b5-9dea-7f669b479329\ncaps.latest.revision: 11\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Summary of Declarations\n`declaration`:  \n *declaration-specifiers attribute-seq* opt*init-declarator-list*opt**;**  \n  \n /\\* *attribute-seq* is Microsoft Specific */  \n  \n *declaration-specifiers*:  \n *storage-class-specifier declaration-specifiers*opt  \n  \n *type-specifier declaration-specifiers*opt  \n  \n *type-qualifier declaration-specifiers*opt  \n  \n *attribute-seq* :            /\\* *attribute-seq* is Microsoft Specific \\*/  \n *attribute attribute-seq* opt  \n  \n *attribute* : one of      /* Microsoft Specific \\*/  \n ||||  \n|-|-|-|  \n|[__asm](../assembler/inline/asm.md)|[__clrcall](../cpp/clrcall.md)|[__stdcall](../cpp/stdcall.md)|  \n|[__based](../cpp/based-grammar.md)|[__fastcall](../cpp/fastcall.md)|[__thiscall](../cpp/thiscall.md)|  \n|[__cdecl](../cpp/cdecl.md)|[__inline](../cpp/inline-functions-cpp.md)|[__vectorcall](../cpp/vectorcall.md)|  \n  \n *init-declarator-list*:  \n *init-declarator*  \n  \n *init-declarator-list*  **,**  *init-declarator*  \n  \n *init-declarator*:  \n *declarator*  \n  \n *declarator*  **=**  *initializer* /* For scalar initialization \\*/  \n  \n *storage-class-specifier*:  \n **auto**  \n  \n **register**  \n  \n **static**  \n  \n **extern**  \n  \n **typedef**  \n  \n **__declspec (**  *extended-decl-modifier-seq*  **)** /* Microsoft Specific \\*/  \n  \n *type-specifier*:  \n **void**  \n  \n **char**  \n  \n **short**  \n  \n **int**  \n  \n `__int8` /* Microsoft Specific \\*/  \n  \n `__int16` /* Microsoft Specific \\*/  \n  \n `__int32` /* Microsoft Specific \\*/  \n  \n `__int64` /* Microsoft Specific \\*/  \n  \n **long**  \n  \n **float**  \n  \n **double**  \n  \n **signed**  \n  \n **unsigned**  \n  \n *struct-or-union-specifier*  \n  \n *enum-specifier*  \n  \n *typedef-name*  \n  \n *type-qualifier*:  \n **const**  \n  \n `volatile`  \n  \n `declarator`:  \n `pointer`opt*direct-declarator*  \n  \n *direct-declarator*:  \n *identifier*  \n  \n **(**  *declarator*  **)**  \n  \n *direct-declarator*  **[**  *constant-expression* opt**]**  \n  \n *direct-declarator*  **(**  *parameter-type-list*  **)** /* New-style declarator \\*/  \n  \n *direct-declarator*  **(**  *identifier-list*opt**)** /* Obsolete-style declarator \\*/  \n  \n `pointer`:  \n **\\*** *type-qualifier-list*opt  \n  \n **\\*** *type-qualifier-list*opt`pointer`  \n  \n *parameter-type-list*:                           /\\* The parameter list \\*/  \n *parameter-list*  \n  \n *parameter-list* **, ...**  \n  \n *parameter-list*:  \n *parameter-declaration*  \n  \n *parameter-list*  **,**  *parameter-declaration*  \n  \n *type-qualifier-list*:  \n *type-qualifier*  \n  \n *type-qualifier-list type-qualifier*  \n  \n *enum-specifier*:  \n **enum**  *identifier*opt**{** *enumerator-list* **}**  \n  \n **enum**  *identifier*  \n  \n *enumerator-list*:  \n *enumerator*  \n  \n *enumerator-list*  **,**  `enumerator`  \n  \n `enumerator`:  \n *enumeration-constant*  \n  \n *enumeration-constant*  **=**  *constant-expression*  \n  \n *enumeration-constant*:  \n *identifier*  \n  \n *struct-or-union-specifier*:  \n *struct-or-union identifier*opt**{** *struct-declaration-list* **}** *struct-or-union identifier*  \n  \n *struct-or-union*:  \n **struct**  \n  \n **union**  \n  \n *struct-declaration-list*:  \n *struct-declaration*  \n  \n *struct-declaration-list struct-declaration*  \n  \n *struct-declaration*:  \n *specifier-qualifier-list struct-declarator-list*  **;**  \n  \n *specifier-qualifier-list*:  \n *type-specifier specifier-qualifier-list*opt  \n  \n *type-qualifier specifier-qualifier-list*opt  \n  \n *struct-declarator-list*:  \n *struct-declarator struct-declarator-list*  **,**  *struct-declarator*  \n  \n *struct-declarator*:  \n *declarator*  \n  \n *type-specifier declarator*opt**:** *constant-expression*  \n  \n *parameter-declaration*:  \n *declaration-specifiers declarator* /* Named declarator \\*/  \n  \n *declaration-specifiers abstract-declarator*opt**/\\*** Anonymous declarator **\\*/**  \n  \n *identifier-list*: **/\\*** For old-style declarator **\\* /**  \n *identifier*  \n  \n *identifier-list*  **,**  *identifier*  \n  \n *abstract-declarator*: **/\\*** Used with anonymous declarators **\\*/**  \n *pointer*  \n  \n `pointer`opt*direct-abstract-declarator*  \n  \n *direct-abstract-declarator*:  \n **(**  *abstract-declarator*  **)**  \n  \n *direct-abstract-declarator*opt**[** *constant-expression*opt**]**  \n  \n *direct-abstract-declarator*opt**(** *parameter-type-list* opt**)**  \n  \n *initializer*:  \n *assignment-expression*  \n  \n **{**  *initializer-list*  **}** /* For aggregate initialization \\*/  \n  \n **{**  *initializer-list*  **, }**  \n  \n *initializer-list*:  \n *initializer*  \n  \n *initializer-list*  **,**  *initializer*  \n  \n *type-name*:  \n *specifier-qualifier-list abstract-declarator*opt  \n  \n *typedef-name*:  \n *identifier*  \n  \n *extended-decl-modifier-seq*:/\\*    Microsoft Specific \\*/  \n *extended-decl-modifier*opt  \n  \n *extended-decl-modifier-seq extended-decl-modifier*  \n  \n *extended-decl-modifier*:   /\\* Microsoft Specific \\*/  \n **thread**  \n  \n **naked**  \n  \n **dllimport**  \n  \n `dllexport`  \n  \n## See Also  \n [Calling Conventions](../cpp/calling-conventions.md)   \n [Phrase Structure Grammar](../c-language/phrase-structure-grammar.md)   \n [Obsolete Calling Conventions](../cpp/obsolete-calling-conventions.md)"}