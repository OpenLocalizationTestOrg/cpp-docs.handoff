{"nodes":[{"pos":[12,37],"content":"_heapchk | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"_heapchk | Microsoft Docs","pos":[0,25]}]},{"pos":[1060,1068],"content":"_heapchk","linkify":"_heapchk","nodes":[{"content":"_heapchk","pos":[0,8]}]},{"content":"Runs consistency checks on the heap.","pos":[1069,1105]},{"pos":[1114,1120],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[1168,1180],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[1184,1271],"content":"<ph id=\"ph1\">`_heapchk`</ph> returns one of the following integer manifest constants defined in Malloc.h.","source":"`_heapchk` returns one of the following integer manifest constants defined in Malloc.h."},{"content":"Initial header information is bad or cannot be found.","pos":[1297,1350]},{"content":"Bad node has been found or heap is damaged.","pos":[1375,1418]},{"content":"Pointer into heap is not valid.","pos":[1442,1473]},{"content":"Heap has not been initialized.","pos":[1496,1526]},{"content":"Heap appears to be consistent.","pos":[1546,1576]},{"pos":[1583,1652],"content":"In addition, if an error occurs, <ph id=\"ph1\">`_heapchk`</ph> sets <ph id=\"ph2\">`errno`</ph> to <ph id=\"ph3\">`ENOSYS`</ph>.","source":"In addition, if an error occurs, `_heapchk` sets `errno` to `ENOSYS`."},{"pos":[1661,1668],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The <ph id=\"ph1\">`_heapchk`</ph> function helps debug heap-related problems by checking for minimal consistency of the heap.","pos":[1672,1778],"source":"The `_heapchk` function helps debug heap-related problems by checking for minimal consistency of the heap."},{"content":"If the operating system does not support <ph id=\"ph1\">`_heapchk`</ph>(for example, Windows 98), the function returns <ph id=\"ph2\">`_HEAPOK`</ph> and sets <ph id=\"ph3\">`errno`</ph> to <ph id=\"ph4\">`ENOSYS`</ph>.","pos":[1779,1917],"source":" If the operating system does not support `_heapchk`(for example, Windows 98), the function returns `_HEAPOK` and sets `errno` to `ENOSYS`."},{"pos":[1926,1938],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"content":"Routine","pos":[1945,1952]},{"content":"Required header","pos":[1953,1968]},{"content":"Optional header","pos":[1969,1984]},{"content":"<ph id=\"ph1\">\\&lt;</ph>malloc.h&gt;","pos":[2062,2073],"source":"\\<malloc.h>"},{"content":"<ph id=\"ph1\">\\&lt;</ph>errno.h&gt;","pos":[2074,2084],"source":"\\<errno.h>"},{"pos":[2092,2210],"content":"For more compatibility information, see <bpt id=\"p1\">[</bpt>Compatibility<ept id=\"p1\">](../../c-runtime-library/compatibility.md)</ept> in the Introduction.","source":"For more compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md) in the Introduction."},{"pos":[2219,2226],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[3069,3094],"content":".NET Framework Equivalent","linkify":".NET Framework Equivalent","nodes":[{"content":".NET Framework Equivalent","pos":[0,25]}]},{"content":"Not applicable.","pos":[3098,3113]},{"content":"To call the standard C function, use <ph id=\"ph1\">`PInvoke`</ph>.","pos":[3114,3161],"source":" To call the standard C function, use `PInvoke`."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Platform Invoke Examples<ept id=\"p1\">](http://msdn.microsoft.com/Library/15926806-f0b7-487e-93a6-4e9367ec689f)</ept>.","pos":[3162,3287],"source":" For more information, see [Platform Invoke Examples](http://msdn.microsoft.com/Library/15926806-f0b7-487e-93a6-4e9367ec689f)."},{"pos":[3296,3304],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Memory Allocation<ept id=\"p1\">](../../c-runtime-library/memory-allocation.md)</ept><ph id=\"ph1\"> </ph>","pos":[3308,3374],"source":"[Memory Allocation](../../c-runtime-library/memory-allocation.md) "},{"content":"<bpt id=\"p1\"> [</bpt>_heapadd<ept id=\"p1\">](../../c-runtime-library/heapadd.md)</ept><ph id=\"ph1\"> </ph>","pos":[3377,3425],"source":" [_heapadd](../../c-runtime-library/heapadd.md) "},{"content":"<bpt id=\"p1\"> [</bpt>_heapmin<ept id=\"p1\">](../../c-runtime-library/reference/heapmin.md)</ept><ph id=\"ph1\"> </ph>","pos":[3428,3486],"source":" [_heapmin](../../c-runtime-library/reference/heapmin.md) "},{"content":"<bpt id=\"p1\"> [</bpt>_heapset<ept id=\"p1\">](../../c-runtime-library/heapset.md)</ept><ph id=\"ph1\"> </ph>","pos":[3489,3537],"source":" [_heapset](../../c-runtime-library/heapset.md) "},{"content":"<bpt id=\"p1\"> [</bpt>_heapwalk<ept id=\"p1\">](../../c-runtime-library/reference/heapwalk.md)</ept>","pos":[3540,3599],"source":" [_heapwalk](../../c-runtime-library/reference/heapwalk.md)"}],"content":"---\ntitle: \"_heapchk | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\napiname: \n  - \"_heapchk\"\napilocation: \n  - \"msvcrt.dll\"\n  - \"msvcr80.dll\"\n  - \"msvcr90.dll\"\n  - \"msvcr100.dll\"\n  - \"msvcr100_clr0400.dll\"\n  - \"msvcr110.dll\"\n  - \"msvcr110_clr0400.dll\"\n  - \"msvcr120.dll\"\n  - \"msvcr120_clr0400.dll\"\n  - \"ucrtbase.dll\"\n  - \"api-ms-win-crt-heap-l1-1-0.dll\"\napitype: \"DLLExport\"\nf1_keywords: \n  - \"_heapchk\"\n  - \"heapchk\"\ndev_langs: \n  - \"C++\"\n  - \"C\"\nhelpviewer_keywords: \n  - \"debugging [CRT], heap-related problems\"\n  - \"consistency checking of heaps\"\n  - \"heapchk function\"\n  - \"heaps, checking consistency\"\n  - \"_heapchk function\"\nms.assetid: 859619a5-1e35-4f02-9e09-11d9fa266ec0\ncaps.latest.revision: 13\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# _heapchk\nRuns consistency checks on the heap.  \n  \n## Syntax  \n  \n```  \nint _heapchk( void );  \n```  \n  \n## Return Value  \n `_heapchk` returns one of the following integer manifest constants defined in Malloc.h.  \n  \n `_HEAPBADBEGIN`  \n Initial header information is bad or cannot be found.  \n  \n `_HEAPBADNODE`  \n Bad node has been found or heap is damaged.  \n  \n `_HEAPBADPTR`  \n Pointer into heap is not valid.  \n  \n `_HEAPEMPTY`  \n Heap has not been initialized.  \n  \n `_HEAPOK`  \n Heap appears to be consistent.  \n  \n In addition, if an error occurs, `_heapchk` sets `errno` to `ENOSYS`.  \n  \n## Remarks  \n The `_heapchk` function helps debug heap-related problems by checking for minimal consistency of the heap. If the operating system does not support `_heapchk`(for example, Windows 98), the function returns `_HEAPOK` and sets `errno` to `ENOSYS`.  \n  \n## Requirements  \n  \n|Routine|Required header|Optional header|  \n|-------------|---------------------|---------------------|  \n|`_heapchk`|\\<malloc.h>|\\<errno.h>|  \n  \n For more compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md) in the Introduction.  \n  \n## Example  \n  \n```  \n// crt_heapchk.c  \n// This program checks the heap for  \n// consistency and prints an appropriate message.  \n  \n#include <malloc.h>  \n#include <stdio.h>  \n  \nint main( void )  \n{  \n   int  heapstatus;  \n   char *buffer;  \n  \n   // Allocate and deallocate some memory  \n   if( (buffer = (char *)malloc( 100 )) != NULL )  \n      free( buffer );  \n  \n   // Check heap status  \n   heapstatus = _heapchk();  \n   switch( heapstatus )  \n   {  \n   case _HEAPOK:  \n      printf(\" OK - heap is fine\\n\" );  \n      break;  \n   case _HEAPEMPTY:  \n      printf(\" OK - heap is empty\\n\" );  \n      break;  \n   case _HEAPBADBEGIN:  \n      printf( \"ERROR - bad start of heap\\n\" );  \n      break;  \n   case _HEAPBADNODE:  \n      printf( \"ERROR - bad node in heap\\n\" );  \n      break;  \n   }  \n}  \n```  \n  \n```Output  \nOK - heap is fine  \n```  \n  \n## .NET Framework Equivalent  \n Not applicable. To call the standard C function, use `PInvoke`. For more information, see [Platform Invoke Examples](http://msdn.microsoft.com/Library/15926806-f0b7-487e-93a6-4e9367ec689f).  \n  \n## See Also  \n [Memory Allocation](../../c-runtime-library/memory-allocation.md)   \n [_heapadd](../../c-runtime-library/heapadd.md)   \n [_heapmin](../../c-runtime-library/reference/heapmin.md)   \n [_heapset](../../c-runtime-library/heapset.md)   \n [_heapwalk](../../c-runtime-library/reference/heapwalk.md)"}