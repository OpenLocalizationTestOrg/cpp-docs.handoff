{"nodes":[{"pos":[12,80],"content":"Concurrency::graphics::direct3d namespace functions | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Concurrency::graphics::direct3d namespace functions | Microsoft Docs","pos":[0,68]}]},{"pos":[322,373],"content":"Concurrency::graphics::direct3d namespace functions","linkify":"Concurrency::graphics::direct3d namespace functions","nodes":[{"content":"Concurrency::graphics::direct3d namespace functions","pos":[0,51]}]},{"pos":[392,437],"content":"<bpt id=\"p1\">[</bpt>get_sampler Function<ept id=\"p1\">](#get_sampler_function)</ept>","source":"[get_sampler Function](#get_sampler_function)"},{"pos":[438,483],"content":"<bpt id=\"p1\">[</bpt>get_texture Function<ept id=\"p1\">](#get_texture_function)</ept>","source":"[get_texture Function](#get_texture_function)"},{"pos":[484,531],"content":"<bpt id=\"p1\">[</bpt>make_sampler Function<ept id=\"p1\">](#make_sampler_function)</ept>","source":"[make_sampler Function](#make_sampler_function)"},{"pos":[536,583],"content":"<bpt id=\"p1\">[</bpt>make_texture Function<ept id=\"p1\">](#make_texture_function)</ept>","source":"[make_texture Function](#make_texture_function)"},{"pos":[584,617],"content":"<bpt id=\"p1\">[</bpt>msad4 Function<ept id=\"p1\">](#msad4_function)</ept>","source":"[msad4 Function](#msad4_function)"},{"pos":[628,685],"content":"<bpt id=\"p1\">&lt;a name=\"get_sampler_function\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  get_sampler Function","linkify":"<a name=\"get_sampler_function\"></a>  get_sampler Function","source":"<a name=\"get_sampler_function\"></a>  get_sampler Function"},{"content":"Get the D3D sampler state interface on the given accelerator view that represents the specified sampler object.","pos":[689,800]},{"pos":[940,950],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"A D3D accelerator view on which the D3D sampler state is to be created.","pos":[963,1034]},{"content":"A sampler object for which the underlying D3D sampler state interface is created.","pos":[1055,1136]},{"pos":[1146,1158],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The IUnknown interface pointer corresponding to the D3D sampler state that represents the given sampler.","pos":[1162,1266]},{"pos":[1276,1333],"content":"<bpt id=\"p1\">&lt;a name=\"get_texture_function\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  get_texture Function","linkify":"<a name=\"get_texture_function\"></a>  get_texture Function","source":"<a name=\"get_texture_function\"></a>  get_texture Function"},{"pos":[1337,1433],"content":"Gets the Direct3D texture interface underlying the specified <bpt id=\"p1\">[</bpt>texture<ept id=\"p1\">](texture-class.md)</ept> object.","source":"Gets the Direct3D texture interface underlying the specified [texture](texture-class.md) object."},{"pos":[1934,1944],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"The element type of the texture.","pos":[1964,1996]},{"content":"The rank of the texture.","pos":[2014,2038]},{"content":"A texture or texture view associated with the accelerator_view for which the underlying Direct3D texture interface is returned.","pos":[2059,2186]},{"pos":[2196,2208],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The IUnknown interface pointer corresponding to the Direct3D texture underlying the texture.","pos":[2212,2304]},{"pos":[2314,2373],"content":"<bpt id=\"p1\">&lt;a name=\"make_sampler_function\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  make_sampler Function","linkify":"<a name=\"make_sampler_function\"></a>  make_sampler Function","source":"<a name=\"make_sampler_function\"></a>  make_sampler Function"},{"content":"Create a sampler from a D3D sampler state interface pointer.","pos":[2377,2437]},{"pos":[2527,2537],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"IUnknown interface pointer of the D3D sampler state to create the sampler from.","pos":[2559,2638]},{"pos":[2648,2660],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A sampler represents the provided D3D sampler state.","pos":[2664,2716]},{"pos":[2726,2785],"content":"<bpt id=\"p1\">&lt;a name=\"make_texture_function\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  make_texture Function","linkify":"<a name=\"make_texture_function\"></a>  make_texture Function","source":"<a name=\"make_texture_function\"></a>  make_texture Function"},{"pos":[2789,2868],"content":"Creates a <bpt id=\"p1\">[</bpt>texture<ept id=\"p1\">](texture-class.md)</ept> object by using the specified parameters.","source":"Creates a [texture](texture-class.md) object by using the specified parameters."},{"pos":[3141,3151],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"The type of the elements in the texture.","pos":[3171,3211]},{"content":"The rank of the texture.","pos":[3229,3253]},{"content":"A D3D accelerator view on which the texture is to be created.","pos":[3269,3330]},{"content":"IUnknown interface pointer of the D3D texture to create the texture from.","pos":[3355,3428]},{"content":"The DXGI format to use for views created from this texture.","pos":[3453,3512]},{"content":"Pass DXGI_FORMAT_UNKNOWN (the default) to derive the format from the underlying format of _D3D_texture and the value_type of this template.","pos":[3513,3652]},{"content":"The provided format must be compatible with the underlying format of _D3D_texture.","pos":[3653,3735]},{"pos":[3745,3757],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A texture using the provided D3D texture.","pos":[3761,3802]},{"pos":[3812,3857],"content":"<bpt id=\"p1\">&lt;a name=\"msad4_function\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  msad4 Function","linkify":"<a name=\"msad4_function\"></a>  msad4 Function","source":"<a name=\"msad4_function\"></a>  msad4 Function"},{"content":"Compares a 4-byte reference value and an 8-byte source value and accumulates a vector of 4 sums.","pos":[3861,3957]},{"content":"Each sum corresponds to the masked sum of absolute differences of different byte alignments between the reference value and the source value.","pos":[3958,4099]},{"pos":[4221,4231],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"The reference array of 4 bytes in one uint value","pos":[4251,4299]},{"content":"The source array of 8 bytes in a vector of two uint values.","pos":[4319,4378]},{"content":"A vector of 4 values to be added to the masked sum of absolute differences of the different byte alignments between the reference value and the source value.","pos":[4397,4554]},{"pos":[4564,4576],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Returns a vector of 4 sums.","pos":[4580,4607]},{"content":"Each sum corresponds to the masked sum of absolute differences of different byte alignments between the reference value and the source value.","pos":[4608,4749]},{"pos":[4758,4766],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"pos":[4770,4857],"content":"<bpt id=\"p1\">[</bpt>Concurrency::graphics::direct3d Namespace<ept id=\"p1\">](concurrency-graphics-direct3d-namespace.md)</ept>","source":"[Concurrency::graphics::direct3d Namespace](concurrency-graphics-direct3d-namespace.md)"}],"content":"---\ntitle: \"Concurrency::graphics::direct3d namespace functions | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nms.assetid: 11ee1d42-333e-4ae9-95ac-4cf68c06d13d\ncaps.latest.revision: 6\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\n---\n# Concurrency::graphics::direct3d namespace functions\n||||  \n|-|-|-|  \n|[get_sampler Function](#get_sampler_function)|[get_texture Function](#get_texture_function)|[make_sampler Function](#make_sampler_function)|  \n|[make_texture Function](#make_texture_function)|[msad4 Function](#msad4_function)|  \n  \n##  <a name=\"get_sampler_function\"></a>  get_sampler Function  \n Get the D3D sampler state interface on the given accelerator view that represents the specified sampler object.  \n  \n```  \nIUnknown* get_sampler(\n    const Concurrency::accelerator_view& _Av,  \n    const sampler& _Sampler) restrict(amp);\n```  \n  \n### Parameters  \n `_Av`  \n A D3D accelerator view on which the D3D sampler state is to be created.  \n  \n `_Sampler`  \n A sampler object for which the underlying D3D sampler state interface is created.  \n  \n### Return Value  \n The IUnknown interface pointer corresponding to the D3D sampler state that represents the given sampler.  \n  \n##  <a name=\"get_texture_function\"></a>  get_texture Function  \n Gets the Direct3D texture interface underlying the specified [texture](texture-class.md) object.  \n  \n```  \ntemplate<\n    typename value_type,  \n    int _Rank  \n>  \n_Ret_ IUnknown *get_texture(\n    const texture<value_type, _Rank>& _Texture) restrict(cpu);\n\n \ntemplate<\n    typename value_type,  \n    int _Rank  \n>  \n_Ret_ IUnknown *get_texture(\n    const writeonly_texture_view<value_type, _Rank>& _Texture) restrict(cpu);\n\n \ntemplate<\n    typename value_type,  \n    int _Rank  \n>  \n_Ret_ IUnknown *get_texture(\n    const texture_view<value_type, _Rank>& _Texture) restrict(cpu);\n\n \n```  \n  \n### Parameters  \n `value_type`  \n The element type of the texture.  \n  \n `_Rank`  \n The rank of the texture.  \n  \n `_Texture`  \n A texture or texture view associated with the accelerator_view for which the underlying Direct3D texture interface is returned.  \n  \n### Return Value  \n The IUnknown interface pointer corresponding to the Direct3D texture underlying the texture.  \n  \n##  <a name=\"make_sampler_function\"></a>  make_sampler Function  \n Create a sampler from a D3D sampler state interface pointer.  \n  \n```  \nsampler make_sampler(_In_ IUnknown* _D3D_sampler) restrict(amp);\n```  \n  \n### Parameters  \n `_D3D_sampler`  \n IUnknown interface pointer of the D3D sampler state to create the sampler from.  \n  \n### Return Value  \n A sampler represents the provided D3D sampler state.  \n  \n##  <a name=\"make_texture_function\"></a>  make_texture Function  \n Creates a [texture](texture-class.md) object by using the specified parameters.  \n  \n```  \ntemplate<\n    typename value_type,  \n    int _Rank  \n>  \ntexture<value_type, _Rank> make_texture(\n    const Concurrency::accelerator_view& _Av,  \n    _In_ IUnknown* _D3D_texture,  \n    DXGI_FORMAT _View_format = DXGI_FORMAT_UNKNOWN) restrict(cpu);\n```  \n  \n### Parameters  \n `value_type`  \n The type of the elements in the texture.  \n  \n `_Rank`  \n The rank of the texture.  \n  \n `_Av`  \n A D3D accelerator view on which the texture is to be created.  \n  \n `_D3D_texture`  \n IUnknown interface pointer of the D3D texture to create the texture from.  \n  \n `_View_format`  \n The DXGI format to use for views created from this texture. Pass DXGI_FORMAT_UNKNOWN (the default) to derive the format from the underlying format of _D3D_texture and the value_type of this template. The provided format must be compatible with the underlying format of _D3D_texture.  \n  \n### Return Value  \n A texture using the provided D3D texture.  \n  \n##  <a name=\"msad4_function\"></a>  msad4 Function  \n Compares a 4-byte reference value and an 8-byte source value and accumulates a vector of 4 sums. Each sum corresponds to the masked sum of absolute differences of different byte alignments between the reference value and the source value.  \n  \n```  \ninline uint4 msad4(\n    uint _Reference,  \n    uint2 _Source,  \n    uint4 _Accum) restrict(amp);\n```  \n  \n### Parameters  \n `_Reference`  \n The reference array of 4 bytes in one uint value  \n  \n `_Source`  \n The source array of 8 bytes in a vector of two uint values.  \n  \n `_Accum`  \n A vector of 4 values to be added to the masked sum of absolute differences of the different byte alignments between the reference value and the source value.  \n  \n### Return Value  \n Returns a vector of 4 sums. Each sum corresponds to the masked sum of absolute differences of different byte alignments between the reference value and the source value.  \n  \n## See Also  \n [Concurrency::graphics::direct3d Namespace](concurrency-graphics-direct3d-namespace.md)\n"}