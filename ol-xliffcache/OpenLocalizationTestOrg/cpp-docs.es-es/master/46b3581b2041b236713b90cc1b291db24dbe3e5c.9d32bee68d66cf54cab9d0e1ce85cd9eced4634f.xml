{"nodes":[{"pos":[12,62],"content":"Microsoft::WRL::Details Namespace | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Microsoft::WRL::Details Namespace | Microsoft Docs","pos":[0,50]}]},{"content":"Microsoft::WRL::Details Namespace","pos":[570,603]},{"content":"Supports the WRL infrastructure and is not intended to be used directly from your code.","pos":[604,691]},{"content":"Syntax","pos":[700,706]},{"content":"Members","pos":[767,774]},{"content":"Classes","pos":[784,791]},{"content":"Name","pos":[798,802]},{"content":"Description","pos":[803,814]},{"content":"ComPtrRef Class","pos":[853,868]},{"content":"Represents a reference to an object of type ComPtr<ph id=\"ph1\">\\&lt;</ph>T&gt;.","pos":[901,956],"source":"Represents a reference to an object of type ComPtr\\<T>."},{"content":"ComPtrRefBase Class","pos":[962,981]},{"pos":[1018,1101],"content":"Represents the base class for the <bpt id=\"p1\">[</bpt>ComPtrRef<ept id=\"p1\">](../windows/comptrref-class.md)</ept> class.","source":"Represents the base class for the [ComPtrRef](../windows/comptrref-class.md) class."},{"content":"DontUseNewUseMake Class","pos":[1107,1130]},{"content":"Prevents using operator <ph id=\"ph1\">`new`</ph> in <ph id=\"ph2\">`RuntimeClass`</ph>.","pos":[1171,1219],"source":"Prevents using operator `new` in `RuntimeClass`."},{"content":"Consequently, you must use the <bpt id=\"p1\">[</bpt>Make function<ept id=\"p1\">](../windows/make-function.md)</ept> instead.","pos":[1220,1304],"source":" Consequently, you must use the [Make function](../windows/make-function.md) instead."},{"content":"EventTargetArray Class","pos":[1310,1332]},{"content":"Represents an array of event handlers.","pos":[1372,1410]},{"content":"MakeAllocator Class","pos":[1416,1435]},{"content":"Allocates memory for an activatable class, with or without weak reference support.","pos":[1472,1554]},{"content":"ModuleBase Class","pos":[1560,1576]},{"pos":[1610,1688],"content":"Represents the base class of the <bpt id=\"p1\">[</bpt>Module<ept id=\"p1\">](../windows/module-class.md)</ept> classes.","source":"Represents the base class of the [Module](../windows/module-class.md) classes."},{"content":"RemoveIUnknown Class","pos":[1694,1714]},{"pos":[1752,1883],"content":"Makes a type that is equivalent to an <ph id=\"ph1\">`IUnknown`</ph>-based type, but has non-virtual <ph id=\"ph2\">`QueryInterface`</ph>, <ph id=\"ph3\">`AddRef`</ph>, and <ph id=\"ph4\">`Release`</ph> methods.","source":"Makes a type that is equivalent to an `IUnknown`-based type, but has non-virtual `QueryInterface`, `AddRef`, and `Release` methods."},{"content":"WeakReference Class","pos":[1889,1908]},{"content":"Represents a <bpt id=\"p1\">*</bpt>weak reference<ept id=\"p1\">*</ept> that can be used with the Windows Runtime or classic COM.","pos":[1946,2033],"source":"Represents a *weak reference* that can be used with the Windows Runtime or classic COM."},{"content":"A weak reference represents an object that might or might not be accessible.","pos":[2034,2110]},{"content":"Structures","pos":[2121,2131]},{"content":"Name","pos":[2138,2142]},{"content":"Description","pos":[2143,2154]},{"content":"ArgTraits Structure","pos":[2193,2212]},{"content":"Declares a specified delegate interface and an anonymous member function that has a specified number of parameters.","pos":[2249,2364]},{"content":"ArgTraitsHelper Structure","pos":[2370,2395]},{"content":"Helps define common characteristics of delegate arguments.","pos":[2438,2496]},{"content":"BoolStruct Structure","pos":[2502,2522]},{"content":"Defines whether a ComPtr is managing the object lifetime of an interface.","pos":[2560,2633]},{"content":"BoolStruct is used internally by the <bpt id=\"p1\">[</bpt>BoolType()<ept id=\"p1\">](../windows/comptr-operator-microsoft-wrl-details-booltype-operator.md)</ept> operator.","pos":[2634,2764],"source":" BoolStruct is used internally by the [BoolType()](../windows/comptr-operator-microsoft-wrl-details-booltype-operator.md) operator."},{"content":"CreatorMap Structure","pos":[2770,2790]},{"content":"Contains information about how to initialize, register, and unregister objects.","pos":[2828,2907]},{"content":"DerefHelper Structure","pos":[2913,2934]},{"pos":[2973,3037],"content":"Represent a dereferenced pointer to the <ph id=\"ph1\">`T*`</ph> template parameter.","source":"Represent a dereferenced pointer to the `T*` template parameter."},{"content":"EnableIf Structure","pos":[3043,3061]},{"pos":[3097,3226],"content":"Defines a data member of the type specified by the second template parameter if the first template parameter evaluates to <ph id=\"ph1\">`true`</ph>.","source":"Defines a data member of the type specified by the second template parameter if the first template parameter evaluates to `true`."},{"content":"FactoryCache Structure","pos":[3232,3254]},{"pos":[3294,3449],"content":"Contains the location of a class factory and a value that identifies a registered <ph id=\"ph1\">[!INCLUDE[wrt](../atl/reference/includes/wrt_md.md)]</ph> or COM class object.","source":"Contains the location of a class factory and a value that identifies a registered [!INCLUDE[wrt](../atl/reference/includes/wrt_md.md)] or COM class object."},{"content":"ImplementsBase Structure","pos":[3455,3479]},{"pos":[3521,3625],"content":"Used to validate template parameter types in <bpt id=\"p1\">[</bpt>Implements Structure<ept id=\"p1\">](../windows/implements-structure.md)</ept>.","source":"Used to validate template parameter types in [Implements Structure](../windows/implements-structure.md)."},{"content":"ImplementsHelper Structure","pos":[3631,3657]},{"pos":[3701,3780],"content":"Helps implement the <bpt id=\"p1\">[</bpt>Implements<ept id=\"p1\">](../windows/implements-structure.md)</ept> structure.","source":"Helps implement the [Implements](../windows/implements-structure.md) structure."},{"content":"InterfaceList Structure","pos":[3786,3809]},{"content":"Used to create a recursive list of interfaces.","pos":[3850,3896]},{"content":"InterfaceListHelper Structure","pos":[3902,3931]},{"pos":[3978,4076],"content":"Builds an <ph id=\"ph1\">`InterfaceList`</ph> type by recursively applying the specified template parameter arguments.","source":"Builds an `InterfaceList` type by recursively applying the specified template parameter arguments."},{"content":"InterfaceTraits Structure","pos":[4082,4107]},{"content":"Implements common characteristics of an interface.","pos":[4150,4200]},{"content":"InvokeHelper Structure","pos":[4206,4228]},{"content":"Provides an implementation of the Invoke() method based on the specified number and type of arguments.","pos":[4268,4370]},{"content":"IsBaseOfStrict Structure","pos":[4376,4400]},{"content":"Tests whether one type is the base of another.","pos":[4442,4488]},{"content":"IsSame Structure","pos":[4494,4510]},{"content":"Tests whether one specified type is the same as another specified type.","pos":[4544,4615]},{"content":"Nil Structure","pos":[4621,4634]},{"content":"Used to indicate an unspecified, optional template parameter.","pos":[4665,4726]},{"content":"RemoveReference Structure","pos":[4732,4757]},{"content":"Strips the reference or rvalue-reference trait from the specified class template parameter.","pos":[4800,4891]},{"content":"RuntimeClassBase Structure","pos":[4897,4923]},{"pos":[4967,5049],"content":"Used to detect <ph id=\"ph1\">`RuntimeClass`</ph> in the <bpt id=\"p1\">[</bpt>Make<ept id=\"p1\">](../windows/make-function.md)</ept> function.","source":"Used to detect `RuntimeClass` in the [Make](../windows/make-function.md) function."},{"content":"RuntimeClassBaseT Structure","pos":[5055,5082]},{"pos":[5127,5209],"content":"Provides helper methods for <ph id=\"ph1\">`QueryInterface`</ph> operations and getting interface IDs.","source":"Provides helper methods for `QueryInterface` operations and getting interface IDs."},{"content":"VerifyInheritanceHelper Structure","pos":[5215,5248]},{"content":"Tests whether one interface is derived from another interface.","pos":[5299,5361]},{"content":"VerifyInterfaceHelper Structure","pos":[5367,5398]},{"content":"Verifies that the interface specified by the template parameter meets certain requirements.","pos":[5447,5538]},{"content":"Enumerations","pos":[5549,5561]},{"content":"Name","pos":[5568,5572]},{"content":"Description","pos":[5573,5584]},{"content":"AsyncStatusInternal Enumeration","pos":[5623,5654]},{"pos":[5703,5851],"content":"Specifies a mapping between internal enumerations for the state of asynchronous operations and the <bpt id=\"p1\">**</bpt>Windows::Foundation::AsyncStatus<ept id=\"p1\">**</ept> enumeration.","source":"Specifies a mapping between internal enumerations for the state of asynchronous operations and the **Windows::Foundation::AsyncStatus** enumeration."},{"content":"Functions","pos":[5862,5871]},{"content":"Name","pos":[5878,5882]},{"content":"Description","pos":[5883,5894]},{"content":"ActivationFactoryCallback Function","pos":[5933,5967]},{"content":"Gets the activation factory for the specified activation ID.","pos":[6019,6079]},{"content":"Move Function","pos":[6085,6098]},{"content":"Moves the specified argument from one location to another.","pos":[6129,6187]},{"content":"RaiseException Function","pos":[6193,6216]},{"content":"Raises an exception in the calling thread.","pos":[6257,6299]},{"content":"Swap Function (Windows Runtime C++ Template Library)","pos":[6305,6357]},{"content":"Exchanges the values of the two specified arguments.","pos":[6425,6477]},{"content":"TerminateMap Function","pos":[6483,6504]},{"content":"Shuts down the class factories in the specified module.","pos":[6543,6598]},{"content":"Requirements","pos":[6608,6620]},{"pos":[6624,6721],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> async.h, client.h, corewrappers.h, event.h, ftm.h, implements.h, internal.h, module.h","source":"**Header:** async.h, client.h, corewrappers.h, event.h, ftm.h, implements.h, internal.h, module.h"},{"pos":[6728,6766],"content":"<bpt id=\"p1\">**</bpt>Namespace:<ept id=\"p1\">**</ept> Microsoft::WRL::Details","source":"**Namespace:** Microsoft::WRL::Details"},{"content":"See Also","pos":[6775,6783]},{"content":"Microsoft::WRL Namespace","pos":[6788,6812]},{"content":"Microsoft::WRL::Wrappers Namespace","pos":[6858,6892]}],"content":"---\ntitle: \"Microsoft::WRL::Details Namespace | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\ndev_langs: \n  - \"C++\"\nms.assetid: d71fe149-d804-4c6f-961d-43fe21ef8630\ncaps.latest.revision: 7\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"ru-ru\"\n  - \"zh-cn\"\n  - \"zh-tw\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"tr-tr\"\n---\n# Microsoft::WRL::Details Namespace\nSupports the WRL infrastructure and is not intended to be used directly from your code.  \n  \n## Syntax  \n  \n```  \nnamespace Microsoft::WRL::Details;  \n```  \n  \n## Members  \n  \n### Classes  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[ComPtrRef Class](../windows/comptrref-class.md)|Represents a reference to an object of type ComPtr\\<T>.|  \n|[ComPtrRefBase Class](../windows/comptrrefbase-class.md)|Represents the base class for the [ComPtrRef](../windows/comptrref-class.md) class.|  \n|[DontUseNewUseMake Class](../windows/dontusenewusemake-class.md)|Prevents using operator `new` in `RuntimeClass`. Consequently, you must use the [Make function](../windows/make-function.md) instead.|  \n|[EventTargetArray Class](../windows/eventtargetarray-class.md)|Represents an array of event handlers.|  \n|[MakeAllocator Class](../windows/makeallocator-class.md)|Allocates memory for an activatable class, with or without weak reference support.|  \n|[ModuleBase Class](../windows/modulebase-class.md)|Represents the base class of the [Module](../windows/module-class.md) classes.|  \n|[RemoveIUnknown Class](../windows/removeiunknown-class.md)|Makes a type that is equivalent to an `IUnknown`-based type, but has non-virtual `QueryInterface`, `AddRef`, and `Release` methods.|  \n|[WeakReference Class](../windows/weakreference-class1.md)|Represents a *weak reference* that can be used with the Windows Runtime or classic COM. A weak reference represents an object that might or might not be accessible.|  \n  \n### Structures  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[ArgTraits Structure](../windows/argtraits-structure.md)|Declares a specified delegate interface and an anonymous member function that has a specified number of parameters.|  \n|[ArgTraitsHelper Structure](../windows/argtraitshelper-structure.md)|Helps define common characteristics of delegate arguments.|  \n|[BoolStruct Structure](../windows/boolstruct-structure.md)|Defines whether a ComPtr is managing the object lifetime of an interface. BoolStruct is used internally by the [BoolType()](../windows/comptr-operator-microsoft-wrl-details-booltype-operator.md) operator.|  \n|[CreatorMap Structure](../windows/creatormap-structure.md)|Contains information about how to initialize, register, and unregister objects.|  \n|[DerefHelper Structure](../windows/derefhelper-structure.md)|Represent a dereferenced pointer to the `T*` template parameter.|  \n|[EnableIf Structure](../windows/enableif-structure.md)|Defines a data member of the type specified by the second template parameter if the first template parameter evaluates to `true`.|  \n|[FactoryCache Structure](../windows/factorycache-structure.md)|Contains the location of a class factory and a value that identifies a registered [!INCLUDE[wrt](../atl/reference/includes/wrt_md.md)] or COM class object.|  \n|[ImplementsBase Structure](../windows/implementsbase-structure.md)|Used to validate template parameter types in [Implements Structure](../windows/implements-structure.md).|  \n|[ImplementsHelper Structure](../windows/implementshelper-structure.md)|Helps implement the [Implements](../windows/implements-structure.md) structure.|  \n|[InterfaceList Structure](../windows/interfacelist-structure.md)|Used to create a recursive list of interfaces.|  \n|[InterfaceListHelper Structure](../windows/interfacelisthelper-structure.md)|Builds an `InterfaceList` type by recursively applying the specified template parameter arguments.|  \n|[InterfaceTraits Structure](../windows/interfacetraits-structure.md)|Implements common characteristics of an interface.|  \n|[InvokeHelper Structure](../windows/invokehelper-structure.md)|Provides an implementation of the Invoke() method based on the specified number and type of arguments.|  \n|[IsBaseOfStrict Structure](../windows/isbaseofstrict-structure.md)|Tests whether one type is the base of another.|  \n|[IsSame Structure](../windows/issame-structure.md)|Tests whether one specified type is the same as another specified type.|  \n|[Nil Structure](../windows/nil-structure.md)|Used to indicate an unspecified, optional template parameter.|  \n|[RemoveReference Structure](../windows/removereference-structure.md)|Strips the reference or rvalue-reference trait from the specified class template parameter.|  \n|[RuntimeClassBase Structure](../windows/runtimeclassbase-structure.md)|Used to detect `RuntimeClass` in the [Make](../windows/make-function.md) function.|  \n|[RuntimeClassBaseT Structure](../windows/runtimeclassbaset-structure.md)|Provides helper methods for `QueryInterface` operations and getting interface IDs.|  \n|[VerifyInheritanceHelper Structure](../windows/verifyinheritancehelper-structure.md)|Tests whether one interface is derived from another interface.|  \n|[VerifyInterfaceHelper Structure](../windows/verifyinterfacehelper-structure.md)|Verifies that the interface specified by the template parameter meets certain requirements.|  \n  \n### Enumerations  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[AsyncStatusInternal Enumeration](../windows/asyncstatusinternal-enumeration.md)|Specifies a mapping between internal enumerations for the state of asynchronous operations and the **Windows::Foundation::AsyncStatus** enumeration.|  \n  \n### Functions  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[ActivationFactoryCallback Function](../windows/activationfactorycallback-function.md)|Gets the activation factory for the specified activation ID.|  \n|[Move Function](../windows/move-function.md)|Moves the specified argument from one location to another.|  \n|[RaiseException Function](../windows/raiseexception-function.md)|Raises an exception in the calling thread.|  \n|[Swap Function (Windows Runtime C++ Template Library)](../windows/swap-function-windows-runtime-cpp-template-library.md)|Exchanges the values of the two specified arguments.|  \n|[TerminateMap Function](../windows/terminatemap-function.md)|Shuts down the class factories in the specified module.|  \n  \n## Requirements  \n **Header:** async.h, client.h, corewrappers.h, event.h, ftm.h, implements.h, internal.h, module.h  \n  \n **Namespace:** Microsoft::WRL::Details  \n  \n## See Also  \n [Microsoft::WRL Namespace](../windows/microsoft-wrl-namespace.md)   \n [Microsoft::WRL::Wrappers Namespace](../windows/microsoft-wrl-wrappers-namespace.md)"}