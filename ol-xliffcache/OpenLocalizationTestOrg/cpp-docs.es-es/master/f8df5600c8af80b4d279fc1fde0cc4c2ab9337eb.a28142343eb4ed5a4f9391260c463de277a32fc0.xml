{"nodes":[{"pos":[12,51],"content":"short_vector Structure | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"short_vector Structure | Microsoft Docs","pos":[0,39]}]},{"content":"short_vector Structure","pos":[631,653]},{"content":"short_vector provides metaprogramming definitions which are useful for programming short vectors generically.","pos":[654,763]},{"content":"Syntax","pos":[772,778]},{"content":"Parameters","pos":[2010,2020]},{"content":"Members","pos":[2058,2065]},{"content":"Public Typedefs","pos":[2075,2090]},{"content":"Name","pos":[2097,2101]},{"content":"Description","pos":[2102,2113]},{"content":"Public Constructors","pos":[2169,2188]},{"content":"Name","pos":[2195,2199]},{"content":"Description","pos":[2200,2211]},{"content":"short_vector::short_vector Constructor","pos":[2250,2288]},{"content":"Inheritance Hierarchy","pos":[2307,2328]},{"content":"Requirements","pos":[2355,2367]},{"pos":[2371,2402],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> amp_short_vectors.h","source":"**Header:** amp_short_vectors.h"},{"pos":[2409,2445],"content":"<bpt id=\"p1\">**</bpt>Namespace:<ept id=\"p1\">**</ept> Concurrency::graphics","source":"**Namespace:** Concurrency::graphics"},{"pos":[2476,2514],"content":"short_vector::short_vector Constructor"},{"content":"See Also","pos":[2554,2562]},{"content":"Concurrency::graphics Namespace","pos":[2567,2598]}],"content":"---\ntitle: \"short_vector Structure | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"amp_short_vectors/Concurrency::graphics::short_vector\"\ndev_langs: \n  - \"C++\"\nms.assetid: e4f50b8f-1150-437d-b58c-79c5fb883708\ncaps.latest.revision: 7\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"ru-ru\"\n  - \"zh-cn\"\n  - \"zh-tw\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"tr-tr\"\n---\n# short_vector Structure\nshort_vector provides metaprogramming definitions which are useful for programming short vectors generically.  \n  \n## Syntax  \n  \n```  \ntemplate<\n    typename _Scalar_type,  \n    int _Size  \n>  \nstruct short_vector;  \ntemplate<>  \nstruct short_vector<unsigned int, 1>;  \ntemplate<>  \nstruct short_vector<unsigned int, 2>;  \ntemplate<>  \nstruct short_vector<unsigned int, 3>;  \ntemplate<>  \nstruct short_vector<unsigned int, 4>;  \ntemplate<>  \nstruct short_vector<int, 1>;  \ntemplate<>  \nstruct short_vector<int, 2>;  \ntemplate<>  \nstruct short_vector<int, 3>;  \ntemplate<>  \nstruct short_vector<int, 4>;  \ntemplate<>  \nstruct short_vector<float, 1>;  \ntemplate<>  \nstruct short_vector<float, 2>;  \ntemplate<>  \nstruct short_vector<float, 3>;  \ntemplate<>  \nstruct short_vector<float, 4>;  \ntemplate<>  \nstruct short_vector<unorm, 1>;  \ntemplate<>  \nstruct short_vector<unorm, 2>;  \ntemplate<>  \nstruct short_vector<unorm, 3>;  \ntemplate<>  \nstruct short_vector<unorm, 4>;  \ntemplate<>  \nstruct short_vector<norm, 1>;  \ntemplate<>  \nstruct short_vector<norm, 2>;  \ntemplate<>  \nstruct short_vector<norm, 3>;  \ntemplate<>  \nstruct short_vector<norm, 4>;  \ntemplate<>  \nstruct short_vector<double, 1>;  \ntemplate<>  \nstruct short_vector<double, 2>;  \ntemplate<>  \nstruct short_vector<double, 3>;  \ntemplate<>  \nstruct short_vector<double, 4>;  \n```  \n  \n#### Parameters  \n `_Scalar_type`  \n `_Size`  \n  \n## Members  \n  \n### Public Typedefs  \n  \n|Name|Description|  \n|----------|-----------------|  \n|`type`||  \n  \n### Public Constructors  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[short_vector::short_vector Constructor](#ctor)||  \n  \n## Inheritance Hierarchy  \n `short_vector`  \n  \n## Requirements  \n **Header:** amp_short_vectors.h  \n  \n **Namespace:** Concurrency::graphics  \n  \n##  <a name=\"ctor\"></a>  short_vector::short_vector Constructor  \n  \n```  \nshort_vector();\n```  \n  \n## See Also  \n [Concurrency::graphics Namespace](concurrency-graphics-namespace.md)\n"}