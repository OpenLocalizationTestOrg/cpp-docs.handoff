{"nodes":[{"pos":[12,52],"content":"COleObjectFactory Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"COleObjectFactory Class | Microsoft Docs","pos":[0,40]}]},{"content":"COleObjectFactory Class","pos":[836,859]},{"content":"Implements the OLE class factory, which creates OLE objects such as servers, automation objects, and documents.","pos":[860,971]},{"content":"Syntax","pos":[980,986]},{"content":"Members","pos":[1056,1063]},{"content":"Public Constructors","pos":[1073,1092]},{"content":"Name","pos":[1099,1103]},{"content":"Description","pos":[1104,1115]},{"content":"COleObjectFactory::COleObjectFactory","pos":[1154,1190]},{"pos":[1231,1271],"content":"Constructs a <ph id=\"ph1\">`COleObjectFactory`</ph> object.","source":"Constructs a `COleObjectFactory` object."},{"content":"Public Methods","pos":[1282,1296]},{"content":"Name","pos":[1303,1307]},{"content":"Description","pos":[1308,1319]},{"content":"COleObjectFactory::GetClassID","pos":[1358,1387]},{"content":"Returns the OLE class ID of the objects this factory creates.","pos":[1421,1482]},{"content":"COleObjectFactory::IsLicenseValid","pos":[1488,1521]},{"content":"Determines if the license of the control is valid.","pos":[1559,1609]},{"content":"COleObjectFactory::IsRegistered","pos":[1615,1646]},{"content":"Indicates whether the object factory is registered with the OLE system DLLs.","pos":[1682,1758]},{"content":"COleObjectFactory::Register","pos":[1764,1791]},{"content":"Registers this object factory with the OLE system DLLs.","pos":[1823,1878]},{"content":"COleObjectFactory::RegisterAll","pos":[1884,1914]},{"content":"Registers all of the application's object factories with OLE system DLLs.","pos":[1949,2022]},{"content":"COleObjectFactory::Revoke","pos":[2028,2053]},{"content":"Revokes this object factory's registration with the OLE system DLLs.","pos":[2083,2151]},{"content":"COleObjectFactory::RevokeAll","pos":[2157,2185]},{"content":"Revokes an application's object factories' registrations with the OLE system DLLs.","pos":[2218,2300]},{"content":"COleObjectFactory::UnregisterAll","pos":[2306,2338]},{"content":"Unregisters all of an application's object factories.","pos":[2375,2428]},{"content":"COleObjectFactory::UpdateRegistry","pos":[2434,2467]},{"content":"Registers this object factory with the OLE system registry.","pos":[2505,2564]},{"content":"COleObjectFactory::UpdateRegistryAll","pos":[2570,2606]},{"content":"Registers all of the application's object factories with the OLE system registry.","pos":[2647,2728]},{"content":"Protected Methods","pos":[2739,2756]},{"content":"Name","pos":[2763,2767]},{"content":"Description","pos":[2768,2779]},{"content":"COleObjectFactory::GetLicenseKey","pos":[2818,2850]},{"content":"Requests a unique key from the control's DLL.","pos":[2887,2932]},{"content":"COleObjectFactory::OnCreateObject","pos":[2938,2971]},{"content":"Called by the framework to create a new object of this factory's type.","pos":[3009,3079]},{"content":"COleObjectFactory::VerifyLicenseKey","pos":[3085,3120]},{"content":"Verifies that the key embedded in the control matches the key embedded in the container.","pos":[3160,3248]},{"content":"COleObjectFactory::VerifyUserLicense","pos":[3254,3290]},{"content":"Verifies that the control is licensed for design-time use.","pos":[3331,3389]},{"content":"Remarks","pos":[3399,3406]},{"pos":[3410,3500],"content":"The <ph id=\"ph1\">`COleObjectFactory`</ph> class has member functions for performing the following functions:","source":"The `COleObjectFactory` class has member functions for performing the following functions:"},{"content":"Managing the registration of objects.","pos":[3510,3547]},{"content":"Updating the OLE system register, as well as the run-time registration that informs OLE that objects are running and ready to receive messages.","pos":[3557,3700]},{"content":"Enforcing licensing by limiting use of the control to licensed developers at design time and to licensed applications at run time.","pos":[3710,3840]},{"content":"Registering control object factories with the OLE system registry.","pos":[3850,3916]},{"content":"For more information about object creation, see the articles <bpt id=\"p1\">[</bpt>Data Objects and Data Sources (OLE)<ept id=\"p1\">](../../mfc/data-objects-and-data-sources-ole.md)</ept> and <bpt id=\"p2\">[</bpt>Data Objects and Data Sources: Creation and Destruction<ept id=\"p2\">](../../mfc/data-objects-and-data-sources-creation-and-destruction.md)</ept>.","pos":[3923,4201],"source":"For more information about object creation, see the articles [Data Objects and Data Sources (OLE)](../../mfc/data-objects-and-data-sources-ole.md) and [Data Objects and Data Sources: Creation and Destruction](../../mfc/data-objects-and-data-sources-creation-and-destruction.md)."},{"content":"For more about registration, see the article <bpt id=\"p1\">[</bpt>Registration<ept id=\"p1\">](../../mfc/registration.md)</ept>.","pos":[4202,4289],"source":" For more about registration, see the article [Registration](../../mfc/registration.md)."},{"content":"Inheritance Hierarchy","pos":[4298,4319]},{"content":"CObject","pos":[4324,4331]},{"content":"CCmdTarget","pos":[4378,4388]},{"content":"Requirements","pos":[4465,4477]},{"pos":[4481,4502],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> afxdisp.h","source":"**Header:** afxdisp.h"},{"pos":[4565,4601],"content":"COleObjectFactory::COleObjectFactory"},{"pos":[4605,4733],"content":"Constructs a <ph id=\"ph1\">`COleObjectFactory`</ph> object, initializes it as an unregistered object factory, and adds it to the list of factories.","source":"Constructs a `COleObjectFactory` object, initializes it as an unregistered object factory, and adds it to the list of factories."},{"content":"Parameters","pos":[5037,5047]},{"content":"Reference to the OLE class ID this object factory represents.","pos":[5062,5123]},{"content":"Pointer to the run-time class of the C++ objects this factory can create.","pos":[5149,5222]},{"content":"Indicates whether a single instance of the application can support multiple instantiations.","pos":[5249,5340]},{"content":"If <bpt id=\"p1\">**</bpt>TRUE<ept id=\"p1\">**</ept>, multiple instances of the application are launched for each request to create an object.","pos":[5341,5442],"source":" If **TRUE**, multiple instances of the application are launched for each request to create an object."},{"content":"Contains one or more of the following flags:","pos":[5461,5505]},{"pos":[5513,5584],"content":"<bpt id=\"p1\">**</bpt>afxRegDefault<ept id=\"p1\">**</ept> Sets the threading model to ThreadingModel=Apartment.","source":"**afxRegDefault** Sets the threading model to ThreadingModel=Apartment."},{"pos":[5592,5694],"content":"<bpt id=\"p1\">**</bpt>afxRegInsertable<ept id=\"p1\">**</ept> Allows the control to appear in the <bpt id=\"p2\">**</bpt>Insert Object<ept id=\"p2\">**</ept> dialog box for OLE objects.","source":"**afxRegInsertable** Allows the control to appear in the **Insert Object** dialog box for OLE objects."},{"pos":[5729,5798],"content":"Sets the threading model in the registry to ThreadingModel=Apartment."},{"pos":[5806,5894],"content":"<bpt id=\"p1\">**</bpt>afxRegFreeThreading<ept id=\"p1\">**</ept> Sets the threading model in the registry to ThreadingModel=Free.","source":"**afxRegFreeThreading** Sets the threading model in the registry to ThreadingModel=Free."},{"content":"You can combine the two flags <ph id=\"ph1\">`afxRegApartmentThreading`</ph> and <ph id=\"ph2\">`afxRegFreeThreading`</ph> to set ThreadingModel=Both.","pos":[5905,6015],"source":"You can combine the two flags `afxRegApartmentThreading` and `afxRegFreeThreading` to set ThreadingModel=Both."},{"content":"See <bpt id=\"p1\">[</bpt>InprocServer32<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms682390)</ept> in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph> for more information on threading model registration.","pos":[6016,6209],"source":" See [InprocServer32](http://msdn.microsoft.com/library/windows/desktop/ms682390) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)] for more information on threading model registration."},{"pos":[6216,6318],"content":"`lpszProgID`  \nPointer to a string containing a verbal program identifier, such as \"Microsoft Excel.\"","leadings":[""," "],"nodes":[{"content":"Pointer to a string containing a verbal program identifier, such as \"Microsoft Excel.\"","pos":[15,101]}]},{"content":"Remarks","pos":[6328,6335]},{"content":"To use the object, however, you must register it.","pos":[6339,6388]},{"pos":[6395,6552],"content":"For more information, see <bpt id=\"p1\">[</bpt>CLSID Key<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms691424)</ept> in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"For more information, see [CLSID Key](http://msdn.microsoft.com/library/windows/desktop/ms691424) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"pos":[6608,6637],"content":"COleObjectFactory::GetClassID"},{"content":"Returns a reference to the OLE class ID this factory represents.","pos":[6641,6705]},{"content":"Return Value","pos":[6762,6774]},{"content":"Reference to the OLE class ID this factory represents.","pos":[6778,6832]},{"content":"Remarks","pos":[6842,6849]},{"pos":[6853,7010],"content":"For more information, see <bpt id=\"p1\">[</bpt>CLSID Key<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms691424)</ept> in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"For more information, see [CLSID Key](http://msdn.microsoft.com/library/windows/desktop/ms691424) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"pos":[7069,7101],"content":"COleObjectFactory::GetLicenseKey"},{"pos":[7105,7211],"content":"Requests a unique license key from the control's DLL and stores it in the <ph id=\"ph1\">`BSTR`</ph> pointed to by <ph id=\"ph2\">`pbstrKey`</ph>.","source":"Requests a unique license key from the control's DLL and stores it in the `BSTR` pointed to by `pbstrKey`."},{"content":"Parameters","pos":[7309,7319]},{"content":"Reserved for future use.","pos":[7339,7363]},{"content":"Pointer to a <ph id=\"ph1\">`BSTR`</ph> that will store the license key.","pos":[7384,7436],"source":" Pointer to a `BSTR` that will store the license key."},{"content":"Return Value","pos":[7446,7458]},{"pos":[7462,7525],"content":"Nonzero if the license-key string is not <bpt id=\"p1\">**</bpt>NULL<ept id=\"p1\">**</ept>; otherwise 0.","source":"Nonzero if the license-key string is not **NULL**; otherwise 0."},{"content":"Remarks","pos":[7535,7542]},{"content":"The default implementation of this function returns 0 and stores nothing in the <ph id=\"ph1\">`BSTR`</ph>.","pos":[7546,7633],"source":"The default implementation of this function returns 0 and stores nothing in the `BSTR`."},{"content":"If you use MFC ActiveX ControlWizard to create your project, ControlWizard supplies an override that retrieves the control's license key.","pos":[7634,7771]},{"pos":[7831,7864],"content":"COleObjectFactory::IsLicenseValid"},{"content":"Determines if the license of the control is valid.","pos":[7868,7918]},{"content":"Return Value","pos":[7966,7978]},{"content":"TRUE if successul; otherwise false.","pos":[7982,8017]},{"pos":[8075,8106],"content":"COleObjectFactory::IsRegistered"},{"content":"Returns a nonzero value if the factory is registered with the OLE system DLLs.","pos":[8110,8188]},{"content":"Return Value","pos":[8251,8263]},{"content":"Nonzero if the factory is registered; otherwise 0.","pos":[8267,8317]},{"pos":[8377,8410],"content":"COleObjectFactory::OnCreateObject"},{"content":"Called by the framework to create a new object.","pos":[8414,8461]},{"content":"Return Value","pos":[8524,8536]},{"content":"A pointer to the created object.","pos":[8540,8572]},{"content":"It can throw a memory exception if it fails.","pos":[8573,8617]},{"content":"Remarks","pos":[8627,8634]},{"pos":[8638,8802],"content":"Override this function to create the object from something other than the <bpt id=\"p1\">[</bpt>CRuntimeClass<ept id=\"p1\">](../../mfc/reference/cruntimeclass-structure.md)</ept> passed to the constructor.","source":"Override this function to create the object from something other than the [CRuntimeClass](../../mfc/reference/cruntimeclass-structure.md) passed to the constructor."},{"pos":[8856,8883],"content":"COleObjectFactory::Register"},{"content":"Registers this object factory with the OLE system DLLs.","pos":[8887,8942]},{"content":"Return Value","pos":[8992,9004]},{"content":"Nonzero if the factory is successfully registered; otherwise 0.","pos":[9008,9071]},{"content":"Remarks","pos":[9081,9088]},{"pos":[9092,9244],"content":"This function is usually called by <bpt id=\"p1\">[</bpt>CWinApp::InitInstance<ept id=\"p1\">](../../mfc/reference/cwinapp-class.md#cwinapp__initinstance)</ept> when the application is launched.","source":"This function is usually called by [CWinApp::InitInstance](../../mfc/reference/cwinapp-class.md#cwinapp__initinstance) when the application is launched."},{"pos":[9301,9331],"content":"COleObjectFactory::RegisterAll"},{"content":"Registers all of the application's object factories with the OLE system DLLs.","pos":[9335,9412]},{"content":"Return Value","pos":[9471,9483]},{"content":"Nonzero if the factories are successfully registered; otherwise 0.","pos":[9487,9553]},{"content":"Remarks","pos":[9563,9570]},{"pos":[9574,9726],"content":"This function is usually called by <bpt id=\"p1\">[</bpt>CWinApp::InitInstance<ept id=\"p1\">](../../mfc/reference/cwinapp-class.md#cwinapp__initinstance)</ept> when the application is launched.","source":"This function is usually called by [CWinApp::InitInstance](../../mfc/reference/cwinapp-class.md#cwinapp__initinstance) when the application is launched."},{"pos":[9778,9803],"content":"COleObjectFactory::Revoke"},{"content":"Revokes this object factory's registration with the OLE system DLLs.","pos":[9807,9875]},{"content":"Remarks","pos":[9915,9922]},{"content":"The framework calls this function automatically before the application terminates.","pos":[9926,10008]},{"content":"If necessary, call it from an override of <bpt id=\"p1\">[</bpt>CWinApp::ExitInstance<ept id=\"p1\">](../../mfc/reference/cwinapp-class.md#cwinapp__exitinstance)</ept>.","pos":[10009,10135],"source":" If necessary, call it from an override of [CWinApp::ExitInstance](../../mfc/reference/cwinapp-class.md#cwinapp__exitinstance)."},{"pos":[10190,10218],"content":"COleObjectFactory::RevokeAll"},{"content":"Revokes all of the application's object factories' registrations with the OLE system DLLs.","pos":[10222,10312]},{"content":"Remarks","pos":[10369,10376]},{"content":"The framework calls this function automatically before the application terminates.","pos":[10380,10462]},{"content":"If necessary, call it from an override of <bpt id=\"p1\">[</bpt>CWinApp::ExitInstance<ept id=\"p1\">](../../mfc/reference/cwinapp-class.md#cwinapp__exitinstance)</ept>.","pos":[10463,10589],"source":" If necessary, call it from an override of [CWinApp::ExitInstance](../../mfc/reference/cwinapp-class.md#cwinapp__exitinstance)."},{"pos":[10648,10680],"content":"COleObjectFactory::UnregisterAll"},{"content":"Unregisters all of an application's object factories.","pos":[10684,10737]},{"content":"Return Value","pos":[10798,10810]},{"content":"TRUE if successful; otherwise FALSE.","pos":[10814,10850]},{"pos":[10910,10943],"content":"COleObjectFactory::UpdateRegistry"},{"content":"Registers all of the application's object factories with the OLE system registry.","pos":[10947,11028]},{"content":"Parameters","pos":[11149,11159]},{"content":"Pointer to a string containing the human-readable program identifier, such as \"Excel.Document.5.\"","pos":[11179,11276]},{"content":"Determines whether the control class's object factory is to be registered.","pos":[11298,11372]},{"content":"Remarks","pos":[11382,11389]},{"content":"Brief discussions of the two forms for this function follow:","pos":[11393,11453]},{"content":"<bpt id=\"p1\">**</bpt>UpdateRegistry(<ept id=\"p1\">**</ept> <ph id=\"ph1\">`lpszProgID`</ph> <bpt id=\"p2\">**</bpt>)<ept id=\"p2\">**</ept> Registers this object factory with the OLE system registry.","pos":[11461,11559],"source":"**UpdateRegistry(** `lpszProgID` **)** Registers this object factory with the OLE system registry."},{"content":"This function is usually called by <bpt id=\"p1\">[</bpt>CWinApp::InitInstance<ept id=\"p1\">](../../mfc/reference/cwinapp-class.md#cwinapp__initinstance)</ept> when the application is launched.","pos":[11560,11712],"source":" This function is usually called by [CWinApp::InitInstance](../../mfc/reference/cwinapp-class.md#cwinapp__initinstance) when the application is launched."},{"content":"<bpt id=\"p1\">**</bpt>UpdateRegistry(<ept id=\"p1\">**</ept> <ph id=\"ph1\">`bRegister`</ph> <bpt id=\"p2\">**</bpt>)<ept id=\"p2\">**</ept> This form of the function is overridable.","pos":[11720,11799],"source":"**UpdateRegistry(** `bRegister` **)** This form of the function is overridable."},{"content":"If <ph id=\"ph1\">`bRegister`</ph> is <bpt id=\"p1\">**</bpt>TRUE<ept id=\"p1\">**</ept>, this function registers the control class with the system registry.","pos":[11800,11895],"source":" If `bRegister` is **TRUE**, this function registers the control class with the system registry."},{"content":"Otherwise, it unregisters the class.","pos":[11896,11932]},{"content":"If you use MFC ActiveX ControlWizard to create your project, ControlWizard supplies an override to this pure virtual function.","pos":[11943,12069]},{"pos":[12132,12168],"content":"COleObjectFactory::UpdateRegistryAll"},{"content":"Registers all of the application's object factories with the OLE system registry.","pos":[12172,12253]},{"content":"Parameters","pos":[12339,12349]},{"content":"Determines whether the control class's object factory is to be registered.","pos":[12368,12442]},{"content":"Return Value","pos":[12452,12464]},{"content":"Nonzero if the factories are successfully updated; otherwise 0.","pos":[12468,12531]},{"content":"Remarks","pos":[12541,12548]},{"pos":[12552,12704],"content":"This function is usually called by <bpt id=\"p1\">[</bpt>CWinApp::InitInstance<ept id=\"p1\">](../../mfc/reference/cwinapp-class.md#cwinapp__initinstance)</ept> when the application is launched.","source":"This function is usually called by [CWinApp::InitInstance](../../mfc/reference/cwinapp-class.md#cwinapp__initinstance) when the application is launched."},{"pos":[12766,12801],"content":"COleObjectFactory::VerifyLicenseKey"},{"content":"Verifies that the container is licensed to use the OLE control.","pos":[12805,12868]},{"content":"Parameters","pos":[12938,12948]},{"content":"A <ph id=\"ph1\">`BSTR`</ph> storing the container's version of the license string.","pos":[12965,13028],"source":" A `BSTR` storing the container's version of the license string."},{"content":"Return Value","pos":[13038,13050]},{"content":"Nonzero if the run-time license is valid; otherwise 0.","pos":[13054,13108]},{"content":"Remarks","pos":[13118,13125]},{"content":"The default version calls <bpt id=\"p1\">[</bpt>GetLicenseKey<ept id=\"p1\">](#coleobjectfactory__getlicensekey)</ept> to get a copy of the control's license string and compares it with the string in <ph id=\"ph1\">`bstrKey`</ph>.","pos":[13129,13297],"source":"The default version calls [GetLicenseKey](#coleobjectfactory__getlicensekey) to get a copy of the control's license string and compares it with the string in `bstrKey`."},{"content":"If the two strings match, the function returns a nonzero value; otherwise it returns 0.","pos":[13298,13385]},{"content":"You can override this function to provide customized verification of the license.","pos":[13392,13473]},{"pos":[13480,13585],"content":"The function <bpt id=\"p1\">[</bpt>VerifyUserLicense<ept id=\"p1\">](#coleobjectfactory__verifyuserlicense)</ept> verifies the design-time license.","source":"The function [VerifyUserLicense](#coleobjectfactory__verifyuserlicense) verifies the design-time license."},{"pos":[13648,13684],"content":"COleObjectFactory::VerifyUserLicense"},{"content":"Verifies the design-time license for the OLE control.","pos":[13688,13741]},{"content":"Return Value","pos":[13800,13812]},{"content":"Nonzero if the design-time license is valid; otherwise 0.","pos":[13816,13873]},{"content":"See Also","pos":[13882,13890]},{"content":"CCmdTarget Class","pos":[13895,13911]},{"content":"Hierarchy Chart","pos":[13959,13974]},{"content":"COleTemplateServer Class","pos":[14011,14035]}],"content":"---\ntitle: \"COleObjectFactory Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"COleObjectFactory\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"OLE, class factory\"\n  - \"OLE class factory\"\n  - \"COleObjectFactory class\"\n  - \"objects [C++], creating OLE\"\n  - \"OLE objects\"\n  - \"object creation, OLE objects\"\n  - \"class factories, COleObjectFactory class\"\n  - \"OLE objects, creating\"\nms.assetid: ab179c1e-4af2-44aa-a576-37c48149b427\ncaps.latest.revision: 21\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# COleObjectFactory Class\nImplements the OLE class factory, which creates OLE objects such as servers, automation objects, and documents.  \n  \n## Syntax  \n  \n```  \nclass COleObjectFactory : public CCmdTarget  \n```  \n  \n## Members  \n  \n### Public Constructors  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[COleObjectFactory::COleObjectFactory](#coleobjectfactory__coleobjectfactory)|Constructs a `COleObjectFactory` object.|  \n  \n### Public Methods  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[COleObjectFactory::GetClassID](#coleobjectfactory__getclassid)|Returns the OLE class ID of the objects this factory creates.|  \n|[COleObjectFactory::IsLicenseValid](#coleobjectfactory__islicensevalid)|Determines if the license of the control is valid.|  \n|[COleObjectFactory::IsRegistered](#coleobjectfactory__isregistered)|Indicates whether the object factory is registered with the OLE system DLLs.|  \n|[COleObjectFactory::Register](#coleobjectfactory__register)|Registers this object factory with the OLE system DLLs.|  \n|[COleObjectFactory::RegisterAll](#coleobjectfactory__registerall)|Registers all of the application's object factories with OLE system DLLs.|  \n|[COleObjectFactory::Revoke](#coleobjectfactory__revoke)|Revokes this object factory's registration with the OLE system DLLs.|  \n|[COleObjectFactory::RevokeAll](#coleobjectfactory__revokeall)|Revokes an application's object factories' registrations with the OLE system DLLs.|  \n|[COleObjectFactory::UnregisterAll](#coleobjectfactory__unregisterall)|Unregisters all of an application's object factories.|  \n|[COleObjectFactory::UpdateRegistry](#coleobjectfactory__updateregistry)|Registers this object factory with the OLE system registry.|  \n|[COleObjectFactory::UpdateRegistryAll](#coleobjectfactory__updateregistryall)|Registers all of the application's object factories with the OLE system registry.|  \n  \n### Protected Methods  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[COleObjectFactory::GetLicenseKey](#coleobjectfactory__getlicensekey)|Requests a unique key from the control's DLL.|  \n|[COleObjectFactory::OnCreateObject](#coleobjectfactory__oncreateobject)|Called by the framework to create a new object of this factory's type.|  \n|[COleObjectFactory::VerifyLicenseKey](#coleobjectfactory__verifylicensekey)|Verifies that the key embedded in the control matches the key embedded in the container.|  \n|[COleObjectFactory::VerifyUserLicense](#coleobjectfactory__verifyuserlicense)|Verifies that the control is licensed for design-time use.|  \n  \n## Remarks  \n The `COleObjectFactory` class has member functions for performing the following functions:  \n  \n-   Managing the registration of objects.  \n  \n-   Updating the OLE system register, as well as the run-time registration that informs OLE that objects are running and ready to receive messages.  \n  \n-   Enforcing licensing by limiting use of the control to licensed developers at design time and to licensed applications at run time.  \n  \n-   Registering control object factories with the OLE system registry.  \n  \n For more information about object creation, see the articles [Data Objects and Data Sources (OLE)](../../mfc/data-objects-and-data-sources-ole.md) and [Data Objects and Data Sources: Creation and Destruction](../../mfc/data-objects-and-data-sources-creation-and-destruction.md). For more about registration, see the article [Registration](../../mfc/registration.md).  \n  \n## Inheritance Hierarchy  \n [CObject](../../mfc/reference/cobject-class.md)  \n  \n [CCmdTarget](../../mfc/reference/ccmdtarget-class.md)  \n  \n `COleObjectFactory`  \n  \n## Requirements  \n **Header:** afxdisp.h  \n  \n##  <a name=\"coleobjectfactory__coleobjectfactory\"></a>  COleObjectFactory::COleObjectFactory  \n Constructs a `COleObjectFactory` object, initializes it as an unregistered object factory, and adds it to the list of factories.  \n  \n```  \nCOleObjectFactory(\n    REFCLSID clsid,  \n    CRuntimeClass* pRuntimeClass,  \n    BOOL bMultiInstance,  \n    LPCTSTR lpszProgID);\n\n \nCOleObjectFactory(\n    REFCLSID clsid,  \n    CRuntimeClass* pRuntimeClass,  \n    BOOL bMultiInstance,  \n    int nFlags,  \n    LPCTSTR lpszProgID);\n```  \n  \n### Parameters  \n `clsid`  \n Reference to the OLE class ID this object factory represents.  \n  \n `pRuntimeClass`  \n Pointer to the run-time class of the C++ objects this factory can create.  \n  \n `bMultiInstance`  \n Indicates whether a single instance of the application can support multiple instantiations. If **TRUE**, multiple instances of the application are launched for each request to create an object.  \n  \n `nFlags`  \n Contains one or more of the following flags:  \n  \n- **afxRegDefault** Sets the threading model to ThreadingModel=Apartment.  \n  \n- **afxRegInsertable** Allows the control to appear in the **Insert Object** dialog box for OLE objects.  \n  \n- `afxRegApartmentThreading` Sets the threading model in the registry to ThreadingModel=Apartment.  \n  \n- **afxRegFreeThreading** Sets the threading model in the registry to ThreadingModel=Free.  \n  \n     You can combine the two flags `afxRegApartmentThreading` and `afxRegFreeThreading` to set ThreadingModel=Both. See [InprocServer32](http://msdn.microsoft.com/library/windows/desktop/ms682390) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)] for more information on threading model registration.  \n  \n `lpszProgID`  \n Pointer to a string containing a verbal program identifier, such as \"Microsoft Excel.\"  \n  \n### Remarks  \n To use the object, however, you must register it.  \n  \n For more information, see [CLSID Key](http://msdn.microsoft.com/library/windows/desktop/ms691424) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n##  <a name=\"coleobjectfactory__getclassid\"></a>  COleObjectFactory::GetClassID  \n Returns a reference to the OLE class ID this factory represents.  \n  \n```  \nREFCLSID GetClassID() const;\n\n \n```  \n  \n### Return Value  \n Reference to the OLE class ID this factory represents.  \n  \n### Remarks  \n For more information, see [CLSID Key](http://msdn.microsoft.com/library/windows/desktop/ms691424) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n##  <a name=\"coleobjectfactory__getlicensekey\"></a>  COleObjectFactory::GetLicenseKey  \n Requests a unique license key from the control's DLL and stores it in the `BSTR` pointed to by `pbstrKey`.  \n  \n```  \nvirtual BOOL GetLicenseKey(\n    DWORD dwReserved,  \n    BSTR* pbstrKey);\n```  \n  \n### Parameters  \n `dwReserved`  \n Reserved for future use.  \n  \n `pbstrKey`  \n Pointer to a `BSTR` that will store the license key.  \n  \n### Return Value  \n Nonzero if the license-key string is not **NULL**; otherwise 0.  \n  \n### Remarks  \n The default implementation of this function returns 0 and stores nothing in the `BSTR`. If you use MFC ActiveX ControlWizard to create your project, ControlWizard supplies an override that retrieves the control's license key.  \n  \n##  <a name=\"coleobjectfactory__islicensevalid\"></a>  COleObjectFactory::IsLicenseValid  \n Determines if the license of the control is valid.  \n  \n```  \nBOOL IsLicenseValid();\n```  \n  \n### Return Value  \n TRUE if successul; otherwise false.  \n  \n##  <a name=\"coleobjectfactory__isregistered\"></a>  COleObjectFactory::IsRegistered  \n Returns a nonzero value if the factory is registered with the OLE system DLLs.  \n  \n```  \nvirtual BOOL IsRegistered() const;\n\n \n```  \n  \n### Return Value  \n Nonzero if the factory is registered; otherwise 0.  \n  \n##  <a name=\"coleobjectfactory__oncreateobject\"></a>  COleObjectFactory::OnCreateObject  \n Called by the framework to create a new object.  \n  \n```  \nvirtual CCmdTarget* OnCreateObject();\n```  \n  \n### Return Value  \n A pointer to the created object. It can throw a memory exception if it fails.  \n  \n### Remarks  \n Override this function to create the object from something other than the [CRuntimeClass](../../mfc/reference/cruntimeclass-structure.md) passed to the constructor.  \n  \n##  <a name=\"coleobjectfactory__register\"></a>  COleObjectFactory::Register  \n Registers this object factory with the OLE system DLLs.  \n  \n```  \nvirtual BOOL Register();\n```  \n  \n### Return Value  \n Nonzero if the factory is successfully registered; otherwise 0.  \n  \n### Remarks  \n This function is usually called by [CWinApp::InitInstance](../../mfc/reference/cwinapp-class.md#cwinapp__initinstance) when the application is launched.  \n  \n##  <a name=\"coleobjectfactory__registerall\"></a>  COleObjectFactory::RegisterAll  \n Registers all of the application's object factories with the OLE system DLLs.  \n  \n```  \nstatic BOOL PASCAL RegisterAll();\n```  \n  \n### Return Value  \n Nonzero if the factories are successfully registered; otherwise 0.  \n  \n### Remarks  \n This function is usually called by [CWinApp::InitInstance](../../mfc/reference/cwinapp-class.md#cwinapp__initinstance) when the application is launched.  \n  \n##  <a name=\"coleobjectfactory__revoke\"></a>  COleObjectFactory::Revoke  \n Revokes this object factory's registration with the OLE system DLLs.  \n  \n```  \nvoid Revoke();\n```  \n  \n### Remarks  \n The framework calls this function automatically before the application terminates. If necessary, call it from an override of [CWinApp::ExitInstance](../../mfc/reference/cwinapp-class.md#cwinapp__exitinstance).  \n  \n##  <a name=\"coleobjectfactory__revokeall\"></a>  COleObjectFactory::RevokeAll  \n Revokes all of the application's object factories' registrations with the OLE system DLLs.  \n  \n```  \nstatic void PASCAL RevokeAll();\n```  \n  \n### Remarks  \n The framework calls this function automatically before the application terminates. If necessary, call it from an override of [CWinApp::ExitInstance](../../mfc/reference/cwinapp-class.md#cwinapp__exitinstance).  \n  \n##  <a name=\"coleobjectfactory__unregisterall\"></a>  COleObjectFactory::UnregisterAll  \n Unregisters all of an application's object factories.  \n  \n```  \nstatic BOOL PASCAL UnregisterAll();\n```  \n  \n### Return Value  \n TRUE if successful; otherwise FALSE.  \n  \n##  <a name=\"coleobjectfactory__updateregistry\"></a>  COleObjectFactory::UpdateRegistry  \n Registers all of the application's object factories with the OLE system registry.  \n  \n```  \nvoid UpdateRegistry(LPCTSTR lpszProgID = NULL);\n\n \nvirtual BOOL UpdateRegistry(BOOL bRegister);\n```  \n  \n### Parameters  \n `lpszProgID`  \n Pointer to a string containing the human-readable program identifier, such as \"Excel.Document.5.\"  \n  \n `bRegister`  \n Determines whether the control class's object factory is to be registered.  \n  \n### Remarks  \n Brief discussions of the two forms for this function follow:  \n  \n- **UpdateRegistry(** `lpszProgID` **)** Registers this object factory with the OLE system registry. This function is usually called by [CWinApp::InitInstance](../../mfc/reference/cwinapp-class.md#cwinapp__initinstance) when the application is launched.  \n  \n- **UpdateRegistry(** `bRegister` **)** This form of the function is overridable. If `bRegister` is **TRUE**, this function registers the control class with the system registry. Otherwise, it unregisters the class.  \n  \n     If you use MFC ActiveX ControlWizard to create your project, ControlWizard supplies an override to this pure virtual function.  \n  \n##  <a name=\"coleobjectfactory__updateregistryall\"></a>  COleObjectFactory::UpdateRegistryAll  \n Registers all of the application's object factories with the OLE system registry.  \n  \n```  \nstatic BOOL PASCAL UpdateRegistryAll(BOOL bRegister = TRUE);\n```  \n  \n### Parameters  \n `bRegister`  \n Determines whether the control class's object factory is to be registered.  \n  \n### Return Value  \n Nonzero if the factories are successfully updated; otherwise 0.  \n  \n### Remarks  \n This function is usually called by [CWinApp::InitInstance](../../mfc/reference/cwinapp-class.md#cwinapp__initinstance) when the application is launched.  \n  \n##  <a name=\"coleobjectfactory__verifylicensekey\"></a>  COleObjectFactory::VerifyLicenseKey  \n Verifies that the container is licensed to use the OLE control.  \n  \n```  \nvirtual BOOL VerifyLicenseKey(BSTR bstrKey);\n```  \n  \n### Parameters  \n `bstrKey`  \n A `BSTR` storing the container's version of the license string.  \n  \n### Return Value  \n Nonzero if the run-time license is valid; otherwise 0.  \n  \n### Remarks  \n The default version calls [GetLicenseKey](#coleobjectfactory__getlicensekey) to get a copy of the control's license string and compares it with the string in `bstrKey`. If the two strings match, the function returns a nonzero value; otherwise it returns 0.  \n  \n You can override this function to provide customized verification of the license.  \n  \n The function [VerifyUserLicense](#coleobjectfactory__verifyuserlicense) verifies the design-time license.  \n  \n##  <a name=\"coleobjectfactory__verifyuserlicense\"></a>  COleObjectFactory::VerifyUserLicense  \n Verifies the design-time license for the OLE control.  \n  \n```  \nvirtual BOOL VerifyUserLicense();\n```  \n  \n### Return Value  \n Nonzero if the design-time license is valid; otherwise 0.  \n  \n## See Also  \n [CCmdTarget Class](../../mfc/reference/ccmdtarget-class.md)   \n [Hierarchy Chart](../../mfc/hierarchy-chart.md)   \n [COleTemplateServer Class](../../mfc/reference/coletemplateserver-class.md)\n"}