{"nodes":[{"pos":[12,39],"content":"join Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"join Class | Microsoft Docs","pos":[0,27]}]},{"pos":[604,614],"content":"join Class","linkify":"join Class","nodes":[{"content":"join Class","pos":[0,10]}]},{"pos":[615,771],"content":"A <ph id=\"ph1\">`join`</ph> messaging block is a single-target, multi-source, ordered <ph id=\"ph2\">`propagator_block`</ph> which combines together messages of type <ph id=\"ph3\">`T`</ph> from each of its sources.","source":"A `join` messaging block is a single-target, multi-source, ordered `propagator_block` which combines together messages of type `T` from each of its sources."},{"pos":[780,786],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[986,996],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"The payload type of the messages joined and propagated by the block.","pos":[1007,1075]},{"content":"The kind of <ph id=\"ph1\">`join`</ph> block this is, either <ph id=\"ph2\">`greedy`</ph> or <ph id=\"ph3\">`non_greedy`</ph>","pos":[1094,1159],"source":" The kind of `join` block this is, either `greedy` or `non_greedy`"},{"pos":[1168,1175],"content":"Members","linkify":"Members","nodes":[{"content":"Members","pos":[0,7]}]},{"pos":[1185,1204],"content":"Public Constructors","linkify":"Public Constructors","nodes":[{"content":"Public Constructors","pos":[0,19]}]},{"content":"Name","pos":[1211,1215]},{"content":"Description","pos":[1216,1227]},{"pos":[1265,1296],"content":"<bpt id=\"p1\">[</bpt>join::join Constructor<ept id=\"p1\">](#ctor)</ept>","source":"[join::join Constructor](#ctor)"},{"content":"Overloaded.","pos":[1297,1308]},{"content":"Constructs a <ph id=\"ph1\">`join`</ph> messaging block.","pos":[1309,1345],"source":" Constructs a `join` messaging block."},{"pos":[1350,1381],"content":"<bpt id=\"p1\">[</bpt>join::~join Destructor<ept id=\"p1\">](#dtor)</ept>","source":"[join::~join Destructor](#dtor)"},{"pos":[1382,1408],"content":"Destroys the <ph id=\"ph1\">`join`</ph> block.","source":"Destroys the `join` block."},{"pos":[1419,1436],"content":"Protected Methods","linkify":"Protected Methods","nodes":[{"content":"Protected Methods","pos":[0,17]}]},{"content":"Name","pos":[1443,1447]},{"content":"Description","pos":[1448,1459]},{"pos":[1497,1543],"content":"<bpt id=\"p1\">[</bpt>join::accept_message Method<ept id=\"p1\">](#accept_message)</ept>","source":"[join::accept_message Method](#accept_message)"},{"pos":[1544,1648],"content":"Accepts a message that was offered by this <ph id=\"ph1\">`join`</ph> messaging block, transferring ownership to the caller.","source":"Accepts a message that was offered by this `join` messaging block, transferring ownership to the caller."},{"pos":[1653,1701],"content":"<bpt id=\"p1\">[</bpt>join::consume_message Method<ept id=\"p1\">](#consume_message)</ept>","source":"[join::consume_message Method](#consume_message)"},{"pos":[1702,1835],"content":"Consumes a message previously offered by the <ph id=\"ph1\">`join`</ph> messaging block and reserved by the target, transferring ownership to the caller.","source":"Consumes a message previously offered by the `join` messaging block and reserved by the target, transferring ownership to the caller."},{"pos":[1840,1906],"content":"<bpt id=\"p1\">[</bpt>join::link_target_notification Method<ept id=\"p1\">](#link_target_notification)</ept>","source":"[join::link_target_notification Method](#link_target_notification)"},{"pos":[1907,1997],"content":"A callback that notifies that a new target has been linked to this <ph id=\"ph1\">`join`</ph> messaging block.","source":"A callback that notifies that a new target has been linked to this `join` messaging block."},{"pos":[2002,2054],"content":"<bpt id=\"p1\">[</bpt>join::propagate_message Method<ept id=\"p1\">](#propagate_message)</ept>","source":"[join::propagate_message Method](#propagate_message)"},{"content":"Asynchronously passes a message from an <ph id=\"ph1\">`ISource`</ph> block to this <ph id=\"ph2\">`join`</ph> messaging block.","pos":[2055,2142],"source":"Asynchronously passes a message from an `ISource` block to this `join` messaging block."},{"content":"It is invoked by the <ph id=\"ph1\">`propagate`</ph> method, when called by a source block.","pos":[2143,2214],"source":" It is invoked by the `propagate` method, when called by a source block."},{"pos":[2219,2285],"content":"<bpt id=\"p1\">[</bpt>join::propagate_to_any_targets Method<ept id=\"p1\">](#propagate_to_any_targets)</ept>","source":"[join::propagate_to_any_targets Method](#propagate_to_any_targets)"},{"content":"Constructs an output message containing an input message from each source when they have all propagated a message.","pos":[2286,2400]},{"content":"Sends this output message out to each of its targets.","pos":[2401,2454]},{"pos":[2459,2507],"content":"<bpt id=\"p1\">[</bpt>join::release_message Method<ept id=\"p1\">](#release_message)</ept>","source":"[join::release_message Method](#release_message)"},{"content":"Releases a previous message reservation.","pos":[2508,2548]},{"content":"(Overrides <bpt id=\"p1\">[</bpt>source_block::release_message<ept id=\"p1\">](source-block-class.md#release_message)</ept>.)","pos":[2549,2632],"source":" (Overrides [source_block::release_message](source-block-class.md#release_message).)"},{"pos":[2637,2685],"content":"<bpt id=\"p1\">[</bpt>join::reserve_message Method<ept id=\"p1\">](#reserve_message)</ept>","source":"[join::reserve_message Method](#reserve_message)"},{"content":"Reserves a message previously offered by this <ph id=\"ph1\">`join`</ph> messaging block.","pos":[2686,2755],"source":"Reserves a message previously offered by this `join` messaging block."},{"content":"(Overrides <bpt id=\"p1\">[</bpt>source_block::reserve_message<ept id=\"p1\">](source-block-class.md#reserve_message)</ept>.)","pos":[2756,2839],"source":" (Overrides [source_block::reserve_message](source-block-class.md#reserve_message).)"},{"pos":[2844,2898],"content":"<bpt id=\"p1\">[</bpt>join::resume_propagation Method<ept id=\"p1\">](#resume_propagation)</ept>","source":"[join::resume_propagation Method](#resume_propagation)"},{"content":"Resumes propagation after a reservation has been released.","pos":[2899,2957]},{"content":"(Overrides <bpt id=\"p1\">[</bpt>source_block::resume_propagation<ept id=\"p1\">](source-block-class.md#resume_propagation)</ept>.)","pos":[2958,3047],"source":" (Overrides [source_block::resume_propagation](source-block-class.md#resume_propagation).)"},{"pos":[3057,3064],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[3068,3181],"content":"For more information, see <bpt id=\"p1\">[</bpt>Asynchronous Message Blocks<ept id=\"p1\">](../../../parallel/concrt/asynchronous-message-blocks.md)</ept>.","source":"For more information, see [Asynchronous Message Blocks](../../../parallel/concrt/asynchronous-message-blocks.md)."},{"pos":[3190,3211],"content":"Inheritance Hierarchy","linkify":"Inheritance Hierarchy","nodes":[{"content":"Inheritance Hierarchy","pos":[0,21]}]},{"pos":[3215,3242],"content":"<bpt id=\"p1\">[</bpt>ISource<ept id=\"p1\">](isource-class.md)</ept>","source":"[ISource](isource-class.md)"},{"pos":[3249,3276],"content":"<bpt id=\"p1\">[</bpt>ITarget<ept id=\"p1\">](itarget-class.md)</ept>","source":"[ITarget](itarget-class.md)"},{"pos":[3283,3320],"content":"<bpt id=\"p1\">[</bpt>source_block<ept id=\"p1\">](source-block-class.md)</ept>","source":"[source_block](source-block-class.md)"},{"pos":[3327,3372],"content":"<bpt id=\"p1\">[</bpt>propagator_block<ept id=\"p1\">](propagator-block-class.md)</ept>","source":"[propagator_block](propagator-block-class.md)"},{"pos":[3394,3406],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[3410,3430],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> agents.h","source":"**Header:** agents.h"},{"pos":[3437,3463],"content":"<bpt id=\"p1\">**</bpt>Namespace:<ept id=\"p1\">**</ept> concurrency","source":"**Namespace:** concurrency"},{"pos":[3473,3531],"content":"<bpt id=\"p1\">&lt;a name=\"accept_message\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  join::accept_message Method","linkify":"<a name=\"accept_message\"></a>  join::accept_message Method","source":"<a name=\"accept_message\"></a>  join::accept_message Method"},{"pos":[3535,3639],"content":"Accepts a message that was offered by this <ph id=\"ph1\">`join`</ph> messaging block, transferring ownership to the caller.","source":"Accepts a message that was offered by this `join` messaging block, transferring ownership to the caller."},{"pos":[3740,3750],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"The <ph id=\"ph1\">`runtime_object_identity`</ph> of the offered <ph id=\"ph2\">`message`</ph> object.","pos":[3766,3828],"source":" The `runtime_object_identity` of the offered `message` object."},{"pos":[3838,3850],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[3854,3925],"content":"A pointer to the <ph id=\"ph1\">`message`</ph> object that the caller now has ownership of.","source":"A pointer to the `message` object that the caller now has ownership of."},{"pos":[3935,3995],"content":"<bpt id=\"p1\">&lt;a name=\"consume_message\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  join::consume_message Method","linkify":"<a name=\"consume_message\"></a>  join::consume_message Method","source":"<a name=\"consume_message\"></a>  join::consume_message Method"},{"pos":[3999,4132],"content":"Consumes a message previously offered by the <ph id=\"ph1\">`join`</ph> messaging block and reserved by the target, transferring ownership to the caller.","source":"Consumes a message previously offered by the `join` messaging block and reserved by the target, transferring ownership to the caller."},{"pos":[4234,4244],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"The <ph id=\"ph1\">`runtime_object_identity`</ph> of the <ph id=\"ph2\">`message`</ph> object being consumed.","pos":[4260,4329],"source":" The `runtime_object_identity` of the `message` object being consumed."},{"pos":[4339,4351],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[4355,4426],"content":"A pointer to the <ph id=\"ph1\">`message`</ph> object that the caller now has ownership of.","source":"A pointer to the `message` object that the caller now has ownership of."},{"pos":[4436,4443],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[4447,4514],"content":"Similar to <ph id=\"ph1\">`accept`</ph>, but is always preceded by a call to <ph id=\"ph2\">`reserve`</ph>.","source":"Similar to `accept`, but is always preceded by a call to `reserve`."},{"pos":[4524,4567],"content":"<bpt id=\"p1\">&lt;a name=\"ctor\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  join::join Constructor","linkify":"<a name=\"ctor\"></a>  join::join Constructor","source":"<a name=\"ctor\"></a>  join::join Constructor"},{"pos":[4571,4607],"content":"Constructs a <ph id=\"ph1\">`join`</ph> messaging block.","source":"Constructs a `join` messaging block."},{"pos":[5045,5055],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"The number of inputs this <ph id=\"ph1\">`join`</ph> block will be allowed.","pos":[5075,5130],"source":" The number of inputs this `join` block will be allowed."},{"content":"A filter function which determines whether offered messages should be accepted.","pos":[5150,5229]},{"content":"The <ph id=\"ph1\">`Scheduler`</ph> object within which the propagation task for the <ph id=\"ph2\">`join`</ph> messaging block is scheduled.","pos":[5253,5354],"source":" The `Scheduler` object within which the propagation task for the `join` messaging block is scheduled."},{"content":"The <ph id=\"ph1\">`ScheduleGroup`</ph> object within which the propagation task for the <ph id=\"ph2\">`join`</ph> messaging block is scheduled.","pos":[5382,5487],"source":" The `ScheduleGroup` object within which the propagation task for the `join` messaging block is scheduled."},{"content":"The <ph id=\"ph1\">`Scheduler`</ph> object used is implied by the schedule group.","pos":[5488,5549],"source":" The `Scheduler` object used is implied by the schedule group."},{"pos":[5559,5566],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[5570,5681],"content":"The runtime uses the default scheduler if you do not specify the <ph id=\"ph1\">`_PScheduler`</ph> or <ph id=\"ph2\">`_PScheduleGroup`</ph> parameters.","source":"The runtime uses the default scheduler if you do not specify the `_PScheduler` or `_PScheduleGroup` parameters."},{"pos":[5688,5872],"content":"The type <ph id=\"ph1\">`filter_method`</ph> is a functor with signature <ph id=\"ph2\">`bool (T const &amp;)`</ph> which is invoked by this <ph id=\"ph3\">`join`</ph> messaging block to determine whether or not it should accept an offered message.","source":"The type `filter_method` is a functor with signature `bool (T const &)` which is invoked by this `join` messaging block to determine whether or not it should accept an offered message."},{"pos":[5882,5925],"content":"<bpt id=\"p1\">&lt;a name=\"dtor\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  join::~join Destructor","linkify":"<a name=\"dtor\"></a>  join::~join Destructor","source":"<a name=\"dtor\"></a>  join::~join Destructor"},{"pos":[5929,5955],"content":"Destroys the <ph id=\"ph1\">`join`</ph> block.","source":"Destroys the `join` block."},{"pos":[5987,6065],"content":"<bpt id=\"p1\">&lt;a name=\"link_target_notification\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  join::link_target_notification Method","linkify":"<a name=\"link_target_notification\"></a>  join::link_target_notification Method","source":"<a name=\"link_target_notification\"></a>  join::link_target_notification Method"},{"pos":[6069,6159],"content":"A callback that notifies that a new target has been linked to this <ph id=\"ph1\">`join`</ph> messaging block.","source":"A callback that notifies that a new target has been linked to this `join` messaging block."},{"pos":[6256,6320],"content":"<bpt id=\"p1\">&lt;a name=\"propagate_message\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  join::propagate_message Method","linkify":"<a name=\"propagate_message\"></a>  join::propagate_message Method","source":"<a name=\"propagate_message\"></a>  join::propagate_message Method"},{"content":"Asynchronously passes a message from an <ph id=\"ph1\">`ISource`</ph> block to this <ph id=\"ph2\">`join`</ph> messaging block.","pos":[6324,6411],"source":"Asynchronously passes a message from an `ISource` block to this `join` messaging block."},{"content":"It is invoked by the <ph id=\"ph1\">`propagate`</ph> method, when called by a source block.","pos":[6412,6483],"source":" It is invoked by the `propagate` method, when called by a source block."},{"pos":[6610,6620],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"A pointer to the <ph id=\"ph1\">`message`</ph> object.","pos":[6639,6673],"source":" A pointer to the `message` object."},{"content":"A pointer to the source block offering the message.","pos":[6694,6745]},{"pos":[6755,6767],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[6771,6883],"content":"A <bpt id=\"p1\">[</bpt>message_status<ept id=\"p1\">](concurrency-namespace-enums.md)</ept> indication of what the target decided to do with the message.","source":"A [message_status](concurrency-namespace-enums.md) indication of what the target decided to do with the message."},{"pos":[6893,6971],"content":"<bpt id=\"p1\">&lt;a name=\"propagate_to_any_targets\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  join::propagate_to_any_targets Method","linkify":"<a name=\"propagate_to_any_targets\"></a>  join::propagate_to_any_targets Method","source":"<a name=\"propagate_to_any_targets\"></a>  join::propagate_to_any_targets Method"},{"content":"Constructs an output message containing an input message from each source when they have all propagated a message.","pos":[6975,7089]},{"content":"Sends this output message out to each of its targets.","pos":[7090,7143]},{"pos":[7233,7293],"content":"<bpt id=\"p1\">&lt;a name=\"release_message\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  join::release_message Method","linkify":"<a name=\"release_message\"></a>  join::release_message Method","source":"<a name=\"release_message\"></a>  join::release_message Method"},{"content":"Releases a previous message reservation.","pos":[7297,7337]},{"pos":[7422,7432],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"The <ph id=\"ph1\">`runtime_object_identity`</ph> of the <ph id=\"ph2\">`message`</ph> object being released.","pos":[7448,7517],"source":" The `runtime_object_identity` of the `message` object being released."},{"pos":[7527,7587],"content":"<bpt id=\"p1\">&lt;a name=\"reserve_message\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  join::reserve_message Method","linkify":"<a name=\"reserve_message\"></a>  join::reserve_message Method","source":"<a name=\"reserve_message\"></a>  join::reserve_message Method"},{"pos":[7591,7660],"content":"Reserves a message previously offered by this <ph id=\"ph1\">`join`</ph> messaging block.","source":"Reserves a message previously offered by this `join` messaging block."},{"pos":[7745,7755],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"The <ph id=\"ph1\">`runtime_object_identity`</ph> of the offered <ph id=\"ph2\">`message`</ph> object.","pos":[7771,7833],"source":" The `runtime_object_identity` of the offered `message` object."},{"pos":[7843,7855],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[7859,7926],"content":"<ph id=\"ph1\">`true`</ph> if the message was successfully reserved, <ph id=\"ph2\">`false`</ph> otherwise.","source":"`true` if the message was successfully reserved, `false` otherwise."},{"pos":[7936,7943],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[7947,8092],"content":"After <ph id=\"ph1\">`reserve`</ph> is called, if it returns <ph id=\"ph2\">`true`</ph>, either <ph id=\"ph3\">`consume`</ph> or <ph id=\"ph4\">`release`</ph> must be called to either take or release ownership of the message.","source":"After `reserve` is called, if it returns `true`, either `consume` or `release` must be called to either take or release ownership of the message."},{"pos":[8102,8168],"content":"<bpt id=\"p1\">&lt;a name=\"resume_propagation\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  join::resume_propagation Method","linkify":"<a name=\"resume_propagation\"></a>  join::resume_propagation Method","source":"<a name=\"resume_propagation\"></a>  join::resume_propagation Method"},{"content":"Resumes propagation after a reservation has been released.","pos":[8172,8230]},{"pos":[8287,8295],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>concurrency Namespace<ept id=\"p1\">](concurrency-namespace.md)</ept><ph id=\"ph1\"> </ph>","pos":[8299,8349],"source":"[concurrency Namespace](concurrency-namespace.md) "},{"content":"<bpt id=\"p1\"> [</bpt>choice Class<ept id=\"p1\">](choice-class.md)</ept><ph id=\"ph1\"> </ph>","pos":[8352,8385],"source":" [choice Class](choice-class.md) "},{"content":"<bpt id=\"p1\"> [</bpt>multitype_join Class<ept id=\"p1\">](multitype-join-class.md)</ept>","pos":[8388,8436],"source":" [multitype_join Class](multitype-join-class.md)"}],"content":"---\ntitle: \"join Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"agents/concurrency::join\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"join class\"\nms.assetid: d2217119-70a1-40b6-809f-c1c13a571c3f\ncaps.latest.revision: 20\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# join Class\nA `join` messaging block is a single-target, multi-source, ordered `propagator_block` which combines together messages of type `T` from each of its sources.  \n  \n## Syntax  \n  \n```\ntemplate<class T,\n    join_type _Jtype = non_greedy>\nclass join : public propagator_block<single_link_registry<ITarget<std::vector<T>>>,\n    multi_link_registry<ISource<T>>>;\n```   \n  \n#### Parameters  \n `T`  \n The payload type of the messages joined and propagated by the block.  \n  \n `_Jtype`  \n The kind of `join` block this is, either `greedy` or `non_greedy`  \n  \n## Members  \n  \n### Public Constructors  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[join::join Constructor](#ctor)|Overloaded. Constructs a `join` messaging block.|  \n|[join::~join Destructor](#dtor)|Destroys the `join` block.|  \n  \n### Protected Methods  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[join::accept_message Method](#accept_message)|Accepts a message that was offered by this `join` messaging block, transferring ownership to the caller.|  \n|[join::consume_message Method](#consume_message)|Consumes a message previously offered by the `join` messaging block and reserved by the target, transferring ownership to the caller.|  \n|[join::link_target_notification Method](#link_target_notification)|A callback that notifies that a new target has been linked to this `join` messaging block.|  \n|[join::propagate_message Method](#propagate_message)|Asynchronously passes a message from an `ISource` block to this `join` messaging block. It is invoked by the `propagate` method, when called by a source block.|  \n|[join::propagate_to_any_targets Method](#propagate_to_any_targets)|Constructs an output message containing an input message from each source when they have all propagated a message. Sends this output message out to each of its targets.|  \n|[join::release_message Method](#release_message)|Releases a previous message reservation. (Overrides [source_block::release_message](source-block-class.md#release_message).)|  \n|[join::reserve_message Method](#reserve_message)|Reserves a message previously offered by this `join` messaging block. (Overrides [source_block::reserve_message](source-block-class.md#reserve_message).)|  \n|[join::resume_propagation Method](#resume_propagation)|Resumes propagation after a reservation has been released. (Overrides [source_block::resume_propagation](source-block-class.md#resume_propagation).)|  \n  \n## Remarks  \n For more information, see [Asynchronous Message Blocks](../../../parallel/concrt/asynchronous-message-blocks.md).  \n  \n## Inheritance Hierarchy  \n [ISource](isource-class.md)  \n  \n [ITarget](itarget-class.md)  \n  \n [source_block](source-block-class.md)  \n  \n [propagator_block](propagator-block-class.md)  \n  \n `join`  \n  \n## Requirements  \n **Header:** agents.h  \n  \n **Namespace:** concurrency  \n  \n##  <a name=\"accept_message\"></a>  join::accept_message Method  \n Accepts a message that was offered by this `join` messaging block, transferring ownership to the caller.  \n  \n```\nvirtual message<_OutputType>* accept_message(runtime_object_identity _MsgId);\n```  \n  \n### Parameters  \n `_MsgId`  \n The `runtime_object_identity` of the offered `message` object.  \n  \n### Return Value  \n A pointer to the `message` object that the caller now has ownership of.  \n  \n##  <a name=\"consume_message\"></a>  join::consume_message Method  \n Consumes a message previously offered by the `join` messaging block and reserved by the target, transferring ownership to the caller.  \n  \n```\nvirtual message<_OutputType>* consume_message(runtime_object_identity _MsgId);\n```  \n  \n### Parameters  \n `_MsgId`  \n The `runtime_object_identity` of the `message` object being consumed.  \n  \n### Return Value  \n A pointer to the `message` object that the caller now has ownership of.  \n  \n### Remarks  \n Similar to `accept`, but is always preceded by a call to `reserve`.  \n  \n##  <a name=\"ctor\"></a>  join::join Constructor  \n Constructs a `join` messaging block.  \n  \n```\njoin(\n    size_t _NumInputs);\n\njoin(\n    size_t _NumInputs,\n    filter_method const& _Filter);\n\njoin(\n    Scheduler& _PScheduler,\n    size_t _NumInputs);\n\njoin(\n    Scheduler& _PScheduler,\n    size_t _NumInputs,\n    filter_method const& _Filter);\n\njoin(\n    ScheduleGroup& _PScheduleGroup,\n    size_t _NumInputs);\n\njoin(\n    ScheduleGroup& _PScheduleGroup,\n    size_t _NumInputs,\n    filter_method const& _Filter);\n```  \n  \n### Parameters  \n `_NumInputs`  \n The number of inputs this `join` block will be allowed.  \n  \n `_Filter`  \n A filter function which determines whether offered messages should be accepted.  \n  \n `_PScheduler`  \n The `Scheduler` object within which the propagation task for the `join` messaging block is scheduled.  \n  \n `_PScheduleGroup`  \n The `ScheduleGroup` object within which the propagation task for the `join` messaging block is scheduled. The `Scheduler` object used is implied by the schedule group.  \n  \n### Remarks  \n The runtime uses the default scheduler if you do not specify the `_PScheduler` or `_PScheduleGroup` parameters.  \n  \n The type `filter_method` is a functor with signature `bool (T const &)` which is invoked by this `join` messaging block to determine whether or not it should accept an offered message.  \n  \n##  <a name=\"dtor\"></a>  join::~join Destructor  \n Destroys the `join` block.  \n  \n```\n~join();\n```  \n  \n##  <a name=\"link_target_notification\"></a>  join::link_target_notification Method  \n A callback that notifies that a new target has been linked to this `join` messaging block.  \n  \n```\nvirtual void link_target_notification(_Inout_ ITarget<std::vector<T>> *);\n```  \n  \n##  <a name=\"propagate_message\"></a>  join::propagate_message Method  \n Asynchronously passes a message from an `ISource` block to this `join` messaging block. It is invoked by the `propagate` method, when called by a source block.  \n  \n```\nmessage_status propagate_message(\n    _Inout_ message<T>* _PMessage,\n    _Inout_ ISource<T>* _PSource);\n```  \n  \n### Parameters  \n `_PMessage`  \n A pointer to the `message` object.  \n  \n `_PSource`  \n A pointer to the source block offering the message.  \n  \n### Return Value  \n A [message_status](concurrency-namespace-enums.md) indication of what the target decided to do with the message.  \n  \n##  <a name=\"propagate_to_any_targets\"></a>  join::propagate_to_any_targets Method  \n Constructs an output message containing an input message from each source when they have all propagated a message. Sends this output message out to each of its targets.  \n  \n```\nvoid propagate_to_any_targets(_Inout_opt_ message<_OutputType> *);\n```  \n  \n##  <a name=\"release_message\"></a>  join::release_message Method  \n Releases a previous message reservation.  \n  \n```\nvirtual void release_message(runtime_object_identity _MsgId);\n```  \n  \n### Parameters  \n `_MsgId`  \n The `runtime_object_identity` of the `message` object being released.  \n  \n##  <a name=\"reserve_message\"></a>  join::reserve_message Method  \n Reserves a message previously offered by this `join` messaging block.  \n  \n```\nvirtual bool reserve_message(runtime_object_identity _MsgId);\n```  \n  \n### Parameters  \n `_MsgId`  \n The `runtime_object_identity` of the offered `message` object.  \n  \n### Return Value  \n `true` if the message was successfully reserved, `false` otherwise.  \n  \n### Remarks  \n After `reserve` is called, if it returns `true`, either `consume` or `release` must be called to either take or release ownership of the message.  \n  \n##  <a name=\"resume_propagation\"></a>  join::resume_propagation Method  \n Resumes propagation after a reservation has been released.  \n  \n```\nvirtual void resume_propagation();\n```  \n  \n## See Also  \n [concurrency Namespace](concurrency-namespace.md)   \n [choice Class](choice-class.md)   \n [multitype_join Class](multitype-join-class.md)\n"}