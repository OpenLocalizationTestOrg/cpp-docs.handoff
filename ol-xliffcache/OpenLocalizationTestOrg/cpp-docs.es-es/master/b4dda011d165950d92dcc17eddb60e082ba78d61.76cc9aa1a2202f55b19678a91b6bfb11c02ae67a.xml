{"nodes":[{"pos":[12,48],"content":"CProgressCtrl Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"CProgressCtrl Class | Microsoft Docs","pos":[0,36]}]},{"pos":[708,727],"content":"CProgressCtrl Class","linkify":"CProgressCtrl Class","nodes":[{"content":"CProgressCtrl Class","pos":[0,19]}]},{"content":"Provides the functionality of the Windows common progress bar control.","pos":[728,798]},{"pos":[807,813],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[873,880],"content":"Members","linkify":"Members","nodes":[{"content":"Members","pos":[0,7]}]},{"pos":[890,909],"content":"Public Constructors","linkify":"Public Constructors","nodes":[{"content":"Public Constructors","pos":[0,19]}]},{"content":"Name","pos":[916,920]},{"content":"Description","pos":[921,932]},{"pos":[970,1031],"content":"<bpt id=\"p1\">[</bpt>CProgressCtrl::CProgressCtrl<ept id=\"p1\">](#cprogressctrl__cprogressctrl)</ept>","source":"[CProgressCtrl::CProgressCtrl](#cprogressctrl__cprogressctrl)"},{"pos":[1032,1068],"content":"Constructs a <ph id=\"ph1\">`CProgressCtrl`</ph> object.","source":"Constructs a `CProgressCtrl` object."},{"pos":[1079,1093],"content":"Public Methods","linkify":"Public Methods","nodes":[{"content":"Public Methods","pos":[0,14]}]},{"content":"Name","pos":[1100,1104]},{"content":"Description","pos":[1105,1116]},{"pos":[1154,1201],"content":"<bpt id=\"p1\">[</bpt>CProgressCtrl::Create<ept id=\"p1\">](#cprogressctrl__create)</ept>","source":"[CProgressCtrl::Create](#cprogressctrl__create)"},{"pos":[1202,1277],"content":"Creates a progress bar control and attaches it to a <ph id=\"ph1\">`CProgressCtrl`</ph> object.","source":"Creates a progress bar control and attaches it to a `CProgressCtrl` object."},{"pos":[1282,1333],"content":"<bpt id=\"p1\">[</bpt>CProgressCtrl::CreateEx<ept id=\"p1\">](#cprogressctrl__createex)</ept>","source":"[CProgressCtrl::CreateEx](#cprogressctrl__createex)"},{"pos":[1334,1448],"content":"Creates a progress control with the specified Windows extended styles and attaches it to a <ph id=\"ph1\">`CProgressCtrl`</ph> object.","source":"Creates a progress control with the specified Windows extended styles and attaches it to a `CProgressCtrl` object."},{"pos":[1453,1510],"content":"<bpt id=\"p1\">[</bpt>CProgressCtrl::GetBarColor<ept id=\"p1\">](#cprogressctrl__getbarcolor)</ept>","source":"[CProgressCtrl::GetBarColor](#cprogressctrl__getbarcolor)"},{"content":"Gets the color of the progress indicator bar for the current progress bar control.","pos":[1511,1593]},{"pos":[1598,1653],"content":"<bpt id=\"p1\">[</bpt>CProgressCtrl::GetBkColor<ept id=\"p1\">](#cprogressctrl__getbkcolor)</ept>","source":"[CProgressCtrl::GetBkColor](#cprogressctrl__getbkcolor)"},{"content":"Gets the background color of the current progress bar.","pos":[1654,1708]},{"pos":[1713,1760],"content":"<bpt id=\"p1\">[</bpt>CProgressCtrl::GetPos<ept id=\"p1\">](#cprogressctrl__getpos)</ept>","source":"[CProgressCtrl::GetPos](#cprogressctrl__getpos)"},{"content":"Gets the current position of the progress bar.","pos":[1761,1807]},{"pos":[1812,1863],"content":"<bpt id=\"p1\">[</bpt>CProgressCtrl::GetRange<ept id=\"p1\">](#cprogressctrl__getrange)</ept>","source":"[CProgressCtrl::GetRange](#cprogressctrl__getrange)"},{"content":"Gets the lower and upper limits of the range of the progress bar control.","pos":[1864,1937]},{"pos":[1942,1993],"content":"<bpt id=\"p1\">[</bpt>CProgressCtrl::GetState<ept id=\"p1\">](#cprogressctrl__getstate)</ept>","source":"[CProgressCtrl::GetState](#cprogressctrl__getstate)"},{"content":"Gets the state of the current progress bar control.","pos":[1994,2045]},{"pos":[2050,2099],"content":"<bpt id=\"p1\">[</bpt>CProgressCtrl::GetStep<ept id=\"p1\">](#cprogressctrl__getstep)</ept>","source":"[CProgressCtrl::GetStep](#cprogressctrl__getstep)"},{"content":"Retrieves the step increment for the progress bar of the current progress bar control.","pos":[2100,2186]},{"pos":[2191,2244],"content":"<bpt id=\"p1\">[</bpt>CProgressCtrl::OffsetPos<ept id=\"p1\">](#cprogressctrl__offsetpos)</ept>","source":"[CProgressCtrl::OffsetPos](#cprogressctrl__offsetpos)"},{"content":"Advances the current position of a progress bar control by a specified increment and redraws the bar to reflect the new position.","pos":[2245,2374]},{"pos":[2379,2436],"content":"<bpt id=\"p1\">[</bpt>CProgressCtrl::SetBarColor<ept id=\"p1\">](#cprogressctrl__setbarcolor)</ept>","source":"[CProgressCtrl::SetBarColor](#cprogressctrl__setbarcolor)"},{"content":"Sets the color of the progress indicator bar in the current progress bar control.","pos":[2437,2518]},{"pos":[2523,2578],"content":"<bpt id=\"p1\">[</bpt>CProgressCtrl::SetBkColor<ept id=\"p1\">](#cprogressctrl__setbkcolor)</ept>","source":"[CProgressCtrl::SetBkColor](#cprogressctrl__setbkcolor)"},{"content":"Sets the background color for the progress bar.","pos":[2579,2626]},{"pos":[2631,2686],"content":"<bpt id=\"p1\">[</bpt>CProgressCtrl::SetMarquee<ept id=\"p1\">](#cprogressctrl__setmarquee)</ept>","source":"[CProgressCtrl::SetMarquee](#cprogressctrl__setmarquee)"},{"content":"Turns marquee mode on or off for the current progress bar control.","pos":[2687,2753]},{"pos":[2758,2805],"content":"<bpt id=\"p1\">[</bpt>CProgressCtrl::SetPos<ept id=\"p1\">](#cprogressctrl__setpos)</ept>","source":"[CProgressCtrl::SetPos](#cprogressctrl__setpos)"},{"content":"Sets the current position for a progress bar control and redraws the bar to reflect the new position.","pos":[2806,2907]},{"pos":[2912,2963],"content":"<bpt id=\"p1\">[</bpt>CProgressCtrl::SetRange<ept id=\"p1\">](#cprogressctrl__setrange)</ept>","source":"[CProgressCtrl::SetRange](#cprogressctrl__setrange)"},{"content":"Sets the minimum and maximum ranges for a progress bar control and redraws the bar to reflect the new ranges.","pos":[2964,3073]},{"pos":[3078,3129],"content":"<bpt id=\"p1\">[</bpt>CProgressCtrl::SetState<ept id=\"p1\">](#cprogressctrl__setstate)</ept>","source":"[CProgressCtrl::SetState](#cprogressctrl__setstate)"},{"content":"Sets the state of the current progress bar control.","pos":[3130,3181]},{"pos":[3186,3235],"content":"<bpt id=\"p1\">[</bpt>CProgressCtrl::SetStep<ept id=\"p1\">](#cprogressctrl__setstep)</ept>","source":"[CProgressCtrl::SetStep](#cprogressctrl__setstep)"},{"content":"Specifies the step increment for a progress bar control.","pos":[3236,3292]},{"pos":[3297,3344],"content":"<bpt id=\"p1\">[</bpt>CProgressCtrl::StepIt<ept id=\"p1\">](#cprogressctrl__stepit)</ept>","source":"[CProgressCtrl::StepIt](#cprogressctrl__stepit)"},{"pos":[3345,3513],"content":"Advances the current position for a progress bar control by the step increment (see <bpt id=\"p1\">[</bpt>SetStep<ept id=\"p1\">](#cprogressctrl__setstep)</ept>) and redraws the bar to reflect the new position.","source":"Advances the current position for a progress bar control by the step increment (see [SetStep](#cprogressctrl__setstep)) and redraws the bar to reflect the new position."},{"pos":[3523,3530],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"A progress bar control is a window that an application can use to indicate the progress of a lengthy operation.","pos":[3534,3645]},{"content":"It consists of a rectangle that is gradually filled, from left to right, with the system highlight color as an operation progresses.","pos":[3646,3778]},{"content":"A progress bar control has a range and a current position.","pos":[3785,3843]},{"content":"The range represents the total duration of the operation, and the current position represents the progress the application has made toward completing the operation.","pos":[3844,4008]},{"content":"The window procedure uses the range and the current position to determine the percentage of the progress bar to fill with the highlight color.","pos":[4009,4151]},{"content":"Because the range and current position values are expressed as signed integers, the possible range of current position values is from â€“2,147,483,648 to 2,147,483,647 inclusive.","pos":[4152,4330]},{"pos":[4337,4486],"content":"For more information on using <ph id=\"ph1\">`CProgressCtrl`</ph>, see <bpt id=\"p1\">[</bpt>Controls<ept id=\"p1\">](../../mfc/controls-mfc.md)</ept> and <bpt id=\"p2\">[</bpt>Using CProgressCtrl<ept id=\"p2\">](../../mfc/using-cprogressctrl.md)</ept>.","source":"For more information on using `CProgressCtrl`, see [Controls](../../mfc/controls-mfc.md) and [Using CProgressCtrl](../../mfc/using-cprogressctrl.md)."},{"pos":[4495,4516],"content":"Inheritance Hierarchy","linkify":"Inheritance Hierarchy","nodes":[{"content":"Inheritance Hierarchy","pos":[0,21]}]},{"pos":[4520,4567],"content":"<bpt id=\"p1\">[</bpt>CObject<ept id=\"p1\">](../../mfc/reference/cobject-class.md)</ept>","source":"[CObject](../../mfc/reference/cobject-class.md)"},{"pos":[4574,4627],"content":"<bpt id=\"p1\">[</bpt>CCmdTarget<ept id=\"p1\">](../../mfc/reference/ccmdtarget-class.md)</ept>","source":"[CCmdTarget](../../mfc/reference/ccmdtarget-class.md)"},{"pos":[4634,4675],"content":"<bpt id=\"p1\">[</bpt>CWnd<ept id=\"p1\">](../../mfc/reference/cwnd-class.md)</ept>","source":"[CWnd](../../mfc/reference/cwnd-class.md)"},{"pos":[4706,4718],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[4722,4742],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> afxcmn.h","source":"**Header:** afxcmn.h"},{"pos":[4752,4825],"content":"<bpt id=\"p1\">&lt;a name=\"cprogressctrl__cprogressctrl\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CProgressCtrl::CProgressCtrl","linkify":"<a name=\"cprogressctrl__cprogressctrl\"></a>  CProgressCtrl::CProgressCtrl","source":"<a name=\"cprogressctrl__cprogressctrl\"></a>  CProgressCtrl::CProgressCtrl"},{"pos":[4829,4865],"content":"Constructs a <ph id=\"ph1\">`CProgressCtrl`</ph> object.","source":"Constructs a `CProgressCtrl` object."},{"pos":[4907,4914],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[4918,5029],"content":"After constructing the <ph id=\"ph1\">`CProgressCtrl`</ph> object, call <ph id=\"ph2\">`CProgressCtrl::Create`</ph> to create the progress bar control.","source":"After constructing the `CProgressCtrl` object, call `CProgressCtrl::Create` to create the progress bar control."},{"pos":[5039,5046],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[5050,5149],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_MFC_CProgressCtrl#1<ept id=\"p2\">](../../mfc/reference/codesnippet/cpp/cprogressctrl-class_1.cpp)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_MFC_CProgressCtrl#1](../../mfc/reference/codesnippet/cpp/cprogressctrl-class_1.cpp)]"},{"pos":[5159,5218],"content":"<bpt id=\"p1\">&lt;a name=\"cprogressctrl__create\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CProgressCtrl::Create","linkify":"<a name=\"cprogressctrl__create\"></a>  CProgressCtrl::Create","source":"<a name=\"cprogressctrl__create\"></a>  CProgressCtrl::Create"},{"pos":[5222,5297],"content":"Creates a progress bar control and attaches it to a <ph id=\"ph1\">`CProgressCtrl`</ph> object.","source":"Creates a progress bar control and attaches it to a `CProgressCtrl` object."},{"pos":[5427,5437],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Specifies the progress bar control's style.","pos":[5454,5497]},{"content":"Apply any combination of window stylesdescribed in <bpt id=\"p1\">[</bpt>CreateWindow<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms632679)</ept> in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>, in addition to the following progress bar control styles, to the control:","pos":[5498,5757],"source":" Apply any combination of window stylesdescribed in [CreateWindow](http://msdn.microsoft.com/library/windows/desktop/ms632679) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)], in addition to the following progress bar control styles, to the control:"},{"content":"<ph id=\"ph1\">`PBS_VERTICAL`</ph> Displays progress information vertically, top to bottom.","pos":[5765,5836],"source":"`PBS_VERTICAL` Displays progress information vertically, top to bottom."},{"content":"Without this flag, the progress bar control displays horizontally, left to right.","pos":[5837,5918]},{"content":"<ph id=\"ph1\">`PBS_SMOOTH`</ph> Displays gradual, smooth filling in the progress bar control.","pos":[5926,6000],"source":"`PBS_SMOOTH` Displays gradual, smooth filling in the progress bar control."},{"content":"Without this flag, the control will fill with blocks.","pos":[6001,6054]},{"pos":[6061,6413],"content":"`rect`  \nSpecifies the progress bar control's size and position. It can be either a [CRect](../../atl-mfc-shared/reference/crect-class.md) object or a [RECT](http://msdn.microsoft.com/library/windows/desktop/dd162897) structure. Because the control must be a child window, the specified coordinates are relative to the client area of the `pParentWnd`.","leadings":[""," "],"nodes":[{"content":"Specifies the progress bar control's size and position. It can be either a [CRect](../../atl-mfc-shared/reference/crect-class.md) object or a [RECT](http://msdn.microsoft.com/library/windows/desktop/dd162897) structure. Because the control must be a child window, the specified coordinates are relative to the client area of the `pParentWnd`.","pos":[9,351],"nodes":[{"content":"Specifies the progress bar control's size and position.","pos":[0,55]},{"content":"It can be either a <bpt id=\"p1\">[</bpt>CRect<ept id=\"p1\">](../../atl-mfc-shared/reference/crect-class.md)</ept> object or a <bpt id=\"p2\">[</bpt>RECT<ept id=\"p2\">](http://msdn.microsoft.com/library/windows/desktop/dd162897)</ept> structure.","pos":[56,219],"source":" It can be either a [CRect](../../atl-mfc-shared/reference/crect-class.md) object or a [RECT](http://msdn.microsoft.com/library/windows/desktop/dd162897) structure."},{"content":"Because the control must be a child window, the specified coordinates are relative to the client area of the <ph id=\"ph1\">`pParentWnd`</ph>.","pos":[220,342],"source":" Because the control must be a child window, the specified coordinates are relative to the client area of the `pParentWnd`."}]}]},{"pos":[6420,6533],"content":"`pParentWnd`  \nSpecifies the progress bar control's parent window, usually a `CDialog`. It must not be **NULL.**","leadings":[""," "],"nodes":[{"content":"Specifies the progress bar control's parent window, usually a `CDialog`. It must not be **NULL.**","pos":[15,112],"nodes":[{"content":"Specifies the progress bar control's parent window, usually a <ph id=\"ph1\">`CDialog`</ph>.","pos":[0,72],"source":"Specifies the progress bar control's parent window, usually a `CDialog`."},{"content":"It must not be <bpt id=\"p1\">**</bpt>NULL.<ept id=\"p1\">**</ept>","pos":[73,97],"source":" It must not be **NULL.**"}]}]},{"pos":[6540,6589],"content":"`nID`  \nSpecifies the progress bar control's ID.","leadings":[""," "],"nodes":[{"content":"Specifies the progress bar control's ID.","pos":[8,48]}]},{"pos":[6599,6611],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[6615,6699],"content":"<bpt id=\"p1\">**</bpt>TRUE<ept id=\"p1\">**</ept> if the <ph id=\"ph1\">`CProgressCtrl`</ph> object is successfully created; otherwise <bpt id=\"p2\">**</bpt>FALSE<ept id=\"p2\">**</ept>.","source":"**TRUE** if the `CProgressCtrl` object is successfully created; otherwise **FALSE**."},{"pos":[6709,6716],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"You construct a <ph id=\"ph1\">`CProgressCtrl`</ph> object in two steps.","pos":[6720,6772],"source":"You construct a `CProgressCtrl` object in two steps."},{"content":"First, call the constructor, which creates the <ph id=\"ph1\">`CProgressCtrl`</ph> object, and then call <bpt id=\"p1\">**</bpt>Create<ept id=\"p1\">**</ept>, which creates the progress bar control.","pos":[6773,6909],"source":" First, call the constructor, which creates the `CProgressCtrl` object, and then call **Create**, which creates the progress bar control."},{"pos":[6919,6926],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[6930,7029],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_MFC_CProgressCtrl#2<ept id=\"p2\">](../../mfc/reference/codesnippet/cpp/cprogressctrl-class_2.cpp)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_MFC_CProgressCtrl#2](../../mfc/reference/codesnippet/cpp/cprogressctrl-class_2.cpp)]"},{"pos":[7039,7102],"content":"<bpt id=\"p1\">&lt;a name=\"cprogressctrl__createex\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CProgressCtrl::CreateEx","linkify":"<a name=\"cprogressctrl__createex\"></a>  CProgressCtrl::CreateEx","source":"<a name=\"cprogressctrl__createex\"></a>  CProgressCtrl::CreateEx"},{"pos":[7106,7191],"content":"Creates a control (a child window) and associates it with the <ph id=\"ph1\">`CProgressCtrl`</ph> object.","source":"Creates a control (a child window) and associates it with the `CProgressCtrl` object."},{"pos":[7346,7356],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Specifies the extended style of the control being created.","pos":[7375,7433]},{"content":"For a list of extended Windows styles, see the <ph id=\"ph1\">`dwExStyle`</ph> parameter for <bpt id=\"p1\">[</bpt>CreateWindowEx<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms632680)</ept> in the <ph id=\"ph2\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","pos":[7434,7643],"source":" For a list of extended Windows styles, see the `dwExStyle` parameter for [CreateWindowEx](http://msdn.microsoft.com/library/windows/desktop/ms632680) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"content":"Specifies the progress bar control's style.","pos":[7663,7706]},{"content":"Apply any combination of window styles described in <bpt id=\"p1\">[</bpt>CreateWindow<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms632679)</ept> in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","pos":[7707,7893],"source":" Apply any combination of window styles described in [CreateWindow](http://msdn.microsoft.com/library/windows/desktop/ms632679) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"content":"A reference to a <bpt id=\"p1\">[</bpt>RECT<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/dd162897)</ept> structure describing the size and position of the window to be created, in client coordinates of <ph id=\"ph1\">`pParentWnd`</ph>.","pos":[7910,8104],"source":" A reference to a [RECT](http://msdn.microsoft.com/library/windows/desktop/dd162897) structure describing the size and position of the window to be created, in client coordinates of `pParentWnd`."},{"content":"A pointer to the window that is the control's parent.","pos":[8127,8180]},{"content":"The control's child-window ID.","pos":[8196,8226]},{"pos":[8236,8248],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Nonzero if successful; otherwise 0.","pos":[8252,8287]},{"pos":[8297,8304],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[8308,8460],"content":"Use <ph id=\"ph1\">`CreateEx`</ph> instead of <bpt id=\"p1\">[</bpt>Create<ept id=\"p1\">](#cprogressctrl__create)</ept> to apply extended Windows styles, specified by the Windows extended style preface <bpt id=\"p2\">**</bpt>WS_EX_<ept id=\"p2\">**</ept>.","source":"Use `CreateEx` instead of [Create](#cprogressctrl__create) to apply extended Windows styles, specified by the Windows extended style preface **WS_EX_**."},{"pos":[8470,8539],"content":"<bpt id=\"p1\">&lt;a name=\"cprogressctrl__getbarcolor\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CProgressCtrl::GetBarColor","linkify":"<a name=\"cprogressctrl__getbarcolor\"></a>  CProgressCtrl::GetBarColor","source":"<a name=\"cprogressctrl__getbarcolor\"></a>  CProgressCtrl::GetBarColor"},{"content":"Gets the color of the progress indicator bar for the current progress bar control.","pos":[8543,8625]},{"pos":[8683,8695],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[8699,8907],"content":"The color of the current progress bar, represented as a <bpt id=\"p1\">[</bpt>COLORREF<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/dd183449)</ept> value, or <ph id=\"ph1\">`CLR_DEFAULT`</ph> if the progress indicator bar color is the default color.","source":"The color of the current progress bar, represented as a [COLORREF](http://msdn.microsoft.com/library/windows/desktop/dd183449) value, or `CLR_DEFAULT` if the progress indicator bar color is the default color."},{"pos":[8917,8924],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[8928,9115],"content":"This method sends the <bpt id=\"p1\">[</bpt>PBM_GETBARCOLOR<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb760826)</ept> message, which is described in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"This method sends the [PBM_GETBARCOLOR](http://msdn.microsoft.com/library/windows/desktop/bb760826) message, which is described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"pos":[9125,9192],"content":"<bpt id=\"p1\">&lt;a name=\"cprogressctrl__getbkcolor\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CProgressCtrl::GetBkColor","linkify":"<a name=\"cprogressctrl__getbkcolor\"></a>  CProgressCtrl::GetBkColor","source":"<a name=\"cprogressctrl__getbkcolor\"></a>  CProgressCtrl::GetBkColor"},{"content":"Gets the background color of the current progress bar.","pos":[9196,9250]},{"pos":[9307,9319],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[9323,9467],"content":"The background color of the current progress bar, represented as a <bpt id=\"p1\">[</bpt>COLORREF<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/dd183449)</ept> value.","source":"The background color of the current progress bar, represented as a [COLORREF](http://msdn.microsoft.com/library/windows/desktop/dd183449) value."},{"pos":[9477,9484],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[9488,9674],"content":"This method sends the <bpt id=\"p1\">[</bpt>PBM_GETBKCOLOR<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb760828)</ept> message, which is described in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"This method sends the [PBM_GETBKCOLOR](http://msdn.microsoft.com/library/windows/desktop/bb760828) message, which is described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"pos":[9684,9743],"content":"<bpt id=\"p1\">&lt;a name=\"cprogressctrl__getpos\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CProgressCtrl::GetPos","linkify":"<a name=\"cprogressctrl__getpos\"></a>  CProgressCtrl::GetPos","source":"<a name=\"cprogressctrl__getpos\"></a>  CProgressCtrl::GetPos"},{"content":"Retrieves the current position of the progress bar.","pos":[9747,9798]},{"pos":[9837,9849],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The position of the progress bar control.","pos":[9853,9894]},{"pos":[9904,9911],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[9915,10098],"content":"The position of the progress bar control is not the physical location on the screen, but rather is between the upper and lower range indicated in <bpt id=\"p1\">[</bpt>SetRange<ept id=\"p1\">](#cprogressctrl__setrange)</ept>.","source":"The position of the progress bar control is not the physical location on the screen, but rather is between the upper and lower range indicated in [SetRange](#cprogressctrl__setrange)."},{"pos":[10108,10115],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[10119,10218],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_MFC_CProgressCtrl#3<ept id=\"p2\">](../../mfc/reference/codesnippet/cpp/cprogressctrl-class_3.cpp)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_MFC_CProgressCtrl#3](../../mfc/reference/codesnippet/cpp/cprogressctrl-class_3.cpp)]"},{"pos":[10228,10291],"content":"<bpt id=\"p1\">&lt;a name=\"cprogressctrl__getrange\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CProgressCtrl::GetRange","linkify":"<a name=\"cprogressctrl__getrange\"></a>  CProgressCtrl::GetRange","source":"<a name=\"cprogressctrl__getrange\"></a>  CProgressCtrl::GetRange"},{"content":"Gets the current lower and upper limits, or range, of the progress bar control.","pos":[10295,10374]},{"pos":[10451,10461],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"A reference to an integer receiving the lower limit of the progress bar control.","pos":[10477,10557]},{"content":"A reference to an integer receiving the upper limit of the progress bar control.","pos":[10576,10656]},{"pos":[10666,10673],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[10677,10805],"content":"This function copies the values of the lower and upper limits to the integers referenced by <ph id=\"ph1\">`nLower`</ph> and <ph id=\"ph2\">`nUpper`</ph>, respectively.","source":"This function copies the values of the lower and upper limits to the integers referenced by `nLower` and `nUpper`, respectively."},{"pos":[10815,10822],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[10826,10925],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_MFC_CProgressCtrl#4<ept id=\"p2\">](../../mfc/reference/codesnippet/cpp/cprogressctrl-class_4.cpp)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_MFC_CProgressCtrl#4](../../mfc/reference/codesnippet/cpp/cprogressctrl-class_4.cpp)]"},{"pos":[10935,10998],"content":"<bpt id=\"p1\">&lt;a name=\"cprogressctrl__getstate\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CProgressCtrl::GetState","linkify":"<a name=\"cprogressctrl__getstate\"></a>  CProgressCtrl::GetState","source":"<a name=\"cprogressctrl__getstate\"></a>  CProgressCtrl::GetState"},{"content":"Gets the state of the current progress bar control.","pos":[11002,11053]},{"pos":[11103,11115],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The state of the current progress bar control, which is one of the following values:","pos":[11119,11203]},{"content":"Value","pos":[11210,11215]},{"content":"State","pos":[11216,11221]},{"content":"In progress","pos":[11268,11279]},{"content":"Error","pos":[11297,11302]},{"content":"Paused","pos":[11321,11327]},{"pos":[11338,11345],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[11349,11533],"content":"This method sends the <bpt id=\"p1\">[</bpt>PBM_GETSTATE<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb760834)</ept> message, which is described in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"This method sends the [PBM_GETSTATE](http://msdn.microsoft.com/library/windows/desktop/bb760834) message, which is described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"pos":[11543,11550],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following code example defines the variable, <ph id=\"ph1\">`m_progressCtrl`</ph>, that is used to programmatically access the progress bar control.","pos":[11554,11686],"source":"The following code example defines the variable, `m_progressCtrl`, that is used to programmatically access the progress bar control."},{"content":"This variable is used in the next example.","pos":[11687,11729]},{"pos":[11736,11836],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_MFC_CProgressCtrl_s1#9<ept id=\"p2\">](../../mfc/reference/codesnippet/cpp/cprogressctrl-class_5.h)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_MFC_CProgressCtrl_s1#9](../../mfc/reference/codesnippet/cpp/cprogressctrl-class_5.h)]"},{"pos":[11846,11853],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following code example retrieves the state of the current progress bar control.","pos":[11857,11940]},{"pos":[11947,12049],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_MFC_CProgressCtrl_s1#5<ept id=\"p2\">](../../mfc/reference/codesnippet/cpp/cprogressctrl-class_6.cpp)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_MFC_CProgressCtrl_s1#5](../../mfc/reference/codesnippet/cpp/cprogressctrl-class_6.cpp)]"},{"pos":[12059,12120],"content":"<bpt id=\"p1\">&lt;a name=\"cprogressctrl__getstep\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CProgressCtrl::GetStep","linkify":"<a name=\"cprogressctrl__getstep\"></a>  CProgressCtrl::GetStep","source":"<a name=\"cprogressctrl__getstep\"></a>  CProgressCtrl::GetStep"},{"content":"Retrieves the step increment for the progress bar of the current progress bar control.","pos":[12124,12210]},{"pos":[12259,12271],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The step increment of the progress bar.","pos":[12275,12314]},{"pos":[12324,12331],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[12335,12486],"content":"The step increment is the amount by which a call to <bpt id=\"p1\">[</bpt>CProgressCtrl::StepIt<ept id=\"p1\">](#cprogressctrl__stepit)</ept> increases the current position of the progress bar.","source":"The step increment is the amount by which a call to [CProgressCtrl::StepIt](#cprogressctrl__stepit) increases the current position of the progress bar."},{"pos":[12493,12676],"content":"This method sends the <bpt id=\"p1\">[</bpt>PBM_GETSTEP<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb760836)</ept> message, which is described in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"This method sends the [PBM_GETSTEP](http://msdn.microsoft.com/library/windows/desktop/bb760836) message, which is described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"pos":[12686,12693],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following code example defines the variable, <ph id=\"ph1\">`m_progressCtrl`</ph>, that is used to programmatically access the progress bar control.","pos":[12697,12829],"source":"The following code example defines the variable, `m_progressCtrl`, that is used to programmatically access the progress bar control."},{"content":"This variable is used in the next example.","pos":[12830,12872]},{"pos":[12879,12979],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_MFC_CProgressCtrl_s1#9<ept id=\"p2\">](../../mfc/reference/codesnippet/cpp/cprogressctrl-class_5.h)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_MFC_CProgressCtrl_s1#9](../../mfc/reference/codesnippet/cpp/cprogressctrl-class_5.h)]"},{"pos":[12989,12996],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following code example retrieves the step increment of the current progress bar control.","pos":[13000,13092]},{"pos":[13099,13201],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_MFC_CProgressCtrl_s1#3<ept id=\"p2\">](../../mfc/reference/codesnippet/cpp/cprogressctrl-class_7.cpp)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_MFC_CProgressCtrl_s1#3](../../mfc/reference/codesnippet/cpp/cprogressctrl-class_7.cpp)]"},{"pos":[13211,13276],"content":"<bpt id=\"p1\">&lt;a name=\"cprogressctrl__offsetpos\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CProgressCtrl::OffsetPos","linkify":"<a name=\"cprogressctrl__offsetpos\"></a>  CProgressCtrl::OffsetPos","source":"<a name=\"cprogressctrl__offsetpos\"></a>  CProgressCtrl::OffsetPos"},{"pos":[13280,13418],"content":"Advances the progress bar control's current position by the increment specified by <ph id=\"ph1\">`nPos`</ph> and redraws the bar to reflect the new position.","source":"Advances the progress bar control's current position by the increment specified by `nPos` and redraws the bar to reflect the new position."},{"pos":[13468,13478],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Amount to advance the position.","pos":[13492,13523]},{"pos":[13533,13545],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The previous position of the progress bar control.","pos":[13549,13599]},{"pos":[13609,13616],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[13620,13719],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_MFC_CProgressCtrl#5<ept id=\"p2\">](../../mfc/reference/codesnippet/cpp/cprogressctrl-class_8.cpp)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_MFC_CProgressCtrl#5](../../mfc/reference/codesnippet/cpp/cprogressctrl-class_8.cpp)]"},{"pos":[13729,13798],"content":"<bpt id=\"p1\">&lt;a name=\"cprogressctrl__setbarcolor\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CProgressCtrl::SetBarColor","linkify":"<a name=\"cprogressctrl__setbarcolor\"></a>  CProgressCtrl::SetBarColor","source":"<a name=\"cprogressctrl__setbarcolor\"></a>  CProgressCtrl::SetBarColor"},{"content":"Sets the color of the progress indicator bar in the current progress bar control.","pos":[13802,13883]},{"pos":[13947,13957],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[13964,13973]},{"content":"Description","pos":[13974,13985]},{"pos":[14028,14041],"content":"[in] <ph id=\"ph1\">`clrBar`</ph>","source":"[in] `clrBar`"},{"content":"A <bpt id=\"p1\">[</bpt>COLORREF<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/dd183449)</ept> value that specifies the new color of the progress indicator bar.","pos":[14042,14180],"source":"A [COLORREF](http://msdn.microsoft.com/library/windows/desktop/dd183449) value that specifies the new color of the progress indicator bar."},{"content":"Specify <ph id=\"ph1\">`CLR_DEFAULT`</ph> to cause the progress bar to use its default color.","pos":[14181,14254],"source":" Specify `CLR_DEFAULT` to cause the progress bar to use its default color."},{"pos":[14265,14277],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[14281,14507],"content":"The previous color of the progress indicator bar, represented as a <bpt id=\"p1\">[</bpt>COLORREF<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/dd183449)</ept> value, or <ph id=\"ph1\">`CLR_DEFAULT`</ph> if the color of the progress indicator bar is the default color.","source":"The previous color of the progress indicator bar, represented as a [COLORREF](http://msdn.microsoft.com/library/windows/desktop/dd183449) value, or `CLR_DEFAULT` if the color of the progress indicator bar is the default color."},{"pos":[14517,14524],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[14528,14753],"content":"The <ph id=\"ph1\">`SetBarColor`</ph> method sets the progress bar color only if a <ph id=\"ph2\">[!INCLUDE[windowsver](../../build/reference/includes/windowsver_md.md)]</ph><bpt id=\"p1\">[</bpt>theme<ept id=\"p1\">](https://msdn.microsoft.com/library/windows/desktop/hh270423.aspx)</ept> is not in effect.","source":"The `SetBarColor` method sets the progress bar color only if a [!INCLUDE[windowsver](../../build/reference/includes/windowsver_md.md)][theme](https://msdn.microsoft.com/library/windows/desktop/hh270423.aspx) is not in effect."},{"pos":[14760,14947],"content":"This method sends the <bpt id=\"p1\">[</bpt>PBM_SETBARCOLOR<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb760838)</ept> message, which is described in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"This method sends the [PBM_SETBARCOLOR](http://msdn.microsoft.com/library/windows/desktop/bb760838) message, which is described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"pos":[14957,14964],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following code example defines the variable, <ph id=\"ph1\">`m_progressCtrl`</ph>, that is used to programmatically access the progress bar control.","pos":[14968,15100],"source":"The following code example defines the variable, `m_progressCtrl`, that is used to programmatically access the progress bar control."},{"content":"This variable is used in the next example.","pos":[15101,15143]},{"pos":[15150,15250],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_MFC_CProgressCtrl_s1#9<ept id=\"p2\">](../../mfc/reference/codesnippet/cpp/cprogressctrl-class_5.h)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_MFC_CProgressCtrl_s1#9](../../mfc/reference/codesnippet/cpp/cprogressctrl-class_5.h)]"},{"pos":[15260,15267],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following code example changes the color of the progress bar to red, green, blue, or the default.","pos":[15271,15372]},{"pos":[15379,15481],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_MFC_CProgressCtrl_s1#1<ept id=\"p2\">](../../mfc/reference/codesnippet/cpp/cprogressctrl-class_9.cpp)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_MFC_CProgressCtrl_s1#1](../../mfc/reference/codesnippet/cpp/cprogressctrl-class_9.cpp)]"},{"pos":[15491,15558],"content":"<bpt id=\"p1\">&lt;a name=\"cprogressctrl__setbkcolor\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CProgressCtrl::SetBkColor","linkify":"<a name=\"cprogressctrl__setbkcolor\"></a>  CProgressCtrl::SetBkColor","source":"<a name=\"cprogressctrl__setbkcolor\"></a>  CProgressCtrl::SetBkColor"},{"content":"Sets the background color for the progress bar.","pos":[15562,15609]},{"pos":[15672,15682],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"A <bpt id=\"p1\">**</bpt>COLORREF<ept id=\"p1\">**</ept> value that specifies the new background color.","pos":[15698,15759],"source":" A **COLORREF** value that specifies the new background color."},{"content":"Specify the <ph id=\"ph1\">`CLR_DEFAULT`</ph> value to use the default background color for the progress bar.","pos":[15760,15849],"source":" Specify the `CLR_DEFAULT` value to use the default background color for the progress bar."},{"pos":[15859,15871],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[15875,16062],"content":"The <bpt id=\"p1\">[</bpt>COLORREF<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/dd183449)</ept> value indicating the previous background color, or <bpt id=\"p2\">**</bpt>CLR_DEFAULT<ept id=\"p2\">**</ept> if the background color is the default color.","source":"The [COLORREF](http://msdn.microsoft.com/library/windows/desktop/dd183449) value indicating the previous background color, or **CLR_DEFAULT** if the background color is the default color."},{"pos":[16072,16079],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[16083,16183],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_MFC_CProgressCtrl#6<ept id=\"p2\">](../../mfc/reference/codesnippet/cpp/cprogressctrl-class_10.cpp)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_MFC_CProgressCtrl#6](../../mfc/reference/codesnippet/cpp/cprogressctrl-class_10.cpp)]"},{"pos":[16193,16260],"content":"<bpt id=\"p1\">&lt;a name=\"cprogressctrl__setmarquee\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CProgressCtrl::SetMarquee","linkify":"<a name=\"cprogressctrl__setmarquee\"></a>  CProgressCtrl::SetMarquee","source":"<a name=\"cprogressctrl__setmarquee\"></a>  CProgressCtrl::SetMarquee"},{"content":"Turns marquee mode on or off for the current progress bar control.","pos":[16264,16330]},{"pos":[16418,16428],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[16435,16444]},{"content":"Description","pos":[16445,16456]},{"pos":[16499,16518],"content":"[in] <ph id=\"ph1\">`fMarqueeMode`</ph>","source":"[in] `fMarqueeMode`"},{"pos":[16519,16587],"content":"<ph id=\"ph1\">`true`</ph> to turn marquee mode on, or <ph id=\"ph2\">`false`</ph> to turn marquee mode off.","source":"`true` to turn marquee mode on, or `false` to turn marquee mode off."},{"pos":[16592,16608],"content":"[in] <ph id=\"ph1\">`nInterval`</ph>","source":"[in] `nInterval`"},{"content":"Time in milliseconds between updates of the marquee animation.","pos":[16609,16671]},{"pos":[16682,16694],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[16698,16732],"content":"This method always returns <ph id=\"ph1\">`true`</ph>.","source":"This method always returns `true`."},{"pos":[16742,16749],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"When marquee mode is turned on, the progress bar is animated and scrolls like a sign on a theater marquee.","pos":[16753,16859]},{"pos":[16866,17052],"content":"This method sends the <bpt id=\"p1\">[</bpt>PBM_SETMARQUEE<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb760842)</ept> message, which is described in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"This method sends the [PBM_SETMARQUEE](http://msdn.microsoft.com/library/windows/desktop/bb760842) message, which is described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"pos":[17062,17069],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following code example defines the variable, <ph id=\"ph1\">`m_progressCtrl`</ph>, that is used to programmatically access the progress bar control.","pos":[17073,17205],"source":"The following code example defines the variable, `m_progressCtrl`, that is used to programmatically access the progress bar control."},{"content":"This variable is used in the next example.","pos":[17206,17248]},{"pos":[17255,17355],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_MFC_CProgressCtrl_s1#9<ept id=\"p2\">](../../mfc/reference/codesnippet/cpp/cprogressctrl-class_5.h)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_MFC_CProgressCtrl_s1#9](../../mfc/reference/codesnippet/cpp/cprogressctrl-class_5.h)]"},{"pos":[17365,17372],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following code example starts and stops the marquee scrolling animation.","pos":[17376,17452]},{"pos":[17459,17562],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_MFC_CProgressCtrl_s1#2<ept id=\"p2\">](../../mfc/reference/codesnippet/cpp/cprogressctrl-class_11.cpp)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_MFC_CProgressCtrl_s1#2](../../mfc/reference/codesnippet/cpp/cprogressctrl-class_11.cpp)]"},{"pos":[17572,17631],"content":"<bpt id=\"p1\">&lt;a name=\"cprogressctrl__setpos\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CProgressCtrl::SetPos","linkify":"<a name=\"cprogressctrl__setpos\"></a>  CProgressCtrl::SetPos","source":"<a name=\"cprogressctrl__setpos\"></a>  CProgressCtrl::SetPos"},{"pos":[17635,17755],"content":"Sets the progress bar control's current position as specified by <ph id=\"ph1\">`nPos`</ph> and redraws the bar to reflect the new position.","source":"Sets the progress bar control's current position as specified by `nPos` and redraws the bar to reflect the new position."},{"pos":[17802,17812],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"New position of the progress bar control.","pos":[17826,17867]},{"pos":[17877,17889],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The previous position of the progress bar control.","pos":[17893,17943]},{"pos":[17953,17960],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[17964,18147],"content":"The position of the progress bar control is not the physical location on the screen, but rather is between the upper and lower range indicated in <bpt id=\"p1\">[</bpt>SetRange<ept id=\"p1\">](#cprogressctrl__setrange)</ept>.","source":"The position of the progress bar control is not the physical location on the screen, but rather is between the upper and lower range indicated in [SetRange](#cprogressctrl__setrange)."},{"pos":[18157,18164],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[18168,18268],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_MFC_CProgressCtrl#7<ept id=\"p2\">](../../mfc/reference/codesnippet/cpp/cprogressctrl-class_12.cpp)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_MFC_CProgressCtrl#7](../../mfc/reference/codesnippet/cpp/cprogressctrl-class_12.cpp)]"},{"pos":[18278,18341],"content":"<bpt id=\"p1\">&lt;a name=\"cprogressctrl__setrange\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CProgressCtrl::SetRange","linkify":"<a name=\"cprogressctrl__setrange\"></a>  CProgressCtrl::SetRange","source":"<a name=\"cprogressctrl__setrange\"></a>  CProgressCtrl::SetRange"},{"content":"Sets the upper and lower limits of the progress bar control's range and redraws the bar to reflect the new ranges.","pos":[18345,18459]},{"pos":[18593,18603],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Specifies the lower limit of the range (default is zero).","pos":[18619,18676]},{"content":"Specifies the upper limit of the range (default is 100).","pos":[18695,18751]},{"pos":[18761,18768],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[18772,18852],"content":"The member function <ph id=\"ph1\">`SetRange32`</ph> sets the 32-bit range for the progress control.","source":"The member function `SetRange32` sets the 32-bit range for the progress control."},{"pos":[18862,18869],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[18873,18973],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_MFC_CProgressCtrl#8<ept id=\"p2\">](../../mfc/reference/codesnippet/cpp/cprogressctrl-class_13.cpp)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_MFC_CProgressCtrl#8](../../mfc/reference/codesnippet/cpp/cprogressctrl-class_13.cpp)]"},{"pos":[18983,19046],"content":"<bpt id=\"p1\">&lt;a name=\"cprogressctrl__setstate\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CProgressCtrl::SetState","linkify":"<a name=\"cprogressctrl__setstate\"></a>  CProgressCtrl::SetState","source":"<a name=\"cprogressctrl__setstate\"></a>  CProgressCtrl::SetState"},{"content":"Sets the state of the current progress bar control.","pos":[19050,19101]},{"pos":[19152,19162],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[19169,19178]},{"content":"Description","pos":[19179,19190]},{"pos":[19233,19246],"content":"[in] <ph id=\"ph1\">`iState`</ph>","source":"[in] `iState`"},{"content":"The state to set the progress bar.","pos":[19247,19281]},{"content":"Use one of the following values:","pos":[19282,19314]},{"content":"<ph id=\"ph1\"> - </ph><ph id=\"ph2\">`PBST_NORMAL`</ph> - In progress","pos":[19326,19356],"source":" - `PBST_NORMAL` - In progress"},{"content":"<ph id=\"ph1\">- </ph><ph id=\"ph2\">`PBST_ERROR`</ph> - Error","pos":[19362,19384],"source":"- `PBST_ERROR` - Error"},{"content":"<ph id=\"ph1\">- </ph><ph id=\"ph2\">`PBST_PAUSED`</ph> - Paused","pos":[19390,19414],"source":"- `PBST_PAUSED` - Paused"},{"pos":[19425,19437],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The previous state of the current progress bar control.","pos":[19441,19496]},{"pos":[19506,19513],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[19517,19701],"content":"This method sends the <bpt id=\"p1\">[</bpt>PBM_SETSTATE<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb760850)</ept> message, which is described in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"This method sends the [PBM_SETSTATE](http://msdn.microsoft.com/library/windows/desktop/bb760850) message, which is described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"pos":[19711,19718],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following code example defines the variable, <ph id=\"ph1\">`m_progressCtrl`</ph>, that is used to programmatically access the progress bar control.","pos":[19722,19854],"source":"The following code example defines the variable, `m_progressCtrl`, that is used to programmatically access the progress bar control."},{"content":"This variable is used in the next example.","pos":[19855,19897]},{"pos":[19904,20004],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_MFC_CProgressCtrl_s1#9<ept id=\"p2\">](../../mfc/reference/codesnippet/cpp/cprogressctrl-class_5.h)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_MFC_CProgressCtrl_s1#9](../../mfc/reference/codesnippet/cpp/cprogressctrl-class_5.h)]"},{"pos":[20014,20021],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following code example sets the state of the current progress bar control to Paused or In Progress.","pos":[20025,20128]},{"pos":[20135,20238],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_MFC_CProgressCtrl_s1#4<ept id=\"p2\">](../../mfc/reference/codesnippet/cpp/cprogressctrl-class_14.cpp)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_MFC_CProgressCtrl_s1#4](../../mfc/reference/codesnippet/cpp/cprogressctrl-class_14.cpp)]"},{"pos":[20248,20309],"content":"<bpt id=\"p1\">&lt;a name=\"cprogressctrl__setstep\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CProgressCtrl::SetStep","linkify":"<a name=\"cprogressctrl__setstep\"></a>  CProgressCtrl::SetStep","source":"<a name=\"cprogressctrl__setstep\"></a>  CProgressCtrl::SetStep"},{"content":"Specifies the step increment for a progress bar control.","pos":[20313,20369]},{"pos":[20418,20428],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"<bpt id=\"p1\">*</bpt>nStep<ept id=\"p1\">*</ept>","pos":[20432,20439],"source":"*nStep*"},{"content":"New step increment.","pos":[20443,20462]},{"pos":[20472,20484],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The previous step increment.","pos":[20488,20516]},{"pos":[20526,20533],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[20537,20659],"content":"The step increment is the amount by which a call to <ph id=\"ph1\">`CProgressCtrl::StepIt`</ph> increases the progress bar's current position.","source":"The step increment is the amount by which a call to `CProgressCtrl::StepIt` increases the progress bar's current position."},{"content":"The default step increment is 10.","pos":[20666,20699]},{"pos":[20709,20716],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[20720,20820],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_MFC_CProgressCtrl#9<ept id=\"p2\">](../../mfc/reference/codesnippet/cpp/cprogressctrl-class_15.cpp)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_MFC_CProgressCtrl#9](../../mfc/reference/codesnippet/cpp/cprogressctrl-class_15.cpp)]"},{"pos":[20830,20889],"content":"<bpt id=\"p1\">&lt;a name=\"cprogressctrl__stepit\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CProgressCtrl::StepIt","linkify":"<a name=\"cprogressctrl__stepit\"></a>  CProgressCtrl::StepIt","source":"<a name=\"cprogressctrl__stepit\"></a>  CProgressCtrl::StepIt"},{"content":"Advances the current position for a progress bar control by the step increment and redraws the bar to reflect the new position.","pos":[20893,21020]},{"pos":[21059,21071],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The previous position of the progress bar control.","pos":[21075,21125]},{"pos":[21135,21142],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[21146,21220],"content":"The step increment is set by the <ph id=\"ph1\">`CProgressCtrl::SetStep`</ph> member function.","source":"The step increment is set by the `CProgressCtrl::SetStep` member function."},{"pos":[21230,21237],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[21241,21342],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_MFC_CProgressCtrl#10<ept id=\"p2\">](../../mfc/reference/codesnippet/cpp/cprogressctrl-class_16.cpp)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_MFC_CProgressCtrl#10](../../mfc/reference/codesnippet/cpp/cprogressctrl-class_16.cpp)]"},{"pos":[21351,21359],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>MFC Sample CMNCTRL2<ept id=\"p1\">](../../visual-cpp-samples.md)</ept><ph id=\"ph1\"> </ph>","pos":[21363,21414],"source":"[MFC Sample CMNCTRL2](../../visual-cpp-samples.md) "},{"content":"<bpt id=\"p1\"> [</bpt>CWnd Class<ept id=\"p1\">](../../mfc/reference/cwnd-class.md)</ept><ph id=\"ph1\"> </ph>","pos":[21417,21466],"source":" [CWnd Class](../../mfc/reference/cwnd-class.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Hierarchy Chart<ept id=\"p1\">](../../mfc/hierarchy-chart.md)</ept>","pos":[21469,21517],"source":" [Hierarchy Chart](../../mfc/hierarchy-chart.md)"}],"content":"---\ntitle: \"CProgressCtrl Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"CProgressCtrl\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"CProgressCtrl class\"\n  - \"progress controls [C++], CProgressCtrl class\"\n  - \"Internet Explorer 4.0 common controls\"\nms.assetid: 222630f4-1598-4026-8198-51649b1192ab\ncaps.latest.revision: 25\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# CProgressCtrl Class\nProvides the functionality of the Windows common progress bar control.  \n  \n## Syntax  \n  \n```  \nclass CProgressCtrl : public CWnd  \n```  \n  \n## Members  \n  \n### Public Constructors  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CProgressCtrl::CProgressCtrl](#cprogressctrl__cprogressctrl)|Constructs a `CProgressCtrl` object.|  \n  \n### Public Methods  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CProgressCtrl::Create](#cprogressctrl__create)|Creates a progress bar control and attaches it to a `CProgressCtrl` object.|  \n|[CProgressCtrl::CreateEx](#cprogressctrl__createex)|Creates a progress control with the specified Windows extended styles and attaches it to a `CProgressCtrl` object.|  \n|[CProgressCtrl::GetBarColor](#cprogressctrl__getbarcolor)|Gets the color of the progress indicator bar for the current progress bar control.|  \n|[CProgressCtrl::GetBkColor](#cprogressctrl__getbkcolor)|Gets the background color of the current progress bar.|  \n|[CProgressCtrl::GetPos](#cprogressctrl__getpos)|Gets the current position of the progress bar.|  \n|[CProgressCtrl::GetRange](#cprogressctrl__getrange)|Gets the lower and upper limits of the range of the progress bar control.|  \n|[CProgressCtrl::GetState](#cprogressctrl__getstate)|Gets the state of the current progress bar control.|  \n|[CProgressCtrl::GetStep](#cprogressctrl__getstep)|Retrieves the step increment for the progress bar of the current progress bar control.|  \n|[CProgressCtrl::OffsetPos](#cprogressctrl__offsetpos)|Advances the current position of a progress bar control by a specified increment and redraws the bar to reflect the new position.|  \n|[CProgressCtrl::SetBarColor](#cprogressctrl__setbarcolor)|Sets the color of the progress indicator bar in the current progress bar control.|  \n|[CProgressCtrl::SetBkColor](#cprogressctrl__setbkcolor)|Sets the background color for the progress bar.|  \n|[CProgressCtrl::SetMarquee](#cprogressctrl__setmarquee)|Turns marquee mode on or off for the current progress bar control.|  \n|[CProgressCtrl::SetPos](#cprogressctrl__setpos)|Sets the current position for a progress bar control and redraws the bar to reflect the new position.|  \n|[CProgressCtrl::SetRange](#cprogressctrl__setrange)|Sets the minimum and maximum ranges for a progress bar control and redraws the bar to reflect the new ranges.|  \n|[CProgressCtrl::SetState](#cprogressctrl__setstate)|Sets the state of the current progress bar control.|  \n|[CProgressCtrl::SetStep](#cprogressctrl__setstep)|Specifies the step increment for a progress bar control.|  \n|[CProgressCtrl::StepIt](#cprogressctrl__stepit)|Advances the current position for a progress bar control by the step increment (see [SetStep](#cprogressctrl__setstep)) and redraws the bar to reflect the new position.|  \n  \n## Remarks  \n A progress bar control is a window that an application can use to indicate the progress of a lengthy operation. It consists of a rectangle that is gradually filled, from left to right, with the system highlight color as an operation progresses.  \n  \n A progress bar control has a range and a current position. The range represents the total duration of the operation, and the current position represents the progress the application has made toward completing the operation. The window procedure uses the range and the current position to determine the percentage of the progress bar to fill with the highlight color. Because the range and current position values are expressed as signed integers, the possible range of current position values is from â€“2,147,483,648 to 2,147,483,647 inclusive.  \n  \n For more information on using `CProgressCtrl`, see [Controls](../../mfc/controls-mfc.md) and [Using CProgressCtrl](../../mfc/using-cprogressctrl.md).  \n  \n## Inheritance Hierarchy  \n [CObject](../../mfc/reference/cobject-class.md)  \n  \n [CCmdTarget](../../mfc/reference/ccmdtarget-class.md)  \n  \n [CWnd](../../mfc/reference/cwnd-class.md)  \n  \n `CProgressCtrl`  \n  \n## Requirements  \n **Header:** afxcmn.h  \n  \n##  <a name=\"cprogressctrl__cprogressctrl\"></a>  CProgressCtrl::CProgressCtrl  \n Constructs a `CProgressCtrl` object.  \n  \n```  \nCProgressCtrl();\n```  \n  \n### Remarks  \n After constructing the `CProgressCtrl` object, call `CProgressCtrl::Create` to create the progress bar control.  \n  \n### Example  \n [!code-cpp[NVC_MFC_CProgressCtrl#1](../../mfc/reference/codesnippet/cpp/cprogressctrl-class_1.cpp)]  \n  \n##  <a name=\"cprogressctrl__create\"></a>  CProgressCtrl::Create  \n Creates a progress bar control and attaches it to a `CProgressCtrl` object.  \n  \n```  \nvirtual BOOL Create(\n    DWORD dwStyle,  \n    const RECT& rect,  \n    CWnd* pParentWnd,  \n    UINT nID);\n```  \n  \n### Parameters  \n `dwStyle`  \n Specifies the progress bar control's style. Apply any combination of window stylesdescribed in [CreateWindow](http://msdn.microsoft.com/library/windows/desktop/ms632679) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)], in addition to the following progress bar control styles, to the control:  \n  \n- `PBS_VERTICAL` Displays progress information vertically, top to bottom. Without this flag, the progress bar control displays horizontally, left to right.  \n  \n- `PBS_SMOOTH` Displays gradual, smooth filling in the progress bar control. Without this flag, the control will fill with blocks.  \n  \n `rect`  \n Specifies the progress bar control's size and position. It can be either a [CRect](../../atl-mfc-shared/reference/crect-class.md) object or a [RECT](http://msdn.microsoft.com/library/windows/desktop/dd162897) structure. Because the control must be a child window, the specified coordinates are relative to the client area of the `pParentWnd`.  \n  \n `pParentWnd`  \n Specifies the progress bar control's parent window, usually a `CDialog`. It must not be **NULL.**  \n  \n `nID`  \n Specifies the progress bar control's ID.  \n  \n### Return Value  \n **TRUE** if the `CProgressCtrl` object is successfully created; otherwise **FALSE**.  \n  \n### Remarks  \n You construct a `CProgressCtrl` object in two steps. First, call the constructor, which creates the `CProgressCtrl` object, and then call **Create**, which creates the progress bar control.  \n  \n### Example  \n [!code-cpp[NVC_MFC_CProgressCtrl#2](../../mfc/reference/codesnippet/cpp/cprogressctrl-class_2.cpp)]  \n  \n##  <a name=\"cprogressctrl__createex\"></a>  CProgressCtrl::CreateEx  \n Creates a control (a child window) and associates it with the `CProgressCtrl` object.  \n  \n```  \nvirtual BOOL CreateEx(\n    DWORD dwExStyle,  \n    DWORD dwStyle,  \n    const RECT& rect,  \n    CWnd* pParentWnd,  \n    UINT nID);\n```  \n  \n### Parameters  \n `dwExStyle`  \n Specifies the extended style of the control being created. For a list of extended Windows styles, see the `dwExStyle` parameter for [CreateWindowEx](http://msdn.microsoft.com/library/windows/desktop/ms632680) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n `dwStyle`  \n Specifies the progress bar control's style. Apply any combination of window styles described in [CreateWindow](http://msdn.microsoft.com/library/windows/desktop/ms632679) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n `rect`  \n A reference to a [RECT](http://msdn.microsoft.com/library/windows/desktop/dd162897) structure describing the size and position of the window to be created, in client coordinates of `pParentWnd`.  \n  \n `pParentWnd`  \n A pointer to the window that is the control's parent.  \n  \n `nID`  \n The control's child-window ID.  \n  \n### Return Value  \n Nonzero if successful; otherwise 0.  \n  \n### Remarks  \n Use `CreateEx` instead of [Create](#cprogressctrl__create) to apply extended Windows styles, specified by the Windows extended style preface **WS_EX_**.  \n  \n##  <a name=\"cprogressctrl__getbarcolor\"></a>  CProgressCtrl::GetBarColor  \n Gets the color of the progress indicator bar for the current progress bar control.  \n  \n```  \nCOLORREF GetBarColor() const;\n\n \n```  \n  \n### Return Value  \n The color of the current progress bar, represented as a [COLORREF](http://msdn.microsoft.com/library/windows/desktop/dd183449) value, or `CLR_DEFAULT` if the progress indicator bar color is the default color.  \n  \n### Remarks  \n This method sends the [PBM_GETBARCOLOR](http://msdn.microsoft.com/library/windows/desktop/bb760826) message, which is described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n##  <a name=\"cprogressctrl__getbkcolor\"></a>  CProgressCtrl::GetBkColor  \n Gets the background color of the current progress bar.  \n  \n```  \nCOLORREF GetBkColor() const;\n\n \n```  \n  \n### Return Value  \n The background color of the current progress bar, represented as a [COLORREF](http://msdn.microsoft.com/library/windows/desktop/dd183449) value.  \n  \n### Remarks  \n This method sends the [PBM_GETBKCOLOR](http://msdn.microsoft.com/library/windows/desktop/bb760828) message, which is described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n##  <a name=\"cprogressctrl__getpos\"></a>  CProgressCtrl::GetPos  \n Retrieves the current position of the progress bar.  \n  \n```  \nint GetPos();\n```  \n  \n### Return Value  \n The position of the progress bar control.  \n  \n### Remarks  \n The position of the progress bar control is not the physical location on the screen, but rather is between the upper and lower range indicated in [SetRange](#cprogressctrl__setrange).  \n  \n### Example  \n [!code-cpp[NVC_MFC_CProgressCtrl#3](../../mfc/reference/codesnippet/cpp/cprogressctrl-class_3.cpp)]  \n  \n##  <a name=\"cprogressctrl__getrange\"></a>  CProgressCtrl::GetRange  \n Gets the current lower and upper limits, or range, of the progress bar control.  \n  \n```  \nvoid GetRange(\n    int& nLower,  \n    int& nUpper);\n```  \n  \n### Parameters  \n `nLower`  \n A reference to an integer receiving the lower limit of the progress bar control.  \n  \n `nUpper`  \n A reference to an integer receiving the upper limit of the progress bar control.  \n  \n### Remarks  \n This function copies the values of the lower and upper limits to the integers referenced by `nLower` and `nUpper`, respectively.  \n  \n### Example  \n [!code-cpp[NVC_MFC_CProgressCtrl#4](../../mfc/reference/codesnippet/cpp/cprogressctrl-class_4.cpp)]  \n  \n##  <a name=\"cprogressctrl__getstate\"></a>  CProgressCtrl::GetState  \n Gets the state of the current progress bar control.  \n  \n```  \nint GetState() const;\n\n \n```  \n  \n### Return Value  \n The state of the current progress bar control, which is one of the following values:  \n  \n|Value|State|  \n|-----------|-----------|  \n|`PBST_NORMAL`|In progress|  \n|`PBST_ERROR`|Error|  \n|`PBST_PAUSED`|Paused|  \n  \n### Remarks  \n This method sends the [PBM_GETSTATE](http://msdn.microsoft.com/library/windows/desktop/bb760834) message, which is described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n### Example  \n The following code example defines the variable, `m_progressCtrl`, that is used to programmatically access the progress bar control. This variable is used in the next example.  \n  \n [!code-cpp[NVC_MFC_CProgressCtrl_s1#9](../../mfc/reference/codesnippet/cpp/cprogressctrl-class_5.h)]  \n  \n### Example  \n The following code example retrieves the state of the current progress bar control.  \n  \n [!code-cpp[NVC_MFC_CProgressCtrl_s1#5](../../mfc/reference/codesnippet/cpp/cprogressctrl-class_6.cpp)]  \n  \n##  <a name=\"cprogressctrl__getstep\"></a>  CProgressCtrl::GetStep  \n Retrieves the step increment for the progress bar of the current progress bar control.  \n  \n```  \nint GetStep() const;\n\n \n```  \n  \n### Return Value  \n The step increment of the progress bar.  \n  \n### Remarks  \n The step increment is the amount by which a call to [CProgressCtrl::StepIt](#cprogressctrl__stepit) increases the current position of the progress bar.  \n  \n This method sends the [PBM_GETSTEP](http://msdn.microsoft.com/library/windows/desktop/bb760836) message, which is described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n### Example  \n The following code example defines the variable, `m_progressCtrl`, that is used to programmatically access the progress bar control. This variable is used in the next example.  \n  \n [!code-cpp[NVC_MFC_CProgressCtrl_s1#9](../../mfc/reference/codesnippet/cpp/cprogressctrl-class_5.h)]  \n  \n### Example  \n The following code example retrieves the step increment of the current progress bar control.  \n  \n [!code-cpp[NVC_MFC_CProgressCtrl_s1#3](../../mfc/reference/codesnippet/cpp/cprogressctrl-class_7.cpp)]  \n  \n##  <a name=\"cprogressctrl__offsetpos\"></a>  CProgressCtrl::OffsetPos  \n Advances the progress bar control's current position by the increment specified by `nPos` and redraws the bar to reflect the new position.  \n  \n```  \nint OffsetPos(int nPos);\n```  \n  \n### Parameters  \n `nPos`  \n Amount to advance the position.  \n  \n### Return Value  \n The previous position of the progress bar control.  \n  \n### Example  \n [!code-cpp[NVC_MFC_CProgressCtrl#5](../../mfc/reference/codesnippet/cpp/cprogressctrl-class_8.cpp)]  \n  \n##  <a name=\"cprogressctrl__setbarcolor\"></a>  CProgressCtrl::SetBarColor  \n Sets the color of the progress indicator bar in the current progress bar control.  \n  \n```  \nCOLORREF SetBarColor(COLORREF clrBar);\n```  \n  \n### Parameters  \n  \n|Parameter|Description|  \n|---------------|-----------------|  \n|[in] `clrBar`|A [COLORREF](http://msdn.microsoft.com/library/windows/desktop/dd183449) value that specifies the new color of the progress indicator bar. Specify `CLR_DEFAULT` to cause the progress bar to use its default color.|  \n  \n### Return Value  \n The previous color of the progress indicator bar, represented as a [COLORREF](http://msdn.microsoft.com/library/windows/desktop/dd183449) value, or `CLR_DEFAULT` if the color of the progress indicator bar is the default color.  \n  \n### Remarks  \n The `SetBarColor` method sets the progress bar color only if a [!INCLUDE[windowsver](../../build/reference/includes/windowsver_md.md)][theme](https://msdn.microsoft.com/library/windows/desktop/hh270423.aspx) is not in effect.  \n  \n This method sends the [PBM_SETBARCOLOR](http://msdn.microsoft.com/library/windows/desktop/bb760838) message, which is described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n### Example  \n The following code example defines the variable, `m_progressCtrl`, that is used to programmatically access the progress bar control. This variable is used in the next example.  \n  \n [!code-cpp[NVC_MFC_CProgressCtrl_s1#9](../../mfc/reference/codesnippet/cpp/cprogressctrl-class_5.h)]  \n  \n### Example  \n The following code example changes the color of the progress bar to red, green, blue, or the default.  \n  \n [!code-cpp[NVC_MFC_CProgressCtrl_s1#1](../../mfc/reference/codesnippet/cpp/cprogressctrl-class_9.cpp)]  \n  \n##  <a name=\"cprogressctrl__setbkcolor\"></a>  CProgressCtrl::SetBkColor  \n Sets the background color for the progress bar.  \n  \n```  \nCOLORREF SetBkColor(COLORREF clrNew);\n```  \n  \n### Parameters  \n `clrNew`  \n A **COLORREF** value that specifies the new background color. Specify the `CLR_DEFAULT` value to use the default background color for the progress bar.  \n  \n### Return Value  \n The [COLORREF](http://msdn.microsoft.com/library/windows/desktop/dd183449) value indicating the previous background color, or **CLR_DEFAULT** if the background color is the default color.  \n  \n### Example  \n [!code-cpp[NVC_MFC_CProgressCtrl#6](../../mfc/reference/codesnippet/cpp/cprogressctrl-class_10.cpp)]  \n  \n##  <a name=\"cprogressctrl__setmarquee\"></a>  CProgressCtrl::SetMarquee  \n Turns marquee mode on or off for the current progress bar control.  \n  \n```  \nBOOL SetMarquee(\n    BOOL fMarqueeMode,   \n    int nInterval);\n```  \n  \n### Parameters  \n  \n|Parameter|Description|  \n|---------------|-----------------|  \n|[in] `fMarqueeMode`|`true` to turn marquee mode on, or `false` to turn marquee mode off.|  \n|[in] `nInterval`|Time in milliseconds between updates of the marquee animation.|  \n  \n### Return Value  \n This method always returns `true`.  \n  \n### Remarks  \n When marquee mode is turned on, the progress bar is animated and scrolls like a sign on a theater marquee.  \n  \n This method sends the [PBM_SETMARQUEE](http://msdn.microsoft.com/library/windows/desktop/bb760842) message, which is described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n### Example  \n The following code example defines the variable, `m_progressCtrl`, that is used to programmatically access the progress bar control. This variable is used in the next example.  \n  \n [!code-cpp[NVC_MFC_CProgressCtrl_s1#9](../../mfc/reference/codesnippet/cpp/cprogressctrl-class_5.h)]  \n  \n### Example  \n The following code example starts and stops the marquee scrolling animation.  \n  \n [!code-cpp[NVC_MFC_CProgressCtrl_s1#2](../../mfc/reference/codesnippet/cpp/cprogressctrl-class_11.cpp)]  \n  \n##  <a name=\"cprogressctrl__setpos\"></a>  CProgressCtrl::SetPos  \n Sets the progress bar control's current position as specified by `nPos` and redraws the bar to reflect the new position.  \n  \n```  \nint SetPos(int nPos);\n```  \n  \n### Parameters  \n `nPos`  \n New position of the progress bar control.  \n  \n### Return Value  \n The previous position of the progress bar control.  \n  \n### Remarks  \n The position of the progress bar control is not the physical location on the screen, but rather is between the upper and lower range indicated in [SetRange](#cprogressctrl__setrange).  \n  \n### Example  \n [!code-cpp[NVC_MFC_CProgressCtrl#7](../../mfc/reference/codesnippet/cpp/cprogressctrl-class_12.cpp)]  \n  \n##  <a name=\"cprogressctrl__setrange\"></a>  CProgressCtrl::SetRange  \n Sets the upper and lower limits of the progress bar control's range and redraws the bar to reflect the new ranges.  \n  \n```  \nvoid SetRange(\n    short nLower,  \n    short nUpper);\n\n \nvoid SetRange32(\n    int nLower,  \n    int nUpper);\n```  \n  \n### Parameters  \n `nLower`  \n Specifies the lower limit of the range (default is zero).  \n  \n `nUpper`  \n Specifies the upper limit of the range (default is 100).  \n  \n### Remarks  \n The member function `SetRange32` sets the 32-bit range for the progress control.  \n  \n### Example  \n [!code-cpp[NVC_MFC_CProgressCtrl#8](../../mfc/reference/codesnippet/cpp/cprogressctrl-class_13.cpp)]  \n  \n##  <a name=\"cprogressctrl__setstate\"></a>  CProgressCtrl::SetState  \n Sets the state of the current progress bar control.  \n  \n```  \nint SetState(int iState);\n```  \n  \n### Parameters  \n  \n|Parameter|Description|  \n|---------------|-----------------|  \n|[in] `iState`|The state to set the progress bar. Use one of the following values:<br /><br /> - `PBST_NORMAL` - In progress<br />- `PBST_ERROR` - Error<br />- `PBST_PAUSED` - Paused|  \n  \n### Return Value  \n The previous state of the current progress bar control.  \n  \n### Remarks  \n This method sends the [PBM_SETSTATE](http://msdn.microsoft.com/library/windows/desktop/bb760850) message, which is described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n### Example  \n The following code example defines the variable, `m_progressCtrl`, that is used to programmatically access the progress bar control. This variable is used in the next example.  \n  \n [!code-cpp[NVC_MFC_CProgressCtrl_s1#9](../../mfc/reference/codesnippet/cpp/cprogressctrl-class_5.h)]  \n  \n### Example  \n The following code example sets the state of the current progress bar control to Paused or In Progress.  \n  \n [!code-cpp[NVC_MFC_CProgressCtrl_s1#4](../../mfc/reference/codesnippet/cpp/cprogressctrl-class_14.cpp)]  \n  \n##  <a name=\"cprogressctrl__setstep\"></a>  CProgressCtrl::SetStep  \n Specifies the step increment for a progress bar control.  \n  \n```  \nint SetStep(int nStep);\n```  \n  \n### Parameters  \n *nStep*  \n New step increment.  \n  \n### Return Value  \n The previous step increment.  \n  \n### Remarks  \n The step increment is the amount by which a call to `CProgressCtrl::StepIt` increases the progress bar's current position.  \n  \n The default step increment is 10.  \n  \n### Example  \n [!code-cpp[NVC_MFC_CProgressCtrl#9](../../mfc/reference/codesnippet/cpp/cprogressctrl-class_15.cpp)]  \n  \n##  <a name=\"cprogressctrl__stepit\"></a>  CProgressCtrl::StepIt  \n Advances the current position for a progress bar control by the step increment and redraws the bar to reflect the new position.  \n  \n```  \nint StepIt();\n```  \n  \n### Return Value  \n The previous position of the progress bar control.  \n  \n### Remarks  \n The step increment is set by the `CProgressCtrl::SetStep` member function.  \n  \n### Example  \n [!code-cpp[NVC_MFC_CProgressCtrl#10](../../mfc/reference/codesnippet/cpp/cprogressctrl-class_16.cpp)]  \n  \n## See Also  \n [MFC Sample CMNCTRL2](../../visual-cpp-samples.md)   \n [CWnd Class](../../mfc/reference/cwnd-class.md)   \n [Hierarchy Chart](../../mfc/hierarchy-chart.md)\n\n\n"}