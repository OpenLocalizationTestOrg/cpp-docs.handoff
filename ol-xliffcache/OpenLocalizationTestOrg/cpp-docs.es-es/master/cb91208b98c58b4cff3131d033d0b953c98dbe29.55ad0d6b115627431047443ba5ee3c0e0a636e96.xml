{"nodes":[{"pos":[12,46],"content":"CSliderCtrl Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"CSliderCtrl Class | Microsoft Docs","pos":[0,34]}]},{"content":"CSliderCtrl Class","pos":[738,755]},{"content":"Provides the functionality of the Windows common slider control.","pos":[756,820]},{"content":"Syntax","pos":[829,835]},{"content":"Members","pos":[893,900]},{"content":"Public Constructors","pos":[910,929]},{"content":"Name","pos":[936,940]},{"content":"Description","pos":[941,952]},{"content":"CSliderCtrl::CSliderCtrl","pos":[991,1015]},{"pos":[1044,1078],"content":"Constructs a <ph id=\"ph1\">`CSliderCtrl`</ph> object.","source":"Constructs a `CSliderCtrl` object."},{"content":"Public Methods","pos":[1089,1103]},{"content":"Name","pos":[1110,1114]},{"content":"Description","pos":[1115,1126]},{"content":"CSliderCtrl::ClearSel","pos":[1165,1186]},{"content":"Clears the current selection in a slider control.","pos":[1212,1261]},{"content":"CSliderCtrl::ClearTics","pos":[1267,1289]},{"content":"Removes the current tick marks from a slider control.","pos":[1316,1369]},{"content":"CSliderCtrl::Create","pos":[1375,1394]},{"pos":[1418,1485],"content":"Creates a slider control and attaches it to a <ph id=\"ph1\">`CSliderCtrl`</ph> object.","source":"Creates a slider control and attaches it to a `CSliderCtrl` object."},{"content":"CSliderCtrl::CreateEx","pos":[1491,1512]},{"pos":[1538,1648],"content":"Creates a slider control with the specified Windows extended styles and attaches it to a <ph id=\"ph1\">`CSliderCtrl`</ph> object.","source":"Creates a slider control with the specified Windows extended styles and attaches it to a `CSliderCtrl` object."},{"content":"CSliderCtrl::GetBuddy","pos":[1654,1675]},{"content":"Retrieves the handle to a slider control buddy window at a given location.","pos":[1701,1775]},{"content":"CSliderCtrl::GetChannelRect","pos":[1781,1808]},{"content":"Retrieves the size of the slider control's channel.","pos":[1840,1891]},{"content":"CSliderCtrl::GetLineSize","pos":[1897,1921]},{"content":"Retrieves the line size of a slider control.","pos":[1950,1994]},{"content":"CSliderCtrl::GetNumTics","pos":[2000,2023]},{"content":"Retrieves the number of tick marks in a slider control.","pos":[2051,2106]},{"content":"CSliderCtrl::GetPageSize","pos":[2112,2136]},{"content":"Retrieves the page size of a slider control.","pos":[2165,2209]},{"content":"CSliderCtrl::GetPos","pos":[2215,2234]},{"content":"Retrieves the current position of the slider.","pos":[2258,2303]},{"content":"CSliderCtrl::GetRange","pos":[2309,2330]},{"content":"Retrieves the minimum and maximum positions for a slider.","pos":[2356,2413]},{"content":"CSliderCtrl::GetRangeMax","pos":[2419,2443]},{"content":"Retrieves the maximum position for a slider.","pos":[2472,2516]},{"content":"CSliderCtrl::GetRangeMin","pos":[2522,2546]},{"content":"Retrieves the minimum position for a slider.","pos":[2575,2619]},{"content":"CSliderCtrl::GetSelection","pos":[2625,2650]},{"content":"Retrieves the range of the current selection.","pos":[2680,2725]},{"content":"CSliderCtrl::GetThumbLength","pos":[2731,2758]},{"content":"Retrieves the length of the slider in the current trackbar control.","pos":[2790,2857]},{"content":"CSliderCtrl::GetThumbRect","pos":[2863,2888]},{"content":"Retrieves the size of the slider control's thumb.","pos":[2918,2967]},{"content":"CSliderCtrl::GetTic","pos":[2973,2992]},{"content":"Retrieves the position of the specified tick mark.","pos":[3016,3066]},{"content":"CSliderCtrl::GetTicArray","pos":[3072,3096]},{"content":"Retrieves the array of tick mark positions for a slider control.","pos":[3125,3189]},{"content":"CSliderCtrl::GetTicPos","pos":[3195,3217]},{"content":"Retrieves the position of the specified tick mark, in client coordinates.","pos":[3244,3317]},{"content":"CSliderCtrl::GetToolTips","pos":[3323,3347]},{"content":"Retrieves the handle to the tooltip control assigned to the slider control, if any.","pos":[3376,3459]},{"content":"CSliderCtrl::SetBuddy","pos":[3465,3486]},{"content":"Assigns a window as the buddy window for a slider control.","pos":[3512,3570]},{"content":"CSliderCtrl::SetLineSize","pos":[3576,3600]},{"content":"Sets the line size of a slider control.","pos":[3629,3668]},{"content":"CSliderCtrl::SetPageSize","pos":[3674,3698]},{"content":"Sets the page size of a slider control.","pos":[3727,3766]},{"content":"CSliderCtrl::SetPos","pos":[3772,3791]},{"content":"Sets the current position of the slider.","pos":[3815,3855]},{"content":"CSliderCtrl::SetRange","pos":[3861,3882]},{"content":"Sets the minimum and maximum positions for a slider.","pos":[3908,3960]},{"content":"CSliderCtrl::SetRangeMax","pos":[3966,3990]},{"content":"Sets the maximum position for a slider.","pos":[4019,4058]},{"content":"CSliderCtrl::SetRangeMin","pos":[4064,4088]},{"content":"Sets the minimum position for a slider.","pos":[4117,4156]},{"content":"CSliderCtrl::SetSelection","pos":[4162,4187]},{"content":"Sets the range of the current selection.","pos":[4217,4257]},{"content":"CSliderCtrl::SetThumbLength","pos":[4263,4290]},{"content":"Sets the length of the slider in the current trackbar control.","pos":[4322,4384]},{"content":"CSliderCtrl::SetTic","pos":[4390,4409]},{"content":"Sets the position of the specified tick mark.","pos":[4433,4478]},{"content":"CSliderCtrl::SetTicFreq","pos":[4484,4507]},{"content":"Sets the frequency of tick marks per slider control increment.","pos":[4535,4597]},{"content":"CSliderCtrl::SetTipSide","pos":[4603,4626]},{"content":"Positions a tooltip control used by a trackbar control.","pos":[4654,4709]},{"content":"CSliderCtrl::SetToolTips","pos":[4715,4739]},{"content":"Assigns a tooltip control to a slider control.","pos":[4768,4814]},{"content":"Remarks","pos":[4824,4831]},{"content":"A \"slider control\" (also known as a trackbar) is a window containing a slider and optional tick marks.","pos":[4835,4937]},{"content":"When the user moves the slider, using either the mouse or the direction keys, the control sends notification messages to indicate the change.","pos":[4938,5079]},{"content":"Slider controls are useful when you want the user to select a discrete value or a set of consecutive values in a range.","pos":[5086,5205]},{"content":"For example, you might use a slider control to allow the user to set the repeat rate of the keyboard by moving the slider to a given tick mark.","pos":[5206,5349]},{"pos":[5356,5505],"content":"This control (and therefore the <ph id=\"ph1\">`CSliderCtrl`</ph> class) is available only to programs running under Windows 95/98 and Windows NT version 3.51 and later.","source":"This control (and therefore the `CSliderCtrl` class) is available only to programs running under Windows 95/98 and Windows NT version 3.51 and later."},{"content":"The slider moves in increments that you specify when you create it.","pos":[5512,5579]},{"content":"For example, if you specify that the slider should have a range of five, the slider can only occupy six positions: a position at the left side of the slider control and one position for each increment in the range.","pos":[5580,5794]},{"content":"Typically, each of these positions is identified by a tick mark.","pos":[5795,5859]},{"content":"You create a slider by using the constructor and the <bpt id=\"p1\">**</bpt>Create<ept id=\"p1\">**</ept> member function of <ph id=\"ph1\">`CSliderCtrl`</ph>.","pos":[5866,5963],"source":"You create a slider by using the constructor and the **Create** member function of `CSliderCtrl`."},{"content":"Once you have created a slider control, you can use member functions in <ph id=\"ph1\">`CSliderCtrl`</ph> to change many of its properties.","pos":[5964,6083],"source":" Once you have created a slider control, you can use member functions in `CSliderCtrl` to change many of its properties."},{"content":"Changes that you can make include setting the minimum and maximum positions for the slider, drawing tick marks, setting a selection range, and repositioning the slider.","pos":[6084,6252]},{"pos":[6259,6402],"content":"For more information on using <ph id=\"ph1\">`CSliderCtrl`</ph>, see <bpt id=\"p1\">[</bpt>Controls<ept id=\"p1\">](../../mfc/controls-mfc.md)</ept> and <bpt id=\"p2\">[</bpt>Using CSliderCtrl<ept id=\"p2\">](../../mfc/using-csliderctrl.md)</ept>.","source":"For more information on using `CSliderCtrl`, see [Controls](../../mfc/controls-mfc.md) and [Using CSliderCtrl](../../mfc/using-csliderctrl.md)."},{"content":"Inheritance Hierarchy","pos":[6411,6432]},{"content":"CObject","pos":[6437,6444]},{"content":"CCmdTarget","pos":[6491,6501]},{"content":"CWnd","pos":[6551,6555]},{"content":"Requirements","pos":[6620,6632]},{"pos":[6636,6656],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> afxcmn.h","source":"**Header:** afxcmn.h"},{"pos":[6704,6725],"content":"CSliderCtrl::ClearSel"},{"content":"Clears the current selection in a slider control.","pos":[6729,6778]},{"content":"Parameters","pos":[6840,6850]},{"content":"Redraw flag.","pos":[6867,6879]},{"content":"If this parameter is <bpt id=\"p1\">**</bpt>TRUE<ept id=\"p1\">**</ept>, the slider is redrawn after the selection is cleared; otherwise the slider is not redrawn.","pos":[6880,7001],"source":" If this parameter is **TRUE**, the slider is redrawn after the selection is cleared; otherwise the slider is not redrawn."},{"pos":[7050,7072],"content":"CSliderCtrl::ClearTics"},{"content":"Removes the current tick marks from a slider control.","pos":[7076,7129]},{"content":"Parameters","pos":[7192,7202]},{"content":"Redraw flag.","pos":[7219,7231]},{"content":"If this parameter is <bpt id=\"p1\">**</bpt>TRUE<ept id=\"p1\">**</ept>, the slider is redrawn after the tick marks are cleared; otherwise the slider is not redrawn.","pos":[7232,7355],"source":" If this parameter is **TRUE**, the slider is redrawn after the tick marks are cleared; otherwise the slider is not redrawn."},{"pos":[7401,7420],"content":"CSliderCtrl::Create"},{"pos":[7424,7491],"content":"Creates a slider control and attaches it to a <ph id=\"ph1\">`CSliderCtrl`</ph> object.","source":"Creates a slider control and attaches it to a `CSliderCtrl` object."},{"content":"Parameters","pos":[7621,7631]},{"content":"Specifies the slider control's style.","pos":[7648,7685]},{"content":"Apply any combination of <bpt id=\"p1\">[</bpt>slider control styles<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb760147)</ept>, described in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>, to the control.","pos":[7686,7881],"source":" Apply any combination of [slider control styles](http://msdn.microsoft.com/library/windows/desktop/bb760147), described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)], to the control."},{"content":"Specifies the slider control's size and position.","pos":[7898,7947]},{"content":"It can be either a <bpt id=\"p1\">[</bpt>CRect<ept id=\"p1\">](../../atl-mfc-shared/reference/crect-class.md)</ept> object or a <bpt id=\"p2\">[</bpt>RECT<ept id=\"p2\">](http://msdn.microsoft.com/library/windows/desktop/dd162897)</ept> structure.","pos":[7948,8111],"source":" It can be either a [CRect](../../atl-mfc-shared/reference/crect-class.md) object or a [RECT](http://msdn.microsoft.com/library/windows/desktop/dd162897) structure."},{"content":"Specifies the slider control's parent window, usually a <ph id=\"ph1\">`CDialog`</ph>.","pos":[8134,8200],"source":" Specifies the slider control's parent window, usually a `CDialog`."},{"content":"It must not be <bpt id=\"p1\">**</bpt>NULL<ept id=\"p1\">**</ept>.","pos":[8201,8225],"source":" It must not be **NULL**."},{"content":"Specifies the slider control's ID.","pos":[8241,8275]},{"content":"Return Value","pos":[8285,8297]},{"content":"Nonzero if initialization was successful; otherwise 0.","pos":[8301,8355]},{"content":"Remarks","pos":[8365,8372]},{"content":"You construct a <ph id=\"ph1\">`CSliderCtrl`</ph> in two steps.","pos":[8376,8419],"source":"You construct a `CSliderCtrl` in two steps."},{"content":"First, call the constructor, and then call <bpt id=\"p1\">**</bpt>Create<ept id=\"p1\">**</ept>, which creates the slider control and attaches it to the <ph id=\"ph1\">`CSliderCtrl`</ph> object.","pos":[8420,8552],"source":" First, call the constructor, and then call **Create**, which creates the slider control and attaches it to the `CSliderCtrl` object."},{"content":"Depending on the values set for <ph id=\"ph1\">`dwStyle`</ph>, the slider control can have either a vertical or horizontal orientation.","pos":[8559,8674],"source":"Depending on the values set for `dwStyle`, the slider control can have either a vertical or horizontal orientation."},{"content":"It can have tick marks on either side, both sides, or neither.","pos":[8675,8737]},{"content":"It can also be used to specify a range of consecutive values.","pos":[8738,8799]},{"pos":[8806,8923],"content":"To apply extended window styles to the slider control, call <bpt id=\"p1\">[</bpt>CreateEx<ept id=\"p1\">](#csliderctrl__createex)</ept> instead of <bpt id=\"p2\">**</bpt>Create<ept id=\"p2\">**</ept>.","source":"To apply extended window styles to the slider control, call [CreateEx](#csliderctrl__createex) instead of **Create**."},{"pos":[8971,8992],"content":"CSliderCtrl::CreateEx"},{"pos":[8996,9079],"content":"Creates a control (a child window) and associates it with the <ph id=\"ph1\">`CSliderCtrl`</ph> object.","source":"Creates a control (a child window) and associates it with the `CSliderCtrl` object."},{"content":"Parameters","pos":[9234,9244]},{"content":"Specifies the extended style of the control being created.","pos":[9263,9321]},{"content":"For a list of extended Windows styles, see the <ph id=\"ph1\">`dwExStyle`</ph> parameter for <bpt id=\"p1\">[</bpt>CreateWindowEx<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms632680)</ept> in the <ph id=\"ph2\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","pos":[9322,9531],"source":" For a list of extended Windows styles, see the `dwExStyle` parameter for [CreateWindowEx](http://msdn.microsoft.com/library/windows/desktop/ms632680) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"content":"Specifies the slider control's style.","pos":[9551,9588]},{"content":"Apply any combination of <bpt id=\"p1\">[</bpt>slider control styles<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb760147)</ept>, described in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>, to the control.","pos":[9589,9784],"source":" Apply any combination of [slider control styles](http://msdn.microsoft.com/library/windows/desktop/bb760147), described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)], to the control."},{"content":"A reference to a <bpt id=\"p1\">[</bpt>RECT<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/dd162897)</ept> structure describing the size and position of the window to be created, in client coordinates of <ph id=\"ph1\">`pParentWnd`</ph>.","pos":[9801,9995],"source":" A reference to a [RECT](http://msdn.microsoft.com/library/windows/desktop/dd162897) structure describing the size and position of the window to be created, in client coordinates of `pParentWnd`."},{"content":"A pointer to the window that is the control's parent.","pos":[10018,10071]},{"content":"The control's child-window ID.","pos":[10087,10117]},{"content":"Return Value","pos":[10127,10139]},{"content":"Nonzero if successful; otherwise 0.","pos":[10143,10178]},{"content":"Remarks","pos":[10188,10195]},{"pos":[10199,10349],"content":"Use <ph id=\"ph1\">`CreateEx`</ph> instead of <bpt id=\"p1\">[</bpt>Create<ept id=\"p1\">](#csliderctrl__create)</ept> to apply extended Windows styles, specified by the Windows extended style preface <bpt id=\"p2\">**</bpt>WS_EX_<ept id=\"p2\">**</ept>.","source":"Use `CreateEx` instead of [Create](#csliderctrl__create) to apply extended Windows styles, specified by the Windows extended style preface **WS_EX_**."},{"pos":[10400,10424],"content":"CSliderCtrl::CSliderCtrl"},{"pos":[10428,10462],"content":"Constructs a <ph id=\"ph1\">`CSliderCtrl`</ph> object.","source":"Constructs a `CSliderCtrl` object."},{"pos":[10540,10561],"content":"CSliderCtrl::GetBuddy"},{"content":"Retrieves the handle to a slider control buddy window at a given location.","pos":[10565,10639]},{"content":"Parameters","pos":[10712,10722]},{"content":"A Boolean value that indicates which of two buddy window handles to retrieve.","pos":[10741,10818]},{"content":"Can be one of the following values:","pos":[10819,10854]},{"content":"<bpt id=\"p1\">**</bpt>TRUE<ept id=\"p1\">**</ept> Retrieves the handle to the buddy to the left of the slider.","pos":[10862,10931],"source":"**TRUE** Retrieves the handle to the buddy to the left of the slider."},{"content":"If the slider control uses the <ph id=\"ph1\">`TBS_VERT`</ph> style, the message will retrieve the buddy above the slider.","pos":[10932,11034],"source":" If the slider control uses the `TBS_VERT` style, the message will retrieve the buddy above the slider."},{"content":"<bpt id=\"p1\">**</bpt>FALSE<ept id=\"p1\">**</ept> Retrieves the handle to the buddy to the right of the slider.","pos":[11042,11113],"source":"**FALSE** Retrieves the handle to the buddy to the right of the slider."},{"content":"If the slider control uses the <ph id=\"ph1\">`TBS_VERT`</ph> style, the message will retrieve the buddy below the slider.","pos":[11114,11216],"source":" If the slider control uses the `TBS_VERT` style, the message will retrieve the buddy below the slider."},{"content":"Return Value","pos":[11226,11238]},{"pos":[11242,11428],"content":"A pointer to a <bpt id=\"p1\">[</bpt>CWnd<ept id=\"p1\">](../../mfc/reference/cwnd-class.md)</ept> object that is the buddy window at the location specified by <ph id=\"ph1\">`fLocation`</ph>, or <bpt id=\"p2\">**</bpt>NULL<ept id=\"p2\">**</ept> if no buddy window exists at that location.","source":"A pointer to a [CWnd](../../mfc/reference/cwnd-class.md) object that is the buddy window at the location specified by `fLocation`, or **NULL** if no buddy window exists at that location."},{"content":"Remarks","pos":[11438,11445]},{"content":"This member function implements the behavior of the Win32 message <bpt id=\"p1\">[</bpt>TBM_GETBUDDY<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb760178)</ept>, as described in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","pos":[11449,11663],"source":"This member function implements the behavior of the Win32 message [TBM_GETBUDDY](http://msdn.microsoft.com/library/windows/desktop/bb760178), as described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"content":"For a description of the slider control styles, see <bpt id=\"p1\">[</bpt>Trackbar Control Styles<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb760147)</ept> in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","pos":[11664,11861],"source":" For a description of the slider control styles, see [Trackbar Control Styles](http://msdn.microsoft.com/library/windows/desktop/bb760147) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"pos":[11915,11942],"content":"CSliderCtrl::GetChannelRect"},{"content":"Retrieves the size and position of the bounding rectangle for a slider control's channel.","pos":[11946,12035]},{"content":"Parameters","pos":[12103,12113]},{"content":"A pointer to a <bpt id=\"p1\">[</bpt>CRect<ept id=\"p1\">](../../atl-mfc-shared/reference/crect-class.md)</ept> object that contains the size and position of the channel's bounding rectangle when the function returns.","pos":[12127,12302],"source":" A pointer to a [CRect](../../atl-mfc-shared/reference/crect-class.md) object that contains the size and position of the channel's bounding rectangle when the function returns."},{"content":"Remarks","pos":[12312,12319]},{"content":"The channel is the area over which the slider moves and which contains the highlight when a range is selected.","pos":[12323,12433]},{"pos":[12484,12508],"content":"CSliderCtrl::GetLineSize"},{"content":"Retrieves the size of the line for a slider control.","pos":[12512,12564]},{"content":"Return Value","pos":[12617,12629]},{"content":"The size of a line for the slider control.","pos":[12633,12675]},{"content":"Remarks","pos":[12685,12692]},{"content":"The line size affects how much the slider moves for the <bpt id=\"p1\">**</bpt>TB_LINEUP<ept id=\"p1\">**</ept> and <bpt id=\"p2\">**</bpt>TB_LINEDOWN<ept id=\"p2\">**</ept> notifications.","pos":[12696,12800],"source":"The line size affects how much the slider moves for the **TB_LINEUP** and **TB_LINEDOWN** notifications."},{"content":"The default setting for the line size is 1.","pos":[12801,12844]},{"pos":[12894,12917],"content":"CSliderCtrl::GetNumTics"},{"content":"Retrieves the number of tick marks in a slider control.","pos":[12921,12976]},{"content":"Return Value","pos":[13029,13041]},{"content":"The number of tick marks in the slider control.","pos":[13045,13092]},{"pos":[13143,13167],"content":"CSliderCtrl::GetPageSize"},{"content":"Retrieves the size of the page for a slider control.","pos":[13171,13223]},{"content":"Return Value","pos":[13276,13288]},{"content":"The size of a page for the slider control.","pos":[13292,13334]},{"content":"Remarks","pos":[13344,13351]},{"pos":[13355,13459],"content":"The page size affects how much the slider moves for the <bpt id=\"p1\">**</bpt>TB_PAGEUP<ept id=\"p1\">**</ept> and <bpt id=\"p2\">**</bpt>TB_PAGEDOWN<ept id=\"p2\">**</ept> notifications.","source":"The page size affects how much the slider moves for the **TB_PAGEUP** and **TB_PAGEDOWN** notifications."},{"pos":[13505,13524],"content":"CSliderCtrl::GetPos"},{"content":"Retrieves the current position of the slider in a slider control.","pos":[13528,13593]},{"content":"Return Value","pos":[13641,13653]},{"content":"The current position.","pos":[13657,13678]},{"pos":[13726,13747],"content":"CSliderCtrl::GetRange"},{"content":"Retrieves the maximum and minimum positions for the slider in a slider control.","pos":[13751,13830]},{"content":"Parameters","pos":[13912,13922]},{"content":"Reference to an integer that receives the minimum position.","pos":[13936,13995]},{"content":"Reference to an integer that receives the maximum position.","pos":[14012,14071]},{"content":"Remarks","pos":[14081,14088]},{"pos":[14092,14174],"content":"This function copies the values into the integers referenced by <ph id=\"ph1\">`nMin`</ph> and <ph id=\"ph2\">`nMax`</ph>.","source":"This function copies the values into the integers referenced by `nMin` and `nMax`."},{"pos":[14225,14249],"content":"CSliderCtrl::GetRangeMax"},{"content":"Retrieves the maximum position for the slider in a slider control.","pos":[14253,14319]},{"content":"Return Value","pos":[14372,14384]},{"content":"The control's maximum position.","pos":[14388,14419]},{"pos":[14470,14494],"content":"CSliderCtrl::GetRangeMin"},{"content":"Retrieves the minimum position for the slider in a slider control.","pos":[14498,14564]},{"content":"Return Value","pos":[14617,14629]},{"content":"The control's minimum position.","pos":[14633,14664]},{"pos":[14716,14741],"content":"CSliderCtrl::GetSelection"},{"content":"Retrieves the starting and ending positions of the current selection in a slider control.","pos":[14745,14834]},{"content":"Parameters","pos":[14920,14930]},{"content":"Reference to an integer that receives the starting position of the current selection.","pos":[14944,15029]},{"content":"Reference to an integer that receives the ending position of the current selection.","pos":[15046,15129]},{"pos":[15183,15210],"content":"CSliderCtrl::GetThumbLength"},{"content":"Retrieves the length of the slider in the current trackbar control.","pos":[15214,15281]},{"content":"Return Value","pos":[15337,15349]},{"content":"The length of the slider, in pixels.","pos":[15353,15389]},{"content":"Remarks","pos":[15399,15406]},{"pos":[15410,15600],"content":"This method sends the <bpt id=\"p1\">[</bpt>TBM_GETTHUMBLENGTH<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb760201)</ept> message, which is described in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"This method sends the [TBM_GETTHUMBLENGTH](http://msdn.microsoft.com/library/windows/desktop/bb760201) message, which is described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"pos":[15652,15677],"content":"CSliderCtrl::GetThumbRect"},{"content":"Retrieves the size and position of the bounding rectangle for the slider (thumb) in a slider control.","pos":[15681,15782]},{"content":"Parameters","pos":[15848,15858]},{"content":"A pointer to a <ph id=\"ph1\">`CRect`</ph> object that contains the bounding rectangle for the slider when the function returns.","pos":[15872,15980],"source":" A pointer to a `CRect` object that contains the bounding rectangle for the slider when the function returns."},{"pos":[16026,16045],"content":"CSliderCtrl::GetTic"},{"content":"Retrieves the position of a tick mark in a slider control.","pos":[16049,16107]},{"content":"Parameters","pos":[16163,16173]},{"content":"Zero-based index identifying a tick mark.","pos":[16187,16228]},{"content":"Return Value","pos":[16238,16250]},{"pos":[16254,16342],"content":"The position of the specified tick mark or – 1 if <ph id=\"ph1\">`nTic`</ph> does not specify a valid index.","source":"The position of the specified tick mark or – 1 if `nTic` does not specify a valid index."},{"pos":[16393,16417],"content":"CSliderCtrl::GetTicArray"},{"content":"Retrieves the address of the array containing the positions of tick marks for a slider control.","pos":[16421,16516]},{"content":"Return Value","pos":[16572,16584]},{"content":"The address of the array containing tick mark positions for the slider control.","pos":[16588,16667]},{"pos":[16716,16738],"content":"CSliderCtrl::GetTicPos"},{"content":"Retrieves the current physical position of a tick mark in a slider control.","pos":[16742,16817]},{"content":"Parameters","pos":[16876,16886]},{"content":"Zero-based index identifying a tick mark.","pos":[16900,16941]},{"content":"Return Value","pos":[16951,16963]},{"pos":[16967,17088],"content":"The physical position, in client coordinates, of the specified tick mark or – 1 if <ph id=\"ph1\">`nTic`</ph> does not specify a valid index.","source":"The physical position, in client coordinates, of the specified tick mark or – 1 if `nTic` does not specify a valid index."},{"pos":[17139,17163],"content":"CSliderCtrl::GetToolTips"},{"content":"Retrieves the handle to the tooltip control assigned to the slider control, if any.","pos":[17167,17250]},{"content":"Return Value","pos":[17313,17325]},{"content":"A pointer to a <bpt id=\"p1\">[</bpt>CToolTipCtrl<ept id=\"p1\">](../../mfc/reference/ctooltipctrl-class.md)</ept> object, or <bpt id=\"p2\">**</bpt>NULL<ept id=\"p2\">**</ept> if tooltips are not in use.","pos":[17329,17449],"source":"A pointer to a [CToolTipCtrl](../../mfc/reference/ctooltipctrl-class.md) object, or **NULL** if tooltips are not in use."},{"content":"If the slider control does not use the <bpt id=\"p1\">**</bpt>TBS_TOOLTIPS<ept id=\"p1\">**</ept> style, the return value is <bpt id=\"p2\">**</bpt>NULL<ept id=\"p2\">**</ept>.","pos":[17450,17542],"source":" If the slider control does not use the **TBS_TOOLTIPS** style, the return value is **NULL**."},{"content":"Remarks","pos":[17552,17559]},{"content":"This member function implements the behavior of the Win32 message <bpt id=\"p1\">[</bpt>TBM_GETTOOLTIPS<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb760209)</ept>, as described in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","pos":[17563,17780],"source":"This member function implements the behavior of the Win32 message [TBM_GETTOOLTIPS](http://msdn.microsoft.com/library/windows/desktop/bb760209), as described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"content":"Note that this member function returns a <ph id=\"ph1\">`CToolTipCtrl`</ph> object instead of a handle to a control.","pos":[17781,17877],"source":" Note that this member function returns a `CToolTipCtrl` object instead of a handle to a control."},{"pos":[17884,18081],"content":"For a description of the slider control styles, see <bpt id=\"p1\">[</bpt>Trackbar Control Styles<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb760147)</ept> in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"For a description of the slider control styles, see [Trackbar Control Styles](http://msdn.microsoft.com/library/windows/desktop/bb760147) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"pos":[18129,18150],"content":"CSliderCtrl::SetBuddy"},{"content":"Assigns a window as the buddy window for a slider control.","pos":[18154,18212]},{"content":"Parameters","pos":[18304,18314]},{"content":"A pointer to a <ph id=\"ph1\">`CWnd`</ph> object that will be set as the slider control's buddy.","pos":[18333,18409],"source":" A pointer to a `CWnd` object that will be set as the slider control's buddy."},{"content":"Value specifying the location at which to display the buddy window.","pos":[18431,18498]},{"content":"This value can be one of the following:","pos":[18499,18538]},{"content":"<bpt id=\"p1\">**</bpt>TRUE<ept id=\"p1\">**</ept> The buddy will appear to the left of the trackbar if the trackbar control uses the <ph id=\"ph1\">`TBS_HORZ`</ph> style.","pos":[18546,18655],"source":"**TRUE** The buddy will appear to the left of the trackbar if the trackbar control uses the `TBS_HORZ` style."},{"content":"If the trackbar uses the <ph id=\"ph1\">`TBS_VERT`</ph> style, the buddy appears above the trackbar control.","pos":[18656,18744],"source":" If the trackbar uses the `TBS_VERT` style, the buddy appears above the trackbar control."},{"content":"<bpt id=\"p1\">**</bpt>FALSE<ept id=\"p1\">**</ept> The buddy will appear to the right of the trackbar if the trackbar control uses the <ph id=\"ph1\">`TBS_HORZ`</ph> style.","pos":[18752,18863],"source":"**FALSE** The buddy will appear to the right of the trackbar if the trackbar control uses the `TBS_HORZ` style."},{"content":"If the trackbar uses the <ph id=\"ph1\">`TBS_VERT`</ph> style, the buddy appears below the trackbar control.","pos":[18864,18952],"source":" If the trackbar uses the `TBS_VERT` style, the buddy appears below the trackbar control."},{"content":"Return Value","pos":[18962,18974]},{"pos":[18978,19110],"content":"A pointer to a <bpt id=\"p1\">[</bpt>CWnd<ept id=\"p1\">](../../mfc/reference/cwnd-class.md)</ept> object that was previously assigned to the slider control at that location.","source":"A pointer to a [CWnd](../../mfc/reference/cwnd-class.md) object that was previously assigned to the slider control at that location."},{"content":"Remarks","pos":[19120,19127]},{"content":"This member function implements the behavior of the Win32 message <bpt id=\"p1\">[</bpt>TBM_SETBUDDY<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb760213)</ept>, as described in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","pos":[19131,19345],"source":"This member function implements the behavior of the Win32 message [TBM_SETBUDDY](http://msdn.microsoft.com/library/windows/desktop/bb760213), as described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"content":"Note that this member function uses pointers to <ph id=\"ph1\">`CWnd`</ph> objects, rather than window handles for both its return value and parameter.","pos":[19346,19477],"source":" Note that this member function uses pointers to `CWnd` objects, rather than window handles for both its return value and parameter."},{"pos":[19484,19681],"content":"For a description of the slider control styles, see <bpt id=\"p1\">[</bpt>Trackbar Control Styles<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb760147)</ept> in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"For a description of the slider control styles, see [Trackbar Control Styles](http://msdn.microsoft.com/library/windows/desktop/bb760147) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"pos":[19732,19756],"content":"CSliderCtrl::SetLineSize"},{"content":"Sets the size of the line for a slider control.","pos":[19760,19807]},{"content":"Parameters","pos":[19860,19870]},{"content":"The new line size of the slider control.","pos":[19885,19925]},{"content":"Return Value","pos":[19935,19947]},{"content":"The previous line size.","pos":[19951,19974]},{"content":"Remarks","pos":[19984,19991]},{"pos":[19995,20099],"content":"The line size affects how much the slider moves for the <bpt id=\"p1\">**</bpt>TB_LINEUP<ept id=\"p1\">**</ept> and <bpt id=\"p2\">**</bpt>TB_LINEDOWN<ept id=\"p2\">**</ept> notifications.","source":"The line size affects how much the slider moves for the **TB_LINEUP** and **TB_LINEDOWN** notifications."},{"pos":[20150,20174],"content":"CSliderCtrl::SetPageSize"},{"content":"Sets the size of the page for a slider control.","pos":[20178,20225]},{"content":"Parameters","pos":[20278,20288]},{"content":"The new page size of the slider control.","pos":[20303,20343]},{"content":"Return Value","pos":[20353,20365]},{"content":"The previous page size.","pos":[20369,20392]},{"content":"Remarks","pos":[20402,20409]},{"pos":[20413,20517],"content":"The page size affects how much the slider moves for the <bpt id=\"p1\">**</bpt>TB_PAGEUP<ept id=\"p1\">**</ept> and <bpt id=\"p2\">**</bpt>TB_PAGEDOWN<ept id=\"p2\">**</ept> notifications.","source":"The page size affects how much the slider moves for the **TB_PAGEUP** and **TB_PAGEDOWN** notifications."},{"pos":[20563,20582],"content":"CSliderCtrl::SetPos"},{"content":"Sets the current position of the slider in a slider control.","pos":[20586,20646]},{"content":"Parameters","pos":[20694,20704]},{"content":"Specifies the new slider position.","pos":[20718,20752]},{"pos":[20800,20821],"content":"CSliderCtrl::SetRange"},{"content":"Sets the range (minimum and maximum positions) for the slider in a slider control.","pos":[20825,20907]},{"content":"Parameters","pos":[21006,21016]},{"content":"Minimum position for the slider.","pos":[21030,21062]},{"content":"Maximum position for the slider.","pos":[21079,21111]},{"content":"The redraw flag.","pos":[21131,21147]},{"content":"If this parameter is <bpt id=\"p1\">**</bpt>TRUE<ept id=\"p1\">**</ept>, the slider is redrawn after the range is set; otherwise the slider is not redrawn.","pos":[21148,21261],"source":" If this parameter is **TRUE**, the slider is redrawn after the range is set; otherwise the slider is not redrawn."},{"pos":[21312,21336],"content":"CSliderCtrl::SetRangeMax"},{"content":"Sets the maximum range for the slider in a slider control.","pos":[21340,21398]},{"content":"Parameters","pos":[21484,21494]},{"content":"Maximum position for the slider.","pos":[21508,21540]},{"content":"The redraw flag.","pos":[21560,21576]},{"content":"If this parameter is <bpt id=\"p1\">**</bpt>TRUE<ept id=\"p1\">**</ept>, the slider is redrawn after the range is set; otherwise the slider is not redrawn.","pos":[21577,21690],"source":" If this parameter is **TRUE**, the slider is redrawn after the range is set; otherwise the slider is not redrawn."},{"pos":[21741,21765],"content":"CSliderCtrl::SetRangeMin"},{"content":"Sets the minimum range for the slider in a slider control.","pos":[21769,21827]},{"content":"Parameters","pos":[21913,21923]},{"content":"Minimum position for the slider.","pos":[21937,21969]},{"content":"The redraw flag.","pos":[21989,22005]},{"content":"If this parameter is <bpt id=\"p1\">**</bpt>TRUE<ept id=\"p1\">**</ept>, the slider is redrawn after the range is set; otherwise the slider is not redrawn.","pos":[22006,22119],"source":" If this parameter is **TRUE**, the slider is redrawn after the range is set; otherwise the slider is not redrawn."},{"pos":[22171,22196],"content":"CSliderCtrl::SetSelection"},{"content":"Sets the starting and ending positions for the current selection in a slider control.","pos":[22200,22285]},{"content":"Parameters","pos":[22360,22370]},{"content":"Starting position for the slider.","pos":[22384,22417]},{"content":"Ending position for the slider.","pos":[22434,22465]},{"pos":[22519,22546],"content":"CSliderCtrl::SetThumbLength"},{"content":"Sets the length of the slider in the current trackbar control.","pos":[22550,22612]},{"content":"Parameters","pos":[22671,22681]},{"content":"Parameter","pos":[22688,22697]},{"content":"Description","pos":[22698,22709]},{"pos":[22752,22756],"content":"[in]"},{"content":"Length of the slider, in pixels.","pos":[22767,22799]},{"content":"Remarks","pos":[22810,22817]},{"pos":[22821,22962],"content":"This method requires that the trackbar control be set to <bpt id=\"p1\">[</bpt>TBS_FIXEDLENGTH<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb760147)</ept> style.","source":"This method requires that the trackbar control be set to [TBS_FIXEDLENGTH](http://msdn.microsoft.com/library/windows/desktop/bb760147) style."},{"pos":[22969,23159],"content":"This method sends the <bpt id=\"p1\">[</bpt>TBM_SETTHUMBLENGTH<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb760234)</ept> message, which is described in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"This method sends the [TBM_SETTHUMBLENGTH](http://msdn.microsoft.com/library/windows/desktop/bb760234) message, which is described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"content":"Example","pos":[23169,23176]},{"content":"The following code example defines the variable, <ph id=\"ph1\">`m_sliderCtrl`</ph>, that is used to access the current trackbar control.","pos":[23180,23297],"source":"The following code example defines the variable, `m_sliderCtrl`, that is used to access the current trackbar control."},{"content":"The example also defines a variable, <ph id=\"ph1\">`thumbLength`</ph>, that is used to store the default length of the trackbar control's thumb component.","pos":[23298,23433],"source":" The example also defines a variable, `thumbLength`, that is used to store the default length of the trackbar control's thumb component."},{"content":"These variables are used in the next example.","pos":[23434,23479]},{"pos":[23497,23521],"content":"NVC_MFC_CSliderCtrl_s1#1"},{"content":"Example","pos":[23592,23599]},{"content":"The following code example sets the trackbar control's thumb component to twice its default length.","pos":[23603,23702]},{"pos":[23720,23744],"content":"NVC_MFC_CSliderCtrl_s1#2"},{"pos":[23853,23872],"content":"CSliderCtrl::SetTic"},{"content":"Sets the position of a tick mark in a slider control.","pos":[23876,23929]},{"content":"Parameters","pos":[23977,23987]},{"content":"Position of the tick mark.","pos":[24001,24027]},{"content":"This parameter must specify a positive value.","pos":[24028,24073]},{"content":"Return Value","pos":[24083,24095]},{"content":"Nonzero if the tick mark is set; otherwise 0.","pos":[24099,24144]},{"pos":[24194,24217],"content":"CSliderCtrl::SetTicFreq"},{"content":"Sets the frequency with which tick marks are displayed in a slider.","pos":[24221,24288]},{"content":"Parameters","pos":[24341,24351]},{"content":"nFreq","pos":[24356,24361]},{"content":"Frequency of the tick marks.","pos":[24366,24394]},{"content":"Remarks","pos":[24404,24411]},{"content":"For example, if the frequency is set to 2, a tick mark is displayed for every other increment in the slider's range.","pos":[24415,24531]},{"content":"The default setting for the frequency is 1 (that is, every increment in the range is associated with a tick mark).","pos":[24532,24646]},{"content":"You must create the control with the <ph id=\"ph1\">`TBS_AUTOTICKS`</ph> style to use this function.","pos":[24653,24733],"source":"You must create the control with the `TBS_AUTOTICKS` style to use this function."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>CSliderCtrl::Create<ept id=\"p1\">](#csliderctrl__create)</ept>.","pos":[24734,24804],"source":" For more information, see [CSliderCtrl::Create](#csliderctrl__create)."},{"pos":[24854,24877],"content":"CSliderCtrl::SetTipSide"},{"content":"Positions a tooltip control used by a trackbar control.","pos":[24881,24936]},{"content":"Parameters","pos":[24992,25002]},{"content":"Value representing the location at which to display the tooltip control.","pos":[25021,25093]},{"content":"For a list of possible values, see the Win32 message <bpt id=\"p1\">[</bpt>TBM_SETTIPSIDE<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb760240)</ept>, as described in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","pos":[25094,25297],"source":" For a list of possible values, see the Win32 message [TBM_SETTIPSIDE](http://msdn.microsoft.com/library/windows/desktop/bb760240), as described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"content":"Return Value","pos":[25307,25319]},{"content":"A value that represents the tooltip control's previous location.","pos":[25323,25387]},{"content":"The return value equals one of the possible values for <ph id=\"ph1\">`nLocation`</ph>.","pos":[25388,25455],"source":" The return value equals one of the possible values for `nLocation`."},{"content":"Remarks","pos":[25465,25472]},{"content":"This member function implements the behavior of the Win32 message <bpt id=\"p1\">**</bpt>TBM_SETTIPSIDE<ept id=\"p1\">**</ept>, as described in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","pos":[25476,25634],"source":"This member function implements the behavior of the Win32 message **TBM_SETTIPSIDE**, as described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"content":"Slider controls that use the <bpt id=\"p1\">**</bpt>TBS_TOOLTIPS<ept id=\"p1\">**</ept> style display tooltips.","pos":[25635,25704],"source":" Slider controls that use the **TBS_TOOLTIPS** style display tooltips."},{"content":"For a description of the slider control styles, see <bpt id=\"p1\">[</bpt>Trackbar Control Styles<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb760147)</ept> in the <ph id=\"ph1\">[!INCLUDE[winsdkshort](../../atl-mfc-shared/reference/includes/winsdkshort_md.md)]</ph>.","pos":[25705,25933],"source":" For a description of the slider control styles, see [Trackbar Control Styles](http://msdn.microsoft.com/library/windows/desktop/bb760147) in the [!INCLUDE[winsdkshort](../../atl-mfc-shared/reference/includes/winsdkshort_md.md)]."},{"pos":[25984,26008],"content":"CSliderCtrl::SetToolTips"},{"content":"Assigns a tooltip control to a slider control.","pos":[26012,26058]},{"content":"Parameters","pos":[26124,26134]},{"content":"A pointer to a <bpt id=\"p1\">[</bpt>CToolTipCtrl<ept id=\"p1\">](../../mfc/reference/ctooltipctrl-class.md)</ept> object containing the tooltips to use with the slider control.","pos":[26151,26286],"source":" A pointer to a [CToolTipCtrl](../../mfc/reference/ctooltipctrl-class.md) object containing the tooltips to use with the slider control."},{"content":"Remarks","pos":[26296,26303]},{"content":"This member function implements the behavior of the Win32 message <bpt id=\"p1\">[</bpt>TBM_SETTOOLTIPS<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb760242)</ept>, as described in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","pos":[26307,26524],"source":"This member function implements the behavior of the Win32 message [TBM_SETTOOLTIPS](http://msdn.microsoft.com/library/windows/desktop/bb760242), as described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"content":"When a slider control is created with the <bpt id=\"p1\">**</bpt>TBS_TOOLTIPS<ept id=\"p1\">**</ept> style, it creates a default tooltip control that appears next to the slider, displaying the slider's current position.","pos":[26525,26702],"source":" When a slider control is created with the **TBS_TOOLTIPS** style, it creates a default tooltip control that appears next to the slider, displaying the slider's current position."},{"content":"For a description of the slider control styles, see <bpt id=\"p1\">[</bpt>Trackbar Control Styles<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb760147)</ept> in the <ph id=\"ph1\">[!INCLUDE[winsdkshort](../../atl-mfc-shared/reference/includes/winsdkshort_md.md)]</ph>.","pos":[26703,26931],"source":" For a description of the slider control styles, see [Trackbar Control Styles](http://msdn.microsoft.com/library/windows/desktop/bb760147) in the [!INCLUDE[winsdkshort](../../atl-mfc-shared/reference/includes/winsdkshort_md.md)]."},{"content":"See Also","pos":[26940,26948]},{"content":"MFC Sample CMNCTRL2","pos":[26953,26972]},{"content":"CWnd Class","pos":[27008,27018]},{"content":"Hierarchy Chart","pos":[27060,27075]},{"content":"CProgressCtrl Class","pos":[27112,27131]}],"content":"---\ntitle: \"CSliderCtrl Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"CSliderCtrl\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"Windows common controls [C++], CSliderCtrl\"\n  - \"slider controls, CSliderCtrl class\"\n  - \"CSliderCtrl class, common controls\"\n  - \"CSliderCtrl class\"\nms.assetid: dd12b084-4eda-4550-a810-8f3cfb06b871\ncaps.latest.revision: 22\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# CSliderCtrl Class\nProvides the functionality of the Windows common slider control.  \n  \n## Syntax  \n  \n```  \nclass CSliderCtrl : public CWnd  \n```  \n  \n## Members  \n  \n### Public Constructors  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CSliderCtrl::CSliderCtrl](#csliderctrl__csliderctrl)|Constructs a `CSliderCtrl` object.|  \n  \n### Public Methods  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CSliderCtrl::ClearSel](#csliderctrl__clearsel)|Clears the current selection in a slider control.|  \n|[CSliderCtrl::ClearTics](#csliderctrl__cleartics)|Removes the current tick marks from a slider control.|  \n|[CSliderCtrl::Create](#csliderctrl__create)|Creates a slider control and attaches it to a `CSliderCtrl` object.|  \n|[CSliderCtrl::CreateEx](#csliderctrl__createex)|Creates a slider control with the specified Windows extended styles and attaches it to a `CSliderCtrl` object.|  \n|[CSliderCtrl::GetBuddy](#csliderctrl__getbuddy)|Retrieves the handle to a slider control buddy window at a given location.|  \n|[CSliderCtrl::GetChannelRect](#csliderctrl__getchannelrect)|Retrieves the size of the slider control's channel.|  \n|[CSliderCtrl::GetLineSize](#csliderctrl__getlinesize)|Retrieves the line size of a slider control.|  \n|[CSliderCtrl::GetNumTics](#csliderctrl__getnumtics)|Retrieves the number of tick marks in a slider control.|  \n|[CSliderCtrl::GetPageSize](#csliderctrl__getpagesize)|Retrieves the page size of a slider control.|  \n|[CSliderCtrl::GetPos](#csliderctrl__getpos)|Retrieves the current position of the slider.|  \n|[CSliderCtrl::GetRange](#csliderctrl__getrange)|Retrieves the minimum and maximum positions for a slider.|  \n|[CSliderCtrl::GetRangeMax](#csliderctrl__getrangemax)|Retrieves the maximum position for a slider.|  \n|[CSliderCtrl::GetRangeMin](#csliderctrl__getrangemin)|Retrieves the minimum position for a slider.|  \n|[CSliderCtrl::GetSelection](#csliderctrl__getselection)|Retrieves the range of the current selection.|  \n|[CSliderCtrl::GetThumbLength](#csliderctrl__getthumblength)|Retrieves the length of the slider in the current trackbar control.|  \n|[CSliderCtrl::GetThumbRect](#csliderctrl__getthumbrect)|Retrieves the size of the slider control's thumb.|  \n|[CSliderCtrl::GetTic](#csliderctrl__gettic)|Retrieves the position of the specified tick mark.|  \n|[CSliderCtrl::GetTicArray](#csliderctrl__getticarray)|Retrieves the array of tick mark positions for a slider control.|  \n|[CSliderCtrl::GetTicPos](#csliderctrl__getticpos)|Retrieves the position of the specified tick mark, in client coordinates.|  \n|[CSliderCtrl::GetToolTips](#csliderctrl__gettooltips)|Retrieves the handle to the tooltip control assigned to the slider control, if any.|  \n|[CSliderCtrl::SetBuddy](#csliderctrl__setbuddy)|Assigns a window as the buddy window for a slider control.|  \n|[CSliderCtrl::SetLineSize](#csliderctrl__setlinesize)|Sets the line size of a slider control.|  \n|[CSliderCtrl::SetPageSize](#csliderctrl__setpagesize)|Sets the page size of a slider control.|  \n|[CSliderCtrl::SetPos](#csliderctrl__setpos)|Sets the current position of the slider.|  \n|[CSliderCtrl::SetRange](#csliderctrl__setrange)|Sets the minimum and maximum positions for a slider.|  \n|[CSliderCtrl::SetRangeMax](#csliderctrl__setrangemax)|Sets the maximum position for a slider.|  \n|[CSliderCtrl::SetRangeMin](#csliderctrl__setrangemin)|Sets the minimum position for a slider.|  \n|[CSliderCtrl::SetSelection](#csliderctrl__setselection)|Sets the range of the current selection.|  \n|[CSliderCtrl::SetThumbLength](#csliderctrl__setthumblength)|Sets the length of the slider in the current trackbar control.|  \n|[CSliderCtrl::SetTic](#csliderctrl__settic)|Sets the position of the specified tick mark.|  \n|[CSliderCtrl::SetTicFreq](#csliderctrl__setticfreq)|Sets the frequency of tick marks per slider control increment.|  \n|[CSliderCtrl::SetTipSide](#csliderctrl__settipside)|Positions a tooltip control used by a trackbar control.|  \n|[CSliderCtrl::SetToolTips](#csliderctrl__settooltips)|Assigns a tooltip control to a slider control.|  \n  \n## Remarks  \n A \"slider control\" (also known as a trackbar) is a window containing a slider and optional tick marks. When the user moves the slider, using either the mouse or the direction keys, the control sends notification messages to indicate the change.  \n  \n Slider controls are useful when you want the user to select a discrete value or a set of consecutive values in a range. For example, you might use a slider control to allow the user to set the repeat rate of the keyboard by moving the slider to a given tick mark.  \n  \n This control (and therefore the `CSliderCtrl` class) is available only to programs running under Windows 95/98 and Windows NT version 3.51 and later.  \n  \n The slider moves in increments that you specify when you create it. For example, if you specify that the slider should have a range of five, the slider can only occupy six positions: a position at the left side of the slider control and one position for each increment in the range. Typically, each of these positions is identified by a tick mark.  \n  \n You create a slider by using the constructor and the **Create** member function of `CSliderCtrl`. Once you have created a slider control, you can use member functions in `CSliderCtrl` to change many of its properties. Changes that you can make include setting the minimum and maximum positions for the slider, drawing tick marks, setting a selection range, and repositioning the slider.  \n  \n For more information on using `CSliderCtrl`, see [Controls](../../mfc/controls-mfc.md) and [Using CSliderCtrl](../../mfc/using-csliderctrl.md).  \n  \n## Inheritance Hierarchy  \n [CObject](../../mfc/reference/cobject-class.md)  \n  \n [CCmdTarget](../../mfc/reference/ccmdtarget-class.md)  \n  \n [CWnd](../../mfc/reference/cwnd-class.md)  \n  \n `CSliderCtrl`  \n  \n## Requirements  \n **Header:** afxcmn.h  \n  \n##  <a name=\"csliderctrl__clearsel\"></a>  CSliderCtrl::ClearSel  \n Clears the current selection in a slider control.  \n  \n```  \nvoid ClearSel(BOOL bRedraw = FALSE);\n```  \n  \n### Parameters  \n `bRedraw`  \n Redraw flag. If this parameter is **TRUE**, the slider is redrawn after the selection is cleared; otherwise the slider is not redrawn.  \n  \n##  <a name=\"csliderctrl__cleartics\"></a>  CSliderCtrl::ClearTics  \n Removes the current tick marks from a slider control.  \n  \n```  \nvoid ClearTics(BOOL bRedraw = FALSE);\n```  \n  \n### Parameters  \n `bRedraw`  \n Redraw flag. If this parameter is **TRUE**, the slider is redrawn after the tick marks are cleared; otherwise the slider is not redrawn.  \n  \n##  <a name=\"csliderctrl__create\"></a>  CSliderCtrl::Create  \n Creates a slider control and attaches it to a `CSliderCtrl` object.  \n  \n```  \nvirtual BOOL Create(\n    DWORD dwStyle,  \n    const RECT& rect,  \n    CWnd* pParentWnd,  \n    UINT nID);\n```  \n  \n### Parameters  \n `dwStyle`  \n Specifies the slider control's style. Apply any combination of [slider control styles](http://msdn.microsoft.com/library/windows/desktop/bb760147), described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)], to the control.  \n  \n `rect`  \n Specifies the slider control's size and position. It can be either a [CRect](../../atl-mfc-shared/reference/crect-class.md) object or a [RECT](http://msdn.microsoft.com/library/windows/desktop/dd162897) structure.  \n  \n `pParentWnd`  \n Specifies the slider control's parent window, usually a `CDialog`. It must not be **NULL**.  \n  \n `nID`  \n Specifies the slider control's ID.  \n  \n### Return Value  \n Nonzero if initialization was successful; otherwise 0.  \n  \n### Remarks  \n You construct a `CSliderCtrl` in two steps. First, call the constructor, and then call **Create**, which creates the slider control and attaches it to the `CSliderCtrl` object.  \n  \n Depending on the values set for `dwStyle`, the slider control can have either a vertical or horizontal orientation. It can have tick marks on either side, both sides, or neither. It can also be used to specify a range of consecutive values.  \n  \n To apply extended window styles to the slider control, call [CreateEx](#csliderctrl__createex) instead of **Create**.  \n  \n##  <a name=\"csliderctrl__createex\"></a>  CSliderCtrl::CreateEx  \n Creates a control (a child window) and associates it with the `CSliderCtrl` object.  \n  \n```  \nvirtual BOOL CreateEx(\n    DWORD dwExStyle,  \n    DWORD dwStyle,  \n    const RECT& rect,  \n    CWnd* pParentWnd,  \n    UINT nID);\n```  \n  \n### Parameters  \n `dwExStyle`  \n Specifies the extended style of the control being created. For a list of extended Windows styles, see the `dwExStyle` parameter for [CreateWindowEx](http://msdn.microsoft.com/library/windows/desktop/ms632680) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n `dwStyle`  \n Specifies the slider control's style. Apply any combination of [slider control styles](http://msdn.microsoft.com/library/windows/desktop/bb760147), described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)], to the control.  \n  \n `rect`  \n A reference to a [RECT](http://msdn.microsoft.com/library/windows/desktop/dd162897) structure describing the size and position of the window to be created, in client coordinates of `pParentWnd`.  \n  \n `pParentWnd`  \n A pointer to the window that is the control's parent.  \n  \n `nID`  \n The control's child-window ID.  \n  \n### Return Value  \n Nonzero if successful; otherwise 0.  \n  \n### Remarks  \n Use `CreateEx` instead of [Create](#csliderctrl__create) to apply extended Windows styles, specified by the Windows extended style preface **WS_EX_**.  \n  \n##  <a name=\"csliderctrl__csliderctrl\"></a>  CSliderCtrl::CSliderCtrl  \n Constructs a `CSliderCtrl` object.  \n  \n```  \nCSliderCtrl();\n```  \n  \n##  <a name=\"csliderctrl__getbuddy\"></a>  CSliderCtrl::GetBuddy  \n Retrieves the handle to a slider control buddy window at a given location.  \n  \n```  \nCWnd* GetBuddy(BOOL fLocation = TRUE) const;\n\n \n```  \n  \n### Parameters  \n `fLocation`  \n A Boolean value that indicates which of two buddy window handles to retrieve. Can be one of the following values:  \n  \n- **TRUE** Retrieves the handle to the buddy to the left of the slider. If the slider control uses the `TBS_VERT` style, the message will retrieve the buddy above the slider.  \n  \n- **FALSE** Retrieves the handle to the buddy to the right of the slider. If the slider control uses the `TBS_VERT` style, the message will retrieve the buddy below the slider.  \n  \n### Return Value  \n A pointer to a [CWnd](../../mfc/reference/cwnd-class.md) object that is the buddy window at the location specified by `fLocation`, or **NULL** if no buddy window exists at that location.  \n  \n### Remarks  \n This member function implements the behavior of the Win32 message [TBM_GETBUDDY](http://msdn.microsoft.com/library/windows/desktop/bb760178), as described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]. For a description of the slider control styles, see [Trackbar Control Styles](http://msdn.microsoft.com/library/windows/desktop/bb760147) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n##  <a name=\"csliderctrl__getchannelrect\"></a>  CSliderCtrl::GetChannelRect  \n Retrieves the size and position of the bounding rectangle for a slider control's channel.  \n  \n```  \nvoid GetChannelRect(LPRECT lprc) const;\n\n \n```  \n  \n### Parameters  \n `lprc`  \n A pointer to a [CRect](../../atl-mfc-shared/reference/crect-class.md) object that contains the size and position of the channel's bounding rectangle when the function returns.  \n  \n### Remarks  \n The channel is the area over which the slider moves and which contains the highlight when a range is selected.  \n  \n##  <a name=\"csliderctrl__getlinesize\"></a>  CSliderCtrl::GetLineSize  \n Retrieves the size of the line for a slider control.  \n  \n```  \nint GetLineSize() const;\n\n \n```  \n  \n### Return Value  \n The size of a line for the slider control.  \n  \n### Remarks  \n The line size affects how much the slider moves for the **TB_LINEUP** and **TB_LINEDOWN** notifications. The default setting for the line size is 1.  \n  \n##  <a name=\"csliderctrl__getnumtics\"></a>  CSliderCtrl::GetNumTics  \n Retrieves the number of tick marks in a slider control.  \n  \n```  \nUINT GetNumTics() const;\n\n \n```  \n  \n### Return Value  \n The number of tick marks in the slider control.  \n  \n##  <a name=\"csliderctrl__getpagesize\"></a>  CSliderCtrl::GetPageSize  \n Retrieves the size of the page for a slider control.  \n  \n```  \nint GetPageSize() const;\n\n \n```  \n  \n### Return Value  \n The size of a page for the slider control.  \n  \n### Remarks  \n The page size affects how much the slider moves for the **TB_PAGEUP** and **TB_PAGEDOWN** notifications.  \n  \n##  <a name=\"csliderctrl__getpos\"></a>  CSliderCtrl::GetPos  \n Retrieves the current position of the slider in a slider control.  \n  \n```  \nint GetPos() const;\n\n \n```  \n  \n### Return Value  \n The current position.  \n  \n##  <a name=\"csliderctrl__getrange\"></a>  CSliderCtrl::GetRange  \n Retrieves the maximum and minimum positions for the slider in a slider control.  \n  \n```  \nvoid GetRange(\n    int& nMin,  \n    int& nMax) const;\n\n \n```  \n  \n### Parameters  \n `nMin`  \n Reference to an integer that receives the minimum position.  \n  \n `nMax`  \n Reference to an integer that receives the maximum position.  \n  \n### Remarks  \n This function copies the values into the integers referenced by `nMin` and `nMax`.  \n  \n##  <a name=\"csliderctrl__getrangemax\"></a>  CSliderCtrl::GetRangeMax  \n Retrieves the maximum position for the slider in a slider control.  \n  \n```  \nint GetRangeMax() const;\n\n \n```  \n  \n### Return Value  \n The control's maximum position.  \n  \n##  <a name=\"csliderctrl__getrangemin\"></a>  CSliderCtrl::GetRangeMin  \n Retrieves the minimum position for the slider in a slider control.  \n  \n```  \nint GetRangeMin() const;\n\n \n```  \n  \n### Return Value  \n The control's minimum position.  \n  \n##  <a name=\"csliderctrl__getselection\"></a>  CSliderCtrl::GetSelection  \n Retrieves the starting and ending positions of the current selection in a slider control.  \n  \n```  \nvoid GetSelection(\n    int& nMin,  \n    int& nMax) const;\n\n \n```  \n  \n### Parameters  \n `nMin`  \n Reference to an integer that receives the starting position of the current selection.  \n  \n `nMax`  \n Reference to an integer that receives the ending position of the current selection.  \n  \n##  <a name=\"csliderctrl__getthumblength\"></a>  CSliderCtrl::GetThumbLength  \n Retrieves the length of the slider in the current trackbar control.  \n  \n```  \nint GetThumbLength() const;\n\n \n```  \n  \n### Return Value  \n The length of the slider, in pixels.  \n  \n### Remarks  \n This method sends the [TBM_GETTHUMBLENGTH](http://msdn.microsoft.com/library/windows/desktop/bb760201) message, which is described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n##  <a name=\"csliderctrl__getthumbrect\"></a>  CSliderCtrl::GetThumbRect  \n Retrieves the size and position of the bounding rectangle for the slider (thumb) in a slider control.  \n  \n```  \nvoid GetThumbRect(LPRECT lprc) const;\n\n \n```  \n  \n### Parameters  \n `lprc`  \n A pointer to a `CRect` object that contains the bounding rectangle for the slider when the function returns.  \n  \n##  <a name=\"csliderctrl__gettic\"></a>  CSliderCtrl::GetTic  \n Retrieves the position of a tick mark in a slider control.  \n  \n```  \nint GetTic(int nTic) const;\n\n \n```  \n  \n### Parameters  \n `nTic`  \n Zero-based index identifying a tick mark.  \n  \n### Return Value  \n The position of the specified tick mark or – 1 if `nTic` does not specify a valid index.  \n  \n##  <a name=\"csliderctrl__getticarray\"></a>  CSliderCtrl::GetTicArray  \n Retrieves the address of the array containing the positions of tick marks for a slider control.  \n  \n```  \nDWORD* GetTicArray() const;\n\n \n```  \n  \n### Return Value  \n The address of the array containing tick mark positions for the slider control.  \n  \n##  <a name=\"csliderctrl__getticpos\"></a>  CSliderCtrl::GetTicPos  \n Retrieves the current physical position of a tick mark in a slider control.  \n  \n```  \nint GetTicPos(int nTic) const;\n\n \n```  \n  \n### Parameters  \n `nTic`  \n Zero-based index identifying a tick mark.  \n  \n### Return Value  \n The physical position, in client coordinates, of the specified tick mark or – 1 if `nTic` does not specify a valid index.  \n  \n##  <a name=\"csliderctrl__gettooltips\"></a>  CSliderCtrl::GetToolTips  \n Retrieves the handle to the tooltip control assigned to the slider control, if any.  \n  \n```  \nCToolTipCtrl* GetToolTips() const;\n\n \n```  \n  \n### Return Value  \n A pointer to a [CToolTipCtrl](../../mfc/reference/ctooltipctrl-class.md) object, or **NULL** if tooltips are not in use. If the slider control does not use the **TBS_TOOLTIPS** style, the return value is **NULL**.  \n  \n### Remarks  \n This member function implements the behavior of the Win32 message [TBM_GETTOOLTIPS](http://msdn.microsoft.com/library/windows/desktop/bb760209), as described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]. Note that this member function returns a `CToolTipCtrl` object instead of a handle to a control.  \n  \n For a description of the slider control styles, see [Trackbar Control Styles](http://msdn.microsoft.com/library/windows/desktop/bb760147) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n##  <a name=\"csliderctrl__setbuddy\"></a>  CSliderCtrl::SetBuddy  \n Assigns a window as the buddy window for a slider control.  \n  \n```  \nCWnd* SetBuddy(\n    CWnd* pWndBuddy,  \n    BOOL fLocation = TRUE);\n```  \n  \n### Parameters  \n `pWndBuddy`  \n A pointer to a `CWnd` object that will be set as the slider control's buddy.  \n  \n `fLocation`  \n Value specifying the location at which to display the buddy window. This value can be one of the following:  \n  \n- **TRUE** The buddy will appear to the left of the trackbar if the trackbar control uses the `TBS_HORZ` style. If the trackbar uses the `TBS_VERT` style, the buddy appears above the trackbar control.  \n  \n- **FALSE** The buddy will appear to the right of the trackbar if the trackbar control uses the `TBS_HORZ` style. If the trackbar uses the `TBS_VERT` style, the buddy appears below the trackbar control.  \n  \n### Return Value  \n A pointer to a [CWnd](../../mfc/reference/cwnd-class.md) object that was previously assigned to the slider control at that location.  \n  \n### Remarks  \n This member function implements the behavior of the Win32 message [TBM_SETBUDDY](http://msdn.microsoft.com/library/windows/desktop/bb760213), as described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]. Note that this member function uses pointers to `CWnd` objects, rather than window handles for both its return value and parameter.  \n  \n For a description of the slider control styles, see [Trackbar Control Styles](http://msdn.microsoft.com/library/windows/desktop/bb760147) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n##  <a name=\"csliderctrl__setlinesize\"></a>  CSliderCtrl::SetLineSize  \n Sets the size of the line for a slider control.  \n  \n```  \nint SetLineSize(int nSize);\n```  \n  \n### Parameters  \n `nSize`  \n The new line size of the slider control.  \n  \n### Return Value  \n The previous line size.  \n  \n### Remarks  \n The line size affects how much the slider moves for the **TB_LINEUP** and **TB_LINEDOWN** notifications.  \n  \n##  <a name=\"csliderctrl__setpagesize\"></a>  CSliderCtrl::SetPageSize  \n Sets the size of the page for a slider control.  \n  \n```  \nint SetPageSize(int nSize);\n```  \n  \n### Parameters  \n `nSize`  \n The new page size of the slider control.  \n  \n### Return Value  \n The previous page size.  \n  \n### Remarks  \n The page size affects how much the slider moves for the **TB_PAGEUP** and **TB_PAGEDOWN** notifications.  \n  \n##  <a name=\"csliderctrl__setpos\"></a>  CSliderCtrl::SetPos  \n Sets the current position of the slider in a slider control.  \n  \n```  \nvoid SetPos(int nPos);\n```  \n  \n### Parameters  \n `nPos`  \n Specifies the new slider position.  \n  \n##  <a name=\"csliderctrl__setrange\"></a>  CSliderCtrl::SetRange  \n Sets the range (minimum and maximum positions) for the slider in a slider control.  \n  \n```  \nvoid SetRange(\n    int nMin,  \n    int nMax,  \n    BOOL bRedraw = FALSE);\n```  \n  \n### Parameters  \n `nMin`  \n Minimum position for the slider.  \n  \n `nMax`  \n Maximum position for the slider.  \n  \n `bRedraw`  \n The redraw flag. If this parameter is **TRUE**, the slider is redrawn after the range is set; otherwise the slider is not redrawn.  \n  \n##  <a name=\"csliderctrl__setrangemax\"></a>  CSliderCtrl::SetRangeMax  \n Sets the maximum range for the slider in a slider control.  \n  \n```  \nvoid SetRangeMax(\n    int nMax,  \n    BOOL bRedraw = FALSE);\n```  \n  \n### Parameters  \n `nMax`  \n Maximum position for the slider.  \n  \n `bRedraw`  \n The redraw flag. If this parameter is **TRUE**, the slider is redrawn after the range is set; otherwise the slider is not redrawn.  \n  \n##  <a name=\"csliderctrl__setrangemin\"></a>  CSliderCtrl::SetRangeMin  \n Sets the minimum range for the slider in a slider control.  \n  \n```  \nvoid SetRangeMin(\n    int nMin,  \n    BOOL bRedraw = FALSE);\n```  \n  \n### Parameters  \n `nMin`  \n Minimum position for the slider.  \n  \n `bRedraw`  \n The redraw flag. If this parameter is **TRUE**, the slider is redrawn after the range is set; otherwise the slider is not redrawn.  \n  \n##  <a name=\"csliderctrl__setselection\"></a>  CSliderCtrl::SetSelection  \n Sets the starting and ending positions for the current selection in a slider control.  \n  \n```  \nvoid SetSelection(\n    int nMin,  \n    int nMax);\n```  \n  \n### Parameters  \n `nMin`  \n Starting position for the slider.  \n  \n `nMax`  \n Ending position for the slider.  \n  \n##  <a name=\"csliderctrl__setthumblength\"></a>  CSliderCtrl::SetThumbLength  \n Sets the length of the slider in the current trackbar control.  \n  \n```  \nvoid SetThumbLength(int nLength);\n```  \n  \n### Parameters  \n  \n|Parameter|Description|  \n|---------------|-----------------|  \n|[in] `nLength`|Length of the slider, in pixels.|  \n  \n### Remarks  \n This method requires that the trackbar control be set to [TBS_FIXEDLENGTH](http://msdn.microsoft.com/library/windows/desktop/bb760147) style.  \n  \n This method sends the [TBM_SETTHUMBLENGTH](http://msdn.microsoft.com/library/windows/desktop/bb760234) message, which is described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n### Example  \n The following code example defines the variable, `m_sliderCtrl`, that is used to access the current trackbar control. The example also defines a variable, `thumbLength`, that is used to store the default length of the trackbar control's thumb component. These variables are used in the next example.  \n  \n [!code-cpp[NVC_MFC_CSliderCtrl_s1#1](../../mfc/reference/codesnippet/cpp/csliderctrl-class_1.h)]  \n  \n### Example  \n The following code example sets the trackbar control's thumb component to twice its default length.  \n  \n [!code-cpp[NVC_MFC_CSliderCtrl_s1#2](../../mfc/reference/codesnippet/cpp/csliderctrl-class_2.cpp)]  \n  \n##  <a name=\"csliderctrl__settic\"></a>  CSliderCtrl::SetTic  \n Sets the position of a tick mark in a slider control.  \n  \n```  \nBOOL SetTic(int nTic);\n```  \n  \n### Parameters  \n `nTic`  \n Position of the tick mark. This parameter must specify a positive value.  \n  \n### Return Value  \n Nonzero if the tick mark is set; otherwise 0.  \n  \n##  <a name=\"csliderctrl__setticfreq\"></a>  CSliderCtrl::SetTicFreq  \n Sets the frequency with which tick marks are displayed in a slider.  \n  \n```  \nvoid SetTicFreq(int nFreq);\n```  \n  \n### Parameters  \n *nFreq*  \n Frequency of the tick marks.  \n  \n### Remarks  \n For example, if the frequency is set to 2, a tick mark is displayed for every other increment in the slider's range. The default setting for the frequency is 1 (that is, every increment in the range is associated with a tick mark).  \n  \n You must create the control with the `TBS_AUTOTICKS` style to use this function. For more information, see [CSliderCtrl::Create](#csliderctrl__create).  \n  \n##  <a name=\"csliderctrl__settipside\"></a>  CSliderCtrl::SetTipSide  \n Positions a tooltip control used by a trackbar control.  \n  \n```  \nint SetTipSide(int nLocation);\n```  \n  \n### Parameters  \n `nLocation`  \n Value representing the location at which to display the tooltip control. For a list of possible values, see the Win32 message [TBM_SETTIPSIDE](http://msdn.microsoft.com/library/windows/desktop/bb760240), as described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n### Return Value  \n A value that represents the tooltip control's previous location. The return value equals one of the possible values for `nLocation`.  \n  \n### Remarks  \n This member function implements the behavior of the Win32 message **TBM_SETTIPSIDE**, as described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]. Slider controls that use the **TBS_TOOLTIPS** style display tooltips. For a description of the slider control styles, see [Trackbar Control Styles](http://msdn.microsoft.com/library/windows/desktop/bb760147) in the [!INCLUDE[winsdkshort](../../atl-mfc-shared/reference/includes/winsdkshort_md.md)].  \n  \n##  <a name=\"csliderctrl__settooltips\"></a>  CSliderCtrl::SetToolTips  \n Assigns a tooltip control to a slider control.  \n  \n```  \nvoid SetToolTips(CToolTipCtrl* pWndTip);\n```  \n  \n### Parameters  \n `pWndTip`  \n A pointer to a [CToolTipCtrl](../../mfc/reference/ctooltipctrl-class.md) object containing the tooltips to use with the slider control.  \n  \n### Remarks  \n This member function implements the behavior of the Win32 message [TBM_SETTOOLTIPS](http://msdn.microsoft.com/library/windows/desktop/bb760242), as described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]. When a slider control is created with the **TBS_TOOLTIPS** style, it creates a default tooltip control that appears next to the slider, displaying the slider's current position. For a description of the slider control styles, see [Trackbar Control Styles](http://msdn.microsoft.com/library/windows/desktop/bb760147) in the [!INCLUDE[winsdkshort](../../atl-mfc-shared/reference/includes/winsdkshort_md.md)].  \n  \n## See Also  \n [MFC Sample CMNCTRL2](../../visual-cpp-samples.md)   \n [CWnd Class](../../mfc/reference/cwnd-class.md)   \n [Hierarchy Chart](../../mfc/hierarchy-chart.md)   \n [CProgressCtrl Class](../../mfc/reference/cprogressctrl-class.md)\n"}