{"nodes":[{"pos":[12,65],"content":"A.20   Binding of barrier Directives | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"A.20   Binding of barrier Directives | Microsoft Docs","pos":[0,53]}]},{"content":"A.20   Binding of barrier Directives","pos":[545,581]},{"content":"The directive binding rules call for a <bpt id=\"p1\">**</bpt>barrier<ept id=\"p1\">**</ept> directive to bind to the closest enclosing <ph id=\"ph1\">`parallel`</ph> directive.","pos":[582,697],"source":"The directive binding rules call for a **barrier** directive to bind to the closest enclosing `parallel` directive."},{"content":"For more information on directive binding, see <bpt id=\"p1\">[</bpt>Section 2.8<ept id=\"p1\">](../../parallel/openmp/2-8-directive-binding.md)</ept> on page 32.","pos":[698,818],"source":" For more information on directive binding, see [Section 2.8](../../parallel/openmp/2-8-directive-binding.md) on page 32."},{"content":"In the following example, the call from <bpt id=\"p1\">*</bpt>main<ept id=\"p1\">*</ept> to <bpt id=\"p2\">*</bpt>sub2<ept id=\"p2\">*</ept> is compliant because the <bpt id=\"p3\">**</bpt>barrier<ept id=\"p3\">**</ept> (in <bpt id=\"p4\">*</bpt>sub3<ept id=\"p4\">*</ept>) binds to the parallel region in <bpt id=\"p5\">*</bpt>sub2<ept id=\"p5\">*</ept>.","pos":[825,970],"source":"In the following example, the call from *main* to *sub2* is compliant because the **barrier** (in *sub3*) binds to the parallel region in *sub2*."},{"content":"The call from <bpt id=\"p1\">*</bpt>main<ept id=\"p1\">*</ept> to <bpt id=\"p2\">*</bpt>sub1<ept id=\"p2\">*</ept> is compliant because the <bpt id=\"p3\">**</bpt>barrier<ept id=\"p3\">**</ept> binds to the parallel region in subroutine <bpt id=\"p4\">*</bpt>sub2<ept id=\"p4\">*</ept>.","pos":[971,1089],"source":" The call from *main* to *sub1* is compliant because the **barrier** binds to the parallel region in subroutine *sub2*."},{"content":"The call from <bpt id=\"p1\">*</bpt>main<ept id=\"p1\">*</ept> to <bpt id=\"p2\">*</bpt>sub3<ept id=\"p2\">*</ept> is compliant because the <bpt id=\"p3\">**</bpt>barrier<ept id=\"p3\">**</ept> does not bind to any parallel region and is ignored.","pos":[1091,1211],"source":"  The call from *main* to *sub3* is compliant because the **barrier** does not bind to any parallel region and is ignored."},{"content":"Also note that the <bpt id=\"p1\">**</bpt>barrier<ept id=\"p1\">**</ept> only synchronizes the team of threads in the enclosing parallel region and not all the threads created in <bpt id=\"p2\">*</bpt>sub1<ept id=\"p2\">*</ept>.","pos":[1212,1356],"source":" Also note that the **barrier** only synchronizes the team of threads in the enclosing parallel region and not all the threads created in *sub1*."}],"content":"---\ntitle: \"A.20   Binding of barrier Directives | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"C++\"\nms.assetid: a3fdcc26-6873-429b-998e-de451401483b\ncaps.latest.revision: 7\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# A.20   Binding of barrier Directives\nThe directive binding rules call for a **barrier** directive to bind to the closest enclosing `parallel` directive. For more information on directive binding, see [Section 2.8](../../parallel/openmp/2-8-directive-binding.md) on page 32.  \n  \n In the following example, the call from *main* to *sub2* is compliant because the **barrier** (in *sub3*) binds to the parallel region in *sub2*. The call from *main* to *sub1* is compliant because the **barrier** binds to the parallel region in subroutine *sub2*.  The call from *main* to *sub3* is compliant because the **barrier** does not bind to any parallel region and is ignored. Also note that the **barrier** only synchronizes the team of threads in the enclosing parallel region and not all the threads created in *sub1*.  \n  \n```  \nint main()  \n{  \n    sub1(2);  \n    sub2(2);  \n    sub3(2);  \n}  \n  \nvoid sub1(int n)  \n{  \n    int i;  \n    #pragma omp parallel private(i) shared(n)  \n    {  \n        #pragma omp for  \n        for (i=0; i<n; i++)  \n            sub2(i);  \n    }  \n}  \n  \nvoid sub2(int k)  \n{  \n     #pragma omp parallel shared(k)  \n     sub3(k);  \n}  \n  \nvoid sub3(int n)  \n{  \n    work(n);  \n    #pragma omp barrier  \n    work(n);  \n}  \n```"}