{"nodes":[{"pos":[12,43],"content":"ot1 (STL-CLR) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"ot1 (STL-CLR) | Microsoft Docs","pos":[0,30]}]},{"content":"not1 (STL/CLR)","pos":[611,625]},{"pos":[626,667],"content":"Generates a <ph id=\"ph1\">`unary_negate`</ph> for a functor.","source":"Generates a `unary_negate` for a functor."},{"content":"Syntax","pos":[676,682]},{"content":"Template Parameters","pos":[775,794]},{"content":"Fun","pos":[798,801]},{"content":"The type of the functor.","pos":[805,829]},{"content":"Function Parameters","pos":[838,857]},{"content":"functor","pos":[861,868]},{"content":"The functor to wrap.","pos":[872,892]},{"content":"Remarks","pos":[901,908]},{"content":"The template function returns <bpt id=\"p1\">[</bpt>unary_negate (STL/CLR)<ept id=\"p1\">](../dotnet/unary-negate-stl-clr.md)</ept><ph id=\"ph1\">`&lt;``Fun``&gt;(functor)`</ph>.","pos":[912,1022],"source":"The template function returns [unary_negate (STL/CLR)](../dotnet/unary-negate-stl-clr.md)`<``Fun``>(functor)`."},{"content":"You use it as a convenient way to wrap a one-argument functor in a functor that delivers its logical NOT.","pos":[1023,1128]},{"content":"Example","pos":[1137,1144]},{"content":"Requirements","pos":[2286,2298]},{"pos":[2302,2334],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> <ph id=\"ph1\">\\&lt;</ph>cliext/functional&gt;","source":"**Header:** \\<cliext/functional>"},{"pos":[2341,2362],"content":"<bpt id=\"p1\">**</bpt>Namespace:<ept id=\"p1\">**</ept> cliext","source":"**Namespace:** cliext"},{"content":"See Also","pos":[2371,2379]},{"content":"unary_negate (STL/CLR)","pos":[2384,2406]}],"content":"---\ntitle: \"not1 (STL-CLR) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"cliext::not1\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"not1 function [STL/CLR]\"\nms.assetid: a50cd819-10de-4d81-84da-8a34c5414a43\ncaps.latest.revision: 16\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# not1 (STL/CLR)\nGenerates a `unary_negate` for a functor.  \n  \n## Syntax  \n  \n```  \ntemplate<typename Fun>  \n    unary_negate<Fun> not1(Fun% functor);  \n```  \n  \n## Template Parameters  \n Fun  \n The type of the functor.  \n  \n## Function Parameters  \n functor  \n The functor to wrap.  \n  \n## Remarks  \n The template function returns [unary_negate (STL/CLR)](../dotnet/unary-negate-stl-clr.md)`<``Fun``>(functor)`. You use it as a convenient way to wrap a one-argument functor in a functor that delivers its logical NOT.  \n  \n## Example  \n  \n```  \n// cliext_not1.cpp   \n// compile with: /clr   \n#include <cliext/algorithm>   \n#include <cliext/functional>   \n#include <cliext/vector>   \n  \ntypedef cliext::vector<int> Myvector;   \nint main()   \n    {   \n    Myvector c1;   \n    c1.push_back(4);   \n    c1.push_back(0);   \n    Myvector c3(2, 0);   \n  \n// display initial contents \" 4 0\"   \n    for each (int elem in c1)   \n        System::Console::Write(\" {0}\", elem);   \n    System::Console::WriteLine();   \n  \n// transform and display   \n    cliext::logical_not<int> not_op;   \n  \n    cliext::transform(c1.begin(), c1.begin() + 2, c3.begin(),   \n        cliext::unary_negate<cliext::logical_not<int> >(not_op));   \n    for each (int elem in c3)   \n        System::Console::Write(\" {0}\", elem);   \n    System::Console::WriteLine();   \n  \n// transform and display with function   \n    cliext::transform(c1.begin(), c1.begin() + 2, c3.begin(),   \n        cliext::not1(not_op));   \n    for each (int elem in c3)   \n        System::Console::Write(\" {0}\", elem);   \n    System::Console::WriteLine();   \n    return (0);   \n    }  \n  \n```  \n  \n```Output  \n4 0  \n1 0  \n1 0  \n```  \n  \n## Requirements  \n **Header:** \\<cliext/functional>  \n  \n **Namespace:** cliext  \n  \n## See Also  \n [unary_negate (STL/CLR)](../dotnet/unary-negate-stl-clr.md)"}