{"nodes":[{"content":"Concurrency Runtime","pos":[3,22]},{"content":"Overview of the Concurrency Runtime","pos":[51,86]},{"content":"Exception Handling in the Concurrency Runtime","pos":[131,176]},{"content":"Parallel Diagnostic Tools (Concurrency Runtime)","pos":[231,278]},{"content":"Creating Asynchronous Operations in C++ for Windows Store Apps","pos":[333,395]},{"content":"Comparing the Concurrency Runtime to Other Concurrency Models","pos":[467,528]},{"content":"Migrating from OpenMP to the Concurrency Runtime","pos":[600,648]},{"content":"How to: Convert an OpenMP parallel for Loop to Use the Concurrency Runtime","pos":[708,782]},{"content":"How to: Convert an OpenMP Loop that Uses Cancellation to Use the Concurrency Runtime","pos":[867,951]},{"content":"How to: Convert an OpenMP Loop that Uses Exception Handling to Use the Concurrency Runtime","pos":[1008,1098]},{"content":"How to: Convert an OpenMP Loop that Uses a Reduction Variable to Use the Concurrency Runtime","pos":[1161,1253]},{"content":"Parallel Patterns Library (PPL)","pos":[1316,1347]},{"content":"Task Parallelism (Concurrency Runtime)","pos":[1387,1425]},{"content":"How to: Use parallel_invoke to Write a Parallel Sort Routine","pos":[1473,1533]},{"content":"How to: Use parallel_invoke to Execute Parallel Operations","pos":[1604,1662]},{"content":"How to: Create a Task that Completes After a Delay","pos":[1731,1781]},{"content":"Parallel Algorithms","pos":[1841,1860]},{"content":"How to: Write a parallel_for Loop","pos":[1891,1924]},{"content":"How to: Write a parallel_for_each Loop","pos":[1968,2006]},{"content":"How to: Perform Map and Reduce Operations in Parallel","pos":[2055,2108]},{"content":"Parallel Containers and Objects","pos":[2171,2202]},{"content":"How to: Use Parallel Containers to Increase Efficiency","pos":[2245,2299]},{"content":"How to: Use combinable to Improve Performance","pos":[2364,2409]},{"content":"How to: Use combinable to Combine Sets","pos":[2465,2503]},{"content":"Cancellation in the PPL","pos":[2551,2574]},{"content":"How to: Use Cancellation to Break from a Parallel Loop","pos":[2609,2663]},{"content":"How to: Use Exception Handling to Break from a Parallel Loop","pos":[2728,2788]},{"content":"Asynchronous Agents Library","pos":[2857,2884]},{"content":"Asynchronous Agents","pos":[2922,2941]},{"content":"Asynchronous Message Blocks","pos":[2971,2998]},{"content":"Message Passing Functions","pos":[3036,3061]},{"content":"How to: Implement Various Producer-Consumer Patterns","pos":[3097,3149]},{"content":"How to: Provide Work Functions to the call and transformer Classes","pos":[3211,3277]},{"content":"How to: Use transformer in a Data Pipeline","pos":[3353,3395]},{"content":"How to: Select Among Completed Tasks","pos":[3447,3483]},{"content":"How to: Send a Message at a Regular Interval","pos":[3529,3573]},{"content":"How to: Use a Message Block Filter","pos":[3627,3661]},{"content":"Synchronization Data Structures","pos":[3704,3735]},{"content":"Comparing Synchronization Data Structures to the Windows API","pos":[3777,3837]},{"content":"Task Scheduler (Concurrency Runtime)","pos":[3907,3943]},{"content":"Scheduler Instances","pos":[3988,4007]},{"content":"How to: Manage a Scheduler Instance","pos":[4038,4073]},{"content":"Scheduler Policies","pos":[4118,4136]},{"content":"How to: Specify Specific Scheduler Policies","pos":[4166,4209]},{"content":"How to: Create Agents that Use Specific Scheduler Policies","pos":[4263,4321]},{"content":"Schedule Groups","pos":[4389,4404]},{"content":"How to: Use Schedule Groups to Influence Order of Execution","pos":[4431,4490]},{"content":"Lightweight Tasks","pos":[4559,4576]},{"content":"Contexts","pos":[4604,4612]},{"content":"How to: Use the Context Class to Implement a Cooperative Semaphore","pos":[4632,4698]},{"content":"How to: Use Oversubscription to Offset Latency","pos":[4775,4821]},{"content":"Memory Management Functions","pos":[4877,4904]},{"content":"How to: Use Alloc and Free to Improve Memory Performance","pos":[4943,4999]},{"content":"Concurrency Runtime Walkthroughs","pos":[5064,5096]},{"content":"Walkthrough: Connecting Using Tasks and XML HTTP Requests","pos":[5139,5196]},{"content":"Walkthrough: Creating an Agent-Based Application","pos":[5263,5311]},{"content":"Walkthrough: Creating a Dataflow Agent","pos":[5369,5407]},{"content":"Walkthrough: Creating an Image-Processing Network","pos":[5455,5504]},{"content":"Walkthrough: Implementing Futures","pos":[5563,5596]},{"content":"Walkthrough: Using join to Prevent Deadlock","pos":[5639,5682]},{"content":"Walkthrough: Removing Work from a User-Interface Thread","pos":[5735,5790]},{"content":"Walkthrough: Using the Concurrency Runtime in a COM-Enabled Application","pos":[5855,5926]},{"content":"Walkthrough: Adapting Existing Code to Use Lightweight Tasks","pos":[6007,6067]},{"content":"Walkthrough: Creating a Custom Message Block","pos":[6137,6181]},{"content":"Concurrency Runtime Best Practices","pos":[6234,6268]},{"content":"Best Practices in the Parallel Patterns Library","pos":[6313,6360]},{"content":"Best Practices in the Asynchronous Agents Library","pos":[6418,6467]},{"content":"General Best Practices in the Concurrency Runtime","pos":[6527,6576]},{"content":"Reference","pos":[6635,6644]}],"content":"# [Concurrency Runtime](concurrency-runtime.md)\n# [Overview of the Concurrency Runtime](overview-of-the-concurrency-runtime.md)\n# [Exception Handling in the Concurrency Runtime](exception-handling-in-the-concurrency-runtime.md)\n# [Parallel Diagnostic Tools (Concurrency Runtime)](parallel-diagnostic-tools-concurrency-runtime.md)\n# [Creating Asynchronous Operations in C++ for Windows Store Apps](creating-asynchronous-operations-in-cpp-for-windows-store-apps.md)\n# [Comparing the Concurrency Runtime to Other Concurrency Models](comparing-the-concurrency-runtime-to-other-concurrency-models.md)\n## [Migrating from OpenMP to the Concurrency Runtime](migrating-from-openmp-to-the-concurrency-runtime.md)\n### [How to: Convert an OpenMP parallel for Loop to Use the Concurrency Runtime](how-to-convert-an-openmp-parallel-for-loop-to-use-the-concurrency-runtime.md)\n### [How to: Convert an OpenMP Loop that Uses Cancellation to Use the Concurrency Runtime](convert-an-openmp-loop-that-uses-cancellation.md)\n### [How to: Convert an OpenMP Loop that Uses Exception Handling to Use the Concurrency Runtime](convert-an-openmp-loop-that uses-exception-handling.md)\n### [How to: Convert an OpenMP Loop that Uses a Reduction Variable to Use the Concurrency Runtime](convert-an-openmp-loop-that-uses-a-reduction-variable.md)\n# [Parallel Patterns Library (PPL)](parallel-patterns-library-ppl.md)\n## [Task Parallelism (Concurrency Runtime)](task-parallelism-concurrency-runtime.md)\n### [How to: Use parallel_invoke to Write a Parallel Sort Routine](how-to-use-parallel-invoke-to-write-a-parallel-sort-routine.md)\n### [How to: Use parallel_invoke to Execute Parallel Operations](how-to-use-parallel-invoke-to-execute-parallel-operations.md)\n### [How to: Create a Task that Completes After a Delay](how-to-create-a-task-that-completes-after-a-delay.md)\n## [Parallel Algorithms](parallel-algorithms.md)\n### [How to: Write a parallel_for Loop](how-to-write-a-parallel-for-loop.md)\n### [How to: Write a parallel_for_each Loop](how-to-write-a-parallel-for-each-loop.md)\n### [How to: Perform Map and Reduce Operations in Parallel](how-to-perform-map-and-reduce-operations-in-parallel.md)\n## [Parallel Containers and Objects](parallel-containers-and-objects.md)\n### [How to: Use Parallel Containers to Increase Efficiency](how-to-use-parallel-containers-to-increase-efficiency.md)\n### [How to: Use combinable to Improve Performance](how-to-use-combinable-to-improve-performance.md)\n### [How to: Use combinable to Combine Sets](how-to-use-combinable-to-combine-sets.md)\n## [Cancellation in the PPL](cancellation-in-the-ppl.md)\n### [How to: Use Cancellation to Break from a Parallel Loop](how-to-use-cancellation-to-break-from-a-parallel-loop.md)\n### [How to: Use Exception Handling to Break from a Parallel Loop](how-to-use-exception-handling-to-break-from-a-parallel-loop.md)\n# [Asynchronous Agents Library](asynchronous-agents-library.md)\n## [Asynchronous Agents](asynchronous-agents.md)\n## [Asynchronous Message Blocks](asynchronous-message-blocks.md)\n## [Message Passing Functions](message-passing-functions.md)\n## [How to: Implement Various Producer-Consumer Patterns](how-to-implement-various-producer-consumer-patterns.md)\n## [How to: Provide Work Functions to the call and transformer Classes](how-to-provide-work-functions-to-the-call-and-transformer-classes.md)\n## [How to: Use transformer in a Data Pipeline](how-to-use-transformer-in-a-data-pipeline.md)\n## [How to: Select Among Completed Tasks](how-to-select-among-completed-tasks.md)\n## [How to: Send a Message at a Regular Interval](how-to-send-a-message-at-a-regular-interval.md)\n## [How to: Use a Message Block Filter](how-to-use-a-message-block-filter.md)\n# [Synchronization Data Structures](synchronization-data-structures.md)\n## [Comparing Synchronization Data Structures to the Windows API](comparing-synchronization-data-structures-to-the-windows-api.md)\n# [Task Scheduler (Concurrency Runtime)](task-scheduler-concurrency-runtime.md)\n## [Scheduler Instances](scheduler-instances.md)\n### [How to: Manage a Scheduler Instance](how-to-manage-a-scheduler-instance.md)\n## [Scheduler Policies](scheduler-policies.md)\n### [How to: Specify Specific Scheduler Policies](how-to-specify-specific-scheduler-policies.md)\n### [How to: Create Agents that Use Specific Scheduler Policies](how-to-create-agents-that-use-specific-scheduler-policies.md)\n## [Schedule Groups](schedule-groups.md)\n### [How to: Use Schedule Groups to Influence Order of Execution](how-to-use-schedule-groups-to-influence-order-of-execution.md)\n## [Lightweight Tasks](lightweight-tasks.md)\n## [Contexts](contexts.md)\n### [How to: Use the Context Class to Implement a Cooperative Semaphore](how-to-use-the-context-class-to-implement-a-cooperative-semaphore.md)\n### [How to: Use Oversubscription to Offset Latency](how-to-use-oversubscription-to-offset-latency.md)\n## [Memory Management Functions](memory-management-functions.md)\n### [How to: Use Alloc and Free to Improve Memory Performance](how-to-use-alloc-and-free-to-improve-memory-performance.md)\n# [Concurrency Runtime Walkthroughs](concurrency-runtime-walkthroughs.md)\n## [Walkthrough: Connecting Using Tasks and XML HTTP Requests](walkthrough-connecting-using-tasks-and-xml-http-requests.md)\n## [Walkthrough: Creating an Agent-Based Application](walkthrough-creating-an-agent-based-application.md)\n## [Walkthrough: Creating a Dataflow Agent](walkthrough-creating-a-dataflow-agent.md)\n## [Walkthrough: Creating an Image-Processing Network](walkthrough-creating-an-image-processing-network.md)\n## [Walkthrough: Implementing Futures](walkthrough-implementing-futures.md)\n## [Walkthrough: Using join to Prevent Deadlock](walkthrough-using-join-to-prevent-deadlock.md)\n## [Walkthrough: Removing Work from a User-Interface Thread](walkthrough-removing-work-from-a-user-interface-thread.md)\n## [Walkthrough: Using the Concurrency Runtime in a COM-Enabled Application](walkthrough-using-the-concurrency-runtime-in-a-com-enabled-application.md)\n## [Walkthrough: Adapting Existing Code to Use Lightweight Tasks](walkthrough-adapting-existing-code-to-use-lightweight-tasks.md)\n## [Walkthrough: Creating a Custom Message Block](walkthrough-creating-a-custom-message-block.md)\n# [Concurrency Runtime Best Practices](concurrency-runtime-best-practices.md)\n## [Best Practices in the Parallel Patterns Library](best-practices-in-the-parallel-patterns-library.md)\n## [Best Practices in the Asynchronous Agents Library](best-practices-in-the-asynchronous-agents-library.md)\n## [General Best Practices in the Concurrency Runtime](general-best-practices-in-the-concurrency-runtime.md)\n# [Reference](reference/toc.md)"}