<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="es-es">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-04506c2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02c0b6b4260b748a7fd5de051c9b0281728ee562</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\cpp\labeled-statements.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">50a0f555ef4d8eec5d89d3abe7ed6d703b38e29e</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f6042fa8fce70ae52cb11f96e7cd44f7961f603e</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Labeled Statements | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Labeled Statements</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Labels are used to transfer program control directly to the specified statement.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The scope of a label is the entire function in which it is declared.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>There are three types of labeled statements.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>All use a colon to separate some type of label from the statement.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The case and default labels are specific to case statements.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The goto statement</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The appearance of an <bpt id="p1">*</bpt>identifier<ept id="p1">*</ept> label in the source program declares a label.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Only a <bpt id="p1">[</bpt>goto<ept id="p1">](../cpp/goto-statement-cpp.md)</ept> statement can transfer control to an <bpt id="p2">*</bpt>identifier<ept id="p2">*</ept> label.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The following code fragment illustrates use of the <ph id="ph1">`goto`</ph> statement and an <bpt id="p1">*</bpt>identifier<ept id="p1">*</ept> label:</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>A label cannot appear by itself but must always be attached to a statement.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>If a label is needed by itself, place a null statement after the label.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The label has function scope and cannot be redeclared within the function.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>However, the same name can be used as a label in different functions.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The case statement</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Labels that appear after the <bpt id="p1">**</bpt>case<ept id="p1">**</ept> keyword cannot also appear outside a <ph id="ph1">`switch`</ph> statement.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>(This restriction also applies to the <bpt id="p1">**</bpt>default<ept id="p1">**</ept> keyword.) The following code fragment shows the correct use of <bpt id="p2">**</bpt>case<ept id="p2">**</ept> labels:</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Labels in the case statement</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Labels that appear after the <bpt id="p1">**</bpt>case<ept id="p1">**</ept> keyword cannot also appear outside a <ph id="ph1">`switch`</ph> statement.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>(This restriction also applies to the <bpt id="p1">**</bpt>default<ept id="p1">**</ept> keyword.) The following code fragment shows the correct use of <bpt id="p2">**</bpt>case<ept id="p2">**</ept> labels:</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Labels in the goto statement</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The appearance of an <bpt id="p1">*</bpt>identifier<ept id="p1">*</ept> label in the source program declares a label.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Only a <bpt id="p1">[</bpt>goto<ept id="p1">](../cpp/goto-statement-cpp.md)</ept> statement can transfer control to an <bpt id="p2">*</bpt>identifier<ept id="p2">*</ept> label.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The following code fragment illustrates use of the <ph id="ph1">`goto`</ph> statement and an <bpt id="p1">*</bpt>identifier<ept id="p1">*</ept> label:</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>A label cannot appear by itself but must always be attached to a statement.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>If a label is needed by itself, place a null statement after the label.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The label has function scope and cannot be redeclared within the function.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>However, the same name can be used as a label in different functions.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Overview of C++ Statements</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>switch Statement (C++)</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>