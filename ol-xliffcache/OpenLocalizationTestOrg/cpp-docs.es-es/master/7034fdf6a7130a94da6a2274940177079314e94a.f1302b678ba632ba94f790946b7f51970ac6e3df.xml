{"nodes":[{"pos":[12,49],"content":"COleServerItem Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"COleServerItem Class | Microsoft Docs","pos":[0,37]}]},{"content":"COleServerItem Class","pos":[768,788]},{"content":"Provides the server interface to OLE items.","pos":[789,832]},{"content":"Syntax","pos":[841,847]},{"content":"Members","pos":[912,919]},{"content":"Protected Constructors","pos":[929,951]},{"content":"Name","pos":[958,962]},{"content":"Description","pos":[963,974]},{"content":"COleServerItem::COleServerItem","pos":[1013,1043]},{"pos":[1078,1115],"content":"Constructs a <ph id=\"ph1\">`COleServerItem`</ph> object.","source":"Constructs a `COleServerItem` object."},{"content":"Public Methods","pos":[1126,1140]},{"content":"Name","pos":[1147,1151]},{"content":"Description","pos":[1152,1163]},{"content":"COleServerItem::AddOtherClipboardData","pos":[1202,1239]},{"pos":[1281,1353],"content":"Places presentation and conversion formats in a <ph id=\"ph1\">`COleDataSource`</ph> object.","source":"Places presentation and conversion formats in a `COleDataSource` object."},{"content":"COleServerItem::CopyToClipboard","pos":[1359,1390]},{"content":"Copies the item to the Clipboard.","pos":[1426,1459]},{"content":"COleServerItem::DoDragDrop","pos":[1465,1491]},{"content":"Performs a drag-and-drop operation.","pos":[1522,1557]},{"content":"COleServerItem::GetClipboardData","pos":[1563,1595]},{"content":"Gets the data source for use in data transfer (drag and drop or Clipboard).","pos":[1632,1707]},{"content":"COleServerItem::GetDocument","pos":[1713,1740]},{"content":"Returns the server document that contains the item.","pos":[1772,1823]},{"content":"COleServerItem::GetEmbedSourceData","pos":[1829,1863]},{"pos":[1902,1951],"content":"Gets the <bpt id=\"p1\">**</bpt>CF_EMBEDSOURCE<ept id=\"p1\">**</ept> data for an OLE item.","source":"Gets the **CF_EMBEDSOURCE** data for an OLE item."},{"content":"COleServerItem::GetItemName","pos":[1957,1984]},{"content":"Returns the name of the item.","pos":[2016,2045]},{"content":"Used for linked items only.","pos":[2046,2073]},{"content":"COleServerItem::GetLinkSourceData","pos":[2079,2112]},{"pos":[2150,2196],"content":"Gets the <ph id=\"ph1\">`CF_LINKSOURCE`</ph> data for an OLE item.","source":"Gets the `CF_LINKSOURCE` data for an OLE item."},{"content":"COleServerItem::GetObjectDescriptorData","pos":[2202,2241]},{"pos":[2285,2339],"content":"Gets the <bpt id=\"p1\">**</bpt>CF_OBJECTDESCRIPTOR<ept id=\"p1\">**</ept> data for an OLE item.","source":"Gets the **CF_OBJECTDESCRIPTOR** data for an OLE item."},{"content":"COleServerItem::IsConnected","pos":[2345,2372]},{"content":"Indicates whether the item is currently attached to an active container.","pos":[2404,2476]},{"content":"COleServerItem::IsLinkedItem","pos":[2482,2510]},{"content":"Indicates whether the item represents a linked OLE item.","pos":[2543,2599]},{"content":"COleServerItem::NotifyChanged","pos":[2605,2634]},{"content":"Updates all containers with automatic link update.","pos":[2668,2718]},{"content":"COleServerItem::OnDoVerb","pos":[2724,2748]},{"content":"Called to execute a verb.","pos":[2777,2802]},{"content":"COleServerItem::OnDraw","pos":[2808,2830]},{"content":"Called when the container requests to draw the item; implementation required.","pos":[2857,2934]},{"content":"COleServerItem::OnDrawEx","pos":[2940,2964]},{"content":"Called for specialized item drawing.","pos":[2993,3029]},{"content":"COleServerItem::OnGetClipboardData","pos":[3035,3069]},{"content":"Called by the framework to get the data that would be copied to the Clipboard.","pos":[3108,3186]},{"content":"COleServerItem::OnGetExtent","pos":[3192,3219]},{"content":"Called by the framework to retrieve the size of the OLE item.","pos":[3251,3312]},{"content":"COleServerItem::OnInitFromData","pos":[3318,3348]},{"content":"Called by the framework to initialize an OLE item using the contents of the data transfer object specified.","pos":[3383,3490]},{"content":"COleServerItem::OnQueryUpdateItems","pos":[3496,3530]},{"content":"Called to determine whether any linked items require updating.","pos":[3569,3631]},{"content":"COleServerItem::OnRenderData","pos":[3637,3665]},{"content":"Retrieves data as part of delayed rendering.","pos":[3698,3742]},{"content":"COleServerItem::OnRenderFileData","pos":[3748,3780]},{"pos":[3817,3883],"content":"Retrieves data into a <ph id=\"ph1\">`CFile`</ph> object as part of delayed rendering.","source":"Retrieves data into a `CFile` object as part of delayed rendering."},{"content":"COleServerItem::OnRenderGlobalData","pos":[3889,3923]},{"pos":[3962,4024],"content":"Retrieves data into an <ph id=\"ph1\">`HGLOBAL`</ph> as part of delayed rendering.","source":"Retrieves data into an `HGLOBAL` as part of delayed rendering."},{"content":"COleServerItem::OnSetColorScheme","pos":[4030,4062]},{"content":"Called to set the item's color scheme.","pos":[4099,4137]},{"content":"COleServerItem::OnSetData","pos":[4143,4168]},{"content":"Called to set the item's data.","pos":[4198,4228]},{"content":"COleServerItem::OnSetExtent","pos":[4234,4261]},{"content":"Called by the framework to set the size of the OLE item.","pos":[4293,4349]},{"content":"COleServerItem::OnUpdate","pos":[4355,4379]},{"content":"Called when some portion of the document the item belongs in is changed.","pos":[4408,4480]},{"content":"COleServerItem::OnUpdateItems","pos":[4486,4515]},{"content":"Called to update the presentation cache of all items in the server document.","pos":[4549,4625]},{"content":"COleServerItem::SetItemName","pos":[4631,4658]},{"content":"Sets the name of the item.","pos":[4690,4716]},{"content":"Used for linked items only.","pos":[4717,4744]},{"content":"Protected Methods","pos":[4755,4772]},{"content":"Name","pos":[4779,4783]},{"content":"Description","pos":[4784,4795]},{"content":"COleServerItem::GetDataSource","pos":[4834,4863]},{"content":"Gets the object used to store conversion formats.","pos":[4897,4946]},{"content":"COleServerItem::OnHide","pos":[4952,4974]},{"content":"Called by the framework to hide the OLE item.","pos":[5001,5046]},{"content":"COleServerItem::OnOpen","pos":[5052,5074]},{"content":"Called by the framework to display the OLE item in its own top-level window.","pos":[5101,5177]},{"content":"COleServerItem::OnShow","pos":[5183,5205]},{"content":"Called when the container requests to show the item.","pos":[5232,5284]},{"content":"Public Data Members","pos":[5295,5314]},{"content":"Name","pos":[5321,5325]},{"content":"Description","pos":[5326,5337]},{"content":"COleServerItem::m_sizeExtent","pos":[5376,5404]},{"content":"Informs the server about how much of the OLE item is visible.","pos":[5437,5498]},{"content":"Remarks","pos":[5508,5515]},{"content":"A linked item can represent some or all of a server document.","pos":[5519,5580]},{"content":"An embedded item always represents an entire server document.","pos":[5581,5642]},{"content":"The <ph id=\"ph1\">`COleServerItem`</ph> class defines several overridable member functions that are called by the OLE system dynamic-link libraries (DLLs), usually in response to requests from the container application.","pos":[5649,5849],"source":"The `COleServerItem` class defines several overridable member functions that are called by the OLE system dynamic-link libraries (DLLs), usually in response to requests from the container application."},{"content":"These member functions allow the container application to manipulate the item indirectly in various ways, such as by displaying it, executing its verbs, or retrieving its data in various formats.","pos":[5850,6045]},{"content":"To use <ph id=\"ph1\">`COleServerItem`</ph>, derive a class from it and implement the <bpt id=\"p1\">[</bpt>OnDraw<ept id=\"p1\">](#coleserveritem__ondraw)</ept> and <bpt id=\"p2\">[</bpt>Serialize<ept id=\"p2\">](../../mfc/reference/cobject-class.md#cobject__serialize)</ept> member functions.","pos":[6052,6242],"source":"To use `COleServerItem`, derive a class from it and implement the [OnDraw](#coleserveritem__ondraw) and [Serialize](../../mfc/reference/cobject-class.md#cobject__serialize) member functions."},{"content":"The <ph id=\"ph1\">`OnDraw`</ph> function provides the metafile representation of an item, allowing it to be displayed when a container application opens a compound document.","pos":[6243,6397],"source":" The `OnDraw` function provides the metafile representation of an item, allowing it to be displayed when a container application opens a compound document."},{"content":"The <ph id=\"ph1\">`Serialize`</ph> function of <ph id=\"ph2\">`CObject`</ph> provides the native representation of an item, allowing an embedded item to be transferred between the server and container applications.","pos":[6398,6573],"source":" The `Serialize` function of `CObject` provides the native representation of an item, allowing an embedded item to be transferred between the server and container applications."},{"content":"<bpt id=\"p1\">[</bpt>OnGetExtent<ept id=\"p1\">](#coleserveritem__ongetextent)</ept> provides the natural size of the item to the container, enabling the container to size the item.","pos":[6574,6714],"source":"[OnGetExtent](#coleserveritem__ongetextent) provides the natural size of the item to the container, enabling the container to size the item."},{"pos":[6721,7005],"content":"For more information about servers and related topics, see the article <bpt id=\"p1\">[</bpt>Servers: Implementing a Server<ept id=\"p1\">](../../mfc/servers-implementing-a-server.md)</ept> and \"Creating a Container/Server Application\" in the article <bpt id=\"p2\">[</bpt>Containers: Advanced Features<ept id=\"p2\">](../../mfc/containers-advanced-features.md)</ept>.","source":"For more information about servers and related topics, see the article [Servers: Implementing a Server](../../mfc/servers-implementing-a-server.md) and \"Creating a Container/Server Application\" in the article [Containers: Advanced Features](../../mfc/containers-advanced-features.md)."},{"content":"Inheritance Hierarchy","pos":[7014,7035]},{"content":"CObject","pos":[7040,7047]},{"content":"CCmdTarget","pos":[7094,7104]},{"content":"CDocItem","pos":[7154,7162]},{"content":"Requirements","pos":[7234,7246]},{"pos":[7250,7270],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> afxole.h","source":"**Header:** afxole.h"},{"pos":[7334,7371],"content":"COleServerItem::AddOtherClipboardData"},{"pos":[7375,7501],"content":"Call this function to place the presentation and conversion formats for the OLE item in the specified <ph id=\"ph1\">`COleDataSource`</ph> object.","source":"Call this function to place the presentation and conversion formats for the OLE item in the specified `COleDataSource` object."},{"content":"Parameters","pos":[7583,7593]},{"content":"Pointer to the <ph id=\"ph1\">`COleDataSource`</ph> object in which the data should be placed.","pos":[7614,7688],"source":" Pointer to the `COleDataSource` object in which the data should be placed."},{"content":"Remarks","pos":[7698,7705]},{"content":"You must have implemented the <bpt id=\"p1\">[</bpt>OnDraw<ept id=\"p1\">](#coleserveritem__ondraw)</ept> member function to provide the presentation format (a metafile picture) for the item.","pos":[7709,7858],"source":"You must have implemented the [OnDraw](#coleserveritem__ondraw) member function to provide the presentation format (a metafile picture) for the item."},{"content":"To support other conversion formats, register them using the <bpt id=\"p1\">[</bpt>COleDataSource<ept id=\"p1\">](../../mfc/reference/coledatasource-class.md)</ept> object returned by <bpt id=\"p2\">[</bpt>GetDataSource<ept id=\"p2\">](#coleserveritem__getdatasource)</ept> and override the <bpt id=\"p3\">[</bpt>OnRenderData<ept id=\"p3\">](#coleserveritem__onrenderdata)</ept> member function to provide data in the formats you want to support.","pos":[7859,8179],"source":" To support other conversion formats, register them using the [COleDataSource](../../mfc/reference/coledatasource-class.md) object returned by [GetDataSource](#coleserveritem__getdatasource) and override the [OnRenderData](#coleserveritem__onrenderdata) member function to provide data in the formats you want to support."},{"pos":[8236,8266],"content":"COleServerItem::COleServerItem"},{"pos":[8270,8373],"content":"Constructs a <ph id=\"ph1\">`COleServerItem`</ph> object and adds it to the server document's collection of document items.","source":"Constructs a `COleServerItem` object and adds it to the server document's collection of document items."},{"content":"Parameters","pos":[8470,8480]},{"content":"Pointer to the document that will contain the new item.","pos":[8500,8555]},{"content":"Flag indicating whether the object can be deleted when a link to it is released.","pos":[8579,8659]},{"content":"Set this to <bpt id=\"p1\">**</bpt>FALSE<ept id=\"p1\">**</ept> if the <ph id=\"ph1\">`COleServerItem`</ph> object is an integral part of your document's data which you must delete.","pos":[8660,8779],"source":" Set this to **FALSE** if the `COleServerItem` object is an integral part of your document's data which you must delete."},{"content":"Set this to <bpt id=\"p1\">**</bpt>TRUE<ept id=\"p1\">**</ept> if the object is a secondary structure used to identify a range in your document's data that can be deleted by the framework.","pos":[8780,8926],"source":" Set this to **TRUE** if the object is a secondary structure used to identify a range in your document's data that can be deleted by the framework."},{"pos":[8984,9015],"content":"COleServerItem::CopyToClipboard"},{"content":"Call this function to copy the OLE item to the Clipboard.","pos":[9019,9076]},{"content":"Parameters","pos":[9150,9160]},{"content":"Set this to <bpt id=\"p1\">**</bpt>TRUE<ept id=\"p1\">**</ept> if link data should be copied to the Clipboard.","pos":[9182,9250],"source":" Set this to **TRUE** if link data should be copied to the Clipboard."},{"content":"Set this to <bpt id=\"p1\">**</bpt>FALSE<ept id=\"p1\">**</ept> if your server application does not support links.","pos":[9251,9323],"source":" Set this to **FALSE** if your server application does not support links."},{"content":"Remarks","pos":[9333,9340]},{"content":"The function uses the <bpt id=\"p1\">[</bpt>OnGetClipboardData<ept id=\"p1\">](#coleserveritem__ongetclipboarddata)</ept> member function to create a <bpt id=\"p2\">[</bpt>COleDataSource<ept id=\"p2\">](../../mfc/reference/coledatasource-class.md)</ept> object containing the OLE item's data in the formats supported.","pos":[9344,9577],"source":"The function uses the [OnGetClipboardData](#coleserveritem__ongetclipboarddata) member function to create a [COleDataSource](../../mfc/reference/coledatasource-class.md) object containing the OLE item's data in the formats supported."},{"content":"The function then places the <ph id=\"ph1\">`COleDataSource`</ph> object on the Clipboard by using the <bpt id=\"p1\">[</bpt>COleDataSource::SetClipboard<ept id=\"p1\">](../../mfc/reference/coledatasource-class.md#coledatasource__setclipboard)</ept> function.","pos":[9578,9775],"source":" The function then places the `COleDataSource` object on the Clipboard by using the [COleDataSource::SetClipboard](../../mfc/reference/coledatasource-class.md#coledatasource__setclipboard) function."},{"content":"The <ph id=\"ph1\">`COleDataSource`</ph> object includes the item's native data and its representation in <ph id=\"ph2\">`CF_METAFILEPICT`</ph> format, as well as data in any conversion formats you choose to support.","pos":[9776,9952],"source":" The `COleDataSource` object includes the item's native data and its representation in `CF_METAFILEPICT` format, as well as data in any conversion formats you choose to support."},{"content":"You must have implemented <bpt id=\"p1\">[</bpt>Serialize<ept id=\"p1\">](../../mfc/reference/cobject-class.md#cobject__serialize)</ept> and <bpt id=\"p2\">[</bpt>OnDraw<ept id=\"p2\">](#coleserveritem__ondraw)</ept> for this member function to work.","pos":[9953,10119],"source":" You must have implemented [Serialize](../../mfc/reference/cobject-class.md#cobject__serialize) and [OnDraw](#coleserveritem__ondraw) for this member function to work."},{"pos":[10172,10198],"content":"COleServerItem::DoDragDrop"},{"pos":[10202,10277],"content":"Call the <ph id=\"ph1\">`DoDragDrop`</ph> member function to perform a drag-and-drop operation.","source":"Call the `DoDragDrop` member function to perform a drag-and-drop operation."},{"content":"Parameters","pos":[10503,10513]},{"content":"lpRectItem","pos":[10518,10528]},{"content":"The item's rectangle on screen, in pixels, relative to the client area.","pos":[10533,10604]},{"content":"The offset from <ph id=\"ph1\">`lpItemRect`</ph> where the mouse position was at the time of the drag.","pos":[10625,10707],"source":" The offset from `lpItemRect` where the mouse position was at the time of the drag."},{"content":"Set this to <bpt id=\"p1\">**</bpt>TRUE<ept id=\"p1\">**</ept> if link data should be copied to the Clipboard.","pos":[10732,10800],"source":" Set this to **TRUE** if link data should be copied to the Clipboard."},{"content":"Set it to <bpt id=\"p1\">**</bpt>FALSE<ept id=\"p1\">**</ept> if your application does not support links.","pos":[10801,10864],"source":" Set it to **FALSE** if your application does not support links."},{"content":"Determines the effects that the drag source will allow in the drag operation (a combination of Copy, Move, and Link).","pos":[10886,11003]},{"content":"Pointer to the rectangle that defines where the drag actually starts.","pos":[11031,11100]},{"content":"For more information, see the following Remarks section.","pos":[11101,11157]},{"content":"Return Value","pos":[11167,11179]},{"content":"A value from the <ph id=\"ph1\">`DROPEFFECT`</ph> enumeration.","pos":[11183,11225],"source":"A value from the `DROPEFFECT` enumeration."},{"content":"If it is <ph id=\"ph1\">`DROPEFFECT_MOVE`</ph>, the original data should be removed.","pos":[11226,11290],"source":" If it is `DROPEFFECT_MOVE`, the original data should be removed."},{"content":"Remarks","pos":[11300,11307]},{"content":"The drag-and-drop operation does not start immediately.","pos":[11311,11366]},{"content":"It waits until the mouse cursor leaves the rectangle specified by <ph id=\"ph1\">`lpRectStartDrag`</ph> or until a specified number of milliseconds have passed.","pos":[11367,11507],"source":" It waits until the mouse cursor leaves the rectangle specified by `lpRectStartDrag` or until a specified number of milliseconds have passed."},{"content":"If <ph id=\"ph1\">`lpRectStartDrag`</ph> is <bpt id=\"p1\">**</bpt>NULL<ept id=\"p1\">**</ept>, a default rectangle is used so that the drag starts when the mouse cursor moves one pixel.","pos":[11508,11632],"source":" If `lpRectStartDrag` is **NULL**, a default rectangle is used so that the drag starts when the mouse cursor moves one pixel."},{"content":"The delay time is specified by a registry key setting.","pos":[11639,11693]},{"content":"You can change the delay time by calling <bpt id=\"p1\">[</bpt>CWinApp::WriteProfileString<ept id=\"p1\">](../../mfc/reference/cwinapp-class.md#cwinapp__writeprofilestring)</ept> or <bpt id=\"p2\">[</bpt>CWinApp::WriteProfileInt<ept id=\"p2\">](../../mfc/reference/cwinapp-class.md#cwinapp__writeprofileint)</ept>.","pos":[11694,11924],"source":" You can change the delay time by calling [CWinApp::WriteProfileString](../../mfc/reference/cwinapp-class.md#cwinapp__writeprofilestring) or [CWinApp::WriteProfileInt](../../mfc/reference/cwinapp-class.md#cwinapp__writeprofileint)."},{"content":"If you do not specify the delay time, a default value of 200 milliseconds is used.","pos":[11925,12007]},{"content":"Drag delay time is stored as follows:","pos":[12008,12045]},{"content":"Windows NT   Drag delay time is stored in HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\NT\\CurrentVersion\\IniFileMapping\\win.ini\\Windows\\DragDelay.","pos":[12055,12202]},{"content":"Windows 3.x   Drag delay time is stored in the WIN.INI file, under the [Windows} section.","pos":[12212,12301]},{"content":"Windows 95/98   Drag delay time is stored in a cached version of WIN.INI.","pos":[12311,12384]},{"pos":[12391,12640],"content":"For more information about how drag delay information is stored in either the registry or the .INI file, see <bpt id=\"p1\">[</bpt>WriteProfileString<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms725504)</ept> in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"For more information about how drag delay information is stored in either the registry or the .INI file, see [WriteProfileString](http://msdn.microsoft.com/library/windows/desktop/ms725504) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"pos":[12699,12731],"content":"COleServerItem::GetClipboardData"},{"pos":[12735,13065],"content":"Call this function to fill the specified <bpt id=\"p1\">[</bpt>COleDataSource<ept id=\"p1\">](../../mfc/reference/coledatasource-class.md)</ept> object with all the data that would be copied to the Clipboard if you called <bpt id=\"p2\">[</bpt>CopyToClipboard<ept id=\"p2\">](#coleserveritem__copytoclipboard)</ept> (the same data would also be transferred if you called <bpt id=\"p3\">[</bpt>DoDragDrop<ept id=\"p3\">](#coleserveritem__dodragdrop)</ept>).","source":"Call this function to fill the specified [COleDataSource](../../mfc/reference/coledatasource-class.md) object with all the data that would be copied to the Clipboard if you called [CopyToClipboard](#coleserveritem__copytoclipboard) (the same data would also be transferred if you called [DoDragDrop](#coleserveritem__dodragdrop))."},{"content":"Parameters","pos":[13239,13249]},{"content":"Pointer to the <ph id=\"ph1\">`COleDataSource`</ph> object that will receive the OLE item's data in all supported formats.","pos":[13270,13372],"source":" Pointer to the `COleDataSource` object that will receive the OLE item's data in all supported formats."},{"content":"<bpt id=\"p1\"> **</bpt>TRUE<ept id=\"p1\">**</ept> if link data should be copied to the Clipboard.","pos":[13396,13453],"source":" **TRUE** if link data should be copied to the Clipboard."},{"content":"<bpt id=\"p1\">**</bpt>FALSE<ept id=\"p1\">**</ept> if your server application does not support links.","pos":[13454,13514],"source":"**FALSE** if your server application does not support links."},{"content":"The offset, in pixels, of the mouse cursor from the origin of the object.","pos":[13535,13608]},{"content":"The size of the object in pixels.","pos":[13627,13660]},{"content":"Remarks","pos":[13670,13677]},{"content":"This function calls the <bpt id=\"p1\">[</bpt>GetEmbedSourceData<ept id=\"p1\">](#coleserveritem__getembedsourcedata)</ept> member function to get the native data for the OLE item and calls the <bpt id=\"p2\">[</bpt>AddOtherClipboardData<ept id=\"p2\">](#coleserveritem__addotherclipboarddata)</ept> member function to get the presentation format and any supported conversion formats.","pos":[13681,13981],"source":"This function calls the [GetEmbedSourceData](#coleserveritem__getembedsourcedata) member function to get the native data for the OLE item and calls the [AddOtherClipboardData](#coleserveritem__addotherclipboarddata) member function to get the presentation format and any supported conversion formats."},{"content":"If <ph id=\"ph1\">`bIncludeLink`</ph> is <bpt id=\"p1\">**</bpt>TRUE<ept id=\"p1\">**</ept>, the function also calls <bpt id=\"p2\">[</bpt>GetLinkSourceData<ept id=\"p2\">](#coleserveritem__getlinksourcedata)</ept> to get the link data for the item.","pos":[13982,14127],"source":" If `bIncludeLink` is **TRUE**, the function also calls [GetLinkSourceData](#coleserveritem__getlinksourcedata) to get the link data for the item."},{"pos":[14134,14273],"content":"Override this function if you want to put formats in a <ph id=\"ph1\">`COleDataSource`</ph> object before or after those formats supplied by <ph id=\"ph2\">`CopyToClipboard`</ph>.","source":"Override this function if you want to put formats in a `COleDataSource` object before or after those formats supplied by `CopyToClipboard`."},{"pos":[14329,14358],"content":"COleServerItem::GetDataSource"},{"pos":[14362,14535],"content":"Call this function to get the <bpt id=\"p1\">[</bpt>COleDataSource<ept id=\"p1\">](../../mfc/reference/coledatasource-class.md)</ept> object used to store the conversion formats that the server application supports.","source":"Call this function to get the [COleDataSource](../../mfc/reference/coledatasource-class.md) object used to store the conversion formats that the server application supports."},{"content":"Return Value","pos":[14593,14605]},{"pos":[14609,14687],"content":"A pointer to the <ph id=\"ph1\">`COleDataSource`</ph> object used to store the conversion formats.","source":"A pointer to the `COleDataSource` object used to store the conversion formats."},{"content":"Remarks","pos":[14697,14704]},{"content":"If you want your server application to offer data in a variety of formats during data transfer operations, register those formats with the <ph id=\"ph1\">`COleDataSource`</ph> object returned by this function.","pos":[14708,14897],"source":"If you want your server application to offer data in a variety of formats during data transfer operations, register those formats with the `COleDataSource` object returned by this function."},{"content":"For example, if you want to supply a <bpt id=\"p1\">**</bpt>CF_TEXT<ept id=\"p1\">**</ept> representation of the OLE item for Clipboard or drag-and-drop operations, you would register the format with the <ph id=\"ph1\">`COleDataSource`</ph> object this function returns, and then override the <bpt id=\"p2\">**</bpt>OnRenderXxxData<ept id=\"p2\">**</ept> member function to provide the data.","pos":[14898,15185],"source":" For example, if you want to supply a **CF_TEXT** representation of the OLE item for Clipboard or drag-and-drop operations, you would register the format with the `COleDataSource` object this function returns, and then override the **OnRenderXxxData** member function to provide the data."},{"pos":[15239,15266],"content":"COleServerItem::GetDocument"},{"content":"Call this function to get a pointer to the document that contains the item.","pos":[15270,15345]},{"content":"Return Value","pos":[15409,15421]},{"pos":[15425,15522],"content":"A pointer to the document that contains the item; <bpt id=\"p1\">**</bpt>NULL<ept id=\"p1\">**</ept> if the item is not part of a document.","source":"A pointer to the document that contains the item; **NULL** if the item is not part of a document."},{"content":"Remarks","pos":[15532,15539]},{"pos":[15543,15652],"content":"This allows access to the server document that you passed as an argument to the <ph id=\"ph1\">`COleServerItem`</ph> constructor.","source":"This allows access to the server document that you passed as an argument to the `COleServerItem` constructor."},{"pos":[15713,15747],"content":"COleServerItem::GetEmbedSourceData"},{"pos":[15751,15821],"content":"Call this function to get the <bpt id=\"p1\">**</bpt>CF_EMBEDSOURCE<ept id=\"p1\">**</ept> data for an OLE item.","source":"Call this function to get the **CF_EMBEDSOURCE** data for an OLE item."},{"content":"Parameters","pos":[15896,15906]},{"content":"Pointer to the <bpt id=\"p1\">[</bpt>STGMEDIUM<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms683812)</ept> structure that will receive the <bpt id=\"p2\">**</bpt>CF_EMBEDSOURCE<ept id=\"p2\">**</ept> data for the OLE item.","pos":[15927,16087],"source":" Pointer to the [STGMEDIUM](http://msdn.microsoft.com/library/windows/desktop/ms683812) structure that will receive the **CF_EMBEDSOURCE** data for the OLE item."},{"content":"Remarks","pos":[16097,16104]},{"content":"This format includes the item's native data.","pos":[16108,16152]},{"content":"You must have implemented the <ph id=\"ph1\">`Serialize`</ph> member function for this function to work properly.","pos":[16153,16246],"source":" You must have implemented the `Serialize` member function for this function to work properly."},{"content":"The result can then be added to a data source by using <bpt id=\"p1\">[</bpt>COleDataSource::CacheData<ept id=\"p1\">](../../mfc/reference/coledatasource-class.md#coledatasource__cachedata)</ept>.","pos":[16253,16407],"source":"The result can then be added to a data source by using [COleDataSource::CacheData](../../mfc/reference/coledatasource-class.md#coledatasource__cachedata)."},{"content":"This function is called automatically by <bpt id=\"p1\">[</bpt>COleServerItem::OnGetClipboardData<ept id=\"p1\">](#coleserveritem__ongetclipboarddata)</ept>.","pos":[16408,16523],"source":" This function is called automatically by [COleServerItem::OnGetClipboardData](#coleserveritem__ongetclipboarddata)."},{"pos":[16530,16687],"content":"For more information, see <bpt id=\"p1\">[</bpt>STGMEDIUM<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms683812)</ept> in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"For more information, see [STGMEDIUM](http://msdn.microsoft.com/library/windows/desktop/ms683812) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"pos":[16741,16768],"content":"COleServerItem::GetItemName"},{"content":"Call this function to get the name of the item.","pos":[16772,16819]},{"content":"Return Value","pos":[16883,16895]},{"content":"The name of the item.","pos":[16899,16920]},{"content":"Remarks","pos":[16930,16937]},{"content":"You typically call this function only for linked items.","pos":[16941,16996]},{"pos":[17056,17089],"content":"COleServerItem::GetLinkSourceData"},{"pos":[17093,17160],"content":"Call this function to get the <ph id=\"ph1\">`CF_LINKSOURCE`</ph> data for an OLE item.","source":"Call this function to get the `CF_LINKSOURCE` data for an OLE item."},{"content":"Parameters","pos":[17234,17244]},{"content":"Pointer to the <bpt id=\"p1\">[</bpt>STGMEDIUM<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms683812)</ept> structure that will receive the <ph id=\"ph1\">`CF_LINKSOURCE`</ph> data for the OLE item.","pos":[17265,17422],"source":" Pointer to the [STGMEDIUM](http://msdn.microsoft.com/library/windows/desktop/ms683812) structure that will receive the `CF_LINKSOURCE` data for the OLE item."},{"content":"Return Value","pos":[17432,17444]},{"content":"Nonzero if successful; otherwise 0.","pos":[17448,17483]},{"content":"Remarks","pos":[17493,17500]},{"content":"This format includes the CLSID describing the type of the OLE item and the information needed to locate the document containing the OLE item.","pos":[17504,17645]},{"content":"The result can then be added to a data source with <bpt id=\"p1\">[</bpt>COleDataSource::CacheData<ept id=\"p1\">](../../mfc/reference/coledatasource-class.md#coledatasource__cachedata)</ept>.","pos":[17652,17802],"source":"The result can then be added to a data source with [COleDataSource::CacheData](../../mfc/reference/coledatasource-class.md#coledatasource__cachedata)."},{"content":"This function is called automatically by <bpt id=\"p1\">[</bpt>OnGetClipboardData<ept id=\"p1\">](#coleserveritem__ongetclipboarddata)</ept>.","pos":[17803,17902],"source":" This function is called automatically by [OnGetClipboardData](#coleserveritem__ongetclipboarddata)."},{"pos":[17909,18066],"content":"For more information, see <bpt id=\"p1\">[</bpt>STGMEDIUM<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms683812)</ept> in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"For more information, see [STGMEDIUM](http://msdn.microsoft.com/library/windows/desktop/ms683812) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"pos":[18132,18171],"content":"COleServerItem::GetObjectDescriptorData"},{"pos":[18175,18250],"content":"Call this function to get the <bpt id=\"p1\">**</bpt>CF_OBJECTDESCRIPTOR<ept id=\"p1\">**</ept> data for an OLE item.","source":"Call this function to get the **CF_OBJECTDESCRIPTOR** data for an OLE item."},{"content":"Parameters","pos":[18380,18390]},{"content":"Offset of the mouse click from the upper-left corner of the OLE item.","pos":[18408,18477]},{"content":"Can be <bpt id=\"p1\">**</bpt>NULL<ept id=\"p1\">**</ept>.","pos":[18478,18494],"source":" Can be **NULL**."},{"content":"Size of the OLE item.","pos":[18513,18534]},{"content":"Can be <bpt id=\"p1\">**</bpt>NULL<ept id=\"p1\">**</ept>.","pos":[18535,18551],"source":" Can be **NULL**."},{"content":"Pointer to the <bpt id=\"p1\">[</bpt>STGMEDIUM<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms683812)</ept> structure that will receive the <bpt id=\"p2\">**</bpt>CF_OBJECTDESCRIPTOR<ept id=\"p2\">**</ept> data for the OLE item.","pos":[18575,18740],"source":" Pointer to the [STGMEDIUM](http://msdn.microsoft.com/library/windows/desktop/ms683812) structure that will receive the **CF_OBJECTDESCRIPTOR** data for the OLE item."},{"content":"Remarks","pos":[18750,18757]},{"content":"The information is copied into the <bpt id=\"p1\">**</bpt>STGMEDIUM<ept id=\"p1\">**</ept> structure pointed to by <ph id=\"ph1\">`lpStgMedium`</ph>.","pos":[18761,18848],"source":"The information is copied into the **STGMEDIUM** structure pointed to by `lpStgMedium`."},{"content":"This format includes the information needed for the Paste Special dialog.","pos":[18849,18922]},{"pos":[18929,19086],"content":"For more information, see <bpt id=\"p1\">[</bpt>STGMEDIUM<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms683812)</ept> in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"For more information, see [STGMEDIUM](http://msdn.microsoft.com/library/windows/desktop/ms683812) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"pos":[19140,19167],"content":"COleServerItem::IsConnected"},{"content":"Call this function to see if the OLE item is connected.","pos":[19171,19226]},{"content":"Return Value","pos":[19280,19292]},{"content":"Nonzero if the item is connected; otherwise 0.","pos":[19296,19342]},{"content":"Remarks","pos":[19352,19359]},{"content":"An OLE item is considered connected if one or more containers have references to the item.","pos":[19363,19453]},{"content":"An item is connected if its reference count is greater than 0 or if it is an embedded item.","pos":[19454,19545]},{"pos":[19600,19628],"content":"COleServerItem::IsLinkedItem"},{"content":"Call this function to see if the OLE item is a linked item.","pos":[19632,19691]},{"content":"Return Value","pos":[19746,19758]},{"content":"Nonzero if the item is a linked item; otherwise 0.","pos":[19762,19812]},{"content":"Remarks","pos":[19822,19829]},{"content":"An item is linked if the item is valid and is not returned in the document's list of embedded items.","pos":[19833,19933]},{"content":"A linked item might or might not be connected to a container.","pos":[19934,19995]},{"content":"It is common to use the same class for both linked and embedded items.","pos":[20002,20072]},{"content":"allows you to make linked items behave differently than embedded items, although many times the code is common.","pos":[20088,20199]},{"pos":[20254,20282],"content":"COleServerItem::m_sizeExtent"},{"content":"This member tells the server how much of the object is visible in the container document.","pos":[20286,20375]},{"content":"Remarks","pos":[20422,20429]},{"pos":[20433,20524],"content":"The default implementation of <bpt id=\"p1\">[</bpt>OnSetExtent<ept id=\"p1\">](#coleserveritem__onsetextent)</ept> sets this member.","source":"The default implementation of [OnSetExtent](#coleserveritem__onsetextent) sets this member."},{"pos":[20580,20609],"content":"COleServerItem::NotifyChanged"},{"content":"Call this function after the linked item has been changed.","pos":[20613,20671]},{"content":"Parameters","pos":[20757,20767]},{"content":"A value from the <ph id=\"ph1\">`DVASPECT`</ph> enumeration that indicates which aspect of the OLE item has changed.","pos":[20788,20884],"source":" A value from the `DVASPECT` enumeration that indicates which aspect of the OLE item has changed."},{"content":"This parameter can have any of the following values:","pos":[20885,20937]},{"pos":[20964,21066],"content":"Item is represented in such a way that it can be displayed as an embedded object inside its container."},{"pos":[21095,21191],"content":"Item is rendered in a \"thumbnail\" representation so that it can be displayed in a browsing tool."},{"pos":[21215,21246],"content":"Item is represented by an icon."},{"pos":[21274,21359],"content":"Item is represented as if it were printed using the Print command from the File menu."},{"content":"Remarks","pos":[21369,21376]},{"content":"If a container item is linked to the document with an automatic link, the item is updated to reflect the changes.","pos":[21380,21493]},{"content":"In container applications written using the Microsoft Foundation Class Library, <bpt id=\"p1\">[</bpt>COleClientItem::OnChange<ept id=\"p1\">](../../mfc/reference/coleclientitem-class.md#coleclientitem__onchange)</ept> is called in response.","pos":[21494,21693],"source":" In container applications written using the Microsoft Foundation Class Library, [COleClientItem::OnChange](../../mfc/reference/coleclientitem-class.md#coleclientitem__onchange) is called in response."},{"pos":[21744,21768],"content":"COleServerItem::OnDoVerb"},{"content":"Called by the framework to execute the specified verb.","pos":[21772,21826]},{"content":"Parameters","pos":[21886,21896]},{"content":"Specifies the verb to execute.","pos":[21911,21941]},{"content":"It can be any one of the following:","pos":[21942,21977]},{"content":"Value","pos":[21984,21989]},{"content":"Meaning","pos":[21990,21997]},{"content":"Symbol","pos":[21998,22004]},{"content":"0","pos":[22052,22053]},{"content":"Primary verb","pos":[22054,22066]},{"content":"1","pos":[22090,22091]},{"content":"Secondary verb","pos":[22092,22106]},{"content":"(None)","pos":[22107,22113]},{"content":"– 1","pos":[22118,22121]},{"content":"Display item for editing","pos":[22122,22146]},{"content":"– 2","pos":[22167,22170]},{"content":"Edit item in separate window","pos":[22171,22199]},{"content":"– 3","pos":[22220,22223]},{"content":"Hide item","pos":[22224,22233]},{"content":"The –1 value is typically an alias for another verb.","pos":[22257,22309]},{"content":"If open editing is not supported, –2 has the same effect as –1.","pos":[22310,22373]},{"content":"For additional values, see <bpt id=\"p1\">[</bpt>IOleObject::DoVerb<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms694508)</ept> in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","pos":[22374,22541],"source":" For additional values, see [IOleObject::DoVerb](http://msdn.microsoft.com/library/windows/desktop/ms694508) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"content":"Remarks","pos":[22551,22558]},{"content":"If the container application was written with the Microsoft Foundation Class Library, this function is called when the <bpt id=\"p1\">[</bpt>COleClientItem::Activate<ept id=\"p1\">](../../mfc/reference/coleclientitem-class.md#coleclientitem__activate)</ept> member function of the corresponding <ph id=\"ph1\">`COleClientItem`</ph> object is called.","pos":[22562,22849],"source":"If the container application was written with the Microsoft Foundation Class Library, this function is called when the [COleClientItem::Activate](../../mfc/reference/coleclientitem-class.md#coleclientitem__activate) member function of the corresponding `COleClientItem` object is called."},{"content":"The default implementation calls the <bpt id=\"p1\">[</bpt>OnShow<ept id=\"p1\">](#coleserveritem__onshow)</ept> member function if the primary verb or <ph id=\"ph1\">`OLEIVERB_SHOW`</ph> is specified, <bpt id=\"p2\">[</bpt>OnOpen<ept id=\"p2\">](#coleserveritem__onopen)</ept> if the secondary verb or <ph id=\"ph2\">`OLEIVERB_OPEN`</ph> is specified, and <bpt id=\"p3\">[</bpt>OnHide<ept id=\"p3\">](#coleserveritem__onhide)</ept> if <ph id=\"ph3\">`OLEIVERB_HIDE`</ph> is specified.","pos":[22850,23149],"source":" The default implementation calls the [OnShow](#coleserveritem__onshow) member function if the primary verb or `OLEIVERB_SHOW` is specified, [OnOpen](#coleserveritem__onopen) if the secondary verb or `OLEIVERB_OPEN` is specified, and [OnHide](#coleserveritem__onhide) if `OLEIVERB_HIDE` is specified."},{"content":"The default implementation calls <ph id=\"ph1\">`OnShow`</ph> if <ph id=\"ph2\">`iVerb`</ph> is not one of the verbs listed above.","pos":[23150,23240],"source":" The default implementation calls `OnShow` if `iVerb` is not one of the verbs listed above."},{"content":"Override this function if your primary verb does not show the item.","pos":[23247,23314]},{"content":"For example, if the item is a sound recording and its primary verb is Play, you would not have to display the server application to play the item.","pos":[23315,23461]},{"pos":[23468,23634],"content":"For more information, see <bpt id=\"p1\">[</bpt>IOleObject::DoVerb<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms694508)</ept> in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"For more information, see [IOleObject::DoVerb](http://msdn.microsoft.com/library/windows/desktop/ms694508) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"pos":[23683,23705],"content":"COleServerItem::OnDraw"},{"content":"Called by the framework to render the OLE item into a metafile.","pos":[23709,23772]},{"content":"Parameters","pos":[23859,23869]},{"content":"A pointer to the <bpt id=\"p1\">[</bpt>CDC<ept id=\"p1\">](../../mfc/reference/cdc-class.md)</ept> object on which to draw the item.","pos":[23882,23972],"source":" A pointer to the [CDC](../../mfc/reference/cdc-class.md) object on which to draw the item."},{"content":"The display context is automatically connected to the attribute display context so you can call attribute functions, although doing so would make the metafile device-specific.","pos":[23973,24148]},{"content":"Size, in <bpt id=\"p1\">**</bpt>HIMETRIC<ept id=\"p1\">**</ept> units, in which to draw the metafile.","pos":[24166,24225],"source":" Size, in **HIMETRIC** units, in which to draw the metafile."},{"content":"Return Value","pos":[24235,24247]},{"content":"Nonzero if the item was successfully drawn; otherwise 0.","pos":[24251,24307]},{"content":"Remarks","pos":[24317,24324]},{"content":"The metafile representation of the OLE item is used to display the item in the container application.","pos":[24328,24429]},{"content":"If the container application was written with the Microsoft Foundation Class Library, the metafile is used by the <bpt id=\"p1\">[</bpt>Draw<ept id=\"p1\">](../../mfc/reference/coleclientitem-class.md#coleclientitem__draw)</ept> member function of the corresponding <bpt id=\"p2\">[</bpt>COleClientItem<ept id=\"p2\">](../../mfc/reference/coleclientitem-class.md)</ept> object.","pos":[24430,24723],"source":" If the container application was written with the Microsoft Foundation Class Library, the metafile is used by the [Draw](../../mfc/reference/coleclientitem-class.md#coleclientitem__draw) member function of the corresponding [COleClientItem](../../mfc/reference/coleclientitem-class.md) object."},{"content":"There is no default implementation.","pos":[24724,24759]},{"content":"You must override this function to draw the item into the device context specified.","pos":[24760,24843]},{"pos":[24894,24918],"content":"COleServerItem::OnDrawEx"},{"content":"Called by the framework for all drawing.","pos":[24922,24962]},{"content":"Parameters","pos":[25073,25083]},{"content":"A pointer to the <bpt id=\"p1\">[</bpt>CDC<ept id=\"p1\">](../../mfc/reference/cdc-class.md)</ept> object on which to draw the item.","pos":[25096,25186],"source":" A pointer to the [CDC](../../mfc/reference/cdc-class.md) object on which to draw the item."},{"content":"The DC is automatically connected to the attribute DC so you can call attribute functions, although doing so would make the metafile device-specific.","pos":[25187,25336]},{"content":"A value from the <ph id=\"ph1\">`DVASPECT`</ph> enumeration.","pos":[25360,25400],"source":" A value from the `DVASPECT` enumeration."},{"content":"This parameter can have any of the following values:","pos":[25401,25453]},{"pos":[25480,25582],"content":"Item is represented in such a way that it can be displayed as an embedded object inside its container."},{"pos":[25611,25707],"content":"Item is rendered in a \"thumbnail\" representation so that it can be displayed in a browsing tool."},{"pos":[25731,25762],"content":"Item is represented by an icon."},{"pos":[25790,25875],"content":"Item is represented as if it were printed using the Print command from the File menu."},{"pos":[25882,25932],"content":"`rSize`  \nSize of the item in **HIMETRIC** units.","leadings":[""," "],"nodes":[{"content":"Size of the item in <bpt id=\"p1\">**</bpt>HIMETRIC<ept id=\"p1\">**</ept> units.","pos":[10,49],"source":"Size of the item in **HIMETRIC** units."}]},{"content":"Return Value","pos":[25942,25954]},{"content":"Nonzero if the item was successfully drawn; otherwise 0.","pos":[25958,26014]},{"content":"Remarks","pos":[26024,26031]},{"pos":[26035,26144],"content":"The default implementation calls <ph id=\"ph1\">`OnDraw`</ph> when <ph id=\"ph2\">`DVASPECT`</ph> is equal to <ph id=\"ph3\">`DVASPECT_CONTENT`</ph>; otherwise it fails.","source":"The default implementation calls `OnDraw` when `DVASPECT` is equal to `DVASPECT_CONTENT`; otherwise it fails."},{"pos":[26151,26294],"content":"Override this function to provide presentation data for aspects other than <ph id=\"ph1\">`DVASPECT_CONTENT`</ph>, such as <ph id=\"ph2\">`DVASPECT_ICON`</ph> or <ph id=\"ph3\">`DVASPECT_THUMBNAIL`</ph>.","source":"Override this function to provide presentation data for aspects other than `DVASPECT_CONTENT`, such as `DVASPECT_ICON` or `DVASPECT_THUMBNAIL`."},{"pos":[26355,26389],"content":"COleServerItem::OnGetClipboardData"},{"pos":[26393,26597],"content":"Called by the framework to get a <ph id=\"ph1\">`COleDataSource`</ph> object containing all the data that would be placed on the Clipboard by a call to the <bpt id=\"p1\">[</bpt>CopyToClipboard<ept id=\"p1\">](#coleserveritem__copytoclipboard)</ept> member function.","source":"Called by the framework to get a `COleDataSource` object containing all the data that would be placed on the Clipboard by a call to the [CopyToClipboard](#coleserveritem__copytoclipboard) member function."},{"content":"Parameters","pos":[26735,26745]},{"content":"Set this to <bpt id=\"p1\">**</bpt>TRUE<ept id=\"p1\">**</ept> if link data should be copied to the Clipboard.","pos":[26767,26835],"source":" Set this to **TRUE** if link data should be copied to the Clipboard."},{"content":"Set this to <bpt id=\"p1\">**</bpt>FALSE<ept id=\"p1\">**</ept> if your server application does not support links.","pos":[26836,26908],"source":" Set this to **FALSE** if your server application does not support links."},{"content":"The offset of the mouse cursor from the origin of the object in pixels.","pos":[26929,27000]},{"content":"The size of the object in pixels.","pos":[27019,27052]},{"content":"Return Value","pos":[27062,27074]},{"pos":[27078,27192],"content":"A pointer to a <bpt id=\"p1\">[</bpt>COleDataSource<ept id=\"p1\">](../../mfc/reference/coledatasource-class.md)</ept> object containing the Clipboard data.","source":"A pointer to a [COleDataSource](../../mfc/reference/coledatasource-class.md) object containing the Clipboard data."},{"content":"Remarks","pos":[27202,27209]},{"pos":[27213,27317],"content":"The default implementation of this function calls <bpt id=\"p1\">[</bpt>GetClipboardData<ept id=\"p1\">](#coleserveritem__getclipboarddata)</ept>.","source":"The default implementation of this function calls [GetClipboardData](#coleserveritem__getclipboarddata)."},{"pos":[27371,27398],"content":"COleServerItem::OnGetExtent"},{"pos":[27402,27487],"content":"Called by the framework to retrieve the size, in <bpt id=\"p1\">**</bpt>HIMETRIC<ept id=\"p1\">**</ept> units, of the OLE item.","source":"Called by the framework to retrieve the size, in **HIMETRIC** units, of the OLE item."},{"content":"Parameters","pos":[27585,27595]},{"content":"Specifies the aspect of the OLE item whose bounds are to be retrieved.","pos":[27616,27686]},{"content":"This parameter can have any of the following values:","pos":[27687,27739]},{"pos":[27766,27868],"content":"Item is represented in such a way that it can be displayed as an embedded object inside its container."},{"pos":[27897,27993],"content":"Item is rendered in a \"thumbnail\" representation so that it can be displayed in a browsing tool."},{"pos":[28017,28048],"content":"Item is represented by an icon."},{"pos":[28076,28161],"content":"Item is represented as if it were printed using the Print command from the File menu."},{"pos":[28168,28252],"content":"`rSize`  \nReference to a `CSize` object that will receive the size of the OLE item.","leadings":[""," "],"nodes":[{"content":"Reference to a <ph id=\"ph1\">`CSize`</ph> object that will receive the size of the OLE item.","pos":[10,83],"source":"Reference to a `CSize` object that will receive the size of the OLE item."}]},{"content":"Return Value","pos":[28262,28274]},{"content":"Nonzero if successful; otherwise 0.","pos":[28278,28313]},{"content":"Remarks","pos":[28323,28330]},{"content":"If the container application was written with the Microsoft Foundation Class Library, this function is called when the <bpt id=\"p1\">[</bpt>GetExtent<ept id=\"p1\">](../../mfc/reference/coleclientitem-class.md#coleclientitem__getextent)</ept> member function of the corresponding <ph id=\"ph1\">`COleClientItem`</ph> object is called.","pos":[28334,28607],"source":"If the container application was written with the Microsoft Foundation Class Library, this function is called when the [GetExtent](../../mfc/reference/coleclientitem-class.md#coleclientitem__getextent) member function of the corresponding `COleClientItem` object is called."},{"content":"The default implementation does nothing.","pos":[28608,28648]},{"content":"You must implement it yourself.","pos":[28649,28680]},{"content":"Override this function if you want to perform special processing when handling a request for the size of the OLE item.","pos":[28681,28799]},{"pos":[28848,28870],"content":"COleServerItem::OnHide"},{"content":"Called by the framework to hide the OLE item.","pos":[28874,28919]},{"content":"Remarks","pos":[28967,28974]},{"content":"The default calls <bpt id=\"p1\">**</bpt>COleServerDoc::OnShowDocument( FALSE )<ept id=\"p1\">**</ept>.","pos":[28978,29039],"source":"The default calls **COleServerDoc::OnShowDocument( FALSE )**."},{"content":"The function also notifies the container that the OLE item has been hidden.","pos":[29040,29115]},{"content":"Override this function if you want to perform special processing when hiding an OLE item.","pos":[29116,29205]},{"pos":[29262,29292],"content":"COleServerItem::OnInitFromData"},{"pos":[29296,29382],"content":"Called by the framework to initialize an OLE item using the contents of <ph id=\"ph1\">`pDataObject`</ph>.","source":"Called by the framework to initialize an OLE item using the contents of `pDataObject`."},{"content":"Parameters","pos":[29492,29502]},{"content":"Pointer to an OLE data object containing data in various formats for initializing the OLE item.","pos":[29523,29618]},{"content":"<bpt id=\"p1\"> **</bpt>TRUE<ept id=\"p1\">**</ept> if the function is called to initialize an OLE item being newly created by a container application.","pos":[29639,29748],"source":" **TRUE** if the function is called to initialize an OLE item being newly created by a container application."},{"content":"<bpt id=\"p1\">**</bpt>FALSE<ept id=\"p1\">**</ept> if the function is called to replace the contents of an already existing OLE item.","pos":[29749,29841],"source":"**FALSE** if the function is called to replace the contents of an already existing OLE item."},{"content":"Return Value","pos":[29851,29863]},{"content":"Nonzero if successful; otherwise 0.","pos":[29867,29902]},{"content":"Remarks","pos":[29912,29919]},{"content":"If <ph id=\"ph1\">`bCreation`</ph> is <bpt id=\"p1\">**</bpt>TRUE<ept id=\"p1\">**</ept>, this function is called if a container implements Insert New Object based on the current selection.","pos":[29923,30050],"source":"If `bCreation` is **TRUE**, this function is called if a container implements Insert New Object based on the current selection."},{"content":"The data selected is used when creating the new OLE item.","pos":[30051,30108]},{"content":"For example, when selecting a range of cells in a spreadsheet program and then using the Insert New Object to create a chart based on the values in the selected range.","pos":[30109,30276]},{"content":"The default implementation does nothing.","pos":[30277,30317]},{"content":"Override this function to choose an acceptable format from those offered by <ph id=\"ph1\">`pDataObject`</ph> and initialize the OLE item based on the data provided.","pos":[30318,30463],"source":" Override this function to choose an acceptable format from those offered by `pDataObject` and initialize the OLE item based on the data provided."},{"content":"This is an advanced overridable.","pos":[30464,30496]},{"pos":[30503,30675],"content":"For more information, see <bpt id=\"p1\">[</bpt>IOleObject::InitFromData<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms688510)</ept> in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"For more information, see [IOleObject::InitFromData](http://msdn.microsoft.com/library/windows/desktop/ms688510) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"pos":[30724,30746],"content":"COleServerItem::OnOpen"},{"content":"Called by the framework to display the OLE item in a separate instance of the server application, rather than in place.","pos":[30750,30869]},{"content":"Remarks","pos":[30917,30924]},{"content":"The default implementation activates the first frame window displaying the document that contains the OLE item; if the application is a mini-server, the default implementation shows the main window.","pos":[30928,31126]},{"content":"The function also notifies the container that the OLE item has been opened.","pos":[31127,31202]},{"content":"Override this function if you want to perform special processing when opening an OLE item.","pos":[31209,31299]},{"content":"This is especially common with linked items where you want to set the selection to the link when it is opened.","pos":[31300,31410]},{"pos":[31417,31593],"content":"For more information, see <bpt id=\"p1\">[</bpt>IOleClientSite::OnShowWindow<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms688658)</ept> in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"For more information, see [IOleClientSite::OnShowWindow](http://msdn.microsoft.com/library/windows/desktop/ms688658) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"pos":[31654,31688],"content":"COleServerItem::OnQueryUpdateItems"},{"content":"Called by the framework to determine whether any linked items in the current server document are out of date.","pos":[31692,31801]},{"content":"Return Value","pos":[31861,31873]},{"content":"Nonzero if the document has items needing updates; 0 if all items are up to date.","pos":[31877,31958]},{"content":"Remarks","pos":[31968,31975]},{"content":"An item is out of date if its source document has been changed but the linked item has not been updated to reflect the changes in the document.","pos":[31979,32122]},{"pos":[32177,32205],"content":"COleServerItem::OnRenderData"},{"content":"Called by the framework to retrieve data in the specified format.","pos":[32209,32274]},{"content":"Parameters","pos":[32387,32397]},{"content":"Points to the <bpt id=\"p1\">[</bpt>FORMATETC<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms682177)</ept> structure specifying the format in which information is requested.","pos":[32418,32570],"source":" Points to the [FORMATETC](http://msdn.microsoft.com/library/windows/desktop/ms682177) structure specifying the format in which information is requested."},{"content":"Points to a <bpt id=\"p1\">[</bpt>STGMEDIUM<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms683812)</ept> structure in which the data is to be returned.","pos":[32594,32724],"source":" Points to a [STGMEDIUM](http://msdn.microsoft.com/library/windows/desktop/ms683812) structure in which the data is to be returned."},{"content":"Return Value","pos":[32734,32746]},{"content":"Nonzero if successful; otherwise 0.","pos":[32750,32785]},{"content":"Remarks","pos":[32795,32802]},{"content":"The specified format is one previously placed in the <ph id=\"ph1\">`COleDataSource`</ph> object using the <bpt id=\"p1\">[</bpt>DelayRenderData<ept id=\"p1\">](../../mfc/reference/coledatasource-class.md#coledatasource__delayrenderdata)</ept> or <bpt id=\"p2\">[</bpt>DelayRenderFileData<ept id=\"p2\">](../../mfc/reference/coledatasource-class.md#coledatasource__delayrenderfiledata)</ept> member function for delayed rendering.","pos":[32806,33132],"source":"The specified format is one previously placed in the `COleDataSource` object using the [DelayRenderData](../../mfc/reference/coledatasource-class.md#coledatasource__delayrenderdata) or [DelayRenderFileData](../../mfc/reference/coledatasource-class.md#coledatasource__delayrenderfiledata) member function for delayed rendering."},{"content":"The default implementation of this function calls <bpt id=\"p1\">[</bpt>OnRenderFileData<ept id=\"p1\">](#coleserveritem__onrenderfiledata)</ept> or <bpt id=\"p2\">[</bpt>OnRenderGlobalData<ept id=\"p2\">](#coleserveritem__onrenderglobaldata)</ept>, respectively, if the supplied storage medium is either a file or memory.","pos":[33133,33371],"source":" The default implementation of this function calls [OnRenderFileData](#coleserveritem__onrenderfiledata) or [OnRenderGlobalData](#coleserveritem__onrenderglobaldata), respectively, if the supplied storage medium is either a file or memory."},{"content":"If neither of these formats is supplied, the default implementation returns 0 and does nothing.","pos":[33372,33467]},{"content":"If <ph id=\"ph1\">`lpStgMedium`-&gt; </ph><bpt id=\"p1\">*</bpt>tymed<ept id=\"p1\">*</ept> is <bpt id=\"p2\">**</bpt>TYMED_NULL<ept id=\"p2\">**</ept>, the <bpt id=\"p3\">**</bpt>STGMEDIUM<ept id=\"p3\">**</ept> should allocated and filled as specified by <bpt id=\"p4\">*</bpt>lpFormatEtc-&gt;tymed<ept id=\"p4\">*</ept>.","pos":[33474,33603],"source":"If `lpStgMedium`-> *tymed* is **TYMED_NULL**, the **STGMEDIUM** should allocated and filled as specified by *lpFormatEtc->tymed*."},{"content":"If not <bpt id=\"p1\">**</bpt>TYMED_NULL<ept id=\"p1\">**</ept>, the <bpt id=\"p2\">**</bpt>STGMEDIUM<ept id=\"p2\">**</ept> should be filled in place with the data.","pos":[33604,33685],"source":" If not **TYMED_NULL**, the **STGMEDIUM** should be filled in place with the data."},{"content":"This is an advanced overridable.","pos":[33692,33724]},{"content":"Override this function to provide your data in the requested format and medium.","pos":[33725,33804]},{"content":"Depending on your data, you may want to override one of the other versions of this function instead.","pos":[33805,33905]},{"content":"If your data is small and fixed in size, override <ph id=\"ph1\">`OnRenderGlobalData`</ph>.","pos":[33906,33977],"source":" If your data is small and fixed in size, override `OnRenderGlobalData`."},{"content":"If your data is in a file, or is of variable size, override <ph id=\"ph1\">`OnRenderFileData`</ph>.","pos":[33978,34057],"source":" If your data is in a file, or is of variable size, override `OnRenderFileData`."},{"pos":[34064,34451],"content":"For more information, see <bpt id=\"p1\">[</bpt>IDataObject::GetData<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms678431)</ept>, <bpt id=\"p2\">[</bpt>STGMEDIUM<ept id=\"p2\">](http://msdn.microsoft.com/library/windows/desktop/ms683812)</ept>, <bpt id=\"p3\">[</bpt>FORMATETC<ept id=\"p3\">](http://msdn.microsoft.com/library/windows/desktop/ms682177)</ept>, and <bpt id=\"p4\">[</bpt>TYMED<ept id=\"p4\">](http://msdn.microsoft.com/library/windows/desktop/ms691227)</ept> in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"For more information, see [IDataObject::GetData](http://msdn.microsoft.com/library/windows/desktop/ms678431), [STGMEDIUM](http://msdn.microsoft.com/library/windows/desktop/ms683812), [FORMATETC](http://msdn.microsoft.com/library/windows/desktop/ms682177), and [TYMED](http://msdn.microsoft.com/library/windows/desktop/ms691227) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"pos":[34510,34542],"content":"COleServerItem::OnRenderFileData"},{"content":"Called by the framework to retrieve data in the specified format when the storage medium is a file.","pos":[34546,34645]},{"content":"Parameters","pos":[34751,34761]},{"content":"Points to the <bpt id=\"p1\">[</bpt>FORMATETC<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms682177)</ept> structure specifying the format in which information is requested.","pos":[34782,34934],"source":" Points to the [FORMATETC](http://msdn.microsoft.com/library/windows/desktop/ms682177) structure specifying the format in which information is requested."},{"content":"Points to a <ph id=\"ph1\">`CFile`</ph> object in which the data is to be rendered.","pos":[34952,35015],"source":" Points to a `CFile` object in which the data is to be rendered."},{"content":"Return Value","pos":[35025,35037]},{"content":"Nonzero if successful; otherwise 0.","pos":[35041,35076]},{"content":"Remarks","pos":[35086,35093]},{"content":"The specified format is one previously placed in the <ph id=\"ph1\">`COleDataSource`</ph> object using the <bpt id=\"p1\">[</bpt>DelayRenderData<ept id=\"p1\">](../../mfc/reference/coledatasource-class.md#coledatasource__delayrenderdata)</ept> member function for delayed rendering.","pos":[35097,35317],"source":"The specified format is one previously placed in the `COleDataSource` object using the [DelayRenderData](../../mfc/reference/coledatasource-class.md#coledatasource__delayrenderdata) member function for delayed rendering."},{"content":"The default implementation of this function simply returns <bpt id=\"p1\">**</bpt>FALSE<ept id=\"p1\">**</ept>.","pos":[35318,35387],"source":" The default implementation of this function simply returns **FALSE**."},{"content":"This is an advanced overridable.","pos":[35394,35426]},{"content":"Override this function to provide your data in the requested format and medium.","pos":[35427,35506]},{"content":"Depending on your data, you might want to override one of the other versions of this function instead.","pos":[35507,35609]},{"content":"If you want to handle multiple storage mediums, override <bpt id=\"p1\">[</bpt>OnRenderData<ept id=\"p1\">](#coleserveritem__onrenderdata)</ept>.","pos":[35610,35713],"source":" If you want to handle multiple storage mediums, override [OnRenderData](#coleserveritem__onrenderdata)."},{"content":"If your data is in a file, or is of variable size, override <bpt id=\"p1\">[</bpt>OnRenderFileData<ept id=\"p1\">](#coleserveritem__onrenderfiledata)</ept>.","pos":[35714,35828],"source":" If your data is in a file, or is of variable size, override [OnRenderFileData](#coleserveritem__onrenderfiledata)."},{"pos":[35835,36079],"content":"For more information, see <bpt id=\"p1\">[</bpt>IDataObject::GetData<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms678431)</ept> and <bpt id=\"p2\">[</bpt>FORMATETC<ept id=\"p2\">](http://msdn.microsoft.com/library/windows/desktop/ms682177)</ept> in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"For more information, see [IDataObject::GetData](http://msdn.microsoft.com/library/windows/desktop/ms678431) and [FORMATETC](http://msdn.microsoft.com/library/windows/desktop/ms682177) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"pos":[36140,36174],"content":"COleServerItem::OnRenderGlobalData"},{"content":"Called by the framework to retrieve data in the specified format when the specified storage medium is global memory.","pos":[36178,36294]},{"content":"Parameters","pos":[36407,36417]},{"content":"Points to the <bpt id=\"p1\">[</bpt>FORMATETC<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms682177)</ept> structure specifying the format in which information is requested.","pos":[36438,36590],"source":" Points to the [FORMATETC](http://msdn.microsoft.com/library/windows/desktop/ms682177) structure specifying the format in which information is requested."},{"content":"Points to a handle to global memory in which the data is to be returned.","pos":[36611,36683]},{"content":"If no memory has been allocated, this parameter can be <bpt id=\"p1\">**</bpt>NULL<ept id=\"p1\">**</ept>.","pos":[36684,36748],"source":" If no memory has been allocated, this parameter can be **NULL**."},{"content":"Return Value","pos":[36758,36770]},{"content":"Nonzero if successful; otherwise 0.","pos":[36774,36809]},{"content":"Remarks","pos":[36819,36826]},{"content":"The specified format is one previously placed in the <ph id=\"ph1\">`COleDataSource`</ph> object using the <bpt id=\"p1\">[</bpt>DelayRenderData<ept id=\"p1\">](../../mfc/reference/coledatasource-class.md#coledatasource__delayrenderdata)</ept> member function for delayed rendering.","pos":[36830,37050],"source":"The specified format is one previously placed in the `COleDataSource` object using the [DelayRenderData](../../mfc/reference/coledatasource-class.md#coledatasource__delayrenderdata) member function for delayed rendering."},{"content":"The default implementation of this function simply returns <bpt id=\"p1\">**</bpt>FALSE<ept id=\"p1\">**</ept>.","pos":[37051,37120],"source":" The default implementation of this function simply returns **FALSE**."},{"content":"If <ph id=\"ph1\">`phGlobal`</ph> is <bpt id=\"p1\">**</bpt>NULL<ept id=\"p1\">**</ept>, then a new <ph id=\"ph2\">`HGLOBAL`</ph> should be allocated and returned in <ph id=\"ph3\">`phGlobal`</ph>.","pos":[37127,37222],"source":"If `phGlobal` is **NULL**, then a new `HGLOBAL` should be allocated and returned in `phGlobal`."},{"content":"Otherwise, the <ph id=\"ph1\">`HGLOBAL`</ph> specified by <ph id=\"ph2\">`phGlobal`</ph> should be filled with the data.","pos":[37223,37303],"source":" Otherwise, the `HGLOBAL` specified by `phGlobal` should be filled with the data."},{"content":"The amount of data placed in the <ph id=\"ph1\">`HGLOBAL`</ph> must not exceed the current size of the memory block.","pos":[37304,37400],"source":" The amount of data placed in the `HGLOBAL` must not exceed the current size of the memory block."},{"content":"Also, the block cannot be reallocated to a larger size.","pos":[37401,37456]},{"content":"This is an advanced overridable.","pos":[37463,37495]},{"content":"Override this function to provide your data in the requested format and medium.","pos":[37496,37575]},{"content":"Depending on your data, you may want to override one of the other versions of this function instead.","pos":[37576,37676]},{"content":"If you want to handle multiple storage mediums, override <bpt id=\"p1\">[</bpt>OnRenderData<ept id=\"p1\">](#coleserveritem__onrenderdata)</ept>.","pos":[37677,37780],"source":" If you want to handle multiple storage mediums, override [OnRenderData](#coleserveritem__onrenderdata)."},{"content":"If your data is in a file, or is of variable size, override <bpt id=\"p1\">[</bpt>OnRenderFileData<ept id=\"p1\">](#coleserveritem__onrenderfiledata)</ept>.","pos":[37781,37895],"source":" If your data is in a file, or is of variable size, override [OnRenderFileData](#coleserveritem__onrenderfiledata)."},{"pos":[37902,38146],"content":"For more information, see <bpt id=\"p1\">[</bpt>IDataObject::GetData<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms678431)</ept> and <bpt id=\"p2\">[</bpt>FORMATETC<ept id=\"p2\">](http://msdn.microsoft.com/library/windows/desktop/ms682177)</ept> in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"For more information, see [IDataObject::GetData](http://msdn.microsoft.com/library/windows/desktop/ms678431) and [FORMATETC](http://msdn.microsoft.com/library/windows/desktop/ms682177) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"pos":[38205,38237],"content":"COleServerItem::OnSetColorScheme"},{"content":"Called by the framework to specify a color palette to be used when editing the OLE item.","pos":[38241,38329]},{"content":"Parameters","pos":[38417,38427]},{"content":"Pointer to a Windows <bpt id=\"p1\">[</bpt>LOGPALETTE<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/dd145040)</ept> structure.","pos":[38449,38553],"source":" Pointer to a Windows [LOGPALETTE](http://msdn.microsoft.com/library/windows/desktop/dd145040) structure."},{"content":"Return Value","pos":[38563,38575]},{"content":"Nonzero if the color palette is used; otherwise 0.","pos":[38579,38629]},{"content":"Remarks","pos":[38639,38646]},{"content":"If the container application was written using the Microsoft Foundation Class Library, this function is called when the <bpt id=\"p1\">[</bpt>IOleObject::SetColorScheme<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms683971)</ept> function of the corresponding <ph id=\"ph1\">`COleClientItem`</ph> object is called.","pos":[38650,38923],"source":"If the container application was written using the Microsoft Foundation Class Library, this function is called when the [IOleObject::SetColorScheme](http://msdn.microsoft.com/library/windows/desktop/ms683971) function of the corresponding `COleClientItem` object is called."},{"content":"The default implementation returns <bpt id=\"p1\">**</bpt>FALSE<ept id=\"p1\">**</ept>.","pos":[38924,38969],"source":" The default implementation returns **FALSE**."},{"content":"Override this function if you want to use the recommended palette.","pos":[38970,39036]},{"content":"The server application is not required to use the suggested palette.","pos":[39037,39105]},{"pos":[39112,39286],"content":"For more information, see <bpt id=\"p1\">[</bpt>IOleObject::SetColorScheme<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms683971)</ept> in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"For more information, see [IOleObject::SetColorScheme](http://msdn.microsoft.com/library/windows/desktop/ms683971) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"pos":[39338,39363],"content":"COleServerItem::OnSetData"},{"content":"Called by the framework to replace the OLE item's data with the specified data.","pos":[39367,39446]},{"content":"Parameters","pos":[39577,39587]},{"content":"Pointer to a <bpt id=\"p1\">[</bpt>FORMATETC<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms682177)</ept> structure specifying the format of the data.","pos":[39608,39737],"source":" Pointer to a [FORMATETC](http://msdn.microsoft.com/library/windows/desktop/ms682177) structure specifying the format of the data."},{"content":"Pointer to a <bpt id=\"p1\">[</bpt>STGMEDIUM<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms683812)</ept> structure in which the data resides.","pos":[39761,39882],"source":" Pointer to a [STGMEDIUM](http://msdn.microsoft.com/library/windows/desktop/ms683812) structure in which the data resides."},{"content":"Indicates who has ownership of the storage medium after completing the function call.","pos":[39903,39988]},{"content":"The caller decides who is responsible for releasing the resources allocated on behalf of the storage medium.","pos":[39989,40097]},{"content":"The caller does this by setting <ph id=\"ph1\">`bRelease`</ph>.","pos":[40098,40141],"source":" The caller does this by setting `bRelease`."},{"content":"If <ph id=\"ph1\">`bRelease`</ph> is nonzero, the server item takes ownership, freeing the medium when it has finished using it.","pos":[40142,40250],"source":" If `bRelease` is nonzero, the server item takes ownership, freeing the medium when it has finished using it."},{"content":"When <ph id=\"ph1\">`bRelease`</ph> is 0, the caller retains ownership and the server item can use the storage medium only for the duration of the call.","pos":[40251,40383],"source":" When `bRelease` is 0, the caller retains ownership and the server item can use the storage medium only for the duration of the call."},{"content":"Return Value","pos":[40393,40405]},{"content":"Nonzero if successful; otherwise 0.","pos":[40409,40444]},{"content":"Remarks","pos":[40454,40461]},{"content":"The server item does not take ownership of the data until it has successfully obtained it.","pos":[40465,40555]},{"content":"That is, it does not take ownership if it returns 0.","pos":[40556,40608]},{"content":"If the data source takes ownership, it frees the storage medium by calling the <bpt id=\"p1\">[</bpt>ReleaseStgMedium<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms693491)</ept> function.","pos":[40609,40776],"source":" If the data source takes ownership, it frees the storage medium by calling the [ReleaseStgMedium](http://msdn.microsoft.com/library/windows/desktop/ms693491) function."},{"content":"The default implementation does nothing.","pos":[40783,40823]},{"content":"Override this function to replace the OLE item's data with the specified data.","pos":[40824,40902]},{"content":"This is an advanced overridable.","pos":[40903,40935]},{"pos":[40942,41256],"content":"For more information, see <bpt id=\"p1\">[</bpt>STGMEDIUM<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms683812)</ept>, <bpt id=\"p2\">[</bpt>FORMATETC<ept id=\"p2\">](http://msdn.microsoft.com/library/windows/desktop/ms682177)</ept>, and <bpt id=\"p3\">[</bpt>ReleaseStgMedium<ept id=\"p3\">](http://msdn.microsoft.com/library/windows/desktop/ms693491)</ept> in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"For more information, see [STGMEDIUM](http://msdn.microsoft.com/library/windows/desktop/ms683812), [FORMATETC](http://msdn.microsoft.com/library/windows/desktop/ms682177), and [ReleaseStgMedium](http://msdn.microsoft.com/library/windows/desktop/ms693491) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"pos":[41310,41337],"content":"COleServerItem::OnSetExtent"},{"content":"Called by the framework to tell the OLE item how much space is available to it in the container document.","pos":[41341,41446]},{"content":"Parameters","pos":[41549,41559]},{"content":"Specifies the aspect of the OLE item whose bounds are being specified.","pos":[41580,41650]},{"content":"This parameter can have any of the following values:","pos":[41651,41703]},{"pos":[41730,41832],"content":"Item is represented in such a way that it can be displayed as an embedded object inside its container."},{"pos":[41861,41957],"content":"Item is rendered in a \"thumbnail\" representation so that it can be displayed in a browsing tool."},{"pos":[41981,42012],"content":"Item is represented by an icon."},{"pos":[42040,42125],"content":"Item is represented as if it were printed using the Print command from the File menu."},{"pos":[42132,42249],"content":"`size`  \nA [CSize](../../atl-mfc-shared/reference/csize-class.md) structure specifying the new size of the OLE item.","leadings":[""," "],"nodes":[{"content":"A <bpt id=\"p1\">[</bpt>CSize<ept id=\"p1\">](../../atl-mfc-shared/reference/csize-class.md)</ept> structure specifying the new size of the OLE item.","pos":[9,116],"source":"A [CSize](../../atl-mfc-shared/reference/csize-class.md) structure specifying the new size of the OLE item."}]},{"content":"Return Value","pos":[42259,42271]},{"content":"Nonzero if successful; otherwise 0.","pos":[42275,42310]},{"content":"Remarks","pos":[42320,42327]},{"content":"If the container application was written with the Microsoft Foundation Class Library, this function is called when the <bpt id=\"p1\">[</bpt>SetExtent<ept id=\"p1\">](../../mfc/reference/coleclientitem-class.md#coleclientitem__setextent)</ept> member function of the corresponding <ph id=\"ph1\">`COleClientItem`</ph> object is called.","pos":[42331,42604],"source":"If the container application was written with the Microsoft Foundation Class Library, this function is called when the [SetExtent](../../mfc/reference/coleclientitem-class.md#coleclientitem__setextent) member function of the corresponding `COleClientItem` object is called."},{"content":"The default implementation sets the <bpt id=\"p1\">[</bpt>m_sizeExtent<ept id=\"p1\">](#coleserveritem__m_sizeextent)</ept> member to the specified size if <ph id=\"ph1\">`nDrawAspect`</ph> is <ph id=\"ph2\">`DVASPECT_CONTENT`</ph>; otherwise it returns 0.","pos":[42605,42779],"source":" The default implementation sets the [m_sizeExtent](#coleserveritem__m_sizeextent) member to the specified size if `nDrawAspect` is `DVASPECT_CONTENT`; otherwise it returns 0."},{"content":"Override this function to perform special processing when you change the size of the item.","pos":[42780,42870]},{"pos":[42919,42941],"content":"COleServerItem::OnShow"},{"content":"Called by the framework to instruct the server application to display the OLE item in place.","pos":[42945,43037]},{"content":"Remarks","pos":[43085,43092]},{"content":"This function is typically called when the user of the container application creates an item or executes a verb, such as Edit, that requires the item to be shown.","pos":[43096,43258]},{"content":"The default implementation attempts in-place activation.","pos":[43259,43315]},{"content":"If this fails, the function calls the <ph id=\"ph1\">`OnOpen`</ph> member function to display the OLE item in a separate window.","pos":[43316,43424],"source":" If this fails, the function calls the `OnOpen` member function to display the OLE item in a separate window."},{"content":"Override this function if you want to perform special processing when an OLE item is shown.","pos":[43431,43522]},{"pos":[43573,43597],"content":"COleServerItem::OnUpdate"},{"content":"Called by the framework when an item has been modified.","pos":[43601,43656]},{"content":"Parameters","pos":[43804,43814]},{"content":"Pointer to the item that modified the document.","pos":[43831,43878]},{"content":"Can be <bpt id=\"p1\">**</bpt>NULL<ept id=\"p1\">**</ept>.","pos":[43879,43895],"source":" Can be **NULL**."},{"content":"Contains information about the modification.","pos":[43913,43957]},{"content":"Pointer to an object storing information about the modification.","pos":[43975,44039]},{"content":"A value from the <ph id=\"ph1\">`DVASPECT`</ph> enumeration.","pos":[44063,44103],"source":" A value from the `DVASPECT` enumeration."},{"content":"This parameter can have any one of the following values:","pos":[44104,44160]},{"pos":[44187,44289],"content":"Item is represented in such a way that it can be displayed as an embedded object inside its container."},{"pos":[44318,44414],"content":"Item is rendered in a \"thumbnail\" representation so that it can be displayed in a browsing tool."},{"pos":[44438,44469],"content":"Item is represented by an icon."},{"pos":[44497,44582],"content":"Item is represented as if it were printed using the Print command from the File menu."},{"content":"Remarks","pos":[44592,44599]},{"pos":[44603,44718],"content":"The default implementation calls <bpt id=\"p1\">[</bpt>NotifyChanged<ept id=\"p1\">](#coleserveritem__notifychanged)</ept>, regardless of the hint or sender.","source":"The default implementation calls [NotifyChanged](#coleserveritem__notifychanged), regardless of the hint or sender."},{"pos":[44774,44803],"content":"COleServerItem::OnUpdateItems"},{"content":"Called by the framework to update all items in the server document.","pos":[44807,44874]},{"content":"Remarks","pos":[44929,44936]},{"pos":[44940,45107],"content":"The default implementation calls <bpt id=\"p1\">[</bpt>UpdateLink<ept id=\"p1\">](../../mfc/reference/coleclientitem-class.md#coleclientitem__updatelink)</ept> for all <ph id=\"ph1\">`COleClientItem`</ph> objects in the document.","source":"The default implementation calls [UpdateLink](../../mfc/reference/coleclientitem-class.md#coleclientitem__updatelink) for all `COleClientItem` objects in the document."},{"pos":[45161,45188],"content":"COleServerItem::SetItemName"},{"content":"Call this function when you create a linked item to set its name.","pos":[45192,45257]},{"content":"Parameters","pos":[45322,45332]},{"content":"Pointer to the new name of the item.","pos":[45354,45390]},{"content":"Remarks","pos":[45400,45407]},{"content":"The name must be unique within the document.","pos":[45411,45455]},{"content":"When a server application is called to edit a linked item, the application uses this name to find the item.","pos":[45456,45563]},{"content":"You do not need to call this function for embedded items.","pos":[45564,45621]},{"content":"See Also","pos":[45630,45638]},{"content":"MFC Sample HIERSVR","pos":[45643,45661]},{"content":"CDocItem Class","pos":[45697,45711]},{"content":"Hierarchy Chart","pos":[45757,45772]},{"content":"COleClientItem Class","pos":[45809,45829]},{"content":"COleServerDoc Class","pos":[45881,45900]},{"content":"COleTemplateServer Class","pos":[45951,45975]}],"content":"---\ntitle: \"COleServerItem Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"COleServerItem\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"servers, OLE\"\n  - \"OLE server applications, managing server documents\"\n  - \"OLE server applications, server interfaces\"\n  - \"OLE server documents\"\n  - \"COleServerItem class\"\nms.assetid: 80256df6-3888-4256-944b-787d4b2e6b0d\ncaps.latest.revision: 23\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# COleServerItem Class\nProvides the server interface to OLE items.  \n  \n## Syntax  \n  \n```  \nclass COleServerItem : public CDocItem  \n```  \n  \n## Members  \n  \n### Protected Constructors  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[COleServerItem::COleServerItem](#coleserveritem__coleserveritem)|Constructs a `COleServerItem` object.|  \n  \n### Public Methods  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[COleServerItem::AddOtherClipboardData](#coleserveritem__addotherclipboarddata)|Places presentation and conversion formats in a `COleDataSource` object.|  \n|[COleServerItem::CopyToClipboard](#coleserveritem__copytoclipboard)|Copies the item to the Clipboard.|  \n|[COleServerItem::DoDragDrop](#coleserveritem__dodragdrop)|Performs a drag-and-drop operation.|  \n|[COleServerItem::GetClipboardData](#coleserveritem__getclipboarddata)|Gets the data source for use in data transfer (drag and drop or Clipboard).|  \n|[COleServerItem::GetDocument](#coleserveritem__getdocument)|Returns the server document that contains the item.|  \n|[COleServerItem::GetEmbedSourceData](#coleserveritem__getembedsourcedata)|Gets the **CF_EMBEDSOURCE** data for an OLE item.|  \n|[COleServerItem::GetItemName](#coleserveritem__getitemname)|Returns the name of the item. Used for linked items only.|  \n|[COleServerItem::GetLinkSourceData](#coleserveritem__getlinksourcedata)|Gets the `CF_LINKSOURCE` data for an OLE item.|  \n|[COleServerItem::GetObjectDescriptorData](#coleserveritem__getobjectdescriptordata)|Gets the **CF_OBJECTDESCRIPTOR** data for an OLE item.|  \n|[COleServerItem::IsConnected](#coleserveritem__isconnected)|Indicates whether the item is currently attached to an active container.|  \n|[COleServerItem::IsLinkedItem](#coleserveritem__islinkeditem)|Indicates whether the item represents a linked OLE item.|  \n|[COleServerItem::NotifyChanged](#coleserveritem__notifychanged)|Updates all containers with automatic link update.|  \n|[COleServerItem::OnDoVerb](#coleserveritem__ondoverb)|Called to execute a verb.|  \n|[COleServerItem::OnDraw](#coleserveritem__ondraw)|Called when the container requests to draw the item; implementation required.|  \n|[COleServerItem::OnDrawEx](#coleserveritem__ondrawex)|Called for specialized item drawing.|  \n|[COleServerItem::OnGetClipboardData](#coleserveritem__ongetclipboarddata)|Called by the framework to get the data that would be copied to the Clipboard.|  \n|[COleServerItem::OnGetExtent](#coleserveritem__ongetextent)|Called by the framework to retrieve the size of the OLE item.|  \n|[COleServerItem::OnInitFromData](#coleserveritem__oninitfromdata)|Called by the framework to initialize an OLE item using the contents of the data transfer object specified.|  \n|[COleServerItem::OnQueryUpdateItems](#coleserveritem__onqueryupdateitems)|Called to determine whether any linked items require updating.|  \n|[COleServerItem::OnRenderData](#coleserveritem__onrenderdata)|Retrieves data as part of delayed rendering.|  \n|[COleServerItem::OnRenderFileData](#coleserveritem__onrenderfiledata)|Retrieves data into a `CFile` object as part of delayed rendering.|  \n|[COleServerItem::OnRenderGlobalData](#coleserveritem__onrenderglobaldata)|Retrieves data into an `HGLOBAL` as part of delayed rendering.|  \n|[COleServerItem::OnSetColorScheme](#coleserveritem__onsetcolorscheme)|Called to set the item's color scheme.|  \n|[COleServerItem::OnSetData](#coleserveritem__onsetdata)|Called to set the item's data.|  \n|[COleServerItem::OnSetExtent](#coleserveritem__onsetextent)|Called by the framework to set the size of the OLE item.|  \n|[COleServerItem::OnUpdate](#coleserveritem__onupdate)|Called when some portion of the document the item belongs in is changed.|  \n|[COleServerItem::OnUpdateItems](#coleserveritem__onupdateitems)|Called to update the presentation cache of all items in the server document.|  \n|[COleServerItem::SetItemName](#coleserveritem__setitemname)|Sets the name of the item. Used for linked items only.|  \n  \n### Protected Methods  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[COleServerItem::GetDataSource](#coleserveritem__getdatasource)|Gets the object used to store conversion formats.|  \n|[COleServerItem::OnHide](#coleserveritem__onhide)|Called by the framework to hide the OLE item.|  \n|[COleServerItem::OnOpen](#coleserveritem__onopen)|Called by the framework to display the OLE item in its own top-level window.|  \n|[COleServerItem::OnShow](#coleserveritem__onshow)|Called when the container requests to show the item.|  \n  \n### Public Data Members  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[COleServerItem::m_sizeExtent](#coleserveritem__m_sizeextent)|Informs the server about how much of the OLE item is visible.|  \n  \n## Remarks  \n A linked item can represent some or all of a server document. An embedded item always represents an entire server document.  \n  \n The `COleServerItem` class defines several overridable member functions that are called by the OLE system dynamic-link libraries (DLLs), usually in response to requests from the container application. These member functions allow the container application to manipulate the item indirectly in various ways, such as by displaying it, executing its verbs, or retrieving its data in various formats.  \n  \n To use `COleServerItem`, derive a class from it and implement the [OnDraw](#coleserveritem__ondraw) and [Serialize](../../mfc/reference/cobject-class.md#cobject__serialize) member functions. The `OnDraw` function provides the metafile representation of an item, allowing it to be displayed when a container application opens a compound document. The `Serialize` function of `CObject` provides the native representation of an item, allowing an embedded item to be transferred between the server and container applications. [OnGetExtent](#coleserveritem__ongetextent) provides the natural size of the item to the container, enabling the container to size the item.  \n  \n For more information about servers and related topics, see the article [Servers: Implementing a Server](../../mfc/servers-implementing-a-server.md) and \"Creating a Container/Server Application\" in the article [Containers: Advanced Features](../../mfc/containers-advanced-features.md).  \n  \n## Inheritance Hierarchy  \n [CObject](../../mfc/reference/cobject-class.md)  \n  \n [CCmdTarget](../../mfc/reference/ccmdtarget-class.md)  \n  \n [CDocItem](../../mfc/reference/cdocitem-class.md)  \n  \n `COleServerItem`  \n  \n## Requirements  \n **Header:** afxole.h  \n  \n##  <a name=\"coleserveritem__addotherclipboarddata\"></a>  COleServerItem::AddOtherClipboardData  \n Call this function to place the presentation and conversion formats for the OLE item in the specified `COleDataSource` object.  \n  \n```  \nvoid AddOtherClipboardData(COleDataSource* pDataSource);\n```  \n  \n### Parameters  \n `pDataSource`  \n Pointer to the `COleDataSource` object in which the data should be placed.  \n  \n### Remarks  \n You must have implemented the [OnDraw](#coleserveritem__ondraw) member function to provide the presentation format (a metafile picture) for the item. To support other conversion formats, register them using the [COleDataSource](../../mfc/reference/coledatasource-class.md) object returned by [GetDataSource](#coleserveritem__getdatasource) and override the [OnRenderData](#coleserveritem__onrenderdata) member function to provide data in the formats you want to support.  \n  \n##  <a name=\"coleserveritem__coleserveritem\"></a>  COleServerItem::COleServerItem  \n Constructs a `COleServerItem` object and adds it to the server document's collection of document items.  \n  \n```  \nCOleServerItem(\n    COleServerDoc* pServerDoc,  \n    BOOL bAutoDelete);\n```  \n  \n### Parameters  \n `pServerDoc`  \n Pointer to the document that will contain the new item.  \n  \n `bAutoDelete`  \n Flag indicating whether the object can be deleted when a link to it is released. Set this to **FALSE** if the `COleServerItem` object is an integral part of your document's data which you must delete. Set this to **TRUE** if the object is a secondary structure used to identify a range in your document's data that can be deleted by the framework.  \n  \n##  <a name=\"coleserveritem__copytoclipboard\"></a>  COleServerItem::CopyToClipboard  \n Call this function to copy the OLE item to the Clipboard.  \n  \n```  \nvoid CopyToClipboard(BOOL bIncludeLink = FALSE);\n```  \n  \n### Parameters  \n `bIncludeLink`  \n Set this to **TRUE** if link data should be copied to the Clipboard. Set this to **FALSE** if your server application does not support links.  \n  \n### Remarks  \n The function uses the [OnGetClipboardData](#coleserveritem__ongetclipboarddata) member function to create a [COleDataSource](../../mfc/reference/coledatasource-class.md) object containing the OLE item's data in the formats supported. The function then places the `COleDataSource` object on the Clipboard by using the [COleDataSource::SetClipboard](../../mfc/reference/coledatasource-class.md#coledatasource__setclipboard) function. The `COleDataSource` object includes the item's native data and its representation in `CF_METAFILEPICT` format, as well as data in any conversion formats you choose to support. You must have implemented [Serialize](../../mfc/reference/cobject-class.md#cobject__serialize) and [OnDraw](#coleserveritem__ondraw) for this member function to work.  \n  \n##  <a name=\"coleserveritem__dodragdrop\"></a>  COleServerItem::DoDragDrop  \n Call the `DoDragDrop` member function to perform a drag-and-drop operation.  \n  \n```  \nDROPEFFECT DoDragDrop(\n    LPCRECT lpRectItem,  \n    CPoint ptOffset,  \n    BOOL bIncludeLink = FALSE,  \n    DWORD dwEffects = DROPEFFECT_COPY | DROPEFFECT_MOVE,  \n    LPCRECT lpRectStartDrag = NULL);\n```  \n  \n### Parameters  \n *lpRectItem*  \n The item's rectangle on screen, in pixels, relative to the client area.  \n  \n `ptOffset`  \n The offset from `lpItemRect` where the mouse position was at the time of the drag.  \n  \n `bIncludeLink`  \n Set this to **TRUE** if link data should be copied to the Clipboard. Set it to **FALSE** if your application does not support links.  \n  \n `dwEffects`  \n Determines the effects that the drag source will allow in the drag operation (a combination of Copy, Move, and Link).  \n  \n `lpRectStartDrag`  \n Pointer to the rectangle that defines where the drag actually starts. For more information, see the following Remarks section.  \n  \n### Return Value  \n A value from the `DROPEFFECT` enumeration. If it is `DROPEFFECT_MOVE`, the original data should be removed.  \n  \n### Remarks  \n The drag-and-drop operation does not start immediately. It waits until the mouse cursor leaves the rectangle specified by `lpRectStartDrag` or until a specified number of milliseconds have passed. If `lpRectStartDrag` is **NULL**, a default rectangle is used so that the drag starts when the mouse cursor moves one pixel.  \n  \n The delay time is specified by a registry key setting. You can change the delay time by calling [CWinApp::WriteProfileString](../../mfc/reference/cwinapp-class.md#cwinapp__writeprofilestring) or [CWinApp::WriteProfileInt](../../mfc/reference/cwinapp-class.md#cwinapp__writeprofileint). If you do not specify the delay time, a default value of 200 milliseconds is used. Drag delay time is stored as follows:  \n  \n-   Windows NT   Drag delay time is stored in HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\NT\\CurrentVersion\\IniFileMapping\\win.ini\\Windows\\DragDelay.  \n  \n-   Windows 3.x   Drag delay time is stored in the WIN.INI file, under the [Windows} section.  \n  \n-   Windows 95/98   Drag delay time is stored in a cached version of WIN.INI.  \n  \n For more information about how drag delay information is stored in either the registry or the .INI file, see [WriteProfileString](http://msdn.microsoft.com/library/windows/desktop/ms725504) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n##  <a name=\"coleserveritem__getclipboarddata\"></a>  COleServerItem::GetClipboardData  \n Call this function to fill the specified [COleDataSource](../../mfc/reference/coledatasource-class.md) object with all the data that would be copied to the Clipboard if you called [CopyToClipboard](#coleserveritem__copytoclipboard) (the same data would also be transferred if you called [DoDragDrop](#coleserveritem__dodragdrop)).  \n  \n```  \nvoid GetClipboardData(\n    COleDataSource* pDataSource,  \n    BOOL bIncludeLink = FALSE,  \n    LPPOINT lpOffset = NULL,  \n    LPSIZE lpSize = NULL);\n```  \n  \n### Parameters  \n `pDataSource`  \n Pointer to the `COleDataSource` object that will receive the OLE item's data in all supported formats.  \n  \n `bIncludeLink`  \n **TRUE** if link data should be copied to the Clipboard. **FALSE** if your server application does not support links.  \n  \n `lpOffset`  \n The offset, in pixels, of the mouse cursor from the origin of the object.  \n  \n `lpSize`  \n The size of the object in pixels.  \n  \n### Remarks  \n This function calls the [GetEmbedSourceData](#coleserveritem__getembedsourcedata) member function to get the native data for the OLE item and calls the [AddOtherClipboardData](#coleserveritem__addotherclipboarddata) member function to get the presentation format and any supported conversion formats. If `bIncludeLink` is **TRUE**, the function also calls [GetLinkSourceData](#coleserveritem__getlinksourcedata) to get the link data for the item.  \n  \n Override this function if you want to put formats in a `COleDataSource` object before or after those formats supplied by `CopyToClipboard`.  \n  \n##  <a name=\"coleserveritem__getdatasource\"></a>  COleServerItem::GetDataSource  \n Call this function to get the [COleDataSource](../../mfc/reference/coledatasource-class.md) object used to store the conversion formats that the server application supports.  \n  \n```  \nCOleDataSource* GetDataSource();\n```  \n  \n### Return Value  \n A pointer to the `COleDataSource` object used to store the conversion formats.  \n  \n### Remarks  \n If you want your server application to offer data in a variety of formats during data transfer operations, register those formats with the `COleDataSource` object returned by this function. For example, if you want to supply a **CF_TEXT** representation of the OLE item for Clipboard or drag-and-drop operations, you would register the format with the `COleDataSource` object this function returns, and then override the **OnRenderXxxData** member function to provide the data.  \n  \n##  <a name=\"coleserveritem__getdocument\"></a>  COleServerItem::GetDocument  \n Call this function to get a pointer to the document that contains the item.  \n  \n```  \nCOleServerDoc* GetDocument() const;\n\n \n```  \n  \n### Return Value  \n A pointer to the document that contains the item; **NULL** if the item is not part of a document.  \n  \n### Remarks  \n This allows access to the server document that you passed as an argument to the `COleServerItem` constructor.  \n  \n##  <a name=\"coleserveritem__getembedsourcedata\"></a>  COleServerItem::GetEmbedSourceData  \n Call this function to get the **CF_EMBEDSOURCE** data for an OLE item.  \n  \n```  \nvoid GetEmbedSourceData(LPSTGMEDIUM lpStgMedium);\n```  \n  \n### Parameters  \n `lpStgMedium`  \n Pointer to the [STGMEDIUM](http://msdn.microsoft.com/library/windows/desktop/ms683812) structure that will receive the **CF_EMBEDSOURCE** data for the OLE item.  \n  \n### Remarks  \n This format includes the item's native data. You must have implemented the `Serialize` member function for this function to work properly.  \n  \n The result can then be added to a data source by using [COleDataSource::CacheData](../../mfc/reference/coledatasource-class.md#coledatasource__cachedata). This function is called automatically by [COleServerItem::OnGetClipboardData](#coleserveritem__ongetclipboarddata).  \n  \n For more information, see [STGMEDIUM](http://msdn.microsoft.com/library/windows/desktop/ms683812) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n##  <a name=\"coleserveritem__getitemname\"></a>  COleServerItem::GetItemName  \n Call this function to get the name of the item.  \n  \n```  \nconst CString& GetItemName() const;\n\n \n```  \n  \n### Return Value  \n The name of the item.  \n  \n### Remarks  \n You typically call this function only for linked items.  \n  \n##  <a name=\"coleserveritem__getlinksourcedata\"></a>  COleServerItem::GetLinkSourceData  \n Call this function to get the `CF_LINKSOURCE` data for an OLE item.  \n  \n```  \nBOOL GetLinkSourceData(LPSTGMEDIUM lpStgMedium);\n```  \n  \n### Parameters  \n `lpStgMedium`  \n Pointer to the [STGMEDIUM](http://msdn.microsoft.com/library/windows/desktop/ms683812) structure that will receive the `CF_LINKSOURCE` data for the OLE item.  \n  \n### Return Value  \n Nonzero if successful; otherwise 0.  \n  \n### Remarks  \n This format includes the CLSID describing the type of the OLE item and the information needed to locate the document containing the OLE item.  \n  \n The result can then be added to a data source with [COleDataSource::CacheData](../../mfc/reference/coledatasource-class.md#coledatasource__cachedata). This function is called automatically by [OnGetClipboardData](#coleserveritem__ongetclipboarddata).  \n  \n For more information, see [STGMEDIUM](http://msdn.microsoft.com/library/windows/desktop/ms683812) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n##  <a name=\"coleserveritem__getobjectdescriptordata\"></a>  COleServerItem::GetObjectDescriptorData  \n Call this function to get the **CF_OBJECTDESCRIPTOR** data for an OLE item.  \n  \n```  \nvoid GetObjectDescriptorData(\n    LPPOINT lpOffset,  \n    LPSIZE lpSize,  \n    LPSTGMEDIUM lpStgMedium);\n```  \n  \n### Parameters  \n `lpOffset`  \n Offset of the mouse click from the upper-left corner of the OLE item. Can be **NULL**.  \n  \n `lpSize`  \n Size of the OLE item. Can be **NULL**.  \n  \n `lpStgMedium`  \n Pointer to the [STGMEDIUM](http://msdn.microsoft.com/library/windows/desktop/ms683812) structure that will receive the **CF_OBJECTDESCRIPTOR** data for the OLE item.  \n  \n### Remarks  \n The information is copied into the **STGMEDIUM** structure pointed to by `lpStgMedium`. This format includes the information needed for the Paste Special dialog.  \n  \n For more information, see [STGMEDIUM](http://msdn.microsoft.com/library/windows/desktop/ms683812) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n##  <a name=\"coleserveritem__isconnected\"></a>  COleServerItem::IsConnected  \n Call this function to see if the OLE item is connected.  \n  \n```  \nBOOL IsConnected() const;\n\n \n```  \n  \n### Return Value  \n Nonzero if the item is connected; otherwise 0.  \n  \n### Remarks  \n An OLE item is considered connected if one or more containers have references to the item. An item is connected if its reference count is greater than 0 or if it is an embedded item.  \n  \n##  <a name=\"coleserveritem__islinkeditem\"></a>  COleServerItem::IsLinkedItem  \n Call this function to see if the OLE item is a linked item.  \n  \n```  \nBOOL IsLinkedItem() const;\n\n \n```  \n  \n### Return Value  \n Nonzero if the item is a linked item; otherwise 0.  \n  \n### Remarks  \n An item is linked if the item is valid and is not returned in the document's list of embedded items. A linked item might or might not be connected to a container.  \n  \n It is common to use the same class for both linked and embedded items. `IsLinkedItem` allows you to make linked items behave differently than embedded items, although many times the code is common.  \n  \n##  <a name=\"coleserveritem__m_sizeextent\"></a>  COleServerItem::m_sizeExtent  \n This member tells the server how much of the object is visible in the container document.  \n  \n```  \nCSize m_sizeExtent;  \n```  \n  \n### Remarks  \n The default implementation of [OnSetExtent](#coleserveritem__onsetextent) sets this member.  \n  \n##  <a name=\"coleserveritem__notifychanged\"></a>  COleServerItem::NotifyChanged  \n Call this function after the linked item has been changed.  \n  \n```  \nvoid NotifyChanged(DVASPECT nDrawAspect = DVASPECT_CONTENT);\n```  \n  \n### Parameters  \n `nDrawAspect`  \n A value from the `DVASPECT` enumeration that indicates which aspect of the OLE item has changed. This parameter can have any of the following values:  \n  \n- `DVASPECT_CONTENT` Item is represented in such a way that it can be displayed as an embedded object inside its container.  \n  \n- `DVASPECT_THUMBNAIL` Item is rendered in a \"thumbnail\" representation so that it can be displayed in a browsing tool.  \n  \n- `DVASPECT_ICON` Item is represented by an icon.  \n  \n- `DVASPECT_DOCPRINT` Item is represented as if it were printed using the Print command from the File menu.  \n  \n### Remarks  \n If a container item is linked to the document with an automatic link, the item is updated to reflect the changes. In container applications written using the Microsoft Foundation Class Library, [COleClientItem::OnChange](../../mfc/reference/coleclientitem-class.md#coleclientitem__onchange) is called in response.  \n  \n##  <a name=\"coleserveritem__ondoverb\"></a>  COleServerItem::OnDoVerb  \n Called by the framework to execute the specified verb.  \n  \n```  \nvirtual void OnDoVerb(LONG iVerb);\n```  \n  \n### Parameters  \n `iVerb`  \n Specifies the verb to execute. It can be any one of the following:  \n  \n|Value|Meaning|Symbol|  \n|-----------|-------------|------------|  \n|0|Primary verb|`OLEIVERB_PRIMARY`|  \n|1|Secondary verb|(None)|  \n|– 1|Display item for editing|`OLEIVERB_SHOW`|  \n|– 2|Edit item in separate window|`OLEIVERB_OPEN`|  \n|– 3|Hide item|`OLEIVERB_HIDE`|  \n  \n The –1 value is typically an alias for another verb. If open editing is not supported, –2 has the same effect as –1. For additional values, see [IOleObject::DoVerb](http://msdn.microsoft.com/library/windows/desktop/ms694508) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n### Remarks  \n If the container application was written with the Microsoft Foundation Class Library, this function is called when the [COleClientItem::Activate](../../mfc/reference/coleclientitem-class.md#coleclientitem__activate) member function of the corresponding `COleClientItem` object is called. The default implementation calls the [OnShow](#coleserveritem__onshow) member function if the primary verb or `OLEIVERB_SHOW` is specified, [OnOpen](#coleserveritem__onopen) if the secondary verb or `OLEIVERB_OPEN` is specified, and [OnHide](#coleserveritem__onhide) if `OLEIVERB_HIDE` is specified. The default implementation calls `OnShow` if `iVerb` is not one of the verbs listed above.  \n  \n Override this function if your primary verb does not show the item. For example, if the item is a sound recording and its primary verb is Play, you would not have to display the server application to play the item.  \n  \n For more information, see [IOleObject::DoVerb](http://msdn.microsoft.com/library/windows/desktop/ms694508) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n##  <a name=\"coleserveritem__ondraw\"></a>  COleServerItem::OnDraw  \n Called by the framework to render the OLE item into a metafile.  \n  \n```  \nvirtual BOOL OnDraw(\n    CDC* pDC,  \n    CSize& rSize) = 0;  \n```  \n  \n### Parameters  \n `pDC`  \n A pointer to the [CDC](../../mfc/reference/cdc-class.md) object on which to draw the item. The display context is automatically connected to the attribute display context so you can call attribute functions, although doing so would make the metafile device-specific.  \n  \n `rSize`  \n Size, in **HIMETRIC** units, in which to draw the metafile.  \n  \n### Return Value  \n Nonzero if the item was successfully drawn; otherwise 0.  \n  \n### Remarks  \n The metafile representation of the OLE item is used to display the item in the container application. If the container application was written with the Microsoft Foundation Class Library, the metafile is used by the [Draw](../../mfc/reference/coleclientitem-class.md#coleclientitem__draw) member function of the corresponding [COleClientItem](../../mfc/reference/coleclientitem-class.md) object. There is no default implementation. You must override this function to draw the item into the device context specified.  \n  \n##  <a name=\"coleserveritem__ondrawex\"></a>  COleServerItem::OnDrawEx  \n Called by the framework for all drawing.  \n  \n```  \nvirtual BOOL OnDrawEx(\n    CDC* pDC,  \n    DVASPECT nDrawAspect,  \n    CSize& rSize);\n```  \n  \n### Parameters  \n `pDC`  \n A pointer to the [CDC](../../mfc/reference/cdc-class.md) object on which to draw the item. The DC is automatically connected to the attribute DC so you can call attribute functions, although doing so would make the metafile device-specific.  \n  \n `nDrawAspect`  \n A value from the `DVASPECT` enumeration. This parameter can have any of the following values:  \n  \n- `DVASPECT_CONTENT` Item is represented in such a way that it can be displayed as an embedded object inside its container.  \n  \n- `DVASPECT_THUMBNAIL` Item is rendered in a \"thumbnail\" representation so that it can be displayed in a browsing tool.  \n  \n- `DVASPECT_ICON` Item is represented by an icon.  \n  \n- `DVASPECT_DOCPRINT` Item is represented as if it were printed using the Print command from the File menu.  \n  \n `rSize`  \n Size of the item in **HIMETRIC** units.  \n  \n### Return Value  \n Nonzero if the item was successfully drawn; otherwise 0.  \n  \n### Remarks  \n The default implementation calls `OnDraw` when `DVASPECT` is equal to `DVASPECT_CONTENT`; otherwise it fails.  \n  \n Override this function to provide presentation data for aspects other than `DVASPECT_CONTENT`, such as `DVASPECT_ICON` or `DVASPECT_THUMBNAIL`.  \n  \n##  <a name=\"coleserveritem__ongetclipboarddata\"></a>  COleServerItem::OnGetClipboardData  \n Called by the framework to get a `COleDataSource` object containing all the data that would be placed on the Clipboard by a call to the [CopyToClipboard](#coleserveritem__copytoclipboard) member function.  \n  \n```  \nvirtual COleDataSource* OnGetClipboardData(\n    BOOL bIncludeLink,  \n    LPPOINT lpOffset,  \n    LPSIZE lpSize);\n```  \n  \n### Parameters  \n `bIncludeLink`  \n Set this to **TRUE** if link data should be copied to the Clipboard. Set this to **FALSE** if your server application does not support links.  \n  \n `lpOffset`  \n The offset of the mouse cursor from the origin of the object in pixels.  \n  \n `lpSize`  \n The size of the object in pixels.  \n  \n### Return Value  \n A pointer to a [COleDataSource](../../mfc/reference/coledatasource-class.md) object containing the Clipboard data.  \n  \n### Remarks  \n The default implementation of this function calls [GetClipboardData](#coleserveritem__getclipboarddata).  \n  \n##  <a name=\"coleserveritem__ongetextent\"></a>  COleServerItem::OnGetExtent  \n Called by the framework to retrieve the size, in **HIMETRIC** units, of the OLE item.  \n  \n```  \nvirtual BOOL OnGetExtent(\n    DVASPECT nDrawAspect,  \n    CSize& rSize);\n```  \n  \n### Parameters  \n `nDrawAspect`  \n Specifies the aspect of the OLE item whose bounds are to be retrieved. This parameter can have any of the following values:  \n  \n- `DVASPECT_CONTENT` Item is represented in such a way that it can be displayed as an embedded object inside its container.  \n  \n- `DVASPECT_THUMBNAIL` Item is rendered in a \"thumbnail\" representation so that it can be displayed in a browsing tool.  \n  \n- `DVASPECT_ICON` Item is represented by an icon.  \n  \n- `DVASPECT_DOCPRINT` Item is represented as if it were printed using the Print command from the File menu.  \n  \n `rSize`  \n Reference to a `CSize` object that will receive the size of the OLE item.  \n  \n### Return Value  \n Nonzero if successful; otherwise 0.  \n  \n### Remarks  \n If the container application was written with the Microsoft Foundation Class Library, this function is called when the [GetExtent](../../mfc/reference/coleclientitem-class.md#coleclientitem__getextent) member function of the corresponding `COleClientItem` object is called. The default implementation does nothing. You must implement it yourself. Override this function if you want to perform special processing when handling a request for the size of the OLE item.  \n  \n##  <a name=\"coleserveritem__onhide\"></a>  COleServerItem::OnHide  \n Called by the framework to hide the OLE item.  \n  \n```  \nvirtual void OnHide();\n```  \n  \n### Remarks  \n The default calls **COleServerDoc::OnShowDocument( FALSE )**. The function also notifies the container that the OLE item has been hidden. Override this function if you want to perform special processing when hiding an OLE item.  \n  \n##  <a name=\"coleserveritem__oninitfromdata\"></a>  COleServerItem::OnInitFromData  \n Called by the framework to initialize an OLE item using the contents of `pDataObject`.  \n  \n```  \nvirtual BOOL OnInitFromData(\n    COleDataObject* pDataObject,  \n    BOOL bCreation);\n```  \n  \n### Parameters  \n `pDataObject`  \n Pointer to an OLE data object containing data in various formats for initializing the OLE item.  \n  \n `bCreation`  \n **TRUE** if the function is called to initialize an OLE item being newly created by a container application. **FALSE** if the function is called to replace the contents of an already existing OLE item.  \n  \n### Return Value  \n Nonzero if successful; otherwise 0.  \n  \n### Remarks  \n If `bCreation` is **TRUE**, this function is called if a container implements Insert New Object based on the current selection. The data selected is used when creating the new OLE item. For example, when selecting a range of cells in a spreadsheet program and then using the Insert New Object to create a chart based on the values in the selected range. The default implementation does nothing. Override this function to choose an acceptable format from those offered by `pDataObject` and initialize the OLE item based on the data provided. This is an advanced overridable.  \n  \n For more information, see [IOleObject::InitFromData](http://msdn.microsoft.com/library/windows/desktop/ms688510) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n##  <a name=\"coleserveritem__onopen\"></a>  COleServerItem::OnOpen  \n Called by the framework to display the OLE item in a separate instance of the server application, rather than in place.  \n  \n```  \nvirtual void OnOpen();\n```  \n  \n### Remarks  \n The default implementation activates the first frame window displaying the document that contains the OLE item; if the application is a mini-server, the default implementation shows the main window. The function also notifies the container that the OLE item has been opened.  \n  \n Override this function if you want to perform special processing when opening an OLE item. This is especially common with linked items where you want to set the selection to the link when it is opened.  \n  \n For more information, see [IOleClientSite::OnShowWindow](http://msdn.microsoft.com/library/windows/desktop/ms688658) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n##  <a name=\"coleserveritem__onqueryupdateitems\"></a>  COleServerItem::OnQueryUpdateItems  \n Called by the framework to determine whether any linked items in the current server document are out of date.  \n  \n```  \nvirtual BOOL OnQueryUpdateItems();\n```  \n  \n### Return Value  \n Nonzero if the document has items needing updates; 0 if all items are up to date.  \n  \n### Remarks  \n An item is out of date if its source document has been changed but the linked item has not been updated to reflect the changes in the document.  \n  \n##  <a name=\"coleserveritem__onrenderdata\"></a>  COleServerItem::OnRenderData  \n Called by the framework to retrieve data in the specified format.  \n  \n```  \nvirtual BOOL OnRenderData(\n    LPFORMATETC lpFormatEtc,  \n    LPSTGMEDIUM lpStgMedium);\n```  \n  \n### Parameters  \n `lpFormatEtc`  \n Points to the [FORMATETC](http://msdn.microsoft.com/library/windows/desktop/ms682177) structure specifying the format in which information is requested.  \n  \n `lpStgMedium`  \n Points to a [STGMEDIUM](http://msdn.microsoft.com/library/windows/desktop/ms683812) structure in which the data is to be returned.  \n  \n### Return Value  \n Nonzero if successful; otherwise 0.  \n  \n### Remarks  \n The specified format is one previously placed in the `COleDataSource` object using the [DelayRenderData](../../mfc/reference/coledatasource-class.md#coledatasource__delayrenderdata) or [DelayRenderFileData](../../mfc/reference/coledatasource-class.md#coledatasource__delayrenderfiledata) member function for delayed rendering. The default implementation of this function calls [OnRenderFileData](#coleserveritem__onrenderfiledata) or [OnRenderGlobalData](#coleserveritem__onrenderglobaldata), respectively, if the supplied storage medium is either a file or memory. If neither of these formats is supplied, the default implementation returns 0 and does nothing.  \n  \n If `lpStgMedium`-> *tymed* is **TYMED_NULL**, the **STGMEDIUM** should allocated and filled as specified by *lpFormatEtc->tymed*. If not **TYMED_NULL**, the **STGMEDIUM** should be filled in place with the data.  \n  \n This is an advanced overridable. Override this function to provide your data in the requested format and medium. Depending on your data, you may want to override one of the other versions of this function instead. If your data is small and fixed in size, override `OnRenderGlobalData`. If your data is in a file, or is of variable size, override `OnRenderFileData`.  \n  \n For more information, see [IDataObject::GetData](http://msdn.microsoft.com/library/windows/desktop/ms678431), [STGMEDIUM](http://msdn.microsoft.com/library/windows/desktop/ms683812), [FORMATETC](http://msdn.microsoft.com/library/windows/desktop/ms682177), and [TYMED](http://msdn.microsoft.com/library/windows/desktop/ms691227) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n##  <a name=\"coleserveritem__onrenderfiledata\"></a>  COleServerItem::OnRenderFileData  \n Called by the framework to retrieve data in the specified format when the storage medium is a file.  \n  \n```  \nvirtual BOOL OnRenderFileData(\n    LPFORMATETC lpFormatEtc,  \n    CFile* pFile);\n```  \n  \n### Parameters  \n `lpFormatEtc`  \n Points to the [FORMATETC](http://msdn.microsoft.com/library/windows/desktop/ms682177) structure specifying the format in which information is requested.  \n  \n `pFile`  \n Points to a `CFile` object in which the data is to be rendered.  \n  \n### Return Value  \n Nonzero if successful; otherwise 0.  \n  \n### Remarks  \n The specified format is one previously placed in the `COleDataSource` object using the [DelayRenderData](../../mfc/reference/coledatasource-class.md#coledatasource__delayrenderdata) member function for delayed rendering. The default implementation of this function simply returns **FALSE**.  \n  \n This is an advanced overridable. Override this function to provide your data in the requested format and medium. Depending on your data, you might want to override one of the other versions of this function instead. If you want to handle multiple storage mediums, override [OnRenderData](#coleserveritem__onrenderdata). If your data is in a file, or is of variable size, override [OnRenderFileData](#coleserveritem__onrenderfiledata).  \n  \n For more information, see [IDataObject::GetData](http://msdn.microsoft.com/library/windows/desktop/ms678431) and [FORMATETC](http://msdn.microsoft.com/library/windows/desktop/ms682177) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n##  <a name=\"coleserveritem__onrenderglobaldata\"></a>  COleServerItem::OnRenderGlobalData  \n Called by the framework to retrieve data in the specified format when the specified storage medium is global memory.  \n  \n```  \nvirtual BOOL OnRenderGlobalData(\n    LPFORMATETC lpFormatEtc,  \n    HGLOBAL* phGlobal);\n```  \n  \n### Parameters  \n `lpFormatEtc`  \n Points to the [FORMATETC](http://msdn.microsoft.com/library/windows/desktop/ms682177) structure specifying the format in which information is requested.  \n  \n `phGlobal`  \n Points to a handle to global memory in which the data is to be returned. If no memory has been allocated, this parameter can be **NULL**.  \n  \n### Return Value  \n Nonzero if successful; otherwise 0.  \n  \n### Remarks  \n The specified format is one previously placed in the `COleDataSource` object using the [DelayRenderData](../../mfc/reference/coledatasource-class.md#coledatasource__delayrenderdata) member function for delayed rendering. The default implementation of this function simply returns **FALSE**.  \n  \n If `phGlobal` is **NULL**, then a new `HGLOBAL` should be allocated and returned in `phGlobal`. Otherwise, the `HGLOBAL` specified by `phGlobal` should be filled with the data. The amount of data placed in the `HGLOBAL` must not exceed the current size of the memory block. Also, the block cannot be reallocated to a larger size.  \n  \n This is an advanced overridable. Override this function to provide your data in the requested format and medium. Depending on your data, you may want to override one of the other versions of this function instead. If you want to handle multiple storage mediums, override [OnRenderData](#coleserveritem__onrenderdata). If your data is in a file, or is of variable size, override [OnRenderFileData](#coleserveritem__onrenderfiledata).  \n  \n For more information, see [IDataObject::GetData](http://msdn.microsoft.com/library/windows/desktop/ms678431) and [FORMATETC](http://msdn.microsoft.com/library/windows/desktop/ms682177) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n##  <a name=\"coleserveritem__onsetcolorscheme\"></a>  COleServerItem::OnSetColorScheme  \n Called by the framework to specify a color palette to be used when editing the OLE item.  \n  \n```  \nvirtual BOOL OnSetColorScheme(const LOGPALETTE* lpLogPalette);\n```  \n  \n### Parameters  \n `lpLogPalette`  \n Pointer to a Windows [LOGPALETTE](http://msdn.microsoft.com/library/windows/desktop/dd145040) structure.  \n  \n### Return Value  \n Nonzero if the color palette is used; otherwise 0.  \n  \n### Remarks  \n If the container application was written using the Microsoft Foundation Class Library, this function is called when the [IOleObject::SetColorScheme](http://msdn.microsoft.com/library/windows/desktop/ms683971) function of the corresponding `COleClientItem` object is called. The default implementation returns **FALSE**. Override this function if you want to use the recommended palette. The server application is not required to use the suggested palette.  \n  \n For more information, see [IOleObject::SetColorScheme](http://msdn.microsoft.com/library/windows/desktop/ms683971) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n##  <a name=\"coleserveritem__onsetdata\"></a>  COleServerItem::OnSetData  \n Called by the framework to replace the OLE item's data with the specified data.  \n  \n```  \nvirtual BOOL OnSetData(\n    LPFORMATETC lpFormatEtc,  \n    LPSTGMEDIUM lpStgMedium,  \n    BOOL bRelease);\n```  \n  \n### Parameters  \n `lpFormatEtc`  \n Pointer to a [FORMATETC](http://msdn.microsoft.com/library/windows/desktop/ms682177) structure specifying the format of the data.  \n  \n `lpStgMedium`  \n Pointer to a [STGMEDIUM](http://msdn.microsoft.com/library/windows/desktop/ms683812) structure in which the data resides.  \n  \n `bRelease`  \n Indicates who has ownership of the storage medium after completing the function call. The caller decides who is responsible for releasing the resources allocated on behalf of the storage medium. The caller does this by setting `bRelease`. If `bRelease` is nonzero, the server item takes ownership, freeing the medium when it has finished using it. When `bRelease` is 0, the caller retains ownership and the server item can use the storage medium only for the duration of the call.  \n  \n### Return Value  \n Nonzero if successful; otherwise 0.  \n  \n### Remarks  \n The server item does not take ownership of the data until it has successfully obtained it. That is, it does not take ownership if it returns 0. If the data source takes ownership, it frees the storage medium by calling the [ReleaseStgMedium](http://msdn.microsoft.com/library/windows/desktop/ms693491) function.  \n  \n The default implementation does nothing. Override this function to replace the OLE item's data with the specified data. This is an advanced overridable.  \n  \n For more information, see [STGMEDIUM](http://msdn.microsoft.com/library/windows/desktop/ms683812), [FORMATETC](http://msdn.microsoft.com/library/windows/desktop/ms682177), and [ReleaseStgMedium](http://msdn.microsoft.com/library/windows/desktop/ms693491) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n##  <a name=\"coleserveritem__onsetextent\"></a>  COleServerItem::OnSetExtent  \n Called by the framework to tell the OLE item how much space is available to it in the container document.  \n  \n```  \nvirtual BOOL OnSetExtent(\n    DVASPECT nDrawAspect,  \n    const CSize& size);\n```  \n  \n### Parameters  \n `nDrawAspect`  \n Specifies the aspect of the OLE item whose bounds are being specified. This parameter can have any of the following values:  \n  \n- `DVASPECT_CONTENT` Item is represented in such a way that it can be displayed as an embedded object inside its container.  \n  \n- `DVASPECT_THUMBNAIL` Item is rendered in a \"thumbnail\" representation so that it can be displayed in a browsing tool.  \n  \n- `DVASPECT_ICON` Item is represented by an icon.  \n  \n- `DVASPECT_DOCPRINT` Item is represented as if it were printed using the Print command from the File menu.  \n  \n `size`  \n A [CSize](../../atl-mfc-shared/reference/csize-class.md) structure specifying the new size of the OLE item.  \n  \n### Return Value  \n Nonzero if successful; otherwise 0.  \n  \n### Remarks  \n If the container application was written with the Microsoft Foundation Class Library, this function is called when the [SetExtent](../../mfc/reference/coleclientitem-class.md#coleclientitem__setextent) member function of the corresponding `COleClientItem` object is called. The default implementation sets the [m_sizeExtent](#coleserveritem__m_sizeextent) member to the specified size if `nDrawAspect` is `DVASPECT_CONTENT`; otherwise it returns 0. Override this function to perform special processing when you change the size of the item.  \n  \n##  <a name=\"coleserveritem__onshow\"></a>  COleServerItem::OnShow  \n Called by the framework to instruct the server application to display the OLE item in place.  \n  \n```  \nvirtual void OnShow();\n```  \n  \n### Remarks  \n This function is typically called when the user of the container application creates an item or executes a verb, such as Edit, that requires the item to be shown. The default implementation attempts in-place activation. If this fails, the function calls the `OnOpen` member function to display the OLE item in a separate window.  \n  \n Override this function if you want to perform special processing when an OLE item is shown.  \n  \n##  <a name=\"coleserveritem__onupdate\"></a>  COleServerItem::OnUpdate  \n Called by the framework when an item has been modified.  \n  \n```  \nvirtual void OnUpdate(\n    COleServerItem* pSender,  \n    LPARAM lHint,  \n    CObject* pHint,  \n    DVASPECT nDrawAspect);\n```  \n  \n### Parameters  \n `pSender`  \n Pointer to the item that modified the document. Can be **NULL**.  \n  \n `lHint`  \n Contains information about the modification.  \n  \n `pHint`  \n Pointer to an object storing information about the modification.  \n  \n `nDrawAspect`  \n A value from the `DVASPECT` enumeration. This parameter can have any one of the following values:  \n  \n- `DVASPECT_CONTENT` Item is represented in such a way that it can be displayed as an embedded object inside its container.  \n  \n- `DVASPECT_THUMBNAIL` Item is rendered in a \"thumbnail\" representation so that it can be displayed in a browsing tool.  \n  \n- `DVASPECT_ICON` Item is represented by an icon.  \n  \n- `DVASPECT_DOCPRINT` Item is represented as if it were printed using the Print command from the File menu.  \n  \n### Remarks  \n The default implementation calls [NotifyChanged](#coleserveritem__notifychanged), regardless of the hint or sender.  \n  \n##  <a name=\"coleserveritem__onupdateitems\"></a>  COleServerItem::OnUpdateItems  \n Called by the framework to update all items in the server document.  \n  \n```  \nvirtual void OnUpdateItems();\n```  \n  \n### Remarks  \n The default implementation calls [UpdateLink](../../mfc/reference/coleclientitem-class.md#coleclientitem__updatelink) for all `COleClientItem` objects in the document.  \n  \n##  <a name=\"coleserveritem__setitemname\"></a>  COleServerItem::SetItemName  \n Call this function when you create a linked item to set its name.  \n  \n```  \nvoid SetItemName(LPCTSTR lpszItemName);\n```  \n  \n### Parameters  \n `lpszItemName`  \n Pointer to the new name of the item.  \n  \n### Remarks  \n The name must be unique within the document. When a server application is called to edit a linked item, the application uses this name to find the item. You do not need to call this function for embedded items.  \n  \n## See Also  \n [MFC Sample HIERSVR](../../visual-cpp-samples.md)   \n [CDocItem Class](../../mfc/reference/cdocitem-class.md)   \n [Hierarchy Chart](../../mfc/hierarchy-chart.md)   \n [COleClientItem Class](../../mfc/reference/coleclientitem-class.md)   \n [COleServerDoc Class](../../mfc/reference/coleserverdoc-class.md)   \n [COleTemplateServer Class](../../mfc/reference/coletemplateserver-class.md)\n"}