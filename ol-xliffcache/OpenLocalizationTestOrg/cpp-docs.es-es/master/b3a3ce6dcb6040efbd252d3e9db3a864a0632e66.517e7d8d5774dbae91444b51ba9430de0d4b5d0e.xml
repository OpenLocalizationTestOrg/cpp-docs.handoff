{"nodes":[{"pos":[12,37],"content":".PUSHREG | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":".PUSHREG | Microsoft Docs","pos":[0,25]}]},{"content":".PUSHREG","pos":[593,601]},{"pos":[602,726],"content":"Generates a <ph id=\"ph1\">`UWOP_PUSH_NONVOL`</ph> unwind code entry for the specified register number using the current offset in the prologue.","source":"Generates a `UWOP_PUSH_NONVOL` unwind code entry for the specified register number using the current offset in the prologue."},{"content":"Syntax","pos":[735,741]},{"content":"Remarks","pos":[785,792]},{"content":".PUSHREG allows ml64.exe users to specify how a frame function unwinds, and is only allowed within the prologue, which extends from the <bpt id=\"p1\">[</bpt>PROC<ept id=\"p1\">](../../assembler/masm/proc.md)</ept> FRAME declaration to the <bpt id=\"p2\">[</bpt>.ENDPROLOG<ept id=\"p2\">](../../assembler/masm/dot-endprolog.md)</ept> directive.","pos":[796,1056],"source":".PUSHREG allows ml64.exe users to specify how a frame function unwinds, and is only allowed within the prologue, which extends from the [PROC](../../assembler/masm/proc.md) FRAME declaration to the [.ENDPROLOG](../../assembler/masm/dot-endprolog.md) directive."},{"content":"These directives do not generate code; they only generate <ph id=\"ph1\">`.xdata`</ph> and <ph id=\"ph2\">`.pdata`</ph>.","pos":[1057,1137],"source":" These directives do not generate code; they only generate `.xdata` and `.pdata`."},{"content":".PUSHREG should be preceded by instructions that actually implement the actions to be unwound.","pos":[1138,1232]},{"content":"It is a good practice to wrap both the unwind directives and the code they are meant to unwind in a macro to ensure agreement.","pos":[1233,1359]},{"pos":[1366,1465],"content":"For more information, see <bpt id=\"p1\">[</bpt>MASM for x64 (ml64.exe)<ept id=\"p1\">](../../assembler/masm/masm-for-x64-ml64-exe.md)</ept>.","source":"For more information, see [MASM for x64 (ml64.exe)](../../assembler/masm/masm-for-x64-ml64-exe.md)."},{"content":"Sample","pos":[1474,1480]},{"content":"Description","pos":[1490,1501]},{"content":"The following sample shows how to push non-volatile tegisters.","pos":[1505,1567]},{"content":"Code","pos":[1577,1581]},{"content":"See Also","pos":[1902,1910]},{"content":"Directives Reference","pos":[1915,1935]}],"content":"---\ntitle: \".PUSHREG | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \".PUSHREG\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \".PUSHREG directive\"\nms.assetid: e0c83758-dfed-40ea-afe6-cb833c8d2d30\ncaps.latest.revision: 8\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# .PUSHREG\nGenerates a `UWOP_PUSH_NONVOL` unwind code entry for the specified register number using the current offset in the prologue.  \n  \n## Syntax  \n  \n```  \n.PUSHREG register  \n```  \n  \n## Remarks  \n .PUSHREG allows ml64.exe users to specify how a frame function unwinds, and is only allowed within the prologue, which extends from the [PROC](../../assembler/masm/proc.md) FRAME declaration to the [.ENDPROLOG](../../assembler/masm/dot-endprolog.md) directive. These directives do not generate code; they only generate `.xdata` and `.pdata`. .PUSHREG should be preceded by instructions that actually implement the actions to be unwound. It is a good practice to wrap both the unwind directives and the code they are meant to unwind in a macro to ensure agreement.  \n  \n For more information, see [MASM for x64 (ml64.exe)](../../assembler/masm/masm-for-x64-ml64-exe.md).  \n  \n## Sample  \n  \n### Description  \n The following sample shows how to push non-volatile tegisters.  \n  \n### Code  \n  \n```  \n; ml64 ex1.asm /link /entry:Example1 /SUBSYSTEM:CONSOLE  \n_text SEGMENT  \nExample1 PROC FRAME  \n   push r10  \n.pushreg r10  \n   push r15  \n.pushreg r15  \n   push rbx  \n.pushreg rbx  \n   push rsi  \n.pushreg rsi  \n.endprolog  \n   ; rest of function ...  \n   ret  \nExample1 ENDP  \n_text ENDS  \nEND  \n```  \n  \n## See Also  \n [Directives Reference](../../assembler/masm/directives-reference.md)"}