{"nodes":[{"content":"Inline Assembler","pos":[3,19]},{"content":"Inline Assembler Overview","pos":[46,71]},{"content":"Advantages of Inline Assembly","pos":[107,136]},{"content":"__asm","pos":[176,181]},{"content":"Using Assembly Language in __asm Blocks","pos":[195,234]},{"content":"Instruction Set for Inline Assembly","pos":[283,318]},{"content":"MASM Expressions in Inline Assembly","pos":[365,400]},{"content":"Data Directives and Operators in Inline Assembly","pos":[447,495]},{"content":"EVEN and ALIGN Directives","pos":[555,580]},{"content":"MASM Macro Directives in Inline Assembly","pos":[617,657]},{"content":"Segment References in Inline Assembly","pos":[709,746]},{"content":"Type and Variable Sizes in Inline Assembly","pos":[795,837]},{"content":"Assembly-Language Comments","pos":[891,917]},{"content":"_emit Pseudoinstruction","pos":[955,978]},{"content":"Debugging and Listings for Inline Assembly","pos":[1012,1054]},{"content":"Intel's MMX Instruction Set","pos":[1108,1135]},{"content":"Using C or C++ in __asm Blocks","pos":[1173,1203]},{"content":"Using Operators in __asm Blocks","pos":[1243,1274]},{"content":"Using C or C++ Symbols in __asm Blocks","pos":[1315,1353]},{"content":"Accessing C or C++ Data in __asm Blocks","pos":[1401,1440]},{"content":"Writing Functions with Inline Assembly","pos":[1489,1527]},{"content":"Using and Preserving Registers in Inline Assembly","pos":[1576,1625]},{"content":"Jumping to Labels in Inline Assembly","pos":[1685,1721]},{"content":"Calling C Functions in Inline Assembly","pos":[1768,1806]},{"content":"Calling C++ Functions in Inline Assembly","pos":[1855,1895]},{"content":"Defining __asm Blocks as C Macros","pos":[1946,1979]},{"content":"Optimizing Inline Assembly","pos":[2021,2047]}],"content":"# [Inline Assembler](inline-assembler.md)\n## [Inline Assembler Overview](inline-assembler-overview.md)\n## [Advantages of Inline Assembly](advantages-of-inline-assembly.md)\n## [__asm](asm.md)\n## [Using Assembly Language in __asm Blocks](using-assembly-language-in-asm-blocks.md)\n### [Instruction Set for Inline Assembly](instruction-set-for-inline-assembly.md)\n### [MASM Expressions in Inline Assembly](masm-expressions-in-inline-assembly.md)\n### [Data Directives and Operators in Inline Assembly](data-directives-and-operators-in-inline-assembly.md)\n### [EVEN and ALIGN Directives](even-and-align-directives.md)\n### [MASM Macro Directives in Inline Assembly](masm-macro-directives-in-inline-assembly.md)\n### [Segment References in Inline Assembly](segment-references-in-inline-assembly.md)\n### [Type and Variable Sizes in Inline Assembly](type-and-variable-sizes-in-inline-assembly.md)\n### [Assembly-Language Comments](assembly-language-comments.md)\n### [_emit Pseudoinstruction](emit-pseudoinstruction.md)\n### [Debugging and Listings for Inline Assembly](debugging-and-listings-for-inline-assembly.md)\n### [Intel's MMX Instruction Set](intel-s-mmx-instruction-set.md)\n## [Using C or C++ in __asm Blocks](using-c-or-cpp-in-asm-blocks.md)\n### [Using Operators in __asm Blocks](using-operators-in-asm-blocks.md)\n### [Using C or C++ Symbols in __asm Blocks](using-c-or-cpp-symbols-in-asm-blocks.md)\n### [Accessing C or C++ Data in __asm Blocks](accessing-c-or-cpp-data-in-asm-blocks.md)\n### [Writing Functions with Inline Assembly](writing-functions-with-inline-assembly.md)\n## [Using and Preserving Registers in Inline Assembly](using-and-preserving-registers-in-inline-assembly.md)\n## [Jumping to Labels in Inline Assembly](jumping-to-labels-in-inline-assembly.md)\n## [Calling C Functions in Inline Assembly](calling-c-functions-in-inline-assembly.md)\n## [Calling C++ Functions in Inline Assembly](calling-cpp-functions-in-inline-assembly.md)\n## [Defining __asm Blocks as C Macros](defining-asm-blocks-as-c-macros.md)\n## [Optimizing Inline Assembly](optimizing-inline-assembly.md)\n"}