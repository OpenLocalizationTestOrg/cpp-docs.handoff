<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="es-es">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-04506c2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ae3a9180de5c5c726449cdb5c60d46552ccf77e3</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\c-runtime-library\printf-p-positional-parameters.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">82cc43aab1fd417a9be8455ddef6c576dd8bff91</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0638c656ab1cae6fdf5e7c58fcd1ca15ddf2e6c1</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>printf_p Positional Parameters | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>printf_p Positional Parameters</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Positional parameters provide the ability to specify by number which of the arguments is to be substituted into a field in a format string.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The following positional parameter <ph id="ph1">`printf`</ph> functions are available:</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>printf, _printf_l, wprintf, _wprintf_l</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>_printf_p, _printf_p_l, _wprintf_p, _wprintf_p_l</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>sprintf, _sprintf_l, swprintf, _swprintf_l, <ph id="ph1">\_</ph>_swprintf_l</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>_sprintf_p, _sprintf_p_l, _swprintf_p, _swprintf_p_l</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>_cprintf, _cprintf_l, _cwprintf, _cwprintf_l</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>_cprintf_p, _cprintf_p_l, _cwprintf_p, _cwprintf_p_l</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>fprintf, _fprintf_l, fwprintf, _fwprintf_l</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>_fprintf_p, _fprintf_p_l, _fwprintf_p, _fwprintf_p_l</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>vprintf, _vprintf_l, vwprintf, _vwprintf_l</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>_vprintf_p, _vprintf_p_l, _vwprintf_p, _vwprintf_p_l</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>vfprintf, _vfprintf_l, vfwprintf, _vfwprintf_l</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>_vfprintf_p, _vfprintf_p_l, _vfwprintf_p, _vfwprintf_p_l</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>vsprintf, _vsprintf_l, vswprintf, _vswprintf_l, <ph id="ph1">\_</ph>_vswprintf_l</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>_vsprintf_p, _vsprintf_p_l, _vswprintf_p, _vswprintf_p_l</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Specifying Positional Parameters</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Parameter Indexing</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>By default the positional functions behave identically to the non position ones, if no positional formatting is present.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Positional parameters are specified using the format "<ph id="ph1">`%m$x`</ph>", where <ph id="ph2">`m`</ph> denotes a numeric ordinal number indicating the position of the parameter in the list of parameters, preceding the format string and <ph id="ph3">`x`</ph> denotes the type field character type specified in the <ph id="ph4">`printf`</ph> function.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The parameters in the list are indexed starting at the value 1 for the first element in the list and so forth.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>For additional information concerning type field characters, see <bpt id="p1">[</bpt>printf Type Field Characters<ept id="p1">](../c-runtime-library/printf-type-field-characters.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>For an example of this behavior:</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>will print</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The order of the numbers used need not match the order of the arguments given.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Thus the following is valid:</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>will print</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Parameter may be used more than once while formatting, unlike in traditional format strings, so that</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>will print</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>However, all arguments must be used at least once somewhere in the format string.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The maximum number of positional parameters allowed in a format string is given by <ph id="ph1">`_ARGMAX`</ph>.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Width and Precision</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>When the * symbol is used to specify that the width or precision is to be determined from an argument, then the position of the width or precision value must appear immediately following the <ph id="ph1">\*</ph> symbol.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>For example,</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>or</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Mixing positional and non positional arguments</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Positional parameters may not be mixed with non-positional parameters in the same format string.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>However, <ph id="ph1">`printf_p`</ph> and related functions still support non-positional parameters in format strings containing no positional parameters.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>printf Type Field Characters</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>printf Width Specification</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Precision Specification</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>