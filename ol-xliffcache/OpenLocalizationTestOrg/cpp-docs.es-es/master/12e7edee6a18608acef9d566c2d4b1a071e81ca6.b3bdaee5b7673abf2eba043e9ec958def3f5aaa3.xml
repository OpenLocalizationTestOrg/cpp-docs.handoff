{"nodes":[{"pos":[12,83],"content":"-KEYFILE (Specify Key or Key Pair to Sign an Assembly) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"-KEYFILE (Specify Key or Key Pair to Sign an Assembly) | Microsoft Docs","pos":[0,71]}]},{"content":"/KEYFILE (Specify Key or Key Pair to Sign an Assembly)","pos":[739,793]},{"content":"Remarks","pos":[832,839]},{"content":"where:","pos":[843,849]},{"content":"filename","pos":[857,865]},{"content":"File that contains the key.","pos":[870,897]},{"content":"Place the string in double quotation marks (\" \") if it contains a space.","pos":[898,970]},{"content":"Remarks","pos":[979,986]},{"content":"The linker inserts the public key into the assembly manifest and then signs the final assembly with the private key.","pos":[990,1106]},{"content":"To generate a key file, type <bpt id=\"p1\">[</bpt>sn -k<ept id=\"p1\">](http://msdn.microsoft.com/Library/c1d2b532-1b8e-4c7a-8ac5-53b801135ec6)</ept> <ph id=\"ph1\">`file`</ph> at the command line.","pos":[1107,1243],"source":" To generate a key file, type [sn -k](http://msdn.microsoft.com/Library/c1d2b532-1b8e-4c7a-8ac5-53b801135ec6) `file` at the command line."},{"content":"A signed assembly is said to have a strong name.","pos":[1244,1292]},{"pos":[1299,1728],"content":"If you compile with <bpt id=\"p1\">[</bpt>/LN<ept id=\"p1\">](../../build/reference/ln-create-msil-module.md)</ept>, the name of the key file is held in the module and incorporated into the assembly that is created when you compile an assembly that includes an explicit reference to the module, via <bpt id=\"p2\">[</bpt>#using<ept id=\"p2\">](../../preprocessor/hash-using-directive-cpp.md)</ept>, or when linking with <bpt id=\"p3\">[</bpt>/ASSEMBLYMODULE<ept id=\"p3\">](../../build/reference/assemblymodule-add-a-msil-module-to-the-assembly.md)</ept>.","source":"If you compile with [/LN](../../build/reference/ln-create-msil-module.md), the name of the key file is held in the module and incorporated into the assembly that is created when you compile an assembly that includes an explicit reference to the module, via [#using](../../preprocessor/hash-using-directive-cpp.md), or when linking with [/ASSEMBLYMODULE](../../build/reference/assemblymodule-add-a-msil-module-to-the-assembly.md)."},{"content":"You can also pass your encryption information to the linker with <bpt id=\"p1\">[</bpt>/KEYCONTAINER<ept id=\"p1\">](../../build/reference/keycontainer-specify-a-key-container-to-sign-an-assembly.md)</ept>.","pos":[1735,1899],"source":"You can also pass your encryption information to the linker with [/KEYCONTAINER](../../build/reference/keycontainer-specify-a-key-container-to-sign-an-assembly.md)."},{"content":"Use <bpt id=\"p1\">[</bpt>/DELAYSIGN<ept id=\"p1\">](../../build/reference/delaysign-partially-sign-an-assembly.md)</ept> if you want a partially signed assembly.","pos":[1900,2020],"source":" Use [/DELAYSIGN](../../build/reference/delaysign-partially-sign-an-assembly.md) if you want a partially signed assembly."},{"content":"See <bpt id=\"p1\">[</bpt>Strong Name Assemblies (Assembly Signing) (C++/CLI)<ept id=\"p1\">](../../dotnet/strong-name-assemblies-assembly-signing-cpp-cli.md)</ept> for more information on signing an assembly.","pos":[2021,2188],"source":" See [Strong Name Assemblies (Assembly Signing) (C++/CLI)](../../dotnet/strong-name-assemblies-assembly-signing-cpp-cli.md) for more information on signing an assembly."},{"content":"In case both <bpt id=\"p1\">**</bpt>/KEYFILE<ept id=\"p1\">**</ept> and <bpt id=\"p2\">**</bpt>/KEYCONTAINER<ept id=\"p2\">**</ept> are specified (either by command line option or by custom attribute), the linker will first try the key container.","pos":[2195,2357],"source":"In case both **/KEYFILE** and **/KEYCONTAINER** are specified (either by command line option or by custom attribute), the linker will first try the key container."},{"content":"If that succeeds, then the assembly is signed with the information in the key container.","pos":[2358,2446]},{"content":"If the linker does not find the key container, it will try the file specified with /KEYFILE.","pos":[2447,2539]},{"content":"If that succeeds, the assembly is signed with the information in the key file and the key information will be installed in the key container (similar to sn -i) so that on the next compilation, the key container will be valid.","pos":[2540,2765]},{"content":"Note that a key file might contain only the public key.","pos":[2772,2827]},{"pos":[2834,2999],"content":"See <bpt id=\"p1\">[</bpt>Creating and Using Strong-Named Assemblies<ept id=\"p1\">](http://msdn.microsoft.com/Library/ffbf6d9e-4a88-4a8a-9645-4ce0ee1ee5f9)</ept> for more information on signing an assembly.","source":"See [Creating and Using Strong-Named Assemblies](http://msdn.microsoft.com/Library/ffbf6d9e-4a88-4a8a-9645-4ce0ee1ee5f9) for more information on signing an assembly."},{"content":"Other linker options that affect assembly generation are:","pos":[3006,3063]},{"content":"/ASSEMBLYDEBUG","pos":[3074,3088]},{"content":"/ASSEMBLYLINKRESOURCE","pos":[3164,3185]},{"content":"/ASSEMBLYMODULE","pos":[3278,3293]},{"content":"/ASSEMBLYRESOURCE","pos":[3380,3397]},{"content":"/NOASSEMBLY","pos":[3477,3488]},{"content":"To set this linker option in the Visual Studio development environment","pos":[3557,3627]},{"content":"Open the project's <bpt id=\"p1\">**</bpt>Property Pages<ept id=\"p1\">**</ept> dialog box.","pos":[3637,3686],"source":"Open the project's **Property Pages** dialog box."},{"content":"For details, see <bpt id=\"p1\">[</bpt>Setting Visual C++ Project Properties<ept id=\"p1\">](../../ide/working-with-project-properties.md)</ept>.","pos":[3687,3790],"source":" For details, see [Setting Visual C++ Project Properties](../../ide/working-with-project-properties.md)."},{"pos":[3800,3828],"content":"Click the <bpt id=\"p1\">**</bpt>Linker<ept id=\"p1\">**</ept> folder.","source":"Click the **Linker** folder."},{"pos":[3838,3879],"content":"Click the <bpt id=\"p1\">**</bpt>Command Line<ept id=\"p1\">**</ept> property page.","source":"Click the **Command Line** property page."},{"pos":[3889,3941],"content":"Type the option into the <bpt id=\"p1\">**</bpt>Additional Options<ept id=\"p1\">**</ept> box.","source":"Type the option into the **Additional Options** box."},{"content":"To set this linker option programmatically","pos":[3951,3993]},{"content":"See &lt;xref:Microsoft.VisualStudio.VCProjectEngine.VCLinkerTool.AdditionalOptions%2A&gt;.","pos":[4003,4087],"source":"See <xref:Microsoft.VisualStudio.VCProjectEngine.VCLinkerTool.AdditionalOptions%2A>."},{"content":"See Also","pos":[4096,4104]},{"content":"Setting Linker Options","pos":[4109,4131]},{"content":"Linker Options","pos":[4187,4201]}],"content":"---\ntitle: \"-KEYFILE (Specify Key or Key Pair to Sign an Assembly) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"/keyfile\"\n  - \"VC.Project.VCLinkerTool.KeyFile\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"/KEYFILE linker option\"\n  - \"-KEYFILE linker option\"\n  - \"KEYFILE linker option\"\nms.assetid: 9b71f8c0-541c-4fe5-a0c7-9364f42ecb06\ncaps.latest.revision: 12\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# /KEYFILE (Specify Key or Key Pair to Sign an Assembly)\n```  \n/KEYFILE:filename  \n```  \n  \n## Remarks  \n where:  \n  \n *filename*  \n File that contains the key. Place the string in double quotation marks (\" \") if it contains a space.  \n  \n## Remarks  \n The linker inserts the public key into the assembly manifest and then signs the final assembly with the private key. To generate a key file, type [sn -k](http://msdn.microsoft.com/Library/c1d2b532-1b8e-4c7a-8ac5-53b801135ec6) `file` at the command line. A signed assembly is said to have a strong name.  \n  \n If you compile with [/LN](../../build/reference/ln-create-msil-module.md), the name of the key file is held in the module and incorporated into the assembly that is created when you compile an assembly that includes an explicit reference to the module, via [#using](../../preprocessor/hash-using-directive-cpp.md), or when linking with [/ASSEMBLYMODULE](../../build/reference/assemblymodule-add-a-msil-module-to-the-assembly.md).  \n  \n You can also pass your encryption information to the linker with [/KEYCONTAINER](../../build/reference/keycontainer-specify-a-key-container-to-sign-an-assembly.md). Use [/DELAYSIGN](../../build/reference/delaysign-partially-sign-an-assembly.md) if you want a partially signed assembly. See [Strong Name Assemblies (Assembly Signing) (C++/CLI)](../../dotnet/strong-name-assemblies-assembly-signing-cpp-cli.md) for more information on signing an assembly.  \n  \n In case both **/KEYFILE** and **/KEYCONTAINER** are specified (either by command line option or by custom attribute), the linker will first try the key container. If that succeeds, then the assembly is signed with the information in the key container. If the linker does not find the key container, it will try the file specified with /KEYFILE. If that succeeds, the assembly is signed with the information in the key file and the key information will be installed in the key container (similar to sn -i) so that on the next compilation, the key container will be valid.  \n  \n Note that a key file might contain only the public key.  \n  \n See [Creating and Using Strong-Named Assemblies](http://msdn.microsoft.com/Library/ffbf6d9e-4a88-4a8a-9645-4ce0ee1ee5f9) for more information on signing an assembly.  \n  \n Other linker options that affect assembly generation are:  \n  \n-   [/ASSEMBLYDEBUG](../../build/reference/assemblydebug-add-debuggableattribute.md)  \n  \n-   [/ASSEMBLYLINKRESOURCE](../../build/reference/assemblylinkresource-link-to-dotnet-framework-resource.md)  \n  \n-   [/ASSEMBLYMODULE](../../build/reference/assemblymodule-add-a-msil-module-to-the-assembly.md)  \n  \n-   [/ASSEMBLYRESOURCE](../../build/reference/assemblyresource-embed-a-managed-resource.md)  \n  \n-   [/NOASSEMBLY](../../build/reference/noassembly-create-a-msil-module.md)  \n  \n### To set this linker option in the Visual Studio development environment  \n  \n1.  Open the project's **Property Pages** dialog box. For details, see [Setting Visual C++ Project Properties](../../ide/working-with-project-properties.md).  \n  \n2.  Click the **Linker** folder.  \n  \n3.  Click the **Command Line** property page.  \n  \n4.  Type the option into the **Additional Options** box.  \n  \n### To set this linker option programmatically  \n  \n-   See <xref:Microsoft.VisualStudio.VCProjectEngine.VCLinkerTool.AdditionalOptions%2A>.  \n  \n## See Also  \n [Setting Linker Options](../../build/reference/setting-linker-options.md)   \n [Linker Options](../../build/reference/linker-options.md)"}