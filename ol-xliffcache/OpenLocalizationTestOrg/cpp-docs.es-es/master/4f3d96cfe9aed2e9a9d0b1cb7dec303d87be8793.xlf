<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="es-es">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-787e512" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4f3d96cfe9aed2e9a9d0b1cb7dec303d87be8793</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\mfc\cwinapp-the-application-class.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0cfcac95b4c88518297284627f6ae5abd3f2ac68</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">89855d0a80a3bfabf5dae60aa55102ab9efcf9c3</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>CWinApp: The Application Class | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>CWinApp: The Application Class</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The main application class in MFC encapsulates the initialization, running, and termination of an application for the Windows operating system.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>An application built on the framework must have one and only one object of a class derived from <bpt id="p1">[</bpt>CWinApp<ept id="p1">](../mfc/reference/cwinapp-class.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>This object is constructed before windows are created.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>is derived from <ph id="ph1">`CWinThread`</ph>, which represents the main thread of execution for your application, which might have one or more threads.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>In recent versions of MFC, the <ph id="ph1">`InitInstance`</ph>, <bpt id="p1">**</bpt>Run<ept id="p1">**</ept>, <ph id="ph2">`ExitInstance`</ph>, and <ph id="ph3">`OnIdle`</ph> member functions are actually in class <ph id="ph4">`CWinThread`</ph>.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>These functions are discussed here as if they were <ph id="ph1">`CWinApp`</ph> members instead, because the discussion concerns the object's role as application object rather than as primary thread.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Your application class constitutes your application's primary thread of execution.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Using Win32 API functions, you can also create secondary threads of execution.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>These threads can use the MFC Library.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Multithreading<ept id="p1">](../parallel/multithreading-support-for-older-code-visual-cpp.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Like any program for the Windows operating system, your framework application has a <ph id="ph1">`WinMain`</ph> function.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>In a framework application, however, you do not write <ph id="ph1">`WinMain`</ph>.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>It is supplied by the class library and is called when the application starts up.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>performs standard services such as registering window classes.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>It then calls member functions of the application object to initialize and run the application.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>(You can customize <ph id="ph1">`WinMain`</ph> by overriding the <ph id="ph2">`CWinApp`</ph> member functions that <ph id="ph3">`WinMain`</ph> calls.)</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>To initialize the application, <ph id="ph1">`WinMain`</ph> calls your application object's <ph id="ph2">`InitApplication`</ph> and <ph id="ph3">`InitInstance`</ph> member functions.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>To run the application's message loop, <ph id="ph1">`WinMain`</ph> calls the <bpt id="p1">**</bpt>Run<ept id="p1">**</ept> member function.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>On termination, <ph id="ph1">`WinMain`</ph> calls the application object's <ph id="ph2">`ExitInstance`</ph> member function.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Names shown in <bpt id="p1">**</bpt>bold<ept id="p1">**</ept> in this documentation indicate elements supplied by the Microsoft Foundation Class Library and Visual C++.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Names shown in <ph id="ph1">`monospaced`</ph> type indicate elements that you create or override.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>General MFC Topics</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>CWinApp and the MFC Application Wizard</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Overridable CWinApp Member Functions</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Special CWinApp Services</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>