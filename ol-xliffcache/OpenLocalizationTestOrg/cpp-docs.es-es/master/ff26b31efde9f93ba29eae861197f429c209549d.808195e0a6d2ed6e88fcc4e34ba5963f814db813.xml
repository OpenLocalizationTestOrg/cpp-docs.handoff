{"nodes":[{"pos":[12,74],"content":"Adding Functionality to the Composite Control | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Adding Functionality to the Composite Control | Microsoft Docs","pos":[0,62]}]},{"content":"Adding Functionality to the Composite Control","pos":[701,746]},{"content":"Once you have inserted any necessary controls into the composite control, the next step involves adding new functionality.","pos":[747,869]},{"content":"This new functionality usually falls into two categories:","pos":[870,927]},{"content":"Supporting additional interfaces and customizing the behavior of your composite control with additional, specific features.","pos":[937,1060]},{"content":"Handling events from the contained ActiveX control (or controls).","pos":[1070,1135]},{"content":"For the purpose and scope of this article, the remainder of this section focuses solely on handling events from ActiveX controls.","pos":[1142,1271]},{"pos":[1279,1453],"content":"[!NOTE]\n If you need to handle messages from Windows controls, see [Implementing a Window](../atl/implementing-a-window.md) for more information on message handling in ATL.","leadings":["","> "],"nodes":[{"content":"If you need to handle messages from Windows controls, see <bpt id=\"p1\">[</bpt>Implementing a Window<ept id=\"p1\">](../atl/implementing-a-window.md)</ept> for more information on message handling in ATL.","pos":[9,172],"source":" If you need to handle messages from Windows controls, see [Implementing a Window](../atl/implementing-a-window.md) for more information on message handling in ATL."}]},{"content":"After inserting an ActiveX control in the dialog resource, right-click the control and click <bpt id=\"p1\">**</bpt>Add Event Handler<ept id=\"p1\">**</ept>.","pos":[1460,1575],"source":"After inserting an ActiveX control in the dialog resource, right-click the control and click **Add Event Handler**."},{"content":"Select the event you want to handle and click <bpt id=\"p1\">**</bpt>Add and Edit<ept id=\"p1\">**</ept>.","pos":[1576,1639],"source":" Select the event you want to handle and click **Add and Edit**."},{"content":"The event handler code will be added to the control's .h file.","pos":[1640,1702]},{"pos":[1709,1953],"content":"Connection points for ActiveX controls on the composite control are automatically connected and disconnected via calls to <bpt id=\"p1\">[</bpt>CComCompositeControl::AdviseSinkMap<ept id=\"p1\">](../atl/reference/ccomcompositecontrol-class.md#ccomcompositecontrol__advisesinkmap)</ept>.","source":"Connection points for ActiveX controls on the composite control are automatically connected and disconnected via calls to [CComCompositeControl::AdviseSinkMap](../atl/reference/ccomcompositecontrol-class.md#ccomcompositecontrol__advisesinkmap)."},{"content":"See Also","pos":[1962,1970]},{"content":"Composite Control Fundamentals","pos":[1975,2005]}],"content":"---\ntitle: \"Adding Functionality to the Composite Control | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"event handlers [C++], ActiveX controls\"\n  - \"composite controls, handling events\"\n  - \"ActiveX controls [C++], events\"\nms.assetid: 98f85681-9564-480d-af38-03f9733fe58b\ncaps.latest.revision: 10\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Adding Functionality to the Composite Control\nOnce you have inserted any necessary controls into the composite control, the next step involves adding new functionality. This new functionality usually falls into two categories:  \n  \n-   Supporting additional interfaces and customizing the behavior of your composite control with additional, specific features.  \n  \n-   Handling events from the contained ActiveX control (or controls).  \n  \n For the purpose and scope of this article, the remainder of this section focuses solely on handling events from ActiveX controls.  \n  \n> [!NOTE]\n>  If you need to handle messages from Windows controls, see [Implementing a Window](../atl/implementing-a-window.md) for more information on message handling in ATL.  \n  \n After inserting an ActiveX control in the dialog resource, right-click the control and click **Add Event Handler**. Select the event you want to handle and click **Add and Edit**. The event handler code will be added to the control's .h file.  \n  \n Connection points for ActiveX controls on the composite control are automatically connected and disconnected via calls to [CComCompositeControl::AdviseSinkMap](../atl/reference/ccomcompositecontrol-class.md#ccomcompositecontrol__advisesinkmap).  \n  \n## See Also  \n [Composite Control Fundamentals](../atl/atl-composite-control-fundamentals.md)\n\n"}