{"nodes":[{"pos":[12,52],"content":"_strdate_s, _wstrdate_s | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"_strdate_s, _wstrdate_s | Microsoft Docs","pos":[0,40]}]},{"content":"_strdate_s, _wstrdate_s","pos":[1214,1237]},{"content":"Copy the current system date to a buffer.","pos":[1238,1279]},{"content":"These are versions of <bpt id=\"p1\">[</bpt>_strdate, _wstrdate<ept id=\"p1\">](../../c-runtime-library/reference/strdate-wstrdate.md)</ept> with security enhancements as described in <bpt id=\"p2\">[</bpt>Security Features in the CRT<ept id=\"p2\">](../../c-runtime-library/security-features-in-the-crt.md)</ept>.","pos":[1280,1510],"source":" These are versions of [_strdate, _wstrdate](../../c-runtime-library/reference/strdate-wstrdate.md) with security enhancements as described in [Security Features in the CRT](../../c-runtime-library/security-features-in-the-crt.md)."},{"content":"Syntax","pos":[1519,1525]},{"content":"Parameters","pos":[1889,1899]},{"content":"[out]","pos":[1903,1908]},{"content":"A pointer to a buffer which will be filled in with the formatted date string.","pos":[1921,1998]},{"content":"[in]","pos":[2005,2009]},{"content":"Size of the buffer.","pos":[2032,2051]},{"content":"Return Value","pos":[2060,2072]},{"content":"Zero if successful.","pos":[2076,2095]},{"content":"The return value is an error code if there is a failure.","pos":[2096,2152]},{"content":"Error codes are defined in ERRNO.H; see table below for the exact errors generated by this function.","pos":[2153,2253]},{"content":"For more information on error codes, see <bpt id=\"p1\">[</bpt>errno<ept id=\"p1\">](../../c-runtime-library/errno-constants.md)</ept>.","pos":[2254,2347],"source":" For more information on error codes, see [errno](../../c-runtime-library/errno-constants.md)."},{"content":"Error Conditions","pos":[2356,2372]},{"content":"Return","pos":[2407,2413]},{"pos":[2414,2425],"content":"Contents of"},{"content":"(any)","pos":[2530,2535]},{"content":"Not modified","pos":[2545,2557]},{"pos":[2562,2599],"content":"Not <ph id=\"ph1\">`NULL`</ph> (pointing to valid buffer)","source":"Not `NULL` (pointing to valid buffer)"},{"content":"0","pos":[2600,2601]},{"content":"Not modified","pos":[2611,2623]},{"pos":[2628,2665],"content":"Not <ph id=\"ph1\">`NULL`</ph> (pointing to valid buffer)","source":"Not `NULL` (pointing to valid buffer)"},{"pos":[2666,2692],"content":"0 &lt; <ph id=\"ph1\">`numberOfElements`</ph> &lt; 9","source":"0 < `numberOfElements` < 9"},{"content":"Empty string","pos":[2702,2714]},{"pos":[2719,2756],"content":"Not <ph id=\"ph1\">`NULL`</ph> (pointing to valid buffer)","source":"Not `NULL` (pointing to valid buffer)"},{"pos":[2776,2780],"content":"&gt;= 9","source":" >= 9"},{"content":"0","pos":[2781,2782]},{"content":"Current date formatted as specified in the remarks","pos":[2783,2833]},{"content":"Security Issues","pos":[2843,2858]},{"pos":[2862,3005],"content":"Passing in an invalid non <ph id=\"ph1\">`NULL`</ph> value for the buffer will result in an access violation if the <ph id=\"ph2\">`numberOfElements`</ph> parameter is greater than 9.","source":"Passing in an invalid non `NULL` value for the buffer will result in an access violation if the `numberOfElements` parameter is greater than 9."},{"pos":[3012,3119],"content":"Passing values for size that is greater than the actual size of the <ph id=\"ph1\">`buffer`</ph> will result in buffer overrun.","source":"Passing values for size that is greater than the actual size of the `buffer` will result in buffer overrun."},{"content":"Remarks","pos":[3128,3135]},{"content":"These functions provide more secure versions of <ph id=\"ph1\">`_strdate`</ph> and <ph id=\"ph2\">`_wstrdate`</ph>.","pos":[3139,3214],"source":"These functions provide more secure versions of `_strdate` and `_wstrdate`."},{"content":"The <ph id=\"ph1\">`_strdate_s`</ph> function copies the current system date to the buffer pointed to by <ph id=\"ph2\">`buffer`</ph>, formatted <ph id=\"ph3\">`mm`/`dd`/`yy`</ph>, where <ph id=\"ph4\">`mm`</ph> is two digits representing the month, <ph id=\"ph5\">`dd`</ph> is two digits representing the day, and <ph id=\"ph6\">`yy`</ph> is the last two digits of the year.","pos":[3215,3470],"source":" The `_strdate_s` function copies the current system date to the buffer pointed to by `buffer`, formatted `mm`/`dd`/`yy`, where `mm` is two digits representing the month, `dd` is two digits representing the day, and `yy` is the last two digits of the year."},{"content":"For example, the string <ph id=\"ph1\">`12/05/99`</ph> represents December 5, 1999.","pos":[3471,3534],"source":" For example, the string `12/05/99` represents December 5, 1999."},{"content":"The buffer must be at least 9 characters long.","pos":[3535,3581]},{"content":"is a wide-character version of <ph id=\"ph1\">`_strdate_s`</ph>; the argument and return value of <ph id=\"ph2\">`_wstrdate_s`</ph> are wide-character strings.","pos":[3602,3721],"source":" is a wide-character version of `_strdate_s`; the argument and return value of `_wstrdate_s` are wide-character strings."},{"content":"These functions behave identically otherwise.","pos":[3722,3767]},{"content":"If <ph id=\"ph1\">`buffer`</ph> is a <ph id=\"ph2\">`NULL`</ph> pointer, or if <ph id=\"ph3\">`numberOfElements`</ph> is less than 9 characters, the invalid parameter handler is invoked, as described in <bpt id=\"p1\">[</bpt>Parameter Validation<ept id=\"p1\">](../../c-runtime-library/parameter-validation.md)</ept>.","pos":[3774,3989],"source":"If `buffer` is a `NULL` pointer, or if `numberOfElements` is less than 9 characters, the invalid parameter handler is invoked, as described in [Parameter Validation](../../c-runtime-library/parameter-validation.md)."},{"content":"If execution is allowed to continue, these functions return -1 and set <ph id=\"ph1\">`errno`</ph> to <ph id=\"ph2\">`EINVAL`</ph> if the buffer is <ph id=\"ph3\">`NULL`</ph> or if <ph id=\"ph4\">`numberOfElements`</ph> is less than or equal to 0, or set <ph id=\"ph5\">`errno`</ph> to <ph id=\"ph6\">`ERANGE`</ph> if <ph id=\"ph7\">`numberOfElements`</ph> is less than 9.","pos":[3990,4222],"source":" If execution is allowed to continue, these functions return -1 and set `errno` to `EINVAL` if the buffer is `NULL` or if `numberOfElements` is less than or equal to 0, or set `errno` to `ERANGE` if `numberOfElements` is less than 9."},{"content":"In C++, using these functions is simplified by template overloads; the overloads can infer buffer length automatically (eliminating the need to specify a size argument) and they can automatically replace older, non-secure functions with their newer, secure counterparts.","pos":[4229,4499]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Secure Template Overloads<ept id=\"p1\">](../../c-runtime-library/secure-template-overloads.md)</ept>.","pos":[4500,4608],"source":" For more information, see [Secure Template Overloads](../../c-runtime-library/secure-template-overloads.md)."},{"content":"Generic-Text Routine Mapping:","pos":[4618,4647]},{"content":"TCHAR.H routine","pos":[4654,4669]},{"content":"_UNICODE &amp; _MBCS not defined","pos":[4670,4698],"source":"_UNICODE & _MBCS not defined"},{"content":"_MBCS defined","pos":[4699,4712]},{"content":"_UNICODE defined","pos":[4713,4729]},{"content":"Requirements","pos":[4905,4917]},{"content":"Routine","pos":[4924,4931]},{"content":"Required header","pos":[4932,4947]},{"content":"time.h&gt;","pos":[5005,5012],"source":"time.h>"},{"content":"time.h&gt; or <ph id=\"ph1\">\\&lt;</ph>wchar.h&gt;","pos":[5031,5052],"source":"time.h> or \\<wchar.h>"},{"content":"time.h&gt;","pos":[5072,5079],"source":"time.h>"},{"content":"Example","pos":[5089,5096]},{"pos":[5100,5184],"content":"See the example for <bpt id=\"p1\">[</bpt>time<ept id=\"p1\">](../../c-runtime-library/reference/time-time32-time64.md)</ept>.","source":"See the example for [time](../../c-runtime-library/reference/time-time32-time64.md)."},{"content":".NET Framework Equivalent","pos":[5193,5218]},{"content":"System::DateTime::Parse","pos":[5223,5246]},{"content":"See Also","pos":[5325,5333]},{"content":"Time Management","pos":[5338,5353]},{"content":"asctime_s, _wasctime_s","pos":[5404,5426]},{"content":"ctime_s, _ctime32_s, _ctime64_s, _wctime_s, _wctime32_s, _wctime64_s","pos":[5492,5560]},{"content":"gmtime_s, _gmtime32_s, _gmtime64_s","pos":[5664,5698]},{"content":"localtime_s, _localtime32_s, _localtime64_s","pos":[5774,5817]},{"content":"mktime, _mktime32, _mktime64","pos":[5902,5930]},{"content":"time, _time32, _time64","pos":[6000,6022]},{"content":"_tzset","pos":[6086,6092]}],"content":"---\ntitle: \"_strdate_s, _wstrdate_s | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\napiname: \n  - \"_strdate_s\"\n  - \"_wstrdate_s\"\napilocation: \n  - \"msvcrt.dll\"\n  - \"msvcr80.dll\"\n  - \"msvcr90.dll\"\n  - \"msvcr100.dll\"\n  - \"msvcr100_clr0400.dll\"\n  - \"msvcr110.dll\"\n  - \"msvcr110_clr0400.dll\"\n  - \"msvcr120.dll\"\n  - \"msvcr120_clr0400.dll\"\n  - \"ucrtbase.dll\"\n  - \"api-ms-win-crt-time-l1-1-0.dll\"\napitype: \"DLLExport\"\nf1_keywords: \n  - \"_strdate_s\"\n  - \"wstrdate_s\"\n  - \"_wstrdate_s\"\n  - \"strdate_s\"\n  - \"_tstrdate_s\"\ndev_langs: \n  - \"C++\"\n  - \"C\"\nhelpviewer_keywords: \n  - \"dates, copying\"\n  - \"tstrdate_s function\"\n  - \"wstrdate_s function\"\n  - \"_tstrdate_s function\"\n  - \"strdate_s function\"\n  - \"copying dates\"\n  - \"_strdate_s function\"\n  - \"_wstrdate_s function\"\nms.assetid: d41d8ea9-e5ce-40d4-864e-1ac29b455991\ncaps.latest.revision: 24\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"ru-ru\"\n  - \"zh-cn\"\n  - \"zh-tw\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"tr-tr\"\n---\n# _strdate_s, _wstrdate_s\nCopy the current system date to a buffer. These are versions of [_strdate, _wstrdate](../../c-runtime-library/reference/strdate-wstrdate.md) with security enhancements as described in [Security Features in the CRT](../../c-runtime-library/security-features-in-the-crt.md).  \n  \n## Syntax  \n  \n```  \nerrno_t _strdate_s(  \n   char *buffer,  \n   size_t numberOfElements  \n);  \nerrno_t _wstrdate_s(  \n   wchar_t *buffer,  \n   size_t numberOfElements  \n);  \ntemplate <size_t size>  \nerrno_t _strdate_s(  \n   char (&buffer)[size]  \n); // C++ only  \ntemplate <size_t size>  \nerrno_t _wstrdate_s(  \n   wchar_t (&buffer)[size]  \n); // C++ only  \n```  \n  \n#### Parameters  \n [out] `buffer`  \n A pointer to a buffer which will be filled in with the formatted date string.  \n  \n [in] `numberOfElements`  \n Size of the buffer.  \n  \n## Return Value  \n Zero if successful. The return value is an error code if there is a failure. Error codes are defined in ERRNO.H; see table below for the exact errors generated by this function. For more information on error codes, see [errno](../../c-runtime-library/errno-constants.md).  \n  \n## Error Conditions  \n  \n|`buffer`|`numberOfElements`|Return|Contents of `buffer`|  \n|--------------|------------------------|------------|--------------------------|  \n|`NULL`|(any)|`EINVAL`|Not modified|  \n|Not `NULL` (pointing to valid buffer)|0|`EINVAL`|Not modified|  \n|Not `NULL` (pointing to valid buffer)|0 < `numberOfElements` < 9|`EINVAL`|Empty string|  \n|Not `NULL` (pointing to valid buffer)|`numberOfElements` >= 9|0|Current date formatted as specified in the remarks|  \n  \n## Security Issues  \n Passing in an invalid non `NULL` value for the buffer will result in an access violation if the `numberOfElements` parameter is greater than 9.  \n  \n Passing values for size that is greater than the actual size of the `buffer` will result in buffer overrun.  \n  \n## Remarks  \n These functions provide more secure versions of `_strdate` and `_wstrdate`. The `_strdate_s` function copies the current system date to the buffer pointed to by `buffer`, formatted `mm`/`dd`/`yy`, where `mm` is two digits representing the month, `dd` is two digits representing the day, and `yy` is the last two digits of the year. For example, the string `12/05/99` represents December 5, 1999. The buffer must be at least 9 characters long.  \n  \n `_wstrdate_s` is a wide-character version of `_strdate_s`; the argument and return value of `_wstrdate_s` are wide-character strings. These functions behave identically otherwise.  \n  \n If `buffer` is a `NULL` pointer, or if `numberOfElements` is less than 9 characters, the invalid parameter handler is invoked, as described in [Parameter Validation](../../c-runtime-library/parameter-validation.md). If execution is allowed to continue, these functions return -1 and set `errno` to `EINVAL` if the buffer is `NULL` or if `numberOfElements` is less than or equal to 0, or set `errno` to `ERANGE` if `numberOfElements` is less than 9.  \n  \n In C++, using these functions is simplified by template overloads; the overloads can infer buffer length automatically (eliminating the need to specify a size argument) and they can automatically replace older, non-secure functions with their newer, secure counterparts. For more information, see [Secure Template Overloads](../../c-runtime-library/secure-template-overloads.md).  \n  \n### Generic-Text Routine Mapping:  \n  \n|TCHAR.H routine|_UNICODE & _MBCS not defined|_MBCS defined|_UNICODE defined|  \n|---------------------|------------------------------------|--------------------|-----------------------|  \n|`_tstrdate_s`|`_strdate_s`|`_strdate_s`|`_wstrdate_s`|  \n  \n## Requirements  \n  \n|Routine|Required header|  \n|-------------|---------------------|  \n|`_strdate`|\\<time.h>|  \n|`_wstrdate`|\\<time.h> or \\<wchar.h>|  \n|`_strdate_s`|\\<time.h>|  \n  \n## Example  \n See the example for [time](../../c-runtime-library/reference/time-time32-time64.md).  \n  \n## .NET Framework Equivalent  \n [System::DateTime::Parse](https://msdn.microsoft.com/en-us/library/system.datetime.parse.aspx)  \n  \n## See Also  \n [Time Management](../../c-runtime-library/time-management.md)   \n [asctime_s, _wasctime_s](../../c-runtime-library/reference/asctime-s-wasctime-s.md)   \n [ctime_s, _ctime32_s, _ctime64_s, _wctime_s, _wctime32_s, _wctime64_s](../../c-runtime-library/reference/ctime-s-ctime32-s-ctime64-s-wctime-s-wctime32-s-wctime64-s.md)   \n [gmtime_s, _gmtime32_s, _gmtime64_s](../../c-runtime-library/reference/gmtime-s-gmtime32-s-gmtime64-s.md)   \n [localtime_s, _localtime32_s, _localtime64_s](../../c-runtime-library/reference/localtime-s-localtime32-s-localtime64-s.md)   \n [mktime, _mktime32, _mktime64](../../c-runtime-library/reference/mktime-mktime32-mktime64.md)   \n [time, _time32, _time64](../../c-runtime-library/reference/time-time32-time64.md)   \n [_tzset](../../c-runtime-library/reference/tzset.md)"}