{"nodes":[{"pos":[12,45],"content":"File I-O Classes | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"File I-O Classes | Microsoft Docs","pos":[0,33]}]},{"content":"File I/O Classes","pos":[830,846]},{"content":"These classes provide an interface to traditional disk files, in-memory files, Active streams, and Windows sockets.","pos":[847,962]},{"content":"All of the classes derived from <ph id=\"ph1\">`CFile`</ph> can be used with a <ph id=\"ph2\">`CArchive`</ph> object to perform serialization.","pos":[963,1065],"source":" All of the classes derived from `CFile` can be used with a `CArchive` object to perform serialization."},{"content":"Use the following classes, particularly <ph id=\"ph1\">`CArchive`</ph> and <ph id=\"ph2\">`CFile`</ph>, if you write your own input/output processing.","pos":[1072,1182],"source":"Use the following classes, particularly `CArchive` and `CFile`, if you write your own input/output processing."},{"content":"Normally you do not need to derive from these classes.","pos":[1183,1237]},{"content":"If you use the application framework, the default implementations of the <bpt id=\"p1\">**</bpt>Open<ept id=\"p1\">**</ept> and <bpt id=\"p2\">**</bpt>Save<ept id=\"p2\">**</ept> commands on the <bpt id=\"p3\">**</bpt>File<ept id=\"p3\">**</ept> menu will handle file I/O (using class <ph id=\"ph1\">`CArchive`</ph>), as long as you override your document's <ph id=\"ph2\">`Serialize`</ph> function to supply details about how a document serializes its contents.","pos":[1238,1534],"source":" If you use the application framework, the default implementations of the **Open** and **Save** commands on the **File** menu will handle file I/O (using class `CArchive`), as long as you override your document's `Serialize` function to supply details about how a document serializes its contents."},{"content":"For more information about the file classes and serialization, see the article <bpt id=\"p1\">[</bpt>Files in MFC<ept id=\"p1\">](../mfc/files-in-mfc.md)</ept> and the article <bpt id=\"p2\">[</bpt>Serialization<ept id=\"p2\">](../mfc/serialization-in-mfc.md)</ept>.","pos":[1535,1717],"source":" For more information about the file classes and serialization, see the article [Files in MFC](../mfc/files-in-mfc.md) and the article [Serialization](../mfc/serialization-in-mfc.md)."},{"content":"CFile","pos":[1725,1730]},{"content":"Provides a file interface to binary disk files.","pos":[1768,1815]},{"content":"CStdioFile","pos":[1823,1833]},{"content":"Provides a <ph id=\"ph1\">`CFile`</ph> interface to buffered stream disk files, usually in text mode.","pos":[1876,1957],"source":" Provides a `CFile` interface to buffered stream disk files, usually in text mode."},{"content":"CMemFile","pos":[1965,1973]},{"content":"Provides a <ph id=\"ph1\">`CFile`</ph> interface to in-memory files.","pos":[2014,2062],"source":" Provides a `CFile` interface to in-memory files."},{"content":"CSharedFile","pos":[2070,2081]},{"content":"Provides a <ph id=\"ph1\">`CFile`</ph> interface to shared in-memory files.","pos":[2125,2180],"source":" Provides a `CFile` interface to shared in-memory files."},{"content":"COleStreamFile","pos":[2188,2202]},{"content":"Uses the COM <ph id=\"ph1\">`IStream`</ph> interface to provide <ph id=\"ph2\">`CFile`</ph> access to compound files.","pos":[2249,2326],"source":" Uses the COM `IStream` interface to provide `CFile` access to compound files."},{"content":"CSocketFile","pos":[2334,2345]},{"content":"Provides a <ph id=\"ph1\">`CFile`</ph> interface to a Windows Socket.","pos":[2389,2438],"source":" Provides a `CFile` interface to a Windows Socket."},{"content":"Related Classes","pos":[2447,2462]},{"content":"CArchive","pos":[2467,2475]},{"content":"Cooperates with a <ph id=\"ph1\">`CFile`</ph> object to implement persistent storage for objects through serialization (see <bpt id=\"p1\">[</bpt>CObject::Serialize<ept id=\"p1\">](../mfc/reference/cobject-class.md#cobject__serialize)</ept>).","pos":[2516,2696],"source":" Cooperates with a `CFile` object to implement persistent storage for objects through serialization (see [CObject::Serialize](../mfc/reference/cobject-class.md#cobject__serialize))."},{"content":"CArchiveException","pos":[2704,2721]},{"content":"An archive exception.","pos":[2771,2792]},{"content":"CFileException","pos":[2800,2814]},{"content":"A file-oriented exception.","pos":[2861,2887]},{"content":"CFileDialog","pos":[2895,2906]},{"content":"Provides a standard dialog box for opening or saving a file.","pos":[2950,3010]},{"content":"CRecentFileList","pos":[3018,3033]},{"content":"Maintains the most recently used (MRU) file list.","pos":[3081,3130]},{"content":"See Also","pos":[3139,3147]},{"content":"Class Overview","pos":[3152,3166]}],"content":"---\ntitle: \"File I-O Classes | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"vc.classes.file\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"disk file classes\"\n  - \"stdio classes\"\n  - \"OLE streams\"\n  - \"I/O [C++], MFC classes\"\n  - \"translated stream classes\"\n  - \"file I/O classes [C++]\"\n  - \"I/O [MFC], classes\"\n  - \"sockets classes\"\n  - \"stream classes\"\n  - \"memory file classes\"\nms.assetid: 92821c3f-d9e1-47f6-98c9-3b632d86e811\ncaps.latest.revision: 10\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# File I/O Classes\nThese classes provide an interface to traditional disk files, in-memory files, Active streams, and Windows sockets. All of the classes derived from `CFile` can be used with a `CArchive` object to perform serialization.  \n  \n Use the following classes, particularly `CArchive` and `CFile`, if you write your own input/output processing. Normally you do not need to derive from these classes. If you use the application framework, the default implementations of the **Open** and **Save** commands on the **File** menu will handle file I/O (using class `CArchive`), as long as you override your document's `Serialize` function to supply details about how a document serializes its contents. For more information about the file classes and serialization, see the article [Files in MFC](../mfc/files-in-mfc.md) and the article [Serialization](../mfc/serialization-in-mfc.md).  \n  \n [CFile](../mfc/reference/cfile-class.md)  \n Provides a file interface to binary disk files.  \n  \n [CStdioFile](../mfc/reference/cstdiofile-class.md)  \n Provides a `CFile` interface to buffered stream disk files, usually in text mode.  \n  \n [CMemFile](../mfc/reference/cmemfile-class.md)  \n Provides a `CFile` interface to in-memory files.  \n  \n [CSharedFile](../mfc/reference/csharedfile-class.md)  \n Provides a `CFile` interface to shared in-memory files.  \n  \n [COleStreamFile](../mfc/reference/colestreamfile-class.md)  \n Uses the COM `IStream` interface to provide `CFile` access to compound files.  \n  \n [CSocketFile](../mfc/reference/csocketfile-class.md)  \n Provides a `CFile` interface to a Windows Socket.  \n  \n## Related Classes  \n [CArchive](../mfc/reference/carchive-class.md)  \n Cooperates with a `CFile` object to implement persistent storage for objects through serialization (see [CObject::Serialize](../mfc/reference/cobject-class.md#cobject__serialize)).  \n  \n [CArchiveException](../mfc/reference/carchiveexception-class.md)  \n An archive exception.  \n  \n [CFileException](../mfc/reference/cfileexception-class.md)  \n A file-oriented exception.  \n  \n [CFileDialog](../mfc/reference/cfiledialog-class.md)  \n Provides a standard dialog box for opening or saving a file.  \n  \n [CRecentFileList](../mfc/reference/crecentfilelist-class.md)  \n Maintains the most recently used (MRU) file list.  \n  \n## See Also  \n [Class Overview](../mfc/class-library-overview.md)\n\n"}