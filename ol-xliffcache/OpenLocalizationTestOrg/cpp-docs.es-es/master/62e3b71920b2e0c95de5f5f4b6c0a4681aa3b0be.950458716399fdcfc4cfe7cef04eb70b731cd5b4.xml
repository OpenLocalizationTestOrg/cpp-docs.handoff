{"nodes":[{"pos":[12,82],"content":"lround, lroundf, lroundl, llround, llroundf, llroundl | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"lround, lroundf, lroundl, llround, llroundf, llroundl | Microsoft Docs","pos":[0,70]}]},{"content":"lround, lroundf, lroundl, llround, llroundf, llroundl","pos":[1199,1252]},{"content":"Rounds a floating-point value to the nearest integer.","pos":[1253,1306]},{"content":"Syntax","pos":[1315,1321]},{"content":"Parameters","pos":[1793,1803]},{"content":"The floating-point value to round.","pos":[1814,1848]},{"content":"Return Value","pos":[1857,1869]},{"content":"The <ph id=\"ph1\">`lround`</ph> and <ph id=\"ph2\">`llround`</ph> functions return the nearest <ph id=\"ph3\">`long`</ph> or <ph id=\"ph4\">`long long`</ph> integer to <ph id=\"ph5\">`x`</ph>.","pos":[1873,1966],"source":"The `lround` and `llround` functions return the nearest `long` or `long long` integer to `x`."},{"content":"Halfway values are rounded away from zero, regardless of the setting of the floating-point rounding mode.","pos":[1967,2072]},{"content":"There is no error return.","pos":[2073,2098]},{"content":"Input","pos":[2105,2110]},{"content":"SEH Exception","pos":[2111,2124]},{"content":"Matherr Exception","pos":[2125,2142]},{"pos":[2207,2216],"content":"± <ph id=\"ph1\">`QNAN`</ph>,","source":"± `QNAN`, "},{"content":"none","pos":[2223,2227]},{"content":"Remarks","pos":[2247,2254]},{"content":"Because C++ allows overloading, you can call overloads of <ph id=\"ph1\">`lround`</ph> or <ph id=\"ph2\">`llround`</ph> that take and return <ph id=\"ph3\">`float`</ph> and <ph id=\"ph4\">`long double`</ph> values.","pos":[2258,2392],"source":"Because C++ allows overloading, you can call overloads of `lround` or `llround` that take and return `float` and `long double` values."},{"content":"In a C program, <ph id=\"ph1\">`lround`</ph> and <ph id=\"ph2\">`llround`</ph> always take and return a <ph id=\"ph3\">`double`</ph>.","pos":[2393,2466],"source":" In a C program, `lround` and `llround` always take and return a `double`."},{"content":"Requirements","pos":[2475,2487]},{"content":"Routine","pos":[2494,2501]},{"content":"Required header","pos":[2502,2517]},{"pos":[2570,2616],"content":", <ph id=\"ph1\">`lroundf`</ph>, <ph id=\"ph2\">`lroundl`</ph>, <ph id=\"ph3\">`llround`</ph>, <ph id=\"ph4\">`llroundf`</ph>,","source":", `lroundf`, `lroundl`, `llround`, `llroundf`, "},{"content":"math.h&gt;","pos":[2630,2637],"source":"math.h>"},{"pos":[2645,2749],"content":"For additional compatibility information, see <bpt id=\"p1\">[</bpt>Compatibility<ept id=\"p1\">](../../c-runtime-library/compatibility.md)</ept>.","source":"For additional compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md)."},{"content":"Example","pos":[2758,2765]},{"content":".NET Framework Equivalent","pos":[3616,3641]},{"content":"System::Math::Round","pos":[3646,3665]},{"content":"See Also","pos":[3740,3748]},{"content":"Floating-Point Support","pos":[3753,3775]},{"content":"ceil, ceilf, ceill","pos":[3833,3851]},{"content":"floor, floorf, floorl","pos":[3913,3934]},{"content":"fmod, fmodf","pos":[3999,4010]},{"content":"lrint, lrintf, lrintl, llrint, llrintf, llrintl","pos":[4066,4113]},{"content":"round, roundf, roundl","pos":[4190,4211]},{"content":"nearbyint, nearbyintf, nearbyintl","pos":[4276,4309]},{"content":"rint, rintf, rintl","pos":[4386,4404]}],"content":"---\ntitle: \"lround, lroundf, lroundl, llround, llroundf, llroundl | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\napiname: \n  - \"llround\"\n  - \"llroundf\"\n  - \"llroundl\"\n  - \"lroundf\"\n  - \"lround\"\n  - \"lroundl\"\napilocation: \n  - \"msvcrt.dll\"\n  - \"msvcr80.dll\"\n  - \"msvcr90.dll\"\n  - \"msvcr100.dll\"\n  - \"msvcr100_clr0400.dll\"\n  - \"msvcr110.dll\"\n  - \"msvcr110_clr0400.dll\"\n  - \"msvcr120.dll\"\n  - \"msvcr120_clr0400.dll\"\n  - \"ucrtbase.dll\"\n  - \"api-ms-win-crt-math-l1-1-0.dll\"\napitype: \"DLLExport\"\nf1_keywords: \n  - \"lround\"\n  - \"lroundl\"\n  - \"llroundl\"\n  - \"llround\"\n  - \"lroundf\"\n  - \"llroundf\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"lround function\"\n  - \"llroundl function\"\n  - \"llround function\"\n  - \"lroundf function\"\n  - \"llroundf function\"\n  - \"lroundl function\"\nms.assetid: cfb88a35-54c6-469f-85af-f7d695dcfdd8\ncaps.latest.revision: 6\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# lround, lroundf, lroundl, llround, llroundf, llroundl\nRounds a floating-point value to the nearest integer.  \n  \n## Syntax  \n  \n```  \nlong lround(   \n   double x   \n);  \nlong lround(  \n   float x  \n);  // C++ only  \nlong lround(  \n   long double x  \n);  // C++ only  \nlong lroundf(  \n   float x  \n);  \nlong lroundl(  \n   long double x  \n);  \nlong long llround(   \n   double x   \n);  \nlong long llround(  \n   float x  \n);  // C++ only  \nlong long llround(  \n   long double x  \n);  // C++ only  \nlong long llroundf(  \n   float x  \n);  \nlong long llroundl(  \n   long double x  \n);  \n```  \n  \n#### Parameters  \n `x`  \n The floating-point value to round.  \n  \n## Return Value  \n The `lround` and `llround` functions return the nearest `long` or `long long` integer to `x`. Halfway values are rounded away from zero, regardless of the setting of the floating-point rounding mode. There is no error return.  \n  \n|Input|SEH Exception|Matherr Exception|  \n|-----------|-------------------|-----------------------|  \n|± `QNAN`, `IND`|none|`_DOMAIN`|  \n  \n## Remarks  \n Because C++ allows overloading, you can call overloads of `lround` or `llround` that take and return `float` and `long double` values. In a C program, `lround` and `llround` always take and return a `double`.  \n  \n## Requirements  \n  \n|Routine|Required header|  \n|-------------|---------------------|  \n|`lround`, `lroundf`, `lroundl`, `llround`, `llroundf`, `llroundl`|\\<math.h>|  \n  \n For additional compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md).  \n  \n## Example  \n  \n```  \n// crt_lround.c  \n// Build with: cl /W3 /Tc crt_lround.c  \n// This example displays the rounded results of  \n// the floating-point values 2.499999, -2.499999,   \n// 2.8, -2.8, 3.5 and -3.5.  \n  \n#include <math.h>  \n#include <stdio.h>  \n  \nint main( void )  \n{  \n   double x = 2.499999;  \n   float y = 2.8f;  \n   long double z = 3.5;  \n  \n   printf(\"lround(%f) is %d\\n\", x, lround(x));  \n   printf(\"lround(%f) is %d\\n\", -x, lround(-x));  \n   printf(\"lroundf(%f) is %d\\n\", y, lroundf(y));  \n   printf(\"lroundf(%f) is %d\\n\", -y, lroundf(-y));  \n   printf(\"lroundl(%Lf) is %d\\n\", z, lroundl(z));  \n   printf(\"lroundl(%Lf) is %d\\n\", -z, lroundl(-z));  \n}  \n```  \n  \n```Output  \nlround(2.499999) is 2  \nlround(-2.499999) is -2  \nlroundf(2.800000) is 3  \nlroundf(-2.800000) is -3  \nlroundl(2.500000) is 4  \nlroundl(-2.500000) is -4  \n```  \n  \n## .NET Framework Equivalent  \n [System::Math::Round](https://msdn.microsoft.com/en-us/library/system.math.round.aspx)  \n  \n## See Also  \n [Floating-Point Support](../../c-runtime-library/floating-point-support.md)   \n [ceil, ceilf, ceill](../../c-runtime-library/reference/ceil-ceilf-ceill.md)   \n [floor, floorf, floorl](../../c-runtime-library/reference/floor-floorf-floorl.md)   \n [fmod, fmodf](../../c-runtime-library/reference/fmod-fmodf.md)   \n [lrint, lrintf, lrintl, llrint, llrintf, llrintl](http://msdn.microsoft.com/en-us/312fd869-a9c0-4107-bb23-ab8299d04385)   \n [round, roundf, roundl](../../c-runtime-library/reference/round-roundf-roundl.md)   \n [nearbyint, nearbyintf, nearbyintl](http://msdn.microsoft.com/en-us/15111e73-331d-41d1-81b7-3e10df894848)   \n [rint, rintf, rintl](../../c-runtime-library/reference/rint-rintf-rintl.md)"}