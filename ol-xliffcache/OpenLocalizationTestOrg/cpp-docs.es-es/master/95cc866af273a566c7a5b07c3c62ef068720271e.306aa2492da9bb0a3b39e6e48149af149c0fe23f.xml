{"nodes":[{"pos":[12,44],"content":"threading (C++) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"threading (C++) | Microsoft Docs","pos":[0,32]}]},{"content":"threading (C++)","pos":[622,637]},{"content":"Specifies the threading model for a COM object.","pos":[638,685]},{"content":"Syntax","pos":[694,700]},{"content":"Parameters","pos":[779,789]},{"content":"<bpt id=\"p1\">***</bpt>model<ept id=\"p1\">***</ept> (optional)","pos":[793,815],"source":"***model*** (optional)"},{"content":"One of the following threading models:","pos":[819,857]},{"pos":[867,902],"content":"<bpt id=\"p1\">**</bpt>apartment<ept id=\"p1\">**</ept> (apartment threading)","source":"**apartment** (apartment threading)"},{"pos":[912,974],"content":"<bpt id=\"p1\">**</bpt>neutral<ept id=\"p1\">**</ept> (.NET Framework components with no user interface)","source":"**neutral** (.NET Framework components with no user interface)"},{"pos":[984,1013],"content":"<bpt id=\"p1\">**</bpt>single<ept id=\"p1\">**</ept> (simple threading)","source":"**single** (simple threading)"},{"pos":[1023,1048],"content":"<bpt id=\"p1\">**</bpt>free<ept id=\"p1\">**</ept> (free threading)","source":"**free** (free threading)"},{"pos":[1058,1097],"content":"<bpt id=\"p1\">**</bpt>both<ept id=\"p1\">**</ept> (apartment and free threading)","source":"**both** (apartment and free threading)"},{"pos":[1104,1139],"content":"The default value is <bpt id=\"p1\">**</bpt>apartment<ept id=\"p1\">**</ept>.","source":"The default value is **apartment**."},{"content":"Remarks","pos":[1148,1155]},{"pos":[1159,1292],"content":"The <bpt id=\"p1\">**</bpt>threading<ept id=\"p1\">**</ept> C++ attribute does not appear in the generated .idl file but will be used in the implementation of your COM object.","source":"The **threading** C++ attribute does not appear in the generated .idl file but will be used in the implementation of your COM object."},{"pos":[1299,1575],"content":"In ATL projects, If the <bpt id=\"p1\">[</bpt>coclass<ept id=\"p1\">](../windows/coclass.md)</ept> attribute is also present, the threading model specified by <bpt id=\"p2\">*</bpt>model<ept id=\"p2\">*</ept> is passed as the template parameter to the <bpt id=\"p3\">[</bpt>CComObjectRootEx<ept id=\"p3\">](../atl/reference/ccomobjectrootex-class.md)</ept> class, inserted by the <bpt id=\"p4\">**</bpt>coclass<ept id=\"p4\">**</ept> attribute.","source":"In ATL projects, If the [coclass](../windows/coclass.md) attribute is also present, the threading model specified by *model* is passed as the template parameter to the [CComObjectRootEx](../atl/reference/ccomobjectrootex-class.md) class, inserted by the **coclass** attribute."},{"pos":[1582,1678],"content":"The <bpt id=\"p1\">**</bpt>threading<ept id=\"p1\">**</ept> attribute also guards access to an <bpt id=\"p2\">[</bpt>event_source<ept id=\"p2\">](../windows/event-source.md)</ept>.","source":"The **threading** attribute also guards access to an [event_source](../windows/event-source.md)."},{"content":"Example","pos":[1687,1694]},{"pos":[1698,1783],"content":"See the <bpt id=\"p1\">[</bpt>licensed<ept id=\"p1\">](../windows/licensed.md)</ept> example for a sample use of <bpt id=\"p2\">**</bpt>threading<ept id=\"p2\">**</ept>.","source":"See the [licensed](../windows/licensed.md) example for a sample use of **threading**."},{"content":"Requirements","pos":[1792,1804]},{"content":"Attribute Context","pos":[1814,1831]},{"content":"Applies to","pos":[1854,1864]},{"pos":[1867,1877],"content":"<bpt id=\"p1\">**</bpt>class<ept id=\"p1\">**</ept>,","source":"**class**, "},{"content":"Repeatable","pos":[1893,1903]},{"content":"No","pos":[1906,1908]},{"content":"Required attributes","pos":[1915,1934]},{"content":"coclass","pos":[1939,1946]},{"content":"Invalid attributes","pos":[1955,1973]},{"content":"None","pos":[1976,1980]},{"pos":[1988,2098],"content":"For more information about the attribute contexts, see <bpt id=\"p1\">[</bpt>Attribute Contexts<ept id=\"p1\">](../windows/attribute-contexts.md)</ept>.","source":"For more information about the attribute contexts, see [Attribute Contexts](../windows/attribute-contexts.md)."},{"content":"See Also","pos":[2107,2115]},{"content":"COM Attributes","pos":[2120,2134]},{"content":"Typedef, Enum, Union, and Struct Attributes","pos":[2171,2214]},{"content":"Class Attributes","pos":[2277,2293]},{"content":"Multithreading Support for Older Code (Visual C++)","pos":[2332,2382]},{"content":"Neutral Apartments","pos":[2454,2472]},{"content":"Attributes Samples","pos":[2539,2557]}],"content":"---\ntitle: \"threading (C++) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"language-reference\"\nf1_keywords: \n  - \"vc-attr.threading\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"threading attribute\"\nms.assetid: 9b558cd6-fbf0-4602-aed5-31c068550ce3\ncaps.latest.revision: 10\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# threading (C++)\nSpecifies the threading model for a COM object.  \n  \n## Syntax  \n  \n```  \n  \n      [ threading(  \n   model=enumeration  \n) ]  \n```  \n  \n#### Parameters  \n ***model*** (optional)  \n One of the following threading models:  \n  \n-   **apartment** (apartment threading)  \n  \n-   **neutral** (.NET Framework components with no user interface)  \n  \n-   **single** (simple threading)  \n  \n-   **free** (free threading)  \n  \n-   **both** (apartment and free threading)  \n  \n The default value is **apartment**.  \n  \n## Remarks  \n The **threading** C++ attribute does not appear in the generated .idl file but will be used in the implementation of your COM object.  \n  \n In ATL projects, If the [coclass](../windows/coclass.md) attribute is also present, the threading model specified by *model* is passed as the template parameter to the [CComObjectRootEx](../atl/reference/ccomobjectrootex-class.md) class, inserted by the **coclass** attribute.  \n  \n The **threading** attribute also guards access to an [event_source](../windows/event-source.md).  \n  \n## Example  \n See the [licensed](../windows/licensed.md) example for a sample use of **threading**.  \n  \n## Requirements  \n  \n### Attribute Context  \n  \n|||  \n|-|-|  \n|**Applies to**|**class**, `struct`|  \n|**Repeatable**|No|  \n|**Required attributes**|**coclass**|  \n|**Invalid attributes**|None|  \n  \n For more information about the attribute contexts, see [Attribute Contexts](../windows/attribute-contexts.md).  \n  \n## See Also  \n [COM Attributes](../windows/com-attributes.md)   \n [Typedef, Enum, Union, and Struct Attributes](../windows/typedef-enum-union-and-struct-attributes.md)   \n [Class Attributes](../windows/class-attributes.md)   \n [Multithreading Support for Older Code (Visual C++)](../parallel/multithreading-support-for-older-code-visual-cpp.md)   \n [Neutral Apartments](http://msdn.microsoft.com/library/windows/desktop/ms681813)   \n [Attributes Samples](http://msdn.microsoft.com/en-us/558ebdb2-082f-44dc-b442-d8d33bf7bdb8)"}