{"nodes":[{"pos":[12,52],"content":"CUserToolsManager Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"CUserToolsManager Class | Microsoft Docs","pos":[0,40]}]},{"content":"CUserToolsManager Class","pos":[625,648]},{"content":"Maintains the collection of <bpt id=\"p1\">[</bpt>CUserTool Class<ept id=\"p1\">](../../mfc/reference/cusertool-class.md)</ept> objects in an application.","pos":[649,761],"source":"Maintains the collection of [CUserTool Class](../../mfc/reference/cusertool-class.md) objects in an application."},{"content":"A user tool is a menu item that runs an external application.","pos":[762,823]},{"content":"The <ph id=\"ph1\">`CUserToolsManager`</ph> object enables the user or developer to add new user tools to the application.","pos":[824,926],"source":" The `CUserToolsManager` object enables the user or developer to add new user tools to the application."},{"content":"It supports the execution of the commands associated with user tools, and it also saves information about user tools in the Windows registry.","pos":[927,1068]},{"content":"Syntax","pos":[1077,1083]},{"content":"Members","pos":[1150,1157]},{"content":"Public Constructors","pos":[1167,1186]},{"content":"Name","pos":[1193,1197]},{"content":"Description","pos":[1198,1209]},{"content":"CUserToolsManager::CUserToolsManager","pos":[1248,1284]},{"pos":[1325,1358],"content":"Constructs a <ph id=\"ph1\">`CUserToolsManager`</ph>.","source":"Constructs a `CUserToolsManager`."},{"content":"Public Methods","pos":[1369,1383]},{"content":"Name","pos":[1390,1394]},{"content":"Description","pos":[1395,1406]},{"content":"CUserToolsManager::CreateNewTool","pos":[1445,1477]},{"content":"Creates a new user tool.","pos":[1514,1538]},{"content":"CUserToolsManager::FindTool","pos":[1544,1571]},{"pos":[1603,1699],"content":"Returns the pointer to the <ph id=\"ph1\">`CMFCUserTool`</ph> object that is associated with a specified command ID.","source":"Returns the pointer to the `CMFCUserTool` object that is associated with a specified command ID."},{"content":"CUserToolsManager::GetArgumentsMenuID","pos":[1705,1742]},{"pos":[1784,1908],"content":"Returns the resource ID that is associated with the <bpt id=\"p1\">**</bpt>Arguments<ept id=\"p1\">**</ept> menu on the <bpt id=\"p2\">**</bpt>Tools<ept id=\"p2\">**</ept> tab of the <bpt id=\"p3\">**</bpt>Customize<ept id=\"p3\">**</ept> dialog box.","source":"Returns the resource ID that is associated with the **Arguments** menu on the **Tools** tab of the **Customize** dialog box."},{"content":"CUserToolsManager::GetDefExt","pos":[1914,1942]},{"pos":[1975,2206],"content":"Returns the default extension that the <bpt id=\"p1\">**</bpt>File Open<ept id=\"p1\">**</ept> dialog box ( <bpt id=\"p2\">[</bpt>CFileDialog<ept id=\"p2\">](../../mfc/reference/cfiledialog-class.md#cfiledialog__cfiledialog)</ept>) uses in the <bpt id=\"p3\">**</bpt>Command<ept id=\"p3\">**</ept> field on the <bpt id=\"p4\">**</bpt>Tools<ept id=\"p4\">**</ept> tab of the <bpt id=\"p5\">**</bpt>Customize<ept id=\"p5\">**</ept> dialog box.","source":"Returns the default extension that the **File Open** dialog box ( [CFileDialog](../../mfc/reference/cfiledialog-class.md#cfiledialog__cfiledialog)) uses in the **Command** field on the **Tools** tab of the **Customize** dialog box."},{"content":"CUserToolsManager::GetFilter","pos":[2212,2240]},{"pos":[2273,2479],"content":"Returns the file filter that the <bpt id=\"p1\">**</bpt>File Open<ept id=\"p1\">**</ept> dialog box ( <bpt id=\"p2\">[</bpt>CFileDialog Class<ept id=\"p2\">](../../mfc/reference/cfiledialog-class.md)</ept>) uses in the <bpt id=\"p3\">**</bpt>Command<ept id=\"p3\">**</ept> field on the <bpt id=\"p4\">**</bpt>Tools<ept id=\"p4\">**</ept> tab of the <bpt id=\"p5\">**</bpt>Customize<ept id=\"p5\">**</ept> dialog box.","source":"Returns the file filter that the **File Open** dialog box ( [CFileDialog Class](../../mfc/reference/cfiledialog-class.md)) uses in the **Command** field on the **Tools** tab of the **Customize** dialog box."},{"content":"CUserToolsManager::GetInitialDirMenuID","pos":[2485,2523]},{"pos":[2566,2698],"content":"Returns the resource ID that is associated with the <bpt id=\"p1\">**</bpt>Initial directory<ept id=\"p1\">**</ept> menu on the <bpt id=\"p2\">**</bpt>Tools<ept id=\"p2\">**</ept> tab of the <bpt id=\"p3\">**</bpt>Customize<ept id=\"p3\">**</ept> dialog box.","source":"Returns the resource ID that is associated with the **Initial directory** menu on the **Tools** tab of the **Customize** dialog box."},{"content":"CUserToolsManager::GetMaxTools","pos":[2704,2734]},{"content":"Returns the maximum number of user tools that can be allocated in the application.","pos":[2769,2851]},{"content":"CUserToolsManager::GetToolsEntryCmd","pos":[2857,2892]},{"content":"Returns the command ID of the menu item placeholder for user tools.","pos":[2932,2999]},{"content":"CUserToolsManager::GetUserTools","pos":[3005,3036]},{"content":"Returns a reference to the list of user tools.","pos":[3072,3118]},{"content":"CUserToolsManager::InvokeTool","pos":[3124,3153]},{"content":"Executes an application associated with the user tool that has a specified command ID.","pos":[3187,3273]},{"content":"CUserToolsManager::IsUserToolCmd","pos":[3279,3311]},{"content":"Determines whether a command ID is associated with a user tool.","pos":[3348,3411]},{"content":"CUserToolsManager::LoadState","pos":[3417,3445]},{"content":"Loads information about user tools from the Windows registry.","pos":[3478,3539]},{"content":"CUserToolsManager::MoveToolDown","pos":[3545,3576]},{"content":"Moves the specified user tool down in the list of user tools.","pos":[3612,3673]},{"content":"CUserToolsManager::MoveToolUp","pos":[3679,3708]},{"content":"Moves the specified user tool up in the list of user tools.","pos":[3742,3801]},{"content":"CUserToolsManager::RemoveTool","pos":[3807,3836]},{"content":"Removes the specified user tool from the application.","pos":[3870,3923]},{"content":"CUserToolsManager::SaveState","pos":[3929,3957]},{"content":"Stores information about user tools in the Windows registry.","pos":[3990,4050]},{"content":"CUserToolsManager::SetDefExt","pos":[4056,4084]},{"pos":[4117,4331],"content":"Specifies the default extension that the <bpt id=\"p1\">**</bpt>File Open<ept id=\"p1\">**</ept> dialog box ( <bpt id=\"p2\">[</bpt>CFileDialog Class<ept id=\"p2\">](../../mfc/reference/cfiledialog-class.md)</ept>) uses in the <bpt id=\"p3\">**</bpt>Command<ept id=\"p3\">**</ept> field on the <bpt id=\"p4\">**</bpt>Tools<ept id=\"p4\">**</ept> tab of the <bpt id=\"p5\">**</bpt>Customize<ept id=\"p5\">**</ept> dialog box.","source":"Specifies the default extension that the **File Open** dialog box ( [CFileDialog Class](../../mfc/reference/cfiledialog-class.md)) uses in the **Command** field on the **Tools** tab of the **Customize** dialog box."},{"content":"CUserToolsManager::SetFilter","pos":[4337,4365]},{"pos":[4398,4606],"content":"Specifies the file filter that the <bpt id=\"p1\">**</bpt>File Open<ept id=\"p1\">**</ept> dialog box ( <bpt id=\"p2\">[</bpt>CFileDialog Class<ept id=\"p2\">](../../mfc/reference/cfiledialog-class.md)</ept>) uses in the <bpt id=\"p3\">**</bpt>Command<ept id=\"p3\">**</ept> field on the <bpt id=\"p4\">**</bpt>Tools<ept id=\"p4\">**</ept> tab of the <bpt id=\"p5\">**</bpt>Customize<ept id=\"p5\">**</ept> dialog box.","source":"Specifies the file filter that the **File Open** dialog box ( [CFileDialog Class](../../mfc/reference/cfiledialog-class.md)) uses in the **Command** field on the **Tools** tab of the **Customize** dialog box."},{"content":"Remarks","pos":[4616,4623]},{"content":"To incorporate user tools into your application, you must:","pos":[4627,4685]},{"content":"Reserve a menu item and an associated command ID for a user tool menu entry.","pos":[4695,4771]},{"content":"Reserve a sequential command ID for each user tool that a user can define in your application.","pos":[4781,4875]},{"pos":[4885,5109],"content":"Call the <bpt id=\"p1\">[</bpt>CWinAppEx::EnableUserTools<ept id=\"p1\">](../../mfc/reference/cwinappex-class.md#cwinappex__enableusertools)</ept> method and supply the following parameters: menu command ID, first user tool command ID, and last user tool command ID.","source":"Call the [CWinAppEx::EnableUserTools](../../mfc/reference/cwinappex-class.md#cwinappex__enableusertools) method and supply the following parameters: menu command ID, first user tool command ID, and last user tool command ID."},{"pos":[5116,5191],"content":"There should be only one global <ph id=\"ph1\">`CUserToolsManager`</ph> object per application.","source":"There should be only one global `CUserToolsManager` object per application."},{"content":"For an example of user tools, see the VisualStudioDemo sample project.","pos":[5198,5268]},{"content":"Example","pos":[5277,5284]},{"content":"The following example demonstrates how to retrieve a reference to a <ph id=\"ph1\">`CUserToolsManager`</ph> object and how to create new user tools.","pos":[5288,5416],"source":"The following example demonstrates how to retrieve a reference to a `CUserToolsManager` object and how to create new user tools."},{"content":"This code snippet is part of the <bpt id=\"p1\">[</bpt>Visual Studio Demo sample<ept id=\"p1\">](../../visual-cpp-samples.md)</ept>.","pos":[5417,5507],"source":" This code snippet is part of the [Visual Studio Demo sample](../../visual-cpp-samples.md)."},{"pos":[5525,5552],"content":"NVC_MFC_VisualStudioDemo#38"},{"content":"Inheritance Hierarchy","pos":[5620,5641]},{"content":"CObject","pos":[5646,5653]},{"content":"CUserToolsManager","pos":[5700,5717]},{"content":"Requirements","pos":[5775,5787]},{"pos":[5791,5824],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> afxusertoolsmanager.h","source":"**Header:** afxusertoolsmanager.h"},{"pos":[5883,5915],"content":"CUserToolsManager::CreateNewTool"},{"content":"Creates a new user tool.","pos":[5919,5943]},{"content":"Return Value","pos":[5996,6008]},{"content":"A pointer to the newly created user tool, or <ph id=\"ph1\">`NULL`</ph> if the number of user tools has exceeded the maximum.","pos":[6012,6117],"source":"A pointer to the newly created user tool, or `NULL` if the number of user tools has exceeded the maximum."},{"content":"The returned type is the same as the type that is passed to <ph id=\"ph1\">`CWinAppEx::EnableUserTools`</ph> as the <ph id=\"ph2\">`pToolRTC`</ph> parameter.","pos":[6118,6235],"source":" The returned type is the same as the type that is passed to `CWinAppEx::EnableUserTools` as the `pToolRTC` parameter."},{"content":"Remarks","pos":[6245,6252]},{"pos":[6256,6485],"content":"This method finds the first available menu command ID in the range that is supplied in the call to <bpt id=\"p1\">[</bpt>CWinAppEx::EnableUserTools<ept id=\"p1\">](../../mfc/reference/cwinappex-class.md#cwinappex__enableusertools)</ept> and assigns the user tool this ID.","source":"This method finds the first available menu command ID in the range that is supplied in the call to [CWinAppEx::EnableUserTools](../../mfc/reference/cwinappex-class.md#cwinappex__enableusertools) and assigns the user tool this ID."},{"content":"The method fails if the number of tools has reached the maximum.","pos":[6492,6556]},{"content":"This occurs when all command IDs within the range are assigned to user tools.","pos":[6557,6634]},{"content":"You can retrieve the maximum number of tools by calling <bpt id=\"p1\">[</bpt>CUserToolsManager::GetMaxTools<ept id=\"p1\">](#cusertoolsmanager__getmaxtools)</ept>.","pos":[6635,6757],"source":" You can retrieve the maximum number of tools by calling [CUserToolsManager::GetMaxTools](#cusertoolsmanager__getmaxtools)."},{"content":"You can get access to the tools list by calling the <bpt id=\"p1\">[</bpt>CUserToolsManager::GetUserTools<ept id=\"p1\">](#cusertoolsmanager__getusertools)</ept> method.","pos":[6758,6885],"source":" You can get access to the tools list by calling the [CUserToolsManager::GetUserTools](#cusertoolsmanager__getusertools) method."},{"pos":[6948,6984],"content":"CUserToolsManager::CUserToolsManager"},{"content":"Constructs a <ph id=\"ph1\">`CUserToolsManager`</ph>.","pos":[6988,7021],"source":"Constructs a `CUserToolsManager`."},{"content":"Each application must have at most one user tools manager.","pos":[7022,7080]},{"content":"Parameters","pos":[7348,7358]},{"content":"[in]","pos":[7362,7366]},{"content":"An unsigned integer that the framework uses as a placeholder for the command ID of the user tools menu.","pos":[7388,7491]},{"content":"[in]","pos":[7498,7502]},{"content":"The command ID for the first user tool command.","pos":[7519,7566]},{"content":"[in]","pos":[7573,7577]},{"content":"The command ID for the last user tool command.","pos":[7593,7639]},{"content":"[in]","pos":[7646,7650]},{"content":"The class that <bpt id=\"p1\">[</bpt>CUserToolsManager::CreateNewTool<ept id=\"p1\">](#cusertoolsmanager__createnewtool)</ept> creates.","pos":[7665,7758],"source":" The class that [CUserToolsManager::CreateNewTool](#cusertoolsmanager__createnewtool) creates."},{"content":"By using this class, you can use a derived type of <bpt id=\"p1\">[</bpt>CUserTool Class<ept id=\"p1\">](../../mfc/reference/cusertool-class.md)</ept> instead of the default implementation.","pos":[7759,7906],"source":" By using this class, you can use a derived type of [CUserTool Class](../../mfc/reference/cusertool-class.md) instead of the default implementation."},{"content":"[in]","pos":[7913,7917]},{"content":"The menu resource ID of the arguments popup menu.","pos":[7934,7983]},{"content":"[in]","pos":[7990,7994]},{"content":"The menu resource ID of the initial directory popup menu.","pos":[8015,8072]},{"content":"Remarks","pos":[8082,8089]},{"content":"Do not call this constructor.","pos":[8093,8122]},{"content":"Instead, call <bpt id=\"p1\">[</bpt>CWinAppEx::EnableUserTools<ept id=\"p1\">](../../mfc/reference/cwinappex-class.md#cwinappex__enableusertools)</ept> to enable user tools, and call <bpt id=\"p2\">[</bpt>CWinAppEx::GetUserToolsManager<ept id=\"p2\">](../../mfc/reference/cwinappex-class.md#cwinappex__getusertoolsmanager)</ept> to obtain a pointer to the <ph id=\"ph1\">`CUserToolsManager`</ph>.","pos":[8123,8415],"source":" Instead, call [CWinAppEx::EnableUserTools](../../mfc/reference/cwinappex-class.md#cwinappex__enableusertools) to enable user tools, and call [CWinAppEx::GetUserToolsManager](../../mfc/reference/cwinappex-class.md#cwinappex__getusertoolsmanager) to obtain a pointer to the `CUserToolsManager`."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>User-defined Tools<ept id=\"p1\">](../../mfc/user-defined-tools.md)</ept>.","pos":[8416,8496],"source":" For more information, see [User-defined Tools](../../mfc/user-defined-tools.md)."},{"pos":[8550,8577],"content":"CUserToolsManager::FindTool"},{"pos":[8581,8720],"content":"Returns the pointer to the <bpt id=\"p1\">[</bpt>CUserTool Class<ept id=\"p1\">](../../mfc/reference/cusertool-class.md)</ept> object that is associated with a specified command ID.","source":"Returns the pointer to the [CUserTool Class](../../mfc/reference/cusertool-class.md) object that is associated with a specified command ID."},{"content":"Parameters","pos":[8789,8799]},{"content":"[in]","pos":[8803,8807]},{"content":"A menu command identifier.","pos":[8821,8847]},{"content":"Return Value","pos":[8857,8869]},{"pos":[8873,9005],"content":"A pointer to a <bpt id=\"p1\">[</bpt>CUserTool Class<ept id=\"p1\">](../../mfc/reference/cusertool-class.md)</ept> or <ph id=\"ph1\">`CUserTool`</ph>-derived object if success; otherwise <ph id=\"ph2\">`NULL`</ph>.","source":"A pointer to a [CUserTool Class](../../mfc/reference/cusertool-class.md) or `CUserTool`-derived object if success; otherwise `NULL`."},{"content":"Remarks","pos":[9015,9022]},{"pos":[9026,9226],"content":"When <ph id=\"ph1\">`FindTool`</ph> is successful, the returned type is the same as the type of the <ph id=\"ph2\">`pToolRTC`</ph> parameter to <bpt id=\"p1\">[</bpt>CWinAppEx::EnableUserTools<ept id=\"p1\">](../../mfc/reference/cwinappex-class.md#cwinappex__enableusertools)</ept>.","source":"When `FindTool` is successful, the returned type is the same as the type of the `pToolRTC` parameter to [CWinAppEx::EnableUserTools](../../mfc/reference/cwinappex-class.md#cwinappex__enableusertools)."},{"pos":[9290,9327],"content":"CUserToolsManager::GetArgumentsMenuID"},{"pos":[9331,9455],"content":"Returns the resource ID that is associated with the <bpt id=\"p1\">**</bpt>Arguments<ept id=\"p1\">**</ept> menu on the <bpt id=\"p2\">**</bpt>Tools<ept id=\"p2\">**</ept> tab of the <bpt id=\"p3\">**</bpt>Customize<ept id=\"p3\">**</ept> dialog box.","source":"Returns the resource ID that is associated with the **Arguments** menu on the **Tools** tab of the **Customize** dialog box."},{"content":"Return Value","pos":[9516,9528]},{"content":"The identifier of a menu resource.","pos":[9532,9566]},{"content":"Remarks","pos":[9576,9583]},{"pos":[9587,9746],"content":"The <ph id=\"ph1\">`uArgMenuID`</ph> parameter of <bpt id=\"p1\">[</bpt>CWinAppEx::EnableUserTools<ept id=\"p1\">](../../mfc/reference/cwinappex-class.md#cwinappex__enableusertools)</ept> specifies the ID of the resource.","source":"The `uArgMenuID` parameter of [CWinAppEx::EnableUserTools](../../mfc/reference/cwinappex-class.md#cwinappex__enableusertools) specifies the ID of the resource."},{"pos":[9801,9829],"content":"CUserToolsManager::GetDefExt"},{"pos":[9833,10064],"content":"Returns the default extension that the <bpt id=\"p1\">**</bpt>File Open<ept id=\"p1\">**</ept> dialog box ( <bpt id=\"p2\">[</bpt>CFileDialog<ept id=\"p2\">](../../mfc/reference/cfiledialog-class.md#cfiledialog__cfiledialog)</ept>) uses in the <bpt id=\"p3\">**</bpt>Command<ept id=\"p3\">**</ept> field on the <bpt id=\"p4\">**</bpt>Tools<ept id=\"p4\">**</ept> tab of the <bpt id=\"p5\">**</bpt>Customize<ept id=\"p5\">**</ept> dialog box.","source":"Returns the default extension that the **File Open** dialog box ( [CFileDialog](../../mfc/reference/cfiledialog-class.md#cfiledialog__cfiledialog)) uses in the **Command** field on the **Tools** tab of the **Customize** dialog box."},{"content":"Return Value","pos":[10126,10138]},{"pos":[10142,10206],"content":"A reference to the <ph id=\"ph1\">`CString`</ph> object that contains the extension.","source":"A reference to the `CString` object that contains the extension."},{"pos":[10261,10289],"content":"CUserToolsManager::GetFilter"},{"pos":[10293,10499],"content":"Returns the file filter that the <bpt id=\"p1\">**</bpt>File Open<ept id=\"p1\">**</ept> dialog box ( <bpt id=\"p2\">[</bpt>CFileDialog Class<ept id=\"p2\">](../../mfc/reference/cfiledialog-class.md)</ept>) uses in the <bpt id=\"p3\">**</bpt>Command<ept id=\"p3\">**</ept> field on the <bpt id=\"p4\">**</bpt>Tools<ept id=\"p4\">**</ept> tab of the <bpt id=\"p5\">**</bpt>Customize<ept id=\"p5\">**</ept> dialog box.","source":"Returns the file filter that the **File Open** dialog box ( [CFileDialog Class](../../mfc/reference/cfiledialog-class.md)) uses in the **Command** field on the **Tools** tab of the **Customize** dialog box."},{"content":"Return Value","pos":[10561,10573]},{"pos":[10577,10638],"content":"A reference to the <ph id=\"ph1\">`CString`</ph> object that contains the filter.","source":"A reference to the `CString` object that contains the filter."},{"pos":[10703,10741],"content":"CUserToolsManager::GetInitialDirMenuID"},{"pos":[10745,10877],"content":"Returns the resource ID that is associated with the <bpt id=\"p1\">**</bpt>Initial directory<ept id=\"p1\">**</ept> menu on the <bpt id=\"p2\">**</bpt>Tools<ept id=\"p2\">**</ept> tab of the <bpt id=\"p3\">**</bpt>Customize<ept id=\"p3\">**</ept> dialog box.","source":"Returns the resource ID that is associated with the **Initial directory** menu on the **Tools** tab of the **Customize** dialog box."},{"content":"Return Value","pos":[10939,10951]},{"content":"A menu resource identifier.","pos":[10955,10982]},{"content":"Remarks","pos":[10992,10999]},{"pos":[11003,11165],"content":"The returned ID is specified in the <ph id=\"ph1\">`uInitDirMenuID`</ph> parameter of <bpt id=\"p1\">[</bpt>CWinAppEx::EnableUserTools<ept id=\"p1\">](../../mfc/reference/cwinappex-class.md#cwinappex__enableusertools)</ept>.","source":"The returned ID is specified in the `uInitDirMenuID` parameter of [CWinAppEx::EnableUserTools](../../mfc/reference/cwinappex-class.md#cwinappex__enableusertools)."},{"pos":[11222,11252],"content":"CUserToolsManager::GetMaxTools"},{"content":"Returns the maximum number of user tools that can be allocated in the application.","pos":[11256,11338]},{"content":"Return Value","pos":[11391,11403]},{"content":"The maximum number of user tools that can be allocated.","pos":[11407,11462]},{"content":"Remarks","pos":[11472,11479]},{"content":"Call this method to retrieve the maximum number of tools that can be allocated in the application.","pos":[11483,11581]},{"content":"This number is the number of IDs in the range from the <ph id=\"ph1\">`uiCmdFirst`</ph> through the <ph id=\"ph2\">`uiCmdLast`</ph> parameters that you pass to <bpt id=\"p1\">[</bpt>CWinAppEx::EnableUserTools<ept id=\"p1\">](../../mfc/reference/cwinappex-class.md#cwinappex__enableusertools)</ept>.","pos":[11582,11798],"source":" This number is the number of IDs in the range from the `uiCmdFirst` through the `uiCmdLast` parameters that you pass to [CWinAppEx::EnableUserTools](../../mfc/reference/cwinappex-class.md#cwinappex__enableusertools)."},{"pos":[11860,11895],"content":"CUserToolsManager::GetToolsEntryCmd"},{"content":"Returns the command ID of the menu item placeholder for user tools.","pos":[11899,11966]},{"content":"Return Value","pos":[12025,12037]},{"content":"The command ID of the placeholder.","pos":[12041,12075]},{"content":"Remarks","pos":[12085,12092]},{"content":"To enable user tools, you call <bpt id=\"p1\">[</bpt>CWinAppEx::EnableUserTools<ept id=\"p1\">](../../mfc/reference/cwinappex-class.md#cwinappex__enableusertools)</ept>.","pos":[12096,12223],"source":"To enable user tools, you call [CWinAppEx::EnableUserTools](../../mfc/reference/cwinappex-class.md#cwinappex__enableusertools)."},{"content":"The <ph id=\"ph1\">`uiCmdToolsDummy`</ph> parameter specifies the command ID of the tools entry command.","pos":[12224,12308],"source":" The `uiCmdToolsDummy` parameter specifies the command ID of the tools entry command."},{"content":"This method returns the tools entry command ID.","pos":[12309,12356]},{"content":"Wherever that ID is used in a menu, it is replaced by the list of user tools when the menu appears.","pos":[12357,12456]},{"pos":[12514,12545],"content":"CUserToolsManager::GetUserTools"},{"content":"Returns a reference to the list of user tools.","pos":[12549,12595]},{"content":"Return Value","pos":[12660,12672]},{"pos":[12676,12795],"content":"A const reference to a <bpt id=\"p1\">[</bpt>CObList Class<ept id=\"p1\">](../../mfc/reference/coblist-class.md)</ept> object that contains a list of user tools.","source":"A const reference to a [CObList Class](../../mfc/reference/coblist-class.md) object that contains a list of user tools."},{"content":"Remarks","pos":[12805,12812]},{"content":"Call this method to retrieve a list of user tools that the <bpt id=\"p1\">[</bpt>CUserToolsManager<ept id=\"p1\">](../../mfc/reference/cusertoolsmanager-class.md)</ept> object maintains.","pos":[12816,12960],"source":"Call this method to retrieve a list of user tools that the [CUserToolsManager](../../mfc/reference/cusertoolsmanager-class.md) object maintains."},{"content":"Each user tool is represented by an object of type <bpt id=\"p1\">[</bpt>CUserTool Class<ept id=\"p1\">](../../mfc/reference/cusertool-class.md)</ept> or a type derived from <ph id=\"ph1\">`CUserTool`</ph>.","pos":[12961,13105],"source":" Each user tool is represented by an object of type [CUserTool Class](../../mfc/reference/cusertool-class.md) or a type derived from `CUserTool`."},{"content":"The type is specified by the <ph id=\"ph1\">`pToolRTC`</ph> parameter when you call <bpt id=\"p1\">[</bpt>CWinAppEx::EnableUserTools<ept id=\"p1\">](../../mfc/reference/cwinappex-class.md#cwinappex__enableusertools)</ept> to enable user tools.","pos":[13106,13287],"source":" The type is specified by the `pToolRTC` parameter when you call [CWinAppEx::EnableUserTools](../../mfc/reference/cwinappex-class.md#cwinappex__enableusertools) to enable user tools."},{"pos":[13343,13372],"content":"CUserToolsManager::InvokeTool"},{"content":"Executes an application associated with the user tool that has a specified command ID.","pos":[13376,13462]},{"content":"Parameters","pos":[13518,13528]},{"content":"[in]","pos":[13532,13536]},{"content":"The menu command ID associated with the user tool.","pos":[13550,13600]},{"content":"Return Value","pos":[13610,13622]},{"content":"Nonzero if the command associated with user tool was executed successfully; otherwise 0.","pos":[13626,13714]},{"content":"Remarks","pos":[13724,13731]},{"pos":[13735,13855],"content":"Call this method to execute an application associated with the user tool that has the command ID specified by <ph id=\"ph1\">`uiCmdId`</ph>.","source":"Call this method to execute an application associated with the user tool that has the command ID specified by `uiCmdId`."},{"pos":[13914,13946],"content":"CUserToolsManager::IsUserToolCmd"},{"content":"Determines whether a command ID is associated with a user tool.","pos":[13950,14013]},{"content":"Parameters","pos":[14081,14091]},{"content":"[in]","pos":[14095,14099]},{"content":"A command ID of the menu item.","pos":[14113,14143]},{"content":"Return Value","pos":[14153,14165]},{"content":"Nonzero if a given command ID is associated with a user tool; otherwise 0.","pos":[14169,14243]},{"content":"Remarks","pos":[14253,14260]},{"content":"This method checks whether the given command ID is in the command ID range.","pos":[14264,14339]},{"content":"You specify the range when you call <bpt id=\"p1\">[</bpt>CWinAppEx::EnableUserTools<ept id=\"p1\">](../../mfc/reference/cwinappex-class.md#cwinappex__enableusertools)</ept> to enable user tools.","pos":[14340,14493],"source":" You specify the range when you call [CWinAppEx::EnableUserTools](../../mfc/reference/cwinappex-class.md#cwinappex__enableusertools) to enable user tools."},{"pos":[14548,14576],"content":"CUserToolsManager::LoadState"},{"content":"Loads information about user tools from the Windows registry.","pos":[14580,14641]},{"content":"Parameters","pos":[14712,14722]},{"content":"[in]","pos":[14726,14730]},{"content":"The path of the Windows registry key.","pos":[14752,14789]},{"content":"Return Value","pos":[14799,14811]},{"content":"Nonzero if the state was loaded successfully; otherwise 0.","pos":[14815,14873]},{"content":"Remarks","pos":[14883,14890]},{"pos":[14894,15030],"content":"This method loads the state of the <bpt id=\"p1\">[</bpt>CUserToolsManager<ept id=\"p1\">](../../mfc/reference/cusertoolsmanager-class.md)</ept> object from the Windows registry.","source":"This method loads the state of the [CUserToolsManager](../../mfc/reference/cusertoolsmanager-class.md) object from the Windows registry."},{"content":"Usually, you do not call this method directly.","pos":[15037,15083]},{"content":"<bpt id=\"p1\">[</bpt>CWinAppEx::LoadState<ept id=\"p1\">](../../mfc/reference/cwinappex-class.md#cwinappex__loadstate)</ept> calls it as part of workspace initialization process.","pos":[15084,15221],"source":"[CWinAppEx::LoadState](../../mfc/reference/cwinappex-class.md#cwinappex__loadstate) calls it as part of workspace initialization process."},{"pos":[15279,15310],"content":"CUserToolsManager::MoveToolDown"},{"content":"Moves the specified user tool down in the list of user tools.","pos":[15314,15375]},{"content":"Parameters","pos":[15437,15447]},{"content":"[in]","pos":[15451,15455]},{"content":"Specifies the user tool to move.","pos":[15467,15499]},{"content":"Return Value","pos":[15509,15521]},{"content":"Nonzero if the user tool was moved down successfully; otherwise 0.","pos":[15525,15591]},{"content":"Remarks","pos":[15601,15608]},{"pos":[15612,15731],"content":"The method fails if the tool that the <ph id=\"ph1\">`pTool`</ph> specifies is not in the internal list or if the tool is last in the list.","source":"The method fails if the tool that the `pTool` specifies is not in the internal list or if the tool is last in the list."},{"pos":[15787,15816],"content":"CUserToolsManager::MoveToolUp"},{"content":"Moves the specified user tool up in the list of user tools.","pos":[15820,15879]},{"content":"Parameters","pos":[15939,15949]},{"content":"[in]","pos":[15953,15957]},{"content":"Specifies the user tool to move.","pos":[15969,16001]},{"content":"Return Value","pos":[16011,16023]},{"content":"Nonzero if the user tool was moved up successfully; otherwise 0.","pos":[16027,16091]},{"content":"Remarks","pos":[16101,16108]},{"pos":[16112,16256],"content":"The method fails if the tool that the <ph id=\"ph1\">`pTool`</ph> parameter specifies is not in the internal list or if the tool is the first tool item in the list.","source":"The method fails if the tool that the `pTool` parameter specifies is not in the internal list or if the tool is the first tool item in the list."},{"pos":[16312,16341],"content":"CUserToolsManager::RemoveTool"},{"content":"Removes the specified user tool from the application.","pos":[16345,16398]},{"content":"Parameters","pos":[16458,16468]},{"content":"[in, out]","pos":[16472,16481]},{"content":"A pointer to a user tool to be removed.","pos":[16493,16532]},{"content":"Return Value","pos":[16542,16554]},{"content":"if the tool is successfully removed.","pos":[16565,16601]},{"content":"Otherwise, <ph id=\"ph1\">`FALSE`</ph>.","pos":[16602,16621],"source":" Otherwise, `FALSE`."},{"content":"Remarks","pos":[16631,16638]},{"pos":[16642,16707],"content":"If the tool is successfully removed, this method deletes <ph id=\"ph1\">`pTool`</ph>.","source":"If the tool is successfully removed, this method deletes `pTool`."},{"pos":[16762,16790],"content":"CUserToolsManager::SaveState"},{"content":"Stores information about user tools in the Windows registry.","pos":[16794,16854]},{"content":"Parameters","pos":[16925,16935]},{"content":"[in]","pos":[16939,16943]},{"content":"A path to the Windows registry key.","pos":[16965,17000]},{"content":"Return Value","pos":[17010,17022]},{"content":"Nonzero if the state was saved successfully; otherwise 0.","pos":[17026,17083]},{"content":"Remarks","pos":[17093,17100]},{"pos":[17104,17246],"content":"The method stores the current state of the <bpt id=\"p1\">[</bpt>CUserToolsManager<ept id=\"p1\">](../../mfc/reference/cusertoolsmanager-class.md)</ept> object in the Windows registry.","source":"The method stores the current state of the [CUserToolsManager](../../mfc/reference/cusertoolsmanager-class.md) object in the Windows registry."},{"pos":[17253,17483],"content":"Usually, you do not need to call this method directly, <bpt id=\"p1\">[</bpt>CWinAppEx::SaveState<ept id=\"p1\">](../../mfc/reference/cwinappex-class.md#cwinappex__savestate)</ept> calls it automatically as a part of the workspace serialization process of the application.","source":"Usually, you do not need to call this method directly, [CWinAppEx::SaveState](../../mfc/reference/cwinappex-class.md#cwinappex__savestate) calls it automatically as a part of the workspace serialization process of the application."},{"pos":[17538,17566],"content":"CUserToolsManager::SetDefExt"},{"pos":[17570,17784],"content":"Specifies the default extension that the <bpt id=\"p1\">**</bpt>File Open<ept id=\"p1\">**</ept> dialog box ( <bpt id=\"p2\">[</bpt>CFileDialog Class<ept id=\"p2\">](../../mfc/reference/cfiledialog-class.md)</ept>) uses in the <bpt id=\"p3\">**</bpt>Command<ept id=\"p3\">**</ept> field on the <bpt id=\"p4\">**</bpt>Tools<ept id=\"p4\">**</ept> tab of the <bpt id=\"p5\">**</bpt>Customize<ept id=\"p5\">**</ept> dialog box.","source":"Specifies the default extension that the **File Open** dialog box ( [CFileDialog Class](../../mfc/reference/cfiledialog-class.md)) uses in the **Command** field on the **Tools** tab of the **Customize** dialog box."},{"content":"Parameters","pos":[17851,17861]},{"content":"[in]","pos":[17865,17869]},{"content":"A text string that contains the default file name extension.","pos":[17885,17945]},{"content":"Remarks","pos":[17955,17962]},{"content":"Call this method to specify a default file name extension in the <bpt id=\"p1\">**</bpt>File Open<ept id=\"p1\">**</ept> dialog box, which is displayed when the user selects an application to associate with the user tool.","pos":[17966,18145],"source":"Call this method to specify a default file name extension in the **File Open** dialog box, which is displayed when the user selects an application to associate with the user tool."},{"content":"The default is \"exe\".","pos":[18146,18167]},{"pos":[18222,18250],"content":"CUserToolsManager::SetFilter"},{"pos":[18254,18462],"content":"Specifies the file filter that the <bpt id=\"p1\">**</bpt>File Open<ept id=\"p1\">**</ept> dialog box ( <bpt id=\"p2\">[</bpt>CFileDialog Class<ept id=\"p2\">](../../mfc/reference/cfiledialog-class.md)</ept>) uses in the <bpt id=\"p3\">**</bpt>Command<ept id=\"p3\">**</ept> field on the <bpt id=\"p4\">**</bpt>Tools<ept id=\"p4\">**</ept> tab of the <bpt id=\"p5\">**</bpt>Customize<ept id=\"p5\">**</ept> dialog box.","source":"Specifies the file filter that the **File Open** dialog box ( [CFileDialog Class](../../mfc/reference/cfiledialog-class.md)) uses in the **Command** field on the **Tools** tab of the **Customize** dialog box."},{"content":"Parameters","pos":[18529,18539]},{"content":"[in]","pos":[18543,18547]},{"content":"Specifies the filter.","pos":[18563,18584]},{"content":"See Also","pos":[18593,18601]},{"content":"Hierarchy Chart","pos":[18606,18621]},{"content":"Classes","pos":[18658,18665]},{"content":"CWinAppEx Class","pos":[18708,18723]},{"content":"CUserTool Class","pos":[18770,18785]}],"content":"---\ntitle: \"CUserToolsManager Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"CUserToolsManager\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"CUserToolsManager class\"\nms.assetid: bdfa37ae-efca-4616-abb5-9d0dcd2d335b\ncaps.latest.revision: 26\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# CUserToolsManager Class\nMaintains the collection of [CUserTool Class](../../mfc/reference/cusertool-class.md) objects in an application. A user tool is a menu item that runs an external application. The `CUserToolsManager` object enables the user or developer to add new user tools to the application. It supports the execution of the commands associated with user tools, and it also saves information about user tools in the Windows registry.  \n  \n## Syntax  \n  \n```  \nclass CUserToolsManager : public CObject  \n```  \n  \n## Members  \n  \n### Public Constructors  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CUserToolsManager::CUserToolsManager](#cusertoolsmanager__cusertoolsmanager)|Constructs a `CUserToolsManager`.|  \n  \n### Public Methods  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CUserToolsManager::CreateNewTool](#cusertoolsmanager__createnewtool)|Creates a new user tool.|  \n|[CUserToolsManager::FindTool](#cusertoolsmanager__findtool)|Returns the pointer to the `CMFCUserTool` object that is associated with a specified command ID.|  \n|[CUserToolsManager::GetArgumentsMenuID](#cusertoolsmanager__getargumentsmenuid)|Returns the resource ID that is associated with the **Arguments** menu on the **Tools** tab of the **Customize** dialog box.|  \n|[CUserToolsManager::GetDefExt](#cusertoolsmanager__getdefext)|Returns the default extension that the **File Open** dialog box ( [CFileDialog](../../mfc/reference/cfiledialog-class.md#cfiledialog__cfiledialog)) uses in the **Command** field on the **Tools** tab of the **Customize** dialog box.|  \n|[CUserToolsManager::GetFilter](#cusertoolsmanager__getfilter)|Returns the file filter that the **File Open** dialog box ( [CFileDialog Class](../../mfc/reference/cfiledialog-class.md)) uses in the **Command** field on the **Tools** tab of the **Customize** dialog box.|  \n|[CUserToolsManager::GetInitialDirMenuID](#cusertoolsmanager__getinitialdirmenuid)|Returns the resource ID that is associated with the **Initial directory** menu on the **Tools** tab of the **Customize** dialog box.|  \n|[CUserToolsManager::GetMaxTools](#cusertoolsmanager__getmaxtools)|Returns the maximum number of user tools that can be allocated in the application.|  \n|[CUserToolsManager::GetToolsEntryCmd](#cusertoolsmanager__gettoolsentrycmd)|Returns the command ID of the menu item placeholder for user tools.|  \n|[CUserToolsManager::GetUserTools](#cusertoolsmanager__getusertools)|Returns a reference to the list of user tools.|  \n|[CUserToolsManager::InvokeTool](#cusertoolsmanager__invoketool)|Executes an application associated with the user tool that has a specified command ID.|  \n|[CUserToolsManager::IsUserToolCmd](#cusertoolsmanager__isusertoolcmd)|Determines whether a command ID is associated with a user tool.|  \n|[CUserToolsManager::LoadState](#cusertoolsmanager__loadstate)|Loads information about user tools from the Windows registry.|  \n|[CUserToolsManager::MoveToolDown](#cusertoolsmanager__movetooldown)|Moves the specified user tool down in the list of user tools.|  \n|[CUserToolsManager::MoveToolUp](#cusertoolsmanager__movetoolup)|Moves the specified user tool up in the list of user tools.|  \n|[CUserToolsManager::RemoveTool](#cusertoolsmanager__removetool)|Removes the specified user tool from the application.|  \n|[CUserToolsManager::SaveState](#cusertoolsmanager__savestate)|Stores information about user tools in the Windows registry.|  \n|[CUserToolsManager::SetDefExt](#cusertoolsmanager__setdefext)|Specifies the default extension that the **File Open** dialog box ( [CFileDialog Class](../../mfc/reference/cfiledialog-class.md)) uses in the **Command** field on the **Tools** tab of the **Customize** dialog box.|  \n|[CUserToolsManager::SetFilter](#cusertoolsmanager__setfilter)|Specifies the file filter that the **File Open** dialog box ( [CFileDialog Class](../../mfc/reference/cfiledialog-class.md)) uses in the **Command** field on the **Tools** tab of the **Customize** dialog box.|  \n  \n## Remarks  \n To incorporate user tools into your application, you must:  \n  \n 1. Reserve a menu item and an associated command ID for a user tool menu entry.  \n  \n 2. Reserve a sequential command ID for each user tool that a user can define in your application.  \n  \n 3. Call the [CWinAppEx::EnableUserTools](../../mfc/reference/cwinappex-class.md#cwinappex__enableusertools) method and supply the following parameters: menu command ID, first user tool command ID, and last user tool command ID.  \n  \n There should be only one global `CUserToolsManager` object per application.  \n  \n For an example of user tools, see the VisualStudioDemo sample project.  \n  \n## Example  \n The following example demonstrates how to retrieve a reference to a `CUserToolsManager` object and how to create new user tools. This code snippet is part of the [Visual Studio Demo sample](../../visual-cpp-samples.md).  \n  \n [!code-cpp[NVC_MFC_VisualStudioDemo#38](../../mfc/codesnippet/cpp/cusertoolsmanager-class_1.cpp)]  \n  \n## Inheritance Hierarchy  \n [CObject](../../mfc/reference/cobject-class.md)  \n  \n [CUserToolsManager](../../mfc/reference/cusertoolsmanager-class.md)  \n  \n## Requirements  \n **Header:** afxusertoolsmanager.h  \n  \n##  <a name=\"cusertoolsmanager__createnewtool\"></a>  CUserToolsManager::CreateNewTool  \n Creates a new user tool.  \n  \n```  \nCUserTool* CreateNewTool();\n```  \n  \n### Return Value  \n A pointer to the newly created user tool, or `NULL` if the number of user tools has exceeded the maximum. The returned type is the same as the type that is passed to `CWinAppEx::EnableUserTools` as the `pToolRTC` parameter.  \n  \n### Remarks  \n This method finds the first available menu command ID in the range that is supplied in the call to [CWinAppEx::EnableUserTools](../../mfc/reference/cwinappex-class.md#cwinappex__enableusertools) and assigns the user tool this ID.  \n  \n The method fails if the number of tools has reached the maximum. This occurs when all command IDs within the range are assigned to user tools. You can retrieve the maximum number of tools by calling [CUserToolsManager::GetMaxTools](#cusertoolsmanager__getmaxtools). You can get access to the tools list by calling the [CUserToolsManager::GetUserTools](#cusertoolsmanager__getusertools) method.  \n  \n##  <a name=\"cusertoolsmanager__cusertoolsmanager\"></a>  CUserToolsManager::CUserToolsManager  \n Constructs a `CUserToolsManager`. Each application must have at most one user tools manager.  \n  \n```  \nCUserToolsManager();\n\n \nCUserToolsManager(\n    const UINT uiCmdToolsDummy,  \n    const UINT uiCmdFirst,  \n    const UINT uiCmdLast,  \n    CRuntimeClass* pToolRTC=RUNTIME_CLASS(CUserTool),  \n    UINT uArgMenuID=0,  \n    UINT uInitDirMenuID=0);\n```  \n  \n### Parameters  \n [in] `uiCmdToolsDummy`  \n An unsigned integer that the framework uses as a placeholder for the command ID of the user tools menu.  \n  \n [in] `uiCmdFirst`  \n The command ID for the first user tool command.  \n  \n [in] `uiCmdLast`  \n The command ID for the last user tool command.  \n  \n [in] `pToolRTC`  \n The class that [CUserToolsManager::CreateNewTool](#cusertoolsmanager__createnewtool) creates. By using this class, you can use a derived type of [CUserTool Class](../../mfc/reference/cusertool-class.md) instead of the default implementation.  \n  \n [in] `uArgMenuID`  \n The menu resource ID of the arguments popup menu.  \n  \n [in] `uInitDirMenuID`  \n The menu resource ID of the initial directory popup menu.  \n  \n### Remarks  \n Do not call this constructor. Instead, call [CWinAppEx::EnableUserTools](../../mfc/reference/cwinappex-class.md#cwinappex__enableusertools) to enable user tools, and call [CWinAppEx::GetUserToolsManager](../../mfc/reference/cwinappex-class.md#cwinappex__getusertoolsmanager) to obtain a pointer to the `CUserToolsManager`. For more information, see [User-defined Tools](../../mfc/user-defined-tools.md).  \n  \n##  <a name=\"cusertoolsmanager__findtool\"></a>  CUserToolsManager::FindTool  \n Returns the pointer to the [CUserTool Class](../../mfc/reference/cusertool-class.md) object that is associated with a specified command ID.  \n  \n```  \nCUserTool* FindTool(UINT uiCmdId) const;\n\n \n```  \n  \n### Parameters  \n [in] `uiCmdId`  \n A menu command identifier.  \n  \n### Return Value  \n A pointer to a [CUserTool Class](../../mfc/reference/cusertool-class.md) or `CUserTool`-derived object if success; otherwise `NULL`.  \n  \n### Remarks  \n When `FindTool` is successful, the returned type is the same as the type of the `pToolRTC` parameter to [CWinAppEx::EnableUserTools](../../mfc/reference/cwinappex-class.md#cwinappex__enableusertools).  \n  \n##  <a name=\"cusertoolsmanager__getargumentsmenuid\"></a>  CUserToolsManager::GetArgumentsMenuID  \n Returns the resource ID that is associated with the **Arguments** menu on the **Tools** tab of the **Customize** dialog box.  \n  \n```  \nUINT GetArgumentsMenuID() const;\n\n \n```  \n  \n### Return Value  \n The identifier of a menu resource.  \n  \n### Remarks  \n The `uArgMenuID` parameter of [CWinAppEx::EnableUserTools](../../mfc/reference/cwinappex-class.md#cwinappex__enableusertools) specifies the ID of the resource.  \n  \n##  <a name=\"cusertoolsmanager__getdefext\"></a>  CUserToolsManager::GetDefExt  \n Returns the default extension that the **File Open** dialog box ( [CFileDialog](../../mfc/reference/cfiledialog-class.md#cfiledialog__cfiledialog)) uses in the **Command** field on the **Tools** tab of the **Customize** dialog box.  \n  \n```  \nconst CString& GetDefExt() const;\n\n \n```  \n  \n### Return Value  \n A reference to the `CString` object that contains the extension.  \n  \n##  <a name=\"cusertoolsmanager__getfilter\"></a>  CUserToolsManager::GetFilter  \n Returns the file filter that the **File Open** dialog box ( [CFileDialog Class](../../mfc/reference/cfiledialog-class.md)) uses in the **Command** field on the **Tools** tab of the **Customize** dialog box.  \n  \n```  \nconst CString& GetFilter() const;\n\n \n```  \n  \n### Return Value  \n A reference to the `CString` object that contains the filter.  \n  \n##  <a name=\"cusertoolsmanager__getinitialdirmenuid\"></a>  CUserToolsManager::GetInitialDirMenuID  \n Returns the resource ID that is associated with the **Initial directory** menu on the **Tools** tab of the **Customize** dialog box.  \n  \n```  \nUINT GetInitialDirMenuID() const;\n\n \n```  \n  \n### Return Value  \n A menu resource identifier.  \n  \n### Remarks  \n The returned ID is specified in the `uInitDirMenuID` parameter of [CWinAppEx::EnableUserTools](../../mfc/reference/cwinappex-class.md#cwinappex__enableusertools).  \n  \n##  <a name=\"cusertoolsmanager__getmaxtools\"></a>  CUserToolsManager::GetMaxTools  \n Returns the maximum number of user tools that can be allocated in the application.  \n  \n```  \nint GetMaxTools() const;\n\n \n```  \n  \n### Return Value  \n The maximum number of user tools that can be allocated.  \n  \n### Remarks  \n Call this method to retrieve the maximum number of tools that can be allocated in the application. This number is the number of IDs in the range from the `uiCmdFirst` through the `uiCmdLast` parameters that you pass to [CWinAppEx::EnableUserTools](../../mfc/reference/cwinappex-class.md#cwinappex__enableusertools).  \n  \n##  <a name=\"cusertoolsmanager__gettoolsentrycmd\"></a>  CUserToolsManager::GetToolsEntryCmd  \n Returns the command ID of the menu item placeholder for user tools.  \n  \n```  \nUINT GetToolsEntryCmd() const;\n\n \n```  \n  \n### Return Value  \n The command ID of the placeholder.  \n  \n### Remarks  \n To enable user tools, you call [CWinAppEx::EnableUserTools](../../mfc/reference/cwinappex-class.md#cwinappex__enableusertools). The `uiCmdToolsDummy` parameter specifies the command ID of the tools entry command. This method returns the tools entry command ID. Wherever that ID is used in a menu, it is replaced by the list of user tools when the menu appears.  \n  \n##  <a name=\"cusertoolsmanager__getusertools\"></a>  CUserToolsManager::GetUserTools  \n Returns a reference to the list of user tools.  \n  \n```  \nconst CObList& GetUserTools() const;\n\n \n```  \n  \n### Return Value  \n A const reference to a [CObList Class](../../mfc/reference/coblist-class.md) object that contains a list of user tools.  \n  \n### Remarks  \n Call this method to retrieve a list of user tools that the [CUserToolsManager](../../mfc/reference/cusertoolsmanager-class.md) object maintains. Each user tool is represented by an object of type [CUserTool Class](../../mfc/reference/cusertool-class.md) or a type derived from `CUserTool`. The type is specified by the `pToolRTC` parameter when you call [CWinAppEx::EnableUserTools](../../mfc/reference/cwinappex-class.md#cwinappex__enableusertools) to enable user tools.  \n  \n##  <a name=\"cusertoolsmanager__invoketool\"></a>  CUserToolsManager::InvokeTool  \n Executes an application associated with the user tool that has a specified command ID.  \n  \n```  \nBOOL InvokeTool(UINT uiCmdId);\n```  \n  \n### Parameters  \n [in] `uiCmdId`  \n The menu command ID associated with the user tool.  \n  \n### Return Value  \n Nonzero if the command associated with user tool was executed successfully; otherwise 0.  \n  \n### Remarks  \n Call this method to execute an application associated with the user tool that has the command ID specified by `uiCmdId`.  \n  \n##  <a name=\"cusertoolsmanager__isusertoolcmd\"></a>  CUserToolsManager::IsUserToolCmd  \n Determines whether a command ID is associated with a user tool.  \n  \n```  \nBOOL IsUserToolCmd(UINT uiCmdId) const;\n\n \n```  \n  \n### Parameters  \n [in] `uiCmdId`  \n A command ID of the menu item.  \n  \n### Return Value  \n Nonzero if a given command ID is associated with a user tool; otherwise 0.  \n  \n### Remarks  \n This method checks whether the given command ID is in the command ID range. You specify the range when you call [CWinAppEx::EnableUserTools](../../mfc/reference/cwinappex-class.md#cwinappex__enableusertools) to enable user tools.  \n  \n##  <a name=\"cusertoolsmanager__loadstate\"></a>  CUserToolsManager::LoadState  \n Loads information about user tools from the Windows registry.  \n  \n```  \nBOOL LoadState(LPCTSTR lpszProfileName=NULL);\n```  \n  \n### Parameters  \n [in] `lpszProfileName`  \n The path of the Windows registry key.  \n  \n### Return Value  \n Nonzero if the state was loaded successfully; otherwise 0.  \n  \n### Remarks  \n This method loads the state of the [CUserToolsManager](../../mfc/reference/cusertoolsmanager-class.md) object from the Windows registry.  \n  \n Usually, you do not call this method directly. [CWinAppEx::LoadState](../../mfc/reference/cwinappex-class.md#cwinappex__loadstate) calls it as part of workspace initialization process.  \n  \n##  <a name=\"cusertoolsmanager__movetooldown\"></a>  CUserToolsManager::MoveToolDown  \n Moves the specified user tool down in the list of user tools.  \n  \n```  \nBOOL MoveToolDown(CUserTool* pTool);\n```  \n  \n### Parameters  \n [in] `pTool`  \n Specifies the user tool to move.  \n  \n### Return Value  \n Nonzero if the user tool was moved down successfully; otherwise 0.  \n  \n### Remarks  \n The method fails if the tool that the `pTool` specifies is not in the internal list or if the tool is last in the list.  \n  \n##  <a name=\"cusertoolsmanager__movetoolup\"></a>  CUserToolsManager::MoveToolUp  \n Moves the specified user tool up in the list of user tools.  \n  \n```  \nBOOL MoveToolUp(CUserTool* pTool);\n```  \n  \n### Parameters  \n [in] `pTool`  \n Specifies the user tool to move.  \n  \n### Return Value  \n Nonzero if the user tool was moved up successfully; otherwise 0.  \n  \n### Remarks  \n The method fails if the tool that the `pTool` parameter specifies is not in the internal list or if the tool is the first tool item in the list.  \n  \n##  <a name=\"cusertoolsmanager__removetool\"></a>  CUserToolsManager::RemoveTool  \n Removes the specified user tool from the application.  \n  \n```  \nBOOL RemoveTool(CUserTool* pTool);\n```  \n  \n### Parameters  \n [in, out] `pTool`  \n A pointer to a user tool to be removed.  \n  \n### Return Value  \n `TRUE` if the tool is successfully removed. Otherwise, `FALSE`.  \n  \n### Remarks  \n If the tool is successfully removed, this method deletes `pTool`.  \n  \n##  <a name=\"cusertoolsmanager__savestate\"></a>  CUserToolsManager::SaveState  \n Stores information about user tools in the Windows registry.  \n  \n```  \nBOOL SaveState(LPCTSTR lpszProfileName=NULL);\n```  \n  \n### Parameters  \n [in] `lpszProfileName`  \n A path to the Windows registry key.  \n  \n### Return Value  \n Nonzero if the state was saved successfully; otherwise 0.  \n  \n### Remarks  \n The method stores the current state of the [CUserToolsManager](../../mfc/reference/cusertoolsmanager-class.md) object in the Windows registry.  \n  \n Usually, you do not need to call this method directly, [CWinAppEx::SaveState](../../mfc/reference/cwinappex-class.md#cwinappex__savestate) calls it automatically as a part of the workspace serialization process of the application.  \n  \n##  <a name=\"cusertoolsmanager__setdefext\"></a>  CUserToolsManager::SetDefExt  \n Specifies the default extension that the **File Open** dialog box ( [CFileDialog Class](../../mfc/reference/cfiledialog-class.md)) uses in the **Command** field on the **Tools** tab of the **Customize** dialog box.  \n  \n```  \nvoid SetDefExt(const CString& strDefExt);\n```  \n  \n### Parameters  \n [in] `strDefExt`  \n A text string that contains the default file name extension.  \n  \n### Remarks  \n Call this method to specify a default file name extension in the **File Open** dialog box, which is displayed when the user selects an application to associate with the user tool. The default is \"exe\".  \n  \n##  <a name=\"cusertoolsmanager__setfilter\"></a>  CUserToolsManager::SetFilter  \n Specifies the file filter that the **File Open** dialog box ( [CFileDialog Class](../../mfc/reference/cfiledialog-class.md)) uses in the **Command** field on the **Tools** tab of the **Customize** dialog box.  \n  \n```  \nvoid SetFilter(const CString& strFilter);\n```  \n  \n### Parameters  \n [in] `strFilter`  \n Specifies the filter.  \n  \n## See Also  \n [Hierarchy Chart](../../mfc/hierarchy-chart.md)   \n [Classes](../../mfc/reference/mfc-classes.md)   \n [CWinAppEx Class](../../mfc/reference/cwinappex-class.md)   \n [CUserTool Class](../../mfc/reference/cusertool-class.md)\n"}