{"nodes":[{"pos":[12,36],"content":"conform | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"conform | Microsoft Docs","pos":[0,24]}]},{"content":"conform","pos":[676,683]},{"content":"C++ Specific","pos":[686,698]},{"pos":[707,848],"content":"Specifies the run-time behavior of the <bpt id=\"p1\">[</bpt>/Zc:forScope<ept id=\"p1\">](../build/reference/zc-forscope-force-conformance-in-for-loop-scope.md)</ept> compiler option.","source":"Specifies the run-time behavior of the [/Zc:forScope](../build/reference/zc-forscope-force-conformance-in-for-loop-scope.md) compiler option."},{"content":"Syntax","pos":[857,863]},{"content":"Parameters","pos":[974,984]},{"content":"name","pos":[989,993]},{"content":"Specifies the name of the compiler option to be modified.","pos":[998,1055]},{"content":"The only valid <bpt id=\"p1\">*</bpt>name<ept id=\"p1\">*</ept> is <ph id=\"ph1\">`forScope`</ph>.","pos":[1056,1092],"source":" The only valid *name* is `forScope`."},{"content":"<bpt id=\"p1\">**</bpt>show<ept id=\"p1\">**</ept> (optional)","pos":[1099,1118],"source":"**show** (optional)"},{"content":"Causes the current setting of <bpt id=\"p1\">*</bpt>name<ept id=\"p1\">*</ept> (true or false) to be displayed by means of a warning message during compilation.","pos":[1122,1240],"source":" Causes the current setting of *name* (true or false) to be displayed by means of a warning message during compilation."},{"content":"For example, <ph id=\"ph1\">`#pragma conform(forScope, show)`</ph>.","pos":[1241,1288],"source":" For example, `#pragma conform(forScope, show)`."},{"content":"<bpt id=\"p1\">**</bpt>on, off<ept id=\"p1\">**</ept>(optional)","pos":[1295,1316],"source":"**on, off**(optional)"},{"content":"Setting <bpt id=\"p1\">*</bpt>name<ept id=\"p1\">*</ept> to <bpt id=\"p2\">**</bpt>on<ept id=\"p2\">**</ept> enables the <bpt id=\"p3\">[</bpt>/Zc:forScope<ept id=\"p3\">](../build/reference/zc-forscope-force-conformance-in-for-loop-scope.md)</ept> compiler option.","pos":[1320,1459],"source":" Setting *name* to **on** enables the [/Zc:forScope](../build/reference/zc-forscope-force-conformance-in-for-loop-scope.md) compiler option."},{"content":"The default is <bpt id=\"p1\">**</bpt>off<ept id=\"p1\">**</ept>.","pos":[1460,1483],"source":" The default is **off**."},{"content":"<bpt id=\"p1\">**</bpt>push<ept id=\"p1\">**</ept> (optional)","pos":[1490,1509],"source":"**push** (optional)"},{"content":"Pushes the current value of <bpt id=\"p1\">*</bpt>name<ept id=\"p1\">*</ept> onto the internal compiler stack.","pos":[1513,1581],"source":" Pushes the current value of *name* onto the internal compiler stack."},{"content":"If you specify <bpt id=\"p1\">*</bpt>identifier<ept id=\"p1\">*</ept>, you can specify the <bpt id=\"p2\">**</bpt>on<ept id=\"p2\">**</ept> or <bpt id=\"p3\">**</bpt>off<ept id=\"p3\">**</ept> value for <bpt id=\"p4\">*</bpt>name<ept id=\"p4\">*</ept> to be pushed onto the stack.","pos":[1582,1694],"source":" If you specify *identifier*, you can specify the **on** or **off** value for *name* to be pushed onto the stack."},{"content":"For example, <ph id=\"ph1\">`#pragma conform(forScope, push, myname, on)`</ph>.","pos":[1695,1754],"source":" For example, `#pragma conform(forScope, push, myname, on)`."},{"content":"<bpt id=\"p1\">**</bpt>pop<ept id=\"p1\">**</ept> (optional)","pos":[1761,1779],"source":"**pop** (optional)"},{"content":"Sets the value of <bpt id=\"p1\">*</bpt>name<ept id=\"p1\">*</ept> to the value at the top of the internal compiler stack and then pops the stack.","pos":[1783,1887],"source":" Sets the value of *name* to the value at the top of the internal compiler stack and then pops the stack."},{"content":"If identifier is specified with <bpt id=\"p1\">**</bpt>pop<ept id=\"p1\">**</ept>, the stack will be popped back until it finds the record with <bpt id=\"p2\">*</bpt>identifier<ept id=\"p2\">*</ept>, which will also be popped; the current value for <bpt id=\"p3\">*</bpt>name<ept id=\"p3\">*</ept> in the next record on the stack becomes the new value for <bpt id=\"p4\">*</bpt>name<ept id=\"p4\">*</ept>.","pos":[1888,2125],"source":" If identifier is specified with **pop**, the stack will be popped back until it finds the record with *identifier*, which will also be popped; the current value for *name* in the next record on the stack becomes the new value for *name*."},{"content":"If you specify pop with an <bpt id=\"p1\">*</bpt>identifier<ept id=\"p1\">*</ept> that is not in a record on the stack, the <bpt id=\"p2\">**</bpt>pop<ept id=\"p2\">**</ept> is ignored.","pos":[2126,2227],"source":" If you specify pop with an *identifier* that is not in a record on the stack, the **pop** is ignored."},{"content":"<bpt id=\"p1\">*</bpt>identifier<ept id=\"p1\">*</ept>(optional)","pos":[2234,2256],"source":"*identifier*(optional)"},{"content":"Can be included with a <bpt id=\"p1\">**</bpt>push<ept id=\"p1\">**</ept> or <bpt id=\"p2\">**</bpt>pop<ept id=\"p2\">**</ept> command.","pos":[2260,2311],"source":" Can be included with a **push** or **pop** command."},{"content":"If <bpt id=\"p1\">*</bpt>identifier<ept id=\"p1\">*</ept> is used, then an <bpt id=\"p2\">**</bpt>on<ept id=\"p2\">**</ept> or <bpt id=\"p3\">**</bpt>off<ept id=\"p3\">**</ept> specifier can also be used.","pos":[2312,2390],"source":" If *identifier* is used, then an **on** or **off** specifier can also be used."},{"content":"Example","pos":[2399,2406]},{"content":"See Also","pos":[2835,2843]},{"content":"Pragma Directives and the __Pragma Keyword","pos":[2848,2890]}],"content":"---\ntitle: \"conform | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"conform_CPP\"\n  - \"vc-pragma.conform\"\ndev_langs: \n  - \"C++\"\n  - \"C\"\nhelpviewer_keywords: \n  - \"conform pragma\"\n  - \"forScope conform pragma\"\n  - \"pragmas, conform\"\nms.assetid: 71b3e174-c53c-4bfc-adf3-af39b1554191\ncaps.latest.revision: 5\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# conform\n**C++ Specific**  \n  \n Specifies the run-time behavior of the [/Zc:forScope](../build/reference/zc-forscope-force-conformance-in-for-loop-scope.md) compiler option.  \n  \n## Syntax  \n  \n```  \n#pragma conform(name [, show ] [, on | off ] [ [, push | pop ] [, identifier ] ] )  \n```  \n  \n#### Parameters  \n *name*  \n Specifies the name of the compiler option to be modified. The only valid *name* is `forScope`.  \n  \n **show** (optional)  \n Causes the current setting of *name* (true or false) to be displayed by means of a warning message during compilation. For example, `#pragma conform(forScope, show)`.  \n  \n **on, off**(optional)  \n Setting *name* to **on** enables the [/Zc:forScope](../build/reference/zc-forscope-force-conformance-in-for-loop-scope.md) compiler option. The default is **off**.  \n  \n **push** (optional)  \n Pushes the current value of *name* onto the internal compiler stack. If you specify *identifier*, you can specify the **on** or **off** value for *name* to be pushed onto the stack. For example, `#pragma conform(forScope, push, myname, on)`.  \n  \n **pop** (optional)  \n Sets the value of *name* to the value at the top of the internal compiler stack and then pops the stack. If identifier is specified with **pop**, the stack will be popped back until it finds the record with *identifier*, which will also be popped; the current value for *name* in the next record on the stack becomes the new value for *name*. If you specify pop with an *identifier* that is not in a record on the stack, the **pop** is ignored.  \n  \n *identifier*(optional)  \n Can be included with a **push** or **pop** command. If *identifier* is used, then an **on** or **off** specifier can also be used.  \n  \n## Example  \n  \n```  \n// pragma_directive_conform.cpp  \n// compile with: /W1  \n// C4811 expected  \n#pragma conform(forScope, show)  \n#pragma conform(forScope, push, x, on)  \n#pragma conform(forScope, push, x1, off)  \n#pragma conform(forScope, push, x2, off)  \n#pragma conform(forScope, push, x3, off)  \n#pragma conform(forScope, show)  \n#pragma conform(forScope, pop, x1)  \n#pragma conform(forScope, show)  \n  \nint main() {}  \n```  \n  \n## See Also  \n [Pragma Directives and the __Pragma Keyword](../preprocessor/pragma-directives-and-the-pragma-keyword.md)"}