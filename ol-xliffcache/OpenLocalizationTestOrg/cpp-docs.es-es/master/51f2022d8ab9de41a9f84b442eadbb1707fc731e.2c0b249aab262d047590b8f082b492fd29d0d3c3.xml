{"nodes":[{"pos":[12,46],"content":"CGlobalHeap Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"CGlobalHeap Class | Microsoft Docs","pos":[0,34]}]},{"content":"CGlobalHeap Class","pos":[652,669]},{"pos":[670,784],"content":"This class implements <bpt id=\"p1\">[</bpt>IAtlMemMgr<ept id=\"p1\">](../../atl/reference/iatlmemmgr-class.md)</ept> using the Win32 global heap functions.","source":"This class implements [IAtlMemMgr](../../atl/reference/iatlmemmgr-class.md) using the Win32 global heap functions."},{"pos":[792,902],"content":"[!IMPORTANT]\n This class and its members cannot be used in applications that execute in the Windows Runtime.","leadings":["","> "],"nodes":[{"content":"This class and its members cannot be used in applications that execute in the Windows Runtime.","pos":[14,108]}]},{"content":"Syntax","pos":[911,917]},{"content":"Members","pos":[977,984]},{"content":"Public Methods","pos":[994,1008]},{"content":"Name","pos":[1015,1019]},{"content":"Description","pos":[1020,1031]},{"content":"CGlobalHeap::Allocate","pos":[1070,1091]},{"content":"Call this method to allocate a block of memory.","pos":[1117,1164]},{"content":"CGlobalHeap::Free","pos":[1170,1187]},{"content":"Call this method to free a block of memory allocated by this memory manager.","pos":[1209,1285]},{"content":"CGlobalHeap::GetSize","pos":[1291,1311]},{"content":"Call this method to get the allocated size of a memory block allocated by this memory manager.","pos":[1336,1430]},{"content":"CGlobalHeap::Reallocate","pos":[1436,1459]},{"content":"Call this method to reallocate memory allocated by this memory manager.","pos":[1487,1558]},{"content":"Remarks","pos":[1568,1575]},{"pos":[1593,1670],"content":"implements memory allocation functions using the Win32 global heap functions."},{"pos":[1678,2078],"content":"[!NOTE]\n The global heap functions are slower than other memory management functions and do not provide as many features. Therefore, new applications should use the [heap functions](http://msdn.microsoft.com/library/windows/desktop/aa366711). These are available in the [CWin32Heap](../../atl/reference/cwin32heap-class.md) class. Global functions are still used by DDE and the clipboard functions.","leadings":["","> "],"nodes":[{"content":" The global heap functions are slower than other memory management functions and do not provide as many features. Therefore, new applications should use the [heap functions](http://msdn.microsoft.com/library/windows/desktop/aa366711). These are available in the [CWin32Heap](../../atl/reference/cwin32heap-class.md) class. Global functions are still used by DDE and the clipboard functions.","pos":[8,398],"nodes":[{"content":"The global heap functions are slower than other memory management functions and do not provide as many features.","pos":[1,113]},{"content":"Therefore, new applications should use the <bpt id=\"p1\">[</bpt>heap functions<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/aa366711)</ept>.","pos":[114,234],"source":" Therefore, new applications should use the [heap functions](http://msdn.microsoft.com/library/windows/desktop/aa366711)."},{"content":"These are available in the <bpt id=\"p1\">[</bpt>CWin32Heap<ept id=\"p1\">](../../atl/reference/cwin32heap-class.md)</ept> class.","pos":[235,322],"source":" These are available in the [CWin32Heap](../../atl/reference/cwin32heap-class.md) class."},{"content":"Global functions are still used by DDE and the clipboard functions.","pos":[323,390]}]}]},{"content":"Example","pos":[2087,2094]},{"pos":[2098,2172],"content":"See the example for <bpt id=\"p1\">[</bpt>IAtlMemMgr<ept id=\"p1\">](../../atl/reference/iatlmemmgr-class.md)</ept>.","source":"See the example for [IAtlMemMgr](../../atl/reference/iatlmemmgr-class.md)."},{"content":"Inheritance Hierarchy","pos":[2181,2202]},{"content":"Requirements","pos":[2247,2259]},{"pos":[2263,2283],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> atlmem.h","source":"**Header:** atlmem.h"},{"pos":[2331,2352],"content":"CGlobalHeap::Allocate"},{"content":"Call this method to allocate a block of memory.","pos":[2356,2403]},{"content":"Parameters","pos":[2495,2505]},{"content":"The requested number of bytes in the new memory block.","pos":[2521,2575]},{"content":"Return Value","pos":[2585,2597]},{"content":"Returns a pointer to the start of the newly allocated memory block.","pos":[2601,2668]},{"content":"Remarks","pos":[2678,2685]},{"pos":[2689,2833],"content":"Call <bpt id=\"p1\">[</bpt>CGlobalHeap::Free<ept id=\"p1\">](#cglobalheap__free)</ept> or <bpt id=\"p2\">[</bpt>CGlobalHeap::Reallocate<ept id=\"p2\">](#cglobalheap__reallocate)</ept> to free the memory allocated by this method.","source":"Call [CGlobalHeap::Free](#cglobalheap__free) or [CGlobalHeap::Reallocate](#cglobalheap__reallocate) to free the memory allocated by this method."},{"pos":[2840,2972],"content":"Implemented using <bpt id=\"p1\">[</bpt>GlobalAlloc<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/aa366574)</ept> with a flag parameter of <bpt id=\"p2\">**</bpt>GMEM_FIXED<ept id=\"p2\">**</ept>.","source":"Implemented using [GlobalAlloc](http://msdn.microsoft.com/library/windows/desktop/aa366574) with a flag parameter of **GMEM_FIXED**."},{"pos":[3016,3033],"content":"CGlobalHeap::Free"},{"content":"Call this method to free a block of memory allocated by this memory manager.","pos":[3037,3113]},{"content":"Parameters","pos":[3172,3182]},{"content":"Pointer to memory previously allocated by this memory manager.","pos":[3193,3255]},{"content":"NULL is a valid value and does nothing.","pos":[3256,3295]},{"content":"Remarks","pos":[3305,3312]},{"pos":[3316,3407],"content":"Implemented using <bpt id=\"p1\">[</bpt>GlobalFree<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/aa366579)</ept>.","source":"Implemented using [GlobalFree](http://msdn.microsoft.com/library/windows/desktop/aa366579)."},{"pos":[3454,3474],"content":"CGlobalHeap::GetSize"},{"content":"Call this method to get the allocated size of a memory block allocated by this memory manager.","pos":[3478,3572]},{"content":"Parameters","pos":[3636,3646]},{"content":"Pointer to memory previously allocated by this memory manager.","pos":[3657,3719]},{"content":"Return Value","pos":[3729,3741]},{"content":"Returns the size of the allocated memory block in bytes.","pos":[3745,3801]},{"content":"Remarks","pos":[3811,3818]},{"pos":[3822,3913],"content":"Implemented using <bpt id=\"p1\">[</bpt>GlobalSize<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/aa366593)</ept>.","source":"Implemented using [GlobalSize](http://msdn.microsoft.com/library/windows/desktop/aa366593)."},{"pos":[3963,3986],"content":"CGlobalHeap::Reallocate"},{"content":"Call this method to reallocate memory allocated by this memory manager.","pos":[3990,4061]},{"content":"Parameters","pos":[4170,4180]},{"content":"Pointer to memory previously allocated by this memory manager.","pos":[4191,4253]},{"content":"The requested number of bytes in the new memory block.","pos":[4272,4326]},{"content":"Return Value","pos":[4336,4348]},{"content":"Returns a pointer to the start of the newly allocated memory block.","pos":[4352,4419]},{"content":"Remarks","pos":[4429,4436]},{"pos":[4440,4529],"content":"Call <bpt id=\"p1\">[</bpt>CGlobalHeap::Free<ept id=\"p1\">](#cglobalheap__free)</ept> to free the memory allocated by this method.","source":"Call [CGlobalHeap::Free](#cglobalheap__free) to free the memory allocated by this method."},{"pos":[4536,4630],"content":"Implemented using <bpt id=\"p1\">[</bpt>GlobalReAlloc<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/aa366590)</ept>.","source":"Implemented using [GlobalReAlloc](http://msdn.microsoft.com/library/windows/desktop/aa366590)."},{"content":"See Also","pos":[4639,4647]},{"content":"Class Overview","pos":[4652,4666]},{"content":"CComHeap Class","pos":[4706,4720]},{"content":"CWin32Heap Class","pos":[4766,4782]},{"content":"CLocalHeap Class","pos":[4830,4846]},{"content":"CCRTHeap Class","pos":[4894,4908]},{"content":"IAtlMemMgr Class","pos":[4954,4970]}],"content":"---\ntitle: \"CGlobalHeap Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"ATL.CGlobalHeap\"\n  - \"ATL::CGlobalHeap\"\n  - \"CGlobalHeap\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"CGlobalHeap class\"\nms.assetid: e348d838-3aa7-4bee-a1b3-cd000c99f834\ncaps.latest.revision: 19\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# CGlobalHeap Class\nThis class implements [IAtlMemMgr](../../atl/reference/iatlmemmgr-class.md) using the Win32 global heap functions.  \n  \n> [!IMPORTANT]\n>  This class and its members cannot be used in applications that execute in the Windows Runtime.  \n  \n## Syntax  \n  \n```\nclass CGlobalHeap : public IAtlMemMgr\n```  \n  \n## Members  \n  \n### Public Methods  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CGlobalHeap::Allocate](#cglobalheap__allocate)|Call this method to allocate a block of memory.|  \n|[CGlobalHeap::Free](#cglobalheap__free)|Call this method to free a block of memory allocated by this memory manager.|  \n|[CGlobalHeap::GetSize](#cglobalheap__getsize)|Call this method to get the allocated size of a memory block allocated by this memory manager.|  \n|[CGlobalHeap::Reallocate](#cglobalheap__reallocate)|Call this method to reallocate memory allocated by this memory manager.|  \n  \n## Remarks  \n `CGlobalHeap` implements memory allocation functions using the Win32 global heap functions.  \n  \n> [!NOTE]\n>  The global heap functions are slower than other memory management functions and do not provide as many features. Therefore, new applications should use the [heap functions](http://msdn.microsoft.com/library/windows/desktop/aa366711). These are available in the [CWin32Heap](../../atl/reference/cwin32heap-class.md) class. Global functions are still used by DDE and the clipboard functions.  \n  \n## Example  \n See the example for [IAtlMemMgr](../../atl/reference/iatlmemmgr-class.md).  \n  \n## Inheritance Hierarchy  \n `IAtlMemMgr`  \n  \n `CGlobalHeap`  \n  \n## Requirements  \n **Header:** atlmem.h  \n  \n##  <a name=\"cglobalheap__allocate\"></a>  CGlobalHeap::Allocate  \n Call this method to allocate a block of memory.  \n  \n```\nvirtual __declspec(allocator) void* Allocate(size_t nBytes) throw();\n```  \n  \n### Parameters  \n `nBytes`  \n The requested number of bytes in the new memory block.  \n  \n### Return Value  \n Returns a pointer to the start of the newly allocated memory block.  \n  \n### Remarks  \n Call [CGlobalHeap::Free](#cglobalheap__free) or [CGlobalHeap::Reallocate](#cglobalheap__reallocate) to free the memory allocated by this method.  \n  \n Implemented using [GlobalAlloc](http://msdn.microsoft.com/library/windows/desktop/aa366574) with a flag parameter of **GMEM_FIXED**.  \n  \n##  <a name=\"cglobalheap__free\"></a>  CGlobalHeap::Free  \n Call this method to free a block of memory allocated by this memory manager.  \n  \n```\nvirtual void Free(void* p) throw();\n```  \n  \n### Parameters  \n `p`  \n Pointer to memory previously allocated by this memory manager. NULL is a valid value and does nothing.  \n  \n### Remarks  \n Implemented using [GlobalFree](http://msdn.microsoft.com/library/windows/desktop/aa366579).  \n  \n##  <a name=\"cglobalheap__getsize\"></a>  CGlobalHeap::GetSize  \n Call this method to get the allocated size of a memory block allocated by this memory manager.  \n  \n```\nvirtual size_t GetSize(void* p) throw();\n```  \n  \n### Parameters  \n `p`  \n Pointer to memory previously allocated by this memory manager.  \n  \n### Return Value  \n Returns the size of the allocated memory block in bytes.  \n  \n### Remarks  \n Implemented using [GlobalSize](http://msdn.microsoft.com/library/windows/desktop/aa366593).  \n  \n##  <a name=\"cglobalheap__reallocate\"></a>  CGlobalHeap::Reallocate  \n Call this method to reallocate memory allocated by this memory manager.  \n  \n```\nvirtual __declspec(allocator) void* Reallocate(\n    void* p,  size_t nBytes) throw();\n```  \n  \n### Parameters  \n `p`  \n Pointer to memory previously allocated by this memory manager.  \n  \n `nBytes`  \n The requested number of bytes in the new memory block.  \n  \n### Return Value  \n Returns a pointer to the start of the newly allocated memory block.  \n  \n### Remarks  \n Call [CGlobalHeap::Free](#cglobalheap__free) to free the memory allocated by this method.  \n  \n Implemented using [GlobalReAlloc](http://msdn.microsoft.com/library/windows/desktop/aa366590).  \n  \n## See Also  \n [Class Overview](../../atl/atl-class-overview.md)   \n [CComHeap Class](../../atl/reference/ccomheap-class.md)   \n [CWin32Heap Class](../../atl/reference/cwin32heap-class.md)   \n [CLocalHeap Class](../../atl/reference/clocalheap-class.md)   \n [CCRTHeap Class](../../atl/reference/ccrtheap-class.md)   \n [IAtlMemMgr Class](../../atl/reference/iatlmemmgr-class.md)\n"}