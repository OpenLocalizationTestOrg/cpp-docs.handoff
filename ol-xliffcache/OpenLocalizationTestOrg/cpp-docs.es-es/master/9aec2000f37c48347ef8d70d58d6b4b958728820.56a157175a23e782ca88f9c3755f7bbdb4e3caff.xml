{"nodes":[{"pos":[12,65],"content":"Server Registration Global Functions | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Server Registration Global Functions | Microsoft Docs","pos":[0,53]}]},{"pos":[548,584],"content":"Server Registration Global Functions","linkify":"Server Registration Global Functions","nodes":[{"content":"Server Registration Global Functions","pos":[0,36]}]},{"content":"These functions provide support for registering and unregistering server objects in the object map.","pos":[585,684]},{"pos":[692,859],"content":"[!IMPORTANT]\n The functions listed in the following table cannot be used in applications that execute in the [!INCLUDE[wrt](../../atl/reference/includes/wrt_md.md)].","leadings":["","> "],"nodes":[{"content":"The functions listed in the following table cannot be used in applications that execute in the <ph id=\"ph1\">[!INCLUDE[wrt](../../atl/reference/includes/wrt_md.md)]</ph>.","pos":[14,165],"source":" The functions listed in the following table cannot be used in applications that execute in the [!INCLUDE[wrt](../../atl/reference/includes/wrt_md.md)]."}]},{"pos":[880,937],"content":"<bpt id=\"p1\">[</bpt>AtlComModuleRegisterServer<ept id=\"p1\">](#atlcommoduleregisterserver)</ept>","source":"[AtlComModuleRegisterServer](#atlcommoduleregisterserver)"},{"content":"This function is called to register every object in the object map.","pos":[938,1005]},{"pos":[1010,1071],"content":"<bpt id=\"p1\">[</bpt>AtlComModuleUnregisterServer<ept id=\"p1\">](#atlcommoduleunregisterserver)</ept>","source":"[AtlComModuleUnregisterServer](#atlcommoduleunregisterserver)"},{"content":"This function is called to unregister every object in the object map.","pos":[1072,1141]},{"pos":[1146,1215],"content":"<bpt id=\"p1\">[</bpt>AtlComModuleRegisterClassObjects<ept id=\"p1\">](#atlcommoduleregisterclassobjects)</ept>","source":"[AtlComModuleRegisterClassObjects](#atlcommoduleregisterclassobjects)"},{"content":"This function is called to register class objects.","pos":[1216,1266]},{"pos":[1271,1336],"content":"<bpt id=\"p1\">[</bpt>AtlComModuleRevokeClassObjects<ept id=\"p1\">](#atlcommodulerevokeclassobjects)</ept>","source":"[AtlComModuleRevokeClassObjects](#atlcommodulerevokeclassobjects)"},{"content":"This function is called to revoke class objects from a COM module.","pos":[1337,1403]},{"pos":[1408,1465],"content":"<bpt id=\"p1\">[</bpt>AtlComModuleGetClassObject<ept id=\"p1\">](#atlcommodulegetclassobject)</ept>","source":"[AtlComModuleGetClassObject](#atlcommodulegetclassobject)"},{"content":"This function is called to get the class object.","pos":[1466,1514]},{"pos":[1525,1594],"content":"<bpt id=\"p1\">&lt;a name=\"atlcommoduleregisterserver\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  AtlComModuleRegisterServer","linkify":"<a name=\"atlcommoduleregisterserver\"></a>  AtlComModuleRegisterServer","source":"<a name=\"atlcommoduleregisterserver\"></a>  AtlComModuleRegisterServer"},{"content":"This function is called to register every object in the object map.","pos":[1598,1665]},{"pos":[1817,1827],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Pointer to the COM module.","pos":[1847,1873]},{"content":"TRUE if the type library is to be registered.","pos":[1897,1942]},{"content":"Points to the CLSID of the object to be registered.","pos":[1961,2012]},{"content":"If NULL, all objects in the object map will be registered.","pos":[2013,2071]},{"pos":[2081,2093],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Returns S_OK on success, or an error HRESULT on failure.","pos":[2097,2153]},{"pos":[2163,2170],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"<ph id=\"ph1\">`AtlComModuleRegisterServer`</ph> walks the ATL autogenerated object map and registers each object in the map.","pos":[2174,2279],"source":"`AtlComModuleRegisterServer` walks the ATL autogenerated object map and registers each object in the map."},{"content":"If <ph id=\"ph1\">`pCLSID`</ph> is not NULL, then only the object referred to by <ph id=\"ph2\">`pCLSID`</ph> is registered; otherwise all of the objects are registered.","pos":[2280,2409],"source":" If `pCLSID` is not NULL, then only the object referred to by `pCLSID` is registered; otherwise all of the objects are registered."},{"pos":[2416,2529],"content":"This function is called by <bpt id=\"p1\">[</bpt>CAtlComModule::RegisterServer<ept id=\"p1\">](catlcommodule-class.md#catlcommodule__registerserver)</ept>.","source":"This function is called by [CAtlComModule::RegisterServer](catlcommodule-class.md#catlcommodule__registerserver)."},{"pos":[2540,2613],"content":"<bpt id=\"p1\">&lt;a name=\"atlcommoduleunregisterserver\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  AtlComModuleUnregisterServer","linkify":"<a name=\"atlcommoduleunregisterserver\"></a>  AtlComModuleUnregisterServer","source":"<a name=\"atlcommoduleunregisterserver\"></a>  AtlComModuleUnregisterServer"},{"content":"This function is called to unregister every object in the object map.","pos":[2617,2686]},{"pos":[2843,2853],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Pointer to the COM module.","pos":[2873,2899]},{"content":"TRUE if the type library is to be registered.","pos":[2925,2970]},{"content":"Points to the CLSID of the object to be unregistered.","pos":[2989,3042]},{"content":"If NULL all objects in the object map will be unregistered.","pos":[3043,3102]},{"pos":[3112,3124],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Returns S_OK on success, or an error HRESULT on failure.","pos":[3128,3184]},{"pos":[3194,3201],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"<ph id=\"ph1\">`AtlComModuleUnregisterServer`</ph> walks the ATL object map and unregisters each object in the map.","pos":[3205,3300],"source":"`AtlComModuleUnregisterServer` walks the ATL object map and unregisters each object in the map."},{"content":"If <ph id=\"ph1\">`pCLSID`</ph> is not NULL, then only the object referred to by <ph id=\"ph2\">`pCLSID`</ph> is unregistered; otherwise all of the objects are unregistered.","pos":[3301,3434],"source":" If `pCLSID` is not NULL, then only the object referred to by `pCLSID` is unregistered; otherwise all of the objects are unregistered."},{"pos":[3441,3558],"content":"This function is called by <bpt id=\"p1\">[</bpt>CAtlComModule::UnregisterServer<ept id=\"p1\">](catlcommodule-class.md#catlcommodule__unregisterserver)</ept>.","source":"This function is called by [CAtlComModule::UnregisterServer](catlcommodule-class.md#catlcommodule__unregisterserver)."},{"pos":[3569,3650],"content":"<bpt id=\"p1\">&lt;a name=\"atlcommoduleregisterclassobjects\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  AtlComModuleRegisterClassObjects","linkify":"<a name=\"atlcommoduleregisterclassobjects\"></a>  AtlComModuleRegisterClassObjects","source":"<a name=\"atlcommoduleregisterclassobjects\"></a>  AtlComModuleRegisterClassObjects"},{"content":"This function is called to register class objects.","pos":[3654,3704]},{"pos":[3858,3868],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Pointer to the COM module.","pos":[3888,3914]},{"content":"Specifies the context in which the class object is to be run.","pos":[3939,4000]},{"content":"Possible values are CLSCTX_INPROC_SERVER, CLSCTX_INPROC_HANDLER, or CLSCTX_LOCAL_SERVER.","pos":[4001,4089]},{"content":"See <bpt id=\"p1\">[</bpt>CLSCTX<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms693716)</ept> for more details.","pos":[4090,4180],"source":" See [CLSCTX](http://msdn.microsoft.com/library/windows/desktop/ms693716) for more details."},{"content":"Determines the connection types to the class object.","pos":[4200,4252]},{"content":"Possible values are REGCLS_SINGLEUSE, REGCLS_MULTIPLEUSE, or REGCLS_MULTI_SEPARATE.","pos":[4253,4336]},{"content":"See <bpt id=\"p1\">[</bpt>REGCLS<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms679697)</ept> for more details.","pos":[4337,4427],"source":" See [REGCLS](http://msdn.microsoft.com/library/windows/desktop/ms679697) for more details."},{"pos":[4437,4449],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Returns S_OK on success, or an error HRESULT on failure.","pos":[4453,4509]},{"pos":[4519,4526],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[4530,4782],"content":"This helper function is utilized by <bpt id=\"p1\">[</bpt>CComModule::RegisterClassObjects<ept id=\"p1\">](ccommodule-class.md#ccommodule__registerclassobjects)</ept> (obsolete in ATL 7.0) and <bpt id=\"p2\">[</bpt>CAtlExeModuleT::RegisterClassObjects<ept id=\"p2\">](catlexemodulet-class.md#catlexemodulet__registerclassobjects)</ept>.","source":"This helper function is utilized by [CComModule::RegisterClassObjects](ccommodule-class.md#ccommodule__registerclassobjects) (obsolete in ATL 7.0) and [CAtlExeModuleT::RegisterClassObjects](catlexemodulet-class.md#catlexemodulet__registerclassobjects)."},{"pos":[4793,4870],"content":"<bpt id=\"p1\">&lt;a name=\"atlcommodulerevokeclassobjects\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  AtlComModuleRevokeClassObjects","linkify":"<a name=\"atlcommodulerevokeclassobjects\"></a>  AtlComModuleRevokeClassObjects","source":"<a name=\"atlcommodulerevokeclassobjects\"></a>  AtlComModuleRevokeClassObjects"},{"content":"This function is called to remove the class factory/factories from the Running Object Table.","pos":[4874,4966]},{"pos":[5070,5080],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Pointer to the COM module.","pos":[5100,5126]},{"pos":[5136,5148],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Returns S_OK on success, or an error HRESULT on failure.","pos":[5152,5208]},{"pos":[5218,5225],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[5229,5473],"content":"This helper function is utilized by <bpt id=\"p1\">[</bpt>CComModule::RevokeClassObjects<ept id=\"p1\">](ccommodule-class.md#ccommodule__revokeclassobjects)</ept> (obsolete in ATL 7.0) and <bpt id=\"p2\">[</bpt>CAtlExeModuleT::RevokeClassObjects<ept id=\"p2\">](catlexemodulet-class.md#catlexemodulet__revokeclassobjects)</ept>.","source":"This helper function is utilized by [CComModule::RevokeClassObjects](ccommodule-class.md#ccommodule__revokeclassobjects) (obsolete in ATL 7.0) and [CAtlExeModuleT::RevokeClassObjects](catlexemodulet-class.md#catlexemodulet__revokeclassobjects)."},{"pos":[5484,5553],"content":"<bpt id=\"p1\">&lt;a name=\"atlcommodulegetclassobject\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  AtlComModuleGetClassObject","linkify":"<a name=\"atlcommodulegetclassobject\"></a>  AtlComModuleGetClassObject","source":"<a name=\"atlcommodulegetclassobject\"></a>  AtlComModuleGetClassObject"},{"content":"This function is called to return the class factory.","pos":[5557,5609]},{"pos":[5769,5779],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Pointer to the COM module.","pos":[5799,5825]},{"content":"The CLSID of the object to be created.","pos":[5844,5882]},{"content":"The IID of the requested interface.","pos":[5899,5934]},{"content":"A pointer to the interface pointer identified by <ph id=\"ph1\">`riid`</ph>.","pos":[5950,6006],"source":" A pointer to the interface pointer identified by `riid`."},{"content":"If the object does not support this interface, <ph id=\"ph1\">`ppv`</ph> is set to NULL.","pos":[6007,6075],"source":" If the object does not support this interface, `ppv` is set to NULL."},{"pos":[6085,6097],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Returns S_OK on success, or an error HRESULT on failure.","pos":[6101,6157]},{"pos":[6167,6174],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[6178,6406],"content":"This helper function is utilized by <bpt id=\"p1\">[</bpt>CComModule::GetClassObject<ept id=\"p1\">](ccommodule-class.md#ccommodule__getclassobject)</ept> (obsolete in ATL 7.0) and <bpt id=\"p2\">[</bpt>CAtlDllModuleT::GetClassObject<ept id=\"p2\">](catldllmodulet-class.md#catldllmodulet__getclassobject)</ept>.","source":"This helper function is utilized by [CComModule::GetClassObject](ccommodule-class.md#ccommodule__getclassobject) (obsolete in ATL 7.0) and [CAtlDllModuleT::GetClassObject](catldllmodulet-class.md#catldllmodulet__getclassobject)."},{"pos":[6416,6424],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"pos":[6428,6477],"content":"<bpt id=\"p1\">[</bpt>Functions<ept id=\"p1\">](../../atl/reference/atl-functions.md)</ept>","source":"[Functions](../../atl/reference/atl-functions.md)"}],"content":"---\ntitle: \"Server Registration Global Functions | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\ndev_langs: \n  - \"C++\"\nms.assetid: c2f0a35d-857c-4538-a44d-c4ea0db63b06\ncaps.latest.revision: 19\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Server Registration Global Functions\nThese functions provide support for registering and unregistering server objects in the object map.  \n  \n> [!IMPORTANT]\n>  The functions listed in the following table cannot be used in applications that execute in the [!INCLUDE[wrt](../../atl/reference/includes/wrt_md.md)].  \n  \n|||  \n|-|-|  \n|[AtlComModuleRegisterServer](#atlcommoduleregisterserver)|This function is called to register every object in the object map.|  \n|[AtlComModuleUnregisterServer](#atlcommoduleunregisterserver)|This function is called to unregister every object in the object map.|  \n|[AtlComModuleRegisterClassObjects](#atlcommoduleregisterclassobjects)|This function is called to register class objects.|  \n|[AtlComModuleRevokeClassObjects](#atlcommodulerevokeclassobjects)|This function is called to revoke class objects from a COM module.|  \n|[AtlComModuleGetClassObject](#atlcommodulegetclassobject)|This function is called to get the class object.|  \n  \n##  <a name=\"atlcommoduleregisterserver\"></a>  AtlComModuleRegisterServer  \n This function is called to register every object in the object map.  \n  \n  \n```\nATLINLINE ATLAPI AtlComModuleRegisterServer(\n    _ATL_COM_MODULE* pComModule,\n    BOOL bRegTypeLib,\n    const CLSID* pCLSID);\n```  \n  \n### Parameters  \n `pComModule`  \n Pointer to the COM module.  \n  \n `bRegTypeLib`  \n TRUE if the type library is to be registered.  \n  \n `pCLSID`  \n Points to the CLSID of the object to be registered. If NULL, all objects in the object map will be registered.  \n  \n### Return Value  \n Returns S_OK on success, or an error HRESULT on failure.  \n  \n### Remarks  \n `AtlComModuleRegisterServer` walks the ATL autogenerated object map and registers each object in the map. If `pCLSID` is not NULL, then only the object referred to by `pCLSID` is registered; otherwise all of the objects are registered.  \n  \n This function is called by [CAtlComModule::RegisterServer](catlcommodule-class.md#catlcommodule__registerserver).  \n\n  \n##  <a name=\"atlcommoduleunregisterserver\"></a>  AtlComModuleUnregisterServer  \n This function is called to unregister every object in the object map.  \n   \n  \n```\nATLINLINE ATLAPI AtlComModuleUnregisterServer(\n    _ATL_COM_MODULE* pComModule,\n    BOOL bUnRegTypeLib,\n    const CLSID* pCLSID);\n```  \n  \n### Parameters  \n `pComModule`  \n Pointer to the COM module.  \n  \n `bUnRegTypeLib`  \n TRUE if the type library is to be registered.  \n  \n `pCLSID`  \n Points to the CLSID of the object to be unregistered. If NULL all objects in the object map will be unregistered.  \n  \n### Return Value  \n Returns S_OK on success, or an error HRESULT on failure.  \n  \n### Remarks  \n `AtlComModuleUnregisterServer` walks the ATL object map and unregisters each object in the map. If `pCLSID` is not NULL, then only the object referred to by `pCLSID` is unregistered; otherwise all of the objects are unregistered.  \n  \n This function is called by [CAtlComModule::UnregisterServer](catlcommodule-class.md#catlcommodule__unregisterserver).  \n\n  \n##  <a name=\"atlcommoduleregisterclassobjects\"></a>  AtlComModuleRegisterClassObjects  \n This function is called to register class objects.  \n  \n  \n```\nATLINLINE ATLAPI AtlComModuleRegisterClassObjects(\n    _ATL_COM_MODULE* pComModule,\n    DWORD dwClsContext,\n    DWORD dwFlags);\n```  \n  \n### Parameters  \n `pComModule`  \n Pointer to the COM module.  \n  \n `dwClsContext`  \n Specifies the context in which the class object is to be run. Possible values are CLSCTX_INPROC_SERVER, CLSCTX_INPROC_HANDLER, or CLSCTX_LOCAL_SERVER. See [CLSCTX](http://msdn.microsoft.com/library/windows/desktop/ms693716) for more details.  \n  \n `dwFlags`  \n Determines the connection types to the class object. Possible values are REGCLS_SINGLEUSE, REGCLS_MULTIPLEUSE, or REGCLS_MULTI_SEPARATE. See [REGCLS](http://msdn.microsoft.com/library/windows/desktop/ms679697) for more details.  \n  \n### Return Value  \n Returns S_OK on success, or an error HRESULT on failure.  \n  \n### Remarks  \n This helper function is utilized by [CComModule::RegisterClassObjects](ccommodule-class.md#ccommodule__registerclassobjects) (obsolete in ATL 7.0) and [CAtlExeModuleT::RegisterClassObjects](catlexemodulet-class.md#catlexemodulet__registerclassobjects).  \n\n  \n##  <a name=\"atlcommodulerevokeclassobjects\"></a>  AtlComModuleRevokeClassObjects  \n This function is called to remove the class factory/factories from the Running Object Table.  \n  \n  \n```\nATLINLINE ATLAPI AtlComModuleRevokeClassObjects(_ATL_COM_MODULE* pComModule);\n```  \n  \n### Parameters  \n `pComModule`  \n Pointer to the COM module.  \n  \n### Return Value  \n Returns S_OK on success, or an error HRESULT on failure.  \n  \n### Remarks  \n This helper function is utilized by [CComModule::RevokeClassObjects](ccommodule-class.md#ccommodule__revokeclassobjects) (obsolete in ATL 7.0) and [CAtlExeModuleT::RevokeClassObjects](catlexemodulet-class.md#catlexemodulet__revokeclassobjects).  \n\n  \n##  <a name=\"atlcommodulegetclassobject\"></a>  AtlComModuleGetClassObject  \n This function is called to return the class factory.  \n  \n  \n```\nATLINLINE ATLAPI AtlComModuleGetClassObject(\n    _ATL_COM_MODULE* pComModule,\n    REFCLSID rclsid,\n    REFIID riid,\n    LPVOID* ppv);\n```  \n  \n### Parameters  \n `pComModule`  \n Pointer to the COM module.  \n  \n `rclsid`  \n The CLSID of the object to be created.  \n  \n `riid`  \n The IID of the requested interface.  \n  \n `ppv`  \n A pointer to the interface pointer identified by `riid`. If the object does not support this interface, `ppv` is set to NULL.  \n  \n### Return Value  \n Returns S_OK on success, or an error HRESULT on failure.  \n  \n### Remarks  \n This helper function is utilized by [CComModule::GetClassObject](ccommodule-class.md#ccommodule__getclassobject) (obsolete in ATL 7.0) and [CAtlDllModuleT::GetClassObject](catldllmodulet-class.md#catldllmodulet__getclassobject).  \n\n  \n## See Also  \n [Functions](../../atl/reference/atl-functions.md)\n"}