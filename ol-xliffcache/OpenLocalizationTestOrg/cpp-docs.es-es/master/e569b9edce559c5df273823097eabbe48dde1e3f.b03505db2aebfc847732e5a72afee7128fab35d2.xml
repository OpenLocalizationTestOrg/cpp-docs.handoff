{"nodes":[{"pos":[12,58],"content":"hash_multimap::rend (STL-CLR) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"hash_multimap::rend (STL-CLR) | Microsoft Docs","pos":[0,46]}]},{"content":"hash_multimap::rend (STL/CLR)","pos":[639,668]},{"content":"Designates the end of the reversed controlled sequence.","pos":[669,724]},{"content":"Syntax","pos":[733,739]},{"content":"Remarks","pos":[790,797]},{"content":"The member function returns a reverse iterator that points just beyond the beginning of the controlled sequence.","pos":[801,913]},{"content":"Hence, it designates the <ph id=\"ph1\">`end`</ph> of the reverse sequence.","pos":[914,969],"source":" Hence, it designates the `end` of the reverse sequence."},{"content":"You use it to obtain an iterator that designates the <ph id=\"ph1\">`current`</ph> end of the controlled sequence seen in reverse order, but its status can change if the length of the controlled sequence changes.","pos":[970,1162],"source":" You use it to obtain an iterator that designates the `current` end of the controlled sequence seen in reverse order, but its status can change if the length of the controlled sequence changes."},{"content":"Example","pos":[1171,1178]},{"content":"Requirements","pos":[2259,2271]},{"pos":[2275,2305],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> <ph id=\"ph1\">\\&lt;</ph>cliext/hash_map&gt;","source":"**Header:** \\<cliext/hash_map>"},{"pos":[2312,2333],"content":"<bpt id=\"p1\">**</bpt>Namespace:<ept id=\"p1\">**</ept> cliext","source":"**Namespace:** cliext"},{"content":"See Also","pos":[2342,2350]},{"content":"hash_multimap (STL/CLR)","pos":[2355,2378]},{"content":"hash_multimap::begin (STL/CLR)","pos":[2421,2451]},{"content":"hash_multimap::end (STL/CLR)","pos":[2500,2528]},{"content":"hash_multimap::rbegin (STL/CLR)","pos":[2575,2606]}],"content":"---\ntitle: \"hash_multimap::rend (STL-CLR) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"cliext::hash_multimap::rend\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"rend member [STL/CLR]\"\nms.assetid: 7cbed963-7615-40bf-80f2-37b878a64453\ncaps.latest.revision: 13\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# hash_multimap::rend (STL/CLR)\nDesignates the end of the reversed controlled sequence.  \n  \n## Syntax  \n  \n```  \nreverse_iterator rend();  \n```  \n  \n## Remarks  \n The member function returns a reverse iterator that points just beyond the beginning of the controlled sequence. Hence, it designates the `end` of the reverse sequence. You use it to obtain an iterator that designates the `current` end of the controlled sequence seen in reverse order, but its status can change if the length of the controlled sequence changes.  \n  \n## Example  \n  \n```  \n// cliext_hash_multimap_rend.cpp   \n// compile with: /clr   \n#include <cliext/hash_map>   \n  \ntypedef cliext::hash_multimap<wchar_t, int> Myhash_multimap;   \nint main()   \n    {   \n    Myhash_multimap c1;   \n    c1.insert(Myhash_multimap::make_value(L'a', 1));   \n    c1.insert(Myhash_multimap::make_value(L'b', 2));   \n    c1.insert(Myhash_multimap::make_value(L'c', 3));   \n  \n// display contents \" [a 1] [b 2] [c 3]\"   \n    for each (Myhash_multimap::value_type elem in c1)   \n        System::Console::Write(\" [{0} {1}]\", elem->first, elem->second);   \n    System::Console::WriteLine();   \n  \n// inspect first two items in reversed sequence   \n    Myhash_multimap::reverse_iterator rit = c1.rend();   \n    --rit;   \n    --rit;   \n    System::Console::WriteLine(\"*-- --rend() = [{0} {1}]\",   \n        rit->first, rit->second);   \n    ++rit;   \n    System::Console::WriteLine(\"*--rend() = [{0} {1}]\",   \n        rit->first, rit->second);   \n    return (0);   \n    }  \n  \n```  \n  \n```Output  \n [a 1] [b 2] [c 3]  \n*-- --rend() = [b 2]  \n*--rend() = [a 1]  \n```  \n  \n## Requirements  \n **Header:** \\<cliext/hash_map>  \n  \n **Namespace:** cliext  \n  \n## See Also  \n [hash_multimap (STL/CLR)](../dotnet/hash-multimap-stl-clr.md)   \n [hash_multimap::begin (STL/CLR)](../dotnet/hash-multimap-begin-stl-clr.md)   \n [hash_multimap::end (STL/CLR)](../dotnet/hash-multimap-end-stl-clr.md)   \n [hash_multimap::rbegin (STL/CLR)](../dotnet/hash-multimap-rbegin-stl-clr.md)"}