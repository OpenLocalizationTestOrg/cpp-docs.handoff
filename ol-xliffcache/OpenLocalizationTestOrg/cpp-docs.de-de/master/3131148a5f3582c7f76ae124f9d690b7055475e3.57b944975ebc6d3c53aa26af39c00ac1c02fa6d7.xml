{"nodes":[{"pos":[12,55],"content":"Linker Tools Error LNK2031 | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Linker Tools Error LNK2031 | Microsoft Docs","pos":[0,43]}]},{"content":"Linker Tools Error LNK2031","pos":[607,633]},{"content":"unable to generate p/invoke for \"function_declaration\" decorated_name; calling convention missing in metadata","pos":[634,743]},{"content":"When attempting to import a native function into a pure image, remember that the implicit calling conventions differ between native and pure compilations.","pos":[750,904]},{"content":"For more information about pure images, see <bpt id=\"p1\">[</bpt>Pure and Verifiable Code (C++/CLI)<ept id=\"p1\">](../../dotnet/pure-and-verifiable-code-cpp-cli.md)</ept>.","pos":[905,1036],"source":" For more information about pure images, see [Pure and Verifiable Code (C++/CLI)](../../dotnet/pure-and-verifiable-code-cpp-cli.md)."},{"content":"Example","pos":[1045,1052]},{"pos":[1056,1199],"content":"This code sample generates a component with an exported, native, function whose calling convention is implicitly <bpt id=\"p1\">[</bpt>__cdecl<ept id=\"p1\">](../../cpp/cdecl.md)</ept>.","source":"This code sample generates a component with an exported, native, function whose calling convention is implicitly [__cdecl](../../cpp/cdecl.md)."},{"content":"Example","pos":[1335,1342]},{"content":"The following sample creates a pure client that consumes the native function.","pos":[1346,1423]},{"content":"However, the calling convention under <bpt id=\"p1\">**</bpt>/clr:pure<ept id=\"p1\">**</ept> is <bpt id=\"p2\">[</bpt>__clrcall<ept id=\"p2\">](../../cpp/clrcall.md)</ept>.","pos":[1424,1513],"source":" However, the calling convention under **/clr:pure** is [__clrcall](../../cpp/clrcall.md)."},{"content":"The following sample generates LNK2031.","pos":[1514,1553]},{"content":"Example","pos":[1726,1733]},{"content":"The following sample shows how to consume the native function from a pure image.","pos":[1737,1817]},{"content":"Note the explicit <bpt id=\"p1\">**</bpt>__cdecl<ept id=\"p1\">**</ept> calling convention specifier.","pos":[1818,1877],"source":" Note the explicit **__cdecl** calling convention specifier."}],"content":"---\ntitle: \"Linker Tools Error LNK2031 | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"error-reference\"\nf1_keywords: \n  - \"LNK2031\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"LNK2031\"\nms.assetid: 18ed4b6e-3e75-443c-bbd8-2f6030dc89ee\ncaps.latest.revision: 6\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Linker Tools Error LNK2031\nunable to generate p/invoke for \"function_declaration\" decorated_name; calling convention missing in metadata  \n  \n When attempting to import a native function into a pure image, remember that the implicit calling conventions differ between native and pure compilations. For more information about pure images, see [Pure and Verifiable Code (C++/CLI)](../../dotnet/pure-and-verifiable-code-cpp-cli.md).  \n  \n## Example  \n This code sample generates a component with an exported, native, function whose calling convention is implicitly [__cdecl](../../cpp/cdecl.md).  \n  \n```  \n// LNK2031.cpp  \n// compile with: /LD  \nextern \"C\" {  \n   __declspec(dllexport) int func() { return 3; }  \n};  \n```  \n  \n## Example  \n The following sample creates a pure client that consumes the native function. However, the calling convention under **/clr:pure** is [__clrcall](../../cpp/clrcall.md). The following sample generates LNK2031.  \n  \n```  \n// LNK2031_b.cpp  \n// compile with: /clr:pure LNK2031.lib  \n// LNK2031 expected  \nextern \"C\" int func();  \n  \nint main() {  \n   return func();  \n}  \n```  \n  \n## Example  \n The following sample shows how to consume the native function from a pure image. Note the explicit **__cdecl** calling convention specifier.  \n  \n```  \n// LNK2031_c.cpp  \n// compile with: /clr:pure LNK2031.lib  \nextern \"C\" int __cdecl func();  \n  \nint main() {  \n   return func();  \n}  \n```"}