{"nodes":[{"pos":[12,45],"content":"OnCmdMsg Handler | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"OnCmdMsg Handler | Microsoft Docs","pos":[0,33]}]},{"content":"OnCmdMsg Handler","pos":[711,727]},{"content":"To accomplish the routing of commands, each command target calls the <ph id=\"ph1\">`OnCmdMsg`</ph> member function of the next command target in the sequence.","pos":[728,867],"source":"To accomplish the routing of commands, each command target calls the `OnCmdMsg` member function of the next command target in the sequence."},{"content":"Command targets use <ph id=\"ph1\">`OnCmdMsg`</ph> to determine whether they can handle a command and to route it to another command target if they cannot handle it.","pos":[868,1013],"source":" Command targets use `OnCmdMsg` to determine whether they can handle a command and to route it to another command target if they cannot handle it."},{"content":"Each command-target class may override the <ph id=\"ph1\">`OnCmdMsg`</ph> member function.","pos":[1020,1090],"source":"Each command-target class may override the `OnCmdMsg` member function."},{"content":"The overrides let each class route commands to a particular next target.","pos":[1091,1163]},{"content":"A frame window, for example, always routes commands to its current child window or view, as shown in the table <bpt id=\"p1\">[</bpt>Standard Command Route<ept id=\"p1\">](../mfc/command-routing.md)</ept>.","pos":[1164,1327],"source":" A frame window, for example, always routes commands to its current child window or view, as shown in the table [Standard Command Route](../mfc/command-routing.md)."},{"content":"The default <ph id=\"ph1\">`CCmdTarget`</ph> implementation of <ph id=\"ph2\">`OnCmdMsg`</ph> uses the message map of the command-target class to search for a handler function for each command message it receives — in the same way that standard messages are searched.","pos":[1334,1561],"source":"The default `CCmdTarget` implementation of `OnCmdMsg` uses the message map of the command-target class to search for a handler function for each command message it receives — in the same way that standard messages are searched."},{"content":"If it finds a match, it calls the handler.","pos":[1562,1604]},{"content":"Message-map searching is explained in <bpt id=\"p1\">[</bpt>How the Framework Searches Message Maps<ept id=\"p1\">](../mfc/how-the-framework-searches-message-maps.md)</ept>.","pos":[1605,1736],"source":" Message-map searching is explained in [How the Framework Searches Message Maps](../mfc/how-the-framework-searches-message-maps.md)."},{"content":"See Also","pos":[1745,1753]},{"content":"How the Framework Calls a Handler","pos":[1758,1791]}],"content":"---\ntitle: \"OnCmdMsg Handler | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"OnCmdMsg\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"messages, routing\"\n  - \"handlers\"\n  - \"command routing, OnCmdMsg handler\"\n  - \"handlers, OnCmdMessage\"\n  - \"OnCmdMessage method\"\nms.assetid: 8df07024-506f-47e7-bba9-1c3bc5ad8ab6\ncaps.latest.revision: 10\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# OnCmdMsg Handler\nTo accomplish the routing of commands, each command target calls the `OnCmdMsg` member function of the next command target in the sequence. Command targets use `OnCmdMsg` to determine whether they can handle a command and to route it to another command target if they cannot handle it.  \n  \n Each command-target class may override the `OnCmdMsg` member function. The overrides let each class route commands to a particular next target. A frame window, for example, always routes commands to its current child window or view, as shown in the table [Standard Command Route](../mfc/command-routing.md).  \n  \n The default `CCmdTarget` implementation of `OnCmdMsg` uses the message map of the command-target class to search for a handler function for each command message it receives — in the same way that standard messages are searched. If it finds a match, it calls the handler. Message-map searching is explained in [How the Framework Searches Message Maps](../mfc/how-the-framework-searches-message-maps.md).  \n  \n## See Also  \n [How the Framework Calls a Handler](../mfc/how-the-framework-calls-a-handler.md)\n\n"}