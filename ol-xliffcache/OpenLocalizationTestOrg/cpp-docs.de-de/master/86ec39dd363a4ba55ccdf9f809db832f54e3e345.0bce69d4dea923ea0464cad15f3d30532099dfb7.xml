{"nodes":[{"pos":[12,37],"content":"_setjmp3 | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"_setjmp3 | Microsoft Docs","pos":[0,25]}]},{"content":"_setjmp3","pos":[826,834]},{"content":"Internal CRT function.","pos":[835,857]},{"content":"A new implementation of the <ph id=\"ph1\">`setjmp`</ph> function.","pos":[858,904],"source":" A new implementation of the `setjmp` function."},{"content":"Syntax","pos":[913,919]},{"content":"Parameters","pos":[1031,1041]},{"content":"[out]","pos":[1045,1050]},{"content":"Address of the buffer for storing state information.","pos":[1060,1112]},{"content":"[in]","pos":[1119,1123]},{"content":"The number of additional <ph id=\"ph1\">`DWORD`</ph>s of information that are stored in the <ph id=\"ph2\">`optional parameters`</ph>.","pos":[1135,1229],"source":" The number of additional `DWORD`s of information that are stored in the `optional parameters`."},{"content":"[in]","pos":[1236,1240]},{"content":"Additional data pushed down by the <ph id=\"ph1\">`setjmp`</ph> intrinsic.","pos":[1266,1320],"source":" Additional data pushed down by the `setjmp` intrinsic."},{"content":"The first <ph id=\"ph1\">`DWORD`</ph> is a function pointer that is used to unwind extra data and return to a nonvolatile register state.","pos":[1321,1438],"source":" The first `DWORD` is a function pointer that is used to unwind extra data and return to a nonvolatile register state."},{"content":"The second <ph id=\"ph1\">`DWORD`</ph> is the try level to be restored.","pos":[1439,1490],"source":" The second `DWORD` is the try level to be restored."},{"content":"Any further data is saved in the generic data array in the <ph id=\"ph1\">`jmp_buf`</ph>.","pos":[1491,1560],"source":" Any further data is saved in the generic data array in the `jmp_buf`."},{"content":"Return Value","pos":[1569,1581]},{"content":"Always returns 0.","pos":[1585,1602]},{"content":"Remarks","pos":[1611,1618]},{"content":"Do not use this function in a C++ program.","pos":[1622,1664]},{"content":"It is an intrinsic function that does not support C++.","pos":[1665,1719]},{"content":"For more information about how to use <ph id=\"ph1\">`setjmp`</ph>, see <bpt id=\"p1\">[</bpt>Using setjmp/longjmp<ept id=\"p1\">](../cpp/using-setjmp-longjmp.md)</ept>.","pos":[1720,1827],"source":" For more information about how to use `setjmp`, see [Using setjmp/longjmp](../cpp/using-setjmp-longjmp.md)."},{"content":"Requirements","pos":[1836,1848]},{"content":"See Also","pos":[1857,1865]},{"content":"Alphabetical Function Reference","pos":[1870,1901]},{"content":"setjmp","pos":[1979,1985]}],"content":"---\ntitle: \"_setjmp3 | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\napiname: \n  - \"_setjmp3\"\napilocation: \n  - \"msvcrt.dll\"\n  - \"msvcr90.dll\"\n  - \"msvcr110.dll\"\n  - \"msvcr80.dll\"\n  - \"msvcr110_clr0400.dll\"\n  - \"msvcr100.dll\"\n  - \"msvcr120.dll\"\napitype: \"DLLExport\"\nf1_keywords: \n  - \"setjmp3\"\n  - \"_setjmp3\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"_setjmp3 function\"\n  - \"setjmp3 function\"\nms.assetid: 6129c2f3-8bac-4fdb-a827-44e1eebba500\ncaps.latest.revision: 6\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# _setjmp3\nInternal CRT function. A new implementation of the `setjmp` function.  \n  \n## Syntax  \n  \n```  \nint _setjmp3(  \n   OUT jmp_buf env,  \n   int count,  \n   (optional parameters)  \n);  \n```  \n  \n#### Parameters  \n [out] `env`  \n Address of the buffer for storing state information.  \n  \n [in] `count`  \n The number of additional `DWORD`s of information that are stored in the `optional parameters`.  \n  \n [in] `optional parameters`  \n Additional data pushed down by the `setjmp` intrinsic. The first `DWORD` is a function pointer that is used to unwind extra data and return to a nonvolatile register state. The second `DWORD` is the try level to be restored. Any further data is saved in the generic data array in the `jmp_buf`.  \n  \n## Return Value  \n Always returns 0.  \n  \n## Remarks  \n Do not use this function in a C++ program. It is an intrinsic function that does not support C++. For more information about how to use `setjmp`, see [Using setjmp/longjmp](../cpp/using-setjmp-longjmp.md).  \n  \n## Requirements  \n  \n## See Also  \n [Alphabetical Function Reference](../c-runtime-library/reference/crt-alphabetical-function-reference.md)   \n [setjmp](../c-runtime-library/reference/setjmp.md)"}