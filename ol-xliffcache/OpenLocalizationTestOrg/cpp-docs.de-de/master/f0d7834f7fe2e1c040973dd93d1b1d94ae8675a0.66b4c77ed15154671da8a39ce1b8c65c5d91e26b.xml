{"nodes":[{"pos":[12,56],"content":"CAtlAutoThreadModuleT Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"CAtlAutoThreadModuleT Class | Microsoft Docs","pos":[0,44]}]},{"pos":[702,729],"content":"CAtlAutoThreadModuleT Class","linkify":"CAtlAutoThreadModuleT Class","nodes":[{"content":"CAtlAutoThreadModuleT Class","pos":[0,27]}]},{"content":"This class provides methods for implementing a thread-pooled, apartment-model COM server.","pos":[730,819]},{"pos":[827,937],"content":"[!IMPORTANT]\n This class and its members cannot be used in applications that execute in the Windows Runtime.","leadings":["","> "],"nodes":[{"content":"This class and its members cannot be used in applications that execute in the Windows Runtime.","pos":[14,108]}]},{"pos":[946,952],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[1149,1159],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"The class which will implement the COM server.","pos":[1170,1216]},{"content":"The class managing thread selection.","pos":[1244,1280]},{"content":"The default value is <bpt id=\"p1\">[</bpt>CComSimpleThreadAllocator<ept id=\"p1\">](../../atl/reference/ccomsimplethreadallocator-class.md)</ept>.","pos":[1281,1386],"source":" The default value is [CComSimpleThreadAllocator](../../atl/reference/ccomsimplethreadallocator-class.md)."},{"content":"Specifies the time-out interval, in milliseconds.","pos":[1405,1454]},{"content":"The default is INFINITE, which means the method's time-out interval never elapses.","pos":[1455,1537]},{"pos":[1546,1553],"content":"Members","linkify":"Members","nodes":[{"content":"Members","pos":[0,7]}]},{"pos":[1563,1577],"content":"Public Methods","linkify":"Public Methods","nodes":[{"content":"Public Methods","pos":[0,14]}]},{"content":"Name","pos":[1584,1588]},{"content":"Description","pos":[1589,1600]},{"pos":[1638,1723],"content":"<bpt id=\"p1\">[</bpt>CAtlAutoThreadModuleT::GetDefaultThreads<ept id=\"p1\">](#catlautothreadmodulet__getdefaultthreads)</ept>","source":"[CAtlAutoThreadModuleT::GetDefaultThreads](#catlautothreadmodulet__getdefaultthreads)"},{"content":"This static function dynamically calculates and returns the maximum number of threads for the EXE module, based on the number of processors.","pos":[1724,1864]},{"pos":[1874,1881],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The class <bpt id=\"p1\">[</bpt>CAtlAutoThreadModule<ept id=\"p1\">](../../atl/reference/catlautothreadmodule-class.md)</ept> derives from <ph id=\"ph1\">`CAtlAutoThreadModuleT`</ph> in order to implement a thread-pooled, apartment-model COM server.","pos":[1885,2072],"source":"The class [CAtlAutoThreadModule](../../atl/reference/catlautothreadmodule-class.md) derives from `CAtlAutoThreadModuleT` in order to implement a thread-pooled, apartment-model COM server."},{"content":"It replaces the obsolete class <bpt id=\"p1\">[</bpt>CComAutoThreadModule<ept id=\"p1\">](../../atl/reference/ccomautothreadmodule-class.md)</ept>.","pos":[2073,2178],"source":" It replaces the obsolete class [CComAutoThreadModule](../../atl/reference/ccomautothreadmodule-class.md)."},{"pos":[2186,2326],"content":"[!NOTE]\n This class should not be used in a DLL, as the default `dwWait` value of INFINITE will cause a deadlock when the DLL is unloaded.","leadings":["","> "],"nodes":[{"content":"This class should not be used in a DLL, as the default <ph id=\"ph1\">`dwWait`</ph> value of INFINITE will cause a deadlock when the DLL is unloaded.","pos":[9,138],"source":" This class should not be used in a DLL, as the default `dwWait` value of INFINITE will cause a deadlock when the DLL is unloaded."}]},{"pos":[2335,2356],"content":"Inheritance Hierarchy","linkify":"Inheritance Hierarchy","nodes":[{"content":"Inheritance Hierarchy","pos":[0,21]}]},{"pos":[2421,2433],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[2437,2458],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> atlbase.h","source":"**Header:** atlbase.h"},{"pos":[2468,2565],"content":"<bpt id=\"p1\">&lt;a name=\"catlautothreadmodulet__getdefaultthreads\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CAtlAutoThreadModuleT::GetDefaultThreads","linkify":"<a name=\"catlautothreadmodulet__getdefaultthreads\"></a>  CAtlAutoThreadModuleT::GetDefaultThreads","source":"<a name=\"catlautothreadmodulet__getdefaultthreads\"></a>  CAtlAutoThreadModuleT::GetDefaultThreads"},{"content":"This static function dynamically calculates and returns the maximum number of threads for the EXE module, based on the number of processors.","pos":[2569,2709]},{"pos":[2764,2776],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The number of threads to be created in the EXE module.","pos":[2780,2834]},{"pos":[2844,2851],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Override this method if you want to use a different method for calculating the number of threads.","pos":[2855,2952]},{"content":"By default, the number of threads is based on the number of processors.","pos":[2953,3024]},{"pos":[3033,3041],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>IAtlAutoThreadModule Class<ept id=\"p1\">](../../atl/reference/iatlautothreadmodule-class.md)</ept><ph id=\"ph1\"> </ph>","pos":[3045,3125],"source":"[IAtlAutoThreadModule Class](../../atl/reference/iatlautothreadmodule-class.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Class Overview<ept id=\"p1\">](../../atl/atl-class-overview.md)</ept><ph id=\"ph1\"> </ph>","pos":[3128,3179],"source":" [Class Overview](../../atl/atl-class-overview.md) "},{"content":"<bpt id=\"p1\"> [</bpt>IAtlAutoThreadModule Class<ept id=\"p1\">](../../atl/reference/iatlautothreadmodule-class.md)</ept><ph id=\"ph1\"> </ph>","pos":[3182,3263],"source":" [IAtlAutoThreadModule Class](../../atl/reference/iatlautothreadmodule-class.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Module Classes<ept id=\"p1\">](../../atl/atl-module-classes.md)</ept>","pos":[3266,3316],"source":" [Module Classes](../../atl/atl-module-classes.md)"}],"content":"---\ntitle: \"CAtlAutoThreadModuleT Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"ATL.CAtlAutoThreadModuleT\"\n  - \"ATL::CAtlAutoThreadModuleT\"\n  - \"CAtlAutoThreadModuleT\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"CAtlAutoThreadModuleT class\"\nms.assetid: ae1667c6-3fb8-47bc-b35d-9ea5e9896d7f\ncaps.latest.revision: 20\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# CAtlAutoThreadModuleT Class\nThis class provides methods for implementing a thread-pooled, apartment-model COM server.  \n  \n> [!IMPORTANT]\n>  This class and its members cannot be used in applications that execute in the Windows Runtime.  \n  \n## Syntax  \n  \n```\ntemplate <class T, class ThreadAllocator = CComSimpleThreadAllocator,\n    DWORD dwWait = INFINITE>  class ATL_NO_VTABLE CAtlAutoThreadModuleT :  public IAtlAutoThreadModule\n```  \n  \n#### Parameters  \n `T`  \n The class which will implement the COM server.  \n  \n `ThreadAllocator`  \n The class managing thread selection. The default value is [CComSimpleThreadAllocator](../../atl/reference/ccomsimplethreadallocator-class.md).  \n  \n `dwWait`  \n Specifies the time-out interval, in milliseconds. The default is INFINITE, which means the method's time-out interval never elapses.  \n  \n## Members  \n  \n### Public Methods  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CAtlAutoThreadModuleT::GetDefaultThreads](#catlautothreadmodulet__getdefaultthreads)|This static function dynamically calculates and returns the maximum number of threads for the EXE module, based on the number of processors.|  \n  \n## Remarks  \n The class [CAtlAutoThreadModule](../../atl/reference/catlautothreadmodule-class.md) derives from `CAtlAutoThreadModuleT` in order to implement a thread-pooled, apartment-model COM server. It replaces the obsolete class [CComAutoThreadModule](../../atl/reference/ccomautothreadmodule-class.md).  \n  \n> [!NOTE]\n>  This class should not be used in a DLL, as the default `dwWait` value of INFINITE will cause a deadlock when the DLL is unloaded.  \n  \n## Inheritance Hierarchy  \n `IAtlAutoThreadModule`  \n  \n `CAtlAutoThreadModuleT`  \n  \n## Requirements  \n **Header:** atlbase.h  \n  \n##  <a name=\"catlautothreadmodulet__getdefaultthreads\"></a>  CAtlAutoThreadModuleT::GetDefaultThreads  \n This static function dynamically calculates and returns the maximum number of threads for the EXE module, based on the number of processors.  \n  \n```\nstatic int GetDefaultThreads();\n```  \n  \n### Return Value  \n The number of threads to be created in the EXE module.  \n  \n### Remarks  \n Override this method if you want to use a different method for calculating the number of threads. By default, the number of threads is based on the number of processors.  \n  \n## See Also  \n [IAtlAutoThreadModule Class](../../atl/reference/iatlautothreadmodule-class.md)   \n [Class Overview](../../atl/atl-class-overview.md)   \n [IAtlAutoThreadModule Class](../../atl/reference/iatlautothreadmodule-class.md)   \n [Module Classes](../../atl/atl-module-classes.md)\n"}