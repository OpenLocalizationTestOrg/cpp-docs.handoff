{"nodes":[{"pos":[12,77],"content":"_printf_p, _printf_p_l, _wprintf_p, _wprintf_p_l | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"_printf_p, _printf_p_l, _wprintf_p, _wprintf_p_l | Microsoft Docs","pos":[0,65]}]},{"pos":[1326,1374],"content":"_printf_p, _printf_p_l, _wprintf_p, _wprintf_p_l","linkify":"_printf_p, _printf_p_l, _wprintf_p, _wprintf_p_l","nodes":[{"content":"_printf_p, _printf_p_l, _wprintf_p, _wprintf_p_l","pos":[0,48]}]},{"content":"Prints formatted output to the standard output stream, and enables specification of the order in which parameters are used in the format string.","pos":[1375,1519]},{"pos":[1528,1534],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[1888,1898],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Format control.","pos":[1914,1929]},{"content":"Optional arguments.","pos":[1950,1969]},{"content":"The locale to use.","pos":[1988,2006]},{"pos":[2015,2027],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Returns the number of characters printed or a negative value if an error occurs.","pos":[2031,2111]},{"pos":[2120,2127],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The <ph id=\"ph1\">`_printf_p`</ph> function formats and prints a series of characters and values to the standard output stream, <ph id=\"ph2\">`stdout`</ph>.","pos":[2131,2249],"source":"The `_printf_p` function formats and prints a series of characters and values to the standard output stream, `stdout`."},{"content":"If arguments follow the <ph id=\"ph1\">`format`</ph> string, the <ph id=\"ph2\">`format`</ph> string must contain specifications that determine the output format for the arguments (see <bpt id=\"p1\">[</bpt>printf_p Positional Parameters<ept id=\"p1\">](../../c-runtime-library/printf-p-positional-parameters.md)</ept>).","pos":[2250,2488],"source":" If arguments follow the `format` string, the `format` string must contain specifications that determine the output format for the arguments (see [printf_p Positional Parameters](../../c-runtime-library/printf-p-positional-parameters.md))."},{"content":"The difference between <ph id=\"ph1\">`_printf_p`</ph> and <ph id=\"ph2\">`printf_s`</ph> is that <ph id=\"ph3\">`_printf_p`</ph> supports positional parameters, which allows specifying the order in which the arguments are used in the format string.","pos":[2495,2684],"source":"The difference between `_printf_p` and `printf_s` is that `_printf_p` supports positional parameters, which allows specifying the order in which the arguments are used in the format string."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>printf_p Positional Parameters<ept id=\"p1\">](../../c-runtime-library/printf-p-positional-parameters.md)</ept>.","pos":[2685,2803],"source":" For more information, see [printf_p Positional Parameters](../../c-runtime-library/printf-p-positional-parameters.md)."},{"content":"<ph id=\"ph1\">`_wprintf_p`</ph> is the wide-character version of <ph id=\"ph2\">`_printf_p`</ph>; they behave identically if the stream is opened in ANSI mode.","pos":[2810,2930],"source":"`_wprintf_p` is the wide-character version of `_printf_p`; they behave identically if the stream is opened in ANSI mode."},{"content":"<ph id=\"ph1\">`_printf_p`</ph> doesn't currently support output into a UNICODE stream.","pos":[2931,2998],"source":"`_printf_p` doesn't currently support output into a UNICODE stream."},{"pos":[3005,3161],"content":"The versions of these functions with the <ph id=\"ph1\">`_l`</ph> suffix are identical except that they use the locale parameter passed in instead of the current thread locale.","source":"The versions of these functions with the `_l` suffix are identical except that they use the locale parameter passed in instead of the current thread locale."},{"pos":[3169,3235],"content":"[!IMPORTANT]\n Ensure that `format` is not a user-defined string.","leadings":["","> "],"nodes":[{"content":"Ensure that <ph id=\"ph1\">`format`</ph> is not a user-defined string.","pos":[14,64],"source":" Ensure that `format` is not a user-defined string."}]},{"content":"If <ph id=\"ph1\">`format`</ph> or <ph id=\"ph2\">`argument`</ph> are <ph id=\"ph3\">`NULL`</ph>, or of the format string contains invalid formatting characters, <ph id=\"ph4\">`_printf_p`</ph> and <ph id=\"ph5\">`_wprintf_p`</ph> functions invoke an invalid parameter handler, as described in <bpt id=\"p1\">[</bpt>Parameter Validation<ept id=\"p1\">](../../c-runtime-library/parameter-validation.md)</ept>.","pos":[3242,3508],"source":"If `format` or `argument` are `NULL`, or of the format string contains invalid formatting characters, `_printf_p` and `_wprintf_p` functions invoke an invalid parameter handler, as described in [Parameter Validation](../../c-runtime-library/parameter-validation.md)."},{"content":"If execution is allowed to continue, the function returns -1 and sets <ph id=\"ph1\">`errno`</ph> to <ph id=\"ph2\">`EINVAL`</ph>.","pos":[3509,3599],"source":" If execution is allowed to continue, the function returns -1 and sets `errno` to `EINVAL`."},{"pos":[3609,3638],"content":"Generic-Text Routine Mappings","linkify":"Generic-Text Routine Mappings","nodes":[{"content":"Generic-Text Routine Mappings","pos":[0,29]}]},{"content":"Tchar.h routine","pos":[3645,3660]},{"content":"_UNICODE and _MBCS not defined","pos":[3661,3691]},{"content":"_MBCS defined","pos":[3692,3705]},{"content":"_UNICODE defined","pos":[3706,3722]},{"pos":[3958,3970],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"content":"Routine","pos":[3977,3984]},{"content":"Required header","pos":[3985,4000]},{"pos":[4045,4071],"content":"<ph id=\"ph1\">`_printf_p`</ph>, <ph id=\"ph2\">`_printf_p_l`</ph>","source":"`_printf_p`, `_printf_p_l`"},{"content":"<ph id=\"ph1\">\\&lt;</ph>stdio.h&gt;","pos":[4072,4082],"source":"\\<stdio.h>"},{"pos":[4087,4115],"content":"<ph id=\"ph1\">`_wprintf_p`</ph>, <ph id=\"ph2\">`_wprintf_p_l`</ph>","source":"`_wprintf_p`, `_wprintf_p_l`"},{"content":"<ph id=\"ph1\">\\&lt;</ph>stdio.h&gt; or <ph id=\"ph2\">\\&lt;</ph>wchar.h&gt;","pos":[4116,4140],"source":"\\<stdio.h> or \\<wchar.h>"},{"content":"The console is not supported in <ph id=\"ph1\">[!INCLUDE[win8_appname_long](../../build/includes/win8_appname_long_md.md)]</ph> apps.","pos":[4148,4261],"source":"The console is not supported in [!INCLUDE[win8_appname_long](../../build/includes/win8_appname_long_md.md)] apps."},{"content":"The standard stream handles that are associated with the console—<ph id=\"ph1\">`stdin`</ph>, <ph id=\"ph2\">`stdout`</ph>, and <ph id=\"ph3\">`stderr`</ph>—must be redirected before C run-time functions can use them in <ph id=\"ph4\">[!INCLUDE[win8_appname_long](../../build/includes/win8_appname_long_md.md)]</ph> apps.","pos":[4262,4503],"source":" The standard stream handles that are associated with the console—`stdin`, `stdout`, and `stderr`—must be redirected before C run-time functions can use them in [!INCLUDE[win8_appname_long](../../build/includes/win8_appname_long_md.md)] apps."},{"content":"For more compatibility information, see <bpt id=\"p1\">[</bpt>Compatibility<ept id=\"p1\">](../../c-runtime-library/compatibility.md)</ept>.","pos":[4504,4602],"source":" For more compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md)."},{"pos":[4611,4618],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[5301,5326],"content":".NET Framework Equivalent","linkify":".NET Framework Equivalent","nodes":[{"content":".NET Framework Equivalent","pos":[0,25]}]},{"pos":[5336,5428],"content":"<bpt id=\"p1\">[</bpt>System::Console::Write<ept id=\"p1\">](https://msdn.microsoft.com/en-us/library/system.console.write.aspx)</ept>","source":"[System::Console::Write](https://msdn.microsoft.com/en-us/library/system.console.write.aspx)"},{"pos":[5438,5538],"content":"<bpt id=\"p1\">[</bpt>System::Console::WriteLine<ept id=\"p1\">](https://msdn.microsoft.com/en-us/library/system.console.writeline.aspx)</ept>","source":"[System::Console::WriteLine](https://msdn.microsoft.com/en-us/library/system.console.writeline.aspx)"},{"pos":[5547,5555],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Floating-Point Support<ept id=\"p1\">](../../c-runtime-library/floating-point-support.md)</ept><ph id=\"ph1\"> </ph>","pos":[5559,5635],"source":"[Floating-Point Support](../../c-runtime-library/floating-point-support.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Stream I/O<ept id=\"p1\">](../../c-runtime-library/stream-i-o.md)</ept><ph id=\"ph1\"> </ph>","pos":[5638,5691],"source":" [Stream I/O](../../c-runtime-library/stream-i-o.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Locale<ept id=\"p1\">](../../c-runtime-library/locale.md)</ept><ph id=\"ph1\"> </ph>","pos":[5694,5739],"source":" [Locale](../../c-runtime-library/locale.md) "},{"content":"<bpt id=\"p1\"> [</bpt>fopen, _wfopen<ept id=\"p1\">](../../c-runtime-library/reference/fopen-wfopen.md)</ept><ph id=\"ph1\"> </ph>","pos":[5742,5811],"source":" [fopen, _wfopen](../../c-runtime-library/reference/fopen-wfopen.md) "},{"content":"<bpt id=\"p1\"> [</bpt>_fprintf_p, _fprintf_p_l, _fwprintf_p, _fwprintf_p_l<ept id=\"p1\">](../../c-runtime-library/reference/fprintf-p-fprintf-p-l-fwprintf-p-fwprintf-p-l.md)</ept><ph id=\"ph1\"> </ph>","pos":[5814,5954],"source":" [_fprintf_p, _fprintf_p_l, _fwprintf_p, _fwprintf_p_l](../../c-runtime-library/reference/fprintf-p-fprintf-p-l-fwprintf-p-fwprintf-p-l.md) "},{"content":"<bpt id=\"p1\"> [</bpt>fprintf, _fprintf_l, fwprintf, _fwprintf_l<ept id=\"p1\">](../../c-runtime-library/reference/fprintf-fprintf-l-fwprintf-fwprintf-l.md)</ept><ph id=\"ph1\"> </ph>","pos":[5957,6079],"source":" [fprintf, _fprintf_l, fwprintf, _fwprintf_l](../../c-runtime-library/reference/fprintf-fprintf-l-fwprintf-fwprintf-l.md) "},{"content":"<bpt id=\"p1\"> [</bpt>fprintf_s, _fprintf_s_l, fwprintf_s, _fwprintf_s_l<ept id=\"p1\">](../../c-runtime-library/reference/fprintf-s-fprintf-s-l-fwprintf-s-fwprintf-s-l.md)</ept><ph id=\"ph1\"> </ph>","pos":[6082,6220],"source":" [fprintf_s, _fprintf_s_l, fwprintf_s, _fwprintf_s_l](../../c-runtime-library/reference/fprintf-s-fprintf-s-l-fwprintf-s-fwprintf-s-l.md) "},{"content":"<bpt id=\"p1\"> [</bpt>scanf, _scanf_l, wscanf, _wscanf_l<ept id=\"p1\">](../../c-runtime-library/reference/scanf-scanf-l-wscanf-wscanf-l.md)</ept><ph id=\"ph1\"> </ph>","pos":[6223,6329],"source":" [scanf, _scanf_l, wscanf, _wscanf_l](../../c-runtime-library/reference/scanf-scanf-l-wscanf-wscanf-l.md) "},{"content":"<bpt id=\"p1\"> [</bpt>scanf_s, _scanf_s_l, wscanf_s, _wscanf_s_l<ept id=\"p1\">](../../c-runtime-library/reference/scanf-s-scanf-s-l-wscanf-s-wscanf-s-l.md)</ept><ph id=\"ph1\"> </ph>","pos":[6332,6454],"source":" [scanf_s, _scanf_s_l, wscanf_s, _wscanf_s_l](../../c-runtime-library/reference/scanf-s-scanf-s-l-wscanf-s-wscanf-s-l.md) "},{"content":"<bpt id=\"p1\"> [</bpt>_sprintf_p, _sprintf_p_l, _swprintf_p, _swprintf_p_l<ept id=\"p1\">](../../c-runtime-library/reference/sprintf-p-sprintf-p-l-swprintf-p-swprintf-p-l.md)</ept><ph id=\"ph1\"> </ph>","pos":[6457,6597],"source":" [_sprintf_p, _sprintf_p_l, _swprintf_p, _swprintf_p_l](../../c-runtime-library/reference/sprintf-p-sprintf-p-l-swprintf-p-swprintf-p-l.md) "},{"content":"<bpt id=\"p1\"> [</bpt>sprintf, _sprintf_l, swprintf, _swprintf_l, <ph id=\"ph1\">\\_</ph>_swprintf_l<ept id=\"p1\">](../../c-runtime-library/reference/sprintf-sprintf-l-swprintf-swprintf-l-swprintf-l.md)</ept><ph id=\"ph2\"> </ph>","pos":[6600,6748],"source":" [sprintf, _sprintf_l, swprintf, _swprintf_l, \\__swprintf_l](../../c-runtime-library/reference/sprintf-sprintf-l-swprintf-swprintf-l-swprintf-l.md) "},{"content":"<bpt id=\"p1\"> [</bpt>sprintf_s, _sprintf_s_l, swprintf_s, _swprintf_s_l<ept id=\"p1\">](../../c-runtime-library/reference/sprintf-s-sprintf-s-l-swprintf-s-swprintf-s-l.md)</ept><ph id=\"ph1\"> </ph>","pos":[6751,6889],"source":" [sprintf_s, _sprintf_s_l, swprintf_s, _swprintf_s_l](../../c-runtime-library/reference/sprintf-s-sprintf-s-l-swprintf-s-swprintf-s-l.md) "},{"content":"<bpt id=\"p1\"> [</bpt>vprintf Functions<ept id=\"p1\">](../../c-runtime-library/vprintf-functions.md)</ept>","pos":[6892,6958],"source":" [vprintf Functions](../../c-runtime-library/vprintf-functions.md)"}],"content":"---\ntitle: \"_printf_p, _printf_p_l, _wprintf_p, _wprintf_p_l | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\napiname: \n  - \"_printf_p\"\n  - \"_wprintf_p\"\n  - \"_printf_p_l\"\n  - \"_wprintf_p_l\"\napilocation: \n  - \"msvcrt.dll\"\n  - \"msvcr80.dll\"\n  - \"msvcr90.dll\"\n  - \"msvcr100.dll\"\n  - \"msvcr100_clr0400.dll\"\n  - \"msvcr110.dll\"\n  - \"msvcr110_clr0400.dll\"\n  - \"msvcr120.dll\"\n  - \"msvcr120_clr0400.dll\"\n  - \"ucrtbase.dll\"\napitype: \"DLLExport\"\nf1_keywords: \n  - \"wprintf_p\"\n  - \"_wprintf_p\"\n  - \"printf_p_l\"\n  - \"_printf_p\"\n  - \"printf_p\"\n  - \"_wprintf_p_l\"\n  - \"_printf_p_l\"\n  - \"wprintf_p_l\"\ndev_langs: \n  - \"C++\"\n  - \"C\"\nhelpviewer_keywords: \n  - \"printf_p function\"\n  - \"printf_p_l function\"\n  - \"wprintf_p function\"\n  - \"wprintf_p_l function\"\n  - \"_tprintf_p_l function\"\n  - \"_wprintf_p function\"\n  - \"_wprintf_p_l function\"\n  - \"_printf_p function\"\n  - \"tprintf_p_l function\"\n  - \"_printf_p_l function\"\nms.assetid: 1b7e9ef9-a069-45db-af9d-c2730168322e\ncaps.latest.revision: 22\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# _printf_p, _printf_p_l, _wprintf_p, _wprintf_p_l\nPrints formatted output to the standard output stream, and enables specification of the order in which parameters are used in the format string.  \n  \n## Syntax  \n  \n```  \nint _printf_p(  \n   const char *format [,  \n   argument]...   \n);  \nint _printf_p_l(  \n   const char *format,  \n   locale_t locale [,  \n   argument]...   \n);  \nint _wprintf_p(  \n   const wchar_t *format [,  \n   argument]...   \n);  \nint _wprintf_p_l(  \n   const wchar_t *format,  \n   locale_t locale [,  \n   argument]...   \n);  \n```  \n  \n#### Parameters  \n `format`  \n Format control.  \n  \n `argument`  \n Optional arguments.  \n  \n `locale`  \n The locale to use.  \n  \n## Return Value  \n Returns the number of characters printed or a negative value if an error occurs.  \n  \n## Remarks  \n The `_printf_p` function formats and prints a series of characters and values to the standard output stream, `stdout`. If arguments follow the `format` string, the `format` string must contain specifications that determine the output format for the arguments (see [printf_p Positional Parameters](../../c-runtime-library/printf-p-positional-parameters.md)).  \n  \n The difference between `_printf_p` and `printf_s` is that `_printf_p` supports positional parameters, which allows specifying the order in which the arguments are used in the format string. For more information, see [printf_p Positional Parameters](../../c-runtime-library/printf-p-positional-parameters.md).  \n  \n `_wprintf_p` is the wide-character version of `_printf_p`; they behave identically if the stream is opened in ANSI mode. `_printf_p` doesn't currently support output into a UNICODE stream.  \n  \n The versions of these functions with the `_l` suffix are identical except that they use the locale parameter passed in instead of the current thread locale.  \n  \n> [!IMPORTANT]\n>  Ensure that `format` is not a user-defined string.  \n  \n If `format` or `argument` are `NULL`, or of the format string contains invalid formatting characters, `_printf_p` and `_wprintf_p` functions invoke an invalid parameter handler, as described in [Parameter Validation](../../c-runtime-library/parameter-validation.md). If execution is allowed to continue, the function returns -1 and sets `errno` to `EINVAL`.  \n  \n### Generic-Text Routine Mappings  \n  \n|Tchar.h routine|_UNICODE and _MBCS not defined|_MBCS defined|_UNICODE defined|  \n|---------------------|--------------------------------------|--------------------|-----------------------|  \n|`_tprintf_p`|`_printf_p`|`_printf_p`|`_wprintf_p`|  \n|`_tprintf_p_l`|`_printf_p_l`|`_printf_p_l`|`_wprintf_p_l`|  \n  \n## Requirements  \n  \n|Routine|Required header|  \n|-------------|---------------------|  \n|`_printf_p`, `_printf_p_l`|\\<stdio.h>|  \n|`_wprintf_p`, `_wprintf_p_l`|\\<stdio.h> or \\<wchar.h>|  \n  \n The console is not supported in [!INCLUDE[win8_appname_long](../../build/includes/win8_appname_long_md.md)] apps. The standard stream handles that are associated with the console—`stdin`, `stdout`, and `stderr`—must be redirected before C run-time functions can use them in [!INCLUDE[win8_appname_long](../../build/includes/win8_appname_long_md.md)] apps. For more compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md).  \n  \n## Example  \n  \n```  \n// crt_printf_p.c  \n// This program uses the _printf_p and _wprintf_p  \n// functions to choose the order in which parameters  \n// are used.  \n  \n#include <stdio.h>  \n  \nint main( void )  \n{  \n   // Positional arguments   \n   _printf_p( \"Specifying the order: %2$s %3$s %1$s %4$s %5$s.\\n\",  \n              \"little\", \"I'm\", \"a\", \"tea\", \"pot\");  \n  \n   // Resume arguments  \n   _wprintf_p( L\"Reusing arguments: %1$d %1$d %1$d %1$d\\n\", 10);  \n  \n   // Width argument  \n   _printf_p(\"Width specifiers: %1$*2$s\", \"Hello\\n\", 10);  \n}  \n```  \n  \n```Output  \nSpecifying the order: I'm a little tea pot.  \nReusing arguments: 10 10 10 10  \nWidth specifiers:     Hello  \n```  \n  \n## .NET Framework Equivalent  \n  \n-   [System::Console::Write](https://msdn.microsoft.com/en-us/library/system.console.write.aspx)  \n  \n-   [System::Console::WriteLine](https://msdn.microsoft.com/en-us/library/system.console.writeline.aspx)  \n  \n## See Also  \n [Floating-Point Support](../../c-runtime-library/floating-point-support.md)   \n [Stream I/O](../../c-runtime-library/stream-i-o.md)   \n [Locale](../../c-runtime-library/locale.md)   \n [fopen, _wfopen](../../c-runtime-library/reference/fopen-wfopen.md)   \n [_fprintf_p, _fprintf_p_l, _fwprintf_p, _fwprintf_p_l](../../c-runtime-library/reference/fprintf-p-fprintf-p-l-fwprintf-p-fwprintf-p-l.md)   \n [fprintf, _fprintf_l, fwprintf, _fwprintf_l](../../c-runtime-library/reference/fprintf-fprintf-l-fwprintf-fwprintf-l.md)   \n [fprintf_s, _fprintf_s_l, fwprintf_s, _fwprintf_s_l](../../c-runtime-library/reference/fprintf-s-fprintf-s-l-fwprintf-s-fwprintf-s-l.md)   \n [scanf, _scanf_l, wscanf, _wscanf_l](../../c-runtime-library/reference/scanf-scanf-l-wscanf-wscanf-l.md)   \n [scanf_s, _scanf_s_l, wscanf_s, _wscanf_s_l](../../c-runtime-library/reference/scanf-s-scanf-s-l-wscanf-s-wscanf-s-l.md)   \n [_sprintf_p, _sprintf_p_l, _swprintf_p, _swprintf_p_l](../../c-runtime-library/reference/sprintf-p-sprintf-p-l-swprintf-p-swprintf-p-l.md)   \n [sprintf, _sprintf_l, swprintf, _swprintf_l, \\__swprintf_l](../../c-runtime-library/reference/sprintf-sprintf-l-swprintf-swprintf-l-swprintf-l.md)   \n [sprintf_s, _sprintf_s_l, swprintf_s, _swprintf_s_l](../../c-runtime-library/reference/sprintf-s-sprintf-s-l-swprintf-s-swprintf-s-l.md)   \n [vprintf Functions](../../c-runtime-library/vprintf-functions.md)"}