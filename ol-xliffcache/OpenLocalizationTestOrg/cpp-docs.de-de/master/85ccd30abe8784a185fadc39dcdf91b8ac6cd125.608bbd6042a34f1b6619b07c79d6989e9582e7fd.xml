{"nodes":[{"pos":[12,55],"content":"Linker Tools Error LNK1306 | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Linker Tools Error LNK1306 | Microsoft Docs","pos":[0,43]}]},{"content":"Linker Tools Error LNK1306","pos":[608,634]},{"content":"DLL entry point function cannot be managed; compile to native","pos":[635,696]},{"content":"DllMain cannot be compiled to MSIL; it must be compiled to native.","pos":[703,769]},{"content":"To resolve,","pos":[776,787]},{"pos":[797,861],"content":"Compile the file that contains the entry point without <bpt id=\"p1\">**</bpt>/clr<ept id=\"p1\">**</ept>.","source":"Compile the file that contains the entry point without **/clr**."},{"pos":[871,924],"content":"Put the entry point in a <ph id=\"ph1\">`#pragma unmanaged`</ph> section.","source":"Put the entry point in a `#pragma unmanaged` section."},{"content":"For more information, see","pos":[934,959]},{"content":"/clr (Common Language Runtime Compilation)","pos":[970,1012]},{"content":"managed, unmanaged","pos":[1090,1108]},{"content":"Initialization of Mixed Assemblies","pos":[1161,1195]},{"content":"Run-Time Library Behavior","pos":[1259,1284]},{"content":"Example","pos":[1336,1343]},{"content":"The following sample generates LNK1306.","pos":[1347,1386]}],"content":"---\ntitle: \"Linker Tools Error LNK1306 | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"error-reference\"\nf1_keywords: \n  - \"LNK1306\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"LNK1306\"\nms.assetid: fad1df6a-0bd9-412f-b0d1-7c9bc749c584\ncaps.latest.revision: 11\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Linker Tools Error LNK1306\nDLL entry point function cannot be managed; compile to native  \n  \n DllMain cannot be compiled to MSIL; it must be compiled to native.  \n  \n To resolve,  \n  \n-   Compile the file that contains the entry point without **/clr**.  \n  \n-   Put the entry point in a `#pragma unmanaged` section.  \n  \n-   For more information, see  \n  \n-   [/clr (Common Language Runtime Compilation)](../../build/reference/clr-common-language-runtime-compilation.md)  \n  \n-   [managed, unmanaged](../../preprocessor/managed-unmanaged.md)  \n  \n-   [Initialization of Mixed Assemblies](../../dotnet/initialization-of-mixed-assemblies.md)  \n  \n-   [Run-Time Library Behavior](../../build/run-time-library-behavior.md)  \n  \n## Example  \n The following sample generates LNK1306.  \n  \n```  \n// LNK1306.cpp  \n// compile with: /clr /link /dll /entry:NewDllMain  \n// LNK1306 error expected  \n#include <windows.h>  \nint __stdcall NewDllMain( HINSTANCE h, ULONG ulReason, PVOID pvReserved ) {  \n   return 1;  \n}  \n```"}