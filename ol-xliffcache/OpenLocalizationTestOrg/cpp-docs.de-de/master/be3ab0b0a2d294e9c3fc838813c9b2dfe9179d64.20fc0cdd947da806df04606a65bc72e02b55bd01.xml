{"nodes":[{"pos":[12,62],"content":"-LTCG (Link-time Code Generation) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"-LTCG (Link-time Code Generation) | Microsoft Docs","pos":[0,50]}]},{"content":"/LTCG (Link-time Code Generation)","pos":[972,1005]},{"content":"Remarks","pos":[1105,1112]},{"content":":INCREMENTAL (optional)","pos":[1116,1139]},{"content":"Specifies that the linker only applies whole program optimization or link-time code generation (LTCG) to the set of files affected by an edit, instead of the entire project.","pos":[1143,1316]},{"content":"By default, this flag is not set when /LTCG is specified, and the entire project is linked by using whole program optimization.","pos":[1317,1444]},{"content":":NOSTATUS &amp;#124; :STATUS (optional)","pos":[1451,1486],"source":":NOSTATUS &#124; :STATUS (optional)"},{"content":"Specifies whether the linker displays a progress indicator that shows what percentage of the link is complete.","pos":[1490,1600]},{"content":"By default, this status information is not displayed.","pos":[1601,1654]},{"content":":OFF (optional)","pos":[1661,1676]},{"content":"Disables link-time code generation.","pos":[1680,1715]},{"content":"This behavior is the same as when /LTCG is not specified on the command line.","pos":[1716,1793]},{"content":":PGINSTRUMENT (optional)","pos":[1800,1824]},{"content":"This option is deprecated.","pos":[1828,1854]},{"content":"Instead, use <bpt id=\"p1\">**</bpt>/LTCG<ept id=\"p1\">**</ept> and  <bpt id=\"p2\">**</bpt>/GENPROFILE<ept id=\"p2\">**</ept> or <bpt id=\"p3\">**</bpt>/FASTGENPROFILE<ept id=\"p3\">**</ept> to generate an instrumented build for profile-guided optimization.","pos":[1855,1988],"source":" Instead, use **/LTCG** and  **/GENPROFILE** or **/FASTGENPROFILE** to generate an instrumented build for profile-guided optimization."},{"content":"The data that is collected from instrumented runs is used to create an optimized image.","pos":[1995,2082]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Profile Guided Optimization<ept id=\"p1\">](../../build/reference/profile-guided-optimizations.md)</ept>.","pos":[2083,2194],"source":" For more information, see [Profile Guided Optimization](../../build/reference/profile-guided-optimizations.md)."},{"content":"The short form of this option is /LTCG:PGI.","pos":[2195,2238]},{"content":":PGOPTIMIZE (optional)","pos":[2245,2267]},{"content":"This option is deprecated.","pos":[2271,2297]},{"content":"Instead, use <bpt id=\"p1\">**</bpt>/LTCG<ept id=\"p1\">**</ept> and  <bpt id=\"p2\">**</bpt>/USEPROFILE<ept id=\"p2\">**</ept> to build an optimized image.","pos":[2298,2370],"source":" Instead, use **/LTCG** and  **/USEPROFILE** to build an optimized image."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Profile Guided Optimization<ept id=\"p1\">](../../build/reference/profile-guided-optimizations.md)</ept>.","pos":[2371,2482],"source":" For more information, see [Profile Guided Optimization](../../build/reference/profile-guided-optimizations.md)."},{"content":"The short form of this option is /LTCG:PGO.","pos":[2483,2526]},{"content":":PGUPDATE (optional)","pos":[2533,2553]},{"content":"This option is deprecated.","pos":[2557,2583]},{"content":"Instead, use <bpt id=\"p1\">**</bpt>/LTCG<ept id=\"p1\">**</ept> and  <bpt id=\"p2\">**</bpt>/USEPROFILE<ept id=\"p2\">**</ept> to build an optimized image.","pos":[2584,2656],"source":" Instead, use **/LTCG** and  **/USEPROFILE** to build an optimized image."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Profile Guided Optimization<ept id=\"p1\">](../../build/reference/profile-guided-optimizations.md)</ept>.","pos":[2657,2768],"source":" For more information, see [Profile Guided Optimization](../../build/reference/profile-guided-optimizations.md)."},{"content":"The short form of this option is /LTCG:PGU.","pos":[2769,2812]},{"content":"The /LTCG option tells the linker to call the compiler and perform whole-program optimization.","pos":[2819,2913]},{"content":"You can also do profile guided optimization.","pos":[2914,2958]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Profile Guided Optimization<ept id=\"p1\">](../../build/reference/profile-guided-optimizations.md)</ept>.","pos":[2959,3070],"source":" For more information, see [Profile Guided Optimization](../../build/reference/profile-guided-optimizations.md)."},{"content":"With the following exceptions, you cannot add linker options to the PGO combination of /LTCG and /USEPROFILE that were not specified in the previous PGO initialization combination of  /LTCG and /GENPROFILE options:","pos":[3077,3291]},{"content":"/BASE","pos":[3302,3307]},{"content":"/FIXED","pos":[3363,3369]},{"content":"/LTCG","pos":[3431,3436]},{"content":"/MAP","pos":[3447,3451]},{"content":"/MAPINFO","pos":[3510,3518]},{"content":"/NOLOGO","pos":[3595,3602]},{"content":"/OUT","pos":[3678,3682]},{"content":"/PGD","pos":[3741,3745]},{"content":"/PDB","pos":[3837,3841]},{"content":"/PDBSTRIPPED","pos":[3904,3916]},{"content":"/STUB","pos":[3988,3993]},{"content":"/VERBOSE","pos":[4058,4066]},{"content":"Any linker options that are specified together with the /LTCG and /GENPROFILE options to initialize PGO do not have to be specified when you build by using /LTCG and /USEPROFILE; they are implied.","pos":[4132,4328]},{"content":"The rest of this topic discusses /LTCG in terms of link-time code generation.","pos":[4335,4412]},{"pos":[4419,4503],"content":"/LTCG is implied with <bpt id=\"p1\">[</bpt>/GL<ept id=\"p1\">](../../build/reference/gl-whole-program-optimization.md)</ept>.","source":"/LTCG is implied with [/GL](../../build/reference/gl-whole-program-optimization.md)."},{"content":"The linker invokes link-time code generation if it is passed a module that was compiled by using <bpt id=\"p1\">**</bpt>/GL<ept id=\"p1\">**</ept> or an MSIL module (see <bpt id=\"p2\">[</bpt>.netmodule Files as Linker Input<ept id=\"p2\">](../../build/reference/netmodule-files-as-linker-input.md)</ept>).","pos":[4510,4732],"source":"The linker invokes link-time code generation if it is passed a module that was compiled by using **/GL** or an MSIL module (see [.netmodule Files as Linker Input](../../build/reference/netmodule-files-as-linker-input.md))."},{"content":"If you do not explicitly specify <bpt id=\"p1\">**</bpt>/LTCG<ept id=\"p1\">**</ept> when you pass <bpt id=\"p2\">**</bpt>/GL<ept id=\"p2\">**</ept> or MSIL modules to the linker, the linker eventually detects this and restarts the link by using <bpt id=\"p3\">**</bpt>/LTCG<ept id=\"p3\">**</ept>.","pos":[4733,4905],"source":" If you do not explicitly specify **/LTCG** when you pass **/GL** or MSIL modules to the linker, the linker eventually detects this and restarts the link by using **/LTCG**."},{"content":"Explicitly specify <bpt id=\"p1\">**</bpt>/LTCG<ept id=\"p1\">**</ept> when you pass <bpt id=\"p2\">**</bpt>/GL<ept id=\"p2\">**</ept> and MSIL modules to the linker for the fastest possible build performance.","pos":[4906,5031],"source":" Explicitly specify **/LTCG** when you pass **/GL** and MSIL modules to the linker for the fastest possible build performance."},{"content":"For even faster performance, use <bpt id=\"p1\">**</bpt>/LTCG:INCREMENTAL<ept id=\"p1\">**</ept>.","pos":[5038,5093],"source":"For even faster performance, use **/LTCG:INCREMENTAL**."},{"content":"This option tells the linker to only re-optimize the set of files that is affected by a source file change, instead of the entire project.","pos":[5094,5232]},{"content":"This can significantly reduce the link time required.","pos":[5233,5286]},{"content":"This is not the same option as incremental linking.","pos":[5287,5338]},{"pos":[5345,5453],"content":"<bpt id=\"p1\">**</bpt>/LTCG<ept id=\"p1\">**</ept> is not valid for use with <bpt id=\"p2\">[</bpt>/INCREMENTAL<ept id=\"p2\">](../../build/reference/incremental-link-incrementally.md)</ept>.","source":"**/LTCG** is not valid for use with [/INCREMENTAL](../../build/reference/incremental-link-incrementally.md)."},{"pos":[5460,5809],"content":"When <bpt id=\"p1\">**</bpt>/LTCG<ept id=\"p1\">**</ept> is used to link modules compiled by using <bpt id=\"p2\">[</bpt>/Og<ept id=\"p2\">](../../build/reference/og-global-optimizations.md)</ept>, <bpt id=\"p3\">[</bpt>/O1<ept id=\"p3\">](../../build/reference/o1-o2-minimize-size-maximize-speed.md)</ept>, <bpt id=\"p4\">[</bpt>/O2<ept id=\"p4\">](../../build/reference/o1-o2-minimize-size-maximize-speed.md)</ept>, or <bpt id=\"p5\">[</bpt>/Ox<ept id=\"p5\">](../../build/reference/ox-full-optimization.md)</ept>, the following optimizations are performed:","source":"When **/LTCG** is used to link modules compiled by using [/Og](../../build/reference/og-global-optimizations.md), [/O1](../../build/reference/o1-o2-minimize-size-maximize-speed.md), [/O2](../../build/reference/o1-o2-minimize-size-maximize-speed.md), or [/Ox](../../build/reference/ox-full-optimization.md), the following optimizations are performed:"},{"content":"Cross-module inlining","pos":[5819,5840]},{"content":"Interprocedural register allocation (64-bit operating systems only)","pos":[5850,5917]},{"content":"Custom calling convention (x86 only)","pos":[5927,5963]},{"content":"Small TLS displacement (x86 only)","pos":[5973,6006]},{"content":"Stack double alignment (x86 only)","pos":[6016,6049]},{"content":"Improved memory disambiguation (better interference information for global variables and input parameters)","pos":[6059,6165]},{"pos":[6173,6309],"content":"[!NOTE]\n The linker determines which optimizations were used to compile each function and applies the same optimizations at link time.","leadings":["","> "],"nodes":[{"content":"The linker determines which optimizations were used to compile each function and applies the same optimizations at link time.","pos":[9,134]}]},{"pos":[6316,6382],"content":"Using <bpt id=\"p1\">**</bpt>/LTCG<ept id=\"p1\">**</ept> and <bpt id=\"p2\">**</bpt>/Ogt<ept id=\"p2\">**</ept> causes double-alignment optimization.","source":"Using **/LTCG** and **/Ogt** causes double-alignment optimization."},{"content":"If <bpt id=\"p1\">**</bpt>/LTCG<ept id=\"p1\">**</ept> and <bpt id=\"p2\">**</bpt>/Ogs<ept id=\"p2\">**</ept> are specified, double alignment is not performed.","pos":[6389,6464],"source":"If **/LTCG** and **/Ogs** are specified, double alignment is not performed."},{"content":"If most of the functions in an application are compiled for speed, with a few functions compiled for size (for example, by using the <bpt id=\"p1\">[</bpt>optimize<ept id=\"p1\">](../../preprocessor/optimize.md)</ept> pragma), the compiler double-aligns the functions that are optimized for size if they call functions that require double alignment.","pos":[6465,6772],"source":" If most of the functions in an application are compiled for speed, with a few functions compiled for size (for example, by using the [optimize](../../preprocessor/optimize.md) pragma), the compiler double-aligns the functions that are optimized for size if they call functions that require double alignment."},{"content":"If the compiler can identify all of the call sites of a function, the compiler ignores explicit calling-convention modifiers on a function and tries to optimize the function's calling convention:","pos":[6779,6974]},{"content":"pass parameters in registers","pos":[6984,7012]},{"content":"reorder parameters for alignment","pos":[7022,7054]},{"content":"remove unused parameters","pos":[7064,7088]},{"pos":[7095,7307],"content":"If a function is called through a function pointer, or if a function is called from outside a module that is compiled by using <bpt id=\"p1\">**</bpt>/GL<ept id=\"p1\">**</ept>, the compiler does not attempt to optimize the function's calling convention.","source":"If a function is called through a function pointer, or if a function is called from outside a module that is compiled by using **/GL**, the compiler does not attempt to optimize the function's calling convention."},{"pos":[7315,7708],"content":"[!NOTE]\n If you use **/LTCG** and redefine mainCRTStartup, your application can have unpredictable behavior that relates to user code that executes before global objects are initialized.  There are three ways to address this issue: do not redefine mainCRTStartup, do not compile the file that contains mainCRTStartup by using **/LTCG**, or initialize global variables and objects statically.","leadings":["","> "],"nodes":[{"content":" If you use **/LTCG** and redefine mainCRTStartup, your application can have unpredictable behavior that relates to user code that executes before global objects are initialized.  There are three ways to address this issue: do not redefine mainCRTStartup, do not compile the file that contains mainCRTStartup by using **/LTCG**, or initialize global variables and objects statically.","pos":[8,391],"nodes":[{"content":"If you use <bpt id=\"p1\">**</bpt>/LTCG<ept id=\"p1\">**</ept> and redefine mainCRTStartup, your application can have unpredictable behavior that relates to user code that executes before global objects are initialized.","pos":[1,178],"source":" If you use **/LTCG** and redefine mainCRTStartup, your application can have unpredictable behavior that relates to user code that executes before global objects are initialized."},{"content":"There are three ways to address this issue: do not redefine mainCRTStartup, do not compile the file that contains mainCRTStartup by using <bpt id=\"p1\">**</bpt>/LTCG<ept id=\"p1\">**</ept>, or initialize global variables and objects statically.","pos":[180,383],"source":"  There are three ways to address this issue: do not redefine mainCRTStartup, do not compile the file that contains mainCRTStartup by using **/LTCG**, or initialize global variables and objects statically."}]}]},{"content":"/LTCG and MSIL Modules","pos":[7717,7739]},{"pos":[7743,7980],"content":"Modules that are compiled by using <bpt id=\"p1\">[</bpt>/GL<ept id=\"p1\">](../../build/reference/gl-whole-program-optimization.md)</ept> and <bpt id=\"p2\">[</bpt>/clr<ept id=\"p2\">](../../build/reference/clr-common-language-runtime-compilation.md)</ept> can be used as input to the linker when <bpt id=\"p3\">**</bpt>/LTCG<ept id=\"p3\">**</ept> is specified.","source":"Modules that are compiled by using [/GL](../../build/reference/gl-whole-program-optimization.md) and [/clr](../../build/reference/clr-common-language-runtime-compilation.md) can be used as input to the linker when **/LTCG** is specified."},{"pos":[7990,8208],"content":"<bpt id=\"p1\">**</bpt>/LTCG<ept id=\"p1\">**</ept> can accept native object files, mixed native/managed object files (compiled by using <bpt id=\"p2\">**</bpt>/clr<ept id=\"p2\">**</ept>), and pure object files (compiled by using <bpt id=\"p3\">**</bpt>/clr:pure<ept id=\"p3\">**</ept>), and safe object files (compiled by using <bpt id=\"p4\">**</bpt>/clr:safe<ept id=\"p4\">**</ept>)","source":"**/LTCG** can accept native object files, mixed native/managed object files (compiled by using **/clr**), and pure object files (compiled by using **/clr:pure**), and safe object files (compiled by using **/clr:safe**)"},{"content":"<bpt id=\"p1\">**</bpt>/LTCG<ept id=\"p1\">**</ept> can accept safe .netmodules, which can be created by using <bpt id=\"p2\">**</bpt>/clr:safe /LN<ept id=\"p2\">**</ept> in Visual C++ and <bpt id=\"p3\">**</bpt>/target:module<ept id=\"p3\">**</ept> in any other Visual Studio compiler.","pos":[8218,8378],"source":"**/LTCG** can accept safe .netmodules, which can be created by using **/clr:safe /LN** in Visual C++ and **/target:module** in any other Visual Studio compiler."},{"content":".Netmodules produced by using<bpt id=\"p1\">**</bpt>/clr<ept id=\"p1\">**</ept> or <bpt id=\"p2\">**</bpt>/clr:pure<ept id=\"p2\">**</ept> are not accepted by <bpt id=\"p3\">**</bpt>/LTCG<ept id=\"p3\">**</ept>.","pos":[8379,8464],"source":" .Netmodules produced by using**/clr** or **/clr:pure** are not accepted by **/LTCG**."},{"pos":[8474,8604],"content":"/LTCG:PGI does not accept native modules compiled by using <bpt id=\"p1\">**</bpt>/GL<ept id=\"p1\">**</ept> and <bpt id=\"p2\">**</bpt>/clr<ept id=\"p2\">**</ept>, or pure modules (produced by using <bpt id=\"p3\">**</bpt>/clr:pure<ept id=\"p3\">**</ept>)","source":"/LTCG:PGI does not accept native modules compiled by using **/GL** and **/clr**, or pure modules (produced by using **/clr:pure**)"},{"content":"To set this compiler option in the Visual Studio development environment","pos":[8615,8687]},{"content":"Open the project <bpt id=\"p1\">**</bpt>Property Pages<ept id=\"p1\">**</ept> dialog box.","pos":[8697,8744],"source":"Open the project **Property Pages** dialog box."},{"content":"See <bpt id=\"p1\">[</bpt>Working with Project Properties<ept id=\"p1\">](../../ide/working-with-project-properties.md)</ept>.","pos":[8745,8829],"source":" See [Working with Project Properties](../../ide/working-with-project-properties.md)."},{"pos":[8839,8886],"content":"Select the <bpt id=\"p1\">**</bpt>Configuration Properties<ept id=\"p1\">**</ept> folder.","source":"Select the **Configuration Properties** folder."},{"pos":[8896,8933],"content":"Select the <bpt id=\"p1\">**</bpt>General<ept id=\"p1\">**</ept> property page.","source":"Select the **General** property page."},{"pos":[8943,8994],"content":"Modify the <bpt id=\"p1\">**</bpt>Whole Program Optimization<ept id=\"p1\">**</ept> property.","source":"Modify the **Whole Program Optimization** property."},{"pos":[9001,9220],"content":"You can also apply <bpt id=\"p1\">**</bpt>/LTCG<ept id=\"p1\">**</ept> to specific builds by choosing <bpt id=\"p2\">**</bpt>Build<ept id=\"p2\">**</ept>, <bpt id=\"p3\">**</bpt>Profile Guided Optimization<ept id=\"p3\">**</ept> on the menu bar, or by choosing one of the Profile Guided Optimization options on the shortcut menu for the project.","source":"You can also apply **/LTCG** to specific builds by choosing **Build**, **Profile Guided Optimization** on the menu bar, or by choosing one of the Profile Guided Optimization options on the shortcut menu for the project."},{"content":"To set this compiler option programmatically","pos":[9231,9275]},{"content":"See &lt;xref:Microsoft.VisualStudio.VCProjectEngine.VCLinkerTool.LinkTimeCodeGeneration%2A&gt;.","pos":[9285,9374],"source":"See <xref:Microsoft.VisualStudio.VCProjectEngine.VCLinkerTool.LinkTimeCodeGeneration%2A>."},{"content":"See Also","pos":[9383,9391]},{"content":"Setting Linker Options","pos":[9396,9418]},{"content":"Linker Options","pos":[9474,9488]}],"content":"---\ntitle: \"-LTCG (Link-time Code Generation) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"VC.Project.VCLinkerTool.LinkTimeCodeGeneration\"\n  - \"VC.Project.VCConfiguration.WholeProgramOptimization\"\n  - \"VC.Project.VCCLWCECompilerTool.WholeProgramOptimization\"\n  - \"/ltcg\"\n  - \"VC.Project.VCCLCompilerTool.WholeProgramOptimization\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"link-time code generation in C++ linker\"\n  - \"/LTCG linker option\"\n  - \"-LTCG linker option\"\n  - \"LTCG linker option\"\nms.assetid: 788c6f52-fdb8-40c2-90af-4026ea2cf2e2\ncaps.latest.revision: 22\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"ru-ru\"\n  - \"zh-cn\"\n  - \"zh-tw\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"tr-tr\"\n---\n# /LTCG (Link-time Code Generation)\n```  \n/LTCG[:INCREMENTAL|:NOSTATUS|:STATUS|:OFF|:PGINSTRUMENT|:PGOPTIMIZE|:PGUPDATE]  \n```  \n  \n## Remarks  \n :INCREMENTAL (optional)  \n Specifies that the linker only applies whole program optimization or link-time code generation (LTCG) to the set of files affected by an edit, instead of the entire project. By default, this flag is not set when /LTCG is specified, and the entire project is linked by using whole program optimization.  \n  \n :NOSTATUS &#124; :STATUS (optional)  \n Specifies whether the linker displays a progress indicator that shows what percentage of the link is complete. By default, this status information is not displayed.  \n  \n :OFF (optional)  \n Disables link-time code generation. This behavior is the same as when /LTCG is not specified on the command line.  \n  \n :PGINSTRUMENT (optional)  \n This option is deprecated. Instead, use **/LTCG** and  **/GENPROFILE** or **/FASTGENPROFILE** to generate an instrumented build for profile-guided optimization.  \n  \n The data that is collected from instrumented runs is used to create an optimized image. For more information, see [Profile Guided Optimization](../../build/reference/profile-guided-optimizations.md). The short form of this option is /LTCG:PGI.  \n  \n :PGOPTIMIZE (optional)  \n This option is deprecated. Instead, use **/LTCG** and  **/USEPROFILE** to build an optimized image. For more information, see [Profile Guided Optimization](../../build/reference/profile-guided-optimizations.md). The short form of this option is /LTCG:PGO.  \n  \n :PGUPDATE (optional)  \n This option is deprecated. Instead, use **/LTCG** and  **/USEPROFILE** to build an optimized image. For more information, see [Profile Guided Optimization](../../build/reference/profile-guided-optimizations.md). The short form of this option is /LTCG:PGU.  \n  \n The /LTCG option tells the linker to call the compiler and perform whole-program optimization. You can also do profile guided optimization. For more information, see [Profile Guided Optimization](../../build/reference/profile-guided-optimizations.md).  \n  \n With the following exceptions, you cannot add linker options to the PGO combination of /LTCG and /USEPROFILE that were not specified in the previous PGO initialization combination of  /LTCG and /GENPROFILE options:  \n  \n-   [/BASE](../../build/reference/base-base-address.md)  \n  \n-   [/FIXED](../../build/reference/fixed-fixed-base-address.md)  \n  \n-   /LTCG  \n  \n-   [/MAP](../../build/reference/map-generate-mapfile.md)  \n  \n-   [/MAPINFO](../../build/reference/mapinfo-include-information-in-mapfile.md)  \n  \n-   [/NOLOGO](../../build/reference/nologo-suppress-startup-banner-linker.md)  \n  \n-   [/OUT](../../build/reference/out-output-file-name.md)  \n  \n-   [/PGD](../../build/reference/pgd-specify-database-for-profile-guided-optimizations.md)  \n  \n-   [/PDB](../../build/reference/pdb-use-program-database.md)  \n  \n-   [/PDBSTRIPPED](../../build/reference/pdbstripped-strip-private-symbols.md)  \n  \n-   [/STUB](../../build/reference/stub-ms-dos-stub-file-name.md)  \n  \n-   [/VERBOSE](../../build/reference/verbose-print-progress-messages.md)  \n  \n Any linker options that are specified together with the /LTCG and /GENPROFILE options to initialize PGO do not have to be specified when you build by using /LTCG and /USEPROFILE; they are implied.  \n  \n The rest of this topic discusses /LTCG in terms of link-time code generation.  \n  \n /LTCG is implied with [/GL](../../build/reference/gl-whole-program-optimization.md).  \n  \n The linker invokes link-time code generation if it is passed a module that was compiled by using **/GL** or an MSIL module (see [.netmodule Files as Linker Input](../../build/reference/netmodule-files-as-linker-input.md)). If you do not explicitly specify **/LTCG** when you pass **/GL** or MSIL modules to the linker, the linker eventually detects this and restarts the link by using **/LTCG**. Explicitly specify **/LTCG** when you pass **/GL** and MSIL modules to the linker for the fastest possible build performance.  \n  \n For even faster performance, use **/LTCG:INCREMENTAL**. This option tells the linker to only re-optimize the set of files that is affected by a source file change, instead of the entire project. This can significantly reduce the link time required. This is not the same option as incremental linking.  \n  \n **/LTCG** is not valid for use with [/INCREMENTAL](../../build/reference/incremental-link-incrementally.md).  \n  \n When **/LTCG** is used to link modules compiled by using [/Og](../../build/reference/og-global-optimizations.md), [/O1](../../build/reference/o1-o2-minimize-size-maximize-speed.md), [/O2](../../build/reference/o1-o2-minimize-size-maximize-speed.md), or [/Ox](../../build/reference/ox-full-optimization.md), the following optimizations are performed:  \n  \n-   Cross-module inlining  \n  \n-   Interprocedural register allocation (64-bit operating systems only)  \n  \n-   Custom calling convention (x86 only)  \n  \n-   Small TLS displacement (x86 only)  \n  \n-   Stack double alignment (x86 only)  \n  \n-   Improved memory disambiguation (better interference information for global variables and input parameters)  \n  \n> [!NOTE]\n>  The linker determines which optimizations were used to compile each function and applies the same optimizations at link time.  \n  \n Using **/LTCG** and **/Ogt** causes double-alignment optimization.  \n  \n If **/LTCG** and **/Ogs** are specified, double alignment is not performed. If most of the functions in an application are compiled for speed, with a few functions compiled for size (for example, by using the [optimize](../../preprocessor/optimize.md) pragma), the compiler double-aligns the functions that are optimized for size if they call functions that require double alignment.  \n  \n If the compiler can identify all of the call sites of a function, the compiler ignores explicit calling-convention modifiers on a function and tries to optimize the function's calling convention:  \n  \n-   pass parameters in registers  \n  \n-   reorder parameters for alignment  \n  \n-   remove unused parameters  \n  \n If a function is called through a function pointer, or if a function is called from outside a module that is compiled by using **/GL**, the compiler does not attempt to optimize the function's calling convention.  \n  \n> [!NOTE]\n>  If you use **/LTCG** and redefine mainCRTStartup, your application can have unpredictable behavior that relates to user code that executes before global objects are initialized.  There are three ways to address this issue: do not redefine mainCRTStartup, do not compile the file that contains mainCRTStartup by using **/LTCG**, or initialize global variables and objects statically.  \n  \n## /LTCG and MSIL Modules  \n Modules that are compiled by using [/GL](../../build/reference/gl-whole-program-optimization.md) and [/clr](../../build/reference/clr-common-language-runtime-compilation.md) can be used as input to the linker when **/LTCG** is specified.  \n  \n-   **/LTCG** can accept native object files, mixed native/managed object files (compiled by using **/clr**), and pure object files (compiled by using **/clr:pure**), and safe object files (compiled by using **/clr:safe**)  \n  \n-   **/LTCG** can accept safe .netmodules, which can be created by using **/clr:safe /LN** in Visual C++ and **/target:module** in any other Visual Studio compiler. .Netmodules produced by using**/clr** or **/clr:pure** are not accepted by **/LTCG**.  \n  \n-   /LTCG:PGI does not accept native modules compiled by using **/GL** and **/clr**, or pure modules (produced by using **/clr:pure**)  \n  \n#### To set this compiler option in the Visual Studio development environment  \n  \n1.  Open the project **Property Pages** dialog box. See [Working with Project Properties](../../ide/working-with-project-properties.md).  \n  \n2.  Select the **Configuration Properties** folder.  \n  \n3.  Select the **General** property page.  \n  \n4.  Modify the **Whole Program Optimization** property.  \n  \n You can also apply **/LTCG** to specific builds by choosing **Build**, **Profile Guided Optimization** on the menu bar, or by choosing one of the Profile Guided Optimization options on the shortcut menu for the project.  \n  \n#### To set this compiler option programmatically  \n  \n-   See <xref:Microsoft.VisualStudio.VCProjectEngine.VCLinkerTool.LinkTimeCodeGeneration%2A>.  \n  \n## See Also  \n [Setting Linker Options](../../build/reference/setting-linker-options.md)   \n [Linker Options](../../build/reference/linker-options.md)"}