{"nodes":[{"pos":[12,61],"content":"Compiler Warning (level 4) C4204 | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Compiler Warning (level 4) C4204 | Microsoft Docs","pos":[0,49]}]},{"pos":[609,641],"content":"Compiler Warning (level 4) C4204","linkify":"Compiler Warning (level 4) C4204","nodes":[{"content":"Compiler Warning (level 4) C4204","pos":[0,32]}]},{"content":"nonstandard extension used : non-constant aggregate initializer","pos":[642,705]},{"content":"With Microsoft extensions (/Ze), you can initialize aggregate types (arrays, structures, unions, and classes) with values that are not constants.","pos":[712,857]},{"pos":[866,873],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[1087,1213],"content":"Such initializations are invalid under ANSI compatibility (<bpt id=\"p1\">[</bpt>/Za<ept id=\"p1\">](../../build/reference/za-ze-disable-language-extensions.md)</ept>).","source":"Such initializations are invalid under ANSI compatibility ([/Za](../../build/reference/za-ze-disable-language-extensions.md))."}],"content":"---\ntitle: \"Compiler Warning (level 4) C4204 | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"error-reference\"\nf1_keywords: \n  - \"C4204\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"C4204\"\nms.assetid: 298d2880-6737-448e-b711-15572d540200\ncaps.latest.revision: 7\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Compiler Warning (level 4) C4204\nnonstandard extension used : non-constant aggregate initializer  \n  \n With Microsoft extensions (/Ze), you can initialize aggregate types (arrays, structures, unions, and classes) with values that are not constants.  \n  \n## Example  \n  \n```  \n// C4204.c  \n// compile with: /W4  \nint func1()  \n{  \n   return 0;  \n}  \nstruct S1  \n{  \n   int i;  \n};  \n  \nint main()  \n{  \n   struct S1 s1 = { func1() };   // C4204  \n   return s1.i;  \n}  \n```  \n  \n Such initializations are invalid under ANSI compatibility ([/Za](../../build/reference/za-ze-disable-language-extensions.md))."}