{"nodes":[{"pos":[12,39],"content":"fpclassify | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"fpclassify | Microsoft Docs","pos":[0,27]}]},{"pos":[811,821],"content":"fpclassify","linkify":"fpclassify","nodes":[{"content":"fpclassify","pos":[0,10]}]},{"content":"Returns the floating-point classification of the argument.","pos":[822,880]},{"pos":[889,895],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[1143,1153],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"The floating-point value to test.","pos":[1164,1197]},{"pos":[1206,1218],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"<ph id=\"ph1\">`fpclassify`</ph> returns an integer value that indicates the floating-point class of the argument <ph id=\"ph2\">`x`</ph>.","pos":[1222,1320],"source":"`fpclassify` returns an integer value that indicates the floating-point class of the argument `x`."},{"content":"This table shows the possible values returned by <ph id=\"ph1\">`fpclassify`</ph>, defined in <ph id=\"ph2\">\\&lt;</ph>math.h&gt;.","pos":[1321,1405],"source":" This table shows the possible values returned by `fpclassify`, defined in \\<math.h>."},{"content":"Value","pos":[1412,1417]},{"content":"Description","pos":[1418,1429]},{"content":"A quiet, signaling, or indeterminate NaN","pos":[1477,1517]},{"content":"A positive or negative infinity","pos":[1536,1567]},{"content":"A positive or negative normalized non-zero value","pos":[1584,1632]},{"content":"A positive or negative denormalized value","pos":[1652,1693]},{"content":"A positive or negative zero value","pos":[1708,1741]},{"pos":[1751,1758],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"In C, <ph id=\"ph1\">`fpclassify`</ph> is a macro; in C++, <ph id=\"ph2\">`fpclassify`</ph> is a function overloaded using argument types of <ph id=\"ph3\">`float`</ph>, <ph id=\"ph4\">`double`</ph>, or <ph id=\"ph5\">`long double`</ph>.","pos":[1762,1899],"source":"In C, `fpclassify` is a macro; in C++, `fpclassify` is a function overloaded using argument types of `float`, `double`, or `long double`."},{"content":"In either case, the value returned depends on the effective type of the argument expression, and not on any intermediate representation.","pos":[1900,2036]},{"content":"For example, a normal <ph id=\"ph1\">`double`</ph> or <ph id=\"ph2\">`long double`</ph> value can become an infinity, denormal, or zero value when converted to a <ph id=\"ph3\">`float`</ph>.","pos":[2037,2167],"source":" For example, a normal `double` or `long double` value can become an infinity, denormal, or zero value when converted to a `float`."},{"pos":[2176,2188],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"content":"Function/Macro","pos":[2195,2209]},{"content":"Required header (C)","pos":[2210,2229]},{"content":"Required header (C++)","pos":[2230,2251]},{"content":"<ph id=\"ph1\">\\&lt;</ph>math.h&gt;","pos":[2355,2364],"source":"\\<math.h>"},{"content":"<ph id=\"ph1\">\\&lt;</ph>math.h&gt; or <ph id=\"ph2\">\\&lt;</ph>cmath&gt;","pos":[2365,2386],"source":"\\<math.h> or \\<cmath>"},{"content":"The <ph id=\"ph1\">`fpclassify`</ph> macro and <ph id=\"ph2\">`fpclassify`</ph> functions conform to the C99 and C++11 specifications.","pos":[2394,2488],"source":"The `fpclassify` macro and `fpclassify` functions conform to the C99 and C++11 specifications."},{"content":"For more compatibility information, see <bpt id=\"p1\">[</bpt>Compatibility<ept id=\"p1\">](../../c-runtime-library/compatibility.md)</ept>.","pos":[2489,2587],"source":" For more compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md)."},{"pos":[2596,2604],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Floating-Point Support<ept id=\"p1\">](../../c-runtime-library/floating-point-support.md)</ept><ph id=\"ph1\"> </ph>","pos":[2608,2684],"source":"[Floating-Point Support](../../c-runtime-library/floating-point-support.md) "},{"content":"<bpt id=\"p1\"> [</bpt>isnan, _isnan, _isnanf<ept id=\"p1\">](../../c-runtime-library/reference/isnan-isnan-isnanf.md)</ept>","pos":[2687,2769],"source":" [isnan, _isnan, _isnanf](../../c-runtime-library/reference/isnan-isnan-isnanf.md)"}],"content":"---\ntitle: \"fpclassify | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\napiname: \n  - \"fpclassify\"\napilocation: \n  - \"msvcrt.dll\"\n  - \"msvcr80.dll\"\n  - \"msvcr90.dll\"\n  - \"msvcr100.dll\"\n  - \"msvcr100_clr0400.dll\"\n  - \"msvcr110.dll\"\n  - \"msvcr110_clr0400.dll\"\n  - \"msvcr120.dll\"\n  - \"msvcr120_clr0400.dll\"\n  - \"ucrtbase.dll\"\napitype: \"HeaderDef\"\nf1_keywords: \n  - \"fpclassify\"\n  - \"math/fpclassify\"\nhelpviewer_keywords: \n  - \"fpclassify macro\"\n  - \"fpclassify function\"\nms.assetid: bf549499-7ff9-4a58-8692-f2d1cb6bab81\ncaps.latest.revision: 3\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.mt: \n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"ru-ru\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# fpclassify\nReturns the floating-point classification of the argument.  \n  \n## Syntax  \n  \n```  \nint fpclassify(   \n   /* floating-point */ x   \n);  \n  \nint fpclassify(   \n   float x   \n); // C++ only  \n  \nint fpclassify(   \n   double x   \n); // C++ only  \n  \nint fpclassify(   \n   long double x   \n); // C++ only  \n  \n```  \n  \n#### Parameters  \n `x`  \n The floating-point value to test.  \n  \n## Return Value  \n `fpclassify` returns an integer value that indicates the floating-point class of the argument `x`. This table shows the possible values returned by `fpclassify`, defined in \\<math.h>.  \n  \n|Value|Description|  \n|-----------|-----------------|  \n|`FP_NAN`|A quiet, signaling, or indeterminate NaN|  \n|`FP_INFINITE`|A positive or negative infinity|  \n|`FP_NORMAL`|A positive or negative normalized non-zero value|  \n|`FP_SUBNORMAL`|A positive or negative denormalized value|  \n|`FP_ZERO`|A positive or negative zero value|  \n  \n## Remarks  \n In C, `fpclassify` is a macro; in C++, `fpclassify` is a function overloaded using argument types of `float`, `double`, or `long double`. In either case, the value returned depends on the effective type of the argument expression, and not on any intermediate representation. For example, a normal `double` or `long double` value can become an infinity, denormal, or zero value when converted to a `float`.  \n  \n## Requirements  \n  \n|Function/Macro|Required header (C)|Required header (C++)|  \n|---------------------|---------------------------|-------------------------------|  \n|`fpclassify`|\\<math.h>|\\<math.h> or \\<cmath>|  \n  \n The `fpclassify` macro and `fpclassify` functions conform to the C99 and C++11 specifications. For more compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md).  \n  \n## See Also  \n [Floating-Point Support](../../c-runtime-library/floating-point-support.md)   \n [isnan, _isnan, _isnanf](../../c-runtime-library/reference/isnan-isnan-isnanf.md)"}