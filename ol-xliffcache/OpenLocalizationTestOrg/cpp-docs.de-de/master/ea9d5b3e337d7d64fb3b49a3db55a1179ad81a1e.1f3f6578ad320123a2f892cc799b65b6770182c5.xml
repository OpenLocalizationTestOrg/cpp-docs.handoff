{"nodes":[{"pos":[12,53],"content":"_ismbblead, _ismbblead_l | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"_ismbblead, _ismbblead_l | Microsoft Docs","pos":[0,41]}]},{"content":"_ismbblead, _ismbblead_l","pos":[1163,1187]},{"content":"Tests a character to determine whether it is a lead byte of a multibyte character.","pos":[1188,1270]},{"content":"Syntax","pos":[1279,1285]},{"content":"Parameters","pos":[1423,1433]},{"content":"Integer to be tested.","pos":[1444,1465]},{"content":"Locale to use.","pos":[1484,1498]},{"content":"Return Value","pos":[1507,1519]},{"pos":[1523,1609],"content":"Returns a nonzero value if the integer <ph id=\"ph1\">`c`</ph> is the first byte of a multibyte character.","source":"Returns a nonzero value if the integer `c` is the first byte of a multibyte character."},{"content":"Remarks","pos":[1618,1625]},{"content":"Multibyte characters consist of a lead byte followed by a trailing byte.","pos":[1629,1701]},{"content":"Lead bytes are distinguished by being in a particular range for a given character set.","pos":[1702,1788]},{"content":"For example, in code page 932 only, lead bytes range from 0x81 – 0x9F and 0xE0 – 0xFC.","pos":[1789,1875]},{"content":"uses the current locale for locale-dependent behavior.","pos":[1895,1949]},{"content":"is identical except that it uses the locale passed in instead.","pos":[1965,2027]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Locale<ept id=\"p1\">](../../c-runtime-library/locale.md)</ept>.","pos":[2028,2098],"source":" For more information, see [Locale](../../c-runtime-library/locale.md)."},{"content":"Generic-Text Routine Mappings","pos":[2108,2137]},{"content":"Tchar.h routine","pos":[2144,2159]},{"content":"_UNICODE and _MBCS not defined","pos":[2160,2190]},{"content":"_MBCS defined","pos":[2191,2204]},{"content":"_UNICODE defined","pos":[2205,2221]},{"content":"Always returns false","pos":[2347,2367]},{"content":"Always returns false","pos":[2381,2401]},{"content":"Requirements","pos":[2411,2423]},{"content":"Routine","pos":[2430,2437]},{"content":"Required header","pos":[2438,2453]},{"content":"Optional header","pos":[2454,2469]},{"content":"mbctype.h&gt; or <ph id=\"ph1\">\\&lt;</ph>mbstring.h&gt;","pos":[2551,2578],"source":"mbctype.h> or \\<mbstring.h>"},{"content":"ctype.h&gt;,* <ph id=\"ph1\">\\&lt;</ph>limits.h&gt;, <ph id=\"ph2\">\\&lt;</ph>stdlib.h&gt;","pos":[2581,2616],"source":"ctype.h>,* \\<limits.h>, \\<stdlib.h>"},{"content":"mbctype.h&gt; or <ph id=\"ph1\">\\&lt;</ph>mbstring.h&gt;","pos":[2638,2665],"source":"mbctype.h> or \\<mbstring.h>"},{"content":"ctype.h&gt;,* <ph id=\"ph1\">\\&lt;</ph>limits.h&gt;, <ph id=\"ph2\">\\&lt;</ph>stdlib.h&gt;","pos":[2668,2703],"source":"ctype.h>,* \\<limits.h>, \\<stdlib.h>"},{"content":"For manifest constants for the test conditions.","pos":[2714,2761]},{"pos":[2768,2866],"content":"For more compatibility information, see <bpt id=\"p1\">[</bpt>Compatibility<ept id=\"p1\">](../../c-runtime-library/compatibility.md)</ept>.","source":"For more compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md)."},{"content":".NET Framework Equivalent","pos":[2875,2900]},{"content":"Not applicable.","pos":[2904,2919]},{"content":"To call the standard C function, use <ph id=\"ph1\">`PInvoke`</ph>.","pos":[2920,2967],"source":" To call the standard C function, use `PInvoke`."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Platform Invoke Examples<ept id=\"p1\">](http://msdn.microsoft.com/Library/15926806-f0b7-487e-93a6-4e9367ec689f)</ept>.","pos":[2968,3093],"source":" For more information, see [Platform Invoke Examples](http://msdn.microsoft.com/Library/15926806-f0b7-487e-93a6-4e9367ec689f)."},{"content":"See Also","pos":[3102,3110]},{"content":"Byte Classification","pos":[3115,3134]},{"content":"_ismbb Routines","pos":[3189,3204]}],"content":"---\ntitle: \"_ismbblead, _ismbblead_l | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\napiname: \n  - \"_ismbblead_l\"\n  - \"_ismbblead\"\napilocation: \n  - \"msvcrt.dll\"\n  - \"msvcr80.dll\"\n  - \"msvcr90.dll\"\n  - \"msvcr100.dll\"\n  - \"msvcr100_clr0400.dll\"\n  - \"msvcr110.dll\"\n  - \"msvcr110_clr0400.dll\"\n  - \"msvcr120.dll\"\n  - \"msvcr120_clr0400.dll\"\n  - \"ucrtbase.dll\"\n  - \"api-ms-win-crt-multibyte-l1-1-0.dll\"\napitype: \"DLLExport\"\nf1_keywords: \n  - \"ismbblead_l\"\n  - \"istlead\"\n  - \"_ismbblead\"\n  - \"_ismbblead_l\"\n  - \"ismbblead\"\n  - \"_istlead\"\ndev_langs: \n  - \"C++\"\n  - \"C\"\nhelpviewer_keywords: \n  - \"_ismbblead_l function\"\n  - \"ismbblead function\"\n  - \"_ismbblead function\"\n  - \"istlead function\"\n  - \"ismbblead_l function\"\n  - \"_istlead function\"\nms.assetid: 2abc6f75-ed5c-472e-bfd0-e905a1835ccf\ncaps.latest.revision: 21\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# _ismbblead, _ismbblead_l\nTests a character to determine whether it is a lead byte of a multibyte character.  \n  \n## Syntax  \n  \n```  \nint _ismbblead(  \n   unsigned int c   \n);  \nint _ismbblead_l(  \n   unsigned int c,  \n   _locale_t locale  \n);  \n```  \n  \n#### Parameters  \n `c`  \n Integer to be tested.  \n  \n `locale`  \n Locale to use.  \n  \n## Return Value  \n Returns a nonzero value if the integer `c` is the first byte of a multibyte character.  \n  \n## Remarks  \n Multibyte characters consist of a lead byte followed by a trailing byte. Lead bytes are distinguished by being in a particular range for a given character set. For example, in code page 932 only, lead bytes range from 0x81 – 0x9F and 0xE0 – 0xFC.  \n  \n `_ismbblead` uses the current locale for locale-dependent behavior. `_ismbblead_l` is identical except that it uses the locale passed in instead. For more information, see [Locale](../../c-runtime-library/locale.md).  \n  \n### Generic-Text Routine Mappings  \n  \n|Tchar.h routine|_UNICODE and _MBCS not defined|_MBCS defined|_UNICODE defined|  \n|---------------------|--------------------------------------|--------------------|-----------------------|  \n|`_istlead`|Always returns false|`_ismbblead`|Always returns false|  \n  \n## Requirements  \n  \n|Routine|Required header|Optional header|  \n|-------------|---------------------|---------------------|  \n|`_ismbblead`|\\<mbctype.h> or \\<mbstring.h>|\\<ctype.h>,* \\<limits.h>, \\<stdlib.h>|  \n|`_ismbblead_l`|\\<mbctype.h> or \\<mbstring.h>|\\<ctype.h>,* \\<limits.h>, \\<stdlib.h>|  \n  \n \\* For manifest constants for the test conditions.  \n  \n For more compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md).  \n  \n## .NET Framework Equivalent  \n Not applicable. To call the standard C function, use `PInvoke`. For more information, see [Platform Invoke Examples](http://msdn.microsoft.com/Library/15926806-f0b7-487e-93a6-4e9367ec689f).  \n  \n## See Also  \n [Byte Classification](../../c-runtime-library/byte-classification.md)   \n [_ismbb Routines](../../c-runtime-library/ismbb-routines.md)"}