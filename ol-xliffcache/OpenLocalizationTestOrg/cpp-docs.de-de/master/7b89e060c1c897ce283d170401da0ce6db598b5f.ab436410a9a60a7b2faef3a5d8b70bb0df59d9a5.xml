{"nodes":[{"pos":[12,73],"content":"Using Drop-Down Buttons in a Toolbar Control | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Using Drop-Down Buttons in a Toolbar Control | Microsoft Docs","pos":[0,61]}]},{"content":"Using Drop-Down Buttons in a Toolbar Control","pos":[821,865]},{"content":"In addition to standard push buttons, a toolbar can also have drop-down buttons.","pos":[866,946]},{"content":"A drop-down button is usually indicated by the presence of an attached down arrow.","pos":[947,1029]},{"pos":[1037,1150],"content":"[!NOTE]\n The attached down arrow will appear only if the `TBSTYLE_EX_DRAWDDARROWS` extended style has been set.","leadings":["","> "],"nodes":[{"content":"The attached down arrow will appear only if the <ph id=\"ph1\">`TBSTYLE_EX_DRAWDDARROWS`</ph> extended style has been set.","pos":[9,111],"source":" The attached down arrow will appear only if the `TBSTYLE_EX_DRAWDDARROWS` extended style has been set."}]},{"content":"When the user clicks on this arrow (or the button itself, if no arrow is present), a <ph id=\"ph1\">`TBN_DROPDOWN`</ph> notification message is sent to the parent of the toolbar control.","pos":[1157,1323],"source":"When the user clicks on this arrow (or the button itself, if no arrow is present), a `TBN_DROPDOWN` notification message is sent to the parent of the toolbar control."},{"content":"You can then handle this notification and display a pop-up menu; similar to the behavior of Internet Explorer.","pos":[1324,1434]},{"content":"The following procedure illustrates how to implement a drop-down toolbar button with a pop-up menu:","pos":[1441,1540]},{"content":"To implement a drop-down button","pos":[1550,1581]},{"pos":[1591,1707],"content":"Once your <ph id=\"ph1\">`CToolBarCtrl`</ph> object has been created, set the <ph id=\"ph2\">`TBSTYLE_EX_DRAWDDARROWS`</ph> style, using the following code:","source":"Once your `CToolBarCtrl` object has been created, set the `TBSTYLE_EX_DRAWDDARROWS` style, using the following code:"},{"pos":[1729,1757],"content":"NVC_MFCControlLadenDialog#36"},{"content":"Set the <ph id=\"ph1\">`TBSTYLE_DROPDOWN`</ph> style for any new (<bpt id=\"p1\">[</bpt>InsertButton<ept id=\"p1\">](../mfc/reference/ctoolbarctrl-class.md#ctoolbarctrl__insertbutton)</ept> or <bpt id=\"p2\">[</bpt>AddButtons<ept id=\"p2\">](../mfc/reference/ctoolbarctrl-class.md#ctoolbarctrl__addbuttons)</ept>) or existing (<bpt id=\"p3\">[</bpt>SetButtonInfo<ept id=\"p3\">](../mfc/reference/ctoolbarctrl-class.md#ctoolbarctrl__setbuttoninfo)</ept>) buttons that will be drop-down buttons.","pos":[1844,2191],"source":"Set the `TBSTYLE_DROPDOWN` style for any new ([InsertButton](../mfc/reference/ctoolbarctrl-class.md#ctoolbarctrl__insertbutton) or [AddButtons](../mfc/reference/ctoolbarctrl-class.md#ctoolbarctrl__addbuttons)) or existing ([SetButtonInfo](../mfc/reference/ctoolbarctrl-class.md#ctoolbarctrl__setbuttoninfo)) buttons that will be drop-down buttons."},{"content":"The following example demonstrates modifying an existing button in a <ph id=\"ph1\">`CToolBarCtrl`</ph> object:","pos":[2192,2283],"source":" The following example demonstrates modifying an existing button in a `CToolBarCtrl` object:"},{"pos":[2305,2333],"content":"NVC_MFCControlLadenDialog#37"},{"pos":[2420,2491],"content":"Add a <ph id=\"ph1\">`TBN_DROPDOWN`</ph> handler to the parent class of the toolbar object.","source":"Add a `TBN_DROPDOWN` handler to the parent class of the toolbar object."},{"pos":[2513,2541],"content":"NVC_MFCControlLadenDialog#38"},{"content":"In the new handler, display the appropriate popup menu.","pos":[2628,2683]},{"content":"The following code demonstrates one method:","pos":[2684,2727]},{"pos":[2749,2777],"content":"NVC_MFCControlLadenDialog#39"},{"content":"See Also","pos":[2863,2871]},{"content":"Using CToolBarCtrl","pos":[2876,2894]},{"content":"Controls","pos":[2931,2939]}],"content":"---\ntitle: \"Using Drop-Down Buttons in a Toolbar Control | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"TBN_DROPDOWN\"\n  - \"TBSTYLE_EX_DRAWDDARROWS\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"CToolBarCtrl class, drop-down buttons\"\n  - \"toolbars [C++], drop-down buttons\"\n  - \"drop-down buttons in toolbars\"\n  - \"TBSTYLE_EX_DRAWDDARROWS\"\n  - \"TBN_DROPDOWN notification\"\nms.assetid: b859f758-d2f6-40d9-9c26-0ff61993b9b2\ncaps.latest.revision: 12\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Using Drop-Down Buttons in a Toolbar Control\nIn addition to standard push buttons, a toolbar can also have drop-down buttons. A drop-down button is usually indicated by the presence of an attached down arrow.  \n  \n> [!NOTE]\n>  The attached down arrow will appear only if the `TBSTYLE_EX_DRAWDDARROWS` extended style has been set.  \n  \n When the user clicks on this arrow (or the button itself, if no arrow is present), a `TBN_DROPDOWN` notification message is sent to the parent of the toolbar control. You can then handle this notification and display a pop-up menu; similar to the behavior of Internet Explorer.  \n  \n The following procedure illustrates how to implement a drop-down toolbar button with a pop-up menu:  \n  \n### To implement a drop-down button  \n  \n1.  Once your `CToolBarCtrl` object has been created, set the `TBSTYLE_EX_DRAWDDARROWS` style, using the following code:  \n  \n     [!code-cpp[NVC_MFCControlLadenDialog#36](../mfc/codesnippet/cpp/using-drop-down-buttons-in-a-toolbar-control_1.cpp)]  \n  \n2.  Set the `TBSTYLE_DROPDOWN` style for any new ([InsertButton](../mfc/reference/ctoolbarctrl-class.md#ctoolbarctrl__insertbutton) or [AddButtons](../mfc/reference/ctoolbarctrl-class.md#ctoolbarctrl__addbuttons)) or existing ([SetButtonInfo](../mfc/reference/ctoolbarctrl-class.md#ctoolbarctrl__setbuttoninfo)) buttons that will be drop-down buttons. The following example demonstrates modifying an existing button in a `CToolBarCtrl` object:  \n  \n     [!code-cpp[NVC_MFCControlLadenDialog#37](../mfc/codesnippet/cpp/using-drop-down-buttons-in-a-toolbar-control_2.cpp)]  \n  \n3.  Add a `TBN_DROPDOWN` handler to the parent class of the toolbar object.  \n  \n     [!code-cpp[NVC_MFCControlLadenDialog#38](../mfc/codesnippet/cpp/using-drop-down-buttons-in-a-toolbar-control_3.cpp)]  \n  \n4.  In the new handler, display the appropriate popup menu. The following code demonstrates one method:  \n  \n     [!code-cpp[NVC_MFCControlLadenDialog#39](../mfc/codesnippet/cpp/using-drop-down-buttons-in-a-toolbar-control_4.cpp)]  \n  \n## See Also  \n [Using CToolBarCtrl](../mfc/using-ctoolbarctrl.md)   \n [Controls](../mfc/controls-mfc.md)\n\n"}