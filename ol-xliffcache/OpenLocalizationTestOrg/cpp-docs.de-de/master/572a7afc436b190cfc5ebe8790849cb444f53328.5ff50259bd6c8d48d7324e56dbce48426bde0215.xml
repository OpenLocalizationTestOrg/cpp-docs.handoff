{"nodes":[{"pos":[12,44],"content":"CRowset::Update | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"CRowset::Update | Microsoft Docs","pos":[0,32]}]},{"content":"CRowset::Update","pos":[814,829]},{"pos":[830,930],"content":"Transmits any pending changes made to the current row since the last fetch or <bpt id=\"p1\">**</bpt>Update<ept id=\"p1\">**</ept> call on it.","source":"Transmits any pending changes made to the current row since the last fetch or **Update** call on it."},{"content":"Syntax","pos":[939,945]},{"content":"Parameters","pos":[1108,1118]},{"content":"[out] A pointer to the location where <bpt id=\"p1\">**</bpt>Update<ept id=\"p1\">**</ept> returns the number of rows it attempted to update, if required.","pos":[1134,1246],"source":" [out] A pointer to the location where **Update** returns the number of rows it attempted to update, if required."},{"content":"[out] A pointer to the location where <bpt id=\"p1\">**</bpt>Update<ept id=\"p1\">**</ept> returns the handle of the row it attempted to update.","pos":[1264,1366],"source":" [out] A pointer to the location where **Update** returns the handle of the row it attempted to update."},{"content":"No handle is returned if <ph id=\"ph1\">`phRow`</ph> is null.","pos":[1367,1408],"source":" No handle is returned if `phRow` is null."},{"content":"[out] A pointer to the location where <bpt id=\"p1\">**</bpt>Update<ept id=\"p1\">**</ept> returns the row status value.","pos":[1428,1506],"source":" [out] A pointer to the location where **Update** returns the row status value."},{"content":"No status is returned if <ph id=\"ph1\">`pStatus`</ph> is null.","pos":[1507,1550],"source":" No status is returned if `pStatus` is null."},{"content":"Return Value","pos":[1559,1571]},{"pos":[1575,1596],"content":"A standard <ph id=\"ph1\">`HRESULT`</ph>.","source":"A standard `HRESULT`."},{"content":"Remarks","pos":[1605,1612]},{"content":"Transmits any pending changes made to the current row since that row was last fetched or updated (using <bpt id=\"p1\">**</bpt>Update<ept id=\"p1\">**</ept> or <bpt id=\"p2\">[</bpt>UpdateAll<ept id=\"p2\">](../../data/oledb/crowset-updateall.md)</ept>).","pos":[1616,1786],"source":"Transmits any pending changes made to the current row since that row was last fetched or updated (using **Update** or [UpdateAll](../../data/oledb/crowset-updateall.md))."},{"content":"You typically call <bpt id=\"p1\">[</bpt>SetData<ept id=\"p1\">](../../data/oledb/crowset-setdata.md)</ept> to set data values in columns in a row, and then call <bpt id=\"p2\">**</bpt>Update<ept id=\"p2\">**</ept> to transmit those changes.","pos":[1787,1944],"source":" You typically call [SetData](../../data/oledb/crowset-setdata.md) to set data values in columns in a row, and then call **Update** to transmit those changes."},{"content":"This method requires the optional interface <ph id=\"ph1\">`IRowsetUpdate`</ph>, which might not be supported on all providers; if this is the case, the method returns <bpt id=\"p1\">**</bpt>E_NOINTERFACE<ept id=\"p1\">**</ept>.","pos":[1951,2117],"source":"This method requires the optional interface `IRowsetUpdate`, which might not be supported on all providers; if this is the case, the method returns **E_NOINTERFACE**."},{"content":"You must also set <bpt id=\"p1\">**</bpt>DBPROP_IRowsetUpdate<ept id=\"p1\">**</ept> to <ph id=\"ph1\">`VARIANT_TRUE`</ph> before calling <bpt id=\"p2\">**</bpt>Open<ept id=\"p2\">**</ept> on the table or command containing the rowset.","pos":[2118,2249],"source":" You must also set **DBPROP_IRowsetUpdate** to `VARIANT_TRUE` before calling **Open** on the table or command containing the rowset."},{"content":"Requirements","pos":[2258,2270]},{"pos":[2274,2296],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> atldbcli.h","source":"**Header:** atldbcli.h"},{"content":"See Also","pos":[2305,2313]},{"content":"CRowset Class","pos":[2318,2331]},{"content":"IRowsetUpdate::Update","pos":[2373,2394]},{"content":"CRowset::UpdateAll","pos":[2457,2475]},{"content":"CRowset::SetData","pos":[2521,2537]}],"content":"---\ntitle: \"CRowset::Update | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"CRowset.Update\"\n  - \"ATL.CRowset.Update\"\n  - \"ATL.CRowset<TAccessor>.Update\"\n  - \"ATL::CRowset<TAccessor>::Update\"\n  - \"CRowset<TAccessor>::Update\"\n  - \"CRowset::Update\"\n  - \"CRowset<TAccessor>.Update\"\n  - \"ATL::CRowset::Update\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"Update method\"\nms.assetid: cd5fedc8-2b85-4cb8-8c40-c79576316903\ncaps.latest.revision: 9\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# CRowset::Update\nTransmits any pending changes made to the current row since the last fetch or **Update** call on it.  \n  \n## Syntax  \n  \n```  \n  \n      HRESULT Update(   \n   DBCOUNTITEM* pcRows = NULL,   \n   HROW* phRow = NULL,   \n   DBROWSTATUS* pStatus = NULL    \n) throw( );  \n```  \n  \n#### Parameters  \n `pcRows`  \n [out] A pointer to the location where **Update** returns the number of rows it attempted to update, if required.  \n  \n `phRow`  \n [out] A pointer to the location where **Update** returns the handle of the row it attempted to update. No handle is returned if `phRow` is null.  \n  \n `pStatus`  \n [out] A pointer to the location where **Update** returns the row status value. No status is returned if `pStatus` is null.  \n  \n## Return Value  \n A standard `HRESULT`.  \n  \n## Remarks  \n Transmits any pending changes made to the current row since that row was last fetched or updated (using **Update** or [UpdateAll](../../data/oledb/crowset-updateall.md)). You typically call [SetData](../../data/oledb/crowset-setdata.md) to set data values in columns in a row, and then call **Update** to transmit those changes.  \n  \n This method requires the optional interface `IRowsetUpdate`, which might not be supported on all providers; if this is the case, the method returns **E_NOINTERFACE**. You must also set **DBPROP_IRowsetUpdate** to `VARIANT_TRUE` before calling **Open** on the table or command containing the rowset.  \n  \n## Requirements  \n **Header:** atldbcli.h  \n  \n## See Also  \n [CRowset Class](../../data/oledb/crowset-class.md)   \n [IRowsetUpdate::Update](https://msdn.microsoft.com/en-us/library/ms719709.aspx)   \n [CRowset::UpdateAll](../../data/oledb/crowset-updateall.md)   \n [CRowset::SetData](../../data/oledb/crowset-setdata.md)"}