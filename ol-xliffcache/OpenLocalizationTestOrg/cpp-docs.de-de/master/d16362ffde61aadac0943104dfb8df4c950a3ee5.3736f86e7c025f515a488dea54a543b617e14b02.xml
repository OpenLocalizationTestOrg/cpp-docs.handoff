{"nodes":[{"pos":[12,45],"content":"CReBarCtrl Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"CReBarCtrl Class | Microsoft Docs","pos":[0,33]}]},{"content":"CReBarCtrl Class","pos":[677,693]},{"content":"Encapsulates the functionality of a rebar control, which is a container for a child window.","pos":[694,785]},{"content":"Syntax","pos":[794,800]},{"content":"Members","pos":[857,864]},{"content":"Public Constructors","pos":[874,893]},{"content":"Name","pos":[900,904]},{"content":"Description","pos":[905,916]},{"content":"CReBarCtrl::CReBarCtrl","pos":[955,977]},{"pos":[1004,1037],"content":"Constructs a <ph id=\"ph1\">`CReBarCtrl`</ph> object.","source":"Constructs a `CReBarCtrl` object."},{"content":"Public Methods","pos":[1048,1062]},{"content":"Name","pos":[1069,1073]},{"content":"Description","pos":[1074,1085]},{"content":"CReBarCtrl::BeginDrag","pos":[1124,1145]},{"content":"Places the rebar control into drag-and-drop mode.","pos":[1171,1220]},{"content":"CReBarCtrl::Create","pos":[1226,1244]},{"pos":[1267,1336],"content":"Creates the rebar control and attaches it to the <ph id=\"ph1\">`CReBarCtrl`</ph> object.","source":"Creates the rebar control and attaches it to the `CReBarCtrl` object."},{"content":"CReBarCtrl::CreateEx","pos":[1342,1362]},{"pos":[1387,1495],"content":"Creates a rebar control with the specified Windows extended styles and attaches it to a <ph id=\"ph1\">`CReBarCtrl`</ph> object.","source":"Creates a rebar control with the specified Windows extended styles and attaches it to a `CReBarCtrl` object."},{"content":"CReBarCtrl::DeleteBand","pos":[1501,1523]},{"content":"Deletes a band from a rebar control.","pos":[1550,1586]},{"content":"CReBarCtrl::DragMove","pos":[1592,1612]},{"pos":[1637,1712],"content":"Updates the drag position in the rebar control after a call to <ph id=\"ph1\">`BeginDrag`</ph>.","source":"Updates the drag position in the rebar control after a call to `BeginDrag`."},{"content":"CReBarCtrl::EndDrag","pos":[1718,1737]},{"content":"Terminates the rebar control's drag-and-drop operation.","pos":[1761,1816]},{"content":"CReBarCtrl::GetBandBorders","pos":[1822,1848]},{"content":"Retrieves the borders of a band.","pos":[1879,1911]},{"content":"CReBarCtrl::GetBandCount","pos":[1917,1941]},{"content":"Retrieves the count of bands currently in the rebar control.","pos":[1970,2030]},{"content":"CReBarCtrl::GetBandInfo","pos":[2036,2059]},{"content":"Retrieves information about a specified band in a rebar control.","pos":[2087,2151]},{"content":"CReBarCtrl::GetBandMargins","pos":[2157,2183]},{"content":"Retrieves the margins of a band.","pos":[2214,2246]},{"content":"CReBarCtrl::GetBarHeight","pos":[2252,2276]},{"content":"Retrieves the height of the rebar control.","pos":[2305,2347]},{"content":"CReBarCtrl::GetBarInfo","pos":[2353,2375]},{"content":"Retrieves information about the rebar control and the image list it uses.","pos":[2402,2475]},{"content":"CReBarCtrl::GetBkColor","pos":[2481,2503]},{"content":"Retrieves a rebar control's default background color.","pos":[2530,2583]},{"content":"CReBarCtrl::GetColorScheme","pos":[2589,2615]},{"pos":[2646,2778],"content":"Retrieves the <bpt id=\"p1\">[</bpt>COLORSCHEME<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb775502)</ept> structure associated with the rebar control.","source":"Retrieves the [COLORSCHEME](http://msdn.microsoft.com/library/windows/desktop/bb775502) structure associated with the rebar control."},{"content":"CReBarCtrl::GetDropTarget","pos":[2784,2809]},{"pos":[2839,2899],"content":"Retrieves a rebar control's <ph id=\"ph1\">`IDropTarget`</ph> interface pointer.","source":"Retrieves a rebar control's `IDropTarget` interface pointer."},{"content":"CReBarCtrl::GetExtendedStyle","pos":[2905,2933]},{"content":"Gets the extended style of the current rebar control.","pos":[2966,3019]},{"content":"CReBarCtrl::GetImageList","pos":[3025,3049]},{"content":"Retrieves the image list associated with a rebar control.","pos":[3078,3135]},{"content":"CReBarCtrl::GetPalette","pos":[3141,3163]},{"content":"Retrieves the rebar control's current palette.","pos":[3190,3236]},{"content":"CReBarCtrl::GetRect","pos":[3242,3261]},{"content":"Retrieves the bounding rectangle for a given band in a rebar control.","pos":[3285,3354]},{"content":"CReBarCtrl::GetRowCount","pos":[3360,3383]},{"content":"Retrieves the number of band rows in a rebar control.","pos":[3411,3464]},{"content":"CReBarCtrl::GetRowHeight","pos":[3470,3494]},{"content":"Retrieves the height of a specified row in a rebar control.","pos":[3523,3582]},{"content":"CReBarCtrl::GetTextColor","pos":[3588,3612]},{"content":"Retrieves a rebar control's default text color.","pos":[3641,3688]},{"content":"CReBarCtrl::GetToolTips","pos":[3694,3717]},{"content":"Retrieves the handle to any tool tip control associated with the rebar control.","pos":[3745,3824]},{"content":"CReBarCtrl::HitTest","pos":[3830,3849]},{"content":"Determines which portion of a rebar band is at a given point on the screen, if a rebar band exists at that point.","pos":[3873,3986]},{"content":"CReBarCtrl::IDToIndex","pos":[3992,4013]},{"content":"Converts a band identifier (ID) to a band index in a rebar control.","pos":[4039,4106]},{"content":"CReBarCtrl::InsertBand","pos":[4112,4134]},{"content":"Inserts a new band in a rebar control.","pos":[4161,4199]},{"content":"CReBarCtrl::MaximizeBand","pos":[4205,4229]},{"content":"Resizes a band in a rebar control to its largest size.","pos":[4258,4312]},{"content":"CReBarCtrl::MinimizeBand","pos":[4318,4342]},{"content":"Resizes a band in a rebar control to its smallest size.","pos":[4371,4426]},{"content":"CReBarCtrl::MoveBand","pos":[4432,4452]},{"content":"Moves a band from one index to another.","pos":[4477,4516]},{"content":"CReBarCtrl::PushChevron","pos":[4522,4545]},{"content":"Programmatically pushes a chevron.","pos":[4573,4607]},{"content":"CReBarCtrl::RestoreBand","pos":[4613,4636]},{"content":"Resizes a band in a rebar control to its ideal size.","pos":[4664,4716]},{"content":"CReBarCtrl::SetBandInfo","pos":[4722,4745]},{"content":"Sets characteristics of an existing band in a rebar control.","pos":[4773,4833]},{"content":"CReBarCtrl::SetBandWidth","pos":[4839,4863]},{"content":"Sets the width of the specified docked band in the current rebar control.","pos":[4892,4965]},{"content":"CReBarCtrl::SetBarInfo","pos":[4971,4993]},{"content":"Sets the characteristics of a rebar control.","pos":[5020,5064]},{"content":"CReBarCtrl::SetBkColor","pos":[5070,5092]},{"content":"Sets a rebar control's default background color.","pos":[5119,5167]},{"content":"CReBarCtrl::SetColorScheme","pos":[5173,5199]},{"content":"Sets the color scheme for the buttons on a rebar control.","pos":[5230,5287]},{"content":"CReBarCtrl::SetExtendedStyle","pos":[5293,5321]},{"content":"Sets the extended styles for the current rebar control.","pos":[5354,5409]},{"content":"CReBarCtrl::SetImageList","pos":[5415,5439]},{"content":"Sets a rebar control's image list.","pos":[5468,5502]},{"content":"CReBarCtrl::SetOwner","pos":[5508,5528]},{"content":"Sets a rebar control's owner window.","pos":[5553,5589]},{"content":"CReBarCtrl::SetPalette","pos":[5595,5617]},{"content":"Sets the rebar control's current palette.","pos":[5644,5685]},{"content":"CReBarCtrl::SetTextColor","pos":[5691,5715]},{"content":"Sets a rebar control's default text color.","pos":[5744,5786]},{"content":"CReBarCtrl::SetToolTips","pos":[5792,5815]},{"content":"Associates a tool tip control with the rebar control.","pos":[5843,5896]},{"content":"CReBarCtrl::SetWindowTheme","pos":[5902,5928]},{"content":"Sets the visual style of the rebar control.","pos":[5959,6002]},{"content":"CReBarCtrl::ShowBand","pos":[6008,6028]},{"content":"Shows or hides a given band in a rebar control.","pos":[6053,6100]},{"content":"CReBarCtrl::SizeToRect","pos":[6106,6128]},{"content":"Fits a rebar control to a specified rectangle.","pos":[6155,6201]},{"content":"Remarks","pos":[6211,6218]},{"content":"The application in which the rebar control resides assigns the child window contained by the rebar control to the rebar band.","pos":[6222,6347]},{"content":"The child window is usually another common control.","pos":[6348,6399]},{"content":"Rebar controls contain one or more bands.","pos":[6406,6447]},{"content":"Each band can contain a combination of a gripper bar, a bitmap, a text label, and a child window.","pos":[6448,6545]},{"content":"The band can contain only one of each of these items.","pos":[6546,6599]},{"content":"The rebar control can display the child window over a specified background bitmap.","pos":[6606,6688]},{"content":"All rebar control bands can be resized, except those that use the <bpt id=\"p1\">**</bpt>RBBS_FIXEDSIZE<ept id=\"p1\">**</ept> style.","pos":[6689,6780],"source":" All rebar control bands can be resized, except those that use the **RBBS_FIXEDSIZE** style."},{"content":"As you reposition or resize a rebar control band, the rebar control manages the size and position of the child window assigned to that band.","pos":[6781,6921]},{"content":"To resize or change the order of bands within the control, click and drag a band's gripper bar.","pos":[6922,7017]},{"content":"The following illustration shows a rebar control that has three bands:","pos":[7024,7094]},{"content":"Band 0 contains a flat, transparent toolbar control.","pos":[7104,7156]},{"content":"Band 1 contains both transparent standard and transparent dropdown buttons.","pos":[7166,7241]},{"content":"Band 2 contains a combo box and four standard buttons.","pos":[7251,7305]},{"content":"Example of a Rebar menu","pos":[7318,7341]},{"content":"Rebar control","pos":[7400,7413]},{"content":"Rebar controls support:","pos":[7417,7440]},{"content":"Image lists.","pos":[7450,7462]},{"content":"Message-handling.","pos":[7472,7489]},{"content":"Custom draw functionality.","pos":[7499,7525]},{"content":"A variety of control styles in addition to standard window styles.","pos":[7535,7601]},{"content":"For a list of these styles, see <bpt id=\"p1\">[</bpt>Rebar Control Styles<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb774377)</ept> in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","pos":[7602,7776],"source":" For a list of these styles, see [Rebar Control Styles](http://msdn.microsoft.com/library/windows/desktop/bb774377) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"pos":[7783,7859],"content":"For more information, see <bpt id=\"p1\">[</bpt>Using CReBarCtrl<ept id=\"p1\">](../../mfc/using-crebarctrl.md)</ept>.","source":"For more information, see [Using CReBarCtrl](../../mfc/using-crebarctrl.md)."},{"content":"Inheritance Hierarchy","pos":[7868,7889]},{"content":"CObject","pos":[7894,7901]},{"content":"CCmdTarget","pos":[7948,7958]},{"content":"CWnd","pos":[8008,8012]},{"content":"Requirements","pos":[8076,8088]},{"pos":[8092,8112],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> afxcmn.h","source":"**Header:** afxcmn.h"},{"pos":[8160,8181],"content":"CReBarCtrl::BeginDrag"},{"pos":[8185,8378],"content":"Implements the behavior of the Win32 message <bpt id=\"p1\">[</bpt>RB_BEGINDRAG<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb774429)</ept>, as described in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"Implements the behavior of the Win32 message [RB_BEGINDRAG](http://msdn.microsoft.com/library/windows/desktop/bb774429), as described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"content":"Parameters","pos":[8467,8477]},{"content":"Zero-based index of the band that the drag-and-drop operation will affect.","pos":[8492,8566]},{"content":"A <ph id=\"ph1\">`DWORD`</ph> value that contains the starting mouse coordinates.","pos":[8584,8645],"source":" A `DWORD` value that contains the starting mouse coordinates."},{"content":"The horizontal coordinate is contained in the LOWORD and the vertical coordinate is contained in the HIWORD.","pos":[8646,8754]},{"content":"If you pass <ph id=\"ph1\">`(DWORD)-1`</ph>, the rebar control will use the position of the mouse the last time the control's thread called <bpt id=\"p1\">**</bpt>GetMessage<ept id=\"p1\">**</ept> or <bpt id=\"p2\">**</bpt>PeekMessage<ept id=\"p2\">**</ept>.","pos":[8755,8909],"source":" If you pass `(DWORD)-1`, the rebar control will use the position of the mouse the last time the control's thread called **GetMessage** or **PeekMessage**."},{"pos":[8954,8972],"content":"CReBarCtrl::Create"},{"pos":[8976,9045],"content":"Creates the rebar control and attaches it to the <ph id=\"ph1\">`CReBarCtrl`</ph> object.","source":"Creates the rebar control and attaches it to the `CReBarCtrl` object."},{"content":"Parameters","pos":[9175,9185]},{"content":"Specifies the combination of rebar control styles applied to the control.","pos":[9202,9275]},{"content":"See <bpt id=\"p1\">[</bpt>Rebar Control Styles<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb774377)</ept> in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph> for a list of supported styles.","pos":[9276,9453],"source":" See [Rebar Control Styles](http://msdn.microsoft.com/library/windows/desktop/bb774377) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)] for a list of supported styles."},{"content":"A reference to a <bpt id=\"p1\">[</bpt>CRect<ept id=\"p1\">](../../atl-mfc-shared/reference/crect-class.md)</ept> object or <bpt id=\"p2\">[</bpt>RECT<ept id=\"p2\">](http://msdn.microsoft.com/library/windows/desktop/dd162897)</ept> structure, which is the position and size of the rebar control.","pos":[9470,9682],"source":" A reference to a [CRect](../../atl-mfc-shared/reference/crect-class.md) object or [RECT](http://msdn.microsoft.com/library/windows/desktop/dd162897) structure, which is the position and size of the rebar control."},{"content":"A pointer to a <bpt id=\"p1\">[</bpt>CWnd<ept id=\"p1\">](../../mfc/reference/cwnd-class.md)</ept> object that is the parent window of the rebar control.","pos":[9705,9816],"source":" A pointer to a [CWnd](../../mfc/reference/cwnd-class.md) object that is the parent window of the rebar control."},{"content":"It must not be <bpt id=\"p1\">**</bpt>NULL<ept id=\"p1\">**</ept>.","pos":[9817,9841],"source":" It must not be **NULL**."},{"content":"Specifies the rebar control's control ID.","pos":[9857,9898]},{"content":"Return Value","pos":[9908,9920]},{"content":"Nonzero if the object was created successfully; otherwise 0.","pos":[9924,9984]},{"content":"Remarks","pos":[9994,10001]},{"content":"Create a rebar control in two steps:","pos":[10005,10041]},{"pos":[10051,10129],"content":"Call <bpt id=\"p1\">[</bpt>CReBarCtrl<ept id=\"p1\">](#crebarctrl__crebarctrl)</ept> to construct a <ph id=\"ph1\">`CReBarCtrl`</ph> object.","source":"Call [CReBarCtrl](#crebarctrl__crebarctrl) to construct a `CReBarCtrl` object."},{"pos":[10139,10249],"content":"Call this member function, which creates the Windows rebar control and attaches it to the <ph id=\"ph1\">`CReBarCtrl`</ph> object.","source":"Call this member function, which creates the Windows rebar control and attaches it to the `CReBarCtrl` object."},{"pos":[10256,10318],"content":"When you call <bpt id=\"p1\">**</bpt>Create<ept id=\"p1\">**</ept>, the common controls are initialized.","source":"When you call **Create**, the common controls are initialized."},{"content":"Example","pos":[10328,10335]},{"pos":[10350,10370],"content":"NVC_MFC_CReBarCtrl#3"},{"pos":[10479,10499],"content":"CReBarCtrl::CreateEx"},{"pos":[10503,10585],"content":"Creates a control (a child window) and associates it with the <ph id=\"ph1\">`CReBarCtrl`</ph> object.","source":"Creates a control (a child window) and associates it with the `CReBarCtrl` object."},{"content":"Parameters","pos":[10740,10750]},{"content":"Specifies the extended style of the control being created.","pos":[10769,10827]},{"content":"For a list of extended Windows styles, see the <ph id=\"ph1\">`dwExStyle`</ph> parameter for <bpt id=\"p1\">[</bpt>CreateWindowEx<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms632680)</ept> in the <ph id=\"ph2\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","pos":[10828,11037],"source":" For a list of extended Windows styles, see the `dwExStyle` parameter for [CreateWindowEx](http://msdn.microsoft.com/library/windows/desktop/ms632680) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"content":"Specifies the combination of rebar control styles applied to the control.","pos":[11057,11130]},{"content":"For a list of supported styles, see <bpt id=\"p1\">[</bpt>Rebar Control Styles<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb774377)</ept> in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","pos":[11131,11309],"source":" For a list of supported styles, see [Rebar Control Styles](http://msdn.microsoft.com/library/windows/desktop/bb774377) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"content":"A reference to a <bpt id=\"p1\">[</bpt>RECT<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/dd162897)</ept> structure describing the size and position of the window to be created, in client coordinates of <ph id=\"ph1\">`pParentWnd`</ph>.","pos":[11326,11520],"source":" A reference to a [RECT](http://msdn.microsoft.com/library/windows/desktop/dd162897) structure describing the size and position of the window to be created, in client coordinates of `pParentWnd`."},{"content":"A pointer to the window that is the control's parent.","pos":[11543,11596]},{"content":"The control's child-window ID.","pos":[11612,11642]},{"content":"Return Value","pos":[11652,11664]},{"content":"Nonzero if successful; otherwise 0.","pos":[11668,11703]},{"content":"Remarks","pos":[11713,11720]},{"pos":[11724,11873],"content":"Use <ph id=\"ph1\">`CreateEx`</ph> instead of <bpt id=\"p1\">[</bpt>Create<ept id=\"p1\">](#crebarctrl__create)</ept> to apply extended Windows styles, specified by the Windows extended style preface <bpt id=\"p2\">**</bpt>WS_EX_<ept id=\"p2\">**</ept>.","source":"Use `CreateEx` instead of [Create](#crebarctrl__create) to apply extended Windows styles, specified by the Windows extended style preface **WS_EX_**."},{"pos":[11922,11944],"content":"CReBarCtrl::CReBarCtrl"},{"pos":[11948,11978],"content":"Creates a <ph id=\"ph1\">`CReBarCtrl`</ph> object.","source":"Creates a `CReBarCtrl` object."},{"content":"Example","pos":[12017,12024]},{"pos":[12029,12091],"content":"See the example for <bpt id=\"p1\">[</bpt>CReBarCtrl::Create<ept id=\"p1\">](#crebarctrl__create)</ept>.","source":"See the example for [CReBarCtrl::Create](#crebarctrl__create)."},{"pos":[12140,12162],"content":"CReBarCtrl::DeleteBand"},{"pos":[12166,12360],"content":"Implements the behavior of the Win32 message <bpt id=\"p1\">[</bpt>RB_DELETEBAND<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb774431)</ept>, as described in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"Implements the behavior of the Win32 message [RB_DELETEBAND](http://msdn.microsoft.com/library/windows/desktop/bb774431), as described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"content":"Parameters","pos":[12414,12424]},{"content":"Zero-based index of the band to be deleted.","pos":[12439,12482]},{"content":"Return Value","pos":[12492,12504]},{"content":"Nonzero if the band deleted successfully; otherwise zero.","pos":[12508,12565]},{"content":"Example","pos":[12575,12582]},{"pos":[12597,12617],"content":"NVC_MFC_CReBarCtrl#4"},{"pos":[12726,12746],"content":"CReBarCtrl::DragMove"},{"pos":[12750,12932],"content":"Implements the behavior of the Win32 message <bpt id=\"p1\">[</bpt>RB_DRAGMOVE<ept id=\"p1\">](https://msdn.microsoft.com/library/bb774433.aspx)</ept>, as described in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"Implements the behavior of the Win32 message [RB_DRAGMOVE](https://msdn.microsoft.com/library/bb774433.aspx), as described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"content":"Parameters","pos":[12997,13007]},{"content":"A <ph id=\"ph1\">`DWORD`</ph> value that contains the new mouse coordinates.","pos":[13022,13078],"source":" A `DWORD` value that contains the new mouse coordinates."},{"content":"The horizontal coordinate is contained in the LOWORD and the vertical coordinate is contained in the HIWORD.","pos":[13079,13187]},{"content":"If you pass <ph id=\"ph1\">`(DWORD)-1`</ph>, the rebar control will use the position of the mouse the last time the control's thread called <bpt id=\"p1\">**</bpt>GetMessage<ept id=\"p1\">**</ept> or <bpt id=\"p2\">**</bpt>PeekMessage<ept id=\"p2\">**</ept>.","pos":[13188,13342],"source":" If you pass `(DWORD)-1`, the rebar control will use the position of the mouse the last time the control's thread called **GetMessage** or **PeekMessage**."},{"pos":[13388,13407],"content":"CReBarCtrl::EndDrag"},{"pos":[13411,13602],"content":"Implements the behavior of the Win32 message <bpt id=\"p1\">[</bpt>RB_ENDDRAG<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb774435)</ept>, as described in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"Implements the behavior of the Win32 message [RB_ENDDRAG](http://msdn.microsoft.com/library/windows/desktop/bb774435), as described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"pos":[13686,13712],"content":"CReBarCtrl::GetBandBorders"},{"pos":[13716,13914],"content":"Implements the behavior of the Win32 message <bpt id=\"p1\">[</bpt>RB_GETBANDBORDERS<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb774437)</ept>, as described in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"Implements the behavior of the Win32 message [RB_GETBANDBORDERS](http://msdn.microsoft.com/library/windows/desktop/bb774437), as described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"content":"Parameters","pos":[14004,14014]},{"content":"Zero-based index of the band for which the borders will be retrieved.","pos":[14029,14098]},{"content":"A pointer to a <bpt id=\"p1\">[</bpt>RECT<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/dd162897)</ept> structure that will receive the band borders.","pos":[14114,14241],"source":" A pointer to a [RECT](http://msdn.microsoft.com/library/windows/desktop/dd162897) structure that will receive the band borders."},{"content":"If the rebar control has the <bpt id=\"p1\">**</bpt>RBS_BANDBORDERS<ept id=\"p1\">**</ept> style, each member of this structure will receive the number of pixels, on the corresponding side of the band, that constitute the border.","pos":[14242,14429],"source":" If the rebar control has the **RBS_BANDBORDERS** style, each member of this structure will receive the number of pixels, on the corresponding side of the band, that constitute the border."},{"content":"If the rebar control does not have the <bpt id=\"p1\">**</bpt>RBS_BANDBORDERS<ept id=\"p1\">**</ept> style, only the left member of this structure receives valid information.","pos":[14430,14562],"source":" If the rebar control does not have the **RBS_BANDBORDERS** style, only the left member of this structure receives valid information."},{"content":"For a description of rebar control styles, see <bpt id=\"p1\">[</bpt>Rebar Control Styles<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb774377)</ept> in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","pos":[14563,14752],"source":" For a description of rebar control styles, see [Rebar Control Styles](http://msdn.microsoft.com/library/windows/desktop/bb774377) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"pos":[14803,14827],"content":"CReBarCtrl::GetBandCount"},{"pos":[14831,15027],"content":"Implements the behavior of the Win32 message <bpt id=\"p1\">[</bpt>RB_GETBANDCOUNT<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb774439)</ept>, as described in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"Implements the behavior of the Win32 message [RB_GETBANDCOUNT](http://msdn.microsoft.com/library/windows/desktop/bb774439), as described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"content":"Return Value","pos":[15082,15094]},{"content":"The number of bands assigned to the control.","pos":[15098,15142]},{"pos":[15192,15215],"content":"CReBarCtrl::GetBandInfo"},{"pos":[15219,15413],"content":"Implements the behavior of the Win32 message <bpt id=\"p1\">[</bpt>RB_GETBANDINFO<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb774451)</ept> as described in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"Implements the behavior of the Win32 message [RB_GETBANDINFO](http://msdn.microsoft.com/library/windows/desktop/bb774451) as described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"content":"Parameters","pos":[15510,15520]},{"content":"Zero-based index of the band for which the information will be retrieved.","pos":[15535,15608]},{"content":"A pointer to a <bpt id=\"p1\">[</bpt>REBARBANDINFO<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb774393)</ept> structure to receive the band information.","pos":[15626,15759],"source":" A pointer to a [REBARBANDINFO](http://msdn.microsoft.com/library/windows/desktop/bb774393) structure to receive the band information."},{"content":"You must set the <ph id=\"ph1\">`cbSize`</ph> member of this structure to <ph id=\"ph2\">`sizeof(REBARBANDINFO)`</ph> and set the <bpt id=\"p1\">**</bpt>fMask<ept id=\"p1\">**</ept> member to the items you want to retrieve before sending this message.","pos":[15760,15929],"source":" You must set the `cbSize` member of this structure to `sizeof(REBARBANDINFO)` and set the **fMask** member to the items you want to retrieve before sending this message."},{"content":"Return Value","pos":[15939,15951]},{"content":"Nonzero if successful; otherwise zero.","pos":[15955,15993]},{"pos":[16046,16072],"content":"CReBarCtrl::GetBandMargins"},{"content":"Retrieves the margins of the band.","pos":[16076,16110]},{"content":"Parameters","pos":[16175,16185]},{"content":"pMargins","pos":[16190,16198]},{"content":"A pointer to a <bpt id=\"p1\">[</bpt>MARGINS<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb773244)</ept>structure that will receive the information.","pos":[16203,16331],"source":" A pointer to a [MARGINS](http://msdn.microsoft.com/library/windows/desktop/bb773244)structure that will receive the information."},{"content":"Remarks","pos":[16341,16348]},{"pos":[16352,16568],"content":"This member function emulates the functionality of the <bpt id=\"p1\">[</bpt>RB_GETBANDMARGINS<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb774453)</ept> message, as described in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"This member function emulates the functionality of the [RB_GETBANDMARGINS](http://msdn.microsoft.com/library/windows/desktop/bb774453) message, as described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"pos":[16619,16643],"content":"CReBarCtrl::GetBarHeight"},{"content":"Retrieves the height of the rebar bar.","pos":[16647,16685]},{"content":"Return Value","pos":[16740,16752]},{"content":"Value that represents the height, in pixels, of the control.","pos":[16756,16816]},{"pos":[16865,16887],"content":"CReBarCtrl::GetBarInfo"},{"pos":[16891,17085],"content":"Implements the behavior of the Win32 message <bpt id=\"p1\">[</bpt>RB_GETBARINFO<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb774457)</ept>, as described in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"Implements the behavior of the Win32 message [RB_GETBARINFO](http://msdn.microsoft.com/library/windows/desktop/bb774457), as described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"content":"Parameters","pos":[17153,17163]},{"content":"A pointer to a <bpt id=\"p1\">[</bpt>REBARINFO<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb774395)</ept> structure that will receive the rebar control information.","pos":[17177,17322],"source":" A pointer to a [REBARINFO](http://msdn.microsoft.com/library/windows/desktop/bb774395) structure that will receive the rebar control information."},{"content":"You must set the <ph id=\"ph1\">`cbSize`</ph> member of this structure to <ph id=\"ph2\">`sizeof(REBARINFO)`</ph> before sending this message.","pos":[17323,17425],"source":" You must set the `cbSize` member of this structure to `sizeof(REBARINFO)` before sending this message."},{"content":"Return Value","pos":[17435,17447]},{"content":"Nonzero if successful; otherwise zero.","pos":[17451,17489]},{"pos":[17538,17560],"content":"CReBarCtrl::GetBkColor"},{"pos":[17564,17758],"content":"Implements the behavior of the Win32 message <bpt id=\"p1\">[</bpt>RB_GETBKCOLOR<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb774459)</ept>, as described in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"Implements the behavior of the Win32 message [RB_GETBKCOLOR](http://msdn.microsoft.com/library/windows/desktop/bb774459), as described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"content":"Return Value","pos":[17815,17827]},{"pos":[17831,17904],"content":"A <bpt id=\"p1\">**</bpt>COLORREF<ept id=\"p1\">**</ept> value that represent the current default background color.","source":"A **COLORREF** value that represent the current default background color."},{"pos":[17957,17983],"content":"CReBarCtrl::GetColorScheme"},{"pos":[17987,18107],"content":"Retrieves the <bpt id=\"p1\">[</bpt>COLORSCHEME<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb775502)</ept> structure for the rebar control.","source":"Retrieves the [COLORSCHEME](http://msdn.microsoft.com/library/windows/desktop/bb775502) structure for the rebar control."},{"content":"Parameters","pos":[18172,18182]},{"content":"A pointer to a <bpt id=\"p1\">[</bpt>COLORSCHEME<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb775502)</ept> structure, as described in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","pos":[18196,18368],"source":" A pointer to a [COLORSCHEME](http://msdn.microsoft.com/library/windows/desktop/bb775502) structure, as described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"content":"Return Value","pos":[18378,18390]},{"content":"Nonzero if successful; otherwise zero.","pos":[18394,18432]},{"content":"Remarks","pos":[18442,18449]},{"pos":[18453,18547],"content":"The <bpt id=\"p1\">**</bpt>COLORSCHEME<ept id=\"p1\">**</ept> structure includes the button highlight color and the button shadow color.","source":"The **COLORSCHEME** structure includes the button highlight color and the button shadow color."},{"pos":[18599,18624],"content":"CReBarCtrl::GetDropTarget"},{"pos":[18628,18825],"content":"Implements the behavior of the Win32 message <bpt id=\"p1\">[</bpt>RB_GETDROPTARGET<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb774463)</ept>, as described in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"Implements the behavior of the Win32 message [RB_GETDROPTARGET](http://msdn.microsoft.com/library/windows/desktop/bb774463), as described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"content":"Return Value","pos":[18889,18901]},{"pos":[18905,19005],"content":"A pointer to an <bpt id=\"p1\">[</bpt>IDropTarget<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms679679)</ept> interface.","source":"A pointer to an [IDropTarget](http://msdn.microsoft.com/library/windows/desktop/ms679679) interface."},{"pos":[19060,19088],"content":"CReBarCtrl::GetExtendedStyle"},{"content":"Gets the extended styles of the current rebar control.","pos":[19092,19146]},{"content":"Return Value","pos":[19206,19218]},{"content":"A bitwise combination (OR) of flags that indicate the extended styles.","pos":[19222,19292]},{"content":"The possible flags are <ph id=\"ph1\">`RBS_EX_SPLITTER`</ph> and <ph id=\"ph2\">`RBS_EX_TRANSPARENT`</ph>.","pos":[19293,19359],"source":" The possible flags are `RBS_EX_SPLITTER` and `RBS_EX_TRANSPARENT`."},{"content":"For more information, see the <ph id=\"ph1\">`dwMask`</ph> parameter of the <bpt id=\"p1\">[</bpt>CReBarCtrl::SetExtendedStyle<ept id=\"p1\">](#crebarctrl__setextendedstyle)</ept> method.","pos":[19360,19485],"source":" For more information, see the `dwMask` parameter of the [CReBarCtrl::SetExtendedStyle](#crebarctrl__setextendedstyle) method."},{"content":"Remarks","pos":[19495,19502]},{"pos":[19506,19697],"content":"This method sends the <bpt id=\"p1\">[</bpt>RB_GETEXTENDEDSTYLE<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb774433)</ept> message, which is described in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"This method sends the [RB_GETEXTENDEDSTYLE](http://msdn.microsoft.com/library/windows/desktop/bb774433) message, which is described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"pos":[19748,19772],"content":"CReBarCtrl::GetImageList"},{"pos":[19776,19837],"content":"Gets the <ph id=\"ph1\">`CImageList`</ph> object associated with a rebar control.","source":"Gets the `CImageList` object associated with a rebar control."},{"content":"Return Value","pos":[19899,19911]},{"content":"A pointer to a <bpt id=\"p1\">[</bpt>CImageList<ept id=\"p1\">](../../mfc/reference/cimagelist-class.md)</ept> object.","pos":[19915,19991],"source":"A pointer to a [CImageList](../../mfc/reference/cimagelist-class.md) object."},{"content":"Returns <bpt id=\"p1\">**</bpt>NULL<ept id=\"p1\">**</ept> if no image list is set for the control.","pos":[19992,20049],"source":" Returns **NULL** if no image list is set for the control."},{"content":"Remarks","pos":[20059,20066]},{"pos":[20070,20291],"content":"This member function uses size and mask information stored in the <bpt id=\"p1\">[</bpt>REBARINFO<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb774395)</ept> structure, as described in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"This member function uses size and mask information stored in the [REBARINFO](http://msdn.microsoft.com/library/windows/desktop/bb774395) structure, as described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"pos":[20340,20362],"content":"CReBarCtrl::GetPalette"},{"content":"Retrieves the rebar control's current palette.","pos":[20366,20412]},{"content":"Return Value","pos":[20470,20482]},{"pos":[20486,20605],"content":"A pointer to a <bpt id=\"p1\">[</bpt>CPalette<ept id=\"p1\">](../../mfc/reference/cpalette-class.md)</ept> object specifying the rebar control's current palette.","source":"A pointer to a [CPalette](../../mfc/reference/cpalette-class.md) object specifying the rebar control's current palette."},{"content":"Remarks","pos":[20615,20622]},{"pos":[20626,20729],"content":"Note that this member function uses a <ph id=\"ph1\">`CPalette`</ph> object as its return value, rather than an <ph id=\"ph2\">`HPALETTE`</ph>.","source":"Note that this member function uses a `CPalette` object as its return value, rather than an `HPALETTE`."},{"content":"Example","pos":[20739,20746]},{"pos":[20761,20781],"content":"NVC_MFC_CReBarCtrl#5"},{"pos":[20889,20908],"content":"CReBarCtrl::GetRect"},{"pos":[20912,21103],"content":"Implements the behavior of the Win32 message <bpt id=\"p1\">[</bpt>RB_GETRECT<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb774469)</ept>, as described in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"Implements the behavior of the Win32 message [RB_GETRECT](http://msdn.microsoft.com/library/windows/desktop/bb774469), as described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"content":"Parameters","pos":[21186,21196]},{"content":"Zero-based index of a band in the rebar control.","pos":[21211,21259]},{"content":"A pointer to a <bpt id=\"p1\">[</bpt>RECT<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/dd162897)</ept> structure that will receive the bounds of the rebar band.","pos":[21275,21414],"source":" A pointer to a [RECT](http://msdn.microsoft.com/library/windows/desktop/dd162897) structure that will receive the bounds of the rebar band."},{"content":"Return Value","pos":[21424,21436]},{"content":"Nonzero if successful; otherwise zero.","pos":[21440,21478]},{"content":"Example","pos":[21488,21495]},{"pos":[21510,21530],"content":"NVC_MFC_CReBarCtrl#6"},{"pos":[21642,21665],"content":"CReBarCtrl::GetRowCount"},{"pos":[21669,21864],"content":"Implements the behavior of the Win32 message <bpt id=\"p1\">[</bpt>RB_GETROWCOUNT<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb774471)</ept>, as described in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"Implements the behavior of the Win32 message [RB_GETROWCOUNT](http://msdn.microsoft.com/library/windows/desktop/bb774471), as described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"content":"Return Value","pos":[21918,21930]},{"pos":[21934,22006],"content":"A <bpt id=\"p1\">**</bpt>UINT<ept id=\"p1\">**</ept> value that represents the number of band rows in the control.","source":"A **UINT** value that represents the number of band rows in the control."},{"content":"Example","pos":[22016,22023]},{"pos":[22038,22058],"content":"NVC_MFC_CReBarCtrl#7"},{"pos":[22171,22195],"content":"CReBarCtrl::GetRowHeight"},{"pos":[22199,22395],"content":"Implements the behavior of the Win32 message <bpt id=\"p1\">[</bpt>RB_GETROWHEIGHT<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb774473)</ept>, as described in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"Implements the behavior of the Win32 message [RB_GETROWHEIGHT](http://msdn.microsoft.com/library/windows/desktop/bb774473), as described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"content":"Parameters","pos":[22459,22469]},{"content":"uRow","pos":[22474,22478]},{"content":"Zero-based index of the band that will have its height retrieved.","pos":[22483,22548]},{"content":"Return Value","pos":[22558,22570]},{"pos":[22574,22633],"content":"A <bpt id=\"p1\">**</bpt>UINT<ept id=\"p1\">**</ept> value that represents the row height, in pixels.","source":"A **UINT** value that represents the row height, in pixels."},{"content":"Example","pos":[22643,22650]},{"pos":[22665,22685],"content":"NVC_MFC_CReBarCtrl#8"},{"pos":[22798,22822],"content":"CReBarCtrl::GetTextColor"},{"pos":[22826,23022],"content":"Implements the behavior of the Win32 message <bpt id=\"p1\">[</bpt>RB_GETTEXTCOLOR<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb774475)</ept>, as described in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"Implements the behavior of the Win32 message [RB_GETTEXTCOLOR](http://msdn.microsoft.com/library/windows/desktop/bb774475), as described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"content":"Return Value","pos":[23081,23093]},{"pos":[23097,23164],"content":"A <bpt id=\"p1\">**</bpt>COLORREF<ept id=\"p1\">**</ept> value that represent the current default text color.","source":"A **COLORREF** value that represent the current default text color."},{"pos":[23214,23237],"content":"CReBarCtrl::GetToolTips"},{"pos":[23241,23436],"content":"Implements the behavior of the Win32 message <bpt id=\"p1\">[</bpt>RB_GETTOOLTIPS<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb774477)</ept>, as described in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"Implements the behavior of the Win32 message [RB_GETTOOLTIPS](http://msdn.microsoft.com/library/windows/desktop/bb774477), as described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"content":"Return Value","pos":[23499,23511]},{"pos":[23515,23595],"content":"A pointer to a <bpt id=\"p1\">[</bpt>CToolTipCtrl<ept id=\"p1\">](../../mfc/reference/ctooltipctrl-class.md)</ept> object.","source":"A pointer to a [CToolTipCtrl](../../mfc/reference/ctooltipctrl-class.md) object."},{"content":"Remarks","pos":[23605,23612]},{"pos":[23616,23727],"content":"Note that the MFC implementation of <ph id=\"ph1\">`GetToolTips`</ph> returns a pointer to a <ph id=\"ph2\">`CToolTipCtrl`</ph>, rather than an <ph id=\"ph3\">`HWND`</ph>.","source":"Note that the MFC implementation of `GetToolTips` returns a pointer to a `CToolTipCtrl`, rather than an `HWND`."},{"pos":[23773,23792],"content":"CReBarCtrl::HitTest"},{"pos":[23796,23987],"content":"Implements the behavior of the Win32 message <bpt id=\"p1\">[</bpt>RB_HITTEST<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb774494)</ept>, as described in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"Implements the behavior of the Win32 message [RB_HITTEST](http://msdn.microsoft.com/library/windows/desktop/bb774494), as described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"content":"Parameters","pos":[24047,24057]},{"content":"prbht","pos":[24062,24067]},{"content":"A pointer to a <bpt id=\"p1\">[</bpt>RBHITTESTINFO<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb774391)</ept> structure.","pos":[24072,24173],"source":" A pointer to a [RBHITTESTINFO](http://msdn.microsoft.com/library/windows/desktop/bb774391) structure."},{"content":"Before sending the message, the <bpt id=\"p1\">**</bpt>pt<ept id=\"p1\">**</ept> member of this structure must be initialized to the point that will be tested, in client coordinates.","pos":[24174,24314],"source":" Before sending the message, the **pt** member of this structure must be initialized to the point that will be tested, in client coordinates."},{"content":"Return Value","pos":[24324,24336]},{"content":"The zero-based index of the band at the given point, or -1 if no rebar band was at the point.","pos":[24340,24433]},{"pos":[24481,24502],"content":"CReBarCtrl::IDToIndex"},{"pos":[24506,24699],"content":"Implements the behavior of the Win32 message <bpt id=\"p1\">[</bpt>RB_IDTOINDEX<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb774496)</ept>, as described in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"Implements the behavior of the Win32 message [RB_IDTOINDEX](http://msdn.microsoft.com/library/windows/desktop/bb774496), as described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"content":"Parameters","pos":[24762,24772]},{"content":"uBandID","pos":[24777,24784]},{"content":"The application-defined identifier of the specified band, passed in the <bpt id=\"p1\">**</bpt>wID<ept id=\"p1\">**</ept> member of the <bpt id=\"p2\">[</bpt>REBARBANDINFO<ept id=\"p2\">](http://msdn.microsoft.com/library/windows/desktop/bb774393)</ept> structure when the band is inserted.","pos":[24789,24995],"source":" The application-defined identifier of the specified band, passed in the **wID** member of the [REBARBANDINFO](http://msdn.microsoft.com/library/windows/desktop/bb774393) structure when the band is inserted."},{"content":"Return Value","pos":[25005,25017]},{"content":"The zero-based band index if successful, or -1 otherwise.","pos":[25021,25078]},{"content":"If duplicate band indices exist, the first one is returned.","pos":[25079,25138]},{"pos":[25187,25209],"content":"CReBarCtrl::InsertBand"},{"pos":[25213,25407],"content":"Implements the behavior of the Win32 message <bpt id=\"p1\">[</bpt>RB_INSERTBAND<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb774498)</ept>, as described in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"Implements the behavior of the Win32 message [RB_INSERTBAND](http://msdn.microsoft.com/library/windows/desktop/bb774498), as described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"content":"Parameters","pos":[25495,25505]},{"content":"uIndex","pos":[25510,25516]},{"content":"Zero-based index of the location where the band will be inserted.","pos":[25521,25586]},{"content":"If you set this parameter to -1, the control will add the new band at the last location.","pos":[25587,25675]},{"content":"A pointer to a <bpt id=\"p1\">[</bpt>REBARBANDINFO<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb774393)</ept> structure that defines the band to be inserted.","pos":[25693,25831],"source":" A pointer to a [REBARBANDINFO](http://msdn.microsoft.com/library/windows/desktop/bb774393) structure that defines the band to be inserted."},{"content":"You must set the <ph id=\"ph1\">`cbSize`</ph> member of this structure to <ph id=\"ph2\">`sizeof(REBARBANDINFO)`</ph> before calling this function.","pos":[25832,25939],"source":" You must set the `cbSize` member of this structure to `sizeof(REBARBANDINFO)` before calling this function."},{"content":"Return Value","pos":[25949,25961]},{"content":"Nonzero if successful; otherwise zero.","pos":[25965,26003]},{"content":"Example","pos":[26013,26020]},{"pos":[26035,26055],"content":"NVC_MFC_CReBarCtrl#9"},{"pos":[26168,26192],"content":"CReBarCtrl::MaximizeBand"},{"content":"Resizes a band in a rebar control to its largest size.","pos":[26196,26250]},{"content":"Parameters","pos":[26306,26316]},{"content":"Zero-based index of the band to be maximized.","pos":[26331,26376]},{"content":"Remarks","pos":[26386,26393]},{"pos":[26397,26616],"content":"Implements the behavior of the Win32 message <bpt id=\"p1\">[</bpt>RB_MAXIMIZEBAND<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb774500)</ept> with <ph id=\"ph1\">`fIdeal`</ph> set to 0, as described in the <ph id=\"ph2\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"Implements the behavior of the Win32 message [RB_MAXIMIZEBAND](http://msdn.microsoft.com/library/windows/desktop/bb774500) with `fIdeal` set to 0, as described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"content":"Example","pos":[26626,26633]},{"pos":[26648,26669],"content":"NVC_MFC_CReBarCtrl#10"},{"pos":[26782,26806],"content":"CReBarCtrl::MinimizeBand"},{"content":"Resizes a band in a rebar control to its smallest size.","pos":[26810,26865]},{"content":"Parameters","pos":[26921,26931]},{"content":"Zero-based index of the band to be minimized.","pos":[26946,26991]},{"content":"Remarks","pos":[27001,27008]},{"pos":[27012,27208],"content":"Implements the behavior of the Win32 message <bpt id=\"p1\">[</bpt>RB_MINIMIZEBAND<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb774502)</ept>, as described in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"Implements the behavior of the Win32 message [RB_MINIMIZEBAND](http://msdn.microsoft.com/library/windows/desktop/bb774502), as described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"content":"Example","pos":[27218,27225]},{"pos":[27240,27261],"content":"NVC_MFC_CReBarCtrl#11"},{"pos":[27370,27390],"content":"CReBarCtrl::MoveBand"},{"pos":[27394,27586],"content":"Implements the behavior of the Win32 message <bpt id=\"p1\">[</bpt>RB_MOVEBAND<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb774504)</ept>, as described in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"Implements the behavior of the Win32 message [RB_MOVEBAND](http://msdn.microsoft.com/library/windows/desktop/bb774504), as described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"content":"Parameters","pos":[27659,27669]},{"content":"uFrom","pos":[27674,27679]},{"content":"Zero-based index of the band to be moved.","pos":[27684,27725]},{"content":"uTo","pos":[27733,27736]},{"content":"Zero-based index of the new band position.","pos":[27741,27783]},{"content":"This parameter value must never be greater than the number of bands minus one.","pos":[27784,27862]},{"content":"To obtain the number of bands, call <bpt id=\"p1\">[</bpt>GetBandCount<ept id=\"p1\">](#crebarctrl__getbandcount)</ept>.","pos":[27863,27941],"source":" To obtain the number of bands, call [GetBandCount](#crebarctrl__getbandcount)."},{"content":"Return Value","pos":[27951,27963]},{"content":"Nonzero if successful; otherwise zero.","pos":[27967,28005]},{"pos":[28055,28078],"content":"CReBarCtrl::PushChevron"},{"pos":[28082,28277],"content":"Implements the behavior of the Win32 message <bpt id=\"p1\">[</bpt>RB_PUSHCHEVRON<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb774506)</ept>, as described in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"Implements the behavior of the Win32 message [RB_PUSHCHEVRON](http://msdn.microsoft.com/library/windows/desktop/bb774506), as described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"content":"Parameters","pos":[28361,28371]},{"content":"Zero-based index of the band whose chevron is to be pushed.","pos":[28386,28445]},{"content":"An application defined 32-bit value.","pos":[28467,28503]},{"content":"See <ph id=\"ph1\">`lAppValue`</ph> in <bpt id=\"p1\">[</bpt>RB_PUSHCHEVRON<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb774506)</ept> in the <ph id=\"ph2\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","pos":[28504,28659],"source":" See `lAppValue` in [RB_PUSHCHEVRON](http://msdn.microsoft.com/library/windows/desktop/bb774506) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"pos":[28709,28732],"content":"CReBarCtrl::RestoreBand"},{"content":"Resizes a band in a rebar control to its ideal size.","pos":[28736,28788]},{"content":"Parameters","pos":[28843,28853]},{"content":"Zero-based index of the band to be maximized.","pos":[28868,28913]},{"content":"Remarks","pos":[28923,28930]},{"pos":[28934,29153],"content":"Implements the behavior of the Win32 message <bpt id=\"p1\">[</bpt>RB_MAXIMIZEBAND<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb774500)</ept> with <ph id=\"ph1\">`fIdeal`</ph> set to 1, as described in the <ph id=\"ph2\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"Implements the behavior of the Win32 message [RB_MAXIMIZEBAND](http://msdn.microsoft.com/library/windows/desktop/bb774500) with `fIdeal` set to 1, as described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"content":"Example","pos":[29163,29170]},{"pos":[29185,29206],"content":"NVC_MFC_CReBarCtrl#12"},{"pos":[29319,29342],"content":"CReBarCtrl::SetBandInfo"},{"pos":[29346,29541],"content":"Implements the behavior of the Win32 message <bpt id=\"p1\">[</bpt>RB_SETBANDINFO<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb774508)</ept>, as described in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"Implements the behavior of the Win32 message [RB_SETBANDINFO](http://msdn.microsoft.com/library/windows/desktop/bb774508), as described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"content":"Parameters","pos":[29629,29639]},{"content":"Zero-based index of the band to receive the new settings.","pos":[29654,29711]},{"content":"Pointer to a <bpt id=\"p1\">[</bpt>REBARBANDINFO<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb774393)</ept> structure that defines the band to be inserted.","pos":[29729,29865],"source":" Pointer to a [REBARBANDINFO](http://msdn.microsoft.com/library/windows/desktop/bb774393) structure that defines the band to be inserted."},{"content":"You must set the <ph id=\"ph1\">`cbSize`</ph> member of this structure to <ph id=\"ph2\">`sizeof(REBARBANDINFO)`</ph> before sending this message.","pos":[29866,29972],"source":" You must set the `cbSize` member of this structure to `sizeof(REBARBANDINFO)` before sending this message."},{"content":"Return Value","pos":[29982,29994]},{"content":"Nonzero if successful; otherwise zero.","pos":[29998,30036]},{"content":"Example","pos":[30046,30053]},{"pos":[30068,30089],"content":"NVC_MFC_CReBarCtrl#13"},{"pos":[30203,30227],"content":"CReBarCtrl::SetBandWidth"},{"content":"Sets the width of the specified docked band in the current rebar control.","pos":[30231,30304]},{"content":"Parameters","pos":[30385,30395]},{"content":"Parameter","pos":[30402,30411]},{"content":"Description","pos":[30412,30423]},{"pos":[30466,30470],"content":"[in]"},{"content":"Zero-based index of a rebar band.","pos":[30479,30512]},{"pos":[30517,30521],"content":"[in]"},{"content":"New width of the rebar band, in pixels.","pos":[30532,30571]},{"content":"Return Value","pos":[30582,30594]},{"pos":[30605,30653],"content":"if the method is successful; otherwise, <ph id=\"ph1\">`false`</ph>.","source":" if the method is successful; otherwise, `false`."},{"content":"Remarks","pos":[30663,30670]},{"pos":[30674,30861],"content":"This method sends the <bpt id=\"p1\">[</bpt>RB_SETBANDWIDTH<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb774511)</ept> message, which is described in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"This method sends the [RB_SETBANDWIDTH](http://msdn.microsoft.com/library/windows/desktop/bb774511) message, which is described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"content":"Example","pos":[30871,30878]},{"content":"The following code example defines the variable, <ph id=\"ph1\">`m_rebar`</ph>, that is used to access the current rebar control.","pos":[30882,30991],"source":"The following code example defines the variable, `m_rebar`, that is used to access the current rebar control."},{"content":"This variable is used in the next example.","pos":[30992,31034]},{"pos":[31052,31075],"content":"NVC_MFC_CReBarCtrl_s1#1"},{"content":"Example","pos":[31146,31153]},{"content":"The following code example sets each rebar band to be the same width.","pos":[31157,31226]},{"pos":[31244,31267],"content":"NVC_MFC_CReBarCtrl_s1#2"},{"pos":[31379,31401],"content":"CReBarCtrl::SetBarInfo"},{"pos":[31405,31599],"content":"Implements the behavior of the Win32 message <bpt id=\"p1\">[</bpt>RB_SETBARINFO<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb774513)</ept>, as described in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"Implements the behavior of the Win32 message [RB_SETBARINFO](http://msdn.microsoft.com/library/windows/desktop/bb774513), as described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"content":"Parameters","pos":[31658,31668]},{"content":"A pointer to a <bpt id=\"p1\">[</bpt>REBARINFO<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb774395)</ept> structure that contains the information to be set.","pos":[31682,31819],"source":" A pointer to a [REBARINFO](http://msdn.microsoft.com/library/windows/desktop/bb774395) structure that contains the information to be set."},{"content":"You must set the <ph id=\"ph1\">`cbSize`</ph> member of this structure to <ph id=\"ph2\">`sizeof(REBARINFO)`</ph> before sending this message","pos":[31820,31921],"source":" You must set the `cbSize` member of this structure to `sizeof(REBARINFO)` before sending this message"},{"content":"Return Value","pos":[31931,31943]},{"content":"Nonzero if successful; otherwise zero.","pos":[31947,31985]},{"content":"Example","pos":[31995,32002]},{"pos":[32017,32038],"content":"NVC_MFC_CReBarCtrl#14"},{"pos":[32150,32172],"content":"CReBarCtrl::SetBkColor"},{"pos":[32176,32370],"content":"Implements the behavior of the Win32 message <bpt id=\"p1\">[</bpt>RB_SETBKCOLOR<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb774515)</ept>, as described in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"Implements the behavior of the Win32 message [RB_SETBKCOLOR](http://msdn.microsoft.com/library/windows/desktop/bb774515), as described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"content":"Parameters","pos":[32430,32440]},{"content":"The <bpt id=\"p1\">**</bpt>COLORREF<ept id=\"p1\">**</ept> value that represents the new default background color.","pos":[32453,32525],"source":" The **COLORREF** value that represents the new default background color."},{"content":"Return Value","pos":[32535,32547]},{"pos":[32551,32684],"content":"A <bpt id=\"p1\">[</bpt>COLORREF<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/dd183449)</ept> value that represents the previous default background color.","source":"A [COLORREF](http://msdn.microsoft.com/library/windows/desktop/dd183449) value that represents the previous default background color."},{"content":"Remarks","pos":[32694,32701]},{"content":"See this topic for more information about when to set the background color, and how to set the default.","pos":[32705,32808]},{"pos":[32861,32887],"content":"CReBarCtrl::SetColorScheme"},{"content":"Sets the color scheme for the buttons on a rebar control.","pos":[32891,32948]},{"content":"Parameters","pos":[33019,33029]},{"content":"A pointer to a <bpt id=\"p1\">[</bpt>COLORSCHEME<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb775502)</ept> structure, as described in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","pos":[33043,33215],"source":" A pointer to a [COLORSCHEME](http://msdn.microsoft.com/library/windows/desktop/bb775502) structure, as described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"content":"Remarks","pos":[33225,33232]},{"pos":[33236,33335],"content":"The <bpt id=\"p1\">**</bpt>COLORSCHEME<ept id=\"p1\">**</ept> structure includes both the button highlight color and the button shadow color.","source":"The **COLORSCHEME** structure includes both the button highlight color and the button shadow color."},{"pos":[33390,33418],"content":"CReBarCtrl::SetExtendedStyle"},{"content":"Sets the extended styles for the current rebar control.","pos":[33422,33477]},{"content":"Parameters","pos":[33569,33579]},{"content":"Parameter","pos":[33586,33595]},{"content":"Description","pos":[33596,33607]},{"pos":[33650,33654],"content":"[in]"},{"content":"A bitwise combination (OR) of flags that specify which flags in the <ph id=\"ph1\">`dwStyleEx`</ph> parameter apply.","pos":[33664,33760],"source":"A bitwise combination (OR) of flags that specify which flags in the `dwStyleEx` parameter apply."},{"content":"Use one or more of the following values:","pos":[33761,33801]},{"content":"RBS_EX_SPLITTER: By default, show the splitter on the bottom in horizontal mode, and to the right in vertical mode.","pos":[33814,33929]},{"content":"RBS_EX_TRANSPARENT: Forward the <bpt id=\"p1\">[</bpt>WM_ERASEBKGND<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms648055)</ept> message to the parent window.","pos":[33942,34079],"source":" RBS_EX_TRANSPARENT: Forward the [WM_ERASEBKGND](http://msdn.microsoft.com/library/windows/desktop/ms648055) message to the parent window."},{"pos":[34084,34088],"content":"[in]"},{"content":"A bitwise combination (OR) of flags that specify the styles to apply.","pos":[34101,34170]},{"content":"To set a style, specify the same flag that is used in the <ph id=\"ph1\">`dwMask`</ph> parameter.","pos":[34171,34248],"source":" To set a style, specify the same flag that is used in the `dwMask` parameter."},{"content":"To reset a style, specify binary zero.","pos":[34249,34287]},{"content":"Return Value","pos":[34298,34310]},{"content":"The previous extended style.","pos":[34314,34342]},{"content":"Remarks","pos":[34352,34359]},{"pos":[34363,34554],"content":"This method sends the <bpt id=\"p1\">[</bpt>RB_SETEXTENDEDSTYLE<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb774519)</ept> message, which is described in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"This method sends the [RB_SETEXTENDEDSTYLE](http://msdn.microsoft.com/library/windows/desktop/bb774519) message, which is described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"pos":[34605,34629],"content":"CReBarCtrl::SetImageList"},{"content":"Assigns an image list to a rebar control.","pos":[34633,34674]},{"content":"Parameters","pos":[34742,34752]},{"content":"A pointer to a <bpt id=\"p1\">[</bpt>CImageList<ept id=\"p1\">](../../mfc/reference/cimagelist-class.md)</ept> object containing the image list to be assigned to the rebar control.","pos":[34772,34910],"source":" A pointer to a [CImageList](../../mfc/reference/cimagelist-class.md) object containing the image list to be assigned to the rebar control."},{"content":"Return Value","pos":[34920,34932]},{"content":"Nonzero if successful; otherwise zero.","pos":[34936,34974]},{"pos":[35021,35041],"content":"CReBarCtrl::SetOwner"},{"pos":[35045,35238],"content":"Implements the behavior of the Win32 message <bpt id=\"p1\">[</bpt>RB_SETPARENT<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb774522)</ept>, as described in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"Implements the behavior of the Win32 message [RB_SETPARENT](http://msdn.microsoft.com/library/windows/desktop/bb774522), as described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"content":"Parameters","pos":[35291,35301]},{"content":"A pointer to a <ph id=\"ph1\">`CWnd`</ph> object to set as the owner of the rebar control.","pos":[35315,35385],"source":" A pointer to a `CWnd` object to set as the owner of the rebar control."},{"content":"Return Value","pos":[35395,35407]},{"pos":[35411,35522],"content":"A pointer to a <bpt id=\"p1\">[</bpt>CWnd<ept id=\"p1\">](../../mfc/reference/cwnd-class.md)</ept> object that is the current owner of the rebar control.","source":"A pointer to a [CWnd](../../mfc/reference/cwnd-class.md) object that is the current owner of the rebar control."},{"content":"Remarks","pos":[35532,35539]},{"pos":[35543,35699],"content":"Note that this member function uses pointers to <ph id=\"ph1\">`CWnd`</ph> objects for both the current and selected owner of the rebar control, rather than handles to windows.","source":"Note that this member function uses pointers to `CWnd` objects for both the current and selected owner of the rebar control, rather than handles to windows."},{"pos":[35707,35880],"content":"[!NOTE]\n This member function does not change the actual parent that was set when the control was created; rather it sends notification messages to the window you specify.","leadings":["","> "],"nodes":[{"content":"This member function does not change the actual parent that was set when the control was created; rather it sends notification messages to the window you specify.","pos":[9,171]}]},{"pos":[35929,35951],"content":"CReBarCtrl::SetPalette"},{"pos":[35955,36149],"content":"Implements the behavior of the Win32 message <bpt id=\"p1\">[</bpt>RB_SETPALETTE<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb774520)</ept>, as described in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"Implements the behavior of the Win32 message [RB_SETPALETTE](http://msdn.microsoft.com/library/windows/desktop/bb774520), as described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"content":"Parameters","pos":[36211,36221]},{"content":"hPal","pos":[36226,36230]},{"content":"An <ph id=\"ph1\">`HPALETTE`</ph> that specifies the new palette that the rebar control will use.","pos":[36235,36312],"source":" An `HPALETTE` that specifies the new palette that the rebar control will use."},{"content":"Return Value","pos":[36322,36334]},{"pos":[36338,36458],"content":"A pointer to a <bpt id=\"p1\">[</bpt>CPalette<ept id=\"p1\">](../../mfc/reference/cpalette-class.md)</ept> object specifying the rebar control's previous palette.","source":"A pointer to a [CPalette](../../mfc/reference/cpalette-class.md) object specifying the rebar control's previous palette."},{"content":"Remarks","pos":[36468,36475]},{"pos":[36479,36582],"content":"Note that this member function uses a <ph id=\"ph1\">`CPalette`</ph> object as its return value, rather than an <ph id=\"ph2\">`HPALETTE`</ph>.","source":"Note that this member function uses a `CPalette` object as its return value, rather than an `HPALETTE`."},{"pos":[36633,36657],"content":"CReBarCtrl::SetTextColor"},{"pos":[36661,36857],"content":"Implements the behavior of the Win32 message <bpt id=\"p1\">[</bpt>RB_SETTEXTCOLOR<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb774524)</ept>, as described in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"Implements the behavior of the Win32 message [RB_SETTEXTCOLOR](http://msdn.microsoft.com/library/windows/desktop/bb774524), as described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"content":"Parameters","pos":[36919,36929]},{"content":"A <bpt id=\"p1\">**</bpt>COLORREF<ept id=\"p1\">**</ept> value that represents the new text color in the <ph id=\"ph1\">`CReBarCtrl`</ph> object.","pos":[36942,37025],"source":" A **COLORREF** value that represents the new text color in the `CReBarCtrl` object."},{"content":"Return Value","pos":[37035,37047]},{"pos":[37051,37209],"content":"The <bpt id=\"p1\">[</bpt>COLORREF<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/dd183449)</ept> value representing the previous text color associated with the <ph id=\"ph1\">`CReBarCtrl`</ph> object.","source":"The [COLORREF](http://msdn.microsoft.com/library/windows/desktop/dd183449) value representing the previous text color associated with the `CReBarCtrl` object."},{"content":"Remarks","pos":[37219,37226]},{"content":"It is provided to support text color flexibility in a rebar control.","pos":[37230,37298]},{"pos":[37348,37371],"content":"CReBarCtrl::SetToolTips"},{"content":"Associates a tool tip control with a rebar control.","pos":[37375,37426]},{"content":"Parameters","pos":[37493,37503]},{"content":"pToolTip","pos":[37508,37516]},{"content":"A pointer to a <bpt id=\"p1\">[</bpt>CToolTipCtrl<ept id=\"p1\">](../../mfc/reference/ctooltipctrl-class.md)</ept> object","pos":[37521,37600],"source":" A pointer to a [CToolTipCtrl](../../mfc/reference/ctooltipctrl-class.md) object"},{"content":"Remarks","pos":[37610,37617]},{"pos":[37621,37690],"content":"You must destroy the <ph id=\"ph1\">`CToolTipCtrl`</ph> object when you are done with it.","source":"You must destroy the `CToolTipCtrl` object when you are done with it."},{"pos":[37743,37769],"content":"CReBarCtrl::SetWindowTheme"},{"content":"Sets the visual style of the rebar control.","pos":[37773,37816]},{"content":"Parameters","pos":[37888,37898]},{"content":"A pointer to a Unicode string that contains the rebar visual style to set.","pos":[37921,37995]},{"content":"Return Value","pos":[38005,38017]},{"content":"The return value is not used.","pos":[38021,38050]},{"content":"Remarks","pos":[38060,38067]},{"pos":[38071,38287],"content":"This member function emulates the functionality of the <bpt id=\"p1\">[</bpt>RB_SETWINDOWTHEME<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb774530)</ept> message, as described in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"This member function emulates the functionality of the [RB_SETWINDOWTHEME](http://msdn.microsoft.com/library/windows/desktop/bb774530) message, as described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"pos":[38334,38354],"content":"CReBarCtrl::ShowBand"},{"pos":[38358,38550],"content":"Implements the behavior of the Win32 message <bpt id=\"p1\">[</bpt>RB_SHOWBAND<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb774532)</ept>, as described in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"Implements the behavior of the Win32 message [RB_SHOWBAND](http://msdn.microsoft.com/library/windows/desktop/bb774532), as described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"content":"Parameters","pos":[38632,38642]},{"content":"Zero-based index of a band in the rebar control.","pos":[38657,38705]},{"content":"fShow","pos":[38713,38718]},{"content":"Indicates if the band should be shown or hidden.","pos":[38723,38771]},{"content":"If this value is <bpt id=\"p1\">**</bpt>TRUE<ept id=\"p1\">**</ept>, the band will be shown.","pos":[38772,38822],"source":" If this value is **TRUE**, the band will be shown."},{"content":"Otherwise, the band will be hidden.","pos":[38823,38858]},{"content":"Return Value","pos":[38868,38880]},{"content":"Nonzero if successful; otherwise zero.","pos":[38884,38922]},{"pos":[38971,38993],"content":"CReBarCtrl::SizeToRect"},{"pos":[38997,39191],"content":"Implements the behavior of the Win32 message <bpt id=\"p1\">[</bpt>RB_SIZETORECT<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb774534)</ept>, as described in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"Implements the behavior of the Win32 message [RB_SIZETORECT](http://msdn.microsoft.com/library/windows/desktop/bb774534), as described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"content":"Parameters","pos":[39246,39256]},{"content":"A reference to a <bpt id=\"p1\">[</bpt>CRect<ept id=\"p1\">](../../atl-mfc-shared/reference/crect-class.md)</ept> object that specifies the rectangle that the rebar control should be sized to.","pos":[39270,39420],"source":" A reference to a [CRect](../../atl-mfc-shared/reference/crect-class.md) object that specifies the rectangle that the rebar control should be sized to."},{"content":"Return Value","pos":[39430,39442]},{"content":"Nonzero if successful; otherwise zero.","pos":[39446,39484]},{"content":"Remarks","pos":[39494,39501]},{"pos":[39505,39605],"content":"Note that this member function uses a <ph id=\"ph1\">`CRect`</ph> object as a parameter, rather than a <ph id=\"ph2\">`RECT`</ph> structure.","source":"Note that this member function uses a `CRect` object as a parameter, rather than a `RECT` structure."},{"content":"See Also","pos":[39614,39622]},{"content":"CWnd Class","pos":[39627,39637]},{"content":"Hierarchy Chart","pos":[39679,39694]}],"content":"---\ntitle: \"CReBarCtrl Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"CReBarCtrl\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"rebar controls, control bar\"\n  - \"rebar controls, CReBarCtrl class\"\n  - \"CReBarCtrl class\"\nms.assetid: 154570d7-e48c-425d-8c7e-c64542bcb4cc\ncaps.latest.revision: 23\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# CReBarCtrl Class\nEncapsulates the functionality of a rebar control, which is a container for a child window.  \n  \n## Syntax  \n  \n```  \nclass CReBarCtrl : public CWnd  \n```  \n  \n## Members  \n  \n### Public Constructors  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CReBarCtrl::CReBarCtrl](#crebarctrl__crebarctrl)|Constructs a `CReBarCtrl` object.|  \n  \n### Public Methods  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CReBarCtrl::BeginDrag](#crebarctrl__begindrag)|Places the rebar control into drag-and-drop mode.|  \n|[CReBarCtrl::Create](#crebarctrl__create)|Creates the rebar control and attaches it to the `CReBarCtrl` object.|  \n|[CReBarCtrl::CreateEx](#crebarctrl__createex)|Creates a rebar control with the specified Windows extended styles and attaches it to a `CReBarCtrl` object.|  \n|[CReBarCtrl::DeleteBand](#crebarctrl__deleteband)|Deletes a band from a rebar control.|  \n|[CReBarCtrl::DragMove](#crebarctrl__dragmove)|Updates the drag position in the rebar control after a call to `BeginDrag`.|  \n|[CReBarCtrl::EndDrag](#crebarctrl__enddrag)|Terminates the rebar control's drag-and-drop operation.|  \n|[CReBarCtrl::GetBandBorders](#crebarctrl__getbandborders)|Retrieves the borders of a band.|  \n|[CReBarCtrl::GetBandCount](#crebarctrl__getbandcount)|Retrieves the count of bands currently in the rebar control.|  \n|[CReBarCtrl::GetBandInfo](#crebarctrl__getbandinfo)|Retrieves information about a specified band in a rebar control.|  \n|[CReBarCtrl::GetBandMargins](#crebarctrl__getbandmargins)|Retrieves the margins of a band.|  \n|[CReBarCtrl::GetBarHeight](#crebarctrl__getbarheight)|Retrieves the height of the rebar control.|  \n|[CReBarCtrl::GetBarInfo](#crebarctrl__getbarinfo)|Retrieves information about the rebar control and the image list it uses.|  \n|[CReBarCtrl::GetBkColor](#crebarctrl__getbkcolor)|Retrieves a rebar control's default background color.|  \n|[CReBarCtrl::GetColorScheme](#crebarctrl__getcolorscheme)|Retrieves the [COLORSCHEME](http://msdn.microsoft.com/library/windows/desktop/bb775502) structure associated with the rebar control.|  \n|[CReBarCtrl::GetDropTarget](#crebarctrl__getdroptarget)|Retrieves a rebar control's `IDropTarget` interface pointer.|  \n|[CReBarCtrl::GetExtendedStyle](#crebarctrl__getextendedstyle)|Gets the extended style of the current rebar control.|  \n|[CReBarCtrl::GetImageList](#crebarctrl__getimagelist)|Retrieves the image list associated with a rebar control.|  \n|[CReBarCtrl::GetPalette](#crebarctrl__getpalette)|Retrieves the rebar control's current palette.|  \n|[CReBarCtrl::GetRect](#crebarctrl__getrect)|Retrieves the bounding rectangle for a given band in a rebar control.|  \n|[CReBarCtrl::GetRowCount](#crebarctrl__getrowcount)|Retrieves the number of band rows in a rebar control.|  \n|[CReBarCtrl::GetRowHeight](#crebarctrl__getrowheight)|Retrieves the height of a specified row in a rebar control.|  \n|[CReBarCtrl::GetTextColor](#crebarctrl__gettextcolor)|Retrieves a rebar control's default text color.|  \n|[CReBarCtrl::GetToolTips](#crebarctrl__gettooltips)|Retrieves the handle to any tool tip control associated with the rebar control.|  \n|[CReBarCtrl::HitTest](#crebarctrl__hittest)|Determines which portion of a rebar band is at a given point on the screen, if a rebar band exists at that point.|  \n|[CReBarCtrl::IDToIndex](#crebarctrl__idtoindex)|Converts a band identifier (ID) to a band index in a rebar control.|  \n|[CReBarCtrl::InsertBand](#crebarctrl__insertband)|Inserts a new band in a rebar control.|  \n|[CReBarCtrl::MaximizeBand](#crebarctrl__maximizeband)|Resizes a band in a rebar control to its largest size.|  \n|[CReBarCtrl::MinimizeBand](#crebarctrl__minimizeband)|Resizes a band in a rebar control to its smallest size.|  \n|[CReBarCtrl::MoveBand](#crebarctrl__moveband)|Moves a band from one index to another.|  \n|[CReBarCtrl::PushChevron](#crebarctrl__pushchevron)|Programmatically pushes a chevron.|  \n|[CReBarCtrl::RestoreBand](#crebarctrl__restoreband)|Resizes a band in a rebar control to its ideal size.|  \n|[CReBarCtrl::SetBandInfo](#crebarctrl__setbandinfo)|Sets characteristics of an existing band in a rebar control.|  \n|[CReBarCtrl::SetBandWidth](#crebarctrl__setbandwidth)|Sets the width of the specified docked band in the current rebar control.|  \n|[CReBarCtrl::SetBarInfo](#crebarctrl__setbarinfo)|Sets the characteristics of a rebar control.|  \n|[CReBarCtrl::SetBkColor](#crebarctrl__setbkcolor)|Sets a rebar control's default background color.|  \n|[CReBarCtrl::SetColorScheme](#crebarctrl__setcolorscheme)|Sets the color scheme for the buttons on a rebar control.|  \n|[CReBarCtrl::SetExtendedStyle](#crebarctrl__setextendedstyle)|Sets the extended styles for the current rebar control.|  \n|[CReBarCtrl::SetImageList](#crebarctrl__setimagelist)|Sets a rebar control's image list.|  \n|[CReBarCtrl::SetOwner](#crebarctrl__setowner)|Sets a rebar control's owner window.|  \n|[CReBarCtrl::SetPalette](#crebarctrl__setpalette)|Sets the rebar control's current palette.|  \n|[CReBarCtrl::SetTextColor](#crebarctrl__settextcolor)|Sets a rebar control's default text color.|  \n|[CReBarCtrl::SetToolTips](#crebarctrl__settooltips)|Associates a tool tip control with the rebar control.|  \n|[CReBarCtrl::SetWindowTheme](#crebarctrl__setwindowtheme)|Sets the visual style of the rebar control.|  \n|[CReBarCtrl::ShowBand](#crebarctrl__showband)|Shows or hides a given band in a rebar control.|  \n|[CReBarCtrl::SizeToRect](#crebarctrl__sizetorect)|Fits a rebar control to a specified rectangle.|  \n  \n## Remarks  \n The application in which the rebar control resides assigns the child window contained by the rebar control to the rebar band. The child window is usually another common control.  \n  \n Rebar controls contain one or more bands. Each band can contain a combination of a gripper bar, a bitmap, a text label, and a child window. The band can contain only one of each of these items.  \n  \n The rebar control can display the child window over a specified background bitmap. All rebar control bands can be resized, except those that use the **RBBS_FIXEDSIZE** style. As you reposition or resize a rebar control band, the rebar control manages the size and position of the child window assigned to that band. To resize or change the order of bands within the control, click and drag a band's gripper bar.  \n  \n The following illustration shows a rebar control that has three bands:  \n  \n-   Band 0 contains a flat, transparent toolbar control.  \n  \n-   Band 1 contains both transparent standard and transparent dropdown buttons.  \n  \n-   Band 2 contains a combo box and four standard buttons.  \n  \n     ![Example of a Rebar menu](../../mfc/reference/media/vc4scc1.gif \"vc4scc1\")  \n  \n## Rebar control  \n Rebar controls support:  \n  \n-   Image lists.  \n  \n-   Message-handling.  \n  \n-   Custom draw functionality.  \n  \n-   A variety of control styles in addition to standard window styles. For a list of these styles, see [Rebar Control Styles](http://msdn.microsoft.com/library/windows/desktop/bb774377) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n For more information, see [Using CReBarCtrl](../../mfc/using-crebarctrl.md).  \n  \n## Inheritance Hierarchy  \n [CObject](../../mfc/reference/cobject-class.md)  \n  \n [CCmdTarget](../../mfc/reference/ccmdtarget-class.md)  \n  \n [CWnd](../../mfc/reference/cwnd-class.md)  \n  \n `CReBarCtrl`  \n  \n## Requirements  \n **Header:** afxcmn.h  \n  \n##  <a name=\"crebarctrl__begindrag\"></a>  CReBarCtrl::BeginDrag  \n Implements the behavior of the Win32 message [RB_BEGINDRAG](http://msdn.microsoft.com/library/windows/desktop/bb774429), as described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n```  \nvoid BeginDrag(\n    UINT uBand,  \n    DWORD dwPos = (DWORD)-1);\n```  \n  \n### Parameters  \n `uBand`  \n Zero-based index of the band that the drag-and-drop operation will affect.  \n  \n `dwPos`  \n A `DWORD` value that contains the starting mouse coordinates. The horizontal coordinate is contained in the LOWORD and the vertical coordinate is contained in the HIWORD. If you pass `(DWORD)-1`, the rebar control will use the position of the mouse the last time the control's thread called **GetMessage** or **PeekMessage**.  \n  \n##  <a name=\"crebarctrl__create\"></a>  CReBarCtrl::Create  \n Creates the rebar control and attaches it to the `CReBarCtrl` object.  \n  \n```  \nvirtual BOOL Create(\n    DWORD dwStyle,  \n    const RECT& rect,  \n    CWnd* pParentWnd,  \n    UINT nID);\n```  \n  \n### Parameters  \n `dwStyle`  \n Specifies the combination of rebar control styles applied to the control. See [Rebar Control Styles](http://msdn.microsoft.com/library/windows/desktop/bb774377) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)] for a list of supported styles.  \n  \n `rect`  \n A reference to a [CRect](../../atl-mfc-shared/reference/crect-class.md) object or [RECT](http://msdn.microsoft.com/library/windows/desktop/dd162897) structure, which is the position and size of the rebar control.  \n  \n `pParentWnd`  \n A pointer to a [CWnd](../../mfc/reference/cwnd-class.md) object that is the parent window of the rebar control. It must not be **NULL**.  \n  \n `nID`  \n Specifies the rebar control's control ID.  \n  \n### Return Value  \n Nonzero if the object was created successfully; otherwise 0.  \n  \n### Remarks  \n Create a rebar control in two steps:  \n  \n1.  Call [CReBarCtrl](#crebarctrl__crebarctrl) to construct a `CReBarCtrl` object.  \n  \n2.  Call this member function, which creates the Windows rebar control and attaches it to the `CReBarCtrl` object.  \n  \n When you call **Create**, the common controls are initialized.  \n  \n### Example  \n [!code-cpp[NVC_MFC_CReBarCtrl#3](../../mfc/reference/codesnippet/cpp/crebarctrl-class_1.cpp)]  \n  \n##  <a name=\"crebarctrl__createex\"></a>  CReBarCtrl::CreateEx  \n Creates a control (a child window) and associates it with the `CReBarCtrl` object.  \n  \n```  \nvirtual BOOL CreateEx(\n    DWORD dwExStyle,  \n    DWORD dwStyle,  \n    const RECT& rect,  \n    CWnd* pParentWnd,  \n    UINT nID);\n```  \n  \n### Parameters  \n `dwExStyle`  \n Specifies the extended style of the control being created. For a list of extended Windows styles, see the `dwExStyle` parameter for [CreateWindowEx](http://msdn.microsoft.com/library/windows/desktop/ms632680) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n `dwStyle`  \n Specifies the combination of rebar control styles applied to the control. For a list of supported styles, see [Rebar Control Styles](http://msdn.microsoft.com/library/windows/desktop/bb774377) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n `rect`  \n A reference to a [RECT](http://msdn.microsoft.com/library/windows/desktop/dd162897) structure describing the size and position of the window to be created, in client coordinates of `pParentWnd`.  \n  \n `pParentWnd`  \n A pointer to the window that is the control's parent.  \n  \n `nID`  \n The control's child-window ID.  \n  \n### Return Value  \n Nonzero if successful; otherwise 0.  \n  \n### Remarks  \n Use `CreateEx` instead of [Create](#crebarctrl__create) to apply extended Windows styles, specified by the Windows extended style preface **WS_EX_**.  \n  \n##  <a name=\"crebarctrl__crebarctrl\"></a>  CReBarCtrl::CReBarCtrl  \n Creates a `CReBarCtrl` object.  \n  \n```  \nCReBarCtrl();\n```  \n  \n### Example  \n  See the example for [CReBarCtrl::Create](#crebarctrl__create).  \n  \n##  <a name=\"crebarctrl__deleteband\"></a>  CReBarCtrl::DeleteBand  \n Implements the behavior of the Win32 message [RB_DELETEBAND](http://msdn.microsoft.com/library/windows/desktop/bb774431), as described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n```  \nBOOL DeleteBand(UINT uBand);\n```  \n  \n### Parameters  \n `uBand`  \n Zero-based index of the band to be deleted.  \n  \n### Return Value  \n Nonzero if the band deleted successfully; otherwise zero.  \n  \n### Example  \n [!code-cpp[NVC_MFC_CReBarCtrl#4](../../mfc/reference/codesnippet/cpp/crebarctrl-class_2.cpp)]  \n  \n##  <a name=\"crebarctrl__dragmove\"></a>  CReBarCtrl::DragMove  \n Implements the behavior of the Win32 message [RB_DRAGMOVE](https://msdn.microsoft.com/library/bb774433.aspx), as described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n```  \nvoid DragMove(DWORD dwPos = (DWORD)-1);\n```  \n  \n### Parameters  \n `dwPos`  \n A `DWORD` value that contains the new mouse coordinates. The horizontal coordinate is contained in the LOWORD and the vertical coordinate is contained in the HIWORD. If you pass `(DWORD)-1`, the rebar control will use the position of the mouse the last time the control's thread called **GetMessage** or **PeekMessage**.  \n  \n##  <a name=\"crebarctrl__enddrag\"></a>  CReBarCtrl::EndDrag  \n Implements the behavior of the Win32 message [RB_ENDDRAG](http://msdn.microsoft.com/library/windows/desktop/bb774435), as described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n```  \nvoid EndDrag();\n```  \n  \n##  <a name=\"crebarctrl__getbandborders\"></a>  CReBarCtrl::GetBandBorders  \n Implements the behavior of the Win32 message [RB_GETBANDBORDERS](http://msdn.microsoft.com/library/windows/desktop/bb774437), as described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n```  \nvoid GetBandBorders(\n    UINT uBand,  \n    LPRECT prc) const;\n\n \n```  \n  \n### Parameters  \n `uBand`  \n Zero-based index of the band for which the borders will be retrieved.  \n  \n `prc`  \n A pointer to a [RECT](http://msdn.microsoft.com/library/windows/desktop/dd162897) structure that will receive the band borders. If the rebar control has the **RBS_BANDBORDERS** style, each member of this structure will receive the number of pixels, on the corresponding side of the band, that constitute the border. If the rebar control does not have the **RBS_BANDBORDERS** style, only the left member of this structure receives valid information. For a description of rebar control styles, see [Rebar Control Styles](http://msdn.microsoft.com/library/windows/desktop/bb774377) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n##  <a name=\"crebarctrl__getbandcount\"></a>  CReBarCtrl::GetBandCount  \n Implements the behavior of the Win32 message [RB_GETBANDCOUNT](http://msdn.microsoft.com/library/windows/desktop/bb774439), as described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n```  \nUINT GetBandCount() const;\n\n \n```  \n  \n### Return Value  \n The number of bands assigned to the control.  \n  \n##  <a name=\"crebarctrl__getbandinfo\"></a>  CReBarCtrl::GetBandInfo  \n Implements the behavior of the Win32 message [RB_GETBANDINFO](http://msdn.microsoft.com/library/windows/desktop/bb774451) as described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n```  \nBOOL GetBandInfo(\n    UINT uBand,  \n    REBARBANDINFO* prbbi) const;\n\n \n```  \n  \n### Parameters  \n `uBand`  \n Zero-based index of the band for which the information will be retrieved.  \n  \n `prbbi`  \n A pointer to a [REBARBANDINFO](http://msdn.microsoft.com/library/windows/desktop/bb774393) structure to receive the band information. You must set the `cbSize` member of this structure to `sizeof(REBARBANDINFO)` and set the **fMask** member to the items you want to retrieve before sending this message.  \n  \n### Return Value  \n Nonzero if successful; otherwise zero.  \n  \n##  <a name=\"crebarctrl__getbandmargins\"></a>  CReBarCtrl::GetBandMargins  \n Retrieves the margins of the band.  \n  \n```  \nvoid GetBandMargins(PMARGINS pMargins);\n```  \n  \n### Parameters  \n *pMargins*  \n A pointer to a [MARGINS](http://msdn.microsoft.com/library/windows/desktop/bb773244)structure that will receive the information.  \n  \n### Remarks  \n This member function emulates the functionality of the [RB_GETBANDMARGINS](http://msdn.microsoft.com/library/windows/desktop/bb774453) message, as described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n##  <a name=\"crebarctrl__getbarheight\"></a>  CReBarCtrl::GetBarHeight  \n Retrieves the height of the rebar bar.  \n  \n```  \nUINT GetBarHeight() const;\n\n \n```  \n  \n### Return Value  \n Value that represents the height, in pixels, of the control.  \n  \n##  <a name=\"crebarctrl__getbarinfo\"></a>  CReBarCtrl::GetBarInfo  \n Implements the behavior of the Win32 message [RB_GETBARINFO](http://msdn.microsoft.com/library/windows/desktop/bb774457), as described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n```  \nBOOL GetBarInfo(REBARINFO* prbi) const;\n\n \n```  \n  \n### Parameters  \n `prbi`  \n A pointer to a [REBARINFO](http://msdn.microsoft.com/library/windows/desktop/bb774395) structure that will receive the rebar control information. You must set the `cbSize` member of this structure to `sizeof(REBARINFO)` before sending this message.  \n  \n### Return Value  \n Nonzero if successful; otherwise zero.  \n  \n##  <a name=\"crebarctrl__getbkcolor\"></a>  CReBarCtrl::GetBkColor  \n Implements the behavior of the Win32 message [RB_GETBKCOLOR](http://msdn.microsoft.com/library/windows/desktop/bb774459), as described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n```  \nCOLORREF GetBkColor() const;\n\n \n```  \n  \n### Return Value  \n A **COLORREF** value that represent the current default background color.  \n  \n##  <a name=\"crebarctrl__getcolorscheme\"></a>  CReBarCtrl::GetColorScheme  \n Retrieves the [COLORSCHEME](http://msdn.microsoft.com/library/windows/desktop/bb775502) structure for the rebar control.  \n  \n```  \nBOOL GetColorScheme(COLORSCHEME* lpcs);\n```  \n  \n### Parameters  \n `lpcs`  \n A pointer to a [COLORSCHEME](http://msdn.microsoft.com/library/windows/desktop/bb775502) structure, as described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n### Return Value  \n Nonzero if successful; otherwise zero.  \n  \n### Remarks  \n The **COLORSCHEME** structure includes the button highlight color and the button shadow color.  \n  \n##  <a name=\"crebarctrl__getdroptarget\"></a>  CReBarCtrl::GetDropTarget  \n Implements the behavior of the Win32 message [RB_GETDROPTARGET](http://msdn.microsoft.com/library/windows/desktop/bb774463), as described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n```  \nIDropTarget* GetDropTarget() const;\n\n \n```  \n  \n### Return Value  \n A pointer to an [IDropTarget](http://msdn.microsoft.com/library/windows/desktop/ms679679) interface.  \n  \n##  <a name=\"crebarctrl__getextendedstyle\"></a>  CReBarCtrl::GetExtendedStyle  \n Gets the extended styles of the current rebar control.  \n  \n```  \nDWORD GetExtendedStyle() const;\n\n \n```  \n  \n### Return Value  \n A bitwise combination (OR) of flags that indicate the extended styles. The possible flags are `RBS_EX_SPLITTER` and `RBS_EX_TRANSPARENT`. For more information, see the `dwMask` parameter of the [CReBarCtrl::SetExtendedStyle](#crebarctrl__setextendedstyle) method.  \n  \n### Remarks  \n This method sends the [RB_GETEXTENDEDSTYLE](http://msdn.microsoft.com/library/windows/desktop/bb774433) message, which is described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n##  <a name=\"crebarctrl__getimagelist\"></a>  CReBarCtrl::GetImageList  \n Gets the `CImageList` object associated with a rebar control.  \n  \n```  \nCImageList* GetImageList() const;\n\n \n```  \n  \n### Return Value  \n A pointer to a [CImageList](../../mfc/reference/cimagelist-class.md) object. Returns **NULL** if no image list is set for the control.  \n  \n### Remarks  \n This member function uses size and mask information stored in the [REBARINFO](http://msdn.microsoft.com/library/windows/desktop/bb774395) structure, as described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n##  <a name=\"crebarctrl__getpalette\"></a>  CReBarCtrl::GetPalette  \n Retrieves the rebar control's current palette.  \n  \n```  \nCPalette* GetPalette() const;\n\n \n```  \n  \n### Return Value  \n A pointer to a [CPalette](../../mfc/reference/cpalette-class.md) object specifying the rebar control's current palette.  \n  \n### Remarks  \n Note that this member function uses a `CPalette` object as its return value, rather than an `HPALETTE`.  \n  \n### Example  \n [!code-cpp[NVC_MFC_CReBarCtrl#5](../../mfc/reference/codesnippet/cpp/crebarctrl-class_3.cpp)]  \n  \n##  <a name=\"crebarctrl__getrect\"></a>  CReBarCtrl::GetRect  \n Implements the behavior of the Win32 message [RB_GETRECT](http://msdn.microsoft.com/library/windows/desktop/bb774469), as described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n```  \nBOOL GetRect(\n    UINT uBand,  \n    LPRECT prc) const;\n\n \n```  \n  \n### Parameters  \n `uBand`  \n Zero-based index of a band in the rebar control.  \n  \n `prc`  \n A pointer to a [RECT](http://msdn.microsoft.com/library/windows/desktop/dd162897) structure that will receive the bounds of the rebar band.  \n  \n### Return Value  \n Nonzero if successful; otherwise zero.  \n  \n### Example  \n [!code-cpp[NVC_MFC_CReBarCtrl#6](../../mfc/reference/codesnippet/cpp/crebarctrl-class_4.cpp)]  \n  \n##  <a name=\"crebarctrl__getrowcount\"></a>  CReBarCtrl::GetRowCount  \n Implements the behavior of the Win32 message [RB_GETROWCOUNT](http://msdn.microsoft.com/library/windows/desktop/bb774471), as described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n```  \nUINT GetRowCount() const;\n\n \n```  \n  \n### Return Value  \n A **UINT** value that represents the number of band rows in the control.  \n  \n### Example  \n [!code-cpp[NVC_MFC_CReBarCtrl#7](../../mfc/reference/codesnippet/cpp/crebarctrl-class_5.cpp)]  \n  \n##  <a name=\"crebarctrl__getrowheight\"></a>  CReBarCtrl::GetRowHeight  \n Implements the behavior of the Win32 message [RB_GETROWHEIGHT](http://msdn.microsoft.com/library/windows/desktop/bb774473), as described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n```  \nUINT GetRowHeight(UINT uRow) const;\n\n \n```  \n  \n### Parameters  \n *uRow*  \n Zero-based index of the band that will have its height retrieved.  \n  \n### Return Value  \n A **UINT** value that represents the row height, in pixels.  \n  \n### Example  \n [!code-cpp[NVC_MFC_CReBarCtrl#8](../../mfc/reference/codesnippet/cpp/crebarctrl-class_6.cpp)]  \n  \n##  <a name=\"crebarctrl__gettextcolor\"></a>  CReBarCtrl::GetTextColor  \n Implements the behavior of the Win32 message [RB_GETTEXTCOLOR](http://msdn.microsoft.com/library/windows/desktop/bb774475), as described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n```  \nCOLORREF GetTextColor() const;\n\n \n```  \n  \n### Return Value  \n A **COLORREF** value that represent the current default text color.  \n  \n##  <a name=\"crebarctrl__gettooltips\"></a>  CReBarCtrl::GetToolTips  \n Implements the behavior of the Win32 message [RB_GETTOOLTIPS](http://msdn.microsoft.com/library/windows/desktop/bb774477), as described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n```  \nCToolTipCtrl* GetToolTips() const;\n\n \n```  \n  \n### Return Value  \n A pointer to a [CToolTipCtrl](../../mfc/reference/ctooltipctrl-class.md) object.  \n  \n### Remarks  \n Note that the MFC implementation of `GetToolTips` returns a pointer to a `CToolTipCtrl`, rather than an `HWND`.  \n  \n##  <a name=\"crebarctrl__hittest\"></a>  CReBarCtrl::HitTest  \n Implements the behavior of the Win32 message [RB_HITTEST](http://msdn.microsoft.com/library/windows/desktop/bb774494), as described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n```  \nint HitTest(RBHITTESTINFO* prbht);\n```  \n  \n### Parameters  \n *prbht*  \n A pointer to a [RBHITTESTINFO](http://msdn.microsoft.com/library/windows/desktop/bb774391) structure. Before sending the message, the **pt** member of this structure must be initialized to the point that will be tested, in client coordinates.  \n  \n### Return Value  \n The zero-based index of the band at the given point, or -1 if no rebar band was at the point.  \n  \n##  <a name=\"crebarctrl__idtoindex\"></a>  CReBarCtrl::IDToIndex  \n Implements the behavior of the Win32 message [RB_IDTOINDEX](http://msdn.microsoft.com/library/windows/desktop/bb774496), as described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n```  \nint IDToIndex(UINT uBandID) const;\n\n \n```  \n  \n### Parameters  \n *uBandID*  \n The application-defined identifier of the specified band, passed in the **wID** member of the [REBARBANDINFO](http://msdn.microsoft.com/library/windows/desktop/bb774393) structure when the band is inserted.  \n  \n### Return Value  \n The zero-based band index if successful, or -1 otherwise. If duplicate band indices exist, the first one is returned.  \n  \n##  <a name=\"crebarctrl__insertband\"></a>  CReBarCtrl::InsertBand  \n Implements the behavior of the Win32 message [RB_INSERTBAND](http://msdn.microsoft.com/library/windows/desktop/bb774498), as described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n```  \nBOOL InsertBand(\n    UINT uIndex,  \n    REBARBANDINFO* prbbi);\n```  \n  \n### Parameters  \n *uIndex*  \n Zero-based index of the location where the band will be inserted. If you set this parameter to -1, the control will add the new band at the last location.  \n  \n `prbbi`  \n A pointer to a [REBARBANDINFO](http://msdn.microsoft.com/library/windows/desktop/bb774393) structure that defines the band to be inserted. You must set the `cbSize` member of this structure to `sizeof(REBARBANDINFO)` before calling this function.  \n  \n### Return Value  \n Nonzero if successful; otherwise zero.  \n  \n### Example  \n [!code-cpp[NVC_MFC_CReBarCtrl#9](../../mfc/reference/codesnippet/cpp/crebarctrl-class_7.cpp)]  \n  \n##  <a name=\"crebarctrl__maximizeband\"></a>  CReBarCtrl::MaximizeBand  \n Resizes a band in a rebar control to its largest size.  \n  \n```  \nvoid MaximizeBand(UINT uBand);\n```  \n  \n### Parameters  \n `uBand`  \n Zero-based index of the band to be maximized.  \n  \n### Remarks  \n Implements the behavior of the Win32 message [RB_MAXIMIZEBAND](http://msdn.microsoft.com/library/windows/desktop/bb774500) with `fIdeal` set to 0, as described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n### Example  \n [!code-cpp[NVC_MFC_CReBarCtrl#10](../../mfc/reference/codesnippet/cpp/crebarctrl-class_8.cpp)]  \n  \n##  <a name=\"crebarctrl__minimizeband\"></a>  CReBarCtrl::MinimizeBand  \n Resizes a band in a rebar control to its smallest size.  \n  \n```  \nvoid MinimizeBand(UINT uBand);\n```  \n  \n### Parameters  \n `uBand`  \n Zero-based index of the band to be minimized.  \n  \n### Remarks  \n Implements the behavior of the Win32 message [RB_MINIMIZEBAND](http://msdn.microsoft.com/library/windows/desktop/bb774502), as described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n### Example  \n [!code-cpp[NVC_MFC_CReBarCtrl#11](../../mfc/reference/codesnippet/cpp/crebarctrl-class_9.cpp)]  \n  \n##  <a name=\"crebarctrl__moveband\"></a>  CReBarCtrl::MoveBand  \n Implements the behavior of the Win32 message [RB_MOVEBAND](http://msdn.microsoft.com/library/windows/desktop/bb774504), as described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n```  \nBOOL MoveBand(\n    UINT uFrom,  \n    UINT uTo);\n```  \n  \n### Parameters  \n *uFrom*  \n Zero-based index of the band to be moved.  \n  \n *uTo*  \n Zero-based index of the new band position. This parameter value must never be greater than the number of bands minus one. To obtain the number of bands, call [GetBandCount](#crebarctrl__getbandcount).  \n  \n### Return Value  \n Nonzero if successful; otherwise zero.  \n  \n##  <a name=\"crebarctrl__pushchevron\"></a>  CReBarCtrl::PushChevron  \n Implements the behavior of the Win32 message [RB_PUSHCHEVRON](http://msdn.microsoft.com/library/windows/desktop/bb774506), as described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n```  \nvoid PushChevron(\n    UINT uBand,  \n    LPARAM lAppValue);\n```  \n  \n### Parameters  \n `uBand`  \n Zero-based index of the band whose chevron is to be pushed.  \n  \n `lAppValue`  \n An application defined 32-bit value. See `lAppValue` in [RB_PUSHCHEVRON](http://msdn.microsoft.com/library/windows/desktop/bb774506) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n##  <a name=\"crebarctrl__restoreband\"></a>  CReBarCtrl::RestoreBand  \n Resizes a band in a rebar control to its ideal size.  \n  \n```  \nvoid RestoreBand(UINT uBand);\n```  \n  \n### Parameters  \n `uBand`  \n Zero-based index of the band to be maximized.  \n  \n### Remarks  \n Implements the behavior of the Win32 message [RB_MAXIMIZEBAND](http://msdn.microsoft.com/library/windows/desktop/bb774500) with `fIdeal` set to 1, as described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n### Example  \n [!code-cpp[NVC_MFC_CReBarCtrl#12](../../mfc/reference/codesnippet/cpp/crebarctrl-class_10.cpp)]  \n  \n##  <a name=\"crebarctrl__setbandinfo\"></a>  CReBarCtrl::SetBandInfo  \n Implements the behavior of the Win32 message [RB_SETBANDINFO](http://msdn.microsoft.com/library/windows/desktop/bb774508), as described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n```  \nBOOL SetBandInfo(\n    UINT uBand,  \n    REBARBANDINFO* prbbi);\n```  \n  \n### Parameters  \n `uBand`  \n Zero-based index of the band to receive the new settings.  \n  \n `prbbi`  \n Pointer to a [REBARBANDINFO](http://msdn.microsoft.com/library/windows/desktop/bb774393) structure that defines the band to be inserted. You must set the `cbSize` member of this structure to `sizeof(REBARBANDINFO)` before sending this message.  \n  \n### Return Value  \n Nonzero if successful; otherwise zero.  \n  \n### Example  \n [!code-cpp[NVC_MFC_CReBarCtrl#13](../../mfc/reference/codesnippet/cpp/crebarctrl-class_11.cpp)]  \n  \n##  <a name=\"crebarctrl__setbandwidth\"></a>  CReBarCtrl::SetBandWidth  \n Sets the width of the specified docked band in the current rebar control.  \n  \n```  \nBOOL SetBandWidth(\n    UINT uBand,   \n    int cxWidth);\n```  \n  \n### Parameters  \n  \n|Parameter|Description|  \n|---------------|-----------------|  \n|[in] `uBand`|Zero-based index of a rebar band.|  \n|[in] `cxWidth`|New width of the rebar band, in pixels.|  \n  \n### Return Value  \n `true` if the method is successful; otherwise, `false`.  \n  \n### Remarks  \n This method sends the [RB_SETBANDWIDTH](http://msdn.microsoft.com/library/windows/desktop/bb774511) message, which is described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n### Example  \n The following code example defines the variable, `m_rebar`, that is used to access the current rebar control. This variable is used in the next example.  \n  \n [!code-cpp[NVC_MFC_CReBarCtrl_s1#1](../../mfc/reference/codesnippet/cpp/crebarctrl-class_12.h)]  \n  \n### Example  \n The following code example sets each rebar band to be the same width.  \n  \n [!code-cpp[NVC_MFC_CReBarCtrl_s1#2](../../mfc/reference/codesnippet/cpp/crebarctrl-class_13.cpp)]  \n  \n##  <a name=\"crebarctrl__setbarinfo\"></a>  CReBarCtrl::SetBarInfo  \n Implements the behavior of the Win32 message [RB_SETBARINFO](http://msdn.microsoft.com/library/windows/desktop/bb774513), as described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n```  \nBOOL SetBarInfo(REBARINFO* prbi);\n```  \n  \n### Parameters  \n `prbi`  \n A pointer to a [REBARINFO](http://msdn.microsoft.com/library/windows/desktop/bb774395) structure that contains the information to be set. You must set the `cbSize` member of this structure to `sizeof(REBARINFO)` before sending this message  \n  \n### Return Value  \n Nonzero if successful; otherwise zero.  \n  \n### Example  \n [!code-cpp[NVC_MFC_CReBarCtrl#14](../../mfc/reference/codesnippet/cpp/crebarctrl-class_14.cpp)]  \n  \n##  <a name=\"crebarctrl__setbkcolor\"></a>  CReBarCtrl::SetBkColor  \n Implements the behavior of the Win32 message [RB_SETBKCOLOR](http://msdn.microsoft.com/library/windows/desktop/bb774515), as described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n```  \nCOLORREF SetBkColor(COLORREF clr);\n```  \n  \n### Parameters  \n `clr`  \n The **COLORREF** value that represents the new default background color.  \n  \n### Return Value  \n A [COLORREF](http://msdn.microsoft.com/library/windows/desktop/dd183449) value that represents the previous default background color.  \n  \n### Remarks  \n See this topic for more information about when to set the background color, and how to set the default.  \n  \n##  <a name=\"crebarctrl__setcolorscheme\"></a>  CReBarCtrl::SetColorScheme  \n Sets the color scheme for the buttons on a rebar control.  \n  \n```  \nvoid SetColorScheme(const COLORSCHEME* lpcs);\n```  \n  \n### Parameters  \n `lpcs`  \n A pointer to a [COLORSCHEME](http://msdn.microsoft.com/library/windows/desktop/bb775502) structure, as described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n### Remarks  \n The **COLORSCHEME** structure includes both the button highlight color and the button shadow color.  \n  \n##  <a name=\"crebarctrl__setextendedstyle\"></a>  CReBarCtrl::SetExtendedStyle  \n Sets the extended styles for the current rebar control.  \n  \n```  \nDWORD SetExtendedStyle(\n    DWORD dwMask,   \n    DWORD dwStyleEx);\n```  \n  \n### Parameters  \n  \n|Parameter|Description|  \n|---------------|-----------------|  \n|[in] `dwMask`|A bitwise combination (OR) of flags that specify which flags in the `dwStyleEx` parameter apply. Use one or more of the following values:<br /><br /> RBS_EX_SPLITTER: By default, show the splitter on the bottom in horizontal mode, and to the right in vertical mode.<br /><br /> RBS_EX_TRANSPARENT: Forward the [WM_ERASEBKGND](http://msdn.microsoft.com/library/windows/desktop/ms648055) message to the parent window.|  \n|[in] `dwStyleEx`|A bitwise combination (OR) of flags that specify the styles to apply. To set a style, specify the same flag that is used in the `dwMask` parameter. To reset a style, specify binary zero.|  \n  \n### Return Value  \n The previous extended style.  \n  \n### Remarks  \n This method sends the [RB_SETEXTENDEDSTYLE](http://msdn.microsoft.com/library/windows/desktop/bb774519) message, which is described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n##  <a name=\"crebarctrl__setimagelist\"></a>  CReBarCtrl::SetImageList  \n Assigns an image list to a rebar control.  \n  \n```  \nBOOL SetImageList(CImageList* pImageList);\n```  \n  \n### Parameters  \n `pImageList`  \n A pointer to a [CImageList](../../mfc/reference/cimagelist-class.md) object containing the image list to be assigned to the rebar control.  \n  \n### Return Value  \n Nonzero if successful; otherwise zero.  \n  \n##  <a name=\"crebarctrl__setowner\"></a>  CReBarCtrl::SetOwner  \n Implements the behavior of the Win32 message [RB_SETPARENT](http://msdn.microsoft.com/library/windows/desktop/bb774522), as described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n```  \nCWnd* SetOwner(CWnd* pWnd);\n```  \n  \n### Parameters  \n `pWnd`  \n A pointer to a `CWnd` object to set as the owner of the rebar control.  \n  \n### Return Value  \n A pointer to a [CWnd](../../mfc/reference/cwnd-class.md) object that is the current owner of the rebar control.  \n  \n### Remarks  \n Note that this member function uses pointers to `CWnd` objects for both the current and selected owner of the rebar control, rather than handles to windows.  \n  \n> [!NOTE]\n>  This member function does not change the actual parent that was set when the control was created; rather it sends notification messages to the window you specify.  \n  \n##  <a name=\"crebarctrl__setpalette\"></a>  CReBarCtrl::SetPalette  \n Implements the behavior of the Win32 message [RB_SETPALETTE](http://msdn.microsoft.com/library/windows/desktop/bb774520), as described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n```  \nCPalette* SetPalette(HPALETTE hPal);\n```  \n  \n### Parameters  \n *hPal*  \n An `HPALETTE` that specifies the new palette that the rebar control will use.  \n  \n### Return Value  \n A pointer to a [CPalette](../../mfc/reference/cpalette-class.md) object specifying the rebar control's previous palette.  \n  \n### Remarks  \n Note that this member function uses a `CPalette` object as its return value, rather than an `HPALETTE`.  \n  \n##  <a name=\"crebarctrl__settextcolor\"></a>  CReBarCtrl::SetTextColor  \n Implements the behavior of the Win32 message [RB_SETTEXTCOLOR](http://msdn.microsoft.com/library/windows/desktop/bb774524), as described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n```  \nCOLORREF SetTextColor(COLORREF clr);\n```  \n  \n### Parameters  \n `clr`  \n A **COLORREF** value that represents the new text color in the `CReBarCtrl` object.  \n  \n### Return Value  \n The [COLORREF](http://msdn.microsoft.com/library/windows/desktop/dd183449) value representing the previous text color associated with the `CReBarCtrl` object.  \n  \n### Remarks  \n It is provided to support text color flexibility in a rebar control.  \n  \n##  <a name=\"crebarctrl__settooltips\"></a>  CReBarCtrl::SetToolTips  \n Associates a tool tip control with a rebar control.  \n  \n```  \nvoid SetToolTips(CToolTipCtrl* pToolTip);\n```  \n  \n### Parameters  \n *pToolTip*  \n A pointer to a [CToolTipCtrl](../../mfc/reference/ctooltipctrl-class.md) object  \n  \n### Remarks  \n You must destroy the `CToolTipCtrl` object when you are done with it.  \n  \n##  <a name=\"crebarctrl__setwindowtheme\"></a>  CReBarCtrl::SetWindowTheme  \n Sets the visual style of the rebar control.  \n  \n```  \nHRESULT SetWindowTheme(LPCWSTR pszSubAppName);\n```  \n  \n### Parameters  \n `pszSubAppName`  \n A pointer to a Unicode string that contains the rebar visual style to set.  \n  \n### Return Value  \n The return value is not used.  \n  \n### Remarks  \n This member function emulates the functionality of the [RB_SETWINDOWTHEME](http://msdn.microsoft.com/library/windows/desktop/bb774530) message, as described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n##  <a name=\"crebarctrl__showband\"></a>  CReBarCtrl::ShowBand  \n Implements the behavior of the Win32 message [RB_SHOWBAND](http://msdn.microsoft.com/library/windows/desktop/bb774532), as described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n```  \nBOOL ShowBand(\n    UINT uBand,  \n    BOOL fShow = TRUE);\n```  \n  \n### Parameters  \n `uBand`  \n Zero-based index of a band in the rebar control.  \n  \n *fShow*  \n Indicates if the band should be shown or hidden. If this value is **TRUE**, the band will be shown. Otherwise, the band will be hidden.  \n  \n### Return Value  \n Nonzero if successful; otherwise zero.  \n  \n##  <a name=\"crebarctrl__sizetorect\"></a>  CReBarCtrl::SizeToRect  \n Implements the behavior of the Win32 message [RB_SIZETORECT](http://msdn.microsoft.com/library/windows/desktop/bb774534), as described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n```  \nBOOL SizeToRect(CRect& rect);\n```  \n  \n### Parameters  \n `rect`  \n A reference to a [CRect](../../atl-mfc-shared/reference/crect-class.md) object that specifies the rectangle that the rebar control should be sized to.  \n  \n### Return Value  \n Nonzero if successful; otherwise zero.  \n  \n### Remarks  \n Note that this member function uses a `CRect` object as a parameter, rather than a `RECT` structure.  \n  \n## See Also  \n [CWnd Class](../../mfc/reference/cwnd-class.md)   \n [Hierarchy Chart](../../mfc/hierarchy-chart.md)\n\n\n"}