{"nodes":[{"pos":[12,49],"content":"Compiler Error C3203 | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Compiler Error C3203 | Microsoft Docs","pos":[0,37]}]},{"content":"Compiler Error C3203","pos":[598,618]},{"content":"'type' : unspecialized class template or generic can't be used as a template or generic argument for template or generic parameter 'param', expected a real type","pos":[619,779]},{"content":"You passed an invalid argument to a class template or generic.","pos":[786,848]},{"content":"The class template or generic expects a type as a parameter.","pos":[849,909]},{"content":"This error can be generated as a result of compiler conformance work that was done for Visual C++ 2005: an unspecialized class template can't be used as a template argument in a base class list.","pos":[916,1110]},{"content":"To resolve C3203, explicitly add the template type parameter(s) to the template class name when using it as a template parameter in a base class list.","pos":[1111,1261]},{"content":"The following sample generates C3203 and shows how to fix it:","pos":[1555,1616]},{"content":"C3203 can also occur when using generics:","pos":[1952,1993]}],"content":"---\ntitle: \"Compiler Error C3203 | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"error-reference\"\nf1_keywords: \n  - \"C3203\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"C3203\"\nms.assetid: 6356770e-22c1-434c-91fe-f60b0aa23b91\ncaps.latest.revision: 12\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Compiler Error C3203\n'type' : unspecialized class template or generic can't be used as a template or generic argument for template or generic parameter 'param', expected a real type  \n  \n You passed an invalid argument to a class template or generic. The class template or generic expects a type as a parameter.  \n  \n This error can be generated as a result of compiler conformance work that was done for Visual C++ 2005: an unspecialized class template can't be used as a template argument in a base class list. To resolve C3203, explicitly add the template type parameter(s) to the template class name when using it as a template parameter in a base class list.  \n  \n```  \n// C3203.cpp  \ntemplate< typename T >  \nstruct X {  \n   void f(X) {}  \n};  \n  \ntemplate< typename T >  \nstruct Y : public X<Y> {   // C3203  \n// try the following line instead  \n// struct Y : public X<Y<T> > {  \n   void f(Y) {}  \n};  \n  \nint main() {  \n   Y<int> y;  \n}  \n```  \n  \n The following sample generates C3203 and shows how to fix it:  \n  \n```  \n// C3203_b.cpp  \n// compile with: /c  \ntemplate <class T>  \nstruct S1 {};  \n  \ntemplate <class T>  \nclass C1 {};  \n  \ntypedef C1<S1> MyC1;   // C3203  \n  \n// OK  \ntemplate <template <class> class T>  \nclass C2 {};  \n  \ntypedef C2<S1> MyC1;  \n  \ntemplate <class T>  \nclass C3 {};  \n  \ntypedef C3<S1<int> > MyC12;  \n```  \n  \n C3203 can also occur when using generics:  \n  \n```  \n// C3203_c.cpp  \n// compile with: /clr /c  \ngeneric <class T>  \nvalue struct GS1 {};  \n  \ngeneric <class T>  \nvalue struct GC1 {};  \n  \ntypedef GC1<GS1> MyGC1;   // C3203  \ntypedef GC1<GS1<int> > MyGC2;   // OK  \n```"}