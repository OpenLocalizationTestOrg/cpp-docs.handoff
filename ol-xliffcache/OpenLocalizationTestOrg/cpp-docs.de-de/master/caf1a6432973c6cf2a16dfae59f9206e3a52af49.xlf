<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-04506c2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">caf1a6432973c6cf2a16dfae59f9206e3a52af49</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\c-language\trigraphs.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0d5450fa2495bac5bf7435dcd03945d4fe193b13</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4f7f76afc2553042f34cb6c9868502b529fa8632</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Trigraphs | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Trigraphs</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The source character set of C source programs is contained within the 7-bit ASCII character set but is a superset of the ISO 646-1983 Invariant Code Set.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Trigraph sequences allow C programs to be written using only the ISO (International Standards Organization) Invariant Code Set.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Trigraphs are sequences of three characters (introduced by two consecutive question marks) that the compiler replaces with their corresponding punctuation characters.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>You can use trigraphs in C source files with a character set that does not contain convenient graphic representations for some punctuation characters.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>C++17 removes trigraphs from the language.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Implementations may continue to support trigraphs as part of the  implementation-defined mapping from the physical source file to the <bpt id="p1">*</bpt>basic source character set<ept id="p1">*</ept>, though the standard encourages implementations not to do so.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Through C++14, trigraphs are supported as in C.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Visual C++  continues to support trigraph substitution, but it's disabled by default.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>For information on how to enable trigraph substitution, see <bpt id="p1">[</bpt>/Zc:trigraphs (Trigraphs Substitution)<ept id="p1">](../build/reference/zc-trigraphs-trigraphs-substitution.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The following table shows the nine trigraph sequences.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>All occurrences in a source file of the punctuation characters in the first column are replaced with the corresponding character in the second column.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Trigraph Sequences</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Trigraph</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Punctuation Character</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>??=</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>??(</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>[</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>??/</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>??)</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>]</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>??'</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>??</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>{</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>??!</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>&amp;#124;</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>??&gt;</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>}</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>??-</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>A trigraph is always treated as a single source character.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The translation of trigraphs takes place in the first <bpt id="p1">[</bpt>translation phase<ept id="p1">](../preprocessor/phases-of-translation.md)</ept>, before the recognition of escape characters in string literals and character constants.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Only the nine trigraphs shown in the above table are recognized.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>All other character sequences are left untranslated.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The character escape sequence, <bpt id="p1">**</bpt><ph id="ph1">\\</ph>?<ept id="p1">**</ept>, prevents the misinterpretation of trigraph-like character sequences.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>(For information about escape sequences, see <bpt id="p1">[</bpt>Escape Sequences<ept id="p1">](../c-language/escape-sequences.md)</ept>.) For example, if you attempt to print the string <ph id="ph1">`What??!`</ph> with this <ph id="ph2">`printf`</ph> statement</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>the string printed is <ph id="ph1">`What|`</ph> because <ph id="ph2">`??!`</ph> is a trigraph sequence that is replaced with the <ph id="ph3">`|`</ph> character.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Write the statement as follows to correctly print the string:</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>In this <ph id="ph1">`printf`</ph> statement, a backslash escape character in front of the second question mark prevents the misinterpretation of <ph id="ph2">`??!`</ph> as a trigraph.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>/Zc:trigraphs (Trigraphs Substitution)</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>C Identifiers</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>