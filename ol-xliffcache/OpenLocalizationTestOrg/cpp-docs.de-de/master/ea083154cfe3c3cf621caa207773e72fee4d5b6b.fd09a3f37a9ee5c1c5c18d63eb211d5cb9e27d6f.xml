{"nodes":[{"pos":[12,48],"content":"CMFCTasksPane Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"CMFCTasksPane Class | Microsoft Docs","pos":[0,36]}]},{"pos":[613,632],"content":"CMFCTasksPane Class","linkify":"CMFCTasksPane Class","nodes":[{"content":"CMFCTasksPane Class","pos":[0,19]}]},{"pos":[739,810],"content":"The <ph id=\"ph1\">`CMFCTasksPane`</ph> class implements a list of clickable items (tasks).","source":"The `CMFCTasksPane` class implements a list of clickable items (tasks)."},{"pos":[819,825],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[894,901],"content":"Members","linkify":"Members","nodes":[{"content":"Members","pos":[0,7]}]},{"pos":[911,930],"content":"Public Constructors","linkify":"Public Constructors","nodes":[{"content":"Public Constructors","pos":[0,19]}]},{"content":"Name","pos":[937,941]},{"content":"Description","pos":[942,953]},{"pos":[991,1052],"content":"<bpt id=\"p1\">[</bpt>CMFCTasksPane::CMFCTasksPane<ept id=\"p1\">](#cmfctaskspane__cmfctaskspane)</ept>","source":"[CMFCTasksPane::CMFCTasksPane](#cmfctaskspane__cmfctaskspane)"},{"pos":[1053,1089],"content":"Constructs a <ph id=\"ph1\">`CMFCTasksPane`</ph> object.","source":"Constructs a `CMFCTasksPane` object."},{"pos":[1100,1114],"content":"Public Methods","linkify":"Public Methods","nodes":[{"content":"Public Methods","pos":[0,14]}]},{"content":"Name","pos":[1121,1125]},{"content":"Description","pos":[1126,1137]},{"pos":[1175,1226],"content":"<bpt id=\"p1\">[</bpt>CMFCTasksPane::AddGroup<ept id=\"p1\">](#cmfctaskspane__addgroup)</ept>","source":"[CMFCTasksPane::AddGroup](#cmfctaskspane__addgroup)"},{"content":"Adds a new group of tasks to the task pane control.","pos":[1227,1278]},{"pos":[1283,1334],"content":"<bpt id=\"p1\">[</bpt>CMFCTasksPane::AddLabel<ept id=\"p1\">](#cmfctaskspane__addlabel)</ept>","source":"[CMFCTasksPane::AddLabel](#cmfctaskspane__addlabel)"},{"content":"Adds a new static label into the specified task group.","pos":[1335,1389]},{"pos":[1394,1459],"content":"<bpt id=\"p1\">[</bpt>CMFCTasksPane::AddMRUFilesList<ept id=\"p1\">](#cmfctaskspane__addmrufileslist)</ept>","source":"[CMFCTasksPane::AddMRUFilesList](#cmfctaskspane__addmrufileslist)"},{"content":"Adds tasks specified by a Most Recently Used (MRU) file list into a group.","pos":[1460,1534]},{"pos":[1539,1588],"content":"<bpt id=\"p1\">[</bpt>CMFCTasksPane::AddPage<ept id=\"p1\">](#cmfctaskspane__addpage)</ept>","source":"[CMFCTasksPane::AddPage](#cmfctaskspane__addpage)"},{"content":"Adds a new page to the task pane.","pos":[1589,1622]},{"pos":[1627,1686],"content":"<bpt id=\"p1\">[</bpt>CMFCTasksPane::AddSeparator<ept id=\"p1\">](#cmfctaskspane__addseparator)</ept>","source":"[CMFCTasksPane::AddSeparator](#cmfctaskspane__addseparator)"},{"pos":[1692,1741],"content":"<bpt id=\"p1\">[</bpt>CMFCTasksPane::AddTask<ept id=\"p1\">](#cmfctaskspane__addtask)</ept>","source":"[CMFCTasksPane::AddTask](#cmfctaskspane__addtask)"},{"content":"Adds a new task to the specified task group.","pos":[1742,1786]},{"pos":[1791,1844],"content":"<bpt id=\"p1\">[</bpt>CMFCTasksPane::AddWindow<ept id=\"p1\">](#cmfctaskspane__addwindow)</ept>","source":"[CMFCTasksPane::AddWindow](#cmfctaskspane__addwindow)"},{"content":"Adds a child window to the task pane.","pos":[1845,1882]},{"pos":[1887,1956],"content":"<bpt id=\"p1\">[</bpt>CMFCTasksPane::CollapseAllGroups<ept id=\"p1\">](#cmfctaskspane__collapseallgroups)</ept>","source":"[CMFCTasksPane::CollapseAllGroups](#cmfctaskspane__collapseallgroups)"},{"pos":[1962,2023],"content":"<bpt id=\"p1\">[</bpt>CMFCTasksPane::CollapseGroup<ept id=\"p1\">](#cmfctaskspane__collapsegroup)</ept>","source":"[CMFCTasksPane::CollapseGroup](#cmfctaskspane__collapsegroup)"},{"content":"Programmatically collapses a group.","pos":[2024,2059]},{"pos":[2064,2143],"content":"<bpt id=\"p1\">[</bpt>CMFCTasksPane::CreateDefaultMiniframe<ept id=\"p1\">](#cmfctaskspane__createdefaultminiframe)</ept>","source":"[CMFCTasksPane::CreateDefaultMiniframe](#cmfctaskspane__createdefaultminiframe)"},{"pos":[2144,2254],"content":"(Overrides <bpt id=\"p1\">[</bpt>CPane::CreateDefaultMiniframe<ept id=\"p1\">](../../mfc/reference/cpane-class.md#cpane__createdefaultminiframe)</ept>.)","source":"(Overrides [CPane::CreateDefaultMiniframe](../../mfc/reference/cpane-class.md#cpane__createdefaultminiframe).)"},{"pos":[2259,2314],"content":"<bpt id=\"p1\">[</bpt>CMFCTasksPane::CreateMenu<ept id=\"p1\">](#cmfctaskspane__createmenu)</ept>","source":"[CMFCTasksPane::CreateMenu](#cmfctaskspane__createmenu)"},{"pos":[2315,2398],"content":"Called by the framework to create a menu for the <bpt id=\"p1\">**</bpt>Other Tasks Panes<ept id=\"p1\">**</ept> menu button.","source":"Called by the framework to create a menu for the **Other Tasks Panes** menu button."},{"pos":[2403,2468],"content":"<bpt id=\"p1\">[</bpt>CMFCTasksPane::EnableAnimation<ept id=\"p1\">](#cmfctaskspane__enableanimation)</ept>","source":"[CMFCTasksPane::EnableAnimation](#cmfctaskspane__enableanimation)"},{"content":"Enables or disables animation while collapsing or expanding task groups.","pos":[2469,2541]},{"pos":[2546,2619],"content":"<bpt id=\"p1\">[</bpt>CMFCTasksPane::EnableGroupCollapse<ept id=\"p1\">](#cmfctaskspane__enablegroupcollapse)</ept>","source":"[CMFCTasksPane::EnableGroupCollapse](#cmfctaskspane__enablegroupcollapse)"},{"content":"Specifies whether tasks groups can be collapsed.","pos":[2620,2668]},{"pos":[2673,2756],"content":"<bpt id=\"p1\">[</bpt>CMFCTasksPane::EnableHistoryMenuButtons<ept id=\"p1\">](#cmfctaskspane__enablehistorymenubuttons)</ept>","source":"[CMFCTasksPane::EnableHistoryMenuButtons](#cmfctaskspane__enablehistorymenubuttons)"},{"pos":[2757,2841],"content":"Enables or disables drop-down menus in <bpt id=\"p1\">**</bpt>Next<ept id=\"p1\">**</ept> and <bpt id=\"p2\">**</bpt>Previous<ept id=\"p2\">**</ept> navigation buttons.","source":"Enables or disables drop-down menus in **Next** and **Previous** navigation buttons."},{"pos":[2846,2927],"content":"<bpt id=\"p1\">[</bpt>CMFCTasksPane::EnableNavigationToolbar<ept id=\"p1\">](#cmfctaskspane__enablenavigationtoolbar)</ept>","source":"[CMFCTasksPane::EnableNavigationToolbar](#cmfctaskspane__enablenavigationtoolbar)"},{"content":"Enables or disables the navigation toolbar.","pos":[2928,2971]},{"pos":[2976,3063],"content":"<bpt id=\"p1\">[</bpt>CMFCTasksPane::EnableOffsetCustomControls<ept id=\"p1\">](#cmfctaskspane__enableoffsetcustomcontrols)</ept>","source":"[CMFCTasksPane::EnableOffsetCustomControls](#cmfctaskspane__enableoffsetcustomcontrols)"},{"pos":[3069,3142],"content":"<bpt id=\"p1\">[</bpt>CMFCTasksPane::EnableScrollButtons<ept id=\"p1\">](#cmfctaskspane__enablescrollbuttons)</ept>","source":"[CMFCTasksPane::EnableScrollButtons](#cmfctaskspane__enablescrollbuttons)"},{"content":"Enables scroll buttons instead of a scrollbar.","pos":[3143,3189]},{"pos":[3194,3261],"content":"<bpt id=\"p1\">[</bpt>CMFCTasksPane::EnableWrapLabels<ept id=\"p1\">](#cmfctaskspane__enablewraplabels)</ept>","source":"[CMFCTasksPane::EnableWrapLabels](#cmfctaskspane__enablewraplabels)"},{"content":"Enables or disables word wrapping for labels.","pos":[3262,3307]},{"pos":[3312,3377],"content":"<bpt id=\"p1\">[</bpt>CMFCTasksPane::EnableWrapTasks<ept id=\"p1\">](#cmfctaskspane__enablewraptasks)</ept>","source":"[CMFCTasksPane::EnableWrapTasks](#cmfctaskspane__enablewraptasks)"},{"content":"Enables or disables word wrapping for tasks.","pos":[3378,3422]},{"pos":[3427,3488],"content":"<bpt id=\"p1\">[</bpt>CMFCTasksPane::GetActivePage<ept id=\"p1\">](#cmfctaskspane__getactivepage)</ept>","source":"[CMFCTasksPane::GetActivePage](#cmfctaskspane__getactivepage)"},{"content":"Returns the zero-based index for the active page.","pos":[3489,3538]},{"pos":[3543,3620],"content":"<bpt id=\"p1\">[</bpt>CMFCTasksPane::GetGroupCaptionHeight<ept id=\"p1\">](#cmfctaskspane__getgroupcaptionheight)</ept>","source":"[CMFCTasksPane::GetGroupCaptionHeight](#cmfctaskspane__getgroupcaptionheight)"},{"content":"Returns the height of the group captions.","pos":[3621,3662]},{"pos":[3667,3752],"content":"<bpt id=\"p1\">[</bpt>CMFCTasksPane::GetGroupCaptionHorzOffset<ept id=\"p1\">](#cmfctaskspane__getgroupcaptionhorzoffset)</ept>","source":"[CMFCTasksPane::GetGroupCaptionHorzOffset](#cmfctaskspane__getgroupcaptionhorzoffset)"},{"content":"Returns the current offset of a group caption from the left and right edges of the task pane.","pos":[3753,3846]},{"pos":[3851,3936],"content":"<bpt id=\"p1\">[</bpt>CMFCTasksPane::GetGroupCaptionVertOffset<ept id=\"p1\">](#cmfctaskspane__getgroupcaptionvertoffset)</ept>","source":"[CMFCTasksPane::GetGroupCaptionVertOffset](#cmfctaskspane__getgroupcaptionvertoffset)"},{"content":"Returns the current offset of a group caption from the top and bottom edges of the task pane.","pos":[3937,4030]},{"pos":[4035,4096],"content":"<bpt id=\"p1\">[</bpt>CMFCTasksPane::GetGroupCount<ept id=\"p1\">](#cmfctaskspane__getgroupcount)</ept>","source":"[CMFCTasksPane::GetGroupCount](#cmfctaskspane__getgroupcount)"},{"content":"Returns the total number of groups.","pos":[4097,4132]},{"pos":[4137,4204],"content":"<bpt id=\"p1\">[</bpt>CMFCTasksPane::GetGroupLocation<ept id=\"p1\">](#cmfctaskspane__getgrouplocation)</ept>","source":"[CMFCTasksPane::GetGroupLocation](#cmfctaskspane__getgrouplocation)"},{"content":"Returns the internal group index for a given group.","pos":[4205,4256]},{"pos":[4261,4332],"content":"<bpt id=\"p1\">[</bpt>CMFCTasksPane::GetGroupVertOffset<ept id=\"p1\">](#cmfctaskspane__getgroupvertoffset)</ept>","source":"[CMFCTasksPane::GetGroupVertOffset](#cmfctaskspane__getgroupvertoffset)"},{"content":"Returns the vertical offset of a group.","pos":[4333,4372]},{"pos":[4377,4438],"content":"<bpt id=\"p1\">[</bpt>CMFCTasksPane::GetHorzMargin<ept id=\"p1\">](#cmfctaskspane__gethorzmargin)</ept>","source":"[CMFCTasksPane::GetHorzMargin](#cmfctaskspane__gethorzmargin)"},{"content":"Returns the horizontal spacing between a task pane and the edges of the client area.","pos":[4439,4523]},{"pos":[4528,4587],"content":"<bpt id=\"p1\">[</bpt>CMFCTasksPane::GetNextPages<ept id=\"p1\">](#cmfctaskspane__getnextpages)</ept>","source":"[CMFCTasksPane::GetNextPages](#cmfctaskspane__getnextpages)"},{"pos":[4593,4656],"content":"<bpt id=\"p1\">[</bpt>CMFCTasksPane::GetPageByGroup<ept id=\"p1\">](#cmfctaskspane__getpagebygroup)</ept>","source":"[CMFCTasksPane::GetPageByGroup](#cmfctaskspane__getpagebygroup)"},{"content":"Retrieves the page index for a specified group.","pos":[4657,4704]},{"pos":[4709,4770],"content":"<bpt id=\"p1\">[</bpt>CMFCTasksPane::GetPagesCount<ept id=\"p1\">](#cmfctaskspane__getpagescount)</ept>","source":"[CMFCTasksPane::GetPagesCount](#cmfctaskspane__getpagescount)"},{"content":"Returns the number of pages.","pos":[4771,4799]},{"pos":[4804,4871],"content":"<bpt id=\"p1\">[</bpt>CMFCTasksPane::GetPreviousPages<ept id=\"p1\">](#cmfctaskspane__getpreviouspages)</ept>","source":"[CMFCTasksPane::GetPreviousPages](#cmfctaskspane__getpreviouspages)"},{"pos":[4877,4944],"content":"<bpt id=\"p1\">[</bpt>CMFCTasksPane::GetScrollBarCtrl<ept id=\"p1\">](#cmfctaskspane__getscrollbarctrl)</ept>","source":"[CMFCTasksPane::GetScrollBarCtrl](#cmfctaskspane__getscrollbarctrl)"},{"pos":[4945,5040],"content":"(Overrides <bpt id=\"p1\">[</bpt>CWnd::GetScrollBarCtrl<ept id=\"p1\">](../../mfc/reference/cwnd-class.md#cwnd__getscrollbarctrl)</ept>.)","source":"(Overrides [CWnd::GetScrollBarCtrl](../../mfc/reference/cwnd-class.md#cwnd__getscrollbarctrl).)"},{"pos":[5045,5094],"content":"<bpt id=\"p1\">[</bpt>CMFCTasksPane::GetTask<ept id=\"p1\">](#cmfctaskspane__gettask)</ept>","source":"[CMFCTasksPane::GetTask](#cmfctaskspane__gettask)"},{"content":"Retrieves a task.","pos":[5095,5112]},{"pos":[5117,5176],"content":"<bpt id=\"p1\">[</bpt>CMFCTasksPane::GetTaskCount<ept id=\"p1\">](#cmfctaskspane__gettaskcount)</ept>","source":"[CMFCTasksPane::GetTaskCount](#cmfctaskspane__gettaskcount)"},{"content":"Returns the number of task items in a specified group.","pos":[5177,5231]},{"pos":[5236,5295],"content":"<bpt id=\"p1\">[</bpt>CMFCTasksPane::GetTaskGroup<ept id=\"p1\">](#cmfctaskspane__gettaskgroup)</ept>","source":"[CMFCTasksPane::GetTaskGroup](#cmfctaskspane__gettaskgroup)"},{"content":"Returns a task group for a given group index.","pos":[5296,5341]},{"pos":[5346,5411],"content":"<bpt id=\"p1\">[</bpt>CMFCTasksPane::GetTaskLocation<ept id=\"p1\">](#cmfctaskspane__gettasklocation)</ept>","source":"[CMFCTasksPane::GetTaskLocation](#cmfctaskspane__gettasklocation)"},{"content":"Returns the group and the index for a given task.","pos":[5412,5461]},{"pos":[5466,5537],"content":"<bpt id=\"p1\">[</bpt>CMFCTasksPane::GetTasksHorzOffset<ept id=\"p1\">](#cmfctaskspane__gettaskshorzoffset)</ept>","source":"[CMFCTasksPane::GetTasksHorzOffset](#cmfctaskspane__gettaskshorzoffset)"},{"content":"Returns the horizontal offset of tasks from the left and right edges of their parent groups.","pos":[5538,5630]},{"pos":[5635,5714],"content":"<bpt id=\"p1\">[</bpt>CMFCTasksPane::GetTasksIconHorzOffset<ept id=\"p1\">](#cmfctaskspane__gettasksiconhorzoffset)</ept>","source":"[CMFCTasksPane::GetTasksIconHorzOffset](#cmfctaskspane__gettasksiconhorzoffset)"},{"pos":[5720,5799],"content":"<bpt id=\"p1\">[</bpt>CMFCTasksPane::GetTasksIconVertOffset<ept id=\"p1\">](#cmfctaskspane__gettasksiconvertoffset)</ept>","source":"[CMFCTasksPane::GetTasksIconVertOffset](#cmfctaskspane__gettasksiconvertoffset)"},{"pos":[5805,5866],"content":"<bpt id=\"p1\">[</bpt>CMFCTasksPane::GetVertMargin<ept id=\"p1\">](#cmfctaskspane__getvertmargin)</ept>","source":"[CMFCTasksPane::GetVertMargin](#cmfctaskspane__getvertmargin)"},{"content":"Returns the vertical spacing between a task pane and the edges of the client area.","pos":[5867,5949]},{"pos":[5954,6039],"content":"<bpt id=\"p1\">[</bpt>CMFCTasksPane::IsAccessibilityCompatible<ept id=\"p1\">](#cmfctaskspane__isaccessibilitycompatible)</ept>","source":"[CMFCTasksPane::IsAccessibilityCompatible](#cmfctaskspane__isaccessibilitycompatible)"},{"pos":[6040,6095],"content":"(Overrides <ph id=\"ph1\">`CDockablePane::IsAccessibilityCompatible`</ph>.)","source":"(Overrides `CDockablePane::IsAccessibilityCompatible`.)"},{"pos":[6100,6171],"content":"<bpt id=\"p1\">[</bpt>CMFCTasksPane::IsAnimationEnabled<ept id=\"p1\">](#cmfctaskspane__isanimationenabled)</ept>","source":"[CMFCTasksPane::IsAnimationEnabled](#cmfctaskspane__isanimationenabled)"},{"content":"Indicates whether animation is enabled.","pos":[6172,6211]},{"pos":[6216,6289],"content":"<bpt id=\"p1\">[</bpt>CMFCTasksPane::IsBackButtonEnabled<ept id=\"p1\">](#cmfctaskspane__isbackbuttonenabled)</ept>","source":"[CMFCTasksPane::IsBackButtonEnabled](#cmfctaskspane__isbackbuttonenabled)"},{"content":"Indicates whether the back button is enabled.","pos":[6290,6335]},{"pos":[6340,6419],"content":"<bpt id=\"p1\">[</bpt>CMFCTasksPane::IsForwardButtonEnabled<ept id=\"p1\">](#cmfctaskspane__isforwardbuttonenabled)</ept>","source":"[CMFCTasksPane::IsForwardButtonEnabled](#cmfctaskspane__isforwardbuttonenabled)"},{"content":"Indicates whether the forward button is enabled.","pos":[6420,6468]},{"pos":[6473,6552],"content":"<bpt id=\"p1\">[</bpt>CMFCTasksPane::IsGroupCollapseEnabled<ept id=\"p1\">](#cmfctaskspane__isgroupcollapseenabled)</ept>","source":"[CMFCTasksPane::IsGroupCollapseEnabled](#cmfctaskspane__isgroupcollapseenabled)"},{"pos":[6558,6647],"content":"<bpt id=\"p1\">[</bpt>CMFCTasksPane::IsHistoryMenuButtonsEnabled<ept id=\"p1\">](#cmfctaskspane__ishistorymenubuttonsenabled)</ept>","source":"[CMFCTasksPane::IsHistoryMenuButtonsEnabled](#cmfctaskspane__ishistorymenubuttonsenabled)"},{"pos":[6648,6736],"content":"Indicates whether the <bpt id=\"p1\">**</bpt>Next<ept id=\"p1\">**</ept> and <bpt id=\"p2\">**</bpt>Previous<ept id=\"p2\">**</ept> navigation buttons have drop-down menus.","source":"Indicates whether the **Next** and **Previous** navigation buttons have drop-down menus."},{"pos":[6741,6828],"content":"<bpt id=\"p1\">[</bpt>CMFCTasksPane::IsNavigationToolbarEnabled<ept id=\"p1\">](#cmfctaskspane__isnavigationtoolbarenabled)</ept>","source":"[CMFCTasksPane::IsNavigationToolbarEnabled](#cmfctaskspane__isnavigationtoolbarenabled)"},{"content":"Indicates whether the navigation toolbar is enabled.","pos":[6829,6881]},{"pos":[6886,6939],"content":"<bpt id=\"p1\">[</bpt>CMFCTasksPane::IsToolBox<ept id=\"p1\">](#cmfctaskspane__istoolbox)</ept>","source":"[CMFCTasksPane::IsToolBox](#cmfctaskspane__istoolbox)"},{"pos":[6945,7018],"content":"<bpt id=\"p1\">[</bpt>CMFCTasksPane::IsWrapLabelsEnabled<ept id=\"p1\">](#cmfctaskspane__iswraplabelsenabled)</ept>","source":"[CMFCTasksPane::IsWrapLabelsEnabled](#cmfctaskspane__iswraplabelsenabled)"},{"content":"Indicates whether the task pane wraps words in labels.","pos":[7019,7073]},{"pos":[7078,7149],"content":"<bpt id=\"p1\">[</bpt>CMFCTasksPane::IsWrapTasksEnabled<ept id=\"p1\">](#cmfctaskspane__iswraptasksenabled)</ept>","source":"[CMFCTasksPane::IsWrapTasksEnabled](#cmfctaskspane__iswraptasksenabled)"},{"content":"Indicates whether the task pane wraps words in tasks.","pos":[7150,7203]},{"pos":[7208,7261],"content":"<bpt id=\"p1\">[</bpt>CMFCTasksPane::LoadState<ept id=\"p1\">](#cmfctaskspane__loadstate)</ept>","source":"[CMFCTasksPane::LoadState](#cmfctaskspane__loadstate)"},{"pos":[7262,7371],"content":"(Overrides <bpt id=\"p1\">[</bpt>CDockablePane::LoadState<ept id=\"p1\">](http://msdn.microsoft.com/en-us/96110136-4f46-4764-8a76-3b4abaf77917)</ept>.)","source":"(Overrides [CDockablePane::LoadState](http://msdn.microsoft.com/en-us/96110136-4f46-4764-8a76-3b4abaf77917).)"},{"pos":[7376,7427],"content":"<bpt id=\"p1\">[</bpt>CMFCTasksPane::OnCancel<ept id=\"p1\">](#cmfctaskspane__oncancel)</ept>","source":"[CMFCTasksPane::OnCancel](#cmfctaskspane__oncancel)"},{"pos":[7433,7490],"content":"<bpt id=\"p1\">[</bpt>CMFCTasksPane::OnClickTask<ept id=\"p1\">](#cmfctaskspane__onclicktask)</ept>","source":"[CMFCTasksPane::OnClickTask](#cmfctaskspane__onclicktask)"},{"content":"Called by the framework when the user clicks an item in the task pane.","pos":[7491,7561]},{"pos":[7566,7609],"content":"<bpt id=\"p1\">[</bpt>CMFCTasksPane::OnOK<ept id=\"p1\">](#cmfctaskspane__onok)</ept>","source":"[CMFCTasksPane::OnOK](#cmfctaskspane__onok)"},{"pos":[7615,7684],"content":"<bpt id=\"p1\">[</bpt>CMFCTasksPane::OnPressBackButton<ept id=\"p1\">](#cmfctaskspane__onpressbackbutton)</ept>","source":"[CMFCTasksPane::OnPressBackButton](#cmfctaskspane__onpressbackbutton)"},{"content":"Called by the framework when the user clicks the back button.","pos":[7685,7746]},{"pos":[7751,7826],"content":"<bpt id=\"p1\">[</bpt>CMFCTasksPane::OnPressForwardButton<ept id=\"p1\">](#cmfctaskspane__onpressforwardbutton)</ept>","source":"[CMFCTasksPane::OnPressForwardButton](#cmfctaskspane__onpressforwardbutton)"},{"content":"Called by the framework when the user clicks the forward navigation button.","pos":[7827,7902]},{"pos":[7907,7976],"content":"<bpt id=\"p1\">[</bpt>CMFCTasksPane::OnPressHomeButton<ept id=\"p1\">](#cmfctaskspane__onpresshomebutton)</ept>","source":"[CMFCTasksPane::OnPressHomeButton](#cmfctaskspane__onpresshomebutton)"},{"content":"Called by the framework when the user clicks the home navigation button","pos":[7977,8048]},{"pos":[8053,8124],"content":"<bpt id=\"p1\">[</bpt>CMFCTasksPane::OnPressOtherButton<ept id=\"p1\">](#cmfctaskspane__onpressotherbutton)</ept>","source":"[CMFCTasksPane::OnPressOtherButton](#cmfctaskspane__onpressotherbutton)"},{"pos":[8130,8189],"content":"<bpt id=\"p1\">[</bpt>CMFCTasksPane::OnSetAccData<ept id=\"p1\">](#cmfctaskspane__onsetaccdata)</ept>","source":"[CMFCTasksPane::OnSetAccData](#cmfctaskspane__onsetaccdata)"},{"pos":[8190,8292],"content":"(Overrides <bpt id=\"p1\">[</bpt>CBasePane::OnSetAccData<ept id=\"p1\">](../../mfc/reference/cbasepane-class.md#cbasepane__onsetaccdata)</ept>.)","source":"(Overrides [CBasePane::OnSetAccData](../../mfc/reference/cbasepane-class.md#cbasepane__onsetaccdata).)"},{"pos":[8297,8358],"content":"<bpt id=\"p1\">[</bpt>CMFCTasksPane::OnUpdateCmdUI<ept id=\"p1\">](#cmfctaskspane__onupdatecmdui)</ept>","source":"[CMFCTasksPane::OnUpdateCmdUI](#cmfctaskspane__onupdatecmdui)"},{"pos":[8359,8472],"content":"(Overrides <bpt id=\"p1\">[</bpt>CDockablePane::OnUpdateCmdUI<ept id=\"p1\">](http://msdn.microsoft.com/en-us/5dd61606-1c12-40d4-b024-f3839aa5e2e0)</ept>.)","source":"(Overrides [CDockablePane::OnUpdateCmdUI](http://msdn.microsoft.com/en-us/5dd61606-1c12-40d4-b024-f3839aa5e2e0).)"},{"pos":[8477,8550],"content":"<bpt id=\"p1\">[</bpt>CMFCTasksPane::PreTranslateMessage<ept id=\"p1\">](#cmfctaskspane__pretranslatemessage)</ept>","source":"[CMFCTasksPane::PreTranslateMessage](#cmfctaskspane__pretranslatemessage)"},{"pos":[8551,8670],"content":"(Overrides <bpt id=\"p1\">[</bpt>CDockablePane::PreTranslateMessage<ept id=\"p1\">](http://msdn.microsoft.com/en-us/49a242cc-b158-400e-9e01-0345ec9c3ffd)</ept>.)","source":"(Overrides [CDockablePane::PreTranslateMessage](http://msdn.microsoft.com/en-us/49a242cc-b158-400e-9e01-0345ec9c3ffd).)"},{"pos":[8675,8734],"content":"<bpt id=\"p1\">[</bpt>CMFCTasksPane::RecalcLayout<ept id=\"p1\">](#cmfctaskspane__recalclayout)</ept>","source":"[CMFCTasksPane::RecalcLayout](#cmfctaskspane__recalclayout)"},{"pos":[8735,8825],"content":"(Overrides <bpt id=\"p1\">[</bpt>CPane::RecalcLayout<ept id=\"p1\">](../../mfc/reference/cpane-class.md#cpane__recalclayout)</ept>.)","source":"(Overrides [CPane::RecalcLayout](../../mfc/reference/cpane-class.md#cpane__recalclayout).)"},{"pos":[8830,8895],"content":"<bpt id=\"p1\">[</bpt>CMFCTasksPane::RemoveAllGroups<ept id=\"p1\">](#cmfctaskspane__removeallgroups)</ept>","source":"[CMFCTasksPane::RemoveAllGroups](#cmfctaskspane__removeallgroups)"},{"content":"Removes all groups on the specified page.","pos":[8896,8937]},{"pos":[8942,9005],"content":"<bpt id=\"p1\">[</bpt>CMFCTasksPane::RemoveAllPages<ept id=\"p1\">](#cmfctaskspane__removeallpages)</ept>","source":"[CMFCTasksPane::RemoveAllPages](#cmfctaskspane__removeallpages)"},{"content":"Removes all pages from the task pane except the default (first) page.","pos":[9006,9075]},{"pos":[9080,9143],"content":"<bpt id=\"p1\">[</bpt>CMFCTasksPane::RemoveAllTasks<ept id=\"p1\">](#cmfctaskspane__removealltasks)</ept>","source":"[CMFCTasksPane::RemoveAllTasks](#cmfctaskspane__removealltasks)"},{"content":"Removes all tasks from the group.","pos":[9144,9177]},{"pos":[9182,9239],"content":"<bpt id=\"p1\">[</bpt>CMFCTasksPane::RemoveGroup<ept id=\"p1\">](#cmfctaskspane__removegroup)</ept>","source":"[CMFCTasksPane::RemoveGroup](#cmfctaskspane__removegroup)"},{"content":"Removes a group.","pos":[9240,9256]},{"pos":[9261,9316],"content":"<bpt id=\"p1\">[</bpt>CMFCTasksPane::RemovePage<ept id=\"p1\">](#cmfctaskspane__removepage)</ept>","source":"[CMFCTasksPane::RemovePage](#cmfctaskspane__removepage)"},{"content":"Removes a specified page from the task pane.","pos":[9317,9361]},{"pos":[9366,9421],"content":"<bpt id=\"p1\">[</bpt>CMFCTasksPane::RemoveTask<ept id=\"p1\">](#cmfctaskspane__removetask)</ept>","source":"[CMFCTasksPane::RemoveTask](#cmfctaskspane__removetask)"},{"content":"Removes a task from a task group.","pos":[9422,9455]},{"pos":[9460,9513],"content":"<bpt id=\"p1\">[</bpt>CMFCTasksPane::SaveState<ept id=\"p1\">](#cmfctaskspane__savestate)</ept>","source":"[CMFCTasksPane::SaveState](#cmfctaskspane__savestate)"},{"pos":[9514,9623],"content":"(Overrides <bpt id=\"p1\">[</bpt>CDockablePane::SaveState<ept id=\"p1\">](http://msdn.microsoft.com/en-us/c5c24249-8d0d-46cb-96d9-9f5c6dc191db)</ept>.)","source":"(Overrides [CDockablePane::SaveState](http://msdn.microsoft.com/en-us/c5c24249-8d0d-46cb-96d9-9f5c6dc191db).)"},{"pos":[9628,9681],"content":"<bpt id=\"p1\">[</bpt>CMFCTasksPane::Serialize<ept id=\"p1\">](#cmfctaskspane__serialize)</ept>","source":"[CMFCTasksPane::Serialize](#cmfctaskspane__serialize)"},{"pos":[9682,9791],"content":"(Overrides <bpt id=\"p1\">[</bpt>CDockablePane::Serialize<ept id=\"p1\">](http://msdn.microsoft.com/en-us/09787e59-e446-4e76-894b-206d303dcfd6)</ept>.)","source":"(Overrides [CDockablePane::Serialize](http://msdn.microsoft.com/en-us/09787e59-e446-4e76-894b-206d303dcfd6).)"},{"pos":[9796,9857],"content":"<bpt id=\"p1\">[</bpt>CMFCTasksPane::SetActivePage<ept id=\"p1\">](#cmfctaskspane__setactivepage)</ept>","source":"[CMFCTasksPane::SetActivePage](#cmfctaskspane__setactivepage)"},{"content":"Activates a specified page in the task pane.","pos":[9858,9902]},{"pos":[9907,9962],"content":"<bpt id=\"p1\">[</bpt>CMFCTasksPane::SetCaption<ept id=\"p1\">](#cmfctaskspane__setcaption)</ept>","source":"[CMFCTasksPane::SetCaption](#cmfctaskspane__setcaption)"},{"content":"Sets the caption name of a task pane.","pos":[9963,10000]},{"pos":[10005,10082],"content":"<bpt id=\"p1\">[</bpt>CMFCTasksPane::SetGroupCaptionHeight<ept id=\"p1\">](#cmfctaskspane__setgroupcaptionheight)</ept>","source":"[CMFCTasksPane::SetGroupCaptionHeight](#cmfctaskspane__setgroupcaptionheight)"},{"content":"Sets the height of a group caption.","pos":[10083,10118]},{"pos":[10123,10208],"content":"<bpt id=\"p1\">[</bpt>CMFCTasksPane::SetGroupCaptionHorzOffset<ept id=\"p1\">](#cmfctaskspane__setgroupcaptionhorzoffset)</ept>","source":"[CMFCTasksPane::SetGroupCaptionHorzOffset](#cmfctaskspane__setgroupcaptionhorzoffset)"},{"content":"Sets the horizontal offset of a group caption.","pos":[10209,10255]},{"pos":[10260,10345],"content":"<bpt id=\"p1\">[</bpt>CMFCTasksPane::SetGroupCaptionVertOffset<ept id=\"p1\">](#cmfctaskspane__setgroupcaptionvertoffset)</ept>","source":"[CMFCTasksPane::SetGroupCaptionVertOffset](#cmfctaskspane__setgroupcaptionvertoffset)"},{"content":"Sets the vertical offset of a group caption.","pos":[10346,10390]},{"pos":[10395,10454],"content":"<bpt id=\"p1\">[</bpt>CMFCTasksPane::SetGroupName<ept id=\"p1\">](#cmfctaskspane__setgroupname)</ept>","source":"[CMFCTasksPane::SetGroupName](#cmfctaskspane__setgroupname)"},{"content":"Sets a group name.","pos":[10455,10473]},{"pos":[10478,10547],"content":"<bpt id=\"p1\">[</bpt>CMFCTasksPane::SetGroupTextColor<ept id=\"p1\">](#cmfctaskspane__setgrouptextcolor)</ept>","source":"[CMFCTasksPane::SetGroupTextColor](#cmfctaskspane__setgrouptextcolor)"},{"content":"Sets the text color for a group caption.","pos":[10548,10588]},{"pos":[10593,10664],"content":"<bpt id=\"p1\">[</bpt>CMFCTasksPane::SetGroupVertOffset<ept id=\"p1\">](#cmfctaskspane__setgroupvertoffset)</ept>","source":"[CMFCTasksPane::SetGroupVertOffset](#cmfctaskspane__setgroupvertoffset)"},{"content":"Sets the vertical offset for a group.","pos":[10665,10702]},{"pos":[10707,10768],"content":"<bpt id=\"p1\">[</bpt>CMFCTasksPane::SetHorzMargin<ept id=\"p1\">](#cmfctaskspane__sethorzmargin)</ept>","source":"[CMFCTasksPane::SetHorzMargin](#cmfctaskspane__sethorzmargin)"},{"content":"Sets the horizontal spacing between a task pane and the edges of the client area.","pos":[10769,10850]},{"pos":[10855,10914],"content":"<bpt id=\"p1\">[</bpt>CMFCTasksPane::SetIconsList<ept id=\"p1\">](#cmfctaskspane__seticonslist)</ept>","source":"[CMFCTasksPane::SetIconsList](#cmfctaskspane__seticonslist)"},{"content":"Sets the image list associated with tasks.","pos":[10915,10957]},{"pos":[10962,11025],"content":"<bpt id=\"p1\">[</bpt>CMFCTasksPane::SetPageCaption<ept id=\"p1\">](#cmfctaskspane__setpagecaption)</ept>","source":"[CMFCTasksPane::SetPageCaption](#cmfctaskspane__setpagecaption)"},{"content":"Sets the caption text for a task pane page.","pos":[11026,11069]},{"pos":[11074,11131],"content":"<bpt id=\"p1\">[</bpt>CMFCTasksPane::SetTaskName<ept id=\"p1\">](#cmfctaskspane__settaskname)</ept>","source":"[CMFCTasksPane::SetTaskName](#cmfctaskspane__settaskname)"},{"content":"Sets the name for a task.","pos":[11132,11157]},{"pos":[11162,11241],"content":"<bpt id=\"p1\">[</bpt>CMFCTasksPane::SetTasksIconHorzOffset<ept id=\"p1\">](#cmfctaskspane__settasksiconhorzoffset)</ept>","source":"[CMFCTasksPane::SetTasksIconHorzOffset](#cmfctaskspane__settasksiconhorzoffset)"},{"pos":[11247,11326],"content":"<bpt id=\"p1\">[</bpt>CMFCTasksPane::SetTasksIconVertOffset<ept id=\"p1\">](#cmfctaskspane__settasksiconvertoffset)</ept>","source":"[CMFCTasksPane::SetTasksIconVertOffset](#cmfctaskspane__settasksiconvertoffset)"},{"pos":[11332,11399],"content":"<bpt id=\"p1\">[</bpt>CMFCTasksPane::SetTaskTextColor<ept id=\"p1\">](#cmfctaskspane__settasktextcolor)</ept>","source":"[CMFCTasksPane::SetTaskTextColor](#cmfctaskspane__settasktextcolor)"},{"content":"Sets the text color for a task.","pos":[11400,11431]},{"pos":[11436,11507],"content":"<bpt id=\"p1\">[</bpt>CMFCTasksPane::SetTasksHorzOffset<ept id=\"p1\">](#cmfctaskspane__settaskshorzoffset)</ept>","source":"[CMFCTasksPane::SetTasksHorzOffset](#cmfctaskspane__settaskshorzoffset)"},{"content":"Sets the horizontal offset of tasks from the left and right edges of their parent groups.","pos":[11508,11597]},{"pos":[11602,11663],"content":"<bpt id=\"p1\">[</bpt>CMFCTasksPane::SetVertMargin<ept id=\"p1\">](#cmfctaskspane__setvertmargin)</ept>","source":"[CMFCTasksPane::SetVertMargin](#cmfctaskspane__setvertmargin)"},{"content":"Sets the vertical spacing between a task pane and the edges of the client area.","pos":[11664,11743]},{"pos":[11748,11813],"content":"<bpt id=\"p1\">[</bpt>CMFCTasksPane::SetWindowHeight<ept id=\"p1\">](#cmfctaskspane__setwindowheight)</ept>","source":"[CMFCTasksPane::SetWindowHeight](#cmfctaskspane__setwindowheight)"},{"content":"Sets the height for a window.","pos":[11814,11843]},{"pos":[11848,11931],"content":"<bpt id=\"p1\">[</bpt>CMFCTasksPane::ShowCommandMessageString<ept id=\"p1\">](#cmfctaskspane__showcommandmessagestring)</ept>","source":"[CMFCTasksPane::ShowCommandMessageString](#cmfctaskspane__showcommandmessagestring)"},{"pos":[11937,11988],"content":"<bpt id=\"p1\">[</bpt>CMFCTasksPane::ShowTask<ept id=\"p1\">](#cmfctaskspane__showtask)</ept>","source":"[CMFCTasksPane::ShowTask](#cmfctaskspane__showtask)"},{"content":"Shows or hides a task.","pos":[11989,12011]},{"pos":[12016,12081],"content":"<bpt id=\"p1\">[</bpt>CMFCTasksPane::ShowTaskByCmdId<ept id=\"p1\">](#cmfctaskspane__showtaskbycmdid)</ept>","source":"[CMFCTasksPane::ShowTaskByCmdId](#cmfctaskspane__showtaskbycmdid)"},{"content":"Shows or hides a task based on its command ID.","pos":[12082,12128]},{"pos":[12133,12180],"content":"<bpt id=\"p1\">[</bpt>CMFCTasksPane::Update<ept id=\"p1\">](#cmfctaskspane__update)</ept>","source":"[CMFCTasksPane::Update](#cmfctaskspane__update)"},{"content":"Updates the GUI elements that belong to a task pane.","pos":[12181,12233]},{"pos":[12244,12261],"content":"Protected Methods","linkify":"Protected Methods","nodes":[{"content":"Protected Methods","pos":[0,17]}]},{"content":"Name","pos":[12268,12272]},{"content":"Description","pos":[12273,12284]},{"pos":[12322,12403],"content":"<bpt id=\"p1\">[</bpt>CMFCTasksPane::OnActivateTasksPanePage<ept id=\"p1\">](#cmfctaskspane__onactivatetaskspanepage)</ept>","source":"[CMFCTasksPane::OnActivateTasksPanePage](#cmfctaskspane__onactivatetaskspanepage)"},{"content":"Called by the framework when a new task pane page is activated.","pos":[12404,12467]},{"pos":[12477,12484],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[12488,12553],"content":"The <ph id=\"ph1\">`CMFCTasksPane`</ph> class implements the following functionality:","source":"The `CMFCTasksPane` class implements the following functionality:"},{"content":"Items can be grouped and each item grouping can have an associated caption.","pos":[12563,12638]},{"content":"Item groupings can be collapsed or expanded.","pos":[12648,12692]},{"content":"An icon can be assigned to each item in the task pane.","pos":[12702,12756]},{"content":"Individual items can be associated with a command ID which executes when a user clicks the item.","pos":[12766,12862]},{"content":"When the click occurs, the <ph id=\"ph1\">`WM_COMMAND`</ph> message is sent to the owner of the task pane control.","pos":[12863,12957],"source":" When the click occurs, the `WM_COMMAND` message is sent to the owner of the task pane control."},{"pos":[12964,13039],"content":"To use the <ph id=\"ph1\">`CMFCTasksPane`</ph> control in your application, follow these steps:","source":"To use the `CMFCTasksPane` control in your application, follow these steps:"},{"pos":[13049,13113],"content":"Embed a <ph id=\"ph1\">`CMFCTasksPane`</ph> object into the main frame window class.","source":"Embed a `CMFCTasksPane` object into the main frame window class."},{"content":"When processing the <ph id=\"ph1\">`WM_CREATE`</ph> message, call the <ph id=\"ph2\">`Create`</ph> method.","pos":[13123,13189],"source":"When processing the `WM_CREATE` message, call the `Create` method."},{"content":"You can use the regular <bpt id=\"p1\">[</bpt>CControlBar<ept id=\"p1\">](../../mfc/reference/ccontrolbar-class.md)</ept> styles.","pos":[13190,13277],"source":" You can use the regular [CControlBar](../../mfc/reference/ccontrolbar-class.md) styles."},{"content":"For more information, see <ph id=\"ph1\">`CControlBar::Create`</ph>.","pos":[13278,13326],"source":" For more information, see `CControlBar::Create`."},{"pos":[13336,13426],"content":"Call the <bpt id=\"p1\">[</bpt>CMFCTasksPane::AddGroup<ept id=\"p1\">](#cmfctaskspane__addgroup)</ept> method to add various groups.","source":"Call the [CMFCTasksPane::AddGroup](#cmfctaskspane__addgroup) method to add various groups."},{"pos":[13436,13673],"content":"Call the <bpt id=\"p1\">[</bpt>CMFCTasksPane::AddTask<ept id=\"p1\">](#cmfctaskspane__addtask)</ept>, <bpt id=\"p2\">[</bpt>CMFCTasksPane::AddLabel<ept id=\"p2\">](#cmfctaskspane__addlabel)</ept> or <bpt id=\"p3\">[</bpt>CMFCTasksPane::AddMRUFilesList<ept id=\"p3\">](#cmfctaskspane__addmrufileslist)</ept> member functions to add new items (tasks) to each group.","source":"Call the [CMFCTasksPane::AddTask](#cmfctaskspane__addtask), [CMFCTasksPane::AddLabel](#cmfctaskspane__addlabel) or [CMFCTasksPane::AddMRUFilesList](#cmfctaskspane__addmrufileslist) member functions to add new items (tasks) to each group."},{"pos":[13683,13806],"content":"Call <bpt id=\"p1\">[</bpt>CMFCTasksPane::EnableGroupCollapse<ept id=\"p1\">](#cmfctaskspane__enablegroupcollapse)</ept> to specify whether item groups can collapse.","source":"Call [CMFCTasksPane::EnableGroupCollapse](#cmfctaskspane__enablegroupcollapse) to specify whether item groups can collapse."},{"content":"The following illustration shows a typical task pane control.","pos":[13813,13874]},{"content":"The first group is a <bpt id=\"p1\">*</bpt>special<ept id=\"p1\">*</ept> group and its caption is a darker color.","pos":[13875,13946],"source":" The first group is a *special* group and its caption is a darker color."},{"content":"The third group is collapsed.","pos":[13947,13976]},{"content":"The last group is aligned to the bottom of the task pane and has no caption, and the last task in the group is a simple label:","pos":[13977,14103]},{"pos":[14110,14192],"content":"<bpt id=\"p1\">![</bpt>Example of Task Pane<ept id=\"p1\">]</ept><bpt id=\"p2\">(../../mfc/reference/media/nexttaskpane.png \"</bpt>nexttaskpane<ept id=\"p2\">\")</ept>","source":"![Example of Task Pane](../../mfc/reference/media/nexttaskpane.png \"nexttaskpane\")"},{"content":"You can customize the appearance of the task pane by adjusting various margins and offsets.","pos":[14199,14290]},{"content":"The following illustration clarifies the meaning of these variables:","pos":[14291,14359]},{"pos":[14366,14455],"content":"<bpt id=\"p1\">![</bpt>Custom task group<ept id=\"p1\">]</ept><bpt id=\"p2\">(../../mfc/reference/media/nexttaskgrpcustom.png \"</bpt>nexttaskgrpcustom<ept id=\"p2\">\")</ept>","source":"![Custom task group](../../mfc/reference/media/nexttaskgrpcustom.png \"nexttaskgrpcustom\")"},{"pos":[14464,14471],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following example demonstrates how to construct a <ph id=\"ph1\">`CMFCTasksPane`</ph> object and use various methods in the <ph id=\"ph2\">`CMFCTasksPane`</ph> class.","pos":[14475,14605],"source":"The following example demonstrates how to construct a `CMFCTasksPane` object and use various methods in the `CMFCTasksPane` class."},{"content":"The example shows how to enable the collapsing of task groups, enable the drop-down menus on the <bpt id=\"p1\">**</bpt>Next<ept id=\"p1\">**</ept> and <bpt id=\"p2\">**</bpt>Previous<ept id=\"p2\">**</ept> navigation buttons, enable the scroll buttons instead of a scroll bar, enable the word wrapping for the text in labels, set the caption name of the task pane, set the text color for a group caption, and set the horizontal and vertical margins.","pos":[14606,14972],"source":" The example shows how to enable the collapsing of task groups, enable the drop-down menus on the **Next** and **Previous** navigation buttons, enable the scroll buttons instead of a scroll bar, enable the word wrapping for the text in labels, set the caption name of the task pane, set the text color for a group caption, and set the horizontal and vertical margins."},{"pos":[14979,15075],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_MFC_RibbonApp#28<ept id=\"p2\">](../../mfc/reference/codesnippet/cpp/cmfctaskspane-class_1.cpp)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_MFC_RibbonApp#28](../../mfc/reference/codesnippet/cpp/cmfctaskspane-class_1.cpp)]"},{"pos":[15084,15105],"content":"Inheritance Hierarchy","linkify":"Inheritance Hierarchy","nodes":[{"content":"Inheritance Hierarchy","pos":[0,21]}]},{"pos":[15109,15252],"content":"<bpt id=\"p1\">[</bpt>CObject<ept id=\"p1\">](../../mfc/reference/cobject-class.md)</ept> <bpt id=\"p2\">[</bpt>CCmdTarget<ept id=\"p2\">](../../mfc/reference/ccmdtarget-class.md)</ept> <bpt id=\"p3\">[</bpt>CWnd<ept id=\"p3\">](../../mfc/reference/cwnd-class.md)</ept>","source":"[CObject](../../mfc/reference/cobject-class.md) [CCmdTarget](../../mfc/reference/ccmdtarget-class.md) [CWnd](../../mfc/reference/cwnd-class.md)"},{"pos":[15259,15414],"content":"<bpt id=\"p1\">[</bpt>CBasePane<ept id=\"p1\">](../../mfc/reference/cbasepane-class.md)</ept> <bpt id=\"p2\">[</bpt>CPane<ept id=\"p2\">](../../mfc/reference/cpane-class.md)</ept> <bpt id=\"p3\">[</bpt>CDockablePane<ept id=\"p3\">](../../mfc/reference/cdockablepane-class.md)</ept>","source":"[CBasePane](../../mfc/reference/cbasepane-class.md) [CPane](../../mfc/reference/cpane-class.md) [CDockablePane](../../mfc/reference/cdockablepane-class.md)"},{"pos":[15421,15480],"content":"<bpt id=\"p1\">[</bpt>CMFCTasksPane<ept id=\"p1\">](../../mfc/reference/cmfctaskspane-class.md)</ept>","source":"[CMFCTasksPane](../../mfc/reference/cmfctaskspane-class.md)"},{"pos":[15489,15501],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[15505,15531],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> afxTasksPane.h","source":"**Header:** afxTasksPane.h"},{"pos":[15541,15604],"content":"<bpt id=\"p1\">&lt;a name=\"cmfctaskspane__addgroup\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCTasksPane::AddGroup","linkify":"<a name=\"cmfctaskspane__addgroup\"></a>  CMFCTasksPane::AddGroup","source":"<a name=\"cmfctaskspane__addgroup\"></a>  CMFCTasksPane::AddGroup"},{"content":"Adds a new group of tasks to the task pane control.","pos":[15608,15659]},{"pos":[15973,15983],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`nPageIdx`</ph>","pos":[15987,16002],"source":"[in] `nPageIdx`"},{"content":"Specifies the zero-based page index.","pos":[16006,16042]},{"content":"[in] <ph id=\"ph1\">`lpszGroupName`</ph>","pos":[16049,16069],"source":"[in] `lpszGroupName`"},{"content":"Specifies the group name.","pos":[16073,16098]},{"content":"[in] <ph id=\"ph1\">`bBottomLocation`</ph>","pos":[16105,16127],"source":"[in] `bBottomLocation`"},{"content":"<ph id=\"ph1\"> `TRUE`</ph> to create the group at the bottom of the task pane control; otherwise, <ph id=\"ph2\">`FALSE`</ph>.","pos":[16130,16217],"source":" `TRUE` to create the group at the bottom of the task pane control; otherwise, `FALSE`."},{"content":"[in] <ph id=\"ph1\">`bSpecial`</ph>","pos":[16224,16239],"source":"[in] `bSpecial`"},{"content":"<ph id=\"ph1\"> `TRUE`</ph> to mark this group as a <bpt id=\"p1\">*</bpt>special<ept id=\"p1\">*</ept> group; otherwise, <ph id=\"ph2\">`FALSE`</ph>.","pos":[16242,16310],"source":" `TRUE` to mark this group as a *special* group; otherwise, `FALSE`."},{"content":"For more information about special groups, see the Remarks section of <bpt id=\"p1\">[</bpt>CMFCTasksPane Class<ept id=\"p1\">](../../mfc/reference/cmfctaskspane-class.md)</ept>.","pos":[16311,16447],"source":" For more information about special groups, see the Remarks section of [CMFCTasksPane Class](../../mfc/reference/cmfctaskspane-class.md)."},{"content":"[in] <ph id=\"ph1\">`hIcon`</ph>","pos":[16454,16466],"source":"[in] `hIcon`"},{"content":"Specifies the icon to display in the group caption.","pos":[16470,16521]},{"pos":[16531,16543],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The zero-based index of the group in the internal list of groups that the class maintains.","pos":[16547,16637]},{"pos":[16647,16654],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Call this method to create a group of tasks and to add that group to the task pane control.","pos":[16658,16749]},{"content":"The framework displays task groups at the top of the task pane control or at the bottom.","pos":[16756,16844]},{"content":"The framework can display only one group at the bottom; this group must be added last.","pos":[16845,16931]},{"pos":[16941,17004],"content":"<bpt id=\"p1\">&lt;a name=\"cmfctaskspane__addlabel\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCTasksPane::AddLabel","linkify":"<a name=\"cmfctaskspane__addlabel\"></a>  CMFCTasksPane::AddLabel","source":"<a name=\"cmfctaskspane__addlabel\"></a>  CMFCTasksPane::AddLabel"},{"content":"Adds a label to the specified task group.","pos":[17008,17049]},{"pos":[17188,17198],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`nGroup`</ph>","pos":[17202,17215],"source":"[in] `nGroup`"},{"content":"Specifies the index of the group where the label is added.","pos":[17219,17277]},{"content":"[in] <ph id=\"ph1\">`lpszLabelName`</ph>","pos":[17284,17304],"source":"[in] `lpszLabelName`"},{"content":"Specifies the name of the label.","pos":[17308,17340]},{"content":"[in] <ph id=\"ph1\">`nTaskIcon`</ph>","pos":[17347,17363],"source":"[in] `nTaskIcon`"},{"content":"Specifies the icon to display next to the label.","pos":[17367,17415]},{"content":"The framework stores icons in a list of images.","pos":[17416,17463]},{"content":"This parameter is an index into that list.","pos":[17464,17506]},{"content":"[in] <ph id=\"ph1\">`bIsBold`</ph>","pos":[17513,17527],"source":"[in] `bIsBold`"},{"content":"<ph id=\"ph1\"> `TRUE`</ph> to display the label in bold text; otherwise, <ph id=\"ph2\">`FALSE`</ph>.","pos":[17530,17592],"source":" `TRUE` to display the label in bold text; otherwise, `FALSE`."},{"pos":[17602,17614],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[17618,17735],"content":"The zero-based index of the group where the label was added, or -1 if the group specified by <ph id=\"ph1\">`nGroup`</ph> does not exist.","source":"The zero-based index of the group where the label was added, or -1 if the group specified by `nGroup` does not exist."},{"pos":[17745,17752],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The framework handles tasks and labels differently.","pos":[17756,17807]},{"content":"When a user clicks on a task, the framework executes a command.","pos":[17808,17871]},{"content":"When a user clicks on a label, no command is executed.","pos":[17872,17926]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>CMFCTasksPane::AddTask<ept id=\"p1\">](#cmfctaskspane__addtask)</ept>.","pos":[17927,18003],"source":" For more information, see [CMFCTasksPane::AddTask](#cmfctaskspane__addtask)."},{"pos":[18013,18090],"content":"<bpt id=\"p1\">&lt;a name=\"cmfctaskspane__addmrufileslist\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCTasksPane::AddMRUFilesList","linkify":"<a name=\"cmfctaskspane__addmrufileslist\"></a>  CMFCTasksPane::AddMRUFilesList","source":"<a name=\"cmfctaskspane__addmrufileslist\"></a>  CMFCTasksPane::AddMRUFilesList"},{"content":"Adds a task for each file stored in a Most Recently Used (MRU) files list into a group.","pos":[18094,18181]},{"pos":[18269,18279],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`nGroup`</ph>","pos":[18283,18296],"source":"[in] `nGroup`"},{"content":"Specifies the index of a group.","pos":[18300,18331]},{"content":"This method adds the MRU files list to the group specified by this parameter.","pos":[18332,18409]},{"content":"[in] <ph id=\"ph1\">`nMaxFiles`</ph>","pos":[18416,18432],"source":"[in] `nMaxFiles`"},{"content":"Specifies the number of files to display in the MRU files list.","pos":[18436,18499]},{"pos":[18509,18521],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[18525,18651],"content":"The zero-based index of the group where the MRU files list was added, or -1 if the group specified by <ph id=\"ph1\">`nGroup`</ph> does not exist.","source":"The zero-based index of the group where the MRU files list was added, or -1 if the group specified by `nGroup` does not exist."},{"pos":[18661,18722],"content":"<bpt id=\"p1\">&lt;a name=\"cmfctaskspane__addpage\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCTasksPane::AddPage","linkify":"<a name=\"cmfctaskspane__addpage\"></a>  CMFCTasksPane::AddPage","source":"<a name=\"cmfctaskspane__addpage\"></a>  CMFCTasksPane::AddPage"},{"content":"Adds a page to the task pane.","pos":[18726,18755]},{"pos":[18816,18826],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`lpszPageLabel`</ph>","pos":[18830,18850],"source":"[in] `lpszPageLabel`"},{"content":"Specifies the label for the page.","pos":[18854,18887]},{"pos":[18897,18909],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The zero-based index of the new page.","pos":[18913,18950]},{"pos":[18960,19031],"content":"<bpt id=\"p1\">&lt;a name=\"cmfctaskspane__addseparator\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCTasksPane::AddSeparator","linkify":"<a name=\"cmfctaskspane__addseparator\"></a>  CMFCTasksPane::AddSeparator","source":"<a name=\"cmfctaskspane__addseparator\"></a>  CMFCTasksPane::AddSeparator"},{"pos":[19189,19199],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"pos":[19203,19216],"content":"[in] <ph id=\"ph1\">`nGroup`</ph>","source":"[in] `nGroup`"},{"pos":[19226,19238],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[19248,19255],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[19265,19326],"content":"<bpt id=\"p1\">&lt;a name=\"cmfctaskspane__addtask\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCTasksPane::AddTask","linkify":"<a name=\"cmfctaskspane__addtask\"></a>  CMFCTasksPane::AddTask","source":"<a name=\"cmfctaskspane__addtask\"></a>  CMFCTasksPane::AddTask"},{"content":"Adds a task to the specified task group.","pos":[19330,19370]},{"pos":[19535,19545],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`nGroup`</ph>","pos":[19549,19562],"source":"[in] `nGroup`"},{"content":"Specifies the group index where the task is added.","pos":[19566,19616]},{"content":"[in] <ph id=\"ph1\">`lpszTaskName`</ph>","pos":[19623,19642],"source":"[in] `lpszTaskName`"},{"content":"Specifies the name of the task.","pos":[19646,19677]},{"content":"[in] <ph id=\"ph1\">`nTaskIcon`</ph>","pos":[19684,19700],"source":"[in] `nTaskIcon`"},{"content":"Specifies the icon to display next to the task.","pos":[19704,19751]},{"content":"The framework stores icons in a list of images.","pos":[19752,19799]},{"content":"This parameter is an index into that list.","pos":[19800,19842]},{"content":"[in] <ph id=\"ph1\">`uiCommandID`</ph>","pos":[19849,19867],"source":"[in] `uiCommandID`"},{"content":"Specifies the command ID of the command to execute when the user clicks the task.","pos":[19871,19952]},{"content":"The task is treated as a label if <ph id=\"ph1\">`uiCommandID`</ph> is 0.","pos":[19953,20006],"source":" The task is treated as a label if `uiCommandID` is 0."},{"content":"[in] <ph id=\"ph1\">`dwUserData`</ph>","pos":[20013,20030],"source":"[in] `dwUserData`"},{"content":"Specifies the user-defined data to be associated with the task.","pos":[20034,20097]},{"pos":[20107,20119],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[20123,20239],"content":"The zero-based index of the group where the task was added, or -1 if the group specified by <ph id=\"ph1\">`nGroup`</ph> does not exist.","source":"The zero-based index of the group where the task was added, or -1 if the group specified by `nGroup` does not exist."},{"pos":[20249,20314],"content":"<bpt id=\"p1\">&lt;a name=\"cmfctaskspane__addwindow\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCTasksPane::AddWindow","linkify":"<a name=\"cmfctaskspane__addwindow\"></a>  CMFCTasksPane::AddWindow","source":"<a name=\"cmfctaskspane__addwindow\"></a>  CMFCTasksPane::AddWindow"},{"content":"Adds a child window to the task pane.","pos":[20318,20355]},{"pos":[20522,20532],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`nGroup`</ph>","pos":[20536,20549],"source":"[in] `nGroup`"},{"content":"Specifies the group index where the window is added.","pos":[20553,20605]},{"content":"[in] <ph id=\"ph1\">`hwndTask`</ph>","pos":[20612,20627],"source":"[in] `hwndTask`"},{"content":"Specifies the handle of the window to add.","pos":[20631,20673]},{"content":"[in] <ph id=\"ph1\">`nWndHeight`</ph>","pos":[20680,20697],"source":"[in] `nWndHeight`"},{"content":"Specifies the height of the window.","pos":[20701,20736]},{"content":"[in] <ph id=\"ph1\">`bAutoDestroyWindow`</ph>","pos":[20743,20768],"source":"[in] `bAutoDestroyWindow`"},{"content":"<ph id=\"ph1\"> `TRUE`</ph> to destroy the window when the task is removed; otherwise, <ph id=\"ph2\">`FALSE`</ph>.","pos":[20771,20846],"source":" `TRUE` to destroy the window when the task is removed; otherwise, `FALSE`."},{"content":"[in] <ph id=\"ph1\">`dwUserData`</ph>","pos":[20853,20870],"source":"[in] `dwUserData`"},{"content":"Specifies the user-defined data associated with the task.","pos":[20874,20931]},{"pos":[20941,20953],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[20957,21075],"content":"The zero-based index of the group where the window was added, or -1 if the group specified by <ph id=\"ph1\">`nGroup`</ph> does not exist.","source":"The zero-based index of the group where the window was added, or -1 if the group specified by `nGroup` does not exist."},{"pos":[21085,21092],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Call this method to add a control to a task pane.","pos":[21096,21145]},{"content":"For example, you can add an edit control that functions like a search bar.","pos":[21146,21220]},{"pos":[21230,21303],"content":"<bpt id=\"p1\">&lt;a name=\"cmfctaskspane__cmfctaskspane\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCTasksPane::CMFCTasksPane","linkify":"<a name=\"cmfctaskspane__cmfctaskspane\"></a>  CMFCTasksPane::CMFCTasksPane","source":"<a name=\"cmfctaskspane__cmfctaskspane\"></a>  CMFCTasksPane::CMFCTasksPane"},{"pos":[21307,21387],"content":"Constructs a <bpt id=\"p1\">[</bpt>CMFCTasksPane<ept id=\"p1\">](../../mfc/reference/cmfctaskspane-class.md)</ept> object.","source":"Constructs a [CMFCTasksPane](../../mfc/reference/cmfctaskspane-class.md) object."},{"pos":[21429,21510],"content":"<bpt id=\"p1\">&lt;a name=\"cmfctaskspane__collapseallgroups\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCTasksPane::CollapseAllGroups","linkify":"<a name=\"cmfctaskspane__collapseallgroups\"></a>  CMFCTasksPane::CollapseAllGroups","source":"<a name=\"cmfctaskspane__collapseallgroups\"></a>  CMFCTasksPane::CollapseAllGroups"},{"pos":[21758,21768],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`bCollapse`</ph>","pos":[21772,21788],"source":"[in] `bCollapse`"},{"content":"[in] <ph id=\"ph1\">`nPageIdx`</ph>","pos":[21792,21807],"source":" [in] `nPageIdx`"},{"pos":[21817,21824],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[21834,21907],"content":"<bpt id=\"p1\">&lt;a name=\"cmfctaskspane__collapsegroup\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCTasksPane::CollapseGroup","linkify":"<a name=\"cmfctaskspane__collapsegroup\"></a>  CMFCTasksPane::CollapseGroup","source":"<a name=\"cmfctaskspane__collapsegroup\"></a>  CMFCTasksPane::CollapseGroup"},{"content":"Collapses or expands a group.","pos":[21911,21940]},{"pos":[22120,22130],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`pGroup`</ph>","pos":[22134,22147],"source":"[in] `pGroup`"},{"content":"Specifies the group to collapse.","pos":[22151,22183]},{"content":"[in] <ph id=\"ph1\">`bCollapse`</ph>","pos":[22190,22206],"source":"[in] `bCollapse`"},{"content":"<ph id=\"ph1\"> `TRUE`</ph> to collapse the group; <ph id=\"ph2\">`FALSE`</ph> to expand the group.","pos":[22209,22268],"source":" `TRUE` to collapse the group; `FALSE` to expand the group."},{"content":"[in] <ph id=\"ph1\">`nGroup`</ph>","pos":[22275,22288],"source":"[in] `nGroup`"},{"content":"Specifies the zero-based index of the group to collapse in the internal list of groups.","pos":[22292,22379]},{"pos":[22389,22401],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[22405,22479],"content":"<ph id=\"ph1\">`TRUE`</ph> if the group collapses or expands successfully; otherwise, <ph id=\"ph2\">`FALSE`</ph>.","source":"`TRUE` if the group collapses or expands successfully; otherwise, `FALSE`."},{"pos":[22489,22496],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"A collapsed group shows only the group caption; the list of tasks is hidden.","pos":[22500,22576]},{"pos":[22586,22677],"content":"<bpt id=\"p1\">&lt;a name=\"cmfctaskspane__createdefaultminiframe\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCTasksPane::CreateDefaultMiniframe","linkify":"<a name=\"cmfctaskspane__createdefaultminiframe\"></a>  CMFCTasksPane::CreateDefaultMiniframe","source":"<a name=\"cmfctaskspane__createdefaultminiframe\"></a>  CMFCTasksPane::CreateDefaultMiniframe"},{"pos":[22871,22881],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"pos":[22885,22903],"content":"[in] <ph id=\"ph1\">`rectInitial`</ph>","source":"[in] `rectInitial`"},{"pos":[22913,22925],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[22935,22942],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[22952,23019],"content":"<bpt id=\"p1\">&lt;a name=\"cmfctaskspane__createmenu\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCTasksPane::CreateMenu","linkify":"<a name=\"cmfctaskspane__createmenu\"></a>  CMFCTasksPane::CreateMenu","source":"<a name=\"cmfctaskspane__createmenu\"></a>  CMFCTasksPane::CreateMenu"},{"pos":[23023,23108],"content":"Creates a menu that appears when a user clicks the <bpt id=\"p1\">**</bpt>Other Tasks Panes<ept id=\"p1\">**</ept> menu button.","source":"Creates a menu that appears when a user clicks the **Other Tasks Panes** menu button."},{"pos":[23162,23174],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A handle to the new menu.","pos":[23178,23203]},{"pos":[23213,23220],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Override this method in a derived class to customize the menu for a task pane.","pos":[23224,23302]},{"content":"The pop-up menu  that this method creates contains the list of pages in the task pane.","pos":[23309,23395]},{"content":"The menu displays a check mark next to the active page.","pos":[23396,23451]},{"pos":[23461,23538],"content":"<bpt id=\"p1\">&lt;a name=\"cmfctaskspane__enableanimation\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCTasksPane::EnableAnimation","linkify":"<a name=\"cmfctaskspane__enableanimation\"></a>  CMFCTasksPane::EnableAnimation","source":"<a name=\"cmfctaskspane__enableanimation\"></a>  CMFCTasksPane::EnableAnimation"},{"content":"Enables or disables the animation that occurs when a task group expands or collapses.","pos":[23542,23627]},{"pos":[23695,23705],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`bEnable`</ph>","pos":[23709,23723],"source":"[in] `bEnable`"},{"content":"<ph id=\"ph1\"> `TRUE`</ph> to enable the animation that occurs when a task group expands or collapses; otherwise, <ph id=\"ph2\">`FALSE`</ph>.","pos":[23726,23829],"source":" `TRUE` to enable the animation that occurs when a task group expands or collapses; otherwise, `FALSE`."},{"pos":[23839,23846],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"By default, the animation that occurs when a task group expands or collapses is enabled.","pos":[23850,23938]},{"pos":[23948,24033],"content":"<bpt id=\"p1\">&lt;a name=\"cmfctaskspane__enablegroupcollapse\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCTasksPane::EnableGroupCollapse","linkify":"<a name=\"cmfctaskspane__enablegroupcollapse\"></a>  CMFCTasksPane::EnableGroupCollapse","source":"<a name=\"cmfctaskspane__enablegroupcollapse\"></a>  CMFCTasksPane::EnableGroupCollapse"},{"content":"Specifies whether a user can collapse task groups.","pos":[24037,24087]},{"pos":[24152,24162],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`bEnable`</ph>","pos":[24166,24180],"source":"[in] `bEnable`"},{"content":"<ph id=\"ph1\"> `TRUE`</ph> if users can collapse task groups; otherwise, <ph id=\"ph2\">`FALSE`</ph>.","pos":[24183,24245],"source":" `TRUE` if users can collapse task groups; otherwise, `FALSE`."},{"pos":[24255,24262],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"A task group that is collapsed displays only the group caption; the list of tasks is hidden.","pos":[24266,24358]},{"pos":[24368,24463],"content":"<bpt id=\"p1\">&lt;a name=\"cmfctaskspane__enablehistorymenubuttons\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCTasksPane::EnableHistoryMenuButtons","linkify":"<a name=\"cmfctaskspane__enablehistorymenubuttons\"></a>  CMFCTasksPane::EnableHistoryMenuButtons","source":"<a name=\"cmfctaskspane__enablehistorymenubuttons\"></a>  CMFCTasksPane::EnableHistoryMenuButtons"},{"pos":[24467,24543],"content":"Enables drop-down menus on the <bpt id=\"p1\">**</bpt>Next<ept id=\"p1\">**</ept> and <bpt id=\"p2\">**</bpt>Previous<ept id=\"p2\">**</ept> navigation buttons.","source":"Enables drop-down menus on the **Next** and **Previous** navigation buttons."},{"pos":[24620,24630],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`bEnable`</ph>","pos":[24634,24648],"source":"[in] `bEnable`"},{"content":"<ph id=\"ph1\"> `TRUE`</ph> to enable drop-down menus on the <bpt id=\"p1\">**</bpt>Next<ept id=\"p1\">**</ept> and <bpt id=\"p2\">**</bpt>Previous<ept id=\"p2\">**</ept> navigation buttons; otherwise, <ph id=\"ph2\">`FALSE`</ph>.","pos":[24651,24757],"source":" `TRUE` to enable drop-down menus on the **Next** and **Previous** navigation buttons; otherwise, `FALSE`."},{"pos":[24767,24774],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[24778,24864],"content":"By default, the drop-down menus on the <bpt id=\"p1\">**</bpt>Next<ept id=\"p1\">**</ept> and <bpt id=\"p2\">**</bpt>Previous<ept id=\"p2\">**</ept> buttons are disabled.","source":"By default, the drop-down menus on the **Next** and **Previous** buttons are disabled."},{"content":"The menus contain the history of tasks pages that the user used.","pos":[24871,24935]},{"pos":[24945,25038],"content":"<bpt id=\"p1\">&lt;a name=\"cmfctaskspane__enablenavigationtoolbar\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCTasksPane::EnableNavigationToolbar","linkify":"<a name=\"cmfctaskspane__enablenavigationtoolbar\"></a>  CMFCTasksPane::EnableNavigationToolbar","source":"<a name=\"cmfctaskspane__enablenavigationtoolbar\"></a>  CMFCTasksPane::EnableNavigationToolbar"},{"content":"Enables or disables the navigation toolbar.","pos":[25042,25085]},{"pos":[25295,25305],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`bEnable`</ph>","pos":[25309,25323],"source":"[in] `bEnable`"},{"content":"<ph id=\"ph1\"> `TRUE`</ph> to enable the navigation toolbar; otherwise, <ph id=\"ph2\">`FALSE`</ph>.","pos":[25326,25387],"source":" `TRUE` to enable the navigation toolbar; otherwise, `FALSE`."},{"content":"[in] <ph id=\"ph1\">`uiToolbarBmpRes`</ph>","pos":[25394,25416],"source":"[in] `uiToolbarBmpRes`"},{"content":"Specifies the resource ID of the bitmap that contains the images to display on the toolbar.","pos":[25420,25511]},{"content":"[in] <ph id=\"ph1\">`sizeToolbarImage`</ph>","pos":[25518,25541],"source":"[in] `sizeToolbarImage`"},{"content":"Specifies the size of a toolbar image.","pos":[25545,25583]},{"content":"[in] <ph id=\"ph1\">`sizeToolbarButton`</ph>","pos":[25590,25614],"source":"[in] `sizeToolbarButton`"},{"content":"Specifies the size of a toolbar button.","pos":[25618,25657]},{"pos":[25667,25674],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The navigation toolbar is a toolbar that the framework displays at the top of the task pane.","pos":[25678,25770]},{"content":"The navigation toolbar contains the <bpt id=\"p1\">**</bpt>Back<ept id=\"p1\">**</ept>, <bpt id=\"p2\">**</bpt>Forward<ept id=\"p2\">**</ept>, and <bpt id=\"p3\">**</bpt>Home<ept id=\"p3\">**</ept> navigation buttons and a menu button that contains the list of available pages.","pos":[25771,25922],"source":" The navigation toolbar contains the **Back**, **Forward**, and **Home** navigation buttons and a menu button that contains the list of available pages."},{"content":"By default, the framework does not display the navigation toolbar.","pos":[25929,25995]},{"content":"If the navigation toolbar is not displayed, the navigation buttons are located on the caption of the docking bar.","pos":[25996,26109]},{"pos":[26119,26218],"content":"<bpt id=\"p1\">&lt;a name=\"cmfctaskspane__enableoffsetcustomcontrols\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCTasksPane::EnableOffsetCustomControls","linkify":"<a name=\"cmfctaskspane__enableoffsetcustomcontrols\"></a>  CMFCTasksPane::EnableOffsetCustomControls","source":"<a name=\"cmfctaskspane__enableoffsetcustomcontrols\"></a>  CMFCTasksPane::EnableOffsetCustomControls"},{"pos":[26393,26403],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"pos":[26407,26421],"content":"[in] <ph id=\"ph1\">`bEnable`</ph>","source":"[in] `bEnable`"},{"pos":[26431,26438],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[26448,26533],"content":"<bpt id=\"p1\">&lt;a name=\"cmfctaskspane__enablescrollbuttons\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCTasksPane::EnableScrollButtons","linkify":"<a name=\"cmfctaskspane__enablescrollbuttons\"></a>  CMFCTasksPane::EnableScrollButtons","source":"<a name=\"cmfctaskspane__enablescrollbuttons\"></a>  CMFCTasksPane::EnableScrollButtons"},{"content":"Enables scroll buttons instead of a scroll bar.","pos":[26537,26584]},{"pos":[26656,26666],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`bEnable`</ph>","pos":[26670,26684],"source":"[in] `bEnable`"},{"content":"<ph id=\"ph1\"> `TRUE`</ph> to display scroll buttons in the task pane instead of a scroll bar; otherwise, <ph id=\"ph2\">`FALSE`</ph>.","pos":[26687,26782],"source":" `TRUE` to display scroll buttons in the task pane instead of a scroll bar; otherwise, `FALSE`."},{"pos":[26792,26799],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"By default, the framework displays scroll buttons in the task pane.","pos":[26803,26870]},{"pos":[26880,26959],"content":"<bpt id=\"p1\">&lt;a name=\"cmfctaskspane__enablewraplabels\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCTasksPane::EnableWrapLabels","linkify":"<a name=\"cmfctaskspane__enablewraplabels\"></a>  CMFCTasksPane::EnableWrapLabels","source":"<a name=\"cmfctaskspane__enablewraplabels\"></a>  CMFCTasksPane::EnableWrapLabels"},{"content":"Enables or disables word wrapping for the text in labels.","pos":[26963,27020]},{"pos":[27089,27099],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`bEnable`</ph>","pos":[27103,27117],"source":"[in] `bEnable`"},{"content":"<ph id=\"ph1\"> `TRUE`</ph> to wrap the text in labels that appear on the task pane; otherwise, <ph id=\"ph2\">`FALSE`</ph>.","pos":[27120,27204],"source":" `TRUE` to wrap the text in labels that appear on the task pane; otherwise, `FALSE`."},{"pos":[27214,27221],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"By default, the framework does not wrap the text in labels.","pos":[27225,27284]},{"content":"When word wrapping is enabled, the text in labels can appear in multiple lines.","pos":[27285,27364]},{"content":"The label can include line breaking markers such as <ph id=\"ph1\">`\\n`</ph> and the underline marker <ph id=\"ph2\">`&amp;`</ph>.","pos":[27365,27451],"source":" The label can include line breaking markers such as `\\n` and the underline marker `&`."},{"pos":[27461,27538],"content":"<bpt id=\"p1\">&lt;a name=\"cmfctaskspane__enablewraptasks\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCTasksPane::EnableWrapTasks","linkify":"<a name=\"cmfctaskspane__enablewraptasks\"></a>  CMFCTasksPane::EnableWrapTasks","source":"<a name=\"cmfctaskspane__enablewraptasks\"></a>  CMFCTasksPane::EnableWrapTasks"},{"content":"Enables or disables word wrapping for the text in tasks.","pos":[27542,27598]},{"pos":[27666,27676],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`bEnable`</ph>","pos":[27680,27694],"source":"[in] `bEnable`"},{"content":"<ph id=\"ph1\"> `TRUE`</ph> to wrap tasks in the task pane; otherwise, <ph id=\"ph2\">`FALSE`</ph>.","pos":[27697,27756],"source":" `TRUE` to wrap tasks in the task pane; otherwise, `FALSE`."},{"pos":[27766,27773],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"By default, word wrapping for tasks is disabled.","pos":[27777,27825]},{"pos":[27835,27908],"content":"<bpt id=\"p1\">&lt;a name=\"cmfctaskspane__getactivepage\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCTasksPane::GetActivePage","linkify":"<a name=\"cmfctaskspane__getactivepage\"></a>  CMFCTasksPane::GetActivePage","source":"<a name=\"cmfctaskspane__getactivepage\"></a>  CMFCTasksPane::GetActivePage"},{"content":"Returns the zero-based index for the active page.","pos":[27912,27961]},{"pos":[28016,28028],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The zero-based index of the active page.","pos":[28032,28072]},{"pos":[28082,28171],"content":"<bpt id=\"p1\">&lt;a name=\"cmfctaskspane__getgroupcaptionheight\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCTasksPane::GetGroupCaptionHeight","linkify":"<a name=\"cmfctaskspane__getgroupcaptionheight\"></a>  CMFCTasksPane::GetGroupCaptionHeight","source":"<a name=\"cmfctaskspane__getgroupcaptionheight\"></a>  CMFCTasksPane::GetGroupCaptionHeight"},{"content":"Returns the height of the group caption.","pos":[28175,28215]},{"pos":[28278,28290],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The height of the group caption, in pixels.","pos":[28294,28337]},{"pos":[28347,28444],"content":"<bpt id=\"p1\">&lt;a name=\"cmfctaskspane__getgroupcaptionhorzoffset\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCTasksPane::GetGroupCaptionHorzOffset","linkify":"<a name=\"cmfctaskspane__getgroupcaptionhorzoffset\"></a>  CMFCTasksPane::GetGroupCaptionHorzOffset","source":"<a name=\"cmfctaskspane__getgroupcaptionhorzoffset\"></a>  CMFCTasksPane::GetGroupCaptionHorzOffset"},{"content":"Returns the horizontal offset of a group caption.","pos":[28448,28497]},{"pos":[28564,28576],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The horizontal offset of a group caption.","pos":[28580,28621]},{"content":"The horizontal offset is the distance in pixels from the left or right edge of the task pane.","pos":[28622,28715]},{"pos":[28725,28822],"content":"<bpt id=\"p1\">&lt;a name=\"cmfctaskspane__getgroupcaptionvertoffset\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCTasksPane::GetGroupCaptionVertOffset","linkify":"<a name=\"cmfctaskspane__getgroupcaptionvertoffset\"></a>  CMFCTasksPane::GetGroupCaptionVertOffset","source":"<a name=\"cmfctaskspane__getgroupcaptionvertoffset\"></a>  CMFCTasksPane::GetGroupCaptionVertOffset"},{"content":"Returns the vertical offset of a group caption.","pos":[28826,28873]},{"pos":[28940,28952],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The vertical offset of a group caption from the top and bottom edges of the task pane.","pos":[28956,29042]},{"pos":[29052,29059],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The default value for the vertical offset is 7 pixels.","pos":[29063,29117]},{"pos":[29127,29200],"content":"<bpt id=\"p1\">&lt;a name=\"cmfctaskspane__getgroupcount\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCTasksPane::GetGroupCount","linkify":"<a name=\"cmfctaskspane__getgroupcount\"></a>  CMFCTasksPane::GetGroupCount","source":"<a name=\"cmfctaskspane__getgroupcount\"></a>  CMFCTasksPane::GetGroupCount"},{"content":"Returns the total number of groups.","pos":[29204,29239]},{"pos":[29294,29306],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The total number of groups in the task pane.","pos":[29310,29354]},{"pos":[29364,29443],"content":"<bpt id=\"p1\">&lt;a name=\"cmfctaskspane__getgrouplocation\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCTasksPane::GetGroupLocation","linkify":"<a name=\"cmfctaskspane__getgrouplocation\"></a>  CMFCTasksPane::GetGroupLocation","source":"<a name=\"cmfctaskspane__getgrouplocation\"></a>  CMFCTasksPane::GetGroupLocation"},{"content":"Returns the internal group index for the specified group.","pos":[29447,29504]},{"pos":[29617,29627],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`pGroup`</ph>","pos":[29631,29644],"source":"[in] `pGroup`"},{"content":"Specifies the task group whose location is retrieved.","pos":[29648,29701]},{"content":"[out] <ph id=\"ph1\">`nGroup`</ph>","pos":[29708,29722],"source":"[out] `nGroup`"},{"content":"Contains the zero-based index of the task group.","pos":[29726,29774]},{"pos":[29784,29796],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[29800,29855],"content":"<ph id=\"ph1\">`TRUE`</ph> if the task group was found; otherwise, <ph id=\"ph2\">`FALSE`</ph>.","source":"`TRUE` if the task group was found; otherwise, `FALSE`."},{"pos":[29865,29948],"content":"<bpt id=\"p1\">&lt;a name=\"cmfctaskspane__getgroupvertoffset\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCTasksPane::GetGroupVertOffset","linkify":"<a name=\"cmfctaskspane__getgroupvertoffset\"></a>  CMFCTasksPane::GetGroupVertOffset","source":"<a name=\"cmfctaskspane__getgroupvertoffset\"></a>  CMFCTasksPane::GetGroupVertOffset"},{"content":"Returns the vertical offset of a group.","pos":[29952,29991]},{"pos":[30051,30063],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The vertical offset of a group, in pixels.","pos":[30067,30109]},{"pos":[30119,30192],"content":"<bpt id=\"p1\">&lt;a name=\"cmfctaskspane__gethorzmargin\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCTasksPane::GetHorzMargin","linkify":"<a name=\"cmfctaskspane__gethorzmargin\"></a>  CMFCTasksPane::GetHorzMargin","source":"<a name=\"cmfctaskspane__gethorzmargin\"></a>  CMFCTasksPane::GetHorzMargin"},{"content":"Returns the horizontal spacing between a task pane and the edge of the client area.","pos":[30196,30279]},{"pos":[30334,30346],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The horizontal spacing between a task pane and the edge of the client area.","pos":[30350,30425]},{"pos":[30435,30442],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The default spacing between a task pane and the edge of the client area is 12 pixels.","pos":[30446,30531]},{"pos":[30541,30612],"content":"<bpt id=\"p1\">&lt;a name=\"cmfctaskspane__getnextpages\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCTasksPane::GetNextPages","linkify":"<a name=\"cmfctaskspane__getnextpages\"></a>  CMFCTasksPane::GetNextPages","source":"<a name=\"cmfctaskspane__getnextpages\"></a>  CMFCTasksPane::GetNextPages"},{"pos":[30795,30805],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"pos":[30809,30828],"content":"[in] <ph id=\"ph1\">`lstNextPages`</ph>","source":"[in] `lstNextPages`"},{"pos":[30838,30845],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[30855,30930],"content":"<bpt id=\"p1\">&lt;a name=\"cmfctaskspane__getpagebygroup\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCTasksPane::GetPageByGroup","linkify":"<a name=\"cmfctaskspane__getpagebygroup\"></a>  CMFCTasksPane::GetPageByGroup","source":"<a name=\"cmfctaskspane__getpagebygroup\"></a>  CMFCTasksPane::GetPageByGroup"},{"content":"Retrieves the page index for a specified group.","pos":[30934,30981]},{"pos":[31071,31081],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`nGroup`</ph>","pos":[31085,31098],"source":"[in] `nGroup`"},{"content":"Specifies the zero-based index of the task group.","pos":[31102,31151]},{"content":"[out] <ph id=\"ph1\">`nPage`</ph>","pos":[31158,31171],"source":"[out] `nPage`"},{"content":"Contains the page index for the specified group.","pos":[31175,31223]},{"content":"If the task group only contains a default page, the returned value is 0.","pos":[31224,31296]},{"pos":[31306,31318],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[31322,31378],"content":"<ph id=\"ph1\">`TRUE`</ph> if the group <ph id=\"ph2\">`nGroup`</ph> exists; otherwise, <ph id=\"ph3\">`FALSE`</ph>.","source":"`TRUE` if the group `nGroup` exists; otherwise, `FALSE`."},{"pos":[31388,31461],"content":"<bpt id=\"p1\">&lt;a name=\"cmfctaskspane__getpagescount\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCTasksPane::GetPagesCount","linkify":"<a name=\"cmfctaskspane__getpagescount\"></a>  CMFCTasksPane::GetPagesCount","source":"<a name=\"cmfctaskspane__getpagescount\"></a>  CMFCTasksPane::GetPagesCount"},{"content":"Returns the number of pages.","pos":[31465,31493]},{"pos":[31548,31560],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The number of pages in the task pane.","pos":[31564,31601]},{"pos":[31611,31690],"content":"<bpt id=\"p1\">&lt;a name=\"cmfctaskspane__getpreviouspages\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCTasksPane::GetPreviousPages","linkify":"<a name=\"cmfctaskspane__getpreviouspages\"></a>  CMFCTasksPane::GetPreviousPages","source":"<a name=\"cmfctaskspane__getpreviouspages\"></a>  CMFCTasksPane::GetPreviousPages"},{"pos":[31877,31887],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"pos":[31891,31910],"content":"[in] <ph id=\"ph1\">`lstPrevPages`</ph>","source":"[in] `lstPrevPages`"},{"pos":[31920,31927],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[31937,32016],"content":"<bpt id=\"p1\">&lt;a name=\"cmfctaskspane__getscrollbarctrl\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCTasksPane::GetScrollBarCtrl","linkify":"<a name=\"cmfctaskspane__getscrollbarctrl\"></a>  CMFCTasksPane::GetScrollBarCtrl","source":"<a name=\"cmfctaskspane__getscrollbarctrl\"></a>  CMFCTasksPane::GetScrollBarCtrl"},{"pos":[32201,32211],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"pos":[32215,32226],"content":"[in] <ph id=\"ph1\">`nBar`</ph>","source":"[in] `nBar`"},{"pos":[32236,32248],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[32258,32265],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[32275,32336],"content":"<bpt id=\"p1\">&lt;a name=\"cmfctaskspane__gettask\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCTasksPane::GetTask","linkify":"<a name=\"cmfctaskspane__gettask\"></a>  CMFCTasksPane::GetTask","source":"<a name=\"cmfctaskspane__gettask\"></a>  CMFCTasksPane::GetTask"},{"content":"Retrieves a task.","pos":[32340,32357]},{"pos":[32453,32463],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`nGroup`</ph>","pos":[32467,32480],"source":"[in] `nGroup`"},{"content":"Specifies the zero-based index of the group that contains the task.","pos":[32484,32551]},{"content":"[in] <ph id=\"ph1\">`nTask`</ph>","pos":[32558,32570],"source":"[in] `nTask`"},{"content":"Specifies the zero-based index of the task in the list specified by <ph id=\"ph1\">`nGroup`</ph>.","pos":[32574,32651],"source":" Specifies the zero-based index of the task in the list specified by `nGroup`."},{"pos":[32661,32673],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The task at the specified index.","pos":[32677,32709]},{"pos":[32719,32790],"content":"<bpt id=\"p1\">&lt;a name=\"cmfctaskspane__gettaskcount\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCTasksPane::GetTaskCount","linkify":"<a name=\"cmfctaskspane__gettaskcount\"></a>  CMFCTasksPane::GetTaskCount","source":"<a name=\"cmfctaskspane__gettaskcount\"></a>  CMFCTasksPane::GetTaskCount"},{"content":"Returns the number of tasks in a specified group.","pos":[32794,32843]},{"pos":[32907,32917],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`nGroup`</ph>","pos":[32921,32934],"source":"[in] `nGroup`"},{"content":"Specifies the index of the task group.","pos":[32938,32976]},{"pos":[32986,32998],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[33002,33074],"content":"The number of tasks in the specified group, or 0 if <ph id=\"ph1\">`nGroup`</ph> is invalid.","source":"The number of tasks in the specified group, or 0 if `nGroup` is invalid."},{"pos":[33084,33155],"content":"<bpt id=\"p1\">&lt;a name=\"cmfctaskspane__gettaskgroup\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCTasksPane::GetTaskGroup","linkify":"<a name=\"cmfctaskspane__gettaskgroup\"></a>  CMFCTasksPane::GetTaskGroup","source":"<a name=\"cmfctaskspane__gettaskgroup\"></a>  CMFCTasksPane::GetTaskGroup"},{"content":"Returns a task group for a specified group index.","pos":[33159,33208]},{"pos":[33292,33302],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`nGroup`</ph>","pos":[33306,33319],"source":"[in] `nGroup`"},{"content":"Specifies the zero-based index of the group to retrieve.","pos":[33323,33379]},{"pos":[33389,33401],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The task group at the specified index.","pos":[33405,33443]},{"pos":[33453,33530],"content":"<bpt id=\"p1\">&lt;a name=\"cmfctaskspane__gettasklocation\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCTasksPane::GetTaskLocation","linkify":"<a name=\"cmfctaskspane__gettasklocation\"></a>  CMFCTasksPane::GetTaskLocation","source":"<a name=\"cmfctaskspane__gettasklocation\"></a>  CMFCTasksPane::GetTaskLocation"},{"content":"Returns the group and the index for a specified task.","pos":[33534,33587]},{"pos":[33890,33900],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`uiCommandID`</ph>","pos":[33904,33922],"source":"[in] `uiCommandID`"},{"content":"Specifies the command ID of the task to find.","pos":[33926,33971]},{"content":"[out] <ph id=\"ph1\">`nGroup`</ph>","pos":[33978,33992],"source":"[out] `nGroup`"},{"content":"Contains the group index of the task.","pos":[33996,34033]},{"content":"[out] <ph id=\"ph1\">`nTask`</ph>","pos":[34040,34053],"source":"[out] `nTask`"},{"content":"Contains the index of the task in the task group.","pos":[34057,34106]},{"content":"[in] <ph id=\"ph1\">`hwndTask`</ph>","pos":[34113,34128],"source":"[in] `hwndTask`"},{"content":"Specifies the window associated with the task.","pos":[34132,34178]},{"content":"[in] <ph id=\"ph1\">`pTask`</ph>","pos":[34185,34197],"source":"[in] `pTask`"},{"content":"Specifies the task to find.","pos":[34201,34228]},{"pos":[34238,34250],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[34254,34338],"content":"<ph id=\"ph1\">`TRUE`</ph> if the task location was found; <ph id=\"ph2\">`FALSE`</ph> if the specified task does not exist.","source":"`TRUE` if the task location was found; `FALSE` if the specified task does not exist."},{"pos":[34348,34355],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This method retrieves the group index and task index for the specified task.","pos":[34359,34435]},{"content":"If the method returns <ph id=\"ph1\">`FALSE`</ph>, <ph id=\"ph2\">`nGroup`</ph> and <ph id=\"ph3\">`nTask`</ph> are set to -1.","pos":[34436,34502],"source":" If the method returns `FALSE`, `nGroup` and `nTask` are set to -1."},{"pos":[34512,34595],"content":"<bpt id=\"p1\">&lt;a name=\"cmfctaskspane__gettaskshorzoffset\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCTasksPane::GetTasksHorzOffset","linkify":"<a name=\"cmfctaskspane__gettaskshorzoffset\"></a>  CMFCTasksPane::GetTasksHorzOffset","source":"<a name=\"cmfctaskspane__gettaskshorzoffset\"></a>  CMFCTasksPane::GetTasksHorzOffset"},{"content":"Returns the horizontal offset of tasks.","pos":[34599,34638]},{"pos":[34698,34710],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The horizontal offset of tasks from the left and right edges of their parent groups.","pos":[34714,34798]},{"pos":[34808,34815],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The default horizontal offset of tasks is 12 pixels.","pos":[34819,34871]},{"pos":[34881,34972],"content":"<bpt id=\"p1\">&lt;a name=\"cmfctaskspane__gettasksiconhorzoffset\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCTasksPane::GetTasksIconHorzOffset","linkify":"<a name=\"cmfctaskspane__gettasksiconhorzoffset\"></a>  CMFCTasksPane::GetTasksIconHorzOffset","source":"<a name=\"cmfctaskspane__gettasksiconhorzoffset\"></a>  CMFCTasksPane::GetTasksIconHorzOffset"},{"pos":[35139,35151],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[35161,35168],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[35178,35269],"content":"<bpt id=\"p1\">&lt;a name=\"cmfctaskspane__gettasksiconvertoffset\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCTasksPane::GetTasksIconVertOffset","linkify":"<a name=\"cmfctaskspane__gettasksiconvertoffset\"></a>  CMFCTasksPane::GetTasksIconVertOffset","source":"<a name=\"cmfctaskspane__gettasksiconvertoffset\"></a>  CMFCTasksPane::GetTasksIconVertOffset"},{"pos":[35436,35448],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[35458,35465],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[35475,35548],"content":"<bpt id=\"p1\">&lt;a name=\"cmfctaskspane__getvertmargin\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCTasksPane::GetVertMargin","linkify":"<a name=\"cmfctaskspane__getvertmargin\"></a>  CMFCTasksPane::GetVertMargin","source":"<a name=\"cmfctaskspane__getvertmargin\"></a>  CMFCTasksPane::GetVertMargin"},{"content":"Returns the vertical margin between a task pane and the edges of the client area.","pos":[35552,35633]},{"pos":[35688,35700],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The vertical margin between a task pane and the edges of the client area.","pos":[35704,35777]},{"pos":[35787,35794],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The vertical margin is the space between a task pane and the edges of the client area.","pos":[35798,35884]},{"content":"The default value of the vertical margin is 12 pixels.","pos":[35885,35939]},{"pos":[35949,36046],"content":"<bpt id=\"p1\">&lt;a name=\"cmfctaskspane__isaccessibilitycompatible\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCTasksPane::IsAccessibilityCompatible","linkify":"<a name=\"cmfctaskspane__isaccessibilitycompatible\"></a>  CMFCTasksPane::IsAccessibilityCompatible","source":"<a name=\"cmfctaskspane__isaccessibilitycompatible\"></a>  CMFCTasksPane::IsAccessibilityCompatible"},{"pos":[36216,36228],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[36238,36245],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[36255,36338],"content":"<bpt id=\"p1\">&lt;a name=\"cmfctaskspane__isanimationenabled\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCTasksPane::IsAnimationEnabled","linkify":"<a name=\"cmfctaskspane__isanimationenabled\"></a>  CMFCTasksPane::IsAnimationEnabled","source":"<a name=\"cmfctaskspane__isanimationenabled\"></a>  CMFCTasksPane::IsAnimationEnabled"},{"content":"Indicates whether animation is enabled.","pos":[36342,36381]},{"pos":[36442,36454],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[36458,36566],"content":"<ph id=\"ph1\">`TRUE`</ph> if the animation that occurs when a user expands or collapses a group is enabled; otherwise, <ph id=\"ph2\">`FALSE`</ph>.","source":"`TRUE` if the animation that occurs when a user expands or collapses a group is enabled; otherwise, `FALSE`."},{"pos":[36576,36583],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[36587,36689],"content":"Call <bpt id=\"p1\">[</bpt>CMFCTasksPane::EnableAnimation<ept id=\"p1\">](#cmfctaskspane__enableanimation)</ept> to enable or disable animation.","source":"Call [CMFCTasksPane::EnableAnimation](#cmfctaskspane__enableanimation) to enable or disable animation."},{"pos":[36699,36784],"content":"<bpt id=\"p1\">&lt;a name=\"cmfctaskspane__isbackbuttonenabled\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCTasksPane::IsBackButtonEnabled","linkify":"<a name=\"cmfctaskspane__isbackbuttonenabled\"></a>  CMFCTasksPane::IsBackButtonEnabled","source":"<a name=\"cmfctaskspane__isbackbuttonenabled\"></a>  CMFCTasksPane::IsBackButtonEnabled"},{"content":"Indicates whether the back button is enabled.","pos":[36788,36833]},{"pos":[36895,36907],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[36911,36968],"content":"<ph id=\"ph1\">`TRUE`</ph> if the back button is enabled; otherwise, <ph id=\"ph2\">`FALSE`</ph>.","source":"`TRUE` if the back button is enabled; otherwise, `FALSE`."},{"pos":[36978,36985],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"When a user clicks the back button, the framework displays the previous task page.","pos":[36989,37071]},{"pos":[37081,37172],"content":"<bpt id=\"p1\">&lt;a name=\"cmfctaskspane__isforwardbuttonenabled\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCTasksPane::IsForwardButtonEnabled","linkify":"<a name=\"cmfctaskspane__isforwardbuttonenabled\"></a>  CMFCTasksPane::IsForwardButtonEnabled","source":"<a name=\"cmfctaskspane__isforwardbuttonenabled\"></a>  CMFCTasksPane::IsForwardButtonEnabled"},{"content":"Indicates whether the forward button is enabled.","pos":[37176,37224]},{"pos":[37289,37301],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[37305,37365],"content":"<ph id=\"ph1\">`TRUE`</ph> if the forward button is enabled; otherwise, <ph id=\"ph2\">`FALSE`</ph>.","source":"`TRUE` if the forward button is enabled; otherwise, `FALSE`."},{"pos":[37375,37382],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The forward button enables forward navigation in the history of task pages.","pos":[37386,37461]},{"pos":[37471,37562],"content":"<bpt id=\"p1\">&lt;a name=\"cmfctaskspane__isgroupcollapseenabled\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCTasksPane::IsGroupCollapseEnabled","linkify":"<a name=\"cmfctaskspane__isgroupcollapseenabled\"></a>  CMFCTasksPane::IsGroupCollapseEnabled","source":"<a name=\"cmfctaskspane__isgroupcollapseenabled\"></a>  CMFCTasksPane::IsGroupCollapseEnabled"},{"pos":[37730,37742],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[37752,37759],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[37769,37870],"content":"<bpt id=\"p1\">&lt;a name=\"cmfctaskspane__ishistorymenubuttonsenabled\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCTasksPane::IsHistoryMenuButtonsEnabled","linkify":"<a name=\"cmfctaskspane__ishistorymenubuttonsenabled\"></a>  CMFCTasksPane::IsHistoryMenuButtonsEnabled","source":"<a name=\"cmfctaskspane__ishistorymenubuttonsenabled\"></a>  CMFCTasksPane::IsHistoryMenuButtonsEnabled"},{"pos":[37874,37962],"content":"Indicates whether the <bpt id=\"p1\">**</bpt>Next<ept id=\"p1\">**</ept> and <bpt id=\"p2\">**</bpt>Previous<ept id=\"p2\">**</ept> navigation buttons have drop-down menus.","source":"Indicates whether the **Next** and **Previous** navigation buttons have drop-down menus."},{"pos":[38032,38044],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[38048,38148],"content":"<ph id=\"ph1\">`TRUE`</ph> if the <bpt id=\"p1\">**</bpt>Next<ept id=\"p1\">**</ept> and <bpt id=\"p2\">**</bpt>Previous<ept id=\"p2\">**</ept> navigation buttons have drop-down menus; otherwise, <ph id=\"ph2\">`FALSE`</ph>.","source":"`TRUE` if the **Next** and **Previous** navigation buttons have drop-down menus; otherwise, `FALSE`."},{"pos":[38158,38257],"content":"<bpt id=\"p1\">&lt;a name=\"cmfctaskspane__isnavigationtoolbarenabled\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCTasksPane::IsNavigationToolbarEnabled","linkify":"<a name=\"cmfctaskspane__isnavigationtoolbarenabled\"></a>  CMFCTasksPane::IsNavigationToolbarEnabled","source":"<a name=\"cmfctaskspane__isnavigationtoolbarenabled\"></a>  CMFCTasksPane::IsNavigationToolbarEnabled"},{"content":"Indicates whether the navigation toolbar is enabled.","pos":[38261,38313]},{"pos":[38382,38394],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[38398,38462],"content":"<ph id=\"ph1\">`TRUE`</ph> if the navigation toolbar is enabled; otherwise, <ph id=\"ph2\">`FALSE`</ph>.","source":"`TRUE` if the navigation toolbar is enabled; otherwise, `FALSE`."},{"pos":[38472,38537],"content":"<bpt id=\"p1\">&lt;a name=\"cmfctaskspane__istoolbox\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCTasksPane::IsToolBox","linkify":"<a name=\"cmfctaskspane__istoolbox\"></a>  CMFCTasksPane::IsToolBox","source":"<a name=\"cmfctaskspane__istoolbox\"></a>  CMFCTasksPane::IsToolBox"},{"pos":[38700,38712],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[38722,38729],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[38739,38824],"content":"<bpt id=\"p1\">&lt;a name=\"cmfctaskspane__iswraplabelsenabled\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCTasksPane::IsWrapLabelsEnabled","linkify":"<a name=\"cmfctaskspane__iswraplabelsenabled\"></a>  CMFCTasksPane::IsWrapLabelsEnabled","source":"<a name=\"cmfctaskspane__iswraplabelsenabled\"></a>  CMFCTasksPane::IsWrapLabelsEnabled"},{"content":"Indicates whether the task pane wraps words in labels.","pos":[38828,38882]},{"pos":[38944,38956],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[38960,39018],"content":"<ph id=\"ph1\">`TRUE`</ph> if words in labels are wrapped; otherwise, <ph id=\"ph2\">`FALSE`</ph>.","source":"`TRUE` if words in labels are wrapped; otherwise, `FALSE`."},{"pos":[39028,39111],"content":"<bpt id=\"p1\">&lt;a name=\"cmfctaskspane__iswraptasksenabled\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCTasksPane::IsWrapTasksEnabled","linkify":"<a name=\"cmfctaskspane__iswraptasksenabled\"></a>  CMFCTasksPane::IsWrapTasksEnabled","source":"<a name=\"cmfctaskspane__iswraptasksenabled\"></a>  CMFCTasksPane::IsWrapTasksEnabled"},{"content":"Specifies whether the framework wraps the task string.","pos":[39115,39169]},{"pos":[39230,39242],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[39246,39303],"content":"<ph id=\"ph1\">`TRUE`</ph> if the task string is wrapped; otherwise, <ph id=\"ph2\">`FALSE`</ph>.","source":"`TRUE` if the task string is wrapped; otherwise, `FALSE`."},{"pos":[39313,39378],"content":"<bpt id=\"p1\">&lt;a name=\"cmfctaskspane__loadstate\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCTasksPane::LoadState","linkify":"<a name=\"cmfctaskspane__loadstate\"></a>  CMFCTasksPane::LoadState","source":"<a name=\"cmfctaskspane__loadstate\"></a>  CMFCTasksPane::LoadState"},{"pos":[39619,39629],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`lpszProfileName`</ph>","pos":[39633,39655],"source":"[in] `lpszProfileName`"},{"content":"[in] <ph id=\"ph1\">`nIndex`</ph>","pos":[39659,39672],"source":" [in] `nIndex`"},{"content":"[in] <ph id=\"ph1\">`uiID`</ph>","pos":[39676,39687],"source":" [in] `uiID`"},{"pos":[39697,39709],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[39719,39726],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[39736,39829],"content":"<bpt id=\"p1\">&lt;a name=\"cmfctaskspane__onactivatetaskspanepage\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCTasksPane::OnActivateTasksPanePage","linkify":"<a name=\"cmfctaskspane__onactivatetaskspanepage\"></a>  CMFCTasksPane::OnActivateTasksPanePage","source":"<a name=\"cmfctaskspane__onactivatetaskspanepage\"></a>  CMFCTasksPane::OnActivateTasksPanePage"},{"content":"Called by the framework when it makes a task pane page active.","pos":[39833,39895]},{"pos":[39960,39967],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Override this method in a derived class to customize the appearance of the task pane page.","pos":[39971,40061]},{"pos":[40071,40134],"content":"<bpt id=\"p1\">&lt;a name=\"cmfctaskspane__oncancel\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCTasksPane::OnCancel","linkify":"<a name=\"cmfctaskspane__oncancel\"></a>  CMFCTasksPane::OnCancel","source":"<a name=\"cmfctaskspane__oncancel\"></a>  CMFCTasksPane::OnCancel"},{"pos":[40287,40294],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[40304,40373],"content":"<bpt id=\"p1\">&lt;a name=\"cmfctaskspane__onclicktask\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCTasksPane::OnClickTask","linkify":"<a name=\"cmfctaskspane__onclicktask\"></a>  CMFCTasksPane::OnClickTask","source":"<a name=\"cmfctaskspane__onclicktask\"></a>  CMFCTasksPane::OnClickTask"},{"content":"Called by the framework when the user clicks an item in the task pane.","pos":[40377,40447]},{"pos":[40592,40602],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`nGroupNumber`</ph>","pos":[40606,40625],"source":"[in] `nGroupNumber`"},{"content":"Specifies the zero-based index of the group that contains the clicked task.","pos":[40629,40704]},{"content":"[in] <ph id=\"ph1\">`nTaskNumber`</ph>","pos":[40711,40729],"source":"[in] `nTaskNumber`"},{"content":"Specifies the zero-based index of the clicked task.","pos":[40733,40784]},{"content":"[in] <ph id=\"ph1\">`uiCommandID`</ph>","pos":[40791,40809],"source":"[in] `uiCommandID`"},{"content":"Specifies the command ID associated with the task.","pos":[40813,40863]},{"content":"[in] <ph id=\"ph1\">`dwUserData`</ph>","pos":[40870,40887],"source":"[in] `dwUserData`"},{"content":"Contains user-defined data associated with the clicked task.","pos":[40891,40951]},{"pos":[40961,40968],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The framework calls this method when a user clicks a task.","pos":[40972,41030]},{"content":"By default, the framework checks the command ID associated with the clicked task and, if it is not zero, sends the <ph id=\"ph1\">`WM_COMMAND`</ph> message to the owner of the task pane control.","pos":[41031,41205],"source":" By default, the framework checks the command ID associated with the clicked task and, if it is not zero, sends the `WM_COMMAND` message to the owner of the task pane control."},{"content":"Override this method in a derived class to execute custom code when a task is clicked.","pos":[41212,41298]},{"pos":[41308,41363],"content":"<bpt id=\"p1\">&lt;a name=\"cmfctaskspane__onok\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCTasksPane::OnOK","linkify":"<a name=\"cmfctaskspane__onok\"></a>  CMFCTasksPane::OnOK","source":"<a name=\"cmfctaskspane__onok\"></a>  CMFCTasksPane::OnOK"},{"pos":[41512,41519],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[41529,41610],"content":"<bpt id=\"p1\">&lt;a name=\"cmfctaskspane__onpressbackbutton\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCTasksPane::OnPressBackButton","linkify":"<a name=\"cmfctaskspane__onpressbackbutton\"></a>  CMFCTasksPane::OnPressBackButton","source":"<a name=\"cmfctaskspane__onpressbackbutton\"></a>  CMFCTasksPane::OnPressBackButton"},{"content":"Called by the framework when the user clicks the back button.","pos":[41614,41675]},{"pos":[41734,41741],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"By default, the framework displays the previously viewed page.","pos":[41745,41807]},{"content":"Override this method in a derived class to execute custom code when the user clicks the back button.","pos":[41814,41914]},{"pos":[41924,42011],"content":"<bpt id=\"p1\">&lt;a name=\"cmfctaskspane__onpressforwardbutton\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCTasksPane::OnPressForwardButton","linkify":"<a name=\"cmfctaskspane__onpressforwardbutton\"></a>  CMFCTasksPane::OnPressForwardButton","source":"<a name=\"cmfctaskspane__onpressforwardbutton\"></a>  CMFCTasksPane::OnPressForwardButton"},{"content":"Called by the framework when the user clicks the forward navigation button.","pos":[42015,42090]},{"pos":[42152,42159],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[42163,42264],"content":"By default, the framework displays the page that the user viewed before clicking the <bpt id=\"p1\">**</bpt>Back<ept id=\"p1\">**</ept> button.","source":"By default, the framework displays the page that the user viewed before clicking the **Back** button."},{"content":"Override this method in a derived class to execute custom code when the user clicks the forward button.","pos":[42271,42374]},{"pos":[42384,42465],"content":"<bpt id=\"p1\">&lt;a name=\"cmfctaskspane__onpresshomebutton\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCTasksPane::OnPressHomeButton","linkify":"<a name=\"cmfctaskspane__onpresshomebutton\"></a>  CMFCTasksPane::OnPressHomeButton","source":"<a name=\"cmfctaskspane__onpresshomebutton\"></a>  CMFCTasksPane::OnPressHomeButton"},{"content":"Called by the framework when the user clicks the home navigation button.","pos":[42469,42541]},{"pos":[42600,42607],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"By default, the framework displays the default page for the task group.","pos":[42611,42682]},{"content":"Override this method in a derived class to execute custom code when the user clicks the home navigation button.","pos":[42689,42800]},{"pos":[42810,42893],"content":"<bpt id=\"p1\">&lt;a name=\"cmfctaskspane__onpressotherbutton\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCTasksPane::OnPressOtherButton","linkify":"<a name=\"cmfctaskspane__onpressotherbutton\"></a>  CMFCTasksPane::OnPressOtherButton","source":"<a name=\"cmfctaskspane__onpressotherbutton\"></a>  CMFCTasksPane::OnPressOtherButton"},{"pos":[43111,43121],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`pbtn`</ph>","pos":[43125,43136],"source":"[in] `pbtn`"},{"content":"[in] <ph id=\"ph1\">`pWndOwner`</ph>","pos":[43140,43156],"source":" [in] `pWndOwner`"},{"pos":[43166,43173],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[43183,43254],"content":"<bpt id=\"p1\">&lt;a name=\"cmfctaskspane__onsetaccdata\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCTasksPane::OnSetAccData","linkify":"<a name=\"cmfctaskspane__onsetaccdata\"></a>  CMFCTasksPane::OnSetAccData","source":"<a name=\"cmfctaskspane__onsetaccdata\"></a>  CMFCTasksPane::OnSetAccData"},{"pos":[43420,43430],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"pos":[43434,43445],"content":"[in] <ph id=\"ph1\">`lVal`</ph>","source":"[in] `lVal`"},{"pos":[43455,43467],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[43477,43484],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[43494,43567],"content":"<bpt id=\"p1\">&lt;a name=\"cmfctaskspane__onupdatecmdui\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCTasksPane::OnUpdateCmdUI","linkify":"<a name=\"cmfctaskspane__onupdatecmdui\"></a>  CMFCTasksPane::OnUpdateCmdUI","source":"<a name=\"cmfctaskspane__onupdatecmdui\"></a>  CMFCTasksPane::OnUpdateCmdUI"},{"pos":[43779,43789],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`pTarget`</ph>","pos":[43793,43807],"source":"[in] `pTarget`"},{"content":"[in] <ph id=\"ph1\">`bDisableIfNoHndler`</ph>","pos":[43811,43836],"source":" [in] `bDisableIfNoHndler`"},{"pos":[43846,43853],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[43863,43948],"content":"<bpt id=\"p1\">&lt;a name=\"cmfctaskspane__pretranslatemessage\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCTasksPane::PreTranslateMessage","linkify":"<a name=\"cmfctaskspane__pretranslatemessage\"></a>  CMFCTasksPane::PreTranslateMessage","source":"<a name=\"cmfctaskspane__pretranslatemessage\"></a>  CMFCTasksPane::PreTranslateMessage"},{"pos":[44121,44131],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"pos":[44135,44146],"content":"[in] <ph id=\"ph1\">`pMsg`</ph>","source":"[in] `pMsg`"},{"pos":[44156,44168],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[44178,44185],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[44195,44266],"content":"<bpt id=\"p1\">&lt;a name=\"cmfctaskspane__recalclayout\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCTasksPane::RecalcLayout","linkify":"<a name=\"cmfctaskspane__recalclayout\"></a>  CMFCTasksPane::RecalcLayout","source":"<a name=\"cmfctaskspane__recalclayout\"></a>  CMFCTasksPane::RecalcLayout"},{"pos":[44434,44444],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"pos":[44448,44462],"content":"[in] <ph id=\"ph1\">`bRedraw`</ph>","source":"[in] `bRedraw`"},{"pos":[44472,44479],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[44489,44566],"content":"<bpt id=\"p1\">&lt;a name=\"cmfctaskspane__removeallgroups\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCTasksPane::RemoveAllGroups","linkify":"<a name=\"cmfctaskspane__removeallgroups\"></a>  CMFCTasksPane::RemoveAllGroups","source":"<a name=\"cmfctaskspane__removeallgroups\"></a>  CMFCTasksPane::RemoveAllGroups"},{"content":"Removes all groups on the specified page.","pos":[44570,44611]},{"pos":[44676,44686],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`nPageIdx`</ph>","pos":[44690,44705],"source":"[in] `nPageIdx`"},{"content":"Specifies the zero-based index of the page.","pos":[44709,44752]},{"pos":[44762,44769],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[44773,44875],"content":"Removes all groups on the page specified by <ph id=\"ph1\">`nPageIdx`</ph>, or all groups if there is only a default page.","source":"Removes all groups on the page specified by `nPageIdx`, or all groups if there is only a default page."},{"pos":[44885,44960],"content":"<bpt id=\"p1\">&lt;a name=\"cmfctaskspane__removeallpages\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCTasksPane::RemoveAllPages","linkify":"<a name=\"cmfctaskspane__removeallpages\"></a>  CMFCTasksPane::RemoveAllPages","source":"<a name=\"cmfctaskspane__removeallpages\"></a>  CMFCTasksPane::RemoveAllPages"},{"content":"Removes all pages from the task pane except the default (first) page.","pos":[44964,45033]},{"pos":[45081,45156],"content":"<bpt id=\"p1\">&lt;a name=\"cmfctaskspane__removealltasks\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCTasksPane::RemoveAllTasks","linkify":"<a name=\"cmfctaskspane__removealltasks\"></a>  CMFCTasksPane::RemoveAllTasks","source":"<a name=\"cmfctaskspane__removealltasks\"></a>  CMFCTasksPane::RemoveAllTasks"},{"content":"Removes all tasks from the specified group.","pos":[45160,45203]},{"pos":[45261,45271],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`nGroup`</ph>","pos":[45275,45288],"source":"[in] `nGroup`"},{"content":"Specifies the zero-based index of the group.","pos":[45292,45336]},{"pos":[45346,45415],"content":"<bpt id=\"p1\">&lt;a name=\"cmfctaskspane__removegroup\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCTasksPane::RemoveGroup","linkify":"<a name=\"cmfctaskspane__removegroup\"></a>  CMFCTasksPane::RemoveGroup","source":"<a name=\"cmfctaskspane__removegroup\"></a>  CMFCTasksPane::RemoveGroup"},{"content":"Removes a group.","pos":[45419,45435]},{"pos":[45490,45500],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`nGroup`</ph>","pos":[45504,45517],"source":"[in] `nGroup`"},{"content":"Specifies the zero-based index of the group to remove.","pos":[45521,45575]},{"pos":[45585,45592],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This method removes a single group.","pos":[45596,45631]},{"content":"To remove all groups, call <bpt id=\"p1\">[</bpt>CMFCTasksPane::RemoveAllGroups<ept id=\"p1\">](#cmfctaskspane__removeallgroups)</ept> instead.","pos":[45632,45733],"source":" To remove all groups, call [CMFCTasksPane::RemoveAllGroups](#cmfctaskspane__removeallgroups) instead."},{"content":"When the framework removes a group, all tasks and user windows associated with it are destroyed.","pos":[45740,45836]},{"pos":[45846,45913],"content":"<bpt id=\"p1\">&lt;a name=\"cmfctaskspane__removepage\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCTasksPane::RemovePage","linkify":"<a name=\"cmfctaskspane__removepage\"></a>  CMFCTasksPane::RemovePage","source":"<a name=\"cmfctaskspane__removepage\"></a>  CMFCTasksPane::RemovePage"},{"content":"Removes a specified page from the task pane.","pos":[45917,45961]},{"pos":[46017,46027],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`nPageIdx`</ph>","pos":[46031,46046],"source":"[in] `nPageIdx`"},{"content":"Specifies the zero-based index of the page to remove.","pos":[46050,46103]},{"pos":[46113,46180],"content":"<bpt id=\"p1\">&lt;a name=\"cmfctaskspane__removetask\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCTasksPane::RemoveTask","linkify":"<a name=\"cmfctaskspane__removetask\"></a>  CMFCTasksPane::RemoveTask","source":"<a name=\"cmfctaskspane__removetask\"></a>  CMFCTasksPane::RemoveTask"},{"content":"Removes a task from a task group.","pos":[46184,46217]},{"pos":[46320,46330],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`nGroup`</ph>","pos":[46334,46347],"source":"[in] `nGroup`"},{"content":"Specifies the zero-based index of the task group that contains the task to remove.","pos":[46351,46433]},{"content":"[in] <ph id=\"ph1\">`nTask`</ph>","pos":[46440,46452],"source":"[in] `nTask`"},{"content":"Specifies the zero-based index of the task to remove.","pos":[46456,46509]},{"content":"[in] <ph id=\"ph1\">`bRedraw`</ph>","pos":[46516,46530],"source":"[in] `bRedraw`"},{"content":"<ph id=\"ph1\"> `TRUE`</ph> to redraw the task pane; otherwise, <ph id=\"ph2\">`FALSE`</ph>.","pos":[46533,46585],"source":" `TRUE` to redraw the task pane; otherwise, `FALSE`."},{"pos":[46595,46607],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[46611,46686],"content":"<ph id=\"ph1\">`TRUE`</ph> if the function succeeds; <ph id=\"ph2\">`FALSE`</ph> if <ph id=\"ph3\">`nGroup`</ph> or <ph id=\"ph4\">`nTask`</ph> is invalid.","source":"`TRUE` if the function succeeds; `FALSE` if `nGroup` or `nTask` is invalid."},{"pos":[46696,46761],"content":"<bpt id=\"p1\">&lt;a name=\"cmfctaskspane__savestate\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCTasksPane::SaveState","linkify":"<a name=\"cmfctaskspane__savestate\"></a>  CMFCTasksPane::SaveState","source":"<a name=\"cmfctaskspane__savestate\"></a>  CMFCTasksPane::SaveState"},{"pos":[47002,47012],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`lpszProfileName`</ph>","pos":[47016,47038],"source":"[in] `lpszProfileName`"},{"content":"[in] <ph id=\"ph1\">`nIndex`</ph>","pos":[47042,47055],"source":" [in] `nIndex`"},{"content":"[in] <ph id=\"ph1\">`uiID`</ph>","pos":[47059,47070],"source":" [in] `uiID`"},{"pos":[47080,47092],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[47102,47109],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[47119,47184],"content":"<bpt id=\"p1\">&lt;a name=\"cmfctaskspane__serialize\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCTasksPane::Serialize","linkify":"<a name=\"cmfctaskspane__serialize\"></a>  CMFCTasksPane::Serialize","source":"<a name=\"cmfctaskspane__serialize\"></a>  CMFCTasksPane::Serialize"},{"pos":[47350,47360],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"pos":[47364,47373],"content":"[in] <ph id=\"ph1\">`ar`</ph>","source":"[in] `ar`"},{"pos":[47383,47390],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[47400,47473],"content":"<bpt id=\"p1\">&lt;a name=\"cmfctaskspane__setactivepage\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCTasksPane::SetActivePage","linkify":"<a name=\"cmfctaskspane__setactivepage\"></a>  CMFCTasksPane::SetActivePage","source":"<a name=\"cmfctaskspane__setactivepage\"></a>  CMFCTasksPane::SetActivePage"},{"content":"Makes the specified page in the task pane active.","pos":[47477,47526]},{"pos":[47585,47595],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`nPageIdx`</ph>","pos":[47599,47614],"source":"[in] `nPageIdx`"},{"content":"Specifies the zero-based index of the page to display.","pos":[47618,47672]},{"pos":[47682,47689],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[47693,47742],"content":"This method asserts if the <ph id=\"ph1\">`nPageIdx`</ph> is invalid.","source":"This method asserts if the `nPageIdx` is invalid."},{"pos":[47752,47819],"content":"<bpt id=\"p1\">&lt;a name=\"cmfctaskspane__setcaption\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCTasksPane::SetCaption","linkify":"<a name=\"cmfctaskspane__setcaption\"></a>  CMFCTasksPane::SetCaption","source":"<a name=\"cmfctaskspane__setcaption\"></a>  CMFCTasksPane::SetCaption"},{"content":"Sets the caption name of a task pane.","pos":[47823,47860]},{"pos":[47920,47930],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`lpszName`</ph>","pos":[47934,47949],"source":"[in] `lpszName`"},{"content":"Specifies the caption name.","pos":[47953,47980]},{"pos":[47990,47997],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"If a task pane has multiple pages, the default page has the caption that was set by using this function.","pos":[48001,48105]},{"pos":[48115,48204],"content":"<bpt id=\"p1\">&lt;a name=\"cmfctaskspane__setgroupcaptionheight\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCTasksPane::SetGroupCaptionHeight","linkify":"<a name=\"cmfctaskspane__setgroupcaptionheight\"></a>  CMFCTasksPane::SetGroupCaptionHeight","source":"<a name=\"cmfctaskspane__setgroupcaptionheight\"></a>  CMFCTasksPane::SetGroupCaptionHeight"},{"content":"Sets the height of a group caption.","pos":[48208,48243]},{"pos":[48308,48318],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`n`</ph>","pos":[48322,48330],"source":"[in] `n`"},{"content":"Specifies the caption height.","pos":[48334,48363]},{"pos":[48373,48380],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Call this method to customize the margins of the task pane elements.","pos":[48384,48452]},{"content":"If <ph id=\"ph1\">`n`</ph> is -1, the framework determines the margin value by using the visual manager ( <ph id=\"ph2\">`CMFCVisualManager::GetTasksPaneGroupCaptionHeight`</ph>).","pos":[48459,48598],"source":"If `n` is -1, the framework determines the margin value by using the visual manager ( `CMFCVisualManager::GetTasksPaneGroupCaptionHeight`)."},{"content":"The default caption height is 25 pixels.","pos":[48599,48639]},{"pos":[48649,48746],"content":"<bpt id=\"p1\">&lt;a name=\"cmfctaskspane__setgroupcaptionhorzoffset\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCTasksPane::SetGroupCaptionHorzOffset","linkify":"<a name=\"cmfctaskspane__setgroupcaptionhorzoffset\"></a>  CMFCTasksPane::SetGroupCaptionHorzOffset","source":"<a name=\"cmfctaskspane__setgroupcaptionhorzoffset\"></a>  CMFCTasksPane::SetGroupCaptionHorzOffset"},{"content":"Sets the horizontal offset of a group caption.","pos":[48750,48796]},{"pos":[48865,48875],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`n`</ph>","pos":[48879,48887],"source":"[in] `n`"},{"content":"Specifies the horizontal offset of the group caption.","pos":[48891,48944]},{"pos":[48954,49051],"content":"<bpt id=\"p1\">&lt;a name=\"cmfctaskspane__setgroupcaptionvertoffset\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCTasksPane::SetGroupCaptionVertOffset","linkify":"<a name=\"cmfctaskspane__setgroupcaptionvertoffset\"></a>  CMFCTasksPane::SetGroupCaptionVertOffset","source":"<a name=\"cmfctaskspane__setgroupcaptionvertoffset\"></a>  CMFCTasksPane::SetGroupCaptionVertOffset"},{"content":"Sets the vertical offset of a group caption.","pos":[49055,49099]},{"pos":[49168,49178],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`n`</ph>","pos":[49182,49190],"source":"[in] `n`"},{"content":"Specifies the vertical offset, in pixels, of the group caption.","pos":[49194,49257]},{"pos":[49267,49338],"content":"<bpt id=\"p1\">&lt;a name=\"cmfctaskspane__setgroupname\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCTasksPane::SetGroupName","linkify":"<a name=\"cmfctaskspane__setgroupname\"></a>  CMFCTasksPane::SetGroupName","source":"<a name=\"cmfctaskspane__setgroupname\"></a>  CMFCTasksPane::SetGroupName"},{"content":"Sets a group name.","pos":[49342,49360]},{"pos":[49450,49460],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`nGroup`</ph>","pos":[49464,49477],"source":"[in] `nGroup`"},{"content":"Specifies the zero-based index of the group.","pos":[49481,49525]},{"content":"[in] <ph id=\"ph1\">`lpszGroupName`</ph>","pos":[49532,49552],"source":"[in] `lpszGroupName`"},{"content":"Specifies the name of the group.","pos":[49556,49588]},{"pos":[49598,49610],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[49614,49680],"content":"<ph id=\"ph1\">`TRUE`</ph> if the group name was successfully set; otherwise, <ph id=\"ph2\">`FALSE`</ph>.","source":"`TRUE` if the group name was successfully set; otherwise, `FALSE`."},{"pos":[49690,49771],"content":"<bpt id=\"p1\">&lt;a name=\"cmfctaskspane__setgrouptextcolor\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCTasksPane::SetGroupTextColor","linkify":"<a name=\"cmfctaskspane__setgrouptextcolor\"></a>  CMFCTasksPane::SetGroupTextColor","source":"<a name=\"cmfctaskspane__setgrouptextcolor\"></a>  CMFCTasksPane::SetGroupTextColor"},{"content":"Sets the text color for a group caption.","pos":[49775,49815]},{"pos":[49943,49953],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`nGroup`</ph>","pos":[49957,49970],"source":"[in] `nGroup`"},{"content":"Specifies the zero-based index of the group.","pos":[49974,50018]},{"content":"[in] <ph id=\"ph1\">`color`</ph>","pos":[50025,50037],"source":"[in] `color`"},{"content":"Specifies the text color.","pos":[50041,50066]},{"content":"[in] <ph id=\"ph1\">`colorHot`</ph>","pos":[50073,50088],"source":"[in] `colorHot`"},{"content":"Specifies the text color for the highlighted group.","pos":[50092,50143]},{"content":"If -1, the default highlight color is used.","pos":[50144,50187]},{"pos":[50197,50209],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[50213,50289],"content":"<ph id=\"ph1\">`TRUE`</ph> if the group text color was successfully changed; otherwise, <ph id=\"ph2\">`FALSE`</ph>.","source":"`TRUE` if the group text color was successfully changed; otherwise, `FALSE`."},{"pos":[50299,50382],"content":"<bpt id=\"p1\">&lt;a name=\"cmfctaskspane__setgroupvertoffset\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCTasksPane::SetGroupVertOffset","linkify":"<a name=\"cmfctaskspane__setgroupvertoffset\"></a>  CMFCTasksPane::SetGroupVertOffset","source":"<a name=\"cmfctaskspane__setgroupvertoffset\"></a>  CMFCTasksPane::SetGroupVertOffset"},{"content":"Sets the vertical offset for a group.","pos":[50386,50423]},{"pos":[50485,50495],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`n`</ph>","pos":[50499,50507],"source":"[in] `n`"},{"content":"Specifies the vertical offset.","pos":[50511,50541]},{"pos":[50551,50558],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The vertical offset is the distance between a task group and the border of the task pane.","pos":[50562,50651]},{"content":"Call this method to customize the margins of task pane elements.","pos":[50658,50722]},{"content":"If <ph id=\"ph1\">`n`</ph> is -1, the framework determines the margin value by using the visual manager ( <ph id=\"ph2\">`CMFCVisualManager::GetTasksPaneGroupVertOffset`</ph>).","pos":[50723,50859],"source":" If `n` is -1, the framework determines the margin value by using the visual manager ( `CMFCVisualManager::GetTasksPaneGroupVertOffset`)."},{"content":"The default offset is 15 pixels.","pos":[50860,50892]},{"pos":[50902,50975],"content":"<bpt id=\"p1\">&lt;a name=\"cmfctaskspane__sethorzmargin\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCTasksPane::SetHorzMargin","linkify":"<a name=\"cmfctaskspane__sethorzmargin\"></a>  CMFCTasksPane::SetHorzMargin","source":"<a name=\"cmfctaskspane__sethorzmargin\"></a>  CMFCTasksPane::SetHorzMargin"},{"content":"Sets the horizontal margin.","pos":[50979,51006]},{"pos":[51063,51073],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`n`</ph>","pos":[51077,51085],"source":"[in] `n`"},{"content":"Specifies the margin, in pixels.","pos":[51089,51121]},{"pos":[51131,51138],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The horizontal margin is the distance between a task pane and the top or bottom edge of the client area.","pos":[51142,51246]},{"content":"If n is -1, and the framework determines the margin value by using the visual manager ( <ph id=\"ph1\">`CMFCVisualManager::GetTasksPaneHorzMargin`</ph>).","pos":[51253,51386],"source":"If n is -1, and the framework determines the margin value by using the visual manager ( `CMFCVisualManager::GetTasksPaneHorzMargin`)."},{"content":"The default horizontal margin is 12 pixels.","pos":[51387,51430]},{"pos":[51440,51511],"content":"<bpt id=\"p1\">&lt;a name=\"cmfctaskspane__seticonslist\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCTasksPane::SetIconsList","linkify":"<a name=\"cmfctaskspane__seticonslist\"></a>  CMFCTasksPane::SetIconsList","source":"<a name=\"cmfctaskspane__seticonslist\"></a>  CMFCTasksPane::SetIconsList"},{"content":"Sets the image list.","pos":[51515,51535]},{"pos":[51725,51735],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`uiImageListResID`</ph>","pos":[51739,51762],"source":"[in] `uiImageListResID`"},{"content":"Specifies the resource ID of the image list.","pos":[51766,51810]},{"content":"[in] <ph id=\"ph1\">`cx`</ph>","pos":[51817,51826],"source":"[in] `cx`"},{"content":"Specifies the size of icons in the image list.","pos":[51830,51876]},{"content":"[in] <ph id=\"ph1\">`clrTransparent`</ph>","pos":[51883,51904],"source":"[in] `clrTransparent`"},{"content":"Specifies the transparent color.","pos":[51908,51940]},{"content":"[in] <ph id=\"ph1\">`hIcons`</ph>","pos":[51947,51960],"source":"[in] `hIcons`"},{"content":"Specifies the image list that contains the icons for the task pane.","pos":[51964,52031]},{"pos":[52041,52048],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The framework stores icons in an image list.","pos":[52052,52096]},{"content":"Tasks are associated with icons that are stored in that list.","pos":[52097,52158]},{"content":"This method associates an image list with the task pane control.","pos":[52165,52229]},{"content":"To set the icon for a task when you call <bpt id=\"p1\">[</bpt>CMFCTasksPane::AddTask<ept id=\"p1\">](#cmfctaskspane__addtask)</ept>, set <ph id=\"ph1\">`nTaskIcon`</ph> to the appropriate zero-based index in this image list.","pos":[52230,52393],"source":" To set the icon for a task when you call [CMFCTasksPane::AddTask](#cmfctaskspane__addtask), set `nTaskIcon` to the appropriate zero-based index in this image list."},{"pos":[52403,52478],"content":"<bpt id=\"p1\">&lt;a name=\"cmfctaskspane__setpagecaption\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCTasksPane::SetPageCaption","linkify":"<a name=\"cmfctaskspane__setpagecaption\"></a>  CMFCTasksPane::SetPageCaption","source":"<a name=\"cmfctaskspane__setpagecaption\"></a>  CMFCTasksPane::SetPageCaption"},{"content":"Sets the caption text for a task pane page.","pos":[52482,52525]},{"pos":[52614,52624],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`nPageIdx`</ph>","pos":[52628,52643],"source":"[in] `nPageIdx`"},{"content":"Specifies the zero-based index of the page.","pos":[52647,52690]},{"content":"[in] <ph id=\"ph1\">`lpszName`</ph>","pos":[52697,52712],"source":"[in] `lpszName`"},{"content":"Specifies the caption text to display on the page.","pos":[52716,52766]},{"pos":[52776,52783],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"If a task pane has multiple pages, the default page has the caption that was set by using this method.","pos":[52787,52889]},{"pos":[52899,52968],"content":"<bpt id=\"p1\">&lt;a name=\"cmfctaskspane__settaskname\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCTasksPane::SetTaskName","linkify":"<a name=\"cmfctaskspane__settaskname\"></a>  CMFCTasksPane::SetTaskName","source":"<a name=\"cmfctaskspane__settaskname\"></a>  CMFCTasksPane::SetTaskName"},{"content":"Sets the name for a task.","pos":[52972,52997]},{"pos":[53102,53112],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`nGroup`</ph>","pos":[53116,53129],"source":"[in] `nGroup`"},{"content":"Specifies the zero-based index of the task group.","pos":[53133,53182]},{"content":"[in] <ph id=\"ph1\">`nTask`</ph>","pos":[53189,53201],"source":"[in] `nTask`"},{"content":"Specifies the zero-based index of the task.","pos":[53205,53248]},{"content":"[in] <ph id=\"ph1\">`lpszTaskName`</ph>","pos":[53255,53274],"source":"[in] `lpszTaskName`"},{"content":"Specifies the task name.","pos":[53278,53302]},{"pos":[53312,53324],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[53328,53393],"content":"<ph id=\"ph1\">`TRUE`</ph> if the task name was successfully set; otherwise, <ph id=\"ph2\">`FALSE`</ph>.","source":"`TRUE` if the task name was successfully set; otherwise, `FALSE`."},{"pos":[53403,53486],"content":"<bpt id=\"p1\">&lt;a name=\"cmfctaskspane__settaskshorzoffset\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCTasksPane::SetTasksHorzOffset","linkify":"<a name=\"cmfctaskspane__settaskshorzoffset\"></a>  CMFCTasksPane::SetTasksHorzOffset","source":"<a name=\"cmfctaskspane__settaskshorzoffset\"></a>  CMFCTasksPane::SetTasksHorzOffset"},{"content":"Sets the horizontal offset for tasks.","pos":[53490,53527]},{"pos":[53589,53599],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`n`</ph>","pos":[53603,53611],"source":"[in] `n`"},{"content":"Specifies the horizontal offset.","pos":[53615,53647]},{"pos":[53657,53664],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The horizontal offset is the distance in pixels from the left and right edges of a group.","pos":[53668,53757]},{"pos":[53764,53901],"content":"If <ph id=\"ph1\">`n`</ph> is -1, this method sets the horizontal offset to the value returned by the <ph id=\"ph2\">`CMFCVisualManager::GetTasksPaneTaskHorzOffset`</ph> method.","source":"If `n` is -1, this method sets the horizontal offset to the value returned by the `CMFCVisualManager::GetTasksPaneTaskHorzOffset` method."},{"content":"The default horizontal offset is 12 pixels.","pos":[53908,53951]},{"pos":[53961,54052],"content":"<bpt id=\"p1\">&lt;a name=\"cmfctaskspane__settasksiconhorzoffset\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCTasksPane::SetTasksIconHorzOffset","linkify":"<a name=\"cmfctaskspane__settasksiconhorzoffset\"></a>  CMFCTasksPane::SetTasksIconHorzOffset","source":"<a name=\"cmfctaskspane__settasksiconhorzoffset\"></a>  CMFCTasksPane::SetTasksIconHorzOffset"},{"pos":[54220,54230],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"pos":[54234,54242],"content":"[in] <ph id=\"ph1\">`n`</ph>","source":"[in] `n`"},{"pos":[54252,54259],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[54269,54360],"content":"<bpt id=\"p1\">&lt;a name=\"cmfctaskspane__settasksiconvertoffset\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCTasksPane::SetTasksIconVertOffset","linkify":"<a name=\"cmfctaskspane__settasksiconvertoffset\"></a>  CMFCTasksPane::SetTasksIconVertOffset","source":"<a name=\"cmfctaskspane__settasksiconvertoffset\"></a>  CMFCTasksPane::SetTasksIconVertOffset"},{"pos":[54528,54538],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"pos":[54542,54550],"content":"[in] <ph id=\"ph1\">`n`</ph>","source":"[in] `n`"},{"pos":[54560,54567],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[54577,54656],"content":"<bpt id=\"p1\">&lt;a name=\"cmfctaskspane__settasktextcolor\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCTasksPane::SetTaskTextColor","linkify":"<a name=\"cmfctaskspane__settasktextcolor\"></a>  CMFCTasksPane::SetTaskTextColor","source":"<a name=\"cmfctaskspane__settasktextcolor\"></a>  CMFCTasksPane::SetTaskTextColor"},{"content":"Sets the text color for a task.","pos":[54660,54691]},{"pos":[54835,54845],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`nGroup`</ph>","pos":[54849,54862],"source":"[in] `nGroup`"},{"content":"Specifies the zero-based index of the task group that contains the task.","pos":[54866,54938]},{"content":"[in] <ph id=\"ph1\">`nTask`</ph>","pos":[54945,54957],"source":"[in] `nTask`"},{"content":"Specifies the zero-based index of the task.","pos":[54961,55004]},{"content":"[in] <ph id=\"ph1\">`color`</ph>","pos":[55011,55023],"source":"[in] `color`"},{"content":"Specifies the text color for the task.","pos":[55027,55065]},{"content":"[in] <ph id=\"ph1\">`colorHot`</ph>","pos":[55072,55087],"source":"[in] `colorHot`"},{"content":"Specifies the text color for the highlighted group.","pos":[55091,55142]},{"content":"If -1, this method uses the default highlight color.","pos":[55143,55195]},{"pos":[55205,55217],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[55221,55300],"content":"<ph id=\"ph1\">`TRUE`</ph> if the text color for the task was successfully set; otherwise, <ph id=\"ph2\">`FALSE`</ph>.","source":"`TRUE` if the text color for the task was successfully set; otherwise, `FALSE`."},{"pos":[55310,55383],"content":"<bpt id=\"p1\">&lt;a name=\"cmfctaskspane__setvertmargin\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCTasksPane::SetVertMargin","linkify":"<a name=\"cmfctaskspane__setvertmargin\"></a>  CMFCTasksPane::SetVertMargin","source":"<a name=\"cmfctaskspane__setvertmargin\"></a>  CMFCTasksPane::SetVertMargin"},{"content":"Sets the vertical margin.","pos":[55387,55412]},{"pos":[55469,55479],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`n`</ph>","pos":[55483,55491],"source":"[in] `n`"},{"content":"Specifies the vertical margin to set.","pos":[55495,55532]},{"pos":[55542,55549],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The vertical margin is the distance between a task pane and the vertical edges of the client area.","pos":[55553,55651]},{"content":"If <ph id=\"ph1\">`n`</ph> is -1, the framework determines the margin value by using  the visual manager ( <ph id=\"ph2\">`CMFCVisualManager::GetTasksPaneVertMargin`</ph>).","pos":[55658,55790],"source":"If `n` is -1, the framework determines the margin value by using  the visual manager ( `CMFCVisualManager::GetTasksPaneVertMargin`)."},{"content":"The default margin is 12 pixels.","pos":[55791,55823]},{"pos":[55833,55910],"content":"<bpt id=\"p1\">&lt;a name=\"cmfctaskspane__setwindowheight\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCTasksPane::SetWindowHeight","linkify":"<a name=\"cmfctaskspane__setwindowheight\"></a>  CMFCTasksPane::SetWindowHeight","source":"<a name=\"cmfctaskspane__setwindowheight\"></a>  CMFCTasksPane::SetWindowHeight"},{"content":"Sets the height for a window control.","pos":[55914,55951]},{"pos":[56125,56135],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`nGroup`</ph>","pos":[56139,56152],"source":"[in] `nGroup`"},{"content":"Specifies the zero-based index of the group that contains the window control.","pos":[56156,56233]},{"content":"[in] <ph id=\"ph1\">`hwndTask`</ph>","pos":[56240,56255],"source":"[in] `hwndTask`"},{"content":"Specifies the handle to the window control.","pos":[56259,56302]},{"content":"[in] <ph id=\"ph1\">`nWndHeight`</ph>","pos":[56309,56326],"source":"[in] `nWndHeight`"},{"content":"Specifies the height to set.","pos":[56330,56358]},{"pos":[56368,56380],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[56384,56512],"content":"<ph id=\"ph1\">`TRUE`</ph> if the height of the window control was successfully set; <ph id=\"ph2\">`FALSE`</ph> if <ph id=\"ph3\">`nGroup`</ph> is invalid or if <ph id=\"ph4\">`hwndTask`</ph> does not exist.","source":"`TRUE` if the height of the window control was successfully set; `FALSE` if `nGroup` is invalid or if `hwndTask` does not exist."},{"pos":[56522,56529],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[56533,56626],"content":"Call <bpt id=\"p1\">[</bpt>CMFCTasksPane::AddWindow<ept id=\"p1\">](#cmfctaskspane__addwindow)</ept> to add tasks with window controls.","source":"Call [CMFCTasksPane::AddWindow](#cmfctaskspane__addwindow) to add tasks with window controls."},{"pos":[56636,56731],"content":"<bpt id=\"p1\">&lt;a name=\"cmfctaskspane__showcommandmessagestring\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCTasksPane::ShowCommandMessageString","linkify":"<a name=\"cmfctaskspane__showcommandmessagestring\"></a>  CMFCTasksPane::ShowCommandMessageString","source":"<a name=\"cmfctaskspane__showcommandmessagestring\"></a>  CMFCTasksPane::ShowCommandMessageString"},{"pos":[56912,56922],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"pos":[56926,56940],"content":"[in] <ph id=\"ph1\">`uiCmdId`</ph>","source":"[in] `uiCmdId`"},{"pos":[56950,56957],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[56967,57030],"content":"<bpt id=\"p1\">&lt;a name=\"cmfctaskspane__showtask\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCTasksPane::ShowTask","linkify":"<a name=\"cmfctaskspane__showtask\"></a>  CMFCTasksPane::ShowTask","source":"<a name=\"cmfctaskspane__showtask\"></a>  CMFCTasksPane::ShowTask"},{"content":"Shows or hides a task.","pos":[57034,57056]},{"pos":[57182,57192],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`nGroup`</ph>","pos":[57196,57209],"source":"[in] `nGroup`"},{"content":"Specifies the zero-based index of the group.","pos":[57213,57257]},{"content":"[in] <ph id=\"ph1\">`nTask`</ph>","pos":[57264,57276],"source":"[in] `nTask`"},{"content":"Specifies the zero-based index of the task to show or hide.","pos":[57280,57339]},{"content":"[in] <ph id=\"ph1\">`bShow`</ph>","pos":[57346,57358],"source":"[in] `bShow`"},{"content":"<ph id=\"ph1\"> `TRUE`</ph> to show the task; <ph id=\"ph2\">`FALSE`</ph> to hide the task.","pos":[57361,57412],"source":" `TRUE` to show the task; `FALSE` to hide the task."},{"content":"[in] <ph id=\"ph1\">`bRedraw`</ph>","pos":[57419,57433],"source":"[in] `bRedraw`"},{"content":"<ph id=\"ph1\"> `TRUE`</ph> to redraw the task pane; otherwise, <ph id=\"ph2\">`FALSE`</ph>.","pos":[57436,57488],"source":" `TRUE` to redraw the task pane; otherwise, `FALSE`."},{"pos":[57498,57510],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[57514,57621],"content":"<ph id=\"ph1\">`TRUE`</ph> if the task was successfully shown or hidden; <ph id=\"ph2\">`FALSE`</ph> if the specified group or task does not exist.","source":"`TRUE` if the task was successfully shown or hidden; `FALSE` if the specified group or task does not exist."},{"pos":[57631,57638],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[57642,57759],"content":"Use <bpt id=\"p1\">[</bpt>CMFCTasksPane::ShowTaskByCmdId<ept id=\"p1\">](#cmfctaskspane__showtaskbycmdid)</ept> to show or hide a task based on its command ID.","source":"Use [CMFCTasksPane::ShowTaskByCmdId](#cmfctaskspane__showtaskbycmdid) to show or hide a task based on its command ID."},{"pos":[57769,57846],"content":"<bpt id=\"p1\">&lt;a name=\"cmfctaskspane__showtaskbycmdid\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCTasksPane::ShowTaskByCmdId","linkify":"<a name=\"cmfctaskspane__showtaskbycmdid\"></a>  CMFCTasksPane::ShowTaskByCmdId","source":"<a name=\"cmfctaskspane__showtaskbycmdid\"></a>  CMFCTasksPane::ShowTaskByCmdId"},{"content":"Shows or hides a task based on its command ID.","pos":[57850,57896]},{"pos":[58018,58028],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`uiCommandID`</ph>","pos":[58032,58050],"source":"[in] `uiCommandID`"},{"content":"Specifies the command ID of the task to show or hide.","pos":[58054,58107]},{"content":"[in] <ph id=\"ph1\">`bShow`</ph>","pos":[58114,58126],"source":"[in] `bShow`"},{"content":"<ph id=\"ph1\"> `TRUE`</ph> to show the task; <ph id=\"ph2\">`FALSE`</ph> to hide the task.","pos":[58129,58180],"source":" `TRUE` to show the task; `FALSE` to hide the task."},{"content":"[in] <ph id=\"ph1\">`bRedraw`</ph>","pos":[58187,58201],"source":"[in] `bRedraw`"},{"content":"<ph id=\"ph1\"> `TRUE`</ph> to redraw the task pane; otherwise, <ph id=\"ph2\">`FALSE`</ph>.","pos":[58204,58256],"source":" `TRUE` to redraw the task pane; otherwise, `FALSE`."},{"pos":[58266,58278],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[58282,58398],"content":"<ph id=\"ph1\">`TRUE`</ph> if the task was successfully shown or hidden; <ph id=\"ph2\">`FALSE`</ph> if a task with the specified command ID does not exist.","source":"`TRUE` if the task was successfully shown or hidden; `FALSE` if a task with the specified command ID does not exist."},{"pos":[58408,58415],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[58419,58522],"content":"Use <bpt id=\"p1\">[</bpt>CMFCTasksPane::ShowTask<ept id=\"p1\">](#cmfctaskspane__showtask)</ept> to show or hide a task based on its command ID.","source":"Use [CMFCTasksPane::ShowTask](#cmfctaskspane__showtask) to show or hide a task based on its command ID."},{"pos":[58532,58591],"content":"<bpt id=\"p1\">&lt;a name=\"cmfctaskspane__update\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCTasksPane::Update","linkify":"<a name=\"cmfctaskspane__update\"></a>  CMFCTasksPane::Update","source":"<a name=\"cmfctaskspane__update\"></a>  CMFCTasksPane::Update"},{"content":"Refreshes all of the controls in a task pane.","pos":[58595,58640]},{"pos":[58688,58695],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This method updates the task pane caption, adjusts the scroll bar, repositions all tasks, and redraws all of the task pane controls.","pos":[58699,58831]},{"content":"Override this method in a derived class to execute custom code when the framework refreshes the task pane.","pos":[58838,58944]},{"pos":[58953,58961],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Hierarchy Chart<ept id=\"p1\">](../../mfc/hierarchy-chart.md)</ept><ph id=\"ph1\"> </ph>","pos":[58965,59013],"source":"[Hierarchy Chart](../../mfc/hierarchy-chart.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Classes<ept id=\"p1\">](../../mfc/reference/mfc-classes.md)</ept><ph id=\"ph1\"> </ph>","pos":[59016,59063],"source":" [Classes](../../mfc/reference/mfc-classes.md) "},{"content":"<bpt id=\"p1\"> [</bpt>CMFCTasksPaneTaskGroup Class<ept id=\"p1\">](../../mfc/reference/cmfctaskspanetaskgroup-class.md)</ept><ph id=\"ph1\"> </ph>","pos":[59066,59151],"source":" [CMFCTasksPaneTaskGroup Class](../../mfc/reference/cmfctaskspanetaskgroup-class.md) "},{"content":"<bpt id=\"p1\"> [</bpt>CMFCTasksPaneTask Class<ept id=\"p1\">](../../mfc/reference/cmfctaskspanetask-class.md)</ept><ph id=\"ph1\"> </ph>","pos":[59154,59229],"source":" [CMFCTasksPaneTask Class](../../mfc/reference/cmfctaskspanetask-class.md) "},{"content":"<bpt id=\"p1\"> [</bpt>CMFCOutlookBar Class<ept id=\"p1\">](../../mfc/reference/cmfcoutlookbar-class.md)</ept><ph id=\"ph1\"> </ph>","pos":[59232,59301],"source":" [CMFCOutlookBar Class](../../mfc/reference/cmfcoutlookbar-class.md) "},{"content":"<bpt id=\"p1\"> [</bpt>CMFCVisualManager Class<ept id=\"p1\">](../../mfc/reference/cmfcvisualmanager-class.md)</ept>","pos":[59304,59378],"source":" [CMFCVisualManager Class](../../mfc/reference/cmfcvisualmanager-class.md)"}],"content":"---\ntitle: \"CMFCTasksPane Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"CMFCTasksPane\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"CMFCTasksPane class\"\nms.assetid: b456328e-2525-4642-b78b-9edd1a1a7d3f\ncaps.latest.revision: 26\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# CMFCTasksPane Class\n[!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n The `CMFCTasksPane` class implements a list of clickable items (tasks).  \n  \n## Syntax  \n  \n```  \nclass CMFCTasksPane : public CDockablePane  \n```  \n  \n## Members  \n  \n### Public Constructors  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CMFCTasksPane::CMFCTasksPane](#cmfctaskspane__cmfctaskspane)|Constructs a `CMFCTasksPane` object.|  \n  \n### Public Methods  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CMFCTasksPane::AddGroup](#cmfctaskspane__addgroup)|Adds a new group of tasks to the task pane control.|  \n|[CMFCTasksPane::AddLabel](#cmfctaskspane__addlabel)|Adds a new static label into the specified task group.|  \n|[CMFCTasksPane::AddMRUFilesList](#cmfctaskspane__addmrufileslist)|Adds tasks specified by a Most Recently Used (MRU) file list into a group.|  \n|[CMFCTasksPane::AddPage](#cmfctaskspane__addpage)|Adds a new page to the task pane.|  \n|[CMFCTasksPane::AddSeparator](#cmfctaskspane__addseparator)||  \n|[CMFCTasksPane::AddTask](#cmfctaskspane__addtask)|Adds a new task to the specified task group.|  \n|[CMFCTasksPane::AddWindow](#cmfctaskspane__addwindow)|Adds a child window to the task pane.|  \n|[CMFCTasksPane::CollapseAllGroups](#cmfctaskspane__collapseallgroups)||  \n|[CMFCTasksPane::CollapseGroup](#cmfctaskspane__collapsegroup)|Programmatically collapses a group.|  \n|[CMFCTasksPane::CreateDefaultMiniframe](#cmfctaskspane__createdefaultminiframe)|(Overrides [CPane::CreateDefaultMiniframe](../../mfc/reference/cpane-class.md#cpane__createdefaultminiframe).)|  \n|[CMFCTasksPane::CreateMenu](#cmfctaskspane__createmenu)|Called by the framework to create a menu for the **Other Tasks Panes** menu button.|  \n|[CMFCTasksPane::EnableAnimation](#cmfctaskspane__enableanimation)|Enables or disables animation while collapsing or expanding task groups.|  \n|[CMFCTasksPane::EnableGroupCollapse](#cmfctaskspane__enablegroupcollapse)|Specifies whether tasks groups can be collapsed.|  \n|[CMFCTasksPane::EnableHistoryMenuButtons](#cmfctaskspane__enablehistorymenubuttons)|Enables or disables drop-down menus in **Next** and **Previous** navigation buttons.|  \n|[CMFCTasksPane::EnableNavigationToolbar](#cmfctaskspane__enablenavigationtoolbar)|Enables or disables the navigation toolbar.|  \n|[CMFCTasksPane::EnableOffsetCustomControls](#cmfctaskspane__enableoffsetcustomcontrols)||  \n|[CMFCTasksPane::EnableScrollButtons](#cmfctaskspane__enablescrollbuttons)|Enables scroll buttons instead of a scrollbar.|  \n|[CMFCTasksPane::EnableWrapLabels](#cmfctaskspane__enablewraplabels)|Enables or disables word wrapping for labels.|  \n|[CMFCTasksPane::EnableWrapTasks](#cmfctaskspane__enablewraptasks)|Enables or disables word wrapping for tasks.|  \n|[CMFCTasksPane::GetActivePage](#cmfctaskspane__getactivepage)|Returns the zero-based index for the active page.|  \n|[CMFCTasksPane::GetGroupCaptionHeight](#cmfctaskspane__getgroupcaptionheight)|Returns the height of the group captions.|  \n|[CMFCTasksPane::GetGroupCaptionHorzOffset](#cmfctaskspane__getgroupcaptionhorzoffset)|Returns the current offset of a group caption from the left and right edges of the task pane.|  \n|[CMFCTasksPane::GetGroupCaptionVertOffset](#cmfctaskspane__getgroupcaptionvertoffset)|Returns the current offset of a group caption from the top and bottom edges of the task pane.|  \n|[CMFCTasksPane::GetGroupCount](#cmfctaskspane__getgroupcount)|Returns the total number of groups.|  \n|[CMFCTasksPane::GetGroupLocation](#cmfctaskspane__getgrouplocation)|Returns the internal group index for a given group.|  \n|[CMFCTasksPane::GetGroupVertOffset](#cmfctaskspane__getgroupvertoffset)|Returns the vertical offset of a group.|  \n|[CMFCTasksPane::GetHorzMargin](#cmfctaskspane__gethorzmargin)|Returns the horizontal spacing between a task pane and the edges of the client area.|  \n|[CMFCTasksPane::GetNextPages](#cmfctaskspane__getnextpages)||  \n|[CMFCTasksPane::GetPageByGroup](#cmfctaskspane__getpagebygroup)|Retrieves the page index for a specified group.|  \n|[CMFCTasksPane::GetPagesCount](#cmfctaskspane__getpagescount)|Returns the number of pages.|  \n|[CMFCTasksPane::GetPreviousPages](#cmfctaskspane__getpreviouspages)||  \n|[CMFCTasksPane::GetScrollBarCtrl](#cmfctaskspane__getscrollbarctrl)|(Overrides [CWnd::GetScrollBarCtrl](../../mfc/reference/cwnd-class.md#cwnd__getscrollbarctrl).)|  \n|[CMFCTasksPane::GetTask](#cmfctaskspane__gettask)|Retrieves a task.|  \n|[CMFCTasksPane::GetTaskCount](#cmfctaskspane__gettaskcount)|Returns the number of task items in a specified group.|  \n|[CMFCTasksPane::GetTaskGroup](#cmfctaskspane__gettaskgroup)|Returns a task group for a given group index.|  \n|[CMFCTasksPane::GetTaskLocation](#cmfctaskspane__gettasklocation)|Returns the group and the index for a given task.|  \n|[CMFCTasksPane::GetTasksHorzOffset](#cmfctaskspane__gettaskshorzoffset)|Returns the horizontal offset of tasks from the left and right edges of their parent groups.|  \n|[CMFCTasksPane::GetTasksIconHorzOffset](#cmfctaskspane__gettasksiconhorzoffset)||  \n|[CMFCTasksPane::GetTasksIconVertOffset](#cmfctaskspane__gettasksiconvertoffset)||  \n|[CMFCTasksPane::GetVertMargin](#cmfctaskspane__getvertmargin)|Returns the vertical spacing between a task pane and the edges of the client area.|  \n|[CMFCTasksPane::IsAccessibilityCompatible](#cmfctaskspane__isaccessibilitycompatible)|(Overrides `CDockablePane::IsAccessibilityCompatible`.)|  \n|[CMFCTasksPane::IsAnimationEnabled](#cmfctaskspane__isanimationenabled)|Indicates whether animation is enabled.|  \n|[CMFCTasksPane::IsBackButtonEnabled](#cmfctaskspane__isbackbuttonenabled)|Indicates whether the back button is enabled.|  \n|[CMFCTasksPane::IsForwardButtonEnabled](#cmfctaskspane__isforwardbuttonenabled)|Indicates whether the forward button is enabled.|  \n|[CMFCTasksPane::IsGroupCollapseEnabled](#cmfctaskspane__isgroupcollapseenabled)||  \n|[CMFCTasksPane::IsHistoryMenuButtonsEnabled](#cmfctaskspane__ishistorymenubuttonsenabled)|Indicates whether the **Next** and **Previous** navigation buttons have drop-down menus.|  \n|[CMFCTasksPane::IsNavigationToolbarEnabled](#cmfctaskspane__isnavigationtoolbarenabled)|Indicates whether the navigation toolbar is enabled.|  \n|[CMFCTasksPane::IsToolBox](#cmfctaskspane__istoolbox)||  \n|[CMFCTasksPane::IsWrapLabelsEnabled](#cmfctaskspane__iswraplabelsenabled)|Indicates whether the task pane wraps words in labels.|  \n|[CMFCTasksPane::IsWrapTasksEnabled](#cmfctaskspane__iswraptasksenabled)|Indicates whether the task pane wraps words in tasks.|  \n|[CMFCTasksPane::LoadState](#cmfctaskspane__loadstate)|(Overrides [CDockablePane::LoadState](http://msdn.microsoft.com/en-us/96110136-4f46-4764-8a76-3b4abaf77917).)|  \n|[CMFCTasksPane::OnCancel](#cmfctaskspane__oncancel)||  \n|[CMFCTasksPane::OnClickTask](#cmfctaskspane__onclicktask)|Called by the framework when the user clicks an item in the task pane.|  \n|[CMFCTasksPane::OnOK](#cmfctaskspane__onok)||  \n|[CMFCTasksPane::OnPressBackButton](#cmfctaskspane__onpressbackbutton)|Called by the framework when the user clicks the back button.|  \n|[CMFCTasksPane::OnPressForwardButton](#cmfctaskspane__onpressforwardbutton)|Called by the framework when the user clicks the forward navigation button.|  \n|[CMFCTasksPane::OnPressHomeButton](#cmfctaskspane__onpresshomebutton)|Called by the framework when the user clicks the home navigation button|  \n|[CMFCTasksPane::OnPressOtherButton](#cmfctaskspane__onpressotherbutton)||  \n|[CMFCTasksPane::OnSetAccData](#cmfctaskspane__onsetaccdata)|(Overrides [CBasePane::OnSetAccData](../../mfc/reference/cbasepane-class.md#cbasepane__onsetaccdata).)|  \n|[CMFCTasksPane::OnUpdateCmdUI](#cmfctaskspane__onupdatecmdui)|(Overrides [CDockablePane::OnUpdateCmdUI](http://msdn.microsoft.com/en-us/5dd61606-1c12-40d4-b024-f3839aa5e2e0).)|  \n|[CMFCTasksPane::PreTranslateMessage](#cmfctaskspane__pretranslatemessage)|(Overrides [CDockablePane::PreTranslateMessage](http://msdn.microsoft.com/en-us/49a242cc-b158-400e-9e01-0345ec9c3ffd).)|  \n|[CMFCTasksPane::RecalcLayout](#cmfctaskspane__recalclayout)|(Overrides [CPane::RecalcLayout](../../mfc/reference/cpane-class.md#cpane__recalclayout).)|  \n|[CMFCTasksPane::RemoveAllGroups](#cmfctaskspane__removeallgroups)|Removes all groups on the specified page.|  \n|[CMFCTasksPane::RemoveAllPages](#cmfctaskspane__removeallpages)|Removes all pages from the task pane except the default (first) page.|  \n|[CMFCTasksPane::RemoveAllTasks](#cmfctaskspane__removealltasks)|Removes all tasks from the group.|  \n|[CMFCTasksPane::RemoveGroup](#cmfctaskspane__removegroup)|Removes a group.|  \n|[CMFCTasksPane::RemovePage](#cmfctaskspane__removepage)|Removes a specified page from the task pane.|  \n|[CMFCTasksPane::RemoveTask](#cmfctaskspane__removetask)|Removes a task from a task group.|  \n|[CMFCTasksPane::SaveState](#cmfctaskspane__savestate)|(Overrides [CDockablePane::SaveState](http://msdn.microsoft.com/en-us/c5c24249-8d0d-46cb-96d9-9f5c6dc191db).)|  \n|[CMFCTasksPane::Serialize](#cmfctaskspane__serialize)|(Overrides [CDockablePane::Serialize](http://msdn.microsoft.com/en-us/09787e59-e446-4e76-894b-206d303dcfd6).)|  \n|[CMFCTasksPane::SetActivePage](#cmfctaskspane__setactivepage)|Activates a specified page in the task pane.|  \n|[CMFCTasksPane::SetCaption](#cmfctaskspane__setcaption)|Sets the caption name of a task pane.|  \n|[CMFCTasksPane::SetGroupCaptionHeight](#cmfctaskspane__setgroupcaptionheight)|Sets the height of a group caption.|  \n|[CMFCTasksPane::SetGroupCaptionHorzOffset](#cmfctaskspane__setgroupcaptionhorzoffset)|Sets the horizontal offset of a group caption.|  \n|[CMFCTasksPane::SetGroupCaptionVertOffset](#cmfctaskspane__setgroupcaptionvertoffset)|Sets the vertical offset of a group caption.|  \n|[CMFCTasksPane::SetGroupName](#cmfctaskspane__setgroupname)|Sets a group name.|  \n|[CMFCTasksPane::SetGroupTextColor](#cmfctaskspane__setgrouptextcolor)|Sets the text color for a group caption.|  \n|[CMFCTasksPane::SetGroupVertOffset](#cmfctaskspane__setgroupvertoffset)|Sets the vertical offset for a group.|  \n|[CMFCTasksPane::SetHorzMargin](#cmfctaskspane__sethorzmargin)|Sets the horizontal spacing between a task pane and the edges of the client area.|  \n|[CMFCTasksPane::SetIconsList](#cmfctaskspane__seticonslist)|Sets the image list associated with tasks.|  \n|[CMFCTasksPane::SetPageCaption](#cmfctaskspane__setpagecaption)|Sets the caption text for a task pane page.|  \n|[CMFCTasksPane::SetTaskName](#cmfctaskspane__settaskname)|Sets the name for a task.|  \n|[CMFCTasksPane::SetTasksIconHorzOffset](#cmfctaskspane__settasksiconhorzoffset)||  \n|[CMFCTasksPane::SetTasksIconVertOffset](#cmfctaskspane__settasksiconvertoffset)||  \n|[CMFCTasksPane::SetTaskTextColor](#cmfctaskspane__settasktextcolor)|Sets the text color for a task.|  \n|[CMFCTasksPane::SetTasksHorzOffset](#cmfctaskspane__settaskshorzoffset)|Sets the horizontal offset of tasks from the left and right edges of their parent groups.|  \n|[CMFCTasksPane::SetVertMargin](#cmfctaskspane__setvertmargin)|Sets the vertical spacing between a task pane and the edges of the client area.|  \n|[CMFCTasksPane::SetWindowHeight](#cmfctaskspane__setwindowheight)|Sets the height for a window.|  \n|[CMFCTasksPane::ShowCommandMessageString](#cmfctaskspane__showcommandmessagestring)||  \n|[CMFCTasksPane::ShowTask](#cmfctaskspane__showtask)|Shows or hides a task.|  \n|[CMFCTasksPane::ShowTaskByCmdId](#cmfctaskspane__showtaskbycmdid)|Shows or hides a task based on its command ID.|  \n|[CMFCTasksPane::Update](#cmfctaskspane__update)|Updates the GUI elements that belong to a task pane.|  \n  \n### Protected Methods  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CMFCTasksPane::OnActivateTasksPanePage](#cmfctaskspane__onactivatetaskspanepage)|Called by the framework when a new task pane page is activated.|  \n  \n## Remarks  \n The `CMFCTasksPane` class implements the following functionality:  \n  \n-   Items can be grouped and each item grouping can have an associated caption.  \n  \n-   Item groupings can be collapsed or expanded.  \n  \n-   An icon can be assigned to each item in the task pane.  \n  \n-   Individual items can be associated with a command ID which executes when a user clicks the item. When the click occurs, the `WM_COMMAND` message is sent to the owner of the task pane control.  \n  \n To use the `CMFCTasksPane` control in your application, follow these steps:  \n  \n1.  Embed a `CMFCTasksPane` object into the main frame window class.  \n  \n2.  When processing the `WM_CREATE` message, call the `Create` method. You can use the regular [CControlBar](../../mfc/reference/ccontrolbar-class.md) styles. For more information, see `CControlBar::Create`.  \n  \n3.  Call the [CMFCTasksPane::AddGroup](#cmfctaskspane__addgroup) method to add various groups.  \n  \n4.  Call the [CMFCTasksPane::AddTask](#cmfctaskspane__addtask), [CMFCTasksPane::AddLabel](#cmfctaskspane__addlabel) or [CMFCTasksPane::AddMRUFilesList](#cmfctaskspane__addmrufileslist) member functions to add new items (tasks) to each group.  \n  \n5.  Call [CMFCTasksPane::EnableGroupCollapse](#cmfctaskspane__enablegroupcollapse) to specify whether item groups can collapse.  \n  \n The following illustration shows a typical task pane control. The first group is a *special* group and its caption is a darker color. The third group is collapsed. The last group is aligned to the bottom of the task pane and has no caption, and the last task in the group is a simple label:  \n  \n ![Example of Task Pane](../../mfc/reference/media/nexttaskpane.png \"nexttaskpane\")  \n  \n You can customize the appearance of the task pane by adjusting various margins and offsets. The following illustration clarifies the meaning of these variables:  \n  \n ![Custom task group](../../mfc/reference/media/nexttaskgrpcustom.png \"nexttaskgrpcustom\")  \n  \n## Example  \n The following example demonstrates how to construct a `CMFCTasksPane` object and use various methods in the `CMFCTasksPane` class. The example shows how to enable the collapsing of task groups, enable the drop-down menus on the **Next** and **Previous** navigation buttons, enable the scroll buttons instead of a scroll bar, enable the word wrapping for the text in labels, set the caption name of the task pane, set the text color for a group caption, and set the horizontal and vertical margins.  \n  \n [!code-cpp[NVC_MFC_RibbonApp#28](../../mfc/reference/codesnippet/cpp/cmfctaskspane-class_1.cpp)]  \n  \n## Inheritance Hierarchy  \n [CObject](../../mfc/reference/cobject-class.md) [CCmdTarget](../../mfc/reference/ccmdtarget-class.md) [CWnd](../../mfc/reference/cwnd-class.md)  \n  \n [CBasePane](../../mfc/reference/cbasepane-class.md) [CPane](../../mfc/reference/cpane-class.md) [CDockablePane](../../mfc/reference/cdockablepane-class.md)  \n  \n [CMFCTasksPane](../../mfc/reference/cmfctaskspane-class.md)  \n  \n## Requirements  \n **Header:** afxTasksPane.h  \n  \n##  <a name=\"cmfctaskspane__addgroup\"></a>  CMFCTasksPane::AddGroup  \n Adds a new group of tasks to the task pane control.  \n  \n```  \nint AddGroup(\n    int nPageIdx,  \n    LPCTSTR lpszGroupName,  \n    BOOL bBottomLocation = FALSE,  \n    BOOL bSpecial = FALSE,  \n    HICON hIcon = NULL);\n\n \nint AddGroup(\n    LPCTSTR lpszGroupName,  \n    BOOL bBottomLocation = FALSE,  \n    BOOL bSpecial = FALSE,  \n    HICON hIcon = NULL);\n```  \n  \n### Parameters  \n [in] `nPageIdx`  \n Specifies the zero-based page index.  \n  \n [in] `lpszGroupName`  \n Specifies the group name.  \n  \n [in] `bBottomLocation`  \n `TRUE` to create the group at the bottom of the task pane control; otherwise, `FALSE`.  \n  \n [in] `bSpecial`  \n `TRUE` to mark this group as a *special* group; otherwise, `FALSE`. For more information about special groups, see the Remarks section of [CMFCTasksPane Class](../../mfc/reference/cmfctaskspane-class.md).  \n  \n [in] `hIcon`  \n Specifies the icon to display in the group caption.  \n  \n### Return Value  \n The zero-based index of the group in the internal list of groups that the class maintains.  \n  \n### Remarks  \n Call this method to create a group of tasks and to add that group to the task pane control.  \n  \n The framework displays task groups at the top of the task pane control or at the bottom. The framework can display only one group at the bottom; this group must be added last.  \n  \n##  <a name=\"cmfctaskspane__addlabel\"></a>  CMFCTasksPane::AddLabel  \n Adds a label to the specified task group.  \n  \n```  \nint AddLabel(\n    int nGroup,  \n    LPCTSTR lpszLabelName,  \n    int nTaskIcon = -1,  \n    BOOL bIsBold = FALSE);\n```  \n  \n### Parameters  \n [in] `nGroup`  \n Specifies the index of the group where the label is added.  \n  \n [in] `lpszLabelName`  \n Specifies the name of the label.  \n  \n [in] `nTaskIcon`  \n Specifies the icon to display next to the label. The framework stores icons in a list of images. This parameter is an index into that list.  \n  \n [in] `bIsBold`  \n `TRUE` to display the label in bold text; otherwise, `FALSE`.  \n  \n### Return Value  \n The zero-based index of the group where the label was added, or -1 if the group specified by `nGroup` does not exist.  \n  \n### Remarks  \n The framework handles tasks and labels differently. When a user clicks on a task, the framework executes a command. When a user clicks on a label, no command is executed. For more information, see [CMFCTasksPane::AddTask](#cmfctaskspane__addtask).  \n  \n##  <a name=\"cmfctaskspane__addmrufileslist\"></a>  CMFCTasksPane::AddMRUFilesList  \n Adds a task for each file stored in a Most Recently Used (MRU) files list into a group.  \n  \n```  \nint AddMRUFilesList(\n    int nGroup,  \n    int nMaxFiles = 4);\n```  \n  \n### Parameters  \n [in] `nGroup`  \n Specifies the index of a group. This method adds the MRU files list to the group specified by this parameter.  \n  \n [in] `nMaxFiles`  \n Specifies the number of files to display in the MRU files list.  \n  \n### Return Value  \n The zero-based index of the group where the MRU files list was added, or -1 if the group specified by `nGroup` does not exist.  \n  \n##  <a name=\"cmfctaskspane__addpage\"></a>  CMFCTasksPane::AddPage  \n Adds a page to the task pane.  \n  \n```  \nint AddPage(LPCTSTR lpszPageLabel);\n```  \n  \n### Parameters  \n [in] `lpszPageLabel`  \n Specifies the label for the page.  \n  \n### Return Value  \n The zero-based index of the new page.  \n  \n##  <a name=\"cmfctaskspane__addseparator\"></a>  CMFCTasksPane::AddSeparator  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nint AddSeparator(int nGroup);\n```  \n  \n### Parameters  \n [in] `nGroup`  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cmfctaskspane__addtask\"></a>  CMFCTasksPane::AddTask  \n Adds a task to the specified task group.  \n  \n```  \nint AddTask(\n    int nGroup,  \n    LPCTSTR lpszTaskName,  \n    int nTaskIcon = -1,  \n    UINT uiCommandID = 0,  \n    DWORD dwUserData = 0);\n```  \n  \n### Parameters  \n [in] `nGroup`  \n Specifies the group index where the task is added.  \n  \n [in] `lpszTaskName`  \n Specifies the name of the task.  \n  \n [in] `nTaskIcon`  \n Specifies the icon to display next to the task. The framework stores icons in a list of images. This parameter is an index into that list.  \n  \n [in] `uiCommandID`  \n Specifies the command ID of the command to execute when the user clicks the task. The task is treated as a label if `uiCommandID` is 0.  \n  \n [in] `dwUserData`  \n Specifies the user-defined data to be associated with the task.  \n  \n### Return Value  \n The zero-based index of the group where the task was added, or -1 if the group specified by `nGroup` does not exist.  \n  \n##  <a name=\"cmfctaskspane__addwindow\"></a>  CMFCTasksPane::AddWindow  \n Adds a child window to the task pane.  \n  \n```  \nint AddWindow(\n    int nGroup,  \n    HWND hwndTask,  \n    int nWndHeight,  \n    BOOL bAutoDestroyWindow = FALSE,  \n    DWORD dwUserData = 0);\n```  \n  \n### Parameters  \n [in] `nGroup`  \n Specifies the group index where the window is added.  \n  \n [in] `hwndTask`  \n Specifies the handle of the window to add.  \n  \n [in] `nWndHeight`  \n Specifies the height of the window.  \n  \n [in] `bAutoDestroyWindow`  \n `TRUE` to destroy the window when the task is removed; otherwise, `FALSE`.  \n  \n [in] `dwUserData`  \n Specifies the user-defined data associated with the task.  \n  \n### Return Value  \n The zero-based index of the group where the window was added, or -1 if the group specified by `nGroup` does not exist.  \n  \n### Remarks  \n Call this method to add a control to a task pane. For example, you can add an edit control that functions like a search bar.  \n  \n##  <a name=\"cmfctaskspane__cmfctaskspane\"></a>  CMFCTasksPane::CMFCTasksPane  \n Constructs a [CMFCTasksPane](../../mfc/reference/cmfctaskspane-class.md) object.  \n  \n```  \nCMFCTasksPane();\n```  \n  \n##  <a name=\"cmfctaskspane__collapseallgroups\"></a>  CMFCTasksPane::CollapseAllGroups  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvoid CollapseAllGroups(\n    BOOL bCollapse = TRUE);\n\n \nvoid CollapseAllGroups(\n    int nPageIdx,  \n    BOOL bCollapse);\n```  \n  \n### Parameters  \n [in] `bCollapse`  \n [in] `nPageIdx`  \n  \n### Remarks  \n  \n##  <a name=\"cmfctaskspane__collapsegroup\"></a>  CMFCTasksPane::CollapseGroup  \n Collapses or expands a group.  \n  \n```  \nBOOL CollapseGroup(\n    CMFCTasksPaneTaskGroup* pGroup,  \n    BOOL bCollapse = TRUE);\n\n \nBOOL CollapseGroup(\n    int nGroup,  \n    BOOL bCollapse = TRUE);\n```  \n  \n### Parameters  \n [in] `pGroup`  \n Specifies the group to collapse.  \n  \n [in] `bCollapse`  \n `TRUE` to collapse the group; `FALSE` to expand the group.  \n  \n [in] `nGroup`  \n Specifies the zero-based index of the group to collapse in the internal list of groups.  \n  \n### Return Value  \n `TRUE` if the group collapses or expands successfully; otherwise, `FALSE`.  \n  \n### Remarks  \n A collapsed group shows only the group caption; the list of tasks is hidden.  \n  \n##  <a name=\"cmfctaskspane__createdefaultminiframe\"></a>  CMFCTasksPane::CreateDefaultMiniframe  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvirtual CPaneFrameWnd* CreateDefaultMiniframe(CRect rectInitial);\n```  \n  \n### Parameters  \n [in] `rectInitial`  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cmfctaskspane__createmenu\"></a>  CMFCTasksPane::CreateMenu  \n Creates a menu that appears when a user clicks the **Other Tasks Panes** menu button.  \n  \n```  \nHMENU CreateMenu() const;\n\n \n```  \n  \n### Return Value  \n A handle to the new menu.  \n  \n### Remarks  \n Override this method in a derived class to customize the menu for a task pane.  \n  \n The pop-up menu  that this method creates contains the list of pages in the task pane. The menu displays a check mark next to the active page.  \n  \n##  <a name=\"cmfctaskspane__enableanimation\"></a>  CMFCTasksPane::EnableAnimation  \n Enables or disables the animation that occurs when a task group expands or collapses.  \n  \n```  \nvoid EnableAnimation(BOOL bEnable = TRUE);\n```  \n  \n### Parameters  \n [in] `bEnable`  \n `TRUE` to enable the animation that occurs when a task group expands or collapses; otherwise, `FALSE`.  \n  \n### Remarks  \n By default, the animation that occurs when a task group expands or collapses is enabled.  \n  \n##  <a name=\"cmfctaskspane__enablegroupcollapse\"></a>  CMFCTasksPane::EnableGroupCollapse  \n Specifies whether a user can collapse task groups.  \n  \n```  \nvoid EnableGroupCollapse(BOOL bEnable);\n```  \n  \n### Parameters  \n [in] `bEnable`  \n `TRUE` if users can collapse task groups; otherwise, `FALSE`.  \n  \n### Remarks  \n A task group that is collapsed displays only the group caption; the list of tasks is hidden.  \n  \n##  <a name=\"cmfctaskspane__enablehistorymenubuttons\"></a>  CMFCTasksPane::EnableHistoryMenuButtons  \n Enables drop-down menus on the **Next** and **Previous** navigation buttons.  \n  \n```  \nvoid EnableHistoryMenuButtons(BOOL bEnable = TRUE);\n```  \n  \n### Parameters  \n [in] `bEnable`  \n `TRUE` to enable drop-down menus on the **Next** and **Previous** navigation buttons; otherwise, `FALSE`.  \n  \n### Remarks  \n By default, the drop-down menus on the **Next** and **Previous** buttons are disabled.  \n  \n The menus contain the history of tasks pages that the user used.  \n  \n##  <a name=\"cmfctaskspane__enablenavigationtoolbar\"></a>  CMFCTasksPane::EnableNavigationToolbar  \n Enables or disables the navigation toolbar.  \n  \n```  \nvoid EnableNavigationToolbar(\n    BOOL bEnable = TRUE,  \n    UINT uiToolbarBmpRes = 0,  \n    CSize sizeToolbarImage = CSize(0,\n    0),  \n    CSize sizeToolbarButton = CSize(0,\n    0));\n```  \n  \n### Parameters  \n [in] `bEnable`  \n `TRUE` to enable the navigation toolbar; otherwise, `FALSE`.  \n  \n [in] `uiToolbarBmpRes`  \n Specifies the resource ID of the bitmap that contains the images to display on the toolbar.  \n  \n [in] `sizeToolbarImage`  \n Specifies the size of a toolbar image.  \n  \n [in] `sizeToolbarButton`  \n Specifies the size of a toolbar button.  \n  \n### Remarks  \n The navigation toolbar is a toolbar that the framework displays at the top of the task pane. The navigation toolbar contains the **Back**, **Forward**, and **Home** navigation buttons and a menu button that contains the list of available pages.  \n  \n By default, the framework does not display the navigation toolbar. If the navigation toolbar is not displayed, the navigation buttons are located on the caption of the docking bar.  \n  \n##  <a name=\"cmfctaskspane__enableoffsetcustomcontrols\"></a>  CMFCTasksPane::EnableOffsetCustomControls  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvoid EnableOffsetCustomControls(BOOL bEnable);\n```  \n  \n### Parameters  \n [in] `bEnable`  \n  \n### Remarks  \n  \n##  <a name=\"cmfctaskspane__enablescrollbuttons\"></a>  CMFCTasksPane::EnableScrollButtons  \n Enables scroll buttons instead of a scroll bar.  \n  \n```  \nvoid EnableScrollButtons(BOOL bEnable = TRUE);\n```  \n  \n### Parameters  \n [in] `bEnable`  \n `TRUE` to display scroll buttons in the task pane instead of a scroll bar; otherwise, `FALSE`.  \n  \n### Remarks  \n By default, the framework displays scroll buttons in the task pane.  \n  \n##  <a name=\"cmfctaskspane__enablewraplabels\"></a>  CMFCTasksPane::EnableWrapLabels  \n Enables or disables word wrapping for the text in labels.  \n  \n```  \nvoid EnableWrapLabels(BOOL bEnable = TRUE);\n```  \n  \n### Parameters  \n [in] `bEnable`  \n `TRUE` to wrap the text in labels that appear on the task pane; otherwise, `FALSE`.  \n  \n### Remarks  \n By default, the framework does not wrap the text in labels. When word wrapping is enabled, the text in labels can appear in multiple lines. The label can include line breaking markers such as `\\n` and the underline marker `&`.  \n  \n##  <a name=\"cmfctaskspane__enablewraptasks\"></a>  CMFCTasksPane::EnableWrapTasks  \n Enables or disables word wrapping for the text in tasks.  \n  \n```  \nvoid EnableWrapTasks(BOOL bEnable = TRUE);\n```  \n  \n### Parameters  \n [in] `bEnable`  \n `TRUE` to wrap tasks in the task pane; otherwise, `FALSE`.  \n  \n### Remarks  \n By default, word wrapping for tasks is disabled.  \n  \n##  <a name=\"cmfctaskspane__getactivepage\"></a>  CMFCTasksPane::GetActivePage  \n Returns the zero-based index for the active page.  \n  \n```  \nint GetActivePage() const;\n\n \n```  \n  \n### Return Value  \n The zero-based index of the active page.  \n  \n##  <a name=\"cmfctaskspane__getgroupcaptionheight\"></a>  CMFCTasksPane::GetGroupCaptionHeight  \n Returns the height of the group caption.  \n  \n```  \nint GetGroupCaptionHeight() const;\n\n \n```  \n  \n### Return Value  \n The height of the group caption, in pixels.  \n  \n##  <a name=\"cmfctaskspane__getgroupcaptionhorzoffset\"></a>  CMFCTasksPane::GetGroupCaptionHorzOffset  \n Returns the horizontal offset of a group caption.  \n  \n```  \nint GetGroupCaptionHorzOffset() const;\n\n \n```  \n  \n### Return Value  \n The horizontal offset of a group caption. The horizontal offset is the distance in pixels from the left or right edge of the task pane.  \n  \n##  <a name=\"cmfctaskspane__getgroupcaptionvertoffset\"></a>  CMFCTasksPane::GetGroupCaptionVertOffset  \n Returns the vertical offset of a group caption.  \n  \n```  \nint GetGroupCaptionVertOffset() const;\n\n \n```  \n  \n### Return Value  \n The vertical offset of a group caption from the top and bottom edges of the task pane.  \n  \n### Remarks  \n The default value for the vertical offset is 7 pixels.  \n  \n##  <a name=\"cmfctaskspane__getgroupcount\"></a>  CMFCTasksPane::GetGroupCount  \n Returns the total number of groups.  \n  \n```  \nint GetGroupCount() const;\n\n \n```  \n  \n### Return Value  \n The total number of groups in the task pane.  \n  \n##  <a name=\"cmfctaskspane__getgrouplocation\"></a>  CMFCTasksPane::GetGroupLocation  \n Returns the internal group index for the specified group.  \n  \n```  \nBOOL GetGroupLocation(\n    CMFCTasksPaneTaskGroup* pGroup,  \n    int& nGroup) const;\n\n \n```  \n  \n### Parameters  \n [in] `pGroup`  \n Specifies the task group whose location is retrieved.  \n  \n [out] `nGroup`  \n Contains the zero-based index of the task group.  \n  \n### Return Value  \n `TRUE` if the task group was found; otherwise, `FALSE`.  \n  \n##  <a name=\"cmfctaskspane__getgroupvertoffset\"></a>  CMFCTasksPane::GetGroupVertOffset  \n Returns the vertical offset of a group.  \n  \n```  \nint GetGroupVertOffset() const;\n\n \n```  \n  \n### Return Value  \n The vertical offset of a group, in pixels.  \n  \n##  <a name=\"cmfctaskspane__gethorzmargin\"></a>  CMFCTasksPane::GetHorzMargin  \n Returns the horizontal spacing between a task pane and the edge of the client area.  \n  \n```  \nint GetHorzMargin() const;\n\n \n```  \n  \n### Return Value  \n The horizontal spacing between a task pane and the edge of the client area.  \n  \n### Remarks  \n The default spacing between a task pane and the edge of the client area is 12 pixels.  \n  \n##  <a name=\"cmfctaskspane__getnextpages\"></a>  CMFCTasksPane::GetNextPages  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvoid GetNextPages(CStringList& lstNextPages) const;\n\n \n```  \n  \n### Parameters  \n [in] `lstNextPages`  \n  \n### Remarks  \n  \n##  <a name=\"cmfctaskspane__getpagebygroup\"></a>  CMFCTasksPane::GetPageByGroup  \n Retrieves the page index for a specified group.  \n  \n```  \nBOOL GetPageByGroup(\n    int nGroup,  \n    int& nPage) const;\n\n \n```  \n  \n### Parameters  \n [in] `nGroup`  \n Specifies the zero-based index of the task group.  \n  \n [out] `nPage`  \n Contains the page index for the specified group. If the task group only contains a default page, the returned value is 0.  \n  \n### Return Value  \n `TRUE` if the group `nGroup` exists; otherwise, `FALSE`.  \n  \n##  <a name=\"cmfctaskspane__getpagescount\"></a>  CMFCTasksPane::GetPagesCount  \n Returns the number of pages.  \n  \n```  \nint GetPagesCount() const;\n\n \n```  \n  \n### Return Value  \n The number of pages in the task pane.  \n  \n##  <a name=\"cmfctaskspane__getpreviouspages\"></a>  CMFCTasksPane::GetPreviousPages  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvoid GetPreviousPages(CStringList& lstPrevPages) const;\n\n \n```  \n  \n### Parameters  \n [in] `lstPrevPages`  \n  \n### Remarks  \n  \n##  <a name=\"cmfctaskspane__getscrollbarctrl\"></a>  CMFCTasksPane::GetScrollBarCtrl  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvirtual CScrollBar* GetScrollBarCtrl(int nBar) const;\n\n \n```  \n  \n### Parameters  \n [in] `nBar`  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cmfctaskspane__gettask\"></a>  CMFCTasksPane::GetTask  \n Retrieves a task.  \n  \n```  \nCMFCTasksPaneTask* GetTask(\n    int nGroup,  \n    int nTask) const;\n\n \n```  \n  \n### Parameters  \n [in] `nGroup`  \n Specifies the zero-based index of the group that contains the task.  \n  \n [in] `nTask`  \n Specifies the zero-based index of the task in the list specified by `nGroup`.  \n  \n### Return Value  \n The task at the specified index.  \n  \n##  <a name=\"cmfctaskspane__gettaskcount\"></a>  CMFCTasksPane::GetTaskCount  \n Returns the number of tasks in a specified group.  \n  \n```  \nint GetTaskCount(int nGroup) const;\n\n \n```  \n  \n### Parameters  \n [in] `nGroup`  \n Specifies the index of the task group.  \n  \n### Return Value  \n The number of tasks in the specified group, or 0 if `nGroup` is invalid.  \n  \n##  <a name=\"cmfctaskspane__gettaskgroup\"></a>  CMFCTasksPane::GetTaskGroup  \n Returns a task group for a specified group index.  \n  \n```  \nCMFCTasksPaneTaskGroup* GetTaskGroup(int nGroup) const;\n\n \n```  \n  \n### Parameters  \n [in] `nGroup`  \n Specifies the zero-based index of the group to retrieve.  \n  \n### Return Value  \n The task group at the specified index.  \n  \n##  <a name=\"cmfctaskspane__gettasklocation\"></a>  CMFCTasksPane::GetTaskLocation  \n Returns the group and the index for a specified task.  \n  \n```  \nBOOL GetTaskLocation(\n    UINT uiCommandID,  \n    int& nGroup,  \n    int& nTask) const;\n\n \nBOOL GetTaskLocation(\n    HWND hwndTask,  \n    int& nGroup,  \n    int& nTask) const;\n\n \nBOOL GetTaskLocation(\n    CMFCTasksPaneTask* pTask,  \n    int& nGroup,  \n    int& nTask) const;\n\n \n```  \n  \n### Parameters  \n [in] `uiCommandID`  \n Specifies the command ID of the task to find.  \n  \n [out] `nGroup`  \n Contains the group index of the task.  \n  \n [out] `nTask`  \n Contains the index of the task in the task group.  \n  \n [in] `hwndTask`  \n Specifies the window associated with the task.  \n  \n [in] `pTask`  \n Specifies the task to find.  \n  \n### Return Value  \n `TRUE` if the task location was found; `FALSE` if the specified task does not exist.  \n  \n### Remarks  \n This method retrieves the group index and task index for the specified task. If the method returns `FALSE`, `nGroup` and `nTask` are set to -1.  \n  \n##  <a name=\"cmfctaskspane__gettaskshorzoffset\"></a>  CMFCTasksPane::GetTasksHorzOffset  \n Returns the horizontal offset of tasks.  \n  \n```  \nint GetTasksHorzOffset() const;\n\n \n```  \n  \n### Return Value  \n The horizontal offset of tasks from the left and right edges of their parent groups.  \n  \n### Remarks  \n The default horizontal offset of tasks is 12 pixels.  \n  \n##  <a name=\"cmfctaskspane__gettasksiconhorzoffset\"></a>  CMFCTasksPane::GetTasksIconHorzOffset  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nint GetTasksIconHorzOffset() const;\n\n \n```  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cmfctaskspane__gettasksiconvertoffset\"></a>  CMFCTasksPane::GetTasksIconVertOffset  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nint GetTasksIconVertOffset() const;\n\n \n```  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cmfctaskspane__getvertmargin\"></a>  CMFCTasksPane::GetVertMargin  \n Returns the vertical margin between a task pane and the edges of the client area.  \n  \n```  \nint GetVertMargin() const;\n\n \n```  \n  \n### Return Value  \n The vertical margin between a task pane and the edges of the client area.  \n  \n### Remarks  \n The vertical margin is the space between a task pane and the edges of the client area. The default value of the vertical margin is 12 pixels.  \n  \n##  <a name=\"cmfctaskspane__isaccessibilitycompatible\"></a>  CMFCTasksPane::IsAccessibilityCompatible  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvirtual BOOL IsAccessibilityCompatible();\n```  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cmfctaskspane__isanimationenabled\"></a>  CMFCTasksPane::IsAnimationEnabled  \n Indicates whether animation is enabled.  \n  \n```  \nBOOL IsAnimationEnabled() const;\n\n \n```  \n  \n### Return Value  \n `TRUE` if the animation that occurs when a user expands or collapses a group is enabled; otherwise, `FALSE`.  \n  \n### Remarks  \n Call [CMFCTasksPane::EnableAnimation](#cmfctaskspane__enableanimation) to enable or disable animation.  \n  \n##  <a name=\"cmfctaskspane__isbackbuttonenabled\"></a>  CMFCTasksPane::IsBackButtonEnabled  \n Indicates whether the back button is enabled.  \n  \n```  \nBOOL IsBackButtonEnabled() const;\n\n \n```  \n  \n### Return Value  \n `TRUE` if the back button is enabled; otherwise, `FALSE`.  \n  \n### Remarks  \n When a user clicks the back button, the framework displays the previous task page.  \n  \n##  <a name=\"cmfctaskspane__isforwardbuttonenabled\"></a>  CMFCTasksPane::IsForwardButtonEnabled  \n Indicates whether the forward button is enabled.  \n  \n```  \nBOOL IsForwardButtonEnabled() const;\n\n \n```  \n  \n### Return Value  \n `TRUE` if the forward button is enabled; otherwise, `FALSE`.  \n  \n### Remarks  \n The forward button enables forward navigation in the history of task pages.  \n  \n##  <a name=\"cmfctaskspane__isgroupcollapseenabled\"></a>  CMFCTasksPane::IsGroupCollapseEnabled  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nBOOL IsGroupCollapseEnabled() const;\n\n \n```  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cmfctaskspane__ishistorymenubuttonsenabled\"></a>  CMFCTasksPane::IsHistoryMenuButtonsEnabled  \n Indicates whether the **Next** and **Previous** navigation buttons have drop-down menus.  \n  \n```  \nBOOL IsHistoryMenuButtonsEnabled() const;\n\n \n```  \n  \n### Return Value  \n `TRUE` if the **Next** and **Previous** navigation buttons have drop-down menus; otherwise, `FALSE`.  \n  \n##  <a name=\"cmfctaskspane__isnavigationtoolbarenabled\"></a>  CMFCTasksPane::IsNavigationToolbarEnabled  \n Indicates whether the navigation toolbar is enabled.  \n  \n```  \nBOOL IsNavigationToolbarEnabled() const;\n\n \n```  \n  \n### Return Value  \n `TRUE` if the navigation toolbar is enabled; otherwise, `FALSE`.  \n  \n##  <a name=\"cmfctaskspane__istoolbox\"></a>  CMFCTasksPane::IsToolBox  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvirtual BOOL IsToolBox() const;\n\n \n```  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cmfctaskspane__iswraplabelsenabled\"></a>  CMFCTasksPane::IsWrapLabelsEnabled  \n Indicates whether the task pane wraps words in labels.  \n  \n```  \nBOOL IsWrapLabelsEnabled() const;\n\n \n```  \n  \n### Return Value  \n `TRUE` if words in labels are wrapped; otherwise, `FALSE`.  \n  \n##  <a name=\"cmfctaskspane__iswraptasksenabled\"></a>  CMFCTasksPane::IsWrapTasksEnabled  \n Specifies whether the framework wraps the task string.  \n  \n```  \nBOOL IsWrapTasksEnabled() const;\n\n \n```  \n  \n### Return Value  \n `TRUE` if the task string is wrapped; otherwise, `FALSE`.  \n  \n##  <a name=\"cmfctaskspane__loadstate\"></a>  CMFCTasksPane::LoadState  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvirtual BOOL LoadState(\n    LPCTSTR lpszProfileName = NULL,  \n    int nIndex = -1,  \n    UINT uiID = (UINT) -1);\n```  \n  \n### Parameters  \n [in] `lpszProfileName`  \n [in] `nIndex`  \n [in] `uiID`  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cmfctaskspane__onactivatetaskspanepage\"></a>  CMFCTasksPane::OnActivateTasksPanePage  \n Called by the framework when it makes a task pane page active.  \n  \n```  \nvirtual void OnActivateTasksPanePage();\n```  \n  \n### Remarks  \n Override this method in a derived class to customize the appearance of the task pane page.  \n  \n##  <a name=\"cmfctaskspane__oncancel\"></a>  CMFCTasksPane::OnCancel  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvirtual void OnCancel();\n```  \n  \n### Remarks  \n  \n##  <a name=\"cmfctaskspane__onclicktask\"></a>  CMFCTasksPane::OnClickTask  \n Called by the framework when the user clicks an item in the task pane.  \n  \n```  \nvirtual void OnClickTask(\n    int nGroupNumber,  \n    int nTaskNumber,  \n    UINT uiCommandID,  \n    DWORD dwUserData);\n```  \n  \n### Parameters  \n [in] `nGroupNumber`  \n Specifies the zero-based index of the group that contains the clicked task.  \n  \n [in] `nTaskNumber`  \n Specifies the zero-based index of the clicked task.  \n  \n [in] `uiCommandID`  \n Specifies the command ID associated with the task.  \n  \n [in] `dwUserData`  \n Contains user-defined data associated with the clicked task.  \n  \n### Remarks  \n The framework calls this method when a user clicks a task. By default, the framework checks the command ID associated with the clicked task and, if it is not zero, sends the `WM_COMMAND` message to the owner of the task pane control.  \n  \n Override this method in a derived class to execute custom code when a task is clicked.  \n  \n##  <a name=\"cmfctaskspane__onok\"></a>  CMFCTasksPane::OnOK  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvirtual void OnOK();\n```  \n  \n### Remarks  \n  \n##  <a name=\"cmfctaskspane__onpressbackbutton\"></a>  CMFCTasksPane::OnPressBackButton  \n Called by the framework when the user clicks the back button.  \n  \n```  \nvirtual void OnPressBackButton();\n```  \n  \n### Remarks  \n By default, the framework displays the previously viewed page.  \n  \n Override this method in a derived class to execute custom code when the user clicks the back button.  \n  \n##  <a name=\"cmfctaskspane__onpressforwardbutton\"></a>  CMFCTasksPane::OnPressForwardButton  \n Called by the framework when the user clicks the forward navigation button.  \n  \n```  \nvirtual void OnPressForwardButton();\n```  \n  \n### Remarks  \n By default, the framework displays the page that the user viewed before clicking the **Back** button.  \n  \n Override this method in a derived class to execute custom code when the user clicks the forward button.  \n  \n##  <a name=\"cmfctaskspane__onpresshomebutton\"></a>  CMFCTasksPane::OnPressHomeButton  \n Called by the framework when the user clicks the home navigation button.  \n  \n```  \nvirtual void OnPressHomeButton();\n```  \n  \n### Remarks  \n By default, the framework displays the default page for the task group.  \n  \n Override this method in a derived class to execute custom code when the user clicks the home navigation button.  \n  \n##  <a name=\"cmfctaskspane__onpressotherbutton\"></a>  CMFCTasksPane::OnPressOtherButton  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvirtual void OnPressOtherButton(\n    CMFCCaptionMenuButton* pbtn,  \n    CWnd* pWndOwner);\n```  \n  \n### Parameters  \n [in] `pbtn`  \n [in] `pWndOwner`  \n  \n### Remarks  \n  \n##  <a name=\"cmfctaskspane__onsetaccdata\"></a>  CMFCTasksPane::OnSetAccData  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvirtual BOOL OnSetAccData(long lVal);\n```  \n  \n### Parameters  \n [in] `lVal`  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cmfctaskspane__onupdatecmdui\"></a>  CMFCTasksPane::OnUpdateCmdUI  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvirtual void OnUpdateCmdUI(\n    CFrameWnd* pTarget,  \n    BOOL bDisableIfNoHndler);\n```  \n  \n### Parameters  \n [in] `pTarget`  \n [in] `bDisableIfNoHndler`  \n  \n### Remarks  \n  \n##  <a name=\"cmfctaskspane__pretranslatemessage\"></a>  CMFCTasksPane::PreTranslateMessage  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvirtual BOOL PreTranslateMessage(MSG* pMsg);\n```  \n  \n### Parameters  \n [in] `pMsg`  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cmfctaskspane__recalclayout\"></a>  CMFCTasksPane::RecalcLayout  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvoid RecalcLayout(BOOL bRedraw = TRUE);\n```  \n  \n### Parameters  \n [in] `bRedraw`  \n  \n### Remarks  \n  \n##  <a name=\"cmfctaskspane__removeallgroups\"></a>  CMFCTasksPane::RemoveAllGroups  \n Removes all groups on the specified page.  \n  \n```  \nvoid RemoveAllGroups(int nPageIdx = 0);\n```  \n  \n### Parameters  \n [in] `nPageIdx`  \n Specifies the zero-based index of the page.  \n  \n### Remarks  \n Removes all groups on the page specified by `nPageIdx`, or all groups if there is only a default page.  \n  \n##  <a name=\"cmfctaskspane__removeallpages\"></a>  CMFCTasksPane::RemoveAllPages  \n Removes all pages from the task pane except the default (first) page.  \n  \n```  \nvoid RemoveAllPages();\n```  \n  \n##  <a name=\"cmfctaskspane__removealltasks\"></a>  CMFCTasksPane::RemoveAllTasks  \n Removes all tasks from the specified group.  \n  \n```  \nvoid RemoveAllTasks(int nGroup);\n```  \n  \n### Parameters  \n [in] `nGroup`  \n Specifies the zero-based index of the group.  \n  \n##  <a name=\"cmfctaskspane__removegroup\"></a>  CMFCTasksPane::RemoveGroup  \n Removes a group.  \n  \n```  \nvoid RemoveGroup(int nGroup);\n```  \n  \n### Parameters  \n [in] `nGroup`  \n Specifies the zero-based index of the group to remove.  \n  \n### Remarks  \n This method removes a single group. To remove all groups, call [CMFCTasksPane::RemoveAllGroups](#cmfctaskspane__removeallgroups) instead.  \n  \n When the framework removes a group, all tasks and user windows associated with it are destroyed.  \n  \n##  <a name=\"cmfctaskspane__removepage\"></a>  CMFCTasksPane::RemovePage  \n Removes a specified page from the task pane.  \n  \n```  \nvoid RemovePage(int nPageIdx);\n```  \n  \n### Parameters  \n [in] `nPageIdx`  \n Specifies the zero-based index of the page to remove.  \n  \n##  <a name=\"cmfctaskspane__removetask\"></a>  CMFCTasksPane::RemoveTask  \n Removes a task from a task group.  \n  \n```  \nBOOL RemoveTask(\n    int nGroup,  \n    int nTask,  \n    BOOL bRedraw = TRUE);\n```  \n  \n### Parameters  \n [in] `nGroup`  \n Specifies the zero-based index of the task group that contains the task to remove.  \n  \n [in] `nTask`  \n Specifies the zero-based index of the task to remove.  \n  \n [in] `bRedraw`  \n `TRUE` to redraw the task pane; otherwise, `FALSE`.  \n  \n### Return Value  \n `TRUE` if the function succeeds; `FALSE` if `nGroup` or `nTask` is invalid.  \n  \n##  <a name=\"cmfctaskspane__savestate\"></a>  CMFCTasksPane::SaveState  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvirtual BOOL SaveState(\n    LPCTSTR lpszProfileName = NULL,  \n    int nIndex = -1,  \n    UINT uiID = (UINT) -1);\n```  \n  \n### Parameters  \n [in] `lpszProfileName`  \n [in] `nIndex`  \n [in] `uiID`  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cmfctaskspane__serialize\"></a>  CMFCTasksPane::Serialize  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvirtual void Serialize(CArchive& ar);\n```  \n  \n### Parameters  \n [in] `ar`  \n  \n### Remarks  \n  \n##  <a name=\"cmfctaskspane__setactivepage\"></a>  CMFCTasksPane::SetActivePage  \n Makes the specified page in the task pane active.  \n  \n```  \nvoid SetActivePage(int nPageIdx);\n```  \n  \n### Parameters  \n [in] `nPageIdx`  \n Specifies the zero-based index of the page to display.  \n  \n### Remarks  \n This method asserts if the `nPageIdx` is invalid.  \n  \n##  <a name=\"cmfctaskspane__setcaption\"></a>  CMFCTasksPane::SetCaption  \n Sets the caption name of a task pane.  \n  \n```  \nvoid SetCaption(LPCTSTR lpszName);\n```  \n  \n### Parameters  \n [in] `lpszName`  \n Specifies the caption name.  \n  \n### Remarks  \n If a task pane has multiple pages, the default page has the caption that was set by using this function.  \n  \n##  <a name=\"cmfctaskspane__setgroupcaptionheight\"></a>  CMFCTasksPane::SetGroupCaptionHeight  \n Sets the height of a group caption.  \n  \n```  \nvoid SetGroupCaptionHeight(int n = -1);\n```  \n  \n### Parameters  \n [in] `n`  \n Specifies the caption height.  \n  \n### Remarks  \n Call this method to customize the margins of the task pane elements.  \n  \n If `n` is -1, the framework determines the margin value by using the visual manager ( `CMFCVisualManager::GetTasksPaneGroupCaptionHeight`). The default caption height is 25 pixels.  \n  \n##  <a name=\"cmfctaskspane__setgroupcaptionhorzoffset\"></a>  CMFCTasksPane::SetGroupCaptionHorzOffset  \n Sets the horizontal offset of a group caption.  \n  \n```  \nvoid SetGroupCaptionHorzOffset(int n = -1);\n```  \n  \n### Parameters  \n [in] `n`  \n Specifies the horizontal offset of the group caption.  \n  \n##  <a name=\"cmfctaskspane__setgroupcaptionvertoffset\"></a>  CMFCTasksPane::SetGroupCaptionVertOffset  \n Sets the vertical offset of a group caption.  \n  \n```  \nvoid SetGroupCaptionVertOffset(int n = -1);\n```  \n  \n### Parameters  \n [in] `n`  \n Specifies the vertical offset, in pixels, of the group caption.  \n  \n##  <a name=\"cmfctaskspane__setgroupname\"></a>  CMFCTasksPane::SetGroupName  \n Sets a group name.  \n  \n```  \nBOOL SetGroupName(\n    int nGroup,  \n    LPCTSTR lpszGroupName);\n```  \n  \n### Parameters  \n [in] `nGroup`  \n Specifies the zero-based index of the group.  \n  \n [in] `lpszGroupName`  \n Specifies the name of the group.  \n  \n### Return Value  \n `TRUE` if the group name was successfully set; otherwise, `FALSE`.  \n  \n##  <a name=\"cmfctaskspane__setgrouptextcolor\"></a>  CMFCTasksPane::SetGroupTextColor  \n Sets the text color for a group caption.  \n  \n```  \nBOOL SetGroupTextColor(\n    int nGroup,  \n    COLORREF color,  \n    COLORREF colorHot = (COLORREF)-1);\n```  \n  \n### Parameters  \n [in] `nGroup`  \n Specifies the zero-based index of the group.  \n  \n [in] `color`  \n Specifies the text color.  \n  \n [in] `colorHot`  \n Specifies the text color for the highlighted group. If -1, the default highlight color is used.  \n  \n### Return Value  \n `TRUE` if the group text color was successfully changed; otherwise, `FALSE`.  \n  \n##  <a name=\"cmfctaskspane__setgroupvertoffset\"></a>  CMFCTasksPane::SetGroupVertOffset  \n Sets the vertical offset for a group.  \n  \n```  \nvoid SetGroupVertOffset(int n = -1);\n```  \n  \n### Parameters  \n [in] `n`  \n Specifies the vertical offset.  \n  \n### Remarks  \n The vertical offset is the distance between a task group and the border of the task pane.  \n  \n Call this method to customize the margins of task pane elements. If `n` is -1, the framework determines the margin value by using the visual manager ( `CMFCVisualManager::GetTasksPaneGroupVertOffset`). The default offset is 15 pixels.  \n  \n##  <a name=\"cmfctaskspane__sethorzmargin\"></a>  CMFCTasksPane::SetHorzMargin  \n Sets the horizontal margin.  \n  \n```  \nvoid SetHorzMargin(int n = -1);\n```  \n  \n### Parameters  \n [in] `n`  \n Specifies the margin, in pixels.  \n  \n### Remarks  \n The horizontal margin is the distance between a task pane and the top or bottom edge of the client area.  \n  \n If n is -1, and the framework determines the margin value by using the visual manager ( `CMFCVisualManager::GetTasksPaneHorzMargin`). The default horizontal margin is 12 pixels.  \n  \n##  <a name=\"cmfctaskspane__seticonslist\"></a>  CMFCTasksPane::SetIconsList  \n Sets the image list.  \n  \n```  \nBOOL SetIconsList(\n    UINT uiImageListResID,  \n    int cx,  \n    COLORREF clrTransparent = RGB(255,\n    0,\n    255));\n\n \nvoid SetIconsList(\n    HIMAGELIST hIcons);\n```  \n  \n### Parameters  \n [in] `uiImageListResID`  \n Specifies the resource ID of the image list.  \n  \n [in] `cx`  \n Specifies the size of icons in the image list.  \n  \n [in] `clrTransparent`  \n Specifies the transparent color.  \n  \n [in] `hIcons`  \n Specifies the image list that contains the icons for the task pane.  \n  \n### Remarks  \n The framework stores icons in an image list. Tasks are associated with icons that are stored in that list.  \n  \n This method associates an image list with the task pane control. To set the icon for a task when you call [CMFCTasksPane::AddTask](#cmfctaskspane__addtask), set `nTaskIcon` to the appropriate zero-based index in this image list.  \n  \n##  <a name=\"cmfctaskspane__setpagecaption\"></a>  CMFCTasksPane::SetPageCaption  \n Sets the caption text for a task pane page.  \n  \n```  \nvoid SetPageCaption(\n    int nPageIdx,  \n    LPCTSTR lpszName);\n```  \n  \n### Parameters  \n [in] `nPageIdx`  \n Specifies the zero-based index of the page.  \n  \n [in] `lpszName`  \n Specifies the caption text to display on the page.  \n  \n### Remarks  \n If a task pane has multiple pages, the default page has the caption that was set by using this method.  \n  \n##  <a name=\"cmfctaskspane__settaskname\"></a>  CMFCTasksPane::SetTaskName  \n Sets the name for a task.  \n  \n```  \nBOOL SetTaskName(\n    int nGroup,  \n    int nTask,  \n    LPCTSTR lpszTaskName);\n```  \n  \n### Parameters  \n [in] `nGroup`  \n Specifies the zero-based index of the task group.  \n  \n [in] `nTask`  \n Specifies the zero-based index of the task.  \n  \n [in] `lpszTaskName`  \n Specifies the task name.  \n  \n### Return Value  \n `TRUE` if the task name was successfully set; otherwise, `FALSE`.  \n  \n##  <a name=\"cmfctaskspane__settaskshorzoffset\"></a>  CMFCTasksPane::SetTasksHorzOffset  \n Sets the horizontal offset for tasks.  \n  \n```  \nvoid SetTasksHorzOffset(int n = -1);\n```  \n  \n### Parameters  \n [in] `n`  \n Specifies the horizontal offset.  \n  \n### Remarks  \n The horizontal offset is the distance in pixels from the left and right edges of a group.  \n  \n If `n` is -1, this method sets the horizontal offset to the value returned by the `CMFCVisualManager::GetTasksPaneTaskHorzOffset` method.  \n  \n The default horizontal offset is 12 pixels.  \n  \n##  <a name=\"cmfctaskspane__settasksiconhorzoffset\"></a>  CMFCTasksPane::SetTasksIconHorzOffset  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvoid SetTasksIconHorzOffset(it n = -1);\n```  \n  \n### Parameters  \n [in] `n`  \n  \n### Remarks  \n  \n##  <a name=\"cmfctaskspane__settasksiconvertoffset\"></a>  CMFCTasksPane::SetTasksIconVertOffset  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvoid SetTasksIconVertOffset(it n = -1);\n```  \n  \n### Parameters  \n [in] `n`  \n  \n### Remarks  \n  \n##  <a name=\"cmfctaskspane__settasktextcolor\"></a>  CMFCTasksPane::SetTaskTextColor  \n Sets the text color for a task.  \n  \n```  \nBOOL SetTaskTextColor(\n    int nGroup,  \n    int nTask,  \n    COLORREF color,  \n    COLORREF colorHot = (COLORREF)-1);\n```  \n  \n### Parameters  \n [in] `nGroup`  \n Specifies the zero-based index of the task group that contains the task.  \n  \n [in] `nTask`  \n Specifies the zero-based index of the task.  \n  \n [in] `color`  \n Specifies the text color for the task.  \n  \n [in] `colorHot`  \n Specifies the text color for the highlighted group. If -1, this method uses the default highlight color.  \n  \n### Return Value  \n `TRUE` if the text color for the task was successfully set; otherwise, `FALSE`.  \n  \n##  <a name=\"cmfctaskspane__setvertmargin\"></a>  CMFCTasksPane::SetVertMargin  \n Sets the vertical margin.  \n  \n```  \nvoid SetVertMargin(int n = -1);\n```  \n  \n### Parameters  \n [in] `n`  \n Specifies the vertical margin to set.  \n  \n### Remarks  \n The vertical margin is the distance between a task pane and the vertical edges of the client area.  \n  \n If `n` is -1, the framework determines the margin value by using  the visual manager ( `CMFCVisualManager::GetTasksPaneVertMargin`). The default margin is 12 pixels.  \n  \n##  <a name=\"cmfctaskspane__setwindowheight\"></a>  CMFCTasksPane::SetWindowHeight  \n Sets the height for a window control.  \n  \n```  \nBOOL SetWindowHeight(\n    int nGroup,  \n    HWND hwndTask,  \n    int nWndHeight);\n\n \nBOOL SetWindowHeight(\n    HWND hwndTask,  \n    int nWndHeight);\n```  \n  \n### Parameters  \n [in] `nGroup`  \n Specifies the zero-based index of the group that contains the window control.  \n  \n [in] `hwndTask`  \n Specifies the handle to the window control.  \n  \n [in] `nWndHeight`  \n Specifies the height to set.  \n  \n### Return Value  \n `TRUE` if the height of the window control was successfully set; `FALSE` if `nGroup` is invalid or if `hwndTask` does not exist.  \n  \n### Remarks  \n Call [CMFCTasksPane::AddWindow](#cmfctaskspane__addwindow) to add tasks with window controls.  \n  \n##  <a name=\"cmfctaskspane__showcommandmessagestring\"></a>  CMFCTasksPane::ShowCommandMessageString  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvirtual void ShowCommandMessageString(UINT uiCmdId);\n```  \n  \n### Parameters  \n [in] `uiCmdId`  \n  \n### Remarks  \n  \n##  <a name=\"cmfctaskspane__showtask\"></a>  CMFCTasksPane::ShowTask  \n Shows or hides a task.  \n  \n```  \nBOOL ShowTask(\n    int nGroup,  \n    int nTask,  \n    BOOL bShow = TRUE,  \n    BOOL bRedraw = TRUE);\n```  \n  \n### Parameters  \n [in] `nGroup`  \n Specifies the zero-based index of the group.  \n  \n [in] `nTask`  \n Specifies the zero-based index of the task to show or hide.  \n  \n [in] `bShow`  \n `TRUE` to show the task; `FALSE` to hide the task.  \n  \n [in] `bRedraw`  \n `TRUE` to redraw the task pane; otherwise, `FALSE`.  \n  \n### Return Value  \n `TRUE` if the task was successfully shown or hidden; `FALSE` if the specified group or task does not exist.  \n  \n### Remarks  \n Use [CMFCTasksPane::ShowTaskByCmdId](#cmfctaskspane__showtaskbycmdid) to show or hide a task based on its command ID.  \n  \n##  <a name=\"cmfctaskspane__showtaskbycmdid\"></a>  CMFCTasksPane::ShowTaskByCmdId  \n Shows or hides a task based on its command ID.  \n  \n```  \nBOOL ShowTaskByCmdId(\n    UINT uiCommandID,  \n    BOOL bShow = TRUE,  \n    BOOL bRedraw = TRUE);\n```  \n  \n### Parameters  \n [in] `uiCommandID`  \n Specifies the command ID of the task to show or hide.  \n  \n [in] `bShow`  \n `TRUE` to show the task; `FALSE` to hide the task.  \n  \n [in] `bRedraw`  \n `TRUE` to redraw the task pane; otherwise, `FALSE`.  \n  \n### Return Value  \n `TRUE` if the task was successfully shown or hidden; `FALSE` if a task with the specified command ID does not exist.  \n  \n### Remarks  \n Use [CMFCTasksPane::ShowTask](#cmfctaskspane__showtask) to show or hide a task based on its command ID.  \n  \n##  <a name=\"cmfctaskspane__update\"></a>  CMFCTasksPane::Update  \n Refreshes all of the controls in a task pane.  \n  \n```  \nvirtual void Update();\n```  \n  \n### Remarks  \n This method updates the task pane caption, adjusts the scroll bar, repositions all tasks, and redraws all of the task pane controls.  \n  \n Override this method in a derived class to execute custom code when the framework refreshes the task pane.  \n  \n## See Also  \n [Hierarchy Chart](../../mfc/hierarchy-chart.md)   \n [Classes](../../mfc/reference/mfc-classes.md)   \n [CMFCTasksPaneTaskGroup Class](../../mfc/reference/cmfctaskspanetaskgroup-class.md)   \n [CMFCTasksPaneTask Class](../../mfc/reference/cmfctaskspanetask-class.md)   \n [CMFCOutlookBar Class](../../mfc/reference/cmfcoutlookbar-class.md)   \n [CMFCVisualManager Class](../../mfc/reference/cmfcvisualmanager-class.md)\n"}