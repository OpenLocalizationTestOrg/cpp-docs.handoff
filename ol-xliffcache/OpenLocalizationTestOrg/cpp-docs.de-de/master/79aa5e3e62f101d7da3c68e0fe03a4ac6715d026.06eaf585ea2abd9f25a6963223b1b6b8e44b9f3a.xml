{"nodes":[{"pos":[12,55],"content":"Exceptions: OLE Exceptions | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Exceptions: OLE Exceptions | Microsoft Docs","pos":[0,43]}]},{"content":"Exceptions: OLE Exceptions","pos":[696,722]},{"content":"The techniques and facilities for handling exceptions in OLE are the same as those for handling other exceptions.","pos":[723,836]},{"content":"For further information on exception handling, see the article <bpt id=\"p1\">[</bpt>C++ Exception Handling<ept id=\"p1\">](../cpp/cpp-exception-handling.md)</ept>.","pos":[837,959],"source":" For further information on exception handling, see the article [C++ Exception Handling](../cpp/cpp-exception-handling.md)."},{"content":"All exception objects are derived from the abstract base class <ph id=\"ph1\">`CException`</ph>.","pos":[966,1042],"source":"All exception objects are derived from the abstract base class `CException`."},{"content":"MFC provides two classes for handling OLE exceptions:","pos":[1043,1096]},{"pos":[1106,1199],"content":"<bpt id=\"p1\">[</bpt>COleException<ept id=\"p1\">](../mfc/reference/coleexception-class.md)</ept> For handling general OLE exceptions.","source":"[COleException](../mfc/reference/coleexception-class.md) For handling general OLE exceptions."},{"pos":[1209,1347],"content":"<bpt id=\"p1\">[</bpt>COleDispatchException<ept id=\"p1\">](../mfc/reference/coledispatchexception-class.md)</ept> For generating and handling OLE dispatch (automation) exceptions.","source":"[COleDispatchException](../mfc/reference/coledispatchexception-class.md) For generating and handling OLE dispatch (automation) exceptions."},{"content":"The difference between these two classes is the amount of information they provide and where they are used.","pos":[1354,1461]},{"content":"has a public data member that contains the OLE status code for the exception.","pos":[1478,1555]},{"content":"supplies more information, including the following:","pos":[1580,1631]},{"content":"An application-specific error code","pos":[1641,1675]},{"content":"An error description, such as \"Disk full\"","pos":[1685,1726]},{"content":"A Help context that your application can use to provide additional information for the user","pos":[1736,1827]},{"content":"The name of your application's Help file","pos":[1837,1877]},{"content":"The name of the application that generated the exception","pos":[1887,1943]},{"content":"provides more information so that it can be used with products like Microsoft Visual Basic.","pos":[1974,2065]},{"content":"The verbal error description can be used in a message box or other notification; the Help information can be used to help the user respond to the conditions that caused the exception.","pos":[2066,2249]},{"content":"Two global functions correspond to the two OLE exception classes: <bpt id=\"p1\">[</bpt>AfxThrowOleException<ept id=\"p1\">](../mfc/reference/exception-processing.md#afxthrowoleexception)</ept> and <bpt id=\"p2\">[</bpt>AfxThrowOleDispatchException<ept id=\"p2\">](../mfc/reference/exception-processing.md#afxthrowoledispatchexception)</ept>.","pos":[2256,2514],"source":"Two global functions correspond to the two OLE exception classes: [AfxThrowOleException](../mfc/reference/exception-processing.md#afxthrowoleexception) and [AfxThrowOleDispatchException](../mfc/reference/exception-processing.md#afxthrowoledispatchexception)."},{"content":"Use them to throw general OLE exceptions and OLE dispatch exceptions, respectively.","pos":[2515,2598]},{"content":"See Also","pos":[2607,2615]},{"content":"Exception Handling","pos":[2620,2638]}],"content":"---\ntitle: \"Exceptions: OLE Exceptions | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"OLE, exceptions\"\n  - \"OLE exceptions\"\n  - \"exceptions, OLE\"\n  - \"exception handling, OLE\"\n  - \"OLE exceptions, classes for handling\"\nms.assetid: 2f8e0161-b94f-48bb-a5a2-6f644b192527\ncaps.latest.revision: 10\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Exceptions: OLE Exceptions\nThe techniques and facilities for handling exceptions in OLE are the same as those for handling other exceptions. For further information on exception handling, see the article [C++ Exception Handling](../cpp/cpp-exception-handling.md).  \n  \n All exception objects are derived from the abstract base class `CException`. MFC provides two classes for handling OLE exceptions:  \n  \n-   [COleException](../mfc/reference/coleexception-class.md) For handling general OLE exceptions.  \n  \n-   [COleDispatchException](../mfc/reference/coledispatchexception-class.md) For generating and handling OLE dispatch (automation) exceptions.  \n  \n The difference between these two classes is the amount of information they provide and where they are used. `COleException` has a public data member that contains the OLE status code for the exception. `COleDispatchException` supplies more information, including the following:  \n  \n-   An application-specific error code  \n  \n-   An error description, such as \"Disk full\"  \n  \n-   A Help context that your application can use to provide additional information for the user  \n  \n-   The name of your application's Help file  \n  \n-   The name of the application that generated the exception  \n  \n `COleDispatchException` provides more information so that it can be used with products like Microsoft Visual Basic. The verbal error description can be used in a message box or other notification; the Help information can be used to help the user respond to the conditions that caused the exception.  \n  \n Two global functions correspond to the two OLE exception classes: [AfxThrowOleException](../mfc/reference/exception-processing.md#afxthrowoleexception) and [AfxThrowOleDispatchException](../mfc/reference/exception-processing.md#afxthrowoledispatchexception). Use them to throw general OLE exceptions and OLE dispatch exceptions, respectively.  \n  \n## See Also  \n [Exception Handling](../mfc/exception-handling-in-mfc.md)\n\n"}