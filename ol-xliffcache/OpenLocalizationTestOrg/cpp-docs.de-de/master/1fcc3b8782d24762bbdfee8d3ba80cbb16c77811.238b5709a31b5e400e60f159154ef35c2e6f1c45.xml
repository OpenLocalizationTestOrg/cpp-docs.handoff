{"nodes":[{"pos":[12,61],"content":"_seh_filter_dll, _seh_filter_exe | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"_seh_filter_dll, _seh_filter_exe | Microsoft Docs","pos":[0,49]}]},{"content":"_seh_filter_dll, _seh_filter_exe","pos":[1205,1237]},{"content":"Identifies the exception and the related action to be taken.","pos":[1238,1298]},{"content":"Syntax","pos":[1307,1313]},{"content":"Parameters","pos":[1573,1583]},{"content":"[in]","pos":[1587,1591]},{"content":"The identifier for the exception.","pos":[1611,1644]},{"content":"[in]","pos":[1651,1655]},{"content":"A pointer to the exception information.","pos":[1675,1714]},{"content":"Return Value","pos":[1723,1735]},{"content":"An integer that indicates the action to be taken, based on the result of exception processing.","pos":[1739,1833]},{"content":"Remarks","pos":[1842,1849]},{"content":"These methods are called by the exception-filter expression of the <bpt id=\"p1\">[</bpt>try-except Statement<ept id=\"p1\">](../../cpp/try-except-statement.md)</ept>.","pos":[1853,1978],"source":"These methods are called by the exception-filter expression of the [try-except Statement](../../cpp/try-except-statement.md)."},{"content":"The method consults a constant internal table to identify the exception and determine the appropriate action, as shown here.","pos":[1979,2103]},{"content":"The exception numbers are defined in winnt.h and the signal numbers are defined in signal.h.","pos":[2104,2196]},{"content":"Exception Number (unsigned long)","pos":[2203,2235]},{"content":"Signal Number","pos":[2236,2249]},{"content":"STATUS_ACCESS_VIOLATION","pos":[2319,2342]},{"content":"SIGSEGV","pos":[2343,2350]},{"content":"STATUS_ILLEGAL_INSTRUCTION","pos":[2355,2381]},{"content":"SIGILL","pos":[2382,2388]},{"content":"STATUS_PRIVILEGED_INSTRUCTION","pos":[2393,2422]},{"content":"SIGILL","pos":[2423,2429]},{"content":"STATUS_FLOAT_DENORMAL_OPERAND","pos":[2434,2463]},{"content":"SIGFPE","pos":[2464,2470]},{"content":"STATUS_FLOAT_DIVIDE_BY_ZERO","pos":[2475,2502]},{"content":"SIGFPE","pos":[2503,2509]},{"content":"STATUS_FLOAT_INEXACT_RESULT","pos":[2514,2541]},{"content":"SIGFPE","pos":[2542,2548]},{"content":"STATUS_FLOAT_INVALID_OPERATION","pos":[2553,2583]},{"content":"SIGFPE","pos":[2584,2590]},{"content":"STATUS_FLOAT_OVERFLOW","pos":[2595,2616]},{"content":"SIGFPE","pos":[2617,2623]},{"content":"STATUS_FLOAT_STACK_CHECK","pos":[2628,2652]},{"content":"SIGFPE","pos":[2653,2659]},{"content":"STATUS_FLOAT_UNDERFLOW","pos":[2664,2686]},{"content":"SIGFPE","pos":[2687,2693]},{"content":"Requirements","pos":[2703,2715]},{"pos":[2719,2748],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> corecrt_startup.h","source":"**Header:** corecrt_startup.h"},{"content":"See Also","pos":[2757,2765]},{"content":"Alphabetical Function Reference","pos":[2770,2801]}],"content":"---\ntitle: \"_seh_filter_dll, _seh_filter_exe | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\napiname: \n  - \"_XcptFilter\"\n  - \"_seh_filter_dll\"\n  - \"_seh_filter_exe\"\napilocation: \n  - \"msvcrt.dll\"\n  - \"msvcr80.dll\"\n  - \"msvcr90.dll\"\n  - \"msvcr100.dll\"\n  - \"msvcr100_clr0400.dll\"\n  - \"msvcr110.dll\"\n  - \"msvcr110_clr0400.dll\"\n  - \"msvcr120.dll\"\n  - \"msvcr120_clr0400.dll\"\n  - \"ucrtbase.dll\"\n  - \"api-ms-win-crt-runtime-l1-1-0.dll\"\napitype: \"DLLExport\"\nf1_keywords: \n  - \"XcptFilter\"\n  - \"_XcptFilter\"\n  - \"_seh_filter_dll\"\n  - \"_seh_filter_exe\"\n  - \"corecrt_startup/_seh_filter_exe\"\n  - \"corecrt_startup/_seh_filter_dll\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"XcptFilter function\"\n  - \"_XcptFilter function\"\n  - \"_seh_filter_dll function\"\n  - \"_seh_filter_exe function\"\nms.assetid: 747e5963-3a12-4bf5-b5c4-d4c1b6068e15\ncaps.latest.revision: 14\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# _seh_filter_dll, _seh_filter_exe\nIdentifies the exception and the related action to be taken.  \n  \n## Syntax  \n  \n```  \nint __cdecl _seh_filter_dll(  \n   unsigned long _ExceptionNum,  \n   struct _EXCEPTION_POINTERS* _ExceptionPtr  \n);  \nint __cdecl _seh_filter_exe(  \n   unsigned long _ExceptionNum,  \n   struct _EXCEPTION_POINTERS* _ExceptionPtr  \n);  \n```  \n  \n#### Parameters  \n [in] `_ExceptionNum`  \n The identifier for the exception.  \n  \n [in] `_ExceptionPtr`  \n A pointer to the exception information.  \n  \n## Return Value  \n An integer that indicates the action to be taken, based on the result of exception processing.  \n  \n## Remarks  \n These methods are called by the exception-filter expression of the [try-except Statement](../../cpp/try-except-statement.md). The method consults a constant internal table to identify the exception and determine the appropriate action, as shown here. The exception numbers are defined in winnt.h and the signal numbers are defined in signal.h.  \n  \n|Exception Number (unsigned long)|Signal Number|  \n|----------------------------------------|-------------------|  \n|STATUS_ACCESS_VIOLATION|SIGSEGV|  \n|STATUS_ILLEGAL_INSTRUCTION|SIGILL|  \n|STATUS_PRIVILEGED_INSTRUCTION|SIGILL|  \n|STATUS_FLOAT_DENORMAL_OPERAND|SIGFPE|  \n|STATUS_FLOAT_DIVIDE_BY_ZERO|SIGFPE|  \n|STATUS_FLOAT_INEXACT_RESULT|SIGFPE|  \n|STATUS_FLOAT_INVALID_OPERATION|SIGFPE|  \n|STATUS_FLOAT_OVERFLOW|SIGFPE|  \n|STATUS_FLOAT_STACK_CHECK|SIGFPE|  \n|STATUS_FLOAT_UNDERFLOW|SIGFPE|  \n  \n## Requirements  \n **Header:** corecrt_startup.h  \n  \n## See Also  \n [Alphabetical Function Reference](../../c-runtime-library/reference/crt-alphabetical-function-reference.md)"}