{"nodes":[{"pos":[12,56],"content":"marshal_context::marshal_as | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"marshal_context::marshal_as | Microsoft Docs","pos":[0,44]}]},{"content":"marshal_context::marshal_as","pos":[785,812]},{"content":"Performs the marshaling on a specific data object to convert it between a managed and a native data type.","pos":[813,918]},{"content":"Syntax","pos":[927,933]},{"content":"Parameters","pos":[1017,1027]},{"content":"[in]","pos":[1031,1035]},{"content":"The value that you want to marshal to a <ph id=\"ph1\">`To_Type`</ph> variable.","pos":[1047,1106],"source":" The value that you want to marshal to a `To_Type` variable."},{"content":"Return Value","pos":[1115,1127]},{"pos":[1131,1199],"content":"A variable of type <ph id=\"ph1\">`To_Type`</ph> that is the converted value of <ph id=\"ph2\">`input`</ph>.","source":"A variable of type `To_Type` that is the converted value of `input`."},{"content":"Remarks","pos":[1208,1215]},{"content":"This function performs the marshaling on a specific data object.","pos":[1219,1283]},{"content":"Use this function only with the conversions indicated by the table in <bpt id=\"p1\">[</bpt>Overview of Marshaling in C++<ept id=\"p1\">](../dotnet/overview-of-marshaling-in-cpp.md)</ept>.","pos":[1284,1430],"source":" Use this function only with the conversions indicated by the table in [Overview of Marshaling in C++](../dotnet/overview-of-marshaling-in-cpp.md)."},{"content":"If you try to marshal a pair of data types that are not supported, <ph id=\"ph1\">`marshal_as`</ph> will generate an error <bpt id=\"p1\">[</bpt>C4996<ept id=\"p1\">](../error-messages/compiler-warnings/compiler-warning-level-3-c4996.md)</ept> at compile time.","pos":[1437,1635],"source":"If you try to marshal a pair of data types that are not supported, `marshal_as` will generate an error [C4996](../error-messages/compiler-warnings/compiler-warning-level-3-c4996.md) at compile time."},{"content":"Read the message supplied with this error for more information.","pos":[1636,1699]},{"content":"The <ph id=\"ph1\">`C4996`</ph> error can be generated for more than just deprecated functions.","pos":[1700,1775],"source":" The `C4996` error can be generated for more than just deprecated functions."},{"content":"Two conditions that will generate this error are trying to marshal a pair of data types that are not supported and trying to use <ph id=\"ph1\">`marshal_as`</ph> for a conversion that requires a context.","pos":[1776,1959],"source":" Two conditions that will generate this error are trying to marshal a pair of data types that are not supported and trying to use `marshal_as` for a conversion that requires a context."},{"content":"The marshaling library consists of several header files.","pos":[1966,2022]},{"content":"Any conversion requires only one file, but you can include additional files if you need to for other conversions.","pos":[2023,2136]},{"content":"The table in <ph id=\"ph1\">`Marshaling Overview in C++`</ph> indicates which marshaling file should be included for each conversion.","pos":[2137,2250],"source":" The table in `Marshaling Overview in C++` indicates which marshaling file should be included for each conversion."},{"content":"Example","pos":[2259,2266]},{"content":"This example creates a context for marshaling from a <ph id=\"ph1\">`System::String`</ph> to a <ph id=\"ph2\">`const char *`</ph> variable type.","pos":[2270,2374],"source":"This example creates a context for marshaling from a `System::String` to a `const char *` variable type."},{"content":"The converted data will not be valid after the line that deletes the context.","pos":[2375,2452]},{"content":"Requirements","pos":[2928,2940]},{"pos":[2944,3061],"content":"<bpt id=\"p1\">**</bpt>Header file:<ept id=\"p1\">**</ept> <ph id=\"ph1\">\\&lt;</ph>msclr\\marshal.h&gt;, <ph id=\"ph2\">\\&lt;</ph>msclr\\marshal_windows.h&gt;, <ph id=\"ph3\">\\&lt;</ph>msclr\\marshal_cppstd.h&gt;, or <ph id=\"ph4\">\\&lt;</ph>msclr\\marshal_atl.h&gt;","source":"**Header file:** \\<msclr\\marshal.h>, \\<msclr\\marshal_windows.h>, \\<msclr\\marshal_cppstd.h>, or \\<msclr\\marshal_atl.h>"},{"pos":[3068,3097],"content":"<bpt id=\"p1\">**</bpt>Namespace:<ept id=\"p1\">**</ept> msclr::interop","source":"**Namespace:** msclr::interop"},{"content":"See Also","pos":[3106,3114]},{"content":"Overview of Marshaling in C++","pos":[3119,3148]},{"content":"marshal_as","pos":[3199,3209]},{"content":"marshal_context Class","pos":[3241,3262]}],"content":"---\ntitle: \"marshal_context::marshal_as | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"marshal_context::marshal_as\"\n  - \"marshal_context.marshal_as\"\n  - \"msclr.interop.marshal_context.marshal_as\"\n  - \"msclr::interop::marshal_context::marshal_as\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"marshal_context class [C++], operations\"\nms.assetid: 24a1afee-51c0-497c-948c-f77fe43635c8\ncaps.latest.revision: 14\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# marshal_context::marshal_as\nPerforms the marshaling on a specific data object to convert it between a managed and a native data type.  \n  \n## Syntax  \n  \n```  \nTo_Type marshal_as<To_Type>(  \n   From_Type input   \n);  \n```  \n  \n#### Parameters  \n [in] `input`  \n The value that you want to marshal to a `To_Type` variable.  \n  \n## Return Value  \n A variable of type `To_Type` that is the converted value of `input`.  \n  \n## Remarks  \n This function performs the marshaling on a specific data object. Use this function only with the conversions indicated by the table in [Overview of Marshaling in C++](../dotnet/overview-of-marshaling-in-cpp.md).  \n  \n If you try to marshal a pair of data types that are not supported, `marshal_as` will generate an error [C4996](../error-messages/compiler-warnings/compiler-warning-level-3-c4996.md) at compile time. Read the message supplied with this error for more information. The `C4996` error can be generated for more than just deprecated functions. Two conditions that will generate this error are trying to marshal a pair of data types that are not supported and trying to use `marshal_as` for a conversion that requires a context.  \n  \n The marshaling library consists of several header files. Any conversion requires only one file, but you can include additional files if you need to for other conversions. The table in `Marshaling Overview in C++` indicates which marshaling file should be included for each conversion.  \n  \n## Example  \n This example creates a context for marshaling from a `System::String` to a `const char *` variable type. The converted data will not be valid after the line that deletes the context.  \n  \n```  \n// marshal_context_test.cpp  \n// compile with: /clr  \n#include <stdlib.h>  \n#include <string.h>  \n#include <msclr\\marshal.h>  \n  \nusing namespace System;  \nusing namespace msclr::interop;  \n  \nint main() {  \n   marshal_context^ context = gcnew marshal_context();  \n   String^ message = gcnew String(\"Test String to Marshal\");  \n   const char* result;  \n   result = context->marshal_as<const char*>( message );  \n   delete context;  \n   return 0;  \n}  \n```  \n  \n## Requirements  \n **Header file:** \\<msclr\\marshal.h>, \\<msclr\\marshal_windows.h>, \\<msclr\\marshal_cppstd.h>, or \\<msclr\\marshal_atl.h>  \n  \n **Namespace:** msclr::interop  \n  \n## See Also  \n [Overview of Marshaling in C++](../dotnet/overview-of-marshaling-in-cpp.md)   \n [marshal_as](../dotnet/marshal-as.md)   \n [marshal_context Class](../dotnet/marshal-context-class.md)"}