{"nodes":[{"pos":[12,62],"content":"Constructing Input Stream Objects | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Constructing Input Stream Objects | Microsoft Docs","pos":[0,50]}]},{"pos":[591,624],"content":"Constructing Input Stream Objects","linkify":"Constructing Input Stream Objects","nodes":[{"content":"Constructing Input Stream Objects","pos":[0,33]}]},{"content":"If you use only the <ph id=\"ph1\">`cin`</ph> object, you do not need to construct an input stream.","pos":[625,704],"source":"If you use only the `cin` object, you do not need to construct an input stream."},{"content":"You must construct an input stream if you use:","pos":[705,751]},{"pos":[759,833],"content":"<bpt id=\"p1\">[</bpt>Input File Stream Constructors<ept id=\"p1\">](#vclrfinputfilestreamconstructorsanchor8)</ept>","source":"[Input File Stream Constructors](#vclrfinputfilestreamconstructorsanchor8)"},{"pos":[841,919],"content":"<bpt id=\"p1\">[</bpt>Input String Stream Constructors<ept id=\"p1\">](#vclrfinputstringstreamconstructorsanchor9)</ept>","source":"[Input String Stream Constructors](#vclrfinputstringstreamconstructorsanchor9)"},{"pos":[929,1014],"content":"<bpt id=\"p1\">&lt;a name=\"vclrfinputfilestreamconstructorsanchor8\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept> Input File Stream Constructors","linkify":"<a name=\"vclrfinputfilestreamconstructorsanchor8\"></a> Input File Stream Constructors","source":"<a name=\"vclrfinputfilestreamconstructorsanchor8\"></a> Input File Stream Constructors"},{"content":"There are two ways to create an input file stream:","pos":[1018,1068]},{"pos":[1078,1152],"content":"Use the <ph id=\"ph1\">`void`</ph> argument constructor, then call the <ph id=\"ph2\">`open`</ph> member function:","source":"Use the `void` argument constructor, then call the `open` member function:"},{"content":"Specify a filename and mode flags in the constructor invocation, thereby opening the file during the construction process:","pos":[1335,1457]},{"pos":[1516,1605],"content":"<bpt id=\"p1\">&lt;a name=\"vclrfinputstringstreamconstructorsanchor9\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept> Input String Stream Constructors","linkify":"<a name=\"vclrfinputstringstreamconstructorsanchor9\"></a> Input String Stream Constructors","source":"<a name=\"vclrfinputstringstreamconstructorsanchor9\"></a> Input String Stream Constructors"},{"content":"Input string stream constructors require the address of preallocated, preinitialized storage:","pos":[1609,1702]},{"pos":[1878,1886],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"pos":[1890,1943],"content":"<bpt id=\"p1\">[</bpt>Input Streams<ept id=\"p1\">](../standard-library/input-streams.md)</ept>","source":"[Input Streams](../standard-library/input-streams.md)"}],"content":"---\ntitle: \"Constructing Input Stream Objects | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"input stream objects\"\nms.assetid: ab94866e-6ffe-4f15-b4db-0bd23e636075\ncaps.latest.revision: 8\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Constructing Input Stream Objects\nIf you use only the `cin` object, you do not need to construct an input stream. You must construct an input stream if you use:  \n  \n- [Input File Stream Constructors](#vclrfinputfilestreamconstructorsanchor8)  \n  \n- [Input String Stream Constructors](#vclrfinputstringstreamconstructorsanchor9)  \n  \n##  <a name=\"vclrfinputfilestreamconstructorsanchor8\"></a> Input File Stream Constructors  \n There are two ways to create an input file stream:  \n  \n-   Use the `void` argument constructor, then call the `open` member function:  \n  \n ```  \n    ifstream myFile; // On the stack  \n    myFile.open(\"filename\");\n\n \n    ifstream* pmyFile = new ifstream; // On the heap  \n    pmyFile->open(\"filename\");\n```  \n  \n-   Specify a filename and mode flags in the constructor invocation, thereby opening the file during the construction process:  \n  \n ```  \n    ifstream myFile(\"filename\");\n```  \n  \n##  <a name=\"vclrfinputstringstreamconstructorsanchor9\"></a> Input String Stream Constructors  \n Input string stream constructors require the address of preallocated, preinitialized storage:  \n  \n```  \nstring s(\"123.45\");\n\ndouble amt;  \nistringstream myString(s);\n\n//istringstream myString(\"123.45\") also works  \nmyString>> amt; // amt contains 123.45  \n```  \n  \n## See Also  \n [Input Streams](../standard-library/input-streams.md)\n\n"}