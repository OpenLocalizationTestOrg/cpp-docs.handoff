{"nodes":[{"pos":[12,44],"content":"_creat, _wcreat | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"_creat, _wcreat | Microsoft Docs","pos":[0,32]}]},{"content":"_creat, _wcreat","pos":[1143,1158]},{"content":"Creates a new file.","pos":[1159,1178]},{"content":"and <ph id=\"ph1\">`_wcreat`</ph> have been deprecated; use <bpt id=\"p1\">[</bpt>_sopen_s, _wsopen_s<ept id=\"p1\">](../../c-runtime-library/reference/sopen-s-wsopen-s.md)</ept> instead.","pos":[1188,1313],"source":" and `_wcreat` have been deprecated; use [_sopen_s, _wsopen_s](../../c-runtime-library/reference/sopen-s-wsopen-s.md) instead."},{"content":"Syntax","pos":[1322,1328]},{"content":"Parameters","pos":[1484,1494]},{"content":"Name of new file.","pos":[1512,1529]},{"content":"Permission setting.","pos":[1547,1566]},{"content":"Return Value","pos":[1575,1587]},{"content":"These functions, if successful, return a file descriptor to the created file.","pos":[1591,1668]},{"content":"Otherwise, the functions return –1 and set <ph id=\"ph1\">`errno`</ph> as shown in the following table.","pos":[1669,1752],"source":" Otherwise, the functions return –1 and set `errno` as shown in the following table."},{"pos":[1767,1774],"content":"setting"},{"content":"Description","pos":[1775,1786]},{"pos":[1855,1935],"content":"specifies an existing read-only file or specifies a directory instead of a file."},{"content":"No more file descriptors are available.","pos":[1949,1988]},{"content":"Specified file could not be found.","pos":[2002,2036]},{"content":"If <ph id=\"ph1\">`filename`</ph> is NULL, these functions invoke the invalid parameter handler, as described in <bpt id=\"p1\">[</bpt>Parameter Validation<ept id=\"p1\">](../../c-runtime-library/parameter-validation.md)</ept>.","pos":[2044,2209],"source":"If `filename` is NULL, these functions invoke the invalid parameter handler, as described in [Parameter Validation](../../c-runtime-library/parameter-validation.md)."},{"content":"If execution is allowed to continue, these functions set <ph id=\"ph1\">`errno`</ph> to <ph id=\"ph2\">`EINVAL`</ph> and return -1.","pos":[2210,2301],"source":" If execution is allowed to continue, these functions set `errno` to `EINVAL` and return -1."},{"pos":[2308,2485],"content":"For more information about these and other return codes, see <bpt id=\"p1\">[</bpt>_doserrno, errno, _sys_errlist, and _sys_nerr<ept id=\"p1\">](../../c-runtime-library/errno-doserrno-sys-errlist-and-sys-nerr.md)</ept>.","source":"For more information about these and other return codes, see [_doserrno, errno, _sys_errlist, and _sys_nerr](../../c-runtime-library/errno-doserrno-sys-errlist-and-sys-nerr.md)."},{"content":"Remarks","pos":[2494,2501]},{"content":"The <ph id=\"ph1\">`_creat`</ph> function creates a new file or opens and truncates an existing one.","pos":[2505,2585],"source":"The `_creat` function creates a new file or opens and truncates an existing one."},{"content":"is a wide-character version of <ph id=\"ph1\">`_creat`</ph>; the <ph id=\"ph2\">`filename`</ph> argument to <ph id=\"ph3\">`_wcreat`</ph> is a wide-character string.","pos":[2596,2701],"source":" is a wide-character version of `_creat`; the `filename` argument to `_wcreat` is a wide-character string."},{"content":"and <ph id=\"ph1\">`_creat`</ph> behave identically otherwise.","pos":[2712,2754],"source":" and `_creat` behave identically otherwise."},{"content":"Generic-Text Routine Mappings","pos":[2764,2793]},{"content":"Tchar.h routine","pos":[2800,2815]},{"content":"_UNICODE and _MBCS not defined","pos":[2816,2846]},{"content":"_MBCS defined","pos":[2847,2860]},{"content":"_UNICODE defined","pos":[2861,2877]},{"content":"If the file specified by <ph id=\"ph1\">`filename`</ph> does not exist, a new file is created with the given permission setting and is opened for writing.","pos":[3037,3171],"source":"If the file specified by `filename` does not exist, a new file is created with the given permission setting and is opened for writing."},{"content":"If the file already exists and its permission setting allows writing, <ph id=\"ph1\">`_creat`</ph> truncates the file to length 0, destroying the previous contents, and opens it for writing.","pos":[3172,3342],"source":" If the file already exists and its permission setting allows writing, `_creat` truncates the file to length 0, destroying the previous contents, and opens it for writing."},{"content":"The permission setting, <ph id=\"ph1\">`pmode`</ph>, applies to newly created files only.","pos":[3343,3412],"source":" The permission setting, `pmode`, applies to newly created files only."},{"content":"The new file receives the specified permission setting after it is closed for the first time.","pos":[3413,3506]},{"content":"The integer expression <ph id=\"ph1\">`pmode`</ph> contains one or both of the manifest constants <ph id=\"ph2\">`_S_IWRITE`</ph> and <ph id=\"ph3\">`_S_IREAD`</ph>, defined in SYS\\Stat.h.","pos":[3507,3635],"source":" The integer expression `pmode` contains one or both of the manifest constants `_S_IWRITE` and `_S_IREAD`, defined in SYS\\Stat.h."},{"content":"When both constants are given, they are joined with the bitwise <ph id=\"ph1\">`OR`</ph> operator ( <bpt id=\"p1\">**</bpt>&amp;#124;<ept id=\"p1\">**</ept> ).","pos":[3636,3729],"source":" When both constants are given, they are joined with the bitwise `OR` operator ( **&#124;** )."},{"content":"The <ph id=\"ph1\">`pmode`</ph> parameter is set to one of the following values.","pos":[3730,3790],"source":" The `pmode` parameter is set to one of the following values."},{"content":"Value","pos":[3797,3802]},{"content":"Definition","pos":[3803,3813]},{"content":"Writing permitted.","pos":[3863,3881]},{"content":"Reading permitted.","pos":[3897,3915]},{"content":"Reading and writing permitted.","pos":[3948,3978]},{"content":"If write permission is not given, the file is read-only.","pos":[3986,4042]},{"content":"All files are always readable; it is impossible to give write-only permission.","pos":[4043,4121]},{"content":"The modes <ph id=\"ph1\">`_S_IWRITE`</ph> and <ph id=\"ph2\">`_S_IREAD``| _S_IWRITE`</ph> are then equivalent.","pos":[4122,4192],"source":" The modes `_S_IWRITE` and `_S_IREAD``| _S_IWRITE` are then equivalent."},{"content":"Files opened using <ph id=\"ph1\">`_creat`</ph> are always opened in compatibility mode (see <bpt id=\"p1\">[</bpt>_sopen<ept id=\"p1\">](../../c-runtime-library/reference/sopen-wsopen.md)</ept>) with <ph id=\"ph2\">`_SH_DENYNO`</ph>.","pos":[4193,4345],"source":" Files opened using `_creat` are always opened in compatibility mode (see [_sopen](../../c-runtime-library/reference/sopen-wsopen.md)) with `_SH_DENYNO`."},{"content":"applies the current file-permission mask to <ph id=\"ph1\">`pmode`</ph> before setting the permissions (see <bpt id=\"p1\">[</bpt>_umask<ept id=\"p1\">](../../c-runtime-library/reference/umask.md)</ept>).","pos":[4361,4503],"source":" applies the current file-permission mask to `pmode` before setting the permissions (see [_umask](../../c-runtime-library/reference/umask.md))."},{"content":"is provided primarily for compatibility with previous libraries.","pos":[4513,4577]},{"content":"A call to <ph id=\"ph1\">`_open`</ph> with <ph id=\"ph2\">`_O_CREAT`</ph> and <ph id=\"ph3\">`_O_TRUNC`</ph> in the <ph id=\"ph4\">`oflag`</ph> parameter is equivalent to <ph id=\"ph5\">`_creat`</ph> and is preferable for new code.","pos":[4578,4709],"source":" A call to `_open` with `_O_CREAT` and `_O_TRUNC` in the `oflag` parameter is equivalent to `_creat` and is preferable for new code."},{"content":"Requirements","pos":[4718,4730]},{"content":"Routine","pos":[4737,4744]},{"content":"Required header","pos":[4745,4760]},{"content":"Optional header","pos":[4761,4776]},{"content":"io.h&gt;","pos":[4854,4859],"source":"io.h>"},{"content":"sys/types.h&gt;, <ph id=\"ph1\">\\&lt;</ph>sys/stat.h&gt;, <ph id=\"ph2\">\\&lt;</ph>errno.h&gt;","pos":[4862,4901],"source":"sys/types.h>, \\<sys/stat.h>, \\<errno.h>"},{"content":"io.h&gt; or <ph id=\"ph1\">\\&lt;</ph>wchar.h&gt;","pos":[4918,4937],"source":"io.h> or \\<wchar.h>"},{"content":"sys/types.h&gt;, <ph id=\"ph1\">\\&lt;</ph>sys/stat.h&gt;, <ph id=\"ph2\">\\&lt;</ph>errno.h&gt;","pos":[4940,4979],"source":"sys/types.h>, \\<sys/stat.h>, \\<errno.h>"},{"pos":[4987,5105],"content":"For more compatibility information, see <bpt id=\"p1\">[</bpt>Compatibility<ept id=\"p1\">](../../c-runtime-library/compatibility.md)</ept> in the Introduction.","source":"For more compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md) in the Introduction."},{"content":"Example","pos":[5114,5121]},{"content":"See Also","pos":[5784,5792]},{"content":"Low-Level I/O","pos":[5797,5810]},{"content":"_chmod, _wchmod","pos":[5859,5874]},{"content":"_chsize","pos":[5932,5939]},{"content":"_close","pos":[5991,5997]},{"content":"_dup, _dup2","pos":[6048,6059]},{"content":"_open, _wopen","pos":[6113,6126]},{"content":"_sopen, _wsopen","pos":[6182,6197]},{"content":"_umask","pos":[6255,6261]}],"content":"---\ntitle: \"_creat, _wcreat | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\napiname: \n  - \"_creat\"\n  - \"_wcreat\"\napilocation: \n  - \"msvcrt.dll\"\n  - \"msvcr80.dll\"\n  - \"msvcr90.dll\"\n  - \"msvcr100.dll\"\n  - \"msvcr100_clr0400.dll\"\n  - \"msvcr110.dll\"\n  - \"msvcr110_clr0400.dll\"\n  - \"msvcr120.dll\"\n  - \"msvcr120_clr0400.dll\"\n  - \"ucrtbase.dll\"\n  - \"api-ms-win-crt-stdio-l1-1-0.dll\"\napitype: \"DLLExport\"\nf1_keywords: \n  - \"wcreat\"\n  - \"_wcreat\"\n  - \"_creat\"\n  - \"tcreat\"\n  - \"_tcreat\"\ndev_langs: \n  - \"C++\"\n  - \"C\"\nhelpviewer_keywords: \n  - \"wcreat function\"\n  - \"_wcreat function\"\n  - \"files [C++], creating\"\n  - \"_creat function\"\n  - \"tcreat function\"\n  - \"creat function\"\n  - \"_tcreat function\"\nms.assetid: 3b3b795d-1620-40ec-bd2b-a4bbb0d20fe5\ncaps.latest.revision: 21\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"ru-ru\"\n  - \"zh-cn\"\n  - \"zh-tw\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"tr-tr\"\n---\n# _creat, _wcreat\nCreates a new file. `_creat` and `_wcreat` have been deprecated; use [_sopen_s, _wsopen_s](../../c-runtime-library/reference/sopen-s-wsopen-s.md) instead.  \n  \n## Syntax  \n  \n```  \nint _creat(   \n   const char *filename,  \n   int pmode   \n);  \nint _wcreat(   \n   const wchar_t *filename,  \n   int pmode   \n);  \n```  \n  \n#### Parameters  \n `filename`  \n Name of new file.  \n  \n `pmode`  \n Permission setting.  \n  \n## Return Value  \n These functions, if successful, return a file descriptor to the created file. Otherwise, the functions return –1 and set `errno` as shown in the following table.  \n  \n|`errno` setting|Description|  \n|---------------------|-----------------|  \n|`EACCES`|`filename` specifies an existing read-only file or specifies a directory instead of a file.|  \n|`EMFILE`|No more file descriptors are available.|  \n|`ENOENT`|Specified file could not be found.|  \n  \n If `filename` is NULL, these functions invoke the invalid parameter handler, as described in [Parameter Validation](../../c-runtime-library/parameter-validation.md). If execution is allowed to continue, these functions set `errno` to `EINVAL` and return -1.  \n  \n For more information about these and other return codes, see [_doserrno, errno, _sys_errlist, and _sys_nerr](../../c-runtime-library/errno-doserrno-sys-errlist-and-sys-nerr.md).  \n  \n## Remarks  \n The `_creat` function creates a new file or opens and truncates an existing one. `_wcreat` is a wide-character version of `_creat`; the `filename` argument to `_wcreat` is a wide-character string. `_wcreat` and `_creat` behave identically otherwise.  \n  \n### Generic-Text Routine Mappings  \n  \n|Tchar.h routine|_UNICODE and _MBCS not defined|_MBCS defined|_UNICODE defined|  \n|---------------------|--------------------------------------|--------------------|-----------------------|  \n|`_tcreat`|`_creat`|`_creat`|`_wcreat`|  \n  \n If the file specified by `filename` does not exist, a new file is created with the given permission setting and is opened for writing. If the file already exists and its permission setting allows writing, `_creat` truncates the file to length 0, destroying the previous contents, and opens it for writing. The permission setting, `pmode`, applies to newly created files only. The new file receives the specified permission setting after it is closed for the first time. The integer expression `pmode` contains one or both of the manifest constants `_S_IWRITE` and `_S_IREAD`, defined in SYS\\Stat.h. When both constants are given, they are joined with the bitwise `OR` operator ( **&#124;** ). The `pmode` parameter is set to one of the following values.  \n  \n|Value|Definition|  \n|-----------|----------------|  \n|`_S_IWRITE`|Writing permitted.|  \n|`_S_IREAD`|Reading permitted.|  \n|`_S_IREAD &#124; _S_IWRITE`|Reading and writing permitted.|  \n  \n If write permission is not given, the file is read-only. All files are always readable; it is impossible to give write-only permission. The modes `_S_IWRITE` and `_S_IREAD``| _S_IWRITE` are then equivalent. Files opened using `_creat` are always opened in compatibility mode (see [_sopen](../../c-runtime-library/reference/sopen-wsopen.md)) with `_SH_DENYNO`.  \n  \n `_creat` applies the current file-permission mask to `pmode` before setting the permissions (see [_umask](../../c-runtime-library/reference/umask.md)). `_creat` is provided primarily for compatibility with previous libraries. A call to `_open` with `_O_CREAT` and `_O_TRUNC` in the `oflag` parameter is equivalent to `_creat` and is preferable for new code.  \n  \n## Requirements  \n  \n|Routine|Required header|Optional header|  \n|-------------|---------------------|---------------------|  \n|`_creat`|\\<io.h>|\\<sys/types.h>, \\<sys/stat.h>, \\<errno.h>|  \n|`_wcreat`|\\<io.h> or \\<wchar.h>|\\<sys/types.h>, \\<sys/stat.h>, \\<errno.h>|  \n  \n For more compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md) in the Introduction.  \n  \n## Example  \n  \n```  \n// crt_creat.c  \n// compile with: /W3  \n// This program uses _creat to create  \n// the file (or truncate the existing file)  \n// named data and open it for writing.  \n  \n#include <sys/types.h>  \n#include <sys/stat.h>  \n#include <io.h>  \n#include <stdio.h>  \n#include <stdlib.h>  \n  \nint main( void )  \n{  \n   int fh;  \n  \n   fh = _creat( \"data\", _S_IREAD | _S_IWRITE ); // C4996  \n   // Note: _creat is deprecated; use _sopen_s instead  \n   if( fh == -1 )  \n      perror( \"Couldn't create data file\" );  \n   else  \n   {  \n      printf( \"Created data file.\\n\" );  \n      _close( fh );  \n   }  \n}  \n```  \n  \n```Output  \nCreated data file.  \n```  \n  \n## See Also  \n [Low-Level I/O](../../c-runtime-library/low-level-i-o.md)   \n [_chmod, _wchmod](../../c-runtime-library/reference/chmod-wchmod.md)   \n [_chsize](../../c-runtime-library/reference/chsize.md)   \n [_close](../../c-runtime-library/reference/close.md)   \n [_dup, _dup2](../../c-runtime-library/reference/dup-dup2.md)   \n [_open, _wopen](../../c-runtime-library/reference/open-wopen.md)   \n [_sopen, _wsopen](../../c-runtime-library/reference/sopen-wsopen.md)   \n [_umask](../../c-runtime-library/reference/umask.md)"}