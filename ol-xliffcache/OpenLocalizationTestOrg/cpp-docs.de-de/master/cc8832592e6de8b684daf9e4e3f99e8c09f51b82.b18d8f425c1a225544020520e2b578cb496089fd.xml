{"nodes":[{"pos":[12,50],"content":"CHttpConnection Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"CHttpConnection Class | Microsoft Docs","pos":[0,38]}]},{"content":"CHttpConnection Class","pos":[944,965]},{"content":"Manages your connection to an HTTP server.","pos":[966,1008]},{"content":"Syntax","pos":[1017,1023]},{"content":"Members","pos":[1100,1107]},{"content":"Public Constructors","pos":[1117,1136]},{"content":"Name","pos":[1143,1147]},{"content":"Description","pos":[1148,1159]},{"content":"CHttpConnection::CHttpConnection","pos":[1198,1230]},{"pos":[1267,1302],"content":"Creates a <ph id=\"ph1\">`CHttpConnection`</ph> object.","source":"Creates a `CHttpConnection` object."},{"content":"Public Methods","pos":[1313,1327]},{"content":"Name","pos":[1334,1338]},{"content":"Description","pos":[1339,1350]},{"content":"CHttpConnection::OpenRequest","pos":[1389,1417]},{"content":"Opens an HTTP request.","pos":[1450,1472]},{"content":"Remarks","pos":[1482,1489]},{"content":"HTTP is one of three Internet server protocols implemented by the MFC WinInet classes.","pos":[1493,1579]},{"pos":[1586,1767],"content":"The class <ph id=\"ph1\">`CHttpConnection`</ph> contains a constructor and one member function, <bpt id=\"p1\">[</bpt>OpenRequest<ept id=\"p1\">](#chttpconnection__openrequest)</ept>, that manages connections to a server with an HTTP protocol.","source":"The class `CHttpConnection` contains a constructor and one member function, [OpenRequest](#chttpconnection__openrequest), that manages connections to a server with an HTTP protocol."},{"content":"To communicate with an HTTP server, you must first create an instance of <bpt id=\"p1\">[</bpt>CInternetSession<ept id=\"p1\">](../../mfc/reference/cinternetsession-class.md)</ept>, and then create a <bpt id=\"p2\">[</bpt>CHttpConnection<ept id=\"p2\">](#_mfc_chttpconnection)</ept> object.","pos":[1774,1980],"source":"To communicate with an HTTP server, you must first create an instance of [CInternetSession](../../mfc/reference/cinternetsession-class.md), and then create a [CHttpConnection](#_mfc_chttpconnection) object."},{"content":"You never create a <ph id=\"ph1\">`CHttpConnection`</ph> object directly; rather, call <bpt id=\"p1\">[</bpt>CInternetSession::GetHttpConnection<ept id=\"p1\">](../../mfc/reference/cinternetsession-class.md#cinternetsession__gethttpconnection)</ept>, which creates the <ph id=\"ph2\">`CHttpConnection`</ph> object and returns a pointer to it.","pos":[1981,2241],"source":" You never create a `CHttpConnection` object directly; rather, call [CInternetSession::GetHttpConnection](../../mfc/reference/cinternetsession-class.md#cinternetsession__gethttpconnection), which creates the `CHttpConnection` object and returns a pointer to it."},{"content":"To learn more about how <ph id=\"ph1\">`CHttpConnection`</ph> works with the other MFC Internet classes, see the article <bpt id=\"p1\">[</bpt>Internet Programming with WinInet<ept id=\"p1\">](../../mfc/win32-internet-extensions-wininet.md)</ept>.","pos":[2248,2433],"source":"To learn more about how `CHttpConnection` works with the other MFC Internet classes, see the article [Internet Programming with WinInet](../../mfc/win32-internet-extensions-wininet.md)."},{"content":"For more information about connecting to servers using the other two supported Internet protocols, gopher and FTP, see the classes <bpt id=\"p1\">[</bpt>CGopherConnection<ept id=\"p1\">](../../mfc/reference/cgopherconnection-class.md)</ept> and <bpt id=\"p2\">[</bpt>CFtpConnection<ept id=\"p2\">](../../mfc/reference/cftpconnection-class.md)</ept>.","pos":[2434,2699],"source":" For more information about connecting to servers using the other two supported Internet protocols, gopher and FTP, see the classes [CGopherConnection](../../mfc/reference/cgopherconnection-class.md) and [CFtpConnection](../../mfc/reference/cftpconnection-class.md)."},{"content":"Inheritance Hierarchy","pos":[2708,2729]},{"content":"CObject","pos":[2734,2741]},{"content":"CInternetConnection","pos":[2788,2807]},{"content":"Requirements","pos":[2891,2903]},{"pos":[2907,2928],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> afxinet.h","source":"**Header:** afxinet.h"},{"pos":[2987,3019],"content":"CHttpConnection::CHttpConnection"},{"pos":[3023,3094],"content":"This member function is called to construct a <ph id=\"ph1\">`CHttpConnection`</ph> object.","source":"This member function is called to construct a `CHttpConnection` object."},{"content":"Parameters","pos":[3747,3757]},{"content":"A pointer to a <bpt id=\"p1\">[</bpt>CInternetSession<ept id=\"p1\">](../../mfc/reference/cinternetsession-class.md)</ept> object.","pos":[3775,3863],"source":" A pointer to a [CInternetSession](../../mfc/reference/cinternetsession-class.md) object."},{"content":"A handle to an Internet connection.","pos":[3886,3921]},{"content":"A pointer to a string containing the server name.","pos":[3944,3993]},{"content":"The context identifier for the <ph id=\"ph1\">`CInternetConnection`</ph> object.","pos":[4015,4075],"source":" The context identifier for the `CInternetConnection` object."},{"content":"See <bpt id=\"p1\">**</bpt>Remarks<ept id=\"p1\">**</ept> for more information about <ph id=\"ph1\">`dwContext`</ph>.","pos":[4076,4131],"source":" See **Remarks** for more information about `dwContext`."},{"content":"The number that identifies the Internet port for this connection.","pos":[4149,4214]},{"content":"Pointer to a null-terminated string that specifies the name of the user to log in.","pos":[4239,4321]},{"content":"If <bpt id=\"p1\">**</bpt>NULL<ept id=\"p1\">**</ept>, the default is anonymous.","pos":[4322,4360],"source":" If **NULL**, the default is anonymous."},{"content":"A pointer to a null-terminated string that specifies the password to use to log in.","pos":[4385,4468]},{"content":"If both <ph id=\"ph1\">`pstrPassword`</ph> and <ph id=\"ph2\">`pstrUserName`</ph> are <bpt id=\"p1\">**</bpt>NULL<ept id=\"p1\">**</ept>, the default anonymous password is the user's email name.","pos":[4469,4581],"source":" If both `pstrPassword` and `pstrUserName` are **NULL**, the default anonymous password is the user's email name."},{"content":"If <ph id=\"ph1\">`pstrPassword`</ph> is <bpt id=\"p1\">**</bpt>NULL<ept id=\"p1\">**</ept> (or an empty string) but <ph id=\"ph2\">`pstrUserName`</ph> is not <bpt id=\"p2\">**</bpt>NULL<ept id=\"p2\">**</ept>, a blank password is used.","pos":[4582,4694],"source":" If `pstrPassword` is **NULL** (or an empty string) but `pstrUserName` is not **NULL**, a blank password is used."},{"content":"The following table describes the behavior for the four possible settings of <ph id=\"ph1\">`pstrUserName`</ph> and <ph id=\"ph2\">`pstrPassword`</ph>:","pos":[4695,4806],"source":" The following table describes the behavior for the four possible settings of `pstrUserName` and `pstrPassword`:"},{"content":"Username sent to FTP server","pos":[4843,4870]},{"content":"Password sent to FTP server","pos":[4871,4898]},{"pos":[5017,5032],"content":"<bpt id=\"p1\">**</bpt>NULL<ept id=\"p1\">**</ept> or \" \"","source":"**NULL** or \" \""},{"pos":[5033,5048],"content":"<bpt id=\"p1\">**</bpt>NULL<ept id=\"p1\">**</ept> or \" \"","source":"**NULL** or \" \""},{"content":"\"anonymous\"","pos":[5049,5060]},{"content":"User's email name","pos":[5061,5078]},{"pos":[5083,5103],"content":"Non- <bpt id=\"p1\">**</bpt>NULL<ept id=\"p1\">**</ept> String","source":"Non- **NULL** String"},{"pos":[5104,5119],"content":"<bpt id=\"p1\">**</bpt>NULL<ept id=\"p1\">**</ept> or \" \"","source":"**NULL** or \" \""},{"content":"\" \"","pos":[5135,5138]},{"pos":[5143,5172],"content":"<bpt id=\"p1\">**</bpt>NULL<ept id=\"p1\">**</ept> Non- <bpt id=\"p2\">**</bpt>NULL<ept id=\"p2\">**</ept> String","source":"**NULL** Non- **NULL** String"},{"content":"ERROR","pos":[5175,5180]},{"content":"ERROR","pos":[5185,5190]},{"pos":[5198,5218],"content":"Non- <bpt id=\"p1\">**</bpt>NULL<ept id=\"p1\">**</ept> String","source":"Non- **NULL** String"},{"pos":[5219,5239],"content":"Non- <bpt id=\"p1\">**</bpt>NULL<ept id=\"p1\">**</ept> String","source":"Non- **NULL** String"},{"content":"Any combination of the <bpt id=\"p1\">**</bpt>INTERNET_ FLAG_<ph id=\"ph1\">\\*</ph><ept id=\"p1\">**</ept> flags.","pos":[5290,5341],"source":" Any combination of the **INTERNET_ FLAG_\\*** flags."},{"content":"See the table in the <bpt id=\"p1\">**</bpt>Remarks<ept id=\"p1\">**</ept> section of <bpt id=\"p2\">[</bpt>CHttpConnection::OpenRequest<ept id=\"p2\">](#chttpconnection__openrequest)</ept> for a description of <ph id=\"ph1\">`dwFlags`</ph> values.","pos":[5342,5486],"source":" See the table in the **Remarks** section of [CHttpConnection::OpenRequest](#chttpconnection__openrequest) for a description of `dwFlags` values."},{"content":"Remarks","pos":[5496,5503]},{"content":"You never create a <ph id=\"ph1\">`CHttpConnection`</ph> directly.","pos":[5507,5553],"source":"You never create a `CHttpConnection` directly."},{"content":"Rather, you create an object by calling <bpt id=\"p1\">[</bpt>CInternetSession::GetHttpConnection<ept id=\"p1\">](../../mfc/reference/cinternetsession-class.md#cinternetsession__gethttpconnection)</ept>.","pos":[5554,5715],"source":" Rather, you create an object by calling [CInternetSession::GetHttpConnection](../../mfc/reference/cinternetsession-class.md#cinternetsession__gethttpconnection)."},{"pos":[5770,5798],"content":"CHttpConnection::OpenRequest"},{"content":"Call this member function to open an HTTP connection.","pos":[5802,5855]},{"content":"Parameters","pos":[6416,6426]},{"content":"A pointer to a string containing the verb to use in the request.","pos":[6444,6508]},{"content":"If <ph id=\"ph1\">`NULL`</ph>, \"GET\" is used.","pos":[6509,6534],"source":" If `NULL`, \"GET\" is used."},{"content":"A pointer to a string containing the target object of the specified verb.","pos":[6561,6634]},{"content":"This is generally a filename, an executable module, or a search specifier.","pos":[6635,6709]},{"content":"A pointer to a string that specifies the address (URL) of the document from which the URL in the request ( <ph id=\"ph1\">`pstrObjectName`</ph>) was obtained.","pos":[6733,6871],"source":" A pointer to a string that specifies the address (URL) of the document from which the URL in the request ( `pstrObjectName`) was obtained."},{"content":"If <ph id=\"ph1\">`NULL`</ph>, no HTTP header is specified.","pos":[6872,6911],"source":" If `NULL`, no HTTP header is specified."},{"content":"The context identifier for the <ph id=\"ph1\">`OpenRequest`</ph> operation.","pos":[6933,6988],"source":" The context identifier for the `OpenRequest` operation."},{"content":"See the Remarks section for more information about <ph id=\"ph1\">`dwContext`</ph>.","pos":[6989,7052],"source":" See the Remarks section for more information about `dwContext`."},{"content":"A pointer to a null-terminated array of <ph id=\"ph1\">`LPCTSTR`</ph> pointers to strings indicating content types accepted by the client.","pos":[7081,7199],"source":" A pointer to a null-terminated array of `LPCTSTR` pointers to strings indicating content types accepted by the client."},{"content":"If <ph id=\"ph1\">`ppstrAcceptTypes`</ph> is <ph id=\"ph2\">`NULL`</ph>, the servers interpret that the client only accepts documents of type \"text/*\" (that is, only text documents and not pictures or other binary files).","pos":[7200,7381],"source":" If `ppstrAcceptTypes` is `NULL`, the servers interpret that the client only accepts documents of type \"text/*\" (that is, only text documents and not pictures or other binary files)."},{"content":"The content type is equivalent to the CGI variable CONTENT_TYPE, which identifies the type of data for queries that have attached information, such as HTTP POST and PUT.","pos":[7382,7551]},{"content":"A pointer to a string defining the HTTP version.","pos":[7575,7623]},{"content":"If <ph id=\"ph1\">`NULL`</ph>, \"HTTP/1.0\" is used.","pos":[7624,7654],"source":" If `NULL`, \"HTTP/1.0\" is used."},{"content":"Any combination of the INTERNET_ FLAG_* flags.","pos":[7674,7720]},{"content":"See the Remarks section for a description of possible <ph id=\"ph1\">`dwFlags`</ph> values.","pos":[7721,7792],"source":" See the Remarks section for a description of possible `dwFlags` values."},{"content":"A number associated with the HTTP request type.","pos":[7810,7857]},{"content":"Can be one of the following:","pos":[7858,7886]},{"content":"HTTP request type","pos":[7893,7910]},{"pos":[7919,7924],"content":"value"},{"content":"0","pos":[7994,7995]},{"content":"1","pos":[8016,8017]},{"content":"2","pos":[8039,8040]},{"content":"3","pos":[8061,8062]},{"content":"4","pos":[8084,8085]},{"content":"5","pos":[8109,8110]},{"content":"6","pos":[8134,8135]},{"content":"Return Value","pos":[8146,8158]},{"pos":[8162,8248],"content":"A pointer to the <bpt id=\"p1\">[</bpt>CHttpFile<ept id=\"p1\">](../../mfc/reference/chttpfile-class.md)</ept> object requested.","source":"A pointer to the [CHttpFile](../../mfc/reference/chttpfile-class.md) object requested."},{"content":"Remarks","pos":[8258,8265]},{"pos":[8279,8307],"content":"can be one of the following:"},{"content":"Internet flag","pos":[8314,8327]},{"content":"Description","pos":[8328,8339]},{"content":"Forces a download of the requested file, object, or directory listing from the origin server, not from the cache.","pos":[8409,8522]},{"content":"Does not add the returned entity to the cache.","pos":[8554,8600]},{"content":"Adds the returned entity to the cache as a persistent entity.","pos":[8637,8698]},{"content":"This means that standard cache cleanup, consistency checking, or garbage collection cannot remove this item from the cache.","pos":[8699,8822]},{"content":"Uses secure transaction semantics.","pos":[8850,8884]},{"content":"This translates to using SSL/PCT and is only meaningful in HTTP requests","pos":[8885,8957]},{"pos":[8995,9171],"content":"Used only with HTTP, specifies that redirections should not be automatically handled in <bpt id=\"p1\">[</bpt>CHttpFile::SendRequest<ept id=\"p1\">](../../mfc/reference/chttpfile-class.md#chttpfile__sendrequest)</ept>.","source":"Used only with HTTP, specifies that redirections should not be automatically handled in [CHttpFile::SendRequest](../../mfc/reference/chttpfile-class.md#chttpfile__sendrequest)."},{"content":"Override the <ph id=\"ph1\">`dwContext`</ph> default to set the context identifier to a value of your choosing.","pos":[9179,9270],"source":"Override the `dwContext` default to set the context identifier to a value of your choosing."},{"content":"The context identifier is associated with this specific operation of the <ph id=\"ph1\">`CHttpConnection`</ph> object created by its <bpt id=\"p1\">[</bpt>CInternetSession<ept id=\"p1\">](../../mfc/reference/cinternetsession-class.md)</ept> object.","pos":[9271,9457],"source":" The context identifier is associated with this specific operation of the `CHttpConnection` object created by its [CInternetSession](../../mfc/reference/cinternetsession-class.md) object."},{"content":"The value is returned to <bpt id=\"p1\">[</bpt>CInternetSession::OnStatusCallback<ept id=\"p1\">](../../mfc/reference/cinternetsession-class.md#cinternetsession__onstatuscallback)</ept> to provide status on the operation with which it is identified.","pos":[9458,9665],"source":" The value is returned to [CInternetSession::OnStatusCallback](../../mfc/reference/cinternetsession-class.md#cinternetsession__onstatuscallback) to provide status on the operation with which it is identified."},{"content":"See the article <bpt id=\"p1\">[</bpt>Internet First Steps: WinInet<ept id=\"p1\">](../../mfc/wininet-basics.md)</ept> for more information about the context identifier.","pos":[9666,9793],"source":" See the article [Internet First Steps: WinInet](../../mfc/wininet-basics.md) for more information about the context identifier."},{"content":"Exceptions may be thrown with this function.","pos":[9800,9844]},{"content":"See Also","pos":[9853,9861]},{"content":"CInternetConnection Class","pos":[9866,9891]},{"content":"Hierarchy Chart","pos":[9948,9963]},{"content":"CInternetConnection Class","pos":[10000,10025]},{"content":"CHttpFile Class","pos":[10082,10097]}],"content":"---\ntitle: \"CHttpConnection Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"CHttpConnection\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"servers, connecting to\"\n  - \"protocols, HTTP\"\n  - \"connecting to servers, HTTP servers\"\n  - \"Internet protocols, HTTP\"\n  - \"HTTP connections\"\n  - \"Internet protocols\"\n  - \"CHttpConnection class\"\n  - \"HTTP servers, connecting to\"\n  - \"connecting to servers\"\n  - \"Internet connections, HTTP\"\n  - \"connections [C++], HTTP\"\n  - \"Internet server, HTTP\"\nms.assetid: a402b662-c445-4988-800d-c8278551babe\ncaps.latest.revision: 24\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# CHttpConnection Class\nManages your connection to an HTTP server.  \n  \n## Syntax  \n  \n```  \nclass CHttpConnection : public CInternetConnection  \n```  \n  \n## Members  \n  \n### Public Constructors  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CHttpConnection::CHttpConnection](#chttpconnection__chttpconnection)|Creates a `CHttpConnection` object.|  \n  \n### Public Methods  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CHttpConnection::OpenRequest](#chttpconnection__openrequest)|Opens an HTTP request.|  \n  \n## Remarks  \n HTTP is one of three Internet server protocols implemented by the MFC WinInet classes.  \n  \n The class `CHttpConnection` contains a constructor and one member function, [OpenRequest](#chttpconnection__openrequest), that manages connections to a server with an HTTP protocol.  \n  \n To communicate with an HTTP server, you must first create an instance of [CInternetSession](../../mfc/reference/cinternetsession-class.md), and then create a [CHttpConnection](#_mfc_chttpconnection) object. You never create a `CHttpConnection` object directly; rather, call [CInternetSession::GetHttpConnection](../../mfc/reference/cinternetsession-class.md#cinternetsession__gethttpconnection), which creates the `CHttpConnection` object and returns a pointer to it.  \n  \n To learn more about how `CHttpConnection` works with the other MFC Internet classes, see the article [Internet Programming with WinInet](../../mfc/win32-internet-extensions-wininet.md). For more information about connecting to servers using the other two supported Internet protocols, gopher and FTP, see the classes [CGopherConnection](../../mfc/reference/cgopherconnection-class.md) and [CFtpConnection](../../mfc/reference/cftpconnection-class.md).  \n  \n## Inheritance Hierarchy  \n [CObject](../../mfc/reference/cobject-class.md)  \n  \n [CInternetConnection](../../mfc/reference/cinternetconnection-class.md)  \n  \n `CHttpConnection`  \n  \n## Requirements  \n **Header:** afxinet.h  \n  \n##  <a name=\"chttpconnection__chttpconnection\"></a>  CHttpConnection::CHttpConnection  \n This member function is called to construct a `CHttpConnection` object.  \n  \n```  \nCHttpConnection(\n    CInternetSession* pSession,  \n    HINTERNET hConnected,  \n    LPCTSTR pstrServer,  \n    DWORD_PTR dwContext);\n\n \nCHttpConnection(\n    CInternetSession* pSession,  \n    LPCTSTR pstrServer,  \n    INTERNET_PORT nPort = INTERNET_INVALID_PORT_NUMBER,  \n    LPCTSTR pstrUserName = NULL,  \n    LPCTSTR pstrPassword = NULL,  \n    DWORD_PTR dwContext = 1);\n\n \nCHttpConnection(\n    CInternetSession* pSession,  \n    LPCTSTR pstrServer,  \n    DWORD dwFlags,  \n    INTERNET_PORT nPort = INTERNET_INVALID_PORT_NUMBER,  \n    LPCTSTR pstrUserName = NULL,  \n    LPCTSTR pstrPassword = NULL,  \n    DWORD_PTR dwContext = 1);\n```  \n  \n### Parameters  \n `pSession`  \n A pointer to a [CInternetSession](../../mfc/reference/cinternetsession-class.md) object.  \n  \n `hConnected`  \n A handle to an Internet connection.  \n  \n `pstrServer`  \n A pointer to a string containing the server name.  \n  \n `dwContext`  \n The context identifier for the `CInternetConnection` object. See **Remarks** for more information about `dwContext`.  \n  \n `nPort`  \n The number that identifies the Internet port for this connection.  \n  \n `pstrUserName`  \n Pointer to a null-terminated string that specifies the name of the user to log in. If **NULL**, the default is anonymous.  \n  \n `pstrPassword`  \n A pointer to a null-terminated string that specifies the password to use to log in. If both `pstrPassword` and `pstrUserName` are **NULL**, the default anonymous password is the user's email name. If `pstrPassword` is **NULL** (or an empty string) but `pstrUserName` is not **NULL**, a blank password is used. The following table describes the behavior for the four possible settings of `pstrUserName` and `pstrPassword`:  \n  \n|`pstrUserName`|`pstrPassword`|Username sent to FTP server|Password sent to FTP server|  \n|--------------------|--------------------|---------------------------------|---------------------------------|  \n|**NULL** or \" \"|**NULL** or \" \"|\"anonymous\"|User's email name|  \n|Non- **NULL** String|**NULL** or \" \"|`pstrUserName`|\" \"|  \n|**NULL** Non- **NULL** String|**ERROR**|**ERROR**||  \n|Non- **NULL** String|Non- **NULL** String|`pstrUserName`|`pstrPassword`|  \n  \n `dwFlags`  \n Any combination of the **INTERNET_ FLAG_\\*** flags. See the table in the **Remarks** section of [CHttpConnection::OpenRequest](#chttpconnection__openrequest) for a description of `dwFlags` values.  \n  \n### Remarks  \n You never create a `CHttpConnection` directly. Rather, you create an object by calling [CInternetSession::GetHttpConnection](../../mfc/reference/cinternetsession-class.md#cinternetsession__gethttpconnection).  \n  \n##  <a name=\"chttpconnection__openrequest\"></a>  CHttpConnection::OpenRequest  \n Call this member function to open an HTTP connection.  \n  \n```  \nCHttpFile* OpenRequest(\n    LPCTSTR pstrVerb,  \n    LPCTSTR pstrObjectName,  \n    LPCTSTR pstrReferer = NULL,  \n    DWORD_PTR dwContext = 1,  \n    LPCTSTR* ppstrAcceptTypes = NULL,  \n    LPCTSTR pstrVersion = NULL,  \n    DWORD dwFlags = INTERNET_FLAG_EXISTING_CONNECT);\n\n \nCHttpFile* OpenRequest(\n    int nVerb,  \n    LPCTSTR pstrObjectName,  \n    LPCTSTR pstrReferer = NULL,  \n    DWORD_PTR dwContext = 1,  \n    LPCTSTR* ppstrAcceptTypes = NULL,  \n    LPCTSTR pstrVersion = NULL,  \n    DWORD dwFlags = INTERNET_FLAG_EXISTING_CONNECT);\n```  \n  \n### Parameters  \n `pstrVerb`  \n A pointer to a string containing the verb to use in the request. If `NULL`, \"GET\" is used.  \n  \n `pstrObjectName`  \n A pointer to a string containing the target object of the specified verb. This is generally a filename, an executable module, or a search specifier.  \n  \n `pstrReferer`  \n A pointer to a string that specifies the address (URL) of the document from which the URL in the request ( `pstrObjectName`) was obtained. If `NULL`, no HTTP header is specified.  \n  \n `dwContext`  \n The context identifier for the `OpenRequest` operation. See the Remarks section for more information about `dwContext`.  \n  \n `ppstrAcceptTypes`  \n A pointer to a null-terminated array of `LPCTSTR` pointers to strings indicating content types accepted by the client. If `ppstrAcceptTypes` is `NULL`, the servers interpret that the client only accepts documents of type \"text/*\" (that is, only text documents and not pictures or other binary files). The content type is equivalent to the CGI variable CONTENT_TYPE, which identifies the type of data for queries that have attached information, such as HTTP POST and PUT.  \n  \n `pstrVersion`  \n A pointer to a string defining the HTTP version. If `NULL`, \"HTTP/1.0\" is used.  \n  \n `dwFlags`  \n Any combination of the INTERNET_ FLAG_* flags. See the Remarks section for a description of possible `dwFlags` values.  \n  \n `nVerb`  \n A number associated with the HTTP request type. Can be one of the following:  \n  \n|HTTP request type|`nVerb` value|  \n|-----------------------|-------------------|  \n|`HTTP_VERB_POST`|0|  \n|`HTTP_VERB_GET`|1|  \n|`HTTP_VERB_HEAD`|2|  \n|`HTTP_VERB_PUT`|3|  \n|`HTTP_VERB_LINK`|4|  \n|`HTTP_VERB_DELETE`|5|  \n|`HTTP_VERB_UNLINK`|6|  \n  \n### Return Value  \n A pointer to the [CHttpFile](../../mfc/reference/chttpfile-class.md) object requested.  \n  \n### Remarks  \n `dwFlags` can be one of the following:  \n  \n|Internet flag|Description|  \n|-------------------|-----------------|  \n|`INTERNET_FLAG_RELOAD`|Forces a download of the requested file, object, or directory listing from the origin server, not from the cache.|  \n|`INTERNET_FLAG_DONT_CACHE`|Does not add the returned entity to the cache.|  \n|`INTERNET_FLAG_MAKE_PERSISTENT`|Adds the returned entity to the cache as a persistent entity. This means that standard cache cleanup, consistency checking, or garbage collection cannot remove this item from the cache.|  \n|`INTERNET_FLAG_SECURE`|Uses secure transaction semantics. This translates to using SSL/PCT and is only meaningful in HTTP requests|  \n|`INTERNET_FLAG_NO_AUTO_REDIRECT`|Used only with HTTP, specifies that redirections should not be automatically handled in [CHttpFile::SendRequest](../../mfc/reference/chttpfile-class.md#chttpfile__sendrequest).|  \n  \n Override the `dwContext` default to set the context identifier to a value of your choosing. The context identifier is associated with this specific operation of the `CHttpConnection` object created by its [CInternetSession](../../mfc/reference/cinternetsession-class.md) object. The value is returned to [CInternetSession::OnStatusCallback](../../mfc/reference/cinternetsession-class.md#cinternetsession__onstatuscallback) to provide status on the operation with which it is identified. See the article [Internet First Steps: WinInet](../../mfc/wininet-basics.md) for more information about the context identifier.  \n  \n Exceptions may be thrown with this function.  \n  \n## See Also  \n [CInternetConnection Class](../../mfc/reference/cinternetconnection-class.md)   \n [Hierarchy Chart](../../mfc/hierarchy-chart.md)   \n [CInternetConnection Class](../../mfc/reference/cinternetconnection-class.md)   \n [CHttpFile Class](../../mfc/reference/chttpfile-class.md)\n"}