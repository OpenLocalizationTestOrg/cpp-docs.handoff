{"nodes":[{"pos":[12,56],"content":"_getc_nolock, _getwc_nolock | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"_getc_nolock, _getwc_nolock | Microsoft Docs","pos":[0,44]}]},{"content":"_getc_nolock, _getwc_nolock","pos":[1300,1327]},{"content":"Reads a character from a stream.","pos":[1328,1360]},{"content":"Syntax","pos":[1369,1375]},{"content":"Parameters","pos":[1495,1505]},{"content":"Input stream.","pos":[1521,1534]},{"content":"Return Value","pos":[1543,1555]},{"pos":[1559,1626],"content":"See <bpt id=\"p1\">[</bpt>getc, getwc<ept id=\"p1\">](../../c-runtime-library/reference/getc-getwc.md)</ept>.","source":"See [getc, getwc](../../c-runtime-library/reference/getc-getwc.md)."},{"content":"Remarks","pos":[1635,1642]},{"content":"These functions are identical to <ph id=\"ph1\">`getc`</ph> and <ph id=\"ph2\">`getwc`</ph> except that they do not lock the calling thread.","pos":[1646,1746],"source":"These functions are identical to `getc` and `getwc` except that they do not lock the calling thread."},{"content":"They might be faster because they do not incur the overhead of locking out other threads.","pos":[1747,1836]},{"content":"Use these functions only in thread-safe contexts such as single-threaded applications or where the calling scope already handles thread isolation.","pos":[1837,1983]},{"content":"Generic-Text Routine Mappings","pos":[1993,2022]},{"content":"Tchar.h routine","pos":[2029,2044]},{"content":"_UNICODE and _MBCS not defined","pos":[2045,2075]},{"content":"_MBCS defined","pos":[2076,2089]},{"content":"_UNICODE defined","pos":[2090,2106]},{"content":"Requirements","pos":[2289,2301]},{"content":"Routine","pos":[2308,2315]},{"content":"Required header","pos":[2316,2331]},{"content":"stdio.h&gt;","pos":[2392,2400],"source":"stdio.h>"},{"content":"stdio.h&gt; or <ph id=\"ph1\">\\&lt;</ph>wchar.h&gt;","pos":[2422,2444],"source":"stdio.h> or \\<wchar.h>"},{"pos":[2452,2570],"content":"For more compatibility information, see <bpt id=\"p1\">[</bpt>Compatibility<ept id=\"p1\">](../../c-runtime-library/compatibility.md)</ept> in the Introduction.","source":"For more compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md) in the Introduction."},{"content":"Example","pos":[2579,2586]},{"content":"Input: crt_getc_nolock.txt","pos":[3302,3328]},{"content":"Output","pos":[3390,3396]},{"content":".NET Framework Equivalent","pos":[3449,3474]},{"content":"System::IO::StreamReader::Read","pos":[3485,3515]},{"content":"System::Console::Read","pos":[3602,3623]},{"content":"See Also","pos":[3700,3708]},{"content":"Stream I/O","pos":[3713,3723]},{"content":"fgetc, fgetwc","pos":[3769,3782]},{"content":"_getch, _getwch","pos":[3840,3855]},{"content":"putc, putwc","pos":[3913,3924]},{"content":"ungetc, ungetwc","pos":[3980,3995]}],"content":"---\ntitle: \"_getc_nolock, _getwc_nolock | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\napiname: \n  - \"_getc_nolock\"\n  - \"_getwc_nolock\"\napilocation: \n  - \"msvcrt.dll\"\n  - \"msvcr80.dll\"\n  - \"msvcr90.dll\"\n  - \"msvcr100.dll\"\n  - \"msvcr100_clr0400.dll\"\n  - \"msvcr110.dll\"\n  - \"msvcr110_clr0400.dll\"\n  - \"msvcr120.dll\"\n  - \"msvcr120_clr0400.dll\"\n  - \"ucrtbase.dll\"\n  - \"api-ms-win-crt-stdio-l1-1-0.dll\"\napitype: \"DLLExport\"\nf1_keywords: \n  - \"getc_nolock\"\n  - \"_gettc_nolock\"\n  - \"_getc_nolock\"\n  - \"getwc_nolock\"\n  - \"gettc_nolock\"\n  - \"_getwc_nolock\"\ndev_langs: \n  - \"C++\"\n  - \"C\"\nhelpviewer_keywords: \n  - \"characters, reading\"\n  - \"_getc_nolock function\"\n  - \"_getwc_nolock function\"\n  - \"getwc_nolock function\"\n  - \"streams, reading characters from\"\n  - \"reading characters from streams\"\n  - \"getc_nolock function\"\n  - \"gettc_nolock function\"\n  - \"_gettc_nolock function\"\nms.assetid: eb37b272-e177-41c9-b077-12ce7ffd3b88\ncaps.latest.revision: 16\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# _getc_nolock, _getwc_nolock\nReads a character from a stream.  \n  \n## Syntax  \n  \n```  \nint _getc_nolock(   \n   FILE *stream   \n);  \nwint_t _getwc_nolock(   \n   FILE *stream   \n);  \n```  \n  \n#### Parameters  \n `stream`  \n Input stream.  \n  \n## Return Value  \n See [getc, getwc](../../c-runtime-library/reference/getc-getwc.md).  \n  \n## Remarks  \n These functions are identical to `getc` and `getwc` except that they do not lock the calling thread. They might be faster because they do not incur the overhead of locking out other threads. Use these functions only in thread-safe contexts such as single-threaded applications or where the calling scope already handles thread isolation.  \n  \n### Generic-Text Routine Mappings  \n  \n|Tchar.h routine|_UNICODE and _MBCS not defined|_MBCS defined|_UNICODE defined|  \n|---------------------|--------------------------------------|--------------------|-----------------------|  \n|`_gettc_nolock`|`getc_nolock`|`getc_nolock`|`getwc_nolock`|  \n  \n## Requirements  \n  \n|Routine|Required header|  \n|-------------|---------------------|  \n|`getc_nolock`|\\<stdio.h>|  \n|`getwc_nolock`|\\<stdio.h> or \\<wchar.h>|  \n  \n For more compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md) in the Introduction.  \n  \n## Example  \n  \n```  \n// crt_getc_nolock.c  \n// Use getc to read a line from a file.  \n  \n#include <stdio.h>  \n  \nint main()  \n{  \n    char buffer[81];  \n    int i, ch;  \n    FILE* fp;  \n  \n    // Read a single line from the file \"crt_getc_nolock.txt\".  \n    fopen_s(&fp, \"crt_getc_nolock.txt\", \"r\");  \n    if (!fp)  \n    {  \n       printf(\"Failed to open file crt_getc_nolock.txt.\\n\");  \n       exit(1);  \n    }  \n  \n    for (i = 0; (i < 80) && ((ch = getc(fp)) != EOF)  \n                         && (ch != '\\n'); i++)  \n    {  \n        buffer[i] = (char) ch;  \n    }  \n  \n    // Terminate string with a null character   \n    buffer[i] = '\\0';  \n    printf( \"Input was: %s\\n\", buffer);  \n  \n    fclose(fp);  \n}  \n```  \n  \n## Input: crt_getc_nolock.txt  \n  \n```  \nLine the first.  \nLine the second.  \n```  \n  \n### Output  \n  \n```  \nInput was: Line the first.  \n```  \n  \n## .NET Framework Equivalent  \n  \n-   [System::IO::StreamReader::Read](https://msdn.microsoft.com/en-us/library/system.io.streamreader.read.aspx)  \n  \n-   [System::Console::Read](https://msdn.microsoft.com/en-us/library/system.console.read.aspx)  \n  \n## See Also  \n [Stream I/O](../../c-runtime-library/stream-i-o.md)   \n [fgetc, fgetwc](../../c-runtime-library/reference/fgetc-fgetwc.md)   \n [_getch, _getwch](../../c-runtime-library/reference/getch-getwch.md)   \n [putc, putwc](../../c-runtime-library/reference/putc-putwc.md)   \n [ungetc, ungetwc](../../c-runtime-library/reference/ungetc-ungetwc.md)"}