{"nodes":[{"pos":[12,55],"content":"CDaoRelationInfo Structure | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"CDaoRelationInfo Structure | Microsoft Docs","pos":[0,43]}]},{"pos":[682,708],"content":"CDaoRelationInfo Structure","linkify":"CDaoRelationInfo Structure","nodes":[{"content":"CDaoRelationInfo Structure","pos":[0,26]}]},{"pos":[709,887],"content":"The <ph id=\"ph1\">`CDaoRelationInfo`</ph> structure contains information about a relation defined between fields of two tables in a <bpt id=\"p1\">[</bpt>CDaoDatabase<ept id=\"p1\">](../../mfc/reference/cdaodatabase-class.md)</ept> object.","source":"The `CDaoRelationInfo` structure contains information about a relation defined between fields of two tables in a [CDaoDatabase](../../mfc/reference/cdaodatabase-class.md) object."},{"pos":[896,902],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[1371,1381],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Uniquely names the relation object.","pos":[1400,1435]},{"content":"For more information, see the topic \"Name Property\" in DAO Help.","pos":[1436,1500]},{"content":"<bpt id=\"p1\">*</bpt>m_strTable<ept id=\"p1\">*</ept>","pos":[1507,1519],"source":"*m_strTable*"},{"content":"Names the primary table in the relation.","pos":[1523,1563]},{"content":"<bpt id=\"p1\">*</bpt>m_strForeignTable<ept id=\"p1\">*</ept>","pos":[1570,1589],"source":"*m_strForeignTable*"},{"content":"Names the foreign table in the relation.","pos":[1593,1633]},{"content":"A foreign table is a table used to contain foreign keys.","pos":[1634,1690]},{"content":"Generally, you use a foreign table to establish or enforce referential integrity.","pos":[1691,1772]},{"content":"The foreign table is usually on the many side of a one-to-many relationship.","pos":[1773,1849]},{"content":"Examples of foreign tables include tables containing codes for the American states or Canadian provinces or customer orders.","pos":[1850,1974]},{"content":"Contains information about the relation type.","pos":[2000,2045]},{"content":"The value of this member can be any of the following:","pos":[2046,2099]},{"pos":[2107,2155],"content":"<bpt id=\"p1\">**</bpt>dbRelationUnique<ept id=\"p1\">**</ept> Relationship is one-to-one.","source":"**dbRelationUnique** Relationship is one-to-one."},{"pos":[2163,2245],"content":"<bpt id=\"p1\">**</bpt>dbRelationDontEnforce<ept id=\"p1\">**</ept> Relationship is not enforced (no referential integrity).","source":"**dbRelationDontEnforce** Relationship is not enforced (no referential integrity)."},{"pos":[2253,2360],"content":"<bpt id=\"p1\">**</bpt>dbRelationInherited<ept id=\"p1\">**</ept> Relationship exists in a noncurrent database that contains the two attached tables.","source":"**dbRelationInherited** Relationship exists in a noncurrent database that contains the two attached tables."},{"content":"<bpt id=\"p1\">**</bpt>dbRelationLeft<ept id=\"p1\">**</ept> The relationship is a left join.","pos":[2368,2419],"source":"**dbRelationLeft** The relationship is a left join."},{"content":"A left outer join includes all of the records from the first (left-hand) of two tables, even if there are no matching values for records in the second (right-hand) table.","pos":[2420,2590]},{"content":"<bpt id=\"p1\">**</bpt>dbRelationRight<ept id=\"p1\">**</ept> The relationship is a right join.","pos":[2598,2651],"source":"**dbRelationRight** The relationship is a right join."},{"content":"A right outer join includes all of the records from the second (right-hand) of two tables, even if there are no matching values for records in the first (left-hand) table.","pos":[2652,2823]},{"pos":[2831,2880],"content":"<bpt id=\"p1\">**</bpt>dbRelationUpdateCascade<ept id=\"p1\">**</ept> Updates will cascade.","source":"**dbRelationUpdateCascade** Updates will cascade."},{"pos":[2888,2939],"content":"<bpt id=\"p1\">**</bpt>dbRelationDeleteCascade<ept id=\"p1\">**</ept> Deletions will cascade.","source":"**dbRelationDeleteCascade** Deletions will cascade."},{"pos":[2946,3208],"content":"`m_pFieldInfos`  \nA pointer to an array of [CDaoRelationFieldInfo](../../mfc/reference/cdaorelationfieldinfo-structure.md) structures. The array contains one object for each field in the relation. The `m_nFields` data member gives a count of the array elements.","leadings":[""," "],"nodes":[{"content":"A pointer to an array of [CDaoRelationFieldInfo](../../mfc/reference/cdaorelationfieldinfo-structure.md) structures. The array contains one object for each field in the relation. The `m_nFields` data member gives a count of the array elements.","pos":[18,261],"nodes":[{"content":"A pointer to an array of <bpt id=\"p1\">[</bpt>CDaoRelationFieldInfo<ept id=\"p1\">](../../mfc/reference/cdaorelationfieldinfo-structure.md)</ept> structures.","pos":[0,116],"source":"A pointer to an array of [CDaoRelationFieldInfo](../../mfc/reference/cdaorelationfieldinfo-structure.md) structures."},{"content":"The array contains one object for each field in the relation.","pos":[117,178]},{"content":"The <ph id=\"ph1\">`m_nFields`</ph> data member gives a count of the array elements.","pos":[179,243],"source":" The `m_nFields` data member gives a count of the array elements."}]}]},{"pos":[3215,3311],"content":"`m_nFields`  \nThe number of `CDaoRelationFieldInfo` objects in the `m_pFieldInfos` data member.","leadings":[""," "],"nodes":[{"content":"The number of <ph id=\"ph1\">`CDaoRelationFieldInfo`</ph> objects in the <ph id=\"ph2\">`m_pFieldInfos`</ph> data member.","pos":[14,95],"source":"The number of `CDaoRelationFieldInfo` objects in the `m_pFieldInfos` data member."}]},{"pos":[3320,3327],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[3331,3556],"content":"The references to Primary and Secondary above indicate how the information is returned by the <bpt id=\"p1\">[</bpt>GetRelationInfo<ept id=\"p1\">](../../mfc/reference/cdaodatabase-class.md#cdaodatabase__getrelationinfo)</ept> member function in class <ph id=\"ph1\">`CDaoDatabase`</ph>.","source":"The references to Primary and Secondary above indicate how the information is returned by the [GetRelationInfo](../../mfc/reference/cdaodatabase-class.md#cdaodatabase__getrelationinfo) member function in class `CDaoDatabase`."},{"content":"Relation objects are not represented by an MFC class.","pos":[3563,3616]},{"content":"Instead, the DAO object underlying an MFC object of the <ph id=\"ph1\">`CDaoDatabase`</ph> class maintains a collection of relation objects: <ph id=\"ph2\">`CDaoDatabase`</ph> supplies member functions to access some individual items of relation information, or you can access them all at once with a <ph id=\"ph3\">`CDaoRelationInfo`</ph> object by calling the <ph id=\"ph4\">`GetRelationInfo`</ph> member function of the containing database object.","pos":[3617,3987],"source":" Instead, the DAO object underlying an MFC object of the `CDaoDatabase` class maintains a collection of relation objects: `CDaoDatabase` supplies member functions to access some individual items of relation information, or you can access them all at once with a `CDaoRelationInfo` object by calling the `GetRelationInfo` member function of the containing database object."},{"content":"Information retrieved by the <bpt id=\"p1\">[</bpt>CDaoDatabase::GetRelationInfo<ept id=\"p1\">](../../mfc/reference/cdaodatabase-class.md#cdaodatabase__getrelationinfo)</ept> member function is stored in a <ph id=\"ph1\">`CDaoRelationInfo`</ph> structure.","pos":[3994,4188],"source":"Information retrieved by the [CDaoDatabase::GetRelationInfo](../../mfc/reference/cdaodatabase-class.md#cdaodatabase__getrelationinfo) member function is stored in a `CDaoRelationInfo` structure."},{"content":"<ph id=\"ph1\">`CDaoRelationInfo`</ph> also defines a <ph id=\"ph2\">`Dump`</ph> member function in debug builds.","pos":[4189,4262],"source":"`CDaoRelationInfo` also defines a `Dump` member function in debug builds."},{"content":"You can use <ph id=\"ph1\">`Dump`</ph> to dump the contents of a <ph id=\"ph2\">`CDaoRelationInfo`</ph> object.","pos":[4263,4334],"source":" You can use `Dump` to dump the contents of a `CDaoRelationInfo` object."},{"pos":[4343,4355],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[4359,4379],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> afxdao.h","source":"**Header:** afxdao.h"},{"pos":[4388,4396],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"pos":[4400,4489],"content":"<bpt id=\"p1\">[</bpt>CDaoRelationFieldInfo Structure<ept id=\"p1\">](../../mfc/reference/cdaorelationfieldinfo-structure.md)</ept>","source":"[CDaoRelationFieldInfo Structure](../../mfc/reference/cdaorelationfieldinfo-structure.md)"}],"content":"---\ntitle: \"CDaoRelationInfo Structure | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"CDaoRelationInfo\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"DAO (Data Access Objects), Relations collection\"\n  - \"CDaoRelationInfo structure\"\nms.assetid: 92dda090-fe72-4090-84ec-429498a48aad\ncaps.latest.revision: 13\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# CDaoRelationInfo Structure\nThe `CDaoRelationInfo` structure contains information about a relation defined between fields of two tables in a [CDaoDatabase](../../mfc/reference/cdaodatabase-class.md) object.  \n  \n## Syntax  \n  \n```  \nstruct CDaoRelationInfo  \n{  \n    CDaoRelationInfo();\n*// Constructor  \n    CString m_strName;      // Primary  \n    CString m_strTable;     // Primary  \n    CString m_strForeignTable;              // Primary  \n    long m_lAttributes;     // Secondary  \n    CDaoRelationFieldInfo* m_pFieldInfos;   // Secondary  \n    short m_nFields;        // Secondary *// Below the // Implementation comment: *// Destructor, not otherwise documented  \n};  \n```  \n  \n#### Parameters  \n `m_strName`  \n Uniquely names the relation object. For more information, see the topic \"Name Property\" in DAO Help.  \n  \n *m_strTable*  \n Names the primary table in the relation.  \n  \n *m_strForeignTable*  \n Names the foreign table in the relation. A foreign table is a table used to contain foreign keys. Generally, you use a foreign table to establish or enforce referential integrity. The foreign table is usually on the many side of a one-to-many relationship. Examples of foreign tables include tables containing codes for the American states or Canadian provinces or customer orders.  \n  \n `m_lAttributes`  \n Contains information about the relation type. The value of this member can be any of the following:  \n  \n- **dbRelationUnique** Relationship is one-to-one.  \n  \n- **dbRelationDontEnforce** Relationship is not enforced (no referential integrity).  \n  \n- **dbRelationInherited** Relationship exists in a noncurrent database that contains the two attached tables.  \n  \n- **dbRelationLeft** The relationship is a left join. A left outer join includes all of the records from the first (left-hand) of two tables, even if there are no matching values for records in the second (right-hand) table.  \n  \n- **dbRelationRight** The relationship is a right join. A right outer join includes all of the records from the second (right-hand) of two tables, even if there are no matching values for records in the first (left-hand) table.  \n  \n- **dbRelationUpdateCascade** Updates will cascade.  \n  \n- **dbRelationDeleteCascade** Deletions will cascade.  \n  \n `m_pFieldInfos`  \n A pointer to an array of [CDaoRelationFieldInfo](../../mfc/reference/cdaorelationfieldinfo-structure.md) structures. The array contains one object for each field in the relation. The `m_nFields` data member gives a count of the array elements.  \n  \n `m_nFields`  \n The number of `CDaoRelationFieldInfo` objects in the `m_pFieldInfos` data member.  \n  \n## Remarks  \n The references to Primary and Secondary above indicate how the information is returned by the [GetRelationInfo](../../mfc/reference/cdaodatabase-class.md#cdaodatabase__getrelationinfo) member function in class `CDaoDatabase`.  \n  \n Relation objects are not represented by an MFC class. Instead, the DAO object underlying an MFC object of the `CDaoDatabase` class maintains a collection of relation objects: `CDaoDatabase` supplies member functions to access some individual items of relation information, or you can access them all at once with a `CDaoRelationInfo` object by calling the `GetRelationInfo` member function of the containing database object.  \n  \n Information retrieved by the [CDaoDatabase::GetRelationInfo](../../mfc/reference/cdaodatabase-class.md#cdaodatabase__getrelationinfo) member function is stored in a `CDaoRelationInfo` structure. `CDaoRelationInfo` also defines a `Dump` member function in debug builds. You can use `Dump` to dump the contents of a `CDaoRelationInfo` object.  \n  \n## Requirements  \n **Header:** afxdao.h  \n  \n## See Also  \n [CDaoRelationFieldInfo Structure](../../mfc/reference/cdaorelationfieldinfo-structure.md)\n"}