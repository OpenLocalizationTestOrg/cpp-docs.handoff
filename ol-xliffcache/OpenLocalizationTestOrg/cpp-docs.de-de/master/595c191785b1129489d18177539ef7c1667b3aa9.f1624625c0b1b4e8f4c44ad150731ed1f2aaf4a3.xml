{"nodes":[{"pos":[12,49],"content":"2.7.2.2 firstprivate | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"2.7.2.2 firstprivate | Microsoft Docs","pos":[0,37]}]},{"content":"2.7.2.2 firstprivate","pos":[529,549]},{"content":"The <bpt id=\"p1\">**</bpt>firstprivate<ept id=\"p1\">**</ept> clause provides a superset of the functionality provided by the <bpt id=\"p2\">**</bpt>private<ept id=\"p2\">**</ept> clause.","pos":[550,654],"source":"The **firstprivate** clause provides a superset of the functionality provided by the **private** clause."},{"content":"The syntax of the <bpt id=\"p1\">**</bpt>firstprivate<ept id=\"p1\">**</ept> clause is as follows:","pos":[655,711],"source":" The syntax of the **firstprivate** clause is as follows:"},{"content":"Variables specified in <bpt id=\"p1\">*</bpt>variable-list<ept id=\"p1\">*</ept> have <bpt id=\"p2\">**</bpt>private<ept id=\"p2\">**</ept> clause semantics, as described in <bpt id=\"p3\">[</bpt>Section 2.7.2.1<ept id=\"p3\">](../../parallel/openmp/2-7-2-1-private.md)</ept> on page 25.","pos":[763,924],"source":"Variables specified in *variable-list* have **private** clause semantics, as described in [Section 2.7.2.1](../../parallel/openmp/2-7-2-1-private.md) on page 25."},{"content":"The initialization or construction happens as if it were done once per thread, prior to the thread's execution of the construct.","pos":[925,1053]},{"content":"For a <bpt id=\"p1\">**</bpt>firstprivate<ept id=\"p1\">**</ept> clause on a parallel construct, the initial value of the new private object is the value of the original object that exists immediately prior to the parallel construct for the thread that encounters it.","pos":[1054,1279],"source":" For a **firstprivate** clause on a parallel construct, the initial value of the new private object is the value of the original object that exists immediately prior to the parallel construct for the thread that encounters it."},{"content":"For a <bpt id=\"p1\">**</bpt>firstprivate<ept id=\"p1\">**</ept> clause on a work-sharing construct, the initial value of the new private object for each thread that executes the work-sharing construct is the value of the original object that exists prior to the point in time that the same thread encounters the work-sharing construct.","pos":[1280,1574],"source":" For a **firstprivate** clause on a work-sharing construct, the initial value of the new private object for each thread that executes the work-sharing construct is the value of the original object that exists prior to the point in time that the same thread encounters the work-sharing construct."},{"content":"In addition, for C++ objects, the new private object for each thread is copy constructed from the original object.","pos":[1575,1689]},{"pos":[1696,1759],"content":"The restrictions to the <bpt id=\"p1\">**</bpt>firstprivate<ept id=\"p1\">**</ept> clause are as follows:","source":"The restrictions to the **firstprivate** clause are as follows:"},{"pos":[1769,1872],"content":"A variable specified in a <bpt id=\"p1\">**</bpt>firstprivate<ept id=\"p1\">**</ept> clause must not have an incomplete type or a reference type.","source":"A variable specified in a **firstprivate** clause must not have an incomplete type or a reference type."},{"pos":[1882,2003],"content":"A variable with a class type that is specified as <bpt id=\"p1\">**</bpt>firstprivate<ept id=\"p1\">**</ept> must have an accessible, unambiguous copy constructor.","source":"A variable with a class type that is specified as **firstprivate** must have an accessible, unambiguous copy constructor."},{"pos":[2013,2250],"content":"Variables that are private within a parallel region or that appear in the <bpt id=\"p1\">**</bpt>reduction<ept id=\"p1\">**</ept> clause of a <bpt id=\"p2\">**</bpt>parallel<ept id=\"p2\">**</ept> directive cannot be specified in a <bpt id=\"p3\">**</bpt>firstprivate<ept id=\"p3\">**</ept> clause on a work-sharing directive that binds to the parallel construct.","source":"Variables that are private within a parallel region or that appear in the **reduction** clause of a **parallel** directive cannot be specified in a **firstprivate** clause on a work-sharing directive that binds to the parallel construct."}],"content":"---\ntitle: \"2.7.2.2 firstprivate | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"C++\"\nms.assetid: ece6ff12-2be1-4e4f-866c-d39345fd87b5\ncaps.latest.revision: 8\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# 2.7.2.2 firstprivate\nThe **firstprivate** clause provides a superset of the functionality provided by the **private** clause. The syntax of the **firstprivate** clause is as follows:  \n  \n```  \nfirstprivate(variable-list)  \n```  \n  \n Variables specified in *variable-list* have **private** clause semantics, as described in [Section 2.7.2.1](../../parallel/openmp/2-7-2-1-private.md) on page 25. The initialization or construction happens as if it were done once per thread, prior to the thread's execution of the construct. For a **firstprivate** clause on a parallel construct, the initial value of the new private object is the value of the original object that exists immediately prior to the parallel construct for the thread that encounters it. For a **firstprivate** clause on a work-sharing construct, the initial value of the new private object for each thread that executes the work-sharing construct is the value of the original object that exists prior to the point in time that the same thread encounters the work-sharing construct. In addition, for C++ objects, the new private object for each thread is copy constructed from the original object.  \n  \n The restrictions to the **firstprivate** clause are as follows:  \n  \n-   A variable specified in a **firstprivate** clause must not have an incomplete type or a reference type.  \n  \n-   A variable with a class type that is specified as **firstprivate** must have an accessible, unambiguous copy constructor.  \n  \n-   Variables that are private within a parallel region or that appear in the **reduction** clause of a **parallel** directive cannot be specified in a **firstprivate** clause on a work-sharing directive that binds to the parallel construct."}