{"nodes":[{"pos":[12,49],"content":"Compiler Error C2797 | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Compiler Error C2797 | Microsoft Docs","pos":[0,37]}]},{"content":"Compiler Error C2797","pos":[597,617]},{"content":"List initialization inside member initializer list or non-static data member initializer is not implemented.","pos":[618,726]},{"content":"The C++ compiler in Visual Studio does not implement list initialization inside either a member initializer list or a non-static data member initializer.","pos":[733,886]},{"content":"Before Visual Studio 2013 Update 3, this was silently converted to a function call, which could lead to bad code generation.","pos":[887,1011]},{"content":"Visual Studio 2013 Update 3 reports this as an error.","pos":[1012,1065]},{"content":"This example generates C2797:","pos":[1072,1101]},{"content":"This example also generates C2797:","pos":[1379,1413]},{"content":"To fix this issue, you can use explicit construction of inner lists.","pos":[1672,1740]},{"content":"For example:","pos":[1741,1753]},{"content":"If you do not require list initialization:","pos":[1932,1974]},{"content":"(The compiler in Visual Studio 2013 does this implicitly prior to Visual Studio 2013 Update 3.)","pos":[2104,2199]}],"content":"---\ntitle: \"Compiler Error C2797 | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"error-reference\"\nf1_keywords: \n  - \"C2797\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"C2797\"\nms.assetid: 9fb26d35-eb5c-46fc-9ff5-756fba5bdaff\ncaps.latest.revision: 5\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Compiler Error C2797\nList initialization inside member initializer list or non-static data member initializer is not implemented.  \n  \n The C++ compiler in Visual Studio does not implement list initialization inside either a member initializer list or a non-static data member initializer. Before Visual Studio 2013 Update 3, this was silently converted to a function call, which could lead to bad code generation. Visual Studio 2013 Update 3 reports this as an error.  \n  \n This example generates C2797:  \n  \n```  \n#include <vector>  \nstruct S {  \n    S() : v1{1} {} // C2797, VS2013 RTM incorrectly calls 'vector(size_type)'  \n  \n    std::vector<int> v1;  \n    std::vector<int> v2{1, 2}; // C2797, VS2013 RTM incorrectly calls 'vector(size_type, const int &)'  \n};  \n  \n```  \n  \n This example also generates C2797:  \n  \n```  \nstruct S1 {  \n    int i;  \n};  \n  \nstruct S2 {  \n    S2() : s1{0} {} // C2797, VS2013 RTM interprets as S2() : s1(0) {} causing C2664  \n    S1 s1;  \n    S1 s2{0}; // C2797, VS2013 RTM interprets as S1 s2 = S1(0); causing C2664  \n};  \n  \n```  \n  \n To fix this issue, you can use explicit construction of inner lists. For example:  \n  \n```  \n#include <vector>  \ntypedef std::vector<int> Vector;  \nstruct S {  \n    S() : v1(Vector{1}) {}  \n  \n    Vector v1;  \n    Vector v2 = Vector{1, 2};  \n};  \n  \n```  \n  \n If you do not require list initialization:  \n  \n```  \nstruct S {  \n    S() : s1(\"\") {}  \n  \n    std::string s1;  \n    std::string s2 = std::string(\"\");  \n};  \n  \n```  \n  \n (The compiler in Visual Studio 2013 does this implicitly prior to Visual Studio 2013 Update 3.)"}