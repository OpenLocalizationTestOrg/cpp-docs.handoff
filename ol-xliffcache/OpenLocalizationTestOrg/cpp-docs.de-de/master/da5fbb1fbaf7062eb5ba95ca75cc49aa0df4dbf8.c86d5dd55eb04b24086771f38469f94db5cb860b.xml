{"nodes":[{"pos":[12,46],"content":"_getche, _getwche | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"_getche, _getwche | Microsoft Docs","pos":[0,34]}]},{"pos":[1057,1074],"content":"_getche, _getwche","linkify":"_getche, _getwche","nodes":[{"content":"_getche, _getwche","pos":[0,17]}]},{"content":"Gets a character from the console with echo.","pos":[1075,1119]},{"pos":[1127,1347],"content":"[!IMPORTANT]\n This API cannot be used in applications that execute in the Windows Runtime. For more information, see [CRT functions not supported with /ZW](http://msdn.microsoft.com/library/windows/apps/jj606124.aspx).","leadings":["","> "],"nodes":[{"content":" This API cannot be used in applications that execute in the Windows Runtime. For more information, see [CRT functions not supported with /ZW](http://msdn.microsoft.com/library/windows/apps/jj606124.aspx).","pos":[13,218],"nodes":[{"content":"This API cannot be used in applications that execute in the Windows Runtime.","pos":[1,77]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>CRT functions not supported with /ZW<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/apps/jj606124.aspx)</ept>.","pos":[78,205],"source":" For more information, see [CRT functions not supported with /ZW](http://msdn.microsoft.com/library/windows/apps/jj606124.aspx)."}]}]},{"pos":[1356,1362],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[1436,1448],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Returns the character read.","pos":[1452,1479]},{"content":"There is no error return.","pos":[1480,1505]},{"pos":[1514,1521],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The <ph id=\"ph1\">`_getche`</ph> and <ph id=\"ph2\">`_getwche`</ph> functions read a single character from the console with echo, meaning that the character is displayed at the console.","pos":[1525,1671],"source":"The `_getche` and `_getwche` functions read a single character from the console with echo, meaning that the character is displayed at the console."},{"content":"None of these functions can be used to read CTRL+C.","pos":[1672,1723]},{"content":"When reading a function key or an arrow key, each function must be called twice; the first call returns 0 or 0xE0, and the second call returns the actual key code.","pos":[1724,1887]},{"content":"These functions lock the calling thread and are therefore thread-safe.","pos":[1894,1964]},{"content":"For non-locking versions, see <bpt id=\"p1\">[</bpt>_getche_nolock, _getwche_nolock<ept id=\"p1\">](../../c-runtime-library/reference/getche-nolock-getwche-nolock.md)</ept>.","pos":[1965,2096],"source":" For non-locking versions, see [_getche_nolock, _getwche_nolock](../../c-runtime-library/reference/getche-nolock-getwche-nolock.md)."},{"pos":[2106,2135],"content":"Generic-Text Routine Mappings","linkify":"Generic-Text Routine Mappings","nodes":[{"content":"Generic-Text Routine Mappings","pos":[0,29]}]},{"content":"Tchar.h routine","pos":[2142,2157]},{"content":"_UNICODE and _MBCS not defined","pos":[2158,2188]},{"content":"_MBCS defined","pos":[2189,2202]},{"content":"_UNICODE defined","pos":[2203,2219]},{"pos":[2383,2395],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"content":"Routine","pos":[2402,2409]},{"content":"Required header","pos":[2410,2425]},{"content":"<ph id=\"ph1\">\\&lt;</ph>conio.h&gt;","pos":[2480,2490],"source":"\\<conio.h>"},{"content":"<ph id=\"ph1\">\\&lt;</ph>conio.h&gt; or <ph id=\"ph2\">\\&lt;</ph>wchar.h&gt;","pos":[2506,2530],"source":"\\<conio.h> or \\<wchar.h>"},{"pos":[2538,2636],"content":"For more compatibility information, see <bpt id=\"p1\">[</bpt>Compatibility<ept id=\"p1\">](../../c-runtime-library/compatibility.md)</ept>.","source":"For more compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md)."},{"pos":[2645,2652],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[3223,3247],"content":"NET Framework Equivalent","linkify":"NET Framework Equivalent","nodes":[{"content":"NET Framework Equivalent","pos":[0,24]}]},{"content":"Not applicable.","pos":[3251,3266]},{"content":"To call the standard C function, use <ph id=\"ph1\">`PInvoke`</ph>.","pos":[3267,3314],"source":" To call the standard C function, use `PInvoke`."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Platform Invoke Examples<ept id=\"p1\">](http://msdn.microsoft.com/Library/15926806-f0b7-487e-93a6-4e9367ec689f)</ept>.","pos":[3315,3440],"source":" For more information, see [Platform Invoke Examples](http://msdn.microsoft.com/Library/15926806-f0b7-487e-93a6-4e9367ec689f)."},{"pos":[3449,3457],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Console and Port I/O<ept id=\"p1\">](../../c-runtime-library/console-and-port-i-o.md)</ept><ph id=\"ph1\"> </ph>","pos":[3461,3533],"source":"[Console and Port I/O](../../c-runtime-library/console-and-port-i-o.md) "},{"content":"<bpt id=\"p1\"> [</bpt>_cgets, _cgetws<ept id=\"p1\">](../../c-runtime-library/cgets-cgetws.md)</ept><ph id=\"ph1\"> </ph>","pos":[3536,3596],"source":" [_cgets, _cgetws](../../c-runtime-library/cgets-cgetws.md) "},{"content":"<bpt id=\"p1\"> [</bpt>getc, getwc<ept id=\"p1\">](../../c-runtime-library/reference/getc-getwc.md)</ept><ph id=\"ph1\"> </ph>","pos":[3599,3663],"source":" [getc, getwc](../../c-runtime-library/reference/getc-getwc.md) "},{"content":"<bpt id=\"p1\"> [</bpt>_ungetch, _ungetwch, _ungetch_nolock, _ungetwch_nolock<ept id=\"p1\">](../../c-runtime-library/reference/ungetch-ungetwch-ungetch-nolock-ungetwch-nolock.md)</ept>","pos":[3666,3809],"source":" [_ungetch, _ungetwch, _ungetch_nolock, _ungetwch_nolock](../../c-runtime-library/reference/ungetch-ungetwch-ungetch-nolock-ungetwch-nolock.md)"}],"content":"---\ntitle: \"_getche, _getwche | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\napiname: \n  - \"_getwche\"\n  - \"_getche\"\napilocation: \n  - \"msvcrt.dll\"\n  - \"msvcr80.dll\"\n  - \"msvcr90.dll\"\n  - \"msvcr100.dll\"\n  - \"msvcr100_clr0400.dll\"\n  - \"msvcr110.dll\"\n  - \"msvcr110_clr0400.dll\"\n  - \"msvcr120.dll\"\n  - \"msvcr120_clr0400.dll\"\n  - \"ucrtbase.dll\"\napitype: \"DLLExport\"\nf1_keywords: \n  - \"getwche\"\n  - \"_getche\"\n  - \"_getwche\"\ndev_langs: \n  - \"C++\"\n  - \"C\"\nhelpviewer_keywords: \n  - \"characters, getting from console\"\n  - \"_getwche function\"\n  - \"getche function\"\n  - \"console, reading from\"\n  - \"getwche function\"\n  - \"_getche function\"\nms.assetid: eac978a8-c43a-4130-938f-54f12e2a0fda\ncaps.latest.revision: 23\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# _getche, _getwche\nGets a character from the console with echo.  \n  \n> [!IMPORTANT]\n>  This API cannot be used in applications that execute in the Windows Runtime. For more information, see [CRT functions not supported with /ZW](http://msdn.microsoft.com/library/windows/apps/jj606124.aspx).  \n  \n## Syntax  \n  \n```  \nint _getche( void );  \nwint_t _getwche( void );  \n```  \n  \n## Return Value  \n Returns the character read. There is no error return.  \n  \n## Remarks  \n The `_getche` and `_getwche` functions read a single character from the console with echo, meaning that the character is displayed at the console. None of these functions can be used to read CTRL+C. When reading a function key or an arrow key, each function must be called twice; the first call returns 0 or 0xE0, and the second call returns the actual key code.  \n  \n These functions lock the calling thread and are therefore thread-safe. For non-locking versions, see [_getche_nolock, _getwche_nolock](../../c-runtime-library/reference/getche-nolock-getwche-nolock.md).  \n  \n### Generic-Text Routine Mappings  \n  \n|Tchar.h routine|_UNICODE and _MBCS not defined|_MBCS defined|_UNICODE defined|  \n|---------------------|--------------------------------------|--------------------|-----------------------|  \n|`_getche`|`_getche`|`_getch`|`_getwche`|  \n  \n## Requirements  \n  \n|Routine|Required header|  \n|-------------|---------------------|  \n|`_getche`|\\<conio.h>|  \n|`_getwche`|\\<conio.h> or \\<wchar.h>|  \n  \n For more compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md).  \n  \n## Example  \n  \n```  \n// crt_getche.c  \n// compile with: /c  \n// This program reads characters from  \n// the keyboard until it receives a 'Y' or 'y'.  \n  \n#include <conio.h>  \n#include <ctype.h>  \n  \nint main( void )  \n{  \n   int ch;  \n  \n   _cputs( \"Type 'Y' when finished typing keys: \" );  \n   do  \n   {  \n      ch = _getche();  \n      ch = toupper( ch );  \n   } while( ch != 'Y' );  \n  \n   _putch( ch );  \n   _putch( '\\r' );    // Carriage return  \n   _putch( '\\n' );    // Line feed       \n}  \n```  \n  \n```Output  \n  \nabcdeyType 'Y' when finished typing keys: Y  \n```  \n  \n## NET Framework Equivalent  \n Not applicable. To call the standard C function, use `PInvoke`. For more information, see [Platform Invoke Examples](http://msdn.microsoft.com/Library/15926806-f0b7-487e-93a6-4e9367ec689f).  \n  \n## See Also  \n [Console and Port I/O](../../c-runtime-library/console-and-port-i-o.md)   \n [_cgets, _cgetws](../../c-runtime-library/cgets-cgetws.md)   \n [getc, getwc](../../c-runtime-library/reference/getc-getwc.md)   \n [_ungetch, _ungetwch, _ungetch_nolock, _ungetwch_nolock](../../c-runtime-library/reference/ungetch-ungetwch-ungetch-nolock-ungetwch-nolock.md)"}