{"nodes":[{"pos":[12,60],"content":"priority_queue::empty (STL-CLR) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"priority_queue::empty (STL-CLR) | Microsoft Docs","pos":[0,48]}]},{"content":"priority_queue::empty (STL/CLR)","pos":[644,675]},{"content":"Tests whether no elements are present.","pos":[676,714]},{"content":"Syntax","pos":[723,729]},{"content":"Remarks","pos":[769,776]},{"content":"The member function returns true for an empty controlled sequence.","pos":[780,846]},{"content":"It is equivalent to <bpt id=\"p1\">[</bpt>priority_queue::size (STL/CLR)<ept id=\"p1\">](../dotnet/priority-queue-size-stl-clr.md)</ept><ph id=\"ph1\">`() == 0`</ph>.","pos":[847,951],"source":" It is equivalent to [priority_queue::size (STL/CLR)](../dotnet/priority-queue-size-stl-clr.md)`() == 0`."},{"content":"You use it to test whether the priority_queue is empty.","pos":[952,1007]},{"content":"Example","pos":[1016,1023]},{"content":"Requirements","pos":[1967,1979]},{"pos":[1983,2010],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> <ph id=\"ph1\">\\&lt;</ph>cliext/queue&gt;","source":"**Header:** \\<cliext/queue>"},{"pos":[2017,2038],"content":"<bpt id=\"p1\">**</bpt>Namespace:<ept id=\"p1\">**</ept> cliext","source":"**Namespace:** cliext"},{"content":"See Also","pos":[2047,2055]},{"content":"priority_queue (STL/CLR)","pos":[2060,2084]},{"content":"priority_queue::size (STL/CLR)","pos":[2128,2158]}],"content":"---\ntitle: \"priority_queue::empty (STL-CLR) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"cliext::priority_queue::empty\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"empty member [STL/CLR]\"\nms.assetid: bb2bc4cf-395f-4c4f-b432-550b85e1865d\ncaps.latest.revision: 17\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# priority_queue::empty (STL/CLR)\nTests whether no elements are present.  \n  \n## Syntax  \n  \n```  \nbool empty();  \n```  \n  \n## Remarks  \n The member function returns true for an empty controlled sequence. It is equivalent to [priority_queue::size (STL/CLR)](../dotnet/priority-queue-size-stl-clr.md)`() == 0`. You use it to test whether the priority_queue is empty.  \n  \n## Example  \n  \n```  \n// cliext_priority_queue_empty.cpp   \n// compile with: /clr   \n#include <cliext/queue>   \n  \ntypedef cliext::priority_queue<wchar_t> Mypriority_queue;   \nint main()   \n    {   \n    Mypriority_queue c1;   \n    c1.push(L'a');   \n    c1.push(L'b');   \n    c1.push(L'c');   \n  \n// display initial contents \" a b c\"   \n    for each (wchar_t elem in c1.get_container())   \n        System::Console::Write(\" {0}\", elem);   \n    System::Console::WriteLine();   \n    System::Console::WriteLine(\"size() = {0}\", c1.size());   \n    System::Console::WriteLine(\"empty() = {0}\", c1.empty());   \n  \n// clear the container and reinspect   \n    c1.pop();   \n    c1.pop();   \n    c1.pop();   \n    System::Console::WriteLine(\"size() = {0}\", c1.size());   \n    System::Console::WriteLine(\"empty() = {0}\", c1.empty());   \n    return (0);   \n    }  \n  \n```  \n  \n```Output  \n c a b  \nsize() = 3  \nempty() = False  \nsize() = 0  \nempty() = True  \n```  \n  \n## Requirements  \n **Header:** \\<cliext/queue>  \n  \n **Namespace:** cliext  \n  \n## See Also  \n [priority_queue (STL/CLR)](../dotnet/priority-queue-stl-clr.md)   \n [priority_queue::size (STL/CLR)](../dotnet/priority-queue-size-stl-clr.md)"}