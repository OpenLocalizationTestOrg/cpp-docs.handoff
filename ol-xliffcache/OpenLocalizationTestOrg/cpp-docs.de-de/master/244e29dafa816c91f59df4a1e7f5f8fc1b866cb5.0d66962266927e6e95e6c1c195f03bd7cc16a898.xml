{"nodes":[{"pos":[12,43],"content":"&lt;thread&gt; | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&amp;lt;</ph>thread<ph id=\"ph2\">&amp;gt;</ph> | Microsoft Docs","pos":[0,31],"source":"&lt;thread&gt; | Microsoft Docs"}]},{"pos":[553,567],"content":"&lt;thread&gt;","linkify":"&lt;thread&gt;","nodes":[{"content":"<ph id=\"ph1\">&amp;lt;</ph>thread<ph id=\"ph2\">&amp;gt;</ph>","pos":[0,14],"source":"&lt;thread&gt;"}]},{"pos":[568,668],"content":"Include the standard header <ph id=\"ph1\">\\&lt;</ph>thread&gt; to define the class <ph id=\"ph2\">`thread`</ph> and various supporting functions.","source":"Include the standard header \\<thread> to define the class `thread` and various supporting functions."},{"pos":[677,683],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[730,737],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[745,840],"content":"[!NOTE]\n In code that is compiled by using **/clr** or **/clr:pure**, this header is blocked.","leadings":["","> "],"nodes":[{"content":"In code that is compiled by using <bpt id=\"p1\">**</bpt>/clr<ept id=\"p1\">**</ept> or <bpt id=\"p2\">**</bpt>/clr:pure<ept id=\"p2\">**</ept>, this header is blocked.","pos":[9,93],"source":" In code that is compiled by using **/clr** or **/clr:pure**, this header is blocked."}]},{"pos":[847,962],"content":"The <ph id=\"ph1\">`__STDCPP_THREADS__`</ph> macro is defined as a nonzero value to indicate that threads are supported by this header.","source":"The `__STDCPP_THREADS__` macro is defined as a nonzero value to indicate that threads are supported by this header."},{"pos":[971,978],"content":"Members","linkify":"Members","nodes":[{"content":"Members","pos":[0,7]}]},{"pos":[988,1002],"content":"Public Classes","linkify":"Public Classes","nodes":[{"content":"Public Classes","pos":[0,14]}]},{"content":"Name","pos":[1009,1013]},{"content":"Description","pos":[1014,1025]},{"pos":[1063,1114],"content":"<bpt id=\"p1\">[</bpt>thread Class<ept id=\"p1\">](../standard-library/thread-class.md)</ept>","source":"[thread Class](../standard-library/thread-class.md)"},{"content":"Defines an object that is used to observe and manage a thread of execution in an application.","pos":[1115,1208]},{"pos":[1219,1236],"content":"Public Structures","linkify":"Public Structures","nodes":[{"content":"Public Structures","pos":[0,17]}]},{"content":"Name","pos":[1243,1247]},{"content":"Description","pos":[1248,1259]},{"pos":[1297,1362],"content":"<bpt id=\"p1\">[</bpt>hash Structure (STL)<ept id=\"p1\">](../standard-library/hash-structure-stl.md)</ept>","source":"[hash Structure (STL)](../standard-library/hash-structure-stl.md)"},{"content":"Defines a member function that returns a value that is uniquely determined by a <ph id=\"ph1\">`thread::id`</ph>.","pos":[1363,1456],"source":"Defines a member function that returns a value that is uniquely determined by a `thread::id`."},{"content":"The member function defines a <bpt id=\"p1\">[</bpt>hash<ept id=\"p1\">](../standard-library/hash-class.md)</ept> function that is suitable for mapping values of type <ph id=\"ph1\">`thread::id`</ph> to a distribution of index values.","pos":[1457,1629],"source":" The member function defines a [hash](../standard-library/hash-class.md) function that is suitable for mapping values of type `thread::id` to a distribution of index values."},{"pos":[1640,1656],"content":"Public Functions","linkify":"Public Functions","nodes":[{"content":"Public Functions","pos":[0,16]}]},{"content":"Name","pos":[1663,1667]},{"content":"Description","pos":[1668,1679]},{"pos":[1717,1791],"content":"<bpt id=\"p1\">[</bpt>get_id Function<ept id=\"p1\">](../standard-library/thread-functions.md#get_id_function)</ept>","source":"[get_id Function](../standard-library/thread-functions.md#get_id_function)"},{"content":"Uniquely identifies the current thread of execution.","pos":[1792,1844]},{"pos":[1849,1929],"content":"<bpt id=\"p1\">[</bpt>sleep_for Function<ept id=\"p1\">](../standard-library/thread-functions.md#sleep_for_function)</ept>","source":"[sleep_for Function](../standard-library/thread-functions.md#sleep_for_function)"},{"content":"Blocks the calling thread.","pos":[1930,1956]},{"pos":[1961,2045],"content":"<bpt id=\"p1\">[</bpt>sleep_until Function<ept id=\"p1\">](../standard-library/thread-functions.md#sleep_until_function)</ept>","source":"[sleep_until Function](../standard-library/thread-functions.md#sleep_until_function)"},{"content":"Blocks the calling thread at least until the specified time.","pos":[2046,2106]},{"pos":[2111,2181],"content":"<bpt id=\"p1\">[</bpt>swap Function<ept id=\"p1\">](../standard-library/thread-functions.md#swap_function)</ept>","source":"[swap Function](../standard-library/thread-functions.md#swap_function)"},{"pos":[2182,2227],"content":"Exchanges the states of two <ph id=\"ph1\">`thread`</ph> objects.","source":"Exchanges the states of two `thread` objects."},{"pos":[2232,2304],"content":"<bpt id=\"p1\">[</bpt>yield Function<ept id=\"p1\">](../standard-library/thread-functions.md#yield_function)</ept>","source":"[yield Function](../standard-library/thread-functions.md#yield_function)"},{"content":"Signals the operating system to run other threads, even if the current thread would ordinarily continue to run.","pos":[2305,2416]},{"pos":[2427,2443],"content":"Public Operators","linkify":"Public Operators","nodes":[{"content":"Public Operators","pos":[0,16]}]},{"content":"Name","pos":[2450,2454]},{"content":"Description","pos":[2455,2466]},{"pos":[2504,2582],"content":"<bpt id=\"p1\">[</bpt>operator&gt;= Operator<ept id=\"p1\">](../standard-library/thread-operators.md#operator_gt__eq)</ept>","source":"[operator>= Operator](../standard-library/thread-operators.md#operator_gt__eq)"},{"pos":[2583,2662],"content":"Determines whether one <ph id=\"ph1\">`thread::id`</ph> object is greater than or equal to another.","source":"Determines whether one `thread::id` object is greater than or equal to another."},{"pos":[2667,2741],"content":"<bpt id=\"p1\">[</bpt>operator&gt; Operator<ept id=\"p1\">](../standard-library/thread-operators.md#operator_gt_)</ept>","source":"[operator> Operator](../standard-library/thread-operators.md#operator_gt_)"},{"pos":[2742,2809],"content":"Determines whether one <ph id=\"ph1\">`thread::id`</ph> object is greater than another.","source":"Determines whether one `thread::id` object is greater than another."},{"pos":[2814,2892],"content":"<bpt id=\"p1\">[</bpt>operator&lt;= Operator<ept id=\"p1\">](../standard-library/thread-operators.md#operator_lt__eq)</ept>","source":"[operator<= Operator](../standard-library/thread-operators.md#operator_lt__eq)"},{"pos":[2893,2969],"content":"Determines whether one <ph id=\"ph1\">`thread::id`</ph> object is less than or equal to another.","source":"Determines whether one `thread::id` object is less than or equal to another."},{"pos":[2974,3048],"content":"<bpt id=\"p1\">[</bpt>operator&lt; Operator<ept id=\"p1\">](../standard-library/thread-operators.md#operator_lt_)</ept>","source":"[operator< Operator](../standard-library/thread-operators.md#operator_lt_)"},{"pos":[3049,3113],"content":"Determines whether one <ph id=\"ph1\">`thread::id`</ph> object is less than another.","source":"Determines whether one `thread::id` object is less than another."},{"pos":[3118,3193],"content":"<bpt id=\"p1\">[</bpt>operator!= Operator<ept id=\"p1\">](../standard-library/thread-operators.md#operator_neq)</ept>","source":"[operator!= Operator](../standard-library/thread-operators.md#operator_neq)"},{"pos":[3194,3243],"content":"Compares two <ph id=\"ph1\">`thread::id`</ph> objects for inequality.","source":"Compares two `thread::id` objects for inequality."},{"pos":[3248,3325],"content":"<bpt id=\"p1\">[</bpt>operator== Operator<ept id=\"p1\">](../standard-library/thread-operators.md#operator_eq_eq)</ept>","source":"[operator== Operator](../standard-library/thread-operators.md#operator_eq_eq)"},{"pos":[3326,3373],"content":"Compares two <ph id=\"ph1\">`thread::id`</ph> objects for equality.","source":"Compares two `thread::id` objects for equality."},{"pos":[3378,3457],"content":"<bpt id=\"p1\">[</bpt>operator&lt;&lt; Operator<ept id=\"p1\">](../standard-library/thread-operators.md#operator_lt__lt_)</ept>","source":"[operator<< Operator](../standard-library/thread-operators.md#operator_lt__lt_)"},{"pos":[3458,3527],"content":"Inserts a text representation of a <ph id=\"ph1\">`thread::id`</ph> object into a stream.","source":"Inserts a text representation of a `thread::id` object into a stream."},{"pos":[3537,3545],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Header Files Reference<ept id=\"p1\">](../standard-library/cpp-standard-library-header-files.md)</ept><ph id=\"ph1\"> </ph>","pos":[3549,3632],"source":"[Header Files Reference](../standard-library/cpp-standard-library-header-files.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Thread Safety in the C++ Standard Library<ept id=\"p1\">](../standard-library/thread-safety-in-the-cpp-standard-library.md)</ept>","pos":[3635,3745],"source":" [Thread Safety in the C++ Standard Library](../standard-library/thread-safety-in-the-cpp-standard-library.md)"}],"content":"---\ntitle: \"&lt;thread&gt; | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"<thread>\"\ndev_langs: \n  - \"C++\"\nms.assetid: 0c858405-4efb-449d-bf76-70d3693c9234\ncaps.latest.revision: 18\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# &lt;thread&gt;\nInclude the standard header \\<thread> to define the class `thread` and various supporting functions.  \n  \n## Syntax  \n  \n```cpp  \n#include <thread>  \n```  \n  \n## Remarks  \n  \n> [!NOTE]\n>  In code that is compiled by using **/clr** or **/clr:pure**, this header is blocked.  \n  \n The `__STDCPP_THREADS__` macro is defined as a nonzero value to indicate that threads are supported by this header.  \n  \n## Members  \n  \n### Public Classes  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[thread Class](../standard-library/thread-class.md)|Defines an object that is used to observe and manage a thread of execution in an application.|  \n  \n### Public Structures  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[hash Structure (STL)](../standard-library/hash-structure-stl.md)|Defines a member function that returns a value that is uniquely determined by a `thread::id`. The member function defines a [hash](../standard-library/hash-class.md) function that is suitable for mapping values of type `thread::id` to a distribution of index values.|  \n  \n### Public Functions  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[get_id Function](../standard-library/thread-functions.md#get_id_function)|Uniquely identifies the current thread of execution.|  \n|[sleep_for Function](../standard-library/thread-functions.md#sleep_for_function)|Blocks the calling thread.|  \n|[sleep_until Function](../standard-library/thread-functions.md#sleep_until_function)|Blocks the calling thread at least until the specified time.|  \n|[swap Function](../standard-library/thread-functions.md#swap_function)|Exchanges the states of two `thread` objects.|  \n|[yield Function](../standard-library/thread-functions.md#yield_function)|Signals the operating system to run other threads, even if the current thread would ordinarily continue to run.|  \n  \n### Public Operators  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[operator>= Operator](../standard-library/thread-operators.md#operator_gt__eq)|Determines whether one `thread::id` object is greater than or equal to another.|  \n|[operator> Operator](../standard-library/thread-operators.md#operator_gt_)|Determines whether one `thread::id` object is greater than another.|  \n|[operator<= Operator](../standard-library/thread-operators.md#operator_lt__eq)|Determines whether one `thread::id` object is less than or equal to another.|  \n|[operator< Operator](../standard-library/thread-operators.md#operator_lt_)|Determines whether one `thread::id` object is less than another.|  \n|[operator!= Operator](../standard-library/thread-operators.md#operator_neq)|Compares two `thread::id` objects for inequality.|  \n|[operator== Operator](../standard-library/thread-operators.md#operator_eq_eq)|Compares two `thread::id` objects for equality.|  \n|[operator<< Operator](../standard-library/thread-operators.md#operator_lt__lt_)|Inserts a text representation of a `thread::id` object into a stream.|  \n  \n## See Also  \n [Header Files Reference](../standard-library/cpp-standard-library-header-files.md)   \n [Thread Safety in the C++ Standard Library](../standard-library/thread-safety-in-the-cpp-standard-library.md)\n\n"}