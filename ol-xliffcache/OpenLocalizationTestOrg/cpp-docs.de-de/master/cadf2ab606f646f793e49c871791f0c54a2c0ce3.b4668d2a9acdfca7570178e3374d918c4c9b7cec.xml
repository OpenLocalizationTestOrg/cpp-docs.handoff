{"nodes":[{"pos":[12,64],"content":"-Gy (Enable Function-Level Linking) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"-Gy (Enable Function-Level Linking) | Microsoft Docs","pos":[0,52]}]},{"content":"/Gy (Enable Function-Level Linking)","pos":[916,951]},{"content":"Allows the compiler to package individual functions in the form of packaged functions (COMDATs).","pos":[952,1048]},{"content":"Syntax","pos":[1057,1063]},{"content":"Remarks","pos":[1096,1103]},{"content":"The linker requires that functions be packaged separately as COMDATs to exclude or order individual functions in a DLL or .exe file.","pos":[1107,1239]},{"pos":[1246,1405],"content":"You can use the linker option <bpt id=\"p1\">[</bpt>/OPT (Optimizations)<ept id=\"p1\">](../../build/reference/opt-optimizations.md)</ept> to exclude unreferenced packaged functions from the .exe file.","source":"You can use the linker option [/OPT (Optimizations)](../../build/reference/opt-optimizations.md) to exclude unreferenced packaged functions from the .exe file."},{"pos":[1412,1599],"content":"You can use the linker option <bpt id=\"p1\">[</bpt>/ORDER (Put Functions in Order)<ept id=\"p1\">](../../build/reference/order-put-functions-in-order.md)</ept> to include packaged functions in a specified order in the .exe file.","source":"You can use the linker option [/ORDER (Put Functions in Order)](../../build/reference/order-put-functions-in-order.md) to include packaged functions in a specified order in the .exe file."},{"content":"Inline functions are always packaged if they are instantiated as calls (which occurs, for example, if inlining is off or you take a function address).","pos":[1606,1756]},{"content":"In addition, C++ member functions defined in the class declaration are automatically packaged; other functions are not, and selecting this option is required to compile them as packaged functions.","pos":[1757,1953]},{"pos":[1961,2116],"content":"[!NOTE]\n The [/ZI](../../build/reference/z7-zi-zi-debug-information-format.md) option, used for Edit and Continue, automatically sets the **/Gy** option.","leadings":["","> "],"nodes":[{"content":"The <bpt id=\"p1\">[</bpt>/ZI<ept id=\"p1\">](../../build/reference/z7-zi-zi-debug-information-format.md)</ept> option, used for Edit and Continue, automatically sets the <bpt id=\"p2\">**</bpt>/Gy<ept id=\"p2\">**</ept> option.","pos":[9,153],"source":" The [/ZI](../../build/reference/z7-zi-zi-debug-information-format.md) option, used for Edit and Continue, automatically sets the **/Gy** option."}]},{"content":"To set this compiler option in the Visual Studio development environment","pos":[2126,2198]},{"content":"Open the project's <bpt id=\"p1\">**</bpt>Property Pages<ept id=\"p1\">**</ept> dialog box.","pos":[2208,2257],"source":"Open the project's **Property Pages** dialog box."},{"content":"For details, see <bpt id=\"p1\">[</bpt>Working with Project Properties<ept id=\"p1\">](../../ide/working-with-project-properties.md)</ept>.","pos":[2258,2355],"source":" For details, see [Working with Project Properties](../../ide/working-with-project-properties.md)."},{"pos":[2365,2392],"content":"Click the <bpt id=\"p1\">**</bpt>C/C++<ept id=\"p1\">**</ept> folder.","source":"Click the **C/C++** folder."},{"pos":[2402,2446],"content":"Click the <bpt id=\"p1\">**</bpt>Code Generation<ept id=\"p1\">**</ept> property page.","source":"Click the **Code Generation** property page."},{"pos":[2456,2510],"content":"Modify the <bpt id=\"p1\">**</bpt>Enable Function-Level Linking<ept id=\"p1\">**</ept> property.","source":"Modify the **Enable Function-Level Linking** property."},{"content":"To set this compiler option programmatically","pos":[2520,2564]},{"content":"See &lt;xref:Microsoft.VisualStudio.VCProjectEngine.VCCLCompilerTool.EnableFunctionLevelLinking%2A&gt;.","pos":[2574,2671],"source":"See <xref:Microsoft.VisualStudio.VCProjectEngine.VCCLCompilerTool.EnableFunctionLevelLinking%2A>."},{"content":"See Also","pos":[2680,2688]},{"content":"Compiler Options","pos":[2693,2709]},{"content":"Setting Compiler Options","pos":[2759,2783]}],"content":"---\ntitle: \"-Gy (Enable Function-Level Linking) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"VC.Project.VCCLCompilerTool.EnableFunctionLevelLinking\"\n  - \"/gy\"\n  - \"VC.Project.VCCLWCECompilerTool.EnableFunctionLevelLinking\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"enable function-level linking compiler option [C++]\"\n  - \"COMDAT function\"\n  - \"Gy compiler option [C++]\"\n  - \"-Gy compiler option [C++]\"\n  - \"/Gy compiler option [C++]\"\n  - \"packaged functions\"\nms.assetid: 0d3cf14c-ed7d-4ad3-b4b6-104e56f61046\ncaps.latest.revision: 17\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# /Gy (Enable Function-Level Linking)\nAllows the compiler to package individual functions in the form of packaged functions (COMDATs).  \n  \n## Syntax  \n  \n```  \n/Gy[-]  \n```  \n  \n## Remarks  \n The linker requires that functions be packaged separately as COMDATs to exclude or order individual functions in a DLL or .exe file.  \n  \n You can use the linker option [/OPT (Optimizations)](../../build/reference/opt-optimizations.md) to exclude unreferenced packaged functions from the .exe file.  \n  \n You can use the linker option [/ORDER (Put Functions in Order)](../../build/reference/order-put-functions-in-order.md) to include packaged functions in a specified order in the .exe file.  \n  \n Inline functions are always packaged if they are instantiated as calls (which occurs, for example, if inlining is off or you take a function address). In addition, C++ member functions defined in the class declaration are automatically packaged; other functions are not, and selecting this option is required to compile them as packaged functions.  \n  \n> [!NOTE]\n>  The [/ZI](../../build/reference/z7-zi-zi-debug-information-format.md) option, used for Edit and Continue, automatically sets the **/Gy** option.  \n  \n### To set this compiler option in the Visual Studio development environment  \n  \n1.  Open the project's **Property Pages** dialog box. For details, see [Working with Project Properties](../../ide/working-with-project-properties.md).  \n  \n2.  Click the **C/C++** folder.  \n  \n3.  Click the **Code Generation** property page.  \n  \n4.  Modify the **Enable Function-Level Linking** property.  \n  \n### To set this compiler option programmatically  \n  \n-   See <xref:Microsoft.VisualStudio.VCProjectEngine.VCCLCompilerTool.EnableFunctionLevelLinking%2A>.  \n  \n## See Also  \n [Compiler Options](../../build/reference/compiler-options.md)   \n [Setting Compiler Options](../../build/reference/setting-compiler-options.md)"}