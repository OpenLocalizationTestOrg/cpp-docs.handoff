{"nodes":[{"pos":[12,45],"content":"CComModule Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"CComModule Class | Microsoft Docs","pos":[0,33]}]},{"content":"CComModule Class","pos":[633,649]},{"pos":[650,768],"content":"As of ATL 7.0, <ph id=\"ph1\">`CComModule`</ph> is deprecated: see <bpt id=\"p1\">[</bpt>ATL Module Classes<ept id=\"p1\">](../../atl/atl-module-classes.md)</ept> for more details.","source":"As of ATL 7.0, `CComModule` is deprecated: see [ATL Module Classes](../../atl/atl-module-classes.md) for more details."},{"pos":[776,886],"content":"[!IMPORTANT]\n This class and its members cannot be used in applications that execute in the Windows Runtime.","leadings":["","> "],"nodes":[{"content":"This class and its members cannot be used in applications that execute in the Windows Runtime.","pos":[14,108]}]},{"content":"Syntax","pos":[895,901]},{"content":"Members","pos":[961,968]},{"content":"Public Methods","pos":[978,992]},{"content":"Name","pos":[999,1003]},{"content":"Description","pos":[1004,1015]},{"content":"CComModule::GetClassObject","pos":[1054,1080]},{"content":"Creates an object of a specified CLSID.","pos":[1111,1150]},{"content":"For DLLs only.","pos":[1151,1165]},{"content":"CComModule::GetModuleInstance","pos":[1171,1200]},{"pos":[1234,1252],"content":"Returns <ph id=\"ph1\">`m_hInst`</ph>.","source":"Returns `m_hInst`."},{"content":"CComModule::GetResourceInstance","pos":[1258,1289]},{"pos":[1325,1351],"content":"Returns <ph id=\"ph1\">`m_hInstResource`</ph>.","source":"Returns `m_hInstResource`."},{"content":"CComModule::GetTypeLibInstance","pos":[1357,1387]},{"pos":[1422,1447],"content":"Returns <ph id=\"ph1\">`m_hInstTypeLib`</ph>.","source":"Returns `m_hInstTypeLib`."},{"content":"CComModule::Init","pos":[1453,1469]},{"content":"Initializes data members.","pos":[1490,1515]},{"content":"CComModule::RegisterClassHelper","pos":[1521,1552]},{"content":"Enters an object's standard class registration in the system registry.","pos":[1588,1658]},{"content":"CComModule::RegisterClassObjects","pos":[1664,1696]},{"content":"Registers the class object.","pos":[1733,1760]},{"content":"For EXEs only.","pos":[1761,1775]},{"content":"CComModule::RegisterServer","pos":[1781,1807]},{"content":"Updates the system registry for each object in the object map.","pos":[1838,1900]},{"content":"CComModule::RegisterTypeLib","pos":[1906,1933]},{"content":"Registers a type library.","pos":[1965,1990]},{"content":"CComModule::RevokeClassObjects","pos":[1996,2026]},{"content":"Revokes the class object.","pos":[2061,2086]},{"content":"For EXEs only.","pos":[2087,2101]},{"content":"CComModule::Term","pos":[2107,2123]},{"content":"Releases data members.","pos":[2144,2166]},{"content":"CComModule::UnregisterClassHelper","pos":[2172,2205]},{"content":"Removes an object's standard class registration from the system registry.","pos":[2243,2316]},{"content":"CComModule::UnregisterServer","pos":[2322,2350]},{"content":"Unregisters each object in the object map.","pos":[2383,2425]},{"content":"CComModule::UpdateRegistryClass","pos":[2431,2462]},{"content":"Registers or unregisters an object's standard class registration.","pos":[2498,2563]},{"content":"CComModule::UpdateRegistryFromResourceD","pos":[2569,2608]},{"content":"Runs the script contained in a specified resource to register or unregister an object.","pos":[2652,2738]},{"content":"CComModule::UpdateRegistryFromResourceS","pos":[2744,2783]},{"content":"Statically links to the ATL Registry Component.","pos":[2827,2874]},{"content":"Runs the script contained in a specified resource to register or unregister an object.","pos":[2875,2961]},{"content":"Public Data Members","pos":[2972,2991]},{"content":"Name","pos":[2998,3002]},{"content":"Description","pos":[3003,3014]},{"content":"CComModule::m_csObjMap","pos":[3053,3075]},{"content":"Ensures synchronized access to the object map information.","pos":[3102,3160]},{"content":"CComModule::m_csTypeInfoHolder","pos":[3166,3196]},{"content":"Ensures synchronized access to the type library information.","pos":[3231,3291]},{"content":"CComModule::m_csWindowCreate","pos":[3297,3325]},{"content":"Ensures synchronized access to window class information and static data used during window creation.","pos":[3358,3458]},{"content":"CComModule::m_hInst","pos":[3464,3483]},{"content":"Contains the handle to the module instance.","pos":[3507,3550]},{"content":"CComModule::m_hInstResource","pos":[3556,3583]},{"content":"By default, contains the handle to the module instance.","pos":[3615,3670]},{"content":"CComModule::m_hInstTypeLib","pos":[3676,3702]},{"content":"By default, contains the handle to the module instance.","pos":[3733,3788]},{"content":"CComModule::m_pObjMap","pos":[3794,3815]},{"content":"Points to the object map maintained by the module instance.","pos":[3841,3900]},{"content":"Remarks","pos":[3910,3917]},{"pos":[3925,4392],"content":"[!NOTE]\n This class is deprecated, and the ATL code generation wizards now use the [CAtlAutoThreadModule](../../atl/reference/catlautothreadmodule-class.md) and [CAtlModule](../../atl/reference/catlmodule-class.md) derived classes. See [ATL Module Classes](../../atl/atl-module-classes.md) for more information. The information that follows is for use with applications created with older releases of ATL. `CComModule` is still part of ATL for backwards capability.","leadings":["","> "],"nodes":[{"content":" This class is deprecated, and the ATL code generation wizards now use the [CAtlAutoThreadModule](../../atl/reference/catlautothreadmodule-class.md) and [CAtlModule](../../atl/reference/catlmodule-class.md) derived classes. See [ATL Module Classes](../../atl/atl-module-classes.md) for more information. The information that follows is for use with applications created with older releases of ATL. `CComModule` is still part of ATL for backwards capability.","pos":[8,465],"nodes":[{"content":"This class is deprecated, and the ATL code generation wizards now use the <bpt id=\"p1\">[</bpt>CAtlAutoThreadModule<ept id=\"p1\">](../../atl/reference/catlautothreadmodule-class.md)</ept> and <bpt id=\"p2\">[</bpt>CAtlModule<ept id=\"p2\">](../../atl/reference/catlmodule-class.md)</ept> derived classes.","pos":[1,223],"source":" This class is deprecated, and the ATL code generation wizards now use the [CAtlAutoThreadModule](../../atl/reference/catlautothreadmodule-class.md) and [CAtlModule](../../atl/reference/catlmodule-class.md) derived classes."},{"content":"See <bpt id=\"p1\">[</bpt>ATL Module Classes<ept id=\"p1\">](../../atl/atl-module-classes.md)</ept> for more information.","pos":[224,303],"source":" See [ATL Module Classes](../../atl/atl-module-classes.md) for more information."},{"content":"The information that follows is for use with applications created with older releases of ATL.","pos":[304,397]},{"content":"is still part of ATL for backwards capability.","pos":[411,457]}]}]},{"content":"implements a COM server module, allowing a client to access the module's components.","pos":[4412,4496]},{"content":"supports both DLL (in-process) and EXE (local) modules.","pos":[4510,4565]},{"content":"A <ph id=\"ph1\">`CComModule`</ph> instance uses an object map to maintain a set of class object definitions.","pos":[4572,4661],"source":"A `CComModule` instance uses an object map to maintain a set of class object definitions."},{"content":"This object map is implemented as an array of <ph id=\"ph1\">`_ATL_OBJMAP_ENTRY`</ph> structures, and contains information for:","pos":[4662,4769],"source":" This object map is implemented as an array of `_ATL_OBJMAP_ENTRY` structures, and contains information for:"},{"content":"Entering and removing object descriptions in the system registry.","pos":[4779,4844]},{"content":"Instantiating objects through a class factory.","pos":[4854,4900]},{"content":"Establishing communication between a client and the root object in the component.","pos":[4910,4991]},{"content":"Performing lifetime management of class objects.","pos":[5001,5049]},{"content":"When you run the ATL COM AppWizard, the wizard automatically generates <ph id=\"ph1\">`_Module`</ph>, a global instance of <ph id=\"ph2\">`CComModule`</ph> or a class derived from it.","pos":[5056,5199],"source":"When you run the ATL COM AppWizard, the wizard automatically generates `_Module`, a global instance of `CComModule` or a class derived from it."},{"content":"For more information about the ATL Project Wizard, see the article <bpt id=\"p1\">[</bpt>Creating an ATL Project<ept id=\"p1\">](../../atl/reference/creating-an-atl-project.md)</ept>.","pos":[5200,5341],"source":" For more information about the ATL Project Wizard, see the article [Creating an ATL Project](../../atl/reference/creating-an-atl-project.md)."},{"content":"In addition to <ph id=\"ph1\">`CComModule`</ph>, ATL provides <bpt id=\"p1\">[</bpt>CComAutoThreadModule<ept id=\"p1\">](../../atl/reference/ccomautothreadmodule-class.md)</ept>, which implements an apartment-model module for EXEs and Windows services.","pos":[5348,5538],"source":"In addition to `CComModule`, ATL provides [CComAutoThreadModule](../../atl/reference/ccomautothreadmodule-class.md), which implements an apartment-model module for EXEs and Windows services."},{"content":"Derive your module from <ph id=\"ph1\">`CComAutoThreadModule`</ph> when you want to create objects in multiple apartments.","pos":[5539,5641],"source":" Derive your module from `CComAutoThreadModule` when you want to create objects in multiple apartments."},{"content":"Inheritance Hierarchy","pos":[5650,5671]},{"content":"_ATL_MODULE","pos":[5676,5687]},{"content":"CAtlModule","pos":[5725,5735]},{"content":"CAtlModuleT","pos":[5785,5796]},{"content":"Requirements","pos":[5867,5879]},{"pos":[5893,5902],"content":"atlbase.h"},{"pos":[5955,5981],"content":"CComModule::GetClassObject"},{"pos":[5985,6101],"content":"As of ATL 7.0, <ph id=\"ph1\">`CComModule`</ph> is obsolete: see <bpt id=\"p1\">[</bpt>ATL Module Classes<ept id=\"p1\">](../../atl/atl-module-classes.md)</ept> for more details.","source":"As of ATL 7.0, `CComModule` is obsolete: see [ATL Module Classes](../../atl/atl-module-classes.md) for more details."},{"content":"Parameters","pos":[6207,6217]},{"content":"[in] The CLSID of the object to be created.","pos":[6233,6276]},{"content":"[in] The IID of the requested interface.","pos":[6293,6333]},{"content":"[out] A pointer to the interface pointer identified by <ph id=\"ph1\">`riid`</ph>.","pos":[6349,6411],"source":" [out] A pointer to the interface pointer identified by `riid`."},{"content":"If the object does not support this interface, <ph id=\"ph1\">`ppv`</ph> is set to <bpt id=\"p1\">**</bpt>NULL<ept id=\"p1\">**</ept>.","pos":[6412,6484],"source":" If the object does not support this interface, `ppv` is set to **NULL**."},{"content":"Return Value","pos":[6494,6506]},{"content":"A standard HRESULT value.","pos":[6510,6535]},{"content":"Remarks","pos":[6545,6552]},{"content":"Creates an object of the specified CLSID and retrieves an interface pointer to this object.","pos":[6556,6647]},{"pos":[6671,6697],"content":"is only available to DLLs."},{"pos":[6753,6782],"content":"CComModule::GetModuleInstance"},{"pos":[6786,6902],"content":"As of ATL 7.0, <ph id=\"ph1\">`CComModule`</ph> is obsolete: see <bpt id=\"p1\">[</bpt>ATL Module Classes<ept id=\"p1\">](../../atl/atl-module-classes.md)</ept> for more details.","source":"As of ATL 7.0, `CComModule` is obsolete: see [ATL Module Classes](../../atl/atl-module-classes.md) for more details."},{"content":"Return Value","pos":[6964,6976]},{"pos":[6980,7020],"content":"The <ph id=\"ph1\">`HINSTANCE`</ph> identifying this module.","source":"The `HINSTANCE` identifying this module."},{"content":"Remarks","pos":[7030,7037]},{"pos":[7041,7097],"content":"Returns the <bpt id=\"p1\">[</bpt>m_hInst<ept id=\"p1\">](#ccommodule__m_hinst)</ept> data member.","source":"Returns the [m_hInst](#ccommodule__m_hinst) data member."},{"pos":[7155,7186],"content":"CComModule::GetResourceInstance"},{"pos":[7190,7306],"content":"As of ATL 7.0, <ph id=\"ph1\">`CComModule`</ph> is obsolete: see <bpt id=\"p1\">[</bpt>ATL Module Classes<ept id=\"p1\">](../../atl/atl-module-classes.md)</ept> for more details.","source":"As of ATL 7.0, `CComModule` is obsolete: see [ATL Module Classes](../../atl/atl-module-classes.md) for more details."},{"content":"Return Value","pos":[7370,7382]},{"pos":[7386,7401],"content":"An <ph id=\"ph1\">`HINSTANCE`</ph>.","source":"An `HINSTANCE`."},{"content":"Remarks","pos":[7411,7418]},{"pos":[7422,7494],"content":"Returns the <bpt id=\"p1\">[</bpt>m_hInstResource<ept id=\"p1\">](#ccommodule__m_hinstresource)</ept> data member.","source":"Returns the [m_hInstResource](#ccommodule__m_hinstresource) data member."},{"pos":[7551,7581],"content":"CComModule::GetTypeLibInstance"},{"pos":[7585,7701],"content":"As of ATL 7.0, <ph id=\"ph1\">`CComModule`</ph> is obsolete: see <bpt id=\"p1\">[</bpt>ATL Module Classes<ept id=\"p1\">](../../atl/atl-module-classes.md)</ept> for more details.","source":"As of ATL 7.0, `CComModule` is obsolete: see [ATL Module Classes](../../atl/atl-module-classes.md) for more details."},{"content":"Return Value","pos":[7770,7782]},{"pos":[7786,7801],"content":"An <ph id=\"ph1\">`HINSTANCE`</ph>.","source":"An `HINSTANCE`."},{"content":"Remarks","pos":[7811,7818]},{"pos":[7822,7892],"content":"Returns the <bpt id=\"p1\">[</bpt>m_hInstTypeLib<ept id=\"p1\">](#ccommodule__m_hinsttypelib)</ept> data member.","source":"Returns the [m_hInstTypeLib](#ccommodule__m_hinsttypelib) data member."},{"pos":[7935,7951],"content":"CComModule::Init"},{"pos":[7955,8071],"content":"As of ATL 7.0, <ph id=\"ph1\">`CComModule`</ph> is obsolete: see <bpt id=\"p1\">[</bpt>ATL Module Classes<ept id=\"p1\">](../../atl/atl-module-classes.md)</ept> for more details.","source":"As of ATL 7.0, `CComModule` is obsolete: see [ATL Module Classes](../../atl/atl-module-classes.md) for more details."},{"content":"Parameters","pos":[8191,8201]},{"content":"[in] A pointer to an array of object map entries.","pos":[8212,8261]},{"content":"[in] The <ph id=\"ph1\">`HINSTANCE`</ph> passed to <bpt id=\"p1\">**</bpt>DLLMain<ept id=\"p1\">**</ept> or <ph id=\"ph2\">`WinMain`</ph>.","pos":[8275,8331],"source":" [in] The `HINSTANCE` passed to **DLLMain** or `WinMain`."},{"content":"[in] A pointer to the LIBID of the type library associated with the project.","pos":[8350,8426]},{"content":"Return Value","pos":[8436,8448]},{"content":"A standard HRESULT value.","pos":[8452,8477]},{"content":"Remarks","pos":[8487,8494]},{"content":"Initializes all data members.","pos":[8498,8527]},{"pos":[8576,8598],"content":"CComModule::m_csObjMap"},{"pos":[8602,8718],"content":"As of ATL 7.0, <ph id=\"ph1\">`CComModule`</ph> is obsolete: see <bpt id=\"p1\">[</bpt>ATL Module Classes<ept id=\"p1\">](../../atl/atl-module-classes.md)</ept> for more details.","source":"As of ATL 7.0, `CComModule` is obsolete: see [ATL Module Classes](../../atl/atl-module-classes.md) for more details."},{"content":"Remarks","pos":[8770,8777]},{"content":"Ensures synchronized access to the object map.","pos":[8781,8827]},{"pos":[8884,8914],"content":"CComModule::m_csTypeInfoHolder"},{"pos":[8918,9034],"content":"As of ATL 7.0, <ph id=\"ph1\">`CComModule`</ph> is obsolete: see <bpt id=\"p1\">[</bpt>ATL Module Classes<ept id=\"p1\">](../../atl/atl-module-classes.md)</ept> for more details.","source":"As of ATL 7.0, `CComModule` is obsolete: see [ATL Module Classes](../../atl/atl-module-classes.md) for more details."},{"content":"Remarks","pos":[9094,9101]},{"content":"Ensures synchronized access to the type library.","pos":[9105,9153]},{"pos":[9208,9236],"content":"CComModule::m_csWindowCreate"},{"pos":[9240,9356],"content":"As of ATL 7.0, <ph id=\"ph1\">`CComModule`</ph> is obsolete: see <bpt id=\"p1\">[</bpt>ATL Module Classes<ept id=\"p1\">](../../atl/atl-module-classes.md)</ept> for more details.","source":"As of ATL 7.0, `CComModule` is obsolete: see [ATL Module Classes](../../atl/atl-module-classes.md) for more details."},{"content":"Remarks","pos":[9414,9421]},{"content":"Ensures synchronized access to window class information and to static data used during window creation.","pos":[9425,9528]},{"pos":[9574,9593],"content":"CComModule::m_hInst"},{"pos":[9597,9713],"content":"As of ATL 7.0, <ph id=\"ph1\">`CComModule`</ph> is obsolete: see <bpt id=\"p1\">[</bpt>ATL Module Classes<ept id=\"p1\">](../../atl/atl-module-classes.md)</ept> for more details.","source":"As of ATL 7.0, `CComModule` is obsolete: see [ATL Module Classes](../../atl/atl-module-classes.md) for more details."},{"content":"Remarks","pos":[9755,9762]},{"content":"Contains the handle to the module instance.","pos":[9766,9809]},{"pos":[9816,9917],"content":"The <bpt id=\"p1\">[</bpt>Init<ept id=\"p1\">](#ccommodule__init)</ept> method sets <ph id=\"ph1\">`m_hInst`</ph> to the handle passed to <bpt id=\"p2\">**</bpt>DLLMain<ept id=\"p2\">**</ept> or <ph id=\"ph2\">`WinMain`</ph>.","source":"The [Init](#ccommodule__init) method sets `m_hInst` to the handle passed to **DLLMain** or `WinMain`."},{"pos":[9971,9998],"content":"CComModule::m_hInstResource"},{"pos":[10002,10118],"content":"As of ATL 7.0, <ph id=\"ph1\">`CComModule`</ph> is obsolete: see <bpt id=\"p1\">[</bpt>ATL Module Classes<ept id=\"p1\">](../../atl/atl-module-classes.md)</ept> for more details.","source":"As of ATL 7.0, `CComModule` is obsolete: see [ATL Module Classes](../../atl/atl-module-classes.md) for more details."},{"content":"Remarks","pos":[10168,10175]},{"content":"By default, contains the handle to the module instance.","pos":[10179,10234]},{"content":"The <bpt id=\"p1\">[</bpt>Init<ept id=\"p1\">](#ccommodule__init)</ept> method sets <ph id=\"ph1\">`m_hInstResource`</ph> to the handle passed to <bpt id=\"p2\">**</bpt>DLLMain<ept id=\"p2\">**</ept> or <ph id=\"ph2\">`WinMain`</ph>.","pos":[10241,10350],"source":"The [Init](#ccommodule__init) method sets `m_hInstResource` to the handle passed to **DLLMain** or `WinMain`."},{"content":"You can explicitly set <ph id=\"ph1\">`m_hInstResource`</ph> to the handle to a resource.","pos":[10351,10420],"source":" You can explicitly set `m_hInstResource` to the handle to a resource."},{"pos":[10427,10541],"content":"The <bpt id=\"p1\">[</bpt>GetResourceInstance<ept id=\"p1\">](#ccommodule__getresourceinstance)</ept> method returns the handle stored in <ph id=\"ph1\">`m_hInstResource`</ph>.","source":"The [GetResourceInstance](#ccommodule__getresourceinstance) method returns the handle stored in `m_hInstResource`."},{"pos":[10594,10620],"content":"CComModule::m_hInstTypeLib"},{"pos":[10624,10740],"content":"As of ATL 7.0, <ph id=\"ph1\">`CComModule`</ph> is obsolete: see <bpt id=\"p1\">[</bpt>ATL Module Classes<ept id=\"p1\">](../../atl/atl-module-classes.md)</ept> for more details.","source":"As of ATL 7.0, `CComModule` is obsolete: see [ATL Module Classes](../../atl/atl-module-classes.md) for more details."},{"content":"Remarks","pos":[10789,10796]},{"content":"By default, contains the handle to the module instance.","pos":[10800,10855]},{"content":"The <bpt id=\"p1\">[</bpt>Init<ept id=\"p1\">](#ccommodule__init)</ept> method sets <ph id=\"ph1\">`m_hInstTypeLib`</ph> to the handle passed to <bpt id=\"p2\">**</bpt>DLLMain<ept id=\"p2\">**</ept> or <ph id=\"ph2\">`WinMain`</ph>.","pos":[10862,10970],"source":"The [Init](#ccommodule__init) method sets `m_hInstTypeLib` to the handle passed to **DLLMain** or `WinMain`."},{"content":"You can explicitly set <ph id=\"ph1\">`m_hInstTypeLib`</ph> to the handle to a type library.","pos":[10971,11043],"source":" You can explicitly set `m_hInstTypeLib` to the handle to a type library."},{"pos":[11050,11161],"content":"The <bpt id=\"p1\">[</bpt>GetTypeLibInstance<ept id=\"p1\">](#ccommodule__gettypelibinstance)</ept> method returns the handle stored in <ph id=\"ph1\">`m_hInstTypeLib`</ph>.","source":"The [GetTypeLibInstance](#ccommodule__gettypelibinstance) method returns the handle stored in `m_hInstTypeLib`."},{"pos":[11209,11230],"content":"CComModule::m_pObjMap"},{"pos":[11234,11350],"content":"As of ATL 7.0, <ph id=\"ph1\">`CComModule`</ph> is obsolete: see <bpt id=\"p1\">[</bpt>ATL Module Classes<ept id=\"p1\">](../../atl/atl-module-classes.md)</ept> for more details.","source":"As of ATL 7.0, `CComModule` is obsolete: see [ATL Module Classes](../../atl/atl-module-classes.md) for more details."},{"content":"Remarks","pos":[11403,11410]},{"content":"Points to the object map maintained by the module instance.","pos":[11414,11473]},{"pos":[11531,11562],"content":"CComModule::RegisterClassHelper"},{"pos":[11566,11682],"content":"As of ATL 7.0, <ph id=\"ph1\">`CComModule`</ph> is obsolete: see <bpt id=\"p1\">[</bpt>ATL Module Classes<ept id=\"p1\">](../../atl/atl-module-classes.md)</ept> for more details.","source":"As of ATL 7.0, `CComModule` is obsolete: see [ATL Module Classes](../../atl/atl-module-classes.md) for more details."},{"content":"Parameters","pos":[11860,11870]},{"content":"[in] The CLSID of the object to be registered.","pos":[11885,11931]},{"content":"[in] The ProgID associated with the object.","pos":[11954,11997]},{"content":"[in] The version-independent ProgID associated with the object.","pos":[12026,12089]},{"content":"[in] The identifier of a string resource for the object's description.","pos":[12109,12179]},{"content":"[in] Specifies the threading model to enter in the registry.","pos":[12199,12259]},{"content":"Possible values are <bpt id=\"p1\">**</bpt>THREADFLAGS_APARTMENT<ept id=\"p1\">**</ept>, <bpt id=\"p2\">**</bpt>THREADFLAGS_BOTH<ept id=\"p2\">**</ept>, or <bpt id=\"p3\">**</bpt>AUTPRXFLAG<ept id=\"p3\">**</ept>.","pos":[12260,12347],"source":" Possible values are **THREADFLAGS_APARTMENT**, **THREADFLAGS_BOTH**, or **AUTPRXFLAG**."},{"content":"Return Value","pos":[12357,12369]},{"content":"A standard HRESULT value.","pos":[12373,12398]},{"content":"Remarks","pos":[12408,12415]},{"content":"Enters an object's standard class registration in the system registry.","pos":[12419,12489]},{"pos":[12496,12591],"content":"The <bpt id=\"p1\">[</bpt>UpdateRegistryClass<ept id=\"p1\">](#ccommodule__updateregistryclass)</ept> method calls <ph id=\"ph1\">`RegisterClassHelper`</ph>.","source":"The [UpdateRegistryClass](#ccommodule__updateregistryclass) method calls `RegisterClassHelper`."},{"pos":[12650,12682],"content":"CComModule::RegisterClassObjects"},{"pos":[12686,12802],"content":"As of ATL 7.0, <ph id=\"ph1\">`CComModule`</ph> is obsolete: see <bpt id=\"p1\">[</bpt>ATL Module Classes<ept id=\"p1\">](../../atl/atl-module-classes.md)</ept> for more details.","source":"As of ATL 7.0, `CComModule` is obsolete: see [ATL Module Classes](../../atl/atl-module-classes.md) for more details."},{"content":"Parameters","pos":[12899,12909]},{"content":"[in] Specifies the context in which the class object is to be run.","pos":[12931,12997]},{"content":"Possible values are <bpt id=\"p1\">**</bpt>CLSCTX_INPROC_SERVER<ept id=\"p1\">**</ept>, <bpt id=\"p2\">**</bpt>CLSCTX_INPROC_HANDLER<ept id=\"p2\">**</ept>, or <bpt id=\"p3\">**</bpt>CLSCTX_LOCAL_SERVER<ept id=\"p3\">**</ept>.","pos":[12998,13098],"source":" Possible values are **CLSCTX_INPROC_SERVER**, **CLSCTX_INPROC_HANDLER**, or **CLSCTX_LOCAL_SERVER**."},{"content":"For a description of these values, see <bpt id=\"p1\">[</bpt>CLSCTX<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms693716)</ept> in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","pos":[13099,13266],"source":" For a description of these values, see [CLSCTX](http://msdn.microsoft.com/library/windows/desktop/ms693716) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"content":"[in] Determines the connection types to the class object.","pos":[13286,13343]},{"content":"Possible values are <bpt id=\"p1\">**</bpt>REGCLS_SINGLEUSE<ept id=\"p1\">**</ept>, <bpt id=\"p2\">**</bpt>REGCLS_MULTIPLEUSE<ept id=\"p2\">**</ept>, or <bpt id=\"p3\">**</bpt>REGCLS_MULTI_SEPARATE<ept id=\"p3\">**</ept>.","pos":[13344,13439],"source":" Possible values are **REGCLS_SINGLEUSE**, **REGCLS_MULTIPLEUSE**, or **REGCLS_MULTI_SEPARATE**."},{"content":"For a description of these values, see <bpt id=\"p1\">[</bpt>REGCLS<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms679697)</ept> in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","pos":[13440,13607],"source":" For a description of these values, see [REGCLS](http://msdn.microsoft.com/library/windows/desktop/ms679697) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"content":"Return Value","pos":[13617,13629]},{"content":"A standard HRESULT value.","pos":[13633,13658]},{"content":"Remarks","pos":[13668,13675]},{"content":"Registers an EXE class object with OLE so other applications can connect to it.","pos":[13679,13758]},{"content":"This method                        is only available to EXEs.","pos":[13759,13820]},{"pos":[13873,13899],"content":"CComModule::RegisterServer"},{"pos":[13903,14019],"content":"As of ATL 7.0, <ph id=\"ph1\">`CComModule`</ph> is obsolete: see <bpt id=\"p1\">[</bpt>ATL Module Classes<ept id=\"p1\">](../../atl/atl-module-classes.md)</ept> for more details.","source":"As of ATL 7.0, `CComModule` is obsolete: see [ATL Module Classes](../../atl/atl-module-classes.md) for more details."},{"content":"Parameters","pos":[14129,14139]},{"content":"[in] Indicates whether the type library will be registered.","pos":[14160,14219]},{"content":"The default value is <bpt id=\"p1\">**</bpt>FALSE<ept id=\"p1\">**</ept>.","pos":[14220,14251],"source":" The default value is **FALSE**."},{"content":"[in] Points to the CLSID of the object to be registered.","pos":[14270,14326]},{"content":"If <bpt id=\"p1\">**</bpt>NULL<ept id=\"p1\">**</ept> (the default value), all objects in the object map will be registered.","pos":[14327,14409],"source":" If **NULL** (the default value), all objects in the object map will be registered."},{"content":"Return Value","pos":[14419,14431]},{"content":"A standard HRESULT value.","pos":[14435,14460]},{"content":"Remarks","pos":[14470,14477]},{"pos":[14481,14609],"content":"Depending on the <ph id=\"ph1\">`pCLSID`</ph> parameter, updates the system registry for a single class object or for all objects in the object map.","source":"Depending on the `pCLSID` parameter, updates the system registry for a single class object or for all objects in the object map."},{"pos":[14616,14696],"content":"If <ph id=\"ph1\">`bRegTypeLib`</ph> is <bpt id=\"p1\">**</bpt>TRUE<ept id=\"p1\">**</ept>, the type library information will also be updated.","source":"If `bRegTypeLib` is **TRUE**, the type library information will also be updated."},{"pos":[14703,14856],"content":"See <bpt id=\"p1\">[</bpt>OBJECT_ENTRY_AUTO<ept id=\"p1\">](http://msdn.microsoft.com/library/5a0f4fa5-0905-43d2-b337-e22f979c9e4c)</ept> for information on how to add an entry to the object map.","source":"See [OBJECT_ENTRY_AUTO](http://msdn.microsoft.com/library/5a0f4fa5-0905-43d2-b337-e22f979c9e4c) for information on how to add an entry to the object map."},{"pos":[14880,15019],"content":"will be called automatically by <bpt id=\"p1\">**</bpt>DLLRegisterServer<ept id=\"p1\">**</ept> for a DLL or by <ph id=\"ph1\">`WinMain`</ph> for an EXE run with the <bpt id=\"p2\">**</bpt>/RegServer<ept id=\"p2\">**</ept> command line option.","source":" will be called automatically by **DLLRegisterServer** for a DLL or by `WinMain` for an EXE run with the **/RegServer** command line option."},{"pos":[15073,15100],"content":"CComModule::RegisterTypeLib"},{"pos":[15104,15220],"content":"As of ATL 7.0, <ph id=\"ph1\">`CComModule`</ph> is obsolete: see <bpt id=\"p1\">[</bpt>ATL Module Classes<ept id=\"p1\">](../../atl/atl-module-classes.md)</ept> for more details.","source":"As of ATL 7.0, `CComModule` is obsolete: see [ATL Module Classes](../../atl/atl-module-classes.md) for more details."},{"content":"Parameters","pos":[15332,15342]},{"content":"[in] String in the format <ph id=\"ph1\">`\"\\\\N\"`</ph>, where <ph id=\"ph2\">`N`</ph> is the integer index of the TYPELIB resource.","pos":[15361,15451],"source":" [in] String in the format `\"\\\\N\"`, where `N` is the integer index of the TYPELIB resource."},{"content":"Return Value","pos":[15461,15473]},{"content":"A standard HRESULT value.","pos":[15477,15502]},{"content":"Remarks","pos":[15512,15519]},{"content":"Adds information about a type library to the system registry.","pos":[15523,15584]},{"content":"If the module instance contains multiple type libraries, use the second version of this method to specify which type library should be used.","pos":[15591,15731]},{"pos":[15788,15818],"content":"CComModule::RevokeClassObjects"},{"pos":[15822,15938],"content":"As of ATL 7.0, <ph id=\"ph1\">`CComModule`</ph> is obsolete: see <bpt id=\"p1\">[</bpt>ATL Module Classes<ept id=\"p1\">](../../atl/atl-module-classes.md)</ept> for more details.","source":"As of ATL 7.0, `CComModule` is obsolete: see [ATL Module Classes](../../atl/atl-module-classes.md) for more details."},{"content":"Return Value","pos":[15999,16011]},{"content":"A standard HRESULT value.","pos":[16015,16040]},{"content":"Remarks","pos":[16050,16057]},{"content":"Removes the class object.","pos":[16061,16086]},{"content":"This method                        is only available to EXEs.","pos":[16087,16148]},{"pos":[16191,16207],"content":"CComModule::Term"},{"pos":[16211,16327],"content":"As of ATL 7.0, <ph id=\"ph1\">`CComModule`</ph> is obsolete: see <bpt id=\"p1\">[</bpt>ATL Module Classes<ept id=\"p1\">](../../atl/atl-module-classes.md)</ept> for more details.","source":"As of ATL 7.0, `CComModule` is obsolete: see [ATL Module Classes](../../atl/atl-module-classes.md) for more details."},{"content":"Remarks","pos":[16371,16378]},{"content":"Releases all data members.","pos":[16382,16408]},{"pos":[16468,16501],"content":"CComModule::UnregisterClassHelper"},{"pos":[16505,16621],"content":"As of ATL 7.0, <ph id=\"ph1\">`CComModule`</ph> is obsolete: see <bpt id=\"p1\">[</bpt>ATL Module Classes<ept id=\"p1\">](../../atl/atl-module-classes.md)</ept> for more details.","source":"As of ATL 7.0, `CComModule` is obsolete: see [ATL Module Classes](../../atl/atl-module-classes.md) for more details."},{"content":"Parameters","pos":[16764,16774]},{"content":"[in] The CLSID of the object to be unregistered.","pos":[16789,16837]},{"content":"[in] The ProgID associated with the object.","pos":[16860,16903]},{"content":"[in] The version-independent ProgID associated with the object.","pos":[16932,16995]},{"content":"Return Value","pos":[17005,17017]},{"content":"A standard HRESULT value.","pos":[17021,17046]},{"content":"Remarks","pos":[17056,17063]},{"content":"Removes an object's standard class registration from the system registry.","pos":[17067,17140]},{"pos":[17147,17244],"content":"The <bpt id=\"p1\">[</bpt>UpdateRegistryClass<ept id=\"p1\">](#ccommodule__updateregistryclass)</ept> method calls <ph id=\"ph1\">`UnregisterClassHelper`</ph>.","source":"The [UpdateRegistryClass](#ccommodule__updateregistryclass) method calls `UnregisterClassHelper`."},{"pos":[17299,17327],"content":"CComModule::UnregisterServer"},{"pos":[17331,17447],"content":"As of ATL 7.0, <ph id=\"ph1\">`CComModule`</ph> is obsolete: see <bpt id=\"p1\">[</bpt>ATL Module Classes<ept id=\"p1\">](../../atl/atl-module-classes.md)</ept> for more details.","source":"As of ATL 7.0, `CComModule` is obsolete: see [ATL Module Classes](../../atl/atl-module-classes.md) for more details."},{"content":"Parameters","pos":[17624,17634]},{"content":"If <bpt id=\"p1\">**</bpt>TRUE<ept id=\"p1\">**</ept>, the type library is also unregistered.","pos":[17657,17708],"source":" If **TRUE**, the type library is also unregistered."},{"content":"Points to the CLSID of the object to be unregistered.","pos":[17727,17780]},{"content":"If <bpt id=\"p1\">**</bpt>NULL<ept id=\"p1\">**</ept> (the default value), all objects in the object map will be unregistered.","pos":[17781,17865],"source":" If **NULL** (the default value), all objects in the object map will be unregistered."},{"content":"Return Value","pos":[17875,17887]},{"content":"A standard HRESULT value.","pos":[17891,17916]},{"content":"Remarks","pos":[17926,17933]},{"pos":[17937,18048],"content":"Depending on the <ph id=\"ph1\">`pCLSID`</ph> parameter, unregisters either a single class object or all objects in the object map.","source":"Depending on the `pCLSID` parameter, unregisters either a single class object or all objects in the object map."},{"pos":[18074,18217],"content":"will be called automatically by <bpt id=\"p1\">**</bpt>DLLUnregisterServer<ept id=\"p1\">**</ept> for a DLL or by <ph id=\"ph1\">`WinMain`</ph> for an EXE run with the <bpt id=\"p2\">**</bpt>/UnregServer<ept id=\"p2\">**</ept> command line option.","source":" will be called automatically by **DLLUnregisterServer** for a DLL or by `WinMain` for an EXE run with the **/UnregServer** command line option."},{"pos":[18224,18377],"content":"See <bpt id=\"p1\">[</bpt>OBJECT_ENTRY_AUTO<ept id=\"p1\">](http://msdn.microsoft.com/library/5a0f4fa5-0905-43d2-b337-e22f979c9e4c)</ept> for information on how to add an entry to the object map.","source":"See [OBJECT_ENTRY_AUTO](http://msdn.microsoft.com/library/5a0f4fa5-0905-43d2-b337-e22f979c9e4c) for information on how to add an entry to the object map."},{"pos":[18435,18466],"content":"CComModule::UpdateRegistryClass"},{"pos":[18470,18586],"content":"As of ATL 7.0, <ph id=\"ph1\">`CComModule`</ph> is obsolete: see <bpt id=\"p1\">[</bpt>ATL Module Classes<ept id=\"p1\">](../../atl/atl-module-classes.md)</ept> for more details.","source":"As of ATL 7.0, `CComModule` is obsolete: see [ATL Module Classes](../../atl/atl-module-classes.md) for more details."},{"content":"Parameters","pos":[18966,18976]},{"content":"The CLSID of the object to be registered or unregistered.","pos":[18991,19048]},{"content":"The ProgID associated with the object.","pos":[19071,19109]},{"content":"The version-independent ProgID associated with the object.","pos":[19138,19196]},{"content":"The identifier of the string resource for the object's description.","pos":[19216,19283]},{"content":"A string containing the object's description.","pos":[19302,19347]},{"content":"Specifies the threading model to enter in the registry.","pos":[19367,19422]},{"content":"Possible values are <bpt id=\"p1\">**</bpt>THREADFLAGS_APARTMENT<ept id=\"p1\">**</ept>, <bpt id=\"p2\">**</bpt>THREADFLAGS_BOTH<ept id=\"p2\">**</ept>, or <bpt id=\"p3\">**</bpt>AUTPRXFLAG<ept id=\"p3\">**</ept>.","pos":[19423,19510],"source":" Possible values are **THREADFLAGS_APARTMENT**, **THREADFLAGS_BOTH**, or **AUTPRXFLAG**."},{"content":"Indicates whether the object should be registered.","pos":[19532,19582]},{"content":"Return Value","pos":[19592,19604]},{"content":"A standard HRESULT value.","pos":[19608,19633]},{"content":"Remarks","pos":[19643,19650]},{"pos":[19654,19765],"content":"If <ph id=\"ph1\">`bRegister`</ph> is <bpt id=\"p1\">**</bpt>TRUE<ept id=\"p1\">**</ept>, this method enters the object's standard class registration in the system registry.","source":"If `bRegister` is **TRUE**, this method enters the object's standard class registration in the system registry."},{"pos":[19772,19838],"content":"If <ph id=\"ph1\">`bRegister`</ph> is <bpt id=\"p1\">**</bpt>FALSE<ept id=\"p1\">**</ept>, it removes the object's registration.","source":"If `bRegister` is **FALSE**, it removes the object's registration."},{"pos":[19845,20038],"content":"Depending on the value of <ph id=\"ph1\">`bRegister`</ph>, <ph id=\"ph2\">`UpdateRegistryClass`</ph> calls either <bpt id=\"p1\">[</bpt>RegisterClassHelper<ept id=\"p1\">](#ccommodule__registerclasshelper)</ept> or <bpt id=\"p2\">[</bpt>UnregisterClassHelper<ept id=\"p2\">](#ccommodule__unregisterclasshelper)</ept>.","source":"Depending on the value of `bRegister`, `UpdateRegistryClass` calls either [RegisterClassHelper](#ccommodule__registerclasshelper) or [UnregisterClassHelper](#ccommodule__unregisterclasshelper)."},{"pos":[20045,20247],"content":"By specifying the <bpt id=\"p1\">[</bpt>DECLARE_REGISTRY<ept id=\"p1\">](http://msdn.microsoft.com/library/89b8949b-5c27-4a9c-8a51-ad276bba3a54)</ept> macro, <ph id=\"ph1\">`UpdateRegistryClass`</ph> will be invoked automatically when your object map is processed.","source":"By specifying the [DECLARE_REGISTRY](http://msdn.microsoft.com/library/89b8949b-5c27-4a9c-8a51-ad276bba3a54) macro, `UpdateRegistryClass` will be invoked automatically when your object map is processed."},{"pos":[20313,20352],"content":"CComModule::UpdateRegistryFromResourceD"},{"pos":[20356,20472],"content":"As of ATL 7.0, <ph id=\"ph1\">`CComModule`</ph> is obsolete: see <bpt id=\"p1\">[</bpt>ATL Module Classes<ept id=\"p1\">](../../atl/atl-module-classes.md)</ept> for more details.","source":"As of ATL 7.0, `CComModule` is obsolete: see [ATL Module Classes](../../atl/atl-module-classes.md) for more details."},{"content":"Parameters","pos":[20772,20782]},{"content":"[in] A resource name.","pos":[20799,20820]},{"content":"[in] A resource ID.","pos":[20839,20858]},{"content":"[in] Indicates whether the object should be registered.","pos":[20880,20935]},{"content":"[in] A pointer to the replacement map storing values associated with the script's replaceable parameters.","pos":[20959,21064]},{"content":"ATL automatically uses <ph id=\"ph1\">`%MODULE%`</ph>.","pos":[21065,21099],"source":" ATL automatically uses `%MODULE%`."},{"content":"To use additional replaceable parameters, see the Remarks for details.","pos":[21100,21170]},{"content":"Otherwise, use the <bpt id=\"p1\">**</bpt>NULL<ept id=\"p1\">**</ept> default value.","pos":[21171,21213],"source":" Otherwise, use the **NULL** default value."},{"content":"Return Value","pos":[21223,21235]},{"content":"A standard HRESULT value.","pos":[21239,21264]},{"content":"Remarks","pos":[21274,21281]},{"pos":[21285,21362],"content":"Runs the script contained in the resource specified by <ph id=\"ph1\">`lpszRes`</ph> or <ph id=\"ph2\">`nResID`</ph>.","source":"Runs the script contained in the resource specified by `lpszRes` or `nResID`."},{"pos":[21369,21491],"content":"If <ph id=\"ph1\">`bRegister`</ph> is <bpt id=\"p1\">**</bpt>TRUE<ept id=\"p1\">**</ept>, this method registers the object in the system registry; otherwise, it unregisters the object.","source":"If `bRegister` is **TRUE**, this method registers the object in the system registry; otherwise, it unregisters the object."},{"pos":[21498,21822],"content":"By specifying the <bpt id=\"p1\">[</bpt>DECLARE_REGISTRY_RESOURCE<ept id=\"p1\">](http://msdn.microsoft.com/library/7ac11498-8ee2-4156-8df2-7076f7ddda8b)</ept> or <bpt id=\"p2\">[</bpt>DECLARE_REGISTRY_RESOURCEID<ept id=\"p2\">](http://msdn.microsoft.com/library/65bf3576-5396-416e-ba48-e14b3236c49b)</ept> macro, <ph id=\"ph1\">`UpdateRegistryFromResourceD`</ph> will be invoked automatically when your object map is processed.","source":"By specifying the [DECLARE_REGISTRY_RESOURCE](http://msdn.microsoft.com/library/7ac11498-8ee2-4156-8df2-7076f7ddda8b) or [DECLARE_REGISTRY_RESOURCEID](http://msdn.microsoft.com/library/65bf3576-5396-416e-ba48-e14b3236c49b) macro, `UpdateRegistryFromResourceD` will be invoked automatically when your object map is processed."},{"pos":[21830,22353],"content":"[!NOTE]\n To substitute replacement values at run time, do not specify the `DECLARE_REGISTRY_RESOURCE` or `DECLARE_REGISTRY_RESOURCEID` macro. Instead, create an array of **_ATL_REGMAP_ENTRIES** structures, where each entry contains a variable placeholder paired with a value to replace the placeholder at run time. Then call `UpdateRegistryFromResourceD`, passing the array for the `pMapEntries` parameter. This adds all the replacement values in the **_ATL_REGMAP_ENTRIES** structures to the Registrar's replacement map.","leadings":["","> "],"nodes":[{"content":" To substitute replacement values at run time, do not specify the `DECLARE_REGISTRY_RESOURCE` or `DECLARE_REGISTRY_RESOURCEID` macro. Instead, create an array of **_ATL_REGMAP_ENTRIES** structures, where each entry contains a variable placeholder paired with a value to replace the placeholder at run time. Then call `UpdateRegistryFromResourceD`, passing the array for the `pMapEntries` parameter. This adds all the replacement values in the **_ATL_REGMAP_ENTRIES** structures to the Registrar's replacement map.","pos":[8,521],"nodes":[{"content":"To substitute replacement values at run time, do not specify the <ph id=\"ph1\">`DECLARE_REGISTRY_RESOURCE`</ph> or <ph id=\"ph2\">`DECLARE_REGISTRY_RESOURCEID`</ph> macro.","pos":[1,133],"source":" To substitute replacement values at run time, do not specify the `DECLARE_REGISTRY_RESOURCE` or `DECLARE_REGISTRY_RESOURCEID` macro."},{"content":"Instead, create an array of <bpt id=\"p1\">**</bpt>_ATL_REGMAP_ENTRIES<ept id=\"p1\">**</ept> structures, where each entry contains a variable placeholder paired with a value to replace the placeholder at run time.","pos":[134,306],"source":" Instead, create an array of **_ATL_REGMAP_ENTRIES** structures, where each entry contains a variable placeholder paired with a value to replace the placeholder at run time."},{"content":"Then call <ph id=\"ph1\">`UpdateRegistryFromResourceD`</ph>, passing the array for the <ph id=\"ph2\">`pMapEntries`</ph> parameter.","pos":[307,398],"source":" Then call `UpdateRegistryFromResourceD`, passing the array for the `pMapEntries` parameter."},{"content":"This adds all the replacement values in the <bpt id=\"p1\">**</bpt>_ATL_REGMAP_ENTRIES<ept id=\"p1\">**</ept> structures to the Registrar's replacement map.","pos":[399,513],"source":" This adds all the replacement values in the **_ATL_REGMAP_ENTRIES** structures to the Registrar's replacement map."}]}]},{"pos":[22361,22510],"content":"[!NOTE]\n To statically link to the ATL Registry Component (Registrar), see [UpdateRegistryFromResourceS](#ccommodule__updateregistryfromresources).","leadings":["","> "],"nodes":[{"content":"To statically link to the ATL Registry Component (Registrar), see <bpt id=\"p1\">[</bpt>UpdateRegistryFromResourceS<ept id=\"p1\">](#ccommodule__updateregistryfromresources)</ept>.","pos":[9,147],"source":" To statically link to the ATL Registry Component (Registrar), see [UpdateRegistryFromResourceS](#ccommodule__updateregistryfromresources)."}]},{"pos":[22517,22686],"content":"For more information about replaceable parameters and scripting, see the article <bpt id=\"p1\">[</bpt>The ATL Registry Component (Registrar)<ept id=\"p1\">](../../atl/atl-registry-component-registrar.md)</ept>.","source":"For more information about replaceable parameters and scripting, see the article [The ATL Registry Component (Registrar)](../../atl/atl-registry-component-registrar.md)."},{"pos":[22752,22791],"content":"CComModule::UpdateRegistryFromResourceS"},{"pos":[22795,22911],"content":"As of ATL 7.0, <ph id=\"ph1\">`CComModule`</ph> is obsolete: see <bpt id=\"p1\">[</bpt>ATL Module Classes<ept id=\"p1\">](../../atl/atl-module-classes.md)</ept> for more details.","source":"As of ATL 7.0, `CComModule` is obsolete: see [ATL Module Classes](../../atl/atl-module-classes.md) for more details."},{"content":"Parameters","pos":[23210,23220]},{"content":"[in] A resource name.","pos":[23237,23258]},{"content":"[in] A resource ID.","pos":[23277,23296]},{"content":"[in] Indicates whether the resource script should be registered.","pos":[23318,23382]},{"content":"[in] A pointer to the replacement map storing values associated with the script's replaceable parameters.","pos":[23406,23511]},{"content":"ATL automatically uses <ph id=\"ph1\">`%MODULE%`</ph>.","pos":[23512,23546],"source":" ATL automatically uses `%MODULE%`."},{"content":"To use additional replaceable parameters, see the Remarks for details.","pos":[23547,23617]},{"content":"Otherwise, use the <bpt id=\"p1\">**</bpt>NULL<ept id=\"p1\">**</ept> default value.","pos":[23618,23660],"source":" Otherwise, use the **NULL** default value."},{"content":"Return Value","pos":[23670,23682]},{"content":"A standard HRESULT value.","pos":[23686,23711]},{"content":"Remarks","pos":[23721,23728]},{"pos":[23732,23916],"content":"Similar to <bpt id=\"p1\">[</bpt>UpdateRegistryFromResourceD<ept id=\"p1\">](#ccommodule__updateregistryfromresourced)</ept> except <ph id=\"ph1\">`UpdateRegistryFromResourceS`</ph> creates a static link to the ATL Registry Component (Registrar).","source":"Similar to [UpdateRegistryFromResourceD](#ccommodule__updateregistryfromresourced) except `UpdateRegistryFromResourceS` creates a static link to the ATL Registry Component (Registrar)."},{"pos":[23953,24083],"content":"will be invoked automatically when your object map is processed, provided you add <ph id=\"ph1\">`#define _ATL_STATIC_REGISTRY`</ph> to your stdafx.h.","source":" will be invoked automatically when your object map is processed, provided you add `#define _ATL_STATIC_REGISTRY` to your stdafx.h."},{"pos":[24091,24758],"content":"[!NOTE]\n To substitute replacement values at run time, do not specify the [DECLARE_REGISTRY_RESOURCE](http://msdn.microsoft.com/library/7ac11498-8ee2-4156-8df2-7076f7ddda8b) or [DECLARE_REGISTRY_RESOURCEID](http://msdn.microsoft.com/library/65bf3576-5396-416e-ba48-e14b3236c49b) macro. Instead, create an array of **_ATL_REGMAP_ENTRIES** structures, where each entry contains a variable placeholder paired with a value to replace the placeholder at run time. Then call `UpdateRegistryFromResourceS`, passing the array for the `pMapEntries` parameter. This adds all the replacement values in the **_ATL_REGMAP_ENTRIES** structures to the Registrar's replacement map.","leadings":["","> "],"nodes":[{"content":" To substitute replacement values at run time, do not specify the [DECLARE_REGISTRY_RESOURCE](http://msdn.microsoft.com/library/7ac11498-8ee2-4156-8df2-7076f7ddda8b) or [DECLARE_REGISTRY_RESOURCEID](http://msdn.microsoft.com/library/65bf3576-5396-416e-ba48-e14b3236c49b) macro. Instead, create an array of **_ATL_REGMAP_ENTRIES** structures, where each entry contains a variable placeholder paired with a value to replace the placeholder at run time. Then call `UpdateRegistryFromResourceS`, passing the array for the `pMapEntries` parameter. This adds all the replacement values in the **_ATL_REGMAP_ENTRIES** structures to the Registrar's replacement map.","pos":[8,665],"nodes":[{"content":"To substitute replacement values at run time, do not specify the <bpt id=\"p1\">[</bpt>DECLARE_REGISTRY_RESOURCE<ept id=\"p1\">](http://msdn.microsoft.com/library/7ac11498-8ee2-4156-8df2-7076f7ddda8b)</ept> or <bpt id=\"p2\">[</bpt>DECLARE_REGISTRY_RESOURCEID<ept id=\"p2\">](http://msdn.microsoft.com/library/65bf3576-5396-416e-ba48-e14b3236c49b)</ept> macro.","pos":[1,277],"source":" To substitute replacement values at run time, do not specify the [DECLARE_REGISTRY_RESOURCE](http://msdn.microsoft.com/library/7ac11498-8ee2-4156-8df2-7076f7ddda8b) or [DECLARE_REGISTRY_RESOURCEID](http://msdn.microsoft.com/library/65bf3576-5396-416e-ba48-e14b3236c49b) macro."},{"content":"Instead, create an array of <bpt id=\"p1\">**</bpt>_ATL_REGMAP_ENTRIES<ept id=\"p1\">**</ept> structures, where each entry contains a variable placeholder paired with a value to replace the placeholder at run time.","pos":[278,450],"source":" Instead, create an array of **_ATL_REGMAP_ENTRIES** structures, where each entry contains a variable placeholder paired with a value to replace the placeholder at run time."},{"content":"Then call <ph id=\"ph1\">`UpdateRegistryFromResourceS`</ph>, passing the array for the <ph id=\"ph2\">`pMapEntries`</ph> parameter.","pos":[451,542],"source":" Then call `UpdateRegistryFromResourceS`, passing the array for the `pMapEntries` parameter."},{"content":"This adds all the replacement values in the <bpt id=\"p1\">**</bpt>_ATL_REGMAP_ENTRIES<ept id=\"p1\">**</ept> structures to the Registrar's replacement map.","pos":[543,657],"source":" This adds all the replacement values in the **_ATL_REGMAP_ENTRIES** structures to the Registrar's replacement map."}]}]},{"pos":[24765,24934],"content":"For more information about replaceable parameters and scripting, see the article <bpt id=\"p1\">[</bpt>The ATL Registry Component (Registrar)<ept id=\"p1\">](../../atl/atl-registry-component-registrar.md)</ept>.","source":"For more information about replaceable parameters and scripting, see the article [The ATL Registry Component (Registrar)](../../atl/atl-registry-component-registrar.md)."},{"content":"See Also","pos":[24943,24951]},{"content":"Class Overview","pos":[24956,24970]}],"content":"---\ntitle: \"CComModule Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"CComModule\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"CComModule class\"\n  - \"DLL modules [C++], ATL\"\nms.assetid: f5face2c-8fd8-40e6-9ec3-54ab74701769\ncaps.latest.revision: 23\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# CComModule Class\nAs of ATL 7.0, `CComModule` is deprecated: see [ATL Module Classes](../../atl/atl-module-classes.md) for more details.  \n  \n> [!IMPORTANT]\n>  This class and its members cannot be used in applications that execute in the Windows Runtime.  \n  \n## Syntax  \n  \n```\nclass CComModule : public _ATL_MODULE\n```  \n  \n## Members  \n  \n### Public Methods  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CComModule::GetClassObject](#ccommodule__getclassobject)|Creates an object of a specified CLSID. For DLLs only.|  \n|[CComModule::GetModuleInstance](#ccommodule__getmoduleinstance)|Returns `m_hInst`.|  \n|[CComModule::GetResourceInstance](#ccommodule__getresourceinstance)|Returns `m_hInstResource`.|  \n|[CComModule::GetTypeLibInstance](#ccommodule__gettypelibinstance)|Returns `m_hInstTypeLib`.|  \n|[CComModule::Init](#ccommodule__init)|Initializes data members.|  \n|[CComModule::RegisterClassHelper](#ccommodule__registerclasshelper)|Enters an object's standard class registration in the system registry.|  \n|[CComModule::RegisterClassObjects](#ccommodule__registerclassobjects)|Registers the class object. For EXEs only.|  \n|[CComModule::RegisterServer](#ccommodule__registerserver)|Updates the system registry for each object in the object map.|  \n|[CComModule::RegisterTypeLib](#ccommodule__registertypelib)|Registers a type library.|  \n|[CComModule::RevokeClassObjects](#ccommodule__revokeclassobjects)|Revokes the class object. For EXEs only.|  \n|[CComModule::Term](#ccommodule__term)|Releases data members.|  \n|[CComModule::UnregisterClassHelper](#ccommodule__unregisterclasshelper)|Removes an object's standard class registration from the system registry.|  \n|[CComModule::UnregisterServer](#ccommodule__unregisterserver)|Unregisters each object in the object map.|  \n|[CComModule::UpdateRegistryClass](#ccommodule__updateregistryclass)|Registers or unregisters an object's standard class registration.|  \n|[CComModule::UpdateRegistryFromResourceD](#ccommodule__updateregistryfromresourced)|Runs the script contained in a specified resource to register or unregister an object.|  \n|[CComModule::UpdateRegistryFromResourceS](#ccommodule__updateregistryfromresources)|Statically links to the ATL Registry Component. Runs the script contained in a specified resource to register or unregister an object.|  \n  \n### Public Data Members  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CComModule::m_csObjMap](#ccommodule__m_csobjmap)|Ensures synchronized access to the object map information.|  \n|[CComModule::m_csTypeInfoHolder](#ccommodule__m_cstypeinfoholder)|Ensures synchronized access to the type library information.|  \n|[CComModule::m_csWindowCreate](#ccommodule__m_cswindowcreate)|Ensures synchronized access to window class information and static data used during window creation.|  \n|[CComModule::m_hInst](#ccommodule__m_hinst)|Contains the handle to the module instance.|  \n|[CComModule::m_hInstResource](#ccommodule__m_hinstresource)|By default, contains the handle to the module instance.|  \n|[CComModule::m_hInstTypeLib](#ccommodule__m_hinsttypelib)|By default, contains the handle to the module instance.|  \n|[CComModule::m_pObjMap](#ccommodule__m_pobjmap)|Points to the object map maintained by the module instance.|  \n  \n## Remarks  \n  \n> [!NOTE]\n>  This class is deprecated, and the ATL code generation wizards now use the [CAtlAutoThreadModule](../../atl/reference/catlautothreadmodule-class.md) and [CAtlModule](../../atl/reference/catlmodule-class.md) derived classes. See [ATL Module Classes](../../atl/atl-module-classes.md) for more information. The information that follows is for use with applications created with older releases of ATL. `CComModule` is still part of ATL for backwards capability.  \n  \n `CComModule` implements a COM server module, allowing a client to access the module's components. `CComModule` supports both DLL (in-process) and EXE (local) modules.  \n  \n A `CComModule` instance uses an object map to maintain a set of class object definitions. This object map is implemented as an array of `_ATL_OBJMAP_ENTRY` structures, and contains information for:  \n  \n-   Entering and removing object descriptions in the system registry.  \n  \n-   Instantiating objects through a class factory.  \n  \n-   Establishing communication between a client and the root object in the component.  \n  \n-   Performing lifetime management of class objects.  \n  \n When you run the ATL COM AppWizard, the wizard automatically generates `_Module`, a global instance of `CComModule` or a class derived from it. For more information about the ATL Project Wizard, see the article [Creating an ATL Project](../../atl/reference/creating-an-atl-project.md).  \n  \n In addition to `CComModule`, ATL provides [CComAutoThreadModule](../../atl/reference/ccomautothreadmodule-class.md), which implements an apartment-model module for EXEs and Windows services. Derive your module from `CComAutoThreadModule` when you want to create objects in multiple apartments.  \n  \n## Inheritance Hierarchy  \n [_ATL_MODULE](atl-typedefs.md#_atl_module)  \n  \n [CAtlModule](../../atl/reference/catlmodule-class.md)  \n  \n [CAtlModuleT](../../atl/reference/catlmodulet-class.md)  \n  \n `CComModule`  \n  \n## Requirements  \n `Header:` atlbase.h  \n  \n##  <a name=\"ccommodule__getclassobject\"></a>  CComModule::GetClassObject  \n As of ATL 7.0, `CComModule` is obsolete: see [ATL Module Classes](../../atl/atl-module-classes.md) for more details.  \n  \n```\nHRESULT GetClassObject(REFCLSID rclsid,\n    REFIID riid,\n    LPVOID* ppv) throw();\n```  \n  \n### Parameters  \n `rclsid`  \n [in] The CLSID of the object to be created.  \n  \n `riid`  \n [in] The IID of the requested interface.  \n  \n `ppv`  \n [out] A pointer to the interface pointer identified by `riid`. If the object does not support this interface, `ppv` is set to **NULL**.  \n  \n### Return Value  \n A standard HRESULT value.  \n  \n### Remarks  \n Creates an object of the specified CLSID and retrieves an interface pointer to this object.  \n  \n `GetClassObject` is only available to DLLs.  \n  \n##  <a name=\"ccommodule__getmoduleinstance\"></a>  CComModule::GetModuleInstance  \n As of ATL 7.0, `CComModule` is obsolete: see [ATL Module Classes](../../atl/atl-module-classes.md) for more details.  \n  \n```\nHINSTANCE GetModuleInstance() throw();\n```  \n  \n### Return Value  \n The `HINSTANCE` identifying this module.  \n  \n### Remarks  \n Returns the [m_hInst](#ccommodule__m_hinst) data member.  \n  \n##  <a name=\"ccommodule__getresourceinstance\"></a>  CComModule::GetResourceInstance  \n As of ATL 7.0, `CComModule` is obsolete: see [ATL Module Classes](../../atl/atl-module-classes.md) for more details.  \n  \n```\nHINSTANCE GetResourceInstance() throw();\n```  \n  \n### Return Value  \n An `HINSTANCE`.  \n  \n### Remarks  \n Returns the [m_hInstResource](#ccommodule__m_hinstresource) data member.  \n  \n##  <a name=\"ccommodule__gettypelibinstance\"></a>  CComModule::GetTypeLibInstance  \n As of ATL 7.0, `CComModule` is obsolete: see [ATL Module Classes](../../atl/atl-module-classes.md) for more details.  \n  \n```\nHINSTANCE GetTypeLibInstance() const throw();\n```  \n  \n### Return Value  \n An `HINSTANCE`.  \n  \n### Remarks  \n Returns the [m_hInstTypeLib](#ccommodule__m_hinsttypelib) data member.  \n  \n##  <a name=\"ccommodule__init\"></a>  CComModule::Init  \n As of ATL 7.0, `CComModule` is obsolete: see [ATL Module Classes](../../atl/atl-module-classes.md) for more details.  \n  \n```\nHRESULT Init(\n    _ATL_OBJMAP_ENTRY* p,\n    HINSTANCE h,\n    const GUID* plibid = NULL) throw();\n```  \n  \n### Parameters  \n `p`  \n [in] A pointer to an array of object map entries.  \n  \n `h`  \n [in] The `HINSTANCE` passed to **DLLMain** or `WinMain`.  \n  \n `plibid`  \n [in] A pointer to the LIBID of the type library associated with the project.  \n  \n### Return Value  \n A standard HRESULT value.  \n  \n### Remarks  \n Initializes all data members.  \n  \n##  <a name=\"ccommodule__m_csobjmap\"></a>  CComModule::m_csObjMap  \n As of ATL 7.0, `CComModule` is obsolete: see [ATL Module Classes](../../atl/atl-module-classes.md) for more details.  \n  \n```\nCRITICAL_SECTION m_csObjMap;\n```  \n  \n### Remarks  \n Ensures synchronized access to the object map.  \n  \n##  <a name=\"ccommodule__m_cstypeinfoholder\"></a>  CComModule::m_csTypeInfoHolder  \n As of ATL 7.0, `CComModule` is obsolete: see [ATL Module Classes](../../atl/atl-module-classes.md) for more details.  \n  \n```\nCRITICAL_SECTION m_csTypeInfoHolder;\n```  \n  \n### Remarks  \n Ensures synchronized access to the type library.  \n  \n##  <a name=\"ccommodule__m_cswindowcreate\"></a>  CComModule::m_csWindowCreate  \n As of ATL 7.0, `CComModule` is obsolete: see [ATL Module Classes](../../atl/atl-module-classes.md) for more details.  \n  \n```\nCRITICAL_SECTION m_csWindowCreate;\n```  \n  \n### Remarks  \n Ensures synchronized access to window class information and to static data used during window creation.  \n  \n##  <a name=\"ccommodule__m_hinst\"></a>  CComModule::m_hInst  \n As of ATL 7.0, `CComModule` is obsolete: see [ATL Module Classes](../../atl/atl-module-classes.md) for more details.  \n  \n```\nHINSTANCE m_hInst;\n```  \n  \n### Remarks  \n Contains the handle to the module instance.  \n  \n The [Init](#ccommodule__init) method sets `m_hInst` to the handle passed to **DLLMain** or `WinMain`.  \n  \n##  <a name=\"ccommodule__m_hinstresource\"></a>  CComModule::m_hInstResource  \n As of ATL 7.0, `CComModule` is obsolete: see [ATL Module Classes](../../atl/atl-module-classes.md) for more details.  \n  \n```\nHINSTANCE m_hInstResource;\n```  \n  \n### Remarks  \n By default, contains the handle to the module instance.  \n  \n The [Init](#ccommodule__init) method sets `m_hInstResource` to the handle passed to **DLLMain** or `WinMain`. You can explicitly set `m_hInstResource` to the handle to a resource.  \n  \n The [GetResourceInstance](#ccommodule__getresourceinstance) method returns the handle stored in `m_hInstResource`.  \n  \n##  <a name=\"ccommodule__m_hinsttypelib\"></a>  CComModule::m_hInstTypeLib  \n As of ATL 7.0, `CComModule` is obsolete: see [ATL Module Classes](../../atl/atl-module-classes.md) for more details.  \n  \n```\nHINSTANCE m_hInstTypeLib;\n```  \n  \n### Remarks  \n By default, contains the handle to the module instance.  \n  \n The [Init](#ccommodule__init) method sets `m_hInstTypeLib` to the handle passed to **DLLMain** or `WinMain`. You can explicitly set `m_hInstTypeLib` to the handle to a type library.  \n  \n The [GetTypeLibInstance](#ccommodule__gettypelibinstance) method returns the handle stored in `m_hInstTypeLib`.  \n  \n##  <a name=\"ccommodule__m_pobjmap\"></a>  CComModule::m_pObjMap  \n As of ATL 7.0, `CComModule` is obsolete: see [ATL Module Classes](../../atl/atl-module-classes.md) for more details.  \n  \n```\n_ATL_OBJMAP_ENTRY* m_pObjMap;\n```  \n  \n### Remarks  \n Points to the object map maintained by the module instance.  \n  \n##  <a name=\"ccommodule__registerclasshelper\"></a>  CComModule::RegisterClassHelper  \n As of ATL 7.0, `CComModule` is obsolete: see [ATL Module Classes](../../atl/atl-module-classes.md) for more details.  \n  \n```\nATL_DEPRECATED HRESULT RegisterClassHelper(const CLSID& clsid,\n    LPCTSTR lpszProgID,\n    LPCTSTR lpszVerIndProgID,\n    UINT nDescID,\n    DWORD dwFlags);\n```  \n  \n### Parameters  \n `clsid`  \n [in] The CLSID of the object to be registered.  \n  \n `lpszProgID`  \n [in] The ProgID associated with the object.  \n  \n `lpszVerIndProgID`  \n [in] The version-independent ProgID associated with the object.  \n  \n `nDescID`  \n [in] The identifier of a string resource for the object's description.  \n  \n `dwFlags`  \n [in] Specifies the threading model to enter in the registry. Possible values are **THREADFLAGS_APARTMENT**, **THREADFLAGS_BOTH**, or **AUTPRXFLAG**.  \n  \n### Return Value  \n A standard HRESULT value.  \n  \n### Remarks  \n Enters an object's standard class registration in the system registry.  \n  \n The [UpdateRegistryClass](#ccommodule__updateregistryclass) method calls `RegisterClassHelper`.  \n  \n##  <a name=\"ccommodule__registerclassobjects\"></a>  CComModule::RegisterClassObjects  \n As of ATL 7.0, `CComModule` is obsolete: see [ATL Module Classes](../../atl/atl-module-classes.md) for more details.  \n  \n```\nHRESULT RegisterClassObjects(DWORD dwClsContext,  DWORD dwFlags) throw();\n```  \n  \n### Parameters  \n `dwClsContext`  \n [in] Specifies the context in which the class object is to be run. Possible values are **CLSCTX_INPROC_SERVER**, **CLSCTX_INPROC_HANDLER**, or **CLSCTX_LOCAL_SERVER**. For a description of these values, see [CLSCTX](http://msdn.microsoft.com/library/windows/desktop/ms693716) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n `dwFlags`  \n [in] Determines the connection types to the class object. Possible values are **REGCLS_SINGLEUSE**, **REGCLS_MULTIPLEUSE**, or **REGCLS_MULTI_SEPARATE**. For a description of these values, see [REGCLS](http://msdn.microsoft.com/library/windows/desktop/ms679697) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n### Return Value  \n A standard HRESULT value.  \n  \n### Remarks  \n Registers an EXE class object with OLE so other applications can connect to it. This method                        is only available to EXEs.  \n  \n##  <a name=\"ccommodule__registerserver\"></a>  CComModule::RegisterServer  \n As of ATL 7.0, `CComModule` is obsolete: see [ATL Module Classes](../../atl/atl-module-classes.md) for more details.  \n  \n```\nHRESULT RegisterServer(BOOL bRegTypeLib = FALSE,  const CLSID* pCLSID = NULL) throw();\n```  \n  \n### Parameters  \n `bRegTypeLib`  \n [in] Indicates whether the type library will be registered. The default value is **FALSE**.  \n  \n `pCLSID`  \n [in] Points to the CLSID of the object to be registered. If **NULL** (the default value), all objects in the object map will be registered.  \n  \n### Return Value  \n A standard HRESULT value.  \n  \n### Remarks  \n Depending on the `pCLSID` parameter, updates the system registry for a single class object or for all objects in the object map.  \n  \n If `bRegTypeLib` is **TRUE**, the type library information will also be updated.  \n  \n See [OBJECT_ENTRY_AUTO](http://msdn.microsoft.com/library/5a0f4fa5-0905-43d2-b337-e22f979c9e4c) for information on how to add an entry to the object map.  \n  \n `RegisterServer` will be called automatically by **DLLRegisterServer** for a DLL or by `WinMain` for an EXE run with the **/RegServer** command line option.  \n  \n##  <a name=\"ccommodule__registertypelib\"></a>  CComModule::RegisterTypeLib  \n As of ATL 7.0, `CComModule` is obsolete: see [ATL Module Classes](../../atl/atl-module-classes.md) for more details.  \n  \n```\nHRESULT RegisterTypeLib() throw();\nHRESULT RegisterTypeLib(LPCTSTR   lpszIndex) throw();\n```  \n  \n### Parameters  \n `lpszIndex`  \n [in] String in the format `\"\\\\N\"`, where `N` is the integer index of the TYPELIB resource.  \n  \n### Return Value  \n A standard HRESULT value.  \n  \n### Remarks  \n Adds information about a type library to the system registry.  \n  \n If the module instance contains multiple type libraries, use the second version of this method to specify which type library should be used.  \n  \n##  <a name=\"ccommodule__revokeclassobjects\"></a>  CComModule::RevokeClassObjects  \n As of ATL 7.0, `CComModule` is obsolete: see [ATL Module Classes](../../atl/atl-module-classes.md) for more details.  \n  \n```\nHRESULT RevokeClassObjects() throw();\n```  \n  \n### Return Value  \n A standard HRESULT value.  \n  \n### Remarks  \n Removes the class object. This method                        is only available to EXEs.  \n  \n##  <a name=\"ccommodule__term\"></a>  CComModule::Term  \n As of ATL 7.0, `CComModule` is obsolete: see [ATL Module Classes](../../atl/atl-module-classes.md) for more details.  \n  \n```\nvoid Term() throw();\n```  \n  \n### Remarks  \n Releases all data members.  \n  \n##  <a name=\"ccommodule__unregisterclasshelper\"></a>  CComModule::UnregisterClassHelper  \n As of ATL 7.0, `CComModule` is obsolete: see [ATL Module Classes](../../atl/atl-module-classes.md) for more details.  \n  \n```\nATL_DEPRECATED HRESULT UnregisterClassHelper(const CLSID& clsid,\n    LPCTSTR lpszProgID,\n    LPCTSTR lpszVerIndProgID);\n```  \n  \n### Parameters  \n `clsid`  \n [in] The CLSID of the object to be unregistered.  \n  \n `lpszProgID`  \n [in] The ProgID associated with the object.  \n  \n `lpszVerIndProgID`  \n [in] The version-independent ProgID associated with the object.  \n  \n### Return Value  \n A standard HRESULT value.  \n  \n### Remarks  \n Removes an object's standard class registration from the system registry.  \n  \n The [UpdateRegistryClass](#ccommodule__updateregistryclass) method calls `UnregisterClassHelper`.  \n  \n##  <a name=\"ccommodule__unregisterserver\"></a>  CComModule::UnregisterServer  \n As of ATL 7.0, `CComModule` is obsolete: see [ATL Module Classes](../../atl/atl-module-classes.md) for more details.  \n  \n```\nHRESULT UnregisterServer(const CLSID* pCLSID = NULL) throw ();\ninline HRESULT UnregisterServer(BOOL bUnRegTypeLib,  const CLSID* pCLSID = NULL) throw ();\n```  \n  \n### Parameters  \n `bUnRegTypeLib`  \n If **TRUE**, the type library is also unregistered.  \n  \n `pCLSID`  \n Points to the CLSID of the object to be unregistered. If **NULL** (the default value), all objects in the object map will be unregistered.  \n  \n### Return Value  \n A standard HRESULT value.  \n  \n### Remarks  \n Depending on the `pCLSID` parameter, unregisters either a single class object or all objects in the object map.  \n  \n `UnregisterServer` will be called automatically by **DLLUnregisterServer** for a DLL or by `WinMain` for an EXE run with the **/UnregServer** command line option.  \n  \n See [OBJECT_ENTRY_AUTO](http://msdn.microsoft.com/library/5a0f4fa5-0905-43d2-b337-e22f979c9e4c) for information on how to add an entry to the object map.  \n  \n##  <a name=\"ccommodule__updateregistryclass\"></a>  CComModule::UpdateRegistryClass  \n As of ATL 7.0, `CComModule` is obsolete: see [ATL Module Classes](../../atl/atl-module-classes.md) for more details.  \n  \n```\nATL_DEPRECATED HRESULT UpdateRegistryClass(const CLSID& clsid,\n    LPCTSTR lpszProgID,\n    LPCTSTR lpszVerIndProgID,\n    UINT nDescID,\n    DWORD dwFlags,\n    BOOL bRegister);\n\n    ATL_DEPRECATED HRESULT UpdateRegistryClass(const CLSID& clsid,\n    LPCTSTR lpszProgID,\n    LPCTSTR lpszVerIndProgID,\n    LPCTSTR szDesc,\n    DWORD dwFlags,\n    BOOL bRegister);\n```  \n  \n### Parameters  \n `clsid`  \n The CLSID of the object to be registered or unregistered.  \n  \n `lpszProgID`  \n The ProgID associated with the object.  \n  \n `lpszVerIndProgID`  \n The version-independent ProgID associated with the object.  \n  \n `nDescID`  \n The identifier of the string resource for the object's description.  \n  \n `szDesc`  \n A string containing the object's description.  \n  \n `dwFlags`  \n Specifies the threading model to enter in the registry. Possible values are **THREADFLAGS_APARTMENT**, **THREADFLAGS_BOTH**, or **AUTPRXFLAG**.  \n  \n `bRegister`  \n Indicates whether the object should be registered.  \n  \n### Return Value  \n A standard HRESULT value.  \n  \n### Remarks  \n If `bRegister` is **TRUE**, this method enters the object's standard class registration in the system registry.  \n  \n If `bRegister` is **FALSE**, it removes the object's registration.  \n  \n Depending on the value of `bRegister`, `UpdateRegistryClass` calls either [RegisterClassHelper](#ccommodule__registerclasshelper) or [UnregisterClassHelper](#ccommodule__unregisterclasshelper).  \n  \n By specifying the [DECLARE_REGISTRY](http://msdn.microsoft.com/library/89b8949b-5c27-4a9c-8a51-ad276bba3a54) macro, `UpdateRegistryClass` will be invoked automatically when your object map is processed.  \n  \n##  <a name=\"ccommodule__updateregistryfromresourced\"></a>  CComModule::UpdateRegistryFromResourceD  \n As of ATL 7.0, `CComModule` is obsolete: see [ATL Module Classes](../../atl/atl-module-classes.md) for more details.  \n  \n```\nvirtual HRESULT UpdateRegistryFromResourceD(LPCTSTR lpszRes,\n    BOOL bRegister,\n    struct _ATL_REGMAP_ENTRY* pMapEntries = NULL) throw();\nvirtual HRESULT UpdateRegistryFromResourceD(UINT nResID,\n    BOOL bRegister,\n    struct _ATL_REGMAP_ENTRY* pMapEntries = NULL) throw ();\n```  \n  \n### Parameters  \n `lpszRes`  \n [in] A resource name.  \n  \n `nResID`  \n [in] A resource ID.  \n  \n `bRegister`  \n [in] Indicates whether the object should be registered.  \n  \n `pMapEntries`  \n [in] A pointer to the replacement map storing values associated with the script's replaceable parameters. ATL automatically uses `%MODULE%`. To use additional replaceable parameters, see the Remarks for details. Otherwise, use the **NULL** default value.  \n  \n### Return Value  \n A standard HRESULT value.  \n  \n### Remarks  \n Runs the script contained in the resource specified by `lpszRes` or `nResID`.  \n  \n If `bRegister` is **TRUE**, this method registers the object in the system registry; otherwise, it unregisters the object.  \n  \n By specifying the [DECLARE_REGISTRY_RESOURCE](http://msdn.microsoft.com/library/7ac11498-8ee2-4156-8df2-7076f7ddda8b) or [DECLARE_REGISTRY_RESOURCEID](http://msdn.microsoft.com/library/65bf3576-5396-416e-ba48-e14b3236c49b) macro, `UpdateRegistryFromResourceD` will be invoked automatically when your object map is processed.  \n  \n> [!NOTE]\n>  To substitute replacement values at run time, do not specify the `DECLARE_REGISTRY_RESOURCE` or `DECLARE_REGISTRY_RESOURCEID` macro. Instead, create an array of **_ATL_REGMAP_ENTRIES** structures, where each entry contains a variable placeholder paired with a value to replace the placeholder at run time. Then call `UpdateRegistryFromResourceD`, passing the array for the `pMapEntries` parameter. This adds all the replacement values in the **_ATL_REGMAP_ENTRIES** structures to the Registrar's replacement map.  \n  \n> [!NOTE]\n>  To statically link to the ATL Registry Component (Registrar), see [UpdateRegistryFromResourceS](#ccommodule__updateregistryfromresources).  \n  \n For more information about replaceable parameters and scripting, see the article [The ATL Registry Component (Registrar)](../../atl/atl-registry-component-registrar.md).  \n  \n##  <a name=\"ccommodule__updateregistryfromresources\"></a>  CComModule::UpdateRegistryFromResourceS  \n As of ATL 7.0, `CComModule` is obsolete: see [ATL Module Classes](../../atl/atl-module-classes.md) for more details.  \n  \n```\nvirtual HRESULT UpdateRegistryFromResourceS(LPCTSTR lpszRes,\n    BOOL bRegister,\n    struct _ATL_REGMAP_ENTRY* pMapEntries = NULL) throw();\nvirtual HRESULT UpdateRegistryFromResourceS(UINT nResID,\n    BOOL bRegister,\n    struct _ATL_REGMAP_ENTRY* pMapEntries = NULL) throw();\n```  \n  \n### Parameters  \n `lpszRes`  \n [in] A resource name.  \n  \n `nResID`  \n [in] A resource ID.  \n  \n `bRegister`  \n [in] Indicates whether the resource script should be registered.  \n  \n `pMapEntries`  \n [in] A pointer to the replacement map storing values associated with the script's replaceable parameters. ATL automatically uses `%MODULE%`. To use additional replaceable parameters, see the Remarks for details. Otherwise, use the **NULL** default value.  \n  \n### Return Value  \n A standard HRESULT value.  \n  \n### Remarks  \n Similar to [UpdateRegistryFromResourceD](#ccommodule__updateregistryfromresourced) except `UpdateRegistryFromResourceS` creates a static link to the ATL Registry Component (Registrar).  \n  \n `UpdateRegistryFromResourceS` will be invoked automatically when your object map is processed, provided you add `#define _ATL_STATIC_REGISTRY` to your stdafx.h.  \n  \n> [!NOTE]\n>  To substitute replacement values at run time, do not specify the [DECLARE_REGISTRY_RESOURCE](http://msdn.microsoft.com/library/7ac11498-8ee2-4156-8df2-7076f7ddda8b) or [DECLARE_REGISTRY_RESOURCEID](http://msdn.microsoft.com/library/65bf3576-5396-416e-ba48-e14b3236c49b) macro. Instead, create an array of **_ATL_REGMAP_ENTRIES** structures, where each entry contains a variable placeholder paired with a value to replace the placeholder at run time. Then call `UpdateRegistryFromResourceS`, passing the array for the `pMapEntries` parameter. This adds all the replacement values in the **_ATL_REGMAP_ENTRIES** structures to the Registrar's replacement map.  \n  \n For more information about replaceable parameters and scripting, see the article [The ATL Registry Component (Registrar)](../../atl/atl-registry-component-registrar.md).  \n  \n## See Also  \n [Class Overview](../../atl/atl-class-overview.md)\n"}