{"nodes":[{"pos":[12,44],"content":"__emul, __emulu | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"__emul, __emulu | Microsoft Docs","pos":[0,32]}]},{"content":"__emul, __emulu","pos":[696,711]},{"content":"Microsoft Specific","pos":[714,732]},{"content":"Performs multiplications that overflow what a 32-bit integer can hold.","pos":[741,811]},{"content":"Syntax","pos":[820,826]},{"content":"Parameters","pos":[972,982]},{"content":"[in]","pos":[986,990]},{"content":"The first integer operand of the multiplication.","pos":[998,1046]},{"content":"[in]","pos":[1053,1057]},{"content":"The second integer operand of the multiplication.","pos":[1065,1114]},{"content":"Return Value","pos":[1123,1135]},{"content":"The result of the multiplication.","pos":[1139,1172]},{"content":"Requirements","pos":[1181,1193]},{"content":"Intrinsic","pos":[1200,1209]},{"content":"Architecture","pos":[1210,1222]},{"pos":[1275,1279],"content":"x86,"},{"pos":[1358,1362],"content":"x86,"},{"pos":[1434,1461],"content":"<bpt id=\"p1\">**</bpt>Header file<ept id=\"p1\">**</ept> <ph id=\"ph1\">\\&lt;</ph>intrin.h&gt;","source":"**Header file** \\<intrin.h>"},{"content":"Remarks","pos":[1470,1477]},{"pos":[1490,1599],"content":"takes two 32-bit signed values and returns the result of the multiplication as a 64-bit signed integer value."},{"pos":[1616,1737],"content":"takes two 32-bit unsigned integer values and returns the result of the multiplication as a 64-bit unsigned integer value."},{"content":"Example","pos":[1746,1753]},{"content":"Output","pos":[2374,2380]},{"content":"END Microsoft Specific","pos":[2482,2504]},{"content":"See Also","pos":[2513,2521]},{"content":"Compiler Intrinsics","pos":[2526,2545]}],"content":"---\ntitle: \"__emul, __emulu | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"__emulu_cpp\"\n  - \"__emul\"\n  - \"__emul_cpp\"\n  - \"__emulu\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"__emul intrinsic\"\n  - \"__emulu intrinsic\"\nms.assetid: 79545236-cca2-40b8-a4e1-8abce9b26311\ncaps.latest.revision: 10\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"ru-ru\"\n  - \"zh-cn\"\n  - \"zh-tw\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"tr-tr\"\n---\n# __emul, __emulu\n**Microsoft Specific**  \n  \n Performs multiplications that overflow what a 32-bit integer can hold.  \n  \n## Syntax  \n  \n```  \n__int64 __emul(  \n   int a,  \n   int b  \n);  \nunsigned __int64 __emulu(  \n   unsigned int a,  \n   unsigned int b  \n);  \n```  \n  \n#### Parameters  \n [in] `a`  \n The first integer operand of the multiplication.  \n  \n [in] `b`  \n The second integer operand of the multiplication.  \n  \n## Return Value  \n The result of the multiplication.  \n  \n## Requirements  \n  \n|Intrinsic|Architecture|  \n|---------------|------------------|  \n|`__emul`|x86, [!INCLUDE[vcprx64](../assembler/inline/includes/vcprx64_md.md)]|  \n|`__emulu`|x86, [!INCLUDE[vcprx64](../assembler/inline/includes/vcprx64_md.md)]|  \n  \n **Header file** \\<intrin.h>  \n  \n## Remarks  \n `__emul` takes two 32-bit signed values and returns the result of the multiplication as a 64-bit signed integer value.  \n  \n `__emulu` takes two 32-bit unsigned integer values and returns the result of the multiplication as a 64-bit unsigned integer value.  \n  \n## Example  \n  \n```  \n// emul.cpp  \n// compile with: /EHsc  \n// processor: x86, x64  \n#include <iostream>  \n#include <intrin.h>  \nusing namespace std;  \n  \n#pragma intrinsic(__emul)  \n#pragma intrinsic(__emulu)  \n  \nint main()  \n{  \n   int a = -268435456;   \n   int b = 2;   \n  \n   __int64 result = __emul(a, b);  \n  \n   cout << a << \" * \" << b << \" = \" << result << endl;  \n  \n   unsigned int ua = 0xFFFFFFFF; // Dec value: 4294967295  \n   unsigned int ub = 0xF000000;  // Dec value: 251658240  \n  \n   unsigned __int64 uresult = __emulu(ua, ub);  \n  \n   cout << ua << \" * \" << ub << \" = \" << uresult << endl;  \n  \n}  \n```  \n  \n## Output  \n  \n```  \n-268435456 * 2 = -536870912  \n4294967295 * 251658240 = 1080863910317260800  \n```  \n  \n### END Microsoft Specific  \n  \n## See Also  \n [Compiler Intrinsics](../intrinsics/compiler-intrinsics.md)"}