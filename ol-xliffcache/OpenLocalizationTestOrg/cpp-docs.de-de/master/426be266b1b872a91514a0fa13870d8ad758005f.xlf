<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-04506c2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">426be266b1b872a91514a0fa13870d8ad758005f</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\c-runtime-library\reference\fflush.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c07ec36630949ac4dca95b31256f1011d63097f6</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">eeb24594eeaf389699ce5fc22ec7fc8356add185</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>fflush | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>fflush</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Flushes a stream.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Pointer to <ph id="ph1">`FILE`</ph> structure.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>returns 0 if the buffer was successfully flushed.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The value 0 is also returned in cases in which the specified stream has no buffer or is open for reading only.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>A return value of <ph id="ph1">`EOF`</ph> indicates an error.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`fflush`</ph> returns <ph id="ph2">`EOF`</ph>, data may have been lost due to a write failure.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>When setting up a critical error handler, it is safest to turn buffering off with the <ph id="ph1">`setvbuf`</ph> function or to use low-level I/O routines such as <ph id="ph2">`_open`</ph>, <ph id="ph3">`_close`</ph>, and <ph id="ph4">`_write`</ph> instead of the stream I/O functions.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`fflush`</ph> function flushes the stream <ph id="ph2">`stream`</ph>.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>If the stream was opened in write mode, or it was opened in update mode and the last operation was a write, the contents of the stream buffer are written to the underlying file or device and the buffer is discarded.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>If the stream was opened in read mode, or if the stream has no buffer, the call to <ph id="ph1">`fflush`</ph> has no effect, and any buffer is retained.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>A call to <ph id="ph1">`fflush`</ph> negates the effect of any prior call to <ph id="ph2">`ungetc`</ph> for the stream.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The stream remains open after the call.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`stream`</ph> is <ph id="ph2">`NULL`</ph>, the behavior is the same as a call to <ph id="ph3">`fflush`</ph> on each open stream.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>All streams opened in write mode and all streams opened in update mode where the last operation was a write are flushed.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The call has no effect on other streams.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Buffers are normally maintained by the operating system, which determines the optimal time to write the data automatically to disk: when a buffer is full, when a stream is closed, or when a program terminates normally without closing the stream.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The commit-to-disk feature of the run-time library lets you ensure that critical data is written directly to disk rather than to the operating-system buffers.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Without rewriting an existing program, you can enable this feature by linking the program's object files with COMMODE.OBJ.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>In the resulting executable file, calls to <ph id="ph1">`_flushall`</ph> write the contents of all buffers to disk.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Only <ph id="ph1">`_flushall`</ph> and <ph id="ph2">`fflush`</ph> are affected by COMMODE.OBJ.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>For information about controlling the commit-to-disk feature, see <bpt id="p1">[</bpt>Stream I/O<ept id="p1">](../../c-runtime-library/stream-i-o.md)</ept>, <bpt id="p2">[</bpt>fopen<ept id="p2">](../../c-runtime-library/reference/fopen-wfopen.md)</ept>, and <bpt id="p3">[</bpt>_fdopen<ept id="p3">](../../c-runtime-library/reference/fdopen-wfdopen.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>This function locks the calling thread and is therefore thread-safe.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>For a non-locking version, see <ph id="ph1">`_fflush_nolock`</ph>.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Requirements</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Function</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Required header</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>stdio.h&gt;</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>For additional compatibility information, see <bpt id="p1">[</bpt>Compatibility<ept id="p1">](../../c-runtime-library/compatibility.md)</ept> in the Introduction.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>.NET Framework Equivalent</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>System::IO::FileStream::Flush</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Stream I/O</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>fclose, _fcloseall</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>_flushall</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>setvbuf</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>