{"nodes":[{"pos":[12,42],"content":"message Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"message Class | Microsoft Docs","pos":[0,30]}]},{"pos":[613,626],"content":"message Class","linkify":"message Class","nodes":[{"content":"message Class","pos":[0,13]}]},{"content":"The basic message envelope containing the data payload being passed between messaging blocks.","pos":[627,720]},{"pos":[729,735],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[841,851],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"The data type of the payload within the message.","pos":[862,910]},{"pos":[919,926],"content":"Members","linkify":"Members","nodes":[{"content":"Members","pos":[0,7]}]},{"pos":[936,951],"content":"Public Typedefs","linkify":"Public Typedefs","nodes":[{"content":"Public Typedefs","pos":[0,15]}]},{"content":"Name","pos":[958,962]},{"content":"Description","pos":[963,974]},{"pos":[1019,1040],"content":"A type alias for <ph id=\"ph1\">`T`</ph>.","source":"A type alias for `T`."},{"pos":[1051,1070],"content":"Public Constructors","linkify":"Public Constructors","nodes":[{"content":"Public Constructors","pos":[0,19]}]},{"content":"Name","pos":[1077,1081]},{"content":"Description","pos":[1082,1093]},{"pos":[1131,1168],"content":"<bpt id=\"p1\">[</bpt>message::message Constructor<ept id=\"p1\">](#ctor)</ept>","source":"[message::message Constructor](#ctor)"},{"content":"Overloaded.","pos":[1169,1180]},{"content":"Constructs a <ph id=\"ph1\">`message`</ph> object.","pos":[1181,1211],"source":" Constructs a `message` object."},{"pos":[1216,1253],"content":"<bpt id=\"p1\">[</bpt>message::~message Destructor<ept id=\"p1\">](#dtor)</ept>","source":"[message::~message Destructor](#dtor)"},{"pos":[1254,1284],"content":"Destroys the <ph id=\"ph1\">`message`</ph> object.","source":"Destroys the `message` object."},{"pos":[1295,1309],"content":"Public Methods","linkify":"Public Methods","nodes":[{"content":"Public Methods","pos":[0,14]}]},{"content":"Name","pos":[1316,1320]},{"content":"Description","pos":[1321,1332]},{"pos":[1370,1405],"content":"<bpt id=\"p1\">[</bpt>message::add_ref Method<ept id=\"p1\">](#add_ref)</ept>","source":"[message::add_ref Method](#add_ref)"},{"content":"Adds to the reference count for the <ph id=\"ph1\">`message`</ph> object.","pos":[1406,1459],"source":"Adds to the reference count for the `message` object."},{"content":"Used for message blocks that need reference counting to determine message lifetimes.","pos":[1460,1544]},{"pos":[1549,1582],"content":"<bpt id=\"p1\">[</bpt>message::msg_id Method<ept id=\"p1\">](#msg_id)</ept>","source":"[message::msg_id Method](#msg_id)"},{"pos":[1583,1622],"content":"Returns the ID of the <ph id=\"ph1\">`message`</ph> object.","source":"Returns the ID of the `message` object."},{"pos":[1627,1668],"content":"<bpt id=\"p1\">[</bpt>message::remove_ref Method<ept id=\"p1\">](#remove_ref)</ept>","source":"[message::remove_ref Method](#remove_ref)"},{"content":"Subtracts from the reference count for the <ph id=\"ph1\">`message`</ph> object.","pos":[1669,1729],"source":"Subtracts from the reference count for the `message` object."},{"content":"Used for message blocks that need reference counting to determine message lifetimes.","pos":[1730,1814]},{"pos":[1825,1844],"content":"Public Data Members","linkify":"Public Data Members","nodes":[{"content":"Public Data Members","pos":[0,19]}]},{"content":"Name","pos":[1851,1855]},{"content":"Description","pos":[1856,1867]},{"pos":[1905,1945],"content":"<bpt id=\"p1\">[</bpt>message::payload Data Member<ept id=\"p1\">](#payload)</ept>","source":"[message::payload Data Member](#payload)"},{"pos":[1946,1982],"content":"The payload of the <ph id=\"ph1\">`message`</ph> object.","source":"The payload of the `message` object."},{"pos":[1992,1999],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[2003,2116],"content":"For more information, see <bpt id=\"p1\">[</bpt>Asynchronous Message Blocks<ept id=\"p1\">](../../../parallel/concrt/asynchronous-message-blocks.md)</ept>.","source":"For more information, see [Asynchronous Message Blocks](../../../parallel/concrt/asynchronous-message-blocks.md)."},{"pos":[2125,2146],"content":"Inheritance Hierarchy","linkify":"Inheritance Hierarchy","nodes":[{"content":"Inheritance Hierarchy","pos":[0,21]}]},{"pos":[2168,2180],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[2184,2204],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> agents.h","source":"**Header:** agents.h"},{"pos":[2211,2237],"content":"<bpt id=\"p1\">**</bpt>Namespace:<ept id=\"p1\">**</ept> concurrency","source":"**Namespace:** concurrency"},{"pos":[2247,2294],"content":"<bpt id=\"p1\">&lt;a name=\"add_ref\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  message::add_ref Method","linkify":"<a name=\"add_ref\"></a>  message::add_ref Method","source":"<a name=\"add_ref\"></a>  message::add_ref Method"},{"content":"Adds to the reference count for the <ph id=\"ph1\">`message`</ph> object.","pos":[2298,2351],"source":"Adds to the reference count for the `message` object."},{"content":"Used for message blocks that need reference counting to determine message lifetimes.","pos":[2352,2436]},{"pos":[2475,2487],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The new value of the reference count.","pos":[2491,2528]},{"pos":[2538,2587],"content":"<bpt id=\"p1\">&lt;a name=\"ctor\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  message::message Constructor","linkify":"<a name=\"ctor\"></a>  message::message Constructor","source":"<a name=\"ctor\"></a>  message::message Constructor"},{"pos":[2591,2621],"content":"Constructs a <ph id=\"ph1\">`message`</ph> object.","source":"Constructs a `message` object."},{"pos":[2809,2819],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"The payload of this message.","pos":[2831,2859]},{"content":"The unique ID of this message.","pos":[2875,2905]},{"content":"A reference or pointer to a <ph id=\"ph1\">`message`</ph> object.","pos":[2922,2967],"source":" A reference or pointer to a `message` object."},{"pos":[2977,2984],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[2988,3188],"content":"The constructor that takes a pointer to a <ph id=\"ph1\">`message`</ph> object as an argument throws an <bpt id=\"p1\">[</bpt>invalid_argument<ept id=\"p1\">](../../../standard-library/invalid-argument-class.md)</ept> exception if the parameter <ph id=\"ph2\">`_Msg`</ph> is <ph id=\"ph3\">`NULL`</ph>.","source":"The constructor that takes a pointer to a `message` object as an argument throws an [invalid_argument](../../../standard-library/invalid-argument-class.md) exception if the parameter `_Msg` is `NULL`."},{"pos":[3198,3247],"content":"<bpt id=\"p1\">&lt;a name=\"dtor\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  message::~message Destructor","linkify":"<a name=\"dtor\"></a>  message::~message Destructor","source":"<a name=\"dtor\"></a>  message::~message Destructor"},{"pos":[3251,3281],"content":"Destroys the <ph id=\"ph1\">`message`</ph> object.","source":"Destroys the `message` object."},{"pos":[3324,3369],"content":"<bpt id=\"p1\">&lt;a name=\"msg_id\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  message::msg_id Method","linkify":"<a name=\"msg_id\"></a>  message::msg_id Method","source":"<a name=\"msg_id\"></a>  message::msg_id Method"},{"pos":[3373,3412],"content":"Returns the ID of the <ph id=\"ph1\">`message`</ph> object.","source":"Returns the ID of the `message` object."},{"pos":[3475,3487],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[3491,3545],"content":"The <ph id=\"ph1\">`runtime_object_identity`</ph> of the <ph id=\"ph2\">`message`</ph> object.","source":"The `runtime_object_identity` of the `message` object."},{"pos":[3555,3607],"content":"<bpt id=\"p1\">&lt;a name=\"payload\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  message::payload Data Member","linkify":"<a name=\"payload\"></a>  message::payload Data Member","source":"<a name=\"payload\"></a>  message::payload Data Member"},{"pos":[3611,3647],"content":"The payload of the <ph id=\"ph1\">`message`</ph> object.","source":"The payload of the `message` object."},{"pos":[3687,3740],"content":"<bpt id=\"p1\">&lt;a name=\"remove_ref\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  message::remove_ref Method","linkify":"<a name=\"remove_ref\"></a>  message::remove_ref Method","source":"<a name=\"remove_ref\"></a>  message::remove_ref Method"},{"content":"Subtracts from the reference count for the <ph id=\"ph1\">`message`</ph> object.","pos":[3744,3804],"source":"Subtracts from the reference count for the `message` object."},{"content":"Used for message blocks that need reference counting to determine message lifetimes.","pos":[3805,3889]},{"pos":[3931,3943],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The new value of the reference count.","pos":[3947,3984]},{"pos":[3993,4001],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"pos":[4005,4054],"content":"<bpt id=\"p1\">[</bpt>concurrency Namespace<ept id=\"p1\">](concurrency-namespace.md)</ept>","source":"[concurrency Namespace](concurrency-namespace.md)"}],"content":"---\ntitle: \"message Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"agents/concurrency::message\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"message class\"\nms.assetid: 3e1f3505-6c0c-486c-8191-666d0880ec62\ncaps.latest.revision: 21\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# message Class\nThe basic message envelope containing the data payload being passed between messaging blocks.  \n  \n## Syntax  \n  \n```\ntemplate<class T>\nclass message : public ::Concurrency::details::_Runtime_object;\n```  \n  \n#### Parameters  \n `T`  \n The data type of the payload within the message.  \n  \n## Members  \n  \n### Public Typedefs  \n  \n|Name|Description|  \n|----------|-----------------|  \n|`type`|A type alias for `T`.|  \n  \n### Public Constructors  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[message::message Constructor](#ctor)|Overloaded. Constructs a `message` object.|  \n|[message::~message Destructor](#dtor)|Destroys the `message` object.|  \n  \n### Public Methods  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[message::add_ref Method](#add_ref)|Adds to the reference count for the `message` object. Used for message blocks that need reference counting to determine message lifetimes.|  \n|[message::msg_id Method](#msg_id)|Returns the ID of the `message` object.|  \n|[message::remove_ref Method](#remove_ref)|Subtracts from the reference count for the `message` object. Used for message blocks that need reference counting to determine message lifetimes.|  \n  \n### Public Data Members  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[message::payload Data Member](#payload)|The payload of the `message` object.|  \n  \n## Remarks  \n For more information, see [Asynchronous Message Blocks](../../../parallel/concrt/asynchronous-message-blocks.md).  \n  \n## Inheritance Hierarchy  \n `message`  \n  \n## Requirements  \n **Header:** agents.h  \n  \n **Namespace:** concurrency  \n  \n##  <a name=\"add_ref\"></a>  message::add_ref Method  \n Adds to the reference count for the `message` object. Used for message blocks that need reference counting to determine message lifetimes.  \n  \n```\nlong add_ref();\n```  \n  \n### Return Value  \n The new value of the reference count.  \n  \n##  <a name=\"ctor\"></a>  message::message Constructor  \n Constructs a `message` object.  \n  \n```\nmessage(\n    T const& _P);\n\nmessage(\n    T const& _P,\n    runtime_object_identity _Id);\n\nmessage(\n    message const& _Msg);\n\nmessage(\n    _In_ message const* _Msg);\n```  \n  \n### Parameters  \n `_P`  \n The payload of this message.  \n  \n `_Id`  \n The unique ID of this message.  \n  \n `_Msg`  \n A reference or pointer to a `message` object.  \n  \n### Remarks  \n The constructor that takes a pointer to a `message` object as an argument throws an [invalid_argument](../../../standard-library/invalid-argument-class.md) exception if the parameter `_Msg` is `NULL`.  \n  \n##  <a name=\"dtor\"></a>  message::~message Destructor  \n Destroys the `message` object.  \n  \n```\nvirtual ~message();\n```  \n  \n##  <a name=\"msg_id\"></a>  message::msg_id Method  \n Returns the ID of the `message` object.  \n  \n```\nruntime_object_identity msg_id() const;\n```  \n  \n### Return Value  \n The `runtime_object_identity` of the `message` object.  \n  \n##  <a name=\"payload\"></a>  message::payload Data Member  \n The payload of the `message` object.  \n  \n```\nT const payload;\n```  \n  \n##  <a name=\"remove_ref\"></a>  message::remove_ref Method  \n Subtracts from the reference count for the `message` object. Used for message blocks that need reference counting to determine message lifetimes.  \n  \n```\nlong remove_ref();\n```  \n  \n### Return Value  \n The new value of the reference count.  \n  \n## See Also  \n [concurrency Namespace](concurrency-namespace.md)\n"}