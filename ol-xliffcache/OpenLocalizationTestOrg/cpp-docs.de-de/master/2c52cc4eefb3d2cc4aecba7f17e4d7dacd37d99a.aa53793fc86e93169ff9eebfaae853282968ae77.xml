{"nodes":[{"pos":[12,73],"content":"Type-Safe Access to Controls in a Dialog Box | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Type-Safe Access to Controls in a Dialog Box | Microsoft Docs","pos":[0,61]}]},{"content":"Type-Safe Access to Controls in a Dialog Box","pos":[916,960]},{"content":"The controls in a dialog box can use the interfaces of MFC control classes such as <ph id=\"ph1\">`CListBox`</ph> and <ph id=\"ph2\">`CEdit`</ph>.","pos":[961,1067],"source":"The controls in a dialog box can use the interfaces of MFC control classes such as `CListBox` and `CEdit`."},{"content":"You can create a control object and attach it to a dialog control.","pos":[1068,1134]},{"content":"Then you can access the control through its class interface, calling member functions to operate on the control.","pos":[1135,1247]},{"content":"The methods described here are designed to give you type-safe access to a control.","pos":[1248,1330]},{"content":"This is especially useful for controls such as edit boxes and list boxes.","pos":[1331,1404]},{"pos":[1411,1556],"content":"There are two approaches to making a connection between a control in a dialog box and a C++ control member variable in a <ph id=\"ph1\">`CDialog`</ph>-derived class:","source":"There are two approaches to making a connection between a control in a dialog box and a C++ control member variable in a `CDialog`-derived class:"},{"content":"Without Code Wizards","pos":[1567,1587]},{"content":"With Code Wizards","pos":[1660,1677]},{"content":"See Also","pos":[1745,1753]},{"content":"Dialog Boxes","pos":[1758,1770]}],"content":"---\ntitle: \"Type-Safe Access to Controls in a Dialog Box | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"common controls [C++], in dialog boxes\"\n  - \"Windows common controls [C++], in dialog boxes\"\n  - \"safe access to dialog box controls\"\n  - \"dialog boxes [C++], type-safe access to controls\"\n  - \"controls [MFC], accessing in dialog boxes\"\n  - \"type-safe access to dialog box controls\"\n  - \"MFC dialog boxes, type-safe access to controls\"\nms.assetid: 67021025-dd93-4d6a-8bed-a1348fe50685\ncaps.latest.revision: 9\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Type-Safe Access to Controls in a Dialog Box\nThe controls in a dialog box can use the interfaces of MFC control classes such as `CListBox` and `CEdit`. You can create a control object and attach it to a dialog control. Then you can access the control through its class interface, calling member functions to operate on the control. The methods described here are designed to give you type-safe access to a control. This is especially useful for controls such as edit boxes and list boxes.  \n  \n There are two approaches to making a connection between a control in a dialog box and a C++ control member variable in a `CDialog`-derived class:  \n  \n-   [Without Code Wizards](../mfc/type-safe-access-to-controls-without-code-wizards.md)  \n  \n-   [With Code Wizards](../mfc/type-safe-access-to-controls-with-code-wizards.md)  \n  \n## See Also  \n [Dialog Boxes](../mfc/dialog-boxes.md)\n\n"}