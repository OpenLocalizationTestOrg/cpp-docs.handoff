{"nodes":[{"pos":[12,46],"content":"raw_method_prefix | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"raw_method_prefix | Microsoft Docs","pos":[0,34]}]},{"content":"raw_method_prefix","pos":[628,645]},{"content":"C++ Specific","pos":[648,660]},{"content":"Specifies a different prefix to avoid name collisions.","pos":[669,723]},{"content":"Syntax","pos":[732,738]},{"content":"Parameters","pos":[794,804]},{"content":"The prefix to be used.","pos":[820,842]},{"content":"Remarks","pos":[851,858]},{"pos":[862,1044],"content":"Low-level properties and methods are exposed by member functions named with a default prefix of <bpt id=\"p1\">**</bpt>raw_<ept id=\"p1\">**</ept> to avoid name collisions with the high-level error-handling member functions.","source":"Low-level properties and methods are exposed by member functions named with a default prefix of **raw_** to avoid name collisions with the high-level error-handling member functions."},{"pos":[1052,1449],"content":"[!NOTE]\n The effects of the `raw_method_prefix` attribute will not be changed by the presence of the [raw_interfaces_only](#_predir_raw_interfaces_only) attribute. The `raw_method_prefix` always takes precedence over `raw_interfaces_only` in specifying a prefix. If both attributes are used in the same `#import` statement, then the prefix specified by the `raw_method_prefix` attribute is used.","leadings":["","> "],"nodes":[{"content":" The effects of the `raw_method_prefix` attribute will not be changed by the presence of the [raw_interfaces_only](#_predir_raw_interfaces_only) attribute. The `raw_method_prefix` always takes precedence over `raw_interfaces_only` in specifying a prefix. If both attributes are used in the same `#import` statement, then the prefix specified by the `raw_method_prefix` attribute is used.","pos":[8,395],"nodes":[{"content":"The effects of the <ph id=\"ph1\">`raw_method_prefix`</ph> attribute will not be changed by the presence of the <bpt id=\"p1\">[</bpt>raw_interfaces_only<ept id=\"p1\">](#_predir_raw_interfaces_only)</ept> attribute.","pos":[1,155],"source":" The effects of the `raw_method_prefix` attribute will not be changed by the presence of the [raw_interfaces_only](#_predir_raw_interfaces_only) attribute."},{"content":"The <ph id=\"ph1\">`raw_method_prefix`</ph> always takes precedence over <ph id=\"ph2\">`raw_interfaces_only`</ph> in specifying a prefix.","pos":[156,254],"source":" The `raw_method_prefix` always takes precedence over `raw_interfaces_only` in specifying a prefix."},{"content":"If both attributes are used in the same <ph id=\"ph1\">`#import`</ph> statement, then the prefix specified by the <ph id=\"ph2\">`raw_method_prefix`</ph> attribute is used.","pos":[255,387],"source":" If both attributes are used in the same `#import` statement, then the prefix specified by the `raw_method_prefix` attribute is used."}]}]},{"content":"END C++ Specific","pos":[1458,1474]},{"content":"See Also","pos":[1485,1493]},{"content":"import Attributes","pos":[1499,1516]},{"content":"import Directive","pos":[1571,1587]}],"content":"---\ntitle: \"raw_method_prefix | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"raw_method_prefix\"\ndev_langs: \n  - \"C++\"\n  - \"C\"\nhelpviewer_keywords: \n  - \"raw_method_prefix attribute\"\nms.assetid: 71490313-af78-4bb2-b28a-eee67950d30b\ncaps.latest.revision: 4\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# raw_method_prefix\n**C++ Specific**  \n  \n Specifies a different prefix to avoid name collisions.  \n  \n## Syntax  \n  \n```  \nraw_method_prefix(\"Prefix\")  \n```  \n  \n#### Parameters  \n `Prefix`  \n The prefix to be used.  \n  \n## Remarks  \n Low-level properties and methods are exposed by member functions named with a default prefix of **raw_** to avoid name collisions with the high-level error-handling member functions.  \n  \n> [!NOTE]\n>  The effects of the `raw_method_prefix` attribute will not be changed by the presence of the [raw_interfaces_only](#_predir_raw_interfaces_only) attribute. The `raw_method_prefix` always takes precedence over `raw_interfaces_only` in specifying a prefix. If both attributes are used in the same `#import` statement, then the prefix specified by the `raw_method_prefix` attribute is used.  \n  \n **END C++ Specific**  \n  \n## See Also  \n [#import Attributes](../preprocessor/hash-import-attributes-cpp.md)   \n [#import Directive](../preprocessor/hash-import-directive-cpp.md)"}