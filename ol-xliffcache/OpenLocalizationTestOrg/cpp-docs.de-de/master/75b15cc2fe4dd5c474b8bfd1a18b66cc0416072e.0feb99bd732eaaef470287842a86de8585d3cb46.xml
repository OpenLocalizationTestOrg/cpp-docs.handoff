{"nodes":[{"pos":[12,70],"content":"Using Property Sheets in Your Application | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Using Property Sheets in Your Application | Microsoft Docs","pos":[0,58]}]},{"content":"Using Property Sheets in Your Application","pos":[854,895]},{"content":"To use a property sheet in your application, complete the following steps:","pos":[896,970]},{"content":"Create a dialog template resource for each property page.","pos":[980,1037]},{"content":"Keep in mind that the user may be switching from one page to another, so lay out each page as consistently as possible.","pos":[1038,1157]},{"content":"The dialog templates for all pages do not have to be the same size.","pos":[1168,1235]},{"content":"The framework uses the size of the largest page to determine how much space to allocate in the property sheet for the property pages.","pos":[1236,1369]},{"content":"When you create the dialog template resource for a property page, you must specify the following styles in the Dialog Properties property sheet:","pos":[1380,1524]},{"pos":[1538,1647],"content":"Set the <bpt id=\"p1\">**</bpt>Caption<ept id=\"p1\">**</ept> edit box on the <bpt id=\"p2\">**</bpt>General<ept id=\"p2\">**</ept> page to the text you wish to appear in the tab for this page.","source":"Set the **Caption** edit box on the **General** page to the text you wish to appear in the tab for this page."},{"pos":[1661,1724],"content":"Set the <bpt id=\"p1\">**</bpt>Style<ept id=\"p1\">**</ept> list box on the <bpt id=\"p2\">**</bpt>Styles<ept id=\"p2\">**</ept> page to <bpt id=\"p3\">**</bpt>Child<ept id=\"p3\">**</ept>.","source":"Set the **Style** list box on the **Styles** page to **Child**."},{"pos":[1738,1801],"content":"Set the <bpt id=\"p1\">**</bpt>Border<ept id=\"p1\">**</ept> list box on the <bpt id=\"p2\">**</bpt>Styles<ept id=\"p2\">**</ept> page to <bpt id=\"p3\">**</bpt>Thin<ept id=\"p3\">**</ept>.","source":"Set the **Border** list box on the **Styles** page to **Thin**."},{"pos":[1815,1889],"content":"Ensure that the <bpt id=\"p1\">**</bpt>Titlebar<ept id=\"p1\">**</ept> check box on the <bpt id=\"p2\">**</bpt>Styles<ept id=\"p2\">**</ept> page is selected.","source":"Ensure that the **Titlebar** check box on the **Styles** page is selected."},{"pos":[1903,1982],"content":"Ensure that the <bpt id=\"p1\">**</bpt>Disabled<ept id=\"p1\">**</ept> check box on the <bpt id=\"p2\">**</bpt>More Styles<ept id=\"p2\">**</ept> page is selected.","source":"Ensure that the **Disabled** check box on the **More Styles** page is selected."},{"content":"Create a <bpt id=\"p1\">[</bpt>CPropertyPage<ept id=\"p1\">](../mfc/reference/cpropertypage-class.md)</ept>-derived class corresponding to each property page dialog template.","pos":[1992,2124],"source":"Create a [CPropertyPage](../mfc/reference/cpropertypage-class.md)-derived class corresponding to each property page dialog template."},{"content":"See <bpt id=\"p1\">[</bpt>Adding a Class<ept id=\"p1\">](../ide/adding-a-class-visual-cpp.md)</ept>.","pos":[2125,2183],"source":" See [Adding a Class](../ide/adding-a-class-visual-cpp.md)."},{"content":"Choose <ph id=\"ph1\">`CPropertyPage`</ph> as the base class.","pos":[2184,2225],"source":" Choose `CPropertyPage` as the base class."},{"content":"Create member variables to hold the values for this property page.","pos":[2235,2301]},{"content":"The process for adding member variables to a property page is exactly the same as adding member variables to a dialog box, because a property page is a specialized dialog box.","pos":[2302,2477]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Defining Member Variables for Dialog Controls<ept id=\"p1\">](../mfc/defining-member-variables-for-dialog-controls.md)</ept>.","pos":[2478,2609],"source":" For more information, see [Defining Member Variables for Dialog Controls](../mfc/defining-member-variables-for-dialog-controls.md)."},{"content":"Construct a <bpt id=\"p1\">[</bpt>CPropertySheet<ept id=\"p1\">](../mfc/reference/cpropertysheet-class.md)</ept> object in your source code.","pos":[2619,2717],"source":"Construct a [CPropertySheet](../mfc/reference/cpropertysheet-class.md) object in your source code."},{"content":"Usually, you construct the <ph id=\"ph1\">`CPropertySheet`</ph> object in the handler for the command that displays the property sheet.","pos":[2718,2833],"source":" Usually, you construct the `CPropertySheet` object in the handler for the command that displays the property sheet."},{"content":"This object represents the entire property sheet.","pos":[2834,2883]},{"content":"If you create a modal property sheet with the <bpt id=\"p1\">[</bpt>DoModal<ept id=\"p1\">](../mfc/reference/cpropertysheet-class.md#cpropertysheet__domodal)</ept> function, the framework supplies three command buttons by default: OK, Cancel, and Apply.","pos":[2884,3095],"source":" If you create a modal property sheet with the [DoModal](../mfc/reference/cpropertysheet-class.md#cpropertysheet__domodal) function, the framework supplies three command buttons by default: OK, Cancel, and Apply."},{"content":"The framework creates no command buttons for modeless property sheets created with the <bpt id=\"p1\">[</bpt>Create<ept id=\"p1\">](../mfc/reference/cpropertysheet-class.md#cpropertysheet__create)</ept> function.","pos":[3096,3266],"source":" The framework creates no command buttons for modeless property sheets created with the [Create](../mfc/reference/cpropertysheet-class.md#cpropertysheet__create) function."},{"content":"You do not need to derive a class from <ph id=\"ph1\">`CPropertySheet`</ph> unless you want to either add other controls (such as a preview window) or display a modeless property sheet.","pos":[3267,3432],"source":" You do not need to derive a class from `CPropertySheet` unless you want to either add other controls (such as a preview window) or display a modeless property sheet."},{"content":"This step is necessary for modeless property sheets because they do not contain any default controls that could be used to close the property sheet.","pos":[3433,3581]},{"content":"For each page to be added to the property sheet, do the following:","pos":[3591,3657]},{"pos":[3671,3772],"content":"Construct one object for each <ph id=\"ph1\">`CPropertyPage`</ph>-derived class that you created earlier in this process.","source":"Construct one object for each `CPropertyPage`-derived class that you created earlier in this process."},{"pos":[3786,3897],"content":"Call <bpt id=\"p1\">[</bpt>CPropertySheet::AddPage<ept id=\"p1\">](../mfc/reference/cpropertysheet-class.md#cpropertysheet__addpage)</ept> for each page.","source":"Call [CPropertySheet::AddPage](../mfc/reference/cpropertysheet-class.md#cpropertysheet__addpage) for each page."},{"content":"Typically, the object that creates the <ph id=\"ph1\">`CPropertySheet`</ph> also creates the <ph id=\"ph2\">`CPropertyPage`</ph> objects in this step.","pos":[3908,4018],"source":"Typically, the object that creates the `CPropertySheet` also creates the `CPropertyPage` objects in this step."},{"content":"However, if you implement a <ph id=\"ph1\">`CPropertySheet`</ph>-derived class, you can embed the <ph id=\"ph2\">`CPropertyPage`</ph> objects in the <ph id=\"ph3\">`CPropertySheet`</ph> object and call <ph id=\"ph4\">`AddPage`</ph> for each page from the <ph id=\"ph5\">`CPropertySheet`</ph>-derived class constructor.","pos":[4019,4237],"source":" However, if you implement a `CPropertySheet`-derived class, you can embed the `CPropertyPage` objects in the `CPropertySheet` object and call `AddPage` for each page from the `CPropertySheet`-derived class constructor."},{"content":"adds the <ph id=\"ph1\">`CPropertyPage`</ph> object to the property sheet's list of pages but does not actually create the window for that page.","pos":[4248,4372],"source":" adds the `CPropertyPage` object to the property sheet's list of pages but does not actually create the window for that page."},{"content":"Therefore, it is not necessary to wait until creation of the property sheet window to call <ph id=\"ph1\">`AddPage`</ph>; you can call <ph id=\"ph2\">`AddPage`</ph> from the property sheet's constructor.","pos":[4373,4536],"source":" Therefore, it is not necessary to wait until creation of the property sheet window to call `AddPage`; you can call `AddPage` from the property sheet's constructor."},{"content":"By default, if a property sheet has more tabs than will fit in a single row of the property sheet, the tabs will stack in multiple rows.","pos":[4547,4683]},{"content":"To disable stacking, call <bpt id=\"p1\">[</bpt>CPropertySheet::EnableStackedTabs<ept id=\"p1\">](../mfc/reference/cpropertysheet-class.md#cpropertysheet__enablestackedtabs)</ept> with the parameter set to <bpt id=\"p2\">**</bpt>FALSE<ept id=\"p2\">**</ept>.","pos":[4684,4858],"source":" To disable stacking, call [CPropertySheet::EnableStackedTabs](../mfc/reference/cpropertysheet-class.md#cpropertysheet__enablestackedtabs) with the parameter set to **FALSE**."},{"content":"You must call <ph id=\"ph1\">`EnableStackedTabs`</ph> when you create the property sheet.","pos":[4859,4928],"source":" You must call `EnableStackedTabs` when you create the property sheet."},{"content":"Call <bpt id=\"p1\">[</bpt>CPropertySheet::DoModal<ept id=\"p1\">](../mfc/reference/cpropertysheet-class.md#cpropertysheet__domodal)</ept> or <bpt id=\"p2\">[</bpt>Create<ept id=\"p2\">](../mfc/reference/cpropertysheet-class.md#cpropertysheet__create)</ept> to display the property sheet.","pos":[4938,5142],"source":"Call [CPropertySheet::DoModal](../mfc/reference/cpropertysheet-class.md#cpropertysheet__domodal) or [Create](../mfc/reference/cpropertysheet-class.md#cpropertysheet__create) to display the property sheet."},{"content":"Call <ph id=\"ph1\">`DoModal`</ph> to create a property sheet as a modal dialog box.","pos":[5143,5207],"source":" Call `DoModal` to create a property sheet as a modal dialog box."},{"content":"Call <bpt id=\"p1\">**</bpt>Create<ept id=\"p1\">**</ept> to create the property sheet as a modeless dialog box.","pos":[5208,5278],"source":" Call **Create** to create the property sheet as a modeless dialog box."},{"content":"Exchange data between property pages and the owner of the property sheet.","pos":[5288,5361]},{"content":"This is explained in the article <bpt id=\"p1\">[</bpt>Exchanging Data<ept id=\"p1\">](../mfc/exchanging-data.md)</ept>.","pos":[5362,5440],"source":" This is explained in the article [Exchanging Data](../mfc/exchanging-data.md)."},{"pos":[5447,5556],"content":"For an example of how to use property sheets, see the MFC General sample <bpt id=\"p1\">[</bpt>PROPDLG<ept id=\"p1\">](../visual-cpp-samples.md)</ept>.","source":"For an example of how to use property sheets, see the MFC General sample [PROPDLG](../visual-cpp-samples.md)."},{"content":"See Also","pos":[5565,5573]},{"content":"Property Sheets","pos":[5578,5593]}],"content":"---\ntitle: \"Using Property Sheets in Your Application | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"dialog templates, property sheets\"\n  - \"dialog resources\"\n  - \"property pages, property sheets\"\n  - \"DoModal method property sheets\"\n  - \"AddPage method\"\n  - \"property sheets, about property sheets\"\n  - \"Create method [C++], property sheets\"\n  - \"CPropertyPage class, styles\"\nms.assetid: 240654d4-152b-4e3f-af7b-44234339206e\ncaps.latest.revision: 10\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Using Property Sheets in Your Application\nTo use a property sheet in your application, complete the following steps:  \n  \n1.  Create a dialog template resource for each property page. Keep in mind that the user may be switching from one page to another, so lay out each page as consistently as possible.  \n  \n     The dialog templates for all pages do not have to be the same size. The framework uses the size of the largest page to determine how much space to allocate in the property sheet for the property pages.  \n  \n     When you create the dialog template resource for a property page, you must specify the following styles in the Dialog Properties property sheet:  \n  \n    -   Set the **Caption** edit box on the **General** page to the text you wish to appear in the tab for this page.  \n  \n    -   Set the **Style** list box on the **Styles** page to **Child**.  \n  \n    -   Set the **Border** list box on the **Styles** page to **Thin**.  \n  \n    -   Ensure that the **Titlebar** check box on the **Styles** page is selected.  \n  \n    -   Ensure that the **Disabled** check box on the **More Styles** page is selected.  \n  \n2.  Create a [CPropertyPage](../mfc/reference/cpropertypage-class.md)-derived class corresponding to each property page dialog template. See [Adding a Class](../ide/adding-a-class-visual-cpp.md). Choose `CPropertyPage` as the base class.  \n  \n3.  Create member variables to hold the values for this property page. The process for adding member variables to a property page is exactly the same as adding member variables to a dialog box, because a property page is a specialized dialog box. For more information, see [Defining Member Variables for Dialog Controls](../mfc/defining-member-variables-for-dialog-controls.md).  \n  \n4.  Construct a [CPropertySheet](../mfc/reference/cpropertysheet-class.md) object in your source code. Usually, you construct the `CPropertySheet` object in the handler for the command that displays the property sheet. This object represents the entire property sheet. If you create a modal property sheet with the [DoModal](../mfc/reference/cpropertysheet-class.md#cpropertysheet__domodal) function, the framework supplies three command buttons by default: OK, Cancel, and Apply. The framework creates no command buttons for modeless property sheets created with the [Create](../mfc/reference/cpropertysheet-class.md#cpropertysheet__create) function. You do not need to derive a class from `CPropertySheet` unless you want to either add other controls (such as a preview window) or display a modeless property sheet. This step is necessary for modeless property sheets because they do not contain any default controls that could be used to close the property sheet.  \n  \n5.  For each page to be added to the property sheet, do the following:  \n  \n    -   Construct one object for each `CPropertyPage`-derived class that you created earlier in this process.  \n  \n    -   Call [CPropertySheet::AddPage](../mfc/reference/cpropertysheet-class.md#cpropertysheet__addpage) for each page.  \n  \n     Typically, the object that creates the `CPropertySheet` also creates the `CPropertyPage` objects in this step. However, if you implement a `CPropertySheet`-derived class, you can embed the `CPropertyPage` objects in the `CPropertySheet` object and call `AddPage` for each page from the `CPropertySheet`-derived class constructor. `AddPage` adds the `CPropertyPage` object to the property sheet's list of pages but does not actually create the window for that page. Therefore, it is not necessary to wait until creation of the property sheet window to call `AddPage`; you can call `AddPage` from the property sheet's constructor.  \n  \n     By default, if a property sheet has more tabs than will fit in a single row of the property sheet, the tabs will stack in multiple rows. To disable stacking, call [CPropertySheet::EnableStackedTabs](../mfc/reference/cpropertysheet-class.md#cpropertysheet__enablestackedtabs) with the parameter set to **FALSE**. You must call `EnableStackedTabs` when you create the property sheet.  \n  \n6.  Call [CPropertySheet::DoModal](../mfc/reference/cpropertysheet-class.md#cpropertysheet__domodal) or [Create](../mfc/reference/cpropertysheet-class.md#cpropertysheet__create) to display the property sheet. Call `DoModal` to create a property sheet as a modal dialog box. Call **Create** to create the property sheet as a modeless dialog box.  \n  \n7.  Exchange data between property pages and the owner of the property sheet. This is explained in the article [Exchanging Data](../mfc/exchanging-data.md).  \n  \n For an example of how to use property sheets, see the MFC General sample [PROPDLG](../visual-cpp-samples.md).  \n  \n## See Also  \n [Property Sheets](../mfc/property-sheets-mfc.md)\n\n"}