{"nodes":[{"pos":[12,64],"content":"CDynamicParameterAccessor::GetParam | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"CDynamicParameterAccessor::GetParam | Microsoft Docs","pos":[0,52]}]},{"content":"CDynamicParameterAccessor::GetParam","pos":[895,930]},{"content":"Retrieves the nonstring data for a specified parameter from the parameter buffer.","pos":[931,1012]},{"content":"Syntax","pos":[1021,1027]},{"content":"Parameters","pos":[1404,1414]},{"content":"A templated parameter that is the data type.","pos":[1429,1473]},{"content":"[in] The parameter number (offset from 1).","pos":[1492,1534]},{"content":"Parameter 0 is reserved for return values.","pos":[1535,1577]},{"content":"The parameter number is the index of the parameter based on its order in the SQL or stored procedure call.","pos":[1578,1684]},{"content":"See <bpt id=\"p1\">[</bpt>SetParam<ept id=\"p1\">](../../data/oledb/cdynamicparameteraccessor-setparam.md)</ept> for an example.","pos":[1685,1771],"source":" See [SetParam](../../data/oledb/cdynamicparameteraccessor-setparam.md) for an example."},{"content":"[in] The parameter name.","pos":[1794,1818]},{"content":"[out] The pointer to the memory containing the data retrieved from the buffer.","pos":[1836,1914]},{"content":"Return Value","pos":[1923,1935]},{"content":"For nontemplated versions, points to the memory containing the data retrieved from the buffer.","pos":[1939,2033]},{"content":"For templated versions, returns <bpt id=\"p1\">**</bpt>true<ept id=\"p1\">**</ept> on success or <bpt id=\"p2\">**</bpt>false<ept id=\"p2\">**</ept> on failure.","pos":[2034,2110],"source":" For templated versions, returns **true** on success or **false** on failure."},{"content":"Use <ph id=\"ph1\">`GetParam`</ph> to retrieve nonstring parameter data from the buffer.","pos":[2117,2185],"source":"Use `GetParam` to retrieve nonstring parameter data from the buffer."},{"content":"Use <bpt id=\"p1\">[</bpt>GetParamString<ept id=\"p1\">](../../data/oledb/cdynamicparameteraccessor-getparamstring.md)</ept> to retrieve string parameter data from the buffer.","pos":[2186,2319],"source":" Use [GetParamString](../../data/oledb/cdynamicparameteraccessor-getparamstring.md) to retrieve string parameter data from the buffer."},{"content":"Requirements","pos":[2328,2340]},{"pos":[2344,2366],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> atldbcli.h","source":"**Header:** atldbcli.h"},{"content":"See Also","pos":[2375,2383]},{"content":"CDynamicParameterAccessor Class","pos":[2388,2419]}],"content":"---\ntitle: \"CDynamicParameterAccessor::GetParam | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"CDynamicParameterAccessor::GetParam\"\n  - \"ATL.CDynamicParameterAccessor.GetParam\"\n  - \"CDynamicParameterAccessor::GetParam<ctype>\"\n  - \"CDynamicParameterAccessor.GetParam\"\n  - \"GetParam\"\n  - \"ATL::CDynamicParameterAccessor::GetParam<ctype>\"\n  - \"ATL::CDynamicParameterAccessor::GetParam\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"GetParam method\"\nms.assetid: 893a6bf8-7b55-4f6d-8a10-a43b13be7f56\ncaps.latest.revision: 8\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# CDynamicParameterAccessor::GetParam\nRetrieves the nonstring data for a specified parameter from the parameter buffer.  \n  \n## Syntax  \n  \n```  \n  \n      template < class ctype > bool GetParam(   \n   DBORDINAL nParam,   \n   ctype* pData    \n) const throw( );  \ntemplate < class ctype > bool GetParam(   \n   TCHAR* pParamName,   \n   ctype* pData    \n) const throw( );  \nvoid* GetParam(   \n   DBORDINAL nParam    \n) const throw( );  \nvoid* GetParam(   \n   TCHAR* pParamName    \n) const throw( );  \n```  \n  \n#### Parameters  \n `ctype`  \n A templated parameter that is the data type.  \n  \n `nParam`  \n [in] The parameter number (offset from 1). Parameter 0 is reserved for return values. The parameter number is the index of the parameter based on its order in the SQL or stored procedure call. See [SetParam](../../data/oledb/cdynamicparameteraccessor-setparam.md) for an example.  \n  \n `pParamName`  \n [in] The parameter name.  \n  \n `pData`  \n [out] The pointer to the memory containing the data retrieved from the buffer.  \n  \n## Return Value  \n For nontemplated versions, points to the memory containing the data retrieved from the buffer. For templated versions, returns **true** on success or **false** on failure.  \n  \n Use `GetParam` to retrieve nonstring parameter data from the buffer. Use [GetParamString](../../data/oledb/cdynamicparameteraccessor-getparamstring.md) to retrieve string parameter data from the buffer.  \n  \n## Requirements  \n **Header:** atldbcli.h  \n  \n## See Also  \n [CDynamicParameterAccessor Class](../../data/oledb/cdynamicparameteraccessor-class.md)"}