{"nodes":[{"pos":[12,57],"content":"scoped_d3d_access_lock Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"scoped_d3d_access_lock Class | Microsoft Docs","pos":[0,45]}]},{"pos":[537,565],"content":"scoped_d3d_access_lock Class","linkify":"scoped_d3d_access_lock Class","nodes":[{"content":"scoped_d3d_access_lock Class","pos":[0,28]}]},{"content":"RAII wrapper for a D3D access lock on an accelerator_view object.","pos":[566,631]},{"pos":[641,647],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[703,710],"content":"Members","linkify":"Members","nodes":[{"content":"Members","pos":[0,7]}]},{"pos":[720,739],"content":"Public Constructors","linkify":"Public Constructors","nodes":[{"content":"Public Constructors","pos":[0,19]}]},{"content":"Name","pos":[746,750]},{"content":"Description","pos":[751,762]},{"pos":[800,867],"content":"<bpt id=\"p1\">[</bpt>scoped_d3d_access_lock::scoped_d3d_access_lock Constructor<ept id=\"p1\">](#ctor)</ept>","source":"[scoped_d3d_access_lock::scoped_d3d_access_lock Constructor](#ctor)"},{"content":"Overloaded.","pos":[868,879]},{"content":"Constructs a <ph id=\"ph1\">`scoped_d3d_access_lock`</ph> object.","pos":[880,925],"source":" Constructs a `scoped_d3d_access_lock` object."},{"content":"The lock is released when this object goes out of scope.","pos":[926,982]},{"pos":[987,1054],"content":"<bpt id=\"p1\">[</bpt>scoped_d3d_access_lock::~scoped_d3d_access_lock Destructor<ept id=\"p1\">](#dtor)</ept>","source":"[scoped_d3d_access_lock::~scoped_d3d_access_lock Destructor](#dtor)"},{"pos":[1055,1128],"content":"Releases the D3D access lock on the associated <ph id=\"ph1\">`accelerator_view`</ph> object.","source":"Releases the D3D access lock on the associated `accelerator_view` object."},{"pos":[1139,1155],"content":"Public Operators","linkify":"Public Operators","nodes":[{"content":"Public Operators","pos":[0,16]}]},{"content":"Name","pos":[1162,1166]},{"content":"Description","pos":[1167,1178]},{"pos":[1216,1274],"content":"<bpt id=\"p1\">[</bpt>scoped_d3d_access_lock::operator= Operator<ept id=\"p1\">](#operator_eq)</ept>","source":"[scoped_d3d_access_lock::operator= Operator](#operator_eq)"},{"pos":[1275,1339],"content":"Takes ownership of a lock from another <ph id=\"ph1\">`scoped_d3d_access_lock`</ph>.","source":"Takes ownership of a lock from another `scoped_d3d_access_lock`."},{"pos":[1349,1370],"content":"Inheritance Hierarchy","linkify":"Inheritance Hierarchy","nodes":[{"content":"Inheritance Hierarchy","pos":[0,21]}]},{"pos":[1407,1419],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[1423,1442],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> amprt.h","source":"**Header:** amprt.h"},{"pos":[1449,1485],"content":"<bpt id=\"p1\">**</bpt>Namespace:<ept id=\"p1\">**</ept> concurrency::direct3d","source":"**Namespace:** concurrency::direct3d"},{"pos":[1493,1571],"content":"<bpt id=\"p1\">&lt;a name=\"ctor\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept> scoped_d3d_access_lock::scoped_d3d_access_lock Constructor","linkify":"<a name=\"ctor\"></a> scoped_d3d_access_lock::scoped_d3d_access_lock Constructor","source":"<a name=\"ctor\"></a> scoped_d3d_access_lock::scoped_d3d_access_lock Constructor"},{"content":"Constructs a <ph id=\"ph1\">`scoped_d3d_access_lock`</ph> object.","pos":[1573,1618],"source":"Constructs a `scoped_d3d_access_lock` object."},{"content":"The lock is released when this object goes out of scope.","pos":[1619,1675]},{"pos":[1988,1998],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"The <ph id=\"ph1\">`accelerator_view`</ph> for the lock to adopt.","pos":[2011,2056],"source":" The `accelerator_view` for the lock to adopt."},{"content":"The <ph id=\"ph1\">`adopt_d3d_access_lock_t`</ph> object.","pos":[2071,2108],"source":" The `adopt_d3d_access_lock_t` object."},{"content":"The <ph id=\"ph1\">`scoped_d3d_access_lock`</ph> object from which to move an existing lock.","pos":[2127,2199],"source":" The `scoped_d3d_access_lock` object from which to move an existing lock."},{"pos":[2208,2220],"content":"Construction","linkify":"Construction","nodes":[{"content":"Construction","pos":[0,12]}]},{"content":"[1] Constructor","pos":[2224,2239]},{"content":"Acquires a D3D access lock on the given <bpt id=\"p1\">[</bpt>accelerator_view<ept id=\"p1\">](reference/accelerator-view-class.md)</ept> object.","pos":[2243,2346],"source":" Acquires a D3D access lock on the given [accelerator_view](reference/accelerator-view-class.md) object."},{"content":"Construction blocks until the lock is acquired.","pos":[2347,2394]},{"content":"[2] Constructor","pos":[2401,2416]},{"content":"Adopt a D3D access lock from the given <bpt id=\"p1\">[</bpt>accelerator_view<ept id=\"p1\">](reference/accelerator-view-class.md)</ept> object.","pos":[2420,2522],"source":" Adopt a D3D access lock from the given [accelerator_view](reference/accelerator-view-class.md) object."},{"content":"[3] Move Constructor","pos":[2529,2549]},{"content":"Takes an existing D3D access lock from another <ph id=\"ph1\">`scoped_d3d_access_lock`</ph> object.","pos":[2553,2632],"source":" Takes an existing D3D access lock from another `scoped_d3d_access_lock` object."},{"content":"Construction does not block.","pos":[2633,2661]},{"pos":[2672,2751],"content":"<bpt id=\"p1\">&lt;a name=\"dtor\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  scoped_d3d_access_lock::~scoped_d3d_access_lock Destructor","linkify":"<a name=\"dtor\"></a>  scoped_d3d_access_lock::~scoped_d3d_access_lock Destructor","source":"<a name=\"dtor\"></a>  scoped_d3d_access_lock::~scoped_d3d_access_lock Destructor"},{"pos":[2756,2829],"content":"Releases the D3D access lock on the associated <ph id=\"ph1\">`accelerator_view`</ph> object.","source":"Releases the D3D access lock on the associated `accelerator_view` object."},{"pos":[2877,2947],"content":"<bpt id=\"p1\">&lt;a name=\"operator_eq\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  scoped_d3d_access_lock::operator= Operator","linkify":"<a name=\"operator_eq\"></a>  scoped_d3d_access_lock::operator= Operator","source":"<a name=\"operator_eq\"></a>  scoped_d3d_access_lock::operator= Operator"},{"pos":[2948,3059],"content":"Takes ownership of a D3D access lock from another <ph id=\"ph1\">`scoped_d3d_access_lock`</ph> object, releasing the previous lock.","source":"Takes ownership of a D3D access lock from another `scoped_d3d_access_lock` object, releasing the previous lock."},{"pos":[3152,3162],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"The accelerator_view from which to move the D3D access lock.","pos":[3178,3238]},{"pos":[3248,3260],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[3264,3315],"content":"A reference to this <ph id=\"ph1\">`scoped_accelerator_view_lock`</ph>.","source":"A reference to this `scoped_accelerator_view_lock`."},{"pos":[3322,3330],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"pos":[3334,3402],"content":"<bpt id=\"p1\">[</bpt>Concurrency::direct3d Namespace<ept id=\"p1\">](concurrency-direct3d-namespace.md)</ept>","source":"[Concurrency::direct3d Namespace](concurrency-direct3d-namespace.md)"}],"content":"---\ntitle: \"scoped_d3d_access_lock Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"C++\"\nms.assetid: 0ad333e6-9839-4736-a722-16d95d70c4b1\ncaps.latest.revision: 8\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# scoped_d3d_access_lock Class\nRAII wrapper for a D3D access lock on an accelerator_view object.  \n  \n### Syntax  \n  \n```  \nclass scoped_d3d_access_lock;  \n```  \n  \n## Members  \n  \n### Public Constructors  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[scoped_d3d_access_lock::scoped_d3d_access_lock Constructor](#ctor)|Overloaded. Constructs a `scoped_d3d_access_lock` object. The lock is released when this object goes out of scope.|  \n|[scoped_d3d_access_lock::~scoped_d3d_access_lock Destructor](#dtor)|Releases the D3D access lock on the associated `accelerator_view` object.|  \n  \n### Public Operators  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[scoped_d3d_access_lock::operator= Operator](#operator_eq)|Takes ownership of a lock from another `scoped_d3d_access_lock`.|  \n  \n## Inheritance Hierarchy  \n `scoped_d3d_access_lock`  \n  \n## Requirements  \n **Header:** amprt.h  \n  \n **Namespace:** concurrency::direct3d  \n\n##  <a name=\"ctor\"></a> scoped_d3d_access_lock::scoped_d3d_access_lock Constructor\n Constructs a `scoped_d3d_access_lock` object. The lock is released when this object goes out of scope.  \n \n```  \nexplicit scoped_d3d_access_lock(// [1] constructor  \n    accelerator_view& _Av);\n\n \nexplicit scoped_d3d_access_lock(// [2] constructor  \n    accelerator_view& _Av,  \n    adopt_d3d_access_lock_t _T);\n\n \nscoped_d3d_access_lock(// [3] move constructor  \n    scoped_d3d_access_lock&& _Other);\n```  \n  \n### Parameters  \n `_Av`  \n The `accelerator_view` for the lock to adopt.  \n  \n `_T`  \n The `adopt_d3d_access_lock_t` object.  \n  \n `_Other`  \n The `scoped_d3d_access_lock` object from which to move an existing lock.  \n  \n## Construction  \n [1] Constructor  \n Acquires a D3D access lock on the given [accelerator_view](reference/accelerator-view-class.md) object. Construction blocks until the lock is acquired.  \n  \n [2] Constructor  \n Adopt a D3D access lock from the given [accelerator_view](reference/accelerator-view-class.md) object.  \n  \n [3] Move Constructor  \n Takes an existing D3D access lock from another `scoped_d3d_access_lock` object. Construction does not block.  \n\n  \n##  <a name=\"dtor\"></a>  scoped_d3d_access_lock::~scoped_d3d_access_lock Destructor  \n\n Releases the D3D access lock on the associated `accelerator_view` object.  \n  \n```  \n~scoped_d3d_access_lock();\n```  \n## <a name=\"operator_eq\"></a>  scoped_d3d_access_lock::operator= Operator\nTakes ownership of a D3D access lock from another `scoped_d3d_access_lock` object, releasing the previous lock.  \n \n```  \nscoped_d3d_access_lock& operator= (scoped_d3d_access_lock&& _Other);\n```  \n  \n### Parameters  \n `_Other`  \n The accelerator_view from which to move the D3D access lock.  \n  \n### Return Value  \n A reference to this `scoped_accelerator_view_lock`.  \n\n## See Also  \n [Concurrency::direct3d Namespace](concurrency-direct3d-namespace.md)\n"}