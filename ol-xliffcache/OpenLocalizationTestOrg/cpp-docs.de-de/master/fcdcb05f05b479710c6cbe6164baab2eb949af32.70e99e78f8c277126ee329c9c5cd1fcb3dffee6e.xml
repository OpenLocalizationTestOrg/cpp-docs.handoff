{"nodes":[{"pos":[12,59],"content":"OLE DB Consumers and Providers | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"OLE DB Consumers and Providers | Microsoft Docs","pos":[0,47]}]},{"content":"OLE DB Consumers and Providers","pos":[730,760]},{"content":"The OLE DB architecture uses the model of consumers and providers.","pos":[761,827]},{"content":"A consumer makes requests for data.","pos":[828,863]},{"content":"A provider responds to these requests by placing data in a tabular format and returning it to the consumer.","pos":[864,971]},{"content":"Any call that the consumer can make must be implemented in the provider.","pos":[972,1044]},{"content":"Technically defined, a consumer is any system or application code (not necessarily an OLE DB component) that accesses data through OLE DB interfaces.","pos":[1051,1200]},{"content":"The interfaces are implemented in a provider.","pos":[1201,1246]},{"content":"Thus, a provider is any software component that implements OLE DB interfaces to encapsulate access to data and expose it to other objects (that is, consumers).","pos":[1247,1406]},{"content":"In terms of roles, a consumer calls methods on OLE DB interfaces; an OLE DB provider implements the needed OLE DB interfaces.","pos":[1413,1538]},{"content":"OLE DB avoids the terms client and server because these roles do not always make sense, especially in an n-tier situation.","pos":[1545,1667]},{"content":"Because a consumer could be a component on a tier that serves another component, to call it a client component would be confusing.","pos":[1668,1798]},{"content":"Also, a provider sometimes acts more like a database driver than a server.","pos":[1799,1873]},{"content":"See Also","pos":[1882,1890]},{"content":"OLE DB Programming","pos":[1895,1913]},{"content":"OLE DB Programming Overview","pos":[1960,1987]}],"content":"---\ntitle: \"OLE DB Consumers and Providers | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"OLE DB providers, OLE DB data architecture\"\n  - \"OLE DB providers\"\n  - \"OLE DB consumers, OLE DB data architecture\"\n  - \"OLE DB consumers\"\n  - \"OLE DB, data model\"\nms.assetid: 886cb39d-652b-4557-93f0-4b1b0754d8bc\ncaps.latest.revision: 7\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# OLE DB Consumers and Providers\nThe OLE DB architecture uses the model of consumers and providers. A consumer makes requests for data. A provider responds to these requests by placing data in a tabular format and returning it to the consumer. Any call that the consumer can make must be implemented in the provider.  \n  \n Technically defined, a consumer is any system or application code (not necessarily an OLE DB component) that accesses data through OLE DB interfaces. The interfaces are implemented in a provider. Thus, a provider is any software component that implements OLE DB interfaces to encapsulate access to data and expose it to other objects (that is, consumers).  \n  \n In terms of roles, a consumer calls methods on OLE DB interfaces; an OLE DB provider implements the needed OLE DB interfaces.  \n  \n OLE DB avoids the terms client and server because these roles do not always make sense, especially in an n-tier situation. Because a consumer could be a component on a tier that serves another component, to call it a client component would be confusing. Also, a provider sometimes acts more like a database driver than a server.  \n  \n## See Also  \n [OLE DB Programming](../../data/oledb/ole-db-programming.md)   \n [OLE DB Programming Overview](../../data/oledb/ole-db-programming-overview.md)"}