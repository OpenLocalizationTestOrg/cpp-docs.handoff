{"nodes":[{"pos":[12,54],"content":"wcstombs_s, _wcstombs_s_l | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"wcstombs_s, _wcstombs_s_l | Microsoft Docs","pos":[0,42]}]},{"pos":[1188,1213],"content":"wcstombs_s, _wcstombs_s_l","linkify":"wcstombs_s, _wcstombs_s_l","nodes":[{"content":"wcstombs_s, _wcstombs_s_l","pos":[0,25]}]},{"content":"Converts a sequence of wide characters to a corresponding sequence of multibyte characters.","pos":[1214,1305]},{"content":"A version of <bpt id=\"p1\">[</bpt>wcstombs, _wcstombs_l<ept id=\"p1\">](../../c-runtime-library/reference/wcstombs-wcstombs-l.md)</ept> with security enhancements as described in <bpt id=\"p2\">[</bpt>Security Features in the CRT<ept id=\"p2\">](../../c-runtime-library/security-features-in-the-crt.md)</ept>.","pos":[1306,1532],"source":" A version of [wcstombs, _wcstombs_l](../../c-runtime-library/reference/wcstombs-wcstombs-l.md) with security enhancements as described in [Security Features in the CRT](../../c-runtime-library/security-features-in-the-crt.md)."},{"pos":[1541,1547],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[2235,2245],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[out] <ph id=\"ph1\">`pReturnValue`</ph>","pos":[2249,2269],"source":"[out] `pReturnValue`"},{"content":"The number of characters converted.","pos":[2273,2308]},{"content":"[out] <ph id=\"ph1\">`mbstr`</ph>","pos":[2315,2328],"source":"[out] `mbstr`"},{"content":"The address of a buffer for the resulting converted multibyte character string.","pos":[2332,2411]},{"content":"[in]<ph id=\"ph1\">`sizeInBytes`</ph>","pos":[2418,2435],"source":"[in]`sizeInBytes`"},{"content":"The size in bytes of the <ph id=\"ph1\">`mbstr`</ph> buffer.","pos":[2439,2479],"source":" The size in bytes of the `mbstr` buffer."},{"content":"[in] <ph id=\"ph1\">`wcstr`</ph>","pos":[2486,2498],"source":"[in] `wcstr`"},{"content":"Points to the wide character string to be converted.","pos":[2502,2554]},{"content":"[in] <ph id=\"ph1\">`count`</ph>","pos":[2561,2573],"source":"[in] `count`"},{"content":"The maximum number of bytes to store in the <ph id=\"ph1\">`mbstr`</ph> buffer, not including the terminating null character, or <bpt id=\"p1\">[</bpt>_TRUNCATE<ept id=\"p1\">](../../c-runtime-library/truncate.md)</ept>.","pos":[2577,2735],"source":" The maximum number of bytes to store in the `mbstr` buffer, not including the terminating null character, or [_TRUNCATE](../../c-runtime-library/truncate.md)."},{"content":"[in] <ph id=\"ph1\">`locale`</ph>","pos":[2742,2755],"source":"[in] `locale`"},{"content":"The locale to use.","pos":[2759,2777]},{"pos":[2786,2798],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Zero if successful, an error code on failure.","pos":[2802,2847]},{"content":"Error condition","pos":[2854,2869]},{"pos":[2870,2894],"content":"Return value and <ph id=\"ph1\">`errno`</ph>","source":"Return value and `errno`"},{"pos":[2956,2995],"content":"<ph id=\"ph1\">`mbstr`</ph> is <ph id=\"ph2\">`NULL`</ph> and <ph id=\"ph3\">`sizeInBytes`</ph> &gt; 0","source":"`mbstr` is `NULL` and `sizeInBytes` > 0"},{"pos":[3009,3026],"content":"<ph id=\"ph1\">`wcstr`</ph> is <ph id=\"ph2\">`NULL`</ph>","source":"`wcstr` is `NULL`"},{"pos":[3040,3158],"content":"The destination buffer is too small to contain the converted string (unless <ph id=\"ph1\">`count`</ph> is <ph id=\"ph2\">`_TRUNCATE`</ph>; see Remarks below)","source":"The destination buffer is too small to contain the converted string (unless `count` is `_TRUNCATE`; see Remarks below)"},{"content":"If any of these conditions occurs, the invalid parameter exception is invoked as described in <bpt id=\"p1\">[</bpt>Parameter Validation<ept id=\"p1\">](../../c-runtime-library/parameter-validation.md)</ept> .","pos":[3175,3342],"source":"If any of these conditions occurs, the invalid parameter exception is invoked as described in [Parameter Validation](../../c-runtime-library/parameter-validation.md) ."},{"content":"If execution is allowed to continue, the function returns an error code and sets <ph id=\"ph1\">`errno`</ph> as indicated in the table.","pos":[3343,3458],"source":" If execution is allowed to continue, the function returns an error code and sets `errno` as indicated in the table."},{"pos":[3467,3474],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The <ph id=\"ph1\">`wcstombs_s`</ph> function converts a string of wide characters pointed to by <ph id=\"ph2\">`wcstr`</ph> into multibyte characters stored in the buffer pointed to by <ph id=\"ph3\">`mbstr`</ph>.","pos":[3478,3632],"source":"The `wcstombs_s` function converts a string of wide characters pointed to by `wcstr` into multibyte characters stored in the buffer pointed to by `mbstr`."},{"content":"The conversion will continue for each character until one of these conditions is met:","pos":[3633,3718]},{"content":"A null wide character is encountered","pos":[3728,3764]},{"content":"A wide character that cannot be converted is encountered","pos":[3774,3830]},{"pos":[3840,3904],"content":"The number of bytes stored in the <ph id=\"ph1\">`mbstr`</ph> buffer equals <ph id=\"ph2\">`count`</ph>.","source":"The number of bytes stored in the `mbstr` buffer equals `count`."},{"content":"The destination string is always null-terminated (even in the case of an error).","pos":[3911,3991]},{"pos":[3998,4217],"content":"If <ph id=\"ph1\">`count`</ph> is the special value <bpt id=\"p1\">[</bpt>_TRUNCATE<ept id=\"p1\">](../../c-runtime-library/truncate.md)</ept>, then <ph id=\"ph2\">`wcstombs_s`</ph> converts as much of the string as will fit into the destination buffer, while still leaving room for a null terminator.","source":"If `count` is the special value [_TRUNCATE](../../c-runtime-library/truncate.md), then `wcstombs_s` converts as much of the string as will fit into the destination buffer, while still leaving room for a null terminator."},{"content":"If <ph id=\"ph1\">`wcstombs_s`</ph> successfully converts the source string, it puts the size in bytes of the converted string, including the null terminator, into <ph id=\"ph2\">`*``pReturnValue`</ph> (provided <ph id=\"ph3\">`pReturnValue`</ph> is not <ph id=\"ph4\">`NULL`</ph>).","pos":[4224,4426],"source":"If `wcstombs_s` successfully converts the source string, it puts the size in bytes of the converted string, including the null terminator, into `*``pReturnValue` (provided `pReturnValue` is not `NULL`)."},{"content":"This occurs even if the <ph id=\"ph1\">`mbstr`</ph> argument is <ph id=\"ph2\">`NULL`</ph> and provides a way to determine the required buffer size.","pos":[4427,4535],"source":" This occurs even if the `mbstr` argument is `NULL` and provides a way to determine the required buffer size."},{"content":"Note that if <ph id=\"ph1\">`mbstr`</ph> is <ph id=\"ph2\">`NULL`</ph>, <ph id=\"ph3\">`count`</ph> is ignored.","pos":[4536,4587],"source":" Note that if `mbstr` is `NULL`, `count` is ignored."},{"pos":[4594,4809],"content":"If <ph id=\"ph1\">`wcstombs_s`</ph> encounters a wide character it cannot convert to a multibyte character, it puts 0 in <ph id=\"ph2\">`*``pReturnValue`</ph>, sets the destination buffer to an empty string, sets <ph id=\"ph3\">`errno`</ph> to <ph id=\"ph4\">`EILSEQ`</ph>, and returns <ph id=\"ph5\">`EILSEQ`</ph>.","source":"If `wcstombs_s` encounters a wide character it cannot convert to a multibyte character, it puts 0 in `*``pReturnValue`, sets the destination buffer to an empty string, sets `errno` to `EILSEQ`, and returns `EILSEQ`."},{"pos":[4816,4918],"content":"If the sequences pointed to by <ph id=\"ph1\">`wcstr`</ph> and <ph id=\"ph2\">`mbstr`</ph> overlap, the behavior of <ph id=\"ph3\">`wcstombs_s`</ph> is undefined.","source":"If the sequences pointed to by `wcstr` and `mbstr` overlap, the behavior of `wcstombs_s` is undefined."},{"pos":[4926,5067],"content":"[!IMPORTANT]\n Ensure that `wcstr` and `mbstr` do not overlap, and that `count` correctly reflects the number of wide characters to convert.","leadings":["","> "],"nodes":[{"content":"Ensure that <ph id=\"ph1\">`wcstr`</ph> and <ph id=\"ph2\">`mbstr`</ph> do not overlap, and that <ph id=\"ph3\">`count`</ph> correctly reflects the number of wide characters to convert.","pos":[14,139],"source":" Ensure that `wcstr` and `mbstr` do not overlap, and that `count` correctly reflects the number of wide characters to convert."}]},{"content":"<ph id=\"ph1\">`wcstombs_s`</ph> uses the current locale for any locale-dependent behavior; <ph id=\"ph2\">`_wcstombs_s_l`</ph> is identical to <ph id=\"ph3\">`wcstombs`</ph> except that it uses the locale passed in instead.","pos":[5074,5238],"source":"`wcstombs_s` uses the current locale for any locale-dependent behavior; `_wcstombs_s_l` is identical to `wcstombs` except that it uses the locale passed in instead."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Locale<ept id=\"p1\">](../../c-runtime-library/locale.md)</ept>.","pos":[5239,5309],"source":" For more information, see [Locale](../../c-runtime-library/locale.md)."},{"content":"In C++, using these functions is simplified by template overloads; the overloads can infer buffer length automatically (eliminating the need to specify a size argument) and they can automatically replace older, non-secure functions with their newer, secure counterparts.","pos":[5316,5586]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Secure Template Overloads<ept id=\"p1\">](../../c-runtime-library/secure-template-overloads.md)</ept>.","pos":[5587,5695],"source":" For more information, see [Secure Template Overloads](../../c-runtime-library/secure-template-overloads.md)."},{"pos":[5704,5716],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"content":"Routine","pos":[5723,5730]},{"content":"Required header","pos":[5731,5746]},{"content":"<ph id=\"ph1\">\\&lt;</ph>stdlib.h&gt;","pos":[5804,5815],"source":"\\<stdlib.h>"},{"pos":[5823,5947],"content":"For additional compatibility information, see <bpt id=\"p1\">[</bpt>Compatibility<ept id=\"p1\">](../../c-runtime-library/compatibility.md)</ept> in the Introduction.","source":"For additional compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md) in the Introduction."},{"pos":[5956,5963],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[5967,6034],"content":"This program illustrates the behavior of the <ph id=\"ph1\">`wcstombs_s`</ph> function.","source":"This program illustrates the behavior of the `wcstombs_s` function."},{"pos":[6964,6989],"content":".NET Framework Equivalent","linkify":".NET Framework Equivalent","nodes":[{"content":".NET Framework Equivalent","pos":[0,25]}]},{"content":"Not applicable.","pos":[6993,7008]},{"content":"To call the standard C function, use <ph id=\"ph1\">`PInvoke`</ph>.","pos":[7009,7056],"source":" To call the standard C function, use `PInvoke`."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Platform Invoke Examples<ept id=\"p1\">](http://msdn.microsoft.com/Library/15926806-f0b7-487e-93a6-4e9367ec689f)</ept>.","pos":[7057,7182],"source":" For more information, see [Platform Invoke Examples](http://msdn.microsoft.com/Library/15926806-f0b7-487e-93a6-4e9367ec689f)."},{"pos":[7191,7199],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Data Conversion<ept id=\"p1\">](../../c-runtime-library/data-conversion.md)</ept><ph id=\"ph1\"> </ph>","pos":[7203,7265],"source":"[Data Conversion](../../c-runtime-library/data-conversion.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Locale<ept id=\"p1\">](../../c-runtime-library/locale.md)</ept><ph id=\"ph1\"> </ph>","pos":[7268,7313],"source":" [Locale](../../c-runtime-library/locale.md) "},{"content":"<bpt id=\"p1\"> [</bpt>_mbclen, mblen, _mblen_l<ept id=\"p1\">](../../c-runtime-library/reference/mbclen-mblen-mblen-l.md)</ept><ph id=\"ph1\"> </ph>","pos":[7316,7403],"source":" [_mbclen, mblen, _mblen_l](../../c-runtime-library/reference/mbclen-mblen-mblen-l.md) "},{"content":"<bpt id=\"p1\"> [</bpt>mbstowcs, _mbstowcs_l<ept id=\"p1\">](../../c-runtime-library/reference/mbstowcs-mbstowcs-l.md)</ept><ph id=\"ph1\"> </ph>","pos":[7406,7489],"source":" [mbstowcs, _mbstowcs_l](../../c-runtime-library/reference/mbstowcs-mbstowcs-l.md) "},{"content":"<bpt id=\"p1\"> [</bpt>mbtowc, _mbtowc_l<ept id=\"p1\">](../../c-runtime-library/reference/mbtowc-mbtowc-l.md)</ept><ph id=\"ph1\"> </ph>","pos":[7492,7567],"source":" [mbtowc, _mbtowc_l](../../c-runtime-library/reference/mbtowc-mbtowc-l.md) "},{"content":"<bpt id=\"p1\"> [</bpt>wctomb_s, _wctomb_s_l<ept id=\"p1\">](../../c-runtime-library/reference/wctomb-s-wctomb-s-l.md)</ept><ph id=\"ph1\"> </ph>","pos":[7570,7653],"source":" [wctomb_s, _wctomb_s_l](../../c-runtime-library/reference/wctomb-s-wctomb-s-l.md) "},{"content":"<bpt id=\"p1\"> [</bpt>WideCharToMultiByte<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/dd374130)</ept>","pos":[7656,7738],"source":" [WideCharToMultiByte](http://msdn.microsoft.com/library/windows/desktop/dd374130)"}],"content":"---\ntitle: \"wcstombs_s, _wcstombs_s_l | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\napiname: \n  - \"_wcstombs_s_l\"\n  - \"wcstombs_s\"\napilocation: \n  - \"msvcrt.dll\"\n  - \"msvcr80.dll\"\n  - \"msvcr90.dll\"\n  - \"msvcr100.dll\"\n  - \"msvcr100_clr0400.dll\"\n  - \"msvcr110.dll\"\n  - \"msvcr110_clr0400.dll\"\n  - \"msvcr120.dll\"\n  - \"msvcr120_clr0400.dll\"\n  - \"ucrtbase.dll\"\n  - \"api-ms-win-crt-convert-l1-1-0.dll\"\napitype: \"DLLExport\"\nf1_keywords: \n  - \"wcstombs_s\"\n  - \"_wcstombs_s_l\"\ndev_langs: \n  - \"C++\"\n  - \"C\"\nhelpviewer_keywords: \n  - \"wcstombs_s function\"\n  - \"string conversion, wide characters\"\n  - \"wide characters, converting\"\n  - \"_wcstombs_s_l function\"\n  - \"wcstombs_s_l function\"\n  - \"characters, converting\"\n  - \"string conversion, multibyte character strings\"\nms.assetid: 105f2d33-221a-4f6d-864c-23c1865c42af\ncaps.latest.revision: 31\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# wcstombs_s, _wcstombs_s_l\nConverts a sequence of wide characters to a corresponding sequence of multibyte characters. A version of [wcstombs, _wcstombs_l](../../c-runtime-library/reference/wcstombs-wcstombs-l.md) with security enhancements as described in [Security Features in the CRT](../../c-runtime-library/security-features-in-the-crt.md).  \n  \n## Syntax  \n  \n```  \nerrno_t wcstombs_s(  \n   size_t *pReturnValue,  \n   char *mbstr,  \n   size_t sizeInBytes,  \n   const wchar_t *wcstr,  \n   size_t count   \n);  \nerrno_t _wcstombs_s_l(  \n   size_t *pReturnValue,  \n   char *mbstr,  \n   size_t sizeInBytes,  \n   const wchar_t *wcstr,  \n   size_t count,  \n   _locale_t locale  \n);  \ntemplate <size_t size>  \nerrno_t wcstombs_s(  \n   size_t *pReturnValue,  \n   char (&mbstr)[size],  \n   const wchar_t *wcstr,  \n   size_t count   \n); // C++ only  \ntemplate <size_t size>  \nerrno_t _wcstombs_s_l(  \n   size_t *pReturnValue,  \n   char (&mbstr)[size],  \n   const wchar_t *wcstr,  \n   size_t count,  \n   _locale_t locale  \n); // C++ only  \n```  \n  \n#### Parameters  \n [out] `pReturnValue`  \n The number of characters converted.  \n  \n [out] `mbstr`  \n The address of a buffer for the resulting converted multibyte character string.  \n  \n [in]`sizeInBytes`  \n The size in bytes of the `mbstr` buffer.  \n  \n [in] `wcstr`  \n Points to the wide character string to be converted.  \n  \n [in] `count`  \n The maximum number of bytes to store in the `mbstr` buffer, not including the terminating null character, or [_TRUNCATE](../../c-runtime-library/truncate.md).  \n  \n [in] `locale`  \n The locale to use.  \n  \n## Return Value  \n Zero if successful, an error code on failure.  \n  \n|Error condition|Return value and `errno`|  \n|---------------------|------------------------------|  \n|`mbstr` is `NULL` and `sizeInBytes` > 0|`EINVAL`|  \n|`wcstr` is `NULL`|`EINVAL`|  \n|The destination buffer is too small to contain the converted string (unless `count` is `_TRUNCATE`; see Remarks below)|`ERANGE`|  \n  \n If any of these conditions occurs, the invalid parameter exception is invoked as described in [Parameter Validation](../../c-runtime-library/parameter-validation.md) . If execution is allowed to continue, the function returns an error code and sets `errno` as indicated in the table.  \n  \n## Remarks  \n The `wcstombs_s` function converts a string of wide characters pointed to by `wcstr` into multibyte characters stored in the buffer pointed to by `mbstr`. The conversion will continue for each character until one of these conditions is met:  \n  \n-   A null wide character is encountered  \n  \n-   A wide character that cannot be converted is encountered  \n  \n-   The number of bytes stored in the `mbstr` buffer equals `count`.  \n  \n The destination string is always null-terminated (even in the case of an error).  \n  \n If `count` is the special value [_TRUNCATE](../../c-runtime-library/truncate.md), then `wcstombs_s` converts as much of the string as will fit into the destination buffer, while still leaving room for a null terminator.  \n  \n If `wcstombs_s` successfully converts the source string, it puts the size in bytes of the converted string, including the null terminator, into `*``pReturnValue` (provided `pReturnValue` is not `NULL`). This occurs even if the `mbstr` argument is `NULL` and provides a way to determine the required buffer size. Note that if `mbstr` is `NULL`, `count` is ignored.  \n  \n If `wcstombs_s` encounters a wide character it cannot convert to a multibyte character, it puts 0 in `*``pReturnValue`, sets the destination buffer to an empty string, sets `errno` to `EILSEQ`, and returns `EILSEQ`.  \n  \n If the sequences pointed to by `wcstr` and `mbstr` overlap, the behavior of `wcstombs_s` is undefined.  \n  \n> [!IMPORTANT]\n>  Ensure that `wcstr` and `mbstr` do not overlap, and that `count` correctly reflects the number of wide characters to convert.  \n  \n `wcstombs_s` uses the current locale for any locale-dependent behavior; `_wcstombs_s_l` is identical to `wcstombs` except that it uses the locale passed in instead. For more information, see [Locale](../../c-runtime-library/locale.md).  \n  \n In C++, using these functions is simplified by template overloads; the overloads can infer buffer length automatically (eliminating the need to specify a size argument) and they can automatically replace older, non-secure functions with their newer, secure counterparts. For more information, see [Secure Template Overloads](../../c-runtime-library/secure-template-overloads.md).  \n  \n## Requirements  \n  \n|Routine|Required header|  \n|-------------|---------------------|  \n|`wcstombs_s`|\\<stdlib.h>|  \n  \n For additional compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md) in the Introduction.  \n  \n## Example  \n This program illustrates the behavior of the `wcstombs_s` function.  \n  \n```  \n// crt_wcstombs_s.c  \n// This example converts a wide character  \n// string to a multibyte character string.  \n#include <stdio.h>  \n#include <stdlib.h>  \n#include <assert.h>  \n  \n#define BUFFER_SIZE 100  \n  \nint main( void )  \n{  \n    size_t   i;  \n    char      *pMBBuffer = (char *)malloc( BUFFER_SIZE );  \n    wchar_t*pWCBuffer = L\"Hello, world.\";  \n  \n    printf( \"Convert wide-character string:\\n\" );  \n  \n    // Conversion  \n    wcstombs_s(&i, pMBBuffer, (size_t)BUFFER_SIZE,   \n               pWCBuffer, (size_t)BUFFER_SIZE );  \n  \n    // Output  \n    printf(\"   Characters converted: %u\\n\", i);  \n    printf(\"    Multibyte character: %s\\n\\n\",  \n     pMBBuffer );  \n  \n    // Free multibyte character buffer  \n    if (pMBBuffer)  \n    {  \n    free(pMBBuffer);  \n    }  \n}  \n```  \n  \n```Output  \nConvert wide-character string:  \n   Characters converted: 14  \n    Multibyte character: Hello, world.  \n```  \n  \n## .NET Framework Equivalent  \n Not applicable. To call the standard C function, use `PInvoke`. For more information, see [Platform Invoke Examples](http://msdn.microsoft.com/Library/15926806-f0b7-487e-93a6-4e9367ec689f).  \n  \n## See Also  \n [Data Conversion](../../c-runtime-library/data-conversion.md)   \n [Locale](../../c-runtime-library/locale.md)   \n [_mbclen, mblen, _mblen_l](../../c-runtime-library/reference/mbclen-mblen-mblen-l.md)   \n [mbstowcs, _mbstowcs_l](../../c-runtime-library/reference/mbstowcs-mbstowcs-l.md)   \n [mbtowc, _mbtowc_l](../../c-runtime-library/reference/mbtowc-mbtowc-l.md)   \n [wctomb_s, _wctomb_s_l](../../c-runtime-library/reference/wctomb-s-wctomb-s-l.md)   \n [WideCharToMultiByte](http://msdn.microsoft.com/library/windows/desktop/dd374130)"}