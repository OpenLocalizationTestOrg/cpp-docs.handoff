{"nodes":[{"pos":[12,38],"content":"_getdrive | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"_getdrive | Microsoft Docs","pos":[0,26]}]},{"pos":[1000,1009],"content":"_getdrive","linkify":"_getdrive","nodes":[{"content":"_getdrive","pos":[0,9]}]},{"content":"Gets the current disk drive.","pos":[1010,1038]},{"pos":[1046,1266],"content":"[!IMPORTANT]\n This API cannot be used in applications that execute in the Windows Runtime. For more information, see [CRT functions not supported with /ZW](http://msdn.microsoft.com/library/windows/apps/jj606124.aspx).","leadings":["","> "],"nodes":[{"content":" This API cannot be used in applications that execute in the Windows Runtime. For more information, see [CRT functions not supported with /ZW](http://msdn.microsoft.com/library/windows/apps/jj606124.aspx).","pos":[13,218],"nodes":[{"content":"This API cannot be used in applications that execute in the Windows Runtime.","pos":[1,77]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>CRT functions not supported with /ZW<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/apps/jj606124.aspx)</ept>.","pos":[78,205],"source":" For more information, see [CRT functions not supported with /ZW](http://msdn.microsoft.com/library/windows/apps/jj606124.aspx)."}]}]},{"pos":[1275,1281],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[1330,1342],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Returns the current (default) drive (1=A, 2=B, and so on).","pos":[1346,1404]},{"content":"There is no error return.","pos":[1405,1430]},{"pos":[1439,1451],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"content":"Routine","pos":[1458,1465]},{"content":"Required header","pos":[1466,1481]},{"content":"<ph id=\"ph1\">\\&lt;</ph>direct.h&gt;","pos":[1538,1549],"source":"\\<direct.h>"},{"pos":[1557,1655],"content":"For more compatibility information, see <bpt id=\"p1\">[</bpt>Compatibility<ept id=\"p1\">](../../c-runtime-library/compatibility.md)</ept>.","source":"For more compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md)."},{"pos":[1664,1671],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[2758,2783],"content":".NET Framework Equivalent","linkify":".NET Framework Equivalent","nodes":[{"content":".NET Framework Equivalent","pos":[0,25]}]},{"pos":[2787,2909],"content":"<bpt id=\"p1\">[</bpt>System::Environment::CurrentDirectory<ept id=\"p1\">](https://msdn.microsoft.com/en-us/library/system.environment.currentdirectory.aspx)</ept>","source":"[System::Environment::CurrentDirectory](https://msdn.microsoft.com/en-us/library/system.environment.currentdirectory.aspx)"},{"pos":[2918,2926],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Directory Control<ept id=\"p1\">](../../c-runtime-library/directory-control.md)</ept><ph id=\"ph1\"> </ph>","pos":[2930,2996],"source":"[Directory Control](../../c-runtime-library/directory-control.md) "},{"content":"<bpt id=\"p1\"> [</bpt>_chdrive<ept id=\"p1\">](../../c-runtime-library/reference/chdrive.md)</ept><ph id=\"ph1\"> </ph>","pos":[2999,3057],"source":" [_chdrive](../../c-runtime-library/reference/chdrive.md) "},{"content":"<bpt id=\"p1\"> [</bpt>_getcwd, _wgetcwd<ept id=\"p1\">](../../c-runtime-library/reference/getcwd-wgetcwd.md)</ept><ph id=\"ph1\"> </ph>","pos":[3060,3134],"source":" [_getcwd, _wgetcwd](../../c-runtime-library/reference/getcwd-wgetcwd.md) "},{"content":"<bpt id=\"p1\"> [</bpt>_getdcwd, _wgetdcwd<ept id=\"p1\">](../../c-runtime-library/reference/getdcwd-wgetdcwd.md)</ept>","pos":[3137,3214],"source":" [_getdcwd, _wgetdcwd](../../c-runtime-library/reference/getdcwd-wgetdcwd.md)"}],"content":"---\ntitle: \"_getdrive | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\napiname: \n  - \"_getdrive\"\napilocation: \n  - \"msvcrt.dll\"\n  - \"msvcr80.dll\"\n  - \"msvcr90.dll\"\n  - \"msvcr100.dll\"\n  - \"msvcr100_clr0400.dll\"\n  - \"msvcr110.dll\"\n  - \"msvcr110_clr0400.dll\"\n  - \"msvcr120.dll\"\n  - \"msvcr120_clr0400.dll\"\n  - \"ucrtbase.dll\"\n  - \"api-ms-win-crt-filesystem-l1-1-0.dll\"\napitype: \"DLLExport\"\nf1_keywords: \n  - \"_getdrive\"\n  - \"getdrive\"\ndev_langs: \n  - \"C++\"\n  - \"C\"\nhelpviewer_keywords: \n  - \"current disk drive\"\n  - \"getdrive function\"\n  - \"disk drives\"\n  - \"_getdrive function\"\nms.assetid: e40631a0-8f1a-4897-90ac-e1037ff30bca\ncaps.latest.revision: 19\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# _getdrive\nGets the current disk drive.  \n  \n> [!IMPORTANT]\n>  This API cannot be used in applications that execute in the Windows Runtime. For more information, see [CRT functions not supported with /ZW](http://msdn.microsoft.com/library/windows/apps/jj606124.aspx).  \n  \n## Syntax  \n  \n```  \nint _getdrive( void );  \n```  \n  \n## Return Value  \n Returns the current (default) drive (1=A, 2=B, and so on). There is no error return.  \n  \n## Requirements  \n  \n|Routine|Required header|  \n|-------------|---------------------|  \n|`_getdrive`|\\<direct.h>|  \n  \n For more compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md).  \n  \n## Example  \n  \n```  \n// crt_getdrive.c  \n// compile with: /c  \n// Illustrates drive functions including:  \n//    _getdrive       _chdrive        _getdcwd  \n//  \n  \n#include <stdio.h>  \n#include <direct.h>  \n#include <stdlib.h>  \n#include <ctype.h>  \n  \nint main( void )  \n{  \n   int ch, drive, curdrive;  \n   static char path[_MAX_PATH];  \n  \n   // Save current drive.  \n   curdrive = _getdrive();  \n  \n   printf( \"Available drives are:\\n\" );  \n  \n   // If we can switch to the drive, it exists.  \n   for( drive = 1; drive <= 26; drive++ )  \n   {  \n      if( !_chdrive( drive ) )  \n      {  \n         printf( \"%c:\", drive + 'A' - 1 );  \n         if( _getdcwd( drive, path, _MAX_PATH ) != NULL )  \n            printf( \" (Current directory is %s)\", path );  \n         putchar( '\\n' );  \n      }  \n   }  \n  \n   // Restore original drive.  \n   _chdrive( curdrive );  \n}  \n```  \n  \n```Output  \nAvailable drives are:  \nA: (Current directory is A:\\)  \nC: (Current directory is C:\\)  \nE: (Current directory is E:\\testdir\\bin)  \nF: (Current directory is F:\\)  \nG: (Current directory is G:\\)  \n```  \n  \n## .NET Framework Equivalent  \n [System::Environment::CurrentDirectory](https://msdn.microsoft.com/en-us/library/system.environment.currentdirectory.aspx)  \n  \n## See Also  \n [Directory Control](../../c-runtime-library/directory-control.md)   \n [_chdrive](../../c-runtime-library/reference/chdrive.md)   \n [_getcwd, _wgetcwd](../../c-runtime-library/reference/getcwd-wgetcwd.md)   \n [_getdcwd, _wgetdcwd](../../c-runtime-library/reference/getdcwd-wgetdcwd.md)"}