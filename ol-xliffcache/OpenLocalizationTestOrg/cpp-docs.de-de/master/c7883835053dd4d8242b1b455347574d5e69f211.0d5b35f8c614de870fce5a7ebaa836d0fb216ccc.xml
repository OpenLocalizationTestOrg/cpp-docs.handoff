{"nodes":[{"pos":[12,70],"content":"atan, atanf, atanl, atan2, atan2f, atan2l | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"atan, atanf, atanl, atan2, atan2f, atan2l | Microsoft Docs","pos":[0,58]}]},{"content":"atan, atanf, atanl, atan2, atan2f, atan2l","pos":[1216,1257]},{"pos":[1258,1385],"content":"Calculates the arctangent of <ph id=\"ph1\">`x`</ph> (<ph id=\"ph2\">`atan`</ph>, <ph id=\"ph3\">`atanf`</ph>, and <ph id=\"ph4\">`atanl`</ph>) or the arctangent of <ph id=\"ph5\">`y`/`x`</ph> (<ph id=\"ph6\">`atan2`</ph>, <ph id=\"ph7\">`atan2f`</ph>, and <ph id=\"ph8\">`atan2l`</ph>).","source":"Calculates the arctangent of `x` (`atan`, `atanf`, and `atanl`) or the arctangent of `y`/`x` (`atan2`, `atan2f`, and `atan2l`)."},{"content":"Syntax","pos":[1394,1400]},{"content":"Parameters","pos":[1950,1960]},{"content":",","pos":[1967,1968]},{"content":"Any numbers.","pos":[1976,1988]},{"content":"Return Value","pos":[1997,2009]},{"content":"returns the arctangent of <ph id=\"ph1\">`x`</ph> in the range –π/2 to π/2 radians.","pos":[2020,2083],"source":" returns the arctangent of `x` in the range –π/2 to π/2 radians."},{"content":"returns the arctangent of <ph id=\"ph1\">`y/x`</ph> in the range –π to π radians.","pos":[2092,2153],"source":" returns the arctangent of `y/x` in the range –π to π radians."},{"content":"If <ph id=\"ph1\">`x`</ph> is 0, <ph id=\"ph2\">`atan`</ph> returns 0.","pos":[2154,2184],"source":" If `x` is 0, `atan` returns 0."},{"content":"If both parameters of <ph id=\"ph1\">`atan2`</ph> are 0, the function returns 0.","pos":[2185,2245],"source":" If both parameters of `atan2` are 0, the function returns 0."},{"content":"All results are in radians.","pos":[2246,2273]},{"pos":[2288,2368],"content":"uses the signs of both parameters to determine the quadrant of the return value."},{"content":"Input","pos":[2375,2380]},{"content":"SEH Exception","pos":[2381,2394]},{"content":"Matherr Exception","pos":[2395,2412]},{"pos":[2477,2486],"content":"± <ph id=\"ph1\">`QNAN`</ph>,","source":"± `QNAN`,"},{"content":"none","pos":[2492,2496]},{"content":"Remarks","pos":[2516,2523]},{"content":"The <ph id=\"ph1\">`atan`</ph> function calculates the arctangent (the inverse tangent function) of <ph id=\"ph2\">`x`</ph>.","pos":[2527,2611],"source":"The `atan` function calculates the arctangent (the inverse tangent function) of `x`."},{"content":"calculates the arctangent of <ph id=\"ph1\">`y`/`x`</ph> (if <ph id=\"ph2\">`x`</ph> equals 0, <ph id=\"ph3\">`atan2`</ph> returns π/2 if <ph id=\"ph4\">`y`</ph> is positive, -π/2 if <ph id=\"ph5\">`y`</ph> is negative, or 0 if <ph id=\"ph6\">`y`</ph> is 0.)","pos":[2620,2758],"source":" calculates the arctangent of `y`/`x` (if `x` equals 0, `atan2` returns π/2 if `y` is positive, -π/2 if `y` is negative, or 0 if `y` is 0.)"},{"content":"has an implementation that uses Streaming SIMD Extensions 2 (SSE2).","pos":[2772,2839]},{"content":"For information and restrictions about using the SSE2 implementation, see <bpt id=\"p1\">[</bpt>_set_SSE2_enable<ept id=\"p1\">](../../c-runtime-library/reference/set-sse2-enable.md)</ept>.","pos":[2840,2987],"source":" For information and restrictions about using the SSE2 implementation, see [_set_SSE2_enable](../../c-runtime-library/reference/set-sse2-enable.md)."},{"content":"Because C++ allows overloading, you can call overloads of <ph id=\"ph1\">`atan`</ph> and <ph id=\"ph2\">`atan2`</ph>.","pos":[2994,3071],"source":"Because C++ allows overloading, you can call overloads of `atan` and `atan2`."},{"content":"In a C program, <ph id=\"ph1\">`atan`</ph> and <ph id=\"ph2\">`atan2`</ph> always take and return doubles.","pos":[3072,3138],"source":" In a C program, `atan` and `atan2` always take and return doubles."},{"content":"Requirements","pos":[3147,3159]},{"content":"Routine","pos":[3166,3173]},{"content":"Required header","pos":[3174,3189]},{"pos":[3240,3278],"content":", <ph id=\"ph1\">`atan2`</ph>, <ph id=\"ph2\">`atanf`</ph>, <ph id=\"ph3\">`atan2f`</ph>, <ph id=\"ph4\">`atanl`</ph>,","source":", `atan2`, `atanf`, `atan2f`, `atanl`, "},{"content":"math.h&gt;","pos":[3290,3297],"source":"math.h>"},{"content":"Example","pos":[3307,3314]},{"content":".NET Framework Equivalent","pos":[3938,3963]},{"content":"System::Math::Atan","pos":[3974,3992]},{"content":"System::Math::Atan2","pos":[4068,4087]},{"content":"See Also","pos":[4162,4170]},{"content":"Floating-Point Support","pos":[4175,4197]},{"content":"acos, acosf, acosl","pos":[4255,4273]},{"content":"asin, asinf, asinl","pos":[4335,4353]},{"content":"cos, cosf, cosl, cosh, coshf, coshl","pos":[4415,4450]},{"content":"_matherr","pos":[4526,4534]},{"content":"sin, sinf, sinl, sinh, sinhf, sinhl","pos":[4587,4622]},{"content":"tan, tanf, tanl, tanh, tanhf, tanhl","pos":[4698,4733]},{"content":"_CIatan","pos":[4809,4816]},{"content":"_CIatan2","pos":[4858,4866]}],"content":"---\ntitle: \"atan, atanf, atanl, atan2, atan2f, atan2l | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\napiname: \n  - \"atan2f\"\n  - \"atan2l\"\n  - \"atan2\"\n  - \"atanf\"\n  - \"atan\"\n  - \"atanl\"\napilocation: \n  - \"msvcrt.dll\"\n  - \"msvcr80.dll\"\n  - \"msvcr90.dll\"\n  - \"msvcr100.dll\"\n  - \"msvcr100_clr0400.dll\"\n  - \"msvcr110.dll\"\n  - \"msvcr110_clr0400.dll\"\n  - \"msvcr120.dll\"\n  - \"msvcr120_clr0400.dll\"\n  - \"ucrtbase.dll\"\n  - \"api-ms-win-crt-math-l1-1-0.dll\"\napitype: \"DLLExport\"\nf1_keywords: \n  - \"atan\"\n  - \"atan2l\"\n  - \"atan2\"\n  - \"atanl\"\n  - \"atanf\"\n  - \"atan2f\"\ndev_langs: \n  - \"C++\"\n  - \"C\"\nhelpviewer_keywords: \n  - \"atan function\"\n  - \"atanf function\"\n  - \"atanl function\"\n  - \"atan2 function\"\n  - \"atan2l function\"\n  - \"arctangent function\"\n  - \"trigonometric functions\"\n  - \"atan2f function\"\nms.assetid: 7a87a18e-c94d-4727-9cb1-1bb5c2725ae4\ncaps.latest.revision: 21\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# atan, atanf, atanl, atan2, atan2f, atan2l\nCalculates the arctangent of `x` (`atan`, `atanf`, and `atanl`) or the arctangent of `y`/`x` (`atan2`, `atan2f`, and `atan2l`).  \n  \n## Syntax  \n  \n```  \ndouble atan(   \n   double x   \n);  \nfloat atan(  \n   float x   \n);  // C++ only  \nlong double atan(  \n   long double x  \n);  // C++ only  \ndouble atan2(   \n   double y,   \n   double x   \n);  \nfloat atan2(  \n   float y,  \n   float x  \n);  // C++ only  \nlong double atan2(  \n   long double y,  \n   long double x  \n);  // C++ only  \nfloat atanf(   \n   float x   \n);  \nlong double atanl(  \n   long double x  \n);  \nfloat atan2f(  \n   float y,  \n   float x  \n);  \nlong double atan2l(  \n   long double y,  \n   long double x  \n);  \n```  \n  \n#### Parameters  \n `x`, `y`  \n Any numbers.  \n  \n## Return Value  \n `atan` returns the arctangent of `x` in the range –π/2 to π/2 radians. `atan2` returns the arctangent of `y/x` in the range –π to π radians. If `x` is 0, `atan` returns 0. If both parameters of `atan2` are 0, the function returns 0. All results are in radians.  \n  \n `atan2` uses the signs of both parameters to determine the quadrant of the return value.  \n  \n|Input|SEH Exception|Matherr Exception|  \n|-----------|-------------------|-----------------------|  \n|± `QNAN`,`IND`|none|`_DOMAIN`|  \n  \n## Remarks  \n The `atan` function calculates the arctangent (the inverse tangent function) of `x`. `atan2` calculates the arctangent of `y`/`x` (if `x` equals 0, `atan2` returns π/2 if `y` is positive, -π/2 if `y` is negative, or 0 if `y` is 0.)  \n  \n `atan` has an implementation that uses Streaming SIMD Extensions 2 (SSE2). For information and restrictions about using the SSE2 implementation, see [_set_SSE2_enable](../../c-runtime-library/reference/set-sse2-enable.md).  \n  \n Because C++ allows overloading, you can call overloads of `atan` and `atan2`. In a C program, `atan` and `atan2` always take and return doubles.  \n  \n## Requirements  \n  \n|Routine|Required header|  \n|-------------|---------------------|  \n|`atan`, `atan2`, `atanf`, `atan2f`, `atanl`, `atan2l`|\\<math.h>|  \n  \n## Example  \n  \n```  \n// crt_atan.c  \n// arguments: 5 0.5  \n#include <math.h>  \n#include <stdio.h>  \n#include <errno.h>  \n  \nint main( int ac, char* av[] )   \n{  \n   double x, y, theta;  \n   if( ac != 3 ){  \n      fprintf( stderr, \"Usage: %s <x> <y>\\n\", av[0] );  \n      return 1;  \n   }  \n   x = atof( av[1] );  \n   theta = atan( x );  \n   printf( \"Arctangent of %f: %f\\n\", x, theta );  \n   y = atof( av[2] );  \n   theta = atan2( y, x );  \n   printf( \"Arctangent of %f / %f: %f\\n\", y, x, theta );   \n   return 0;  \n}  \n```  \n  \n```Output  \nArctangent of 5.000000: 1.373401  \nArctangent of 0.500000 / 5.000000: 0.099669  \n```  \n  \n## .NET Framework Equivalent  \n  \n-   [System::Math::Atan](https://msdn.microsoft.com/en-us/library/system.math.atan.aspx)  \n  \n-   [System::Math::Atan2](https://msdn.microsoft.com/en-us/library/system.math.atan2.aspx)  \n  \n## See Also  \n [Floating-Point Support](../../c-runtime-library/floating-point-support.md)   \n [acos, acosf, acosl](../../c-runtime-library/reference/acos-acosf-acosl.md)   \n [asin, asinf, asinl](../../c-runtime-library/reference/asin-asinf-asinl.md)   \n [cos, cosf, cosl, cosh, coshf, coshl](../../c-runtime-library/reference/cos-cosf-cosl-cosh-coshf-coshl.md)   \n [_matherr](../../c-runtime-library/reference/matherr.md)   \n [sin, sinf, sinl, sinh, sinhf, sinhl](../../c-runtime-library/reference/sin-sinf-sinl-sinh-sinhf-sinhl.md)   \n [tan, tanf, tanl, tanh, tanhf, tanhl](../../c-runtime-library/reference/tan-tanf-tanl-tanh-tanhf-tanhl.md)   \n [_CIatan](../../c-runtime-library/ciatan.md)   \n [_CIatan2](../../c-runtime-library/ciatan2.md)"}