<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-787e512" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">bf27d1123651a5860487a2fc6bd5dbace8f6e2bd</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\ide\creating-a-com-interface-visual-cpp.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c552ca1829da40030440efad11903fa1d5fa76cb</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ca765de0388e620319612d93ce5eb95086c1be16</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Creating a COM Interface (Visual C++) | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Creating a COM Interface (Visual C++)</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Visual C++ provides wizards and templates to create projects that use COM defining interfaces and dispinterfaces for your COM objects and automation classes.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>You can use these wizards to perform the following three common tasks:</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Adding ATL Support to Your MFC Project</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Add ATL support to an MFC application after you create an MFC project using the <bpt id="p1">[</bpt>MFC Application Wizard<ept id="p1">](../mfc/reference/mfc-application-wizard.md)</ept> and then running the <bpt id="p2">**</bpt>Add ATL Support to MFC<ept id="p2">**</ept> code wizard.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>This support applies only to simple COM objects added to an MFC executable or DLL project.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>These ATL objects may have multiple interfaces.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Creating an MFC ActiveX Control</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Open the <bpt id="p1">[</bpt>MFC ActiveX Control Wizard<ept id="p1">](../mfc/reference/mfc-activex-control-wizard.md)</ept> to create an ActiveX control with a dispinterface and an event map defined in the .idl file and the control class, respectively.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Adding an ATL Control</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Use a combination of the <bpt id="p1">[</bpt>ATL Project Wizard<ept id="p1">](../atl/reference/atl-project-wizard.md)</ept> and the <bpt id="p2">[</bpt>ATL Control Wizard<ept id="p2">](../atl/reference/atl-control-wizard.md)</ept> to create an ATL ActiveX control.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>You can also add an ATL control to an MFC project to which you have added ATL support, as described above.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Additionally, if you select <bpt id="p1">**</bpt>ATL Control<ept id="p1">**</ept> in the <bpt id="p2">**</bpt>Add Class<ept id="p2">**</ept> dialog box, and you have not yet added ATL support to your MFC project, Visual Studio displays a dialog box confirming adding ATL support to your MFC project.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>This wizard generates IDL source and a COM map in the project classes.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Once you have an ATL project open, the <bpt id="p1">[</bpt>Add Class<ept id="p1">](../ide/add-class-dialog-box.md)</ept> dialog box gives you the choice of additional wizards and templates to add COM interfaces to your project.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The following wizards allow you to establish one or more interfaces for the object:</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>ATL COM+ 1.0 Component Wizard</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>ATL Simple Object Wizard</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>ATL Active Server Page Component Wizard</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>ATL Control Wizard</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Additionally, you can implement new interfaces on your COM control by right-clicking the object's control class in Class View and clicking <bpt id="p1">[</bpt>Implement Interface<ept id="p1">](../ide/implement-interface-wizard.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Visual Studio does not provide a wizard to add an interface to a project.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>You can add an interface to an ATL project or to an <bpt id="p1">[</bpt>Adding ATL Support to Your MFC Project<ept id="p1">](../mfc/reference/adding-atl-support-to-your-mfc-project.md)</ept> by adding a simple object using the <bpt id="p2">[</bpt>ATL Simple Object Wizard<ept id="p2">](../atl/reference/atl-simple-object-wizard.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Alternately, open the project's .idl file and create the interface by typing:</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Implementing an Interface<ept id="p1">](../ide/implementing-an-interface-visual-cpp.md)</ept> and <bpt id="p2">[</bpt>Adding Objects and Controls to an ATL Project<ept id="p2">](../atl/reference/adding-objects-and-controls-to-an-atl-project.md)</ept> for more information.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Visual C++ provides several ways to view and <bpt id="p1">[</bpt>edit the COM interfaces<ept id="p1">](../ide/editing-a-com-interface.md)</ept> defined for your projects.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Class View<ept id="p1">](http://msdn.microsoft.com/en-us/8d7430a9-3e33-454c-a9e1-a85e3d2db925)</ept> displays icons for any interface or dispinterface defined in an .idl file in your C++ project.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>For ATL-based COM object classes, Class View reads the COM map in the ATL class to display the relationship between the ATL class and any interfaces it implements.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>In Class View and its shortcut menus, you can work with interfaces as follows:</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Add ATL objects to an MFC-based application.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Add methods, properties, and events.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Jump directly to an item's interface code by double-clicking the item.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Creating Desktop Projects By Using Application Wizards</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Adding Functionality with Code Wizards</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>