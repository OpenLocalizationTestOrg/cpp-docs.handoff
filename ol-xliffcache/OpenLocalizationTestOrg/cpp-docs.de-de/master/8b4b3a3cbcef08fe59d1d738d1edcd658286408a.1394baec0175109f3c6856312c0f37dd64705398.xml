{"nodes":[{"pos":[12,46],"content":"CTaskDialog Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"CTaskDialog Class | Microsoft Docs","pos":[0,34]}]},{"pos":[607,624],"content":"CTaskDialog Class","linkify":"CTaskDialog Class","nodes":[{"content":"CTaskDialog Class","pos":[0,17]}]},{"content":"A pop-up dialog box that functions like a message box but can display additional information to the user.","pos":[625,730]},{"content":"The <ph id=\"ph1\">`CTaskDialog`</ph> also includes functionality for gathering information from the user.","pos":[731,817],"source":" The `CTaskDialog` also includes functionality for gathering information from the user."},{"pos":[826,832],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[893,900],"content":"Members","linkify":"Members","nodes":[{"content":"Members","pos":[0,7]}]},{"pos":[910,922],"content":"Constructors","linkify":"Constructors","nodes":[{"content":"Constructors","pos":[0,12]}]},{"pos":[943,996],"content":"<bpt id=\"p1\">[</bpt>CTaskDialog::CTaskDialog<ept id=\"p1\">](#ctaskdialog__ctaskdialog)</ept>","source":"[CTaskDialog::CTaskDialog](#ctaskdialog__ctaskdialog)"},{"pos":[997,1031],"content":"Constructs a <ph id=\"ph1\">`CTaskDialog`</ph> object.","source":"Constructs a `CTaskDialog` object."},{"pos":[1042,1049],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"pos":[1070,1135],"content":"<bpt id=\"p1\">[</bpt>CTaskDialog::AddCommandControl<ept id=\"p1\">](#ctaskdialog__addcommandcontrol)</ept>","source":"[CTaskDialog::AddCommandControl](#ctaskdialog__addcommandcontrol)"},{"pos":[1136,1187],"content":"Adds a command button control to the <ph id=\"ph1\">`CTaskDialog`</ph>.","source":"Adds a command button control to the `CTaskDialog`."},{"pos":[1192,1251],"content":"<bpt id=\"p1\">[</bpt>CTaskDialog::AddRadioButton<ept id=\"p1\">](#ctaskdialog__addradiobutton)</ept>","source":"[CTaskDialog::AddRadioButton](#ctaskdialog__addradiobutton)"},{"pos":[1252,1293],"content":"Adds a radio button to the <ph id=\"ph1\">`CTaskDialog`</ph>.","source":"Adds a radio button to the `CTaskDialog`."},{"pos":[1298,1367],"content":"<bpt id=\"p1\">[</bpt>CTaskDialog::ClickCommandControl<ept id=\"p1\">](#ctaskdialog__clickcommandcontrol)</ept>","source":"[CTaskDialog::ClickCommandControl](#ctaskdialog__clickcommandcontrol)"},{"content":"Clicks a command button control or common button programmatically.","pos":[1368,1434]},{"pos":[1439,1502],"content":"<bpt id=\"p1\">[</bpt>CTaskDialog::ClickRadioButton<ept id=\"p1\">](#ctaskdialog__clickradiobutton)</ept>","source":"[CTaskDialog::ClickRadioButton](#ctaskdialog__clickradiobutton)"},{"content":"Clicks a radio button programmatically.","pos":[1503,1542]},{"pos":[1547,1592],"content":"<bpt id=\"p1\">[</bpt>CTaskDialog::DoModal<ept id=\"p1\">](#ctaskdialog__domodal)</ept>","source":"[CTaskDialog::DoModal](#ctaskdialog__domodal)"},{"pos":[1593,1620],"content":"Displays the <ph id=\"ph1\">`CTaskDialog`</ph>.","source":"Displays the `CTaskDialog`."},{"pos":[1625,1696],"content":"<bpt id=\"p1\">[</bpt>CTaskDialog::GetCommonButtonCount<ept id=\"p1\">](#ctaskdialog__getcommonbuttoncount)</ept>","source":"[CTaskDialog::GetCommonButtonCount](#ctaskdialog__getcommonbuttoncount)"},{"content":"Retrieves the number of common buttons available.","pos":[1697,1746]},{"pos":[1751,1820],"content":"<bpt id=\"p1\">[</bpt>CTaskDialog::GetCommonButtonFlag<ept id=\"p1\">](#ctaskdialog__getcommonbuttonflag)</ept>","source":"[CTaskDialog::GetCommonButtonFlag](#ctaskdialog__getcommonbuttonflag)"},{"pos":[1821,1922],"content":"Converts a standard Windows button to the common button type associated with the <ph id=\"ph1\">`CTaskDialog`</ph> class.","source":"Converts a standard Windows button to the common button type associated with the `CTaskDialog` class."},{"pos":[1927,1992],"content":"<bpt id=\"p1\">[</bpt>CTaskDialog::GetCommonButtonId<ept id=\"p1\">](#ctaskdialog__getcommonbuttonid)</ept>","source":"[CTaskDialog::GetCommonButtonId](#ctaskdialog__getcommonbuttonid)"},{"pos":[1993,2102],"content":"Converts one of the common button types associated with the <ph id=\"ph1\">`CTaskDialog`</ph> class to a standard Windows button.","source":"Converts one of the common button types associated with the `CTaskDialog` class to a standard Windows button."},{"pos":[2107,2158],"content":"<bpt id=\"p1\">[</bpt>CTaskDialog::GetOptions<ept id=\"p1\">](#ctaskdialog__getoptions)</ept>","source":"[CTaskDialog::GetOptions](#ctaskdialog__getoptions)"},{"pos":[2159,2207],"content":"Returns the option flags for this <ph id=\"ph1\">`CTaskDialog`</ph>.","source":"Returns the option flags for this `CTaskDialog`."},{"pos":[2212,2297],"content":"<bpt id=\"p1\">[</bpt>CTaskDialog::GetSelectedCommandControlID<ept id=\"p1\">](#ctaskdialog__getselectedcommandcontrolid)</ept>","source":"[CTaskDialog::GetSelectedCommandControlID](#ctaskdialog__getselectedcommandcontrolid)"},{"content":"Returns the selected command button control.","pos":[2298,2342]},{"pos":[2347,2426],"content":"<bpt id=\"p1\">[</bpt>CTaskDialog::GetSelectedRadioButtonID<ept id=\"p1\">](#ctaskdialog__getselectedradiobuttonid)</ept>","source":"[CTaskDialog::GetSelectedRadioButtonID](#ctaskdialog__getselectedradiobuttonid)"},{"content":"Returns the selected radio button.","pos":[2427,2461]},{"pos":[2466,2553],"content":"<bpt id=\"p1\">[</bpt>CTaskDialog::GetVerificationCheckboxState<ept id=\"p1\">](#ctaskdialog__getverificationcheckboxstate)</ept>","source":"[CTaskDialog::GetVerificationCheckboxState](#ctaskdialog__getverificationcheckboxstate)"},{"content":"Retrieves the state of the verification check box.","pos":[2554,2604]},{"pos":[2609,2686],"content":"<bpt id=\"p1\">[</bpt>CTaskDialog::IsCommandControlEnabled<ept id=\"p1\">](#ctaskdialog__iscommandcontrolenabled)</ept>","source":"[CTaskDialog::IsCommandControlEnabled](#ctaskdialog__iscommandcontrolenabled)"},{"content":"Determines whether a command button control or common button is enabled.","pos":[2687,2759]},{"pos":[2764,2835],"content":"<bpt id=\"p1\">[</bpt>CTaskDialog::IsRadioButtonEnabled<ept id=\"p1\">](#ctaskdialog__isradiobuttonenabled)</ept>","source":"[CTaskDialog::IsRadioButtonEnabled](#ctaskdialog__isradiobuttonenabled)"},{"content":"Determines whether a radio button is enabled.","pos":[2836,2881]},{"pos":[2886,2939],"content":"<bpt id=\"p1\">[</bpt>CTaskDialog::IsSupported<ept id=\"p1\">](#ctaskdialog__issupported)</ept>","source":"[CTaskDialog::IsSupported](#ctaskdialog__issupported)"},{"pos":[2940,3031],"content":"Determines whether the computer that is running the application supports the <ph id=\"ph1\">`CTaskDialog`</ph>.","source":"Determines whether the computer that is running the application supports the `CTaskDialog`."},{"pos":[3036,3105],"content":"<bpt id=\"p1\">[</bpt>CTaskDialog::LoadCommandControls<ept id=\"p1\">](#ctaskdialog__loadcommandcontrols)</ept>","source":"[CTaskDialog::LoadCommandControls](#ctaskdialog__loadcommandcontrols)"},{"content":"Adds command button controls by using data from the string table.","pos":[3106,3171]},{"pos":[3176,3239],"content":"<bpt id=\"p1\">[</bpt>CTaskDialog::LoadRadioButtons<ept id=\"p1\">](#ctaskdialog__loadradiobuttons)</ept>","source":"[CTaskDialog::LoadRadioButtons](#ctaskdialog__loadradiobuttons)"},{"content":"Adds radio buttons by using data from the string table.","pos":[3240,3295]},{"pos":[3300,3351],"content":"<bpt id=\"p1\">[</bpt>CTaskDialog::NavigateTo<ept id=\"p1\">](#ctaskdialog__navigateto)</ept>","source":"[CTaskDialog::NavigateTo](#ctaskdialog__navigateto)"},{"pos":[3352,3397],"content":"Transfers the focus to another <ph id=\"ph1\">`CTaskDialog`</ph>.","source":"Transfers the focus to another `CTaskDialog`."},{"pos":[3402,3475],"content":"<bpt id=\"p1\">[</bpt>CTaskDialog::OnCommandControlClick<ept id=\"p1\">](#ctaskdialog__oncommandcontrolclick)</ept>","source":"[CTaskDialog::OnCommandControlClick](#ctaskdialog__oncommandcontrolclick)"},{"content":"The framework calls this method when the user clicks a command button control.","pos":[3476,3554]},{"pos":[3559,3606],"content":"<bpt id=\"p1\">[</bpt>CTaskDialog::OnCreate<ept id=\"p1\">](#ctaskdialog__oncreate)</ept>","source":"[CTaskDialog::OnCreate](#ctaskdialog__oncreate)"},{"pos":[3607,3674],"content":"The framework calls this method after it creates the <ph id=\"ph1\">`CTaskDialog`</ph>.","source":"The framework calls this method after it creates the `CTaskDialog`."},{"pos":[3679,3728],"content":"<bpt id=\"p1\">[</bpt>CTaskDialog::OnDestroy<ept id=\"p1\">](#ctaskdialog__ondestroy)</ept>","source":"[CTaskDialog::OnDestroy](#ctaskdialog__ondestroy)"},{"pos":[3729,3810],"content":"The framework calls this method immediately before it destroys the <ph id=\"ph1\">`CTaskDialog`</ph>.","source":"The framework calls this method immediately before it destroys the `CTaskDialog`."},{"pos":[3815,3884],"content":"<bpt id=\"p1\">[</bpt>CTaskDialog::OnExpandButtonClick<ept id=\"p1\">](#ctaskdialog__onexpandbuttonclick)</ept>","source":"[CTaskDialog::OnExpandButtonClick](#ctaskdialog__onexpandbuttonclick)"},{"content":"The framework calls this method when the user clicks on the expansion button.","pos":[3885,3962]},{"pos":[3967,4010],"content":"<bpt id=\"p1\">[</bpt>CTaskDialog::OnHelp<ept id=\"p1\">](#ctaskdialog__onhelp)</ept>","source":"[CTaskDialog::OnHelp](#ctaskdialog__onhelp)"},{"content":"The framework calls this method when the user requests help.","pos":[4011,4071]},{"pos":[4076,4139],"content":"<bpt id=\"p1\">[</bpt>CTaskDialog::OnHyperlinkClick<ept id=\"p1\">](#ctaskdialog__onhyperlinkclick)</ept>","source":"[CTaskDialog::OnHyperlinkClick](#ctaskdialog__onhyperlinkclick)"},{"content":"The framework calls this method when the user clicks on a hyperlink.","pos":[4140,4208]},{"pos":[4213,4256],"content":"<bpt id=\"p1\">[</bpt>CTaskDialog::OnInit<ept id=\"p1\">](#ctaskdialog__oninit)</ept>","source":"[CTaskDialog::OnInit](#ctaskdialog__oninit)"},{"pos":[4257,4327],"content":"The framework calls this method when the <ph id=\"ph1\">`CTaskDialog`</ph> is initialized.","source":"The framework calls this method when the `CTaskDialog` is initialized."},{"pos":[4332,4391],"content":"<bpt id=\"p1\">[</bpt>CTaskDialog::OnNavigatePage<ept id=\"p1\">](#ctaskdialog__onnavigatepage)</ept>","source":"[CTaskDialog::OnNavigatePage](#ctaskdialog__onnavigatepage)"},{"pos":[4392,4499],"content":"The framework calls this method when the user moves the focus with regard to controls on the <ph id=\"ph1\">`CTaskDialog`</ph>.","source":"The framework calls this method when the user moves the focus with regard to controls on the `CTaskDialog`."},{"pos":[4504,4571],"content":"<bpt id=\"p1\">[</bpt>CTaskDialog::OnRadioButtonClick<ept id=\"p1\">](#ctaskdialog__onradiobuttonclick)</ept>","source":"[CTaskDialog::OnRadioButtonClick](#ctaskdialog__onradiobuttonclick)"},{"content":"The framework calls this method when the user selects a radio button control.","pos":[4572,4649]},{"pos":[4654,4699],"content":"<bpt id=\"p1\">[</bpt>CTaskDialog::OnTimer<ept id=\"p1\">](#ctaskdialog__ontimer)</ept>","source":"[CTaskDialog::OnTimer](#ctaskdialog__ontimer)"},{"content":"The framework calls this method when the timer expires.","pos":[4700,4755]},{"pos":[4760,4845],"content":"<bpt id=\"p1\">[</bpt>CTaskDialog::OnVerificationCheckboxClick<ept id=\"p1\">](#ctaskdialog__onverificationcheckboxclick)</ept>","source":"[CTaskDialog::OnVerificationCheckboxClick](#ctaskdialog__onverificationcheckboxclick)"},{"content":"The framework calls this method when the user clicks the verification check box.","pos":[4846,4926]},{"pos":[4931,5010],"content":"<bpt id=\"p1\">[</bpt>CTaskDialog::RemoveAllCommandControls<ept id=\"p1\">](#ctaskdialog__removeallcommandcontrols)</ept>","source":"[CTaskDialog::RemoveAllCommandControls](#ctaskdialog__removeallcommandcontrols)"},{"pos":[5011,5067],"content":"Removes all the command controls from the <ph id=\"ph1\">`CTaskDialog`</ph>.","source":"Removes all the command controls from the `CTaskDialog`."},{"pos":[5072,5145],"content":"<bpt id=\"p1\">[</bpt>CTaskDialog::RemoveAllRadioButtons<ept id=\"p1\">](#ctaskdialog__removeallradiobuttons)</ept>","source":"[CTaskDialog::RemoveAllRadioButtons](#ctaskdialog__removeallradiobuttons)"},{"pos":[5146,5199],"content":"Removes all the radio buttons from the <ph id=\"ph1\">`CTaskDialog`</ph>.","source":"Removes all the radio buttons from the `CTaskDialog`."},{"pos":[5204,5283],"content":"<bpt id=\"p1\">[</bpt>CTaskDialog::SetCommandControlOptions<ept id=\"p1\">](#ctaskdialog__setcommandcontroloptions)</ept>","source":"[CTaskDialog::SetCommandControlOptions](#ctaskdialog__setcommandcontroloptions)"},{"pos":[5284,5338],"content":"Updates a command button control on the <ph id=\"ph1\">`CTaskDialog`</ph>.","source":"Updates a command button control on the `CTaskDialog`."},{"pos":[5343,5418],"content":"<bpt id=\"p1\">[</bpt>CTaskDialog::SetCommonButtonOptions<ept id=\"p1\">](#ctaskdialog__setcommonbuttonoptions)</ept>","source":"[CTaskDialog::SetCommonButtonOptions](#ctaskdialog__setcommonbuttonoptions)"},{"content":"Updates a subset of common buttons to be enabled and require UAC elevation.","pos":[5419,5494]},{"pos":[5499,5562],"content":"<bpt id=\"p1\">[</bpt>CTaskDialog::SetCommonButtons<ept id=\"p1\">](#ctaskdialog__setcommonbuttons)</ept>","source":"[CTaskDialog::SetCommonButtons](#ctaskdialog__setcommonbuttons)"},{"pos":[5563,5604],"content":"Adds common buttons to the <ph id=\"ph1\">`CTaskDialog`</ph>.","source":"Adds common buttons to the `CTaskDialog`."},{"pos":[5609,5660],"content":"<bpt id=\"p1\">[</bpt>CTaskDialog::SetContent<ept id=\"p1\">](#ctaskdialog__setcontent)</ept>","source":"[CTaskDialog::SetContent](#ctaskdialog__setcontent)"},{"pos":[5661,5702],"content":"Updates the content of the <ph id=\"ph1\">`CTaskDialog`</ph>.","source":"Updates the content of the `CTaskDialog`."},{"pos":[5707,5786],"content":"<bpt id=\"p1\">[</bpt>CTaskDialog::SetDefaultCommandControl<ept id=\"p1\">](#ctaskdialog__setdefaultcommandcontrol)</ept>","source":"[CTaskDialog::SetDefaultCommandControl](#ctaskdialog__setdefaultcommandcontrol)"},{"content":"Specifies the default command button control.","pos":[5787,5832]},{"pos":[5837,5910],"content":"<bpt id=\"p1\">[</bpt>CTaskDialog::SetDefaultRadioButton<ept id=\"p1\">](#ctaskdialog__setdefaultradiobutton)</ept>","source":"[CTaskDialog::SetDefaultRadioButton](#ctaskdialog__setdefaultradiobutton)"},{"content":"Specifies the default radio button.","pos":[5911,5946]},{"pos":[5951,6010],"content":"<bpt id=\"p1\">[</bpt>CTaskDialog::SetDialogWidth<ept id=\"p1\">](#ctaskdialog__setdialogwidth)</ept>","source":"[CTaskDialog::SetDialogWidth](#ctaskdialog__setdialogwidth)"},{"pos":[6011,6050],"content":"Adjusts the width of the <ph id=\"ph1\">`CTaskDialog`</ph>.","source":"Adjusts the width of the `CTaskDialog`."},{"pos":[6055,6118],"content":"<bpt id=\"p1\">[</bpt>CTaskDialog::SetExpansionArea<ept id=\"p1\">](#ctaskdialog__setexpansionarea)</ept>","source":"[CTaskDialog::SetExpansionArea](#ctaskdialog__setexpansionarea)"},{"pos":[6119,6167],"content":"Updates the expansion area of the <ph id=\"ph1\">`CTaskDialog`</ph>.","source":"Updates the expansion area of the `CTaskDialog`."},{"pos":[6172,6229],"content":"<bpt id=\"p1\">[</bpt>CTaskDialog::SetFooterIcon<ept id=\"p1\">](#ctaskdialog__setfootericon)</ept>","source":"[CTaskDialog::SetFooterIcon](#ctaskdialog__setfootericon)"},{"pos":[6230,6276],"content":"Updates the footer icon for the <ph id=\"ph1\">`CTaskDialog`</ph>.","source":"Updates the footer icon for the `CTaskDialog`."},{"pos":[6281,6338],"content":"<bpt id=\"p1\">[</bpt>CTaskDialog::SetFooterText<ept id=\"p1\">](#ctaskdialog__setfootertext)</ept>","source":"[CTaskDialog::SetFooterText](#ctaskdialog__setfootertext)"},{"pos":[6339,6391],"content":"Updates the text on the footer of the <ph id=\"ph1\">`CTaskDialog`</ph>.","source":"Updates the text on the footer of the `CTaskDialog`."},{"pos":[6396,6449],"content":"<bpt id=\"p1\">[</bpt>CTaskDialog::SetMainIcon<ept id=\"p1\">](#ctaskdialog__setmainicon)</ept>","source":"[CTaskDialog::SetMainIcon](#ctaskdialog__setmainicon)"},{"pos":[6450,6493],"content":"Updates the main icon of the <ph id=\"ph1\">`CTaskDialog`</ph>.","source":"Updates the main icon of the `CTaskDialog`."},{"pos":[6498,6565],"content":"<bpt id=\"p1\">[</bpt>CTaskDialog::SetMainInstruction<ept id=\"p1\">](#ctaskdialog__setmaininstruction)</ept>","source":"[CTaskDialog::SetMainInstruction](#ctaskdialog__setmaininstruction)"},{"pos":[6566,6616],"content":"Updates the main instruction of the <ph id=\"ph1\">`CTaskDialog`</ph>.","source":"Updates the main instruction of the `CTaskDialog`."},{"pos":[6621,6672],"content":"<bpt id=\"p1\">[</bpt>CTaskDialog::SetOptions<ept id=\"p1\">](#ctaskdialog__setoptions)</ept>","source":"[CTaskDialog::SetOptions](#ctaskdialog__setoptions)"},{"pos":[6673,6718],"content":"Configures the options for the <ph id=\"ph1\">`CTaskDialog`</ph>.","source":"Configures the options for the `CTaskDialog`."},{"pos":[6723,6796],"content":"<bpt id=\"p1\">[</bpt>CTaskDialog::SetProgressBarMarquee<ept id=\"p1\">](#ctaskdialog__setprogressbarmarquee)</ept>","source":"[CTaskDialog::SetProgressBarMarquee](#ctaskdialog__setprogressbarmarquee)"},{"pos":[6797,6874],"content":"Configures a marquee bar for the <ph id=\"ph1\">`CTaskDialog`</ph> and adds it to the dialog box.","source":"Configures a marquee bar for the `CTaskDialog` and adds it to the dialog box."},{"pos":[6879,6954],"content":"<bpt id=\"p1\">[</bpt>CTaskDialog::SetProgressBarPosition<ept id=\"p1\">](#ctaskdialog__setprogressbarposition)</ept>","source":"[CTaskDialog::SetProgressBarPosition](#ctaskdialog__setprogressbarposition)"},{"content":"Adjusts the position of the progress bar.","pos":[6955,6996]},{"pos":[7001,7070],"content":"<bpt id=\"p1\">[</bpt>CTaskDialog::SetProgressBarRange<ept id=\"p1\">](#ctaskdialog__setprogressbarrange)</ept>","source":"[CTaskDialog::SetProgressBarRange](#ctaskdialog__setprogressbarrange)"},{"content":"Adjusts the range of the progress bar.","pos":[7071,7109]},{"pos":[7114,7183],"content":"<bpt id=\"p1\">[</bpt>CTaskDialog::SetProgressBarState<ept id=\"p1\">](#ctaskdialog__setprogressbarstate)</ept>","source":"[CTaskDialog::SetProgressBarState](#ctaskdialog__setprogressbarstate)"},{"pos":[7184,7256],"content":"Sets the state of the progress bar and displays it on the <ph id=\"ph1\">`CTaskDialog`</ph>.","source":"Sets the state of the progress bar and displays it on the `CTaskDialog`."},{"pos":[7261,7334],"content":"<bpt id=\"p1\">[</bpt>CTaskDialog::SetRadioButtonOptions<ept id=\"p1\">](#ctaskdialog__setradiobuttonoptions)</ept>","source":"[CTaskDialog::SetRadioButtonOptions](#ctaskdialog__setradiobuttonoptions)"},{"content":"Enables or disables a radio button.","pos":[7335,7370]},{"pos":[7375,7452],"content":"<bpt id=\"p1\">[</bpt>CTaskDialog::SetVerificationCheckbox<ept id=\"p1\">](#ctaskdialog__setverificationcheckbox)</ept>","source":"[CTaskDialog::SetVerificationCheckbox](#ctaskdialog__setverificationcheckbox)"},{"content":"Sets the checked state of the verification check box.","pos":[7453,7506]},{"pos":[7511,7596],"content":"<bpt id=\"p1\">[</bpt>CTaskDialog::SetVerificationCheckboxText<ept id=\"p1\">](#ctaskdialog__setverificationcheckboxtext)</ept>","source":"[CTaskDialog::SetVerificationCheckboxText](#ctaskdialog__setverificationcheckboxtext)"},{"content":"Sets the text on the right side of the verification check box.","pos":[7597,7659]},{"pos":[7664,7723],"content":"<bpt id=\"p1\">[</bpt>CTaskDialog::SetWindowTitle<ept id=\"p1\">](#ctaskdialog__setwindowtitle)</ept>","source":"[CTaskDialog::SetWindowTitle](#ctaskdialog__setwindowtitle)"},{"pos":[7724,7760],"content":"Sets the title of the <ph id=\"ph1\">`CTaskDialog`</ph>.","source":"Sets the title of the `CTaskDialog`."},{"pos":[7765,7816],"content":"<bpt id=\"p1\">[</bpt>CTaskDialog::ShowDialog<ept id=\"p1\">](#ctaskdialog__showdialog)</ept>","source":"[CTaskDialog::ShowDialog](#ctaskdialog__showdialog)"},{"pos":[7817,7854],"content":"Creates and displays a <ph id=\"ph1\">`CTaskDialog`</ph>.","source":"Creates and displays a `CTaskDialog`."},{"pos":[7859,7926],"content":"<bpt id=\"p1\">[</bpt>CTaskDialog::TaskDialogCallback<ept id=\"p1\">](#ctaskdialog__taskdialogcallback)</ept>","source":"[CTaskDialog::TaskDialogCallback](#ctaskdialog__taskdialogcallback)"},{"content":"The framework calls this in response to various Windows messages.","pos":[7927,7992]},{"pos":[8003,8015],"content":"Data Members","linkify":"Data Members","nodes":[{"content":"Data Members","pos":[0,12]}]},{"pos":[8049,8108],"content":"The array of command button controls for the <ph id=\"ph1\">`CTaskDialog`</ph>.","source":"The array of command button controls for the `CTaskDialog`."},{"pos":[8131,8188],"content":"The array of radio button controls for the <ph id=\"ph1\">`CTaskDialog`</ph>.","source":"The array of radio button controls for the `CTaskDialog`."},{"pos":[8207,8291],"content":"<ph id=\"ph1\">`TRUE`</ph> indicates the verification check box is checked; <ph id=\"ph2\">`FALSE`</ph> indicates it is not.","source":"`TRUE` indicates the verification check box is checked; `FALSE` indicates it is not."},{"pos":[8311,8355],"content":"The icon in the footer of the <ph id=\"ph1\">`CTaskDialog`</ph>.","source":"The icon in the footer of the `CTaskDialog`."},{"pos":[8369,8414],"content":"A handle to the window for the <ph id=\"ph1\">`CTaskDialog`</ph>.","source":"A handle to the window for the `CTaskDialog`."},{"pos":[8432,8467],"content":"The main icon of the <ph id=\"ph1\">`CTaskDialog`</ph>.","source":"The main icon of the `CTaskDialog`."},{"content":"A mask that indicates which of the common buttons are disabled.","pos":[8492,8555]},{"content":"A mask that indicates which of the common buttons require UAC elevation.","pos":[8581,8653]},{"content":"The ID of the selected command button control.","pos":[8672,8718]},{"pos":[8741,8819],"content":"A mask that indicates which common buttons are displayed on the <ph id=\"ph1\">`CTaskDialog`</ph>.","source":"A mask that indicates which common buttons are displayed on the `CTaskDialog`."},{"pos":[8851,8941],"content":"The ID of the command button control that is selected when the <ph id=\"ph1\">`CTaskDialog`</ph> is displayed.","source":"The ID of the command button control that is selected when the `CTaskDialog` is displayed."},{"pos":[8970,9058],"content":"The ID of the radio button control that is selected when the <ph id=\"ph1\">`CTaskDialog`</ph> is displayed.","source":"The ID of the radio button control that is selected when the `CTaskDialog` is displayed."},{"pos":[9074,9130],"content":"A mask that indicates the options for the <ph id=\"ph1\">`CTaskDialog`</ph>.","source":"A mask that indicates the options for the `CTaskDialog`."},{"content":"The current position for the progress bar.","pos":[9152,9194]},{"content":"This value must be between <ph id=\"ph1\">`m_nProgressRangeMin`</ph> and <ph id=\"ph2\">`m_nProgressRangeMax`</ph>.","pos":[9196,9271],"source":"  This value must be between `m_nProgressRangeMin` and `m_nProgressRangeMax`."},{"content":"The maximum value for the progress bar.","pos":[9298,9337]},{"content":"The minimum value for the progress bar.","pos":[9364,9403]},{"content":"The state of the progress bar.","pos":[9427,9457]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>CTaskDialog::SetProgressBarState<ept id=\"p1\">](#ctaskdialog__setprogressbarstate)</ept>.","pos":[9458,9554],"source":" For more information, see [CTaskDialog::SetProgressBarState](#ctaskdialog__setprogressbarstate)."},{"content":"The ID of the selected radio button control.","pos":[9572,9616]},{"pos":[9632,9673],"content":"The width of the <ph id=\"ph1\">`CTaskDialog`</ph> in pixels.","source":"The width of the `CTaskDialog` in pixels."},{"pos":[9694,9806],"content":"The string the <ph id=\"ph1\">`CTaskDialog`</ph> displays to the right of the expansion box when the expanded information is hidden.","source":"The string the `CTaskDialog` displays to the right of the expansion box when the expanded information is hidden."},{"pos":[9826,9866],"content":"The content string of the <ph id=\"ph1\">`CTaskDialog`</ph>.","source":"The content string of the `CTaskDialog`."},{"pos":[9885,10000],"content":"The string the <ph id=\"ph1\">`CTaskDialog`</ph> displays to the right of the expansion box when the expanded information is displayed.","source":"The string the `CTaskDialog` displays to the right of the expansion box when the expanded information is displayed."},{"pos":[10019,10051],"content":"The footer of the <ph id=\"ph1\">`CTaskDialog`</ph>.","source":"The footer of the `CTaskDialog`."},{"pos":[10075,10122],"content":"The expanded information for the <ph id=\"ph1\">`CTaskDialog`</ph>.","source":"The expanded information for the `CTaskDialog`."},{"pos":[10150,10192],"content":"The main instruction of the <ph id=\"ph1\">`CTaskDialog`</ph>.","source":"The main instruction of the `CTaskDialog`."},{"pos":[10210,10241],"content":"The title of the <ph id=\"ph1\">`CTaskDialog`</ph>.","source":"The title of the `CTaskDialog`."},{"pos":[10266,10352],"content":"The string that the <ph id=\"ph1\">`CTaskDialog`</ph> displays to the right of the verification check box.","source":"The string that the `CTaskDialog` displays to the right of the verification check box."},{"pos":[10362,10369],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The <ph id=\"ph1\">`CTaskDialog`</ph> class replaces the standard Windows message box and has additional functionality such as new controls to gather information from the user.","pos":[10373,10529],"source":"The `CTaskDialog` class replaces the standard Windows message box and has additional functionality such as new controls to gather information from the user."},{"content":"This class is in the MFC library in <ph id=\"ph1\">[!INCLUDE[vs_dev10_long](../../build/includes/vs_dev10_long_md.md)]</ph>.","pos":[10530,10634],"source":" This class is in the MFC library in [!INCLUDE[vs_dev10_long](../../build/includes/vs_dev10_long_md.md)]."},{"content":"The <ph id=\"ph1\">`CTaskDialog`</ph> is available starting with <ph id=\"ph2\">[!INCLUDE[wiprlhext](../../c-runtime-library/reference/includes/wiprlhext_md.md)]</ph>.","pos":[10635,10762],"source":" The `CTaskDialog` is available starting with [!INCLUDE[wiprlhext](../../c-runtime-library/reference/includes/wiprlhext_md.md)]."},{"content":"Earlier versions of Windows cannot display the <ph id=\"ph1\">`CTaskDialog`</ph> object.","pos":[10763,10831],"source":" Earlier versions of Windows cannot display the `CTaskDialog` object."},{"content":"Use <ph id=\"ph1\">`CTaskDialog::IsSupported`</ph> to determine at runtime whether the current user can display the task dialog box.","pos":[10832,10944],"source":" Use `CTaskDialog::IsSupported` to determine at runtime whether the current user can display the task dialog box."},{"content":"The standard Windows message box is still supported in <ph id=\"ph1\">[!INCLUDE[vs_dev10_long](../../build/includes/vs_dev10_long_md.md)]</ph>.","pos":[10945,11068],"source":" The standard Windows message box is still supported in [!INCLUDE[vs_dev10_long](../../build/includes/vs_dev10_long_md.md)]."},{"pos":[11075,11172],"content":"The <ph id=\"ph1\">`CTaskDialog`</ph> is available only when you build your application by using the Unicode library.","source":"The `CTaskDialog` is available only when you build your application by using the Unicode library."},{"content":"The <ph id=\"ph1\">`CTaskDialog`</ph> has two different constructors.","pos":[11179,11228],"source":"The `CTaskDialog` has two different constructors."},{"content":"One constructor enables you to specify two command buttons and a maximum of six regular button controls.","pos":[11229,11333]},{"content":"You can add more command buttons after you create the <ph id=\"ph1\">`CTaskDialog`</ph>.","pos":[11334,11402],"source":" You can add more command buttons after you create the `CTaskDialog`."},{"content":"The second constructor does not support any command buttons, but you can add an unlimited number of regular button controls.","pos":[11403,11527]},{"content":"For more information about the constructors, see <bpt id=\"p1\">[</bpt>CTaskDialog::CTaskDialog<ept id=\"p1\">](#ctaskdialog__ctaskdialog)</ept>.","pos":[11528,11631],"source":" For more information about the constructors, see [CTaskDialog::CTaskDialog](#ctaskdialog__ctaskdialog)."},{"pos":[11638,11738],"content":"The following image shows a sample <ph id=\"ph1\">`CTaskDialog`</ph> to illustrate the location of some of the controls.","source":"The following image shows a sample `CTaskDialog` to illustrate the location of some of the controls."},{"content":"<bpt id=\"p1\">![</bpt>Example of CTaskDialog<ept id=\"p1\">](../../mfc/reference/media/ctaskdialogsample.png \"ctaskdialogsample\")</ept>","pos":[11745,11839],"source":"![Example of CTaskDialog](../../mfc/reference/media/ctaskdialogsample.png \"ctaskdialogsample\")"},{"content":"CTaskDialog Sample","pos":[11842,11860]},{"pos":[11869,11881],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[11885,12005],"content":"<bpt id=\"p1\">**</bpt>Minimum required operating system:<ept id=\"p1\">**</ept> <ph id=\"ph1\">[!INCLUDE[wiprlhext](../../c-runtime-library/reference/includes/wiprlhext_md.md)]</ph>","source":"**Minimum required operating system:** [!INCLUDE[wiprlhext](../../c-runtime-library/reference/includes/wiprlhext_md.md)]"},{"pos":[12012,12039],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> afxtaskdialog.h","source":"**Header:** afxtaskdialog.h"},{"pos":[12049,12126],"content":"<bpt id=\"p1\">&lt;a name=\"ctaskdialog__addcommandcontrol\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CTaskDialog::AddCommandControl","linkify":"<a name=\"ctaskdialog__addcommandcontrol\"></a>  CTaskDialog::AddCommandControl","source":"<a name=\"ctaskdialog__addcommandcontrol\"></a>  CTaskDialog::AddCommandControl"},{"pos":[12130,12185],"content":"Adds a new command button control to the <ph id=\"ph1\">`CTaskDialog`</ph>.","source":"Adds a new command button control to the `CTaskDialog`."},{"pos":[12362,12372],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`nCommandControlID`</ph>","pos":[12376,12400],"source":"[in] `nCommandControlID`"},{"content":"The command control identification number.","pos":[12404,12446]},{"content":"[in] <ph id=\"ph1\">`strCaption`</ph>","pos":[12453,12470],"source":"[in] `strCaption`"},{"content":"The string that the <ph id=\"ph1\">`CTaskDialog`</ph> displays to the user.","pos":[12474,12529],"source":" The string that the `CTaskDialog` displays to the user."},{"content":"Use this string to explain the purpose of the command.","pos":[12530,12584]},{"content":"[in] <ph id=\"ph1\">`bEnabled`</ph>","pos":[12591,12606],"source":"[in] `bEnabled`"},{"content":"A Boolean parameter that indicates if the new button is enabled or disabled.","pos":[12610,12686]},{"content":"[in] <ph id=\"ph1\">`bRequiresElevation`</ph>","pos":[12693,12718],"source":"[in] `bRequiresElevation`"},{"content":"A Boolean parameter that indicates whether a command requires elevation.","pos":[12722,12794]},{"pos":[12804,12811],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The <bpt id=\"p1\">[</bpt>CTaskDialog Class<ept id=\"p1\">](../../mfc/reference/ctaskdialog-class.md)</ept> can display an unlimited number of command button controls.","pos":[12815,12940],"source":"The [CTaskDialog Class](../../mfc/reference/ctaskdialog-class.md) can display an unlimited number of command button controls."},{"content":"However, if a <ph id=\"ph1\">`CTaskDialog`</ph> displays any command button controls, it can display a maximum of six buttons.","pos":[12941,13047],"source":" However, if a `CTaskDialog` displays any command button controls, it can display a maximum of six buttons."},{"content":"If a <ph id=\"ph1\">`CTaskDialog`</ph> has no command button controls, it can display an unlimited number of buttons.","pos":[13048,13145],"source":" If a `CTaskDialog` has no command button controls, it can display an unlimited number of buttons."},{"content":"When the user selects a command button control, the <ph id=\"ph1\">`CTaskDialog`</ph> closes.","pos":[13152,13225],"source":"When the user selects a command button control, the `CTaskDialog` closes."},{"content":"If your application displays the dialog box by using <bpt id=\"p1\">[</bpt>CTaskDialog::DoModal<ept id=\"p1\">](#ctaskdialog__domodal)</ept>, <ph id=\"ph1\">`DoModal`</ph> returns the <ph id=\"ph2\">`nCommandControlID`</ph> of the selected command button control.","pos":[13226,13407],"source":" If your application displays the dialog box by using [CTaskDialog::DoModal](#ctaskdialog__domodal), `DoModal` returns the `nCommandControlID` of the selected command button control."},{"pos":[13417,13424],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[13428,13523],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_MFC_CTaskDialog#2<ept id=\"p2\">](../../mfc/reference/codesnippet/cpp/ctaskdialog-class_1.cpp)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_MFC_CTaskDialog#2](../../mfc/reference/codesnippet/cpp/ctaskdialog-class_1.cpp)]"},{"pos":[13533,13604],"content":"<bpt id=\"p1\">&lt;a name=\"ctaskdialog__addradiobutton\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CTaskDialog::AddRadioButton","linkify":"<a name=\"ctaskdialog__addradiobutton\"></a>  CTaskDialog::AddRadioButton","source":"<a name=\"ctaskdialog__addradiobutton\"></a>  CTaskDialog::AddRadioButton"},{"pos":[13608,13649],"content":"Adds a radio button to the <ph id=\"ph1\">`CTaskDialog`</ph>.","source":"Adds a radio button to the `CTaskDialog`."},{"pos":[13794,13804],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`nRadioButtonID`</ph>","pos":[13808,13829],"source":"[in] `nRadioButtonID`"},{"content":"The identification number of the radio button.","pos":[13833,13879]},{"content":"[in] <ph id=\"ph1\">`strCaption`</ph>","pos":[13886,13903],"source":"[in] `strCaption`"},{"content":"The string that the <ph id=\"ph1\">`CTaskDialog`</ph> displays next to the radio button.","pos":[13907,13975],"source":" The string that the `CTaskDialog` displays next to the radio button."},{"content":"[in] <ph id=\"ph1\">`bEnabled`</ph>","pos":[13982,13997],"source":"[in] `bEnabled`"},{"content":"A Boolean parameter that indicates whether the radio button is enabled.","pos":[14001,14072]},{"pos":[14082,14089],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The radio buttons for the <bpt id=\"p1\">[</bpt>CTaskDialog Class<ept id=\"p1\">](../../mfc/reference/ctaskdialog-class.md)</ept> enable you to gather information from the user.","pos":[14093,14228],"source":"The radio buttons for the [CTaskDialog Class](../../mfc/reference/ctaskdialog-class.md) enable you to gather information from the user."},{"content":"Use the function <bpt id=\"p1\">[</bpt>CTaskDialog::GetSelectedRadioButtonID<ept id=\"p1\">](#ctaskdialog__getselectedradiobuttonid)</ept> to determine which radio button is selected.","pos":[14229,14370],"source":" Use the function [CTaskDialog::GetSelectedRadioButtonID](#ctaskdialog__getselectedradiobuttonid) to determine which radio button is selected."},{"content":"The <ph id=\"ph1\">`CTaskDialog`</ph> does not require that the <ph id=\"ph2\">`nRadioButtonID`</ph> parameters are unique for each radio button.","pos":[14377,14482],"source":"The `CTaskDialog` does not require that the `nRadioButtonID` parameters are unique for each radio button."},{"content":"However, you may experience unexpected behavior if you do not use a distinct identifier for each radio button.","pos":[14483,14593]},{"pos":[14603,14610],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[14614,14709],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_MFC_CTaskDialog#3<ept id=\"p2\">](../../mfc/reference/codesnippet/cpp/ctaskdialog-class_2.cpp)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_MFC_CTaskDialog#3](../../mfc/reference/codesnippet/cpp/ctaskdialog-class_2.cpp)]"},{"pos":[14719,14800],"content":"<bpt id=\"p1\">&lt;a name=\"ctaskdialog__clickcommandcontrol\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CTaskDialog::ClickCommandControl","linkify":"<a name=\"ctaskdialog__clickcommandcontrol\"></a>  CTaskDialog::ClickCommandControl","source":"<a name=\"ctaskdialog__clickcommandcontrol\"></a>  CTaskDialog::ClickCommandControl"},{"content":"Clicks a command button control or common button programmatically.","pos":[14804,14870]},{"pos":[14966,14976],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`nCommandControlID`</ph>","pos":[14980,15004],"source":"[in] `nCommandControlID`"},{"content":"The command ID of the control to click.","pos":[15008,15047]},{"pos":[15057,15064],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[15068,15129],"content":"This method generates the windows message <ph id=\"ph1\">`TDM_CLICK_BUTTON`</ph>.","source":"This method generates the windows message `TDM_CLICK_BUTTON`."},{"pos":[15139,15214],"content":"<bpt id=\"p1\">&lt;a name=\"ctaskdialog__clickradiobutton\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CTaskDialog::ClickRadioButton","linkify":"<a name=\"ctaskdialog__clickradiobutton\"></a>  CTaskDialog::ClickRadioButton","source":"<a name=\"ctaskdialog__clickradiobutton\"></a>  CTaskDialog::ClickRadioButton"},{"content":"Clicks a radio button programmatically.","pos":[15218,15257]},{"pos":[15347,15357],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`nRadioButtonID`</ph>","pos":[15361,15382],"source":"[in] `nRadioButtonID`"},{"content":"The ID of the radio button to click.","pos":[15386,15422]},{"pos":[15432,15439],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[15443,15510],"content":"This method generates the windows message <ph id=\"ph1\">`TDM_CLICK_RADIO_BUTTON`</ph>.","source":"This method generates the windows message `TDM_CLICK_RADIO_BUTTON`."},{"pos":[15520,15585],"content":"<bpt id=\"p1\">&lt;a name=\"ctaskdialog__ctaskdialog\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CTaskDialog::CTaskDialog","linkify":"<a name=\"ctaskdialog__ctaskdialog\"></a>  CTaskDialog::CTaskDialog","source":"<a name=\"ctaskdialog__ctaskdialog\"></a>  CTaskDialog::CTaskDialog"},{"pos":[15589,15678],"content":"Creates an instance of the <bpt id=\"p1\">[</bpt>CTaskDialog Class<ept id=\"p1\">](../../mfc/reference/ctaskdialog-class.md)</ept>.","source":"Creates an instance of the [CTaskDialog Class](../../mfc/reference/ctaskdialog-class.md)."},{"pos":[16339,16349],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`strContent`</ph>","pos":[16353,16370],"source":"[in] `strContent`"},{"content":"The string to use for the content of the <ph id=\"ph1\">`CTaskDialog`</ph>.","pos":[16374,16429],"source":" The string to use for the content of the `CTaskDialog`."},{"content":"[in] <ph id=\"ph1\">`strMainInstruction`</ph>","pos":[16436,16461],"source":"[in] `strMainInstruction`"},{"content":"The main instruction of the <ph id=\"ph1\">`CTaskDialog`</ph>.","pos":[16465,16507],"source":" The main instruction of the `CTaskDialog`."},{"content":"[in] <ph id=\"ph1\">`strTitle`</ph>","pos":[16514,16529],"source":"[in] `strTitle`"},{"content":"The title of the <ph id=\"ph1\">`CTaskDialog`</ph>.","pos":[16533,16564],"source":" The title of the `CTaskDialog`."},{"content":"[in] <ph id=\"ph1\">`nCommonButtons`</ph>","pos":[16571,16592],"source":"[in] `nCommonButtons`"},{"content":"A mask of the common buttons to add to the <ph id=\"ph1\">`CTaskDialog`</ph>.","pos":[16596,16653],"source":" A mask of the common buttons to add to the `CTaskDialog`."},{"content":"[in] <ph id=\"ph1\">`nTaskDialogOptions`</ph>","pos":[16660,16685],"source":"[in] `nTaskDialogOptions`"},{"content":"The set of options to use for the <ph id=\"ph1\">`CTaskDialog`</ph>.","pos":[16689,16737],"source":" The set of options to use for the `CTaskDialog`."},{"content":"[in] <ph id=\"ph1\">`strFooter`</ph>","pos":[16744,16760],"source":"[in] `strFooter`"},{"content":"The string to use as the footer.","pos":[16764,16796]},{"content":"[in] <ph id=\"ph1\">`nIDCommandControlsFirst`</ph>","pos":[16803,16833],"source":"[in] `nIDCommandControlsFirst`"},{"content":"The string ID of the first command.","pos":[16837,16872]},{"content":"[in] <ph id=\"ph1\">`nIDCommandControlsLast`</ph>","pos":[16879,16908],"source":"[in] `nIDCommandControlsLast`"},{"content":"The string ID of the last command.","pos":[16912,16946]},{"pos":[16956,16963],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"There are two ways that you can add a <ph id=\"ph1\">`CTaskDialog`</ph> to your application.","pos":[16967,17039],"source":"There are two ways that you can add a `CTaskDialog` to your application."},{"content":"The first way is to use one of the constructors to create a <ph id=\"ph1\">`CTaskDialog`</ph> and display it using <bpt id=\"p1\">[</bpt>CTaskDialog::DoModal<ept id=\"p1\">](#ctaskdialog__domodal)</ept>.","pos":[17040,17181],"source":" The first way is to use one of the constructors to create a `CTaskDialog` and display it using [CTaskDialog::DoModal](#ctaskdialog__domodal)."},{"content":"The second way is to use the static function <bpt id=\"p1\">[</bpt>CTaskDialog::ShowDialog<ept id=\"p1\">](#ctaskdialog__showdialog)</ept>, which enables you to display a <ph id=\"ph1\">`CTaskDialog`</ph> without explicitly creating a <ph id=\"ph2\">`CTaskDialog`</ph> object.","pos":[17182,17376],"source":" The second way is to use the static function [CTaskDialog::ShowDialog](#ctaskdialog__showdialog), which enables you to display a `CTaskDialog` without explicitly creating a `CTaskDialog` object."},{"content":"The second constructor creates command button controls by using data from the resource file of your application.","pos":[17383,17495]},{"content":"The string table in the resource file has several strings with associated string IDs.","pos":[17496,17581]},{"content":"This method adds a command button control for each valid entry in the string table between <ph id=\"ph1\">`nIDCommandControlsFirst`</ph> and <ph id=\"ph2\">`nCommandControlsLast`</ph>, inclusive.","pos":[17582,17737],"source":" This method adds a command button control for each valid entry in the string table between `nIDCommandControlsFirst` and `nCommandControlsLast`, inclusive."},{"content":"For these command button controls, the string in the string table is the control's caption and the string ID is the control's ID.","pos":[17738,17867]},{"pos":[17874,17958],"content":"See <bpt id=\"p1\">[</bpt>CTaskDialog::SetOptions<ept id=\"p1\">](#ctaskdialog__setoptions)</ept> for a list of valid options.","source":"See [CTaskDialog::SetOptions](#ctaskdialog__setoptions) for a list of valid options."},{"pos":[17968,17975],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[17979,18074],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_MFC_CTaskDialog#7<ept id=\"p2\">](../../mfc/reference/codesnippet/cpp/ctaskdialog-class_3.cpp)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_MFC_CTaskDialog#7](../../mfc/reference/codesnippet/cpp/ctaskdialog-class_3.cpp)]"},{"pos":[18084,18141],"content":"<bpt id=\"p1\">&lt;a name=\"ctaskdialog__domodal\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CTaskDialog::DoModal","linkify":"<a name=\"ctaskdialog__domodal\"></a>  CTaskDialog::DoModal","source":"<a name=\"ctaskdialog__domodal\"></a>  CTaskDialog::DoModal"},{"pos":[18145,18188],"content":"Shows the <ph id=\"ph1\">`CTaskDialog`</ph> and makes it modal.","source":"Shows the `CTaskDialog` and makes it modal."},{"pos":[18267,18277],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`hParent`</ph>","pos":[18281,18295],"source":"[in] `hParent`"},{"content":"The parent window for the <ph id=\"ph1\">`CTaskDialog`</ph>.","pos":[18299,18339],"source":" The parent window for the `CTaskDialog`."},{"pos":[18349,18361],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"An integer that corresponds to the selection made by the user.","pos":[18365,18427]},{"pos":[18437,18444],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Displays this instance of the <bpt id=\"p1\">[</bpt>CTaskDialog<ept id=\"p1\">](../../mfc/reference/ctaskdialog-class.md)</ept>.","pos":[18448,18534],"source":"Displays this instance of the [CTaskDialog](../../mfc/reference/ctaskdialog-class.md)."},{"content":"The application then waits for the user to close the dialog box.","pos":[18535,18599]},{"content":"The <ph id=\"ph1\">`CTaskDialog`</ph> closes when the user selects a common button, a command link control, or closes the <ph id=\"ph2\">`CTaskDialog`</ph>.","pos":[18606,18722],"source":"The `CTaskDialog` closes when the user selects a common button, a command link control, or closes the `CTaskDialog`."},{"content":"The return value is the identifier that indicates how the user closed the dialog box.","pos":[18723,18808]},{"pos":[18818,18825],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[18829,18924],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_MFC_CTaskDialog#7<ept id=\"p2\">](../../mfc/reference/codesnippet/cpp/ctaskdialog-class_3.cpp)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_MFC_CTaskDialog#7](../../mfc/reference/codesnippet/cpp/ctaskdialog-class_3.cpp)]"},{"pos":[18934,19017],"content":"<bpt id=\"p1\">&lt;a name=\"ctaskdialog__getcommonbuttoncount\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CTaskDialog::GetCommonButtonCount","linkify":"<a name=\"ctaskdialog__getcommonbuttoncount\"></a>  CTaskDialog::GetCommonButtonCount","source":"<a name=\"ctaskdialog__getcommonbuttoncount\"></a>  CTaskDialog::GetCommonButtonCount"},{"content":"Retrieves the number of common buttons.","pos":[19021,19060]},{"pos":[19122,19134],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The number of common buttons available.","pos":[19138,19177]},{"pos":[19187,19194],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The common buttons are the default buttons that you provide to <bpt id=\"p1\">[</bpt>CTaskDialog::CTaskDialog<ept id=\"p1\">](#ctaskdialog__ctaskdialog)</ept>.","pos":[19198,19315],"source":"The common buttons are the default buttons that you provide to [CTaskDialog::CTaskDialog](#ctaskdialog__ctaskdialog)."},{"content":"The <bpt id=\"p1\">[</bpt>CTaskDialog Class<ept id=\"p1\">](../../mfc/reference/ctaskdialog-class.md)</ept> displays the buttons along the bottom of the dialog box.","pos":[19316,19438],"source":" The [CTaskDialog Class](../../mfc/reference/ctaskdialog-class.md) displays the buttons along the bottom of the dialog box."},{"content":"The enumerated list of buttons is provided in CommCtrl.h.","pos":[19445,19502]},{"pos":[19512,19593],"content":"<bpt id=\"p1\">&lt;a name=\"ctaskdialog__getcommonbuttonflag\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CTaskDialog::GetCommonButtonFlag","linkify":"<a name=\"ctaskdialog__getcommonbuttonflag\"></a>  CTaskDialog::GetCommonButtonFlag","source":"<a name=\"ctaskdialog__getcommonbuttonflag\"></a>  CTaskDialog::GetCommonButtonFlag"},{"pos":[19597,19740],"content":"Converts a standard Windows button to the common button type associated with the <bpt id=\"p1\">[</bpt>CTaskDialog Class<ept id=\"p1\">](../../mfc/reference/ctaskdialog-class.md)</ept>.","source":"Converts a standard Windows button to the common button type associated with the [CTaskDialog Class](../../mfc/reference/ctaskdialog-class.md)."},{"pos":[19814,19824],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`nButtonId`</ph>","pos":[19828,19844],"source":"[in] `nButtonId`"},{"content":"The standard Windows button value.","pos":[19848,19882]},{"pos":[19892,19904],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The value of the corresponding <ph id=\"ph1\">`CTaskDialog`</ph> common button.","pos":[19908,19967],"source":"The value of the corresponding `CTaskDialog` common button."},{"content":"If there is no corresponding common button, this method returns 0.","pos":[19968,20034]},{"pos":[20044,20121],"content":"<bpt id=\"p1\">&lt;a name=\"ctaskdialog__getcommonbuttonid\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CTaskDialog::GetCommonButtonId","linkify":"<a name=\"ctaskdialog__getcommonbuttonid\"></a>  CTaskDialog::GetCommonButtonId","source":"<a name=\"ctaskdialog__getcommonbuttonid\"></a>  CTaskDialog::GetCommonButtonId"},{"pos":[20125,20276],"content":"Converts one of the common button types associated with the <bpt id=\"p1\">[</bpt>CTaskDialog Class<ept id=\"p1\">](../../mfc/reference/ctaskdialog-class.md)</ept> to a standard Windows button.","source":"Converts one of the common button types associated with the [CTaskDialog Class](../../mfc/reference/ctaskdialog-class.md) to a standard Windows button."},{"pos":[20335,20345],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`nFlag`</ph>","pos":[20349,20361],"source":"[in] `nFlag`"},{"content":"The common button type associated with the <ph id=\"ph1\">`CTaskDialog`</ph> class.","pos":[20365,20428],"source":" The common button type associated with the `CTaskDialog` class."},{"pos":[20438,20450],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The value of the corresponding standard Windows button.","pos":[20454,20509]},{"content":"If there is no corresponding Windows button, the method returns 0.","pos":[20510,20576]},{"pos":[20586,20649],"content":"<bpt id=\"p1\">&lt;a name=\"ctaskdialog__getoptions\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CTaskDialog::GetOptions","linkify":"<a name=\"ctaskdialog__getoptions\"></a>  CTaskDialog::GetOptions","source":"<a name=\"ctaskdialog__getoptions\"></a>  CTaskDialog::GetOptions"},{"pos":[20653,20701],"content":"Returns the option flags for this <ph id=\"ph1\">`CTaskDialog`</ph>.","source":"Returns the option flags for this `CTaskDialog`."},{"pos":[20753,20765],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[20769,20801],"content":"The flags for the <ph id=\"ph1\">`CTaskDialog`</ph>.","source":"The flags for the `CTaskDialog`."},{"pos":[20811,20818],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[20822,20997],"content":"For more information about the options available to the <bpt id=\"p1\">[</bpt>CTaskDialog Class<ept id=\"p1\">](../../mfc/reference/ctaskdialog-class.md)</ept>, see <bpt id=\"p2\">[</bpt>CTaskDialog::SetOptions<ept id=\"p2\">](#ctaskdialog__setoptions)</ept>.","source":"For more information about the options available to the [CTaskDialog Class](../../mfc/reference/ctaskdialog-class.md), see [CTaskDialog::SetOptions](#ctaskdialog__setoptions)."},{"pos":[21007,21014],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[21018,21113],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_MFC_CTaskDialog#7<ept id=\"p2\">](../../mfc/reference/codesnippet/cpp/ctaskdialog-class_3.cpp)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_MFC_CTaskDialog#7](../../mfc/reference/codesnippet/cpp/ctaskdialog-class_3.cpp)]"},{"pos":[21123,21220],"content":"<bpt id=\"p1\">&lt;a name=\"ctaskdialog__getselectedcommandcontrolid\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CTaskDialog::GetSelectedCommandControlID","linkify":"<a name=\"ctaskdialog__getselectedcommandcontrolid\"></a>  CTaskDialog::GetSelectedCommandControlID","source":"<a name=\"ctaskdialog__getselectedcommandcontrolid\"></a>  CTaskDialog::GetSelectedCommandControlID"},{"content":"Returns the selected command button control.","pos":[21224,21268]},{"pos":[21337,21349],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The ID of the currently selected command button control.","pos":[21353,21409]},{"pos":[21419,21426],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"You do not have to use this method to retrieve the ID of the command button that the user selected.","pos":[21430,21529]},{"content":"That ID is returned by either <bpt id=\"p1\">[</bpt>CTaskDialog::DoModal<ept id=\"p1\">](#ctaskdialog__domodal)</ept> or <bpt id=\"p2\">[</bpt>CTaskDialog::ShowDialog<ept id=\"p2\">](#ctaskdialog__showdialog)</ept>.","pos":[21530,21661],"source":" That ID is returned by either [CTaskDialog::DoModal](#ctaskdialog__domodal) or [CTaskDialog::ShowDialog](#ctaskdialog__showdialog)."},{"pos":[21671,21678],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[21682,21777],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_MFC_CTaskDialog#2<ept id=\"p2\">](../../mfc/reference/codesnippet/cpp/ctaskdialog-class_1.cpp)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_MFC_CTaskDialog#2](../../mfc/reference/codesnippet/cpp/ctaskdialog-class_1.cpp)]"},{"pos":[21787,21878],"content":"<bpt id=\"p1\">&lt;a name=\"ctaskdialog__getselectedradiobuttonid\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CTaskDialog::GetSelectedRadioButtonID","linkify":"<a name=\"ctaskdialog__getselectedradiobuttonid\"></a>  CTaskDialog::GetSelectedRadioButtonID","source":"<a name=\"ctaskdialog__getselectedradiobuttonid\"></a>  CTaskDialog::GetSelectedRadioButtonID"},{"content":"Returns the selected radio button.","pos":[21882,21916]},{"pos":[21982,21994],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The ID of the selected radio button.","pos":[21998,22034]},{"pos":[22044,22051],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"You can use this method after the user closes the dialog box to retrieve the selected radio button.","pos":[22055,22154]},{"pos":[22164,22171],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[22175,22270],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_MFC_CTaskDialog#3<ept id=\"p2\">](../../mfc/reference/codesnippet/cpp/ctaskdialog-class_2.cpp)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_MFC_CTaskDialog#3](../../mfc/reference/codesnippet/cpp/ctaskdialog-class_2.cpp)]"},{"pos":[22280,22379],"content":"<bpt id=\"p1\">&lt;a name=\"ctaskdialog__getverificationcheckboxstate\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CTaskDialog::GetVerificationCheckboxState","linkify":"<a name=\"ctaskdialog__getverificationcheckboxstate\"></a>  CTaskDialog::GetVerificationCheckboxState","source":"<a name=\"ctaskdialog__getverificationcheckboxstate\"></a>  CTaskDialog::GetVerificationCheckboxState"},{"content":"Retrieves the state of the verification check box.","pos":[22383,22433]},{"pos":[22504,22516],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[22520,22577],"content":"<ph id=\"ph1\">`TRUE`</ph> if the check box is checked, <ph id=\"ph2\">`FALSE`</ph> if it is not.","source":"`TRUE` if the check box is checked, `FALSE` if it is not."},{"pos":[22587,22594],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[22598,22693],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_MFC_CTaskDialog#5<ept id=\"p2\">](../../mfc/reference/codesnippet/cpp/ctaskdialog-class_4.cpp)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_MFC_CTaskDialog#5](../../mfc/reference/codesnippet/cpp/ctaskdialog-class_4.cpp)]"},{"pos":[22703,22792],"content":"<bpt id=\"p1\">&lt;a name=\"ctaskdialog__iscommandcontrolenabled\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CTaskDialog::IsCommandControlEnabled","linkify":"<a name=\"ctaskdialog__iscommandcontrolenabled\"></a>  CTaskDialog::IsCommandControlEnabled","source":"<a name=\"ctaskdialog__iscommandcontrolenabled\"></a>  CTaskDialog::IsCommandControlEnabled"},{"content":"Determines whether a command button control or button is enabled.","pos":[22796,22861]},{"pos":[22948,22958],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`nCommandControlID`</ph>","pos":[22962,22986],"source":"[in] `nCommandControlID`"},{"content":"The ID of the command button control or button to test.","pos":[22990,23045]},{"pos":[23055,23067],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[23071,23126],"content":"<ph id=\"ph1\">`TRUE`</ph> if the control is enabled, <ph id=\"ph2\">`FALSE`</ph> if it is not.","source":"`TRUE` if the control is enabled, `FALSE` if it is not."},{"pos":[23136,23143],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[23147,23325],"content":"You can use this method to determine the availability of both command button controls and the common buttons of the <bpt id=\"p1\">[</bpt>CTaskDialog Class<ept id=\"p1\">](../../mfc/reference/ctaskdialog-class.md)</ept>.","source":"You can use this method to determine the availability of both command button controls and the common buttons of the [CTaskDialog Class](../../mfc/reference/ctaskdialog-class.md)."},{"pos":[23332,23483],"content":"If <ph id=\"ph1\">`nCommandControlID`</ph> is not a valid identifier for either a common <ph id=\"ph2\">`CTaskDialog`</ph> button or a command button control, this method throws an exception.","source":"If `nCommandControlID` is not a valid identifier for either a common `CTaskDialog` button or a command button control, this method throws an exception."},{"pos":[23493,23500],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[23504,23599],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_MFC_CTaskDialog#2<ept id=\"p2\">](../../mfc/reference/codesnippet/cpp/ctaskdialog-class_1.cpp)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_MFC_CTaskDialog#2](../../mfc/reference/codesnippet/cpp/ctaskdialog-class_1.cpp)]"},{"pos":[23609,23692],"content":"<bpt id=\"p1\">&lt;a name=\"ctaskdialog__isradiobuttonenabled\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CTaskDialog::IsRadioButtonEnabled","linkify":"<a name=\"ctaskdialog__isradiobuttonenabled\"></a>  CTaskDialog::IsRadioButtonEnabled","source":"<a name=\"ctaskdialog__isradiobuttonenabled\"></a>  CTaskDialog::IsRadioButtonEnabled"},{"content":"Determines whether a radio button is enabled.","pos":[23696,23741]},{"pos":[23822,23832],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`nRadioButtonID`</ph>","pos":[23836,23857],"source":"[in] `nRadioButtonID`"},{"content":"The ID of the radio button to test.","pos":[23861,23896]},{"pos":[23906,23918],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[23922,23982],"content":"<ph id=\"ph1\">`TRUE`</ph> if the radio button is enabled, <ph id=\"ph2\">`FALSE`</ph> if it is not.","source":"`TRUE` if the radio button is enabled, `FALSE` if it is not."},{"pos":[23992,23999],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[24003,24101],"content":"If <ph id=\"ph1\">`nRadioButtonID`</ph> is not a valid identifier for a radio button, this method throws an exception.","source":"If `nRadioButtonID` is not a valid identifier for a radio button, this method throws an exception."},{"pos":[24111,24118],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[24122,24217],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_MFC_CTaskDialog#3<ept id=\"p2\">](../../mfc/reference/codesnippet/cpp/ctaskdialog-class_2.cpp)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_MFC_CTaskDialog#3](../../mfc/reference/codesnippet/cpp/ctaskdialog-class_2.cpp)]"},{"pos":[24227,24292],"content":"<bpt id=\"p1\">&lt;a name=\"ctaskdialog__issupported\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CTaskDialog::IsSupported","linkify":"<a name=\"ctaskdialog__issupported\"></a>  CTaskDialog::IsSupported","source":"<a name=\"ctaskdialog__issupported\"></a>  CTaskDialog::IsSupported"},{"pos":[24296,24387],"content":"Determines whether the computer that is running the application supports the <ph id=\"ph1\">`CTaskDialog`</ph>.","source":"Determines whether the computer that is running the application supports the `CTaskDialog`."},{"pos":[24439,24451],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[24455,24524],"content":"<ph id=\"ph1\">`TRUE`</ph> if the computer supports the <ph id=\"ph2\">`CTaskDialog`</ph>; <ph id=\"ph3\">`FALSE`</ph> otherwise.","source":"`TRUE` if the computer supports the `CTaskDialog`; `FALSE` otherwise."},{"pos":[24534,24541],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Use this function to determine at runtime if the computer that is running your application supports the <bpt id=\"p1\">[</bpt>CTaskDialog Class<ept id=\"p1\">](../../mfc/reference/ctaskdialog-class.md)</ept>.","pos":[24545,24711],"source":"Use this function to determine at runtime if the computer that is running your application supports the [CTaskDialog Class](../../mfc/reference/ctaskdialog-class.md)."},{"content":"If the computer does not support the <ph id=\"ph1\">`CTaskDialog`</ph>, you should provide another method of communicating information to the user.","pos":[24712,24839],"source":" If the computer does not support the `CTaskDialog`, you should provide another method of communicating information to the user."},{"content":"Your application will crash if it tries to use a <ph id=\"ph1\">`CTaskDialog`</ph> on a computer that does not support the <ph id=\"ph2\">`CTaskDialog`</ph> class.","pos":[24840,24963],"source":" Your application will crash if it tries to use a `CTaskDialog` on a computer that does not support the `CTaskDialog` class."},{"pos":[24973,24980],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[24984,25079],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_MFC_CTaskDialog#1<ept id=\"p2\">](../../mfc/reference/codesnippet/cpp/ctaskdialog-class_5.cpp)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_MFC_CTaskDialog#1](../../mfc/reference/codesnippet/cpp/ctaskdialog-class_5.cpp)]"},{"pos":[25089,25170],"content":"<bpt id=\"p1\">&lt;a name=\"ctaskdialog__loadcommandcontrols\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CTaskDialog::LoadCommandControls","linkify":"<a name=\"ctaskdialog__loadcommandcontrols\"></a>  CTaskDialog::LoadCommandControls","source":"<a name=\"ctaskdialog__loadcommandcontrols\"></a>  CTaskDialog::LoadCommandControls"},{"content":"Adds command button controls by using data from the string table.","pos":[25174,25239]},{"pos":[25358,25368],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`nIDCommandControlsFirst`</ph>","pos":[25372,25402],"source":"[in] `nIDCommandControlsFirst`"},{"content":"The string ID of the first command.","pos":[25406,25441]},{"content":"[in] <ph id=\"ph1\">`nIDCommandControlsLast`</ph>","pos":[25448,25477],"source":"[in] `nIDCommandControlsLast`"},{"content":"The string ID of the last command.","pos":[25481,25515]},{"pos":[25525,25532],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This method creates command button controls by using data from the resource file of your application.","pos":[25536,25637]},{"content":"The string table in the resource file has several strings with associated string IDs.","pos":[25638,25723]},{"content":"New command button controls added by using this method use the string for the control's caption and the string ID for the control's ID.","pos":[25724,25859]},{"content":"The range of strings selected is provided by <ph id=\"ph1\">`nIDCommandControlsFirst`</ph> and <ph id=\"ph2\">`nCommandControlsLast`</ph>, inclusive.","pos":[25860,25969],"source":" The range of strings selected is provided by `nIDCommandControlsFirst` and `nCommandControlsLast`, inclusive."},{"content":"If there is an empty entry in the range, the method does not add a command button control for that entry.","pos":[25970,26075]},{"content":"By default, new command button controls are enabled and do not require elevation.","pos":[26082,26163]},{"pos":[26173,26180],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[26184,26279],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_MFC_CTaskDialog#2<ept id=\"p2\">](../../mfc/reference/codesnippet/cpp/ctaskdialog-class_1.cpp)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_MFC_CTaskDialog#2](../../mfc/reference/codesnippet/cpp/ctaskdialog-class_1.cpp)]"},{"pos":[26289,26364],"content":"<bpt id=\"p1\">&lt;a name=\"ctaskdialog__loadradiobuttons\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CTaskDialog::LoadRadioButtons","linkify":"<a name=\"ctaskdialog__loadradiobuttons\"></a>  CTaskDialog::LoadRadioButtons","source":"<a name=\"ctaskdialog__loadradiobuttons\"></a>  CTaskDialog::LoadRadioButtons"},{"content":"Adds radio button controls by using data from the string table.","pos":[26368,26431]},{"pos":[26541,26551],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`nIDRadioButtonsFirst`</ph>","pos":[26555,26582],"source":"[in] `nIDRadioButtonsFirst`"},{"content":"The string ID of the first radio button.","pos":[26586,26626]},{"content":"[in] <ph id=\"ph1\">`nIDRadioButtonsLast`</ph>","pos":[26633,26659],"source":"[in] `nIDRadioButtonsLast`"},{"content":"The string ID of the last radio button.","pos":[26663,26702]},{"pos":[26712,26719],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This method creates radio buttons by using data from the resource file of your application.","pos":[26723,26814]},{"content":"The string table in the resource file has several strings with associated string IDs.","pos":[26815,26900]},{"content":"New radio buttons added by using this method use the string for the radio button's caption and the string ID for the radio button's ID.","pos":[26901,27036]},{"content":"The range of strings selected is provided by <ph id=\"ph1\">`nIDRadioButtonsFirst`</ph> and <ph id=\"ph2\">`nRadioButtonsLast`</ph>, inclusive.","pos":[27037,27140],"source":" The range of strings selected is provided by `nIDRadioButtonsFirst` and `nRadioButtonsLast`, inclusive."},{"content":"If there is an empty entry in the range, the method does not add a radio button for that entry.","pos":[27141,27236]},{"content":"By default, new radio buttons are enabled.","pos":[27243,27285]},{"pos":[27295,27302],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[27306,27401],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_MFC_CTaskDialog#3<ept id=\"p2\">](../../mfc/reference/codesnippet/cpp/ctaskdialog-class_2.cpp)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_MFC_CTaskDialog#3](../../mfc/reference/codesnippet/cpp/ctaskdialog-class_2.cpp)]"},{"pos":[27411,27474],"content":"<bpt id=\"p1\">&lt;a name=\"ctaskdialog__navigateto\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CTaskDialog::NavigateTo","linkify":"<a name=\"ctaskdialog__navigateto\"></a>  CTaskDialog::NavigateTo","source":"<a name=\"ctaskdialog__navigateto\"></a>  CTaskDialog::NavigateTo"},{"pos":[27478,27523],"content":"Transfers the focus to another <ph id=\"ph1\">`CTaskDialog`</ph>.","source":"Transfers the focus to another `CTaskDialog`."},{"pos":[27613,27623],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`oTaskDialog`</ph>","pos":[27627,27645],"source":"[in] `oTaskDialog`"},{"content":"The <ph id=\"ph1\">`CTaskDialog`</ph> that receives the focus.","pos":[27649,27691],"source":" The `CTaskDialog` that receives the focus."},{"pos":[27701,27708],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This method hides the current <ph id=\"ph1\">`CTaskDialog`</ph> when it displays the <ph id=\"ph2\">`oTaskDialog`</ph>.","pos":[27712,27791],"source":"This method hides the current `CTaskDialog` when it displays the `oTaskDialog`."},{"content":"The <ph id=\"ph1\">`oTaskDialog`</ph> is displayed in the same location as the current <ph id=\"ph2\">`CTaskDialog`</ph>.","pos":[27792,27873],"source":" The `oTaskDialog` is displayed in the same location as the current `CTaskDialog`."},{"pos":[27883,27968],"content":"<bpt id=\"p1\">&lt;a name=\"ctaskdialog__oncommandcontrolclick\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CTaskDialog::OnCommandControlClick","linkify":"<a name=\"ctaskdialog__oncommandcontrolclick\"></a>  CTaskDialog::OnCommandControlClick","source":"<a name=\"ctaskdialog__oncommandcontrolclick\"></a>  CTaskDialog::OnCommandControlClick"},{"content":"The framework calls this method when the user clicks a command button control.","pos":[27972,28050]},{"pos":[28137,28147],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`nCommandControlID`</ph>","pos":[28151,28175],"source":"[in] `nCommandControlID`"},{"content":"The ID of the command button control that the user selected.","pos":[28179,28239]},{"pos":[28249,28261],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[28265,28307],"content":"The default implementation returns <ph id=\"ph1\">`S_OK`</ph>.","source":"The default implementation returns `S_OK`."},{"pos":[28317,28324],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Override this method in a derived class to implement custom behavior.","pos":[28328,28397]},{"pos":[28407,28466],"content":"<bpt id=\"p1\">&lt;a name=\"ctaskdialog__oncreate\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CTaskDialog::OnCreate","linkify":"<a name=\"ctaskdialog__oncreate\"></a>  CTaskDialog::OnCreate","source":"<a name=\"ctaskdialog__oncreate\"></a>  CTaskDialog::OnCreate"},{"pos":[28470,28537],"content":"The framework calls this method after it creates the <ph id=\"ph1\">`CTaskDialog`</ph>.","source":"The framework calls this method after it creates the `CTaskDialog`."},{"pos":[28590,28602],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[28606,28648],"content":"The default implementation returns <ph id=\"ph1\">`S_OK`</ph>.","source":"The default implementation returns `S_OK`."},{"pos":[28658,28665],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Override this method in a derived class to implement custom behavior.","pos":[28669,28738]},{"pos":[28748,28809],"content":"<bpt id=\"p1\">&lt;a name=\"ctaskdialog__ondestroy\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CTaskDialog::OnDestroy","linkify":"<a name=\"ctaskdialog__ondestroy\"></a>  CTaskDialog::OnDestroy","source":"<a name=\"ctaskdialog__ondestroy\"></a>  CTaskDialog::OnDestroy"},{"pos":[28813,28894],"content":"The framework calls this method immediately before it destroys the <ph id=\"ph1\">`CTaskDialog`</ph>.","source":"The framework calls this method immediately before it destroys the `CTaskDialog`."},{"pos":[28948,28960],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[28964,29006],"content":"The default implementation returns <ph id=\"ph1\">`S_OK`</ph>.","source":"The default implementation returns `S_OK`."},{"pos":[29016,29023],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Override this method in a derived class to implement custom behavior.","pos":[29027,29096]},{"pos":[29106,29187],"content":"<bpt id=\"p1\">&lt;a name=\"ctaskdialog__onexpandbuttonclick\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CTaskDialog::OnExpandButtonClick","linkify":"<a name=\"ctaskdialog__onexpandbuttonclick\"></a>  CTaskDialog::OnExpandButtonClick","source":"<a name=\"ctaskdialog__onexpandbuttonclick\"></a>  CTaskDialog::OnExpandButtonClick"},{"content":"The framework calls this method when the user clicks on the expansion button.","pos":[29191,29268]},{"pos":[29348,29358],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`bExpanded`</ph>","pos":[29362,29378],"source":"[in] `bExpanded`"},{"content":"A nonzero value indicates the extra information is displayed; 0 indicates the extra information is hidden.","pos":[29382,29488]},{"pos":[29498,29510],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[29514,29556],"content":"The default implementation returns <ph id=\"ph1\">`S_OK`</ph>.","source":"The default implementation returns `S_OK`."},{"pos":[29566,29573],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Override this method in a derived class to implement custom behavior.","pos":[29577,29646]},{"pos":[29656,29711],"content":"<bpt id=\"p1\">&lt;a name=\"ctaskdialog__onhelp\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CTaskDialog::OnHelp","linkify":"<a name=\"ctaskdialog__onhelp\"></a>  CTaskDialog::OnHelp","source":"<a name=\"ctaskdialog__onhelp\"></a>  CTaskDialog::OnHelp"},{"content":"The framework calls this method when the user requests help.","pos":[29715,29775]},{"pos":[29826,29838],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[29842,29884],"content":"The default implementation returns <ph id=\"ph1\">`S_OK`</ph>.","source":"The default implementation returns `S_OK`."},{"pos":[29894,29901],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Override this method in a derived class to implement custom behavior.","pos":[29905,29974]},{"pos":[29984,30059],"content":"<bpt id=\"p1\">&lt;a name=\"ctaskdialog__onhyperlinkclick\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CTaskDialog::OnHyperlinkClick","linkify":"<a name=\"ctaskdialog__onhyperlinkclick\"></a>  CTaskDialog::OnHyperlinkClick","source":"<a name=\"ctaskdialog__onhyperlinkclick\"></a>  CTaskDialog::OnHyperlinkClick"},{"content":"The framework calls this method when the user clicks on a hyperlink.","pos":[30063,30131]},{"pos":[30214,30224],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`strHref`</ph>","pos":[30228,30242],"source":"[in] `strHref`"},{"content":"The string that represents the hyperlink.","pos":[30246,30287]},{"pos":[30297,30309],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[30313,30355],"content":"The default implementation returns <ph id=\"ph1\">`S_OK`</ph>.","source":"The default implementation returns `S_OK`."},{"pos":[30365,30372],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[30376,30494],"content":"This method calls <bpt id=\"p1\">[</bpt>ShellExecute<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb762153)</ept> before it returns <ph id=\"ph1\">`S_OK`</ph>.","source":"This method calls [ShellExecute](http://msdn.microsoft.com/library/windows/desktop/bb762153) before it returns `S_OK`."},{"content":"Override this method in a derived class to implement custom behavior.","pos":[30501,30570]},{"pos":[30580,30635],"content":"<bpt id=\"p1\">&lt;a name=\"ctaskdialog__oninit\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CTaskDialog::OnInit","linkify":"<a name=\"ctaskdialog__oninit\"></a>  CTaskDialog::OnInit","source":"<a name=\"ctaskdialog__oninit\"></a>  CTaskDialog::OnInit"},{"pos":[30639,30709],"content":"The framework calls this method when the <ph id=\"ph1\">`CTaskDialog`</ph> is initialized.","source":"The framework calls this method when the `CTaskDialog` is initialized."},{"pos":[30760,30772],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[30776,30818],"content":"The default implementation returns <ph id=\"ph1\">`S_OK`</ph>.","source":"The default implementation returns `S_OK`."},{"pos":[30828,30835],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Override this method in a derived class to implement custom behavior.","pos":[30839,30908]},{"pos":[30918,30989],"content":"<bpt id=\"p1\">&lt;a name=\"ctaskdialog__onnavigatepage\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CTaskDialog::OnNavigatePage","linkify":"<a name=\"ctaskdialog__onnavigatepage\"></a>  CTaskDialog::OnNavigatePage","source":"<a name=\"ctaskdialog__onnavigatepage\"></a>  CTaskDialog::OnNavigatePage"},{"pos":[30993,31103],"content":"The framework calls this method in response to the <bpt id=\"p1\">[</bpt>CTaskDialog::NavigateTo<ept id=\"p1\">](#ctaskdialog__navigateto)</ept> method.","source":"The framework calls this method in response to the [CTaskDialog::NavigateTo](#ctaskdialog__navigateto) method."},{"pos":[31162,31174],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[31178,31220],"content":"The default implementation returns <ph id=\"ph1\">`S_OK`</ph>.","source":"The default implementation returns `S_OK`."},{"pos":[31230,31237],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Override this method in a derived class to implement custom behavior.","pos":[31241,31310]},{"pos":[31320,31399],"content":"<bpt id=\"p1\">&lt;a name=\"ctaskdialog__onradiobuttonclick\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CTaskDialog::OnRadioButtonClick","linkify":"<a name=\"ctaskdialog__onradiobuttonclick\"></a>  CTaskDialog::OnRadioButtonClick","source":"<a name=\"ctaskdialog__onradiobuttonclick\"></a>  CTaskDialog::OnRadioButtonClick"},{"content":"The framework calls this method when the user selects a radio button control.","pos":[31403,31480]},{"pos":[31561,31571],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`nRadioButtonID`</ph>","pos":[31575,31596],"source":"[in] `nRadioButtonID`"},{"content":"The ID of the radio button control that the user clicked.","pos":[31600,31657]},{"pos":[31667,31679],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[31683,31725],"content":"The default implementation returns <ph id=\"ph1\">`S_OK`</ph>.","source":"The default implementation returns `S_OK`."},{"pos":[31735,31742],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Override this method in a derived class to implement custom behavior.","pos":[31746,31815]},{"pos":[31825,31882],"content":"<bpt id=\"p1\">&lt;a name=\"ctaskdialog__ontimer\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CTaskDialog::OnTimer","linkify":"<a name=\"ctaskdialog__ontimer\"></a>  CTaskDialog::OnTimer","source":"<a name=\"ctaskdialog__ontimer\"></a>  CTaskDialog::OnTimer"},{"content":"The framework calls this method when the timer expires.","pos":[31886,31941]},{"pos":[32003,32013],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`lTime`</ph>","pos":[32017,32029],"source":"[in] `lTime`"},{"content":"Time in milliseconds since the <ph id=\"ph1\">`CTaskDialog`</ph> was created or the timer was reset.","pos":[32033,32113],"source":" Time in milliseconds since the `CTaskDialog` was created or the timer was reset."},{"pos":[32123,32135],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[32139,32181],"content":"The default implementation returns <ph id=\"ph1\">`S_OK`</ph>.","source":"The default implementation returns `S_OK`."},{"pos":[32191,32198],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Override this method in a derived class to implement custom behavior.","pos":[32202,32271]},{"pos":[32281,32378],"content":"<bpt id=\"p1\">&lt;a name=\"ctaskdialog__onverificationcheckboxclick\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CTaskDialog::OnVerificationCheckboxClick","linkify":"<a name=\"ctaskdialog__onverificationcheckboxclick\"></a>  CTaskDialog::OnVerificationCheckboxClick","source":"<a name=\"ctaskdialog__onverificationcheckboxclick\"></a>  CTaskDialog::OnVerificationCheckboxClick"},{"content":"The framework calls this method when the user clicks the verification check box.","pos":[32382,32462]},{"pos":[32547,32557],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`bChecked`</ph>","pos":[32561,32576],"source":"[in] `bChecked`"},{"content":"<ph id=\"ph1\"> `TRUE`</ph> indicates the verification check box is selected; <ph id=\"ph2\">`FALSE`</ph> indicates it is not.","pos":[32579,32665],"source":" `TRUE` indicates the verification check box is selected; `FALSE` indicates it is not."},{"pos":[32675,32687],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[32691,32733],"content":"The default implementation returns <ph id=\"ph1\">`S_OK`</ph>.","source":"The default implementation returns `S_OK`."},{"pos":[32743,32750],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Override this method in a derived class to implement custom behavior.","pos":[32754,32823]},{"pos":[32833,32924],"content":"<bpt id=\"p1\">&lt;a name=\"ctaskdialog__removeallcommandcontrols\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CTaskDialog::RemoveAllCommandControls","linkify":"<a name=\"ctaskdialog__removeallcommandcontrols\"></a>  CTaskDialog::RemoveAllCommandControls","source":"<a name=\"ctaskdialog__removeallcommandcontrols\"></a>  CTaskDialog::RemoveAllCommandControls"},{"pos":[32928,32991],"content":"Removes all the command button controls from the <ph id=\"ph1\">`CTaskDialog`</ph>.","source":"Removes all the command button controls from the `CTaskDialog`."},{"pos":[33049,33056],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[33060,33155],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_MFC_CTaskDialog#2<ept id=\"p2\">](../../mfc/reference/codesnippet/cpp/ctaskdialog-class_1.cpp)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_MFC_CTaskDialog#2](../../mfc/reference/codesnippet/cpp/ctaskdialog-class_1.cpp)]"},{"pos":[33165,33250],"content":"<bpt id=\"p1\">&lt;a name=\"ctaskdialog__removeallradiobuttons\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CTaskDialog::RemoveAllRadioButtons","linkify":"<a name=\"ctaskdialog__removeallradiobuttons\"></a>  CTaskDialog::RemoveAllRadioButtons","source":"<a name=\"ctaskdialog__removeallradiobuttons\"></a>  CTaskDialog::RemoveAllRadioButtons"},{"pos":[33254,33307],"content":"Removes all the radio buttons from the <ph id=\"ph1\">`CTaskDialog`</ph>.","source":"Removes all the radio buttons from the `CTaskDialog`."},{"pos":[33362,33369],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[33373,33468],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_MFC_CTaskDialog#3<ept id=\"p2\">](../../mfc/reference/codesnippet/cpp/ctaskdialog-class_2.cpp)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_MFC_CTaskDialog#3](../../mfc/reference/codesnippet/cpp/ctaskdialog-class_2.cpp)]"},{"pos":[33478,33569],"content":"<bpt id=\"p1\">&lt;a name=\"ctaskdialog__setcommandcontroloptions\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CTaskDialog::SetCommandControlOptions","linkify":"<a name=\"ctaskdialog__setcommandcontroloptions\"></a>  CTaskDialog::SetCommandControlOptions","source":"<a name=\"ctaskdialog__setcommandcontroloptions\"></a>  CTaskDialog::SetCommandControlOptions"},{"pos":[33573,33627],"content":"Updates a command button control on the <ph id=\"ph1\">`CTaskDialog`</ph>.","source":"Updates a command button control on the `CTaskDialog`."},{"pos":[33771,33781],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`nCommandControlID`</ph>","pos":[33785,33809],"source":"[in] `nCommandControlID`"},{"content":"The ID of the command control to update.","pos":[33813,33853]},{"content":"[in] <ph id=\"ph1\">`bEnabled`</ph>","pos":[33860,33875],"source":"[in] `bEnabled`"},{"content":"A Boolean parameter that indicates if the specified command button control is enabled or disabled.","pos":[33879,33977]},{"content":"[in] <ph id=\"ph1\">`bRequiresElevation`</ph>","pos":[33984,34009],"source":"[in] `bRequiresElevation`"},{"content":"A Boolean parameter that indicates if the specified command button control requires elevation.","pos":[34013,34107]},{"pos":[34117,34124],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[34128,34313],"content":"Use this method to change whether a command button control is enabled or requires elevation after it has been added to the <bpt id=\"p1\">[</bpt>CTaskDialog Class<ept id=\"p1\">](../../mfc/reference/ctaskdialog-class.md)</ept>.","source":"Use this method to change whether a command button control is enabled or requires elevation after it has been added to the [CTaskDialog Class](../../mfc/reference/ctaskdialog-class.md)."},{"pos":[34323,34330],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[34334,34429],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_MFC_CTaskDialog#2<ept id=\"p2\">](../../mfc/reference/codesnippet/cpp/ctaskdialog-class_1.cpp)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_MFC_CTaskDialog#2](../../mfc/reference/codesnippet/cpp/ctaskdialog-class_1.cpp)]"},{"pos":[34439,34526],"content":"<bpt id=\"p1\">&lt;a name=\"ctaskdialog__setcommonbuttonoptions\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CTaskDialog::SetCommonButtonOptions","linkify":"<a name=\"ctaskdialog__setcommonbuttonoptions\"></a>  CTaskDialog::SetCommonButtonOptions","source":"<a name=\"ctaskdialog__setcommonbuttonoptions\"></a>  CTaskDialog::SetCommonButtonOptions"},{"content":"Updates a subset of common buttons to be enabled and to require UAC elevation.","pos":[34530,34608]},{"pos":[34728,34738],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`nDisabledButtonMask`</ph>","pos":[34742,34768],"source":"[in] `nDisabledButtonMask`"},{"content":"A mask for the common buttons to disable.","pos":[34772,34813]},{"content":"[in] <ph id=\"ph1\">`nElevationButtonMask`</ph>","pos":[34820,34847],"source":"[in] `nElevationButtonMask`"},{"content":"A mask for the common buttons that require elevation.","pos":[34851,34904]},{"pos":[34914,34921],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"You can set the common buttons available to an instance of the <bpt id=\"p1\">[</bpt>CTaskDialog Class<ept id=\"p1\">](../../mfc/reference/ctaskdialog-class.md)</ept> by using the constructor <bpt id=\"p2\">[</bpt>CTaskDialog::CTaskDialog<ept id=\"p2\">](#ctaskdialog__ctaskdialog)</ept> and the method <bpt id=\"p3\">[</bpt>CTaskDialog::SetCommonButtons<ept id=\"p3\">](#ctaskdialog__setcommonbuttons)</ept>.","pos":[34925,35208],"source":"You can set the common buttons available to an instance of the [CTaskDialog Class](../../mfc/reference/ctaskdialog-class.md) by using the constructor [CTaskDialog::CTaskDialog](#ctaskdialog__ctaskdialog) and the method [CTaskDialog::SetCommonButtons](#ctaskdialog__setcommonbuttons)."},{"content":"<ph id=\"ph1\">`CTaskDialog::SetCommonButtonOptions`</ph> does not support adding new common buttons.","pos":[35209,35290],"source":"`CTaskDialog::SetCommonButtonOptions` does not support adding new common buttons."},{"pos":[35297,35536],"content":"If you use this method to disable or elevate a common button that is not available for this <ph id=\"ph1\">`CTaskDialog`</ph>, this method throws an exception by using the <bpt id=\"p1\">[</bpt>ENSURE<ept id=\"p1\">](http://msdn.microsoft.com/library/738c4ccf-c29c-4c04-8d6c-f126bedf6e91)</ept> macro.","source":"If you use this method to disable or elevate a common button that is not available for this `CTaskDialog`, this method throws an exception by using the [ENSURE](http://msdn.microsoft.com/library/738c4ccf-c29c-4c04-8d6c-f126bedf6e91) macro."},{"content":"This method enables any button that is available to the <ph id=\"ph1\">`CTaskDialog`</ph> but is not in the <ph id=\"ph2\">`nDisabledButtonMask`</ph>, even if it was previously disabled.","pos":[35543,35689],"source":"This method enables any button that is available to the `CTaskDialog` but is not in the `nDisabledButtonMask`, even if it was previously disabled."},{"content":"This method treats elevation in a similar manner: it records common buttons as not requiring elevation if the common button is available but not included in <ph id=\"ph1\">`nElevationButtonMask`</ph>.","pos":[35690,35870],"source":" This method treats elevation in a similar manner: it records common buttons as not requiring elevation if the common button is available but not included in `nElevationButtonMask`."},{"pos":[35880,35887],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[35891,35986],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_MFC_CTaskDialog#6<ept id=\"p2\">](../../mfc/reference/codesnippet/cpp/ctaskdialog-class_6.cpp)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_MFC_CTaskDialog#6](../../mfc/reference/codesnippet/cpp/ctaskdialog-class_6.cpp)]"},{"pos":[35996,36071],"content":"<bpt id=\"p1\">&lt;a name=\"ctaskdialog__setcommonbuttons\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CTaskDialog::SetCommonButtons","linkify":"<a name=\"ctaskdialog__setcommonbuttons\"></a>  CTaskDialog::SetCommonButtons","source":"<a name=\"ctaskdialog__setcommonbuttons\"></a>  CTaskDialog::SetCommonButtons"},{"pos":[36075,36116],"content":"Adds common buttons to the <ph id=\"ph1\">`CTaskDialog`</ph>.","source":"Adds common buttons to the `CTaskDialog`."},{"pos":[36257,36267],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`nButtonMask`</ph>","pos":[36271,36289],"source":"[in] `nButtonMask`"},{"content":"A mask of the buttons to add to the <ph id=\"ph1\">`CTaskDialog`</ph>.","pos":[36293,36343],"source":" A mask of the buttons to add to the `CTaskDialog`."},{"content":"[in] <ph id=\"ph1\">`nDisabledButtonMask`</ph>","pos":[36350,36376],"source":"[in] `nDisabledButtonMask`"},{"content":"A mask of the buttons to disable.","pos":[36380,36413]},{"content":"[in] <ph id=\"ph1\">`nElevationButtonMask`</ph>","pos":[36420,36447],"source":"[in] `nElevationButtonMask`"},{"content":"A mask of the buttons that require elevation.","pos":[36451,36496]},{"pos":[36506,36513],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"You cannot call this method after the display window for this instance of the <bpt id=\"p1\">[</bpt>CTaskDialog Class<ept id=\"p1\">](../../mfc/reference/ctaskdialog-class.md)</ept> is created.","pos":[36517,36668],"source":"You cannot call this method after the display window for this instance of the [CTaskDialog Class](../../mfc/reference/ctaskdialog-class.md) is created."},{"content":"If you do, this method throws an exception.","pos":[36669,36712]},{"content":"The buttons indicated by <ph id=\"ph1\">`nButtonMask`</ph> override any common buttons previously added to the <ph id=\"ph2\">`CTaskDialog`</ph>.","pos":[36719,36824],"source":"The buttons indicated by `nButtonMask` override any common buttons previously added to the `CTaskDialog`."},{"content":"Only the buttons indicated in <ph id=\"ph1\">`nButtonMask`</ph> are available.","pos":[36825,36883],"source":" Only the buttons indicated in `nButtonMask` are available."},{"pos":[36890,37127],"content":"If either <ph id=\"ph1\">`nDisabledButtonMask`</ph> or <ph id=\"ph2\">`nElevationButtonMask`</ph> contain a button that is not in <ph id=\"ph3\">`nButtonMask`</ph>, this method throws an exception by using the <bpt id=\"p1\">[</bpt>ENSURE<ept id=\"p1\">](http://msdn.microsoft.com/library/738c4ccf-c29c-4c04-8d6c-f126bedf6e91)</ept> macro.","source":"If either `nDisabledButtonMask` or `nElevationButtonMask` contain a button that is not in `nButtonMask`, this method throws an exception by using the [ENSURE](http://msdn.microsoft.com/library/738c4ccf-c29c-4c04-8d6c-f126bedf6e91) macro."},{"content":"By default, all common buttons are enabled and do not require elevation.","pos":[37134,37206]},{"pos":[37216,37223],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[37227,37322],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_MFC_CTaskDialog#6<ept id=\"p2\">](../../mfc/reference/codesnippet/cpp/ctaskdialog-class_6.cpp)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_MFC_CTaskDialog#6](../../mfc/reference/codesnippet/cpp/ctaskdialog-class_6.cpp)]"},{"pos":[37332,37395],"content":"<bpt id=\"p1\">&lt;a name=\"ctaskdialog__setcontent\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CTaskDialog::SetContent","linkify":"<a name=\"ctaskdialog__setcontent\"></a>  CTaskDialog::SetContent","source":"<a name=\"ctaskdialog__setcontent\"></a>  CTaskDialog::SetContent"},{"pos":[37399,37440],"content":"Updates the content of the <ph id=\"ph1\">`CTaskDialog`</ph>.","source":"Updates the content of the `CTaskDialog`."},{"pos":[37509,37519],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`strContent`</ph>","pos":[37523,37540],"source":"[in] `strContent`"},{"content":"The string to display to the user.","pos":[37544,37578]},{"pos":[37588,37595],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[37599,37760],"content":"The content of the <bpt id=\"p1\">[</bpt>CTaskDialog Class<ept id=\"p1\">](../../mfc/reference/ctaskdialog-class.md)</ept> is the text that is displayed to the user in the main section of the dialog box.","source":"The content of the [CTaskDialog Class](../../mfc/reference/ctaskdialog-class.md) is the text that is displayed to the user in the main section of the dialog box."},{"pos":[37770,37777],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[37781,37876],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_MFC_CTaskDialog#7<ept id=\"p2\">](../../mfc/reference/codesnippet/cpp/ctaskdialog-class_3.cpp)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_MFC_CTaskDialog#7](../../mfc/reference/codesnippet/cpp/ctaskdialog-class_3.cpp)]"},{"pos":[37886,37977],"content":"<bpt id=\"p1\">&lt;a name=\"ctaskdialog__setdefaultcommandcontrol\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CTaskDialog::SetDefaultCommandControl","linkify":"<a name=\"ctaskdialog__setdefaultcommandcontrol\"></a>  CTaskDialog::SetDefaultCommandControl","source":"<a name=\"ctaskdialog__setdefaultcommandcontrol\"></a>  CTaskDialog::SetDefaultCommandControl"},{"content":"Specifies the default command button control.","pos":[37981,38026]},{"pos":[38105,38115],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`nCommandControlID`</ph>","pos":[38119,38143],"source":"[in] `nCommandControlID`"},{"content":"The ID of the command button control to be the default.","pos":[38147,38202]},{"pos":[38212,38219],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[38223,38344],"content":"The default command button control is the control that is selected when the <ph id=\"ph1\">`CTaskDialog`</ph> is first displayed to the user.","source":"The default command button control is the control that is selected when the `CTaskDialog` is first displayed to the user."},{"pos":[38351,38461],"content":"This method throws an exception if it cannot find the command button control specified by <ph id=\"ph1\">`nCommandControlID`</ph>.","source":"This method throws an exception if it cannot find the command button control specified by `nCommandControlID`."},{"pos":[38471,38478],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[38482,38577],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_MFC_CTaskDialog#2<ept id=\"p2\">](../../mfc/reference/codesnippet/cpp/ctaskdialog-class_1.cpp)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_MFC_CTaskDialog#2](../../mfc/reference/codesnippet/cpp/ctaskdialog-class_1.cpp)]"},{"pos":[38587,38672],"content":"<bpt id=\"p1\">&lt;a name=\"ctaskdialog__setdefaultradiobutton\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CTaskDialog::SetDefaultRadioButton","linkify":"<a name=\"ctaskdialog__setdefaultradiobutton\"></a>  CTaskDialog::SetDefaultRadioButton","source":"<a name=\"ctaskdialog__setdefaultradiobutton\"></a>  CTaskDialog::SetDefaultRadioButton"},{"content":"Specifies the default radio button.","pos":[38676,38711]},{"pos":[38784,38794],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`nRadioButtonID`</ph>","pos":[38798,38819],"source":"[in] `nRadioButtonID`"},{"content":"The ID of the radio button to be the default.","pos":[38823,38868]},{"pos":[38878,38885],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[38889,38999],"content":"The default radio button is the button that is selected when the <ph id=\"ph1\">`CTaskDialog`</ph> is first displayed to the user.","source":"The default radio button is the button that is selected when the `CTaskDialog` is first displayed to the user."},{"pos":[39006,39103],"content":"This method throws an exception if it cannot find the radio button specified by <ph id=\"ph1\">`nRadioButtonID`</ph>.","source":"This method throws an exception if it cannot find the radio button specified by `nRadioButtonID`."},{"pos":[39113,39120],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[39124,39219],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_MFC_CTaskDialog#3<ept id=\"p2\">](../../mfc/reference/codesnippet/cpp/ctaskdialog-class_2.cpp)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_MFC_CTaskDialog#3](../../mfc/reference/codesnippet/cpp/ctaskdialog-class_2.cpp)]"},{"pos":[39229,39300],"content":"<bpt id=\"p1\">&lt;a name=\"ctaskdialog__setdialogwidth\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CTaskDialog::SetDialogWidth","linkify":"<a name=\"ctaskdialog__setdialogwidth\"></a>  CTaskDialog::SetDialogWidth","source":"<a name=\"ctaskdialog__setdialogwidth\"></a>  CTaskDialog::SetDialogWidth"},{"pos":[39304,39343],"content":"Adjusts the width of the <ph id=\"ph1\">`CTaskDialog`</ph>.","source":"Adjusts the width of the `CTaskDialog`."},{"pos":[39405,39415],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`nWidth`</ph>","pos":[39419,39432],"source":"[in] `nWidth`"},{"content":"The width of the dialog box, in pixels.","pos":[39436,39475]},{"pos":[39485,39492],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The parameter <ph id=\"ph1\">`nWidth`</ph> must be greater than or equal to 0.","pos":[39496,39554],"source":"The parameter `nWidth` must be greater than or equal to 0."},{"content":"Otherwise, this method throws an exception.","pos":[39555,39598]},{"pos":[39605,39682],"content":"If <ph id=\"ph1\">`nWidth`</ph> is set to 0, this method sets the dialog box to the default size.","source":"If `nWidth` is set to 0, this method sets the dialog box to the default size."},{"pos":[39692,39699],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[39703,39798],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_MFC_CTaskDialog#7<ept id=\"p2\">](../../mfc/reference/codesnippet/cpp/ctaskdialog-class_3.cpp)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_MFC_CTaskDialog#7](../../mfc/reference/codesnippet/cpp/ctaskdialog-class_3.cpp)]"},{"pos":[39808,39883],"content":"<bpt id=\"p1\">&lt;a name=\"ctaskdialog__setexpansionarea\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CTaskDialog::SetExpansionArea","linkify":"<a name=\"ctaskdialog__setexpansionarea\"></a>  CTaskDialog::SetExpansionArea","source":"<a name=\"ctaskdialog__setexpansionarea\"></a>  CTaskDialog::SetExpansionArea"},{"pos":[39887,39935],"content":"Updates the expansion area of the <ph id=\"ph1\">`CTaskDialog`</ph>.","source":"Updates the expansion area of the `CTaskDialog`."},{"pos":[40124,40134],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`strExpandedInformation`</ph>","pos":[40138,40167],"source":"[in] `strExpandedInformation`"},{"content":"The string that the <ph id=\"ph1\">`CTaskDialog`</ph> displays in the main body of the dialog box when the user clicks the expansion button.","pos":[40171,40291],"source":" The string that the `CTaskDialog` displays in the main body of the dialog box when the user clicks the expansion button."},{"content":"[in] <ph id=\"ph1\">`strCollapsedLabel`</ph>","pos":[40298,40322],"source":"[in] `strCollapsedLabel`"},{"content":"The string that the <ph id=\"ph1\">`CTaskDialog`</ph> displays next to the expansion button when the expanded area is collapsed.","pos":[40326,40434],"source":" The string that the `CTaskDialog` displays next to the expansion button when the expanded area is collapsed."},{"content":"[in] <ph id=\"ph1\">`strExpandedLabel`</ph>","pos":[40441,40464],"source":"[in] `strExpandedLabel`"},{"content":"The string that the <ph id=\"ph1\">`CTaskDialog`</ph> displays next to the expansion button when the expanded area is displayed.","pos":[40468,40576],"source":" The string that the `CTaskDialog` displays next to the expansion button when the expanded area is displayed."},{"pos":[40586,40593],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The expansion area of the <bpt id=\"p1\">[</bpt>CTaskDialog Class<ept id=\"p1\">](../../mfc/reference/ctaskdialog-class.md)</ept> enables you to provide additional information to the user.","pos":[40597,40743],"source":"The expansion area of the [CTaskDialog Class](../../mfc/reference/ctaskdialog-class.md) enables you to provide additional information to the user."},{"content":"The expansion area is in the main part of the <ph id=\"ph1\">`CTaskDialog`</ph>, located immediately underneath the title and content string.","pos":[40744,40865],"source":" The expansion area is in the main part of the `CTaskDialog`, located immediately underneath the title and content string."},{"content":"When the <ph id=\"ph1\">`CTaskDialog`</ph> is first displayed, it does not show the expanded information and puts <ph id=\"ph2\">`strCollapsedLabel`</ph> next to the expansion button.","pos":[40872,41015],"source":"When the `CTaskDialog` is first displayed, it does not show the expanded information and puts `strCollapsedLabel` next to the expansion button."},{"content":"When the user clicks the expansion button, the <ph id=\"ph1\">`CTaskDialog`</ph> displays <ph id=\"ph2\">`strExpandedInformation`</ph> and changes the label to <ph id=\"ph3\">`strExpandedLabel`</ph>.","pos":[41016,41155],"source":" When the user clicks the expansion button, the `CTaskDialog` displays `strExpandedInformation` and changes the label to `strExpandedLabel`."},{"pos":[41165,41172],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[41176,41271],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_MFC_CTaskDialog#7<ept id=\"p2\">](../../mfc/reference/codesnippet/cpp/ctaskdialog-class_3.cpp)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_MFC_CTaskDialog#7](../../mfc/reference/codesnippet/cpp/ctaskdialog-class_3.cpp)]"},{"pos":[41281,41350],"content":"<bpt id=\"p1\">&lt;a name=\"ctaskdialog__setfootericon\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CTaskDialog::SetFooterIcon","linkify":"<a name=\"ctaskdialog__setfootericon\"></a>  CTaskDialog::SetFooterIcon","source":"<a name=\"ctaskdialog__setfootericon\"></a>  CTaskDialog::SetFooterIcon"},{"pos":[41354,41399],"content":"Updates the footer icon of the <ph id=\"ph1\">`CTaskDialog`</ph>.","source":"Updates the footer icon of the `CTaskDialog`."},{"pos":[41510,41520],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`hFooterIcon`</ph>","pos":[41524,41542],"source":"[in] `hFooterIcon`"},{"content":"The new icon for the <ph id=\"ph1\">`CTaskDialog`</ph>.","pos":[41546,41581],"source":" The new icon for the `CTaskDialog`."},{"content":"[in] <ph id=\"ph1\">`lpszFooterIcon`</ph>","pos":[41588,41609],"source":"[in] `lpszFooterIcon`"},{"content":"The new icon for the <ph id=\"ph1\">`CTaskDialog`</ph>.","pos":[41613,41648],"source":" The new icon for the `CTaskDialog`."},{"pos":[41658,41665],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The footer icon is displayed on the bottom of the <bpt id=\"p1\">[</bpt>CTaskDialog Class<ept id=\"p1\">](../../mfc/reference/ctaskdialog-class.md)</ept>.","pos":[41669,41781],"source":"The footer icon is displayed on the bottom of the [CTaskDialog Class](../../mfc/reference/ctaskdialog-class.md)."},{"content":"It can have associated footer text.","pos":[41782,41817]},{"content":"You can change the footer text with <bpt id=\"p1\">[</bpt>CTaskDialog::SetFooterText<ept id=\"p1\">](#ctaskdialog__setfootertext)</ept>.","pos":[41818,41912],"source":" You can change the footer text with [CTaskDialog::SetFooterText](#ctaskdialog__setfootertext)."},{"pos":[41919,42114],"content":"This method throws an exception with the <bpt id=\"p1\">[</bpt>ENSURE<ept id=\"p1\">](http://msdn.microsoft.com/library/738c4ccf-c29c-4c04-8d6c-f126bedf6e91)</ept> macro if the <ph id=\"ph1\">`CTaskDialog`</ph> is displayed or the input parameter is <ph id=\"ph2\">`NULL`</ph>.","source":"This method throws an exception with the [ENSURE](http://msdn.microsoft.com/library/738c4ccf-c29c-4c04-8d6c-f126bedf6e91) macro if the `CTaskDialog` is displayed or the input parameter is `NULL`."},{"content":"A <ph id=\"ph1\">`CTaskDialog`</ph> can only accept an <ph id=\"ph2\">`HICON`</ph> or <ph id=\"ph3\">`LPCWSTR`</ph> as a footer icon.","pos":[42121,42194],"source":"A `CTaskDialog` can only accept an `HICON` or `LPCWSTR` as a footer icon."},{"content":"This is configured by setting the option <ph id=\"ph1\">`TDF_USE_HICON_FOOTER`</ph> in the constructor or <bpt id=\"p1\">[</bpt>CTaskDialog::SetOptions<ept id=\"p1\">](#ctaskdialog__setoptions)</ept>.","pos":[42195,42333],"source":" This is configured by setting the option `TDF_USE_HICON_FOOTER` in the constructor or [CTaskDialog::SetOptions](#ctaskdialog__setoptions)."},{"content":"By default, the <ph id=\"ph1\">`CTaskDialog`</ph> is configured to use <ph id=\"ph2\">`LPCWSTR`</ph> as the input type for the footer icon.","pos":[42334,42433],"source":" By default, the `CTaskDialog` is configured to use `LPCWSTR` as the input type for the footer icon."},{"content":"This method generates an exception if you try to set the icon using the inappropriate type.","pos":[42434,42525]},{"pos":[42535,42542],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[42546,42641],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_MFC_CTaskDialog#7<ept id=\"p2\">](../../mfc/reference/codesnippet/cpp/ctaskdialog-class_3.cpp)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_MFC_CTaskDialog#7](../../mfc/reference/codesnippet/cpp/ctaskdialog-class_3.cpp)]"},{"pos":[42651,42720],"content":"<bpt id=\"p1\">&lt;a name=\"ctaskdialog__setfootertext\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CTaskDialog::SetFooterText","linkify":"<a name=\"ctaskdialog__setfootertext\"></a>  CTaskDialog::SetFooterText","source":"<a name=\"ctaskdialog__setfootertext\"></a>  CTaskDialog::SetFooterText"},{"pos":[42724,42776],"content":"Updates the text on the footer of the <ph id=\"ph1\">`CTaskDialog`</ph>.","source":"Updates the text on the footer of the `CTaskDialog`."},{"pos":[42851,42861],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`strFooterText`</ph>","pos":[42865,42885],"source":"[in] `strFooterText`"},{"content":"The new text for the footer.","pos":[42889,42917]},{"pos":[42927,42934],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The footer icon appears next to the footer text on the bottom of the <ph id=\"ph1\">`CTaskDialog`</ph>.","pos":[42938,43021],"source":"The footer icon appears next to the footer text on the bottom of the `CTaskDialog`."},{"content":"You can change the footer icon with <bpt id=\"p1\">[</bpt>CTaskDialog::SetFooterIcon<ept id=\"p1\">](#ctaskdialog__setfootericon)</ept>.","pos":[43022,43116],"source":" You can change the footer icon with [CTaskDialog::SetFooterIcon](#ctaskdialog__setfootericon)."},{"pos":[43126,43133],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[43137,43232],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_MFC_CTaskDialog#7<ept id=\"p2\">](../../mfc/reference/codesnippet/cpp/ctaskdialog-class_3.cpp)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_MFC_CTaskDialog#7](../../mfc/reference/codesnippet/cpp/ctaskdialog-class_3.cpp)]"},{"pos":[43242,43307],"content":"<bpt id=\"p1\">&lt;a name=\"ctaskdialog__setmainicon\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CTaskDialog::SetMainIcon","linkify":"<a name=\"ctaskdialog__setmainicon\"></a>  CTaskDialog::SetMainIcon","source":"<a name=\"ctaskdialog__setmainicon\"></a>  CTaskDialog::SetMainIcon"},{"pos":[43311,43354],"content":"Updates the main icon of the <ph id=\"ph1\">`CTaskDialog`</ph>.","source":"Updates the main icon of the `CTaskDialog`."},{"pos":[43457,43467],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`hMainIcon`</ph>","pos":[43471,43487],"source":"[in] `hMainIcon`"},{"content":"The new icon.","pos":[43491,43504]},{"content":"[in] <ph id=\"ph1\">`lpszMainIcon`</ph>","pos":[43511,43530],"source":"[in] `lpszMainIcon`"},{"content":"The new icon.","pos":[43534,43547]},{"pos":[43557,43564],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[43568,43763],"content":"This method throws an exception with the <bpt id=\"p1\">[</bpt>ENSURE<ept id=\"p1\">](http://msdn.microsoft.com/library/738c4ccf-c29c-4c04-8d6c-f126bedf6e91)</ept> macro if the <ph id=\"ph1\">`CTaskDialog`</ph> is displayed or the input parameter is <ph id=\"ph2\">`NULL`</ph>.","source":"This method throws an exception with the [ENSURE](http://msdn.microsoft.com/library/738c4ccf-c29c-4c04-8d6c-f126bedf6e91) macro if the `CTaskDialog` is displayed or the input parameter is `NULL`."},{"content":"A <ph id=\"ph1\">`CTaskDialog`</ph> can only accept an <ph id=\"ph2\">`HICON`</ph> or <ph id=\"ph3\">`LPCWSTR`</ph> as a main icon.","pos":[43770,43841],"source":"A `CTaskDialog` can only accept an `HICON` or `LPCWSTR` as a main icon."},{"content":"You can configure this by setting the <ph id=\"ph1\">`TDF_USE_HICON_MAIN`</ph> option in the constructor or in the <bpt id=\"p1\">[</bpt>CTaskDialog::SetOptions<ept id=\"p1\">](#ctaskdialog__setoptions)</ept> method.","pos":[43842,43996],"source":" You can configure this by setting the `TDF_USE_HICON_MAIN` option in the constructor or in the [CTaskDialog::SetOptions](#ctaskdialog__setoptions) method."},{"content":"By default, the <ph id=\"ph1\">`CTaskDialog`</ph> is configured to use <ph id=\"ph2\">`LPCWSTR`</ph> as the input type for the main icon.","pos":[43997,44094],"source":" By default, the `CTaskDialog` is configured to use `LPCWSTR` as the input type for the main icon."},{"content":"This method generates an exception if you try to set the icon using the inappropriate type.","pos":[44095,44186]},{"pos":[44196,44203],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[44207,44302],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_MFC_CTaskDialog#7<ept id=\"p2\">](../../mfc/reference/codesnippet/cpp/ctaskdialog-class_3.cpp)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_MFC_CTaskDialog#7](../../mfc/reference/codesnippet/cpp/ctaskdialog-class_3.cpp)]"},{"pos":[44312,44391],"content":"<bpt id=\"p1\">&lt;a name=\"ctaskdialog__setmaininstruction\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CTaskDialog::SetMainInstruction","linkify":"<a name=\"ctaskdialog__setmaininstruction\"></a>  CTaskDialog::SetMainInstruction","source":"<a name=\"ctaskdialog__setmaininstruction\"></a>  CTaskDialog::SetMainInstruction"},{"pos":[44395,44445],"content":"Updates the main instruction of the <ph id=\"ph1\">`CTaskDialog`</ph>.","source":"Updates the main instruction of the `CTaskDialog`."},{"pos":[44527,44537],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`strInstructions`</ph>","pos":[44541,44563],"source":"[in] `strInstructions`"},{"content":"The new main instruction.","pos":[44567,44592]},{"pos":[44602,44609],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The main instruction of the <bpt id=\"p1\">[</bpt>CTaskDialog Class<ept id=\"p1\">](../../mfc/reference/ctaskdialog-class.md)</ept> is text displayed to the user in a large bold font.","pos":[44613,44754],"source":"The main instruction of the [CTaskDialog Class](../../mfc/reference/ctaskdialog-class.md) is text displayed to the user in a large bold font."},{"content":"It is located in the dialog box underneath the title bar.","pos":[44755,44812]},{"pos":[44822,44829],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[44833,44928],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_MFC_CTaskDialog#7<ept id=\"p2\">](../../mfc/reference/codesnippet/cpp/ctaskdialog-class_3.cpp)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_MFC_CTaskDialog#7](../../mfc/reference/codesnippet/cpp/ctaskdialog-class_3.cpp)]"},{"pos":[44938,45001],"content":"<bpt id=\"p1\">&lt;a name=\"ctaskdialog__setoptions\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CTaskDialog::SetOptions","linkify":"<a name=\"ctaskdialog__setoptions\"></a>  CTaskDialog::SetOptions","source":"<a name=\"ctaskdialog__setoptions\"></a>  CTaskDialog::SetOptions"},{"pos":[45005,45050],"content":"Configures the options for the <ph id=\"ph1\">`CTaskDialog`</ph>.","source":"Configures the options for the `CTaskDialog`."},{"pos":[45109,45119],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`nOptionFlag`</ph>","pos":[45123,45141],"source":"[in] `nOptionFlag`"},{"content":"The set of flags to use for the <ph id=\"ph1\">`CTaskDialog`</ph>.","pos":[45145,45191],"source":" The set of flags to use for the `CTaskDialog`."},{"pos":[45201,45208],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This method clears all the current options for the <ph id=\"ph1\">`CTaskDialog`</ph>.","pos":[45212,45277],"source":"This method clears all the current options for the `CTaskDialog`."},{"content":"To preserve the current options, you must retrieve them first with <bpt id=\"p1\">[</bpt>CTaskDialog::GetOptions<ept id=\"p1\">](#ctaskdialog__getoptions)</ept> and combine them with the options that you want to set.","pos":[45278,45452],"source":" To preserve the current options, you must retrieve them first with [CTaskDialog::GetOptions](#ctaskdialog__getoptions) and combine them with the options that you want to set."},{"content":"The following table lists all the valid options.","pos":[45459,45507]},{"content":"Enables hyperlinks in the <ph id=\"ph1\">`CTaskDialog`</ph>.","pos":[45541,45581],"source":" Enables hyperlinks in the `CTaskDialog`."},{"content":"Configures the <ph id=\"ph1\">`CTaskDialog`</ph> to use a <ph id=\"ph2\">`HICON`</ph> for the main icon.","pos":[45612,45676],"source":" Configures the `CTaskDialog` to use a `HICON` for the main icon."},{"content":"The alternative is to use a <ph id=\"ph1\">`LPCWSTR`</ph>.","pos":[45677,45715],"source":" The alternative is to use a `LPCWSTR`."},{"content":"Configures the <ph id=\"ph1\">`CTaskDialog`</ph> to use a <ph id=\"ph2\">`HICON`</ph> for the footer icon.","pos":[45748,45814],"source":" Configures the `CTaskDialog` to use a `HICON` for the footer icon."},{"content":"The alternative is to use a <ph id=\"ph1\">`LPCWSTR`</ph>.","pos":[45815,45853],"source":" The alternative is to use a `LPCWSTR`."},{"content":"Enables the user to close the <ph id=\"ph1\">`CTaskDialog`</ph> by using the keyboard or by using the icon in the upper-right corner of the dialog box, even if the <bpt id=\"p1\">**</bpt>Cancel<ept id=\"p1\">**</ept> button is not enabled.","pos":[45895,46072],"source":" Enables the user to close the `CTaskDialog` by using the keyboard or by using the icon in the upper-right corner of the dialog box, even if the **Cancel** button is not enabled."},{"content":"If this flag is not set and the <bpt id=\"p1\">**</bpt>Cancel<ept id=\"p1\">**</ept> button is not enabled, the user cannot close the dialog box by using Alt+F4, the Escape key, or the title bar's close button.","pos":[46073,46241],"source":" If this flag is not set and the **Cancel** button is not enabled, the user cannot close the dialog box by using Alt+F4, the Escape key, or the title bar's close button."},{"content":"Configures the <ph id=\"ph1\">`CTaskDialog`</ph> to use command button controls.","pos":[46275,46335],"source":" Configures the `CTaskDialog` to use command button controls."},{"content":"Configures the <ph id=\"ph1\">`CTaskDialog`</ph> to use command button controls without displaying an icon next to the control.","pos":[46377,46484],"source":" Configures the `CTaskDialog` to use command button controls without displaying an icon next to the control."},{"content":"<ph id=\"ph1\">`TDF_USE_COMMAND_LINKS`</ph> overrides <ph id=\"ph2\">`TDF_USE_COMMAND_LINKS_NO_ICON`</ph>.","pos":[46485,46551],"source":"`TDF_USE_COMMAND_LINKS` overrides `TDF_USE_COMMAND_LINKS_NO_ICON`."},{"content":"Indicates the expansion area is currently expanded.","pos":[46586,46637]},{"content":"Determines whether the expansion area is expanded by default.","pos":[46673,46734]},{"content":"Indicates the verification check box is currently selected.","pos":[46776,46835]},{"content":"Configures the <ph id=\"ph1\">`CTaskDialog`</ph> to display a progress bar.","pos":[46869,46924],"source":" Configures the `CTaskDialog` to display a progress bar."},{"content":"Configures the progress bar to be a marquee progress bar.","pos":[46966,47023]},{"content":"If you enable this option, you must set <ph id=\"ph1\">`TDF_SHOW_PROGRESS_BAR`</ph> to have the expected behavior.","pos":[47024,47118],"source":" If you enable this option, you must set `TDF_SHOW_PROGRESS_BAR` to have the expected behavior."},{"content":"Indicates that the <ph id=\"ph1\">`CTaskDialog`</ph> callback interval is set to approximately 200 milliseconds.","pos":[47149,47241],"source":" Indicates that the `CTaskDialog` callback interval is set to approximately 200 milliseconds."},{"content":"Configures the <ph id=\"ph1\">`CTaskDialog`</ph> to be centered relative to the parent window.","pos":[47285,47359],"source":" Configures the `CTaskDialog` to be centered relative to the parent window."},{"content":"If this flag is not enabled, the <ph id=\"ph1\">`CTaskDialog`</ph> is centered relative to the monitor.","pos":[47360,47443],"source":" If this flag is not enabled, the `CTaskDialog` is centered relative to the monitor."},{"content":"Configures the <ph id=\"ph1\">`CTaskDialog`</ph> for a right-to-left reading layout.","pos":[47470,47534],"source":" Configures the `CTaskDialog` for a right-to-left reading layout."},{"content":"Indicates that no radio button is selected when the <ph id=\"ph1\">`CTaskDialog`</ph> appears.","pos":[47574,47648],"source":" Indicates that no radio button is selected when the `CTaskDialog` appears."},{"content":"Enables the user to minimize the <ph id=\"ph1\">`CTaskDialog`</ph>.","pos":[47681,47728],"source":" Enables the user to minimize the `CTaskDialog`."},{"content":"To support this option, the <ph id=\"ph1\">`CTaskDialog`</ph> cannot be modal.","pos":[47729,47787],"source":" To support this option, the `CTaskDialog` cannot be modal."},{"content":"MFC does not support this option because MFC does not support a modeless <ph id=\"ph1\">`CTaskDialog`</ph>.","pos":[47788,47875],"source":" MFC does not support this option because MFC does not support a modeless `CTaskDialog`."},{"pos":[47885,47892],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[47896,47991],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_MFC_CTaskDialog#7<ept id=\"p2\">](../../mfc/reference/codesnippet/cpp/ctaskdialog-class_3.cpp)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_MFC_CTaskDialog#7](../../mfc/reference/codesnippet/cpp/ctaskdialog-class_3.cpp)]"},{"pos":[48001,48086],"content":"<bpt id=\"p1\">&lt;a name=\"ctaskdialog__setprogressbarmarquee\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CTaskDialog::SetProgressBarMarquee","linkify":"<a name=\"ctaskdialog__setprogressbarmarquee\"></a>  CTaskDialog::SetProgressBarMarquee","source":"<a name=\"ctaskdialog__setprogressbarmarquee\"></a>  CTaskDialog::SetProgressBarMarquee"},{"pos":[48090,48167],"content":"Configures a marquee bar for the <ph id=\"ph1\">`CTaskDialog`</ph> and adds it to the dialog box.","source":"Configures a marquee bar for the `CTaskDialog` and adds it to the dialog box."},{"pos":[48276,48286],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`bEnabled`</ph>","pos":[48290,48305],"source":"[in] `bEnabled`"},{"content":"<ph id=\"ph1\"> `TRUE`</ph> to enable the marquee bar; <ph id=\"ph2\">`FALSE`</ph> to disable the marquee bar and remove it from the <ph id=\"ph3\">`CTaskDialog`</ph>.","pos":[48308,48415],"source":" `TRUE` to enable the marquee bar; `FALSE` to disable the marquee bar and remove it from the `CTaskDialog`."},{"content":"[in] <ph id=\"ph1\">`nMarqueeSpeed`</ph>","pos":[48422,48442],"source":"[in] `nMarqueeSpeed`"},{"content":"An integer that indicates the speed of the marquee bar.","pos":[48446,48501]},{"pos":[48511,48518],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[48522,48640],"content":"The marquee bar appears underneath the main text of the <bpt id=\"p1\">[</bpt>CTaskDialog Class<ept id=\"p1\">](../../mfc/reference/ctaskdialog-class.md)</ept>.","source":"The marquee bar appears underneath the main text of the [CTaskDialog Class](../../mfc/reference/ctaskdialog-class.md)."},{"content":"Use <ph id=\"ph1\">`nMarqueeSpeed`</ph> to set the speed of the marquee bar; larger values indicate a slower speed.","pos":[48647,48742],"source":"Use `nMarqueeSpeed` to set the speed of the marquee bar; larger values indicate a slower speed."},{"content":"A value of 0 for <ph id=\"ph1\">`nMarqueeSpeed`</ph> makes the marquee bar move at the default speed for <ph id=\"ph2\">[!INCLUDE[wiprlhext](../../c-runtime-library/reference/includes/wiprlhext_md.md)]</ph>.","pos":[48743,48910],"source":" A value of 0 for `nMarqueeSpeed` makes the marquee bar move at the default speed for [!INCLUDE[wiprlhext](../../c-runtime-library/reference/includes/wiprlhext_md.md)]."},{"pos":[48917,49079],"content":"This method throws an exception with the <bpt id=\"p1\">[</bpt>ENSURE<ept id=\"p1\">](http://msdn.microsoft.com/library/738c4ccf-c29c-4c04-8d6c-f126bedf6e91)</ept> macro if <ph id=\"ph1\">`nMarqueeSpeed`</ph> is less than 0.","source":"This method throws an exception with the [ENSURE](http://msdn.microsoft.com/library/738c4ccf-c29c-4c04-8d6c-f126bedf6e91) macro if `nMarqueeSpeed` is less than 0."},{"pos":[49089,49096],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[49100,49195],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_MFC_CTaskDialog#4<ept id=\"p2\">](../../mfc/reference/codesnippet/cpp/ctaskdialog-class_7.cpp)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_MFC_CTaskDialog#4](../../mfc/reference/codesnippet/cpp/ctaskdialog-class_7.cpp)]"},{"pos":[49205,49292],"content":"<bpt id=\"p1\">&lt;a name=\"ctaskdialog__setprogressbarposition\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CTaskDialog::SetProgressBarPosition","linkify":"<a name=\"ctaskdialog__setprogressbarposition\"></a>  CTaskDialog::SetProgressBarPosition","source":"<a name=\"ctaskdialog__setprogressbarposition\"></a>  CTaskDialog::SetProgressBarPosition"},{"content":"Adjusts the position of the progress bar.","pos":[49296,49337]},{"pos":[49409,49419],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`nProgressPos`</ph>","pos":[49423,49442],"source":"[in] `nProgressPos`"},{"content":"The position for the progress bar.","pos":[49446,49480]},{"pos":[49490,49497],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This method throws an exception with the <bpt id=\"p1\">[</bpt>ENSURE<ept id=\"p1\">](http://msdn.microsoft.com/library/738c4ccf-c29c-4c04-8d6c-f126bedf6e91)</ept> macro if <ph id=\"ph1\">`nProgressPos`</ph> is not in the progress bar range.","pos":[49501,49680],"source":"This method throws an exception with the [ENSURE](http://msdn.microsoft.com/library/738c4ccf-c29c-4c04-8d6c-f126bedf6e91) macro if `nProgressPos` is not in the progress bar range."},{"content":"You can change the progress bar range with <bpt id=\"p1\">[</bpt>CTaskDialog::SetProgressBarRange<ept id=\"p1\">](#ctaskdialog__setprogressbarrange)</ept>.","pos":[49681,49794],"source":" You can change the progress bar range with [CTaskDialog::SetProgressBarRange](#ctaskdialog__setprogressbarrange)."},{"pos":[49804,49811],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[49815,49910],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_MFC_CTaskDialog#4<ept id=\"p2\">](../../mfc/reference/codesnippet/cpp/ctaskdialog-class_7.cpp)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_MFC_CTaskDialog#4](../../mfc/reference/codesnippet/cpp/ctaskdialog-class_7.cpp)]"},{"pos":[49920,50001],"content":"<bpt id=\"p1\">&lt;a name=\"ctaskdialog__setprogressbarrange\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CTaskDialog::SetProgressBarRange","linkify":"<a name=\"ctaskdialog__setprogressbarrange\"></a>  CTaskDialog::SetProgressBarRange","source":"<a name=\"ctaskdialog__setprogressbarrange\"></a>  CTaskDialog::SetProgressBarRange"},{"content":"Adjusts the range of the progress bar.","pos":[50005,50043]},{"pos":[50135,50145],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`nRangeMin`</ph>","pos":[50149,50165],"source":"[in] `nRangeMin`"},{"content":"The lower bound of the progress bar.","pos":[50169,50205]},{"content":"[in] <ph id=\"ph1\">`nRangeMax`</ph>","pos":[50212,50228],"source":"[in] `nRangeMax`"},{"content":"The upper bound of the progress bar.","pos":[50232,50268]},{"pos":[50278,50285],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The position of the progress bar is relative to <ph id=\"ph1\">`nRangeMin`</ph> and <ph id=\"ph2\">`nRangeMax`</ph>.","pos":[50289,50365],"source":"The position of the progress bar is relative to `nRangeMin` and `nRangeMax`."},{"content":"For example, if <ph id=\"ph1\">`nRangeMin`</ph> is 50 and <ph id=\"ph2\">`nRangeMax`</ph> is 100, a position of 75 is halfway across the progress bar.","pos":[50366,50476],"source":" For example, if `nRangeMin` is 50 and `nRangeMax` is 100, a position of 75 is halfway across the progress bar."},{"content":"Use <bpt id=\"p1\">[</bpt>CTaskDialog::SetProgressBarPosition<ept id=\"p1\">](#ctaskdialog__setprogressbarposition)</ept> to set the position of the progress bar.","pos":[50477,50597],"source":" Use [CTaskDialog::SetProgressBarPosition](#ctaskdialog__setprogressbarposition) to set the position of the progress bar."},{"content":"To display the progress bar, the option <ph id=\"ph1\">`TDF_SHOW_PROGRESS_BAR`</ph> must be enabled and <ph id=\"ph2\">`TDF_SHOW_MARQUEE_PROGRESS_BAR`</ph> must not be enabled.","pos":[50604,50740],"source":"To display the progress bar, the option `TDF_SHOW_PROGRESS_BAR` must be enabled and `TDF_SHOW_MARQUEE_PROGRESS_BAR` must not be enabled."},{"content":"This method automatically sets <ph id=\"ph1\">`TDF_SHOW_PROGRESS_BAR`</ph> and clears <ph id=\"ph2\">`TDF_SHOW_MARQUEE_PROGRESS_BAR`</ph>.","pos":[50741,50839],"source":" This method automatically sets `TDF_SHOW_PROGRESS_BAR` and clears `TDF_SHOW_MARQUEE_PROGRESS_BAR`."},{"content":"Use <bpt id=\"p1\">[</bpt>CTaskDialog::SetOptions<ept id=\"p1\">](#ctaskdialog__setoptions)</ept> to manually change the options for this instance of the <bpt id=\"p2\">[</bpt>CTaskDialog Class<ept id=\"p2\">](../../mfc/reference/ctaskdialog-class.md)</ept>.","pos":[50840,51014],"source":" Use [CTaskDialog::SetOptions](#ctaskdialog__setoptions) to manually change the options for this instance of the [CTaskDialog Class](../../mfc/reference/ctaskdialog-class.md)."},{"content":"This method throws an exception with the <bpt id=\"p1\">[</bpt>ENSURE<ept id=\"p1\">](http://msdn.microsoft.com/library/738c4ccf-c29c-4c04-8d6c-f126bedf6e91)</ept> macro if <ph id=\"ph1\">`nRangeMin`</ph> is not less than <ph id=\"ph2\">`nRangeMax`</ph>.","pos":[51021,51193],"source":"This method throws an exception with the [ENSURE](http://msdn.microsoft.com/library/738c4ccf-c29c-4c04-8d6c-f126bedf6e91) macro if `nRangeMin` is not less than `nRangeMax`."},{"content":"This method also throws an exception if the <ph id=\"ph1\">`CTaskDialog`</ph> is already displayed and has a marquee progress bar.","pos":[51194,51304],"source":" This method also throws an exception if the `CTaskDialog` is already displayed and has a marquee progress bar."},{"pos":[51314,51321],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[51325,51420],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_MFC_CTaskDialog#4<ept id=\"p2\">](../../mfc/reference/codesnippet/cpp/ctaskdialog-class_7.cpp)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_MFC_CTaskDialog#4](../../mfc/reference/codesnippet/cpp/ctaskdialog-class_7.cpp)]"},{"pos":[51430,51511],"content":"<bpt id=\"p1\">&lt;a name=\"ctaskdialog__setprogressbarstate\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CTaskDialog::SetProgressBarState","linkify":"<a name=\"ctaskdialog__setprogressbarstate\"></a>  CTaskDialog::SetProgressBarState","source":"<a name=\"ctaskdialog__setprogressbarstate\"></a>  CTaskDialog::SetProgressBarState"},{"pos":[51515,51587],"content":"Sets the state of the progress bar and displays it on the <ph id=\"ph1\">`CTaskDialog`</ph>.","source":"Sets the state of the progress bar and displays it on the `CTaskDialog`."},{"pos":[51664,51674],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`nState`</ph>","pos":[51678,51691],"source":"[in] `nState`"},{"content":"The state of the progress bar.","pos":[51695,51725]},{"content":"See the Remarks section for the possible values.","pos":[51726,51774]},{"pos":[51784,51791],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[51795,51996],"content":"This method throws an exception with the <bpt id=\"p1\">[</bpt>ENSURE<ept id=\"p1\">](http://msdn.microsoft.com/library/738c4ccf-c29c-4c04-8d6c-f126bedf6e91)</ept> macro if the <ph id=\"ph1\">`CTaskDialog`</ph> is already displayed and has a marquee progress bar.","source":"This method throws an exception with the [ENSURE](http://msdn.microsoft.com/library/738c4ccf-c29c-4c04-8d6c-f126bedf6e91) macro if the `CTaskDialog` is already displayed and has a marquee progress bar."},{"content":"The following table lists the possible values for <ph id=\"ph1\">`nState`</ph>.","pos":[52003,52062],"source":"The following table lists the possible values for `nState`."},{"content":"In all these cases, the progress bar will fill with the regular color until it reaches the designated stop position.","pos":[52063,52179]},{"content":"At that point it will change color based on the state.","pos":[52180,52234]},{"content":"PBST_NORMAL","pos":[52241,52252]},{"content":"After the progress bar fills, the <ph id=\"ph1\">`CTaskDialog`</ph> does not change the color of the bar.","pos":[52256,52341],"source":" After the progress bar fills, the `CTaskDialog` does not change the color of the bar."},{"content":"By default, the regular color is green.","pos":[52342,52381]},{"content":"PBST_ERROR","pos":[52388,52398]},{"content":"After the progress bar fills, the <ph id=\"ph1\">`CTaskDialog`</ph> changes the color of the bar to the error color.","pos":[52402,52498],"source":" After the progress bar fills, the `CTaskDialog` changes the color of the bar to the error color."},{"content":"By default, this is red.","pos":[52499,52523]},{"content":"PBST_PAUSED","pos":[52530,52541]},{"content":"After the progress bar fills, the <ph id=\"ph1\">`CTaskDialog`</ph> changes the color of the bar to the paused color.","pos":[52545,52642],"source":" After the progress bar fills, the `CTaskDialog` changes the color of the bar to the paused color."},{"content":"By default, this is yellow.","pos":[52643,52670]},{"pos":[52677,52799],"content":"You can set where the progress bar stops with <bpt id=\"p1\">[</bpt>CTaskDialog::SetProgressBarPosition<ept id=\"p1\">](#ctaskdialog__setprogressbarposition)</ept>.","source":"You can set where the progress bar stops with [CTaskDialog::SetProgressBarPosition](#ctaskdialog__setprogressbarposition)."},{"pos":[52809,52816],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[52820,52915],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_MFC_CTaskDialog#4<ept id=\"p2\">](../../mfc/reference/codesnippet/cpp/ctaskdialog-class_7.cpp)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_MFC_CTaskDialog#4](../../mfc/reference/codesnippet/cpp/ctaskdialog-class_7.cpp)]"},{"pos":[52925,53010],"content":"<bpt id=\"p1\">&lt;a name=\"ctaskdialog__setradiobuttonoptions\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CTaskDialog::SetRadioButtonOptions","linkify":"<a name=\"ctaskdialog__setradiobuttonoptions\"></a>  CTaskDialog::SetRadioButtonOptions","source":"<a name=\"ctaskdialog__setradiobuttonoptions\"></a>  CTaskDialog::SetRadioButtonOptions"},{"content":"Enables or disables a radio button.","pos":[53014,53049]},{"pos":[53148,53158],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`nRadioButtonID`</ph>","pos":[53162,53183],"source":"[in] `nRadioButtonID`"},{"content":"The ID of the radio button control.","pos":[53187,53222]},{"content":"[in] <ph id=\"ph1\">`bEnabled`</ph>","pos":[53229,53244],"source":"[in] `bEnabled`"},{"content":"<ph id=\"ph1\"> `TRUE`</ph> to enable the radio button; <ph id=\"ph2\">`FALSE`</ph> to disable the radio button.","pos":[53247,53319],"source":" `TRUE` to enable the radio button; `FALSE` to disable the radio button."},{"pos":[53329,53336],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[53340,53525],"content":"This method throws an exception with the <bpt id=\"p1\">[</bpt>ENSURE<ept id=\"p1\">](http://msdn.microsoft.com/library/738c4ccf-c29c-4c04-8d6c-f126bedf6e91)</ept> macro if <ph id=\"ph1\">`nRadioButtonID`</ph> is not a valid ID for a radio button.","source":"This method throws an exception with the [ENSURE](http://msdn.microsoft.com/library/738c4ccf-c29c-4c04-8d6c-f126bedf6e91) macro if `nRadioButtonID` is not a valid ID for a radio button."},{"pos":[53535,53542],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[53546,53641],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_MFC_CTaskDialog#3<ept id=\"p2\">](../../mfc/reference/codesnippet/cpp/ctaskdialog-class_2.cpp)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_MFC_CTaskDialog#3](../../mfc/reference/codesnippet/cpp/ctaskdialog-class_2.cpp)]"},{"pos":[53651,53740],"content":"<bpt id=\"p1\">&lt;a name=\"ctaskdialog__setverificationcheckbox\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CTaskDialog::SetVerificationCheckbox","linkify":"<a name=\"ctaskdialog__setverificationcheckbox\"></a>  CTaskDialog::SetVerificationCheckbox","source":"<a name=\"ctaskdialog__setverificationcheckbox\"></a>  CTaskDialog::SetVerificationCheckbox"},{"content":"Sets the checked state of the verification check box.","pos":[53744,53797]},{"pos":[53867,53877],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`bChecked`</ph>","pos":[53881,53896],"source":"[in] `bChecked`"},{"content":"<ph id=\"ph1\"> `TRUE`</ph> to have the verification check box selected when the <ph id=\"ph2\">`CTaskDialog`</ph> is displayed; <ph id=\"ph3\">`FALSE`</ph> to have the verification check box unselected when the <ph id=\"ph4\">`CTaskDialog`</ph> is displayed.","pos":[53899,54078],"source":" `TRUE` to have the verification check box selected when the `CTaskDialog` is displayed; `FALSE` to have the verification check box unselected when the `CTaskDialog` is displayed."},{"pos":[54088,54095],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[54099,54194],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_MFC_CTaskDialog#5<ept id=\"p2\">](../../mfc/reference/codesnippet/cpp/ctaskdialog-class_4.cpp)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_MFC_CTaskDialog#5](../../mfc/reference/codesnippet/cpp/ctaskdialog-class_4.cpp)]"},{"pos":[54204,54301],"content":"<bpt id=\"p1\">&lt;a name=\"ctaskdialog__setverificationcheckboxtext\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CTaskDialog::SetVerificationCheckboxText","linkify":"<a name=\"ctaskdialog__setverificationcheckboxtext\"></a>  CTaskDialog::SetVerificationCheckboxText","source":"<a name=\"ctaskdialog__setverificationcheckboxtext\"></a>  CTaskDialog::SetVerificationCheckboxText"},{"content":"Sets the text that is displayed to the right of the verification check box.","pos":[54305,54380]},{"pos":[54469,54479],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`strVerificationText`</ph>","pos":[54483,54509],"source":"[in] `strVerificationText`"},{"content":"The text that this method displays next to the verification check box.","pos":[54513,54583]},{"pos":[54593,54600],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[54604,54839],"content":"This method throws an exception with the <bpt id=\"p1\">[</bpt>ENSURE<ept id=\"p1\">](http://msdn.microsoft.com/library/738c4ccf-c29c-4c04-8d6c-f126bedf6e91)</ept> macro if this instance of the <bpt id=\"p2\">[</bpt>CTaskDialog Class<ept id=\"p2\">](../../mfc/reference/ctaskdialog-class.md)</ept> is already displayed.","source":"This method throws an exception with the [ENSURE](http://msdn.microsoft.com/library/738c4ccf-c29c-4c04-8d6c-f126bedf6e91) macro if this instance of the [CTaskDialog Class](../../mfc/reference/ctaskdialog-class.md) is already displayed."},{"pos":[54849,54856],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[54860,54955],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_MFC_CTaskDialog#5<ept id=\"p2\">](../../mfc/reference/codesnippet/cpp/ctaskdialog-class_4.cpp)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_MFC_CTaskDialog#5](../../mfc/reference/codesnippet/cpp/ctaskdialog-class_4.cpp)]"},{"pos":[54965,55036],"content":"<bpt id=\"p1\">&lt;a name=\"ctaskdialog__setwindowtitle\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CTaskDialog::SetWindowTitle","linkify":"<a name=\"ctaskdialog__setwindowtitle\"></a>  CTaskDialog::SetWindowTitle","source":"<a name=\"ctaskdialog__setwindowtitle\"></a>  CTaskDialog::SetWindowTitle"},{"pos":[55040,55076],"content":"Sets the title of the <ph id=\"ph1\">`CTaskDialog`</ph>.","source":"Sets the title of the `CTaskDialog`."},{"pos":[55147,55157],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`strWindowTitle`</ph>","pos":[55161,55182],"source":"[in] `strWindowTitle`"},{"content":"The new title for the <ph id=\"ph1\">`CTaskDialog`</ph>.","pos":[55186,55222],"source":" The new title for the `CTaskDialog`."},{"pos":[55232,55239],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[55249,55256],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[55260,55355],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_MFC_CTaskDialog#7<ept id=\"p2\">](../../mfc/reference/codesnippet/cpp/ctaskdialog-class_3.cpp)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_MFC_CTaskDialog#7](../../mfc/reference/codesnippet/cpp/ctaskdialog-class_3.cpp)]"},{"pos":[55365,55428],"content":"<bpt id=\"p1\">&lt;a name=\"ctaskdialog__showdialog\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CTaskDialog::ShowDialog","linkify":"<a name=\"ctaskdialog__showdialog\"></a>  CTaskDialog::ShowDialog","source":"<a name=\"ctaskdialog__showdialog\"></a>  CTaskDialog::ShowDialog"},{"pos":[55432,55469],"content":"Creates and displays a <ph id=\"ph1\">`CTaskDialog`</ph>.","source":"Creates and displays a `CTaskDialog`."},{"pos":[55876,55886],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`strContent`</ph>","pos":[55890,55907],"source":"[in] `strContent`"},{"content":"The string to use for the content of the <ph id=\"ph1\">`CTaskDialog`</ph>.","pos":[55911,55966],"source":" The string to use for the content of the `CTaskDialog`."},{"content":"[in] <ph id=\"ph1\">`strMainInstruction`</ph>","pos":[55973,55998],"source":"[in] `strMainInstruction`"},{"content":"The main instruction of the <ph id=\"ph1\">`CTaskDialog`</ph>.","pos":[56002,56044],"source":" The main instruction of the `CTaskDialog`."},{"content":"[in] <ph id=\"ph1\">`strTitle`</ph>","pos":[56051,56066],"source":"[in] `strTitle`"},{"content":"The title of the <ph id=\"ph1\">`CTaskDialog`</ph>.","pos":[56070,56101],"source":" The title of the `CTaskDialog`."},{"content":"[in] <ph id=\"ph1\">`nIDCommandControlsFirst`</ph>","pos":[56108,56138],"source":"[in] `nIDCommandControlsFirst`"},{"content":"The string ID of the first command.","pos":[56142,56177]},{"content":"[in] <ph id=\"ph1\">`nIDCommandControlsLast`</ph>","pos":[56184,56213],"source":"[in] `nIDCommandControlsLast`"},{"content":"The string ID of the last command.","pos":[56217,56251]},{"content":"[in] <ph id=\"ph1\">`nCommonButtons`</ph>","pos":[56258,56279],"source":"[in] `nCommonButtons`"},{"content":"A mask of the buttons to add to the <ph id=\"ph1\">`CTaskDialog`</ph>.","pos":[56283,56333],"source":" A mask of the buttons to add to the `CTaskDialog`."},{"content":"[in] <ph id=\"ph1\">`nTaskDialogOptions`</ph>","pos":[56340,56365],"source":"[in] `nTaskDialogOptions`"},{"content":"The set of options to use for the <ph id=\"ph1\">`CTaskDialog`</ph>.","pos":[56369,56417],"source":" The set of options to use for the `CTaskDialog`."},{"content":"[in] <ph id=\"ph1\">`strFooter`</ph>","pos":[56424,56440],"source":"[in] `strFooter`"},{"content":"The string to use as the footer.","pos":[56444,56476]},{"pos":[56486,56498],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"An integer that corresponds to the selection made by the user.","pos":[56502,56564]},{"pos":[56574,56581],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This static method enables you to create an instance of the <bpt id=\"p1\">[</bpt>CTaskDialog Class<ept id=\"p1\">](../../mfc/reference/ctaskdialog-class.md)</ept> without explicitly creating a <ph id=\"ph1\">`CTaskDialog`</ph> object in your code.","pos":[56585,56771],"source":"This static method enables you to create an instance of the [CTaskDialog Class](../../mfc/reference/ctaskdialog-class.md) without explicitly creating a `CTaskDialog` object in your code."},{"content":"Because there is no <ph id=\"ph1\">`CTaskDialog`</ph> object, you cannot call any other methods of the <ph id=\"ph2\">`CTaskDialog`</ph> if you use this method to show a <ph id=\"ph3\">`CTaskDialog`</ph> to the user.","pos":[56772,56928],"source":" Because there is no `CTaskDialog` object, you cannot call any other methods of the `CTaskDialog` if you use this method to show a `CTaskDialog` to the user."},{"content":"This method creates command button controls by using data from the resource file of your application.","pos":[56935,57036]},{"content":"The string table in the resource file has several strings with associated string IDs.","pos":[57037,57122]},{"content":"This method adds a command button control for each valid entry in the string table between <ph id=\"ph1\">`nIDCommandControlsFirst`</ph> and <ph id=\"ph2\">`nCommandControlsLast`</ph>, inclusive.","pos":[57123,57278],"source":" This method adds a command button control for each valid entry in the string table between `nIDCommandControlsFirst` and `nCommandControlsLast`, inclusive."},{"content":"For these command button controls, the string in the string table is the control's caption and the string ID is the control's ID.","pos":[57279,57408]},{"pos":[57415,57499],"content":"See <bpt id=\"p1\">[</bpt>CTaskDialog::SetOptions<ept id=\"p1\">](#ctaskdialog__setoptions)</ept> for a list of valid options.","source":"See [CTaskDialog::SetOptions](#ctaskdialog__setoptions) for a list of valid options."},{"content":"The <ph id=\"ph1\">`CTaskDialog`</ph> closes when the user selects a common button, a command link control, or closes the <ph id=\"ph2\">`CTaskDialog`</ph>.","pos":[57506,57622],"source":"The `CTaskDialog` closes when the user selects a common button, a command link control, or closes the `CTaskDialog`."},{"content":"The return value is the identifier that indicates how the user closed the dialog box.","pos":[57623,57708]},{"pos":[57718,57725],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[57729,57824],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_MFC_CTaskDialog#1<ept id=\"p2\">](../../mfc/reference/codesnippet/cpp/ctaskdialog-class_5.cpp)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_MFC_CTaskDialog#1](../../mfc/reference/codesnippet/cpp/ctaskdialog-class_5.cpp)]"},{"pos":[57834,57913],"content":"<bpt id=\"p1\">&lt;a name=\"ctaskdialog__taskdialogcallback\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CTaskDialog::TaskDialogCallback","linkify":"<a name=\"ctaskdialog__taskdialogcallback\"></a>  CTaskDialog::TaskDialogCallback","source":"<a name=\"ctaskdialog__taskdialogcallback\"></a>  CTaskDialog::TaskDialogCallback"},{"content":"The framework calls this method in response to various Windows messages.","pos":[57917,57989]},{"pos":[58162,58172],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`hwnd`</ph>","pos":[58176,58187],"source":"[in] `hwnd`"},{"content":"A handle to the <ph id=\"ph1\">`m_hWnd`</ph> structure for the <ph id=\"ph2\">`CTaskDialog`</ph>.","pos":[58191,58248],"source":" A handle to the `m_hWnd` structure for the `CTaskDialog`."},{"content":"[in] <ph id=\"ph1\">`uNotification`</ph>","pos":[58255,58275],"source":"[in] `uNotification`"},{"content":"The notification code that specifies the generated message.","pos":[58279,58338]},{"content":"[in] <ph id=\"ph1\">`wParam`</ph>","pos":[58345,58358],"source":"[in] `wParam`"},{"content":"More information about the message.","pos":[58362,58397]},{"content":"[in] <ph id=\"ph1\">`lParam`</ph>","pos":[58404,58417],"source":"[in] `lParam`"},{"content":"More information about the message.","pos":[58421,58456]},{"content":"[in] <ph id=\"ph1\">`dwRefData`</ph>","pos":[58463,58479],"source":"[in] `dwRefData`"},{"content":"A pointer to the <ph id=\"ph1\">`CTaskDialog`</ph> object that the callback message applies to.","pos":[58483,58558],"source":" A pointer to the `CTaskDialog` object that the callback message applies to."},{"pos":[58568,58580],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Depends on the specific notification code.","pos":[58584,58626]},{"content":"See the Remarks section for more information.","pos":[58627,58672]},{"pos":[58682,58689],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The default implementation of <ph id=\"ph1\">`TaskDialogCallback`</ph> handles the specific message and then calls the appropriate On method of the <bpt id=\"p1\">[</bpt>CTaskDialog Class<ept id=\"p1\">](../../mfc/reference/ctaskdialog-class.md)</ept>.","pos":[58693,58883],"source":"The default implementation of `TaskDialogCallback` handles the specific message and then calls the appropriate On method of the [CTaskDialog Class](../../mfc/reference/ctaskdialog-class.md)."},{"content":"For example, in response to the <ph id=\"ph1\">`TDN_BUTTON_CLICKED`</ph> message, <ph id=\"ph2\">`TaskDialogCallback`</ph> calls <bpt id=\"p1\">[</bpt>CTaskDialog::OnCommandControlClick<ept id=\"p1\">](#ctaskdialog__oncommandcontrolclick)</ept>.","pos":[58884,59047],"source":" For example, in response to the `TDN_BUTTON_CLICKED` message, `TaskDialogCallback` calls [CTaskDialog::OnCommandControlClick](#ctaskdialog__oncommandcontrolclick)."},{"content":"The values for <ph id=\"ph1\">`wParam`</ph> and <ph id=\"ph2\">`lParam`</ph> depend on the specific generated message.","pos":[59054,59132],"source":"The values for `wParam` and `lParam` depend on the specific generated message."},{"content":"It is possible for either or both of these values to be empty.","pos":[59133,59195]},{"content":"The following table lists the default notifications that are supported and what the values of <ph id=\"ph1\">`wParam`</ph> and <ph id=\"ph2\">`lParam`</ph> represent.","pos":[59196,59322],"source":" The following table lists the default notifications that are supported and what the values of `wParam` and `lParam` represent."},{"content":"If you override this method in a derived class, you should implement the callback code for each message in the following table.","pos":[59323,59450]},{"content":"Notification Message","pos":[59457,59477]},{"pos":[59478,59492],"content":"<ph id=\"ph1\">`wParam`</ph> Value","source":"`wParam` Value"},{"pos":[59493,59507],"content":"<ph id=\"ph1\">`lParam`</ph> Value","source":"`lParam` Value"},{"content":"Not used.","pos":[59599,59608]},{"content":"Not used.","pos":[59609,59618]},{"content":"Not used.","pos":[59639,59648]},{"content":"Not used.","pos":[59649,59658]},{"content":"The command button control ID.","pos":[59684,59714]},{"content":"Not used.","pos":[59715,59724]},{"content":"Not used.","pos":[59753,59762]},{"pos":[59763,59868],"content":"A <bpt id=\"p1\">[</bpt>LPCWSTR<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/aa383751)</ept> structure that contains the link.","source":"A [LPCWSTR](http://msdn.microsoft.com/library/windows/desktop/aa383751) structure that contains the link."},{"pos":[59885,59965],"content":"Time in milliseconds since the <ph id=\"ph1\">`CTaskDialog`</ph> was created or the timer was reset.","source":"Time in milliseconds since the `CTaskDialog` was created or the timer was reset."},{"content":"Not used.","pos":[59966,59975]},{"content":"Not used.","pos":[59996,60005]},{"content":"Not used.","pos":[60006,60015]},{"content":"The radio button ID.","pos":[60047,60067]},{"content":"Not used.","pos":[60068,60077]},{"content":"Not used.","pos":[60107,60116]},{"content":"Not used.","pos":[60117,60126]},{"content":"1 if the check box is checked, 0 if it is not.","pos":[60158,60204]},{"content":"Not used.","pos":[60205,60214]},{"content":"Not used.","pos":[60230,60239]},{"content":"Not used.","pos":[60240,60249]},{"content":"0 if the expansion area is collapsed; nonzero if the expansion text is displayed.","pos":[60283,60364]},{"content":"Not used.","pos":[60365,60374]},{"pos":[60384,60392],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Classes<ept id=\"p1\">](../../mfc/reference/mfc-classes.md)</ept><ph id=\"ph1\"> </ph>","pos":[60396,60442],"source":"[Classes](../../mfc/reference/mfc-classes.md) "},{"content":"<bpt id=\"p1\"> [</bpt>CObject Class<ept id=\"p1\">](../../mfc/reference/cobject-class.md)</ept><ph id=\"ph1\"> </ph>","pos":[60445,60500],"source":" [CObject Class](../../mfc/reference/cobject-class.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Hierarchy Chart<ept id=\"p1\">](../../mfc/hierarchy-chart.md)</ept><ph id=\"ph1\"> </ph>","pos":[60503,60552],"source":" [Hierarchy Chart](../../mfc/hierarchy-chart.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Walkthrough: Adding a CTaskDialog to an Application<ept id=\"p1\">](../../mfc/walkthrough-adding-a-ctaskdialog-to-an-application.md)</ept>","pos":[60555,60674],"source":" [Walkthrough: Adding a CTaskDialog to an Application](../../mfc/walkthrough-adding-a-ctaskdialog-to-an-application.md)"}],"content":"---\ntitle: \"CTaskDialog Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"CTaskDialog\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"CTaskDialog class\"\nms.assetid: 1991ec98-ae56-4483-958b-233809c8c559\ncaps.latest.revision: 29\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# CTaskDialog Class\nA pop-up dialog box that functions like a message box but can display additional information to the user. The `CTaskDialog` also includes functionality for gathering information from the user.  \n  \n## Syntax  \n  \n```  \nclass CTaskDialog : public CObject  \n```  \n  \n## Members  \n  \n### Constructors  \n  \n|||  \n|-|-|  \n|[CTaskDialog::CTaskDialog](#ctaskdialog__ctaskdialog)|Constructs a `CTaskDialog` object.|  \n  \n### Methods  \n  \n|||  \n|-|-|  \n|[CTaskDialog::AddCommandControl](#ctaskdialog__addcommandcontrol)|Adds a command button control to the `CTaskDialog`.|  \n|[CTaskDialog::AddRadioButton](#ctaskdialog__addradiobutton)|Adds a radio button to the `CTaskDialog`.|  \n|[CTaskDialog::ClickCommandControl](#ctaskdialog__clickcommandcontrol)|Clicks a command button control or common button programmatically.|  \n|[CTaskDialog::ClickRadioButton](#ctaskdialog__clickradiobutton)|Clicks a radio button programmatically.|  \n|[CTaskDialog::DoModal](#ctaskdialog__domodal)|Displays the `CTaskDialog`.|  \n|[CTaskDialog::GetCommonButtonCount](#ctaskdialog__getcommonbuttoncount)|Retrieves the number of common buttons available.|  \n|[CTaskDialog::GetCommonButtonFlag](#ctaskdialog__getcommonbuttonflag)|Converts a standard Windows button to the common button type associated with the `CTaskDialog` class.|  \n|[CTaskDialog::GetCommonButtonId](#ctaskdialog__getcommonbuttonid)|Converts one of the common button types associated with the `CTaskDialog` class to a standard Windows button.|  \n|[CTaskDialog::GetOptions](#ctaskdialog__getoptions)|Returns the option flags for this `CTaskDialog`.|  \n|[CTaskDialog::GetSelectedCommandControlID](#ctaskdialog__getselectedcommandcontrolid)|Returns the selected command button control.|  \n|[CTaskDialog::GetSelectedRadioButtonID](#ctaskdialog__getselectedradiobuttonid)|Returns the selected radio button.|  \n|[CTaskDialog::GetVerificationCheckboxState](#ctaskdialog__getverificationcheckboxstate)|Retrieves the state of the verification check box.|  \n|[CTaskDialog::IsCommandControlEnabled](#ctaskdialog__iscommandcontrolenabled)|Determines whether a command button control or common button is enabled.|  \n|[CTaskDialog::IsRadioButtonEnabled](#ctaskdialog__isradiobuttonenabled)|Determines whether a radio button is enabled.|  \n|[CTaskDialog::IsSupported](#ctaskdialog__issupported)|Determines whether the computer that is running the application supports the `CTaskDialog`.|  \n|[CTaskDialog::LoadCommandControls](#ctaskdialog__loadcommandcontrols)|Adds command button controls by using data from the string table.|  \n|[CTaskDialog::LoadRadioButtons](#ctaskdialog__loadradiobuttons)|Adds radio buttons by using data from the string table.|  \n|[CTaskDialog::NavigateTo](#ctaskdialog__navigateto)|Transfers the focus to another `CTaskDialog`.|  \n|[CTaskDialog::OnCommandControlClick](#ctaskdialog__oncommandcontrolclick)|The framework calls this method when the user clicks a command button control.|  \n|[CTaskDialog::OnCreate](#ctaskdialog__oncreate)|The framework calls this method after it creates the `CTaskDialog`.|  \n|[CTaskDialog::OnDestroy](#ctaskdialog__ondestroy)|The framework calls this method immediately before it destroys the `CTaskDialog`.|  \n|[CTaskDialog::OnExpandButtonClick](#ctaskdialog__onexpandbuttonclick)|The framework calls this method when the user clicks on the expansion button.|  \n|[CTaskDialog::OnHelp](#ctaskdialog__onhelp)|The framework calls this method when the user requests help.|  \n|[CTaskDialog::OnHyperlinkClick](#ctaskdialog__onhyperlinkclick)|The framework calls this method when the user clicks on a hyperlink.|  \n|[CTaskDialog::OnInit](#ctaskdialog__oninit)|The framework calls this method when the `CTaskDialog` is initialized.|  \n|[CTaskDialog::OnNavigatePage](#ctaskdialog__onnavigatepage)|The framework calls this method when the user moves the focus with regard to controls on the `CTaskDialog`.|  \n|[CTaskDialog::OnRadioButtonClick](#ctaskdialog__onradiobuttonclick)|The framework calls this method when the user selects a radio button control.|  \n|[CTaskDialog::OnTimer](#ctaskdialog__ontimer)|The framework calls this method when the timer expires.|  \n|[CTaskDialog::OnVerificationCheckboxClick](#ctaskdialog__onverificationcheckboxclick)|The framework calls this method when the user clicks the verification check box.|  \n|[CTaskDialog::RemoveAllCommandControls](#ctaskdialog__removeallcommandcontrols)|Removes all the command controls from the `CTaskDialog`.|  \n|[CTaskDialog::RemoveAllRadioButtons](#ctaskdialog__removeallradiobuttons)|Removes all the radio buttons from the `CTaskDialog`.|  \n|[CTaskDialog::SetCommandControlOptions](#ctaskdialog__setcommandcontroloptions)|Updates a command button control on the `CTaskDialog`.|  \n|[CTaskDialog::SetCommonButtonOptions](#ctaskdialog__setcommonbuttonoptions)|Updates a subset of common buttons to be enabled and require UAC elevation.|  \n|[CTaskDialog::SetCommonButtons](#ctaskdialog__setcommonbuttons)|Adds common buttons to the `CTaskDialog`.|  \n|[CTaskDialog::SetContent](#ctaskdialog__setcontent)|Updates the content of the `CTaskDialog`.|  \n|[CTaskDialog::SetDefaultCommandControl](#ctaskdialog__setdefaultcommandcontrol)|Specifies the default command button control.|  \n|[CTaskDialog::SetDefaultRadioButton](#ctaskdialog__setdefaultradiobutton)|Specifies the default radio button.|  \n|[CTaskDialog::SetDialogWidth](#ctaskdialog__setdialogwidth)|Adjusts the width of the `CTaskDialog`.|  \n|[CTaskDialog::SetExpansionArea](#ctaskdialog__setexpansionarea)|Updates the expansion area of the `CTaskDialog`.|  \n|[CTaskDialog::SetFooterIcon](#ctaskdialog__setfootericon)|Updates the footer icon for the `CTaskDialog`.|  \n|[CTaskDialog::SetFooterText](#ctaskdialog__setfootertext)|Updates the text on the footer of the `CTaskDialog`.|  \n|[CTaskDialog::SetMainIcon](#ctaskdialog__setmainicon)|Updates the main icon of the `CTaskDialog`.|  \n|[CTaskDialog::SetMainInstruction](#ctaskdialog__setmaininstruction)|Updates the main instruction of the `CTaskDialog`.|  \n|[CTaskDialog::SetOptions](#ctaskdialog__setoptions)|Configures the options for the `CTaskDialog`.|  \n|[CTaskDialog::SetProgressBarMarquee](#ctaskdialog__setprogressbarmarquee)|Configures a marquee bar for the `CTaskDialog` and adds it to the dialog box.|  \n|[CTaskDialog::SetProgressBarPosition](#ctaskdialog__setprogressbarposition)|Adjusts the position of the progress bar.|  \n|[CTaskDialog::SetProgressBarRange](#ctaskdialog__setprogressbarrange)|Adjusts the range of the progress bar.|  \n|[CTaskDialog::SetProgressBarState](#ctaskdialog__setprogressbarstate)|Sets the state of the progress bar and displays it on the `CTaskDialog`.|  \n|[CTaskDialog::SetRadioButtonOptions](#ctaskdialog__setradiobuttonoptions)|Enables or disables a radio button.|  \n|[CTaskDialog::SetVerificationCheckbox](#ctaskdialog__setverificationcheckbox)|Sets the checked state of the verification check box.|  \n|[CTaskDialog::SetVerificationCheckboxText](#ctaskdialog__setverificationcheckboxtext)|Sets the text on the right side of the verification check box.|  \n|[CTaskDialog::SetWindowTitle](#ctaskdialog__setwindowtitle)|Sets the title of the `CTaskDialog`.|  \n|[CTaskDialog::ShowDialog](#ctaskdialog__showdialog)|Creates and displays a `CTaskDialog`.|  \n|[CTaskDialog::TaskDialogCallback](#ctaskdialog__taskdialogcallback)|The framework calls this in response to various Windows messages.|  \n  \n### Data Members  \n  \n|||  \n|-|-|  \n|`m_aButtons`|The array of command button controls for the `CTaskDialog`.|  \n|`m_aRadioButtons`|The array of radio button controls for the `CTaskDialog`.|  \n|`m_bVerified`|`TRUE` indicates the verification check box is checked; `FALSE` indicates it is not.|  \n|`m_footerIcon`|The icon in the footer of the `CTaskDialog`.|  \n|`m_hWnd`|A handle to the window for the `CTaskDialog`.|  \n|`m_mainIcon`|The main icon of the `CTaskDialog`.|  \n|`m_nButtonDisabled`|A mask that indicates which of the common buttons are disabled.|  \n|`m_nButtonElevation`|A mask that indicates which of the common buttons require UAC elevation.|  \n|`m_nButtonId`|The ID of the selected command button control.|  \n|`m_nCommonButton`|A mask that indicates which common buttons are displayed on the `CTaskDialog`.|  \n|`m_nDefaultCommandControl`|The ID of the command button control that is selected when the `CTaskDialog` is displayed.|  \n|`m_nDefaultRadioButton`|The ID of the radio button control that is selected when the `CTaskDialog` is displayed.|  \n|`m_nFlags`|A mask that indicates the options for the `CTaskDialog`.|  \n|`m_nProgressPos`|The current position for the progress bar.  This value must be between `m_nProgressRangeMin` and `m_nProgressRangeMax`.|  \n|`m_nProgressRangeMax`|The maximum value for the progress bar.|  \n|`m_nProgressRangeMin`|The minimum value for the progress bar.|  \n|`m_nProgressState`|The state of the progress bar. For more information, see [CTaskDialog::SetProgressBarState](#ctaskdialog__setprogressbarstate).|  \n|`m_nRadioId`|The ID of the selected radio button control.|  \n|`m_nWidth`|The width of the `CTaskDialog` in pixels.|  \n|`m_strCollapse`|The string the `CTaskDialog` displays to the right of the expansion box when the expanded information is hidden.|  \n|`m_strContent`|The content string of the `CTaskDialog`.|  \n|`m_strExpand`|The string the `CTaskDialog` displays to the right of the expansion box when the expanded information is displayed.|  \n|`m_strFooter`|The footer of the `CTaskDialog`.|  \n|`m_strInformation`|The expanded information for the `CTaskDialog`.|  \n|`m_strMainInstruction`|The main instruction of the `CTaskDialog`.|  \n|`m_strTitle`|The title of the `CTaskDialog`.|  \n|`m_strVerification`|The string that the `CTaskDialog` displays to the right of the verification check box.|  \n  \n## Remarks  \n The `CTaskDialog` class replaces the standard Windows message box and has additional functionality such as new controls to gather information from the user. This class is in the MFC library in [!INCLUDE[vs_dev10_long](../../build/includes/vs_dev10_long_md.md)]. The `CTaskDialog` is available starting with [!INCLUDE[wiprlhext](../../c-runtime-library/reference/includes/wiprlhext_md.md)]. Earlier versions of Windows cannot display the `CTaskDialog` object. Use `CTaskDialog::IsSupported` to determine at runtime whether the current user can display the task dialog box. The standard Windows message box is still supported in [!INCLUDE[vs_dev10_long](../../build/includes/vs_dev10_long_md.md)].  \n  \n The `CTaskDialog` is available only when you build your application by using the Unicode library.  \n  \n The `CTaskDialog` has two different constructors. One constructor enables you to specify two command buttons and a maximum of six regular button controls. You can add more command buttons after you create the `CTaskDialog`. The second constructor does not support any command buttons, but you can add an unlimited number of regular button controls. For more information about the constructors, see [CTaskDialog::CTaskDialog](#ctaskdialog__ctaskdialog).  \n  \n The following image shows a sample `CTaskDialog` to illustrate the location of some of the controls.  \n  \n ![Example of CTaskDialog](../../mfc/reference/media/ctaskdialogsample.png \"ctaskdialogsample\")  \nCTaskDialog Sample  \n  \n## Requirements  \n **Minimum required operating system:** [!INCLUDE[wiprlhext](../../c-runtime-library/reference/includes/wiprlhext_md.md)]  \n  \n **Header:** afxtaskdialog.h  \n  \n##  <a name=\"ctaskdialog__addcommandcontrol\"></a>  CTaskDialog::AddCommandControl  \n Adds a new command button control to the `CTaskDialog`.  \n  \n```  \nvoid AddCommandControl(\n    int nCommandControlID,  \n    const CString& strCaption,  \n    BOOL bEnabled = TRUE,  \n    BOOL bRequiresElevation = FALSE);\n```  \n  \n### Parameters  \n [in] `nCommandControlID`  \n The command control identification number.  \n  \n [in] `strCaption`  \n The string that the `CTaskDialog` displays to the user. Use this string to explain the purpose of the command.  \n  \n [in] `bEnabled`  \n A Boolean parameter that indicates if the new button is enabled or disabled.  \n  \n [in] `bRequiresElevation`  \n A Boolean parameter that indicates whether a command requires elevation.  \n  \n### Remarks  \n The [CTaskDialog Class](../../mfc/reference/ctaskdialog-class.md) can display an unlimited number of command button controls. However, if a `CTaskDialog` displays any command button controls, it can display a maximum of six buttons. If a `CTaskDialog` has no command button controls, it can display an unlimited number of buttons.  \n  \n When the user selects a command button control, the `CTaskDialog` closes. If your application displays the dialog box by using [CTaskDialog::DoModal](#ctaskdialog__domodal), `DoModal` returns the `nCommandControlID` of the selected command button control.  \n  \n### Example  \n [!code-cpp[NVC_MFC_CTaskDialog#2](../../mfc/reference/codesnippet/cpp/ctaskdialog-class_1.cpp)]  \n  \n##  <a name=\"ctaskdialog__addradiobutton\"></a>  CTaskDialog::AddRadioButton  \n Adds a radio button to the `CTaskDialog`.  \n  \n```  \nvoid CTaskDialog::AddRadioButton(\n    int nRadioButtonID,  \n    const CString& strCaption,  \n    BOOL bEnabled = TRUE);\n```  \n  \n### Parameters  \n [in] `nRadioButtonID`  \n The identification number of the radio button.  \n  \n [in] `strCaption`  \n The string that the `CTaskDialog` displays next to the radio button.  \n  \n [in] `bEnabled`  \n A Boolean parameter that indicates whether the radio button is enabled.  \n  \n### Remarks  \n The radio buttons for the [CTaskDialog Class](../../mfc/reference/ctaskdialog-class.md) enable you to gather information from the user. Use the function [CTaskDialog::GetSelectedRadioButtonID](#ctaskdialog__getselectedradiobuttonid) to determine which radio button is selected.  \n  \n The `CTaskDialog` does not require that the `nRadioButtonID` parameters are unique for each radio button. However, you may experience unexpected behavior if you do not use a distinct identifier for each radio button.  \n  \n### Example  \n [!code-cpp[NVC_MFC_CTaskDialog#3](../../mfc/reference/codesnippet/cpp/ctaskdialog-class_2.cpp)]  \n  \n##  <a name=\"ctaskdialog__clickcommandcontrol\"></a>  CTaskDialog::ClickCommandControl  \n Clicks a command button control or common button programmatically.  \n  \n```  \nprotected:  \nvoid ClickCommandControl(int nCommandControlID) const;\n\n \n```  \n  \n### Parameters  \n [in] `nCommandControlID`  \n The command ID of the control to click.  \n  \n### Remarks  \n This method generates the windows message `TDM_CLICK_BUTTON`.  \n  \n##  <a name=\"ctaskdialog__clickradiobutton\"></a>  CTaskDialog::ClickRadioButton  \n Clicks a radio button programmatically.  \n  \n```  \nprotected:  \nvoid ClickRadioButton(int nRadioButtonID) const;\n\n \n```  \n  \n### Parameters  \n [in] `nRadioButtonID`  \n The ID of the radio button to click.  \n  \n### Remarks  \n This method generates the windows message `TDM_CLICK_RADIO_BUTTON`.  \n  \n##  <a name=\"ctaskdialog__ctaskdialog\"></a>  CTaskDialog::CTaskDialog  \n Creates an instance of the [CTaskDialog Class](../../mfc/reference/ctaskdialog-class.md).  \n  \n```  \nCTaskDialog(\n    const CString& strContent,  \n    const CString& strMainInstruction,  \n    const CString& strTitle,  \n    int nCommonButtons = TDCBF_OK_BUTTON | TDCBF_CANCEL_BUTTON,  \n    int nTaskDialogOptions = TDF_ENABLE_HYPERLINKS | TDF_USE_COMMAND_LINKS,  \n    const CString& strFooter = _T(\"\"));\n\n \nCTaskDialog(\n    const CString& strContent,  \n    const CString& strMainInstruction,  \n    const CString& strTitle,  \n    int nIDCommandControlsFirst,  \n    int nIDCommandControlsLast,  \n    int nCommonButtons,  \n    int nTaskDialogOptions = TDF_ENABLE_HYPERLINKS | TDF_USE_COMMAND_LINKS,  \n    const CString& strFooter = _T(\"\"));\n```  \n  \n### Parameters  \n [in] `strContent`  \n The string to use for the content of the `CTaskDialog`.  \n  \n [in] `strMainInstruction`  \n The main instruction of the `CTaskDialog`.  \n  \n [in] `strTitle`  \n The title of the `CTaskDialog`.  \n  \n [in] `nCommonButtons`  \n A mask of the common buttons to add to the `CTaskDialog`.  \n  \n [in] `nTaskDialogOptions`  \n The set of options to use for the `CTaskDialog`.  \n  \n [in] `strFooter`  \n The string to use as the footer.  \n  \n [in] `nIDCommandControlsFirst`  \n The string ID of the first command.  \n  \n [in] `nIDCommandControlsLast`  \n The string ID of the last command.  \n  \n### Remarks  \n There are two ways that you can add a `CTaskDialog` to your application. The first way is to use one of the constructors to create a `CTaskDialog` and display it using [CTaskDialog::DoModal](#ctaskdialog__domodal). The second way is to use the static function [CTaskDialog::ShowDialog](#ctaskdialog__showdialog), which enables you to display a `CTaskDialog` without explicitly creating a `CTaskDialog` object.  \n  \n The second constructor creates command button controls by using data from the resource file of your application. The string table in the resource file has several strings with associated string IDs. This method adds a command button control for each valid entry in the string table between `nIDCommandControlsFirst` and `nCommandControlsLast`, inclusive. For these command button controls, the string in the string table is the control's caption and the string ID is the control's ID.  \n  \n See [CTaskDialog::SetOptions](#ctaskdialog__setoptions) for a list of valid options.  \n  \n### Example  \n [!code-cpp[NVC_MFC_CTaskDialog#7](../../mfc/reference/codesnippet/cpp/ctaskdialog-class_3.cpp)]  \n  \n##  <a name=\"ctaskdialog__domodal\"></a>  CTaskDialog::DoModal  \n Shows the `CTaskDialog` and makes it modal.  \n  \n```  \nINT_PTR DoModal (HWND hParent = ::GetActiveWindow());\n```  \n  \n### Parameters  \n [in] `hParent`  \n The parent window for the `CTaskDialog`.  \n  \n### Return Value  \n An integer that corresponds to the selection made by the user.  \n  \n### Remarks  \n Displays this instance of the [CTaskDialog](../../mfc/reference/ctaskdialog-class.md). The application then waits for the user to close the dialog box.  \n  \n The `CTaskDialog` closes when the user selects a common button, a command link control, or closes the `CTaskDialog`. The return value is the identifier that indicates how the user closed the dialog box.  \n  \n### Example  \n [!code-cpp[NVC_MFC_CTaskDialog#7](../../mfc/reference/codesnippet/cpp/ctaskdialog-class_3.cpp)]  \n  \n##  <a name=\"ctaskdialog__getcommonbuttoncount\"></a>  CTaskDialog::GetCommonButtonCount  \n Retrieves the number of common buttons.  \n  \n```  \nint GetCommonButtonCount() const;\n\n \n```  \n  \n### Return Value  \n The number of common buttons available.  \n  \n### Remarks  \n The common buttons are the default buttons that you provide to [CTaskDialog::CTaskDialog](#ctaskdialog__ctaskdialog). The [CTaskDialog Class](../../mfc/reference/ctaskdialog-class.md) displays the buttons along the bottom of the dialog box.  \n  \n The enumerated list of buttons is provided in CommCtrl.h.  \n  \n##  <a name=\"ctaskdialog__getcommonbuttonflag\"></a>  CTaskDialog::GetCommonButtonFlag  \n Converts a standard Windows button to the common button type associated with the [CTaskDialog Class](../../mfc/reference/ctaskdialog-class.md).  \n  \n```  \nint GetCommonButtonFlag(int nButtonId) const;\n\n \n```  \n  \n### Parameters  \n [in] `nButtonId`  \n The standard Windows button value.  \n  \n### Return Value  \n The value of the corresponding `CTaskDialog` common button. If there is no corresponding common button, this method returns 0.  \n  \n##  <a name=\"ctaskdialog__getcommonbuttonid\"></a>  CTaskDialog::GetCommonButtonId  \n Converts one of the common button types associated with the [CTaskDialog Class](../../mfc/reference/ctaskdialog-class.md) to a standard Windows button.  \n  \n```  \nint GetCommonButtonId(int nFlag);\n```  \n  \n### Parameters  \n [in] `nFlag`  \n The common button type associated with the `CTaskDialog` class.  \n  \n### Return Value  \n The value of the corresponding standard Windows button. If there is no corresponding Windows button, the method returns 0.  \n  \n##  <a name=\"ctaskdialog__getoptions\"></a>  CTaskDialog::GetOptions  \n Returns the option flags for this `CTaskDialog`.  \n  \n```  \nint GetOptions() const;\n\n \n```  \n  \n### Return Value  \n The flags for the `CTaskDialog`.  \n  \n### Remarks  \n For more information about the options available to the [CTaskDialog Class](../../mfc/reference/ctaskdialog-class.md), see [CTaskDialog::SetOptions](#ctaskdialog__setoptions).  \n  \n### Example  \n [!code-cpp[NVC_MFC_CTaskDialog#7](../../mfc/reference/codesnippet/cpp/ctaskdialog-class_3.cpp)]  \n  \n##  <a name=\"ctaskdialog__getselectedcommandcontrolid\"></a>  CTaskDialog::GetSelectedCommandControlID  \n Returns the selected command button control.  \n  \n```  \nint GetSelectedCommandControlID() const;\n\n \n```  \n  \n### Return Value  \n The ID of the currently selected command button control.  \n  \n### Remarks  \n You do not have to use this method to retrieve the ID of the command button that the user selected. That ID is returned by either [CTaskDialog::DoModal](#ctaskdialog__domodal) or [CTaskDialog::ShowDialog](#ctaskdialog__showdialog).  \n  \n### Example  \n [!code-cpp[NVC_MFC_CTaskDialog#2](../../mfc/reference/codesnippet/cpp/ctaskdialog-class_1.cpp)]  \n  \n##  <a name=\"ctaskdialog__getselectedradiobuttonid\"></a>  CTaskDialog::GetSelectedRadioButtonID  \n Returns the selected radio button.  \n  \n```  \nint GetSelectedRadioButtonID() const;\n\n \n```  \n  \n### Return Value  \n The ID of the selected radio button.  \n  \n### Remarks  \n You can use this method after the user closes the dialog box to retrieve the selected radio button.  \n  \n### Example  \n [!code-cpp[NVC_MFC_CTaskDialog#3](../../mfc/reference/codesnippet/cpp/ctaskdialog-class_2.cpp)]  \n  \n##  <a name=\"ctaskdialog__getverificationcheckboxstate\"></a>  CTaskDialog::GetVerificationCheckboxState  \n Retrieves the state of the verification check box.  \n  \n```  \nBOOL GetVerificationCheckboxState() const;\n\n \n```  \n  \n### Return Value  \n `TRUE` if the check box is checked, `FALSE` if it is not.  \n  \n### Example  \n [!code-cpp[NVC_MFC_CTaskDialog#5](../../mfc/reference/codesnippet/cpp/ctaskdialog-class_4.cpp)]  \n  \n##  <a name=\"ctaskdialog__iscommandcontrolenabled\"></a>  CTaskDialog::IsCommandControlEnabled  \n Determines whether a command button control or button is enabled.  \n  \n```  \nBOOL IsCommandControlEnabled(int nCommandControlID) const;\n\n \n```  \n  \n### Parameters  \n [in] `nCommandControlID`  \n The ID of the command button control or button to test.  \n  \n### Return Value  \n `TRUE` if the control is enabled, `FALSE` if it is not.  \n  \n### Remarks  \n You can use this method to determine the availability of both command button controls and the common buttons of the [CTaskDialog Class](../../mfc/reference/ctaskdialog-class.md).  \n  \n If `nCommandControlID` is not a valid identifier for either a common `CTaskDialog` button or a command button control, this method throws an exception.  \n  \n### Example  \n [!code-cpp[NVC_MFC_CTaskDialog#2](../../mfc/reference/codesnippet/cpp/ctaskdialog-class_1.cpp)]  \n  \n##  <a name=\"ctaskdialog__isradiobuttonenabled\"></a>  CTaskDialog::IsRadioButtonEnabled  \n Determines whether a radio button is enabled.  \n  \n```  \nBOOL IsRadioButtonEnabled(int nRadioButtonID) const;\n\n \n```  \n  \n### Parameters  \n [in] `nRadioButtonID`  \n The ID of the radio button to test.  \n  \n### Return Value  \n `TRUE` if the radio button is enabled, `FALSE` if it is not.  \n  \n### Remarks  \n If `nRadioButtonID` is not a valid identifier for a radio button, this method throws an exception.  \n  \n### Example  \n [!code-cpp[NVC_MFC_CTaskDialog#3](../../mfc/reference/codesnippet/cpp/ctaskdialog-class_2.cpp)]  \n  \n##  <a name=\"ctaskdialog__issupported\"></a>  CTaskDialog::IsSupported  \n Determines whether the computer that is running the application supports the `CTaskDialog`.  \n  \n```  \nstatic BOOL IsSupported();\n```  \n  \n### Return Value  \n `TRUE` if the computer supports the `CTaskDialog`; `FALSE` otherwise.  \n  \n### Remarks  \n Use this function to determine at runtime if the computer that is running your application supports the [CTaskDialog Class](../../mfc/reference/ctaskdialog-class.md). If the computer does not support the `CTaskDialog`, you should provide another method of communicating information to the user. Your application will crash if it tries to use a `CTaskDialog` on a computer that does not support the `CTaskDialog` class.  \n  \n### Example  \n [!code-cpp[NVC_MFC_CTaskDialog#1](../../mfc/reference/codesnippet/cpp/ctaskdialog-class_5.cpp)]  \n  \n##  <a name=\"ctaskdialog__loadcommandcontrols\"></a>  CTaskDialog::LoadCommandControls  \n Adds command button controls by using data from the string table.  \n  \n```  \nvoid LoadCommandControls(\n    int nIDCommandControlsFirst,  \n    int nIDCommandControlsLast);\n```  \n  \n### Parameters  \n [in] `nIDCommandControlsFirst`  \n The string ID of the first command.  \n  \n [in] `nIDCommandControlsLast`  \n The string ID of the last command.  \n  \n### Remarks  \n This method creates command button controls by using data from the resource file of your application. The string table in the resource file has several strings with associated string IDs. New command button controls added by using this method use the string for the control's caption and the string ID for the control's ID. The range of strings selected is provided by `nIDCommandControlsFirst` and `nCommandControlsLast`, inclusive. If there is an empty entry in the range, the method does not add a command button control for that entry.  \n  \n By default, new command button controls are enabled and do not require elevation.  \n  \n### Example  \n [!code-cpp[NVC_MFC_CTaskDialog#2](../../mfc/reference/codesnippet/cpp/ctaskdialog-class_1.cpp)]  \n  \n##  <a name=\"ctaskdialog__loadradiobuttons\"></a>  CTaskDialog::LoadRadioButtons  \n Adds radio button controls by using data from the string table.  \n  \n```  \nvoid LoadRadioButtons(\n    int nIDRadioButtonsFirst,  \n    int nIDRadioButtonsLast);\n```  \n  \n### Parameters  \n [in] `nIDRadioButtonsFirst`  \n The string ID of the first radio button.  \n  \n [in] `nIDRadioButtonsLast`  \n The string ID of the last radio button.  \n  \n### Remarks  \n This method creates radio buttons by using data from the resource file of your application. The string table in the resource file has several strings with associated string IDs. New radio buttons added by using this method use the string for the radio button's caption and the string ID for the radio button's ID. The range of strings selected is provided by `nIDRadioButtonsFirst` and `nRadioButtonsLast`, inclusive. If there is an empty entry in the range, the method does not add a radio button for that entry.  \n  \n By default, new radio buttons are enabled.  \n  \n### Example  \n [!code-cpp[NVC_MFC_CTaskDialog#3](../../mfc/reference/codesnippet/cpp/ctaskdialog-class_2.cpp)]  \n  \n##  <a name=\"ctaskdialog__navigateto\"></a>  CTaskDialog::NavigateTo  \n Transfers the focus to another `CTaskDialog`.  \n  \n```  \nprotected:  \nvoid NavigateTo(CTaskDialog& oTaskDialog) const;\n\n \n```  \n  \n### Parameters  \n [in] `oTaskDialog`  \n The `CTaskDialog` that receives the focus.  \n  \n### Remarks  \n This method hides the current `CTaskDialog` when it displays the `oTaskDialog`. The `oTaskDialog` is displayed in the same location as the current `CTaskDialog`.  \n  \n##  <a name=\"ctaskdialog__oncommandcontrolclick\"></a>  CTaskDialog::OnCommandControlClick  \n The framework calls this method when the user clicks a command button control.  \n  \n```  \nvirtual HRESULT OnCommandControlClick(int nCommandControlID);\n```  \n  \n### Parameters  \n [in] `nCommandControlID`  \n The ID of the command button control that the user selected.  \n  \n### Return Value  \n The default implementation returns `S_OK`.  \n  \n### Remarks  \n Override this method in a derived class to implement custom behavior.  \n  \n##  <a name=\"ctaskdialog__oncreate\"></a>  CTaskDialog::OnCreate  \n The framework calls this method after it creates the `CTaskDialog`.  \n  \n```  \nvirtual HRESULT OnCreate();\n```  \n  \n### Return Value  \n The default implementation returns `S_OK`.  \n  \n### Remarks  \n Override this method in a derived class to implement custom behavior.  \n  \n##  <a name=\"ctaskdialog__ondestroy\"></a>  CTaskDialog::OnDestroy  \n The framework calls this method immediately before it destroys the `CTaskDialog`.  \n  \n```  \nvirtual HRESULT OnDestroy();\n```  \n  \n### Return Value  \n The default implementation returns `S_OK`.  \n  \n### Remarks  \n Override this method in a derived class to implement custom behavior.  \n  \n##  <a name=\"ctaskdialog__onexpandbuttonclick\"></a>  CTaskDialog::OnExpandButtonClick  \n The framework calls this method when the user clicks on the expansion button.  \n  \n```  \nvirtual HRESULT OnExpandButtonClicked(BOOL bExpanded);\n```  \n  \n### Parameters  \n [in] `bExpanded`  \n A nonzero value indicates the extra information is displayed; 0 indicates the extra information is hidden.  \n  \n### Return Value  \n The default implementation returns `S_OK`.  \n  \n### Remarks  \n Override this method in a derived class to implement custom behavior.  \n  \n##  <a name=\"ctaskdialog__onhelp\"></a>  CTaskDialog::OnHelp  \n The framework calls this method when the user requests help.  \n  \n```  \nvirtual HRESULT OnHelp();\n```  \n  \n### Return Value  \n The default implementation returns `S_OK`.  \n  \n### Remarks  \n Override this method in a derived class to implement custom behavior.  \n  \n##  <a name=\"ctaskdialog__onhyperlinkclick\"></a>  CTaskDialog::OnHyperlinkClick  \n The framework calls this method when the user clicks on a hyperlink.  \n  \n```  \nvirtual HRESULT OnHyperlinkClick(const CString& strHref);\n```  \n  \n### Parameters  \n [in] `strHref`  \n The string that represents the hyperlink.  \n  \n### Return Value  \n The default implementation returns `S_OK`.  \n  \n### Remarks  \n This method calls [ShellExecute](http://msdn.microsoft.com/library/windows/desktop/bb762153) before it returns `S_OK`.  \n  \n Override this method in a derived class to implement custom behavior.  \n  \n##  <a name=\"ctaskdialog__oninit\"></a>  CTaskDialog::OnInit  \n The framework calls this method when the `CTaskDialog` is initialized.  \n  \n```  \nvirtual HRESULT OnInit();\n```  \n  \n### Return Value  \n The default implementation returns `S_OK`.  \n  \n### Remarks  \n Override this method in a derived class to implement custom behavior.  \n  \n##  <a name=\"ctaskdialog__onnavigatepage\"></a>  CTaskDialog::OnNavigatePage  \n The framework calls this method in response to the [CTaskDialog::NavigateTo](#ctaskdialog__navigateto) method.  \n  \n```  \nvirtual HRESULT OnNavigatePage();\n```  \n  \n### Return Value  \n The default implementation returns `S_OK`.  \n  \n### Remarks  \n Override this method in a derived class to implement custom behavior.  \n  \n##  <a name=\"ctaskdialog__onradiobuttonclick\"></a>  CTaskDialog::OnRadioButtonClick  \n The framework calls this method when the user selects a radio button control.  \n  \n```  \nvirtual HRESULT OnRadioButtonClick(int nRadioButtonID);\n```  \n  \n### Parameters  \n [in] `nRadioButtonID`  \n The ID of the radio button control that the user clicked.  \n  \n### Return Value  \n The default implementation returns `S_OK`.  \n  \n### Remarks  \n Override this method in a derived class to implement custom behavior.  \n  \n##  <a name=\"ctaskdialog__ontimer\"></a>  CTaskDialog::OnTimer  \n The framework calls this method when the timer expires.  \n  \n```  \nvirtual HRESULT OnTimer(long lTime);\n```  \n  \n### Parameters  \n [in] `lTime`  \n Time in milliseconds since the `CTaskDialog` was created or the timer was reset.  \n  \n### Return Value  \n The default implementation returns `S_OK`.  \n  \n### Remarks  \n Override this method in a derived class to implement custom behavior.  \n  \n##  <a name=\"ctaskdialog__onverificationcheckboxclick\"></a>  CTaskDialog::OnVerificationCheckboxClick  \n The framework calls this method when the user clicks the verification check box.  \n  \n```  \nvirtual HRESULT OnVerificationCheckboxClick(BOOL bChecked);\n```  \n  \n### Parameters  \n [in] `bChecked`  \n `TRUE` indicates the verification check box is selected; `FALSE` indicates it is not.  \n  \n### Return Value  \n The default implementation returns `S_OK`.  \n  \n### Remarks  \n Override this method in a derived class to implement custom behavior.  \n  \n##  <a name=\"ctaskdialog__removeallcommandcontrols\"></a>  CTaskDialog::RemoveAllCommandControls  \n Removes all the command button controls from the `CTaskDialog`.  \n  \n```  \nvoid RemoveAllCommandControls();\n```  \n  \n### Example  \n [!code-cpp[NVC_MFC_CTaskDialog#2](../../mfc/reference/codesnippet/cpp/ctaskdialog-class_1.cpp)]  \n  \n##  <a name=\"ctaskdialog__removeallradiobuttons\"></a>  CTaskDialog::RemoveAllRadioButtons  \n Removes all the radio buttons from the `CTaskDialog`.  \n  \n```  \nvoid RemoveAllRadioButtons();\n```  \n  \n### Example  \n [!code-cpp[NVC_MFC_CTaskDialog#3](../../mfc/reference/codesnippet/cpp/ctaskdialog-class_2.cpp)]  \n  \n##  <a name=\"ctaskdialog__setcommandcontroloptions\"></a>  CTaskDialog::SetCommandControlOptions  \n Updates a command button control on the `CTaskDialog`.  \n  \n```  \nvoid SetCommandControlOptions(\n    int nCommandControlID,  \n    BOOL bEnabled,  \n    BOOL bRequiresElevation = FALSE);\n```  \n  \n### Parameters  \n [in] `nCommandControlID`  \n The ID of the command control to update.  \n  \n [in] `bEnabled`  \n A Boolean parameter that indicates if the specified command button control is enabled or disabled.  \n  \n [in] `bRequiresElevation`  \n A Boolean parameter that indicates if the specified command button control requires elevation.  \n  \n### Remarks  \n Use this method to change whether a command button control is enabled or requires elevation after it has been added to the [CTaskDialog Class](../../mfc/reference/ctaskdialog-class.md).  \n  \n### Example  \n [!code-cpp[NVC_MFC_CTaskDialog#2](../../mfc/reference/codesnippet/cpp/ctaskdialog-class_1.cpp)]  \n  \n##  <a name=\"ctaskdialog__setcommonbuttonoptions\"></a>  CTaskDialog::SetCommonButtonOptions  \n Updates a subset of common buttons to be enabled and to require UAC elevation.  \n  \n```  \nvoid SetCommonButtonOptions(\n    int nDisabledButtonMask,  \n    int nElevationButtonMask = 0);\n```  \n  \n### Parameters  \n [in] `nDisabledButtonMask`  \n A mask for the common buttons to disable.  \n  \n [in] `nElevationButtonMask`  \n A mask for the common buttons that require elevation.  \n  \n### Remarks  \n You can set the common buttons available to an instance of the [CTaskDialog Class](../../mfc/reference/ctaskdialog-class.md) by using the constructor [CTaskDialog::CTaskDialog](#ctaskdialog__ctaskdialog) and the method [CTaskDialog::SetCommonButtons](#ctaskdialog__setcommonbuttons). `CTaskDialog::SetCommonButtonOptions` does not support adding new common buttons.  \n  \n If you use this method to disable or elevate a common button that is not available for this `CTaskDialog`, this method throws an exception by using the [ENSURE](http://msdn.microsoft.com/library/738c4ccf-c29c-4c04-8d6c-f126bedf6e91) macro.  \n  \n This method enables any button that is available to the `CTaskDialog` but is not in the `nDisabledButtonMask`, even if it was previously disabled. This method treats elevation in a similar manner: it records common buttons as not requiring elevation if the common button is available but not included in `nElevationButtonMask`.  \n  \n### Example  \n [!code-cpp[NVC_MFC_CTaskDialog#6](../../mfc/reference/codesnippet/cpp/ctaskdialog-class_6.cpp)]  \n  \n##  <a name=\"ctaskdialog__setcommonbuttons\"></a>  CTaskDialog::SetCommonButtons  \n Adds common buttons to the `CTaskDialog`.  \n  \n```  \nvoid SetCommonButtons(\n    int nButtonMask,  \n    int nDisabledButtonMask = 0,  \n    int nElevationButtonMask = 0);\n```  \n  \n### Parameters  \n [in] `nButtonMask`  \n A mask of the buttons to add to the `CTaskDialog`.  \n  \n [in] `nDisabledButtonMask`  \n A mask of the buttons to disable.  \n  \n [in] `nElevationButtonMask`  \n A mask of the buttons that require elevation.  \n  \n### Remarks  \n You cannot call this method after the display window for this instance of the [CTaskDialog Class](../../mfc/reference/ctaskdialog-class.md) is created. If you do, this method throws an exception.  \n  \n The buttons indicated by `nButtonMask` override any common buttons previously added to the `CTaskDialog`. Only the buttons indicated in `nButtonMask` are available.  \n  \n If either `nDisabledButtonMask` or `nElevationButtonMask` contain a button that is not in `nButtonMask`, this method throws an exception by using the [ENSURE](http://msdn.microsoft.com/library/738c4ccf-c29c-4c04-8d6c-f126bedf6e91) macro.  \n  \n By default, all common buttons are enabled and do not require elevation.  \n  \n### Example  \n [!code-cpp[NVC_MFC_CTaskDialog#6](../../mfc/reference/codesnippet/cpp/ctaskdialog-class_6.cpp)]  \n  \n##  <a name=\"ctaskdialog__setcontent\"></a>  CTaskDialog::SetContent  \n Updates the content of the `CTaskDialog`.  \n  \n```  \nvoid SetContent(const CString& strContent);\n```  \n  \n### Parameters  \n [in] `strContent`  \n The string to display to the user.  \n  \n### Remarks  \n The content of the [CTaskDialog Class](../../mfc/reference/ctaskdialog-class.md) is the text that is displayed to the user in the main section of the dialog box.  \n  \n### Example  \n [!code-cpp[NVC_MFC_CTaskDialog#7](../../mfc/reference/codesnippet/cpp/ctaskdialog-class_3.cpp)]  \n  \n##  <a name=\"ctaskdialog__setdefaultcommandcontrol\"></a>  CTaskDialog::SetDefaultCommandControl  \n Specifies the default command button control.  \n  \n```  \nvoid SetDefaultCommandControl(int nCommandControlID);\n```  \n  \n### Parameters  \n [in] `nCommandControlID`  \n The ID of the command button control to be the default.  \n  \n### Remarks  \n The default command button control is the control that is selected when the `CTaskDialog` is first displayed to the user.  \n  \n This method throws an exception if it cannot find the command button control specified by `nCommandControlID`.  \n  \n### Example  \n [!code-cpp[NVC_MFC_CTaskDialog#2](../../mfc/reference/codesnippet/cpp/ctaskdialog-class_1.cpp)]  \n  \n##  <a name=\"ctaskdialog__setdefaultradiobutton\"></a>  CTaskDialog::SetDefaultRadioButton  \n Specifies the default radio button.  \n  \n```  \nvoid SetDefaultRadioButton(int nRadioButtonID);\n```  \n  \n### Parameters  \n [in] `nRadioButtonID`  \n The ID of the radio button to be the default.  \n  \n### Remarks  \n The default radio button is the button that is selected when the `CTaskDialog` is first displayed to the user.  \n  \n This method throws an exception if it cannot find the radio button specified by `nRadioButtonID`.  \n  \n### Example  \n [!code-cpp[NVC_MFC_CTaskDialog#3](../../mfc/reference/codesnippet/cpp/ctaskdialog-class_2.cpp)]  \n  \n##  <a name=\"ctaskdialog__setdialogwidth\"></a>  CTaskDialog::SetDialogWidth  \n Adjusts the width of the `CTaskDialog`.  \n  \n```  \nvoid SetDialogWidth(int nWidth = 0);\n```  \n  \n### Parameters  \n [in] `nWidth`  \n The width of the dialog box, in pixels.  \n  \n### Remarks  \n The parameter `nWidth` must be greater than or equal to 0. Otherwise, this method throws an exception.  \n  \n If `nWidth` is set to 0, this method sets the dialog box to the default size.  \n  \n### Example  \n [!code-cpp[NVC_MFC_CTaskDialog#7](../../mfc/reference/codesnippet/cpp/ctaskdialog-class_3.cpp)]  \n  \n##  <a name=\"ctaskdialog__setexpansionarea\"></a>  CTaskDialog::SetExpansionArea  \n Updates the expansion area of the `CTaskDialog`.  \n  \n```  \nvoid SetExpansionArea(\n    const CString& strExpandedInformation,  \n    const CString& strCollapsedLabel = _T(\"\"),  \n    const CString& strExpandedLabel = _T(\"\"));\n```  \n  \n### Parameters  \n [in] `strExpandedInformation`  \n The string that the `CTaskDialog` displays in the main body of the dialog box when the user clicks the expansion button.  \n  \n [in] `strCollapsedLabel`  \n The string that the `CTaskDialog` displays next to the expansion button when the expanded area is collapsed.  \n  \n [in] `strExpandedLabel`  \n The string that the `CTaskDialog` displays next to the expansion button when the expanded area is displayed.  \n  \n### Remarks  \n The expansion area of the [CTaskDialog Class](../../mfc/reference/ctaskdialog-class.md) enables you to provide additional information to the user. The expansion area is in the main part of the `CTaskDialog`, located immediately underneath the title and content string.  \n  \n When the `CTaskDialog` is first displayed, it does not show the expanded information and puts `strCollapsedLabel` next to the expansion button. When the user clicks the expansion button, the `CTaskDialog` displays `strExpandedInformation` and changes the label to `strExpandedLabel`.  \n  \n### Example  \n [!code-cpp[NVC_MFC_CTaskDialog#7](../../mfc/reference/codesnippet/cpp/ctaskdialog-class_3.cpp)]  \n  \n##  <a name=\"ctaskdialog__setfootericon\"></a>  CTaskDialog::SetFooterIcon  \n Updates the footer icon of the `CTaskDialog`.  \n  \n```  \nvoid SetFooterIcon(HICON hFooterIcon);\n\n \nvoid SetFooterIcon(LPCWSTR lpszFooterIcon);\n```  \n  \n### Parameters  \n [in] `hFooterIcon`  \n The new icon for the `CTaskDialog`.  \n  \n [in] `lpszFooterIcon`  \n The new icon for the `CTaskDialog`.  \n  \n### Remarks  \n The footer icon is displayed on the bottom of the [CTaskDialog Class](../../mfc/reference/ctaskdialog-class.md). It can have associated footer text. You can change the footer text with [CTaskDialog::SetFooterText](#ctaskdialog__setfootertext).  \n  \n This method throws an exception with the [ENSURE](http://msdn.microsoft.com/library/738c4ccf-c29c-4c04-8d6c-f126bedf6e91) macro if the `CTaskDialog` is displayed or the input parameter is `NULL`.  \n  \n A `CTaskDialog` can only accept an `HICON` or `LPCWSTR` as a footer icon. This is configured by setting the option `TDF_USE_HICON_FOOTER` in the constructor or [CTaskDialog::SetOptions](#ctaskdialog__setoptions). By default, the `CTaskDialog` is configured to use `LPCWSTR` as the input type for the footer icon. This method generates an exception if you try to set the icon using the inappropriate type.  \n  \n### Example  \n [!code-cpp[NVC_MFC_CTaskDialog#7](../../mfc/reference/codesnippet/cpp/ctaskdialog-class_3.cpp)]  \n  \n##  <a name=\"ctaskdialog__setfootertext\"></a>  CTaskDialog::SetFooterText  \n Updates the text on the footer of the `CTaskDialog`.  \n  \n```  \nvoid SetFooterText(const CString& strFooterText);\n```  \n  \n### Parameters  \n [in] `strFooterText`  \n The new text for the footer.  \n  \n### Remarks  \n The footer icon appears next to the footer text on the bottom of the `CTaskDialog`. You can change the footer icon with [CTaskDialog::SetFooterIcon](#ctaskdialog__setfootericon).  \n  \n### Example  \n [!code-cpp[NVC_MFC_CTaskDialog#7](../../mfc/reference/codesnippet/cpp/ctaskdialog-class_3.cpp)]  \n  \n##  <a name=\"ctaskdialog__setmainicon\"></a>  CTaskDialog::SetMainIcon  \n Updates the main icon of the `CTaskDialog`.  \n  \n```  \nvoid SetMainIcon(HICON hMainIcon);\n\n \nvoid SetMainIcon(LPCWSTR lpszMainIcon);\n```  \n  \n### Parameters  \n [in] `hMainIcon`  \n The new icon.  \n  \n [in] `lpszMainIcon`  \n The new icon.  \n  \n### Remarks  \n This method throws an exception with the [ENSURE](http://msdn.microsoft.com/library/738c4ccf-c29c-4c04-8d6c-f126bedf6e91) macro if the `CTaskDialog` is displayed or the input parameter is `NULL`.  \n  \n A `CTaskDialog` can only accept an `HICON` or `LPCWSTR` as a main icon. You can configure this by setting the `TDF_USE_HICON_MAIN` option in the constructor or in the [CTaskDialog::SetOptions](#ctaskdialog__setoptions) method. By default, the `CTaskDialog` is configured to use `LPCWSTR` as the input type for the main icon. This method generates an exception if you try to set the icon using the inappropriate type.  \n  \n### Example  \n [!code-cpp[NVC_MFC_CTaskDialog#7](../../mfc/reference/codesnippet/cpp/ctaskdialog-class_3.cpp)]  \n  \n##  <a name=\"ctaskdialog__setmaininstruction\"></a>  CTaskDialog::SetMainInstruction  \n Updates the main instruction of the `CTaskDialog`.  \n  \n```  \nvoid SetMainInstruction(const CString& strInstructions);\n```  \n  \n### Parameters  \n [in] `strInstructions`  \n The new main instruction.  \n  \n### Remarks  \n The main instruction of the [CTaskDialog Class](../../mfc/reference/ctaskdialog-class.md) is text displayed to the user in a large bold font. It is located in the dialog box underneath the title bar.  \n  \n### Example  \n [!code-cpp[NVC_MFC_CTaskDialog#7](../../mfc/reference/codesnippet/cpp/ctaskdialog-class_3.cpp)]  \n  \n##  <a name=\"ctaskdialog__setoptions\"></a>  CTaskDialog::SetOptions  \n Configures the options for the `CTaskDialog`.  \n  \n```  \nvoid SetOptions(int nOptionFlag);\n```  \n  \n### Parameters  \n [in] `nOptionFlag`  \n The set of flags to use for the `CTaskDialog`.  \n  \n### Remarks  \n This method clears all the current options for the `CTaskDialog`. To preserve the current options, you must retrieve them first with [CTaskDialog::GetOptions](#ctaskdialog__getoptions) and combine them with the options that you want to set.  \n  \n The following table lists all the valid options.  \n  \n `TDF_ENABLE_HYPERLINKS`  \n Enables hyperlinks in the `CTaskDialog`.  \n  \n `TDF_USE_HICON_MAIN`  \n Configures the `CTaskDialog` to use a `HICON` for the main icon. The alternative is to use a `LPCWSTR`.  \n  \n `TDF_USE_HICON_FOOTER`  \n Configures the `CTaskDialog` to use a `HICON` for the footer icon. The alternative is to use a `LPCWSTR`.  \n  \n `TDF_ALLOW_DIALOG_CANCELLATION`  \n Enables the user to close the `CTaskDialog` by using the keyboard or by using the icon in the upper-right corner of the dialog box, even if the **Cancel** button is not enabled. If this flag is not set and the **Cancel** button is not enabled, the user cannot close the dialog box by using Alt+F4, the Escape key, or the title bar's close button.  \n  \n `TDF_USE_COMMAND_LINKS`  \n Configures the `CTaskDialog` to use command button controls.  \n  \n `TDF_USE_COMMAND_LINKS_NO_ICON`  \n Configures the `CTaskDialog` to use command button controls without displaying an icon next to the control. `TDF_USE_COMMAND_LINKS` overrides `TDF_USE_COMMAND_LINKS_NO_ICON`.  \n  \n `TDF_EXPAND_FOOTER_AREA`  \n Indicates the expansion area is currently expanded.  \n  \n `TDF_EXPANDED_BY_DEFAULT`  \n Determines whether the expansion area is expanded by default.  \n  \n `TDF_VERIFICATION_FLAG_CHECKED`  \n Indicates the verification check box is currently selected.  \n  \n `TDF_SHOW_PROGRESS_BAR`  \n Configures the `CTaskDialog` to display a progress bar.  \n  \n `TDF_SHOW_MARQUEE_PROGRESS_BAR`  \n Configures the progress bar to be a marquee progress bar. If you enable this option, you must set `TDF_SHOW_PROGRESS_BAR` to have the expected behavior.  \n  \n `TDF_CALLBACK_TIMER`  \n Indicates that the `CTaskDialog` callback interval is set to approximately 200 milliseconds.  \n  \n `TDF_POSITION_RELATIVE_TO_WINDOW`  \n Configures the `CTaskDialog` to be centered relative to the parent window. If this flag is not enabled, the `CTaskDialog` is centered relative to the monitor.  \n  \n `TDF_RTL_LAYOUT`  \n Configures the `CTaskDialog` for a right-to-left reading layout.  \n  \n `TDF_NO_DEFAULT_RADIO_BUTTON`  \n Indicates that no radio button is selected when the `CTaskDialog` appears.  \n  \n `TDF_CAN_BE_MINIMIZED`  \n Enables the user to minimize the `CTaskDialog`. To support this option, the `CTaskDialog` cannot be modal. MFC does not support this option because MFC does not support a modeless `CTaskDialog`.  \n  \n### Example  \n [!code-cpp[NVC_MFC_CTaskDialog#7](../../mfc/reference/codesnippet/cpp/ctaskdialog-class_3.cpp)]  \n  \n##  <a name=\"ctaskdialog__setprogressbarmarquee\"></a>  CTaskDialog::SetProgressBarMarquee  \n Configures a marquee bar for the `CTaskDialog` and adds it to the dialog box.  \n  \n```  \nvoid SetProgressBarMarquee(\n    BOOL bEnabled = TRUE,  \n    int nMarqueeSpeed = 0);\n```  \n  \n### Parameters  \n [in] `bEnabled`  \n `TRUE` to enable the marquee bar; `FALSE` to disable the marquee bar and remove it from the `CTaskDialog`.  \n  \n [in] `nMarqueeSpeed`  \n An integer that indicates the speed of the marquee bar.  \n  \n### Remarks  \n The marquee bar appears underneath the main text of the [CTaskDialog Class](../../mfc/reference/ctaskdialog-class.md).  \n  \n Use `nMarqueeSpeed` to set the speed of the marquee bar; larger values indicate a slower speed. A value of 0 for `nMarqueeSpeed` makes the marquee bar move at the default speed for [!INCLUDE[wiprlhext](../../c-runtime-library/reference/includes/wiprlhext_md.md)].  \n  \n This method throws an exception with the [ENSURE](http://msdn.microsoft.com/library/738c4ccf-c29c-4c04-8d6c-f126bedf6e91) macro if `nMarqueeSpeed` is less than 0.  \n  \n### Example  \n [!code-cpp[NVC_MFC_CTaskDialog#4](../../mfc/reference/codesnippet/cpp/ctaskdialog-class_7.cpp)]  \n  \n##  <a name=\"ctaskdialog__setprogressbarposition\"></a>  CTaskDialog::SetProgressBarPosition  \n Adjusts the position of the progress bar.  \n  \n```  \nvoid SetProgressBarPosition(int nProgressPos);\n```  \n  \n### Parameters  \n [in] `nProgressPos`  \n The position for the progress bar.  \n  \n### Remarks  \n This method throws an exception with the [ENSURE](http://msdn.microsoft.com/library/738c4ccf-c29c-4c04-8d6c-f126bedf6e91) macro if `nProgressPos` is not in the progress bar range. You can change the progress bar range with [CTaskDialog::SetProgressBarRange](#ctaskdialog__setprogressbarrange).  \n  \n### Example  \n [!code-cpp[NVC_MFC_CTaskDialog#4](../../mfc/reference/codesnippet/cpp/ctaskdialog-class_7.cpp)]  \n  \n##  <a name=\"ctaskdialog__setprogressbarrange\"></a>  CTaskDialog::SetProgressBarRange  \n Adjusts the range of the progress bar.  \n  \n```  \nvoid SetProgressBarRange(\n    int nRangeMin,  \n    int nRangeMax);\n```  \n  \n### Parameters  \n [in] `nRangeMin`  \n The lower bound of the progress bar.  \n  \n [in] `nRangeMax`  \n The upper bound of the progress bar.  \n  \n### Remarks  \n The position of the progress bar is relative to `nRangeMin` and `nRangeMax`. For example, if `nRangeMin` is 50 and `nRangeMax` is 100, a position of 75 is halfway across the progress bar. Use [CTaskDialog::SetProgressBarPosition](#ctaskdialog__setprogressbarposition) to set the position of the progress bar.  \n  \n To display the progress bar, the option `TDF_SHOW_PROGRESS_BAR` must be enabled and `TDF_SHOW_MARQUEE_PROGRESS_BAR` must not be enabled. This method automatically sets `TDF_SHOW_PROGRESS_BAR` and clears `TDF_SHOW_MARQUEE_PROGRESS_BAR`. Use [CTaskDialog::SetOptions](#ctaskdialog__setoptions) to manually change the options for this instance of the [CTaskDialog Class](../../mfc/reference/ctaskdialog-class.md).  \n  \n This method throws an exception with the [ENSURE](http://msdn.microsoft.com/library/738c4ccf-c29c-4c04-8d6c-f126bedf6e91) macro if `nRangeMin` is not less than `nRangeMax`. This method also throws an exception if the `CTaskDialog` is already displayed and has a marquee progress bar.  \n  \n### Example  \n [!code-cpp[NVC_MFC_CTaskDialog#4](../../mfc/reference/codesnippet/cpp/ctaskdialog-class_7.cpp)]  \n  \n##  <a name=\"ctaskdialog__setprogressbarstate\"></a>  CTaskDialog::SetProgressBarState  \n Sets the state of the progress bar and displays it on the `CTaskDialog`.  \n  \n```  \nvoid SetProgressBarState(int nState = PBST_NORMAL);\n```  \n  \n### Parameters  \n [in] `nState`  \n The state of the progress bar. See the Remarks section for the possible values.  \n  \n### Remarks  \n This method throws an exception with the [ENSURE](http://msdn.microsoft.com/library/738c4ccf-c29c-4c04-8d6c-f126bedf6e91) macro if the `CTaskDialog` is already displayed and has a marquee progress bar.  \n  \n The following table lists the possible values for `nState`. In all these cases, the progress bar will fill with the regular color until it reaches the designated stop position. At that point it will change color based on the state.  \n  \n PBST_NORMAL  \n After the progress bar fills, the `CTaskDialog` does not change the color of the bar. By default, the regular color is green.  \n  \n PBST_ERROR  \n After the progress bar fills, the `CTaskDialog` changes the color of the bar to the error color. By default, this is red.  \n  \n PBST_PAUSED  \n After the progress bar fills, the `CTaskDialog` changes the color of the bar to the paused color. By default, this is yellow.  \n  \n You can set where the progress bar stops with [CTaskDialog::SetProgressBarPosition](#ctaskdialog__setprogressbarposition).  \n  \n### Example  \n [!code-cpp[NVC_MFC_CTaskDialog#4](../../mfc/reference/codesnippet/cpp/ctaskdialog-class_7.cpp)]  \n  \n##  <a name=\"ctaskdialog__setradiobuttonoptions\"></a>  CTaskDialog::SetRadioButtonOptions  \n Enables or disables a radio button.  \n  \n```  \nvoid SetRadioButtonOptions(\n    int nRadioButtonID,  \n    BOOL bEnabled);\n```  \n  \n### Parameters  \n [in] `nRadioButtonID`  \n The ID of the radio button control.  \n  \n [in] `bEnabled`  \n `TRUE` to enable the radio button; `FALSE` to disable the radio button.  \n  \n### Remarks  \n This method throws an exception with the [ENSURE](http://msdn.microsoft.com/library/738c4ccf-c29c-4c04-8d6c-f126bedf6e91) macro if `nRadioButtonID` is not a valid ID for a radio button.  \n  \n### Example  \n [!code-cpp[NVC_MFC_CTaskDialog#3](../../mfc/reference/codesnippet/cpp/ctaskdialog-class_2.cpp)]  \n  \n##  <a name=\"ctaskdialog__setverificationcheckbox\"></a>  CTaskDialog::SetVerificationCheckbox  \n Sets the checked state of the verification check box.  \n  \n```  \nvoid SetVerificationCheckbox(BOOL bChecked);\n```  \n  \n### Parameters  \n [in] `bChecked`  \n `TRUE` to have the verification check box selected when the `CTaskDialog` is displayed; `FALSE` to have the verification check box unselected when the `CTaskDialog` is displayed.  \n  \n### Example  \n [!code-cpp[NVC_MFC_CTaskDialog#5](../../mfc/reference/codesnippet/cpp/ctaskdialog-class_4.cpp)]  \n  \n##  <a name=\"ctaskdialog__setverificationcheckboxtext\"></a>  CTaskDialog::SetVerificationCheckboxText  \n Sets the text that is displayed to the right of the verification check box.  \n  \n```  \nvoid SetVerificationCheckboxText(CString& strVerificationText);\n```  \n  \n### Parameters  \n [in] `strVerificationText`  \n The text that this method displays next to the verification check box.  \n  \n### Remarks  \n This method throws an exception with the [ENSURE](http://msdn.microsoft.com/library/738c4ccf-c29c-4c04-8d6c-f126bedf6e91) macro if this instance of the [CTaskDialog Class](../../mfc/reference/ctaskdialog-class.md) is already displayed.  \n  \n### Example  \n [!code-cpp[NVC_MFC_CTaskDialog#5](../../mfc/reference/codesnippet/cpp/ctaskdialog-class_4.cpp)]  \n  \n##  <a name=\"ctaskdialog__setwindowtitle\"></a>  CTaskDialog::SetWindowTitle  \n Sets the title of the `CTaskDialog`.  \n  \n```  \nvoid SetWindowTitle(CString& strWindowTitle);\n```  \n  \n### Parameters  \n [in] `strWindowTitle`  \n The new title for the `CTaskDialog`.  \n  \n### Remarks  \n  \n### Example  \n [!code-cpp[NVC_MFC_CTaskDialog#7](../../mfc/reference/codesnippet/cpp/ctaskdialog-class_3.cpp)]  \n  \n##  <a name=\"ctaskdialog__showdialog\"></a>  CTaskDialog::ShowDialog  \n Creates and displays a `CTaskDialog`.  \n  \n```  \nstatic INT_PTR ShowDialog(\n    const CString& strContent,  \n    const CString& strMainInstruction,  \n    const CString& strTitle,  \n    int nIDCommandControlsFirst,  \n    int nIDCommandControlsLast,  \n    int nCommonButtons = TDCBF_YES_BUTTON | TDCBF_NO_BUTTON,  \n    int nTaskDialogOptions = TDF_ENABLE_HYPERLINKS | TDF_USE_COMMAND_LINKS,  \n    const CString& strFooter = _T(\"\"));\n```  \n  \n### Parameters  \n [in] `strContent`  \n The string to use for the content of the `CTaskDialog`.  \n  \n [in] `strMainInstruction`  \n The main instruction of the `CTaskDialog`.  \n  \n [in] `strTitle`  \n The title of the `CTaskDialog`.  \n  \n [in] `nIDCommandControlsFirst`  \n The string ID of the first command.  \n  \n [in] `nIDCommandControlsLast`  \n The string ID of the last command.  \n  \n [in] `nCommonButtons`  \n A mask of the buttons to add to the `CTaskDialog`.  \n  \n [in] `nTaskDialogOptions`  \n The set of options to use for the `CTaskDialog`.  \n  \n [in] `strFooter`  \n The string to use as the footer.  \n  \n### Return Value  \n An integer that corresponds to the selection made by the user.  \n  \n### Remarks  \n This static method enables you to create an instance of the [CTaskDialog Class](../../mfc/reference/ctaskdialog-class.md) without explicitly creating a `CTaskDialog` object in your code. Because there is no `CTaskDialog` object, you cannot call any other methods of the `CTaskDialog` if you use this method to show a `CTaskDialog` to the user.  \n  \n This method creates command button controls by using data from the resource file of your application. The string table in the resource file has several strings with associated string IDs. This method adds a command button control for each valid entry in the string table between `nIDCommandControlsFirst` and `nCommandControlsLast`, inclusive. For these command button controls, the string in the string table is the control's caption and the string ID is the control's ID.  \n  \n See [CTaskDialog::SetOptions](#ctaskdialog__setoptions) for a list of valid options.  \n  \n The `CTaskDialog` closes when the user selects a common button, a command link control, or closes the `CTaskDialog`. The return value is the identifier that indicates how the user closed the dialog box.  \n  \n### Example  \n [!code-cpp[NVC_MFC_CTaskDialog#1](../../mfc/reference/codesnippet/cpp/ctaskdialog-class_5.cpp)]  \n  \n##  <a name=\"ctaskdialog__taskdialogcallback\"></a>  CTaskDialog::TaskDialogCallback  \n The framework calls this method in response to various Windows messages.  \n  \n```  \nfriend:  \nHRESULT TaskDialogCallback(\n    HWND hWnd,  \n    UINT uNotification,  \n    WPARAM wParam,  \n    LPARAM lParam,  \n    LONG_PTR dwRefData);\n```  \n  \n### Parameters  \n [in] `hwnd`  \n A handle to the `m_hWnd` structure for the `CTaskDialog`.  \n  \n [in] `uNotification`  \n The notification code that specifies the generated message.  \n  \n [in] `wParam`  \n More information about the message.  \n  \n [in] `lParam`  \n More information about the message.  \n  \n [in] `dwRefData`  \n A pointer to the `CTaskDialog` object that the callback message applies to.  \n  \n### Return Value  \n Depends on the specific notification code. See the Remarks section for more information.  \n  \n### Remarks  \n The default implementation of `TaskDialogCallback` handles the specific message and then calls the appropriate On method of the [CTaskDialog Class](../../mfc/reference/ctaskdialog-class.md). For example, in response to the `TDN_BUTTON_CLICKED` message, `TaskDialogCallback` calls [CTaskDialog::OnCommandControlClick](#ctaskdialog__oncommandcontrolclick).  \n  \n The values for `wParam` and `lParam` depend on the specific generated message. It is possible for either or both of these values to be empty. The following table lists the default notifications that are supported and what the values of `wParam` and `lParam` represent. If you override this method in a derived class, you should implement the callback code for each message in the following table.  \n  \n|Notification Message|`wParam` Value|`lParam` Value|  \n|--------------------------|--------------------|--------------------|  \n|`TDN_CREATED`|Not used.|Not used.|  \n|`TDN_NAVIGATED`|Not used.|Not used.|  \n|`TDN_BUTTON_CLICKED`|The command button control ID.|Not used.|  \n|`TDN_HYPERLINK_CLICKED`|Not used.|A [LPCWSTR](http://msdn.microsoft.com/library/windows/desktop/aa383751) structure that contains the link.|  \n|`TDN_TIMER`|Time in milliseconds since the `CTaskDialog` was created or the timer was reset.|Not used.|  \n|`TDN_DESTROYED`|Not used.|Not used.|  \n|`TDN_RADIO_BUTTON_CLICKED`|The radio button ID.|Not used.|  \n|`TDN_DIALOG_CONSTRUCTED`|Not used.|Not used.|  \n|`TDN_VERIFICATION_CLICKED`|1 if the check box is checked, 0 if it is not.|Not used.|  \n|`TDN_HELP`|Not used.|Not used.|  \n|`TDN_EXPANDO_BUTTON_CLICKED`|0 if the expansion area is collapsed; nonzero if the expansion text is displayed.|Not used.|  \n  \n## See Also  \n [Classes](../../mfc/reference/mfc-classes.md)   \n [CObject Class](../../mfc/reference/cobject-class.md)   \n [Hierarchy Chart](../../mfc/hierarchy-chart.md)   \n [Walkthrough: Adding a CTaskDialog to an Application](../../mfc/walkthrough-adding-a-ctaskdialog-to-an-application.md)\n\n\n\n"}