{"nodes":[{"pos":[12,61],"content":"Compiler Warning (level 1) C4383 | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Compiler Warning (level 1) C4383 | Microsoft Docs","pos":[0,49]}]},{"content":"Compiler Warning (level 1) C4383","pos":[609,641]},{"content":"'instance_dereference_operator' : the meaning of dereferencing a handle can change, when a user-defined 'operator' operator exists; write the operator as a static function to be explicit about the operand","pos":[642,846]},{"content":"When you add a user-defined instance override of the dereference operator in a managed type, you potentially override the ability of the type's dereference operator to return the handle's object.","pos":[853,1048]},{"content":"Consider writing a static, user-defined dereference operator.","pos":[1049,1110]},{"pos":[1117,1353],"content":"For more information, see <bpt id=\"p1\">[</bpt>Handle to Object Operator (^)<ept id=\"p1\">](../../windows/handle-to-object-operator-hat-cpp-component-extensions.md)</ept> and <bpt id=\"p2\">[</bpt>Tracking Reference Operator<ept id=\"p2\">](../../windows/tracking-reference-operator-cpp-component-extensions.md)</ept>.","source":"For more information, see [Handle to Object Operator (^)](../../windows/handle-to-object-operator-hat-cpp-component-extensions.md) and [Tracking Reference Operator](../../windows/tracking-reference-operator-cpp-component-extensions.md)."},{"content":"Also, an instance operator is not available to other language compilers via referenced metadata.","pos":[1360,1456]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>User-Defined Operators (C++/CLI)<ept id=\"p1\">](../../dotnet/user-defined-operators-cpp-cli.md)</ept>.","pos":[1457,1566],"source":" For more information, see [User-Defined Operators (C++/CLI)](../../dotnet/user-defined-operators-cpp-cli.md)."},{"content":"Example","pos":[1575,1582]},{"content":"The following sample generates C4383.","pos":[1586,1623]}],"content":"---\ntitle: \"Compiler Warning (level 1) C4383 | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"error-reference\"\nf1_keywords: \n  - \"C4383\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"C4383\"\nms.assetid: 96c0e52d-874e-4b57-a154-0e49b6a00fae\ncaps.latest.revision: 6\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Compiler Warning (level 1) C4383\n'instance_dereference_operator' : the meaning of dereferencing a handle can change, when a user-defined 'operator' operator exists; write the operator as a static function to be explicit about the operand  \n  \n When you add a user-defined instance override of the dereference operator in a managed type, you potentially override the ability of the type's dereference operator to return the handle's object. Consider writing a static, user-defined dereference operator.  \n  \n For more information, see [Handle to Object Operator (^)](../../windows/handle-to-object-operator-hat-cpp-component-extensions.md) and [Tracking Reference Operator](../../windows/tracking-reference-operator-cpp-component-extensions.md).  \n  \n Also, an instance operator is not available to other language compilers via referenced metadata. For more information, see [User-Defined Operators (C++/CLI)](../../dotnet/user-defined-operators-cpp-cli.md).  \n  \n## Example  \n The following sample generates C4383.  \n  \n```  \n// C4383.cpp  \n// compile with: /clr /W1  \n  \nref struct S {  \n   int operator*() { return 0; }   // C4383  \n};  \n  \nref struct T {  \n   static int operator*(T%) { return 0; }  \n};   \n  \nint main() {  \n   S s;  \n   S^ pS = %s;  \n  \n   T t;  \n   T^ pT = %t;  \n   T% rT = *pT;  \n}  \n```"}