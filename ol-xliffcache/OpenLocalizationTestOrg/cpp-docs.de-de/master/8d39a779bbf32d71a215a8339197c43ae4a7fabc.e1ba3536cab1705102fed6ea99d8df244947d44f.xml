{"nodes":[{"pos":[12,74],"content":"A.15   Determining the Number of Threads Used | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"A.15   Determining the Number of Threads Used | Microsoft Docs","pos":[0,62]}]},{"content":"A.15   Determining the Number of Threads Used","pos":[554,599]},{"pos":[600,735],"content":"Consider the following incorrect example (for <bpt id=\"p1\">[</bpt>Section 3.1.2<ept id=\"p1\">](../../parallel/openmp/3-1-2-omp-get-num-threads-function.md)</ept> on page 37):","source":"Consider the following incorrect example (for [Section 3.1.2](../../parallel/openmp/3-1-2-omp-get-num-threads-function.md) on page 37):"},{"content":"The <ph id=\"ph1\">`omp_get_num_threads()`</ph> call returns 1 in the serial section of the code, so <bpt id=\"p1\">*</bpt>np<ept id=\"p1\">*</ept> will always be equal to 1 in the preceding example.","pos":[891,1028],"source":"The `omp_get_num_threads()` call returns 1 in the serial section of the code, so *np* will always be equal to 1 in the preceding example."},{"content":"To determine the number of threads that will be deployed for the parallel region, the call should be inside the parallel region.","pos":[1029,1157]},{"content":"The following example shows how to rewrite this program without including a query for the number of threads:","pos":[1164,1272]}],"content":"---\ntitle: \"A.15   Determining the Number of Threads Used | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"C++\"\nms.assetid: 026bb59a-f668-40db-a7cb-69a1bae83d2d\ncaps.latest.revision: 7\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# A.15   Determining the Number of Threads Used\nConsider the following incorrect example (for [Section 3.1.2](../../parallel/openmp/3-1-2-omp-get-num-threads-function.md) on page 37):  \n  \n```  \nnp = omp_get_num_threads(); // misplaced   \n#pragma omp parallel for schedule(static)  \n    for (i=0; i<np; i++)  \n        work(i);  \n```  \n  \n The `omp_get_num_threads()` call returns 1 in the serial section of the code, so *np* will always be equal to 1 in the preceding example. To determine the number of threads that will be deployed for the parallel region, the call should be inside the parallel region.  \n  \n The following example shows how to rewrite this program without including a query for the number of threads:  \n  \n```  \n#pragma omp parallel private(i)  \n{  \n    i = omp_get_thread_num();  \n    work(i);  \n}  \n```"}