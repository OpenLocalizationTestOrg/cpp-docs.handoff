{"nodes":[{"pos":[12,42],"content":"_get_daylight | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"_get_daylight | Microsoft Docs","pos":[0,30]}]},{"pos":[1026,1039],"content":"_get_daylight","linkify":"_get_daylight","nodes":[{"content":"_get_daylight","pos":[0,13]}]},{"content":"Retrieves the daylight saving time offset in hours.","pos":[1040,1091]},{"pos":[1100,1106],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[1189,1199],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"The offset in hours of daylight saving time.","pos":[1214,1258]},{"pos":[1267,1279],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[1283,1341],"content":"Zero if successful or an <ph id=\"ph1\">`errno`</ph> value if an error occurs.","source":"Zero if successful or an `errno` value if an error occurs."},{"pos":[1350,1357],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The <ph id=\"ph1\">`_get_daylight`</ph> function retrieves the number of hours in daylight saving time as an integer.","pos":[1361,1458],"source":"The `_get_daylight` function retrieves the number of hours in daylight saving time as an integer."},{"content":"If daylight saving time is in effect, the default offset is one hour (although a few regions do observe a two-hour offset).","pos":[1459,1582]},{"content":"If <ph id=\"ph1\">`hours`</ph> is <ph id=\"ph2\">`NULL`</ph>, the invalid parameter handler is invoked as described in <bpt id=\"p1\">[</bpt>Parameter Validation<ept id=\"p1\">](../../c-runtime-library/parameter-validation.md)</ept>.","pos":[1589,1740],"source":"If `hours` is `NULL`, the invalid parameter handler is invoked as described in [Parameter Validation](../../c-runtime-library/parameter-validation.md)."},{"content":"If execution is allowed to continue, this function sets <ph id=\"ph1\">`errno`</ph> to <ph id=\"ph2\">`EINVAL`</ph> and returns <ph id=\"ph3\">`EINVAL`</ph>.","pos":[1741,1838],"source":" If execution is allowed to continue, this function sets `errno` to `EINVAL` and returns `EINVAL`."},{"pos":[1845,1953],"content":"We recommend you use this function instead of the macro <ph id=\"ph1\">`_daylight`</ph> or the deprecated function <ph id=\"ph2\">`__daylight`</ph>.","source":"We recommend you use this function instead of the macro `_daylight` or the deprecated function `__daylight`."},{"pos":[1962,1987],"content":".NET Framework Equivalent","linkify":".NET Framework Equivalent","nodes":[{"content":".NET Framework Equivalent","pos":[0,25]}]},{"content":"Not applicable.","pos":[1991,2006]},{"content":"To call the standard C function, use <ph id=\"ph1\">`PInvoke`</ph>.","pos":[2007,2054],"source":" To call the standard C function, use `PInvoke`."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Platform Invoke Examples<ept id=\"p1\">](http://msdn.microsoft.com/Library/15926806-f0b7-487e-93a6-4e9367ec689f)</ept>.","pos":[2055,2180],"source":" For more information, see [Platform Invoke Examples](http://msdn.microsoft.com/Library/15926806-f0b7-487e-93a6-4e9367ec689f)."},{"pos":[2189,2201],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"content":"Routine","pos":[2208,2215]},{"content":"Required header","pos":[2216,2231]},{"content":"<ph id=\"ph1\">\\&lt;</ph>time.h&gt;","pos":[2292,2301],"source":"\\<time.h>"},{"pos":[2309,2393],"content":"For more information, see <bpt id=\"p1\">[</bpt>Compatibility<ept id=\"p1\">](../../c-runtime-library/compatibility.md)</ept>.","source":"For more information, see [Compatibility](../../c-runtime-library/compatibility.md)."},{"pos":[2402,2410],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Time Management<ept id=\"p1\">](../../c-runtime-library/time-management.md)</ept><ph id=\"ph1\"> </ph>","pos":[2414,2476],"source":"[Time Management](../../c-runtime-library/time-management.md) "},{"content":"<bpt id=\"p1\"> [</bpt>errno, _doserrno, _sys_errlist, and _sys_nerr<ept id=\"p1\">](../../c-runtime-library/errno-doserrno-sys-errlist-and-sys-nerr.md)</ept><ph id=\"ph1\"> </ph>","pos":[2479,2596],"source":" [errno, _doserrno, _sys_errlist, and _sys_nerr](../../c-runtime-library/errno-doserrno-sys-errlist-and-sys-nerr.md) "},{"content":"<bpt id=\"p1\"> [</bpt>_get_dstbias<ept id=\"p1\">](../../c-runtime-library/reference/get-dstbias.md)</ept><ph id=\"ph1\"> </ph>","pos":[2599,2665],"source":" [_get_dstbias](../../c-runtime-library/reference/get-dstbias.md) "},{"content":"<bpt id=\"p1\"> [</bpt>_get_timezone<ept id=\"p1\">](../../c-runtime-library/reference/get-timezone.md)</ept><ph id=\"ph1\"> </ph>","pos":[2668,2736],"source":" [_get_timezone](../../c-runtime-library/reference/get-timezone.md) "},{"content":"<bpt id=\"p1\"> [</bpt>_get_tzname<ept id=\"p1\">](../../c-runtime-library/reference/get-tzname.md)</ept>","pos":[2739,2802],"source":" [_get_tzname](../../c-runtime-library/reference/get-tzname.md)"}],"content":"---\ntitle: \"_get_daylight | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\napiname: \n  - \"__daylight\"\n  - \"_get_daylight\"\napilocation: \n  - \"msvcrt.dll\"\n  - \"msvcr80.dll\"\n  - \"msvcr90.dll\"\n  - \"msvcr100.dll\"\n  - \"msvcr100_clr0400.dll\"\n  - \"msvcr110.dll\"\n  - \"msvcr110_clr0400.dll\"\n  - \"msvcr120.dll\"\n  - \"msvcr120_clr0400.dll\"\n  - \"ucrtbase.dll\"\n  - \"api-ms-win-crt-time-l1-1-0.dll\"\napitype: \"DLLExport\"\nf1_keywords: \n  - \"get_daylight\"\n  - \"_get_daylight\"\ndev_langs: \n  - \"C++\"\n  - \"C\"\nhelpviewer_keywords: \n  - \"get_daylight function\"\n  - \"daylight saving time offset\"\n  - \"_get_daylight function\"\nms.assetid: f85a6ba3-e187-4ca7-aed7-ffc694c8ac4c\ncaps.latest.revision: 17\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# _get_daylight\nRetrieves the daylight saving time offset in hours.  \n  \n## Syntax  \n  \n```  \n  \n      error_t _get_daylight(   \n    int* hours  \n);  \n```  \n  \n#### Parameters  \n `hours`  \n The offset in hours of daylight saving time.  \n  \n## Return Value  \n Zero if successful or an `errno` value if an error occurs.  \n  \n## Remarks  \n The `_get_daylight` function retrieves the number of hours in daylight saving time as an integer. If daylight saving time is in effect, the default offset is one hour (although a few regions do observe a two-hour offset).  \n  \n If `hours` is `NULL`, the invalid parameter handler is invoked as described in [Parameter Validation](../../c-runtime-library/parameter-validation.md). If execution is allowed to continue, this function sets `errno` to `EINVAL` and returns `EINVAL`.  \n  \n We recommend you use this function instead of the macro `_daylight` or the deprecated function `__daylight`.  \n  \n## .NET Framework Equivalent  \n Not applicable. To call the standard C function, use `PInvoke`. For more information, see [Platform Invoke Examples](http://msdn.microsoft.com/Library/15926806-f0b7-487e-93a6-4e9367ec689f).  \n  \n## Requirements  \n  \n|Routine|Required header|  \n|-------------|---------------------|  \n|`_get_daylight`|\\<time.h>|  \n  \n For more information, see [Compatibility](../../c-runtime-library/compatibility.md).  \n  \n## See Also  \n [Time Management](../../c-runtime-library/time-management.md)   \n [errno, _doserrno, _sys_errlist, and _sys_nerr](../../c-runtime-library/errno-doserrno-sys-errlist-and-sys-nerr.md)   \n [_get_dstbias](../../c-runtime-library/reference/get-dstbias.md)   \n [_get_timezone](../../c-runtime-library/reference/get-timezone.md)   \n [_get_tzname](../../c-runtime-library/reference/get-tzname.md)"}