{"nodes":[{"pos":[12,46],"content":"CGlobalHeap Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"CGlobalHeap Class | Microsoft Docs","pos":[0,34]}]},{"pos":[652,669],"content":"CGlobalHeap Class","linkify":"CGlobalHeap Class","nodes":[{"content":"CGlobalHeap Class","pos":[0,17]}]},{"pos":[670,784],"content":"This class implements <bpt id=\"p1\">[</bpt>IAtlMemMgr<ept id=\"p1\">](../../atl/reference/iatlmemmgr-class.md)</ept> using the Win32 global heap functions.","source":"This class implements [IAtlMemMgr](../../atl/reference/iatlmemmgr-class.md) using the Win32 global heap functions."},{"pos":[792,902],"content":"[!IMPORTANT]\n This class and its members cannot be used in applications that execute in the Windows Runtime.","leadings":["","> "],"nodes":[{"content":"This class and its members cannot be used in applications that execute in the Windows Runtime.","pos":[14,108]}]},{"pos":[911,917],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[977,984],"content":"Members","linkify":"Members","nodes":[{"content":"Members","pos":[0,7]}]},{"pos":[994,1008],"content":"Public Methods","linkify":"Public Methods","nodes":[{"content":"Public Methods","pos":[0,14]}]},{"content":"Name","pos":[1015,1019]},{"content":"Description","pos":[1020,1031]},{"pos":[1069,1116],"content":"<bpt id=\"p1\">[</bpt>CGlobalHeap::Allocate<ept id=\"p1\">](#cglobalheap__allocate)</ept>","source":"[CGlobalHeap::Allocate](#cglobalheap__allocate)"},{"content":"Call this method to allocate a block of memory.","pos":[1117,1164]},{"pos":[1169,1208],"content":"<bpt id=\"p1\">[</bpt>CGlobalHeap::Free<ept id=\"p1\">](#cglobalheap__free)</ept>","source":"[CGlobalHeap::Free](#cglobalheap__free)"},{"content":"Call this method to free a block of memory allocated by this memory manager.","pos":[1209,1285]},{"pos":[1290,1335],"content":"<bpt id=\"p1\">[</bpt>CGlobalHeap::GetSize<ept id=\"p1\">](#cglobalheap__getsize)</ept>","source":"[CGlobalHeap::GetSize](#cglobalheap__getsize)"},{"content":"Call this method to get the allocated size of a memory block allocated by this memory manager.","pos":[1336,1430]},{"pos":[1435,1486],"content":"<bpt id=\"p1\">[</bpt>CGlobalHeap::Reallocate<ept id=\"p1\">](#cglobalheap__reallocate)</ept>","source":"[CGlobalHeap::Reallocate](#cglobalheap__reallocate)"},{"content":"Call this method to reallocate memory allocated by this memory manager.","pos":[1487,1558]},{"pos":[1568,1575],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[1579,1670],"content":"<ph id=\"ph1\">`CGlobalHeap`</ph> implements memory allocation functions using the Win32 global heap functions.","source":"`CGlobalHeap` implements memory allocation functions using the Win32 global heap functions."},{"pos":[1678,2078],"content":"[!NOTE]\n The global heap functions are slower than other memory management functions and do not provide as many features. Therefore, new applications should use the [heap functions](http://msdn.microsoft.com/library/windows/desktop/aa366711). These are available in the [CWin32Heap](../../atl/reference/cwin32heap-class.md) class. Global functions are still used by DDE and the clipboard functions.","leadings":["","> "],"nodes":[{"content":" The global heap functions are slower than other memory management functions and do not provide as many features. Therefore, new applications should use the [heap functions](http://msdn.microsoft.com/library/windows/desktop/aa366711). These are available in the [CWin32Heap](../../atl/reference/cwin32heap-class.md) class. Global functions are still used by DDE and the clipboard functions.","pos":[8,398],"nodes":[{"content":"The global heap functions are slower than other memory management functions and do not provide as many features.","pos":[1,113]},{"content":"Therefore, new applications should use the <bpt id=\"p1\">[</bpt>heap functions<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/aa366711)</ept>.","pos":[114,234],"source":" Therefore, new applications should use the [heap functions](http://msdn.microsoft.com/library/windows/desktop/aa366711)."},{"content":"These are available in the <bpt id=\"p1\">[</bpt>CWin32Heap<ept id=\"p1\">](../../atl/reference/cwin32heap-class.md)</ept> class.","pos":[235,322],"source":" These are available in the [CWin32Heap](../../atl/reference/cwin32heap-class.md) class."},{"content":"Global functions are still used by DDE and the clipboard functions.","pos":[323,390]}]}]},{"pos":[2087,2094],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[2098,2172],"content":"See the example for <bpt id=\"p1\">[</bpt>IAtlMemMgr<ept id=\"p1\">](../../atl/reference/iatlmemmgr-class.md)</ept>.","source":"See the example for [IAtlMemMgr](../../atl/reference/iatlmemmgr-class.md)."},{"pos":[2181,2202],"content":"Inheritance Hierarchy","linkify":"Inheritance Hierarchy","nodes":[{"content":"Inheritance Hierarchy","pos":[0,21]}]},{"pos":[2247,2259],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[2263,2283],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> atlmem.h","source":"**Header:** atlmem.h"},{"pos":[2293,2352],"content":"<bpt id=\"p1\">&lt;a name=\"cglobalheap__allocate\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CGlobalHeap::Allocate","linkify":"<a name=\"cglobalheap__allocate\"></a>  CGlobalHeap::Allocate","source":"<a name=\"cglobalheap__allocate\"></a>  CGlobalHeap::Allocate"},{"content":"Call this method to allocate a block of memory.","pos":[2356,2403]},{"pos":[2495,2505],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"The requested number of bytes in the new memory block.","pos":[2521,2575]},{"pos":[2585,2597],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Returns a pointer to the start of the newly allocated memory block.","pos":[2601,2668]},{"pos":[2678,2685],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[2689,2833],"content":"Call <bpt id=\"p1\">[</bpt>CGlobalHeap::Free<ept id=\"p1\">](#cglobalheap__free)</ept> or <bpt id=\"p2\">[</bpt>CGlobalHeap::Reallocate<ept id=\"p2\">](#cglobalheap__reallocate)</ept> to free the memory allocated by this method.","source":"Call [CGlobalHeap::Free](#cglobalheap__free) or [CGlobalHeap::Reallocate](#cglobalheap__reallocate) to free the memory allocated by this method."},{"pos":[2840,2972],"content":"Implemented using <bpt id=\"p1\">[</bpt>GlobalAlloc<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/aa366574)</ept> with a flag parameter of <bpt id=\"p2\">**</bpt>GMEM_FIXED<ept id=\"p2\">**</ept>.","source":"Implemented using [GlobalAlloc](http://msdn.microsoft.com/library/windows/desktop/aa366574) with a flag parameter of **GMEM_FIXED**."},{"pos":[2982,3033],"content":"<bpt id=\"p1\">&lt;a name=\"cglobalheap__free\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CGlobalHeap::Free","linkify":"<a name=\"cglobalheap__free\"></a>  CGlobalHeap::Free","source":"<a name=\"cglobalheap__free\"></a>  CGlobalHeap::Free"},{"content":"Call this method to free a block of memory allocated by this memory manager.","pos":[3037,3113]},{"pos":[3172,3182],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Pointer to memory previously allocated by this memory manager.","pos":[3193,3255]},{"content":"NULL is a valid value and does nothing.","pos":[3256,3295]},{"pos":[3305,3312],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[3316,3407],"content":"Implemented using <bpt id=\"p1\">[</bpt>GlobalFree<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/aa366579)</ept>.","source":"Implemented using [GlobalFree](http://msdn.microsoft.com/library/windows/desktop/aa366579)."},{"pos":[3417,3474],"content":"<bpt id=\"p1\">&lt;a name=\"cglobalheap__getsize\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CGlobalHeap::GetSize","linkify":"<a name=\"cglobalheap__getsize\"></a>  CGlobalHeap::GetSize","source":"<a name=\"cglobalheap__getsize\"></a>  CGlobalHeap::GetSize"},{"content":"Call this method to get the allocated size of a memory block allocated by this memory manager.","pos":[3478,3572]},{"pos":[3636,3646],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Pointer to memory previously allocated by this memory manager.","pos":[3657,3719]},{"pos":[3729,3741],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Returns the size of the allocated memory block in bytes.","pos":[3745,3801]},{"pos":[3811,3818],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[3822,3913],"content":"Implemented using <bpt id=\"p1\">[</bpt>GlobalSize<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/aa366593)</ept>.","source":"Implemented using [GlobalSize](http://msdn.microsoft.com/library/windows/desktop/aa366593)."},{"pos":[3923,3986],"content":"<bpt id=\"p1\">&lt;a name=\"cglobalheap__reallocate\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CGlobalHeap::Reallocate","linkify":"<a name=\"cglobalheap__reallocate\"></a>  CGlobalHeap::Reallocate","source":"<a name=\"cglobalheap__reallocate\"></a>  CGlobalHeap::Reallocate"},{"content":"Call this method to reallocate memory allocated by this memory manager.","pos":[3990,4061]},{"pos":[4170,4180],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Pointer to memory previously allocated by this memory manager.","pos":[4191,4253]},{"content":"The requested number of bytes in the new memory block.","pos":[4272,4326]},{"pos":[4336,4348],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Returns a pointer to the start of the newly allocated memory block.","pos":[4352,4419]},{"pos":[4429,4436],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[4440,4529],"content":"Call <bpt id=\"p1\">[</bpt>CGlobalHeap::Free<ept id=\"p1\">](#cglobalheap__free)</ept> to free the memory allocated by this method.","source":"Call [CGlobalHeap::Free](#cglobalheap__free) to free the memory allocated by this method."},{"pos":[4536,4630],"content":"Implemented using <bpt id=\"p1\">[</bpt>GlobalReAlloc<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/aa366590)</ept>.","source":"Implemented using [GlobalReAlloc](http://msdn.microsoft.com/library/windows/desktop/aa366590)."},{"pos":[4639,4647],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Class Overview<ept id=\"p1\">](../../atl/atl-class-overview.md)</ept><ph id=\"ph1\"> </ph>","pos":[4651,4701],"source":"[Class Overview](../../atl/atl-class-overview.md) "},{"content":"<bpt id=\"p1\"> [</bpt>CComHeap Class<ept id=\"p1\">](../../atl/reference/ccomheap-class.md)</ept><ph id=\"ph1\"> </ph>","pos":[4704,4761],"source":" [CComHeap Class](../../atl/reference/ccomheap-class.md) "},{"content":"<bpt id=\"p1\"> [</bpt>CWin32Heap Class<ept id=\"p1\">](../../atl/reference/cwin32heap-class.md)</ept><ph id=\"ph1\"> </ph>","pos":[4764,4825],"source":" [CWin32Heap Class](../../atl/reference/cwin32heap-class.md) "},{"content":"<bpt id=\"p1\"> [</bpt>CLocalHeap Class<ept id=\"p1\">](../../atl/reference/clocalheap-class.md)</ept><ph id=\"ph1\"> </ph>","pos":[4828,4889],"source":" [CLocalHeap Class](../../atl/reference/clocalheap-class.md) "},{"content":"<bpt id=\"p1\"> [</bpt>CCRTHeap Class<ept id=\"p1\">](../../atl/reference/ccrtheap-class.md)</ept><ph id=\"ph1\"> </ph>","pos":[4892,4949],"source":" [CCRTHeap Class](../../atl/reference/ccrtheap-class.md) "},{"content":"<bpt id=\"p1\"> [</bpt>IAtlMemMgr Class<ept id=\"p1\">](../../atl/reference/iatlmemmgr-class.md)</ept>","pos":[4952,5012],"source":" [IAtlMemMgr Class](../../atl/reference/iatlmemmgr-class.md)"}],"content":"---\ntitle: \"CGlobalHeap Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"ATL.CGlobalHeap\"\n  - \"ATL::CGlobalHeap\"\n  - \"CGlobalHeap\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"CGlobalHeap class\"\nms.assetid: e348d838-3aa7-4bee-a1b3-cd000c99f834\ncaps.latest.revision: 19\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# CGlobalHeap Class\nThis class implements [IAtlMemMgr](../../atl/reference/iatlmemmgr-class.md) using the Win32 global heap functions.  \n  \n> [!IMPORTANT]\n>  This class and its members cannot be used in applications that execute in the Windows Runtime.  \n  \n## Syntax  \n  \n```\nclass CGlobalHeap : public IAtlMemMgr\n```  \n  \n## Members  \n  \n### Public Methods  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CGlobalHeap::Allocate](#cglobalheap__allocate)|Call this method to allocate a block of memory.|  \n|[CGlobalHeap::Free](#cglobalheap__free)|Call this method to free a block of memory allocated by this memory manager.|  \n|[CGlobalHeap::GetSize](#cglobalheap__getsize)|Call this method to get the allocated size of a memory block allocated by this memory manager.|  \n|[CGlobalHeap::Reallocate](#cglobalheap__reallocate)|Call this method to reallocate memory allocated by this memory manager.|  \n  \n## Remarks  \n `CGlobalHeap` implements memory allocation functions using the Win32 global heap functions.  \n  \n> [!NOTE]\n>  The global heap functions are slower than other memory management functions and do not provide as many features. Therefore, new applications should use the [heap functions](http://msdn.microsoft.com/library/windows/desktop/aa366711). These are available in the [CWin32Heap](../../atl/reference/cwin32heap-class.md) class. Global functions are still used by DDE and the clipboard functions.  \n  \n## Example  \n See the example for [IAtlMemMgr](../../atl/reference/iatlmemmgr-class.md).  \n  \n## Inheritance Hierarchy  \n `IAtlMemMgr`  \n  \n `CGlobalHeap`  \n  \n## Requirements  \n **Header:** atlmem.h  \n  \n##  <a name=\"cglobalheap__allocate\"></a>  CGlobalHeap::Allocate  \n Call this method to allocate a block of memory.  \n  \n```\nvirtual __declspec(allocator) void* Allocate(size_t nBytes) throw();\n```  \n  \n### Parameters  \n `nBytes`  \n The requested number of bytes in the new memory block.  \n  \n### Return Value  \n Returns a pointer to the start of the newly allocated memory block.  \n  \n### Remarks  \n Call [CGlobalHeap::Free](#cglobalheap__free) or [CGlobalHeap::Reallocate](#cglobalheap__reallocate) to free the memory allocated by this method.  \n  \n Implemented using [GlobalAlloc](http://msdn.microsoft.com/library/windows/desktop/aa366574) with a flag parameter of **GMEM_FIXED**.  \n  \n##  <a name=\"cglobalheap__free\"></a>  CGlobalHeap::Free  \n Call this method to free a block of memory allocated by this memory manager.  \n  \n```\nvirtual void Free(void* p) throw();\n```  \n  \n### Parameters  \n `p`  \n Pointer to memory previously allocated by this memory manager. NULL is a valid value and does nothing.  \n  \n### Remarks  \n Implemented using [GlobalFree](http://msdn.microsoft.com/library/windows/desktop/aa366579).  \n  \n##  <a name=\"cglobalheap__getsize\"></a>  CGlobalHeap::GetSize  \n Call this method to get the allocated size of a memory block allocated by this memory manager.  \n  \n```\nvirtual size_t GetSize(void* p) throw();\n```  \n  \n### Parameters  \n `p`  \n Pointer to memory previously allocated by this memory manager.  \n  \n### Return Value  \n Returns the size of the allocated memory block in bytes.  \n  \n### Remarks  \n Implemented using [GlobalSize](http://msdn.microsoft.com/library/windows/desktop/aa366593).  \n  \n##  <a name=\"cglobalheap__reallocate\"></a>  CGlobalHeap::Reallocate  \n Call this method to reallocate memory allocated by this memory manager.  \n  \n```\nvirtual __declspec(allocator) void* Reallocate(\n    void* p,  size_t nBytes) throw();\n```  \n  \n### Parameters  \n `p`  \n Pointer to memory previously allocated by this memory manager.  \n  \n `nBytes`  \n The requested number of bytes in the new memory block.  \n  \n### Return Value  \n Returns a pointer to the start of the newly allocated memory block.  \n  \n### Remarks  \n Call [CGlobalHeap::Free](#cglobalheap__free) to free the memory allocated by this method.  \n  \n Implemented using [GlobalReAlloc](http://msdn.microsoft.com/library/windows/desktop/aa366590).  \n  \n## See Also  \n [Class Overview](../../atl/atl-class-overview.md)   \n [CComHeap Class](../../atl/reference/ccomheap-class.md)   \n [CWin32Heap Class](../../atl/reference/cwin32heap-class.md)   \n [CLocalHeap Class](../../atl/reference/clocalheap-class.md)   \n [CCRTHeap Class](../../atl/reference/ccrtheap-class.md)   \n [IAtlMemMgr Class](../../atl/reference/iatlmemmgr-class.md)\n"}