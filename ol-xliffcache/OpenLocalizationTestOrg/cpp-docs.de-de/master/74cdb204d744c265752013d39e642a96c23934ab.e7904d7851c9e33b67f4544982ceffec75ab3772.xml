{"nodes":[{"pos":[12,41],"content":"to Functions | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"to Functions | Microsoft Docs","pos":[0,29]}]},{"content":"to Functions","pos":[952,964]},{"pos":[965,1077],"content":"Each of the <bpt id=\"p1\">**</bpt>to<ept id=\"p1\">**</ept> functions and its associated macro, if any, converts a single character to another character.","source":"Each of the **to** functions and its associated macro, if any, converts a single character to another character."},{"content":"__toascii","pos":[1099,1108]},{"content":"toupper, _toupper, towupper","pos":[1162,1189]},{"content":"tolower, _tolower, towlower","pos":[1277,1304]},{"content":"Remarks","pos":[1397,1404]},{"pos":[1408,1466],"content":"The <bpt id=\"p1\">**</bpt>to<ept id=\"p1\">**</ept> functions and macro conversions are as follows.","source":"The **to** functions and macro conversions are as follows."},{"content":"Routine","pos":[1473,1480]},{"content":"Macro","pos":[1481,1486]},{"content":"Description","pos":[1487,1498]},{"pos":[1575,1606],"content":"Converts <ph id=\"ph1\">`c`</ph> to ASCII character","source":"Converts `c` to ASCII character"},{"pos":[1631,1671],"content":"Converts <ph id=\"ph1\">`c`</ph> to lowercase if appropriate","source":"Converts `c` to lowercase if appropriate"},{"pos":[1698,1723],"content":"Converts <ph id=\"ph1\">`c`</ph> to lowercase","source":"Converts `c` to lowercase"},{"content":"None","pos":[1739,1743]},{"pos":[1744,1805],"content":"Converts <ph id=\"ph1\">`c`</ph> to corresponding wide-character lowercase letter","source":"Converts `c` to corresponding wide-character lowercase letter"},{"pos":[1830,1870],"content":"Converts <ph id=\"ph1\">`c`</ph> to uppercase if appropriate","source":"Converts `c` to uppercase if appropriate"},{"pos":[1897,1922],"content":"Converts <ph id=\"ph1\">`c`</ph> to uppercase","source":"Converts `c` to uppercase"},{"content":"None","pos":[1938,1942]},{"content":"Converts c to corresponding wide-character uppercase letter","pos":[1943,2002]},{"content":"To use the function versions of the <bpt id=\"p1\">**</bpt>to<ept id=\"p1\">**</ept> routines that are also defined as macros, either remove the macro definitions with <ph id=\"ph1\">`#undef`</ph> directives or do not include CTYPE.H.","pos":[2010,2182],"source":"To use the function versions of the **to** routines that are also defined as macros, either remove the macro definitions with `#undef` directives or do not include CTYPE.H."},{"content":"If you use the /Za compiler option, the compiler uses the function version of <ph id=\"ph1\">`toupper`</ph> or <ph id=\"ph2\">`tolower`</ph>.","pos":[2183,2284],"source":" If you use the /Za compiler option, the compiler uses the function version of `toupper` or `tolower`."},{"content":"Declarations of the <ph id=\"ph1\">`toupper`</ph> and <ph id=\"ph2\">`tolower`</ph> functions are in STDLIB.H.","pos":[2285,2355],"source":" Declarations of the `toupper` and `tolower` functions are in STDLIB.H."},{"content":"The <ph id=\"ph1\">`__toascii`</ph> routine sets all but the low-order 7 bits of <ph id=\"ph2\">`c`</ph> to 0, so that the converted value represents a character in the ASCII character set.","pos":[2362,2511],"source":"The `__toascii` routine sets all but the low-order 7 bits of `c` to 0, so that the converted value represents a character in the ASCII character set."},{"content":"If <ph id=\"ph1\">`c`</ph> already represents an ASCII character, <ph id=\"ph2\">`c`</ph> is unchanged.","pos":[2512,2575],"source":" If `c` already represents an ASCII character, `c` is unchanged."},{"pos":[2582,2619],"content":"The <ph id=\"ph1\">`tolower`</ph> and <ph id=\"ph2\">`toupper`</ph> routines:","source":"The `tolower` and `toupper` routines:"},{"pos":[2629,2750],"content":"Are dependent on the <ph id=\"ph1\">`LC_CTYPE`</ph> category of the current locale (<ph id=\"ph2\">`tolower`</ph> calls <ph id=\"ph3\">`isupper`</ph> and <ph id=\"ph4\">`toupper`</ph> calls <ph id=\"ph5\">`islower`</ph>).","source":"Are dependent on the `LC_CTYPE` category of the current locale (`tolower` calls `isupper` and `toupper` calls `islower`)."},{"content":"Convert <ph id=\"ph1\">`c`</ph> if <ph id=\"ph2\">`c`</ph> represents a convertible letter of the appropriate case in the current locale and the opposite case exists for that locale.","pos":[2760,2902],"source":"Convert `c` if `c` represents a convertible letter of the appropriate case in the current locale and the opposite case exists for that locale."},{"content":"Otherwise, <ph id=\"ph1\">`c`</ph> is unchanged.","pos":[2903,2931],"source":" Otherwise, `c` is unchanged."},{"pos":[2938,2977],"content":"The <ph id=\"ph1\">`_tolower`</ph> and <ph id=\"ph2\">`_toupper`</ph> routines:","source":"The `_tolower` and `_toupper` routines:"},{"pos":[2987,3061],"content":"Are locale-independent, much faster versions of <ph id=\"ph1\">`tolower`</ph> and <bpt id=\"p1\">**</bpt>toupper.<ept id=\"p1\">**</ept>","source":"Are locale-independent, much faster versions of `tolower` and **toupper.**"},{"pos":[3071,3197],"content":"Can be used only when <bpt id=\"p1\">**</bpt>isascii(<ept id=\"p1\">**</ept><ph id=\"ph1\">`c`</ph><bpt id=\"p2\">**</bpt>)<ept id=\"p2\">**</ept> and either <bpt id=\"p3\">**</bpt>isupper(<ept id=\"p3\">**</ept><ph id=\"ph2\">`c`</ph><bpt id=\"p4\">**</bpt>)<ept id=\"p4\">**</ept> or <bpt id=\"p5\">**</bpt>islower(<ept id=\"p5\">**</ept><ph id=\"ph3\">`c`</ph><bpt id=\"p6\">**</bpt>)<ept id=\"p6\">**</ept>, respectively, are nonzero.","source":"Can be used only when **isascii(**`c`**)** and either **isupper(**`c`**)** or **islower(**`c`**)**, respectively, are nonzero."},{"pos":[3207,3299],"content":"Have undefined results if <ph id=\"ph1\">`c`</ph> is not an ASCII letter of the appropriate case for converting.","source":"Have undefined results if `c` is not an ASCII letter of the appropriate case for converting."},{"content":"The <ph id=\"ph1\">`towlower`</ph> and <ph id=\"ph2\">`towupper`</ph> functions return a converted copy of <ph id=\"ph3\">`c`</ph> if and only if both of the following conditions are nonzero.","pos":[3306,3437],"source":"The `towlower` and `towupper` functions return a converted copy of `c` if and only if both of the following conditions are nonzero."},{"content":"Otherwise, <ph id=\"ph1\">`c`</ph> is unchanged.","pos":[3438,3466],"source":" Otherwise, `c` is unchanged."},{"pos":[3480,3598],"content":"is a wide character of the appropriate case (that is, for which <ph id=\"ph1\">`iswupper`</ph> or <bpt id=\"p1\">**</bpt>iswlower,<ept id=\"p1\">**</ept> respectively, is nonzero).","source":" is a wide character of the appropriate case (that is, for which `iswupper` or **iswlower,** respectively, is nonzero)."},{"pos":[3608,3741],"content":"There is a corresponding wide character of the target case (that is, for which <ph id=\"ph1\">`iswlower`</ph> or <bpt id=\"p1\">**</bpt>iswupper,<ept id=\"p1\">**</ept> respectively, is nonzero).","source":"There is a corresponding wide character of the target case (that is, for which `iswlower` or **iswupper,** respectively, is nonzero)."},{"content":"Example","pos":[3750,3757]},{"content":"See Also","pos":[4562,4570]},{"content":"Data Conversion","pos":[4575,4590]},{"content":"Locale","pos":[4638,4644]},{"content":"is, isw Routines","pos":[4683,4699]}],"content":"---\ntitle: \"to Functions | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\napilocation: \n  - \"msvcr120.dll\"\n  - \"msvcr90.dll\"\n  - \"msvcr110.dll\"\n  - \"msvcr110_clr0400.dll\"\n  - \"msvcr80.dll\"\n  - \"msvcr100.dll\"\napitype: \"DLLExport\"\nf1_keywords: \n  - \"To\"\ndev_langs: \n  - \"C++\"\n  - \"C\"\nhelpviewer_keywords: \n  - \"to functions\"\n  - \"string conversion, to different characters\"\n  - \"string conversion, case\"\n  - \"lowercase, converting strings\"\n  - \"uppercase, converting strings\"\n  - \"case, converting\"\n  - \"characters, converting\"\nms.assetid: f636a4c6-8c9f-4be2-baac-064f9dbae300\ncaps.latest.revision: 13\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# to Functions\nEach of the **to** functions and its associated macro, if any, converts a single character to another character.  \n  \n|||  \n|-|-|  \n|[__toascii](../c-runtime-library/reference/toascii-toascii.md)|[toupper, _toupper, towupper](../c-runtime-library/reference/toupper-toupper-towupper-toupper-l-towupper-l.md)|  \n|[tolower, _tolower, towlower](../c-runtime-library/reference/tolower-tolower-towlower-tolower-l-towlower-l.md)||  \n  \n## Remarks  \n The **to** functions and macro conversions are as follows.  \n  \n|Routine|Macro|Description|  \n|-------------|-----------|-----------------|  \n|`__toascii`|`__toascii`|Converts `c` to ASCII character|  \n|`tolower`|`tolower`|Converts `c` to lowercase if appropriate|  \n|`_tolower`|`_tolower`|Converts `c` to lowercase|  \n|`towlower`|None|Converts `c` to corresponding wide-character lowercase letter|  \n|`toupper`|`toupper`|Converts `c` to uppercase if appropriate|  \n|`_toupper`|`_toupper`|Converts `c` to uppercase|  \n|`towupper`|None|Converts c to corresponding wide-character uppercase letter|  \n  \n To use the function versions of the **to** routines that are also defined as macros, either remove the macro definitions with `#undef` directives or do not include CTYPE.H. If you use the /Za compiler option, the compiler uses the function version of `toupper` or `tolower`. Declarations of the `toupper` and `tolower` functions are in STDLIB.H.  \n  \n The `__toascii` routine sets all but the low-order 7 bits of `c` to 0, so that the converted value represents a character in the ASCII character set. If `c` already represents an ASCII character, `c` is unchanged.  \n  \n The `tolower` and `toupper` routines:  \n  \n-   Are dependent on the `LC_CTYPE` category of the current locale (`tolower` calls `isupper` and `toupper` calls `islower`).  \n  \n-   Convert `c` if `c` represents a convertible letter of the appropriate case in the current locale and the opposite case exists for that locale. Otherwise, `c` is unchanged.  \n  \n The `_tolower` and `_toupper` routines:  \n  \n-   Are locale-independent, much faster versions of `tolower` and **toupper.**  \n  \n-   Can be used only when **isascii(**`c`**)** and either **isupper(**`c`**)** or **islower(**`c`**)**, respectively, are nonzero.  \n  \n-   Have undefined results if `c` is not an ASCII letter of the appropriate case for converting.  \n  \n The `towlower` and `towupper` functions return a converted copy of `c` if and only if both of the following conditions are nonzero. Otherwise, `c` is unchanged.  \n  \n-   `c` is a wide character of the appropriate case (that is, for which `iswupper` or **iswlower,** respectively, is nonzero).  \n  \n-   There is a corresponding wide character of the target case (that is, for which `iswlower` or **iswupper,** respectively, is nonzero).  \n  \n## Example  \n  \n```  \n// crt_toupper.c  \n/* This program uses toupper and tolower to  \n * analyze all characters between 0x0 and 0x7F. It also  \n * applies _toupper and _tolower to any code in this  \n * range for which these functions make sense.  \n */  \n  \n#include <ctype.h>  \n#include <string.h>  \n  \nchar msg[] = \"Some of THESE letters are Capitals.\";  \nchar *p;  \n  \nint main( void )  \n{  \n   printf( \"%s\\n\", msg );  \n  \n   /* Reverse case of message. */  \n   for( p = msg; p < msg + strlen( msg ); p++ )  \n   {  \n      if( islower( *p ) )  \n         putchar( _toupper( *p ) );  \n      else if( isupper( *p ) )  \n         putchar( _tolower( *p ) );  \n      else  \n         putchar( *p );  \n   }  \n}  \n```  \n  \n```Output  \nSome of THESE letters are Capitals.  \nsOME OF these LETTERS ARE cAPITALS.  \n```  \n  \n## See Also  \n [Data Conversion](../c-runtime-library/data-conversion.md)   \n [Locale](../c-runtime-library/locale.md)   \n [is, isw Routines](../c-runtime-library/is-isw-routines.md)"}