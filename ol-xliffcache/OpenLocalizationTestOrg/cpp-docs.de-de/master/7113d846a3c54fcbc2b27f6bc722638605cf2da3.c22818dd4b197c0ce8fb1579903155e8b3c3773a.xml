{"nodes":[{"pos":[12,46],"content":"CComHeapPtr Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"CComHeapPtr Class | Microsoft Docs","pos":[0,34]}]},{"content":"CComHeapPtr Class","pos":[703,720]},{"content":"A smart pointer class for managing heap pointers.","pos":[721,770]},{"content":"Syntax","pos":[779,785]},{"content":"Parameters","pos":[884,894]},{"content":"The object type to be stored on the heap.","pos":[905,946]},{"content":"Members","pos":[955,962]},{"content":"Public Constructors","pos":[972,991]},{"content":"Name","pos":[998,1002]},{"content":"Description","pos":[1003,1014]},{"content":"CComHeapPtr::CComHeapPtr","pos":[1053,1077]},{"content":"The constructor.","pos":[1106,1122]},{"content":"Remarks","pos":[1132,1139]},{"content":"derives from <ph id=\"ph1\">`CHeapPtr`</ph>, but uses <bpt id=\"p1\">[</bpt>CComAllocator<ept id=\"p1\">](../../atl/reference/ccomallocator-class.md)</ept> to allocate memory using COM routines.","pos":[1157,1289],"source":" derives from `CHeapPtr`, but uses [CComAllocator](../../atl/reference/ccomallocator-class.md) to allocate memory using COM routines."},{"content":"See <bpt id=\"p1\">[</bpt>CHeapPtr<ept id=\"p1\">](../../atl/reference/cheapptr-class.md)</ept> and <bpt id=\"p2\">[</bpt>CHeapPtrBase<ept id=\"p2\">](../../atl/reference/cheapptrbase-class.md)</ept> for the methods available.","pos":[1290,1432],"source":" See [CHeapPtr](../../atl/reference/cheapptr-class.md) and [CHeapPtrBase](../../atl/reference/cheapptrbase-class.md) for the methods available."},{"content":"Inheritance Hierarchy","pos":[1441,1462]},{"content":"CHeapPtrBase","pos":[1467,1479]},{"content":"CHeapPtr","pos":[1531,1539]},{"content":"Requirements","pos":[1608,1620]},{"pos":[1624,1645],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> atlbase.h","source":"**Header:** atlbase.h"},{"pos":[1696,1720],"content":"CComHeapPtr::CComHeapPtr"},{"content":"The constructor.","pos":[1724,1740]},{"content":"Parameters","pos":[1826,1836]},{"content":"An existing <ph id=\"ph1\">`CComHeapPtr`</ph> object.","pos":[1851,1884],"source":" An existing `CComHeapPtr` object."},{"content":"Remarks","pos":[1894,1901]},{"content":"The heap pointer can optionally be created using an existing <ph id=\"ph1\">`CComHeapPtr`</ph> object.","pos":[1905,1987],"source":"The heap pointer can optionally be created using an existing `CComHeapPtr` object."},{"content":"If so, the new <ph id=\"ph1\">`CComHeapPtr`</ph> object assumes responsibility for managing the new pointer and resources.","pos":[1988,2090],"source":" If so, the new `CComHeapPtr` object assumes responsibility for managing the new pointer and resources."},{"content":"See Also","pos":[2099,2107]},{"content":"CHeapPtr Class","pos":[2112,2126]},{"content":"CHeapPtrBase Class","pos":[2172,2190]},{"content":"CComAllocator Class","pos":[2240,2259]},{"content":"Class Overview","pos":[2310,2324]}],"content":"---\ntitle: \"CComHeapPtr Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"ATL::CComHeapPtr\"\n  - \"ATL.CComHeapPtr<T>\"\n  - \"ATL::CComHeapPtr<T>\"\n  - \"CComHeapPtr\"\n  - \"ATL.CComHeapPtr\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"CComHeapPtr class\"\nms.assetid: bd08b53d-da2b-43ab-a79c-e7c8dbbc5994\ncaps.latest.revision: 19\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# CComHeapPtr Class\nA smart pointer class for managing heap pointers.  \n  \n## Syntax  \n  \n```\ntemplate<typename T> class CComHeapPtr :  public CHeapPtr<T,CComAllocator>\n```  \n  \n#### Parameters  \n `T`  \n The object type to be stored on the heap.  \n  \n## Members  \n  \n### Public Constructors  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CComHeapPtr::CComHeapPtr](#ccomheapptr__ccomheapptr)|The constructor.|  \n  \n## Remarks  \n `CComHeapPtr` derives from `CHeapPtr`, but uses [CComAllocator](../../atl/reference/ccomallocator-class.md) to allocate memory using COM routines. See [CHeapPtr](../../atl/reference/cheapptr-class.md) and [CHeapPtrBase](../../atl/reference/cheapptrbase-class.md) for the methods available.  \n  \n## Inheritance Hierarchy  \n [CHeapPtrBase](../../atl/reference/cheapptrbase-class.md)  \n  \n [CHeapPtr](../../atl/reference/cheapptr-class.md)  \n  \n `CComHeapPtr`  \n  \n## Requirements  \n **Header:** atlbase.h  \n  \n##  <a name=\"ccomheapptr__ccomheapptr\"></a>  CComHeapPtr::CComHeapPtr  \n The constructor.  \n  \n```\nCComHeapPtr() throw();\nexplicit CComHeapPtr(T* pData) throw();\n```  \n  \n### Parameters  \n `pData`  \n An existing `CComHeapPtr` object.  \n  \n### Remarks  \n The heap pointer can optionally be created using an existing `CComHeapPtr` object. If so, the new `CComHeapPtr` object assumes responsibility for managing the new pointer and resources.  \n  \n## See Also  \n [CHeapPtr Class](../../atl/reference/cheapptr-class.md)   \n [CHeapPtrBase Class](../../atl/reference/cheapptrbase-class.md)   \n [CComAllocator Class](../../atl/reference/ccomallocator-class.md)   \n [Class Overview](../../atl/atl-class-overview.md)\n"}