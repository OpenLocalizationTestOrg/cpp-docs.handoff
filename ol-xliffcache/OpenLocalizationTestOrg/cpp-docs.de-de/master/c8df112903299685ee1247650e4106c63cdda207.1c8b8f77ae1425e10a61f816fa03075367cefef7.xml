{"nodes":[{"pos":[12,79],"content":"DAO Database Engine Initialization and Termination | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"DAO Database Engine Initialization and Termination | Microsoft Docs","pos":[0,67]}]},{"content":"DAO Database Engine Initialization and Termination","pos":[714,764]},{"content":"When using MFC DAO objects, the DAO database engine must first be initialized and then terminated before your application or DLL quits.","pos":[765,900]},{"content":"Two functions, <ph id=\"ph1\">`AfxDaoInit`</ph> and <ph id=\"ph2\">`AfxDaoTerm`</ph>, perform these tasks.","pos":[901,967],"source":" Two functions, `AfxDaoInit` and `AfxDaoTerm`, perform these tasks."},{"content":"DAO Database Engine Initialization and Termination","pos":[977,1027]},{"content":"AfxDaoInit","pos":[1049,1059]},{"content":"Initializes the DAO database engine.","pos":[1074,1110]},{"content":"AfxDaoTerm","pos":[1116,1126]},{"content":"Terminates the DAO database engine.","pos":[1141,1176]},{"pos":[1214,1224],"content":"AfxDaoInit"},{"content":"This function initializes the DAO database engine.","pos":[1228,1278]},{"content":"Remarks","pos":[1351,1358]},{"pos":[1362,1478],"content":"In most cases, you don't need to call <ph id=\"ph1\">`AfxDaoInit`</ph> because the application automatically calls it when it is needed.","source":"In most cases, you don't need to call `AfxDaoInit` because the application automatically calls it when it is needed."},{"pos":[1485,1647],"content":"For related information, and for an example of calling <ph id=\"ph1\">`AfxDaoInit`</ph>, see <bpt id=\"p1\">[</bpt>Technical Note 54<ept id=\"p1\">](../../mfc/tn054-calling-dao-directly-while-using-mfc-dao-classes.md)</ept>.","source":"For related information, and for an example of calling `AfxDaoInit`, see [Technical Note 54](../../mfc/tn054-calling-dao-directly-while-using-mfc-dao-classes.md)."},{"pos":[1684,1694],"content":"AfxDaoTerm"},{"content":"This function terminates the DAO database engine.","pos":[1698,1747]},{"content":"Remarks","pos":[1796,1803]},{"pos":[1807,1942],"content":"Typically, you only need to call this function in a regular DLL; an application will automatically call <ph id=\"ph1\">`AfxDaoTerm`</ph> when it is needed.","source":"Typically, you only need to call this function in a regular DLL; an application will automatically call `AfxDaoTerm` when it is needed."},{"pos":[1949,2070],"content":"In regular DLLs, call <ph id=\"ph1\">`AfxDaoTerm`</ph> before the <ph id=\"ph2\">`ExitInstance`</ph> function, but after all MFC DAO objects have been destroyed.","source":"In regular DLLs, call `AfxDaoTerm` before the `ExitInstance` function, but after all MFC DAO objects have been destroyed."},{"pos":[2077,2195],"content":"For related information, see <bpt id=\"p1\">[</bpt>Technical Note 54<ept id=\"p1\">](../../mfc/tn054-calling-dao-directly-while-using-mfc-dao-classes.md)</ept>.","source":"For related information, see [Technical Note 54](../../mfc/tn054-calling-dao-directly-while-using-mfc-dao-classes.md)."},{"content":"See Also","pos":[2204,2212]},{"content":"Macros and Globals","pos":[2217,2235]}],"content":"---\ntitle: \"DAO Database Engine Initialization and Termination | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"vc.mfc.macros.data\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"DAO (Data Access Objects), termination\"\n  - \"DAO (Data Access Objects), initialization\"\nms.assetid: a7edf31c-e7c2-4f3e-aada-63c3e48781da\ncaps.latest.revision: 13\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# DAO Database Engine Initialization and Termination\nWhen using MFC DAO objects, the DAO database engine must first be initialized and then terminated before your application or DLL quits. Two functions, `AfxDaoInit` and `AfxDaoTerm`, perform these tasks.  \n  \n### DAO Database Engine Initialization and Termination  \n  \n|||  \n|-|-|  \n|[AfxDaoInit](#afxdaoinit)|Initializes the DAO database engine.|  \n|[AfxDaoTerm](#afxdaoterm)|Terminates the DAO database engine.|  \n  \n##  <a name=\"afxdaoinit\"></a>  AfxDaoInit  \n This function initializes the DAO database engine.  \n  \n```  \n \nvoid AfxDaoInit();\n\nthrow(CDaoException*);\n\n \n```  \n  \n### Remarks  \n In most cases, you don't need to call `AfxDaoInit` because the application automatically calls it when it is needed.  \n  \n For related information, and for an example of calling `AfxDaoInit`, see [Technical Note 54](../../mfc/tn054-calling-dao-directly-while-using-mfc-dao-classes.md).  \n  \n##  <a name=\"afxdaoterm\"></a>  AfxDaoTerm  \n This function terminates the DAO database engine.  \n  \n```  \n \nvoid AfxDaoTerm();\n\n \n```  \n  \n### Remarks  \n Typically, you only need to call this function in a regular DLL; an application will automatically call `AfxDaoTerm` when it is needed.  \n  \n In regular DLLs, call `AfxDaoTerm` before the `ExitInstance` function, but after all MFC DAO objects have been destroyed.  \n  \n For related information, see [Technical Note 54](../../mfc/tn054-calling-dao-directly-while-using-mfc-dao-classes.md).  \n  \n## See Also  \n [Macros and Globals](../../mfc/reference/mfc-macros-and-globals.md)\n"}