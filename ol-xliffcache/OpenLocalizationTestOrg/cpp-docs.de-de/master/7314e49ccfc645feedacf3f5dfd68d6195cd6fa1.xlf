<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-04506c2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7314e49ccfc645feedacf3f5dfd68d6195cd6fa1</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\c-runtime-library\ismbc-routines.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7d998165018724ae436664e9bbe876b8cc02ea0b</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e2b0c555d59b1cc689d7b7b7b7adc5f48a586954</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>_ismbc Routines | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>_ismbc Routines</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Each <bpt id="p1">**</bpt>_ismbc<ept id="p1">**</ept> routine tests a given multibyte character <ph id="ph1">`c`</ph> for a particular condition.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>_ismbcalnum, _ismbcalnum_l, _ismbcalpha, _ismbcalpha_l, _ismbcdigit, _ismbcdigit_l</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>_ismbcl0, _ismbcl0_l, _ismbcl1, _ismbcl1_l, _ismbcl2, _ismbcl2_l</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>_ismbcgraph, _ismbcgraph_l, _ismbcprint, _ismbcprint_l, _ismbcpunct, _ismbcpunct_l, _ismbcblank, _ismbcblank_l, _ismbcspace, _ismbcspace_l</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>_ismbclegal, _ismbclegal_l, _ismbcsymbol, _ismbcsymbol_l</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>_ismbchira, _ismbchira_l, _ismbckata, _ismbckata_l</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>_ismbclower, _ismbclower_l, _ismbcupper, _ismbcupper_l</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The test result of each <bpt id="p1">**</bpt>_ismbc<ept id="p1">**</ept> routine depends on the multibyte code page in effect.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Multibyte code pages have single-byte alphabetic characters.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>By default, the multibyte code page is set to the system-default ANSI code page obtained from the operating system at program startup.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>You can query or change the multibyte code page in use with <bpt id="p1">[</bpt>_getmbcp<ept id="p1">](../c-runtime-library/reference/getmbcp.md)</ept> or <bpt id="p2">[</bpt>_setmbcp<ept id="p2">](../c-runtime-library/reference/setmbcp.md)</ept>, respectively.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The output value is affected by the <ph id="ph1">`LC_CTYPE`</ph> category setting of the locale; see <bpt id="p1">[</bpt>setlocale<ept id="p1">](../c-runtime-library/reference/setlocale-wsetlocale.md)</ept> for more information.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The versions of these functions without the <bpt id="p1">**</bpt>_l<ept id="p1">**</ept> suffix use the current locale for this locale-dependent behavior; the versions with the <bpt id="p2">**</bpt>_l<ept id="p2">**</ept> suffix are identical except that they use the locale parameter passed in instead.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Routine</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Test condition</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Code page 932 example</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>_ismbcalnum, _ismbcalnum_l</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Alphanumeric</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Returns nonzero if and only if <ph id="ph1">`c`</ph> is a single-byte representation of an ASCII English letter: See examples for <ph id="ph2">`_ismbcdigit`</ph> and <ph id="ph3">`_ismbcalpha`</ph>.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>_ismbcalpha, _ismbcalpha</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Alphabetic</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Returns nonzero if and only if <ph id="ph1">`c`</ph> is a single-byte representation of an ASCII English letter: See examples for <ph id="ph2">`_ismbcupper`</ph> and <ph id="ph3">`_ismbclower`</ph>; or a katakana letter: 0xA6&lt;=<ph id="ph4">`c`</ph>&lt;=0xDF.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>_ismbcdigit, _ismbcdigit_l</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Digit</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Returns nonzero if and only if <ph id="ph1">`c`</ph> is a single-byte representation of an ASCII digit: 0x30&lt;=<ph id="ph2">`c`</ph>&lt;=0x39.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>_ismbcgraph, _ismbcgraph_l</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Graphic</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Returns nonzero if and only if <ph id="ph1">`c`</ph> is a single-byte representation of any ASCII or katakana printable character except a white space ( ).</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>See examples for <ph id="ph1">`_ismbcdigit`</ph>, <ph id="ph2">`_ismbcalpha`</ph>, and <ph id="ph3">`_ismbcpunct`</ph>.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>_ismbclegal, _ismbclegal_l</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Valid multibyte character</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Returns nonzero if and only if the first byte of <ph id="ph1">`c`</ph> is within ranges 0x81 – 0x9F or 0xE0 – 0xFC, while the second byte is within ranges 0x40 – 0x7E or 0x80 - FC.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>_ismbclower, _ismbclower_l</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Lowercase alphabetic</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Returns nonzero if and only if <ph id="ph1">`c`</ph> is a single-byte representation of an ASCII lowercase English letter: 0x61&lt;=<ph id="ph2">`c`</ph>&lt;=0x7A.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>_ismbcprint, _ismbcprint_l</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Printable</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Returns nonzero if and only if <ph id="ph1">`c`</ph> is a single-byte representation of any ASCII or katakana printable character including a white space ( ): See examples for <ph id="ph2">`_ismbcspace`</ph>, <ph id="ph3">`_ismbcdigit`</ph>, <ph id="ph4">`_ismbcalpha`</ph>, and <ph id="ph5">`_ismbcpunct`</ph>.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>_ismbcpunct, _ismbcpunct_l</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Punctuation</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Returns nonzero if and only if <ph id="ph1">`c`</ph> is a single-byte representation of any ASCII or katakana punctuation character.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>_ismbcblank, _ismbcblank_l,</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Space or horizontal tab</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Returns nonzero if and only if <ph id="ph1">`c`</ph> is a single-byte representation of a space character or a horizontal tab character: <ph id="ph2">`c`</ph>=0x20 or <ph id="ph3">`c`</ph>=0x09.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>_ismbcspace, _ismbcspace_l</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Whitespace</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Returns nonzero if and only if <ph id="ph1">`c`</ph> is a white space character: <ph id="ph2">`c`</ph>=0x20 or 0x09&lt;=<ph id="ph3">`c`</ph>&lt;=0x0D.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>_ismbcsymbol, _ismbcsymbol_l</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Multibyte symbol</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Returns nonzero if and only if 0x8141&lt;=<ph id="ph1">`c`</ph>&lt;=0x81AC.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>_ismbcupper, _ismbcupper_l</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Uppercase alphabetic</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Returns nonzero if and only if <ph id="ph1">`c`</ph> is a single-byte representation of an ASCII uppercase English letter: 0x41&lt;=<ph id="ph2">`c`</ph>&lt;=0x5A.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Code Page 932 Specific</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The following routines are specific to code page 932.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Routine</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Test condition (code page 932 only)</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>_ismbchira, _ismbchira_l</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Double-byte Hiragana: 0x829F&lt;=<ph id="ph1">`c`</ph>&lt;=0x82F1.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>_ismbckata, _ismbckata_l</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Double-byte katakana: 0x8340&lt;=<ph id="ph1">`c`</ph>&lt;=0x8396.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>_ismbcl0, _ismbcl0_l</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>JIS non-Kanji: 0x8140&lt;=<ph id="ph1">`c`</ph>&lt;=0x889E.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>_ismbcl1, _ismbcl1_l</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>JIS level-1: 0x889F&lt;=<ph id="ph1">`c`</ph>&lt;=0x9872.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>_ismbcl2, _ismbcl2_l</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>JIS level-2: 0x989F&lt;=<ph id="ph1">`c`</ph>&lt;=0xEA9E.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>, <ph id="ph1">`_ismbcl1`</ph>, and <ph id="ph2">`_ismbcl2`</ph> check that the specified value <ph id="ph3">`c`</ph> matches the test conditions described in the preceding table, but do not check that <ph id="ph4">`c`</ph> is a valid multibyte character.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>If the lower byte is in the ranges 0x00 – 0x3F, 0x7F, or 0xFD – 0xFF, these functions return a nonzero value, indicating that the character satisfies the test condition.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Use <bpt id="p1">[</bpt>_ismbbtrail, _ismbbtrail_l<ept id="p1">](../c-runtime-library/reference/ismbbtrail-ismbbtrail-l.md)</ept> to test whether the multibyte character is defined.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>END Code Page 932 Specific</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Character Classification</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>is, isw Routines</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>_ismbb Routines</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>