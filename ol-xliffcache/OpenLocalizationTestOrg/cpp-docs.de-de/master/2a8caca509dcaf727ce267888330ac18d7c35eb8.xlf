<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-787e512" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2a8caca509dcaf727ce267888330ac18d7c35eb8</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\mfc\reference\cmdiframewndex-class.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">afe3fabfe226f9f2280ac13de180a9831242597c</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1bcfeb8dca6e9a6e3bfc9d48b3284b39e5e9bb99</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>CMDIFrameWndEx Class | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>CMDIFrameWndEx Class</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Extends the functionality of <bpt id="p1">[</bpt>CMDIFrameWnd<ept id="p1">](../../mfc/reference/cframewnd-class.md)</ept>, a Windows Multiple Document Interface (MDI) frame window.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Members</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Public Methods</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>CMDIFrameWndEx::ActiveItemRecalcLayout</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Recalculates the layout of the active item.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>This method is not used.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>CMDIFrameWndEx::AddPane</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Registers a pane with the docking manager.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>CMDIFrameWndEx::AdjustClientArea</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Reduces the client area to allow for a border.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>CMDIFrameWndEx::AdjustDockingLayout</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Recalculates the layout of all docked panes.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>CMDIFrameWndEx::AreMDITabs</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Determines whether the MDI Tabs feature or the MDI Tabbed Groups feature is enabled.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>CMDIFrameWndEx::CanCovertControlBarToMDIChild</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Called by the framework to determine whether the frame window can convert docking panes to tabbed documents.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>CMDIFrameWndEx::ControlBarToTabbedDocument</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Converts the specified docking pane to a tabbed document.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>CMDIFrameWndEx::CreateDocumentWindow</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Creates a child document window.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>CMDIFrameWndEx::CreateNewWindow</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Called by the framework to create a new window.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Used by the framework to create a dynamic instance of this class type.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>CMDIFrameWndEx::DockPane</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Docks the specified pane to the frame window.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>CMDIFrameWndEx::DockPaneLeftOf</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Docks one pane to the left of another pane.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>CMDIFrameWndEx::EnableAutoHidePanes</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Enables auto-hide mode for panes when they are docked at specified sides of the main frame window.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>CMDIFrameWndEx::EnableDocking</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Enables docking of the panes that belong to the MDI frame window.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>CMDIFrameWndEx::EnableFullScreenMainMenu</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Shows or hides the main menu in full-screen mode.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>CMDIFrameWndEx::EnableFullScreenMode</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Enables full-screen mode for the frame window.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>CMDIFrameWndEx::EnableLoadDockState</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Enables or disables the loading of the docking state.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>CMDIFrameWndEx::EnableMDITabbedGroups</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Enables or disables the MDI Tabbed Groups feature.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>CMDIFrameWndEx::EnableMDITabs</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Enables or disables the MDI Tabs feature.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>When enabled, the frame window displays a tab for each MDI child window.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>CMDIFrameWndEx::EnableMDITabsLastActiveActivation</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Specifies whether the last active tab should be activated when the user closes the current tab.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>CMDIFrameWndEx::EnablePaneMenu</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Enables or disables automatic creation and management of the pop-up pane menu, which displays a list of application panes.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>CMDIFrameWndEx::EnableWindowsDialog</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Inserts a menu item whose command ID calls a <bpt id="p1">[</bpt>CMFCWindowsManagerDialog<ept id="p1">](../../mfc/reference/cmfcwindowsmanagerdialog-class.md)</ept> dialog box.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>CMDIFrameWndEx::GetActivePopup</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Returns a pointer to the currently displayed popup menu.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>CMDIFrameWndEx::GetPane</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Returns a pointer to the pane that has the specified control ID.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>CMDIFrameWndEx::GetDefaultResId</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Returns the ID of shared resources of the MDI frame window.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>CMDIFrameWndEx::GetMDITabGroups</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Returns a list of MDI tabbed windows.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>CMDIFrameWndEx::GetMDITabs</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Returns a reference to the underlined tabbed window.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>CMDIFrameWndEx::GetMDITabsContextMenuAllowedItems</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Returns a combination of flags that determines what context menu items are valid when the MDI Tabbed Groups feature is enabled.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>CMDIFrameWndEx::GetMenuBar</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Returns a pointer to a menu bar object attached to the frame window.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>CMDIFrameWndEx::GetRibbonBar</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Retrieves the ribbon bar control for the frame.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>CMDIFrameWndEx::GetTearOffBars</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Returns a list of <bpt id="p1">[</bpt>CPane<ept id="p1">](../../mfc/reference/cpane-class.md)</ept>-derived objects that are in a tear-off state.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Called by the framework to obtain a pointer to the <bpt id="p1">[</bpt>CRuntimeClass<ept id="p1">](../../mfc/reference/cruntimeclass-structure.md)</ept> object that is associated with this class type.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>CMDIFrameWndEx::GetToolbarButtonToolTipText</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Called by the framework when the application displays the tooltip for a toolbar button.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>CMDIFrameWndEx::InsertPane</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Registers the specified pane with the docking manager.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>CMDIFrameWndEx::IsFullScreen</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Determines whether the frame window is in full-screen mode.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>CMDIFrameWndEx::IsMDITabbedGroup</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Determines whether the MDI Tabbed Groups feature is enabled.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>CMDIFrameWndEx::IsMemberOfMDITabGroup</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Determines whether the specified tabbed window is in the list of windows that are in MDI Tabbed Groups.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>CMDIFrameWndEx::IsMenuBarAvailable</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Determines whether the frame window has a menu bar.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>CMDIFrameWndEx::IsPointNearDockSite</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Determines whether a specified point is near the dock site.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>CMDIFrameWndEx::IsPrintPreview</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Determines whether the frame window is in print-preview mode.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>CMDIFrameWndEx::LoadFrame</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Creates a frame window from resource information.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>(Overrides <ph id="ph1">`CMDIFrameWnd::LoadFrame`</ph>.)</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>CMDIFrameWndEx::LoadMDIState</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Loads the specified layout of MDI Tabbed Groups and the list of previously opened documents.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>CMDIFrameWndEx::MDITabMoveToNextGroup</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Moves the active tab from the currently active tabbed window to the next or previous tabbed group.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>CMDIFrameWndEx::MDITabNewGroup</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Creates a new tabbed group that has a single window.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>CMDIFrameWndEx::NegotiateBorderSpace</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Negotiates border space in a frame window during OLE in-place activation.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>CMDIFrameWndEx::OnCloseDockingPane</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Called by the framework when the user clicks the <bpt id="p1">**</bpt>Close<ept id="p1">**</ept> button on a dockable pane.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>CMDIFrameWndEx::OnCloseMiniFrame</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Called by the framework when the user clicks the <bpt id="p1">**</bpt>Close<ept id="p1">**</ept> button on a floating mini frame window.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>CMDIFrameWndEx::OnClosePopupMenu</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Called by the framework when an active pop-up menu processes a <ph id="ph1">`WM_DESTROY`</ph> message.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>CMDIFrameWndEx::OnCmdMsg</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Called by the framework to route and dispatch command messages and to update command user-interface objects.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>CMDIFrameWndEx::OnDrawMenuImage</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Called by the framework when the image associated with a menu item is drawn.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>CMDIFrameWndEx::OnDrawMenuLogo</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Called by the framework when a <bpt id="p1">[</bpt>CMFCPopupMenu<ept id="p1">](../../mfc/reference/cmfcpopupmenu-class.md)</ept>processes a <ph id="ph1">`WM_PAINT`</ph> message.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>CMDIFrameWndEx::OnEraseMDIClientBackground</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Called by the framework when the MDI frame window processes a <ph id="ph1">`WM_ERASEBKGND`</ph> message.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>CMDIFrameWndEx::OnMenuButtonToolHitTest</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Called by the framework when a <bpt id="p1">[</bpt>CMFCToolBarButton<ept id="p1">](../../mfc/reference/cmfctoolbarbutton-class.md)</ept>object processes a <ph id="ph1">`WM_NCHITTEST`</ph> message.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>CMDIFrameWndEx::OnMoveMiniFrame</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>Called by the framework to move a mini-frame window.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>CMDIFrameWndEx::OnSetPreviewMode</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Sets the application's main frame window print-preview mode.</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>(Overrides <bpt id="p1">[</bpt>CFrameWnd::OnSetPreviewMode<ept id="p1">](../../mfc/reference/cframewnd-class.md#cframewnd__onsetpreviewmode)</ept>.)</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>CMDIFrameWndEx::OnShowCustomizePane</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Called by the framework when a Quick Customize pane is activated.</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>CMDIFrameWndEx::OnShowMDITabContextMenu</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>Called by the framework when a context menu should be displayed on one of the tabs.</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>(Valid for MDI Tabbed Groups only.)</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>CMDIFrameWndEx::OnShowPanes</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>Called by the framework to show or hide panes.</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>CMDIFrameWndEx::OnShowPopupMenu</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>Called by the framework when a pop-up menu is activated.</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>CMDIFrameWndEx::OnSizeMDIClient</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>Called by the framework when the size of the client MDI window is changing.</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>CMDIFrameWndEx::OnTearOffMenu</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>Called by the framework when a menu that has a tear-off bar is activated.</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>CMDIFrameWndEx::OnUpdateFrameMenu</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>Called by the framework to update the frame menu.</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>(Overrides <ph id="ph1">`CMDIFrameWnd::OnUpdateFrameMenu`</ph>.)</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>CMDIFrameWndEx::PaneFromPoint</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>Returns the docking pane that contains the specified point.</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>Used by class <bpt id="p1">[</bpt>CWinApp<ept id="p1">](../../mfc/reference/cwinapp-class.md)</ept> to translate window messages before they are dispatched to the <bpt id="p2">[</bpt>TranslateMessage<ept id="p2">](http://msdn.microsoft.com/library/windows/desktop/ms644955)</ept> and <bpt id="p3">[</bpt>DispatchMessage<ept id="p3">](http://msdn.microsoft.com/library/windows/desktop/ms644934)</ept> Windows functions.</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>(Overrides <ph id="ph1">`CMDIFrameWnd::PreTranslateMessage`</ph>.)</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>CMDIFrameWndEx::RecalcLayout</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>Called by the framework to recalculate the layout of the frame window.</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>(Overrides <bpt id="p1">[</bpt>CFrameWnd::RecalcLayout<ept id="p1">](../../mfc/reference/cframewnd-class.md#cframewnd__recalclayout)</ept>.)</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>CMDIFrameWndEx::RemovePaneFromDockManager</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>Unregisters a pane and removes it from the docking manager.</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>CMDIFrameWndEx::SaveMDIState</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>Saves the current layout of MDI Tabbed Groups and the list of previously opened documents.</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>CMDIFrameWndEx::SetPrintPreviewFrame</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>Sets the print preview frame window.</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>CMDIFrameWndEx::SetupToolbarMenu</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>Modifies a toolbar object by searching for dummy items and replacing them with the specified user-defined items.</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>CMDIFrameWndEx::ShowFullScreen</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>Switches the main frame from regular mode to full-screen mode.</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>CMDIFrameWndEx::ShowPane</source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>Shows or hides the specified pane.</source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>CMDIFrameWndEx::ShowWindowsDialog</source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>Creates a <bpt id="p1">[</bpt>CMFCWindowsManagerDialog<ept id="p1">](../../mfc/reference/cmfcwindowsmanagerdialog-class.md)</ept> box and opens it.</source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>CMDIFrameWndEx::TabbedDocumentToControlBar</source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>Converts the specified tabbed document to a docking pane.</source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>CMDIFrameWndEx::UpdateCaption</source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>Called by the framework to update the window frame caption.</source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>CMDIFrameWndEx::UpdateMDITabbedBarsIcons</source>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>Sets the icon for each MDI tabbed pane.</source>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>CMDIFrameWndEx::WinHelp</source>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>Called by the framework to initiate the WinHelp application or context help.</source>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>(Overrides <bpt id="p1">[</bpt>CWnd::WinHelp<ept id="p1">](../../mfc/reference/cwnd-class.md#cwnd__winhelp)</ept>.)</source>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>Data Members</source>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>CMDIFrameWndEx::m_bCanCovertControlBarToMDIChild</source>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>Determines whether docking panes can be converted to MDI child windows.</source>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>CMDIFrameWndEx::m_bDisableSetRedraw</source>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>Enables or disables redraw optimization for MDI child windows.</source>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>To take advantage of extended customization features in your MDI application, derive the MDI frame window class of the application from <ph id="ph1">`CMDIFrameWndEx`</ph> instead of <ph id="ph2">`CMDIFrameWnd`</ph>.</source>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>The following example derives a class from <ph id="ph1">`CMDIFrameWndEx`</ph>.</source>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>This code snippet comes from the <bpt id="p1">[</bpt>DrawClient Sample: MFC Ribbon-Based OLE Object Drawing Application<ept id="p1">](../../visual-cpp-samples.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>NVC_MFC_DrawClient#1</source>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>Inheritance Hierarchy</source>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>CObject</source>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>CCmdTarget</source>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>CWnd</source>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>CFrameWnd</source>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>CMDIFrameWnd</source>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>CMDIFrameWndEx</source>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>Requirements</source>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Header:<ept id="p1">**</ept> afxMDIFrameWndEx.h</source>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>CMDIFrameWndEx::ActiveItemRecalcLayout</source>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>Recalculates the layout of the active item.</source>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>CMDIFrameWndEx::AddPane</source>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>Registers a pane with the docking manager.</source>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>Pointer to the pane to register.</source>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>Specifies whether to add this pane to the end of the list.</source>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>Returns a non-zero value if the pane is registered successfully.</source>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>Returns 0 if the pane is already registered with the docking manager.</source>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>Each pane must be registered with the <bpt id="p1">[</bpt>CDockingManager Class<ept id="p1">](../../mfc/reference/cdockingmanager-class.md)</ept> before it can take a part in the docking layout.</source>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>Use this method to notify the docking manager that you want to dock a specific pane.</source>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>Once that pane is registered, the docking manager aligns it based on its alignment setting and position in the list of panes maintained by the docking manager.</source>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>CMDIFrameWndEx::AdjustClientArea</source>
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>Reduces the client area to allow for a border.</source>
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>CMDIFrameWndEx::AdjustDockingLayout</source>
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>Recalculates the layout of all docked panes.</source>
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>Identifies the multiple-window-position structure.</source>
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>You can obtain this value by calling <ph id="ph1">`BeginDeferWindowPos`</ph>.</source>
        </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>Call this member function to recalculate the layout of all panes docked to the frame window.</source>
        </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>CMDIFrameWndEx::AreMDITabs</source>
        </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>Determines whether the MDI tabs feature or the MDI tabbed groups feature is enabled.</source>
        </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>[out]</source>
        </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>A pointer to an integer variable that indicates which features are enabled:</source>
        </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>0: All features are disabled.</source>
        </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>1: MDI tabs is enabled.</source>
        </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>2: MDI tabbed groups is enabled.</source>
        </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>if MDI tabs or MDI tabbed groups is enabled.</source>
        </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>if none of the above features is enabled.</source>
        </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>Use this function to determine whether MDI tabs or MDI tabbed groups is enabled for the frame window.</source>
        </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>Use <bpt id="p1">[</bpt>CMDIFrameWndEx::EnableMDITabs<ept id="p1">](#cmdiframewndex__enablemditabs)</ept> to enable or disable the MDI tabs feature.</source>
        </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>Use <bpt id="p1">[</bpt>CMDIFrameWndEx::EnableMDITabbedGroups<ept id="p1">](#cmdiframewndex__enablemditabbedgroups)</ept> to enable or disable the MDI tabbed groups feature.</source>
        </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>CMDIFrameWndEx::CanCovertControlBarToMDIChild</source>
        </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>Called by the framework to determine whether the frame window can convert docking panes to tabbed documents</source>
        </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>Returns <ph id="ph1">`TRUE`</ph> if the frame window can convert docking panes to tabbed documents; otherwise returns <ph id="ph2">`FALSE`</ph>.</source>
        </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>Override this method in a derived class and return <ph id="ph1">`TRUE`</ph> to enable the conversion of docking panes to tabbed documents.</source>
        </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>Alternatively, you can set <bpt id="p1">[</bpt>CMDIFrameWndEx::m_bCanCovertControlBarToMDIChild<ept id="p1">](#cmdiframewndex__m_bcancovertcontrolbartomdichild)</ept> to <ph id="ph1">`TRUE`</ph>.</source>
        </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>CMDIFrameWndEx::ControlBarToTabbedDocument</source>
        </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>Converts the specified docking pane to a tabbed document.</source>
        </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>A pointer to the docking pane to convert.</source>
        </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source>Returns a pointer to the new MDI child window that contains the docking pane.</source>
        </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>This method converts a docking pane to a tabbed document.</source>
        </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>When you call this method, the framework creates a <bpt id="p1">[</bpt>CMDIChildWndEx Class<ept id="p1">](../../mfc/reference/cmdichildwndex-class.md)</ept> object, removes the docking pane from the docking manager, and adds the docking pane to the new MDI child window.</source>
        </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>The MDI child window resizes the docking pane to cover the entire client area</source>
        </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source>CMDIFrameWndEx::CreateDocumentWindow</source>
        </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source>Creates a child document window.</source>
        </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source>A text string that contains a document identifier.</source>
        </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source>Typically, it is the full path of a document file.</source>
        </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source>A pointer to a user-defined object.</source>
        </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source>For example, a developer can create an application-specific data structure describing the document and telling how the document should be initialized at startup.</source>
        </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source>A pointer to <ph id="ph1">`CMDIChildWndEx`</ph>.</source>
        </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve">
          <source>The framework calls this method when it loads the list of documents previously saved in the registry.</source>
        </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve">
          <source>Override this method in order to create documents when they are being loaded from the registry.</source>
        </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve">
          <source>The following example shows how <ph id="ph1">`CreateDocumentWindow`</ph> is used in the <bpt id="p1">[</bpt>VisualStudioDemo Sample: MFC Visual Studio Application<ept id="p1">](../../visual-cpp-samples.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve">
          <source>In this example, <ph id="ph1">`g_strStartViewName`</ph> could be the name of a "virtual document" (for example, "Start Page") that is not actually loaded from a disk file.</source>
        </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve">
          <source>Therefore we need special processing to handle that case.</source>
        </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve">
          <source>NVC_MFC_VisualStudioDemo#13</source>
        </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve">
          <source>CMDIFrameWndEx::CreateNewWindow</source>
        </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve">
          <source>Called by the framework to create a new window.</source>
        </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve">
          <source>The document name.</source>
        </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve">
          <source>Reserved for future use.</source>
        </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve">
          <source>A pointer to the new window.</source>
        </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve">
          <source>CMDIFrameWndEx::DockPane</source>
        </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve">
          <source>Docks the specified pane to the frame window.</source>
        </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve">
          <source>Pointer to the pane to dock.</source>
        </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve">
          <source>Specifies which sides of the frame window to dock to.</source>
        </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve">
          <source>Not used.</source>
        </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve">
          <source>This method docks the specified the pane to one of the sides of the frame window that was specified when <bpt id="p1">[</bpt>CBasePane::EnableDocking<ept id="p1">](../../mfc/reference/cbasepane-class.md#cbasepane__enabledocking)</ept> and <bpt id="p2">[</bpt>CMDIFrameWndEx::EnableDocking<ept id="p2">](#cmdiframewndex__enabledocking)</ept> were called.</source>
        </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve">
          <source>The following example demonstrates the use of the <ph id="ph1">`DockPane`</ph> method.</source>
        </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve">
          <source>This code snippet comes from the <bpt id="p1">[</bpt>VisualStudioDemo Sample: MFC Visual Studio Application<ept id="p1">](../../visual-cpp-samples.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve">
          <source>NVC_MFC_VisualStudioDemo#4</source>
        </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve">
          <source>CMDIFrameWndEx::DockPaneLeftOf</source>
        </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve">
          <source>Docks one pane to the left of another pane.</source>
        </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve">
          <source>A pointer to the docking pane.</source>
        </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve">
          <source>A pointer to the pane that serves as the dock site.</source>
        </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve">
          <source>.</source>
        </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve">
          <source>Returns <ph id="ph1">`TRUE`</ph> if the operation is successful.</source>
        </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve">
          <source>Otherwise returns <ph id="ph1">`FALSE`</ph>.</source>
        </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve">
          <source>Call this method to dock several pane objects in a predefined order.</source>
        </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve">
          <source>This method docks the pane specified by <ph id="ph1">`pBar`</ph> to the left of the pane specified by <ph id="ph2">`pLeftOf`</ph>.</source>
        </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve">
          <source>The following example shows how the <ph id="ph1">`DockPaneLeftOf`</ph> method is used in the <bpt id="p1">[</bpt>VisualStudioDemo Sample: MFC Visual Studio Application<ept id="p1">](../../visual-cpp-samples.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve">
          <source>NVC_MFC_VisualStudioDemo#5</source>
        </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve">
          <source>CMDIFrameWndEx::EnableAutoHidePanes</source>
        </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve">
          <source>Enables auto-hide mode for panes when they are docked at the specified sides of the main frame window.</source>
        </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve">
          <source>Specifies the sides of the main frame window that will be enabled.</source>
        </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve">
          <source>Use one or more of the following flags.</source>
        </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve">
          <source>Call this function to enable auto-hide mode for panes when they are docked at the specified sides of the main frame window.</source>
        </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve">
          <source>The following example shows how the <ph id="ph1">`EnableAutoHidePanes`</ph> method is used in the <bpt id="p1">[</bpt>VisualStudioDemo Sample: MFC Visual Studio Application<ept id="p1">](../../visual-cpp-samples.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve">
          <source>NVC_MFC_VisualStudioDemo#6</source>
        </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve">
          <source>CMDIFrameWndEx::EnableDocking</source>
        </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve">
          <source>Enables docking of the panes that belong to the MDI frame window.</source>
        </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve">
          <source>Specifies the docking style that you want to apply.</source>
        </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve">
          <source>Call this function to enable docking of panes that belong to the <ph id="ph1">`CMDIFrameWndEx`</ph> object.</source>
        </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve">
          <source>The following example shows how the <ph id="ph1">`EnableDocking`</ph> method is used in the <bpt id="p1">[</bpt>VisualStudioDemo Sample: MFC Visual Studio Application<ept id="p1">](../../visual-cpp-samples.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve">
          <source>NVC_MFC_VisualStudioDemo#7</source>
        </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve">
          <source>CMDIFrameWndEx::EnableFullScreenMainMenu</source>
        </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve">
          <source>Shows or hides the main menu in full-screen mode.</source>
        </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve">
          <source>to show the main menu in full-screen mode, or <ph id="ph1">`FALSE`</ph> to hide it.</source>
        </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve">
          <source>CMDIFrameWndEx::EnableFullScreenMode</source>
        </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve">
          <source>Enables full-screen mode for the frame window.</source>
        </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve">
          <source>The ID of a command that enables or disables full-screen mode.</source>
        </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve">
          <source>In full-screen mode, all docking control bars, toolbars and menus are hidden and the active view is resized to occupy the full-screen.When you enable full-screen mode, you must specify an ID of the command that enables or disables it.</source>
        </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve">
          <source>You can call <ph id="ph1">`EnableFullScreenMode`</ph> from the main frame's <ph id="ph2">`OnCreate`</ph> function.</source>
        </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve">
          <source>When a frame window is being switched to full-screen mode, the framework creates a floating toolbar with one button that has the specified command ID.If you want to keep the main menu on the screen, call <bpt id="p1">[</bpt>CMDIFrameWndEx::EnableFullScreenMainMenu<ept id="p1">](#cmdiframewndex__enablefullscreenmainmenu)</ept>.</source>
        </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve">
          <source>CMDIFrameWndEx::EnableLoadDockState</source>
        </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve">
          <source>Enables or disables the loading of the docking state.</source>
        </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve">
          <source>to enable the loading of the docking state, <ph id="ph1">`FALSE`</ph> to disable the loading of the docking state.</source>
        </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve">
          <source>CMDIFrameWndEx::EnableMDITabbedGroups</source>
        </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve">
          <source>Enables or disables the MDI tabbed groups feature for the frame window.</source>
        </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`TRUE`</ph>, the MDI tabbed groups feature is enabled; if <ph id="ph2">`FALSE`</ph>, the MDI tabbed groups feature is disabled.</source>
        </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve">
          <source>Specifies parameters that the framework applies to child windows that are created in the MDI client area.</source>
        </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve">
          <source>Use this method to enable or disable the MDI tabbed groups feature.</source>
        </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve">
          <source>This feature enables MDI applications to display child windows as tabbed windows that are aligned vertically or horizontally within the MDI client area.</source>
        </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve">
          <source>Groups of tabbed windows are separated by splitters.</source>
        </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve">
          <source>The user can resize tabbed groups by using a splitter.</source>
        </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve">
          <source>The user can:</source>
        </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve">
          <source>Drag individual tabs between groups.</source>
        </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve">
          <source>Drag individual tabs to the edge of the window to create new groups.</source>
        </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve">
          <source>Move tabs or create new groups by using a shortcut menu.</source>
        </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve">
          <source>Your application can save the current layout of tabbed windows and the list of currently opened documents.</source>
        </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve">
          <source>If you call this method with <ph id="ph1">`bEnable`</ph> set to <ph id="ph2">`FALSE`</ph>, <ph id="ph3">`params`</ph> is ignored.</source>
        </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve">
          <source>Even if MDI tabbed groups is already enabled, you can call this method again to modify the settings for child windows.</source>
        </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve">
          <source>Call the method with <ph id="ph1">`bEnable`</ph> set to <ph id="ph2">`TRUE`</ph> and modify the members of the <ph id="ph3">`CMDITabInfo`</ph> object that are specified by the <ph id="ph4">`params`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve">
          <source>For more information about how to use MDI tabbed groups, see <bpt id="p1">[</bpt>MDI Tabbed Groups<ept id="p1">](../../mfc/mdi-tabbed-groups.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve">
          <source>The following example shows how <ph id="ph1">`EnableMDITabbedGroups`</ph> is used in the <bpt id="p1">[</bpt>VisualStudioDemo Sample: MFC Visual Studio Application<ept id="p1">](../../visual-cpp-samples.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve">
          <source>NVC_MFC_VisualStudioDemo#8</source>
        </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve">
          <source>CMDIFrameWndEx::EnableMDITabs</source>
        </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve">
          <source>Enables or disables the MDI Tabs feature for the MDI frame window.</source>
        </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve">
          <source>When enabled, the frame window displays a tab for each MDI child window.</source>
        </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve">
          <source>Specifies whether tabs are enabled.</source>
        </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve">
          <source>Specifies whether icons should be displayed on the tabs.</source>
        </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve">
          <source>Specifies the location of the tab labels.</source>
        </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve">
          <source>Specifies whether to display tab close buttons.</source>
        </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve">
          <source>Specifies the style of tabs.</source>
        </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve">
          <source>Use <ph id="ph1">`STYLE_3D_SCROLLED`</ph> for regular tabs or <ph id="ph2">`STYLE_3D_ONENOTE`</ph> for Microsoft OneNote tabs.</source>
        </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve">
          <source>Specifies whether custom tooltips are enabled.</source>
        </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`TRUE`</ph>, a <bpt id="p1">**</bpt>Close<ept id="p1">**</ept> button will be displayed on the active tab instead of on the right corner of the tab area.</source>
        </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve">
          <source>Call this method to enable or disable the MDI tabs feature for the MDI frame window.</source>
        </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve">
          <source>When enabled, all child windows are displayed as tabs.</source>
        </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve">
          <source>The tab labels can be located at the top or bottom of the frame, depending on the setting of the parameter <ph id="ph1">`tabLocation`</ph>.</source>
        </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve">
          <source>You may specify either <ph id="ph1">`CMFCTabCtrl::LOCATION_BOTTOM`</ph> (the default setting) or <ph id="ph2">`CMFCTabCtrl::LOCATION_TOP`</ph>.</source>
        </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`bTabCustomTooltips`</ph> is <ph id="ph2">`TRUE`</ph>, an <ph id="ph3">`AFX_WM_ON_GET_TAB_TOOLTIP`</ph> message will be sent to the main frame window.</source>
        </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve">
          <source>Your code can handle this message and provide the framework with custom tooltips for MDI tabs.</source>
        </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve">
          <source>The following example shows how <ph id="ph1">`EnableMDITabs`</ph> is used in the <bpt id="p1">[</bpt>MDITabsDemo Sample: MFC Tabbed MDI Application<ept id="p1">](../../visual-cpp-samples.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve">
          <source>NVC_MFC_MDITabsDemo#3</source>
        </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve">
          <source>CMDIFrameWndEx::EnableMDITabsLastActiveActivation</source>
        </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve">
          <source>Specifies whether the last active tab should be opened when the user closes the current tab.</source>
        </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`TRUE`</ph>, enable activation of the last active tab.</source>
        </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`FALSE`</ph>, disable activation of the last active tab.</source>
        </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve">
          <source>There are two ways to open a tab when the active tab is closed:</source>
        </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve">
          <source>Activate the next tab.</source>
        </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve">
          <source>Activate the previously active tab.</source>
        </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve">
          <source>The default implementation uses the first way.</source>
        </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve">
          <source>Use <ph id="ph1">`EnableMDITabsLastActiveActivation`</ph> to enable the second way of tab activation.</source>
        </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve">
          <source>It emulates the way Windows opens MDI child windows.</source>
        </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve">
          <source>CMDIFrameWndEx::EnablePaneMenu</source>
        </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve">
          <source>Enables or disables automatic creation and management of the pop-up pane menu, which displays a list of application panes.</source>
        </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`TRUE`</ph>, automatic handling of the pane menu is enabled; if <ph id="ph2">`FALSE`</ph>, automatic handling is disabled.</source>
        </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve">
          <source>Command ID of the <bpt id="p1">**</bpt>Customize<ept id="p1">**</ept> menu item.</source>
        </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve">
          <source>This menu item is usually added to the end of the list of panes.</source>
        </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve">
          <source>The text to be displayed for the <bpt id="p1">**</bpt>Customize<ept id="p1">**</ept> menu item (for localization).</source>
        </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve">
          <source>Specifies the ID of a toolbar menu item that opens the pane menu.</source>
        </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve">
          <source>Usually this is the <bpt id="p1">**</bpt>Toolbars<ept id="p1">**</ept> submenu of the <bpt id="p2">**</bpt>View<ept id="p2">**</ept> menu.</source>
        </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`TRUE`</ph>, the pane menu displays only a list of toolbars.</source>
        </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`FALSE`</ph>, the menu displays a list of toolbars and docking bars.</source>
        </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`TRUE`</ph>, the pane menu displays only a list of toolbars.</source>
        </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`FALSE`</ph>, the menu displays a list of toolbars and docking bars.</source>
        </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve">
          <source>The pop-up pane menu displays the list of the application's panes and lets the user show or hide individual panes.</source>
        </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve">
          <source>The following example shows how <ph id="ph1">`EnablePaneMenu`</ph> is used in the <bpt id="p1">[</bpt>VisualStudioDemo Sample: MFC Visual Studio Application<ept id="p1">](../../visual-cpp-samples.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve">
          <source>NVC_MFC_VisualStudioDemo#9</source>
        </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve">
          <source>CMDIFrameWndEx::EnableWindowsDialog</source>
        </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve">
          <source>Inserts a menu item whose command ID calls a <bpt id="p1">[</bpt>CMFCWindowsManagerDialog<ept id="p1">](../../mfc/reference/cmfcwindowsmanagerdialog-class.md)</ept> dialog box.</source>
        </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve">
          <source>Specifies the resource ID of a menu.</source>
        </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve">
          <source>Specifies the item's text.</source>
        </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve">
          <source>Specifies whether to display a <bpt id="p1">**</bpt>Help<ept id="p1">**</ept> button on the windows management dialog box.</source>
        </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve">
          <source>The string resource identifier that contains the item's text string.</source>
        </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve">
          <source>Use this method to insert a menu item whose command calls a MDI child window management dialog box ( <bpt id="p1">[</bpt>CMFCWindowsManagerDialog Class<ept id="p1">](../../mfc/reference/cmfcwindowsmanagerdialog-class.md)</ept>).</source>
        </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve">
          <source>The new item is inserted into the menu specified by <ph id="ph1">`uiMenuId`</ph>.</source>
        </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve">
          <source>Call <ph id="ph1">`EnableWindowsDialog`</ph> when you process the <ph id="ph2">`WM_CREATE`</ph> message.</source>
        </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve">
          <source>The following example shows how <ph id="ph1">`EnableWindowsDialog`</ph> is used in the <bpt id="p1">[</bpt>VisualStudioDemo Sample: MFC Visual Studio Application<ept id="p1">](../../visual-cpp-samples.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve">
          <source>NVC_MFC_VisualStudioDemo#10</source>
        </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve">
          <source>CMDIFrameWndEx::GetActivePopup</source>
        </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve">
          <source>Returns a pointer to the currently displayed popup menu.</source>
        </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve">
          <source>A pointer to the active popup menu; <ph id="ph1">`NULL`</ph> if no popup menu is active.</source>
        </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve">
          <source>Use this function to obtain a pointer to the <bpt id="p1">[</bpt>CMFCPopupMenu Class<ept id="p1">](../../mfc/reference/cmfcpopupmenu-class.md)</ept> object that is currently displayed.</source>
        </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve">
          <source>CMDIFrameWndEx::GetDefaultResId</source>
        </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve">
          <source>Returns the ID of shared resources of the MDI frame window.</source>
        </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve">
          <source>A resource ID value.</source>
        </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve">
          <source>0 if the frame window has no menu bar.</source>
        </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve">
          <source>This method returns the resource ID that was specified when the MDI frame window was loaded by <bpt id="p1">[</bpt>CFrameWnd::LoadFrame<ept id="p1">](../../mfc/reference/cframewnd-class.md#cframewnd__loadframe)</ept>.</source>
        </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve">
          <source>CMDIFrameWndEx::GetMDITabGroups</source>
        </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve">
          <source>Returns a list of MDI tabbed windows.</source>
        </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve">
          <source>A reference to a <bpt id="p1">[</bpt>CObList Class<ept id="p1">](../../mfc/reference/coblist-class.md)</ept> object that contains a list of tabbed windows.</source>
        </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve">
          <source>Do not store or modify the list.</source>
        </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve">
          <source>Use this method to access the list of tabbed windows.</source>
        </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve">
          <source>It can be helpful if you want to change or query some parameters of individual tabbed windows.</source>
        </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve">
          <source>CMDIFrameWndEx::GetMDITabs</source>
        </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve">
          <source>Returns a reference to the underlined tabbed window.</source>
        </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve">
          <source>A reference to the underlined tabbed window.</source>
        </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve">
          <source>CMDIFrameWndEx::GetMDITabsContextMenuAllowedItems</source>
        </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve">
          <source>Returns a combination of flags that determines what operations are valid when the MDI Tabbed Groups feature is enabled.</source>
        </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve">
          <source>A bitwise-OR combination of the following flags:</source>
        </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve">
          <source>- can create a vertical tab group.</source>
        </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve">
          <source>- can create a horizontal tab group.</source>
        </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve">
          <source>- can move a tab to the previous tab group.</source>
        </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve">
          <source>- can move a tab to the next tab group.</source>
        </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve">
          <source>When the MDI Tabbed Groups feature is enabled, you must know what operations are allowed on the tabs of a particular window.</source>
        </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve">
          <source>This method analyzes the current layout of tabbed windows and returns a combination of flags that can be used to build, for example, a shortcut menu.</source>
        </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve">
          <source>You can create a new vertical tab group when all tabbed windows are aligned vertically, or when there is only one tabbed window.</source>
        </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve">
          <source>You can create a new horizontal tab group when all tabbed windows are aligned horizontally, or when there is only one tabbed window.</source>
        </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve">
          <source>You can move a tab to the previous group only if there is more than one tab in a tabbed window.</source>
        </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve">
          <source>You can move a tab to the next group only if there is more than one tab in a tabbed window.</source>
        </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve">
          <source>CMDIFrameWndEx::GetMenuBar</source>
        </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve">
          <source>Returns a pointer to a menu bar object attached to the frame window.</source>
        </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve">
          <source>A pointer to a menu bar object.</source>
        </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve">
          <source>CMDIFrameWndEx::GetPane</source>
        </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve">
          <source>Returns a pointer to the pane that has the specified control ID.</source>
        </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve">
          <source>The control ID.</source>
        </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve">
          <source>A pointer to the pane that has the specified control ID, if it exists.</source>
        </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve">
          <source>Otherwise, <ph id="ph1">`NULL`</ph>.</source>
        </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve">
          <source>CMDIFrameWndEx::GetRibbonBar</source>
        </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve">
          <source>Retrieves the ribbon bar control for the frame.</source>
        </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve">
          <source>Pointer to the <bpt id="p1">[</bpt>CMFCRibbonBar Class<ept id="p1">](../../mfc/reference/cmfcribbonbar-class.md)</ept> for the frame.</source>
        </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve">
          <source>CMDIFrameWndEx::GetTearOffBars</source>
        </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve">
          <source>Returns a list of tear-off menus.</source>
        </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve">
          <source>A reference to a <bpt id="p1">[</bpt>CObList Class<ept id="p1">](../../mfc/reference/coblist-class.md)</ept> object that contains a collection of pointers to <ph id="ph1">`CPane`</ph>-derived objects that are in a tear-off state.</source>
        </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve">
          <source>maintains a collection of tear-off menus.</source>
        </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve">
          <source>Use this method to retrieve a reference to this list.</source>
        </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve">
          <source>CMDIFrameWndEx::GetToolbarButtonToolTipText</source>
        </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve">
          <source>Called by the framework when the application displays the tooltip for a toolbar button.</source>
        </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve">
          <source>A pointer to a toolbar button.</source>
        </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve">
          <source>The tooltip text to display for the button.</source>
        </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve">
          <source>if the tooltip has been displayed.</source>
        </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve">
          <source>otherwise.</source>
        </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve">
          <source>CMDIFrameWndEx::InsertPane</source>
        </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve">
          <source>Registers the specified pane with the docking manager.</source>
        </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve">
          <source>A pointer to the pane to be inserted.</source>
        </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve">
          <source>A pointer to the pane before or after which to insert the pane.</source>
        </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`TRUE`</ph>, <ph id="ph2">`pControlBar`</ph> is inserted after <ph id="ph3">`pTarget`</ph>.</source>
        </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`FALSE`</ph>, <ph id="ph2">`pControlBar`</ph> is inserted before <ph id="ph3">`pTarget`</ph>.</source>
        </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve">
          <source>if the method successfully registers the pane, <ph id="ph1">`FALSE`</ph> if the pane was already registered with the docking manager.</source>
        </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve">
          <source>Use this method to tell the docking manager about a pane specified by <ph id="ph1">`pControlBar`</ph>.</source>
        </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve">
          <source>The docking manager will align this pane according to the pane's alignment and position in the docking manager's internal list.</source>
        </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve">
          <source>CMDIFrameWndEx::IsFullScreen</source>
        </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve">
          <source>Determines whether the frame window is in full-screen mode.</source>
        </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve">
          <source>if the frame window is in full screen mode; otherwise <ph id="ph1">`FALSE`</ph>.</source>
        </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve">
          <source>You can set the full screen mode by calling the <bpt id="p1">[</bpt>CMDIFrameWndEx::EnableFullScreenMode<ept id="p1">](#cmdiframewndex__enablefullscreenmode)</ept> method.</source>
        </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve">
          <source>CMDIFrameWndEx::IsMDITabbedGroup</source>
        </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve">
          <source>Specifies whether the MDI Tabbed Groups feature is enabled.</source>
        </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve">
          <source>if the MDI Tabbed Groups feature is enabled; otherwise <ph id="ph1">`FALSE`</ph>.</source>
        </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve">
          <source>To determine whether regular MDI tabs or the MDI Tabbed Groups feature is enabled, use <bpt id="p1">[</bpt>CMDIFrameWndEx::AreMDITabs<ept id="p1">](#cmdiframewndex__aremditabs)</ept>.</source>
        </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve">
          <source>CMDIFrameWndEx::IsMemberOfMDITabGroup</source>
        </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve">
          <source>Determines whether the specified tabbed window is in the list of windows that are in MDI Tabbed Groups.</source>
        </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve">
          <source>A pointer to tabbed window.</source>
        </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve">
          <source>if the specified tabbed window is in the list of tabbed windows that form MDI Tabbed Groups.</source>
        </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve">
          <source>Otherwise <ph id="ph1">`FALSE`</ph>.</source>
        </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve">
          <source>CMDIFrameWndEx::IsMenuBarAvailable</source>
        </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve">
          <source>Determines whether the frame window has a menu bar.</source>
        </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve">
          <source>if the pointer to the menu bar object is not <ph id="ph1">`NULL`</ph>; otherwise <ph id="ph2">`FALSE`</ph>.</source>
        </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve">
          <source>CMDIFrameWndEx::IsPointNearDockSite</source>
        </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve">
          <source>Determines whether a specified point is near the dock site.</source>
        </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve">
          <source>The specified point in screen coordinates.</source>
        </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="673" translate="yes" xml:space="preserve">
          <source>Specifies which edge the point is near.</source>
        </trans-unit>
        <trans-unit id="674" translate="yes" xml:space="preserve">
          <source>Possible values are <ph id="ph1">`CBRS_ALIGN_LEFT`</ph>, <ph id="ph2">`CBRS_ALIGN_RIGHT`</ph>, <ph id="ph3">`CBRS_ALIGN_TOP`</ph>, and</source>
        </trans-unit>
        <trans-unit id="675" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="676" translate="yes" xml:space="preserve">
          <source>if the point is near the outer border of the dock site; <ph id="ph1">`FALSE`</ph> otherwise.</source>
        </trans-unit>
        <trans-unit id="677" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="678" translate="yes" xml:space="preserve">
          <source>if the point is near the dock site; otherwise <ph id="ph1">`FALSE`</ph>.</source>
        </trans-unit>
        <trans-unit id="679" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="680" translate="yes" xml:space="preserve">
          <source>The point is near the dock site when it is within the sensitivity set in the docking manager.</source>
        </trans-unit>
        <trans-unit id="681" translate="yes" xml:space="preserve">
          <source>The default sensitivity is 15 pixels.</source>
        </trans-unit>
        <trans-unit id="682" translate="yes" xml:space="preserve">
          <source>CMDIFrameWndEx::IsPrintPreview</source>
        </trans-unit>
        <trans-unit id="683" translate="yes" xml:space="preserve">
          <source>Determines whether the frame window is in print-preview mode.</source>
        </trans-unit>
        <trans-unit id="684" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="685" translate="yes" xml:space="preserve">
          <source>if the frame window is in print-preview mode; otherwise, <ph id="ph1">`FALSE`</ph>.</source>
        </trans-unit>
        <trans-unit id="686" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="687" translate="yes" xml:space="preserve">
          <source>CMDIFrameWndEx::LoadFrame</source>
        </trans-unit>
        <trans-unit id="688" translate="yes" xml:space="preserve">
          <source>Creates a frame window from resource information.</source>
        </trans-unit>
        <trans-unit id="689" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="690" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="691" translate="yes" xml:space="preserve">
          <source>The ID of a shared resource associated with the frame window.</source>
        </trans-unit>
        <trans-unit id="692" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="693" translate="yes" xml:space="preserve">
          <source>The style of the frame window.</source>
        </trans-unit>
        <trans-unit id="694" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="695" translate="yes" xml:space="preserve">
          <source>A pointer to the frame's parent.</source>
        </trans-unit>
        <trans-unit id="696" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="697" translate="yes" xml:space="preserve">
          <source>A pointer to a <bpt id="p1">[</bpt>CCreateContext Structure<ept id="p1">](../../mfc/reference/ccreatecontext-structure.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="698" translate="yes" xml:space="preserve">
          <source>This parameter can be <ph id="ph1">`NULL`</ph>.</source>
        </trans-unit>
        <trans-unit id="699" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="700" translate="yes" xml:space="preserve">
          <source>if the method succeeds, otherwise <ph id="ph1">`FALSE`</ph>.</source>
        </trans-unit>
        <trans-unit id="701" translate="yes" xml:space="preserve">
          <source>CMDIFrameWndEx::LoadMDIState</source>
        </trans-unit>
        <trans-unit id="702" translate="yes" xml:space="preserve">
          <source>Loads the specified layout of MDI Tabbed Groups and the list of previously opened documents.</source>
        </trans-unit>
        <trans-unit id="703" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="704" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="705" translate="yes" xml:space="preserve">
          <source>Specifies the profile name.</source>
        </trans-unit>
        <trans-unit id="706" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="707" translate="yes" xml:space="preserve">
          <source>if the load succeeded; <ph id="ph1">`FALSE`</ph> if the load failed or there is no data to load.</source>
        </trans-unit>
        <trans-unit id="708" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="709" translate="yes" xml:space="preserve">
          <source>To load or save the state of MDI tabs and groups and the list of opened documents, do the following:</source>
        </trans-unit>
        <trans-unit id="710" translate="yes" xml:space="preserve">
          <source>Call <bpt id="p1">[</bpt>CMDIFrameWndEx::SaveMDIState<ept id="p1">](#cmdiframewndex__savemdistate)</ept> when the main frame is being closed</source>
        </trans-unit>
        <trans-unit id="711" translate="yes" xml:space="preserve">
          <source>Call <bpt id="p1">[</bpt>CMDIFrameWndEx::LoadMDIState<ept id="p1">](#cmdiframewndex__loadmdistate)</ept> when the main frame is being created.</source>
        </trans-unit>
        <trans-unit id="712" translate="yes" xml:space="preserve">
          <source>The recommended place for this call is before the main frame is displayed for the first time.</source>
        </trans-unit>
        <trans-unit id="713" translate="yes" xml:space="preserve">
          <source>Add <ph id="ph1">`CWinAppEx::EnableLoadWindowPlacement`</ph> <ph id="ph2">`(FALSE);`</ph> before <ph id="ph3">`pMainFrame-&gt;LoadFrame (IDR_MAINFRAME);.`</ph> Add <ph id="ph4">`CBCGPWorkspace::ReloadWindowPlacement`</ph> <ph id="ph5">`(pMainFrame);`</ph> after the call to <ph id="ph6">`LoadMDIState`</ph> to display the main frame at the position that was stored in the registry.</source>
        </trans-unit>
        <trans-unit id="714" translate="yes" xml:space="preserve">
          <source>Override <ph id="ph1">`GetDocumentName`</ph> in the <ph id="ph2">`CMDIChildWndEx`</ph>- derived class if your application displays documents that are not stored as files.</source>
        </trans-unit>
        <trans-unit id="715" translate="yes" xml:space="preserve">
          <source>The returned string will be saved in the registry as the document identifier.</source>
        </trans-unit>
        <trans-unit id="716" translate="yes" xml:space="preserve">
          <source>The base implementation of <bpt id="p1">[</bpt>CMDIChildWndEx::GetDocumentName<ept id="p1">](../../mfc/reference/cmdichildwndex-class.md#cmdichildwndex__getdocumentname)</ept> returns a value obtained from <bpt id="p2">[</bpt>CDocument::GetPathName<ept id="p2">](../../mfc/reference/cdocument-class.md#cdocument__getpathname)</ept>.</source>
        </trans-unit>
        <trans-unit id="717" translate="yes" xml:space="preserve">
          <source>Override <bpt id="p1">[</bpt>CMDIFrameWndEx::CreateDocumentWindow<ept id="p1">](#cmdiframewndex__createdocumentwindow)</ept> to correctly create documents when they are being loaded from the registry.</source>
        </trans-unit>
        <trans-unit id="718" translate="yes" xml:space="preserve">
          <source>The first parameter is the string that <ph id="ph1">`GetDocumentName`</ph> returned.</source>
        </trans-unit>
        <trans-unit id="719" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="720" translate="yes" xml:space="preserve">
          <source>The following example shows how <ph id="ph1">`LoadMDIState`</ph> is used in the <bpt id="p1">[</bpt>VisualStudioDemo Sample: MFC Visual Studio Application<ept id="p1">](../../visual-cpp-samples.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="721" translate="yes" xml:space="preserve">
          <source>NVC_MFC_VisualStudioDemo#11</source>
        </trans-unit>
        <trans-unit id="722" translate="yes" xml:space="preserve">
          <source>CMDIFrameWndEx::MDITabMoveToNextGroup</source>
        </trans-unit>
        <trans-unit id="723" translate="yes" xml:space="preserve">
          <source>Moves the active tab from the currently active tabbed window to the next or previous tabbed group.</source>
        </trans-unit>
        <trans-unit id="724" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="725" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="726" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`TRUE`</ph>, move the tab to the next tabbed group.</source>
        </trans-unit>
        <trans-unit id="727" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`FALSE`</ph>, move it to the previous tabbed group.</source>
        </trans-unit>
        <trans-unit id="728" translate="yes" xml:space="preserve">
          <source>CMDIFrameWndEx::MDITabNewGroup</source>
        </trans-unit>
        <trans-unit id="729" translate="yes" xml:space="preserve">
          <source>Creates a new tabbed group that has a single window.</source>
        </trans-unit>
        <trans-unit id="730" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="731" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="732" translate="yes" xml:space="preserve">
          <source>Specifies the new group alignment.</source>
        </trans-unit>
        <trans-unit id="733" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`TRUE`</ph>, the new group is aligned vertically.</source>
        </trans-unit>
        <trans-unit id="734" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`FALSE`</ph>, the new group is aligned horizontally.</source>
        </trans-unit>
        <trans-unit id="735" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="736" translate="yes" xml:space="preserve">
          <source>Use this function to create a new tabbed window (new tabbed group) and add the first tab to it.</source>
        </trans-unit>
        <trans-unit id="737" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="738" translate="yes" xml:space="preserve">
          <source>The following example shows how <ph id="ph1">`MDITabNewGroup`</ph> is used in the <bpt id="p1">[</bpt>VisualStudioDemo Sample: MFC Visual Studio Application<ept id="p1">](../../visual-cpp-samples.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="739" translate="yes" xml:space="preserve">
          <source>NVC_MFC_VisualStudioDemo#12</source>
        </trans-unit>
        <trans-unit id="740" translate="yes" xml:space="preserve">
          <source>CMDIFrameWndEx::m_bCanCovertControlBarToMDIChild</source>
        </trans-unit>
        <trans-unit id="741" translate="yes" xml:space="preserve">
          <source>Specifies whether docking panes can be converted to MDI child windows.</source>
        </trans-unit>
        <trans-unit id="742" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="743" translate="yes" xml:space="preserve">
          <source>Indicates whether docking control bars can be converted to MDI child windows.</source>
        </trans-unit>
        <trans-unit id="744" translate="yes" xml:space="preserve">
          <source>If this flag is <ph id="ph1">`TRUE`</ph>, the framework handles the conversion automatically when the user selects the <bpt id="p1">**</bpt>Tabbed Document<ept id="p1">**</ept> command.</source>
        </trans-unit>
        <trans-unit id="745" translate="yes" xml:space="preserve">
          <source>The flag is protected and you must explicitly enable this option either by setting <ph id="ph1">`m_bCanCovertControlBarToMDIChild`</ph> in a constructor of a <ph id="ph2">`CMDIFrameWndEx`</ph>-derived class, or by overriding <ph id="ph3">`CanConvertControlBarToMDIChild`</ph>.</source>
        </trans-unit>
        <trans-unit id="746" translate="yes" xml:space="preserve">
          <source>The default value is <ph id="ph1">`FALSE`</ph>.</source>
        </trans-unit>
        <trans-unit id="747" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="748" translate="yes" xml:space="preserve">
          <source>The following example shows how <ph id="ph1">`m_bCanCovertControlBarToMDIChild`</ph> is used in the <bpt id="p1">[</bpt>VisualStudioDemo Sample: MFC Visual Studio Application<ept id="p1">](../../visual-cpp-samples.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="749" translate="yes" xml:space="preserve">
          <source>NVC_MFC_VisualStudioDemo#13</source>
        </trans-unit>
        <trans-unit id="750" translate="yes" xml:space="preserve">
          <source>CMDIFrameWndEx::m_bDisableSetRedraw</source>
        </trans-unit>
        <trans-unit id="751" translate="yes" xml:space="preserve">
          <source>Enables or disables redraw optimization for MDI child windows.</source>
        </trans-unit>
        <trans-unit id="752" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="753" translate="yes" xml:space="preserve">
          <source>The default value is <ph id="ph1">`TRUE`</ph>.</source>
        </trans-unit>
        <trans-unit id="754" translate="yes" xml:space="preserve">
          <source>Set this flag to <ph id="ph1">`FALSE`</ph> if you want to optimize redrawing of MDI children.</source>
        </trans-unit>
        <trans-unit id="755" translate="yes" xml:space="preserve">
          <source>In this case the framework will call <ph id="ph1">`SetRedraw (FALSE)`</ph> for the main frame when the application is changing the active tab.</source>
        </trans-unit>
        <trans-unit id="756" translate="yes" xml:space="preserve">
          <source>This flag can cause unwanted effects (such as background applications that become visible).</source>
        </trans-unit>
        <trans-unit id="757" translate="yes" xml:space="preserve">
          <source>Therefore we recommend that you change the default only if you experience noticeable flickering during MDI tab activation.</source>
        </trans-unit>
        <trans-unit id="758" translate="yes" xml:space="preserve">
          <source>CMDIFrameWndEx::NegotiateBorderSpace</source>
        </trans-unit>
        <trans-unit id="759" translate="yes" xml:space="preserve">
          <source>Negotiates border space in a frame window during OLE in-place activation.</source>
        </trans-unit>
        <trans-unit id="760" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="761" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="762" translate="yes" xml:space="preserve">
          <source>Contains one of the following values from the enum <ph id="ph1">`CFrameWnd::BorderCmd`</ph>:</source>
        </trans-unit>
        <trans-unit id="763" translate="yes" xml:space="preserve">
          <source>= 1</source>
        </trans-unit>
        <trans-unit id="764" translate="yes" xml:space="preserve">
          <source>= 2</source>
        </trans-unit>
        <trans-unit id="765" translate="yes" xml:space="preserve">
          <source>= 3</source>
        </trans-unit>
        <trans-unit id="766" translate="yes" xml:space="preserve">
          <source>[in, out]</source>
        </trans-unit>
        <trans-unit id="767" translate="yes" xml:space="preserve">
          <source>Pointer to a <bpt id="p1">[</bpt>RECT Structure<ept id="p1">](../../mfc/reference/rect-structure1.md)</ept> or a <bpt id="p2">[</bpt>CRect Class<ept id="p2">](../../atl-mfc-shared/reference/crect-class.md)</ept> object that specifies the coordinates of the border.</source>
        </trans-unit>
        <trans-unit id="768" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="769" translate="yes" xml:space="preserve">
          <source>Nonzero if the method was successful; otherwise 0.</source>
        </trans-unit>
        <trans-unit id="770" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="771" translate="yes" xml:space="preserve">
          <source>This method is an implementation of OLE border space negotiation.</source>
        </trans-unit>
        <trans-unit id="772" translate="yes" xml:space="preserve">
          <source>CMDIFrameWndEx::OnCloseDockingPane</source>
        </trans-unit>
        <trans-unit id="773" translate="yes" xml:space="preserve">
          <source>Called by the framework when the user clicks the <bpt id="p1">**</bpt>Close<ept id="p1">**</ept> button on a dockable pane.</source>
        </trans-unit>
        <trans-unit id="774" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="775" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="776" translate="yes" xml:space="preserve">
          <source>Pointer to the pane being closed.</source>
        </trans-unit>
        <trans-unit id="777" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="778" translate="yes" xml:space="preserve">
          <source>if the docking pane can be closed.</source>
        </trans-unit>
        <trans-unit id="779" translate="yes" xml:space="preserve">
          <source>Otherwise, <ph id="ph1">`FALSE`</ph>.</source>
        </trans-unit>
        <trans-unit id="780" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="781" translate="yes" xml:space="preserve">
          <source>Override this method to handle hiding of docking panes.</source>
        </trans-unit>
        <trans-unit id="782" translate="yes" xml:space="preserve">
          <source>Return <ph id="ph1">`FALSE`</ph> if you want to prevent a docking pane from being hidden.</source>
        </trans-unit>
        <trans-unit id="783" translate="yes" xml:space="preserve">
          <source>The default implementation does nothing and returns <ph id="ph1">`TRUE`</ph>.</source>
        </trans-unit>
        <trans-unit id="784" translate="yes" xml:space="preserve">
          <source>CMDIFrameWndEx::OnCloseMiniFrame</source>
        </trans-unit>
        <trans-unit id="785" translate="yes" xml:space="preserve">
          <source>Called by the framework when the user clicks the <bpt id="p1">**</bpt>Close<ept id="p1">**</ept> button on a floating mini-frame window.</source>
        </trans-unit>
        <trans-unit id="786" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="787" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="788" translate="yes" xml:space="preserve">
          <source>Pointer to the mini-frame window being closed.</source>
        </trans-unit>
        <trans-unit id="789" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="790" translate="yes" xml:space="preserve">
          <source>if the floating mini-frame window can be closed.</source>
        </trans-unit>
        <trans-unit id="791" translate="yes" xml:space="preserve">
          <source>Otherwise, <ph id="ph1">`FALSE`</ph>.</source>
        </trans-unit>
        <trans-unit id="792" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="793" translate="yes" xml:space="preserve">
          <source>Override this method to handle hiding of floating mini-frame windows.</source>
        </trans-unit>
        <trans-unit id="794" translate="yes" xml:space="preserve">
          <source>Return <ph id="ph1">`FALSE`</ph> if you want to prevent a floating mini-frame window from being hidden.</source>
        </trans-unit>
        <trans-unit id="795" translate="yes" xml:space="preserve">
          <source>The default implementation does nothing and returns <ph id="ph1">`TRUE`</ph>.</source>
        </trans-unit>
        <trans-unit id="796" translate="yes" xml:space="preserve">
          <source>CMDIFrameWndEx::OnClosePopupMenu</source>
        </trans-unit>
        <trans-unit id="797" translate="yes" xml:space="preserve">
          <source>Called by the framework when an active pop-up menu processes a <ph id="ph1">`WM_DESTROY`</ph> message.</source>
        </trans-unit>
        <trans-unit id="798" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="799" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="800" translate="yes" xml:space="preserve">
          <source>Pointer to a pop-up menu.</source>
        </trans-unit>
        <trans-unit id="801" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="802" translate="yes" xml:space="preserve">
          <source>Override this method if you want to process notifications from <bpt id="p1">[</bpt>CMFCPopupMenu Class<ept id="p1">](../../mfc/reference/cmfcpopupmenu-class.md)</ept> objects that belong to the MDI frame window when those objects process <ph id="ph1">`WM_DESTROY`</ph> messages.</source>
        </trans-unit>
        <trans-unit id="803" translate="yes" xml:space="preserve">
          <source>CMDIFrameWndEx::OnCmdMsg</source>
        </trans-unit>
        <trans-unit id="804" translate="yes" xml:space="preserve">
          <source>Called by the framework to route and dispatch command messages and to update command user-interface objects.</source>
        </trans-unit>
        <trans-unit id="805" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="806" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="807" translate="yes" xml:space="preserve">
          <source>The command ID.</source>
        </trans-unit>
        <trans-unit id="808" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="809" translate="yes" xml:space="preserve">
          <source>Identifies the command notification code.</source>
        </trans-unit>
        <trans-unit id="810" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>CCmdTarget::OnCmdMsg<ept id="p1">](../../mfc/reference/ccmdtarget-class.md#ccmdtarget__oncmdmsg)</ept> for more information about values for <ph id="ph1">`nCode`</ph>.</source>
        </trans-unit>
        <trans-unit id="811" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="812" translate="yes" xml:space="preserve">
          <source>Used according to the value of <ph id="ph1">`nCode`</ph>.</source>
        </trans-unit>
        <trans-unit id="813" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>CCmdTarget::OnCmdMsg<ept id="p1">](../../mfc/reference/ccmdtarget-class.md#ccmdtarget__oncmdmsg)</ept> for more information about <ph id="ph1">`pExtra`</ph>.</source>
        </trans-unit>
        <trans-unit id="814" translate="yes" xml:space="preserve">
          <source>[in, out]</source>
        </trans-unit>
        <trans-unit id="815" translate="yes" xml:space="preserve">
          <source>Typically, this parameter should be <ph id="ph1">`NULL`</ph>.If not <ph id="ph2">`NULL`</ph>, <ph id="ph3">`OnCmdMsg`</ph> fills in the <ph id="ph4">`pTarget`</ph> and <ph id="ph5">`pmf`</ph> members of the <ph id="ph6">`pHandlerInfo`</ph> structure instead of dispatching the command.</source>
        </trans-unit>
        <trans-unit id="816" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="817" translate="yes" xml:space="preserve">
          <source>Nonzero if the message is handled; otherwise 0.</source>
        </trans-unit>
        <trans-unit id="818" translate="yes" xml:space="preserve">
          <source>CMDIFrameWndEx::OnDrawMenuImage</source>
        </trans-unit>
        <trans-unit id="819" translate="yes" xml:space="preserve">
          <source>Called by the framework when the image associated with a menu item is drawn.</source>
        </trans-unit>
        <trans-unit id="820" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="821" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="822" translate="yes" xml:space="preserve">
          <source>Pointer to a device context.</source>
        </trans-unit>
        <trans-unit id="823" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="824" translate="yes" xml:space="preserve">
          <source>Pointer to the menu button.</source>
        </trans-unit>
        <trans-unit id="825" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="826" translate="yes" xml:space="preserve">
          <source>Bounding rectangle of the image.</source>
        </trans-unit>
        <trans-unit id="827" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="828" translate="yes" xml:space="preserve">
          <source>if the method draws the image.</source>
        </trans-unit>
        <trans-unit id="829" translate="yes" xml:space="preserve">
          <source>The default implementation returns <ph id="ph1">`FALSE`</ph>.</source>
        </trans-unit>
        <trans-unit id="830" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="831" translate="yes" xml:space="preserve">
          <source>Override this method  if you want to customize image rendering for the menu items that belong to the menu bar owned by the <ph id="ph1">`CMDIFrameWndEx`</ph>-derived object.</source>
        </trans-unit>
        <trans-unit id="832" translate="yes" xml:space="preserve">
          <source>The default implementation does nothing.</source>
        </trans-unit>
        <trans-unit id="833" translate="yes" xml:space="preserve">
          <source>CMDIFrameWndEx::OnDrawMenuLogo</source>
        </trans-unit>
        <trans-unit id="834" translate="yes" xml:space="preserve">
          <source>Called by the framework when a <bpt id="p1">[</bpt>CMFCPopupMenu<ept id="p1">](../../mfc/reference/cmfcpopupmenu-class.md)</ept>processes a <ph id="ph1">`WM_PAINT`</ph> message.</source>
        </trans-unit>
        <trans-unit id="835" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="836" translate="yes" xml:space="preserve">
          <source>Override this function to display a logo on the pop-up menu that belongs to the menu bar owned by the <ph id="ph1">`CMDIFrameWndEx`</ph>-derived object.</source>
        </trans-unit>
        <trans-unit id="837" translate="yes" xml:space="preserve">
          <source>The default implementation does nothing.</source>
        </trans-unit>
        <trans-unit id="838" translate="yes" xml:space="preserve">
          <source>CMDIFrameWndEx::OnEraseMDIClientBackground</source>
        </trans-unit>
        <trans-unit id="839" translate="yes" xml:space="preserve">
          <source>Called by the framework when the MDI frame window processes a <ph id="ph1">`WM_ERASEBKGND`</ph> message.</source>
        </trans-unit>
        <trans-unit id="840" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="841" translate="yes" xml:space="preserve">
          <source>if the application processes the message and erases the background.</source>
        </trans-unit>
        <trans-unit id="842" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="843" translate="yes" xml:space="preserve">
          <source>Override this member function if you want to process the <ph id="ph1">`WM_ERASEBKGND`</ph> message in a <ph id="ph2">`CMDIFrameWndEx`</ph>-derived class.</source>
        </trans-unit>
        <trans-unit id="844" translate="yes" xml:space="preserve">
          <source>CMDIFrameWndEx::OnMenuButtonToolHitTest</source>
        </trans-unit>
        <trans-unit id="845" translate="yes" xml:space="preserve">
          <source>Called by the framework when a <bpt id="p1">[</bpt>CMFCToolBarButton<ept id="p1">](../../mfc/reference/cmfctoolbarbutton-class.md)</ept>object processes a <ph id="ph1">`WM_NCHITTEST`</ph> message.</source>
        </trans-unit>
        <trans-unit id="846" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="847" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="848" translate="yes" xml:space="preserve">
          <source>The toolbar button.</source>
        </trans-unit>
        <trans-unit id="849" translate="yes" xml:space="preserve">
          <source>[out]</source>
        </trans-unit>
        <trans-unit id="850" translate="yes" xml:space="preserve">
          <source>Pointer to a <bpt id="p1">[</bpt>TOOLINFO<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb760256)</ept> structure.</source>
        </trans-unit>
        <trans-unit id="851" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="852" translate="yes" xml:space="preserve">
          <source>if the application fills the <ph id="ph1">`pTI`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="853" translate="yes" xml:space="preserve">
          <source>The default implementation returns <ph id="ph1">`FALSE`</ph>.</source>
        </trans-unit>
        <trans-unit id="854" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="855" translate="yes" xml:space="preserve">
          <source>Override this method if you want to provide information about specific menu items to a tooltip.</source>
        </trans-unit>
        <trans-unit id="856" translate="yes" xml:space="preserve">
          <source>The default implementation does nothing.</source>
        </trans-unit>
        <trans-unit id="857" translate="yes" xml:space="preserve">
          <source>CMDIFrameWndEx::OnMoveMiniFrame</source>
        </trans-unit>
        <trans-unit id="858" translate="yes" xml:space="preserve">
          <source>Called by the framework to move a mini-frame window.</source>
        </trans-unit>
        <trans-unit id="859" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="860" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="861" translate="yes" xml:space="preserve">
          <source>A pointer to a mini-frame window.</source>
        </trans-unit>
        <trans-unit id="862" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="863" translate="yes" xml:space="preserve">
          <source>if the method succeeds, otherwise <ph id="ph1">`FALSE`</ph>.</source>
        </trans-unit>
        <trans-unit id="864" translate="yes" xml:space="preserve">
          <source>CMDIFrameWndEx::OnSetPreviewMode</source>
        </trans-unit>
        <trans-unit id="865" translate="yes" xml:space="preserve">
          <source>Sets the application's main frame window print-preview mode.</source>
        </trans-unit>
        <trans-unit id="866" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="867" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="868" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`TRUE`</ph>, sets print-preview mode.</source>
        </trans-unit>
        <trans-unit id="869" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`FALSE`</ph>, cancels preview mode.</source>
        </trans-unit>
        <trans-unit id="870" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="871" translate="yes" xml:space="preserve">
          <source>A pointer to a <ph id="ph1">`CPrintPreviewState`</ph> structure.</source>
        </trans-unit>
        <trans-unit id="872" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="873" translate="yes" xml:space="preserve">
          <source>This method overrides <bpt id="p1">[</bpt>CFrameWnd::OnSetPreviewMode<ept id="p1">](../../mfc/reference/cframewnd-class.md#cframewnd__onsetpreviewmode)</ept>.</source>
        </trans-unit>
        <trans-unit id="874" translate="yes" xml:space="preserve">
          <source>CMDIFrameWndEx::OnShowCustomizePane</source>
        </trans-unit>
        <trans-unit id="875" translate="yes" xml:space="preserve">
          <source>Called by the framework when a Quick Customize pane is activated.</source>
        </trans-unit>
        <trans-unit id="876" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="877" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="878" translate="yes" xml:space="preserve">
          <source>A pointer to the Quick Customize pane.</source>
        </trans-unit>
        <trans-unit id="879" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="880" translate="yes" xml:space="preserve">
          <source>Control ID of the toolbar to customize.</source>
        </trans-unit>
        <trans-unit id="881" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="882" translate="yes" xml:space="preserve">
          <source>This method always returns <ph id="ph1">`TRUE`</ph>.</source>
        </trans-unit>
        <trans-unit id="883" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="884" translate="yes" xml:space="preserve">
          <source>The Quick Customize pane is a menu that opens when the user clicks <bpt id="p1">**</bpt>Customize<ept id="p1">**</ept> on a toolbar.</source>
        </trans-unit>
        <trans-unit id="885" translate="yes" xml:space="preserve">
          <source>Override this method in a derived class to make changes in the Quick Customize pane.</source>
        </trans-unit>
        <trans-unit id="886" translate="yes" xml:space="preserve">
          <source>CMDIFrameWndEx::OnShowMDITabContextMenu</source>
        </trans-unit>
        <trans-unit id="887" translate="yes" xml:space="preserve">
          <source>Called by the framework before a shortcut menu is displayed on one of the tabs.</source>
        </trans-unit>
        <trans-unit id="888" translate="yes" xml:space="preserve">
          <source>Valid for MDI Tabbed Groups only.</source>
        </trans-unit>
        <trans-unit id="889" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="890" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="891" translate="yes" xml:space="preserve">
          <source>The location of the menu in screen coordinates.</source>
        </trans-unit>
        <trans-unit id="892" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="893" translate="yes" xml:space="preserve">
          <source>A bitwise-OR combination of flags that indicates what actions are allowed for the current tab:</source>
        </trans-unit>
        <trans-unit id="894" translate="yes" xml:space="preserve">
          <source>- can create a vertical tab group.</source>
        </trans-unit>
        <trans-unit id="895" translate="yes" xml:space="preserve">
          <source>- can create a horizontal tab group.</source>
        </trans-unit>
        <trans-unit id="896" translate="yes" xml:space="preserve">
          <source>- can move a tab to the previous tab group.</source>
        </trans-unit>
        <trans-unit id="897" translate="yes" xml:space="preserve">
          <source>- can move a tab to the next tab group.</source>
        </trans-unit>
        <trans-unit id="898" translate="yes" xml:space="preserve">
          <source>- switch a tabbed document to docked state (relevant for tabbed documents only).</source>
        </trans-unit>
        <trans-unit id="899" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="900" translate="yes" xml:space="preserve">
          <source>to display the menu as a result of dragging the tab onto another tabbed group.</source>
        </trans-unit>
        <trans-unit id="901" translate="yes" xml:space="preserve">
          <source>to display the menu as a shortcut menu on the currently active tab.</source>
        </trans-unit>
        <trans-unit id="902" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="903" translate="yes" xml:space="preserve">
          <source>Override this method in a <bpt id="p1">[</bpt>CBCGPMDIFrameWnd<ept id="p1">](../../mfc/reference/cmdiframewndex-class.md)</ept>-derived class.</source>
        </trans-unit>
        <trans-unit id="904" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="905" translate="yes" xml:space="preserve">
          <source>If you do not process <ph id="ph1">`OnShowMDITabContextMenu`</ph>, the shortcut menu will not be displayed.</source>
        </trans-unit>
        <trans-unit id="906" translate="yes" xml:space="preserve">
          <source>This function is generated by the <bpt id="p1">**</bpt>MFC Application Wizard<ept id="p1">**</ept> when you enable the MDI Tabbed Groups feature.</source>
        </trans-unit>
        <trans-unit id="907" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="908" translate="yes" xml:space="preserve">
          <source>The following example shows how <ph id="ph1">`OnShowMDITabContextMenu`</ph> is used in the <bpt id="p1">[</bpt>VisualStudioDemo Sample: MFC Visual Studio Application<ept id="p1">](../../visual-cpp-samples.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="909" translate="yes" xml:space="preserve">
          <source>NVC_MFC_VisualStudioDemo#14</source>
        </trans-unit>
        <trans-unit id="910" translate="yes" xml:space="preserve">
          <source>CMDIFrameWndEx::OnShowPanes</source>
        </trans-unit>
        <trans-unit id="911" translate="yes" xml:space="preserve">
          <source>Called by the framework to show or hide panes.</source>
        </trans-unit>
        <trans-unit id="912" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="913" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="914" translate="yes" xml:space="preserve">
          <source>to show panes, <ph id="ph1">`FALSE`</ph> to hide panes.</source>
        </trans-unit>
        <trans-unit id="915" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="916" translate="yes" xml:space="preserve">
          <source>if the state of the panes changes as a result of calling this method, <ph id="ph1">`FALSE`</ph> if the panes are already in the state specified by <ph id="ph2">`bShow`</ph>.</source>
        </trans-unit>
        <trans-unit id="917" translate="yes" xml:space="preserve">
          <source>For example, if the panes are hidden and <ph id="ph1">`bShow`</ph> is <ph id="ph2">`FALSE`</ph>, the return value is <ph id="ph3">`FALSE`</ph>.</source>
        </trans-unit>
        <trans-unit id="918" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="919" translate="yes" xml:space="preserve">
          <source>The default implementation removes the toolbar from the top-level frame window.</source>
        </trans-unit>
        <trans-unit id="920" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">[</bpt>CDockingManager::m_bHideDockingBarsInContainerMode<ept id="p1">](../../mfc/reference/cdockingmanager-class.md#cdockingmanager__m_bhidedockingbarsincontainermode)</ept> is <ph id="ph1">`TRUE`</ph> (the default), all docking panes will be hidden.</source>
        </trans-unit>
        <trans-unit id="921" translate="yes" xml:space="preserve">
          <source>CMDIFrameWndEx::OnShowPopupMenu</source>
        </trans-unit>
        <trans-unit id="922" translate="yes" xml:space="preserve">
          <source>Called by the framework when it opens a pop-up menu.</source>
        </trans-unit>
        <trans-unit id="923" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="924" translate="yes" xml:space="preserve">
          <source>if the pop-up menu is to be displayed.</source>
        </trans-unit>
        <trans-unit id="925" translate="yes" xml:space="preserve">
          <source>Otherwise, <ph id="ph1">`FALSE`</ph>.</source>
        </trans-unit>
        <trans-unit id="926" translate="yes" xml:space="preserve">
          <source>The default implementation returns <ph id="ph1">`TRUE`</ph>.</source>
        </trans-unit>
        <trans-unit id="927" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="928" translate="yes" xml:space="preserve">
          <source>Override this method if you want to implement special processing upon pop-up menu activation.</source>
        </trans-unit>
        <trans-unit id="929" translate="yes" xml:space="preserve">
          <source>For example, if you want to change regular menu items to color menu buttons, set up tear-off bars, and so on.</source>
        </trans-unit>
        <trans-unit id="930" translate="yes" xml:space="preserve">
          <source>The default implementation does nothing.</source>
        </trans-unit>
        <trans-unit id="931" translate="yes" xml:space="preserve">
          <source>CMDIFrameWndEx::OnSizeMDIClient</source>
        </trans-unit>
        <trans-unit id="932" translate="yes" xml:space="preserve">
          <source>Called by the framework when the size of the client MDI window is changing.</source>
        </trans-unit>
        <trans-unit id="933" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="934" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="935" translate="yes" xml:space="preserve">
          <source>The current size of the MDI client window.</source>
        </trans-unit>
        <trans-unit id="936" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="937" translate="yes" xml:space="preserve">
          <source>The new size of the MDI client window.</source>
        </trans-unit>
        <trans-unit id="938" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="939" translate="yes" xml:space="preserve">
          <source>CMDIFrameWndEx::OnTearOffMenu</source>
        </trans-unit>
        <trans-unit id="940" translate="yes" xml:space="preserve">
          <source>Called by the framework when a menu that has a tear-off bar is activated.</source>
        </trans-unit>
        <trans-unit id="941" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="942" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="943" translate="yes" xml:space="preserve">
          <source>A pointer to the pop-up menu.</source>
        </trans-unit>
        <trans-unit id="944" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="945" translate="yes" xml:space="preserve">
          <source>A pointer to the tear-off bar.</source>
        </trans-unit>
        <trans-unit id="946" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="947" translate="yes" xml:space="preserve">
          <source>to allow the pop-up menu with the tear-off bar to be made activate; otherwise <ph id="ph1">`FALSE`</ph>.</source>
        </trans-unit>
        <trans-unit id="948" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`TRUE`</ph>.</source>
        </trans-unit>
        <trans-unit id="949" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="950" translate="yes" xml:space="preserve">
          <source>Override this function when you want to implement a special setup for the tear-off bar.</source>
        </trans-unit>
        <trans-unit id="951" translate="yes" xml:space="preserve">
          <source>The default implementation does nothing.</source>
        </trans-unit>
        <trans-unit id="952" translate="yes" xml:space="preserve">
          <source>CMDIFrameWndEx::OnUpdateFrameMenu</source>
        </trans-unit>
        <trans-unit id="953" translate="yes" xml:space="preserve">
          <source>Called by the framework to update the frame menu.</source>
        </trans-unit>
        <trans-unit id="954" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="955" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="956" translate="yes" xml:space="preserve">
          <source>A handle to a menu.</source>
        </trans-unit>
        <trans-unit id="957" translate="yes" xml:space="preserve">
          <source>CMDIFrameWndEx::PaneFromPoint</source>
        </trans-unit>
        <trans-unit id="958" translate="yes" xml:space="preserve">
          <source>Returns the docking pane that contains the specified point.</source>
        </trans-unit>
        <trans-unit id="959" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="960" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="961" translate="yes" xml:space="preserve">
          <source>The point (in screen coordinates).</source>
        </trans-unit>
        <trans-unit id="962" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="963" translate="yes" xml:space="preserve">
          <source>The window rectangle of each checked pane is enlarged in all directions by this value.</source>
        </trans-unit>
        <trans-unit id="964" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="965" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`TRUE`</ph>, the <ph id="ph2">`nSensitivity`</ph> parameter is ignored.</source>
        </trans-unit>
        <trans-unit id="966" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="967" translate="yes" xml:space="preserve">
          <source>If non- <ph id="ph1">`NULL`</ph>, the method iterates over only the panes of the specified type.</source>
        </trans-unit>
        <trans-unit id="968" translate="yes" xml:space="preserve">
          <source>[out]</source>
        </trans-unit>
        <trans-unit id="969" translate="yes" xml:space="preserve">
          <source>If a pane is found, this parameter will specify which side of the pane is closest to the specified point.</source>
        </trans-unit>
        <trans-unit id="970" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="971" translate="yes" xml:space="preserve">
          <source>A pointer to a docking pane, or <ph id="ph1">`NULL`</ph> if no control contains the point specified by <ph id="ph2">`point`</ph>.</source>
        </trans-unit>
        <trans-unit id="972" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="973" translate="yes" xml:space="preserve">
          <source>The call is redirected to the <bpt id="p1">[</bpt>CDockingManager Class<ept id="p1">](../../mfc/reference/cdockingmanager-class.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="974" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>CDockingManager::ControlBarFromPoint<ept id="p1">](../../mfc/reference/cdockingmanager-class.md#cdockingmanager__panefrompoint)</ept> for more information.</source>
        </trans-unit>
        <trans-unit id="975" translate="yes" xml:space="preserve">
          <source>CMDIFrameWndEx::RecalcLayout</source>
        </trans-unit>
        <trans-unit id="976" translate="yes" xml:space="preserve">
          <source>Called by the framework to recalculate the layout of the frame window.</source>
        </trans-unit>
        <trans-unit id="977" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="978" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="979" translate="yes" xml:space="preserve">
          <source>Determines whether the active in-place item for the frame window receives notification of the layout change.</source>
        </trans-unit>
        <trans-unit id="980" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`TRUE`</ph>, the item is notified; otherwise <ph id="ph2">`FALSE`</ph>.</source>
        </trans-unit>
        <trans-unit id="981" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="982" translate="yes" xml:space="preserve">
          <source>This method overrides <bpt id="p1">[</bpt>CFrameWnd::RecalcLayout<ept id="p1">](../../mfc/reference/cframewnd-class.md#cframewnd__recalclayout)</ept>.</source>
        </trans-unit>
        <trans-unit id="983" translate="yes" xml:space="preserve">
          <source>CMDIFrameWndEx::RemovePaneFromDockManager</source>
        </trans-unit>
        <trans-unit id="984" translate="yes" xml:space="preserve">
          <source>Unregisters a pane and removes it from the docking manager.</source>
        </trans-unit>
        <trans-unit id="985" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="986" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="987" translate="yes" xml:space="preserve">
          <source>A pointer to a pane to be removed.</source>
        </trans-unit>
        <trans-unit id="988" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="989" translate="yes" xml:space="preserve">
          <source>to destroy the removed pane.</source>
        </trans-unit>
        <trans-unit id="990" translate="yes" xml:space="preserve">
          <source>to not destroy it.</source>
        </trans-unit>
        <trans-unit id="991" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="992" translate="yes" xml:space="preserve">
          <source>to adjust the docking layout immediately.</source>
        </trans-unit>
        <trans-unit id="993" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`FALSE`</ph>, the adjustment will occur only when a redraw event occurs for other reasons (the user resizes the window, drags the main frame, etc.).</source>
        </trans-unit>
        <trans-unit id="994" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="995" translate="yes" xml:space="preserve">
          <source>to remove the pane from the list of autohide panes.</source>
        </trans-unit>
        <trans-unit id="996" translate="yes" xml:space="preserve">
          <source>to remove the pane from the list of regular panes.</source>
        </trans-unit>
        <trans-unit id="997" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="998" translate="yes" xml:space="preserve">
          <source>A pointer to a pane that replaces the removed pane.</source>
        </trans-unit>
        <trans-unit id="999" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="1000" translate="yes" xml:space="preserve">
          <source>You must register each pane with the docking manager to take part in the docking layout.</source>
        </trans-unit>
        <trans-unit id="1001" translate="yes" xml:space="preserve">
          <source>Use <bpt id="p1">[</bpt>CMDIFrameWndEx::AddPane<ept id="p1">](#cmdiframewndex__addpane)</ept> or <bpt id="p2">[</bpt>CMDIFrameWndEx::InsertPane<ept id="p2">](#cmdiframewndex__insertpane)</ept> to register panes.</source>
        </trans-unit>
        <trans-unit id="1002" translate="yes" xml:space="preserve">
          <source>Use this method when a pane is no longer a part of the docking layout of the frame window.</source>
        </trans-unit>
        <trans-unit id="1003" translate="yes" xml:space="preserve">
          <source>CMDIFrameWndEx::SaveMDIState</source>
        </trans-unit>
        <trans-unit id="1004" translate="yes" xml:space="preserve">
          <source>Saves the current layout of MDI Tabbed Groups and the list of previously opened documents.</source>
        </trans-unit>
        <trans-unit id="1005" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="1006" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="1007" translate="yes" xml:space="preserve">
          <source>Specifies the profile name.</source>
        </trans-unit>
        <trans-unit id="1008" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="1009" translate="yes" xml:space="preserve">
          <source>if the save succeeded; <ph id="ph1">`FALSE`</ph> if the save failed.</source>
        </trans-unit>
        <trans-unit id="1010" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="1011" translate="yes" xml:space="preserve">
          <source>To load or save the state of MDI tabs and groups and the list of opened documents, do the following:</source>
        </trans-unit>
        <trans-unit id="1012" translate="yes" xml:space="preserve">
          <source>Call <ph id="ph1">`SaveMDIState`</ph> when the main frame is being closed</source>
        </trans-unit>
        <trans-unit id="1013" translate="yes" xml:space="preserve">
          <source>Call <bpt id="p1">[</bpt>CMDIFrameWndEx::LoadMDIState<ept id="p1">](#cmdiframewndex__loadmdistate)</ept> when the main frame is being created.</source>
        </trans-unit>
        <trans-unit id="1014" translate="yes" xml:space="preserve">
          <source>The recommended location for this call is before the main frame is displayed for the first time.</source>
        </trans-unit>
        <trans-unit id="1015" translate="yes" xml:space="preserve">
          <source>Call <ph id="ph1">`CWinAppEx::EnableLoadWindowPlacement(FALSE);`</ph> before</source>
        </trans-unit>
        <trans-unit id="1016" translate="yes" xml:space="preserve">
          <source>Call <ph id="ph1">`CWinAppEx::ReloadWindowPlacement``(pMainFrame)`</ph> after <ph id="ph2">`LoadMDIState`</ph> to display the main frame at the position that was stored in the registry.</source>
        </trans-unit>
        <trans-unit id="1017" translate="yes" xml:space="preserve">
          <source>Override <ph id="ph1">`GetDocumentName`</ph> in the <ph id="ph2">`CMDIChildWndEx`</ph>- derived class if your application displays documents that are not stored as files.</source>
        </trans-unit>
        <trans-unit id="1018" translate="yes" xml:space="preserve">
          <source>The returned string will be saved in the registry as a document identifier.</source>
        </trans-unit>
        <trans-unit id="1019" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>CMDIChildWndEx::GetDocumentName<ept id="p1">](../../mfc/reference/cmdichildwndex-class.md#cmdichildwndex__getdocumentname)</ept>.</source>
        </trans-unit>
        <trans-unit id="1020" translate="yes" xml:space="preserve">
          <source>Override <bpt id="p1">[</bpt>CMDIFrameWndEx::CreateDocumentWindow<ept id="p1">](#cmdiframewndex__createdocumentwindow)</ept> to correctly create documents when they are loaded from the registry.</source>
        </trans-unit>
        <trans-unit id="1021" translate="yes" xml:space="preserve">
          <source>The parameter to <ph id="ph1">`CreateDocumentWindow`</ph> is the string that <ph id="ph2">`GetDocumentName`</ph> returned earlier.</source>
        </trans-unit>
        <trans-unit id="1022" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="1023" translate="yes" xml:space="preserve">
          <source>The following example shows how <ph id="ph1">`SaveMDIState`</ph> is used in the <bpt id="p1">[</bpt>VisualStudioDemo Sample: MFC Visual Studio Application<ept id="p1">](../../visual-cpp-samples.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="1024" translate="yes" xml:space="preserve">
          <source>NVC_MFC_VisualStudioDemo#15</source>
        </trans-unit>
        <trans-unit id="1025" translate="yes" xml:space="preserve">
          <source>CMDIFrameWndEx::SetPrintPreviewFrame</source>
        </trans-unit>
        <trans-unit id="1026" translate="yes" xml:space="preserve">
          <source>Sets the print preview frame window.</source>
        </trans-unit>
        <trans-unit id="1027" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="1028" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="1029" translate="yes" xml:space="preserve">
          <source>Pointer to a print preview frame window.</source>
        </trans-unit>
        <trans-unit id="1030" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="1031" translate="yes" xml:space="preserve">
          <source>CMDIFrameWndEx::SetupToolbarMenu</source>
        </trans-unit>
        <trans-unit id="1032" translate="yes" xml:space="preserve">
          <source>Modifies a toolbar object by replacing dummy items with user-defined items.</source>
        </trans-unit>
        <trans-unit id="1033" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="1034" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="1035" translate="yes" xml:space="preserve">
          <source>A reference to a <bpt id="p1">[</bpt>CMenu Class<ept id="p1">](../../mfc/reference/cmenu-class.md)</ept> object to be modified.</source>
        </trans-unit>
        <trans-unit id="1036" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="1037" translate="yes" xml:space="preserve">
          <source>Specifies the first user-defined command.</source>
        </trans-unit>
        <trans-unit id="1038" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="1039" translate="yes" xml:space="preserve">
          <source>Specifies the last user-defined command.</source>
        </trans-unit>
        <trans-unit id="1040" translate="yes" xml:space="preserve">
          <source>CMDIFrameWndEx::ShowFullScreen</source>
        </trans-unit>
        <trans-unit id="1041" translate="yes" xml:space="preserve">
          <source>Switches the main frame from regular mode to full-screen mode.</source>
        </trans-unit>
        <trans-unit id="1042" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="1043" translate="yes" xml:space="preserve">
          <source>CMDIFrameWndEx::ShowPane</source>
        </trans-unit>
        <trans-unit id="1044" translate="yes" xml:space="preserve">
          <source>Shows or hides the specified pane.</source>
        </trans-unit>
        <trans-unit id="1045" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="1046" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="1047" translate="yes" xml:space="preserve">
          <source>Pointer to the pane to be shown or hidden.</source>
        </trans-unit>
        <trans-unit id="1048" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="1049" translate="yes" xml:space="preserve">
          <source>to show the pane.</source>
        </trans-unit>
        <trans-unit id="1050" translate="yes" xml:space="preserve">
          <source>to hide the pane.</source>
        </trans-unit>
        <trans-unit id="1051" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="1052" translate="yes" xml:space="preserve">
          <source>to delay the recalculation of the docking layout.</source>
        </trans-unit>
        <trans-unit id="1053" translate="yes" xml:space="preserve">
          <source>to recalculate the docking layout immediately.</source>
        </trans-unit>
        <trans-unit id="1054" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="1055" translate="yes" xml:space="preserve">
          <source>to show the pane should as active.</source>
        </trans-unit>
        <trans-unit id="1056" translate="yes" xml:space="preserve">
          <source>to show the pane as inactive.</source>
        </trans-unit>
        <trans-unit id="1057" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="1058" translate="yes" xml:space="preserve">
          <source>Call this method to show or hide the pane.</source>
        </trans-unit>
        <trans-unit id="1059" translate="yes" xml:space="preserve">
          <source>Do not use <ph id="ph1">`ShowWindow`</ph> for docking panes.</source>
        </trans-unit>
        <trans-unit id="1060" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="1061" translate="yes" xml:space="preserve">
          <source>The following example shows how <ph id="ph1">`ShowPane`</ph> is used in the <bpt id="p1">[</bpt>VisualStudioDemo Sample: MFC Visual Studio Application<ept id="p1">](../../visual-cpp-samples.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="1062" translate="yes" xml:space="preserve">
          <source>NVC_MFC_VisualStudioDemo#16</source>
        </trans-unit>
        <trans-unit id="1063" translate="yes" xml:space="preserve">
          <source>CMDIFrameWndEx::ShowWindowsDialog</source>
        </trans-unit>
        <trans-unit id="1064" translate="yes" xml:space="preserve">
          <source>Creates a <bpt id="p1">[</bpt>CMFCWindowsManagerDialog<ept id="p1">](../../mfc/reference/cmfcwindowsmanagerdialog-class.md)</ept> box and opens it.</source>
        </trans-unit>
        <trans-unit id="1065" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="1066" translate="yes" xml:space="preserve">
          <source>The following example shows how <ph id="ph1">`ShowWindowsDialog`</ph> is used in the <bpt id="p1">[</bpt>VisualStudioDemo Sample: MFC Visual Studio Application<ept id="p1">](../../visual-cpp-samples.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="1067" translate="yes" xml:space="preserve">
          <source>NVC_MFC_VisualStudioDemo#18</source>
        </trans-unit>
        <trans-unit id="1068" translate="yes" xml:space="preserve">
          <source>CMDIFrameWndEx::TabbedDocumentToControlBar</source>
        </trans-unit>
        <trans-unit id="1069" translate="yes" xml:space="preserve">
          <source>Converts the specified tabbed document to a docking pane.</source>
        </trans-unit>
        <trans-unit id="1070" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="1071" translate="yes" xml:space="preserve">
          <source>A pointer to MDI child window that contains a docking pane.</source>
        </trans-unit>
        <trans-unit id="1072" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="1073" translate="yes" xml:space="preserve">
          <source>if the method was successful, <ph id="ph1">`FALSE`</ph> on failure.</source>
        </trans-unit>
        <trans-unit id="1074" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="1075" translate="yes" xml:space="preserve">
          <source>Use this method to convert a tabbed document to a docking pane.</source>
        </trans-unit>
        <trans-unit id="1076" translate="yes" xml:space="preserve">
          <source>The tabbed document must have been created by using <bpt id="p1">[</bpt>CMDIFrameWndEx::ControlBarToTabbedDocument<ept id="p1">](#cmdiframewndex__controlbartotabbeddocument)</ept>.</source>
        </trans-unit>
        <trans-unit id="1077" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="1078" translate="yes" xml:space="preserve">
          <source>The following example shows how <ph id="ph1">`TabbedDocumentToControlBar`</ph> is used in the <bpt id="p1">[</bpt>VisualStudioDemo Sample: MFC Visual Studio Application<ept id="p1">](../../visual-cpp-samples.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="1079" translate="yes" xml:space="preserve">
          <source>NVC_MFC_VisualStudioDemo#19</source>
        </trans-unit>
        <trans-unit id="1080" translate="yes" xml:space="preserve">
          <source>CMDIFrameWndEx::UpdateCaption</source>
        </trans-unit>
        <trans-unit id="1081" translate="yes" xml:space="preserve">
          <source>Called by the framework to update the window frame caption.</source>
        </trans-unit>
        <trans-unit id="1082" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="1083" translate="yes" xml:space="preserve">
          <source>CMDIFrameWndEx::UpdateMDITabbedBarsIcons</source>
        </trans-unit>
        <trans-unit id="1084" translate="yes" xml:space="preserve">
          <source>Sets the icon for each MDI tabbed pane.</source>
        </trans-unit>
        <trans-unit id="1085" translate="yes" xml:space="preserve">
          <source>CMDIFrameWndEx::WinHelp</source>
        </trans-unit>
        <trans-unit id="1086" translate="yes" xml:space="preserve">
          <source>Called by the framework to initiate the WinHelp application or context help.</source>
        </trans-unit>
        <trans-unit id="1087" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="1088" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="1089" translate="yes" xml:space="preserve">
          <source>Specifies data as required for the type of help specified by <ph id="ph1">`nCmd`</ph>.</source>
        </trans-unit>
        <trans-unit id="1090" translate="yes" xml:space="preserve">
          <source>[in]</source>
        </trans-unit>
        <trans-unit id="1091" translate="yes" xml:space="preserve">
          <source>Specifies the type of help requested.</source>
        </trans-unit>
        <trans-unit id="1092" translate="yes" xml:space="preserve">
          <source>For a list of possible values and how they affect the <ph id="ph1">`dwData`</ph> parameter, see the <bpt id="p1">[</bpt>WinHelp Function<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb762267)</ept> in the Windows SDK.</source>
        </trans-unit>
        <trans-unit id="1093" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="1094" translate="yes" xml:space="preserve">
          <source>This method overrides <bpt id="p1">[</bpt>CWnd::WinHelp<ept id="p1">](../../mfc/reference/cwnd-class.md#cwnd__winhelp)</ept>.</source>
        </trans-unit>
        <trans-unit id="1095" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="1096" translate="yes" xml:space="preserve">
          <source>Hierarchy Chart</source>
        </trans-unit>
        <trans-unit id="1097" translate="yes" xml:space="preserve">
          <source>Classes</source>
        </trans-unit>
        <trans-unit id="1098" translate="yes" xml:space="preserve">
          <source>CMDIFrameWnd</source>
        </trans-unit>
        <trans-unit id="1099" translate="yes" xml:space="preserve">
          <source>CMDIChildWndEx Class</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>