{"nodes":[{"pos":[12,49],"content":"Types of Expressions | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Types of Expressions | Microsoft Docs","pos":[0,37]}]},{"content":"Types of Expressions","pos":[586,606]},{"content":"C++ expressions are divided into several categories:","pos":[607,659]},{"content":"<bpt id=\"p1\">[</bpt>Primary expressions<ept id=\"p1\">](../cpp/primary-expressions.md)</ept>.","pos":[669,722],"source":"[Primary expressions](../cpp/primary-expressions.md)."},{"content":"These are the building blocks from which all other expressions are formed.","pos":[723,797]},{"content":"<bpt id=\"p1\">[</bpt>Postfix expressions<ept id=\"p1\">](../cpp/postfix-expressions.md)</ept>.","pos":[807,860],"source":"[Postfix expressions](../cpp/postfix-expressions.md)."},{"content":"These are primary expressions followed by an operator — for example, the array subscript or postfix increment operator.","pos":[861,980]},{"content":"<bpt id=\"p1\">[</bpt>Expressions formed with unary operators<ept id=\"p1\">](../cpp/expressions-with-unary-operators.md)</ept>.","pos":[990,1076],"source":"[Expressions formed with unary operators](../cpp/expressions-with-unary-operators.md)."},{"content":"Unary operators act on only one operand in an expression.","pos":[1077,1134]},{"content":"<bpt id=\"p1\">[</bpt>Expressions formed with binary operators<ept id=\"p1\">](../cpp/expressions-with-binary-operators.md)</ept>.","pos":[1144,1232],"source":"[Expressions formed with binary operators](../cpp/expressions-with-binary-operators.md)."},{"content":"Binary operators act on two operands in an expression.","pos":[1233,1287]},{"content":"<bpt id=\"p1\">[</bpt>Expressions with the conditional operator<ept id=\"p1\">](../cpp/conditional-operator-q.md)</ept>.","pos":[1297,1375],"source":"[Expressions with the conditional operator](../cpp/conditional-operator-q.md)."},{"content":"The conditional operator is a ternary operator — the only such operator in the C++ language — and takes three operands.","pos":[1376,1495]},{"content":"<bpt id=\"p1\">[</bpt>Constant expressions<ept id=\"p1\">](../cpp/cpp-constant-expressions.md)</ept>.","pos":[1505,1564],"source":"[Constant expressions](../cpp/cpp-constant-expressions.md)."},{"content":"Constant expressions are formed entirely of constant data.","pos":[1565,1623]},{"content":"<bpt id=\"p1\">[</bpt>Expressions with explicit type conversions<ept id=\"p1\">](http://msdn.microsoft.com/en-us/060ad6b4-9592-4f3e-8509-a20ac84a85ae)</ept>.","pos":[1633,1748],"source":"[Expressions with explicit type conversions](http://msdn.microsoft.com/en-us/060ad6b4-9592-4f3e-8509-a20ac84a85ae)."},{"content":"Explicit type conversions, or \"casts,\" can be used in expressions.","pos":[1749,1815]},{"pos":[1825,1929],"content":"<bpt id=\"p1\">[</bpt>Expressions with pointer-to-member operators<ept id=\"p1\">](../cpp/pointer-to-member-operators-dot-star-and-star.md)</ept>.","source":"[Expressions with pointer-to-member operators](../cpp/pointer-to-member-operators-dot-star-and-star.md)."},{"content":"<bpt id=\"p1\">[</bpt>Casting<ept id=\"p1\">](../cpp/casting.md)</ept>.","pos":[1939,1968],"source":"[Casting](../cpp/casting.md)."},{"content":"Type-safe \"casts\" can be used in expressions.","pos":[1969,2014]},{"content":"<bpt id=\"p1\">[</bpt>Run-Time Type Information<ept id=\"p1\">](../cpp/run-time-type-information.md)</ept>.","pos":[2024,2089],"source":"[Run-Time Type Information](../cpp/run-time-type-information.md)."},{"content":"Determine the type of an object during program execution.","pos":[2090,2147]},{"content":"See Also","pos":[2156,2164]},{"content":"Expressions","pos":[2169,2180]}],"content":"---\ntitle: \"Types of Expressions | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"index-page \"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"expressions [C++], types\"\nms.assetid: 1e7540b0-8fdb-49ab-b3e1-6ec439ff473a\ncaps.latest.revision: 6\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Types of Expressions\nC++ expressions are divided into several categories:  \n  \n-   [Primary expressions](../cpp/primary-expressions.md). These are the building blocks from which all other expressions are formed.  \n  \n-   [Postfix expressions](../cpp/postfix-expressions.md). These are primary expressions followed by an operator — for example, the array subscript or postfix increment operator.  \n  \n-   [Expressions formed with unary operators](../cpp/expressions-with-unary-operators.md). Unary operators act on only one operand in an expression.  \n  \n-   [Expressions formed with binary operators](../cpp/expressions-with-binary-operators.md). Binary operators act on two operands in an expression.  \n  \n-   [Expressions with the conditional operator](../cpp/conditional-operator-q.md). The conditional operator is a ternary operator — the only such operator in the C++ language — and takes three operands.  \n  \n-   [Constant expressions](../cpp/cpp-constant-expressions.md). Constant expressions are formed entirely of constant data.  \n  \n-   [Expressions with explicit type conversions](http://msdn.microsoft.com/en-us/060ad6b4-9592-4f3e-8509-a20ac84a85ae). Explicit type conversions, or \"casts,\" can be used in expressions.  \n  \n-   [Expressions with pointer-to-member operators](../cpp/pointer-to-member-operators-dot-star-and-star.md).  \n  \n-   [Casting](../cpp/casting.md). Type-safe \"casts\" can be used in expressions.  \n  \n-   [Run-Time Type Information](../cpp/run-time-type-information.md). Determine the type of an object during program execution.  \n  \n## See Also  \n [Expressions](../cpp/expressions-cpp.md)"}