{"nodes":[{"pos":[12,58],"content":"IWorkerThreadClient Interface | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"IWorkerThreadClient Interface | Microsoft Docs","pos":[0,46]}]},{"pos":[700,729],"content":"IWorkerThreadClient Interface","linkify":"IWorkerThreadClient Interface","nodes":[{"content":"IWorkerThreadClient Interface","pos":[0,29]}]},{"pos":[730,865],"content":"<ph id=\"ph1\">`IWorkerThreadClient`</ph> is the interface implemented by clients of the <bpt id=\"p1\">[</bpt>CWorkerThread<ept id=\"p1\">](../../atl/reference/cworkerthread-class.md)</ept> class.","source":"`IWorkerThreadClient` is the interface implemented by clients of the [CWorkerThread](../../atl/reference/cworkerthread-class.md) class."},{"pos":[873,1023],"content":"[!IMPORTANT]\n This class and its members cannot be used in applications that execute in the [!INCLUDE[wrt](../../atl/reference/includes/wrt_md.md)].","leadings":["","> "],"nodes":[{"content":"This class and its members cannot be used in applications that execute in the <ph id=\"ph1\">[!INCLUDE[wrt](../../atl/reference/includes/wrt_md.md)]</ph>.","pos":[14,148],"source":" This class and its members cannot be used in applications that execute in the [!INCLUDE[wrt](../../atl/reference/includes/wrt_md.md)]."}]},{"pos":[1032,1038],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[1092,1099],"content":"Members","linkify":"Members","nodes":[{"content":"Members","pos":[0,7]}]},{"pos":[1109,1116],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"pos":[1137,1185],"content":"<bpt id=\"p1\">[</bpt>CloseHandle<ept id=\"p1\">](#iworkerthreadclient__closehandle)</ept>","source":"[CloseHandle](#iworkerthreadclient__closehandle)"},{"content":"Implement this method to close the handle associated with this object.","pos":[1186,1256]},{"pos":[1261,1301],"content":"<bpt id=\"p1\">[</bpt>Execute<ept id=\"p1\">](#iworkerthreadclient__execute)</ept>","source":"[Execute](#iworkerthreadclient__execute)"},{"content":"Implement this method to execute code when the handle associated with this object becomes signaled.","pos":[1302,1401]},{"pos":[1411,1418],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Implement this interface when you have code that needs to execute on a worker thread in response to a handle becoming signaled.","pos":[1422,1549]},{"pos":[1558,1570],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[1574,1595],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> atlutil.h","source":"**Header:** atlutil.h"},{"pos":[1605,1686],"content":"<bpt id=\"p1\">&lt;a name=\"iworkerthreadclient__closehandle\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  IWorkerThreadClient::CloseHandle","linkify":"<a name=\"iworkerthreadclient__closehandle\"></a>  IWorkerThreadClient::CloseHandle","source":"<a name=\"iworkerthreadclient__closehandle\"></a>  IWorkerThreadClient::CloseHandle"},{"content":"Implement this method to close the handle associated with this object.","pos":[1690,1760]},{"pos":[1823,1833],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"<bpt id=\"p1\">*</bpt>hHandle<ept id=\"p1\">*</ept>","pos":[1837,1846],"source":"*hHandle*"},{"content":"The handle to be closed.","pos":[1850,1874]},{"pos":[1884,1896],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Return S_OK on success, or an error HRESULT on failure.","pos":[1900,1955]},{"pos":[1965,1972],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[1976,2161],"content":"The handle passed to this method was previously associated with this object by a call to <bpt id=\"p1\">[</bpt>CWorkerThread::AddHandle<ept id=\"p1\">](../../atl/reference/cworkerthread-class.md#cworkerthread__addhandle)</ept>.","source":"The handle passed to this method was previously associated with this object by a call to [CWorkerThread::AddHandle](../../atl/reference/cworkerthread-class.md#cworkerthread__addhandle)."},{"pos":[2171,2178],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[2182,2269],"content":"The following code shows a simple implementation of <ph id=\"ph1\">`IWorkerThreadClient::CloseHandle`</ph>.","source":"The following code shows a simple implementation of `IWorkerThreadClient::CloseHandle`."},{"pos":[2276,2373],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_ATL_Utilities#135<ept id=\"p2\">](../../atl/codesnippet/cpp/iworkerthreadclient-interface_1.cpp)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_ATL_Utilities#135](../../atl/codesnippet/cpp/iworkerthreadclient-interface_1.cpp)]"},{"pos":[2383,2456],"content":"<bpt id=\"p1\">&lt;a name=\"iworkerthreadclient__execute\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  IWorkerThreadClient::Execute","linkify":"<a name=\"iworkerthreadclient__execute\"></a>  IWorkerThreadClient::Execute","source":"<a name=\"iworkerthreadclient__execute\"></a>  IWorkerThreadClient::Execute"},{"content":"Implement this method to execute code when the handle associated with this object becomes signaled.","pos":[2460,2559]},{"pos":[2642,2652],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"The user parameter.","pos":[2669,2688]},{"content":"The handle that has become signaled.","pos":[2708,2744]},{"pos":[2754,2766],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Return S_OK on success, or an error HRESULT on failure.","pos":[2770,2825]},{"pos":[2835,2842],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[2846,3050],"content":"The handle and DWORD/pointer passed to this method were previously associated with this object by a call to <bpt id=\"p1\">[</bpt>CWorkerThread::AddHandle<ept id=\"p1\">](../../atl/reference/cworkerthread-class.md#cworkerthread__addhandle)</ept>.","source":"The handle and DWORD/pointer passed to this method were previously associated with this object by a call to [CWorkerThread::AddHandle](../../atl/reference/cworkerthread-class.md#cworkerthread__addhandle)."},{"pos":[3060,3067],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[3071,3154],"content":"The following code shows a simple implementation of <ph id=\"ph1\">`IWorkerThreadClient::Execute`</ph>.","source":"The following code shows a simple implementation of `IWorkerThreadClient::Execute`."},{"pos":[3161,3258],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_ATL_Utilities#136<ept id=\"p2\">](../../atl/codesnippet/cpp/iworkerthreadclient-interface_2.cpp)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_ATL_Utilities#136](../../atl/codesnippet/cpp/iworkerthreadclient-interface_2.cpp)]"},{"pos":[3267,3275],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Classes<ept id=\"p1\">](../../atl/reference/atl-classes.md)</ept><ph id=\"ph1\"> </ph>","pos":[3279,3325],"source":"[Classes](../../atl/reference/atl-classes.md) "},{"content":"<bpt id=\"p1\"> [</bpt>CWorkerThread Class<ept id=\"p1\">](../../atl/reference/cworkerthread-class.md)</ept>","pos":[3328,3394],"source":" [CWorkerThread Class](../../atl/reference/cworkerthread-class.md)"}],"content":"---\ntitle: \"IWorkerThreadClient Interface | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"ATL.IWorkerThreadClient\"\n  - \"ATL::IWorkerThreadClient\"\n  - \"IWorkerThreadClient\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"IWorkerThreadClient interface\"\nms.assetid: 56f4a2f5-007e-4a33-9e20-05187629f715\ncaps.latest.revision: 24\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# IWorkerThreadClient Interface\n`IWorkerThreadClient` is the interface implemented by clients of the [CWorkerThread](../../atl/reference/cworkerthread-class.md) class.  \n  \n> [!IMPORTANT]\n>  This class and its members cannot be used in applications that execute in the [!INCLUDE[wrt](../../atl/reference/includes/wrt_md.md)].  \n  \n## Syntax  \n  \n```\n__interface IWorkerThreadClient\n```  \n  \n## Members  \n  \n### Methods  \n  \n|||  \n|-|-|  \n|[CloseHandle](#iworkerthreadclient__closehandle)|Implement this method to close the handle associated with this object.|  \n|[Execute](#iworkerthreadclient__execute)|Implement this method to execute code when the handle associated with this object becomes signaled.|  \n  \n## Remarks  \n Implement this interface when you have code that needs to execute on a worker thread in response to a handle becoming signaled.  \n  \n## Requirements  \n **Header:** atlutil.h  \n  \n##  <a name=\"iworkerthreadclient__closehandle\"></a>  IWorkerThreadClient::CloseHandle  \n Implement this method to close the handle associated with this object.  \n  \n```\nHRESULT CloseHandle(HANDLE    hHandle);\n```  \n  \n### Parameters  \n *hHandle*  \n The handle to be closed.  \n  \n### Return Value  \n Return S_OK on success, or an error HRESULT on failure.  \n  \n### Remarks  \n The handle passed to this method was previously associated with this object by a call to [CWorkerThread::AddHandle](../../atl/reference/cworkerthread-class.md#cworkerthread__addhandle).  \n  \n### Example  \n The following code shows a simple implementation of `IWorkerThreadClient::CloseHandle`.  \n  \n [!code-cpp[NVC_ATL_Utilities#135](../../atl/codesnippet/cpp/iworkerthreadclient-interface_1.cpp)]  \n  \n##  <a name=\"iworkerthreadclient__execute\"></a>  IWorkerThreadClient::Execute  \n Implement this method to execute code when the handle associated with this object becomes signaled.  \n  \n```\nHRESULT Execute(\n    DWORD_PTR\ndwParam,\n HANDLE   hObject);\n```  \n  \n### Parameters  \n `dwParam`  \n The user parameter.  \n  \n `hObject`  \n The handle that has become signaled.  \n  \n### Return Value  \n Return S_OK on success, or an error HRESULT on failure.  \n  \n### Remarks  \n The handle and DWORD/pointer passed to this method were previously associated with this object by a call to [CWorkerThread::AddHandle](../../atl/reference/cworkerthread-class.md#cworkerthread__addhandle).  \n  \n### Example  \n The following code shows a simple implementation of `IWorkerThreadClient::Execute`.  \n  \n [!code-cpp[NVC_ATL_Utilities#136](../../atl/codesnippet/cpp/iworkerthreadclient-interface_2.cpp)]  \n  \n## See Also  \n [Classes](../../atl/reference/atl-classes.md)   \n [CWorkerThread Class](../../atl/reference/cworkerthread-class.md)\n"}