<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-04506c2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">92daecc796a7d687dd512de166e7994ff6a4ebc4</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\build\reference\mp-build-with-multiple-processes.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4e1552a8614edb5407e5ca45911a3d32e0194966</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">970445b8649843a509eaf22cd7e24aeb3ff65b79</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>-MP (Build with Multiple Processes) | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>/MP (Build with Multiple Processes)</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>/MP<ept id="p1">**</ept> option can reduce the total time to compile the source files on the command line.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>/MP<ept id="p1">**</ept> option causes the compiler to create one or more copies of itself, each in a separate process.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Then these copies simultaneously compile the source files.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Consequently, the total time to build the source files can be significantly reduced.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Arguments</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>(Optional) The maximum number of processes that the compiler can create.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`processMax`</ph> argument must range from 1 through 65536.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Otherwise, the compiler issues warning message <ph id="ph1">`D9014`</ph>, ignores the <ph id="ph2">`processMax`</ph> argument, and assumes the maximum number of processes is 1.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>If you omit the <ph id="ph1">`processMax`</ph> argument, the compiler retrieves the number of <bpt id="p1">[</bpt>effective processors<ept id="p1">](#effective_processors)</ept> on your computer from the operating system, and creates a process for each processor.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>/MP<ept id="p1">**</ept> compiler option can significantly reduce build time when you compile many files.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>To improve build time, the compiler creates up to <ph id="ph1">`processMax`</ph> copies of itself, and then uses those copies to compile your source files at the same time.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>/MP<ept id="p1">**</ept> option applies to compilations, but not to linking or link-time code generation.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>By default the <bpt id="p1">**</bpt>/MP<ept id="p1">**</ept> option is off.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The improvement in build time depends on the number of processors on a computer, the number of files to compile, and the availability of system resources, such as I/O capacity.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Experiment with the <bpt id="p1">**</bpt>/MP<ept id="p1">**</ept> option to determine the best setting to build a particular project.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>For advice to help you make that decision, see <bpt id="p1">[</bpt>Guidelines<ept id="p1">](#guidelines)</ept>.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Incompatible Options and Language Features</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>/MP<ept id="p1">**</ept> option is incompatible with some compiler options and language features.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>If you use an incompatible compiler option with the <bpt id="p1">**</bpt>/MP<ept id="p1">**</ept> option, the compiler issues warning <ph id="ph1">`D9030`</ph> and ignores the <bpt id="p2">**</bpt>/MP<ept id="p2">**</ept> option.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>If you use an incompatible language feature, the compiler issues error <ph id="ph1">`C2813`</ph>then ends or continues depending on the current compiler warning level option.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Most options are incompatible because if they were permitted, the concurrently executing compilers would write their output at the same time to the console or to a particular file.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>As a result, the output would intermix and be garbled.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>In some cases, the combination of options would make the performance worse.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The following table lists compiler options and language features that are incompatible with the <bpt id="p1">**</bpt>/MP<ept id="p1">**</ept> option:</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Option or Language Feature</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>#import<ept id="p1">](../../preprocessor/hash-import-directive-cpp.md)</ept> preprocessor directive</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Converts the types in a type library into C++ classes, and then writes those classes to a header file.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>/E<ept id="p1">](../../build/reference/e-preprocess-to-stdout.md)</ept>, <bpt id="p2">[</bpt>/EP<ept id="p2">](../../build/reference/ep-preprocess-to-stdout-without-hash-line-directives.md)</ept></source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Copies preprocessor output to the standard output (<bpt id="p1">**</bpt>stdout<ept id="p1">**</ept>).</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>/Gm</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Enables an incremental rebuild.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>/showIncludes</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Writes a list of include files to the standard error (<bpt id="p1">**</bpt>stderr<ept id="p1">**</ept>).</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>/Yc</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Writes a precompiled header file.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Diagnostic Messages</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>If you specify an option or language feature that is incompatible with the <bpt id="p1">**</bpt>/MP<ept id="p1">**</ept> option, you will receive a diagnostic message.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The following table lists the messages and the behavior of the compiler:</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Diagnostic Message</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Compiler Behavior</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>#import<ept id="p1">**</ept> directive is not compatible with the <bpt id="p2">**</bpt>/MP<ept id="p2">**</ept> option.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The compilation ends unless a <bpt id="p1">[</bpt>compiler warning level<ept id="p1">](../../build/reference/compiler-option-warning-level.md)</ept> option specifies otherwise.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>An invalid value is specified for the <ph id="ph1">`processMax`</ph> argument.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The compiler ignores the invalid value and assumes a value of 1.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The specified option is incompatible with <bpt id="p1">**</bpt>/MP<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The compiler ignores the <bpt id="p1">**</bpt>/MP<ept id="p1">**</ept> option.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Guidelines</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Measure Performance</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Use total build time to measure performance.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>You can measure the build time with a physical clock, or you can use software that calculates the difference between when the build starts and stops.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>If your computer has multiple processors, a physical clock might yield more accurate results than a software time measurement.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Effective Processors</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>A computer can have one or more virtual processors, which are also known as effective processors, for each of its physical processors.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Each physical processor can have one or more cores, and if the operating system enables hyperthreading for a core, each core appears to be two virtual processors.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>For example, a computer has one effective processor if it has one physical processor that has one core, and hyperthreading is disabled.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>In contrast, a computer has eight effective processors if it has two physical processors, each of which has two cores, and all the cores have hyperthreading enabled.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>That is, (8 effective processors) = (2 physical processors) x (2 cores per physical processor) x (2 effective processors per core because of hyperthreading).</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>If you omit the <ph id="ph1">`processMax`</ph> argument in the <bpt id="p1">**</bpt>/MP<ept id="p1">**</ept> option, the compiler obtains the number of effective processors from the operating system, and then creates one process per effective processor.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>However, the compiler cannot guarantee which process executes on a particular processor; the operating system makes that decision.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Number of Processes</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The compiler calculates the number of processes that it will use to compile the source files.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>That value is the lesser of the number of source files that you specify on the command line, and the number of processes that you explicitly or implicitly specify with the <bpt id="p1">**</bpt>/MP<ept id="p1">**</ept> option.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>You can explicitly set the maximum number of processes if you provide the <ph id="ph1">`processMax`</ph> argument of the <bpt id="p1">**</bpt>/MP<ept id="p1">**</ept> option.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Or you can use the default, which is equal to the number of effective processors in a computer, if you omit the <ph id="ph1">`processMax`</ph> argument.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>For example, suppose you specify the following command line:</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>In this case the compiler uses five processes because that is the lesser of five source files and a maximum of seven processes.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Alternatively, suppose your computer has two effective processors and you specify the following command line:</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>In this case the operating system reports two processors; therefore, the compiler uses two processes in its calculation.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>As a result, the compiler will execute the build with two processes because that is the lesser of two processes and three source files.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Source Files and Build Order</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>The source files might not be compiled in the same order in which they appear on the command line.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Although the compiler creates a set of processes that contain copies of the compiler, the operating system schedules when each process executes.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Consequently, you cannot guarantee that the source files will be compiled in a particular order.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>A source file is compiled when a process is available to compile it.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>If there are more files than processes, the first set of files is compiled by the available processes.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>The remaining files are processed when a process finishes handling a previous file and is available to work on one of the remaining files.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Do not specify the same source file multiple times on a command line.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>This might occur, for example, if a tool automatically creates a <bpt id="p1">[</bpt>makefile<ept id="p1">](../../build/contents-of-a-makefile.md)</ept> that is based on dependency information in a project.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>If you do not specify the <bpt id="p1">**</bpt>/MP<ept id="p1">**</ept> option, the compiler processes the list of files sequentially and recompiles each occurrence of the file.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>However, if you specify the <bpt id="p1">**</bpt>/MP<ept id="p1">**</ept> option, different compilers might compile the same file at the same time.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Consequently, the different compilers will try to write to the same output file at the same time.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>One compiler will acquire exclusive write access to the output file and succeed, and the other compilers will fail with a file access error.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Using Type Libraries (#import)</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The compiler does not support the use of the <bpt id="p1">[</bpt>#import<ept id="p1">](../../preprocessor/hash-import-directive-cpp.md)</ept> directive with the <bpt id="p2">**</bpt>/MP<ept id="p2">**</ept> switch.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>If possible, follow these steps to work around this problem:</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Move all the <ph id="ph1">`#import`</ph> directives in your various source files to one or more files, and then compile those files without the <bpt id="p1">**</bpt>/MP<ept id="p1">**</ept> option.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>The result is a set of generated header files.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>In your remaining source files, insert <bpt id="p1">[</bpt>#include<ept id="p1">](../../preprocessor/hash-include-directive-c-cpp.md)</ept> directives that specify the generated headers, and then compile your remaining source files by using the <bpt id="p2">**</bpt>/MP<ept id="p2">**</ept> option.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Visual Studio Project Settings</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>The MSBUILD.exe Tool</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>uses the <bpt id="p1">[</bpt>MSBuild.exe<ept id="p1">](/visualstudio/msbuild/msbuild-reference)</ept> tool to build solutions and projects.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>/maxcpucount:<ept id="p1">**</ept><ph id="ph1">`number`</ph> (or <bpt id="p2">**</bpt>/m:<ept id="p2">**</ept><ph id="ph2">`number`</ph>) command-line option of the MSBuild.exe tool can build multiple projects at the same time.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>And the <bpt id="p1">**</bpt>/MP<ept id="p1">**</ept> compiler option can build multiple compilation units at the same time.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>If it is appropriate for your application, improve your solution's build time by using either or both <bpt id="p1">**</bpt>/MP<ept id="p1">**</ept> and <bpt id="p2">**</bpt>/maxcpucount<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>The build time of your solution partly depends on the number of processes that perform the build.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`number`</ph> argument of the <bpt id="p1">[</bpt>/maxcpucount<ept id="p1">](/visualstudio/msbuild/msbuild-command-line-reference)</ept> MSBuild option specifies the maximum number of projects to build at the same time.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Similarly, the <ph id="ph1">`processMax`</ph> argument of the <bpt id="p1">**</bpt>/MP<ept id="p1">**</ept> compiler option specifies the maximum number of compilation units to build at the same time.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>If the <bpt id="p1">**</bpt>/maxcpucount<ept id="p1">**</ept> option specifies <bpt id="p2">*</bpt>P<ept id="p2">*</ept> projects and the <bpt id="p3">**</bpt>/MP<ept id="p3">**</ept> option specifies <bpt id="p4">*</bpt>C<ept id="p4">*</ept> processes, a maximum of <bpt id="p5">*</bpt>P<ept id="p5">*</ept>x<bpt id="p6">*</bpt>C<ept id="p6">*</ept> processes execute at the same time.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>The guideline for deciding whether to use <ph id="ph1">`MSBuild`</ph> or <bpt id="p1">**</bpt>/MP<ept id="p1">**</ept> technology is as follows:</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>If there are many projects with few files in each project, use the <ph id="ph1">`MSBuild`</ph> tool.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>If there are few projects with many files in each project, use the <bpt id="p1">**</bpt>/MP<ept id="p1">**</ept> option.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>If the number of projects and files per project is balanced, use both <ph id="ph1">`MSBuild`</ph> and <bpt id="p1">**</bpt>/MP<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Initially set the <bpt id="p1">**</bpt>/maxcpucount<ept id="p1">**</ept> option to the number of projects to build and the <bpt id="p2">**</bpt>/MP<ept id="p2">**</ept> option to the number of processors on your computer.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Measure performance and then adjust your settings to yield the best results.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Repeat that cycle until you are satisfied with the total build time.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>The /Gm Compiler Option</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>By default, a project build enables the <bpt id="p1">**</bpt>/Gm<ept id="p1">**</ept> compiler option (incremental builds) for debug builds, and disables it for release builds.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Therefore, the <bpt id="p1">**</bpt>/MP<ept id="p1">**</ept> compiler option is automatically disabled in debug builds because it conflicts with the default <bpt id="p2">**</bpt>/Gm<ept id="p2">**</ept> compiler option.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>import Directive</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Command-Line Reference</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>