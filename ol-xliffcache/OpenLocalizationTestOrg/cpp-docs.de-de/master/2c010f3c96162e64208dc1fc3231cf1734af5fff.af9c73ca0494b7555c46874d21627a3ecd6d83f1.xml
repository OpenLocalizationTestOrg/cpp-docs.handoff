{"nodes":[{"pos":[12,49],"content":"Compiler Error C3723 | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Compiler Error C3723 | Microsoft Docs","pos":[0,37]}]},{"pos":[623,643],"content":"Compiler Error C3723","linkify":"Compiler Error C3723","nodes":[{"content":"Compiler Error C3723","pos":[0,20]}]},{"content":"'function': could not resolve event","pos":[644,679]},{"pos":[686,735],"content":"<ph id=\"ph1\">`function`</ph> could not resolve which event to call.","source":"`function` could not resolve which event to call."},{"content":"The following sample generates C3723:","pos":[742,779]},{"content":"<ph id=\"ph1\">`__hook`</ph> and <ph id=\"ph2\">`__unhook`</ph> are not compatible with /clr programming.","pos":[1104,1169],"source":"`__hook` and `__unhook` are not compatible with /clr programming."},{"content":"Use the += and -= operators instead.","pos":[1171,1207]},{"content":"The following sample generates C3723:","pos":[1214,1251]}],"content":"---\ntitle: \"Compiler Error C3723 | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"error-reference\"\nf1_keywords: \n  - \"C3723\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"C3723\"\nms.assetid: ef0fb1ff-3f9a-4093-a6b6-894d1ab0c4b9\ncaps.latest.revision: 9\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"ru-ru\"\n  - \"zh-cn\"\n  - \"zh-tw\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"tr-tr\"\n---\n# Compiler Error C3723\n'function': could not resolve event  \n  \n `function` could not resolve which event to call.  \n  \n The following sample generates C3723:  \n  \n```  \n// C3723.cpp  \nstruct A {  \n   // To resolve, comment void f(int); and uncomment the __event function  \n   void f(int);  \n   // __event void f(int);  \n   void f(float);  \n  \n};  \n  \nstruct B {  \n   void g(int);  \n   B(A* a) {  \n   __hook(&A::f, a, &B::g);   // C3723  \n   }  \n};  \n  \nint main() {  \n}  \n```  \n  \n `__hook` and `__unhook` are not compatible with /clr programming.  Use the += and -= operators instead.  \n  \n The following sample generates C3723:  \n  \n```  \n// C3723b.cpp  \n// compile with: /clr  \nusing namespace System;  \n  \npublic delegate void delegate1();  \n  \npublic ref class CPSource {  \npublic:  \n   event delegate1^ event1;  \n};  \n  \npublic ref class CReceiver {  \npublic:  \n   void Handler1() {  \n   }  \n  \n   void UnhookAll(CPSource^ pSrc) {  \n      __unhook(&CPSource::event1, pSrc, &CReceiver::Handler1); // C3723  \n      // Try the following line instead.  \n      // pSrc->event1 -= gcnew delegate1(this, &CReceiver::Handler1);  \n   }  \n};  \n  \nint main() {  \n}  \n```"}