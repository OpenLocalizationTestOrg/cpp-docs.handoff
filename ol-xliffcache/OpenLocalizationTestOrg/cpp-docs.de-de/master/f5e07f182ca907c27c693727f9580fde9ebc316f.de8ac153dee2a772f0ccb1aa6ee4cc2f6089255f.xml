{"nodes":[{"pos":[12,97],"content":"How to: Declare Override Specifiers in Native Compilations (C++-CLI) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"How to: Declare Override Specifiers in Native Compilations (C++-CLI) | Microsoft Docs","pos":[0,85]}]},{"content":"How to: Declare Override Specifiers in Native Compilations (C++/CLI)","pos":[686,754]},{"pos":[755,1064],"content":"<bpt id=\"p1\">[</bpt>sealed<ept id=\"p1\">](../windows/sealed-cpp-component-extensions.md)</ept>, <bpt id=\"p2\">[</bpt>abstract<ept id=\"p2\">](../windows/abstract-cpp-component-extensions.md)</ept>, and <bpt id=\"p3\">[</bpt>override<ept id=\"p3\">](../windows/override-cpp-component-extensions.md)</ept> are available in compilations that do not use <bpt id=\"p4\">**</bpt>/ZW<ept id=\"p4\">**</ept> or <bpt id=\"p5\">[</bpt>/clr<ept id=\"p5\">](../build/reference/clr-common-language-runtime-compilation.md)</ept>.","source":"[sealed](../windows/sealed-cpp-component-extensions.md), [abstract](../windows/abstract-cpp-component-extensions.md), and [override](../windows/override-cpp-component-extensions.md) are available in compilations that do not use **/ZW** or [/clr](../build/reference/clr-common-language-runtime-compilation.md)."},{"pos":[1072,1355],"content":"[!NOTE]\n The ISO C++11 Standard language has the [override](../cpp/override-specifier.md) identifier and the [final](../cpp/final-specifier.md) identifier, and both are supported in Visual Studio  Use `final` instead of `sealed` in code that is meant to be compiled as native-only.","leadings":["","> "],"nodes":[{"content":"The ISO C++11 Standard language has the <bpt id=\"p1\">[</bpt>override<ept id=\"p1\">](../cpp/override-specifier.md)</ept> identifier and the <bpt id=\"p2\">[</bpt>final<ept id=\"p2\">](../cpp/final-specifier.md)</ept> identifier, and both are supported in Visual Studio  Use <ph id=\"ph1\">`final`</ph> instead of <ph id=\"ph2\">`sealed`</ph> in code that is meant to be compiled as native-only.","pos":[9,281],"source":" The ISO C++11 Standard language has the [override](../cpp/override-specifier.md) identifier and the [final](../cpp/final-specifier.md) identifier, and both are supported in Visual Studio  Use `final` instead of `sealed` in code that is meant to be compiled as native-only."}]},{"content":"Example","pos":[1364,1371]},{"content":"Description","pos":[1381,1392]},{"pos":[1396,1470],"content":"The following example shows that <ph id=\"ph1\">`sealed`</ph> is valid in native compilations.","source":"The following example shows that `sealed` is valid in native compilations."},{"content":"Code","pos":[1480,1484]},{"content":"Example","pos":[1867,1874]},{"content":"Description","pos":[1884,1895]},{"pos":[1899,1970],"content":"The next example shows that <ph id=\"ph1\">`override`</ph> is valid in native compilations.","source":"The next example shows that `override` is valid in native compilations."},{"content":"Code","pos":[1980,1984]},{"content":"Example","pos":[2259,2266]},{"content":"Description","pos":[2276,2287]},{"pos":[2291,2358],"content":"This example shows that <ph id=\"ph1\">`abstract`</ph> is valid in native compilations.","source":"This example shows that `abstract` is valid in native compilations."},{"content":"Code","pos":[2368,2372]},{"content":"See Also","pos":[2541,2549]},{"content":"Override Specifiers","pos":[2554,2573]}],"content":"---\ntitle: \"How to: Declare Override Specifiers in Native Compilations (C++-CLI) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"override specifiers in native compilation, overriding\"\nms.assetid: d0551836-9ac7-41eb-a6e9-a4b3ef60767d\ncaps.latest.revision: 13\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"ru-ru\"\n  - \"zh-cn\"\n  - \"zh-tw\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"tr-tr\"\n---\n# How to: Declare Override Specifiers in Native Compilations (C++/CLI)\n[sealed](../windows/sealed-cpp-component-extensions.md), [abstract](../windows/abstract-cpp-component-extensions.md), and [override](../windows/override-cpp-component-extensions.md) are available in compilations that do not use **/ZW** or [/clr](../build/reference/clr-common-language-runtime-compilation.md).  \n  \n> [!NOTE]\n>  The ISO C++11 Standard language has the [override](../cpp/override-specifier.md) identifier and the [final](../cpp/final-specifier.md) identifier, and both are supported in Visual Studio  Use `final` instead of `sealed` in code that is meant to be compiled as native-only.  \n  \n## Example  \n  \n### Description  \n The following example shows that `sealed` is valid in native compilations.  \n  \n### Code  \n  \n```  \n  \n      // sealed_native_keyword.cpp  \n#include <stdio.h>  \n__interface I1 {  \n   virtual void f();  \n   virtual void g();  \n};  \n  \nclass X : public I1 {  \npublic:  \n   virtual void g() sealed {}  \n};  \n  \nclass Y : public X {  \npublic:  \n  \n   // the following override generates a compiler error  \n   virtual void g() {}   // C3248 X::g is sealed!  \n};  \n```  \n  \n## Example  \n  \n### Description  \n The next example shows that `override` is valid in native compilations.  \n  \n### Code  \n  \n```  \n// override_native_keyword.cpp  \n#include <stdio.h>  \n__interface I1 {  \n   virtual void f();  \n};  \n  \nclass X : public I1 {  \npublic:  \n   virtual void f() override {}   // OK  \n   virtual void g() override {}   // C3668 I1::g does not exist  \n};  \n```  \n  \n## Example  \n  \n### Description  \n This example shows that `abstract` is valid in native compilations.  \n  \n### Code  \n  \n```  \n// abstract_native_keyword.cpp  \nclass X abstract {};  \n  \nint main() {  \n   X * MyX = new X;   // C3622 cannot instantiate abstract class  \n}  \n```  \n  \n## See Also  \n [Override Specifiers](../windows/override-specifiers-cpp-component-extensions.md)"}