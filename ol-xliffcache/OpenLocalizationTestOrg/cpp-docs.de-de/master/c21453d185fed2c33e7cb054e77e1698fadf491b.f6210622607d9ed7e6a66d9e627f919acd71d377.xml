{"nodes":[{"pos":[12,61],"content":"Compiler Warning (level 1) C4297 | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Compiler Warning (level 1) C4297 | Microsoft Docs","pos":[0,49]}]},{"pos":[609,641],"content":"Compiler Warning (level 1) C4297","linkify":"Compiler Warning (level 1) C4297","nodes":[{"content":"Compiler Warning (level 1) C4297","pos":[0,32]}]},{"content":"'function' : function assumed not to throw an exception but does","pos":[642,706]},{"content":"A function declaration contains a (possibly implicit) <ph id=\"ph1\">`noexcept`</ph> specifier, an empty <ph id=\"ph2\">`throw`</ph> exception specifier, or a <bpt id=\"p1\">[</bpt>__declspec(nothrow)<ept id=\"p1\">](../../cpp/nothrow-cpp.md)</ept> attribute, and the definition contains one or more <bpt id=\"p2\">[</bpt>throw<ept id=\"p2\">](../../cpp/try-throw-and-catch-statements-cpp.md)</ept> statements.","pos":[713,999],"source":"A function declaration contains a (possibly implicit) `noexcept` specifier, an empty `throw` exception specifier, or a [__declspec(nothrow)](../../cpp/nothrow-cpp.md) attribute, and the definition contains one or more [throw](../../cpp/try-throw-and-catch-statements-cpp.md) statements."},{"content":"To resolve C4297, do not attempt to throw exceptions in functions that are declared <ph id=\"ph1\">`__declspec(nothrow)`</ph>, <ph id=\"ph2\">`noexcept(true)`</ph> or <ph id=\"ph3\">`throw()`</ph>.","pos":[1000,1137],"source":" To resolve C4297, do not attempt to throw exceptions in functions that are declared `__declspec(nothrow)`, `noexcept(true)` or `throw()`."},{"content":"Alternatively, remove the <ph id=\"ph1\">`noexcept`</ph>, <ph id=\"ph2\">`throw()`</ph>, or <ph id=\"ph3\">`__declspec(nothrow)`</ph> specification.","pos":[1138,1226],"source":" Alternatively, remove the `noexcept`, `throw()`, or `__declspec(nothrow)` specification."},{"content":"By default, the compiler generates implicit <ph id=\"ph1\">`noexcept(true)`</ph> specifiers for user-defined destructors and deallocator functions and compiler-generated special member functions.","pos":[1233,1408],"source":"By default, the compiler generates implicit `noexcept(true)` specifiers for user-defined destructors and deallocator functions and compiler-generated special member functions."},{"content":"This conforms to the ISO C++11 standard.","pos":[1409,1449]},{"content":"To prevent generation of implicit noexcept specifiers and revert the compiler to the non-standard behavior of Visual Studio 2013, use the <bpt id=\"p1\">**</bpt>/Zc:implicitNoexcept-<ept id=\"p1\">**</ept> compiler option.","pos":[1450,1630],"source":" To prevent generation of implicit noexcept specifiers and revert the compiler to the non-standard behavior of Visual Studio 2013, use the **/Zc:implicitNoexcept-** compiler option."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>/Zc:implicitNoexcept (Implicit Exception Specifiers)<ept id=\"p1\">](../../build/reference/zc-implicitnoexcept-implicit-exception-specifiers.md)</ept>.","pos":[1631,1788],"source":" For more information, see [/Zc:implicitNoexcept (Implicit Exception Specifiers)](../../build/reference/zc-implicitnoexcept-implicit-exception-specifiers.md)."},{"content":"For more information on exception specifications, see <bpt id=\"p1\">[</bpt>Exception Specifications (throw)<ept id=\"p1\">](../../cpp/exception-specifications-throw-cpp.md)</ept>.","pos":[1795,1933],"source":"For more information on exception specifications, see [Exception Specifications (throw)](../../cpp/exception-specifications-throw-cpp.md)."},{"content":"Also, see <bpt id=\"p1\">[</bpt>/EH (Exception Handling Model)<ept id=\"p1\">](../../build/reference/eh-exception-handling-model.md)</ept> for information on how to modify exception handling behavior at compile time.","pos":[1934,2108],"source":" Also, see [/EH (Exception Handling Model)](../../build/reference/eh-exception-handling-model.md) for information on how to modify exception handling behavior at compile time."},{"pos":[2115,2268],"content":"This warning is also generated for __declspec(<bpt id=\"p1\">[</bpt>dllexport<ept id=\"p1\">](../../cpp/dllexport-dllimport.md)</ept>) functions marked extern \"C\", even if they are C++ functions.","source":"This warning is also generated for __declspec([dllexport](../../cpp/dllexport-dllimport.md)) functions marked extern \"C\", even if they are C++ functions."},{"content":"The following sample generates C4297:","pos":[2275,2312]}],"content":"---\ntitle: \"Compiler Warning (level 1) C4297 | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"error-reference\"\nf1_keywords: \n  - \"C4297\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"C4297\"\nms.assetid: ba92fcdc-9f70-4f60-abe6-281f9582ca59\ncaps.latest.revision: 8\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Compiler Warning (level 1) C4297\n'function' : function assumed not to throw an exception but does  \n  \n A function declaration contains a (possibly implicit) `noexcept` specifier, an empty `throw` exception specifier, or a [__declspec(nothrow)](../../cpp/nothrow-cpp.md) attribute, and the definition contains one or more [throw](../../cpp/try-throw-and-catch-statements-cpp.md) statements. To resolve C4297, do not attempt to throw exceptions in functions that are declared `__declspec(nothrow)`, `noexcept(true)` or `throw()`. Alternatively, remove the `noexcept`, `throw()`, or `__declspec(nothrow)` specification.  \n  \n By default, the compiler generates implicit `noexcept(true)` specifiers for user-defined destructors and deallocator functions and compiler-generated special member functions. This conforms to the ISO C++11 standard. To prevent generation of implicit noexcept specifiers and revert the compiler to the non-standard behavior of Visual Studio 2013, use the **/Zc:implicitNoexcept-** compiler option. For more information, see [/Zc:implicitNoexcept (Implicit Exception Specifiers)](../../build/reference/zc-implicitnoexcept-implicit-exception-specifiers.md).  \n  \n For more information on exception specifications, see [Exception Specifications (throw)](../../cpp/exception-specifications-throw-cpp.md). Also, see [/EH (Exception Handling Model)](../../build/reference/eh-exception-handling-model.md) for information on how to modify exception handling behavior at compile time.  \n  \n This warning is also generated for __declspec([dllexport](../../cpp/dllexport-dllimport.md)) functions marked extern \"C\", even if they are C++ functions.  \n  \n The following sample generates C4297:  \n  \n```  \n// C4297.cpp  \n// compile with: /W1 /LD  \nvoid __declspec(nothrow) f1()   // declared nothrow  \n// try the following line instead  \n// void f1()  \n{  \n   throw 1;   // C4297  \n}  \n```"}