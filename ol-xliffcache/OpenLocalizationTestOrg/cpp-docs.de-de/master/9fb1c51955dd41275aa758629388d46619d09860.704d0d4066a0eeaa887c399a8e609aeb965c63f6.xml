{"nodes":[{"pos":[12,45],"content":"CLocalHeap Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"CLocalHeap Class | Microsoft Docs","pos":[0,33]}]},{"pos":[647,663],"content":"CLocalHeap Class","linkify":"CLocalHeap Class","nodes":[{"content":"CLocalHeap Class","pos":[0,16]}]},{"pos":[664,777],"content":"This class implements <bpt id=\"p1\">[</bpt>IAtlMemMgr<ept id=\"p1\">](../../atl/reference/iatlmemmgr-class.md)</ept> using the Win32 local heap functions.","source":"This class implements [IAtlMemMgr](../../atl/reference/iatlmemmgr-class.md) using the Win32 local heap functions."},{"pos":[785,895],"content":"[!IMPORTANT]\n This class and its members cannot be used in applications that execute in the Windows Runtime.","leadings":["","> "],"nodes":[{"content":"This class and its members cannot be used in applications that execute in the Windows Runtime.","pos":[14,108]}]},{"pos":[904,910],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[969,976],"content":"Members","linkify":"Members","nodes":[{"content":"Members","pos":[0,7]}]},{"pos":[986,1000],"content":"Public Methods","linkify":"Public Methods","nodes":[{"content":"Public Methods","pos":[0,14]}]},{"content":"Name","pos":[1007,1011]},{"content":"Description","pos":[1012,1023]},{"pos":[1061,1106],"content":"<bpt id=\"p1\">[</bpt>CLocalHeap::Allocate<ept id=\"p1\">](#clocalheap__allocate)</ept>","source":"[CLocalHeap::Allocate](#clocalheap__allocate)"},{"content":"Call this method to allocate a block of memory.","pos":[1107,1154]},{"pos":[1159,1196],"content":"<bpt id=\"p1\">[</bpt>CLocalHeap::Free<ept id=\"p1\">](#clocalheap__free)</ept>","source":"[CLocalHeap::Free](#clocalheap__free)"},{"content":"Call this method to free a block of memory allocated by this memory manager.","pos":[1197,1273]},{"pos":[1278,1321],"content":"<bpt id=\"p1\">[</bpt>CLocalHeap::GetSize<ept id=\"p1\">](#clocalheap__getsize)</ept>","source":"[CLocalHeap::GetSize](#clocalheap__getsize)"},{"content":"Call this method to get the allocated size of a memory block allocated by this memory manager.","pos":[1322,1416]},{"pos":[1421,1470],"content":"<bpt id=\"p1\">[</bpt>CLocalHeap::Reallocate<ept id=\"p1\">](#clocalheap__reallocate)</ept>","source":"[CLocalHeap::Reallocate](#clocalheap__reallocate)"},{"content":"Call this method to reallocate memory allocated by this memory manager.","pos":[1471,1542]},{"pos":[1552,1559],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[1563,1652],"content":"<ph id=\"ph1\">`CLocalHeap`</ph> implements memory allocation functions using the Win32 local heap functions.","source":"`CLocalHeap` implements memory allocation functions using the Win32 local heap functions."},{"pos":[1660,1991],"content":"[!NOTE]\n The local heap functions are slower than other memory management functions and do not provide as many features. Therefore, new applications should use the [heap functions](http://msdn.microsoft.com/library/windows/desktop/aa366711). These are available in the [CWin32Heap](../../atl/reference/cwin32heap-class.md) class.","leadings":["","> "],"nodes":[{"content":" The local heap functions are slower than other memory management functions and do not provide as many features. Therefore, new applications should use the [heap functions](http://msdn.microsoft.com/library/windows/desktop/aa366711). These are available in the [CWin32Heap](../../atl/reference/cwin32heap-class.md) class.","pos":[8,329],"nodes":[{"content":"The local heap functions are slower than other memory management functions and do not provide as many features.","pos":[1,112]},{"content":"Therefore, new applications should use the <bpt id=\"p1\">[</bpt>heap functions<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/aa366711)</ept>.","pos":[113,233],"source":" Therefore, new applications should use the [heap functions](http://msdn.microsoft.com/library/windows/desktop/aa366711)."},{"content":"These are available in the <bpt id=\"p1\">[</bpt>CWin32Heap<ept id=\"p1\">](../../atl/reference/cwin32heap-class.md)</ept> class.","pos":[234,321],"source":" These are available in the [CWin32Heap](../../atl/reference/cwin32heap-class.md) class."}]}]},{"pos":[2000,2007],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[2011,2085],"content":"See the example for <bpt id=\"p1\">[</bpt>IAtlMemMgr<ept id=\"p1\">](../../atl/reference/iatlmemmgr-class.md)</ept>.","source":"See the example for [IAtlMemMgr](../../atl/reference/iatlmemmgr-class.md)."},{"pos":[2094,2115],"content":"Inheritance Hierarchy","linkify":"Inheritance Hierarchy","nodes":[{"content":"Inheritance Hierarchy","pos":[0,21]}]},{"pos":[2159,2171],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[2175,2195],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> atlmem.h","source":"**Header:** atlmem.h"},{"pos":[2205,2262],"content":"<bpt id=\"p1\">&lt;a name=\"clocalheap__allocate\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CLocalHeap::Allocate","linkify":"<a name=\"clocalheap__allocate\"></a>  CLocalHeap::Allocate","source":"<a name=\"clocalheap__allocate\"></a>  CLocalHeap::Allocate"},{"content":"Call this method to allocate a block of memory.","pos":[2266,2313]},{"pos":[2407,2417],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"The requested number of bytes in the new memory block.","pos":[2433,2487]},{"pos":[2497,2509],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Returns a pointer to the start of the newly allocated memory block.","pos":[2513,2580]},{"pos":[2590,2597],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[2601,2741],"content":"Call <bpt id=\"p1\">[</bpt>CLocalHeap::Free<ept id=\"p1\">](#clocalheap__free)</ept> or <bpt id=\"p2\">[</bpt>CLocalHeap::Reallocate<ept id=\"p2\">](#clocalheap__reallocate)</ept> to free the memory allocated by this method.","source":"Call [CLocalHeap::Free](#clocalheap__free) or [CLocalHeap::Reallocate](#clocalheap__reallocate) to free the memory allocated by this method."},{"pos":[2748,2879],"content":"Implemented using <bpt id=\"p1\">[</bpt>LocalAlloc<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/aa366723)</ept> with a flag parameter of <bpt id=\"p2\">**</bpt>LMEM_FIXED<ept id=\"p2\">**</ept>.","source":"Implemented using [LocalAlloc](http://msdn.microsoft.com/library/windows/desktop/aa366723) with a flag parameter of **LMEM_FIXED**."},{"pos":[2889,2938],"content":"<bpt id=\"p1\">&lt;a name=\"clocalheap__free\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CLocalHeap::Free","linkify":"<a name=\"clocalheap__free\"></a>  CLocalHeap::Free","source":"<a name=\"clocalheap__free\"></a>  CLocalHeap::Free"},{"content":"Call this method to free a block of memory allocated by this memory manager.","pos":[2942,3018]},{"pos":[3077,3087],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Pointer to memory previously allocated by this memory manager.","pos":[3098,3160]},{"content":"NULL is a valid value and does nothing.","pos":[3161,3200]},{"pos":[3210,3217],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[3221,3311],"content":"Implemented using <bpt id=\"p1\">[</bpt>LocalFree<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/aa366730)</ept>.","source":"Implemented using [LocalFree](http://msdn.microsoft.com/library/windows/desktop/aa366730)."},{"pos":[3321,3376],"content":"<bpt id=\"p1\">&lt;a name=\"clocalheap__getsize\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CLocalHeap::GetSize","linkify":"<a name=\"clocalheap__getsize\"></a>  CLocalHeap::GetSize","source":"<a name=\"clocalheap__getsize\"></a>  CLocalHeap::GetSize"},{"content":"Call this method to get the allocated size of a memory block allocated by this memory manager.","pos":[3380,3474]},{"pos":[3538,3548],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Pointer to memory previously allocated by this memory manager.","pos":[3559,3621]},{"pos":[3631,3643],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Returns the size of the allocated memory block in bytes.","pos":[3647,3703]},{"pos":[3713,3720],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[3724,3814],"content":"Implemented using <bpt id=\"p1\">[</bpt>LocalSize<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/aa366745)</ept>.","source":"Implemented using [LocalSize](http://msdn.microsoft.com/library/windows/desktop/aa366745)."},{"pos":[3824,3885],"content":"<bpt id=\"p1\">&lt;a name=\"clocalheap__reallocate\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CLocalHeap::Reallocate","linkify":"<a name=\"clocalheap__reallocate\"></a>  CLocalHeap::Reallocate","source":"<a name=\"clocalheap__reallocate\"></a>  CLocalHeap::Reallocate"},{"content":"Call this method to reallocate memory allocated by this memory manager.","pos":[3889,3960]},{"pos":[4072,4082],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Pointer to memory previously allocated by this memory manager.","pos":[4093,4155]},{"content":"The requested number of bytes in the new memory block.","pos":[4174,4228]},{"pos":[4238,4250],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Returns a pointer to the start of the newly allocated memory block.","pos":[4254,4321]},{"pos":[4331,4338],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[4342,4429],"content":"Call <bpt id=\"p1\">[</bpt>CLocalHeap::Free<ept id=\"p1\">](#clocalheap__free)</ept> to free the memory allocated by this method.","source":"Call [CLocalHeap::Free](#clocalheap__free) to free the memory allocated by this method."},{"pos":[4436,4529],"content":"Implemented using <bpt id=\"p1\">[</bpt>LocalReAlloc<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/aa366742)</ept>.","source":"Implemented using [LocalReAlloc](http://msdn.microsoft.com/library/windows/desktop/aa366742)."},{"pos":[4538,4546],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Class Overview<ept id=\"p1\">](../../atl/atl-class-overview.md)</ept><ph id=\"ph1\"> </ph>","pos":[4550,4600],"source":"[Class Overview](../../atl/atl-class-overview.md) "},{"content":"<bpt id=\"p1\"> [</bpt>CComHeap Class<ept id=\"p1\">](../../atl/reference/ccomheap-class.md)</ept><ph id=\"ph1\"> </ph>","pos":[4603,4660],"source":" [CComHeap Class](../../atl/reference/ccomheap-class.md) "},{"content":"<bpt id=\"p1\"> [</bpt>CWin32Heap Class<ept id=\"p1\">](../../atl/reference/cwin32heap-class.md)</ept><ph id=\"ph1\"> </ph>","pos":[4663,4724],"source":" [CWin32Heap Class](../../atl/reference/cwin32heap-class.md) "},{"content":"<bpt id=\"p1\"> [</bpt>CGlobalHeap Class<ept id=\"p1\">](../../atl/reference/cglobalheap-class.md)</ept><ph id=\"ph1\"> </ph>","pos":[4727,4790],"source":" [CGlobalHeap Class](../../atl/reference/cglobalheap-class.md) "},{"content":"<bpt id=\"p1\"> [</bpt>CCRTHeap Class<ept id=\"p1\">](../../atl/reference/ccrtheap-class.md)</ept><ph id=\"ph1\"> </ph>","pos":[4793,4850],"source":" [CCRTHeap Class](../../atl/reference/ccrtheap-class.md) "},{"content":"<bpt id=\"p1\"> [</bpt>IAtlMemMgr Class<ept id=\"p1\">](../../atl/reference/iatlmemmgr-class.md)</ept>","pos":[4853,4913],"source":" [IAtlMemMgr Class](../../atl/reference/iatlmemmgr-class.md)"}],"content":"---\ntitle: \"CLocalHeap Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"ATL.CLocalHeap\"\n  - \"ATL::CLocalHeap\"\n  - \"CLocalHeap\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"CLocalHeap class\"\nms.assetid: 1ffa87a5-5fc8-4f8d-8809-58e87e963bd2\ncaps.latest.revision: 20\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# CLocalHeap Class\nThis class implements [IAtlMemMgr](../../atl/reference/iatlmemmgr-class.md) using the Win32 local heap functions.  \n  \n> [!IMPORTANT]\n>  This class and its members cannot be used in applications that execute in the Windows Runtime.  \n  \n## Syntax  \n  \n```\nclass CLocalHeap : public IAtlMemMgr\n```  \n  \n## Members  \n  \n### Public Methods  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CLocalHeap::Allocate](#clocalheap__allocate)|Call this method to allocate a block of memory.|  \n|[CLocalHeap::Free](#clocalheap__free)|Call this method to free a block of memory allocated by this memory manager.|  \n|[CLocalHeap::GetSize](#clocalheap__getsize)|Call this method to get the allocated size of a memory block allocated by this memory manager.|  \n|[CLocalHeap::Reallocate](#clocalheap__reallocate)|Call this method to reallocate memory allocated by this memory manager.|  \n  \n## Remarks  \n `CLocalHeap` implements memory allocation functions using the Win32 local heap functions.  \n  \n> [!NOTE]\n>  The local heap functions are slower than other memory management functions and do not provide as many features. Therefore, new applications should use the [heap functions](http://msdn.microsoft.com/library/windows/desktop/aa366711). These are available in the [CWin32Heap](../../atl/reference/cwin32heap-class.md) class.  \n  \n## Example  \n See the example for [IAtlMemMgr](../../atl/reference/iatlmemmgr-class.md).  \n  \n## Inheritance Hierarchy  \n `IAtlMemMgr`  \n  \n `CLocalHeap`  \n  \n## Requirements  \n **Header:** atlmem.h  \n  \n##  <a name=\"clocalheap__allocate\"></a>  CLocalHeap::Allocate  \n Call this method to allocate a block of memory.  \n  \n```\nvirtual __declspec(allocator) void* Allocate(size_t   nBytes) throw();\n```  \n  \n### Parameters  \n `nBytes`  \n The requested number of bytes in the new memory block.  \n  \n### Return Value  \n Returns a pointer to the start of the newly allocated memory block.  \n  \n### Remarks  \n Call [CLocalHeap::Free](#clocalheap__free) or [CLocalHeap::Reallocate](#clocalheap__reallocate) to free the memory allocated by this method.  \n  \n Implemented using [LocalAlloc](http://msdn.microsoft.com/library/windows/desktop/aa366723) with a flag parameter of **LMEM_FIXED**.  \n  \n##  <a name=\"clocalheap__free\"></a>  CLocalHeap::Free  \n Call this method to free a block of memory allocated by this memory manager.  \n  \n```\nvirtual void Free(void* p) throw();\n```  \n  \n### Parameters  \n `p`  \n Pointer to memory previously allocated by this memory manager. NULL is a valid value and does nothing.  \n  \n### Remarks  \n Implemented using [LocalFree](http://msdn.microsoft.com/library/windows/desktop/aa366730).  \n  \n##  <a name=\"clocalheap__getsize\"></a>  CLocalHeap::GetSize  \n Call this method to get the allocated size of a memory block allocated by this memory manager.  \n  \n```\nvirtual size_t GetSize(void* p) throw();\n```  \n  \n### Parameters  \n `p`  \n Pointer to memory previously allocated by this memory manager.  \n  \n### Return Value  \n Returns the size of the allocated memory block in bytes.  \n  \n### Remarks  \n Implemented using [LocalSize](http://msdn.microsoft.com/library/windows/desktop/aa366745).  \n  \n##  <a name=\"clocalheap__reallocate\"></a>  CLocalHeap::Reallocate  \n Call this method to reallocate memory allocated by this memory manager.  \n  \n```\nvirtual __declspec(allocator) void* Reallocate(\n    void* p,\n    size_t nBytes) throw();\n```  \n  \n### Parameters  \n `p`  \n Pointer to memory previously allocated by this memory manager.  \n  \n `nBytes`  \n The requested number of bytes in the new memory block.  \n  \n### Return Value  \n Returns a pointer to the start of the newly allocated memory block.  \n  \n### Remarks  \n Call [CLocalHeap::Free](#clocalheap__free) to free the memory allocated by this method.  \n  \n Implemented using [LocalReAlloc](http://msdn.microsoft.com/library/windows/desktop/aa366742).  \n  \n## See Also  \n [Class Overview](../../atl/atl-class-overview.md)   \n [CComHeap Class](../../atl/reference/ccomheap-class.md)   \n [CWin32Heap Class](../../atl/reference/cwin32heap-class.md)   \n [CGlobalHeap Class](../../atl/reference/cglobalheap-class.md)   \n [CCRTHeap Class](../../atl/reference/ccrtheap-class.md)   \n [IAtlMemMgr Class](../../atl/reference/iatlmemmgr-class.md)\n"}