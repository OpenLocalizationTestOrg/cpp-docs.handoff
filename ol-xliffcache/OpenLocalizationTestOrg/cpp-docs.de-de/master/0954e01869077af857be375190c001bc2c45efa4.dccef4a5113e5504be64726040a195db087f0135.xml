{"nodes":[{"pos":[12,47],"content":"sqrt, sqrtf, sqrtl | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"sqrt, sqrtf, sqrtl | Microsoft Docs","pos":[0,35]}]},{"content":"sqrt, sqrtf, sqrtl","pos":[1082,1100]},{"content":"Calculates the square root.","pos":[1101,1128]},{"content":"Syntax","pos":[1137,1143]},{"content":"Parameters","pos":[1387,1397]},{"content":"Non-negative floating-point value","pos":[1408,1441]},{"content":"Remarks","pos":[1450,1457]},{"content":"Because C++ allows overloading, you can call overloads of <ph id=\"ph1\">`sqrt`</ph> that take <ph id=\"ph2\">`float`</ph> or <ph id=\"ph3\">`long double`</ph> types.","pos":[1461,1567],"source":"Because C++ allows overloading, you can call overloads of `sqrt` that take `float` or `long double` types."},{"content":"In a C program, <ph id=\"ph1\">`sqrt`</ph> always takes and returns <ph id=\"ph2\">`double`</ph>.","pos":[1568,1625],"source":" In a C program, `sqrt` always takes and returns `double`."},{"content":"Return Value","pos":[1634,1646]},{"content":"The <ph id=\"ph1\">`sqrt`</ph> functions return the square-root of <ph id=\"ph2\">`x`</ph>.","pos":[1650,1701],"source":"The `sqrt` functions return the square-root of `x`."},{"content":"By default, if <ph id=\"ph1\">`x`</ph> is negative, <ph id=\"ph2\">`sqrt`</ph> returns an indefinite NaN.","pos":[1702,1767],"source":" By default, if `x` is negative, `sqrt` returns an indefinite NaN."},{"content":"Input","pos":[1774,1779]},{"content":"SEH Exception","pos":[1780,1793]},{"pos":[1805,1814],"content":"Exception"},{"content":"± QNAN,IND","pos":[1882,1892]},{"content":"none","pos":[1893,1897]},{"content":"_DOMAIN","pos":[1898,1905]},{"content":"- ∞","pos":[1910,1913]},{"content":"none","pos":[1914,1918]},{"content":"_DOMAIN","pos":[1919,1926]},{"content":"x&lt;0","pos":[1931,1934],"source":"x<0"},{"content":"none","pos":[1935,1939]},{"content":"_DOMAIN","pos":[1940,1947]},{"content":"Requirements","pos":[1957,1969]},{"content":"Function","pos":[1976,1984]},{"content":"C header","pos":[1985,1993]},{"content":"C++ header","pos":[1994,2004]},{"pos":[2068,2078],"content":", <ph id=\"ph1\">`sqrtf`</ph>,","source":", `sqrtf`, "},{"content":"math.h&gt;","pos":[2089,2096],"source":"math.h>"},{"content":"cmath&gt;","pos":[2099,2105],"source":"cmath>"},{"pos":[2113,2206],"content":"For compatibility information, see <bpt id=\"p1\">[</bpt>Compatibility<ept id=\"p1\">](../../c-runtime-library/compatibility.md)</ept>.","source":"For compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md)."},{"content":"Example","pos":[2215,2222]},{"content":".NET Framework Equivalent","pos":[2689,2714]},{"content":"System::Math::Sqrt","pos":[2719,2737]},{"content":"See Also","pos":[2811,2819]},{"content":"Floating-Point Support","pos":[2824,2846]},{"content":"exp, expf","pos":[2904,2913]},{"content":"log, logf, log10, log10f","pos":[2967,2991]},{"content":"pow, powf, powl","pos":[3058,3073]},{"content":"_CIsqrt","pos":[3132,3139]}],"content":"---\ntitle: \"sqrt, sqrtf, sqrtl | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\napiname: \n  - \"sqrtl\"\n  - \"sqrtf\"\n  - \"sqrt\"\napilocation: \n  - \"msvcrt.dll\"\n  - \"msvcr80.dll\"\n  - \"msvcr90.dll\"\n  - \"msvcr100.dll\"\n  - \"msvcr100_clr0400.dll\"\n  - \"msvcr110.dll\"\n  - \"msvcr110_clr0400.dll\"\n  - \"msvcr120.dll\"\n  - \"msvcr120_clr0400.dll\"\n  - \"ucrtbase.dll\"\n  - \"api-ms-win-crt-math-l1-1-0.dll\"\napitype: \"DLLExport\"\nf1_keywords: \n  - \"sqrt\"\n  - \"sqrtf\"\n  - \"_sqrtl\"\ndev_langs: \n  - \"C++\"\n  - \"C\"\nhelpviewer_keywords: \n  - \"sqrtf function\"\n  - \"sqrt function\"\n  - \"sqrtl function\"\n  - \"_sqrtl function\"\n  - \"calculating square roots\"\n  - \"square roots, calculating\"\nms.assetid: 2ba9467b-f172-41dc-8f10-b86f68fa813c\ncaps.latest.revision: 18\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# sqrt, sqrtf, sqrtl\nCalculates the square root.  \n  \n## Syntax  \n  \n```  \ndouble sqrt(  \n   double x   \n);  \nfloat sqrt(  \n   float x   \n);  // C++ only  \nlong double sqrt(  \n   long double x  \n);  // C++ only  \nfloat sqrtf(  \n   float x   \n);  \nlong double sqrtl(  \n   long double x   \n);  \n```  \n  \n#### Parameters  \n `x`  \n Non-negative floating-point value  \n  \n## Remarks  \n Because C++ allows overloading, you can call overloads of `sqrt` that take `float` or `long double` types. In a C program, `sqrt` always takes and returns `double`.  \n  \n## Return Value  \n The `sqrt` functions return the square-root of `x`. By default, if `x` is negative, `sqrt` returns an indefinite NaN.  \n  \n|Input|SEH Exception|`_matherr` Exception|  \n|-----------|-------------------|--------------------------|  \n|± QNAN,IND|none|_DOMAIN|  \n|- ∞|none|_DOMAIN|  \n|x<0|none|_DOMAIN|  \n  \n## Requirements  \n  \n|Function|C header|C++ header|  \n|--------------|--------------|------------------|  \n|`sqrt`, `sqrtf`, `sqrtl`|\\<math.h>|\\<cmath>|  \n  \n For compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md).  \n  \n## Example  \n  \n```  \n// crt_sqrt.c  \n// This program calculates a square root.  \n  \n#include <math.h>  \n#include <stdio.h>  \n#include <stdlib.h>  \n  \nint main( void )  \n{  \n   double question = 45.35, answer;  \n   answer = sqrt( question );  \n   if( question < 0 )  \n      printf( \"Error: sqrt returns %f\\n\", answer );  \n   else  \n      printf( \"The square root of %.2f is %.2f\\n\", question, answer );  \n}  \n```  \n  \n```Output  \nThe square root of 45.35 is 6.73  \n```  \n  \n## .NET Framework Equivalent  \n [System::Math::Sqrt](https://msdn.microsoft.com/en-us/library/system.math.sqrt.aspx)  \n  \n## See Also  \n [Floating-Point Support](../../c-runtime-library/floating-point-support.md)   \n [exp, expf](../../c-runtime-library/reference/exp-expf.md)   \n [log, logf, log10, log10f](../../c-runtime-library/reference/log-logf-log10-log10f.md)   \n [pow, powf, powl](../../c-runtime-library/reference/pow-powf-powl.md)   \n [_CIsqrt](../../c-runtime-library/cisqrt.md)"}