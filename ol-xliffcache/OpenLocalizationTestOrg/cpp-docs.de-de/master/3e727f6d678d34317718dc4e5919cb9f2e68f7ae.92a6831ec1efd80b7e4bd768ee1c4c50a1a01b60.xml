{"nodes":[{"pos":[12,85],"content":"_vcprintf_s, _vcprintf_s_l, _vcwprintf_s, _vcwprintf_s_l | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"_vcprintf_s, _vcprintf_s_l, _vcwprintf_s, _vcwprintf_s_l | Microsoft Docs","pos":[0,73]}]},{"pos":[1479,1535],"content":"_vcprintf_s, _vcprintf_s_l, _vcwprintf_s, _vcwprintf_s_l","linkify":"_vcprintf_s, _vcprintf_s_l, _vcwprintf_s, _vcwprintf_s_l","nodes":[{"content":"_vcprintf_s, _vcprintf_s_l, _vcwprintf_s, _vcwprintf_s_l","pos":[0,56]}]},{"content":"Writes formatted output to the console by using a pointer to a list of arguments.","pos":[1536,1617]},{"content":"These versions of <bpt id=\"p1\">[</bpt>_vcprintf, _vcprintf_l, _vcwprintf, _vcwprintf_l<ept id=\"p1\">](../../c-runtime-library/reference/vcprintf-vcprintf-l-vcwprintf-vcwprintf-l.md)</ept> have security enhancements, as described in <bpt id=\"p2\">[</bpt>Security Features in the CRT<ept id=\"p2\">](../../c-runtime-library/security-features-in-the-crt.md)</ept>.","pos":[1618,1899],"source":" These versions of [_vcprintf, _vcprintf_l, _vcwprintf, _vcwprintf_l](../../c-runtime-library/reference/vcprintf-vcprintf-l-vcwprintf-vcwprintf-l.md) have security enhancements, as described in [Security Features in the CRT](../../c-runtime-library/security-features-in-the-crt.md)."},{"pos":[1907,2127],"content":"[!IMPORTANT]\n This API cannot be used in applications that execute in the Windows Runtime. For more information, see [CRT functions not supported with /ZW](http://msdn.microsoft.com/library/windows/apps/jj606124.aspx).","leadings":["","> "],"nodes":[{"content":" This API cannot be used in applications that execute in the Windows Runtime. For more information, see [CRT functions not supported with /ZW](http://msdn.microsoft.com/library/windows/apps/jj606124.aspx).","pos":[13,218],"nodes":[{"content":"This API cannot be used in applications that execute in the Windows Runtime.","pos":[1,77]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>CRT functions not supported with /ZW<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/apps/jj606124.aspx)</ept>.","pos":[78,205],"source":" For more information, see [CRT functions not supported with /ZW](http://msdn.microsoft.com/library/windows/apps/jj606124.aspx)."}]}]},{"pos":[2136,2142],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[2494,2504],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Format specification.","pos":[2520,2541]},{"content":"Pointer to the list of arguments.","pos":[2560,2593]},{"content":"The locale to use.","pos":[2612,2630]},{"pos":[2637,2808],"content":"For more information, see <bpt id=\"p1\">[</bpt>Format Specification Syntax: printf and wprintf Functions<ept id=\"p1\">](../../c-runtime-library/format-specification-syntax-printf-and-wprintf-functions.md)</ept>.","source":"For more information, see [Format Specification Syntax: printf and wprintf Functions](../../c-runtime-library/format-specification-syntax-printf-and-wprintf-functions.md)."},{"pos":[2817,2829],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The number of characters written, or a negative value if an output error occurs.","pos":[2833,2913]},{"content":"Like the less secure versions of these functions, if <ph id=\"ph1\">`format`</ph> is a null pointer, the invalid parameter handler is invoked, as described in <bpt id=\"p1\">[</bpt>Parameter Validation<ept id=\"p1\">](../../c-runtime-library/parameter-validation.md)</ept>.","pos":[2920,3131],"source":"Like the less secure versions of these functions, if `format` is a null pointer, the invalid parameter handler is invoked, as described in [Parameter Validation](../../c-runtime-library/parameter-validation.md)."},{"content":"Additionally, unlike the less secure versions of these functions, if <ph id=\"ph1\">`format`</ph> does not specify a valid format, an invalid parameter exception is generated.","pos":[3132,3287],"source":" Additionally, unlike the less secure versions of these functions, if `format` does not specify a valid format, an invalid parameter exception is generated."},{"content":"If execution is allowed to continue, these functions return an error code and set <ph id=\"ph1\">`errno`</ph> to that error code.","pos":[3288,3397],"source":" If execution is allowed to continue, these functions return an error code and set `errno` to that error code."},{"content":"The default error code is <ph id=\"ph1\">`EINVAL`</ph> if a more specific value does not apply.","pos":[3398,3473],"source":" The default error code is `EINVAL` if a more specific value does not apply."},{"pos":[3482,3489],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Each of these functions takes a pointer to an argument list, and then formats and writes the given data to the console.","pos":[3493,3612]},{"content":"<ph id=\"ph1\">`_vcwprintf_s`</ph> is the wide-character version of <ph id=\"ph2\">`_vcprintf_s`</ph>.","pos":[3613,3675],"source":"`_vcwprintf_s` is the wide-character version of `_vcprintf_s`."},{"content":"It takes a wide-character string as an argument.","pos":[3676,3724]},{"pos":[3731,3892],"content":"The versions of these functions that have the <ph id=\"ph1\">`_l`</ph> suffix are identical except that they use the locale parameter that's passed in instead of the current locale.","source":"The versions of these functions that have the `_l` suffix are identical except that they use the locale parameter that's passed in instead of the current locale."},{"pos":[3900,4080],"content":"[!IMPORTANT]\n Ensure that `format` is not a user-defined string. For more information, see [Avoiding Buffer Overruns](http://msdn.microsoft.com/library/windows/desktop/ms717795).","leadings":["","> "],"nodes":[{"content":" Ensure that `format` is not a user-defined string. For more information, see [Avoiding Buffer Overruns](http://msdn.microsoft.com/library/windows/desktop/ms717795).","pos":[13,178],"nodes":[{"content":"Ensure that <ph id=\"ph1\">`format`</ph> is not a user-defined string.","pos":[1,51],"source":" Ensure that `format` is not a user-defined string."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Avoiding Buffer Overruns<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms717795)</ept>.","pos":[52,165],"source":" For more information, see [Avoiding Buffer Overruns](http://msdn.microsoft.com/library/windows/desktop/ms717795)."}]}]},{"pos":[4090,4119],"content":"Generic-Text Routine Mappings","linkify":"Generic-Text Routine Mappings","nodes":[{"content":"Generic-Text Routine Mappings","pos":[0,29]}]},{"content":"TCHAR.H routine","pos":[4126,4141]},{"content":"_UNICODE &amp; _MBCS not defined","pos":[4142,4170],"source":"_UNICODE & _MBCS not defined"},{"content":"_MBCS defined","pos":[4171,4184]},{"content":"_UNICODE defined","pos":[4185,4201]},{"pos":[4451,4463],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"content":"Routine","pos":[4470,4477]},{"content":"Required header","pos":[4478,4493]},{"content":"Optional headers","pos":[4494,4510]},{"pos":[4578,4608],"content":"<ph id=\"ph1\">`_vcprintf_s`</ph>, <ph id=\"ph2\">`_vcprintf_s_l`</ph>","source":"`_vcprintf_s`, `_vcprintf_s_l`"},{"content":"<ph id=\"ph1\">\\&lt;</ph>conio.h&gt; and <ph id=\"ph2\">\\&lt;</ph>stdarg.h&gt;","pos":[4609,4635],"source":"\\<conio.h> and \\<stdarg.h>"},{"content":"<ph id=\"ph1\">\\&lt;</ph>varargs.h&gt;*","pos":[4636,4649],"source":"\\<varargs.h>*"},{"pos":[4654,4686],"content":"<ph id=\"ph1\">`_vcwprintf_s`</ph>, <ph id=\"ph2\">`_vcwprintf_s_l`</ph>","source":"`_vcwprintf_s`, `_vcwprintf_s_l`"},{"content":"<ph id=\"ph1\">\\&lt;</ph>conio.h&gt; or <ph id=\"ph2\">\\&lt;</ph>wchar.h&gt;, and <ph id=\"ph3\">\\&lt;</ph>stdarg.h&gt;","pos":[4687,4728],"source":"\\<conio.h> or \\<wchar.h>, and \\<stdarg.h>"},{"content":"<ph id=\"ph1\">\\&lt;</ph>varargs.h&gt;*","pos":[4729,4742],"source":"\\<varargs.h>*"},{"content":"<ph id=\"ph1\">\\*</ph> Required for UNIX V compatibility.","pos":[4750,4787],"source":"\\* Required for UNIX V compatibility."},{"pos":[4794,4898],"content":"For additional compatibility information, see <bpt id=\"p1\">[</bpt>Compatibility<ept id=\"p1\">](../../c-runtime-library/compatibility.md)</ept>.","source":"For additional compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md)."},{"pos":[4907,4914],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[5545,5570],"content":".NET Framework Equivalent","linkify":".NET Framework Equivalent","nodes":[{"content":".NET Framework Equivalent","pos":[0,25]}]},{"pos":[5574,5666],"content":"<bpt id=\"p1\">[</bpt>System::Console::Write<ept id=\"p1\">](https://msdn.microsoft.com/en-us/library/system.console.write.aspx)</ept>","source":"[System::Console::Write](https://msdn.microsoft.com/en-us/library/system.console.write.aspx)"},{"pos":[5675,5683],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Stream I/O<ept id=\"p1\">](../../c-runtime-library/stream-i-o.md)</ept><ph id=\"ph1\"> </ph>","pos":[5687,5739],"source":"[Stream I/O](../../c-runtime-library/stream-i-o.md) "},{"content":"<bpt id=\"p1\"> [</bpt>vprintf Functions<ept id=\"p1\">](../../c-runtime-library/vprintf-functions.md)</ept><ph id=\"ph1\"> </ph>","pos":[5742,5809],"source":" [vprintf Functions](../../c-runtime-library/vprintf-functions.md) "},{"content":"<bpt id=\"p1\"> [</bpt>_cprintf, _cprintf_l, _cwprintf, _cwprintf_l<ept id=\"p1\">](../../c-runtime-library/reference/cprintf-cprintf-l-cwprintf-cwprintf-l.md)</ept><ph id=\"ph1\"> </ph>","pos":[5812,5936],"source":" [_cprintf, _cprintf_l, _cwprintf, _cwprintf_l](../../c-runtime-library/reference/cprintf-cprintf-l-cwprintf-cwprintf-l.md) "},{"content":"<bpt id=\"p1\"> [</bpt>fprintf, _fprintf_l, fwprintf, _fwprintf_l<ept id=\"p1\">](../../c-runtime-library/reference/fprintf-fprintf-l-fwprintf-fwprintf-l.md)</ept><ph id=\"ph1\"> </ph>","pos":[5939,6061],"source":" [fprintf, _fprintf_l, fwprintf, _fwprintf_l](../../c-runtime-library/reference/fprintf-fprintf-l-fwprintf-fwprintf-l.md) "},{"content":"<bpt id=\"p1\"> [</bpt>printf, _printf_l, wprintf, _wprintf_l<ept id=\"p1\">](../../c-runtime-library/reference/printf-printf-l-wprintf-wprintf-l.md)</ept><ph id=\"ph1\"> </ph>","pos":[6064,6178],"source":" [printf, _printf_l, wprintf, _wprintf_l](../../c-runtime-library/reference/printf-printf-l-wprintf-wprintf-l.md) "},{"content":"<bpt id=\"p1\"> [</bpt>sprintf, _sprintf_l, swprintf, _swprintf_l, <ph id=\"ph1\">\\_</ph>_swprintf_l<ept id=\"p1\">](../../c-runtime-library/reference/sprintf-sprintf-l-swprintf-swprintf-l-swprintf-l.md)</ept><ph id=\"ph2\"> </ph>","pos":[6181,6329],"source":" [sprintf, _sprintf_l, swprintf, _swprintf_l, \\__swprintf_l](../../c-runtime-library/reference/sprintf-sprintf-l-swprintf-swprintf-l-swprintf-l.md) "},{"content":"<bpt id=\"p1\"> [</bpt>va_arg, va_copy, va_end, va_start<ept id=\"p1\">](../../c-runtime-library/reference/va-arg-va-copy-va-end-va-start.md)</ept>","pos":[6332,6437],"source":" [va_arg, va_copy, va_end, va_start](../../c-runtime-library/reference/va-arg-va-copy-va-end-va-start.md)"}],"content":"---\ntitle: \"_vcprintf_s, _vcprintf_s_l, _vcwprintf_s, _vcwprintf_s_l | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\napiname: \n  - \"_vcprintf_s\"\n  - \"_vcprintf_s_l\"\n  - \"_vcwprintf_s\"\n  - \"_vcwprintf_s_l\"\napilocation: \n  - \"msvcrt.dll\"\n  - \"msvcr80.dll\"\n  - \"msvcr90.dll\"\n  - \"msvcr100.dll\"\n  - \"msvcr100_clr0400.dll\"\n  - \"msvcr110.dll\"\n  - \"msvcr110_clr0400.dll\"\n  - \"msvcr120.dll\"\n  - \"msvcr120_clr0400.dll\"\n  - \"ucrtbase.dll\"\napitype: \"DLLExport\"\nf1_keywords: \n  - \"vcprintf_s\"\n  - \"vcwprintf_s_l\"\n  - \"_vcwprintf_s\"\n  - \"_vcwprintf_s_l\"\n  - \"_vcprintf_s_l\"\n  - \"_vtcprintf_s\"\n  - \"vcwprintf_s\"\n  - \"vcprintf_s_l\"\n  - \"_vcprintf_s\"\ndev_langs: \n  - \"C++\"\n  - \"C\"\nhelpviewer_keywords: \n  - \"_vtcprintf_s_l function\"\n  - \"_vcwprintf_s_l function\"\n  - \"_vtcprintf_s function\"\n  - \"vtcprintf_s_l function\"\n  - \"vcprintf_s_l function\"\n  - \"_vcprintf_s function\"\n  - \"_vcwprintf_s function\"\n  - \"vcwprintf_s_l function\"\n  - \"vcwprintf_s function\"\n  - \"vcprintf_s function\"\n  - \"_vcprintf_s_l function\"\n  - \"vtcprintf_s function\"\n  - \"formatted text [C++]\"\nms.assetid: 5a46d45a-30db-45df-9850-455cbdac5636\ncaps.latest.revision: 24\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# _vcprintf_s, _vcprintf_s_l, _vcwprintf_s, _vcwprintf_s_l\nWrites formatted output to the console by using a pointer to a list of arguments. These versions of [_vcprintf, _vcprintf_l, _vcwprintf, _vcwprintf_l](../../c-runtime-library/reference/vcprintf-vcprintf-l-vcwprintf-vcwprintf-l.md) have security enhancements, as described in [Security Features in the CRT](../../c-runtime-library/security-features-in-the-crt.md).  \n  \n> [!IMPORTANT]\n>  This API cannot be used in applications that execute in the Windows Runtime. For more information, see [CRT functions not supported with /ZW](http://msdn.microsoft.com/library/windows/apps/jj606124.aspx).  \n  \n## Syntax  \n  \n```  \nint _vcprintf(  \n   const char* format,  \n   va_list argptr  \n);  \nint _vcprintf(  \n   const char* format,  \n   locale_t locale,  \n   va_list argptr  \n);  \nint _vcwprintf_s(  \n   const wchar_t* format,  \n   va_list argptr  \n);  \nint _vcwprintf_s_l(  \n   const wchar_t* format,  \n   locale_t locale,  \n   va_list argptr  \n);  \n```  \n  \n#### Parameters  \n `format`  \n Format specification.  \n  \n `argptr`  \n Pointer to the list of arguments.  \n  \n `locale`  \n The locale to use.  \n  \n For more information, see [Format Specification Syntax: printf and wprintf Functions](../../c-runtime-library/format-specification-syntax-printf-and-wprintf-functions.md).  \n  \n## Return Value  \n The number of characters written, or a negative value if an output error occurs.  \n  \n Like the less secure versions of these functions, if `format` is a null pointer, the invalid parameter handler is invoked, as described in [Parameter Validation](../../c-runtime-library/parameter-validation.md). Additionally, unlike the less secure versions of these functions, if `format` does not specify a valid format, an invalid parameter exception is generated. If execution is allowed to continue, these functions return an error code and set `errno` to that error code. The default error code is `EINVAL` if a more specific value does not apply.  \n  \n## Remarks  \n Each of these functions takes a pointer to an argument list, and then formats and writes the given data to the console. `_vcwprintf_s` is the wide-character version of `_vcprintf_s`. It takes a wide-character string as an argument.  \n  \n The versions of these functions that have the `_l` suffix are identical except that they use the locale parameter that's passed in instead of the current locale.  \n  \n> [!IMPORTANT]\n>  Ensure that `format` is not a user-defined string. For more information, see [Avoiding Buffer Overruns](http://msdn.microsoft.com/library/windows/desktop/ms717795).  \n  \n### Generic-Text Routine Mappings  \n  \n|TCHAR.H routine|_UNICODE & _MBCS not defined|_MBCS defined|_UNICODE defined|  \n|---------------------|------------------------------------|--------------------|-----------------------|  \n|`_vtcprintf_s`|`_vcprintf_s`|`_vcprintf_s`|`_vcwprintf_s`|  \n|`_vtcprintf_s_l`|`_vcprintf_s_l`|`_vcprintf_s_l`|`_vcwprintf_s_l`|  \n  \n## Requirements  \n  \n|Routine|Required header|Optional headers|  \n|-------------|---------------------|----------------------|  \n|`_vcprintf_s`, `_vcprintf_s_l`|\\<conio.h> and \\<stdarg.h>|\\<varargs.h>*|  \n|`_vcwprintf_s`, `_vcwprintf_s_l`|\\<conio.h> or \\<wchar.h>, and \\<stdarg.h>|\\<varargs.h>*|  \n  \n \\* Required for UNIX V compatibility.  \n  \n For additional compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md).  \n  \n## Example  \n  \n```  \n// crt_vcprintf_s.cpp  \n#include <conio.h>  \n#include <stdarg.h>  \n  \n// An error formatting function used to print to the console.  \nint eprintf_s(const char* format, ...)  \n{  \n  va_list args;  \n  va_start(args, format);  \n  return _vcprintf_s(format, args);  \n}  \n  \nint main()  \n{  \n   eprintf_s(\"  (%d:%d): Error %s%d : %s\\n\", 10, 23, \"C\", 2111,  \n           \"<some error text>\");  \n   eprintf_s(\"  (Related to symbol '%s' defined on line %d).\\n\",  \n           \"<symbol>\", 5 );  \n}  \n```  \n  \n```Output  \n(10,23): Error C2111 : <some error text>  \n  (Related to symbol '<symbol>' defined on line 5).  \n```  \n  \n## .NET Framework Equivalent  \n [System::Console::Write](https://msdn.microsoft.com/en-us/library/system.console.write.aspx)  \n  \n## See Also  \n [Stream I/O](../../c-runtime-library/stream-i-o.md)   \n [vprintf Functions](../../c-runtime-library/vprintf-functions.md)   \n [_cprintf, _cprintf_l, _cwprintf, _cwprintf_l](../../c-runtime-library/reference/cprintf-cprintf-l-cwprintf-cwprintf-l.md)   \n [fprintf, _fprintf_l, fwprintf, _fwprintf_l](../../c-runtime-library/reference/fprintf-fprintf-l-fwprintf-fwprintf-l.md)   \n [printf, _printf_l, wprintf, _wprintf_l](../../c-runtime-library/reference/printf-printf-l-wprintf-wprintf-l.md)   \n [sprintf, _sprintf_l, swprintf, _swprintf_l, \\__swprintf_l](../../c-runtime-library/reference/sprintf-sprintf-l-swprintf-swprintf-l-swprintf-l.md)   \n [va_arg, va_copy, va_end, va_start](../../c-runtime-library/reference/va-arg-va-copy-va-end-va-start.md)"}