{"nodes":[{"pos":[12,58],"content":"strcpy_s, wcscpy_s, _mbscpy_s | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"strcpy_s, wcscpy_s, _mbscpy_s | Microsoft Docs","pos":[0,46]}]},{"content":"strcpy_s, wcscpy_s, _mbscpy_s","pos":[1200,1229]},{"content":"Copies a string.","pos":[1230,1246]},{"content":"These versions of <bpt id=\"p1\">[</bpt>strcpy, wcscpy, _mbscpy<ept id=\"p1\">](../../c-runtime-library/reference/strcpy-wcscpy-mbscpy.md)</ept> have security enhancements, as described in <bpt id=\"p2\">[</bpt>Security Features in the CRT<ept id=\"p2\">](../../c-runtime-library/security-features-in-the-crt.md)</ept>.","pos":[1247,1482],"source":" These versions of [strcpy, wcscpy, _mbscpy](../../c-runtime-library/reference/strcpy-wcscpy-mbscpy.md) have security enhancements, as described in [Security Features in the CRT](../../c-runtime-library/security-features-in-the-crt.md)."},{"pos":[1490,1753],"content":"[!IMPORTANT]\n `_mbscpy_s` cannot be used in applications that execute in the [!INCLUDE[wrt](../../atl/reference/includes/wrt_md.md)]. For more information, see [CRT functions not supported with /ZW](http://msdn.microsoft.com/library/windows/apps/jj606124.aspx).","leadings":["","> "],"nodes":[{"content":" cannot be used in applications that execute in the [!INCLUDE[wrt](../../atl/reference/includes/wrt_md.md)]. For more information, see [CRT functions not supported with /ZW](http://msdn.microsoft.com/library/windows/apps/jj606124.aspx).","pos":[25,261],"nodes":[{"content":"cannot be used in applications that execute in the <ph id=\"ph1\">[!INCLUDE[wrt](../../atl/reference/includes/wrt_md.md)]</ph>.","pos":[1,108],"source":" cannot be used in applications that execute in the [!INCLUDE[wrt](../../atl/reference/includes/wrt_md.md)]."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>CRT functions not supported with /ZW<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/apps/jj606124.aspx)</ept>.","pos":[109,236],"source":" For more information, see [CRT functions not supported with /ZW](http://msdn.microsoft.com/library/windows/apps/jj606124.aspx)."}]}]},{"content":"Syntax","pos":[1762,1768]},{"content":"Parameters","pos":[2549,2559]},{"content":"Location of the destination string buffer.","pos":[2583,2625]},{"content":"Size of the destination string buffer in <ph id=\"ph1\">`char`</ph> units for narrow and multi-byte functions, and <ph id=\"ph2\">`wchar_t`</ph> units for wide functions.","pos":[2654,2784],"source":" Size of the destination string buffer in `char` units for narrow and multi-byte functions, and `wchar_t` units for wide functions."},{"content":"Null-terminated source string buffer.","pos":[2806,2843]},{"content":"Return Value","pos":[2852,2864]},{"content":"Zero if successful; otherwise, an error.","pos":[2868,2908]},{"content":"Error Conditions","pos":[2918,2934]},{"content":"Return value","pos":[2989,3001]},{"pos":[3002,3013],"content":"Contents of"},{"content":"any","pos":[3166,3169]},{"content":"any","pos":[3170,3173]},{"content":"not modified","pos":[3183,3195]},{"content":"any","pos":[3200,3203]},{"content":"any","pos":[3204,3207]},{"pos":[3240,3252],"content":"[0] set to 0"},{"content":"any","pos":[3257,3260]},{"content":"0, or too small","pos":[3261,3276]},{"content":"any","pos":[3277,3280]},{"pos":[3306,3318],"content":"[0] set to 0"},{"content":"Remarks","pos":[3328,3335]},{"content":"The <ph id=\"ph1\">`strcpy_s`</ph> function copies the contents in the address of <ph id=\"ph2\">`strSource`</ph>, including the terminating null character, to the location that's specified by <ph id=\"ph3\">`strDestination`</ph>.","pos":[3339,3509],"source":"The `strcpy_s` function copies the contents in the address of `strSource`, including the terminating null character, to the location that's specified by `strDestination`."},{"content":"The destination string must be large enough to hold the source string and its terminating null character.","pos":[3510,3615]},{"content":"The behavior of <ph id=\"ph1\">`strcpy_s`</ph> is undefined if the source and destination strings overlap.","pos":[3616,3702],"source":" The behavior of `strcpy_s` is undefined if the source and destination strings overlap."},{"content":"is the wide-character version of <ph id=\"ph1\">`strcpy_s`</ph>, and <ph id=\"ph2\">`_mbscpy_s`</ph> is the multibyte-character version.","pos":[3720,3816],"source":" is the wide-character version of `strcpy_s`, and `_mbscpy_s` is the multibyte-character version."},{"content":"The arguments and return value of <ph id=\"ph1\">`wcscpy_s`</ph> are wide-character strings; those of <ph id=\"ph2\">`_mbscpy_s`</ph> are multibyte-character strings.","pos":[3817,3943],"source":" The arguments and return value of `wcscpy_s` are wide-character strings; those of `_mbscpy_s` are multibyte-character strings."},{"content":"These three functions behave identically otherwise.","pos":[3944,3995]},{"content":"If <ph id=\"ph1\">`strDestination`</ph> or <ph id=\"ph2\">`strSource`</ph> is a null pointer, or if the destination string is too small, the invalid parameter handler is invoked, as described in <bpt id=\"p1\">[</bpt>Parameter Validation<ept id=\"p1\">](../../c-runtime-library/parameter-validation.md)</ept>.","pos":[4002,4229],"source":"If `strDestination` or `strSource` is a null pointer, or if the destination string is too small, the invalid parameter handler is invoked, as described in [Parameter Validation](../../c-runtime-library/parameter-validation.md)."},{"content":"If execution is allowed to continue, these functions return <ph id=\"ph1\">`EINVAL`</ph> and set <ph id=\"ph2\">`errno`</ph> to <ph id=\"ph3\">`EINVAL`</ph> when <ph id=\"ph4\">`strDestination`</ph> or <ph id=\"ph5\">`strSource`</ph> is a null pointer, and they return <ph id=\"ph6\">`ERANGE`</ph> and set <ph id=\"ph7\">`errno`</ph> to <ph id=\"ph8\">`ERANGE`</ph> when the destination string is too small.","pos":[4230,4477],"source":" If execution is allowed to continue, these functions return `EINVAL` and set `errno` to `EINVAL` when `strDestination` or `strSource` is a null pointer, and they return `ERANGE` and set `errno` to `ERANGE` when the destination string is too small."},{"content":"Upon successful execution, the destination string is always null-terminated.","pos":[4484,4560]},{"content":"In C++, use of these functions is simplified by template overloads that can infer buffer length automatically so that you don't have to specify a size argument, and they can automatically replace older, less-secure functions with their newer, more secure counterparts.","pos":[4567,4835]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Secure Template Overloads<ept id=\"p1\">](../../c-runtime-library/secure-template-overloads.md)</ept>.","pos":[4836,4944],"source":" For more information, see [Secure Template Overloads](../../c-runtime-library/secure-template-overloads.md)."},{"content":"The debug versions of these functions first fill the buffer with 0xFE.","pos":[4951,5021]},{"content":"To disable this behavior, use <bpt id=\"p1\">[</bpt>_CrtSetDebugFillThreshold<ept id=\"p1\">](../../c-runtime-library/reference/crtsetdebugfillthreshold.md)</ept>.","pos":[5022,5143],"source":" To disable this behavior, use [_CrtSetDebugFillThreshold](../../c-runtime-library/reference/crtsetdebugfillthreshold.md)."},{"content":"Generic-Text Routine Mappings","pos":[5153,5182]},{"content":"TCHAR.H routine","pos":[5189,5204]},{"content":"_UNICODE &amp; _MBCS not defined","pos":[5205,5233],"source":"_UNICODE & _MBCS not defined"},{"content":"_MBCS defined","pos":[5234,5247]},{"content":"_UNICODE defined","pos":[5248,5264]},{"content":"Requirements","pos":[5432,5444]},{"content":"Routine","pos":[5451,5458]},{"content":"Required header","pos":[5459,5474]},{"content":"string.h&gt;","pos":[5532,5541],"source":"string.h>"},{"content":"string.h&gt; or <ph id=\"ph1\">\\&lt;</ph>wchar.h&gt;","pos":[5559,5582],"source":"string.h> or \\<wchar.h>"},{"content":"mbstring.h&gt;","pos":[5601,5612],"source":"mbstring.h>"},{"pos":[5620,5724],"content":"For additional compatibility information, see <bpt id=\"p1\">[</bpt>Compatibility<ept id=\"p1\">](../../c-runtime-library/compatibility.md)</ept>.","source":"For additional compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md)."},{"content":"Example","pos":[5733,5740]},{"content":".NET Framework Equivalent","pos":[6414,6439]},{"content":"System::String::Copy","pos":[6444,6464]},{"content":"See Also","pos":[6540,6548]},{"content":"String Manipulation","pos":[6553,6572]},{"content":"strcat, wcscat, _mbscat","pos":[6631,6654]},{"content":"strcmp, wcscmp, _mbscmp","pos":[6720,6743]},{"content":"strncat_s, _strncat_s_l, wcsncat_s, _wcsncat_s_l, _mbsncat_s, _mbsncat_s_l","pos":[6809,6883]},{"content":"strncmp, wcsncmp, _mbsncmp, _mbsncmp_l","pos":[6994,7032]},{"content":"strncpy_s, _strncpy_s_l, wcsncpy_s, _wcsncpy_s_l, _mbsncpy_s, _mbsncpy_s_l","pos":[7111,7185]},{"content":"_strnicmp, _wcsnicmp, _mbsnicmp, _strnicmp_l, _wcsnicmp_l, _mbsnicmp_l","pos":[7296,7366]},{"content":"strrchr, wcsrchr, _mbsrchr, _mbsrchr_l","pos":[7471,7509]},{"content":"strspn, wcsspn, _mbsspn, _mbsspn_l","pos":[7588,7622]}],"content":"---\ntitle: \"strcpy_s, wcscpy_s, _mbscpy_s | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\napiname: \n  - \"wcscpy_s\"\n  - \"_mbscpy_s\"\n  - \"strcpy_s\"\napilocation: \n  - \"msvcrt.dll\"\n  - \"msvcr80.dll\"\n  - \"msvcr90.dll\"\n  - \"msvcr100.dll\"\n  - \"msvcr100_clr0400.dll\"\n  - \"msvcr110.dll\"\n  - \"msvcr110_clr0400.dll\"\n  - \"msvcr120.dll\"\n  - \"msvcr120_clr0400.dll\"\n  - \"ucrtbase.dll\"\n  - \"api-ms-win-crt-multibyte-l1-1-0.dll\"\n  - \"api-ms-win-crt-string-l1-1-0.dll\"\napitype: \"DLLExport\"\nf1_keywords: \n  - \"strcpy_s\"\n  - \"_mbscpy_s\"\n  - \"_tcscpy_s\"\n  - \"wcscpy_s\"\ndev_langs: \n  - \"C++\"\n  - \"C\"\nhelpviewer_keywords: \n  - \"strcpy_s function\"\n  - \"_tcscpy_s function\"\n  - \"_mbscpy_s function\"\n  - \"copying strings\"\n  - \"strings [C++], copying\"\n  - \"tcscpy_s function\"\n  - \"wcscpy_s function\"\nms.assetid: 611326f3-7929-4a5d-a465-a4683af3b053\ncaps.latest.revision: 41\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# strcpy_s, wcscpy_s, _mbscpy_s\nCopies a string. These versions of [strcpy, wcscpy, _mbscpy](../../c-runtime-library/reference/strcpy-wcscpy-mbscpy.md) have security enhancements, as described in [Security Features in the CRT](../../c-runtime-library/security-features-in-the-crt.md).  \n  \n> [!IMPORTANT]\n>  `_mbscpy_s` cannot be used in applications that execute in the [!INCLUDE[wrt](../../atl/reference/includes/wrt_md.md)]. For more information, see [CRT functions not supported with /ZW](http://msdn.microsoft.com/library/windows/apps/jj606124.aspx).  \n  \n## Syntax  \n  \n```  \nerrno_t strcpy_s(  \n   char *strDestination,  \n   size_t numberOfElements,  \n   const char *strSource   \n);  \nerrno_t wcscpy_s(  \n   wchar_t *strDestination,  \n   size_t numberOfElements,  \n   const wchar_t *strSource   \n);  \nerrno_t _mbscpy_s(  \n   unsigned char *strDestination,  \n   size_t numberOfElements,  \n   const unsigned char *strSource   \n);  \ntemplate <size_t size>  \nerrno_t strcpy_s(  \n   char (&strDestination)[size],  \n   const char *strSource   \n); // C++ only  \ntemplate <size_t size>  \nerrno_t wcscpy_s(  \n   wchar_t (&strDestination)[size],  \n   const wchar_t *strSource   \n); // C++ only  \ntemplate <size_t size>  \nerrno_t _mbscpy_s(  \n   unsigned char (&strDestination)[size],  \n   const unsigned char *strSource   \n); // C++ only  \n```  \n  \n#### Parameters  \n `strDestination`  \n Location of the destination string buffer.  \n  \n `numberOfElements`  \n Size of the destination string buffer in `char` units for narrow and multi-byte functions, and `wchar_t` units for wide functions.  \n  \n `strSource`  \n Null-terminated source string buffer.  \n  \n## Return Value  \n Zero if successful; otherwise, an error.  \n  \n### Error Conditions  \n  \n|`strDestination`|`numberOfElements`|`strSource`|Return value|Contents of `strDestination`|  \n|----------------------|------------------------|-----------------|------------------|----------------------------------|  \n|`NULL`|any|any|`EINVAL`|not modified|  \n|any|any|`NULL`|`EINVAL`|`strDestination`[0] set to 0|  \n|any|0, or too small|any|`ERANGE`|`strDestination`[0] set to 0|  \n  \n## Remarks  \n The `strcpy_s` function copies the contents in the address of `strSource`, including the terminating null character, to the location that's specified by `strDestination`. The destination string must be large enough to hold the source string and its terminating null character. The behavior of `strcpy_s` is undefined if the source and destination strings overlap.  \n  \n `wcscpy_s` is the wide-character version of `strcpy_s`, and `_mbscpy_s` is the multibyte-character version. The arguments and return value of `wcscpy_s` are wide-character strings; those of `_mbscpy_s` are multibyte-character strings. These three functions behave identically otherwise.  \n  \n If `strDestination` or `strSource` is a null pointer, or if the destination string is too small, the invalid parameter handler is invoked, as described in [Parameter Validation](../../c-runtime-library/parameter-validation.md). If execution is allowed to continue, these functions return `EINVAL` and set `errno` to `EINVAL` when `strDestination` or `strSource` is a null pointer, and they return `ERANGE` and set `errno` to `ERANGE` when the destination string is too small.  \n  \n Upon successful execution, the destination string is always null-terminated.  \n  \n In C++, use of these functions is simplified by template overloads that can infer buffer length automatically so that you don't have to specify a size argument, and they can automatically replace older, less-secure functions with their newer, more secure counterparts. For more information, see [Secure Template Overloads](../../c-runtime-library/secure-template-overloads.md).  \n  \n The debug versions of these functions first fill the buffer with 0xFE. To disable this behavior, use [_CrtSetDebugFillThreshold](../../c-runtime-library/reference/crtsetdebugfillthreshold.md).  \n  \n### Generic-Text Routine Mappings  \n  \n|TCHAR.H routine|_UNICODE & _MBCS not defined|_MBCS defined|_UNICODE defined|  \n|---------------------|------------------------------------|--------------------|-----------------------|  \n|`_tcscpy_s`|`strcpy_s`|`_mbscpy_s`|`wcscpy_s`|  \n  \n## Requirements  \n  \n|Routine|Required header|  \n|-------------|---------------------|  \n|`strcpy_s`|\\<string.h>|  \n|`wcscpy_s`|\\<string.h> or \\<wchar.h>|  \n|`_mbscpy_s`|\\<mbstring.h>|  \n  \n For additional compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md).  \n  \n## Example  \n  \n```  \n// crt_strcpy_s.cpp  \n// This program uses strcpy_s and strcat_s  \n// to build a phrase.  \n//  \n  \n#include <string.h>  \n#include <stdlib.h>  \n#include <stdio.h>  \n#include <errno.h>  \n  \nint main( void )  \n{  \n   char string[80];  \n   // using template versions of strcpy_s and strcat_s:  \n   strcpy_s( string, \"Hello world from \" );  \n   strcat_s( string, \"strcpy_s \" );  \n   strcat_s( string, \"and \" );  \n   // of course we can supply the size explicitly if we want to:  \n   strcat_s( string, _countof(string), \"strcat_s!\" );  \n  \n   printf( \"String = %s\\n\", string );  \n}  \n```  \n  \n```Output  \nString = Hello world from strcpy_s and strcat_s!  \n```  \n  \n## .NET Framework Equivalent  \n [System::String::Copy](https://msdn.microsoft.com/en-us/library/system.string.copy.aspx)  \n  \n## See Also  \n [String Manipulation](../../c-runtime-library/string-manipulation-crt.md)   \n [strcat, wcscat, _mbscat](../../c-runtime-library/reference/strcat-wcscat-mbscat.md)   \n [strcmp, wcscmp, _mbscmp](../../c-runtime-library/reference/strcmp-wcscmp-mbscmp.md)   \n [strncat_s, _strncat_s_l, wcsncat_s, _wcsncat_s_l, _mbsncat_s, _mbsncat_s_l](../../c-runtime-library/reference/strncat-s-strncat-s-l-wcsncat-s-wcsncat-s-l-mbsncat-s-mbsncat-s-l.md)   \n [strncmp, wcsncmp, _mbsncmp, _mbsncmp_l](../../c-runtime-library/reference/strncmp-wcsncmp-mbsncmp-mbsncmp-l.md)   \n [strncpy_s, _strncpy_s_l, wcsncpy_s, _wcsncpy_s_l, _mbsncpy_s, _mbsncpy_s_l](../../c-runtime-library/reference/strncpy-s-strncpy-s-l-wcsncpy-s-wcsncpy-s-l-mbsncpy-s-mbsncpy-s-l.md)   \n [_strnicmp, _wcsnicmp, _mbsnicmp, _strnicmp_l, _wcsnicmp_l, _mbsnicmp_l](../../c-runtime-library/reference/strnicmp-wcsnicmp-mbsnicmp-strnicmp-l-wcsnicmp-l-mbsnicmp-l.md)   \n [strrchr, wcsrchr, _mbsrchr, _mbsrchr_l](../../c-runtime-library/reference/strrchr-wcsrchr-mbsrchr-mbsrchr-l.md)   \n [strspn, wcsspn, _mbsspn, _mbsspn_l](../../c-runtime-library/reference/strspn-wcsspn-mbsspn-mbsspn-l.md)"}