{"nodes":[{"pos":[12,43],"content":"&lt;limits&gt; | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"limits<ph id=\"ph1\">&amp;gt;</ph> | Microsoft Docs","pos":[4,31],"source":"limits&gt; | Microsoft Docs"}]},{"content":"limits","pos":[665,671]},{"pos":[676,796],"content":"Defines the template class <ph id=\"ph1\">`numeric_limits`</ph> and two enumerations concerning floating-point representations and rounding.","source":"Defines the template class `numeric_limits` and two enumerations concerning floating-point representations and rounding."},{"content":"Syntax","pos":[805,811]},{"content":"Remarks","pos":[858,865]},{"content":"Explicit specializations of the <ph id=\"ph1\">`numeric_limits`</ph> class describe many properties of the fundamental types, including the character, integer, and floating-point types and <ph id=\"ph2\">`bool`</ph> that are implementation defined rather than fixed by the rules of the C++ language.","pos":[869,1128],"source":"Explicit specializations of the `numeric_limits` class describe many properties of the fundamental types, including the character, integer, and floating-point types and `bool` that are implementation defined rather than fixed by the rules of the C++ language."},{"content":"Properties described in <ph id=\"ph1\">\\&lt;</ph>limits&gt; include accuracy, minimum and maximum sized representations, rounding, and signaling type errors.","pos":[1129,1260],"source":" Properties described in \\<limits> include accuracy, minimum and maximum sized representations, rounding, and signaling type errors."},{"content":"Enumerations","pos":[1270,1282]},{"content":"float_denorm_style","pos":[1304,1322]},{"content":"The enumeration describes the various methods that an implementation can choose for representing a denormalized floating-point value — one too small to represent as a normalized value:","pos":[1392,1576]},{"content":"float_round_style","pos":[1582,1599]},{"content":"The enumeration describes the various methods that an implementation can choose for rounding a floating-point value to an integer value.","pos":[1668,1804]},{"content":"Classes","pos":[1815,1822]},{"content":"numeric_limits Class","pos":[1844,1864]},{"content":"The template class describes arithmetic properties of built-in numerical types.","pos":[1911,1990]},{"content":"See Also","pos":[2000,2008]},{"content":"Header Files Reference","pos":[2013,2035]},{"content":"Thread Safety in the C++ Standard Library","pos":[2100,2141]}],"content":"---\ntitle: \"&lt;limits&gt; | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"std.<limits>\"\n  - \"std::<limits>\"\n  - \"limits/std::<limits>\"\n  - \"<limits>\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"limits header\"\nms.assetid: e07d6379-5b00-4a3d-a789-40d41538b59e\ncaps.latest.revision: 18\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# &lt;limits&gt;\nDefines the template class `numeric_limits` and two enumerations concerning floating-point representations and rounding.  \n  \n## Syntax  \n  \n```  \n#include <limits>  \n  \n```  \n  \n## Remarks  \n Explicit specializations of the `numeric_limits` class describe many properties of the fundamental types, including the character, integer, and floating-point types and `bool` that are implementation defined rather than fixed by the rules of the C++ language. Properties described in \\<limits> include accuracy, minimum and maximum sized representations, rounding, and signaling type errors.  \n  \n### Enumerations  \n  \n|||  \n|-|-|  \n|[float_denorm_style](../standard-library/limits-enums.md#float_denorm_style_enumeration)|The enumeration describes the various methods that an implementation can choose for representing a denormalized floating-point value — one too small to represent as a normalized value:|  \n|[float_round_style](../standard-library/limits-enums.md#float_round_style_enumeration)|The enumeration describes the various methods that an implementation can choose for rounding a floating-point value to an integer value.|  \n  \n### Classes  \n  \n|||  \n|-|-|  \n|[numeric_limits Class](../standard-library/numeric-limits-class.md)|The template class describes arithmetic properties of built-in numerical types.|  \n  \n## See Also  \n [Header Files Reference](../standard-library/cpp-standard-library-header-files.md)   \n [Thread Safety in the C++ Standard Library](../standard-library/thread-safety-in-the-cpp-standard-library.md)\n\n\n\n"}