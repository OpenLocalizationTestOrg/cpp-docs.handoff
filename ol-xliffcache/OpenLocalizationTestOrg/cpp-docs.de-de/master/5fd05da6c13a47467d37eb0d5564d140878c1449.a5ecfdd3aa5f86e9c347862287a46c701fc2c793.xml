{"nodes":[{"pos":[12,54],"content":"CMenuTearOffManager Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"CMenuTearOffManager Class | Microsoft Docs","pos":[0,42]}]},{"content":"CMenuTearOffManager Class","pos":[631,656]},{"content":"Manages tear-off menus.","pos":[657,680]},{"content":"A tear-off menu is a menu on the menu bar.","pos":[681,723]},{"content":"The user can remove a tear-off menu from the menu bar, causing the tear-off menu to float.","pos":[724,814]},{"content":"Syntax","pos":[823,829]},{"content":"Members","pos":[898,905]},{"content":"Public Constructors","pos":[915,934]},{"content":"Name","pos":[941,945]},{"content":"Description","pos":[946,957]},{"content":"CMenuTearOffManager::CMenuTearOffManager","pos":[996,1036]},{"pos":[1081,1123],"content":"Constructs a <ph id=\"ph1\">`CMenuTearOffManager`</ph> object.","source":"Constructs a `CMenuTearOffManager` object."},{"content":"Public Methods","pos":[1134,1148]},{"content":"Name","pos":[1155,1159]},{"content":"Description","pos":[1160,1171]},{"content":"CMenuTearOffManager::Build","pos":[1210,1236]},{"content":"CMenuTearOffManager::GetRegPath","pos":[1273,1304]},{"content":"CMenuTearOffManager::Initialize","pos":[1346,1377]},{"pos":[1413,1456],"content":"Initializes a <ph id=\"ph1\">`CMenuTearOffManager`</ph> object.","source":"Initializes a `CMenuTearOffManager` object."},{"content":"CMenuTearOffManager::IsDynamicID","pos":[1462,1494]},{"content":"CMenuTearOffManager::Parse","pos":[1537,1563]},{"content":"CMenuTearOffManager::Reset","pos":[1600,1626]},{"content":"CMenuTearOffManager::SetInUse","pos":[1663,1692]},{"content":"CMenuTearOffManager::SetupTearOffMenus","pos":[1732,1770]},{"content":"Remarks","pos":[1823,1830]},{"content":"In order to use tear-off menus in your application, you must have a <ph id=\"ph1\">`CMenuTearOffManager`</ph> object.","pos":[1834,1931],"source":"In order to use tear-off menus in your application, you must have a `CMenuTearOffManager` object."},{"content":"In most cases, you won't create or initialize a <ph id=\"ph1\">`CMenuTearOffManager`</ph> object directly.","pos":[1932,2018],"source":" In most cases, you won't create or initialize a `CMenuTearOffManager` object directly."},{"content":"This is handled for you when you call the <bpt id=\"p1\">[</bpt>CWinAppEx::EnableTearOffMenus<ept id=\"p1\">](../../mfc/reference/cwinappex-class.md#cwinappex__enabletearoffmenus)</ept> function.","pos":[2019,2172],"source":" This is handled for you when you call the [CWinAppEx::EnableTearOffMenus](../../mfc/reference/cwinappex-class.md#cwinappex__enabletearoffmenus) function."},{"content":"Example","pos":[2181,2188]},{"content":"The following example demonstrates how to construct and initialize a <ph id=\"ph1\">`CMenuTearOffManager`</ph> object by calling the <ph id=\"ph2\">`CWinAppEX::EnableTearOffMenus`</ph> method.","pos":[2192,2344],"source":"The following example demonstrates how to construct and initialize a `CMenuTearOffManager` object by calling the `CWinAppEX::EnableTearOffMenus` method."},{"content":"This code snippet is part of the <bpt id=\"p1\">[</bpt>Word Pad sample<ept id=\"p1\">](../../visual-cpp-samples.md)</ept>.","pos":[2345,2425],"source":" This code snippet is part of the [Word Pad sample](../../visual-cpp-samples.md)."},{"pos":[2443,2461],"content":"NVC_MFC_WordPad#12"},{"content":"Inheritance Hierarchy","pos":[2541,2562]},{"content":"CObject","pos":[2567,2574]},{"content":"CMenuTearOffManager","pos":[2621,2640]},{"content":"Requirements","pos":[2700,2712]},{"pos":[2716,2751],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> afxmenutearoffmanager.h","source":"**Header:** afxmenutearoffmanager.h"},{"pos":[2804,2830],"content":"CMenuTearOffManager::Build"},{"content":"Parameters","pos":[3020,3030]},{"content":"[in]","pos":[3034,3038]},{"content":"[in]","pos":[3059,3063]},{"content":"Remarks","pos":[3083,3090]},{"pos":[3157,3197],"content":"CMenuTearOffManager::CMenuTearOffManager"},{"pos":[3201,3293],"content":"Constructs a <bpt id=\"p1\">[</bpt>CMenuTearOffManager<ept id=\"p1\">](../../mfc/reference/cmenutearoffmanager-class.md)</ept> object.","source":"Constructs a [CMenuTearOffManager](../../mfc/reference/cmenutearoffmanager-class.md) object."},{"content":"Remarks","pos":[3341,3348]},{"content":"In most cases, you should not create a <ph id=\"ph1\">`CMenuTearOffManager`</ph> manually.","pos":[3352,3422],"source":"In most cases, you should not create a `CMenuTearOffManager` manually."},{"content":"The framework of your application creates the <ph id=\"ph1\">`CMenuTearOffManager`</ph> object when you call <bpt id=\"p1\">[</bpt>CWinAppEx::EnableTearOffMenus<ept id=\"p1\">](../../mfc/reference/cwinappex-class.md#cwinappex__enabletearoffmenus)</ept>.","pos":[3423,3614],"source":" The framework of your application creates the `CMenuTearOffManager` object when you call [CWinAppEx::EnableTearOffMenus](../../mfc/reference/cwinappex-class.md#cwinappex__enabletearoffmenus)."},{"pos":[3672,3703],"content":"CMenuTearOffManager::GetRegPath"},{"content":"Return Value","pos":[3862,3874]},{"content":"Remarks","pos":[3884,3891]},{"pos":[3949,3980],"content":"CMenuTearOffManager::Initialize"},{"pos":[3984,4077],"content":"Initializes a <bpt id=\"p1\">[</bpt>CMenuTearOffManager<ept id=\"p1\">](../../mfc/reference/cmenutearoffmanager-class.md)</ept> object.","source":"Initializes a [CMenuTearOffManager](../../mfc/reference/cmenutearoffmanager-class.md) object."},{"content":"Parameters","pos":[4207,4217]},{"content":"[in]","pos":[4221,4225]},{"content":"A string that contains the path of a registry entry.","pos":[4244,4296]},{"content":"Your applications stores the settings for tear-off bars in this registry entry.","pos":[4297,4376]},{"content":"[in]","pos":[4383,4387]},{"content":"The first menu ID for a tear-off menu.","pos":[4412,4450]},{"content":"[in]","pos":[4457,4461]},{"content":"The last menu ID for a tear-off menu.","pos":[4485,4522]},{"content":"Return Value","pos":[4532,4544]},{"content":"Nonzero if successful; otherwise 0.","pos":[4548,4583]},{"content":"Remarks","pos":[4593,4600]},{"content":"The range of menu IDs from <ph id=\"ph1\">`uiTearOffMenuFirst`</ph> to <ph id=\"ph2\">`uiTearOffMenuLast`</ph> must be a continuous interval.","pos":[4604,4705],"source":"The range of menu IDs from `uiTearOffMenuFirst` to `uiTearOffMenuLast` must be a continuous interval."},{"content":"The interval defines the number of tear-off menus that can appear at the same time in the application.","pos":[4706,4808]},{"pos":[4867,4899],"content":"CMenuTearOffManager::IsDynamicID"},{"content":"Parameters","pos":[5065,5075]},{"pos":[5079,5083],"content":"[in]"},{"content":"Return Value","pos":[5100,5112]},{"content":"Remarks","pos":[5122,5129]},{"pos":[5182,5208],"content":"CMenuTearOffManager::Parse"},{"content":"Parameters","pos":[5362,5372]},{"pos":[5376,5380],"content":"[in]"},{"content":"Return Value","pos":[5396,5408]},{"content":"Remarks","pos":[5418,5425]},{"pos":[5478,5504],"content":"CMenuTearOffManager::Reset"},{"content":"Parameters","pos":[5657,5667]},{"pos":[5671,5675],"content":"[in]"},{"content":"Remarks","pos":[5693,5700]},{"pos":[5756,5785],"content":"CMenuTearOffManager::SetInUse"},{"content":"Parameters","pos":[5971,5981]},{"content":"[in]","pos":[5985,5989]},{"content":"[in]","pos":[6003,6007]},{"content":"Remarks","pos":[6024,6031]},{"pos":[6096,6134],"content":"CMenuTearOffManager::SetupTearOffMenus"},{"content":"Parameters","pos":[6299,6309]},{"pos":[6313,6317],"content":"[in]"},{"content":"Remarks","pos":[6335,6342]},{"content":"See Also","pos":[6351,6359]},{"content":"Hierarchy Chart","pos":[6364,6379]},{"content":"Classes","pos":[6416,6423]},{"content":"CWinAppEx Class","pos":[6466,6481]}],"content":"---\ntitle: \"CMenuTearOffManager Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"CMenuTearOffManager\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"CMenuTearOffManager class\"\nms.assetid: ab7ca272-ce42-4678-95f7-6ad75038f5a0\ncaps.latest.revision: 31\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# CMenuTearOffManager Class\nManages tear-off menus. A tear-off menu is a menu on the menu bar. The user can remove a tear-off menu from the menu bar, causing the tear-off menu to float.  \n  \n## Syntax  \n  \n```  \nclass CMenuTearOffManager : public CObject  \n```  \n  \n## Members  \n  \n### Public Constructors  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CMenuTearOffManager::CMenuTearOffManager](#cmenutearoffmanager__cmenutearoffmanager)|Constructs a `CMenuTearOffManager` object.|  \n  \n### Public Methods  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CMenuTearOffManager::Build](#cmenutearoffmanager__build)||  \n|[CMenuTearOffManager::GetRegPath](#cmenutearoffmanager__getregpath)||  \n|[CMenuTearOffManager::Initialize](#cmenutearoffmanager__initialize)|Initializes a `CMenuTearOffManager` object.|  \n|[CMenuTearOffManager::IsDynamicID](#cmenutearoffmanager__isdynamicid)||  \n|[CMenuTearOffManager::Parse](#cmenutearoffmanager__parse)||  \n|[CMenuTearOffManager::Reset](#cmenutearoffmanager__reset)||  \n|[CMenuTearOffManager::SetInUse](#cmenutearoffmanager__setinuse)||  \n|[CMenuTearOffManager::SetupTearOffMenus](#cmenutearoffmanager__setuptearoffmenus)||  \n  \n## Remarks  \n In order to use tear-off menus in your application, you must have a `CMenuTearOffManager` object. In most cases, you won't create or initialize a `CMenuTearOffManager` object directly. This is handled for you when you call the [CWinAppEx::EnableTearOffMenus](../../mfc/reference/cwinappex-class.md#cwinappex__enabletearoffmenus) function.  \n  \n## Example  \n The following example demonstrates how to construct and initialize a `CMenuTearOffManager` object by calling the `CWinAppEX::EnableTearOffMenus` method. This code snippet is part of the [Word Pad sample](../../visual-cpp-samples.md).  \n  \n [!code-cpp[NVC_MFC_WordPad#12](../../mfc/reference/codesnippet/cpp/cmenutearoffmanager-class_1.cpp)]  \n  \n## Inheritance Hierarchy  \n [CObject](../../mfc/reference/cobject-class.md)  \n  \n [CMenuTearOffManager](../../mfc/reference/cmenutearoffmanager-class.md)  \n  \n## Requirements  \n **Header:** afxmenutearoffmanager.h  \n  \n##  <a name=\"cmenutearoffmanager__build\"></a>  CMenuTearOffManager::Build  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvoid Build(\n    UINT uiTearOffBarID,  \n    CString& strText);\n```  \n  \n### Parameters  \n [in] `uiTearOffBarID`  \n [in] `strText`  \n  \n### Remarks  \n  \n##  <a name=\"cmenutearoffmanager__cmenutearoffmanager\"></a>  CMenuTearOffManager::CMenuTearOffManager  \n Constructs a [CMenuTearOffManager](../../mfc/reference/cmenutearoffmanager-class.md) object.  \n  \n```  \nCMenuTearOffManager();\n```  \n  \n### Remarks  \n In most cases, you should not create a `CMenuTearOffManager` manually. The framework of your application creates the `CMenuTearOffManager` object when you call [CWinAppEx::EnableTearOffMenus](../../mfc/reference/cwinappex-class.md#cwinappex__enabletearoffmenus).  \n  \n##  <a name=\"cmenutearoffmanager__getregpath\"></a>  CMenuTearOffManager::GetRegPath  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nLPCTSTR GetRegPath() const;\n\n \n```  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cmenutearoffmanager__initialize\"></a>  CMenuTearOffManager::Initialize  \n Initializes a [CMenuTearOffManager](../../mfc/reference/cmenutearoffmanager-class.md) object.  \n  \n```  \nBOOL Initialize(\n    LPCTSTR lpszRegEntry,  \n    UINT uiTearOffMenuFirst,  \n    UINT uiTearOffMenuLast);\n```  \n  \n### Parameters  \n [in] `lpszRegEntry`  \n A string that contains the path of a registry entry. Your applications stores the settings for tear-off bars in this registry entry.  \n  \n [in] `uiTearOffMenuFirst`  \n The first menu ID for a tear-off menu.  \n  \n [in] `uiTearOffMenuLast`  \n The last menu ID for a tear-off menu.  \n  \n### Return Value  \n Nonzero if successful; otherwise 0.  \n  \n### Remarks  \n The range of menu IDs from `uiTearOffMenuFirst` to `uiTearOffMenuLast` must be a continuous interval. The interval defines the number of tear-off menus that can appear at the same time in the application.  \n  \n##  <a name=\"cmenutearoffmanager__isdynamicid\"></a>  CMenuTearOffManager::IsDynamicID  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nBOOL IsDynamicID(UINT uiID) const;\n\n \n```  \n  \n### Parameters  \n [in] `uiID`  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cmenutearoffmanager__parse\"></a>  CMenuTearOffManager::Parse  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nUINT Parse(CString& str);\n```  \n  \n### Parameters  \n [in] `str`  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cmenutearoffmanager__reset\"></a>  CMenuTearOffManager::Reset  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvoid Reset(HMENU hmenu);\n```  \n  \n### Parameters  \n [in] `hmenu`  \n  \n### Remarks  \n  \n##  <a name=\"cmenutearoffmanager__setinuse\"></a>  CMenuTearOffManager::SetInUse  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvoid SetInUse(\n    UINT uiCmdId,  \n    BOOL bUse = TRUE);\n```  \n  \n### Parameters  \n [in] `uiCmdId`  \n [in] `bUse`  \n  \n### Remarks  \n  \n##  <a name=\"cmenutearoffmanager__setuptearoffmenus\"></a>  CMenuTearOffManager::SetupTearOffMenus  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvoid SetupTearOffMenus(HMENU hMenu);\n```  \n  \n### Parameters  \n [in] `hMenu`  \n  \n### Remarks  \n  \n## See Also  \n [Hierarchy Chart](../../mfc/hierarchy-chart.md)   \n [Classes](../../mfc/reference/mfc-classes.md)   \n [CWinAppEx Class](../../mfc/reference/cwinappex-class.md)\n"}