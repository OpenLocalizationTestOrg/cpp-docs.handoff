{"nodes":[{"pos":[12,57],"content":"&lt;seealso&gt; (Visual C++) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"seealso<ph id=\"ph1\">&amp;gt;</ph> (Visual C++) | Microsoft Docs","pos":[4,45],"source":"seealso&gt; (Visual C++) | Microsoft Docs"}]},{"content":"seealso<ph id=\"ph1\">&amp;gt;</ph> (Visual C++)","pos":[662,686],"source":"seealso&gt; (Visual C++)"},{"content":"The <ph id=\"ph1\">\\&lt;</ph>seealso&gt; tag lets you specify the text that you might want to appear in a See Also section.","pos":[687,784],"source":"The \\<seealso> tag lets you specify the text that you might want to appear in a See Also section."},{"content":"Use <bpt id=\"p1\">[</bpt><ph id=\"ph1\">\\&lt;</ph>see&gt;<ept id=\"p1\">](../ide/see-visual-cpp.md)</ept> to specify a link from within text.","pos":[785,859],"source":" Use [\\<see>](../ide/see-visual-cpp.md) to specify a link from within text."},{"content":"Syntax","pos":[868,874]},{"content":"Parameters","pos":[927,937]},{"content":"A reference to a member or field that is available to be called from the current compilation environment.","pos":[953,1058]},{"content":"Enclose the name in single or double quotation marks.","pos":[1060,1113]},{"content":"The compiler checks that the given code element exists and resolves <ph id=\"ph1\">`member`</ph> to the element name in the output XML.","pos":[1120,1235],"source":"The compiler checks that the given code element exists and resolves `member` to the element name in the output XML."},{"content":"The compiler issues a warning if it does not find <ph id=\"ph1\">`member`</ph>.","pos":[1237,1296],"source":"  The compiler issues a warning if it does not find `member`."},{"pos":[1303,1411],"content":"For information on how to create a cref reference to a generic type, see <bpt id=\"p1\">[</bpt><ph id=\"ph1\">\\&lt;</ph>see&gt;<ept id=\"p1\">](../ide/see-visual-cpp.md)</ept>.","source":"For information on how to create a cref reference to a generic type, see [\\<see>](../ide/see-visual-cpp.md)."},{"content":"Remarks","pos":[1420,1427]},{"pos":[1431,1559],"content":"Compile with <bpt id=\"p1\">[</bpt>/doc<ept id=\"p1\">](../build/reference/doc-process-documentation-comments-c-cpp.md)</ept> to process documentation comments to a file.","source":"Compile with [/doc](../build/reference/doc-process-documentation-comments-c-cpp.md) to process documentation comments to a file."},{"pos":[1566,1648],"content":"See <bpt id=\"p1\">[</bpt><ph id=\"ph1\">\\&lt;</ph>summary&gt;<ept id=\"p1\">](../ide/summary-visual-cpp.md)</ept> for an example of using <ph id=\"ph2\">\\&lt;</ph>seealso&gt;.","source":"See [\\<summary>](../ide/summary-visual-cpp.md) for an example of using \\<seealso>."},{"content":"The Visual C++ compiler will attempt to resolve cref references in one pass through the documentation comments.","pos":[1655,1766]},{"content":"Therefore, if using the C++ lookup rules, a symbol is not found by the compiler the reference will be marked as unresolved.","pos":[1768,1891]},{"content":"Example","pos":[1900,1907]},{"content":"In the following sample, an unresolved symbol is referenced in a cref.","pos":[1911,1981]},{"content":"The XML comment for the cref to B::Test will be <ph id=\"ph1\">`&lt;seealso cref=\"!:B::Test\" /&gt;`</ph>, whereas the reference to A::Test is well-formed <ph id=\"ph2\">`&lt;seealso cref=\"M:A.Test\" /&gt;`</ph>.","pos":[1982,2140],"source":" The XML comment for the cref to B::Test will be `<seealso cref=\"!:B::Test\" />`, whereas the reference to A::Test is well-formed `<seealso cref=\"M:A.Test\" />`."},{"content":"See Also","pos":[2575,2583]},{"content":"XML Documentation","pos":[2588,2605]}],"content":"---\ntitle: \"&lt;seealso&gt; (Visual C++) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"<seealso>\"\n  - \"seealso\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"seealso C++ XML tag\"\n  - \"<seealso> C++ XML tag\"\nms.assetid: cb33d100-9c50-4485-8d0c-573429eff155\ncaps.latest.revision: 11\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# &lt;seealso&gt; (Visual C++)\nThe \\<seealso> tag lets you specify the text that you might want to appear in a See Also section. Use [\\<see>](../ide/see-visual-cpp.md) to specify a link from within text.  \n  \n## Syntax  \n  \n```  \n<seealso cref=\"member\"/>  \n```  \n  \n#### Parameters  \n `member`  \n A reference to a member or field that is available to be called from the current compilation environment.  Enclose the name in single or double quotation marks.  \n  \n The compiler checks that the given code element exists and resolves `member` to the element name in the output XML.  The compiler issues a warning if it does not find `member`.  \n  \n For information on how to create a cref reference to a generic type, see [\\<see>](../ide/see-visual-cpp.md).  \n  \n## Remarks  \n Compile with [/doc](../build/reference/doc-process-documentation-comments-c-cpp.md) to process documentation comments to a file.  \n  \n See [\\<summary>](../ide/summary-visual-cpp.md) for an example of using \\<seealso>.  \n  \n The Visual C++ compiler will attempt to resolve cref references in one pass through the documentation comments.  Therefore, if using the C++ lookup rules, a symbol is not found by the compiler the reference will be marked as unresolved.  \n  \n## Example  \n In the following sample, an unresolved symbol is referenced in a cref. The XML comment for the cref to B::Test will be `<seealso cref=\"!:B::Test\" />`, whereas the reference to A::Test is well-formed `<seealso cref=\"M:A.Test\" />`.  \n  \n```  \n// xml_seealso_tag.cpp  \n// compile with: /LD /clr /doc  \n// post-build command: xdcmake xml_seealso_tag.dll  \n  \n/// Text for class A.  \npublic ref struct A {  \n   /// <summary><seealso cref=\"A::Test\"/>  \n   /// <seealso cref=\"B::Test\"/>  \n   /// </summary>  \n   void MyMethod(int Int1) {}  \n  \n   /// text  \n   void Test() {}  \n};  \n  \n/// Text for class B.  \npublic ref struct B {  \n   void Test() {}  \n};  \n```  \n  \n## See Also  \n [XML Documentation](../ide/xml-documentation-visual-cpp.md)"}