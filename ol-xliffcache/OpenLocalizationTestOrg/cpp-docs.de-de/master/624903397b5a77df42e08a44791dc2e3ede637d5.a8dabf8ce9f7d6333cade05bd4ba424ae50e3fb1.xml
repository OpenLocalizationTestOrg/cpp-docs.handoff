{"nodes":[{"pos":[12,33],"content":"UNIX | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"UNIX | Microsoft Docs","pos":[0,21]}]},{"content":"UNIX","pos":[654,658]},{"content":"If you plan to port your programs to UNIX, follow these guidelines:","pos":[659,726]},{"content":"Do not remove header files from the SYS subdirectory.","pos":[736,789]},{"content":"You can place the SYS header files elsewhere only if you do not plan to transport your programs to UNIX.","pos":[790,894]},{"content":"Use the UNIX-compatible path delimiter in routines that take strings representing paths and filenames as arguments.","pos":[904,1019]},{"content":"UNIX supports only the forward slash (/) for this purpose, whereas Win32 operating systems support both the backslash (<ph id=\"ph1\">\\\\</ph>) and the forward slash (/).","pos":[1020,1169],"source":" UNIX supports only the forward slash (/) for this purpose, whereas Win32 operating systems support both the backslash (\\\\) and the forward slash (/)."},{"content":"Thus this documentation uses UNIX-compatible forward slashes as path delimiters in <ph id=\"ph1\">`#include`</ph> statements, for example.","pos":[1170,1288],"source":" Thus this documentation uses UNIX-compatible forward slashes as path delimiters in `#include` statements, for example."},{"content":"(However, the Windows operating system command shell, CMD.EXE, does not support the forward slash in commands entered at the command prompt.)","pos":[1289,1430]},{"content":"Use paths and filenames that work correctly in UNIX, which is case sensitive.","pos":[1440,1517]},{"content":"The file allocation table (FAT) file system in Win32 operating systems is not case sensitive; the NTFS file system preserves case for directory listings but ignores case in file searches and other system operations.","pos":[1518,1733]},{"pos":[1745,1870],"content":"[!NOTE]\n In this version of Visual C++, UNIX compatibility information has been removed from the function descriptions.","leadings":["","    > "],"nodes":[{"content":"In this version of Visual C++, UNIX compatibility information has been removed from the function descriptions.","pos":[9,119]}]},{"content":"See Also","pos":[1879,1887]},{"content":"Compatibility","pos":[1892,1905]}],"content":"---\ntitle: \"UNIX | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"unix\"\ndev_langs: \n  - \"C++\"\n  - \"C\"\nhelpviewer_keywords: \n  - \"UNIX\"\n  - \"POSIX compatibility\"\n  - \"POSIX file names\"\n  - \"UNIX, compatibility\"\nms.assetid: 40792414-7a5b-415d-bfa8-2bfb1ebb3731\ncaps.latest.revision: 7\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# UNIX\nIf you plan to port your programs to UNIX, follow these guidelines:  \n  \n-   Do not remove header files from the SYS subdirectory. You can place the SYS header files elsewhere only if you do not plan to transport your programs to UNIX.  \n  \n-   Use the UNIX-compatible path delimiter in routines that take strings representing paths and filenames as arguments. UNIX supports only the forward slash (/) for this purpose, whereas Win32 operating systems support both the backslash (\\\\) and the forward slash (/). Thus this documentation uses UNIX-compatible forward slashes as path delimiters in `#include` statements, for example. (However, the Windows operating system command shell, CMD.EXE, does not support the forward slash in commands entered at the command prompt.)  \n  \n-   Use paths and filenames that work correctly in UNIX, which is case sensitive. The file allocation table (FAT) file system in Win32 operating systems is not case sensitive; the NTFS file system preserves case for directory listings but ignores case in file searches and other system operations.  \n  \n    > [!NOTE]\n    >  In this version of Visual C++, UNIX compatibility information has been removed from the function descriptions.  \n  \n## See Also  \n [Compatibility](../c-runtime-library/compatibility.md)"}