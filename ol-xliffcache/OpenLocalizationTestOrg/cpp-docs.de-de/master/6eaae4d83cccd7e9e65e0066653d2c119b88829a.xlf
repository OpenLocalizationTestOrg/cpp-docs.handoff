<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-04506c2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6eaae4d83cccd7e9e65e0066653d2c119b88829a</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\c-runtime-library\reference\strpbrk-wcspbrk-mbspbrk-mbspbrk-l.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9b88298d126d1bc17a1bf0cc1cbff544a3aa23e5</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b6693b1b8cc3902098fa0e60d7992c3913febe16</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>strpbrk, wcspbrk, _mbspbrk, _mbspbrk_l | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>strpbrk, wcspbrk, _mbspbrk, _mbspbrk_l</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Scans strings for characters in specified character sets.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>and <ph id="ph1">`_mbspbrk_l`</ph> cannot be used in applications that execute in the Windows Runtime.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>CRT functions not supported with /ZW<ept id="p1">](http://msdn.microsoft.com/library/windows/apps/jj606124.aspx)</ept>.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Null-terminated, searched string.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Null-terminated character set.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Locale to use.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Returns a pointer to the first occurrence of any character from <ph id="ph1">`strCharSet`</ph> in <ph id="ph2">`str`</ph>, or a <ph id="ph3">`NULL`</ph> pointer if the two string arguments have no characters in common.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`strpbrk`</ph> function returns a pointer to the first occurrence of a character in <ph id="ph2">`str`</ph> that belongs to the set of characters in <ph id="ph3">`strCharSet`</ph>.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The search does not include the terminating null character.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>and <ph id="ph1">`_mbspbrk`</ph> are wide-character and multibyte-character versions of <ph id="ph2">`strpbrk`</ph>.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The arguments and return value of <ph id="ph1">`wcspbrk`</ph> are wide-character strings; those of <ph id="ph2">`_mbspbrk`</ph> are multibyte-character strings.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>validates its parameters.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`str`</ph> or <ph id="ph2">`strCharSet`</ph> is <ph id="ph3">`NULL`</ph>, the invalid parameter handler is invoked, as described in <bpt id="p1">[</bpt>Parameter Validation<ept id="p1">](../../c-runtime-library/parameter-validation.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>If execution is allowed to continue, <ph id="ph1">`_mbspbrk`</ph> returns <ph id="ph2">`NULL`</ph> and sets <ph id="ph3">`errno`</ph> to <ph id="ph4">`EINVAL`</ph>.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>and <ph id="ph1">`wcspbrk`</ph> do not validate their parameters.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>These three functions behave identically otherwise.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>is similar to <ph id="ph1">`_mbscspn`</ph> except that <ph id="ph2">`_mbspbrk`</ph> returns a pointer rather than a value of type <bpt id="p1">[</bpt>size_t<ept id="p1">](../../c-runtime-library/standard-types.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>In C, these functions take a <ph id="ph1">`const`</ph> pointer for the first argument.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>In C++, two overloads are available.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The overload taking a pointer to <ph id="ph1">`const`</ph> returns a pointer to <ph id="ph2">`const`</ph>; the version that takes a pointer to non-<ph id="ph3">`const`</ph> returns a pointer to non-<ph id="ph4">`const`</ph>.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The macro _CONST_CORRECT_OVERLOADS is defined if both the <ph id="ph1">`const`</ph> and non-<ph id="ph2">`const`</ph> versions of these functions are available.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>If you require the non-<ph id="ph1">`const`</ph> behavior for both C++ overloads, define the symbol _CONST_RETURN.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The output value is affected by the setting of the <ph id="ph1">`LC_CTYPE`</ph> category setting of the locale; for more information, see <bpt id="p1">[</bpt>setlocale<ept id="p1">](../../c-runtime-library/reference/setlocale-wsetlocale.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The versions of these functions without the <ph id="ph1">`_l`</ph> suffix use the current locale for this locale-dependent behavior; the version with the <ph id="ph2">`_l`</ph> suffix is identical except that it uses the locale parameter passed in instead.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Locale<ept id="p1">](../../c-runtime-library/locale.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Generic-Text Routine Mappings</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>TCHAR.H routine</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>_UNICODE &amp; _MBCS not defined</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>_MBCS defined</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>_UNICODE defined</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>n/a</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>n/a</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>n/a</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Requirements</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Routine</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Required header</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>string.h&gt;</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>string.h&gt; or <ph id="ph1">\&lt;</ph>wchar.h&gt;</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>,</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>mbstring.h&gt;</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>For more information about compatibility, see <bpt id="p1">[</bpt>Compatibility<ept id="p1">](../../c-runtime-library/compatibility.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>.NET Framework Equivalent</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>System::String::IndexOfAny</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>String Manipulation</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Locale</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Interpretation of Multibyte-Character Sequences</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>strcspn, wcscspn, _mbscspn, _mbscspn_l</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>strchr, wcschr, _mbschr, _mbschr_l</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>strrchr, wcsrchr, _mbsrchr, _mbsrchr_l</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>