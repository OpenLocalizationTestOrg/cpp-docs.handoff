{"nodes":[{"pos":[12,46],"content":"_RTC_SetErrorType | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"_RTC_SetErrorType | Microsoft Docs","pos":[0,34]}]},{"content":"_RTC_SetErrorType","pos":[984,1001]},{"content":"Associates an error that is detected by run-time error checks (RTCs) with a type.","pos":[1002,1083]},{"content":"Your error handler processes how to output errors of the specified type.","pos":[1084,1156]},{"content":"Syntax","pos":[1165,1171]},{"content":"Parameters","pos":[1284,1294]},{"content":"errnum","pos":[1299,1305]},{"content":"A number between zero and one less than the value returned by <bpt id=\"p1\">[</bpt>_RTC_NumErrors<ept id=\"p1\">](../../c-runtime-library/reference/rtc-numerrors.md)</ept>.","pos":[1310,1441],"source":" A number between zero and one less than the value returned by [_RTC_NumErrors](../../c-runtime-library/reference/rtc-numerrors.md)."},{"content":"ErrType","pos":[1449,1456]},{"content":"A value to assign to this <bpt id=\"p1\">*</bpt>errnum<ept id=\"p1\">*</ept>.","pos":[1461,1496],"source":" A value to assign to this *errnum*."},{"content":"For example, you might use <bpt id=\"p1\">**</bpt>_CRT_ERROR<ept id=\"p1\">**</ept>.","pos":[1497,1539],"source":" For example, you might use **_CRT_ERROR**."},{"content":"If you are using <ph id=\"ph1\">`_CrtDbgReport`</ph> as your error handler, <bpt id=\"p1\">*</bpt>ErrType<ept id=\"p1\">*</ept> can only be one of the symbols defined in <bpt id=\"p2\">[</bpt>_CrtSetReportMode<ept id=\"p2\">](../../c-runtime-library/reference/crtsetreportmode.md)</ept>.","pos":[1540,1723],"source":" If you are using `_CrtDbgReport` as your error handler, *ErrType* can only be one of the symbols defined in [_CrtSetReportMode](../../c-runtime-library/reference/crtsetreportmode.md)."},{"content":"If you have your own error handler (<bpt id=\"p1\">[</bpt>_RTC_SetErrorFunc<ept id=\"p1\">](../../c-runtime-library/reference/rtc-seterrorfunc.md)</ept>), you can have as many <bpt id=\"p2\">*</bpt>ErrType<ept id=\"p2\">*</ept>s as there are <bpt id=\"p3\">*</bpt>errnum<ept id=\"p3\">*</ept>s.","pos":[1724,1892],"source":" If you have your own error handler ([_RTC_SetErrorFunc](../../c-runtime-library/reference/rtc-seterrorfunc.md)), you can have as many *ErrType*s as there are *errnum*s."},{"pos":[1899,2000],"content":"An <bpt id=\"p1\">*</bpt>ErrType<ept id=\"p1\">*</ept> of _RTC_ERRTYPE_IGNORE has special meaning to <ph id=\"ph1\">`_CrtSetReportMode`</ph>; the error is ignored.","source":"An *ErrType* of _RTC_ERRTYPE_IGNORE has special meaning to `_CrtSetReportMode`; the error is ignored."},{"content":"Return Value","pos":[2009,2021]},{"pos":[2025,2070],"content":"The previous value for the error type <ph id=\"ph1\">`type`</ph>.","source":"The previous value for the error type `type`."},{"content":"Remarks","pos":[2079,2086]},{"content":"By default, all errors are set to <bpt id=\"p1\">*</bpt>ErrType<ept id=\"p1\">*</ept> = 1, which corresponds to <bpt id=\"p2\">**</bpt>_CRT_ERROR<ept id=\"p2\">**</ept>.","pos":[2090,2175],"source":"By default, all errors are set to *ErrType* = 1, which corresponds to **_CRT_ERROR**."},{"content":"For more information about the default error types such as <bpt id=\"p1\">**</bpt>_CRT_ERROR<ept id=\"p1\">**</ept>, see <bpt id=\"p2\">[</bpt>_CrtDbgReport<ept id=\"p2\">](../../c-runtime-library/reference/crtdbgreport-crtdbgreportw.md)</ept>.","pos":[2176,2336],"source":" For more information about the default error types such as **_CRT_ERROR**, see [_CrtDbgReport](../../c-runtime-library/reference/crtdbgreport-crtdbgreportw.md)."},{"pos":[2343,2591],"content":"Before you can call this function, you must first call one of the run-time error check initialization functions; see <bpt id=\"p1\">[</bpt>Using Run-Time Checks without the C Run-Time Library<ept id=\"p1\">](/visualstudio/debugger/using-run-time-checks-without-the-c-run-time-library)</ept>","source":"Before you can call this function, you must first call one of the run-time error check initialization functions; see [Using Run-Time Checks without the C Run-Time Library](/visualstudio/debugger/using-run-time-checks-without-the-c-run-time-library)"},{"content":"Requirements","pos":[2600,2612]},{"content":"Routine","pos":[2619,2626]},{"content":"Required header","pos":[2627,2642]},{"content":"rtcapi.h&gt;","pos":[2709,2718],"source":"rtcapi.h>"},{"pos":[2726,2810],"content":"For more information, see <bpt id=\"p1\">[</bpt>Compatibility<ept id=\"p1\">](../../c-runtime-library/compatibility.md)</ept>.","source":"For more information, see [Compatibility](../../c-runtime-library/compatibility.md)."},{"content":"Libraries","pos":[2819,2828]},{"pos":[2832,2924],"content":"All versions of the <bpt id=\"p1\">[</bpt>C run-time libraries<ept id=\"p1\">](../../c-runtime-library/crt-library-features.md)</ept>.","source":"All versions of the [C run-time libraries](../../c-runtime-library/crt-library-features.md)."},{"content":".NET Framework Equivalent","pos":[2933,2958]},{"content":"Not applicable.","pos":[2962,2977]},{"content":"To call the standard C function, use <ph id=\"ph1\">`PInvoke`</ph>.","pos":[2978,3025],"source":" To call the standard C function, use `PInvoke`."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Platform Invoke Examples<ept id=\"p1\">](http://msdn.microsoft.com/Library/15926806-f0b7-487e-93a6-4e9367ec689f)</ept>.","pos":[3026,3151],"source":" For more information, see [Platform Invoke Examples](http://msdn.microsoft.com/Library/15926806-f0b7-487e-93a6-4e9367ec689f)."},{"content":"See Also","pos":[3160,3168]},{"content":"_RTC_GetErrDesc","pos":[3173,3188]},{"content":"Run-Time Error Checking","pos":[3248,3271]}],"content":"---\ntitle: \"_RTC_SetErrorType | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\napiname: \n  - \"_RTC_SetErrorType\"\napilocation: \n  - \"msvcrt.dll\"\n  - \"msvcr80.dll\"\n  - \"msvcr90.dll\"\n  - \"msvcr100.dll\"\n  - \"msvcr100_clr0400.dll\"\n  - \"msvcr110.dll\"\n  - \"msvcr110_clr0400.dll\"\n  - \"msvcr120.dll\"\n  - \"msvcr120_clr0400.dll\"\n  - \"ucrtbase.dll\"\napitype: \"DLLExport\"\nf1_keywords: \n  - \"RTC_SetErrorType\"\n  - \"_RTC_SetErrorType\"\ndev_langs: \n  - \"C++\"\n  - \"C\"\nhelpviewer_keywords: \n  - \"run-time errors\"\n  - \"RTC_SetErrorType function\"\n  - \"_RTC_SetErrorType function\"\nms.assetid: f5f99be7-d357-4b11-b8f5-ddd3428f2b06\ncaps.latest.revision: 13\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# _RTC_SetErrorType\nAssociates an error that is detected by run-time error checks (RTCs) with a type. Your error handler processes how to output errors of the specified type.  \n  \n## Syntax  \n  \n```  \n  \n      int _RTC_SetErrorType(  \n   _RTC_ErrorNumber errnum,  \n   int ErrType   \n);  \n```  \n  \n#### Parameters  \n *errnum*  \n A number between zero and one less than the value returned by [_RTC_NumErrors](../../c-runtime-library/reference/rtc-numerrors.md).  \n  \n *ErrType*  \n A value to assign to this *errnum*. For example, you might use **_CRT_ERROR**. If you are using `_CrtDbgReport` as your error handler, *ErrType* can only be one of the symbols defined in [_CrtSetReportMode](../../c-runtime-library/reference/crtsetreportmode.md). If you have your own error handler ([_RTC_SetErrorFunc](../../c-runtime-library/reference/rtc-seterrorfunc.md)), you can have as many *ErrType*s as there are *errnum*s.  \n  \n An *ErrType* of _RTC_ERRTYPE_IGNORE has special meaning to `_CrtSetReportMode`; the error is ignored.  \n  \n## Return Value  \n The previous value for the error type `type`.  \n  \n## Remarks  \n By default, all errors are set to *ErrType* = 1, which corresponds to **_CRT_ERROR**. For more information about the default error types such as **_CRT_ERROR**, see [_CrtDbgReport](../../c-runtime-library/reference/crtdbgreport-crtdbgreportw.md).  \n  \n Before you can call this function, you must first call one of the run-time error check initialization functions; see [Using Run-Time Checks without the C Run-Time Library](/visualstudio/debugger/using-run-time-checks-without-the-c-run-time-library)  \n  \n## Requirements  \n  \n|Routine|Required header|  \n|-------------|---------------------|  \n|`_RTC_SetErrorType`|\\<rtcapi.h>|  \n  \n For more information, see [Compatibility](../../c-runtime-library/compatibility.md).  \n  \n## Libraries  \n All versions of the [C run-time libraries](../../c-runtime-library/crt-library-features.md).  \n  \n## .NET Framework Equivalent  \n Not applicable. To call the standard C function, use `PInvoke`. For more information, see [Platform Invoke Examples](http://msdn.microsoft.com/Library/15926806-f0b7-487e-93a6-4e9367ec689f).  \n  \n## See Also  \n [_RTC_GetErrDesc](../../c-runtime-library/reference/rtc-geterrdesc.md)   \n [Run-Time Error Checking](../../c-runtime-library/run-time-error-checking.md)"}