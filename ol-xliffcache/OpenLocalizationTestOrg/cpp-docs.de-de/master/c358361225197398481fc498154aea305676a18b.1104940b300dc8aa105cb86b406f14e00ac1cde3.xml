{"nodes":[{"pos":[12,55],"content":"add_lvalue_reference Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"add_lvalue_reference Class | Microsoft Docs","pos":[0,43]}]},{"content":"add_lvalue_reference Class","pos":[733,759]},{"content":"Makes reference to type from type.","pos":[760,794]},{"content":"Syntax","pos":[803,809]},{"content":"Parameters","pos":[983,993]},{"content":"The type to modify.","pos":[1004,1023]},{"content":"Remarks","pos":[1032,1039]},{"pos":[1043,1156],"content":"An instance of the type modifier holds a modified-type that is <ph id=\"ph1\">`T`</ph> if <ph id=\"ph2\">`T`</ph> is an lvalue reference, otherwise <ph id=\"ph3\">`T&amp;`</ph>.","source":"An instance of the type modifier holds a modified-type that is `T` if `T` is an lvalue reference, otherwise `T&`."},{"content":"Example","pos":[1165,1172]},{"content":"Requirements","pos":[1573,1585]},{"pos":[1589,1614],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> &lt;type_traits&gt;","source":"**Header:** <type_traits>"},{"pos":[1621,1639],"content":"<bpt id=\"p1\">**</bpt>Namespace:<ept id=\"p1\">**</ept> std","source":"**Namespace:** std"},{"content":"See Also","pos":[1648,1656]},{"content":"&lt;type_traits&gt;","pos":[1661,1674],"source":"<type_traits>"},{"content":"remove_reference Class","pos":[1717,1739]}],"content":"---\ntitle: \"add_lvalue_reference Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"std::add_lvalue_reference\"\n  - \"add_lvalue_reference\"\n  - \"type_traits/std::add_lvalue_reference\"\n  - \"std.add_lvalue_reference\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"add_lvalue_reference\"\nms.assetid: 9933afc2-ad0d-465d-98fe-7d547fa3efe2\ncaps.latest.revision: 21\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# add_lvalue_reference Class\nMakes reference to type from type.  \n  \n## Syntax  \n  \n```  \ntemplate <class T>  \nstruct add_lvalue_reference;  \n \ntemplate <class T>  \nusing add_lvalue_reference_t = typename add_lvalue_reference<T>::type;  \n```  \n  \n#### Parameters  \n `T`  \n The type to modify.  \n  \n## Remarks  \n An instance of the type modifier holds a modified-type that is `T` if `T` is an lvalue reference, otherwise `T&`.  \n  \n## Example  \n  \n```cpp  \n#include <type_traits>   \n#include <iostream>   \n  \nusing namespace std;  \nint main()  \n{  \n    int val = 0;  \n    add_lvalue_reference_t<int> p = (int&)val;  \n    p = p;  // to quiet \"unused\" warning   \n    cout << \"add_lvalue_reference_t<int> == \"  \n        << typeid(p).name() << endl;  \n  \n    return (0);  \n}  \n```  \n  \n```Output  \nadd_lvalue_reference_t<int> == int  \n```  \n  \n## Requirements  \n **Header:** <type_traits>  \n  \n **Namespace:** std  \n  \n## See Also  \n [<type_traits>](../standard-library/type-traits.md)   \n [remove_reference Class](../standard-library/remove-reference-class.md)\n"}