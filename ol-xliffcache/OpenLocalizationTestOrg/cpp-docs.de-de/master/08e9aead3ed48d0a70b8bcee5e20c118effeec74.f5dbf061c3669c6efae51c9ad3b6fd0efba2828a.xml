{"nodes":[{"pos":[12,61],"content":"hash_map::bucket_count (STL-CLR) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"hash_map::bucket_count (STL-CLR) | Microsoft Docs","pos":[0,49]}]},{"content":"hash_map::bucket_count (STL/CLR)","pos":[652,684]},{"content":"Counts the number of buckets.","pos":[685,714]},{"content":"Syntax","pos":[723,729]},{"content":"Remarks","pos":[775,782]},{"content":"The member functions returns the current number of buckets.","pos":[786,845]},{"content":"You use it to determine the size of the hash table.","pos":[846,897]},{"content":"Example","pos":[906,913]},{"content":"Requirements","pos":[2808,2820]},{"pos":[2824,2854],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> <ph id=\"ph1\">\\&lt;</ph>cliext/hash_map&gt;","source":"**Header:** \\<cliext/hash_map>"},{"pos":[2861,2882],"content":"<bpt id=\"p1\">**</bpt>Namespace:<ept id=\"p1\">**</ept> cliext","source":"**Namespace:** cliext"},{"content":"See Also","pos":[2891,2899]},{"content":"hash_map (STL/CLR)","pos":[2904,2922]},{"content":"hash_map::load_factor (STL/CLR)","pos":[2960,2991]},{"content":"hash_map::max_load_factor (STL/CLR)","pos":[3041,3076]}],"content":"---\ntitle: \"hash_map::bucket_count (STL-CLR) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"cliext::hash_map::bucket_count\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"bucket_count member [STL/CLR]\"\nms.assetid: 67cbcb76-1edd-44a0-8779-fa61410c3aff\ncaps.latest.revision: 8\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# hash_map::bucket_count (STL/CLR)\nCounts the number of buckets.  \n  \n## Syntax  \n  \n```  \nint bucket_count();  \n```  \n  \n## Remarks  \n The member functions returns the current number of buckets. You use it to determine the size of the hash table.  \n  \n## Example  \n  \n```  \n// cliext_hash_map_bucket_count.cpp   \n// compile with: /clr   \n#include <cliext/hash_map>   \n  \ntypedef cliext::hash_map<wchar_t, int> Myhash_map;   \nint main()   \n    {   \n    Myhash_map c1 = gcnew Myhash_map;   \n    c1.insert(Myhash_map::make_value(L'a', 1));   \n    c1.insert(Myhash_map::make_value(L'b', 2));   \n    c1.insert(Myhash_map::make_value(L'c', 3));   \n  \n// display contents \" [a 1] [b 2] [c 3]\"   \n    for each (Myhash_map::value_type elem in c1)   \n        System::Console::Write(\" [{0} {1}]\", elem->first, elem->second);   \n    System::Console::WriteLine();   \n  \n// inspect current parameters   \n    System::Console::WriteLine(\"bucket_count() = {0}\", c1.bucket_count());   \n    System::Console::WriteLine(\"load_factor() = {0}\", c1.load_factor());   \n    System::Console::WriteLine(\"max_load_factor() = {0}\",   \n        c1.max_load_factor());   \n    System::Console::WriteLine();   \n  \n// change max_load_factor and redisplay   \n    c1.max_load_factor(0.25f);   \n    System::Console::WriteLine(\"bucket_count() = {0}\", c1.bucket_count());   \n    System::Console::WriteLine(\"load_factor() = {0}\", c1.load_factor());   \n    System::Console::WriteLine(\"max_load_factor() = {0}\",   \n        c1.max_load_factor());   \n    System::Console::WriteLine();   \n  \n// rehash and redisplay   \n    c1.rehash(100);   \n    System::Console::WriteLine(\"bucket_count() = {0}\", c1.bucket_count());   \n    System::Console::WriteLine(\"load_factor() = {0}\", c1.load_factor());   \n    System::Console::WriteLine(\"max_load_factor() = {0}\",   \n        c1.max_load_factor());   \n    return (0);   \n    }  \n  \n```  \n  \n```Output  \n [a 1] [b 2] [c 3]  \nbucket_count() = 16  \nload_factor() = 0.1875  \nmax_load_factor() = 4  \n  \nbucket_count() = 16  \nload_factor() = 0.1875  \nmax_load_factor() = 0.25  \n  \nbucket_count() = 128  \nload_factor() = 0.0234375  \nmax_load_factor() = 0.25  \n```  \n  \n## Requirements  \n **Header:** \\<cliext/hash_map>  \n  \n **Namespace:** cliext  \n  \n## See Also  \n [hash_map (STL/CLR)](../dotnet/hash-map-stl-clr.md)   \n [hash_map::load_factor (STL/CLR)](../dotnet/hash-map-load-factor-stl-clr.md)   \n [hash_map::max_load_factor (STL/CLR)](../dotnet/hash-map-max-load-factor-stl-clr.md)"}