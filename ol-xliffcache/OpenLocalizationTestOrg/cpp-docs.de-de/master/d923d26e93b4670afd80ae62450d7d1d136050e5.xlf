<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-04506c2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d923d26e93b4670afd80ae62450d7d1d136050e5</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\mfc\tn068-performing-transactions-with-the-microsoft-access-7-odbc-driver.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9df7cc393a805b80eae463dd322a29e1d25ee69e</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">bebb7a6eb1b8f2195b0a70b00350f046570d5cff</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>TN068: Performing Transactions with the Microsoft Access 7 ODBC Driver | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>TN068: Performing Transactions with the Microsoft Access 7 ODBC Driver</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The following technical note has not been updated since it was first included in the online documentation.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>As a result, some procedures and topics might be out of date or incorrect.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>For the latest information, it is recommended that you search for the topic of interest in the online documentation index.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>This note describes how to perform transactions when using the MFC ODBC database classes and the Microsoft Access 7.0 ODBC driver included in the Microsoft ODBC Desktop Driver Pack version 3.0.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Overview</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>If your database application performs transactions, you must be careful to call <ph id="ph1">`CDatabase::BeginTrans`</ph> and <ph id="ph2">`CRecordset::Open`</ph> in the correct sequence in your application.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The Microsoft Access 7.0 driver uses the Microsoft Jet database engine, and Jet requires that your application not begin a transaction on any database that has an open cursor.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>For the MFC ODBC database classes, an open cursor equates to an open <ph id="ph1">`CRecordset`</ph> object.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>If you open a recordset before calling <bpt id="p1">**</bpt>BeginTrans<ept id="p1">**</ept>, you may not see any error messages.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>However, any recordset updates your application makes become permanent after calling <ph id="ph1">`CRecordset::Update`</ph>, and the updates will not be rolled back by calling <bpt id="p1">**</bpt>Rollback<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>To avoid this problem, you must call <bpt id="p1">**</bpt>BeginTrans<ept id="p1">**</ept> first and then open the recordset.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>MFC checks the driver functionality for cursor commit and rollback behavior.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Class <ph id="ph1">`CDatabase`</ph> provides two member functions, <ph id="ph2">`GetCursorCommitBehavior`</ph> and <ph id="ph3">`GetCursorRollbackBehavior`</ph>, to determine the effect of any transaction on your open <ph id="ph4">`CRecordset`</ph> object.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>For the Microsoft Access 7.0 ODBC driver, these member functions return <ph id="ph1">`SQL_CB_CLOSE`</ph> because the Access driver does not support cursor preservation.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Therefore, you must call <ph id="ph1">`CRecordset::Requery`</ph> following a <bpt id="p1">**</bpt>CommitTrans<ept id="p1">**</ept> or <bpt id="p2">**</bpt>Rollback<ept id="p2">**</ept> operation.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>When you need to perform multiple transactions one after another, you cannot call <bpt id="p1">**</bpt>Requery<ept id="p1">**</ept> after the first transaction and then start the next one.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>You must close the recordset before the next call to <bpt id="p1">**</bpt>BeginTrans<ept id="p1">**</ept> in order to satisfy Jet's requirement.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>This technical note describes two methods of handling this situation:</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Closing the recordset after each <bpt id="p1">**</bpt>CommitTrans<ept id="p1">**</ept> or <bpt id="p2">**</bpt>Rollback<ept id="p2">**</ept> operation.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Using the ODBC API function <bpt id="p1">**</bpt>SQLFreeStmt<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Closing the Recordset after each CommitTrans or Rollback Operation</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Before starting a transaction, make sure the recordset object is closed.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>After calling <bpt id="p1">**</bpt>BeginTrans<ept id="p1">**</ept>, call the recordset's <bpt id="p2">**</bpt>Open<ept id="p2">**</ept> member function.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Close the recordset immediately after calling <bpt id="p1">**</bpt>CommitTrans<ept id="p1">**</ept> or <bpt id="p2">**</bpt>Rollback<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Note that repeatedly opening and closing the recordset can slow an application's performance.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Using SQLFreeStmt</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>You can also use the ODBC API function <bpt id="p1">**</bpt>SQLFreeStmt<ept id="p1">**</ept> to explicitly close the cursor after ending a transaction.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>To start another transaction, call <bpt id="p1">**</bpt>BeginTrans<ept id="p1">**</ept> followed by <ph id="ph1">`CRecordset::Requery`</ph>.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>When calling <bpt id="p1">**</bpt>SQLFreeStmt<ept id="p1">**</ept>, you must specify the recordset's HSTMT as the first parameter and <bpt id="p2">**</bpt>SQL_CLOSE<ept id="p2">**</ept> as the second parameter.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>This method is faster than closing and opening the recordset at the start of every transaction.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The following code demonstrates how to implement this technique:</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Another way to implement this technique is to write a new function, <bpt id="p1">**</bpt>RequeryWithBeginTrans<ept id="p1">**</ept>, which you can call to start the next transaction after you commit or rollback the first one.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>To write such a function, do the following steps:</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Copy the code for <bpt id="p1">**</bpt>CRecordset::Requery( )<ept id="p1">**</ept> to the new function.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Add the following line immediately after the call to <bpt id="p1">**</bpt>SQLFreeStmt<ept id="p1">**</ept>:</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Now you can call this function between each pair of transactions:</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Do not use this technique if you need to change the recordset member variables <bpt id="p1">**</bpt>m_strFilter<ept id="p1">**</ept> or <ph id="ph1">`m_strSort`</ph> between transactions.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>In that case, you should close the recordset after each <bpt id="p1">**</bpt>CommitTrans<ept id="p1">**</ept> or <bpt id="p2">**</bpt>Rollback<ept id="p2">**</ept> operation.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Technical Notes by Number</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Technical Notes by Category</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>