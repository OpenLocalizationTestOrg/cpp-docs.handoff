{"nodes":[{"pos":[12,55],"content":"_mbsnbcpy_s, _mbsnbcpy_s_l | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"_mbsnbcpy_s, _mbsnbcpy_s_l | Microsoft Docs","pos":[0,43]}]},{"pos":[1205,1231],"content":"_mbsnbcpy_s, _mbsnbcpy_s_l","linkify":"_mbsnbcpy_s, _mbsnbcpy_s_l","nodes":[{"content":"_mbsnbcpy_s, _mbsnbcpy_s_l","pos":[0,26]}]},{"content":"Copies <ph id=\"ph1\">`n`</ph> bytes of a string to a destination string.","pos":[1232,1285],"source":"Copies `n` bytes of a string to a destination string."},{"content":"These versions of <bpt id=\"p1\">[</bpt>_mbsnbcpy, _mbsnbcpy_l<ept id=\"p1\">](../../c-runtime-library/reference/mbsnbcpy-mbsnbcpy-l.md)</ept> have security enhancements, as described in <bpt id=\"p2\">[</bpt>Security Features in the CRT<ept id=\"p2\">](../../c-runtime-library/security-features-in-the-crt.md)</ept>.","pos":[1286,1519],"source":" These versions of [_mbsnbcpy, _mbsnbcpy_l](../../c-runtime-library/reference/mbsnbcpy-mbsnbcpy-l.md) have security enhancements, as described in [Security Features in the CRT](../../c-runtime-library/security-features-in-the-crt.md)."},{"pos":[1527,1747],"content":"[!IMPORTANT]\n This API cannot be used in applications that execute in the Windows Runtime. For more information, see [CRT functions not supported with /ZW](http://msdn.microsoft.com/library/windows/apps/jj606124.aspx).","leadings":["","> "],"nodes":[{"content":" This API cannot be used in applications that execute in the Windows Runtime. For more information, see [CRT functions not supported with /ZW](http://msdn.microsoft.com/library/windows/apps/jj606124.aspx).","pos":[13,218],"nodes":[{"content":"This API cannot be used in applications that execute in the Windows Runtime.","pos":[1,77]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>CRT functions not supported with /ZW<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/apps/jj606124.aspx)</ept>.","pos":[78,205],"source":" For more information, see [CRT functions not supported with /ZW](http://msdn.microsoft.com/library/windows/apps/jj606124.aspx)."}]}]},{"pos":[1756,1762],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[2434,2444],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Destination for character string to be copied.","pos":[2461,2507]},{"content":"Destination buffer size.","pos":[2531,2555]},{"content":"Character string to be copied.","pos":[2577,2607]},{"content":"Number of bytes to be copied.","pos":[2625,2654]},{"content":"Locale to use.","pos":[2673,2687]},{"pos":[2696,2708],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[2712,2774],"content":"Zero if successful; <ph id=\"ph1\">`EINVAL`</ph> if a bad parameter was passed in.","source":"Zero if successful; `EINVAL` if a bad parameter was passed in."},{"pos":[2783,2790],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The <ph id=\"ph1\">`_mbsnbcpy_s`</ph> function copies <ph id=\"ph2\">`count`</ph> bytes from <ph id=\"ph3\">`strSource`</ph> to <ph id=\"ph4\">`strDest`</ph>.","pos":[2794,2872],"source":"The `_mbsnbcpy_s` function copies `count` bytes from `strSource` to `strDest`."},{"content":"If <ph id=\"ph1\">`count`</ph> exceeds the size of <ph id=\"ph2\">`strDest`</ph>, either of the input strings is a null pointer, or <ph id=\"ph3\">`sizeInBytes`</ph> or <ph id=\"ph4\">`count`</ph> is 0, the function invokes the invalid parameter handler as described in <bpt id=\"p1\">[</bpt>Parameter Validation<ept id=\"p1\">](../../c-runtime-library/parameter-validation.md)</ept> .","pos":[2873,3136],"source":" If `count` exceeds the size of `strDest`, either of the input strings is a null pointer, or `sizeInBytes` or `count` is 0, the function invokes the invalid parameter handler as described in [Parameter Validation](../../c-runtime-library/parameter-validation.md) ."},{"content":"If execution is allowed to continue, the function returns <ph id=\"ph1\">`EINVAL`</ph>.","pos":[3137,3204],"source":" If execution is allowed to continue, the function returns `EINVAL`."},{"content":"If the source and destination strings overlap, the behavior of <ph id=\"ph1\">`_mbsnbcpy_s`</ph> is undefined.","pos":[3205,3295],"source":" If the source and destination strings overlap, the behavior of `_mbsnbcpy_s` is undefined."},{"content":"The output value is affected by the setting of the <ph id=\"ph1\">`LC_CTYPE`</ph> category setting of the locale; see <bpt id=\"p1\">[</bpt>setlocale<ept id=\"p1\">](../../c-runtime-library/reference/setlocale-wsetlocale.md)</ept> for more information.","pos":[3302,3492],"source":"The output value is affected by the setting of the `LC_CTYPE` category setting of the locale; see [setlocale](../../c-runtime-library/reference/setlocale-wsetlocale.md) for more information."},{"content":"The versions of these functions without the <ph id=\"ph1\">`_l`</ph> suffix use the current locale for this locale-dependent behavior; the versions with the <ph id=\"ph2\">`_l`</ph> suffix are identical except that they use the locale parameter passed in instead.","pos":[3493,3716],"source":" The versions of these functions without the `_l` suffix use the current locale for this locale-dependent behavior; the versions with the `_l` suffix are identical except that they use the locale parameter passed in instead."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Locale<ept id=\"p1\">](../../c-runtime-library/locale.md)</ept>.","pos":[3717,3787],"source":" For more information, see [Locale](../../c-runtime-library/locale.md)."},{"pos":[3795,3935],"content":"[!NOTE]\n Unlike the non-secure version of this function, `_mbsnbcpy_s` does not do any null padding and always null terminates the string.","leadings":["","> "],"nodes":[{"content":"Unlike the non-secure version of this function, <ph id=\"ph1\">`_mbsnbcpy_s`</ph> does not do any null padding and always null terminates the string.","pos":[9,138],"source":" Unlike the non-secure version of this function, `_mbsnbcpy_s` does not do any null padding and always null terminates the string."}]},{"content":"In C++, using these functions is simplified by template overloads; the overloads can infer buffer length automatically (eliminating the need to specify a size argument) and they can automatically replace older, non-secure functions with their newer, secure counterparts.","pos":[3942,4212]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Secure Template Overloads<ept id=\"p1\">](../../c-runtime-library/secure-template-overloads.md)</ept>.","pos":[4213,4321],"source":" For more information, see [Secure Template Overloads](../../c-runtime-library/secure-template-overloads.md)."},{"content":"The debug versions of these functions first fill the buffer with 0xFD.","pos":[4328,4398]},{"content":"To disable this behavior, use <bpt id=\"p1\">[</bpt>_CrtSetDebugFillThreshold<ept id=\"p1\">](../../c-runtime-library/reference/crtsetdebugfillthreshold.md)</ept>.","pos":[4399,4520],"source":" To disable this behavior, use [_CrtSetDebugFillThreshold](../../c-runtime-library/reference/crtsetdebugfillthreshold.md)."},{"pos":[4530,4559],"content":"Generic-Text Routine Mappings","linkify":"Generic-Text Routine Mappings","nodes":[{"content":"Generic-Text Routine Mappings","pos":[0,29]}]},{"content":"Tchar.h routine","pos":[4566,4581]},{"content":"_UNICODE and _MBCS not defined","pos":[4582,4612]},{"content":"_MBCS defined","pos":[4613,4626]},{"content":"_UNICODE defined","pos":[4627,4643]},{"pos":[4885,4897],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"content":"Routine","pos":[4904,4911]},{"content":"Required header","pos":[4912,4927]},{"content":"<ph id=\"ph1\">\\&lt;</ph>mbstring.h&gt;","pos":[4986,4999],"source":"\\<mbstring.h>"},{"content":"<ph id=\"ph1\">\\&lt;</ph>mbstring.h&gt;","pos":[5020,5033],"source":"\\<mbstring.h>"},{"pos":[5041,5139],"content":"For more compatibility information, see <bpt id=\"p1\">[</bpt>Compatibility<ept id=\"p1\">](../../c-runtime-library/compatibility.md)</ept>.","source":"For more compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md)."},{"pos":[5148,5173],"content":".NET Framework Equivalent","linkify":".NET Framework Equivalent","nodes":[{"content":".NET Framework Equivalent","pos":[0,25]}]},{"content":"Not applicable.","pos":[5177,5192]},{"content":"To call the standard C function, use <ph id=\"ph1\">`PInvoke`</ph>.","pos":[5193,5240],"source":" To call the standard C function, use `PInvoke`."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Platform Invoke Examples<ept id=\"p1\">](http://msdn.microsoft.com/Library/15926806-f0b7-487e-93a6-4e9367ec689f)</ept>.","pos":[5241,5366],"source":" For more information, see [Platform Invoke Examples](http://msdn.microsoft.com/Library/15926806-f0b7-487e-93a6-4e9367ec689f)."},{"pos":[5375,5383],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>String Manipulation<ept id=\"p1\">](../../c-runtime-library/string-manipulation-crt.md)</ept><ph id=\"ph1\"> </ph>","pos":[5387,5461],"source":"[String Manipulation](../../c-runtime-library/string-manipulation-crt.md) "},{"content":"<bpt id=\"p1\"> [</bpt>_mbsnbcat, _mbsnbcat_l<ept id=\"p1\">](../../c-runtime-library/reference/mbsnbcat-mbsnbcat-l.md)</ept><ph id=\"ph1\"> </ph>","pos":[5464,5548],"source":" [_mbsnbcat, _mbsnbcat_l](../../c-runtime-library/reference/mbsnbcat-mbsnbcat-l.md) "},{"content":"<bpt id=\"p1\"> [</bpt>_mbsnbcmp, _mbsnbcmp_l<ept id=\"p1\">](../../c-runtime-library/reference/mbsnbcmp-mbsnbcmp-l.md)</ept><ph id=\"ph1\"> </ph>","pos":[5551,5635],"source":" [_mbsnbcmp, _mbsnbcmp_l](../../c-runtime-library/reference/mbsnbcmp-mbsnbcmp-l.md) "},{"content":"<bpt id=\"p1\"> [</bpt>_strncnt, _wcsncnt, _mbsnbcnt, _mbsnbcnt_l, _mbsnccnt, _mbsnccnt_l<ept id=\"p1\">](../../c-runtime-library/reference/strncnt-wcsncnt-mbsnbcnt-mbsnbcnt-l-mbsnccnt-mbsnccnt-l.md)</ept><ph id=\"ph1\"> </ph>","pos":[5638,5802],"source":" [_strncnt, _wcsncnt, _mbsnbcnt, _mbsnbcnt_l, _mbsnccnt, _mbsnccnt_l](../../c-runtime-library/reference/strncnt-wcsncnt-mbsnbcnt-mbsnbcnt-l-mbsnccnt-mbsnccnt-l.md) "},{"content":"<bpt id=\"p1\"> [</bpt>_mbsnbicmp, _mbsnbicmp_l<ept id=\"p1\">](../../c-runtime-library/reference/mbsnbicmp-mbsnbicmp-l.md)</ept><ph id=\"ph1\"> </ph>","pos":[5805,5893],"source":" [_mbsnbicmp, _mbsnbicmp_l](../../c-runtime-library/reference/mbsnbicmp-mbsnbicmp-l.md) "},{"content":"<bpt id=\"p1\"> [</bpt>_mbsnbset, _mbsnbset_l<ept id=\"p1\">](../../c-runtime-library/reference/mbsnbset-mbsnbset-l.md)</ept><ph id=\"ph1\"> </ph>","pos":[5896,5980],"source":" [_mbsnbset, _mbsnbset_l](../../c-runtime-library/reference/mbsnbset-mbsnbset-l.md) "},{"content":"<bpt id=\"p1\"> [</bpt>strncpy, _strncpy_l, wcsncpy, _wcsncpy_l, _mbsncpy, _mbsncpy_l<ept id=\"p1\">](../../c-runtime-library/reference/strncpy-strncpy-l-wcsncpy-wcsncpy-l-mbsncpy-mbsncpy-l.md)</ept>","pos":[5983,6140],"source":" [strncpy, _strncpy_l, wcsncpy, _wcsncpy_l, _mbsncpy, _mbsncpy_l](../../c-runtime-library/reference/strncpy-strncpy-l-wcsncpy-wcsncpy-l-mbsncpy-mbsncpy-l.md)"}],"content":"---\ntitle: \"_mbsnbcpy_s, _mbsnbcpy_s_l | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\napiname: \n  - \"_mbsnbcpy_s_l\"\n  - \"_mbsnbcpy_s\"\napilocation: \n  - \"msvcrt.dll\"\n  - \"msvcr80.dll\"\n  - \"msvcr90.dll\"\n  - \"msvcr100.dll\"\n  - \"msvcr100_clr0400.dll\"\n  - \"msvcr110.dll\"\n  - \"msvcr110_clr0400.dll\"\n  - \"msvcr120.dll\"\n  - \"msvcr120_clr0400.dll\"\n  - \"ucrtbase.dll\"\n  - \"api-ms-win-crt-multibyte-l1-1-0.dll\"\napitype: \"DLLExport\"\nf1_keywords: \n  - \"mbsnbcpy_s_l\"\n  - \"_mbsnbcpy_s\"\n  - \"mbsnbcpy_s\"\n  - \"_mbsnbcpy_s_l\"\ndev_langs: \n  - \"C++\"\n  - \"C\"\nhelpviewer_keywords: \n  - \"_mbsnbcpy_s function\"\n  - \"tcsncpy_s function\"\n  - \"mbsnbcpy_s_l function\"\n  - \"_tcsncpy_s_l function\"\n  - \"mbsnbcpy_s function\"\n  - \"tcsncpy_s_l function\"\n  - \"_mbsnbcpy_s_l function\"\n  - \"_tcsncpy_s function\"\nms.assetid: dfff64ab-fe6f-49c4-99ba-75014e2b0cd6\ncaps.latest.revision: 29\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# _mbsnbcpy_s, _mbsnbcpy_s_l\nCopies `n` bytes of a string to a destination string. These versions of [_mbsnbcpy, _mbsnbcpy_l](../../c-runtime-library/reference/mbsnbcpy-mbsnbcpy-l.md) have security enhancements, as described in [Security Features in the CRT](../../c-runtime-library/security-features-in-the-crt.md).  \n  \n> [!IMPORTANT]\n>  This API cannot be used in applications that execute in the Windows Runtime. For more information, see [CRT functions not supported with /ZW](http://msdn.microsoft.com/library/windows/apps/jj606124.aspx).  \n  \n## Syntax  \n  \n```  \nerrno_t _mbsnbcpy_s(  \n   unsigned char * strDest,  \n   size_t sizeInBytes,  \n   const unsigned char * strSource,  \n   size_t count   \n);  \nerrno_t _mbsnbcpy_s_l(  \n   unsigned char * strDest,  \n   size_t sizeInBytes,  \n   const unsigned char * strSource,  \n   size_t count,  \n   _locale_t locale  \n);  \ntemplate <size_t size>  \nerrno_t _mbsnbcpy_s(  \n   unsigned char (&strDest)[size],  \n   const unsigned char * strSource,  \n   size_t count   \n); // C++ only  \ntemplate <size_t size>  \nerrno_t _mbsnbcpy_s_l(  \n   unsigned char (&strDest)[size],  \n   const unsigned char * strSource,  \n   size_t count,  \n   _locale_t locale  \n); // C++ only  \n```  \n  \n#### Parameters  \n `strDest`  \n Destination for character string to be copied.  \n  \n `sizeInBytes`  \n Destination buffer size.  \n  \n `strSource`  \n Character string to be copied.  \n  \n `count`  \n Number of bytes to be copied.  \n  \n `locale`  \n Locale to use.  \n  \n## Return Value  \n Zero if successful; `EINVAL` if a bad parameter was passed in.  \n  \n## Remarks  \n The `_mbsnbcpy_s` function copies `count` bytes from `strSource` to `strDest`. If `count` exceeds the size of `strDest`, either of the input strings is a null pointer, or `sizeInBytes` or `count` is 0, the function invokes the invalid parameter handler as described in [Parameter Validation](../../c-runtime-library/parameter-validation.md) . If execution is allowed to continue, the function returns `EINVAL`. If the source and destination strings overlap, the behavior of `_mbsnbcpy_s` is undefined.  \n  \n The output value is affected by the setting of the `LC_CTYPE` category setting of the locale; see [setlocale](../../c-runtime-library/reference/setlocale-wsetlocale.md) for more information. The versions of these functions without the `_l` suffix use the current locale for this locale-dependent behavior; the versions with the `_l` suffix are identical except that they use the locale parameter passed in instead. For more information, see [Locale](../../c-runtime-library/locale.md).  \n  \n> [!NOTE]\n>  Unlike the non-secure version of this function, `_mbsnbcpy_s` does not do any null padding and always null terminates the string.  \n  \n In C++, using these functions is simplified by template overloads; the overloads can infer buffer length automatically (eliminating the need to specify a size argument) and they can automatically replace older, non-secure functions with their newer, secure counterparts. For more information, see [Secure Template Overloads](../../c-runtime-library/secure-template-overloads.md).  \n  \n The debug versions of these functions first fill the buffer with 0xFD. To disable this behavior, use [_CrtSetDebugFillThreshold](../../c-runtime-library/reference/crtsetdebugfillthreshold.md).  \n  \n### Generic-Text Routine Mappings  \n  \n|Tchar.h routine|_UNICODE and _MBCS not defined|_MBCS defined|_UNICODE defined|  \n|---------------------|--------------------------------------|--------------------|-----------------------|  \n|`_tcsncpy_s`|`_strncpy_s`|`_mbsnbcpy_s`|`_wcsncpy_s`|  \n|`_tcsncpy_s_l`|`_strncpy_s_l`|`_mbsnbcpy_s_l`|`_wcsncpy_s_l`|  \n  \n## Requirements  \n  \n|Routine|Required header|  \n|-------------|---------------------|  \n|`_mbsnbcpy_s`|\\<mbstring.h>|  \n|`_mbsnbcpy_s_l`|\\<mbstring.h>|  \n  \n For more compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md).  \n  \n## .NET Framework Equivalent  \n Not applicable. To call the standard C function, use `PInvoke`. For more information, see [Platform Invoke Examples](http://msdn.microsoft.com/Library/15926806-f0b7-487e-93a6-4e9367ec689f).  \n  \n## See Also  \n [String Manipulation](../../c-runtime-library/string-manipulation-crt.md)   \n [_mbsnbcat, _mbsnbcat_l](../../c-runtime-library/reference/mbsnbcat-mbsnbcat-l.md)   \n [_mbsnbcmp, _mbsnbcmp_l](../../c-runtime-library/reference/mbsnbcmp-mbsnbcmp-l.md)   \n [_strncnt, _wcsncnt, _mbsnbcnt, _mbsnbcnt_l, _mbsnccnt, _mbsnccnt_l](../../c-runtime-library/reference/strncnt-wcsncnt-mbsnbcnt-mbsnbcnt-l-mbsnccnt-mbsnccnt-l.md)   \n [_mbsnbicmp, _mbsnbicmp_l](../../c-runtime-library/reference/mbsnbicmp-mbsnbicmp-l.md)   \n [_mbsnbset, _mbsnbset_l](../../c-runtime-library/reference/mbsnbset-mbsnbset-l.md)   \n [strncpy, _strncpy_l, wcsncpy, _wcsncpy_l, _mbsncpy, _mbsncpy_l](../../c-runtime-library/reference/strncpy-strncpy-l-wcsncpy-wcsncpy-l-mbsncpy-mbsncpy-l.md)"}