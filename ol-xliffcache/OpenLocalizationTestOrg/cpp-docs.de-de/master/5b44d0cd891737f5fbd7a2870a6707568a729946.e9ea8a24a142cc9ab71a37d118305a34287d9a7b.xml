{"nodes":[{"pos":[12,49],"content":"Compiler Error C2682 | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Compiler Error C2682 | Microsoft Docs","pos":[0,37]}]},{"content":"Compiler Error C2682","pos":[598,618]},{"content":"cannot use casting_operator to convert from 'type1' to 'type2'","pos":[619,681]},{"content":"A casting operator tried to convert between incompatible types.","pos":[688,751]},{"content":"For example, you cannot use the <bpt id=\"p1\">[</bpt>dynamic_cast<ept id=\"p1\">](../../cpp/dynamic-cast-operator.md)</ept> operator to convert a pointer to a reference.","pos":[752,880],"source":" For example, you cannot use the [dynamic_cast](../../cpp/dynamic-cast-operator.md) operator to convert a pointer to a reference."},{"content":"The <ph id=\"ph1\">`dynamic_cast`</ph> operator cannot be used to cast away qualifiers.","pos":[881,948],"source":" The `dynamic_cast` operator cannot be used to cast away qualifiers."},{"content":"All qualifiers on the types must match.","pos":[949,988]},{"pos":[995,1100],"content":"You can use the <ph id=\"ph1\">`const_cast`</ph> operator to remove attributes such as <ph id=\"ph2\">`const`</ph>, <ph id=\"ph3\">`volatile`</ph>, or <ph id=\"ph4\">`__unaligned`</ph>.","source":"You can use the `const_cast` operator to remove attributes such as `const`, `volatile`, or `__unaligned`."},{"content":"The following sample generates C2682:","pos":[1107,1144]},{"content":"The following sample generates C2682:","pos":[1308,1345]}],"content":"---\ntitle: \"Compiler Error C2682 | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"error-reference\"\nf1_keywords: \n  - \"C2682\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"C2682\"\nms.assetid: 30c6a7c4-f5f7-4fe8-81a8-c48938521ab4\ncaps.latest.revision: 13\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Compiler Error C2682\ncannot use casting_operator to convert from 'type1' to 'type2'  \n  \n A casting operator tried to convert between incompatible types. For example, you cannot use the [dynamic_cast](../../cpp/dynamic-cast-operator.md) operator to convert a pointer to a reference. The `dynamic_cast` operator cannot be used to cast away qualifiers. All qualifiers on the types must match.  \n  \n You can use the `const_cast` operator to remove attributes such as `const`, `volatile`, or `__unaligned`.  \n  \n The following sample generates C2682:  \n  \n```  \n// C2682.cpp  \nclass A { virtual void f(); };  \nclass B: public A {};  \n  \nvoid g(A* pa) {  \n    B& rb = dynamic_cast<B&>(pa); // C2682  \n}  \n```  \n  \n The following sample generates C2682:  \n  \n```  \n// C2682b.cpp  \n// compile with: /clr  \nref struct R{};  \nref struct RR : public R{};  \nref struct H {  \n   RR^ r ;  \n   short s;  \n   int i;  \n};  \n  \nint main() {  \n   H^ h = gcnew H();    \n   interior_ptr<int>lr = &(h->i);  \n   interior_ptr<short>ssr = safe_cast<interior_ptr<short> >(lr);   // C2682  \n   interior_ptr<short>ssr = reinterpret_cast<interior_ptr<short> >(lr);   // OK  \n}  \n```"}