{"nodes":[{"pos":[12,55],"content":"_com_ptr_t::CreateInstance | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"_com_ptr_t::CreateInstance | Microsoft Docs","pos":[0,43]}]},{"content":"_com_ptr_t::CreateInstance","pos":[675,701]},{"content":"Microsoft Specific","pos":[704,722]},{"pos":[731,799],"content":"Creates a new instance of an object given a <bpt id=\"p1\">**</bpt>CLSID<ept id=\"p1\">**</ept> or <bpt id=\"p2\">**</bpt>ProgID<ept id=\"p2\">**</ept>.","source":"Creates a new instance of an object given a **CLSID** or **ProgID**."},{"content":"Syntax","pos":[808,814]},{"content":"Parameters","pos":[1245,1255]},{"content":"The <bpt id=\"p1\">**</bpt>CLSID<ept id=\"p1\">**</ept> of an object.","pos":[1271,1298],"source":" The **CLSID** of an object."},{"content":"A Unicode string that holds either a <bpt id=\"p1\">**</bpt>CLSID<ept id=\"p1\">**</ept> (starting with \"<bpt id=\"p2\">**</bpt>{<ept id=\"p2\">**</ept>\") or a <bpt id=\"p3\">**</bpt>ProgID<ept id=\"p3\">**</ept>.","pos":[1322,1409],"source":" A Unicode string that holds either a **CLSID** (starting with \"**{**\") or a **ProgID**."},{"content":"A multibyte string, using the ANSI code page, that holds either a <bpt id=\"p1\">**</bpt>CLSID<ept id=\"p1\">**</ept> (starting with \"<bpt id=\"p2\">**</bpt>{<ept id=\"p2\">**</ept>\") or a <bpt id=\"p3\">**</bpt>ProgID<ept id=\"p3\">**</ept>.","pos":[1434,1550],"source":" A multibyte string, using the ANSI code page, that holds either a **CLSID** (starting with \"**{**\") or a **ProgID**."},{"content":"Context for running executable code.","pos":[1575,1611]},{"content":"The outer unknown for <bpt id=\"p1\">[</bpt>aggregation<ept id=\"p1\">](../atl/aggregation.md)</ept>.","pos":[1630,1689],"source":" The outer unknown for [aggregation](../atl/aggregation.md)."},{"content":"Remarks","pos":[1698,1705]},{"content":"These member functions call <ph id=\"ph1\">`CoCreateInstance`</ph> to create a new COM object and then queries for this smart pointer's interface type.","pos":[1709,1840],"source":"These member functions call `CoCreateInstance` to create a new COM object and then queries for this smart pointer's interface type."},{"content":"The resulting pointer is then encapsulated within this <ph id=\"ph1\">`_com_ptr_t`</ph> object.","pos":[1841,1916],"source":" The resulting pointer is then encapsulated within this `_com_ptr_t` object."},{"content":"<bpt id=\"p1\">**</bpt>Release<ept id=\"p1\">**</ept> is called to decrement the reference count for the previously encapsulated pointer.","pos":[1917,2012],"source":"**Release** is called to decrement the reference count for the previously encapsulated pointer."},{"content":"This routine returns the <ph id=\"ph1\">`HRESULT`</ph> to indicate success or failure.","pos":[2013,2079],"source":" This routine returns the `HRESULT` to indicate success or failure."},{"pos":[2089,2210],"content":"<bpt id=\"p1\">**</bpt>CreateInstance(<ept id=\"p1\">**</ept>  <ph id=\"ph1\">`rclsid`</ph> <bpt id=\"p2\">**</bpt>,<ept id=\"p2\">**</ept>  <ph id=\"ph2\">`dwClsContext`</ph>  <bpt id=\"p3\">**</bpt>)<ept id=\"p3\">**</ept> Creates a new running instance of an object given a <bpt id=\"p4\">**</bpt>CLSID<ept id=\"p4\">**</ept>.","source":"**CreateInstance(**  `rclsid` **,**  `dwClsContext`  **)** Creates a new running instance of an object given a **CLSID**."},{"pos":[2220,2421],"content":"<bpt id=\"p1\">**</bpt>CreateInstance(<ept id=\"p1\">**</ept>  <ph id=\"ph1\">`clsidString`</ph> <bpt id=\"p2\">**</bpt>,<ept id=\"p2\">**</ept>  <ph id=\"ph2\">`dwClsContext`</ph>  <bpt id=\"p3\">**</bpt>)<ept id=\"p3\">**</ept> Creates a new running instance of an object given a Unicode string that holds either a <bpt id=\"p4\">**</bpt>CLSID<ept id=\"p4\">**</ept> (starting with \"<bpt id=\"p5\">**</bpt>{<ept id=\"p5\">**</ept>\") or a <bpt id=\"p6\">**</bpt>ProgID<ept id=\"p6\">**</ept>.","source":"**CreateInstance(**  `clsidString` **,**  `dwClsContext`  **)** Creates a new running instance of an object given a Unicode string that holds either a **CLSID** (starting with \"**{**\") or a **ProgID**."},{"content":"<bpt id=\"p1\">**</bpt>CreateInstance(<ept id=\"p1\">**</ept>  <ph id=\"ph1\">`clsidStringA`</ph> <bpt id=\"p2\">**</bpt>,<ept id=\"p2\">**</ept>  <ph id=\"ph2\">`dwClsContext`</ph>  <bpt id=\"p3\">**</bpt>)<ept id=\"p3\">**</ept> Creates a new running instance of an object given a multibyte character string that holds either a <bpt id=\"p4\">**</bpt>CLSID<ept id=\"p4\">**</ept> (starting with \"<bpt id=\"p5\">**</bpt>{<ept id=\"p5\">**</ept>\") or a <bpt id=\"p6\">**</bpt>ProgID<ept id=\"p6\">**</ept>.","pos":[2431,2645],"source":"**CreateInstance(**  `clsidStringA` **,**  `dwClsContext`  **)** Creates a new running instance of an object given a multibyte character string that holds either a **CLSID** (starting with \"**{**\") or a **ProgID**."},{"content":"Calls <bpt id=\"p1\">[</bpt>MultiByteToWideChar<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/dd319072)</ept>, which assumes that the string is in the ANSI code page rather than an OEM code page.","pos":[2646,2819],"source":" Calls [MultiByteToWideChar](http://msdn.microsoft.com/library/windows/desktop/dd319072), which assumes that the string is in the ANSI code page rather than an OEM code page."},{"content":"END Microsoft Specific","pos":[2828,2850]},{"content":"See Also","pos":[2861,2869]},{"content":"_com_ptr_t Class","pos":[2874,2890]}],"content":"---\ntitle: \"_com_ptr_t::CreateInstance | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"language-reference\"\nf1_keywords: \n  - \"_com_ptr_t::CreateInstance\"\n  - \"_com_ptr_t.CreateInstance\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"CreateInstance method\"\nms.assetid: ab89b0e1-9da3-4784-a079-58b17340f111\ncaps.latest.revision: 6\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# _com_ptr_t::CreateInstance\n**Microsoft Specific**  \n  \n Creates a new instance of an object given a **CLSID** or **ProgID**.  \n  \n## Syntax  \n  \n```  \n  \n      HRESULT CreateInstance(  \n   const CLSID& rclsid,  \n   IUnknown* pOuter=NULL,  \n   DWORD dwClsContext = CLSCTX_ALL   \n) throw( );  \nHRESULT CreateInstance(  \n   LPCWSTR clsidString,  \n   IUnknown* pOuter=NULL,  \n   DWORD dwClsContext = CLSCTX_ALL   \n) throw( );  \nHRESULT CreateInstance(  \n   LPCSTR clsidStringA,  \n   IUnknown* pOuter=NULL,  \n   DWORD dwClsContext = CLSCTX_ALL   \n) throw( );  \n```  \n  \n#### Parameters  \n `rclsid`  \n The **CLSID** of an object.  \n  \n `clsidString`  \n A Unicode string that holds either a **CLSID** (starting with \"**{**\") or a **ProgID**.  \n  \n `clsidStringA`  \n A multibyte string, using the ANSI code page, that holds either a **CLSID** (starting with \"**{**\") or a **ProgID**.  \n  \n `dwClsContext`  \n Context for running executable code.  \n  \n `pOuter`  \n The outer unknown for [aggregation](../atl/aggregation.md).  \n  \n## Remarks  \n These member functions call `CoCreateInstance` to create a new COM object and then queries for this smart pointer's interface type. The resulting pointer is then encapsulated within this `_com_ptr_t` object. **Release** is called to decrement the reference count for the previously encapsulated pointer. This routine returns the `HRESULT` to indicate success or failure.  \n  \n-   **CreateInstance(**  `rclsid` **,**  `dwClsContext`  **)** Creates a new running instance of an object given a **CLSID**.  \n  \n-   **CreateInstance(**  `clsidString` **,**  `dwClsContext`  **)** Creates a new running instance of an object given a Unicode string that holds either a **CLSID** (starting with \"**{**\") or a **ProgID**.  \n  \n-   **CreateInstance(**  `clsidStringA` **,**  `dwClsContext`  **)** Creates a new running instance of an object given a multibyte character string that holds either a **CLSID** (starting with \"**{**\") or a **ProgID**. Calls [MultiByteToWideChar](http://msdn.microsoft.com/library/windows/desktop/dd319072), which assumes that the string is in the ANSI code page rather than an OEM code page.  \n  \n **END Microsoft Specific**  \n  \n## See Also  \n [_com_ptr_t Class](../cpp/com-ptr-t-class.md)"}