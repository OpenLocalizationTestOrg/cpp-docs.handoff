{"nodes":[{"pos":[12,63],"content":"scanf, _scanf_l, wscanf, _wscanf_l | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"scanf, _scanf_l, wscanf, _wscanf_l | Microsoft Docs","pos":[0,51]}]},{"pos":[1354,1388],"content":"scanf, _scanf_l, wscanf, _wscanf_l","linkify":"scanf, _scanf_l, wscanf, _wscanf_l","nodes":[{"content":"scanf, _scanf_l, wscanf, _wscanf_l","pos":[0,34]}]},{"content":"Reads formatted data from the standard input stream.","pos":[1389,1441]},{"content":"More secure versions of these function are available; see <bpt id=\"p1\">[</bpt>scanf_s, _scanf_s_l, wscanf_s, _wscanf_s_l<ept id=\"p1\">](../../c-runtime-library/reference/scanf-s-scanf-s-l-wscanf-s-wscanf-s-l.md)</ept>.","pos":[1442,1621],"source":" More secure versions of these function are available; see [scanf_s, _scanf_s_l, wscanf_s, _wscanf_s_l](../../c-runtime-library/reference/scanf-s-scanf-s-l-wscanf-s-wscanf-s-l.md)."},{"pos":[1630,1636],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[1976,1986],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Format control string.","pos":[2002,2024]},{"content":"Optional arguments.","pos":[2045,2064]},{"content":"The locale to use.","pos":[2083,2101]},{"pos":[2110,2122],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Returns the number of fields successfully converted and assigned; the return value does not include fields that were read but not assigned.","pos":[2126,2265]},{"content":"A return value of 0 indicates that no fields were assigned.","pos":[2266,2325]},{"content":"If <ph id=\"ph1\">`format`</ph> is a <ph id=\"ph2\">`NULL`</ph> pointer, the invalid parameter handler is invoked, as described in <bpt id=\"p1\">[</bpt>Parameter Validation<ept id=\"p1\">](../../c-runtime-library/parameter-validation.md)</ept>.","pos":[2332,2495],"source":"If `format` is a `NULL` pointer, the invalid parameter handler is invoked, as described in [Parameter Validation](../../c-runtime-library/parameter-validation.md)."},{"content":"If execution is allowed to continue, these functions return <ph id=\"ph1\">`EOF`</ph> and set <ph id=\"ph2\">`errno`</ph> to <ph id=\"ph3\">`EINVAL`</ph>.","pos":[2496,2590],"source":" If execution is allowed to continue, these functions return `EOF` and set `errno` to `EINVAL`."},{"pos":[2597,2765],"content":"For information on these and other error codes, see <bpt id=\"p1\">[</bpt>_doserrno, errno, _sys_errlist, and _sys_nerr<ept id=\"p1\">](../../c-runtime-library/errno-doserrno-sys-errlist-and-sys-nerr.md)</ept>.","source":"For information on these and other error codes, see [_doserrno, errno, _sys_errlist, and _sys_nerr](../../c-runtime-library/errno-doserrno-sys-errlist-and-sys-nerr.md)."},{"pos":[2774,2781],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The <ph id=\"ph1\">`scanf`</ph> function reads data from the standard input stream <ph id=\"ph2\">`stdin`</ph> and writes the data into the location given by <ph id=\"ph3\">`argument`</ph>.","pos":[2785,2914],"source":"The `scanf` function reads data from the standard input stream `stdin` and writes the data into the location given by `argument`."},{"content":"Each <ph id=\"ph1\">`argument`</ph> must be a pointer to a variable of a type that corresponds to a type specifier in <ph id=\"ph2\">`format`</ph>.","pos":[2915,3022],"source":" Each `argument` must be a pointer to a variable of a type that corresponds to a type specifier in `format`."},{"content":"If copying takes place between strings that overlap, the behavior is undefined.","pos":[3023,3102]},{"pos":[3110,3532],"content":"[!IMPORTANT]\n When reading a string with `scanf`, always specify a width for the `%s` format (for example, `\"%32s\"` instead of `\"%s\"`); otherwise, improperly formatted input can easily cause a buffer overrun. Alternately, consider using [scanf_s, _scanf_s_l, wscanf_s, _wscanf_s_l](../../c-runtime-library/reference/scanf-s-scanf-s-l-wscanf-s-wscanf-s-l.md) or [fgets](../../c-runtime-library/reference/fgets-fgetws.md).","leadings":["","> "],"nodes":[{"content":" When reading a string with `scanf`, always specify a width for the `%s` format (for example, `\"%32s\"` instead of `\"%s\"`); otherwise, improperly formatted input can easily cause a buffer overrun. Alternately, consider using [scanf_s, _scanf_s_l, wscanf_s, _wscanf_s_l](../../c-runtime-library/reference/scanf-s-scanf-s-l-wscanf-s-wscanf-s-l.md) or [fgets](../../c-runtime-library/reference/fgets-fgetws.md).","pos":[13,420],"nodes":[{"content":"When reading a string with <ph id=\"ph1\">`scanf`</ph>, always specify a width for the <ph id=\"ph2\">`%s`</ph> format (for example, <ph id=\"ph3\">`\"%32s\"`</ph> instead of <ph id=\"ph4\">`\"%s\"`</ph>); otherwise, improperly formatted input can easily cause a buffer overrun.","pos":[1,195],"source":" When reading a string with `scanf`, always specify a width for the `%s` format (for example, `\"%32s\"` instead of `\"%s\"`); otherwise, improperly formatted input can easily cause a buffer overrun."},{"content":"Alternately, consider using <bpt id=\"p1\">[</bpt>scanf_s, _scanf_s_l, wscanf_s, _wscanf_s_l<ept id=\"p1\">](../../c-runtime-library/reference/scanf-s-scanf-s-l-wscanf-s-wscanf-s-l.md)</ept> or <bpt id=\"p2\">[</bpt>fgets<ept id=\"p2\">](../../c-runtime-library/reference/fgets-fgetws.md)</ept>.","pos":[196,407],"source":" Alternately, consider using [scanf_s, _scanf_s_l, wscanf_s, _wscanf_s_l](../../c-runtime-library/reference/scanf-s-scanf-s-l-wscanf-s-wscanf-s-l.md) or [fgets](../../c-runtime-library/reference/fgets-fgetws.md)."}]}]},{"content":"<ph id=\"ph1\">`wscanf`</ph> is a wide-character version of <ph id=\"ph2\">`scanf`</ph>; the <ph id=\"ph3\">`format`</ph> argument to <ph id=\"ph4\">`wscanf`</ph> is a wide-character string.","pos":[3539,3649],"source":"`wscanf` is a wide-character version of `scanf`; the `format` argument to `wscanf` is a wide-character string."},{"content":"<ph id=\"ph1\">`wscanf`</ph> and <ph id=\"ph2\">`scanf`</ph> behave identically if the stream is opened in ANSI mode.","pos":[3650,3727],"source":"`wscanf` and `scanf` behave identically if the stream is opened in ANSI mode."},{"content":"<ph id=\"ph1\">`scanf`</ph> doesn't currently support input from a UNICODE stream.","pos":[3728,3790],"source":"`scanf` doesn't currently support input from a UNICODE stream."},{"pos":[3797,3953],"content":"The versions of these functions with the <ph id=\"ph1\">`_l`</ph> suffix are identical except that they use the locale parameter passed in instead of the current thread locale.","source":"The versions of these functions with the `_l` suffix are identical except that they use the locale parameter passed in instead of the current thread locale."},{"pos":[3963,3992],"content":"Generic-Text Routine Mappings","linkify":"Generic-Text Routine Mappings","nodes":[{"content":"Generic-Text Routine Mappings","pos":[0,29]}]},{"content":"TCHAR.H routine","pos":[3999,4014]},{"content":"_UNICODE &amp; _MBCS not defined","pos":[4015,4043],"source":"_UNICODE & _MBCS not defined"},{"content":"_MBCS defined","pos":[4044,4057]},{"content":"_UNICODE defined","pos":[4058,4074]},{"pos":[4279,4457],"content":"For more information, see <bpt id=\"p1\">[</bpt>Format Specification Fields — scanf functions and wscanf Functions<ept id=\"p1\">](../../c-runtime-library/format-specification-fields-scanf-and-wscanf-functions.md)</ept>.","source":"For more information, see [Format Specification Fields — scanf functions and wscanf Functions](../../c-runtime-library/format-specification-fields-scanf-and-wscanf-functions.md)."},{"pos":[4466,4478],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"content":"Routine","pos":[4485,4492]},{"content":"Required header","pos":[4493,4508]},{"pos":[4553,4572],"content":"<ph id=\"ph1\">`scanf`</ph>, <ph id=\"ph2\">`_scanf_l`</ph>","source":"`scanf`, `_scanf_l`"},{"content":"<ph id=\"ph1\">\\&lt;</ph>stdio.h&gt;","pos":[4573,4583],"source":"\\<stdio.h>"},{"pos":[4588,4609],"content":"<ph id=\"ph1\">`wscanf`</ph>, <ph id=\"ph2\">`_wscanf_l`</ph>","source":"`wscanf`, `_wscanf_l`"},{"content":"<ph id=\"ph1\">\\&lt;</ph>stdio.h&gt; or <ph id=\"ph2\">\\&lt;</ph>wchar.h&gt;","pos":[4610,4634],"source":"\\<stdio.h> or \\<wchar.h>"},{"content":"The console is not supported in <ph id=\"ph1\">[!INCLUDE[win8_appname_long](../../build/includes/win8_appname_long_md.md)]</ph> apps.","pos":[4642,4755],"source":"The console is not supported in [!INCLUDE[win8_appname_long](../../build/includes/win8_appname_long_md.md)] apps."},{"content":"The standard stream handles that are associated with the console—<ph id=\"ph1\">`stdin`</ph>, <ph id=\"ph2\">`stdout`</ph>, and <ph id=\"ph3\">`stderr`</ph>—must be redirected before C run-time functions can use them in <ph id=\"ph4\">[!INCLUDE[win8_appname_long](../../build/includes/win8_appname_long_md.md)]</ph> apps.","pos":[4756,4997],"source":" The standard stream handles that are associated with the console—`stdin`, `stdout`, and `stderr`—must be redirected before C run-time functions can use them in [!INCLUDE[win8_appname_long](../../build/includes/win8_appname_long_md.md)] apps."},{"content":"For additional compatibility information, see <bpt id=\"p1\">[</bpt>Compatibility<ept id=\"p1\">](../../c-runtime-library/compatibility.md)</ept>.","pos":[4998,5102],"source":" For additional compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md)."},{"pos":[5111,5118],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[6204,6229],"content":".NET Framework Equivalent","linkify":".NET Framework Equivalent","nodes":[{"content":".NET Framework Equivalent","pos":[0,25]}]},{"pos":[6239,6329],"content":"<bpt id=\"p1\">[</bpt>System::Console::Read<ept id=\"p1\">](https://msdn.microsoft.com/en-us/library/system.console.read.aspx)</ept>","source":"[System::Console::Read](https://msdn.microsoft.com/en-us/library/system.console.read.aspx)"},{"pos":[6339,6437],"content":"<bpt id=\"p1\">[</bpt>System::Console::ReadLine<ept id=\"p1\">](https://msdn.microsoft.com/en-us/library/system.console.readline.aspx)</ept>","source":"[System::Console::ReadLine](https://msdn.microsoft.com/en-us/library/system.console.readline.aspx)"},{"pos":[6447,6572],"content":"See also <ph id=\"ph1\">`Parse`</ph> methods, such as <bpt id=\"p1\">[</bpt>System::Double::Parse<ept id=\"p1\">](https://msdn.microsoft.com/en-us/library/system.double.parse.aspx)</ept>.","source":"See also `Parse` methods, such as [System::Double::Parse](https://msdn.microsoft.com/en-us/library/system.double.parse.aspx)."},{"pos":[6581,6589],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Floating-Point Support<ept id=\"p1\">](../../c-runtime-library/floating-point-support.md)</ept><ph id=\"ph1\"> </ph>","pos":[6593,6669],"source":"[Floating-Point Support](../../c-runtime-library/floating-point-support.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Stream I/O<ept id=\"p1\">](../../c-runtime-library/stream-i-o.md)</ept><ph id=\"ph1\"> </ph>","pos":[6672,6725],"source":" [Stream I/O](../../c-runtime-library/stream-i-o.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Locale<ept id=\"p1\">](../../c-runtime-library/locale.md)</ept><ph id=\"ph1\"> </ph>","pos":[6728,6773],"source":" [Locale](../../c-runtime-library/locale.md) "},{"content":"<bpt id=\"p1\"> [</bpt>fscanf, _fscanf_l, fwscanf, _fwscanf_l<ept id=\"p1\">](../../c-runtime-library/reference/fscanf-fscanf-l-fwscanf-fwscanf-l.md)</ept><ph id=\"ph1\"> </ph>","pos":[6776,6890],"source":" [fscanf, _fscanf_l, fwscanf, _fwscanf_l](../../c-runtime-library/reference/fscanf-fscanf-l-fwscanf-fwscanf-l.md) "},{"content":"<bpt id=\"p1\"> [</bpt>printf, _printf_l, wprintf, _wprintf_l<ept id=\"p1\">](../../c-runtime-library/reference/printf-printf-l-wprintf-wprintf-l.md)</ept><ph id=\"ph1\"> </ph>","pos":[6893,7007],"source":" [printf, _printf_l, wprintf, _wprintf_l](../../c-runtime-library/reference/printf-printf-l-wprintf-wprintf-l.md) "},{"content":"<bpt id=\"p1\"> [</bpt>sprintf, _sprintf_l, swprintf, _swprintf_l, <ph id=\"ph1\">\\_</ph>_swprintf_l<ept id=\"p1\">](../../c-runtime-library/reference/sprintf-sprintf-l-swprintf-swprintf-l-swprintf-l.md)</ept><ph id=\"ph2\"> </ph>","pos":[7010,7158],"source":" [sprintf, _sprintf_l, swprintf, _swprintf_l, \\__swprintf_l](../../c-runtime-library/reference/sprintf-sprintf-l-swprintf-swprintf-l-swprintf-l.md) "},{"content":"<bpt id=\"p1\"> [</bpt>sscanf, _sscanf_l, swscanf, _swscanf_l<ept id=\"p1\">](../../c-runtime-library/reference/sscanf-sscanf-l-swscanf-swscanf-l.md)</ept>","pos":[7161,7274],"source":" [sscanf, _sscanf_l, swscanf, _swscanf_l](../../c-runtime-library/reference/sscanf-sscanf-l-swscanf-swscanf-l.md)"}],"content":"---\ntitle: \"scanf, _scanf_l, wscanf, _wscanf_l | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\napiname: \n  - \"_wscanf_l\"\n  - \"scanf\"\n  - \"_scanf_l\"\n  - \"wscanf\"\napilocation: \n  - \"msvcrt.dll\"\n  - \"msvcr80.dll\"\n  - \"msvcr90.dll\"\n  - \"msvcr100.dll\"\n  - \"msvcr100_clr0400.dll\"\n  - \"msvcr110.dll\"\n  - \"msvcr110_clr0400.dll\"\n  - \"msvcr120.dll\"\n  - \"msvcr120_clr0400.dll\"\n  - \"ucrtbase.dll\"\napitype: \"DLLExport\"\nf1_keywords: \n  - \"_tscanf\"\n  - \"_scanf_l\"\n  - \"wscanf\"\n  - \"_wscanf_l\"\n  - \"scanf\"\n  - \"_tscanf_l\"\ndev_langs: \n  - \"C++\"\n  - \"C\"\nhelpviewer_keywords: \n  - \"tscanf_l function\"\n  - \"_tscanf_l function\"\n  - \"reading data [C++], from input streams\"\n  - \"_tscanf function\"\n  - \"data [C++], reading from input stream\"\n  - \"scanf_l function\"\n  - \"scanf function\"\n  - \"wscanf function\"\n  - \"_scanf_l function\"\n  - \"tscanf function\"\n  - \"formatted data [C++], from input streams\"\n  - \"wscanf_l function\"\n  - \"_wscanf_l function\"\nms.assetid: 73eac607-117f-4be4-9ff0-4afd9cf3c848\ncaps.latest.revision: 25\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# scanf, _scanf_l, wscanf, _wscanf_l\nReads formatted data from the standard input stream. More secure versions of these function are available; see [scanf_s, _scanf_s_l, wscanf_s, _wscanf_s_l](../../c-runtime-library/reference/scanf-s-scanf-s-l-wscanf-s-wscanf-s-l.md).  \n  \n## Syntax  \n  \n```  \nint scanf(  \n   const char *format [,  \n   argument]...   \n);  \nint _scanf_l(  \n   const char *format,  \n   locale_t locale [,  \n   argument]...   \n);  \nint wscanf(  \n   const wchar_t *format [,  \n   argument]...   \n);  \nint _wscanf_l(  \n   const wchar_t *format,  \n   locale_t locale [,  \n   argument]...   \n);  \n```  \n  \n#### Parameters  \n `format`  \n Format control string.  \n  \n `argument`  \n Optional arguments.  \n  \n `locale`  \n The locale to use.  \n  \n## Return Value  \n Returns the number of fields successfully converted and assigned; the return value does not include fields that were read but not assigned. A return value of 0 indicates that no fields were assigned.  \n  \n If `format` is a `NULL` pointer, the invalid parameter handler is invoked, as described in [Parameter Validation](../../c-runtime-library/parameter-validation.md). If execution is allowed to continue, these functions return `EOF` and set `errno` to `EINVAL`.  \n  \n For information on these and other error codes, see [_doserrno, errno, _sys_errlist, and _sys_nerr](../../c-runtime-library/errno-doserrno-sys-errlist-and-sys-nerr.md).  \n  \n## Remarks  \n The `scanf` function reads data from the standard input stream `stdin` and writes the data into the location given by `argument`. Each `argument` must be a pointer to a variable of a type that corresponds to a type specifier in `format`. If copying takes place between strings that overlap, the behavior is undefined.  \n  \n> [!IMPORTANT]\n>  When reading a string with `scanf`, always specify a width for the `%s` format (for example, `\"%32s\"` instead of `\"%s\"`); otherwise, improperly formatted input can easily cause a buffer overrun. Alternately, consider using [scanf_s, _scanf_s_l, wscanf_s, _wscanf_s_l](../../c-runtime-library/reference/scanf-s-scanf-s-l-wscanf-s-wscanf-s-l.md) or [fgets](../../c-runtime-library/reference/fgets-fgetws.md).  \n  \n `wscanf` is a wide-character version of `scanf`; the `format` argument to `wscanf` is a wide-character string. `wscanf` and `scanf` behave identically if the stream is opened in ANSI mode. `scanf` doesn't currently support input from a UNICODE stream.  \n  \n The versions of these functions with the `_l` suffix are identical except that they use the locale parameter passed in instead of the current thread locale.  \n  \n### Generic-Text Routine Mappings  \n  \n|TCHAR.H routine|_UNICODE & _MBCS not defined|_MBCS defined|_UNICODE defined|  \n|---------------------|------------------------------------|--------------------|-----------------------|  \n|`_tscanf`|`scanf`|`scanf`|`wscanf`|  \n|`_tscanf_l`|`_scanf_l`|`_scanf_l`|`_wscanf_l`|  \n  \n For more information, see [Format Specification Fields — scanf functions and wscanf Functions](../../c-runtime-library/format-specification-fields-scanf-and-wscanf-functions.md).  \n  \n## Requirements  \n  \n|Routine|Required header|  \n|-------------|---------------------|  \n|`scanf`, `_scanf_l`|\\<stdio.h>|  \n|`wscanf`, `_wscanf_l`|\\<stdio.h> or \\<wchar.h>|  \n  \n The console is not supported in [!INCLUDE[win8_appname_long](../../build/includes/win8_appname_long_md.md)] apps. The standard stream handles that are associated with the console—`stdin`, `stdout`, and `stderr`—must be redirected before C run-time functions can use them in [!INCLUDE[win8_appname_long](../../build/includes/win8_appname_long_md.md)] apps. For additional compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md).  \n  \n## Example  \n  \n```  \n// crt_scanf.c  \n// compile with: /W3  \n /* This program uses the scanf and wscanf functions  \n  * to read formatted input.  \n  */  \n  \n#include <stdio.h>  \n  \nint main( void )  \n{  \n   int   i, result;  \n   float fp;  \n   char  c, s[81];  \n   wchar_t wc, ws[81];  \n   result = scanf( \"%d %f %c %C %80s %80S\", &i, &fp, &c, &wc, s, ws ); // C4996  \n   // Note: scanf and wscanf are deprecated; consider using scanf_s and wscanf_s  \n   printf( \"The number of fields input is %d\\n\", result );  \n   printf( \"The contents are: %d %f %c %C %s %S\\n\", i, fp, c, wc, s, ws);  \n   result = wscanf( L\"%d %f %hc %lc %80S %80ls\", &i, &fp, &c, &wc, s, ws ); // C4996  \n   wprintf( L\"The number of fields input is %d\\n\", result );  \n   wprintf( L\"The contents are: %d %f %C %c %hs %s\\n\", i, fp, c, wc, s, ws);  \n}  \n```  \n  \n```Output  \n  \n      71 98.6 h z Byte characters  \n36 92.3 y n Wide charactersThe number of fields input is 6  \nThe contents are: 71 98.599998 h z Byte characters  \nThe number of fields input is 6  \nThe contents are: 36 92.300003 y n Wide characters  \n```  \n  \n## .NET Framework Equivalent  \n  \n-   [System::Console::Read](https://msdn.microsoft.com/en-us/library/system.console.read.aspx)  \n  \n-   [System::Console::ReadLine](https://msdn.microsoft.com/en-us/library/system.console.readline.aspx)  \n  \n-   See also `Parse` methods, such as [System::Double::Parse](https://msdn.microsoft.com/en-us/library/system.double.parse.aspx).  \n  \n## See Also  \n [Floating-Point Support](../../c-runtime-library/floating-point-support.md)   \n [Stream I/O](../../c-runtime-library/stream-i-o.md)   \n [Locale](../../c-runtime-library/locale.md)   \n [fscanf, _fscanf_l, fwscanf, _fwscanf_l](../../c-runtime-library/reference/fscanf-fscanf-l-fwscanf-fwscanf-l.md)   \n [printf, _printf_l, wprintf, _wprintf_l](../../c-runtime-library/reference/printf-printf-l-wprintf-wprintf-l.md)   \n [sprintf, _sprintf_l, swprintf, _swprintf_l, \\__swprintf_l](../../c-runtime-library/reference/sprintf-sprintf-l-swprintf-swprintf-l-swprintf-l.md)   \n [sscanf, _sscanf_l, swscanf, _swscanf_l](../../c-runtime-library/reference/sscanf-sscanf-l-swscanf-swscanf-l.md)"}