{"nodes":[{"pos":[12,48],"content":"basic_ostream Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"basic_ostream Class | Microsoft Docs","pos":[0,36]}]},{"content":"basic_ostream Class","pos":[693,712]},{"pos":[713,1100],"content":"This template class describes an object that controls insertion of elements and encoded objects into a stream buffer with elements of type <bpt id=\"p1\">**</bpt>Elem<ept id=\"p1\">**</ept>, also known as <bpt id=\"p2\">[</bpt>char_type<ept id=\"p2\">](../standard-library/basic-ios-class.md#basic_ios__char_type)</ept>, whose character traits are determined by the class <bpt id=\"p3\">**</bpt>Tr<ept id=\"p3\">**</ept>, also known as <bpt id=\"p4\">[</bpt>traits_type<ept id=\"p4\">](../standard-library/basic-ios-class.md#basic_ios__traits_type)</ept>.","source":"This template class describes an object that controls insertion of elements and encoded objects into a stream buffer with elements of type **Elem**, also known as [char_type](../standard-library/basic-ios-class.md#basic_ios__char_type), whose character traits are determined by the class **Tr**, also known as [traits_type](../standard-library/basic-ios-class.md#basic_ios__traits_type)."},{"content":"Syntax","pos":[1109,1115]},{"content":"Parameters","pos":[1254,1264]},{"content":"A <ph id=\"ph1\">`char_type`</ph>.","pos":[1278,1292],"source":" A `char_type`."},{"content":"The character <ph id=\"ph1\">`traits_type`</ph>.","pos":[1307,1335],"source":" The character `traits_type`."},{"content":"Remarks","pos":[1344,1351]},{"content":"Most of the member functions that overload <bpt id=\"p1\">[</bpt>operator&lt;&lt;<ept id=\"p1\">](#basic_ostream__operator_lt__lt_)</ept> are formatted output functions.","pos":[1355,1476],"source":"Most of the member functions that overload [operator<<](#basic_ostream__operator_lt__lt_) are formatted output functions."},{"content":"They follow the pattern:","pos":[1477,1501]},{"content":"Two other member functions are unformatted output functions.","pos":[1868,1928]},{"content":"They follow the pattern:","pos":[1929,1953]},{"pos":[2307,2473],"content":"Both groups of functions call <bpt id=\"p1\">[</bpt>setstate<ept id=\"p1\">](../standard-library/basic-ios-class.md#basic_ios__setstate)</ept><bpt id=\"p2\">**</bpt>(badbit)<ept id=\"p2\">**</ept> if they encounter a failure while inserting elements.","source":"Both groups of functions call [setstate](../standard-library/basic-ios-class.md#basic_ios__setstate)**(badbit)** if they encounter a failure while inserting elements."},{"pos":[2480,2654],"content":"An object of class basic_istream<ph id=\"ph1\">\\&lt;</ph> <bpt id=\"p1\">**</bpt>Elem<ept id=\"p1\">**</ept>, <bpt id=\"p2\">**</bpt>Tr<ept id=\"p2\">**</ept>&gt; stores only a virtual public base object of class <bpt id=\"p3\">[</bpt>basic_ios<ept id=\"p3\">](../standard-library/basic-ios-class.md)</ept><bpt id=\"p4\">**</bpt><ph id=\"ph2\">\\&lt;</ph>Elem<ept id=\"p4\">**</ept>, <bpt id=\"p5\">**</bpt>Tr&gt;<ept id=\"p5\">**</ept>.","source":"An object of class basic_istream\\< **Elem**, **Tr**> stores only a virtual public base object of class [basic_ios](../standard-library/basic-ios-class.md)**\\<Elem**, **Tr>**."},{"content":"Example","pos":[2663,2670]},{"pos":[2674,2797],"content":"See the example for <bpt id=\"p1\">[</bpt>basic_ofstream Class<ept id=\"p1\">](../standard-library/basic-ofstream-class.md)</ept> to learn more about output streams.","source":"See the example for [basic_ofstream Class](../standard-library/basic-ofstream-class.md) to learn more about output streams."},{"content":"Constructors","pos":[2807,2819]},{"content":"basic_ostream","pos":[2841,2854]},{"pos":[2887,2923],"content":"Constructs a <ph id=\"ph1\">`basic_ostream`</ph> object.","source":"Constructs a `basic_ostream` object."},{"content":"Member Functions","pos":[2934,2950]},{"content":"flush","pos":[2972,2977]},{"content":"Flushes the buffer.","pos":[3002,3021]},{"content":"put","pos":[3027,3030]},{"content":"Puts a character in a stream.","pos":[3053,3082]},{"content":"seekp","pos":[3088,3093]},{"content":"Resets position in output stream.","pos":[3118,3151]},{"content":"sentry","pos":[3157,3163]},{"content":"The nested class describes an object whose declaration structures the formatted output functions and the unformatted output functions.","pos":[3189,3323]},{"content":"swap","pos":[3329,3333]},{"pos":[3364,3465],"content":"Exchanges the values of this <ph id=\"ph1\">`basic_ostream`</ph> object for those of the provided <ph id=\"ph2\">`basic_ostream`</ph> object.","source":"Exchanges the values of this `basic_ostream` object for those of the provided `basic_ostream` object."},{"content":"tellp","pos":[3471,3476]},{"content":"Reports position in output stream.","pos":[3501,3535]},{"content":"write","pos":[3541,3546]},{"content":"Puts characters in a stream.","pos":[3571,3599]},{"content":"Operators","pos":[3610,3619]},{"content":"operator=","pos":[3641,3650]},{"pos":[3680,3762],"content":"Assigns the value of the provided <ph id=\"ph1\">`basic_ostream`</ph> object parameter to this object.","source":"Assigns the value of the provided `basic_ostream` object parameter to this object."},{"content":"operator&lt;&lt;","pos":[3768,3778],"source":"operator<<"},{"content":"Writes to the stream.","pos":[3812,3833]},{"content":"Requirements","pos":[3841,3853]},{"pos":[3857,3879],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> <ph id=\"ph1\">\\&lt;</ph>ostream&gt;","source":"**Header:** \\<ostream>"},{"pos":[3886,3904],"content":"<bpt id=\"p1\">**</bpt>Namespace:<ept id=\"p1\">**</ept> std","source":"**Namespace:** std"},{"pos":[3959,3987],"content":"basic_ostream::basic_ostream"},{"pos":[3991,4027],"content":"Constructs a <ph id=\"ph1\">`basic_ostream`</ph> object.","source":"Constructs a `basic_ostream` object."},{"content":"Parameters","pos":[4182,4192]},{"content":"An object of type <bpt id=\"p1\">[</bpt>basic_streambuf<ept id=\"p1\">](../standard-library/basic-streambuf-class.md)</ept>.","pos":[4209,4291],"source":" An object of type [basic_streambuf](../standard-library/basic-streambuf-class.md)."},{"content":"if this is a standard stream; otherwise, <ph id=\"ph1\">`false`</ph>.","pos":[4317,4366],"source":" if this is a standard stream; otherwise, `false`."},{"content":"An rvalue reference to an object of type <ph id=\"ph1\">`basic_ostream`</ph>.","pos":[4385,4442],"source":" An rvalue reference to an object of type `basic_ostream`."},{"content":"Remarks","pos":[4452,4459]},{"content":"The first constructor initializes the base class by calling <bpt id=\"p1\">[</bpt>init<ept id=\"p1\">](../standard-library/basic-ios-class.md#basic_ios__init)</ept>(<ph id=\"ph1\">` strbuf`</ph>).","pos":[4463,4597],"source":"The first constructor initializes the base class by calling [init](../standard-library/basic-ios-class.md#basic_ios__init)(` strbuf`)."},{"content":"The second constructor initializes the base class by calling <bpt id=\"p1\">[</bpt>basic_ios::move<ept id=\"p1\">](../standard-library/basic-ios-class.md#basic_ios__move)</ept><ph id=\"ph1\">`(`` right``)`</ph>.","pos":[4598,4747],"source":" The second constructor initializes the base class by calling [basic_ios::move](../standard-library/basic-ios-class.md#basic_ios__move)`(`` right``)`."},{"content":"Example","pos":[4757,4764]},{"pos":[4769,4933],"content":"See the example for <bpt id=\"p1\">[</bpt>basic_ofstream::basic_ofstream<ept id=\"p1\">](../standard-library/basic-ofstream-class.md#basic_ofstream__basic_ofstream)</ept> to learn more about output streams.","source":"See the example for [basic_ofstream::basic_ofstream](../standard-library/basic-ofstream-class.md#basic_ofstream__basic_ofstream) to learn more about output streams."},{"pos":[4980,5000],"content":"basic_ostream::flush"},{"content":"Flushes the buffer.","pos":[5004,5023]},{"content":"Return Value","pos":[5082,5094]},{"content":"A reference to the basic_ostream object.","pos":[5098,5138]},{"content":"Remarks","pos":[5148,5155]},{"content":"If <bpt id=\"p1\">[</bpt>rdbuf<ept id=\"p1\">](../standard-library/basic-ios-class.md#basic_ios__rdbuf)</ept> is not a null pointer, the function calls <bpt id=\"p2\">**</bpt>rdbuf-&gt;<ept id=\"p2\">**</ept><bpt id=\"p3\">[</bpt>pubsync<ept id=\"p3\">](../standard-library/basic-streambuf-class.md#basic_streambuf__pubsync)</ept>.","pos":[5159,5361],"source":"If [rdbuf](../standard-library/basic-ios-class.md#basic_ios__rdbuf) is not a null pointer, the function calls **rdbuf->**[pubsync](../standard-library/basic-streambuf-class.md#basic_streambuf__pubsync)."},{"content":"If that returns -1, the function calls <bpt id=\"p1\">[</bpt>setstate<ept id=\"p1\">](../standard-library/basic-ios-class.md#basic_ios__setstate)</ept>(<bpt id=\"p2\">**</bpt>badbit<ept id=\"p2\">**</ept>).","pos":[5362,5484],"source":" If that returns -1, the function calls [setstate](../standard-library/basic-ios-class.md#basic_ios__setstate)(**badbit**)."},{"content":"It returns <bpt id=\"p1\">**</bpt><ph id=\"ph1\">\\*</ph>this<ept id=\"p1\">**</ept>.","pos":[5485,5507],"source":" It returns **\\*this**."},{"content":"Example","pos":[5517,5524]},{"pos":[5794,5817],"content":"basic_ostream::operator"},{"content":"Writes to the stream.","pos":[5829,5850]},{"content":"Parameters","pos":[6913,6923]},{"content":"A function pointer.","pos":[6936,6955]},{"content":"A pointer to a <bpt id=\"p1\">**</bpt>stream_buf<ept id=\"p1\">**</ept> object.","pos":[6975,7012],"source":" A pointer to a **stream_buf** object."},{"content":"An element to write to the stream.","pos":[7029,7063]},{"content":"Return Value","pos":[7073,7085]},{"content":"A reference to the basic_ostream object.","pos":[7089,7129]},{"content":"Remarks","pos":[7139,7146]},{"content":"The <ph id=\"ph1\">`&lt;ostream&gt;`</ph> header also defines several global insertion operators.","pos":[7150,7221],"source":"The `<ostream>` header also defines several global insertion operators."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>operator&lt;&lt; (<ph id=\"ph1\">\\&lt;</ph>ostream&gt;)<ept id=\"p1\">](../standard-library/ostream-operators.md#operator_lt__lt_)</ept>.","pos":[7222,7333],"source":" For more information, see [operator<< (\\<ostream>)](../standard-library/ostream-operators.md#operator_lt__lt_)."},{"content":"The first member function ensures that an expression of the form <bpt id=\"p1\">**</bpt>ostr &lt;&lt; endl<ept id=\"p1\">**</ept> calls <bpt id=\"p2\">[</bpt>endl<ept id=\"p2\">](../standard-library/ostream-functions.md#endl)</ept><bpt id=\"p3\">**</bpt>(ostr)<ept id=\"p3\">**</ept>, and then returns <bpt id=\"p4\">**</bpt><ph id=\"ph1\">\\*</ph>this<ept id=\"p4\">**</ept>.","pos":[7340,7521],"source":"The first member function ensures that an expression of the form **ostr << endl** calls [endl](../standard-library/ostream-functions.md#endl)**(ostr)**, and then returns **\\*this**."},{"content":"The second and third functions ensure that other manipulators, such as <bpt id=\"p1\">[</bpt>hex<ept id=\"p1\">](../standard-library/ios-functions.md#hex)</ept>, behave similarly.","pos":[7522,7659],"source":" The second and third functions ensure that other manipulators, such as [hex](../standard-library/ios-functions.md#hex), behave similarly."},{"content":"The remaining functions are all formatted output functions.","pos":[7660,7719]},{"content":"The function","pos":[7726,7738]},{"content":"extracts elements from <ph id=\"ph1\">` strbuf`</ph>, if <ph id=\"ph2\">` strbuf`</ph> is not a null pointer, and inserts them.","pos":[7832,7919],"source":"extracts elements from ` strbuf`, if ` strbuf` is not a null pointer, and inserts them."},{"content":"Extraction stops on end of file, or if an extraction throws an exception (which is rethrown).","pos":[7920,8013]},{"content":"It also stops, without extracting the element in question, if an insertion fails.","pos":[8014,8095]},{"content":"If the function inserts no elements, or if an extraction throws an exception, the function calls <bpt id=\"p1\">[</bpt>setstate<ept id=\"p1\">](../standard-library/basic-ios-class.md#basic_ios__setstate)</ept>(<bpt id=\"p2\">**</bpt>failbit<ept id=\"p2\">**</ept>).","pos":[8096,8277],"source":" If the function inserts no elements, or if an extraction throws an exception, the function calls [setstate](../standard-library/basic-ios-class.md#basic_ios__setstate)(**failbit**)."},{"content":"In any case, the function returns <bpt id=\"p1\">**</bpt><ph id=\"ph1\">\\*</ph>this<ept id=\"p1\">**</ept>.","pos":[8278,8323],"source":" In any case, the function returns **\\*this**."},{"content":"The function","pos":[8330,8342]},{"content":"converts _<ph id=\"ph1\">`Val`</ph> to a Boolean field and inserts it by calling <bpt id=\"p1\">[</bpt>use_facet<ept id=\"p1\">](../standard-library/basic-filebuf-class.md#basic_filebuf__open)</ept><bpt id=\"p2\">**</bpt>&lt;num_put<ph id=\"ph2\">\\&lt;</ph>Elem, OutIt&gt;<ept id=\"p2\">**</ept><ph id=\"ph3\">`(`</ph><bpt id=\"p3\">[</bpt>getloc<ept id=\"p3\">](../standard-library/ios-base-class.md#ios_base__getloc)</ept>).","pos":[8411,8642],"source":"converts _`Val` to a Boolean field and inserts it by calling [use_facet](../standard-library/basic-filebuf-class.md#basic_filebuf__open)**<num_put\\<Elem, OutIt>**`(`[getloc](../standard-library/ios-base-class.md#ios_base__getloc))."},{"content":"<bpt id=\"p1\">[</bpt>put<ept id=\"p1\">](#basic_ostream__put)</ept>(<bpt id=\"p2\">**</bpt>OutIt<ept id=\"p2\">**</ept>(<bpt id=\"p3\">[</bpt>rdbuf<ept id=\"p3\">](../standard-library/basic-ios-class.md#basic_ios__rdbuf)</ept>), <bpt id=\"p4\">**</bpt><ph id=\"ph1\">\\*</ph>this<ept id=\"p4\">**</ept>, <ph id=\"ph2\">`getloc`</ph>, <bpt id=\"p5\">**</bpt>val<ept id=\"p5\">**</ept>).","pos":[8643,8778],"source":"[put](#basic_ostream__put)(**OutIt**([rdbuf](../standard-library/basic-ios-class.md#basic_ios__rdbuf)), **\\*this**, `getloc`, **val**)."},{"content":"Here, <bpt id=\"p1\">**</bpt>OutIt<ept id=\"p1\">**</ept> is defined as <bpt id=\"p2\">[</bpt>ostreambuf_iterator<ept id=\"p2\">](../standard-library/ostreambuf-iterator-class.md)</ept><bpt id=\"p3\">**</bpt><ph id=\"ph1\">\\&lt;</ph>Elem, Tr&gt;<ept id=\"p3\">**</ept>.","pos":[8779,8896],"source":" Here, **OutIt** is defined as [ostreambuf_iterator](../standard-library/ostreambuf-iterator-class.md)**\\<Elem, Tr>**."},{"content":"The function returns <bpt id=\"p1\">**</bpt><ph id=\"ph1\">\\*</ph>this<ept id=\"p1\">**</ept>.","pos":[8897,8929],"source":" The function returns **\\*this**."},{"content":"The functions","pos":[8936,8949]},{"content":"each convert <ph id=\"ph1\">` val`</ph> to a numeric field and insert it by calling <bpt id=\"p1\">**</bpt>use_facet&lt;num_put<ph id=\"ph2\">\\&lt;</ph>Elem, OutIt&gt;<ept id=\"p1\">**</ept>(<ph id=\"ph3\">`getloc`</ph>).","pos":[9454,9564],"source":"each convert ` val` to a numeric field and insert it by calling **use_facet<num_put\\<Elem, OutIt>**(`getloc`)."},{"content":"<bpt id=\"p1\">**</bpt>put<ept id=\"p1\">**</ept>(<bpt id=\"p2\">**</bpt>OutIt<ept id=\"p2\">**</ept>(<ph id=\"ph1\">`rdbuf`</ph>), <bpt id=\"p3\">**</bpt><ph id=\"ph2\">\\*</ph>this<ept id=\"p3\">**</ept>, <ph id=\"ph3\">`getloc`</ph>, <bpt id=\"p4\">**</bpt>val<ept id=\"p4\">**</ept>).","pos":[9565,9624],"source":"**put**(**OutIt**(`rdbuf`), **\\*this**, `getloc`, **val**)."},{"content":"Here, <bpt id=\"p1\">**</bpt>OutIt<ept id=\"p1\">**</ept> is defined as <bpt id=\"p2\">**</bpt>ostreambuf_iterator<ph id=\"ph1\">\\&lt;</ph>Elem, Tr&gt;<ept id=\"p2\">**</ept>.","pos":[9625,9690],"source":" Here, **OutIt** is defined as **ostreambuf_iterator\\<Elem, Tr>**."},{"content":"The function returns <bpt id=\"p1\">**</bpt><ph id=\"ph1\">\\*</ph>this<ept id=\"p1\">**</ept>.","pos":[9691,9723],"source":" The function returns **\\*this**."},{"content":"The functions","pos":[9730,9743]},{"content":"each convert <ph id=\"ph1\">`val`</ph> to a numeric field and insert it by calling <bpt id=\"p1\">**</bpt>use_facet&lt;num_put<ph id=\"ph2\">\\&lt;</ph>Elem, OutIt&gt;<ept id=\"p1\">**</ept>(<ph id=\"ph3\">`getloc`</ph>)<bpt id=\"p2\">**</bpt>. put<ept id=\"p2\">**</ept>(<bpt id=\"p3\">**</bpt>OutIt<ept id=\"p3\">**</ept>(<ph id=\"ph4\">`rdbuf`</ph>), <bpt id=\"p4\">**</bpt><ph id=\"ph5\">\\*</ph>this<ept id=\"p4\">**</ept>, <ph id=\"ph6\">`getloc`</ph>, <bpt id=\"p5\">**</bpt>val<ept id=\"p5\">**</ept>).","pos":[9916,10085],"source":"each convert `val` to a numeric field and insert it by calling **use_facet<num_put\\<Elem, OutIt>**(`getloc`)**. put**(**OutIt**(`rdbuf`), **\\*this**, `getloc`, **val**)."},{"content":"Here, <bpt id=\"p1\">**</bpt>OutIt<ept id=\"p1\">**</ept> is defined as <bpt id=\"p2\">**</bpt>ostreambuf_iterator<ph id=\"ph1\">\\&lt;</ph>Elem, Tr&gt;<ept id=\"p2\">**</ept>.","pos":[10086,10151],"source":" Here, **OutIt** is defined as **ostreambuf_iterator\\<Elem, Tr>**."},{"content":"The function returns <bpt id=\"p1\">**</bpt><ph id=\"ph1\">\\*</ph>this<ept id=\"p1\">**</ept>.","pos":[10152,10184],"source":" The function returns **\\*this**."},{"content":"Example","pos":[10194,10201]},{"pos":[11114,11138],"content":"basic_ostream::operator="},{"pos":[11142,11222],"content":"Assigns values for the provided <ph id=\"ph1\">`basic_ostream`</ph> object parameter to this object.","source":"Assigns values for the provided `basic_ostream` object parameter to this object."},{"content":"Parameters","pos":[11296,11306]},{"content":"An <ph id=\"ph1\">`rvalue`</ph> reference to a <ph id=\"ph2\">`basic_ostream`</ph> object.","pos":[11322,11372],"source":" An `rvalue` reference to a `basic_ostream` object."},{"content":"Remarks","pos":[11382,11389]},{"pos":[11393,11439],"content":"The member operator calls swap <ph id=\"ph1\">`(`` right``)`</ph>.","source":"The member operator calls swap `(`` right``)`."},{"pos":[11484,11502],"content":"basic_ostream::put"},{"content":"Puts a character in a stream.","pos":[11506,11535]},{"content":"Parameters","pos":[11605,11615]},{"content":"A character.","pos":[11628,11640]},{"content":"Return Value","pos":[11650,11662]},{"content":"A reference to the basic_ostream object.","pos":[11666,11706]},{"content":"Remarks","pos":[11716,11723]},{"content":"The unformatted output function inserts the element <ph id=\"ph1\">`_Ch`</ph>.","pos":[11727,11785],"source":"The unformatted output function inserts the element `_Ch`."},{"content":"It returns <bpt id=\"p1\">**</bpt><ph id=\"ph1\">\\*</ph>this<ept id=\"p1\">**</ept>.","pos":[11786,11808],"source":" It returns **\\*this**."},{"content":"Example","pos":[11818,11825]},{"pos":[12110,12130],"content":"basic_ostream::seekp"},{"content":"Reset position in output stream.","pos":[12134,12166]},{"content":"Parameters","pos":[12310,12320]},{"content":"The position in the stream.","pos":[12334,12361]},{"content":"The offset relative to <ph id=\"ph1\">`_Way`</ph>.","pos":[12378,12408],"source":" The offset relative to `_Way`."},{"content":"One of the <bpt id=\"p1\">[</bpt>ios_base::seekdir<ept id=\"p1\">](../standard-library/ios-base-class.md#ios_base__seekdir)</ept> enumerations.","pos":[12425,12526],"source":" One of the [ios_base::seekdir](../standard-library/ios-base-class.md#ios_base__seekdir) enumerations."},{"content":"Return Value","pos":[12536,12548]},{"content":"A reference to the basic_ostream object.","pos":[12552,12592]},{"content":"Remarks","pos":[12602,12609]},{"content":"If <bpt id=\"p1\">[</bpt>fail<ept id=\"p1\">](../standard-library/basic-ios-class.md#basic_ios__fail)</ept> is <bpt id=\"p2\">**</bpt>false<ept id=\"p2\">**</ept>, the first member function calls <bpt id=\"p3\">**</bpt>newpos =<ept id=\"p3\">**</ept> <bpt id=\"p4\">[</bpt>rdbuf<ept id=\"p4\">](../standard-library/basic-ios-class.md#basic_ios__rdbuf)</ept><bpt id=\"p5\">**</bpt><ph id=\"ph1\">-&gt;</ph><ept id=\"p5\">**</ept> <bpt id=\"p6\">[</bpt>pubseekpos<ept id=\"p6\">](../standard-library/basic-streambuf-class.md#basic_streambuf__pubseekpos)</ept>(_<bpt id=\"p7\">*</bpt>Pos<ept id=\"p7\">*</ept>), for some <ph id=\"ph2\">`pos_type`</ph> temporary object <bpt id=\"p8\">**</bpt>newpos<ept id=\"p8\">**</ept>.","pos":[12613,12953],"source":"If [fail](../standard-library/basic-ios-class.md#basic_ios__fail) is **false**, the first member function calls **newpos =** [rdbuf](../standard-library/basic-ios-class.md#basic_ios__rdbuf)**->** [pubseekpos](../standard-library/basic-streambuf-class.md#basic_streambuf__pubseekpos)(_*Pos*), for some `pos_type` temporary object **newpos**."},{"content":"If <bpt id=\"p1\">**</bpt>fail<ept id=\"p1\">**</ept> is false, the second function calls <bpt id=\"p2\">**</bpt>newpos = rdbuf-&gt;<ept id=\"p2\">**</ept> <bpt id=\"p3\">[</bpt>pubseekoff<ept id=\"p3\">](../standard-library/basic-streambuf-class.md#basic_streambuf__pubseekoff)</ept>(<bpt id=\"p4\">*</bpt>_Off, _Way<ept id=\"p4\">*</ept>).","pos":[12954,13124],"source":" If **fail** is false, the second function calls **newpos = rdbuf->** [pubseekoff](../standard-library/basic-streambuf-class.md#basic_streambuf__pubseekoff)(*_Off, _Way*)."},{"content":"In either case, if (<ph id=\"ph1\">`off_type`</ph>)<bpt id=\"p1\">**</bpt>newpos ==<ept id=\"p1\">**</ept> (<ph id=\"ph2\">`off_type`</ph>)(-1) (the positioning operation fails), then the function calls <bpt id=\"p2\">**</bpt>istr.<ept id=\"p2\">**</ept><bpt id=\"p3\">[</bpt>setstate<ept id=\"p3\">](../standard-library/basic-ios-class.md#basic_ios__setstate)</ept>(<bpt id=\"p4\">**</bpt>failbit<ept id=\"p4\">**</ept>).","pos":[13125,13339],"source":" In either case, if (`off_type`)**newpos ==** (`off_type`)(-1) (the positioning operation fails), then the function calls **istr.**[setstate](../standard-library/basic-ios-class.md#basic_ios__setstate)(**failbit**)."},{"content":"Both functions return <bpt id=\"p1\">**</bpt><ph id=\"ph1\">\\*</ph>this<ept id=\"p1\">**</ept>.","pos":[13340,13373],"source":" Both functions return **\\*this**."},{"content":"Example","pos":[13383,13390]},{"pos":[13964,13985],"content":"basic_ostream::sentry"},{"content":"The nested class describes an object whose declaration structures the formatted output functions and the unformatted output functions.","pos":[13989,14123]},{"content":"class sentry {","pos":[14129,14143]},{"content":"public:","pos":[14149,14156]},{"content":"explicit sentry(basic_ostream<ph id=\"ph1\">\\&lt;</ph>Elem, Tr&gt;&amp; _Ostr); operator bool() const; ~sentry(); };","pos":[14162,14257],"source":"   explicit sentry(basic_ostream\\<Elem, Tr>& _Ostr);\n   operator bool() const;\n   ~sentry();\n   };"},{"content":"Remarks","pos":[14267,14274]},{"content":"The nested class describes an object whose declaration structures the formatted output functions and the unformatted output functions.","pos":[14278,14412]},{"content":"If <bpt id=\"p1\">**</bpt>ostr.<ept id=\"p1\">**</ept><bpt id=\"p2\">[</bpt>good<ept id=\"p2\">](../standard-library/basic-ios-class.md#basic_ios__good)</ept> is <bpt id=\"p3\">**</bpt>true<ept id=\"p3\">**</ept> and <bpt id=\"p4\">**</bpt>ostr.<ept id=\"p4\">**</ept><bpt id=\"p5\">[</bpt>tie<ept id=\"p5\">](../standard-library/basic-ios-class.md#basic_ios__tie)</ept> is not a null pointer, the constructor calls <bpt id=\"p6\">**</bpt>ostr.tie-&gt;<ept id=\"p6\">**</ept><bpt id=\"p7\">[</bpt>flush<ept id=\"p7\">](#basic_ostream__flush)</ept>.","pos":[14413,14664],"source":" If **ostr.**[good](../standard-library/basic-ios-class.md#basic_ios__good) is **true** and **ostr.**[tie](../standard-library/basic-ios-class.md#basic_ios__tie) is not a null pointer, the constructor calls **ostr.tie->**[flush](#basic_ostream__flush)."},{"content":"The constructor then stores the value returned by <bpt id=\"p1\">**</bpt>ostr.good<ept id=\"p1\">**</ept> in <bpt id=\"p2\">**</bpt>status<ept id=\"p2\">**</ept>.","pos":[14665,14743],"source":" The constructor then stores the value returned by **ostr.good** in **status**."},{"content":"A later call to <bpt id=\"p1\">**</bpt>operator bool<ept id=\"p1\">**</ept> delivers this stored value.","pos":[14744,14805],"source":" A later call to **operator bool** delivers this stored value."},{"pos":[14812,15047],"content":"If <ph id=\"ph1\">`uncaught_exception`</ph> returns <bpt id=\"p1\">**</bpt>false<ept id=\"p1\">**</ept> and <bpt id=\"p2\">[</bpt>flags<ept id=\"p2\">](../standard-library/ios-base-class.md#ios_base__flags)</ept> <bpt id=\"p3\">**</bpt><ph id=\"ph2\">&amp;</ph><ept id=\"p3\">**</ept> <bpt id=\"p4\">[</bpt>unitbuf<ept id=\"p4\">](../standard-library/ios-functions.md#unitbuf)</ept> is nonzero, the destructor calls <bpt id=\"p5\">[</bpt>flush<ept id=\"p5\">](#basic_ostream__flush)</ept>.","source":"If `uncaught_exception` returns **false** and [flags](../standard-library/ios-base-class.md#ios_base__flags) **&** [unitbuf](../standard-library/ios-functions.md#unitbuf) is nonzero, the destructor calls [flush](#basic_ostream__flush)."},{"pos":[15093,15112],"content":"basic_ostream::swap"},{"pos":[15116,15215],"content":"Exchanges the values of this <ph id=\"ph1\">`basic_ostream`</ph> object for the values of the provided <ph id=\"ph2\">`basic_ostream`</ph>.","source":"Exchanges the values of this `basic_ostream` object for the values of the provided `basic_ostream`."},{"content":"Parameters","pos":[15273,15283]},{"content":"A reference to a <ph id=\"ph1\">`basic_ostream`</ph> object.","pos":[15299,15339],"source":" A reference to a `basic_ostream` object."},{"content":"Remarks","pos":[15349,15356]},{"pos":[15360,15543],"content":"The member function calls <bpt id=\"p1\">[</bpt>basic_ios::swap<ept id=\"p1\">](../standard-library/basic-ios-class.md#basic_ios__swap)</ept><ph id=\"ph1\">`(`` right``)`</ph> to exchange the contents of this object for the contents of <ph id=\"ph2\">` right`</ph>.","source":"The member function calls [basic_ios::swap](../standard-library/basic-ios-class.md#basic_ios__swap)`(`` right``)` to exchange the contents of this object for the contents of ` right`."},{"pos":[15590,15610],"content":"basic_ostream::tellp"},{"content":"Report position in output stream.","pos":[15614,15647]},{"content":"Return Value","pos":[15690,15702]},{"content":"Position in output stream.","pos":[15706,15732]},{"content":"Remarks","pos":[15742,15749]},{"content":"If <bpt id=\"p1\">[</bpt>fail<ept id=\"p1\">](../standard-library/basic-ios-class.md#basic_ios__fail)</ept> is <bpt id=\"p2\">**</bpt>false<ept id=\"p2\">**</ept>, the member function returns <bpt id=\"p3\">[</bpt>rdbuf<ept id=\"p3\">](../standard-library/basic-ios-class.md#basic_ios__rdbuf)</ept><bpt id=\"p4\">**</bpt><ph id=\"ph1\">-&gt;</ph><ept id=\"p4\">**</ept> <bpt id=\"p5\">[</bpt>pubseekoff<ept id=\"p5\">](../standard-library/basic-streambuf-class.md#basic_streambuf__pubseekoff)</ept>(0, <ph id=\"ph2\">`cur`</ph>, <bpt id=\"p6\">**</bpt>in<ept id=\"p6\">**</ept>).","pos":[15753,16037],"source":"If [fail](../standard-library/basic-ios-class.md#basic_ios__fail) is **false**, the member function returns [rdbuf](../standard-library/basic-ios-class.md#basic_ios__rdbuf)**->** [pubseekoff](../standard-library/basic-streambuf-class.md#basic_streambuf__pubseekoff)(0, `cur`, **in**)."},{"content":"Otherwise, it returns <ph id=\"ph1\">`pos_type`</ph>(-1).","pos":[16038,16075],"source":" Otherwise, it returns `pos_type`(-1)."},{"content":"Example","pos":[16085,16092]},{"pos":[16097,16161],"content":"See <bpt id=\"p1\">[</bpt>seekp<ept id=\"p1\">](#basic_ostream__seekp)</ept> for an example using <ph id=\"ph1\">`tellp`</ph>.","source":"See [seekp](#basic_ostream__seekp) for an example using `tellp`."},{"pos":[16208,16228],"content":"basic_ostream::write"},{"content":"Put characters in a stream.","pos":[16232,16259]},{"content":"Parameters","pos":[16356,16366]},{"content":"Count of characters to put into the stream.","pos":[16382,16425]},{"content":"Characters to put into the stream.","pos":[16442,16476]},{"content":"Return Value","pos":[16486,16498]},{"content":"A reference to the basic_ostream object.","pos":[16502,16542]},{"content":"Remarks","pos":[16552,16559]},{"pos":[16563,16703],"content":"The <bpt id=\"p1\">[</bpt>unformatted output function<ept id=\"p1\">](../standard-library/basic-ostream-class.md)</ept> inserts the sequence of <ph id=\"ph1\">` count`</ph> elements beginning at <ph id=\"ph2\">` str`</ph>.","source":"The [unformatted output function](../standard-library/basic-ostream-class.md) inserts the sequence of ` count` elements beginning at ` str`."},{"content":"Example","pos":[16713,16720]},{"pos":[16725,16819],"content":"See <bpt id=\"p1\">[</bpt>streamsize<ept id=\"p1\">](../standard-library/ios-typedefs.md#streamsize)</ept> for an example using <ph id=\"ph1\">`write`</ph>.","source":"See [streamsize](../standard-library/ios-typedefs.md#streamsize) for an example using `write`."},{"content":"See Also","pos":[16828,16836]},{"content":"Thread Safety in the C++ Standard Library","pos":[16841,16882]},{"content":"iostream Programming","pos":[16955,16975]},{"content":"iostreams Conventions","pos":[17027,17048]}],"content":"---\ntitle: \"basic_ostream Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"std::basic_ostream\"\n  - \"std.basic_ostream\"\n  - \"ostream/std::basic_ostream\"\n  - \"basic_ostream\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"basic_ostream class\"\nms.assetid: 5baadc65-b662-4fab-8c9f-94457c58cda1\ncaps.latest.revision: 24\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# basic_ostream Class\nThis template class describes an object that controls insertion of elements and encoded objects into a stream buffer with elements of type **Elem**, also known as [char_type](../standard-library/basic-ios-class.md#basic_ios__char_type), whose character traits are determined by the class **Tr**, also known as [traits_type](../standard-library/basic-ios-class.md#basic_ios__traits_type).  \n  \n## Syntax  \n  \n```  \ntemplate <class Elem, class Tr = char_traits<Elem>>  \nclass basic_ostream : virtual public basic_ios<Elem, Tr>  \n```  \n  \n#### Parameters  \n `Elem`  \n A `char_type`.  \n  \n `Tr`  \n The character `traits_type`.  \n  \n## Remarks  \n Most of the member functions that overload [operator<<](#basic_ostream__operator_lt__lt_) are formatted output functions. They follow the pattern:  \n  \n```  \niostate state = goodbit;  \nconst sentry ok(*this);\n\nif (ok)  \n {try  \n {<convert and insert elements  \n    accumulate flags in state> }  \n    catch (...)  \n {try  \n {setstate(badbit);\n\n}  \n    catch (...)  \n {}  \n    if ((exceptions()& badbit) != 0)  \n    throw; }}  \nwidth(0);\n// Except for operator<<(Elem)  \nsetstate(state);\n\nreturn (*this);\n```  \n  \n Two other member functions are unformatted output functions. They follow the pattern:  \n  \n```  \niostate state = goodbit;  \nconst sentry ok(*this);\n\nif (!ok)  \n    state |= badbit;  \nelse  \n {try  \n {<obtain and insert elements  \n    accumulate flags in state> }  \n    catch (...)  \n {try  \n {setstate(badbit);\n\n}  \n    catch (...)  \n {}  \n    if ((exceptions()& badbit) != 0)  \n    throw; }}  \nsetstate(state);\n\nreturn (*this);\n```  \n  \n Both groups of functions call [setstate](../standard-library/basic-ios-class.md#basic_ios__setstate)**(badbit)** if they encounter a failure while inserting elements.  \n  \n An object of class basic_istream\\< **Elem**, **Tr**> stores only a virtual public base object of class [basic_ios](../standard-library/basic-ios-class.md)**\\<Elem**, **Tr>**.  \n  \n## Example  \n See the example for [basic_ofstream Class](../standard-library/basic-ofstream-class.md) to learn more about output streams.  \n  \n### Constructors  \n  \n|||  \n|-|-|  \n|[basic_ostream](#basic_ostream__basic_ostream)|Constructs a `basic_ostream` object.|  \n  \n### Member Functions  \n  \n|||  \n|-|-|  \n|[flush](#basic_ostream__flush)|Flushes the buffer.|  \n|[put](#basic_ostream__put)|Puts a character in a stream.|  \n|[seekp](#basic_ostream__seekp)|Resets position in output stream.|  \n|[sentry](#basic_ostream__sentry)|The nested class describes an object whose declaration structures the formatted output functions and the unformatted output functions.|  \n|[swap](#basic_ostream__operator_eq)|Exchanges the values of this `basic_ostream` object for those of the provided `basic_ostream` object.|  \n|[tellp](#basic_ostream__tellp)|Reports position in output stream.|  \n|[write](#basic_ostream__write)|Puts characters in a stream.|  \n  \n### Operators  \n  \n|||  \n|-|-|  \n|[operator=](#basic_ostream_operator_eq)|Assigns the value of the provided `basic_ostream` object parameter to this object.|  \n|[operator<<](#basic_ostream_operator_lt_lt_)|Writes to the stream.|  \n\n## Requirements  \n **Header:** \\<ostream>  \n  \n **Namespace:** std  \n  \n##  <a name=\"basic_ostream__basic_ostream\"></a>  basic_ostream::basic_ostream  \n Constructs a `basic_ostream` object.  \n  \n```  \nexplicit basic_ostream(\n    basic_streambuf<Elem, Tr>* strbuf,  \n    bool _Isstd = false);\n\nbasic_ostream(basic_ostream&& right);\n```  \n  \n### Parameters  \n ` strbuf`  \n An object of type [basic_streambuf](../standard-library/basic-streambuf-class.md).  \n  \n `_Isstd`  \n `true` if this is a standard stream; otherwise, `false`.  \n  \n ` right`  \n An rvalue reference to an object of type `basic_ostream`.  \n  \n### Remarks  \n The first constructor initializes the base class by calling [init](../standard-library/basic-ios-class.md#basic_ios__init)(` strbuf`). The second constructor initializes the base class by calling [basic_ios::move](../standard-library/basic-ios-class.md#basic_ios__move)`(`` right``)`.  \n  \n### Example  \n  See the example for [basic_ofstream::basic_ofstream](../standard-library/basic-ofstream-class.md#basic_ofstream__basic_ofstream) to learn more about output streams.  \n  \n##  <a name=\"basic_ostream__flush\"></a>  basic_ostream::flush  \n Flushes the buffer.  \n  \n```  \nbasic_ostream<Elem, Tr>& flush();\n```  \n  \n### Return Value  \n A reference to the basic_ostream object.  \n  \n### Remarks  \n If [rdbuf](../standard-library/basic-ios-class.md#basic_ios__rdbuf) is not a null pointer, the function calls **rdbuf->**[pubsync](../standard-library/basic-streambuf-class.md#basic_streambuf__pubsync). If that returns -1, the function calls [setstate](../standard-library/basic-ios-class.md#basic_ios__setstate)(**badbit**). It returns **\\*this**.  \n  \n### Example  \n  \n```cpp  \n// basic_ostream_flush.cpp  \n// compile with: /EHsc  \n#include <iostream>  \n  \nint main( )   \n{  \n   using namespace std;  \n   cout << \"test\";  \n   cout.flush();  \n}  \n```  \n  \n```Output  \ntest  \n```  \n  \n##  <a name=\"basic_ostream_operator_lt_lt_\"></a>  basic_ostream::operator&lt;&lt;  \n Writes to the stream.  \n  \n```  \nbasic_ostream<Elem, Tr>& operator<<(\n    basic_ostream<Elem, Tr>& (* Pfn)(basic_ostream<Elem, Tr>&));\n\nbasic_ostream<Elem, Tr>& operator<<(\n    ios_base& (* Pfn)(ios_base&));\n\nbasic_ostream<Elem, Tr>& operator<<(\n    basic_ios<Elem, Tr>& (* Pfn)(basic_ios<Elem, Tr>&));\n\nbasic_ostream<Elem, Tr>& operator<<(basic_streambuf<Elem, Tr>* strbuf);\nbasic_ostream<Elem, Tr>& operator<<(bool val);\nbasic_ostream<Elem, Tr>& operator<<(short val);\nbasic_ostream<Elem, Tr>& operator<<(unsigned short val);\nbasic_ostream<Elem, Tr>& operator<<(int __w64  val);\nbasic_ostream<Elem, Tr>& operator<<(unsigned int __w64  val);\nbasic_ostream<Elem, Tr>& operator<<(long val);\nbasic_ostream<Elem, Tr>& operator<<(unsigned long __w64  val);\nbasic_ostream<Elem, Tr>& operator<<(long long val);\nbasic_ostream<Elem, Tr>& operator<<(unsigned long long val);\nbasic_ostream<Elem, Tr>& operator<<(float val);\nbasic_ostream<Elem, Tr>& operator<<(double val);\nbasic_ostream<Elem, Tr>& operator<<(long double val);\nbasic_ostream<Elem, Tr>& operator<<(const void* val);\n```  \n  \n### Parameters  \n `Pfn`  \n A function pointer.  \n  \n ` strbuf`  \n A pointer to a **stream_buf** object.  \n  \n ` val`  \n An element to write to the stream.  \n  \n### Return Value  \n A reference to the basic_ostream object.  \n  \n### Remarks  \n The `<ostream>` header also defines several global insertion operators. For more information, see [operator<< (\\<ostream>)](../standard-library/ostream-operators.md#operator_lt__lt_).  \n  \n The first member function ensures that an expression of the form **ostr << endl** calls [endl](../standard-library/ostream-functions.md#endl)**(ostr)**, and then returns **\\*this**. The second and third functions ensure that other manipulators, such as [hex](../standard-library/ios-functions.md#hex), behave similarly. The remaining functions are all formatted output functions.  \n  \n The function  \n  \n```  \nbasic_ostream<Elem, Tr>& operator<<(basic_streambuf<Elem, Tr>* strbuf);\n```  \n  \n extracts elements from ` strbuf`, if ` strbuf` is not a null pointer, and inserts them. Extraction stops on end of file, or if an extraction throws an exception (which is rethrown). It also stops, without extracting the element in question, if an insertion fails. If the function inserts no elements, or if an extraction throws an exception, the function calls [setstate](../standard-library/basic-ios-class.md#basic_ios__setstate)(**failbit**). In any case, the function returns **\\*this**.  \n  \n The function  \n  \n```  \nbasic_ostream<Elem, Tr>& operator<<(bool val);\n```  \n  \n converts _`Val` to a Boolean field and inserts it by calling [use_facet](../standard-library/basic-filebuf-class.md#basic_filebuf__open)**<num_put\\<Elem, OutIt>**`(`[getloc](../standard-library/ios-base-class.md#ios_base__getloc)). [put](#basic_ostream__put)(**OutIt**([rdbuf](../standard-library/basic-ios-class.md#basic_ios__rdbuf)), **\\*this**, `getloc`, **val**). Here, **OutIt** is defined as [ostreambuf_iterator](../standard-library/ostreambuf-iterator-class.md)**\\<Elem, Tr>**. The function returns **\\*this**.  \n  \n The functions  \n  \n```  \nbasic_ostream<Elem, Tr>& operator<<(short val);\nbasic_ostream<Elem, Tr>& operator<<(unsigned short val);\nbasic_ostream<Elem, Tr>& operator<<(int val);\nbasic_ostream<Elem, Tr>& operator<<(unsigned int __w64  val);\nbasic_ostream<Elem, Tr>& operator<<(long val);\nbasic_ostream<Elem, Tr>& operator<<(unsigned long val);\nbasic_ostream<Elem, Tr>& operator<<(long long val);\nbasic_ostream<Elem, Tr>& operator<<(unsigned long long val);\nbasic_ostream<Elem, Tr>& operator<<(const void* val);\n```  \n  \n each convert ` val` to a numeric field and insert it by calling **use_facet<num_put\\<Elem, OutIt>**(`getloc`). **put**(**OutIt**(`rdbuf`), **\\*this**, `getloc`, **val**). Here, **OutIt** is defined as **ostreambuf_iterator\\<Elem, Tr>**. The function returns **\\*this**.  \n  \n The functions  \n  \n```  \nbasic_ostream<Elem, Tr>& operator<<(float val);\nbasic_ostream<Elem, Tr>& operator<<(double val);\nbasic_ostream<Elem, Tr>& operator<<(long double val);\n```  \n  \n each convert `val` to a numeric field and insert it by calling **use_facet<num_put\\<Elem, OutIt>**(`getloc`)**. put**(**OutIt**(`rdbuf`), **\\*this**, `getloc`, **val**). Here, **OutIt** is defined as **ostreambuf_iterator\\<Elem, Tr>**. The function returns **\\*this**.  \n  \n### Example  \n  \n```cpp  \n// basic_ostream_op_write.cpp  \n// compile with: /EHsc  \n#include <iostream>  \n#include <string.h>  \n  \nusing namespace std;  \n  \nios_base& hex2( ios_base& ib )  \n{  \n   ib.unsetf( ios_base::dec );  \n   ib.setf( ios_base::hex );  \n   return ib;  \n}  \n  \nbasic_ostream<char, char_traits<char> >& somefunc(basic_ostream<char, char_traits<char> > &i)\n{\n    if (i == cout)\n    {\n        i << \"i is cout\" << endl;\n    }\n    return i;\n}\n\nclass CTxtStreambuf : public basic_streambuf< char, char_traits< char > >\n{\npublic:\n    CTxtStreambuf(char *_pszText)\n    {\n        pszText = _pszText;\n        setg(pszText, pszText, pszText + strlen(pszText));\n    };\n    char *pszText;\n};\n\nint main()\n{\n    cout << somefunc;\n    cout << 21 << endl;\n\n    hex2(cout);\n    cout << 21 << endl;\n\n    CTxtStreambuf f(\"text in streambuf\");\n    cout << &f << endl;\n}\n```  \n  \n##  <a name=\"basic_ostream__operator_eq\"></a>  basic_ostream::operator=  \n Assigns values for the provided `basic_ostream` object parameter to this object.  \n  \n```  \nbasic_ostream& operator=(basic_ostream&& right);\n```  \n  \n### Parameters  \n ` right`  \n An `rvalue` reference to a `basic_ostream` object.  \n  \n### Remarks  \n The member operator calls swap `(`` right``)`.  \n  \n##  <a name=\"basic_ostream__put\"></a>  basic_ostream::put  \n Puts a character in a stream.  \n  \n```  \nbasic_ostream<Elem, Tr>& put(char_type _Ch);\n```  \n  \n### Parameters  \n `_Ch`  \n A character.  \n  \n### Return Value  \n A reference to the basic_ostream object.  \n  \n### Remarks  \n The unformatted output function inserts the element `_Ch`. It returns **\\*this**.  \n  \n### Example  \n  \n```cpp  \n// basic_ostream_put.cpp  \n// compile with: /EHsc  \n#include <iostream>  \n  \nint main( )   \n{  \n   using namespace std;  \n   cout.put( 'v' );  \n   cout << endl;  \n   wcout.put( L'l' );  \n}  \n```  \n  \n```Output  \nv  \nl  \n```  \n  \n##  <a name=\"basic_ostream__seekp\"></a>  basic_ostream::seekp  \n Reset position in output stream.  \n  \n```  \nbasic_ostream<Elem, Tr>& seekp(pos_type _Pos);\n\nbasic_ostream<Elem, Tr>& seekp(off_type _Off, ios_base::seekdir _Way);\n```  \n  \n### Parameters  \n `_Pos`  \n The position in the stream.  \n  \n `_Off`  \n The offset relative to `_Way`.  \n  \n `_Way`  \n One of the [ios_base::seekdir](../standard-library/ios-base-class.md#ios_base__seekdir) enumerations.  \n  \n### Return Value  \n A reference to the basic_ostream object.  \n  \n### Remarks  \n If [fail](../standard-library/basic-ios-class.md#basic_ios__fail) is **false**, the first member function calls **newpos =** [rdbuf](../standard-library/basic-ios-class.md#basic_ios__rdbuf)**->** [pubseekpos](../standard-library/basic-streambuf-class.md#basic_streambuf__pubseekpos)(_*Pos*), for some `pos_type` temporary object **newpos**. If **fail** is false, the second function calls **newpos = rdbuf->** [pubseekoff](../standard-library/basic-streambuf-class.md#basic_streambuf__pubseekoff)(*_Off, _Way*). In either case, if (`off_type`)**newpos ==** (`off_type`)(-1) (the positioning operation fails), then the function calls **istr.**[setstate](../standard-library/basic-ios-class.md#basic_ios__setstate)(**failbit**). Both functions return **\\*this**.  \n  \n### Example  \n  \n```cpp  \n// basic_ostream_seekp.cpp  \n// compile with: /EHsc  \n#include <fstream>  \n#include <iostream>  \n  \nint main()  \n{  \n    using namespace std;  \n    ofstream x(\"basic_ostream_seekp.txt\");  \n    streamoff i = x.tellp();  \n    cout << i << endl;  \n    x << \"testing\";  \n    i = x.tellp();  \n    cout << i << endl;  \n    x.seekp(2);   // Put char in third char position in file  \n    x << \" \";  \n  \n    x.seekp(2, ios::end);   // Put char two after end of file  \n    x << \"z\";  \n}  \n```  \n  \n```Output  \n0  \n7  \n```  \n  \n##  <a name=\"basic_ostream__sentry\"></a>  basic_ostream::sentry  \n The nested class describes an object whose declaration structures the formatted output functions and the unformatted output functions.  \n  \nclass sentry {  \n   public:  \n   explicit sentry(basic_ostream\\<Elem, Tr>& _Ostr);\n   operator bool() const;\n   ~sentry();\n   };  \n  \n### Remarks  \n The nested class describes an object whose declaration structures the formatted output functions and the unformatted output functions. If **ostr.**[good](../standard-library/basic-ios-class.md#basic_ios__good) is **true** and **ostr.**[tie](../standard-library/basic-ios-class.md#basic_ios__tie) is not a null pointer, the constructor calls **ostr.tie->**[flush](#basic_ostream__flush). The constructor then stores the value returned by **ostr.good** in **status**. A later call to **operator bool** delivers this stored value.  \n  \n If `uncaught_exception` returns **false** and [flags](../standard-library/ios-base-class.md#ios_base__flags) **&** [unitbuf](../standard-library/ios-functions.md#unitbuf) is nonzero, the destructor calls [flush](#basic_ostream__flush).  \n  \n##  <a name=\"basic_ostream__swap\"></a>  basic_ostream::swap  \n Exchanges the values of this `basic_ostream` object for the values of the provided `basic_ostream`.  \n  \n```  \nvoid swap(basic_ostream& right);\n```  \n  \n### Parameters  \n ` right`  \n A reference to a `basic_ostream` object.  \n  \n### Remarks  \n The member function calls [basic_ios::swap](../standard-library/basic-ios-class.md#basic_ios__swap)`(`` right``)` to exchange the contents of this object for the contents of ` right`.  \n  \n##  <a name=\"basic_ostream__tellp\"></a>  basic_ostream::tellp  \n Report position in output stream.  \n  \n```  \npos_type tellp();\n```  \n  \n### Return Value  \n Position in output stream.  \n  \n### Remarks  \n If [fail](../standard-library/basic-ios-class.md#basic_ios__fail) is **false**, the member function returns [rdbuf](../standard-library/basic-ios-class.md#basic_ios__rdbuf)**->** [pubseekoff](../standard-library/basic-streambuf-class.md#basic_streambuf__pubseekoff)(0, `cur`, **in**). Otherwise, it returns `pos_type`(-1).  \n  \n### Example  \n  See [seekp](#basic_ostream__seekp) for an example using `tellp`.  \n  \n##  <a name=\"basic_ostream__write\"></a>  basic_ostream::write  \n Put characters in a stream.  \n  \n```  \nbasic_ostream<Elem, Tr>& write(const char_type* str, streamsize count);\n```  \n  \n### Parameters  \n ` count`  \n Count of characters to put into the stream.  \n  \n ` str`  \n Characters to put into the stream.  \n  \n### Return Value  \n A reference to the basic_ostream object.  \n  \n### Remarks  \n The [unformatted output function](../standard-library/basic-ostream-class.md) inserts the sequence of ` count` elements beginning at ` str`.  \n  \n### Example  \n  See [streamsize](../standard-library/ios-typedefs.md#streamsize) for an example using `write`.  \n  \n## See Also  \n [Thread Safety in the C++ Standard Library](../standard-library/thread-safety-in-the-cpp-standard-library.md)   \n [iostream Programming](../standard-library/iostream-programming.md)   \n [iostreams Conventions](../standard-library/iostreams-conventions.md)\n\n"}