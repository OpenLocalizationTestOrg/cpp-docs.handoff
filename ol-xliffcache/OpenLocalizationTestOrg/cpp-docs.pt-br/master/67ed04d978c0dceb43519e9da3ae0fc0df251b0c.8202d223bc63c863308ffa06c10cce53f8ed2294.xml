{"nodes":[{"pos":[12,81],"content":"ew (new slot in vtable)  (C++ Component Extensions) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"ew (new slot in vtable)  (C++ Component Extensions) | Microsoft Docs","pos":[0,68]}]},{"content":"new (new slot in vtable)  (C++ Component Extensions)","pos":[619,671]},{"pos":[672,756],"content":"The <ph id=\"ph1\">`new`</ph> keyword indicates that a virtual member will get a new slot in the vtable.","source":"The `new` keyword indicates that a virtual member will get a new slot in the vtable."},{"content":"All Runtimes","pos":[765,777]},{"content":"(There are no remarks for this language feature that apply to all runtimes.)","pos":[781,857]},{"content":"Windows Runtime","pos":[866,881]},{"pos":[885,955],"content":"Not supported in <ph id=\"ph1\">[!INCLUDE[wrt](../atl/reference/includes/wrt_md.md)]</ph>.","source":"Not supported in [!INCLUDE[wrt](../atl/reference/includes/wrt_md.md)]."},{"content":"Remarks","pos":[1041,1048]},{"pos":[1057,1213],"content":"In a <bpt id=\"p1\">**</bpt>/clr<ept id=\"p1\">**</ept> compilation, <ph id=\"ph1\">`new`</ph> indicates that a virtual member will get a new slot in the vtable; that the function does not override a base class method.","source":"In a **/clr** compilation, `new` indicates that a virtual member will get a new slot in the vtable; that the function does not override a base class method."},{"content":"causes the newslot modifier to be added to the IL for the function.","pos":[1226,1293]},{"content":"For more information about newslot, see:","pos":[1295,1335]},{"content":"MethodInfo.GetBaseDefinition Method","pos":[1346,1381]},{"content":"MethodAttributes Enumeration","pos":[1487,1515]},{"content":"Requirements","pos":[1608,1620]},{"pos":[1624,1649],"content":"Compiler option: <bpt id=\"p1\">**</bpt>/clr<ept id=\"p1\">**</ept>","source":"Compiler option: **/clr**"},{"content":"Examples","pos":[1659,1667]},{"content":"Example","pos":[1673,1680]},{"pos":[1689,1736],"content":"The following sample shows the effect of <ph id=\"ph1\">`new`</ph>.","source":"The following sample shows the effect of `new`."},{"content":"Output","pos":[2610,2616]},{"content":"See Also","pos":[2740,2748]},{"content":"Component Extensions for Runtime Platforms","pos":[2753,2795]},{"content":"Override Specifiers","pos":[2860,2879]}],"content":"---\ntitle: \"new (new slot in vtable)  (C++ Component Extensions) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"language-reference\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"new keyword [C++]\"\nms.assetid: 1a9a5704-f02f-46ae-ad65-f0f2b6dbabc3\ncaps.latest.revision: 20\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# new (new slot in vtable)  (C++ Component Extensions)\nThe `new` keyword indicates that a virtual member will get a new slot in the vtable.  \n  \n## All Runtimes  \n (There are no remarks for this language feature that apply to all runtimes.)  \n  \n## Windows Runtime  \n Not supported in [!INCLUDE[wrt](../atl/reference/includes/wrt_md.md)].  \n  \n## [!INCLUDE[clr_for_headings](../dotnet/includes/clr_for_headings_md.md)]  \n **Remarks**  \n  \n In a **/clr** compilation, `new` indicates that a virtual member will get a new slot in the vtable; that the function does not override a base class method.  \n  \n `new` causes the newslot modifier to be added to the IL for the function.  For more information about newslot, see:  \n  \n-   [MethodInfo.GetBaseDefinition Method](https://msdn.microsoft.com/en-us/library/system.reflection.methodinfo.getbasedefinition.aspx)  \n  \n-   [MethodAttributes Enumeration](https://msdn.microsoft.com/en-us/library/system.reflection.methodattributes.aspx)  \n  \n### Requirements  \n Compiler option: **/clr**  \n  \n### Examples  \n **Example**  \n  \n The following sample shows the effect of `new`.  \n  \n```  \n// newslot.cpp  \n// compile with: /clr  \nref class C {  \npublic:  \n   virtual void f() {  \n      System::Console::WriteLine(\"C::f() called\");  \n   }  \n  \n   virtual void g() {  \n      System::Console::WriteLine(\"C::g() called\");  \n   }  \n};  \n  \nref class D : public C {  \npublic:  \n   virtual void f() new {  \n      System::Console::WriteLine(\"D::f() called\");  \n   }  \n  \n   virtual void g() override {  \n      System::Console::WriteLine(\"D::g() called\");  \n   }  \n};  \n  \nref class E : public D {  \npublic:  \n   virtual void f() override {  \n      System::Console::WriteLine(\"E::f() called\");  \n   }  \n};  \n  \nint main() {  \n   D^ d = gcnew D;  \n   C^ c = gcnew D;  \n  \n   c->f();   // calls C::f  \n   d->f();   // calls D::f  \n  \n   c->g();   // calls D::g  \n   d->g();   // calls D::g  \n  \n   D ^ e = gcnew E;  \n   e->f();   // calls E::f  \n}  \n```  \n  \n **Output**  \n  \n```Output  \nC::f() called  \n  \nD::f() called  \n  \nD::g() called  \n  \nD::g() called  \n  \nE::f() called  \n```  \n  \n## See Also  \n [Component Extensions for Runtime Platforms](../windows/component-extensions-for-runtime-platforms.md)   \n [Override Specifiers](../windows/override-specifiers-cpp-component-extensions.md)"}