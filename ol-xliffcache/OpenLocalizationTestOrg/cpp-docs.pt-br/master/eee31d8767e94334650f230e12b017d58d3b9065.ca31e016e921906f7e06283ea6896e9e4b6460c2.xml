{"nodes":[{"pos":[12,59],"content":"hash_multimap::begin (STL-CLR) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"hash_multimap::begin (STL-CLR) | Microsoft Docs","pos":[0,47]}]},{"content":"hash_multimap::begin (STL/CLR)","pos":[642,672]},{"content":"Designates the beginning of the controlled sequence.","pos":[673,725]},{"content":"Syntax","pos":[734,740]},{"content":"Remarks","pos":[784,791]},{"content":"The member function returns a bidirectional iterator that designates the first element of the controlled sequence, or just beyond the end of an empty sequence.","pos":[795,954]},{"content":"You use it to obtain an iterator that designates the <ph id=\"ph1\">`current`</ph> beginning of the controlled sequence, but its status can change if the length of the controlled sequence changes.","pos":[955,1131],"source":" You use it to obtain an iterator that designates the `current` beginning of the controlled sequence, but its status can change if the length of the controlled sequence changes."},{"content":"Example","pos":[1140,1147]},{"content":"Requirements","pos":[2161,2173]},{"pos":[2177,2207],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> <ph id=\"ph1\">\\&lt;</ph>cliext/hash_map&gt;","source":"**Header:** \\<cliext/hash_map>"},{"pos":[2214,2235],"content":"<bpt id=\"p1\">**</bpt>Namespace:<ept id=\"p1\">**</ept> cliext","source":"**Namespace:** cliext"},{"content":"See Also","pos":[2244,2252]},{"content":"hash_multimap (STL/CLR)","pos":[2257,2280]},{"content":"hash_multimap::end (STL/CLR)","pos":[2323,2351]}],"content":"---\ntitle: \"hash_multimap::begin (STL-CLR) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"cliext::hash_multimap::begin\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"begin member [STL/CLR]\"\nms.assetid: 7f8d51c1-8183-4dc1-9dfc-f58dbf594c42\ncaps.latest.revision: 13\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# hash_multimap::begin (STL/CLR)\nDesignates the beginning of the controlled sequence.  \n  \n## Syntax  \n  \n```  \niterator begin();  \n```  \n  \n## Remarks  \n The member function returns a bidirectional iterator that designates the first element of the controlled sequence, or just beyond the end of an empty sequence. You use it to obtain an iterator that designates the `current` beginning of the controlled sequence, but its status can change if the length of the controlled sequence changes.  \n  \n## Example  \n  \n```  \n// cliext_hash_multimap_begin.cpp   \n// compile with: /clr   \n#include <cliext/hash_map>   \n  \ntypedef cliext::hash_multimap<wchar_t, int> Myhash_multimap;   \nint main()   \n    {   \n    Myhash_multimap c1;   \n    c1.insert(Myhash_multimap::make_value(L'a', 1));   \n    c1.insert(Myhash_multimap::make_value(L'b', 2));   \n    c1.insert(Myhash_multimap::make_value(L'c', 3));   \n  \n// display contents \" [a 1] [b 2] [c 3]\"   \n    for each (Myhash_multimap::value_type elem in c1)   \n        System::Console::Write(\" [{0} {1}]\", elem->first, elem->second);   \n    System::Console::WriteLine();   \n  \n// inspect first two items   \n    Myhash_multimap::iterator it = c1.begin();   \n    System::Console::WriteLine(\"*begin() = [{0} {1}]\",   \n        it->first, it->second);   \n    ++it;   \n    System::Console::WriteLine(\"*++begin() = [{0} {1}]\",   \n        it->first, it->second);   \n    return (0);   \n    }  \n  \n```  \n  \n```Output  \n [a 1] [b 2] [c 3]  \n*begin() = [a 1]  \n*++begin() = [b 2]  \n```  \n  \n## Requirements  \n **Header:** \\<cliext/hash_map>  \n  \n **Namespace:** cliext  \n  \n## See Also  \n [hash_multimap (STL/CLR)](../dotnet/hash-multimap-stl-clr.md)   \n [hash_multimap::end (STL/CLR)](../dotnet/hash-multimap-end-stl-clr.md)"}