{"nodes":[{"pos":[12,36],"content":"__umulh | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"__umulh | Microsoft Docs","pos":[0,24]}]},{"content":"__umulh","pos":[591,598]},{"content":"Microsoft Specific","pos":[601,619]},{"content":"Return the high 64 bits of the product of two 64-bit unsigned integers.","pos":[628,699]},{"content":"Syntax","pos":[708,714]},{"content":"Parameters","pos":[825,835]},{"content":"[in]","pos":[839,843]},{"content":"The first number to multiply.","pos":[851,880]},{"content":"[in]","pos":[887,891]},{"content":"The second number to multiply.","pos":[899,929]},{"content":"Return Value","pos":[938,950]},{"content":"The high 64 bits of the 128-bit result of the multiplication.","pos":[954,1015]},{"content":"Requirements","pos":[1024,1036]},{"content":"Intrinsic","pos":[1043,1052]},{"content":"Architecture","pos":[1053,1065]},{"pos":[1190,1217],"content":"<bpt id=\"p1\">**</bpt>Header file<ept id=\"p1\">**</ept> <ph id=\"ph1\">\\&lt;</ph>intrin.h&gt;","source":"**Header file** \\<intrin.h>"},{"content":"Remarks","pos":[1226,1233]},{"content":"These routines are only available as intrinsics.","pos":[1237,1285]},{"content":"Example","pos":[1294,1301]},{"content":"END Microsoft Specific","pos":[1919,1941]},{"content":"See Also","pos":[1950,1958]},{"content":"Compiler Intrinsics","pos":[1963,1982]}],"content":"---\ntitle: \"__umulh | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"__umulh\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"__umulh intrinsic\"\nms.assetid: d241b53a-e6f7-4af1-9f6e-84e149158f03\ncaps.latest.revision: 14\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# __umulh\n**Microsoft Specific**  \n  \n Return the high 64 bits of the product of two 64-bit unsigned integers.  \n  \n## Syntax  \n  \n```  \nunsigned __int64 __umulh(   \n   unsigned __int64 a,   \n   unsigned __int64 b   \n);  \n```  \n  \n#### Parameters  \n [in] `a`  \n The first number to multiply.  \n  \n [in] `b`  \n The second number to multiply.  \n  \n## Return Value  \n The high 64 bits of the 128-bit result of the multiplication.  \n  \n## Requirements  \n  \n|Intrinsic|Architecture|  \n|---------------|------------------|  \n|`__umulh`|[!INCLUDE[vcprx64](../assembler/inline/includes/vcprx64_md.md)]|  \n  \n **Header file** \\<intrin.h>  \n  \n## Remarks  \n These routines are only available as intrinsics.  \n  \n## Example  \n  \n```  \n// umulh.cpp  \n// processor: X64  \n#include <cstdio>  \n#include <intrin.h>  \n  \nint main()  \n{  \n    unsigned __int64 i = 0x10;  \n    unsigned __int64 j = 0xFEDCBA9876543210;  \n    unsigned __int64 k = i * j; // k has the low 64 bits  \n                                // of the product.  \n    unsigned __int64 result;  \n    result = __umulh(i, j); // result has the high 64 bits  \n                            // of the product.  \n    printf_s(\"0x%I64x * 0x%I64x = 0x%I64x%I64x \\n\", i, j, result, k);  \n    return 0;  \n}  \n```  \n  \n```Output  \n0x10 * 0xfedcba9876543210 = 0xfedcba98765432100   \n```  \n  \n## END Microsoft Specific  \n  \n## See Also  \n [Compiler Intrinsics](../intrinsics/compiler-intrinsics.md)"}