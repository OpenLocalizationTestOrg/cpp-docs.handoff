{"nodes":[{"pos":[12,71],"content":"isalpha, iswalpha, _isalpha_l, _iswalpha_l | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"isalpha, iswalpha, _isalpha_l, _iswalpha_l | Microsoft Docs","pos":[0,59]}]},{"content":"isalpha, iswalpha, _isalpha_l, _iswalpha_l","pos":[1304,1346]},{"content":"Determines whether an integer represents an alphabetic character.","pos":[1347,1412]},{"content":"Syntax","pos":[1421,1427]},{"content":"Parameters","pos":[1645,1655]},{"content":"Integer to test.","pos":[1666,1682]},{"content":"The locale to use instead of the current locale.","pos":[1701,1749]},{"content":"Return Value","pos":[1758,1770]},{"content":"Each of these routines returns nonzero if <ph id=\"ph1\">`c`</ph> is a particular representation of an alphabetic character.","pos":[1774,1878],"source":"Each of these routines returns nonzero if `c` is a particular representation of an alphabetic character."},{"content":"returns a nonzero value if <ph id=\"ph1\">`c`</ph> is within the ranges A – Z or a – z.","pos":[1889,1956],"source":" returns a nonzero value if `c` is within the ranges A – Z or a – z."},{"content":"returns a nonzero value only for wide characters for which <ph id=\"ph1\">`iswupper`</ph> or <ph id=\"ph2\">`iswlower`</ph> is nonzero; that is, for any wide character that is one of an implementation-defined set for which none of <ph id=\"ph3\">`iswcntrl`</ph>, <ph id=\"ph4\">`iswdigit`</ph>, <ph id=\"ph5\">`iswpunct`</ph>, or <ph id=\"ph6\">`iswspace`</ph> is nonzero.","pos":[1968,2220],"source":" returns a nonzero value only for wide characters for which `iswupper` or `iswlower` is nonzero; that is, for any wide character that is one of an implementation-defined set for which none of `iswcntrl`, `iswdigit`, `iswpunct`, or `iswspace` is nonzero."},{"content":"Each of these routines returns 0 if <ph id=\"ph1\">`c`</ph> does not satisfy the test condition.","pos":[2221,2297],"source":" Each of these routines returns 0 if `c` does not satisfy the test condition."},{"content":"The versions of these functions that have the <ph id=\"ph1\">`_l`</ph> suffix use the locale parameter that's passed in instead of the current locale.","pos":[2304,2434],"source":"The versions of these functions that have the `_l` suffix use the locale parameter that's passed in instead of the current locale."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Locale<ept id=\"p1\">](../../c-runtime-library/locale.md)</ept>.","pos":[2435,2505],"source":" For more information, see [Locale](../../c-runtime-library/locale.md)."},{"content":"The behavior of <ph id=\"ph1\">`isalpha`</ph> and <ph id=\"ph2\">`_isalpha_l`</ph> is undefined if <ph id=\"ph3\">`c`</ph> is not EOF or in the range 0 through 0xFF, inclusive.","pos":[2512,2628],"source":"The behavior of `isalpha` and `_isalpha_l` is undefined if `c` is not EOF or in the range 0 through 0xFF, inclusive."},{"content":"When a debug CRT library is used and <ph id=\"ph1\">`c`</ph> is not one of these values, the functions raise an assertion.","pos":[2629,2731],"source":" When a debug CRT library is used and `c` is not one of these values, the functions raise an assertion."},{"content":"Generic-Text Routine Mappings","pos":[2741,2770]},{"content":"TCHAR.H routine","pos":[2777,2792]},{"content":"_UNICODE &amp; _MBCS not defined","pos":[2793,2821],"source":"_UNICODE & _MBCS not defined"},{"content":"_MBCS defined","pos":[2822,2835]},{"content":"_UNICODE defined","pos":[2836,2852]},{"content":"Requirements","pos":[3082,3094]},{"content":"Routine","pos":[3101,3108]},{"content":"Required header","pos":[3109,3124]},{"content":"ctype.h&gt;","pos":[3181,3189],"source":"ctype.h>"},{"content":"ctype.h&gt; or <ph id=\"ph1\">\\&lt;</ph>wchar.h&gt;","pos":[3207,3229],"source":"ctype.h> or \\<wchar.h>"},{"content":"ctype.h&gt;","pos":[3249,3257],"source":"ctype.h>"},{"content":"ctype.h&gt; or <ph id=\"ph1\">\\&lt;</ph>wchar.h&gt;","pos":[3278,3300],"source":"ctype.h> or \\<wchar.h>"},{"pos":[3308,3412],"content":"For additional compatibility information, see <bpt id=\"p1\">[</bpt>Compatibility<ept id=\"p1\">](../../c-runtime-library/compatibility.md)</ept>.","source":"For additional compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md)."},{"content":".NET Framework Equivalent","pos":[3421,3446]},{"content":"System::Char::IsLetter","pos":[3451,3473]},{"content":"See Also","pos":[3551,3559]},{"content":"Character Classification","pos":[3564,3588]},{"content":"Locale","pos":[3648,3654]},{"content":"is, isw Routines","pos":[3696,3712]}],"content":"---\ntitle: \"isalpha, iswalpha, _isalpha_l, _iswalpha_l | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\napiname: \n  - \"iswalpha\"\n  - \"_iswalpha_l\"\n  - \"isalpha\"\n  - \"_isalpha_l\"\napilocation: \n  - \"msvcrt.dll\"\n  - \"msvcr80.dll\"\n  - \"msvcr90.dll\"\n  - \"msvcr100.dll\"\n  - \"msvcr100_clr0400.dll\"\n  - \"msvcr110.dll\"\n  - \"msvcr110_clr0400.dll\"\n  - \"msvcr120.dll\"\n  - \"msvcr120_clr0400.dll\"\n  - \"ucrtbase.dll\"\n  - \"api-ms-win-crt-string-l1-1-0.dll\"\napitype: \"DLLExport\"\nf1_keywords: \n  - \"_istalpha\"\n  - \"_ismbcalpha_l\"\n  - \"isalpha\"\n  - \"_isalpha_l\"\n  - \"iswalpha\"\n  - \"_istalpha_l\"\n  - \"_iswalpha_l\"\ndev_langs: \n  - \"C++\"\n  - \"C\"\nhelpviewer_keywords: \n  - \"_iswalpha_l function\"\n  - \"_isalpha_l function\"\n  - \"_ismbcalpha_l function\"\n  - \"_istalpha_l function\"\n  - \"_ismbcalpha function\"\n  - \"isalpha function\"\n  - \"iswalpha function\"\n  - \"istalpha function\"\n  - \"_istalpha function\"\nms.assetid: ed6cc2be-c4b0-4475-87ac-bc06d8c23064\ncaps.latest.revision: 21\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# isalpha, iswalpha, _isalpha_l, _iswalpha_l\nDetermines whether an integer represents an alphabetic character.  \n  \n## Syntax  \n  \n```  \nint isalpha(   \n   int c   \n);  \nint iswalpha(   \n   wint_t c   \n);  \nint _isalpha_l(   \n   int c,  \n   _locale_t locale   \n);  \nint _iswalpha_l(   \n   wint_t c,  \n   _locale_t locale   \n);  \n```  \n  \n#### Parameters  \n `c`  \n Integer to test.  \n  \n `locale`  \n The locale to use instead of the current locale.  \n  \n## Return Value  \n Each of these routines returns nonzero if `c` is a particular representation of an alphabetic character. `isalpha` returns a nonzero value if `c` is within the ranges A – Z or a – z. `iswalpha` returns a nonzero value only for wide characters for which `iswupper` or `iswlower` is nonzero; that is, for any wide character that is one of an implementation-defined set for which none of `iswcntrl`, `iswdigit`, `iswpunct`, or `iswspace` is nonzero. Each of these routines returns 0 if `c` does not satisfy the test condition.  \n  \n The versions of these functions that have the `_l` suffix use the locale parameter that's passed in instead of the current locale. For more information, see [Locale](../../c-runtime-library/locale.md).  \n  \n The behavior of `isalpha` and `_isalpha_l` is undefined if `c` is not EOF or in the range 0 through 0xFF, inclusive. When a debug CRT library is used and `c` is not one of these values, the functions raise an assertion.  \n  \n### Generic-Text Routine Mappings  \n  \n|TCHAR.H routine|_UNICODE & _MBCS not defined|_MBCS defined|_UNICODE defined|  \n|---------------------|------------------------------------|--------------------|-----------------------|  \n|`_istalpha`|`isalpha`|`_ismbcalpha`|`iswalpha`|  \n|`_istalpha_l`|`_isalpha_l`|`_ismbcalpha_l`|`_iswalpha_l`|  \n  \n## Requirements  \n  \n|Routine|Required header|  \n|-------------|---------------------|  \n|`isalpha`|\\<ctype.h>|  \n|`iswalpha`|\\<ctype.h> or \\<wchar.h>|  \n|`_isalpha_l`|\\<ctype.h>|  \n|`_iswalpha_l`|\\<ctype.h> or \\<wchar.h>|  \n  \n For additional compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md).  \n  \n## .NET Framework Equivalent  \n [System::Char::IsLetter](https://msdn.microsoft.com/en-us/library/system.char.isletter.aspx)  \n  \n## See Also  \n [Character Classification](../../c-runtime-library/character-classification.md)   \n [Locale](../../c-runtime-library/locale.md)   \n [is, isw Routines](../../c-runtime-library/is-isw-routines.md)"}