{"nodes":[{"pos":[12,51],"content":"CMFCKeyMapDialog Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"CMFCKeyMapDialog Class | Microsoft Docs","pos":[0,39]}]},{"content":"CMFCKeyMapDialog Class","pos":[622,644]},{"pos":[645,736],"content":"The <ph id=\"ph1\">`CMFCKeyMapDialog`</ph> class supports a control that maps commands to keys on the keyboard.","source":"The `CMFCKeyMapDialog` class supports a control that maps commands to keys on the keyboard."},{"content":"Syntax","pos":[745,751]},{"content":"Members","pos":[819,826]},{"content":"Public Constructors","pos":[836,855]},{"content":"Name","pos":[862,866]},{"content":"Description","pos":[867,878]},{"content":"CMFCKeyMapDialog::CMFCKeyMapDialog","pos":[917,951]},{"pos":[990,1029],"content":"Constructs a <ph id=\"ph1\">`CMFCKeyMapDialog`</ph> object.","source":"Constructs a `CMFCKeyMapDialog` object."},{"content":"Public Methods","pos":[1040,1054]},{"content":"Name","pos":[1061,1065]},{"content":"Description","pos":[1066,1077]},{"content":"CMFCKeyMapDialog::DoModal","pos":[1116,1141]},{"content":"Displays a keyboard mapping dialog box.","pos":[1171,1210]},{"content":"Protected Methods","pos":[1221,1238]},{"content":"Name","pos":[1245,1249]},{"content":"Description","pos":[1250,1261]},{"content":"CMFCKeyMapDialog::FormatItem","pos":[1300,1328]},{"content":"Called by the framework to build a string that describes a key mapping.","pos":[1361,1432]},{"content":"By default, the string contains the command name, the shortcut keys used, and the shortcut key description.","pos":[1433,1540]},{"content":"CMFCKeyMapDialog::GetCommandKeys","pos":[1546,1578]},{"content":"Retrieves a string that contains a list of shortcut keys associated with the specified command.","pos":[1615,1710]},{"content":"CMFCKeyMapDialog::OnInsertItem","pos":[1716,1746]},{"content":"Called by the framework before a new item is inserted into the internal list control that supports the keyboard mapping control.","pos":[1781,1909]},{"content":"CMFCKeyMapDialog::OnPrintHeader","pos":[1915,1946]},{"content":"Called by the framework to print the header for the keyboard map on a new page.","pos":[1982,2061]},{"content":"CMFCKeyMapDialog::OnPrintItem","pos":[2067,2096]},{"content":"Called by the framework to print a keyboard mapping item.","pos":[2130,2187]},{"content":"CMFCKeyMapDialog::OnSetColumns","pos":[2193,2223]},{"content":"Called by the framework to set captions for the columns in the internal list control that supports the keyboard mapping control.","pos":[2258,2386]},{"content":"CMFCKeyMapDialog::PrintKeyMap","pos":[2392,2421]},{"pos":[2455,2519],"content":"Called by the framework when a user clicks the <bpt id=\"p1\">**</bpt>Print<ept id=\"p1\">**</ept> button.","source":"Called by the framework when a user clicks the **Print** button."},{"content":"CMFCKeyMapDialog::SetColumnsWidth","pos":[2525,2558]},{"content":"Called by the framework to set the width of the columns in the internal list control that supports the keyboard mapping control.","pos":[2596,2724]},{"content":"Remarks","pos":[2734,2741]},{"content":"Use the <ph id=\"ph1\">`CMFCKeyMapDialog`</ph> class to implement a resizable keyboard mapping dialog box.","pos":[2745,2831],"source":"Use the `CMFCKeyMapDialog` class to implement a resizable keyboard mapping dialog box."},{"content":"The dialog box uses a list view control to display keyboard shortcuts and their associated commands.","pos":[2832,2932]},{"content":"To use the <ph id=\"ph1\">`CMFCKeyMapDialog`</ph> class in an application, pass in a pointer to the main frame window as a parameter to the <ph id=\"ph2\">`CMFCKeyMapDialog`</ph> constructor.","pos":[2939,3090],"source":"To use the `CMFCKeyMapDialog` class in an application, pass in a pointer to the main frame window as a parameter to the `CMFCKeyMapDialog` constructor."},{"content":"Then call the <ph id=\"ph1\">`DoModal`</ph> method to start a modal dialog box.","pos":[3091,3150],"source":" Then call the `DoModal` method to start a modal dialog box."},{"content":"Inheritance Hierarchy","pos":[3159,3180]},{"content":"CObject","pos":[3185,3192]},{"content":"CCmdTarget","pos":[3239,3249]},{"content":"CWnd","pos":[3299,3303]},{"content":"CDialog","pos":[3347,3354]},{"content":"CDialogEx","pos":[3401,3410]},{"content":"CMFCKeyMapDialog","pos":[3459,3475]},{"content":"Requirements","pos":[3532,3544]},{"pos":[3548,3577],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> afxkeymapdialog.h","source":"**Header:** afxkeymapdialog.h"},{"pos":[3638,3672],"content":"CMFCKeyMapDialog::CMFCKeyMapDialog"},{"pos":[3676,3715],"content":"Constructs a <ph id=\"ph1\">`CMFCKeyMapDialog`</ph> object.","source":"Constructs a `CMFCKeyMapDialog` object."},{"content":"Parameters","pos":[3822,3832]},{"content":"[in]","pos":[3836,3840]},{"content":"A pointer to the parent window of the <ph id=\"ph1\">`CMFCKeyMapDialog`</ph> object.","pos":[3862,3926],"source":" A pointer to the parent window of the `CMFCKeyMapDialog` object."},{"content":"[in]","pos":[3933,3937]},{"content":"if the list of accelerator keys can be printed; otherwise, <ph id=\"ph1\">`FALSE`</ph>.","pos":[3963,4030],"source":" if the list of accelerator keys can be printed; otherwise, `FALSE`."},{"content":"The default is <ph id=\"ph1\">`FALSE`</ph>.","pos":[4031,4054],"source":" The default is `FALSE`."},{"content":"Remarks","pos":[4064,4071]},{"content":"Example","pos":[4081,4088]},{"content":"The following example demonstrates how to construct an object of the <ph id=\"ph1\">`CMFCKeyMapDialog`</ph> class.","pos":[4092,4186],"source":"The following example demonstrates how to construct an object of the `CMFCKeyMapDialog` class."},{"content":"This example is part of the <bpt id=\"p1\">[</bpt>Visual Studio Demo sample<ept id=\"p1\">](../../visual-cpp-samples.md)</ept>.","pos":[4187,4272],"source":" This example is part of the [Visual Studio Demo sample](../../visual-cpp-samples.md)."},{"pos":[4290,4317],"content":"NVC_MFC_VisualStudioDemo#21"},{"pos":[4427,4452],"content":"CMFCKeyMapDialog::DoModal"},{"content":"Displays a keyboard mapping dialog box.","pos":[4456,4495]},{"content":"Return Value","pos":[4547,4559]},{"content":"A signed integer, such as <ph id=\"ph1\">`IDOK`</ph> or <ph id=\"ph2\">`IDCANCEL`</ph>, that is passed to the <bpt id=\"p1\">[</bpt>CDialog::EndDialog<ept id=\"p1\">](../../mfc/reference/cdialog-class.md#cdialog__enddialog)</ept> method.","pos":[4563,4718],"source":"A signed integer, such as `IDOK` or `IDCANCEL`, that is passed to the [CDialog::EndDialog](../../mfc/reference/cdialog-class.md#cdialog__enddialog) method."},{"content":"The method, in turn, closes the dialog box.","pos":[4719,4762]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>CDialog::DoModal<ept id=\"p1\">](../../mfc/reference/cdialog-class.md#cdialog__domodal)</ept>.","pos":[4763,4863],"source":" For more information, see [CDialog::DoModal](../../mfc/reference/cdialog-class.md#cdialog__domodal)."},{"content":"Remarks","pos":[4873,4880]},{"content":"The keyboard mapping dialog box enables you to select and assign accelerator keys to various categories of commands.","pos":[4884,5000]},{"content":"In addition, you can copy the selected accelerator keys and their description to the clipboard.","pos":[5001,5096]},{"pos":[5151,5179],"content":"CMFCKeyMapDialog::FormatItem"},{"content":"Called by the framework to build a string that describes a key mapping.","pos":[5183,5254]},{"content":"By default, the string contains the command name, the shortcut keys used, and the shortcut key description.","pos":[5255,5362]},{"content":"Parameters","pos":[5435,5445]},{"content":"[in]","pos":[5449,5453]},{"content":"The zero-based index of an item in the internal list of key mappings.","pos":[5465,5534]},{"content":"Return Value","pos":[5544,5556]},{"pos":[5560,5617],"content":"A <ph id=\"ph1\">`CString`</ph> object that contains the formatted item text.","source":"A `CString` object that contains the formatted item text."},{"content":"Remarks","pos":[5627,5634]},{"pos":[5693,5725],"content":"CMFCKeyMapDialog::GetCommandKeys"},{"content":"Retrieves a string value.","pos":[5729,5754]},{"content":"The string contains a list of shortcut keys that are associated with a specified command.","pos":[5755,5844]},{"content":"Parameters","pos":[5924,5934]},{"content":"[in]","pos":[5938,5942]},{"content":"A command ID.","pos":[5956,5969]},{"content":"Return Value","pos":[5979,5991]},{"content":"A semicolon-delimited (';') list of shortcut keys that is associated with the specified command.","pos":[5995,6091]},{"content":"Remarks","pos":[6101,6108]},{"pos":[6165,6195],"content":"CMFCKeyMapDialog::OnInsertItem"},{"content":"Called by the framework before a new item is inserted into an internal list control that supports the keyboard mapping control.","pos":[6199,6326]},{"content":"Parameters","pos":[6428,6438]},{"content":"[in]","pos":[6442,6446]},{"content":"A pointer to a toolbar button that is used to map a keyboard key combination to a command name and description.","pos":[6460,6571]},{"content":"The key map item is stored in an internal list control.","pos":[6572,6627]},{"content":"[in]","pos":[6634,6638]},{"content":"A zero-based index that specifies where to insert the new key map item in the internal list control.","pos":[6650,6750]},{"content":"Remarks","pos":[6760,6767]},{"pos":[6825,6856],"content":"CMFCKeyMapDialog::OnPrintHeader"},{"content":"Called by the framework to print the header for the keyboard map on a new page.","pos":[6860,6939]},{"content":"Parameters","pos":[7045,7055]},{"content":"[in]","pos":[7059,7063]},{"content":"The device context for the printer.","pos":[7072,7107]},{"content":"[in]","pos":[7114,7118]},{"content":"The page number to print.","pos":[7130,7155]},{"content":"[in]","pos":[7162,7166]},{"content":"The horizontal offset of the header, in pixels.","pos":[7175,7222]},{"content":"Return Value","pos":[7232,7244]},{"content":"If successful, the height of the printed text.","pos":[7248,7294]},{"content":"For more information, see the Return Value section of <bpt id=\"p1\">[</bpt>CDC::DrawText<ept id=\"p1\">](../../mfc/reference/cdc-class.md#cdc__drawtext)</ept>.","pos":[7295,7413],"source":" For more information, see the Return Value section of [CDC::DrawText](../../mfc/reference/cdc-class.md#cdc__drawtext)."},{"content":"Remarks","pos":[7423,7430]},{"content":"The framework uses this method to print the keyboard map.","pos":[7434,7491]},{"content":"By default, this method prints the page number, application name, and dialog box title.","pos":[7492,7579]},{"pos":[7635,7664],"content":"CMFCKeyMapDialog::OnPrintItem"},{"content":"Called by the framework to print a keyboard mapping item.","pos":[7668,7725]},{"content":"Parameters","pos":[7866,7876]},{"content":"[in]","pos":[7880,7884]},{"content":"The device context of the printer.","pos":[7893,7927]},{"content":"[in]","pos":[7934,7938]},{"content":"The zero-based index of the item to print.","pos":[7950,7992]},{"content":"[in]","pos":[7999,8003]},{"content":"The vertical offset between the top of the page and the position of the item.","pos":[8011,8088]},{"content":"[in]","pos":[8095,8099]},{"content":"The horizontal offset between the left of the page and the position of the item.","pos":[8108,8188]},{"content":"[in]","pos":[8195,8199]},{"content":"to calculate the best height for the print item; <ph id=\"ph1\">`FALSE`</ph> to truncate the print item so that it fits the default space.","pos":[8224,8342],"source":" to calculate the best height for the print item; `FALSE` to truncate the print item so that it fits the default space."},{"content":"Return Value","pos":[8352,8364]},{"content":"The height of the printed item.","pos":[8368,8399]},{"content":"Remarks","pos":[8409,8416]},{"content":"The framework calls this method to print a key map dialog box item.","pos":[8420,8487]},{"content":"By default, this method prints the item's command name, shortcut keys, and command description.","pos":[8488,8583]},{"pos":[8640,8670],"content":"CMFCKeyMapDialog::OnSetColumns"},{"content":"Called by the framework to set captions for the columns in the internal list control that supports the keyboard mapping control.","pos":[8674,8802]},{"content":"Remarks","pos":[8856,8863]},{"content":"By default, this method obtains the captions for the columns from three resources.","pos":[8867,8949]},{"content":"The command column caption is from IDS_AFXBARRES_COMMAND, the key column caption is from IDS_AFXBARRES_KEYS, and the description column caption is from IDS_AFXBARRES_DESCRIPTION.","pos":[8950,9128]},{"pos":[9184,9213],"content":"CMFCKeyMapDialog::PrintKeyMap"},{"pos":[9217,9281],"content":"Called by the framework when a user clicks the <bpt id=\"p1\">**</bpt>Print<ept id=\"p1\">**</ept> button.","source":"Called by the framework when a user clicks the **Print** button."},{"content":"Remarks","pos":[9334,9341]},{"content":"The <ph id=\"ph1\">`PrintKeyMap`</ph> method prints the key map.","pos":[9345,9389],"source":"The `PrintKeyMap` method prints the key map."},{"content":"It initiates a new print job and then repeatedly calls the <bpt id=\"p1\">[</bpt>CMFCKeyMapDialog::OnPrintHeader<ept id=\"p1\">](#cmfckeymapdialog__onprintheader)</ept> and <bpt id=\"p2\">[</bpt>CMFCKeyMapDialog::OnPrintItem<ept id=\"p2\">](#cmfckeymapdialog__onprintitem)</ept> methods until all the key mappings are printed.","pos":[9390,9632],"source":" It initiates a new print job and then repeatedly calls the [CMFCKeyMapDialog::OnPrintHeader](#cmfckeymapdialog__onprintheader) and [CMFCKeyMapDialog::OnPrintItem](#cmfckeymapdialog__onprintitem) methods until all the key mappings are printed."},{"pos":[9692,9725],"content":"CMFCKeyMapDialog::SetColumnsWidth"},{"content":"Called by the framework to set the width of the columns in the internal list control that supports the keyboard mapping control.","pos":[9729,9857]},{"content":"Remarks","pos":[9914,9921]},{"content":"This method sets the internal list control's columns to default widths.","pos":[9925,9996]},{"content":"First, the width of the shortcut keys column is calculated.","pos":[9997,10056]},{"content":"Then one-third of the remaining width is allocated to the command column and the remaining two-thirds is allocated to the description column.","pos":[10057,10198]},{"content":"See Also","pos":[10207,10215]},{"content":"Hierarchy Chart","pos":[10220,10235]},{"content":"Classes","pos":[10272,10279]},{"content":"CKeyboardManager Class","pos":[10322,10344]}],"content":"---\ntitle: \"CMFCKeyMapDialog Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"CMFCKeyMapDialog\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"CMFCKeyMapDialog class\"\nms.assetid: 5feb4942-d636-462d-a162-0104dd320f4e\ncaps.latest.revision: 26\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# CMFCKeyMapDialog Class\nThe `CMFCKeyMapDialog` class supports a control that maps commands to keys on the keyboard.  \n  \n## Syntax  \n  \n```  \nclass CMFCKeyMapDialog : public CDialogEx  \n```  \n  \n## Members  \n  \n### Public Constructors  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CMFCKeyMapDialog::CMFCKeyMapDialog](#cmfckeymapdialog__cmfckeymapdialog)|Constructs a `CMFCKeyMapDialog` object.|  \n  \n### Public Methods  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CMFCKeyMapDialog::DoModal](#cmfckeymapdialog__domodal)|Displays a keyboard mapping dialog box.|  \n  \n### Protected Methods  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CMFCKeyMapDialog::FormatItem](#cmfckeymapdialog__formatitem)|Called by the framework to build a string that describes a key mapping. By default, the string contains the command name, the shortcut keys used, and the shortcut key description.|  \n|[CMFCKeyMapDialog::GetCommandKeys](#cmfckeymapdialog__getcommandkeys)|Retrieves a string that contains a list of shortcut keys associated with the specified command.|  \n|[CMFCKeyMapDialog::OnInsertItem](#cmfckeymapdialog__oninsertitem)|Called by the framework before a new item is inserted into the internal list control that supports the keyboard mapping control.|  \n|[CMFCKeyMapDialog::OnPrintHeader](#cmfckeymapdialog__onprintheader)|Called by the framework to print the header for the keyboard map on a new page.|  \n|[CMFCKeyMapDialog::OnPrintItem](#cmfckeymapdialog__onprintitem)|Called by the framework to print a keyboard mapping item.|  \n|[CMFCKeyMapDialog::OnSetColumns](#cmfckeymapdialog__onsetcolumns)|Called by the framework to set captions for the columns in the internal list control that supports the keyboard mapping control.|  \n|[CMFCKeyMapDialog::PrintKeyMap](#cmfckeymapdialog__printkeymap)|Called by the framework when a user clicks the **Print** button.|  \n|[CMFCKeyMapDialog::SetColumnsWidth](#cmfckeymapdialog__setcolumnswidth)|Called by the framework to set the width of the columns in the internal list control that supports the keyboard mapping control.|  \n  \n## Remarks  \n Use the `CMFCKeyMapDialog` class to implement a resizable keyboard mapping dialog box. The dialog box uses a list view control to display keyboard shortcuts and their associated commands.  \n  \n To use the `CMFCKeyMapDialog` class in an application, pass in a pointer to the main frame window as a parameter to the `CMFCKeyMapDialog` constructor. Then call the `DoModal` method to start a modal dialog box.  \n  \n## Inheritance Hierarchy  \n [CObject](../../mfc/reference/cobject-class.md)  \n  \n [CCmdTarget](../../mfc/reference/ccmdtarget-class.md)  \n  \n [CWnd](../../mfc/reference/cwnd-class.md)  \n  \n [CDialog](../../mfc/reference/cdialog-class.md)  \n  \n [CDialogEx](../../mfc/reference/cdialogex-class.md)  \n  \n [CMFCKeyMapDialog](../../mfc/reference/cmfckeymapdialog-class.md)  \n  \n## Requirements  \n **Header:** afxkeymapdialog.h  \n  \n##  <a name=\"cmfckeymapdialog__cmfckeymapdialog\"></a>  CMFCKeyMapDialog::CMFCKeyMapDialog  \n Constructs a `CMFCKeyMapDialog` object.  \n  \n```  \nCMFCKeyMapDialog(\n    CFrameWnd* pWndParentFrame,  \n    BOOL bEnablePrint=FALSE);\n```  \n  \n### Parameters  \n [in] `pWndParentFrame`  \n A pointer to the parent window of the `CMFCKeyMapDialog` object.  \n  \n [in] `bEnablePrint`  \n `TRUE` if the list of accelerator keys can be printed; otherwise, `FALSE`. The default is `FALSE`.  \n  \n### Remarks  \n  \n### Example  \n The following example demonstrates how to construct an object of the `CMFCKeyMapDialog` class. This example is part of the [Visual Studio Demo sample](../../visual-cpp-samples.md).  \n  \n [!code-cpp[NVC_MFC_VisualStudioDemo#21](../../mfc/codesnippet/cpp/cmfckeymapdialog-class_1.cpp)]  \n  \n##  <a name=\"cmfckeymapdialog__domodal\"></a>  CMFCKeyMapDialog::DoModal  \n Displays a keyboard mapping dialog box.  \n  \n```  \nvirtual INT_PTR DoModal();\n```  \n  \n### Return Value  \n A signed integer, such as `IDOK` or `IDCANCEL`, that is passed to the [CDialog::EndDialog](../../mfc/reference/cdialog-class.md#cdialog__enddialog) method. The method, in turn, closes the dialog box. For more information, see [CDialog::DoModal](../../mfc/reference/cdialog-class.md#cdialog__domodal).  \n  \n### Remarks  \n The keyboard mapping dialog box enables you to select and assign accelerator keys to various categories of commands. In addition, you can copy the selected accelerator keys and their description to the clipboard.  \n  \n##  <a name=\"cmfckeymapdialog__formatitem\"></a>  CMFCKeyMapDialog::FormatItem  \n Called by the framework to build a string that describes a key mapping. By default, the string contains the command name, the shortcut keys used, and the shortcut key description.  \n  \n```  \nvirtual CString FormatItem(int nItem) const;\n\n \n```  \n  \n### Parameters  \n [in] `nItem`  \n The zero-based index of an item in the internal list of key mappings.  \n  \n### Return Value  \n A `CString` object that contains the formatted item text.  \n  \n### Remarks  \n  \n##  <a name=\"cmfckeymapdialog__getcommandkeys\"></a>  CMFCKeyMapDialog::GetCommandKeys  \n Retrieves a string value. The string contains a list of shortcut keys that are associated with a specified command.  \n  \n```  \nvirtual CString GetCommandKeys(UINT uiCmdID) const;\n\n \n```  \n  \n### Parameters  \n [in] `uiCmdID`  \n A command ID.  \n  \n### Return Value  \n A semicolon-delimited (';') list of shortcut keys that is associated with the specified command.  \n  \n### Remarks  \n  \n##  <a name=\"cmfckeymapdialog__oninsertitem\"></a>  CMFCKeyMapDialog::OnInsertItem  \n Called by the framework before a new item is inserted into an internal list control that supports the keyboard mapping control.  \n  \n```  \nvirtual void OnInsertItem(\n    CMFCToolBarButton* pButton,  \n    int nItem);\n```  \n  \n### Parameters  \n [in] `pButton`  \n A pointer to a toolbar button that is used to map a keyboard key combination to a command name and description. The key map item is stored in an internal list control.  \n  \n [in] `nItem`  \n A zero-based index that specifies where to insert the new key map item in the internal list control.  \n  \n### Remarks  \n  \n##  <a name=\"cmfckeymapdialog__onprintheader\"></a>  CMFCKeyMapDialog::OnPrintHeader  \n Called by the framework to print the header for the keyboard map on a new page.  \n  \n```  \nvirtual int OnPrintHeader(\n    CDC& dc,  \n    int nPage,  \n    int cx) const;\n\n \n```  \n  \n### Parameters  \n [in] `dc`  \n The device context for the printer.  \n  \n [in] `nPage`  \n The page number to print.  \n  \n [in] `cx`  \n The horizontal offset of the header, in pixels.  \n  \n### Return Value  \n If successful, the height of the printed text. For more information, see the Return Value section of [CDC::DrawText](../../mfc/reference/cdc-class.md#cdc__drawtext).  \n  \n### Remarks  \n The framework uses this method to print the keyboard map. By default, this method prints the page number, application name, and dialog box title.  \n  \n##  <a name=\"cmfckeymapdialog__onprintitem\"></a>  CMFCKeyMapDialog::OnPrintItem  \n Called by the framework to print a keyboard mapping item.  \n  \n```  \nvirtual int OnPrintItem(\n    CDC& dc,  \n    int nItem,  \n    int y,  \n    int cx,  \n    BOOL bCalcHeight) const;\n\n \n```  \n  \n### Parameters  \n [in] `dc`  \n The device context of the printer.  \n  \n [in] `nItem`  \n The zero-based index of the item to print.  \n  \n [in] `y`  \n The vertical offset between the top of the page and the position of the item.  \n  \n [in] `cx`  \n The horizontal offset between the left of the page and the position of the item.  \n  \n [in] `bCalcHeight`  \n `TRUE` to calculate the best height for the print item; `FALSE` to truncate the print item so that it fits the default space.  \n  \n### Return Value  \n The height of the printed item.  \n  \n### Remarks  \n The framework calls this method to print a key map dialog box item. By default, this method prints the item's command name, shortcut keys, and command description.  \n  \n##  <a name=\"cmfckeymapdialog__onsetcolumns\"></a>  CMFCKeyMapDialog::OnSetColumns  \n Called by the framework to set captions for the columns in the internal list control that supports the keyboard mapping control.  \n  \n```  \nvirtual void OnSetColumns();\n```  \n  \n### Remarks  \n By default, this method obtains the captions for the columns from three resources. The command column caption is from IDS_AFXBARRES_COMMAND, the key column caption is from IDS_AFXBARRES_KEYS, and the description column caption is from IDS_AFXBARRES_DESCRIPTION.  \n  \n##  <a name=\"cmfckeymapdialog__printkeymap\"></a>  CMFCKeyMapDialog::PrintKeyMap  \n Called by the framework when a user clicks the **Print** button.  \n  \n```  \nvirtual void PrintKeyMap();\n```  \n  \n### Remarks  \n The `PrintKeyMap` method prints the key map. It initiates a new print job and then repeatedly calls the [CMFCKeyMapDialog::OnPrintHeader](#cmfckeymapdialog__onprintheader) and [CMFCKeyMapDialog::OnPrintItem](#cmfckeymapdialog__onprintitem) methods until all the key mappings are printed.  \n  \n##  <a name=\"cmfckeymapdialog__setcolumnswidth\"></a>  CMFCKeyMapDialog::SetColumnsWidth  \n Called by the framework to set the width of the columns in the internal list control that supports the keyboard mapping control.  \n  \n```  \nvirtual void SetColumnsWidth();\n```  \n  \n### Remarks  \n This method sets the internal list control's columns to default widths. First, the width of the shortcut keys column is calculated. Then one-third of the remaining width is allocated to the command column and the remaining two-thirds is allocated to the description column.  \n  \n## See Also  \n [Hierarchy Chart](../../mfc/hierarchy-chart.md)   \n [Classes](../../mfc/reference/mfc-classes.md)   \n [CKeyboardManager Class](../../mfc/reference/ckeyboardmanager-class.md)\n"}