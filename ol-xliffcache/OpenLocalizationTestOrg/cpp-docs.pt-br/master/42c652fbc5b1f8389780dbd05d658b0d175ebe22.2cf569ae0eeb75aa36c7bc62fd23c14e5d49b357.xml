{"nodes":[{"pos":[12,72],"content":"-volatile (volatile Keyword Interpretation) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"-volatile (volatile Keyword Interpretation) | Microsoft Docs","pos":[0,60]}]},{"content":"/volatile (volatile Keyword Interpretation)","pos":[852,895]},{"pos":[896,981],"content":"Specifies how the <bpt id=\"p1\">[</bpt>volatile<ept id=\"p1\">](../../cpp/volatile-cpp.md)</ept> keyword is to be interpreted.","source":"Specifies how the [volatile](../../cpp/volatile-cpp.md) keyword is to be interpreted."},{"content":"Syntax","pos":[990,996]},{"content":"Arguments","pos":[1041,1050]},{"content":"/volatile:iso","pos":[1056,1069]},{"content":"Selects strict <ph id=\"ph1\">`volatile`</ph> semantics as defined by the ISO-standard C++ language.","pos":[1075,1155],"source":" Selects strict `volatile` semantics as defined by the ISO-standard C++ language."},{"content":"Acquire/release semantics are not guaranteed on volatile accesses.","pos":[1156,1222]},{"content":"If the compiler targets ARM, this is the default interpretation of <ph id=\"ph1\">`volatile`</ph>.","pos":[1223,1301],"source":" If the compiler targets ARM, this is the default interpretation of `volatile`."},{"content":"/volatile:ms","pos":[1310,1322]},{"content":"Selects Microsoft extended <ph id=\"ph1\">`volatile`</ph> semantics, which add memory ordering guarantees beyond the ISO-standard C++ language.","pos":[1328,1451],"source":" Selects Microsoft extended `volatile` semantics, which add memory ordering guarantees beyond the ISO-standard C++ language."},{"content":"Acquire/release semantics are guaranteed on volatile accesses.","pos":[1452,1514]},{"content":"However, this option also forces the compiler to generate hardware memory barriers, which might add significant overhead on ARM and other weak memory-ordering architectures.","pos":[1515,1688]},{"content":"If the compiler targets any platform except ARM, this is default interpretation of <ph id=\"ph1\">`volatile`</ph>.","pos":[1689,1783],"source":" If the compiler targets any platform except ARM, this is default interpretation of `volatile`."},{"content":"Remarks","pos":[1792,1799]},{"content":"We strongly recommend that you use <bpt id=\"p1\">**</bpt>/volatile:iso<ept id=\"p1\">**</ept> along with explicit synchronization primitives and compiler intrinsics when you are dealing with memory that is shared across threads.","pos":[1803,1990],"source":"We strongly recommend that you use **/volatile:iso** along with explicit synchronization primitives and compiler intrinsics when you are dealing with memory that is shared across threads."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>volatile<ept id=\"p1\">](../../cpp/volatile-cpp.md)</ept>.","pos":[1991,2055],"source":" For more information, see [volatile](../../cpp/volatile-cpp.md)."},{"pos":[2062,2324],"content":"If you port existing code or change this option in the middle of a project, it may be helpful to enable warning <bpt id=\"p1\">[</bpt>C4746<ept id=\"p1\">](../../error-messages/compiler-warnings/compiler-warning-c4746.md)</ept> to identify code locations that are affected by the difference in semantics.","source":"If you port existing code or change this option in the middle of a project, it may be helpful to enable warning [C4746](../../error-messages/compiler-warnings/compiler-warning-c4746.md) to identify code locations that are affected by the difference in semantics."},{"pos":[2331,2387],"content":"There is no <ph id=\"ph1\">`#pragma`</ph> equivalent to control this option.","source":"There is no `#pragma` equivalent to control this option."},{"content":"To set the /volatile compiler option in Visual Studio","pos":[2397,2450]},{"content":"Open the <bpt id=\"p1\">**</bpt>Property Pages<ept id=\"p1\">**</ept> dialog box for the project.","pos":[2460,2515],"source":"Open the **Property Pages** dialog box for the project."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Working with Project Properties<ept id=\"p1\">](../../ide/working-with-project-properties.md)</ept>.","pos":[2516,2622],"source":" For more information, see [Working with Project Properties](../../ide/working-with-project-properties.md)."},{"pos":[2632,2660],"content":"Select the <bpt id=\"p1\">**</bpt>C/C++<ept id=\"p1\">**</ept> folder.","source":"Select the **C/C++** folder."},{"pos":[2670,2712],"content":"Select the <bpt id=\"p1\">**</bpt>Command Line<ept id=\"p1\">**</ept> property page.","source":"Select the **Command Line** property page."},{"pos":[2722,2795],"content":"In the <bpt id=\"p1\">**</bpt>Additional options<ept id=\"p1\">**</ept> box, add <ph id=\"ph1\">`/volatile:iso`</ph> or <ph id=\"ph2\">`/volatile:ms`</ph>.","source":"In the **Additional options** box, add `/volatile:iso` or `/volatile:ms`."},{"content":"See Also","pos":[2804,2812]},{"content":"volatile","pos":[2817,2825]},{"content":"Compiler Options","pos":[2859,2875]},{"content":"Setting Compiler Options","pos":[2925,2949]}],"content":"---\ntitle: \"-volatile (volatile Keyword Interpretation) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"/volatile:iso\"\n  - \"/volatile:ms\"\n  - \"/volatile\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"/volatile compiler option\"\n  - \"/volatile compiler option [C++]\"\n  - \"-volatile compiler option\"\n  - \"volatile compiler option [C++]\"\n  - \"volatile compiler option\"\n  - \"-volatile compiler option [C++]\"\nms.assetid: 9d08fcc6-5bda-44c8-8151-8d8d54f164b8\ncaps.latest.revision: 15\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# /volatile (volatile Keyword Interpretation)\nSpecifies how the [volatile](../../cpp/volatile-cpp.md) keyword is to be interpreted.  \n  \n## Syntax  \n  \n```  \n/volatile:{iso|ms}  \n```  \n  \n## Arguments  \n **/volatile:iso**  \n Selects strict `volatile` semantics as defined by the ISO-standard C++ language. Acquire/release semantics are not guaranteed on volatile accesses. If the compiler targets ARM, this is the default interpretation of `volatile`.  \n  \n **/volatile:ms**  \n Selects Microsoft extended `volatile` semantics, which add memory ordering guarantees beyond the ISO-standard C++ language. Acquire/release semantics are guaranteed on volatile accesses. However, this option also forces the compiler to generate hardware memory barriers, which might add significant overhead on ARM and other weak memory-ordering architectures. If the compiler targets any platform except ARM, this is default interpretation of `volatile`.  \n  \n## Remarks  \n We strongly recommend that you use **/volatile:iso** along with explicit synchronization primitives and compiler intrinsics when you are dealing with memory that is shared across threads. For more information, see [volatile](../../cpp/volatile-cpp.md).  \n  \n If you port existing code or change this option in the middle of a project, it may be helpful to enable warning [C4746](../../error-messages/compiler-warnings/compiler-warning-c4746.md) to identify code locations that are affected by the difference in semantics.  \n  \n There is no `#pragma` equivalent to control this option.  \n  \n### To set the /volatile compiler option in Visual Studio  \n  \n1.  Open the **Property Pages** dialog box for the project. For more information, see [Working with Project Properties](../../ide/working-with-project-properties.md).  \n  \n2.  Select the **C/C++** folder.  \n  \n3.  Select the **Command Line** property page.  \n  \n4.  In the **Additional options** box, add `/volatile:iso` or `/volatile:ms`.  \n  \n## See Also  \n [volatile](../../cpp/volatile-cpp.md)   \n [Compiler Options](../../build/reference/compiler-options.md)   \n [Setting Compiler Options](../../build/reference/setting-compiler-options.md)"}