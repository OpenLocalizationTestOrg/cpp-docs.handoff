{"nodes":[{"pos":[12,67],"content":"Using Image Lists in a Toolbar Control | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Using Image Lists in a Toolbar Control | Microsoft Docs","pos":[0,55]}]},{"content":"Using Image Lists in a Toolbar Control","pos":[686,724]},{"content":"By default, the images used by the buttons in a toolbar control are stored as a single bitmap.","pos":[725,819]},{"content":"However, you can also store button images in a set of image lists.","pos":[820,886]},{"content":"The toolbar control object can use up to three separate image lists:","pos":[887,955]},{"content":"Enabled image list   Contains images for toolbar buttons that are currently enabled.","pos":[965,1049]},{"content":"Disabled image list   Contains images for toolbar buttons that are currently disabled.","pos":[1059,1145]},{"content":"Highlighted image list   Contains images for toolbar buttons that are currently highlighted.","pos":[1155,1247]},{"content":"This image list is used only when the toolbar uses the <bpt id=\"p1\">**</bpt>TBSTYLE_FLAT<ept id=\"p1\">**</ept> style.","pos":[1248,1326],"source":" This image list is used only when the toolbar uses the **TBSTYLE_FLAT** style."},{"content":"These image lists are used by the toolbar control when you associate them with the <ph id=\"ph1\">`CToolBarCtrl`</ph> object.","pos":[1333,1438],"source":"These image lists are used by the toolbar control when you associate them with the `CToolBarCtrl` object."},{"content":"This association is accomplished by making calls to <bpt id=\"p1\">[</bpt>CToolBarCtrl::SetImageList<ept id=\"p1\">](../mfc/reference/ctoolbarctrl-class.md#ctoolbarctrl__setimagelist)</ept>, <bpt id=\"p2\">[</bpt>SetDisabledImageList<ept id=\"p2\">](../mfc/reference/ctoolbarctrl-class.md#ctoolbarctrl__setdisabledimagelist)</ept>, and <bpt id=\"p3\">[</bpt>SetHotImageList<ept id=\"p3\">](../mfc/reference/ctoolbarctrl-class.md#ctoolbarctrl__sethotimagelist)</ept>.","pos":[1439,1779],"source":" This association is accomplished by making calls to [CToolBarCtrl::SetImageList](../mfc/reference/ctoolbarctrl-class.md#ctoolbarctrl__setimagelist), [SetDisabledImageList](../mfc/reference/ctoolbarctrl-class.md#ctoolbarctrl__setdisabledimagelist), and [SetHotImageList](../mfc/reference/ctoolbarctrl-class.md#ctoolbarctrl__sethotimagelist)."},{"content":"By default, MFC uses the <ph id=\"ph1\">`CToolBar`</ph> class to implement MFC application toolbars.","pos":[1786,1866],"source":"By default, MFC uses the `CToolBar` class to implement MFC application toolbars."},{"content":"However, the <ph id=\"ph1\">`GetToolBarCtrl`</ph> member function can be used to retrieve the embedded <ph id=\"ph2\">`CToolBarCtrl`</ph> object.","pos":[1867,1972],"source":" However, the `GetToolBarCtrl` member function can be used to retrieve the embedded `CToolBarCtrl` object."},{"content":"You can then make calls to <ph id=\"ph1\">`CToolBarCtrl`</ph> member functions using the returned object.","pos":[1973,2058],"source":" You can then make calls to `CToolBarCtrl` member functions using the returned object."},{"pos":[2065,2256],"content":"The following example demonstrates this technique by assigning an enabled (<ph id=\"ph1\">`m_ToolBarImages`</ph>) and disabled (<ph id=\"ph2\">`m_ToolBarDisabledImages`</ph>) image list to a <ph id=\"ph3\">`CToolBarCtrl`</ph> object (<ph id=\"ph4\">`m_ToolBarCtrl`</ph>).","source":"The following example demonstrates this technique by assigning an enabled (`m_ToolBarImages`) and disabled (`m_ToolBarDisabledImages`) image list to a `CToolBarCtrl` object (`m_ToolBarCtrl`)."},{"pos":[2274,2302],"content":"NVC_MFCControlLadenDialog#35"},{"pos":[2381,2572],"content":"[!NOTE]\n The image lists used by the toolbar object must be permanent objects. For this reason, they are commonly data members of an MFC class; in this example, the main frame window class.","leadings":["","> "],"nodes":[{"content":" The image lists used by the toolbar object must be permanent objects. For this reason, they are commonly data members of an MFC class; in this example, the main frame window class.","pos":[8,189],"nodes":[{"content":"The image lists used by the toolbar object must be permanent objects.","pos":[1,70]},{"content":"For this reason, they are commonly data members of an MFC class; in this example, the main frame window class.","pos":[71,181]}]}]},{"pos":[2579,2708],"content":"Once the image lists are associated with the <ph id=\"ph1\">`CToolBarCtrl`</ph> object, the framework automatically displays the proper button image.","source":"Once the image lists are associated with the `CToolBarCtrl` object, the framework automatically displays the proper button image."},{"content":"See Also","pos":[2717,2725]},{"content":"Using CToolBarCtrl","pos":[2730,2748]},{"content":"Controls","pos":[2785,2793]}],"content":"---\ntitle: \"Using Image Lists in a Toolbar Control | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"toolbar controls [MFC], image\"\n  - \"image lists [C++], toolbar controls\"\n  - \"CToolBarCtrl class, image lists\"\nms.assetid: ccbe8df4-4ed9-4b54-bb93-9a1dcb3b97eb\ncaps.latest.revision: 12\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Using Image Lists in a Toolbar Control\nBy default, the images used by the buttons in a toolbar control are stored as a single bitmap. However, you can also store button images in a set of image lists. The toolbar control object can use up to three separate image lists:  \n  \n-   Enabled image list   Contains images for toolbar buttons that are currently enabled.  \n  \n-   Disabled image list   Contains images for toolbar buttons that are currently disabled.  \n  \n-   Highlighted image list   Contains images for toolbar buttons that are currently highlighted. This image list is used only when the toolbar uses the **TBSTYLE_FLAT** style.  \n  \n These image lists are used by the toolbar control when you associate them with the `CToolBarCtrl` object. This association is accomplished by making calls to [CToolBarCtrl::SetImageList](../mfc/reference/ctoolbarctrl-class.md#ctoolbarctrl__setimagelist), [SetDisabledImageList](../mfc/reference/ctoolbarctrl-class.md#ctoolbarctrl__setdisabledimagelist), and [SetHotImageList](../mfc/reference/ctoolbarctrl-class.md#ctoolbarctrl__sethotimagelist).  \n  \n By default, MFC uses the `CToolBar` class to implement MFC application toolbars. However, the `GetToolBarCtrl` member function can be used to retrieve the embedded `CToolBarCtrl` object. You can then make calls to `CToolBarCtrl` member functions using the returned object.  \n  \n The following example demonstrates this technique by assigning an enabled (`m_ToolBarImages`) and disabled (`m_ToolBarDisabledImages`) image list to a `CToolBarCtrl` object (`m_ToolBarCtrl`).  \n  \n [!code-cpp[NVC_MFCControlLadenDialog#35](../mfc/codesnippet/cpp/using-image-lists-in-a-toolbar-control_1.cpp)]  \n  \n> [!NOTE]\n>  The image lists used by the toolbar object must be permanent objects. For this reason, they are commonly data members of an MFC class; in this example, the main frame window class.  \n  \n Once the image lists are associated with the `CToolBarCtrl` object, the framework automatically displays the proper button image.  \n  \n## See Also  \n [Using CToolBarCtrl](../mfc/using-ctoolbarctrl.md)   \n [Controls](../mfc/controls-mfc.md)\n\n"}