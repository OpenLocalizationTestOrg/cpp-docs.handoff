{"nodes":[{"pos":[12,37],"content":"__mul128 | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"__mul128 | Microsoft Docs","pos":[0,25]}]},{"content":"__mul128","pos":[617,625]},{"content":"Microsoft Specific","pos":[628,646]},{"pos":[655,857],"content":"Multiplies two 64-bit integers passed in as the first two arguments and puts the high 64 bits of the product in the 64-bit integer pointed to by <ph id=\"ph1\">`HighProduct`</ph> and returns the low 64 bits of the product.","source":"Multiplies two 64-bit integers passed in as the first two arguments and puts the high 64 bits of the product in the 64-bit integer pointed to by `HighProduct` and returns the low 64 bits of the product."},{"content":"Syntax","pos":[866,872]},{"content":"Parameters","pos":[1004,1014]},{"content":"[in]","pos":[1018,1022]},{"content":"The first 64-bit integer to multiply.","pos":[1039,1076]},{"content":"[in]","pos":[1083,1087]},{"content":"The second 64-bit integer to multiply.","pos":[1106,1144]},{"content":"[out]","pos":[1151,1156]},{"content":"The high 64 bits of the product.","pos":[1174,1206]},{"content":"Return Value","pos":[1215,1227]},{"content":"The low 64 bits of the product.","pos":[1231,1262]},{"content":"Requirements","pos":[1271,1283]},{"content":"Intrinsic","pos":[1290,1299]},{"content":"Architecture","pos":[1300,1312]},{"pos":[1438,1465],"content":"<bpt id=\"p1\">**</bpt>Header file<ept id=\"p1\">**</ept> <ph id=\"ph1\">\\&lt;</ph>intrin.h&gt;","source":"**Header file** \\<intrin.h>"},{"content":"Example","pos":[1474,1481]},{"content":"END Microsoft Specific","pos":[1912,1934]},{"content":"See Also","pos":[1943,1951]},{"content":"Compiler Intrinsics","pos":[1956,1975]}],"content":"---\ntitle: \"__mul128 | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"__mul128\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"mul128 intrinsic\"\n  - \"__mul128 intrinsic\"\nms.assetid: f68914b9-bffb-4e46-b1ba-4c249f7b4ecc\ncaps.latest.revision: 15\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# __mul128\n**Microsoft Specific**  \n  \n Multiplies two 64-bit integers passed in as the first two arguments and puts the high 64 bits of the product in the 64-bit integer pointed to by `HighProduct` and returns the low 64 bits of the product.  \n  \n## Syntax  \n  \n```  \n__int64 _mul128(   \n   __int64 Multiplier,   \n   __int64 Multiplicand,   \n   __int64 *HighProduct   \n);  \n```  \n  \n#### Parameters  \n [in] `Multiplier`  \n The first 64-bit integer to multiply.  \n  \n [in] `Multiplicand`  \n The second 64-bit integer to multiply.  \n  \n [out] `HighProduct`  \n The high 64 bits of the product.  \n  \n## Return Value  \n The low 64 bits of the product.  \n  \n## Requirements  \n  \n|Intrinsic|Architecture|  \n|---------------|------------------|  \n|`__mul128`|[!INCLUDE[vcprx64](../assembler/inline/includes/vcprx64_md.md)]|  \n  \n **Header file** \\<intrin.h>  \n  \n## Example  \n  \n```  \n// mul128.c  \n// processor: x64  \n#include <stdio.h>  \n#include <intrin.h>  \n  \n#pragma intrinsic(_mul128)  \n  \nint main()  \n{  \n    __int64 a = 0x0fffffffffffffffI64;  \n    __int64 b = 0xf0000000I64;  \n    __int64 c, d;  \n  \n    d = _mul128(a, b, &c);  \n  \n    printf_s(\"%#I64x * %#I64x = %#I64x%I64x\\n\", a, b, c, d);  \n}  \n```  \n  \n```Output  \n0xfffffffffffffff * 0xf0000000 = 0xeffffffffffffff10000000  \n```  \n  \n## END Microsoft Specific  \n  \n## See Also  \n [Compiler Intrinsics](../intrinsics/compiler-intrinsics.md)"}