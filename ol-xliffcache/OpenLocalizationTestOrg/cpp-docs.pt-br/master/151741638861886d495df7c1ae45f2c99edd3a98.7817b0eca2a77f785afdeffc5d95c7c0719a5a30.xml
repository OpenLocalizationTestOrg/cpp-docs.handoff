{"nodes":[{"pos":[12,70],"content":"Common Visual C++ 64-bit Migration Issues | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Common Visual C++ 64-bit Migration Issues | Microsoft Docs","pos":[0,58]}]},{"content":"Common Visual C++ 64-bit Migration Issues","pos":[921,962]},{"content":"When you use Visual C++ to create applications to run on a 64-bit Windows operating system, you should be aware of the following issues:","pos":[963,1099]},{"content":"An <ph id=\"ph1\">`int`</ph> and a <ph id=\"ph2\">`long`</ph> are 32-bit values on 64-bit Windows operating systems.","pos":[1109,1185],"source":"An `int` and a `long` are 32-bit values on 64-bit Windows operating systems."},{"content":"For programs that you plan to compile for 64-bit platforms, you should be careful not to assign pointers to 32-bit variables.","pos":[1186,1311]},{"content":"Pointers are 64-bit on 64-bit platforms, and you will truncate the pointer value if you assign it to a 32-bit variable.","pos":[1312,1431]},{"pos":[1449,1531],"content":", <ph id=\"ph1\">`time_t`</ph>, and <ph id=\"ph2\">`ptrdiff_t`</ph> are 64-bit values on 64-bit Windows operating systems.","source":", `time_t`, and `ptrdiff_t` are 64-bit values on 64-bit Windows operating systems."},{"content":"is a 32-bit value on 32-bit Windows operating systems in Visual C++ versions before Visual C++ 2005.","pos":[1550,1650]},{"content":"is now a 64-bit integer by default.","pos":[1660,1695]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Time Management<ept id=\"p1\">](../c-runtime-library/time-management.md)</ept>.","pos":[1696,1781],"source":" For more information, see [Time Management](../c-runtime-library/time-management.md)."},{"content":"You should be aware of where your code takes an <ph id=\"ph1\">`int`</ph> value and processes it as a <ph id=\"ph2\">`size_t`</ph> or <ph id=\"ph3\">`time_t`</ph> value.","pos":[1792,1901],"source":"You should be aware of where your code takes an `int` value and processes it as a `size_t` or `time_t` value."},{"content":"It is possible that the number could grow to be larger than a 32-bit number and data will be truncated when it is passed back to the <ph id=\"ph1\">`int`</ph> storage.","pos":[1902,2049],"source":" It is possible that the number could grow to be larger than a 32-bit number and data will be truncated when it is passed back to the `int` storage."},{"content":"The %x (hex <ph id=\"ph1\">`int`</ph> format) <ph id=\"ph2\">`printf`</ph> modifier will not work as expected on a 64-bit Windows operating system.","pos":[2056,2163],"source":"The %x (hex `int` format) `printf` modifier will not work as expected on a 64-bit Windows operating system."},{"content":"It will only operate on the first 32 bits of the value that is passed to it.","pos":[2164,2240]},{"content":"Use %I32x to display a 32-bit integral type in hex format.","pos":[2250,2308]},{"content":"Use %I64x to display a 64-bit integral type in hex format.","pos":[2318,2376]},{"content":"The %p (hex format for a pointer) will work as expected on a 64-bit Windows operating system.","pos":[2386,2479]},{"content":"For more information, see:","pos":[2486,2512]},{"content":"Compiler Options","pos":[2523,2539]},{"content":"Migration Tips","pos":[2591,2605]},{"content":"See Also","pos":[2675,2683]},{"content":"Configuring Programs for 64-Bit","pos":[2688,2719]},{"content":"Visual C++ Porting and Upgrading Guide","pos":[2782,2820]}],"content":"---\ntitle: \"Common Visual C++ 64-bit Migration Issues | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"64-bit programming [C++], migration\"\n  - \"64-bit compiler [C++], migration\"\n  - \"porting 32-bit code to 64-bit code\"\n  - \"upgrading Visual C++ applications, 32-bit code\"\n  - \"migration [C++], 64-bit code issues\"\n  - \"32-bit code porting [C++]\"\n  - \"64-bit applications [C++]\"\n  - \"64-bit compiler [C++], porting 32-bit code\"\n  - \"Win64 [C++]\"\nms.assetid: d17fb838-7513-4e2d-8b27-a1666f17ad76\ncaps.latest.revision: 19\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Common Visual C++ 64-bit Migration Issues\nWhen you use Visual C++ to create applications to run on a 64-bit Windows operating system, you should be aware of the following issues:  \n  \n-   An `int` and a `long` are 32-bit values on 64-bit Windows operating systems. For programs that you plan to compile for 64-bit platforms, you should be careful not to assign pointers to 32-bit variables. Pointers are 64-bit on 64-bit platforms, and you will truncate the pointer value if you assign it to a 32-bit variable.  \n  \n-   `size_t`, `time_t`, and `ptrdiff_t` are 64-bit values on 64-bit Windows operating systems.  \n  \n-   `time_t` is a 32-bit value on 32-bit Windows operating systems in Visual C++ versions before Visual C++ 2005. `time_t` is now a 64-bit integer by default. For more information, see [Time Management](../c-runtime-library/time-management.md).  \n  \n     You should be aware of where your code takes an `int` value and processes it as a `size_t` or `time_t` value. It is possible that the number could grow to be larger than a 32-bit number and data will be truncated when it is passed back to the `int` storage.  \n  \n The %x (hex `int` format) `printf` modifier will not work as expected on a 64-bit Windows operating system. It will only operate on the first 32 bits of the value that is passed to it.  \n  \n-   Use %I32x to display a 32-bit integral type in hex format.  \n  \n-   Use %I64x to display a 64-bit integral type in hex format.  \n  \n-   The %p (hex format for a pointer) will work as expected on a 64-bit Windows operating system.  \n  \n For more information, see:  \n  \n-   [Compiler Options](../build/reference/compiler-options.md)  \n  \n-   [Migration Tips](http://msdn.microsoft.com/library/windows/desktop/aa384214)  \n  \n## See Also  \n [Configuring Programs for 64-Bit](../build/configuring-programs-for-64-bit-visual-cpp.md)   \n [Visual C++ Porting and Upgrading Guide](../porting/visual-cpp-porting-and-upgrading-guide.md)"}