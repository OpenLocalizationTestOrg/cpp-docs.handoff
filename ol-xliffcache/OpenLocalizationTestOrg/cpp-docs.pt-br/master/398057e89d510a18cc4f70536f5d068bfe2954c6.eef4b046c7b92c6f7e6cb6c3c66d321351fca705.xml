{"nodes":[{"pos":[12,60],"content":"&lt;permission&gt; (Visual C++) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"permission<ph id=\"ph1\">&amp;gt;</ph> (Visual C++) | Microsoft Docs","pos":[4,48],"source":"permission&gt; (Visual C++) | Microsoft Docs"}]},{"content":"permission<ph id=\"ph1\">&amp;gt;</ph> (Visual C++)","pos":[677,704],"source":"permission&gt; (Visual C++)"},{"content":"The <ph id=\"ph1\">\\&lt;</ph>permission&gt; tag lets you document the access of a member.","pos":[705,768],"source":"The \\<permission> tag lets you document the access of a member."},{"content":"&lt;xref:System.Security.PermissionSet&gt; lets you specify access to a member.","pos":[769,842],"source":" <xref:System.Security.PermissionSet> lets you specify access to a member."},{"content":"Syntax","pos":[851,857]},{"content":"Parameters","pos":[936,946]},{"content":"A reference to a member or field that is available to be called from the current compilation environment.","pos":[962,1067]},{"content":"The compiler checks that the given code element exists and translates <ph id=\"ph1\">`member`</ph> to the canonical element name in the output XML.","pos":[1068,1195],"source":" The compiler checks that the given code element exists and translates `member` to the canonical element name in the output XML."},{"content":"Enclose the name in single or double quotation marks.","pos":[1197,1250]},{"pos":[1257,1316],"content":"The compiler issues a warning if it does not find <ph id=\"ph1\">`member`</ph>.","source":"The compiler issues a warning if it does not find `member`."},{"pos":[1323,1431],"content":"For information on how to create a cref reference to a generic type, see <bpt id=\"p1\">[</bpt><ph id=\"ph1\">\\&lt;</ph>see&gt;<ept id=\"p1\">](../ide/see-visual-cpp.md)</ept>.","source":"For information on how to create a cref reference to a generic type, see [\\<see>](../ide/see-visual-cpp.md)."},{"content":"A description of the access to the member.","pos":[1455,1497]},{"content":"Remarks","pos":[1506,1513]},{"pos":[1517,1645],"content":"Compile with <bpt id=\"p1\">[</bpt>/doc<ept id=\"p1\">](../build/reference/doc-process-documentation-comments-c-cpp.md)</ept> to process documentation comments to a file.","source":"Compile with [/doc](../build/reference/doc-process-documentation-comments-c-cpp.md) to process documentation comments to a file."},{"content":"The Visual C++ compiler will attempt to resolve cref references in one pass through the documentation comments.","pos":[1652,1763]},{"content":"Therefore, if using the C++ lookup rules, a symbol is not found by the compiler the reference will be marked as unresolved.","pos":[1765,1888]},{"content":"See <bpt id=\"p1\">[</bpt><ph id=\"ph1\">\\&lt;</ph>seealso&gt;<ept id=\"p1\">](../ide/seealso-visual-cpp.md)</ept> for more information.","pos":[1889,1957],"source":" See [\\<seealso>](../ide/seealso-visual-cpp.md) for more information."},{"content":"Example","pos":[1966,1973]},{"content":"See Also","pos":[2334,2342]},{"content":"XML Documentation","pos":[2347,2364]}],"content":"---\ntitle: \"&lt;permission&gt; (Visual C++) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"permission\"\n  - \"<permission>\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"<permission> C++ XML tag\"\n  - \"permission C++ XML tag\"\nms.assetid: 537ee2bc-95bd-48e4-9ce6-3420c3da87f4\ncaps.latest.revision: 11\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# &lt;permission&gt; (Visual C++)\nThe \\<permission> tag lets you document the access of a member. <xref:System.Security.PermissionSet> lets you specify access to a member.  \n  \n## Syntax  \n  \n```  \n<permission cref=\"member\">description</permission>  \n```  \n  \n#### Parameters  \n `member`  \n A reference to a member or field that is available to be called from the current compilation environment. The compiler checks that the given code element exists and translates `member` to the canonical element name in the output XML.  Enclose the name in single or double quotation marks.  \n  \n The compiler issues a warning if it does not find `member`.  \n  \n For information on how to create a cref reference to a generic type, see [\\<see>](../ide/see-visual-cpp.md).  \n  \n `description`  \n A description of the access to the member.  \n  \n## Remarks  \n Compile with [/doc](../build/reference/doc-process-documentation-comments-c-cpp.md) to process documentation comments to a file.  \n  \n The Visual C++ compiler will attempt to resolve cref references in one pass through the documentation comments.  Therefore, if using the C++ lookup rules, a symbol is not found by the compiler the reference will be marked as unresolved. See [\\<seealso>](../ide/seealso-visual-cpp.md) for more information.  \n  \n## Example  \n  \n```  \n// xml_permission_tag.cpp  \n// compile with: /clr /doc /LD  \n// post-build command: xdcmake xml_permission_tag.dll  \nusing namespace System;  \n/// Text for class TestClass.  \npublic ref class TestClass {  \n   /// <permission cref=\"System::Security::PermissionSet\">Everyone can access this method.</permission>  \n   void Test() {}  \n};  \n```  \n  \n## See Also  \n [XML Documentation](../ide/xml-documentation-visual-cpp.md)"}