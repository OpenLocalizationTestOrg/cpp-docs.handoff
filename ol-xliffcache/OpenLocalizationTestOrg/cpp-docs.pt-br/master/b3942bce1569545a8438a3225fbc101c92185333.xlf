<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="pt-br">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-787e512" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b3942bce1569545a8438a3225fbc101c92185333</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\mfc\reference\cminiframewnd-class.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8a2ed9293df48be38db92c97a320d4d0167e27c0</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1928f99a6b632e4ba5e00d7ad21853860a421d68</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>CMiniFrameWnd Class | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>CMiniFrameWnd Class</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Represents a half-height frame window typically seen around floating toolbars.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Members</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Public Constructors</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>CMiniFrameWnd::CMiniFrameWnd</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Constructs a <ph id="ph1">`CMiniFrameWnd`</ph> object.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Public Methods</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>CMiniFrameWnd::Create</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Creates a <ph id="ph1">`CMiniFrameWnd`</ph> object after construction.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>CMiniFrameWnd::CreateEx</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Creates a <ph id="ph1">`CMiniFrameWnd`</ph> object (with additional options) after construction.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>These mini-frame windows behave like normal frame windows, except that they do not have minimize/maximize buttons or menus and you only have to single-click on the system menu to dismiss them.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>To use a <ph id="ph1">`CMiniFrameWnd`</ph> object, first define the object.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Then call the <bpt id="p1">[</bpt>Create<ept id="p1">](#cminiframewnd__create)</ept> member function to display the mini-frame window.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>For more information on how to use <ph id="ph1">`CMiniFrameWnd`</ph> objects, see the article <bpt id="p1">[</bpt>Docking and Floating Toolbars<ept id="p1">](../../mfc/docking-and-floating-toolbars.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Inheritance Hierarchy</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>CObject</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>CCmdTarget</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>CWnd</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>CFrameWnd</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Requirements</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Header:<ept id="p1">**</ept> afxwin.h</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>CMiniFrameWnd::CMiniFrameWnd</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Constructs a <ph id="ph1">`CMiniFrameWnd`</ph> object, but does not create the window.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>To create the window, call <bpt id="p1">[</bpt>CMiniFrameWnd::Create<ept id="p1">](#cminiframewnd__create)</ept>.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>CMiniFrameWnd::Create</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Creates the Windows mini-frame window and attaches it to the <ph id="ph1">`CMiniFrameWnd`</ph> object.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Points to a null-terminated character string that names the Windows class.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The class name can be any name registered with the global <bpt id="p1">[</bpt>AfxRegisterWndClass<ept id="p1">](application-information-and-management.md#afxregisterwndclass)</ept> function.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">**</bpt>NULL<ept id="p1">**</ept>, the window class will be registered for you by the framework.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>MFC gives the default class the following styles and attributes:</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Sets style bit <bpt id="p1">**</bpt>CS_DBLCLKS<ept id="p1">**</ept>, which sends double-click messages to the window procedure when the user double-clicks the mouse.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Sets style bits <bpt id="p1">**</bpt>CS_HREDRAW<ept id="p1">**</ept> and <bpt id="p2">**</bpt>CS_VREDRAW<ept id="p2">**</ept>, which direct the contents of the client area to be redrawn when the window changes size.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Sets the class cursor to the Windows standard <bpt id="p1">**</bpt>IDC_ARROW<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Sets the class background brush to <bpt id="p1">**</bpt>NULL<ept id="p1">**</ept>, so the window will not erase its background.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Sets the class icon to the standard, waving-flag Windows logo icon.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Sets the window to the default size and position, as indicated by Windows.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Points to a null-terminated character string that contains the window name.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Specifies the window style attributes.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>These can include standard window styles and one or more of the following special styles:</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>MFS_MOVEFRAME<ept id="p1">**</ept> Allows the mini-frame window to be moved by clicking on any edge of the window, not just the caption.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>MFS_4THICKFRAME<ept id="p1">**</ept> Disables resizing of the mini-frame window.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>MFS_SYNCACTIVE<ept id="p1">**</ept> Synchronizes the activation of the mini-frame window to the activation of its parent window.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>MFS_THICKFRAME<ept id="p1">**</ept> Allows the mini-frame window to be sized as small as the contents of the client area allow.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>MFS_BLOCKSYSMENU<ept id="p1">**</ept> Disables access to the system menu and the control menu, and converts them to part of the caption (title bar).</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>CWnd::Create<ept id="p1">](../../mfc/reference/cwnd-class.md#cwnd__create)</ept> for a description of possible window style values.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The typical combination used for mini-frame windows is <bpt id="p1">**</bpt>WS_POPUP&amp;#124;WS_CAPTION&amp;#124;WS_SYSMENU<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">`RECT`</ph> structure specifying the desired dimensions of the window.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Points to the parent window.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Use <bpt id="p1">**</bpt>NULL<ept id="p1">**</ept> for top-level windows.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>If the mini-frame window is created as a child window, this is the identifier of the child control; otherwise 0.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Nonzero if successful; otherwise 0.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Create<ept id="p1">**</ept> initializes the window's class name and window name and registers default values for its style and parent.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>CMiniFrameWnd::CreateEx</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Creates a <ph id="ph1">`CMiniFrameWnd`</ph> object.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Specifies the extended style of the <ph id="ph1">`CMiniFrameWnd`</ph> being created.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Apply any of the <bpt id="p1">[</bpt>extended window styles<ept id="p1">](../../mfc/reference/extended-window-styles.md)</ept> to the window.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Points to a null-terminated character string that names the Windows class (a <bpt id="p1">[</bpt>WNDCLASS<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms633576)</ept> structure).</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The class name can be any name registered with the global <bpt id="p1">[</bpt>AfxRegisterWndClass<ept id="p1">](http://msdn.microsoft.com/library/62c7d4b1-7a29-4abb-86f7-dec541659db0)</ept> function or any of the predefined control-class names.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>It must not be <bpt id="p1">**</bpt>NULL<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Points to a null-terminated character string that contains the window name.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Specifies the window style attributes.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Window Styles<ept id="p1">](../../mfc/reference/window-styles.md)</ept> and <bpt id="p2">[</bpt>CWnd::Create<ept id="p2">](../../mfc/reference/cwnd-class.md#cwnd__create)</ept> for a description of the possible values.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>The size and position of the window, in client coordinates of <ph id="ph1">`pParentWnd`</ph>.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Points to the parent window object.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>The identifier of the child window.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Returns TRUE on success, FALSE on failure.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`CreateEx`</ph> parameters specify the <bpt id="p1">**</bpt>WNDCLASS<ept id="p1">**</ept>, window style, and (optionally) initial position and size of the window.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>also specifies the window's parent (if any) and ID.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>When <ph id="ph1">`CreateEx`</ph> executes, Windows sends the <bpt id="p1">[</bpt>WM_GETMINMAXINFO<ept id="p1">](../../mfc/reference/cwnd-class.md#cwnd__ongetminmaxinfo)</ept>, <bpt id="p2">[</bpt>WM_NCCREATE<ept id="p2">](../../mfc/reference/cwnd-class.md#cwnd__onnccreate)</ept>, <bpt id="p3">[</bpt>WM_NCCALCSIZE<ept id="p3">](../../mfc/reference/cwnd-class.md#cwnd__onnccalcsize)</ept>, and <bpt id="p4">[</bpt>WM_CREATE<ept id="p4">](../../mfc/reference/cwnd-class.md#cwnd__oncreate)</ept> messages to the window.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>To extend the default message handling, derive a class from <ph id="ph1">`CMiniFrameWnd`</ph>, add a message map to the new class, and provide member functions for the above messages.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Override <ph id="ph1">`OnCreate`</ph>, for example, to perform needed initialization for a new class.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Override further <bpt id="p1">**</bpt>On<ept id="p1">**</ept><bpt id="p2">*</bpt>Message<ept id="p2">*</ept> message handlers to add further functionality to your derived class.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>If the <bpt id="p1">**</bpt>WS_VISIBLE<ept id="p1">**</ept> style is given, Windows sends the window all the messages required to activate and show the window.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>If the window style specifies a title bar, the window title pointed to by the <ph id="ph1">`lpszWindowName`</ph> parameter is displayed in the title bar.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`dwStyle`</ph> parameter can be any combination of <bpt id="p1">[</bpt>window styles<ept id="p1">](../../mfc/reference/window-styles.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>The old style Palette toolbox windows are no longer supported.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>The old style, which did not have an "X" Close button, was supported when running an MFC application on previous versions of Windows, but is no longer supported in Visual C++.NET.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Only the new <ph id="ph1">`WS_EX_TOOLWINDOW`</ph> style is now supported; for a description of this style, see <bpt id="p1">[</bpt>Extended Window Styles<ept id="p1">](../../mfc/reference/extended-window-styles.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>CFrameWnd Class</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Hierarchy Chart</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>CFrameWnd Class</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>