{"nodes":[{"pos":[12,40],"content":".SAVEXMM128 | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":".SAVEXMM128 | Microsoft Docs","pos":[0,28]}]},{"content":".SAVEXMM128","pos":[602,613]},{"content":"Generates either a <ph id=\"ph1\">`UWOP_SAVE_XMM128`</ph> or a <ph id=\"ph2\">`UWOP_SAVE_XMM128_FAR`</ph> unwind code entry for the specified XMM register and offset using the current prologue offset.","pos":[614,774],"source":"Generates either a `UWOP_SAVE_XMM128` or a `UWOP_SAVE_XMM128_FAR` unwind code entry for the specified XMM register and offset using the current prologue offset."},{"content":"MASM will choose the most efficient encoding.","pos":[775,820]},{"content":"Syntax","pos":[829,835]},{"content":"Remarks","pos":[889,896]},{"content":".SAVEXMM128 allows ml64.exe users to specify how a frame function unwinds, and is only allowed within the prologue, which extends from the <bpt id=\"p1\">[</bpt>PROC<ept id=\"p1\">](../../assembler/masm/proc.md)</ept> FRAME declaration to the <bpt id=\"p2\">[</bpt>.ENDPROLOG<ept id=\"p2\">](../../assembler/masm/dot-endprolog.md)</ept> directive.","pos":[900,1163],"source":".SAVEXMM128 allows ml64.exe users to specify how a frame function unwinds, and is only allowed within the prologue, which extends from the [PROC](../../assembler/masm/proc.md) FRAME declaration to the [.ENDPROLOG](../../assembler/masm/dot-endprolog.md) directive."},{"content":"These directives do not generate code; they only generate <ph id=\"ph1\">`.xdata`</ph> and <ph id=\"ph2\">`.pdata`</ph>.","pos":[1164,1244],"source":" These directives do not generate code; they only generate `.xdata` and `.pdata`."},{"content":".SAVEXMM128 should be preceded by instructions that actually implement the actions to be unwound.","pos":[1245,1342]},{"content":"It is a good practice to wrap both the unwind directives and the code they are meant to unwind in a macro to ensure agreement.","pos":[1343,1469]},{"pos":[1485,1510],"content":"must be a multiple of 16."},{"pos":[1517,1616],"content":"For more information, see <bpt id=\"p1\">[</bpt>MASM for x64 (ml64.exe)<ept id=\"p1\">](../../assembler/masm/masm-for-x64-ml64-exe.md)</ept>.","source":"For more information, see [MASM for x64 (ml64.exe)](../../assembler/masm/masm-for-x64-ml64-exe.md)."},{"content":"See Also","pos":[1625,1633]},{"content":"Directives Reference","pos":[1638,1658]}],"content":"---\ntitle: \".SAVEXMM128 | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \".SAVEXMM128\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \".SAVEXMM128 directive\"\nms.assetid: 551eb472-b8d0-47b1-8d82-995d1f485723\ncaps.latest.revision: 9\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# .SAVEXMM128\nGenerates either a `UWOP_SAVE_XMM128` or a `UWOP_SAVE_XMM128_FAR` unwind code entry for the specified XMM register and offset using the current prologue offset. MASM will choose the most efficient encoding.  \n  \n## Syntax  \n  \n```  \n.savexmm128 xmmreg , offset  \n```  \n  \n## Remarks  \n .SAVEXMM128 allows ml64.exe users to specify how a frame function unwinds, and is only allowed within the prologue, which extends from the [PROC](../../assembler/masm/proc.md) FRAME declaration to the [.ENDPROLOG](../../assembler/masm/dot-endprolog.md) directive. These directives do not generate code; they only generate `.xdata` and `.pdata`. .SAVEXMM128 should be preceded by instructions that actually implement the actions to be unwound. It is a good practice to wrap both the unwind directives and the code they are meant to unwind in a macro to ensure agreement.  \n  \n `offset` must be a multiple of 16.  \n  \n For more information, see [MASM for x64 (ml64.exe)](../../assembler/masm/masm-for-x64-ml64-exe.md).  \n  \n## See Also  \n [Directives Reference](../../assembler/masm/directives-reference.md)"}