{"nodes":[{"pos":[12,45],"content":"Invoking Scripts | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Invoking Scripts | Microsoft Docs","pos":[0,33]}]},{"content":"Invoking Scripts","pos":[677,693]},{"content":"<bpt id=\"p1\">[</bpt>Using Replaceable Parameters (The Registrar's Preprocessor)<ept id=\"p1\">](../atl/using-replaceable-parameters-the-registrar-s-preprocessor.md)</ept> discusses replacement maps and mentions the Registrar method <bpt id=\"p2\">**</bpt>AddReplacement<ept id=\"p2\">**</ept>.","pos":[694,905],"source":"[Using Replaceable Parameters (The Registrar's Preprocessor)](../atl/using-replaceable-parameters-the-registrar-s-preprocessor.md) discusses replacement maps and mentions the Registrar method **AddReplacement**."},{"content":"The Registrar has eight other methods specific to scripting, and all are described in the following table.","pos":[906,1012]},{"content":"Method","pos":[1019,1025]},{"content":"Syntax/Description","pos":[1026,1044]},{"content":"ResourceRegister","pos":[1094,1110]},{"content":"<bpt id=\"p1\">**</bpt>HRESULT ResourceRegister( LPCOLESTR<ept id=\"p1\">**</ept>  <bpt id=\"p2\">*</bpt>resFileName<ept id=\"p2\">*</ept> <bpt id=\"p3\">**</bpt>, UINT<ept id=\"p3\">**</ept>  <ph id=\"ph1\">`nID`</ph> <bpt id=\"p4\">**</bpt>, LPCOLESTR<ept id=\"p4\">**</ept>  <ph id=\"ph2\">`szType`</ph> <bpt id=\"p5\">**</bpt>);<ept id=\"p5\">**</ept>","pos":[1113,1218],"source":"**HRESULT ResourceRegister( LPCOLESTR**  *resFileName* **, UINT**  `nID` **, LPCOLESTR**  `szType` **);**"},{"content":"Registers the script contained in a module's resource.","pos":[1231,1285]},{"content":"<bpt id=\"p1\">*</bpt>resFileName<ept id=\"p1\">*</ept> indicates the UNC path to the module itself.","pos":[1286,1344],"source":"*resFileName* indicates the UNC path to the module itself."},{"content":"and <ph id=\"ph1\">`szType`</ph> contain the resource's ID and type, respectively.","pos":[1351,1413],"source":" and `szType` contain the resource's ID and type, respectively."},{"content":"ResourceUnregister","pos":[1420,1438]},{"content":"<bpt id=\"p1\">**</bpt>HRESULT ResourceUnregister( LPCOLESTR<ept id=\"p1\">**</ept>  <bpt id=\"p2\">*</bpt>resFileName<ept id=\"p2\">*</ept> <bpt id=\"p3\">**</bpt>, UINT<ept id=\"p3\">**</ept>  <ph id=\"ph1\">`nID`</ph> <bpt id=\"p4\">**</bpt>, LPCOLESTR<ept id=\"p4\">**</ept>  <ph id=\"ph2\">`szType`</ph> <bpt id=\"p5\">**</bpt>);<ept id=\"p5\">**</ept>","pos":[1441,1548],"source":"**HRESULT ResourceUnregister( LPCOLESTR**  *resFileName* **, UINT**  `nID` **, LPCOLESTR**  `szType` **);**"},{"content":"Unregisters the script contained in a module's resource.","pos":[1561,1617]},{"content":"<bpt id=\"p1\">*</bpt>resFileName<ept id=\"p1\">*</ept> indicates the UNC path to the module itself.","pos":[1618,1676],"source":"*resFileName* indicates the UNC path to the module itself."},{"content":"and <ph id=\"ph1\">`szType`</ph> contain the resource's ID and type, respectively.","pos":[1683,1745],"source":" and `szType` contain the resource's ID and type, respectively."},{"content":"ResourceRegisterSz","pos":[1752,1770]},{"content":"<bpt id=\"p1\">**</bpt>HRESULT ResourceRegisterSz( LPCOLESTR<ept id=\"p1\">**</ept>  <bpt id=\"p2\">*</bpt>resFileName<ept id=\"p2\">*</ept> <bpt id=\"p3\">**</bpt>, LPCOLESTR<ept id=\"p3\">**</ept>  <bpt id=\"p4\">*</bpt>szID<ept id=\"p4\">*</ept> <bpt id=\"p5\">**</bpt>, LPCOLESTR<ept id=\"p5\">**</ept>  <ph id=\"ph1\">`szType`</ph> <bpt id=\"p6\">**</bpt>);<ept id=\"p6\">**</ept>","pos":[1773,1886],"source":"**HRESULT ResourceRegisterSz( LPCOLESTR**  *resFileName* **, LPCOLESTR**  *szID* **, LPCOLESTR**  `szType` **);**"},{"content":"Registers the script contained in a module's resource.","pos":[1899,1953]},{"content":"<bpt id=\"p1\">*</bpt>resFileName<ept id=\"p1\">*</ept> indicates the UNC path to the module itself.","pos":[1954,2012],"source":"*resFileName* indicates the UNC path to the module itself."},{"content":"<bpt id=\"p1\">*</bpt>szID<ept id=\"p1\">*</ept> and <ph id=\"ph1\">`szType`</ph> contain the resource's string identifier and type, respectively.","pos":[2013,2097],"source":"*szID* and `szType` contain the resource's string identifier and type, respectively."},{"content":"ResourceUnregisterSz","pos":[2104,2124]},{"content":"<bpt id=\"p1\">**</bpt>HRESULT ResourceUnregisterSz( LPCOLESTR<ept id=\"p1\">**</ept>  <bpt id=\"p2\">*</bpt>resFileName<ept id=\"p2\">*</ept> <bpt id=\"p3\">**</bpt>, LPCOLESTR<ept id=\"p3\">**</ept>  <bpt id=\"p4\">*</bpt>szID<ept id=\"p4\">*</ept> <bpt id=\"p5\">**</bpt>, LPCOLESTR<ept id=\"p5\">**</ept>  <ph id=\"ph1\">`szType`</ph> <bpt id=\"p6\">**</bpt>);<ept id=\"p6\">**</ept>","pos":[2127,2242],"source":"**HRESULT ResourceUnregisterSz( LPCOLESTR**  *resFileName* **, LPCOLESTR**  *szID* **, LPCOLESTR**  `szType` **);**"},{"content":"Unregisters the script contained in a module's resource.","pos":[2255,2311]},{"content":"<bpt id=\"p1\">*</bpt>resFileName<ept id=\"p1\">*</ept> indicates the UNC path to the module itself.","pos":[2312,2370],"source":"*resFileName* indicates the UNC path to the module itself."},{"content":"<bpt id=\"p1\">*</bpt>szID<ept id=\"p1\">*</ept> and <ph id=\"ph1\">`szType`</ph> contain the resource's string identifier and type, respectively.","pos":[2371,2455],"source":"*szID* and `szType` contain the resource's string identifier and type, respectively."},{"content":"FileRegister","pos":[2462,2474]},{"content":"<bpt id=\"p1\">**</bpt>HRESULT FileRegister( LPCOLESTR<ept id=\"p1\">**</ept>  <bpt id=\"p2\">*</bpt>fileName<ept id=\"p2\">*</ept>  <bpt id=\"p3\">**</bpt>);<ept id=\"p3\">**</ept>","pos":[2477,2532],"source":"**HRESULT FileRegister( LPCOLESTR**  *fileName*  **);**"},{"content":"Registers the script in a file.","pos":[2545,2576]},{"content":"<bpt id=\"p1\">*</bpt>fileName<ept id=\"p1\">*</ept> is a UNC path to a file that contains (or is) a resource script.","pos":[2577,2652],"source":"*fileName* is a UNC path to a file that contains (or is) a resource script."},{"content":"FileUnregister","pos":[2659,2673]},{"content":"<bpt id=\"p1\">**</bpt>HRESULT FileUnregister( LPCOLESTR<ept id=\"p1\">**</ept>  <bpt id=\"p2\">*</bpt>fileName<ept id=\"p2\">*</ept>  <bpt id=\"p3\">**</bpt>);<ept id=\"p3\">**</ept>","pos":[2676,2733],"source":"**HRESULT FileUnregister( LPCOLESTR**  *fileName*  **);**"},{"content":"Unregisters the script in a file.","pos":[2746,2779]},{"content":"<bpt id=\"p1\">*</bpt>fileName<ept id=\"p1\">*</ept> is a UNC path to a file that contains (or is) a resource script.","pos":[2780,2855],"source":"*fileName* is a UNC path to a file that contains (or is) a resource script."},{"content":"StringRegister","pos":[2862,2876]},{"content":"<bpt id=\"p1\">**</bpt>HRESULT StringRegister( LPCOLESTR<ept id=\"p1\">**</ept>  <bpt id=\"p2\">*</bpt>data<ept id=\"p2\">*</ept>  <bpt id=\"p3\">**</bpt>);<ept id=\"p3\">**</ept>","pos":[2879,2932],"source":"**HRESULT StringRegister( LPCOLESTR**  *data*  **);**"},{"content":"Registers the script in a string.","pos":[2945,2978]},{"content":"<bpt id=\"p1\">*</bpt>data<ept id=\"p1\">*</ept> contains the script itself.","pos":[2979,3013],"source":"*data* contains the script itself."},{"content":"StringUnregister","pos":[3020,3036]},{"content":"<bpt id=\"p1\">**</bpt>HRESULT StringUnregister( LPCOLESTR<ept id=\"p1\">**</ept>  <bpt id=\"p2\">*</bpt>data<ept id=\"p2\">*</ept>  <bpt id=\"p3\">**</bpt>);<ept id=\"p3\">**</ept>","pos":[3039,3094],"source":"**HRESULT StringUnregister( LPCOLESTR**  *data*  **);**"},{"content":"Unregisters the script in a string.","pos":[3107,3142]},{"content":"<bpt id=\"p1\">*</bpt>data<ept id=\"p1\">*</ept> contains the script itself.","pos":[3143,3177],"source":"*data* contains the script itself."},{"pos":[3185,3347],"content":"<bpt id=\"p1\">**</bpt>ResourceRegisterSz<ept id=\"p1\">**</ept> and <bpt id=\"p2\">**</bpt>ResourceUnregisterSz<ept id=\"p2\">**</ept>, are similar to <bpt id=\"p3\">**</bpt>ResourceRegister<ept id=\"p3\">**</ept> and <bpt id=\"p4\">**</bpt>ResourceUnregister<ept id=\"p4\">**</ept>, but allow you to specify a string identifier.","source":"**ResourceRegisterSz** and **ResourceUnregisterSz**, are similar to **ResourceRegister** and **ResourceUnregister**, but allow you to specify a string identifier."},{"content":"The methods <bpt id=\"p1\">**</bpt>FileRegister<ept id=\"p1\">**</ept> and <bpt id=\"p2\">**</bpt>FileUnregister<ept id=\"p2\">**</ept> are useful if you do not want the script in a resource or if you want the script in its own file.","pos":[3354,3503],"source":"The methods **FileRegister** and **FileUnregister** are useful if you do not want the script in a resource or if you want the script in its own file."},{"content":"The methods <bpt id=\"p1\">**</bpt>StringRegister<ept id=\"p1\">**</ept> and <bpt id=\"p2\">**</bpt>StringUnregister<ept id=\"p2\">**</ept> allow the .rgs file to be stored in a dynamically allocated string.","pos":[3504,3627],"source":" The methods **StringRegister** and **StringUnregister** allow the .rgs file to be stored in a dynamically allocated string."},{"content":"See Also","pos":[3636,3644]},{"content":"Creating Registrar Scripts","pos":[3649,3675]}],"content":"---\ntitle: \"Invoking Scripts | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"StringRegister\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"StringRegister method\"\n  - \"scripts, invoking registry in ATL\"\nms.assetid: eabd41ee-586b-4266-9e92-5aaad04b73a4\ncaps.latest.revision: 10\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"ru-ru\"\n  - \"zh-cn\"\n  - \"zh-tw\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"tr-tr\"\n---\n# Invoking Scripts\n[Using Replaceable Parameters (The Registrar's Preprocessor)](../atl/using-replaceable-parameters-the-registrar-s-preprocessor.md) discusses replacement maps and mentions the Registrar method **AddReplacement**. The Registrar has eight other methods specific to scripting, and all are described in the following table.  \n  \n|Method|Syntax/Description|  \n|------------|-------------------------|  \n|**ResourceRegister**|**HRESULT ResourceRegister( LPCOLESTR**  *resFileName* **, UINT**  `nID` **, LPCOLESTR**  `szType` **);**<br /><br /> Registers the script contained in a module's resource. *resFileName* indicates the UNC path to the module itself. `nID` and `szType` contain the resource's ID and type, respectively.|  \n|**ResourceUnregister**|**HRESULT ResourceUnregister( LPCOLESTR**  *resFileName* **, UINT**  `nID` **, LPCOLESTR**  `szType` **);**<br /><br /> Unregisters the script contained in a module's resource. *resFileName* indicates the UNC path to the module itself. `nID` and `szType` contain the resource's ID and type, respectively.|  \n|**ResourceRegisterSz**|**HRESULT ResourceRegisterSz( LPCOLESTR**  *resFileName* **, LPCOLESTR**  *szID* **, LPCOLESTR**  `szType` **);**<br /><br /> Registers the script contained in a module's resource. *resFileName* indicates the UNC path to the module itself. *szID* and `szType` contain the resource's string identifier and type, respectively.|  \n|**ResourceUnregisterSz**|**HRESULT ResourceUnregisterSz( LPCOLESTR**  *resFileName* **, LPCOLESTR**  *szID* **, LPCOLESTR**  `szType` **);**<br /><br /> Unregisters the script contained in a module's resource. *resFileName* indicates the UNC path to the module itself. *szID* and `szType` contain the resource's string identifier and type, respectively.|  \n|**FileRegister**|**HRESULT FileRegister( LPCOLESTR**  *fileName*  **);**<br /><br /> Registers the script in a file. *fileName* is a UNC path to a file that contains (or is) a resource script.|  \n|**FileUnregister**|**HRESULT FileUnregister( LPCOLESTR**  *fileName*  **);**<br /><br /> Unregisters the script in a file. *fileName* is a UNC path to a file that contains (or is) a resource script.|  \n|**StringRegister**|**HRESULT StringRegister( LPCOLESTR**  *data*  **);**<br /><br /> Registers the script in a string. *data* contains the script itself.|  \n|**StringUnregister**|**HRESULT StringUnregister( LPCOLESTR**  *data*  **);**<br /><br /> Unregisters the script in a string. *data* contains the script itself.|  \n  \n **ResourceRegisterSz** and **ResourceUnregisterSz**, are similar to **ResourceRegister** and **ResourceUnregister**, but allow you to specify a string identifier.  \n  \n The methods **FileRegister** and **FileUnregister** are useful if you do not want the script in a resource or if you want the script in its own file. The methods **StringRegister** and **StringUnregister** allow the .rgs file to be stored in a dynamically allocated string.  \n  \n## See Also  \n [Creating Registrar Scripts](../atl/creating-registrar-scripts.md)\n\n"}