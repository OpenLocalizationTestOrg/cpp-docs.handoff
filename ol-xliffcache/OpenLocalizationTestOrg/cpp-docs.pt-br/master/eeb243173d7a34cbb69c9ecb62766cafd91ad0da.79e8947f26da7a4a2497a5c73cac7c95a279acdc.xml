{"nodes":[{"pos":[12,58],"content":"hash_multiset::rend (STL-CLR) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"hash_multiset::rend (STL-CLR) | Microsoft Docs","pos":[0,46]}]},{"content":"hash_multiset::rend (STL/CLR)","pos":[639,668]},{"content":"Designates the end of the reversed controlled sequence.","pos":[669,724]},{"content":"Syntax","pos":[733,739]},{"content":"Remarks","pos":[790,797]},{"content":"The member function returns a reverse iterator that points just beyond the beginning of the controlled sequence.","pos":[801,913]},{"content":"Hence, it designates the <ph id=\"ph1\">`end`</ph> of the reverse sequence.","pos":[914,969],"source":" Hence, it designates the `end` of the reverse sequence."},{"content":"You use it to obtain an iterator that designates the <ph id=\"ph1\">`current`</ph> end of the controlled sequence seen in reverse order, but its status can change if the length of the controlled sequence changes.","pos":[970,1162],"source":" You use it to obtain an iterator that designates the `current` end of the controlled sequence seen in reverse order, but its status can change if the length of the controlled sequence changes."},{"content":"Example","pos":[1171,1178]},{"content":"Requirements","pos":[1970,1982]},{"pos":[1986,2016],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> <ph id=\"ph1\">\\&lt;</ph>cliext/hash_set&gt;","source":"**Header:** \\<cliext/hash_set>"},{"pos":[2023,2044],"content":"<bpt id=\"p1\">**</bpt>Namespace:<ept id=\"p1\">**</ept> cliext","source":"**Namespace:** cliext"},{"content":"See Also","pos":[2053,2061]},{"content":"hash_multiset (STL/CLR)","pos":[2066,2089]},{"content":"hash_multiset::begin (STL/CLR)","pos":[2132,2162]},{"content":"hash_multiset::end (STL/CLR)","pos":[2211,2239]},{"content":"hash_multiset::rbegin (STL/CLR)","pos":[2286,2317]}],"content":"---\ntitle: \"hash_multiset::rend (STL-CLR) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"cliext::hash_multiset::rend\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"rend member [STL/CLR]\"\nms.assetid: 6d007ac9-18cc-4b51-8384-a4ff65d23e97\ncaps.latest.revision: 13\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# hash_multiset::rend (STL/CLR)\nDesignates the end of the reversed controlled sequence.  \n  \n## Syntax  \n  \n```  \nreverse_iterator rend();  \n```  \n  \n## Remarks  \n The member function returns a reverse iterator that points just beyond the beginning of the controlled sequence. Hence, it designates the `end` of the reverse sequence. You use it to obtain an iterator that designates the `current` end of the controlled sequence seen in reverse order, but its status can change if the length of the controlled sequence changes.  \n  \n## Example  \n  \n```  \n// cliext_hash_multiset_rend.cpp   \n// compile with: /clr   \n#include <cliext/hash_set>   \n  \ntypedef cliext::hash_multiset<wchar_t> Myhash_multiset;   \nint main()   \n    {   \n    Myhash_multiset c1;   \n    c1.insert(L'a');   \n    c1.insert(L'b');   \n    c1.insert(L'c');   \n  \n// display initial contents \" a b c\"   \n    for each (wchar_t elem in c1)   \n        System::Console::Write(\" {0}\", elem);   \n    System::Console::WriteLine();   \n  \n// inspect first two items   \n    Myhash_multiset::reverse_iterator rit = c1.rend();   \n    --rit;   \n    System::Console::WriteLine(\"*-- --rend() = {0}\", *--rit);   \n    System::Console::WriteLine(\"*--rend() = {0}\", *++rit);   \n    return (0);   \n    }  \n  \n```  \n  \n```Output  \n a b c  \n*-- --rend() = b  \n*--rend() = a  \n```  \n  \n## Requirements  \n **Header:** \\<cliext/hash_set>  \n  \n **Namespace:** cliext  \n  \n## See Also  \n [hash_multiset (STL/CLR)](../dotnet/hash-multiset-stl-clr.md)   \n [hash_multiset::begin (STL/CLR)](../dotnet/hash-multiset-begin-stl-clr.md)   \n [hash_multiset::end (STL/CLR)](../dotnet/hash-multiset-end-stl-clr.md)   \n [hash_multiset::rbegin (STL/CLR)](../dotnet/hash-multiset-rbegin-stl-clr.md)"}