<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="pt-br">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-04506c2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">231a4d135ca64f82bf37f22f28d265775f5fddf7</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\build\reference\constraints-of-delay-loading-dlls.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5931fbb1d178032c6fb2d447850552e06dee808c</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f47b8e04e6c7a03c3fb77306e23b97fcb3e13592</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Constraints of Delay Loading DLLs | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Constraints of Delay Loading DLLs</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>There are constraints regarding the delay loading of imports.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Imports of data cannot be supported.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>A workaround is to explicitly handle the data import yourself using <ph id="ph1">`LoadLibrary`</ph> (or <ph id="ph2">`GetModuleHandle`</ph> after you know the delay-load helper has loaded the DLL) and <ph id="ph3">`GetProcAddress`</ph>.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Delay loading Kernel32.dll is not supported.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>This DLL is necessary for the delay-load helper routines to perform the delay loading.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Binding<ept id="p1">](../../build/reference/binding-imports.md)</ept> of entry points that are forwarded is not supported.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Delay loading of a DLL may not result in the same behavior of the process if there are per-process initializations that occur in the entry point of the delay-loaded DLL.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Other cases include static TLS (thread local storage), declared using <bpt id="p1">[</bpt>__declspec(thread)<ept id="p1">](../../cpp/thread.md)</ept>, which is not handled when the DLL is loaded via <ph id="ph1">`LoadLibrary`</ph>.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Dynamic TLS, using <ph id="ph1">`TlsAlloc`</ph>, <ph id="ph2">`TlsFree`</ph>, <ph id="ph3">`TlsGetValue`</ph>, and <ph id="ph4">`TlsSetValue`</ph>, is still available for use in either static or delay-loaded DLLs.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Static (global) function pointers should be reinitialized to imported functions after the first call to the function.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>This is because the first use of the function pointer will point to the thunk.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>There is no way currently to delay the loading of only specific procedures from a DLL while using the normal import mechanism.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Custom calling conventions (such as using condition codes on x86 architectures) are not supported.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Also, the floating-point registers are not saved on any platform.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>If your custom helper routine or hook routines use floating-point types, they need to completely save and restore the floating-point state on machines with register calling conventions with floating-point parameters.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Be careful about delay loading the CRT DLL if you call CRT functions that take floating-point parameters on a numeric data processor (NDP) stack in the help function.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Linker Support for Delay-Loaded DLLs</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>LoadLibrary function</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>GetModuleHandle function</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>GetProcAddress function</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>TlsAlloc function</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>TlsFree function</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>TlsGetValue function</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>TlsSetValue function</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>