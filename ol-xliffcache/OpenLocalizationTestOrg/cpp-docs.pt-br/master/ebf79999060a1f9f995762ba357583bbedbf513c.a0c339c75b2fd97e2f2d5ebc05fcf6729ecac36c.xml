{"nodes":[{"pos":[12,52],"content":"deque::assign (STL-CLR) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"deque::assign (STL-CLR) | Microsoft Docs","pos":[0,40]}]},{"content":"deque::assign (STL/CLR)","pos":[629,652]},{"content":"Replaces all elements.","pos":[653,675]},{"content":"Syntax","pos":[684,690]},{"content":"Parameters","pos":[904,914]},{"content":"count","pos":[918,923]},{"content":"Number of elements to insert.","pos":[927,956]},{"content":"first","pos":[963,968]},{"content":"Beginning of range to insert.","pos":[972,1001]},{"content":"last","pos":[1008,1012]},{"content":"End of range to insert.","pos":[1016,1039]},{"content":"right","pos":[1046,1051]},{"content":"Enumeration to insert.","pos":[1055,1077]},{"content":"val","pos":[1084,1087]},{"content":"Value of the element to insert.","pos":[1091,1122]},{"content":"Remarks","pos":[1131,1138]},{"content":"The first member function replaces the controlled sequence with a repetition of <ph id=\"ph1\">`count`</ph> elements of value <ph id=\"ph2\">`val`</ph>.","pos":[1142,1254],"source":"The first member function replaces the controlled sequence with a repetition of `count` elements of value `val`."},{"content":"You use it to fill the container with elements all having the same value.","pos":[1255,1328]},{"content":"If <ph id=\"ph1\">`InIt`</ph> is an integer type, the second member function behaves the same as <ph id=\"ph2\">`assign((size_type)``first``, (value_type)``last``)`</ph>.","pos":[1335,1465],"source":"If `InIt` is an integer type, the second member function behaves the same as `assign((size_type)``first``, (value_type)``last``)`."},{"content":"Otherwise, it replaces the controlled sequence with the sequence <ph id=\"ph1\">`[``first``,`</ph> <ph id=\"ph2\">`last``)`</ph>.","pos":[1466,1555],"source":" Otherwise, it replaces the controlled sequence with the sequence `[``first``,` `last``)`."},{"content":"You use it to make the controlled sequence a copy another sequence.","pos":[1556,1623]},{"content":"The third member function replaces the controlled sequence with the sequence designated by the enumerator <ph id=\"ph1\">`right`</ph>.","pos":[1630,1744],"source":"The third member function replaces the controlled sequence with the sequence designated by the enumerator `right`."},{"content":"You use it to make the controlled sequence a copy of a sequence described by an enumerator.","pos":[1745,1836]},{"content":"Example","pos":[1845,1852]},{"content":"Requirements","pos":[2874,2886]},{"pos":[2890,2917],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> <ph id=\"ph1\">\\&lt;</ph>cliext/deque&gt;","source":"**Header:** \\<cliext/deque>"},{"pos":[2924,2945],"content":"<bpt id=\"p1\">**</bpt>Namespace:<ept id=\"p1\">**</ept> cliext","source":"**Namespace:** cliext"},{"content":"See Also","pos":[2954,2962]},{"content":"deque (STL/CLR)","pos":[2967,2982]},{"content":"operator= (deque) (STL/CLR)","pos":[3017,3044]}],"content":"---\ntitle: \"deque::assign (STL-CLR) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"cliext::deque::assign\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"assign member [STL/CLR]\"\nms.assetid: 03fafdbb-6b10-4464-b3dc-0cc5cb8ac980\ncaps.latest.revision: 14\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# deque::assign (STL/CLR)\nReplaces all elements.  \n  \n## Syntax  \n  \n```  \nvoid assign(size_type count, value_type val);  \ntemplate<typename InIt>  \n    void assign(InIt first, InIt last);  \nvoid assign(System::Collections::Generic::IEnumerable<Value>^ right);  \n```  \n  \n#### Parameters  \n count  \n Number of elements to insert.  \n  \n first  \n Beginning of range to insert.  \n  \n last  \n End of range to insert.  \n  \n right  \n Enumeration to insert.  \n  \n val  \n Value of the element to insert.  \n  \n## Remarks  \n The first member function replaces the controlled sequence with a repetition of `count` elements of value `val`. You use it to fill the container with elements all having the same value.  \n  \n If `InIt` is an integer type, the second member function behaves the same as `assign((size_type)``first``, (value_type)``last``)`. Otherwise, it replaces the controlled sequence with the sequence `[``first``,` `last``)`. You use it to make the controlled sequence a copy another sequence.  \n  \n The third member function replaces the controlled sequence with the sequence designated by the enumerator `right`. You use it to make the controlled sequence a copy of a sequence described by an enumerator.  \n  \n## Example  \n  \n```  \n// cliext_deque_assign.cpp   \n// compile with: /clr   \n#include <cliext/deque>   \n  \nint main()   \n    {   \n    cliext::deque<wchar_t> c1;   \n    c1.push_back(L'a');   \n    c1.push_back(L'b');   \n    c1.push_back(L'c');   \n  \n// assign a repetition of values   \n    cliext::deque<wchar_t> c2;   \n    c2.assign(6, L'x');   \n    for each (wchar_t elem in c2)   \n        System::Console::Write(\" {0}\", elem);   \n    System::Console::WriteLine();   \n  \n// assign an iterator range   \n    c2.assign(c1.begin(), c1.end() - 1);   \n    for each (wchar_t elem in c2)   \n        System::Console::Write(\" {0}\", elem);   \n    System::Console::WriteLine();   \n  \n// assign an enumeration   \n    c2.assign(   // NOTE: cast is not needed   \n        (System::Collections::Generic::IEnumerable<wchar_t>^)%c1);   \n    for each (wchar_t elem in c2)   \n        System::Console::Write(\" {0}\", elem);   \n    System::Console::WriteLine();   \n    return (0);   \n    }  \n  \n```  \n  \n```Output  \nx x x x x x  \na b  \na b c  \n```  \n  \n## Requirements  \n **Header:** \\<cliext/deque>  \n  \n **Namespace:** cliext  \n  \n## See Also  \n [deque (STL/CLR)](../dotnet/deque-stl-clr.md)   \n [operator= (deque) (STL/CLR)](../dotnet/operator-assign-deque-stl-clr.md)"}