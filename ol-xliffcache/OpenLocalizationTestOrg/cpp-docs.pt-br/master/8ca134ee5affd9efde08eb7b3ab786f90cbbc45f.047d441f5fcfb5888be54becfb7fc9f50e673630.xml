{"nodes":[{"pos":[12,51],"content":"_com_error::_com_error | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"_com_error::_com_error | Microsoft Docs","pos":[0,39]}]},{"content":"_com_error::_com_error","pos":[659,681]},{"content":"Microsoft Specific","pos":[684,702]},{"pos":[711,744],"content":"Constructs a <ph id=\"ph1\">`_com_error`</ph> object.","source":"Constructs a `_com_error` object."},{"content":"Syntax","pos":[753,759]},{"content":"Parameters","pos":[954,964]},{"content":"information.","pos":[986,998]},{"content":"<bpt id=\"p1\"> **</bpt>IErrorInfo<ept id=\"p1\">**</ept> object.","pos":[1018,1041],"source":" **IErrorInfo** object."},{"content":"bool fAddRef=false","pos":[1050,1068]},{"content":"Causes the constructor to call AddRef on a non-null <bpt id=\"p1\">**</bpt>IErrorInfo<ept id=\"p1\">**</ept> interface.","pos":[1074,1151],"source":" Causes the constructor to call AddRef on a non-null **IErrorInfo** interface."},{"content":"This provides for correct reference counting in the common case where ownership of the interface is passed into the <ph id=\"ph1\">`_com_error`</ph> object, such as:","pos":[1152,1297],"source":" This provides for correct reference counting in the common case where ownership of the interface is passed into the `_com_error` object, such as:"},{"pos":[1353,1551],"content":"If you do not want your code to transfer ownership to the <ph id=\"ph1\">`_com_error`</ph> object, and the <ph id=\"ph2\">`AddRef`</ph> is required to offset the <bpt id=\"p1\">**</bpt>Release<ept id=\"p1\">**</ept> in the <ph id=\"ph3\">`_com_error`</ph> destructor, construct the object as follows:","source":"If you do not want your code to transfer ownership to the `_com_error` object, and the `AddRef` is required to offset the **Release** in the `_com_error` destructor, construct the object as follows:"},{"content":"An existing <ph id=\"ph1\">`_com_error`</ph> object.","pos":[1621,1653],"source":" An existing `_com_error` object."},{"content":"Remarks","pos":[1662,1669]},{"content":"The first constructor creates a new object given an <ph id=\"ph1\">`HRESULT`</ph> and optional <bpt id=\"p1\">**</bpt>IErrorInfo<ept id=\"p1\">**</ept> object.","pos":[1673,1770],"source":"The first constructor creates a new object given an `HRESULT` and optional **IErrorInfo** object."},{"content":"The second creates a copy of an existing <ph id=\"ph1\">`_com_error`</ph> object.","pos":[1771,1832],"source":" The second creates a copy of an existing `_com_error` object."},{"content":"END Microsoft Specific","pos":[1841,1863]},{"content":"See Also","pos":[1874,1882]},{"content":"_com_error Class","pos":[1887,1903]}],"content":"---\ntitle: \"_com_error::_com_error | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"language-reference\"\nf1_keywords: \n  - \"_com_error._com_error\"\n  - \"_com_error::_com_error\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"_com_error method\"\nms.assetid: 0a69e46c-caab-49ef-b091-eee401253ce6\ncaps.latest.revision: 6\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# _com_error::_com_error\n**Microsoft Specific**  \n  \n Constructs a `_com_error` object.  \n  \n## Syntax  \n  \n```  \n  \n      _com_error(  \n   HRESULT hr,  \n   IErrorInfo* perrinfo = NULL,  \n   bool fAddRef=false  \n) throw( );  \n_com_error(  \n   const _com_error& that   \n) throw( );  \n```  \n  \n#### Parameters  \n `hr`  \n `HRESULT` information.  \n  \n `perrinfo`  \n **IErrorInfo** object.  \n  \n **bool fAddRef=false**  \n Causes the constructor to call AddRef on a non-null **IErrorInfo** interface. This provides for correct reference counting in the common case where ownership of the interface is passed into the `_com_error` object, such as:  \n  \n```  \nthrow _com_error(hr, perrinfo);  \n```  \n  \n If you do not want your code to transfer ownership to the `_com_error` object, and the `AddRef` is required to offset the **Release** in the `_com_error` destructor, construct the object as follows:  \n  \n```  \n_com_error err(hr, perrinfo, true);  \n```  \n  \n `that`  \n An existing `_com_error` object.  \n  \n## Remarks  \n The first constructor creates a new object given an `HRESULT` and optional **IErrorInfo** object. The second creates a copy of an existing `_com_error` object.  \n  \n **END Microsoft Specific**  \n  \n## See Also  \n [_com_error Class](../cpp/com-error-class.md)"}