{"nodes":[{"pos":[12,49],"content":"CAtlDllModuleT Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"CAtlDllModuleT Class | Microsoft Docs","pos":[0,37]}]},{"content":"CAtlDllModuleT Class","pos":[750,770]},{"content":"This class represents the module for a DLL.","pos":[771,814]},{"content":"Syntax","pos":[823,829]},{"content":"Parameters","pos":[933,943]},{"content":"Your class derived from <ph id=\"ph1\">`CAtlDllModuleT`</ph>.","pos":[954,995],"source":" Your class derived from `CAtlDllModuleT`."},{"content":"Members","pos":[1004,1011]},{"content":"Public Constructors","pos":[1021,1040]},{"content":"Name","pos":[1047,1051]},{"content":"Description","pos":[1052,1063]},{"content":"CAtlDllModuleT::CAtlDllModuleT","pos":[1102,1132]},{"content":"The constructor.","pos":[1167,1183]},{"content":"CAtlDllModuleT::~CAtlDllModuleT","pos":[1189,1220]},{"content":"The destructor.","pos":[1260,1275]},{"content":"Public Methods","pos":[1286,1300]},{"content":"Name","pos":[1307,1311]},{"content":"Description","pos":[1312,1323]},{"content":"CAtlDllModuleT::DllCanUnloadNow","pos":[1362,1393]},{"content":"Tests if the DLL can be unloaded.","pos":[1429,1462]},{"content":"CAtlDllModuleT::DllGetClassObject","pos":[1468,1501]},{"content":"Returns a class factory.","pos":[1539,1563]},{"content":"CAtlDllModuleT::DllMain","pos":[1569,1592]},{"content":"The optional entry point into a dynamic-link library (DLL).","pos":[1620,1679]},{"content":"CAtlDllModuleT::DllRegisterServer","pos":[1685,1718]},{"content":"Adds entries to the system registry for objects in the DLL.","pos":[1756,1815]},{"content":"CAtlDllModuleT::DllUnregisterServer","pos":[1821,1856]},{"content":"Removes entries in the system registry for objects in the DLL.","pos":[1896,1958]},{"content":"CAtlDllModuleT::GetClassObject","pos":[1964,1994]},{"content":"Returns a class factory.","pos":[2029,2053]},{"content":"Invoked by <bpt id=\"p1\">[</bpt>DllGetClassObject<ept id=\"p1\">](#catldllmodulet__dllgetclassobject)</ept>.","pos":[2054,2121],"source":" Invoked by [DllGetClassObject](#catldllmodulet__dllgetclassobject)."},{"content":"Remarks","pos":[2131,2138]},{"content":"represents the module for a dynamic-link library (DLL) and provides functions used by all DLL projects.","pos":[2159,2262]},{"content":"This specialization of <bpt id=\"p1\">[</bpt>CAtlModuleT<ept id=\"p1\">](../../atl/reference/catlmodulet-class.md)</ept> class includes support for registration.","pos":[2263,2382],"source":" This specialization of [CAtlModuleT](../../atl/reference/catlmodulet-class.md) class includes support for registration."},{"pos":[2389,2487],"content":"For more information on modules in ATL, see <bpt id=\"p1\">[</bpt>ATL Module Classes<ept id=\"p1\">](../../atl/atl-module-classes.md)</ept>.","source":"For more information on modules in ATL, see [ATL Module Classes](../../atl/atl-module-classes.md)."},{"content":"Inheritance Hierarchy","pos":[2496,2517]},{"content":"_ATL_MODULE","pos":[2522,2533]},{"content":"CAtlModule","pos":[2571,2581]},{"content":"CAtlModuleT","pos":[2631,2642]},{"content":"Requirements","pos":[2717,2729]},{"pos":[2733,2754],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> atlbase.h","source":"**Header:** atlbase.h"},{"pos":[2811,2841],"content":"CAtlDllModuleT::CAtlDllModuleT"},{"content":"The constructor.","pos":[2845,2861]},{"pos":[2962,2993],"content":"CAtlDllModuleT::~CAtlDllModuleT"},{"content":"The destructor.","pos":[2997,3012]},{"pos":[3110,3141],"content":"CAtlDllModuleT::DllCanUnloadNow"},{"content":"Tests if the DLL can be unloaded.","pos":[3145,3178]},{"content":"Return Value","pos":[3236,3248]},{"content":"Returns S_OK if the DLL can be unloaded, or S_FALSE if it cannot.","pos":[3252,3317]},{"pos":[3377,3410],"content":"CAtlDllModuleT::DllGetClassObject"},{"content":"Returns the class factory.","pos":[3414,3440]},{"content":"Parameters","pos":[3549,3559]},{"content":"The CLSID of the object to be created.","pos":[3575,3613]},{"content":"The IID of the requested interface.","pos":[3630,3665]},{"content":"A pointer to the interface pointer identified by <ph id=\"ph1\">`riid`</ph>.","pos":[3681,3737],"source":" A pointer to the interface pointer identified by `riid`."},{"content":"If the object does not support this interface, <ph id=\"ph1\">`ppv`</ph> is set to NULL.","pos":[3738,3806],"source":" If the object does not support this interface, `ppv` is set to NULL."},{"content":"Return Value","pos":[3816,3828]},{"content":"Returns S_OK on success, or an error HRESULT on failure.","pos":[3832,3888]},{"pos":[3938,3961],"content":"CAtlDllModuleT::DllMain"},{"content":"The optional entry point into a dynamic-link library (DLL).","pos":[3965,4024]},{"content":"Parameters","pos":[4117,4127]},{"content":"If set to DLL_PROCESS_ATTACH, the DLL_THREAD_ATTACH and DLL_THREAD_DETACH notification calls are disabled.","pos":[4145,4251]},{"content":"lpReserved","pos":[4259,4269]},{"content":"Reserved.","pos":[4274,4283]},{"content":"Return Value","pos":[4293,4305]},{"content":"Always returns TRUE.","pos":[4309,4329]},{"content":"Remarks","pos":[4339,4346]},{"content":"Disabling the DLL_THREAD_ATTACH and DLL_THREAD_DETACH notification calls can be a useful optimization for multithreaded applications that have many DLLs, that frequently create and delete threads, and whose DLLs do not need these thread-level notifications of attachment/detachment.","pos":[4350,4632]},{"pos":[4692,4725],"content":"CAtlDllModuleT::DllRegisterServer"},{"content":"Adds entries to the system registry for objects in the DLL.","pos":[4729,4788]},{"content":"Parameters","pos":[4871,4881]},{"content":"TRUE if the type library is to be registered.","pos":[4902,4947]},{"content":"The default value is TRUE.","pos":[4948,4974]},{"content":"Return Value","pos":[4984,4996]},{"content":"Returns S_OK on success, or an error HRESULT on failure.","pos":[5000,5056]},{"pos":[5118,5153],"content":"CAtlDllModuleT::DllUnregisterServer"},{"content":"Removes entries in the system registry for objects in the DLL.","pos":[5157,5219]},{"content":"Parameters","pos":[5306,5316]},{"content":"TRUE if the type library is to be removed from the registry.","pos":[5339,5399]},{"content":"The default value is TRUE.","pos":[5400,5426]},{"content":"Return Value","pos":[5436,5448]},{"content":"Returns S_OK on success, or an error HRESULT on failure.","pos":[5452,5508]},{"pos":[5565,5595],"content":"CAtlDllModuleT::GetClassObject"},{"content":"Creates an object of the specified CLSID.","pos":[5599,5640]},{"content":"Parameters","pos":[5746,5756]},{"content":"The CLSID of the object to be created.","pos":[5772,5810]},{"content":"The IID of the requested interface.","pos":[5827,5862]},{"content":"A pointer to the interface pointer identified by <ph id=\"ph1\">`riid`</ph>.","pos":[5878,5934],"source":" A pointer to the interface pointer identified by `riid`."},{"content":"If the object does not support this interface, <ph id=\"ph1\">`ppv`</ph> is set to NULL.","pos":[5935,6003],"source":" If the object does not support this interface, `ppv` is set to NULL."},{"content":"Return Value","pos":[6013,6025]},{"content":"Returns S_OK on success, or an error HRESULT on failure.","pos":[6029,6085]},{"content":"Remarks","pos":[6095,6102]},{"pos":[6106,6246],"content":"This method is called by <bpt id=\"p1\">[</bpt>CAtlDllModuleT::DllGetClassObject<ept id=\"p1\">](#catldllmodulet__dllgetclassobject)</ept> and is included for backward compatibility.","source":"This method is called by [CAtlDllModuleT::DllGetClassObject](#catldllmodulet__dllgetclassobject) and is included for backward compatibility."},{"content":"See Also","pos":[6255,6263]},{"content":"CAtlModuleT Class","pos":[6268,6285]},{"content":"CAtlExeModuleT Class","pos":[6334,6354]},{"content":"Class Overview","pos":[6406,6420]},{"content":"Module Classes","pos":[6460,6474]}],"content":"---\ntitle: \"CAtlDllModuleT Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"ATL.CAtlDllModuleT\"\n  - \"ATL::CAtlDllModuleT<T>\"\n  - \"ATL::CAtlDllModuleT\"\n  - \"ATL.CAtlDllModuleT<T>\"\n  - \"CAtlDllModuleT\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"CAtlDllModuleT class\"\nms.assetid: 351d5767-8257-4878-94be-45a85e31a72d\ncaps.latest.revision: 19\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"ru-ru\"\n  - \"zh-cn\"\n  - \"zh-tw\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"tr-tr\"\n---\n# CAtlDllModuleT Class\nThis class represents the module for a DLL.  \n  \n## Syntax  \n  \n```\ntemplate <class T>  class ATL_NO_VTABLE CAtlDllModuleT :  public CAtlModuleT<T>\n```  \n  \n#### Parameters  \n `T`  \n Your class derived from `CAtlDllModuleT`.  \n  \n## Members  \n  \n### Public Constructors  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CAtlDllModuleT::CAtlDllModuleT](#catldllmodulet__catldllmodulet)|The constructor.|  \n|[CAtlDllModuleT::~CAtlDllModuleT](#catldllmodulet___dtorcatldllmodulet)|The destructor.|  \n  \n### Public Methods  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CAtlDllModuleT::DllCanUnloadNow](#catldllmodulet__dllcanunloadnow)|Tests if the DLL can be unloaded.|  \n|[CAtlDllModuleT::DllGetClassObject](#catldllmodulet__dllgetclassobject)|Returns a class factory.|  \n|[CAtlDllModuleT::DllMain](#catldllmodulet__dllmain)|The optional entry point into a dynamic-link library (DLL).|  \n|[CAtlDllModuleT::DllRegisterServer](#catldllmodulet__dllregisterserver)|Adds entries to the system registry for objects in the DLL.|  \n|[CAtlDllModuleT::DllUnregisterServer](#catldllmodulet__dllunregisterserver)|Removes entries in the system registry for objects in the DLL.|  \n|[CAtlDllModuleT::GetClassObject](#catldllmodulet__getclassobject)|Returns a class factory. Invoked by [DllGetClassObject](#catldllmodulet__dllgetclassobject).|  \n  \n## Remarks  \n `CAtlDllModuleT` represents the module for a dynamic-link library (DLL) and provides functions used by all DLL projects. This specialization of [CAtlModuleT](../../atl/reference/catlmodulet-class.md) class includes support for registration.  \n  \n For more information on modules in ATL, see [ATL Module Classes](../../atl/atl-module-classes.md).  \n  \n## Inheritance Hierarchy  \n [_ATL_MODULE](atl-typedefs.md#_atl_module)  \n  \n [CAtlModule](../../atl/reference/catlmodule-class.md)  \n  \n [CAtlModuleT](../../atl/reference/catlmodulet-class.md)  \n  \n `CAtlDllModuleT`  \n  \n## Requirements  \n **Header:** atlbase.h  \n  \n##  <a name=\"catldllmodulet__catldllmodulet\"></a>  CAtlDllModuleT::CAtlDllModuleT  \n The constructor.  \n  \n```\nCAtlDllModuleT() throw();\n```  \n  \n##  <a name=\"catldllmodulet___dtorcatldllmodulet\"></a>  CAtlDllModuleT::~CAtlDllModuleT  \n The destructor.  \n  \n```\n~CAtlDllModuleT() throw();\n```  \n  \n##  <a name=\"catldllmodulet__dllcanunloadnow\"></a>  CAtlDllModuleT::DllCanUnloadNow  \n Tests if the DLL can be unloaded.  \n  \n```\nHRESULT DllCanUnloadNow() throw();\n```  \n  \n### Return Value  \n Returns S_OK if the DLL can be unloaded, or S_FALSE if it cannot.  \n  \n##  <a name=\"catldllmodulet__dllgetclassobject\"></a>  CAtlDllModuleT::DllGetClassObject  \n Returns the class factory.  \n  \n```\nHRESULT DllGetClassObject(REFCLSID rclsid,\n    REFIID riid,\n    LPVOID* ppv) throw();\n```  \n  \n### Parameters  \n `rclsid`  \n The CLSID of the object to be created.  \n  \n `riid`  \n The IID of the requested interface.  \n  \n `ppv`  \n A pointer to the interface pointer identified by `riid`. If the object does not support this interface, `ppv` is set to NULL.  \n  \n### Return Value  \n Returns S_OK on success, or an error HRESULT on failure.  \n  \n##  <a name=\"catldllmodulet__dllmain\"></a>  CAtlDllModuleT::DllMain  \n The optional entry point into a dynamic-link library (DLL).  \n  \n```\nBOOL WINAPI DllMain(DWORD dwReason,  LPVOID /* lpReserved*/) throw();\n```  \n  \n### Parameters  \n `dwReason`  \n If set to DLL_PROCESS_ATTACH, the DLL_THREAD_ATTACH and DLL_THREAD_DETACH notification calls are disabled.  \n  \n *lpReserved*  \n Reserved.  \n  \n### Return Value  \n Always returns TRUE.  \n  \n### Remarks  \n Disabling the DLL_THREAD_ATTACH and DLL_THREAD_DETACH notification calls can be a useful optimization for multithreaded applications that have many DLLs, that frequently create and delete threads, and whose DLLs do not need these thread-level notifications of attachment/detachment.  \n  \n##  <a name=\"catldllmodulet__dllregisterserver\"></a>  CAtlDllModuleT::DllRegisterServer  \n Adds entries to the system registry for objects in the DLL.  \n  \n```\nHRESULT DllRegisterServer(BOOL bRegTypeLib = TRUE) throw();\n```  \n  \n### Parameters  \n `bRegTypeLib`  \n TRUE if the type library is to be registered. The default value is TRUE.  \n  \n### Return Value  \n Returns S_OK on success, or an error HRESULT on failure.  \n  \n##  <a name=\"catldllmodulet__dllunregisterserver\"></a>  CAtlDllModuleT::DllUnregisterServer  \n Removes entries in the system registry for objects in the DLL.  \n  \n```\nHRESULT DllUnregisterServer(BOOL bUnRegTypeLib = TRUE) throw();\n```  \n  \n### Parameters  \n `bUnRegTypeLib`  \n TRUE if the type library is to be removed from the registry. The default value is TRUE.  \n  \n### Return Value  \n Returns S_OK on success, or an error HRESULT on failure.  \n  \n##  <a name=\"catldllmodulet__getclassobject\"></a>  CAtlDllModuleT::GetClassObject  \n Creates an object of the specified CLSID.  \n  \n```\nHRESULT GetClassObject(REFCLSID rclsid,\n    REFIID riid,\n    LPVOID* ppv) throw();\n```  \n  \n### Parameters  \n `rclsid`  \n The CLSID of the object to be created.  \n  \n `riid`  \n The IID of the requested interface.  \n  \n `ppv`  \n A pointer to the interface pointer identified by `riid`. If the object does not support this interface, `ppv` is set to NULL.  \n  \n### Return Value  \n Returns S_OK on success, or an error HRESULT on failure.  \n  \n### Remarks  \n This method is called by [CAtlDllModuleT::DllGetClassObject](#catldllmodulet__dllgetclassobject) and is included for backward compatibility.  \n  \n## See Also  \n [CAtlModuleT Class](../../atl/reference/catlmodulet-class.md)   \n [CAtlExeModuleT Class](../../atl/reference/catlexemodulet-class.md)   \n [Class Overview](../../atl/atl-class-overview.md)   \n [Module Classes](../../atl/atl-module-classes.md)\n"}