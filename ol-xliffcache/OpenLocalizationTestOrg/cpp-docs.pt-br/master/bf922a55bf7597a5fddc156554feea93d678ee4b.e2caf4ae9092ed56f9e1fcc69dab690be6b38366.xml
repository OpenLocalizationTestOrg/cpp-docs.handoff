{"nodes":[{"pos":[12,108],"content":"How to: Overload Functions with Interior Pointers and Native Pointers (C++-CLI) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"How to: Overload Functions with Interior Pointers and Native Pointers (C++-CLI) | Microsoft Docs","pos":[0,96]}]},{"content":"How to: Overload Functions with Interior Pointers and Native Pointers (C++/CLI)","pos":[685,764]},{"content":"Functions can be overloaded depending on whether the parameter type is an interior pointer or a native pointer.","pos":[765,876]},{"pos":[884,1007],"content":"[!IMPORTANT]\n This language feature is supported by the **/clr** compiler option, but not by the **/ZW** compiler option.","leadings":["","> "],"nodes":[{"content":"This language feature is supported by the <bpt id=\"p1\">**</bpt>/clr<ept id=\"p1\">**</ept> compiler option, but not by the <bpt id=\"p2\">**</bpt>/ZW<ept id=\"p2\">**</ept> compiler option.","pos":[14,121],"source":" This language feature is supported by the **/clr** compiler option, but not by the **/ZW** compiler option."}]},{"content":"Example","pos":[1016,1023]},{"content":"Code","pos":[1033,1037]},{"content":"Output","pos":[1665,1671]},{"content":"See Also","pos":[1744,1752]},{"content":"interior_ptr (C++/CLI)","pos":[1757,1779]}],"content":"---\ntitle: \"How to: Overload Functions with Interior Pointers and Native Pointers (C++-CLI) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"language-reference\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"Functions with interior and native pointers, overloading\"\nms.assetid: d70df625-4aad-457c-84f5-70a0a290cc1f\ncaps.latest.revision: 11\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# How to: Overload Functions with Interior Pointers and Native Pointers (C++/CLI)\nFunctions can be overloaded depending on whether the parameter type is an interior pointer or a native pointer.  \n  \n> [!IMPORTANT]\n>  This language feature is supported by the **/clr** compiler option, but not by the **/ZW** compiler option.  \n  \n## Example  \n  \n### Code  \n  \n```  \n// interior_ptr_overload.cpp  \n// compile with: /clr  \nusing namespace System;  \n  \n// C++ class  \nstruct S {  \n   int i;  \n};  \n  \n// managed class  \nref struct G {  \n   int i;  \n};  \n  \n// can update unmanaged storage  \nvoid f( int* pi ) {  \n   *pi = 10;  \n   Console::WriteLine(\"in f( int* pi )\");  \n}  \n  \n// can update managed storage  \nvoid f( interior_ptr<int> pi ) {  \n   *pi = 10;   \n   Console::WriteLine(\"in f( interior_ptr<int> pi )\");  \n}  \n  \nint main() {  \n   S *pS = new S;   // C++ heap  \n   G ^pG = gcnew G;   // common language runtime heap  \n   f( &pS->i );  \n   f( &pG->i );  \n};  \n```  \n  \n### Output  \n  \n```  \nin f( int* pi )  \nin f( interior_ptr<int> pi )  \n```  \n  \n## See Also  \n [interior_ptr (C++/CLI)](../windows/interior-ptr-cpp-cli.md)"}