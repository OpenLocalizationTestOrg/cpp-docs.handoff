{"nodes":[{"pos":[12,44],"content":"CFormView Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"CFormView Class | Microsoft Docs","pos":[0,32]}]},{"content":"CFormView Class","pos":[651,666]},{"content":"The base class used for form views.","pos":[667,702]},{"content":"Syntax","pos":[711,717]},{"content":"Members","pos":[780,787]},{"content":"Protected Constructors","pos":[797,819]},{"content":"Name","pos":[826,830]},{"content":"Description","pos":[831,842]},{"content":"CFormView::CFormView","pos":[881,901]},{"pos":[926,958],"content":"Constructs a <ph id=\"ph1\">`CFormView`</ph> object.","source":"Constructs a `CFormView` object."},{"content":"Public Methods","pos":[969,983]},{"content":"Name","pos":[990,994]},{"content":"Description","pos":[995,1006]},{"content":"CFormView::IsInitDlgCompleted","pos":[1045,1074]},{"content":"Used for synchronization during initialization.","pos":[1108,1155]},{"content":"Remarks","pos":[1165,1172]},{"content":"A form view is essentially a view that contains controls.","pos":[1176,1233]},{"content":"These controls are laid out based on a dialog-template resource.","pos":[1234,1298]},{"content":"Use <ph id=\"ph1\">`CFormView`</ph> if you want forms in your application.","pos":[1299,1353],"source":" Use `CFormView` if you want forms in your application."},{"content":"These views support scrolling, as needed, using the <bpt id=\"p1\">[</bpt>CScrollView<ept id=\"p1\">](../../mfc/reference/cscrollview-class.md)</ept> functionality.","pos":[1354,1476],"source":" These views support scrolling, as needed, using the [CScrollView](../../mfc/reference/cscrollview-class.md) functionality."},{"pos":[1483,1677],"content":"When you are <bpt id=\"p1\">[</bpt>Creating a Forms-Based Application<ept id=\"p1\">](../../mfc/reference/creating-a-forms-based-mfc-application.md)</ept>, you can base its view class on <ph id=\"ph1\">`CFormView`</ph>, making it a forms-based application.","source":"When you are [Creating a Forms-Based Application](../../mfc/reference/creating-a-forms-based-mfc-application.md), you can base its view class on `CFormView`, making it a forms-based application."},{"content":"You can also insert new <bpt id=\"p1\">[</bpt>Form Topics<ept id=\"p1\">](../../mfc/form-views-mfc.md)</ept> into document-view-based applications.","pos":[1684,1789],"source":"You can also insert new [Form Topics](../../mfc/form-views-mfc.md) into document-view-based applications."},{"content":"Even if your application did not initially support forms, Visual C++ will add this support when you insert a new form.","pos":[1790,1908]},{"content":"The MFC Application Wizard and the Add Class command are the preferred methods for creating forms-based applications.","pos":[1915,2032]},{"content":"If you need to create a forms-based application without using these methods, see <bpt id=\"p1\">[</bpt>Creating a Forms-Based Application<ept id=\"p1\">](../../mfc/reference/creating-a-forms-based-mfc-application.md)</ept>.","pos":[2033,2214],"source":" If you need to create a forms-based application without using these methods, see [Creating a Forms-Based Application](../../mfc/reference/creating-a-forms-based-mfc-application.md)."},{"content":"Inheritance Hierarchy","pos":[2223,2244]},{"content":"CObject","pos":[2249,2256]},{"content":"CCmdTarget","pos":[2303,2313]},{"content":"CWnd","pos":[2363,2367]},{"content":"CView","pos":[2411,2416]},{"content":"CScrollView","pos":[2461,2472]},{"content":"Requirements","pos":[2542,2554]},{"pos":[2558,2578],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> afxext.h","source":"**Header:** afxext.h"},{"pos":[2625,2645],"content":"CFormView::CFormView"},{"pos":[2649,2681],"content":"Constructs a <ph id=\"ph1\">`CFormView`</ph> object.","source":"Constructs a `CFormView` object."},{"content":"Parameters","pos":[2775,2785]},{"content":"Contains a null-terminated string that is the name of a dialog-template resource.","pos":[2811,2892]},{"content":"Contains the ID number of a dialog-template resource.","pos":[2916,2969]},{"content":"Remarks","pos":[2979,2986]},{"content":"When you create an object of a type derived from <ph id=\"ph1\">`CFormView`</ph>, invoke one of the constructors to create the view object and identify the dialog resource on which the view is based.","pos":[2990,3169],"source":"When you create an object of a type derived from `CFormView`, invoke one of the constructors to create the view object and identify the dialog resource on which the view is based."},{"content":"You can identify the resource either by name (pass a string as the argument to the constructor) or by its ID (pass an unsigned integer as the argument).","pos":[3170,3322]},{"content":"The form-view window and child controls are not created until <ph id=\"ph1\">`CWnd::Create`</ph> is called.","pos":[3329,3416],"source":"The form-view window and child controls are not created until `CWnd::Create` is called."},{"content":"is called by the framework as part of the document and view creation process, which is driven by the document template.","pos":[3432,3551]},{"pos":[3559,3777],"content":"[!NOTE]\n Your derived class *must* supply its own constructor. In the constructor, invoke the constructor, `CFormView::CFormView`, with the resource name or ID as an argument as shown in the preceding class overview.","leadings":["","> "],"nodes":[{"content":" Your derived class *must* supply its own constructor. In the constructor, invoke the constructor, `CFormView::CFormView`, with the resource name or ID as an argument as shown in the preceding class overview.","pos":[8,216],"nodes":[{"content":"Your derived class <bpt id=\"p1\">*</bpt>must<ept id=\"p1\">*</ept> supply its own constructor.","pos":[1,54],"source":" Your derived class *must* supply its own constructor."},{"content":"In the constructor, invoke the constructor, <ph id=\"ph1\">`CFormView::CFormView`</ph>, with the resource name or ID as an argument as shown in the preceding class overview.","pos":[55,208],"source":" In the constructor, invoke the constructor, `CFormView::CFormView`, with the resource name or ID as an argument as shown in the preceding class overview."}]}]},{"content":"Example","pos":[3787,3794]},{"pos":[3809,3826],"content":"NVC_MFCDocView#90"},{"pos":[3893,3910],"content":"NVC_MFCDocView#91"},{"pos":[4017,4046],"content":"CFormView::IsInitDlgCompleted"},{"content":"Used by MFC to ensure that initialization is completed before performing other operations.","pos":[4050,4140]},{"content":"Return Value","pos":[4201,4213]},{"content":"True if the initialization function for this dialog has completed.","pos":[4217,4283]},{"content":"See Also","pos":[4292,4300]},{"content":"MFC Sample SNAPVW","pos":[4305,4322]},{"content":"MFC Sample VIEWEX","pos":[4358,4375]},{"content":"CScrollView Class","pos":[4411,4428]},{"content":"Hierarchy Chart","pos":[4477,4492]},{"content":"CDialog Class","pos":[4529,4542]},{"content":"CScrollView Class","pos":[4587,4604]}],"content":"---\ntitle: \"CFormView Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"CFormView\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"views, containing controls\"\n  - \"CFormView class\"\n  - \"form views\"\nms.assetid: a99ec313-36f0-4f28-9d2b-de11de14ac19\ncaps.latest.revision: 23\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# CFormView Class\nThe base class used for form views.  \n  \n## Syntax  \n  \n```  \nclass CFormView : public CScrollView  \n```  \n  \n## Members  \n  \n### Protected Constructors  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CFormView::CFormView](#cformview__cformview)|Constructs a `CFormView` object.|  \n  \n### Public Methods  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CFormView::IsInitDlgCompleted](#cformview__isinitdlgcompleted)|Used for synchronization during initialization.|  \n  \n## Remarks  \n A form view is essentially a view that contains controls. These controls are laid out based on a dialog-template resource. Use `CFormView` if you want forms in your application. These views support scrolling, as needed, using the [CScrollView](../../mfc/reference/cscrollview-class.md) functionality.  \n  \n When you are [Creating a Forms-Based Application](../../mfc/reference/creating-a-forms-based-mfc-application.md), you can base its view class on `CFormView`, making it a forms-based application.  \n  \n You can also insert new [Form Topics](../../mfc/form-views-mfc.md) into document-view-based applications. Even if your application did not initially support forms, Visual C++ will add this support when you insert a new form.  \n  \n The MFC Application Wizard and the Add Class command are the preferred methods for creating forms-based applications. If you need to create a forms-based application without using these methods, see [Creating a Forms-Based Application](../../mfc/reference/creating-a-forms-based-mfc-application.md).  \n  \n## Inheritance Hierarchy  \n [CObject](../../mfc/reference/cobject-class.md)  \n  \n [CCmdTarget](../../mfc/reference/ccmdtarget-class.md)  \n  \n [CWnd](../../mfc/reference/cwnd-class.md)  \n  \n [CView](../../mfc/reference/cview-class.md)  \n  \n [CScrollView](../../mfc/reference/cscrollview-class.md)  \n  \n `CFormView`  \n  \n## Requirements  \n **Header:** afxext.h  \n  \n##  <a name=\"cformview__cformview\"></a>  CFormView::CFormView  \n Constructs a `CFormView` object.  \n  \n```  \nCFormView(LPCTSTR lpszTemplateName);\n\n \nCFormView(UINT nIDTemplate);\n```  \n  \n### Parameters  \n `lpszTemplateName`  \n Contains a null-terminated string that is the name of a dialog-template resource.  \n  \n `nIDTemplate`  \n Contains the ID number of a dialog-template resource.  \n  \n### Remarks  \n When you create an object of a type derived from `CFormView`, invoke one of the constructors to create the view object and identify the dialog resource on which the view is based. You can identify the resource either by name (pass a string as the argument to the constructor) or by its ID (pass an unsigned integer as the argument).  \n  \n The form-view window and child controls are not created until `CWnd::Create` is called. `CWnd::Create` is called by the framework as part of the document and view creation process, which is driven by the document template.  \n  \n> [!NOTE]\n>  Your derived class *must* supply its own constructor. In the constructor, invoke the constructor, `CFormView::CFormView`, with the resource name or ID as an argument as shown in the preceding class overview.  \n  \n### Example  \n [!code-cpp[NVC_MFCDocView#90](../../mfc/codesnippet/cpp/cformview-class_1.h)]  \n  \n [!code-cpp[NVC_MFCDocView#91](../../mfc/codesnippet/cpp/cformview-class_2.cpp)]  \n  \n##  <a name=\"cformview__isinitdlgcompleted\"></a>  CFormView::IsInitDlgCompleted  \n Used by MFC to ensure that initialization is completed before performing other operations.  \n  \n```  \nBOOL IsInitDlgCompleted() const;\n\n \n```  \n  \n### Return Value  \n True if the initialization function for this dialog has completed.  \n  \n## See Also  \n [MFC Sample SNAPVW](../../visual-cpp-samples.md)   \n [MFC Sample VIEWEX](../../visual-cpp-samples.md)   \n [CScrollView Class](../../mfc/reference/cscrollview-class.md)   \n [Hierarchy Chart](../../mfc/hierarchy-chart.md)   \n [CDialog Class](../../mfc/reference/cdialog-class.md)   \n [CScrollView Class](../../mfc/reference/cscrollview-class.md)\n"}