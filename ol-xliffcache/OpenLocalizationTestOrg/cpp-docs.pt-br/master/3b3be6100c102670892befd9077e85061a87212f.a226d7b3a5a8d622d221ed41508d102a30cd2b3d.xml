{"nodes":[{"pos":[12,53],"content":"Key WRL APIs by Category | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Key WRL APIs by Category | Microsoft Docs","pos":[0,41]}]},{"content":"Key WRL APIs by Category","pos":[561,585]},{"content":"The following tables list primary <ph id=\"ph1\">[!INCLUDE[cppwrl](../windows/includes/cppwrl_md.md)]</ph> classes, structs, functions, and macros.","pos":[586,713],"source":"The following tables list primary [!INCLUDE[cppwrl](../windows/includes/cppwrl_md.md)] classes, structs, functions, and macros."},{"content":"Constructs in helper namespaces and classes are omitted.","pos":[714,770]},{"content":"These lists augment the API documentation, which is arranged by namespace.","pos":[771,845]},{"content":"Classes","pos":[855,862]},{"content":"Title","pos":[869,874]},{"content":"Description","pos":[875,886]},{"content":"ActivationFactory Class","pos":[926,949]},{"content":"Enables one or more classes to be activated by the Windows Runtime.","pos":[990,1057]},{"content":"AsyncBase Class","pos":[1063,1078]},{"content":"Implements the Windows Runtime asynchronous state machine.","pos":[1111,1169]},{"content":"ClassFactory Class","pos":[1175,1193]},{"pos":[1229,1297],"content":"Implements the basic functionality of the <ph id=\"ph1\">`IClassFactory`</ph> interface.","source":"Implements the basic functionality of the `IClassFactory` interface."},{"content":"ComPtr Class","pos":[1303,1315]},{"content":"Creates a <bpt id=\"p1\">*</bpt>smart pointer<ept id=\"p1\">*</ept> type that represents the interface specified by the template parameter.","pos":[1345,1442],"source":"Creates a *smart pointer* type that represents the interface specified by the template parameter."},{"content":"ComPtr automatically maintains a reference count for the underlying interface pointer and releases the interface when the reference count goes to zero.","pos":[1443,1594]},{"content":"Event Class (Windows Runtime C++ Template Library)","pos":[1600,1650]},{"content":"Represents an event.","pos":[1716,1736]},{"content":"EventSource Class","pos":[1742,1759]},{"content":"Represents an event.","pos":[1794,1814]},{"content":"member functions add, remove, and invoke event handlers.","pos":[1829,1885]},{"content":"FtmBase Class","pos":[1891,1904]},{"content":"Represents a free-threaded marshaler object.","pos":[1935,1979]},{"content":"HandleT Class","pos":[1985,1998]},{"content":"Represents a handle to an object.","pos":[2029,2062]},{"content":"HString Class","pos":[2068,2081]},{"content":"Provides support for manipulating HSTRING handles.","pos":[2112,2162]},{"content":"HStringReference Class","pos":[2168,2190]},{"content":"Represents an HSTRING that is created from an existing string.","pos":[2230,2292]},{"content":"Module Class","pos":[2298,2310]},{"content":"Represents a collection of related objects.","pos":[2340,2383]},{"content":"Module::GenericReleaseNotifier Class","pos":[2389,2425]},{"content":"Invokes an event handler when the last object in the current module is released.","pos":[2478,2558]},{"content":"The event handler is specified by on a lambda, functor, or pointer-to-function.","pos":[2559,2638]},{"content":"Module::MethodReleaseNotifier Class","pos":[2644,2679]},{"content":"Invokes an event handler when the last object in the current module is released.","pos":[2731,2811]},{"content":"The event handler is specified by an object and its pointer-to-a-method member.","pos":[2812,2891]},{"content":"Module::ReleaseNotifier Class","pos":[2897,2926]},{"content":"Invokes an event handler when the last object in a module is released.","pos":[2972,3042]},{"content":"RoInitializeWrapper Class","pos":[3048,3073]},{"pos":[3116,3185],"content":"Initializes the <ph id=\"ph1\">[!INCLUDE[wrt](../atl/reference/includes/wrt_md.md)]</ph>.","source":"Initializes the [!INCLUDE[wrt](../atl/reference/includes/wrt_md.md)]."},{"content":"RuntimeClass Class","pos":[3191,3209]},{"content":"Represents an instantiated class that inherits the specified number of interfaces, and provides the specified Windows Runtime, classic COM, and weak reference support.","pos":[3245,3412]},{"content":"SimpleActivationFactory Class","pos":[3418,3447]},{"content":"Provides a fundamental mechanism to create a Windows Runtime or classic COM base class.","pos":[3494,3581]},{"content":"SimpleClassFactory Class","pos":[3587,3611]},{"content":"Provides a fundamental mechanism to create a base class.","pos":[3653,3709]},{"content":"WeakRef Class","pos":[3715,3728]},{"content":"Represents a <bpt id=\"p1\">*</bpt>weak reference<ept id=\"p1\">*</ept> that can be used by only the Windows Runtime, not classic COM.","pos":[3759,3851],"source":"Represents a *weak reference* that can be used by only the Windows Runtime, not classic COM."},{"content":"A weak reference represents an object that might or might not be accessible.","pos":[3852,3928]},{"content":"Structures","pos":[3939,3949]},{"content":"Title","pos":[3956,3961]},{"content":"Description","pos":[3962,3973]},{"content":"ChainInterfaces Structure","pos":[4013,4038]},{"content":"Specifies verification and initialization functions that can be applied to a set of interface IDs.","pos":[4081,4179]},{"content":"CloakedIid Structure","pos":[4185,4205]},{"pos":[4243,4384],"content":"Indicates to the <ph id=\"ph1\">`RuntimeClass`</ph>, <ph id=\"ph2\">`Implements`</ph> and <ph id=\"ph3\">`ChainInterfaces`</ph> templates that the specified interface is not accessible in the IID list.","source":"Indicates to the `RuntimeClass`, `Implements` and `ChainInterfaces` templates that the specified interface is not accessible in the IID list."},{"content":"Implements Structure","pos":[4390,4410]},{"pos":[4448,4518],"content":"Implements <ph id=\"ph1\">`QueryInterface`</ph> and <ph id=\"ph2\">`GetIid`</ph> for the specified interfaces.","source":"Implements `QueryInterface` and `GetIid` for the specified interfaces."},{"content":"MixIn Structure","pos":[4524,4539]},{"content":"Ensures that a runtime class derives from Windows Runtime interfaces, if any, and then classic COM interfaces.","pos":[4572,4682]},{"content":"Functions","pos":[4693,4702]},{"content":"Title","pos":[4709,4714]},{"content":"Description","pos":[4715,4726]},{"content":"ActivateInstance Function","pos":[4766,4791]},{"content":"Registers and retrieves an instance of a specified type defined in a specified class ID.","pos":[4834,4922]},{"content":"AsWeak Function","pos":[4928,4943]},{"content":"Retrieves a weak reference to a specified instance.","pos":[4976,5027]},{"content":"Callback Function","pos":[5033,5050]},{"content":"Creates an object whose member function is a callback method.","pos":[5122,5183]},{"content":"CreateActivationFactory Function","pos":[5189,5221]},{"content":"Creates a factory that produces instances of the specified class that can be activated by the Windows Runtime.","pos":[5271,5381]},{"content":"CreateClassFactory Function","pos":[5387,5414]},{"content":"Creates a factory that produces instances of the specified class.","pos":[5459,5524]},{"content":"GetActivationFactory Function","pos":[5530,5559]},{"content":"Retrieves an activation factory for the type specified by the template parameter.","pos":[5606,5687]},{"content":"Make Function","pos":[5693,5706]},{"pos":[5737,5822],"content":"Initializes the specified <ph id=\"ph1\">[!INCLUDE[wrt](../atl/reference/includes/wrt_md.md)]</ph> class.","source":"Initializes the specified [!INCLUDE[wrt](../atl/reference/includes/wrt_md.md)] class."},{"content":"Macros","pos":[5833,5839]},{"content":"Title","pos":[5846,5851]},{"content":"Description","pos":[5852,5863]},{"content":"ActivatableClass Macros","pos":[5903,5926]},{"content":"Populates an internal cache that contains a factory that can create an instance of the specified class.","pos":[5967,6070]},{"content":"InspectableClass Macro","pos":[6076,6098]},{"content":"Sets the runtime class name and trust level.","pos":[6138,6182]},{"content":"See Also","pos":[6192,6200]},{"content":"Windows Runtime C++ Template Library (WRL)","pos":[6205,6247]}],"content":"---\ntitle: \"Key WRL APIs by Category | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\ndev_langs: \n  - \"C++\"\nms.assetid: 7367bacf-6b7c-4ecd-a0ce-a662db46fc66\ncaps.latest.revision: 8\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"ru-ru\"\n  - \"zh-cn\"\n  - \"zh-tw\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"tr-tr\"\n---\n# Key WRL APIs by Category\nThe following tables list primary [!INCLUDE[cppwrl](../windows/includes/cppwrl_md.md)] classes, structs, functions, and macros. Constructs in helper namespaces and classes are omitted. These lists augment the API documentation, which is arranged by namespace.  \n  \n### Classes  \n  \n|Title|Description|  \n|-----------|-----------------|  \n|[ActivationFactory Class](../windows/activationfactory-class.md)|Enables one or more classes to be activated by the Windows Runtime.|  \n|[AsyncBase Class](../windows/asyncbase-class.md)|Implements the Windows Runtime asynchronous state machine.|  \n|[ClassFactory Class](../windows/classfactory-class.md)|Implements the basic functionality of the `IClassFactory` interface.|  \n|[ComPtr Class](../windows/comptr-class.md)|Creates a *smart pointer* type that represents the interface specified by the template parameter. ComPtr automatically maintains a reference count for the underlying interface pointer and releases the interface when the reference count goes to zero.|  \n|[Event Class (Windows Runtime C++ Template Library)](../windows/event-class-windows-runtime-cpp-template-library.md)|Represents an event.|  \n|[EventSource Class](../windows/eventsource-class.md)|Represents an event. `EventSource` member functions add, remove, and invoke event handlers.|  \n|[FtmBase Class](../windows/ftmbase-class.md)|Represents a free-threaded marshaler object.|  \n|[HandleT Class](../windows/handlet-class.md)|Represents a handle to an object.|  \n|[HString Class](../windows/hstring-class.md)|Provides support for manipulating HSTRING handles.|  \n|[HStringReference Class](../windows/hstringreference-class.md)|Represents an HSTRING that is created from an existing string.|  \n|[Module Class](../windows/module-class.md)|Represents a collection of related objects.|  \n|[Module::GenericReleaseNotifier Class](../windows/module-genericreleasenotifier-class.md)|Invokes an event handler when the last object in the current module is released. The event handler is specified by on a lambda, functor, or pointer-to-function.|  \n|[Module::MethodReleaseNotifier Class](../windows/module-methodreleasenotifier-class.md)|Invokes an event handler when the last object in the current module is released. The event handler is specified by an object and its pointer-to-a-method member.|  \n|[Module::ReleaseNotifier Class](../windows/module-releasenotifier-class.md)|Invokes an event handler when the last object in a module is released.|  \n|[RoInitializeWrapper Class](../windows/roinitializewrapper-class.md)|Initializes the [!INCLUDE[wrt](../atl/reference/includes/wrt_md.md)].|  \n|[RuntimeClass Class](../windows/runtimeclass-class.md)|Represents an instantiated class that inherits the specified number of interfaces, and provides the specified Windows Runtime, classic COM, and weak reference support.|  \n|[SimpleActivationFactory Class](../windows/simpleactivationfactory-class.md)|Provides a fundamental mechanism to create a Windows Runtime or classic COM base class.|  \n|[SimpleClassFactory Class](../windows/simpleclassfactory-class.md)|Provides a fundamental mechanism to create a base class.|  \n|[WeakRef Class](../windows/weakref-class.md)|Represents a *weak reference* that can be used by only the Windows Runtime, not classic COM. A weak reference represents an object that might or might not be accessible.|  \n  \n### Structures  \n  \n|Title|Description|  \n|-----------|-----------------|  \n|[ChainInterfaces Structure](../windows/chaininterfaces-structure.md)|Specifies verification and initialization functions that can be applied to a set of interface IDs.|  \n|[CloakedIid Structure](../windows/cloakediid-structure.md)|Indicates to the `RuntimeClass`, `Implements` and `ChainInterfaces` templates that the specified interface is not accessible in the IID list.|  \n|[Implements Structure](../windows/implements-structure.md)|Implements `QueryInterface` and `GetIid` for the specified interfaces.|  \n|[MixIn Structure](../windows/mixin-structure.md)|Ensures that a runtime class derives from Windows Runtime interfaces, if any, and then classic COM interfaces.|  \n  \n### Functions  \n  \n|Title|Description|  \n|-----------|-----------------|  \n|[ActivateInstance Function](../windows/activateinstance-function.md)|Registers and retrieves an instance of a specified type defined in a specified class ID.|  \n|[AsWeak Function](../windows/asweak-function.md)|Retrieves a weak reference to a specified instance.|  \n|[Callback Function](../windows/callback-function-windows-runtime-cpp-template-library.md)|Creates an object whose member function is a callback method.|  \n|[CreateActivationFactory Function](../windows/createactivationfactory-function.md)|Creates a factory that produces instances of the specified class that can be activated by the Windows Runtime.|  \n|[CreateClassFactory Function](../windows/createclassfactory-function.md)|Creates a factory that produces instances of the specified class.|  \n|[GetActivationFactory Function](../windows/getactivationfactory-function.md)|Retrieves an activation factory for the type specified by the template parameter.|  \n|[Make Function](../windows/make-function.md)|Initializes the specified [!INCLUDE[wrt](../atl/reference/includes/wrt_md.md)] class.|  \n  \n### Macros  \n  \n|Title|Description|  \n|-----------|-----------------|  \n|[ActivatableClass Macros](../windows/activatableclass-macros.md)|Populates an internal cache that contains a factory that can create an instance of the specified class.|  \n|[InspectableClass Macro](../windows/inspectableclass-macro.md)|Sets the runtime class name and trust level.|  \n  \n## See Also  \n [Windows Runtime C++ Template Library (WRL)](../windows/windows-runtime-cpp-template-library-wrl.md)"}