{"nodes":[{"pos":[12,45],"content":"__faststorefence | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"__faststorefence | Microsoft Docs","pos":[0,33]}]},{"content":"__faststorefence","pos":[670,686]},{"content":"Microsoft Specific","pos":[689,707]},{"content":"Guarantees that every previous memory reference, including both load and store memory references, is globally visible before any subsequent memory reference.","pos":[716,873]},{"content":"Syntax","pos":[882,888]},{"content":"Requirements","pos":[939,951]},{"content":"Intrinsic","pos":[958,967]},{"content":"Architecture","pos":[968,980]},{"pos":[1114,1141],"content":"<bpt id=\"p1\">**</bpt>Header file<ept id=\"p1\">**</ept> <ph id=\"ph1\">\\&lt;</ph>intrin.h&gt;","source":"**Header file** \\<intrin.h>"},{"content":"Remarks","pos":[1150,1157]},{"content":"Generates a full memory barrier instruction sequence that guarantees load and store operations issued before this intrinsic are globally visible before execution continues.","pos":[1161,1333]},{"content":"The effect is comparable to but faster than the <ph id=\"ph1\">`_mm_mfence`</ph> intrinsic on all x64 platforms.","pos":[1334,1426],"source":" The effect is comparable to but faster than the `_mm_mfence` intrinsic on all x64 platforms."},{"content":"On the AMD64 platform, this routine generates an instruction that is a faster store fence than the <ph id=\"ph1\">`sfence`</ph> instruction.","pos":[1433,1553],"source":"On the AMD64 platform, this routine generates an instruction that is a faster store fence than the `sfence` instruction."},{"content":"For time-critical code, use this intrinsic instead of <ph id=\"ph1\">`_mm_sfence`</ph> only on AMD64 platforms.","pos":[1554,1645],"source":" For time-critical code, use this intrinsic instead of `_mm_sfence` only on AMD64 platforms."},{"content":"On Intel x64 platforms, the <ph id=\"ph1\">`_mm_sfence`</ph> instruction is faster.","pos":[1646,1709],"source":" On Intel x64 platforms, the `_mm_sfence` instruction is faster."},{"content":"This routine is only available as an intrinsic.","pos":[1716,1763]},{"content":"END Microsoft Specific","pos":[1772,1794]},{"content":"See Also","pos":[1803,1811]},{"content":"Compiler Intrinsics","pos":[1816,1835]}],"content":"---\ntitle: \"__faststorefence | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"__faststorefence_cpp\"\n  - \"__faststorefence\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"__faststorefence intrinsic\"\n  - \"sfence instruction\"\nms.assetid: 6c6eb973-3cf0-4306-b3af-cfde9b0210a5\ncaps.latest.revision: 16\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# __faststorefence\n**Microsoft Specific**  \n  \n Guarantees that every previous memory reference, including both load and store memory references, is globally visible before any subsequent memory reference.  \n  \n## Syntax  \n  \n```  \nvoid __faststorefence();  \n```  \n  \n## Requirements  \n  \n|Intrinsic|Architecture|  \n|---------------|------------------|  \n|`__faststorefence`|[!INCLUDE[vcprx64](../assembler/inline/includes/vcprx64_md.md)]|  \n  \n **Header file** \\<intrin.h>  \n  \n## Remarks  \n Generates a full memory barrier instruction sequence that guarantees load and store operations issued before this intrinsic are globally visible before execution continues. The effect is comparable to but faster than the `_mm_mfence` intrinsic on all x64 platforms.  \n  \n On the AMD64 platform, this routine generates an instruction that is a faster store fence than the `sfence` instruction. For time-critical code, use this intrinsic instead of `_mm_sfence` only on AMD64 platforms. On Intel x64 platforms, the `_mm_sfence` instruction is faster.  \n  \n This routine is only available as an intrinsic.  \n  \n## END Microsoft Specific  \n  \n## See Also  \n [Compiler Intrinsics](../intrinsics/compiler-intrinsics.md)"}