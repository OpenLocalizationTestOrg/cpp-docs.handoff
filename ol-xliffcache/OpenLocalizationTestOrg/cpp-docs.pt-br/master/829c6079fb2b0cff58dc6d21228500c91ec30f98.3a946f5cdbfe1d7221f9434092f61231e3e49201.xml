{"nodes":[{"pos":[12,53],"content":"&lt;scoped_allocator&gt; | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"scoped_allocator<ph id=\"ph1\">&amp;gt;</ph> | Microsoft Docs","pos":[4,41],"source":"scoped_allocator&gt; | Microsoft Docs"}]},{"content":"scoped_allocator","pos":[629,645]},{"content":"Defines the container template class scoped_allocator.","pos":[650,704]},{"content":"Syntax","pos":[713,719]},{"content":"Operators","pos":[777,786]},{"content":"operator!=","pos":[808,818]},{"content":"Tests if the scoped_allocator object on the left side of the operator is not equal to the list object on the right side.","pos":[884,1004]},{"content":"operator==","pos":[1010,1020]},{"content":"Tests if the scoped_allocator object on the left side of the operator is equal to the list object on the right side.","pos":[1088,1204]},{"content":"Classes","pos":[1215,1222]},{"content":"scoped_allocator_adaptor Class","pos":[1244,1274]},{"content":"A template class that encapsulates a nest of one or more allocators.","pos":[1331,1399]},{"content":"See Also","pos":[1409,1417]},{"content":"Header Files Reference","pos":[1422,1444]},{"content":"Thread Safety in the C++ Standard Library","pos":[1509,1550]},{"content":"C++ Standard Library Reference","pos":[1623,1653]}],"content":"---\ntitle: \"&lt;scoped_allocator&gt; | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"<scoped_allocator>\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"scoped_allocator Header\"\nms.assetid: d20175b8-96be-4896-8141-3faba45e0005\ncaps.latest.revision: 14\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# &lt;scoped_allocator&gt;\nDefines the container template class scoped_allocator.  \n  \n## Syntax  \n  \n```cpp  \n#include <scoped_allocator>  \n```  \n  \n### Operators  \n  \n|||  \n|-|-|  \n|[operator!=](../standard-library/scoped-allocator-operators.md#operator_neq)|Tests if the scoped_allocator object on the left side of the operator is not equal to the list object on the right side.|  \n|[operator==](../standard-library/scoped-allocator-operators.md#operator_eq_eq)|Tests if the scoped_allocator object on the left side of the operator is equal to the list object on the right side.|  \n  \n### Classes  \n  \n|||  \n|-|-|  \n|[scoped_allocator_adaptor Class](../standard-library/scoped-allocator-adaptor-class.md)|A template class that encapsulates a nest of one or more allocators.|  \n  \n## See Also  \n [Header Files Reference](../standard-library/cpp-standard-library-header-files.md)   \n [Thread Safety in the C++ Standard Library](../standard-library/thread-safety-in-the-cpp-standard-library.md)   \n [C++ Standard Library Reference](../standard-library/cpp-standard-library-reference.md)\n\n\n\n"}