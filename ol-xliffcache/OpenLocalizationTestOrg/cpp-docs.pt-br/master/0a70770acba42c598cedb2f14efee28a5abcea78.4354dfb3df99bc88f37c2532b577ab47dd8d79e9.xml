{"nodes":[{"pos":[12,70],"content":"How to: Iterate Over Arrays with for each | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"How to: Iterate Over Arrays with for each | Microsoft Docs","pos":[0,58]}]},{"content":"How to: Iterate Over Arrays with for each","pos":[619,660]},{"pos":[661,771],"content":"This topic shows how to use the <bpt id=\"p1\">[</bpt>for each, in<ept id=\"p1\">](../dotnet/for-each-in.md)</ept> keyword on different types of arrays.","source":"This topic shows how to use the [for each, in](../dotnet/for-each-in.md) keyword on different types of arrays."},{"content":"Example","pos":[780,787]},{"content":"This sample shows how to use <ph id=\"ph1\">`for each`</ph> on array of reference types.","pos":[791,859],"source":"This sample shows how to use `for each` on array of reference types."},{"content":"Note that if any dimension of a multi dimensional array is zero, the <ph id=\"ph1\">`for each`</ph> loop will not iterate over the array.","pos":[861,978],"source":"  Note that if any dimension of a multi dimensional array is zero, the `for each` loop will not iterate over the array."},{"content":"Example","pos":[2028,2035]},{"content":"This sample shows for each iterating over a &lt;xref:System.Collections.ArrayList&gt;, which implements &lt;xref:System.Collections.IEnumerable&gt;.","pos":[2039,2175],"source":"This sample shows for each iterating over a <xref:System.Collections.ArrayList>, which implements <xref:System.Collections.IEnumerable>."},{"content":"Example","pos":[2574,2581]},{"content":"This sample shows how to iterate over an array of arrays.","pos":[2585,2642]},{"content":"See Also","pos":[3578,3586]},{"content":"for each, in","pos":[3591,3603]}],"content":"---\ntitle: \"How to: Iterate Over Arrays with for each | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"arrays [C++], iterating with for each\"\nms.assetid: ddc88ce2-69e1-44fc-af84-5b6f62fcb9e3\ncaps.latest.revision: 11\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# How to: Iterate Over Arrays with for each\nThis topic shows how to use the [for each, in](../dotnet/for-each-in.md) keyword on different types of arrays.  \n  \n## Example  \n This sample shows how to use `for each` on array of reference types.  Note that if any dimension of a multi dimensional array is zero, the `for each` loop will not iterate over the array.  \n  \n```  \n// for_each_arrays.cpp  \n// compile with: /clr  \nusing namespace System;  \nref struct MyClass {  \n   void Test() { Console::WriteLine(\"in MyClass\"); }  \n};  \n  \nref struct MyClass2 {  \n   void Test() { Console::WriteLine(\"in MyClass2\"); }  \n};  \n  \nint main() {  \n   array<MyClass ^> ^ MyArray = gcnew array<MyClass ^>(2);  \n  \n   int i = 0;  \n   for each ( MyClass ^ c in MyArray ) {  \n      Console::Write(\"{0} = \", i++);  \n      c -> Test();  \n   }  \n  \n   Console::WriteLine();  \n  \n   array< MyClass2 ^, 2 > ^ MyArray2 = gcnew array< MyClass2 ^, 2 >(2, 2);  \n   i = 0;  \n   for each ( MyClass2 ^ c in MyArray2 ) {  \n      Console::Write(\"{0} = \", i++);  \n      c -> Test();  \n   }  \n  \n   array< MyClass2 ^, 2 > ^ MyArray3 = gcnew array< MyClass2 ^, 2 >(2, 0);  \n   i = 0;  \n   for each ( MyClass2 ^ c in MyArray3 ) {  \n      Console::Write(\"{0} = \", i++);  \n      c -> Test();  \n   }  \n}  \n```  \n  \n```Output  \n0 = in MyClass  \n1 = in MyClass  \n  \n0 = in MyClass2  \n1 = in MyClass2  \n2 = in MyClass2  \n3 = in MyClass2  \n```  \n  \n## Example  \n This sample shows for each iterating over a <xref:System.Collections.ArrayList>, which implements <xref:System.Collections.IEnumerable>.  \n  \n```  \n// for_each_arrays_2.cpp  \n// compile with: /clr  \nusing namespace System;  \nusing namespace System::Collections;  \n  \nint main() {  \n   int retval = 0;  \n  \n   ArrayList ^ arr = gcnew ArrayList();  \n   arr->Add(10);  \n   arr->Add(20);  \n   arr->Add(30);  \n  \n   for each ( int c in arr )  \n      retval += c;  \n   Console::WriteLine(retval);  \n}  \n```  \n  \n```Output  \n60  \n```  \n  \n## Example  \n This sample shows how to iterate over an array of arrays.  \n  \n```  \n// for_each_arrays_3.cpp  \n// compile with: /clr  \nusing namespace System;  \n  \n#define ARRAY_SIZE 2  \n  \nint main() {  \n   int i, j;  \n  \n   // Declares an array of managed arrays of Int32.  \n   array< array< Int32 > ^ > ^ IntArray = gcnew array<array< Int32 > ^>(ARRAY_SIZE);  \n  \n   for (i = 0 ; i < ARRAY_SIZE ; i++) {  \n      IntArray[i] = gcnew array< Int32 >(ARRAY_SIZE);  \n         for ( int j = 0 ; j < ARRAY_SIZE ; j++ )   \n            IntArray[i][j] = i + 10;  \n   }  \n  \n   for (i = 0 ; i < ARRAY_SIZE ; i++)  \n      for (int j = 0 ; j < ARRAY_SIZE ; j++)  \n         Console::WriteLine(\"IntArray[{0}] = {1}\", i, IntArray[i][j]);  \n   Console::WriteLine();  \n  \n   for each (array<Int32> ^ xyz in IntArray)  \n      for each ( int c in xyz )  \n         Console::WriteLine(c);  \n}  \n```  \n  \n```Output  \nIntArray[0] = 10  \nIntArray[0] = 10  \nIntArray[1] = 11  \nIntArray[1] = 11  \n  \n10  \n10  \n11  \n11  \n```  \n  \n## See Also  \n [for each, in](../dotnet/for-each-in.md)"}