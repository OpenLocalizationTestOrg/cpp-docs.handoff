{"nodes":[{"pos":[12,44],"content":"CHttpFile Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"CHttpFile Class | Microsoft Docs","pos":[0,32]}]},{"content":"CHttpFile Class","pos":[668,683]},{"content":"Provides the functionality to request and read files on an HTTP server.","pos":[684,755]},{"content":"Syntax","pos":[764,770]},{"content":"Members","pos":[835,842]},{"content":"Protected Constructors","pos":[852,874]},{"content":"Name","pos":[881,885]},{"content":"Description","pos":[886,897]},{"content":"CHttpFile::CHttpFile","pos":[936,956]},{"pos":[981,1010],"content":"Creates a <ph id=\"ph1\">`CHttpFile`</ph> object.","source":"Creates a `CHttpFile` object."},{"content":"Public Methods","pos":[1021,1035]},{"content":"Name","pos":[1042,1046]},{"content":"Description","pos":[1047,1058]},{"content":"CHttpFile::AddRequestHeaders","pos":[1097,1125]},{"content":"Adds headers to the request sent to an HTTP server.","pos":[1158,1209]},{"content":"CHttpFile::EndRequest","pos":[1215,1236]},{"pos":[1262,1368],"content":"Ends a request sent to an HTTP server with the <bpt id=\"p1\">[</bpt>SendRequestEx<ept id=\"p1\">](#chttpfile__sendrequestex)</ept> member function.","source":"Ends a request sent to an HTTP server with the [SendRequestEx](#chttpfile__sendrequestex) member function."},{"content":"CHttpFile::GetFileURL","pos":[1374,1395]},{"content":"Gets the URL for the specified file.","pos":[1421,1457]},{"content":"CHttpFile::GetObject","pos":[1463,1483]},{"content":"Gets the target object of the verb in a request to an HTTP server.","pos":[1508,1574]},{"content":"CHttpFile::GetVerb","pos":[1580,1598]},{"content":"Gets the verb that was used in a request to an HTTP server.","pos":[1621,1680]},{"content":"CHttpFile::QueryInfo","pos":[1686,1706]},{"content":"Returns the response or request headers from the HTTP server.","pos":[1731,1792]},{"content":"CHttpFile::QueryInfoStatusCode","pos":[1798,1828]},{"pos":[1863,1976],"content":"Retrieves the status code associated with an HTTP request and places it in the supplied <ph id=\"ph1\">`dwStatusCode`</ph> parameter.","source":"Retrieves the status code associated with an HTTP request and places it in the supplied `dwStatusCode` parameter."},{"content":"CHttpFile::SendRequest","pos":[1982,2004]},{"content":"Sends a request to an HTTP server.","pos":[2031,2065]},{"content":"CHttpFile::SendRequestEx","pos":[2071,2095]},{"pos":[2124,2356],"content":"Sends a request to an HTTP server using the <bpt id=\"p1\">[</bpt>Write<ept id=\"p1\">](../../mfc/reference/cinternetfile-class.md#cinternetfile__write)</ept> or <bpt id=\"p2\">[</bpt>WriteString<ept id=\"p2\">](../../mfc/reference/cinternetfile-class.md#cinternetfile__writestring)</ept> methods of <ph id=\"ph1\">`CInternetFile`</ph>.","source":"Sends a request to an HTTP server using the [Write](../../mfc/reference/cinternetfile-class.md#cinternetfile__write) or [WriteString](../../mfc/reference/cinternetfile-class.md#cinternetfile__writestring) methods of `CInternetFile`."},{"content":"Remarks","pos":[2366,2373]},{"pos":[2377,2477],"content":"If your Internet session reads data from an HTTP server, you must create an instance of <ph id=\"ph1\">`CHttpFile`</ph>.","source":"If your Internet session reads data from an HTTP server, you must create an instance of `CHttpFile`."},{"pos":[2484,2663],"content":"To learn more about how <ph id=\"ph1\">`CHttpFile`</ph> works with the other MFC Internet classes, see the article <bpt id=\"p1\">[</bpt>Internet Programming with WinInet<ept id=\"p1\">](../../mfc/win32-internet-extensions-wininet.md)</ept>.","source":"To learn more about how `CHttpFile` works with the other MFC Internet classes, see the article [Internet Programming with WinInet](../../mfc/win32-internet-extensions-wininet.md)."},{"content":"Inheritance Hierarchy","pos":[2672,2693]},{"content":"CObject","pos":[2698,2705]},{"content":"CFile","pos":[2752,2757]},{"content":"CStdioFile","pos":[2802,2812]},{"content":"CInternetFile","pos":[2862,2875]},{"content":"Requirements","pos":[2947,2959]},{"pos":[2963,2984],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> afxinet.h","source":"**Header:** afxinet.h"},{"pos":[3039,3067],"content":"CHttpFile::AddRequestHeaders"},{"content":"Call this member function to add one or more HTTP request headers to the HTTP request handle.","pos":[3071,3164]},{"content":"Parameters","pos":[3416,3426]},{"content":"A pointer to a string containing the header or headers to append to the request.","pos":[3447,3527]},{"content":"Each header must be terminated by a CR/LF pair.","pos":[3528,3575]},{"content":"Modifies the semantics of the new headers.","pos":[3595,3637]},{"content":"Can be one of the following:","pos":[3638,3666]},{"content":"Merges headers of the same name, using the flag to add the first header found to the subsequent header.","pos":[3702,3805]},{"content":"For example, \"Accept: text/*\" followed by \"Accept: audio/<ph id=\"ph1\">\\*</ph>\" results in the formation of the single header \"Accept: text/<ph id=\"ph2\">\\*</ph>, audio/<ph id=\"ph3\">\\*</ph>\".","pos":[3806,3941],"source":" For example, \"Accept: text/*\" followed by \"Accept: audio/\\*\" results in the formation of the single header \"Accept: text/\\*, audio/\\*\"."},{"content":"It is up to the calling application to ensure a cohesive scheme with respect to data received by requests sent with coalesced or separate headers.","pos":[3942,4088]},{"content":"Performs a remove and add to replace the current header.","pos":[4123,4179]},{"content":"The header name will be used to remove the current header, and the full value will be used to add the new header.","pos":[4180,4293]},{"content":"If the header-value is empty and the header is found, it is removed.","pos":[4294,4362]},{"content":"If not empty, the header-value is replaced.","pos":[4363,4406]},{"content":"Only adds the header if it does not already exist.","pos":[4444,4494]},{"content":"If one exists, an error is returned.","pos":[4495,4531]},{"content":"Used with REPLACE.","pos":[4562,4580]},{"content":"Adds the header if it doesn't exist.","pos":[4581,4617]},{"pos":[4624,4782],"content":"`dwHeadersLen`  \nThe length, in characters, of `pstrHeaders`. If this is -1L, then `pstrHeaders` is assumed to be zero-terminated and the length is computed.","leadings":[""," "],"nodes":[{"content":"The length, in characters, of `pstrHeaders`. If this is -1L, then `pstrHeaders` is assumed to be zero-terminated and the length is computed.","pos":[17,157],"nodes":[{"content":"The length, in characters, of <ph id=\"ph1\">`pstrHeaders`</ph>.","pos":[0,44],"source":"The length, in characters, of `pstrHeaders`."},{"content":"If this is -1L, then <ph id=\"ph1\">`pstrHeaders`</ph> is assumed to be zero-terminated and the length is computed.","pos":[45,140],"source":" If this is -1L, then `pstrHeaders` is assumed to be zero-terminated and the length is computed."}]}]},{"pos":[4789,4935],"content":"`str`  \nA reference to a [CString](../../atl-mfc-shared/reference/cstringt-class.md) object containing the request header or headers to be added.","leadings":[""," "],"nodes":[{"content":"A reference to a <bpt id=\"p1\">[</bpt>CString<ept id=\"p1\">](../../atl-mfc-shared/reference/cstringt-class.md)</ept> object containing the request header or headers to be added.","pos":[8,145],"source":"A reference to a [CString](../../atl-mfc-shared/reference/cstringt-class.md) object containing the request header or headers to be added."}]},{"content":"Return Value","pos":[4945,4957]},{"content":"Nonzero if successful; otherwise 0.","pos":[4961,4996]},{"content":"If the call fails, the Win32 function <bpt id=\"p1\">[</bpt>GetLastError<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms679360)</ept> may be called to determine the cause of the error.","pos":[4997,5160],"source":" If the call fails, the Win32 function [GetLastError](http://msdn.microsoft.com/library/windows/desktop/ms679360) may be called to determine the cause of the error."},{"content":"Remarks","pos":[5170,5177]},{"content":"appends additional, free-format headers to the HTTP request handle.","pos":[5201,5268]},{"content":"It is intended for use by sophisticated clients who need detailed control over the exact request sent to the HTTP server.","pos":[5269,5390]},{"pos":[5398,5741],"content":"[!NOTE]\n The application can pass multiple headers in `pstrHeaders` or `str` for an `AddRequestHeaders` call using `HTTP_ADDREQ_FLAG_ADD` or `HTTP_ADDREQ_FLAG_ADD_IF_NEW`. If the application tries to remove or replace a header using **HTTP_ADDREQ_FLAG_REMOVE** or `HTTP_ADDREQ_FLAG_REPLACE`, only one header can be supplied in `lpszHeaders`.","leadings":["","> "],"nodes":[{"content":" The application can pass multiple headers in `pstrHeaders` or `str` for an `AddRequestHeaders` call using `HTTP_ADDREQ_FLAG_ADD` or `HTTP_ADDREQ_FLAG_ADD_IF_NEW`. If the application tries to remove or replace a header using **HTTP_ADDREQ_FLAG_REMOVE** or `HTTP_ADDREQ_FLAG_REPLACE`, only one header can be supplied in `lpszHeaders`.","pos":[8,341],"nodes":[{"content":"The application can pass multiple headers in <ph id=\"ph1\">`pstrHeaders`</ph> or <ph id=\"ph2\">`str`</ph> for an <ph id=\"ph3\">`AddRequestHeaders`</ph> call using <ph id=\"ph4\">`HTTP_ADDREQ_FLAG_ADD`</ph> or <ph id=\"ph5\">`HTTP_ADDREQ_FLAG_ADD_IF_NEW`</ph>.","pos":[1,163],"source":" The application can pass multiple headers in `pstrHeaders` or `str` for an `AddRequestHeaders` call using `HTTP_ADDREQ_FLAG_ADD` or `HTTP_ADDREQ_FLAG_ADD_IF_NEW`."},{"content":"If the application tries to remove or replace a header using <bpt id=\"p1\">**</bpt>HTTP_ADDREQ_FLAG_REMOVE<ept id=\"p1\">**</ept> or <ph id=\"ph1\">`HTTP_ADDREQ_FLAG_REPLACE`</ph>, only one header can be supplied in <ph id=\"ph2\">`lpszHeaders`</ph>.","pos":[164,333],"source":" If the application tries to remove or replace a header using **HTTP_ADDREQ_FLAG_REMOVE** or `HTTP_ADDREQ_FLAG_REPLACE`, only one header can be supplied in `lpszHeaders`."}]}]},{"pos":[5788,5808],"content":"CHttpFile::CHttpFile"},{"pos":[5812,5877],"content":"This member function is called to construct a <ph id=\"ph1\">`CHttpFile`</ph> object.","source":"This member function is called to construct a `CHttpFile` object."},{"content":"Parameters","pos":[6186,6196]},{"content":"A handle to an Internet file.","pos":[6211,6240]},{"content":"A handle to an Internet session.","pos":[6261,6293]},{"content":"pstrObject","pos":[6301,6311]},{"content":"A pointer to a string containing the <ph id=\"ph1\">`CHttpFile`</ph> object.","pos":[6316,6372],"source":" A pointer to a string containing the `CHttpFile` object."},{"content":"A pointer to a string containing the name of the server.","pos":[6395,6451]},{"content":"A pointer to a string containing the method to be used when sending the request.","pos":[6472,6552]},{"content":"Can be <bpt id=\"p1\">**</bpt>POST<ept id=\"p1\">**</ept>, <bpt id=\"p2\">**</bpt>HEAD<ept id=\"p2\">**</ept>, or <ph id=\"ph1\">`GET`</ph>.","pos":[6553,6589],"source":" Can be **POST**, **HEAD**, or `GET`."},{"content":"dwContext","pos":[6596,6605]},{"content":"The context identifier for the <ph id=\"ph1\">`CHttpFile`</ph> object.","pos":[6609,6659],"source":" The context identifier for the `CHttpFile` object."},{"content":"See <bpt id=\"p1\">**</bpt>Remarks<ept id=\"p1\">**</ept> for more information about this parameter.","pos":[6660,6718],"source":" See **Remarks** for more information about this parameter."},{"content":"A pointer to a <bpt id=\"p1\">[</bpt>CHttpConnection<ept id=\"p1\">](../../mfc/reference/chttpconnection-class.md)</ept> object.","pos":[6742,6828],"source":" A pointer to a [CHttpConnection](../../mfc/reference/chttpconnection-class.md) object."},{"content":"Remarks","pos":[6838,6845]},{"pos":[6849,7130],"content":"You never construct a <ph id=\"ph1\">`CHttpFile`</ph> object directly; rather call <bpt id=\"p1\">[</bpt>CInternetSession::OpenURL<ept id=\"p1\">](../../mfc/reference/cinternetsession-class.md#cinternetsession__openurl)</ept> or <bpt id=\"p2\">[</bpt>CHttpConnection::OpenRequest<ept id=\"p2\">](../../mfc/reference/chttpconnection-class.md#chttpconnection__openrequest)</ept> instead.","source":"You never construct a `CHttpFile` object directly; rather call [CInternetSession::OpenURL](../../mfc/reference/cinternetsession-class.md#cinternetsession__openurl) or [CHttpConnection::OpenRequest](../../mfc/reference/chttpconnection-class.md#chttpconnection__openrequest) instead."},{"content":"The default value for <ph id=\"ph1\">`dwContext`</ph> is sent by MFC to the <ph id=\"ph2\">`CHttpFile`</ph> object from the <bpt id=\"p1\">[</bpt>CInternetSession<ept id=\"p1\">](../../mfc/reference/cinternetsession-class.md)</ept> object that created the <ph id=\"ph3\">`CHttpFile`</ph> object.","pos":[7137,7330],"source":"The default value for `dwContext` is sent by MFC to the `CHttpFile` object from the [CInternetSession](../../mfc/reference/cinternetsession-class.md) object that created the `CHttpFile` object."},{"content":"When you call <ph id=\"ph1\">`CInternetSession::OpenURL`</ph> or <ph id=\"ph2\">`CHttpConnection`</ph> to construct a <ph id=\"ph3\">`CHttpFile`</ph> object, you can override the default to set the context identifier to a value of your choosing.","pos":[7331,7516],"source":" When you call `CInternetSession::OpenURL` or `CHttpConnection` to construct a `CHttpFile` object, you can override the default to set the context identifier to a value of your choosing."},{"content":"The context identifier is returned to <bpt id=\"p1\">[</bpt>CInternetSession::OnStatusCallback<ept id=\"p1\">](../../mfc/reference/cinternetsession-class.md#cinternetsession__onstatuscallback)</ept> to provide status on the object with which it is identified.","pos":[7517,7734],"source":" The context identifier is returned to [CInternetSession::OnStatusCallback](../../mfc/reference/cinternetsession-class.md#cinternetsession__onstatuscallback) to provide status on the object with which it is identified."},{"content":"See the article <bpt id=\"p1\">[</bpt>Internet First Steps: WinInet<ept id=\"p1\">](../../mfc/wininet-basics.md)</ept> for more information about the context identifier.","pos":[7735,7862],"source":" See the article [Internet First Steps: WinInet](../../mfc/wininet-basics.md) for more information about the context identifier."},{"pos":[7910,7931],"content":"CHttpFile::EndRequest"},{"pos":[7935,8069],"content":"Call this member function to end a request sent to an HTTP server with the <bpt id=\"p1\">[</bpt>SendRequestEx<ept id=\"p1\">](#chttpfile__sendrequestex)</ept> member function.","source":"Call this member function to end a request sent to an HTTP server with the [SendRequestEx](#chttpfile__sendrequestex) member function."},{"content":"Parameters","pos":[8208,8218]},{"content":"Flags describing the operation.","pos":[8235,8266]},{"content":"For a list of the appropriate flags, see <bpt id=\"p1\">[</bpt>HttpEndRequest<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/aa384230)</ept> in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","pos":[8267,8444],"source":" For a list of the appropriate flags, see [HttpEndRequest](http://msdn.microsoft.com/library/windows/desktop/aa384230) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"content":"Pointer to an initialized <bpt id=\"p1\">[</bpt>INTERNET_BUFFERS<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/aa385132)</ept> that describes the input buffer used for the operation.","pos":[8465,8625],"source":" Pointer to an initialized [INTERNET_BUFFERS](http://msdn.microsoft.com/library/windows/desktop/aa385132) that describes the input buffer used for the operation."},{"content":"The context identifier for the <ph id=\"ph1\">`CHttpFile`</ph> operation.","pos":[8647,8700],"source":" The context identifier for the `CHttpFile` operation."},{"content":"See Remarks for more information about this parameter.","pos":[8701,8755]},{"content":"Return Value","pos":[8765,8777]},{"content":"Nonzero if successful; otherwise 0.","pos":[8781,8816]},{"content":"If the call fails, determine the cause of the failure by examining the thrown <bpt id=\"p1\">[</bpt>CInternetException<ept id=\"p1\">](../../mfc/reference/cinternetexception-class.md)</ept> object.","pos":[8817,8972],"source":" If the call fails, determine the cause of the failure by examining the thrown [CInternetException](../../mfc/reference/cinternetexception-class.md) object."},{"content":"Remarks","pos":[8982,8989]},{"content":"The default value for <ph id=\"ph1\">`dwContext`</ph> is sent by MFC to the <ph id=\"ph2\">`CHttpFile`</ph> object from the <bpt id=\"p1\">[</bpt>CInternetSession<ept id=\"p1\">](../../mfc/reference/cinternetsession-class.md)</ept> object that created the <ph id=\"ph3\">`CHttpFile`</ph> object.","pos":[8993,9186],"source":"The default value for `dwContext` is sent by MFC to the `CHttpFile` object from the [CInternetSession](../../mfc/reference/cinternetsession-class.md) object that created the `CHttpFile` object."},{"content":"When you call <bpt id=\"p1\">[</bpt>CInternetSession::OpenURL<ept id=\"p1\">](../../mfc/reference/cinternetsession-class.md#cinternetsession__openurl)</ept> or <bpt id=\"p2\">[</bpt>CHttpConnection<ept id=\"p2\">](../../mfc/reference/chttpconnection-class.md)</ept> to construct a <ph id=\"ph1\">`CHttpFile`</ph> object, you can override the default to set the context identifier to a value of your choosing.","pos":[9187,9491],"source":" When you call [CInternetSession::OpenURL](../../mfc/reference/cinternetsession-class.md#cinternetsession__openurl) or [CHttpConnection](../../mfc/reference/chttpconnection-class.md) to construct a `CHttpFile` object, you can override the default to set the context identifier to a value of your choosing."},{"content":"The context identifier is returned to <bpt id=\"p1\">[</bpt>CInternetSession::OnStatusCallback<ept id=\"p1\">](../../mfc/reference/cinternetsession-class.md#cinternetsession__onstatuscallback)</ept> to provide status on the object with which it is identified.","pos":[9492,9709],"source":" The context identifier is returned to [CInternetSession::OnStatusCallback](../../mfc/reference/cinternetsession-class.md#cinternetsession__onstatuscallback) to provide status on the object with which it is identified."},{"content":"See article <bpt id=\"p1\">[</bpt>Internet First Steps: WinInet<ept id=\"p1\">](../../mfc/wininet-basics.md)</ept> for more information about the context identifier.","pos":[9710,9833],"source":" See article [Internet First Steps: WinInet](../../mfc/wininet-basics.md) for more information about the context identifier."},{"pos":[9881,9902],"content":"CHttpFile::GetFileURL"},{"content":"Call this member function to get the name of the HTTP file as a URL.","pos":[9906,9974]},{"content":"Return Value","pos":[10038,10050]},{"pos":[10054,10191],"content":"A <bpt id=\"p1\">[</bpt>CString<ept id=\"p1\">](../../atl-mfc-shared/reference/cstringt-class.md)</ept> object containing a URL referencing the resource associated with this file.","source":"A [CString](../../atl-mfc-shared/reference/cstringt-class.md) object containing a URL referencing the resource associated with this file."},{"content":"Remarks","pos":[10201,10208]},{"pos":[10212,10442],"content":"Use this member function only after a successful call to <bpt id=\"p1\">[</bpt>SendRequest<ept id=\"p1\">](#chttpfile__sendrequest)</ept> or on a <ph id=\"ph1\">`CHttpFile`</ph> object successfully created by <bpt id=\"p2\">[</bpt>OpenURL<ept id=\"p2\">](../../mfc/reference/cinternetsession-class.md#cinternetsession__openurl)</ept>.","source":"Use this member function only after a successful call to [SendRequest](#chttpfile__sendrequest) or on a `CHttpFile` object successfully created by [OpenURL](../../mfc/reference/cinternetsession-class.md#cinternetsession__openurl)."},{"pos":[10489,10509],"content":"CHttpFile::GetObject"},{"pos":[10513,10602],"content":"Call this member function to get the name of the object associated with this <ph id=\"ph1\">`CHttpFile`</ph>.","source":"Call this member function to get the name of the object associated with this `CHttpFile`."},{"content":"Return Value","pos":[10657,10669]},{"pos":[10673,10776],"content":"A <bpt id=\"p1\">[</bpt>CString<ept id=\"p1\">](../../atl-mfc-shared/reference/cstringt-class.md)</ept> object containing the name of the object.","source":"A [CString](../../atl-mfc-shared/reference/cstringt-class.md) object containing the name of the object."},{"content":"Remarks","pos":[10786,10793]},{"pos":[10797,11027],"content":"Use this member function only after a successful call to <bpt id=\"p1\">[</bpt>SendRequest<ept id=\"p1\">](#chttpfile__sendrequest)</ept> or on a <ph id=\"ph1\">`CHttpFile`</ph> object successfully created by <bpt id=\"p2\">[</bpt>OpenURL<ept id=\"p2\">](../../mfc/reference/cinternetsession-class.md#cinternetsession__openurl)</ept>.","source":"Use this member function only after a successful call to [SendRequest](#chttpfile__sendrequest) or on a `CHttpFile` object successfully created by [OpenURL](../../mfc/reference/cinternetsession-class.md#cinternetsession__openurl)."},{"pos":[11072,11090],"content":"CHttpFile::GetVerb"},{"pos":[11094,11186],"content":"Call this member function to get the HTTP verb (or method) associated with this <ph id=\"ph1\">`CHttpFile`</ph>.","source":"Call this member function to get the HTTP verb (or method) associated with this `CHttpFile`."},{"content":"Return Value","pos":[11239,11251]},{"pos":[11255,11373],"content":"A <bpt id=\"p1\">[</bpt>CString<ept id=\"p1\">](../../atl-mfc-shared/reference/cstringt-class.md)</ept> object containing the name of the HTTP verb (or method).","source":"A [CString](../../atl-mfc-shared/reference/cstringt-class.md) object containing the name of the HTTP verb (or method)."},{"content":"Remarks","pos":[11383,11390]},{"pos":[11394,11624],"content":"Use this member function only after a successful call to <bpt id=\"p1\">[</bpt>SendRequest<ept id=\"p1\">](#chttpfile__sendrequest)</ept> or on a <ph id=\"ph1\">`CHttpFile`</ph> object successfully created by <bpt id=\"p2\">[</bpt>OpenURL<ept id=\"p2\">](../../mfc/reference/cinternetsession-class.md#cinternetsession__openurl)</ept>.","source":"Use this member function only after a successful call to [SendRequest](#chttpfile__sendrequest) or on a `CHttpFile` object successfully created by [OpenURL](../../mfc/reference/cinternetsession-class.md#cinternetsession__openurl)."},{"pos":[11671,11691],"content":"CHttpFile::QueryInfo"},{"content":"Call this member function to return response or request headers from an HTTP request.","pos":[11695,11780]},{"content":"Parameters","pos":[12152,12162]},{"content":"A combination of the attribute to query and the following flags that specify the type of information requested:","pos":[12183,12294]},{"content":"<bpt id=\"p1\">**</bpt>HTTP_QUERY_CUSTOM<ept id=\"p1\">**</ept> Finds the header name and returns this value in <ph id=\"ph1\">`lpvBuffer`</ph> on output.","pos":[12302,12394],"source":"**HTTP_QUERY_CUSTOM** Finds the header name and returns this value in `lpvBuffer` on output."},{"content":"<bpt id=\"p1\">**</bpt>HTTP_QUERY_CUSTOM<ept id=\"p1\">**</ept> throws an assertion if the header isn't found.","pos":[12395,12463],"source":"**HTTP_QUERY_CUSTOM** throws an assertion if the header isn't found."},{"pos":[12471,12633],"content":"<bpt id=\"p1\">**</bpt>HTTP_QUERY_FLAG_REQUEST_HEADERS<ept id=\"p1\">**</ept> Typically, the application queries the response headers, but an application can also query request headers by using this flag.","source":"**HTTP_QUERY_FLAG_REQUEST_HEADERS** Typically, the application queries the response headers, but an application can also query request headers by using this flag."},{"content":"<bpt id=\"p1\">**</bpt>HTTP_QUERY_FLAG_SYSTEMTIME<ept id=\"p1\">**</ept> For those headers whose value is a date/time string, such as \"Last-Modified-Time,\" this flag returns the header value as a standard Win32 <bpt id=\"p2\">[</bpt>SYSTEMTIME<ept id=\"p2\">](http://msdn.microsoft.com/library/windows/desktop/ms724950)</ept> structure that does not require the application to parse the data.","pos":[12641,12949],"source":"**HTTP_QUERY_FLAG_SYSTEMTIME** For those headers whose value is a date/time string, such as \"Last-Modified-Time,\" this flag returns the header value as a standard Win32 [SYSTEMTIME](http://msdn.microsoft.com/library/windows/desktop/ms724950) structure that does not require the application to parse the data."},{"content":"If you use this flag, you may want to use the <ph id=\"ph1\">`SYSTEMTIME`</ph> override of the function.","pos":[12950,13034],"source":" If you use this flag, you may want to use the `SYSTEMTIME` override of the function."},{"pos":[13042,13183],"content":"<bpt id=\"p1\">**</bpt>HTTP_QUERY_FLAG_NUMBER<ept id=\"p1\">**</ept> For those headers whose value is a number, such as the status code, this flag returns the data as a 32-bit number.","source":"**HTTP_QUERY_FLAG_NUMBER** For those headers whose value is a number, such as the status code, this flag returns the data as a 32-bit number."},{"pos":[13190,13252],"content":"See the <bpt id=\"p1\">**</bpt>Remarks<ept id=\"p1\">**</ept> section for a list of the possible values.","source":"See the **Remarks** section for a list of the possible values."},{"pos":[13259,13328],"content":"`lpvBuffer`  \nA pointer to the buffer that receives the information.","leadings":[""," "],"nodes":[{"content":"A pointer to the buffer that receives the information.","pos":[14,68]}]},{"pos":[13335,13545],"content":"`lpdwBufferLength`  \nOn entry, this points to a value containing the length of the data buffer, in number of characters or bytes. See the **Remarks** section for more detailed information about this parameter.","leadings":[""," "],"nodes":[{"content":"On entry, this points to a value containing the length of the data buffer, in number of characters or bytes. See the **Remarks** section for more detailed information about this parameter.","pos":[21,209],"nodes":[{"content":"On entry, this points to a value containing the length of the data buffer, in number of characters or bytes.","pos":[0,108]},{"content":"See the <bpt id=\"p1\">**</bpt>Remarks<ept id=\"p1\">**</ept> section for more detailed information about this parameter.","pos":[109,188],"source":" See the **Remarks** section for more detailed information about this parameter."}]}]},{"pos":[13552,13907],"content":"`lpdwIndex`  \nA pointer to a zero-based header index. Can be **NULL**. Use this flag to enumerate multiple headers with the same name. On input, `lpdwIndex` indicates the index of the specified header to return. On output, `lpdwIndex` indicates the index of the next header. If the next index cannot be found, **ERROR_HTTP_HEADER_NOT_FOUND** is returned.","leadings":[""," "],"nodes":[{"content":"A pointer to a zero-based header index. Can be **NULL**. Use this flag to enumerate multiple headers with the same name. On input, `lpdwIndex` indicates the index of the specified header to return. On output, `lpdwIndex` indicates the index of the next header. If the next index cannot be found, **ERROR_HTTP_HEADER_NOT_FOUND** is returned.","pos":[14,354],"nodes":[{"content":"A pointer to a zero-based header index.","pos":[0,39]},{"content":"Can be <bpt id=\"p1\">**</bpt>NULL<ept id=\"p1\">**</ept>.","pos":[40,56],"source":" Can be **NULL**."},{"content":"Use this flag to enumerate multiple headers with the same name.","pos":[57,120]},{"content":"On input, <ph id=\"ph1\">`lpdwIndex`</ph> indicates the index of the specified header to return.","pos":[121,197],"source":" On input, `lpdwIndex` indicates the index of the specified header to return."},{"content":"On output, <ph id=\"ph1\">`lpdwIndex`</ph> indicates the index of the next header.","pos":[198,260],"source":" On output, `lpdwIndex` indicates the index of the next header."},{"content":"If the next index cannot be found, <bpt id=\"p1\">**</bpt>ERROR_HTTP_HEADER_NOT_FOUND<ept id=\"p1\">**</ept> is returned.","pos":[261,340],"source":" If the next index cannot be found, **ERROR_HTTP_HEADER_NOT_FOUND** is returned."}]}]},{"pos":[13914,14044],"content":"`str`  \nA reference to the [CString](../../atl-mfc-shared/reference/cstringt-class.md) object receiving the returned information.","leadings":[""," "],"nodes":[{"content":"A reference to the <bpt id=\"p1\">[</bpt>CString<ept id=\"p1\">](../../atl-mfc-shared/reference/cstringt-class.md)</ept> object receiving the returned information.","pos":[8,129],"source":"A reference to the [CString](../../atl-mfc-shared/reference/cstringt-class.md) object receiving the returned information."}]},{"pos":[14051,14096],"content":"`dwIndex`  \nAn index value. See `lpdwIndex`.","leadings":[""," "],"nodes":[{"content":"An index value. See `lpdwIndex`.","pos":[12,44],"nodes":[{"content":"An index value.","pos":[0,15]},{"content":"See <ph id=\"ph1\">`lpdwIndex`</ph>.","pos":[16,32],"source":" See `lpdwIndex`."}]}]},{"pos":[14103,14221],"content":"*pSysTime*  \nA pointer to a Win32 [SYSTEMTIME](http://msdn.microsoft.com/library/windows/desktop/ms724950) structure.","leadings":[""," "],"nodes":[{"content":"pSysTime","pos":[1,9]},{"content":"A pointer to a Win32 <bpt id=\"p1\">[</bpt>SYSTEMTIME<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms724950)</ept> structure.","pos":[13,117],"source":"A pointer to a Win32 [SYSTEMTIME](http://msdn.microsoft.com/library/windows/desktop/ms724950) structure."}]},{"content":"Return Value","pos":[14231,14243]},{"content":"Nonzero if successful; otherwise 0.","pos":[14247,14282]},{"content":"If the call fails, the Win32 function <bpt id=\"p1\">[</bpt>GetLastError<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms679360)</ept> may be called to determine the cause of the error.","pos":[14283,14446],"source":" If the call fails, the Win32 function [GetLastError](http://msdn.microsoft.com/library/windows/desktop/ms679360) may be called to determine the cause of the error."},{"content":"Remarks","pos":[14456,14463]},{"pos":[14467,14697],"content":"Use this member function only after a successful call to <bpt id=\"p1\">[</bpt>SendRequest<ept id=\"p1\">](#chttpfile__sendrequest)</ept> or on a <ph id=\"ph1\">`CHttpFile`</ph> object successfully created by <bpt id=\"p2\">[</bpt>OpenURL<ept id=\"p2\">](../../mfc/reference/cinternetsession-class.md#cinternetsession__openurl)</ept>.","source":"Use this member function only after a successful call to [SendRequest](#chttpfile__sendrequest) or on a `CHttpFile` object successfully created by [OpenURL](../../mfc/reference/cinternetsession-class.md#cinternetsession__openurl)."},{"pos":[14704,14766],"content":"You can retrieve the following types of data from <ph id=\"ph1\">`QueryInfo`</ph>:","source":"You can retrieve the following types of data from `QueryInfo`:"},{"content":"strings (default)","pos":[14776,14793]},{"pos":[14814,14851],"content":"(for \"Data:\" \"Expires:\" etc, headers)"},{"pos":[14867,14914],"content":"(for <bpt id=\"p1\">**</bpt>STATUS_CODE<ept id=\"p1\">**</ept>, <bpt id=\"p2\">**</bpt>CONTENT_LENGTH<ept id=\"p2\">**</ept>, etc.)","source":" (for **STATUS_CODE**, **CONTENT_LENGTH**, etc.)"},{"pos":[14921,15109],"content":"When a string is written to the buffer, and the member function succeeds, <ph id=\"ph1\">`lpdwBufferLength`</ph> contains the length of the string in characters minus 1 for the terminating <bpt id=\"p1\">**</bpt>NULL<ept id=\"p1\">**</ept> character.","source":"When a string is written to the buffer, and the member function succeeds, `lpdwBufferLength` contains the length of the string in characters minus 1 for the terminating **NULL** character."},{"pos":[15116,15158],"content":"The possible <ph id=\"ph1\">`dwInfoLevel`</ph> values include:","source":"The possible `dwInfoLevel` values include:"},{"content":"HTTP_QUERY_MIME_VERSION","pos":[15168,15191]},{"content":"HTTP_QUERY_CONTENT_TYPE","pos":[15203,15226]},{"content":"HTTP_QUERY_CONTENT_TRANSFER_ENCODING","pos":[15238,15274]},{"content":"HTTP_QUERY_CONTENT_ID","pos":[15286,15307]},{"content":"HTTP_QUERY_CONTENT_DESCRIPTION","pos":[15319,15349]},{"content":"HTTP_QUERY_CONTENT_LENGTH","pos":[15361,15386]},{"content":"HTTP_QUERY_ALLOWED_METHODS","pos":[15398,15424]},{"content":"HTTP_QUERY_PUBLIC_METHODS","pos":[15436,15461]},{"content":"HTTP_QUERY_DATE","pos":[15473,15488]},{"content":"HTTP_QUERY_EXPIRES","pos":[15500,15518]},{"content":"HTTP_QUERY_LAST_MODIFIED","pos":[15530,15554]},{"content":"HTTP_QUERY_MESSAGE_ID","pos":[15566,15587]},{"content":"HTTP_QUERY_URI","pos":[15599,15613]},{"content":"HTTP_QUERY_DERIVED_FROM","pos":[15625,15648]},{"content":"HTTP_QUERY_LANGUAGE","pos":[15660,15679]},{"content":"HTTP_QUERY_COST","pos":[15691,15706]},{"content":"HTTP_QUERY_WWW_LINK","pos":[15718,15737]},{"content":"HTTP_QUERY_PRAGMA","pos":[15749,15766]},{"content":"HTTP_QUERY_VERSION","pos":[15778,15796]},{"content":"HTTP_QUERY_STATUS_CODE","pos":[15808,15830]},{"content":"HTTP_QUERY_STATUS_TEXT","pos":[15842,15864]},{"content":"HTTP_QUERY_RAW_HEADERS","pos":[15876,15898]},{"content":"HTTP_QUERY_RAW_HEADERS_CRLF","pos":[15910,15937]},{"pos":[15996,16026],"content":"CHttpFile::QueryInfoStatusCode"},{"pos":[16030,16165],"content":"Call this member function to get the status code associated with an HTTP request and place it in the supplied <ph id=\"ph1\">`dwStatusCode`</ph> parameter.","source":"Call this member function to get the status code associated with an HTTP request and place it in the supplied `dwStatusCode` parameter."},{"content":"Parameters","pos":[16246,16256]},{"content":"A reference to a status code.","pos":[16278,16307]},{"content":"Status codes indicate the success or failure of the requested event.","pos":[16308,16376]},{"content":"See <bpt id=\"p1\">**</bpt>Remarks<ept id=\"p1\">**</ept> for a selection of status code descriptions.","pos":[16377,16437],"source":" See **Remarks** for a selection of status code descriptions."},{"content":"Return Value","pos":[16447,16459]},{"content":"Nonzero if successful; otherwise 0.","pos":[16463,16498]},{"content":"If the call fails, the Win32 function <bpt id=\"p1\">[</bpt>GetLastError<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms679360)</ept> may be called to determine the cause of the error.","pos":[16499,16662],"source":" If the call fails, the Win32 function [GetLastError](http://msdn.microsoft.com/library/windows/desktop/ms679360) may be called to determine the cause of the error."},{"content":"Remarks","pos":[16672,16679]},{"pos":[16683,16913],"content":"Use this member function only after a successful call to <bpt id=\"p1\">[</bpt>SendRequest<ept id=\"p1\">](#chttpfile__sendrequest)</ept> or on a <ph id=\"ph1\">`CHttpFile`</ph> object successfully created by <bpt id=\"p2\">[</bpt>OpenURL<ept id=\"p2\">](../../mfc/reference/cinternetsession-class.md#cinternetsession__openurl)</ept>.","source":"Use this member function only after a successful call to [SendRequest](#chttpfile__sendrequest) or on a `CHttpFile` object successfully created by [OpenURL](../../mfc/reference/cinternetsession-class.md#cinternetsession__openurl)."},{"content":"HTTP status codes fall into groups indicating the success or failure of the request.","pos":[16920,17004]},{"content":"The following tables outline the status code groups and the most common HTTP status codes.","pos":[17005,17095]},{"content":"Group","pos":[17102,17107]},{"content":"Meaning","pos":[17108,17115]},{"content":"200-299","pos":[17150,17157]},{"content":"Success","pos":[17158,17165]},{"content":"300-399","pos":[17170,17177]},{"content":"Information","pos":[17178,17189]},{"content":"400-499","pos":[17194,17201]},{"content":"Request error","pos":[17202,17215]},{"content":"500-599","pos":[17220,17227]},{"content":"Server error","pos":[17228,17240]},{"content":"Common HTTP Status Codes:","pos":[17248,17273]},{"content":"Status code","pos":[17280,17291]},{"content":"Meaning","pos":[17292,17299]},{"content":"200","pos":[17340,17343]},{"content":"URL located, transmission follows","pos":[17344,17377]},{"content":"400","pos":[17382,17385]},{"content":"Unintelligible request","pos":[17386,17408]},{"content":"404","pos":[17413,17416]},{"content":"Requested URL not found","pos":[17417,17440]},{"content":"405","pos":[17445,17448]},{"content":"Server does not support requested method","pos":[17449,17489]},{"content":"500","pos":[17494,17497]},{"content":"Unknown server error","pos":[17498,17518]},{"content":"503","pos":[17523,17526]},{"content":"Server capacity reached","pos":[17527,17550]},{"pos":[17600,17622],"content":"CHttpFile::SendRequest"},{"content":"Call this member function to send a request to an HTTP server.","pos":[17626,17688]},{"content":"Parameters","pos":[17967,17977]},{"content":"A pointer to a string containing the name of the headers to send.","pos":[17998,18063]},{"content":"The length of the headers identified by <ph id=\"ph1\">`pstrHeaders`</ph>.","pos":[18088,18142],"source":" The length of the headers identified by `pstrHeaders`."},{"content":"Any optional data to send immediately after the request headers.","pos":[18165,18229]},{"content":"This is generally used for <bpt id=\"p1\">**</bpt>POST<ept id=\"p1\">**</ept> and <bpt id=\"p2\">**</bpt>PUT<ept id=\"p2\">**</ept> operations.","pos":[18230,18289],"source":" This is generally used for **POST** and **PUT** operations."},{"content":"This can be <bpt id=\"p1\">**</bpt>NULL<ept id=\"p1\">**</ept> if there is no optional data to send.","pos":[18290,18348],"source":" This can be **NULL** if there is no optional data to send."},{"content":"dwOptionalLen","pos":[18356,18369]},{"content":"The length of <ph id=\"ph1\">`lpOptional`</ph>.","pos":[18374,18401],"source":" The length of `lpOptional`."},{"content":"A string containing the name of the headers for the request being sent.","pos":[18424,18495]},{"content":"Return Value","pos":[18505,18517]},{"content":"Nonzero if successful; otherwise 0.","pos":[18521,18556]},{"content":"If the call fails, determine the cause of the failure by examining the thrown <bpt id=\"p1\">[</bpt>CInternetException<ept id=\"p1\">](../../mfc/reference/cinternetexception-class.md)</ept> object.","pos":[18557,18712],"source":" If the call fails, determine the cause of the failure by examining the thrown [CInternetException](../../mfc/reference/cinternetexception-class.md) object."},{"pos":[18763,18787],"content":"CHttpFile::SendRequestEx"},{"content":"Call this member function to send a request to an HTTP server.","pos":[18791,18853]},{"content":"Parameters","pos":[19148,19158]},{"content":"dwTotalLen","pos":[19163,19173]},{"content":"Number of bytes to be sent in the request.","pos":[19178,19220]},{"content":"Flags describing the operation.","pos":[19240,19271]},{"content":"For a list of appropriate flags, see <bpt id=\"p1\">[</bpt>HttpSendRequestEx<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/aa384318)</ept> in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph><bpt id=\"p2\">*</bpt>.<ept id=\"p2\">*</ept>","pos":[19272,19450],"source":" For a list of appropriate flags, see [HttpSendRequestEx](http://msdn.microsoft.com/library/windows/desktop/aa384318) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]*.*"},{"content":"The context identifier for the <ph id=\"ph1\">`CHttpFile`</ph> operation.","pos":[19472,19525],"source":" The context identifier for the `CHttpFile` operation."},{"content":"See Remarks for more information about this parameter.","pos":[19526,19580]},{"content":"Pointer to an initialized <bpt id=\"p1\">[</bpt>INTERNET_BUFFERS<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/aa385132)</ept> that describes the input buffer used for the operation.","pos":[19601,19761],"source":" Pointer to an initialized [INTERNET_BUFFERS](http://msdn.microsoft.com/library/windows/desktop/aa385132) that describes the input buffer used for the operation."},{"content":"lpBuffOut","pos":[19769,19778]},{"content":"Pointer to an initialized <bpt id=\"p1\">**</bpt>INTERNET_BUFFERS<ept id=\"p1\">**</ept> that describes the output buffer used for the operation.","pos":[19783,19886],"source":" Pointer to an initialized **INTERNET_BUFFERS** that describes the output buffer used for the operation."},{"content":"Return Value","pos":[19896,19908]},{"content":"Nonzero if successful.","pos":[19912,19934]},{"content":"If the call fails, determine the cause of the failure by examining the thrown <bpt id=\"p1\">[</bpt>CInternetException<ept id=\"p1\">](../../mfc/reference/cinternetexception-class.md)</ept> object.","pos":[19935,20090],"source":" If the call fails, determine the cause of the failure by examining the thrown [CInternetException](../../mfc/reference/cinternetexception-class.md) object."},{"content":"Remarks","pos":[20100,20107]},{"content":"This function allows your application to send data using the <bpt id=\"p1\">[</bpt>Write<ept id=\"p1\">](../../mfc/reference/cinternetfile-class.md#cinternetfile__write)</ept> and <bpt id=\"p2\">[</bpt>WriteString<ept id=\"p2\">](../../mfc/reference/cinternetfile-class.md#cinternetfile__writestring)</ept> methods of <ph id=\"ph1\">`CInternetFile`</ph>.","pos":[20111,20361],"source":"This function allows your application to send data using the [Write](../../mfc/reference/cinternetfile-class.md#cinternetfile__write) and [WriteString](../../mfc/reference/cinternetfile-class.md#cinternetfile__writestring) methods of `CInternetFile`."},{"content":"You must know the length of the data to send before calling either override of this function.","pos":[20362,20455]},{"content":"The first override allows you to specify the length of data you'd like to send.","pos":[20456,20535]},{"content":"The second override accepts pointers to <bpt id=\"p1\">**</bpt>INTERNET_BUFFERS<ept id=\"p1\">**</ept> structures, which can be used to describe the buffer in great detail.","pos":[20536,20666],"source":" The second override accepts pointers to **INTERNET_BUFFERS** structures, which can be used to describe the buffer in great detail."},{"pos":[20673,20774],"content":"After content is written to the file, call <bpt id=\"p1\">[</bpt>EndRequest<ept id=\"p1\">](#chttpfile__endrequest)</ept> to end the operation.","source":"After content is written to the file, call [EndRequest](#chttpfile__endrequest) to end the operation."},{"content":"The default value for <ph id=\"ph1\">`dwContext`</ph> is sent by MFC to the <ph id=\"ph2\">`CHttpFile`</ph> object from the <bpt id=\"p1\">[</bpt>CInternetSession<ept id=\"p1\">](../../mfc/reference/cinternetsession-class.md)</ept> object that created the <ph id=\"ph3\">`CHttpFile`</ph> object.","pos":[20781,20974],"source":"The default value for `dwContext` is sent by MFC to the `CHttpFile` object from the [CInternetSession](../../mfc/reference/cinternetsession-class.md) object that created the `CHttpFile` object."},{"content":"When you call <bpt id=\"p1\">[</bpt>CInternetSession::OpenURL<ept id=\"p1\">](../../mfc/reference/cinternetsession-class.md#cinternetsession__openurl)</ept> or <bpt id=\"p2\">[</bpt>CHttpConnection<ept id=\"p2\">](../../mfc/reference/chttpconnection-class.md)</ept> to construct a <ph id=\"ph1\">`CHttpFile`</ph> object, you can override the default to set the context identifier to a value of your choosing.","pos":[20975,21279],"source":" When you call [CInternetSession::OpenURL](../../mfc/reference/cinternetsession-class.md#cinternetsession__openurl) or [CHttpConnection](../../mfc/reference/chttpconnection-class.md) to construct a `CHttpFile` object, you can override the default to set the context identifier to a value of your choosing."},{"content":"The context identifier is returned to <bpt id=\"p1\">[</bpt>CInternetSession::OnStatusCallback<ept id=\"p1\">](../../mfc/reference/cinternetsession-class.md#cinternetsession__onstatuscallback)</ept> to provide status on the object with which it is identified.","pos":[21280,21497],"source":" The context identifier is returned to [CInternetSession::OnStatusCallback](../../mfc/reference/cinternetsession-class.md#cinternetsession__onstatuscallback) to provide status on the object with which it is identified."},{"content":"See the article <bpt id=\"p1\">[</bpt>Internet First Steps: WinInet<ept id=\"p1\">](../../mfc/wininet-basics.md)</ept> for more information about the context identifier.","pos":[21498,21625],"source":" See the article [Internet First Steps: WinInet](../../mfc/wininet-basics.md) for more information about the context identifier."},{"content":"Example","pos":[21635,21642]},{"content":"This code fragment sends the content of a string to a DLL named MFCISAPI.DLL on the LOCALHOST server.","pos":[21646,21747]},{"content":"While this example uses only one call to <ph id=\"ph1\">`WriteString`</ph>, using multiple calls to send data in blocks is acceptable.","pos":[21748,21862],"source":" While this example uses only one call to `WriteString`, using multiple calls to send data in blocks is acceptable."},{"pos":[21880,21896],"content":"NVC_MFCWinInet#9"},{"content":"See Also","pos":[21956,21964]},{"content":"CInternetFile Class","pos":[21969,21988]},{"content":"Hierarchy Chart","pos":[22039,22054]},{"content":"CInternetFile Class","pos":[22091,22110]},{"content":"CGopherFile Class","pos":[22161,22178]},{"content":"CHttpConnection Class","pos":[22227,22248]}],"content":"---\ntitle: \"CHttpFile Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"CHttpFile\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"HTTP files\"\n  - \"HTTP requests, requesting and reading files\"\n  - \"CHttpFile class\"\nms.assetid: 399e7c68-bbce-4374-8c55-206e9c7baac6\ncaps.latest.revision: 23\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# CHttpFile Class\nProvides the functionality to request and read files on an HTTP server.  \n  \n## Syntax  \n  \n```  \nclass CHttpFile : public CInternetFile  \n```  \n  \n## Members  \n  \n### Protected Constructors  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CHttpFile::CHttpFile](#chttpfile__chttpfile)|Creates a `CHttpFile` object.|  \n  \n### Public Methods  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CHttpFile::AddRequestHeaders](#chttpfile__addrequestheaders)|Adds headers to the request sent to an HTTP server.|  \n|[CHttpFile::EndRequest](#chttpfile__endrequest)|Ends a request sent to an HTTP server with the [SendRequestEx](#chttpfile__sendrequestex) member function.|  \n|[CHttpFile::GetFileURL](#chttpfile__getfileurl)|Gets the URL for the specified file.|  \n|[CHttpFile::GetObject](#chttpfile__getobject)|Gets the target object of the verb in a request to an HTTP server.|  \n|[CHttpFile::GetVerb](#chttpfile__getverb)|Gets the verb that was used in a request to an HTTP server.|  \n|[CHttpFile::QueryInfo](#chttpfile__queryinfo)|Returns the response or request headers from the HTTP server.|  \n|[CHttpFile::QueryInfoStatusCode](#chttpfile__queryinfostatuscode)|Retrieves the status code associated with an HTTP request and places it in the supplied `dwStatusCode` parameter.|  \n|[CHttpFile::SendRequest](#chttpfile__sendrequest)|Sends a request to an HTTP server.|  \n|[CHttpFile::SendRequestEx](#chttpfile__sendrequestex)|Sends a request to an HTTP server using the [Write](../../mfc/reference/cinternetfile-class.md#cinternetfile__write) or [WriteString](../../mfc/reference/cinternetfile-class.md#cinternetfile__writestring) methods of `CInternetFile`.|  \n  \n## Remarks  \n If your Internet session reads data from an HTTP server, you must create an instance of `CHttpFile`.  \n  \n To learn more about how `CHttpFile` works with the other MFC Internet classes, see the article [Internet Programming with WinInet](../../mfc/win32-internet-extensions-wininet.md).  \n  \n## Inheritance Hierarchy  \n [CObject](../../mfc/reference/cobject-class.md)  \n  \n [CFile](../../mfc/reference/cfile-class.md)  \n  \n [CStdioFile](../../mfc/reference/cstdiofile-class.md)  \n  \n [CInternetFile](../../mfc/reference/cinternetfile-class.md)  \n  \n `CHttpFile`  \n  \n## Requirements  \n **Header:** afxinet.h  \n  \n##  <a name=\"chttpfile__addrequestheaders\"></a>  CHttpFile::AddRequestHeaders  \n Call this member function to add one or more HTTP request headers to the HTTP request handle.  \n  \n```  \nBOOL AddRequestHeaders(\n    LPCTSTR pstrHeaders,  \n    DWORD dwFlags = HTTP_ADDREQ_FLAG_ADD_IF_NEW,  \n    int dwHeadersLen = -1);\n\n \nBOOL AddRequestHeaders(\n    CString& str,  \n    DWORD dwFlags = HTTP_ADDREQ_FLAG_ADD_IF_NEW);\n```  \n  \n### Parameters  \n `pstrHeaders`  \n A pointer to a string containing the header or headers to append to the request. Each header must be terminated by a CR/LF pair.  \n  \n `dwFlags`  \n Modifies the semantics of the new headers. Can be one of the following:  \n  \n- `HTTP_ADDREQ_FLAG_COALESCE` Merges headers of the same name, using the flag to add the first header found to the subsequent header. For example, \"Accept: text/*\" followed by \"Accept: audio/\\*\" results in the formation of the single header \"Accept: text/\\*, audio/\\*\". It is up to the calling application to ensure a cohesive scheme with respect to data received by requests sent with coalesced or separate headers.  \n  \n- `HTTP_ADDREQ_FLAG_REPLACE` Performs a remove and add to replace the current header. The header name will be used to remove the current header, and the full value will be used to add the new header. If the header-value is empty and the header is found, it is removed. If not empty, the header-value is replaced.  \n  \n- `HTTP_ADDREQ_FLAG_ADD_IF_NEW` Only adds the header if it does not already exist. If one exists, an error is returned.  \n  \n- `HTTP_ADDREQ_FLAG_ADD` Used with REPLACE. Adds the header if it doesn't exist.  \n  \n `dwHeadersLen`  \n The length, in characters, of `pstrHeaders`. If this is -1L, then `pstrHeaders` is assumed to be zero-terminated and the length is computed.  \n  \n `str`  \n A reference to a [CString](../../atl-mfc-shared/reference/cstringt-class.md) object containing the request header or headers to be added.  \n  \n### Return Value  \n Nonzero if successful; otherwise 0. If the call fails, the Win32 function [GetLastError](http://msdn.microsoft.com/library/windows/desktop/ms679360) may be called to determine the cause of the error.  \n  \n### Remarks  \n `AddRequestHeaders` appends additional, free-format headers to the HTTP request handle. It is intended for use by sophisticated clients who need detailed control over the exact request sent to the HTTP server.  \n  \n> [!NOTE]\n>  The application can pass multiple headers in `pstrHeaders` or `str` for an `AddRequestHeaders` call using `HTTP_ADDREQ_FLAG_ADD` or `HTTP_ADDREQ_FLAG_ADD_IF_NEW`. If the application tries to remove or replace a header using **HTTP_ADDREQ_FLAG_REMOVE** or `HTTP_ADDREQ_FLAG_REPLACE`, only one header can be supplied in `lpszHeaders`.  \n  \n##  <a name=\"chttpfile__chttpfile\"></a>  CHttpFile::CHttpFile  \n This member function is called to construct a `CHttpFile` object.  \n  \n```  \nCHttpFile(\n    HINTERNET hFile,  \n    HINTERNET hSession,  \n    LPCTSTR pstrObject,  \n    LPCTSTR pstrServer,  \n    LPCTSTR pstrVerb,  \n    DWORD_PTR dwContext);\n\n \nCHttpFile(\n    HINTERNET hFile,  \n    LPCTSTR pstrVerb,  \n    LPCTSTR pstrObject,  \n    CHttpConnection* pConnection);\n```  \n  \n### Parameters  \n `hFile`  \n A handle to an Internet file.  \n  \n `hSession`  \n A handle to an Internet session.  \n  \n *pstrObject*  \n A pointer to a string containing the `CHttpFile` object.  \n  \n `pstrServer`  \n A pointer to a string containing the name of the server.  \n  \n `pstrVerb`  \n A pointer to a string containing the method to be used when sending the request. Can be **POST**, **HEAD**, or `GET`.  \n  \n dwContext  \n The context identifier for the `CHttpFile` object. See **Remarks** for more information about this parameter.  \n  \n `pConnection`  \n A pointer to a [CHttpConnection](../../mfc/reference/chttpconnection-class.md) object.  \n  \n### Remarks  \n You never construct a `CHttpFile` object directly; rather call [CInternetSession::OpenURL](../../mfc/reference/cinternetsession-class.md#cinternetsession__openurl) or [CHttpConnection::OpenRequest](../../mfc/reference/chttpconnection-class.md#chttpconnection__openrequest) instead.  \n  \n The default value for `dwContext` is sent by MFC to the `CHttpFile` object from the [CInternetSession](../../mfc/reference/cinternetsession-class.md) object that created the `CHttpFile` object. When you call `CInternetSession::OpenURL` or `CHttpConnection` to construct a `CHttpFile` object, you can override the default to set the context identifier to a value of your choosing. The context identifier is returned to [CInternetSession::OnStatusCallback](../../mfc/reference/cinternetsession-class.md#cinternetsession__onstatuscallback) to provide status on the object with which it is identified. See the article [Internet First Steps: WinInet](../../mfc/wininet-basics.md) for more information about the context identifier.  \n  \n##  <a name=\"chttpfile__endrequest\"></a>  CHttpFile::EndRequest  \n Call this member function to end a request sent to an HTTP server with the [SendRequestEx](#chttpfile__sendrequestex) member function.  \n  \n```  \nBOOL EndRequest(\n    DWORD dwFlags = 0,  \n    LPINTERNET_BUFFERS lpBuffIn = NULL,  \n    DWORD_PTR dwContext = 1);\n```  \n  \n### Parameters  \n `dwFlags`  \n Flags describing the operation. For a list of the appropriate flags, see [HttpEndRequest](http://msdn.microsoft.com/library/windows/desktop/aa384230) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n `lpBuffIn`  \n Pointer to an initialized [INTERNET_BUFFERS](http://msdn.microsoft.com/library/windows/desktop/aa385132) that describes the input buffer used for the operation.  \n  \n `dwContext`  \n The context identifier for the `CHttpFile` operation. See Remarks for more information about this parameter.  \n  \n### Return Value  \n Nonzero if successful; otherwise 0. If the call fails, determine the cause of the failure by examining the thrown [CInternetException](../../mfc/reference/cinternetexception-class.md) object.  \n  \n### Remarks  \n The default value for `dwContext` is sent by MFC to the `CHttpFile` object from the [CInternetSession](../../mfc/reference/cinternetsession-class.md) object that created the `CHttpFile` object. When you call [CInternetSession::OpenURL](../../mfc/reference/cinternetsession-class.md#cinternetsession__openurl) or [CHttpConnection](../../mfc/reference/chttpconnection-class.md) to construct a `CHttpFile` object, you can override the default to set the context identifier to a value of your choosing. The context identifier is returned to [CInternetSession::OnStatusCallback](../../mfc/reference/cinternetsession-class.md#cinternetsession__onstatuscallback) to provide status on the object with which it is identified. See article [Internet First Steps: WinInet](../../mfc/wininet-basics.md) for more information about the context identifier.  \n  \n##  <a name=\"chttpfile__getfileurl\"></a>  CHttpFile::GetFileURL  \n Call this member function to get the name of the HTTP file as a URL.  \n  \n```  \nvirtual CString GetFileURL() const;\n\n \n```  \n  \n### Return Value  \n A [CString](../../atl-mfc-shared/reference/cstringt-class.md) object containing a URL referencing the resource associated with this file.  \n  \n### Remarks  \n Use this member function only after a successful call to [SendRequest](#chttpfile__sendrequest) or on a `CHttpFile` object successfully created by [OpenURL](../../mfc/reference/cinternetsession-class.md#cinternetsession__openurl).  \n  \n##  <a name=\"chttpfile__getobject\"></a>  CHttpFile::GetObject  \n Call this member function to get the name of the object associated with this `CHttpFile`.  \n  \n```  \nCString GetObject() const;\n\n \n```  \n  \n### Return Value  \n A [CString](../../atl-mfc-shared/reference/cstringt-class.md) object containing the name of the object.  \n  \n### Remarks  \n Use this member function only after a successful call to [SendRequest](#chttpfile__sendrequest) or on a `CHttpFile` object successfully created by [OpenURL](../../mfc/reference/cinternetsession-class.md#cinternetsession__openurl).  \n  \n##  <a name=\"chttpfile__getverb\"></a>  CHttpFile::GetVerb  \n Call this member function to get the HTTP verb (or method) associated with this `CHttpFile`.  \n  \n```  \nCString GetVerb() const;\n\n \n```  \n  \n### Return Value  \n A [CString](../../atl-mfc-shared/reference/cstringt-class.md) object containing the name of the HTTP verb (or method).  \n  \n### Remarks  \n Use this member function only after a successful call to [SendRequest](#chttpfile__sendrequest) or on a `CHttpFile` object successfully created by [OpenURL](../../mfc/reference/cinternetsession-class.md#cinternetsession__openurl).  \n  \n##  <a name=\"chttpfile__queryinfo\"></a>  CHttpFile::QueryInfo  \n Call this member function to return response or request headers from an HTTP request.  \n  \n```  \nBOOL QueryInfo(\n    DWORD dwInfoLevel,  \n    LPVOID lpvBuffer,  \n    LPDWORD lpdwBufferLength,  \n    LPDWORD lpdwIndex = NULL) const;\n\n \n \nBOOL QueryInfo(\n    DWORD dwInfoLevel,  \n    CString& str,  \n    LPDWORD dwIndex = NULL) const;\n\n \n \nBOOL QueryInfo(\n    DWORD dwInfoLevel,  \n    SYSTEMTIME* pSysTime,  \n    LPDWORD dwIndex = NULL) const;\n\n \n```  \n  \n### Parameters  \n `dwInfoLevel`  \n A combination of the attribute to query and the following flags that specify the type of information requested:  \n  \n- **HTTP_QUERY_CUSTOM** Finds the header name and returns this value in `lpvBuffer` on output. **HTTP_QUERY_CUSTOM** throws an assertion if the header isn't found.  \n  \n- **HTTP_QUERY_FLAG_REQUEST_HEADERS** Typically, the application queries the response headers, but an application can also query request headers by using this flag.  \n  \n- **HTTP_QUERY_FLAG_SYSTEMTIME** For those headers whose value is a date/time string, such as \"Last-Modified-Time,\" this flag returns the header value as a standard Win32 [SYSTEMTIME](http://msdn.microsoft.com/library/windows/desktop/ms724950) structure that does not require the application to parse the data. If you use this flag, you may want to use the `SYSTEMTIME` override of the function.  \n  \n- **HTTP_QUERY_FLAG_NUMBER** For those headers whose value is a number, such as the status code, this flag returns the data as a 32-bit number.  \n  \n See the **Remarks** section for a list of the possible values.  \n  \n `lpvBuffer`  \n A pointer to the buffer that receives the information.  \n  \n `lpdwBufferLength`  \n On entry, this points to a value containing the length of the data buffer, in number of characters or bytes. See the **Remarks** section for more detailed information about this parameter.  \n  \n `lpdwIndex`  \n A pointer to a zero-based header index. Can be **NULL**. Use this flag to enumerate multiple headers with the same name. On input, `lpdwIndex` indicates the index of the specified header to return. On output, `lpdwIndex` indicates the index of the next header. If the next index cannot be found, **ERROR_HTTP_HEADER_NOT_FOUND** is returned.  \n  \n `str`  \n A reference to the [CString](../../atl-mfc-shared/reference/cstringt-class.md) object receiving the returned information.  \n  \n `dwIndex`  \n An index value. See `lpdwIndex`.  \n  \n *pSysTime*  \n A pointer to a Win32 [SYSTEMTIME](http://msdn.microsoft.com/library/windows/desktop/ms724950) structure.  \n  \n### Return Value  \n Nonzero if successful; otherwise 0. If the call fails, the Win32 function [GetLastError](http://msdn.microsoft.com/library/windows/desktop/ms679360) may be called to determine the cause of the error.  \n  \n### Remarks  \n Use this member function only after a successful call to [SendRequest](#chttpfile__sendrequest) or on a `CHttpFile` object successfully created by [OpenURL](../../mfc/reference/cinternetsession-class.md#cinternetsession__openurl).  \n  \n You can retrieve the following types of data from `QueryInfo`:  \n  \n-   strings (default)  \n  \n- `SYSTEMTIME` (for \"Data:\" \"Expires:\" etc, headers)  \n  \n- `DWORD` (for **STATUS_CODE**, **CONTENT_LENGTH**, etc.)  \n  \n When a string is written to the buffer, and the member function succeeds, `lpdwBufferLength` contains the length of the string in characters minus 1 for the terminating **NULL** character.  \n  \n The possible `dwInfoLevel` values include:  \n  \n- **HTTP_QUERY_MIME_VERSION**  \n  \n- **HTTP_QUERY_CONTENT_TYPE**  \n  \n- **HTTP_QUERY_CONTENT_TRANSFER_ENCODING**  \n  \n- **HTTP_QUERY_CONTENT_ID**  \n  \n- **HTTP_QUERY_CONTENT_DESCRIPTION**  \n  \n- **HTTP_QUERY_CONTENT_LENGTH**  \n  \n- **HTTP_QUERY_ALLOWED_METHODS**  \n  \n- **HTTP_QUERY_PUBLIC_METHODS**  \n  \n- **HTTP_QUERY_DATE**  \n  \n- **HTTP_QUERY_EXPIRES**  \n  \n- **HTTP_QUERY_LAST_MODIFIED**  \n  \n- **HTTP_QUERY_MESSAGE_ID**  \n  \n- **HTTP_QUERY_URI**  \n  \n- **HTTP_QUERY_DERIVED_FROM**  \n  \n- **HTTP_QUERY_LANGUAGE**  \n  \n- **HTTP_QUERY_COST**  \n  \n- **HTTP_QUERY_WWW_LINK**  \n  \n- **HTTP_QUERY_PRAGMA**  \n  \n- **HTTP_QUERY_VERSION**  \n  \n- **HTTP_QUERY_STATUS_CODE**  \n  \n- **HTTP_QUERY_STATUS_TEXT**  \n  \n- **HTTP_QUERY_RAW_HEADERS**  \n  \n- **HTTP_QUERY_RAW_HEADERS_CRLF**  \n  \n##  <a name=\"chttpfile__queryinfostatuscode\"></a>  CHttpFile::QueryInfoStatusCode  \n Call this member function to get the status code associated with an HTTP request and place it in the supplied `dwStatusCode` parameter.  \n  \n```  \nBOOL QueryInfoStatusCode(DWORD& dwStatusCode) const;\n\n \n```  \n  \n### Parameters  \n `dwStatusCode`  \n A reference to a status code. Status codes indicate the success or failure of the requested event. See **Remarks** for a selection of status code descriptions.  \n  \n### Return Value  \n Nonzero if successful; otherwise 0. If the call fails, the Win32 function [GetLastError](http://msdn.microsoft.com/library/windows/desktop/ms679360) may be called to determine the cause of the error.  \n  \n### Remarks  \n Use this member function only after a successful call to [SendRequest](#chttpfile__sendrequest) or on a `CHttpFile` object successfully created by [OpenURL](../../mfc/reference/cinternetsession-class.md#cinternetsession__openurl).  \n  \n HTTP status codes fall into groups indicating the success or failure of the request. The following tables outline the status code groups and the most common HTTP status codes.  \n  \n|Group|Meaning|  \n|-----------|-------------|  \n|200-299|Success|  \n|300-399|Information|  \n|400-499|Request error|  \n|500-599|Server error|  \n  \n Common HTTP Status Codes:  \n  \n|Status code|Meaning|  \n|-----------------|-------------|  \n|200|URL located, transmission follows|  \n|400|Unintelligible request|  \n|404|Requested URL not found|  \n|405|Server does not support requested method|  \n|500|Unknown server error|  \n|503|Server capacity reached|  \n  \n##  <a name=\"chttpfile__sendrequest\"></a>  CHttpFile::SendRequest  \n Call this member function to send a request to an HTTP server.  \n  \n```  \nBOOL SendRequest(\n    LPCTSTR pstrHeaders = NULL,  \n    DWORD dwHeadersLen = 0,  \n    LPVOID lpOptional = NULL,  \n    DWORD dwOptionalLen = 0);\n\n \nBOOL SendRequest(\n    CString& strHeaders,  \n    LPVOID lpOptional = NULL,  \n    DWORD dwOptionalLen = 0);\n```  \n  \n### Parameters  \n `pstrHeaders`  \n A pointer to a string containing the name of the headers to send.  \n  \n `dwHeadersLen`  \n The length of the headers identified by `pstrHeaders`.  \n  \n `lpOptional`  \n Any optional data to send immediately after the request headers. This is generally used for **POST** and **PUT** operations. This can be **NULL** if there is no optional data to send.  \n  \n *dwOptionalLen*  \n The length of `lpOptional`.  \n  \n `strHeaders`  \n A string containing the name of the headers for the request being sent.  \n  \n### Return Value  \n Nonzero if successful; otherwise 0. If the call fails, determine the cause of the failure by examining the thrown [CInternetException](../../mfc/reference/cinternetexception-class.md) object.  \n  \n##  <a name=\"chttpfile__sendrequestex\"></a>  CHttpFile::SendRequestEx  \n Call this member function to send a request to an HTTP server.  \n  \n```  \nBOOL SendRequestEx(\n    DWORD dwTotalLen,  \n    DWORD dwFlags = HSR_INITIATE,  \n    DWORD_PTR dwContext = 1);\n\n \nBOOL SendRequestEx(\n    LPINTERNET_BUFFERS lpBuffIn,  \n    LPINTERNET_BUFFERS lpBuffOut,  \n    DWORD dwFlags = HSR_INITIATE,  \n    DWORD_PTR dwContext = 1);\n```  \n  \n### Parameters  \n *dwTotalLen*  \n Number of bytes to be sent in the request.  \n  \n `dwFlags`  \n Flags describing the operation. For a list of appropriate flags, see [HttpSendRequestEx](http://msdn.microsoft.com/library/windows/desktop/aa384318) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]*.*  \n  \n `dwContext`  \n The context identifier for the `CHttpFile` operation. See Remarks for more information about this parameter.  \n  \n `lpBuffIn`  \n Pointer to an initialized [INTERNET_BUFFERS](http://msdn.microsoft.com/library/windows/desktop/aa385132) that describes the input buffer used for the operation.  \n  \n *lpBuffOut*  \n Pointer to an initialized **INTERNET_BUFFERS** that describes the output buffer used for the operation.  \n  \n### Return Value  \n Nonzero if successful. If the call fails, determine the cause of the failure by examining the thrown [CInternetException](../../mfc/reference/cinternetexception-class.md) object.  \n  \n### Remarks  \n This function allows your application to send data using the [Write](../../mfc/reference/cinternetfile-class.md#cinternetfile__write) and [WriteString](../../mfc/reference/cinternetfile-class.md#cinternetfile__writestring) methods of `CInternetFile`. You must know the length of the data to send before calling either override of this function. The first override allows you to specify the length of data you'd like to send. The second override accepts pointers to **INTERNET_BUFFERS** structures, which can be used to describe the buffer in great detail.  \n  \n After content is written to the file, call [EndRequest](#chttpfile__endrequest) to end the operation.  \n  \n The default value for `dwContext` is sent by MFC to the `CHttpFile` object from the [CInternetSession](../../mfc/reference/cinternetsession-class.md) object that created the `CHttpFile` object. When you call [CInternetSession::OpenURL](../../mfc/reference/cinternetsession-class.md#cinternetsession__openurl) or [CHttpConnection](../../mfc/reference/chttpconnection-class.md) to construct a `CHttpFile` object, you can override the default to set the context identifier to a value of your choosing. The context identifier is returned to [CInternetSession::OnStatusCallback](../../mfc/reference/cinternetsession-class.md#cinternetsession__onstatuscallback) to provide status on the object with which it is identified. See the article [Internet First Steps: WinInet](../../mfc/wininet-basics.md) for more information about the context identifier.  \n  \n### Example  \n This code fragment sends the content of a string to a DLL named MFCISAPI.DLL on the LOCALHOST server. While this example uses only one call to `WriteString`, using multiple calls to send data in blocks is acceptable.  \n  \n [!code-cpp[NVC_MFCWinInet#9](../../mfc/codesnippet/cpp/chttpfile-class_1.cpp)]  \n  \n## See Also  \n [CInternetFile Class](../../mfc/reference/cinternetfile-class.md)   \n [Hierarchy Chart](../../mfc/hierarchy-chart.md)   \n [CInternetFile Class](../../mfc/reference/cinternetfile-class.md)   \n [CGopherFile Class](../../mfc/reference/cgopherfile-class.md)   \n [CHttpConnection Class](../../mfc/reference/chttpconnection-class.md)\n"}