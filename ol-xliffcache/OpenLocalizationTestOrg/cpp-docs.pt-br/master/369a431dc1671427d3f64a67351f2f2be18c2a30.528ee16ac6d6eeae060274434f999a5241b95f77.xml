{"nodes":[{"pos":[12,64],"content":"C++ Program Startup and Termination | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"C++ Program Startup and Termination | Microsoft Docs","pos":[0,52]}]},{"content":"C++ Program Startup and Termination","pos":[797,832]},{"content":"A C++ program performs the same operations as a C program does at program startup and at program termination, plus a few more outlined here.","pos":[833,973]},{"content":"Before the target environment calls the function <ph id=\"ph1\">`main`</ph>, and after it stores any constant initial values you specify in all objects that have static duration, the program executes any remaining constructors for such static objects.","pos":[980,1211],"source":"Before the target environment calls the function `main`, and after it stores any constant initial values you specify in all objects that have static duration, the program executes any remaining constructors for such static objects."},{"content":"The order of execution is not specified between translation units, but you can nevertheless assume that some <bpt id=\"p1\">[</bpt>iostreams<ept id=\"p1\">](../standard-library/iostreams-conventions.md)</ept> objects are properly initialized for use by these static constructors.","pos":[1212,1449],"source":" The order of execution is not specified between translation units, but you can nevertheless assume that some [iostreams](../standard-library/iostreams-conventions.md) objects are properly initialized for use by these static constructors."},{"content":"These control text streams are:","pos":[1450,1481]},{"pos":[1491,1555],"content":"<bpt id=\"p1\">[</bpt>cin<ept id=\"p1\">](../standard-library/iostream.md#cin)</ept> — for standard input.","source":"[cin](../standard-library/iostream.md#cin) — for standard input."},{"pos":[1565,1632],"content":"<bpt id=\"p1\">[</bpt>cout<ept id=\"p1\">](../standard-library/iostream.md#cout)</ept> — for standard output.","source":"[cout](../standard-library/iostream.md#cout) — for standard output."},{"pos":[1642,1726],"content":"<bpt id=\"p1\">[</bpt>cerr<ept id=\"p1\">](../standard-library/iostream.md#cerr)</ept> — for unbuffered standard error output.","source":"[cerr](../standard-library/iostream.md#cerr) — for unbuffered standard error output."},{"pos":[1736,1818],"content":"<bpt id=\"p1\">[</bpt>clog<ept id=\"p1\">](../standard-library/iostream.md#clog)</ept> — for buffered standard error output.","source":"[clog](../standard-library/iostream.md#clog) — for buffered standard error output."},{"content":"You can also use these objects within the destructors called for static objects, during program termination.","pos":[1825,1933]},{"content":"As with C, returning from <ph id=\"ph1\">`main`</ph> or calling <ph id=\"ph2\">`exit`</ph> calls all functions registered with <ph id=\"ph3\">`atexit`</ph> in reverse order of registry.","pos":[1940,2065],"source":"As with C, returning from `main` or calling `exit` calls all functions registered with `atexit` in reverse order of registry."},{"content":"An exception thrown from such a registered function calls <ph id=\"ph1\">`terminate`</ph>.","pos":[2066,2136],"source":" An exception thrown from such a registered function calls `terminate`."},{"content":"See Also","pos":[2145,2153]},{"content":"STL Overview","pos":[2158,2170]},{"content":"Thread Safety in the C++ Standard Library","pos":[2231,2272]}],"content":"---\ntitle: \"C++ Program Startup and Termination | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"Standard C++ Library, program startup and termination\"\n  - \"terminating execution\"\n  - \"Function Main procedures\"\n  - \"control text streams\"\n  - \"startup code, and C++ program termination\"\n  - \"main function, program startup\"\nms.assetid: f72c8f76-f507-4ddd-a270-7b60f4fed625\ncaps.latest.revision: 9\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# C++ Program Startup and Termination\nA C++ program performs the same operations as a C program does at program startup and at program termination, plus a few more outlined here.  \n  \n Before the target environment calls the function `main`, and after it stores any constant initial values you specify in all objects that have static duration, the program executes any remaining constructors for such static objects. The order of execution is not specified between translation units, but you can nevertheless assume that some [iostreams](../standard-library/iostreams-conventions.md) objects are properly initialized for use by these static constructors. These control text streams are:  \n  \n-   [cin](../standard-library/iostream.md#cin) — for standard input.  \n  \n-   [cout](../standard-library/iostream.md#cout) — for standard output.  \n  \n-   [cerr](../standard-library/iostream.md#cerr) — for unbuffered standard error output.  \n  \n-   [clog](../standard-library/iostream.md#clog) — for buffered standard error output.  \n  \n You can also use these objects within the destructors called for static objects, during program termination.  \n  \n As with C, returning from `main` or calling `exit` calls all functions registered with `atexit` in reverse order of registry. An exception thrown from such a registered function calls `terminate`.  \n  \n## See Also  \n [STL Overview](../standard-library/cpp-standard-library-overview.md)   \n [Thread Safety in the C++ Standard Library](../standard-library/thread-safety-in-the-cpp-standard-library.md)\n\n\n"}