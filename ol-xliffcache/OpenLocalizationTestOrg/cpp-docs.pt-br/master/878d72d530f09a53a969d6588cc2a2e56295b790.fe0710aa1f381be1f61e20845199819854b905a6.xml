{"nodes":[{"pos":[12,55],"content":"queue::size_type (STL-CLR) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"queue::size_type (STL-CLR) | Microsoft Docs","pos":[0,43]}]},{"content":"queue::size_type (STL/CLR)","pos":[638,664]},{"content":"The type of a signed distance between two element.","pos":[665,715]},{"content":"Syntax","pos":[724,730]},{"content":"Remarks","pos":[779,786]},{"content":"The type describes a non-negative element count.","pos":[790,838]},{"content":"Example","pos":[847,854]},{"content":"Requirements","pos":[1588,1600]},{"pos":[1604,1631],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> <ph id=\"ph1\">\\&lt;</ph>cliext/queue&gt;","source":"**Header:** \\<cliext/queue>"},{"pos":[1638,1659],"content":"<bpt id=\"p1\">**</bpt>Namespace:<ept id=\"p1\">**</ept> cliext","source":"**Namespace:** cliext"},{"content":"See Also","pos":[1668,1676]},{"content":"queue (STL/CLR)","pos":[1681,1696]},{"content":"queue::empty (STL/CLR)","pos":[1731,1753]}],"content":"---\ntitle: \"queue::size_type (STL-CLR) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"cliext::queue::size_type\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"size_type member [STL/CLR]\"\nms.assetid: 9b24c931-cc23-4d25-a29f-950ffff762ef\ncaps.latest.revision: 15\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# queue::size_type (STL/CLR)\nThe type of a signed distance between two element.  \n  \n## Syntax  \n  \n```  \ntypedef int size_type;  \n```  \n  \n## Remarks  \n The type describes a non-negative element count.  \n  \n## Example  \n  \n```  \n// cliext_queue_size_type.cpp   \n// compile with: /clr   \n#include <cliext/queue>   \n  \ntypedef cliext::queue<wchar_t> Myqueue;   \nint main()   \n    {   \n    Myqueue c1;   \n    c1.push(L'a');   \n    c1.push(L'b');   \n    c1.push(L'c');   \n  \n// display initial contents \" a b c\"   \n    for each (wchar_t elem in c1.get_container())   \n        System::Console::Write(\" {0}\", elem);   \n    System::Console::WriteLine();   \n  \n// compute positive difference   \n    Myqueue::size_type diff = c1.size();   \n    c1.pop();   \n    c1.pop();   \n    diff -= c1.size();   \n    System::Console::WriteLine(\"size difference = {0}\", diff);   \n    return (0);   \n    }  \n  \n```  \n  \n```Output  \n a b c  \nsize difference = 2  \n```  \n  \n## Requirements  \n **Header:** \\<cliext/queue>  \n  \n **Namespace:** cliext  \n  \n## See Also  \n [queue (STL/CLR)](../dotnet/queue-stl-clr.md)   \n [queue::empty (STL/CLR)](../dotnet/queue-empty-stl-clr.md)"}