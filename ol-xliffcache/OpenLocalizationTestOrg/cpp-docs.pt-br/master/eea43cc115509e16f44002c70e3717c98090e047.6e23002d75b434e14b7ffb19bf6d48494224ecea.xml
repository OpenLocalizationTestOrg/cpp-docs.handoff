{"nodes":[{"pos":[12,85],"content":"-Zm (Specify Precompiled Header Memory Allocation Limit) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"-Zm (Specify Precompiled Header Memory Allocation Limit) | Microsoft Docs","pos":[0,73]}]},{"content":"/Zm (Specify Precompiled Header Memory Allocation Limit)","pos":[1031,1087]},{"content":"Determines the amount of memory that the compiler allocates to construct precompiled headers.","pos":[1088,1181]},{"content":"Syntax","pos":[1190,1196]},{"content":"Arguments","pos":[1232,1241]},{"content":"A scaling factor that determines the amount of memory that the compiler uses to construct precompiled headers.","pos":[1257,1367]},{"content":"The <ph id=\"ph1\">`factor`</ph> argument is a percentage of the default size of a compiler-defined work buffer.","pos":[1374,1466],"source":"The `factor` argument is a percentage of the default size of a compiler-defined work buffer."},{"content":"The default value of <ph id=\"ph1\">`factor`</ph> is 100 (percent), but you can specify larger or smaller amounts.","pos":[1467,1561],"source":" The default value of `factor` is 100 (percent), but you can specify larger or smaller amounts."},{"content":"Remarks","pos":[1570,1577]},{"content":"In earlier versions of Visual C++, the compiler used several discrete heaps, and each had a finite limit.","pos":[1581,1686]},{"content":"Currently, the compiler dynamically grows the heaps as necessary up to a total heap size limit, and requires a fixed-size buffer only to construct precompiled headers.","pos":[1687,1854]},{"content":"Consequently, the <bpt id=\"p1\">**</bpt>/Zm<ept id=\"p1\">**</ept> compiler option is rarely necessary.","pos":[1855,1917],"source":" Consequently, the **/Zm** compiler option is rarely necessary."},{"content":"If the compiler runs out of heap space and emits the <bpt id=\"p1\">[</bpt>C1060<ept id=\"p1\">](../../error-messages/compiler-errors-1/fatal-error-c1060.md)</ept> error message when you use the <bpt id=\"p2\">**</bpt>/Zm<ept id=\"p2\">**</ept> compiler option, you might have reserved too much memory.","pos":[1924,2142],"source":"If the compiler runs out of heap space and emits the [C1060](../../error-messages/compiler-errors-1/fatal-error-c1060.md) error message when you use the **/Zm** compiler option, you might have reserved too much memory."},{"content":"Consider removing the <bpt id=\"p1\">**</bpt>/Zm<ept id=\"p1\">**</ept> option.","pos":[2143,2180],"source":" Consider removing the **/Zm** option."},{"content":"If the compiler emits the <bpt id=\"p1\">[</bpt>C1076<ept id=\"p1\">](../../error-messages/compiler-errors-1/fatal-error-c1076.md)</ept> error message, an accompanying <bpt id=\"p2\">[</bpt>C3859<ept id=\"p2\">](../../error-messages/compiler-errors-2/compiler-error-c3859.md)</ept> message specifies the <ph id=\"ph1\">`factor`</ph> argument to use when you recompile by using the <bpt id=\"p3\">**</bpt>/Zm<ept id=\"p3\">**</ept> compiler option.","pos":[2181,2482],"source":" If the compiler emits the [C1076](../../error-messages/compiler-errors-1/fatal-error-c1076.md) error message, an accompanying [C3859](../../error-messages/compiler-errors-2/compiler-error-c3859.md) message specifies the `factor` argument to use when you recompile by using the **/Zm** compiler option."},{"pos":[2489,2650],"content":"The following table shows how the <ph id=\"ph1\">`factor`</ph> argument affects the memory allocation limit if you assume the size of the default precompiled header buffer is 75 MB.","source":"The following table shows how the `factor` argument affects the memory allocation limit if you assume the size of the default precompiled header buffer is 75 MB."},{"pos":[2657,2665],"content":"Value of"},{"content":"Memory allocation limit","pos":[2675,2698]},{"content":"10","pos":[2761,2763]},{"content":"7.5 MB","pos":[2764,2770]},{"content":"100","pos":[2775,2778]},{"content":"75 MB","pos":[2779,2784]},{"content":"200","pos":[2789,2792]},{"content":"150 MB","pos":[2793,2799]},{"content":"1000","pos":[2804,2808]},{"content":"750 MB","pos":[2809,2815]},{"content":"2000","pos":[2820,2824]},{"content":"1500 MB","pos":[2825,2832]},{"content":"Other Ways to Set the Memory Allocation Limit","pos":[2842,2887]},{"content":"To set the /Zm compiler option in the Visual Studio development environment","pos":[2898,2973]},{"content":"Open the project's <bpt id=\"p1\">**</bpt>Property Pages<ept id=\"p1\">**</ept> dialog box.","pos":[2983,3032],"source":"Open the project's **Property Pages** dialog box."},{"content":"For details, see <bpt id=\"p1\">[</bpt>Working with Project Properties<ept id=\"p1\">](../../ide/working-with-project-properties.md)</ept>.","pos":[3033,3130],"source":" For details, see [Working with Project Properties](../../ide/working-with-project-properties.md)."},{"pos":[3140,3229],"content":"In the navigation pane, select <bpt id=\"p1\">**</bpt>Configuration Properties<ept id=\"p1\">**</ept>, <bpt id=\"p2\">**</bpt>C/C++<ept id=\"p2\">**</ept>, <bpt id=\"p3\">**</bpt>Command Line<ept id=\"p3\">**</ept>.","source":"In the navigation pane, select **Configuration Properties**, **C/C++**, **Command Line**."},{"pos":[3239,3307],"content":"Enter the <bpt id=\"p1\">**</bpt>/Zm<ept id=\"p1\">**</ept> compiler option in the <bpt id=\"p2\">**</bpt>Additional Options<ept id=\"p2\">**</ept> box.","source":"Enter the **/Zm** compiler option in the **Additional Options** box."},{"content":"To set the /Zm compiler option programmatically","pos":[3318,3365]},{"content":"See &lt;xref:Microsoft.VisualStudio.VCProjectEngine.VCCLCompilerTool.AdditionalOptions%2A&gt;.","pos":[3375,3463],"source":"See <xref:Microsoft.VisualStudio.VCProjectEngine.VCCLCompilerTool.AdditionalOptions%2A>."},{"content":"See Also","pos":[3472,3480]},{"content":"Compiler Options","pos":[3485,3501]},{"content":"Setting Compiler Options","pos":[3551,3575]}],"content":"---\ntitle: \"-Zm (Specify Precompiled Header Memory Allocation Limit) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"/zm\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"PCH files, memory allocation limit\"\n  - \"Zm compiler option [C++]\"\n  - \"/Zm compiler option [C++]\"\n  - \"precompiled header files, memory allocation limit\"\n  - \"Specify Precompiled Header Memory Allocation Limit compiler option\"\n  - \"cl.exe compiler, memory allocation limit\"\n  - \".pch files, memory allocation limit\"\n  - \"memory allocation, Memory Allocation Limit compiler option\"\n  - \"-Zm compiler option [C++]\"\nms.assetid: 94c77d5e-6672-46a7-92e0-3f69e277727d\ncaps.latest.revision: 16\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# /Zm (Specify Precompiled Header Memory Allocation Limit)\nDetermines the amount of memory that the compiler allocates to construct precompiled headers.  \n  \n## Syntax  \n  \n```  \n/Zmfactor  \n```  \n  \n## Arguments  \n `factor`  \n A scaling factor that determines the amount of memory that the compiler uses to construct precompiled headers.  \n  \n The `factor` argument is a percentage of the default size of a compiler-defined work buffer. The default value of `factor` is 100 (percent), but you can specify larger or smaller amounts.  \n  \n## Remarks  \n In earlier versions of Visual C++, the compiler used several discrete heaps, and each had a finite limit. Currently, the compiler dynamically grows the heaps as necessary up to a total heap size limit, and requires a fixed-size buffer only to construct precompiled headers. Consequently, the **/Zm** compiler option is rarely necessary.  \n  \n If the compiler runs out of heap space and emits the [C1060](../../error-messages/compiler-errors-1/fatal-error-c1060.md) error message when you use the **/Zm** compiler option, you might have reserved too much memory. Consider removing the **/Zm** option. If the compiler emits the [C1076](../../error-messages/compiler-errors-1/fatal-error-c1076.md) error message, an accompanying [C3859](../../error-messages/compiler-errors-2/compiler-error-c3859.md) message specifies the `factor` argument to use when you recompile by using the **/Zm** compiler option.  \n  \n The following table shows how the `factor` argument affects the memory allocation limit if you assume the size of the default precompiled header buffer is 75 MB.  \n  \n|Value of `factor`|Memory allocation limit|  \n|-----------------------|-----------------------------|  \n|10|7.5 MB|  \n|100|75 MB|  \n|200|150 MB|  \n|1000|750 MB|  \n|2000|1500 MB|  \n  \n## Other Ways to Set the Memory Allocation Limit  \n  \n#### To set the /Zm compiler option in the Visual Studio development environment  \n  \n1.  Open the project's **Property Pages** dialog box. For details, see [Working with Project Properties](../../ide/working-with-project-properties.md).  \n  \n2.  In the navigation pane, select **Configuration Properties**, **C/C++**, **Command Line**.  \n  \n3.  Enter the **/Zm** compiler option in the **Additional Options** box.  \n  \n#### To set the /Zm compiler option programmatically  \n  \n-   See <xref:Microsoft.VisualStudio.VCProjectEngine.VCCLCompilerTool.AdditionalOptions%2A>.  \n  \n## See Also  \n [Compiler Options](../../build/reference/compiler-options.md)   \n [Setting Compiler Options](../../build/reference/setting-compiler-options.md)"}