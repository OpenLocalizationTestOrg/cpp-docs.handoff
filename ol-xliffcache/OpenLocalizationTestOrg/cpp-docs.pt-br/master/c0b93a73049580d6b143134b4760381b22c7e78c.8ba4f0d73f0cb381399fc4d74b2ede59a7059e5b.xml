{"nodes":[{"pos":[12,50],"content":"Exceptions in C++-CLI | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Exceptions in C++-CLI | Microsoft Docs","pos":[0,38]}]},{"content":"Exceptions in C++/CLI","pos":[530,551]},{"pos":[552,745],"content":"The articles in this section of the documentation explain exception handling in <ph id=\"ph1\">[!INCLUDE[cppcli](../build/reference/includes/cppcli_md.md)]</ph> and how it differs from standard exception handling.","source":"The articles in this section of the documentation explain exception handling in [!INCLUDE[cppcli](../build/reference/includes/cppcli_md.md)] and how it differs from standard exception handling."},{"content":"Related Articles","pos":[754,770]},{"content":"Title","pos":[777,782]},{"content":"Description","pos":[783,794]},{"content":"Basic Concepts in Using Managed Exceptions","pos":[834,876]},{"content":"Discusses exception handling in managed applications.","pos":[935,988]},{"content":"Differences in Exception Handling Behavior Under /CLR","pos":[994,1047]},{"pos":[1116,1265],"content":"Discusses the differences between standard exception handling and exception handling in <ph id=\"ph1\">[!INCLUDE[cppcli](../build/reference/includes/cppcli_md.md)]</ph>.","source":"Discusses the differences between standard exception handling and exception handling in [!INCLUDE[cppcli](../build/reference/includes/cppcli_md.md)]."},{"content":"finally","pos":[1271,1278]},{"pos":[1302,1406],"content":"Describes the <ph id=\"ph1\">`finally`</ph> block that's used to clean up resources that are left after an exception occurs.","source":"Describes the `finally` block that's used to clean up resources that are left after an exception occurs."},{"content":"How to: Catch Exceptions in Native Code Thrown from MSIL","pos":[1412,1468]},{"pos":[1540,1648],"content":"Demonstrates how to use <ph id=\"ph1\">`__try`</ph> and <ph id=\"ph2\">`__except`</ph> to catch exceptions in native code that are thrown from MSIL.","source":"Demonstrates how to use `__try` and `__except` to catch exceptions in native code that are thrown from MSIL."},{"content":"How to: Define and Install a Global Exception Handler","pos":[1654,1707]},{"content":"Demonstrates how to capture unhandled exceptions.","pos":[1776,1825]},{"content":".NET Programming with C++/CLI (Visual C++)","pos":[1831,1873]},{"content":"The top-level article for .NET programming in the Visual C++ documentation.","pos":[1932,2007]}],"content":"---\ntitle: \"Exceptions in C++-CLI | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"C++\"\nms.assetid: 0010e205-4487-49a9-a8db-4a8ec63cfc83\ncaps.latest.revision: 5\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Exceptions in C++/CLI\nThe articles in this section of the documentation explain exception handling in [!INCLUDE[cppcli](../build/reference/includes/cppcli_md.md)] and how it differs from standard exception handling.  \n  \n## Related Articles  \n  \n|Title|Description|  \n|-----------|-----------------|  \n|[Basic Concepts in Using Managed Exceptions](../dotnet/basic-concepts-in-using-managed-exceptions.md)|Discusses exception handling in managed applications.|  \n|[Differences in Exception Handling Behavior Under /CLR](../dotnet/differences-in-exception-handling-behavior-under-clr.md)|Discusses the differences between standard exception handling and exception handling in [!INCLUDE[cppcli](../build/reference/includes/cppcli_md.md)].|  \n|[finally](../dotnet/finally.md)|Describes the `finally` block that's used to clean up resources that are left after an exception occurs.|  \n|[How to: Catch Exceptions in Native Code Thrown from MSIL](../dotnet/how-to-catch-exceptions-in-native-code-thrown-from-msil.md)|Demonstrates how to use `__try` and `__except` to catch exceptions in native code that are thrown from MSIL.|  \n|[How to: Define and Install a Global Exception Handler](../dotnet/how-to-define-and-install-a-global-exception-handler.md)|Demonstrates how to capture unhandled exceptions.|  \n|[.NET Programming with C++/CLI (Visual C++)](../dotnet/dotnet-programming-with-cpp-cli-visual-cpp.md)|The top-level article for .NET programming in the Visual C++ documentation.|"}