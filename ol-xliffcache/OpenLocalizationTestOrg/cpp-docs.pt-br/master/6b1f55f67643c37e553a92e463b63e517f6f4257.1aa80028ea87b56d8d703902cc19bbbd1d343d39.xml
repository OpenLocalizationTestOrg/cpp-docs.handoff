{"nodes":[{"pos":[12,63],"content":"queue::generic_container (STL-CLR) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"queue::generic_container (STL-CLR) | Microsoft Docs","pos":[0,51]}]},{"content":"queue::generic_container (STL/CLR)","pos":[662,696]},{"content":"The type of the generic interface for the container adapter.","pos":[697,757]},{"content":"Syntax","pos":[766,772]},{"content":"Remarks","pos":[873,880]},{"content":"The type describes the generic interface for this template container adapter class.","pos":[884,967]},{"content":"Example","pos":[976,983]},{"content":"Requirements","pos":[2159,2171]},{"pos":[2175,2202],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> <ph id=\"ph1\">\\&lt;</ph>cliext/queue&gt;","source":"**Header:** \\<cliext/queue>"},{"pos":[2209,2230],"content":"<bpt id=\"p1\">**</bpt>Namespace:<ept id=\"p1\">**</ept> cliext","source":"**Namespace:** cliext"},{"content":"See Also","pos":[2239,2247]},{"content":"queue (STL/CLR)","pos":[2252,2267]}],"content":"---\ntitle: \"queue::generic_container (STL-CLR) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"cliext::queue::generic_container\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"generic_container member [STL/CLR]\"\nms.assetid: 58e07f5e-a854-48fa-b505-9bb82c1cac69\ncaps.latest.revision: 15\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# queue::generic_container (STL/CLR)\nThe type of the generic interface for the container adapter.  \n  \n## Syntax  \n  \n```  \ntypedef Microsoft::VisualC::StlClr::IQueue<Value>  \n    generic_container;  \n```  \n  \n## Remarks  \n The type describes the generic interface for this template container adapter class.  \n  \n## Example  \n  \n```  \n// cliext_queue_generic_container.cpp   \n// compile with: /clr   \n#include <cliext/queue>   \n  \ntypedef cliext::queue<wchar_t> Myqueue;   \nint main()   \n    {   \n    Myqueue c1;   \n    c1.push(L'a');   \n    c1.push(L'b');   \n    c1.push(L'c');   \n  \n// display contents \" a b c\"   \n    for each (wchar_t elem in c1.get_container())   \n        System::Console::Write(\" {0}\", elem);   \n    System::Console::WriteLine();   \n  \n// construct a generic container   \n    Myqueue::generic_container^ gc1 = %c1;   \n    for each (wchar_t elem in gc1->get_container())   \n        System::Console::Write(\" {0}\", elem);   \n    System::Console::WriteLine();   \n  \n// modify generic and display original   \n    gc1->push(L'd');   \n    for each (wchar_t elem in c1.get_container())   \n        System::Console::Write(\" {0}\", elem);   \n    System::Console::WriteLine();   \n  \n// modify original and display generic   \n    c1.push(L'e');   \n    for each (wchar_t elem in gc1->get_container())   \n        System::Console::Write(\" {0}\", elem);   \n    System::Console::WriteLine();   \n    return (0);   \n    }  \n  \n```  \n  \n```Output  \na b c  \na b c  \na b c d  \na b c d e  \n```  \n  \n## Requirements  \n **Header:** \\<cliext/queue>  \n  \n **Namespace:** cliext  \n  \n## See Also  \n [queue (STL/CLR)](../dotnet/queue-stl-clr.md)"}