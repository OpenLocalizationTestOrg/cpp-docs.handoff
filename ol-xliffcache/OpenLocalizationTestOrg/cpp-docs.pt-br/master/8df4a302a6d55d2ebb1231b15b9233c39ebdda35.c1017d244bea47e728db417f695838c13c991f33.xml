{"nodes":[{"pos":[12,46],"content":"CSocketAddr Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"CSocketAddr Class | Microsoft Docs","pos":[0,34]}]},{"content":"CSocketAddr Class","pos":[652,669]},{"content":"This class provides methods for converting host names to host addresses, supporting both IPv4 and IPV6 formats.","pos":[670,781]},{"content":"Syntax","pos":[790,796]},{"content":"Members","pos":[836,843]},{"content":"Public Constructors","pos":[853,872]},{"content":"Name","pos":[879,883]},{"content":"Description","pos":[884,895]},{"content":"CSocketAddr::CSocketAddr","pos":[934,958]},{"content":"The constructor.","pos":[987,1003]},{"content":"Public Methods","pos":[1014,1028]},{"content":"Name","pos":[1035,1039]},{"content":"Description","pos":[1040,1051]},{"content":"CSocketAddr::FindAddr","pos":[1090,1111]},{"content":"Call this method to convert the provided host name to the host address.","pos":[1137,1208]},{"content":"CSocketAddr::FindINET4Addr","pos":[1214,1240]},{"content":"Call this method to convert the IPv4 host name to the host address.","pos":[1271,1338]},{"content":"CSocketAddr::FindINET6Addr","pos":[1344,1370]},{"content":"Call this method to convert the IPv6 host name to the host address.","pos":[1401,1468]},{"content":"CSocketAddr::GetAddrInfo","pos":[1474,1498]},{"pos":[1527,1611],"content":"Call this method to return a pointer to a specific element in the <bpt id=\"p1\">**</bpt>addrinfo<ept id=\"p1\">**</ept> list.","source":"Call this method to return a pointer to a specific element in the **addrinfo** list."},{"content":"CSocketAddr::GetAddrInfoList","pos":[1617,1645]},{"pos":[1678,1740],"content":"Call this method to return a pointer to the <bpt id=\"p1\">**</bpt>addrinfo<ept id=\"p1\">**</ept> list.","source":"Call this method to return a pointer to the **addrinfo** list."},{"content":"Remarks","pos":[1750,1757]},{"content":"This class provides an IP version agnostic approach for looking up network addresses for use with Windows sockets API functions and socket wrappers in libraries.","pos":[1761,1922]},{"pos":[1929,2099],"content":"The members of this class that are used to look up network addresses use the Win32 API function <bpt id=\"p1\">[</bpt>getaddrinfo<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms738520)</ept>.","source":"The members of this class that are used to look up network addresses use the Win32 API function [getaddrinfo](http://msdn.microsoft.com/library/windows/desktop/ms738520)."},{"content":"This class supports both IPv4 andIPv6 network addresses.","pos":[2106,2162]},{"content":"Requirements","pos":[2171,2183]},{"pos":[2187,2210],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> atlsocket.h","source":"**Header:** atlsocket.h"},{"pos":[2261,2285],"content":"CSocketAddr::CSocketAddr"},{"content":"The constructor.","pos":[2289,2305]},{"content":"Remarks","pos":[2343,2350]},{"pos":[2354,2468],"content":"Creates a new <ph id=\"ph1\">`CSocketAddr`</ph> object and initializes the linked list containing response information about the host.","source":"Creates a new `CSocketAddr` object and initializes the linked list containing response information about the host."},{"pos":[2516,2537],"content":"CSocketAddr::FindAddr"},{"content":"Call this method to convert the provided host name to the host address.","pos":[2541,2612]},{"content":"Parameters","pos":[2908,2918]},{"content":"The host name or dotted IP address.","pos":[2934,2969]},{"content":"szPortOrServiceName","pos":[2977,2996]},{"content":"The port number or name of service on host.","pos":[3001,3044]},{"content":"The port number.","pos":[3064,3080]},{"content":"0 or combination of AI_PASSIVE, AI_CANONNAME or AI_NUMERICHOST.","pos":[3098,3161]},{"content":"addr_family","pos":[3169,3180]},{"content":"Address family (such as PF_INET).","pos":[3185,3218]},{"content":"Socket type (such as SOCK_STREAM).","pos":[3240,3274]},{"content":"ai_proto","pos":[3282,3290]},{"content":"Protocol (such as IPPROTO_IP or IPPROTO_IPV6).","pos":[3295,3341]},{"content":"Return Value","pos":[3351,3363]},{"content":"Returns zero if the address is calculated successfully.","pos":[3367,3422]},{"content":"Returns a nonzero Windows Socket error code on failure.","pos":[3423,3478]},{"content":"If successful, the calculated address is stored in a linked list that may be referenced using <ph id=\"ph1\">`CSocketAddr::GetAddrInfoList`</ph> and <ph id=\"ph2\">`CSocketAddr::GetAddrInfo`</ph>.","pos":[3479,3635],"source":" If successful, the calculated address is stored in a linked list that may be referenced using `CSocketAddr::GetAddrInfoList` and `CSocketAddr::GetAddrInfo`."},{"content":"Remarks","pos":[3645,3652]},{"content":"The host name parameter may be in either IPv4 or IPv6 format.","pos":[3656,3717]},{"content":"This method calls the Win32 API function <bpt id=\"p1\">[</bpt>getaddrinfo<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms738520)</ept> to perform the conversion.","pos":[3718,3859],"source":" This method calls the Win32 API function [getaddrinfo](http://msdn.microsoft.com/library/windows/desktop/ms738520) to perform the conversion."},{"pos":[3912,3938],"content":"CSocketAddr::FindINET4Addr"},{"content":"Call this method to convert the IPv4 host name to the host address.","pos":[3942,4009]},{"content":"Parameters","pos":[4128,4138]},{"content":"The host name or dotted IP address.","pos":[4154,4189]},{"content":"The port number.","pos":[4209,4225]},{"content":"0 or combination of AI_PASSIVE, AI_CANONNAME or AI_NUMERICHOST.","pos":[4243,4306]},{"content":"Socket type (such as SOCK_STREAM).","pos":[4328,4362]},{"content":"Return Value","pos":[4372,4384]},{"content":"Returns zero if the address is calculated successfully.","pos":[4388,4443]},{"content":"Returns a nonzero Windows Socket error code on failure.","pos":[4444,4499]},{"content":"If successful, the calculated address is stored in a linked list that may be referenced using <ph id=\"ph1\">`CSocketAddr::GetAddrInfoList`</ph> and <ph id=\"ph2\">`CSocketAddr::GetAddrInfo`</ph>.","pos":[4500,4656],"source":" If successful, the calculated address is stored in a linked list that may be referenced using `CSocketAddr::GetAddrInfoList` and `CSocketAddr::GetAddrInfo`."},{"content":"Remarks","pos":[4666,4673]},{"pos":[4677,4818],"content":"This method calls the Win32 API function <bpt id=\"p1\">[</bpt>getaddrinfo<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms738520)</ept> to perform the conversion.","source":"This method calls the Win32 API function [getaddrinfo](http://msdn.microsoft.com/library/windows/desktop/ms738520) to perform the conversion."},{"pos":[4871,4897],"content":"CSocketAddr::FindINET6Addr"},{"content":"Call this method to convert the IPv6 host name to the host address.","pos":[4901,4968]},{"content":"Parameters","pos":[5087,5097]},{"content":"The host name or dotted IP address.","pos":[5113,5148]},{"content":"The port number.","pos":[5168,5184]},{"content":"0 or combination of AI_PASSIVE, AI_CANONNAME or AI_NUMERICHOST.","pos":[5202,5265]},{"content":"Socket type (such as SOCK_STREAM).","pos":[5287,5321]},{"content":"Return Value","pos":[5331,5343]},{"content":"Returns zero if the address is calculated successfully.","pos":[5347,5402]},{"content":"Returns a nonzero Windows Socket error code on failure.","pos":[5403,5458]},{"content":"If successful, the calculated address is stored in a linked list that may be referenced using <ph id=\"ph1\">`CSocketAddr::GetAddrInfoList`</ph> and <ph id=\"ph2\">`CSocketAddr::GetAddrInfo`</ph>.","pos":[5459,5615],"source":" If successful, the calculated address is stored in a linked list that may be referenced using `CSocketAddr::GetAddrInfoList` and `CSocketAddr::GetAddrInfo`."},{"content":"Remarks","pos":[5625,5632]},{"pos":[5636,5777],"content":"This method calls the Win32 API function <bpt id=\"p1\">[</bpt>getaddrinfo<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms738520)</ept> to perform the conversion.","source":"This method calls the Win32 API function [getaddrinfo](http://msdn.microsoft.com/library/windows/desktop/ms738520) to perform the conversion."},{"pos":[5828,5852],"content":"CSocketAddr::GetAddrInfo"},{"pos":[5856,5940],"content":"Call this method to return a pointer to a specific element in the <bpt id=\"p1\">**</bpt>addrinfo<ept id=\"p1\">**</ept> list.","source":"Call this method to return a pointer to a specific element in the **addrinfo** list."},{"content":"Parameters","pos":[6016,6026]},{"content":"A reference to a specific element in the <bpt id=\"p1\">[</bpt>addrinfo<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms737530)</ept> list.","pos":[6042,6159],"source":" A reference to a specific element in the [addrinfo](http://msdn.microsoft.com/library/windows/desktop/ms737530) list."},{"content":"Return Value","pos":[6169,6181]},{"pos":[6185,6322],"content":"Returns a pointer to the <bpt id=\"p1\">**</bpt>addrinfo<ept id=\"p1\">**</ept> structure referenced by <ph id=\"ph1\">`nIndex`</ph> in the linked list containing response information about the host.","source":"Returns a pointer to the **addrinfo** structure referenced by `nIndex` in the linked list containing response information about the host."},{"pos":[6377,6405],"content":"CSocketAddr::GetAddrInfoList"},{"pos":[6409,6471],"content":"Call this method to return a pointer to the <bpt id=\"p1\">**</bpt>addrinfo<ept id=\"p1\">**</ept> list.","source":"Call this method to return a pointer to the **addrinfo** list."},{"content":"Return Value","pos":[6535,6547]},{"content":"Pointer to a linked list of one or more <ph id=\"ph1\">`addrinfo`</ph> structures containing response information about the host.","pos":[6551,6660],"source":"Pointer to a linked list of one or more `addrinfo` structures containing response information about the host."},{"content":"For more information about the <ph id=\"ph1\">`addrinfo`</ph> structure, see the \"addrinfo\" article in the <bpt id=\"p1\">[</bpt>MSDN Library<ept id=\"p1\">](http://go.microsoft.com/fwlink/linkid=556)</ept>","pos":[6661,6805],"source":" For more information about the `addrinfo` structure, see the \"addrinfo\" article in the [MSDN Library](http://go.microsoft.com/fwlink/linkid=556)"},{"content":"See Also","pos":[6814,6822]},{"content":"Class Overview","pos":[6827,6841]}],"content":"---\ntitle: \"CSocketAddr Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"CSocketAddr\"\n  - \"ATL.CSocketAddr\"\n  - \"ATL::CSocketAddr\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"CSocketAddr class\"\nms.assetid: 2fb2d8a7-899e-4a36-a342-cc9f4fcdd68c\ncaps.latest.revision: 19\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# CSocketAddr Class\nThis class provides methods for converting host names to host addresses, supporting both IPv4 and IPV6 formats.  \n  \n## Syntax  \n  \n```\nclass CSocketAddr\n```  \n  \n## Members  \n  \n### Public Constructors  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CSocketAddr::CSocketAddr](#csocketaddr__csocketaddr)|The constructor.|  \n  \n### Public Methods  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CSocketAddr::FindAddr](#csocketaddr__findaddr)|Call this method to convert the provided host name to the host address.|  \n|[CSocketAddr::FindINET4Addr](#csocketaddr__findinet4addr)|Call this method to convert the IPv4 host name to the host address.|  \n|[CSocketAddr::FindINET6Addr](#csocketaddr__findinet6addr)|Call this method to convert the IPv6 host name to the host address.|  \n|[CSocketAddr::GetAddrInfo](#csocketaddr__getaddrinfo)|Call this method to return a pointer to a specific element in the **addrinfo** list.|  \n|[CSocketAddr::GetAddrInfoList](#csocketaddr__getaddrinfolist)|Call this method to return a pointer to the **addrinfo** list.|  \n  \n## Remarks  \n This class provides an IP version agnostic approach for looking up network addresses for use with Windows sockets API functions and socket wrappers in libraries.  \n  \n The members of this class that are used to look up network addresses use the Win32 API function [getaddrinfo](http://msdn.microsoft.com/library/windows/desktop/ms738520).  \n  \n This class supports both IPv4 andIPv6 network addresses.  \n  \n## Requirements  \n **Header:** atlsocket.h  \n  \n##  <a name=\"csocketaddr__csocketaddr\"></a>  CSocketAddr::CSocketAddr  \n The constructor.  \n  \n```\nCSocketAddr();\n```  \n  \n### Remarks  \n Creates a new `CSocketAddr` object and initializes the linked list containing response information about the host.  \n  \n##  <a name=\"csocketaddr__findaddr\"></a>  CSocketAddr::FindAddr  \n Call this method to convert the provided host name to the host address.  \n  \n```\nint FindAddr(const char *szHost,\n    const char *szPortOrServiceName,\n    int flags,\n    int addr_family,\n    int sock_type,\n    int ai_proto);\n\n    int FindAddr(const char *szHost,\n    int nPortNo,\n    int flags,\n    int addr_family,\n    int sock_type,\n    int ai_proto);\n```  \n  \n### Parameters  \n `szHost`  \n The host name or dotted IP address.  \n  \n *szPortOrServiceName*  \n The port number or name of service on host.  \n  \n `nPortNo`  \n The port number.  \n  \n `flags`  \n 0 or combination of AI_PASSIVE, AI_CANONNAME or AI_NUMERICHOST.  \n  \n *addr_family*  \n Address family (such as PF_INET).  \n  \n `sock_type`  \n Socket type (such as SOCK_STREAM).  \n  \n *ai_proto*  \n Protocol (such as IPPROTO_IP or IPPROTO_IPV6).  \n  \n### Return Value  \n Returns zero if the address is calculated successfully. Returns a nonzero Windows Socket error code on failure. If successful, the calculated address is stored in a linked list that may be referenced using `CSocketAddr::GetAddrInfoList` and `CSocketAddr::GetAddrInfo`.  \n  \n### Remarks  \n The host name parameter may be in either IPv4 or IPv6 format. This method calls the Win32 API function [getaddrinfo](http://msdn.microsoft.com/library/windows/desktop/ms738520) to perform the conversion.  \n  \n##  <a name=\"csocketaddr__findinet4addr\"></a>  CSocketAddr::FindINET4Addr  \n Call this method to convert the IPv4 host name to the host address.  \n  \n```\nint FindINET4Addr(\n    const char *szHost,\n    int nPortNo,\n    int flags,\n    int sock_type,);\n```  \n  \n### Parameters  \n `szHost`  \n The host name or dotted IP address.  \n  \n `nPortNo`  \n The port number.  \n  \n `flags`  \n 0 or combination of AI_PASSIVE, AI_CANONNAME or AI_NUMERICHOST.  \n  \n `sock_type`  \n Socket type (such as SOCK_STREAM).  \n  \n### Return Value  \n Returns zero if the address is calculated successfully. Returns a nonzero Windows Socket error code on failure. If successful, the calculated address is stored in a linked list that may be referenced using `CSocketAddr::GetAddrInfoList` and `CSocketAddr::GetAddrInfo`.  \n  \n### Remarks  \n This method calls the Win32 API function [getaddrinfo](http://msdn.microsoft.com/library/windows/desktop/ms738520) to perform the conversion.  \n  \n##  <a name=\"csocketaddr__findinet6addr\"></a>  CSocketAddr::FindINET6Addr  \n Call this method to convert the IPv6 host name to the host address.  \n  \n```\nint FindINET6Addr(\n    const char *szHost,\n    int nPortNo,\n    int flags,\n    int sock_type,);\n```  \n  \n### Parameters  \n `szHost`  \n The host name or dotted IP address.  \n  \n `nPortNo`  \n The port number.  \n  \n `flags`  \n 0 or combination of AI_PASSIVE, AI_CANONNAME or AI_NUMERICHOST.  \n  \n `sock_type`  \n Socket type (such as SOCK_STREAM).  \n  \n### Return Value  \n Returns zero if the address is calculated successfully. Returns a nonzero Windows Socket error code on failure. If successful, the calculated address is stored in a linked list that may be referenced using `CSocketAddr::GetAddrInfoList` and `CSocketAddr::GetAddrInfo`.  \n  \n### Remarks  \n This method calls the Win32 API function [getaddrinfo](http://msdn.microsoft.com/library/windows/desktop/ms738520) to perform the conversion.  \n  \n##  <a name=\"csocketaddr__getaddrinfo\"></a>  CSocketAddr::GetAddrInfo  \n Call this method to return a pointer to a specific element in the **addrinfo** list.  \n  \n```\naddrinfo* const GetAddrInfo(int   nIndex = 0) const;\n```  \n  \n### Parameters  \n `nIndex`  \n A reference to a specific element in the [addrinfo](http://msdn.microsoft.com/library/windows/desktop/ms737530) list.  \n  \n### Return Value  \n Returns a pointer to the **addrinfo** structure referenced by `nIndex` in the linked list containing response information about the host.  \n  \n##  <a name=\"csocketaddr__getaddrinfolist\"></a>  CSocketAddr::GetAddrInfoList  \n Call this method to return a pointer to the **addrinfo** list.  \n  \n```\naddrinfo* const GetAddrInfoList() const;\n```  \n  \n### Return Value  \n Pointer to a linked list of one or more `addrinfo` structures containing response information about the host. For more information about the `addrinfo` structure, see the \"addrinfo\" article in the [MSDN Library](http://go.microsoft.com/fwlink/linkid=556)  \n  \n## See Also  \n [Class Overview](../../atl/atl-class-overview.md)\n"}