{"nodes":[{"pos":[12,61],"content":"hash_set::bucket_count (STL-CLR) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"hash_set::bucket_count (STL-CLR) | Microsoft Docs","pos":[0,49]}]},{"content":"hash_set::bucket_count (STL/CLR)","pos":[653,685]},{"content":"Counts the number of buckets.","pos":[686,715]},{"content":"Syntax","pos":[724,730]},{"content":"Remarks","pos":[776,783]},{"content":"The member functions returns the current number of buckets.","pos":[787,846]},{"content":"You use it to determine the size of the hash table.","pos":[847,898]},{"content":"Example","pos":[907,914]},{"content":"Requirements","pos":[2646,2658]},{"pos":[2662,2692],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> <ph id=\"ph1\">\\&lt;</ph>cliext/hash_set&gt;","source":"**Header:** \\<cliext/hash_set>"},{"pos":[2699,2720],"content":"<bpt id=\"p1\">**</bpt>Namespace:<ept id=\"p1\">**</ept> cliext","source":"**Namespace:** cliext"},{"content":"See Also","pos":[2729,2737]},{"content":"hash_set (STL/CLR)","pos":[2742,2760]},{"content":"hash_set::load_factor (STL/CLR)","pos":[2798,2829]},{"content":"hash_set::max_load_factor (STL/CLR)","pos":[2879,2914]}],"content":"---\ntitle: \"hash_set::bucket_count (STL-CLR) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"cliext::hash_set::bucket_count\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"bucket_count member [STL/CLR]\"\nms.assetid: 3ff49f99-b70d-4455-93e8-2bdc983a0e67\ncaps.latest.revision: 14\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# hash_set::bucket_count (STL/CLR)\nCounts the number of buckets.  \n  \n## Syntax  \n  \n```  \nint bucket_count();  \n```  \n  \n## Remarks  \n The member functions returns the current number of buckets. You use it to determine the size of the hash table.  \n  \n## Example  \n  \n```  \n// cliext_hash_set_bucket_count.cpp   \n// compile with: /clr   \n#include <cliext/hash_set>   \n  \ntypedef cliext::hash_set<wchar_t> Myhash_set;   \nint main()   \n    {   \n    Myhash_set c1;   \n    c1.insert(L'a');   \n    c1.insert(L'b');   \n    c1.insert(L'c');   \n  \n// display initial contents \" a b c\"   \n    for each (wchar_t elem in c1)   \n        System::Console::Write(\" {0}\", elem);   \n    System::Console::WriteLine();   \n  \n// inspect current parameters   \n    System::Console::WriteLine(\"bucket_count() = {0}\", c1.bucket_count());   \n    System::Console::WriteLine(\"load_factor() = {0}\", c1.load_factor());   \n    System::Console::WriteLine(\"max_load_factor() = {0}\",   \n        c1.max_load_factor());   \n    System::Console::WriteLine();   \n  \n// change max_load_factor and redisplay   \n    c1.max_load_factor(0.25f);   \n    System::Console::WriteLine(\"bucket_count() = {0}\", c1.bucket_count());   \n    System::Console::WriteLine(\"load_factor() = {0}\", c1.load_factor());   \n    System::Console::WriteLine(\"max_load_factor() = {0}\",   \n        c1.max_load_factor());   \n    System::Console::WriteLine();   \n  \n// rehash and redisplay   \n    c1.rehash(100);   \n    System::Console::WriteLine(\"bucket_count() = {0}\", c1.bucket_count());   \n    System::Console::WriteLine(\"load_factor() = {0}\", c1.load_factor());   \n    System::Console::WriteLine(\"max_load_factor() = {0}\",   \n        c1.max_load_factor());   \n    return (0);   \n    }  \n  \n```  \n  \n```Output  \n a b c  \nbucket_count() = 16  \nload_factor() = 0.1875  \nmax_load_factor() = 4  \n  \nbucket_count() = 16  \nload_factor() = 0.1875  \nmax_load_factor() = 0.25  \n  \nbucket_count() = 128  \nload_factor() = 0.0234375  \nmax_load_factor() = 0.25  \n```  \n  \n## Requirements  \n **Header:** \\<cliext/hash_set>  \n  \n **Namespace:** cliext  \n  \n## See Also  \n [hash_set (STL/CLR)](../dotnet/hash-set-stl-clr.md)   \n [hash_set::load_factor (STL/CLR)](../dotnet/hash-set-load-factor-stl-clr.md)   \n [hash_set::max_load_factor (STL/CLR)](../dotnet/hash-set-max-load-factor-stl-clr.md)"}