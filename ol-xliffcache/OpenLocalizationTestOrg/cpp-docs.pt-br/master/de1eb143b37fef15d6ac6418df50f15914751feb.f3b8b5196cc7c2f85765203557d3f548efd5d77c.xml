{"nodes":[{"pos":[12,76],"content":"Walkthrough: Adding Animation to an MFC Project | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Walkthrough: Adding Animation to an MFC Project | Microsoft Docs","pos":[0,64]}]},{"content":"Walkthrough: Adding Animation to an MFC Project","pos":[622,669]},{"content":"This walkthrough teaches how to add a basic animated object to a Visual C++, Microsoft Foundation Class Library (MFC) project.","pos":[670,796]},{"content":"The walkthrough shows how to accomplish these tasks:","pos":[803,855]},{"content":"Create an MFC application.","pos":[865,891]},{"content":"Add a menu and then add commands to start and stop an animation.","pos":[901,965]},{"content":"Create handlers for the start and stop commands.","pos":[975,1023]},{"content":"Add an animated object to the project.","pos":[1033,1071]},{"content":"Center the animated object in the window.","pos":[1081,1122]},{"content":"Verify the results.","pos":[1132,1151]},{"content":"Prerequisites","pos":[1245,1258]},{"content":"To complete this walkthrough, you must have Visual Studio.","pos":[1262,1320]},{"content":"To create an MFC application","pos":[1330,1358]},{"pos":[1368,1434],"content":"On the <bpt id=\"p1\">**</bpt>File<ept id=\"p1\">**</ept> menu, point to <bpt id=\"p2\">**</bpt>New<ept id=\"p2\">**</ept> and then click <bpt id=\"p3\">**</bpt>Project<ept id=\"p3\">**</ept>.","source":"On the **File** menu, point to **New** and then click **Project**."},{"content":"In the <bpt id=\"p1\">**</bpt>New Project<ept id=\"p1\">**</ept> dialog box, in the left pane under <bpt id=\"p2\">**</bpt>Installed Templates<ept id=\"p2\">**</ept>, expand <bpt id=\"p3\">**</bpt>Visual C++<ept id=\"p3\">**</ept> and then select <bpt id=\"p4\">**</bpt>MFC<ept id=\"p4\">**</ept>.","pos":[1444,1573],"source":"In the **New Project** dialog box, in the left pane under **Installed Templates**, expand **Visual C++** and then select **MFC**."},{"content":"In the middle pane, select <bpt id=\"p1\">**</bpt>MFC Application<ept id=\"p1\">**</ept>.","pos":[1574,1621],"source":" In the middle pane, select **MFC Application**."},{"content":"In the <bpt id=\"p1\">**</bpt>Name<ept id=\"p1\">**</ept> box, type <ph id=\"ph1\">`MFCAnimationWalkthrough`</ph>.","pos":[1622,1674],"source":" In the **Name** box, type `MFCAnimationWalkthrough`."},{"content":"Click <bpt id=\"p1\">**</bpt>OK<ept id=\"p1\">**</ept>.","pos":[1675,1688],"source":" Click **OK**."},{"content":"In the <bpt id=\"p1\">**</bpt>MFC Application Wizard<ept id=\"p1\">**</ept> dialog box, verify that <bpt id=\"p2\">**</bpt>Application Type<ept id=\"p2\">**</ept> is <bpt id=\"p3\">**</bpt>Multiple Documents<ept id=\"p3\">**</ept>, <bpt id=\"p4\">**</bpt>Project Style<ept id=\"p4\">**</ept> is <bpt id=\"p5\">**</bpt>Visual Studio<ept id=\"p5\">**</ept>, and the <bpt id=\"p6\">**</bpt>Document/View Architecture support<ept id=\"p6\">**</ept> option is selected.","pos":[1698,1910],"source":"In the **MFC Application Wizard** dialog box, verify that **Application Type** is **Multiple Documents**, **Project Style** is **Visual Studio**, and the **Document/View Architecture support** option is selected."},{"content":"Click <bpt id=\"p1\">**</bpt>Finish<ept id=\"p1\">**</ept>.","pos":[1911,1928],"source":" Click **Finish**."},{"content":"To add a menu and then add commands to start and stop an animation","pos":[1938,2004]},{"pos":[2014,2096],"content":"On the <bpt id=\"p1\">**</bpt>View<ept id=\"p1\">**</ept> menu, point to <bpt id=\"p2\">**</bpt>Other Windows<ept id=\"p2\">**</ept> and then click <bpt id=\"p3\">**</bpt>Resource View<ept id=\"p3\">**</ept>.","source":"On the **View** menu, point to **Other Windows** and then click **Resource View**."},{"content":"In <bpt id=\"p1\">**</bpt>Resource View<ept id=\"p1\">**</ept>, navigate to the <bpt id=\"p2\">**</bpt>Menu<ept id=\"p2\">**</ept> folder and open it.","pos":[2106,2172],"source":"In **Resource View**, navigate to the **Menu** folder and open it."},{"content":"Double-click the <ph id=\"ph1\">`IDR_MFCAnimationWalTYPE`</ph> resource to open it for modification.","pos":[2173,2253],"source":" Double-click the `IDR_MFCAnimationWalTYPE` resource to open it for modification."},{"pos":[2263,2352],"content":"On the menu bar, in the <bpt id=\"p1\">**</bpt>Type Here<ept id=\"p1\">**</ept> box, type <ph id=\"ph1\">`A&amp;nimation`</ph> to create an Animation menu.","source":"On the menu bar, in the **Type Here** box, type `A&nimation` to create an Animation menu."},{"pos":[2362,2465],"content":"Under <bpt id=\"p1\">**</bpt>Animation<ept id=\"p1\">**</ept>, in the <bpt id=\"p2\">**</bpt>Type Here<ept id=\"p2\">**</ept> box, type <ph id=\"ph1\">`Start &amp;Forward`</ph> to create a Start Forward command.","source":"Under **Animation**, in the **Type Here** box, type `Start &Forward` to create a Start Forward command."},{"pos":[2475,2549],"content":"Under <bpt id=\"p1\">**</bpt>Start Forward<ept id=\"p1\">**</ept>, in the <bpt id=\"p2\">**</bpt>Type Here<ept id=\"p2\">**</ept> box, type <ph id=\"ph1\">`Start &amp;Backward`</ph>.","source":"Under **Start Forward**, in the **Type Here** box, type `Start &Backward`."},{"pos":[2559,2649],"content":"Under <bpt id=\"p1\">**</bpt>Start Backward<ept id=\"p1\">**</ept>, in the <bpt id=\"p2\">**</bpt>Type Here<ept id=\"p2\">**</ept> box, type <ph id=\"ph1\">`S&amp;top`</ph> to create a Stop command.","source":"Under **Start Backward**, in the **Type Here** box, type `S&top` to create a Stop command."},{"content":"Save MFCAnimationWalkthrough.rc and close it.","pos":[2659,2704]},{"content":"In <bpt id=\"p1\">**</bpt>Solution Explorer<ept id=\"p1\">**</ept>, double-click MainFrm.cpp to open it for modification.","pos":[2714,2793],"source":"In **Solution Explorer**, double-click MainFrm.cpp to open it for modification."},{"content":"In the <ph id=\"ph1\">`CMainFrame::OnCreate`</ph> method, locate the section that has several calls to <ph id=\"ph2\">`lstBasicCommands.AddTail`</ph>.","pos":[2794,2904],"source":" In the `CMainFrame::OnCreate` method, locate the section that has several calls to `lstBasicCommands.AddTail`."},{"content":"Just after that section, add the following code.","pos":[2905,2953]},{"content":"Save the file and close it.","pos":[3143,3170]},{"content":"To create handlers for the start and stop commands","pos":[3180,3230]},{"pos":[3240,3288],"content":"On the <bpt id=\"p1\">**</bpt>Project<ept id=\"p1\">**</ept> menu, click <bpt id=\"p2\">**</bpt>Class Wizard<ept id=\"p2\">**</ept>.","source":"On the **Project** menu, click **Class Wizard**."},{"pos":[3298,3387],"content":"In the <bpt id=\"p1\">**</bpt>MFC Class Wizard<ept id=\"p1\">**</ept>, under <bpt id=\"p2\">**</bpt>Class name<ept id=\"p2\">**</ept>, select <ph id=\"ph1\">`CMFCAnimationWalkthroughView`</ph>.","source":"In the **MFC Class Wizard**, under **Class name**, select `CMFCAnimationWalkthroughView`."},{"content":"On the <bpt id=\"p1\">**</bpt>Commands<ept id=\"p1\">**</ept> tab, in the <bpt id=\"p2\">**</bpt>Object IDs<ept id=\"p2\">**</ept> box, select <ph id=\"ph1\">`ID_ANIMATION_STARTFORWARD`</ph>, and then in the <bpt id=\"p3\">**</bpt>Messages<ept id=\"p3\">**</ept> box, select <ph id=\"ph2\">`COMMAND`</ph>.","pos":[3397,3536],"source":"On the **Commands** tab, in the **Object IDs** box, select `ID_ANIMATION_STARTFORWARD`, and then in the **Messages** box, select `COMMAND`."},{"content":"Click <bpt id=\"p1\">**</bpt>Add Handler<ept id=\"p1\">**</ept>.","pos":[3537,3559],"source":" Click **Add Handler**."},{"pos":[3569,3625],"content":"In the <bpt id=\"p1\">**</bpt>Add Member Function<ept id=\"p1\">**</ept> dialog box, click <bpt id=\"p2\">**</bpt>OK<ept id=\"p2\">**</ept>.","source":"In the **Add Member Function** dialog box, click **OK**."},{"content":"In the <bpt id=\"p1\">**</bpt>Object IDs<ept id=\"p1\">**</ept> box, select <ph id=\"ph1\">`ID_ANIMATION_STARTBACKWARD`</ph>, and then in the <bpt id=\"p2\">**</bpt>Messages<ept id=\"p2\">**</ept> box, select <ph id=\"ph2\">`COMMAND`</ph>.","pos":[3635,3750],"source":"In the **Object IDs** box, select `ID_ANIMATION_STARTBACKWARD`, and then in the **Messages** box, select `COMMAND`."},{"content":"Click <bpt id=\"p1\">**</bpt>Add Handler<ept id=\"p1\">**</ept>.","pos":[3751,3773],"source":" Click **Add Handler**."},{"pos":[3783,3839],"content":"In the <bpt id=\"p1\">**</bpt>Add Member Function<ept id=\"p1\">**</ept> dialog box, click <bpt id=\"p2\">**</bpt>OK<ept id=\"p2\">**</ept>.","source":"In the **Add Member Function** dialog box, click **OK**."},{"content":"In the <bpt id=\"p1\">**</bpt>Object IDs<ept id=\"p1\">**</ept> box, select <ph id=\"ph1\">`ID_ANIMATION_STOP`</ph>, and then in the <bpt id=\"p2\">**</bpt>Messages<ept id=\"p2\">**</ept> box, select <ph id=\"ph2\">`COMMAND`</ph>.","pos":[3849,3955],"source":"In the **Object IDs** box, select `ID_ANIMATION_STOP`, and then in the **Messages** box, select `COMMAND`."},{"content":"Click <bpt id=\"p1\">**</bpt>Add Handler<ept id=\"p1\">**</ept> and then click <bpt id=\"p2\">**</bpt>OK<ept id=\"p2\">**</ept>.","pos":[3956,4000],"source":" Click **Add Handler** and then click **OK**."},{"pos":[4010,4066],"content":"In the <bpt id=\"p1\">**</bpt>Add Member Function<ept id=\"p1\">**</ept> dialog box, click <bpt id=\"p2\">**</bpt>OK<ept id=\"p2\">**</ept>.","source":"In the **Add Member Function** dialog box, click **OK**."},{"pos":[4075,4117],"content":"In the <bpt id=\"p1\">**</bpt>MFC Class Wizard<ept id=\"p1\">**</ept>, click <bpt id=\"p2\">**</bpt>OK<ept id=\"p2\">**</ept>.","source":"In the **MFC Class Wizard**, click **OK**."},{"content":"Save MFCAnimationWalkthroughView.cpp, which is open in the editor, but do not close it.","pos":[4127,4214]},{"content":"To add an animated object to the project","pos":[4224,4264]},{"content":"In Solution Explorer, double-click MFCAnimationWalkthroughView.h to open it for modification.","pos":[4274,4367]},{"content":"Just before the definition of the <ph id=\"ph1\">`CMFCAnimationWalkthroughView`</ph> class, add the following code to create a custom animation controller that will handle scheduling conflicts with the animation object.","pos":[4368,4567],"source":" Just before the definition of the `CMFCAnimationWalkthroughView` class, add the following code to create a custom animation controller that will handle scheduling conflicts with the animation object."},{"pos":[4914,4993],"content":"At the end of the <ph id=\"ph1\">`CMFCAnimationWalkthroughView`</ph> class, add the following code.","source":"At the end of the `CMFCAnimationWalkthroughView` class, add the following code."},{"pos":[5155,5218],"content":"After the <ph id=\"ph1\">`DECLARE_MESSAGE_MAP()`</ph> line, add the following code.","source":"After the `DECLARE_MESSAGE_MAP()` line, add the following code."},{"content":"Save the file and close it.","pos":[5281,5308]},{"pos":[5318,5462],"content":"In MFCAnimationWalkthroughView.cpp, at the top of the file after the <ph id=\"ph1\">`#include`</ph> statements but before any class methods, add the following code.","source":"In MFCAnimationWalkthroughView.cpp, at the top of the file after the `#include` statements but before any class methods, add the following code."},{"pos":[5566,5655],"content":"At the end of the constructor for <ph id=\"ph1\">`CMFCAnimationWalkthroughView`</ph>, add the following code.","source":"At the end of the constructor for `CMFCAnimationWalkthroughView`, add the following code."},{"pos":[6170,6276],"content":"Locate the <ph id=\"ph1\">`CAnimationWalthroughView::PreCreateWindow`</ph> method and then replace it with the following code.","source":"Locate the `CAnimationWalthroughView::PreCreateWindow` method and then replace it with the following code."},{"pos":[6562,6660],"content":"Locate the <ph id=\"ph1\">`CAnimationWalkthroughView::OnDraw`</ph> method and then replace it with the following code.","source":"Locate the `CAnimationWalkthroughView::OnDraw` method and then replace it with the following code."},{"content":"At the end of the file, add the following code.","pos":[7526,7573]},{"pos":[9910,9958],"content":"On the <bpt id=\"p1\">**</bpt>Project<ept id=\"p1\">**</ept> menu, click <bpt id=\"p2\">**</bpt>Class Wizard<ept id=\"p2\">**</ept>.","source":"On the **Project** menu, click **Class Wizard**."},{"pos":[9968,10057],"content":"In the <bpt id=\"p1\">**</bpt>MFC Class Wizard<ept id=\"p1\">**</ept>, under <bpt id=\"p2\">**</bpt>Class name<ept id=\"p2\">**</ept>, select <ph id=\"ph1\">`CMFCAnimationWalkthroughView`</ph>.","source":"In the **MFC Class Wizard**, under **Class name**, select `CMFCAnimationWalkthroughView`."},{"pos":[10067,10186],"content":"On the <bpt id=\"p1\">**</bpt>Messages<ept id=\"p1\">**</ept> tab, in the <bpt id=\"p2\">**</bpt>Messages<ept id=\"p2\">**</ept> box, select <ph id=\"ph1\">`WM_ERASEBKGND`</ph>, click <bpt id=\"p3\">**</bpt>Add Handler<ept id=\"p3\">**</ept>, and then click <bpt id=\"p4\">**</bpt>OK<ept id=\"p4\">**</ept>.","source":"On the **Messages** tab, in the **Messages** box, select `WM_ERASEBKGND`, click **Add Handler**, and then click **OK**."},{"pos":[10196,10364],"content":"In MFCAnimationWalkthroughView.cpp, replace the implementation of <ph id=\"ph1\">`OnEraseBkgnd`</ph> with the following code to reduce flickering in the animated object when it is redrawn.","source":"In MFCAnimationWalkthroughView.cpp, replace the implementation of `OnEraseBkgnd` with the following code to reduce flickering in the animated object when it is redrawn."},{"pos":[10488,10710],"content":"Replace the implementations of <ph id=\"ph1\">`CMFCAnimationWalkthroughView::OnAnimationStartforward`</ph>, <ph id=\"ph2\">`CMFCAnimationWalkthroughView::OnAnimationStartbackward`</ph>, and <ph id=\"ph3\">`CMFCAnimationWalkthroughView::OnAnimationStop`</ph> with the following code.","source":"Replace the implementations of `CMFCAnimationWalkthroughView::OnAnimationStartforward`, `CMFCAnimationWalkthroughView::OnAnimationStartbackward`, and `CMFCAnimationWalkthroughView::OnAnimationStop` with the following code."},{"content":"Save the file and close it.","pos":[11165,11192]},{"content":"To center the animated object in the window","pos":[11202,11245]},{"content":"In <bpt id=\"p1\">**</bpt>Solution Explorer<ept id=\"p1\">**</ept>, double-click MFCAnimationWalkthroughView.h to open it for modification.","pos":[11255,11352],"source":"In **Solution Explorer**, double-click MFCAnimationWalkthroughView.h to open it for modification."},{"content":"At the end of the <ph id=\"ph1\">`CMFCAnimationWalkthroughView`</ph> class, just after the definition of <ph id=\"ph2\">`m_animationRect`</ph>, add the following code.","pos":[11353,11480],"source":" At the end of the `CMFCAnimationWalkthroughView` class, just after the definition of `m_animationRect`, add the following code."},{"content":"Save the file and close it.","pos":[11539,11566]},{"pos":[11576,11624],"content":"On the <bpt id=\"p1\">**</bpt>Project<ept id=\"p1\">**</ept> menu, click <bpt id=\"p2\">**</bpt>Class Wizard<ept id=\"p2\">**</ept>.","source":"On the **Project** menu, click **Class Wizard**."},{"pos":[11634,11723],"content":"In the <bpt id=\"p1\">**</bpt>MFC Class Wizard<ept id=\"p1\">**</ept>, under <bpt id=\"p2\">**</bpt>Class name<ept id=\"p2\">**</ept>, select <ph id=\"ph1\">`CMFCAnimationWalkthroughView`</ph>.","source":"In the **MFC Class Wizard**, under **Class name**, select `CMFCAnimationWalkthroughView`."},{"pos":[11733,11846],"content":"On the <bpt id=\"p1\">**</bpt>Messages<ept id=\"p1\">**</ept> tab, in the <bpt id=\"p2\">**</bpt>Messages<ept id=\"p2\">**</ept> box, select <ph id=\"ph1\">`WM_SIZE`</ph>, click <bpt id=\"p3\">**</bpt>Add Handler<ept id=\"p3\">**</ept>, and then click <bpt id=\"p4\">**</bpt>OK<ept id=\"p4\">**</ept>.","source":"On the **Messages** tab, in the **Messages** box, select `WM_SIZE`, click **Add Handler**, and then click **OK**."},{"pos":[11856,11976],"content":"In MFCAnimationWalkthroughView.cpp, replace the code for <ph id=\"ph1\">`CMFCAnimationWalkthroughView::OnSize`</ph> with the following code.","source":"In MFCAnimationWalkthroughView.cpp, replace the code for `CMFCAnimationWalkthroughView::OnSize` with the following code."},{"pos":[12524,12619],"content":"At the beginning of the constructor for <ph id=\"ph1\">`CMFCAnimationWalkthroughView`</ph>, add the following code.","source":"At the beginning of the constructor for `CMFCAnimationWalkthroughView`, add the following code."},{"pos":[12680,12775],"content":"At the beginning of the <ph id=\"ph1\">`CMFCAnimationWalkthroughView::Animate`</ph> method, add the following code.","source":"At the beginning of the `CMFCAnimationWalkthroughView::Animate` method, add the following code."},{"content":"Save the file and close it.","pos":[12841,12868]},{"content":"To verify the results","pos":[12878,12899]},{"content":"Build and run the application.","pos":[12909,12939]},{"content":"On the <bpt id=\"p1\">**</bpt>Animation<ept id=\"p1\">**</ept> menu, click <bpt id=\"p2\">**</bpt>Start Forward<ept id=\"p2\">**</ept>.","pos":[12940,12991],"source":" On the **Animation** menu, click **Start Forward**."},{"content":"A rectangle should appear and then fill the center area.","pos":[12992,13048]},{"content":"When you click <bpt id=\"p1\">**</bpt>Start Backward<ept id=\"p1\">**</ept>, the animation should reverse, and when you click <bpt id=\"p2\">**</bpt>Stop<ept id=\"p2\">**</ept>, it should stop.","pos":[13049,13158],"source":" When you click **Start Backward**, the animation should reverse, and when you click **Stop**, it should stop."},{"content":"The fill color of the rectangle should change as the animation progresses, and the current color should be displayed at the top of the animation window.","pos":[13159,13311]},{"content":"See Also","pos":[13320,13328]},{"content":"Walkthroughs","pos":[13333,13345]}],"content":"---\ntitle: \"Walkthrough: Adding Animation to an MFC Project | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"animation [MFC]\"\n  - \"MFC, animation\"\nms.assetid: 004f832c-9fd5-4f88-9ca9-ae65dececdc2\ncaps.latest.revision: 18\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Walkthrough: Adding Animation to an MFC Project\nThis walkthrough teaches how to add a basic animated object to a Visual C++, Microsoft Foundation Class Library (MFC) project.  \n  \n The walkthrough shows how to accomplish these tasks:  \n  \n-   Create an MFC application.  \n  \n-   Add a menu and then add commands to start and stop an animation.  \n  \n-   Create handlers for the start and stop commands.  \n  \n-   Add an animated object to the project.  \n  \n-   Center the animated object in the window.  \n  \n-   Verify the results.  \n  \n [!INCLUDE[note_settings_general](../mfc/includes/note_settings_general_md.md)]  \n  \n## Prerequisites  \n To complete this walkthrough, you must have Visual Studio.  \n  \n### To create an MFC application  \n  \n1.  On the **File** menu, point to **New** and then click **Project**.  \n  \n2.  In the **New Project** dialog box, in the left pane under **Installed Templates**, expand **Visual C++** and then select **MFC**. In the middle pane, select **MFC Application**. In the **Name** box, type `MFCAnimationWalkthrough`. Click **OK**.  \n  \n3.  In the **MFC Application Wizard** dialog box, verify that **Application Type** is **Multiple Documents**, **Project Style** is **Visual Studio**, and the **Document/View Architecture support** option is selected. Click **Finish**.  \n  \n### To add a menu and then add commands to start and stop an animation  \n  \n1.  On the **View** menu, point to **Other Windows** and then click **Resource View**.  \n  \n2.  In **Resource View**, navigate to the **Menu** folder and open it. Double-click the `IDR_MFCAnimationWalTYPE` resource to open it for modification.  \n  \n3.  On the menu bar, in the **Type Here** box, type `A&nimation` to create an Animation menu.  \n  \n4.  Under **Animation**, in the **Type Here** box, type `Start &Forward` to create a Start Forward command.  \n  \n5.  Under **Start Forward**, in the **Type Here** box, type `Start &Backward`.  \n  \n6.  Under **Start Backward**, in the **Type Here** box, type `S&top` to create a Stop command.  \n  \n7.  Save MFCAnimationWalkthrough.rc and close it.  \n  \n8.  In **Solution Explorer**, double-click MainFrm.cpp to open it for modification. In the `CMainFrame::OnCreate` method, locate the section that has several calls to `lstBasicCommands.AddTail`. Just after that section, add the following code.  \n  \n ```  \n    lstBasicCommands.AddTail(ID_ANIMATION_STARTFORWARD);\n\n lstBasicCommands.AddTail(ID_ANIMATION_STARTBACKWARD);\n\n    lstBasicCommands.AddTail(ID_ANIMATION_STOP);\n\n ```  \n  \n9. Save the file and close it.  \n  \n### To create handlers for the start and stop commands  \n  \n1.  On the **Project** menu, click **Class Wizard**.  \n  \n2.  In the **MFC Class Wizard**, under **Class name**, select `CMFCAnimationWalkthroughView`.  \n  \n3.  On the **Commands** tab, in the **Object IDs** box, select `ID_ANIMATION_STARTFORWARD`, and then in the **Messages** box, select `COMMAND`. Click **Add Handler**.  \n  \n4.  In the **Add Member Function** dialog box, click **OK**.  \n  \n5.  In the **Object IDs** box, select `ID_ANIMATION_STARTBACKWARD`, and then in the **Messages** box, select `COMMAND`. Click **Add Handler**.  \n  \n6.  In the **Add Member Function** dialog box, click **OK**.  \n  \n7.  In the **Object IDs** box, select `ID_ANIMATION_STOP`, and then in the **Messages** box, select `COMMAND`. Click **Add Handler** and then click **OK**.  \n  \n8.  In the **Add Member Function** dialog box, click **OK**.  \n  \n9. In the **MFC Class Wizard**, click **OK**.  \n  \n10. Save MFCAnimationWalkthroughView.cpp, which is open in the editor, but do not close it.  \n  \n### To add an animated object to the project  \n  \n1.  In Solution Explorer, double-click MFCAnimationWalkthroughView.h to open it for modification. Just before the definition of the `CMFCAnimationWalkthroughView` class, add the following code to create a custom animation controller that will handle scheduling conflicts with the animation object.  \n  \n ```  \n    class CCustomAnimationController : public CAnimationController  \n {  \n    public: \n    CCustomAnimationController() \n {  \n }  \n \n    virtual BOOL OnHasPriorityTrim(CAnimationGroup* pGroupScheduled,\n    CAnimationGroup* pGroupNew,\n    UI_ANIMATION_PRIORITY_EFFECT priorityEffect)  \n {  \n    return TRUE;  \n }  \n };  \n ```  \n  \n2.  At the end of the `CMFCAnimationWalkthroughView` class, add the following code.  \n  \n ```  \n    CCustomAnimationController m_animationController;  \n    CAnimationColor m_animationColor;   \n    CAnimationRect m_animationRect;  \n ```  \n  \n3.  After the `DECLARE_MESSAGE_MAP()` line, add the following code.  \n  \n ```  \n    void Animate(BOOL bDirection);\n\n ```  \n  \n4.  Save the file and close it.  \n  \n5.  In MFCAnimationWalkthroughView.cpp, at the top of the file after the `#include` statements but before any class methods, add the following code.  \n  \n ```  \n    static int nAnimationGroup = 0;  \n    static int nInfoAreaHeight = 40;  \n ```  \n  \n6.  At the end of the constructor for `CMFCAnimationWalkthroughView`, add the following code.  \n  \n ```  \n    m_animationController.EnableAnimationTimerEventHandler();\nm_animationController.EnablePriorityComparisonHandler(UI_ANIMATION_PHT_TRIM);\n\n \n    m_animationColor = RGB(255,\n    255,\n    255);\n\n    m_animationRect = CRect(0,\n    0,\n    0,\n    0);\n\n \n    m_animationColor.SetID(-1,\n    nAnimationGroup);\n\n    m_animationRect.SetID(-1,\n    nAnimationGroup);\n\n \n    m_animationController.AddAnimationObject(&m_animationColor);\n\n m_animationController.AddAnimationObject(&m_animationRect);\n\n ```  \n  \n7.  Locate the `CAnimationWalthroughView::PreCreateWindow` method and then replace it with the following code.  \n  \n ```  \n    BOOL CMFCAnimationWalkthroughView::PreCreateWindow(CREATESTRUCT& cs)  \n { *// TODO: Modify the Window class or styles here by modifying *//  the CREATESTRUCT cs  \n \n    m_animationController.SetRelatedWnd(this);\n\n return CView::PreCreateWindow(cs);\n\n }  \n ```  \n  \n8.  Locate the `CAnimationWalkthroughView::OnDraw` method and then replace it with the following code.  \n  \n ```  \n    void CMFCAnimationWalkthroughView::OnDraw(CDC* pDC)  \n {  \n    CMFCAnimationWalkthroughDoc* pDoc = GetDocument();\nASSERT_VALID(pDoc);\n\n if (!pDoc)  \n    return; \n *// TODO: add draw code for native data here  \n    CMemDC dcMem(*pDC,\n    this);\n\n    CDC& dc = dcMem.GetDC();\n\n \n    CRect rect;  \n    GetClientRect(rect);\n\n \n    dc.FillSolidRect(rect,\n    GetSysColor(COLOR_WINDOW));\n\n \n    CString strRGB;  \n    strRGB.Format(_T(\"Fill Color is: %d; %d; %d\"),\n    GetRValue(m_animationColor),\n    GetGValue(m_animationColor),\n    GetBValue(m_animationColor));\n\n \n    dc.DrawText(strRGB,\n    rect,\n    DT_CENTER);\n\n    rect.top += nInfoAreaHeight;  \n \n    CBrush br;  \n \n    br.CreateSolidBrush(m_animationColor);\n\n CBrush* pBrushOld = dc.SelectObject(&br);\n\n \n    dc.Rectangle((CRect)m_animationRect);\n\n dc.SelectObject(pBrushOld);\n\n }  \n ```  \n  \n9. At the end of the file, add the following code.  \n  \n ```  \n    void CMFCAnimationWalkthroughView::Animate(BOOL bDirection)  \n {  \n    static UI_ANIMATION_SECONDS duration = 3;  \n    static DOUBLE dblSpeed = 35.;  \n    static BYTE nStartColor = 50;  \n    static BYTE nEndColor = 255;  \n \n    BYTE nRedColorFinal = bDirection  nStartColor : nEndColor;  \n    BYTE nGreenColorFinal = bDirection  nStartColor : nEndColor;  \n    BYTE nBlueColorFinal = bDirection  nStartColor : nEndColor;  \n \n    CLinearTransition* pRedTransition = new CLinearTransition(duration, (DOUBLE)nRedColorFinal);\n\n    CSmoothStopTransition* pGreenTransition = new CSmoothStopTransition(duration, (DOUBLE)nGreenColorFinal);\n\n    CLinearTransitionFromSpeed* pBlueTransition = new CLinearTransitionFromSpeed(dblSpeed, (DOUBLE)nBlueColorFinal);\n\n \n    m_animationColor.AddTransition(pRedTransition,\n    pGreenTransition,\n    pBlueTransition);\n\n \n    CRect rectClient;  \n    GetClientRect(rectClient);\n\n rectClient.top += nInfoAreaHeight;  \n \n    int nLeftFinal = bDirection  rectClient.left : rectClient.CenterPoint().x;  \n    int nTopFinal = bDirection  rectClient.top : rectClient.CenterPoint().y;  \n    int nRightFinal = bDirection  rectClient.right : rectClient.CenterPoint().x;  \n    int nBottomFinal = bDirection  rectClient.bottom : rectClient.CenterPoint().y;  \n \n    CLinearTransition* pLeftTransition = new CLinearTransition(duration,\n    nLeftFinal);\n\n    CLinearTransition* pTopTransition = new CLinearTransition(duration,\n    nTopFinal);\n\n    CLinearTransition* pRightTransition = new CLinearTransition(duration,\n    nRightFinal);\n\n    CLinearTransition* pBottomTransition = new CLinearTransition(duration,\n    nBottomFinal);\n\n \n    m_animationRect.AddTransition(pLeftTransition,\n    pTopTransition,\n    pRightTransition,\n    pBottomTransition);\n\n \n    CBaseKeyFrame* pKeyframeStart = CAnimationController::GetKeyframeStoryboardStart();\nCKeyFrame* pKeyFrameEnd = m_animationController.CreateKeyframe(nAnimationGroup,\n    pBlueTransition);\n\n \n    pLeftTransition->SetKeyframes(pKeyframeStart,\n    pKeyFrameEnd);\n\n    pTopTransition->SetKeyframes(pKeyframeStart,\n    pKeyFrameEnd);\n\n    pRightTransition->SetKeyframes(pKeyframeStart,\n    pKeyFrameEnd);\n\n    pBottomTransition->SetKeyframes(pKeyframeStart,\n    pKeyFrameEnd);\n\n \n    m_animationController.AnimateGroup(nAnimationGroup);\n\n }  \n ```  \n  \n10. On the **Project** menu, click **Class Wizard**.  \n  \n11. In the **MFC Class Wizard**, under **Class name**, select `CMFCAnimationWalkthroughView`.  \n  \n12. On the **Messages** tab, in the **Messages** box, select `WM_ERASEBKGND`, click **Add Handler**, and then click **OK**.  \n  \n13. In MFCAnimationWalkthroughView.cpp, replace the implementation of `OnEraseBkgnd` with the following code to reduce flickering in the animated object when it is redrawn.  \n  \n ```  \n    BOOL CMFCAnimationWalkthroughView::OnEraseBkgnd(CDC* /*pDC*/)  \n {  \n    return TRUE;  \n }  \n ```  \n  \n14. Replace the implementations of `CMFCAnimationWalkthroughView::OnAnimationStartforward`, `CMFCAnimationWalkthroughView::OnAnimationStartbackward`, and `CMFCAnimationWalkthroughView::OnAnimationStop` with the following code.  \n  \n ```  \n    void CMFCAnimationWalkthroughView::OnAnimationStartforward()  \n {  \n    Animate(TRUE);\n\n }  \n \n    void CMFCAnimationWalkthroughView::OnAnimationStartbackward()  \n {  \n    Animate(FALSE);\n\n }  \n \n    void CMFCAnimationWalkthroughView::OnAnimationStop()  \n {  \n    IUIAnimationManager* pManager = m_animationController.GetUIAnimationManager();\nif (pManager != NULL)  \n {  \n    pManager->AbandonAllStoryboards();\n\n }  \n }  \n \n ```  \n  \n15. Save the file and close it.  \n  \n### To center the animated object in the window  \n  \n1.  In **Solution Explorer**, double-click MFCAnimationWalkthroughView.h to open it for modification. At the end of the `CMFCAnimationWalkthroughView` class, just after the definition of `m_animationRect`, add the following code.  \n  \n ```  \n    BOOL m_bCurrentDirection;  \n ```  \n  \n2.  Save the file and close it.  \n  \n3.  On the **Project** menu, click **Class Wizard**.  \n  \n4.  In the **MFC Class Wizard**, under **Class name**, select `CMFCAnimationWalkthroughView`.  \n  \n5.  On the **Messages** tab, in the **Messages** box, select `WM_SIZE`, click **Add Handler**, and then click **OK**.  \n  \n6.  In MFCAnimationWalkthroughView.cpp, replace the code for `CMFCAnimationWalkthroughView::OnSize` with the following code.  \n  \n ```  \n    void CMFCAnimationWalkthroughView::OnSize(UINT nType,\n    int cx,\n    int cy)  \n {  \n    CView::OnSize(nType,\n    cx,\n    cy);\n\n \n    CRect rect;  \n    GetClientRect(rect);\n\n rect.top += nInfoAreaHeight;  \n \n    CRect rectAnim = m_animationRect;  \n    m_animationRect = CRect(CPoint(rect.CenterPoint().x - rectAnim.Width() / 2,   \n    rect.CenterPoint().y - rectAnim.Height() / 2),   \n    rectAnim.Size());\n\n \n    if (m_animationController.IsAnimationInProgress())  \n {  \n    Animate(m_bCurrentDirection);\n\n }  \n }  \n ```  \n  \n7.  At the beginning of the constructor for `CMFCAnimationWalkthroughView`, add the following code.  \n  \n ```  \n    m_bCurrentDirection = TRUE;  \n ```  \n  \n8.  At the beginning of the `CMFCAnimationWalkthroughView::Animate` method, add the following code.  \n  \n ```  \n    m_bCurrentDirection = bDirection;  \n ```  \n  \n9. Save the file and close it.  \n  \n### To verify the results  \n  \n1.  Build and run the application. On the **Animation** menu, click **Start Forward**. A rectangle should appear and then fill the center area. When you click **Start Backward**, the animation should reverse, and when you click **Stop**, it should stop. The fill color of the rectangle should change as the animation progresses, and the current color should be displayed at the top of the animation window.  \n  \n## See Also  \n [Walkthroughs](../mfc/walkthroughs-mfc.md)\n\n"}