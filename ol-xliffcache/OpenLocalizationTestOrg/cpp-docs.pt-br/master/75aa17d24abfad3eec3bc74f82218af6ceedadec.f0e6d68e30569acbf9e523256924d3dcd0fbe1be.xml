{"nodes":[{"pos":[12,61],"content":"Compiler Warning (level 4) C4703 | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Compiler Warning (level 4) C4703 | Microsoft Docs","pos":[0,49]}]},{"content":"Compiler Warning (level 4) C4703","pos":[635,667]},{"content":"Potentially uninitialized local pointer variable 'name' used","pos":[668,728]},{"content":"The local pointer variable <bpt id=\"p1\">*</bpt>name<ept id=\"p1\">*</ept> might have been used without being assigned a value.","pos":[735,821],"source":"The local pointer variable *name* might have been used without being assigned a value."},{"content":"This could lead to unpredictable results.","pos":[822,863]},{"content":"Example","pos":[872,879]},{"content":"The following code generates C4701 and C4703.","pos":[883,928]},{"content":"To correct this warning, initialize the variable as shown in this example:","pos":[1398,1472]},{"content":"See Also","pos":[1725,1733]},{"content":"Compiler Warning (level 4) C4701","pos":[1738,1770]},{"content":"Warnings, /sdl, and improving uninitialized variable detection","pos":[1851,1913]}],"content":"---\ntitle: \"Compiler Warning (level 4) C4703 | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"error-reference\"\nf1_keywords: \n  - \"C4703\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"C4703\"\nms.assetid: 5dad454e-69e3-4931-9168-050a861c05f8\ncaps.latest.revision: 7\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"ru-ru\"\n  - \"zh-cn\"\n  - \"zh-tw\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"tr-tr\"\n---\n# Compiler Warning (level 4) C4703\nPotentially uninitialized local pointer variable 'name' used  \n  \n The local pointer variable *name* might have been used without being assigned a value. This could lead to unpredictable results.  \n  \n## Example  \n The following code generates C4701 and C4703.  \n  \n```cpp  \n#include <malloc.h>  \n  \nvoid func(int size)  \n{  \n    void* p;  \n    if (size < 256) {  \n        p = malloc(size);  \n    }  \n  \n    if (p != nullptr) // C4701 and C4703  \n        free(p);  \n}  \n  \nvoid main()  \n{  \n    func(9);  \n}  \n```  \n  \n```Output  \nc:\\src\\test.cpp(10) : warning C4701: potentially uninitialized local variable 'p' used  \nc:\\src\\test.cpp(10) : warning C4703: potentially uninitialized local pointer variable 'p' used  \n  \n```  \n  \n To correct this warning, initialize the variable as shown in this example:  \n  \n```cpp  \n#include <malloc.h>  \n  \nvoid func(int size)  \n{  \n    void* p = nullptr;  \n    if (size < 256) {  \n        p = malloc(size);  \n    }  \n  \n    if (p != nullptr)  \n        free(p);  \n}  \n  \nvoid main()  \n{  \n    func(9);  \n}  \n```  \n  \n## See Also  \n [Compiler Warning (level 4) C4701](../../error-messages/compiler-warnings/compiler-warning-level-4-c4701.md)   \n [Warnings, /sdl, and improving uninitialized variable detection](http://blogs.msdn.com/b/sdl/archive/2012/06/06/warnings-sdl-and-improving-uninitialized-variable-detection.aspx)"}