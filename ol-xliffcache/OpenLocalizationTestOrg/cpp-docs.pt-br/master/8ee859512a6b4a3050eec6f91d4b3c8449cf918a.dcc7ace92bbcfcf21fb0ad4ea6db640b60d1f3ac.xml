{"nodes":[{"pos":[12,42],"content":"codecvt_utf16 | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"codecvt_utf16 | Microsoft Docs","pos":[0,30]}]},{"content":"codecvt_utf16","pos":[687,700]},{"pos":[701,880],"content":"Represents a <bpt id=\"p1\">[</bpt>locale<ept id=\"p1\">](../standard-library/locale-class.md)</ept> facet that converts between wide characters encoded as UCS-2 or UCS-4 and a byte stream encoded as UTF-16LE or UTF-16BE.","source":"Represents a [locale](../standard-library/locale-class.md) facet that converts between wide characters encoded as UCS-2 or UCS-4 and a byte stream encoded as UTF-16LE or UTF-16BE."},{"content":"Parameters","pos":[1050,1060]},{"content":"The wide-character element type.","pos":[1070,1102]},{"content":"The maximum number of characters for the locale facet.","pos":[1117,1171]},{"content":"Configuration information for the locale facet.","pos":[1183,1230]},{"content":"Remarks","pos":[1237,1244]},{"content":"This template class converts between wide characters encoded as UCS-2 or UCS-4 and a byte stream encoded as UTF-16LE, if Mode &amp; little_endian, or UTF-16BE otherwise.","pos":[1245,1410],"source":"This template class converts between wide characters encoded as UCS-2 or UCS-4 and a byte stream encoded as UTF-16LE, if Mode & little_endian, or UTF-16BE otherwise."},{"content":"The byte stream should be written to a binary file; it can be corrupted if written to a text file.","pos":[1412,1510]},{"content":"Requirements","pos":[1515,1527]},{"pos":[1528,1561],"content":"Header: <ph id=\"ph1\">\\&lt;</ph>codecvt&gt; Namespace: std","source":"Header: \\<codecvt>\nNamespace: std"}],"content":"---\ntitle: \"codecvt_utf16 | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"codecvt/std::codecvt_utf16\"\n  - \"std::codecvt_utf16\"\n  - \"std.codecvt_utf16\"\n  - \"codecvt_utf16\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"codecvt_utf16 class\"\nms.assetid: a9897f98-f84d-4db6-90ad-858b2727570c\ncaps.latest.revision: 20\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# codecvt_utf16\nRepresents a [locale](../standard-library/locale-class.md) facet that converts between wide characters encoded as UCS-2 or UCS-4 and a byte stream encoded as UTF-16LE or UTF-16BE.\n\n```\ntemplate<class Elem, unsigned long Maxcode = 0x10ffff, codecvt_mode Mode = (codecvt_mode)0>\nclass codecvt_utf16 : public std::codecvt<Elem, char, StateType>\n```\n## Parameters\n`Elem`  \nThe wide-character element type.  \n`Maxcode`  \nThe maximum number of characters for the locale facet.  \n`Mode`  \nConfiguration information for the locale facet.  \n\n## Remarks\nThis template class converts between wide characters encoded as UCS-2 or UCS-4 and a byte stream encoded as UTF-16LE, if Mode & little_endian, or UTF-16BE otherwise.\n\nThe byte stream should be written to a binary file; it can be corrupted if written to a text file.\n\n## Requirements\nHeader: \\<codecvt>\nNamespace: std"}