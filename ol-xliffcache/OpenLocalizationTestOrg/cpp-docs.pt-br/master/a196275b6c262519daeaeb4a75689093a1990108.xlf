<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="pt-br">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-04506c2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a196275b6c262519daeaeb4a75689093a1990108</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\atl-mfc-shared\memory-management-with-cstringt.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5ec9a035d1e18f182ade812f14e083d78badb9c5</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7766ae817d31f0f7d2ff65765bdb8567b488c498</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Memory Management with CStringT | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Memory Management with CStringT</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Class <bpt id="p1">[</bpt>CStringT<ept id="p1">](../atl-mfc-shared/reference/cstringt-class.md)</ept> is a template class used to manipulate variable-length character strings.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The memory to hold these strings is allocated and released through a string manager object, associated with each instance of <ph id="ph1">`CStringT`</ph>.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>MFC and ATL provide default instantiations of <ph id="ph1">`CStringT`</ph>, called <ph id="ph2">`CString`</ph>, <ph id="ph3">`CStringA`</ph>, and <ph id="ph4">`CStringW`</ph>, which manipulate strings of different character types.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>These character types are of type <bpt id="p1">**</bpt>TCHAR<ept id="p1">**</ept>, <ph id="ph1">`char`</ph>, and <ph id="ph2">`wchar_t`</ph>, respectively.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>These default string types use a string manager that allocates memory from the process heap (in ATL) or the CRT heap (in MFC).</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>For typical applications, this memory allocation scheme is sufficient.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>However, for code making intensive use of strings (or multithreaded code) the default memory managers may not perform optimally.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>This topic describes how to override the default memory management behavior of <ph id="ph1">`CStringT`</ph>, creating allocators specifically optimized for the task at hand.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Implementation of a Custom String Manager (Basic Method)</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Avoidance of Heap Contention</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Implementation of a Custom String Manager (Advanced Method)</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>CFixedStringT: An Example of a Custom String Manager</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>CustomString sample</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>