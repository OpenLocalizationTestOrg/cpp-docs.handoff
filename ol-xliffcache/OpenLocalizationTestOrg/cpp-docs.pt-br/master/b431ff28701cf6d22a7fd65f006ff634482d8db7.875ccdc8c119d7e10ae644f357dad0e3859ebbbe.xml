{"nodes":[{"pos":[12,64],"content":"hash_multiset::value_type (STL-CLR) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"hash_multiset::value_type (STL-CLR) | Microsoft Docs","pos":[0,52]}]},{"content":"hash_multiset::value_type (STL/CLR)","pos":[657,692]},{"content":"The type of an element.","pos":[693,716]},{"content":"Syntax","pos":[725,731]},{"content":"Remarks","pos":[791,798]},{"pos":[802,844],"content":"The type is a synonym for <ph id=\"ph1\">`generic_value`</ph>.","source":"The type is a synonym for `generic_value`."},{"content":"Example","pos":[853,860]},{"content":"Requirements","pos":[1557,1569]},{"pos":[1573,1603],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> <ph id=\"ph1\">\\&lt;</ph>cliext/hash_set&gt;","source":"**Header:** \\<cliext/hash_set>"},{"pos":[1610,1631],"content":"<bpt id=\"p1\">**</bpt>Namespace:<ept id=\"p1\">**</ept> cliext","source":"**Namespace:** cliext"},{"content":"See Also","pos":[1640,1648]},{"content":"hash_multiset (STL/CLR)","pos":[1653,1676]},{"content":"hash_multiset::const_reference (STL/CLR)","pos":[1719,1759]},{"content":"hash_multiset::key_type (STL/CLR)","pos":[1818,1851]},{"content":"hash_multiset::reference (STL/CLR)","pos":[1903,1937]}],"content":"---\ntitle: \"hash_multiset::value_type (STL-CLR) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"cliext::hash_multiset::value_type\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"value_type member [STL/CLR]\"\nms.assetid: 8f9cd362-28e7-4916-af4e-c37e780e097c\ncaps.latest.revision: 15\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# hash_multiset::value_type (STL/CLR)\nThe type of an element.  \n  \n## Syntax  \n  \n```  \ntypedef generic_value value_type;  \n```  \n  \n## Remarks  \n The type is a synonym for `generic_value`.  \n  \n## Example  \n  \n```  \n// cliext_hash_multiset_value_type.cpp   \n// compile with: /clr   \n#include <cliext/hash_set>   \n  \ntypedef cliext::hash_multiset<wchar_t> Myhash_multiset;   \nint main()   \n    {   \n    Myhash_multiset c1;   \n    c1.insert(L'a');   \n    c1.insert(L'b');   \n    c1.insert(L'c');   \n  \n// display contents \" a b c\" using value_type   \n    for (Myhash_multiset::iterator it = c1.begin(); it != c1.end(); ++it)   \n        {   // store element in value_type object   \n        Myhash_multiset::value_type val = *it;   \n  \n        System::Console::Write(\" {0}\", val);   \n        }   \n    System::Console::WriteLine();   \n    return (0);   \n    }  \n  \n```  \n  \n```Output  \na b c  \n```  \n  \n## Requirements  \n **Header:** \\<cliext/hash_set>  \n  \n **Namespace:** cliext  \n  \n## See Also  \n [hash_multiset (STL/CLR)](../dotnet/hash-multiset-stl-clr.md)   \n [hash_multiset::const_reference (STL/CLR)](../dotnet/hash-multiset-const-reference-stl-clr.md)   \n [hash_multiset::key_type (STL/CLR)](../dotnet/hash-multiset-key-type-stl-clr.md)   \n [hash_multiset::reference (STL/CLR)](../dotnet/hash-multiset-reference-stl-clr.md)"}