{"nodes":[{"pos":[12,39],"content":"_getdrives | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"_getdrives | Microsoft Docs","pos":[0,27]}]},{"content":"_getdrives","pos":[981,991]},{"content":"Returns a bitmask that represents the currently available disk drives.","pos":[992,1062]},{"pos":[1070,1330],"content":"[!IMPORTANT]\n This API cannot be used in applications that execute in the [!INCLUDE[wrt](../../atl/reference/includes/wrt_md.md)]. For more information, see [CRT functions not supported with /ZW](http://msdn.microsoft.com/library/windows/apps/jj606124.aspx).","leadings":["","> "],"nodes":[{"content":" This API cannot be used in applications that execute in the [!INCLUDE[wrt](../../atl/reference/includes/wrt_md.md)]. For more information, see [CRT functions not supported with /ZW](http://msdn.microsoft.com/library/windows/apps/jj606124.aspx).","pos":[13,258],"nodes":[{"content":"This API cannot be used in applications that execute in the <ph id=\"ph1\">[!INCLUDE[wrt](../../atl/reference/includes/wrt_md.md)]</ph>.","pos":[1,117],"source":" This API cannot be used in applications that execute in the [!INCLUDE[wrt](../../atl/reference/includes/wrt_md.md)]."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>CRT functions not supported with /ZW<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/apps/jj606124.aspx)</ept>.","pos":[118,245],"source":" For more information, see [CRT functions not supported with /ZW](http://msdn.microsoft.com/library/windows/apps/jj606124.aspx)."}]}]},{"content":"Syntax","pos":[1339,1345]},{"content":"Return Value","pos":[1405,1417]},{"content":"If the function succeeds, the return value is a bitmask that represents the currently available disk drives.","pos":[1421,1529]},{"content":"Bit position 0 (the least-significant bit) is drive A, bit position 1 is drive B, bit position 2 is drive C, and so on.","pos":[1530,1649]},{"content":"If the function fails, the return value is zero.","pos":[1650,1698]},{"content":"To get extended error information, call <ph id=\"ph1\">`GetLastError`</ph>.","pos":[1699,1754],"source":" To get extended error information, call `GetLastError`."},{"content":"Requirements","pos":[1763,1775]},{"content":"Routine","pos":[1782,1789]},{"content":"Required header","pos":[1790,1805]},{"content":"direct.h&gt;","pos":[1865,1874],"source":"direct.h>"},{"pos":[1882,1980],"content":"For more compatibility information, see <bpt id=\"p1\">[</bpt>Compatibility<ept id=\"p1\">](../../c-runtime-library/compatibility.md)</ept>.","source":"For more compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md)."},{"content":"Example","pos":[1989,1996]},{"content":"NET Framework Equivalent","pos":[2862,2886]},{"content":"Not applicable.","pos":[2890,2905]},{"content":"To call the standard C function, use <ph id=\"ph1\">`PInvoke`</ph>.","pos":[2906,2953],"source":" To call the standard C function, use `PInvoke`."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Platform Invoke Examples<ept id=\"p1\">](http://msdn.microsoft.com/Library/15926806-f0b7-487e-93a6-4e9367ec689f)</ept>.","pos":[2954,3079],"source":" For more information, see [Platform Invoke Examples](http://msdn.microsoft.com/Library/15926806-f0b7-487e-93a6-4e9367ec689f)."},{"content":"See Also","pos":[3088,3096]},{"content":"Directory Control","pos":[3101,3118]}],"content":"---\ntitle: \"_getdrives | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\napiname: \n  - \"_getdrives\"\napilocation: \n  - \"msvcrt.dll\"\n  - \"msvcr80.dll\"\n  - \"msvcr90.dll\"\n  - \"msvcr100.dll\"\n  - \"msvcr100_clr0400.dll\"\n  - \"msvcr110.dll\"\n  - \"msvcr110_clr0400.dll\"\n  - \"msvcr120.dll\"\n  - \"msvcr120_clr0400.dll\"\n  - \"ucrtbase.dll\"\n  - \"api-ms-win-crt-filesystem-l1-1-0.dll\"\napitype: \"DLLExport\"\nf1_keywords: \n  - \"getdrives\"\n  - \"_getdrives\"\ndev_langs: \n  - \"C++\"\n  - \"C\"\nhelpviewer_keywords: \n  - \"_getdrives function\"\n  - \"getdrives function\"\n  - \"disk drives\"\nms.assetid: 869bb51f-4209-4328-846e-3aadebaceb9c\ncaps.latest.revision: 18\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# _getdrives\nReturns a bitmask that represents the currently available disk drives.  \n  \n> [!IMPORTANT]\n>  This API cannot be used in applications that execute in the [!INCLUDE[wrt](../../atl/reference/includes/wrt_md.md)]. For more information, see [CRT functions not supported with /ZW](http://msdn.microsoft.com/library/windows/apps/jj606124.aspx).  \n  \n## Syntax  \n  \n```  \nunsigned long _getdrives( void );  \n```  \n  \n## Return Value  \n If the function succeeds, the return value is a bitmask that represents the currently available disk drives. Bit position 0 (the least-significant bit) is drive A, bit position 1 is drive B, bit position 2 is drive C, and so on. If the function fails, the return value is zero. To get extended error information, call `GetLastError`.  \n  \n## Requirements  \n  \n|Routine|Required header|  \n|-------------|---------------------|  \n|`_getdrives`|\\<direct.h>|  \n  \n For more compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md).  \n  \n## Example  \n  \n```  \n  \n      // crt_getdrives.c  \n// This program retrives and lists out  \n// all the logical drives that are   \n// currently mounted on the machine.  \n  \n#include <windows.h>  \n#include <direct.h>  \n#include <stdio.h>  \n#include <tchar.h>  \n  \nTCHAR g_szDrvMsg[] = _T(\"A:\\n\");  \n  \nint main(int argc, char* argv[]) {  \n   ULONG uDriveMask = _getdrives();  \n  \n   if (uDriveMask == 0)  \n   {  \n      printf( \"_getdrives() failed with failure code: %d\\n\",  \n              GetLastError());  \n   }  \n   else  \n   {  \n      printf(\"The following logical drives are being used:\\n\");  \n  \n      while (uDriveMask) {  \n         if (uDriveMask & 1)  \n            printf(g_szDrvMsg);  \n  \n         ++g_szDrvMsg[0];  \n         uDriveMask >>= 1;  \n      }  \n   }  \n}  \n```  \n  \n```Output  \nThe following logical drives are being used:  \nA:  \nC:  \nD:  \nE:  \n```  \n  \n## NET Framework Equivalent  \n Not applicable. To call the standard C function, use `PInvoke`. For more information, see [Platform Invoke Examples](http://msdn.microsoft.com/Library/15926806-f0b7-487e-93a6-4e9367ec689f).  \n  \n## See Also  \n [Directory Control](../../c-runtime-library/directory-control.md)"}