{"nodes":[{"pos":[12,60],"content":"Cleaning Up Documents and Views | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Cleaning Up Documents and Views | Microsoft Docs","pos":[0,48]}]},{"content":"Cleaning Up Documents and Views","pos":[641,672]},{"content":"When a document is closing, the framework first calls its <bpt id=\"p1\">[</bpt>DeleteContents<ept id=\"p1\">](../mfc/reference/cdocument-class.md#cdocument__deletecontents)</ept> member function.","pos":[673,827],"source":"When a document is closing, the framework first calls its [DeleteContents](../mfc/reference/cdocument-class.md#cdocument__deletecontents) member function."},{"content":"If you allocated any memory on the heap during the course of the document's operation, <ph id=\"ph1\">`DeleteContents`</ph> is the best place to deallocate it.","pos":[828,967],"source":" If you allocated any memory on the heap during the course of the document's operation, `DeleteContents` is the best place to deallocate it."},{"pos":[975,1127],"content":"[!NOTE]\n You should not deallocate document data in the document's destructor. In the case of an SDI application, the document object might be reused.","leadings":["","> "],"nodes":[{"content":" You should not deallocate document data in the document's destructor. In the case of an SDI application, the document object might be reused.","pos":[8,150],"nodes":[{"content":"You should not deallocate document data in the document's destructor.","pos":[1,70]},{"content":"In the case of an SDI application, the document object might be reused.","pos":[71,142]}]}]},{"content":"You can override a view's destructor to deallocate any memory you allocated on the heap.","pos":[1134,1222]},{"content":"See Also","pos":[1231,1239]},{"content":"Initializing and Cleaning Up Documents and Views","pos":[1244,1292]}],"content":"---\ntitle: \"Cleaning Up Documents and Views | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"views, cleaning up\"\n  - \"documents, cleaning up\"\n  - \"documents, closing\"\nms.assetid: 0c454db2-3644-434d-9e53-8108a7aedfe1\ncaps.latest.revision: 9\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Cleaning Up Documents and Views\nWhen a document is closing, the framework first calls its [DeleteContents](../mfc/reference/cdocument-class.md#cdocument__deletecontents) member function. If you allocated any memory on the heap during the course of the document's operation, `DeleteContents` is the best place to deallocate it.  \n  \n> [!NOTE]\n>  You should not deallocate document data in the document's destructor. In the case of an SDI application, the document object might be reused.  \n  \n You can override a view's destructor to deallocate any memory you allocated on the heap.  \n  \n## See Also  \n [Initializing and Cleaning Up Documents and Views](../mfc/initializing-and-cleaning-up-documents-and-views.md)\n\n"}