{"nodes":[{"pos":[12,58],"content":"Implementing a Dual Interface | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Implementing a Dual Interface | Microsoft Docs","pos":[0,46]}]},{"content":"Implementing a Dual Interface","pos":[653,682]},{"content":"You can implement a dual interface using the <bpt id=\"p1\">[</bpt>IDispatchImpl<ept id=\"p1\">](../atl/reference/idispatchimpl-class.md)</ept> class, which provides a default implementation of the <ph id=\"ph1\">`IDispatch`</ph> methods in a dual interface.","pos":[683,879],"source":"You can implement a dual interface using the [IDispatchImpl](../atl/reference/idispatchimpl-class.md) class, which provides a default implementation of the `IDispatch` methods in a dual interface."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Implementing the IDispatch Interface<ept id=\"p1\">](http://msdn.microsoft.com/en-us/0e171f7f-0022-4e9b-ac8e-98192828e945)</ept>.","pos":[880,1015],"source":" For more information, see [Implementing the IDispatch Interface](http://msdn.microsoft.com/en-us/0e171f7f-0022-4e9b-ac8e-98192828e945)."},{"content":"To use this class:","pos":[1022,1040]},{"content":"Define your dual interface in a type library.","pos":[1050,1095]},{"pos":[1105,1246],"content":"Derive your class from a specialization of <ph id=\"ph1\">`IDispatchImpl`</ph> (pass information about the interface and type library as the template arguments).","source":"Derive your class from a specialization of `IDispatchImpl` (pass information about the interface and type library as the template arguments)."},{"pos":[1256,1351],"content":"Add an entry (or entries) to the COM map to expose the dual interface through <ph id=\"ph1\">`QueryInterface`</ph>.","source":"Add an entry (or entries) to the COM map to expose the dual interface through `QueryInterface`."},{"content":"Implement the vtable part of the interface in your class.","pos":[1361,1418]},{"content":"Ensure that the type library containing the interface definition is available to your objects at run time.","pos":[1428,1534]},{"content":"ATL Simple Object Wizard","pos":[1543,1567]},{"pos":[1571,1804],"content":"If you want to create a new interface and a new class to implement it, you can use the <bpt id=\"p1\">[</bpt>ATL Add Class dialog box<ept id=\"p1\">](../ide/add-class-dialog-box.md)</ept>, and then the <bpt id=\"p2\">[</bpt>ATL Simple Object Wizard<ept id=\"p2\">](../atl/reference/atl-simple-object-wizard.md)</ept>.","source":"If you want to create a new interface and a new class to implement it, you can use the [ATL Add Class dialog box](../ide/add-class-dialog-box.md), and then the [ATL Simple Object Wizard](../atl/reference/atl-simple-object-wizard.md)."},{"content":"Implement Interface Wizard","pos":[1813,1839]},{"pos":[1843,2092],"content":"If you have an existing interface, you can use the <bpt id=\"p1\">[</bpt>Implement Interface Wizard<ept id=\"p1\">](../atl/reference/adding-a-new-interface-in-an-atl-project.md)</ept> to add the necessary base class, COM map entries, and skeleton method implementations to an existing class.","source":"If you have an existing interface, you can use the [Implement Interface Wizard](../atl/reference/adding-a-new-interface-in-an-atl-project.md) to add the necessary base class, COM map entries, and skeleton method implementations to an existing class."},{"pos":[2100,2377],"content":"[!NOTE]\n You may need to adjust the generated base class so that the major and minor version numbers of the type library are passed as template arguments to your `IDispatchImpl` base class. The Implement Interface Wizard doesn't check the type library version number for you.","leadings":["","> "],"nodes":[{"content":" You may need to adjust the generated base class so that the major and minor version numbers of the type library are passed as template arguments to your `IDispatchImpl` base class. The Implement Interface Wizard doesn't check the type library version number for you.","pos":[8,275],"nodes":[{"content":"You may need to adjust the generated base class so that the major and minor version numbers of the type library are passed as template arguments to your <ph id=\"ph1\">`IDispatchImpl`</ph> base class.","pos":[1,181],"source":" You may need to adjust the generated base class so that the major and minor version numbers of the type library are passed as template arguments to your `IDispatchImpl` base class."},{"content":"The Implement Interface Wizard doesn't check the type library version number for you.","pos":[182,267]}]}]},{"content":"Implementing IDispatch","pos":[2386,2408]},{"content":"You can use an <ph id=\"ph1\">`IDispatchImpl`</ph> base class to provide an implementation of a dispinterface just by specifying the appropriate entry in the COM map (using the <bpt id=\"p1\">[</bpt>COM_INTERFACE_ENTRY2<ept id=\"p1\">](http://msdn.microsoft.com/library/3d48c53b-827b-42cc-9e22-594f7ea2bf0b)</ept> or <bpt id=\"p2\">[</bpt>COM_INTERFACE_ENTRY_IID<ept id=\"p2\">](http://msdn.microsoft.com/library/1bb69549-2099-4e20-ad5e-4c5a32f44e4b)</ept> macro) as long as you have a type library describing a corresponding dual interface.","pos":[2412,2849],"source":"You can use an `IDispatchImpl` base class to provide an implementation of a dispinterface just by specifying the appropriate entry in the COM map (using the [COM_INTERFACE_ENTRY2](http://msdn.microsoft.com/library/3d48c53b-827b-42cc-9e22-594f7ea2bf0b) or [COM_INTERFACE_ENTRY_IID](http://msdn.microsoft.com/library/1bb69549-2099-4e20-ad5e-4c5a32f44e4b) macro) as long as you have a type library describing a corresponding dual interface."},{"content":"It is quite common to implement the <ph id=\"ph1\">`IDispatch`</ph> interface this way, for example.","pos":[2850,2930],"source":" It is quite common to implement the `IDispatch` interface this way, for example."},{"content":"The ATL Simple Object Wizard and Implement Interface Wizard both assume that you intend to implement <ph id=\"ph1\">`IDispatch`</ph> in this way, so they will add the appropriate entry to the map.","pos":[2931,3107],"source":" The ATL Simple Object Wizard and Implement Interface Wizard both assume that you intend to implement `IDispatch` in this way, so they will add the appropriate entry to the map."},{"pos":[3115,3410],"content":"[!NOTE]\n ATL offers the [IDispEventImpl](../atl/reference/idispeventimpl-class.md) and [IDispEventSimpleImpl](../atl/reference/idispeventsimpleimpl-class.md) classes to help you implement dispinterfaces without requiring a type library containing the definition of a compatible dual interface.","leadings":["","> "],"nodes":[{"content":"ATL offers the <bpt id=\"p1\">[</bpt>IDispEventImpl<ept id=\"p1\">](../atl/reference/idispeventimpl-class.md)</ept> and <bpt id=\"p2\">[</bpt>IDispEventSimpleImpl<ept id=\"p2\">](../atl/reference/idispeventsimpleimpl-class.md)</ept> classes to help you implement dispinterfaces without requiring a type library containing the definition of a compatible dual interface.","pos":[9,293],"source":" ATL offers the [IDispEventImpl](../atl/reference/idispeventimpl-class.md) and [IDispEventSimpleImpl](../atl/reference/idispeventsimpleimpl-class.md) classes to help you implement dispinterfaces without requiring a type library containing the definition of a compatible dual interface."}]},{"content":"See Also","pos":[3419,3427]},{"content":"Dual Interfaces and ATL","pos":[3432,3455]}],"content":"---\ntitle: \"Implementing a Dual Interface | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"IDispatchImpl class, implementing dual interfaces\"\n  - \"dual interfaces, implementing\"\nms.assetid: d1da3633-b445-4dcd-8a0a-3efdafada3ea\ncaps.latest.revision: 12\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Implementing a Dual Interface\nYou can implement a dual interface using the [IDispatchImpl](../atl/reference/idispatchimpl-class.md) class, which provides a default implementation of the `IDispatch` methods in a dual interface. For more information, see [Implementing the IDispatch Interface](http://msdn.microsoft.com/en-us/0e171f7f-0022-4e9b-ac8e-98192828e945).  \n  \n To use this class:  \n  \n-   Define your dual interface in a type library.  \n  \n-   Derive your class from a specialization of `IDispatchImpl` (pass information about the interface and type library as the template arguments).  \n  \n-   Add an entry (or entries) to the COM map to expose the dual interface through `QueryInterface`.  \n  \n-   Implement the vtable part of the interface in your class.  \n  \n-   Ensure that the type library containing the interface definition is available to your objects at run time.  \n  \n## ATL Simple Object Wizard  \n If you want to create a new interface and a new class to implement it, you can use the [ATL Add Class dialog box](../ide/add-class-dialog-box.md), and then the [ATL Simple Object Wizard](../atl/reference/atl-simple-object-wizard.md).  \n  \n## Implement Interface Wizard  \n If you have an existing interface, you can use the [Implement Interface Wizard](../atl/reference/adding-a-new-interface-in-an-atl-project.md) to add the necessary base class, COM map entries, and skeleton method implementations to an existing class.  \n  \n> [!NOTE]\n>  You may need to adjust the generated base class so that the major and minor version numbers of the type library are passed as template arguments to your `IDispatchImpl` base class. The Implement Interface Wizard doesn't check the type library version number for you.  \n  \n## Implementing IDispatch  \n You can use an `IDispatchImpl` base class to provide an implementation of a dispinterface just by specifying the appropriate entry in the COM map (using the [COM_INTERFACE_ENTRY2](http://msdn.microsoft.com/library/3d48c53b-827b-42cc-9e22-594f7ea2bf0b) or [COM_INTERFACE_ENTRY_IID](http://msdn.microsoft.com/library/1bb69549-2099-4e20-ad5e-4c5a32f44e4b) macro) as long as you have a type library describing a corresponding dual interface. It is quite common to implement the `IDispatch` interface this way, for example. The ATL Simple Object Wizard and Implement Interface Wizard both assume that you intend to implement `IDispatch` in this way, so they will add the appropriate entry to the map.  \n  \n> [!NOTE]\n>  ATL offers the [IDispEventImpl](../atl/reference/idispeventimpl-class.md) and [IDispEventSimpleImpl](../atl/reference/idispeventsimpleimpl-class.md) classes to help you implement dispinterfaces without requiring a type library containing the definition of a compatible dual interface.  \n  \n## See Also  \n [Dual Interfaces and ATL](../atl/dual-interfaces-and-atl.md)\n\n"}