{"nodes":[{"pos":[12,53],"content":"ARM Assembler Directives | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"ARM Assembler Directives | Microsoft Docs","pos":[0,41]}]},{"content":"ARM Assembler Directives","pos":[533,557]},{"content":"For the most part, the Microsoft ARM assembler uses the ARM assembly language, which is documented in Chapter 7 of the <bpt id=\"p1\">[</bpt>ARM assembler tools guide<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=246102)</ept>.","pos":[558,752],"source":"For the most part, the Microsoft ARM assembler uses the ARM assembly language, which is documented in Chapter 7 of the [ARM assembler tools guide](http://go.microsoft.com/fwlink/?LinkId=246102)."},{"content":"However, the Microsoft implementations of some assembly directives differ from the ARM assembly directives.","pos":[753,860]},{"content":"This article explains the differences.","pos":[861,899]},{"content":"Microsoft Implementations of ARM Assembly Directives","pos":[908,960]},{"content":"AREA","pos":[964,968]},{"content":"The Microsoft ARM assembler supports these AREA attributes: ALIGN, CODE, CODEALIGN, DATA, NOINIT, READONLY, READWRITE, THUMB, ARM.","pos":[972,1102]},{"pos":[1109,1235],"content":"All except THUMB and ARM work as documented in the <bpt id=\"p1\">[</bpt>ARM assembler tools guide<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=246102)</ept>.","source":"All except THUMB and ARM work as documented in the [ARM assembler tools guide](http://go.microsoft.com/fwlink/?LinkId=246102)."},{"content":"In the Microsoft ARM assembler, THUMB indicates that a CODE section contains Thumb code, and is the default for CODE sections.","pos":[1242,1368]},{"content":"ARM indicates that the section contains ARM code.","pos":[1370,1419]},{"content":"ATTR","pos":[1426,1430]},{"content":"Not supported.","pos":[1434,1448]},{"content":"CODE16","pos":[1455,1461]},{"content":"Not supported because it implies pre-UAL Thumb syntax, which the Microsoft ARM assembler does not allow.","pos":[1465,1569]},{"content":"Use the THUMB directive instead, along with UAL syntax.","pos":[1571,1626]},{"content":"COMMON","pos":[1633,1639]},{"content":"Specification of an alignment for the common region is not supported.","pos":[1643,1712]},{"content":"DCDO","pos":[1719,1723]},{"content":"Not supported.","pos":[1727,1741]},{"content":"DN, QN, SN","pos":[1748,1758]},{"content":"Specification of a type or a lane on the register alias is not supported.","pos":[1762,1835]},{"content":"ENTRY","pos":[1842,1847]},{"content":"Not supported.","pos":[1851,1865]},{"content":"EQU","pos":[1872,1875]},{"content":"Specification of a type for the defined symbol is not supported.","pos":[1879,1943]},{"content":"EXPORT and GLOBAL","pos":[1950,1967]},{"content":"is the symbol to be exported.","pos":[2014,2043]},{"content":", if specified, can be either <ph id=\"ph1\">`[DATA]`</ph> to indicate that the symbol points to data or <ph id=\"ph2\">`[FUNC]`</ph> to indicate that the symbol points to code.","pos":[2053,2190],"source":", if specified, can be either `[DATA]` to indicate that the symbol points to data or `[FUNC]` to indicate that the symbol points to code."},{"content":"GLOBAL is a synonym for EXPORT.","pos":[2197,2228]},{"content":"EXPORTAS","pos":[2235,2243]},{"content":"Not supported.","pos":[2247,2261]},{"content":"FRAME","pos":[2268,2273]},{"content":"Not supported.","pos":[2277,2291]},{"content":"FUNCTION and PROC","pos":[2298,2315]},{"content":"Although the assembly syntax supports the specification of a custom calling convention on procedures by listing the registers that are caller-save and those that are callee-save, the Microsoft ARM assembler accepts the syntax but ignores the register lists.","pos":[2319,2576]},{"content":"The debug information that is produced by the assembler supports only the default calling convention.","pos":[2578,2679]},{"content":"IMPORT and EXTERN","pos":[2686,2703]},{"pos":[2766,2807],"content":"is the name of the symbol to be imported."},{"content":"If WEAK <ph id=\"ph1\">`alias`</ph> is specified, it indicates that <ph id=\"ph2\">`sym`</ph> is a weak external.","pos":[2814,2887],"source":"If WEAK `alias` is specified, it indicates that `sym` is a weak external."},{"content":"If no definition for it is found at link time, then all references to it bind instead to <ph id=\"ph1\">`alias`</ph>.","pos":[2888,2985],"source":" If no definition for it is found at link time, then all references to it bind instead to `alias`."},{"content":"If TYPE  <ph id=\"ph1\">`t`</ph> is specified, then <ph id=\"ph2\">`t`</ph> indicates how the linker should attempt to resolve <ph id=\"ph3\">`sym`</ph>.","pos":[2992,3085],"source":"If TYPE  `t` is specified, then `t` indicates how the linker should attempt to resolve `sym`."},{"content":"These values for <ph id=\"ph1\">`t`</ph> are possible:","pos":[3087,3121],"source":"  These values for `t` are possible: "},{"content":"1—Do not perform a library search for","pos":[3125,3162]},{"content":"2—Perform a library search for","pos":[3171,3201]},{"content":"3—<ph id=\"ph1\">`sym`</ph> is an alias for <ph id=\"ph2\">`alias`</ph> (default)","pos":[3210,3251],"source":"3—`sym` is an alias for `alias` (default)"},{"pos":[3258,3379],"content":"EXTERN is a synonym for IMPORT, except that <ph id=\"ph1\">`sym`</ph> is imported only if there are references to it in the current assembly.","source":"EXTERN is a synonym for IMPORT, except that `sym` is imported only if there are references to it in the current assembly."},{"content":"MACRO","pos":[3386,3391]},{"content":"The use of a variable to hold the condition code of a macro is not supported.","pos":[3395,3472]},{"content":"Default values for macro parameters are not supported.","pos":[3473,3527]},{"content":"NOFP","pos":[3534,3538]},{"content":"Not supported.","pos":[3542,3556]},{"content":"OPT, TTL, SUBT","pos":[3563,3577]},{"content":"Not supported because the Microsoft ARM assembler does not produce listings.","pos":[3581,3657]},{"content":"PRESERVE8","pos":[3664,3673]},{"content":"Not supported.","pos":[3677,3691]},{"content":"RELOC","pos":[3698,3703]},{"content":"can only follow an instruction or a data definition directive.","pos":[3717,3779]},{"content":"There is no \"anonymous symbol\" that can be relocated.","pos":[3780,3833]},{"content":"REQUIRE","pos":[3840,3847]},{"content":"Not supported.","pos":[3851,3865]},{"content":"REQUIRE8","pos":[3872,3880]},{"content":"Not supported.","pos":[3884,3898]},{"content":"THUMBX","pos":[3905,3911]},{"content":"Not supported because the Microsoft ARM assembler does not support the Thumb-2EE instruction set.","pos":[3915,4012]},{"content":"See Also","pos":[4021,4029]},{"content":"ARM Assembler Command-Line Reference","pos":[4034,4070]},{"content":"ARM Assembler Diagnostic Messages","pos":[4138,4171]}],"content":"---\ntitle: \"ARM Assembler Directives | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"C++\"\nms.assetid: 9cfa8896-ec10-4e77-855a-3135c40d7d2a\ncaps.latest.revision: 5\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# ARM Assembler Directives\nFor the most part, the Microsoft ARM assembler uses the ARM assembly language, which is documented in Chapter 7 of the [ARM assembler tools guide](http://go.microsoft.com/fwlink/?LinkId=246102). However, the Microsoft implementations of some assembly directives differ from the ARM assembly directives. This article explains the differences.  \n  \n## Microsoft Implementations of ARM Assembly Directives  \n AREA  \n The Microsoft ARM assembler supports these AREA attributes: ALIGN, CODE, CODEALIGN, DATA, NOINIT, READONLY, READWRITE, THUMB, ARM.  \n  \n All except THUMB and ARM work as documented in the [ARM assembler tools guide](http://go.microsoft.com/fwlink/?LinkId=246102).  \n  \n In the Microsoft ARM assembler, THUMB indicates that a CODE section contains Thumb code, and is the default for CODE sections.  ARM indicates that the section contains ARM code.  \n  \n ATTR  \n Not supported.  \n  \n CODE16  \n Not supported because it implies pre-UAL Thumb syntax, which the Microsoft ARM assembler does not allow.  Use the THUMB directive instead, along with UAL syntax.  \n  \n COMMON  \n Specification of an alignment for the common region is not supported.  \n  \n DCDO  \n Not supported.  \n  \n DN, QN, SN  \n Specification of a type or a lane on the register alias is not supported.  \n  \n ENTRY  \n Not supported.  \n  \n EQU  \n Specification of a type for the defined symbol is not supported.  \n  \n EXPORT and GLOBAL  \n ```  \nEXPORTsym {[type]}  \n```  \n  \n `sym` is the symbol to be exported.  `[type]`, if specified, can be either `[DATA]` to indicate that the symbol points to data or `[FUNC]` to indicate that the symbol points to code.  \n  \n GLOBAL is a synonym for EXPORT.  \n  \n EXPORTAS  \n Not supported.  \n  \n FRAME  \n Not supported.  \n  \n FUNCTION and PROC  \n Although the assembly syntax supports the specification of a custom calling convention on procedures by listing the registers that are caller-save and those that are callee-save, the Microsoft ARM assembler accepts the syntax but ignores the register lists.  The debug information that is produced by the assembler supports only the default calling convention.  \n  \n IMPORT and EXTERN  \n ```  \nIMPORT sym{, WEAK alias{, TYPE t}}  \n```  \n  \n `sym` is the name of the symbol to be imported.  \n  \n If WEAK `alias` is specified, it indicates that `sym` is a weak external. If no definition for it is found at link time, then all references to it bind instead to `alias`.  \n  \n If TYPE  `t` is specified, then `t` indicates how the linker should attempt to resolve `sym`.  These values for `t` are possible:   \n1—Do not perform a library search for `sym`  \n2—Perform a library search for `sym`  \n3—`sym` is an alias for `alias` (default)  \n  \n EXTERN is a synonym for IMPORT, except that `sym` is imported only if there are references to it in the current assembly.  \n  \n MACRO  \n The use of a variable to hold the condition code of a macro is not supported. Default values for macro parameters are not supported.  \n  \n NOFP  \n Not supported.  \n  \n OPT, TTL, SUBT  \n Not supported because the Microsoft ARM assembler does not produce listings.  \n  \n PRESERVE8  \n Not supported.  \n  \n RELOC  \n `RELOC n` can only follow an instruction or a data definition directive. There is no \"anonymous symbol\" that can be relocated.  \n  \n REQUIRE  \n Not supported.  \n  \n REQUIRE8  \n Not supported.  \n  \n THUMBX  \n Not supported because the Microsoft ARM assembler does not support the Thumb-2EE instruction set.  \n  \n## See Also  \n [ARM Assembler Command-Line Reference](../../assembler/arm/arm-assembler-command-line-reference.md)   \n [ARM Assembler Diagnostic Messages](../../assembler/arm/arm-assembler-diagnostic-messages.md)"}