{"nodes":[{"pos":[12,49],"content":"Compiler Error C2039 | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Compiler Error C2039 | Microsoft Docs","pos":[0,37]}]},{"content":"Compiler Error C2039","pos":[624,644]},{"content":"'identifier1' : is not a member of 'identifier2'","pos":[645,693]},{"content":"The code incorrectly calls or refers to a member of a structure, class, or union.","pos":[700,781]},{"content":"Example","pos":[790,797]},{"content":"The following sample generates C2039.","pos":[801,838]},{"content":"Example","pos":[1022,1029]},{"content":"The following sample generates C2039.","pos":[1033,1070]},{"content":"Example","pos":[1364,1371]},{"content":"The following sample generates C2039.","pos":[1375,1412]},{"content":"Example","pos":[1672,1679]},{"content":"C2039 can also occur if you attempt to access a default indexer incorrectly.","pos":[1683,1759]},{"content":"The following sample defines a component authored in C#.","pos":[1760,1816]},{"content":"Example","pos":[2049,2056]},{"content":"The following sample generates C2039.","pos":[2060,2097]},{"content":"Example","pos":[2383,2390]},{"content":"C2039 can also occur if you use generics.","pos":[2394,2435]},{"content":"The following sample generates C2039.","pos":[2436,2473]},{"content":"Example","pos":[2787,2794]},{"content":"C2039 can occur when you try to release managed or unmanaged resources.","pos":[2798,2869]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Destructors and finalizers<ept id=\"p1\">](../../dotnet/how-to-define-and-consume-classes-and-structs-cpp-cli.md#BKMK_Destructors_and_finalizers)</ept>.","pos":[2870,3028],"source":" For more information, see [Destructors and finalizers](../../dotnet/how-to-define-and-consume-classes-and-structs-cpp-cli.md#BKMK_Destructors_and_finalizers)."},{"content":"The following sample generates C2039.","pos":[3035,3072]}],"content":"---\ntitle: \"Compiler Error C2039 | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"error-reference\"\nf1_keywords: \n  - \"C2039\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"C2039\"\nms.assetid: f9dfd521-9b36-4454-a69c-d63f45b606bb\ncaps.latest.revision: 19\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"ru-ru\"\n  - \"zh-cn\"\n  - \"zh-tw\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"tr-tr\"\n---\n# Compiler Error C2039\n'identifier1' : is not a member of 'identifier2'  \n  \n The code incorrectly calls or refers to a member of a structure, class, or union.  \n  \n## Example  \n The following sample generates C2039.  \n  \n```  \n// C2039.cpp  \nstruct S {  \n   int mem0;  \n} s, *pS = &s;  \n  \nint main() {  \n   pS->mem1 = 0;   // C2039 mem1 is not a member  \n   pS->mem0 = 0;   // OK  \n}  \n```  \n  \n## Example  \n The following sample generates C2039.  \n  \n```  \n// C2039_b.cpp  \n// compile with: /clr  \nusing namespace System;  \nint main() {  \n   Console::WriteLine( \"{0}\", DateTime::get_Now());   // C2039  \n   Console::WriteLine( \"{0}\", DateTime::Now);   // OK  \n   Console::WriteLine( \"{0}\", DateTime::Now::get());   // OK  \n}  \n```  \n  \n## Example  \n The following sample generates C2039.  \n  \n```  \n// C2039_c.cpp  \n// compile with: /clr /c  \nref struct S {  \n   property int Count {  \n     int get();  \n     void set(int i){}  \n   };  \n};  \n  \nint S::get_Count() { return 0; }   // C2039  \nint S::Count::get() { return 0; }   // OK  \n```  \n  \n## Example  \n C2039 can also occur if you attempt to access a default indexer incorrectly. The following sample defines a component authored in C#.  \n  \n```  \n// C2039_d.cs  \n// compile with: /target:library  \n// a C# program  \n[System.Reflection.DefaultMember(\"Item\")]  \npublic class B {  \n   public int Item {  \n      get { return 13; }  \n      set {}  \n   }  \n};  \n```  \n  \n## Example  \n The following sample generates C2039.  \n  \n```  \n// C2039_e.cpp  \n// compile with: /clr  \nusing namespace System;  \n#using \"c2039_d.dll\"  \n  \nint main() {  \n   B ^ b = gcnew B;  \n   int n = b->default;   // C2039  \n   // try the following line instead  \n   // int n = b->Item;  \n   Console::WriteLine(n);  \n}  \n```  \n  \n## Example  \n C2039 can also occur if you use generics. The following sample generates C2039.  \n  \n```  \n// C2039_f.cpp  \n// compile with: /clr  \ninterface class I {};  \n  \nref struct R : public I {  \n   virtual void f3() {}  \n};  \n  \ngeneric <typename T>  \nwhere T : I  \nvoid f(T t) {  \n   t->f3();   // C2039  \n   safe_cast<R^>(t)->f3();   // OK  \n}  \n  \nint main() {  \n   f(gcnew R());  \n}  \n```  \n  \n## Example  \n C2039 can occur when you try to release managed or unmanaged resources. For more information, see [Destructors and finalizers](../../dotnet/how-to-define-and-consume-classes-and-structs-cpp-cli.md#BKMK_Destructors_and_finalizers).  \n  \n The following sample generates C2039.  \n  \n```  \n// C2039_g.cpp  \n// compile with: /clr  \nusing namespace System;  \nusing namespace System::Threading;  \n  \nvoid CheckStatus( Object^ stateInfo ) {}  \n  \nint main() {  \n   ManualResetEvent^ event = gcnew ManualResetEvent( false );     \n   TimerCallback^ timerDelegate = gcnew TimerCallback( &CheckStatus );  \n   Timer^ stateTimer = gcnew Timer( timerDelegate, event, 1000, 250 );  \n  \n   ((IDisposable ^)stateTimer)->Dispose();   // C2039  \n  \n   stateTimer->~Timer();   // OK  \n}  \n```"}