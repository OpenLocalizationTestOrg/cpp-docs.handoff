{"nodes":[{"pos":[12,66],"content":"IOleInPlaceObjectWindowlessImpl Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"IOleInPlaceObjectWindowlessImpl Class | Microsoft Docs","pos":[0,54]}]},{"content":"IOleInPlaceObjectWindowlessImpl Class","pos":[879,916]},{"pos":[917,1080],"content":"This class implements <bpt id=\"p1\">**</bpt>IUnknown<ept id=\"p1\">**</ept> and provides methods that enable a windowless control to receive window messages and to participate in drag-and-drop operations.","source":"This class implements **IUnknown** and provides methods that enable a windowless control to receive window messages and to participate in drag-and-drop operations."},{"pos":[1088,1238],"content":"[!IMPORTANT]\n This class and its members cannot be used in applications that execute in the [!INCLUDE[wrt](../../atl/reference/includes/wrt_md.md)].","leadings":["","> "],"nodes":[{"content":"This class and its members cannot be used in applications that execute in the <ph id=\"ph1\">[!INCLUDE[wrt](../../atl/reference/includes/wrt_md.md)]</ph>.","pos":[14,148],"source":" This class and its members cannot be used in applications that execute in the [!INCLUDE[wrt](../../atl/reference/includes/wrt_md.md)]."}]},{"content":"Syntax","pos":[1247,1253]},{"content":"Parameters","pos":[1334,1344]},{"content":"Your class, derived from <ph id=\"ph1\">`IOleInPlaceObjectWindowlessImpl`</ph>.","pos":[1355,1414],"source":" Your class, derived from `IOleInPlaceObjectWindowlessImpl`."},{"content":"Members","pos":[1423,1430]},{"content":"Public Methods","pos":[1440,1454]},{"content":"Name","pos":[1461,1465]},{"content":"Description","pos":[1466,1477]},{"content":"IOleInPlaceObjectWindowlessImpl::ContextSensitiveHelp","pos":[1516,1569]},{"content":"Enables context-sensitive help.","pos":[1627,1658]},{"content":"The ATL implementation returns <bpt id=\"p1\">**</bpt>E_NOTIMPL<ept id=\"p1\">**</ept>.","pos":[1659,1704],"source":" The ATL implementation returns **E_NOTIMPL**."},{"content":"IOleInPlaceObjectWindowlessImpl::GetDropTarget","pos":[1710,1756]},{"content":"Supplies the <ph id=\"ph1\">`IDropTarget`</ph> interface for an in-place active, windowless object that supports drag and drop.","pos":[1807,1914],"source":"Supplies the `IDropTarget` interface for an in-place active, windowless object that supports drag and drop."},{"content":"The ATL implementation returns <bpt id=\"p1\">**</bpt>E_NOTIMPL<ept id=\"p1\">**</ept>.","pos":[1915,1960],"source":" The ATL implementation returns **E_NOTIMPL**."},{"content":"IOleInPlaceObjectWindowlessImpl::GetWindow","pos":[1966,2008]},{"content":"Gets a window handle.","pos":[2055,2076]},{"content":"IOleInPlaceObjectWindowlessImpl::InPlaceDeactivate","pos":[2082,2132]},{"content":"Deactivates an active in-place control.","pos":[2187,2226]},{"content":"IOleInPlaceObjectWindowlessImpl::OnWindowMessage","pos":[2232,2280]},{"content":"Dispatches a message from the container to a windowless control that is in-place active.","pos":[2333,2421]},{"content":"IOleInPlaceObjectWindowlessImpl::ReactivateAndUndo","pos":[2427,2477]},{"content":"Reactivates a previously deactivated control.","pos":[2532,2577]},{"content":"The ATL implementation returns <bpt id=\"p1\">**</bpt>E_NOTIMPL<ept id=\"p1\">**</ept>.","pos":[2578,2623],"source":" The ATL implementation returns **E_NOTIMPL**."},{"content":"IOleInPlaceObjectWindowlessImpl::SetObjectRects","pos":[2629,2676]},{"content":"Indicates what part of the in-place control is visible.","pos":[2728,2783]},{"content":"IOleInPlaceObjectWindowlessImpl::UIDeactivate","pos":[2789,2834]},{"content":"Deactivates and removes the user interface that supports in-place activation.","pos":[2884,2961]},{"content":"Remarks","pos":[2971,2978]},{"content":"The <bpt id=\"p1\">[</bpt>IOleInPlaceObject<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms692646)</ept> interface manages the reactivation and deactivation of in-place controls and determines how much of the control should be visible.","pos":[2982,3196],"source":"The [IOleInPlaceObject](http://msdn.microsoft.com/library/windows/desktop/ms692646) interface manages the reactivation and deactivation of in-place controls and determines how much of the control should be visible."},{"content":"The <bpt id=\"p1\">[</bpt>IOleInPlaceObjectWindowless<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms687304)</ept> interface enables a windowless control to receive window messages and to participate in drag-and-drop operations.","pos":[3197,3404],"source":" The [IOleInPlaceObjectWindowless](http://msdn.microsoft.com/library/windows/desktop/ms687304) interface enables a windowless control to receive window messages and to participate in drag-and-drop operations."},{"content":"Class <ph id=\"ph1\">`IOleInPlaceObjectWindowlessImpl`</ph> provides a default implementation of <ph id=\"ph2\">`IOleInPlaceObject`</ph> and <ph id=\"ph3\">`IOleInPlaceObjectWindowless`</ph> and implements <bpt id=\"p1\">**</bpt>IUnknown<ept id=\"p1\">**</ept> by sending information to the dump device in debug builds.","pos":[3405,3622],"source":" Class `IOleInPlaceObjectWindowlessImpl` provides a default implementation of `IOleInPlaceObject` and `IOleInPlaceObjectWindowless` and implements **IUnknown** by sending information to the dump device in debug builds."},{"pos":[3629,3790],"content":"<bpt id=\"p1\">**</bpt>Related Articles<ept id=\"p1\">**</ept> <bpt id=\"p2\">[</bpt>ATL Tutorial<ept id=\"p2\">](../../atl/active-template-library-atl-tutorial.md)</ept>, <bpt id=\"p3\">[</bpt>Creating an ATL Project<ept id=\"p3\">](../../atl/reference/creating-an-atl-project.md)</ept>","source":"**Related Articles** [ATL Tutorial](../../atl/active-template-library-atl-tutorial.md), [Creating an ATL Project](../../atl/reference/creating-an-atl-project.md)"},{"content":"Inheritance Hierarchy","pos":[3799,3820]},{"content":"Requirements","pos":[3902,3914]},{"pos":[3918,3938],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> atlctl.h","source":"**Header:** atlctl.h"},{"pos":[4018,4071],"content":"IOleInPlaceObjectWindowlessImpl::ContextSensitiveHelp"},{"pos":[4075,4097],"content":"Returns <bpt id=\"p1\">**</bpt>E_NOTIMPL<ept id=\"p1\">**</ept>.","source":"Returns **E_NOTIMPL**."},{"content":"Remarks","pos":[4169,4176]},{"pos":[4180,4338],"content":"See <bpt id=\"p1\">[</bpt>IOleWindow::ContextSensitiveHelp<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms680059)</ept> in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"See [IOleWindow::ContextSensitiveHelp](http://msdn.microsoft.com/library/windows/desktop/ms680059) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"pos":[4411,4457],"content":"IOleInPlaceObjectWindowlessImpl::GetDropTarget"},{"pos":[4461,4483],"content":"Returns <bpt id=\"p1\">**</bpt>E_NOTIMPL<ept id=\"p1\">**</ept>.","source":"Returns **E_NOTIMPL**."},{"content":"Remarks","pos":[4557,4564]},{"pos":[4568,4736],"content":"See <bpt id=\"p1\">[</bpt>IOleInPlaceObjectWindowless::GetDropTarget<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms678535)</ept> in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"See [IOleInPlaceObjectWindowless::GetDropTarget](http://msdn.microsoft.com/library/windows/desktop/ms678535) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"pos":[4805,4847],"content":"IOleInPlaceObjectWindowlessImpl::GetWindow"},{"content":"The container calls this function to get the window handle of the control.","pos":[4851,4925]},{"content":"Remarks","pos":[4980,4987]},{"content":"Some containers will not work with a control that has been windowless, even if it is currently windowed.","pos":[4991,5095]},{"content":"In ATL's implementation, if the control class's data member <ph id=\"ph1\">`m_bWasOnceWindowless`</ph> is <bpt id=\"p1\">**</bpt>TRUE<ept id=\"p1\">**</ept>, the function returns <bpt id=\"p2\">**</bpt>E_FAIL<ept id=\"p2\">**</ept>.","pos":[5096,5224],"source":" In ATL's implementation, if the control class's data member `m_bWasOnceWindowless` is **TRUE**, the function returns **E_FAIL**."},{"content":"Otherwise, if <bpt id=\"p1\">*</bpt>phwnd<ept id=\"p1\">*</ept> is not <bpt id=\"p2\">**</bpt>NULL<ept id=\"p2\">**</ept>, <ph id=\"ph1\">`GetWindow`</ph> sets <ph id=\"ph2\">\\*</ph> <bpt id=\"p3\">*</bpt>phwnd<ept id=\"p3\">*</ept> to the control class's data member <ph id=\"ph3\">`m_hWnd`</ph> and returns <ph id=\"ph4\">`S_OK`</ph>.","pos":[5225,5355],"source":" Otherwise, if *phwnd* is not **NULL**, `GetWindow` sets \\* *phwnd* to the control class's data member `m_hWnd` and returns `S_OK`."},{"pos":[5362,5509],"content":"See <bpt id=\"p1\">[</bpt>IOleWindow::GetWindow<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms687282)</ept> in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"See [IOleWindow::GetWindow](http://msdn.microsoft.com/library/windows/desktop/ms687282) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"pos":[5586,5636],"content":"IOleInPlaceObjectWindowlessImpl::InPlaceDeactivate"},{"content":"Called by the container to deactivate an in-place active control.","pos":[5640,5705]},{"content":"Remarks","pos":[5768,5775]},{"content":"This method performs a full or partial deactivation depending on the state of the control.","pos":[5779,5869]},{"content":"If necessary, the control's user interface is deactivated, and the control's window, if any, is destroyed.","pos":[5870,5976]},{"content":"The container is notified that the control is no longer active in place.","pos":[5977,6049]},{"content":"The <bpt id=\"p1\">**</bpt>IOleInPlaceUIWindow<ept id=\"p1\">**</ept> interface used by the container to negotiate menus and border space is released.","pos":[6050,6158],"source":" The **IOleInPlaceUIWindow** interface used by the container to negotiate menus and border space is released."},{"pos":[6165,6327],"content":"See <bpt id=\"p1\">[</bpt>IOleInPlaceObject::InPlaceDeactivate<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms679700)</ept> in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"See [IOleInPlaceObject::InPlaceDeactivate](http://msdn.microsoft.com/library/windows/desktop/ms679700) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"pos":[6402,6450],"content":"IOleInPlaceObjectWindowlessImpl::OnWindowMessage"},{"content":"Dispatches a message from a container to a windowless control that is in-place active.","pos":[6454,6540]},{"content":"Remarks","pos":[6668,6675]},{"pos":[6679,6849],"content":"See <bpt id=\"p1\">[</bpt>IOleInPlaceObjectWindowless::OnWindowMessage<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms693783)</ept> in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"See [IOleInPlaceObjectWindowless::OnWindowMessage](http://msdn.microsoft.com/library/windows/desktop/ms693783) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"pos":[6926,6976],"content":"IOleInPlaceObjectWindowlessImpl::ReactivateAndUndo"},{"pos":[6980,7002],"content":"Returns <bpt id=\"p1\">**</bpt>E_NOTIMPL<ept id=\"p1\">**</ept>.","source":"Returns **E_NOTIMPL**."},{"content":"Remarks","pos":[7054,7061]},{"pos":[7065,7227],"content":"See <bpt id=\"p1\">[</bpt>IOleInPlaceObject::ReactivateAndUndo<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms691372)</ept> in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"See [IOleInPlaceObject::ReactivateAndUndo](http://msdn.microsoft.com/library/windows/desktop/ms691372) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"pos":[7301,7348],"content":"IOleInPlaceObjectWindowlessImpl::SetObjectRects"},{"content":"Called by the container to inform the control that its size and/or position has changed.","pos":[7352,7440]},{"content":"Remarks","pos":[7529,7536]},{"content":"Updates the control's <ph id=\"ph1\">`m_rcPos`</ph> data member and the control display.","pos":[7540,7608],"source":"Updates the control's `m_rcPos` data member and the control display."},{"content":"Only the part of the control that intersects the clip region is displayed.","pos":[7609,7683]},{"content":"If a control's display was previously clipped but the clipping has been removed, this function can be called to redraw a full view of the control.","pos":[7684,7830]},{"pos":[7837,7996],"content":"See <bpt id=\"p1\">[</bpt>IOleInPlaceObject::SetObjectRects<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms683767)</ept> in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"See [IOleInPlaceObject::SetObjectRects](http://msdn.microsoft.com/library/windows/desktop/ms683767) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"pos":[8068,8113],"content":"IOleInPlaceObjectWindowlessImpl::UIDeactivate"},{"content":"Deactivates and removes the control's user interface that supports in-place activation.","pos":[8117,8204]},{"content":"Remarks","pos":[8251,8258]},{"content":"Sets the control class's data member <ph id=\"ph1\">`m_bUIActive`</ph> to <bpt id=\"p1\">**</bpt>FALSE<ept id=\"p1\">**</ept>.","pos":[8262,8326],"source":"Sets the control class's data member `m_bUIActive` to **FALSE**."},{"content":"The ATL implementation of this function always returns <ph id=\"ph1\">`S_OK`</ph>.","pos":[8327,8389],"source":" The ATL implementation of this function always returns `S_OK`."},{"pos":[8396,8553],"content":"See <bpt id=\"p1\">[</bpt>IOleInPlaceObject::UIDeactivate<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms693348)</ept> in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"See [IOleInPlaceObject::UIDeactivate](http://msdn.microsoft.com/library/windows/desktop/ms693348) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"content":"See Also","pos":[8562,8570]},{"content":"CComControl Class","pos":[8575,8592]},{"content":"Class Overview","pos":[8641,8655]}],"content":"---\ntitle: \"IOleInPlaceObjectWindowlessImpl Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"IOleInPlaceObjectWindowlessImpl\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"IOleInPlaceObjectWindowless, ATL implementation\"\n  - \"activation [C++], ATL\"\n  - \"IOleInPlaceObjectWindowlessImpl class\"\n  - \"ActiveX controls [C++], communication between container and control\"\n  - \"controls [ATL], windowless\"\n  - \"deactivating ATL\"\nms.assetid: a2e0feb4-bc59-4adf-aab2-105457bbdbb4\ncaps.latest.revision: 20\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# IOleInPlaceObjectWindowlessImpl Class\nThis class implements **IUnknown** and provides methods that enable a windowless control to receive window messages and to participate in drag-and-drop operations.  \n  \n> [!IMPORTANT]\n>  This class and its members cannot be used in applications that execute in the [!INCLUDE[wrt](../../atl/reference/includes/wrt_md.md)].  \n  \n## Syntax  \n  \n```\ntemplate<class  T>\nclass IOleInPlaceObjectWindowlessImpl\n```  \n  \n#### Parameters  \n `T`  \n Your class, derived from `IOleInPlaceObjectWindowlessImpl`.  \n  \n## Members  \n  \n### Public Methods  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[IOleInPlaceObjectWindowlessImpl::ContextSensitiveHelp](#ioleinplaceobjectwindowlessimpl__contextsensitivehelp)|Enables context-sensitive help. The ATL implementation returns **E_NOTIMPL**.|  \n|[IOleInPlaceObjectWindowlessImpl::GetDropTarget](#ioleinplaceobjectwindowlessimpl__getdroptarget)|Supplies the `IDropTarget` interface for an in-place active, windowless object that supports drag and drop. The ATL implementation returns **E_NOTIMPL**.|  \n|[IOleInPlaceObjectWindowlessImpl::GetWindow](#ioleinplaceobjectwindowlessimpl__getwindow)|Gets a window handle.|  \n|[IOleInPlaceObjectWindowlessImpl::InPlaceDeactivate](#ioleinplaceobjectwindowlessimpl__inplacedeactivate)|Deactivates an active in-place control.|  \n|[IOleInPlaceObjectWindowlessImpl::OnWindowMessage](#ioleinplaceobjectwindowlessimpl__onwindowmessage)|Dispatches a message from the container to a windowless control that is in-place active.|  \n|[IOleInPlaceObjectWindowlessImpl::ReactivateAndUndo](#ioleinplaceobjectwindowlessimpl__reactivateandundo)|Reactivates a previously deactivated control. The ATL implementation returns **E_NOTIMPL**.|  \n|[IOleInPlaceObjectWindowlessImpl::SetObjectRects](#ioleinplaceobjectwindowlessimpl__setobjectrects)|Indicates what part of the in-place control is visible.|  \n|[IOleInPlaceObjectWindowlessImpl::UIDeactivate](#ioleinplaceobjectwindowlessimpl__uideactivate)|Deactivates and removes the user interface that supports in-place activation.|  \n  \n## Remarks  \n The [IOleInPlaceObject](http://msdn.microsoft.com/library/windows/desktop/ms692646) interface manages the reactivation and deactivation of in-place controls and determines how much of the control should be visible. The [IOleInPlaceObjectWindowless](http://msdn.microsoft.com/library/windows/desktop/ms687304) interface enables a windowless control to receive window messages and to participate in drag-and-drop operations. Class `IOleInPlaceObjectWindowlessImpl` provides a default implementation of `IOleInPlaceObject` and `IOleInPlaceObjectWindowless` and implements **IUnknown** by sending information to the dump device in debug builds.  \n  \n **Related Articles** [ATL Tutorial](../../atl/active-template-library-atl-tutorial.md), [Creating an ATL Project](../../atl/reference/creating-an-atl-project.md)  \n  \n## Inheritance Hierarchy  \n `IOleInPlaceObjectWindowless`  \n  \n `IOleInPlaceObjectWindowlessImpl`  \n  \n## Requirements  \n **Header:** atlctl.h  \n  \n##  <a name=\"ioleinplaceobjectwindowlessimpl__contextsensitivehelp\"></a>  IOleInPlaceObjectWindowlessImpl::ContextSensitiveHelp  \n Returns **E_NOTIMPL**.  \n  \n```\nHRESULT ContextSensitiveHelp(BOOL   fEnterMode);\n```  \n  \n### Remarks  \n See [IOleWindow::ContextSensitiveHelp](http://msdn.microsoft.com/library/windows/desktop/ms680059) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n##  <a name=\"ioleinplaceobjectwindowlessimpl__getdroptarget\"></a>  IOleInPlaceObjectWindowlessImpl::GetDropTarget  \n Returns **E_NOTIMPL**.  \n  \n```\nHRESULT GetDropTarget(IDropTarget** ppDropTarget);\n```  \n  \n### Remarks  \n See [IOleInPlaceObjectWindowless::GetDropTarget](http://msdn.microsoft.com/library/windows/desktop/ms678535) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n##  <a name=\"ioleinplaceobjectwindowlessimpl__getwindow\"></a>  IOleInPlaceObjectWindowlessImpl::GetWindow  \n The container calls this function to get the window handle of the control.  \n  \n```\nHRESULT GetWindow(HWND* phwnd);\n```  \n  \n### Remarks  \n Some containers will not work with a control that has been windowless, even if it is currently windowed. In ATL's implementation, if the control class's data member `m_bWasOnceWindowless` is **TRUE**, the function returns **E_FAIL**. Otherwise, if *phwnd* is not **NULL**, `GetWindow` sets \\* *phwnd* to the control class's data member `m_hWnd` and returns `S_OK`.  \n  \n See [IOleWindow::GetWindow](http://msdn.microsoft.com/library/windows/desktop/ms687282) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n##  <a name=\"ioleinplaceobjectwindowlessimpl__inplacedeactivate\"></a>  IOleInPlaceObjectWindowlessImpl::InPlaceDeactivate  \n Called by the container to deactivate an in-place active control.  \n  \n```\nHRESULT InPlaceDeactivate(HWND* phwnd);\n```  \n  \n### Remarks  \n This method performs a full or partial deactivation depending on the state of the control. If necessary, the control's user interface is deactivated, and the control's window, if any, is destroyed. The container is notified that the control is no longer active in place. The **IOleInPlaceUIWindow** interface used by the container to negotiate menus and border space is released.  \n  \n See [IOleInPlaceObject::InPlaceDeactivate](http://msdn.microsoft.com/library/windows/desktop/ms679700) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n##  <a name=\"ioleinplaceobjectwindowlessimpl__onwindowmessage\"></a>  IOleInPlaceObjectWindowlessImpl::OnWindowMessage  \n Dispatches a message from a container to a windowless control that is in-place active.  \n  \n```\nHRESULT OnWindowMessage(\n    UINT msg,\n    WPARAM WParam,\n    LPARAM LParam,\n    LRESULT plResultParam);\n```  \n  \n### Remarks  \n See [IOleInPlaceObjectWindowless::OnWindowMessage](http://msdn.microsoft.com/library/windows/desktop/ms693783) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n##  <a name=\"ioleinplaceobjectwindowlessimpl__reactivateandundo\"></a>  IOleInPlaceObjectWindowlessImpl::ReactivateAndUndo  \n Returns **E_NOTIMPL**.  \n  \n```\nHRESULT ReactivateAndUndo();\n```  \n  \n### Remarks  \n See [IOleInPlaceObject::ReactivateAndUndo](http://msdn.microsoft.com/library/windows/desktop/ms691372) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n##  <a name=\"ioleinplaceobjectwindowlessimpl__setobjectrects\"></a>  IOleInPlaceObjectWindowlessImpl::SetObjectRects  \n Called by the container to inform the control that its size and/or position has changed.  \n  \n```\nHRESULT SetObjectRects(\n    LPCRECT prcPos,\n    LPCRECT prcClip);\n```  \n  \n### Remarks  \n Updates the control's `m_rcPos` data member and the control display. Only the part of the control that intersects the clip region is displayed. If a control's display was previously clipped but the clipping has been removed, this function can be called to redraw a full view of the control.  \n  \n See [IOleInPlaceObject::SetObjectRects](http://msdn.microsoft.com/library/windows/desktop/ms683767) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n##  <a name=\"ioleinplaceobjectwindowlessimpl__uideactivate\"></a>  IOleInPlaceObjectWindowlessImpl::UIDeactivate  \n Deactivates and removes the control's user interface that supports in-place activation.  \n  \n```\nHRESULT UIDeactivate();\n```  \n  \n### Remarks  \n Sets the control class's data member `m_bUIActive` to **FALSE**. The ATL implementation of this function always returns `S_OK`.  \n  \n See [IOleInPlaceObject::UIDeactivate](http://msdn.microsoft.com/library/windows/desktop/ms693348) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n## See Also  \n [CComControl Class](../../atl/reference/ccomcontrol-class.md)   \n [Class Overview](../../atl/atl-class-overview.md)\n"}