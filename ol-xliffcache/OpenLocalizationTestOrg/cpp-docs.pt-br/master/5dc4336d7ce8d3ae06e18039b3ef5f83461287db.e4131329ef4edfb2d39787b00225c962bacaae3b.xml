{"nodes":[{"pos":[12,53],"content":"_set_printf_count_output | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"_set_printf_count_output | Microsoft Docs","pos":[0,41]}]},{"content":"_set_printf_count_output","pos":[1057,1081]},{"pos":[1082,1260],"content":"Enable or disable support of the <ph id=\"ph1\">`%n`</ph> format in <bpt id=\"p1\">[</bpt>printf, _printf_l, wprintf, _wprintf_l<ept id=\"p1\">](../../c-runtime-library/reference/printf-printf-l-wprintf-wprintf-l.md)</ept>-family functions.","source":"Enable or disable support of the `%n` format in [printf, _printf_l, wprintf, _wprintf_l](../../c-runtime-library/reference/printf-printf-l-wprintf-wprintf-l.md)-family functions."},{"content":"Syntax","pos":[1269,1275]},{"content":"Parameters","pos":[1354,1364]},{"content":"A non-zero value to enable <ph id=\"ph1\">`%n`</ph> support, 0 to disable <ph id=\"ph2\">`%n`</ph> support.","pos":[1380,1447],"source":" A non-zero value to enable `%n` support, 0 to disable `%n` support."},{"content":"Property Value/Return Value","pos":[1456,1483]},{"pos":[1487,1602],"content":"The state of <ph id=\"ph1\">`%n`</ph> support before calling this function: non-zero if <ph id=\"ph2\">`%n`</ph> support was enabled, 0 if it was disabled.","source":"The state of `%n` support before calling this function: non-zero if `%n` support was enabled, 0 if it was disabled."},{"content":"Remarks","pos":[1611,1618]},{"content":"Because of security reasons, support for the <ph id=\"ph1\">`%n`</ph> format specifier is disabled by default in <ph id=\"ph2\">`printf`</ph> and all its variants.","pos":[1622,1745],"source":"Because of security reasons, support for the `%n` format specifier is disabled by default in `printf` and all its variants."},{"content":"If <ph id=\"ph1\">`%n`</ph> is encountered in a <ph id=\"ph2\">`printf`</ph> format specification, the default behavior is to invoke the invalid parameter handler as described in <bpt id=\"p1\">[</bpt>Parameter Validation<ept id=\"p1\">](../../c-runtime-library/parameter-validation.md)</ept>.","pos":[1746,1957],"source":" If `%n` is encountered in a `printf` format specification, the default behavior is to invoke the invalid parameter handler as described in [Parameter Validation](../../c-runtime-library/parameter-validation.md)."},{"content":"Calling <ph id=\"ph1\">`_set_printf_count_output`</ph> with a non-zero argument will cause <ph id=\"ph2\">`printf`</ph>-family functions to interpret <ph id=\"ph3\">`%n`</ph> as described in <bpt id=\"p1\">[</bpt>printf Type Field Characters<ept id=\"p1\">](../../c-runtime-library/printf-type-field-characters.md)</ept>.","pos":[1958,2177],"source":" Calling `_set_printf_count_output` with a non-zero argument will cause `printf`-family functions to interpret `%n` as described in [printf Type Field Characters](../../c-runtime-library/printf-type-field-characters.md)."},{"content":"Requirements","pos":[2186,2198]},{"content":"Routine","pos":[2205,2212]},{"content":"Required header","pos":[2213,2228]},{"content":"stdio.h&gt;","pos":[2302,2310],"source":"stdio.h>"},{"pos":[2318,2442],"content":"For additional compatibility information, see <bpt id=\"p1\">[</bpt>Compatibility<ept id=\"p1\">](../../c-runtime-library/compatibility.md)</ept> in the Introduction.","source":"For additional compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md) in the Introduction."},{"content":"Example","pos":[2451,2458]},{"content":"Output","pos":[2897,2903]},{"content":"NET Framework Equivalent","pos":[3003,3027]},{"content":"Not applicable.","pos":[3031,3046]},{"content":"To call the standard C function, use <ph id=\"ph1\">`PInvoke`</ph>.","pos":[3047,3094],"source":" To call the standard C function, use `PInvoke`."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Platform Invoke Examples<ept id=\"p1\">](http://msdn.microsoft.com/Library/15926806-f0b7-487e-93a6-4e9367ec689f)</ept>.","pos":[3095,3220],"source":" For more information, see [Platform Invoke Examples](http://msdn.microsoft.com/Library/15926806-f0b7-487e-93a6-4e9367ec689f)."},{"content":"See Also","pos":[3229,3237]},{"content":"_get_printf_count_output","pos":[3242,3266]}],"content":"---\ntitle: \"_set_printf_count_output | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\napiname: \n  - \"_set_printf_count_output\"\napilocation: \n  - \"msvcrt.dll\"\n  - \"msvcr80.dll\"\n  - \"msvcr90.dll\"\n  - \"msvcr100.dll\"\n  - \"msvcr100_clr0400.dll\"\n  - \"msvcr110.dll\"\n  - \"msvcr110_clr0400.dll\"\n  - \"msvcr120.dll\"\n  - \"msvcr120_clr0400.dll\"\n  - \"ucrtbase.dll\"\n  - \"api-ms-win-crt-stdio-l1-1-0.dll\"\napitype: \"DLLExport\"\nf1_keywords: \n  - \"set_printf_count_output\"\n  - \"_set_printf_count_output\"\ndev_langs: \n  - \"C++\"\n  - \"C\"\nhelpviewer_keywords: \n  - \"%n format\"\n  - \"set_printf_count_output function\"\n  - \"_set_printf_count_output function\"\nms.assetid: d8259ec5-764e-42d0-9169-72172e95163b\ncaps.latest.revision: 8\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# _set_printf_count_output\nEnable or disable support of the `%n` format in [printf, _printf_l, wprintf, _wprintf_l](../../c-runtime-library/reference/printf-printf-l-wprintf-wprintf-l.md)-family functions.  \n  \n## Syntax  \n  \n```  \nint _set_printf_count_output(  \n   int enable  \n);  \n```  \n  \n#### Parameters  \n `enable`  \n A non-zero value to enable `%n` support, 0 to disable `%n` support.  \n  \n## Property Value/Return Value  \n The state of `%n` support before calling this function: non-zero if `%n` support was enabled, 0 if it was disabled.  \n  \n## Remarks  \n Because of security reasons, support for the `%n` format specifier is disabled by default in `printf` and all its variants. If `%n` is encountered in a `printf` format specification, the default behavior is to invoke the invalid parameter handler as described in [Parameter Validation](../../c-runtime-library/parameter-validation.md). Calling `_set_printf_count_output` with a non-zero argument will cause `printf`-family functions to interpret `%n` as described in [printf Type Field Characters](../../c-runtime-library/printf-type-field-characters.md).  \n  \n## Requirements  \n  \n|Routine|Required header|  \n|-------------|---------------------|  \n|`_set_printf_count_output`|\\<stdio.h>|  \n  \n For additional compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md) in the Introduction.  \n  \n## Example  \n  \n```  \n// crt_set_printf_count_output.c  \n#include <stdio.h>  \n  \nint main()  \n{  \n   int e;  \n   int i;  \n   e = _set_printf_count_output( 1 );  \n   printf( \"%%n support was %sabled.\\n\",  \n        e ? \"en\" : \"dis\" );  \n   printf( \"%%n support is now %sabled.\\n\",  \n        _get_printf_count_output() ? \"en\" : \"dis\" );  \n   printf( \"12345%n6789\\n\", &i ); // %n format should set i to 5  \n   printf( \"i = %d\\n\", i );  \n}  \n```  \n  \n## Output  \n  \n```  \n%n support was disabled.  \n%n support is now enabled.  \n123456789  \ni = 5  \n```  \n  \n## NET Framework Equivalent  \n Not applicable. To call the standard C function, use `PInvoke`. For more information, see [Platform Invoke Examples](http://msdn.microsoft.com/Library/15926806-f0b7-487e-93a6-4e9367ec689f).  \n  \n## See Also  \n [_get_printf_count_output](../../c-runtime-library/reference/get-printf-count-output.md)"}