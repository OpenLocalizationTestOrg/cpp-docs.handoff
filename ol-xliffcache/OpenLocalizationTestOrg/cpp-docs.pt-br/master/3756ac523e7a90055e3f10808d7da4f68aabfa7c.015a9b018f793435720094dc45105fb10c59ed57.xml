{"nodes":[{"pos":[12,46],"content":"__CxxFrameHandler | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"__CxxFrameHandler | Microsoft Docs","pos":[0,34]}]},{"content":"__CxxFrameHandler","pos":[816,833]},{"content":"Internal CRT function.","pos":[834,856]},{"content":"Used by the CRT to handle structured exception frames.","pos":[857,911]},{"content":"Syntax","pos":[920,926]},{"content":"Parameters","pos":[1146,1156]},{"content":"Exception record that is passed to the possible <ph id=\"ph1\">`catch`</ph> statements.","pos":[1173,1240],"source":" Exception record that is passed to the possible `catch` statements."},{"content":"Dynamic information about the stack frame that is used to handle the exception.","pos":[1256,1335]},{"content":"For more information, see ehdata.h.","pos":[1336,1371]},{"content":"Context.","pos":[1392,1400]},{"content":"(Not used on Intel processors.)","pos":[1401,1432]},{"content":"Additional information about the function entry and stack frame.","pos":[1448,1512]},{"content":"Return Value","pos":[1521,1533]},{"pos":[1537,1642],"content":"One of the <bpt id=\"p1\">*</bpt>filter expression<ept id=\"p1\">*</ept> values used by the <bpt id=\"p2\">[</bpt>try-except Statement<ept id=\"p2\">](../cpp/try-except-statement.md)</ept>.","source":"One of the *filter expression* values used by the [try-except Statement](../cpp/try-except-statement.md)."},{"content":"Remarks","pos":[1651,1658]},{"content":"Requirements","pos":[1667,1679]},{"content":"Routine","pos":[1686,1693]},{"content":"Required header","pos":[1694,1709]},{"content":"__CxxFrameHandler","pos":[1754,1771]},{"content":"excpt.h, ehdata.h","pos":[1772,1789]}],"content":"---\ntitle: \"__CxxFrameHandler | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\napiname: \n  - \"__CxxFrameHandler\"\napilocation: \n  - \"msvcr110.dll\"\n  - \"msvcrt.dll\"\n  - \"msvcr80.dll\"\n  - \"msvcr100.dll\"\n  - \"msvcr110_clr0400.dll\"\n  - \"msvcr90.dll\"\n  - \"msvcr120.dll\"\napitype: \"DLLExport\"\nf1_keywords: \n  - \"__CxxFrameHandler\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"__CxxFrameHandler\"\nms.assetid: b79ac97f-425a-42ae-9b91-8beaef935333\ncaps.latest.revision: 3\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# __CxxFrameHandler\nInternal CRT function. Used by the CRT to handle structured exception frames.  \n  \n## Syntax  \n  \n```cpp  \nEXCEPTION_DISPOSITION __CxxFrameHandler(  \n      EHExceptionRecord  *pExcept,  \n      EHRegistrationNode *pRN,  \n      void               *pContext,   \n      DispatcherContext  *pDC  \n   )  \n```  \n  \n#### Parameters  \n `pExcept`  \n Exception record that is passed to the possible `catch` statements.  \n  \n `pRN`  \n Dynamic information about the stack frame that is used to handle the exception. For more information, see ehdata.h.  \n  \n `pContext`  \n Context. (Not used on Intel processors.)  \n  \n `pDC`  \n Additional information about the function entry and stack frame.  \n  \n## Return Value  \n One of the *filter expression* values used by the [try-except Statement](../cpp/try-except-statement.md).  \n  \n## Remarks  \n  \n## Requirements  \n  \n|Routine|Required header|  \n|-------------|---------------------|  \n|__CxxFrameHandler|excpt.h, ehdata.h|"}