{"nodes":[{"pos":[12,46],"content":"is_unsigned Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"is_unsigned Class | Microsoft Docs","pos":[0,34]}]},{"content":"is_unsigned Class","pos":[763,780]},{"content":"Tests if type is unsigned integer.","pos":[781,815]},{"content":"Syntax","pos":[824,830]},{"content":"Parameters","pos":[900,910]},{"content":"The type to query.","pos":[922,940]},{"content":"Remarks","pos":[949,956]},{"pos":[960,1120],"content":"An instance of the type predicate holds true if the type <ph id=\"ph1\">`Ty`</ph> is an unsigned integral type or a <ph id=\"ph2\">`cv-qualified`</ph> unsigned integral type, otherwise it holds false.","source":"An instance of the type predicate holds true if the type `Ty` is an unsigned integral type or a `cv-qualified` unsigned integral type, otherwise it holds false."},{"content":"Example","pos":[1129,1136]},{"content":"Requirements","pos":[2046,2058]},{"pos":[2062,2087],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> &lt;type_traits&gt;","source":"**Header:** <type_traits>"},{"pos":[2094,2112],"content":"<bpt id=\"p1\">**</bpt>Namespace:<ept id=\"p1\">**</ept> std","source":"**Namespace:** std"},{"content":"See Also","pos":[2121,2129]},{"content":"&lt;type_traits&gt;","pos":[2134,2147],"source":"<type_traits>"},{"content":"is_signed Class","pos":[2190,2205]}],"content":"---\ntitle: \"is_unsigned Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"std::tr1::is_unsigned\"\n  - \"is_unsigned\"\n  - \"std.tr1.is_unsigned\"\n  - \"std.is_unsigned\"\n  - \"std::is_unsigned\"\n  - \"type_traits/std::is_unsigned\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"is_unsigned class [TR1]\"\n  - \"is_unsigned\"\nms.assetid: ba5bec3d-796b-4e54-8595-a3941ec6a8dc\ncaps.latest.revision: 19\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# is_unsigned Class\nTests if type is unsigned integer.  \n  \n## Syntax  \n  \n```  \ntemplate <class Ty>  \nstruct is_unsigned;  \n```  \n  \n#### Parameters  \n `Ty`  \n The type to query.  \n  \n## Remarks  \n An instance of the type predicate holds true if the type `Ty` is an unsigned integral type or a `cv-qualified` unsigned integral type, otherwise it holds false.  \n  \n## Example  \n  \n```cpp  \n// std_tr1__type_traits__is_unsigned.cpp   \n// compile with: /EHsc   \n#include <type_traits>   \n#include <iostream>   \n  \nstruct trivial   \n    {   \n    int val;   \n    };   \n  \nint main()   \n    {   \n    std::cout << \"is_unsigned<trivial> == \" << std::boolalpha   \n        << std::is_unsigned<trivial>::value << std::endl;   \n    std::cout << \"is_unsigned<int> == \" << std::boolalpha   \n        << std::is_unsigned<int>::value << std::endl;   \n    std::cout << \"is_unsigned<unsigned int> == \" << std::boolalpha   \n        << std::is_unsigned<unsigned int>::value << std::endl;   \n    std::cout << \"is_unsigned<float> == \" << std::boolalpha   \n        << std::is_unsigned<float>::value << std::endl;   \n  \n    return (0);   \n    }  \n  \n```  \n  \n```Output  \nis_unsigned<trivial> == false  \nis_unsigned<int> == false  \nis_unsigned<unsigned int> == true  \nis_unsigned<float> == false  \n```  \n  \n## Requirements  \n **Header:** <type_traits>  \n  \n **Namespace:** std  \n  \n## See Also  \n [<type_traits>](../standard-library/type-traits.md)   \n [is_signed Class](../standard-library/is-signed-class.md)\n"}