{"nodes":[{"pos":[12,45],"content":"CAtlModule Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"CAtlModule Class | Microsoft Docs","pos":[0,33]}]},{"content":"CAtlModule Class","pos":[647,663]},{"content":"This class provides methods used by several ATL module classes.","pos":[664,727]},{"content":"Syntax","pos":[736,742]},{"content":"Members","pos":[817,824]},{"content":"Public Constructors","pos":[834,853]},{"content":"Name","pos":[860,864]},{"content":"Description","pos":[865,876]},{"content":"CAtlModule::CAtlModule","pos":[915,937]},{"content":"The constructor.","pos":[964,980]},{"content":"CAtlModule::~CAtlModule","pos":[986,1009]},{"content":"The destructor.","pos":[1041,1056]},{"content":"Public Methods","pos":[1067,1081]},{"content":"Name","pos":[1088,1092]},{"content":"Description","pos":[1093,1104]},{"content":"CAtlModule::AddCommonRGSReplacements","pos":[1143,1179]},{"content":"Override this method to add parameters to the ATL Registry Component (Registrar) replacement map.","pos":[1220,1317]},{"content":"CAtlModule::AddTermFunc","pos":[1323,1346]},{"content":"Adds a new function to be called when the module terminates.","pos":[1374,1434]},{"content":"CAtlModule::GetGITPtr","pos":[1440,1461]},{"content":"Returns the Global Interface Pointer.","pos":[1487,1524]},{"content":"CAtlModule::GetLockCount","pos":[1530,1554]},{"content":"Returns the lock count.","pos":[1583,1606]},{"content":"CAtlModule::Lock","pos":[1612,1628]},{"content":"Increments the lock count.","pos":[1649,1675]},{"content":"CAtlModule::Term","pos":[1681,1697]},{"content":"Releases all data members.","pos":[1718,1744]},{"content":"CAtlModule::Unlock","pos":[1750,1768]},{"content":"Decrements the lock count.","pos":[1791,1817]},{"content":"CAtlModule::UpdateRegistryFromResourceD","pos":[1823,1862]},{"content":"Runs the script contained in a specified resource to register or unregister an object.","pos":[1906,1992]},{"content":"CAtlModule::UpdateRegistryFromResourceDHelper","pos":[1998,2043]},{"pos":[2093,2179],"content":"This method is called by <ph id=\"ph1\">`UpdateRegistryFromResourceD`</ph> to perform the registry update.","source":"This method is called by `UpdateRegistryFromResourceD` to perform the registry update."},{"content":"CAtlModule::UpdateRegistryFromResourceS","pos":[2185,2224]},{"content":"Runs the script contained in a specified resource to register or unregister an object.","pos":[2268,2354]},{"content":"This method statically links to the ATL Registry Component.","pos":[2355,2414]},{"content":"Public Data Members","pos":[2425,2444]},{"content":"Name","pos":[2451,2455]},{"content":"Description","pos":[2456,2467]},{"content":"CAtlModule::m_libid","pos":[2506,2525]},{"content":"Contains the GUID of the current module.","pos":[2549,2589]},{"content":"CAtlModule::m_pGIT","pos":[2595,2613]},{"content":"Pointer to the Global Interface Table.","pos":[2636,2674]},{"content":"Remarks","pos":[2684,2691]},{"pos":[2695,3029],"content":"This class is used by <bpt id=\"p1\">[</bpt>CAtlDllModuleT Class<ept id=\"p1\">](../../atl/reference/catldllmodulet-class.md)</ept>, <bpt id=\"p2\">[</bpt>CAtlExeModuleT Class<ept id=\"p2\">](../../atl/reference/catlexemodulet-class.md)</ept>, and <bpt id=\"p3\">[</bpt>CAtlServiceModuleT Class<ept id=\"p3\">](../../atl/reference/catlservicemodulet-class.md)</ept> to provide support for DLL applications, EXE applications, and Windows services, respectively.","source":"This class is used by [CAtlDllModuleT Class](../../atl/reference/catldllmodulet-class.md), [CAtlExeModuleT Class](../../atl/reference/catlexemodulet-class.md), and [CAtlServiceModuleT Class](../../atl/reference/catlservicemodulet-class.md) to provide support for DLL applications, EXE applications, and Windows services, respectively."},{"pos":[3036,3134],"content":"For more information on modules in ATL, see <bpt id=\"p1\">[</bpt>ATL Module Classes<ept id=\"p1\">](../../atl/atl-module-classes.md)</ept>.","source":"For more information on modules in ATL, see [ATL Module Classes](../../atl/atl-module-classes.md)."},{"pos":[3141,3266],"content":"This class replaces the obsolete <bpt id=\"p1\">[</bpt>CComModule Class<ept id=\"p1\">](../../atl/reference/ccommodule-class.md)</ept> used in earlier versions of ATL.","source":"This class replaces the obsolete [CComModule Class](../../atl/reference/ccommodule-class.md) used in earlier versions of ATL."},{"content":"Inheritance Hierarchy","pos":[3275,3296]},{"content":"_ATL_MODULE","pos":[3301,3312]},{"content":"Requirements","pos":[3370,3382]},{"pos":[3386,3407],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> atlbase.h","source":"**Header:** atlbase.h"},{"pos":[3470,3506],"content":"CAtlModule::AddCommonRGSReplacements"},{"content":"Override this method to add parameters to the ATL Registry Component (Registrar) replacement map.","pos":[3510,3607]},{"content":"Parameters","pos":[3717,3727]},{"content":"pRegistrar","pos":[3732,3742]},{"content":"Reserved.","pos":[3747,3756]},{"content":"Return Value","pos":[3766,3778]},{"content":"Returns S_OK on success, or an error HRESULT on failure.","pos":[3782,3838]},{"content":"Remarks","pos":[3848,3855]},{"content":"Replaceable parameters allow a Registrar's client to specify run-time data.","pos":[3859,3934]},{"content":"To do this, the Registrar maintains a replacement map into which it enters the values associated with the replaceable parameters in your script.","pos":[3935,4079]},{"content":"The Registrar makes these entries at run time.","pos":[4080,4126]},{"pos":[4133,4298],"content":"See the topic <bpt id=\"p1\">[</bpt>Using Replaceable Parameters (The Registrar's Preprocessor)<ept id=\"p1\">](../../atl/using-replaceable-parameters-the-registrar-s-preprocessor.md)</ept> for more details.","source":"See the topic [Using Replaceable Parameters (The Registrar's Preprocessor)](../../atl/using-replaceable-parameters-the-registrar-s-preprocessor.md) for more details."},{"pos":[4348,4371],"content":"CAtlModule::AddTermFunc"},{"content":"Adds a new function to be called when the module terminates.","pos":[4375,4435]},{"content":"Parameters","pos":[4529,4539]},{"content":"pFunc","pos":[4544,4549]},{"content":"Pointer to the function to add.","pos":[4554,4585]},{"content":"User-defined data, passed to the function.","pos":[4600,4642]},{"content":"Return Value","pos":[4652,4664]},{"content":"Returns S_OK on success, or an error HRESULT on failure.","pos":[4668,4724]},{"pos":[4773,4795],"content":"CAtlModule::CAtlModule"},{"content":"The constructor.","pos":[4799,4815]},{"content":"Remarks","pos":[4860,4867]},{"content":"Initializes data members and initiates a critical section around the module's thread.","pos":[4871,4956]},{"pos":[5010,5033],"content":"CAtlModule::~CAtlModule"},{"content":"The destructor.","pos":[5037,5052]},{"content":"Remarks","pos":[5098,5105]},{"content":"Releases all data members.","pos":[5109,5135]},{"pos":[5183,5204],"content":"CAtlModule::GetGITPtr"},{"content":"Retrieves a pointer to the Global Interface Table.","pos":[5208,5258]},{"content":"Parameters","pos":[5347,5357]},{"content":"Pointer to the variable which will receive the pointer to the Global Interface Table.","pos":[5372,5457]},{"content":"Return Value","pos":[5467,5479]},{"content":"Returns S_OK on success, or an error code on failure.","pos":[5483,5536]},{"content":"E_POINTER is returned if <ph id=\"ph1\">`ppGIT`</ph> is equal to NULL.","pos":[5537,5587],"source":" E_POINTER is returned if `ppGIT` is equal to NULL."},{"content":"Remarks","pos":[5597,5604]},{"pos":[5608,5767],"content":"If the Global Interface Table object does not exist, it is created, and its address is stored in the member variable <bpt id=\"p1\">[</bpt>CAtlModule::m_pGIT<ept id=\"p1\">](#catlmodule__m_pgit)</ept>.","source":"If the Global Interface Table object does not exist, it is created, and its address is stored in the member variable [CAtlModule::m_pGIT](#catlmodule__m_pgit)."},{"pos":[5774,5910],"content":"In debug builds, an assertion error will occur if <ph id=\"ph1\">`ppGIT`</ph> is equal to NULL, or if the Global Interface Table pointer cannot be obtained.","source":"In debug builds, an assertion error will occur if `ppGIT` is equal to NULL, or if the Global Interface Table pointer cannot be obtained."},{"pos":[5917,6051],"content":"See <bpt id=\"p1\">[</bpt>IGlobalInterfaceTable<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms678517)</ept> for information on the Global Interface Table.","source":"See [IGlobalInterfaceTable](http://msdn.microsoft.com/library/windows/desktop/ms678517) for information on the Global Interface Table."},{"pos":[6102,6126],"content":"CAtlModule::GetLockCount"},{"content":"Returns the lock count.","pos":[6130,6153]},{"content":"Return Value","pos":[6213,6225]},{"content":"Returns the lock count.","pos":[6229,6252]},{"content":"This value may be useful for diagnostics and debugging.","pos":[6253,6308]},{"pos":[6351,6367],"content":"CAtlModule::Lock"},{"content":"Increments the lock count.","pos":[6371,6397]},{"content":"Return Value","pos":[6449,6461]},{"content":"Increments the lock count and returns the updated value.","pos":[6465,6521]},{"content":"This value may be useful for diagnostics and debugging.","pos":[6522,6577]},{"pos":[6623,6642],"content":"CAtlModule::m_libid"},{"content":"Contains the GUID of the current module.","pos":[6646,6686]},{"pos":[6765,6783],"content":"CAtlModule::m_pGIT"},{"content":"Pointer to the Global Interface Table.","pos":[6787,6825]},{"pos":[6912,6928],"content":"CAtlModule::Term"},{"content":"Releases all data members.","pos":[6932,6958]},{"content":"Remarks","pos":[7002,7009]},{"content":"Releases all data members.","pos":[7013,7039]},{"content":"This method is called by the destructor.","pos":[7040,7080]},{"pos":[7125,7143],"content":"CAtlModule::Unlock"},{"content":"Decrements the lock count.","pos":[7147,7173]},{"content":"Return Value","pos":[7227,7239]},{"content":"Decrements the lock count and returns the updated value.","pos":[7243,7299]},{"content":"This value may be useful for diagnostics and debugging.","pos":[7300,7355]},{"pos":[7421,7460],"content":"CAtlModule::UpdateRegistryFromResourceD"},{"content":"Runs the script contained in a specified resource to register or unregister an object.","pos":[7464,7550]},{"content":"Parameters","pos":[7847,7857]},{"content":"A resource name.","pos":[7874,7890]},{"content":"A resource ID.","pos":[7909,7923]},{"content":"<bpt id=\"p1\"> **</bpt>TRUE<ept id=\"p1\">**</ept> if the object should be registered; <bpt id=\"p2\">**</bpt>FALSE<ept id=\"p2\">**</ept> otherwise.","pos":[7944,8010],"source":" **TRUE** if the object should be registered; **FALSE** otherwise."},{"content":"A pointer to the replacement map storing values associated with the script's replaceable parameters.","pos":[8034,8134]},{"content":"ATL automatically uses %MODULE%.","pos":[8135,8167]},{"content":"To use additional replaceable parameters, see <bpt id=\"p1\">[</bpt>CAtlModule::AddCommonRGSReplacements<ept id=\"p1\">](#catlmodule__addcommonrgsreplacements)</ept>.","pos":[8168,8292],"source":" To use additional replaceable parameters, see [CAtlModule::AddCommonRGSReplacements](#catlmodule__addcommonrgsreplacements)."},{"content":"Otherwise, use the <bpt id=\"p1\">**</bpt>NULL<ept id=\"p1\">**</ept> default value.","pos":[8293,8335],"source":" Otherwise, use the **NULL** default value."},{"content":"Return Value","pos":[8345,8357]},{"content":"Returns S_OK on success, or an error HRESULT on failure.","pos":[8361,8417]},{"content":"Remarks","pos":[8427,8434]},{"content":"Runs the script contained in the resource specified by <bpt id=\"p1\">*</bpt>lpszRes or nResID<ept id=\"p1\">*</ept>.","pos":[8438,8513],"source":"Runs the script contained in the resource specified by *lpszRes or nResID*."},{"content":"If <ph id=\"ph1\">`bRegister`</ph> is <bpt id=\"p1\">**</bpt>TRUE<ept id=\"p1\">**</ept>, this method registers the object in the system registry; otherwise it removes the object from the registry.","pos":[8514,8649],"source":" If `bRegister` is **TRUE**, this method registers the object in the system registry; otherwise it removes the object from the registry."},{"pos":[8656,8806],"content":"To statically link to the ATL Registry Component (Registrar), see <bpt id=\"p1\">[</bpt>CAtlModule::UpdateRegistryFromResourceS<ept id=\"p1\">](#catlmodule__updateregistryfromresources)</ept>.","source":"To statically link to the ATL Registry Component (Registrar), see [CAtlModule::UpdateRegistryFromResourceS](#catlmodule__updateregistryfromresources)."},{"pos":[8813,8927],"content":"This method calls <bpt id=\"p1\">[</bpt>CAtlModule::UpdateRegistryFromResourceDHelper<ept id=\"p1\">](#catlmodule__updateregistryfromresourcedhelper)</ept>.","source":"This method calls [CAtlModule::UpdateRegistryFromResourceDHelper](#catlmodule__updateregistryfromresourcedhelper)."},{"pos":[8999,9044],"content":"CAtlModule::UpdateRegistryFromResourceDHelper"},{"pos":[9048,9134],"content":"This method is called by <ph id=\"ph1\">`UpdateRegistryFromResourceD`</ph> to perform the registry update.","source":"This method is called by `UpdateRegistryFromResourceD` to perform the registry update."},{"content":"Parameters","pos":[9311,9321]},{"content":"A resource name.","pos":[9338,9354]},{"content":"Indicates whether the object should be registered.","pos":[9376,9426]},{"content":"A pointer to the replacement map storing values associated with the script's replaceable parameters.","pos":[9450,9550]},{"content":"ATL automatically uses %MODULE%.","pos":[9551,9583]},{"content":"To use additional replaceable parameters, see <bpt id=\"p1\">[</bpt>CAtlModule::AddCommonRGSReplacements<ept id=\"p1\">](#catlmodule__addcommonrgsreplacements)</ept>.","pos":[9584,9708],"source":" To use additional replaceable parameters, see [CAtlModule::AddCommonRGSReplacements](#catlmodule__addcommonrgsreplacements)."},{"content":"Otherwise, use the <bpt id=\"p1\">**</bpt>NULL<ept id=\"p1\">**</ept> default value.","pos":[9709,9751],"source":" Otherwise, use the **NULL** default value."},{"content":"Return Value","pos":[9761,9773]},{"content":"Returns S_OK on success, or an error HRESULT on failure.","pos":[9777,9833]},{"content":"Remarks","pos":[9843,9850]},{"pos":[9854,9981],"content":"This method provides the implementation of <bpt id=\"p1\">[</bpt>CAtlModule::UpdateRegistryFromResourceD<ept id=\"p1\">](#catlmodule__updateregistryfromresourced)</ept>.","source":"This method provides the implementation of [CAtlModule::UpdateRegistryFromResourceD](#catlmodule__updateregistryfromresourced)."},{"pos":[10047,10086],"content":"CAtlModule::UpdateRegistryFromResourceS"},{"content":"Runs the script contained in a specified resource to register or unregister an object.","pos":[10090,10176]},{"content":"This method statically links to the ATL Registry Component.","pos":[10177,10236]},{"content":"Parameters","pos":[10533,10543]},{"content":"A resource ID.","pos":[10559,10573]},{"content":"A resource name.","pos":[10593,10609]},{"content":"Indicates whether the resource script should be registered.","pos":[10631,10690]},{"content":"A pointer to the replacement map storing values associated with the script's replaceable parameters.","pos":[10714,10814]},{"content":"ATL automatically uses %MODULE%.","pos":[10815,10847]},{"content":"To use additional replaceable parameters, see <bpt id=\"p1\">[</bpt>CAtlModule::AddCommonRGSReplacements<ept id=\"p1\">](#catlmodule__addcommonrgsreplacements)</ept>.","pos":[10848,10972],"source":" To use additional replaceable parameters, see [CAtlModule::AddCommonRGSReplacements](#catlmodule__addcommonrgsreplacements)."},{"content":"Otherwise, use the <bpt id=\"p1\">**</bpt>NULL<ept id=\"p1\">**</ept> default value.","pos":[10973,11015],"source":" Otherwise, use the **NULL** default value."},{"content":"Return Value","pos":[11025,11037]},{"content":"Returns S_OK on success, or an error HRESULT on failure.","pos":[11041,11097]},{"content":"Remarks","pos":[11107,11114]},{"pos":[11118,11326],"content":"Similar to <bpt id=\"p1\">[</bpt>CAtlModule::UpdateRegistryFromResourceD<ept id=\"p1\">](#catlmodule__updateregistryfromresourced)</ept> except <ph id=\"ph1\">`CAtlModule::UpdateRegistryFromResourceS`</ph> creates a static link to the ATL Registry Component (Registrar).","source":"Similar to [CAtlModule::UpdateRegistryFromResourceD](#catlmodule__updateregistryfromresourced) except `CAtlModule::UpdateRegistryFromResourceS` creates a static link to the ATL Registry Component (Registrar)."},{"content":"See Also","pos":[11335,11343]},{"content":"_ATL_MODULE","pos":[11348,11359]},{"content":"Class Overview","pos":[11395,11409]},{"content":"Module Classes","pos":[11449,11463]},{"content":"Registry Component (Registrar)","pos":[11503,11533]}],"content":"---\ntitle: \"CAtlModule Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"ATL::CAtlModule\"\n  - \"CAtlModule\"\n  - \"ATL.CAtlModule\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"CAtlModule class\"\nms.assetid: 63fe02f1-4c4b-4e7c-ae97-7ad7b4252415\ncaps.latest.revision: 19\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# CAtlModule Class\nThis class provides methods used by several ATL module classes.  \n  \n## Syntax  \n  \n```\nclass ATL_NO_VTABLE CAtlModule :  public _ATL_MODULE\n```  \n  \n## Members  \n  \n### Public Constructors  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CAtlModule::CAtlModule](#catlmodule__catlmodule)|The constructor.|  \n|[CAtlModule::~CAtlModule](#catlmodule___dtorcatlmodule)|The destructor.|  \n  \n### Public Methods  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CAtlModule::AddCommonRGSReplacements](#catlmodule__addcommonrgsreplacements)|Override this method to add parameters to the ATL Registry Component (Registrar) replacement map.|  \n|[CAtlModule::AddTermFunc](#catlmodule__addtermfunc)|Adds a new function to be called when the module terminates.|  \n|[CAtlModule::GetGITPtr](#catlmodule__getgitptr)|Returns the Global Interface Pointer.|  \n|[CAtlModule::GetLockCount](#catlmodule__getlockcount)|Returns the lock count.|  \n|[CAtlModule::Lock](#catlmodule__lock)|Increments the lock count.|  \n|[CAtlModule::Term](#catlmodule__term)|Releases all data members.|  \n|[CAtlModule::Unlock](#catlmodule__unlock)|Decrements the lock count.|  \n|[CAtlModule::UpdateRegistryFromResourceD](#catlmodule__updateregistryfromresourced)|Runs the script contained in a specified resource to register or unregister an object.|  \n|[CAtlModule::UpdateRegistryFromResourceDHelper](#catlmodule__updateregistryfromresourcedhelper)|This method is called by `UpdateRegistryFromResourceD` to perform the registry update.|  \n|[CAtlModule::UpdateRegistryFromResourceS](#catlmodule__updateregistryfromresources)|Runs the script contained in a specified resource to register or unregister an object. This method statically links to the ATL Registry Component.|  \n  \n### Public Data Members  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CAtlModule::m_libid](#catlmodule__m_libid)|Contains the GUID of the current module.|  \n|[CAtlModule::m_pGIT](#catlmodule__m_pgit)|Pointer to the Global Interface Table.|  \n  \n## Remarks  \n This class is used by [CAtlDllModuleT Class](../../atl/reference/catldllmodulet-class.md), [CAtlExeModuleT Class](../../atl/reference/catlexemodulet-class.md), and [CAtlServiceModuleT Class](../../atl/reference/catlservicemodulet-class.md) to provide support for DLL applications, EXE applications, and Windows services, respectively.  \n  \n For more information on modules in ATL, see [ATL Module Classes](../../atl/atl-module-classes.md).  \n  \n This class replaces the obsolete [CComModule Class](../../atl/reference/ccommodule-class.md) used in earlier versions of ATL.  \n  \n## Inheritance Hierarchy  \n [_ATL_MODULE](atl-typedefs.md#_atl_module)  \n  \n `CAtlModule`  \n  \n## Requirements  \n **Header:** atlbase.h  \n  \n##  <a name=\"catlmodule__addcommonrgsreplacements\"></a>  CAtlModule::AddCommonRGSReplacements  \n Override this method to add parameters to the ATL Registry Component (Registrar) replacement map.  \n  \n```\nvirtual HRESULT AddCommonRGSReplacements(IRegistrarBase* /* pRegistrar*/) throw() = 0;\n```  \n  \n### Parameters  \n *pRegistrar*  \n Reserved.  \n  \n### Return Value  \n Returns S_OK on success, or an error HRESULT on failure.  \n  \n### Remarks  \n Replaceable parameters allow a Registrar's client to specify run-time data. To do this, the Registrar maintains a replacement map into which it enters the values associated with the replaceable parameters in your script. The Registrar makes these entries at run time.  \n  \n See the topic [Using Replaceable Parameters (The Registrar's Preprocessor)](../../atl/using-replaceable-parameters-the-registrar-s-preprocessor.md) for more details.  \n  \n##  <a name=\"catlmodule__addtermfunc\"></a>  CAtlModule::AddTermFunc  \n Adds a new function to be called when the module terminates.  \n  \n```\nHRESULT AddTermFunc(\n    _ATL_TERMFUNC* pFunc,  DWORD_PTR dw) throw();\n```  \n  \n### Parameters  \n *pFunc*  \n Pointer to the function to add.  \n  \n `dw`  \n User-defined data, passed to the function.  \n  \n### Return Value  \n Returns S_OK on success, or an error HRESULT on failure.  \n  \n##  <a name=\"catlmodule__catlmodule\"></a>  CAtlModule::CAtlModule  \n The constructor.  \n  \n```\nCAtlModule() throw();\n```  \n  \n### Remarks  \n Initializes data members and initiates a critical section around the module's thread.  \n  \n##  <a name=\"catlmodule___dtorcatlmodule\"></a>  CAtlModule::~CAtlModule  \n The destructor.  \n  \n```\n~CAtlModule() throw();\n```  \n  \n### Remarks  \n Releases all data members.  \n  \n##  <a name=\"catlmodule__getgitptr\"></a>  CAtlModule::GetGITPtr  \n Retrieves a pointer to the Global Interface Table.  \n  \n```\nvirtual HRESULT GetGITPtr(IGlobalInterfaceTable** ppGIT) throw();\n```  \n  \n### Parameters  \n `ppGIT`  \n Pointer to the variable which will receive the pointer to the Global Interface Table.  \n  \n### Return Value  \n Returns S_OK on success, or an error code on failure. E_POINTER is returned if `ppGIT` is equal to NULL.  \n  \n### Remarks  \n If the Global Interface Table object does not exist, it is created, and its address is stored in the member variable [CAtlModule::m_pGIT](#catlmodule__m_pgit).  \n  \n In debug builds, an assertion error will occur if `ppGIT` is equal to NULL, or if the Global Interface Table pointer cannot be obtained.  \n  \n See [IGlobalInterfaceTable](http://msdn.microsoft.com/library/windows/desktop/ms678517) for information on the Global Interface Table.  \n  \n##  <a name=\"catlmodule__getlockcount\"></a>  CAtlModule::GetLockCount  \n Returns the lock count.  \n  \n```\nvirtual LONG GetLockCount() throw();\n```  \n  \n### Return Value  \n Returns the lock count. This value may be useful for diagnostics and debugging.  \n  \n##  <a name=\"catlmodule__lock\"></a>  CAtlModule::Lock  \n Increments the lock count.  \n  \n```\nvirtual LONG Lock() throw();\n```  \n  \n### Return Value  \n Increments the lock count and returns the updated value. This value may be useful for diagnostics and debugging.  \n  \n##  <a name=\"catlmodule__m_libid\"></a>  CAtlModule::m_libid  \n Contains the GUID of the current module.  \n  \n```\nstatic GUID m_libid;\n```  \n  \n##  <a name=\"catlmodule__m_pgit\"></a>  CAtlModule::m_pGIT  \n Pointer to the Global Interface Table.  \n  \n```\nIGlobalInterfaceTable* m_pGIT;\n```  \n  \n##  <a name=\"catlmodule__term\"></a>  CAtlModule::Term  \n Releases all data members.  \n  \n```\nvoid Term() throw();\n```  \n  \n### Remarks  \n Releases all data members. This method is called by the destructor.  \n  \n##  <a name=\"catlmodule__unlock\"></a>  CAtlModule::Unlock  \n Decrements the lock count.  \n  \n```\nvirtual LONG Unlock() throw();\n```  \n  \n### Return Value  \n Decrements the lock count and returns the updated value. This value may be useful for diagnostics and debugging.  \n  \n##  <a name=\"catlmodule__updateregistryfromresourced\"></a>  CAtlModule::UpdateRegistryFromResourceD  \n Runs the script contained in a specified resource to register or unregister an object.  \n  \n```\nHRESULT WINAPI UpdateRegistryFromResourceD(UINT nResID,\n    BOOL bRegister,\n    struct _ATL_REGMAP_ENTRY* pMapEntries = NULL) throw();\nHRESULT WINAPI UpdateRegistryFromResourceD(LPCTSTR lpszRes,\n    BOOL bRegister,\n    struct _ATL_REGMAP_ENTRY* pMapEntries = NULL) throw();\n```  \n  \n### Parameters  \n `lpszRes`  \n A resource name.  \n  \n `nResID`  \n A resource ID.  \n  \n `bRegister`  \n **TRUE** if the object should be registered; **FALSE** otherwise.  \n  \n `pMapEntries`  \n A pointer to the replacement map storing values associated with the script's replaceable parameters. ATL automatically uses %MODULE%. To use additional replaceable parameters, see [CAtlModule::AddCommonRGSReplacements](#catlmodule__addcommonrgsreplacements). Otherwise, use the **NULL** default value.  \n  \n### Return Value  \n Returns S_OK on success, or an error HRESULT on failure.  \n  \n### Remarks  \n Runs the script contained in the resource specified by *lpszRes or nResID*. If `bRegister` is **TRUE**, this method registers the object in the system registry; otherwise it removes the object from the registry.  \n  \n To statically link to the ATL Registry Component (Registrar), see [CAtlModule::UpdateRegistryFromResourceS](#catlmodule__updateregistryfromresources).  \n  \n This method calls [CAtlModule::UpdateRegistryFromResourceDHelper](#catlmodule__updateregistryfromresourcedhelper).  \n  \n##  <a name=\"catlmodule__updateregistryfromresourcedhelper\"></a>  CAtlModule::UpdateRegistryFromResourceDHelper  \n This method is called by `UpdateRegistryFromResourceD` to perform the registry update.  \n  \n```\ninline HRESULT WINAPI UpdateRegistryFromResourceDHelper(LPCOLESTR lpszRes,\n    BOOL bRegister,\n    struct _ATL_REGMAP_ENTRY* pMapEntries = NULL) throw();\n```  \n  \n### Parameters  \n `lpszRes`  \n A resource name.  \n  \n `bRegister`  \n Indicates whether the object should be registered.  \n  \n `pMapEntries`  \n A pointer to the replacement map storing values associated with the script's replaceable parameters. ATL automatically uses %MODULE%. To use additional replaceable parameters, see [CAtlModule::AddCommonRGSReplacements](#catlmodule__addcommonrgsreplacements). Otherwise, use the **NULL** default value.  \n  \n### Return Value  \n Returns S_OK on success, or an error HRESULT on failure.  \n  \n### Remarks  \n This method provides the implementation of [CAtlModule::UpdateRegistryFromResourceD](#catlmodule__updateregistryfromresourced).  \n  \n##  <a name=\"catlmodule__updateregistryfromresources\"></a>  CAtlModule::UpdateRegistryFromResourceS  \n Runs the script contained in a specified resource to register or unregister an object. This method statically links to the ATL Registry Component.  \n  \n```\nHRESULT WINAPI UpdateRegistryFromResourceS(UINT nResID,\n    BOOL bRegister,\n    struct _ATL_REGMAP_ENTRY* pMapEntries = NULL) throw();\nHRESULT WINAPI UpdateRegistryFromResourceS(LPCTSTR lpszRes,\n    BOOL bRegister,\n    struct _ATL_REGMAP_ENTRY* pMapEntries = NULL) throw();\n```  \n  \n### Parameters  \n `nResID`  \n A resource ID.  \n  \n `lpszRes`  \n A resource name.  \n  \n `bRegister`  \n Indicates whether the resource script should be registered.  \n  \n `pMapEntries`  \n A pointer to the replacement map storing values associated with the script's replaceable parameters. ATL automatically uses %MODULE%. To use additional replaceable parameters, see [CAtlModule::AddCommonRGSReplacements](#catlmodule__addcommonrgsreplacements). Otherwise, use the **NULL** default value.  \n  \n### Return Value  \n Returns S_OK on success, or an error HRESULT on failure.  \n  \n### Remarks  \n Similar to [CAtlModule::UpdateRegistryFromResourceD](#catlmodule__updateregistryfromresourced) except `CAtlModule::UpdateRegistryFromResourceS` creates a static link to the ATL Registry Component (Registrar).  \n  \n## See Also  \n [_ATL_MODULE](atl-typedefs.md#_atl_module)   \n [Class Overview](../../atl/atl-class-overview.md)   \n [Module Classes](../../atl/atl-module-classes.md)   \n [Registry Component (Registrar)](../../atl/atl-registry-component-registrar.md)\n\n\n\n\n\n\n\n\n\n"}