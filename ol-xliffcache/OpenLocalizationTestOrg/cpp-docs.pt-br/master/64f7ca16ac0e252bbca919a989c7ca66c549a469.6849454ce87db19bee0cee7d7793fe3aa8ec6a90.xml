{"nodes":[{"pos":[12,52],"content":"Dependency Side Effects | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Dependency Side Effects | Microsoft Docs","pos":[0,40]}]},{"content":"Dependency Side Effects","pos":[646,669]},{"content":"If a target is specified with a colon (:) in two dependency lines in different locations, and if commands appear after only one of the lines, NMAKE interprets the dependencies as if adjacent or combined.","pos":[670,873]},{"content":"It does not invoke an inference rule for the dependency that has no commands, but instead assumes that the dependencies belong to one description block and executes the commands specified with the other dependency.","pos":[874,1088]},{"content":"For example, this set of rules:","pos":[1089,1120]},{"content":"is evaluated as this:","pos":[1230,1251]},{"content":"This effect does not occur if a double colon (<ph id=\"ph1\">`::`</ph>) is used.","pos":[1343,1403],"source":"This effect does not occur if a double colon (`::`) is used."},{"content":"For example, this set of rules:","pos":[1404,1435]},{"content":"is evaluated as this:","pos":[1547,1568]},{"content":"See Also","pos":[1710,1718]},{"content":"Targets","pos":[1723,1730]}],"content":"---\ntitle: \"Dependency Side Effects | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"dependencies, side effects\"\n  - \"NMAKE program, dependents\"\nms.assetid: d4e8db25-fdc0-4d73-81ec-1538f2e1b3e8\ncaps.latest.revision: 11\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"ru-ru\"\n  - \"zh-cn\"\n  - \"zh-tw\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"tr-tr\"\n---\n# Dependency Side Effects\nIf a target is specified with a colon (:) in two dependency lines in different locations, and if commands appear after only one of the lines, NMAKE interprets the dependencies as if adjacent or combined. It does not invoke an inference rule for the dependency that has no commands, but instead assumes that the dependencies belong to one description block and executes the commands specified with the other dependency. For example, this set of rules:  \n  \n```Output  \nbounce.exe : jump.obj  \n   echo Building bounce.exe...  \n  \nbounce.exe : up.obj  \n```  \n  \n is evaluated as this:  \n  \n```Output  \nbounce.exe : jump.obj up.obj  \n   echo Building bounce.exe...  \n```  \n  \n This effect does not occur if a double colon (`::`) is used. For example, this set of rules:  \n  \n```Output  \nbounce.exe :: jump.obj  \n   echo Building bounce.exe...  \n  \nbounce.exe :: up.obj  \n```  \n  \n is evaluated as this:  \n  \n```Output  \nbounce.exe : jump.obj  \n   echo Building bounce.exe...  \n  \nbounce.exe : up.obj  \n# invokes an inference rule  \n```  \n  \n## See Also  \n [Targets](../build/targets.md)"}