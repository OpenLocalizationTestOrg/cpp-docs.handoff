<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="pt-br">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-787e512" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">92651353eeeb5832b51c6eef7ab10cd355031c69</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\mfc\mfc-activex-controls-adding-stock-properties.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d245fad2ef4727480c6e601e24968c447f99adc7</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">81427689f7e6fc1e435b4fa7e8a9e78301dff63b</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>MFC ActiveX Controls: Adding Stock Properties | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>MFC ActiveX Controls: Adding Stock Properties</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Stock properties differ from custom properties in that they are already implemented by the class <ph id="ph1">`COleControl`</ph>.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>contains predefined member functions that support common properties for the control.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Some common properties include the control's caption and the foreground and background colors.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>For information on other stock properties, see <bpt id="p1">[</bpt>Stock Properties Supported by the Add Property Wizard<ept id="p1">](#_core_stock_properties_supported_by_classwizard)</ept> later in this article.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The dispatch map entries for stock properties are always prefixed by <bpt id="p1">**</bpt>DISP_STOCKPROP<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>This article describes how to add a stock property (in this case, Caption) to an ActiveX control using the Add Property Wizard and explains the resulting code modifications.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Topics include:</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Using the Add Property Wizard to add a stock property</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Add Property Wizard changes for stock properties</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Stock properties supported by the Add Property Wizard</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Stock properties and notification</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Color properties</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Visual Basic custom controls typically have properties such as Top, Left, Width, Height, Align, Tag, Name, TabIndex, TabStop, and Parent.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>ActiveX control containers, however, are responsible for implementing these control properties and therefore ActiveX controls should not support these properties.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Using the Add Property Wizard to Add a Stock Property</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Adding stock properties requires less code than adding custom properties because support for the property is handled automatically by <ph id="ph1">`COleControl`</ph>.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The following procedure demonstrates adding the stock Caption property to an ActiveX control framework and can also be used to add other stock properties.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Substitute the selected stock property name for Caption.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>To add the stock Caption property using the Add Property Wizard</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Load your control's project.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>In Class View, expand the library node of your control.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Right-click the interface node for your control (the second node of the library node) to open the shortcut menu.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>From the shortcut menu, click <bpt id="p1">**</bpt>Add<ept id="p1">**</ept> and then click <bpt id="p2">**</bpt>Add Property<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>This opens the <bpt id="p1">[</bpt>Add Property Wizard<ept id="p1">](../ide/names-add-property-wizard.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Property Name<ept id="p1">**</ept> box, click <bpt id="p2">**</bpt>Caption<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Click <bpt id="p1">**</bpt>Finish<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Add Property Wizard Changes for Stock Properties</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Because <ph id="ph1">`COleControl`</ph> supports stock properties, the Add Property Wizard does not change the class declaration in any way; it adds the property to the dispatch map.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The Add Property Wizard adds the following line to the dispatch map of the control, which is located in the implementation (.CPP) file:</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>NVC_MFC_AxUI#22</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The following line is added to your control's interface description (.IDL) file:</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>NVC_MFC_AxUI#23</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>This line assigns the Caption property a specific ID.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Notice that the property is bindable and will request permission from the database before modifying the value.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>This makes the Caption property available to users of your control.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>To use the value of a stock property, access a member variable or member function of the <ph id="ph1">`COleControl`</ph> base class.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>For more information on these member variables and member functions, see the next section, Stock Properties Supported by the Add Property Wizard.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Stock Properties Supported by the Add Property Wizard</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`COleControl`</ph> class provides nine stock properties.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>You can add the properties you want by using the Add Property Wizard.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Property</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Dispatch map entry</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>How to access value</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Appearance</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>DISP_STOCKPROP_APPEARANCE( )</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Value accessible as <bpt id="p1">**</bpt>m_sAppearance<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>DISP_STOCKPROP_BACKCOLOR( )</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Value accessible by calling <ph id="ph1">`GetBackColor`</ph>.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>DISP_STOCKPROP_BORDERSTYLE( )</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Value accessible as <bpt id="p1">**</bpt>m_sBorderStyle<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Caption</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>DISP_STOCKPROP_CAPTION( )</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Value accessible by calling <ph id="ph1">`InternalGetText`</ph>.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Enabled</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>DISP_STOCKPROP_ENABLED( )</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Value accessible as <bpt id="p1">**</bpt>m_bEnabled<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Font</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>DISP_STOCKPROP_FONT( )</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>See the article <bpt id="p1">[</bpt>MFC ActiveX Controls: Using Fonts<ept id="p1">](../mfc/mfc-activex-controls-using-fonts.md)</ept> for usage.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>DISP_STOCKPROP_FORECOLOR( )</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Value accessible by calling <ph id="ph1">`GetForeColor`</ph>.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>hWnd</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>DISP_STOCKPROP_HWND( )</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Value accessible as <ph id="ph1">`m_hWnd`</ph>.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Text</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>DISP_STOCKPROP_TEXT( )</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Value accessible by calling <ph id="ph1">`InternalGetText`</ph>.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>This property is the same as <bpt id="p1">**</bpt>Caption<ept id="p1">**</ept>, except for the property name.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>ReadyState</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>DISP_STOCKPROP_READYSTATE()</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Value accessible as m_lReadyState or</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Stock Properties and Notification</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Most stock properties have notification functions that can be overridden.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>For example, whenever the <ph id="ph1">`BackColor`</ph> property is changed, the <ph id="ph2">`OnBackColorChanged`</ph> function (a member function of the control class) is called.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>The default implementation (in <ph id="ph1">`COleControl`</ph>) calls <ph id="ph2">`InvalidateControl`</ph>.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Override this function if you want to take additional actions in response to this situation.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Color Properties</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>You can use the stock <ph id="ph1">`ForeColor`</ph> and <ph id="ph2">`BackColor`</ph> properties, or your own custom color properties, when painting the control.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>To use a color property, call the <bpt id="p1">[</bpt>COleControl::TranslateColor<ept id="p1">](../mfc/reference/colecontrol-class.md#colecontrol__translatecolor)</ept> member function.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>The parameters of this function are the value of the color property and an optional palette handle.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>The return value is a <bpt id="p1">**</bpt>COLORREF<ept id="p1">**</ept> value that can be passed to GDI functions, such as <ph id="ph1">`SetTextColor`</ph> and <ph id="ph2">`CreateSolidBrush`</ph>.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>The color values for the stock <ph id="ph1">`ForeColor`</ph> and <ph id="ph2">`BackColor`</ph> properties are accessed by calling either the <ph id="ph3">`GetForeColor`</ph> or the <ph id="ph4">`GetBackColor`</ph> function, respectively.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The following example demonstrates using these two color properties when painting a control.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>It initializes a temporary <bpt id="p1">**</bpt>COLORREF<ept id="p1">**</ept> variable and a <ph id="ph1">`CBrush`</ph> object with calls to <ph id="ph2">`TranslateColor`</ph>: one using the <ph id="ph3">`ForeColor`</ph> property and the other using the <ph id="ph4">`BackColor`</ph> property.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>A temporary <ph id="ph1">`CBrush`</ph> object is then used to paint the control's rectangle, and the text color is set using the <ph id="ph2">`ForeColor`</ph> property.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>NVC_MFC_AxUI#24</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>MFC ActiveX Controls</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>MFC ActiveX Controls: Properties</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>MFC ActiveX Controls: Methods</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>COleControl Class</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>