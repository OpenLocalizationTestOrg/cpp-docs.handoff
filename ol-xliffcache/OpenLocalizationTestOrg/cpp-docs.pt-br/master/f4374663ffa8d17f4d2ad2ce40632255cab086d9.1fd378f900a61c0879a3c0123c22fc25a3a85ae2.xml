{"nodes":[{"pos":[12,41],"content":"module (C++) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"module (C++) | Microsoft Docs","pos":[0,29]}]},{"content":"module (C++)","pos":[640,652]},{"content":"Defines the library block in the .idl file.","pos":[653,696]},{"content":"Syntax","pos":[705,711]},{"content":"Parameters","pos":[1098,1108]},{"content":"<bpt id=\"p1\">***</bpt>type<ept id=\"p1\">***</ept>  (optional)","pos":[1112,1134],"source":"***type***  (optional)"},{"content":"Can be one of the following:","pos":[1138,1166]},{"content":"<bpt id=\"p1\">**</bpt>dll<ept id=\"p1\">**</ept> Adds functions and classes that allow the resulting DLL to function as a in-process COM server.","pos":[1176,1279],"source":"**dll** Adds functions and classes that allow the resulting DLL to function as a in-process COM server."},{"content":"This is the default value.","pos":[1280,1306]},{"pos":[1316,1430],"content":"<bpt id=\"p1\">**</bpt>exe<ept id=\"p1\">**</ept> Adds functions and classes that allow the resulting executable to function as a out of process COM server.","source":"**exe** Adds functions and classes that allow the resulting executable to function as a out of process COM server."},{"pos":[1440,1544],"content":"<bpt id=\"p1\">**</bpt>service<ept id=\"p1\">**</ept> Adds functions and classes that allow the resulting executable to function as an NT service.","source":"**service** Adds functions and classes that allow the resulting executable to function as an NT service."},{"content":"<bpt id=\"p1\">**</bpt>unspecified<ept id=\"p1\">**</ept> Disables injection of ATL code related to the module attribute: the injection of ATL Module class, global instance _AtlModule and entry point functions.","pos":[1554,1722],"source":"**unspecified** Disables injection of ATL code related to the module attribute: the injection of ATL Module class, global instance _AtlModule and entry point functions."},{"content":"Does not disable injection of ATL code due to other attributes in the project.","pos":[1724,1802]},{"pos":[1809,1865],"content":"***name***  (optional)  \nThe name of the library block.","leadings":[""," "],"nodes":[{"content":"<bpt id=\"p1\">***</bpt>name<ept id=\"p1\">***</ept>  (optional)","pos":[0,22],"source":"***name***  (optional)"},{"content":"The name of the library block.","pos":[25,55]}]},{"pos":[1872,1986],"content":"***version***  (optional)  \nThe version number you want to assign to the library block. The default value is 1.0.","leadings":[""," "],"nodes":[{"content":"<bpt id=\"p1\">***</bpt>version<ept id=\"p1\">***</ept>  (optional)","pos":[0,25],"source":"***version***  (optional)"},{"content":"The version number you want to assign to the library block. The default value is 1.0.","pos":[28,113],"nodes":[{"content":"The version number you want to assign to the library block.","pos":[0,59]},{"content":"The default value is 1.0.","pos":[60,85]}]}]},{"pos":[1993,2249],"content":"`uuid`  \nThe unique ID for the library. If you omit this parameter, an ID will be automatically generated for the library. You may need to retrieve the *uuid* of your library block, which you can do by using the identifier **__uuidof(***libraryname***)**.","leadings":[""," "],"nodes":[{"content":"The unique ID for the library. If you omit this parameter, an ID will be automatically generated for the library. You may need to retrieve the *uuid* of your library block, which you can do by using the identifier **__uuidof(***libraryname***)**.","pos":[9,255],"nodes":[{"content":"The unique ID for the library.","pos":[0,30]},{"content":"If you omit this parameter, an ID will be automatically generated for the library.","pos":[31,113]},{"content":"You may need to retrieve the <bpt id=\"p1\">*</bpt>uuid<ept id=\"p1\">*</ept> of your library block, which you can do by using the identifier <bpt id=\"p2\">**</bpt>__uuidof(<ept id=\"p2\">**</ept><bpt id=\"p3\">*</bpt>libraryname<ept id=\"p3\">*</ept><bpt id=\"p4\">**</bpt>)<ept id=\"p4\">**</ept>.","pos":[114,246],"source":" You may need to retrieve the *uuid* of your library block, which you can do by using the identifier **__uuidof(***libraryname***)**."}]}]},{"pos":[2256,2388],"content":"**lcid**  \nThe localization parameter. See [lcid](http://msdn.microsoft.com/library/windows/desktop/aa367067) for more information.","leadings":[""," "],"nodes":[{"content":"lcid","pos":[2,6]},{"content":"The localization parameter. See [lcid](http://msdn.microsoft.com/library/windows/desktop/aa367067) for more information.","pos":[11,131],"nodes":[{"content":"The localization parameter.","pos":[0,27]},{"content":"See <bpt id=\"p1\">[</bpt>lcid<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/aa367067)</ept> for more information.","pos":[28,120],"source":" See [lcid](http://msdn.microsoft.com/library/windows/desktop/aa367067) for more information."}]}]},{"pos":[2395,2478],"content":"**control** (optional)  \nSpecifies that all coclasses in the library are controls.","leadings":[""," "],"nodes":[{"content":"<bpt id=\"p1\">**</bpt>control<ept id=\"p1\">**</ept> (optional)","pos":[0,22],"source":"**control** (optional)"},{"content":"Specifies that all coclasses in the library are controls.","pos":[25,82]}]},{"pos":[2485,2530],"content":"**helpstring**  \nSpecifies the type library.","leadings":[""," "],"nodes":[{"content":"helpstring","pos":[2,12]},{"content":"Specifies the type library.","pos":[17,44]}]},{"pos":[2537,2748],"content":"***helpstringdll***  (optional)  \nSets the name of the .dll file to use to perform a document string lookup. See [helpstringdll](http://msdn.microsoft.com/library/windows/desktop/aa366860) for more information.","leadings":[""," "],"nodes":[{"content":"<bpt id=\"p1\">***</bpt>helpstringdll<ept id=\"p1\">***</ept>  (optional)","pos":[0,31],"source":"***helpstringdll***  (optional)"},{"content":"Sets the name of the .dll file to use to perform a document string lookup. See [helpstringdll](http://msdn.microsoft.com/library/windows/desktop/aa366860) for more information.","pos":[34,210],"nodes":[{"content":"Sets the name of the .dll file to use to perform a document string lookup.","pos":[0,74]},{"content":"See <bpt id=\"p1\">[</bpt>helpstringdll<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/aa366860)</ept> for more information.","pos":[75,176],"source":" See [helpstringdll](http://msdn.microsoft.com/library/windows/desktop/aa366860) for more information."}]}]},{"pos":[2755,2829],"content":"**helpfile** (optional)  \nThe name of the Help file for the type library.","leadings":[""," "],"nodes":[{"content":"<bpt id=\"p1\">**</bpt>helpfile<ept id=\"p1\">**</ept> (optional)","pos":[0,23],"source":"**helpfile** (optional)"},{"content":"The name of the Help file for the type library.","pos":[26,73]}]},{"pos":[2836,2900],"content":"**helpcontext** (optional)  \nThe Help ID for this type library.","leadings":[""," "],"nodes":[{"content":"<bpt id=\"p1\">**</bpt>helpcontext<ept id=\"p1\">**</ept> (optional)","pos":[0,26],"source":"**helpcontext** (optional)"},{"content":"The Help ID for this type library.","pos":[29,63]}]},{"pos":[2907,3021],"content":"**helpstringcontext** (optional)  \nSee [helpstringcontext](../windows/helpstringcontext.md) for more information.","leadings":[""," "],"nodes":[{"content":"<bpt id=\"p1\">**</bpt>helpstringcontext<ept id=\"p1\">**</ept> (optional)","pos":[0,32],"source":"**helpstringcontext** (optional)"},{"content":"See <bpt id=\"p1\">[</bpt>helpstringcontext<ept id=\"p1\">](../windows/helpstringcontext.md)</ept> for more information.","pos":[35,113],"source":"See [helpstringcontext](../windows/helpstringcontext.md) for more information."}]},{"pos":[3028,3351],"content":"**hidden** (optional)  \nPrevents the entire library from being displayed. This usage is intended for use with controls. Hosts need to create a new type library that wraps the control with extended properties. See the [hidden](http://msdn.microsoft.com/library/windows/desktop/aa366861) MIDL attribute for more information.","leadings":[""," "],"nodes":[{"content":"<bpt id=\"p1\">**</bpt>hidden<ept id=\"p1\">**</ept> (optional)","pos":[0,21],"source":"**hidden** (optional)"},{"content":"Prevents the entire library from being displayed. This usage is intended for use with controls. Hosts need to create a new type library that wraps the control with extended properties. See the [hidden](http://msdn.microsoft.com/library/windows/desktop/aa366861) MIDL attribute for more information.","pos":[24,322],"nodes":[{"content":"Prevents the entire library from being displayed.","pos":[0,49]},{"content":"This usage is intended for use with controls.","pos":[50,95]},{"content":"Hosts need to create a new type library that wraps the control with extended properties.","pos":[96,184]},{"content":"See the <bpt id=\"p1\">[</bpt>hidden<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/aa366861)</ept> MIDL attribute for more information.","pos":[185,298],"source":" See the [hidden](http://msdn.microsoft.com/library/windows/desktop/aa366861) MIDL attribute for more information."}]}]},{"pos":[3358,3557],"content":"**restricted** (optional)  \nMembers of the library cannot be called arbitrarily. See the [restricted](http://msdn.microsoft.com/library/windows/desktop/aa367157) MIDL attribute for more information.","leadings":[""," "],"nodes":[{"content":"<bpt id=\"p1\">**</bpt>restricted<ept id=\"p1\">**</ept> (optional)","pos":[0,25],"source":"**restricted** (optional)"},{"content":"Members of the library cannot be called arbitrarily. See the [restricted](http://msdn.microsoft.com/library/windows/desktop/aa367157) MIDL attribute for more information.","pos":[28,198],"nodes":[{"content":"Members of the library cannot be called arbitrarily.","pos":[0,52]},{"content":"See the <bpt id=\"p1\">[</bpt>restricted<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/aa367157)</ept> MIDL attribute for more information.","pos":[53,170],"source":" See the [restricted](http://msdn.microsoft.com/library/windows/desktop/aa367157) MIDL attribute for more information."}]}]},{"pos":[3564,3759],"content":"***custom***  (optional)  \nOne or more attributes; this is similar to the [custom](../windows/custom-cpp.md) attribute. The first parameter to `custom` is the GUID of the attribute. For example:","leadings":[""," "],"nodes":[{"content":"<bpt id=\"p1\">***</bpt>custom<ept id=\"p1\">***</ept>  (optional)","pos":[0,24],"source":"***custom***  (optional)"},{"content":"One or more attributes; this is similar to the [custom](../windows/custom-cpp.md) attribute. The first parameter to `custom` is the GUID of the attribute. For example:","pos":[27,194],"nodes":[{"content":"One or more attributes; this is similar to the <bpt id=\"p1\">[</bpt>custom<ept id=\"p1\">](../windows/custom-cpp.md)</ept> attribute.","pos":[0,92],"source":"One or more attributes; this is similar to the [custom](../windows/custom-cpp.md) attribute."},{"content":"The first parameter to <ph id=\"ph1\">`custom`</ph> is the GUID of the attribute.","pos":[93,154],"source":" The first parameter to `custom` is the GUID of the attribute."},{"content":"For example:","pos":[155,167]}]}]},{"content":"resource_name","pos":[3829,3842]},{"content":"The string resource ID of the .rgs file used to register the APP ID of the DLL, executable, or service.","pos":[3848,3951]},{"content":"When the module is of type service, this argument is also used to obtain the ID of the string containing the service name.","pos":[3952,4074]},{"pos":[4082,4195],"content":"[!NOTE]\n Both the .rgs file and the string containing the service name should contain the same numerical value.","leadings":["","> "],"nodes":[{"content":"Both the .rgs file and the string containing the service name should contain the same numerical value.","pos":[9,111]}]},{"content":"Remarks","pos":[4204,4211]},{"pos":[4215,4363],"content":"Unless you specify the <bpt id=\"p1\">**</bpt>restricted<ept id=\"p1\">**</ept> parameter to <bpt id=\"p2\">[</bpt>emitidl<ept id=\"p2\">](../windows/emitidl.md)</ept>, <bpt id=\"p3\">**</bpt>module<ept id=\"p3\">**</ept> is required in any program that uses C++ attributes.","source":"Unless you specify the **restricted** parameter to [emitidl](../windows/emitidl.md), **module** is required in any program that uses C++ attributes."},{"pos":[4370,4641],"content":"A library block will be created if, in addition to the <bpt id=\"p1\">**</bpt>module<ept id=\"p1\">**</ept> attribute, source code also uses <bpt id=\"p2\">[</bpt>dispinterface<ept id=\"p2\">](../windows/dispinterface.md)</ept>, <bpt id=\"p3\">[</bpt>dual<ept id=\"p3\">](../windows/dual.md)</ept>, <bpt id=\"p4\">[</bpt>object<ept id=\"p4\">](../windows/object-cpp.md)</ept>, or an attribute that implies <bpt id=\"p5\">[</bpt>coclass<ept id=\"p5\">](../windows/coclass.md)</ept>.","source":"A library block will be created if, in addition to the **module** attribute, source code also uses [dispinterface](../windows/dispinterface.md), [dual](../windows/dual.md), [object](../windows/object-cpp.md), or an attribute that implies [coclass](../windows/coclass.md)."},{"content":"One library block is allowed in an .idl file.","pos":[4648,4693]},{"content":"Multiple module entries in source code will be merged, with the most recent parameter values being implemented.","pos":[4694,4805]},{"content":"If this attribute is used within a project that uses ATL, the behavior of the attribute changes.","pos":[4812,4908]},{"content":"In addition to the above behavior, the attribute also inserts a global object (called <bpt id=\"p1\">**</bpt>_AtlModule<ept id=\"p1\">**</ept>) of the correct type and additional support code.","pos":[4909,5059],"source":" In addition to the above behavior, the attribute also inserts a global object (called **_AtlModule**) of the correct type and additional support code."},{"content":"If the attribute is standalone, it inserts a class derived from the correct module type.","pos":[5060,5148]},{"content":"If the attribute is applied to a class, it adds a base class of the correct module type.","pos":[5149,5237]},{"content":"The correct type is determined by the value of the <ph id=\"ph1\">`type`</ph> parameter:","pos":[5238,5306],"source":" The correct type is determined by the value of the `type` parameter:"},{"pos":[5327,5330],"content":"dll"},{"content":"<bpt id=\"p1\">[</bpt>CAtlDllModuleT<ept id=\"p1\">](../atl/reference/catldllmodulet-class.md)</ept> is used as the base class and the standard DLL entry points required for a COM server.","pos":[5343,5488],"source":"[CAtlDllModuleT](../atl/reference/catldllmodulet-class.md) is used as the base class and the standard DLL entry points required for a COM server."},{"content":"These entry points are <bpt id=\"p1\">[</bpt>DllMain<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms682583)</ept>, <bpt id=\"p2\">[</bpt>DllRegisterServer<ept id=\"p2\">](http://msdn.microsoft.com/library/windows/desktop/ms682162)</ept>, <bpt id=\"p3\">[</bpt>DllUnRegisterServer<ept id=\"p3\">](http://msdn.microsoft.com/library/windows/desktop/ms691457)</ept>, <bpt id=\"p4\">[</bpt>DllCanUnloadNow<ept id=\"p4\">](http://msdn.microsoft.com/library/windows/desktop/ms690368)</ept>, and <bpt id=\"p5\">[</bpt>DllGetClassObject<ept id=\"p5\">](http://msdn.microsoft.com/library/windows/desktop/dd797891)</ept>.","pos":[5489,5910],"source":" These entry points are [DllMain](http://msdn.microsoft.com/library/windows/desktop/ms682583), [DllRegisterServer](http://msdn.microsoft.com/library/windows/desktop/ms682162), [DllUnRegisterServer](http://msdn.microsoft.com/library/windows/desktop/ms691457), [DllCanUnloadNow](http://msdn.microsoft.com/library/windows/desktop/ms690368), and [DllGetClassObject](http://msdn.microsoft.com/library/windows/desktop/dd797891)."},{"pos":[5931,5934],"content":"exe"},{"pos":[5947,6142],"content":"<bpt id=\"p1\">[</bpt>CAtlExeModuleT<ept id=\"p1\">](../atl/reference/catlexemodulet-class.md)</ept> is used as the base class and the standard executable entry point <bpt id=\"p2\">[</bpt>WinMain<ept id=\"p2\">](http://msdn.microsoft.com/library/windows/desktop/ms633559)</ept>.","source":"[CAtlExeModuleT](../atl/reference/catlexemodulet-class.md) is used as the base class and the standard executable entry point [WinMain](http://msdn.microsoft.com/library/windows/desktop/ms633559)."},{"pos":[6163,6170],"content":"service"},{"pos":[6183,6386],"content":"<bpt id=\"p1\">[</bpt>CAtlServiceModuleT<ept id=\"p1\">](../atl/reference/catlservicemodulet-class.md)</ept> is used as the base class and the standard executable entry point <bpt id=\"p2\">[</bpt>WinMain<ept id=\"p2\">](http://msdn.microsoft.com/library/windows/desktop/ms633559)</ept>.","source":"[CAtlServiceModuleT](../atl/reference/catlservicemodulet-class.md) is used as the base class and the standard executable entry point [WinMain](http://msdn.microsoft.com/library/windows/desktop/ms633559)."},{"pos":[6407,6418],"content":"unspecified"},{"content":"Disables injection of ATL code related to the module attribute.","pos":[6431,6494]},{"content":"Example","pos":[6503,6510]},{"content":"The following code shows how to create a library block in the generated .idl file.","pos":[6514,6596]},{"content":"The following code shows that you can provide your own implementation of a function that would appear in the code that was injected as a result of using <bpt id=\"p1\">**</bpt>module<ept id=\"p1\">**</ept>.","pos":[6739,6903],"source":"The following code shows that you can provide your own implementation of a function that would appear in the code that was injected as a result of using **module**."},{"content":"See <bpt id=\"p1\">[</bpt>/Fx<ept id=\"p1\">](../build/reference/fx-merge-injected-code.md)</ept> for more information on viewing injected code.","pos":[6904,7006],"source":" See [/Fx](../build/reference/fx-merge-injected-code.md) for more information on viewing injected code."},{"content":"In order to override one of the functions inserted by the <bpt id=\"p1\">**</bpt>module<ept id=\"p1\">**</ept> attribute, make a class that will contain your implementation of the function and make the <bpt id=\"p2\">**</bpt>module<ept id=\"p2\">**</ept> attribute apply to that class.","pos":[7007,7208],"source":" In order to override one of the functions inserted by the **module** attribute, make a class that will contain your implementation of the function and make the **module** attribute apply to that class."},{"content":"Requirements","pos":[7808,7820]},{"content":"Attribute Context","pos":[7830,7847]},{"content":"Applies to","pos":[7870,7880]},{"content":"Anywhere","pos":[7883,7891]},{"content":"Repeatable","pos":[7898,7908]},{"content":"No","pos":[7911,7913]},{"content":"Required attributes","pos":[7920,7939]},{"content":"None","pos":[7942,7946]},{"content":"Invalid attributes","pos":[7953,7971]},{"content":"None","pos":[7974,7978]},{"pos":[7986,8067],"content":"For more information, see <bpt id=\"p1\">[</bpt>Attribute Contexts<ept id=\"p1\">](../windows/attribute-contexts.md)</ept>.","source":"For more information, see [Attribute Contexts](../windows/attribute-contexts.md)."},{"content":"See Also","pos":[8076,8084]},{"content":"IDL Attributes","pos":[8089,8103]},{"content":"Class Attributes","pos":[8140,8156]},{"content":"Stand-Alone Attributes","pos":[8195,8217]},{"content":"Typedef, Enum, Union, and Struct Attributes","pos":[8262,8305]},{"content":"usesgetlasterror","pos":[8368,8384]},{"content":"library","pos":[8423,8430]},{"content":"helpcontext","pos":[8497,8508]},{"content":"helpstring","pos":[8542,8552]},{"content":"helpfile","pos":[8585,8593]},{"content":"version","pos":[8624,8631]},{"content":"Attributes Samples","pos":[8665,8683]}],"content":"---\ntitle: \"module (C++) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"language-reference\"\nf1_keywords: \n  - \"vc-attr.module\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"module attributes\"\nms.assetid: 02223b2a-62b5-4262-832f-564b1e11e58e\ncaps.latest.revision: 10\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"ru-ru\"\n  - \"zh-cn\"\n  - \"zh-tw\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"tr-tr\"\n---\n# module (C++)\nDefines the library block in the .idl file.  \n  \n## Syntax  \n  \n```  \n  \n      [ module (  \n   type=dll,  \n   name=string,  \n   version=1.0,  \n   uuid=uuid,  \n   lcid=integer,  \n   control=boolean,  \n   helpstring=string,  \n   helpstringdll=string,  \n   helpfile=string,  \n   helpcontext=integer,  \n   helpstringcontext=integer,  \n   hidden=boolean,  \n   restricted=boolean,  \n   custom=string,  \n   resource_name=string,  \n) ];  \n```  \n  \n#### Parameters  \n ***type***  (optional)  \n Can be one of the following:  \n  \n-   **dll** Adds functions and classes that allow the resulting DLL to function as a in-process COM server. This is the default value.  \n  \n-   **exe** Adds functions and classes that allow the resulting executable to function as a out of process COM server.  \n  \n-   **service** Adds functions and classes that allow the resulting executable to function as an NT service.  \n  \n-   **unspecified** Disables injection of ATL code related to the module attribute: the injection of ATL Module class, global instance _AtlModule and entry point functions.  Does not disable injection of ATL code due to other attributes in the project.  \n  \n ***name***  (optional)  \n The name of the library block.  \n  \n ***version***  (optional)  \n The version number you want to assign to the library block. The default value is 1.0.  \n  \n `uuid`  \n The unique ID for the library. If you omit this parameter, an ID will be automatically generated for the library. You may need to retrieve the *uuid* of your library block, which you can do by using the identifier **__uuidof(***libraryname***)**.  \n  \n **lcid**  \n The localization parameter. See [lcid](http://msdn.microsoft.com/library/windows/desktop/aa367067) for more information.  \n  \n **control** (optional)  \n Specifies that all coclasses in the library are controls.  \n  \n **helpstring**  \n Specifies the type library.  \n  \n ***helpstringdll***  (optional)  \n Sets the name of the .dll file to use to perform a document string lookup. See [helpstringdll](http://msdn.microsoft.com/library/windows/desktop/aa366860) for more information.  \n  \n **helpfile** (optional)  \n The name of the Help file for the type library.  \n  \n **helpcontext** (optional)  \n The Help ID for this type library.  \n  \n **helpstringcontext** (optional)  \n See [helpstringcontext](../windows/helpstringcontext.md) for more information.  \n  \n **hidden** (optional)  \n Prevents the entire library from being displayed. This usage is intended for use with controls. Hosts need to create a new type library that wraps the control with extended properties. See the [hidden](http://msdn.microsoft.com/library/windows/desktop/aa366861) MIDL attribute for more information.  \n  \n **restricted** (optional)  \n Members of the library cannot be called arbitrarily. See the [restricted](http://msdn.microsoft.com/library/windows/desktop/aa367157) MIDL attribute for more information.  \n  \n ***custom***  (optional)  \n One or more attributes; this is similar to the [custom](../windows/custom-cpp.md) attribute. The first parameter to `custom` is the GUID of the attribute. For example:  \n  \n```  \n[module(custom={guid,1}, custom={guid1,2})]  \n```  \n  \n **resource_name**  \n The string resource ID of the .rgs file used to register the APP ID of the DLL, executable, or service. When the module is of type service, this argument is also used to obtain the ID of the string containing the service name.  \n  \n> [!NOTE]\n>  Both the .rgs file and the string containing the service name should contain the same numerical value.  \n  \n## Remarks  \n Unless you specify the **restricted** parameter to [emitidl](../windows/emitidl.md), **module** is required in any program that uses C++ attributes.  \n  \n A library block will be created if, in addition to the **module** attribute, source code also uses [dispinterface](../windows/dispinterface.md), [dual](../windows/dual.md), [object](../windows/object-cpp.md), or an attribute that implies [coclass](../windows/coclass.md).  \n  \n One library block is allowed in an .idl file. Multiple module entries in source code will be merged, with the most recent parameter values being implemented.  \n  \n If this attribute is used within a project that uses ATL, the behavior of the attribute changes. In addition to the above behavior, the attribute also inserts a global object (called **_AtlModule**) of the correct type and additional support code. If the attribute is standalone, it inserts a class derived from the correct module type. If the attribute is applied to a class, it adds a base class of the correct module type. The correct type is determined by the value of the `type` parameter:  \n  \n-   `type` = **dll**  \n  \n     [CAtlDllModuleT](../atl/reference/catldllmodulet-class.md) is used as the base class and the standard DLL entry points required for a COM server. These entry points are [DllMain](http://msdn.microsoft.com/library/windows/desktop/ms682583), [DllRegisterServer](http://msdn.microsoft.com/library/windows/desktop/ms682162), [DllUnRegisterServer](http://msdn.microsoft.com/library/windows/desktop/ms691457), [DllCanUnloadNow](http://msdn.microsoft.com/library/windows/desktop/ms690368), and [DllGetClassObject](http://msdn.microsoft.com/library/windows/desktop/dd797891).  \n  \n-   `type` = **exe**  \n  \n     [CAtlExeModuleT](../atl/reference/catlexemodulet-class.md) is used as the base class and the standard executable entry point [WinMain](http://msdn.microsoft.com/library/windows/desktop/ms633559).  \n  \n-   `type` = **service**  \n  \n     [CAtlServiceModuleT](../atl/reference/catlservicemodulet-class.md) is used as the base class and the standard executable entry point [WinMain](http://msdn.microsoft.com/library/windows/desktop/ms633559).  \n  \n-   `type` = **unspecified**  \n  \n     Disables injection of ATL code related to the module attribute.  \n  \n## Example  \n The following code shows how to create a library block in the generated .idl file.  \n  \n```  \n// cpp_attr_ref_module1.cpp  \n// compile with: /LD  \n[module(name=\"MyLibrary\", version=\"1.2\", helpfile=\"MyHelpFile\")];  \n```  \n  \n The following code shows that you can provide your own implementation of a function that would appear in the code that was injected as a result of using **module**. See [/Fx](../build/reference/fx-merge-injected-code.md) for more information on viewing injected code. In order to override one of the functions inserted by the **module** attribute, make a class that will contain your implementation of the function and make the **module** attribute apply to that class.  \n  \n```  \n// cpp_attr_ref_module2.cpp  \n// compile with: /LD /link /OPT:NOREF  \n#include <atlbase.h>  \n#include <atlcom.h>  \n#include <atlwin.h>  \n#include <atltypes.h>  \n#include <atlctl.h>  \n#include <atlhost.h>  \n#include <atlplus.h>  \n  \n// no semicolon after attribute block  \n[module(dll, name=\"MyLibrary\", version=\"1.2\", helpfile=\"MyHelpFile\")]   \n// module attribute now applies to this class  \nclass CMyClass {  \npublic:  \nBOOL WINAPI DllMain(DWORD dwReason, LPVOID lpReserved) {  \n   // add your own code here  \n   return __super::DllMain(dwReason, lpReserved);  \n   }  \n};  \n```  \n  \n## Requirements  \n  \n### Attribute Context  \n  \n|||  \n|-|-|  \n|**Applies to**|Anywhere|  \n|**Repeatable**|No|  \n|**Required attributes**|None|  \n|**Invalid attributes**|None|  \n  \n For more information, see [Attribute Contexts](../windows/attribute-contexts.md).  \n  \n## See Also  \n [IDL Attributes](../windows/idl-attributes.md)   \n [Class Attributes](../windows/class-attributes.md)   \n [Stand-Alone Attributes](../windows/stand-alone-attributes.md)   \n [Typedef, Enum, Union, and Struct Attributes](../windows/typedef-enum-union-and-struct-attributes.md)   \n [usesgetlasterror](../windows/usesgetlasterror.md)   \n [library](http://msdn.microsoft.com/library/windows/desktop/aa367069)   \n [helpcontext](../windows/helpcontext.md)   \n [helpstring](../windows/helpstring.md)   \n [helpfile](../windows/helpfile.md)   \n [version](../windows/version-cpp.md)   \n [Attributes Samples](http://msdn.microsoft.com/en-us/558ebdb2-082f-44dc-b442-d8d33bf7bdb8)"}