{"nodes":[{"pos":[12,56],"content":"Persistence of OLE Controls | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Persistence of OLE Controls | Microsoft Docs","pos":[0,44]}]},{"content":"Persistence of OLE Controls","pos":[661,688]},{"content":"One capability of OLE controls is property persistence (or serialization), which allows the OLE control to read or write property values to and from a file or stream.","pos":[689,855]},{"content":"A container application can use serialization to store a control's property values even after the application has destroyed the control.","pos":[856,992]},{"content":"The property values of the OLE control can then be read from the file or stream when a new instance of the control is created at a later time.","pos":[993,1135]},{"content":"Persistence of OLE Controls","pos":[1145,1172]},{"content":"PX_Blob","pos":[1194,1201]},{"content":"Exchanges a control property that stores binary large object (BLOB) data.","pos":[1213,1286]},{"content":"PX_Bool","pos":[1292,1299]},{"pos":[1311,1357],"content":"Exchanges a control property of type <bpt id=\"p1\">**</bpt>BOOL<ept id=\"p1\">**</ept>.","source":"Exchanges a control property of type **BOOL**."},{"content":"PX_Color","pos":[1363,1371]},{"content":"Exchanges a color property of a control.","pos":[1384,1424]},{"content":"PX_Currency","pos":[1430,1441]},{"pos":[1457,1501],"content":"Exchanges a control property of type <bpt id=\"p1\">**</bpt>CY<ept id=\"p1\">**</ept>.","source":"Exchanges a control property of type **CY**."},{"content":"PX_DataPath","pos":[1507,1518]},{"pos":[1534,1591],"content":"Exchanges a control property of type <ph id=\"ph1\">`CDataPathProperty`</ph>.","source":"Exchanges a control property of type `CDataPathProperty`."},{"content":"PX_Double","pos":[1597,1606]},{"pos":[1620,1668],"content":"Exchanges a control property of type <bpt id=\"p1\">**</bpt>double<ept id=\"p1\">**</ept>.","source":"Exchanges a control property of type **double**."},{"content":"PX_Font","pos":[1674,1681]},{"content":"Exchanges a font property of a control.","pos":[1693,1732]},{"content":"PX_Float","pos":[1738,1746]},{"pos":[1759,1806],"content":"Exchanges a control property of type <bpt id=\"p1\">**</bpt>float<ept id=\"p1\">**</ept>.","source":"Exchanges a control property of type **float**."},{"content":"PX_IUnknown","pos":[1812,1823]},{"content":"Exchanges a control property of undefined type.","pos":[1839,1886]},{"content":"PX_Long","pos":[1892,1899]},{"pos":[1911,1957],"content":"Exchanges a control property of type <bpt id=\"p1\">**</bpt>long<ept id=\"p1\">**</ept>.","source":"Exchanges a control property of type **long**."},{"content":"PX_Picture","pos":[1963,1973]},{"content":"Exchanges a picture property of a control.","pos":[1988,2030]},{"content":"PX_Short","pos":[2036,2044]},{"pos":[2057,2104],"content":"Exchanges a control property of type <bpt id=\"p1\">**</bpt>short<ept id=\"p1\">**</ept>.","source":"Exchanges a control property of type **short**."},{"content":"PX_ULong","pos":[2110,2118]},{"pos":[2131,2178],"content":"Exchanges a control property of type <bpt id=\"p1\">**</bpt>ULONG<ept id=\"p1\">**</ept>.","source":"Exchanges a control property of type **ULONG**."},{"content":"PX_UShort","pos":[2184,2193]},{"pos":[2207,2255],"content":"Exchanges a control property of type <bpt id=\"p1\">**</bpt>USHORT<ept id=\"p1\">**</ept>.","source":"Exchanges a control property of type **USHORT**."},{"content":"PXstring","pos":[2261,2269]},{"content":"Exchanges a character string control property.","pos":[2283,2329]},{"content":"PX_VBXFontConvert","pos":[2335,2352]},{"content":"Exchanges a VBX control's font-related properties into an OLE control font property.","pos":[2374,2458]},{"pos":[2466,2591],"content":"In addition, the <ph id=\"ph1\">`AfxOleTypeMatchGuid`</ph> global function is provided to test for a match between a <ph id=\"ph2\">`TYPEDESC`</ph> and a given GUID.","source":"In addition, the `AfxOleTypeMatchGuid` global function is provided to test for a match between a `TYPEDESC` and a given GUID."},{"pos":[2625,2632],"content":"PX_Blob"},{"pos":[2636,2792],"content":"Call this function within your control's <ph id=\"ph1\">`DoPropExchange`</ph> member function to serialize or initialize a property that stores binary large object (BLOB) data.","source":"Call this function within your control's `DoPropExchange` member function to serialize or initialize a property that stores binary large object (BLOB) data."},{"content":"Parameters","pos":[2959,2969]},{"content":"Pointer to the <bpt id=\"p1\">[</bpt>CPropExchange<ept id=\"p1\">](../../mfc/reference/cpropexchange-class.md)</ept> object (typically passed as a parameter to <ph id=\"ph1\">`DoPropExchange`</ph>).","pos":[2982,3118],"source":" Pointer to the [CPropExchange](../../mfc/reference/cpropexchange-class.md) object (typically passed as a parameter to `DoPropExchange`)."},{"content":"The name of the property being exchanged.","pos":[3142,3183]},{"content":"Reference to the variable where the property is stored (typically a member variable of your class).","pos":[3201,3300]},{"content":"Default value for the property.","pos":[3325,3356]},{"content":"Return Value","pos":[3366,3378]},{"content":"Nonzero if the exchange was successful; 0 if unsuccessful.","pos":[3382,3440]},{"content":"Remarks","pos":[3450,3457]},{"content":"The property's value will be read from or written to the variable referenced by <ph id=\"ph1\">`hBlob`</ph>, as appropriate.","pos":[3461,3565],"source":"The property's value will be read from or written to the variable referenced by `hBlob`, as appropriate."},{"content":"This variable should be initialized to <bpt id=\"p1\">**</bpt>NULL<ept id=\"p1\">**</ept> before initially calling <ph id=\"ph1\">`PX_Blob`</ph> for the first time (typically, this can be done in the control's constructor).","pos":[3566,3727],"source":" This variable should be initialized to **NULL** before initially calling `PX_Blob` for the first time (typically, this can be done in the control's constructor)."},{"content":"If <ph id=\"ph1\">`hBlobDefault`</ph> is specified, it will be used as the property's default value.","pos":[3728,3808],"source":" If `hBlobDefault` is specified, it will be used as the property's default value."},{"content":"This value is used if, for any reason, the control's initialization or serialization process fails.","pos":[3809,3908]},{"pos":[3915,4010],"content":"The handles <ph id=\"ph1\">`hBlob`</ph> and <ph id=\"ph2\">`hBlobDefault`</ph> refer to a block of memory which contains the following:","source":"The handles `hBlob` and `hBlobDefault` refer to a block of memory which contains the following:"},{"pos":[4020,4123],"content":"A <ph id=\"ph1\">`DWORD`</ph> which contains the length, in bytes, of the binary data that follows, followed immediately by","source":"A `DWORD` which contains the length, in bytes, of the binary data that follows, followed immediately by"},{"content":"A block of memory containing the actual binary data.","pos":[4133,4185]},{"content":"Note that <ph id=\"ph1\">`PX_Blob`</ph> will allocate memory, using the Windows <bpt id=\"p1\">[</bpt>GlobalAlloc<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/aa366574)</ept> API, when loading BLOB-type properties.","pos":[4192,4365],"source":"Note that `PX_Blob` will allocate memory, using the Windows [GlobalAlloc](http://msdn.microsoft.com/library/windows/desktop/aa366574) API, when loading BLOB-type properties."},{"content":"You are responsible for freeing this memory.","pos":[4366,4410]},{"content":"Therefore, the destructor of your control should call <bpt id=\"p1\">[</bpt>GlobalFree<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/aa366579)</ept> on any BLOB-type property handles to free up any memory allocated to your control.","pos":[4411,4620],"source":" Therefore, the destructor of your control should call [GlobalFree](http://msdn.microsoft.com/library/windows/desktop/aa366579) on any BLOB-type property handles to free up any memory allocated to your control."},{"pos":[4654,4661],"content":"PX_Bool"},{"pos":[4665,4794],"content":"Call this function within your control's <ph id=\"ph1\">`DoPropExchange`</ph> member function to serialize or initialize a property of type <bpt id=\"p1\">**</bpt>BOOL<ept id=\"p1\">**</ept>.","source":"Call this function within your control's `DoPropExchange` member function to serialize or initialize a property of type **BOOL**."},{"content":"Parameters","pos":[5037,5047]},{"content":"Pointer to the <bpt id=\"p1\">[</bpt>CPropExchange<ept id=\"p1\">](../../mfc/reference/cpropexchange-class.md)</ept> object (typically passed as a parameter to <ph id=\"ph1\">`DoPropExchange`</ph>).","pos":[5060,5196],"source":" Pointer to the [CPropExchange](../../mfc/reference/cpropexchange-class.md) object (typically passed as a parameter to `DoPropExchange`)."},{"content":"The name of the property being exchanged.","pos":[5220,5261]},{"content":"Reference to the variable where the property is stored (typically a member variable of your class).","pos":[5280,5379]},{"content":"Default value for the property.","pos":[5400,5431]},{"content":"Return Value","pos":[5441,5453]},{"content":"Nonzero if the exchange was successful; 0 if unsuccessful.","pos":[5457,5515]},{"content":"Remarks","pos":[5525,5532]},{"content":"The property's value will be read from or written to the variable referenced by <ph id=\"ph1\">`bValue`</ph>, as appropriate.","pos":[5536,5641],"source":"The property's value will be read from or written to the variable referenced by `bValue`, as appropriate."},{"content":"If <ph id=\"ph1\">`bDefault`</ph> is specified, it will be used as the property's default value.","pos":[5642,5718],"source":" If `bDefault` is specified, it will be used as the property's default value."},{"content":"This value is used if, for any reason, the control's serialization process fails.","pos":[5719,5800]},{"pos":[5835,5843],"content":"PX_Color"},{"pos":[5847,5981],"content":"Call this function within your control's <ph id=\"ph1\">`DoPropExchange`</ph> member function to serialize or initialize a property of type <bpt id=\"p1\">**</bpt>OLE_COLOR<ept id=\"p1\">**</ept>.","source":"Call this function within your control's `DoPropExchange` member function to serialize or initialize a property of type **OLE_COLOR**."},{"content":"Parameters","pos":[6244,6254]},{"content":"Pointer to the <bpt id=\"p1\">[</bpt>CPropExchange<ept id=\"p1\">](../../mfc/reference/cpropexchange-class.md)</ept> object (typically passed as a parameter to <ph id=\"ph1\">`DoPropExchange`</ph>).","pos":[6267,6403],"source":" Pointer to the [CPropExchange](../../mfc/reference/cpropexchange-class.md) object (typically passed as a parameter to `DoPropExchange`)."},{"content":"The name of the property being exchanged.","pos":[6427,6468]},{"content":"Reference to the variable where the property is stored (typically a member variable of your class).","pos":[6489,6588]},{"content":"Default value for the property, as defined by the control developer.","pos":[6611,6679]},{"content":"Return Value","pos":[6689,6701]},{"content":"Nonzero if the exchange was successful; 0 if unsuccessful.","pos":[6705,6763]},{"content":"Remarks","pos":[6773,6780]},{"content":"The property's value will be read from or written to the variable referenced by <ph id=\"ph1\">`clrValue`</ph>, as appropriate.","pos":[6784,6891],"source":"The property's value will be read from or written to the variable referenced by `clrValue`, as appropriate."},{"content":"If <ph id=\"ph1\">`clrDefault`</ph> is specified, it will be used as the property's default value.","pos":[6892,6970],"source":" If `clrDefault` is specified, it will be used as the property's default value."},{"content":"This value is used if, for any reason, the control's serialization process fails.","pos":[6971,7052]},{"pos":[7090,7101],"content":"PX_Currency"},{"pos":[7105,7238],"content":"Call this function within your control's <ph id=\"ph1\">`DoPropExchange`</ph> member function to serialize or initialize a property of type <bpt id=\"p1\">**</bpt>currency<ept id=\"p1\">**</ept>.","source":"Call this function within your control's `DoPropExchange` member function to serialize or initialize a property of type **currency**."},{"content":"Parameters","pos":[7486,7496]},{"content":"Pointer to the <bpt id=\"p1\">[</bpt>CPropExchange<ept id=\"p1\">](../../mfc/reference/cpropexchange-class.md)</ept> object (typically passed as a parameter to <ph id=\"ph1\">`DoPropExchange`</ph>).","pos":[7509,7645],"source":" Pointer to the [CPropExchange](../../mfc/reference/cpropexchange-class.md) object (typically passed as a parameter to `DoPropExchange`)."},{"content":"The name of the property being exchanged.","pos":[7669,7710]},{"content":"Reference to the variable where the property is stored (typically a member variable of your class).","pos":[7730,7829]},{"content":"Default value for the property.","pos":[7851,7882]},{"content":"Return Value","pos":[7892,7904]},{"content":"Nonzero if the exchange was successful; 0 if unsuccessful.","pos":[7908,7966]},{"content":"Remarks","pos":[7976,7983]},{"content":"The property's value will be read from or written to the variable referenced by <ph id=\"ph1\">`cyValue`</ph>, as appropriate.","pos":[7987,8093],"source":"The property's value will be read from or written to the variable referenced by `cyValue`, as appropriate."},{"content":"If <ph id=\"ph1\">`cyDefault`</ph> is specified, it will be used as the property's default value.","pos":[8094,8171],"source":" If `cyDefault` is specified, it will be used as the property's default value."},{"content":"This value is used if, for any reason, the control's serialization process fails.","pos":[8172,8253]},{"pos":[8291,8302],"content":"PX_DataPath"},{"pos":[8306,8504],"content":"Call this function within your control's <ph id=\"ph1\">`DoPropExchange`</ph> member function to serialize or initialize a data path property of type <bpt id=\"p1\">[</bpt>CDataPathProperty<ept id=\"p1\">](../../mfc/reference/cdatapathproperty-class.md)</ept>.","source":"Call this function within your control's `DoPropExchange` member function to serialize or initialize a data path property of type [CDataPathProperty](../../mfc/reference/cdatapathproperty-class.md)."},{"content":"Parameters","pos":[8741,8751]},{"content":"Pointer to the <bpt id=\"p1\">[</bpt>CPropExchange<ept id=\"p1\">](../../mfc/reference/cpropexchange-class.md)</ept> object (typically passed as a parameter to <ph id=\"ph1\">`DoPropExchange`</ph>).","pos":[8764,8900],"source":" Pointer to the [CPropExchange](../../mfc/reference/cpropexchange-class.md) object (typically passed as a parameter to `DoPropExchange`)."},{"content":"The name of the property being exchanged.","pos":[8924,8965]},{"content":"Reference to the variable where the property is stored (typically a member variable of your class).","pos":[8994,9093]},{"content":"Return Value","pos":[9103,9115]},{"content":"Nonzero if the exchange was successful; 0 if unsuccessful.","pos":[9119,9177]},{"content":"Remarks","pos":[9187,9194]},{"content":"Data path properties implement asynchronous control properties.","pos":[9198,9261]},{"content":"The property's value will be read from or written to the variable referenced by <ph id=\"ph1\">`dataPathProperty`</ph>, as appropriate.","pos":[9262,9377],"source":" The property's value will be read from or written to the variable referenced by `dataPathProperty`, as appropriate."},{"pos":[9413,9422],"content":"PX_Double"},{"pos":[9426,9557],"content":"Call this function within your control's <ph id=\"ph1\">`DoPropExchange`</ph> member function to serialize or initialize a property of type <bpt id=\"p1\">**</bpt>double<ept id=\"p1\">**</ept>.","source":"Call this function within your control's `DoPropExchange` member function to serialize or initialize a property of type **double**."},{"content":"Parameters","pos":[9825,9835]},{"content":"Pointer to the <bpt id=\"p1\">[</bpt>CPropExchange<ept id=\"p1\">](../../mfc/reference/cpropexchange-class.md)</ept> object (typically passed as a parameter to <ph id=\"ph1\">`DoPropExchange`</ph>).","pos":[9848,9984],"source":" Pointer to the [CPropExchange](../../mfc/reference/cpropexchange-class.md) object (typically passed as a parameter to `DoPropExchange`)."},{"content":"The name of the property being exchanged.","pos":[10008,10049]},{"content":"Reference to the variable where the property is stored (typically a member variable of your class).","pos":[10073,10172]},{"content":"Default value for the property.","pos":[10198,10229]},{"content":"Return Value","pos":[10239,10251]},{"content":"Nonzero if the exchange was successful; 0 if unsuccessful.","pos":[10255,10313]},{"content":"Remarks","pos":[10323,10330]},{"content":"The property's value is read from or written to the variable referenced by <ph id=\"ph1\">`doubleValue`</ph>, as appropriate.","pos":[10334,10439],"source":"The property's value is read from or written to the variable referenced by `doubleValue`, as appropriate."},{"content":"If <ph id=\"ph1\">`doubleDefault`</ph> is specified, it will be used as the property's default value.","pos":[10440,10521],"source":" If `doubleDefault` is specified, it will be used as the property's default value."},{"content":"This value is used if, for any reason, the control's serialization process fails.","pos":[10522,10603]},{"pos":[10637,10644],"content":"PX_Font"},{"pos":[10648,10773],"content":"Call this function within your control's <ph id=\"ph1\">`DoPropExchange`</ph> member function to serialize or initialize a property of type font.","source":"Call this function within your control's `DoPropExchange` member function to serialize or initialize a property of type font."},{"content":"Parameters","pos":[11001,11011]},{"content":"Pointer to the <bpt id=\"p1\">[</bpt>CPropExchange<ept id=\"p1\">](../../mfc/reference/cpropexchange-class.md)</ept> object (typically passed as a parameter to <ph id=\"ph1\">`DoPropExchange`</ph>).","pos":[11024,11160],"source":" Pointer to the [CPropExchange](../../mfc/reference/cpropexchange-class.md) object (typically passed as a parameter to `DoPropExchange`)."},{"content":"The name of the property being exchanged.","pos":[11184,11225]},{"content":"A reference to a <ph id=\"ph1\">`CFontHolder`</ph> object that contains the font property.","pos":[11242,11312],"source":" A reference to a `CFontHolder` object that contains the font property."},{"content":"A pointer to a <bpt id=\"p1\">**</bpt>FONTDESC<ept id=\"p1\">**</ept> structure containing the values to use in initializing the default state of the font property, in the case where <ph id=\"ph1\">`pFontDispAmbient`</ph> is <bpt id=\"p2\">**</bpt>NULL<ept id=\"p2\">**</ept>.","pos":[11334,11506],"source":" A pointer to a **FONTDESC** structure containing the values to use in initializing the default state of the font property, in the case where `pFontDispAmbient` is **NULL**."},{"content":"A pointer to the <bpt id=\"p1\">**</bpt>IFontDisp<ept id=\"p1\">**</ept> interface of a font to use in initializing the default state of the font property.","pos":[11535,11648],"source":" A pointer to the **IFontDisp** interface of a font to use in initializing the default state of the font property."},{"content":"Return Value","pos":[11658,11670]},{"content":"Nonzero if the exchange was successful; 0 if unsuccessful.","pos":[11674,11732]},{"content":"Remarks","pos":[11742,11749]},{"content":"The property's value is read from or written to <ph id=\"ph1\">`font`</ph>, a <ph id=\"ph2\">`CFontHolder`</ph> reference, when appropriate.","pos":[11753,11853],"source":"The property's value is read from or written to `font`, a `CFontHolder` reference, when appropriate."},{"content":"If <ph id=\"ph1\">`pFontDesc`</ph> and <ph id=\"ph2\">`pFontDispAmbient`</ph> are specified, they are used for initializing the property's default value, when needed.","pos":[11854,11980],"source":" If `pFontDesc` and `pFontDispAmbient` are specified, they are used for initializing the property's default value, when needed."},{"content":"These values are used if, for any reason, the control's serialization process fails.","pos":[11981,12065]},{"content":"Typically, you pass <bpt id=\"p1\">**</bpt>NULL<ept id=\"p1\">**</ept> for <ph id=\"ph1\">`pFontDesc`</ph> and the ambient value returned by <ph id=\"ph2\">`COleControl::AmbientFont`</ph> for <ph id=\"ph3\">`pFontDispAmbient`</ph>.","pos":[12066,12195],"source":" Typically, you pass **NULL** for `pFontDesc` and the ambient value returned by `COleControl::AmbientFont` for `pFontDispAmbient`."},{"content":"Note that the font object returned by <ph id=\"ph1\">`COleControl::AmbientFont`</ph> must be released by a call to the <bpt id=\"p1\">**</bpt>IFontDisp::Release<ept id=\"p1\">**</ept> member function.","pos":[12196,12334],"source":" Note that the font object returned by `COleControl::AmbientFont` must be released by a call to the **IFontDisp::Release** member function."},{"pos":[12369,12377],"content":"PX_Float"},{"pos":[12381,12511],"content":"Call this function within your control's <ph id=\"ph1\">`DoPropExchange`</ph> member function to serialize or initialize a property of type <bpt id=\"p1\">**</bpt>float<ept id=\"p1\">**</ept>.","source":"Call this function within your control's `DoPropExchange` member function to serialize or initialize a property of type **float**."},{"content":"Parameters","pos":[12771,12781]},{"content":"Pointer to the <bpt id=\"p1\">[</bpt>CPropExchange<ept id=\"p1\">](../../mfc/reference/cpropexchange-class.md)</ept> object (typically passed as a parameter to <ph id=\"ph1\">`DoPropExchange`</ph>).","pos":[12794,12930],"source":" Pointer to the [CPropExchange](../../mfc/reference/cpropexchange-class.md) object (typically passed as a parameter to `DoPropExchange`)."},{"content":"The name of the property being exchanged.","pos":[12954,12995]},{"content":"Reference to the variable where the property is stored (typically a member variable of your class).","pos":[13018,13117]},{"content":"Default value for the property.","pos":[13142,13173]},{"content":"Return Value","pos":[13183,13195]},{"content":"Nonzero if the exchange was successful; 0 if unsuccessful.","pos":[13199,13257]},{"content":"Remarks","pos":[13267,13274]},{"content":"The property's value is read from or written to the variable referenced by <ph id=\"ph1\">`floatValue`</ph>, as appropriate.","pos":[13278,13382],"source":"The property's value is read from or written to the variable referenced by `floatValue`, as appropriate."},{"content":"If <ph id=\"ph1\">`floatDefault`</ph> is specified, it will be used as the property's default value.","pos":[13383,13463],"source":" If `floatDefault` is specified, it will be used as the property's default value."},{"content":"This value is used if, for any reason, the control's serialization process fails.","pos":[13464,13545]},{"pos":[13583,13594],"content":"PX_IUnknown"},{"pos":[13598,13776],"content":"Call this function within your control's <ph id=\"ph1\">`DoPropExchange`</ph> member function to serialize or initialize a property represented by an object having an <bpt id=\"p1\">**</bpt>IUnknown<ept id=\"p1\">**</ept>-derived interface.","source":"Call this function within your control's `DoPropExchange` member function to serialize or initialize a property represented by an object having an **IUnknown**-derived interface."},{"content":"Parameters","pos":[13970,13980]},{"content":"Pointer to the <bpt id=\"p1\">[</bpt>CPropExchange<ept id=\"p1\">](../../mfc/reference/cpropexchange-class.md)</ept> object (typically passed as a parameter to <ph id=\"ph1\">`DoPropExchange`</ph>).","pos":[13993,14129],"source":" Pointer to the [CPropExchange](../../mfc/reference/cpropexchange-class.md) object (typically passed as a parameter to `DoPropExchange`)."},{"content":"The name of the property being exchanged.","pos":[14153,14194]},{"content":"pUnk","pos":[14202,14206]},{"content":"Reference to a variable containing the interface of the object that represents the value of the property.","pos":[14211,14316]},{"content":"An interface ID indicating which interface of the property object is used by the control.","pos":[14332,14421]},{"content":"Default value for the property.","pos":[14445,14476]},{"content":"Return Value","pos":[14486,14498]},{"content":"Nonzero if the exchange was successful; 0 if unsuccessful.","pos":[14502,14560]},{"content":"Remarks","pos":[14570,14577]},{"content":"The property's value is read from or written to the variable referenced by <bpt id=\"p1\">*</bpt>pUnk<ept id=\"p1\">*</ept>, as appropriate.","pos":[14581,14679],"source":"The property's value is read from or written to the variable referenced by *pUnk*, as appropriate."},{"content":"If <ph id=\"ph1\">`pUnkDefault`</ph> is specified, it will be used as the property's default value.","pos":[14680,14759],"source":" If `pUnkDefault` is specified, it will be used as the property's default value."},{"content":"This value is used if, for any reason, the control's serialization process fails.","pos":[14760,14841]},{"pos":[14875,14882],"content":"PX_Long"},{"pos":[14886,15015],"content":"Call this function within your control's <ph id=\"ph1\">`DoPropExchange`</ph> member function to serialize or initialize a property of type <bpt id=\"p1\">**</bpt>long<ept id=\"p1\">**</ept>.","source":"Call this function within your control's `DoPropExchange` member function to serialize or initialize a property of type **long**."},{"content":"Parameters","pos":[15258,15268]},{"content":"Pointer to the <bpt id=\"p1\">[</bpt>CPropExchange<ept id=\"p1\">](../../mfc/reference/cpropexchange-class.md)</ept> object (typically passed as a parameter to <ph id=\"ph1\">`DoPropExchange`</ph>).","pos":[15281,15417],"source":" Pointer to the [CPropExchange](../../mfc/reference/cpropexchange-class.md) object (typically passed as a parameter to `DoPropExchange`)."},{"content":"The name of the property being exchanged.","pos":[15441,15482]},{"content":"Reference to the variable where the property is stored (typically a member variable of your class).","pos":[15501,15600]},{"content":"Default value for the property.","pos":[15621,15652]},{"content":"Return Value","pos":[15662,15674]},{"content":"Nonzero if the exchange was successful; 0 if unsuccessful.","pos":[15678,15736]},{"content":"Remarks","pos":[15746,15753]},{"content":"The property's value is read from or written to the variable referenced by <ph id=\"ph1\">`lValue`</ph>, as appropriate.","pos":[15757,15857],"source":"The property's value is read from or written to the variable referenced by `lValue`, as appropriate."},{"content":"If <ph id=\"ph1\">`lDefault`</ph> is specified, it will be used as the property's default value.","pos":[15858,15934],"source":" If `lDefault` is specified, it will be used as the property's default value."},{"content":"This value is used if, for any reason, the control's serialization process fails.","pos":[15935,16016]},{"pos":[16053,16063],"content":"PX_Picture"},{"pos":[16067,16203],"content":"Call this function within your control's <ph id=\"ph1\">`DoPropExchange`</ph> member function to serialize or initialize a picture property of your control.","source":"Call this function within your control's `DoPropExchange` member function to serialize or initialize a picture property of your control."},{"content":"Parameters","pos":[16482,16492]},{"content":"Pointer to the <bpt id=\"p1\">[</bpt>CPropExchange<ept id=\"p1\">](../../mfc/reference/cpropexchange-class.md)</ept> object (typically passed as a parameter to <ph id=\"ph1\">`DoPropExchange`</ph>).","pos":[16505,16641],"source":" Pointer to the [CPropExchange](../../mfc/reference/cpropexchange-class.md) object (typically passed as a parameter to `DoPropExchange`)."},{"content":"The name of the property being exchanged.","pos":[16665,16706]},{"content":"Reference to a <bpt id=\"p1\">[</bpt>CPictureHolder<ept id=\"p1\">](../../mfc/reference/cpictureholder-class.md)</ept> object where the property is stored (typically a member variable of your class).","pos":[16723,16880],"source":" Reference to a [CPictureHolder](../../mfc/reference/cpictureholder-class.md) object where the property is stored (typically a member variable of your class)."},{"content":"Default value for the property.","pos":[16904,16935]},{"content":"Return Value","pos":[16945,16957]},{"content":"Nonzero if the exchange was successful; 0 if unsuccessful.","pos":[16961,17019]},{"content":"Remarks","pos":[17029,17036]},{"content":"The property's value is read from or written to the variable referenced by <ph id=\"ph1\">`pict`</ph>, as appropriate.","pos":[17040,17138],"source":"The property's value is read from or written to the variable referenced by `pict`, as appropriate."},{"content":"If <ph id=\"ph1\">`pictDefault`</ph> is specified, it will be used as the property's default value.","pos":[17139,17218],"source":" If `pictDefault` is specified, it will be used as the property's default value."},{"content":"This value is used if, for any reason, the control's serialization process fails.","pos":[17219,17300]},{"pos":[17335,17343],"content":"PX_Short"},{"pos":[17347,17477],"content":"Call this function within your control's <ph id=\"ph1\">`DoPropExchange`</ph> member function to serialize or initialize a property of type <bpt id=\"p1\">**</bpt>short<ept id=\"p1\">**</ept>.","source":"Call this function within your control's `DoPropExchange` member function to serialize or initialize a property of type **short**."},{"content":"Parameters","pos":[17725,17735]},{"content":"Pointer to the <bpt id=\"p1\">[</bpt>CPropExchange<ept id=\"p1\">](../../mfc/reference/cpropexchange-class.md)</ept> object (typically passed as a parameter to <ph id=\"ph1\">`DoPropExchange`</ph>).","pos":[17748,17884],"source":" Pointer to the [CPropExchange](../../mfc/reference/cpropexchange-class.md) object (typically passed as a parameter to `DoPropExchange`)."},{"content":"The name of the property being exchanged.","pos":[17908,17949]},{"content":"Reference to the variable where the property is stored (typically a member variable of your class).","pos":[17968,18067]},{"content":"Default value for the property.","pos":[18088,18119]},{"content":"Return Value","pos":[18129,18141]},{"content":"Nonzero if the exchange was successful; 0 if unsuccessful.","pos":[18145,18203]},{"content":"Remarks","pos":[18213,18220]},{"content":"The property's value is read from or written to the variable referenced by <ph id=\"ph1\">`sValue`</ph>, as appropriate.","pos":[18224,18324],"source":"The property's value is read from or written to the variable referenced by `sValue`, as appropriate."},{"content":"If <ph id=\"ph1\">`sDefault`</ph> is specified, it will be used as the property's default value.","pos":[18325,18401],"source":" If `sDefault` is specified, it will be used as the property's default value."},{"content":"This value is used if, for any reason, the control's serialization process fails.","pos":[18402,18483]},{"pos":[18518,18526],"content":"PX_ULong"},{"pos":[18530,18660],"content":"Call this function within your control's <ph id=\"ph1\">`DoPropExchange`</ph> member function to serialize or initialize a property of type <bpt id=\"p1\">**</bpt>ULONG<ept id=\"p1\">**</ept>.","source":"Call this function within your control's `DoPropExchange` member function to serialize or initialize a property of type **ULONG**."},{"content":"Parameters","pos":[18910,18920]},{"content":"Pointer to the <bpt id=\"p1\">[</bpt>CPropExchange<ept id=\"p1\">](../../mfc/reference/cpropexchange-class.md)</ept> object (typically passed as a parameter to <ph id=\"ph1\">`DoPropExchange`</ph>).","pos":[18933,19069],"source":" Pointer to the [CPropExchange](../../mfc/reference/cpropexchange-class.md) object (typically passed as a parameter to `DoPropExchange`)."},{"content":"Name of the property being exchanged.","pos":[19093,19130]},{"content":"Reference to the variable where the property is stored (typically a member variable of your class).","pos":[19150,19249]},{"content":"Default value for the property.","pos":[19271,19302]},{"content":"Return Value","pos":[19312,19324]},{"content":"Nonzero if the exchange was successful; 0 if unsuccessful.","pos":[19328,19386]},{"content":"Remarks","pos":[19396,19403]},{"content":"The property's value is read from or written to the variable referenced by <ph id=\"ph1\">`ulValue`</ph>, as appropriate.","pos":[19407,19508],"source":"The property's value is read from or written to the variable referenced by `ulValue`, as appropriate."},{"content":"If <ph id=\"ph1\">`ulDefault`</ph> is specified, it will be used as the property's default value.","pos":[19509,19586],"source":" If `ulDefault` is specified, it will be used as the property's default value."},{"content":"This value is used if, for any reason, the control's serialization process fails.","pos":[19587,19668]},{"pos":[19704,19713],"content":"PX_UShort"},{"pos":[19717,19858],"content":"Call this function within your control's <ph id=\"ph1\">`DoPropExchange`</ph> member function to serialize or initialize a property of type <ph id=\"ph2\">`unsigned`</ph> <bpt id=\"p1\">**</bpt>short<ept id=\"p1\">**</ept>.","source":"Call this function within your control's `DoPropExchange` member function to serialize or initialize a property of type `unsigned` **short**."},{"content":"Parameters","pos":[20114,20124]},{"content":"Pointer to the <bpt id=\"p1\">[</bpt>CPropExchange<ept id=\"p1\">](../../mfc/reference/cpropexchange-class.md)</ept> object (typically passed as a parameter to <ph id=\"ph1\">`DoPropExchange`</ph>).","pos":[20137,20273],"source":" Pointer to the [CPropExchange](../../mfc/reference/cpropexchange-class.md) object (typically passed as a parameter to `DoPropExchange`)."},{"content":"Name of the property being exchanged.","pos":[20297,20334]},{"content":"usValue","pos":[20342,20349]},{"content":"Reference to the variable where the property is stored (typically a member variable of your class).","pos":[20354,20453]},{"content":"usDefault","pos":[20461,20470]},{"content":"Default value for the property.","pos":[20475,20506]},{"content":"Return Value","pos":[20516,20528]},{"content":"Nonzero if the exchange was successful; 0 if unsuccessful.","pos":[20532,20590]},{"content":"Remarks","pos":[20600,20607]},{"content":"The property's value is read from or written to the variable referenced by <bpt id=\"p1\">*</bpt>usValue<ept id=\"p1\">*</ept>, as appropriate.","pos":[20611,20712],"source":"The property's value is read from or written to the variable referenced by *usValue*, as appropriate."},{"content":"If <bpt id=\"p1\">*</bpt>usDefault<ept id=\"p1\">*</ept> is specified, it will be used as the property's default value.","pos":[20713,20790],"source":" If *usDefault* is specified, it will be used as the property's default value."},{"content":"This value is used if, for any reason, the control's serialization process fails.","pos":[20791,20872]},{"pos":[20908,20916],"content":"PXstring"},{"pos":[20920,21051],"content":"Call this function within your control's <bpt id=\"p1\">**</bpt>DoPropExchange<ept id=\"p1\">**</ept> member function to serialize or initialize a character string property.","source":"Call this function within your control's **DoPropExchange** member function to serialize or initialize a character string property."},{"content":"Parameters","pos":[21311,21321]},{"content":"Pointer to the <bpt id=\"p1\">[</bpt>CPropExchange<ept id=\"p1\">](../../mfc/reference/cpropexchange-class.md)</ept> object (typically passed as a parameter to <ph id=\"ph1\">`DoPropExchange`</ph>).","pos":[21334,21470],"source":" Pointer to the [CPropExchange](../../mfc/reference/cpropexchange-class.md) object (typically passed as a parameter to `DoPropExchange`)."},{"content":"The name of the property being exchanged.","pos":[21494,21535]},{"content":"Reference to the variable where the property is stored (typically a member variable of your class).","pos":[21556,21655]},{"content":"Default value for the property.","pos":[21678,21709]},{"content":"Return Value","pos":[21719,21731]},{"content":"Nonzero if the exchange was successful; 0 if unsuccessful.","pos":[21735,21793]},{"content":"Remarks","pos":[21803,21810]},{"content":"The property's value is read from or written to the variable referenced by <ph id=\"ph1\">`strValue`</ph>, as appropriate.","pos":[21814,21916],"source":"The property's value is read from or written to the variable referenced by `strValue`, as appropriate."},{"content":"If <ph id=\"ph1\">`strDefault`</ph> is specified, it will be used as the property's default value.","pos":[21917,21995],"source":" If `strDefault` is specified, it will be used as the property's default value."},{"content":"This value is used if, for any reason, the control's serialization process fails.","pos":[21996,22077]},{"pos":[22121,22138],"content":"PX_VBXFontConvert"},{"pos":[22142,22300],"content":"Call this function within your control's <ph id=\"ph1\">`DoPropExchange`</ph> member function to initialize a font property by converting a VBX control's font-related properties.","source":"Call this function within your control's `DoPropExchange` member function to initialize a font property by converting a VBX control's font-related properties."},{"content":"Parameters","pos":[22409,22419]},{"content":"Pointer to the <bpt id=\"p1\">[</bpt>CPropExchange<ept id=\"p1\">](../../mfc/reference/cpropexchange-class.md)</ept> object (typically passed as a parameter to <ph id=\"ph1\">`DoPropExchange`</ph>).","pos":[22432,22568],"source":" Pointer to the [CPropExchange](../../mfc/reference/cpropexchange-class.md) object (typically passed as a parameter to `DoPropExchange`)."},{"content":"The font property of the OLE control that will contain the converted VBX font-related properties.","pos":[22585,22682]},{"content":"Return Value","pos":[22692,22704]},{"content":"Nonzero if the exchange was successful; 0 if unsuccessful.","pos":[22708,22766]},{"content":"Remarks","pos":[22776,22783]},{"content":"This function should be used only by an OLE control that is designed as a direct replacement for a VBX control.","pos":[22787,22898]},{"content":"When the Visual Basic development environment converts a form containing a VBX control to use the corresponding replacement OLE control, it will call the control's <bpt id=\"p1\">**</bpt>IDataObject::SetData<ept id=\"p1\">**</ept> function, passing in a property set that contains the VBX control's property data.","pos":[22899,23170],"source":" When the Visual Basic development environment converts a form containing a VBX control to use the corresponding replacement OLE control, it will call the control's **IDataObject::SetData** function, passing in a property set that contains the VBX control's property data."},{"content":"This operation, in turn, causes the control's <ph id=\"ph1\">`DoPropExchange`</ph> function to be invoked.","pos":[23171,23257],"source":" This operation, in turn, causes the control's `DoPropExchange` function to be invoked."},{"content":"can call <ph id=\"ph1\">`PX_VBXFontConvert`</ph> to convert the VBX control's font-related properties (for example, \"FontName,\" \"FontSize,\" and so on) into the corresponding components of the OLE control's font property.","pos":[23275,23475],"source":" can call `PX_VBXFontConvert` to convert the VBX control's font-related properties (for example, \"FontName,\" \"FontSize,\" and so on) into the corresponding components of the OLE control's font property."},{"content":"should only be called when the control is actually being converted from a VBX form application.","pos":[23502,23597]},{"content":"For example:","pos":[23598,23610]},{"content":"NVC_MFCActiveXControl#14","pos":[23628,23652]},{"content":"NVC_MFCActiveXControl#15","pos":[23729,23753]},{"content":"See Also","pos":[23825,23833]},{"content":"Macros and Globals","pos":[23838,23856]}],"content":"---\ntitle: \"Persistence of OLE Controls | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"vc.mfc.macros.ole\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"OLE controls, persistence\"\n  - \"persistence, OLE controls\"\nms.assetid: 64f8dc80-f110-41af-b3ea-14948f6bfdf7\ncaps.latest.revision: 17\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Persistence of OLE Controls\nOne capability of OLE controls is property persistence (or serialization), which allows the OLE control to read or write property values to and from a file or stream. A container application can use serialization to store a control's property values even after the application has destroyed the control. The property values of the OLE control can then be read from the file or stream when a new instance of the control is created at a later time.  \n  \n### Persistence of OLE Controls  \n  \n|||  \n|-|-|  \n|[PX_Blob](#px_blob)|Exchanges a control property that stores binary large object (BLOB) data.|  \n|[PX_Bool](#px_bool)|Exchanges a control property of type **BOOL**.|  \n|[PX_Color](#px_color)|Exchanges a color property of a control.|  \n|[PX_Currency](#px_currency)|Exchanges a control property of type **CY**.|  \n|[PX_DataPath](#px_datapath)|Exchanges a control property of type `CDataPathProperty`.|  \n|[PX_Double](#px_double)|Exchanges a control property of type **double**.|  \n|[PX_Font](#px_font)|Exchanges a font property of a control.|  \n|[PX_Float](#px_float)|Exchanges a control property of type **float**.|  \n|[PX_IUnknown](#px_iunknown)|Exchanges a control property of undefined type.|  \n|[PX_Long](#px_long)|Exchanges a control property of type **long**.|  \n|[PX_Picture](#px_picture)|Exchanges a picture property of a control.|  \n|[PX_Short](#px_short)|Exchanges a control property of type **short**.|  \n|[PX_ULong](#px_ulong)|Exchanges a control property of type **ULONG**.|  \n|[PX_UShort](#px_ushort)|Exchanges a control property of type **USHORT**.|  \n|[PXstring](#px_string)|Exchanges a character string control property.|  \n|[PX_VBXFontConvert](#px_vbxfontconvert)|Exchanges a VBX control's font-related properties into an OLE control font property.|  \n  \n In addition, the `AfxOleTypeMatchGuid` global function is provided to test for a match between a `TYPEDESC` and a given GUID.  \n  \n##  <a name=\"px_blob\"></a>  PX_Blob  \n Call this function within your control's `DoPropExchange` member function to serialize or initialize a property that stores binary large object (BLOB) data.  \n  \n```  \n \nBOOL  \nPX_Blob(\n    CPropExchange* \npPX  ,  \n    LPCTSTR \npszPropName  ,  \n    HGLOBAL& \nhBlob  ,  \n    HGLOBAL \nhBlobDefault  \n= NULL);\n\n \n```  \n  \n### Parameters  \n `pPX`  \n Pointer to the [CPropExchange](../../mfc/reference/cpropexchange-class.md) object (typically passed as a parameter to `DoPropExchange`).  \n  \n `pszPropName`  \n The name of the property being exchanged.  \n  \n `hBlob`  \n Reference to the variable where the property is stored (typically a member variable of your class).  \n  \n `hBlobDefault`  \n Default value for the property.  \n  \n### Return Value  \n Nonzero if the exchange was successful; 0 if unsuccessful.  \n  \n### Remarks  \n The property's value will be read from or written to the variable referenced by `hBlob`, as appropriate. This variable should be initialized to **NULL** before initially calling `PX_Blob` for the first time (typically, this can be done in the control's constructor). If `hBlobDefault` is specified, it will be used as the property's default value. This value is used if, for any reason, the control's initialization or serialization process fails.  \n  \n The handles `hBlob` and `hBlobDefault` refer to a block of memory which contains the following:  \n  \n-   A `DWORD` which contains the length, in bytes, of the binary data that follows, followed immediately by  \n  \n-   A block of memory containing the actual binary data.  \n  \n Note that `PX_Blob` will allocate memory, using the Windows [GlobalAlloc](http://msdn.microsoft.com/library/windows/desktop/aa366574) API, when loading BLOB-type properties. You are responsible for freeing this memory. Therefore, the destructor of your control should call [GlobalFree](http://msdn.microsoft.com/library/windows/desktop/aa366579) on any BLOB-type property handles to free up any memory allocated to your control.  \n  \n##  <a name=\"px_bool\"></a>  PX_Bool  \n Call this function within your control's `DoPropExchange` member function to serialize or initialize a property of type **BOOL**.  \n  \n```  \n \nBOOL  \nPX_Bool(\n    CPropExchange* \npPX  ,  \n    LPCTSTR \npszPropName  ,  \n    BOOL& bValue);\n\nBOOL  \nPX_Bool(\n    CPropExchange* \npPX  ,  \n    LPCTSTR \npszPropName  ,  \n    BOOL& \nbValue  ,  \n    BOOL bDefault);\n\n \n```  \n  \n### Parameters  \n `pPX`  \n Pointer to the [CPropExchange](../../mfc/reference/cpropexchange-class.md) object (typically passed as a parameter to `DoPropExchange`).  \n  \n `pszPropName`  \n The name of the property being exchanged.  \n  \n `bValue`  \n Reference to the variable where the property is stored (typically a member variable of your class).  \n  \n `bDefault`  \n Default value for the property.  \n  \n### Return Value  \n Nonzero if the exchange was successful; 0 if unsuccessful.  \n  \n### Remarks  \n The property's value will be read from or written to the variable referenced by `bValue`, as appropriate. If `bDefault` is specified, it will be used as the property's default value. This value is used if, for any reason, the control's serialization process fails.  \n  \n##  <a name=\"px_color\"></a>  PX_Color  \n Call this function within your control's `DoPropExchange` member function to serialize or initialize a property of type **OLE_COLOR**.  \n  \n```  \n \nBOOL PX_Color(\n    CPropExchange* \npPX  ,  \n    LPCTSTR \npszPropName  ,  \n    OLE_COLOR& clrValue);\n\nBOOL PX_Color(\n    CPropExchange* \npPX  ,  \n    LPCTSTR \npszPropName  ,  \n    OLE_COLOR& \nclrValue  ,  \n    OLE_COLOR \nclrDefault);\n\n \n```  \n  \n### Parameters  \n `pPX`  \n Pointer to the [CPropExchange](../../mfc/reference/cpropexchange-class.md) object (typically passed as a parameter to `DoPropExchange`).  \n  \n `pszPropName`  \n The name of the property being exchanged.  \n  \n `clrValue`  \n Reference to the variable where the property is stored (typically a member variable of your class).  \n  \n `clrDefault`  \n Default value for the property, as defined by the control developer.  \n  \n### Return Value  \n Nonzero if the exchange was successful; 0 if unsuccessful.  \n  \n### Remarks  \n The property's value will be read from or written to the variable referenced by `clrValue`, as appropriate. If `clrDefault` is specified, it will be used as the property's default value. This value is used if, for any reason, the control's serialization process fails.  \n  \n##  <a name=\"px_currency\"></a>  PX_Currency  \n Call this function within your control's `DoPropExchange` member function to serialize or initialize a property of type **currency**.  \n  \n```  \n \nBOOL  \nPX_Currency(\n    CPropExchange* \npPX  ,  \n    LPCTSTR \npszPropName  ,  \n    CY& cyValue);\n\nBOOL  \nPX_Currency(\n    CPropExchange* \npPX  ,  \n    LPCTSTR \npszPropName  ,  \n    CY& \ncyValue  ,  \n    CY cyDefault);\n\n \n```  \n  \n### Parameters  \n `pPX`  \n Pointer to the [CPropExchange](../../mfc/reference/cpropexchange-class.md) object (typically passed as a parameter to `DoPropExchange`).  \n  \n `pszPropName`  \n The name of the property being exchanged.  \n  \n `cyValue`  \n Reference to the variable where the property is stored (typically a member variable of your class).  \n  \n `cyDefault`  \n Default value for the property.  \n  \n### Return Value  \n Nonzero if the exchange was successful; 0 if unsuccessful.  \n  \n### Remarks  \n The property's value will be read from or written to the variable referenced by `cyValue`, as appropriate. If `cyDefault` is specified, it will be used as the property's default value. This value is used if, for any reason, the control's serialization process fails.  \n  \n##  <a name=\"px_datapath\"></a>  PX_DataPath  \n Call this function within your control's `DoPropExchange` member function to serialize or initialize a data path property of type [CDataPathProperty](../../mfc/reference/cdatapathproperty-class.md).  \n  \n```  \n \nBOOL  \nPX_DataPath(\n    CPropExchange* \npPX,  \n    LPCTSTR \npszPropName,  \n    CDataPathProperty& dataPathProperty);\n\nBOOL  \nPX_DataPath(\n    CPropExchange* \npPX,  \n    CDataPathProperty& dataPathProperty);\n\n \n```  \n  \n### Parameters  \n `pPX`  \n Pointer to the [CPropExchange](../../mfc/reference/cpropexchange-class.md) object (typically passed as a parameter to `DoPropExchange`).  \n  \n `pszPropName`  \n The name of the property being exchanged.  \n  \n `dataPathProperty`  \n Reference to the variable where the property is stored (typically a member variable of your class).  \n  \n### Return Value  \n Nonzero if the exchange was successful; 0 if unsuccessful.  \n  \n### Remarks  \n Data path properties implement asynchronous control properties. The property's value will be read from or written to the variable referenced by `dataPathProperty`, as appropriate.  \n  \n##  <a name=\"px_double\"></a>  PX_Double  \n Call this function within your control's `DoPropExchange` member function to serialize or initialize a property of type **double**.  \n  \n```  \n \nBOOL  \nPX_Double(\n    CPropExchange* \npPX  ,  \n    LPCTSTR \npszPropName  ,  \n    double& doubleValue);\n\nBOOL  \nPX_Double(\n    CPropExchange* \npPX  ,  \n    LPCTSTR \npszPropName  ,  \n    double& \ndoubleValue  ,  \n    double doubleDefault);\n\n \n```  \n  \n### Parameters  \n `pPX`  \n Pointer to the [CPropExchange](../../mfc/reference/cpropexchange-class.md) object (typically passed as a parameter to `DoPropExchange`).  \n  \n `pszPropName`  \n The name of the property being exchanged.  \n  \n `doubleValue`  \n Reference to the variable where the property is stored (typically a member variable of your class).  \n  \n `doubleDefault`  \n Default value for the property.  \n  \n### Return Value  \n Nonzero if the exchange was successful; 0 if unsuccessful.  \n  \n### Remarks  \n The property's value is read from or written to the variable referenced by `doubleValue`, as appropriate. If `doubleDefault` is specified, it will be used as the property's default value. This value is used if, for any reason, the control's serialization process fails.  \n  \n##  <a name=\"px_font\"></a>  PX_Font  \n Call this function within your control's `DoPropExchange` member function to serialize or initialize a property of type font.  \n  \n```  \n \nBOOL  \nPX_Font(\n    CPropExchange* \npPX  ,  \n    LPCTSTR \npszPropName  ,  \n    CFontHolder& \nfont  ,  \n    const \nFONTDESC  \nFAR* \npFontDesc  \n= \nNULL,  \n    LPFONTDISP \npFontDispAmbient  \n= NULL);\n\n \n```  \n  \n### Parameters  \n `pPX`  \n Pointer to the [CPropExchange](../../mfc/reference/cpropexchange-class.md) object (typically passed as a parameter to `DoPropExchange`).  \n  \n `pszPropName`  \n The name of the property being exchanged.  \n  \n `font`  \n A reference to a `CFontHolder` object that contains the font property.  \n  \n `pFontDesc`  \n A pointer to a **FONTDESC** structure containing the values to use in initializing the default state of the font property, in the case where `pFontDispAmbient` is **NULL**.  \n  \n `pFontDispAmbient`  \n A pointer to the **IFontDisp** interface of a font to use in initializing the default state of the font property.  \n  \n### Return Value  \n Nonzero if the exchange was successful; 0 if unsuccessful.  \n  \n### Remarks  \n The property's value is read from or written to `font`, a `CFontHolder` reference, when appropriate. If `pFontDesc` and `pFontDispAmbient` are specified, they are used for initializing the property's default value, when needed. These values are used if, for any reason, the control's serialization process fails. Typically, you pass **NULL** for `pFontDesc` and the ambient value returned by `COleControl::AmbientFont` for `pFontDispAmbient`. Note that the font object returned by `COleControl::AmbientFont` must be released by a call to the **IFontDisp::Release** member function.  \n  \n##  <a name=\"px_float\"></a>  PX_Float  \n Call this function within your control's `DoPropExchange` member function to serialize or initialize a property of type **float**.  \n  \n```  \n \nBOOL  \nPX_Float(\n    CPropExchange* \npPX  ,  \n    LPCTSTR \npszPropName  ,  \n    float& floatValue);\n\nBOOL  \nPX_Float(\n    CPropExchange* \npPX  ,  \n    LPCTSTR \npszPropName  ,  \n    float& \nfloatValue  ,  \n    float floatDefault);\n\n \n```  \n  \n### Parameters  \n `pPX`  \n Pointer to the [CPropExchange](../../mfc/reference/cpropexchange-class.md) object (typically passed as a parameter to `DoPropExchange`).  \n  \n `pszPropName`  \n The name of the property being exchanged.  \n  \n `floatValue`  \n Reference to the variable where the property is stored (typically a member variable of your class).  \n  \n `floatDefault`  \n Default value for the property.  \n  \n### Return Value  \n Nonzero if the exchange was successful; 0 if unsuccessful.  \n  \n### Remarks  \n The property's value is read from or written to the variable referenced by `floatValue`, as appropriate. If `floatDefault` is specified, it will be used as the property's default value. This value is used if, for any reason, the control's serialization process fails.  \n  \n##  <a name=\"px_iunknown\"></a>  PX_IUnknown  \n Call this function within your control's `DoPropExchange` member function to serialize or initialize a property represented by an object having an **IUnknown**-derived interface.  \n  \n```  \n \nBOOL  \nPX_IUnknown(\n    CPropExchange* \npPX  ,  \n    LPCTSTR \npszPropName  ,  \n    LPUNKNOWN& \npUnk  ,  \n    REFIID \niid  ,  \n    LPUNKNOWN \npUnkDefault  \n= NULL);\n\n \n```  \n  \n### Parameters  \n `pPX`  \n Pointer to the [CPropExchange](../../mfc/reference/cpropexchange-class.md) object (typically passed as a parameter to `DoPropExchange`).  \n  \n `pszPropName`  \n The name of the property being exchanged.  \n  \n *pUnk*  \n Reference to a variable containing the interface of the object that represents the value of the property.  \n  \n `iid`  \n An interface ID indicating which interface of the property object is used by the control.  \n  \n `pUnkDefault`  \n Default value for the property.  \n  \n### Return Value  \n Nonzero if the exchange was successful; 0 if unsuccessful.  \n  \n### Remarks  \n The property's value is read from or written to the variable referenced by *pUnk*, as appropriate. If `pUnkDefault` is specified, it will be used as the property's default value. This value is used if, for any reason, the control's serialization process fails.  \n  \n##  <a name=\"px_long\"></a>  PX_Long  \n Call this function within your control's `DoPropExchange` member function to serialize or initialize a property of type **long**.  \n  \n```  \n \nBOOL  \nPX_Long(\n    CPropExchange* \npPX  ,  \n    LPCTSTR \npszPropName  ,  \n    long& lValue);\n\nBOOL  \nPX_Long(\n    CPropExchange* \npPX  ,  \n    LPCTSTR \npszPropName  ,  \n    long& \nlValue  ,  \n    long lDefault);\n\n \n```  \n  \n### Parameters  \n `pPX`  \n Pointer to the [CPropExchange](../../mfc/reference/cpropexchange-class.md) object (typically passed as a parameter to `DoPropExchange`).  \n  \n `pszPropName`  \n The name of the property being exchanged.  \n  \n `lValue`  \n Reference to the variable where the property is stored (typically a member variable of your class).  \n  \n `lDefault`  \n Default value for the property.  \n  \n### Return Value  \n Nonzero if the exchange was successful; 0 if unsuccessful.  \n  \n### Remarks  \n The property's value is read from or written to the variable referenced by `lValue`, as appropriate. If `lDefault` is specified, it will be used as the property's default value. This value is used if, for any reason, the control's serialization process fails.  \n  \n##  <a name=\"px_picture\"></a>  PX_Picture  \n Call this function within your control's `DoPropExchange` member function to serialize or initialize a picture property of your control.  \n  \n```  \n \nBOOL  \nPX_Picture(\n    CPropExchange* \npPX  ,  \n    LPCTSTR \npszPropName  ,  \n    CPictureHolder& pict);\n\nBOOL  \nPX_Picture(\n    CPropExchange* \npPX  ,  \n    LPCTSTR \npszPropName  ,  \n    CPictureHolder& \npict  ,  \n    CPictureHolder& pictDefault);\n\n \n```  \n  \n### Parameters  \n `pPX`  \n Pointer to the [CPropExchange](../../mfc/reference/cpropexchange-class.md) object (typically passed as a parameter to `DoPropExchange`).  \n  \n `pszPropName`  \n The name of the property being exchanged.  \n  \n `pict`  \n Reference to a [CPictureHolder](../../mfc/reference/cpictureholder-class.md) object where the property is stored (typically a member variable of your class).  \n  \n `pictDefault`  \n Default value for the property.  \n  \n### Return Value  \n Nonzero if the exchange was successful; 0 if unsuccessful.  \n  \n### Remarks  \n The property's value is read from or written to the variable referenced by `pict`, as appropriate. If `pictDefault` is specified, it will be used as the property's default value. This value is used if, for any reason, the control's serialization process fails.  \n  \n##  <a name=\"px_short\"></a>  PX_Short  \n Call this function within your control's `DoPropExchange` member function to serialize or initialize a property of type **short**.  \n  \n```  \n \nBOOL  \nPX_Short(\n    CPropExchange* \npPX  ,  \n    LPCTSTR \npszPropName  ,  \n    short& sValue);\n\nBOOL  \nPX_Short(\n    CPropExchange* \npPX  ,  \n    LPCTSTR \npszPropName  ,  \n    short& \nsValue  ,  \n    short sDefault);\n\n \n```  \n  \n### Parameters  \n `pPX`  \n Pointer to the [CPropExchange](../../mfc/reference/cpropexchange-class.md) object (typically passed as a parameter to `DoPropExchange`).  \n  \n `pszPropName`  \n The name of the property being exchanged.  \n  \n `sValue`  \n Reference to the variable where the property is stored (typically a member variable of your class).  \n  \n `sDefault`  \n Default value for the property.  \n  \n### Return Value  \n Nonzero if the exchange was successful; 0 if unsuccessful.  \n  \n### Remarks  \n The property's value is read from or written to the variable referenced by `sValue`, as appropriate. If `sDefault` is specified, it will be used as the property's default value. This value is used if, for any reason, the control's serialization process fails.  \n  \n##  <a name=\"px_ulong\"></a>  PX_ULong  \n Call this function within your control's `DoPropExchange` member function to serialize or initialize a property of type **ULONG**.  \n  \n```  \n \nBOOL  \nPX_ULong(\n    CPropExchange* \npPX  ,  \n    LPCTSTR \npszPropName  ,  \n    ULONG& ulValue);\n\nBOOL  \nPX_ULong(\n    CPropExchange* \npPX  ,  \n    LPCTSTR \npszPropName  ,  \n    ULONG& \nulValue  ,  \n    long ulDefault);\n\n \n```  \n  \n### Parameters  \n `pPX`  \n Pointer to the [CPropExchange](../../mfc/reference/cpropexchange-class.md) object (typically passed as a parameter to `DoPropExchange`).  \n  \n `pszPropName`  \n Name of the property being exchanged.  \n  \n `ulValue`  \n Reference to the variable where the property is stored (typically a member variable of your class).  \n  \n `ulDefault`  \n Default value for the property.  \n  \n### Return Value  \n Nonzero if the exchange was successful; 0 if unsuccessful.  \n  \n### Remarks  \n The property's value is read from or written to the variable referenced by `ulValue`, as appropriate. If `ulDefault` is specified, it will be used as the property's default value. This value is used if, for any reason, the control's serialization process fails.  \n  \n##  <a name=\"px_ushort\"></a>  PX_UShort  \n Call this function within your control's `DoPropExchange` member function to serialize or initialize a property of type `unsigned` **short**.  \n  \n```  \n \nBOOL  \nPX_UShort(\n    CPropExchange* \npPX  ,  \n    LPCTSTR \npszPropName  ,  \n    USHORT& usValue);\n\nBOOL  \nPX_UShort(\n    CPropExchange* \npPX  ,  \n    LPCTSTR \npszPropName  ,  \n    USHORT& \nusValue  ,  \n    USHORT usDefault);\n\n \n```  \n  \n### Parameters  \n `pPX`  \n Pointer to the [CPropExchange](../../mfc/reference/cpropexchange-class.md) object (typically passed as a parameter to `DoPropExchange`).  \n  \n `pszPropName`  \n Name of the property being exchanged.  \n  \n *usValue*  \n Reference to the variable where the property is stored (typically a member variable of your class).  \n  \n *usDefault*  \n Default value for the property.  \n  \n### Return Value  \n Nonzero if the exchange was successful; 0 if unsuccessful.  \n  \n### Remarks  \n The property's value is read from or written to the variable referenced by *usValue*, as appropriate. If *usDefault* is specified, it will be used as the property's default value. This value is used if, for any reason, the control's serialization process fails.  \n  \n##  <a name=\"px_string\"></a>  PXstring  \n Call this function within your control's **DoPropExchange** member function to serialize or initialize a character string property.  \n  \n```  \n \nBOOL  \nPXstring(\n    CPropExchange* \npPX  ,  \n    LPCTSTR \npszPropName  ,  \n    CString& strValue);\n\nBOOL  \nPXstring(\n    CPropExchange* \npPX  ,  \n    LPCTSTR \npszPropName  ,  \n    CString& \nstrValue  ,  \n    CString strDefault);\n\n \n```  \n  \n### Parameters  \n `pPX`  \n Pointer to the [CPropExchange](../../mfc/reference/cpropexchange-class.md) object (typically passed as a parameter to `DoPropExchange`).  \n  \n `pszPropName`  \n The name of the property being exchanged.  \n  \n `strValue`  \n Reference to the variable where the property is stored (typically a member variable of your class).  \n  \n `strDefault`  \n Default value for the property.  \n  \n### Return Value  \n Nonzero if the exchange was successful; 0 if unsuccessful.  \n  \n### Remarks  \n The property's value is read from or written to the variable referenced by `strValue`, as appropriate. If `strDefault` is specified, it will be used as the property's default value. This value is used if, for any reason, the control's serialization process fails.  \n  \n##  <a name=\"px_vbxfontconvert\"></a>  PX_VBXFontConvert  \n Call this function within your control's `DoPropExchange` member function to initialize a font property by converting a VBX control's font-related properties.  \n  \n```  \n \nBOOL  \nPX_VBXFontConvert(\n    CPropExchange* \npPX  ,  \n    CFontHolder& font);\n\n \n```  \n  \n### Parameters  \n `pPX`  \n Pointer to the [CPropExchange](../../mfc/reference/cpropexchange-class.md) object (typically passed as a parameter to `DoPropExchange`).  \n  \n `font`  \n The font property of the OLE control that will contain the converted VBX font-related properties.  \n  \n### Return Value  \n Nonzero if the exchange was successful; 0 if unsuccessful.  \n  \n### Remarks  \n This function should be used only by an OLE control that is designed as a direct replacement for a VBX control. When the Visual Basic development environment converts a form containing a VBX control to use the corresponding replacement OLE control, it will call the control's **IDataObject::SetData** function, passing in a property set that contains the VBX control's property data. This operation, in turn, causes the control's `DoPropExchange` function to be invoked. `DoPropExchange` can call `PX_VBXFontConvert` to convert the VBX control's font-related properties (for example, \"FontName,\" \"FontSize,\" and so on) into the corresponding components of the OLE control's font property.  \n  \n `PX_VBXFontConvert` should only be called when the control is actually being converted from a VBX form application. For example:  \n  \n [!code-cpp[NVC_MFCActiveXControl#14](../../mfc/codesnippet/cpp/persistence-of-ole-controls_1.cpp)]  \n[!code-cpp[NVC_MFCActiveXControl#15](../../mfc/codesnippet/cpp/persistence-of-ole-controls_2.cpp)]  \n  \n## See Also  \n [Macros and Globals](../../mfc/reference/mfc-macros-and-globals.md)\n"}