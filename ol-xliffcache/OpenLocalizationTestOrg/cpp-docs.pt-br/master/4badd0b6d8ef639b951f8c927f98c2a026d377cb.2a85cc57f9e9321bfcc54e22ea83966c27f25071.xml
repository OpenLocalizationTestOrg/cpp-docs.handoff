{"nodes":[{"pos":[12,76],"content":"How to: Use a Native Type in a -clr Compilation | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"How to: Use a Native Type in a -clr Compilation | Microsoft Docs","pos":[0,64]}]},{"content":"How to: Use a Native Type in a /clr Compilation","pos":[709,756]},{"content":"You can define a native type in a <bpt id=\"p1\">**</bpt>/clr<ept id=\"p1\">**</ept> compilation and any use of that native type from within the assembly is valid.","pos":[757,878],"source":"You can define a native type in a **/clr** compilation and any use of that native type from within the assembly is valid."},{"content":"However, native types will not be available for use from referenced metadata.","pos":[879,956]},{"content":"Each assembly must contain the definition of every native type it will use.","pos":[963,1038]},{"pos":[1045,1179],"content":"For more information, see <bpt id=\"p1\">[</bpt>/clr (Common Language Runtime Compilation)<ept id=\"p1\">](../build/reference/clr-common-language-runtime-compilation.md)</ept>.","source":"For more information, see [/clr (Common Language Runtime Compilation)](../build/reference/clr-common-language-runtime-compilation.md)."},{"content":"Example","pos":[1188,1195]},{"content":"This sample creates a component that defines and uses a native type.","pos":[1199,1267]},{"content":"Example","pos":[1573,1580]},{"content":"This sample defines a client that consumes the component.","pos":[1584,1641]},{"content":"Notice that it is an error to access the native type, unless it is defined in the compiland.","pos":[1642,1734]},{"content":"See Also","pos":[2111,2119]},{"content":"Using C++ Interop (Implicit PInvoke)","pos":[2124,2160]}],"content":"---\ntitle: \"How to: Use a Native Type in a -clr Compilation | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"get-started-article\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"compilation, native types in /clr\"\n  - \"/clr compiler option [C++], using native types\"\nms.assetid: 3a505c90-4adb-4942-9cf9-7d1fdcbc01e7\ncaps.latest.revision: 3\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"ru-ru\"\n  - \"zh-cn\"\n  - \"zh-tw\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"tr-tr\"\n---\n# How to: Use a Native Type in a /clr Compilation\nYou can define a native type in a **/clr** compilation and any use of that native type from within the assembly is valid. However, native types will not be available for use from referenced metadata.  \n  \n Each assembly must contain the definition of every native type it will use.  \n  \n For more information, see [/clr (Common Language Runtime Compilation)](../build/reference/clr-common-language-runtime-compilation.md).  \n  \n## Example  \n This sample creates a component that defines and uses a native type.  \n  \n```  \n// use_native_type_in_clr.cpp  \n// compile with: /clr /LD  \npublic struct NativeClass {  \n   static int Test() { return 98; }  \n};  \n  \npublic ref struct ManagedClass {  \n   static int i = NativeClass::Test();  \n   void Test() {  \n      System::Console::WriteLine(i);  \n   }  \n};  \n```  \n  \n## Example  \n This sample defines a client that consumes the component. Notice that it is an error to access the native type, unless it is defined in the compiland.  \n  \n```  \n// use_native_type_in_clr_2.cpp  \n// compile with: /clr  \n#using \"use_native_type_in_clr.dll\"  \n// Uncomment the following 3 lines to resolve.  \n// public struct NativeClass {  \n//    static int Test() { return 98; }  \n// };  \n  \nint main() {  \n   ManagedClass x;  \n   x.Test();  \n  \n   System::Console::WriteLine(NativeClass::Test());   // C2653  \n}  \n```  \n  \n## See Also  \n [Using C++ Interop (Implicit PInvoke)](../dotnet/using-cpp-interop-implicit-pinvoke.md)"}