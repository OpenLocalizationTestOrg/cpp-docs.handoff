{"nodes":[{"pos":[12,64],"content":"OLE DB Provider Templates Reference | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"OLE DB Provider Templates Reference | Microsoft Docs","pos":[0,52]}]},{"content":"OLE DB Provider Templates Reference","pos":[635,670]},{"content":"The classes and interfaces for the OLE DB Provider Templates can be grouped into the following categories.","pos":[671,777]},{"content":"The reference material also includes information about the <bpt id=\"p1\">[</bpt>macros for OLE DB Provider Templates<ept id=\"p1\">](../../data/oledb/macros-for-ole-db-provider-templates.md)</ept>.","pos":[778,934],"source":" The reference material also includes information about the [macros for OLE DB Provider Templates](../../data/oledb/macros-for-ole-db-provider-templates.md)."},{"pos":[941,1098],"content":"The classes use the following naming convention: a class named with the pattern <bpt id=\"p1\">**</bpt>IWidgetImpl<ept id=\"p1\">**</ept> would provide an implementation of the interface <bpt id=\"p2\">**</bpt>IWidget<ept id=\"p2\">**</ept>.","source":"The classes use the following naming convention: a class named with the pattern **IWidgetImpl** would provide an implementation of the interface **IWidget**."},{"content":"Session Classes","pos":[1107,1122]},{"content":"IDBCreateSessionImpl","pos":[1127,1147]},{"content":"Creates a new session from the data source object and returns the requested interface on the newly created session.","pos":[1200,1315]},{"content":"Mandatory interface on data source objects.","pos":[1316,1359]},{"content":"ISessionPropertiesImpl","pos":[1367,1389]},{"content":"Implements session properties by calling a static function defined by the property set map.","pos":[1444,1535]},{"content":"The property set map should be specified in your session class.","pos":[1536,1599]},{"content":"Mandatory interface on sessions.","pos":[1600,1632]},{"content":"Rowset Classes","pos":[1641,1655]},{"content":"CRowsetImpl","pos":[1660,1671]},{"content":"Provides a standard OLE DB rowset implementation without requiring multiple inheritance of many implementation interfaces.","pos":[1718,1840]},{"content":"The only method for which you must provide implementation is <bpt id=\"p1\">**</bpt>Execute<ept id=\"p1\">**</ept>.","pos":[1841,1914],"source":" The only method for which you must provide implementation is **Execute**."},{"content":"CSimpleRow","pos":[1922,1932]},{"content":"Provides a default implementation for the row handle, which is used in the <ph id=\"ph1\">`IRowsetImpl`</ph> class.","pos":[1975,2070],"source":" Provides a default implementation for the row handle, which is used in the `IRowsetImpl` class."},{"content":"A row handle is logically a unique tag for a result row.","pos":[2071,2127]},{"content":"creates a new <ph id=\"ph1\">`CSimpleRow`</ph> for every row requested in <ph id=\"ph2\">`IRowsetImpl::GetNextRows`</ph>.","pos":[2142,2223],"source":" creates a new `CSimpleRow` for every row requested in `IRowsetImpl::GetNextRows`."},{"content":"IAccessorImpl","pos":[2231,2244]},{"content":"OLE DB requires providers to implement an <bpt id=\"p1\">**</bpt>HACCESSOR<ept id=\"p1\">**</ept>, which is a tag to an array of <bpt id=\"p2\">**</bpt>DBBINDING<ept id=\"p2\">**</ept> structures.","pos":[2290,2402],"source":" OLE DB requires providers to implement an **HACCESSOR**, which is a tag to an array of **DBBINDING** structures."},{"content":"Provides <bpt id=\"p1\">**</bpt>HACCESSOR<ept id=\"p1\">**</ept>s that are addresses of the <bpt id=\"p2\">**</bpt>BindType<ept id=\"p2\">**</ept> structures.","pos":[2403,2477],"source":" Provides **HACCESSOR**s that are addresses of the **BindType** structures."},{"content":"Mandatory on rowsets and commands.","pos":[2478,2512]},{"content":"IColumnsInfoImpl","pos":[2520,2536]},{"content":"Delegates to a static function defined by the provider column map.","pos":[2585,2651]},{"content":"Mandatory interface on rowsets and commands.","pos":[2652,2696]},{"content":"IConvertTypeImpl","pos":[2704,2720]},{"content":"Gives information on the availability of type conversions on a command or on a rowset.","pos":[2769,2855]},{"content":"Mandatory on commands, rowsets, and index rowsets.","pos":[2856,2906]},{"content":"Implements the <bpt id=\"p1\">**</bpt>IConvertType<ept id=\"p1\">**</ept> interface by delegating to the conversion object supplied by OLE DB.","pos":[2907,3007],"source":" Implements the **IConvertType** interface by delegating to the conversion object supplied by OLE DB."},{"content":"IDBSchemaRowsetImpl","pos":[3015,3034]},{"content":"Implements the <bpt id=\"p1\">**</bpt>IDBSchemaRowset<ept id=\"p1\">**</ept> interface and the templatized creator function <ph id=\"ph1\">`CreateSchemaRowset`</ph>.","pos":[3086,3189],"source":" Implements the **IDBSchemaRowset** interface and the templatized creator function `CreateSchemaRowset`."},{"content":"IOpenRowsetImpl","pos":[3197,3212]},{"content":"Opens and returns a rowset that includes all rows from a single base table or index.","pos":[3260,3344]},{"content":"Mandatory interface for a session object.","pos":[3345,3386]},{"content":"IRowsetChangeImpl","pos":[3394,3411]},{"content":"Implements the OLE DB <bpt id=\"p1\">[</bpt>IRowsetChange<ept id=\"p1\">](https://msdn.microsoft.com/en-us/library/ms715790.aspx)</ept> interface, which enables updating of the values of columns in existing rows, deleting rows, and inserting new rows.","pos":[3461,3670],"source":" Implements the OLE DB [IRowsetChange](https://msdn.microsoft.com/en-us/library/ms715790.aspx) interface, which enables updating of the values of columns in existing rows, deleting rows, and inserting new rows."},{"content":"IRowsetCreatorImpl","pos":[3678,3696]},{"content":"This class inherits from <bpt id=\"p1\">[</bpt>IObjectWithSite<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms693765)</ept> and overrides <bpt id=\"p2\">[</bpt>IObjectWithSite::SetSite<ept id=\"p2\">](http://msdn.microsoft.com/library/windows/desktop/ms683869)</ept>.","pos":[3747,3951],"source":" This class inherits from [IObjectWithSite](http://msdn.microsoft.com/library/windows/desktop/ms693765) and overrides [IObjectWithSite::SetSite](http://msdn.microsoft.com/library/windows/desktop/ms683869)."},{"content":"performs the same functions as <ph id=\"ph1\">`IObjectWithSite`</ph> but also enables the OLE DB properties <bpt id=\"p1\">**</bpt>DBPROPCANSCROLLBACKWARDS<ept id=\"p1\">**</ept> and <bpt id=\"p2\">**</bpt>DBPROPCANFETCHBACKWARDS<ept id=\"p2\">**</ept>.","pos":[3973,4122],"source":" performs the same functions as `IObjectWithSite` but also enables the OLE DB properties **DBPROPCANSCROLLBACKWARDS** and **DBPROPCANFETCHBACKWARDS**."},{"content":"IRowsetIdentityImpl","pos":[4130,4149]},{"content":"Implements the <bpt id=\"p1\">**</bpt>IRowsetIdentity<ept id=\"p1\">**</ept> interface, which allows you to compare whether two rows of data are identical or not.","pos":[4201,4321],"source":" Implements the **IRowsetIdentity** interface, which allows you to compare whether two rows of data are identical or not."},{"content":"IRowsetImpl","pos":[4329,4340]},{"content":"Provides an implementation of the <ph id=\"ph1\">`IRowset`</ph> interface, which is the base rowset interface.","pos":[4384,4474],"source":" Provides an implementation of the `IRowset` interface, which is the base rowset interface."},{"content":"IRowsetInfoImpl","pos":[4482,4497]},{"content":"Implements the rowset properties by using the property set map defined in your command class.","pos":[4545,4638]},{"content":"Mandatory interface on rowsets.","pos":[4639,4670]},{"content":"IRowsetLocateImpl","pos":[4678,4695]},{"content":"Implements the OLE DB <bpt id=\"p1\">[</bpt>IRowsetLocate<ept id=\"p1\">](https://msdn.microsoft.com/en-us/library/ms721190.aspx)</ept> interface, which fetches arbitrary rows from a rowset.","pos":[4745,4893],"source":" Implements the OLE DB [IRowsetLocate](https://msdn.microsoft.com/en-us/library/ms721190.aspx) interface, which fetches arbitrary rows from a rowset."},{"content":"To support OLE DB bookmarks in a rowset, make the rowset inherit from this class.","pos":[4894,4975]},{"content":"IRowsetNotifyCP","pos":[4983,4998]},{"content":"Implements broadcast functions to advise listeners on the connection point <bpt id=\"p1\">**</bpt>IID_IRowsetNotify<ept id=\"p1\">**</ept> of changes to the contents of the rowset.","pos":[5046,5184],"source":" Implements broadcast functions to advise listeners on the connection point **IID_IRowsetNotify** of changes to the contents of the rowset."},{"content":"Consumers that handle notifications implement <bpt id=\"p1\">[</bpt>IRowsetNotify<ept id=\"p1\">](https://msdn.microsoft.com/en-us/library/ms712959.aspx)</ept> and register it on that connection point.","pos":[5185,5344],"source":" Consumers that handle notifications implement [IRowsetNotify](https://msdn.microsoft.com/en-us/library/ms712959.aspx) and register it on that connection point."},{"content":"IRowsetUpdateImpl","pos":[5352,5369]},{"content":"Implements the OLE DB <bpt id=\"p1\">[</bpt>IRowsetUpdate<ept id=\"p1\">](https://msdn.microsoft.com/en-us/library/ms714401.aspx)</ept> interface, which enables consumers to delay the transmission of changes made with <bpt id=\"p2\">[</bpt>IRowsetChange<ept id=\"p2\">](https://msdn.microsoft.com/en-us/library/ms715790.aspx)</ept> to the data source and undo changes before transmission.","pos":[5419,5723],"source":" Implements the OLE DB [IRowsetUpdate](https://msdn.microsoft.com/en-us/library/ms714401.aspx) interface, which enables consumers to delay the transmission of changes made with [IRowsetChange](https://msdn.microsoft.com/en-us/library/ms715790.aspx) to the data source and undo changes before transmission."},{"content":"Command Classes","pos":[5732,5747]},{"content":"ICommandImpl","pos":[5752,5764]},{"content":"Provides an implementation of the <ph id=\"ph1\">`ICommand`</ph> interface.","pos":[5809,5864],"source":" Provides an implementation of the `ICommand` interface."},{"content":"This interface is not visible, but is handled by <bpt id=\"p1\">**</bpt>ICommandTextImpl<ept id=\"p1\">**</ept>.","pos":[5865,5935],"source":" This interface is not visible, but is handled by **ICommandTextImpl**."},{"content":"A mandatory interface on the command object.","pos":[5936,5980]},{"content":"ICommandPropertiesImpl","pos":[5988,6010]},{"content":"This implementation of the <bpt id=\"p1\">**</bpt>ICommandProperties<ept id=\"p1\">**</ept> interface is provided by a static function defined by the <ph id=\"ph1\">`BEGIN_PROPSET_MAP`</ph> macro.","pos":[6065,6199],"source":" This implementation of the **ICommandProperties** interface is provided by a static function defined by the `BEGIN_PROPSET_MAP` macro."},{"content":"Mandatory on commands.","pos":[6200,6222]},{"content":"ICommandTextImpl","pos":[6230,6246]},{"content":"Sets, stores, and returns the command text.","pos":[6295,6338]},{"content":"Mandatory on commands.","pos":[6339,6361]},{"content":"IDBCreateCommandImpl","pos":[6369,6389]},{"content":"Creates a new command from the session object and returns the requested interface on the newly created command.","pos":[6442,6553]},{"content":"Optional interface on session objects.","pos":[6554,6592]},{"pos":[6599,6711],"content":"Other command classes are <ph id=\"ph1\">`IColumnsInfoImpl`</ph> and <ph id=\"ph2\">`IAccessorImpl`</ph>, described in the Rowset Classes section above.","source":"Other command classes are `IColumnsInfoImpl` and `IAccessorImpl`, described in the Rowset Classes section above."},{"content":"Data Source Classes","pos":[6720,6739]},{"content":"IDBInitializeImpl","pos":[6744,6761]},{"content":"Creates and deletes the connection with the consumer.","pos":[6811,6864]},{"content":"Mandatory interface on data source objects and optional interface on enumerators.","pos":[6865,6946]},{"content":"IDBPropertiesImpl","pos":[6954,6971]},{"content":"is a mandatory interface for data source objects and an optional interface for enumerators.","pos":[7037,7128]},{"content":"However, if an enumerator exposes <bpt id=\"p1\">**</bpt>IDBInitialize<ept id=\"p1\">**</ept>, it must expose <ph id=\"ph1\">`IDBProperties`</ph> (properties on the data source).","pos":[7129,7245],"source":" However, if an enumerator exposes **IDBInitialize**, it must expose `IDBProperties` (properties on the data source)."},{"content":"IGetDataSourceImpl","pos":[7253,7271]},{"content":"Obtains an interface pointer to the data source object.","pos":[7322,7377]},{"content":"Mandatory interface on the session.","pos":[7378,7413]},{"content":"Other Classes","pos":[7422,7435]},{"content":"CUtlProps","pos":[7440,7449]},{"content":"Implements properties for a variety of OLE DB property interfaces (for example, <ph id=\"ph1\">`IDBProperties`</ph>, <bpt id=\"p1\">**</bpt>ISessionProperties<ept id=\"p1\">**</ept>, and <ph id=\"ph2\">`IRowsetInfo`</ph>).","pos":[7491,7631],"source":" Implements properties for a variety of OLE DB property interfaces (for example, `IDBProperties`, **ISessionProperties**, and `IRowsetInfo`)."},{"content":"IErrorRecordsImpl","pos":[7639,7656]},{"pos":[7709,7874],"content":"Implements the OLE DB <bpt id=\"p1\">[</bpt>IErrorRecords<ept id=\"p1\">](https://msdn.microsoft.com/en-us/library/ms718112.aspx)</ept> interface, adding records to and retrieving records from a data member.","source":"Implements the OLE DB [IErrorRecords](https://msdn.microsoft.com/en-us/library/ms718112.aspx) interface, adding records to and retrieving records from a data member."},{"content":"See Also","pos":[7883,7891]},{"content":"OLE DB Consumer Templates Reference","pos":[7896,7931]},{"content":"OLE DB Templates","pos":[7995,8011]}],"content":"---\ntitle: \"OLE DB Provider Templates Reference | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"vc.templates.ole\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"OLE DB provider templates\"\nms.assetid: 518358f0-bab1-4de9-bce9-4062cc87c11f\ncaps.latest.revision: 6\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# OLE DB Provider Templates Reference\nThe classes and interfaces for the OLE DB Provider Templates can be grouped into the following categories. The reference material also includes information about the [macros for OLE DB Provider Templates](../../data/oledb/macros-for-ole-db-provider-templates.md).  \n  \n The classes use the following naming convention: a class named with the pattern **IWidgetImpl** would provide an implementation of the interface **IWidget**.  \n  \n## Session Classes  \n [IDBCreateSessionImpl](../../data/oledb/idbcreatesessionimpl-class.md)  \n Creates a new session from the data source object and returns the requested interface on the newly created session. Mandatory interface on data source objects.  \n  \n [ISessionPropertiesImpl](../../data/oledb/isessionpropertiesimpl-class.md)  \n Implements session properties by calling a static function defined by the property set map. The property set map should be specified in your session class. Mandatory interface on sessions.  \n  \n## Rowset Classes  \n [CRowsetImpl](../../data/oledb/crowsetimpl-class.md)  \n  \n Provides a standard OLE DB rowset implementation without requiring multiple inheritance of many implementation interfaces. The only method for which you must provide implementation is **Execute**.  \n  \n [CSimpleRow](../../data/oledb/csimplerow-class.md)  \n Provides a default implementation for the row handle, which is used in the `IRowsetImpl` class. A row handle is logically a unique tag for a result row. `IRowsetImpl` creates a new `CSimpleRow` for every row requested in `IRowsetImpl::GetNextRows`.  \n  \n [IAccessorImpl](../../data/oledb/iaccessorimpl-class.md)  \n OLE DB requires providers to implement an **HACCESSOR**, which is a tag to an array of **DBBINDING** structures. Provides **HACCESSOR**s that are addresses of the **BindType** structures. Mandatory on rowsets and commands.  \n  \n [IColumnsInfoImpl](../../data/oledb/icolumnsinfoimpl-class.md)  \n Delegates to a static function defined by the provider column map. Mandatory interface on rowsets and commands.  \n  \n [IConvertTypeImpl](../../data/oledb/iconverttypeimpl-class.md)  \n Gives information on the availability of type conversions on a command or on a rowset. Mandatory on commands, rowsets, and index rowsets. Implements the **IConvertType** interface by delegating to the conversion object supplied by OLE DB.  \n  \n [IDBSchemaRowsetImpl](../../data/oledb/idbschemarowsetimpl-class.md)  \n Implements the **IDBSchemaRowset** interface and the templatized creator function `CreateSchemaRowset`.  \n  \n [IOpenRowsetImpl](../../data/oledb/iopenrowsetimpl-class.md)  \n Opens and returns a rowset that includes all rows from a single base table or index. Mandatory interface for a session object.  \n  \n [IRowsetChangeImpl](../../data/oledb/irowsetchangeimpl-class.md)  \n Implements the OLE DB [IRowsetChange](https://msdn.microsoft.com/en-us/library/ms715790.aspx) interface, which enables updating of the values of columns in existing rows, deleting rows, and inserting new rows.  \n  \n [IRowsetCreatorImpl](../../data/oledb/irowsetcreatorimpl-class.md)  \n This class inherits from [IObjectWithSite](http://msdn.microsoft.com/library/windows/desktop/ms693765) and overrides [IObjectWithSite::SetSite](http://msdn.microsoft.com/library/windows/desktop/ms683869). `IRowsetCreatorImpl` performs the same functions as `IObjectWithSite` but also enables the OLE DB properties **DBPROPCANSCROLLBACKWARDS** and **DBPROPCANFETCHBACKWARDS**.  \n  \n [IRowsetIdentityImpl](../../data/oledb/irowsetidentityimpl-class.md)  \n Implements the **IRowsetIdentity** interface, which allows you to compare whether two rows of data are identical or not.  \n  \n [IRowsetImpl](../../data/oledb/irowsetimpl-class.md)  \n Provides an implementation of the `IRowset` interface, which is the base rowset interface.  \n  \n [IRowsetInfoImpl](../../data/oledb/irowsetinfoimpl-class.md)  \n Implements the rowset properties by using the property set map defined in your command class. Mandatory interface on rowsets.  \n  \n [IRowsetLocateImpl](../../data/oledb/irowsetlocateimpl-class.md)  \n Implements the OLE DB [IRowsetLocate](https://msdn.microsoft.com/en-us/library/ms721190.aspx) interface, which fetches arbitrary rows from a rowset. To support OLE DB bookmarks in a rowset, make the rowset inherit from this class.  \n  \n [IRowsetNotifyCP](../../data/oledb/irowsetnotifycp-class.md)  \n Implements broadcast functions to advise listeners on the connection point **IID_IRowsetNotify** of changes to the contents of the rowset. Consumers that handle notifications implement [IRowsetNotify](https://msdn.microsoft.com/en-us/library/ms712959.aspx) and register it on that connection point.  \n  \n [IRowsetUpdateImpl](../../data/oledb/irowsetupdateimpl-class.md)  \n Implements the OLE DB [IRowsetUpdate](https://msdn.microsoft.com/en-us/library/ms714401.aspx) interface, which enables consumers to delay the transmission of changes made with [IRowsetChange](https://msdn.microsoft.com/en-us/library/ms715790.aspx) to the data source and undo changes before transmission.  \n  \n## Command Classes  \n [ICommandImpl](../../data/oledb/icommandimpl-class.md)  \n Provides an implementation of the `ICommand` interface. This interface is not visible, but is handled by **ICommandTextImpl**. A mandatory interface on the command object.  \n  \n [ICommandPropertiesImpl](../../data/oledb/icommandpropertiesimpl-class.md)  \n This implementation of the **ICommandProperties** interface is provided by a static function defined by the `BEGIN_PROPSET_MAP` macro. Mandatory on commands.  \n  \n [ICommandTextImpl](../../data/oledb/icommandtextimpl-class.md)  \n Sets, stores, and returns the command text. Mandatory on commands.  \n  \n [IDBCreateCommandImpl](../../data/oledb/idbcreatecommandimpl-class.md)  \n Creates a new command from the session object and returns the requested interface on the newly created command. Optional interface on session objects.  \n  \n Other command classes are `IColumnsInfoImpl` and `IAccessorImpl`, described in the Rowset Classes section above.  \n  \n## Data Source Classes  \n [IDBInitializeImpl](../../data/oledb/idbinitializeimpl-class.md)  \n Creates and deletes the connection with the consumer. Mandatory interface on data source objects and optional interface on enumerators.  \n  \n [IDBPropertiesImpl](../../data/oledb/idbpropertiesimpl-class.md)  \n `IDBProperties` is a mandatory interface for data source objects and an optional interface for enumerators. However, if an enumerator exposes **IDBInitialize**, it must expose `IDBProperties` (properties on the data source).  \n  \n [IGetDataSourceImpl](../../data/oledb/igetdatasourceimpl-class.md)  \n Obtains an interface pointer to the data source object. Mandatory interface on the session.  \n  \n## Other Classes  \n [CUtlProps](../../data/oledb/cutlprops-class.md)  \n Implements properties for a variety of OLE DB property interfaces (for example, `IDBProperties`, **ISessionProperties**, and `IRowsetInfo`).  \n  \n [IErrorRecordsImpl](../../data/oledb/ierrorrecordsimpl-class.md)  \n  \n Implements the OLE DB [IErrorRecords](https://msdn.microsoft.com/en-us/library/ms718112.aspx) interface, adding records to and retrieving records from a data member.  \n  \n## See Also  \n [OLE DB Consumer Templates Reference](../../data/oledb/ole-db-consumer-templates-reference.md)   \n [OLE DB Templates](../../data/oledb/ole-db-templates.md)"}