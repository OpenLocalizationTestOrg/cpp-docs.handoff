{"nodes":[{"pos":[12,48],"content":"CShellManager Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"CShellManager Class | Microsoft Docs","pos":[0,36]}]},{"content":"CShellManager Class","pos":[613,632]},{"content":"Implements several methods that enable you to work with pointers to identifier lists (PIDLs).","pos":[633,726]},{"content":"Syntax","pos":[735,741]},{"content":"Members","pos":[804,811]},{"content":"Public Constructors","pos":[821,840]},{"content":"Name","pos":[847,851]},{"content":"Description","pos":[852,863]},{"content":"CShellManager::CShellManager","pos":[902,930]},{"pos":[963,999],"content":"Constructs a <ph id=\"ph1\">`CShellManager`</ph> object.","source":"Constructs a `CShellManager` object."},{"content":"Public Methods","pos":[1010,1024]},{"content":"Name","pos":[1031,1035]},{"content":"Description","pos":[1036,1047]},{"content":"CShellManager::BrowseForFolder","pos":[1086,1116]},{"content":"Displays a dialog box that enables the user to select a shell folder.","pos":[1151,1220]},{"content":"CShellManager::ConcatenateItem","pos":[1226,1256]},{"content":"Concatenates two PIDLs.","pos":[1291,1314]},{"content":"CShellManager::CopyItem","pos":[1320,1343]},{"content":"Creates a new PIDL and copies the supplied PIDL to it.","pos":[1371,1425]},{"content":"CShellManager::CreateItem","pos":[1431,1456]},{"content":"Creates a new PIDL of the specified size.","pos":[1486,1527]},{"content":"CShellManager::FreeItem","pos":[1533,1556]},{"content":"Deletes the supplied PIDL.","pos":[1584,1610]},{"content":"CShellManager::GetItemCount","pos":[1616,1643]},{"content":"Returns the number of items in the supplied PIDL.","pos":[1675,1724]},{"content":"CShellManager::GetItemSize","pos":[1730,1756]},{"content":"Returns the size of the supplied PIDL.","pos":[1787,1825]},{"content":"CShellManager::GetNextItem","pos":[1831,1857]},{"content":"Returns the next item from the PIDL.","pos":[1888,1924]},{"content":"CShellManager::GetParentItem","pos":[1930,1958]},{"content":"Retrieves the parent item of the supplied item.","pos":[1991,2038]},{"content":"CShellManager::ItemFromPath","pos":[2044,2071]},{"content":"Retrieves the PIDL for the item identified by the supplied path.","pos":[2103,2167]},{"content":"Remarks","pos":[2177,2184]},{"content":"The methods of the <ph id=\"ph1\">`CShellManager`</ph> class all deal with PIDLs.","pos":[2188,2249],"source":"The methods of the `CShellManager` class all deal with PIDLs."},{"content":"A PIDL is a unique identifier for a shell object.","pos":[2250,2299]},{"content":"You should not create a <ph id=\"ph1\">`CShellManager`</ph> object manually.","pos":[2306,2362],"source":"You should not create a `CShellManager` object manually."},{"content":"It will be created automatically by the framework of your application.","pos":[2363,2433]},{"content":"However, you should call <bpt id=\"p1\">[</bpt>CWinAppEx::InitShellManager<ept id=\"p1\">](../../mfc/reference/cwinappex-class.md#cwinappex__initshellmanager)</ept> during the initialization process of your application.","pos":[2434,2611],"source":" However, you should call [CWinAppEx::InitShellManager](../../mfc/reference/cwinappex-class.md#cwinappex__initshellmanager) during the initialization process of your application."},{"content":"To get a pointer to the shell manager for your application, call <bpt id=\"p1\">[</bpt>CWinAppEx::GetShellManager<ept id=\"p1\">](../../mfc/reference/cwinappex-class.md#cwinappex__getshellmanager)</ept>.","pos":[2612,2773],"source":" To get a pointer to the shell manager for your application, call [CWinAppEx::GetShellManager](../../mfc/reference/cwinappex-class.md#cwinappex__getshellmanager)."},{"content":"Inheritance Hierarchy","pos":[2782,2803]},{"content":"CObject","pos":[2808,2815]},{"content":"CShellManager","pos":[2862,2875]},{"content":"Requirements","pos":[2929,2941]},{"pos":[2945,2974],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> afxshellmanager.h","source":"**Header:** afxshellmanager.h"},{"pos":[3031,3061],"content":"CShellManager::BrowseForFolder"},{"content":"Displays a dialog box that enables the user to select a shell folder.","pos":[3065,3134]},{"content":"Parameters","pos":[3390,3400]},{"content":"[out]","pos":[3404,3409]},{"content":"The string used by the method to store the path of the selected folder.","pos":[3428,3499]},{"content":"[in]","pos":[3506,3510]},{"content":"A pointer to the parent window.","pos":[3527,3558]},{"content":"[in]","pos":[3565,3569]},{"content":"A string that contains the folder that is selected by default when the dialog box is displayed.","pos":[3594,3689]},{"content":"[in]","pos":[3696,3700]},{"content":"The title for the dialog box.","pos":[3716,3745]},{"content":"[in]","pos":[3752,3756]},{"content":"Flags specifying options for the dialog box.","pos":[3770,3814]},{"content":"See <bpt id=\"p1\">[</bpt>BROWSEINFO<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb773205)</ept> for the detailed description.","pos":[3815,3921],"source":" See [BROWSEINFO](http://msdn.microsoft.com/library/windows/desktop/bb773205) for the detailed description."},{"content":"[out]","pos":[3928,3933]},{"content":"A pointer to the integer value where the method writes the image index of the selected folder.","pos":[3953,4047]},{"content":"Return Value","pos":[4057,4069]},{"content":"Nonzero if the user selects a folder from the dialog box; otherwise 0.","pos":[4073,4143]},{"content":"Remarks","pos":[4153,4160]},{"content":"When you call this method, the application creates and shows a dialog box that enables the user to select a folder.","pos":[4164,4279]},{"content":"The method will write the path of the folder into the <ph id=\"ph1\">`strOutFolder`</ph> parameter.","pos":[4280,4359],"source":" The method will write the path of the folder into the `strOutFolder` parameter."},{"content":"Example","pos":[4369,4376]},{"content":"The following example demonstrates how to retrieve a reference to a <ph id=\"ph1\">`CShellManager`</ph> object by using the <ph id=\"ph2\">`CWinAppEx::GetShellManager`</ph> method and how to use the <ph id=\"ph3\">`BrowseForFolder`</ph> method.","pos":[4380,4564],"source":"The following example demonstrates how to retrieve a reference to a `CShellManager` object by using the `CWinAppEx::GetShellManager` method and how to use the `BrowseForFolder` method."},{"content":"This code snippet is part of the <bpt id=\"p1\">[</bpt>Explorer sample<ept id=\"p1\">](../../visual-cpp-samples.md)</ept>.","pos":[4565,4645],"source":" This code snippet is part of the [Explorer sample](../../visual-cpp-samples.md)."},{"pos":[4663,4681],"content":"NVC_MFC_Explorer#6"},{"pos":[4803,4833],"content":"CShellManager::ConcatenateItem"},{"content":"Creates a new list containing two PIDLs.","pos":[4837,4877]},{"content":"Parameters","pos":[4985,4995]},{"content":"[in]","pos":[4999,5003]},{"content":"The first item.","pos":[5015,5030]},{"content":"[in]","pos":[5037,5041]},{"content":"The second item.","pos":[5053,5069]},{"content":"Return Value","pos":[5079,5091]},{"pos":[5095,5169],"content":"A pointer to the new item list if the function succeeds, otherwise <ph id=\"ph1\">`NULL`</ph>.","source":"A pointer to the new item list if the function succeeds, otherwise `NULL`."},{"content":"Remarks","pos":[5179,5186]},{"content":"This method creates a new <bpt id=\"p1\">[</bpt>ITEMIDLIST<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb773321)</ept> large enough to contain both <ph id=\"ph1\">`pidl1`</ph> and <ph id=\"ph2\">`pidl2`</ph>.","pos":[5190,5338],"source":"This method creates a new [ITEMIDLIST](http://msdn.microsoft.com/library/windows/desktop/bb773321) large enough to contain both `pidl1` and `pidl2`."},{"content":"It then copies <ph id=\"ph1\">`pidl1`</ph> and <ph id=\"ph2\">`pidl2`</ph> to the new list.","pos":[5339,5390],"source":" It then copies `pidl1` and `pidl2` to the new list."},{"pos":[5440,5463],"content":"CShellManager::CopyItem"},{"content":"Copies an item list.","pos":[5467,5487]},{"content":"Parameters","pos":[5561,5571]},{"content":"[in]","pos":[5575,5579]},{"content":"The original item list.","pos":[5596,5619]},{"content":"Return Value","pos":[5629,5641]},{"pos":[5645,5718],"content":"A pointer to the newly created item list if successful; otherwise <ph id=\"ph1\">`NULL`</ph>.","source":"A pointer to the newly created item list if successful; otherwise `NULL`."},{"content":"Remarks","pos":[5728,5735]},{"content":"The newly created item list has the same size as the source item list.","pos":[5739,5809]},{"pos":[5861,5886],"content":"CShellManager::CreateItem"},{"content":"Creates a new PIDL.","pos":[5890,5909]},{"content":"Parameters","pos":[5972,5982]},{"content":"[in]","pos":[5986,5990]},{"content":"The size of the item list.","pos":[6003,6029]},{"content":"Return Value","pos":[6039,6051]},{"pos":[6055,6122],"content":"A pointer to the created item list if successful; otherwise <ph id=\"ph1\">`NULL`</ph>.","source":"A pointer to the created item list if successful; otherwise `NULL`."},{"pos":[6177,6205],"content":"CShellManager::CShellManager"},{"pos":[6209,6245],"content":"Constructs a <ph id=\"ph1\">`CShellManager`</ph> object.","source":"Constructs a `CShellManager` object."},{"content":"Remarks","pos":[6287,6294]},{"content":"In most cases, you do not have to create a <ph id=\"ph1\">`CShellManager`</ph> directly.","pos":[6298,6366],"source":"In most cases, you do not have to create a `CShellManager` directly."},{"content":"By default, the framework creates one for you.","pos":[6367,6413]},{"content":"To get a pointer to the <ph id=\"ph1\">`CShellManager`</ph>, call <bpt id=\"p1\">[</bpt>CWinAppEx::GetShellManager<ept id=\"p1\">](../../mfc/reference/cwinappex-class.md#cwinappex__getshellmanager)</ept>.","pos":[6414,6556],"source":" To get a pointer to the `CShellManager`, call [CWinAppEx::GetShellManager](../../mfc/reference/cwinappex-class.md#cwinappex__getshellmanager)."},{"content":"If you do create a <ph id=\"ph1\">`CShellManager`</ph> manually, you must initialize it with the method <bpt id=\"p1\">[</bpt>CWinAppEx::InitShellManager<ept id=\"p1\">](../../mfc/reference/cwinappex-class.md#cwinappex__initshellmanager)</ept>.","pos":[6557,6739],"source":" If you do create a `CShellManager` manually, you must initialize it with the method [CWinAppEx::InitShellManager](../../mfc/reference/cwinappex-class.md#cwinappex__initshellmanager)."},{"pos":[6789,6812],"content":"CShellManager::FreeItem"},{"content":"Deletes an item list.","pos":[6816,6837]},{"content":"Parameters","pos":[6896,6906]},{"content":"[in]","pos":[6910,6914]},{"content":"An item list to delete.","pos":[6925,6948]},{"pos":[7002,7029],"content":"CShellManager::GetItemCount"},{"content":"Returns the number of items in an item list.","pos":[7033,7077]},{"content":"Parameters","pos":[7141,7151]},{"content":"[in]","pos":[7155,7159]},{"content":"A pointer to an item list.","pos":[7170,7196]},{"content":"Return Value","pos":[7206,7218]},{"content":"The number of items in the item list.","pos":[7222,7259]},{"pos":[7312,7338],"content":"CShellManager::GetItemSize"},{"content":"Returns the size of an item list.","pos":[7342,7375]},{"content":"Parameters","pos":[7438,7448]},{"content":"[in]","pos":[7452,7456]},{"content":"A pointer to an item list.","pos":[7467,7493]},{"content":"Return Value","pos":[7503,7515]},{"content":"The size of the item list.","pos":[7519,7545]},{"pos":[7598,7624],"content":"CShellManager::GetNextItem"},{"content":"Retrieves the next item from a pointer to an item identifier list (PIDL).","pos":[7628,7701]},{"content":"Parameters","pos":[7772,7782]},{"content":"[in]","pos":[7786,7790]},{"content":"The list of items to iterate.","pos":[7801,7830]},{"content":"Return Value","pos":[7840,7852]},{"content":"A pointer to the next item in the list.","pos":[7856,7895]},{"content":"Remarks","pos":[7905,7912]},{"pos":[7916,7983],"content":"If there are no more items in the list, this method returns <ph id=\"ph1\">`NULL`</ph>.","source":"If there are no more items in the list, this method returns `NULL`."},{"pos":[8038,8066],"content":"CShellManager::GetParentItem"},{"content":"Retrieves the parent of a pointer to an item identifier list (PIDL).","pos":[8070,8138]},{"content":"Parameters","pos":[8241,8251]},{"content":"[in]","pos":[8255,8259]},{"content":"A PIDL whose parent will be retrieved.","pos":[8271,8309]},{"content":"[out]","pos":[8316,8321]},{"content":"A reference to a PIDL where the method will store the result.","pos":[8339,8400]},{"content":"Return Value","pos":[8410,8422]},{"content":"The level of the parent PIDL.","pos":[8426,8455]},{"content":"Remarks","pos":[8465,8472]},{"content":"The level of a PIDL is relative to the desktop.","pos":[8476,8523]},{"content":"The desktop PIDL is considered to have a level of 0.","pos":[8524,8576]},{"pos":[8630,8657],"content":"CShellManager::ItemFromPath"},{"content":"Retrieves the pointer to an item identifier list (PIDL) from the item identified by a string path.","pos":[8661,8759]},{"content":"Parameters","pos":[8855,8865]},{"content":"[in]","pos":[8869,8873]},{"content":"A string that specifies the path for the item.","pos":[8888,8934]},{"content":"[out]","pos":[8941,8946]},{"content":"A reference to a PIDL.","pos":[8957,8979]},{"content":"The method uses this PIDL to store the pointer to its return value.","pos":[8980,9047]},{"content":"Return Value","pos":[9057,9069]},{"pos":[9073,9133],"content":"Returns <ph id=\"ph1\">`NOERROR`</ph> if successful; an OLE-defined error value.","source":"Returns `NOERROR` if successful; an OLE-defined error value."},{"content":"See Also","pos":[9142,9150]},{"content":"Hierarchy Chart","pos":[9155,9170]},{"content":"Classes","pos":[9207,9214]}],"content":"---\ntitle: \"CShellManager Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"CShellManager\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"CShellManager class\"\nms.assetid: f15c4c1a-6fae-487d-9913-9b7369b33da0\ncaps.latest.revision: 23\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# CShellManager Class\nImplements several methods that enable you to work with pointers to identifier lists (PIDLs).  \n  \n## Syntax  \n  \n```  \nclass CShellManager : public CObject  \n```  \n  \n## Members  \n  \n### Public Constructors  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CShellManager::CShellManager](#cshellmanager__cshellmanager)|Constructs a `CShellManager` object.|  \n  \n### Public Methods  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CShellManager::BrowseForFolder](#cshellmanager__browseforfolder)|Displays a dialog box that enables the user to select a shell folder.|  \n|[CShellManager::ConcatenateItem](#cshellmanager__concatenateitem)|Concatenates two PIDLs.|  \n|[CShellManager::CopyItem](#cshellmanager__copyitem)|Creates a new PIDL and copies the supplied PIDL to it.|  \n|[CShellManager::CreateItem](#cshellmanager__createitem)|Creates a new PIDL of the specified size.|  \n|[CShellManager::FreeItem](#cshellmanager__freeitem)|Deletes the supplied PIDL.|  \n|[CShellManager::GetItemCount](#cshellmanager__getitemcount)|Returns the number of items in the supplied PIDL.|  \n|[CShellManager::GetItemSize](#cshellmanager__getitemsize)|Returns the size of the supplied PIDL.|  \n|[CShellManager::GetNextItem](#cshellmanager__getnextitem)|Returns the next item from the PIDL.|  \n|[CShellManager::GetParentItem](#cshellmanager__getparentitem)|Retrieves the parent item of the supplied item.|  \n|[CShellManager::ItemFromPath](#cshellmanager__itemfrompath)|Retrieves the PIDL for the item identified by the supplied path.|  \n  \n## Remarks  \n The methods of the `CShellManager` class all deal with PIDLs. A PIDL is a unique identifier for a shell object.  \n  \n You should not create a `CShellManager` object manually. It will be created automatically by the framework of your application. However, you should call [CWinAppEx::InitShellManager](../../mfc/reference/cwinappex-class.md#cwinappex__initshellmanager) during the initialization process of your application. To get a pointer to the shell manager for your application, call [CWinAppEx::GetShellManager](../../mfc/reference/cwinappex-class.md#cwinappex__getshellmanager).  \n  \n## Inheritance Hierarchy  \n [CObject](../../mfc/reference/cobject-class.md)  \n  \n [CShellManager](../../mfc/reference/cshellmanager-class.md)  \n  \n## Requirements  \n **Header:** afxshellmanager.h  \n  \n##  <a name=\"cshellmanager__browseforfolder\"></a>  CShellManager::BrowseForFolder  \n Displays a dialog box that enables the user to select a shell folder.  \n  \n```  \nBOOL BrowseForFolder(\n    CString& strOutFolder,  \n    CWnd* pWndParent = NULL,  \n    LPCTSTR lplszInitialFolder = NULL,  \n    LPCTSTR lpszTitle = NULL,  \n    UINT ulFlags = BIF_RETURNONLYFSDIRS,  \n    LPINT piFolderImage = NULL);\n```  \n  \n### Parameters  \n [out] `strOutFolder`  \n The string used by the method to store the path of the selected folder.  \n  \n [in] `pWndParent`  \n A pointer to the parent window.  \n  \n [in] `lplszInitialFolder`  \n A string that contains the folder that is selected by default when the dialog box is displayed.  \n  \n [in] `lpszTitle`  \n The title for the dialog box.  \n  \n [in] `ulFlags`  \n Flags specifying options for the dialog box. See [BROWSEINFO](http://msdn.microsoft.com/library/windows/desktop/bb773205) for the detailed description.  \n  \n [out] `piFolderImage`  \n A pointer to the integer value where the method writes the image index of the selected folder.  \n  \n### Return Value  \n Nonzero if the user selects a folder from the dialog box; otherwise 0.  \n  \n### Remarks  \n When you call this method, the application creates and shows a dialog box that enables the user to select a folder. The method will write the path of the folder into the `strOutFolder` parameter.  \n  \n### Example  \n The following example demonstrates how to retrieve a reference to a `CShellManager` object by using the `CWinAppEx::GetShellManager` method and how to use the `BrowseForFolder` method. This code snippet is part of the [Explorer sample](../../visual-cpp-samples.md).  \n  \n [!code-cpp[NVC_MFC_Explorer#6](../../mfc/reference/codesnippet/cpp/cshellmanager-class_1.cpp)]  \n  \n##  <a name=\"cshellmanager__concatenateitem\"></a>  CShellManager::ConcatenateItem  \n Creates a new list containing two PIDLs.  \n  \n```  \nLPITEMIDLIST ConcatenateItem(\n    LPCITEMIDLIST pidl1,  \n    LPCITEMIDLIST pidl2);\n```  \n  \n### Parameters  \n [in] `pidl1`  \n The first item.  \n  \n [in] `pidl2`  \n The second item.  \n  \n### Return Value  \n A pointer to the new item list if the function succeeds, otherwise `NULL`.  \n  \n### Remarks  \n This method creates a new [ITEMIDLIST](http://msdn.microsoft.com/library/windows/desktop/bb773321) large enough to contain both `pidl1` and `pidl2`. It then copies `pidl1` and `pidl2` to the new list.  \n  \n##  <a name=\"cshellmanager__copyitem\"></a>  CShellManager::CopyItem  \n Copies an item list.  \n  \n```  \nLPITEMIDLIST CopyItem(LPCITEMIDLIST pidlSource);\n```  \n  \n### Parameters  \n [in] `pidlSource`  \n The original item list.  \n  \n### Return Value  \n A pointer to the newly created item list if successful; otherwise `NULL`.  \n  \n### Remarks  \n The newly created item list has the same size as the source item list.  \n  \n##  <a name=\"cshellmanager__createitem\"></a>  CShellManager::CreateItem  \n Creates a new PIDL.  \n  \n```  \nLPITEMIDLIST CreateItem(UINT cbSize);\n```  \n  \n### Parameters  \n [in] `cbSize`  \n The size of the item list.  \n  \n### Return Value  \n A pointer to the created item list if successful; otherwise `NULL`.  \n  \n##  <a name=\"cshellmanager__cshellmanager\"></a>  CShellManager::CShellManager  \n Constructs a `CShellManager` object.  \n  \n```  \nCShellManager();\n```  \n  \n### Remarks  \n In most cases, you do not have to create a `CShellManager` directly. By default, the framework creates one for you. To get a pointer to the `CShellManager`, call [CWinAppEx::GetShellManager](../../mfc/reference/cwinappex-class.md#cwinappex__getshellmanager). If you do create a `CShellManager` manually, you must initialize it with the method [CWinAppEx::InitShellManager](../../mfc/reference/cwinappex-class.md#cwinappex__initshellmanager).  \n  \n##  <a name=\"cshellmanager__freeitem\"></a>  CShellManager::FreeItem  \n Deletes an item list.  \n  \n```  \nvoid FreeItem(LPITEMIDLIST pidl);\n```  \n  \n### Parameters  \n [in] `pidl`  \n An item list to delete.  \n  \n##  <a name=\"cshellmanager__getitemcount\"></a>  CShellManager::GetItemCount  \n Returns the number of items in an item list.  \n  \n```  \nUINT GetItemCount(LPCITEMIDLIST pidl);\n```  \n  \n### Parameters  \n [in] `pidl`  \n A pointer to an item list.  \n  \n### Return Value  \n The number of items in the item list.  \n  \n##  <a name=\"cshellmanager__getitemsize\"></a>  CShellManager::GetItemSize  \n Returns the size of an item list.  \n  \n```  \nUINT GetItemSize(LPCITEMIDLIST pidl);\n```  \n  \n### Parameters  \n [in] `pidl`  \n A pointer to an item list.  \n  \n### Return Value  \n The size of the item list.  \n  \n##  <a name=\"cshellmanager__getnextitem\"></a>  CShellManager::GetNextItem  \n Retrieves the next item from a pointer to an item identifier list (PIDL).  \n  \n```  \nLPITEMIDLIST GetNextItem(LPCITEMIDLIST pidl);\n```  \n  \n### Parameters  \n [in] `pidl`  \n The list of items to iterate.  \n  \n### Return Value  \n A pointer to the next item in the list.  \n  \n### Remarks  \n If there are no more items in the list, this method returns `NULL`.  \n  \n##  <a name=\"cshellmanager__getparentitem\"></a>  CShellManager::GetParentItem  \n Retrieves the parent of a pointer to an item identifier list (PIDL).  \n  \n```  \nint GetParentItem(\n    LPCITEMIDLIST lpidl,  \n    LPITEMIDLIST& lpidlParent);\n```  \n  \n### Parameters  \n [in] `lpidl`  \n A PIDL whose parent will be retrieved.  \n  \n [out] `lpidlParent`  \n A reference to a PIDL where the method will store the result.  \n  \n### Return Value  \n The level of the parent PIDL.  \n  \n### Remarks  \n The level of a PIDL is relative to the desktop. The desktop PIDL is considered to have a level of 0.  \n  \n##  <a name=\"cshellmanager__itemfrompath\"></a>  CShellManager::ItemFromPath  \n Retrieves the pointer to an item identifier list (PIDL) from the item identified by a string path.  \n  \n```  \nHRESULT ItemFromPath(\n    LPCTSTR lpszPath,  \n    LPITEMIDLIST& pidl);\n```  \n  \n### Parameters  \n [in] `lpszPath`  \n A string that specifies the path for the item.  \n  \n [out] `pidl`  \n A reference to a PIDL. The method uses this PIDL to store the pointer to its return value.  \n  \n### Return Value  \n Returns `NOERROR` if successful; an OLE-defined error value.  \n  \n## See Also  \n [Hierarchy Chart](../../mfc/hierarchy-chart.md)   \n [Classes](../../mfc/reference/mfc-classes.md)\n"}