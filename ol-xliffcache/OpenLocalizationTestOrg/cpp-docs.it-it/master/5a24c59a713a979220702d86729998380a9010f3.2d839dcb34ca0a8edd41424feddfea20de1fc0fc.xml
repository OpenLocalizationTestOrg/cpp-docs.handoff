{"nodes":[{"content":"Metadata and Markdown Template","pos":[2,32]},{"content":"This core-docs template contains examples of Markdown syntax, as well as guidance on setting the metadata.","pos":[34,140]},{"content":"To get the most of it, you must view both the <bpt id=\"p1\">[</bpt>raw Markdown<ept id=\"p1\">](https://raw.githubusercontent.com/dotnet/docs/master/styleguide/template.md)</ept> and the <bpt id=\"p2\">[</bpt>rendered view<ept id=\"p2\">](https://github.com/dotnet/docs/blob/master/styleguide/template.md)</ept> (for instance, the raw Markdown shows the metadata block, while the rendered view does not).","pos":[141,462],"source":" To get the most of it, you must view both the [raw Markdown](https://raw.githubusercontent.com/dotnet/docs/master/styleguide/template.md) and the [rendered view](https://github.com/dotnet/docs/blob/master/styleguide/template.md) (for instance, the raw Markdown shows the metadata block, while the rendered view does not)."},{"content":"When creating a Markdown file, you should copy this template to a new file, fill out the metadata as specified below, set the H1 heading above to the title of the article, and delete the content.","pos":[464,659]},{"content":"Metadata","pos":[666,674]},{"content":"The full metadata block is above (in the <bpt id=\"p1\">[</bpt>raw Markdown<ept id=\"p1\">](https://raw.githubusercontent.com/dotnet/docs/master/styleguide/template.md)</ept>), divided into required fields and optional fields.","pos":[677,861],"source":"The full metadata block is above (in the [raw Markdown](https://raw.githubusercontent.com/dotnet/docs/master/styleguide/template.md)), divided into required fields and optional fields."},{"content":"Some key notes:","pos":[862,877]},{"pos":[881,966],"content":"You <bpt id=\"p1\">**</bpt>must<ept id=\"p1\">**</ept> have a space between the colon (:) and the value for a metadata element.","source":"You **must** have a space between the colon (:) and the value for a metadata element."},{"content":"If an optional metadata element does not have a value, comment out the element with a # or remove it (do not leave it blank or use \"na\"); if you are adding a value to an element that was commented out, be sure to remove the #.","pos":[969,1195]},{"content":"Colons in a value (for example, a title) break the metadata parser.","pos":[1198,1265]},{"content":"In this case, surround the title with double quotes (for example, <ph id=\"ph1\">`title: \"Writing .NET Core console apps: An advanced step-by-step guide\"`</ph>).","pos":[1266,1407],"source":" In this case, surround the title with double quotes (for example, `title: \"Writing .NET Core console apps: An advanced step-by-step guide\"`)."},{"content":"<bpt id=\"p1\">**</bpt>title<ept id=\"p1\">**</ept>: This title will appear in search engine results.","pos":[1410,1469],"source":"**title**: This title will appear in search engine results."},{"content":"You can also add a pipe (|) followed by the product name (for example, <ph id=\"ph1\">`title: Developing Libraries with Cross Platform Tools | .NET Core`</ph>).","pos":[1470,1610],"source":" You can also add a pipe (|) followed by the product name (for example, `title: Developing Libraries with Cross Platform Tools | .NET Core`)."},{"content":"The title doesn't need be identical to the title in your H1 heading and it should contain 65 characters or less (including | PRODUCT NAME).","pos":[1611,1750]},{"content":"<bpt id=\"p1\">**</bpt>author<ept id=\"p1\">**</ept>, <bpt id=\"p2\">**</bpt>manager<ept id=\"p2\">**</ept>, <bpt id=\"p3\">**</bpt>ms.reviewer<ept id=\"p3\">**</ept>: The author field should contain the <bpt id=\"p4\">**</bpt>GitHub username<ept id=\"p4\">**</ept> of the author, not their alias.","pos":[1753,1882],"source":"**author**, **manager**, **ms.reviewer**: The author field should contain the **GitHub username** of the author, not their alias."},{"content":"The \"manager\" and \"ms.reviewer\" fields, on the other hand, should contain Microsoft aliases.","pos":[1884,1976]},{"content":"ms.reviewer specifies the name of the PM/dev associated with the article or feature.","pos":[1977,2061]},{"content":"<bpt id=\"p1\">**</bpt>ms.devlang<ept id=\"p1\">**</ept> defines the technology.","pos":[2064,2102],"source":"**ms.devlang** defines the technology."},{"content":"Some of the supported values are: dotnet, cpp, csharp, fsharp, vb and xml.","pos":[2103,2177]},{"content":"<bpt id=\"p1\">**</bpt>ms.assetid<ept id=\"p1\">**</ept>: This is the GUID of the article that is used for internal tracking purposes such as Business Intelligence (BI).","pos":[2180,2307],"source":"**ms.assetid**: This is the GUID of the article that is used for internal tracking purposes such as Business Intelligence (BI)."},{"content":"When creating a new Markdown file, get a GUID from <bpt id=\"p1\">[</bpt>https://www.guidgenerator.com<ept id=\"p1\">](https://www.guidgenerator.com)</ept>.","pos":[2308,2422],"source":" When creating a new Markdown file, get a GUID from [https://www.guidgenerator.com](https://www.guidgenerator.com)."},{"content":"Basic Markdown, GFM, and special characters","pos":[2428,2471]},{"content":"All basic and GitHub Flavored Markdown (GFM) is supported.","pos":[2473,2531]},{"content":"For more information on these, see:","pos":[2532,2567]},{"content":"Baseline Markdown syntax","pos":[2572,2596]},{"content":"GFM documentation","pos":[2654,2671]},{"content":"Markdown uses special characters such as <ph id=\"ph1\">\\*</ph>, <ph id=\"ph2\">\\`</ph>, and <ph id=\"ph3\">\\#</ph> for formatting.","pos":[2729,2800],"source":"Markdown uses special characters such as \\*, \\`, and \\# for formatting."},{"content":"If you wish to include one of these characters in your content, you must do one of two things:","pos":[2801,2895]},{"pos":[2899,2987],"content":"Put a backslash before the special character to \"escape\" it (for example, <ph id=\"ph1\">`\\*`</ph> for a <ph id=\"ph2\">\\*</ph>)","source":"Put a backslash before the special character to \"escape\" it (for example, `\\*` for a \\*)"},{"pos":[2990,3105],"content":"Use the <bpt id=\"p1\">[</bpt>HTML entity code<ept id=\"p1\">](http://www.ascii.cl/htmlcodes.htm)</ept> for the character (for example, <ph id=\"ph1\">`&amp;#42;`</ph> for a &amp;#42;).","source":"Use the [HTML entity code](http://www.ascii.cl/htmlcodes.htm) for the character (for example, `&#42;` for a &#42;)."},{"content":"File name","pos":[3110,3119]},{"content":"File names use the following rules:","pos":[3121,3156]},{"content":"Contain only lowercase letters, numbers, and hyphens.","pos":[3159,3212]},{"content":"No spaces or punctuation characters.","pos":[3215,3251]},{"content":"Use the hyphens to separate words and numbers in the file name.","pos":[3252,3315]},{"content":"Use action verbs that are specific, such as develop, buy, build, troubleshoot.","pos":[3318,3396]},{"content":"No -ing words.","pos":[3397,3411]},{"content":"No small words - don't include a, and, the, in, or, etc.","pos":[3414,3470]},{"content":"Must be in Markdown and use the .md file extension.","pos":[3473,3524]},{"content":"Keep file names reasonably short.","pos":[3527,3560]},{"content":"They are part of the URL for your articles.","pos":[3561,3604]},{"content":"Headings","pos":[3613,3621]},{"content":"Use sentence-style capitalization.","pos":[3623,3657]},{"content":"Always capitalize:","pos":[3658,3676]},{"content":"The first word of a heading.","pos":[3679,3707]},{"content":"The word following a colon in a title or heading (for example, \"How to: Sort an array\").","pos":[3711,3799]},{"content":"Headings should be done using atx-style, that is, use 1-6 hash characters (#) at the start of the line to indicate a heading, corresponding to HTML headings levels H1 through H6.","pos":[3802,3980]},{"content":"Examples of first- and second-level headers are used above.","pos":[3981,4040]},{"pos":[4043,4155],"content":"There <bpt id=\"p1\">**</bpt>must<ept id=\"p1\">**</ept> be only one first-level heading (H1) in your topic, which will be displayed as the on-page title.","source":"There **must** be only one first-level heading (H1) in your topic, which will be displayed as the on-page title."},{"content":"If your heading finishes with a <ph id=\"ph1\">`#`</ph> character, you need to add an extra <ph id=\"ph2\">`#`</ph> character in the end in order for the title to render correctly.","pos":[4157,4297],"source":"If your heading finishes with a `#` character, you need to add an extra `#` character in the end in order for the title to render correctly."},{"content":"For example, <ph id=\"ph1\">`# Async Programming in F# #`</ph>.","pos":[4298,4341],"source":" For example, `# Async Programming in F# #`."},{"content":"Second-level headings will generate the on-page TOC that appears in the \"In this article\" section underneath the on-page title.","pos":[4348,4475]},{"content":"Third-level heading","pos":[4481,4500]},{"content":"Fourth-level heading","pos":[4506,4526]},{"content":"Fifth level heading","pos":[4533,4552]},{"content":"Sixth-level heading","pos":[4560,4579]},{"content":"Text styling","pos":[4585,4597]},{"pos":[4599,4752],"content":"<bpt id=\"p1\">*</bpt>Italics<ept id=\"p1\">*</ept><ph id=\"ph1\">\n</ph> Use for files, folders, paths (for long items, split onto their own line) - new terms - URLs (unless rendered as links, which is the default).","source":"*Italics*\n Use for files, folders, paths (for long items, split onto their own line) - new terms - URLs (unless rendered as links, which is the default)."},{"pos":[4754,4783],"content":"<bpt id=\"p1\">**</bpt>Bold<ept id=\"p1\">**</ept> Use for UI elements.","source":"**Bold**\nUse for UI elements."},{"content":"Links","pos":[4788,4793]},{"content":"Internal Links","pos":[4799,4813]},{"content":"To link to a header in the same Markdown file (also known as anchor links), you'll need to find out the id of the header you're trying to link to.","pos":[4815,4961]},{"content":"To confirm the ID, view the source of the rendered article, find the id of the header (for example, <ph id=\"ph1\">`id=\"blockquote\"`</ph>), and link using # + id (for example, <ph id=\"ph2\">`#blockquote`</ph>).","pos":[4962,5133],"source":" To confirm the ID, view the source of the rendered article, find the id of the header (for example, `id=\"blockquote\"`), and link using # + id (for example, `#blockquote`)."},{"content":"The id is auto-generated based on the header text.","pos":[5134,5184],"source":"\nThe id is auto-generated based on the header text."},{"content":"So, for example, given a unique section named <ph id=\"ph1\">`## Step 2`</ph>, the id would look like this <ph id=\"ph2\">`id=\"step-2\"`</ph>.","pos":[5185,5286],"source":" So, for example, given a unique section named `## Step 2`, the id would look like this `id=\"step-2\"`."},{"pos":[5290,5322],"content":"Example: <bpt id=\"p1\">[</bpt>Chapter 1<ept id=\"p1\">](#chapter-1)</ept>","source":"Example: [Chapter 1](#chapter-1)"},{"pos":[5324,5499],"content":"To link to a Markdown file in the same repo, use <bpt id=\"p1\">[</bpt>relative links<ept id=\"p1\">](https://www.w3.org/TR/WD-html40-970917/htmlweb.html#h-5.1.2)</ept>, including the \".md\" at the end of the filename.","source":"To link to a Markdown file in the same repo, use [relative links](https://www.w3.org/TR/WD-html40-970917/htmlweb.html#h-5.1.2), including the \".md\" at the end of the filename."},{"pos":[5503,5539],"content":"Example: <bpt id=\"p1\">[</bpt>Readme file<ept id=\"p1\">](../readme.md)</ept>","source":"Example: [Readme file](../readme.md)"},{"pos":[5542,5588],"content":"Example: <bpt id=\"p1\">[</bpt>Welcome to .NET<ept id=\"p1\">](../docs/welcome.md)</ept>","source":"Example: [Welcome to .NET](../docs/welcome.md)"},{"content":"To link to a header in a Markdown file in the same repo, use relative linking + hashtag linking.","pos":[5590,5686]},{"pos":[5690,5745],"content":"Example: <bpt id=\"p1\">[</bpt>.NET Community<ept id=\"p1\">](../docs/welcome.md#community)</ept>","source":"Example: [.NET Community](../docs/welcome.md#community)"},{"content":"External Links","pos":[5751,5765]},{"content":"To link to an external file, use the full URL as the link.","pos":[5767,5825]},{"pos":[5829,5869],"content":"Example: <bpt id=\"p1\">[</bpt>GitHub<ept id=\"p1\">](http://www.github.com)</ept>","source":"Example: [GitHub](http://www.github.com)"},{"content":"If a URL appears in a Markdown file, it will be transformed into a clickable link.","pos":[5871,5953]},{"content":"Example: http://www.github.com","pos":[5957,5987]},{"content":"Links to APIs","pos":[5993,6006]},{"content":"The build system has some extensions that allow us to link to .NET Core APIs without having to use external links.","pos":[6008,6122]},{"content":"When linking to an API, you can use its unique identifier (UID) that is auto-generated from the source code.","pos":[6125,6233]},{"content":"You can use one of the following syntax:","pos":[6235,6275]},{"pos":[6279,6293],"content":"Markdown link:"},{"pos":[6321,6331],"content":"Auto link:"},{"pos":[6348,6363],"content":"Shorthand form:"},{"pos":[6374,6382],"content":"Example:"},{"pos":[6402,6410],"content":"Example:"},{"pos":[6450,6621],"content":"For more information about using this notation, see <bpt id=\"p1\">[</bpt>Using cross reference<ept id=\"p1\">](https://dotnet.github.io/docfx/tutorial/links_and_cross_references.html#using-cross-reference)</ept>.","source":"For more information about using this notation, see [Using cross reference](https://dotnet.github.io/docfx/tutorial/links_and_cross_references.html#using-cross-reference)."},{"content":"Right now, there is no easy way to find the UIDs.","pos":[6625,6674]},{"content":"The best way to find the UID for an API is to search for it in this repo: <bpt id=\"p1\">[</bpt>docascode/coreapi<ept id=\"p1\">](https://github.com/docascode/coreapi)</ept>.","pos":[6675,6807],"source":" The best way to find the UID for an API is to search for it in this repo: [docascode/coreapi](https://github.com/docascode/coreapi)."},{"content":"We're working on having a better system in the future.","pos":[6808,6862]},{"content":"When the UID contains the special characters <ph id=\"ph1\">\\`</ph> or <ph id=\"ph2\">\\#</ph>, the UID value needs to be HTML encoded as %60 and %23 respectively as in the following examples:","pos":[6864,7015],"source":"When the UID contains the special characters \\` or \\#, the UID value needs to be HTML encoded as %60 and %23 respectively as in the following examples:"},{"pos":[7018,7066],"content":"Example: @System.Threading.Tasks.Task<ph id=\"ph1\">\\`</ph>1 becomes","source":"Example: @System.Threading.Tasks.Task\\`1 becomes "},{"pos":[7104,7145],"content":"Example: @System.Exception.<ph id=\"ph1\">\\#</ph>ctor becomes","source":"Example: @System.Exception.\\#ctor becomes "},{"content":"Lists","pos":[7178,7183]},{"content":"Ordered lists","pos":[7189,7202]},{"content":"This","pos":[7207,7211]},{"content":"Is","pos":[7216,7218]},{"content":"An","pos":[7222,7224]},{"content":"Ordered","pos":[7228,7235]},{"content":"List","pos":[7239,7243]},{"content":"Ordered list with an embedded list","pos":[7253,7287]},{"content":"Here","pos":[7292,7296]},{"content":"comes","pos":[7300,7305]},{"content":"an","pos":[7309,7311]},{"content":"embedded","pos":[7315,7323]},{"content":"Miss Scarlett","pos":[7331,7344]},{"content":"Professor Plum","pos":[7352,7366]},{"content":"ordered","pos":[7370,7377]},{"content":"list","pos":[7381,7385]},{"content":"Unordered Lists","pos":[7392,7407]},{"content":"This","pos":[7411,7415]},{"content":"is","pos":[7418,7420]},{"content":"a","pos":[7423,7424]},{"content":"bulleted","pos":[7427,7435]},{"content":"list","pos":[7438,7442]},{"content":"Unordered list with an embedded list","pos":[7451,7487]},{"content":"This","pos":[7491,7495]},{"content":"bulleted","pos":[7499,7507]},{"content":"list","pos":[7511,7515]},{"content":"Mrs. Peacock","pos":[7522,7534]},{"content":"Mr. Green","pos":[7541,7550]},{"content":"contains","pos":[7553,7561]},{"content":"other","pos":[7566,7571]},{"content":"Colonel Mustard","pos":[7579,7594]},{"content":"Mrs. White","pos":[7602,7612]},{"content":"lists","pos":[7615,7620]},{"content":"Horizontal rule","pos":[7626,7641]},{"content":"Tables","pos":[7651,7657]},{"content":"Tables","pos":[7661,7667]},{"content":"Are","pos":[7677,7680]},{"content":"Cool","pos":[7693,7697]},{"content":"col 3 is","pos":[7745,7753]},{"content":"right-aligned","pos":[7761,7774]},{"content":"$1600","pos":[7777,7782]},{"content":"col 2 is","pos":[7787,7795]},{"content":"centered","pos":[7803,7811]},{"content":"$12","pos":[7821,7824]},{"content":"col 1 is default","pos":[7829,7845]},{"content":"left-aligned","pos":[7848,7860]},{"content":"$1","pos":[7870,7872]},{"pos":[7876,8004],"content":"You can use a <bpt id=\"p1\">[</bpt>Markdown table generator tool<ept id=\"p1\">](http://www.tablesgenerator.com/markdown_tables)</ept> to help creating them more easily.","source":"You can use a [Markdown table generator tool](http://www.tablesgenerator.com/markdown_tables) to help creating them more easily."},{"content":"Code","pos":[8010,8014]},{"content":"The best way to include code is to include snippets from a working sample.","pos":[8016,8090]},{"content":"Create your sample following the instructions in the <bpt id=\"p1\">[</bpt>contributing guide<ept id=\"p1\">](../CONTRIBUTING.md#contributing-to-samples)</ept>.","pos":[8091,8209],"source":" Create your\nsample following the instructions in the [contributing guide](../CONTRIBUTING.md#contributing-to-samples)."},{"content":"You can include the code using include syntax:","pos":[8211,8257]},{"content":"The example above shows C# syntax, but other languages are supported.","pos":[8318,8387]},{"content":"Use <ph id=\"ph1\">`code-fsharp`</ph> for F# samples; use <ph id=\"ph2\">`code-vbnet`</ph> for Visual Basic samples.","pos":[8388,8464],"source":"\nUse `code-fsharp` for F# samples; use `code-vbnet` for Visual Basic samples."},{"content":"Other languages that are supported are:","pos":[8465,8504],"source":"\nOther languages that are supported are:"},{"pos":[8507,8511],"content":"C++:"},{"pos":[8525,8530],"content":"HTML:"},{"pos":[8545,8556],"content":"JavaScript:"},{"pos":[8577,8588],"content":"Powershell:"},{"pos":[8601,8605],"content":"SQL:"},{"pos":[8619,8623],"content":"XML:"},{"content":"The text you place for <ph id=\"ph1\">`&lt;title&gt;`</ph> shows up as a rollover on the text.","pos":[8638,8706],"source":"The text you place for `<title>` shows up as a rollover on the text."},{"content":"The <ph id=\"ph1\">`&lt;pathToFile&gt;`</ph> is the path to the source file.","pos":[8707,8757],"source":" The `<pathToFile>`\nis the path to the source file."},{"content":"The <ph id=\"ph1\">`&lt;RegionName&gt;`</ph> should be a region in your source code that should be included.","pos":[8758,8840],"source":" The `<RegionName>` should be a region in your source\ncode that should be included."},{"content":"Use the <ph id=\"ph1\">`#region`</ph> and <ph id=\"ph2\">`#endregion`</ph> preprocessor syntax to specify the region of code to include.","pos":[8841,8937],"source":" Use the `#region` and `#endregion` preprocessor syntax\nto specify the region of code to include."},{"content":"For cases where regions don't work, you can specify the start and end of a snippet using an XML element name in a single line comment.","pos":[8939,9073],"source":"For cases where regions don't work, you can specify the start and end of a snippet\nusing an XML element name in a single line comment."},{"content":"For example, you could write this in C#:","pos":[9074,9114]},{"content":"In other languages, use the comment syntax for that language.","pos":[9210,9271]},{"content":"Finally, you can use line numbers: <ph id=\"ph1\">`#L1-L10`</ph> would include lines 1 through 10.","pos":[9272,9350],"source":"\nFinally, you can use line\nnumbers: `#L1-L10` would include lines 1 through 10."},{"content":"We discourage line numbers because they are very brittle.","pos":[9351,9408],"source":" We discourage line numbers\nbecause they are very brittle."},{"content":"Including snippets from full programs ensures that all code runs through our Continuous Integration (CI) system.","pos":[9410,9522],"source":"Including snippets from full programs ensures that all code runs through our Continuous Integration (CI)\nsystem."},{"content":"However, if you need to show something that causes compile time or runtime errors, you can use inline code blocks.","pos":[9523,9637],"source":" However, if you need to show something that causes compile time or\nruntime errors, you can use inline code blocks."},{"content":"Inline code blocks with language identifier","pos":[9643,9686]},{"content":"Use three backticks (<ph id=\"ph1\">\\`\\`\\`</ph>) + a language ID to apply language-specific color coding to a code block.","pos":[9688,9789],"source":"Use three backticks (\\`\\`\\`) + a language ID to apply language-specific color coding to a code block."},{"content":"Here is the entire list of <bpt id=\"p1\">[</bpt>GFM language IDs<ept id=\"p1\">](https://github.com/jmm/gfm-lang-ids/wiki/GitHub-Flavored-Markdown-(GFM)-language-IDs)</ept>.","pos":[9790,9922],"source":" Here is the entire list of [GFM language IDs](https://github.com/jmm/gfm-lang-ids/wiki/GitHub-Flavored-Markdown-(GFM)-language-IDs)."},{"content":"C&amp;#9839;","pos":[9930,9938],"source":"C&#9839;"},{"content":"Python","pos":[10266,10272]},{"content":"PowerShell","pos":[10448,10458]},{"content":"Generic code block","pos":[10611,10629]},{"content":"Use three backticks (&amp;#96;&amp;#96;&amp;#96;) for generic code block coding.","pos":[10631,10699],"source":"Use three backticks (&#96;&#96;&#96;) for generic code block coding."},{"content":"The recommended approach is to use code blocks with language identifiers as explained in the previous section to ensure the proper syntax highlighting in the documentation site.","pos":[10706,10883]},{"content":"Use generic code blocks only when necessary.","pos":[10884,10928]},{"content":"Inline code","pos":[11021,11032]},{"content":"Use backticks (&amp;#96;) for <ph id=\"ph1\">`inline code`</ph>.","pos":[11034,11074],"source":"Use backticks (&#96;) for `inline code`."},{"content":"Use inline code for command-line commands, database table and column names, and language keywords.","pos":[11075,11173]},{"content":"Blockquotes","pos":[11178,11189]},{"content":"The drought had lasted now for ten million years, and the reign of the terrible lizards had long since ended.","pos":[11193,11302]},{"content":"Here on the Equator, in the continent which would one day be known as Africa, the battle for existence had reached a new climax of ferocity, and the victor was not yet in sight.","pos":[11303,11480]},{"content":"In this barren and desiccated land, only the small or the swift or the fierce could flourish, or even hope to survive.","pos":[11481,11599]},{"content":"Images","pos":[11604,11610]},{"content":"Static Image or Animated gif","pos":[11616,11644]},{"content":"this is the alt text","pos":[11648,11668]},{"content":"Linked Image","pos":[11702,11714]},{"content":"lt text for linked image]","pos":[11720,11745]},{"content":"Videos","pos":[11796,11802]},{"content":"Channel 9","pos":[11808,11817]},{"content":"YouTube","pos":[11990,11997]},{"content":"docs.microsoft extensions","pos":[12126,12151]},{"content":"docs.microsoft provides a few additional extensions to GitHub Flavored Markdown.","pos":[12153,12233]},{"content":"Alerts","pos":[12240,12246]},{"content":"It's important to use the following alert styles so they render with the proper style in the documentation site.","pos":[12248,12360]},{"content":"However, the rendering engine on GitHub doesn't diferentiate them.","pos":[12361,12427]},{"content":"Note","pos":[12439,12443]},{"pos":[12447,12471],"content":"[!NOTE]\nThis is a NOTE","leadings":["","> "],"nodes":[{"content":"This is a NOTE","pos":[8,22]}]},{"content":"Warning","pos":[12478,12485]},{"pos":[12489,12519],"content":"[!WARNING]\nThis is a WARNING","leadings":["","> "],"nodes":[{"content":"This is a WARNING","pos":[11,28]}]},{"content":"Tip","pos":[12526,12529]},{"pos":[12533,12555],"content":"[!TIP]\nThis is a TIP","leadings":["","> "],"nodes":[{"content":"This is a TIP","pos":[7,20]}]},{"content":"Important","pos":[12562,12571]},{"pos":[12575,12607],"content":"[!IMPORTANT]\nThis is IMPORTANT","leadings":["","> "],"nodes":[{"content":"This is IMPORTANT","pos":[13,30]}]},{"pos":[12609,12653],"content":"And they'll render like this: <ph id=\"ph1\">![</ph>Alert styles","source":"And they'll render like this:\n![Alert styles"},{"content":"Buttons","pos":[12682,12689]},{"content":"button links","pos":[12716,12728]},{"pos":[12754,12901],"content":"You can see an example of buttons in action at the <bpt id=\"p1\">[</bpt>Intune docs<ept id=\"p1\">](https://docs.microsoft.com/en-us/intune/get-started/choose-how-to-enroll-devices)</ept>.","source":"You can see an example of buttons in action at the [Intune docs](https://docs.microsoft.com/en-us/intune/get-started/choose-how-to-enroll-devices)."},{"content":"Selectors","pos":[12908,12917]},{"content":"macOS","pos":[12958,12963]},{"content":"Windows","pos":[13010,13017]},{"pos":[13064,13274],"content":"You can see an example of selectors in action at the <bpt id=\"p1\">[</bpt>Intune docs<ept id=\"p1\">](https://docs.microsoft.com/en-us/intune/deploy-use/what-to-tell-your-end-users-about-using-microsoft-intune#how-your-end-users-get-their-apps)</ept>.","source":"You can see an example of selectors in action at the [Intune docs](https://docs.microsoft.com/en-us/intune/deploy-use/what-to-tell-your-end-users-about-using-microsoft-intune#how-your-end-users-get-their-apps)."},{"content":"Step-By-Steps","pos":[13280,13293]},{"content":"<bpt id=\"p1\">[</bpt>Pre<ept id=\"p1\">](../docs/csharp/expression-trees-interpreting.md)</ept><ph id=\"ph1\">\n</ph><bpt id=\"p2\">[</bpt>Next<ept id=\"p2\">](../docs/csharp/expression-trees-translating.md)</ept>","pos":[13324,13433],"source":"[Pre](../docs/csharp/expression-trees-interpreting.md)\n[Next](../docs/csharp/expression-trees-translating.md)"},{"pos":[13435,13614],"content":"You can see an example of step-by-steps in action at the <bpt id=\"p1\">[</bpt>Advanced Threat Analytics docs<ept id=\"p1\">](https://docs.microsoft.com/en-us/advanced-threat-analytics/deploy-use/install-ata-step2)</ept>.","source":"You can see an example of step-by-steps in action at the [Advanced Threat Analytics docs](https://docs.microsoft.com/en-us/advanced-threat-analytics/deploy-use/install-ata-step2)."}],"content":"# Metadata and Markdown Template\n\nThis core-docs template contains examples of Markdown syntax, as well as guidance on setting the metadata. To get the most of it, you must view both the [raw Markdown](https://raw.githubusercontent.com/dotnet/docs/master/styleguide/template.md) and the [rendered view](https://github.com/dotnet/docs/blob/master/styleguide/template.md) (for instance, the raw Markdown shows the metadata block, while the rendered view does not).\n\nWhen creating a Markdown file, you should copy this template to a new file, fill out the metadata as specified below, set the H1 heading above to the title of the article, and delete the content. \n\n\n## Metadata \n\nThe full metadata block is above (in the [raw Markdown](https://raw.githubusercontent.com/dotnet/docs/master/styleguide/template.md)), divided into required fields and optional fields. Some key notes:\n\n- You **must** have a space between the colon (:) and the value for a metadata element.\n- If an optional metadata element does not have a value, comment out the element with a # or remove it (do not leave it blank or use \"na\"); if you are adding a value to an element that was commented out, be sure to remove the #.\n- Colons in a value (for example, a title) break the metadata parser. In this case, surround the title with double quotes (for example, `title: \"Writing .NET Core console apps: An advanced step-by-step guide\"`).\n- **title**: This title will appear in search engine results. You can also add a pipe (|) followed by the product name (for example, `title: Developing Libraries with Cross Platform Tools | .NET Core`). The title doesn't need be identical to the title in your H1 heading and it should contain 65 characters or less (including | PRODUCT NAME).\n- **author**, **manager**, **ms.reviewer**: The author field should contain the **GitHub username** of the author, not their alias.  The \"manager\" and \"ms.reviewer\" fields, on the other hand, should contain Microsoft aliases. ms.reviewer specifies the name of the PM/dev associated with the article or feature.\n- **ms.devlang** defines the technology. Some of the supported values are: dotnet, cpp, csharp, fsharp, vb and xml.\n- **ms.assetid**: This is the GUID of the article that is used for internal tracking purposes such as Business Intelligence (BI). When creating a new Markdown file, get a GUID from [https://www.guidgenerator.com](https://www.guidgenerator.com). \n\n## Basic Markdown, GFM, and special characters\n\nAll basic and GitHub Flavored Markdown (GFM) is supported. For more information on these, see:\n\n- [Baseline Markdown syntax](https://daringfireball.net/projects/markdown/syntax)\n- [GFM documentation](https://guides.github.com/features/mastering-markdown)\n\nMarkdown uses special characters such as \\*, \\`, and \\# for formatting. If you wish to include one of these characters in your content, you must do one of two things:\n\n- Put a backslash before the special character to \"escape\" it (for example, `\\*` for a \\*)\n- Use the [HTML entity code](http://www.ascii.cl/htmlcodes.htm) for the character (for example, `&#42;` for a &#42;).\n\n## File name\n\nFile names use the following rules:\n* Contain only lowercase letters, numbers, and hyphens.\n* No spaces or punctuation characters. Use the hyphens to separate words and numbers in the file name.\n* Use action verbs that are specific, such as develop, buy, build, troubleshoot. No -ing words.\n* No small words - don't include a, and, the, in, or, etc.\n* Must be in Markdown and use the .md file extension.\n* Keep file names reasonably short. They are part of the URL for your articles.  \n\n\n\n## Headings\n\nUse sentence-style capitalization. Always capitalize:\n- The first word of a heading. \n- The word following a colon in a title or heading (for example, \"How to: Sort an array\"). \n\nHeadings should be done using atx-style, that is, use 1-6 hash characters (#) at the start of the line to indicate a heading, corresponding to HTML headings levels H1 through H6. Examples of first- and second-level headers are used above. \n\nThere **must** be only one first-level heading (H1) in your topic, which will be displayed as the on-page title.\n\nIf your heading finishes with a `#` character, you need to add an extra `#` character in the end in order for the title to render correctly. For example, `# Async Programming in F# #`.     \n\nSecond-level headings will generate the on-page TOC that appears in the \"In this article\" section underneath the on-page title.\n\n### Third-level heading\n#### Fourth-level heading\n##### Fifth level heading\n###### Sixth-level heading\n \n## Text styling\n\n*Italics*\n Use for files, folders, paths (for long items, split onto their own line) - new terms - URLs (unless rendered as links, which is the default).\n\n**Bold**\nUse for UI elements.\n\n## Links\n\n### Internal Links\n\nTo link to a header in the same Markdown file (also known as anchor links), you'll need to find out the id of the header you're trying to link to. To confirm the ID, view the source of the rendered article, find the id of the header (for example, `id=\"blockquote\"`), and link using # + id (for example, `#blockquote`).\nThe id is auto-generated based on the header text. So, for example, given a unique section named `## Step 2`, the id would look like this `id=\"step-2\"`.\n\n- Example: [Chapter 1](#chapter-1)\n\nTo link to a Markdown file in the same repo, use [relative links](https://www.w3.org/TR/WD-html40-970917/htmlweb.html#h-5.1.2), including the \".md\" at the end of the filename.\n\n- Example: [Readme file](../readme.md)\n- Example: [Welcome to .NET](../docs/welcome.md)\n\nTo link to a header in a Markdown file in the same repo, use relative linking + hashtag linking.\n\n- Example: [.NET Community](../docs/welcome.md#community)\n\n### External Links\n\nTo link to an external file, use the full URL as the link.\n\n- Example: [GitHub](http://www.github.com)\n\nIf a URL appears in a Markdown file, it will be transformed into a clickable link.\n\n- Example: http://www.github.com\n\n### Links to APIs\n\nThe build system has some extensions that allow us to link to .NET Core APIs without having to use external links.  \nWhen linking to an API, you can use its unique identifier (UID) that is auto-generated from the source code.\n\nYou can use one of the following syntax:\n1. Markdown link: `[link_text](xref:UID)`\n2. Auto link: `<xref:UID>`\n3. Shorthand form: `@UID`\n\n- Example: `@System.String`\n- Example: `[String class](xref:System.String)` \n\nFor more information about using this notation, see [Using cross reference](https://dotnet.github.io/docfx/tutorial/links_and_cross_references.html#using-cross-reference).\n\n> Right now, there is no easy way to find the UIDs. The best way to find the UID for an API is to search for it in this repo: [docascode/coreapi](https://github.com/docascode/coreapi). We're working on having a better system in the future.\n\nWhen the UID contains the special characters \\` or \\#, the UID value needs to be HTML encoded as %60 and %23 respectively as in the following examples:\n- Example: @System.Threading.Tasks.Task\\`1 becomes `@System.Threading.Tasks.Task%601`\n- Example: @System.Exception.\\#ctor becomes `@System.Exception.%23ctor`\n\n## Lists\n\n### Ordered lists\n\n1. This \n1. Is\n1. An\n1. Ordered\n1. List  \n\n\n#### Ordered list with an embedded list\n\n1. Here\n1. comes\n1. an\n1. embedded\n    1. Miss Scarlett\n    1. Professor Plum\n1. ordered\n1. list\n\n\n### Unordered Lists\n\n- This\n- is\n- a\n- bulleted\n- list\n\n\n##### Unordered list with an embedded list\n\n- This \n- bulleted \n- list\n    - Mrs. Peacock\n    - Mr. Green\n- contains  \n- other\n    1. Colonel Mustard\n    1. Mrs. White\n- lists\n\n\n## Horizontal rule\n\n---\n\n## Tables\n\n| Tables        | Are           | Cool  |\n| ------------- |:-------------:| -----:|\n| col 3 is      | right-aligned | $1600 |\n| col 2 is      | centered      |   $12 |\n| col 1 is default | left-aligned     |    $1 |\n\nYou can use a [Markdown table generator tool](http://www.tablesgenerator.com/markdown_tables) to help creating them more easily. \n\n## Code\n\nThe best way to include code is to include snippets from a working sample. Create your\nsample following the instructions in the [contributing guide](../CONTRIBUTING.md#contributing-to-samples).\n\nYou can include the code using include syntax:\n\n```\n[!code-csharp[<title>](<pathToFile>#<RegionName)]\n```\n\nThe example above shows C# syntax, but other languages are supported.\nUse `code-fsharp` for F# samples; use `code-vbnet` for Visual Basic samples.\nOther languages that are supported are:\n* C++: `code-cpp`\n* HTML: `code-html`\n* JavaScript: `code-javascript`\n* Powershell: `code-ps`\n* SQL: `code-sql`\n* XML: `code-xml`\n\n\n\nThe text you place for `<title>` shows up as a rollover on the text. The `<pathToFile>`\nis the path to the source file. The `<RegionName>` should be a region in your source\ncode that should be included. Use the `#region` and `#endregion` preprocessor syntax\nto specify the region of code to include.\n\nFor cases where regions don't work, you can specify the start and end of a snippet\nusing an XML element name in a single line comment. For example, you could write this in C#:\n\n```csharp\n// <CodeToInclude>\nint j = 5;\nint i ; 10;\nint sum = i + j;\n// </CodeToInclude>\n```\n\nIn other languages, use the comment syntax for that language.\nFinally, you can use line\nnumbers: `#L1-L10` would include lines 1 through 10. We discourage line numbers\nbecause they are very brittle.\n\nIncluding snippets from full programs ensures that all code runs through our Continuous Integration (CI)\nsystem. However, if you need to show something that causes compile time or\nruntime errors, you can use inline code blocks.\n\n### Inline code blocks with language identifier\n\nUse three backticks (\\`\\`\\`) + a language ID to apply language-specific color coding to a code block. Here is the entire list of [GFM language IDs](https://github.com/jmm/gfm-lang-ids/wiki/GitHub-Flavored-Markdown-(GFM)-language-IDs).\n\n##### C&#9839;\n\n```c#\nusing System;\nnamespace HelloWorld\n{\n    class Hello \n    {\n        static void Main() \n        {\n            Console.WriteLine(\"Hello World!\");\n\n            // Keep the console window open in debug mode.\n            Console.WriteLine(\"Press any key to exit.\");\n            Console.ReadKey();\n        }\n    }\n}\n```\n#### Python\n\n```python\nfriends = ['john', 'pat', 'gary', 'michael']\nfor i, name in enumerate(friends):\n    print \"iteration {iteration} is {name}\".format(iteration=i, name=name)\n```\n#### PowerShell\n\n```powershell\nClear-Host\n$Directory = \"C:\\Windows\\\"\n$Files = Get-Childitem $Directory -recurse -Include *.log `\n-ErrorAction SilentlyContinue\n```\n\n### Generic code block\n\nUse three backticks (&#96;&#96;&#96;) for generic code block coding.   \n\n> The recommended approach is to use code blocks with language identifiers as explained in the previous section to ensure the proper syntax highlighting in the documentation site. Use generic code blocks only when necessary.\n\n```\nfunction fancyAlert(arg) {\n    if(arg) {\n        $.docs({div:'#foo'})\n    }\n}\n```\n\n### Inline code\n\nUse backticks (&#96;) for `inline code`. Use inline code for command-line commands, database table and column names, and language keywords.\n\n## Blockquotes\n\n> The drought had lasted now for ten million years, and the reign of the terrible lizards had long since ended. Here on the Equator, in the continent which would one day be known as Africa, the battle for existence had reached a new climax of ferocity, and the victor was not yet in sight. In this barren and desiccated land, only the small or the swift or the fierce could flourish, or even hope to survive.\n\n## Images\n\n### Static Image or Animated gif\n\n![this is the alt text](../images/Logo_DotNet.png)\n\n### Linked Image\n\n[![alt text for linked image](../images/Logo_DotNet.png)](https://dot.net) \n\n## Videos\n\n### Channel 9\n\n<iframe src=\"https://channel9.msdn.com/Shows/On-NET/Shipping-NET-Core-RC2--Tools-Preview-1/player\" width=\"960\" height=\"540\" allowFullScreen frameBorder=\"0\"></iframe>\n\n### YouTube\n\n<iframe width=\"420\" height=\"315\" src=\"https://www.youtube.com/embed/g2a4W6Q7aRw\" frameborder=\"0\" allowfullscreen></iframe>\n\n## docs.microsoft extensions\n\ndocs.microsoft provides a few additional extensions to GitHub Flavored Markdown. \n\n### Alerts\n\nIt's important to use the following alert styles so they render with the proper style in the documentation site. However, the rendering engine on GitHub doesn't diferentiate them.     \n\n#### Note\n\n> [!NOTE]\n> This is a NOTE\n\n#### Warning\n\n> [!WARNING]\n> This is a WARNING\n\n#### Tip\n\n> [!TIP]\n> This is a TIP\n\n#### Important\n\n> [!IMPORTANT]\n> This is IMPORTANT\n\nAnd they'll render like this:\n![Alert styles](../images/alerts.png)\n\n### Buttons\n\n> [!div class=\"button\"]\n[button links](../docs/core/index.md)\n\nYou can see an example of buttons in action at the [Intune docs](https://docs.microsoft.com/en-us/intune/get-started/choose-how-to-enroll-devices). \n\n### Selectors\n\n> [!div class=\"op_single_selector\"]\n- [macOS](../docs/core/tutorials/using-on-macos.md)\n- [Windows](../docs/core/tutorials/using-on-windows.md)\n\nYou can see an example of selectors in action at the [Intune docs](https://docs.microsoft.com/en-us/intune/deploy-use/what-to-tell-your-end-users-about-using-microsoft-intune#how-your-end-users-get-their-apps).\n\n### Step-By-Steps\n\n>[!div class=\"step-by-step\"]\n[Pre](../docs/csharp/expression-trees-interpreting.md)\n[Next](../docs/csharp/expression-trees-translating.md)\n\nYou can see an example of step-by-steps in action at the [Advanced Threat Analytics docs](https://docs.microsoft.com/en-us/advanced-threat-analytics/deploy-use/install-ata-step2)."}