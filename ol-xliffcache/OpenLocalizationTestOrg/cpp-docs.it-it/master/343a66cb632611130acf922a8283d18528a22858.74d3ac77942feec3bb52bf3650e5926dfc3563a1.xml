{"nodes":[{"pos":[12,58],"content":"C++ Standard Library Overview | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"C++ Standard Library Overview | Microsoft Docs","pos":[0,46]}]},{"pos":[681,710],"content":"C++ Standard Library Overview","linkify":"C++ Standard Library Overview","nodes":[{"content":"C++ Standard Library Overview","pos":[0,29]}]},{"content":"All C++ library entities are declared or defined in one or more standard headers.","pos":[711,792]},{"content":"This implementation includes two additional headers, <ph id=\"ph1\">`&lt;hash_map&gt;`</ph> and <ph id=\"ph2\">`&lt;hash_set&gt;`</ph>, that are not required by the C++ Standard.","pos":[793,919],"source":" This implementation includes two additional headers, `<hash_map>` and `<hash_set>`, that are not required by the C++ Standard."},{"content":"For a complete list of headers that this implementation supports, see <bpt id=\"p1\">[</bpt>Header Files Reference<ept id=\"p1\">](../standard-library/cpp-standard-library-header-files.md)</ept>.","pos":[920,1073],"source":" For a complete list of headers that this implementation supports, see [Header Files Reference](../standard-library/cpp-standard-library-header-files.md)."},{"content":"A freestanding implementation of the C++ library provides only a subset of these headers:","pos":[1080,1169]},{"pos":[1190,1234],"content":"<bpt id=\"p1\">[</bpt><ph id=\"ph1\">\\&lt;</ph>cstddef&gt;<ept id=\"p1\">](../standard-library/cstddef.md)</ept>","source":"[\\<cstddef>](../standard-library/cstddef.md)"},{"pos":[1235,1344],"content":"<bpt id=\"p1\">[</bpt><ph id=\"ph1\">\\&lt;</ph>cstdlib&gt;<ept id=\"p1\">](../standard-library/cstdlib.md)</ept> (declaring at least the functions <ph id=\"ph2\">`abort`</ph>, <ph id=\"ph3\">`atexit`</ph>, and <ph id=\"ph4\">`exit`</ph>)","source":"[\\<cstdlib>](../standard-library/cstdlib.md) (declaring at least the functions `abort`, `atexit`, and `exit`)"},{"pos":[1349,1397],"content":"<bpt id=\"p1\">[</bpt><ph id=\"ph1\">\\&lt;</ph>exception&gt;<ept id=\"p1\">](../standard-library/exception.md)</ept>","source":"[\\<exception>](../standard-library/exception.md)"},{"pos":[1398,1440],"content":"<bpt id=\"p1\">[</bpt><ph id=\"ph1\">\\&lt;</ph>limits&gt;<ept id=\"p1\">](../standard-library/limits.md)</ept>","source":"[\\<limits>](../standard-library/limits.md)"},{"pos":[1445,1481],"content":"<bpt id=\"p1\">[</bpt><ph id=\"ph1\">\\&lt;</ph>new&gt;<ept id=\"p1\">](../standard-library/new.md)</ept>","source":"[\\<new>](../standard-library/new.md)"},{"pos":[1482,1526],"content":"<bpt id=\"p1\">[</bpt><ph id=\"ph1\">\\&lt;</ph>cstdarg&gt;<ept id=\"p1\">](../standard-library/cstdarg.md)</ept>","source":"[\\<cstdarg>](../standard-library/cstdarg.md)"},{"content":"The C++ library headers have two broader subdivisions:","pos":[1534,1588]},{"pos":[1598,1668],"content":"<bpt id=\"p1\">[</bpt>iostreams<ept id=\"p1\">](../standard-library/iostreams-conventions.md)</ept> conventions.","source":"[iostreams](../standard-library/iostreams-conventions.md) conventions."},{"pos":[1678,1778],"content":"<bpt id=\"p1\">[</bpt>C++ Standard Library Reference<ept id=\"p1\">](../standard-library/cpp-standard-library-reference.md)</ept> conventions.","source":"[C++ Standard Library Reference](../standard-library/cpp-standard-library-reference.md) conventions."},{"content":"This section contains the following sections:","pos":[1785,1830]},{"pos":[1840,1917],"content":"<bpt id=\"p1\">[</bpt>Using C++ Library Headers<ept id=\"p1\">](../standard-library/using-cpp-library-headers.md)</ept>","source":"[Using C++ Library Headers](../standard-library/using-cpp-library-headers.md)"},{"pos":[1927,2000],"content":"<bpt id=\"p1\">[</bpt>C++ Library Conventions<ept id=\"p1\">](../standard-library/cpp-library-conventions.md)</ept>","source":"[C++ Library Conventions](../standard-library/cpp-library-conventions.md)"},{"pos":[2010,2079],"content":"<bpt id=\"p1\">[</bpt>iostreams Conventions<ept id=\"p1\">](../standard-library/iostreams-conventions.md)</ept>","source":"[iostreams Conventions](../standard-library/iostreams-conventions.md)"},{"pos":[2089,2186],"content":"<bpt id=\"p1\">[</bpt>C++ Program Startup and Termination<ept id=\"p1\">](../standard-library/cpp-program-startup-and-termination.md)</ept>","source":"[C++ Program Startup and Termination](../standard-library/cpp-program-startup-and-termination.md)"},{"pos":[2196,2294],"content":"<bpt id=\"p1\">[</bpt>Safe Libraries: C++ Standard Library<ept id=\"p1\">](../standard-library/safe-libraries-cpp-standard-library.md)</ept>","source":"[Safe Libraries: C++ Standard Library](../standard-library/safe-libraries-cpp-standard-library.md)"},{"pos":[2304,2365],"content":"<bpt id=\"p1\">[</bpt>Checked Iterators<ept id=\"p1\">](../standard-library/checked-iterators.md)</ept>","source":"[Checked Iterators](../standard-library/checked-iterators.md)"},{"pos":[2375,2446],"content":"<bpt id=\"p1\">[</bpt>Debug Iterator Support<ept id=\"p1\">](../standard-library/debug-iterator-support.md)</ept>","source":"[Debug Iterator Support](../standard-library/debug-iterator-support.md)"},{"pos":[2456,2543],"content":"<bpt id=\"p1\">[</bpt>C++ Standard Library Reference<ept id=\"p1\">](../standard-library/cpp-standard-library-reference.md)</ept>","source":"[C++ Standard Library Reference](../standard-library/cpp-standard-library-reference.md)"},{"pos":[2553,2662],"content":"<bpt id=\"p1\">[</bpt>Thread Safety in the C++ Standard Library<ept id=\"p1\">](../standard-library/thread-safety-in-the-cpp-standard-library.md)</ept>","source":"[Thread Safety in the C++ Standard Library](../standard-library/thread-safety-in-the-cpp-standard-library.md)"},{"pos":[2672,2731],"content":"<bpt id=\"p1\">[</bpt>stdext Namespace<ept id=\"p1\">](../standard-library/stdext-namespace.md)</ept>","source":"[stdext Namespace](../standard-library/stdext-namespace.md)"},{"pos":[2741,2816],"content":"<bpt id=\"p1\">[</bpt>Regular Expressions (C++)<ept id=\"p1\">](../standard-library/regular-expressions-cpp.md)</ept>","source":"[Regular Expressions (C++)](../standard-library/regular-expressions-cpp.md)"},{"pos":[2823,2954],"content":"For more information about Visual C++ run-time libraries, see <bpt id=\"p1\">[</bpt>CRT Library Features<ept id=\"p1\">](../c-runtime-library/crt-library-features.md)</ept>.","source":"For more information about Visual C++ run-time libraries, see [CRT Library Features](../c-runtime-library/crt-library-features.md)."},{"pos":[2963,2971],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"pos":[2975,3052],"content":"<bpt id=\"p1\">[</bpt>C++ Standard Library<ept id=\"p1\">](../standard-library/cpp-standard-library-reference.md)</ept>","source":"[C++ Standard Library](../standard-library/cpp-standard-library-reference.md)"}],"content":"---\ntitle: \"C++ Standard Library Overview | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"headers, C++ library\"\n  - \"Standard C++ Library\"\n  - \"libraries, Standard C++\"\n  - \"Standard C++ Library, headers\"\nms.assetid: 7acb83a4-da73-4ad3-bc30-a71289db7f60\ncaps.latest.revision: 16\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# C++ Standard Library Overview\nAll C++ library entities are declared or defined in one or more standard headers. This implementation includes two additional headers, `<hash_map>` and `<hash_set>`, that are not required by the C++ Standard. For a complete list of headers that this implementation supports, see [Header Files Reference](../standard-library/cpp-standard-library-header-files.md).  \n  \n A freestanding implementation of the C++ library provides only a subset of these headers:  \n  \n|||  \n|-|-|  \n|[\\<cstddef>](../standard-library/cstddef.md)|[\\<cstdlib>](../standard-library/cstdlib.md) (declaring at least the functions `abort`, `atexit`, and `exit`)|  \n|[\\<exception>](../standard-library/exception.md)|[\\<limits>](../standard-library/limits.md)|  \n|[\\<new>](../standard-library/new.md)|[\\<cstdarg>](../standard-library/cstdarg.md)|  \n  \n The C++ library headers have two broader subdivisions:  \n  \n-   [iostreams](../standard-library/iostreams-conventions.md) conventions.  \n  \n-   [C++ Standard Library Reference](../standard-library/cpp-standard-library-reference.md) conventions.  \n  \n This section contains the following sections:  \n  \n-   [Using C++ Library Headers](../standard-library/using-cpp-library-headers.md)  \n  \n-   [C++ Library Conventions](../standard-library/cpp-library-conventions.md)  \n  \n-   [iostreams Conventions](../standard-library/iostreams-conventions.md)  \n  \n-   [C++ Program Startup and Termination](../standard-library/cpp-program-startup-and-termination.md)  \n  \n-   [Safe Libraries: C++ Standard Library](../standard-library/safe-libraries-cpp-standard-library.md)  \n  \n-   [Checked Iterators](../standard-library/checked-iterators.md)  \n  \n-   [Debug Iterator Support](../standard-library/debug-iterator-support.md)  \n  \n-   [C++ Standard Library Reference](../standard-library/cpp-standard-library-reference.md)  \n  \n-   [Thread Safety in the C++ Standard Library](../standard-library/thread-safety-in-the-cpp-standard-library.md)  \n  \n-   [stdext Namespace](../standard-library/stdext-namespace.md)  \n  \n-   [Regular Expressions (C++)](../standard-library/regular-expressions-cpp.md)  \n  \n For more information about Visual C++ run-time libraries, see [CRT Library Features](../c-runtime-library/crt-library-features.md).  \n  \n## See Also  \n [C++ Standard Library](../standard-library/cpp-standard-library-reference.md)\n\n"}