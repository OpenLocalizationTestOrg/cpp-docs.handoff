{"nodes":[{"pos":[12,48],"content":"CPropertyPage Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"CPropertyPage Class | Microsoft Docs","pos":[0,36]}]},{"pos":[703,722],"content":"CPropertyPage Class","linkify":"CPropertyPage Class","nodes":[{"content":"CPropertyPage Class","pos":[0,19]}]},{"content":"Represents individual pages of a property sheet, otherwise known as a tab dialog box.","pos":[723,808]},{"pos":[817,823],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[886,893],"content":"Members","linkify":"Members","nodes":[{"content":"Members","pos":[0,7]}]},{"pos":[903,922],"content":"Public Constructors","linkify":"Public Constructors","nodes":[{"content":"Public Constructors","pos":[0,19]}]},{"content":"Name","pos":[929,933]},{"content":"Description","pos":[934,945]},{"pos":[983,1044],"content":"<bpt id=\"p1\">[</bpt>CPropertyPage::CPropertyPage<ept id=\"p1\">](#cpropertypage__cpropertypage)</ept>","source":"[CPropertyPage::CPropertyPage](#cpropertypage__cpropertypage)"},{"pos":[1045,1081],"content":"Constructs a <ph id=\"ph1\">`CPropertyPage`</ph> object.","source":"Constructs a `CPropertyPage` object."},{"pos":[1092,1106],"content":"Public Methods","linkify":"Public Methods","nodes":[{"content":"Public Methods","pos":[0,14]}]},{"content":"Name","pos":[1113,1117]},{"content":"Description","pos":[1118,1129]},{"pos":[1167,1228],"content":"<bpt id=\"p1\">[</bpt>CPropertyPage::CancelToClose<ept id=\"p1\">](#cpropertypage__canceltoclose)</ept>","source":"[CPropertyPage::CancelToClose](#cpropertypage__canceltoclose)"},{"content":"Changes the OK button to read Close, and disables the Cancel button, after an unrecoverable change in the page of a modal property sheet.","pos":[1229,1366]},{"pos":[1371,1424],"content":"<bpt id=\"p1\">[</bpt>CPropertyPage::Construct<ept id=\"p1\">](#cpropertypage__construct)</ept>","source":"[CPropertyPage::Construct](#cpropertypage__construct)"},{"content":"Constructs a <ph id=\"ph1\">`CPropertyPage`</ph> object.","pos":[1425,1461],"source":"Constructs a `CPropertyPage` object."},{"content":"Use <ph id=\"ph1\">`Construct`</ph> if you want to specify your parameters at run time, or if you are using arrays.","pos":[1462,1557],"source":" Use `Construct` if you want to specify your parameters at run time, or if you are using arrays."},{"pos":[1562,1609],"content":"<bpt id=\"p1\">[</bpt>CPropertyPage::GetPSP<ept id=\"p1\">](#cpropertypage__getpsp)</ept>","source":"[CPropertyPage::GetPSP](#cpropertypage__getpsp)"},{"pos":[1610,1761],"content":"Retrieves the Windows <bpt id=\"p1\">[</bpt>PROPSHEETPAGE<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb774548)</ept> structure associated with the <ph id=\"ph1\">`CPropertyPage`</ph> object.","source":"Retrieves the Windows [PROPSHEETPAGE](http://msdn.microsoft.com/library/windows/desktop/bb774548) structure associated with the `CPropertyPage` object."},{"pos":[1766,1815],"content":"<bpt id=\"p1\">[</bpt>CPropertyPage::OnApply<ept id=\"p1\">](#cpropertypage__onapply)</ept>","source":"[CPropertyPage::OnApply](#cpropertypage__onapply)"},{"content":"Called by the framework when the Apply Now button is clicked.","pos":[1816,1877]},{"pos":[1882,1933],"content":"<bpt id=\"p1\">[</bpt>CPropertyPage::OnCancel<ept id=\"p1\">](#cpropertypage__oncancel)</ept>","source":"[CPropertyPage::OnCancel](#cpropertypage__oncancel)"},{"content":"Called by the framework when the Cancel button is clicked.","pos":[1934,1992]},{"pos":[1997,2056],"content":"<bpt id=\"p1\">[</bpt>CPropertyPage::OnKillActive<ept id=\"p1\">](#cpropertypage__onkillactive)</ept>","source":"[CPropertyPage::OnKillActive](#cpropertypage__onkillactive)"},{"content":"Called by the framework when the current page is no longer the active page.","pos":[2057,2132]},{"content":"Perform data validation here.","pos":[2133,2162]},{"pos":[2167,2210],"content":"<bpt id=\"p1\">[</bpt>CPropertyPage::OnOK<ept id=\"p1\">](#cpropertypage__onok)</ept>","source":"[CPropertyPage::OnOK](#cpropertypage__onok)"},{"content":"Called by the framework when the OK, Apply Now, or Close button is clicked.","pos":[2211,2286]},{"pos":[2291,2352],"content":"<bpt id=\"p1\">[</bpt>CPropertyPage::OnQueryCancel<ept id=\"p1\">](#cpropertypage__onquerycancel)</ept>","source":"[CPropertyPage::OnQueryCancel](#cpropertypage__onquerycancel)"},{"content":"Called by the framework when the Cancel button is clicked, and before the cancel has taken place.","pos":[2353,2450]},{"pos":[2455,2504],"content":"<bpt id=\"p1\">[</bpt>CPropertyPage::OnReset<ept id=\"p1\">](#cpropertypage__onreset)</ept>","source":"[CPropertyPage::OnReset](#cpropertypage__onreset)"},{"content":"Called by the framework when the Cancel button is clicked.","pos":[2505,2563]},{"pos":[2568,2625],"content":"<bpt id=\"p1\">[</bpt>CPropertyPage::OnSetActive<ept id=\"p1\">](#cpropertypage__onsetactive)</ept>","source":"[CPropertyPage::OnSetActive](#cpropertypage__onsetactive)"},{"content":"Called by the framework when the page is made the active page.","pos":[2626,2688]},{"pos":[2693,2752],"content":"<bpt id=\"p1\">[</bpt>CPropertyPage::OnWizardBack<ept id=\"p1\">](#cpropertypage__onwizardback)</ept>","source":"[CPropertyPage::OnWizardBack](#cpropertypage__onwizardback)"},{"content":"Called by the framework when the Back button is clicked while using a wizard-type property sheet.","pos":[2753,2850]},{"pos":[2855,2918],"content":"<bpt id=\"p1\">[</bpt>CPropertyPage::OnWizardFinish<ept id=\"p1\">](#cpropertypage__onwizardfinish)</ept>","source":"[CPropertyPage::OnWizardFinish](#cpropertypage__onwizardfinish)"},{"content":"Called by the framework when the Finish button is clicked while using a wizard-type property sheet.","pos":[2919,3018]},{"pos":[3023,3082],"content":"<bpt id=\"p1\">[</bpt>CPropertyPage::OnWizardNext<ept id=\"p1\">](#cpropertypage__onwizardnext)</ept>","source":"[CPropertyPage::OnWizardNext](#cpropertypage__onwizardnext)"},{"content":"Called by the framework when the Next button is clicked while using a wizard-type property sheet.","pos":[3083,3180]},{"pos":[3185,3246],"content":"<bpt id=\"p1\">[</bpt>CPropertyPage::QuerySiblings<ept id=\"p1\">](#cpropertypage__querysiblings)</ept>","source":"[CPropertyPage::QuerySiblings](#cpropertypage__querysiblings)"},{"content":"Forwards the message to each page of the property sheet.","pos":[3247,3303]},{"pos":[3308,3365],"content":"<bpt id=\"p1\">[</bpt>CPropertyPage::SetModified<ept id=\"p1\">](#cpropertypage__setmodified)</ept>","source":"[CPropertyPage::SetModified](#cpropertypage__setmodified)"},{"content":"Call to activate or deactivate the Apply Now button.","pos":[3366,3418]},{"pos":[3429,3448],"content":"Public Data Members","linkify":"Public Data Members","nodes":[{"content":"Public Data Members","pos":[0,19]}]},{"content":"Name","pos":[3455,3459]},{"content":"Description","pos":[3460,3471]},{"pos":[3509,3554],"content":"<bpt id=\"p1\">[</bpt>CPropertyPage::m_psp<ept id=\"p1\">](#cpropertypage__m_psp)</ept>","source":"[CPropertyPage::m_psp](#cpropertypage__m_psp)"},{"content":"The Windows <bpt id=\"p1\">[</bpt>PROPSHEETPAGE<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb774548)</ept> structure.","pos":[3555,3653],"source":"The Windows [PROPSHEETPAGE](http://msdn.microsoft.com/library/windows/desktop/bb774548) structure."},{"content":"Provides access to basic property page parameters.","pos":[3654,3704]},{"pos":[3714,3721],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"As with standard dialog boxes, you derive a class from <ph id=\"ph1\">`CPropertyPage`</ph> for each page in your property sheet.","pos":[3725,3833],"source":"As with standard dialog boxes, you derive a class from `CPropertyPage` for each page in your property sheet."},{"content":"To use <ph id=\"ph1\">`CPropertyPage`</ph>-derived objects, first create a <bpt id=\"p1\">[</bpt>CPropertySheet<ept id=\"p1\">](../../mfc/reference/cpropertysheet-class.md)</ept> object, and then create an object for each page that goes in the property sheet.","pos":[3834,4031],"source":" To use `CPropertyPage`-derived objects, first create a [CPropertySheet](../../mfc/reference/cpropertysheet-class.md) object, and then create an object for each page that goes in the property sheet."},{"content":"Call <bpt id=\"p1\">[</bpt>CPropertySheet::AddPage<ept id=\"p1\">](../../mfc/reference/cpropertysheet-class.md#cpropertysheet__addpage)</ept> for each page in the sheet, and then display the property sheet by calling <bpt id=\"p2\">[</bpt>CPropertySheet::DoModal<ept id=\"p2\">](../../mfc/reference/cpropertysheet-class.md#cpropertysheet__domodal)</ept> for a modal property sheet, or <bpt id=\"p3\">[</bpt>CPropertySheet::Create<ept id=\"p3\">](../../mfc/reference/cpropertysheet-class.md#cpropertysheet__create)</ept> for a modeless property sheet.","pos":[4032,4456],"source":" Call [CPropertySheet::AddPage](../../mfc/reference/cpropertysheet-class.md#cpropertysheet__addpage) for each page in the sheet, and then display the property sheet by calling [CPropertySheet::DoModal](../../mfc/reference/cpropertysheet-class.md#cpropertysheet__domodal) for a modal property sheet, or [CPropertySheet::Create](../../mfc/reference/cpropertysheet-class.md#cpropertysheet__create) for a modeless property sheet."},{"content":"You can create a type of tab dialog box called a wizard, which consists of a property sheet with a sequence of property pages that guide the user through the steps of an operation, such as setting up a device or creating a newsletter.","pos":[4463,4697]},{"content":"In a wizard-type tab dialog box, the property pages do not have tabs, and only one property page is visible at a time.","pos":[4698,4816]},{"content":"Also, instead of having OK and Apply Now buttons, a wizard-type tab dialog box has a Back button, a Next or Finish button, and a Cancel button.","pos":[4817,4960]},{"content":"For more information on establishing a property sheet as a wizard, see <bpt id=\"p1\">[</bpt>CPropertySheet::SetWizardMode<ept id=\"p1\">](../../mfc/reference/cpropertysheet-class.md#cpropertysheet__setwizardmode)</ept>.","pos":[4967,5145],"source":"For more information on establishing a property sheet as a wizard, see [CPropertySheet::SetWizardMode](../../mfc/reference/cpropertysheet-class.md#cpropertysheet__setwizardmode)."},{"content":"For more information on using <ph id=\"ph1\">`CPropertyPage`</ph> objects, see the article <bpt id=\"p1\">[</bpt>Property Sheets and Property Pages<ept id=\"p1\">](../../mfc/property-sheets-and-property-pages-in-mfc.md)</ept>.","pos":[5146,5310],"source":" For more information on using `CPropertyPage` objects, see the article [Property Sheets and Property Pages](../../mfc/property-sheets-and-property-pages-in-mfc.md)."},{"pos":[5319,5340],"content":"Inheritance Hierarchy","linkify":"Inheritance Hierarchy","nodes":[{"content":"Inheritance Hierarchy","pos":[0,21]}]},{"pos":[5344,5391],"content":"<bpt id=\"p1\">[</bpt>CObject<ept id=\"p1\">](../../mfc/reference/cobject-class.md)</ept>","source":"[CObject](../../mfc/reference/cobject-class.md)"},{"pos":[5398,5451],"content":"<bpt id=\"p1\">[</bpt>CCmdTarget<ept id=\"p1\">](../../mfc/reference/ccmdtarget-class.md)</ept>","source":"[CCmdTarget](../../mfc/reference/ccmdtarget-class.md)"},{"pos":[5458,5499],"content":"<bpt id=\"p1\">[</bpt>CWnd<ept id=\"p1\">](../../mfc/reference/cwnd-class.md)</ept>","source":"[CWnd](../../mfc/reference/cwnd-class.md)"},{"pos":[5506,5553],"content":"<bpt id=\"p1\">[</bpt>CDialog<ept id=\"p1\">](../../mfc/reference/cdialog-class.md)</ept>","source":"[CDialog](../../mfc/reference/cdialog-class.md)"},{"pos":[5584,5596],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[5600,5621],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> afxdlgs.h","source":"**Header:** afxdlgs.h"},{"pos":[5631,5704],"content":"<bpt id=\"p1\">&lt;a name=\"cpropertypage__canceltoclose\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CPropertyPage::CancelToClose","linkify":"<a name=\"cpropertypage__canceltoclose\"></a>  CPropertyPage::CancelToClose","source":"<a name=\"cpropertypage__canceltoclose\"></a>  CPropertyPage::CancelToClose"},{"content":"Call this function after an unrecoverable change has been made to the data in a page of a modal property sheet.","pos":[5708,5819]},{"pos":[5866,5873],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This function will change the OK button to Close and disable the Cancel button.","pos":[5877,5956]},{"content":"This change alerts the user that a change is permanent and the modifications cannot be cancelled.","pos":[5957,6054]},{"pos":[6061,6215],"content":"The <ph id=\"ph1\">`CancelToClose`</ph> member function does nothing in a modeless property sheet, because a modeless property sheet does not have a Cancel button by default.","source":"The `CancelToClose` member function does nothing in a modeless property sheet, because a modeless property sheet does not have a Cancel button by default."},{"pos":[6225,6232],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[6237,6319],"content":"See the example for <bpt id=\"p1\">[</bpt>CPropertyPage::QuerySiblings<ept id=\"p1\">](#cpropertypage__querysiblings)</ept>.","source":"See the example for [CPropertyPage::QuerySiblings](#cpropertypage__querysiblings)."},{"pos":[6329,6394],"content":"<bpt id=\"p1\">&lt;a name=\"cpropertypage__construct\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CPropertyPage::Construct","linkify":"<a name=\"cpropertypage__construct\"></a>  CPropertyPage::Construct","source":"<a name=\"cpropertypage__construct\"></a>  CPropertyPage::Construct"},{"pos":[6398,6462],"content":"Call this member function to construct a <ph id=\"ph1\">`CPropertyPage`</ph> object.","source":"Call this member function to construct a `CPropertyPage` object."},{"pos":[6890,6900],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"ID of the template used for this page.","pos":[6921,6959]},{"content":"ID of the name to be placed in the tab for this page.","pos":[6982,7035]},{"content":"If 0, the name will be taken from the dialog template for this page.","pos":[7036,7104]},{"content":"Contains a null-terminated string that is the name of a template resource.","pos":[7133,7207]},{"content":"ID of the name to be placed in the title location of the property page header.","pos":[7234,7312]},{"content":"By default, 0.","pos":[7313,7327]},{"content":"ID of the name to be placed in the subtitle location of the property page header.","pos":[7357,7438]},{"content":"By default, 0.","pos":[7439,7453]},{"pos":[7463,7470],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The object is displayed after all of the following conditions are met:","pos":[7474,7544]},{"pos":[7554,7699],"content":"The page has been added to a property sheet using <bpt id=\"p1\">[</bpt>CPropertySheet::AddPage<ept id=\"p1\">](../../mfc/reference/cpropertysheet-class.md#cpropertysheet__addpage)</ept>.","source":"The page has been added to a property sheet using [CPropertySheet::AddPage](../../mfc/reference/cpropertysheet-class.md#cpropertysheet__addpage)."},{"pos":[7709,7914],"content":"The property sheet's <bpt id=\"p1\">[</bpt>DoModal<ept id=\"p1\">](../../mfc/reference/cpropertysheet-class.md#cpropertysheet__domodal)</ept> or <bpt id=\"p2\">[</bpt>Create<ept id=\"p2\">](../../mfc/reference/cpropertysheet-class.md#cpropertysheet__create)</ept> function has been called.","source":"The property sheet's [DoModal](../../mfc/reference/cpropertysheet-class.md#cpropertysheet__domodal) or [Create](../../mfc/reference/cpropertysheet-class.md#cpropertysheet__create) function has been called."},{"content":"The user has selected (tabbed to) this page.","pos":[7924,7968]},{"content":"Call <bpt id=\"p1\">**</bpt>Construct<ept id=\"p1\">**</ept> if one of the other class constructors has not been called.","pos":[7975,8053],"source":"Call **Construct** if one of the other class constructors has not been called."},{"content":"The <ph id=\"ph1\">`Construct`</ph> member function is flexible because you can leave the parameter statement blank and then specify multiple parameters and construction at any point in your code.","pos":[8054,8230],"source":" The `Construct` member function is flexible because you can leave the parameter statement blank and then specify multiple parameters and construction at any point in your code."},{"pos":[8237,8402],"content":"You must use <ph id=\"ph1\">`Construct`</ph> when you work with arrays, and you must call <bpt id=\"p1\">**</bpt>Construct<ept id=\"p1\">**</ept> for each member of the array so that the data members are assigned proper values.","source":"You must use `Construct` when you work with arrays, and you must call **Construct** for each member of the array so that the data members are assigned proper values."},{"pos":[8412,8419],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[8423,8507],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_MFCDocView#112<ept id=\"p2\">](../../mfc/codesnippet/cpp/cpropertypage-class_1.cpp)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_MFCDocView#112](../../mfc/codesnippet/cpp/cpropertypage-class_1.cpp)]"},{"pos":[8517,8590],"content":"<bpt id=\"p1\">&lt;a name=\"cpropertypage__cpropertypage\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CPropertyPage::CPropertyPage","linkify":"<a name=\"cpropertypage__cpropertypage\"></a>  CPropertyPage::CPropertyPage","source":"<a name=\"cpropertypage__cpropertypage\"></a>  CPropertyPage::CPropertyPage"},{"pos":[8594,8630],"content":"Constructs a <ph id=\"ph1\">`CPropertyPage`</ph> object.","source":"Constructs a `CPropertyPage` object."},{"pos":[9268,9278],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"ID of the template used for this page.","pos":[9299,9337]},{"content":"ID of the name to be placed in the tab for this page.","pos":[9360,9413]},{"content":"If 0, the name will be taken from the dialog template for this page.","pos":[9414,9482]},{"content":"Points to a string containing the name of the template for this page.","pos":[9523,9592]},{"content":"Cannot be <bpt id=\"p1\">**</bpt>NULL<ept id=\"p1\">**</ept>.","pos":[9593,9612],"source":" Cannot be **NULL**."},{"content":"ID of the name to be placed in the title location of the property page header.","pos":[9639,9717]},{"content":"ID of the name to be placed in the subtitle location of the property page header.","pos":[9747,9828]},{"pos":[9838,9845],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The object is displayed after all of the following conditions are met:","pos":[9849,9919]},{"pos":[9929,10074],"content":"The page has been added to a property sheet using <bpt id=\"p1\">[</bpt>CPropertySheet::AddPage<ept id=\"p1\">](../../mfc/reference/cpropertysheet-class.md#cpropertysheet__addpage)</ept>.","source":"The page has been added to a property sheet using [CPropertySheet::AddPage](../../mfc/reference/cpropertysheet-class.md#cpropertysheet__addpage)."},{"pos":[10084,10289],"content":"The property sheet's <bpt id=\"p1\">[</bpt>DoModal<ept id=\"p1\">](../../mfc/reference/cpropertysheet-class.md#cpropertysheet__domodal)</ept> or <bpt id=\"p2\">[</bpt>Create<ept id=\"p2\">](../../mfc/reference/cpropertysheet-class.md#cpropertysheet__create)</ept> function has been called.","source":"The property sheet's [DoModal](../../mfc/reference/cpropertysheet-class.md#cpropertysheet__domodal) or [Create](../../mfc/reference/cpropertysheet-class.md#cpropertysheet__create) function has been called."},{"content":"The user has selected (tabbed to) this page.","pos":[10299,10343]},{"pos":[10350,10554],"content":"If you have multiple parameters (for example, if you are using an array), use <bpt id=\"p1\">[</bpt>CPropertySheet::Construct<ept id=\"p1\">](../../mfc/reference/cpropertysheet-class.md#cpropertysheet__construct)</ept> instead of <ph id=\"ph1\">`CPropertyPage`</ph>.","source":"If you have multiple parameters (for example, if you are using an array), use [CPropertySheet::Construct](../../mfc/reference/cpropertysheet-class.md#cpropertysheet__construct) instead of `CPropertyPage`."},{"pos":[10564,10571],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[10575,10659],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_MFCDocView#113<ept id=\"p2\">](../../mfc/codesnippet/cpp/cpropertypage-class_2.cpp)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_MFCDocView#113](../../mfc/codesnippet/cpp/cpropertypage-class_2.cpp)]"},{"pos":[10669,10728],"content":"<bpt id=\"p1\">&lt;a name=\"cpropertypage__getpsp\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CPropertyPage::GetPSP","linkify":"<a name=\"cpropertypage__getpsp\"></a>  CPropertyPage::GetPSP","source":"<a name=\"cpropertypage__getpsp\"></a>  CPropertyPage::GetPSP"},{"pos":[10732,10883],"content":"Retrieves the Windows <bpt id=\"p1\">[</bpt>PROPSHEETPAGE<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb774548)</ept> structure associated with the <ph id=\"ph1\">`CPropertyPage`</ph> object.","source":"Retrieves the Windows [PROPSHEETPAGE](http://msdn.microsoft.com/library/windows/desktop/bb774548) structure associated with the `CPropertyPage` object."},{"pos":[10975,10987],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[10991,11038],"content":"A reference to the <bpt id=\"p1\">**</bpt>PROPSHEETPAGE<ept id=\"p1\">**</ept> structure.","source":"A reference to the **PROPSHEETPAGE** structure."},{"pos":[11048,11105],"content":"<bpt id=\"p1\">&lt;a name=\"cpropertypage__m_psp\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CPropertyPage::m_psp","linkify":"<a name=\"cpropertypage__m_psp\"></a>  CPropertyPage::m_psp","source":"<a name=\"cpropertypage__m_psp\"></a>  CPropertyPage::m_psp"},{"pos":[11109,11251],"content":"<ph id=\"ph1\">`m_psp`</ph> is a structure whose members store the characteristics of <bpt id=\"p1\">[</bpt>PROPSHEETPAGE<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb774548)</ept>.","source":"`m_psp` is a structure whose members store the characteristics of [PROPSHEETPAGE](http://msdn.microsoft.com/library/windows/desktop/bb774548)."},{"pos":[11299,11306],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Use this structure to initialize the appearance of a property page after it is constructed.","pos":[11310,11401]},{"pos":[11408,11565],"content":"For more information on this structure, including a listing of its members, see <bpt id=\"p1\">**</bpt>PROPSHEETPAGE<ept id=\"p1\">**</ept> in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"For more information on this structure, including a listing of its members, see **PROPSHEETPAGE** in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"pos":[11575,11582],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[11586,11670],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_MFCDocView#128<ept id=\"p2\">](../../mfc/codesnippet/cpp/cpropertypage-class_3.cpp)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_MFCDocView#128](../../mfc/codesnippet/cpp/cpropertypage-class_3.cpp)]"},{"pos":[11680,11741],"content":"<bpt id=\"p1\">&lt;a name=\"cpropertypage__onapply\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CPropertyPage::OnApply","linkify":"<a name=\"cpropertypage__onapply\"></a>  CPropertyPage::OnApply","source":"<a name=\"cpropertypage__onapply\"></a>  CPropertyPage::OnApply"},{"content":"This member function is called by the framework when the user chooses the OK or the Apply Now button.","pos":[11745,11846]},{"pos":[11895,11907],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Nonzero if the changes are accepted; otherwise 0.","pos":[11911,11960]},{"pos":[11970,11977],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"When the framework calls this function, changes made on all property pages in the property sheet are accepted, the property sheet retains focus, and <ph id=\"ph1\">`OnApply`</ph> returns <bpt id=\"p1\">**</bpt>TRUE<ept id=\"p1\">**</ept> (the value 1).","pos":[11981,12171],"source":"When the framework calls this function, changes made on all property pages in the property sheet are accepted, the property sheet retains focus, and `OnApply` returns **TRUE** (the value 1)."},{"content":"Before <ph id=\"ph1\">`OnApply`</ph> can be called by the framework, you must have called <bpt id=\"p1\">[</bpt>SetModified<ept id=\"p1\">](#cpropertypage__setmodified)</ept> and set its parameter to <bpt id=\"p2\">**</bpt>TRUE<ept id=\"p2\">**</ept>.","pos":[12172,12319],"source":" Before `OnApply` can be called by the framework, you must have called [SetModified](#cpropertypage__setmodified) and set its parameter to **TRUE**."},{"content":"This will activate the Apply Now button as soon as the user makes a change on the property page.","pos":[12320,12416]},{"content":"Override this member function to specify what action your program takes when the user clicks the Apply Now button.","pos":[12423,12537]},{"content":"When overriding, the function should return <bpt id=\"p1\">**</bpt>TRUE<ept id=\"p1\">**</ept> to accept changes and <bpt id=\"p2\">**</bpt>FALSE<ept id=\"p2\">**</ept> to prevent changes from taking effect.","pos":[12538,12661],"source":" When overriding, the function should return **TRUE** to accept changes and **FALSE** to prevent changes from taking effect."},{"pos":[12668,12721],"content":"The default implementation of <ph id=\"ph1\">`OnApply`</ph> calls <ph id=\"ph2\">`OnOK`</ph>.","source":"The default implementation of `OnApply` calls `OnOK`."},{"pos":[12728,12987],"content":"For more information about notification messages sent when the user presses the Apply Now or OK button in a property sheet, see <bpt id=\"p1\">[</bpt>PSN_APPLY<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb774552)</ept> in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"For more information about notification messages sent when the user presses the Apply Now or OK button in a property sheet, see [PSN_APPLY](http://msdn.microsoft.com/library/windows/desktop/bb774552) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"pos":[12997,13004],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[13009,13073],"content":"See the example for <bpt id=\"p1\">[</bpt>CPropertyPage::OnOK<ept id=\"p1\">](#cpropertypage__onok)</ept>.","source":"See the example for [CPropertyPage::OnOK](#cpropertypage__onok)."},{"pos":[13083,13146],"content":"<bpt id=\"p1\">&lt;a name=\"cpropertypage__oncancel\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CPropertyPage::OnCancel","linkify":"<a name=\"cpropertypage__oncancel\"></a>  CPropertyPage::OnCancel","source":"<a name=\"cpropertypage__oncancel\"></a>  CPropertyPage::OnCancel"},{"content":"This member function is called by the framework when the Cancel button is selected.","pos":[13150,13233]},{"pos":[13283,13290],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Override this member function to perform Cancel button actions.","pos":[13294,13357]},{"content":"The default negates any changes that have been made.","pos":[13358,13410]},{"pos":[13420,13427],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[13431,13515],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_MFCDocView#114<ept id=\"p2\">](../../mfc/codesnippet/cpp/cpropertypage-class_4.cpp)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_MFCDocView#114](../../mfc/codesnippet/cpp/cpropertypage-class_4.cpp)]"},{"pos":[13525,13596],"content":"<bpt id=\"p1\">&lt;a name=\"cpropertypage__onkillactive\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CPropertyPage::OnKillActive","linkify":"<a name=\"cpropertypage__onkillactive\"></a>  CPropertyPage::OnKillActive","source":"<a name=\"cpropertypage__onkillactive\"></a>  CPropertyPage::OnKillActive"},{"content":"This member function is called by the framework when the page is no longer the active page.","pos":[13600,13691]},{"pos":[13745,13757],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Nonzero if data was updated successfully, otherwise 0.","pos":[13761,13815]},{"pos":[13825,13832],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Override this member function to perform special data validation tasks.","pos":[13836,13907]},{"content":"The default implementation of this member function copies settings from the controls in the property page to the member variables of the property page.","pos":[13914,14065]},{"content":"If the data was not updated successfully due to a dialog data validation (DDV) error, the page retains focus.","pos":[14066,14175]},{"pos":[14182,14304],"content":"After this member function returns successfully, the framework will call the page's <bpt id=\"p1\">[</bpt>OnOK<ept id=\"p1\">](#cpropertypage__onok)</ept> function.","source":"After this member function returns successfully, the framework will call the page's [OnOK](#cpropertypage__onok) function."},{"pos":[14314,14321],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[14325,14409],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_MFCDocView#115<ept id=\"p2\">](../../mfc/codesnippet/cpp/cpropertypage-class_5.cpp)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_MFCDocView#115](../../mfc/codesnippet/cpp/cpropertypage-class_5.cpp)]"},{"pos":[14419,14474],"content":"<bpt id=\"p1\">&lt;a name=\"cpropertypage__onok\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CPropertyPage::OnOK","linkify":"<a name=\"cpropertypage__onok\"></a>  CPropertyPage::OnOK","source":"<a name=\"cpropertypage__onok\"></a>  CPropertyPage::OnOK"},{"pos":[14478,14670],"content":"This member function is called by the framework when the user chooses either the OK or the Apply Now button, immediately after the framework calls <bpt id=\"p1\">[</bpt>OnKillActive<ept id=\"p1\">](#cpropertypage__onkillactive)</ept>.","source":"This member function is called by the framework when the user chooses either the OK or the Apply Now button, immediately after the framework calls [OnKillActive](#cpropertypage__onkillactive)."},{"pos":[14716,14723],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"When the user chooses either the OK or the Apply Now button, the framework receives the <bpt id=\"p1\">[</bpt>PSN_APPLY<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb774552)</ept> notification from the property page.","pos":[14727,14923],"source":"When the user chooses either the OK or the Apply Now button, the framework receives the [PSN_APPLY](http://msdn.microsoft.com/library/windows/desktop/bb774552) notification from the property page."},{"content":"The call to <ph id=\"ph1\">`OnOK`</ph> won't be made if you call <bpt id=\"p1\">[</bpt>CPropertySheet::PressButton<ept id=\"p1\">](../../mfc/reference/cpropertysheet-class.md#cpropertysheet__pressbutton)</ept> because the property page does not send the notification in that case.","pos":[14924,15142],"source":" The call to `OnOK` won't be made if you call [CPropertySheet::PressButton](../../mfc/reference/cpropertysheet-class.md#cpropertysheet__pressbutton) because the property page does not send the notification in that case."},{"content":"Override this member function to implement additional behavior specific to the currently active page when user dismisses the entire property sheet.","pos":[15149,15296]},{"pos":[15303,15448],"content":"The default implementation of this member function marks the page as \"clean\" to reflect that the data was updated in the <ph id=\"ph1\">`OnKillActive`</ph> function.","source":"The default implementation of this member function marks the page as \"clean\" to reflect that the data was updated in the `OnKillActive` function."},{"pos":[15458,15465],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[15469,15553],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_MFCDocView#116<ept id=\"p2\">](../../mfc/codesnippet/cpp/cpropertypage-class_6.cpp)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_MFCDocView#116](../../mfc/codesnippet/cpp/cpropertypage-class_6.cpp)]"},{"pos":[15563,15636],"content":"<bpt id=\"p1\">&lt;a name=\"cpropertypage__onquerycancel\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CPropertyPage::OnQueryCancel","linkify":"<a name=\"cpropertypage__onquerycancel\"></a>  CPropertyPage::OnQueryCancel","source":"<a name=\"cpropertypage__onquerycancel\"></a>  CPropertyPage::OnQueryCancel"},{"content":"This member function is called by the framework when the user clicks the Cancel button and before the cancel action has taken place.","pos":[15640,15772]},{"pos":[15827,15839],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[15843,15913],"content":"Returns <bpt id=\"p1\">**</bpt>FALSE<ept id=\"p1\">**</ept> to prevent the cancel operation or TRUE to allow it.","source":"Returns **FALSE** to prevent the cancel operation or TRUE to allow it."},{"pos":[15923,15930],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Override this member function to specify an action the program takes when the user clicks the Cancel button.","pos":[15934,16042]},{"pos":[16049,16112],"content":"The default implementation of <ph id=\"ph1\">`OnQueryCancel`</ph> returns <bpt id=\"p1\">**</bpt>TRUE<ept id=\"p1\">**</ept>.","source":"The default implementation of `OnQueryCancel` returns **TRUE**."},{"pos":[16122,16129],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[16133,16217],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_MFCDocView#117<ept id=\"p2\">](../../mfc/codesnippet/cpp/cpropertypage-class_7.cpp)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_MFCDocView#117](../../mfc/codesnippet/cpp/cpropertypage-class_7.cpp)]"},{"pos":[16227,16288],"content":"<bpt id=\"p1\">&lt;a name=\"cpropertypage__onreset\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CPropertyPage::OnReset","linkify":"<a name=\"cpropertypage__onreset\"></a>  CPropertyPage::OnReset","source":"<a name=\"cpropertypage__onreset\"></a>  CPropertyPage::OnReset"},{"content":"This member function is called by the framework when the user chooses the Cancel button.","pos":[16292,16380]},{"pos":[16429,16436],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"When the framework calls this function, changes to all property pages that were made by the user previously choosing the Apply Now button are discarded, and the property sheet retains focus.","pos":[16440,16630]},{"content":"Override this member function to specify what action the program takes when the user clicks the Cancel button.","pos":[16637,16747]},{"pos":[16754,16807],"content":"The default implementation of <ph id=\"ph1\">`OnReset`</ph> does nothing.","source":"The default implementation of `OnReset` does nothing."},{"pos":[16817,16824],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[16829,16901],"content":"See the example for <bpt id=\"p1\">[</bpt>CPropertyPage::OnCancel<ept id=\"p1\">](#cpropertypage__oncancel)</ept>.","source":"See the example for [CPropertyPage::OnCancel](#cpropertypage__oncancel)."},{"pos":[16911,16980],"content":"<bpt id=\"p1\">&lt;a name=\"cpropertypage__onsetactive\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CPropertyPage::OnSetActive","linkify":"<a name=\"cpropertypage__onsetactive\"></a>  CPropertyPage::OnSetActive","source":"<a name=\"cpropertypage__onsetactive\"></a>  CPropertyPage::OnSetActive"},{"content":"This member function is called by the framework when the page is chosen by the user and becomes the active page.","pos":[16984,17096]},{"pos":[17149,17161],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Nonzero if the page was successfully set active; otherwise 0.","pos":[17165,17226]},{"pos":[17236,17243],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Override this member function to perform tasks when a page is activated.","pos":[17247,17319]},{"content":"Your override of this member function would typically call the default version after updating data members, to allow it to update the page controls with the new data.","pos":[17320,17486]},{"content":"The default implementation creates the window for the page, if not previously created, and makes it the active page.","pos":[17493,17609]},{"pos":[17619,17626],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[17631,17758],"content":"See the example for <bpt id=\"p1\">[</bpt>CPropertySheet::SetFinishText<ept id=\"p1\">](../../mfc/reference/cpropertysheet-class.md#cpropertysheet__setfinishtext)</ept>.","source":"See the example for [CPropertySheet::SetFinishText](../../mfc/reference/cpropertysheet-class.md#cpropertysheet__setfinishtext)."},{"pos":[17768,17839],"content":"<bpt id=\"p1\">&lt;a name=\"cpropertypage__onwizardback\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CPropertyPage::OnWizardBack","linkify":"<a name=\"cpropertypage__onwizardback\"></a>  CPropertyPage::OnWizardBack","source":"<a name=\"cpropertypage__onwizardback\"></a>  CPropertyPage::OnWizardBack"},{"content":"This member function is called by the framework when the user clicks on the Back button in a wizard.","pos":[17843,17943]},{"pos":[18000,18012],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"0 to automatically advance to the next page; –1 to prevent the page from changing.","pos":[18016,18098]},{"content":"To jump to a page other than the next one, return the identifier of the dialog to be displayed.","pos":[18099,18194]},{"pos":[18204,18211],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Override this member function to specify some action the user must take when the Back button is pressed.","pos":[18215,18319]},{"pos":[18326,18503],"content":"For more information on how to make a wizard-type property sheet, see <bpt id=\"p1\">[</bpt>CPropertySheet::SetWizardMode<ept id=\"p1\">](../../mfc/reference/cpropertysheet-class.md#cpropertysheet__setwizardmode)</ept>.","source":"For more information on how to make a wizard-type property sheet, see [CPropertySheet::SetWizardMode](../../mfc/reference/cpropertysheet-class.md#cpropertysheet__setwizardmode)."},{"pos":[18513,18520],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[18524,18608],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_MFCDocView#118<ept id=\"p2\">](../../mfc/codesnippet/cpp/cpropertypage-class_8.cpp)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_MFCDocView#118](../../mfc/codesnippet/cpp/cpropertypage-class_8.cpp)]"},{"pos":[18618,18693],"content":"<bpt id=\"p1\">&lt;a name=\"cpropertypage__onwizardfinish\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CPropertyPage::OnWizardFinish","linkify":"<a name=\"cpropertypage__onwizardfinish\"></a>  CPropertyPage::OnWizardFinish","source":"<a name=\"cpropertypage__onwizardfinish\"></a>  CPropertyPage::OnWizardFinish"},{"content":"This member function is called by the framework when the user clicks on the Finish button in a wizard.","pos":[18697,18799]},{"pos":[18855,18867],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Nonzero if the property sheet is destroyed when the wizard finishes; otherwise zero.","pos":[18871,18955]},{"pos":[18965,18972],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"When a user clicks the <bpt id=\"p1\">**</bpt>Finish<ept id=\"p1\">**</ept> button in a wizard, the framework calls this function; when <ph id=\"ph1\">`OnWizardFinish`</ph> returns <bpt id=\"p2\">**</bpt>TRUE<ept id=\"p2\">**</ept> (a nonzero value), the property sheet is able to be destroyed (but is not actually destroyed).","pos":[18976,19198],"source":"When a user clicks the **Finish** button in a wizard, the framework calls this function; when `OnWizardFinish` returns **TRUE** (a nonzero value), the property sheet is able to be destroyed (but is not actually destroyed)."},{"content":"Call <ph id=\"ph1\">`DestroyWindow`</ph> to destroy the property sheet.","pos":[19199,19250],"source":" Call `DestroyWindow` to destroy the property sheet."},{"content":"Do not call <ph id=\"ph1\">`DestroyWindow`</ph> from <ph id=\"ph2\">`OnWizardFinish`</ph>; doing so will cause heap corruption or other errors.","pos":[19251,19354],"source":" Do not call `DestroyWindow` from `OnWizardFinish`; doing so will cause heap corruption or other errors."},{"content":"You can override this member function to specify some action the user must take when the Finish button is pressed.","pos":[19361,19475]},{"content":"When overriding this function, return <bpt id=\"p1\">**</bpt>FALSE<ept id=\"p1\">**</ept> to prevent the property sheet from being destroyed.","pos":[19476,19575],"source":" When overriding this function, return **FALSE** to prevent the property sheet from being destroyed."},{"pos":[19582,19843],"content":"For more information about notification messages sent when the user presses the Finish button in a wizard property sheet, see <bpt id=\"p1\">[</bpt>PSN_WIZFINISH<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb774571)</ept> in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"For more information about notification messages sent when the user presses the Finish button in a wizard property sheet, see [PSN_WIZFINISH](http://msdn.microsoft.com/library/windows/desktop/bb774571) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"pos":[19850,20027],"content":"For more information on how to make a wizard-type property sheet, see <bpt id=\"p1\">[</bpt>CPropertySheet::SetWizardMode<ept id=\"p1\">](../../mfc/reference/cpropertysheet-class.md#cpropertysheet__setwizardmode)</ept>.","source":"For more information on how to make a wizard-type property sheet, see [CPropertySheet::SetWizardMode](../../mfc/reference/cpropertysheet-class.md#cpropertysheet__setwizardmode)."},{"pos":[20037,20044],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[20048,20132],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_MFCDocView#119<ept id=\"p2\">](../../mfc/codesnippet/cpp/cpropertypage-class_9.cpp)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_MFCDocView#119](../../mfc/codesnippet/cpp/cpropertypage-class_9.cpp)]"},{"pos":[20139,20224],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_MFCDocView#120<ept id=\"p2\">](../../mfc/codesnippet/cpp/cpropertypage-class_10.cpp)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_MFCDocView#120](../../mfc/codesnippet/cpp/cpropertypage-class_10.cpp)]"},{"pos":[20231,20316],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_MFCDocView#121<ept id=\"p2\">](../../mfc/codesnippet/cpp/cpropertypage-class_11.cpp)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_MFCDocView#121](../../mfc/codesnippet/cpp/cpropertypage-class_11.cpp)]"},{"pos":[20323,20408],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_MFCDocView#122<ept id=\"p2\">](../../mfc/codesnippet/cpp/cpropertypage-class_12.cpp)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_MFCDocView#122](../../mfc/codesnippet/cpp/cpropertypage-class_12.cpp)]"},{"pos":[20418,20489],"content":"<bpt id=\"p1\">&lt;a name=\"cpropertypage__onwizardnext\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CPropertyPage::OnWizardNext","linkify":"<a name=\"cpropertypage__onwizardnext\"></a>  CPropertyPage::OnWizardNext","source":"<a name=\"cpropertypage__onwizardnext\"></a>  CPropertyPage::OnWizardNext"},{"content":"This member function is called by the framework when the user clicks on the Next button in a wizard.","pos":[20493,20593]},{"pos":[20650,20662],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"0 to automatically advance to the next page; –1 to prevent the page from changing.","pos":[20666,20748]},{"content":"To jump to a page other than the next one, return the identifier of the dialog to be displayed.","pos":[20749,20844]},{"pos":[20854,20861],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Override this member function to specify some action the user must take when the Next button is pressed.","pos":[20865,20969]},{"pos":[20976,21153],"content":"For more information on how to make a wizard-type property sheet, see <bpt id=\"p1\">[</bpt>CPropertySheet::SetWizardMode<ept id=\"p1\">](../../mfc/reference/cpropertysheet-class.md#cpropertysheet__setwizardmode)</ept>.","source":"For more information on how to make a wizard-type property sheet, see [CPropertySheet::SetWizardMode](../../mfc/reference/cpropertysheet-class.md#cpropertysheet__setwizardmode)."},{"pos":[21163,21170],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[21174,21259],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_MFCDocView#123<ept id=\"p2\">](../../mfc/codesnippet/cpp/cpropertypage-class_13.cpp)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_MFCDocView#123](../../mfc/codesnippet/cpp/cpropertypage-class_13.cpp)]"},{"pos":[21269,21342],"content":"<bpt id=\"p1\">&lt;a name=\"cpropertypage__querysiblings\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CPropertyPage::QuerySiblings","linkify":"<a name=\"cpropertypage__querysiblings\"></a>  CPropertyPage::QuerySiblings","source":"<a name=\"cpropertypage__querysiblings\"></a>  CPropertyPage::QuerySiblings"},{"content":"Call this member function to forward a message to each page in the property sheet.","pos":[21346,21428]},{"pos":[21517,21527],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Specifies additional message-dependent information.","pos":[21543,21594]},{"content":"Specifies additional message-dependent information","pos":[21613,21663]},{"pos":[21673,21685],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The nonzero value from a page in the property sheet, or 0 if all pages return a value of 0.","pos":[21689,21780]},{"pos":[21790,21797],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"If a page returns a nonzero value, the property sheet does not send the message to subsequent pages.","pos":[21801,21901]},{"pos":[21911,21918],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[21922,22007],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_MFCDocView#124<ept id=\"p2\">](../../mfc/codesnippet/cpp/cpropertypage-class_14.cpp)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_MFCDocView#124](../../mfc/codesnippet/cpp/cpropertypage-class_14.cpp)]"},{"pos":[22014,22099],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_MFCDocView#125<ept id=\"p2\">](../../mfc/codesnippet/cpp/cpropertypage-class_15.cpp)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_MFCDocView#125](../../mfc/codesnippet/cpp/cpropertypage-class_15.cpp)]"},{"pos":[22106,22191],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_MFCDocView#126<ept id=\"p2\">](../../mfc/codesnippet/cpp/cpropertypage-class_16.cpp)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_MFCDocView#126](../../mfc/codesnippet/cpp/cpropertypage-class_16.cpp)]"},{"pos":[22201,22270],"content":"<bpt id=\"p1\">&lt;a name=\"cpropertypage__setmodified\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CPropertyPage::SetModified","linkify":"<a name=\"cpropertypage__setmodified\"></a>  CPropertyPage::SetModified","source":"<a name=\"cpropertypage__setmodified\"></a>  CPropertyPage::SetModified"},{"content":"Call this member function to enable or disable the Apply Now button, based on whether the settings in the property page should be applied to the appropriate external object.","pos":[22274,22447]},{"pos":[22512,22522],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"<bpt id=\"p1\"> **</bpt>TRUE<ept id=\"p1\">**</ept> to indicate that the property page settings have been modified since the last time they were applied; <bpt id=\"p2\">**</bpt>FALSE<ept id=\"p2\">**</ept> to indicate that the property page settings have been applied, or should be ignored.","pos":[22539,22745],"source":" **TRUE** to indicate that the property page settings have been modified since the last time they were applied; **FALSE** to indicate that the property page settings have been applied, or should be ignored."},{"pos":[22755,22762],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The framework keeps track of which pages are \"dirty,\" that is, property pages for which you have called <bpt id=\"p1\">**</bpt>SetModified( TRUE )<ept id=\"p1\">**</ept>.","pos":[22766,22894],"source":"The framework keeps track of which pages are \"dirty,\" that is, property pages for which you have called **SetModified( TRUE )**."},{"content":"The Apply Now button will always be enabled if you call <bpt id=\"p1\">**</bpt>SetModified( TRUE )<ept id=\"p1\">**</ept> for one of the pages.","pos":[22895,22996],"source":" The Apply Now button will always be enabled if you call **SetModified( TRUE )** for one of the pages."},{"content":"The Apply Now button will be disabled when you call <bpt id=\"p1\">**</bpt>SetModified( FALSE )<ept id=\"p1\">**</ept> for one of the pages, but only if none of the other pages is \"dirty.\"","pos":[22997,23143],"source":" The Apply Now button will be disabled when you call **SetModified( FALSE )** for one of the pages, but only if none of the other pages is \"dirty.\""},{"pos":[23153,23160],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[23164,23249],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_MFCDocView#127<ept id=\"p2\">](../../mfc/codesnippet/cpp/cpropertypage-class_17.cpp)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_MFCDocView#127](../../mfc/codesnippet/cpp/cpropertypage-class_17.cpp)]"},{"pos":[23258,23266],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>MFC Sample CMNCTRL1<ept id=\"p1\">](../../visual-cpp-samples.md)</ept><ph id=\"ph1\"> </ph>","pos":[23270,23321],"source":"[MFC Sample CMNCTRL1](../../visual-cpp-samples.md) "},{"content":"<bpt id=\"p1\"> [</bpt>MFC Sample CMNCTRL2<ept id=\"p1\">](../../visual-cpp-samples.md)</ept><ph id=\"ph1\"> </ph>","pos":[23324,23376],"source":" [MFC Sample CMNCTRL2](../../visual-cpp-samples.md) "},{"content":"<bpt id=\"p1\"> [</bpt>MFC Sample PROPDLG<ept id=\"p1\">](../../visual-cpp-samples.md)</ept><ph id=\"ph1\"> </ph>","pos":[23379,23430],"source":" [MFC Sample PROPDLG](../../visual-cpp-samples.md) "},{"content":"<bpt id=\"p1\"> [</bpt>MFC Sample SNAPVW<ept id=\"p1\">](../../visual-cpp-samples.md)</ept><ph id=\"ph1\"> </ph>","pos":[23433,23483],"source":" [MFC Sample SNAPVW](../../visual-cpp-samples.md) "},{"content":"<bpt id=\"p1\"> [</bpt>CDialog Class<ept id=\"p1\">](../../mfc/reference/cdialog-class.md)</ept><ph id=\"ph1\"> </ph>","pos":[23486,23541],"source":" [CDialog Class](../../mfc/reference/cdialog-class.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Hierarchy Chart<ept id=\"p1\">](../../mfc/hierarchy-chart.md)</ept><ph id=\"ph1\"> </ph>","pos":[23544,23593],"source":" [Hierarchy Chart](../../mfc/hierarchy-chart.md) "},{"content":"<bpt id=\"p1\"> [</bpt>CPropertySheet Class<ept id=\"p1\">](../../mfc/reference/cpropertysheet-class.md)</ept><ph id=\"ph1\"> </ph>","pos":[23596,23665],"source":" [CPropertySheet Class](../../mfc/reference/cpropertysheet-class.md) "},{"content":"<bpt id=\"p1\"> [</bpt>CDialog Class<ept id=\"p1\">](../../mfc/reference/cdialog-class.md)</ept>","pos":[23668,23722],"source":" [CDialog Class](../../mfc/reference/cdialog-class.md)"}],"content":"---\ntitle: \"CPropertyPage Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"CPropertyPage\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"property pages, CPropertyPage class\"\n  - \"dialog boxes, tabs\"\n  - \"CPropertyPage class\"\n  - \"tab dialog boxes\"\nms.assetid: d9000a21-aa81-4530-85d9-f43432afb4dc\ncaps.latest.revision: 25\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# CPropertyPage Class\nRepresents individual pages of a property sheet, otherwise known as a tab dialog box.  \n  \n## Syntax  \n  \n```  \nclass CPropertyPage : public CDialog  \n```  \n  \n## Members  \n  \n### Public Constructors  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CPropertyPage::CPropertyPage](#cpropertypage__cpropertypage)|Constructs a `CPropertyPage` object.|  \n  \n### Public Methods  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CPropertyPage::CancelToClose](#cpropertypage__canceltoclose)|Changes the OK button to read Close, and disables the Cancel button, after an unrecoverable change in the page of a modal property sheet.|  \n|[CPropertyPage::Construct](#cpropertypage__construct)|Constructs a `CPropertyPage` object. Use `Construct` if you want to specify your parameters at run time, or if you are using arrays.|  \n|[CPropertyPage::GetPSP](#cpropertypage__getpsp)|Retrieves the Windows [PROPSHEETPAGE](http://msdn.microsoft.com/library/windows/desktop/bb774548) structure associated with the `CPropertyPage` object.|  \n|[CPropertyPage::OnApply](#cpropertypage__onapply)|Called by the framework when the Apply Now button is clicked.|  \n|[CPropertyPage::OnCancel](#cpropertypage__oncancel)|Called by the framework when the Cancel button is clicked.|  \n|[CPropertyPage::OnKillActive](#cpropertypage__onkillactive)|Called by the framework when the current page is no longer the active page. Perform data validation here.|  \n|[CPropertyPage::OnOK](#cpropertypage__onok)|Called by the framework when the OK, Apply Now, or Close button is clicked.|  \n|[CPropertyPage::OnQueryCancel](#cpropertypage__onquerycancel)|Called by the framework when the Cancel button is clicked, and before the cancel has taken place.|  \n|[CPropertyPage::OnReset](#cpropertypage__onreset)|Called by the framework when the Cancel button is clicked.|  \n|[CPropertyPage::OnSetActive](#cpropertypage__onsetactive)|Called by the framework when the page is made the active page.|  \n|[CPropertyPage::OnWizardBack](#cpropertypage__onwizardback)|Called by the framework when the Back button is clicked while using a wizard-type property sheet.|  \n|[CPropertyPage::OnWizardFinish](#cpropertypage__onwizardfinish)|Called by the framework when the Finish button is clicked while using a wizard-type property sheet.|  \n|[CPropertyPage::OnWizardNext](#cpropertypage__onwizardnext)|Called by the framework when the Next button is clicked while using a wizard-type property sheet.|  \n|[CPropertyPage::QuerySiblings](#cpropertypage__querysiblings)|Forwards the message to each page of the property sheet.|  \n|[CPropertyPage::SetModified](#cpropertypage__setmodified)|Call to activate or deactivate the Apply Now button.|  \n  \n### Public Data Members  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CPropertyPage::m_psp](#cpropertypage__m_psp)|The Windows [PROPSHEETPAGE](http://msdn.microsoft.com/library/windows/desktop/bb774548) structure. Provides access to basic property page parameters.|  \n  \n## Remarks  \n As with standard dialog boxes, you derive a class from `CPropertyPage` for each page in your property sheet. To use `CPropertyPage`-derived objects, first create a [CPropertySheet](../../mfc/reference/cpropertysheet-class.md) object, and then create an object for each page that goes in the property sheet. Call [CPropertySheet::AddPage](../../mfc/reference/cpropertysheet-class.md#cpropertysheet__addpage) for each page in the sheet, and then display the property sheet by calling [CPropertySheet::DoModal](../../mfc/reference/cpropertysheet-class.md#cpropertysheet__domodal) for a modal property sheet, or [CPropertySheet::Create](../../mfc/reference/cpropertysheet-class.md#cpropertysheet__create) for a modeless property sheet.  \n  \n You can create a type of tab dialog box called a wizard, which consists of a property sheet with a sequence of property pages that guide the user through the steps of an operation, such as setting up a device or creating a newsletter. In a wizard-type tab dialog box, the property pages do not have tabs, and only one property page is visible at a time. Also, instead of having OK and Apply Now buttons, a wizard-type tab dialog box has a Back button, a Next or Finish button, and a Cancel button.  \n  \n For more information on establishing a property sheet as a wizard, see [CPropertySheet::SetWizardMode](../../mfc/reference/cpropertysheet-class.md#cpropertysheet__setwizardmode). For more information on using `CPropertyPage` objects, see the article [Property Sheets and Property Pages](../../mfc/property-sheets-and-property-pages-in-mfc.md).  \n  \n## Inheritance Hierarchy  \n [CObject](../../mfc/reference/cobject-class.md)  \n  \n [CCmdTarget](../../mfc/reference/ccmdtarget-class.md)  \n  \n [CWnd](../../mfc/reference/cwnd-class.md)  \n  \n [CDialog](../../mfc/reference/cdialog-class.md)  \n  \n `CPropertyPage`  \n  \n## Requirements  \n **Header:** afxdlgs.h  \n  \n##  <a name=\"cpropertypage__canceltoclose\"></a>  CPropertyPage::CancelToClose  \n Call this function after an unrecoverable change has been made to the data in a page of a modal property sheet.  \n  \n```  \nvoid CancelToClose();\n```  \n  \n### Remarks  \n This function will change the OK button to Close and disable the Cancel button. This change alerts the user that a change is permanent and the modifications cannot be cancelled.  \n  \n The `CancelToClose` member function does nothing in a modeless property sheet, because a modeless property sheet does not have a Cancel button by default.  \n  \n### Example  \n  See the example for [CPropertyPage::QuerySiblings](#cpropertypage__querysiblings).  \n  \n##  <a name=\"cpropertypage__construct\"></a>  CPropertyPage::Construct  \n Call this member function to construct a `CPropertyPage` object.  \n  \n```  \nvoid Construct(\n    UINT nIDTemplate,  \n    UINT nIDCaption = 0);\n\n \nvoid Construct(\n    LPCTSTR lpszTemplateName,  \n    UINT nIDCaption = 0);\n\n \nvoid Construct(\n    UINT nIDTemplate,  \n    UINT nIDCaption,  \n    UINT nIDHeaderTitle,  \n    UINT nIDHeaderSubTitle = 0);\n\n \nvoid Construct(\n    LPCTSTR lpszTemplateName,  \n    UINT nIDCaption,  \n    UINT nIDHeaderTitle,  \n    UINT nIDHeaderSubTitle = 0);\n```  \n  \n### Parameters  \n `nIDTemplate`  \n ID of the template used for this page.  \n  \n `nIDCaption`  \n ID of the name to be placed in the tab for this page. If 0, the name will be taken from the dialog template for this page.  \n  \n `lpszTemplateName`  \n Contains a null-terminated string that is the name of a template resource.  \n  \n `nIDHeaderTitle`  \n ID of the name to be placed in the title location of the property page header. By default, 0.  \n  \n `nIDHeaderSubTitle`  \n ID of the name to be placed in the subtitle location of the property page header. By default, 0.  \n  \n### Remarks  \n The object is displayed after all of the following conditions are met:  \n  \n-   The page has been added to a property sheet using [CPropertySheet::AddPage](../../mfc/reference/cpropertysheet-class.md#cpropertysheet__addpage).  \n  \n-   The property sheet's [DoModal](../../mfc/reference/cpropertysheet-class.md#cpropertysheet__domodal) or [Create](../../mfc/reference/cpropertysheet-class.md#cpropertysheet__create) function has been called.  \n  \n-   The user has selected (tabbed to) this page.  \n  \n Call **Construct** if one of the other class constructors has not been called. The `Construct` member function is flexible because you can leave the parameter statement blank and then specify multiple parameters and construction at any point in your code.  \n  \n You must use `Construct` when you work with arrays, and you must call **Construct** for each member of the array so that the data members are assigned proper values.  \n  \n### Example  \n [!code-cpp[NVC_MFCDocView#112](../../mfc/codesnippet/cpp/cpropertypage-class_1.cpp)]  \n  \n##  <a name=\"cpropertypage__cpropertypage\"></a>  CPropertyPage::CPropertyPage  \n Constructs a `CPropertyPage` object.  \n  \n```  \nCPropertyPage();\n\n \nexplicit CPropertyPage(\n    UINT nIDTemplate,  \n    UINT nIDCaption = 0,  \n    DWORD dwSize = sizeof(PROPSHEETPAGE));\n\n \nexplicit CPropertyPage(\n    LPCTSTR lpszTemplateName,  \n    UINT nIDCaption = 0,  \n    DWORD dwSize = sizeof(PROPSHEETPAGE));\n\n \nCPropertyPage(\n    UINT nIDTemplate,  \n    UINT nIDCaption,  \n    UINT nIDHeaderTitle,  \n    UINT nIDHeaderSubTitle = 0,  \n    DWORD dwSize = sizeof(PROPSHEETPAGE));\n\n \nCPropertyPage(\n    LPCTSTR lpszTemplateName,  \n    UINT nIDCaption,  \n    UINT nIDHeaderTitle,  \n    UINT nIDHeaderSubTitle = 0,  \n    DWORD dwSize = sizeof(PROPSHEETPAGE));\n```  \n  \n### Parameters  \n `nIDTemplate`  \n ID of the template used for this page.  \n  \n `nIDCaption`  \n ID of the name to be placed in the tab for this page. If 0, the name will be taken from the dialog template for this page.  \n  \n `dwSize`  \n `lpszTemplateName`  \n Points to a string containing the name of the template for this page. Cannot be **NULL**.  \n  \n `nIDHeaderTitle`  \n ID of the name to be placed in the title location of the property page header.  \n  \n `nIDHeaderSubTitle`  \n ID of the name to be placed in the subtitle location of the property page header.  \n  \n### Remarks  \n The object is displayed after all of the following conditions are met:  \n  \n-   The page has been added to a property sheet using [CPropertySheet::AddPage](../../mfc/reference/cpropertysheet-class.md#cpropertysheet__addpage).  \n  \n-   The property sheet's [DoModal](../../mfc/reference/cpropertysheet-class.md#cpropertysheet__domodal) or [Create](../../mfc/reference/cpropertysheet-class.md#cpropertysheet__create) function has been called.  \n  \n-   The user has selected (tabbed to) this page.  \n  \n If you have multiple parameters (for example, if you are using an array), use [CPropertySheet::Construct](../../mfc/reference/cpropertysheet-class.md#cpropertysheet__construct) instead of `CPropertyPage`.  \n  \n### Example  \n [!code-cpp[NVC_MFCDocView#113](../../mfc/codesnippet/cpp/cpropertypage-class_2.cpp)]  \n  \n##  <a name=\"cpropertypage__getpsp\"></a>  CPropertyPage::GetPSP  \n Retrieves the Windows [PROPSHEETPAGE](http://msdn.microsoft.com/library/windows/desktop/bb774548) structure associated with the `CPropertyPage` object.  \n  \n```  \nconst PROPSHEETPAGE& GetPSP() const;\n\n \n \nPROPSHEETPAGE& GetPSP();\n```  \n  \n### Return Value  \n A reference to the **PROPSHEETPAGE** structure.  \n  \n##  <a name=\"cpropertypage__m_psp\"></a>  CPropertyPage::m_psp  \n `m_psp` is a structure whose members store the characteristics of [PROPSHEETPAGE](http://msdn.microsoft.com/library/windows/desktop/bb774548).  \n  \n```  \nPROPSHEETPAGE m_psp;  \n```  \n  \n### Remarks  \n Use this structure to initialize the appearance of a property page after it is constructed.  \n  \n For more information on this structure, including a listing of its members, see **PROPSHEETPAGE** in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n### Example  \n [!code-cpp[NVC_MFCDocView#128](../../mfc/codesnippet/cpp/cpropertypage-class_3.cpp)]  \n  \n##  <a name=\"cpropertypage__onapply\"></a>  CPropertyPage::OnApply  \n This member function is called by the framework when the user chooses the OK or the Apply Now button.  \n  \n```  \nvirtual BOOL OnApply();\n```  \n  \n### Return Value  \n Nonzero if the changes are accepted; otherwise 0.  \n  \n### Remarks  \n When the framework calls this function, changes made on all property pages in the property sheet are accepted, the property sheet retains focus, and `OnApply` returns **TRUE** (the value 1). Before `OnApply` can be called by the framework, you must have called [SetModified](#cpropertypage__setmodified) and set its parameter to **TRUE**. This will activate the Apply Now button as soon as the user makes a change on the property page.  \n  \n Override this member function to specify what action your program takes when the user clicks the Apply Now button. When overriding, the function should return **TRUE** to accept changes and **FALSE** to prevent changes from taking effect.  \n  \n The default implementation of `OnApply` calls `OnOK`.  \n  \n For more information about notification messages sent when the user presses the Apply Now or OK button in a property sheet, see [PSN_APPLY](http://msdn.microsoft.com/library/windows/desktop/bb774552) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n### Example  \n  See the example for [CPropertyPage::OnOK](#cpropertypage__onok).  \n  \n##  <a name=\"cpropertypage__oncancel\"></a>  CPropertyPage::OnCancel  \n This member function is called by the framework when the Cancel button is selected.  \n  \n```  \nvirtual void OnCancel();\n```  \n  \n### Remarks  \n Override this member function to perform Cancel button actions. The default negates any changes that have been made.  \n  \n### Example  \n [!code-cpp[NVC_MFCDocView#114](../../mfc/codesnippet/cpp/cpropertypage-class_4.cpp)]  \n  \n##  <a name=\"cpropertypage__onkillactive\"></a>  CPropertyPage::OnKillActive  \n This member function is called by the framework when the page is no longer the active page.  \n  \n```  \nvirtual BOOL OnKillActive();\n```  \n  \n### Return Value  \n Nonzero if data was updated successfully, otherwise 0.  \n  \n### Remarks  \n Override this member function to perform special data validation tasks.  \n  \n The default implementation of this member function copies settings from the controls in the property page to the member variables of the property page. If the data was not updated successfully due to a dialog data validation (DDV) error, the page retains focus.  \n  \n After this member function returns successfully, the framework will call the page's [OnOK](#cpropertypage__onok) function.  \n  \n### Example  \n [!code-cpp[NVC_MFCDocView#115](../../mfc/codesnippet/cpp/cpropertypage-class_5.cpp)]  \n  \n##  <a name=\"cpropertypage__onok\"></a>  CPropertyPage::OnOK  \n This member function is called by the framework when the user chooses either the OK or the Apply Now button, immediately after the framework calls [OnKillActive](#cpropertypage__onkillactive).  \n  \n```  \nvirtual void OnOK();\n```  \n  \n### Remarks  \n When the user chooses either the OK or the Apply Now button, the framework receives the [PSN_APPLY](http://msdn.microsoft.com/library/windows/desktop/bb774552) notification from the property page. The call to `OnOK` won't be made if you call [CPropertySheet::PressButton](../../mfc/reference/cpropertysheet-class.md#cpropertysheet__pressbutton) because the property page does not send the notification in that case.  \n  \n Override this member function to implement additional behavior specific to the currently active page when user dismisses the entire property sheet.  \n  \n The default implementation of this member function marks the page as \"clean\" to reflect that the data was updated in the `OnKillActive` function.  \n  \n### Example  \n [!code-cpp[NVC_MFCDocView#116](../../mfc/codesnippet/cpp/cpropertypage-class_6.cpp)]  \n  \n##  <a name=\"cpropertypage__onquerycancel\"></a>  CPropertyPage::OnQueryCancel  \n This member function is called by the framework when the user clicks the Cancel button and before the cancel action has taken place.  \n  \n```  \nvirtual BOOL OnQueryCancel();\n```  \n  \n### Return Value  \n Returns **FALSE** to prevent the cancel operation or TRUE to allow it.  \n  \n### Remarks  \n Override this member function to specify an action the program takes when the user clicks the Cancel button.  \n  \n The default implementation of `OnQueryCancel` returns **TRUE**.  \n  \n### Example  \n [!code-cpp[NVC_MFCDocView#117](../../mfc/codesnippet/cpp/cpropertypage-class_7.cpp)]  \n  \n##  <a name=\"cpropertypage__onreset\"></a>  CPropertyPage::OnReset  \n This member function is called by the framework when the user chooses the Cancel button.  \n  \n```  \nvirtual void OnReset();\n```  \n  \n### Remarks  \n When the framework calls this function, changes to all property pages that were made by the user previously choosing the Apply Now button are discarded, and the property sheet retains focus.  \n  \n Override this member function to specify what action the program takes when the user clicks the Cancel button.  \n  \n The default implementation of `OnReset` does nothing.  \n  \n### Example  \n  See the example for [CPropertyPage::OnCancel](#cpropertypage__oncancel).  \n  \n##  <a name=\"cpropertypage__onsetactive\"></a>  CPropertyPage::OnSetActive  \n This member function is called by the framework when the page is chosen by the user and becomes the active page.  \n  \n```  \nvirtual BOOL OnSetActive();\n```  \n  \n### Return Value  \n Nonzero if the page was successfully set active; otherwise 0.  \n  \n### Remarks  \n Override this member function to perform tasks when a page is activated. Your override of this member function would typically call the default version after updating data members, to allow it to update the page controls with the new data.  \n  \n The default implementation creates the window for the page, if not previously created, and makes it the active page.  \n  \n### Example  \n  See the example for [CPropertySheet::SetFinishText](../../mfc/reference/cpropertysheet-class.md#cpropertysheet__setfinishtext).  \n  \n##  <a name=\"cpropertypage__onwizardback\"></a>  CPropertyPage::OnWizardBack  \n This member function is called by the framework when the user clicks on the Back button in a wizard.  \n  \n```  \nvirtual LRESULT OnWizardBack();\n```  \n  \n### Return Value  \n 0 to automatically advance to the next page; –1 to prevent the page from changing. To jump to a page other than the next one, return the identifier of the dialog to be displayed.  \n  \n### Remarks  \n Override this member function to specify some action the user must take when the Back button is pressed.  \n  \n For more information on how to make a wizard-type property sheet, see [CPropertySheet::SetWizardMode](../../mfc/reference/cpropertysheet-class.md#cpropertysheet__setwizardmode).  \n  \n### Example  \n [!code-cpp[NVC_MFCDocView#118](../../mfc/codesnippet/cpp/cpropertypage-class_8.cpp)]  \n  \n##  <a name=\"cpropertypage__onwizardfinish\"></a>  CPropertyPage::OnWizardFinish  \n This member function is called by the framework when the user clicks on the Finish button in a wizard.  \n  \n```  \nvirtual BOOL OnWizardFinish();\n```  \n  \n### Return Value  \n Nonzero if the property sheet is destroyed when the wizard finishes; otherwise zero.  \n  \n### Remarks  \n When a user clicks the **Finish** button in a wizard, the framework calls this function; when `OnWizardFinish` returns **TRUE** (a nonzero value), the property sheet is able to be destroyed (but is not actually destroyed). Call `DestroyWindow` to destroy the property sheet. Do not call `DestroyWindow` from `OnWizardFinish`; doing so will cause heap corruption or other errors.  \n  \n You can override this member function to specify some action the user must take when the Finish button is pressed. When overriding this function, return **FALSE** to prevent the property sheet from being destroyed.  \n  \n For more information about notification messages sent when the user presses the Finish button in a wizard property sheet, see [PSN_WIZFINISH](http://msdn.microsoft.com/library/windows/desktop/bb774571) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n For more information on how to make a wizard-type property sheet, see [CPropertySheet::SetWizardMode](../../mfc/reference/cpropertysheet-class.md#cpropertysheet__setwizardmode).  \n  \n### Example  \n [!code-cpp[NVC_MFCDocView#119](../../mfc/codesnippet/cpp/cpropertypage-class_9.cpp)]  \n  \n [!code-cpp[NVC_MFCDocView#120](../../mfc/codesnippet/cpp/cpropertypage-class_10.cpp)]  \n  \n [!code-cpp[NVC_MFCDocView#121](../../mfc/codesnippet/cpp/cpropertypage-class_11.cpp)]  \n  \n [!code-cpp[NVC_MFCDocView#122](../../mfc/codesnippet/cpp/cpropertypage-class_12.cpp)]  \n  \n##  <a name=\"cpropertypage__onwizardnext\"></a>  CPropertyPage::OnWizardNext  \n This member function is called by the framework when the user clicks on the Next button in a wizard.  \n  \n```  \nvirtual LRESULT OnWizardNext();\n```  \n  \n### Return Value  \n 0 to automatically advance to the next page; –1 to prevent the page from changing. To jump to a page other than the next one, return the identifier of the dialog to be displayed.  \n  \n### Remarks  \n Override this member function to specify some action the user must take when the Next button is pressed.  \n  \n For more information on how to make a wizard-type property sheet, see [CPropertySheet::SetWizardMode](../../mfc/reference/cpropertysheet-class.md#cpropertysheet__setwizardmode).  \n  \n### Example  \n [!code-cpp[NVC_MFCDocView#123](../../mfc/codesnippet/cpp/cpropertypage-class_13.cpp)]  \n  \n##  <a name=\"cpropertypage__querysiblings\"></a>  CPropertyPage::QuerySiblings  \n Call this member function to forward a message to each page in the property sheet.  \n  \n```  \nLRESULT QuerySiblings(\n    WPARAM wParam,  \n    LPARAM lParam);\n```  \n  \n### Parameters  \n `wParam`  \n Specifies additional message-dependent information.  \n  \n `lParam`  \n Specifies additional message-dependent information  \n  \n### Return Value  \n The nonzero value from a page in the property sheet, or 0 if all pages return a value of 0.  \n  \n### Remarks  \n If a page returns a nonzero value, the property sheet does not send the message to subsequent pages.  \n  \n### Example  \n [!code-cpp[NVC_MFCDocView#124](../../mfc/codesnippet/cpp/cpropertypage-class_14.cpp)]  \n  \n [!code-cpp[NVC_MFCDocView#125](../../mfc/codesnippet/cpp/cpropertypage-class_15.cpp)]  \n  \n [!code-cpp[NVC_MFCDocView#126](../../mfc/codesnippet/cpp/cpropertypage-class_16.cpp)]  \n  \n##  <a name=\"cpropertypage__setmodified\"></a>  CPropertyPage::SetModified  \n Call this member function to enable or disable the Apply Now button, based on whether the settings in the property page should be applied to the appropriate external object.  \n  \n```  \nvoid SetModified(BOOL bChanged = TRUE);\n```  \n  \n### Parameters  \n `bChanged`  \n **TRUE** to indicate that the property page settings have been modified since the last time they were applied; **FALSE** to indicate that the property page settings have been applied, or should be ignored.  \n  \n### Remarks  \n The framework keeps track of which pages are \"dirty,\" that is, property pages for which you have called **SetModified( TRUE )**. The Apply Now button will always be enabled if you call **SetModified( TRUE )** for one of the pages. The Apply Now button will be disabled when you call **SetModified( FALSE )** for one of the pages, but only if none of the other pages is \"dirty.\"  \n  \n### Example  \n [!code-cpp[NVC_MFCDocView#127](../../mfc/codesnippet/cpp/cpropertypage-class_17.cpp)]  \n  \n## See Also  \n [MFC Sample CMNCTRL1](../../visual-cpp-samples.md)   \n [MFC Sample CMNCTRL2](../../visual-cpp-samples.md)   \n [MFC Sample PROPDLG](../../visual-cpp-samples.md)   \n [MFC Sample SNAPVW](../../visual-cpp-samples.md)   \n [CDialog Class](../../mfc/reference/cdialog-class.md)   \n [Hierarchy Chart](../../mfc/hierarchy-chart.md)   \n [CPropertySheet Class](../../mfc/reference/cpropertysheet-class.md)   \n [CDialog Class](../../mfc/reference/cdialog-class.md)\n"}