{"nodes":[{"pos":[12,61],"content":"Compiler Warning (level 4) C4366 | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Compiler Warning (level 4) C4366 | Microsoft Docs","pos":[0,49]}]},{"content":"Compiler Warning (level 4) C4366","pos":[610,642]},{"content":"The result of the unary 'operator' operator may be unaligned","pos":[643,703]},{"content":"If a structure member could ever be unaligned because of packing, the compiler will warn when that member's address is assigned to an aligned pointer.","pos":[710,860]},{"content":"By default, all pointers are aligned.","pos":[861,898]},{"pos":[905,1046],"content":"To resolve C4366, either change the alignment of the structure or declare the pointer with the <bpt id=\"p1\">[</bpt>__unaligned<ept id=\"p1\">](../../cpp/unaligned.md)</ept> keyword.","source":"To resolve C4366, either change the alignment of the structure or declare the pointer with the [__unaligned](../../cpp/unaligned.md) keyword."},{"pos":[1053,1130],"content":"For more information, see __unaligned and <bpt id=\"p1\">[</bpt>pack<ept id=\"p1\">](../../preprocessor/pack.md)</ept>.","source":"For more information, see __unaligned and [pack](../../preprocessor/pack.md)."},{"content":"Example","pos":[1139,1146]},{"content":"The following sample generates C4366.","pos":[1150,1187]}],"content":"---\ntitle: \"Compiler Warning (level 4) C4366 | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"error-reference\"\nf1_keywords: \n  - \"C4366\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"C4366\"\nms.assetid: 65d2942f-3741-42f4-adf2-4920d5a055ca\ncaps.latest.revision: 14\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Compiler Warning (level 4) C4366\nThe result of the unary 'operator' operator may be unaligned  \n  \n If a structure member could ever be unaligned because of packing, the compiler will warn when that member's address is assigned to an aligned pointer. By default, all pointers are aligned.  \n  \n To resolve C4366, either change the alignment of the structure or declare the pointer with the [__unaligned](../../cpp/unaligned.md) keyword.  \n  \n For more information, see __unaligned and [pack](../../preprocessor/pack.md).  \n  \n## Example  \n The following sample generates C4366.  \n  \n```  \n// C4366.cpp  \n// compile with: /W4 /c  \n// processor: IPF x64  \n#pragma pack(1)  \nstruct X {  \n   short s1;  \n   int s2;  \n};  \n  \nint main() {  \n   X x;  \n   short * ps1 = &x.s1;   // OK  \n   int * ps2 = &x.s2;   // C4366  \n}  \n```"}