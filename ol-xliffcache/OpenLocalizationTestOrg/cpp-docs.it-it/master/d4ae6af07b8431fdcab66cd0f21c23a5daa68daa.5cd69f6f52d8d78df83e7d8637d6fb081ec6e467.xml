{"nodes":[{"pos":[12,56],"content":"CMFCRibbonProgressBar Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"CMFCRibbonProgressBar Class | Microsoft Docs","pos":[0,44]}]},{"pos":[637,664],"content":"CMFCRibbonProgressBar Class","linkify":"CMFCRibbonProgressBar Class","nodes":[{"content":"CMFCRibbonProgressBar Class","pos":[0,27]}]},{"content":"Implements a control that visually indicates the progress of a lengthy operation.","pos":[665,746]},{"pos":[755,761],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[846,853],"content":"Members","linkify":"Members","nodes":[{"content":"Members","pos":[0,7]}]},{"pos":[863,882],"content":"Public Constructors","linkify":"Public Constructors","nodes":[{"content":"Public Constructors","pos":[0,19]}]},{"content":"Name","pos":[889,893]},{"content":"Description","pos":[894,905]},{"pos":[943,1036],"content":"<bpt id=\"p1\">[</bpt>CMFCRibbonProgressBar::CMFCRibbonProgressBar<ept id=\"p1\">](#cmfcribbonprogressbar__cmfcribbonprogressbar)</ept>","source":"[CMFCRibbonProgressBar::CMFCRibbonProgressBar](#cmfcribbonprogressbar__cmfcribbonprogressbar)"},{"pos":[1037,1097],"content":"Constructs and initializes a <ph id=\"ph1\">`CMFCRibbonProgressBar`</ph> object.","source":"Constructs and initializes a `CMFCRibbonProgressBar` object."},{"pos":[1108,1122],"content":"Public Methods","linkify":"Public Methods","nodes":[{"content":"Public Methods","pos":[0,14]}]},{"content":"Name","pos":[1129,1133]},{"content":"Description","pos":[1134,1145]},{"pos":[1183,1246],"content":"<bpt id=\"p1\">[</bpt>CMFCRibbonProgressBar::GetPos<ept id=\"p1\">](#cmfcribbonprogressbar__getpos)</ept>","source":"[CMFCRibbonProgressBar::GetPos](#cmfcribbonprogressbar__getpos)"},{"content":"Returns the current progress.","pos":[1247,1276]},{"pos":[1281,1354],"content":"<bpt id=\"p1\">[</bpt>CMFCRibbonProgressBar::GetRangeMax<ept id=\"p1\">](#cmfcribbonprogressbar__getrangemax)</ept>","source":"[CMFCRibbonProgressBar::GetRangeMax](#cmfcribbonprogressbar__getrangemax)"},{"content":"Returns the maximum value of the current range.","pos":[1355,1402]},{"pos":[1407,1480],"content":"<bpt id=\"p1\">[</bpt>CMFCRibbonProgressBar::GetRangeMin<ept id=\"p1\">](#cmfcribbonprogressbar__getrangemin)</ept>","source":"[CMFCRibbonProgressBar::GetRangeMin](#cmfcribbonprogressbar__getrangemin)"},{"content":"Returns the minimum value of the current range.","pos":[1481,1528]},{"pos":[1533,1612],"content":"<bpt id=\"p1\">[</bpt>CMFCRibbonProgressBar::GetRegularSize<ept id=\"p1\">](#cmfcribbonprogressbar__getregularsize)</ept>","source":"[CMFCRibbonProgressBar::GetRegularSize](#cmfcribbonprogressbar__getregularsize)"},{"content":"Returns the regular size of the ribbon element.","pos":[1613,1660]},{"content":"(Overrides <bpt id=\"p1\">[</bpt>CMFCRibbonBaseElement::GetRegularSize<ept id=\"p1\">](../../mfc/reference/cmfcribbonbaseelement-class.md#cmfcribbonbaseelement__getregularsize)</ept>.)","pos":[1661,1803],"source":" (Overrides [CMFCRibbonBaseElement::GetRegularSize](../../mfc/reference/cmfcribbonbaseelement-class.md#cmfcribbonbaseelement__getregularsize).)"},{"pos":[1808,1887],"content":"<bpt id=\"p1\">[</bpt>CMFCRibbonProgressBar::IsInfiniteMode<ept id=\"p1\">](#cmfcribbonprogressbar__isinfinitemode)</ept>","source":"[CMFCRibbonProgressBar::IsInfiniteMode](#cmfcribbonprogressbar__isinfinitemode)"},{"content":"Specifies whether the progress bar is working in infinite mode.","pos":[1888,1951]},{"pos":[1956,2019],"content":"<bpt id=\"p1\">[</bpt>CMFCRibbonProgressBar::OnDraw<ept id=\"p1\">](#cmfcribbonprogressbar__ondraw)</ept>","source":"[CMFCRibbonProgressBar::OnDraw](#cmfcribbonprogressbar__ondraw)"},{"content":"Called by the framework to draw the ribbon element.","pos":[2020,2071]},{"content":"(Overrides <bpt id=\"p1\">[</bpt>CMFCRibbonBaseElement::OnDraw<ept id=\"p1\">](../../mfc/reference/cmfcribbonbaseelement-class.md#cmfcribbonbaseelement__ondraw)</ept>.)","pos":[2072,2198],"source":" (Overrides [CMFCRibbonBaseElement::OnDraw](../../mfc/reference/cmfcribbonbaseelement-class.md#cmfcribbonbaseelement__ondraw).)"},{"pos":[2203,2284],"content":"<bpt id=\"p1\">[</bpt>CMFCRibbonProgressBar::SetInfiniteMode<ept id=\"p1\">](#cmfcribbonprogressbar__setinfinitemode)</ept>","source":"[CMFCRibbonProgressBar::SetInfiniteMode](#cmfcribbonprogressbar__setinfinitemode)"},{"content":"Sets the progress bar to work in infinite mode.","pos":[2285,2332]},{"pos":[2337,2400],"content":"<bpt id=\"p1\">[</bpt>CMFCRibbonProgressBar::SetPos<ept id=\"p1\">](#cmfcribbonprogressbar__setpos)</ept>","source":"[CMFCRibbonProgressBar::SetPos](#cmfcribbonprogressbar__setpos)"},{"content":"Sets the current progress.","pos":[2401,2427]},{"pos":[2432,2499],"content":"<bpt id=\"p1\">[</bpt>CMFCRibbonProgressBar::SetRange<ept id=\"p1\">](#cmfcribbonprogressbar__setrange)</ept>","source":"[CMFCRibbonProgressBar::SetRange](#cmfcribbonprogressbar__setrange)"},{"content":"Sets the minimum and maximum values.","pos":[2500,2536]},{"pos":[2546,2553],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"A <ph id=\"ph1\">`CMFCRibbonProgressBar`</ph> can operate in two modes: regular and infinite.","pos":[2557,2630],"source":"A `CMFCRibbonProgressBar` can operate in two modes: regular and infinite."},{"content":"In regular mode, the progress bar is filled from left to right and stops when it reaches the maximum value.","pos":[2631,2738]},{"content":"In infinite mode, the progress bar is repeatedly filled from the minimum value to the maximum value.","pos":[2739,2839]},{"content":"You might use infinite mode to indicate that an operation is ongoing, but that the completion time is unknown.","pos":[2840,2950]},{"pos":[2959,2966],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following example demonstrates how to use various methods in the <ph id=\"ph1\">`CMFCRibbonProgressBar`</ph> class.","pos":[2970,3069],"source":"The following example demonstrates how to use various methods in the `CMFCRibbonProgressBar` class."},{"content":"The example shows how to set the progress bar to work in infinite mode (where the completion time of an operation is unknown), set the minimum and maximum values for the progress bar, and set the current position of the progress bar.","pos":[3070,3303]},{"content":"This code snippet is part of the <bpt id=\"p1\">[</bpt>MS Office 2007 Demo sample<ept id=\"p1\">](../../visual-cpp-samples.md)</ept>.","pos":[3304,3395],"source":" This code snippet is part of the [MS Office 2007 Demo sample](../../visual-cpp-samples.md)."},{"pos":[3402,3513],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_MFC_MSOffice2007Demo#11<ept id=\"p2\">](../../mfc/reference/codesnippet/cpp/cmfcribbonprogressbar-class_1.cpp)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_MFC_MSOffice2007Demo#11](../../mfc/reference/codesnippet/cpp/cmfcribbonprogressbar-class_1.cpp)]"},{"pos":[3522,3543],"content":"Inheritance Hierarchy","linkify":"Inheritance Hierarchy","nodes":[{"content":"Inheritance Hierarchy","pos":[0,21]}]},{"pos":[3547,3594],"content":"<bpt id=\"p1\">[</bpt>CObject<ept id=\"p1\">](../../mfc/reference/cobject-class.md)</ept>","source":"[CObject](../../mfc/reference/cobject-class.md)"},{"pos":[3601,3676],"content":"<bpt id=\"p1\">[</bpt>CMFCRibbonBaseElement<ept id=\"p1\">](../../mfc/reference/cmfcribbonbaseelement-class.md)</ept>","source":"[CMFCRibbonBaseElement](../../mfc/reference/cmfcribbonbaseelement-class.md)"},{"pos":[3683,3758],"content":"<bpt id=\"p1\">[</bpt>CMFCRibbonProgressBar<ept id=\"p1\">](../../mfc/reference/cmfcribbonprogressbar-class.md)</ept>","source":"[CMFCRibbonProgressBar](../../mfc/reference/cmfcribbonprogressbar-class.md)"},{"pos":[3767,3779],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[3783,3817],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> afxRibbonProgressBar.h","source":"**Header:** afxRibbonProgressBar.h"},{"pos":[3827,3932],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcribbonprogressbar__cmfcribbonprogressbar\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCRibbonProgressBar::CMFCRibbonProgressBar","linkify":"<a name=\"cmfcribbonprogressbar__cmfcribbonprogressbar\"></a>  CMFCRibbonProgressBar::CMFCRibbonProgressBar","source":"<a name=\"cmfcribbonprogressbar__cmfcribbonprogressbar\"></a>  CMFCRibbonProgressBar::CMFCRibbonProgressBar"},{"pos":[3936,4048],"content":"Constructs and initializes a <bpt id=\"p1\">[</bpt>CMFCRibbonProgressBar<ept id=\"p1\">](../../mfc/reference/cmfcribbonprogressbar-class.md)</ept> object.","source":"Constructs and initializes a [CMFCRibbonProgressBar](../../mfc/reference/cmfcribbonprogressbar-class.md) object."},{"pos":[4186,4196],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`nID`</ph>","pos":[4200,4210],"source":"[in] `nID`"},{"content":"Specifies the command ID for the ribbon progress bar.","pos":[4214,4267]},{"content":"[in] <ph id=\"ph1\">`nWidth`</ph>","pos":[4274,4287],"source":"[in] `nWidth`"},{"content":"Specifies the width, in pixels, of the ribbon progress bar.","pos":[4291,4350]},{"content":"[in] <ph id=\"ph1\">`nHeight`</ph>","pos":[4357,4371],"source":"[in] `nHeight`"},{"content":"Specifies the height, in pixels, of the ribbon progress bar.","pos":[4375,4435]},{"pos":[4445,4520],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcribbonprogressbar__getpos\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCRibbonProgressBar::GetPos","linkify":"<a name=\"cmfcribbonprogressbar__getpos\"></a>  CMFCRibbonProgressBar::GetPos","source":"<a name=\"cmfcribbonprogressbar__getpos\"></a>  CMFCRibbonProgressBar::GetPos"},{"content":"Returns the current position of the progress bar.","pos":[4524,4573]},{"pos":[4622,4634],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A value representing the current position of the progress bar.","pos":[4638,4700]},{"pos":[4710,4717],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[4721,4858],"content":"The range being set must be within the range specified by the <bpt id=\"p1\">[</bpt>CMFCRibbonProgressBar::SetRange<ept id=\"p1\">](#cmfcribbonprogressbar__setrange)</ept> method.","source":"The range being set must be within the range specified by the [CMFCRibbonProgressBar::SetRange](#cmfcribbonprogressbar__setrange) method."},{"pos":[4868,4953],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcribbonprogressbar__getrangemax\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCRibbonProgressBar::GetRangeMax","linkify":"<a name=\"cmfcribbonprogressbar__getrangemax\"></a>  CMFCRibbonProgressBar::GetRangeMax","source":"<a name=\"cmfcribbonprogressbar__getrangemax\"></a>  CMFCRibbonProgressBar::GetRangeMax"},{"content":"Returns the progress bar's current maximum value.","pos":[4957,5006]},{"pos":[5059,5071],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The maximum value of the current range.","pos":[5075,5114]},{"pos":[5124,5131],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[5141,5226],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcribbonprogressbar__getrangemin\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCRibbonProgressBar::GetRangeMin","linkify":"<a name=\"cmfcribbonprogressbar__getrangemin\"></a>  CMFCRibbonProgressBar::GetRangeMin","source":"<a name=\"cmfcribbonprogressbar__getrangemin\"></a>  CMFCRibbonProgressBar::GetRangeMin"},{"content":"Returns the progress bar's current minimum range value.","pos":[5230,5285]},{"pos":[5338,5350],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The minimum value of the current range.","pos":[5354,5393]},{"pos":[5403,5494],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcribbonprogressbar__getregularsize\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCRibbonProgressBar::GetRegularSize","linkify":"<a name=\"cmfcribbonprogressbar__getregularsize\"></a>  CMFCRibbonProgressBar::GetRegularSize","source":"<a name=\"cmfcribbonprogressbar__getregularsize\"></a>  CMFCRibbonProgressBar::GetRegularSize"},{"pos":[5662,5672],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"pos":[5676,5686],"content":"[in] <ph id=\"ph1\">`pDC`</ph>","source":"[in] `pDC`"},{"pos":[5696,5708],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[5718,5725],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[5735,5826],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcribbonprogressbar__isinfinitemode\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCRibbonProgressBar::IsInfiniteMode","linkify":"<a name=\"cmfcribbonprogressbar__isinfinitemode\"></a>  CMFCRibbonProgressBar::IsInfiniteMode","source":"<a name=\"cmfcribbonprogressbar__isinfinitemode\"></a>  CMFCRibbonProgressBar::IsInfiniteMode"},{"content":"Specifies whether the progress bar is working in infinite mode.","pos":[5830,5893]},{"pos":[5950,5962],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[5966,6033],"content":"<ph id=\"ph1\">`TRUE`</ph> if the progress bar is in infinite mode; otherwise, <ph id=\"ph2\">`FALSE`</ph>.","source":"`TRUE` if the progress bar is in infinite mode; otherwise, `FALSE`."},{"pos":[6043,6050],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"In infinite mode, the progress bar fills repeatedly from the minimum value to the maximum value.","pos":[6054,6150]},{"content":"You might use infinite mode to indicate that an operation is ongoing, but that the completion time is unknown.","pos":[6151,6261]},{"pos":[6271,6346],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcribbonprogressbar__ondraw\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCRibbonProgressBar::OnDraw","linkify":"<a name=\"cmfcribbonprogressbar__ondraw\"></a>  CMFCRibbonProgressBar::OnDraw","source":"<a name=\"cmfcribbonprogressbar__ondraw\"></a>  CMFCRibbonProgressBar::OnDraw"},{"pos":[6505,6515],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"pos":[6519,6529],"content":"[in] <ph id=\"ph1\">`pDC`</ph>","source":"[in] `pDC`"},{"pos":[6539,6546],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[6556,6649],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcribbonprogressbar__setinfinitemode\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCRibbonProgressBar::SetInfiniteMode","linkify":"<a name=\"cmfcribbonprogressbar__setinfinitemode\"></a>  CMFCRibbonProgressBar::SetInfiniteMode","source":"<a name=\"cmfcribbonprogressbar__setinfinitemode\"></a>  CMFCRibbonProgressBar::SetInfiniteMode"},{"content":"Sets the progress bar to work in infinite mode.","pos":[6653,6700]},{"pos":[6765,6775],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`bSet`</ph>","pos":[6779,6790],"source":"[in] `bSet`"},{"content":"<ph id=\"ph1\"> `TRUE`</ph> to specify that the progress bar is in infinite mode; otherwise, <ph id=\"ph2\">`FALSE`</ph>.","pos":[6793,6874],"source":" `TRUE` to specify that the progress bar is in infinite mode; otherwise, `FALSE`."},{"pos":[6884,6891],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Usually, if the progress bar is in infinite mode, it is telling the user that an operation is ongoing, but that the completion time is unknown.","pos":[6895,7038]},{"content":"Thus, the progress bar fills repeatedly from the minimum value to the maximum value.","pos":[7039,7123]},{"pos":[7133,7208],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcribbonprogressbar__setpos\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCRibbonProgressBar::SetPos","linkify":"<a name=\"cmfcribbonprogressbar__setpos\"></a>  CMFCRibbonProgressBar::SetPos","source":"<a name=\"cmfcribbonprogressbar__setpos\"></a>  CMFCRibbonProgressBar::SetPos"},{"content":"Sets the current position of the progress bar.","pos":[7212,7258]},{"pos":[7338,7348],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`nPos`</ph>","pos":[7352,7363],"source":"[in] `nPos`"},{"content":"Specifies the position to which the progress bar is set.","pos":[7367,7423]},{"content":"[in] <ph id=\"ph1\">`bRedraw`</ph>","pos":[7430,7444],"source":"[in] `bRedraw`"},{"content":"Specifies whether the progress bar should be redrawn.","pos":[7448,7501]},{"pos":[7511,7518],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[7522,7659],"content":"The range being set must be within the range specified by the <bpt id=\"p1\">[</bpt>CMFCRibbonProgressBar::SetRange<ept id=\"p1\">](#cmfcribbonprogressbar__setrange)</ept> method.","source":"The range being set must be within the range specified by the [CMFCRibbonProgressBar::SetRange](#cmfcribbonprogressbar__setrange) method."},{"pos":[7669,7748],"content":"<bpt id=\"p1\">&lt;a name=\"cmfcribbonprogressbar__setrange\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCRibbonProgressBar::SetRange","linkify":"<a name=\"cmfcribbonprogressbar__setrange\"></a>  CMFCRibbonProgressBar::SetRange","source":"<a name=\"cmfcribbonprogressbar__setrange\"></a>  CMFCRibbonProgressBar::SetRange"},{"content":"Sets the minimum and maximum values for the progress bar.","pos":[7752,7809]},{"pos":[7880,7890],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`nMin`</ph>","pos":[7894,7905],"source":"[in] `nMin`"},{"content":"Specifies the minimum value of the range.","pos":[7909,7950]},{"content":"[in] <ph id=\"ph1\">`nMax`</ph>","pos":[7957,7968],"source":"[in] `nMax`"},{"content":"Specifies the maximum value of the range.","pos":[7972,8013]},{"pos":[8023,8030],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Use this method to define the range of the progress bar by setting minimum and maximum values.","pos":[8034,8128]},{"pos":[8137,8145],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Hierarchy Chart<ept id=\"p1\">](../../mfc/hierarchy-chart.md)</ept><ph id=\"ph1\"> </ph>","pos":[8149,8197],"source":"[Hierarchy Chart](../../mfc/hierarchy-chart.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Classes<ept id=\"p1\">](../../mfc/reference/mfc-classes.md)</ept><ph id=\"ph1\"> </ph>","pos":[8200,8247],"source":" [Classes](../../mfc/reference/mfc-classes.md) "},{"content":"<bpt id=\"p1\"> [</bpt>CMFCRibbonBaseElement Class<ept id=\"p1\">](../../mfc/reference/cmfcribbonbaseelement-class.md)</ept><ph id=\"ph1\"> </ph>","pos":[8250,8333],"source":" [CMFCRibbonBaseElement Class](../../mfc/reference/cmfcribbonbaseelement-class.md) "},{"content":"<bpt id=\"p1\"> [</bpt>CMFCRibbonBar Class<ept id=\"p1\">](../../mfc/reference/cmfcribbonbar-class.md)</ept>","pos":[8336,8402],"source":" [CMFCRibbonBar Class](../../mfc/reference/cmfcribbonbar-class.md)"}],"content":"---\ntitle: \"CMFCRibbonProgressBar Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"CMFCRibbonProgressBar\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"CMFCRibbonProgressBar class\"\nms.assetid: de3d9f2e-ed59-480e-aa7d-08a33ab36c67\ncaps.latest.revision: 26\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# CMFCRibbonProgressBar Class\nImplements a control that visually indicates the progress of a lengthy operation.  \n  \n## Syntax  \n  \n```  \nclass CMFCRibbonProgressBar : public CMFCRibbonBaseElement  \n```  \n  \n## Members  \n  \n### Public Constructors  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CMFCRibbonProgressBar::CMFCRibbonProgressBar](#cmfcribbonprogressbar__cmfcribbonprogressbar)|Constructs and initializes a `CMFCRibbonProgressBar` object.|  \n  \n### Public Methods  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CMFCRibbonProgressBar::GetPos](#cmfcribbonprogressbar__getpos)|Returns the current progress.|  \n|[CMFCRibbonProgressBar::GetRangeMax](#cmfcribbonprogressbar__getrangemax)|Returns the maximum value of the current range.|  \n|[CMFCRibbonProgressBar::GetRangeMin](#cmfcribbonprogressbar__getrangemin)|Returns the minimum value of the current range.|  \n|[CMFCRibbonProgressBar::GetRegularSize](#cmfcribbonprogressbar__getregularsize)|Returns the regular size of the ribbon element. (Overrides [CMFCRibbonBaseElement::GetRegularSize](../../mfc/reference/cmfcribbonbaseelement-class.md#cmfcribbonbaseelement__getregularsize).)|  \n|[CMFCRibbonProgressBar::IsInfiniteMode](#cmfcribbonprogressbar__isinfinitemode)|Specifies whether the progress bar is working in infinite mode.|  \n|[CMFCRibbonProgressBar::OnDraw](#cmfcribbonprogressbar__ondraw)|Called by the framework to draw the ribbon element. (Overrides [CMFCRibbonBaseElement::OnDraw](../../mfc/reference/cmfcribbonbaseelement-class.md#cmfcribbonbaseelement__ondraw).)|  \n|[CMFCRibbonProgressBar::SetInfiniteMode](#cmfcribbonprogressbar__setinfinitemode)|Sets the progress bar to work in infinite mode.|  \n|[CMFCRibbonProgressBar::SetPos](#cmfcribbonprogressbar__setpos)|Sets the current progress.|  \n|[CMFCRibbonProgressBar::SetRange](#cmfcribbonprogressbar__setrange)|Sets the minimum and maximum values.|  \n  \n## Remarks  \n A `CMFCRibbonProgressBar` can operate in two modes: regular and infinite. In regular mode, the progress bar is filled from left to right and stops when it reaches the maximum value. In infinite mode, the progress bar is repeatedly filled from the minimum value to the maximum value. You might use infinite mode to indicate that an operation is ongoing, but that the completion time is unknown.  \n  \n## Example  \n The following example demonstrates how to use various methods in the `CMFCRibbonProgressBar` class. The example shows how to set the progress bar to work in infinite mode (where the completion time of an operation is unknown), set the minimum and maximum values for the progress bar, and set the current position of the progress bar. This code snippet is part of the [MS Office 2007 Demo sample](../../visual-cpp-samples.md).  \n  \n [!code-cpp[NVC_MFC_MSOffice2007Demo#11](../../mfc/reference/codesnippet/cpp/cmfcribbonprogressbar-class_1.cpp)]  \n  \n## Inheritance Hierarchy  \n [CObject](../../mfc/reference/cobject-class.md)  \n  \n [CMFCRibbonBaseElement](../../mfc/reference/cmfcribbonbaseelement-class.md)  \n  \n [CMFCRibbonProgressBar](../../mfc/reference/cmfcribbonprogressbar-class.md)  \n  \n## Requirements  \n **Header:** afxRibbonProgressBar.h  \n  \n##  <a name=\"cmfcribbonprogressbar__cmfcribbonprogressbar\"></a>  CMFCRibbonProgressBar::CMFCRibbonProgressBar  \n Constructs and initializes a [CMFCRibbonProgressBar](../../mfc/reference/cmfcribbonprogressbar-class.md) object.  \n  \n```  \nCMFCRibbonProgressBar();\n\n \nCMFCRibbonProgressBar(\n    UINT nID,  \n    int nWidth = 90,  \n    int nHeight = 22);\n```  \n  \n### Parameters  \n [in] `nID`  \n Specifies the command ID for the ribbon progress bar.  \n  \n [in] `nWidth`  \n Specifies the width, in pixels, of the ribbon progress bar.  \n  \n [in] `nHeight`  \n Specifies the height, in pixels, of the ribbon progress bar.  \n  \n##  <a name=\"cmfcribbonprogressbar__getpos\"></a>  CMFCRibbonProgressBar::GetPos  \n Returns the current position of the progress bar.  \n  \n```  \nint GetPos () const;\n\n \n```  \n  \n### Return Value  \n A value representing the current position of the progress bar.  \n  \n### Remarks  \n The range being set must be within the range specified by the [CMFCRibbonProgressBar::SetRange](#cmfcribbonprogressbar__setrange) method.  \n  \n##  <a name=\"cmfcribbonprogressbar__getrangemax\"></a>  CMFCRibbonProgressBar::GetRangeMax  \n Returns the progress bar's current maximum value.  \n  \n```  \nint GetRangeMax() const;\n\n \n```  \n  \n### Return Value  \n The maximum value of the current range.  \n  \n### Remarks  \n  \n##  <a name=\"cmfcribbonprogressbar__getrangemin\"></a>  CMFCRibbonProgressBar::GetRangeMin  \n Returns the progress bar's current minimum range value.  \n  \n```  \nint GetRangeMin() const;\n\n \n```  \n  \n### Return Value  \n The minimum value of the current range.  \n  \n##  <a name=\"cmfcribbonprogressbar__getregularsize\"></a>  CMFCRibbonProgressBar::GetRegularSize  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvirtual CSize GetRegularSize(CDC* pDC);\n```  \n  \n### Parameters  \n [in] `pDC`  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cmfcribbonprogressbar__isinfinitemode\"></a>  CMFCRibbonProgressBar::IsInfiniteMode  \n Specifies whether the progress bar is working in infinite mode.  \n  \n```  \nBOOL IsInfiniteMode() const;\n\n \n```  \n  \n### Return Value  \n `TRUE` if the progress bar is in infinite mode; otherwise, `FALSE`.  \n  \n### Remarks  \n In infinite mode, the progress bar fills repeatedly from the minimum value to the maximum value. You might use infinite mode to indicate that an operation is ongoing, but that the completion time is unknown.  \n  \n##  <a name=\"cmfcribbonprogressbar__ondraw\"></a>  CMFCRibbonProgressBar::OnDraw  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvirtual void OnDraw(CDC* pDC);\n```  \n  \n### Parameters  \n [in] `pDC`  \n  \n### Remarks  \n  \n##  <a name=\"cmfcribbonprogressbar__setinfinitemode\"></a>  CMFCRibbonProgressBar::SetInfiniteMode  \n Sets the progress bar to work in infinite mode.  \n  \n```  \nvoid SetInfiniteMode(BOOL bSet = TRUE);\n```  \n  \n### Parameters  \n [in] `bSet`  \n `TRUE` to specify that the progress bar is in infinite mode; otherwise, `FALSE`.  \n  \n### Remarks  \n Usually, if the progress bar is in infinite mode, it is telling the user that an operation is ongoing, but that the completion time is unknown. Thus, the progress bar fills repeatedly from the minimum value to the maximum value.  \n  \n##  <a name=\"cmfcribbonprogressbar__setpos\"></a>  CMFCRibbonProgressBar::SetPos  \n Sets the current position of the progress bar.  \n  \n```  \nvoid SetPos(\n    int nPos,  \n    BOOL bRedraw = TRUE);\n```  \n  \n### Parameters  \n [in] `nPos`  \n Specifies the position to which the progress bar is set.  \n  \n [in] `bRedraw`  \n Specifies whether the progress bar should be redrawn.  \n  \n### Remarks  \n The range being set must be within the range specified by the [CMFCRibbonProgressBar::SetRange](#cmfcribbonprogressbar__setrange) method.  \n  \n##  <a name=\"cmfcribbonprogressbar__setrange\"></a>  CMFCRibbonProgressBar::SetRange  \n Sets the minimum and maximum values for the progress bar.  \n  \n```  \nvoid SetRange(\n    int nMin,  \n    int nMax);\n```  \n  \n### Parameters  \n [in] `nMin`  \n Specifies the minimum value of the range.  \n  \n [in] `nMax`  \n Specifies the maximum value of the range.  \n  \n### Remarks  \n Use this method to define the range of the progress bar by setting minimum and maximum values.  \n  \n## See Also  \n [Hierarchy Chart](../../mfc/hierarchy-chart.md)   \n [Classes](../../mfc/reference/mfc-classes.md)   \n [CMFCRibbonBaseElement Class](../../mfc/reference/cmfcribbonbaseelement-class.md)   \n [CMFCRibbonBar Class](../../mfc/reference/cmfcribbonbar-class.md)\n"}