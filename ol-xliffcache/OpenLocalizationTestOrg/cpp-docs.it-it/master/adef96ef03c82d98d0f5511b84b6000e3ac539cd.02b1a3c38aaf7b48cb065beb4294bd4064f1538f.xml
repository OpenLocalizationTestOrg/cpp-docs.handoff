{"nodes":[{"pos":[12,82],"content":"How to: Read Data from the Windows Registry (C++-CLI) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"How to: Read Data from the Windows Registry (C++-CLI) | Microsoft Docs","pos":[0,70]}]},{"content":"How to: Read Data from the Windows Registry (C++/CLI)","pos":[657,710]},{"content":"The following code example uses the &lt;xref:Microsoft.Win32.Registry.CurrentUser&gt; key to read data from the Windows registry.","pos":[711,834],"source":"The following code example uses the <xref:Microsoft.Win32.Registry.CurrentUser> key to read data from the Windows registry."},{"content":"First, the subkeys are enumerated using the &lt;xref:Microsoft.Win32.RegistryKey.GetSubKeyNames%2A&gt; method and then the Identities subkey is opened using the &lt;xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A&gt; method.","pos":[835,1046],"source":" First, the subkeys are enumerated using the <xref:Microsoft.Win32.RegistryKey.GetSubKeyNames%2A> method and then the Identities subkey is opened using the <xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A> method."},{"content":"Like the root keys, each subkey is represented by the &lt;xref:Microsoft.Win32.RegistryKey&gt; class.","pos":[1047,1142],"source":" Like the root keys, each subkey is represented by the <xref:Microsoft.Win32.RegistryKey> class."},{"content":"Finally, the new &lt;xref:Microsoft.Win32.RegistryKey&gt; object is used to enumerate the key/value pairs.","pos":[1143,1243],"source":" Finally, the new <xref:Microsoft.Win32.RegistryKey> object is used to enumerate the key/value pairs."},{"content":"Example","pos":[1252,1259]},{"content":"Code","pos":[1269,1273]},{"content":"Remarks","pos":[2253,2260]},{"content":"The &lt;xref:Microsoft.Win32.Registry&gt; class is merely a container for static instances of &lt;xref:Microsoft.Win32.RegistryKey&gt;.","pos":[2264,2387],"source":"The <xref:Microsoft.Win32.Registry> class is merely a container for static instances of <xref:Microsoft.Win32.RegistryKey>."},{"content":"Each instance represents a root registry node.","pos":[2388,2434]},{"content":"The instances are &lt;xref:Microsoft.Win32.Registry.ClassesRoot&gt;, &lt;xref:Microsoft.Win32.Registry.CurrentConfig&gt;, &lt;xref:Microsoft.Win32.Registry.CurrentUser&gt;, &lt;xref:Microsoft.Win32.Registry.LocalMachine&gt;, and &lt;xref:Microsoft.Win32.Registry.Users&gt;.","pos":[2435,2678],"source":" The instances are <xref:Microsoft.Win32.Registry.ClassesRoot>, <xref:Microsoft.Win32.Registry.CurrentConfig>, <xref:Microsoft.Win32.Registry.CurrentUser>, <xref:Microsoft.Win32.Registry.LocalMachine>, and <xref:Microsoft.Win32.Registry.Users>."},{"content":"In addition to being static, the objects within the &lt;xref:Microsoft.Win32.Registry&gt; class are read-only.","pos":[2685,2789],"source":"In addition to being static, the objects within the <xref:Microsoft.Win32.Registry> class are read-only."},{"content":"Furthermore, instances of the &lt;xref:Microsoft.Win32.RegistryKey&gt; class that are created to access the contents of the registry objects are read-only as well.","pos":[2790,2947],"source":" Furthermore, instances of the <xref:Microsoft.Win32.RegistryKey> class that are created to access the contents of the registry objects are read-only as well."},{"content":"For an example of how to override this behavior, see <bpt id=\"p1\">[</bpt>How to: Write Data to the Windows Registry (C++/CLI)<ept id=\"p1\">](../dotnet/how-to-write-data-to-the-windows-registry-cpp-cli.md)</ept>.","pos":[2948,3120],"source":" For an example of how to override this behavior, see [How to: Write Data to the Windows Registry (C++/CLI)](../dotnet/how-to-write-data-to-the-windows-registry-cpp-cli.md)."},{"content":"There are two additional objects in the &lt;xref:Microsoft.Win32.Registry&gt; class: &lt;xref:Microsoft.Win32.Registry.DynData&gt; and &lt;xref:Microsoft.Win32.Registry.PerformanceData&gt;.","pos":[3127,3298],"source":"There are two additional objects in the <xref:Microsoft.Win32.Registry> class: <xref:Microsoft.Win32.Registry.DynData> and <xref:Microsoft.Win32.Registry.PerformanceData>."},{"content":"Both are instances of the &lt;xref:Microsoft.Win32.RegistryKey&gt; class.","pos":[3299,3366],"source":" Both are instances of the <xref:Microsoft.Win32.RegistryKey> class."},{"content":"The &lt;xref:Microsoft.Win32.Registry.DynData&gt; object contains dynamic registry information, which is only supported in Windows 98 and Windows Me.","pos":[3367,3510],"source":" The <xref:Microsoft.Win32.Registry.DynData> object contains dynamic registry information, which is only supported in Windows 98 and Windows Me."},{"content":"The &lt;xref:Microsoft.Win32.Registry.PerformanceData&gt; object can be used to access performance counter information for applications that use the Windows Performance Monitoring System.","pos":[3511,3692],"source":" The <xref:Microsoft.Win32.Registry.PerformanceData> object can be used to access performance counter information for applications that use the Windows Performance Monitoring System."},{"content":"The &lt;xref:Microsoft.Win32.Registry.PerformanceData&gt; node represents information that is not actually stored in the registry and therefore cannot be viewed using Regedit.exe.","pos":[3693,3866],"source":" The <xref:Microsoft.Win32.Registry.PerformanceData> node represents information that is not actually stored in the registry and therefore cannot be viewed using Regedit.exe."},{"content":"See Also","pos":[3875,3883]},{"content":"How to: Write Data to the Windows Registry (C++/CLI)","pos":[3888,3940]},{"content":"Windows Operations (C++/CLI)","pos":[4011,4039]},{"content":".NET Programming with C++/CLI (Visual C++)","pos":[4087,4129]}],"content":"---\ntitle: \"How to: Read Data from the Windows Registry (C++-CLI) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"Visual C++, reading from Windows Registry\"\n  - \"registry, reading\"\nms.assetid: aebf52c0-acc7-40e2-adbc-d34e0a1e467e\ncaps.latest.revision: 11\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# How to: Read Data from the Windows Registry (C++/CLI)\nThe following code example uses the <xref:Microsoft.Win32.Registry.CurrentUser> key to read data from the Windows registry. First, the subkeys are enumerated using the <xref:Microsoft.Win32.RegistryKey.GetSubKeyNames%2A> method and then the Identities subkey is opened using the <xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A> method. Like the root keys, each subkey is represented by the <xref:Microsoft.Win32.RegistryKey> class. Finally, the new <xref:Microsoft.Win32.RegistryKey> object is used to enumerate the key/value pairs.  \n  \n## Example  \n  \n### Code  \n  \n```  \n// registry_read.cpp  \n// compile with: /clr  \nusing namespace System;  \nusing namespace Microsoft::Win32;  \n  \nint main( )  \n{  \n   array<String^>^ key = Registry::CurrentUser->GetSubKeyNames( );  \n  \n   Console::WriteLine(\"Subkeys within CurrentUser root key:\");  \n   for (int i=0; i<key->Length; i++)  \n   {  \n      Console::WriteLine(\"   {0}\", key[i]);  \n   }  \n  \n   Console::WriteLine(\"Opening subkey 'Identities'...\");  \n   RegistryKey^ rk = nullptr;  \n   rk = Registry::CurrentUser->OpenSubKey(\"Identities\");  \n   if (rk==nullptr)  \n   {  \n      Console::WriteLine(\"Registry key not found - aborting\");  \n      return -1;  \n   }  \n  \n   Console::WriteLine(\"Key/value pairs within 'Identities' key:\");  \n   array<String^>^ name = rk->GetValueNames( );  \n   for (int i=0; i<name->Length; i++)  \n   {  \n      String^ value = rk->GetValue(name[i])->ToString();  \n      Console::WriteLine(\"   {0} = {1}\", name[i], value);  \n   }  \n  \n   return 0;  \n}  \n```  \n  \n## Remarks  \n The <xref:Microsoft.Win32.Registry> class is merely a container for static instances of <xref:Microsoft.Win32.RegistryKey>. Each instance represents a root registry node. The instances are <xref:Microsoft.Win32.Registry.ClassesRoot>, <xref:Microsoft.Win32.Registry.CurrentConfig>, <xref:Microsoft.Win32.Registry.CurrentUser>, <xref:Microsoft.Win32.Registry.LocalMachine>, and <xref:Microsoft.Win32.Registry.Users>.  \n  \n In addition to being static, the objects within the <xref:Microsoft.Win32.Registry> class are read-only. Furthermore, instances of the <xref:Microsoft.Win32.RegistryKey> class that are created to access the contents of the registry objects are read-only as well. For an example of how to override this behavior, see [How to: Write Data to the Windows Registry (C++/CLI)](../dotnet/how-to-write-data-to-the-windows-registry-cpp-cli.md).  \n  \n There are two additional objects in the <xref:Microsoft.Win32.Registry> class: <xref:Microsoft.Win32.Registry.DynData> and <xref:Microsoft.Win32.Registry.PerformanceData>. Both are instances of the <xref:Microsoft.Win32.RegistryKey> class. The <xref:Microsoft.Win32.Registry.DynData> object contains dynamic registry information, which is only supported in Windows 98 and Windows Me. The <xref:Microsoft.Win32.Registry.PerformanceData> object can be used to access performance counter information for applications that use the Windows Performance Monitoring System. The <xref:Microsoft.Win32.Registry.PerformanceData> node represents information that is not actually stored in the registry and therefore cannot be viewed using Regedit.exe.  \n  \n## See Also  \n [How to: Write Data to the Windows Registry (C++/CLI)](../dotnet/how-to-write-data-to-the-windows-registry-cpp-cli.md)   \n [Windows Operations (C++/CLI)](../dotnet/windows-operations-cpp-cli.md)   \n [.NET Programming with C++/CLI (Visual C++)](../dotnet/dotnet-programming-with-cpp-cli-visual-cpp.md)"}