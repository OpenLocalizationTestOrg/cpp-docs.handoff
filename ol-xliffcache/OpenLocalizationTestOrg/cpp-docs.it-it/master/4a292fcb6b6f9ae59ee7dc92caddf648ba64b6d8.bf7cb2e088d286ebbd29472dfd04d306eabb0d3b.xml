{"nodes":[{"pos":[12,59],"content":"stack::generic_value (STL-CLR) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"stack::generic_value (STL-CLR) | Microsoft Docs","pos":[0,47]}]},{"content":"stack::generic_value (STL/CLR)","pos":[649,679]},{"content":"The type of an element for use with the generic interface for the container.","pos":[680,756]},{"content":"Syntax","pos":[765,771]},{"content":"Remarks","pos":[827,834]},{"content":"The type describes an object of type <ph id=\"ph1\">`GValue`</ph> that describes the stored element value for use with the generic interface for this template container class.","pos":[838,993],"source":"The type describes an object of type `GValue` that describes the stored element value for use with the generic interface for this template container class."},{"content":"(<ph id=\"ph1\">`GValue`</ph> is either <ph id=\"ph2\">`value_type`</ph> or <ph id=\"ph3\">`value_type^`</ph> if <ph id=\"ph4\">`value_type`</ph> is a ref type.)","pos":[994,1075],"source":" (`GValue` is either `value_type` or `value_type^` if `value_type` is a ref type.)"},{"content":"Example","pos":[1084,1091]},{"content":"Requirements","pos":[2087,2099]},{"pos":[2103,2130],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> <ph id=\"ph1\">\\&lt;</ph>cliext/stack&gt;","source":"**Header:** \\<cliext/stack>"},{"pos":[2137,2158],"content":"<bpt id=\"p1\">**</bpt>Namespace:<ept id=\"p1\">**</ept> cliext","source":"**Namespace:** cliext"},{"content":"See Also","pos":[2167,2175]},{"content":"stack (STL/CLR)","pos":[2180,2195]},{"content":"stack::generic_container (STL/CLR)","pos":[2230,2264]},{"content":"stack::value_type (STL/CLR)","pos":[2317,2344]}],"content":"---\ntitle: \"stack::generic_value (STL-CLR) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"cliext::stack::generic_value\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"generic_value member [STL/CLR]\"\nms.assetid: f918f5e6-5cb6-480e-8548-13e15026ffde\ncaps.latest.revision: 8\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# stack::generic_value (STL/CLR)\nThe type of an element for use with the generic interface for the container.  \n  \n## Syntax  \n  \n```  \ntypedef GValue generic_value;  \n```  \n  \n## Remarks  \n The type describes an object of type `GValue` that describes the stored element value for use with the generic interface for this template container class. (`GValue` is either `value_type` or `value_type^` if `value_type` is a ref type.)  \n  \n## Example  \n  \n```  \n// cliext_stack_generic_value.cpp   \n// compile with: /clr   \n#include <cliext/stack>   \n  \ntypedef cliext::stack<wchar_t> Mystack;   \nint main()   \n    {   \n    Mystack c1;   \n    c1.push(L'a');   \n    c1.push(L'b');   \n    c1.push(L'c');   \n  \n// display contents \" a b c\"   \n    for each (wchar_t elem in c1.get_container())   \n        System::Console::Write(\" {0}\", elem);   \n    System::Console::WriteLine();   \n  \n// get interface to container   \n    Mystack::generic_container^ gc1 = %c1;   \n    for each (wchar_t elem in gc1->get_container())   \n        System::Console::Write(\" {0}\", elem);   \n    System::Console::WriteLine();   \n  \n// display in reverse using generic_value   \n    for (; !gc1->empty(); gc1->pop())   \n        {   \n        Mystack::generic_value elem = gc1->top();   \n  \n        System::Console::Write(\" {0}\", elem);   \n        }   \n    System::Console::WriteLine();   \n    return (0);   \n    }  \n  \n```  \n  \n```Output  \na b c  \na b c  \nc b a  \n```  \n  \n## Requirements  \n **Header:** \\<cliext/stack>  \n  \n **Namespace:** cliext  \n  \n## See Also  \n [stack (STL/CLR)](../dotnet/stack-stl-clr.md)   \n [stack::generic_container (STL/CLR)](../dotnet/stack-generic-container-stl-clr.md)   \n [stack::value_type (STL/CLR)](../dotnet/stack-value-type-stl-clr.md)"}