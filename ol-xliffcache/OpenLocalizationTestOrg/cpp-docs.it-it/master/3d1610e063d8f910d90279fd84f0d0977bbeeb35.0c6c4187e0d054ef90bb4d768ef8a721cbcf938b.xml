{"nodes":[{"pos":[12,36],"content":"__m128i | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"__m128i | Microsoft Docs","pos":[0,24]}]},{"content":"__m128i","pos":[649,656]},{"content":"Microsoft Specific","pos":[660,678]},{"pos":[682,810],"content":"The <ph id=\"ph1\">`__m128i`</ph> data type, for use with the Streaming SIMD Extensions 2 (SSE2) instructions intrinsics, is defined in emmintrin.h.","source":"The `__m128i` data type, for use with the Streaming SIMD Extensions 2 (SSE2) instructions intrinsics, is defined in emmintrin.h."},{"content":"Remarks","pos":[921,928]},{"content":"You should not access the <bpt id=\"p1\">**</bpt>__m128i<ept id=\"p1\">**</ept> fields directly.","pos":[932,986],"source":"You should not access the **__m128i** fields directly."},{"content":"You can, however, see these types in the debugger.","pos":[987,1037]},{"content":"A variable of type <ph id=\"ph1\">`__m128i`</ph> maps to the XMM[0-7] registers.","pos":[1038,1098],"source":" A variable of type `__m128i` maps to the XMM[0-7] registers."},{"pos":[1105,1182],"content":"Variables of type <bpt id=\"p1\">**</bpt>_m128i<ept id=\"p1\">**</ept> are automatically aligned on 16-byte boundaries.","source":"Variables of type **_m128i** are automatically aligned on 16-byte boundaries."},{"pos":[1190,1517],"content":"[!NOTE]\n Using variables of type `__m128i` will cause the compiler to generate the SSE2 **movdqa** instruction. This instruction does not cause a fault on Pentium III processors but will result in silent failure, with possible side effects caused by whatever instructions **movdqa** translates into on Pentium III processors.","leadings":["","> "],"nodes":[{"content":" Using variables of type `__m128i` will cause the compiler to generate the SSE2 **movdqa** instruction. This instruction does not cause a fault on Pentium III processors but will result in silent failure, with possible side effects caused by whatever instructions **movdqa** translates into on Pentium III processors.","pos":[8,325],"nodes":[{"content":"Using variables of type <ph id=\"ph1\">`__m128i`</ph> will cause the compiler to generate the SSE2 <bpt id=\"p1\">**</bpt>movdqa<ept id=\"p1\">**</ept> instruction.","pos":[1,103],"source":" Using variables of type `__m128i` will cause the compiler to generate the SSE2 **movdqa** instruction."},{"content":"This instruction does not cause a fault on Pentium III processors but will result in silent failure, with possible side effects caused by whatever instructions <bpt id=\"p1\">**</bpt>movdqa<ept id=\"p1\">**</ept> translates into on Pentium III processors.","pos":[104,317],"source":" This instruction does not cause a fault on Pentium III processors but will result in silent failure, with possible side effects caused by whatever instructions **movdqa** translates into on Pentium III processors."}]}]},{"pos":[1524,1583],"content":"The <ph id=\"ph1\">`__m128i`</ph> data type is not supported on ARM processors.","source":"The `__m128i` data type is not supported on ARM processors."},{"content":"END Microsoft Specific","pos":[1592,1614]},{"content":"See Also","pos":[1623,1631]},{"content":"Keywords","pos":[1636,1644]},{"content":"Fundamental Types","pos":[1675,1692]},{"content":"Data Type Ranges","pos":[1732,1748]}],"content":"---\ntitle: \"__m128i | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"language-reference\"\nf1_keywords: \n  - \"__m128i_cpp\"\n  - \"__m128i\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"__m128i keyword [C++]\"\nms.assetid: bd245d68-862c-46dd-9903-6c67c7c5dbcd\ncaps.latest.revision: 8\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"ru-ru\"\n  - \"zh-cn\"\n  - \"zh-tw\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"tr-tr\"\n---\n# __m128i\n## Microsoft Specific  \n The `__m128i` data type, for use with the Streaming SIMD Extensions 2 (SSE2) instructions intrinsics, is defined in emmintrin.h.  \n  \n```  \n// data_types__m128i.cpp  \n#include <emmintrin.h>  \nint main() {  \n   __m128i x;  \n}  \n```  \n  \n## Remarks  \n You should not access the **__m128i** fields directly. You can, however, see these types in the debugger. A variable of type `__m128i` maps to the XMM[0-7] registers.  \n  \n Variables of type **_m128i** are automatically aligned on 16-byte boundaries.  \n  \n> [!NOTE]\n>  Using variables of type `__m128i` will cause the compiler to generate the SSE2 **movdqa** instruction. This instruction does not cause a fault on Pentium III processors but will result in silent failure, with possible side effects caused by whatever instructions **movdqa** translates into on Pentium III processors.  \n  \n The `__m128i` data type is not supported on ARM processors.  \n  \n## END Microsoft Specific  \n  \n## See Also  \n [Keywords](../cpp/keywords-cpp.md)   \n [Fundamental Types](../cpp/fundamental-types-cpp.md)   \n [Data Type Ranges](../cpp/data-type-ranges.md)"}