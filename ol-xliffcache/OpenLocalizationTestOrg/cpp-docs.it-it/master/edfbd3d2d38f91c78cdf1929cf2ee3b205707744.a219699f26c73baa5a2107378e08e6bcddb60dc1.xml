{"nodes":[{"pos":[12,61],"content":"context_unblock_unbalanced Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"context_unblock_unbalanced Class | Microsoft Docs","pos":[0,49]}]},{"pos":[670,702],"content":"context_unblock_unbalanced Class","linkify":"context_unblock_unbalanced Class","nodes":[{"content":"context_unblock_unbalanced Class","pos":[0,32]}]},{"pos":[703,838],"content":"This class describes an exception thrown when calls to the <ph id=\"ph1\">`Block`</ph> and <ph id=\"ph2\">`Unblock`</ph> methods of a <ph id=\"ph3\">`Context`</ph> object are not properly paired.","source":"This class describes an exception thrown when calls to the `Block` and `Unblock` methods of a `Context` object are not properly paired."},{"pos":[847,853],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[937,944],"content":"Members","linkify":"Members","nodes":[{"content":"Members","pos":[0,7]}]},{"pos":[954,973],"content":"Public Constructors","linkify":"Public Constructors","nodes":[{"content":"Public Constructors","pos":[0,19]}]},{"content":"Name","pos":[980,984]},{"content":"Description","pos":[985,996]},{"pos":[1034,1109],"content":"<bpt id=\"p1\">[</bpt>context_unblock_unbalanced::context_unblock_unbalanced Constructor<ept id=\"p1\">](#ctor)</ept>","source":"[context_unblock_unbalanced::context_unblock_unbalanced Constructor](#ctor)"},{"content":"Overloaded.","pos":[1110,1121]},{"content":"Constructs a <ph id=\"ph1\">`context_unblock_unbalanced`</ph> object.","pos":[1122,1171],"source":" Constructs a `context_unblock_unbalanced` object."},{"pos":[1181,1188],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Calls to the <ph id=\"ph1\">`Block`</ph> and <ph id=\"ph2\">`Unblock`</ph> methods of a <ph id=\"ph3\">`Context`</ph> object must always be properly paired.","pos":[1192,1288],"source":"Calls to the `Block` and `Unblock` methods of a `Context` object must always be properly paired."},{"content":"The Concurrency Runtime allows the operations to happen in either order.","pos":[1289,1361]},{"content":"For example, a call to <ph id=\"ph1\">`Block`</ph> can be followed by a call to <ph id=\"ph2\">`Unblock`</ph>, or vice-versa.","pos":[1362,1447],"source":" For example, a call to `Block` can be followed by a call to `Unblock`, or vice-versa."},{"content":"This exception would be thrown if, for instance, two calls to the <ph id=\"ph1\">`Unblock`</ph> method were made in a row, on a <ph id=\"ph2\">`Context`</ph> object which was not blocked.","pos":[1448,1595],"source":" This exception would be thrown if, for instance, two calls to the `Unblock` method were made in a row, on a `Context` object which was not blocked."},{"pos":[1604,1625],"content":"Inheritance Hierarchy","linkify":"Inheritance Hierarchy","nodes":[{"content":"Inheritance Hierarchy","pos":[0,21]}]},{"pos":[1684,1696],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[1700,1720],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> concrt.h","source":"**Header:** concrt.h"},{"pos":[1727,1753],"content":"<bpt id=\"p1\">**</bpt>Namespace:<ept id=\"p1\">**</ept> concurrency","source":"**Namespace:** concurrency"},{"pos":[1763,1850],"content":"<bpt id=\"p1\">&lt;a name=\"ctor\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  context_unblock_unbalanced::context_unblock_unbalanced Constructor","linkify":"<a name=\"ctor\"></a>  context_unblock_unbalanced::context_unblock_unbalanced Constructor","source":"<a name=\"ctor\"></a>  context_unblock_unbalanced::context_unblock_unbalanced Constructor"},{"pos":[1854,1903],"content":"Constructs a <ph id=\"ph1\">`context_unblock_unbalanced`</ph> object.","source":"Constructs a `context_unblock_unbalanced` object."},{"pos":[2051,2061],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"A descriptive message of the error.","pos":[2079,2114]},{"pos":[2123,2131],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"pos":[2135,2184],"content":"<bpt id=\"p1\">[</bpt>concurrency Namespace<ept id=\"p1\">](concurrency-namespace.md)</ept>","source":"[concurrency Namespace](concurrency-namespace.md)"}],"content":"---\ntitle: \"context_unblock_unbalanced Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"concrt/concurrency::context_unblock_unbalanced\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"context_unblock_unbalanced class\"\nms.assetid: a76066c8-19dd-44fa-959a-6941ec1b0d2d\ncaps.latest.revision: 20\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# context_unblock_unbalanced Class\nThis class describes an exception thrown when calls to the `Block` and `Unblock` methods of a `Context` object are not properly paired.  \n  \n## Syntax  \n  \n```  \nclass context_unblock_unbalanced : public std::exception;  \n```  \n  \n## Members  \n  \n### Public Constructors  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[context_unblock_unbalanced::context_unblock_unbalanced Constructor](#ctor)|Overloaded. Constructs a `context_unblock_unbalanced` object.|  \n  \n## Remarks  \n Calls to the `Block` and `Unblock` methods of a `Context` object must always be properly paired. The Concurrency Runtime allows the operations to happen in either order. For example, a call to `Block` can be followed by a call to `Unblock`, or vice-versa. This exception would be thrown if, for instance, two calls to the `Unblock` method were made in a row, on a `Context` object which was not blocked.  \n  \n## Inheritance Hierarchy  \n `exception`  \n  \n `context_unblock_unbalanced`  \n  \n## Requirements  \n **Header:** concrt.h  \n  \n **Namespace:** concurrency  \n  \n##  <a name=\"ctor\"></a>  context_unblock_unbalanced::context_unblock_unbalanced Constructor  \n Constructs a `context_unblock_unbalanced` object.  \n  \n```  \nexplicit _CRTIMP context_unblock_unbalanced(_In_z_ const char* _Message) throw();\n\n \ncontext_unblock_unbalanced() throw();\n```  \n  \n### Parameters  \n `_Message`  \n A descriptive message of the error.  \n  \n## See Also  \n [concurrency Namespace](concurrency-namespace.md)\n"}