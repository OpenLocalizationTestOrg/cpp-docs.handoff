{"nodes":[{"pos":[12,52],"content":"CMFCTabDropTarget Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"CMFCTabDropTarget Class | Microsoft Docs","pos":[0,40]}]},{"pos":[625,648],"content":"CMFCTabDropTarget Class","linkify":"CMFCTabDropTarget Class","nodes":[{"content":"CMFCTabDropTarget Class","pos":[0,23]}]},{"content":"Provides the communication mechanism between a tab control and the OLE libraries.","pos":[649,730]},{"pos":[739,745],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[819,826],"content":"Members","linkify":"Members","nodes":[{"content":"Members","pos":[0,7]}]},{"pos":[836,855],"content":"Public Constructors","linkify":"Public Constructors","nodes":[{"content":"Public Constructors","pos":[0,19]}]},{"content":"Name","pos":[876,880]},{"content":"Description","pos":[881,892]},{"content":"Default constructor.","pos":[936,956]},{"pos":[967,981],"content":"Public Methods","linkify":"Public Methods","nodes":[{"content":"Public Methods","pos":[0,14]}]},{"content":"Name","pos":[1002,1006]},{"content":"Description","pos":[1007,1018]},{"pos":[1023,1088],"content":"<bpt id=\"p1\">[</bpt>CMFCTabDropTarget::OnDragEnter<ept id=\"p1\">](#cmfctabdroptarget__ondragenter)</ept>","source":"[CMFCTabDropTarget::OnDragEnter](#cmfctabdroptarget__ondragenter)"},{"content":"Called by the framework when the user drags an object into a tab window.","pos":[1089,1161]},{"content":"(Overrides <bpt id=\"p1\">[</bpt>COleDropTarget::OnDragEnter<ept id=\"p1\">](../../mfc/reference/coledroptarget-class.md#coledroptarget__ondragenter)</ept>.)","pos":[1162,1277],"source":" (Overrides [COleDropTarget::OnDragEnter](../../mfc/reference/coledroptarget-class.md#coledroptarget__ondragenter).)"},{"pos":[1282,1347],"content":"<bpt id=\"p1\">[</bpt>CMFCTabDropTarget::OnDragLeave<ept id=\"p1\">](#cmfctabdroptarget__ondragleave)</ept>","source":"[CMFCTabDropTarget::OnDragLeave](#cmfctabdroptarget__ondragleave)"},{"content":"Called by the framework when the user drags an object outside of the tab window that has focus.","pos":[1348,1443]},{"content":"(Overrides <bpt id=\"p1\">[</bpt>COleDropTarget::OnDragLeave<ept id=\"p1\">](../../mfc/reference/coledroptarget-class.md#coledroptarget__ondragleave)</ept>.)","pos":[1444,1559],"source":" (Overrides [COleDropTarget::OnDragLeave](../../mfc/reference/coledroptarget-class.md#coledroptarget__ondragleave).)"},{"pos":[1564,1627],"content":"<bpt id=\"p1\">[</bpt>CMFCTabDropTarget::OnDragOver<ept id=\"p1\">](#cmfctabdroptarget__ondragover)</ept>","source":"[CMFCTabDropTarget::OnDragOver](#cmfctabdroptarget__ondragover)"},{"content":"Called by the framework when the user drags an object onto the tab window that has focus.","pos":[1628,1717]},{"content":"(Overrides <bpt id=\"p1\">[</bpt>COleDropTarget::OnDragOver<ept id=\"p1\">](../../mfc/reference/coledroptarget-class.md#coledroptarget__ondragover)</ept>.)","pos":[1718,1831],"source":" (Overrides [COleDropTarget::OnDragOver](../../mfc/reference/coledroptarget-class.md#coledroptarget__ondragover).)"},{"pos":[1836,1895],"content":"<bpt id=\"p1\">[</bpt>CMFCTabDropTarget::OnDropEx<ept id=\"p1\">](#cmfctabdroptarget__ondropex)</ept>","source":"[CMFCTabDropTarget::OnDropEx](#cmfctabdroptarget__ondropex)"},{"content":"Called by the framework when the user releases the mouse button at the end of a drag operation.","pos":[1896,1991]},{"content":"(Overrides <bpt id=\"p1\">[</bpt>COleDropTarget::OnDropEx<ept id=\"p1\">](../../mfc/reference/coledroptarget-class.md#coledroptarget__ondropex)</ept>.)","pos":[1992,2101],"source":" (Overrides [COleDropTarget::OnDropEx](../../mfc/reference/coledroptarget-class.md#coledroptarget__ondropex).)"},{"pos":[2106,2165],"content":"<bpt id=\"p1\">[</bpt>CMFCTabDropTarget::Register<ept id=\"p1\">](#cmfctabdroptarget__register)</ept>","source":"[CMFCTabDropTarget::Register](#cmfctabdroptarget__register)"},{"content":"Registers the control as one that can be the target of an OLE drag-and-drop operation.","pos":[2166,2252]},{"pos":[2263,2270],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This class provides drag-and-drop support to the <ph id=\"ph1\">`CMFCBaseTabCtrl`</ph> class.","pos":[2274,2347],"source":"This class provides drag-and-drop support to the `CMFCBaseTabCtrl` class."},{"content":"If your application initializes the OLE libraries by using the <bpt id=\"p1\">[</bpt>AfxOleInit<ept id=\"p1\">](ole-initialization.md#afxoleinit)</ept> function, <ph id=\"ph1\">`CMFCBaseTabCtrl`</ph> objects register themselves for drag-and-drop operations.","pos":[2348,2543],"source":" If your application initializes the OLE libraries by using the [AfxOleInit](ole-initialization.md#afxoleinit) function, `CMFCBaseTabCtrl` objects register themselves for drag-and-drop operations."},{"content":"The <ph id=\"ph1\">`CMFCTabDropTarget`</ph> class extends its base class by making the tab that is under the cursor when a drag operation occurs active.","pos":[2550,2682],"source":"The `CMFCTabDropTarget` class extends its base class by making the tab that is under the cursor when a drag operation occurs active."},{"content":"For more information about drag-and-drop operations, see <bpt id=\"p1\">[</bpt>Drag and Drop (OLE)<ept id=\"p1\">](../../mfc/drag-and-drop-ole.md)</ept>.","pos":[2683,2794],"source":" For more information about drag-and-drop operations, see [Drag and Drop (OLE)](../../mfc/drag-and-drop-ole.md)."},{"pos":[2803,2810],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[2814,2925],"content":"The following example demonstrates how to construct a <ph id=\"ph1\">`CMFCTabDropTarget`</ph> object and use its <ph id=\"ph2\">`Register`</ph> method.","source":"The following example demonstrates how to construct a `CMFCTabDropTarget` object and use its `Register` method."},{"pos":[2932,3032],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_MFC_RibbonApp#39<ept id=\"p2\">](../../mfc/reference/codesnippet/cpp/cmfctabdroptarget-class_1.cpp)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_MFC_RibbonApp#39](../../mfc/reference/codesnippet/cpp/cmfctabdroptarget-class_1.cpp)]"},{"pos":[3041,3062],"content":"Inheritance Hierarchy","linkify":"Inheritance Hierarchy","nodes":[{"content":"Inheritance Hierarchy","pos":[0,21]}]},{"pos":[3066,3113],"content":"<bpt id=\"p1\">[</bpt>CObject<ept id=\"p1\">](../../mfc/reference/cobject-class.md)</ept>","source":"[CObject](../../mfc/reference/cobject-class.md)"},{"pos":[3120,3173],"content":"<bpt id=\"p1\">[</bpt>CCmdTarget<ept id=\"p1\">](../../mfc/reference/ccmdtarget-class.md)</ept>","source":"[CCmdTarget](../../mfc/reference/ccmdtarget-class.md)"},{"pos":[3180,3241],"content":"<bpt id=\"p1\">[</bpt>COleDropTarget<ept id=\"p1\">](../../mfc/reference/coledroptarget-class.md)</ept>","source":"[COleDropTarget](../../mfc/reference/coledroptarget-class.md)"},{"pos":[3248,3315],"content":"<bpt id=\"p1\">[</bpt>CMFCTabDropTarget<ept id=\"p1\">](../../mfc/reference/cmfctabdroptarget-class.md)</ept>","source":"[CMFCTabDropTarget](../../mfc/reference/cmfctabdroptarget-class.md)"},{"pos":[3324,3336],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[3340,3368],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> afxbasetabctrl.h","source":"**Header:** afxbasetabctrl.h"},{"pos":[3378,3455],"content":"<bpt id=\"p1\">&lt;a name=\"cmfctabdroptarget__ondragenter\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCTabDropTarget::OnDragEnter","linkify":"<a name=\"cmfctabdroptarget__ondragenter\"></a>  CMFCTabDropTarget::OnDragEnter","source":"<a name=\"cmfctabdroptarget__ondragenter\"></a>  CMFCTabDropTarget::OnDragEnter"},{"content":"Called by the framework when the user drags an object into a tab window.","pos":[3459,3531]},{"pos":[3684,3694],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[3715,3724]},{"content":"Description","pos":[3725,3736]},{"pos":[3741,3752],"content":"[in] <ph id=\"ph1\">`pWnd`</ph>","source":"[in] `pWnd`"},{"content":"Unused.","pos":[3753,3760]},{"pos":[3765,3783],"content":"[in] <ph id=\"ph1\">`pDataObject`</ph>","source":"[in] `pDataObject`"},{"content":"A pointer to the object that the user drags.","pos":[3784,3828]},{"pos":[3833,3850],"content":"[in] <ph id=\"ph1\">`dwKeyState`</ph>","source":"[in] `dwKeyState`"},{"content":"Contains the state of the modifier keys.","pos":[3851,3891]},{"content":"This is a combination of any number of the following: <ph id=\"ph1\">`MK_CONTROL`</ph>, <ph id=\"ph2\">`MK_SHIFT`</ph>, <ph id=\"ph3\">`MK_ALT`</ph>, <ph id=\"ph4\">`MK_LBUTTON`</ph>, <ph id=\"ph5\">`MK_MBUTTON`</ph>, and <ph id=\"ph6\">`MK_RBUTTON`</ph>.","pos":[3892,4027],"source":" This is a combination of any number of the following: `MK_CONTROL`, `MK_SHIFT`, `MK_ALT`, `MK_LBUTTON`, `MK_MBUTTON`, and `MK_RBUTTON`."},{"pos":[4032,4044],"content":"[in] <ph id=\"ph1\">`point`</ph>","source":"[in] `point`"},{"content":"The location of the cursor in client coordinates.","pos":[4045,4094]},{"pos":[4105,4117],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The effect that results if the drop occurs at the location specified by <ph id=\"ph1\">`point`</ph>.","pos":[4121,4201],"source":"The effect that results if the drop occurs at the location specified by `point`."},{"content":"It can be one or more of the following:","pos":[4202,4241]},{"pos":[4378,4385],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This method returns <ph id=\"ph1\">`DROPEFFECT_NONE`</ph> if the toolbar framework is not in customization mode or the Clipboard data format is unavailable.","pos":[4389,4525],"source":"This method returns `DROPEFFECT_NONE` if the toolbar framework is not in customization mode or the Clipboard data format is unavailable."},{"content":"Otherwise, it returns the result of calling <ph id=\"ph1\">`CMFCBaseTabCtrl::OnDragEnter`</ph> with the provided parameters.","pos":[4526,4630],"source":" Otherwise, it returns the result of calling `CMFCBaseTabCtrl::OnDragEnter` with the provided parameters."},{"content":"For more information about customization mode, see <bpt id=\"p1\">[</bpt>CMFCToolBar::IsCustomizeMode<ept id=\"p1\">](../../mfc/reference/cmfctoolbar-class.md#cmfctoolbar__iscustomizemode)</ept>.","pos":[4637,4790],"source":"For more information about customization mode, see [CMFCToolBar::IsCustomizeMode](../../mfc/reference/cmfctoolbar-class.md#cmfctoolbar__iscustomizemode)."},{"content":"For more information about Clipboard data formats, see <bpt id=\"p1\">[</bpt>COleDataObject::IsDataAvailable<ept id=\"p1\">](../../mfc/reference/coledataobject-class.md#coledataobject__isdataavailable)</ept>.","pos":[4791,4957],"source":" For more information about Clipboard data formats, see [COleDataObject::IsDataAvailable](../../mfc/reference/coledataobject-class.md#coledataobject__isdataavailable)."},{"pos":[4967,5044],"content":"<bpt id=\"p1\">&lt;a name=\"cmfctabdroptarget__ondragleave\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCTabDropTarget::OnDragLeave","linkify":"<a name=\"cmfctabdroptarget__ondragleave\"></a>  CMFCTabDropTarget::OnDragLeave","source":"<a name=\"cmfctabdroptarget__ondragleave\"></a>  CMFCTabDropTarget::OnDragLeave"},{"content":"Called by the framework when the user drags an object outside of the tab window that has focus.","pos":[5048,5143]},{"pos":[5206,5216],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[5237,5246]},{"content":"Description","pos":[5247,5258]},{"pos":[5263,5274],"content":"[in] <ph id=\"ph1\">`pWnd`</ph>","source":"[in] `pWnd`"},{"content":"Unused.","pos":[5275,5282]},{"pos":[5293,5300],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[5304,5394],"content":"This method calls the <ph id=\"ph1\">`CMFCBaseTabCtrl::OnDragLeave`</ph> method to perform the drag operation.","source":"This method calls the `CMFCBaseTabCtrl::OnDragLeave` method to perform the drag operation."},{"pos":[5404,5479],"content":"<bpt id=\"p1\">&lt;a name=\"cmfctabdroptarget__ondragover\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCTabDropTarget::OnDragOver","linkify":"<a name=\"cmfctabdroptarget__ondragover\"></a>  CMFCTabDropTarget::OnDragOver","source":"<a name=\"cmfctabdroptarget__ondragover\"></a>  CMFCTabDropTarget::OnDragOver"},{"content":"Called by the framework when the user drags an object onto the tab window that has focus.","pos":[5483,5572]},{"pos":[5724,5734],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[5755,5764]},{"content":"Description","pos":[5765,5776]},{"pos":[5781,5792],"content":"[in] <ph id=\"ph1\">`pWnd`</ph>","source":"[in] `pWnd`"},{"content":"Unused.","pos":[5793,5800]},{"pos":[5805,5823],"content":"[in] <ph id=\"ph1\">`pDataObject`</ph>","source":"[in] `pDataObject`"},{"content":"A pointer to the object that the user drags.","pos":[5824,5868]},{"pos":[5873,5890],"content":"[in] <ph id=\"ph1\">`dwKeyState`</ph>","source":"[in] `dwKeyState`"},{"content":"Contains the state of the modifier keys.","pos":[5891,5931]},{"content":"This is a combination of any number of the following: <ph id=\"ph1\">`MK_CONTROL`</ph>, <ph id=\"ph2\">`MK_SHIFT`</ph>, <ph id=\"ph3\">`MK_ALT`</ph>, <ph id=\"ph4\">`MK_LBUTTON`</ph>, <ph id=\"ph5\">`MK_MBUTTON`</ph>, and <ph id=\"ph6\">`MK_RBUTTON`</ph>.","pos":[5932,6067],"source":" This is a combination of any number of the following: `MK_CONTROL`, `MK_SHIFT`, `MK_ALT`, `MK_LBUTTON`, `MK_MBUTTON`, and `MK_RBUTTON`."},{"pos":[6072,6084],"content":"[in] <ph id=\"ph1\">`point`</ph>","source":"[in] `point`"},{"content":"The location of the mouse pointer in client coordinates.","pos":[6085,6141]},{"pos":[6152,6164],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The effect that results if the drop occurs at the location specified by <ph id=\"ph1\">`point`</ph>.","pos":[6168,6248],"source":"The effect that results if the drop occurs at the location specified by `point`."},{"content":"It can be one or more of the following:","pos":[6249,6288]},{"pos":[6425,6432],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This method makes the tab that is under the cursor when a drag operation occurs active.","pos":[6436,6523]},{"content":"It returns <ph id=\"ph1\">`DROPEFFECT_NONE`</ph> if the toolbar framework is not in customization mode or the Clipboard data format is unavailable.","pos":[6524,6651],"source":" It returns `DROPEFFECT_NONE` if the toolbar framework is not in customization mode or the Clipboard data format is unavailable."},{"content":"Otherwise, it returns the result of calling <ph id=\"ph1\">`CMFCBaseTabCtrl::OnDragOver`</ph> with the provided parameters.","pos":[6652,6755],"source":" Otherwise, it returns the result of calling `CMFCBaseTabCtrl::OnDragOver` with the provided parameters."},{"content":"For more information about customization mode, see <bpt id=\"p1\">[</bpt>CMFCToolBar::IsCustomizeMode<ept id=\"p1\">](../../mfc/reference/cmfctoolbar-class.md#cmfctoolbar__iscustomizemode)</ept>.","pos":[6762,6915],"source":"For more information about customization mode, see [CMFCToolBar::IsCustomizeMode](../../mfc/reference/cmfctoolbar-class.md#cmfctoolbar__iscustomizemode)."},{"content":"For more information about Clipboard data formats, see <bpt id=\"p1\">[</bpt>COleDataObject::IsDataAvailable<ept id=\"p1\">](../../mfc/reference/coledataobject-class.md#coledataobject__isdataavailable)</ept>.","pos":[6916,7082],"source":" For more information about Clipboard data formats, see [COleDataObject::IsDataAvailable](../../mfc/reference/coledataobject-class.md#coledataobject__isdataavailable)."},{"pos":[7092,7163],"content":"<bpt id=\"p1\">&lt;a name=\"cmfctabdroptarget__ondropex\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCTabDropTarget::OnDropEx","linkify":"<a name=\"cmfctabdroptarget__ondropex\"></a>  CMFCTabDropTarget::OnDropEx","source":"<a name=\"cmfctabdroptarget__ondropex\"></a>  CMFCTabDropTarget::OnDropEx"},{"content":"Called by the framework when the user releases the mouse button at the end of a drag operation.","pos":[7167,7262]},{"pos":[7444,7454],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[7475,7484]},{"content":"Description","pos":[7485,7496]},{"pos":[7501,7512],"content":"[in] <ph id=\"ph1\">`pWnd`</ph>","source":"[in] `pWnd`"},{"content":"Unused.","pos":[7513,7520]},{"pos":[7525,7543],"content":"[in] <ph id=\"ph1\">`pDataObject`</ph>","source":"[in] `pDataObject`"},{"content":"A pointer to the object that the user drags.","pos":[7544,7588]},{"pos":[7593,7610],"content":"[in] <ph id=\"ph1\">`dropEffect`</ph>","source":"[in] `dropEffect`"},{"content":"The default drop operation.","pos":[7611,7638]},{"pos":[7643,7658],"content":"[in] <ph id=\"ph1\">`dropList`</ph>","source":"[in] `dropList`"},{"content":"Unused.","pos":[7659,7666]},{"pos":[7671,7683],"content":"[in] <ph id=\"ph1\">`point`</ph>","source":"[in] `point`"},{"content":"The location of the mouse pointer in client coordinates.","pos":[7684,7740]},{"pos":[7751,7763],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The resulting drop effect.","pos":[7767,7793]},{"content":"It can be one or more of the following:","pos":[7794,7833]},{"pos":[7970,7977],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This method calls <ph id=\"ph1\">`CMFCBaseTabCtrl::OnDrop`</ph> if the toolbar framework is in customization mode and the Clipboard data format is available.","pos":[7981,8118],"source":"This method calls `CMFCBaseTabCtrl::OnDrop` if the toolbar framework is in customization mode and the Clipboard data format is available."},{"content":"If the call to <ph id=\"ph1\">`CMFCBaseTabCtrl::OnDrop`</ph> returns a nonzero value, this method returns the default drop effect specified by <ph id=\"ph2\">`dropEffect`</ph>.","pos":[8119,8255],"source":" If the call to `CMFCBaseTabCtrl::OnDrop` returns a nonzero value, this method returns the default drop effect specified by `dropEffect`."},{"content":"Otherwise, this method returns <ph id=\"ph1\">`DROPEFFECT_NONE`</ph>.","pos":[8256,8305],"source":" Otherwise, this method returns `DROPEFFECT_NONE`."},{"content":"For more information about drop effects, see <bpt id=\"p1\">[</bpt>COleDropTarget::OnDropEx<ept id=\"p1\">](../../mfc/reference/coledroptarget-class.md#coledroptarget__ondropex)</ept>.","pos":[8306,8448],"source":" For more information about drop effects, see [COleDropTarget::OnDropEx](../../mfc/reference/coledroptarget-class.md#coledroptarget__ondropex)."},{"content":"For more information about customization mode, see <bpt id=\"p1\">[</bpt>CMFCToolBar::IsCustomizeMode<ept id=\"p1\">](../../mfc/reference/cmfctoolbar-class.md#cmfctoolbar__iscustomizemode)</ept>.","pos":[8455,8608],"source":"For more information about customization mode, see [CMFCToolBar::IsCustomizeMode](../../mfc/reference/cmfctoolbar-class.md#cmfctoolbar__iscustomizemode)."},{"content":"For more information about Clipboard data formats, see <bpt id=\"p1\">[</bpt>COleDataObject::IsDataAvailable<ept id=\"p1\">](../../mfc/reference/coledataobject-class.md#coledataobject__isdataavailable)</ept>.","pos":[8609,8775],"source":" For more information about Clipboard data formats, see [COleDataObject::IsDataAvailable](../../mfc/reference/coledataobject-class.md#coledataobject__isdataavailable)."},{"pos":[8785,8856],"content":"<bpt id=\"p1\">&lt;a name=\"cmfctabdroptarget__register\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CMFCTabDropTarget::Register","linkify":"<a name=\"cmfctabdroptarget__register\"></a>  CMFCTabDropTarget::Register","source":"<a name=\"cmfctabdroptarget__register\"></a>  CMFCTabDropTarget::Register"},{"content":"Registers the control as one that can be the target of an OLE drag-and-drop operation.","pos":[8860,8946]},{"pos":[9011,9021],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[9042,9051]},{"content":"Description","pos":[9052,9063]},{"pos":[9068,9081],"content":"[in] <ph id=\"ph1\">`pOwner`</ph>","source":"[in] `pOwner`"},{"content":"The tab control to register as a drop target.","pos":[9082,9127]},{"pos":[9138,9150],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Nonzero if registration was successful; otherwise 0.","pos":[9154,9206]},{"pos":[9216,9223],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[9227,9395],"content":"This method calls <bpt id=\"p1\">[</bpt>COleDropTarget::Register<ept id=\"p1\">](../../mfc/reference/coledroptarget-class.md#coledroptarget__register)</ept> to register the control for drag-and-drop operations.","source":"This method calls [COleDropTarget::Register](../../mfc/reference/coledroptarget-class.md#coledroptarget__register) to register the control for drag-and-drop operations."},{"pos":[9404,9412],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Hierarchy Chart<ept id=\"p1\">](../../mfc/hierarchy-chart.md)</ept><ph id=\"ph1\"> </ph>","pos":[9416,9464],"source":"[Hierarchy Chart](../../mfc/hierarchy-chart.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Classes<ept id=\"p1\">](../../mfc/reference/mfc-classes.md)</ept><ph id=\"ph1\"> </ph>","pos":[9467,9514],"source":" [Classes](../../mfc/reference/mfc-classes.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Drag and Drop (OLE)<ept id=\"p1\">](../../mfc/drag-and-drop-ole.md)</ept>","pos":[9517,9571],"source":" [Drag and Drop (OLE)](../../mfc/drag-and-drop-ole.md)"}],"content":"---\ntitle: \"CMFCTabDropTarget Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"CMFCTabDropTarget\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"CMFCTabDropTarget class\"\nms.assetid: 9777b7b6-10da-4c4b-b1d1-7ea795b0f1cb\ncaps.latest.revision: 22\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# CMFCTabDropTarget Class\nProvides the communication mechanism between a tab control and the OLE libraries.  \n  \n## Syntax  \n  \n```  \nclass CMFCTabDropTarget : public COleDropTarget  \n```  \n  \n## Members  \n  \n### Public Constructors  \n  \n|||  \n|-|-|  \n|Name|Description|  \n|`CMFCTabDropTarget::CMFCTabDropTarget`|Default constructor.|  \n  \n### Public Methods  \n  \n|||  \n|-|-|  \n|Name|Description|  \n|[CMFCTabDropTarget::OnDragEnter](#cmfctabdroptarget__ondragenter)|Called by the framework when the user drags an object into a tab window. (Overrides [COleDropTarget::OnDragEnter](../../mfc/reference/coledroptarget-class.md#coledroptarget__ondragenter).)|  \n|[CMFCTabDropTarget::OnDragLeave](#cmfctabdroptarget__ondragleave)|Called by the framework when the user drags an object outside of the tab window that has focus. (Overrides [COleDropTarget::OnDragLeave](../../mfc/reference/coledroptarget-class.md#coledroptarget__ondragleave).)|  \n|[CMFCTabDropTarget::OnDragOver](#cmfctabdroptarget__ondragover)|Called by the framework when the user drags an object onto the tab window that has focus. (Overrides [COleDropTarget::OnDragOver](../../mfc/reference/coledroptarget-class.md#coledroptarget__ondragover).)|  \n|[CMFCTabDropTarget::OnDropEx](#cmfctabdroptarget__ondropex)|Called by the framework when the user releases the mouse button at the end of a drag operation. (Overrides [COleDropTarget::OnDropEx](../../mfc/reference/coledroptarget-class.md#coledroptarget__ondropex).)|  \n|[CMFCTabDropTarget::Register](#cmfctabdroptarget__register)|Registers the control as one that can be the target of an OLE drag-and-drop operation.|  \n  \n### Remarks  \n This class provides drag-and-drop support to the `CMFCBaseTabCtrl` class. If your application initializes the OLE libraries by using the [AfxOleInit](ole-initialization.md#afxoleinit) function, `CMFCBaseTabCtrl` objects register themselves for drag-and-drop operations.  \n  \n The `CMFCTabDropTarget` class extends its base class by making the tab that is under the cursor when a drag operation occurs active. For more information about drag-and-drop operations, see [Drag and Drop (OLE)](../../mfc/drag-and-drop-ole.md).  \n  \n## Example  \n The following example demonstrates how to construct a `CMFCTabDropTarget` object and use its `Register` method.  \n  \n [!code-cpp[NVC_MFC_RibbonApp#39](../../mfc/reference/codesnippet/cpp/cmfctabdroptarget-class_1.cpp)]  \n  \n## Inheritance Hierarchy  \n [CObject](../../mfc/reference/cobject-class.md)  \n  \n [CCmdTarget](../../mfc/reference/ccmdtarget-class.md)  \n  \n [COleDropTarget](../../mfc/reference/coledroptarget-class.md)  \n  \n [CMFCTabDropTarget](../../mfc/reference/cmfctabdroptarget-class.md)  \n  \n## Requirements  \n **Header:** afxbasetabctrl.h  \n  \n##  <a name=\"cmfctabdroptarget__ondragenter\"></a>  CMFCTabDropTarget::OnDragEnter  \n Called by the framework when the user drags an object into a tab window.  \n  \n```  \nvirtual DROPEFFECT OnDragEnter(\n    CWnd* pWnd,  \n    COleDataObject* pDataObject,  \n    DWORD dwKeyState,  \n    CPoint point);\n```  \n  \n### Parameters  \n  \n|||  \n|-|-|  \n|Parameter|Description|  \n|[in] `pWnd`|Unused.|  \n|[in] `pDataObject`|A pointer to the object that the user drags.|  \n|[in] `dwKeyState`|Contains the state of the modifier keys. This is a combination of any number of the following: `MK_CONTROL`, `MK_SHIFT`, `MK_ALT`, `MK_LBUTTON`, `MK_MBUTTON`, and `MK_RBUTTON`.|  \n|[in] `point`|The location of the cursor in client coordinates.|  \n  \n### Return Value  \n The effect that results if the drop occurs at the location specified by `point`. It can be one or more of the following:  \n  \n- `DROPEFFECT_NONE`  \n  \n- `DROPEFFECT_COPY`  \n  \n- `DROPEFFECT_MOVE`  \n  \n- `DROPEFFECT_LINK`  \n  \n- `DROPEFFECT_SCROLL`  \n  \n### Remarks  \n This method returns `DROPEFFECT_NONE` if the toolbar framework is not in customization mode or the Clipboard data format is unavailable. Otherwise, it returns the result of calling `CMFCBaseTabCtrl::OnDragEnter` with the provided parameters.  \n  \n For more information about customization mode, see [CMFCToolBar::IsCustomizeMode](../../mfc/reference/cmfctoolbar-class.md#cmfctoolbar__iscustomizemode). For more information about Clipboard data formats, see [COleDataObject::IsDataAvailable](../../mfc/reference/coledataobject-class.md#coledataobject__isdataavailable).  \n  \n##  <a name=\"cmfctabdroptarget__ondragleave\"></a>  CMFCTabDropTarget::OnDragLeave  \n Called by the framework when the user drags an object outside of the tab window that has focus.  \n  \n```  \nvirtual void OnDragLeave(CWnd* pWnd);\n```  \n  \n### Parameters  \n  \n|||  \n|-|-|  \n|Parameter|Description|  \n|[in] `pWnd`|Unused.|  \n  \n### Remarks  \n This method calls the `CMFCBaseTabCtrl::OnDragLeave` method to perform the drag operation.  \n  \n##  <a name=\"cmfctabdroptarget__ondragover\"></a>  CMFCTabDropTarget::OnDragOver  \n Called by the framework when the user drags an object onto the tab window that has focus.  \n  \n```  \nvirtual DROPEFFECT OnDragOver(\n    CWnd* pWnd,  \n    COleDataObject* pDataObject,  \n    DWORD dwKeyState,  \n    CPoint point);\n```  \n  \n### Parameters  \n  \n|||  \n|-|-|  \n|Parameter|Description|  \n|[in] `pWnd`|Unused.|  \n|[in] `pDataObject`|A pointer to the object that the user drags.|  \n|[in] `dwKeyState`|Contains the state of the modifier keys. This is a combination of any number of the following: `MK_CONTROL`, `MK_SHIFT`, `MK_ALT`, `MK_LBUTTON`, `MK_MBUTTON`, and `MK_RBUTTON`.|  \n|[in] `point`|The location of the mouse pointer in client coordinates.|  \n  \n### Return Value  \n The effect that results if the drop occurs at the location specified by `point`. It can be one or more of the following:  \n  \n- `DROPEFFECT_NONE`  \n  \n- `DROPEFFECT_COPY`  \n  \n- `DROPEFFECT_MOVE`  \n  \n- `DROPEFFECT_LINK`  \n  \n- `DROPEFFECT_SCROLL`  \n  \n### Remarks  \n This method makes the tab that is under the cursor when a drag operation occurs active. It returns `DROPEFFECT_NONE` if the toolbar framework is not in customization mode or the Clipboard data format is unavailable. Otherwise, it returns the result of calling `CMFCBaseTabCtrl::OnDragOver` with the provided parameters.  \n  \n For more information about customization mode, see [CMFCToolBar::IsCustomizeMode](../../mfc/reference/cmfctoolbar-class.md#cmfctoolbar__iscustomizemode). For more information about Clipboard data formats, see [COleDataObject::IsDataAvailable](../../mfc/reference/coledataobject-class.md#coledataobject__isdataavailable).  \n  \n##  <a name=\"cmfctabdroptarget__ondropex\"></a>  CMFCTabDropTarget::OnDropEx  \n Called by the framework when the user releases the mouse button at the end of a drag operation.  \n  \n```  \nvirtual DROPEFFECT OnDropEx(\n    CWnd* pWnd,  \n    COleDataObject* pDataObject,  \n    DROPEFFECT dropEffect,  \n    DROPEFFECT dropList,  \n    CPoint point);\n```  \n  \n### Parameters  \n  \n|||  \n|-|-|  \n|Parameter|Description|  \n|[in] `pWnd`|Unused.|  \n|[in] `pDataObject`|A pointer to the object that the user drags.|  \n|[in] `dropEffect`|The default drop operation.|  \n|[in] `dropList`|Unused.|  \n|[in] `point`|The location of the mouse pointer in client coordinates.|  \n  \n### Return Value  \n The resulting drop effect. It can be one or more of the following:  \n  \n- `DROPEFFECT_NONE`  \n  \n- `DROPEFFECT_COPY`  \n  \n- `DROPEFFECT_MOVE`  \n  \n- `DROPEFFECT_LINK`  \n  \n- `DROPEFFECT_SCROLL`  \n  \n### Remarks  \n This method calls `CMFCBaseTabCtrl::OnDrop` if the toolbar framework is in customization mode and the Clipboard data format is available. If the call to `CMFCBaseTabCtrl::OnDrop` returns a nonzero value, this method returns the default drop effect specified by `dropEffect`. Otherwise, this method returns `DROPEFFECT_NONE`. For more information about drop effects, see [COleDropTarget::OnDropEx](../../mfc/reference/coledroptarget-class.md#coledroptarget__ondropex).  \n  \n For more information about customization mode, see [CMFCToolBar::IsCustomizeMode](../../mfc/reference/cmfctoolbar-class.md#cmfctoolbar__iscustomizemode). For more information about Clipboard data formats, see [COleDataObject::IsDataAvailable](../../mfc/reference/coledataobject-class.md#coledataobject__isdataavailable).  \n  \n##  <a name=\"cmfctabdroptarget__register\"></a>  CMFCTabDropTarget::Register  \n Registers the control as one that can be the target of an OLE drag-and-drop operation.  \n  \n```  \nBOOL Register(CMFCBaseTabCtrl *pOwner);\n```  \n  \n### Parameters  \n  \n|||  \n|-|-|  \n|Parameter|Description|  \n|[in] `pOwner`|The tab control to register as a drop target.|  \n  \n### Return Value  \n Nonzero if registration was successful; otherwise 0.  \n  \n### Remarks  \n This method calls [COleDropTarget::Register](../../mfc/reference/coledroptarget-class.md#coledroptarget__register) to register the control for drag-and-drop operations.  \n  \n## See Also  \n [Hierarchy Chart](../../mfc/hierarchy-chart.md)   \n [Classes](../../mfc/reference/mfc-classes.md)   \n [Drag and Drop (OLE)](../../mfc/drag-and-drop-ole.md)\n\n\n\n"}