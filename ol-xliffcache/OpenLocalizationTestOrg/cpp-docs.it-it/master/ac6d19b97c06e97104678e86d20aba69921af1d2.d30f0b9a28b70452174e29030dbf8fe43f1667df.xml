{"nodes":[{"pos":[12,47],"content":"bad_weak_ptr Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"bad_weak_ptr Class | Microsoft Docs","pos":[0,35]}]},{"pos":[778,796],"content":"bad_weak_ptr Class","linkify":"bad_weak_ptr Class","nodes":[{"content":"bad_weak_ptr Class","pos":[0,18]}]},{"content":"Reports bad weak_ptr exception.","pos":[797,828]},{"pos":[837,843],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[984,991],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The class describes an exception that can be thrown from the <bpt id=\"p1\">[</bpt>shared_ptr Class<ept id=\"p1\">](../standard-library/shared-ptr-class.md)</ept> constructor that takes an argument of type <bpt id=\"p2\">[</bpt>weak_ptr Class<ept id=\"p2\">](../standard-library/weak-ptr-class.md)</ept>.","pos":[995,1215],"source":"The class describes an exception that can be thrown from the [shared_ptr Class](../standard-library/shared-ptr-class.md) constructor that takes an argument of type [weak_ptr Class](../standard-library/weak-ptr-class.md)."},{"content":"The member function <ph id=\"ph1\">`what`</ph> returns <ph id=\"ph2\">`\"bad_weak_ptr\"`</ph>.","pos":[1216,1268],"source":" The member function `what` returns `\"bad_weak_ptr\"`."},{"pos":[1277,1284],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[1866,1878],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[1882,1903],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> <ph id=\"ph1\">\\&lt;</ph>memory&gt;","source":"**Header:** \\<memory>"},{"pos":[1910,1928],"content":"<bpt id=\"p1\">**</bpt>Namespace:<ept id=\"p1\">**</ept> std","source":"**Namespace:** std"},{"pos":[1937,1945],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"pos":[1949,2004],"content":"<bpt id=\"p1\">[</bpt>weak_ptr Class<ept id=\"p1\">](../standard-library/weak-ptr-class.md)</ept>","source":"[weak_ptr Class](../standard-library/weak-ptr-class.md)"}],"content":"---\ntitle: \"bad_weak_ptr Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"memory/std::tr1::bad_weak_ptr\"\n  - \"std::tr1::bad_weak_ptr\"\n  - \"bad_weak_ptr\"\n  - \"tr1::bad_weak_ptr\"\n  - \"tr1.bad_weak_ptr\"\n  - \"std.tr1.bad_weak_ptr\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"bad_weak_ptr class [TR1]\"\n  - \"bad_weak_ptr class\"\nms.assetid: a09336d5-7237-4480-ab6b-3787e0e6025e\ncaps.latest.revision: 20\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# bad_weak_ptr Class\nReports bad weak_ptr exception.  \n  \n## Syntax  \n  \n```  \nclass bad_weak_ptr : public std::exception \n {  \npublic:  \n    bad_weak_ptr();\n    const char *what() throw();\n };  \n```  \n  \n## Remarks  \n The class describes an exception that can be thrown from the [shared_ptr Class](../standard-library/shared-ptr-class.md) constructor that takes an argument of type [weak_ptr Class](../standard-library/weak-ptr-class.md). The member function `what` returns `\"bad_weak_ptr\"`.  \n  \n## Example  \n  \n```cpp  \n// std_tr1__memory__bad_weak_ptr.cpp   \n// compile with: /EHsc   \n#include <memory>   \n#include <iostream>   \n \nint main()\n{\n    std::weak_ptr<int> wp;\n\n    {\n        std::shared_ptr<int> sp(new int);\n        wp = sp;\n    }\n\n    try\n    {\n        std::shared_ptr<int> sp1(wp); // weak_ptr has expired   \n    }\n    catch (const std::bad_weak_ptr&)\n    {\n        std::cout << \"bad weak pointer\" << std::endl;\n    }\n    catch (...)\n    {\n        std::cout << \"unknown exception\" << std::endl;\n    }\n\n    return (0);\n}\n```  \n  \n```Output  \nbad weak pointer  \n```  \n  \n## Requirements  \n **Header:** \\<memory>  \n  \n **Namespace:** std  \n  \n## See Also  \n [weak_ptr Class](../standard-library/weak-ptr-class.md)\n"}