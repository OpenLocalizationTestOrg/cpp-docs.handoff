{"nodes":[{"pos":[12,66],"content":"ODBC Driver Requirements for Dynasets | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"ODBC Driver Requirements for Dynasets | Microsoft Docs","pos":[0,54]}]},{"content":"ODBC Driver Requirements for Dynasets","pos":[719,756]},{"content":"In the MFC ODBC database classes, dynasets are recordsets with dynamic properties; they remain synchronized with the data source in certain ways.","pos":[757,902]},{"content":"MFC dynasets (but not forward-only recordsets) require an ODBC driver with Level 2 API conformance.","pos":[903,1002]},{"content":"If the driver for your <bpt id=\"p1\">[</bpt>data source<ept id=\"p1\">](../../data/odbc/data-source-odbc.md)</ept> conforms to the Level 1 API set, you can still use both updateable and read-only snapshots and forward-only recordsets, but not dynasets.","pos":[1003,1214],"source":" If the driver for your [data source](../../data/odbc/data-source-odbc.md) conforms to the Level 1 API set, you can still use both updateable and read-only snapshots and forward-only recordsets, but not dynasets."},{"content":"However, a Level 1 driver can support dynasets if it supports extended fetch and keyset-driven cursors.","pos":[1215,1318]},{"content":"In ODBC terminology, dynasets and snapshots are referred to as cursors.","pos":[1325,1396]},{"content":"A cursor is a mechanism used for keeping track of its position in a recordset.","pos":[1397,1475]},{"content":"For more information about driver requirements for dynasets, see <bpt id=\"p1\">[</bpt>Dynaset<ept id=\"p1\">](../../data/odbc/dynaset.md)</ept>.","pos":[1476,1579],"source":" For more information about driver requirements for dynasets, see [Dynaset](../../data/odbc/dynaset.md)."},{"content":"For more information about cursors, see the <bpt id=\"p1\">[</bpt>Open Database Connectivity (ODBC)<ept id=\"p1\">](https://msdn.microsoft.com/en-us/library/ms710252.aspx)</ept> SDK in the MSDN documentation.","pos":[1580,1746],"source":" For more information about cursors, see the [Open Database Connectivity (ODBC)](https://msdn.microsoft.com/en-us/library/ms710252.aspx) SDK in the MSDN documentation."},{"pos":[1754,2137],"content":"[!NOTE]\n For updateable recordsets, your ODBC driver must support either positioned update statements or the **::SQLSetPos** ODBC API function. If both are supported, MFC uses **::SQLSetPos** for efficiency. Alternatively, for snapshots, you can use the cursor library, which provides the required support for updateable snapshots (static cursors and positioned update statements).","leadings":["","> "],"nodes":[{"content":" For updateable recordsets, your ODBC driver must support either positioned update statements or the **::SQLSetPos** ODBC API function. If both are supported, MFC uses **::SQLSetPos** for efficiency. Alternatively, for snapshots, you can use the cursor library, which provides the required support for updateable snapshots (static cursors and positioned update statements).","pos":[8,381],"nodes":[{"content":"For updateable recordsets, your ODBC driver must support either positioned update statements or the <bpt id=\"p1\">**</bpt>::SQLSetPos<ept id=\"p1\">**</ept> ODBC API function.","pos":[1,135],"source":" For updateable recordsets, your ODBC driver must support either positioned update statements or the **::SQLSetPos** ODBC API function."},{"content":"If both are supported, MFC uses <bpt id=\"p1\">**</bpt>::SQLSetPos<ept id=\"p1\">**</ept> for efficiency.","pos":[136,199],"source":" If both are supported, MFC uses **::SQLSetPos** for efficiency."},{"content":"Alternatively, for snapshots, you can use the cursor library, which provides the required support for updateable snapshots (static cursors and positioned update statements).","pos":[200,373]}]}]},{"content":"See Also","pos":[2146,2154]},{"content":"ODBC Basics","pos":[2159,2170]}],"content":"---\ntitle: \"ODBC Driver Requirements for Dynasets | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"ODBC recordsets, dynasets\"\n  - \"drivers, for dynasets\"\n  - \"drivers, ODBC\"\n  - \"recordsets, dynasets\"\n  - \"dynasets\"\n  - \"ODBC drivers, dynasets\"\nms.assetid: 585cc67b-4d92-404b-9903-d769cd17badc\ncaps.latest.revision: 7\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# ODBC Driver Requirements for Dynasets\nIn the MFC ODBC database classes, dynasets are recordsets with dynamic properties; they remain synchronized with the data source in certain ways. MFC dynasets (but not forward-only recordsets) require an ODBC driver with Level 2 API conformance. If the driver for your [data source](../../data/odbc/data-source-odbc.md) conforms to the Level 1 API set, you can still use both updateable and read-only snapshots and forward-only recordsets, but not dynasets. However, a Level 1 driver can support dynasets if it supports extended fetch and keyset-driven cursors.  \n  \n In ODBC terminology, dynasets and snapshots are referred to as cursors. A cursor is a mechanism used for keeping track of its position in a recordset. For more information about driver requirements for dynasets, see [Dynaset](../../data/odbc/dynaset.md). For more information about cursors, see the [Open Database Connectivity (ODBC)](https://msdn.microsoft.com/en-us/library/ms710252.aspx) SDK in the MSDN documentation.  \n  \n> [!NOTE]\n>  For updateable recordsets, your ODBC driver must support either positioned update statements or the **::SQLSetPos** ODBC API function. If both are supported, MFC uses **::SQLSetPos** for efficiency. Alternatively, for snapshots, you can use the cursor library, which provides the required support for updateable snapshots (static cursors and positioned update statements).  \n  \n## See Also  \n [ODBC Basics](../../data/odbc/odbc-basics.md)"}