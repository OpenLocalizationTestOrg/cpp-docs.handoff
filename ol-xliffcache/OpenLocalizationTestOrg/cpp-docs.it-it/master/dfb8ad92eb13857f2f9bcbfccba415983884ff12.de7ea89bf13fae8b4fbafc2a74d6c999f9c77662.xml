{"nodes":[{"pos":[12,69],"content":"A.26   Using the threadprivate Directive | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"A.26   Using the threadprivate Directive | Microsoft Docs","pos":[0,57]}]},{"content":"A.26   Using the threadprivate Directive","pos":[549,589]},{"pos":[590,791],"content":"The following examples demonstrate how to use the <ph id=\"ph1\">`threadprivate`</ph> directive  (<bpt id=\"p1\">[</bpt>Section 2.7.1<ept id=\"p1\">](../../parallel/openmp/2-7-1-threadprivate-directive.md)</ept> on page 23) to give each thread a separate counter.","source":"The following examples demonstrate how to use the `threadprivate` directive  ([Section 2.7.1](../../parallel/openmp/2-7-1-threadprivate-directive.md) on page 23) to give each thread a separate counter."},{"content":"Example 1:","pos":[800,810]},{"content":"Example 2:","pos":[955,965]}],"content":"---\ntitle: \"A.26   Using the threadprivate Directive | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"C++\"\nms.assetid: 6eda76c2-c4f1-4208-a900-e0ea98a53eca\ncaps.latest.revision: 7\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# A.26   Using the threadprivate Directive\nThe following examples demonstrate how to use the `threadprivate` directive  ([Section 2.7.1](../../parallel/openmp/2-7-1-threadprivate-directive.md) on page 23) to give each thread a separate counter.  \n  \n **Example 1:**  \n  \n```  \nint counter = 0;  \n#pragma omp threadprivate(counter)  \n  \nint sub()  \n{  \n    counter++;  \n    return(counter);  \n}  \n```  \n  \n **Example 2:**  \n  \n```  \nint sub()  \n{  \n    static int counter = 0;  \n    #pragma omp threadprivate(counter)  \n    counter++;  \n    return(counter);  \n}  \n```"}