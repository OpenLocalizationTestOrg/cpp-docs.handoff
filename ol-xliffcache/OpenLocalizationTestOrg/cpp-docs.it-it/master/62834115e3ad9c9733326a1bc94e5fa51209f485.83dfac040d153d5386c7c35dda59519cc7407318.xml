{"nodes":[{"pos":[12,49],"content":"Compiler Error C2327 | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Compiler Error C2327 | Microsoft Docs","pos":[0,37]}]},{"pos":[598,618],"content":"Compiler Error C2327","linkify":"Compiler Error C2327","nodes":[{"content":"Compiler Error C2327","pos":[0,20]}]},{"content":"'symbol' : is not a type name, static, or enumerator","pos":[619,671]},{"content":"Code within a nested class attempts to access a member of the enclosing class that is not a type name, a static member, or an enumerator.","pos":[678,815]},{"pos":[822,931],"content":"When compiling with <bpt id=\"p1\">**</bpt>/clr<ept id=\"p1\">**</ept>, a common cause for C2327 is a property with the same name as the property type.","source":"When compiling with **/clr**, a common cause for C2327 is a property with the same name as the property type."},{"content":"The following sample generates C2327:","pos":[938,975]},{"content":"C2327 can also occur if the name of a type is hidden by the name of a member:","pos":[1294,1371]},{"content":"C2327 can also fire in this situation, where you need to fully specify the data type of the parameter:","pos":[1549,1651]},{"content":"The following sample generates C2327:","pos":[1832,1869]},{"content":"The following sample shows C2327 when a property has the same name as the property type:","pos":[2551,2639]}],"content":"---\ntitle: \"Compiler Error C2327 | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"error-reference\"\nf1_keywords: \n  - \"C2327\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"C2327\"\nms.assetid: 95278c95-d1f9-4487-ad27-53311f5e8112\ncaps.latest.revision: 12\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Compiler Error C2327\n'symbol' : is not a type name, static, or enumerator  \n  \n Code within a nested class attempts to access a member of the enclosing class that is not a type name, a static member, or an enumerator.  \n  \n When compiling with **/clr**, a common cause for C2327 is a property with the same name as the property type.  \n  \n The following sample generates C2327:  \n  \n```  \n// C2327.cpp  \nint x;  \nclass enclose {  \npublic:  \n   int x;  \n   static int s;  \n   class inner {  \n      void f() {  \n         x = 1;   // C2327; enclose::x is not static  \n         s = 1;   // ok; enclose::s is static  \n         ::x = 1;   // ok; ::x refers to global  \n      }  \n   };  \n};  \n```  \n  \n C2327 can also occur if the name of a type is hidden by the name of a member:  \n  \n```  \n// C2327b.cpp  \nclass X {};  \n  \nclass S {  \n   X X;  \n   // try the following line instead  \n   // X MyX;  \n   X other;   // C2327, rename member X  \n};  \n```  \n  \n C2327 can also fire in this situation, where you need to fully specify the data type of the parameter:  \n  \n```  \n// C2327c.cpp  \n// compile with: /c  \nstruct A {};  \n  \nstruct B {  \n   int A;  \n   void f(A a) {   // C2327  \n   void f2(struct A a) {}   // OK  \n   }  \n};  \n```  \n  \n The following sample generates C2327:  \n  \n```  \n// C2327d.cpp  \n// compile with: /clr /c  \nusing namespace System;  \n  \nnamespace NA {  \n   public enum class E : Int32 {  \n      one = 1,  \n      two = 2,  \n      three = 3  \n   };  \n  \n   public ref class A {  \n   private:  \n      E m_e;  \n   public:  \n      property E E {  \n         NA::E get() {  \n            return m_e;  \n         }  \n         // At set, compiler doesn't know whether E is get_E or   \n         // Enum E, therefore fully qualifying Enum E is necessary  \n         void set( E e ) {   // C2327  \n            // try the following line instead  \n            // void set(NA::E e) {  \n            m_e = e;  \n         }  \n      }  \n   };  \n}  \n```  \n  \nThe following sample shows C2327 when a property has the same name as the property type:  \n  \n```  \n// C2327f.cpp  \n// compile with: /clr /c  \npublic value class Address {};  \n  \npublic ref class Person {  \npublic:  \n   property Address Address {  \n      ::Address get() {     \n         return address;  \n      }  \n      void set(Address addr) {   // C2327  \n      // try the following line instead  \n      // set(::Address addr) {  \n         address = addr;   \n      }  \n   }  \nprivate:  \n   Address address;   // C2327  \n   // try the following line instead  \n   // ::Address address;  \n};  \n```  \n"}