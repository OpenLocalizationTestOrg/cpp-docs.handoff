{"nodes":[{"pos":[12,44],"content":"CTimeSpan Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"CTimeSpan Class | Microsoft Docs","pos":[0,32]}]},{"pos":[777,792],"content":"CTimeSpan Class","linkify":"CTimeSpan Class","nodes":[{"content":"CTimeSpan Class","pos":[0,15]}]},{"content":"An amount of time, which is internally stored as the number of seconds in the time span.","pos":[793,881]},{"pos":[890,896],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[934,941],"content":"Members","linkify":"Members","nodes":[{"content":"Members","pos":[0,7]}]},{"pos":[951,970],"content":"Public Constructors","linkify":"Public Constructors","nodes":[{"content":"Public Constructors","pos":[0,19]}]},{"content":"Name","pos":[977,981]},{"content":"Description","pos":[982,993]},{"pos":[1031,1076],"content":"<bpt id=\"p1\">[</bpt>CTimeSpan::CTimeSpan<ept id=\"p1\">](#ctimespan__ctimespan)</ept>","source":"[CTimeSpan::CTimeSpan](#ctimespan__ctimespan)"},{"pos":[1077,1124],"content":"Constructs <ph id=\"ph1\">`CTimeSpan`</ph> objects in various ways.","source":"Constructs `CTimeSpan` objects in various ways."},{"pos":[1135,1149],"content":"Public Methods","linkify":"Public Methods","nodes":[{"content":"Public Methods","pos":[0,14]}]},{"content":"Name","pos":[1156,1160]},{"content":"Description","pos":[1161,1172]},{"pos":[1210,1249],"content":"<bpt id=\"p1\">[</bpt>CTimeSpan::Format<ept id=\"p1\">](#ctimespan__format)</ept>","source":"[CTimeSpan::Format](#ctimespan__format)"},{"pos":[1250,1297],"content":"Converts a <ph id=\"ph1\">`CTimeSpan`</ph> into a formatted string.","source":"Converts a `CTimeSpan` into a formatted string."},{"pos":[1302,1343],"content":"<bpt id=\"p1\">[</bpt>CTimeSpan::GetDays<ept id=\"p1\">](#ctimespan__getdays)</ept>","source":"[CTimeSpan::GetDays](#ctimespan__getdays)"},{"pos":[1344,1424],"content":"Returns a value that represents the number of complete days in this <ph id=\"ph1\">`CTimeSpan`</ph>.","source":"Returns a value that represents the number of complete days in this `CTimeSpan`."},{"pos":[1429,1472],"content":"<bpt id=\"p1\">[</bpt>CTimeSpan::GetHours<ept id=\"p1\">](#ctimespan__gethours)</ept>","source":"[CTimeSpan::GetHours](#ctimespan__gethours)"},{"content":"Returns a value that represents the number of hours in the current day (–23 through 23).","pos":[1473,1561]},{"pos":[1566,1613],"content":"<bpt id=\"p1\">[</bpt>CTimeSpan::GetMinutes<ept id=\"p1\">](#ctimespan__getminutes)</ept>","source":"[CTimeSpan::GetMinutes](#ctimespan__getminutes)"},{"content":"Returns a value that represents the number of minutes in the current hour (–59 through 59).","pos":[1614,1705]},{"pos":[1710,1757],"content":"<bpt id=\"p1\">[</bpt>CTimeSpan::GetSeconds<ept id=\"p1\">](#ctimespan__getseconds)</ept>","source":"[CTimeSpan::GetSeconds](#ctimespan__getseconds)"},{"content":"Returns a value that represents the number of seconds in the current minute (–59 through 59).","pos":[1758,1851]},{"pos":[1856,1905],"content":"<bpt id=\"p1\">[</bpt>CTimeSpan::GetTimeSpan<ept id=\"p1\">](#ctimespan__gettimespan)</ept>","source":"[CTimeSpan::GetTimeSpan](#ctimespan__gettimespan)"},{"pos":[1906,1950],"content":"Returns the value of the <ph id=\"ph1\">`CTimeSpan`</ph> object.","source":"Returns the value of the `CTimeSpan` object."},{"pos":[1955,2008],"content":"<bpt id=\"p1\">[</bpt>CTimeSpan::GetTotalHours<ept id=\"p1\">](#ctimespan__gettotalhours)</ept>","source":"[CTimeSpan::GetTotalHours](#ctimespan__gettotalhours)"},{"pos":[2009,2096],"content":"Returns a value that represents the total number of complete hours in this <ph id=\"ph1\">`CTimeSpan`</ph>.","source":"Returns a value that represents the total number of complete hours in this `CTimeSpan`."},{"pos":[2101,2158],"content":"<bpt id=\"p1\">[</bpt>CTimeSpan::GetTotalMinutes<ept id=\"p1\">](#ctimespan__gettotalminutes)</ept>","source":"[CTimeSpan::GetTotalMinutes](#ctimespan__gettotalminutes)"},{"pos":[2159,2248],"content":"Returns a value that represents the total number of complete minutes in this <ph id=\"ph1\">`CTimeSpan`</ph>.","source":"Returns a value that represents the total number of complete minutes in this `CTimeSpan`."},{"pos":[2253,2310],"content":"<bpt id=\"p1\">[</bpt>CTimeSpan::GetTotalSeconds<ept id=\"p1\">](#ctimespan__gettotalseconds)</ept>","source":"[CTimeSpan::GetTotalSeconds](#ctimespan__gettotalseconds)"},{"pos":[2311,2400],"content":"Returns a value that represents the total number of complete seconds in this <ph id=\"ph1\">`CTimeSpan`</ph>.","source":"Returns a value that represents the total number of complete seconds in this `CTimeSpan`."},{"pos":[2405,2454],"content":"<bpt id=\"p1\">[</bpt>CTimeSpan::Serialize64<ept id=\"p1\">](#ctimespan__serialize64)</ept>","source":"[CTimeSpan::Serialize64](#ctimespan__serialize64)"},{"content":"Serializes data to or from an archive.","pos":[2455,2493]},{"pos":[2504,2513],"content":"Operators","linkify":"Operators","nodes":[{"content":"Operators","pos":[0,9]}]},{"pos":[2534,2577],"content":"<bpt id=\"p1\">[</bpt>operator + –<ept id=\"p1\">](#ctimespan__operator__add_-)</ept>","source":"[operator + –](#ctimespan__operator__add_-)"},{"pos":[2578,2617],"content":"Adds and subtracts <ph id=\"ph1\">`CTimeSpan`</ph> objects.","source":"Adds and subtracts `CTimeSpan` objects."},{"pos":[2622,2673],"content":"<bpt id=\"p1\">[</bpt>operator += –=<ept id=\"p1\">](#ctimespan__operator__add_eq_-_eq)</ept>","source":"[operator += –=](#ctimespan__operator__add_eq_-_eq)"},{"pos":[2674,2743],"content":"Adds and subtracts a <ph id=\"ph1\">`CTimeSpan`</ph> object to and from this <ph id=\"ph2\">`CTimeSpan`</ph>.","source":"Adds and subtracts a `CTimeSpan` object to and from this `CTimeSpan`."},{"pos":[2748,2801],"content":"<bpt id=\"p1\">[</bpt>operator == &lt; etc.<ept id=\"p1\">](#ctimespan_comparison_operators)</ept>","source":"[operator == < etc.](#ctimespan_comparison_operators)"},{"content":"Compares two relative time values.","pos":[2802,2836]},{"pos":[2846,2853],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[2857,2896],"content":"<ph id=\"ph1\">`CTimeSpan`</ph> does not have a base class.","source":"`CTimeSpan` does not have a base class."},{"pos":[2903,3002],"content":"<ph id=\"ph1\">`CTimeSpan`</ph> functions convert seconds to various combinations of days, hours, minutes, and seconds.","source":"`CTimeSpan` functions convert seconds to various combinations of days, hours, minutes, and seconds."},{"pos":[3009,3090],"content":"The <ph id=\"ph1\">`CTimeSpan`</ph> object is stored in a <bpt id=\"p1\">**</bpt>__time64_t<ept id=\"p1\">**</ept> structure, which is 8 bytes.","source":"The `CTimeSpan` object is stored in a **__time64_t** structure, which is 8 bytes."},{"pos":[3097,3200],"content":"A companion class, <bpt id=\"p1\">[</bpt>CTime<ept id=\"p1\">](../../atl-mfc-shared/reference/ctime-class.md)</ept>, represents an absolute time.","source":"A companion class, [CTime](../../atl-mfc-shared/reference/ctime-class.md), represents an absolute time."},{"content":"The <ph id=\"ph1\">`CTime`</ph> and <ph id=\"ph2\">`CTimeSpan`</ph> classes are not designed for derivation.","pos":[3207,3275],"source":"The `CTime` and `CTimeSpan` classes are not designed for derivation."},{"content":"Because there are no virtual functions, the size of both <ph id=\"ph1\">`CTime`</ph> and <ph id=\"ph2\">`CTimeSpan`</ph> objects is exactly 8 bytes.","pos":[3276,3384],"source":" Because there are no virtual functions, the size of both `CTime` and `CTimeSpan` objects is exactly 8 bytes."},{"content":"Most member functions are inline.","pos":[3385,3418]},{"pos":[3425,3643],"content":"For more information on using <ph id=\"ph1\">`CTimeSpan`</ph>, see the articles <bpt id=\"p1\">[</bpt>Date and Time<ept id=\"p1\">](../../atl-mfc-shared/date-and-time.md)</ept>, and <bpt id=\"p2\">[</bpt>Time Management<ept id=\"p2\">](../../c-runtime-library/time-management.md)</ept> in the <bpt id=\"p3\">*</bpt>Run-Time Library Reference<ept id=\"p3\">*</ept>.","source":"For more information on using `CTimeSpan`, see the articles [Date and Time](../../atl-mfc-shared/date-and-time.md), and [Time Management](../../c-runtime-library/time-management.md) in the *Run-Time Library Reference*."},{"pos":[3652,3664],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[3668,3689],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> atltime.h","source":"**Header:** atltime.h"},{"pos":[3699,3776],"content":"<bpt id=\"p1\">&lt;a name=\"ctimespan_comparison_operators\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CTimeSpan Comparison Operators","linkify":"<a name=\"ctimespan_comparison_operators\"></a>  CTimeSpan Comparison Operators","source":"<a name=\"ctimespan_comparison_operators\"></a>  CTimeSpan Comparison Operators"},{"content":"Comparison operators.","pos":[3780,3801]},{"pos":[4109,4119],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"The object to compare.","pos":[4136,4158]},{"pos":[4168,4180],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"These operators compare two relative time values.","pos":[4184,4233]},{"content":"They return <bpt id=\"p1\">**</bpt>true<ept id=\"p1\">**</ept> if the condition is true; otherwise <bpt id=\"p2\">**</bpt>false<ept id=\"p2\">**</ept>.","pos":[4234,4301],"source":" They return **true** if the condition is true; otherwise **false**."},{"pos":[4311,4318],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[4322,4419],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_ATLMFC_Utilities#169<ept id=\"p2\">](../../atl-mfc-shared/codesnippet/cpp/ctimespan-class_1.cpp)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_ATLMFC_Utilities#169](../../atl-mfc-shared/codesnippet/cpp/ctimespan-class_1.cpp)]"},{"pos":[4429,4486],"content":"<bpt id=\"p1\">&lt;a name=\"ctimespan__ctimespan\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CTimeSpan::CTimeSpan","linkify":"<a name=\"ctimespan__ctimespan\"></a>  CTimeSpan::CTimeSpan","source":"<a name=\"ctimespan__ctimespan\"></a>  CTimeSpan::CTimeSpan"},{"pos":[4490,4537],"content":"Constructs <ph id=\"ph1\">`CTimeSpan`</ph> objects in various ways.","source":"Constructs `CTimeSpan` objects in various ways."},{"pos":[4696,4706],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"<bpt id=\"p1\">*</bpt>timeSpanSrc<ept id=\"p1\">*</ept>","pos":[4710,4723],"source":"*timeSpanSrc*"},{"content":"A <ph id=\"ph1\">`CTimeSpan`</ph> object that already exists.","pos":[4727,4768],"source":" A `CTimeSpan` object that already exists."},{"content":"A <bpt id=\"p1\">**</bpt>__time64_t<ept id=\"p1\">**</ept> time value, which is the number of seconds in the time span.","pos":[4785,4862],"source":" A **__time64_t** time value, which is the number of seconds in the time span."},{"content":"In Visual C++ versions 6.0 and earlier, <ph id=\"ph1\">`time`</ph> was a value of <ph id=\"ph2\">`time_t`</ph>.","pos":[4863,4934],"source":" In Visual C++ versions 6.0 and earlier, `time` was a value of `time_t`."},{"content":"Visual C++ .NET or later silently converts a <ph id=\"ph1\">`time_t`</ph> parameter to <bpt id=\"p1\">**</bpt>__time64_t<ept id=\"p1\">**</ept>.","pos":[4935,5017],"source":" Visual C++ .NET or later silently converts a `time_t` parameter to **__time64_t**."},{"content":"<ph id=\"ph1\">`lDays`</ph>, <ph id=\"ph2\">`nHours`</ph>, <ph id=\"ph3\">`nMins`</ph>, <ph id=\"ph4\">`nSecs`</ph>","pos":[5024,5059],"source":"`lDays`, `nHours`, `nMins`, `nSecs`"},{"content":"Days, hours, minutes, and seconds, respectively.","pos":[5063,5111]},{"pos":[5121,5128],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"All these constructors create a new <ph id=\"ph1\">`CTimeSpan`</ph> object initialized with the specified relative time.","pos":[5132,5232],"source":"All these constructors create a new `CTimeSpan` object initialized with the specified relative time."},{"content":"Each constructor is described below:","pos":[5233,5269]},{"pos":[5277,5342],"content":"<bpt id=\"p1\">**</bpt>CTimeSpan( );<ept id=\"p1\">**</ept> Constructs an uninitialized <ph id=\"ph1\">`CTimeSpan`</ph> object.","source":"**CTimeSpan( );** Constructs an uninitialized `CTimeSpan` object."},{"pos":[5350,5448],"content":"<bpt id=\"p1\">**</bpt>CTimeSpan( const CTimeSpan&amp; );<ept id=\"p1\">**</ept> Constructs a <ph id=\"ph1\">`CTimeSpan`</ph> object from another <ph id=\"ph2\">`CTimeSpan`</ph> value.","source":"**CTimeSpan( const CTimeSpan& );** Constructs a `CTimeSpan` object from another `CTimeSpan` value."},{"pos":[5456,5544],"content":"<bpt id=\"p1\">**</bpt>CTimeSpan( __time64_t );<ept id=\"p1\">**</ept> Constructs a <ph id=\"ph1\">`CTimeSpan`</ph> object from a <bpt id=\"p2\">**</bpt>__time64_t<ept id=\"p2\">**</ept> type.","source":"**CTimeSpan( __time64_t );** Constructs a `CTimeSpan` object from a **__time64_t** type."},{"pos":[5552,5698],"content":"<bpt id=\"p1\">**</bpt>CTimeSpan( LONG<ept id=\"p1\">**</ept>, <bpt id=\"p2\">**</bpt>int, int, int );<ept id=\"p2\">**</ept> Constructs a <ph id=\"ph1\">`CTimeSpan`</ph> object from components with each component constrained to the following ranges:","source":"**CTimeSpan( LONG**, **int, int, int );** Constructs a `CTimeSpan` object from components with each component constrained to the following ranges:"},{"content":"Component","pos":[5709,5718]},{"content":"Range","pos":[5719,5724]},{"content":"0–25,000 (approximately)","pos":[5777,5801]},{"content":"0–23","pos":[5819,5823]},{"content":"0–59","pos":[5840,5844]},{"content":"0–59","pos":[5861,5865]},{"content":"Note that the Debug version of the Microsoft Foundation Class Library asserts if one or more of the time-day components is out of range.","pos":[5873,6009]},{"content":"It is your responsibility to validate the arguments prior to calling.","pos":[6010,6079]},{"pos":[6089,6096],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[6100,6197],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_ATLMFC_Utilities#162<ept id=\"p2\">](../../atl-mfc-shared/codesnippet/cpp/ctimespan-class_2.cpp)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_ATLMFC_Utilities#162](../../atl-mfc-shared/codesnippet/cpp/ctimespan-class_2.cpp)]"},{"pos":[6207,6258],"content":"<bpt id=\"p1\">&lt;a name=\"ctimespan__format\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CTimeSpan::Format","linkify":"<a name=\"ctimespan__format\"></a>  CTimeSpan::Format","source":"<a name=\"ctimespan__format\"></a>  CTimeSpan::Format"},{"pos":[6262,6328],"content":"Generates a formatted string that corresponds to this <ph id=\"ph1\">`CTimeSpan`</ph>.","source":"Generates a formatted string that corresponds to this `CTimeSpan`."},{"pos":[6464,6474],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"<ph id=\"ph1\">`pFormat`</ph>, <ph id=\"ph2\">`pszFormat`</ph>","pos":[6478,6500],"source":"`pFormat`, `pszFormat`"},{"content":"A formatting string similar to the <ph id=\"ph1\">`printf`</ph> formatting string.","pos":[6504,6566],"source":" A formatting string similar to the `printf` formatting string."},{"content":"Formatting codes, preceded by a percent ( <ph id=\"ph1\">`%`</ph>) sign, are replaced by the corresponding <ph id=\"ph2\">`CTimeSpan`</ph> component.","pos":[6567,6676],"source":" Formatting codes, preceded by a percent ( `%`) sign, are replaced by the corresponding `CTimeSpan` component."},{"content":"Other characters in the formatting string are copied unchanged to the returned string.","pos":[6677,6763]},{"content":"The value and meaning of the formatting codes for <bpt id=\"p1\">**</bpt>Format<ept id=\"p1\">**</ept> are listed below:","pos":[6764,6842],"source":" The value and meaning of the formatting codes for **Format** are listed below:"},{"pos":[6850,6887],"content":"<bpt id=\"p1\">**</bpt>%D<ept id=\"p1\">**</ept> Total days in this <ph id=\"ph1\">`CTimeSpan`</ph>","source":"**%D** Total days in this `CTimeSpan`"},{"pos":[6895,6926],"content":"<bpt id=\"p1\">**</bpt>%H<ept id=\"p1\">**</ept> Hours in the current day","source":"**%H** Hours in the current day"},{"pos":[6934,6968],"content":"<bpt id=\"p1\">**</bpt>%M<ept id=\"p1\">**</ept> Minutes in the current hour","source":"**%M** Minutes in the current hour"},{"pos":[6976,7012],"content":"<bpt id=\"p1\">**</bpt>%S<ept id=\"p1\">**</ept> Seconds in the current minute","source":"**%S** Seconds in the current minute"},{"pos":[7020,7039],"content":"<bpt id=\"p1\">**</bpt><ph id=\"ph1\">%%</ph><ept id=\"p1\">**</ept> Percent sign","source":"**%%** Percent sign"},{"pos":[7046,7104],"content":"`nID`  \nThe ID of the string that identifies this format.","leadings":[""," "],"nodes":[{"content":"The ID of the string that identifies this format.","pos":[8,57]}]},{"pos":[7114,7126],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[7130,7182],"content":"A <ph id=\"ph1\">`CString`</ph> object that contains the formatted time.","source":"A `CString` object that contains the formatted time."},{"pos":[7192,7199],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The Debug version of the library checks the formatting codes and asserts if the code is not in the list above.","pos":[7203,7313]},{"pos":[7323,7330],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[7334,7431],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_ATLMFC_Utilities#163<ept id=\"p2\">](../../atl-mfc-shared/codesnippet/cpp/ctimespan-class_3.cpp)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_ATLMFC_Utilities#163](../../atl-mfc-shared/codesnippet/cpp/ctimespan-class_3.cpp)]"},{"pos":[7441,7494],"content":"<bpt id=\"p1\">&lt;a name=\"ctimespan__getdays\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CTimeSpan::GetDays","linkify":"<a name=\"ctimespan__getdays\"></a>  CTimeSpan::GetDays","source":"<a name=\"ctimespan__getdays\"></a>  CTimeSpan::GetDays"},{"pos":[7498,7578],"content":"Returns a value that represents the number of complete days in this <ph id=\"ph1\">`CTimeSpan`</ph>.","source":"Returns a value that represents the number of complete days in this `CTimeSpan`."},{"pos":[7635,7647],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Returns the number of complete 24-hour days in the time span.","pos":[7651,7712]},{"content":"This value may be negative if the time span is negative.","pos":[7713,7769]},{"pos":[7779,7786],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Note that Daylight Savings Time can cause <ph id=\"ph1\">`GetDays`</ph> to return a potentially surprising result.","pos":[7790,7884],"source":"Note that Daylight Savings Time can cause `GetDays` to return a potentially surprising result."},{"content":"For example, when DST is in effect, <bpt id=\"p1\">**</bpt>GetDays<ept id=\"p1\">**</ept> reports the number of days between April 1 and May 1 as 29, not 30, because one day in April is shortened by an hour and therefore does not count as a complete day.","pos":[7885,8097],"source":" For example, when DST is in effect, **GetDays** reports the number of days between April 1 and May 1 as 29, not 30, because one day in April is shortened by an hour and therefore does not count as a complete day."},{"pos":[8107,8114],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[8118,8215],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_ATLMFC_Utilities#164<ept id=\"p2\">](../../atl-mfc-shared/codesnippet/cpp/ctimespan-class_4.cpp)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_ATLMFC_Utilities#164](../../atl-mfc-shared/codesnippet/cpp/ctimespan-class_4.cpp)]"},{"pos":[8225,8280],"content":"<bpt id=\"p1\">&lt;a name=\"ctimespan__gethours\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CTimeSpan::GetHours","linkify":"<a name=\"ctimespan__gethours\"></a>  CTimeSpan::GetHours","source":"<a name=\"ctimespan__gethours\"></a>  CTimeSpan::GetHours"},{"content":"Returns a value that represents the number of hours in the current day (–23 through 23).","pos":[8284,8372]},{"pos":[8426,8438],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Returns the number of hours in the current day.","pos":[8442,8489]},{"content":"The range is –23 through 23.","pos":[8490,8518]},{"pos":[8528,8535],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[8539,8636],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_ATLMFC_Utilities#165<ept id=\"p2\">](../../atl-mfc-shared/codesnippet/cpp/ctimespan-class_5.cpp)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_ATLMFC_Utilities#165](../../atl-mfc-shared/codesnippet/cpp/ctimespan-class_5.cpp)]"},{"pos":[8646,8705],"content":"<bpt id=\"p1\">&lt;a name=\"ctimespan__getminutes\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CTimeSpan::GetMinutes","linkify":"<a name=\"ctimespan__getminutes\"></a>  CTimeSpan::GetMinutes","source":"<a name=\"ctimespan__getminutes\"></a>  CTimeSpan::GetMinutes"},{"content":"Returns a value that represents the number of minutes in the current hour (–59 through 59).","pos":[8709,8800]},{"pos":[8856,8868],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Returns the number of minutes in the current hour.","pos":[8872,8922]},{"content":"The range is –59 through 59.","pos":[8923,8951]},{"pos":[8961,8968],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[8972,9025],"content":"See the example for <bpt id=\"p1\">[</bpt>GetHours<ept id=\"p1\">](#ctimespan__gethours)</ept>.","source":"See the example for [GetHours](#ctimespan__gethours)."},{"pos":[9035,9094],"content":"<bpt id=\"p1\">&lt;a name=\"ctimespan__getseconds\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CTimeSpan::GetSeconds","linkify":"<a name=\"ctimespan__getseconds\"></a>  CTimeSpan::GetSeconds","source":"<a name=\"ctimespan__getseconds\"></a>  CTimeSpan::GetSeconds"},{"content":"Returns a value that represents the number of seconds in the current minute (–59 through 59).","pos":[9098,9191]},{"pos":[9247,9259],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Returns the number of seconds in the current minute.","pos":[9263,9315]},{"content":"The range is –59 through 59.","pos":[9316,9344]},{"pos":[9354,9361],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[9365,9418],"content":"See the example for <bpt id=\"p1\">[</bpt>GetHours<ept id=\"p1\">](#ctimespan__gethours)</ept>.","source":"See the example for [GetHours](#ctimespan__gethours)."},{"pos":[9428,9489],"content":"<bpt id=\"p1\">&lt;a name=\"ctimespan__gettimespan\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CTimeSpan::GetTimeSpan","linkify":"<a name=\"ctimespan__gettimespan\"></a>  CTimeSpan::GetTimeSpan","source":"<a name=\"ctimespan__gettimespan\"></a>  CTimeSpan::GetTimeSpan"},{"pos":[9493,9537],"content":"Returns the value of the <ph id=\"ph1\">`CTimeSpan`</ph> object.","source":"Returns the value of the `CTimeSpan` object."},{"pos":[9616,9628],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[9632,9684],"content":"Returns the current value of the <ph id=\"ph1\">`CTimeSpan`</ph> object.","source":"Returns the current value of the `CTimeSpan` object."},{"pos":[9694,9759],"content":"<bpt id=\"p1\">&lt;a name=\"ctimespan__gettotalhours\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CTimeSpan::GetTotalHours","linkify":"<a name=\"ctimespan__gettotalhours\"></a>  CTimeSpan::GetTotalHours","source":"<a name=\"ctimespan__gettotalhours\"></a>  CTimeSpan::GetTotalHours"},{"pos":[9763,9850],"content":"Returns a value that represents the total number of complete hours in this <ph id=\"ph1\">`CTimeSpan`</ph>.","source":"Returns a value that represents the total number of complete hours in this `CTimeSpan`."},{"pos":[9913,9925],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[9929,9992],"content":"Returns the total number of complete hours in this <ph id=\"ph1\">`CTimeSpan`</ph>.","source":"Returns the total number of complete hours in this `CTimeSpan`."},{"pos":[10002,10009],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[10013,10110],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_ATLMFC_Utilities#166<ept id=\"p2\">](../../atl-mfc-shared/codesnippet/cpp/ctimespan-class_6.cpp)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_ATLMFC_Utilities#166](../../atl-mfc-shared/codesnippet/cpp/ctimespan-class_6.cpp)]"},{"pos":[10120,10189],"content":"<bpt id=\"p1\">&lt;a name=\"ctimespan__gettotalminutes\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CTimeSpan::GetTotalMinutes","linkify":"<a name=\"ctimespan__gettotalminutes\"></a>  CTimeSpan::GetTotalMinutes","source":"<a name=\"ctimespan__gettotalminutes\"></a>  CTimeSpan::GetTotalMinutes"},{"pos":[10193,10282],"content":"Returns a value that represents the total number of complete minutes in this <ph id=\"ph1\">`CTimeSpan`</ph>.","source":"Returns a value that represents the total number of complete minutes in this `CTimeSpan`."},{"pos":[10347,10359],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[10363,10428],"content":"Returns the total number of complete minutes in this <ph id=\"ph1\">`CTimeSpan`</ph>.","source":"Returns the total number of complete minutes in this `CTimeSpan`."},{"pos":[10438,10445],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[10449,10512],"content":"See the example for <bpt id=\"p1\">[</bpt>GetTotalHours<ept id=\"p1\">](#ctimespan__gettotalhours)</ept>.","source":"See the example for [GetTotalHours](#ctimespan__gettotalhours)."},{"pos":[10522,10591],"content":"<bpt id=\"p1\">&lt;a name=\"ctimespan__gettotalseconds\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CTimeSpan::GetTotalSeconds","linkify":"<a name=\"ctimespan__gettotalseconds\"></a>  CTimeSpan::GetTotalSeconds","source":"<a name=\"ctimespan__gettotalseconds\"></a>  CTimeSpan::GetTotalSeconds"},{"pos":[10595,10684],"content":"Returns a value that represents the total number of complete seconds in this <ph id=\"ph1\">`CTimeSpan`</ph>.","source":"Returns a value that represents the total number of complete seconds in this `CTimeSpan`."},{"pos":[10749,10761],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[10765,10830],"content":"Returns the total number of complete seconds in this <ph id=\"ph1\">`CTimeSpan`</ph>.","source":"Returns the total number of complete seconds in this `CTimeSpan`."},{"pos":[10840,10847],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[10851,10914],"content":"See the example for <bpt id=\"p1\">[</bpt>GetTotalHours<ept id=\"p1\">](#ctimespan__gettotalhours)</ept>.","source":"See the example for [GetTotalHours](#ctimespan__gettotalhours)."},{"pos":[10924,10991],"content":"<bpt id=\"p1\">&lt;a name=\"ctimespan__operator__add_-\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CTimeSpan::operator +, -","linkify":"<a name=\"ctimespan__operator__add_-\"></a>  CTimeSpan::operator +, -","source":"<a name=\"ctimespan__operator__add_-\"></a>  CTimeSpan::operator +, -"},{"pos":[10995,11034],"content":"Adds and subtracts <ph id=\"ph1\">`CTimeSpan`</ph> objects.","source":"Adds and subtracts `CTimeSpan` objects."},{"pos":[11160,11170],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"The value to add to the <ph id=\"ph1\">`CTimeSpan`</ph> object.","pos":[11184,11227],"source":" The value to add to the `CTimeSpan` object."},{"pos":[11237,11249],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[11253,11315],"content":"A <ph id=\"ph1\">`CTimeSpan`</ph> object representing the result of the operation.","source":"A `CTimeSpan` object representing the result of the operation."},{"pos":[11325,11332],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[11336,11429],"content":"These two operators allow you to add and subtract <ph id=\"ph1\">`CTimeSpan`</ph> objects to and from each other.","source":"These two operators allow you to add and subtract `CTimeSpan` objects to and from each other."},{"pos":[11439,11446],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[11450,11547],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_ATLMFC_Utilities#167<ept id=\"p2\">](../../atl-mfc-shared/codesnippet/cpp/ctimespan-class_7.cpp)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_ATLMFC_Utilities#167](../../atl-mfc-shared/codesnippet/cpp/ctimespan-class_7.cpp)]"},{"pos":[11557,11632],"content":"<bpt id=\"p1\">&lt;a name=\"ctimespan__operator__add_eq_-_eq\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CTimeSpan::operator +=, -=","linkify":"<a name=\"ctimespan__operator__add_eq_-_eq\"></a>  CTimeSpan::operator +=, -=","source":"<a name=\"ctimespan__operator__add_eq_-_eq\"></a>  CTimeSpan::operator +=, -="},{"pos":[11636,11705],"content":"Adds and subtracts a <ph id=\"ph1\">`CTimeSpan`</ph> object to and from this <ph id=\"ph2\">`CTimeSpan`</ph>.","source":"Adds and subtracts a `CTimeSpan` object to and from this `CTimeSpan`."},{"pos":[11823,11833],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"The value to add to the <ph id=\"ph1\">`CTimeSpan`</ph> object.","pos":[11847,11890],"source":" The value to add to the `CTimeSpan` object."},{"pos":[11900,11912],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[11916,11947],"content":"The updated <ph id=\"ph1\">`CTimeSpan`</ph> object.","source":"The updated `CTimeSpan` object."},{"pos":[11957,11964],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[11968,12064],"content":"These operators allow you to add and subtract a <ph id=\"ph1\">`CTimeSpan`</ph> object to and from this <ph id=\"ph2\">`CTimeSpan`</ph>.","source":"These operators allow you to add and subtract a `CTimeSpan` object to and from this `CTimeSpan`."},{"pos":[12074,12081],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[12085,12182],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_ATLMFC_Utilities#168<ept id=\"p2\">](../../atl-mfc-shared/codesnippet/cpp/ctimespan-class_8.cpp)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_ATLMFC_Utilities#168](../../atl-mfc-shared/codesnippet/cpp/ctimespan-class_8.cpp)]"},{"pos":[12192,12253],"content":"<bpt id=\"p1\">&lt;a name=\"ctimespan__serialize64\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CTimeSpan::Serialize64","linkify":"<a name=\"ctimespan__serialize64\"></a>  CTimeSpan::Serialize64","source":"<a name=\"ctimespan__serialize64\"></a>  CTimeSpan::Serialize64"},{"pos":[12261,12318],"content":"[!NOTE]\n This method is only available in MFC projects.","leadings":["","> "],"nodes":[{"content":"This method is only available in MFC projects.","pos":[9,55]}]},{"content":"Serializes the data associated with the member variable to or from an archive.","pos":[12325,12403]},{"pos":[12463,12473],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"The <ph id=\"ph1\">`CArchive`</ph> object that you want to update.","pos":[12485,12531],"source":" The `CArchive` object that you want to update."},{"pos":[12541,12553],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[12557,12587],"content":"The updated <ph id=\"ph1\">`CArchive`</ph> object.","source":"The updated `CArchive` object."},{"pos":[12596,12604],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>asctime, _wasctime<ept id=\"p1\">](../../c-runtime-library/reference/asctime-wasctime.md)</ept><ph id=\"ph1\"> </ph>","pos":[12608,12684],"source":"[asctime, _wasctime](../../c-runtime-library/reference/asctime-wasctime.md) "},{"content":"<bpt id=\"p1\"> [</bpt>_ftime, _ftime32, _ftime64<ept id=\"p1\">](../../c-runtime-library/reference/ftime-ftime32-ftime64.md)</ept><ph id=\"ph1\"> </ph>","pos":[12687,12777],"source":" [_ftime, _ftime32, _ftime64](../../c-runtime-library/reference/ftime-ftime32-ftime64.md) "},{"content":"<bpt id=\"p1\"> [</bpt>gmtime, _gmtime32, _gmtime64<ept id=\"p1\">](../../c-runtime-library/reference/gmtime-gmtime32-gmtime64.md)</ept><ph id=\"ph1\"> </ph>","pos":[12780,12875],"source":" [gmtime, _gmtime32, _gmtime64](../../c-runtime-library/reference/gmtime-gmtime32-gmtime64.md) "},{"content":"<bpt id=\"p1\"> [</bpt>localtime, _localtime32, _localtime64<ept id=\"p1\">](../../c-runtime-library/reference/localtime-localtime32-localtime64.md)</ept><ph id=\"ph1\"> </ph>","pos":[12878,12991],"source":" [localtime, _localtime32, _localtime64](../../c-runtime-library/reference/localtime-localtime32-localtime64.md) "},{"content":"<bpt id=\"p1\"> [</bpt>strftime, wcsftime, _strftime_l, _wcsftime_l<ept id=\"p1\">](../../c-runtime-library/reference/strftime-wcsftime-strftime-l-wcsftime-l.md)</ept><ph id=\"ph1\"> </ph>","pos":[12994,13120],"source":" [strftime, wcsftime, _strftime_l, _wcsftime_l](../../c-runtime-library/reference/strftime-wcsftime-strftime-l-wcsftime-l.md) "},{"content":"<bpt id=\"p1\"> [</bpt>time, _time32, _time64<ept id=\"p1\">](../../c-runtime-library/reference/time-time32-time64.md)</ept><ph id=\"ph1\"> </ph>","pos":[13123,13206],"source":" [time, _time32, _time64](../../c-runtime-library/reference/time-time32-time64.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Hierarchy Chart<ept id=\"p1\">](../../mfc/hierarchy-chart.md)</ept><ph id=\"ph1\"> </ph>","pos":[13209,13258],"source":" [Hierarchy Chart](../../mfc/hierarchy-chart.md) "},{"content":"<bpt id=\"p1\"> [</bpt>ATL/MFC Shared Classes<ept id=\"p1\">](../../atl-mfc-shared/atl-mfc-shared-classes.md)</ept>","pos":[13261,13334],"source":" [ATL/MFC Shared Classes](../../atl-mfc-shared/atl-mfc-shared-classes.md)"}],"content":"---\ntitle: \"CTimeSpan Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"ATL.CTimeSpan\"\n  - \"CTimeSpan\"\n  - \"timespan\"\n  - \"ATL::CTimeSpan\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"elapsed time, CTimeSpan object\"\n  - \"timespan\"\n  - \"time span\"\n  - \"CTimeSpan class\"\n  - \"shared classes, CTimeSpan\"\n  - \"time, elapsed\"\nms.assetid: ee1e42f6-1839-477a-8435-fb26ad475140\ncaps.latest.revision: 17\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# CTimeSpan Class\nAn amount of time, which is internally stored as the number of seconds in the time span.  \n  \n## Syntax  \n  \n```\nclass CTimeSpan\n```  \n  \n## Members  \n  \n### Public Constructors  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CTimeSpan::CTimeSpan](#ctimespan__ctimespan)|Constructs `CTimeSpan` objects in various ways.|  \n  \n### Public Methods  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CTimeSpan::Format](#ctimespan__format)|Converts a `CTimeSpan` into a formatted string.|  \n|[CTimeSpan::GetDays](#ctimespan__getdays)|Returns a value that represents the number of complete days in this `CTimeSpan`.|  \n|[CTimeSpan::GetHours](#ctimespan__gethours)|Returns a value that represents the number of hours in the current day (–23 through 23).|  \n|[CTimeSpan::GetMinutes](#ctimespan__getminutes)|Returns a value that represents the number of minutes in the current hour (–59 through 59).|  \n|[CTimeSpan::GetSeconds](#ctimespan__getseconds)|Returns a value that represents the number of seconds in the current minute (–59 through 59).|  \n|[CTimeSpan::GetTimeSpan](#ctimespan__gettimespan)|Returns the value of the `CTimeSpan` object.|  \n|[CTimeSpan::GetTotalHours](#ctimespan__gettotalhours)|Returns a value that represents the total number of complete hours in this `CTimeSpan`.|  \n|[CTimeSpan::GetTotalMinutes](#ctimespan__gettotalminutes)|Returns a value that represents the total number of complete minutes in this `CTimeSpan`.|  \n|[CTimeSpan::GetTotalSeconds](#ctimespan__gettotalseconds)|Returns a value that represents the total number of complete seconds in this `CTimeSpan`.|  \n|[CTimeSpan::Serialize64](#ctimespan__serialize64)|Serializes data to or from an archive.|  \n  \n### Operators  \n  \n|||  \n|-|-|  \n|[operator + –](#ctimespan__operator__add_-)|Adds and subtracts `CTimeSpan` objects.|  \n|[operator += –=](#ctimespan__operator__add_eq_-_eq)|Adds and subtracts a `CTimeSpan` object to and from this `CTimeSpan`.|  \n|[operator == < etc.](#ctimespan_comparison_operators)|Compares two relative time values.|  \n  \n## Remarks  \n `CTimeSpan` does not have a base class.  \n  \n `CTimeSpan` functions convert seconds to various combinations of days, hours, minutes, and seconds.  \n  \n The `CTimeSpan` object is stored in a **__time64_t** structure, which is 8 bytes.  \n  \n A companion class, [CTime](../../atl-mfc-shared/reference/ctime-class.md), represents an absolute time.  \n  \n The `CTime` and `CTimeSpan` classes are not designed for derivation. Because there are no virtual functions, the size of both `CTime` and `CTimeSpan` objects is exactly 8 bytes. Most member functions are inline.  \n  \n For more information on using `CTimeSpan`, see the articles [Date and Time](../../atl-mfc-shared/date-and-time.md), and [Time Management](../../c-runtime-library/time-management.md) in the *Run-Time Library Reference*.  \n  \n## Requirements  \n **Header:** atltime.h  \n  \n##  <a name=\"ctimespan_comparison_operators\"></a>  CTimeSpan Comparison Operators  \n Comparison operators.  \n  \n```\nbool operator==(CTimeSpan span) const throw();\n\nbool operator!=(CTimeSpan span) const throw();\n\nbool operator<(CTimeSpan span) const throw();\n\nbool operator>(CTimeSpan span) const throw();\n\nbool operator<=(CTimeSpan span) const throw();\n\nbool operator>=(CTimeSpan span) const throw();\n```  \n  \n### Parameters  \n `span`  \n  \n The object to compare.  \n  \n### Return Value  \n These operators compare two relative time values. They return **true** if the condition is true; otherwise **false**.  \n  \n### Example  \n [!code-cpp[NVC_ATLMFC_Utilities#169](../../atl-mfc-shared/codesnippet/cpp/ctimespan-class_1.cpp)]  \n  \n##  <a name=\"ctimespan__ctimespan\"></a>  CTimeSpan::CTimeSpan  \n Constructs `CTimeSpan` objects in various ways.  \n  \n```\nCTimeSpan() throw();\n\nCTimeSpan(__time64_t time) throw();\n\nCTimeSpan(LONG lDays,\n    int nHours,\n    int nMins,\n    int nSecs) throw();\n```  \n  \n### Parameters  \n *timeSpanSrc*  \n A `CTimeSpan` object that already exists.  \n  \n `time`  \n A **__time64_t** time value, which is the number of seconds in the time span. In Visual C++ versions 6.0 and earlier, `time` was a value of `time_t`. Visual C++ .NET or later silently converts a `time_t` parameter to **__time64_t**.  \n  \n `lDays`, `nHours`, `nMins`, `nSecs`  \n Days, hours, minutes, and seconds, respectively.  \n  \n### Remarks  \n All these constructors create a new `CTimeSpan` object initialized with the specified relative time. Each constructor is described below:  \n  \n- **CTimeSpan( );** Constructs an uninitialized `CTimeSpan` object.  \n  \n- **CTimeSpan( const CTimeSpan& );** Constructs a `CTimeSpan` object from another `CTimeSpan` value.  \n  \n- **CTimeSpan( __time64_t );** Constructs a `CTimeSpan` object from a **__time64_t** type.  \n  \n- **CTimeSpan( LONG**, **int, int, int );** Constructs a `CTimeSpan` object from components with each component constrained to the following ranges:  \n  \n    |Component|Range|  \n    |---------------|-----------|  \n    |`lDays`|0–25,000 (approximately)|  \n    |`nHours`|0–23|  \n    |`nMins`|0–59|  \n    |`nSecs`|0–59|  \n  \n Note that the Debug version of the Microsoft Foundation Class Library asserts if one or more of the time-day components is out of range. It is your responsibility to validate the arguments prior to calling.  \n  \n### Example  \n [!code-cpp[NVC_ATLMFC_Utilities#162](../../atl-mfc-shared/codesnippet/cpp/ctimespan-class_2.cpp)]  \n  \n##  <a name=\"ctimespan__format\"></a>  CTimeSpan::Format  \n Generates a formatted string that corresponds to this `CTimeSpan`.  \n  \n```\nCString Format(LPCSTR pFormat) const;\n\nCString Format(LPCTSTR pszFormat) const;\n\nCString Format(UINT nID) const;\n```  \n  \n### Parameters  \n `pFormat`, `pszFormat`  \n A formatting string similar to the `printf` formatting string. Formatting codes, preceded by a percent ( `%`) sign, are replaced by the corresponding `CTimeSpan` component. Other characters in the formatting string are copied unchanged to the returned string. The value and meaning of the formatting codes for **Format** are listed below:  \n  \n- **%D** Total days in this `CTimeSpan`  \n  \n- **%H** Hours in the current day  \n  \n- **%M** Minutes in the current hour  \n  \n- **%S** Seconds in the current minute  \n  \n- **%%** Percent sign  \n  \n `nID`  \n The ID of the string that identifies this format.  \n  \n### Return Value  \n A `CString` object that contains the formatted time.  \n  \n### Remarks  \n The Debug version of the library checks the formatting codes and asserts if the code is not in the list above.  \n  \n### Example  \n [!code-cpp[NVC_ATLMFC_Utilities#163](../../atl-mfc-shared/codesnippet/cpp/ctimespan-class_3.cpp)]  \n  \n##  <a name=\"ctimespan__getdays\"></a>  CTimeSpan::GetDays  \n Returns a value that represents the number of complete days in this `CTimeSpan`.  \n  \n```\nLONGLONG\nGetDays() const throw();\n```  \n  \n### Return Value  \n Returns the number of complete 24-hour days in the time span. This value may be negative if the time span is negative.  \n  \n### Remarks  \n Note that Daylight Savings Time can cause `GetDays` to return a potentially surprising result. For example, when DST is in effect, **GetDays** reports the number of days between April 1 and May 1 as 29, not 30, because one day in April is shortened by an hour and therefore does not count as a complete day.  \n  \n### Example  \n [!code-cpp[NVC_ATLMFC_Utilities#164](../../atl-mfc-shared/codesnippet/cpp/ctimespan-class_4.cpp)]  \n  \n##  <a name=\"ctimespan__gethours\"></a>  CTimeSpan::GetHours  \n Returns a value that represents the number of hours in the current day (–23 through 23).  \n  \n```\nLONG\nGetHours() const throw();\n```  \n  \n### Return Value  \n Returns the number of hours in the current day. The range is –23 through 23.  \n  \n### Example  \n [!code-cpp[NVC_ATLMFC_Utilities#165](../../atl-mfc-shared/codesnippet/cpp/ctimespan-class_5.cpp)]  \n  \n##  <a name=\"ctimespan__getminutes\"></a>  CTimeSpan::GetMinutes  \n Returns a value that represents the number of minutes in the current hour (–59 through 59).  \n  \n```\nLONG\nGetMinutes() const throw();\n```  \n  \n### Return Value  \n Returns the number of minutes in the current hour. The range is –59 through 59.  \n  \n### Example  \n See the example for [GetHours](#ctimespan__gethours).  \n  \n##  <a name=\"ctimespan__getseconds\"></a>  CTimeSpan::GetSeconds  \n Returns a value that represents the number of seconds in the current minute (–59 through 59).  \n  \n```\nLONG\nGetSeconds() const throw();\n```  \n  \n### Return Value  \n Returns the number of seconds in the current minute. The range is –59 through 59.  \n  \n### Example  \n See the example for [GetHours](#ctimespan__gethours).  \n  \n##  <a name=\"ctimespan__gettimespan\"></a>  CTimeSpan::GetTimeSpan  \n Returns the value of the `CTimeSpan` object.  \n  \n```\n_                _time64_t GetTimeSpan() const throw();\n```  \n  \n### Return Value  \n Returns the current value of the `CTimeSpan` object.  \n  \n##  <a name=\"ctimespan__gettotalhours\"></a>  CTimeSpan::GetTotalHours  \n Returns a value that represents the total number of complete hours in this `CTimeSpan`.  \n  \n```\nLONGLONG\nGetTotalHours() const throw();\n```  \n  \n### Return Value  \n Returns the total number of complete hours in this `CTimeSpan`.  \n  \n### Example  \n [!code-cpp[NVC_ATLMFC_Utilities#166](../../atl-mfc-shared/codesnippet/cpp/ctimespan-class_6.cpp)]  \n  \n##  <a name=\"ctimespan__gettotalminutes\"></a>  CTimeSpan::GetTotalMinutes  \n Returns a value that represents the total number of complete minutes in this `CTimeSpan`.  \n  \n```\nLONGLONG\nGetTotalMinutes() const throw();\n```  \n  \n### Return Value  \n Returns the total number of complete minutes in this `CTimeSpan`.  \n  \n### Example  \n See the example for [GetTotalHours](#ctimespan__gettotalhours).  \n  \n##  <a name=\"ctimespan__gettotalseconds\"></a>  CTimeSpan::GetTotalSeconds  \n Returns a value that represents the total number of complete seconds in this `CTimeSpan`.  \n  \n```\nLONGLONG\nGetTotalSeconds() const throw();\n```  \n  \n### Return Value  \n Returns the total number of complete seconds in this `CTimeSpan`.  \n  \n### Example  \n See the example for [GetTotalHours](#ctimespan__gettotalhours).  \n  \n##  <a name=\"ctimespan__operator__add_-\"></a>  CTimeSpan::operator +, -  \n Adds and subtracts `CTimeSpan` objects.  \n  \n```\nCTimeSpan operator+(CTimeSpan span) const throw();\n\nCTimeSpan operator-(CTimeSpan span) const throw();\n```  \n  \n### Parameters  \n `span`  \n The value to add to the `CTimeSpan` object.  \n  \n### Return Value  \n A `CTimeSpan` object representing the result of the operation.  \n  \n### Remarks  \n These two operators allow you to add and subtract `CTimeSpan` objects to and from each other.  \n  \n### Example  \n [!code-cpp[NVC_ATLMFC_Utilities#167](../../atl-mfc-shared/codesnippet/cpp/ctimespan-class_7.cpp)]  \n  \n##  <a name=\"ctimespan__operator__add_eq_-_eq\"></a>  CTimeSpan::operator +=, -=  \n Adds and subtracts a `CTimeSpan` object to and from this `CTimeSpan`.  \n  \n```\nCTimeSpan& operator+=(CTimeSpan span) throw();\n\nCTimeSpan& operator-=(CTimeSpan span) throw();\n```  \n  \n### Parameters  \n `span`  \n The value to add to the `CTimeSpan` object.  \n  \n### Return Value  \n The updated `CTimeSpan` object.  \n  \n### Remarks  \n These operators allow you to add and subtract a `CTimeSpan` object to and from this `CTimeSpan`.  \n  \n### Example  \n [!code-cpp[NVC_ATLMFC_Utilities#168](../../atl-mfc-shared/codesnippet/cpp/ctimespan-class_8.cpp)]  \n  \n##  <a name=\"ctimespan__serialize64\"></a>  CTimeSpan::Serialize64  \n  \n> [!NOTE]\n>  This method is only available in MFC projects.  \n  \n Serializes the data associated with the member variable to or from an archive.  \n  \n```\nCArchive& Serialize64(CArchive& ar);\n```  \n  \n### Parameters  \n `ar`  \n The `CArchive` object that you want to update.  \n  \n### Return Value  \n The updated `CArchive` object.  \n  \n## See Also  \n [asctime, _wasctime](../../c-runtime-library/reference/asctime-wasctime.md)   \n [_ftime, _ftime32, _ftime64](../../c-runtime-library/reference/ftime-ftime32-ftime64.md)   \n [gmtime, _gmtime32, _gmtime64](../../c-runtime-library/reference/gmtime-gmtime32-gmtime64.md)   \n [localtime, _localtime32, _localtime64](../../c-runtime-library/reference/localtime-localtime32-localtime64.md)   \n [strftime, wcsftime, _strftime_l, _wcsftime_l](../../c-runtime-library/reference/strftime-wcsftime-strftime-l-wcsftime-l.md)   \n [time, _time32, _time64](../../c-runtime-library/reference/time-time32-time64.md)   \n [Hierarchy Chart](../../mfc/hierarchy-chart.md)   \n [ATL/MFC Shared Classes](../../atl-mfc-shared/atl-mfc-shared-classes.md)\n\n\n"}