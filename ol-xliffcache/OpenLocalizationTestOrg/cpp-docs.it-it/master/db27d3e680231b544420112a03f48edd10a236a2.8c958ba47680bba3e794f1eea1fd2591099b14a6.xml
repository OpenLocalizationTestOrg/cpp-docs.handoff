{"nodes":[{"pos":[12,60],"content":"CriticalSection::TryLock Method | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"CriticalSection::TryLock Method | Microsoft Docs","pos":[0,48]}]},{"content":"CriticalSection::TryLock Method","pos":[695,726]},{"content":"Attempts to enter a critical section without blocking.","pos":[727,781]},{"content":"If the call is successful, the calling thread takes ownership of the critical section.","pos":[782,868]},{"content":"Syntax","pos":[877,883]},{"content":"Parameters","pos":[997,1007]},{"content":"A user-specified critical section object.","pos":[1019,1060]},{"content":"Return Value","pos":[1069,1081]},{"content":"A nonzero value if the critical section is successfully entered or the current thread already owns the critical section.","pos":[1085,1205]},{"content":"Zero if another thread already owns the critical section.","pos":[1206,1263]},{"content":"Remarks","pos":[1272,1279]},{"content":"The first <bpt id=\"p1\">**</bpt>TryLock<ept id=\"p1\">**</ept> function affects the current critical section object.","pos":[1283,1358],"source":"The first **TryLock** function affects the current critical section object."},{"content":"The second <bpt id=\"p1\">**</bpt>TryLock<ept id=\"p1\">**</ept> function affects a user-specified critical section.","pos":[1359,1433],"source":" The second **TryLock** function affects a user-specified critical section."},{"content":"Requirements","pos":[1442,1454]},{"pos":[1458,1484],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> corewrappers.h","source":"**Header:** corewrappers.h"},{"pos":[1491,1530],"content":"<bpt id=\"p1\">**</bpt>Namespace:<ept id=\"p1\">**</ept> Microsoft::WRL::Wrappers","source":"**Namespace:** Microsoft::WRL::Wrappers"},{"content":"See Also","pos":[1539,1547]},{"content":"CriticalSection Class","pos":[1552,1573]}],"content":"---\ntitle: \"CriticalSection::TryLock Method | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"corewrappers/Microsoft::WRL::Wrappers::CriticalSection::TryLock\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"TryLock method\"\nms.assetid: 504bb87c-2cd0-4f54-b458-b3efb9789053\ncaps.latest.revision: 3\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"ru-ru\"\n  - \"zh-cn\"\n  - \"zh-tw\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"tr-tr\"\n---\n# CriticalSection::TryLock Method\nAttempts to enter a critical section without blocking. If the call is successful, the calling thread takes ownership of the critical section.  \n  \n## Syntax  \n  \n```  \nSyncLock TryLock();  \n  \nstatic SyncLock TryLock(  \n   _In_ CRITICAL_SECTION* cs  \n);  \n```  \n  \n#### Parameters  \n `cs`  \n A user-specified critical section object.  \n  \n## Return Value  \n A nonzero value if the critical section is successfully entered or the current thread already owns the critical section. Zero if another thread already owns the critical section.  \n  \n## Remarks  \n The first **TryLock** function affects the current critical section object. The second **TryLock** function affects a user-specified critical section.  \n  \n## Requirements  \n **Header:** corewrappers.h  \n  \n **Namespace:** Microsoft::WRL::Wrappers  \n  \n## See Also  \n [CriticalSection Class](../windows/criticalsection-class.md)"}