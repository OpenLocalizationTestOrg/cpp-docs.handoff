{"nodes":[{"pos":[12,36],"content":"_enable | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"_enable | Microsoft Docs","pos":[0,24]}]},{"content":"_enable","pos":[654,661]},{"content":"Microsoft Specific","pos":[664,682]},{"content":"Enables interrupts.","pos":[691,710]},{"content":"Syntax","pos":[719,725]},{"content":"Requirements","pos":[771,783]},{"content":"Intrinsic","pos":[790,799]},{"content":"Architecture","pos":[800,812]},{"pos":[866,875],"content":"x86, ARM,"},{"pos":[947,974],"content":"<bpt id=\"p1\">**</bpt>Header file<ept id=\"p1\">**</ept> <ph id=\"ph1\">\\&lt;</ph>intrin.h&gt;","source":"**Header file** \\<intrin.h>"},{"content":"Remarks","pos":[983,990]},{"content":"instructs the processor to set the interrupt flag.","pos":[1004,1054]},{"content":"On x86 systems, this function generates the Set Interrupt Flag (<ph id=\"ph1\">`sti`</ph>) instruction.","pos":[1055,1138],"source":" On x86 systems, this function generates the Set Interrupt Flag (`sti`) instruction."},{"content":"This function is only available in kernel mode.","pos":[1145,1192]},{"content":"If used in user mode, a Privileged Instruction exception is thrown.","pos":[1193,1260]},{"content":"END Microsoft Specific","pos":[1269,1291]},{"content":"See Also","pos":[1300,1308]},{"content":"Compiler Intrinsics","pos":[1313,1332]}],"content":"---\ntitle: \"_enable | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"_enable\"\n  - \"_enable_cpp\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"enable intrinsic\"\n  - \"_enable intrinsic\"\n  - \"ssm instruction\"\nms.assetid: 8bee669b-6bd8-4e25-9383-bb7d57295b4d\ncaps.latest.revision: 12\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# _enable\n**Microsoft Specific**  \n  \n Enables interrupts.  \n  \n## Syntax  \n  \n```  \nvoid _enable(void);  \n```  \n  \n## Requirements  \n  \n|Intrinsic|Architecture|  \n|---------------|------------------|  \n|`_enable`|x86, ARM, [!INCLUDE[vcprx64](../assembler/inline/includes/vcprx64_md.md)]|  \n  \n **Header file** \\<intrin.h>  \n  \n## Remarks  \n `_enable` instructs the processor to set the interrupt flag. On x86 systems, this function generates the Set Interrupt Flag (`sti`) instruction.  \n  \n This function is only available in kernel mode. If used in user mode, a Privileged Instruction exception is thrown.  \n  \n## END Microsoft Specific  \n  \n## See Also  \n [Compiler Intrinsics](../intrinsics/compiler-intrinsics.md)"}