{"nodes":[{"pos":[12,61],"content":"register Storage-Class Specifier | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"register Storage-Class Specifier | Microsoft Docs","pos":[0,49]}]},{"content":"register Storage-Class Specifier","pos":[625,657]},{"content":"Microsoft Specific","pos":[660,678]},{"content":"The Microsoft C/C++ compiler does not honor user requests for register variables.","pos":[687,768]},{"content":"However, for portability all other semantics associated with the <bpt id=\"p1\">**</bpt>register<ept id=\"p1\">**</ept> keyword are honored by the compiler.","pos":[769,883],"source":" However, for portability all other semantics associated with the **register** keyword are honored by the compiler."},{"content":"For example, you cannot apply the unary address-of operator (<bpt id=\"p1\">**</bpt><ph id=\"ph1\">&amp;</ph><ept id=\"p1\">**</ept>) to a register object nor can the <bpt id=\"p2\">**</bpt>register<ept id=\"p2\">**</ept> keyword be used on arrays.","pos":[884,1024],"source":" For example, you cannot apply the unary address-of operator (**&**) to a register object nor can the **register** keyword be used on arrays."},{"content":"END Microsoft Specific","pos":[1033,1055]},{"content":"See Also","pos":[1066,1074]},{"content":"Storage-Class Specifiers for Internal-Level Declarations","pos":[1079,1135]}],"content":"---\ntitle: \"register Storage-Class Specifier | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"C++\"\n  - \"C\"\nhelpviewer_keywords: \n  - \"register variables\"\n  - \"register storage class\"\nms.assetid: 7577bf48-88ec-4191-873c-ef4217a4034e\ncaps.latest.revision: 8\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# register Storage-Class Specifier\n**Microsoft Specific**  \n  \n The Microsoft C/C++ compiler does not honor user requests for register variables. However, for portability all other semantics associated with the **register** keyword are honored by the compiler. For example, you cannot apply the unary address-of operator (**&**) to a register object nor can the **register** keyword be used on arrays.  \n  \n **END Microsoft Specific**  \n  \n## See Also  \n [Storage-Class Specifiers for Internal-Level Declarations](../c-language/storage-class-specifiers-for-internal-level-declarations.md)"}