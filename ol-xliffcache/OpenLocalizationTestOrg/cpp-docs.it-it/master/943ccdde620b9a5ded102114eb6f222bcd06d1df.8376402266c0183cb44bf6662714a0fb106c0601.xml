{"nodes":[{"pos":[12,47],"content":"conj, conjf, conjl | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"conj, conjf, conjl | Microsoft Docs","pos":[0,35]}]},{"content":"conj, conjf, conjl","pos":[1065,1083]},{"content":"Retrieves the complex conjugate of a complex number.","pos":[1084,1136]},{"content":"Syntax","pos":[1145,1151]},{"content":"Parameters","pos":[1415,1425]},{"content":"A complex number.","pos":[1436,1453]},{"content":"Return Value","pos":[1462,1474]},{"content":"The complex conjugate  of <ph id=\"ph1\">`z`</ph>.","pos":[1478,1508],"source":"The complex conjugate  of `z`."},{"content":"The result has the same real and imaginary part as <ph id=\"ph1\">`z`</ph>, but with the opposite sign.","pos":[1510,1593],"source":"  The result has the same real and imaginary part as `z`, but with the opposite sign."},{"content":"Remarks","pos":[1602,1609]},{"content":"Because C++ allows overloading, you can call overloads of <ph id=\"ph1\">`conj`</ph> that take and return <ph id=\"ph2\">`_Fcomplex`</ph> and <ph id=\"ph3\">`_Lcomplex`</ph> values.","pos":[1613,1734],"source":"Because C++ allows overloading, you can call overloads of `conj` that take and return `_Fcomplex` and `_Lcomplex` values."},{"content":"In a C program, <ph id=\"ph1\">`conj`</ph> always takes and returns a <ph id=\"ph2\">`_Dcomplex`</ph> value.","pos":[1735,1803],"source":" In a C program, `conj` always takes and returns a `_Dcomplex` value."},{"content":"Requirements","pos":[1812,1824]},{"content":"Routine","pos":[1831,1838]},{"content":"C header","pos":[1839,1847]},{"content":"C++ header","pos":[1848,1858]},{"pos":[1921,1945],"content":",               <ph id=\"ph1\">`conjf`</ph>,","source":",               `conjf`, "},{"content":"complex.h&gt;","pos":[1956,1966],"source":"complex.h>"},{"content":"ccomplex&gt;","pos":[1969,1978],"source":"ccomplex>"},{"pos":[1986,2104],"content":"For more compatibility information, see <bpt id=\"p1\">[</bpt>Compatibility<ept id=\"p1\">](../../c-runtime-library/compatibility.md)</ept> in the Introduction.","source":"For more compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md) in the Introduction."},{"content":"See Also","pos":[2113,2121]},{"content":"Alphabetical Function Reference","pos":[2126,2157]},{"content":"norm, normf, norml","pos":[2238,2256]},{"content":"creal, crealf, creall","pos":[2319,2340]},{"content":"cproj, cprojf, cprojl","pos":[2405,2426]},{"content":"cimag, cimagf, cimagl","pos":[2491,2512]},{"content":"carg, cargf, cargl","pos":[2577,2595]},{"content":"cabs, cabsf, cabsl","pos":[2657,2675]}],"content":"---\ntitle: \"conj, conjf, conjl | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"cpp\"\n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\napiname: \n  - \"conj\"\n  - \"conjf\"\n  - \"conjl\"\napilocation: \n  - \"msvcrt.dll\"\n  - \"msvcr80.dll\"\n  - \"msvcr90.dll\"\n  - \"msvcr100.dll\"\n  - \"msvcr100_clr0400.dll\"\n  - \"msvcr110.dll\"\n  - \"msvcr110_clr0400.dll\"\n  - \"msvcr120.dll\"\n  - \"msvcr120_clr0400.dll\"\n  - \"ucrtbase.dll\"\n  - \"api-ms-win-crt-math-l1-1-0.dll\"\napitype: \"DLLExport\"\nf1_keywords: \n  - \"conj\"\n  - \"conjf\"\n  - \"conjl\"\n  - \"complex/conj\"\n  - \"complex/conjf\"\n  - \"complex/conjl\"\ndev_langs: \n  - \"C\"\n  - \"C++\"\nhelpviewer_keywords: \n  - \"conj function\"\n  - \"conjf function\"\n  - \"conjl function\"\nms.assetid: 792fccfa-19c6-4890-99f9-a3b89effccd6\ncaps.latest.revision: 10\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# conj, conjf, conjl\nRetrieves the complex conjugate of a complex number.  \n  \n## Syntax  \n  \n```  \n_Dcomplex conj(   \n   _Dcomplex z   \n);  \n_Fcomplex conj(   \n   _Fcomplex z   \n);  // C++ only  \n_Lcomplex conj(   \n   _Lcomplex z   \n);  // C++ only  \n_Fcomplex conjf(   \n   _Fcomplex z   \n);  \n_Lcomplex conjl(   \n   _Lcomplex z   \n);  \n```  \n  \n#### Parameters  \n `z`  \n A complex number.  \n  \n## Return Value  \n The complex conjugate  of `z`.  The result has the same real and imaginary part as `z`, but with the opposite sign.  \n  \n## Remarks  \n Because C++ allows overloading, you can call overloads of `conj` that take and return `_Fcomplex` and `_Lcomplex` values. In a C program, `conj` always takes and returns a `_Dcomplex` value.  \n  \n## Requirements  \n  \n|Routine|C header|C++ header|  \n|-------------|--------------|------------------|  \n|`conj`,               `conjf`, `conjl`|\\<complex.h>|\\<ccomplex>|  \n  \n For more compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md) in the Introduction.  \n  \n## See Also  \n [Alphabetical Function Reference](../../c-runtime-library/reference/crt-alphabetical-function-reference.md)   \n [norm, normf, norml](../../c-runtime-library/reference/norm-normf-norml1.md)   \n [creal, crealf, creall](../../c-runtime-library/reference/creal-crealf-creall.md)   \n [cproj, cprojf, cprojl](../../c-runtime-library/reference/cproj-cprojf-cprojl.md)   \n [cimag, cimagf, cimagl](../../c-runtime-library/reference/cimag-cimagf-cimagl.md)   \n [carg, cargf, cargl](../../c-runtime-library/reference/carg-cargf-cargl.md)   \n [cabs, cabsf, cabsl](../../c-runtime-library/reference/cabs-cabsf-cabsl.md)"}