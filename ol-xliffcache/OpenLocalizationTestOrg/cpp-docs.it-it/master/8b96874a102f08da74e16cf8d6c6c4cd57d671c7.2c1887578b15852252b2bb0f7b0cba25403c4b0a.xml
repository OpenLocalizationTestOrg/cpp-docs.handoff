{"nodes":[{"pos":[12,52],"content":"ActivationFactory Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"ActivationFactory Class | Microsoft Docs","pos":[0,40]}]},{"content":"ActivationFactory Class","pos":[673,696]},{"content":"Enables one or more classes to be activated by the Windows Runtime.","pos":[697,764]},{"content":"Syntax","pos":[773,779]},{"content":"Parameters","pos":[1126,1136]},{"content":"The zeroth interface.","pos":[1148,1169]},{"content":"The first interface.","pos":[1184,1204]},{"content":"The second interface.","pos":[1219,1240]},{"content":"Remarks","pos":[1249,1256]},{"content":"ActivationFactory provides registration methods and basic functionality for the IActivationFactory interface.","pos":[1260,1369]},{"content":"ActivationFactory also enables you to provide a custom factory implementation.","pos":[1370,1448]},{"content":"The following code fragment symbolically illustrates how to use ActivationFactory.","pos":[1455,1537]},{"pos":[1555,1594],"content":"wrl-microsoft__wrl__activationfactory#1"},{"pos":[1661,1810],"content":"The following code fragment shows how to use the <bpt id=\"p1\">[</bpt>Implements<ept id=\"p1\">](../windows/implements-structure.md)</ept> structure to specify more than three interface IDs.","source":"The following code fragment shows how to use the [Implements](../windows/implements-structure.md) structure to specify more than three interface IDs."},{"content":"Members","pos":[1897,1904]},{"content":"Public Constructors","pos":[1914,1933]},{"content":"Name","pos":[1940,1944]},{"content":"Description","pos":[1945,1956]},{"content":"ActivationFactory::ActivationFactory Constructor","pos":[1995,2043]},{"content":"Initializes the ActivationFactory class.","pos":[2108,2148]},{"content":"Public Methods","pos":[2159,2173]},{"content":"Name","pos":[2180,2184]},{"content":"Description","pos":[2185,2196]},{"content":"ActivationFactory::AddRef Method","pos":[2235,2267]},{"content":"Increments the reference count of the current ActivationFactory object.","pos":[2316,2387]},{"content":"ActivationFactory::GetIids Method","pos":[2393,2426]},{"content":"Retrieves an array of implemented interface IDs.","pos":[2476,2524]},{"content":"ActivationFactory::GetRuntimeClassName Method","pos":[2530,2575]},{"content":"Gets the runtime class name of the object that the current ActivationFactory instantiates.","pos":[2637,2727]},{"content":"ActivationFactory::GetTrustLevel Method","pos":[2733,2772]},{"content":"Gets the trust level of the object that the current ActivationFactory instantiates.","pos":[2828,2911]},{"content":"ActivationFactory::QueryInterface Method","pos":[2917,2957]},{"content":"Retrieves a pointer to the specified interface.","pos":[3014,3061]},{"content":"ActivationFactory::Release Method","pos":[3067,3100]},{"content":"Decrements the reference count of the current ActivationFactory object.","pos":[3150,3221]},{"content":"Inheritance Hierarchy","pos":[3231,3252]},{"content":"Requirements","pos":[3479,3491]},{"pos":[3495,3515],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> module.h","source":"**Header:** module.h"},{"pos":[3522,3551],"content":"<bpt id=\"p1\">**</bpt>Namespace:<ept id=\"p1\">**</ept> Microsoft::WRL","source":"**Namespace:** Microsoft::WRL"},{"content":"See Also","pos":[3560,3568]},{"content":"Microsoft::WRL Namespace","pos":[3573,3597]}],"content":"---\ntitle: \"ActivationFactory Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"module/Microsoft::WRL::ActivationFactory\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"ActivationFactory class\"\nms.assetid: 5faddf1f-43b6-4f8a-97de-8c9d3ae1e1ff\ncaps.latest.revision: 4\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"ru-ru\"\n  - \"zh-cn\"\n  - \"zh-tw\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"tr-tr\"\n---\n# ActivationFactory Class\nEnables one or more classes to be activated by the Windows Runtime.  \n  \n## Syntax  \n  \n```  \ntemplate <  \n   typename I0 = Details::Nil,  \n   typename I1 = Details::Nil,  \n   typename I2 = Details::Nil  \n>  \nclass ActivationFactory : public Details::RuntimeClass<typename Details::InterfaceListHelper<IActivationFactory, I0, I1, I2, Details::Nil>::TypeT, RuntimeClassFlags<WinRt | InhibitWeakReference>, false>;  \n```  \n  \n#### Parameters  \n `I0`  \n The zeroth interface.  \n  \n `I1`  \n The first interface.  \n  \n `I2`  \n The second interface.  \n  \n## Remarks  \n ActivationFactory provides registration methods and basic functionality for the IActivationFactory interface. ActivationFactory also enables you to provide a custom factory implementation.  \n  \n The following code fragment symbolically illustrates how to use ActivationFactory.  \n  \n [!code-cpp[wrl-microsoft__wrl__activationfactory#1](../windows/codesnippet/CPP/activationfactory-class_1.cpp)]  \n  \n The following code fragment shows how to use the [Implements](../windows/implements-structure.md) structure to specify more than three interface IDs.  \n  \n `struct MyFactory : ActivationFactory<Implements<I1, I2, I3>, I4, I5>;`  \n  \n## Members  \n  \n### Public Constructors  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[ActivationFactory::ActivationFactory Constructor](../windows/activationfactory-activationfactory-constructor.md)|Initializes the ActivationFactory class.|  \n  \n### Public Methods  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[ActivationFactory::AddRef Method](../windows/activationfactory-addref-method.md)|Increments the reference count of the current ActivationFactory object.|  \n|[ActivationFactory::GetIids Method](../windows/activationfactory-getiids-method.md)|Retrieves an array of implemented interface IDs.|  \n|[ActivationFactory::GetRuntimeClassName Method](../windows/activationfactory-getruntimeclassname-method.md)|Gets the runtime class name of the object that the current ActivationFactory instantiates.|  \n|[ActivationFactory::GetTrustLevel Method](../windows/activationfactory-gettrustlevel-method.md)|Gets the trust level of the object that the current ActivationFactory instantiates.|  \n|[ActivationFactory::QueryInterface Method](../windows/activationfactory-queryinterface-method.md)|Retrieves a pointer to the specified interface.|  \n|[ActivationFactory::Release Method](../windows/activationfactory-release-method.md)|Decrements the reference count of the current ActivationFactory object.|  \n  \n## Inheritance Hierarchy  \n `I0`  \n  \n `ChainInterfaces`  \n  \n `I0`  \n  \n `RuntimeClassBase`  \n  \n `ImplementsHelper`  \n  \n `DontUseNewUseMake`  \n  \n `RuntimeClassFlags`  \n  \n `RuntimeClassBaseT`  \n  \n `RuntimeClass`  \n  \n `ActivationFactory`  \n  \n## Requirements  \n **Header:** module.h  \n  \n **Namespace:** Microsoft::WRL  \n  \n## See Also  \n [Microsoft::WRL Namespace](../windows/microsoft-wrl-namespace.md)"}