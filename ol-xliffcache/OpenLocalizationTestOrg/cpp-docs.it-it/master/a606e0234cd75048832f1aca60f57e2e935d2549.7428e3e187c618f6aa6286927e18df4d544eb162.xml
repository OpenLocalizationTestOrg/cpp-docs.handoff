{"nodes":[{"pos":[12,50],"content":"error_condition Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"error_condition Class | Microsoft Docs","pos":[0,38]}]},{"content":"error_condition Class","pos":[710,731]},{"content":"Represents user-defined error codes.","pos":[732,768]},{"content":"Syntax","pos":[777,783]},{"content":"Remarks","pos":[828,835]},{"pos":[839,1056],"content":"An object of type <ph id=\"ph1\">`error_condition`</ph> stores an error code value and a pointer to an object that represents a <bpt id=\"p1\">[</bpt>category<ept id=\"p1\">](../standard-library/error-category-class.md)</ept> of error codes used for reported user-defined errors.","source":"An object of type `error_condition` stores an error code value and a pointer to an object that represents a [category](../standard-library/error-category-class.md) of error codes used for reported user-defined errors."},{"content":"Constructors","pos":[1066,1078]},{"content":"error_condition","pos":[1100,1115]},{"pos":[1152,1199],"content":"Constructs an object of type <ph id=\"ph1\">`error_condition`</ph>.","source":"Constructs an object of type `error_condition`."},{"content":"Typedefs","pos":[1210,1218]},{"content":"value_type","pos":[1240,1250]},{"content":"A type that represents the stored error code value.","pos":[1282,1333]},{"content":"Member Functions","pos":[1344,1360]},{"content":"assign","pos":[1382,1388]},{"content":"Assigns an error code value and category to an error condition.","pos":[1416,1479]},{"content":"category","pos":[1485,1493]},{"content":"Returns the error category.","pos":[1523,1550]},{"content":"clear","pos":[1556,1561]},{"content":"Clears the error code value and category.","pos":[1588,1629]},{"content":"message","pos":[1635,1642]},{"content":"Returns the name of the error code.","pos":[1671,1706]},{"content":"Operators","pos":[1717,1726]},{"content":"operator==","pos":[1748,1758]},{"pos":[1794,1847],"content":"Tests for equality between <ph id=\"ph1\">`error_condition`</ph> objects.","source":"Tests for equality between `error_condition` objects."},{"content":"operator!=","pos":[1853,1863]},{"pos":[1897,1952],"content":"Tests for inequality between <ph id=\"ph1\">`error_condition`</ph> objects.","source":"Tests for inequality between `error_condition` objects."},{"content":"operator&lt;","pos":[1958,1967],"source":"operator<"},{"pos":[2001,2101],"content":"Tests if the <ph id=\"ph1\">`error_condition`</ph> object is less than the <ph id=\"ph2\">`error_code`</ph> object passed in for comparison.","source":"Tests if the `error_condition` object is less than the `error_code` object passed in for comparison."},{"content":"operator=","pos":[2107,2116]},{"pos":[2149,2213],"content":"Assigns a new enumeration value to the <ph id=\"ph1\">`error_condition`</ph> object.","source":"Assigns a new enumeration value to the `error_condition` object."},{"content":"operator bool","pos":[2219,2232]},{"pos":[2267,2310],"content":"Casts a variable of type <ph id=\"ph1\">`error_condition`</ph>.","source":"Casts a variable of type `error_condition`."},{"content":"Requirements","pos":[2320,2332]},{"pos":[2336,2362],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> &lt;system_error&gt;","source":"**Header:** <system_error>"},{"pos":[2369,2387],"content":"<bpt id=\"p1\">**</bpt>Namespace:<ept id=\"p1\">**</ept> std","source":"**Namespace:** std"},{"pos":[2437,2460],"content":"error_condition::assign"},{"content":"Assigns an error code value and category to an error condition.","pos":[2464,2527]},{"content":"Parameters","pos":[2607,2617]},{"content":"Parameter","pos":[2624,2633]},{"content":"Description","pos":[2634,2645]},{"pos":[2694,2744],"content":"The error code value to store in the <ph id=\"ph1\">`error_code`</ph>.","source":"The error code value to store in the `error_code`."},{"pos":[2756,2804],"content":"The error category to store in the <ph id=\"ph1\">`error_code`</ph>.","source":"The error category to store in the `error_code`."},{"content":"Remarks","pos":[2815,2822]},{"pos":[2826,2907],"content":"The member function stores <ph id=\"ph1\">`val`</ph> as the error code value and a pointer to <ph id=\"ph2\">`_Cat`</ph>.","source":"The member function stores `val` as the error code value and a pointer to `_Cat`."},{"pos":[2959,2984],"content":"error_condition::category"},{"content":"Returns the error category.","pos":[2988,3015]},{"content":"Return Value","pos":[3078,3090]},{"content":"A reference to the stored error category","pos":[3094,3134]},{"content":"Remarks","pos":[3144,3151]},{"pos":[3200,3222],"content":"error_condition::clear"},{"content":"Clears the error code value and category.","pos":[3226,3267]},{"content":"Remarks","pos":[3299,3306]},{"pos":[3310,3472],"content":"The member function stores a zero error code value and a pointer to the <bpt id=\"p1\">[</bpt>generic_category<ept id=\"p1\">](../standard-library/system-error-functions.md#generic_category)</ept> object.","source":"The member function stores a zero error code value and a pointer to the [generic_category](../standard-library/system-error-functions.md#generic_category) object."},{"pos":[3531,3563],"content":"error_condition::error_condition"},{"pos":[3567,3614],"content":"Constructs an object of type <ph id=\"ph1\">`error_condition`</ph>.","source":"Constructs an object of type `error_condition`."},{"content":"Parameters","pos":[3865,3875]},{"content":"Parameter","pos":[3882,3891]},{"content":"Description","pos":[3892,3903]},{"pos":[3952,4007],"content":"The error code value to store in the <ph id=\"ph1\">`error_condition`</ph>.","source":"The error code value to store in the `error_condition`."},{"pos":[4019,4072],"content":"The error category to store in the <ph id=\"ph1\">`error_condition`</ph>.","source":"The error category to store in the `error_condition`."},{"pos":[4088,4144],"content":"The enumeration value to store in the <ph id=\"ph1\">`error_condition`</ph>.","source":"The enumeration value to store in the `error_condition`."},{"content":"Remarks","pos":[4155,4162]},{"pos":[4166,4323],"content":"The first constructor stores a zero error code value and a pointer to the <bpt id=\"p1\">[</bpt>generic_category<ept id=\"p1\">](../standard-library/system-error-functions.md#generic_category)</ept>.","source":"The first constructor stores a zero error code value and a pointer to the [generic_category](../standard-library/system-error-functions.md#generic_category)."},{"pos":[4330,4494],"content":"The second constructor stores <ph id=\"ph1\">`val`</ph> as the error code value and a pointer to <bpt id=\"p1\">[</bpt>error_category<ept id=\"p1\">](http://msdn.microsoft.com/en-us/6fe57a15-63a1-4e79-8af4-6738e43e19c8)</ept>.","source":"The second constructor stores `val` as the error code value and a pointer to [error_category](http://msdn.microsoft.com/en-us/6fe57a15-63a1-4e79-8af4-6738e43e19c8)."},{"pos":[4501,4681],"content":"The third constructor stores <ph id=\"ph1\">`(value_type)_Errcode`</ph> as the error code value and a pointer to the <bpt id=\"p1\">[</bpt>generic_category<ept id=\"p1\">](../standard-library/system-error-functions.md#generic_category)</ept>.","source":"The third constructor stores `(value_type)_Errcode` as the error code value and a pointer to the [generic_category](../standard-library/system-error-functions.md#generic_category)."},{"pos":[4732,4756],"content":"error_condition::message"},{"content":"Returns the name of the error code.","pos":[4760,4795]},{"content":"Return Value","pos":[4842,4854]},{"pos":[4858,4909],"content":"A <ph id=\"ph1\">`string`</ph> representing the name of the error code.","source":"A `string` representing the name of the error code."},{"content":"Remarks","pos":[4919,4926]},{"pos":[4930,4989],"content":"This member function returns <ph id=\"ph1\">`category().message(value())`</ph>.","source":"This member function returns `category().message(value())`."},{"pos":[5047,5074],"content":"error_condition::operator=="},{"pos":[5078,5131],"content":"Tests for equality between <ph id=\"ph1\">`error_condition`</ph> objects.","source":"Tests for equality between `error_condition` objects."},{"content":"Parameters","pos":[5207,5217]},{"content":"Parameter","pos":[5224,5233]},{"content":"Description","pos":[5234,5245]},{"content":"The ojbect to be tested for equality.","pos":[5296,5333]},{"content":"Return Value","pos":[5344,5356]},{"pos":[5360,5430],"content":"<bpt id=\"p1\">**</bpt>true<ept id=\"p1\">**</ept> if the objects are equal; <bpt id=\"p2\">**</bpt>false<ept id=\"p2\">**</ept> if objects are not equal.","source":"**true** if the objects are equal; **false** if objects are not equal."},{"content":"Remarks","pos":[5440,5447]},{"pos":[5451,5538],"content":"The member operator returns <ph id=\"ph1\">`category() == right.category() &amp;&amp; value == right.value()`</ph>.","source":"The member operator returns `category() == right.category() && value == right.value()`."},{"pos":[5594,5621],"content":"error_condition::operator!="},{"pos":[5625,5680],"content":"Tests for inequality between <ph id=\"ph1\">`error_condition`</ph> objects.","source":"Tests for inequality between `error_condition` objects."},{"content":"Parameters","pos":[5756,5766]},{"content":"Parameter","pos":[5773,5782]},{"content":"Description","pos":[5783,5794]},{"content":"The object to be tested for inequality.","pos":[5845,5884]},{"content":"Return Value","pos":[5895,5907]},{"pos":[5911,6036],"content":"<bpt id=\"p1\">**</bpt>true<ept id=\"p1\">**</ept> if the <ph id=\"ph1\">`error_condition`</ph> object is not equal to the <ph id=\"ph2\">`error_condition`</ph> object passed in <ph id=\"ph3\">`right`</ph>; otherwise <bpt id=\"p2\">**</bpt>false<ept id=\"p2\">**</ept>.","source":"**true** if the `error_condition` object is not equal to the `error_condition` object passed in `right`; otherwise **false**."},{"content":"Remarks","pos":[6046,6053]},{"pos":[6057,6105],"content":"The member operator returns <ph id=\"ph1\">`!(*this == right)`</ph>.","source":"The member operator returns `!(*this == right)`."},{"pos":[6161,6186],"content":"error_condition::operator"},{"pos":[6194,6294],"content":"Tests if the <ph id=\"ph1\">`error_condition`</ph> object is less than the <ph id=\"ph2\">`error_code`</ph> object passed in for comparison.","source":"Tests if the `error_condition` object is less than the `error_code` object passed in for comparison."},{"content":"Parameters","pos":[6369,6379]},{"content":"Parameter","pos":[6386,6395]},{"content":"Description","pos":[6396,6407]},{"pos":[6458,6502],"content":"The <ph id=\"ph1\">`error_condition`</ph> object to be compared.","source":"The `error_condition` object to be compared."},{"content":"Return Value","pos":[6513,6525]},{"pos":[6529,6659],"content":"<bpt id=\"p1\">**</bpt>true<ept id=\"p1\">**</ept> if the <ph id=\"ph1\">`error_condition`</ph> object is less than the <ph id=\"ph2\">`error_condition`</ph> object passed in for comparison; Otherwise, <bpt id=\"p2\">**</bpt>false<ept id=\"p2\">**</ept>.","source":"**true** if the `error_condition` object is less than the `error_condition` object passed in for comparison; Otherwise, **false**."},{"content":"Remarks","pos":[6669,6676]},{"pos":[6680,6799],"content":"The member operator returns <ph id=\"ph1\">`category() &lt; right.category() || category() == right.category() &amp;&amp; value &lt; right.value()`</ph>.","source":"The member operator returns `category() < right.category() || category() == right.category() && value < right.value()`."},{"pos":[6854,6880],"content":"error_condition::operator="},{"pos":[6884,6948],"content":"Assigns a new enumeration value to the <ph id=\"ph1\">`error_condition`</ph> object.","source":"Assigns a new enumeration value to the `error_condition` object."},{"content":"Parameters","pos":[7140,7150]},{"content":"Parameter","pos":[7157,7166]},{"content":"Description","pos":[7167,7178]},{"pos":[7232,7296],"content":"The enumeration value to assign to the <ph id=\"ph1\">`error_condition`</ph> object.","source":"The enumeration value to assign to the `error_condition` object."},{"content":"Return Value","pos":[7307,7319]},{"pos":[7323,7439],"content":"A reference to the <ph id=\"ph1\">`error_condition`</ph> object that is being assigned the new enumeration value by the member function.","source":"A reference to the `error_condition` object that is being assigned the new enumeration value by the member function."},{"content":"Remarks","pos":[7449,7456]},{"content":"The member operator stores <ph id=\"ph1\">`(value_type)error`</ph> as the error code value and a pointer to the <bpt id=\"p1\">[</bpt>generic_category<ept id=\"p1\">](../standard-library/system-error-functions.md#generic_category)</ept>.","pos":[7460,7635],"source":"The member operator stores `(value_type)error` as the error code value and a pointer to the [generic_category](../standard-library/system-error-functions.md#generic_category)."},{"content":"It returns <ph id=\"ph1\">`*this`</ph>.","pos":[7636,7655],"source":" It returns `*this`."},{"pos":[7712,7742],"content":"error_condition::operator bool"},{"pos":[7746,7789],"content":"Casts a variable of type <ph id=\"ph1\">`error_condition`</ph>.","source":"Casts a variable of type `error_condition`."},{"content":"Return Value","pos":[7844,7856]},{"pos":[7860,7910],"content":"The Boolean value of the <ph id=\"ph1\">`error_condition`</ph> object.","source":"The Boolean value of the `error_condition` object."},{"content":"Remarks","pos":[7920,7927]},{"content":"The operator returns a value convertible to <ph id=\"ph1\">`true`</ph> only if <bpt id=\"p1\">[</bpt>value<ept id=\"p1\">](#error_condition__value)</ept> is not equal to zero.","pos":[7931,8044],"source":"The operator returns a value convertible to `true` only if [value](#error_condition__value) is not equal to zero."},{"content":"The return type is convertible only to <ph id=\"ph1\">`bool`</ph>, not to <ph id=\"ph2\">`void *`</ph> or other known scalar types.","pos":[8045,8136],"source":" The return type is convertible only to `bool`, not to `void *` or other known scalar types."},{"pos":[8185,8207],"content":"error_condition::value"},{"content":"Returns the stored error code value.","pos":[8211,8247]},{"content":"Return Value","pos":[8296,8308]},{"pos":[8312,8391],"content":"The stored error code value of type <bpt id=\"p1\">[</bpt>value_type<ept id=\"p1\">](#error_condition__value_type)</ept>.","source":"The stored error code value of type [value_type](#error_condition__value_type)."},{"content":"Remarks","pos":[8401,8408]},{"pos":[8462,8489],"content":"error_condition::value_type"},{"content":"A type that represents the stored error code value.","pos":[8493,8544]},{"content":"Remarks","pos":[8591,8598]},{"pos":[8602,8645],"content":"The type definition is a synonym for <ph id=\"ph1\">`int`</ph>.","source":"The type definition is a synonym for `int`."},{"content":"See Also","pos":[8654,8662]},{"content":"error_category Class","pos":[8667,8687]},{"content":"&lt;system_error&gt;","pos":[8739,8753],"source":"<system_error>"}],"content":"---\ntitle: \"error_condition Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"system_error/std::error_condition\"\n  - \"std::error_condition\"\n  - \"error_condition\"\n  - \"std.error_condition\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"error_condition class\"\nms.assetid: 6690f481-97c9-4554-a0ff-851dc96b7a06\ncaps.latest.revision: 16\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# error_condition Class\nRepresents user-defined error codes.  \n  \n## Syntax  \n  \n```\nclass error_condition;\n```  \n  \n## Remarks  \n An object of type `error_condition` stores an error code value and a pointer to an object that represents a [category](../standard-library/error-category-class.md) of error codes used for reported user-defined errors.  \n  \n### Constructors  \n  \n|||  \n|-|-|  \n|[error_condition](#error_condition__error_condition)|Constructs an object of type `error_condition`.|  \n  \n### Typedefs  \n  \n|||  \n|-|-|  \n|[value_type](#error_condition__value_type)|A type that represents the stored error code value.|  \n  \n### Member Functions  \n  \n|||  \n|-|-|  \n|[assign](#error_condition__assign)|Assigns an error code value and category to an error condition.|  \n|[category](#error_condition__category)|Returns the error category.|  \n|[clear](#error_condition__clear)|Clears the error code value and category.|  \n|[message](#error_condition__message)|Returns the name of the error code.|  \n  \n### Operators  \n  \n|||  \n|-|-|  \n|[operator==](#error_condition__operator_eq_eq)|Tests for equality between `error_condition` objects.|  \n|[operator!=](#error_condition__operator_neq)|Tests for inequality between `error_condition` objects.|  \n|[operator<](#error_condition__operator_lt_)|Tests if the `error_condition` object is less than the `error_code` object passed in for comparison.|  \n|[operator=](#error_condition__operator_eq)|Assigns a new enumeration value to the `error_condition` object.|  \n|[operator bool](#error_condition__operator_bool)|Casts a variable of type `error_condition`.|  \n  \n## Requirements  \n **Header:** <system_error>  \n  \n **Namespace:** std  \n  \n##  <a name=\"error_condition__assign\"></a>  error_condition::assign  \n Assigns an error code value and category to an error condition.  \n  \n```\nvoid assign(value_type val, const error_category& _Cat);\n```  \n  \n### Parameters  \n  \n|Parameter|Description|  \n|---------------|-----------------|  \n|`val`|The error code value to store in the `error_code`.|  \n|`_Cat`|The error category to store in the `error_code`.|  \n  \n### Remarks  \n The member function stores `val` as the error code value and a pointer to `_Cat`.  \n  \n##  <a name=\"error_condition__category\"></a>  error_condition::category  \n Returns the error category.  \n  \n```\nconst error_category& category() const;\n```  \n  \n### Return Value  \n A reference to the stored error category  \n  \n### Remarks  \n  \n##  <a name=\"error_condition__clear\"></a>  error_condition::clear  \n Clears the error code value and category.  \n  \n```\nclear();\n```  \n  \n### Remarks  \n The member function stores a zero error code value and a pointer to the [generic_category](../standard-library/system-error-functions.md#generic_category) object.  \n  \n##  <a name=\"error_condition__error_condition\"></a>  error_condition::error_condition  \n Constructs an object of type `error_condition`.  \n  \n```\nerror_condition();\n\nerror_condition(value_type val, const error_category& _Cat);\n\ntemplate <class _Enum>\nerror_condition(_Enum _Errcode,\n    typename enable_if<is_error_condition_enum<_Enum>::value,\n    error_code>::type* = 0);\n```  \n  \n### Parameters  \n  \n|Parameter|Description|  \n|---------------|-----------------|  \n|`val`|The error code value to store in the `error_condition`.|  \n|`_Cat`|The error category to store in the `error_condition`.|  \n|`_Errcode`|The enumeration value to store in the `error_condition`.|  \n  \n### Remarks  \n The first constructor stores a zero error code value and a pointer to the [generic_category](../standard-library/system-error-functions.md#generic_category).  \n  \n The second constructor stores `val` as the error code value and a pointer to [error_category](http://msdn.microsoft.com/en-us/6fe57a15-63a1-4e79-8af4-6738e43e19c8).  \n  \n The third constructor stores `(value_type)_Errcode` as the error code value and a pointer to the [generic_category](../standard-library/system-error-functions.md#generic_category).  \n  \n##  <a name=\"error_condition__message\"></a>  error_condition::message  \n Returns the name of the error code.  \n  \n```\nstring message() const;\n```  \n  \n### Return Value  \n A `string` representing the name of the error code.  \n  \n### Remarks  \n This member function returns `category().message(value())`.  \n  \n##  <a name=\"error_condition__operator_eq_eq\"></a>  error_condition::operator==  \n Tests for equality between `error_condition` objects.  \n  \n```\nbool operator==(const error_condition& right) const;\n```  \n  \n### Parameters  \n  \n|Parameter|Description|  \n|---------------|-----------------|  \n|`right`|The ojbect to be tested for equality.|  \n  \n### Return Value  \n **true** if the objects are equal; **false** if objects are not equal.  \n  \n### Remarks  \n The member operator returns `category() == right.category() && value == right.value()`.  \n  \n##  <a name=\"error_condition__operator_neq\"></a>  error_condition::operator!=  \n Tests for inequality between `error_condition` objects.  \n  \n```\nbool operator!=(const error_condition& right) const;\n```  \n  \n### Parameters  \n  \n|Parameter|Description|  \n|---------------|-----------------|  \n|`right`|The object to be tested for inequality.|  \n  \n### Return Value  \n **true** if the `error_condition` object is not equal to the `error_condition` object passed in `right`; otherwise **false**.  \n  \n### Remarks  \n The member operator returns `!(*this == right)`.  \n  \n##  <a name=\"error_condition__operator_lt_\"></a>  error_condition::operator&lt;  \n Tests if the `error_condition` object is less than the `error_code` object passed in for comparison.  \n  \n```\nbool operator<(const error_condition& right) const;\n```  \n  \n### Parameters  \n  \n|Parameter|Description|  \n|---------------|-----------------|  \n|`right`|The `error_condition` object to be compared.|  \n  \n### Return Value  \n **true** if the `error_condition` object is less than the `error_condition` object passed in for comparison; Otherwise, **false**.  \n  \n### Remarks  \n The member operator returns `category() < right.category() || category() == right.category() && value < right.value()`.  \n  \n##  <a name=\"error_condition__operator_eq\"></a>  error_condition::operator=  \n Assigns a new enumeration value to the `error_condition` object.  \n  \n```\ntemplate <class _Enum>\nerror_condition(_Enum error,\n    typename enable_if<is_error_condition_enum<_Enum>::value,\n    error_condition>::type&\n operator=(Enum _Errcode);\n```  \n  \n### Parameters  \n  \n|Parameter|Description|  \n|---------------|-----------------|  \n|`_Errcode`|The enumeration value to assign to the `error_condition` object.|  \n  \n### Return Value  \n A reference to the `error_condition` object that is being assigned the new enumeration value by the member function.  \n  \n### Remarks  \n The member operator stores `(value_type)error` as the error code value and a pointer to the [generic_category](../standard-library/system-error-functions.md#generic_category). It returns `*this`.  \n  \n##  <a name=\"error_condition__operator_bool\"></a>  error_condition::operator bool  \n Casts a variable of type `error_condition`.  \n  \n```\nexplicit operator bool() const;\n```  \n  \n### Return Value  \n The Boolean value of the `error_condition` object.  \n  \n### Remarks  \n The operator returns a value convertible to `true` only if [value](#error_condition__value) is not equal to zero. The return type is convertible only to `bool`, not to `void *` or other known scalar types.  \n  \n##  <a name=\"error_condition__value\"></a>  error_condition::value  \n Returns the stored error code value.  \n  \n```\nvalue_type value() const;\n```  \n  \n### Return Value  \n The stored error code value of type [value_type](#error_condition__value_type).  \n  \n### Remarks  \n  \n##  <a name=\"error_condition__value_type\"></a>  error_condition::value_type  \n A type that represents the stored error code value.  \n  \n```\ntypedef int value_type;\n```  \n  \n### Remarks  \n The type definition is a synonym for `int`.  \n  \n## See Also  \n [error_category Class](../standard-library/error-category-class.md)   \n [<system_error>](../standard-library/system-error.md)\n\n\n\n"}