{"nodes":[{"pos":[12,54],"content":"InterfaceTraits Structure | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"InterfaceTraits Structure | Microsoft Docs","pos":[0,42]}]},{"content":"InterfaceTraits Structure","pos":[688,713]},{"content":"Supports the WRL infrastructure and is not intended to be used directly from your code.","pos":[714,801]},{"content":"Syntax","pos":[810,816]},{"content":"Parameters","pos":[1104,1114]},{"content":"The name of an interface.","pos":[1126,1151]},{"content":"For RuntimeClass, Implements and ChainInterfaces, an interface that won't be in the list of supported interface IDs.","pos":[1175,1291]},{"content":"Remarks","pos":[1300,1307]},{"content":"Implements common characteristics of an interface.","pos":[1311,1361]},{"content":"The second template is a specialization for cloaked interfaces.","pos":[1368,1431]},{"content":"The third template is a specialization for Nil parameters.","pos":[1432,1490]},{"content":"Members","pos":[1499,1506]},{"content":"Public Typedefs","pos":[1516,1531]},{"content":"Name","pos":[1538,1542]},{"content":"Description","pos":[1543,1554]},{"pos":[1599,1641],"content":"A synonym for the <ph id=\"ph1\">`I0`</ph> template parameter.","source":"A synonym for the `I0` template parameter."},{"content":"Public Methods","pos":[1652,1666]},{"content":"Name","pos":[1673,1677]},{"content":"Description","pos":[1678,1689]},{"content":"InterfaceTraits::CanCastTo Method","pos":[1728,1761]},{"pos":[1811,1886],"content":"Indicates whether the specified pointer can be cast to a pointer to <ph id=\"ph1\">`Base`</ph>.","source":"Indicates whether the specified pointer can be cast to a pointer to `Base`."},{"content":"InterfaceTraits::CastToBase Method","pos":[1892,1926]},{"pos":[1977,2028],"content":"Casts the specified pointer to a pointer to <ph id=\"ph1\">`Base`</ph>.","source":"Casts the specified pointer to a pointer to `Base`."},{"content":"InterfaceTraits::CastToUnknown Method","pos":[2034,2071]},{"content":"Casts the specified pointer to a pointer to IUnknown.","pos":[2125,2178]},{"content":"InterfaceTraits::FillArrayWithIid Method","pos":[2184,2224]},{"pos":[2281,2369],"content":"Assigns the interface ID of <ph id=\"ph1\">`Base`</ph> to the array element specified by the index argument.","source":"Assigns the interface ID of `Base` to the array element specified by the index argument."},{"content":"InterfaceTraits::Verify Method","pos":[2375,2405]},{"content":"Verifies that Base is properly derived.","pos":[2452,2491]},{"content":"Public Constants","pos":[2502,2518]},{"content":"Name","pos":[2525,2529]},{"content":"Description","pos":[2530,2541]},{"content":"InterfaceTraits::IidCount Constant","pos":[2580,2614]},{"content":"Holds the number of interface IDs associated with the current InterfaceTraits object.","pos":[2665,2750]},{"content":"Inheritance Hierarchy","pos":[2760,2781]},{"content":"Requirements","pos":[2811,2823]},{"pos":[2827,2851],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> implements.h","source":"**Header:** implements.h"},{"pos":[2858,2896],"content":"<bpt id=\"p1\">**</bpt>Namespace:<ept id=\"p1\">**</ept> Microsoft::WRL::Details","source":"**Namespace:** Microsoft::WRL::Details"},{"content":"See Also","pos":[2905,2913]},{"content":"Microsoft::WRL::Details Namespace","pos":[2918,2951]}],"content":"---\ntitle: \"InterfaceTraits Structure | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"implements/Microsoft::WRL::Details::InterfaceTraits\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"InterfaceTraits structure\"\nms.assetid: ede0c284-19a7-4892-9738-ff3da4923d0a\ncaps.latest.revision: 5\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"ru-ru\"\n  - \"zh-cn\"\n  - \"zh-tw\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"tr-tr\"\n---\n# InterfaceTraits Structure\nSupports the WRL infrastructure and is not intended to be used directly from your code.  \n  \n## Syntax  \n  \n```  \ntemplate<  \n   typename I0  \n>  \nstruct __declspec(novtable) InterfaceTraits;  \ntemplate<  \n   typename CloakedType  \n>  \nstruct __declspec(novtable) InterfaceTraits<CloakedIid<CloakedType>>;  \n  \ntemplate<>  \nstruct __declspec(novtable) InterfaceTraits<Nil>;  \n```  \n  \n#### Parameters  \n `I0`  \n The name of an interface.  \n  \n `CloakedType`  \n For RuntimeClass, Implements and ChainInterfaces, an interface that won't be in the list of supported interface IDs.  \n  \n## Remarks  \n Implements common characteristics of an interface.  \n  \n The second template is a specialization for cloaked interfaces. The third template is a specialization for Nil parameters.  \n  \n## Members  \n  \n### Public Typedefs  \n  \n|Name|Description|  \n|----------|-----------------|  \n|`Base`|A synonym for the `I0` template parameter.|  \n  \n### Public Methods  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[InterfaceTraits::CanCastTo Method](../windows/interfacetraits-cancastto-method.md)|Indicates whether the specified pointer can be cast to a pointer to `Base`.|  \n|[InterfaceTraits::CastToBase Method](../windows/interfacetraits-casttobase-method.md)|Casts the specified pointer to a pointer to `Base`.|  \n|[InterfaceTraits::CastToUnknown Method](../windows/interfacetraits-casttounknown-method.md)|Casts the specified pointer to a pointer to IUnknown.|  \n|[InterfaceTraits::FillArrayWithIid Method](../windows/interfacetraits-fillarraywithiid-method.md)|Assigns the interface ID of `Base` to the array element specified by the index argument.|  \n|[InterfaceTraits::Verify Method](../windows/interfacetraits-verify-method.md)|Verifies that Base is properly derived.|  \n  \n### Public Constants  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[InterfaceTraits::IidCount Constant](../windows/interfacetraits-iidcount-constant.md)|Holds the number of interface IDs associated with the current InterfaceTraits object.|  \n  \n## Inheritance Hierarchy  \n `InterfaceTraits`  \n  \n## Requirements  \n **Header:** implements.h  \n  \n **Namespace:** Microsoft::WRL::Details  \n  \n## See Also  \n [Microsoft::WRL::Details Namespace](../windows/microsoft-wrl-details-namespace.md)"}