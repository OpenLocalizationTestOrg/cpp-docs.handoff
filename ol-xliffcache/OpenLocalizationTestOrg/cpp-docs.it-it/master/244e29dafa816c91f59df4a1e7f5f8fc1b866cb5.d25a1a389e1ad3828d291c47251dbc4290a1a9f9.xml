{"nodes":[{"pos":[12,43],"content":"&lt;thread&gt; | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"thread<ph id=\"ph1\">&amp;gt;</ph> | Microsoft Docs","pos":[4,31],"source":"thread&gt; | Microsoft Docs"}]},{"content":"thread","pos":[557,563]},{"pos":[568,668],"content":"Include the standard header <ph id=\"ph1\">\\&lt;</ph>thread&gt; to define the class <ph id=\"ph2\">`thread`</ph> and various supporting functions.","source":"Include the standard header \\<thread> to define the class `thread` and various supporting functions."},{"content":"Syntax","pos":[677,683]},{"content":"Remarks","pos":[730,737]},{"pos":[745,840],"content":"[!NOTE]\n In code that is compiled by using **/clr** or **/clr:pure**, this header is blocked.","leadings":["","> "],"nodes":[{"content":"In code that is compiled by using <bpt id=\"p1\">**</bpt>/clr<ept id=\"p1\">**</ept> or <bpt id=\"p2\">**</bpt>/clr:pure<ept id=\"p2\">**</ept>, this header is blocked.","pos":[9,93],"source":" In code that is compiled by using **/clr** or **/clr:pure**, this header is blocked."}]},{"pos":[847,962],"content":"The <ph id=\"ph1\">`__STDCPP_THREADS__`</ph> macro is defined as a nonzero value to indicate that threads are supported by this header.","source":"The `__STDCPP_THREADS__` macro is defined as a nonzero value to indicate that threads are supported by this header."},{"content":"Members","pos":[971,978]},{"content":"Public Classes","pos":[988,1002]},{"content":"Name","pos":[1009,1013]},{"content":"Description","pos":[1014,1025]},{"content":"thread Class","pos":[1064,1076]},{"content":"Defines an object that is used to observe and manage a thread of execution in an application.","pos":[1115,1208]},{"content":"Public Structures","pos":[1219,1236]},{"content":"Name","pos":[1243,1247]},{"content":"Description","pos":[1248,1259]},{"content":"hash Structure (STL)","pos":[1298,1318]},{"content":"Defines a member function that returns a value that is uniquely determined by a <ph id=\"ph1\">`thread::id`</ph>.","pos":[1363,1456],"source":"Defines a member function that returns a value that is uniquely determined by a `thread::id`."},{"content":"The member function defines a <bpt id=\"p1\">[</bpt>hash<ept id=\"p1\">](../standard-library/hash-class.md)</ept> function that is suitable for mapping values of type <ph id=\"ph1\">`thread::id`</ph> to a distribution of index values.","pos":[1457,1629],"source":" The member function defines a [hash](../standard-library/hash-class.md) function that is suitable for mapping values of type `thread::id` to a distribution of index values."},{"content":"Public Functions","pos":[1640,1656]},{"content":"Name","pos":[1663,1667]},{"content":"Description","pos":[1668,1679]},{"content":"get_id Function","pos":[1718,1733]},{"content":"Uniquely identifies the current thread of execution.","pos":[1792,1844]},{"content":"sleep_for Function","pos":[1850,1868]},{"content":"Blocks the calling thread.","pos":[1930,1956]},{"content":"sleep_until Function","pos":[1962,1982]},{"content":"Blocks the calling thread at least until the specified time.","pos":[2046,2106]},{"content":"swap Function","pos":[2112,2125]},{"pos":[2182,2227],"content":"Exchanges the states of two <ph id=\"ph1\">`thread`</ph> objects.","source":"Exchanges the states of two `thread` objects."},{"content":"yield Function","pos":[2233,2247]},{"content":"Signals the operating system to run other threads, even if the current thread would ordinarily continue to run.","pos":[2305,2416]},{"content":"Public Operators","pos":[2427,2443]},{"content":"Name","pos":[2450,2454]},{"content":"Description","pos":[2455,2466]},{"content":"operator&gt;= Operator","pos":[2505,2524],"source":"operator>= Operator"},{"pos":[2583,2662],"content":"Determines whether one <ph id=\"ph1\">`thread::id`</ph> object is greater than or equal to another.","source":"Determines whether one `thread::id` object is greater than or equal to another."},{"content":"operator&gt; Operator","pos":[2668,2686],"source":"operator> Operator"},{"pos":[2742,2809],"content":"Determines whether one <ph id=\"ph1\">`thread::id`</ph> object is greater than another.","source":"Determines whether one `thread::id` object is greater than another."},{"content":"operator&lt;= Operator","pos":[2815,2834],"source":"operator<= Operator"},{"pos":[2893,2969],"content":"Determines whether one <ph id=\"ph1\">`thread::id`</ph> object is less than or equal to another.","source":"Determines whether one `thread::id` object is less than or equal to another."},{"content":"operator&lt; Operator","pos":[2975,2993],"source":"operator< Operator"},{"pos":[3049,3113],"content":"Determines whether one <ph id=\"ph1\">`thread::id`</ph> object is less than another.","source":"Determines whether one `thread::id` object is less than another."},{"content":"operator!= Operator","pos":[3119,3138]},{"pos":[3194,3243],"content":"Compares two <ph id=\"ph1\">`thread::id`</ph> objects for inequality.","source":"Compares two `thread::id` objects for inequality."},{"content":"operator== Operator","pos":[3249,3268]},{"pos":[3326,3373],"content":"Compares two <ph id=\"ph1\">`thread::id`</ph> objects for equality.","source":"Compares two `thread::id` objects for equality."},{"content":"operator&lt;&lt; Operator","pos":[3379,3398],"source":"operator<< Operator"},{"pos":[3458,3527],"content":"Inserts a text representation of a <ph id=\"ph1\">`thread::id`</ph> object into a stream.","source":"Inserts a text representation of a `thread::id` object into a stream."},{"content":"See Also","pos":[3537,3545]},{"content":"Header Files Reference","pos":[3550,3572]},{"content":"Thread Safety in the C++ Standard Library","pos":[3637,3678]}],"content":"---\ntitle: \"&lt;thread&gt; | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"<thread>\"\ndev_langs: \n  - \"C++\"\nms.assetid: 0c858405-4efb-449d-bf76-70d3693c9234\ncaps.latest.revision: 18\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# &lt;thread&gt;\nInclude the standard header \\<thread> to define the class `thread` and various supporting functions.  \n  \n## Syntax  \n  \n```cpp  \n#include <thread>  \n```  \n  \n## Remarks  \n  \n> [!NOTE]\n>  In code that is compiled by using **/clr** or **/clr:pure**, this header is blocked.  \n  \n The `__STDCPP_THREADS__` macro is defined as a nonzero value to indicate that threads are supported by this header.  \n  \n## Members  \n  \n### Public Classes  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[thread Class](../standard-library/thread-class.md)|Defines an object that is used to observe and manage a thread of execution in an application.|  \n  \n### Public Structures  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[hash Structure (STL)](../standard-library/hash-structure-stl.md)|Defines a member function that returns a value that is uniquely determined by a `thread::id`. The member function defines a [hash](../standard-library/hash-class.md) function that is suitable for mapping values of type `thread::id` to a distribution of index values.|  \n  \n### Public Functions  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[get_id Function](../standard-library/thread-functions.md#get_id_function)|Uniquely identifies the current thread of execution.|  \n|[sleep_for Function](../standard-library/thread-functions.md#sleep_for_function)|Blocks the calling thread.|  \n|[sleep_until Function](../standard-library/thread-functions.md#sleep_until_function)|Blocks the calling thread at least until the specified time.|  \n|[swap Function](../standard-library/thread-functions.md#swap_function)|Exchanges the states of two `thread` objects.|  \n|[yield Function](../standard-library/thread-functions.md#yield_function)|Signals the operating system to run other threads, even if the current thread would ordinarily continue to run.|  \n  \n### Public Operators  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[operator>= Operator](../standard-library/thread-operators.md#operator_gt__eq)|Determines whether one `thread::id` object is greater than or equal to another.|  \n|[operator> Operator](../standard-library/thread-operators.md#operator_gt_)|Determines whether one `thread::id` object is greater than another.|  \n|[operator<= Operator](../standard-library/thread-operators.md#operator_lt__eq)|Determines whether one `thread::id` object is less than or equal to another.|  \n|[operator< Operator](../standard-library/thread-operators.md#operator_lt_)|Determines whether one `thread::id` object is less than another.|  \n|[operator!= Operator](../standard-library/thread-operators.md#operator_neq)|Compares two `thread::id` objects for inequality.|  \n|[operator== Operator](../standard-library/thread-operators.md#operator_eq_eq)|Compares two `thread::id` objects for equality.|  \n|[operator<< Operator](../standard-library/thread-operators.md#operator_lt__lt_)|Inserts a text representation of a `thread::id` object into a stream.|  \n  \n## See Also  \n [Header Files Reference](../standard-library/cpp-standard-library-header-files.md)   \n [Thread Safety in the C++ Standard Library](../standard-library/thread-safety-in-the-cpp-standard-library.md)\n\n"}