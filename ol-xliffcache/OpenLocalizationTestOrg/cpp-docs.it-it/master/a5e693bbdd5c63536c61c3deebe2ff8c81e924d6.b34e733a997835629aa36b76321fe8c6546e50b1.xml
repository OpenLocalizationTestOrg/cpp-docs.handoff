{"nodes":[{"pos":[12,61],"content":"subtract_with_carry_engine Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"subtract_with_carry_engine Class | Microsoft Docs","pos":[0,49]}]},{"pos":[859,891],"content":"subtract_with_carry_engine Class","linkify":"subtract_with_carry_engine Class","nodes":[{"content":"subtract_with_carry_engine Class","pos":[0,32]}]},{"content":"Generates a random sequence by the subtract-with-carry (lagged Fibonacci) algorithm.","pos":[892,976]},{"pos":[985,991],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[1111,1121],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"The unsigned integer result type.","pos":[1139,1172]},{"content":"For possible types, see <bpt id=\"p1\">[</bpt><ph id=\"ph1\">\\&lt;</ph>random&gt;<ept id=\"p1\">](../standard-library/random.md)</ept>.","pos":[1173,1240],"source":" For possible types, see [\\<random>](../standard-library/random.md)."},{"content":"<bpt id=\"p1\"> **</bpt>Word size<ept id=\"p1\">**</ept>.","pos":[1253,1268],"source":" **Word size**."},{"content":"Size of each word, in bits, of the state sequence.","pos":[1269,1319]},{"content":"<bpt id=\"p1\">**</bpt>Precondition<ept id=\"p1\">**</ept>: <ph id=\"ph1\">`0 &lt; W ≤ numeric_limits&lt;UIntType&gt;::digits`</ph>","pos":[1320,1380],"source":"**Precondition**: `0 < W ≤ numeric_limits<UIntType>::digits`"},{"content":"<bpt id=\"p1\"> **</bpt>Short lag<ept id=\"p1\">**</ept>.","pos":[1393,1408],"source":" **Short lag**."},{"content":"Number of integer values.","pos":[1409,1434]},{"content":"<bpt id=\"p1\">**</bpt>Precondition<ept id=\"p1\">**</ept>: <ph id=\"ph1\">`0 &lt; S &lt; R`</ph>","pos":[1435,1464],"source":"**Precondition**: `0 < S < R`"},{"content":"<bpt id=\"p1\"> **</bpt>Long lag<ept id=\"p1\">**</ept>.","pos":[1477,1491],"source":" **Long lag**."},{"content":"Determines recurrence in the series generated.","pos":[1492,1538]},{"pos":[1547,1554],"content":"Members","linkify":"Members","nodes":[{"content":"Members","pos":[0,7]}]},{"pos":[1825,1994],"content":"<ph id=\"ph1\">`default_seed`</ph> is a member constant, defined as <ph id=\"ph2\">`19780503u`</ph>, used as the default parameter value for <ph id=\"ph3\">`subtract_with_carry_engine::seed`</ph> and the single value constructor.","source":"`default_seed` is a member constant, defined as `19780503u`, used as the default parameter value for `subtract_with_carry_engine::seed` and the single value constructor."},{"pos":[2004,2094],"content":"For more information about engine members, see <bpt id=\"p1\">[</bpt><ph id=\"ph1\">\\&lt;</ph>random&gt;<ept id=\"p1\">](../standard-library/random.md)</ept>.","source":"For more information about engine members, see [\\<random>](../standard-library/random.md)."},{"pos":[2103,2110],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The <ph id=\"ph1\">`substract_with_carry_engine`</ph> template class is an improvement over the <bpt id=\"p1\">[</bpt>linear_congruential_engine<ept id=\"p1\">](../standard-library/linear-congruential-engine-class.md)</ept>.","pos":[2114,2276],"source":"The `substract_with_carry_engine` template class is an improvement over the [linear_congruential_engine](../standard-library/linear-congruential-engine-class.md)."},{"content":"Neither for these engines is as fast or with as high quality results as the <bpt id=\"p1\">[</bpt>mersenne_twister_engine<ept id=\"p1\">](../standard-library/mersenne-twister-engine-class.md)</ept>.","pos":[2277,2433],"source":" Neither for these engines is as fast or with as high quality results as the [mersenne_twister_engine](../standard-library/mersenne-twister-engine-class.md)."},{"content":"This engine produces values of a user-specified unsigned integral type using the recurrence relation ( <bpt id=\"p1\">*</bpt>period<ept id=\"p1\">*</ept>) <ph id=\"ph1\">`x(i) = (x(i - R) - x(i - S) - cy(i - 1)) mod M`</ph>, where <ph id=\"ph2\">`cy(i)`</ph> has the value <ph id=\"ph3\">`1`</ph> if <ph id=\"ph4\">`x(i - S) - x(i - R) - cy(i - 1) &lt; 0`</ph>, otherwise <ph id=\"ph5\">`0`</ph>, and <ph id=\"ph6\">`M`</ph> has the value <ph id=\"ph7\">`2`</ph><bpt id=\"p2\">&lt;sup&gt;</bpt>W<ept id=\"p2\">&lt;/sup&gt;</ept>. The engine's state is a carry indicator plus <ph id=\"ph8\">`R`</ph> values.","pos":[2440,2787],"source":"This engine produces values of a user-specified unsigned integral type using the recurrence relation ( *period*) `x(i) = (x(i - R) - x(i - S) - cy(i - 1)) mod M`, where `cy(i)` has the value `1` if `x(i - S) - x(i - R) - cy(i - 1) < 0`, otherwise `0`, and `M` has the value `2`<sup>W</sup>. The engine's state is a carry indicator plus `R` values."},{"content":"These values consist of the last <ph id=\"ph1\">`R`</ph> values returned if <ph id=\"ph2\">`operator()`</ph> has been called at least <ph id=\"ph3\">`R`</ph> times, otherwise the <ph id=\"ph4\">`N`</ph> values that have been returned and the last <ph id=\"ph5\">`R - N`</ph> values of the seed.","pos":[2788,2982],"source":" These values consist of the last `R` values returned if `operator()` has been called at least `R` times, otherwise the `N` values that have been returned and the last `R - N` values of the seed."},{"pos":[2989,3072],"content":"The template argument <ph id=\"ph1\">`UIntType`</ph> must be large enough to hold values up to <ph id=\"ph2\">`M - 1`</ph>.","source":"The template argument `UIntType` must be large enough to hold values up to `M - 1`."},{"content":"Although you can construct a generator from this engine directly, you can also use one of these predefined typedefs:","pos":[3079,3195]},{"content":"<ph id=\"ph1\">`ranlux24_base`</ph>: Used as a base for <ph id=\"ph2\">`ranlux24`</ph>.","pos":[3202,3249],"source":"`ranlux24_base`: Used as a base for `ranlux24`."},{"content":"<ph id=\"ph1\">`ranlux48_base`</ph>: Used as a base for <ph id=\"ph2\">`ranlux48`</ph>.","pos":[3353,3400],"source":"`ranlux48_base`: Used as a base for `ranlux48`."},{"pos":[3509,3682],"content":"For detailed information about the subract with carry engine algorithm, see the Wikipedia article <bpt id=\"p1\">[</bpt>Lagged Fibonacci generator<ept id=\"p1\">](http://go.microsoft.com/fwlink/LinkId=402445)</ept>.","source":"For detailed information about the subract with carry engine algorithm, see the Wikipedia article [Lagged Fibonacci generator](http://go.microsoft.com/fwlink/LinkId=402445)."},{"pos":[3691,3703],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[3707,3728],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> <ph id=\"ph1\">\\&lt;</ph>random&gt;","source":"**Header:** \\<random>"},{"pos":[3735,3753],"content":"<bpt id=\"p1\">**</bpt>Namespace:<ept id=\"p1\">**</ept> std","source":"**Namespace:** std"},{"pos":[3762,3770],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"pos":[3774,3816],"content":"<bpt id=\"p1\">[</bpt><ph id=\"ph1\">\\&lt;</ph>random&gt;<ept id=\"p1\">](../standard-library/random.md)</ept>","source":"[\\<random>](../standard-library/random.md)"}],"content":"---\ntitle: \"subtract_with_carry_engine Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"tr1.subtract_with_carry_engine\"\n  - \"std::tr1::subtract_with_carry_engine\"\n  - \"random/std::tr1::subtract_with_carry_engine\"\n  - \"subtract_with_carry_engine\"\n  - \"tr1::subtract_with_carry_engine\"\n  - \"std.tr1.subtract_with_carry_engine\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"subtract_with_carry_engine class\"\nms.assetid: 94a055f2-a620-4a22-ac34-c156924bab31\ncaps.latest.revision: 20\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# subtract_with_carry_engine Class\nGenerates a random sequence by the subtract-with-carry (lagged Fibonacci) algorithm.  \n  \n## Syntax  \n  \n```  \ntemplate <class UIntType, size_t W, size_t S, size_t R>  \nclass subtract_with_carry_engine;  \n```  \n  \n#### Parameters  \n `UIntType`  \n The unsigned integer result type. For possible types, see [\\<random>](../standard-library/random.md).  \n  \n `W`  \n **Word size**. Size of each word, in bits, of the state sequence. **Precondition**: `0 < W ≤ numeric_limits<UIntType>::digits`  \n  \n `S`  \n **Short lag**. Number of integer values. **Precondition**: `0 < S < R`  \n  \n `R`  \n **Long lag**. Determines recurrence in the series generated.  \n  \n## Members  \n  \n||||  \n|-|-|-|  \n|`subtract_with_carry_engine::subtract_with_carry_engine`|`subtract_with_carry_engine::min`|`subtract_with_carry_engine::discard`|  \n|`subtract_with_carry_engine::operator()`|`subtract_with_carry_engine::max`|`subtract_with_carry_engine::seed`|  \n|`default_seed` is a member constant, defined as `19780503u`, used as the default parameter value for `subtract_with_carry_engine::seed` and the single value constructor.|||  \n  \n For more information about engine members, see [\\<random>](../standard-library/random.md).  \n  \n## Remarks  \n The `substract_with_carry_engine` template class is an improvement over the [linear_congruential_engine](../standard-library/linear-congruential-engine-class.md). Neither for these engines is as fast or with as high quality results as the [mersenne_twister_engine](../standard-library/mersenne-twister-engine-class.md).  \n  \n This engine produces values of a user-specified unsigned integral type using the recurrence relation ( *period*) `x(i) = (x(i - R) - x(i - S) - cy(i - 1)) mod M`, where `cy(i)` has the value `1` if `x(i - S) - x(i - R) - cy(i - 1) < 0`, otherwise `0`, and `M` has the value `2`<sup>W</sup>. The engine's state is a carry indicator plus `R` values. These values consist of the last `R` values returned if `operator()` has been called at least `R` times, otherwise the `N` values that have been returned and the last `R - N` values of the seed.  \n  \n The template argument `UIntType` must be large enough to hold values up to `M - 1`.  \n  \n Although you can construct a generator from this engine directly, you can also use one of these predefined typedefs:  \n  \n `ranlux24_base`: Used as a base for `ranlux24`.                   \n`typedef subtract_with_carry_engine<unsigned int, 24, 10, 24> ranlux24_base;`  \n  \n `ranlux48_base`: Used as a base for `ranlux48`.                   \n`typedef subtract_with_carry_engine<unsigned long long, 48, 5, 12> ranlux48_base;`  \n  \n For detailed information about the subract with carry engine algorithm, see the Wikipedia article [Lagged Fibonacci generator](http://go.microsoft.com/fwlink/LinkId=402445).  \n  \n## Requirements  \n **Header:** \\<random>  \n  \n **Namespace:** std  \n  \n## See Also  \n [\\<random>](../standard-library/random.md)\n\n"}