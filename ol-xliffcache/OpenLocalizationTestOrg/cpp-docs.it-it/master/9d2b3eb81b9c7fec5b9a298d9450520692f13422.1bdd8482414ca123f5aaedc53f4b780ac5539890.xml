{"nodes":[{"pos":[12,64],"content":"vector&lt;bool&gt;::reference Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"vector<ph id=\"ph1\">&amp;lt;</ph>bool<ph id=\"ph2\">&amp;gt;</ph>::reference Class | Microsoft Docs","pos":[0,52],"source":"vector&lt;bool&gt;::reference Class | Microsoft Docs"}]},{"pos":[681,716],"content":"vector&lt;bool&gt;::reference Class","linkify":"vector&lt;bool&gt;::reference Class","nodes":[{"content":"vector<ph id=\"ph1\">&amp;lt;</ph>bool<ph id=\"ph2\">&amp;gt;</ph>::reference Class","pos":[0,35],"source":"vector&lt;bool&gt;::reference Class"}]},{"pos":[717,870],"content":"The <ph id=\"ph1\">`vector&lt;bool&gt;::reference`</ph> class is a proxy class provided by the <bpt id=\"p1\">[</bpt>vector<ph id=\"ph2\">\\&lt;</ph>bool&gt; Class<ept id=\"p1\">](../standard-library/vector-bool-class.md)</ept> to simulate <ph id=\"ph3\">`bool&amp;`</ph>.","source":"The `vector<bool>::reference` class is a proxy class provided by the [vector\\<bool> Class](../standard-library/vector-bool-class.md) to simulate `bool&`."},{"pos":[879,886],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"A simulated reference is required because C++ does not natively allow direct references to bits.","pos":[890,986]},{"content":"<ph id=\"ph1\">`vector&lt;bool&gt;`</ph> uses only one bit per element, which can be referenced by using this proxy class.","pos":[987,1083],"source":"`vector<bool>` uses only one bit per element, which can be referenced by using this proxy class."},{"content":"However, the reference simulation is not complete because certain assignments are not valid.","pos":[1084,1176]},{"content":"For example, because the address of the <ph id=\"ph1\">`vector&lt;bool&gt;::reference`</ph> object cannot be taken, the following code that uses <bpt id=\"p1\">[</bpt>vector<ph id=\"ph2\">\\&lt;</ph>bool&gt;::operator&amp;#91;&amp;#93;<ept id=\"p1\">](http://msdn.microsoft.com/Library/97738633-690d-4069-b2d9-8c54104fbfdd)</ept> is not correct:","pos":[1177,1419],"source":" For example, because the address of the `vector<bool>::reference` object cannot be taken, the following code that uses [vector\\<bool>::operator&#91;&#93;](http://msdn.microsoft.com/Library/97738633-690d-4069-b2d9-8c54104fbfdd) is not correct:"},{"pos":[1595,1611],"content":"Member Functions","linkify":"Member Functions","nodes":[{"content":"Member Functions","pos":[0,16]}]},{"pos":[1632,1689],"content":"<bpt id=\"p1\">[</bpt>flip<ept id=\"p1\">](../standard-library/vector-bool-reference-flip.md)</ept>","source":"[flip](../standard-library/vector-bool-reference-flip.md)"},{"content":"Inverts the Boolean value of a vector element.","pos":[1690,1736]},{"pos":[1741,1816],"content":"<bpt id=\"p1\">[</bpt>operator bool<ept id=\"p1\">](../standard-library/vector-bool-reference-operator-bool.md)</ept>","source":"[operator bool](../standard-library/vector-bool-reference-operator-bool.md)"},{"pos":[1817,1890],"content":"Provides an implicit conversion from <ph id=\"ph1\">`vector&lt;bool&gt;::reference`</ph> to <ph id=\"ph2\">`bool`</ph>.","source":"Provides an implicit conversion from `vector<bool>::reference` to `bool`."},{"pos":[1895,1968],"content":"<bpt id=\"p1\">[</bpt>operator=<ept id=\"p1\">](../standard-library/vector-bool-reference-operator-assign.md)</ept>","source":"[operator=](../standard-library/vector-bool-reference-operator-assign.md)"},{"content":"Assigns a Boolean value to a bit, or the value held by a referenced element to a bit.","pos":[1969,2054]},{"pos":[2064,2076],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[2080,2101],"content":"<bpt id=\"p1\">**</bpt>Header<ept id=\"p1\">**</ept>: <ph id=\"ph1\">\\&lt;</ph>vector&gt;","source":"**Header**: \\<vector>"},{"pos":[2108,2126],"content":"<bpt id=\"p1\">**</bpt>Namespace:<ept id=\"p1\">**</ept> std","source":"**Namespace:** std"},{"pos":[2135,2143],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt><ph id=\"ph1\">\\&lt;</ph>vector&gt;<ept id=\"p1\">](../standard-library/vector.md)</ept><ph id=\"ph2\"> </ph>","pos":[2147,2190],"source":"[\\<vector>](../standard-library/vector.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Thread Safety in the C++ Standard Library<ept id=\"p1\">](../standard-library/thread-safety-in-the-cpp-standard-library.md)</ept><ph id=\"ph1\"> </ph>","pos":[2193,2304],"source":" [Thread Safety in the C++ Standard Library](../standard-library/thread-safety-in-the-cpp-standard-library.md) "},{"content":"<bpt id=\"p1\"> [</bpt>C++ Standard Library Reference<ept id=\"p1\">](../standard-library/cpp-standard-library-reference.md)</ept>","pos":[2307,2395],"source":" [C++ Standard Library Reference](../standard-library/cpp-standard-library-reference.md)"}],"content":"---\ntitle: \"vector&lt;bool&gt;::reference Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"vector<bool>::reference\"\n  - \"std::vector<bool>::reference\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"vector<bool> reference class\"\nms.assetid: f27854f9-0ef0-4e7e-ad2e-cd53b6cb3334\ncaps.latest.revision: 22\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# vector&lt;bool&gt;::reference Class\nThe `vector<bool>::reference` class is a proxy class provided by the [vector\\<bool> Class](../standard-library/vector-bool-class.md) to simulate `bool&`.  \n  \n## Remarks  \n A simulated reference is required because C++ does not natively allow direct references to bits. `vector<bool>` uses only one bit per element, which can be referenced by using this proxy class. However, the reference simulation is not complete because certain assignments are not valid. For example, because the address of the `vector<bool>::reference` object cannot be taken, the following code that uses [vector\\<bool>::operator&#91;&#93;](http://msdn.microsoft.com/Library/97738633-690d-4069-b2d9-8c54104fbfdd) is not correct:  \n  \n```cpp  \n    vector<bool> vb;  \n...  \n    bool* pb = &vb[1]; // conversion error - do not use  \n    bool& refb = vb[1];   // conversion error - do not use  \n```  \n  \n### Member Functions  \n  \n|||  \n|-|-|  \n|[flip](../standard-library/vector-bool-reference-flip.md)|Inverts the Boolean value of a vector element.|  \n|[operator bool](../standard-library/vector-bool-reference-operator-bool.md)|Provides an implicit conversion from `vector<bool>::reference` to `bool`.|  \n|[operator=](../standard-library/vector-bool-reference-operator-assign.md)|Assigns a Boolean value to a bit, or the value held by a referenced element to a bit.|  \n  \n## Requirements  \n **Header**: \\<vector>  \n  \n **Namespace:** std  \n  \n## See Also  \n [\\<vector>](../standard-library/vector.md)   \n [Thread Safety in the C++ Standard Library](../standard-library/thread-safety-in-the-cpp-standard-library.md)   \n [C++ Standard Library Reference](../standard-library/cpp-standard-library-reference.md)\n\n"}