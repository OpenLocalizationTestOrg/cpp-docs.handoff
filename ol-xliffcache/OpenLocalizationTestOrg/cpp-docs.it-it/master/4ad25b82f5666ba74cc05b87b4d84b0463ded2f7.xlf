<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="it-it">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-04506c2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4ad25b82f5666ba74cc05b87b4d84b0463ded2f7</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\build\reference\assemblymodule-add-a-msil-module-to-the-assembly.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d4636dac17d27544d09e1768ff18555fd8014310</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">27a82687a248c7eba8a04f41f011133858d22122</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>-ASSEMBLYMODULE (Add a MSIL Module to the Assembly) | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>/ASSEMBLYMODULE (Add a MSIL Module to the Assembly)</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>where:</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>filename</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The module you want to include in this assembly.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The /ASSEMBLYMODULE option allows you to add a module reference to an assembly.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Type information in the module will not be available to the assembly program that added the module reference.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>However, type information in the module will be available to any program that references the assembly.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Use <bpt id="p1">[</bpt>#using<ept id="p1">](../../preprocessor/hash-using-directive-cpp.md)</ept> to both add a module reference to an assembly and make the module's type information available to the assembly program.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>For example, consider the following scenario:</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Create a module with <bpt id="p1">[</bpt>/LN<ept id="p1">](../../build/reference/ln-create-msil-module.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Use /ASSEMBLYMODULE in a different project to include the module in the current compilation, which will create an assembly.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>This project will not reference the module with <ph id="ph1">`#using`</ph>.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Any project that references this assembly can now also use types from the module.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Other linker options that affect assembly generation are:</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>/ASSEMBLYDEBUG</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>/ASSEMBLYLINKRESOURCE</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>/ASSEMBLYRESOURCE</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>/DELAYSIGN</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>/NOASSEMBLY</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>/KEYFILE</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>/KEYCONTAINER</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The Visual C++ linker accepts .netmodule files as input and the output file produced by the linker will be an assembly or .netmodule with no run-time dependence on any of the .netmodules that were input to the linker.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>.netmodule Files as Linker Input<ept id="p1">](../../build/reference/netmodule-files-as-linker-input.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>To set this linker option in the Visual Studio development environment</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Open the project's <bpt id="p1">**</bpt>Property Pages<ept id="p1">**</ept> dialog box.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>For details, see <bpt id="p1">[</bpt>Setting Visual C++ Project Properties<ept id="p1">](../../ide/working-with-project-properties.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Click the <bpt id="p1">**</bpt>Linker<ept id="p1">**</ept> folder.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Click the <bpt id="p1">**</bpt>Input<ept id="p1">**</ept> property page.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Modify the <bpt id="p1">**</bpt>Add Module to Assembly<ept id="p1">**</ept> property.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>To set this linker option programmatically</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>See &lt;xref:Microsoft.VisualStudio.VCProjectEngine.VCLinkerTool.AddModuleNamesToAssembly%2A&gt;.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Setting Linker Options</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Linker Options</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>