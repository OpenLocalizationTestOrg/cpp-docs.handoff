{"nodes":[{"pos":[12,35],"content":"nowait | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"nowait | Microsoft Docs","pos":[0,23]}]},{"pos":[591,597],"content":"nowait","linkify":"nowait","nodes":[{"content":"nowait","pos":[0,6]}]},{"content":"Overrides the barrier implicit in a directive.","pos":[598,644]},{"pos":[653,659],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[692,699],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[703,748],"content":"<ph id=\"ph1\">`nowait`</ph> applies to the following directives:","source":"`nowait` applies to the following directives:"},{"pos":[758,813],"content":"<bpt id=\"p1\">[</bpt>for<ept id=\"p1\">](../../../parallel/openmp/reference/for-openmp.md)</ept>","source":"[for](../../../parallel/openmp/reference/for-openmp.md)"},{"pos":[823,888],"content":"<bpt id=\"p1\">[</bpt>sections<ept id=\"p1\">](../../../parallel/openmp/reference/sections-openmp.md)</ept>","source":"[sections](../../../parallel/openmp/reference/sections-openmp.md)"},{"pos":[898,952],"content":"<bpt id=\"p1\">[</bpt>single<ept id=\"p1\">](../../../parallel/openmp/reference/single.md)</ept>","source":"[single](../../../parallel/openmp/reference/single.md)"},{"pos":[959,1220],"content":"For more information, see <bpt id=\"p1\">[</bpt>2.4.1 for Construct<ept id=\"p1\">](../../../parallel/openmp/2-4-1-for-construct.md)</ept>, <bpt id=\"p2\">[</bpt>2.4.2 sections Construct<ept id=\"p2\">](../../../parallel/openmp/2-4-2-sections-construct.md)</ept>, and <bpt id=\"p3\">[</bpt>2.4.3 single Construct<ept id=\"p3\">](../../../parallel/openmp/2-4-3-single-construct.md)</ept>.","source":"For more information, see [2.4.1 for Construct](../../../parallel/openmp/2-4-1-for-construct.md), [2.4.2 sections Construct](../../../parallel/openmp/2-4-2-sections-construct.md), and [2.4.3 single Construct](../../../parallel/openmp/2-4-3-single-construct.md)."},{"pos":[1229,1236],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[1985,1993],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"pos":[1997,2060],"content":"<bpt id=\"p1\">[</bpt>Clauses<ept id=\"p1\">](../../../parallel/openmp/reference/openmp-clauses.md)</ept>","source":"[Clauses](../../../parallel/openmp/reference/openmp-clauses.md)"}],"content":"---\ntitle: \"nowait | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"nowait\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"nowait OpenMP clause\"\nms.assetid: 8a74265d-879c-46cf-8071-a1084f24f16e\ncaps.latest.revision: 9\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# nowait\nOverrides the barrier implicit in a directive.  \n  \n## Syntax  \n  \n```  \nnowait  \n```  \n  \n## Remarks  \n `nowait` applies to the following directives:  \n  \n-   [for](../../../parallel/openmp/reference/for-openmp.md)  \n  \n-   [sections](../../../parallel/openmp/reference/sections-openmp.md)  \n  \n-   [single](../../../parallel/openmp/reference/single.md)  \n  \n For more information, see [2.4.1 for Construct](../../../parallel/openmp/2-4-1-for-construct.md), [2.4.2 sections Construct](../../../parallel/openmp/2-4-2-sections-construct.md), and [2.4.3 single Construct](../../../parallel/openmp/2-4-3-single-construct.md).  \n  \n## Example  \n  \n```  \n// omp_nowait.cpp  \n// compile with: /openmp /c  \n#include <stdio.h>  \n  \n#define SIZE 5  \n  \nvoid test(int *a, int *b, int *c, int size)   \n{  \n    int i;  \n    #pragma omp parallel  \n    {  \n        #pragma omp for nowait  \n        for (i = 0; i < size; i++)  \n            b[i] = a[i] * a[i];  \n  \n        #pragma omp for nowait  \n        for (i = 0; i < size; i++)  \n            c[i] = a[i]/2;  \n    }  \n}  \n  \nint main( )   \n{  \n    int a[SIZE], b[SIZE], c[SIZE];  \n    int i;  \n  \n    for (i=0; i<SIZE; i++)  \n        a[i] = i;  \n  \n    test(a,b,c, SIZE);  \n  \n    for (i=0; i<SIZE; i++)  \n        printf_s(\"%d, %d, %d\\n\", a[i], b[i], c[i]);  \n}  \n```  \n  \n```Output  \n0, 0, 0  \n1, 1, 0  \n2, 4, 1  \n3, 9, 1  \n4, 16, 2  \n```  \n  \n## See Also  \n [Clauses](../../../parallel/openmp/reference/openmp-clauses.md)"}