{"nodes":[{"pos":[12,54],"content":"Using OLE DB Record Views | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Using OLE DB Record Views | Microsoft Docs","pos":[0,42]}]},{"content":"Using OLE DB Record Views","pos":[740,765]},{"content":"If you want to display OLE DB rowset data in an MFC application, you should use the MFC class <bpt id=\"p1\">[</bpt>COleDBRecordView<ept id=\"p1\">](../../mfc/reference/coledbrecordview-class.md)</ept>.","pos":[766,926],"source":"If you want to display OLE DB rowset data in an MFC application, you should use the MFC class [COleDBRecordView](../../mfc/reference/coledbrecordview-class.md)."},{"content":"A record view object created from <ph id=\"ph1\">`COleDBRecordView`</ph> allows you to display database records in MFC controls.","pos":[927,1035],"source":" A record view object created from `COleDBRecordView` allows you to display database records in MFC controls."},{"content":"The record view is a dialog form view directly connected to an OLE DB Rowset object created from the <ph id=\"ph1\">`CRowset`</ph> template class.","pos":[1036,1162],"source":" The record view is a dialog form view directly connected to an OLE DB Rowset object created from the `CRowset` template class."},{"content":"Obtaining a handle to the rowset object is simple:","pos":[1163,1213]},{"content":"The view displays the fields of the <ph id=\"ph1\">`CRowset`</ph> object in the dialog's controls.","pos":[1397,1475],"source":"The view displays the fields of the `CRowset` object in the dialog's controls."},{"content":"The <ph id=\"ph1\">`COleDBRecordView`</ph> object uses Dialog Data Exchange (DDX) and the navigational functionality built into <ph id=\"ph2\">`CRowset`</ph> (<bpt id=\"p1\">**</bpt>MoveFirst<ept id=\"p1\">**</ept>, <ph id=\"ph3\">`MoveNext`</ph>, <ph id=\"ph4\">`MovePrev`</ph>, and <ph id=\"ph5\">`MoveLast`</ph>) to automate the movement of data between the controls on the form and the fields of the rowset.","pos":[1476,1745],"source":" The `COleDBRecordView` object uses Dialog Data Exchange (DDX) and the navigational functionality built into `CRowset` (**MoveFirst**, `MoveNext`, `MovePrev`, and `MoveLast`) to automate the movement of data between the controls on the form and the fields of the rowset."},{"content":"keeps track of the user's position in the rowset so that the record view can update the user interface and supplies an <bpt id=\"p1\">[</bpt>OnMove<ept id=\"p1\">](../mfc/reference/coledbrecordview-class.md#coledbrecordview__onmove)</ept> method for updating the current record before moving to another.","pos":[1765,2026],"source":" keeps track of the user's position in the rowset so that the record view can update the user interface and supplies an [OnMove](../mfc/reference/coledbrecordview-class.md#coledbrecordview__onmove) method for updating the current record before moving to another."},{"content":"You can use DDX functions with <bpt id=\"p1\">**</bpt>COleDbRecordView<ept id=\"p1\">**</ept> to get data directly from the database recordset and display it in a dialog control.","pos":[2033,2169],"source":"You can use DDX functions with **COleDbRecordView** to get data directly from the database recordset and display it in a dialog control."},{"content":"You should use the <bpt id=\"p1\">**</bpt>DDX_<ph id=\"ph1\">\\*</ph><ept id=\"p1\">**</ept> methods (such as <ph id=\"ph2\">`DDX_Text`</ph>), not the <bpt id=\"p2\">**</bpt>DDX_Field<ph id=\"ph3\">\\*</ph><ept id=\"p2\">**</ept> functions (such as <ph id=\"ph4\">`DDX_FieldText`</ph>) with <bpt id=\"p3\">**</bpt>COleDbRecordView<ept id=\"p3\">**</ept>.","pos":[2170,2316],"source":" You should use the **DDX_\\*** methods (such as `DDX_Text`), not the **DDX_Field\\*** functions (such as `DDX_FieldText`) with **COleDbRecordView**."},{"content":"See Also","pos":[2325,2333]},{"content":"Using Accessors","pos":[2338,2353]},{"content":"COleDBRecordView Class","pos":[2397,2419]}],"content":"---\ntitle: \"Using OLE DB Record Views | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"OLE DB record views\"\n  - \"COleDBRecordView class, overview\"\n  - \"rowsets, record views\"\n  - \"record views, record view objects\"\n  - \"OLE DB, record views\"\n  - \"MFC, record views\"\nms.assetid: 1cd3e595-ce08-43d8-a0a9-d03b5d3e24ce\ncaps.latest.revision: 7\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Using OLE DB Record Views\nIf you want to display OLE DB rowset data in an MFC application, you should use the MFC class [COleDBRecordView](../../mfc/reference/coledbrecordview-class.md). A record view object created from `COleDBRecordView` allows you to display database records in MFC controls. The record view is a dialog form view directly connected to an OLE DB Rowset object created from the `CRowset` template class. Obtaining a handle to the rowset object is simple:  \n  \n```  \nCOleDBRecordView myRecordView;  \n...  \n// CProductAccessor is a user record class  \nCRowset<CAccessor<CProductAccessor>> myRowSet = myRecordView.OnGetRowset();  \n```  \n  \n The view displays the fields of the `CRowset` object in the dialog's controls. The `COleDBRecordView` object uses Dialog Data Exchange (DDX) and the navigational functionality built into `CRowset` (**MoveFirst**, `MoveNext`, `MovePrev`, and `MoveLast`) to automate the movement of data between the controls on the form and the fields of the rowset. `COleDBRecordView` keeps track of the user's position in the rowset so that the record view can update the user interface and supplies an [OnMove](../mfc/reference/coledbrecordview-class.md#coledbrecordview__onmove) method for updating the current record before moving to another.  \n  \n You can use DDX functions with **COleDbRecordView** to get data directly from the database recordset and display it in a dialog control. You should use the **DDX_\\*** methods (such as `DDX_Text`), not the **DDX_Field\\*** functions (such as `DDX_FieldText`) with **COleDbRecordView**.  \n  \n## See Also  \n [Using Accessors](../../data/oledb/using-accessors.md)   \n [COleDBRecordView Class](../../mfc/reference/coledbrecordview-class.md)"}