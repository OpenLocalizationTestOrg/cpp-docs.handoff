{"nodes":[{"pos":[12,61],"content":"Definitions and Declarations (C) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Definitions and Declarations (C) | Microsoft Docs","pos":[0,49]}]},{"content":"Definitions and Declarations (C)","pos":[594,626]},{"content":"Microsoft Specific","pos":[629,647]},{"content":"The DLL interface refers to all items (functions and data) that are known to be exported by some program in the system; that is, all items that are declared as <bpt id=\"p1\">**</bpt>dllimport<ept id=\"p1\">**</ept> or <ph id=\"ph1\">`dllexport`</ph>.","pos":[656,845],"source":"The DLL interface refers to all items (functions and data) that are known to be exported by some program in the system; that is, all items that are declared as **dllimport** or `dllexport`."},{"content":"All declarations included in the DLL interface must specify either the <bpt id=\"p1\">**</bpt>dllimport<ept id=\"p1\">**</ept> or <ph id=\"ph1\">`dllexport`</ph> attribute.","pos":[846,956],"source":" All declarations included in the DLL interface must specify either the **dllimport** or `dllexport` attribute."},{"content":"However, the definition can specify only the <ph id=\"ph1\">`dllexport`</ph> attribute.","pos":[957,1024],"source":" However, the definition can specify only the `dllexport` attribute."},{"content":"For example, the following function definition generates a compiler error:","pos":[1025,1099]},{"content":"This code also generates an error:","pos":[1346,1380]},{"content":"However, this is correct syntax:","pos":[1561,1593]},{"content":"The use of <ph id=\"ph1\">`dllexport`</ph> implies a definition, while <bpt id=\"p1\">**</bpt>dllimport<ept id=\"p1\">**</ept> implies a declaration.","pos":[1781,1868],"source":"The use of `dllexport` implies a definition, while **dllimport** implies a declaration."},{"content":"You must use the <ph id=\"ph1\">`extern`</ph> keyword with <ph id=\"ph2\">`dllexport`</ph> to force a declaration; otherwise, a definition is implied.","pos":[1869,1979],"source":" You must use the `extern` keyword with `dllexport` to force a declaration; otherwise, a definition is implied."},{"content":"END Microsoft Specific","pos":[2213,2235]},{"content":"See Also","pos":[2246,2254]},{"content":"DLL Import and Export Functions","pos":[2259,2290]}],"content":"---\ntitle: \"Definitions and Declarations (C) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"C++\"\n  - \"C\"\nhelpviewer_keywords: \n  - \"export functions\"\nms.assetid: d150395a-89d4-4298-9ac4-08f84fe1261c\ncaps.latest.revision: 8\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Definitions and Declarations (C)\n**Microsoft Specific**  \n  \n The DLL interface refers to all items (functions and data) that are known to be exported by some program in the system; that is, all items that are declared as **dllimport** or `dllexport`. All declarations included in the DLL interface must specify either the **dllimport** or `dllexport` attribute. However, the definition can specify only the `dllexport` attribute. For example, the following function definition generates a compiler error:  \n  \n```  \n#define DllImport   __declspec( dllimport )  \n#define DllExport   __declspec( dllexport )  \n  \nDllImport int func()    /* Error; dllimport prohibited in */  \n                        /* definition. */  \n{  \n   return 1;  \n}  \n```  \n  \n This code also generates an error:  \n  \n```  \n#define DllImport   __declspec( dllimport )  \n#define DllExport   __declspec( dllexport )  \n  \nDllImport int i = 10;      /* Error; this is a definition. */  \n```  \n  \n However, this is correct syntax:  \n  \n```  \n#define DllImport   __declspec( dllimport )  \n#define DllExport   __declspec( dllexport )  \n  \nDllExport int i = 10;      /* Okay: this is an export definition. */  \n```  \n  \n The use of `dllexport` implies a definition, while **dllimport** implies a declaration. You must use the `extern` keyword with `dllexport` to force a declaration; otherwise, a definition is implied.  \n  \n```  \n#define DllImport   __declspec( dllimport )  \n#define DllExport   __declspec( dllexport )  \n  \nextern DllImport int k;   /* These are correct and imply */  \nDllimport int j;          /* a declaration. */      \n```  \n  \n **END Microsoft Specific**  \n  \n## See Also  \n [DLL Import and Export Functions](../c-language/dll-import-and-export-functions.md)"}