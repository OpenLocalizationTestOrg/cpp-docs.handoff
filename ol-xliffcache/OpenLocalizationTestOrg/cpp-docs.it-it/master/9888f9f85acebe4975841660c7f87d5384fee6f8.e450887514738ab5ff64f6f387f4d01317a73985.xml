{"nodes":[{"pos":[12,63],"content":"Limits on Floating-Point Constants | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Limits on Floating-Point Constants | Microsoft Docs","pos":[0,51]}]},{"content":"Limits on Floating-Point Constants","pos":[794,828]},{"content":"Microsoft Specific","pos":[831,849]},{"content":"Limits on the values of floating-point constants are given in the following table.","pos":[858,940]},{"content":"The header file FLOAT.H contains this information.","pos":[941,991]},{"content":"Limits on Floating-Point Constants","pos":[1001,1035]},{"content":"Constant","pos":[1042,1050]},{"content":"Meaning","pos":[1051,1058]},{"content":"Value","pos":[1059,1064]},{"content":"FLT_DIGDBL_DIGLDBL_DIG","pos":[1116,1138]},{"pos":[1141,1309],"content":"Number of digits, <bpt id=\"p1\">*</bpt>q<ept id=\"p1\">*</ept>, such that a floating-point number with <bpt id=\"p2\">*</bpt>q<ept id=\"p2\">*</ept> decimal digits can be rounded into a floating-point representation and back without loss of precision.","source":"Number of digits, *q*, such that a floating-point number with *q* decimal digits can be rounded into a floating-point representation and back without loss of precision."},{"content":"6 15 15","pos":[1310,1317]},{"content":"FLT_EPSILONDBL_EPSILONLDBL_EPSILON","pos":[1324,1358]},{"pos":[1361,1430],"content":"Smallest positive number <bpt id=\"p1\">*</bpt>x<ept id=\"p1\">*</ept>, such that <bpt id=\"p2\">*</bpt>x<ept id=\"p2\">*</ept> + 1.0 is not equal to 1.0","source":"Smallest positive number *x*, such that *x* + 1.0 is not equal to 1.0"},{"content":"1.192092896e–07F 2.2204460492503131e–016 2.2204460492503131e–016","pos":[1431,1495]},{"content":"FLT_GUARD","pos":[1502,1511]},{"content":"0","pos":[1515,1516]},{"content":"FLT_MANT_DIGDBL_MANT_DIGLDBL_MANT_DIG","pos":[1523,1560]},{"content":"Number of digits in the radix specified by <bpt id=\"p1\">**</bpt>FLT_RADIX<ept id=\"p1\">**</ept> in the floating-point significand.","pos":[1563,1654],"source":"Number of digits in the radix specified by **FLT_RADIX** in the floating-point significand."},{"content":"The radix is 2; hence these values specify bits.","pos":[1655,1703]},{"content":"24 53 53","pos":[1704,1712]},{"content":"FLT_MAXDBL_MAXLDBL_MAX","pos":[1719,1741]},{"content":"Maximum representable floating-point number.","pos":[1744,1788]},{"content":"3.402823466e+38F 1.7976931348623158e+308 1.7976931348623158e+308","pos":[1789,1853]},{"content":"FLT_MAX_10_EXPDBL_MAX_10_EXPLDBL_MAX_10_EXP","pos":[1860,1903]},{"content":"Maximum integer such that 10 raised to that number is a representable floating-point number.","pos":[1906,1998]},{"content":"38 308 308","pos":[1999,2009]},{"content":"FLT_MAX_EXPDBL_MAX_EXPLDBL_MAX_EXP","pos":[2016,2050]},{"pos":[2053,2156],"content":"Maximum integer such that <bpt id=\"p1\">**</bpt>FLT_RADIX<ept id=\"p1\">**</ept> raised to that number is a representable floating-point number.","source":"Maximum integer such that **FLT_RADIX** raised to that number is a representable floating-point number."},{"content":"128 1024 1024","pos":[2157,2170]},{"content":"FLT_MINDBL_MINLDBL_MIN","pos":[2177,2199]},{"content":"Minimum positive value.","pos":[2202,2225]},{"content":"1.175494351e–38F 2.2250738585072014e–308 2.2250738585072014e–308","pos":[2226,2290]},{"content":"FLT_MIN_10_EXPDBL_MIN_10_EXPLDBL_MIN_10_EXP","pos":[2297,2340]},{"content":"Minimum negative integer such that 10 raised to that number is a representable floating-point number.","pos":[2343,2444]},{"content":"–37","pos":[2445,2448]},{"content":"–307","pos":[2461,2465]},{"content":"–307","pos":[2478,2482]},{"content":"FLT_MIN_EXPDBL_MIN_EXPLDBL_MIN_EXP","pos":[2489,2523]},{"pos":[2526,2638],"content":"Minimum negative integer such that <bpt id=\"p1\">**</bpt>FLT_RADIX<ept id=\"p1\">**</ept> raised to that number is a representable floating-point number.","source":"Minimum negative integer such that **FLT_RADIX** raised to that number is a representable floating-point number."},{"content":"–125","pos":[2639,2643]},{"content":"–1021","pos":[2656,2661]},{"content":"–1021","pos":[2674,2679]},{"content":"FLT_NORMALIZE","pos":[2686,2699]},{"content":"0","pos":[2703,2704]},{"content":"FLT_RADIX_DBL_RADIX_LDBL_RADIX","pos":[2711,2741]},{"content":"Radix of exponent representation.","pos":[2744,2777]},{"content":"2 2 2","pos":[2778,2783]},{"content":"FLT_ROUNDS_DBL_ROUNDS_LDBL_ROUNDS","pos":[2790,2823]},{"content":"Rounding mode for floating-point addition.","pos":[2826,2868]},{"content":"1 (near) 1 (near) 1 (near)","pos":[2869,2895]},{"content":"Note that the information in the above table may differ in future implementations.","pos":[2903,2985]},{"content":"END Microsoft Specific","pos":[2994,3016]},{"content":"See Also","pos":[3027,3035]},{"content":"C Floating-Point Constants","pos":[3040,3066]}],"content":"---\ntitle: \"Limits on Floating-Point Constants | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"C++\"\n  - \"C\"\nhelpviewer_keywords: \n  - \"ranges, floating-point constants\"\n  - \"floating-point constants, limits\"\n  - \"FLOAT.H header file\"\n  - \"constants, floating-point\"\n  - \"limits, floating-point constants\"\n  - \"floating-point numbers, floating limits\"\nms.assetid: 2d975868-2af6-45d7-a8af-db79f2c6b67b\ncaps.latest.revision: 8\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Limits on Floating-Point Constants\n**Microsoft Specific**  \n  \n Limits on the values of floating-point constants are given in the following table. The header file FLOAT.H contains this information.  \n  \n### Limits on Floating-Point Constants  \n  \n|Constant|Meaning|Value|  \n|--------------|-------------|-----------|  \n|**FLT_DIGDBL_DIGLDBL_DIG**|Number of digits, *q*, such that a floating-point number with *q* decimal digits can be rounded into a floating-point representation and back without loss of precision.|6 15 15|  \n|**FLT_EPSILONDBL_EPSILONLDBL_EPSILON**|Smallest positive number *x*, such that *x* + 1.0 is not equal to 1.0|1.192092896e–07F 2.2204460492503131e–016 2.2204460492503131e–016|  \n|**FLT_GUARD**||0|  \n|**FLT_MANT_DIGDBL_MANT_DIGLDBL_MANT_DIG**|Number of digits in the radix specified by **FLT_RADIX** in the floating-point significand. The radix is 2; hence these values specify bits.|24 53 53|  \n|**FLT_MAXDBL_MAXLDBL_MAX**|Maximum representable floating-point number.|3.402823466e+38F 1.7976931348623158e+308 1.7976931348623158e+308|  \n|**FLT_MAX_10_EXPDBL_MAX_10_EXPLDBL_MAX_10_EXP**|Maximum integer such that 10 raised to that number is a representable floating-point number.|38 308 308|  \n|**FLT_MAX_EXPDBL_MAX_EXPLDBL_MAX_EXP**|Maximum integer such that **FLT_RADIX** raised to that number is a representable floating-point number.|128 1024 1024|  \n|**FLT_MINDBL_MINLDBL_MIN**|Minimum positive value.|1.175494351e–38F 2.2250738585072014e–308 2.2250738585072014e–308|  \n|**FLT_MIN_10_EXPDBL_MIN_10_EXPLDBL_MIN_10_EXP**|Minimum negative integer such that 10 raised to that number is a representable floating-point number.|–37<br /><br /> –307<br /><br /> –307|  \n|**FLT_MIN_EXPDBL_MIN_EXPLDBL_MIN_EXP**|Minimum negative integer such that **FLT_RADIX** raised to that number is a representable floating-point number.|–125<br /><br /> –1021<br /><br /> –1021|  \n|**FLT_NORMALIZE**||0|  \n|**FLT_RADIX_DBL_RADIX_LDBL_RADIX**|Radix of exponent representation.|2 2 2|  \n|**FLT_ROUNDS_DBL_ROUNDS_LDBL_ROUNDS**|Rounding mode for floating-point addition.|1 (near) 1 (near) 1 (near)|  \n  \n Note that the information in the above table may differ in future implementations.  \n  \n **END Microsoft Specific**  \n  \n## See Also  \n [C Floating-Point Constants](../c-language/c-floating-point-constants.md)"}