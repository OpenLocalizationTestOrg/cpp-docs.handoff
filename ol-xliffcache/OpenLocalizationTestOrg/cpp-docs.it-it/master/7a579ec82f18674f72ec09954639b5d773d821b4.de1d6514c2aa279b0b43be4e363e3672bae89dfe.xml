{"nodes":[{"pos":[12,47],"content":"CColorDialog Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"CColorDialog Class | Microsoft Docs","pos":[0,35]}]},{"content":"CColorDialog Class","pos":[662,680]},{"content":"Allows you to incorporate a color-selection dialog box into your application.","pos":[681,758]},{"content":"Syntax","pos":[767,773]},{"content":"Members","pos":[841,848]},{"content":"Public Constructors","pos":[858,877]},{"content":"Name","pos":[884,888]},{"content":"Description","pos":[889,900]},{"content":"CColorDialog::CColorDialog","pos":[939,965]},{"pos":[996,1031],"content":"Constructs a <ph id=\"ph1\">`CColorDialog`</ph> object.","source":"Constructs a `CColorDialog` object."},{"content":"Public Methods","pos":[1042,1056]},{"content":"Name","pos":[1063,1067]},{"content":"Description","pos":[1068,1079]},{"content":"CColorDialog::DoModal","pos":[1118,1139]},{"content":"Displays a color dialog box and allows the user to make a selection.","pos":[1165,1233]},{"content":"CColorDialog::GetColor","pos":[1239,1261]},{"pos":[1288,1365],"content":"Returns a <bpt id=\"p1\">**</bpt>COLORREF<ept id=\"p1\">**</ept> structure containing the values of the selected color.","source":"Returns a **COLORREF** structure containing the values of the selected color."},{"content":"CColorDialog::GetSavedCustomColors","pos":[1371,1405]},{"content":"Retrieves custom colors created by the user.","pos":[1444,1488]},{"content":"CColorDialog::SetCurrentColor","pos":[1494,1523]},{"content":"Forces the current color selection to the specified color.","pos":[1557,1615]},{"content":"Protected Methods","pos":[1626,1643]},{"content":"Name","pos":[1650,1654]},{"content":"Description","pos":[1655,1666]},{"content":"CColorDialog::OnColorOK","pos":[1705,1728]},{"content":"Override to validate the color entered into the dialog box.","pos":[1756,1815]},{"content":"Public Data Members","pos":[1826,1845]},{"content":"Name","pos":[1852,1856]},{"content":"Description","pos":[1857,1868]},{"content":"CColorDialog::m_cc","pos":[1907,1925]},{"content":"A structure used to customize the settings of the dialog box.","pos":[1948,2009]},{"content":"Remarks","pos":[2019,2026]},{"content":"A <ph id=\"ph1\">`CColorDialog`</ph> object is a dialog box with a list of colors that are defined for the display system.","pos":[2030,2132],"source":"A `CColorDialog` object is a dialog box with a list of colors that are defined for the display system."},{"content":"The user can select or create a particular color from the list, which is then reported back to the application when the dialog box exits.","pos":[2133,2270]},{"pos":[2277,2402],"content":"To construct a <ph id=\"ph1\">`CColorDialog`</ph> object, use the provided constructor or derive a new class and use your own custom constructor.","source":"To construct a `CColorDialog` object, use the provided constructor or derive a new class and use your own custom constructor."},{"content":"Once the dialog box has been constructed, you can set or modify any values in the <bpt id=\"p1\">[</bpt>m_cc<ept id=\"p1\">](#ccolordialog__m_cc)</ept> structure to initialize the values of the dialog box's controls.","pos":[2409,2583],"source":"Once the dialog box has been constructed, you can set or modify any values in the [m_cc](#ccolordialog__m_cc) structure to initialize the values of the dialog box's controls."},{"content":"The <ph id=\"ph1\">`m_cc`</ph> structure is of type <bpt id=\"p1\">[</bpt>CHOOSECOLOR<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms646830)</ept>.","pos":[2584,2690],"source":" The `m_cc` structure is of type [CHOOSECOLOR](http://msdn.microsoft.com/library/windows/desktop/ms646830)."},{"content":"After initializing the dialog box's controls, call the <ph id=\"ph1\">`DoModal`</ph> member function to display the dialog box and allow the user to select a color.","pos":[2697,2841],"source":"After initializing the dialog box's controls, call the `DoModal` member function to display the dialog box and allow the user to select a color."},{"content":"returns the user's selection of either the dialog box's OK ( <bpt id=\"p1\">**</bpt>IDOK<ept id=\"p1\">**</ept>) or Cancel ( <bpt id=\"p2\">**</bpt>IDCANCEL<ept id=\"p2\">**</ept>) button.","pos":[2852,2956],"source":" returns the user's selection of either the dialog box's OK ( **IDOK**) or Cancel ( **IDCANCEL**) button."},{"pos":[2963,3093],"content":"If <ph id=\"ph1\">`DoModal`</ph> returns <bpt id=\"p1\">**</bpt>IDOK<ept id=\"p1\">**</ept>, you can use one of <ph id=\"ph2\">`CColorDialog`</ph>'s member functions to retrieve the information input by the user.","source":"If `DoModal` returns **IDOK**, you can use one of `CColorDialog`'s member functions to retrieve the information input by the user."},{"pos":[3100,3329],"content":"You can use the Windows <bpt id=\"p1\">[</bpt>CommDlgExtendedError<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms646916)</ept> function to determine whether an error occurred during initialization of the dialog box and to learn more about the error.","source":"You can use the Windows [CommDlgExtendedError](http://msdn.microsoft.com/library/windows/desktop/ms646916) function to determine whether an error occurred during initialization of the dialog box and to learn more about the error."},{"pos":[3351,3429],"content":"relies on the COMMDLG.DLL file that ships with Windows versions 3.1 and later."},{"content":"To customize the dialog box, derive a class from <ph id=\"ph1\">`CColorDialog`</ph>, provide a custom dialog template, and add a message map to process the notification messages from the extended controls.","pos":[3436,3621],"source":"To customize the dialog box, derive a class from `CColorDialog`, provide a custom dialog template, and add a message map to process the notification messages from the extended controls."},{"content":"Any unprocessed messages should be passed to the base class.","pos":[3622,3682]},{"content":"Customizing the hook function is not required.","pos":[3689,3735]},{"pos":[3743,3910],"content":"[!NOTE]\n On some installations the `CColorDialog` object will not display with a gray background if you have used the framework to make other `CDialog` objects gray.","leadings":["","> "],"nodes":[{"content":"On some installations the <ph id=\"ph1\">`CColorDialog`</ph> object will not display with a gray background if you have used the framework to make other <ph id=\"ph2\">`CDialog`</ph> objects gray.","pos":[9,165],"source":" On some installations the `CColorDialog` object will not display with a gray background if you have used the framework to make other `CDialog` objects gray."}]},{"pos":[3917,4026],"content":"For more information on using <ph id=\"ph1\">`CColorDialog`</ph>, see <bpt id=\"p1\">[</bpt>Common Dialog Classes<ept id=\"p1\">](../../mfc/common-dialog-classes.md)</ept>","source":"For more information on using `CColorDialog`, see [Common Dialog Classes](../../mfc/common-dialog-classes.md)"},{"content":"Inheritance Hierarchy","pos":[4035,4056]},{"content":"CObject","pos":[4061,4068]},{"content":"CCmdTarget","pos":[4115,4125]},{"content":"CWnd","pos":[4175,4179]},{"content":"CDialog","pos":[4223,4230]},{"content":"CCommonDialog","pos":[4277,4290]},{"content":"Requirements","pos":[4365,4377]},{"pos":[4381,4402],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> afxdlgs.h","source":"**Header:** afxdlgs.h"},{"pos":[4455,4481],"content":"CColorDialog::CColorDialog"},{"pos":[4485,4520],"content":"Constructs a <ph id=\"ph1\">`CColorDialog`</ph> object.","source":"Constructs a `CColorDialog` object."},{"content":"Parameters","pos":[4642,4652]},{"content":"clrInit","pos":[4657,4664]},{"content":"The default color selection.","pos":[4669,4697]},{"content":"If no value is specified, the default is RGB(0,0,0) (black).","pos":[4698,4758]},{"content":"A set of flags that customize the function and appearance of the dialog box.","pos":[4778,4854]},{"content":"For more information, see the <bpt id=\"p1\">[</bpt>CHOOSECOLOR<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms646830)</ept> structure in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","pos":[4855,5028],"source":" For more information, see the [CHOOSECOLOR](http://msdn.microsoft.com/library/windows/desktop/ms646830) structure in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"content":"A pointer to the dialog box's parent or owner window.","pos":[5051,5104]},{"content":"Example","pos":[5114,5121]},{"pos":[5136,5153],"content":"NVC_MFCDocView#49"},{"pos":[5255,5276],"content":"CColorDialog::DoModal"},{"content":"Call this function to display the Windows common color dialog box and allow the user to select a color.","pos":[5280,5383]},{"content":"Return Value","pos":[5435,5447]},{"content":"<bpt id=\"p1\">**</bpt>IDOK<ept id=\"p1\">**</ept> or <bpt id=\"p2\">**</bpt>IDCANCEL<ept id=\"p2\">**</ept>.","pos":[5451,5476],"source":"**IDOK** or **IDCANCEL**."},{"content":"If <bpt id=\"p1\">**</bpt>IDCANCEL<ept id=\"p1\">**</ept> is returned, call the Windows <bpt id=\"p2\">[</bpt>CommDlgExtendedError<ept id=\"p2\">](http://msdn.microsoft.com/library/windows/desktop/ms646916)</ept> function to determine whether an error occurred.","pos":[5477,5654],"source":" If **IDCANCEL** is returned, call the Windows [CommDlgExtendedError](http://msdn.microsoft.com/library/windows/desktop/ms646916) function to determine whether an error occurred."},{"pos":[5661,5765],"content":"<bpt id=\"p1\">**</bpt>IDOK<ept id=\"p1\">**</ept> and <bpt id=\"p2\">**</bpt>IDCANCEL<ept id=\"p2\">**</ept> are constants that indicate whether the user selected the OK or Cancel button.","source":"**IDOK** and **IDCANCEL** are constants that indicate whether the user selected the OK or Cancel button."},{"content":"Remarks","pos":[5775,5782]},{"pos":[5786,6005],"content":"If you want to initialize the various color dialog-box options by setting members of the <bpt id=\"p1\">[</bpt>m_cc<ept id=\"p1\">](#ccolordialog__m_cc)</ept> structure, you should do this before calling <ph id=\"ph1\">`DoModal`</ph> but after the dialog-box object is constructed.","source":"If you want to initialize the various color dialog-box options by setting members of the [m_cc](#ccolordialog__m_cc) structure, you should do this before calling `DoModal` but after the dialog-box object is constructed."},{"pos":[6012,6151],"content":"After calling <ph id=\"ph1\">`DoModal`</ph>, you can call other member functions to retrieve the settings or information input by the user into the dialog box.","source":"After calling `DoModal`, you can call other member functions to retrieve the settings or information input by the user into the dialog box."},{"content":"Example","pos":[6161,6168]},{"pos":[6173,6251],"content":"See the example for <bpt id=\"p1\">[</bpt>CColorDialog::CColorDialog<ept id=\"p1\">](#ccolordialog__ccolordialog)</ept>.","source":"See the example for [CColorDialog::CColorDialog](#ccolordialog__ccolordialog)."},{"pos":[6300,6322],"content":"CColorDialog::GetColor"},{"pos":[6326,6431],"content":"Call this function after calling <ph id=\"ph1\">`DoModal`</ph> to retrieve the information about the color the user selected.","source":"Call this function after calling `DoModal` to retrieve the information about the color the user selected."},{"content":"Return Value","pos":[6486,6498]},{"pos":[6502,6662],"content":"A <bpt id=\"p1\">[</bpt>COLORREF<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/dd183449)</ept> value that contains the RGB information for the color selected in the color dialog box.","source":"A [COLORREF](http://msdn.microsoft.com/library/windows/desktop/dd183449) value that contains the RGB information for the color selected in the color dialog box."},{"content":"Example","pos":[6672,6679]},{"pos":[6694,6711],"content":"NVC_MFCDocView#50"},{"pos":[6826,6860],"content":"CColorDialog::GetSavedCustomColors"},{"pos":[6879,6969],"content":"objects permit the user, in addition to choosing colors, to define up to 16 custom colors."},{"content":"Return Value","pos":[7042,7054]},{"content":"A pointer to an array of 16 RGB color values that stores custom colors created by the user.","pos":[7058,7149]},{"content":"Remarks","pos":[7159,7166]},{"content":"The <ph id=\"ph1\">`GetSavedCustomColors`</ph> member function provides access to these colors.","pos":[7170,7245],"source":"The `GetSavedCustomColors` member function provides access to these colors."},{"content":"These colors can be retrieved after <bpt id=\"p1\">[</bpt>DoModal<ept id=\"p1\">](#ccolordialog__domodal)</ept> returns <bpt id=\"p2\">**</bpt>IDOK<ept id=\"p2\">**</ept>.","pos":[7246,7333],"source":" These colors can be retrieved after [DoModal](#ccolordialog__domodal) returns **IDOK**."},{"content":"Each of the 16 RGB values in the returned array is initialized to RGB(255,255,255) (white).","pos":[7340,7431]},{"content":"The custom colors chosen by the user are saved only between dialog box invocations within the application.","pos":[7432,7538]},{"content":"If you wish to save these colors between invocations of the application, you must save them in some other manner, such as in an initialization (.INI) file.","pos":[7539,7694]},{"content":"Example","pos":[7704,7711]},{"pos":[7726,7743],"content":"NVC_MFCDocView#51"},{"pos":[7842,7860],"content":"CColorDialog::m_cc"},{"pos":[7864,8028],"content":"A structure of type <bpt id=\"p1\">[</bpt>CHOOSECOLOR<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms646830)</ept>, whose members store the characteristics and values of the dialog box.","source":"A structure of type [CHOOSECOLOR](http://msdn.microsoft.com/library/windows/desktop/ms646830), whose members store the characteristics and values of the dialog box."},{"content":"Remarks","pos":[8073,8080]},{"pos":[8084,8257],"content":"After constructing a <ph id=\"ph1\">`CColorDialog`</ph> object, you can use <ph id=\"ph2\">`m_cc`</ph> to set various aspects of the dialog box before calling the <bpt id=\"p1\">[</bpt>DoModal<ept id=\"p1\">](#ccolordialog__domodal)</ept> member function.","source":"After constructing a `CColorDialog` object, you can use `m_cc` to set various aspects of the dialog box before calling the [DoModal](#ccolordialog__domodal) member function."},{"content":"Example","pos":[8267,8274]},{"pos":[8289,8306],"content":"NVC_MFCDocView#53"},{"pos":[8410,8433],"content":"CColorDialog::OnColorOK"},{"content":"Override to validate the color entered into the dialog box.","pos":[8437,8496]},{"content":"Return Value","pos":[8547,8559]},{"content":"Nonzero if the dialog box should not be dismissed; otherwise 0 to accept the color that was entered.","pos":[8563,8663]},{"content":"Remarks","pos":[8673,8680]},{"content":"Override this function only if you want to provide custom validation of the color the user selects in the color dialog box.","pos":[8684,8807]},{"content":"The user can select a color by one of the following two methods:","pos":[8814,8878]},{"content":"Clicking a color on the color palette.","pos":[8888,8926]},{"content":"The selected color's RGB values are then reflected in the appropriate RGB edit boxes.","pos":[8927,9012]},{"content":"Entering values in the RGB edit boxes","pos":[9022,9059]},{"pos":[9066,9201],"content":"Overriding <ph id=\"ph1\">`OnColorOK`</ph> allows you to reject a color the user enters into a common color dialog box for any application-specific reason.","source":"Overriding `OnColorOK` allows you to reject a color the user enters into a common color dialog box for any application-specific reason."},{"content":"Normally, you do not need to use this function because the framework provides default validation of colors and displays a message box if an invalid color is entered.","pos":[9208,9373]},{"content":"You can call <bpt id=\"p1\">[</bpt>SetCurrentColor<ept id=\"p1\">](#ccolordialog__setcurrentcolor)</ept> from within <ph id=\"ph1\">`OnColorOK`</ph> to force a color selection.","pos":[9380,9494],"source":"You can call [SetCurrentColor](#ccolordialog__setcurrentcolor) from within `OnColorOK` to force a color selection."},{"content":"Once <ph id=\"ph1\">`OnColorOK`</ph> has been fired (that is, the user clicks <bpt id=\"p1\">**</bpt>OK<ept id=\"p1\">**</ept> to accept the color change), you can call <bpt id=\"p2\">[</bpt>GetColor<ept id=\"p2\">](#ccolordialog__getcolor)</ept> to get the RGB value of the new color.","pos":[9495,9676],"source":" Once `OnColorOK` has been fired (that is, the user clicks **OK** to accept the color change), you can call [GetColor](#ccolordialog__getcolor) to get the RGB value of the new color."},{"content":"Example","pos":[9686,9693]},{"pos":[9708,9725],"content":"NVC_MFCDocView#52"},{"pos":[9835,9864],"content":"CColorDialog::SetCurrentColor"},{"pos":[9868,9986],"content":"Call this function after calling <ph id=\"ph1\">`DoModal`</ph> to force the current color selection to the color value specified in <ph id=\"ph2\">`clr`</ph>.","source":"Call this function after calling `DoModal` to force the current color selection to the color value specified in `clr`."},{"content":"Parameters","pos":[10047,10057]},{"content":"An RGB color value.","pos":[10070,10089]},{"content":"Remarks","pos":[10099,10106]},{"content":"This function is called from within a message handler or <ph id=\"ph1\">`OnColorOK`</ph>.","pos":[10110,10179],"source":"This function is called from within a message handler or `OnColorOK`."},{"content":"The dialog box will automatically update the user's selection based on the value of the <ph id=\"ph1\">`clr`</ph> parameter.","pos":[10180,10284],"source":" The dialog box will automatically update the user's selection based on the value of the `clr` parameter."},{"content":"Example","pos":[10294,10301]},{"pos":[10306,10378],"content":"See the example for <bpt id=\"p1\">[</bpt>CColorDialog::OnColorOK<ept id=\"p1\">](#ccolordialog__oncolorok)</ept>.","source":"See the example for [CColorDialog::OnColorOK](#ccolordialog__oncolorok)."},{"content":"See Also","pos":[10387,10395]},{"content":"MFC Sample MDI","pos":[10400,10414]},{"content":"MFC Sample DRAWCLI","pos":[10450,10468]},{"content":"CCommonDialog Class","pos":[10504,10523]},{"content":"Hierarchy Chart","pos":[10574,10589]}],"content":"---\ntitle: \"CColorDialog Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"CColorDialog\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"colors, dialog box\"\n  - \"dialog boxes, colors\"\n  - \"CColorDialog class\"\nms.assetid: d013dc25-9290-4b5d-a97e-95ad7208e13b\ncaps.latest.revision: 25\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# CColorDialog Class\nAllows you to incorporate a color-selection dialog box into your application.  \n  \n## Syntax  \n  \n```  \nclass CColorDialog : public CCommonDialog  \n```  \n  \n## Members  \n  \n### Public Constructors  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CColorDialog::CColorDialog](#ccolordialog__ccolordialog)|Constructs a `CColorDialog` object.|  \n  \n### Public Methods  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CColorDialog::DoModal](#ccolordialog__domodal)|Displays a color dialog box and allows the user to make a selection.|  \n|[CColorDialog::GetColor](#ccolordialog__getcolor)|Returns a **COLORREF** structure containing the values of the selected color.|  \n|[CColorDialog::GetSavedCustomColors](#ccolordialog__getsavedcustomcolors)|Retrieves custom colors created by the user.|  \n|[CColorDialog::SetCurrentColor](#ccolordialog__setcurrentcolor)|Forces the current color selection to the specified color.|  \n  \n### Protected Methods  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CColorDialog::OnColorOK](#ccolordialog__oncolorok)|Override to validate the color entered into the dialog box.|  \n  \n### Public Data Members  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CColorDialog::m_cc](#ccolordialog__m_cc)|A structure used to customize the settings of the dialog box.|  \n  \n## Remarks  \n A `CColorDialog` object is a dialog box with a list of colors that are defined for the display system. The user can select or create a particular color from the list, which is then reported back to the application when the dialog box exits.  \n  \n To construct a `CColorDialog` object, use the provided constructor or derive a new class and use your own custom constructor.  \n  \n Once the dialog box has been constructed, you can set or modify any values in the [m_cc](#ccolordialog__m_cc) structure to initialize the values of the dialog box's controls. The `m_cc` structure is of type [CHOOSECOLOR](http://msdn.microsoft.com/library/windows/desktop/ms646830).  \n  \n After initializing the dialog box's controls, call the `DoModal` member function to display the dialog box and allow the user to select a color. `DoModal` returns the user's selection of either the dialog box's OK ( **IDOK**) or Cancel ( **IDCANCEL**) button.  \n  \n If `DoModal` returns **IDOK**, you can use one of `CColorDialog`'s member functions to retrieve the information input by the user.  \n  \n You can use the Windows [CommDlgExtendedError](http://msdn.microsoft.com/library/windows/desktop/ms646916) function to determine whether an error occurred during initialization of the dialog box and to learn more about the error.  \n  \n `CColorDialog` relies on the COMMDLG.DLL file that ships with Windows versions 3.1 and later.  \n  \n To customize the dialog box, derive a class from `CColorDialog`, provide a custom dialog template, and add a message map to process the notification messages from the extended controls. Any unprocessed messages should be passed to the base class.  \n  \n Customizing the hook function is not required.  \n  \n> [!NOTE]\n>  On some installations the `CColorDialog` object will not display with a gray background if you have used the framework to make other `CDialog` objects gray.  \n  \n For more information on using `CColorDialog`, see [Common Dialog Classes](../../mfc/common-dialog-classes.md)  \n  \n## Inheritance Hierarchy  \n [CObject](../../mfc/reference/cobject-class.md)  \n  \n [CCmdTarget](../../mfc/reference/ccmdtarget-class.md)  \n  \n [CWnd](../../mfc/reference/cwnd-class.md)  \n  \n [CDialog](../../mfc/reference/cdialog-class.md)  \n  \n [CCommonDialog](../../mfc/reference/ccommondialog-class.md)  \n  \n `CColorDialog`  \n  \n## Requirements  \n **Header:** afxdlgs.h  \n  \n##  <a name=\"ccolordialog__ccolordialog\"></a>  CColorDialog::CColorDialog  \n Constructs a `CColorDialog` object.  \n  \n```  \nCColorDialog(\n    COLORREF clrInit = 0,  \n    DWORD dwFlags = 0,  \n    CWnd* pParentWnd = NULL);\n```  \n  \n### Parameters  \n *clrInit*  \n The default color selection. If no value is specified, the default is RGB(0,0,0) (black).  \n  \n `dwFlags`  \n A set of flags that customize the function and appearance of the dialog box. For more information, see the [CHOOSECOLOR](http://msdn.microsoft.com/library/windows/desktop/ms646830) structure in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n `pParentWnd`  \n A pointer to the dialog box's parent or owner window.  \n  \n### Example  \n [!code-cpp[NVC_MFCDocView#49](../../mfc/codesnippet/cpp/ccolordialog-class_1.cpp)]  \n  \n##  <a name=\"ccolordialog__domodal\"></a>  CColorDialog::DoModal  \n Call this function to display the Windows common color dialog box and allow the user to select a color.  \n  \n```  \nvirtual INT_PTR DoModal();\n```  \n  \n### Return Value  \n **IDOK** or **IDCANCEL**. If **IDCANCEL** is returned, call the Windows [CommDlgExtendedError](http://msdn.microsoft.com/library/windows/desktop/ms646916) function to determine whether an error occurred.  \n  \n **IDOK** and **IDCANCEL** are constants that indicate whether the user selected the OK or Cancel button.  \n  \n### Remarks  \n If you want to initialize the various color dialog-box options by setting members of the [m_cc](#ccolordialog__m_cc) structure, you should do this before calling `DoModal` but after the dialog-box object is constructed.  \n  \n After calling `DoModal`, you can call other member functions to retrieve the settings or information input by the user into the dialog box.  \n  \n### Example  \n  See the example for [CColorDialog::CColorDialog](#ccolordialog__ccolordialog).  \n  \n##  <a name=\"ccolordialog__getcolor\"></a>  CColorDialog::GetColor  \n Call this function after calling `DoModal` to retrieve the information about the color the user selected.  \n  \n```  \nCOLORREF GetColor() const;\n\n \n```  \n  \n### Return Value  \n A [COLORREF](http://msdn.microsoft.com/library/windows/desktop/dd183449) value that contains the RGB information for the color selected in the color dialog box.  \n  \n### Example  \n [!code-cpp[NVC_MFCDocView#50](../../mfc/codesnippet/cpp/ccolordialog-class_2.cpp)]  \n  \n##  <a name=\"ccolordialog__getsavedcustomcolors\"></a>  CColorDialog::GetSavedCustomColors  \n `CColorDialog` objects permit the user, in addition to choosing colors, to define up to 16 custom colors.  \n  \n```  \nstatic COLORREF* PASCAL GetSavedCustomColors();\n```  \n  \n### Return Value  \n A pointer to an array of 16 RGB color values that stores custom colors created by the user.  \n  \n### Remarks  \n The `GetSavedCustomColors` member function provides access to these colors. These colors can be retrieved after [DoModal](#ccolordialog__domodal) returns **IDOK**.  \n  \n Each of the 16 RGB values in the returned array is initialized to RGB(255,255,255) (white). The custom colors chosen by the user are saved only between dialog box invocations within the application. If you wish to save these colors between invocations of the application, you must save them in some other manner, such as in an initialization (.INI) file.  \n  \n### Example  \n [!code-cpp[NVC_MFCDocView#51](../../mfc/codesnippet/cpp/ccolordialog-class_3.cpp)]  \n  \n##  <a name=\"ccolordialog__m_cc\"></a>  CColorDialog::m_cc  \n A structure of type [CHOOSECOLOR](http://msdn.microsoft.com/library/windows/desktop/ms646830), whose members store the characteristics and values of the dialog box.  \n  \n```  \nCHOOSECOLOR m_cc;  \n```  \n  \n### Remarks  \n After constructing a `CColorDialog` object, you can use `m_cc` to set various aspects of the dialog box before calling the [DoModal](#ccolordialog__domodal) member function.  \n  \n### Example  \n [!code-cpp[NVC_MFCDocView#53](../../mfc/codesnippet/cpp/ccolordialog-class_4.cpp)]  \n  \n##  <a name=\"ccolordialog__oncolorok\"></a>  CColorDialog::OnColorOK  \n Override to validate the color entered into the dialog box.  \n  \n```  \nvirtual BOOL OnColorOK();\n```  \n  \n### Return Value  \n Nonzero if the dialog box should not be dismissed; otherwise 0 to accept the color that was entered.  \n  \n### Remarks  \n Override this function only if you want to provide custom validation of the color the user selects in the color dialog box.  \n  \n The user can select a color by one of the following two methods:  \n  \n-   Clicking a color on the color palette. The selected color's RGB values are then reflected in the appropriate RGB edit boxes.  \n  \n-   Entering values in the RGB edit boxes  \n  \n Overriding `OnColorOK` allows you to reject a color the user enters into a common color dialog box for any application-specific reason.  \n  \n Normally, you do not need to use this function because the framework provides default validation of colors and displays a message box if an invalid color is entered.  \n  \n You can call [SetCurrentColor](#ccolordialog__setcurrentcolor) from within `OnColorOK` to force a color selection. Once `OnColorOK` has been fired (that is, the user clicks **OK** to accept the color change), you can call [GetColor](#ccolordialog__getcolor) to get the RGB value of the new color.  \n  \n### Example  \n [!code-cpp[NVC_MFCDocView#52](../../mfc/codesnippet/cpp/ccolordialog-class_5.cpp)]  \n  \n##  <a name=\"ccolordialog__setcurrentcolor\"></a>  CColorDialog::SetCurrentColor  \n Call this function after calling `DoModal` to force the current color selection to the color value specified in `clr`.  \n  \n```  \nvoid SetCurrentColor(COLORREF clr);\n```  \n  \n### Parameters  \n `clr`  \n An RGB color value.  \n  \n### Remarks  \n This function is called from within a message handler or `OnColorOK`. The dialog box will automatically update the user's selection based on the value of the `clr` parameter.  \n  \n### Example  \n  See the example for [CColorDialog::OnColorOK](#ccolordialog__oncolorok).  \n  \n## See Also  \n [MFC Sample MDI](../../visual-cpp-samples.md)   \n [MFC Sample DRAWCLI](../../visual-cpp-samples.md)   \n [CCommonDialog Class](../../mfc/reference/ccommondialog-class.md)   \n [Hierarchy Chart](../../mfc/hierarchy-chart.md)\n\n"}