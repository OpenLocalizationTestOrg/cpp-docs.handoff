{"nodes":[{"pos":[12,59],"content":"&lt;exception&gt; (Visual C++) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"exception<ph id=\"ph1\">&amp;gt;</ph> (Visual C++) | Microsoft Docs","pos":[4,47],"source":"exception&gt; (Visual C++) | Microsoft Docs"}]},{"content":"exception<ph id=\"ph1\">&amp;gt;</ph> (Visual C++)","pos":[672,698],"source":"exception&gt; (Visual C++)"},{"content":"The <ph id=\"ph1\">\\&lt;</ph>exception&gt; tag lets you specify which exceptions can be thrown.","pos":[699,768],"source":"The \\<exception> tag lets you specify which exceptions can be thrown."},{"content":"This tag is applied to a method definition.","pos":[769,812]},{"content":"Syntax","pos":[821,827]},{"content":"Parameters","pos":[904,914]},{"content":"A reference to an exception that is available from the current compilation environment.","pos":[930,1017]},{"content":"Using name lookup rules, the compiler checks that the given exception exists, and translates <ph id=\"ph1\">`member`</ph> to the canonical element name in the output XML.","pos":[1018,1168],"source":" Using name lookup rules, the compiler checks that the given exception exists, and translates `member` to the canonical element name in the output XML."},{"content":"The compiler issues a warning if it does not find <ph id=\"ph1\">`member`</ph>.","pos":[1170,1229],"source":"  The compiler issues a warning if it does not find `member`."},{"content":"Enclose the name in single or double quotation marks.","pos":[1236,1289]},{"pos":[1296,1404],"content":"For information on how to create a cref reference to a generic type, see <bpt id=\"p1\">[</bpt><ph id=\"ph1\">\\&lt;</ph>see&gt;<ept id=\"p1\">](../ide/see-visual-cpp.md)</ept>.","source":"For information on how to create a cref reference to a generic type, see [\\<see>](../ide/see-visual-cpp.md)."},{"content":"A description.","pos":[1428,1442]},{"content":"Remarks","pos":[1451,1458]},{"pos":[1462,1590],"content":"Compile with <bpt id=\"p1\">[</bpt>/doc<ept id=\"p1\">](../build/reference/doc-process-documentation-comments-c-cpp.md)</ept> to process documentation comments to a file.","source":"Compile with [/doc](../build/reference/doc-process-documentation-comments-c-cpp.md) to process documentation comments to a file."},{"content":"The Visual C++ compiler will attempt to resolve cref references in one pass through the documentation comments.","pos":[1597,1708]},{"content":"Therefore, if using the C++ lookup rules, a symbol is not found by the compiler the reference will be marked as unresolved.","pos":[1710,1833]},{"content":"See <bpt id=\"p1\">[</bpt><ph id=\"ph1\">\\&lt;</ph>seealso&gt;<ept id=\"p1\">](../ide/seealso-visual-cpp.md)</ept> for more information.","pos":[1834,1902],"source":" See [\\<seealso>](../ide/seealso-visual-cpp.md) for more information."},{"content":"Example","pos":[1911,1918]},{"content":"See Also","pos":[2390,2398]},{"content":"XML Documentation","pos":[2403,2420]}],"content":"---\ntitle: \"&lt;exception&gt; (Visual C++) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"exception\"\n  - \"<exception>\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"<exception> C++ XML tag\"\n  - \"exception C++ XML tag\"\nms.assetid: 24451e79-9b89-4b77-98fb-702c6516b818\ncaps.latest.revision: 11\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# &lt;exception&gt; (Visual C++)\nThe \\<exception> tag lets you specify which exceptions can be thrown. This tag is applied to a method definition.  \n  \n## Syntax  \n  \n```  \n<exception cref=\"member\">description</exception>  \n```  \n  \n#### Parameters  \n `member`  \n A reference to an exception that is available from the current compilation environment. Using name lookup rules, the compiler checks that the given exception exists, and translates `member` to the canonical element name in the output XML.  The compiler issues a warning if it does not find `member`.  \n  \n Enclose the name in single or double quotation marks.  \n  \n For information on how to create a cref reference to a generic type, see [\\<see>](../ide/see-visual-cpp.md).  \n  \n `description`  \n A description.  \n  \n## Remarks  \n Compile with [/doc](../build/reference/doc-process-documentation-comments-c-cpp.md) to process documentation comments to a file.  \n  \n The Visual C++ compiler will attempt to resolve cref references in one pass through the documentation comments.  Therefore, if using the C++ lookup rules, a symbol is not found by the compiler the reference will be marked as unresolved. See [\\<seealso>](../ide/seealso-visual-cpp.md) for more information.  \n  \n## Example  \n  \n```  \n// xml_exception_tag.cpp  \n// compile with: /clr /doc /LD  \n// post-build command: xdcmake xml_exception_tag.dll  \nusing namespace System;  \n  \n/// Text for class EClass.  \npublic ref class EClass : public Exception {  \n   // class definition ...  \n};  \n  \n/// <exception cref=\"System.Exception\">Thrown when... .</exception>  \npublic ref class TestClass {  \n   void Test() {  \n      try {  \n      }  \n      catch(EClass^) {  \n      }  \n   }  \n};  \n```  \n  \n## See Also  \n [XML Documentation](../ide/xml-documentation-visual-cpp.md)"}