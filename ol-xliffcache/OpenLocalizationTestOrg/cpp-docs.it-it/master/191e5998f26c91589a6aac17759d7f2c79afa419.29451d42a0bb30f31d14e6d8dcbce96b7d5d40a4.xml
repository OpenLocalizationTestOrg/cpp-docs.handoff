{"nodes":[{"pos":[12,40],"content":"_get_tzname | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"_get_tzname | Microsoft Docs","pos":[0,28]}]},{"content":"_get_tzname","pos":[980,991]},{"content":"Retrieves the character string representation of the time zone name or the daylight standard time zone name (DST).","pos":[992,1106]},{"content":"Syntax","pos":[1115,1121]},{"content":"Parameters","pos":[1275,1285]},{"content":"[out]","pos":[1289,1294]},{"content":"The string length of <ph id=\"ph1\">`timeZoneName`</ph> including a NULL terminator.","pos":[1313,1377],"source":" The string length of `timeZoneName` including a NULL terminator."},{"content":"[out]","pos":[1384,1389]},{"content":"The address of a character string for the representation of the time zone name or the daylight standard time zone name (DST), depending on <ph id=\"ph1\">`index`</ph>.","pos":[1408,1555],"source":" The address of a character string for the representation of the time zone name or the daylight standard time zone name (DST), depending on `index`."},{"content":"[in]","pos":[1562,1566]},{"content":"The size of the <ph id=\"ph1\">`timeZoneName`</ph> character string in bytes.","pos":[1584,1641],"source":" The size of the `timeZoneName` character string in bytes."},{"content":"[in]","pos":[1648,1652]},{"content":"The index of one of the two time zone names to retrieve.","pos":[1664,1720]},{"content":"Return Value","pos":[1729,1741]},{"pos":[1745,1797],"content":"Zero if successful, otherwise an <ph id=\"ph1\">`errno`</ph> type value.","source":"Zero if successful, otherwise an `errno` type value."},{"content":"If either <ph id=\"ph1\">`timeZoneName`</ph> is <ph id=\"ph2\">`NULL`</ph>, or <ph id=\"ph3\">`sizeInBytes`</ph> is zero or less than zero (but not both), an invalid parameter handler is invoked, as described in <bpt id=\"p1\">[</bpt>Parameter Validation<ept id=\"p1\">](../../c-runtime-library/parameter-validation.md)</ept>.","pos":[1804,2028],"source":"If either `timeZoneName` is `NULL`, or `sizeInBytes` is zero or less than zero (but not both), an invalid parameter handler is invoked, as described in [Parameter Validation](../../c-runtime-library/parameter-validation.md)."},{"content":"If execution is allowed to continue, this function sets <ph id=\"ph1\">`errno`</ph> to <ph id=\"ph2\">`EINVAL`</ph> and returns <ph id=\"ph3\">`EINVAL`</ph>.","pos":[2029,2126],"source":" If execution is allowed to continue, this function sets `errno` to `EINVAL` and returns `EINVAL`."},{"content":"Error Conditions","pos":[2136,2152]},{"content":"Return value","pos":[2211,2223]},{"pos":[2224,2235],"content":"Contents of"},{"content":"size of TZ name","pos":[2387,2402]},{"content":"0","pos":[2410,2411]},{"content":"0 or 1","pos":[2412,2418]},{"content":"0","pos":[2419,2420]},{"content":"not modified","pos":[2421,2433]},{"content":"size of TZ name","pos":[2438,2453]},{"content":"any","pos":[2454,2457]},{"content":"&gt; 0","pos":[2458,2461],"source":"> 0"},{"content":"0 or 1","pos":[2462,2468]},{"content":"0","pos":[2469,2470]},{"content":"TZ name","pos":[2471,2478]},{"content":"not modified","pos":[2483,2495]},{"content":"&gt; 0","pos":[2503,2506],"source":"> 0"},{"content":"any","pos":[2507,2510]},{"content":"not modified","pos":[2520,2532]},{"content":"not modified","pos":[2537,2549]},{"content":"any","pos":[2550,2553]},{"content":"zero","pos":[2554,2558]},{"content":"any","pos":[2559,2562]},{"content":"not modified","pos":[2572,2584]},{"content":"not modified","pos":[2589,2601]},{"content":"any","pos":[2602,2605]},{"content":"&gt; 0","pos":[2606,2609],"source":"> 0"},{"content":"&gt; 1","pos":[2610,2613],"source":"> 1"},{"content":"not modified","pos":[2623,2635]},{"content":"Remarks","pos":[2645,2652]},{"content":"The <ph id=\"ph1\">`_get_tzname`</ph> function retrieves the character string representation of the time zone name or the daylight standard time zone name (DST) into the address of <ph id=\"ph2\">`timeZoneName`</ph> depending on the index value, along with the size of the string in <ph id=\"ph3\">`pReturnValue`</ph>.","pos":[2656,2914],"source":"The `_get_tzname` function retrieves the character string representation of the time zone name or the daylight standard time zone name (DST) into the address of `timeZoneName` depending on the index value, along with the size of the string in `pReturnValue`."},{"content":"If <ph id=\"ph1\">`timeZoneName`</ph> is <ph id=\"ph2\">`NULL`</ph> and <ph id=\"ph3\">`sizeInBytes`</ph> is zero, just the size of the string of either time zone in bytes is returned in <ph id=\"ph4\">`pReturnValue`</ph>.","pos":[2915,3057],"source":" If `timeZoneName` is `NULL` and `sizeInBytes` is zero, just the size of the string of either time zone in bytes is returned in `pReturnValue`."},{"content":"The index values must be either 0 for standard time zone or 1 for daylight standard time zone; any other values of index have undetermined results.","pos":[3058,3205]},{"content":"Index values","pos":[3215,3227]},{"pos":[3242,3253],"content":"Contents of"},{"pos":[3284,3297],"content":"default value"},{"content":"0","pos":[3388,3389]},{"content":"Time zone name","pos":[3390,3404]},{"content":"\"PST\"","pos":[3405,3410]},{"content":"1","pos":[3415,3416]},{"content":"Daylight standard time zone name","pos":[3417,3449]},{"content":"\"PDT\"","pos":[3450,3455]},{"content":"&gt; 1 or &lt; 0","pos":[3460,3470],"source":"> 1 or < 0"},{"pos":[3479,3485],"content":"set to"},{"content":"not modified","pos":[3495,3507]},{"content":"Unless the values are explicitly changed during run time, the default values are \"PST\" and \"PDT\" respectively.","pos":[3515,3625]},{"content":"The sizes of these character arrays are governed by <ph id=\"ph1\">`TZNAME_MAX`</ph> value.","pos":[3627,3698],"source":"  The sizes of these character arrays are governed by `TZNAME_MAX` value."},{"content":"Requirements","pos":[3707,3719]},{"content":"Routine","pos":[3726,3733]},{"content":"Required header","pos":[3734,3749]},{"content":"time.h&gt;","pos":[3810,3817],"source":"time.h>"},{"pos":[3825,3909],"content":"For more information, see <bpt id=\"p1\">[</bpt>Compatibility<ept id=\"p1\">](../../c-runtime-library/compatibility.md)</ept>.","source":"For more information, see [Compatibility](../../c-runtime-library/compatibility.md)."},{"content":".NET Framework Equivalent","pos":[3918,3943]},{"content":"Not applicable.","pos":[3947,3962]},{"content":"To call the standard C function, use <ph id=\"ph1\">`PInvoke`</ph>.","pos":[3963,4010],"source":" To call the standard C function, use `PInvoke`."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Platform Invoke Examples<ept id=\"p1\">](http://msdn.microsoft.com/Library/15926806-f0b7-487e-93a6-4e9367ec689f)</ept>.","pos":[4011,4136],"source":" For more information, see [Platform Invoke Examples](http://msdn.microsoft.com/Library/15926806-f0b7-487e-93a6-4e9367ec689f)."},{"content":"See Also","pos":[4145,4153]},{"content":"Time Management","pos":[4158,4173]},{"content":"errno, _doserrno, _sys_errlist, and _sys_nerr","pos":[4224,4269]},{"content":"_get_daylight","pos":[4344,4357]},{"content":"_get_dstbias","pos":[4415,4427]},{"content":"_get_timezone","pos":[4484,4497]},{"content":"TZNAME_MAX","pos":[4555,4565]}],"content":"---\ntitle: \"_get_tzname | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\napiname: \n  - \"_get_tzname\"\napilocation: \n  - \"msvcrt.dll\"\n  - \"msvcr80.dll\"\n  - \"msvcr90.dll\"\n  - \"msvcr100.dll\"\n  - \"msvcr100_clr0400.dll\"\n  - \"msvcr110.dll\"\n  - \"msvcr110_clr0400.dll\"\n  - \"msvcr120.dll\"\n  - \"msvcr120_clr0400.dll\"\n  - \"ucrtbase.dll\"\n  - \"api-ms-win-crt-time-l1-1-0.dll\"\napitype: \"DLLExport\"\nf1_keywords: \n  - \"_get_tzname\"\n  - \"get_tzname\"\ndev_langs: \n  - \"C++\"\n  - \"C\"\nhelpviewer_keywords: \n  - \"_get_tzname function\"\n  - \"time zones\"\n  - \"get_tzname function\"\nms.assetid: df0065ff-095f-4237-832c-2fe9ab913875\ncaps.latest.revision: 18\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# _get_tzname\nRetrieves the character string representation of the time zone name or the daylight standard time zone name (DST).  \n  \n## Syntax  \n  \n```  \nerrno_t _get_tzname(  \n    size_t* pReturnValue,  \n    char* timeZoneName,  \n    size_t sizeInBytes,  \n    int index      \n);  \n```  \n  \n#### Parameters  \n [out] `pReturnValue`  \n The string length of `timeZoneName` including a NULL terminator.  \n  \n [out] `timeZoneName`  \n The address of a character string for the representation of the time zone name or the daylight standard time zone name (DST), depending on `index`.  \n  \n [in] `sizeInBytes`  \n The size of the `timeZoneName` character string in bytes.  \n  \n [in] `index`  \n The index of one of the two time zone names to retrieve.  \n  \n## Return Value  \n Zero if successful, otherwise an `errno` type value.  \n  \n If either `timeZoneName` is `NULL`, or `sizeInBytes` is zero or less than zero (but not both), an invalid parameter handler is invoked, as described in [Parameter Validation](../../c-runtime-library/parameter-validation.md). If execution is allowed to continue, this function sets `errno` to `EINVAL` and returns `EINVAL`.  \n  \n### Error Conditions  \n  \n|`pReturnValue`|`timeZoneName`|`sizeInBytes`|`index`|Return value|Contents of `timeZoneName`|  \n|--------------------|--------------------|-------------------|-------------|------------------|--------------------------------|  \n|size of TZ name|`NULL`|0|0 or 1|0|not modified|  \n|size of TZ name|any|> 0|0 or 1|0|TZ name|  \n|not modified|`NULL`|> 0|any|`EINVAL`|not modified|  \n|not modified|any|zero|any|`EINVAL`|not modified|  \n|not modified|any|> 0|> 1|`EINVAL`|not modified|  \n  \n## Remarks  \n The `_get_tzname` function retrieves the character string representation of the time zone name or the daylight standard time zone name (DST) into the address of `timeZoneName` depending on the index value, along with the size of the string in `pReturnValue`. If `timeZoneName` is `NULL` and `sizeInBytes` is zero, just the size of the string of either time zone in bytes is returned in `pReturnValue`. The index values must be either 0 for standard time zone or 1 for daylight standard time zone; any other values of index have undetermined results.  \n  \n### Index values  \n  \n|`index`|Contents of `timeZoneName`|`timeZoneName` default value|  \n|-------------|--------------------------------|----------------------------------|  \n|0|Time zone name|\"PST\"|  \n|1|Daylight standard time zone name|\"PDT\"|  \n|> 1 or < 0|`errno` set to `EINVAL`|not modified|  \n  \n Unless the values are explicitly changed during run time, the default values are \"PST\" and \"PDT\" respectively.  The sizes of these character arrays are governed by `TZNAME_MAX` value.  \n  \n## Requirements  \n  \n|Routine|Required header|  \n|-------------|---------------------|  \n|`_get_tzname`|\\<time.h>|  \n  \n For more information, see [Compatibility](../../c-runtime-library/compatibility.md).  \n  \n## .NET Framework Equivalent  \n Not applicable. To call the standard C function, use `PInvoke`. For more information, see [Platform Invoke Examples](http://msdn.microsoft.com/Library/15926806-f0b7-487e-93a6-4e9367ec689f).  \n  \n## See Also  \n [Time Management](../../c-runtime-library/time-management.md)   \n [errno, _doserrno, _sys_errlist, and _sys_nerr](../../c-runtime-library/errno-doserrno-sys-errlist-and-sys-nerr.md)   \n [_get_daylight](../../c-runtime-library/reference/get-daylight.md)   \n [_get_dstbias](../../c-runtime-library/reference/get-dstbias.md)   \n [_get_timezone](../../c-runtime-library/reference/get-timezone.md)   \n [TZNAME_MAX](../../c-runtime-library/tzname-max.md)"}