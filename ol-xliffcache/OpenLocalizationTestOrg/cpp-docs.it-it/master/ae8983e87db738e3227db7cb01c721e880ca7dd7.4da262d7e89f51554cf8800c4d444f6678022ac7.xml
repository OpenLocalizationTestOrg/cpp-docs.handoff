{"nodes":[{"pos":[12,52],"content":"runtime_exception Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"runtime_exception Class | Microsoft Docs","pos":[0,40]}]},{"pos":[663,686],"content":"runtime_exception Class","linkify":"runtime_exception Class","nodes":[{"content":"runtime_exception Class","pos":[0,23]}]},{"content":"The base type for exceptions in the C++ Accelerated Massive Parallelism (AMP) library.","pos":[687,773]},{"pos":[783,789],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[864,871],"content":"Members","linkify":"Members","nodes":[{"content":"Members","pos":[0,7]}]},{"pos":[881,900],"content":"Public Constructors","linkify":"Public Constructors","nodes":[{"content":"Public Constructors","pos":[0,19]}]},{"content":"Name","pos":[907,911]},{"content":"Description","pos":[912,923]},{"pos":[961,1018],"content":"<bpt id=\"p1\">[</bpt>runtime_exception::runtime_exception Constructor<ept id=\"p1\">](#ctor)</ept>","source":"[runtime_exception::runtime_exception Constructor](#ctor)"},{"pos":[1019,1079],"content":"Initializes a new instance of the <ph id=\"ph1\">`runtime_exception`</ph> class.","source":"Initializes a new instance of the `runtime_exception` class."},{"pos":[1084,1141],"content":"<bpt id=\"p1\">[</bpt>runtime_exception::~runtime_exception Destructor<ept id=\"p1\">](#dtor)</ept>","source":"[runtime_exception::~runtime_exception Destructor](#dtor)"},{"pos":[1142,1182],"content":"Destroys the <ph id=\"ph1\">`runtime_exception`</ph> object.","source":"Destroys the `runtime_exception` object."},{"pos":[1193,1207],"content":"Public Methods","linkify":"Public Methods","nodes":[{"content":"Public Methods","pos":[0,14]}]},{"content":"Name","pos":[1214,1218]},{"content":"Description","pos":[1219,1230]},{"pos":[1268,1346],"content":"<bpt id=\"p1\">[</bpt>runtime_exception::get_error_code Method<ept id=\"p1\">](#runtime_exception__get_error_code)</ept>","source":"[runtime_exception::get_error_code Method](#runtime_exception__get_error_code)"},{"content":"Returns the error code that caused the exception.","pos":[1347,1396]},{"pos":[1408,1424],"content":"Public Operators","linkify":"Public Operators","nodes":[{"content":"Public Operators","pos":[0,16]}]},{"content":"Name","pos":[1431,1435]},{"content":"Description","pos":[1436,1447]},{"pos":[1485,1557],"content":"<bpt id=\"p1\">[</bpt>runtime_exception::operator= Operator<ept id=\"p1\">](#runtime_exception__operator_eq)</ept>","source":"[runtime_exception::operator= Operator](#runtime_exception__operator_eq)"},{"pos":[1558,1636],"content":"Copies the contents of the specified <ph id=\"ph1\">`runtime_exception`</ph> object into this one.","source":"Copies the contents of the specified `runtime_exception` object into this one."},{"pos":[1646,1667],"content":"Inheritance Hierarchy","linkify":"Inheritance Hierarchy","nodes":[{"content":"Inheritance Hierarchy","pos":[0,21]}]},{"pos":[1717,1729],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[1733,1752],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> amprt.h","source":"**Header:** amprt.h"},{"pos":[1759,1785],"content":"<bpt id=\"p1\">**</bpt>Namespace:<ept id=\"p1\">**</ept> Concurrency","source":"**Namespace:** Concurrency"},{"pos":[1792,1861],"content":"<bpt id=\"p1\">&lt;a name=\"runtime_exception__ctor\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  runtime_exception Constructor","linkify":"<a name=\"runtime_exception__ctor\"></a>  runtime_exception Constructor","source":"<a name=\"runtime_exception__ctor\"></a>  runtime_exception Constructor"},{"content":"Initializes a new instance of the class.","pos":[1864,1904]},{"pos":[1914,1920],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[2170,2180],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"A description of the error that caused the exception.","pos":[2198,2251]},{"content":"The HRESULT of error that caused the exception.","pos":[2272,2319]},{"content":"The <ph id=\"ph1\">`runtime_exception`</ph> object to copy.","pos":[2338,2377],"source":" The `runtime_exception` object to copy."},{"pos":[2387,2399],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[2403,2434],"content":"The <ph id=\"ph1\">`runtime_exception`</ph> object.","source":"The `runtime_exception` object."},{"pos":[2441,2491],"content":"<bpt id=\"p1\">&lt;a name=\"dtor\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  ~runtime_exception Destructor","linkify":"<a name=\"dtor\"></a>  ~runtime_exception Destructor","source":"<a name=\"dtor\"></a>  ~runtime_exception Destructor"},{"content":"Destroys the object.","pos":[2494,2514]},{"pos":[2524,2530],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[2594,2658],"content":"<bpt id=\"p1\">&lt;a name=\"runtime_exception__get_error_code\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  get_error_code","linkify":"<a name=\"runtime_exception__get_error_code\"></a>  get_error_code","source":"<a name=\"runtime_exception__get_error_code\"></a>  get_error_code"},{"content":"Returns the error code that caused the exception.","pos":[2662,2711]},{"pos":[2721,2727],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[2794,2806],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The HRESULT of error that caused the exception.","pos":[2810,2857]},{"pos":[2866,2922],"content":"<bpt id=\"p1\">&lt;a name=\"runtime_exception__operator_eq\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  operator=","linkify":"<a name=\"runtime_exception__operator_eq\"></a>  operator=","source":"<a name=\"runtime_exception__operator_eq\"></a>  operator="},{"pos":[2928,3006],"content":"Copies the contents of the specified <ph id=\"ph1\">`runtime_exception`</ph> object into this one.","source":"Copies the contents of the specified `runtime_exception` object into this one."},{"pos":[3016,3022],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[3128,3138],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"The <ph id=\"ph1\">`runtime_exception`</ph> object to copy.","pos":[3154,3193],"source":" The `runtime_exception` object to copy."},{"pos":[3203,3215],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[3219,3266],"content":"A reference to this <ph id=\"ph1\">`runtime_exception`</ph> object.","source":"A reference to this `runtime_exception` object."},{"pos":[3279,3287],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"pos":[3291,3358],"content":"<bpt id=\"p1\">[</bpt>Concurrency Namespace (C++ AMP)<ept id=\"p1\">](concurrency-namespace-cpp-amp.md)</ept>","source":"[Concurrency Namespace (C++ AMP)](concurrency-namespace-cpp-amp.md)"}],"content":"---\ntitle: \"runtime_exception Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"amp/Concurrency::direct3d_abort\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"runtime_exception class\"\nms.assetid: 8fe3ce2c-3d4c-4b9c-95e8-e592f37adefd\ncaps.latest.revision: 10\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"ru-ru\"\n  - \"zh-cn\"\n  - \"zh-tw\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"tr-tr\"\n---\n# runtime_exception Class\nThe base type for exceptions in the C++ Accelerated Massive Parallelism (AMP) library.  \n  \n### Syntax  \n  \n```  \nclass runtime_exception : public std::exception;  \n```  \n  \n## Members  \n  \n### Public Constructors  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[runtime_exception::runtime_exception Constructor](#ctor)|Initializes a new instance of the `runtime_exception` class.|  \n|[runtime_exception::~runtime_exception Destructor](#dtor)|Destroys the `runtime_exception` object.|  \n  \n### Public Methods  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[runtime_exception::get_error_code Method](#runtime_exception__get_error_code)|Returns the error code that caused the exception.|  \n\n  \n### Public Operators  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[runtime_exception::operator= Operator](#runtime_exception__operator_eq)|Copies the contents of the specified `runtime_exception` object into this one.|  \n  \n## Inheritance Hierarchy  \n `exception`  \n  \n `runtime_exception`  \n  \n## Requirements  \n **Header:** amprt.h  \n  \n **Namespace:** Concurrency  \n\n## <a name=\"runtime_exception__ctor\"></a>  runtime_exception Constructor  \nInitializes a new instance of the class.  \n  \n### Syntax  \n  \n```  \nruntime_exception(  \n    const char * _Message,  \n    HRESULT _Hresult ) throw();  \n  \nexplicit runtime_exception(  \n    HRESULT _Hresult ) throw();  \n  \nruntime_exception(  \n    const runtime_exception & _Other ) throw();  \n```  \n  \n### Parameters  \n `_Message`  \n A description of the error that caused the exception.  \n  \n `_Hresult`  \n The HRESULT of error that caused the exception.  \n  \n `_Other`  \n The `runtime_exception` object to copy.  \n  \n### Return Value  \n The `runtime_exception` object.  \n\n## <a name=\"dtor\"></a>  ~runtime_exception Destructor  \nDestroys the object.  \n  \n### Syntax  \n  \n```  \nvirtual ~runtime_exception() throw();  \n```  \n  \n## <a name=\"runtime_exception__get_error_code\"></a>  get_error_code   \nReturns the error code that caused the exception.  \n  \n### Syntax  \n  \n```  \nHRESULT get_error_code() const throw();  \n```  \n  \n### Return Value  \n The HRESULT of error that caused the exception.  \n  \n## <a name=\"runtime_exception__operator_eq\"></a>  operator=   \n  Copies the contents of the specified `runtime_exception` object into this one.  \n  \n### Syntax  \n  \n```  \nruntime_exception & operator= (    const runtime_exception & _Other ) throw();  \n```  \n  \n### Parameters  \n `_Other`  \n The `runtime_exception` object to copy.  \n  \n### Return Value  \n A reference to this `runtime_exception` object.  \n  \n\n  \n## See Also  \n [Concurrency Namespace (C++ AMP)](concurrency-namespace-cpp-amp.md)\n"}