<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="it-it">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-787e512" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1e547e0a9340a03229ad887be8fc6b0019a1515f</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\build\reference\permissive-standards-conformance.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fe2987b2def2f3d14245736f3537a91e7852887a</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6538281a45d8b59465580ee85ec1b766bff7078e</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>-permissive- (Standards conformance) | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>/permissive- (Standards conformance)</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Specify standards conformance mode to the compiler.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Use this option to help you identify and fix conformance issues in your code, to make it both more correct and more portable.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>You can use the <bpt id="p1">**</bpt>/permissive-<ept id="p1">**</ept> compiler option to specify standards-conforming compiler behavior.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>This option disables permissive behaviors, and sets the <bpt id="p1">[</bpt>/Zc<ept id="p1">](../../build/reference/zc-conformance.md)</ept> compiler options for strict conformance.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>In the IDE, this option also makes the IntelliSense engine underline non-conforming code.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>By default, the <bpt id="p1">**</bpt>/permissive-<ept id="p1">**</ept> option is not set.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>When the option is set, the compiler generates diagnostic errors or warnings when non-standard language constructs are detected in your code, including some common bugs in pre-C++11 code.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>/permissive-<ept id="p1">**</ept> option sets the <bpt id="p2">[</bpt>/Zc:strictStrings<ept id="p2">](../../build/reference/zc-conformance.md)</ept> and <bpt id="p3">[</bpt>/Zc:rvalueCast<ept id="p3">](../../build/reference/zc-conformance.md)</ept> options to conforming behavior.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>They default to non-conforming behavior.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>You can pass specific <bpt id="p1">**</bpt>/Zc<ept id="p1">**</ept> options after <bpt id="p2">**</bpt>/permissive-<ept id="p2">**</ept> on the command line to override this behavior.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Environment-specific extensions and language areas that the standard leaves up to the implementation are not affected by <bpt id="p1">**</bpt>/permissive-<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>For example, the Microsoft-specific <ph id="ph1">`__declspec`</ph>, calling convention and structured exception handling keywords, and compiler-specific pragma directives or attributes are not flagged by the compiler in <bpt id="p1">**</bpt>/permissive-<ept id="p1">**</ept> mode.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>/permissive-<ept id="p1">**</ept> option uses the conformance support in the current compiler version to determine which language constructs are non-conforming.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The option does not determine if your code conforms to a specific version of the C++ standard.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>To enable all implemented compiler support for the latest draft standard, use the <bpt id="p1">[</bpt>/std:latest<ept id="p1">](../../build/reference/std-specify-language-standard-version.md)</ept> option.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>To restrict the compiler support to more closely match the C++14 standard, use the <bpt id="p1">[</bpt>/std:c++14<ept id="p1">](../../build/reference/std-specify-language-standard-version.md)</ept> option, which is the default.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Not all C++11, C++14, or draft C++17 standards-conforming code is supported by the Visual C++ compiler in Visual Studio 2017 RC.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>/permissive-<ept id="p1">**</ept> option may not detect issues regarding two-phase name lookup, binding a non-const reference to a temporary, treating copy init as direct init, allowing multiple user-defined conversions in initialization, or alternative tokens for logical operators, and other non-supported conformance areas.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>For more information about conformance issues in Visual C++, see <bpt id="p1">[</bpt>Nonstandard Behavior<ept id="p1">](../../cpp/nonstandard-behavior.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>How to fix your code</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Here are some examples of code that is detected as non-conforming when you use <bpt id="p1">**</bpt>/permissive-<ept id="p1">**</ept>, along with suggested ways to fix the issues.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Use default as an identifier in native code</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Lookup members in dependent base</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Use of qualified names in member declarations</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Initialize multiple union members in a member initializer</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Hidden friend name lookup rules</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Use scoped enums in array bounds</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Use for each in native code</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Use of ATL Attributes</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>To set this compiler option in the Visual Studio development environment</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Open your project's <bpt id="p1">**</bpt>Property Pages<ept id="p1">**</ept> dialog box.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Under <bpt id="p1">**</bpt>Configuration Properties<ept id="p1">**</ept>, expand the <bpt id="p2">**</bpt>C/C++<ept id="p2">**</ept> folder and choose the <bpt id="p3">**</bpt>Command Line<ept id="p3">**</ept> property page.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Enter the <bpt id="p1">**</bpt>/permissive-<ept id="p1">**</ept> compiler option in the <bpt id="p2">**</bpt>Additional Options<ept id="p2">**</ept> box.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Choose <bpt id="p1">**</bpt>OK<ept id="p1">**</ept> or <bpt id="p2">**</bpt>Apply<ept id="p2">**</ept> to save your changes.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>To set this compiler option programmatically</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>See &lt;xref:Microsoft.VisualStudio.VCProjectEngine.VCCLCompilerTool.AdditionalOptions%2A&gt;.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Compiler Options</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Setting Compiler Options</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>