{"nodes":[{"pos":[12,53],"content":"Data Access: ADO and RDO | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Data Access: ADO and RDO | Microsoft Docs","pos":[0,41]}]},{"content":"Data Access: ADO and RDO","pos":[857,881]},{"content":"The following table shows two underlying technologies that support data-source or data-bound controls.","pos":[882,984]},{"content":"ADO","pos":[993,996]},{"content":"ADO is a COM wrapper of OLE DB that facilitates writing data access applications (consumers).","pos":[1002,1095]},{"content":"OLE DB is a COM-based universal data access technology, allowing you to use any data source, not just indexed, sequential access methods (ISAM) and SQL-based databases.","pos":[1096,1264]},{"content":"OLE DB providers can access data from a variety of data sources and is not limited to SQL queries to retrieve data but rather can use queries as defined in the provider.","pos":[1271,1440]},{"content":"RDO","pos":[1449,1452]},{"content":"RDO is the COM wrapper of ODBC.","pos":[1458,1489]},{"content":"ODBC, a C-based API, allows general-purpose (heterogeneous) data access.","pos":[1490,1562]},{"content":"However, RDO relies on SQL as the command language to access data.","pos":[1563,1629]},{"content":"You might consider using the ADO-based data-access controls rather than the RDO data-access controls.","pos":[1636,1737]},{"content":"The following table shows the main differences between ADO and RDO data controls.","pos":[1744,1825]},{"content":"Data-bound controls","pos":[1834,1853]},{"content":"RDO data-bound controls use the <bpt id=\"p1\">**</bpt>ICursor<ept id=\"p1\">**</ept> interfaces; ADO controls use the OLE DB <ph id=\"ph1\">`IRowset`</ph> interface.","pos":[1859,1963],"source":" RDO data-bound controls use the **ICursor** interfaces; ADO controls use the OLE DB `IRowset` interface."},{"content":"In both cases, the interfaces used by the controls return a rowset.","pos":[1964,2031]},{"content":"The RDO-based data-bound controls were designed to work best with Visual Basic.","pos":[2038,2117]},{"content":"As such, some functionality of RDO data-bound controls, most notably in formatting, is not available in Visual C++ applications.","pos":[2118,2246]},{"content":"This problem is not present in the ADO databinding controls.","pos":[2247,2307]},{"content":"Data controls","pos":[2316,2329]},{"content":"ADO data controls implement the <bpt id=\"p1\">**</bpt>IDataSource<ept id=\"p1\">**</ept> interface and RDO data controls implement the <bpt id=\"p2\">**</bpt>IVBDSC<ept id=\"p2\">**</ept> interface.","pos":[2335,2450],"source":" ADO data controls implement the **IDataSource** interface and RDO data controls implement the **IVBDSC** interface."},{"content":"You can call an <bpt id=\"p1\">**</bpt>IDataSource<ept id=\"p1\">**</ept> method to receive an <ph id=\"ph1\">`IRowset`</ph> interface pointer.","pos":[2451,2532],"source":" You can call an **IDataSource** method to receive an `IRowset` interface pointer."},{"content":"Similarly, you can call an IVBDSC method to get an <bpt id=\"p1\">**</bpt>ICursor<ept id=\"p1\">**</ept> interface pointer.","pos":[2533,2614],"source":" Similarly, you can call an IVBDSC method to get an **ICursor** interface pointer."},{"content":"See Also","pos":[2623,2631]},{"content":"Databinding with ActiveX Controls in Visual C++","pos":[2636,2683]}],"content":"---\ntitle: \"Data Access: ADO and RDO | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"data controls [C++]\"\n  - \"bound controls [C++], ADO\"\n  - \"data binding [C++], RDO\"\n  - \"data-bound controls [C++], ADO\"\n  - \"data binding [C++], ADO\"\n  - \"data access [C++], RDO data controls\"\n  - \"data-bound controls [C++], RDO\"\n  - \"bound controls [C++], RDO\"\n  - \"controls [C++], data binding\"\nms.assetid: 92da8f1e-144b-4605-ac0a-43c25bdc14a7\ncaps.latest.revision: 8\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Data Access: ADO and RDO\nThe following table shows two underlying technologies that support data-source or data-bound controls.  \n  \n **ADO**  \n ADO is a COM wrapper of OLE DB that facilitates writing data access applications (consumers). OLE DB is a COM-based universal data access technology, allowing you to use any data source, not just indexed, sequential access methods (ISAM) and SQL-based databases.  \n  \n OLE DB providers can access data from a variety of data sources and is not limited to SQL queries to retrieve data but rather can use queries as defined in the provider.  \n  \n **RDO**  \n RDO is the COM wrapper of ODBC. ODBC, a C-based API, allows general-purpose (heterogeneous) data access. However, RDO relies on SQL as the command language to access data.  \n  \n You might consider using the ADO-based data-access controls rather than the RDO data-access controls.  \n  \n The following table shows the main differences between ADO and RDO data controls.  \n  \n **Data-bound controls**  \n RDO data-bound controls use the **ICursor** interfaces; ADO controls use the OLE DB `IRowset` interface. In both cases, the interfaces used by the controls return a rowset.  \n  \n The RDO-based data-bound controls were designed to work best with Visual Basic. As such, some functionality of RDO data-bound controls, most notably in formatting, is not available in Visual C++ applications. This problem is not present in the ADO databinding controls.  \n  \n **Data controls**  \n ADO data controls implement the **IDataSource** interface and RDO data controls implement the **IVBDSC** interface. You can call an **IDataSource** method to receive an `IRowset` interface pointer. Similarly, you can call an IVBDSC method to get an **ICursor** interface pointer.  \n  \n## See Also  \n [Databinding with ActiveX Controls in Visual C++](../../data/ado-rdo/databinding-with-activex-controls-in-visual-cpp.md)"}