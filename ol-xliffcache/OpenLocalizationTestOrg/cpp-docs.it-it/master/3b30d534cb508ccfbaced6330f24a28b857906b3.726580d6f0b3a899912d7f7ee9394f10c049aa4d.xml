{"nodes":[{"pos":[12,48],"content":"_strtime, _wstrtime | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"_strtime, _wstrtime | Microsoft Docs","pos":[0,36]}]},{"pos":[1167,1186],"content":"_strtime, _wstrtime","linkify":"_strtime, _wstrtime","nodes":[{"content":"_strtime, _wstrtime","pos":[0,19]}]},{"content":"Copy the time to a buffer.","pos":[1187,1213]},{"content":"More secure versions of these functions are available; see <bpt id=\"p1\">[</bpt>_strtime_s, _wstrtime_s<ept id=\"p1\">](../../c-runtime-library/reference/strtime-s-wstrtime-s.md)</ept>.","pos":[1214,1358],"source":" More secure versions of these functions are available; see [_strtime_s, _wstrtime_s](../../c-runtime-library/reference/strtime-s-wstrtime-s.md)."},{"pos":[1367,1373],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[1673,1683],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Time string.","pos":[1700,1712]},{"pos":[1721,1733],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[1737,1799],"content":"Returns a pointer to the resulting character string <ph id=\"ph1\">`timestr`</ph>.","source":"Returns a pointer to the resulting character string `timestr`."},{"pos":[1808,1815],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The <ph id=\"ph1\">`_strtime`</ph> function copies the current local time into the buffer pointed to by <ph id=\"ph2\">`timestr`</ph><bpt id=\"p1\">*</bpt>.<ept id=\"p1\">*</ept>","pos":[1819,1915],"source":"The `_strtime` function copies the current local time into the buffer pointed to by `timestr`*.*"},{"content":"The time is formatted as <ph id=\"ph1\">`hh:mm:ss`</ph> where <ph id=\"ph2\">`hh`</ph> is two digits representing the hour in 24-hour notation, <ph id=\"ph3\">`mm`</ph> is two digits representing the minutes past the hour, and <ph id=\"ph4\">`ss`</ph> is two digits representing seconds.","pos":[1916,2123],"source":" The time is formatted as `hh:mm:ss` where `hh` is two digits representing the hour in 24-hour notation, `mm` is two digits representing the minutes past the hour, and `ss` is two digits representing seconds."},{"content":"For example, the string <ph id=\"ph1\">`18:23:44`</ph> represents 23 minutes and 44 seconds past 6 P.M.","pos":[2124,2207],"source":" For example, the string `18:23:44` represents 23 minutes and 44 seconds past 6 P.M."},{"content":"The buffer must be at least 9 bytes long.","pos":[2208,2249]},{"content":"<ph id=\"ph1\">`_wstrtime`</ph> is a wide-character version of <ph id=\"ph2\">`_strtime`</ph>; the argument and return value of <ph id=\"ph3\">`_wstrtime`</ph> are wide-character strings.","pos":[2256,2383],"source":"`_wstrtime` is a wide-character version of `_strtime`; the argument and return value of `_wstrtime` are wide-character strings."},{"content":"These functions behave identically otherwise.If <ph id=\"ph1\">`timestr`</ph> is <ph id=\"ph2\">`NULL`</ph> pointer or if <ph id=\"ph3\">`timestr`</ph> is formatted incorrectly, the invalid parameter handler is invoked, as described in <bpt id=\"p1\">[</bpt>Parameter Validation<ept id=\"p1\">](../../c-runtime-library/parameter-validation.md)</ept>.","pos":[2384,2632],"source":" These functions behave identically otherwise.If `timestr` is `NULL` pointer or if `timestr` is formatted incorrectly, the invalid parameter handler is invoked, as described in [Parameter Validation](../../c-runtime-library/parameter-validation.md)."},{"content":"If the exception is allowed to continue, these functions return a NULL and set <ph id=\"ph1\">`errno`</ph> to <ph id=\"ph2\">`EINVAL`</ph> if <ph id=\"ph3\">`timestr`</ph> was a NULL or set <ph id=\"ph4\">`errno`</ph> to <ph id=\"ph5\">`ERANGE`</ph> if <ph id=\"ph6\">`timestr`</ph> is formatted incorrectly.","pos":[2633,2821],"source":" If the exception is allowed to continue, these functions return a NULL and set `errno` to `EINVAL` if `timestr` was a NULL or set `errno` to `ERANGE` if `timestr` is formatted incorrectly."},{"content":"In C++, these functions have template overloads that invoke the newer, secure counterparts of these functions.","pos":[2828,2938]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Secure Template Overloads<ept id=\"p1\">](../../c-runtime-library/secure-template-overloads.md)</ept>.","pos":[2939,3047],"source":" For more information, see [Secure Template Overloads](../../c-runtime-library/secure-template-overloads.md)."},{"pos":[3057,3086],"content":"Generic-Text Routine Mappings","linkify":"Generic-Text Routine Mappings","nodes":[{"content":"Generic-Text Routine Mappings","pos":[0,29]}]},{"content":"TCHAR.H routine","pos":[3093,3108]},{"content":"_UNICODE &amp; _MBCS not defined","pos":[3109,3137],"source":"_UNICODE & _MBCS not defined"},{"content":"_MBCS defined","pos":[3138,3151]},{"content":"_UNICODE defined","pos":[3152,3168]},{"pos":[3336,3348],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"content":"Routine","pos":[3355,3362]},{"content":"Required header","pos":[3363,3378]},{"content":"<ph id=\"ph1\">\\&lt;</ph>time.h&gt;","pos":[3434,3443],"source":"\\<time.h>"},{"content":"<ph id=\"ph1\">\\&lt;</ph>time.h&gt; or <ph id=\"ph2\">\\&lt;</ph>wchar.h&gt;","pos":[3460,3483],"source":"\\<time.h> or \\<wchar.h>"},{"pos":[3491,3615],"content":"For additional compatibility information, see <bpt id=\"p1\">[</bpt>Compatibility<ept id=\"p1\">](../../c-runtime-library/compatibility.md)</ept> in the Introduction.","source":"For additional compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md) in the Introduction."},{"pos":[3624,3631],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[4006,4031],"content":".NET Framework Equivalent","linkify":".NET Framework Equivalent","nodes":[{"content":".NET Framework Equivalent","pos":[0,25]}]},{"pos":[4041,4157],"content":"<bpt id=\"p1\">[</bpt>System::DateTime::ToLongDateString<ept id=\"p1\">](https://msdn.microsoft.com/en-us/library/system.datetime.tolongdatestring.aspx)</ept>","source":"[System::DateTime::ToLongDateString](https://msdn.microsoft.com/en-us/library/system.datetime.tolongdatestring.aspx)"},{"pos":[4167,4283],"content":"<bpt id=\"p1\">[</bpt>System::DateTime::ToLongTimeString<ept id=\"p1\">](https://msdn.microsoft.com/en-us/library/system.datetime.tolongtimestring.aspx)</ept>","source":"[System::DateTime::ToLongTimeString](https://msdn.microsoft.com/en-us/library/system.datetime.tolongtimestring.aspx)"},{"pos":[4293,4411],"content":"<bpt id=\"p1\">[</bpt>System::DateTime::ToShortDateString<ept id=\"p1\">](https://msdn.microsoft.com/en-us/library/system.datetime.toshortdatestring.aspx)</ept>","source":"[System::DateTime::ToShortDateString](https://msdn.microsoft.com/en-us/library/system.datetime.toshortdatestring.aspx)"},{"pos":[4421,4539],"content":"<bpt id=\"p1\">[</bpt>System::DateTime::ToShortTimeString<ept id=\"p1\">](https://msdn.microsoft.com/en-us/library/system.datetime.toshorttimestring.aspx)</ept>","source":"[System::DateTime::ToShortTimeString](https://msdn.microsoft.com/en-us/library/system.datetime.toshorttimestring.aspx)"},{"pos":[4549,4649],"content":"<bpt id=\"p1\">[</bpt>System::DateTime::ToString<ept id=\"p1\">](https://msdn.microsoft.com/en-us/library/system.datetime.tostring.aspx)</ept>","source":"[System::DateTime::ToString](https://msdn.microsoft.com/en-us/library/system.datetime.tostring.aspx)"},{"pos":[4658,4666],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Time Management<ept id=\"p1\">](../../c-runtime-library/time-management.md)</ept><ph id=\"ph1\"> </ph>","pos":[4670,4732],"source":"[Time Management](../../c-runtime-library/time-management.md) "},{"content":"<bpt id=\"p1\"> [</bpt>asctime, _wasctime<ept id=\"p1\">](../../c-runtime-library/reference/asctime-wasctime.md)</ept><ph id=\"ph1\"> </ph>","pos":[4735,4812],"source":" [asctime, _wasctime](../../c-runtime-library/reference/asctime-wasctime.md) "},{"content":"<bpt id=\"p1\"> [</bpt>ctime, _ctime32, _ctime64, _wctime, _wctime32, _wctime64<ept id=\"p1\">](../../c-runtime-library/reference/ctime-ctime32-ctime64-wctime-wctime32-wctime64.md)</ept><ph id=\"ph1\"> </ph>","pos":[4815,4960],"source":" [ctime, _ctime32, _ctime64, _wctime, _wctime32, _wctime64](../../c-runtime-library/reference/ctime-ctime32-ctime64-wctime-wctime32-wctime64.md) "},{"content":"<bpt id=\"p1\"> [</bpt>gmtime, _gmtime32, _gmtime64<ept id=\"p1\">](../../c-runtime-library/reference/gmtime-gmtime32-gmtime64.md)</ept><ph id=\"ph1\"> </ph>","pos":[4963,5058],"source":" [gmtime, _gmtime32, _gmtime64](../../c-runtime-library/reference/gmtime-gmtime32-gmtime64.md) "},{"content":"<bpt id=\"p1\"> [</bpt>localtime, _localtime32, _localtime64<ept id=\"p1\">](../../c-runtime-library/reference/localtime-localtime32-localtime64.md)</ept><ph id=\"ph1\"> </ph>","pos":[5061,5174],"source":" [localtime, _localtime32, _localtime64](../../c-runtime-library/reference/localtime-localtime32-localtime64.md) "},{"content":"<bpt id=\"p1\"> [</bpt>mktime, _mktime32, _mktime64<ept id=\"p1\">](../../c-runtime-library/reference/mktime-mktime32-mktime64.md)</ept><ph id=\"ph1\"> </ph>","pos":[5177,5272],"source":" [mktime, _mktime32, _mktime64](../../c-runtime-library/reference/mktime-mktime32-mktime64.md) "},{"content":"<bpt id=\"p1\"> [</bpt>time, _time32, _time64<ept id=\"p1\">](../../c-runtime-library/reference/time-time32-time64.md)</ept><ph id=\"ph1\"> </ph>","pos":[5275,5358],"source":" [time, _time32, _time64](../../c-runtime-library/reference/time-time32-time64.md) "},{"content":"<bpt id=\"p1\"> [</bpt>_tzset<ept id=\"p1\">](../../c-runtime-library/reference/tzset.md)</ept>","pos":[5361,5414],"source":" [_tzset](../../c-runtime-library/reference/tzset.md)"}],"content":"---\ntitle: \"_strtime, _wstrtime | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\napiname: \n  - \"_wstrtime\"\n  - \"_strtime\"\napilocation: \n  - \"msvcrt.dll\"\n  - \"msvcr80.dll\"\n  - \"msvcr90.dll\"\n  - \"msvcr100.dll\"\n  - \"msvcr100_clr0400.dll\"\n  - \"msvcr110.dll\"\n  - \"msvcr110_clr0400.dll\"\n  - \"msvcr120.dll\"\n  - \"msvcr120_clr0400.dll\"\n  - \"ucrtbase.dll\"\n  - \"api-ms-win-crt-time-l1-1-0.dll\"\napitype: \"DLLExport\"\nf1_keywords: \n  - \"_wstrtime\"\n  - \"_strtime\"\n  - \"wstrtime\"\n  - \"strtime\"\n  - \"_tstrtime\"\ndev_langs: \n  - \"C++\"\n  - \"C\"\nhelpviewer_keywords: \n  - \"strtime function\"\n  - \"_strtime function\"\n  - \"_wstrtime function\"\n  - \"copying time to buffers\"\n  - \"wstrtime function\"\n  - \"tstrtime function\"\n  - \"_tstrtime function\"\n  - \"time, copying\"\nms.assetid: 9e538161-cf49-44ec-bca5-c0ab0b9e4ca3\ncaps.latest.revision: 22\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# _strtime, _wstrtime\nCopy the time to a buffer. More secure versions of these functions are available; see [_strtime_s, _wstrtime_s](../../c-runtime-library/reference/strtime-s-wstrtime-s.md).  \n  \n## Syntax  \n  \n```  \nchar *_strtime(  \n   char *timestr   \n);  \nwchar_t *_wstrtime(  \n   wchar_t *timestr   \n);  \ntemplate <size_t size>  \nchar *_strtime(  \n   char (&timestr)[size]  \n); // C++ only  \ntemplate <size_t size>  \nwchar_t *_wstrtime(  \n   wchar_t (&timestr)[size]  \n); // C++ only  \n```  \n  \n#### Parameters  \n `timestr`  \n Time string.  \n  \n## Return Value  \n Returns a pointer to the resulting character string `timestr`.  \n  \n## Remarks  \n The `_strtime` function copies the current local time into the buffer pointed to by `timestr`*.* The time is formatted as `hh:mm:ss` where `hh` is two digits representing the hour in 24-hour notation, `mm` is two digits representing the minutes past the hour, and `ss` is two digits representing seconds. For example, the string `18:23:44` represents 23 minutes and 44 seconds past 6 P.M. The buffer must be at least 9 bytes long.  \n  \n `_wstrtime` is a wide-character version of `_strtime`; the argument and return value of `_wstrtime` are wide-character strings. These functions behave identically otherwise.If `timestr` is `NULL` pointer or if `timestr` is formatted incorrectly, the invalid parameter handler is invoked, as described in [Parameter Validation](../../c-runtime-library/parameter-validation.md). If the exception is allowed to continue, these functions return a NULL and set `errno` to `EINVAL` if `timestr` was a NULL or set `errno` to `ERANGE` if `timestr` is formatted incorrectly.  \n  \n In C++, these functions have template overloads that invoke the newer, secure counterparts of these functions. For more information, see [Secure Template Overloads](../../c-runtime-library/secure-template-overloads.md).  \n  \n### Generic-Text Routine Mappings  \n  \n|TCHAR.H routine|_UNICODE & _MBCS not defined|_MBCS defined|_UNICODE defined|  \n|---------------------|------------------------------------|--------------------|-----------------------|  \n|`_tstrtime`|`_strtime`|`_strtime`|`_wstrtime`|  \n  \n## Requirements  \n  \n|Routine|Required header|  \n|-------------|---------------------|  \n|`_strtime`|\\<time.h>|  \n|`_wstrtime`|\\<time.h> or \\<wchar.h>|  \n  \n For additional compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md) in the Introduction.  \n  \n## Example  \n  \n```  \n// crt_strtime.c  \n// compile with: /W3  \n  \n#include <time.h>  \n#include <stdio.h>  \n  \nint main( void )  \n{  \n   char tbuffer [9];  \n   _strtime( tbuffer ); // C4996  \n   // Note: _strtime is deprecated; consider using _strtime_s instead  \n   printf( \"The current time is %s \\n\", tbuffer );  \n}  \n```  \n  \n```Output  \nThe current time is 14:21:44  \n```  \n  \n## .NET Framework Equivalent  \n  \n-   [System::DateTime::ToLongDateString](https://msdn.microsoft.com/en-us/library/system.datetime.tolongdatestring.aspx)  \n  \n-   [System::DateTime::ToLongTimeString](https://msdn.microsoft.com/en-us/library/system.datetime.tolongtimestring.aspx)  \n  \n-   [System::DateTime::ToShortDateString](https://msdn.microsoft.com/en-us/library/system.datetime.toshortdatestring.aspx)  \n  \n-   [System::DateTime::ToShortTimeString](https://msdn.microsoft.com/en-us/library/system.datetime.toshorttimestring.aspx)  \n  \n-   [System::DateTime::ToString](https://msdn.microsoft.com/en-us/library/system.datetime.tostring.aspx)  \n  \n## See Also  \n [Time Management](../../c-runtime-library/time-management.md)   \n [asctime, _wasctime](../../c-runtime-library/reference/asctime-wasctime.md)   \n [ctime, _ctime32, _ctime64, _wctime, _wctime32, _wctime64](../../c-runtime-library/reference/ctime-ctime32-ctime64-wctime-wctime32-wctime64.md)   \n [gmtime, _gmtime32, _gmtime64](../../c-runtime-library/reference/gmtime-gmtime32-gmtime64.md)   \n [localtime, _localtime32, _localtime64](../../c-runtime-library/reference/localtime-localtime32-localtime64.md)   \n [mktime, _mktime32, _mktime64](../../c-runtime-library/reference/mktime-mktime32-mktime64.md)   \n [time, _time32, _time64](../../c-runtime-library/reference/time-time32-time64.md)   \n [_tzset](../../c-runtime-library/reference/tzset.md)"}