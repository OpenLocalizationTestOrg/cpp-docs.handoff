{"nodes":[{"pos":[12,41],"content":"Base Classes | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Base Classes | Microsoft Docs","pos":[0,29]}]},{"content":"Base Classes","pos":[735,747]},{"content":"The inheritance process creates a new derived class that is made up of the members of the base class(es) plus any new members added by the derived class.","pos":[748,901]},{"content":"In a multiple-inheritance, it is possible to construct an inheritance graph where the same base class is part of more than one of the derived classes.","pos":[902,1052]},{"content":"The following figure shows such a graph.","pos":[1053,1093]},{"content":"Multiple instances of a base class","pos":[1102,1136]},{"content":"Multiple Instances of a Single Base Class","pos":[1176,1217]},{"content":"In the figure, pictorial representations of the components of <ph id=\"ph1\">`CollectibleString`</ph> and <ph id=\"ph2\">`CollectibleSortable`</ph> are shown.","pos":[1224,1342],"source":"In the figure, pictorial representations of the components of `CollectibleString` and `CollectibleSortable` are shown."},{"content":"However, the base class, <ph id=\"ph1\">`Collectible`</ph>, is in <ph id=\"ph2\">`CollectibleSortableString`</ph> through the <ph id=\"ph3\">`CollectibleString`</ph> path and the <ph id=\"ph4\">`CollectibleSortable`</ph> path.","pos":[1343,1489],"source":" However, the base class, `Collectible`, is in `CollectibleSortableString` through the `CollectibleString` path and the `CollectibleSortable` path."},{"content":"To eliminate this redundancy, such classes can be declared as virtual base classes when they are inherited.","pos":[1490,1597]}],"content":"---\ntitle: \"Base Classes | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"language-reference\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"inheritance, multiple\"\n  - \"base classes, virtual\"\n  - \"derived classes, multiple bases\"\n  - \"multiple inheritance, base classes\"\n  - \"virtual base classes\"\n  - \"base classes\"\nms.assetid: 6e6d54d0-6f21-4a16-9103-22935d98f596\ncaps.latest.revision: 7\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Base Classes\nThe inheritance process creates a new derived class that is made up of the members of the base class(es) plus any new members added by the derived class. In a multiple-inheritance, it is possible to construct an inheritance graph where the same base class is part of more than one of the derived classes. The following figure shows such a graph.  \n  \n ![Multiple instances of a base class](../cpp/media/vc38xn1.gif \"vc38XN1\")  \nMultiple Instances of a Single Base Class  \n  \n In the figure, pictorial representations of the components of `CollectibleString` and `CollectibleSortable` are shown. However, the base class, `Collectible`, is in `CollectibleSortableString` through the `CollectibleString` path and the `CollectibleSortable` path. To eliminate this redundancy, such classes can be declared as virtual base classes when they are inherited.  \n  \n"}