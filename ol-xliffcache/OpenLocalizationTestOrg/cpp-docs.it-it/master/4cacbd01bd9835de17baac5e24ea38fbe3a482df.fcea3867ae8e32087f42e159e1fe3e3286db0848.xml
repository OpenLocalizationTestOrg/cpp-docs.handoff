{"nodes":[{"pos":[12,63],"content":"nearbyint, nearbyintf, nearbyintl1 | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"nearbyint, nearbyintf, nearbyintl1 | Microsoft Docs","pos":[0,51]}]},{"pos":[1130,1163],"content":"nearbyint, nearbyintf, nearbyintl","linkify":"nearbyint, nearbyintf, nearbyintl","nodes":[{"content":"nearbyint, nearbyintf, nearbyintl","pos":[0,33]}]},{"content":"Rounds the specified floating-point value to an integer, and returns that value in a floating-point format.","pos":[1164,1271]},{"pos":[1280,1286],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[1562,1572],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`x`</ph>","pos":[1576,1584],"source":"[in] `x`"},{"content":"The value to round.","pos":[1588,1607]},{"pos":[1616,1628],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"If successful, returns <ph id=\"ph1\">`x`</ph>, rounded to the nearest integer, using the current rounding format as defined by fegetround.","pos":[1632,1751],"source":"If successful, returns `x`, rounded to the nearest integer, using the current rounding format as defined by fegetround."},{"content":"Otherwise, the function may return one of the following values:","pos":[1752,1815]},{"content":"Issue","pos":[1822,1827]},{"content":"Return","pos":[1828,1834]},{"pos":[1868,1883],"content":"<ph id=\"ph1\">`x`</ph> = ±INFINITY","source":"`x` = ±INFINITY"},{"content":"±INFINITY, unmodified","pos":[1884,1905]},{"pos":[1910,1918],"content":"<ph id=\"ph1\">`x`</ph> = ±0","source":"`x` = ±0"},{"content":"±0, unmodified","pos":[1919,1933]},{"pos":[1938,1947],"content":"<ph id=\"ph1\">`x`</ph> = NaN","source":"`x` = NaN"},{"content":"NaN","pos":[1948,1951]},{"pos":[1959,2119],"content":"Errors are not reported through <bpt id=\"p1\">[</bpt>_matherr<ept id=\"p1\">](../../c-runtime-library/reference/matherr.md)</ept>; specifically, this function does not report any FE_INEXACT exceptions.","source":"Errors are not reported through [_matherr](../../c-runtime-library/reference/matherr.md); specifically, this function does not report any FE_INEXACT exceptions."},{"pos":[2128,2135],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[2139,2269],"content":"The primary difference between this function and <ph id=\"ph1\">`rint`</ph> is that this function does not raise the inexact floating point exception.","source":"The primary difference between this function and `rint` is that this function does not raise the inexact floating point exception."},{"content":"Because the maximum floating-point values are exact integers, this function will never overflow by itself; rather, the output may overflow the return value, depending on which version of the function you use.","pos":[2276,2484]},{"pos":[2493,2505],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"content":"Function","pos":[2512,2520]},{"content":"C header","pos":[2521,2529]},{"content":"C++ header","pos":[2530,2540]},{"pos":[2598,2653],"content":"<ph id=\"ph1\">`nearbyint`</ph>,                <ph id=\"ph2\">`nearbyintf`</ph>,  <ph id=\"ph3\">`nearbyintl`</ph>","source":"`nearbyint`,                `nearbyintf`,  `nearbyintl`"},{"content":"<ph id=\"ph1\">\\&lt;</ph>math.h&gt;","pos":[2654,2663],"source":"\\<math.h>"},{"content":"<ph id=\"ph1\">\\&lt;</ph>cmath&gt;","pos":[2664,2672],"source":"\\<cmath>"},{"pos":[2680,2784],"content":"For additional compatibility information, see <bpt id=\"p1\">[</bpt>Compatibility<ept id=\"p1\">](../../c-runtime-library/compatibility.md)</ept>.","source":"For additional compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md)."},{"pos":[2793,2801],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"pos":[2805,2912],"content":"<bpt id=\"p1\">[</bpt>Alphabetical Function Reference<ept id=\"p1\">](../../c-runtime-library/reference/crt-alphabetical-function-reference.md)</ept>","source":"[Alphabetical Function Reference](../../c-runtime-library/reference/crt-alphabetical-function-reference.md)"}],"content":"---\ntitle: \"nearbyint, nearbyintf, nearbyintl1 | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"cpp\"\n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\napiname: \n  - \"nearbyint\"\n  - \"nearbyintf\"\n  - \"nerabyintl\"\napilocation: \n  - \"msvcrt.dll\"\n  - \"msvcr80.dll\"\n  - \"msvcr90.dll\"\n  - \"msvcr100.dll\"\n  - \"msvcr100_clr0400.dll\"\n  - \"msvcr110.dll\"\n  - \"msvcr110_clr0400.dll\"\n  - \"msvcr120.dll\"\n  - \"msvcr120_clr0400.dll\"\n  - \"ucrtbase.dll\"\n  - \"api-ms-win-crt-math-l1-1-0.dll\"\napitype: \"DLLExport\"\nf1_keywords: \n  - \"nearbyint\"\n  - \"nearbyintf\"\n  - \"nearbyintl\"\n  - \"math/nearbyint\"\n  - \"math/narbyintf\"\n  - \"math/narbyintl\"\ndev_langs: \n  - \"C\"\n  - \"C++\"\nhelpviewer_keywords: \n  - \"nearbyint function\"\n  - \"nearbyintf function\"\n  - \"nearbyintl function\"\nms.assetid: dd39cb68-96b0-434b-820f-6ff2ea65584f\ncaps.latest.revision: 12\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# nearbyint, nearbyintf, nearbyintl\nRounds the specified floating-point value to an integer, and returns that value in a floating-point format.  \n  \n## Syntax  \n  \n```  \ndouble nearbyint(  \n   double x  \n);  \n  \nfloat nearbyint(  \n   float x  \n); //C++ only  \n  \nlong double nearbyint(  \n   long double x  \n); //C++ only  \n  \nfloat nearbyintf(  \n   float x  \n);  \n  \nlong double nearbyintl(  \n   long double x  \n);  \n  \n```  \n  \n#### Parameters  \n [in] `x`  \n The value to round.  \n  \n## Return Value  \n If successful, returns `x`, rounded to the nearest integer, using the current rounding format as defined by fegetround. Otherwise, the function may return one of the following values:  \n  \n|Issue|Return|  \n|-----------|------------|  \n|`x` = ±INFINITY|±INFINITY, unmodified|  \n|`x` = ±0|±0, unmodified|  \n|`x` = NaN|NaN|  \n  \n Errors are not reported through [_matherr](../../c-runtime-library/reference/matherr.md); specifically, this function does not report any FE_INEXACT exceptions.  \n  \n## Remarks  \n The primary difference between this function and `rint` is that this function does not raise the inexact floating point exception.  \n  \n Because the maximum floating-point values are exact integers, this function will never overflow by itself; rather, the output may overflow the return value, depending on which version of the function you use.  \n  \n## Requirements  \n  \n|Function|C header|C++ header|  \n|--------------|--------------|------------------|  \n|`nearbyint`,                `nearbyintf`,  `nearbyintl`|\\<math.h>|\\<cmath>|  \n  \n For additional compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md).  \n  \n## See Also  \n [Alphabetical Function Reference](../../c-runtime-library/reference/crt-alphabetical-function-reference.md)"}