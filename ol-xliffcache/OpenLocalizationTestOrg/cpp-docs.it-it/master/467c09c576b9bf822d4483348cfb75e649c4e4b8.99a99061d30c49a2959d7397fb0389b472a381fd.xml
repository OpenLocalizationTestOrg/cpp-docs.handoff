{"nodes":[{"pos":[12,47],"content":"Linking Explicitly | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Linking Explicitly | Microsoft Docs","pos":[0,35]}]},{"content":"Linking Explicitly","pos":[578,596]},{"content":"With explicit linking, applications must make a function call to explicitly load the DLL at run time.","pos":[597,698]},{"content":"To explicitly link to a DLL, an application must:","pos":[699,748]},{"pos":[758,846],"content":"Call <bpt id=\"p1\">**</bpt>LoadLibrary<ept id=\"p1\">**</ept> (or a similar function) to load the DLL and obtain a module handle.","source":"Call **LoadLibrary** (or a similar function) to load the DLL and obtain a module handle."},{"content":"Call <bpt id=\"p1\">**</bpt>GetProcAddress<ept id=\"p1\">**</ept> to obtain a function pointer to each exported function that the application wants to call.","pos":[856,970],"source":"Call **GetProcAddress** to obtain a function pointer to each exported function that the application wants to call."},{"content":"Because applications are calling the DLL's functions through a pointer, the compiler does not generate external references, so there is no need to link with an import library.","pos":[971,1146]},{"pos":[1156,1200],"content":"Call <bpt id=\"p1\">**</bpt>FreeLibrary<ept id=\"p1\">**</ept> when done with the DLL.","source":"Call **FreeLibrary** when done with the DLL."},{"content":"For example:","pos":[1207,1219]},{"content":"What do you want to do?","pos":[1867,1890]},{"content":"Link implicitly","pos":[1901,1916]},{"content":"Determine which linking method to use","pos":[1960,1997]},{"content":"What do you want to know more about?","pos":[2060,2096]},{"content":"LoadLibrary and AfxLoadLibrary","pos":[2107,2137]},{"content":"GetProcAddress","pos":[2193,2207]},{"content":"FreeLibrary and AfxFreeLibrary","pos":[2247,2277]},{"content":"The search path used by Windows to locate a DLL","pos":[2333,2380]},{"content":"See Also","pos":[2447,2455]},{"content":"Linking an Executable to a DLL","pos":[2460,2490]}],"content":"---\ntitle: \"Linking Explicitly | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"explicit linking [C++]\"\nms.assetid: 1e13d960-a195-4e6d-9864-7d8f3a701f4b\ncaps.latest.revision: 7\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Linking Explicitly\nWith explicit linking, applications must make a function call to explicitly load the DLL at run time. To explicitly link to a DLL, an application must:  \n  \n-   Call **LoadLibrary** (or a similar function) to load the DLL and obtain a module handle.  \n  \n-   Call **GetProcAddress** to obtain a function pointer to each exported function that the application wants to call. Because applications are calling the DLL's functions through a pointer, the compiler does not generate external references, so there is no need to link with an import library.  \n  \n-   Call **FreeLibrary** when done with the DLL.  \n  \n For example:  \n  \n```  \ntypedef UINT (CALLBACK* LPFNDLLFUNC1)(DWORD,UINT);  \n...  \n  \nHINSTANCE hDLL;               // Handle to DLL  \nLPFNDLLFUNC1 lpfnDllFunc1;    // Function pointer  \nDWORD dwParam1;  \nUINT  uParam2, uReturnVal;  \n  \nhDLL = LoadLibrary(\"MyDLL\");  \nif (hDLL != NULL)  \n{  \n   lpfnDllFunc1 = (LPFNDLLFUNC1)GetProcAddress(hDLL,  \n                                           \"DLLFunc1\");  \n   if (!lpfnDllFunc1)  \n   {  \n      // handle the error  \n      FreeLibrary(hDLL);         \n      return SOME_ERROR_CODE;  \n   }  \n   else  \n   {  \n      // call the function  \n      uReturnVal = lpfnDllFunc1(dwParam1, uParam2);  \n   }  \n}  \n```  \n  \n## What do you want to do?  \n  \n-   [Link implicitly](../build/linking-implicitly.md)  \n  \n-   [Determine which linking method to use](../build/determining-which-linking-method-to-use.md)  \n  \n## What do you want to know more about?  \n  \n-   [LoadLibrary and AfxLoadLibrary](../build/loadlibrary-and-afxloadlibrary.md)  \n  \n-   [GetProcAddress](../build/getprocaddress.md)  \n  \n-   [FreeLibrary and AfxFreeLibrary](../build/freelibrary-and-afxfreelibrary.md)  \n  \n-   [The search path used by Windows to locate a DLL](../build/search-path-used-by-windows-to-locate-a-dll.md)  \n  \n## See Also  \n [Linking an Executable to a DLL](../build/linking-an-executable-to-a-dll.md)"}