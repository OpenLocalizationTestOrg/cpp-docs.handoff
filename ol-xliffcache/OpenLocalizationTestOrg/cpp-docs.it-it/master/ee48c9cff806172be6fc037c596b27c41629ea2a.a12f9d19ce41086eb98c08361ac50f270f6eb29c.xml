{"nodes":[{"pos":[12,42],"content":"fgets, fgetws | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"fgets, fgetws | Microsoft Docs","pos":[0,30]}]},{"pos":[1076,1089],"content":"fgets, fgetws","linkify":"fgets, fgetws","nodes":[{"content":"fgets, fgetws","pos":[0,13]}]},{"content":"Get a string from a stream.","pos":[1090,1117]},{"pos":[1126,1132],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[1301,1311],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Storage location for data.","pos":[1324,1350]},{"content":"Maximum number of characters to read.","pos":[1364,1401]},{"content":"Pointer to <ph id=\"ph1\">`FILE`</ph> structure.","pos":[1420,1448],"source":" Pointer to `FILE` structure."},{"pos":[1457,1469],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Each of these functions returns <ph id=\"ph1\">`str`</ph>.","pos":[1473,1511],"source":"Each of these functions returns `str`."},{"content":"<ph id=\"ph1\">`NULL`</ph> is returned to indicate an error or an end-of-file condition.","pos":[1512,1580],"source":"`NULL` is returned to indicate an error or an end-of-file condition."},{"content":"Use <ph id=\"ph1\">`feof`</ph> or <ph id=\"ph2\">`ferror`</ph> to determine whether an error occurred.","pos":[1581,1643],"source":" Use `feof` or `ferror` to determine whether an error occurred."},{"content":"If <ph id=\"ph1\">`str`</ph> or <ph id=\"ph2\">`stream`</ph> is a null pointer, or <ph id=\"ph3\">`n`</ph> is less than or equal to zero, this function invokes the invalid parameter handler, as described in <bpt id=\"p1\">[</bpt>Parameter Validation<ept id=\"p1\">](../../c-runtime-library/parameter-validation.md)</ept>.","pos":[1644,1863],"source":" If `str` or `stream` is a null pointer, or `n` is less than or equal to zero, this function invokes the invalid parameter handler, as described in [Parameter Validation](../../c-runtime-library/parameter-validation.md)."},{"content":"If execution is allowed to continue, <ph id=\"ph1\">`errno`</ph> is set to <ph id=\"ph2\">`EINVAL`</ph> and the function returns <ph id=\"ph3\">`NULL`</ph>.","pos":[1864,1960],"source":" If execution is allowed to continue, `errno` is set to `EINVAL` and the function returns `NULL`."},{"pos":[1967,2141],"content":"See <bpt id=\"p1\">[</bpt>_doserrno, errno, _sys_errlist, and _sys_nerr<ept id=\"p1\">](../../c-runtime-library/errno-doserrno-sys-errlist-and-sys-nerr.md)</ept> for more information on these, and other, error codes.","source":"See [_doserrno, errno, _sys_errlist, and _sys_nerr](../../c-runtime-library/errno-doserrno-sys-errlist-and-sys-nerr.md) for more information on these, and other, error codes."},{"pos":[2150,2157],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The <ph id=\"ph1\">`fgets`</ph> function reads a string from the input <ph id=\"ph2\">`stream`</ph> argument and stores it in <ph id=\"ph3\">`str`</ph>.","pos":[2161,2253],"source":"The `fgets` function reads a string from the input `stream` argument and stores it in `str`."},{"content":"<ph id=\"ph1\">`fgets`</ph> reads characters from the current stream position to and including the first newline character, to the end of the stream, or until the number of characters read is equal to <ph id=\"ph2\">`n`</ph> – 1, whichever comes first.","pos":[2254,2466],"source":"`fgets` reads characters from the current stream position to and including the first newline character, to the end of the stream, or until the number of characters read is equal to `n` – 1, whichever comes first."},{"content":"The result stored in <ph id=\"ph1\">`str`</ph> is appended with a null character.","pos":[2467,2528],"source":" The result stored in `str` is appended with a null character."},{"content":"The newline character, if read, is included in the string.","pos":[2529,2587]},{"pos":[2594,2642],"content":"<ph id=\"ph1\">`fgetws`</ph> is a wide-character version of <ph id=\"ph2\">`fgets`</ph>.","source":"`fgetws` is a wide-character version of `fgets`."},{"content":"<ph id=\"ph1\">`fgetws`</ph> reads the wide-character argument <ph id=\"ph2\">`str`</ph> as a multibyte-character string or a wide-character string according to whether <ph id=\"ph3\">`stream`</ph> is opened in text mode or binary mode, respectively.","pos":[2649,2839],"source":"`fgetws` reads the wide-character argument `str` as a multibyte-character string or a wide-character string according to whether `stream` is opened in text mode or binary mode, respectively."},{"content":"For more information about using text and binary modes in Unicode and multibyte stream-I/O, see <bpt id=\"p1\">[</bpt>Text and Binary Mode File I/O<ept id=\"p1\">](../../c-runtime-library/text-and-binary-mode-file-i-o.md)</ept> and <bpt id=\"p2\">[</bpt>Unicode Stream I/O in Text and Binary Modes<ept id=\"p2\">](../../c-runtime-library/unicode-stream-i-o-in-text-and-binary-modes.md)</ept>.","pos":[2840,3148],"source":" For more information about using text and binary modes in Unicode and multibyte stream-I/O, see [Text and Binary Mode File I/O](../../c-runtime-library/text-and-binary-mode-file-i-o.md) and [Unicode Stream I/O in Text and Binary Modes](../../c-runtime-library/unicode-stream-i-o-in-text-and-binary-modes.md)."},{"pos":[3158,3187],"content":"Generic-Text Routine Mappings","linkify":"Generic-Text Routine Mappings","nodes":[{"content":"Generic-Text Routine Mappings","pos":[0,29]}]},{"content":"TCHAR.H routine","pos":[3194,3209]},{"content":"_UNICODE &amp; _MBCS not defined","pos":[3210,3238],"source":"_UNICODE & _MBCS not defined"},{"content":"_MBCS defined","pos":[3239,3252]},{"content":"_UNICODE defined","pos":[3253,3269]},{"pos":[3426,3438],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"content":"Function","pos":[3445,3453]},{"content":"Required header","pos":[3454,3469]},{"content":"<ph id=\"ph1\">\\&lt;</ph>stdio.h&gt;","pos":[3523,3533],"source":"\\<stdio.h>"},{"content":"<ph id=\"ph1\">\\&lt;</ph>stdio.h&gt; or <ph id=\"ph2\">\\&lt;</ph>wchar.h&gt;","pos":[3547,3571],"source":"\\<stdio.h> or \\<wchar.h>"},{"pos":[3579,3703],"content":"For additional compatibility information, see <bpt id=\"p1\">[</bpt>Compatibility<ept id=\"p1\">](../../c-runtime-library/compatibility.md)</ept> in the Introduction.","source":"For additional compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md) in the Introduction."},{"pos":[3712,3719],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[4169,4189],"content":"Input: crt_fgets.txt","linkify":"Input: crt_fgets.txt","nodes":[{"content":"Input: crt_fgets.txt","pos":[0,20]}]},{"pos":[4238,4244],"content":"Output","linkify":"Output","nodes":[{"content":"Output","pos":[0,6]}]},{"pos":[4280,4305],"content":".NET Framework Equivalent","linkify":".NET Framework Equivalent","nodes":[{"content":".NET Framework Equivalent","pos":[0,25]}]},{"pos":[4315,4430],"content":"<bpt id=\"p1\">[</bpt>System::IO::StreamReader::ReadLine<ept id=\"p1\">](https://msdn.microsoft.com/en-us/library/system.io.streamreader.readline.aspx)</ept>","source":"[System::IO::StreamReader::ReadLine](https://msdn.microsoft.com/en-us/library/system.io.streamreader.readline.aspx)"},{"pos":[4440,4553],"content":"<bpt id=\"p1\">[</bpt>System::IO::TextReader::ReadBlock<ept id=\"p1\">](https://msdn.microsoft.com/en-us/library/system.io.textreader.readblock.aspx)</ept>","source":"[System::IO::TextReader::ReadBlock](https://msdn.microsoft.com/en-us/library/system.io.textreader.readblock.aspx)"},{"pos":[4562,4570],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Stream I/O<ept id=\"p1\">](../../c-runtime-library/stream-i-o.md)</ept><ph id=\"ph1\"> </ph>","pos":[4574,4626],"source":"[Stream I/O](../../c-runtime-library/stream-i-o.md) "},{"content":"<bpt id=\"p1\"> [</bpt>fputs, fputws<ept id=\"p1\">](../../c-runtime-library/reference/fputs-fputws.md)</ept><ph id=\"ph1\"> </ph>","pos":[4629,4697],"source":" [fputs, fputws](../../c-runtime-library/reference/fputs-fputws.md) "},{"content":"<bpt id=\"p1\"> [</bpt>gets, _getws<ept id=\"p1\">](../../c-runtime-library/gets-getws.md)</ept><ph id=\"ph1\"> </ph>","pos":[4700,4755],"source":" [gets, _getws](../../c-runtime-library/gets-getws.md) "},{"content":"<bpt id=\"p1\"> [</bpt>puts, _putws<ept id=\"p1\">](../../c-runtime-library/reference/puts-putws.md)</ept>","pos":[4758,4822],"source":" [puts, _putws](../../c-runtime-library/reference/puts-putws.md)"}],"content":"---\ntitle: \"fgets, fgetws | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\napiname: \n  - \"fgets\"\n  - \"fgetws\"\napilocation: \n  - \"msvcrt.dll\"\n  - \"msvcr80.dll\"\n  - \"msvcr90.dll\"\n  - \"msvcr100.dll\"\n  - \"msvcr100_clr0400.dll\"\n  - \"msvcr110.dll\"\n  - \"msvcr110_clr0400.dll\"\n  - \"msvcr120.dll\"\n  - \"msvcr120_clr0400.dll\"\n  - \"ucrtbase.dll\"\n  - \"api-ms-win-crt-stdio-l1-1-0.dll\"\napitype: \"DLLExport\"\nf1_keywords: \n  - \"_fgetts\"\n  - \"fgetws\"\n  - \"fgets\"\ndev_langs: \n  - \"C++\"\n  - \"C\"\nhelpviewer_keywords: \n  - \"_fgetts function\"\n  - \"streams, getting strings from\"\n  - \"streams, reading from\"\n  - \"fgets function\"\n  - \"fgetws function\"\n  - \"fgetts function\"\nms.assetid: ad549bb5-df98-4ccd-a53f-95114e60c4fc\ncaps.latest.revision: 15\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# fgets, fgetws\nGet a string from a stream.  \n  \n## Syntax  \n  \n```  \nchar *fgets(   \n   char *str,  \n   int n,  \n   FILE *stream   \n);  \nwchar_t *fgetws(   \n   wchar_t *str,  \n   int n,  \n   FILE *stream   \n);  \n```  \n  \n#### Parameters  \n `str`  \n Storage location for data.  \n  \n `n`  \n Maximum number of characters to read.  \n  \n `stream`  \n Pointer to `FILE` structure.  \n  \n## Return Value  \n Each of these functions returns `str`. `NULL` is returned to indicate an error or an end-of-file condition. Use `feof` or `ferror` to determine whether an error occurred. If `str` or `stream` is a null pointer, or `n` is less than or equal to zero, this function invokes the invalid parameter handler, as described in [Parameter Validation](../../c-runtime-library/parameter-validation.md). If execution is allowed to continue, `errno` is set to `EINVAL` and the function returns `NULL`.  \n  \n See [_doserrno, errno, _sys_errlist, and _sys_nerr](../../c-runtime-library/errno-doserrno-sys-errlist-and-sys-nerr.md) for more information on these, and other, error codes.  \n  \n## Remarks  \n The `fgets` function reads a string from the input `stream` argument and stores it in `str`. `fgets` reads characters from the current stream position to and including the first newline character, to the end of the stream, or until the number of characters read is equal to `n` – 1, whichever comes first. The result stored in `str` is appended with a null character. The newline character, if read, is included in the string.  \n  \n `fgetws` is a wide-character version of `fgets`.  \n  \n `fgetws` reads the wide-character argument `str` as a multibyte-character string or a wide-character string according to whether `stream` is opened in text mode or binary mode, respectively. For more information about using text and binary modes in Unicode and multibyte stream-I/O, see [Text and Binary Mode File I/O](../../c-runtime-library/text-and-binary-mode-file-i-o.md) and [Unicode Stream I/O in Text and Binary Modes](../../c-runtime-library/unicode-stream-i-o-in-text-and-binary-modes.md).  \n  \n### Generic-Text Routine Mappings  \n  \n|TCHAR.H routine|_UNICODE & _MBCS not defined|_MBCS defined|_UNICODE defined|  \n|---------------------|------------------------------------|--------------------|-----------------------|  \n|`_fgetts`|`fgets`|`fgets`|`fgetws`|  \n  \n## Requirements  \n  \n|Function|Required header|  \n|--------------|---------------------|  \n|`fgets`|\\<stdio.h>|  \n|`fgetws`|\\<stdio.h> or \\<wchar.h>|  \n  \n For additional compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md) in the Introduction.  \n  \n## Example  \n  \n```  \n// crt_fgets.c  \n// This program uses fgets to display  \n// a line from a file on the screen.  \n//  \n  \n#include <stdio.h>  \n  \nint main( void )  \n{  \n   FILE *stream;  \n   char line[100];  \n  \n   if( fopen_s( &stream, \"crt_fgets.txt\", \"r\" ) == 0 )  \n   {  \n      if( fgets( line, 100, stream ) == NULL)  \n         printf( \"fgets error\\n\" );  \n      else  \n         printf( \"%s\", line);  \n      fclose( stream );  \n   }  \n}  \n```  \n  \n## Input: crt_fgets.txt  \n  \n```  \nLine one.  \nLine two.  \n```  \n  \n### Output  \n  \n```  \nLine one.  \n```  \n  \n## .NET Framework Equivalent  \n  \n-   [System::IO::StreamReader::ReadLine](https://msdn.microsoft.com/en-us/library/system.io.streamreader.readline.aspx)  \n  \n-   [System::IO::TextReader::ReadBlock](https://msdn.microsoft.com/en-us/library/system.io.textreader.readblock.aspx)  \n  \n## See Also  \n [Stream I/O](../../c-runtime-library/stream-i-o.md)   \n [fputs, fputws](../../c-runtime-library/reference/fputs-fputws.md)   \n [gets, _getws](../../c-runtime-library/gets-getws.md)   \n [puts, _putws](../../c-runtime-library/reference/puts-putws.md)"}