{"nodes":[{"pos":[12,41],"content":"extent Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"extent Class | Microsoft Docs","pos":[0,29]}]},{"pos":[718,730],"content":"extent Class","linkify":"extent Class","nodes":[{"content":"extent Class","pos":[0,12]}]},{"content":"Gets an array dimension.","pos":[731,755]},{"pos":[764,770],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[851,861],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"The type to query.","pos":[873,891]},{"content":"The array bound to query.","pos":[905,930]},{"pos":[939,946],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"If <ph id=\"ph1\">`Ty`</ph> is an array type that has at least <ph id=\"ph2\">`I`</ph> dimensions, the type query holds the number of elements in the dimension specified by <ph id=\"ph3\">`I`</ph>.","pos":[950,1087],"source":"If `Ty` is an array type that has at least `I` dimensions, the type query holds the number of elements in the dimension specified by `I`."},{"content":"If <ph id=\"ph1\">`Ty`</ph> is not an array type or its rank is less than <ph id=\"ph2\">`I`</ph>, or if <ph id=\"ph3\">`I`</ph> is zero and <ph id=\"ph4\">`Ty`</ph> is of type \"array of unknown bound of <ph id=\"ph5\">`U`</ph>\", the type query holds the value 0.","pos":[1088,1251],"source":" If `Ty` is not an array type or its rank is less than `I`, or if `I` is zero and `Ty` is of type \"array of unknown bound of `U`\", the type query holds the value 0."},{"pos":[1260,1267],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[1712,1724],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[1728,1753],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> &lt;type_traits&gt;","source":"**Header:** <type_traits>"},{"pos":[1760,1778],"content":"<bpt id=\"p1\">**</bpt>Namespace:<ept id=\"p1\">**</ept> std","source":"**Namespace:** std"},{"pos":[1787,1795],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>&lt;type_traits&gt;<ept id=\"p1\">](../standard-library/type-traits.md)</ept><ph id=\"ph1\"> </ph>","pos":[1799,1851],"source":"[<type_traits>](../standard-library/type-traits.md) "},{"content":"<bpt id=\"p1\"> [</bpt>remove_all_extents Class<ept id=\"p1\">](../standard-library/remove-all-extents-class.md)</ept><ph id=\"ph1\"> </ph>","pos":[1854,1931],"source":" [remove_all_extents Class](../standard-library/remove-all-extents-class.md) "},{"content":"<bpt id=\"p1\"> [</bpt>remove_extent Class<ept id=\"p1\">](../standard-library/remove-extent-class.md)</ept>","pos":[1934,2000],"source":" [remove_extent Class](../standard-library/remove-extent-class.md)"}],"content":"---\ntitle: \"extent Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"std.tr1.extent\"\n  - \"extent\"\n  - \"std::tr1::extent\"\n  - \"std.extent\"\n  - \"std::extent\"\n  - \"type_traits/std::extent\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"extent class [TR1]\"\n  - \"extent\"\nms.assetid: 6d16263d-90b2-4330-9ec7-b59ed898792d\ncaps.latest.revision: 20\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# extent Class\nGets an array dimension.  \n  \n## Syntax  \n  \n```  \ntemplate <class Ty, unsigned I = 0>  \nstruct extent;  \n```  \n  \n#### Parameters  \n `Ty`  \n The type to query.  \n  \n `I`  \n The array bound to query.  \n  \n## Remarks  \n If `Ty` is an array type that has at least `I` dimensions, the type query holds the number of elements in the dimension specified by `I`. If `Ty` is not an array type or its rank is less than `I`, or if `I` is zero and `Ty` is of type \"array of unknown bound of `U`\", the type query holds the value 0.  \n  \n## Example  \n  \n```cpp  \n// std_tr1__type_traits__extent.cpp   \n// compile with: /EHsc   \n#include <type_traits>   \n#include <iostream>   \n  \nint main()   \n    {   \n    std::cout << \"extent 0 == \"   \n        << std::extent<int[5][10]>::value << std::endl;   \n    std::cout << \"extent 1 == \"   \n        << std::extent<int[5][10], 1>::value << std::endl;   \n  \n    return (0);   \n    }  \n  \n```  \n  \n```Output  \nextent 0 == 5  \nextent 1 == 10  \n```  \n  \n## Requirements  \n **Header:** <type_traits>  \n  \n **Namespace:** std  \n  \n## See Also  \n [<type_traits>](../standard-library/type-traits.md)   \n [remove_all_extents Class](../standard-library/remove-all-extents-class.md)   \n [remove_extent Class](../standard-library/remove-extent-class.md)\n"}