{"nodes":[{"pos":[12,83],"content":"How to: Parse Strings Using the Split Method (C++-CLI) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"How to: Parse Strings Using the Split Method (C++-CLI) | Microsoft Docs","pos":[0,71]}]},{"content":"How to: Parse Strings Using the Split Method (C++/CLI)","pos":[758,812]},{"content":"The following code example demonstrates using the &lt;xref:System.String.Split%2A?displayProperty=fullName&gt; method to extract each word from a string.","pos":[813,960],"source":"The following code example demonstrates using the <xref:System.String.Split%2A?displayProperty=fullName> method to extract each word from a string."},{"content":"A string containing multiple types of word delineators is constructed and then parsed by calling &lt;xref:System.String.Split%2A&gt; with a list of the delineators.","pos":[961,1119],"source":" A string containing multiple types of word delineators is constructed and then parsed by calling <xref:System.String.Split%2A> with a list of the delineators."},{"content":"Then, each word in the sentence is displayed separately.","pos":[1120,1176]},{"content":"Example","pos":[1185,1192]},{"content":"See Also","pos":[1821,1829]},{"content":".NET Framework Regular Expressions","pos":[1834,1868]},{"content":".NET Programming with C++/CLI (Visual C++)","pos":[1947,1989]}],"content":"---\ntitle: \"How to: Parse Strings Using the Split Method (C++-CLI) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"parsing strings [C++]\"\n  - \"examples [C++], strings\"\n  - \"regular expressions [C++], parsing strings\"\n  - \"Split method, parsing strings\"\n  - \"strings [C++], parsing\"\nms.assetid: d52d2539-5ebb-4716-86b3-07314dd7e4bd\ncaps.latest.revision: 12\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# How to: Parse Strings Using the Split Method (C++/CLI)\nThe following code example demonstrates using the <xref:System.String.Split%2A?displayProperty=fullName> method to extract each word from a string. A string containing multiple types of word delineators is constructed and then parsed by calling <xref:System.String.Split%2A> with a list of the delineators. Then, each word in the sentence is displayed separately.  \n  \n## Example  \n  \n```  \n// regex_split.cpp  \n// compile with: /clr  \nusing namespace System;  \n  \nint main()  \n{  \n   String^ delimStr = \" ,.:\\t\";  \n   Console::WriteLine( \"delimiter : '{0}'\", delimStr );  \n   array<Char>^ delimiter = delimStr->ToCharArray( );  \n   array<String^>^ words;  \n   String^ line = \"one\\ttwo three:four,five six seven\";  \n  \n   Console::WriteLine( \"text : '{0}'\", line );  \n   words = line->Split( delimiter );  \n   Console::WriteLine( \"Number of Words : {0}\", words->Length );  \n   for (int word=0; word<words->Length; word++)  \n      Console::WriteLine( \"{0}\", words[word] );  \n  \n   return 0;  \n}  \n```  \n  \n## See Also  \n [.NET Framework Regular Expressions](http://msdn.microsoft.com/Library/521b3f6d-f869-42e1-93e5-158c54a6895d)   \n [.NET Programming with C++/CLI (Visual C++)](../dotnet/dotnet-programming-with-cpp-cli-visual-cpp.md)"}