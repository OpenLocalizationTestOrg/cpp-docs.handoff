{"nodes":[{"pos":[12,59],"content":"Module-Definition (.Def) Files | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Module-Definition (.Def) Files | Microsoft Docs","pos":[0,47]}]},{"content":"Module-Definition (.Def) Files","pos":[624,654]},{"content":"Module-definition (.def) files provide the linker with information about exports, attributes, and other information about the program to be linked.","pos":[655,802]},{"content":"A .def file is most useful when building a DLL.","pos":[803,850]},{"content":"Because there are <bpt id=\"p1\">[</bpt>linker options<ept id=\"p1\">](../../build/reference/linker-options.md)</ept> that can be used instead of module-definition statements, .def files are generally not necessary.","pos":[851,1024],"source":" Because there are [linker options](../../build/reference/linker-options.md) that can be used instead of module-definition statements, .def files are generally not necessary."},{"content":"You can also use <bpt id=\"p1\">[</bpt>__declspec(dllexport)<ept id=\"p1\">](../../build/exporting-from-a-dll-using-declspec-dllexport.md)</ept> as a way to specify exported functions.","pos":[1025,1167],"source":" You can also use [__declspec(dllexport)](../../build/exporting-from-a-dll-using-declspec-dllexport.md) as a way to specify exported functions."},{"pos":[1174,1349],"content":"You can invoke a .def file during the linker phase with the <bpt id=\"p1\">[</bpt>/DEF (Specify Module-Definition File)<ept id=\"p1\">](../../build/reference/def-specify-module-definition-file.md)</ept> linker option.","source":"You can invoke a .def file during the linker phase with the [/DEF (Specify Module-Definition File)](../../build/reference/def-specify-module-definition-file.md) linker option."},{"content":"If you are building an .exe file that has no exports, using a .def file will make your output file larger and slower loading.","pos":[1356,1481]},{"pos":[1488,1600],"content":"For an example, see <bpt id=\"p1\">[</bpt>Exporting from a DLL Using DEF Files<ept id=\"p1\">](../../build/exporting-from-a-dll-using-def-files.md)</ept>.","source":"For an example, see [Exporting from a DLL Using DEF Files](../../build/exporting-from-a-dll-using-def-files.md)."},{"content":"See the following sections for more information:","pos":[1607,1655]},{"content":"Rules for Module-Definition Statements","pos":[1666,1704]},{"content":"EXPORTS","pos":[1781,1788]},{"content":"HEAPSIZE","pos":[1834,1842]},{"content":"LIBRARY","pos":[1889,1896]},{"content":"NAME","pos":[1942,1946]},{"content":"SECTIONS","pos":[1995,2003]},{"content":"STACKSIZE","pos":[2056,2065]},{"content":"STUB","pos":[2113,2117]},{"content":"VERSION","pos":[2160,2167]},{"content":"Reserved words","pos":[2219,2233]},{"content":"See Also","pos":[2284,2292]},{"content":"C/C++ Building Reference","pos":[2297,2321]},{"content":"Linker Options","pos":[2379,2393]},{"content":"Frequently Asked Questions on Building","pos":[2441,2479]}],"content":"---\ntitle: \"Module-Definition (.Def) Files | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"def files\"\n  - \"module definition files\"\n  - \".def files\"\nms.assetid: 08c0bc28-c5d2-47aa-9624-7fc68bcaa4d8\ncaps.latest.revision: 9\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Module-Definition (.Def) Files\nModule-definition (.def) files provide the linker with information about exports, attributes, and other information about the program to be linked. A .def file is most useful when building a DLL. Because there are [linker options](../../build/reference/linker-options.md) that can be used instead of module-definition statements, .def files are generally not necessary. You can also use [__declspec(dllexport)](../../build/exporting-from-a-dll-using-declspec-dllexport.md) as a way to specify exported functions.  \n  \n You can invoke a .def file during the linker phase with the [/DEF (Specify Module-Definition File)](../../build/reference/def-specify-module-definition-file.md) linker option.  \n  \n If you are building an .exe file that has no exports, using a .def file will make your output file larger and slower loading.  \n  \n For an example, see [Exporting from a DLL Using DEF Files](../../build/exporting-from-a-dll-using-def-files.md).  \n  \n See the following sections for more information:  \n  \n-   [Rules for Module-Definition Statements](../../build/reference/rules-for-module-definition-statements.md)  \n  \n-   [EXPORTS](../../build/reference/exports.md)  \n  \n-   [HEAPSIZE](../../build/reference/heapsize.md)  \n  \n-   [LIBRARY](../../build/reference/library.md)  \n  \n-   [NAME](../../build/reference/name-c-cpp.md)  \n  \n-   [SECTIONS](../../build/reference/sections-c-cpp.md)  \n  \n-   [STACKSIZE](../../build/reference/stacksize.md)  \n  \n-   [STUB](../../build/reference/stub.md)  \n  \n-   [VERSION](../../build/reference/version-c-cpp.md)  \n  \n-   [Reserved words](../../build/reference/reserved-words.md)  \n  \n## See Also  \n [C/C++ Building Reference](../../build/reference/c-cpp-building-reference.md)   \n [Linker Options](../../build/reference/linker-options.md)   \n [Frequently Asked Questions on Building](http://msdn.microsoft.com/en-us/56a3bb8f-0181-4989-bab4-a07ba950ab08)"}