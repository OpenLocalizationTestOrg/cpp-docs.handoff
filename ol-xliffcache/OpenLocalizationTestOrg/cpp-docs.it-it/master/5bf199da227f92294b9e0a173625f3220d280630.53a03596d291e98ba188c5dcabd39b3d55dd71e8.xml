{"nodes":[{"pos":[12,46],"content":"_CrtSetReportMode | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"_CrtSetReportMode | Microsoft Docs","pos":[0,34]}]},{"content":"_CrtSetReportMode","pos":[988,1005]},{"pos":[1006,1691],"content":"Specifies the destination or destinations for a specific report type generated by <ph id=\"ph1\">`_CrtDbgReport`</ph> and any macros that call <bpt id=\"p1\">[</bpt>_CrtDbgReport, _CrtDbgReportW<ept id=\"p1\">](../../c-runtime-library/reference/crtdbgreport-crtdbgreportw.md)</ept>, such as <bpt id=\"p2\">[</bpt>_ASSERT, _ASSERTE, _ASSERT_EXPR Macros<ept id=\"p2\">](../../c-runtime-library/reference/assert-asserte-assert-expr-macros.md)</ept>, <bpt id=\"p3\">[</bpt>_ASSERT, _ASSERTE, _ASSERT_EXPR Macros<ept id=\"p3\">](../../c-runtime-library/reference/assert-asserte-assert-expr-macros.md)</ept>, <bpt id=\"p4\">[</bpt>_RPT, _RPTF, _RPTW, _RPTFW Macros<ept id=\"p4\">](../../c-runtime-library/reference/rpt-rptf-rptw-rptfw-macros.md)</ept>, and <bpt id=\"p5\">[</bpt>_RPT, _RPTF, _RPTW, _RPTFW Macros<ept id=\"p5\">](../../c-runtime-library/reference/rpt-rptf-rptw-rptfw-macros.md)</ept> (debug version only).","source":"Specifies the destination or destinations for a specific report type generated by `_CrtDbgReport` and any macros that call [_CrtDbgReport, _CrtDbgReportW](../../c-runtime-library/reference/crtdbgreport-crtdbgreportw.md), such as [_ASSERT, _ASSERTE, _ASSERT_EXPR Macros](../../c-runtime-library/reference/assert-asserte-assert-expr-macros.md), [_ASSERT, _ASSERTE, _ASSERT_EXPR Macros](../../c-runtime-library/reference/assert-asserte-assert-expr-macros.md), [_RPT, _RPTF, _RPTW, _RPTFW Macros](../../c-runtime-library/reference/rpt-rptf-rptw-rptfw-macros.md), and [_RPT, _RPTF, _RPTW, _RPTFW Macros](../../c-runtime-library/reference/rpt-rptf-rptw-rptfw-macros.md) (debug version only)."},{"content":"Syntax","pos":[1700,1706]},{"content":"Parameters","pos":[1805,1815]},{"content":"Report type: <ph id=\"ph1\">`_CRT_WARN`</ph>, <ph id=\"ph2\">`_CRT_ERROR`</ph>, and <ph id=\"ph3\">`_CRT_ASSERT`</ph>.","pos":[1835,1893],"source":" Report type: `_CRT_WARN`, `_CRT_ERROR`, and `_CRT_ASSERT`."},{"content":"New report mode or modes for <ph id=\"ph1\">`reportType`</ph>.","pos":[1916,1958],"source":" New report mode or modes for `reportType`."},{"content":"Return Value","pos":[1967,1979]},{"content":"On successful completion, <ph id=\"ph1\">`_CrtSetReportMode`</ph> returns the previous report mode or modes for the report type specified in <ph id=\"ph2\">`reportType`</ph>.","pos":[1983,2117],"source":"On successful completion, `_CrtSetReportMode` returns the previous report mode or modes for the report type specified in `reportType`."},{"content":"If an invalid value is passed in as <ph id=\"ph1\">`reportType`</ph> or an invalid mode is specified for <ph id=\"ph2\">`reportMode`</ph>, <ph id=\"ph3\">`_CrtSetReportMode`</ph> invokes the invalid parameter handler as described in <bpt id=\"p1\">[</bpt>Parameter Validation<ept id=\"p1\">](../../c-runtime-library/parameter-validation.md)</ept>.","pos":[2118,2363],"source":" If an invalid value is passed in as `reportType` or an invalid mode is specified for `reportMode`, `_CrtSetReportMode` invokes the invalid parameter handler as described in [Parameter Validation](../../c-runtime-library/parameter-validation.md)."},{"content":"If execution is allowed to continue, this function sets <ph id=\"ph1\">`errno`</ph> to <ph id=\"ph2\">`EINVAL`</ph> and returns -1.","pos":[2364,2455],"source":" If execution is allowed to continue, this function sets `errno` to `EINVAL` and returns -1."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>errno, _doserrno, _sys_errlist, and _sys_nerr<ept id=\"p1\">](../../c-runtime-library/errno-doserrno-sys-errlist-and-sys-nerr.md)</ept>.","pos":[2456,2598],"source":" For more information, see [errno, _doserrno, _sys_errlist, and _sys_nerr](../../c-runtime-library/errno-doserrno-sys-errlist-and-sys-nerr.md)."},{"content":"Remarks","pos":[2607,2614]},{"content":"specifies the output destination for <ph id=\"ph1\">`_CrtDbgReport`</ph>.","pos":[2638,2691],"source":" specifies the output destination for `_CrtDbgReport`."},{"content":"Because the macros <ph id=\"ph1\">`_ASSERT`</ph>, <ph id=\"ph2\">`_ASSERTE`</ph>, <ph id=\"ph3\">`_RPT`</ph>, and <ph id=\"ph4\">`_RPTF`</ph> call <ph id=\"ph5\">`_CrtDbgReport`</ph>, <ph id=\"ph6\">`_CrtSetReportMode`</ph> specifies the output destination of text specified with those macros.","pos":[2692,2865],"source":" Because the macros `_ASSERT`, `_ASSERTE`, `_RPT`, and `_RPTF` call `_CrtDbgReport`, `_CrtSetReportMode` specifies the output destination of text specified with those macros."},{"pos":[2872,2998],"content":"When <bpt id=\"p1\">[</bpt>_DEBUG<ept id=\"p1\">](../../c-runtime-library/debug.md)</ept> is not defined, calls to <ph id=\"ph1\">`_CrtSetReportMode`</ph> are removed during preprocessing.","source":"When [_DEBUG](../../c-runtime-library/debug.md) is not defined, calls to `_CrtSetReportMode` are removed during preprocessing."},{"pos":[3005,3132],"content":"If you do not call <ph id=\"ph1\">`_CrtSetReportMode`</ph> to define the output destination of messages, then the following defaults are in effect:","source":"If you do not call `_CrtSetReportMode` to define the output destination of messages, then the following defaults are in effect:"},{"content":"Assertion failures and errors are directed to a debug message window.","pos":[3142,3211]},{"content":"Warnings from Windows applications are sent to the debugger's output window.","pos":[3221,3297]},{"content":"Warnings from console applications are not displayed.","pos":[3307,3360]},{"content":"The following table lists the report types defined in Crtdbg.h.","pos":[3367,3430]},{"content":"Report type","pos":[3437,3448]},{"content":"Description","pos":[3449,3460]},{"content":"Warnings, messages, and information that does not need immediate attention.","pos":[3517,3592]},{"content":"Errors, unrecoverable problems, and issues that require immediate attention.","pos":[3610,3686]},{"pos":[3705,3772],"content":"Assertion failures (asserted expressions that evaluate to <ph id=\"ph1\">`FALSE`</ph>).","source":"Assertion failures (asserted expressions that evaluate to `FALSE`)."},{"content":"The <ph id=\"ph1\">`_CrtSetReportMode`</ph> function assigns the new report mode specified in <ph id=\"ph2\">`reportMode`</ph> to the report type specified in <ph id=\"ph3\">`reportType`</ph> and returns the previously defined report mode for <ph id=\"ph4\">`reportType`</ph>.","pos":[3780,3976],"source":"The `_CrtSetReportMode` function assigns the new report mode specified in `reportMode` to the report type specified in `reportType` and returns the previously defined report mode for `reportType`."},{"content":"The following table lists the available choices for <ph id=\"ph1\">`reportMode`</ph> and the resulting behavior of <ph id=\"ph2\">`_CrtDbgReport`</ph>.","pos":[3977,4088],"source":" The following table lists the available choices for `reportMode` and the resulting behavior of `_CrtDbgReport`."},{"content":"These options are defined as bit flags in Crtdbg.h.","pos":[4089,4140]},{"content":"Report mode","pos":[4147,4158]},{"content":"_CrtDbgReport behavior","pos":[4159,4181]},{"content":"Writes the message to the debugger's output window.","pos":[4259,4310]},{"content":"Writes the message to a user-supplied file handle.","pos":[4335,4385]},{"content":"<bpt id=\"p1\">[</bpt>_CrtSetReportFile<ept id=\"p1\">](../../c-runtime-library/reference/crtsetreportfile.md)</ept> should be called to define the specific file or stream to use as the destination.","pos":[4386,4542],"source":"[_CrtSetReportFile](../../c-runtime-library/reference/crtsetreportfile.md) should be called to define the specific file or stream to use as the destination."},{"pos":[4567,4666],"content":"Creates a message box to display the message along with the <ph id=\"ph1\">`Abort`</ph>, <ph id=\"ph2\">`Retry`</ph>, and <ph id=\"ph3\">`Ignore`</ph> buttons.","source":"Creates a message box to display the message along with the `Abort`, `Retry`, and `Ignore` buttons."},{"content":"Returns <ph id=\"ph1\">`reportMode`</ph> for the specified <ph id=\"ph2\">`reportType`</ph>:","pos":[4693,4745],"source":"Returns `reportMode` for the specified `reportType`:"},{"content":"1","pos":[4758,4759]},{"content":"2","pos":[4794,4795]},{"content":"4","pos":[4831,4832]},{"content":"Each report type can be reported using one, two, or three modes or no mode at all.","pos":[4862,4944]},{"content":"Therefore, it is possible to have more than one destination defined for a single report type.","pos":[4945,5038]},{"content":"For example, the following code fragment causes assertion failures to be sent to both a debug message window and to <ph id=\"ph1\">`stderr`</ph>:","pos":[5039,5164],"source":" For example, the following code fragment causes assertion failures to be sent to both a debug message window and to `stderr`:"},{"content":"In addition, the reporting mode or modes for each report type can be separately controlled.","pos":[5318,5409]},{"content":"For example, it is possible to specify that a <ph id=\"ph1\">`reportType`</ph> of <ph id=\"ph2\">`_CRT_WARN`</ph> be sent to an output debug string, while <ph id=\"ph3\">`_CRT_ASSERT`</ph> be displayed using a debug message window and sent to <ph id=\"ph4\">`stderr`</ph>, as previously illustrated.","pos":[5410,5629],"source":" For example, it is possible to specify that a `reportType` of `_CRT_WARN` be sent to an output debug string, while `_CRT_ASSERT` be displayed using a debug message window and sent to `stderr`, as previously illustrated."},{"content":"Requirements","pos":[5638,5650]},{"content":"Routine","pos":[5657,5664]},{"content":"Required header","pos":[5665,5680]},{"content":"Optional header","pos":[5681,5696]},{"content":"crtdbg.h&gt;","pos":[5785,5794],"source":"crtdbg.h>"},{"content":"errno.h&gt;","pos":[5797,5805],"source":"errno.h>"},{"pos":[5813,5931],"content":"For more compatibility information, see <bpt id=\"p1\">[</bpt>Compatibility<ept id=\"p1\">](../../c-runtime-library/compatibility.md)</ept> in the Introduction.","source":"For more compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md) in the Introduction."},{"pos":[5938,6048],"content":"<bpt id=\"p1\">**</bpt>Libraries:<ept id=\"p1\">**</ept> Debug versions of <bpt id=\"p2\">[</bpt>CRT Library Features<ept id=\"p2\">](../../c-runtime-library/crt-library-features.md)</ept> only.","source":"**Libraries:** Debug versions of [CRT Library Features](../../c-runtime-library/crt-library-features.md) only."},{"content":".NET Framework Equivalent","pos":[6057,6082]},{"content":"Not applicable.","pos":[6086,6101]},{"content":"To call the standard C function, use <ph id=\"ph1\">`PInvoke`</ph>.","pos":[6102,6149],"source":" To call the standard C function, use `PInvoke`."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Platform Invoke Examples<ept id=\"p1\">](http://msdn.microsoft.com/Library/15926806-f0b7-487e-93a6-4e9367ec689f)</ept>.","pos":[6150,6275],"source":" For more information, see [Platform Invoke Examples](http://msdn.microsoft.com/Library/15926806-f0b7-487e-93a6-4e9367ec689f)."},{"content":"See Also","pos":[6284,6292]},{"content":"Debug Routines","pos":[6297,6311]}],"content":"---\ntitle: \"_CrtSetReportMode | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\napiname: \n  - \"_CrtSetReportMode\"\napilocation: \n  - \"msvcrt.dll\"\n  - \"msvcr80.dll\"\n  - \"msvcr90.dll\"\n  - \"msvcr100.dll\"\n  - \"msvcr100_clr0400.dll\"\n  - \"msvcr110.dll\"\n  - \"msvcr110_clr0400.dll\"\n  - \"msvcr120.dll\"\n  - \"msvcr120_clr0400.dll\"\n  - \"ucrtbase.dll\"\napitype: \"DLLExport\"\nf1_keywords: \n  - \"_CrtSetReportMode\"\n  - \"CrtSetReportMode\"\ndev_langs: \n  - \"C++\"\n  - \"C\"\nhelpviewer_keywords: \n  - \"_CrtSetReportMode function\"\n  - \"CrtSetReportMode function\"\nms.assetid: 3ecc6a12-afdd-4242-b046-8187ff6d4b36\ncaps.latest.revision: 15\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"ru-ru\"\n  - \"zh-cn\"\n  - \"zh-tw\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"tr-tr\"\n---\n# _CrtSetReportMode\nSpecifies the destination or destinations for a specific report type generated by `_CrtDbgReport` and any macros that call [_CrtDbgReport, _CrtDbgReportW](../../c-runtime-library/reference/crtdbgreport-crtdbgreportw.md), such as [_ASSERT, _ASSERTE, _ASSERT_EXPR Macros](../../c-runtime-library/reference/assert-asserte-assert-expr-macros.md), [_ASSERT, _ASSERTE, _ASSERT_EXPR Macros](../../c-runtime-library/reference/assert-asserte-assert-expr-macros.md), [_RPT, _RPTF, _RPTW, _RPTFW Macros](../../c-runtime-library/reference/rpt-rptf-rptw-rptfw-macros.md), and [_RPT, _RPTF, _RPTW, _RPTFW Macros](../../c-runtime-library/reference/rpt-rptf-rptw-rptfw-macros.md) (debug version only).  \n  \n## Syntax  \n  \n```  \nint _CrtSetReportMode(   \n   int reportType,  \n   int reportMode   \n);  \n```  \n  \n#### Parameters  \n `reportType`  \n Report type: `_CRT_WARN`, `_CRT_ERROR`, and `_CRT_ASSERT`.  \n  \n `reportMode`  \n New report mode or modes for `reportType`.  \n  \n## Return Value  \n On successful completion, `_CrtSetReportMode` returns the previous report mode or modes for the report type specified in `reportType`. If an invalid value is passed in as `reportType` or an invalid mode is specified for `reportMode`, `_CrtSetReportMode` invokes the invalid parameter handler as described in [Parameter Validation](../../c-runtime-library/parameter-validation.md). If execution is allowed to continue, this function sets `errno` to `EINVAL` and returns -1. For more information, see [errno, _doserrno, _sys_errlist, and _sys_nerr](../../c-runtime-library/errno-doserrno-sys-errlist-and-sys-nerr.md).  \n  \n## Remarks  \n `_CrtSetReportMode` specifies the output destination for `_CrtDbgReport`. Because the macros `_ASSERT`, `_ASSERTE`, `_RPT`, and `_RPTF` call `_CrtDbgReport`, `_CrtSetReportMode` specifies the output destination of text specified with those macros.  \n  \n When [_DEBUG](../../c-runtime-library/debug.md) is not defined, calls to `_CrtSetReportMode` are removed during preprocessing.  \n  \n If you do not call `_CrtSetReportMode` to define the output destination of messages, then the following defaults are in effect:  \n  \n-   Assertion failures and errors are directed to a debug message window.  \n  \n-   Warnings from Windows applications are sent to the debugger's output window.  \n  \n-   Warnings from console applications are not displayed.  \n  \n The following table lists the report types defined in Crtdbg.h.  \n  \n|Report type|Description|  \n|-----------------|-----------------|  \n|`_CRT_WARN`|Warnings, messages, and information that does not need immediate attention.|  \n|`_CRT_ERROR`|Errors, unrecoverable problems, and issues that require immediate attention.|  \n|`_CRT_ASSERT`|Assertion failures (asserted expressions that evaluate to `FALSE`).|  \n  \n The `_CrtSetReportMode` function assigns the new report mode specified in `reportMode` to the report type specified in `reportType` and returns the previously defined report mode for `reportType`. The following table lists the available choices for `reportMode` and the resulting behavior of `_CrtDbgReport`. These options are defined as bit flags in Crtdbg.h.  \n  \n|Report mode|_CrtDbgReport behavior|  \n|-----------------|-----------------------------|  \n|`_CRTDBG_MODE_DEBUG`|Writes the message to the debugger's output window.|  \n|`_CRTDBG_MODE_FILE`|Writes the message to a user-supplied file handle. [_CrtSetReportFile](../../c-runtime-library/reference/crtsetreportfile.md) should be called to define the specific file or stream to use as the destination.|  \n|`_CRTDBG_MODE_WNDW`|Creates a message box to display the message along with the `Abort`, `Retry`, and `Ignore` buttons.|  \n|`_CRTDBG_REPORT_MODE`|Returns `reportMode` for the specified `reportType`:<br /><br /> 1   `_CRTDBG_MODE_FILE`<br /><br /> 2   `_CRTDBG_MODE_DEBUG`<br /><br /> 4   `_CRTDBG_MODE_WNDW`|  \n  \n Each report type can be reported using one, two, or three modes or no mode at all. Therefore, it is possible to have more than one destination defined for a single report type. For example, the following code fragment causes assertion failures to be sent to both a debug message window and to `stderr`:  \n  \n```  \n_CrtSetReportMode( _CRT_ASSERT, _CRTDBG_MODE_FILE | _CRTDBG_MODE_WNDW );  \n_CrtSetReportFile( _CRT_ASSERT, _CRTDBG_FILE_STDERR );  \n```  \n  \n In addition, the reporting mode or modes for each report type can be separately controlled. For example, it is possible to specify that a `reportType` of `_CRT_WARN` be sent to an output debug string, while `_CRT_ASSERT` be displayed using a debug message window and sent to `stderr`, as previously illustrated.  \n  \n## Requirements  \n  \n|Routine|Required header|Optional header|  \n|-------------|---------------------|---------------------|  \n|`_CrtSetReportMode`|\\<crtdbg.h>|\\<errno.h>|  \n  \n For more compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md) in the Introduction.  \n  \n **Libraries:** Debug versions of [CRT Library Features](../../c-runtime-library/crt-library-features.md) only.  \n  \n## .NET Framework Equivalent  \n Not applicable. To call the standard C function, use `PInvoke`. For more information, see [Platform Invoke Examples](http://msdn.microsoft.com/Library/15926806-f0b7-487e-93a6-4e9367ec689f).  \n  \n## See Also  \n [Debug Routines](../../c-runtime-library/debug-routines.md)"}