{"nodes":[{"pos":[12,44],"content":"result_of Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"result_of Class | Microsoft Docs","pos":[0,32]}]},{"pos":[688,703],"content":"result_of Class","linkify":"result_of Class","nodes":[{"content":"result_of Class","pos":[0,15]}]},{"content":"Determines the return type of the callable type that takes the specified argument types.","pos":[704,792]},{"pos":[801,807],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[907,917],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"The callable type to query.","pos":[929,956]},{"content":"The types of the argument list to the callable type to query.","pos":[977,1038]},{"pos":[1047,1054],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Use this template to determine at compile time the result type of <ph id=\"ph1\">`Fn`</ph>(<ph id=\"ph2\">`ArgTypes`</ph>), where <ph id=\"ph3\">`Fn`</ph> is a callable type invoked with an argument list of the types in <ph id=\"ph4\">`ArgTypes`</ph>.","pos":[1058,1229],"source":"Use this template to determine at compile time the result type of `Fn`(`ArgTypes`), where `Fn` is a callable type invoked with an argument list of the types in `ArgTypes`."},{"content":"The <ph id=\"ph1\">`type`</ph> member of the template class names the result type of <ph id=\"ph2\">`decltype(INVOKE(declval&lt;Fn&gt;(), declval&lt;ArgTypes&gt;()...))`</ph> if the unevaluated expression <ph id=\"ph3\">`INVOKE(declval&lt;Fn&gt;(), declval&lt;ArgTypes&gt;()...)`</ph> is well-formed.","pos":[1230,1446],"source":" The `type` member of the template class names the result type of `decltype(INVOKE(declval<Fn>(), declval<ArgTypes>()...))` if the unevaluated expression `INVOKE(declval<Fn>(), declval<ArgTypes>()...)` is well-formed."},{"content":"Otherwise, the template class has no member <ph id=\"ph1\">`type`</ph>.","pos":[1447,1498],"source":" Otherwise, the template class has no member `type`."},{"content":"The type <ph id=\"ph1\">`Fn`</ph> and all types in the parameter pack <ph id=\"ph2\">`ArgTypes`</ph> must be complete types, <ph id=\"ph3\">`void`</ph>, or arrays of unknown bound.","pos":[1499,1619],"source":" The type `Fn` and all types in the parameter pack `ArgTypes` must be complete types, `void`, or arrays of unknown bound."},{"pos":[1628,1640],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[1644,1669],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> &lt;type_traits&gt;","source":"**Header:** <type_traits>"},{"pos":[1676,1694],"content":"<bpt id=\"p1\">**</bpt>Namespace:<ept id=\"p1\">**</ept> std","source":"**Namespace:** std"},{"pos":[1703,1711],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"pos":[1715,1766],"content":"<bpt id=\"p1\">[</bpt>&lt;type_traits&gt;<ept id=\"p1\">](../standard-library/type-traits.md)</ept>","source":"[<type_traits>](../standard-library/type-traits.md)"}],"content":"---\ntitle: \"result_of Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"cpp\"\n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"language-reference\"\nf1_keywords: \n  - \"result_of\"\n  - \"std.result_of\"\n  - \"std::result_of\"\n  - \"type_traits/std::result_of\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"result_of\"\nms.assetid: 5374a096-4b4a-4712-aa97-6852c5cdd6be\ncaps.latest.revision: 13\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# result_of Class\nDetermines the return type of the callable type that takes the specified argument types.  \n  \n## Syntax  \n  \n```\ntemplate <class Fn, class... ArgTypes>  \nstruct result_of<Fn(ArgTypes...)>;\n```  \n  \n#### Parameters  \n `Fn`  \n The callable type to query.  \n  \n `ArgTypes`  \n The types of the argument list to the callable type to query.  \n  \n## Remarks  \n Use this template to determine at compile time the result type of `Fn`(`ArgTypes`), where `Fn` is a callable type invoked with an argument list of the types in `ArgTypes`. The `type` member of the template class names the result type of `decltype(INVOKE(declval<Fn>(), declval<ArgTypes>()...))` if the unevaluated expression `INVOKE(declval<Fn>(), declval<ArgTypes>()...)` is well-formed. Otherwise, the template class has no member `type`. The type `Fn` and all types in the parameter pack `ArgTypes` must be complete types, `void`, or arrays of unknown bound.  \n  \n## Requirements  \n **Header:** <type_traits>  \n  \n **Namespace:** std  \n  \n## See Also  \n [<type_traits>](../standard-library/type-traits.md)\n\n\n\n"}