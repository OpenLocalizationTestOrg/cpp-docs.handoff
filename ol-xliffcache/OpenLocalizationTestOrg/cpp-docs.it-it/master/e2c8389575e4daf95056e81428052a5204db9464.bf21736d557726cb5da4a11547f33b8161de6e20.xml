{"nodes":[{"pos":[12,66],"content":"operator== (&lt;sample container&gt;) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"operator== (<ph id=\"ph1\">&amp;lt;</ph>sample container<ph id=\"ph2\">&amp;gt;</ph>) | Microsoft Docs","pos":[0,54],"source":"operator== (&lt;sample container&gt;) | Microsoft Docs"}]},{"content":"operator== (<ph id=\"ph1\">&amp;lt;</ph>sample container<ph id=\"ph2\">&amp;gt;</ph>)","pos":[791,828],"source":"operator== (&lt;sample container&gt;)"},{"pos":[831,1045],"content":"[!NOTE]\n This topic is in the Visual C++ documentation as a nonfunctional example of containers used in the Standard C++ Library. For more information, see [STL Containers](../standard-library/stl-containers.md).","leadings":["","> "],"nodes":[{"content":" This topic is in the Visual C++ documentation as a nonfunctional example of containers used in the Standard C++ Library. For more information, see [STL Containers](../standard-library/stl-containers.md).","pos":[8,212],"nodes":[{"content":"This topic is in the Visual C++ documentation as a nonfunctional example of containers used in the Standard C++ Library.","pos":[1,121]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>STL Containers<ept id=\"p1\">](../standard-library/stl-containers.md)</ept>.","pos":[122,204],"source":" For more information, see [STL Containers](../standard-library/stl-containers.md)."}]}]},{"pos":[1052,1175],"content":"Overloads <ph id=\"ph1\">`operator==`</ph> to compare two objects of template class <bpt id=\"p1\">[</bpt>Container<ept id=\"p1\">](../standard-library/sample-container-class.md)</ept>.","source":"Overloads `operator==` to compare two objects of template class [Container](../standard-library/sample-container-class.md)."},{"content":"Syntax","pos":[1184,1190]},{"content":"Return Value","pos":[1327,1339]},{"content":"Returns <ph id=\"ph1\">` left`</ph><bpt id=\"p1\">**</bpt>.<ept id=\"p1\">**</ept><bpt id=\"p2\">[</bpt>size<ept id=\"p2\">](../standard-library/container-class-size.md)</ept> <bpt id=\"p3\">**</bpt><ph id=\"ph2\">==</ph><ept id=\"p3\">**</ept> <ph id=\"ph3\">` right`</ph><bpt id=\"p4\">**</bpt>.size &amp;&amp; equal<ept id=\"p4\">**</ept>(_<bpt id=\"p5\">*</bpt>Left<ept id=\"p5\">*</ept><bpt id=\"p6\">**</bpt>.<ept id=\"p6\">**</ept><bpt id=\"p7\">[</bpt>begin<ept id=\"p7\">](../standard-library/container-class-begin.md)</ept>, <ph id=\"ph4\">` left`</ph>.","pos":[1343,1524],"source":"Returns ` left`**.**[size](../standard-library/container-class-size.md) **==** ` right`**.size && equal**(_*Left***.**[begin](../standard-library/container-class-begin.md), ` left`."},{"content":"<bpt id=\"p1\">[</bpt>end<ept id=\"p1\">](../standard-library/container-class-end.md)</ept><bpt id=\"p2\">*</bpt>,  right<ept id=\"p2\">*</ept><bpt id=\"p3\">**</bpt>.begin<ept id=\"p3\">**</ept>).","pos":[1525,1596],"source":"[end](../standard-library/container-class-end.md)*,  right***.begin**)."},{"content":"See Also","pos":[1605,1613]},{"content":"sample container&gt;","pos":[1620,1637],"source":"sample container>"}],"content":"---\ntitle: \"operator== (&lt;sample container&gt;) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"std.==\"\n  - \"std::==\"\n  - \"operator==\"\n  - \"std.operator==\"\n  - \"std::operator==\"\n  - \"==\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"operator ==, containers\"\n  - \"operator==, containers\"\n  - \"== operator, with specific standard C++ objects\"\nms.assetid: d3d8754e-5157-4b8b-bf9c-da41856f5eed\ncaps.latest.revision: 9\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# operator== (&lt;sample container&gt;)\n> [!NOTE]\n>  This topic is in the Visual C++ documentation as a nonfunctional example of containers used in the Standard C++ Library. For more information, see [STL Containers](../standard-library/stl-containers.md).  \n  \n Overloads `operator==` to compare two objects of template class [Container](../standard-library/sample-container-class.md).  \n  \n## Syntax  \n  \n```  \n \n    template <class Ty>  \nbool operator==(\n    const Container <Ty>& left,  \n    const Container <Ty>& right);\n```  \n  \n## Return Value  \n Returns ` left`**.**[size](../standard-library/container-class-size.md) **==** ` right`**.size && equal**(_*Left***.**[begin](../standard-library/container-class-begin.md), ` left`. [end](../standard-library/container-class-end.md)*,  right***.begin**).  \n  \n## See Also  \n [\\<sample container>](../standard-library/sample-container.md)\n\n"}