{"nodes":[{"pos":[12,61],"content":"Compiler Warning (level 4) C4130 | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Compiler Warning (level 4) C4130 | Microsoft Docs","pos":[0,49]}]},{"pos":[630,662],"content":"Compiler Warning (level 4) C4130","linkify":"Compiler Warning (level 4) C4130","nodes":[{"content":"Compiler Warning (level 4) C4130","pos":[0,32]}]},{"content":"'operator' : logical operation on address of string constant","pos":[663,723]},{"content":"Using the operator with the address of a string literal produces unexpected code.","pos":[730,811]},{"content":"The following sample generates C4130:","pos":[818,855]},{"content":"The <bpt id=\"p1\">**</bpt>if<ept id=\"p1\">**</ept> statement compares the value stored in the pointer <ph id=\"ph1\">`pc`</ph> to the address of the string \"Hello\", which is allocated separately each time the string occurs in code.","pos":[1017,1188],"source":"The **if** statement compares the value stored in the pointer `pc` to the address of the string \"Hello\", which is allocated separately each time the string occurs in code."},{"content":"The <bpt id=\"p1\">**</bpt>if<ept id=\"p1\">**</ept> statement does not compare the string pointed to by <ph id=\"ph1\">`pc`</ph> with the string \"Hello\".","pos":[1189,1281],"source":" The **if** statement does not compare the string pointed to by `pc` with the string \"Hello\"."},{"pos":[1288,1334],"content":"To compare strings, use the <ph id=\"ph1\">`strcmp`</ph> function.","source":"To compare strings, use the `strcmp` function."}],"content":"---\ntitle: \"Compiler Warning (level 4) C4130 | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-csharp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"C4130\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"C4130\"\nms.assetid: 45e4c7b2-6b51-41c7-ba5e-941aa5c7d3dc\ncaps.latest.revision: 6\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"ru-ru\"\n  - \"zh-cn\"\n  - \"zh-tw\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"tr-tr\"\n---\n# Compiler Warning (level 4) C4130\n'operator' : logical operation on address of string constant  \n  \n Using the operator with the address of a string literal produces unexpected code.  \n  \n The following sample generates C4130:  \n  \n```  \n// C4130.cpp  \n// compile with: /W4  \nint main()  \n{  \n   char *pc;  \n   pc = \"Hello\";  \n   if (pc == \"Hello\") // C4130  \n   {  \n   }  \n}  \n```  \n  \n The **if** statement compares the value stored in the pointer `pc` to the address of the string \"Hello\", which is allocated separately each time the string occurs in code. The **if** statement does not compare the string pointed to by `pc` with the string \"Hello\".  \n  \n To compare strings, use the `strcmp` function."}