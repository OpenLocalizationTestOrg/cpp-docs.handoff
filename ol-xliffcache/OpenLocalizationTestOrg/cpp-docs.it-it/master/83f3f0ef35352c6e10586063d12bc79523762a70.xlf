<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="it-it">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-04506c2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">83f3f0ef35352c6e10586063d12bc79523762a70</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\cpp\compiler-com-support.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">07ffbf9771e5bd6aabda05b2f26f81c98e4086cf</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">56250abc19b9c8ee76ef80529164c8173fa02a28</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Compiler COM Support | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Compiler COM Support</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Microsoft Specific</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The Visual C++ compiler can directly read component object model (COM) type libraries and translate the contents into C++ source code that can be included in the compilation.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Language extensions are available to facilitate COM programming on the client side.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>By using the <bpt id="p1">[</bpt>#import preprocessor directive<ept id="p1">](../preprocessor/hash-import-directive-cpp.md)</ept>, the compiler can read a type library and convert it into a C++ header file that describes the COM interfaces as classes.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>A set of <ph id="ph1">`#import`</ph> attributes is available for user control of the content for the resulting type library header files.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>You can use the <bpt id="p1">[</bpt>__declspec<ept id="p1">](../cpp/declspec.md)</ept> extended attribute <bpt id="p2">[</bpt>uuid<ept id="p2">](../cpp/uuid-cpp.md)</ept> to assign a globally unique identifier (GUID) to a COM object.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The keyword <bpt id="p1">[</bpt>__uuidof<ept id="p1">](../cpp/uuidof-operator.md)</ept> can be used to extract the GUID associated with a COM object.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Another <ph id="ph1">`__declspec`</ph> attribute, <bpt id="p1">[</bpt>property<ept id="p1">](../cpp/property-cpp.md)</ept>, can be used to specify the <bpt id="p2">**</bpt>get<ept id="p2">**</ept> and <bpt id="p3">**</bpt>set<ept id="p3">**</ept> methods for a data member of a COM object.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>A set of COM support global functions and classes is provided to support the <bpt id="p1">**</bpt>VARIANT<ept id="p1">**</ept> and <ph id="ph1">`BSTR`</ph> types, implement smart pointers, and encapsulate the error object thrown by <ph id="ph2">`_com_raise_error`</ph>:</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Compiler COM Global Functions</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>_bstr_t</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>_com_error</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>_com_ptr_t</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>_variant_t</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>END Microsoft Specific</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Compiler COM Support Classes</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Compiler COM Global Functions</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>