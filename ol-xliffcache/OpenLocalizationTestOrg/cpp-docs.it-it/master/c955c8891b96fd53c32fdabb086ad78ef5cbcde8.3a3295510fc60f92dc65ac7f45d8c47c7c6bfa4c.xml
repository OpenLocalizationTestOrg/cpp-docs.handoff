{"nodes":[{"pos":[12,78],"content":"Understanding Custom Build Steps and Build Events | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Understanding Custom Build Steps and Build Events | Microsoft Docs","pos":[0,66]}]},{"content":"Understanding Custom Build Steps and Build Events","pos":[875,924]},{"content":"From within the Visual C++ development environment, there are three basic ways to customize the build process:","pos":[925,1035]},{"content":"Custom Build Steps","pos":[1044,1062]},{"content":"A custom build step is a build rule associated with a project.","pos":[1068,1130]},{"content":"A custom build step can specify a command line to execute, any additional input or output files, and a message to display.","pos":[1131,1253]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>How to: Add a Custom Build Step to MSBuild Projects<ept id=\"p1\">](../build/how-to-add-a-custom-build-step-to-msbuild-projects.md)</ept>.","pos":[1254,1398],"source":" For more information, see [How to: Add a Custom Build Step to MSBuild Projects](../build/how-to-add-a-custom-build-step-to-msbuild-projects.md)."},{"content":"Custom Build Tools","pos":[1407,1425]},{"content":"A custom build tool is a build rule associated with one or more files.","pos":[1431,1501]},{"content":"A custom build step can pass input files to a custom build tool, which results in one or more output files.","pos":[1502,1609]},{"content":"For example, the help files in an MFC application are built with a custom build tool.","pos":[1610,1695]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>How to: Add Custom Build Tools to MSBuild Projects<ept id=\"p1\">](../build/how-to-add-custom-build-tools-to-msbuild-projects.md)</ept> and <bpt id=\"p2\">[</bpt>Specifying Custom Build Tools<ept id=\"p2\">](../ide/specifying-custom-build-tools.md)</ept>.","pos":[1696,1915],"source":" For more information, see [How to: Add Custom Build Tools to MSBuild Projects](../build/how-to-add-custom-build-tools-to-msbuild-projects.md) and [Specifying Custom Build Tools](../ide/specifying-custom-build-tools.md)."},{"content":"Build Events","pos":[1924,1936]},{"content":"Build events let you customize a project's build.","pos":[1942,1991]},{"content":"There are three build events: <bpt id=\"p1\">*</bpt>pre-build<ept id=\"p1\">*</ept>, <bpt id=\"p2\">*</bpt>pre-link<ept id=\"p2\">*</ept>, and <bpt id=\"p3\">*</bpt>post-build<ept id=\"p3\">*</ept>.","pos":[1992,2064],"source":" There are three build events: *pre-build*, *pre-link*, and *post-build*."},{"content":"A build event lets you specify an action to occur at a specific time in the build process.","pos":[2065,2155]},{"content":"For example, you could use a build event to register a file with <bpt id=\"p1\">**</bpt>regsvr32.exe<ept id=\"p1\">**</ept> after the project finishes building.","pos":[2156,2274],"source":" For example, you could use a build event to register a file with **regsvr32.exe** after the project finishes building."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Specifying Build Events<ept id=\"p1\">](../ide/specifying-build-events.md)</ept>.","pos":[2275,2362],"source":" For more information, see [Specifying Build Events](../ide/specifying-build-events.md)."},{"pos":[2369,2538],"content":"<bpt id=\"p1\">[</bpt>Troubleshooting Build Customizations<ept id=\"p1\">](../ide/troubleshooting-build-customizations.md)</ept> can help you ensure that your custom build steps and build events run as expected.","source":"[Troubleshooting Build Customizations](../ide/troubleshooting-build-customizations.md) can help you ensure that your custom build steps and build events run as expected."},{"content":"The output format of a custom build step or build event can also enhance the usability of the tool.","pos":[2545,2644]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Formatting the Output of a Custom Build Step or Build Event<ept id=\"p1\">](../ide/formatting-the-output-of-a-custom-build-step-or-build-event.md)</ept>.","pos":[2645,2804],"source":" For more information, see [Formatting the Output of a Custom Build Step or Build Event](../ide/formatting-the-output-of-a-custom-build-step-or-build-event.md)."},{"content":"Build events and custom build steps run in the following order along with other build steps:","pos":[2811,2903]},{"content":"Pre-Build event","pos":[2913,2928]},{"content":"Custom build tools on individual files","pos":[2938,2976]},{"content":"MIDL","pos":[2986,2990]},{"content":"Resource compiler","pos":[3000,3017]},{"content":"The C/C++ compiler","pos":[3027,3045]},{"content":"Pre-Link event","pos":[3055,3069]},{"content":"Linker or Librarian (as appropriate)","pos":[3079,3115]},{"content":"Manifest Tool","pos":[3125,3138]},{"content":"BSCMake","pos":[3147,3154]},{"content":"Custom build step on the project","pos":[3164,3196]},{"content":"Post-Build event","pos":[3206,3222]},{"pos":[3229,3349],"content":"The <ph id=\"ph1\">`custom build step on the project`</ph> and a <ph id=\"ph2\">`post-build event`</ph> run sequentially after all other build processes finish.","source":"The `custom build step on the project` and a `post-build event` run sequentially after all other build processes finish."},{"content":"See Also","pos":[3358,3366]},{"content":"Building C++ Projects in Visual Studio","pos":[3371,3409]},{"content":"Common Macros for Build Commands and Properties","pos":[3466,3513]},{"content":"Tool Build Order Dialog Box","pos":[3579,3606]}],"content":"---\ntitle: \"Understanding Custom Build Steps and Build Events | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"builds [C++], events\"\n  - \"custom build steps [C++], customizing builds\"\n  - \"events [C++], build\"\n  - \"custom build steps [C++]\"\n  - \"build steps [C++]\"\n  - \"build events [C++], order of events and build steps\"\n  - \"build steps [C++], build events\"\n  - \"builds [C++], custom build steps\"\nms.assetid: beb2f017-3e9f-4b2c-9b57-2572fd2628e4\ncaps.latest.revision: 12\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Understanding Custom Build Steps and Build Events\nFrom within the Visual C++ development environment, there are three basic ways to customize the build process:  \n  \n **Custom Build Steps**  \n A custom build step is a build rule associated with a project. A custom build step can specify a command line to execute, any additional input or output files, and a message to display. For more information, see [How to: Add a Custom Build Step to MSBuild Projects](../build/how-to-add-a-custom-build-step-to-msbuild-projects.md).  \n  \n **Custom Build Tools**  \n A custom build tool is a build rule associated with one or more files. A custom build step can pass input files to a custom build tool, which results in one or more output files. For example, the help files in an MFC application are built with a custom build tool. For more information, see [How to: Add Custom Build Tools to MSBuild Projects](../build/how-to-add-custom-build-tools-to-msbuild-projects.md) and [Specifying Custom Build Tools](../ide/specifying-custom-build-tools.md).  \n  \n **Build Events**  \n Build events let you customize a project's build. There are three build events: *pre-build*, *pre-link*, and *post-build*. A build event lets you specify an action to occur at a specific time in the build process. For example, you could use a build event to register a file with **regsvr32.exe** after the project finishes building. For more information, see [Specifying Build Events](../ide/specifying-build-events.md).  \n  \n [Troubleshooting Build Customizations](../ide/troubleshooting-build-customizations.md) can help you ensure that your custom build steps and build events run as expected.  \n  \n The output format of a custom build step or build event can also enhance the usability of the tool. For more information, see [Formatting the Output of a Custom Build Step or Build Event](../ide/formatting-the-output-of-a-custom-build-step-or-build-event.md).  \n  \n Build events and custom build steps run in the following order along with other build steps:  \n  \n1.  Pre-Build event  \n  \n2.  Custom build tools on individual files  \n  \n3.  MIDL  \n  \n4.  Resource compiler  \n  \n5.  The C/C++ compiler  \n  \n6.  Pre-Link event  \n  \n7.  Linker or Librarian (as appropriate)  \n  \n8.  Manifest Tool  \n  \n9. BSCMake  \n  \n10. Custom build step on the project  \n  \n11. Post-Build event  \n  \n The `custom build step on the project` and a `post-build event` run sequentially after all other build processes finish.  \n  \n## See Also  \n [Building C++ Projects in Visual Studio](../ide/building-cpp-projects-in-visual-studio.md)   \n [Common Macros for Build Commands and Properties](../ide/common-macros-for-build-commands-and-properties.md)   \n [Tool Build Order Dialog Box](http://msdn.microsoft.com/en-us/6204c5b1-7ce9-4948-9ff6-0268642ee14c)"}