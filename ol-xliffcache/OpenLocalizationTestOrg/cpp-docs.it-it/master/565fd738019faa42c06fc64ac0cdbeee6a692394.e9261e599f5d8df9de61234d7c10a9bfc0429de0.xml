{"nodes":[{"pos":[12,53],"content":"Sample Container Members | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Sample Container Members | Microsoft Docs","pos":[0,41]}]},{"pos":[579,603],"content":"Sample Container Members","linkify":"Sample Container Members","nodes":[{"content":"Sample Container Members","pos":[0,24]}]},{"pos":[606,820],"content":"[!NOTE]\n This topic is in the Visual C++ documentation as a nonfunctional example of containers used in the Standard C++ Library. For more information, see [STL Containers](../standard-library/stl-containers.md).","leadings":["","> "],"nodes":[{"content":" This topic is in the Visual C++ documentation as a nonfunctional example of containers used in the Standard C++ Library. For more information, see [STL Containers](../standard-library/stl-containers.md).","pos":[8,212],"nodes":[{"content":"This topic is in the Visual C++ documentation as a nonfunctional example of containers used in the Standard C++ Library.","pos":[1,121]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>STL Containers<ept id=\"p1\">](../standard-library/stl-containers.md)</ept>.","pos":[122,204],"source":" For more information, see [STL Containers](../standard-library/stl-containers.md)."}]}]},{"pos":[829,838],"content":"Reference","linkify":"Reference","nodes":[{"content":"Reference","pos":[0,9]}]},{"pos":[847,855],"content":"Typedefs","linkify":"Typedefs","nodes":[{"content":"Typedefs","pos":[0,8]}]},{"pos":[876,947],"content":"<bpt id=\"p1\">[</bpt>const_iterator<ept id=\"p1\">](../standard-library/container-class-const-iterator.md)</ept>","source":"[const_iterator](../standard-library/container-class-const-iterator.md)"},{"content":"Describes an object that can serve as a constant iterator for the controlled sequence.","pos":[948,1034]},{"pos":[1039,1112],"content":"<bpt id=\"p1\">[</bpt>const_reference<ept id=\"p1\">](../standard-library/container-class-const-reference.md)</ept>","source":"[const_reference](../standard-library/container-class-const-reference.md)"},{"content":"Describes an object that can serve as a constant reference to an element of the controlled sequence.","pos":[1113,1213]},{"pos":[1218,1305],"content":"<bpt id=\"p1\">[</bpt>const_reverse_iterator<ept id=\"p1\">](../standard-library/container-class-const-reverse-iterator.md)</ept>","source":"[const_reverse_iterator](../standard-library/container-class-const-reverse-iterator.md)"},{"content":"Describes an object that can serve as a constant reverse iterator for the controlled sequence.","pos":[1306,1400]},{"pos":[1405,1478],"content":"<bpt id=\"p1\">[</bpt>difference_type<ept id=\"p1\">](../standard-library/container-class-difference-type.md)</ept>","source":"[difference_type](../standard-library/container-class-difference-type.md)"},{"content":"Describes an object that can represent the difference between the addresses of any two elements in the controlled sequence.","pos":[1479,1602]},{"pos":[1607,1666],"content":"<bpt id=\"p1\">[</bpt>iterator<ept id=\"p1\">](../standard-library/container-class-iterator.md)</ept>","source":"[iterator](../standard-library/container-class-iterator.md)"},{"content":"Describes an object that can serve as an iterator for the controlled sequence.","pos":[1667,1745]},{"pos":[1750,1811],"content":"<bpt id=\"p1\">[</bpt>reference<ept id=\"p1\">](../standard-library/container-class-reference.md)</ept>","source":"[reference](../standard-library/container-class-reference.md)"},{"content":"Describes an object that can serve as a reference to an element of the controlled sequence.","pos":[1812,1903]},{"pos":[1908,1983],"content":"<bpt id=\"p1\">[</bpt>reverse_iterator<ept id=\"p1\">](../standard-library/container-class-reverse-iterator.md)</ept>","source":"[reverse_iterator](../standard-library/container-class-reverse-iterator.md)"},{"content":"Describes an object that can serve as a reverse iterator for the controlled sequence.","pos":[1984,2069]},{"pos":[2074,2135],"content":"<bpt id=\"p1\">[</bpt>size_type<ept id=\"p1\">](../standard-library/container-class-size-type.md)</ept>","source":"[size_type](../standard-library/container-class-size-type.md)"},{"content":"Describes an object that can represent the length of any controlled sequence.","pos":[2136,2213]},{"pos":[2218,2281],"content":"<bpt id=\"p1\">[</bpt>value_type<ept id=\"p1\">](../standard-library/container-class-value-type.md)</ept>","source":"[value_type](../standard-library/container-class-value-type.md)"},{"pos":[2282,2331],"content":"Acts a synonym for the template parameter <bpt id=\"p1\">**</bpt>Ty<ept id=\"p1\">**</ept>.","source":"Acts a synonym for the template parameter **Ty**."},{"pos":[2341,2357],"content":"Member Functions","linkify":"Member Functions","nodes":[{"content":"Member Functions","pos":[0,16]}]},{"pos":[2378,2431],"content":"<bpt id=\"p1\">[</bpt>begin<ept id=\"p1\">](../standard-library/container-class-begin.md)</ept>","source":"[begin](../standard-library/container-class-begin.md)"},{"content":"Returns an iterator that points at the first element of the sequence (or just beyond the end of an empty sequence).","pos":[2432,2547]},{"pos":[2552,2605],"content":"<bpt id=\"p1\">[</bpt>clear<ept id=\"p1\">](../standard-library/container-class-clear.md)</ept>","source":"[clear](../standard-library/container-class-clear.md)"},{"pos":[2606,2773],"content":"Calls <bpt id=\"p1\">[</bpt>erase<ept id=\"p1\">](../standard-library/container-class-erase.md)</ept>( <bpt id=\"p2\">[</bpt>begin<ept id=\"p2\">](../standard-library/container-class-begin.md)</ept>, <bpt id=\"p3\">[</bpt>end<ept id=\"p3\">](../standard-library/container-class-end.md)</ept>).","source":"Calls [erase](../standard-library/container-class-erase.md)( [begin](../standard-library/container-class-begin.md), [end](../standard-library/container-class-end.md))."},{"pos":[2778,2831],"content":"<bpt id=\"p1\">[</bpt>empty<ept id=\"p1\">](../standard-library/container-class-empty.md)</ept>","source":"[empty](../standard-library/container-class-empty.md)"},{"pos":[2832,2882],"content":"Returns <bpt id=\"p1\">**</bpt>true<ept id=\"p1\">**</ept> for an empty controlled sequence.","source":"Returns **true** for an empty controlled sequence."},{"pos":[2887,2936],"content":"<bpt id=\"p1\">[</bpt>end<ept id=\"p1\">](../standard-library/container-class-end.md)</ept>","source":"[end](../standard-library/container-class-end.md)"},{"content":"Returns an iterator that points just beyond the end of the sequence.","pos":[2937,3005]},{"pos":[3010,3063],"content":"<bpt id=\"p1\">[</bpt>erase<ept id=\"p1\">](../standard-library/container-class-erase.md)</ept>","source":"[erase](../standard-library/container-class-erase.md)"},{"content":"Erases an element.","pos":[3064,3082]},{"pos":[3087,3146],"content":"<bpt id=\"p1\">[</bpt>max_size<ept id=\"p1\">](../standard-library/container-class-max-size.md)</ept>","source":"[max_size](../standard-library/container-class-max-size.md)"},{"content":"Returns the length of the longest sequence that the object can control, in constant time regardless of the length of the controlled sequence.","pos":[3147,3288]},{"pos":[3293,3348],"content":"<bpt id=\"p1\">[</bpt>rbegin<ept id=\"p1\">](../standard-library/container-class-rbegin.md)</ept>","source":"[rbegin](../standard-library/container-class-rbegin.md)"},{"content":"Returns a reverse iterator that points just beyond the end of the controlled sequence, designating the beginning of the reverse sequence.","pos":[3349,3486]},{"pos":[3491,3542],"content":"<bpt id=\"p1\">[</bpt>rend<ept id=\"p1\">](../standard-library/container-class-rend.md)</ept>","source":"[rend](../standard-library/container-class-rend.md)"},{"content":"The member function returns a reverse iterator that points at the first element of the sequence (or just beyond the end of an empty sequence), designating the end of the reverse sequence.","pos":[3543,3730]},{"pos":[3735,3786],"content":"<bpt id=\"p1\">[</bpt>size<ept id=\"p1\">](../standard-library/container-class-size.md)</ept>","source":"[size](../standard-library/container-class-size.md)"},{"content":"Returns the length of the controlled sequence, in constant time regardless of the length of the controlled sequence.","pos":[3787,3903]},{"pos":[3908,3959],"content":"<bpt id=\"p1\">[</bpt>swap<ept id=\"p1\">](../standard-library/container-class-swap.md)</ept>","source":"[swap](../standard-library/container-class-swap.md)"}],"content":"---\ntitle: \"Sample Container Members | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"container classes\"\nms.assetid: dc5a1998-a31b-4adf-b888-8abe5b87a4e0\ncaps.latest.revision: 9\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Sample Container Members\n> [!NOTE]\n>  This topic is in the Visual C++ documentation as a nonfunctional example of containers used in the Standard C++ Library. For more information, see [STL Containers](../standard-library/stl-containers.md).  \n  \n## Reference  \n  \n## Typedefs  \n  \n|||  \n|-|-|  \n|[const_iterator](../standard-library/container-class-const-iterator.md)|Describes an object that can serve as a constant iterator for the controlled sequence.|  \n|[const_reference](../standard-library/container-class-const-reference.md)|Describes an object that can serve as a constant reference to an element of the controlled sequence.|  \n|[const_reverse_iterator](../standard-library/container-class-const-reverse-iterator.md)|Describes an object that can serve as a constant reverse iterator for the controlled sequence.|  \n|[difference_type](../standard-library/container-class-difference-type.md)|Describes an object that can represent the difference between the addresses of any two elements in the controlled sequence.|  \n|[iterator](../standard-library/container-class-iterator.md)|Describes an object that can serve as an iterator for the controlled sequence.|  \n|[reference](../standard-library/container-class-reference.md)|Describes an object that can serve as a reference to an element of the controlled sequence.|  \n|[reverse_iterator](../standard-library/container-class-reverse-iterator.md)|Describes an object that can serve as a reverse iterator for the controlled sequence.|  \n|[size_type](../standard-library/container-class-size-type.md)|Describes an object that can represent the length of any controlled sequence.|  \n|[value_type](../standard-library/container-class-value-type.md)|Acts a synonym for the template parameter **Ty**.|  \n  \n## Member Functions  \n  \n|||  \n|-|-|  \n|[begin](../standard-library/container-class-begin.md)|Returns an iterator that points at the first element of the sequence (or just beyond the end of an empty sequence).|  \n|[clear](../standard-library/container-class-clear.md)|Calls [erase](../standard-library/container-class-erase.md)( [begin](../standard-library/container-class-begin.md), [end](../standard-library/container-class-end.md)).|  \n|[empty](../standard-library/container-class-empty.md)|Returns **true** for an empty controlled sequence.|  \n|[end](../standard-library/container-class-end.md)|Returns an iterator that points just beyond the end of the sequence.|  \n|[erase](../standard-library/container-class-erase.md)|Erases an element.|  \n|[max_size](../standard-library/container-class-max-size.md)|Returns the length of the longest sequence that the object can control, in constant time regardless of the length of the controlled sequence.|  \n|[rbegin](../standard-library/container-class-rbegin.md)|Returns a reverse iterator that points just beyond the end of the controlled sequence, designating the beginning of the reverse sequence.|  \n|[rend](../standard-library/container-class-rend.md)|The member function returns a reverse iterator that points at the first element of the sequence (or just beyond the end of an empty sequence), designating the end of the reverse sequence.|  \n|[size](../standard-library/container-class-size.md)|Returns the length of the controlled sequence, in constant time regardless of the length of the controlled sequence.|  \n|[swap](../standard-library/container-class-swap.md)\n"}