{"nodes":[{"pos":[12,47],"content":"alignment_of Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"alignment_of Class | Microsoft Docs","pos":[0,35]}]},{"content":"alignment_of Class","pos":[772,790]},{"content":"Gets alignment of the specified type.","pos":[791,828]},{"content":"This struct is implemented in terms of <bpt id=\"p1\">[</bpt>alignof<ept id=\"p1\">](../cpp/alignof-and-alignas-cpp.md)</ept>.","pos":[829,913],"source":" This struct is implemented in terms of [alignof](../cpp/alignof-and-alignas-cpp.md)."},{"content":"Use <ph id=\"ph1\">`alignof`</ph> directly when you simply need to query an alignment value.","pos":[914,986],"source":" Use `alignof` directly when you simply need to query an alignment value."},{"content":"Use alignment_of when you need an integral constant, for example when doing tag dispatch.","pos":[987,1076]},{"content":"Syntax","pos":[1085,1091]},{"content":"Parameters","pos":[1156,1166]},{"content":"The type to query.","pos":[1178,1196]},{"content":"Remarks","pos":[1205,1212]},{"pos":[1216,1285],"content":"The type query holds the value of the the alignment of the type <ph id=\"ph1\">`Ty`</ph>.","source":"The type query holds the value of the the alignment of the type `Ty`."},{"content":"Requirements","pos":[1294,1306]},{"pos":[1310,1335],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> &lt;type_traits&gt;","source":"**Header:** <type_traits>"},{"pos":[1342,1360],"content":"<bpt id=\"p1\">**</bpt>Namespace:<ept id=\"p1\">**</ept> std","source":"**Namespace:** std"},{"content":"See Also","pos":[1369,1377]},{"content":"&lt;type_traits&gt;","pos":[1382,1395],"source":"<type_traits>"},{"content":"aligned_storage Class","pos":[1438,1459]}],"content":"---\ntitle: \"alignment_of Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"std.tr1.alignment_of\"\n  - \"std::tr1::alignment_of\"\n  - \"alignment_of\"\n  - \"std.alignment_of\"\n  - \"std::alignment_of\"\n  - \"type_traits/std::alignment_of\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"alignment_of class [TR1]\"\n  - \"alignment_of\"\nms.assetid: 4141c59a-f94e-41c4-93fd-9ea578b27387\ncaps.latest.revision: 22\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# alignment_of Class\nGets alignment of the specified type. This struct is implemented in terms of [alignof](../cpp/alignof-and-alignas-cpp.md). Use `alignof` directly when you simply need to query an alignment value. Use alignment_of when you need an integral constant, for example when doing tag dispatch.  \n  \n## Syntax  \n  \n```\ntemplate <class Ty>\nstruct alignment_of;\n```  \n  \n#### Parameters  \n `Ty`  \n The type to query.  \n  \n## Remarks  \n The type query holds the value of the the alignment of the type `Ty`.  \n  \n## Requirements  \n **Header:** <type_traits>  \n  \n **Namespace:** std  \n  \n## See Also  \n [<type_traits>](../standard-library/type-traits.md)   \n [aligned_storage Class](../standard-library/aligned-storage-class.md)\n"}