{"nodes":[{"pos":[12,63],"content":"is_trivially_move_assignable Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"is_trivially_move_assignable Class | Microsoft Docs","pos":[0,51]}]},{"content":"is_trivially_move_assignable Class","pos":[781,815]},{"content":"Tests whether the type has a trivial move assignment operator.","pos":[816,878]},{"content":"Syntax","pos":[887,893]},{"content":"Parameters","pos":[974,984]},{"content":"The type to query.","pos":[996,1014]},{"content":"Remarks","pos":[1023,1030]},{"pos":[1034,1177],"content":"An instance of the type predicate holds true if the type <ph id=\"ph1\">`Ty`</ph> is a class that has a trivial move assignment operator, otherwise it holds false.","source":"An instance of the type predicate holds true if the type `Ty` is a class that has a trivial move assignment operator, otherwise it holds false."},{"pos":[1184,1242],"content":"A move assignment operator for a class <ph id=\"ph1\">`Ty`</ph> is trivial if:","source":"A move assignment operator for a class `Ty` is trivial if:"},{"content":"it is implicitly provided","pos":[1249,1274]},{"pos":[1281,1320],"content":"the class <ph id=\"ph1\">`Ty`</ph> has no virtual functions","source":"the class `Ty` has no virtual functions"},{"pos":[1327,1362],"content":"the class <ph id=\"ph1\">`Ty`</ph> has no virtual bases","source":"the class `Ty` has no virtual bases"},{"content":"the classes of all the non-static data members of class type have trivial move assignment operators","pos":[1369,1468]},{"content":"the classes of all the non-static data members of type array of class have trivial move assignment operators","pos":[1475,1583]},{"content":"Requirements","pos":[1592,1604]},{"pos":[1608,1633],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> &lt;type_traits&gt;","source":"**Header:** <type_traits>"},{"pos":[1640,1658],"content":"<bpt id=\"p1\">**</bpt>Namespace:<ept id=\"p1\">**</ept> std","source":"**Namespace:** std"},{"content":"See Also","pos":[1667,1675]},{"content":"&lt;type_traits&gt;","pos":[1680,1693],"source":"<type_traits>"}],"content":"---\ntitle: \"is_trivially_move_assignable Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"is_trivially_move_assignable\"\n  - \"std.is_trivially_move_assignable\"\n  - \"std::is_trivially_move_assignable\"\n  - \"type_traits/std::is_trivially_move_assignable\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"is_trivially_move_assignable\"\nms.assetid: 374f7322-0706-4bc1-a1a5-4191d0315e28\ncaps.latest.revision: 11\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# is_trivially_move_assignable Class\nTests whether the type has a trivial move assignment operator.  \n  \n## Syntax  \n  \n```\ntemplate <class Ty>\nstruct is_trivially_move_assignable;\n```  \n  \n#### Parameters  \n `Ty`  \n The type to query.  \n  \n## Remarks  \n An instance of the type predicate holds true if the type `Ty` is a class that has a trivial move assignment operator, otherwise it holds false.  \n  \n A move assignment operator for a class `Ty` is trivial if:  \n  \n it is implicitly provided  \n  \n the class `Ty` has no virtual functions  \n  \n the class `Ty` has no virtual bases  \n  \n the classes of all the non-static data members of class type have trivial move assignment operators  \n  \n the classes of all the non-static data members of type array of class have trivial move assignment operators  \n  \n## Requirements  \n **Header:** <type_traits>  \n  \n **Namespace:** std  \n  \n## See Also  \n [<type_traits>](../standard-library/type-traits.md)\n\n\n\n"}