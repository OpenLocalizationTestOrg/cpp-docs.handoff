{"nodes":[{"pos":[12,55],"content":"Linker Tools Error LNK2028 | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Linker Tools Error LNK2028 | Microsoft Docs","pos":[0,43]}]},{"pos":[607,633],"content":"Linker Tools Error LNK2028","linkify":"Linker Tools Error LNK2028","nodes":[{"content":"Linker Tools Error LNK2028","pos":[0,26]}]},{"content":"\"exported_function\" (decorated_name) referenced in function \"function_containing_function_call\" (decorated_name)","pos":[634,746]},{"content":"When attempting to import a native function into a pure image, remember that the implicit calling conventions differ between native and pure compilations.","pos":[753,907]},{"pos":[916,923],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[927,1070],"content":"This code sample generates a component with an exported, native, function whose calling convention is implicitly <bpt id=\"p1\">[</bpt>__cdecl<ept id=\"p1\">](../../cpp/cdecl.md)</ept>.","source":"This code sample generates a component with an exported, native, function whose calling convention is implicitly [__cdecl](../../cpp/cdecl.md)."},{"pos":[1190,1197],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following sample creates a pure client that consumes the native function.","pos":[1201,1278]},{"content":"However, the calling convention under <bpt id=\"p1\">**</bpt>/clr:pure<ept id=\"p1\">**</ept> is <bpt id=\"p2\">[</bpt>__clrcall<ept id=\"p2\">](../../cpp/clrcall.md)</ept>.","pos":[1279,1368],"source":" However, the calling convention under **/clr:pure** is [__clrcall](../../cpp/clrcall.md)."},{"content":"The following sample generates LNK2028.","pos":[1369,1408]}],"content":"---\ntitle: \"Linker Tools Error LNK2028 | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"error-reference\"\nf1_keywords: \n  - \"LNK2028\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"LNK2028\"\nms.assetid: e2b03293-6066-464d-a050-ce747bcf7f0e\ncaps.latest.revision: 5\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Linker Tools Error LNK2028\n\"exported_function\" (decorated_name) referenced in function \"function_containing_function_call\" (decorated_name)  \n  \n When attempting to import a native function into a pure image, remember that the implicit calling conventions differ between native and pure compilations.  \n  \n## Example  \n This code sample generates a component with an exported, native, function whose calling convention is implicitly [__cdecl](../../cpp/cdecl.md).  \n  \n```  \n// LNK2028.cpp  \n// compile with: /LD  \n__declspec(dllexport) int func() {  \n   return 3;  \n}  \n```  \n  \n## Example  \n The following sample creates a pure client that consumes the native function. However, the calling convention under **/clr:pure** is [__clrcall](../../cpp/clrcall.md). The following sample generates LNK2028.  \n  \n```  \n// LNK2028_b.cpp  \n// compile with: /clr:pure lnk2028.lib  \n// LNK2028 expected  \nint func();  \n  \nint main() {  \n   return func();  \n}  \n```"}