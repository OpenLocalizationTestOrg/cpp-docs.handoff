<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="it-it">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-787e512" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0c26f95acd25c5dbd54d77309f7aa32477882bed</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\mfc\dragging-images-from-an-image-list.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">64ae1ae6a99961d66586a1898970f0dfdaebe422</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e4a29c4b70afc6f3620c30fb6d1179ff07c50574</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Dragging Images from an Image List | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Dragging Images from an Image List</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CImageList<ept id="p1">](../mfc/reference/cimagelist-class.md)</ept> includes functions for dragging an image on the screen.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The dragging functions move an image smoothly, in color, and without any flashing of the cursor.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Both masked and unmasked images can be dragged.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>BeginDrag<ept id="p1">](../mfc/reference/cimagelist-class.md#cimagelist__begindrag)</ept> member function begins a drag operation.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The parameters include the index of the image to drag and the location of the hot spot within the image.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The hot spot is a single pixel that the dragging functions recognize as the exact screen location of the image.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Typically, an application sets the hot spot so that it coincides with the hot spot of the mouse cursor.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>DragMove<ept id="p1">](../mfc/reference/cimagelist-class.md#cimagelist__dragmove)</ept> member function moves the image to a new location.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>DragEnter<ept id="p1">](../mfc/reference/cimagelist-class.md#cimagelist__dragenter)</ept> member function sets the initial position of the drag image within a window and draws the image at the position.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The parameters include a pointer to the window in which to draw the image and a point that specifies the coordinates of the initial position within the window.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The coordinates are relative to the window's upper-left corner, not the client area.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The same is true for all of the image-dragging functions that take coordinates as parameters.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>This means you must compensate for the widths of window elements, such as the border, title bar, and menu bar, when specifying the coordinates.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>If you specify a <bpt id="p1">**</bpt>NULL<ept id="p1">**</ept> window handle when calling <ph id="ph1">`DragEnter`</ph>, the dragging functions draw the image in the device context associated with the desktop window, and the coordinates are relative to the upper-left corner of the screen.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>locks all other updates to the given window during the drag operation.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>If you need to do any drawing during a drag operation, such as highlighting the target of a drag-and-drop operation, you can temporarily hide the dragged image by using the <bpt id="p1">[</bpt>DragLeave<ept id="p1">](../mfc/reference/cimagelist-class.md#cimagelist__dragleave)</ept> member function.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>You can also use the <bpt id="p1">[</bpt>DragShowNoLock<ept id="p1">](../mfc/reference/cimagelist-class.md#cimagelist__dragshownolock)</ept> member function.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Call <bpt id="p1">[</bpt>EndDrag<ept id="p1">](../mfc/reference/cimagelist-class.md#cimagelist__enddrag)</ept> when you're done dragging the image.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>SetDragCursorImage<ept id="p1">](../mfc/reference/cimagelist-class.md#cimagelist__setdragcursorimage)</ept> member function creates a new drag image by combining the given image (typically a mouse cursor image) with the current drag image.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Because the dragging functions use the new image during a drag operation, you should use the Windows <bpt id="p1">[</bpt>ShowCursor<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms648396)</ept> function to hide the actual mouse cursor after calling <ph id="ph1">`SetDragCursorImage`</ph>.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Otherwise, the system may appear to have two mouse cursors for the duration of the drag operation.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>When an application calls <ph id="ph1">`BeginDrag`</ph>, the system creates a temporary, internal image list and copies the specified drag image to the internal list.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>You can retrieve a pointer to the temporary drag image list by using the <bpt id="p1">[</bpt>GetDragImage<ept id="p1">](../mfc/reference/cimagelist-class.md#cimagelist__getdragimage)</ept> member function.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The function also retrieves the current drag position and the offset of the drag image relative to the drag position.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Using CImageList</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Controls</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>