{"nodes":[{"pos":[12,54],"content":"list::pop_front (STL-CLR) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"list::pop_front (STL-CLR) | Microsoft Docs","pos":[0,42]}]},{"content":"list::pop_front (STL/CLR)","pos":[636,661]},{"content":"Removes the first element.","pos":[662,688]},{"content":"Syntax","pos":[697,703]},{"content":"Remarks","pos":[747,754]},{"content":"The member function removes the first element of the controlled sequence, which must be non-empty.","pos":[758,856]},{"content":"You use it to shorten the list by one element at the front.","pos":[857,916]},{"content":"Example","pos":[925,932]},{"content":"Requirements","pos":[1586,1598]},{"pos":[1602,1628],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> <ph id=\"ph1\">\\&lt;</ph>cliext/list&gt;","source":"**Header:** \\<cliext/list>"},{"pos":[1635,1656],"content":"<bpt id=\"p1\">**</bpt>Namespace:<ept id=\"p1\">**</ept> cliext","source":"**Namespace:** cliext"},{"content":"See Also","pos":[1665,1673]},{"content":"list (STL/CLR)","pos":[1678,1692]},{"content":"list::pop_back (STL/CLR)","pos":[1726,1750]},{"content":"list::push_back (STL/CLR)","pos":[1793,1818]},{"content":"list::push_front (STL/CLR)","pos":[1862,1888]}],"content":"---\ntitle: \"list::pop_front (STL-CLR) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"cliext::list::pop_front\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"pop_front member [STL/CLR]\"\nms.assetid: 6a0bad42-6796-41d9-a3e9-1488b3882574\ncaps.latest.revision: 14\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# list::pop_front (STL/CLR)\nRemoves the first element.  \n  \n## Syntax  \n  \n```  \nvoid pop_front();  \n```  \n  \n## Remarks  \n The member function removes the first element of the controlled sequence, which must be non-empty. You use it to shorten the list by one element at the front.  \n  \n## Example  \n  \n```  \n// cliext_list_pop_front.cpp   \n// compile with: /clr   \n#include <cliext/list>   \n  \nint main()   \n    {   \n    cliext::list<wchar_t> c1;   \n    c1.push_back(L'a');   \n    c1.push_back(L'b');   \n    c1.push_back(L'c');   \n  \n// display contents \" a b c\"   \n    for each (wchar_t elem in c1)   \n        System::Console::Write(\" {0}\", elem);   \n    System::Console::WriteLine();   \n  \n// pop an element and redisplay   \n    c1.pop_front();   \n    for each (wchar_t elem in c1)   \n        System::Console::Write(\" {0}\", elem);   \n    System::Console::WriteLine();   \n    return (0);   \n    }  \n  \n```  \n  \n```Output  \na b c  \nb c  \n```  \n  \n## Requirements  \n **Header:** \\<cliext/list>  \n  \n **Namespace:** cliext  \n  \n## See Also  \n [list (STL/CLR)](../dotnet/list-stl-clr.md)   \n [list::pop_back (STL/CLR)](../dotnet/list-pop-back-stl-clr.md)   \n [list::push_back (STL/CLR)](../dotnet/list-push-back-stl-clr.md)   \n [list::push_front (STL/CLR)](../dotnet/list-push-front-stl-clr.md)"}