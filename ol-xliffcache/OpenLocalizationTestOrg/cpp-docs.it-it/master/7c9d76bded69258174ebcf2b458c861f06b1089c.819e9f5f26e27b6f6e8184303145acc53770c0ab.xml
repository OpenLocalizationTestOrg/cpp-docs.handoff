{"nodes":[{"pos":[12,39],"content":"bool (C++) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"bool (C++) | Microsoft Docs","pos":[0,27]}]},{"content":"bool (C++)","pos":[665,675]},{"content":"This keyword is a built-in type.","pos":[676,708]},{"content":"A variable of this type can have values <bpt id=\"p1\">[</bpt>true<ept id=\"p1\">](../cpp/true-cpp.md)</ept> and <bpt id=\"p2\">[</bpt>false<ept id=\"p2\">](../cpp/false-cpp.md)</ept>.","pos":[709,809],"source":" A variable of this type can have values [true](../cpp/true-cpp.md) and [false](../cpp/false-cpp.md)."},{"content":"Conditional expressions have the type <ph id=\"ph1\">`bool`</ph> and so have values of type <ph id=\"ph2\">`bool`</ph>.","pos":[810,889],"source":" Conditional expressions have the type `bool` and so have values of type `bool`."},{"content":"For example, <ph id=\"ph1\">`i!=0`</ph> now has <bpt id=\"p1\">**</bpt>true<ept id=\"p1\">**</ept> or <bpt id=\"p2\">**</bpt>false<ept id=\"p2\">**</ept> depending on the value of <ph id=\"ph2\">`i`</ph>.","pos":[890,970],"source":" For example, `i!=0` now has **true** or **false** depending on the value of `i`."},{"pos":[977,1043],"content":"The values <bpt id=\"p1\">**</bpt>true<ept id=\"p1\">**</ept> and <bpt id=\"p2\">**</bpt>false<ept id=\"p2\">**</ept> have the following relationship:","source":"The values **true** and **false** have the following relationship:"},{"content":"In the following statement:","pos":[1099,1126]},{"pos":[1178,1299],"content":"If <ph id=\"ph1\">`condexpr1`</ph> is <bpt id=\"p1\">**</bpt>true<ept id=\"p1\">**</ept>, <ph id=\"ph2\">`statement1`</ph> is always executed; if <ph id=\"ph3\">`condexpr1`</ph> is <bpt id=\"p2\">**</bpt>false<ept id=\"p2\">**</ept>, <ph id=\"ph4\">`statement1`</ph> is never executed.","source":"If `condexpr1` is **true**, `statement1` is always executed; if `condexpr1` is **false**, `statement1` is never executed."},{"content":"When a postfix or prefix <ph id=\"ph1\">`++`</ph> operator is applied to a variable of type <ph id=\"ph2\">`bool`</ph>, the variable is set to <bpt id=\"p1\">**</bpt>true<ept id=\"p1\">**</ept>.","pos":[1306,1418],"source":"When a postfix or prefix `++` operator is applied to a variable of type `bool`, the variable is set to **true**."},{"content":"The postfix or prefix <ph id=\"ph1\">`--`</ph> operator cannot be applied to a variable of this type.","pos":[1419,1500],"source":" The postfix or prefix `--` operator cannot be applied to a variable of this type."},{"content":"The <ph id=\"ph1\">`bool`</ph> type participates in integral promotions.","pos":[1507,1559],"source":"The `bool` type participates in integral promotions."},{"content":"An r-value of type <ph id=\"ph1\">`bool`</ph> can be converted to an r-value of type <ph id=\"ph2\">`int`</ph>, with <bpt id=\"p1\">**</bpt>false<ept id=\"p1\">**</ept> becoming zero and <bpt id=\"p2\">**</bpt>true<ept id=\"p2\">**</ept> becoming one.","pos":[1560,1687],"source":" An r-value of type `bool` can be converted to an r-value of type `int`, with **false** becoming zero and **true** becoming one."},{"content":"As a distinct type, <ph id=\"ph1\">`bool`</ph> participates in overload resolution.","pos":[1688,1751],"source":" As a distinct type, `bool` participates in overload resolution."},{"content":"See Also","pos":[1760,1768]},{"content":"Keywords","pos":[1773,1781]},{"content":"Fundamental Types","pos":[1812,1829]}],"content":"---\ntitle: \"bool (C++) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"language-reference\"\nf1_keywords: \n  - \"bool_cpp\"\n  - \"bool\"\n  - \"__BOOL_DEFINED\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"bool keyword [C++]\"\n  - \"__BOOL_DEFINED macro\"\nms.assetid: 9abed3f2-d21c-4eb4-97c5-716342e613d8\ncaps.latest.revision: 9\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# bool (C++)\nThis keyword is a built-in type. A variable of this type can have values [true](../cpp/true-cpp.md) and [false](../cpp/false-cpp.md). Conditional expressions have the type `bool` and so have values of type `bool`. For example, `i!=0` now has **true** or **false** depending on the value of `i`.  \n  \n The values **true** and **false** have the following relationship:  \n  \n```  \n!false == true  \n!true == false  \n```  \n  \n In the following statement:  \n  \n```  \nif (condexpr1) statement1;   \n```  \n  \n If `condexpr1` is **true**, `statement1` is always executed; if `condexpr1` is **false**, `statement1` is never executed.  \n  \n When a postfix or prefix `++` operator is applied to a variable of type `bool`, the variable is set to **true**. The postfix or prefix `--` operator cannot be applied to a variable of this type.  \n  \n The `bool` type participates in integral promotions. An r-value of type `bool` can be converted to an r-value of type `int`, with **false** becoming zero and **true** becoming one. As a distinct type, `bool` participates in overload resolution.  \n  \n## See Also  \n [Keywords](../cpp/keywords-cpp.md)   \n [Fundamental Types](../cpp/fundamental-types-cpp.md)"}