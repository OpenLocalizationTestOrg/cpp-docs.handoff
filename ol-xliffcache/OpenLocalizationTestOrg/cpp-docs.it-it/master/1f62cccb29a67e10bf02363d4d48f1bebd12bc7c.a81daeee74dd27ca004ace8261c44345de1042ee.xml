{"nodes":[{"pos":[12,57],"content":"&lt;type_traits&gt; typedefs | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&amp;lt;</ph>type_traits<ph id=\"ph2\">&amp;gt;</ph> typedefs | Microsoft Docs","pos":[0,45],"source":"&lt;type_traits&gt; typedefs | Microsoft Docs"}]},{"pos":[260,288],"content":"&lt;type_traits&gt; typedefs","linkify":"&lt;type_traits&gt; typedefs","nodes":[{"content":"<ph id=\"ph1\">&amp;lt;</ph>type_traits<ph id=\"ph2\">&amp;gt;</ph> typedefs","pos":[0,28],"source":"&lt;type_traits&gt; typedefs"}]},{"pos":[304,345],"content":"<bpt id=\"p1\">[</bpt>false_type Typedef<ept id=\"p1\">](#false_type_typedef)</ept>","source":"[false_type Typedef](#false_type_typedef)"},{"pos":[346,385],"content":"<bpt id=\"p1\">[</bpt>true_type Typedef<ept id=\"p1\">](#true_type_typedef)</ept>","source":"[true_type Typedef](#true_type_typedef)"},{"pos":[396,449],"content":"<bpt id=\"p1\">&lt;a name=\"false_type_typedef\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  false_type Typedef","linkify":"<a name=\"false_type_typedef\"></a>  false_type Typedef","source":"<a name=\"false_type_typedef\"></a>  false_type Typedef"},{"content":"Holds integral constant with false value.","pos":[453,494]},{"pos":[572,579],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[583,662],"content":"The type is a synonym for a specialization of the template <ph id=\"ph1\">`integral_constant`</ph>.","source":"The type is a synonym for a specialization of the template `integral_constant`."},{"pos":[672,679],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[1088,1139],"content":"<bpt id=\"p1\">&lt;a name=\"true_type_typedef\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  true_type Typedef","linkify":"<a name=\"true_type_typedef\"></a>  true_type Typedef","source":"<a name=\"true_type_typedef\"></a>  true_type Typedef"},{"content":"Holds integral constant with true value.","pos":[1143,1183]},{"pos":[1259,1266],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[1270,1349],"content":"The type is a synonym for a specialization of the template <ph id=\"ph1\">`integral_constant`</ph>.","source":"The type is a synonym for a specialization of the template `integral_constant`."},{"pos":[1359,1366],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[1842,1850],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"pos":[1854,1905],"content":"<bpt id=\"p1\">[</bpt>&lt;type_traits&gt;<ept id=\"p1\">](../standard-library/type-traits.md)</ept>","source":"[<type_traits>](../standard-library/type-traits.md)"}],"content":"---\ntitle: \"&lt;type_traits&gt; typedefs | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nms.assetid: 8ac040ca-ed2d-4570-adc9-cb5626530053\ncaps.latest.revision: 13\nmanager: \"ghogen\"\n---\n# &lt;type_traits&gt; typedefs\n|||  \n|-|-|  \n|[false_type Typedef](#false_type_typedef)|[true_type Typedef](#true_type_typedef)|  \n  \n##  <a name=\"false_type_typedef\"></a>  false_type Typedef  \n Holds integral constant with false value.  \n  \n```  \ntypedef integral_constant<bool, false> false_type;  \n```  \n  \n### Remarks  \n The type is a synonym for a specialization of the template `integral_constant`.  \n  \n### Example  \n  \n```cpp  \n#include <type_traits>   \n#include <iostream>   \n  \nint main()   \n    {   \n    std::cout << \"false_type == \" << std::boolalpha   \n        << std::false_type::value << std::endl;   \n    std::cout << \"true_type == \" << std::boolalpha   \n        << std::true_type::value << std::endl;   \n  \n    return (0);   \n    }  \n  \n```  \n  \n```Output  \nfalse_type == false  \ntrue_type == true  \n```  \n  \n##  <a name=\"true_type_typedef\"></a>  true_type Typedef  \n Holds integral constant with true value.  \n  \n```  \ntypedef integral_constant<bool, true> true_type;  \n```  \n  \n### Remarks  \n The type is a synonym for a specialization of the template `integral_constant`.  \n  \n### Example  \n  \n```cpp  \n// std_tr1__type_traits__true_type.cpp   \n// compile with: /EHsc   \n#include <type_traits>   \n#include <iostream>   \n  \nint main()   \n    {   \n    std::cout << \"false_type == \" << std::boolalpha   \n        << std::false_type::value << std::endl;   \n    std::cout << \"true_type == \" << std::boolalpha   \n        << std::true_type::value << std::endl;   \n  \n    return (0);   \n    }  \n  \n```  \n  \n```Output  \nfalse_type == false  \ntrue_type == true  \n```  \n  \n## See Also  \n [<type_traits>](../standard-library/type-traits.md)\n\n"}