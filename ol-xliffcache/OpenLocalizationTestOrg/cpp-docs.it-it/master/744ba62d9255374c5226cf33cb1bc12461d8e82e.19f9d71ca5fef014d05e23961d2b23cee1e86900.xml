{"nodes":[{"pos":[12,42],"content":"_U_RECT Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"_U_RECT Class | Microsoft Docs","pos":[0,30]}]},{"pos":[651,664],"content":"_U_RECT Class","linkify":"_U_RECT Class","nodes":[{"content":"_U_RECT Class","pos":[0,13]}]},{"pos":[665,805],"content":"This argument adapter class allows either <ph id=\"ph1\">`RECT`</ph> pointers or references to be passed to a function that is implemented in terms of pointers.","source":"This argument adapter class allows either `RECT` pointers or references to be passed to a function that is implemented in terms of pointers."},{"pos":[813,923],"content":"[!IMPORTANT]\n This class and its members cannot be used in applications that execute in the Windows Runtime.","leadings":["","> "],"nodes":[{"content":"This class and its members cannot be used in applications that execute in the Windows Runtime.","pos":[14,108]}]},{"pos":[932,938],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"content":"LPRECT m_lpRect;","pos":[1846,1862]},{"content":"_U_RECT(RECT&amp; rc);","pos":[2053,2071],"source":"_U_RECT(RECT& rc);"}],"content":"---\ntitle: \"_U_RECT Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"ATL::_U_RECT\"\n  - \"_U_RECT\"\n  - \"ATL._U_RECT\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"U_RECT class\"\n  - \"_U_RECT class\"\nms.assetid: 5f880a2d-09cf-4327-bf32-a3519c4dcd63\ncaps.latest.revision: 20\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# _U_RECT Class\nThis argument adapter class allows either `RECT` pointers or references to be passed to a function that is implemented in terms of pointers.  \n  \n> [!IMPORTANT]\n>  This class and its members cannot be used in applications that execute in the Windows Runtime.  \n  \n## Syntax  \n  \n```\nclass _U_RECT```  \n  \n## Members  \n  \n### Public Constructors  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[_U_RECT::_U_RECT](#_u_rect___u_rect)|The constructor.|  \n  \n### Public Data Members  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[_U_RECT::m_lpRect](#_u_rect__m_lprect)|Pointer to a `RECT`.|  \n  \n## Remarks  \n The class defines two constructor overloads: one accepts a **RECT&** argument and the other accepts an `LPRECT` argument. The first constructor stores the address of the reference argument in the class's single data member, [m_lpRect](#_u_rect__m_lprect). The argument to the pointer constructor is stored directly without conversion.  \n  \n## Requirements  \n **Header:** atlwin.h  \n  \n##  <a name=\"_u_rect__m_lprect\"></a>  _U_RECT::m_lpRect  \n The class holds the value passed to either of its constructors as a public `LPRECT` data member.  \n  \n```\nLPRECT m_lpRect;\n```  \n  \n##  <a name=\"_u_rect___u_rect\"></a>  _U_RECT::_U_RECT  \n The address of the reference argument is stored in the class's single data member, [m_lpRect](#_u_rect__m_lprect).  \n  \n```\n_U_RECT(RECT& rc);\n\n    _U_RECT(LPRECT lpRect);\n```  \n  \n### Parameters  \n `rc`  \n A `RECT` reference.  \n  \n `lpRect`  \n A `RECT` pointer.  \n  \n### Remarks  \n The argument to the pointer constructor is stored directly without conversion.  \n  \n## See Also  \n [Class Overview](../../atl/atl-class-overview.md)\n"}