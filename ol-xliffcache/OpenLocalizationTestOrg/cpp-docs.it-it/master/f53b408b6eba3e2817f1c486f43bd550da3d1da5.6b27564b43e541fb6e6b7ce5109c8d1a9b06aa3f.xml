{"nodes":[{"pos":[12,49],"content":"list::rend (STL-CLR) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"list::rend (STL-CLR) | Microsoft Docs","pos":[0,37]}]},{"content":"list::rend (STL/CLR)","pos":[647,667]},{"content":"Designates the end of the reversed controlled sequence.","pos":[668,723]},{"content":"Syntax","pos":[732,738]},{"content":"Remarks","pos":[789,796]},{"content":"The member function returns a reverse iterator that points just beyond the beginning of the controlled sequence.","pos":[800,912]},{"content":"Hence, it designates the <ph id=\"ph1\">`end`</ph> of the reverse sequence.","pos":[913,968],"source":" Hence, it designates the `end` of the reverse sequence."},{"content":"You use it to obtain an iterator that designates the <ph id=\"ph1\">`current`</ph> end of the controlled sequence seen in reverse order, but its status can change if the length of the controlled sequence changes.","pos":[969,1161],"source":" You use it to obtain an iterator that designates the `current` end of the controlled sequence seen in reverse order, but its status can change if the length of the controlled sequence changes."},{"content":"Example","pos":[1170,1177]},{"content":"Requirements","pos":[2139,2151]},{"pos":[2155,2181],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> <ph id=\"ph1\">\\&lt;</ph>cliext/list&gt;","source":"**Header:** \\<cliext/list>"},{"pos":[2188,2209],"content":"<bpt id=\"p1\">**</bpt>Namespace:<ept id=\"p1\">**</ept> cliext","source":"**Namespace:** cliext"},{"content":"See Also","pos":[2218,2226]},{"content":"list (STL/CLR)","pos":[2231,2245]},{"content":"list::begin (STL/CLR)","pos":[2279,2300]},{"content":"list::end (STL/CLR)","pos":[2340,2359]},{"content":"list::rbegin (STL/CLR)","pos":[2397,2419]}],"content":"---\ntitle: \"list::rend (STL-CLR) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"cliext::list::rend\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"rend member [STL/CLR]\"\nms.assetid: b51030ad-1bca-42b0-b890-db47111d2921\ncaps.latest.revision: 16\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"ru-ru\"\n  - \"zh-cn\"\n  - \"zh-tw\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"tr-tr\"\n---\n# list::rend (STL/CLR)\nDesignates the end of the reversed controlled sequence.  \n  \n## Syntax  \n  \n```  \nreverse_iterator rend();  \n```  \n  \n## Remarks  \n The member function returns a reverse iterator that points just beyond the beginning of the controlled sequence. Hence, it designates the `end` of the reverse sequence. You use it to obtain an iterator that designates the `current` end of the controlled sequence seen in reverse order, but its status can change if the length of the controlled sequence changes.  \n  \n## Example  \n  \n```  \n// cliext_list_rend.cpp   \n// compile with: /clr   \n#include <cliext/list>   \n  \nint main()   \n    {   \n    cliext::list<wchar_t> c1;   \n    c1.push_back(L'a');   \n    c1.push_back(L'b');   \n    c1.push_back(L'c');   \n  \n// display initial contents \" a b c\"   \n    for each (wchar_t elem in c1)   \n        System::Console::Write(\" {0}\", elem);   \n    System::Console::WriteLine();   \n  \n// inspect first two items   \n    cliext::list<wchar_t>::reverse_iterator rit = c1.rend();   \n    --rit;   \n    System::Console::WriteLine(\"*-- --rend() = {0}\", *--rit);   \n    System::Console::WriteLine(\"*--rend() = {0}\", *++rit);   \n  \n// alter first two items and reinspect   \n    *--rit = L'x';   \n    *++rit = L'y';   \n    for each (wchar_t elem in c1)   \n        System::Console::Write(\" {0}\", elem);   \n    System::Console::WriteLine();   \n    return (0);   \n    }  \n  \n```  \n  \n```Output  \n a b c  \n*-- --rend() = b  \n*--rend() = a  \n y x c  \n```  \n  \n## Requirements  \n **Header:** \\<cliext/list>  \n  \n **Namespace:** cliext  \n  \n## See Also  \n [list (STL/CLR)](../dotnet/list-stl-clr.md)   \n [list::begin (STL/CLR)](../dotnet/list-begin-stl-clr.md)   \n [list::end (STL/CLR)](../dotnet/list-end-stl-clr.md)   \n [list::rbegin (STL/CLR)](../dotnet/list-rbegin-stl-clr.md)"}