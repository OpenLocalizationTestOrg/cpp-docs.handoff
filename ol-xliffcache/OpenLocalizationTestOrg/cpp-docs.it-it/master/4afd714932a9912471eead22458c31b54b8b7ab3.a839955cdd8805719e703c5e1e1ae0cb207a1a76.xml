{"nodes":[{"pos":[12,63],"content":"CAtlServiceModuleT::Start Function | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"CAtlServiceModuleT::Start Function | Microsoft Docs","pos":[0,51]}]},{"content":"CAtlServiceModuleT::Start Function","pos":[654,688]},{"pos":[689,815],"content":"When the service is run, <bpt id=\"p1\">**</bpt>_tWinMain<ept id=\"p1\">**</ept> calls <bpt id=\"p2\">**</bpt>CAtlServiceModuleT::WinMain<ept id=\"p2\">**</ept>, which in turn calls <ph id=\"ph1\">`CAtlServiceModuleT::Start`</ph>.","source":"When the service is run, **_tWinMain** calls **CAtlServiceModuleT::WinMain**, which in turn calls `CAtlServiceModuleT::Start`."},{"content":"sets up an array of <bpt id=\"p1\">**</bpt>SERVICE_TABLE_ENTRY<ept id=\"p1\">**</ept> structures that map each service to its startup function.","pos":[850,951],"source":" sets up an array of **SERVICE_TABLE_ENTRY** structures that map each service to its startup function."},{"content":"This array is then passed to the Win32 API function, <bpt id=\"p1\">[</bpt>StartServiceCtrlDispatcher<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms686324)</ept>.","pos":[952,1094],"source":" This array is then passed to the Win32 API function, [StartServiceCtrlDispatcher](http://msdn.microsoft.com/library/windows/desktop/ms686324)."},{"content":"In theory, one EXE could handle multiple services and the array could have multiple <bpt id=\"p1\">**</bpt>SERVICE_TABLE_ENTRY<ept id=\"p1\">**</ept> structures.","pos":[1095,1214],"source":" In theory, one EXE could handle multiple services and the array could have multiple **SERVICE_TABLE_ENTRY** structures."},{"content":"Currently, however, an ATL-generated service supports only one service per EXE.","pos":[1215,1294]},{"content":"Therefore, the array has a single entry that contains the service name and <bpt id=\"p1\">**</bpt>_ServiceMain<ept id=\"p1\">**</ept> as the startup function.","pos":[1295,1411],"source":" Therefore, the array has a single entry that contains the service name and **_ServiceMain** as the startup function."},{"content":"<bpt id=\"p1\">**</bpt>_ServiceMain<ept id=\"p1\">**</ept> is a static member function of <ph id=\"ph1\">`CAtlServiceModuleT`</ph> that calls the non-static member function, <ph id=\"ph2\">`ServiceMain`</ph>.","pos":[1412,1538],"source":"**_ServiceMain** is a static member function of `CAtlServiceModuleT` that calls the non-static member function, `ServiceMain`."},{"pos":[1546,1935],"content":"[!NOTE]\n Failure of **StartServiceCtrlDispatcher** to connect to the service control manager (SCM) probably means that the program is not running as a service. In this case, the program calls `CAtlServiceModuleT::Run` directly so that the program can run as a local server. For more information about running the program as a local server, see [Debugging Tips](../atl/debugging-tips.md).","leadings":["","> "],"nodes":[{"content":" Failure of **StartServiceCtrlDispatcher** to connect to the service control manager (SCM) probably means that the program is not running as a service. In this case, the program calls `CAtlServiceModuleT::Run` directly so that the program can run as a local server. For more information about running the program as a local server, see [Debugging Tips](../atl/debugging-tips.md).","pos":[8,387],"nodes":[{"content":"Failure of <bpt id=\"p1\">**</bpt>StartServiceCtrlDispatcher<ept id=\"p1\">**</ept> to connect to the service control manager (SCM) probably means that the program is not running as a service.","pos":[1,151],"source":" Failure of **StartServiceCtrlDispatcher** to connect to the service control manager (SCM) probably means that the program is not running as a service."},{"content":"In this case, the program calls <ph id=\"ph1\">`CAtlServiceModuleT::Run`</ph> directly so that the program can run as a local server.","pos":[152,265],"source":" In this case, the program calls `CAtlServiceModuleT::Run` directly so that the program can run as a local server."},{"content":"For more information about running the program as a local server, see <bpt id=\"p1\">[</bpt>Debugging Tips<ept id=\"p1\">](../atl/debugging-tips.md)</ept>.","pos":[266,379],"source":" For more information about running the program as a local server, see [Debugging Tips](../atl/debugging-tips.md)."}]}]},{"content":"See Also","pos":[1944,1952]},{"content":"Services","pos":[1957,1965]},{"content":"CAtlServiceModuleT::Start","pos":[1996,2021]}],"content":"---\ntitle: \"CAtlServiceModuleT::Start Function | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"CServiceModule.Start\"\n  - \"CServiceModule::Start\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"Start method\"\nms.assetid: b5193a23-41bc-42d2-8d55-3eb43dc62238\ncaps.latest.revision: 10\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# CAtlServiceModuleT::Start Function\nWhen the service is run, **_tWinMain** calls **CAtlServiceModuleT::WinMain**, which in turn calls `CAtlServiceModuleT::Start`.  \n  \n `CAtlServiceModuleT::Start` sets up an array of **SERVICE_TABLE_ENTRY** structures that map each service to its startup function. This array is then passed to the Win32 API function, [StartServiceCtrlDispatcher](http://msdn.microsoft.com/library/windows/desktop/ms686324). In theory, one EXE could handle multiple services and the array could have multiple **SERVICE_TABLE_ENTRY** structures. Currently, however, an ATL-generated service supports only one service per EXE. Therefore, the array has a single entry that contains the service name and **_ServiceMain** as the startup function. **_ServiceMain** is a static member function of `CAtlServiceModuleT` that calls the non-static member function, `ServiceMain`.  \n  \n> [!NOTE]\n>  Failure of **StartServiceCtrlDispatcher** to connect to the service control manager (SCM) probably means that the program is not running as a service. In this case, the program calls `CAtlServiceModuleT::Run` directly so that the program can run as a local server. For more information about running the program as a local server, see [Debugging Tips](../atl/debugging-tips.md).  \n  \n## See Also  \n [Services](../atl/atl-services.md)   \n [CAtlServiceModuleT::Start](../atl/reference/catlservicemodulet-class.md#catlservicemodulet__start)\n\n"}