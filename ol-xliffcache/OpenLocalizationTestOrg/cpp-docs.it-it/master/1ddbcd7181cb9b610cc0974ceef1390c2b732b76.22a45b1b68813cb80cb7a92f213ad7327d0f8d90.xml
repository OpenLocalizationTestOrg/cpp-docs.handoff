{"nodes":[{"pos":[12,55],"content":"auto_handle::operator bool | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"auto_handle::operator bool | Microsoft Docs","pos":[0,43]}]},{"content":"auto_handle::operator bool","pos":[770,796]},{"pos":[797,858],"content":"Operator for using <ph id=\"ph1\">`auto_handle`</ph> in a conditional expression.","source":"Operator for using `auto_handle` in a conditional expression."},{"content":"Syntax","pos":[867,873]},{"content":"Return Value","pos":[916,928]},{"pos":[939,989],"content":"if the wrapped object is valid; <ph id=\"ph1\">`false`</ph> otherwise.","source":" if the wrapped object is valid; `false` otherwise."},{"content":"Remarks","pos":[998,1005]},{"pos":[1009,1150],"content":"This operator actually converts to <ph id=\"ph1\">`_detail_class::_safe_bool`</ph> which is safer than <ph id=\"ph2\">`bool`</ph> because it cannot be converted to an integral type.","source":"This operator actually converts to `_detail_class::_safe_bool` which is safer than `bool` because it cannot be converted to an integral type."},{"content":"Example","pos":[1159,1166]},{"content":"Requirements","pos":[1844,1856]},{"pos":[1860,1898],"content":"<bpt id=\"p1\">**</bpt>Header file<ept id=\"p1\">**</ept> <ph id=\"ph1\">\\&lt;</ph>msclr\\auto_handle.h&gt;","source":"**Header file** \\<msclr\\auto_handle.h>"},{"pos":[1905,1924],"content":"<bpt id=\"p1\">**</bpt>Namespace<ept id=\"p1\">**</ept> msclr","source":"**Namespace** msclr"},{"content":"See Also","pos":[1933,1941]},{"content":"auto_handle Members","pos":[1946,1965]},{"content":"auto_handle::operator!","pos":[2006,2028]}],"content":"---\ntitle: \"auto_handle::operator bool | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"auto_handle.operator bool\"\n  - \"msclr.auto_handle.operator bool\"\n  - \"operator bool\"\n  - \"msclr::auto_handle::operator bool\"\n  - \"auto_handle::operator bool\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"auto_handle::operator bool\"\nms.assetid: 2e535e99-cf87-4008-b588-02c587d77453\ncaps.latest.revision: 12\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# auto_handle::operator bool\nOperator for using `auto_handle` in a conditional expression.  \n  \n## Syntax  \n  \n```  \noperator bool();  \n```  \n  \n## Return Value  \n `true` if the wrapped object is valid; `false` otherwise.  \n  \n## Remarks  \n This operator actually converts to `_detail_class::_safe_bool` which is safer than `bool` because it cannot be converted to an integral type.  \n  \n## Example  \n  \n```  \n// msl_auto_handle_operator_bool.cpp  \n// compile with: /clr  \n#include <msclr\\auto_handle.h>  \n  \nusing namespace System;  \nusing namespace msclr;  \n  \nint main() {  \n   auto_handle<String> s1;  \n   auto_handle<String> s2 = \"hi\";  \n   if ( s1 ) Console::WriteLine( \"s1 is valid\" );  \n   if ( !s1 ) Console::WriteLine( \"s1 is invalid\" );  \n   if ( s2 ) Console::WriteLine( \"s2 is valid\" );  \n   if ( !s2 ) Console::WriteLine( \"s2 is invalid\" );  \n   s2.reset();  \n   if ( s2 ) Console::WriteLine( \"s2 is now valid\" );  \n   if ( !s2 ) Console::WriteLine( \"s2 is now invalid\" );  \n}  \n```  \n  \n```Output  \ns1 is invalid  \ns2 is valid  \ns2 is now invalid  \n```  \n  \n## Requirements  \n **Header file** \\<msclr\\auto_handle.h>  \n  \n **Namespace** msclr  \n  \n## See Also  \n [auto_handle Members](../dotnet/auto-handle-members.md)   \n [auto_handle::operator!](../dotnet/auto-handle-operator-logical-not.md)"}