{"nodes":[{"pos":[12,50],"content":"underlying_type Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"underlying_type Class | Microsoft Docs","pos":[0,38]}]},{"pos":[724,745],"content":"underlying_type Class","linkify":"underlying_type Class","nodes":[{"content":"underlying_type Class","pos":[0,21]}]},{"content":"Produces the underlying integral type for an enumeration type.","pos":[746,808]},{"pos":[817,823],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[892,902],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"The type to modify.","pos":[913,932]},{"pos":[941,948],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[952,1120],"content":"The <ph id=\"ph1\">`type`</ph> member typedef of the template class names the underlying integral type of <ph id=\"ph2\">`T`</ph>, when <ph id=\"ph3\">`T`</ph> is an enumeration type, otherwise there is no member typedef <ph id=\"ph4\">`type`</ph>.","source":"The `type` member typedef of the template class names the underlying integral type of `T`, when `T` is an enumeration type, otherwise there is no member typedef `type`."},{"pos":[1129,1141],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[1145,1170],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> &lt;type_traits&gt;","source":"**Header:** <type_traits>"},{"pos":[1177,1195],"content":"<bpt id=\"p1\">**</bpt>Namespace:<ept id=\"p1\">**</ept> std","source":"**Namespace:** std"},{"pos":[1204,1212],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"pos":[1216,1267],"content":"<bpt id=\"p1\">[</bpt>&lt;type_traits&gt;<ept id=\"p1\">](../standard-library/type-traits.md)</ept>","source":"[<type_traits>](../standard-library/type-traits.md)"}],"content":"---\ntitle: \"underlying_type Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"cpp\"\n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"language-reference\"\nf1_keywords: \n  - \"underlying_type\"\n  - \"std.underlying_type\"\n  - \"std::underlying_type\"\n  - \"type_traits/std::underlying_type\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"underlying_type\"\nms.assetid: 691ddce3-2677-4480-bd35-d933fab85d3e\ncaps.latest.revision: 13\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# underlying_type Class\nProduces the underlying integral type for an enumeration type.  \n  \n## Syntax  \n  \n```\ntemplate <class T>  \nstruct underlying_type;\n```  \n  \n#### Parameters  \n `T`  \n The type to modify.  \n  \n## Remarks  \n The `type` member typedef of the template class names the underlying integral type of `T`, when `T` is an enumeration type, otherwise there is no member typedef `type`.  \n  \n## Requirements  \n **Header:** <type_traits>  \n  \n **Namespace:** std  \n  \n## See Also  \n [<type_traits>](../standard-library/type-traits.md)\n\n\n\n"}