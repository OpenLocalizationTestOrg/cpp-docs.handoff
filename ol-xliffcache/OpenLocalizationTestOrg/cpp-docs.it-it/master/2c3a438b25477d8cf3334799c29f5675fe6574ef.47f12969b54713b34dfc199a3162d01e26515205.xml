{"nodes":[{"pos":[12,74],"content":"DeferrableEventArgs::InvokeAllFinished Method | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"DeferrableEventArgs::InvokeAllFinished Method | Microsoft Docs","pos":[0,62]}]},{"content":"DeferrableEventArgs::InvokeAllFinished Method","pos":[556,601]},{"content":"Called to indicate that all processing to handle a deferred event is complete.","pos":[602,680]},{"content":"Syntax","pos":[689,695]},{"content":"Remarks","pos":[749,756]},{"content":"You should call this method after the event source calls <bpt id=\"p1\">[</bpt>InvokeAll<ept id=\"p1\">](../windows/eventsource-invokeall-method.md)</ept>.","pos":[760,873],"source":"You should call this method after the event source calls [InvokeAll](../windows/eventsource-invokeall-method.md)."},{"content":"Calling this method prevents further deferrals from being taken and forces the completion handler to execute if no deferrals were taken.","pos":[874,1010]},{"pos":[1017,1110],"content":"For a code example, see <bpt id=\"p1\">[</bpt>DeferrableEventArgs Class<ept id=\"p1\">](../windows/deferrableeventargs-class.md)</ept>.","source":"For a code example, see [DeferrableEventArgs Class](../windows/deferrableeventargs-class.md)."},{"content":"Requirements","pos":[1119,1131]},{"pos":[1135,1154],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> event.h","source":"**Header:** event.h"},{"pos":[1161,1190],"content":"<bpt id=\"p1\">**</bpt>Namespace:<ept id=\"p1\">**</ept> Microsoft::WRL","source":"**Namespace:** Microsoft::WRL"},{"content":"See Also","pos":[1199,1207]},{"content":"DeferrableEventArgs Class","pos":[1212,1237]},{"content":"EventSource::InvokeAll Method","pos":[1285,1314]}],"content":"---\ntitle: \"DeferrableEventArgs::InvokeAllFinished Method | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\ndev_langs: \n  - \"C++\"\nms.assetid: 86b45205-3edb-4134-9cd0-ed7a7b4c3b1a\ncaps.latest.revision: 3\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# DeferrableEventArgs::InvokeAllFinished Method\nCalled to indicate that all processing to handle a deferred event is complete.  \n  \n## Syntax  \n  \n```cpp  \nvoid InvokeAllFinished()  \n```  \n  \n## Remarks  \n You should call this method after the event source calls [InvokeAll](../windows/eventsource-invokeall-method.md). Calling this method prevents further deferrals from being taken and forces the completion handler to execute if no deferrals were taken.  \n  \n For a code example, see [DeferrableEventArgs Class](../windows/deferrableeventargs-class.md).  \n  \n## Requirements  \n **Header:** event.h  \n  \n **Namespace:** Microsoft::WRL  \n  \n## See Also  \n [DeferrableEventArgs Class](../windows/deferrableeventargs-class.md)   \n [EventSource::InvokeAll Method](../windows/eventsource-invokeall-method.md)"}