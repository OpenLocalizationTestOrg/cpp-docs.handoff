{"nodes":[{"pos":[12,44],"content":"_rmdir, _wrmdir | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"_rmdir, _wrmdir | Microsoft Docs","pos":[0,32]}]},{"content":"_rmdir, _wrmdir","pos":[1162,1177]},{"content":"Deletes a directory.","pos":[1178,1198]},{"content":"Syntax","pos":[1207,1213]},{"content":"Parameters","pos":[1342,1352]},{"content":"Path of the directory to be removed.","pos":[1369,1405]},{"content":"Return Value","pos":[1414,1426]},{"content":"Each of these functions returns 0 if the directory is successfully deleted.","pos":[1430,1505]},{"content":"A return value of –1 indicates an error and <ph id=\"ph1\">`errno`</ph> is set to one of the following values:","pos":[1506,1596],"source":" A return value of –1 indicates an error and `errno` is set to one of the following values:"},{"content":"ENOTEMPTY","pos":[1605,1614]},{"content":"Given path is not a directory, the directory is not empty, or the directory is either the current working directory or the root directory.","pos":[1620,1758]},{"content":"Path is invalid.","pos":[1777,1793]},{"content":"EACCES","pos":[1802,1808]},{"content":"A program has an open handle to the directory.","pos":[1814,1860]},{"pos":[1867,2044],"content":"For more information about these and other return codes, see <bpt id=\"p1\">[</bpt>_doserrno, errno, _sys_errlist, and _sys_nerr<ept id=\"p1\">](../../c-runtime-library/errno-doserrno-sys-errlist-and-sys-nerr.md)</ept>.","source":"For more information about these and other return codes, see [_doserrno, errno, _sys_errlist, and _sys_nerr](../../c-runtime-library/errno-doserrno-sys-errlist-and-sys-nerr.md)."},{"content":"Remarks","pos":[2053,2060]},{"content":"The <ph id=\"ph1\">`_rmdir`</ph> function deletes the directory specified by <ph id=\"ph2\">`dirname`</ph>.","pos":[2064,2131],"source":"The `_rmdir` function deletes the directory specified by `dirname`."},{"content":"The directory must be empty, and it must not be the current working directory or the root directory.","pos":[2132,2232]},{"content":"is a wide-character version of <ph id=\"ph1\">`_rmdir`</ph>; the <ph id=\"ph2\">`dirname`</ph> argument to <ph id=\"ph3\">`_wrmdir`</ph> is a wide-character string.","pos":[2249,2353],"source":" is a wide-character version of `_rmdir`; the `dirname` argument to `_wrmdir` is a wide-character string."},{"content":"and <ph id=\"ph1\">`_rmdir`</ph> behave identically otherwise.","pos":[2364,2406],"source":" and `_rmdir` behave identically otherwise."},{"content":"Generic-Text Routine Mappings","pos":[2416,2445]},{"content":"Tchar.h routine","pos":[2452,2467]},{"content":"_UNICODE and _MBCS not defined","pos":[2468,2498]},{"content":"_MBCS defined","pos":[2499,2512]},{"content":"_UNICODE defined","pos":[2513,2529]},{"content":"Requirements","pos":[2691,2703]},{"content":"Routine","pos":[2710,2717]},{"content":"Required header","pos":[2718,2733]},{"content":"direct.h&gt;","pos":[2789,2798],"source":"direct.h>"},{"content":"direct.h&gt; or <ph id=\"ph1\">\\&lt;</ph>wchar.h&gt;","pos":[2815,2838],"source":"direct.h> or \\<wchar.h>"},{"pos":[2846,2964],"content":"For more compatibility information, see <bpt id=\"p1\">[</bpt>Compatibility<ept id=\"p1\">](../../c-runtime-library/compatibility.md)</ept> in the Introduction.","source":"For more compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md) in the Introduction."},{"content":"Libraries","pos":[2973,2982]},{"pos":[2986,3078],"content":"All versions of the <bpt id=\"p1\">[</bpt>C run-time libraries<ept id=\"p1\">](../../c-runtime-library/crt-library-features.md)</ept>.","source":"All versions of the [C run-time libraries](../../c-runtime-library/crt-library-features.md)."},{"content":"Example","pos":[3087,3094]},{"pos":[3098,3178],"content":"See the example for <bpt id=\"p1\">[</bpt>_mkdir<ept id=\"p1\">](../../c-runtime-library/reference/mkdir-wmkdir.md)</ept>.","source":"See the example for [_mkdir](../../c-runtime-library/reference/mkdir-wmkdir.md)."},{"content":".NET Framework Equivalent","pos":[3187,3212]},{"content":"System::IO::Directory::Delete","pos":[3217,3246]},{"content":"See Also","pos":[3330,3338]},{"content":"Directory Control","pos":[3343,3360]},{"content":"_chdir, _wchdir","pos":[3413,3428]},{"content":"_mkdir, _wmkdir","pos":[3486,3501]}],"content":"---\ntitle: \"_rmdir, _wrmdir | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\napiname: \n  - \"_wrmdir\"\n  - \"_rmdir\"\napilocation: \n  - \"msvcrt.dll\"\n  - \"msvcr80.dll\"\n  - \"msvcr90.dll\"\n  - \"msvcr100.dll\"\n  - \"msvcr100_clr0400.dll\"\n  - \"msvcr110.dll\"\n  - \"msvcr110_clr0400.dll\"\n  - \"msvcr120.dll\"\n  - \"msvcr120_clr0400.dll\"\n  - \"ucrtbase.dll\"\n  - \"api-ms-win-crt-filesystem-l1-1-0.dll\"\napitype: \"DLLExport\"\nf1_keywords: \n  - \"trmdir\"\n  - \"_trmdir\"\n  - \"wrmdir\"\n  - \"_rmdir\"\n  - \"_wrmdir\"\ndev_langs: \n  - \"C++\"\n  - \"C\"\nhelpviewer_keywords: \n  - \"_rmdir function\"\n  - \"directories [C++], deleting\"\n  - \"rmdir function\"\n  - \"directories [C++], removing\"\n  - \"trmdir function\"\n  - \"_trmdir function\"\n  - \"_wrmdir function\"\n  - \"wrmdir function\"\nms.assetid: 652c2a5a-b0ac-4493-864e-1edf484333c5\ncaps.latest.revision: 11\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# _rmdir, _wrmdir\nDeletes a directory.  \n  \n## Syntax  \n  \n```  \n  \n      int _rmdir(  \n   const char *dirname   \n);  \nint _wrmdir(  \n   const wchar_t *dirname   \n);  \n```  \n  \n#### Parameters  \n `dirname`  \n Path of the directory to be removed.  \n  \n## Return Value  \n Each of these functions returns 0 if the directory is successfully deleted. A return value of –1 indicates an error and `errno` is set to one of the following values:  \n  \n **ENOTEMPTY**  \n Given path is not a directory, the directory is not empty, or the directory is either the current working directory or the root directory.  \n  \n `ENOENT`  \n Path is invalid.  \n  \n **EACCES**  \n A program has an open handle to the directory.  \n  \n For more information about these and other return codes, see [_doserrno, errno, _sys_errlist, and _sys_nerr](../../c-runtime-library/errno-doserrno-sys-errlist-and-sys-nerr.md).  \n  \n## Remarks  \n The `_rmdir` function deletes the directory specified by `dirname`. The directory must be empty, and it must not be the current working directory or the root directory.  \n  \n `_wrmdir` is a wide-character version of `_rmdir`; the `dirname` argument to `_wrmdir` is a wide-character string. `_wrmdir` and `_rmdir` behave identically otherwise.  \n  \n### Generic-Text Routine Mappings  \n  \n|Tchar.h routine|_UNICODE and _MBCS not defined|_MBCS defined|_UNICODE defined|  \n|---------------------|--------------------------------------|--------------------|-----------------------|  \n|`_trmdir`|`_rmdir`|`_rmdir`|`_wrmdir`|  \n  \n## Requirements  \n  \n|Routine|Required header|  \n|-------------|---------------------|  \n|`_rmdir`|\\<direct.h>|  \n|`_wrmdir`|\\<direct.h> or \\<wchar.h>|  \n  \n For more compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md) in the Introduction.  \n  \n## Libraries  \n All versions of the [C run-time libraries](../../c-runtime-library/crt-library-features.md).  \n  \n## Example  \n See the example for [_mkdir](../../c-runtime-library/reference/mkdir-wmkdir.md).  \n  \n## .NET Framework Equivalent  \n [System::IO::Directory::Delete](https://msdn.microsoft.com/en-us/library/system.io.directory.delete.aspx)  \n  \n## See Also  \n [Directory Control](../../c-runtime-library/directory-control.md)   \n [_chdir, _wchdir](../../c-runtime-library/reference/chdir-wchdir.md)   \n [_mkdir, _wmkdir](../../c-runtime-library/reference/mkdir-wmkdir.md)"}