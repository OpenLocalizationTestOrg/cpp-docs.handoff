{"nodes":[{"pos":[12,45],"content":"rename, _wrename | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"rename, _wrename | Microsoft Docs","pos":[0,33]}]},{"pos":[1235,1251],"content":"rename, _wrename","linkify":"rename, _wrename","nodes":[{"content":"rename, _wrename","pos":[0,16]}]},{"content":"Rename a file or directory.","pos":[1252,1279]},{"pos":[1288,1294],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[1479,1489],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"<bpt id=\"p1\">*</bpt>oldname<ept id=\"p1\">*</ept>","pos":[1493,1502],"source":"*oldname*"},{"content":"Pointer to old name.","pos":[1506,1526]},{"content":"<bpt id=\"p1\">*</bpt>newname<ept id=\"p1\">*</ept>","pos":[1533,1542],"source":"*newname*"},{"content":"Pointer to new name.","pos":[1546,1566]},{"pos":[1575,1587],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Each of these functions returns 0 if it is successful.","pos":[1591,1645]},{"content":"On an error, the function returns a nonzero value and sets <ph id=\"ph1\">`errno`</ph> to one of the following values:","pos":[1646,1744],"source":" On an error, the function returns a nonzero value and sets `errno` to one of the following values:"},{"content":"File or directory specified by <bpt id=\"p1\">*</bpt>newname<ept id=\"p1\">*</ept> already exists or could not be created (invalid path); or <bpt id=\"p2\">*</bpt>oldname<ept id=\"p2\">*</ept> is a directory and <bpt id=\"p3\">*</bpt>newname<ept id=\"p3\">*</ept> specifies a different path.","pos":[1763,1928],"source":" File or directory specified by *newname* already exists or could not be created (invalid path); or *oldname* is a directory and *newname* specifies a different path."},{"content":"File or path specified by <bpt id=\"p1\">*</bpt>oldname<ept id=\"p1\">*</ept> not found.","pos":[1947,1993],"source":" File or path specified by *oldname* not found."},{"content":"Name contains invalid characters.","pos":[2012,2045]},{"pos":[2052,2205],"content":"For other possible return values, see <bpt id=\"p1\">[</bpt>_doserrno, _errno, syserrlist, and _sys_nerr<ept id=\"p1\">](../../c-runtime-library/errno-doserrno-sys-errlist-and-sys-nerr.md)</ept>.","source":"For other possible return values, see [_doserrno, _errno, syserrlist, and _sys_nerr](../../c-runtime-library/errno-doserrno-sys-errlist-and-sys-nerr.md)."},{"pos":[2214,2221],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The <bpt id=\"p1\">**</bpt>rename<ept id=\"p1\">**</ept> function renames the file or directory specified by <bpt id=\"p2\">*</bpt>oldname<ept id=\"p2\">*</ept> to the name given by <bpt id=\"p3\">*</bpt>newname<ept id=\"p3\">*</ept>.","pos":[2225,2333],"source":"The **rename** function renames the file or directory specified by *oldname* to the name given by *newname*."},{"content":"The old name must be the path of an existing file or directory.","pos":[2334,2397]},{"content":"The new name must not be the name of an existing file or directory.","pos":[2398,2465]},{"content":"You can use <bpt id=\"p1\">**</bpt>rename<ept id=\"p1\">**</ept> to move a file from one directory or device to another by giving a different path in the <bpt id=\"p2\">*</bpt>newname<ept id=\"p2\">*</ept> argument.","pos":[2466,2597],"source":" You can use **rename** to move a file from one directory or device to another by giving a different path in the *newname* argument."},{"content":"However, you cannot use <bpt id=\"p1\">**</bpt>rename<ept id=\"p1\">**</ept> to move a directory.","pos":[2598,2653],"source":" However, you cannot use **rename** to move a directory."},{"content":"Directories can be renamed, but not moved.","pos":[2654,2696]},{"content":"<ph id=\"ph1\">`_wrename`</ph> is a wide-character version of <bpt id=\"p1\">**</bpt>_rename<ept id=\"p1\">**</ept>; the arguments to <ph id=\"ph2\">`_wrename`</ph> are wide-character strings.","pos":[2703,2813],"source":"`_wrename` is a wide-character version of **_rename**; the arguments to `_wrename` are wide-character strings."},{"content":"<ph id=\"ph1\">`_wrename`</ph> and <bpt id=\"p1\">**</bpt>_rename<ept id=\"p1\">**</ept> behave identically otherwise.","pos":[2814,2870],"source":"`_wrename` and **_rename** behave identically otherwise."},{"pos":[2880,2909],"content":"Generic-Text Routine Mappings","linkify":"Generic-Text Routine Mappings","nodes":[{"content":"Generic-Text Routine Mappings","pos":[0,29]}]},{"content":"TCHAR.H routine","pos":[2916,2931]},{"content":"_UNICODE &amp; _MBCS not defined","pos":[2932,2960],"source":"_UNICODE & _MBCS not defined"},{"content":"_MBCS defined","pos":[2961,2974]},{"content":"_UNICODE defined","pos":[2975,2991]},{"pos":[3115,3125],"content":"<bpt id=\"p1\">**</bpt>rename<ept id=\"p1\">**</ept>","source":"**rename**"},{"pos":[3126,3136],"content":"<bpt id=\"p1\">**</bpt>rename<ept id=\"p1\">**</ept>","source":"**rename**"},{"pos":[3157,3169],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"content":"Routine","pos":[3176,3183]},{"content":"Required header","pos":[3184,3199]},{"pos":[3244,3254],"content":"<bpt id=\"p1\">**</bpt>rename<ept id=\"p1\">**</ept>","source":"**rename**"},{"content":"<ph id=\"ph1\">\\&lt;</ph>io.h&gt; or <ph id=\"ph2\">\\&lt;</ph>stdio.h&gt;","pos":[3255,3276],"source":"\\<io.h> or \\<stdio.h>"},{"content":"<ph id=\"ph1\">\\&lt;</ph>stdio.h&gt; or <ph id=\"ph2\">\\&lt;</ph>wchar.h&gt;","pos":[3292,3316],"source":"\\<stdio.h> or \\<wchar.h>"},{"pos":[3324,3448],"content":"For additional compatibility information, see <bpt id=\"p1\">[</bpt>Compatibility<ept id=\"p1\">](../../c-runtime-library/compatibility.md)</ept> in the Introduction.","source":"For additional compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md) in the Introduction."},{"pos":[3457,3466],"content":"Libraries","linkify":"Libraries","nodes":[{"content":"Libraries","pos":[0,9]}]},{"pos":[3470,3562],"content":"All versions of the <bpt id=\"p1\">[</bpt>C run-time libraries<ept id=\"p1\">](../../c-runtime-library/crt-library-features.md)</ept>.","source":"All versions of the [C run-time libraries](../../c-runtime-library/crt-library-features.md)."},{"pos":[3571,3578],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[4198,4204],"content":"Output","linkify":"Output","nodes":[{"content":"Output","pos":[0,6]}]},{"pos":[4282,4307],"content":".NET Framework Equivalent","linkify":".NET Framework Equivalent","nodes":[{"content":".NET Framework Equivalent","pos":[0,25]}]},{"pos":[4311,4402],"content":"<bpt id=\"p1\">[</bpt>System::IO::File::Move<ept id=\"p1\">](https://msdn.microsoft.com/en-us/library/system.io.file.move.aspx)</ept>","source":"[System::IO::File::Move](https://msdn.microsoft.com/en-us/library/system.io.file.move.aspx)"},{"pos":[4411,4419],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"pos":[4423,4480],"content":"<bpt id=\"p1\">[</bpt>File Handling<ept id=\"p1\">](../../c-runtime-library/file-handling.md)</ept>","source":"[File Handling](../../c-runtime-library/file-handling.md)"}],"content":"---\ntitle: \"rename, _wrename | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\napiname: \n  - \"rename\"\n  - \"_wrename\"\napilocation: \n  - \"msvcrt.dll\"\n  - \"msvcr80.dll\"\n  - \"msvcr90.dll\"\n  - \"msvcr100.dll\"\n  - \"msvcr100_clr0400.dll\"\n  - \"msvcr110.dll\"\n  - \"msvcr110_clr0400.dll\"\n  - \"msvcr120.dll\"\n  - \"msvcr120_clr0400.dll\"\n  - \"ucrtbase.dll\"\n  - \"api-ms-win-crt-filesystem-l1-1-0.dll\"\napitype: \"DLLExport\"\nf1_keywords: \n  - \"_wrename\"\n  - \"_trename\"\n  - \"Rename\"\ndev_langs: \n  - \"C++\"\n  - \"C\"\nhelpviewer_keywords: \n  - \"trename function\"\n  - \"directories [C++], renaming\"\n  - \"renaming directories\"\n  - \"names [C++], changing file\"\n  - \"_trename function\"\n  - \"rename function\"\n  - \"wrename function\"\n  - \"files [C++], renaming\"\n  - \"_wrename function\"\n  - \"names [C++], changing directory\"\n  - \"renaming files\"\nms.assetid: 9f0a6103-26a2-4dda-b14b-79a48946266a\ncaps.latest.revision: 9\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# rename, _wrename\nRename a file or directory.  \n  \n## Syntax  \n  \n```  \n  \n      int rename(  \n   const char *oldname,  \n   const char *newname   \n);  \nint _wrename(  \n   const wchar_t *oldname,  \n   const wchar_t *newname   \n);  \n```  \n  \n#### Parameters  \n *oldname*  \n Pointer to old name.  \n  \n *newname*  \n Pointer to new name.  \n  \n## Return Value  \n Each of these functions returns 0 if it is successful. On an error, the function returns a nonzero value and sets `errno` to one of the following values:  \n  \n `EACCES`  \n File or directory specified by *newname* already exists or could not be created (invalid path); or *oldname* is a directory and *newname* specifies a different path.  \n  \n `ENOENT`  \n File or path specified by *oldname* not found.  \n  \n `EINVAL`  \n Name contains invalid characters.  \n  \n For other possible return values, see [_doserrno, _errno, syserrlist, and _sys_nerr](../../c-runtime-library/errno-doserrno-sys-errlist-and-sys-nerr.md).  \n  \n## Remarks  \n The **rename** function renames the file or directory specified by *oldname* to the name given by *newname*. The old name must be the path of an existing file or directory. The new name must not be the name of an existing file or directory. You can use **rename** to move a file from one directory or device to another by giving a different path in the *newname* argument. However, you cannot use **rename** to move a directory. Directories can be renamed, but not moved.  \n  \n `_wrename` is a wide-character version of **_rename**; the arguments to `_wrename` are wide-character strings. `_wrename` and **_rename** behave identically otherwise.  \n  \n### Generic-Text Routine Mappings  \n  \n|TCHAR.H routine|_UNICODE & _MBCS not defined|_MBCS defined|_UNICODE defined|  \n|---------------------|------------------------------------|--------------------|-----------------------|  \n|`_trename`|**rename**|**rename**|`_wrename`|  \n  \n## Requirements  \n  \n|Routine|Required header|  \n|-------------|---------------------|  \n|**rename**|\\<io.h> or \\<stdio.h>|  \n|`_wrename`|\\<stdio.h> or \\<wchar.h>|  \n  \n For additional compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md) in the Introduction.  \n  \n## Libraries  \n All versions of the [C run-time libraries](../../c-runtime-library/crt-library-features.md).  \n  \n## Example  \n  \n```  \n// crt_renamer.c  \n/* This program attempts to rename a file named  \n * CRT_RENAMER.OBJ to CRT_RENAMER.JBO. For this operation  \n * to succeed, a file named CRT_RENAMER.OBJ must exist and  \n * a file named CRT_RENAMER.JBO must not exist.  \n */  \n  \n#include <stdio.h>  \n  \nint main( void )  \n{  \n   int  result;  \n   char old[] = \"CRT_RENAMER.OBJ\", new[] = \"CRT_RENAMER.JBO\";  \n  \n   /* Attempt to rename file: */  \n   result = rename( old, new );  \n   if( result != 0 )  \n      printf( \"Could not rename '%s'\\n\", old );  \n   else  \n      printf( \"File '%s' renamed to '%s'\\n\", old, new );  \n}  \n```  \n  \n## Output  \n  \n```  \nFile 'CRT_RENAMER.OBJ' renamed to 'CRT_RENAMER.JBO'  \n```  \n  \n## .NET Framework Equivalent  \n [System::IO::File::Move](https://msdn.microsoft.com/en-us/library/system.io.file.move.aspx)  \n  \n## See Also  \n [File Handling](../../c-runtime-library/file-handling.md)"}