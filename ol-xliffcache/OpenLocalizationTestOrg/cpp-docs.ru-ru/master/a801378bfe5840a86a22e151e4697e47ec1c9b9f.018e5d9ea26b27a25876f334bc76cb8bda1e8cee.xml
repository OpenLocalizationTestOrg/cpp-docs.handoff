{"nodes":[{"pos":[12,36],"content":"__m128d | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"__m128d | Microsoft Docs","pos":[0,24]}]},{"content":"__m128d","pos":[649,656]},{"content":"Microsoft Specific","pos":[660,678]},{"pos":[682,803],"content":"The <ph id=\"ph1\">`__m128d`</ph> data type, for use with the Streaming SIMD Extensions 2 instructions intrinsics, is defined in emmintrin.h.","source":"The `__m128d` data type, for use with the Streaming SIMD Extensions 2 instructions intrinsics, is defined in emmintrin.h."},{"content":"Remarks","pos":[914,921]},{"content":"You should not access the <ph id=\"ph1\">`__m128d`</ph> fields directly.","pos":[925,977],"source":"You should not access the `__m128d` fields directly."},{"content":"You can, however, see these types in the debugger.","pos":[978,1028]},{"content":"A variable of type <ph id=\"ph1\">`__m128`</ph> maps to the XMM[0-7] registers.","pos":[1029,1088],"source":" A variable of type `__m128` maps to the XMM[0-7] registers."},{"pos":[1095,1172],"content":"Variables of type <bpt id=\"p1\">**</bpt>_m128d<ept id=\"p1\">**</ept> are automatically aligned on 16-byte boundaries.","source":"Variables of type **_m128d** are automatically aligned on 16-byte boundaries."},{"pos":[1179,1238],"content":"The <ph id=\"ph1\">`__m128d`</ph> data type is not supported on ARM processors.","source":"The `__m128d` data type is not supported on ARM processors."},{"content":"END Microsoft Specific","pos":[1247,1269]},{"content":"See Also","pos":[1278,1286]},{"content":"Keywords","pos":[1291,1299]},{"content":"Fundamental Types","pos":[1330,1347]},{"content":"Data Type Ranges","pos":[1387,1403]}],"content":"---\ntitle: \"__m128d | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"language-reference\"\nf1_keywords: \n  - \"__m128d\"\n  - \"__m128d_cpp\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"__m128d keyword [C++]\"\nms.assetid: 8082c7c0-a955-4b53-9d82-9bb91c623f72\ncaps.latest.revision: 8\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"ru-ru\"\n  - \"zh-cn\"\n  - \"zh-tw\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"tr-tr\"\n---\n# __m128d\n## Microsoft Specific  \n The `__m128d` data type, for use with the Streaming SIMD Extensions 2 instructions intrinsics, is defined in emmintrin.h.  \n  \n```  \n// data_types__m128d.cpp  \n#include <emmintrin.h>  \nint main() {  \n   __m128d x;  \n}  \n```  \n  \n## Remarks  \n You should not access the `__m128d` fields directly. You can, however, see these types in the debugger. A variable of type `__m128` maps to the XMM[0-7] registers.  \n  \n Variables of type **_m128d** are automatically aligned on 16-byte boundaries.  \n  \n The `__m128d` data type is not supported on ARM processors.  \n  \n## END Microsoft Specific  \n  \n## See Also  \n [Keywords](../cpp/keywords-cpp.md)   \n [Fundamental Types](../cpp/fundamental-types-cpp.md)   \n [Data Type Ranges](../cpp/data-type-ranges.md)"}