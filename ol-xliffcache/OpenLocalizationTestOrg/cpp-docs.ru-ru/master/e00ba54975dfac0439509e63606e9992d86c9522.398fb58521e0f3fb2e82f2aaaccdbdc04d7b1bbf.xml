{"nodes":[{"pos":[12,45],"content":"type_index Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"type_index Class | Microsoft Docs","pos":[0,33]}]},{"pos":[617,633],"content":"type_index Class","linkify":"type_index Class","nodes":[{"content":"type_index Class","pos":[0,16]}]},{"pos":[634,759],"content":"The <ph id=\"ph1\">`type_index`</ph> class wraps a pointer to <bpt id=\"p1\">[</bpt>type_info Class<ept id=\"p1\">](../cpp/type-info-class.md)</ept> to assist in indexing by such objects.","source":"The `type_index` class wraps a pointer to [type_info Class](../cpp/type-info-class.md) to assist in indexing by such objects."},{"pos":[765,1196],"content":"class type_index { public: type_index(const type_info&amp; tinfo); const char *name() const; size_t hash_code() const; bool operator==(const type_info&amp; right) const; bool operator!=(const type_info&amp; right) const; bool operator&lt;(const type_info&amp; right) const; bool operator<ph id=\"ph1\">\\&lt;</ph>=(const type_info&amp; right) const; bool operator&gt;(const type_info&amp; right) const; bool operator&gt;=(const type_info&amp; right) const; };","source":"class type_index {\n   public:\n   type_index(const type_info& tinfo);\n   const char *name() const;\n   size_t hash_code() const;\n   bool operator==(const type_info& right) const;\n   bool operator!=(const type_info& right) const;\n   bool operator<(const type_info& right) const;\n   bool operator\\<=(const type_info& right) const;\n   bool operator>(const type_info& right) const;\n   bool operator>=(const type_info& right) const;\n   };"},{"pos":[1203,1249],"content":"The constructor initializes <ph id=\"ph1\">`ptr`</ph> to <ph id=\"ph2\">`&amp;tinfo`</ph>.","source":"The constructor initializes `ptr` to `&tinfo`."},{"pos":[1256,1285],"content":"<ph id=\"ph1\">`name`</ph> returns <ph id=\"ph2\">`ptr-&gt;name()`</ph>.","source":"`name` returns `ptr->name()`."},{"pos":[1292,1331],"content":"<ph id=\"ph1\">`hash_code`</ph> returns <ph id=\"ph2\">`ptr-&gt;hash_code().`</ph>","source":"`hash_code` returns `ptr->hash_code().`"},{"pos":[1338,1379],"content":"<ph id=\"ph1\">`operator==`</ph> returns <ph id=\"ph2\">`*ptr == right.ptr`</ph>.","source":"`operator==` returns `*ptr == right.ptr`."},{"pos":[1386,1427],"content":"<ph id=\"ph1\">`operator!=`</ph> returns <ph id=\"ph2\">`!(*this == right)`</ph>.","source":"`operator!=` returns `!(*this == right)`."},{"pos":[1434,1481],"content":"<ph id=\"ph1\">`operator&lt;`</ph> returns <ph id=\"ph2\">`*ptr-&gt;before(*right.ptr)`</ph>.","source":"`operator<` returns `*ptr->before(*right.ptr)`."},{"pos":[1488,1528],"content":"<ph id=\"ph1\">`operator&lt;=`</ph> returns <ph id=\"ph2\">`!(right &lt; *this).`</ph>","source":"`operator<=` returns `!(right < *this).`"},{"pos":[1535,1571],"content":"<ph id=\"ph1\">`operator&gt;`</ph> returns <ph id=\"ph2\">`right &lt; *this`</ph>.","source":"`operator>` returns `right < *this`."},{"pos":[1578,1618],"content":"<ph id=\"ph1\">`operator&gt;=`</ph> returns <ph id=\"ph2\">`!(*this &lt; right)`</ph>.","source":"`operator>=` returns `!(*this < right)`."},{"pos":[1627,1635],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Run-Time Type Information<ept id=\"p1\">](../cpp/run-time-type-information.md)</ept><ph id=\"ph1\"> </ph>","pos":[1639,1704],"source":"[Run-Time Type Information](../cpp/run-time-type-information.md) "},{"content":"<bpt id=\"p1\"> [</bpt><ph id=\"ph1\">\\&lt;</ph>typeindex&gt;<ept id=\"p1\">](../standard-library/typeindex.md)</ept>","pos":[1707,1756],"source":" [\\<typeindex>](../standard-library/typeindex.md)"}],"content":"---\ntitle: \"type_index Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"typeindex/std::type_index\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"type_index class\"\nms.assetid: db366119-74cb-43e8-aacf-9679e561fa2f\ncaps.latest.revision: 14\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# type_index Class\nThe `type_index` class wraps a pointer to [type_info Class](../cpp/type-info-class.md) to assist in indexing by such objects.  \n  \nclass type_index {\n   public:\n   type_index(const type_info& tinfo);\n   const char *name() const;\n   size_t hash_code() const;\n   bool operator==(const type_info& right) const;\n   bool operator!=(const type_info& right) const;\n   bool operator<(const type_info& right) const;\n   bool operator\\<=(const type_info& right) const;\n   bool operator>(const type_info& right) const;\n   bool operator>=(const type_info& right) const;\n   };  \n  \n The constructor initializes `ptr` to `&tinfo`.  \n  \n `name` returns `ptr->name()`.  \n  \n `hash_code` returns `ptr->hash_code().`  \n  \n `operator==` returns `*ptr == right.ptr`.  \n  \n `operator!=` returns `!(*this == right)`.  \n  \n `operator<` returns `*ptr->before(*right.ptr)`.  \n  \n `operator<=` returns `!(right < *this).`  \n  \n `operator>` returns `right < *this`.  \n  \n `operator>=` returns `!(*this < right)`.  \n  \n## See Also  \n [Run-Time Type Information](../cpp/run-time-type-information.md)   \n [\\<typeindex>](../standard-library/typeindex.md)\n\n\n\n"}