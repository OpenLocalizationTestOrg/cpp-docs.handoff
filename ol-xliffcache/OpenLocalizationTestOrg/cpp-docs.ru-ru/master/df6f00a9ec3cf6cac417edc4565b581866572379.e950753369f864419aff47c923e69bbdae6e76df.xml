{"nodes":[{"pos":[12,50],"content":"csqrt, csqrtf, csqrtl | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"csqrt, csqrtf, csqrtl | Microsoft Docs","pos":[0,38]}]},{"pos":[1080,1101],"content":"csqrt, csqrtf, csqrtl","linkify":"csqrt, csqrtf, csqrtl","nodes":[{"content":"csqrt, csqrtf, csqrtl","pos":[0,21]}]},{"content":"Retrieves the square root of a complex number, with a branch cut along the negative real axis.","pos":[1102,1196]},{"pos":[1205,1211],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[1480,1490],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"A complex number.","pos":[1501,1518]},{"pos":[1527,1539],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The square root of <ph id=\"ph1\">`z`</ph>.","pos":[1543,1566],"source":"The square root of `z`."},{"content":"The result is in the right half-plane.","pos":[1567,1605]},{"content":"Input","pos":[1612,1617]},{"content":"SEH Exception","pos":[1618,1631]},{"pos":[1632,1652],"content":"<ph id=\"ph1\">`_matherr`</ph> Exception","source":"`_matherr` Exception"},{"content":"± QNAN, IND","pos":[1720,1731]},{"content":"none","pos":[1732,1736]},{"content":"_DOMAIN","pos":[1737,1744]},{"content":"- ∞","pos":[1749,1752]},{"content":"none","pos":[1753,1757]},{"content":"_DOMAIN","pos":[1758,1765]},{"pos":[1775,1782],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Because C++ allows overloading, you can call overloads of <ph id=\"ph1\">`csqrt`</ph> that take and return <ph id=\"ph2\">`_Fcomplex`</ph> and <ph id=\"ph3\">`_Lcomplex`</ph> values.","pos":[1786,1908],"source":"Because C++ allows overloading, you can call overloads of `csqrt` that take and return `_Fcomplex` and `_Lcomplex` values."},{"content":"In a C program, <ph id=\"ph1\">`csqrt`</ph> always takes and returns a <ph id=\"ph2\">`_Dcomplex`</ph> value.","pos":[1909,1978],"source":" In a C program, `csqrt` always takes and returns a `_Dcomplex` value."},{"pos":[1987,1999],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"content":"Routine","pos":[2006,2013]},{"content":"C header","pos":[2014,2022]},{"content":"C++ header","pos":[2023,2033]},{"pos":[2090,2131],"content":"<ph id=\"ph1\">`csqrt`</ph>,               <ph id=\"ph2\">`csqrtf`</ph>, <ph id=\"ph3\">`csqrtl`</ph>","source":"`csqrt`,               `csqrtf`, `csqrtl`"},{"content":"<ph id=\"ph1\">\\&lt;</ph>complex.h&gt;","pos":[2132,2144],"source":"\\<complex.h>"},{"content":"<ph id=\"ph1\">\\&lt;</ph>ccomplex&gt;","pos":[2145,2156],"source":"\\<ccomplex>"},{"pos":[2164,2282],"content":"For more compatibility information, see <bpt id=\"p1\">[</bpt>Compatibility<ept id=\"p1\">](../../c-runtime-library/compatibility.md)</ept> in the Introduction.","source":"For more compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md) in the Introduction."},{"pos":[2291,2299],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Alphabetical Function Reference<ept id=\"p1\">](../../c-runtime-library/reference/crt-alphabetical-function-reference.md)</ept><ph id=\"ph1\"> </ph>","pos":[2303,2411],"source":"[Alphabetical Function Reference](../../c-runtime-library/reference/crt-alphabetical-function-reference.md) "},{"content":"<bpt id=\"p1\"> [</bpt>catanh, catanhf, catanhl<ept id=\"p1\">](../../c-runtime-library/reference/catanh-catanhf-catanhl.md)</ept><ph id=\"ph1\"> </ph>","pos":[2414,2503],"source":" [catanh, catanhf, catanhl](../../c-runtime-library/reference/catanh-catanhf-catanhl.md) "},{"content":"<bpt id=\"p1\"> [</bpt>ctanh, ctanhf, ctanhl<ept id=\"p1\">](../../c-runtime-library/reference/ctanh-ctanhf-ctanhl.md)</ept><ph id=\"ph1\"> </ph>","pos":[2506,2589],"source":" [ctanh, ctanhf, ctanhl](../../c-runtime-library/reference/ctanh-ctanhf-ctanhl.md) "},{"content":"<bpt id=\"p1\"> [</bpt>catan, catanf, catanl<ept id=\"p1\">](../../c-runtime-library/reference/catan-catanf-catanl.md)</ept><ph id=\"ph1\"> </ph>","pos":[2592,2675],"source":" [catan, catanf, catanl](../../c-runtime-library/reference/catan-catanf-catanl.md) "},{"content":"<bpt id=\"p1\"> [</bpt>csinh, csinhf, csinhl<ept id=\"p1\">](../../c-runtime-library/reference/csinh-csinhf-csinhl.md)</ept><ph id=\"ph1\"> </ph>","pos":[2678,2761],"source":" [csinh, csinhf, csinhl](../../c-runtime-library/reference/csinh-csinhf-csinhl.md) "},{"content":"<bpt id=\"p1\"> [</bpt>casinh, casinhf, casinhl<ept id=\"p1\">](../../c-runtime-library/reference/casinh-casinhf-casinhl.md)</ept><ph id=\"ph1\"> </ph>","pos":[2764,2853],"source":" [casinh, casinhf, casinhl](../../c-runtime-library/reference/casinh-casinhf-casinhl.md) "},{"content":"<bpt id=\"p1\"> [</bpt>ccosh, ccoshf, ccoshl<ept id=\"p1\">](../../c-runtime-library/reference/ccosh-ccoshf-ccoshl.md)</ept><ph id=\"ph1\"> </ph>","pos":[2856,2939],"source":" [ccosh, ccoshf, ccoshl](../../c-runtime-library/reference/ccosh-ccoshf-ccoshl.md) "},{"content":"<bpt id=\"p1\"> [</bpt>cacosh, cacoshf, cacoshl<ept id=\"p1\">](../../c-runtime-library/reference/cacosh-cacoshf-cacoshl.md)</ept><ph id=\"ph1\"> </ph>","pos":[2942,3031],"source":" [cacosh, cacoshf, cacoshl](../../c-runtime-library/reference/cacosh-cacoshf-cacoshl.md) "},{"content":"<bpt id=\"p1\"> [</bpt>cacos, cacosf, cacosl<ept id=\"p1\">](../../c-runtime-library/reference/cacos-cacosf-cacosl.md)</ept><ph id=\"ph1\"> </ph>","pos":[3034,3117],"source":" [cacos, cacosf, cacosl](../../c-runtime-library/reference/cacos-cacosf-cacosl.md) "},{"content":"<bpt id=\"p1\"> [</bpt>ctan, ctanf, ctanl<ept id=\"p1\">](../../c-runtime-library/reference/ctan-ctanf-ctanl.md)</ept><ph id=\"ph1\"> </ph>","pos":[3120,3197],"source":" [ctan, ctanf, ctanl](../../c-runtime-library/reference/ctan-ctanf-ctanl.md) "},{"content":"<bpt id=\"p1\"> [</bpt>csin, csinf, csinl<ept id=\"p1\">](../../c-runtime-library/reference/csin-csinf-csinl.md)</ept><ph id=\"ph1\"> </ph>","pos":[3200,3277],"source":" [csin, csinf, csinl](../../c-runtime-library/reference/csin-csinf-csinl.md) "},{"content":"<bpt id=\"p1\"> [</bpt>casin, casinf, casinl<ept id=\"p1\">](../../c-runtime-library/reference/casin-casinf-casinl.md)</ept><ph id=\"ph1\"> </ph>","pos":[3280,3363],"source":" [casin, casinf, casinl](../../c-runtime-library/reference/casin-casinf-casinl.md) "},{"content":"<bpt id=\"p1\"> [</bpt>ccos, ccosf, ccosl<ept id=\"p1\">](../../c-runtime-library/reference/ccos-ccosf-ccosl.md)</ept>","pos":[3366,3442],"source":" [ccos, ccosf, ccosl](../../c-runtime-library/reference/ccos-ccosf-ccosl.md)"}],"content":"---\ntitle: \"csqrt, csqrtf, csqrtl | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"cpp\"\n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\napiname: \n  - \"csqrt\"\n  - \"csqrtf\"\n  - \"csqrtl\"\napilocation: \n  - \"msvcrt.dll\"\n  - \"msvcr80.dll\"\n  - \"msvcr90.dll\"\n  - \"msvcr100.dll\"\n  - \"msvcr100_clr0400.dll\"\n  - \"msvcr110.dll\"\n  - \"msvcr110_clr0400.dll\"\n  - \"msvcr120.dll\"\n  - \"msvcr120_clr0400.dll\"\n  - \"ucrtbase.dll\"\n  - \"api-ms-win-crt-math-l1-1-0.dll\"\napitype: \"DLLExport\"\nf1_keywords: \n  - \"csqrt\"\n  - \"csqrtf\"\n  - \"csqrtl\"\n  - \"complex/csqrt\"\n  - \"complex/csqrtf\"\n  - \"complex/csqrtl\"\ndev_langs: \n  - \"C\"\n  - \"C++\"\nhelpviewer_keywords: \n  - \"csqrt function\"\n  - \"csqrtf function\"\n  - \"csqrtl function\"\nms.assetid: b65f086b-0f55-4622-a7a3-4e79d9c9c05c\ncaps.latest.revision: 11\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# csqrt, csqrtf, csqrtl\nRetrieves the square root of a complex number, with a branch cut along the negative real axis.  \n  \n## Syntax  \n  \n```  \n_Dcomplex csqrt(   \n   _Dcomplex z   \n);  \n_Fcomplex csqrt(   \n   _Fcomplex z   \n);  // C++ only  \n_Lcomplex csqrt(   \n   _Lcomplex z   \n);  // C++ only  \n_Fcomplex csqrtf(   \n   _Fcomplex z   \n);  \n_Lcomplex csqrtl(   \n   _Lcomplex z   \n);  \n```  \n  \n#### Parameters  \n `z`  \n A complex number.  \n  \n## Return Value  \n The square root of `z`. The result is in the right half-plane.  \n  \n|Input|SEH Exception|`_matherr` Exception|  \n|-----------|-------------------|--------------------------|  \n|± QNAN, IND|none|_DOMAIN|  \n|- ∞|none|_DOMAIN|  \n  \n## Remarks  \n Because C++ allows overloading, you can call overloads of `csqrt` that take and return `_Fcomplex` and `_Lcomplex` values. In a C program, `csqrt` always takes and returns a `_Dcomplex` value.  \n  \n## Requirements  \n  \n|Routine|C header|C++ header|  \n|-------------|--------------|------------------|  \n|`csqrt`,               `csqrtf`, `csqrtl`|\\<complex.h>|\\<ccomplex>|  \n  \n For more compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md) in the Introduction.  \n  \n## See Also  \n [Alphabetical Function Reference](../../c-runtime-library/reference/crt-alphabetical-function-reference.md)   \n [catanh, catanhf, catanhl](../../c-runtime-library/reference/catanh-catanhf-catanhl.md)   \n [ctanh, ctanhf, ctanhl](../../c-runtime-library/reference/ctanh-ctanhf-ctanhl.md)   \n [catan, catanf, catanl](../../c-runtime-library/reference/catan-catanf-catanl.md)   \n [csinh, csinhf, csinhl](../../c-runtime-library/reference/csinh-csinhf-csinhl.md)   \n [casinh, casinhf, casinhl](../../c-runtime-library/reference/casinh-casinhf-casinhl.md)   \n [ccosh, ccoshf, ccoshl](../../c-runtime-library/reference/ccosh-ccoshf-ccoshl.md)   \n [cacosh, cacoshf, cacoshl](../../c-runtime-library/reference/cacosh-cacoshf-cacoshl.md)   \n [cacos, cacosf, cacosl](../../c-runtime-library/reference/cacos-cacosf-cacosl.md)   \n [ctan, ctanf, ctanl](../../c-runtime-library/reference/ctan-ctanf-ctanl.md)   \n [csin, csinf, csinl](../../c-runtime-library/reference/csin-csinf-csinl.md)   \n [casin, casinf, casinl](../../c-runtime-library/reference/casin-casinf-casinl.md)   \n [ccos, ccosf, ccosl](../../c-runtime-library/reference/ccos-ccosf-ccosl.md)"}