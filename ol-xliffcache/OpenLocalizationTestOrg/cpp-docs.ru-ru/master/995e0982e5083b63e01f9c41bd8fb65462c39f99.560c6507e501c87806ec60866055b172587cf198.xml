{"nodes":[{"pos":[12,56],"content":"Point of declaration in C++ | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Point of declaration in C++ | Microsoft Docs","pos":[0,44]}]},{"content":"Point of declaration in C++","pos":[596,623]},{"content":"A name is considered to be declared immediately after its declarator but before its (optional) initializer.","pos":[624,731]},{"content":"(For more information on declarators, see <bpt id=\"p1\">[</bpt>Declarators<ept id=\"p1\">](http://msdn.microsoft.com/en-us/8a7b9b51-92bd-4ac0-b3fe-0c4abe771838)</ept>.)","pos":[732,859],"source":" (For more information on declarators, see [Declarators](http://msdn.microsoft.com/en-us/8a7b9b51-92bd-4ac0-b3fe-0c4abe771838).)"},{"content":"Consider this example:","pos":[866,888]},{"content":"If the point of declaration were <bpt id=\"p1\">*</bpt>after<ept id=\"p1\">*</ept> the initialization, then the local <ph id=\"ph1\">`dVar`</ph> would be initialized to 7.0, the value of the global variable <ph id=\"ph2\">`dVar`</ph>.","pos":[1043,1195],"source":"If the point of declaration were *after* the initialization, then the local `dVar` would be initialized to 7.0, the value of the global variable `dVar`."},{"content":"However, since that is not the case, <ph id=\"ph1\">`dVar`</ph> is initialized to an undefined value.","pos":[1196,1277],"source":" However, since that is not the case, `dVar` is initialized to an undefined value."},{"content":"See Also","pos":[1286,1294]},{"content":"Scope","pos":[1299,1304]}],"content":"---\ntitle: \"Point of declaration in C++ | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"language-reference\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"point of declaration\"\nms.assetid: 92ea8707-80cb-497c-b479-f907b8401859\ncaps.latest.revision: 7\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Point of declaration in C++\nA name is considered to be declared immediately after its declarator but before its (optional) initializer. (For more information on declarators, see [Declarators](http://msdn.microsoft.com/en-us/8a7b9b51-92bd-4ac0-b3fe-0c4abe771838).)  \n  \n Consider this example:  \n  \n```  \n// point_of_declaration1.cpp  \n// compile with: /W1   \ndouble dVar = 7.0;  \nint main()  \n{  \n   double dVar = dVar;   // C4700  \n}  \n```  \n  \n If the point of declaration were *after* the initialization, then the local `dVar` would be initialized to 7.0, the value of the global variable `dVar`. However, since that is not the case, `dVar` is initialized to an undefined value.  \n  \n## See Also  \n [Scope](../cpp/scope-visual-cpp.md)"}