{"nodes":[{"pos":[12,89],"content":"_vscprintf_p, _vscprintf_p_l, _vscwprintf_p, _vscwprintf_p_l | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"_vscprintf_p, _vscprintf_p_l, _vscwprintf_p, _vscwprintf_p_l | Microsoft Docs","pos":[0,77]}]},{"pos":[1460,1520],"content":"_vscprintf_p, _vscprintf_p_l, _vscwprintf_p, _vscwprintf_p_l","linkify":"_vscprintf_p, _vscprintf_p_l, _vscwprintf_p, _vscwprintf_p_l","nodes":[{"content":"_vscprintf_p, _vscprintf_p_l, _vscwprintf_p, _vscwprintf_p_l","pos":[0,60]}]},{"content":"Returns the number of characters in the formatted string using a pointer to a list of arguments, with the ability to specify the order in which the arguments are used.","pos":[1521,1688]},{"pos":[1697,1703],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[2072,2082],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Format-control string.","pos":[2098,2120]},{"content":"Pointer to list of arguments.","pos":[2139,2168]},{"content":"The locale to use.","pos":[2187,2205]},{"pos":[2212,2347],"content":"For more information, see <bpt id=\"p1\">[</bpt>Format Specifications<ept id=\"p1\">](../../c-runtime-library/format-specification-syntax-printf-and-wprintf-functions.md)</ept>.","source":"For more information, see [Format Specifications](../../c-runtime-library/format-specification-syntax-printf-and-wprintf-functions.md)."},{"pos":[2356,2368],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"<ph id=\"ph1\">`_vscprintf_p`</ph> returns the number of characters that would be generated if the string pointed to by the list of arguments was printed or sent to a file or buffer using the specified formatting codes.","pos":[2372,2571],"source":"`_vscprintf_p` returns the number of characters that would be generated if the string pointed to by the list of arguments was printed or sent to a file or buffer using the specified formatting codes."},{"content":"The value returned does not include the terminating null character.","pos":[2572,2639]},{"content":"<ph id=\"ph1\">`_vscwprintf_p`</ph> performs the same function for wide characters.","pos":[2640,2703],"source":"`_vscwprintf_p` performs the same function for wide characters."},{"pos":[2712,2719],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"These functions differ from <ph id=\"ph1\">`_vscprintf`</ph> and <ph id=\"ph2\">`_vscwprintf`</ph> only in that they support the ability to specify the order in which the arguments are used.","pos":[2723,2873],"source":"These functions differ from `_vscprintf` and `_vscwprintf` only in that they support the ability to specify the order in which the arguments are used."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>printf_p Positional Parameters<ept id=\"p1\">](../../c-runtime-library/printf-p-positional-parameters.md)</ept>.","pos":[2874,2992],"source":" For more information, see [printf_p Positional Parameters](../../c-runtime-library/printf-p-positional-parameters.md)."},{"pos":[2999,3155],"content":"The versions of these functions with the <ph id=\"ph1\">`_l`</ph> suffix are identical except that they use the locale parameter passed in instead of the current thread locale.","source":"The versions of these functions with the `_l` suffix are identical except that they use the locale parameter passed in instead of the current thread locale."},{"content":"If <ph id=\"ph1\">`format`</ph> is a null pointer, the invalid parameter handler is invoked, as described in <bpt id=\"p1\">[</bpt>Parameter Validation<ept id=\"p1\">](../../c-runtime-library/parameter-validation.md)</ept>.","pos":[3162,3323],"source":"If `format` is a null pointer, the invalid parameter handler is invoked, as described in [Parameter Validation](../../c-runtime-library/parameter-validation.md)."},{"content":"If execution is allowed to continue, the functions return -1 and set <ph id=\"ph1\">`errno`</ph> to <ph id=\"ph2\">`EINVAL`</ph>.","pos":[3324,3413],"source":" If execution is allowed to continue, the functions return -1 and set `errno` to `EINVAL`."},{"pos":[3421,3673],"content":"[!IMPORTANT]\n Ensure that if `format` is a user-defined string, it is null terminated and has the correct number and type of parameters. For more information, see [Avoiding Buffer Overruns](http://msdn.microsoft.com/library/windows/desktop/ms717795).","leadings":["","> "],"nodes":[{"content":" Ensure that if `format` is a user-defined string, it is null terminated and has the correct number and type of parameters. For more information, see [Avoiding Buffer Overruns](http://msdn.microsoft.com/library/windows/desktop/ms717795).","pos":[13,250],"nodes":[{"content":"Ensure that if <ph id=\"ph1\">`format`</ph> is a user-defined string, it is null terminated and has the correct number and type of parameters.","pos":[1,123],"source":" Ensure that if `format` is a user-defined string, it is null terminated and has the correct number and type of parameters."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Avoiding Buffer Overruns<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms717795)</ept>.","pos":[124,237],"source":" For more information, see [Avoiding Buffer Overruns](http://msdn.microsoft.com/library/windows/desktop/ms717795)."}]}]},{"pos":[3683,3712],"content":"Generic-Text Routine Mappings","linkify":"Generic-Text Routine Mappings","nodes":[{"content":"Generic-Text Routine Mappings","pos":[0,29]}]},{"content":"TCHAR.H routine","pos":[3719,3734]},{"content":"_UNICODE &amp; _MBCS not defined","pos":[3735,3763],"source":"_UNICODE & _MBCS not defined"},{"content":"_MBCS defined","pos":[3764,3777]},{"content":"_UNICODE defined","pos":[3778,3794]},{"pos":[4052,4064],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"content":"Routine","pos":[4071,4078]},{"content":"Required header","pos":[4079,4094]},{"pos":[4139,4171],"content":"<ph id=\"ph1\">`_vscprintf_p`</ph>, <ph id=\"ph2\">`_vscprintf_p_l`</ph>","source":"`_vscprintf_p`, `_vscprintf_p_l`"},{"content":"<ph id=\"ph1\">\\&lt;</ph>stdio.h&gt;","pos":[4172,4182],"source":"\\<stdio.h>"},{"pos":[4187,4221],"content":"<ph id=\"ph1\">`_vscwprintf_p`</ph>, <ph id=\"ph2\">`_vscwprintf_p_l`</ph>","source":"`_vscwprintf_p`, `_vscwprintf_p_l`"},{"content":"<ph id=\"ph1\">\\&lt;</ph>stdio.h&gt; or <ph id=\"ph2\">\\&lt;</ph>wchar.h&gt;","pos":[4222,4246],"source":"\\<stdio.h> or \\<wchar.h>"},{"pos":[4254,4378],"content":"For additional compatibility information, see <bpt id=\"p1\">[</bpt>Compatibility<ept id=\"p1\">](../../c-runtime-library/compatibility.md)</ept> in the Introduction.","source":"For additional compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md) in the Introduction."},{"pos":[4387,4394],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[4398,4521],"content":"See the example for <bpt id=\"p1\">[</bpt>vsprintf<ept id=\"p1\">](../../c-runtime-library/reference/vsprintf-vsprintf-l-vswprintf-vswprintf-l-vswprintf-l.md)</ept>.","source":"See the example for [vsprintf](../../c-runtime-library/reference/vsprintf-vsprintf-l-vswprintf-vswprintf-l-vswprintf-l.md)."},{"pos":[4530,4538],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>vprintf Functions<ept id=\"p1\">](../../c-runtime-library/vprintf-functions.md)</ept><ph id=\"ph1\"> </ph>","pos":[4542,4608],"source":"[vprintf Functions](../../c-runtime-library/vprintf-functions.md) "},{"content":"<bpt id=\"p1\"> [</bpt>_scprintf_p, _scprintf_p_l, _scwprintf_p, _scwprintf_p_l<ept id=\"p1\">](../../c-runtime-library/reference/scprintf-p-scprintf-p-l-scwprintf-p-scwprintf-p-l.md)</ept><ph id=\"ph1\"> </ph>","pos":[4611,4759],"source":" [_scprintf_p, _scprintf_p_l, _scwprintf_p, _scwprintf_p_l](../../c-runtime-library/reference/scprintf-p-scprintf-p-l-scwprintf-p-scwprintf-p-l.md) "},{"content":"<bpt id=\"p1\"> [</bpt>_vscprintf, _vscprintf_l, _vscwprintf, _vscwprintf_l<ept id=\"p1\">](../../c-runtime-library/reference/vscprintf-vscprintf-l-vscwprintf-vscwprintf-l.md)</ept>","pos":[4762,4901],"source":" [_vscprintf, _vscprintf_l, _vscwprintf, _vscwprintf_l](../../c-runtime-library/reference/vscprintf-vscprintf-l-vscwprintf-vscwprintf-l.md)"}],"content":"---\ntitle: \"_vscprintf_p, _vscprintf_p_l, _vscwprintf_p, _vscwprintf_p_l | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\napiname: \n  - \"_vscprintf_p_l\"\n  - \"_vscprintf_p\"\n  - \"_vscwprintf_p_l\"\n  - \"_vscwprintf_p\"\napilocation: \n  - \"msvcrt.dll\"\n  - \"msvcr80.dll\"\n  - \"msvcr90.dll\"\n  - \"msvcr100.dll\"\n  - \"msvcr100_clr0400.dll\"\n  - \"msvcr110.dll\"\n  - \"msvcr110_clr0400.dll\"\n  - \"msvcr120.dll\"\n  - \"msvcr120_clr0400.dll\"\n  - \"ucrtbase.dll\"\napitype: \"DLLExport\"\nf1_keywords: \n  - \"_vscprintf_p\"\n  - \"_vscprintf_p_l\"\n  - \"vscwprintf_p\"\n  - \"vscprintf_p\"\n  - \"vscwprintf_p_l\"\n  - \"_vscwprintf_p_l\"\n  - \"vscprintf_p_l\"\n  - \"_vscwprintf_p\"\ndev_langs: \n  - \"C++\"\n  - \"C\"\nhelpviewer_keywords: \n  - \"vscprintf_p function\"\n  - \"_vsctprintf_p_l function\"\n  - \"vscwprintf_p_l function\"\n  - \"_vscwprintf_p_l function\"\n  - \"_vscprintf_p function\"\n  - \"vsctprintf_p function\"\n  - \"_vscprintf_p_l function\"\n  - \"_vscwprintf_p function\"\n  - \"vscwprintf_p function\"\n  - \"vsctprintf_p_l function\"\n  - \"_vsctprintf_p function\"\n  - \"vscprintf_p_l function\"\nms.assetid: 5da920b3-8652-4ee9-b19e-5aac3ace9d03\ncaps.latest.revision: 8\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# _vscprintf_p, _vscprintf_p_l, _vscwprintf_p, _vscwprintf_p_l\nReturns the number of characters in the formatted string using a pointer to a list of arguments, with the ability to specify the order in which the arguments are used.  \n  \n## Syntax  \n  \n```  \nint _vscprintf_p(  \n   const char *format,  \n   va_list argptr   \n);  \nint _vscprintf_p _l(  \n   const char *format,  \n   locale_t locale,  \n   va_list argptr   \n);  \nint _vscwprintf_p (  \n   const wchar_t *format,  \n   va_list argptr   \n);  \nint _vscwprintf_p _l(  \n   const wchar_t *format,  \n   locale_t locale,  \n   va_list argptr   \n);  \n```  \n  \n#### Parameters  \n `format`  \n Format-control string.  \n  \n `argptr`  \n Pointer to list of arguments.  \n  \n `locale`  \n The locale to use.  \n  \n For more information, see [Format Specifications](../../c-runtime-library/format-specification-syntax-printf-and-wprintf-functions.md).  \n  \n## Return Value  \n `_vscprintf_p` returns the number of characters that would be generated if the string pointed to by the list of arguments was printed or sent to a file or buffer using the specified formatting codes. The value returned does not include the terminating null character. `_vscwprintf_p` performs the same function for wide characters.  \n  \n## Remarks  \n These functions differ from `_vscprintf` and `_vscwprintf` only in that they support the ability to specify the order in which the arguments are used. For more information, see [printf_p Positional Parameters](../../c-runtime-library/printf-p-positional-parameters.md).  \n  \n The versions of these functions with the `_l` suffix are identical except that they use the locale parameter passed in instead of the current thread locale.  \n  \n If `format` is a null pointer, the invalid parameter handler is invoked, as described in [Parameter Validation](../../c-runtime-library/parameter-validation.md). If execution is allowed to continue, the functions return -1 and set `errno` to `EINVAL`.  \n  \n> [!IMPORTANT]\n>  Ensure that if `format` is a user-defined string, it is null terminated and has the correct number and type of parameters. For more information, see [Avoiding Buffer Overruns](http://msdn.microsoft.com/library/windows/desktop/ms717795).  \n  \n### Generic-Text Routine Mappings  \n  \n|TCHAR.H routine|_UNICODE & _MBCS not defined|_MBCS defined|_UNICODE defined|  \n|---------------------|------------------------------------|--------------------|-----------------------|  \n|`_vsctprintf_p`|`_vscprintf_p`|`_vscprintf_p`|`_vscwprintf_p`|  \n|`_vsctprintf_p_l`|`_vscprintf_p_l`|`_vscprintf_p_l`|`_vscwprintf_p_l`|  \n  \n## Requirements  \n  \n|Routine|Required header|  \n|-------------|---------------------|  \n|`_vscprintf_p`, `_vscprintf_p_l`|\\<stdio.h>|  \n|`_vscwprintf_p`, `_vscwprintf_p_l`|\\<stdio.h> or \\<wchar.h>|  \n  \n For additional compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md) in the Introduction.  \n  \n## Example  \n See the example for [vsprintf](../../c-runtime-library/reference/vsprintf-vsprintf-l-vswprintf-vswprintf-l-vswprintf-l.md).  \n  \n## See Also  \n [vprintf Functions](../../c-runtime-library/vprintf-functions.md)   \n [_scprintf_p, _scprintf_p_l, _scwprintf_p, _scwprintf_p_l](../../c-runtime-library/reference/scprintf-p-scprintf-p-l-scwprintf-p-scwprintf-p-l.md)   \n [_vscprintf, _vscprintf_l, _vscwprintf, _vscwprintf_l](../../c-runtime-library/reference/vscprintf-vscprintf-l-vscwprintf-vscwprintf-l.md)"}