{"nodes":[{"pos":[12,63],"content":"Constructing Output Stream Objects | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Constructing Output Stream Objects | Microsoft Docs","pos":[0,51]}]},{"content":"Constructing Output Stream Objects","pos":[593,627]},{"content":"If you use only the predefined <ph id=\"ph1\">`cout`</ph>, <ph id=\"ph2\">`cerr`</ph>, or <ph id=\"ph3\">`clog`</ph> objects, you do not need to construct an output stream.","pos":[628,740],"source":"If you use only the predefined `cout`, `cerr`, or `clog` objects, you do not need to construct an output stream."},{"content":"You must use constructors for:","pos":[741,771]},{"content":"Output File Stream Constructors","pos":[780,811]},{"content":"Output String Stream Constructors","pos":[864,897]},{"pos":[1009,1040],"content":"Output File Stream Constructors"},{"content":"You can construct an output file stream in one of two ways:","pos":[1044,1103]},{"pos":[1113,1183],"content":"Use the default constructor, and then call the <ph id=\"ph1\">`open`</ph> member function.","source":"Use the default constructor, and then call the `open` member function."},{"content":"Specify a filename and mode flags in the constructor call.","pos":[1376,1434]},{"pos":[1566,1599],"content":"Output String Stream Constructors"},{"pos":[1603,1690],"content":"To construct an output string stream, you can use <ph id=\"ph1\">`ostringstream`</ph> in the following way:","source":"To construct an output string stream, you can use `ostringstream` in the following way:"},{"pos":[1876,1961],"content":"The <ph id=\"ph1\">`ends`</ph> \"manipulator\" adds the necessary terminating null character to the string.","source":"The `ends` \"manipulator\" adds the necessary terminating null character to the string."},{"content":"See Also","pos":[1970,1978]},{"content":"Output Streams","pos":[1983,1997]}],"content":"---\ntitle: \"Constructing Output Stream Objects | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"output stream objects\"\nms.assetid: 93c8eab6-610c-4f48-b76d-1d960cac7641\ncaps.latest.revision: 9\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Constructing Output Stream Objects\nIf you use only the predefined `cout`, `cerr`, or `clog` objects, you do not need to construct an output stream. You must use constructors for:  \n  \n- [Output File Stream Constructors](#vclrfoutputfilestreamconstructorsanchor1)  \n  \n- [Output String Stream Constructors](#vclrfoutputstringstreamconstructorsanchor2)  \n  \n##  <a name=\"vclrfoutputfilestreamconstructorsanchor1\"></a> Output File Stream Constructors  \n You can construct an output file stream in one of two ways:  \n  \n-   Use the default constructor, and then call the `open` member function.  \n  \n ```  \n    ofstream myFile; // Static or on the stack  \n    myFile.open(\"filename\");\n\n \n    ofstream* pmyFile = new ofstream; // On the heap  \n    pmyFile->open(\"filename\");\n```  \n  \n-   Specify a filename and mode flags in the constructor call.  \n  \n ```  \n    ofstream myFile(\"filename\", ios_base::out);\n```  \n  \n##  <a name=\"vclrfoutputstringstreamconstructorsanchor2\"></a> Output String Stream Constructors  \n To construct an output string stream, you can use `ostringstream` in the following way:  \n  \n```  \n    using namespace std;  \nstring sp;  \nostringstream myString;  \nmyString <<\"this is a test\" <<ends;  \nsp = myString.str();\n// Obtain string  \ncout <<sp <endl;   \n```  \n  \n The `ends` \"manipulator\" adds the necessary terminating null character to the string.  \n  \n## See Also  \n [Output Streams](../standard-library/output-streams.md)\n\n"}