<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ru-ru">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-787e512" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0f0820a61293856fedad2e08ab60208ac8ce64da</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\error-messages\compiler-warnings\compiler-warning-level-1-c4730.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">39a98885772b53c623aeed5c0222ac2005b58c0a</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b09581e4ebdc09a4dff4ece74b199c9dd70ed226</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Compiler Warning (Level 1) C4730 | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Compiler Warning (Level 1) C4730</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>'main' : mixing _m64 and floating point expressions may result in incorrect code</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>A function uses <bpt id="p1">[</bpt>__m64<ept id="p1">](../../cpp/m64.md)</ept> and <bpt id="p2">**</bpt>float<ept id="p2">**</ept><ph id="ph1">/</ph><bpt id="p3">**</bpt>double<ept id="p3">**</ept> types.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Because the MMX and floating-point registers share the same physical register space (cannot be used simultaneously), using <ph id="ph1">`__m64`</ph> and <bpt id="p1">**</bpt>float<ept id="p1">**</ept><ph id="ph2">/</ph><bpt id="p2">**</bpt>double<ept id="p2">**</ept> types in the same function can result in data corruption, possibly causing an exception.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>To safely use <ph id="ph1">`__m64`</ph> types and floating-point types in the same function, each instruction that uses one of the types should be separated by the <bpt id="p1">**</bpt>_m_empty()<ept id="p1">**</ept> (for MMX) or <bpt id="p2">**</bpt>_m_femms()<ept id="p2">**</ept> (for 3DNow!) intrinsic.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The following sample generates C4730:</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>