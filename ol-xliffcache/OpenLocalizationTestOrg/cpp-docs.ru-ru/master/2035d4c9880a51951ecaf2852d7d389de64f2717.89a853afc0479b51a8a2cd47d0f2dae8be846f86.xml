{"nodes":[{"pos":[12,43],"content":"Register Usage | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Register Usage | Microsoft Docs","pos":[0,31]}]},{"content":"Register Usage","pos":[524,538]},{"content":"The <ph id=\"ph1\">[!INCLUDE[vcprx64](../assembler/inline/includes/vcprx64_md.md)]</ph> architecture provides for 16 general-purpose registers (hereafter referred to as integer registers) as well as 16 XMM/YMM registers available for floating-point use.","pos":[539,772],"source":"The [!INCLUDE[vcprx64](../assembler/inline/includes/vcprx64_md.md)] architecture provides for 16 general-purpose registers (hereafter referred to as integer registers) as well as 16 XMM/YMM registers available for floating-point use."},{"content":"Volatile registers are scratch registers presumed by the caller to be destroyed across a call.","pos":[773,867]},{"content":"Nonvolatile registers are required to retain their values across a function call and must be saved by the callee if used.","pos":[868,989]},{"content":"The following table describes how each register is used across function calls:","pos":[996,1074]},{"content":"Register","pos":[1098,1106]},{"content":"Status","pos":[1107,1113]},{"content":"Use","pos":[1114,1117]},{"content":"RAX","pos":[1122,1125]},{"content":"Volatile","pos":[1126,1134]},{"content":"Return value register","pos":[1135,1156]},{"content":"RCX","pos":[1161,1164]},{"content":"Volatile","pos":[1165,1173]},{"content":"First integer argument","pos":[1174,1196]},{"content":"RDX","pos":[1201,1204]},{"content":"Volatile","pos":[1205,1213]},{"content":"Second integer argument","pos":[1214,1237]},{"content":"R8","pos":[1242,1244]},{"content":"Volatile","pos":[1245,1253]},{"content":"Third integer argument","pos":[1254,1276]},{"content":"R9","pos":[1281,1283]},{"content":"Volatile","pos":[1284,1292]},{"content":"Fourth integer argument","pos":[1293,1316]},{"content":"R10:R11","pos":[1321,1328]},{"content":"Volatile","pos":[1329,1337]},{"content":"Must be preserved as needed by caller; used in syscall/sysret instructions","pos":[1338,1412]},{"content":"R12:R15","pos":[1417,1424]},{"content":"Nonvolatile","pos":[1425,1436]},{"content":"Must be preserved by callee","pos":[1437,1464]},{"content":"RDI","pos":[1469,1472]},{"content":"Nonvolatile","pos":[1473,1484]},{"content":"Must be preserved by callee","pos":[1485,1512]},{"content":"RSI","pos":[1517,1520]},{"content":"Nonvolatile","pos":[1521,1532]},{"content":"Must be preserved by callee","pos":[1533,1560]},{"content":"RBX","pos":[1565,1568]},{"content":"Nonvolatile","pos":[1569,1580]},{"content":"Must be preserved by callee","pos":[1581,1608]},{"content":"RBP","pos":[1613,1616]},{"content":"Nonvolatile","pos":[1617,1628]},{"content":"May be used as a frame pointer; must be preserved by callee","pos":[1629,1688]},{"content":"RSP","pos":[1693,1696]},{"content":"Nonvolatile","pos":[1697,1708]},{"content":"Stack pointer","pos":[1709,1722]},{"content":"XMM0, YMM0","pos":[1727,1737]},{"content":"Volatile","pos":[1738,1746]},{"pos":[1747,1820],"content":"First FP argument; first vector-type argument when <ph id=\"ph1\">`__vectorcall`</ph> is used","source":"First FP argument; first vector-type argument when `__vectorcall` is used"},{"content":"XMM1, YMM1","pos":[1825,1835]},{"content":"Volatile","pos":[1836,1844]},{"pos":[1845,1920],"content":"Second FP argument; second vector-type argument when <ph id=\"ph1\">`__vectorcall`</ph> is used","source":"Second FP argument; second vector-type argument when `__vectorcall` is used"},{"content":"XMM2, YMM2","pos":[1925,1935]},{"content":"Volatile","pos":[1936,1944]},{"pos":[1945,2018],"content":"Third FP argument; third vector-type argument when <ph id=\"ph1\">`__vectorcall`</ph> is used","source":"Third FP argument; third vector-type argument when `__vectorcall` is used"},{"content":"XMM3, YMM3","pos":[2023,2033]},{"content":"Volatile","pos":[2034,2042]},{"pos":[2043,2118],"content":"Fourth FP argument; fourth vector-type argument when <ph id=\"ph1\">`__vectorcall`</ph> is used","source":"Fourth FP argument; fourth vector-type argument when `__vectorcall` is used"},{"content":"XMM4, YMM4","pos":[2123,2133]},{"content":"Volatile","pos":[2134,2142]},{"pos":[2143,2236],"content":"Must be preserved as needed by caller; fifth vector-type argument when <ph id=\"ph1\">`__vectorcall`</ph> is used","source":"Must be preserved as needed by caller; fifth vector-type argument when `__vectorcall` is used"},{"content":"XMM5, YMM5","pos":[2241,2251]},{"content":"Volatile","pos":[2252,2260]},{"pos":[2261,2354],"content":"Must be preserved as needed by caller; sixth vector-type argument when <ph id=\"ph1\">`__vectorcall`</ph> is used","source":"Must be preserved as needed by caller; sixth vector-type argument when `__vectorcall` is used"},{"content":"XMM6:XMM15, YMM6:YMM15","pos":[2359,2381]},{"content":"Nonvolatile (XMM), Volatile (upper half of YMM)","pos":[2382,2429]},{"content":"Must be preserved as needed by callee.","pos":[2430,2468]},{"content":"YMM registers must be preserved as needed by caller.","pos":[2469,2521]},{"content":"See Also","pos":[2531,2539]},{"content":"x64 Software Conventions","pos":[2544,2568]},{"content":"__vectorcall","pos":[2613,2625]}],"content":"---\ntitle: \"Register Usage | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"C++\"\nms.assetid: ce58e2cf-afd3-4068-980e-28a209298265\ncaps.latest.revision: 10\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Register Usage\nThe [!INCLUDE[vcprx64](../assembler/inline/includes/vcprx64_md.md)] architecture provides for 16 general-purpose registers (hereafter referred to as integer registers) as well as 16 XMM/YMM registers available for floating-point use. Volatile registers are scratch registers presumed by the caller to be destroyed across a call. Nonvolatile registers are required to retain their values across a function call and must be saved by the callee if used.  \n  \n The following table describes how each register is used across function calls:  \n  \n||||  \n|-|-|-|  \n|Register|Status|Use|  \n|RAX|Volatile|Return value register|  \n|RCX|Volatile|First integer argument|  \n|RDX|Volatile|Second integer argument|  \n|R8|Volatile|Third integer argument|  \n|R9|Volatile|Fourth integer argument|  \n|R10:R11|Volatile|Must be preserved as needed by caller; used in syscall/sysret instructions|  \n|R12:R15|Nonvolatile|Must be preserved by callee|  \n|RDI|Nonvolatile|Must be preserved by callee|  \n|RSI|Nonvolatile|Must be preserved by callee|  \n|RBX|Nonvolatile|Must be preserved by callee|  \n|RBP|Nonvolatile|May be used as a frame pointer; must be preserved by callee|  \n|RSP|Nonvolatile|Stack pointer|  \n|XMM0, YMM0|Volatile|First FP argument; first vector-type argument when `__vectorcall` is used|  \n|XMM1, YMM1|Volatile|Second FP argument; second vector-type argument when `__vectorcall` is used|  \n|XMM2, YMM2|Volatile|Third FP argument; third vector-type argument when `__vectorcall` is used|  \n|XMM3, YMM3|Volatile|Fourth FP argument; fourth vector-type argument when `__vectorcall` is used|  \n|XMM4, YMM4|Volatile|Must be preserved as needed by caller; fifth vector-type argument when `__vectorcall` is used|  \n|XMM5, YMM5|Volatile|Must be preserved as needed by caller; sixth vector-type argument when `__vectorcall` is used|  \n|XMM6:XMM15, YMM6:YMM15|Nonvolatile (XMM), Volatile (upper half of YMM)|Must be preserved as needed by callee. YMM registers must be preserved as needed by caller.|  \n  \n## See Also  \n [x64 Software Conventions](../build/x64-software-conventions.md)   \n [__vectorcall](../cpp/vectorcall.md)"}