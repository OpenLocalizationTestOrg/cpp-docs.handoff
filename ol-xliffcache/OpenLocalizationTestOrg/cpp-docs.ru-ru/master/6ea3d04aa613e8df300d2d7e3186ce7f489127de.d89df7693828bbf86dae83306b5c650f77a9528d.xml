{"nodes":[{"pos":[12,46],"content":"CComboBoxEx Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"CComboBoxEx Class | Microsoft Docs","pos":[0,34]}]},{"content":"CComboBoxEx Class","pos":[848,865]},{"content":"Extends the combo box control by providing support for image lists.","pos":[866,933]},{"content":"Syntax","pos":[942,948]},{"content":"Members","pos":[1011,1018]},{"content":"Public Constructors","pos":[1028,1047]},{"content":"Name","pos":[1054,1058]},{"content":"Description","pos":[1059,1070]},{"content":"CComboBoxEx::CComboBoxEx","pos":[1109,1133]},{"pos":[1162,1196],"content":"Constructs a <ph id=\"ph1\">`CComboBoxEx`</ph> object.","source":"Constructs a `CComboBoxEx` object."},{"content":"Public Methods","pos":[1207,1221]},{"content":"Name","pos":[1228,1232]},{"content":"Description","pos":[1233,1244]},{"content":"CComboBoxEx::Create","pos":[1283,1302]},{"pos":[1326,1392],"content":"Creates the combo box and attaches it to the <ph id=\"ph1\">`CComboBoxEx`</ph> object.","source":"Creates the combo box and attaches it to the `CComboBoxEx` object."},{"content":"CComboBoxEx::CreateEx","pos":[1398,1419]},{"pos":[1445,1551],"content":"Creates a combo box with the specified Windows extended styles and attaches it to a <bpt id=\"p1\">**</bpt>ComboBoxEx<ept id=\"p1\">**</ept> object.","source":"Creates a combo box with the specified Windows extended styles and attaches it to a **ComboBoxEx** object."},{"content":"CComboBoxEx::DeleteItem","pos":[1557,1580]},{"pos":[1608,1654],"content":"Removes an item from a <bpt id=\"p1\">**</bpt>ComboBoxEx<ept id=\"p1\">**</ept> control.","source":"Removes an item from a **ComboBoxEx** control."},{"content":"CComboBoxEx::GetComboBoxCtrl","pos":[1660,1688]},{"content":"Retrieves a pointer to the child combo box control.","pos":[1721,1772]},{"content":"CComboBoxEx::GetEditCtrl","pos":[1778,1802]},{"pos":[1831,1908],"content":"Retrieves the handle to the edit control portion of a <bpt id=\"p1\">**</bpt>ComboBoxEx<ept id=\"p1\">**</ept> control.","source":"Retrieves the handle to the edit control portion of a **ComboBoxEx** control."},{"content":"CComboBoxEx::GetExtendedStyle","pos":[1914,1943]},{"pos":[1977,2052],"content":"Retrieves the extended styles that are in use for a <bpt id=\"p1\">**</bpt>ComboBoxEx<ept id=\"p1\">**</ept> control.","source":"Retrieves the extended styles that are in use for a **ComboBoxEx** control."},{"content":"CComboBoxEx::GetImageList","pos":[2058,2083]},{"pos":[2113,2188],"content":"Retrieves a pointer to the image list assigned to a <bpt id=\"p1\">**</bpt>ComboBoxEx<ept id=\"p1\">**</ept> control.","source":"Retrieves a pointer to the image list assigned to a **ComboBoxEx** control."},{"content":"CComboBoxEx::GetItem","pos":[2194,2214]},{"pos":[2239,2298],"content":"Retrieves item information for a given <bpt id=\"p1\">**</bpt>ComboBoxEx<ept id=\"p1\">**</ept> item.","source":"Retrieves item information for a given **ComboBoxEx** item."},{"content":"CComboBoxEx::HasEditChanged","pos":[2304,2331]},{"pos":[2363,2456],"content":"Determines if the user has changed the contents of the <bpt id=\"p1\">**</bpt>ComboBoxEx<ept id=\"p1\">**</ept> edit control by typing.","source":"Determines if the user has changed the contents of the **ComboBoxEx** edit control by typing."},{"content":"CComboBoxEx::InsertItem","pos":[2462,2485]},{"pos":[2513,2560],"content":"Inserts a new item in a <bpt id=\"p1\">**</bpt>ComboBoxEx<ept id=\"p1\">**</ept> control.","source":"Inserts a new item in a **ComboBoxEx** control."},{"content":"CComboBoxEx::SetExtendedStyle","pos":[2566,2595]},{"pos":[2629,2682],"content":"Sets extended styles within a <bpt id=\"p1\">**</bpt>ComboBoxEx<ept id=\"p1\">**</ept> control.","source":"Sets extended styles within a **ComboBoxEx** control."},{"content":"CComboBoxEx::SetImageList","pos":[2688,2713]},{"pos":[2743,2791],"content":"Sets an image list for a <bpt id=\"p1\">**</bpt>ComboBoxEx<ept id=\"p1\">**</ept> control.","source":"Sets an image list for a **ComboBoxEx** control."},{"content":"CComboBoxEx::SetItem","pos":[2797,2817]},{"pos":[2842,2902],"content":"Sets the attributes for an item in a <bpt id=\"p1\">**</bpt>ComboBoxEx<ept id=\"p1\">**</ept> control.","source":"Sets the attributes for an item in a **ComboBoxEx** control."},{"content":"CComboBoxEx::SetWindowTheme","pos":[2908,2935]},{"content":"Sets the visual style of the extended combo box control.","pos":[2967,3023]},{"content":"Remarks","pos":[3033,3040]},{"content":"By using <ph id=\"ph1\">`CComboBoxEx`</ph> to create combo box controls, you no longer need to implement your own image drawing code.","pos":[3044,3157],"source":"By using `CComboBoxEx` to create combo box controls, you no longer need to implement your own image drawing code."},{"content":"Instead, use <ph id=\"ph1\">`CComboBoxEx`</ph> to access images from an image list.","pos":[3158,3221],"source":" Instead, use `CComboBoxEx` to access images from an image list."},{"content":"Image List Support","pos":[3230,3248]},{"content":"In a standard combo box, the owner of the combo box is responsible for drawing an image by creating the combo box as an owner-draw control.","pos":[3252,3391]},{"content":"When you use <ph id=\"ph1\">`CComboBoxEx`</ph>, you do not need to set the drawing styles <bpt id=\"p1\">**</bpt>CBS_OWNERDRAWFIXED<ept id=\"p1\">**</ept> and <bpt id=\"p2\">**</bpt>CBS_HASSTRINGS<ept id=\"p2\">**</ept> because they are implied.","pos":[3392,3533],"source":" When you use `CComboBoxEx`, you do not need to set the drawing styles **CBS_OWNERDRAWFIXED** and **CBS_HASSTRINGS** because they are implied."},{"content":"Otherwise, you must write code to perform drawing operations.","pos":[3534,3595]},{"content":"A <ph id=\"ph1\">`CComboBoxEx`</ph> control supports up to three images per item: one for a selected state, one for an unselected state, and one for an overlay image.","pos":[3596,3742],"source":" A `CComboBoxEx` control supports up to three images per item: one for a selected state, one for an unselected state, and one for an overlay image."},{"content":"Styles","pos":[3751,3757]},{"content":"supports the styles <bpt id=\"p1\">**</bpt>CBS_SIMPLE<ept id=\"p1\">**</ept>, <bpt id=\"p2\">**</bpt>CBS_DROPDOWN<ept id=\"p2\">**</ept>, <bpt id=\"p3\">**</bpt>CBS_DROPDOWNLIST<ept id=\"p3\">**</ept>, and <bpt id=\"p4\">**</bpt>WS_CHILD<ept id=\"p4\">**</ept>.","pos":[3775,3868],"source":" supports the styles **CBS_SIMPLE**, **CBS_DROPDOWN**, **CBS_DROPDOWNLIST**, and **WS_CHILD**."},{"content":"All other styles passed when you create the window are ignored by the control.","pos":[3869,3947]},{"content":"After the window is created, you can provide other combo box styles by calling the <ph id=\"ph1\">`CComboBoxEx`</ph> member function <bpt id=\"p1\">[</bpt>SetExtendedStyle<ept id=\"p1\">](#ccomboboxex__setextendedstyle)</ept>.","pos":[3948,4112],"source":" After the window is created, you can provide other combo box styles by calling the `CComboBoxEx` member function [SetExtendedStyle](#ccomboboxex__setextendedstyle)."},{"content":"With these styles, you can:","pos":[4113,4140]},{"content":"Set string searches in the list to be case-sensitive.","pos":[4150,4203]},{"content":"Create a combo box control that uses the slash ('/'), backslash ('<ph id=\"ph1\">\\\\</ph>'), and period ('.') characters as word delimiters.","pos":[4213,4332],"source":"Create a combo box control that uses the slash ('/'), backslash ('\\\\'), and period ('.') characters as word delimiters."},{"content":"This allow users to jump from word to word, using the keyboard shortcut CTRL+ ARROW.","pos":[4333,4417]},{"content":"Set the combo box control to either display or not display an image.","pos":[4427,4495]},{"content":"If no image is displayed, the combo box can remove the text indent that accommodates an image.","pos":[4496,4590]},{"content":"Create a narrow combo box control, including sizing it so it clips the wider combo box it contains.","pos":[4600,4699]},{"pos":[4706,4801],"content":"These style flags are described further in <bpt id=\"p1\">[</bpt>Using CComboBoxEx<ept id=\"p1\">](../../mfc/using-ccomboboxex.md)</ept>.","source":"These style flags are described further in [Using CComboBoxEx](../../mfc/using-ccomboboxex.md)."},{"content":"Item Retention and Callback Item Attributes","pos":[4810,4853]},{"content":"Item information, such as indexes for items and images, indentation values, and text strings, is stored in the Win32 structure <bpt id=\"p1\">[</bpt>COMBOBOXEXITEM<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb775746)</ept>, as described in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","pos":[4857,5134],"source":"Item information, such as indexes for items and images, indentation values, and text strings, is stored in the Win32 structure [COMBOBOXEXITEM](http://msdn.microsoft.com/library/windows/desktop/bb775746), as described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"content":"The structure also contains members that correspond to callback flags.","pos":[5135,5205]},{"pos":[5212,5307],"content":"For a detailed, conceptual discussion, see <bpt id=\"p1\">[</bpt>Using CComboBoxEx<ept id=\"p1\">](../../mfc/using-ccomboboxex.md)</ept>.","source":"For a detailed, conceptual discussion, see [Using CComboBoxEx](../../mfc/using-ccomboboxex.md)."},{"content":"Inheritance Hierarchy","pos":[5316,5337]},{"content":"CObject","pos":[5342,5349]},{"content":"CCmdTarget","pos":[5396,5406]},{"content":"CWnd","pos":[5456,5460]},{"content":"CComboBox","pos":[5504,5513]},{"content":"Requirements","pos":[5583,5595]},{"pos":[5599,5619],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> afxcmn.h","source":"**Header:** afxcmn.h"},{"pos":[5670,5694],"content":"CComboBoxEx::CComboBoxEx"},{"pos":[5698,5757],"content":"Call this member function to create a <ph id=\"ph1\">`CComboBoxEx`</ph> object.","source":"Call this member function to create a `CComboBoxEx` object."},{"pos":[5833,5852],"content":"CComboBoxEx::Create"},{"pos":[5856,5922],"content":"Creates the combo box and attaches it to the <ph id=\"ph1\">`CComboBoxEx`</ph> object.","source":"Creates the combo box and attaches it to the `CComboBoxEx` object."},{"content":"Parameters","pos":[6052,6062]},{"content":"Specifies the combination of combo box styles applied to the combo box.","pos":[6079,6150]},{"content":"See <bpt id=\"p1\">**</bpt>Remarks<ept id=\"p1\">**</ept> below for more information about styles.","pos":[6151,6207],"source":" See **Remarks** below for more information about styles."},{"content":"A reference to a <bpt id=\"p1\">[</bpt>CRect<ept id=\"p1\">](../../atl-mfc-shared/reference/crect-class.md)</ept> object or <bpt id=\"p2\">[</bpt>RECT<ept id=\"p2\">](http://msdn.microsoft.com/library/windows/desktop/dd162897)</ept> structure, which is the position and size of the combo box.","pos":[6224,6432],"source":" A reference to a [CRect](../../atl-mfc-shared/reference/crect-class.md) object or [RECT](http://msdn.microsoft.com/library/windows/desktop/dd162897) structure, which is the position and size of the combo box."},{"content":"A pointer to a <bpt id=\"p1\">[</bpt>CWnd<ept id=\"p1\">](../../mfc/reference/cwnd-class.md)</ept> object that is the parent window of the combo box (usually a <ph id=\"ph1\">`CDialog`</ph>).","pos":[6455,6584],"source":" A pointer to a [CWnd](../../mfc/reference/cwnd-class.md) object that is the parent window of the combo box (usually a `CDialog`)."},{"content":"It must not be <bpt id=\"p1\">**</bpt>NULL<ept id=\"p1\">**</ept>.","pos":[6585,6609],"source":" It must not be **NULL**."},{"content":"Specifies the combo box's control ID.","pos":[6625,6662]},{"content":"Return Value","pos":[6672,6684]},{"content":"Nonzero if the object was created successfully; otherwise 0.","pos":[6688,6748]},{"content":"Remarks","pos":[6758,6765]},{"pos":[6769,6812],"content":"Create a <ph id=\"ph1\">`CComboBoxEx`</ph> object in two steps:","source":"Create a `CComboBoxEx` object in two steps:"},{"pos":[6822,6904],"content":"Call <bpt id=\"p1\">[</bpt>CComboBoxEx<ept id=\"p1\">](#ccomboboxex__ccomboboxex)</ept> to construct a <ph id=\"ph1\">`CComboBoxEx`</ph> object.","source":"Call [CComboBoxEx](#ccomboboxex__ccomboboxex) to construct a `CComboBoxEx` object."},{"pos":[6914,7030],"content":"Call this member function, which creates the extended Windows combo box and attaches it to the <ph id=\"ph1\">`CComboBoxEx`</ph> object.","source":"Call this member function, which creates the extended Windows combo box and attaches it to the `CComboBoxEx` object."},{"pos":[7037,7099],"content":"When you call <bpt id=\"p1\">**</bpt>Create<ept id=\"p1\">**</ept>, MFC initializes the common controls.","source":"When you call **Create**, MFC initializes the common controls."},{"content":"When you create the combo box, you can specify any or all of the following combo-box styles:","pos":[7106,7198]},{"content":"CBS_SIMPLE","pos":[7208,7218]},{"content":"CBS_DROPDOWN","pos":[7230,7242]},{"content":"CBS_DROPDOWNLIST","pos":[7254,7270]},{"content":"CBS_AUTOHSCROLL","pos":[7282,7297]},{"content":"WS_CHILD","pos":[7309,7317]},{"content":"All other styles passed when you create the window are ignored.","pos":[7326,7389]},{"content":"The <bpt id=\"p1\">**</bpt>ComboBoxEx<ept id=\"p1\">**</ept> control also supports extended styles that provide additional features.","pos":[7390,7480],"source":" The **ComboBoxEx** control also supports extended styles that provide additional features."},{"content":"These styles are described in <bpt id=\"p1\">[</bpt>ComboBoxEx control extended styles<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb775742)</ept>, in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","pos":[7481,7668],"source":" These styles are described in [ComboBoxEx control extended styles](http://msdn.microsoft.com/library/windows/desktop/bb775742), in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"content":"Set these styles by calling <bpt id=\"p1\">[</bpt>SetExtendedStyle<ept id=\"p1\">](#ccomboboxex__setextendedstyle)</ept>.","pos":[7669,7748],"source":" Set these styles by calling [SetExtendedStyle](#ccomboboxex__setextendedstyle)."},{"pos":[7755,7879],"content":"If you want to use extended windows styles with your control, call <bpt id=\"p1\">[</bpt>CreateEx<ept id=\"p1\">](#ccomboboxex__createex)</ept> instead of <bpt id=\"p2\">**</bpt>Create<ept id=\"p2\">**</ept>.","source":"If you want to use extended windows styles with your control, call [CreateEx](#ccomboboxex__createex) instead of **Create**."},{"pos":[7927,7948],"content":"CComboBoxEx::CreateEx"},{"pos":[7952,8075],"content":"Call this function to create an extended combo box control (a child window) and associate it with the <ph id=\"ph1\">`CComboBoxEx`</ph> object.","source":"Call this function to create an extended combo box control (a child window) and associate it with the `CComboBoxEx` object."},{"content":"Parameters","pos":[8230,8240]},{"content":"Specifies the extended style of the control being created.","pos":[8259,8317]},{"content":"For a list of extended Windows styles, see the <ph id=\"ph1\">`dwExStyle`</ph> parameter for <bpt id=\"p1\">[</bpt>CreateWindowEx<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms632680)</ept> in the <ph id=\"ph2\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","pos":[8318,8527],"source":" For a list of extended Windows styles, see the `dwExStyle` parameter for [CreateWindowEx](http://msdn.microsoft.com/library/windows/desktop/ms632680) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"content":"The combo box control's style.","pos":[8547,8577]},{"content":"See <bpt id=\"p1\">[</bpt>Create<ept id=\"p1\">](#ccomboboxex__create)</ept> for a list of styles.","pos":[8578,8634],"source":" See [Create](#ccomboboxex__create) for a list of styles."},{"content":"A reference to a <bpt id=\"p1\">[</bpt>RECT<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/dd162897)</ept> structure describing the size and position of the window to be created, in client coordinates of <ph id=\"ph1\">`pParentWnd`</ph>.","pos":[8651,8845],"source":" A reference to a [RECT](http://msdn.microsoft.com/library/windows/desktop/dd162897) structure describing the size and position of the window to be created, in client coordinates of `pParentWnd`."},{"content":"A pointer to the window that is the control's parent.","pos":[8868,8921]},{"content":"The control's child-window ID.","pos":[8937,8967]},{"content":"Return Value","pos":[8977,8989]},{"content":"Nonzero if successful; otherwise 0.","pos":[8993,9028]},{"content":"Remarks","pos":[9038,9045]},{"pos":[9049,9179],"content":"Use <ph id=\"ph1\">`CreateEx`</ph> instead of <bpt id=\"p1\">**</bpt>Create<ept id=\"p1\">**</ept> to apply extended Windows styles, specified by the Windows extended style preface <bpt id=\"p2\">**</bpt>WS_EX_<ept id=\"p2\">**</ept>.","source":"Use `CreateEx` instead of **Create** to apply extended Windows styles, specified by the Windows extended style preface **WS_EX_**."},{"content":"creates the control with the extended Windows styles specified by <ph id=\"ph1\">`dwExStyle`</ph>.","pos":[9197,9275],"source":" creates the control with the extended Windows styles specified by `dwExStyle`."},{"content":"You must set extended styles specific to an extended combo box control using <bpt id=\"p1\">[</bpt>SetExtendedStyle<ept id=\"p1\">](#ccomboboxex__setextendedstyle)</ept>.","pos":[9276,9404],"source":" You must set extended styles specific to an extended combo box control using [SetExtendedStyle](#ccomboboxex__setextendedstyle)."},{"content":"For example, use <ph id=\"ph1\">`CreateEx`</ph> to set such styles as <bpt id=\"p1\">**</bpt>WS_EX_CONTEXTHELP<ept id=\"p1\">**</ept>, but use <ph id=\"ph2\">`SetExtendedStyle`</ph> to set such styles as <bpt id=\"p2\">**</bpt>CBES_EX_CASESENSITIVE<ept id=\"p2\">**</ept>.","pos":[9405,9553],"source":" For example, use `CreateEx` to set such styles as **WS_EX_CONTEXTHELP**, but use `SetExtendedStyle` to set such styles as **CBES_EX_CASESENSITIVE**."},{"content":"For more information, see the styles described in the topic <bpt id=\"p1\">[</bpt>ComboBoxEx Control Extended Styles<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb775742)</ept> in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","pos":[9554,9770],"source":" For more information, see the styles described in the topic [ComboBoxEx Control Extended Styles](http://msdn.microsoft.com/library/windows/desktop/bb775742) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"pos":[9820,9843],"content":"CComboBoxEx::DeleteItem"},{"pos":[9847,9893],"content":"Removes an item from a <bpt id=\"p1\">**</bpt>ComboBoxEx<ept id=\"p1\">**</ept> control.","source":"Removes an item from a **ComboBoxEx** control."},{"content":"Parameters","pos":[9946,9956]},{"content":"Zero-based index of the item to be removed.","pos":[9972,10015]},{"content":"Return Value","pos":[10025,10037]},{"content":"The number of items remaining in the control.","pos":[10041,10086]},{"content":"If <ph id=\"ph1\">`iIndex`</ph> is invalid, the function returns <bpt id=\"p1\">**</bpt>CB_ERR<ept id=\"p1\">**</ept>.","pos":[10087,10143],"source":" If `iIndex` is invalid, the function returns **CB_ERR**."},{"content":"Remarks","pos":[10153,10160]},{"content":"This member function implements the functionality of the message <bpt id=\"p1\">[</bpt>CBEM_DELETEITEM<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb775768)</ept>, as described in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","pos":[10164,10380],"source":"This member function implements the functionality of the message [CBEM_DELETEITEM](http://msdn.microsoft.com/library/windows/desktop/bb775768), as described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"content":"When you call DeleteItem, a <bpt id=\"p1\">[</bpt>WM_NOTIFY<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb775583)</ept> message with <bpt id=\"p2\">**</bpt>CBEN_DELETEITEM<ept id=\"p2\">**</ept> notification will be sent to the parent window.","pos":[10381,10561],"source":" When you call DeleteItem, a [WM_NOTIFY](http://msdn.microsoft.com/library/windows/desktop/bb775583) message with **CBEN_DELETEITEM** notification will be sent to the parent window."},{"pos":[10616,10644],"content":"CComboBoxEx::GetComboBoxCtrl"},{"pos":[10648,10744],"content":"Call this member function to get a pointer to a combo box control within a <ph id=\"ph1\">`CComboBoxEx`</ph> object.","source":"Call this member function to get a pointer to a combo box control within a `CComboBoxEx` object."},{"content":"Return Value","pos":[10799,10811]},{"pos":[10815,10849],"content":"A pointer to a <ph id=\"ph1\">`CComboBox`</ph> object.","source":"A pointer to a `CComboBox` object."},{"content":"Remarks","pos":[10859,10866]},{"pos":[10870,10958],"content":"The <ph id=\"ph1\">`CComboBoxEx`</ph> control consists of a parent window, which encapsulates a <ph id=\"ph2\">`CComboBox`</ph>.","source":"The `CComboBoxEx` control consists of a parent window, which encapsulates a `CComboBox`."},{"pos":[10965,11095],"content":"The <ph id=\"ph1\">`CComboBox`</ph> object pointed to by the return value is a temporary object and is destroyed during the next idle processing time.","source":"The `CComboBox` object pointed to by the return value is a temporary object and is destroyed during the next idle processing time."},{"pos":[11146,11170],"content":"CComboBoxEx::GetEditCtrl"},{"content":"Call this member function to get a pointer to the edit control for a combo box.","pos":[11174,11253]},{"content":"Return Value","pos":[11300,11312]},{"pos":[11316,11382],"content":"A pointer to a <bpt id=\"p1\">[</bpt>CEdit<ept id=\"p1\">](../../mfc/reference/cedit-class.md)</ept> object.","source":"A pointer to a [CEdit](../../mfc/reference/cedit-class.md) object."},{"content":"Remarks","pos":[11392,11399]},{"pos":[11403,11495],"content":"A <ph id=\"ph1\">`CComboBoxEx`</ph> control uses an edit box when it is created with the <bpt id=\"p1\">**</bpt>CBS_DROPDOWN<ept id=\"p1\">**</ept> style.","source":"A `CComboBoxEx` control uses an edit box when it is created with the **CBS_DROPDOWN** style."},{"pos":[11502,11628],"content":"The <ph id=\"ph1\">`CEdit`</ph> object pointed to by the return value is a temporary object and is destroyed during the next idle processing time.","source":"The `CEdit` object pointed to by the return value is a temporary object and is destroyed during the next idle processing time."},{"pos":[11684,11713],"content":"CComboBoxEx::GetExtendedStyle"},{"pos":[11717,11803],"content":"Call this member function to get the extended styles used for a <ph id=\"ph1\">`CComboBoxEx`</ph> control.","source":"Call this member function to get the extended styles used for a `CComboBoxEx` control."},{"content":"Return Value","pos":[11863,11875]},{"pos":[11879,11971],"content":"The <ph id=\"ph1\">`DWORD`</ph> value that contains the extended styles that are used for the combo box control.","source":"The `DWORD` value that contains the extended styles that are used for the combo box control."},{"content":"Remarks","pos":[11981,11988]},{"pos":[11992,12192],"content":"See <bpt id=\"p1\">[</bpt>ComboBoxEx Control Extended Styles<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb775742)</ept> in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph> for more information about these styles.","source":"See [ComboBoxEx Control Extended Styles](http://msdn.microsoft.com/library/windows/desktop/bb775742) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)] for more information about these styles."},{"pos":[12244,12269],"content":"CComboBoxEx::GetImageList"},{"pos":[12273,12366],"content":"Call this member function to get a pointer to the image list used by a <ph id=\"ph1\">`CComboBoxEx`</ph> control.","source":"Call this member function to get a pointer to the image list used by a `CComboBoxEx` control."},{"content":"Return Value","pos":[12428,12440]},{"content":"A pointer to a <bpt id=\"p1\">[</bpt>CImageList<ept id=\"p1\">](../../mfc/reference/cimagelist-class.md)</ept> object.","pos":[12444,12520],"source":"A pointer to a [CImageList](../../mfc/reference/cimagelist-class.md) object."},{"content":"If it fails, this member function returns <bpt id=\"p1\">**</bpt>NULL<ept id=\"p1\">**</ept>.","pos":[12521,12572],"source":" If it fails, this member function returns **NULL**."},{"content":"Remarks","pos":[12582,12589]},{"pos":[12593,12724],"content":"The <ph id=\"ph1\">`CImageList`</ph> object pointed to by the return value is a temporary object and is destroyed during the next idle processing time.","source":"The `CImageList` object pointed to by the return value is a temporary object and is destroyed during the next idle processing time."},{"pos":[12771,12791],"content":"CComboBoxEx::GetItem"},{"pos":[12795,12854],"content":"Retrieves item information for a given <bpt id=\"p1\">**</bpt>ComboBoxEx<ept id=\"p1\">**</ept> item.","source":"Retrieves item information for a given **ComboBoxEx** item."},{"content":"Parameters","pos":[12918,12928]},{"content":"A pointer to a <bpt id=\"p1\">[</bpt>COMBOBOXEXITEM<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb775746)</ept> structure that will receive the item information.","pos":[12945,13086],"source":" A pointer to a [COMBOBOXEXITEM](http://msdn.microsoft.com/library/windows/desktop/bb775746) structure that will receive the item information."},{"content":"Return Value","pos":[13096,13108]},{"content":"Nonzero if the operation was successful; otherwise 0.","pos":[13112,13165]},{"content":"Remarks","pos":[13175,13182]},{"pos":[13186,13399],"content":"This member function implements the functionality of the message <bpt id=\"p1\">[</bpt>CBEM_GETITEM<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb775779)</ept>, as described in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"This member function implements the functionality of the message [CBEM_GETITEM](http://msdn.microsoft.com/library/windows/desktop/bb775779), as described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"pos":[13453,13480],"content":"CComboBoxEx::HasEditChanged"},{"pos":[13484,13577],"content":"Determines if the user has changed the contents of the <bpt id=\"p1\">**</bpt>ComboBoxEx<ept id=\"p1\">**</ept> edit control by typing.","source":"Determines if the user has changed the contents of the **ComboBoxEx** edit control by typing."},{"content":"Return Value","pos":[13625,13637]},{"content":"Nonzero if the user has typed in the control's edit box; otherwise 0.","pos":[13641,13710]},{"content":"Remarks","pos":[13720,13727]},{"pos":[13731,13951],"content":"This member function implements the functionality of the message <bpt id=\"p1\">[</bpt>CBEM_HASEDITCHANGED<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb775782)</ept>, as described in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"This member function implements the functionality of the message [CBEM_HASEDITCHANGED](http://msdn.microsoft.com/library/windows/desktop/bb775782), as described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"pos":[14001,14024],"content":"CComboBoxEx::InsertItem"},{"pos":[14028,14075],"content":"Inserts a new item in a <bpt id=\"p1\">**</bpt>ComboBoxEx<ept id=\"p1\">**</ept> control.","source":"Inserts a new item in a **ComboBoxEx** control."},{"content":"Parameters","pos":[14147,14157]},{"content":"A pointer to a <bpt id=\"p1\">[</bpt>COMBOBOXEXITEM<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb775746)</ept> structure that will receive the item information.","pos":[14174,14315],"source":" A pointer to a [COMBOBOXEXITEM](http://msdn.microsoft.com/library/windows/desktop/bb775746) structure that will receive the item information."},{"content":"This structure contains callback flag values for the item.","pos":[14316,14374]},{"content":"Return Value","pos":[14384,14396]},{"content":"The index at which the new item was inserted if successful; otherwise -1.","pos":[14400,14473]},{"content":"Remarks","pos":[14483,14490]},{"pos":[14494,14734],"content":"When you call <ph id=\"ph1\">`InsertItem`</ph>, a <bpt id=\"p1\">[</bpt>WM_NOTIFY<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb775583)</ept> message with <bpt id=\"p2\">[</bpt>CBEN_INSERTITEM<ept id=\"p2\">](http://msdn.microsoft.com/library/windows/desktop/bb775764)</ept> notification will be sent to the parent window.","source":"When you call `InsertItem`, a [WM_NOTIFY](http://msdn.microsoft.com/library/windows/desktop/bb775583) message with [CBEN_INSERTITEM](http://msdn.microsoft.com/library/windows/desktop/bb775764) notification will be sent to the parent window."},{"pos":[14790,14819],"content":"CComboBoxEx::SetExtendedStyle"},{"content":"Call this member function to set the extended styles used for a combo box extended control.","pos":[14823,14914]},{"content":"Parameters","pos":[15008,15018]},{"content":"A <ph id=\"ph1\">`DWORD`</ph> value that indicates which styles in <ph id=\"ph2\">`dwExStyles`</ph> are to be affected.","pos":[15036,15115],"source":" A `DWORD` value that indicates which styles in `dwExStyles` are to be affected."},{"content":"Only the extended styles in <ph id=\"ph1\">`dwExMask`</ph> will be changed.","pos":[15116,15171],"source":" Only the extended styles in `dwExMask` will be changed."},{"content":"All other styles will be maintained as is.","pos":[15172,15214]},{"content":"If this parameter is zero, then all of the styles in <ph id=\"ph1\">`dwExStyles`</ph> will be affected.","pos":[15215,15298],"source":" If this parameter is zero, then all of the styles in `dwExStyles` will be affected."},{"content":"A <ph id=\"ph1\">`DWORD`</ph> value that contains the combo box control extended styles to set for the control.","pos":[15321,15412],"source":" A `DWORD` value that contains the combo box control extended styles to set for the control."},{"content":"Return Value","pos":[15422,15434]},{"pos":[15438,15520],"content":"A <ph id=\"ph1\">`DWORD`</ph> value that contains the extended styles previously used for the control.","source":"A `DWORD` value that contains the extended styles previously used for the control."},{"content":"Remarks","pos":[15530,15537]},{"pos":[15541,15741],"content":"See <bpt id=\"p1\">[</bpt>ComboBoxEx Control Extended Styles<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb775742)</ept> in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph> for more information about these styles.","source":"See [ComboBoxEx Control Extended Styles](http://msdn.microsoft.com/library/windows/desktop/bb775742) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)] for more information about these styles."},{"pos":[15748,15856],"content":"To create a combo box extended control with extended windows styles, use <bpt id=\"p1\">[</bpt>CreateEx<ept id=\"p1\">](#ccomboboxex__createex)</ept>.","source":"To create a combo box extended control with extended windows styles, use [CreateEx](#ccomboboxex__createex)."},{"pos":[15908,15933],"content":"CComboBoxEx::SetImageList"},{"pos":[15937,15985],"content":"Sets an image list for a <bpt id=\"p1\">**</bpt>ComboBoxEx<ept id=\"p1\">**</ept> control.","source":"Sets an image list for a **ComboBoxEx** control."},{"content":"Parameters","pos":[16060,16070]},{"content":"A pointer to a <ph id=\"ph1\">`CImageList`</ph> object containing the images to use with the <ph id=\"ph2\">`CComboBoxEx`</ph> control.","pos":[16090,16185],"source":" A pointer to a `CImageList` object containing the images to use with the `CComboBoxEx` control."},{"content":"Return Value","pos":[16195,16207]},{"content":"A pointer to a <bpt id=\"p1\">[</bpt>CImageList<ept id=\"p1\">](../../mfc/reference/cimagelist-class.md)</ept> object containing the images previously used by the <ph id=\"ph1\">`CComboBoxEx`</ph> control.","pos":[16211,16354],"source":"A pointer to a [CImageList](../../mfc/reference/cimagelist-class.md) object containing the images previously used by the `CComboBoxEx` control."},{"content":"<bpt id=\"p1\">**</bpt>NULL<ept id=\"p1\">**</ept> if no image list was previously set.","pos":[16355,16400],"source":"**NULL** if no image list was previously set."},{"content":"Remarks","pos":[16410,16417]},{"content":"This member function implements the functionality of the message <bpt id=\"p1\">[</bpt>CBEM_SETIMAGELIST<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb775787)</ept>, as described in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","pos":[16421,16639],"source":"This member function implements the functionality of the message [CBEM_SETIMAGELIST](http://msdn.microsoft.com/library/windows/desktop/bb775787), as described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"content":"If you change the height of the default edit control, call the Win32 function <bpt id=\"p1\">[</bpt>SetWindowPos<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms633545)</ept> to resize your control after you call <ph id=\"ph1\">`SetImageList`</ph>, or it will not display properly.","pos":[16640,16879],"source":" If you change the height of the default edit control, call the Win32 function [SetWindowPos](http://msdn.microsoft.com/library/windows/desktop/ms633545) to resize your control after you call `SetImageList`, or it will not display properly."},{"pos":[16886,17017],"content":"The <ph id=\"ph1\">`CImageList`</ph> object pointed to by the return value is a temporary object and is destroyed during the next idle processing time.","source":"The `CImageList` object pointed to by the return value is a temporary object and is destroyed during the next idle processing time."},{"pos":[17064,17084],"content":"CComboBoxEx::SetItem"},{"pos":[17088,17148],"content":"Sets the attributes for an item in a <bpt id=\"p1\">**</bpt>ComboBoxEx<ept id=\"p1\">**</ept> control.","source":"Sets the attributes for an item in a **ComboBoxEx** control."},{"content":"Parameters","pos":[17218,17228]},{"content":"A pointer to a <bpt id=\"p1\">[</bpt>COMBOBOXEXITEM<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb775746)</ept> structure that will receive the item information.","pos":[17245,17386],"source":" A pointer to a [COMBOBOXEXITEM](http://msdn.microsoft.com/library/windows/desktop/bb775746) structure that will receive the item information."},{"content":"Return Value","pos":[17396,17408]},{"content":"Nonzero if the operation was successful; otherwise 0.","pos":[17412,17465]},{"content":"Remarks","pos":[17475,17482]},{"pos":[17486,17699],"content":"This member function implements the functionality of the message <bpt id=\"p1\">[</bpt>CBEM_SETITEM<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb775788)</ept>, as described in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"This member function implements the functionality of the message [CBEM_SETITEM](http://msdn.microsoft.com/library/windows/desktop/bb775788), as described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"pos":[17753,17780],"content":"CComboBoxEx::SetWindowTheme"},{"content":"Sets the visual style of the extended combo box control.","pos":[17784,17840]},{"content":"Parameters","pos":[17912,17922]},{"content":"A pointer to a Unicode string that contains the extended combo box visual style to set.","pos":[17945,18032]},{"content":"Return Value","pos":[18042,18054]},{"content":"The return value is not used.","pos":[18058,18087]},{"content":"Remarks","pos":[18097,18104]},{"pos":[18108,18326],"content":"This member function emulates the functionality of the <bpt id=\"p1\">[</bpt>CBEM_SETWINDOWTHEME<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb775790)</ept> message, as described in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"This member function emulates the functionality of the [CBEM_SETWINDOWTHEME](http://msdn.microsoft.com/library/windows/desktop/bb775790) message, as described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"content":"See Also","pos":[18335,18343]},{"content":"MFC Sample MFCIE","pos":[18348,18364]},{"content":"CComboBox Class","pos":[18400,18415]},{"content":"Hierarchy Chart","pos":[18462,18477]},{"content":"CComboBox Class","pos":[18514,18529]}],"content":"---\ntitle: \"CComboBoxEx Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"CComboBoxEx\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"extended combo boxes, CComboBoxEx class\"\n  - \"Windows common controls [C++], extended combo boxes\"\n  - \"common controls [C++], extended combo boxes\"\n  - \"combo boxes [C++], CComboBoxEx class\"\n  - \"Internet Explorer 4.0 common controls\"\n  - \"CComboBoxEx class\"\nms.assetid: 33ca960a-2409-478c-84a4-a2ee8ecfe8f7\ncaps.latest.revision: 26\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# CComboBoxEx Class\nExtends the combo box control by providing support for image lists.  \n  \n## Syntax  \n  \n```  \nclass CComboBoxEx : public CComboBox  \n```  \n  \n## Members  \n  \n### Public Constructors  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CComboBoxEx::CComboBoxEx](#ccomboboxex__ccomboboxex)|Constructs a `CComboBoxEx` object.|  \n  \n### Public Methods  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CComboBoxEx::Create](#ccomboboxex__create)|Creates the combo box and attaches it to the `CComboBoxEx` object.|  \n|[CComboBoxEx::CreateEx](#ccomboboxex__createex)|Creates a combo box with the specified Windows extended styles and attaches it to a **ComboBoxEx** object.|  \n|[CComboBoxEx::DeleteItem](#ccomboboxex__deleteitem)|Removes an item from a **ComboBoxEx** control.|  \n|[CComboBoxEx::GetComboBoxCtrl](#ccomboboxex__getcomboboxctrl)|Retrieves a pointer to the child combo box control.|  \n|[CComboBoxEx::GetEditCtrl](#ccomboboxex__geteditctrl)|Retrieves the handle to the edit control portion of a **ComboBoxEx** control.|  \n|[CComboBoxEx::GetExtendedStyle](#ccomboboxex__getextendedstyle)|Retrieves the extended styles that are in use for a **ComboBoxEx** control.|  \n|[CComboBoxEx::GetImageList](#ccomboboxex__getimagelist)|Retrieves a pointer to the image list assigned to a **ComboBoxEx** control.|  \n|[CComboBoxEx::GetItem](#ccomboboxex__getitem)|Retrieves item information for a given **ComboBoxEx** item.|  \n|[CComboBoxEx::HasEditChanged](#ccomboboxex__haseditchanged)|Determines if the user has changed the contents of the **ComboBoxEx** edit control by typing.|  \n|[CComboBoxEx::InsertItem](#ccomboboxex__insertitem)|Inserts a new item in a **ComboBoxEx** control.|  \n|[CComboBoxEx::SetExtendedStyle](#ccomboboxex__setextendedstyle)|Sets extended styles within a **ComboBoxEx** control.|  \n|[CComboBoxEx::SetImageList](#ccomboboxex__setimagelist)|Sets an image list for a **ComboBoxEx** control.|  \n|[CComboBoxEx::SetItem](#ccomboboxex__setitem)|Sets the attributes for an item in a **ComboBoxEx** control.|  \n|[CComboBoxEx::SetWindowTheme](#ccomboboxex__setwindowtheme)|Sets the visual style of the extended combo box control.|  \n  \n## Remarks  \n By using `CComboBoxEx` to create combo box controls, you no longer need to implement your own image drawing code. Instead, use `CComboBoxEx` to access images from an image list.  \n  \n## Image List Support  \n In a standard combo box, the owner of the combo box is responsible for drawing an image by creating the combo box as an owner-draw control. When you use `CComboBoxEx`, you do not need to set the drawing styles **CBS_OWNERDRAWFIXED** and **CBS_HASSTRINGS** because they are implied. Otherwise, you must write code to perform drawing operations. A `CComboBoxEx` control supports up to three images per item: one for a selected state, one for an unselected state, and one for an overlay image.  \n  \n## Styles  \n `CComboBoxEx` supports the styles **CBS_SIMPLE**, **CBS_DROPDOWN**, **CBS_DROPDOWNLIST**, and **WS_CHILD**. All other styles passed when you create the window are ignored by the control. After the window is created, you can provide other combo box styles by calling the `CComboBoxEx` member function [SetExtendedStyle](#ccomboboxex__setextendedstyle). With these styles, you can:  \n  \n-   Set string searches in the list to be case-sensitive.  \n  \n-   Create a combo box control that uses the slash ('/'), backslash ('\\\\'), and period ('.') characters as word delimiters. This allow users to jump from word to word, using the keyboard shortcut CTRL+ ARROW.  \n  \n-   Set the combo box control to either display or not display an image. If no image is displayed, the combo box can remove the text indent that accommodates an image.  \n  \n-   Create a narrow combo box control, including sizing it so it clips the wider combo box it contains.  \n  \n These style flags are described further in [Using CComboBoxEx](../../mfc/using-ccomboboxex.md).  \n  \n## Item Retention and Callback Item Attributes  \n Item information, such as indexes for items and images, indentation values, and text strings, is stored in the Win32 structure [COMBOBOXEXITEM](http://msdn.microsoft.com/library/windows/desktop/bb775746), as described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]. The structure also contains members that correspond to callback flags.  \n  \n For a detailed, conceptual discussion, see [Using CComboBoxEx](../../mfc/using-ccomboboxex.md).  \n  \n## Inheritance Hierarchy  \n [CObject](../../mfc/reference/cobject-class.md)  \n  \n [CCmdTarget](../../mfc/reference/ccmdtarget-class.md)  \n  \n [CWnd](../../mfc/reference/cwnd-class.md)  \n  \n [CComboBox](../../mfc/reference/ccombobox-class.md)  \n  \n `CComboBoxEx`  \n  \n## Requirements  \n **Header:** afxcmn.h  \n  \n##  <a name=\"ccomboboxex__ccomboboxex\"></a>  CComboBoxEx::CComboBoxEx  \n Call this member function to create a `CComboBoxEx` object.  \n  \n```  \nCComboBoxEx();\n```  \n  \n##  <a name=\"ccomboboxex__create\"></a>  CComboBoxEx::Create  \n Creates the combo box and attaches it to the `CComboBoxEx` object.  \n  \n```  \nvirtual BOOL Create(\n    DWORD dwStyle,  \n    const RECT& rect,  \n    CWnd* pParentWnd,  \n    UINT nID);\n```  \n  \n### Parameters  \n `dwStyle`  \n Specifies the combination of combo box styles applied to the combo box. See **Remarks** below for more information about styles.  \n  \n `rect`  \n A reference to a [CRect](../../atl-mfc-shared/reference/crect-class.md) object or [RECT](http://msdn.microsoft.com/library/windows/desktop/dd162897) structure, which is the position and size of the combo box.  \n  \n `pParentWnd`  \n A pointer to a [CWnd](../../mfc/reference/cwnd-class.md) object that is the parent window of the combo box (usually a `CDialog`). It must not be **NULL**.  \n  \n `nID`  \n Specifies the combo box's control ID.  \n  \n### Return Value  \n Nonzero if the object was created successfully; otherwise 0.  \n  \n### Remarks  \n Create a `CComboBoxEx` object in two steps:  \n  \n1.  Call [CComboBoxEx](#ccomboboxex__ccomboboxex) to construct a `CComboBoxEx` object.  \n  \n2.  Call this member function, which creates the extended Windows combo box and attaches it to the `CComboBoxEx` object.  \n  \n When you call **Create**, MFC initializes the common controls.  \n  \n When you create the combo box, you can specify any or all of the following combo-box styles:  \n  \n- **CBS_SIMPLE**  \n  \n- **CBS_DROPDOWN**  \n  \n- **CBS_DROPDOWNLIST**  \n  \n- **CBS_AUTOHSCROLL**  \n  \n- **WS_CHILD**  \n  \n All other styles passed when you create the window are ignored. The **ComboBoxEx** control also supports extended styles that provide additional features. These styles are described in [ComboBoxEx control extended styles](http://msdn.microsoft.com/library/windows/desktop/bb775742), in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]. Set these styles by calling [SetExtendedStyle](#ccomboboxex__setextendedstyle).  \n  \n If you want to use extended windows styles with your control, call [CreateEx](#ccomboboxex__createex) instead of **Create**.  \n  \n##  <a name=\"ccomboboxex__createex\"></a>  CComboBoxEx::CreateEx  \n Call this function to create an extended combo box control (a child window) and associate it with the `CComboBoxEx` object.  \n  \n```  \nvirtual BOOL CreateEx(\n    DWORD dwExStyle,  \n    DWORD dwStyle,  \n    const RECT& rect,  \n    CWnd* pParentWnd,  \n    UINT nID);\n```  \n  \n### Parameters  \n `dwExStyle`  \n Specifies the extended style of the control being created. For a list of extended Windows styles, see the `dwExStyle` parameter for [CreateWindowEx](http://msdn.microsoft.com/library/windows/desktop/ms632680) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n `dwStyle`  \n The combo box control's style. See [Create](#ccomboboxex__create) for a list of styles.  \n  \n `rect`  \n A reference to a [RECT](http://msdn.microsoft.com/library/windows/desktop/dd162897) structure describing the size and position of the window to be created, in client coordinates of `pParentWnd`.  \n  \n `pParentWnd`  \n A pointer to the window that is the control's parent.  \n  \n `nID`  \n The control's child-window ID.  \n  \n### Return Value  \n Nonzero if successful; otherwise 0.  \n  \n### Remarks  \n Use `CreateEx` instead of **Create** to apply extended Windows styles, specified by the Windows extended style preface **WS_EX_**.  \n  \n `CreateEx` creates the control with the extended Windows styles specified by `dwExStyle`. You must set extended styles specific to an extended combo box control using [SetExtendedStyle](#ccomboboxex__setextendedstyle). For example, use `CreateEx` to set such styles as **WS_EX_CONTEXTHELP**, but use `SetExtendedStyle` to set such styles as **CBES_EX_CASESENSITIVE**. For more information, see the styles described in the topic [ComboBoxEx Control Extended Styles](http://msdn.microsoft.com/library/windows/desktop/bb775742) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n##  <a name=\"ccomboboxex__deleteitem\"></a>  CComboBoxEx::DeleteItem  \n Removes an item from a **ComboBoxEx** control.  \n  \n```  \nint DeleteItem(int iIndex);\n```  \n  \n### Parameters  \n `iIndex`  \n Zero-based index of the item to be removed.  \n  \n### Return Value  \n The number of items remaining in the control. If `iIndex` is invalid, the function returns **CB_ERR**.  \n  \n### Remarks  \n This member function implements the functionality of the message [CBEM_DELETEITEM](http://msdn.microsoft.com/library/windows/desktop/bb775768), as described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]. When you call DeleteItem, a [WM_NOTIFY](http://msdn.microsoft.com/library/windows/desktop/bb775583) message with **CBEN_DELETEITEM** notification will be sent to the parent window.  \n  \n##  <a name=\"ccomboboxex__getcomboboxctrl\"></a>  CComboBoxEx::GetComboBoxCtrl  \n Call this member function to get a pointer to a combo box control within a `CComboBoxEx` object.  \n  \n```  \nCComboBox* GetComboBoxCtrl();\n```  \n  \n### Return Value  \n A pointer to a `CComboBox` object.  \n  \n### Remarks  \n The `CComboBoxEx` control consists of a parent window, which encapsulates a `CComboBox`.  \n  \n The `CComboBox` object pointed to by the return value is a temporary object and is destroyed during the next idle processing time.  \n  \n##  <a name=\"ccomboboxex__geteditctrl\"></a>  CComboBoxEx::GetEditCtrl  \n Call this member function to get a pointer to the edit control for a combo box.  \n  \n```  \nCEdit* GetEditCtrl();\n```  \n  \n### Return Value  \n A pointer to a [CEdit](../../mfc/reference/cedit-class.md) object.  \n  \n### Remarks  \n A `CComboBoxEx` control uses an edit box when it is created with the **CBS_DROPDOWN** style.  \n  \n The `CEdit` object pointed to by the return value is a temporary object and is destroyed during the next idle processing time.  \n  \n##  <a name=\"ccomboboxex__getextendedstyle\"></a>  CComboBoxEx::GetExtendedStyle  \n Call this member function to get the extended styles used for a `CComboBoxEx` control.  \n  \n```  \nDWORD GetExtendedStyle() const;\n\n \n```  \n  \n### Return Value  \n The `DWORD` value that contains the extended styles that are used for the combo box control.  \n  \n### Remarks  \n See [ComboBoxEx Control Extended Styles](http://msdn.microsoft.com/library/windows/desktop/bb775742) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)] for more information about these styles.  \n  \n##  <a name=\"ccomboboxex__getimagelist\"></a>  CComboBoxEx::GetImageList  \n Call this member function to get a pointer to the image list used by a `CComboBoxEx` control.  \n  \n```  \nCImageList* GetImageList() const;\n\n \n```  \n  \n### Return Value  \n A pointer to a [CImageList](../../mfc/reference/cimagelist-class.md) object. If it fails, this member function returns **NULL**.  \n  \n### Remarks  \n The `CImageList` object pointed to by the return value is a temporary object and is destroyed during the next idle processing time.  \n  \n##  <a name=\"ccomboboxex__getitem\"></a>  CComboBoxEx::GetItem  \n Retrieves item information for a given **ComboBoxEx** item.  \n  \n```  \nBOOL GetItem(COMBOBOXEXITEM* pCBItem);\n```  \n  \n### Parameters  \n `pCBItem`  \n A pointer to a [COMBOBOXEXITEM](http://msdn.microsoft.com/library/windows/desktop/bb775746) structure that will receive the item information.  \n  \n### Return Value  \n Nonzero if the operation was successful; otherwise 0.  \n  \n### Remarks  \n This member function implements the functionality of the message [CBEM_GETITEM](http://msdn.microsoft.com/library/windows/desktop/bb775779), as described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n##  <a name=\"ccomboboxex__haseditchanged\"></a>  CComboBoxEx::HasEditChanged  \n Determines if the user has changed the contents of the **ComboBoxEx** edit control by typing.  \n  \n```  \nBOOL HasEditChanged();\n```  \n  \n### Return Value  \n Nonzero if the user has typed in the control's edit box; otherwise 0.  \n  \n### Remarks  \n This member function implements the functionality of the message [CBEM_HASEDITCHANGED](http://msdn.microsoft.com/library/windows/desktop/bb775782), as described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n##  <a name=\"ccomboboxex__insertitem\"></a>  CComboBoxEx::InsertItem  \n Inserts a new item in a **ComboBoxEx** control.  \n  \n```  \nint InsertItem(const COMBOBOXEXITEM* pCBItem);\n```  \n  \n### Parameters  \n `pCBItem`  \n A pointer to a [COMBOBOXEXITEM](http://msdn.microsoft.com/library/windows/desktop/bb775746) structure that will receive the item information. This structure contains callback flag values for the item.  \n  \n### Return Value  \n The index at which the new item was inserted if successful; otherwise -1.  \n  \n### Remarks  \n When you call `InsertItem`, a [WM_NOTIFY](http://msdn.microsoft.com/library/windows/desktop/bb775583) message with [CBEN_INSERTITEM](http://msdn.microsoft.com/library/windows/desktop/bb775764) notification will be sent to the parent window.  \n  \n##  <a name=\"ccomboboxex__setextendedstyle\"></a>  CComboBoxEx::SetExtendedStyle  \n Call this member function to set the extended styles used for a combo box extended control.  \n  \n```  \nDWORD SetExtendedStyle(\n    DWORD dwExMask,  \n    DWORD dwExStyles);\n```  \n  \n### Parameters  \n `dwExMask`  \n A `DWORD` value that indicates which styles in `dwExStyles` are to be affected. Only the extended styles in `dwExMask` will be changed. All other styles will be maintained as is. If this parameter is zero, then all of the styles in `dwExStyles` will be affected.  \n  \n `dwExStyles`  \n A `DWORD` value that contains the combo box control extended styles to set for the control.  \n  \n### Return Value  \n A `DWORD` value that contains the extended styles previously used for the control.  \n  \n### Remarks  \n See [ComboBoxEx Control Extended Styles](http://msdn.microsoft.com/library/windows/desktop/bb775742) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)] for more information about these styles.  \n  \n To create a combo box extended control with extended windows styles, use [CreateEx](#ccomboboxex__createex).  \n  \n##  <a name=\"ccomboboxex__setimagelist\"></a>  CComboBoxEx::SetImageList  \n Sets an image list for a **ComboBoxEx** control.  \n  \n```  \nCImageList* SetImageList(CImageList* pImageList);\n```  \n  \n### Parameters  \n `pImageList`  \n A pointer to a `CImageList` object containing the images to use with the `CComboBoxEx` control.  \n  \n### Return Value  \n A pointer to a [CImageList](../../mfc/reference/cimagelist-class.md) object containing the images previously used by the `CComboBoxEx` control. **NULL** if no image list was previously set.  \n  \n### Remarks  \n This member function implements the functionality of the message [CBEM_SETIMAGELIST](http://msdn.microsoft.com/library/windows/desktop/bb775787), as described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]. If you change the height of the default edit control, call the Win32 function [SetWindowPos](http://msdn.microsoft.com/library/windows/desktop/ms633545) to resize your control after you call `SetImageList`, or it will not display properly.  \n  \n The `CImageList` object pointed to by the return value is a temporary object and is destroyed during the next idle processing time.  \n  \n##  <a name=\"ccomboboxex__setitem\"></a>  CComboBoxEx::SetItem  \n Sets the attributes for an item in a **ComboBoxEx** control.  \n  \n```  \nBOOL SetItem(const COMBOBOXEXITEM* pCBItem);\n```  \n  \n### Parameters  \n `pCBItem`  \n A pointer to a [COMBOBOXEXITEM](http://msdn.microsoft.com/library/windows/desktop/bb775746) structure that will receive the item information.  \n  \n### Return Value  \n Nonzero if the operation was successful; otherwise 0.  \n  \n### Remarks  \n This member function implements the functionality of the message [CBEM_SETITEM](http://msdn.microsoft.com/library/windows/desktop/bb775788), as described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n##  <a name=\"ccomboboxex__setwindowtheme\"></a>  CComboBoxEx::SetWindowTheme  \n Sets the visual style of the extended combo box control.  \n  \n```  \nHRESULT SetWindowTheme(LPCWSTR pszSubAppName);\n```  \n  \n### Parameters  \n `pszSubAppName`  \n A pointer to a Unicode string that contains the extended combo box visual style to set.  \n  \n### Return Value  \n The return value is not used.  \n  \n### Remarks  \n This member function emulates the functionality of the [CBEM_SETWINDOWTHEME](http://msdn.microsoft.com/library/windows/desktop/bb775790) message, as described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n## See Also  \n [MFC Sample MFCIE](../../visual-cpp-samples.md)   \n [CComboBox Class](../../mfc/reference/ccombobox-class.md)   \n [Hierarchy Chart](../../mfc/hierarchy-chart.md)   \n [CComboBox Class](../../mfc/reference/ccombobox-class.md)\n"}