{"nodes":[{"pos":[12,62],"content":"hash_multimap::to_array (STL-CLR) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"hash_multimap::to_array (STL-CLR) | Microsoft Docs","pos":[0,50]}]},{"content":"hash_multimap::to_array (STL/CLR)","pos":[651,684]},{"content":"Copies the controlled sequence to a new array.","pos":[685,731]},{"content":"Syntax","pos":[740,746]},{"content":"Remarks","pos":[808,815]},{"content":"The member function returns an array containing the controlled sequence.","pos":[819,891]},{"content":"You use it to obtain a copy of the controlled sequence in array form.","pos":[892,961]},{"content":"Example","pos":[970,977]},{"content":"Requirements","pos":[2027,2039]},{"pos":[2043,2073],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> <ph id=\"ph1\">\\&lt;</ph>cliext/hash_map&gt;","source":"**Header:** \\<cliext/hash_map>"},{"pos":[2080,2101],"content":"<bpt id=\"p1\">**</bpt>Namespace:<ept id=\"p1\">**</ept> cliext","source":"**Namespace:** cliext"},{"content":"See Also","pos":[2110,2118]},{"content":"hash_multimap (STL/CLR)","pos":[2123,2146]}],"content":"---\ntitle: \"hash_multimap::to_array (STL-CLR) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"cliext::hash_multimap::to_array\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"to_array member [STL/CLR]\"\nms.assetid: a7fe11ba-5a0b-4152-b24d-8b142450863c\ncaps.latest.revision: 15\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# hash_multimap::to_array (STL/CLR)\nCopies the controlled sequence to a new array.  \n  \n## Syntax  \n  \n```  \ncli::array<value_type>^ to_array();  \n```  \n  \n## Remarks  \n The member function returns an array containing the controlled sequence. You use it to obtain a copy of the controlled sequence in array form.  \n  \n## Example  \n  \n```  \n// cliext_hash_multimap_to_array.cpp   \n// compile with: /clr   \n#include <cliext/hash_map>   \n  \ntypedef cliext::hash_multimap<wchar_t, int> Myhash_multimap;   \nint main()   \n    {   \n    Myhash_multimap c1;   \n    c1.insert(Myhash_multimap::make_value(L'a', 1));   \n    c1.insert(Myhash_multimap::make_value(L'b', 2));   \n    c1.insert(Myhash_multimap::make_value(L'c', 3));   \n  \n// copy the container and modify it   \n    cli::array<Myhash_multimap::value_type>^ a1 = c1.to_array();   \n  \n    c1.insert(Myhash_multimap::make_value(L'd', 4));   \n    for each (Myhash_multimap::value_type elem in c1)   \n        System::Console::Write(\" [{0} {1}]\", elem->first, elem->second);   \n    System::Console::WriteLine();   \n  \n// display the earlier array copy   \n    for each (Myhash_multimap::value_type elem in a1)   \n        System::Console::Write(\" [{0} {1}]\", elem->first, elem->second);   \n    System::Console::WriteLine();   \n    return (0);   \n    }  \n  \n```  \n  \n```Output  \n[a 1] [b 2] [c 3] [d 4]  \n[a 1] [b 2] [c 3]  \n```  \n  \n## Requirements  \n **Header:** \\<cliext/hash_map>  \n  \n **Namespace:** cliext  \n  \n## See Also  \n [hash_multimap (STL/CLR)](../dotnet/hash-multimap-stl-clr.md)"}