{"nodes":[{"pos":[12,51],"content":"CCommandLineInfo Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"CCommandLineInfo Class | Microsoft Docs","pos":[0,39]}]},{"pos":[789,811],"content":"CCommandLineInfo Class","linkify":"CCommandLineInfo Class","nodes":[{"content":"CCommandLineInfo Class","pos":[0,22]}]},{"content":"Aids in parsing the command line at application startup.","pos":[812,868]},{"pos":[877,883],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[949,956],"content":"Members","linkify":"Members","nodes":[{"content":"Members","pos":[0,7]}]},{"pos":[966,985],"content":"Public Constructors","linkify":"Public Constructors","nodes":[{"content":"Public Constructors","pos":[0,19]}]},{"content":"Name","pos":[992,996]},{"content":"Description","pos":[997,1008]},{"pos":[1046,1119],"content":"<bpt id=\"p1\">[</bpt>CCommandLineInfo::CCommandLineInfo<ept id=\"p1\">](#ccommandlineinfo__ccommandlineinfo)</ept>","source":"[CCommandLineInfo::CCommandLineInfo](#ccommandlineinfo__ccommandlineinfo)"},{"pos":[1120,1167],"content":"Constructs a default <ph id=\"ph1\">`CCommandLineInfo`</ph> object.","source":"Constructs a default `CCommandLineInfo` object."},{"pos":[1178,1192],"content":"Public Methods","linkify":"Public Methods","nodes":[{"content":"Public Methods","pos":[0,14]}]},{"content":"Name","pos":[1199,1203]},{"content":"Description","pos":[1204,1215]},{"pos":[1253,1314],"content":"<bpt id=\"p1\">[</bpt>CCommandLineInfo::ParseParam<ept id=\"p1\">](#ccommandlineinfo__parseparam)</ept>","source":"[CCommandLineInfo::ParseParam](#ccommandlineinfo__parseparam)"},{"content":"Override this callback to parse individual parameters.","pos":[1315,1369]},{"pos":[1380,1399],"content":"Public Data Members","linkify":"Public Data Members","nodes":[{"content":"Public Data Members","pos":[0,19]}]},{"content":"Name","pos":[1406,1410]},{"content":"Description","pos":[1411,1422]},{"pos":[1460,1531],"content":"<bpt id=\"p1\">[</bpt>CCommandLineInfo::m_bRunAutomated<ept id=\"p1\">](#ccommandlineinfo__m_brunautomated)</ept>","source":"[CCommandLineInfo::m_bRunAutomated](#ccommandlineinfo__m_brunautomated)"},{"pos":[1532,1592],"content":"Indicates the command-line <bpt id=\"p1\">**</bpt>/Automation<ept id=\"p1\">**</ept> option was found.","source":"Indicates the command-line **/Automation** option was found."},{"pos":[1597,1666],"content":"<bpt id=\"p1\">[</bpt>CCommandLineInfo::m_bRunEmbedded<ept id=\"p1\">](#ccommandlineinfo__m_brunembedded)</ept>","source":"[CCommandLineInfo::m_bRunEmbedded](#ccommandlineinfo__m_brunembedded)"},{"pos":[1667,1726],"content":"Indicates the command-line <bpt id=\"p1\">**</bpt>/Embedding<ept id=\"p1\">**</ept> option was found.","source":"Indicates the command-line **/Embedding** option was found."},{"pos":[1731,1798],"content":"<bpt id=\"p1\">[</bpt>CCommandLineInfo::m_bShowSplash<ept id=\"p1\">](#ccommandlineinfo__m_bshowsplash)</ept>","source":"[CCommandLineInfo::m_bShowSplash](#ccommandlineinfo__m_bshowsplash)"},{"content":"Indicates if a splash screen should be shown.","pos":[1799,1844]},{"pos":[1849,1920],"content":"<bpt id=\"p1\">[</bpt>CCommandLineInfo::m_nShellCommand<ept id=\"p1\">](#ccommandlineinfo__m_nshellcommand)</ept>","source":"[CCommandLineInfo::m_nShellCommand](#ccommandlineinfo__m_nshellcommand)"},{"content":"Indicates the shell command to be processed.","pos":[1921,1965]},{"pos":[1970,2041],"content":"<bpt id=\"p1\">[</bpt>CCommandLineInfo::m_strDriverName<ept id=\"p1\">](#ccommandlineinfo__m_strdrivername)</ept>","source":"[CCommandLineInfo::m_strDriverName](#ccommandlineinfo__m_strdrivername)"},{"content":"Indicates the driver name if the shell command is Print To; otherwise empty.","pos":[2042,2118]},{"pos":[2123,2190],"content":"<bpt id=\"p1\">[</bpt>CCommandLineInfo::m_strFileName<ept id=\"p1\">](#ccommandlineinfo__m_strfilename)</ept>","source":"[CCommandLineInfo::m_strFileName](#ccommandlineinfo__m_strfilename)"},{"content":"Indicates the file name to be opened or printed; empty if the shell command is New or DDE.","pos":[2191,2281]},{"pos":[2286,2353],"content":"<bpt id=\"p1\">[</bpt>CCommandLineInfo::m_strPortName<ept id=\"p1\">](#ccommandlineinfo__m_strportname)</ept>","source":"[CCommandLineInfo::m_strPortName](#ccommandlineinfo__m_strportname)"},{"content":"Indicates the port name if the shell command is Print To; otherwise empty.","pos":[2354,2428]},{"pos":[2433,2506],"content":"<bpt id=\"p1\">[</bpt>CCommandLineInfo::m_strPrinterName<ept id=\"p1\">](#ccommandlineinfo__m_strprintername)</ept>","source":"[CCommandLineInfo::m_strPrinterName](#ccommandlineinfo__m_strprintername)"},{"content":"Indicates the printer name if the shell command is Print To; otherwise empty.","pos":[2507,2584]},{"pos":[2589,2674],"content":"<bpt id=\"p1\">[</bpt>CCommandLineInfo::m_strRestartIdentifier<ept id=\"p1\">](#ccommandlineinfo__m_strrestartidentifier)</ept>","source":"[CCommandLineInfo::m_strRestartIdentifier](#ccommandlineinfo__m_strrestartidentifier)"},{"content":"Indicates the unique restart identifier for the restart manager if the restart manager restarted the application.","pos":[2675,2788]},{"pos":[2798,2805],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"An MFC application will typically create a local instance of this class in the <bpt id=\"p1\">[</bpt>InitInstance<ept id=\"p1\">](../../mfc/reference/cwinapp-class.md#cwinapp__initinstance)</ept> function of its application object.","pos":[2809,2998],"source":"An MFC application will typically create a local instance of this class in the [InitInstance](../../mfc/reference/cwinapp-class.md#cwinapp__initinstance) function of its application object."},{"content":"This object is then passed to <bpt id=\"p1\">[</bpt>CWinApp::ParseCommandLine<ept id=\"p1\">](../../mfc/reference/cwinapp-class.md#cwinapp__parsecommandline)</ept>, which repeatedly calls <bpt id=\"p2\">[</bpt>ParseParam<ept id=\"p2\">](#ccommandlineinfo__parseparam)</ept> to fill the <ph id=\"ph1\">`CCommandLineInfo`</ph> object.","pos":[2999,3227],"source":" This object is then passed to [CWinApp::ParseCommandLine](../../mfc/reference/cwinapp-class.md#cwinapp__parsecommandline), which repeatedly calls [ParseParam](#ccommandlineinfo__parseparam) to fill the `CCommandLineInfo` object."},{"content":"The <ph id=\"ph1\">`CCommandLineInfo`</ph> object is then passed to <bpt id=\"p1\">[</bpt>CWinApp::ProcessShellCommand<ept id=\"p1\">](../../mfc/reference/cwinapp-class.md#cwinapp__processshellcommand)</ept> to handle the command-line arguments and flags.","pos":[3228,3421],"source":" The `CCommandLineInfo` object is then passed to [CWinApp::ProcessShellCommand](../../mfc/reference/cwinapp-class.md#cwinapp__processshellcommand) to handle the command-line arguments and flags."},{"content":"You can use this object to encapsulate the following command-line options and parameters:","pos":[3428,3517]},{"content":"Command-line argument","pos":[3524,3545]},{"content":"Command executed","pos":[3546,3562]},{"pos":[3623,3628],"content":"<bpt id=\"p1\">*</bpt>app<ept id=\"p1\">*</ept>","source":"*app*"},{"content":"New file.","pos":[3629,3638]},{"pos":[3643,3657],"content":"<bpt id=\"p1\">*</bpt>app<ept id=\"p1\">*</ept> filename","source":"*app* filename"},{"content":"Open file.","pos":[3658,3668]},{"pos":[3673,3694],"content":"<bpt id=\"p1\">*</bpt>app<ept id=\"p1\">*</ept> <bpt id=\"p2\">**</bpt>/p<ept id=\"p2\">**</ept> filename","source":"*app* **/p** filename"},{"content":"Print file to default printer.","pos":[3695,3725]},{"pos":[3730,3772],"content":"<bpt id=\"p1\">*</bpt>app<ept id=\"p1\">*</ept> <bpt id=\"p2\">**</bpt>/pt<ept id=\"p2\">**</ept> filename printer driver port","source":"*app* **/pt** filename printer driver port"},{"content":"Print file to the specified printer.","pos":[3773,3809]},{"pos":[3814,3828],"content":"<bpt id=\"p1\">*</bpt>app<ept id=\"p1\">*</ept> <bpt id=\"p2\">**</bpt>/dde<ept id=\"p2\">**</ept>","source":"*app* **/dde**"},{"content":"Start up and await DDE command.","pos":[3829,3860]},{"pos":[3865,3886],"content":"<bpt id=\"p1\">*</bpt>app<ept id=\"p1\">*</ept> <bpt id=\"p2\">**</bpt>/Automation<ept id=\"p2\">**</ept>","source":"*app* **/Automation**"},{"content":"Start up as an OLE automation server.","pos":[3887,3924]},{"pos":[3929,3949],"content":"<bpt id=\"p1\">*</bpt>app<ept id=\"p1\">*</ept> <bpt id=\"p2\">**</bpt>/Embedding<ept id=\"p2\">**</ept>","source":"*app* **/Embedding**"},{"content":"Start up to edit an embedded OLE item.","pos":[3950,3988]},{"content":"<bpt id=\"p1\">*</bpt>app<ept id=\"p1\">*</ept> <bpt id=\"p2\">**</bpt>/Register<ept id=\"p2\">**</ept>","pos":[3993,4012],"source":"*app* **/Register**"},{"content":"<bpt id=\"p1\">*</bpt>app<ept id=\"p1\">*</ept> <bpt id=\"p2\">**</bpt>/Regserver<ept id=\"p2\">**</ept>","pos":[4025,4045],"source":"*app* **/Regserver**"},{"content":"Informs the application to perform any registration tasks.","pos":[4046,4104]},{"content":"<bpt id=\"p1\">*</bpt>app<ept id=\"p1\">*</ept> <bpt id=\"p2\">**</bpt>/Unregister<ept id=\"p2\">**</ept>","pos":[4109,4130],"source":"*app* **/Unregister**"},{"content":"<bpt id=\"p1\">*</bpt>app<ept id=\"p1\">*</ept> <bpt id=\"p2\">**</bpt>/Unregserver<ept id=\"p2\">**</ept>","pos":[4143,4165],"source":"*app* **/Unregserver**"},{"content":"Informs the application to perform any un-registration tasks.","pos":[4166,4227]},{"content":"Derive a new class from <ph id=\"ph1\">`CCommandLineInfo`</ph> to handle other flags and parameter values.","pos":[4235,4321],"source":"Derive a new class from `CCommandLineInfo` to handle other flags and parameter values."},{"content":"Override <bpt id=\"p1\">[</bpt>ParseParam<ept id=\"p1\">](#ccommandlineinfo__parseparam)</ept> to handle the new flags.","pos":[4322,4399],"source":" Override [ParseParam](#ccommandlineinfo__parseparam) to handle the new flags."},{"pos":[4408,4429],"content":"Inheritance Hierarchy","linkify":"Inheritance Hierarchy","nodes":[{"content":"Inheritance Hierarchy","pos":[0,21]}]},{"pos":[4433,4480],"content":"<bpt id=\"p1\">[</bpt>CObject<ept id=\"p1\">](../../mfc/reference/cobject-class.md)</ept>","source":"[CObject](../../mfc/reference/cobject-class.md)"},{"pos":[4514,4526],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[4530,4550],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> afxwin.h","source":"**Header:** afxwin.h"},{"pos":[4560,4645],"content":"<bpt id=\"p1\">&lt;a name=\"ccommandlineinfo__ccommandlineinfo\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CCommandLineInfo::CCommandLineInfo","linkify":"<a name=\"ccommandlineinfo__ccommandlineinfo\"></a>  CCommandLineInfo::CCommandLineInfo","source":"<a name=\"ccommandlineinfo__ccommandlineinfo\"></a>  CCommandLineInfo::CCommandLineInfo"},{"pos":[4649,4722],"content":"This constructor creates a <ph id=\"ph1\">`CCommandLineInfo`</ph> object with default values.","source":"This constructor creates a `CCommandLineInfo` object with default values."},{"pos":[4767,4774],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[4778,4928],"content":"The default is to show the splash screen ( <ph id=\"ph1\">`m_bShowSplash`</ph><bpt id=\"p1\">**</bpt>=TRUE<ept id=\"p1\">**</ept>) and to execute the New command on the File menu ( <ph id=\"ph2\">`m_nShellCommand`</ph><bpt id=\"p2\">**</bpt>=NewFile<ept id=\"p2\">**</ept>).","source":"The default is to show the splash screen ( `m_bShowSplash`**=TRUE**) and to execute the New command on the File menu ( `m_nShellCommand`**=NewFile**)."},{"pos":[4935,5047],"content":"The application framework calls <bpt id=\"p1\">[</bpt>ParseParam<ept id=\"p1\">](#ccommandlineinfo__parseparam)</ept> to fill data members of this object.","source":"The application framework calls [ParseParam](#ccommandlineinfo__parseparam) to fill data members of this object."},{"pos":[5057,5064],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[5068,5154],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_MFCDocView#54<ept id=\"p2\">](../../mfc/codesnippet/cpp/ccommandlineinfo-class_1.cpp)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_MFCDocView#54](../../mfc/codesnippet/cpp/ccommandlineinfo-class_1.cpp)]"},{"pos":[5164,5247],"content":"<bpt id=\"p1\">&lt;a name=\"ccommandlineinfo__m_brunautomated\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CCommandLineInfo::m_bRunAutomated","linkify":"<a name=\"ccommandlineinfo__m_brunautomated\"></a>  CCommandLineInfo::m_bRunAutomated","source":"<a name=\"ccommandlineinfo__m_brunautomated\"></a>  CCommandLineInfo::m_bRunAutomated"},{"pos":[5251,5321],"content":"Indicates that the <bpt id=\"p1\">**</bpt>/Automation<ept id=\"p1\">**</ept> flag was found on the command line.","source":"Indicates that the **/Automation** flag was found on the command line."},{"pos":[5370,5377],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[5381,5442],"content":"If <bpt id=\"p1\">**</bpt>TRUE<ept id=\"p1\">**</ept>, this means start up as an OLE automation server.","source":"If **TRUE**, this means start up as an OLE automation server."},{"pos":[5452,5533],"content":"<bpt id=\"p1\">&lt;a name=\"ccommandlineinfo__m_brunembedded\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CCommandLineInfo::m_bRunEmbedded","linkify":"<a name=\"ccommandlineinfo__m_brunembedded\"></a>  CCommandLineInfo::m_bRunEmbedded","source":"<a name=\"ccommandlineinfo__m_brunembedded\"></a>  CCommandLineInfo::m_bRunEmbedded"},{"pos":[5537,5606],"content":"Indicates that the <bpt id=\"p1\">**</bpt>/Embedding<ept id=\"p1\">**</ept> flag was found on the command line.","source":"Indicates that the **/Embedding** flag was found on the command line."},{"pos":[5654,5661],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[5665,5731],"content":"If <bpt id=\"p1\">**</bpt>TRUE<ept id=\"p1\">**</ept>, this means start up for editing an embedded OLE item.","source":"If **TRUE**, this means start up for editing an embedded OLE item."},{"pos":[5741,5820],"content":"<bpt id=\"p1\">&lt;a name=\"ccommandlineinfo__m_bshowsplash\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CCommandLineInfo::m_bShowSplash","linkify":"<a name=\"ccommandlineinfo__m_bshowsplash\"></a>  CCommandLineInfo::m_bShowSplash","source":"<a name=\"ccommandlineinfo__m_bshowsplash\"></a>  CCommandLineInfo::m_bShowSplash"},{"content":"Indicates that the splash screen should be displayed.","pos":[5824,5877]},{"pos":[5924,5931],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"If <bpt id=\"p1\">**</bpt>TRUE<ept id=\"p1\">**</ept>, this means the splash screen for this application should be displayed during startup.","pos":[5935,6033],"source":"If **TRUE**, this means the splash screen for this application should be displayed during startup."},{"content":"The default implementation of <bpt id=\"p1\">[</bpt>ParseParam<ept id=\"p1\">](#ccommandlineinfo__parseparam)</ept> sets this data member to <bpt id=\"p2\">**</bpt>TRUE<ept id=\"p2\">**</ept> if <bpt id=\"p3\">[</bpt>m_nShellCommand<ept id=\"p3\">](#ccommandlineinfo__m_nshellcommand)</ept> is equal to <bpt id=\"p4\">**</bpt>CCommandLineInfo::FileNew<ept id=\"p4\">**</ept>.","pos":[6034,6241],"source":" The default implementation of [ParseParam](#ccommandlineinfo__parseparam) sets this data member to **TRUE** if [m_nShellCommand](#ccommandlineinfo__m_nshellcommand) is equal to **CCommandLineInfo::FileNew**."},{"pos":[6251,6334],"content":"<bpt id=\"p1\">&lt;a name=\"ccommandlineinfo__m_nshellcommand\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CCommandLineInfo::m_nShellCommand","linkify":"<a name=\"ccommandlineinfo__m_nshellcommand\"></a>  CCommandLineInfo::m_nShellCommand","source":"<a name=\"ccommandlineinfo__m_nshellcommand\"></a>  CCommandLineInfo::m_nShellCommand"},{"content":"Indicates the shell command for this instance of the application.","pos":[6338,6403]},{"pos":[6447,6454],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[6458,6571],"content":"The type for this data member is the following enumerated type, which is defined in the <ph id=\"ph1\">`CCommandLineInfo`</ph> class.","source":"The type for this data member is the following enumerated type, which is defined in the `CCommandLineInfo` class."},{"content":"For a brief description of these values, see the following list.","pos":[6797,6861]},{"pos":[6869,6955],"content":"<ph id=\"ph1\">`CCommandLineInfo::FileNew`</ph> Indicates that no file name was found on the command line.","source":"`CCommandLineInfo::FileNew` Indicates that no file name was found on the command line."},{"pos":[6963,7138],"content":"<ph id=\"ph1\">`CCommandLineInfo::FileOpen`</ph> Indicates that a file name was found on the command line and that none of the following flags were found on the command line: <ph id=\"ph2\">`/p`</ph>, <ph id=\"ph3\">`/pt`</ph>, <ph id=\"ph4\">`/dde`</ph>.","source":"`CCommandLineInfo::FileOpen` Indicates that a file name was found on the command line and that none of the following flags were found on the command line: `/p`, `/pt`, `/dde`."},{"pos":[7146,7235],"content":"<ph id=\"ph1\">`CCommandLineInfo::FilePrint`</ph> Indicates that the <ph id=\"ph2\">`/p`</ph> flag was found on the command line.","source":"`CCommandLineInfo::FilePrint` Indicates that the `/p` flag was found on the command line."},{"pos":[7243,7335],"content":"<ph id=\"ph1\">`CCommandLineInfo::FilePrintTo`</ph> Indicates that the <ph id=\"ph2\">`/pt`</ph> flag was found on the command line.","source":"`CCommandLineInfo::FilePrintTo` Indicates that the `/pt` flag was found on the command line."},{"pos":[7343,7432],"content":"<ph id=\"ph1\">`CCommandLineInfo::FileDDE`</ph> Indicates that the <ph id=\"ph2\">`/dde`</ph> flag was found on the command line.","source":"`CCommandLineInfo::FileDDE` Indicates that the `/dde` flag was found on the command line."},{"pos":[7440,7596],"content":"<ph id=\"ph1\">`CCommandLineInfo::AppRegister`</ph> Indicates that the <ph id=\"ph2\">`/Register`</ph> or <ph id=\"ph3\">`/Regserver`</ph> flag was found on the command line and the application was asked to register.","source":"`CCommandLineInfo::AppRegister` Indicates that the `/Register` or `/Regserver` flag was found on the command line and the application was asked to register."},{"pos":[7604,7725],"content":"<ph id=\"ph1\">`CCommandLineInfo::AppUnregister`</ph> Indicates that the <ph id=\"ph2\">`/Unregister`</ph> or <ph id=\"ph3\">`/Unregserver`</ph> application was asked to unregister.","source":"`CCommandLineInfo::AppUnregister` Indicates that the `/Unregister` or `/Unregserver` application was asked to unregister."},{"pos":[7733,7845],"content":"<ph id=\"ph1\">`CCommandLineInfo::RestartByRestartManager`</ph> Indicates that the application was restarted by the restart manager.","source":"`CCommandLineInfo::RestartByRestartManager` Indicates that the application was restarted by the restart manager."},{"content":"<ph id=\"ph1\">`CCommandLineInfo::FileNothing`</ph> Turns off the display of a new MDI child window on startup.","pos":[7853,7944],"source":"`CCommandLineInfo::FileNothing` Turns off the display of a new MDI child window on startup."},{"content":"By design, Application Wizard-generated MDI applications display a new child window on startup.","pos":[7945,8040]},{"content":"To turn off this feature, an application can use <ph id=\"ph1\">`CCommandLineInfo::FileNothing`</ph> as the shell command when it calls <bpt id=\"p1\">[</bpt>ProcessShellCommand<ept id=\"p1\">](../../mfc/reference/cwinapp-class.md#cwinapp__processshellcommand)</ept>.","pos":[8041,8246],"source":" To turn off this feature, an application can use `CCommandLineInfo::FileNothing` as the shell command when it calls [ProcessShellCommand](../../mfc/reference/cwinapp-class.md#cwinapp__processshellcommand)."},{"content":"<ph id=\"ph1\">`ProcessShellCommand`</ph> is called by the <ph id=\"ph2\">`InitInstance( )`</ph> of all <ph id=\"ph3\">`CWinApp`</ph> derived classes.","pos":[8247,8337],"source":"`ProcessShellCommand` is called by the `InitInstance( )` of all `CWinApp` derived classes."},{"pos":[8347,8354],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[8358,8444],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_MFCDocView#55<ept id=\"p2\">](../../mfc/codesnippet/cpp/ccommandlineinfo-class_2.cpp)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_MFCDocView#55](../../mfc/codesnippet/cpp/ccommandlineinfo-class_2.cpp)]"},{"pos":[8454,8537],"content":"<bpt id=\"p1\">&lt;a name=\"ccommandlineinfo__m_strdrivername\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CCommandLineInfo::m_strDriverName","linkify":"<a name=\"ccommandlineinfo__m_strdrivername\"></a>  CCommandLineInfo::m_strDriverName","source":"<a name=\"ccommandlineinfo__m_strdrivername\"></a>  CCommandLineInfo::m_strDriverName"},{"content":"Stores the value of the third non-flag parameter on the command line.","pos":[8541,8610]},{"pos":[8662,8669],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This parameter is typically the name of the printer driver for a Print To shell command.","pos":[8673,8761]},{"content":"The default implementation of <bpt id=\"p1\">[</bpt>ParseParam<ept id=\"p1\">](#ccommandlineinfo__parseparam)</ept> sets this data member only if the <bpt id=\"p2\">**</bpt>/pt<ept id=\"p2\">**</ept> flag was found on the command line.","pos":[8762,8913],"source":" The default implementation of [ParseParam](#ccommandlineinfo__parseparam) sets this data member only if the **/pt** flag was found on the command line."},{"pos":[8923,9002],"content":"<bpt id=\"p1\">&lt;a name=\"ccommandlineinfo__m_strfilename\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CCommandLineInfo::m_strFileName","linkify":"<a name=\"ccommandlineinfo__m_strfilename\"></a>  CCommandLineInfo::m_strFileName","source":"<a name=\"ccommandlineinfo__m_strfilename\"></a>  CCommandLineInfo::m_strFileName"},{"content":"Stores the value of the first non-flag parameter on the command line.","pos":[9006,9075]},{"pos":[9125,9132],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This parameter is typically the name of the file to open.","pos":[9136,9193]},{"pos":[9203,9282],"content":"<bpt id=\"p1\">&lt;a name=\"ccommandlineinfo__m_strportname\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CCommandLineInfo::m_strPortName","linkify":"<a name=\"ccommandlineinfo__m_strportname\"></a>  CCommandLineInfo::m_strPortName","source":"<a name=\"ccommandlineinfo__m_strportname\"></a>  CCommandLineInfo::m_strPortName"},{"content":"Stores the value of the fourth non-flag parameter on the command line.","pos":[9286,9356]},{"pos":[9406,9413],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This parameter is typically the name of the printer port for a Print To shell command.","pos":[9417,9503]},{"content":"The default implementation of <bpt id=\"p1\">[</bpt>ParseParam<ept id=\"p1\">](#ccommandlineinfo__parseparam)</ept> sets this data member only if the <bpt id=\"p2\">**</bpt>/pt<ept id=\"p2\">**</ept> flag was found on the command line.","pos":[9504,9655],"source":" The default implementation of [ParseParam](#ccommandlineinfo__parseparam) sets this data member only if the **/pt** flag was found on the command line."},{"pos":[9665,9750],"content":"<bpt id=\"p1\">&lt;a name=\"ccommandlineinfo__m_strprintername\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CCommandLineInfo::m_strPrinterName","linkify":"<a name=\"ccommandlineinfo__m_strprintername\"></a>  CCommandLineInfo::m_strPrinterName","source":"<a name=\"ccommandlineinfo__m_strprintername\"></a>  CCommandLineInfo::m_strPrinterName"},{"content":"Stores the value of the second non-flag parameter on the command line.","pos":[9754,9824]},{"pos":[9877,9884],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This parameter is typically the name of the printer for a Print To shell command.","pos":[9888,9969]},{"content":"The default implementation of <bpt id=\"p1\">[</bpt>ParseParam<ept id=\"p1\">](#ccommandlineinfo__parseparam)</ept> sets this data member only if the <bpt id=\"p2\">**</bpt>/pt<ept id=\"p2\">**</ept> flag was found on the command line.","pos":[9970,10121],"source":" The default implementation of [ParseParam](#ccommandlineinfo__parseparam) sets this data member only if the **/pt** flag was found on the command line."},{"pos":[10131,10228],"content":"<bpt id=\"p1\">&lt;a name=\"ccommandlineinfo__m_strrestartidentifier\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CCommandLineInfo::m_strRestartIdentifier","linkify":"<a name=\"ccommandlineinfo__m_strrestartidentifier\"></a>  CCommandLineInfo::m_strRestartIdentifier","source":"<a name=\"ccommandlineinfo__m_strrestartidentifier\"></a>  CCommandLineInfo::m_strRestartIdentifier"},{"content":"The unique restart identifier on the command line.","pos":[10232,10282]},{"pos":[10341,10348],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The restart identifier is unique for each instance of the application.","pos":[10352,10422]},{"content":"If the restart manager exits the application and is configured to restart it, the restart manager executes the application from the command line with the restart identifier as an optional parameter.","pos":[10429,10627]},{"content":"When the restart manager uses the restart identifier, the application can reopen the previously open documents and recover autosaved files.","pos":[10628,10767]},{"pos":[10777,10850],"content":"<bpt id=\"p1\">&lt;a name=\"ccommandlineinfo__parseparam\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CCommandLineInfo::ParseParam","linkify":"<a name=\"ccommandlineinfo__parseparam\"></a>  CCommandLineInfo::ParseParam","source":"<a name=\"ccommandlineinfo__parseparam\"></a>  CCommandLineInfo::ParseParam"},{"content":"The framework calls this function to parse/interpret individual parameters from the command line.","pos":[10854,10951]},{"content":"The second version differs from the first only in Unicode projects.","pos":[10952,11019]},{"pos":[11224,11234],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"The parameter or flag.","pos":[11252,11274]},{"content":"<bpt id=\"p1\">*</bpt>bFlag<ept id=\"p1\">*</ept>","pos":[11281,11288],"source":"*bFlag*"},{"content":"Indicates whether <ph id=\"ph1\">`pszParam`</ph> is a parameter or a flag.","pos":[11292,11346],"source":" Indicates whether `pszParam` is a parameter or a flag."},{"content":"Indicates if this is the last parameter or flag on the command line.","pos":[11364,11432]},{"pos":[11442,11449],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"<bpt id=\"p1\">[</bpt>CWinApp::ParseCommandLine<ept id=\"p1\">](../../mfc/reference/cwinapp-class.md#cwinapp__parsecommandline)</ept> calls <ph id=\"ph1\">`ParseParam`</ph> once for each parameter or flag on the command line, passing the argument to <ph id=\"ph2\">`pszParam`</ph>.","pos":[11453,11652],"source":"[CWinApp::ParseCommandLine](../../mfc/reference/cwinapp-class.md#cwinapp__parsecommandline) calls `ParseParam` once for each parameter or flag on the command line, passing the argument to `pszParam`."},{"content":"If the first character of the parameter is a ' <bpt id=\"p1\">**</bpt><ph id=\"ph1\">-</ph><ept id=\"p1\">**</ept>' or a ' <bpt id=\"p2\">**</bpt><ph id=\"ph2\">/</ph><ept id=\"p2\">**</ept>', then it is removed and <bpt id=\"p3\">*</bpt>bFlag<ept id=\"p3\">*</ept> is set to <bpt id=\"p4\">**</bpt>TRUE<ept id=\"p4\">**</ept>.","pos":[11653,11772],"source":" If the first character of the parameter is a ' **-**' or a ' **/**', then it is removed and *bFlag* is set to **TRUE**."},{"content":"When parsing the final parameter, <ph id=\"ph1\">`bLast`</ph> is set to <bpt id=\"p1\">**</bpt>TRUE<ept id=\"p1\">**</ept>.","pos":[11773,11834],"source":" When parsing the final parameter, `bLast` is set to **TRUE**."},{"pos":[11841,12013],"content":"The default implementation of this function recognizes the following flags: <bpt id=\"p1\">**</bpt>/p<ept id=\"p1\">**</ept>, <bpt id=\"p2\">**</bpt>/pt<ept id=\"p2\">**</ept>, <bpt id=\"p3\">**</bpt>/dde<ept id=\"p3\">**</ept>, <bpt id=\"p4\">**</bpt>/Automation<ept id=\"p4\">**</ept>, and <bpt id=\"p5\">**</bpt>/Embedding<ept id=\"p5\">**</ept>, as shown in the following table:","source":"The default implementation of this function recognizes the following flags: **/p**, **/pt**, **/dde**, **/Automation**, and **/Embedding**, as shown in the following table:"},{"content":"Command-line argument","pos":[12020,12041]},{"content":"Command executed","pos":[12042,12058]},{"pos":[12119,12124],"content":"<bpt id=\"p1\">*</bpt>app<ept id=\"p1\">*</ept>","source":"*app*"},{"content":"New file.","pos":[12125,12134]},{"pos":[12139,12153],"content":"<bpt id=\"p1\">*</bpt>app<ept id=\"p1\">*</ept> filename","source":"*app* filename"},{"content":"Open file.","pos":[12154,12164]},{"pos":[12169,12190],"content":"<bpt id=\"p1\">*</bpt>app<ept id=\"p1\">*</ept> <bpt id=\"p2\">**</bpt>/p<ept id=\"p2\">**</ept> filename","source":"*app* **/p** filename"},{"content":"Print file to default printer.","pos":[12191,12221]},{"pos":[12226,12268],"content":"<bpt id=\"p1\">*</bpt>app<ept id=\"p1\">*</ept> <bpt id=\"p2\">**</bpt>/pt<ept id=\"p2\">**</ept> filename printer driver port","source":"*app* **/pt** filename printer driver port"},{"content":"Print file to the specified printer.","pos":[12269,12305]},{"pos":[12310,12324],"content":"<bpt id=\"p1\">*</bpt>app<ept id=\"p1\">*</ept> <bpt id=\"p2\">**</bpt>/dde<ept id=\"p2\">**</ept>","source":"*app* **/dde**"},{"content":"Start up and await DDE command.","pos":[12325,12356]},{"pos":[12361,12382],"content":"<bpt id=\"p1\">*</bpt>app<ept id=\"p1\">*</ept> <bpt id=\"p2\">**</bpt>/Automation<ept id=\"p2\">**</ept>","source":"*app* **/Automation**"},{"content":"Start up as an OLE automation server.","pos":[12383,12420]},{"pos":[12425,12445],"content":"<bpt id=\"p1\">*</bpt>app<ept id=\"p1\">*</ept> <bpt id=\"p2\">**</bpt>/Embedding<ept id=\"p2\">**</ept>","source":"*app* **/Embedding**"},{"content":"Start up to edit an embedded OLE item.","pos":[12446,12484]},{"content":"<bpt id=\"p1\">*</bpt>app<ept id=\"p1\">*</ept> <bpt id=\"p2\">**</bpt>/Register<ept id=\"p2\">**</ept>","pos":[12489,12508],"source":"*app* **/Register**"},{"content":"<bpt id=\"p1\">*</bpt>app<ept id=\"p1\">*</ept> <bpt id=\"p2\">**</bpt>/Regserver<ept id=\"p2\">**</ept>","pos":[12521,12541],"source":"*app* **/Regserver**"},{"content":"Informs the application to perform any registration tasks.","pos":[12542,12600]},{"content":"<bpt id=\"p1\">*</bpt>app<ept id=\"p1\">*</ept> <bpt id=\"p2\">**</bpt>/Unregister<ept id=\"p2\">**</ept>","pos":[12605,12626],"source":"*app* **/Unregister**"},{"content":"<bpt id=\"p1\">*</bpt>app<ept id=\"p1\">*</ept> <bpt id=\"p2\">**</bpt>/Unregserver<ept id=\"p2\">**</ept>","pos":[12639,12661],"source":"*app* **/Unregserver**"},{"content":"Informs the application to perform any un-registration tasks.","pos":[12662,12723]},{"content":"This information is stored in <bpt id=\"p1\">[</bpt>m_bRunAutomated<ept id=\"p1\">](#ccommandlineinfo__m_brunautomated)</ept>, <bpt id=\"p2\">[</bpt>m_bRunEmbedded<ept id=\"p2\">](#ccommandlineinfo__m_brunembedded)</ept>, and <bpt id=\"p3\">[</bpt>m_nShellCommand<ept id=\"p3\">](#ccommandlineinfo__m_nshellcommand)</ept>.","pos":[12731,12927],"source":"This information is stored in [m_bRunAutomated](#ccommandlineinfo__m_brunautomated), [m_bRunEmbedded](#ccommandlineinfo__m_brunembedded), and [m_nShellCommand](#ccommandlineinfo__m_nshellcommand)."},{"content":"Flags are marked by either a forward-slash ' <bpt id=\"p1\">**</bpt><ph id=\"ph1\">/</ph><ept id=\"p1\">**</ept>' or hyphen ' <bpt id=\"p2\">**</bpt><ph id=\"ph2\">-</ph><ept id=\"p2\">**</ept>'.","pos":[12928,12999],"source":" Flags are marked by either a forward-slash ' **/**' or hyphen ' **-**'."},{"content":"The default implementation puts the first non-flag parameter into <bpt id=\"p1\">[</bpt>m_strFileName<ept id=\"p1\">](#ccommandlineinfo__m_strfilename)</ept>.","pos":[13006,13122],"source":"The default implementation puts the first non-flag parameter into [m_strFileName](#ccommandlineinfo__m_strfilename)."},{"content":"In the case of the <bpt id=\"p1\">**</bpt>/pt<ept id=\"p1\">**</ept> flag, the default implementation puts the second, third, and fourth non-flag parameters into <bpt id=\"p2\">[</bpt>m_strPrinterName<ept id=\"p2\">](#ccommandlineinfo__m_strprintername)</ept>, <bpt id=\"p3\">[</bpt>m_strDriverName<ept id=\"p3\">](#ccommandlineinfo__m_strdrivername)</ept>, and <bpt id=\"p4\">[</bpt>m_strPortName<ept id=\"p4\">](#ccommandlineinfo__m_strportname)</ept>, respectively.","pos":[13123,13423],"source":" In the case of the **/pt** flag, the default implementation puts the second, third, and fourth non-flag parameters into [m_strPrinterName](#ccommandlineinfo__m_strprintername), [m_strDriverName](#ccommandlineinfo__m_strdrivername), and [m_strPortName](#ccommandlineinfo__m_strportname), respectively."},{"content":"The default implementation also sets <bpt id=\"p1\">[</bpt>m_bShowSplash<ept id=\"p1\">](#ccommandlineinfo__m_bshowsplash)</ept> to <bpt id=\"p2\">**</bpt>TRUE<ept id=\"p2\">**</ept> only in the case of a new file.","pos":[13430,13560],"source":"The default implementation also sets [m_bShowSplash](#ccommandlineinfo__m_bshowsplash) to **TRUE** only in the case of a new file."},{"content":"In the case of a new file, the user has taken action involving the application itself.","pos":[13561,13647]},{"content":"In any other case, including opening existing files using the shell, the user action involves the file directly.","pos":[13648,13760]},{"content":"In a document-centric standpoint, the splash screen does not need to announce the application starting up.","pos":[13761,13867]},{"content":"Override this function in your derived class to handle other flag and parameter values.","pos":[13874,13961]},{"pos":[13970,13978],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>CObject Class<ept id=\"p1\">](../../mfc/reference/cobject-class.md)</ept><ph id=\"ph1\"> </ph>","pos":[13982,14036],"source":"[CObject Class](../../mfc/reference/cobject-class.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Hierarchy Chart<ept id=\"p1\">](../../mfc/hierarchy-chart.md)</ept><ph id=\"ph1\"> </ph>","pos":[14039,14088],"source":" [Hierarchy Chart](../../mfc/hierarchy-chart.md) "},{"content":"<bpt id=\"p1\"> [</bpt>CWinApp::ParseCommandLine<ept id=\"p1\">](../../mfc/reference/cwinapp-class.md#cwinapp__parsecommandline)</ept><ph id=\"ph1\"> </ph>","pos":[14091,14184],"source":" [CWinApp::ParseCommandLine](../../mfc/reference/cwinapp-class.md#cwinapp__parsecommandline) "},{"content":"<bpt id=\"p1\"> [</bpt>CWinApp::ProcessShellCommand<ept id=\"p1\">](../../mfc/reference/cwinapp-class.md#cwinapp__processshellcommand)</ept>","pos":[14187,14285],"source":" [CWinApp::ProcessShellCommand](../../mfc/reference/cwinapp-class.md#cwinapp__processshellcommand)"}],"content":"---\ntitle: \"CCommandLineInfo Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"CCommandLineInfo\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"CCommandLineInfo class\"\n  - \"command line, parsing\"\n  - \"parsing, command-line arguments\"\n  - \"argv argument\"\n  - \"startup code, parsing command-line arguments\"\n  - \"application flags [C++]\"\nms.assetid: 3e313ddb-0a82-4991-87ac-a27feff4668c\ncaps.latest.revision: 21\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# CCommandLineInfo Class\nAids in parsing the command line at application startup.  \n  \n## Syntax  \n  \n```  \nclass CCommandLineInfo : public CObject  \n```  \n  \n## Members  \n  \n### Public Constructors  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CCommandLineInfo::CCommandLineInfo](#ccommandlineinfo__ccommandlineinfo)|Constructs a default `CCommandLineInfo` object.|  \n  \n### Public Methods  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CCommandLineInfo::ParseParam](#ccommandlineinfo__parseparam)|Override this callback to parse individual parameters.|  \n  \n### Public Data Members  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CCommandLineInfo::m_bRunAutomated](#ccommandlineinfo__m_brunautomated)|Indicates the command-line **/Automation** option was found.|  \n|[CCommandLineInfo::m_bRunEmbedded](#ccommandlineinfo__m_brunembedded)|Indicates the command-line **/Embedding** option was found.|  \n|[CCommandLineInfo::m_bShowSplash](#ccommandlineinfo__m_bshowsplash)|Indicates if a splash screen should be shown.|  \n|[CCommandLineInfo::m_nShellCommand](#ccommandlineinfo__m_nshellcommand)|Indicates the shell command to be processed.|  \n|[CCommandLineInfo::m_strDriverName](#ccommandlineinfo__m_strdrivername)|Indicates the driver name if the shell command is Print To; otherwise empty.|  \n|[CCommandLineInfo::m_strFileName](#ccommandlineinfo__m_strfilename)|Indicates the file name to be opened or printed; empty if the shell command is New or DDE.|  \n|[CCommandLineInfo::m_strPortName](#ccommandlineinfo__m_strportname)|Indicates the port name if the shell command is Print To; otherwise empty.|  \n|[CCommandLineInfo::m_strPrinterName](#ccommandlineinfo__m_strprintername)|Indicates the printer name if the shell command is Print To; otherwise empty.|  \n|[CCommandLineInfo::m_strRestartIdentifier](#ccommandlineinfo__m_strrestartidentifier)|Indicates the unique restart identifier for the restart manager if the restart manager restarted the application.|  \n  \n## Remarks  \n An MFC application will typically create a local instance of this class in the [InitInstance](../../mfc/reference/cwinapp-class.md#cwinapp__initinstance) function of its application object. This object is then passed to [CWinApp::ParseCommandLine](../../mfc/reference/cwinapp-class.md#cwinapp__parsecommandline), which repeatedly calls [ParseParam](#ccommandlineinfo__parseparam) to fill the `CCommandLineInfo` object. The `CCommandLineInfo` object is then passed to [CWinApp::ProcessShellCommand](../../mfc/reference/cwinapp-class.md#cwinapp__processshellcommand) to handle the command-line arguments and flags.  \n  \n You can use this object to encapsulate the following command-line options and parameters:  \n  \n|Command-line argument|Command executed|  \n|----------------------------|----------------------|  \n|*app*|New file.|  \n|*app* filename|Open file.|  \n|*app* **/p** filename|Print file to default printer.|  \n|*app* **/pt** filename printer driver port|Print file to the specified printer.|  \n|*app* **/dde**|Start up and await DDE command.|  \n|*app* **/Automation**|Start up as an OLE automation server.|  \n|*app* **/Embedding**|Start up to edit an embedded OLE item.|  \n|*app* **/Register**<br /><br /> *app* **/Regserver**|Informs the application to perform any registration tasks.|  \n|*app* **/Unregister**<br /><br /> *app* **/Unregserver**|Informs the application to perform any un-registration tasks.|  \n  \n Derive a new class from `CCommandLineInfo` to handle other flags and parameter values. Override [ParseParam](#ccommandlineinfo__parseparam) to handle the new flags.  \n  \n## Inheritance Hierarchy  \n [CObject](../../mfc/reference/cobject-class.md)  \n  \n `CCommandLineInfo`  \n  \n## Requirements  \n **Header:** afxwin.h  \n  \n##  <a name=\"ccommandlineinfo__ccommandlineinfo\"></a>  CCommandLineInfo::CCommandLineInfo  \n This constructor creates a `CCommandLineInfo` object with default values.  \n  \n```  \nCCommandLineInfo();\n```  \n  \n### Remarks  \n The default is to show the splash screen ( `m_bShowSplash`**=TRUE**) and to execute the New command on the File menu ( `m_nShellCommand`**=NewFile**).  \n  \n The application framework calls [ParseParam](#ccommandlineinfo__parseparam) to fill data members of this object.  \n  \n### Example  \n [!code-cpp[NVC_MFCDocView#54](../../mfc/codesnippet/cpp/ccommandlineinfo-class_1.cpp)]  \n  \n##  <a name=\"ccommandlineinfo__m_brunautomated\"></a>  CCommandLineInfo::m_bRunAutomated  \n Indicates that the **/Automation** flag was found on the command line.  \n  \n```  \nBOOL m_bRunAutomated;  \n```  \n  \n### Remarks  \n If **TRUE**, this means start up as an OLE automation server.  \n  \n##  <a name=\"ccommandlineinfo__m_brunembedded\"></a>  CCommandLineInfo::m_bRunEmbedded  \n Indicates that the **/Embedding** flag was found on the command line.  \n  \n```  \nBOOL m_bRunEmbedded;  \n```  \n  \n### Remarks  \n If **TRUE**, this means start up for editing an embedded OLE item.  \n  \n##  <a name=\"ccommandlineinfo__m_bshowsplash\"></a>  CCommandLineInfo::m_bShowSplash  \n Indicates that the splash screen should be displayed.  \n  \n```  \nBOOL m_bShowSplash;  \n```  \n  \n### Remarks  \n If **TRUE**, this means the splash screen for this application should be displayed during startup. The default implementation of [ParseParam](#ccommandlineinfo__parseparam) sets this data member to **TRUE** if [m_nShellCommand](#ccommandlineinfo__m_nshellcommand) is equal to **CCommandLineInfo::FileNew**.  \n  \n##  <a name=\"ccommandlineinfo__m_nshellcommand\"></a>  CCommandLineInfo::m_nShellCommand  \n Indicates the shell command for this instance of the application.  \n  \n```  \nm_nShellCommand;  \n```  \n  \n### Remarks  \n The type for this data member is the following enumerated type, which is defined in the `CCommandLineInfo` class.  \n  \n `enum{`  \n  \n `FileNew,`  \n  \n `FileOpen,`  \n  \n `FilePrint,`  \n  \n `FilePrintTo,`  \n  \n `FileDDE,`  \n  \n `AppRegister,`  \n  \n `AppUnregister,`  \n  \n `RestartByRestartManager,`  \n  \n `FileNothing = -1`  \n  \n `};`  \n  \n For a brief description of these values, see the following list.  \n  \n- `CCommandLineInfo::FileNew` Indicates that no file name was found on the command line.  \n  \n- `CCommandLineInfo::FileOpen` Indicates that a file name was found on the command line and that none of the following flags were found on the command line: `/p`, `/pt`, `/dde`.  \n  \n- `CCommandLineInfo::FilePrint` Indicates that the `/p` flag was found on the command line.  \n  \n- `CCommandLineInfo::FilePrintTo` Indicates that the `/pt` flag was found on the command line.  \n  \n- `CCommandLineInfo::FileDDE` Indicates that the `/dde` flag was found on the command line.  \n  \n- `CCommandLineInfo::AppRegister` Indicates that the `/Register` or `/Regserver` flag was found on the command line and the application was asked to register.  \n  \n- `CCommandLineInfo::AppUnregister` Indicates that the `/Unregister` or `/Unregserver` application was asked to unregister.  \n  \n- `CCommandLineInfo::RestartByRestartManager` Indicates that the application was restarted by the restart manager.  \n  \n- `CCommandLineInfo::FileNothing` Turns off the display of a new MDI child window on startup. By design, Application Wizard-generated MDI applications display a new child window on startup. To turn off this feature, an application can use `CCommandLineInfo::FileNothing` as the shell command when it calls [ProcessShellCommand](../../mfc/reference/cwinapp-class.md#cwinapp__processshellcommand). `ProcessShellCommand` is called by the `InitInstance( )` of all `CWinApp` derived classes.  \n  \n### Example  \n [!code-cpp[NVC_MFCDocView#55](../../mfc/codesnippet/cpp/ccommandlineinfo-class_2.cpp)]  \n  \n##  <a name=\"ccommandlineinfo__m_strdrivername\"></a>  CCommandLineInfo::m_strDriverName  \n Stores the value of the third non-flag parameter on the command line.  \n  \n```  \nCString m_strDriverName;  \n```  \n  \n### Remarks  \n This parameter is typically the name of the printer driver for a Print To shell command. The default implementation of [ParseParam](#ccommandlineinfo__parseparam) sets this data member only if the **/pt** flag was found on the command line.  \n  \n##  <a name=\"ccommandlineinfo__m_strfilename\"></a>  CCommandLineInfo::m_strFileName  \n Stores the value of the first non-flag parameter on the command line.  \n  \n```  \nCString m_strFileName;  \n```  \n  \n### Remarks  \n This parameter is typically the name of the file to open.  \n  \n##  <a name=\"ccommandlineinfo__m_strportname\"></a>  CCommandLineInfo::m_strPortName  \n Stores the value of the fourth non-flag parameter on the command line.  \n  \n```  \nCString m_strPortName;  \n```  \n  \n### Remarks  \n This parameter is typically the name of the printer port for a Print To shell command. The default implementation of [ParseParam](#ccommandlineinfo__parseparam) sets this data member only if the **/pt** flag was found on the command line.  \n  \n##  <a name=\"ccommandlineinfo__m_strprintername\"></a>  CCommandLineInfo::m_strPrinterName  \n Stores the value of the second non-flag parameter on the command line.  \n  \n```  \nCString m_strPrinterName;  \n```  \n  \n### Remarks  \n This parameter is typically the name of the printer for a Print To shell command. The default implementation of [ParseParam](#ccommandlineinfo__parseparam) sets this data member only if the **/pt** flag was found on the command line.  \n  \n##  <a name=\"ccommandlineinfo__m_strrestartidentifier\"></a>  CCommandLineInfo::m_strRestartIdentifier  \n The unique restart identifier on the command line.  \n  \n```  \nCString m_strRestartIdentifier;  \n```  \n  \n### Remarks  \n The restart identifier is unique for each instance of the application.  \n  \n If the restart manager exits the application and is configured to restart it, the restart manager executes the application from the command line with the restart identifier as an optional parameter. When the restart manager uses the restart identifier, the application can reopen the previously open documents and recover autosaved files.  \n  \n##  <a name=\"ccommandlineinfo__parseparam\"></a>  CCommandLineInfo::ParseParam  \n The framework calls this function to parse/interpret individual parameters from the command line. The second version differs from the first only in Unicode projects.  \n  \n```  \nvirtual void ParseParam(\n    const char* pszParam,  \n    BOOL bFlag,  \n    BOOL bLast);\n\n \nvirtual void ParseParam(\n    const TCHAR* pszParam,  \n    BOOL bFlag,  \n    BOOL bLast);\n```  \n  \n### Parameters  \n `pszParam`  \n The parameter or flag.  \n  \n *bFlag*  \n Indicates whether `pszParam` is a parameter or a flag.  \n  \n `bLast`  \n Indicates if this is the last parameter or flag on the command line.  \n  \n### Remarks  \n [CWinApp::ParseCommandLine](../../mfc/reference/cwinapp-class.md#cwinapp__parsecommandline) calls `ParseParam` once for each parameter or flag on the command line, passing the argument to `pszParam`. If the first character of the parameter is a ' **-**' or a ' **/**', then it is removed and *bFlag* is set to **TRUE**. When parsing the final parameter, `bLast` is set to **TRUE**.  \n  \n The default implementation of this function recognizes the following flags: **/p**, **/pt**, **/dde**, **/Automation**, and **/Embedding**, as shown in the following table:  \n  \n|Command-line argument|Command executed|  \n|----------------------------|----------------------|  \n|*app*|New file.|  \n|*app* filename|Open file.|  \n|*app* **/p** filename|Print file to default printer.|  \n|*app* **/pt** filename printer driver port|Print file to the specified printer.|  \n|*app* **/dde**|Start up and await DDE command.|  \n|*app* **/Automation**|Start up as an OLE automation server.|  \n|*app* **/Embedding**|Start up to edit an embedded OLE item.|  \n|*app* **/Register**<br /><br /> *app* **/Regserver**|Informs the application to perform any registration tasks.|  \n|*app* **/Unregister**<br /><br /> *app* **/Unregserver**|Informs the application to perform any un-registration tasks.|  \n  \n This information is stored in [m_bRunAutomated](#ccommandlineinfo__m_brunautomated), [m_bRunEmbedded](#ccommandlineinfo__m_brunembedded), and [m_nShellCommand](#ccommandlineinfo__m_nshellcommand). Flags are marked by either a forward-slash ' **/**' or hyphen ' **-**'.  \n  \n The default implementation puts the first non-flag parameter into [m_strFileName](#ccommandlineinfo__m_strfilename). In the case of the **/pt** flag, the default implementation puts the second, third, and fourth non-flag parameters into [m_strPrinterName](#ccommandlineinfo__m_strprintername), [m_strDriverName](#ccommandlineinfo__m_strdrivername), and [m_strPortName](#ccommandlineinfo__m_strportname), respectively.  \n  \n The default implementation also sets [m_bShowSplash](#ccommandlineinfo__m_bshowsplash) to **TRUE** only in the case of a new file. In the case of a new file, the user has taken action involving the application itself. In any other case, including opening existing files using the shell, the user action involves the file directly. In a document-centric standpoint, the splash screen does not need to announce the application starting up.  \n  \n Override this function in your derived class to handle other flag and parameter values.  \n  \n## See Also  \n [CObject Class](../../mfc/reference/cobject-class.md)   \n [Hierarchy Chart](../../mfc/hierarchy-chart.md)   \n [CWinApp::ParseCommandLine](../../mfc/reference/cwinapp-class.md#cwinapp__parsecommandline)   \n [CWinApp::ProcessShellCommand](../../mfc/reference/cwinapp-class.md#cwinapp__processshellcommand)\n\n"}