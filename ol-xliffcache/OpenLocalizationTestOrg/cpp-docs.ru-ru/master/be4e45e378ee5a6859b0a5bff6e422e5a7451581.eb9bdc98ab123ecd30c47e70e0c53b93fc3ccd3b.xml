{"nodes":[{"pos":[12,58],"content":"hash_multimap::find (STL-CLR) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"hash_multimap::find (STL-CLR) | Microsoft Docs","pos":[0,46]}]},{"content":"hash_multimap::find (STL/CLR)","pos":[639,668]},{"content":"Finds an element that matches a specified key.","pos":[669,715]},{"content":"Syntax","pos":[724,730]},{"content":"Parameters","pos":[787,797]},{"content":"key","pos":[801,804]},{"content":"Key value to search for.","pos":[808,832]},{"content":"Remarks","pos":[841,848]},{"content":"If at least one element in the controlled sequence has equivalent ordering with <ph id=\"ph1\">`key`</ph>, the member function returns an iterator designating one of those elements; otherwise it returns <bpt id=\"p1\">[</bpt>hash_multimap::end (STL/CLR)<ept id=\"p1\">](../dotnet/hash-multimap-end-stl-clr.md)</ept><ph id=\"ph2\">`()`</ph>.","pos":[852,1110],"source":"If at least one element in the controlled sequence has equivalent ordering with `key`, the member function returns an iterator designating one of those elements; otherwise it returns [hash_multimap::end (STL/CLR)](../dotnet/hash-multimap-end-stl-clr.md)`()`."},{"content":"You use it to locate an element currently in the controlled sequence that matches a specified key.","pos":[1111,1209]},{"content":"Example","pos":[1218,1225]},{"content":"Description","pos":[2320,2331]},{"pos":[2335,2405],"content":"Note that <ph id=\"ph1\">`find`</ph> does not guarantee which of several element it finds.","source":"Note that `find` does not guarantee which of several element it finds."},{"content":"Requirements","pos":[2414,2426]},{"pos":[2430,2460],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> <ph id=\"ph1\">\\&lt;</ph>cliext/hash_map&gt;","source":"**Header:** \\<cliext/hash_map>"},{"pos":[2467,2488],"content":"<bpt id=\"p1\">**</bpt>Namespace:<ept id=\"p1\">**</ept> cliext","source":"**Namespace:** cliext"},{"content":"See Also","pos":[2497,2505]},{"content":"hash_multimap (STL/CLR)","pos":[2510,2533]},{"content":"hash_multimap::equal_range (STL/CLR)","pos":[2576,2612]},{"content":"hash_multimap::lower_bound (STL/CLR)","pos":[2667,2703]},{"content":"hash_multimap::upper_bound (STL/CLR)","pos":[2758,2794]}],"content":"---\ntitle: \"hash_multimap::find (STL-CLR) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"cliext::hash_multimap::find\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"find member [STL/CLR]\"\nms.assetid: ce839c5e-b8c5-434e-9cc0-e4c6ee6a6bb3\ncaps.latest.revision: 15\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# hash_multimap::find (STL/CLR)\nFinds an element that matches a specified key.  \n  \n## Syntax  \n  \n```  \niterator find(key_type key);  \n```  \n  \n#### Parameters  \n key  \n Key value to search for.  \n  \n## Remarks  \n If at least one element in the controlled sequence has equivalent ordering with `key`, the member function returns an iterator designating one of those elements; otherwise it returns [hash_multimap::end (STL/CLR)](../dotnet/hash-multimap-end-stl-clr.md)`()`. You use it to locate an element currently in the controlled sequence that matches a specified key.  \n  \n## Example  \n  \n```  \n// cliext_hash_multimap_find.cpp   \n// compile with: /clr   \n#include <cliext/hash_map>   \n  \ntypedef cliext::hash_multimap<wchar_t, int> Myhash_multimap;   \nint main()   \n    {   \n    Myhash_multimap c1;   \n    c1.insert(Myhash_multimap::make_value(L'a', 1));   \n    c1.insert(Myhash_multimap::make_value(L'b', 2));   \n    c1.insert(Myhash_multimap::make_value(L'c', 3));   \n  \n// display contents \" [a 1] [b 2] [c 3]\"   \n    for each (Myhash_multimap::value_type elem in c1)   \n        System::Console::Write(\" [{0} {1}]\", elem->first, elem->second);   \n    System::Console::WriteLine();   \n  \n    System::Console::WriteLine(\"find {0} = {1}\",   \n        L'A', c1.find(L'A') != c1.end());   \n  \n    Myhash_multimap::iterator it = c1.find(L'b');   \n    System::Console::WriteLine(\"find {0} = [{1} {2}]\",   \n        L'b', it->first, it->second);   \n  \n    System::Console::WriteLine(\"find {0} = {1}\",   \n        L'C', c1.find(L'C') != c1.end());   \n    return (0);   \n    }  \n  \n```  \n  \n```Output  \n [a 1] [b 2] [c 3]  \nfind A = False  \nfind b = [b 2]  \nfind C = False  \n```  \n  \n## Description  \n Note that `find` does not guarantee which of several element it finds.  \n  \n## Requirements  \n **Header:** \\<cliext/hash_map>  \n  \n **Namespace:** cliext  \n  \n## See Also  \n [hash_multimap (STL/CLR)](../dotnet/hash-multimap-stl-clr.md)   \n [hash_multimap::equal_range (STL/CLR)](../dotnet/hash-multimap-equal-range-stl-clr.md)   \n [hash_multimap::lower_bound (STL/CLR)](../dotnet/hash-multimap-lower-bound-stl-clr.md)   \n [hash_multimap::upper_bound (STL/CLR)](../dotnet/hash-multimap-upper-bound-stl-clr.md)"}