{"nodes":[{"pos":[12,57],"content":"&lt;allocators&gt; operators | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&amp;lt;</ph>allocators<ph id=\"ph2\">&amp;gt;</ph> operators | Microsoft Docs","pos":[0,45],"source":"&lt;allocators&gt; operators | Microsoft Docs"}]},{"pos":[260,288],"content":"&lt;allocators&gt; operators","linkify":"&lt;allocators&gt; operators","nodes":[{"content":"<ph id=\"ph1\">&amp;lt;</ph>allocators<ph id=\"ph2\">&amp;gt;</ph> operators","pos":[0,28],"source":"&lt;allocators&gt; operators"}]},{"pos":[304,331],"content":"<bpt id=\"p1\">[</bpt>operator!=<ept id=\"p1\">](#operator_neq)</ept>","source":"[operator!=](#operator_neq)"},{"pos":[332,361],"content":"<bpt id=\"p1\">[</bpt>operator==<ept id=\"p1\">](#operator_eq_eq)</ept>","source":"[operator==](#operator_eq_eq)"},{"pos":[372,411],"content":"<bpt id=\"p1\">&lt;a name=\"operator_neq\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  operator!=","linkify":"<a name=\"operator_neq\"></a>  operator!=","source":"<a name=\"operator_neq\"></a>  operator!="},{"content":"Tests for inequality between allocator objects of a specified class.","pos":[415,483]},{"pos":[649,659],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[666,675]},{"content":"Description","pos":[676,687]},{"content":"One of the allocator objects to be tested for inequality.","pos":[737,794]},{"content":"One of the allocator objects to be tested for inequality.","pos":[807,864]},{"pos":[875,887],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[891,981],"content":"<bpt id=\"p1\">**</bpt>true<ept id=\"p1\">**</ept> if the allocator objects are not equal; <bpt id=\"p2\">**</bpt>false<ept id=\"p2\">**</ept> if allocator objects are equal.","source":"**true** if the allocator objects are not equal; **false** if allocator objects are equal."},{"pos":[991,998],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[1002,1051],"content":"The template operator returns <ph id=\"ph1\">`!(left == right)`</ph>.","source":"The template operator returns `!(left == right)`."},{"pos":[1061,1102],"content":"<bpt id=\"p1\">&lt;a name=\"operator_eq_eq\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  operator==","linkify":"<a name=\"operator_eq_eq\"></a>  operator==","source":"<a name=\"operator_eq_eq\"></a>  operator=="},{"content":"Tests for equality between allocator objects of a specified class.","pos":[1106,1172]},{"pos":[1338,1348],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[1355,1364]},{"content":"Description","pos":[1365,1376]},{"content":"One of the allocator objects to be tested for equality.","pos":[1426,1481]},{"content":"One of the allocator objects to be tested for equality.","pos":[1494,1549]},{"pos":[1560,1572],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[1576,1666],"content":"<bpt id=\"p1\">**</bpt>true<ept id=\"p1\">**</ept> if the allocator objects are equal; <bpt id=\"p2\">**</bpt>false<ept id=\"p2\">**</ept> if allocator objects are not equal.","source":"**true** if the allocator objects are equal; **false** if allocator objects are not equal."},{"pos":[1676,1683],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[1687,1739],"content":"This template operator returns <ph id=\"ph1\">`left.equals(right)`</ph>.","source":"This template operator returns `left.equals(right)`."},{"pos":[1748,1756],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"pos":[1760,1817],"content":"<bpt id=\"p1\">[</bpt><ph id=\"ph1\">\\&lt;</ph>allocators&gt;<ept id=\"p1\">](../standard-library/allocators-header.md)</ept>","source":"[\\<allocators>](../standard-library/allocators-header.md)"}],"content":"---\ntitle: \"&lt;allocators&gt; operators | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nms.assetid: b55d67cb-3c69-46bf-ad40-e845fb096c4e\ncaps.latest.revision: 11\nmanager: \"ghogen\"\n---\n# &lt;allocators&gt; operators\n|||  \n|-|-|  \n|[operator!=](#operator_neq)|[operator==](#operator_eq_eq)|  \n  \n##  <a name=\"operator_neq\"></a>  operator!=  \n Tests for inequality between allocator objects of a specified class.  \n  \n```\ntemplate <class Type, class Sync>  \nbool operator!=(\n    const allocator_base<Type, Sync>& left,\n    const allocator_base<Type, Sync>& right);\n```  \n  \n### Parameters  \n  \n|Parameter|Description|  \n|---------------|-----------------|  \n|`left`|One of the allocator objects to be tested for inequality.|  \n|`right`|One of the allocator objects to be tested for inequality.|  \n  \n### Return Value  \n **true** if the allocator objects are not equal; **false** if allocator objects are equal.  \n  \n### Remarks  \n The template operator returns `!(left == right)`.  \n  \n##  <a name=\"operator_eq_eq\"></a>  operator==  \n Tests for equality between allocator objects of a specified class.  \n  \n```\ntemplate <class Type, class Sync>  \nbool operator==(\n    const allocator_base<Type, Sync>& left,\n    const allocator_base<Type, Sync>& right);\n```  \n  \n### Parameters  \n  \n|Parameter|Description|  \n|---------------|-----------------|  \n|`left`|One of the allocator objects to be tested for equality.|  \n|`right`|One of the allocator objects to be tested for equality.|  \n  \n### Return Value  \n **true** if the allocator objects are equal; **false** if allocator objects are not equal.  \n  \n### Remarks  \n This template operator returns `left.equals(right)`.  \n  \n## See Also  \n [\\<allocators>](../standard-library/allocators-header.md)\n\n\n\n"}