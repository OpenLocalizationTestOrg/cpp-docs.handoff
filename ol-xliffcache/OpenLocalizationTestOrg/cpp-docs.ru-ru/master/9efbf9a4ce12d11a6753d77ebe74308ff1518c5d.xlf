<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ru-ru">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-04506c2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9efbf9a4ce12d11a6753d77ebe74308ff1518c5d</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\error-messages\compiler-errors-1\fatal-error-c1083.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7d43fe354f4700762dd11d5f60a4f81ca5ecbc25</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ae11d7a54f40ca44351c6a902682d551684dc10e</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Fatal Error C1083 | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Fatal Error C1083</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Cannot open filetype file: 'file': message</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The compiler generates a C1083 error when it can’t find a file.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Here are the common reasons why the compiler generates this error.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The specified file name is wrong</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The name of a file may be mistyped.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>For example,</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>might not find the file you intend.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>There is a Standard C++ Library header file named algorithms that does not have a .h file name extension.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>It would not be found by this <ph id="ph1">`include`</ph> directive.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>To fix this issue, verify that the correct file name is entered.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Certain C Runtime Library headers are located in a subdirectory of the standard include directory.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>For example, to include sys\types.h, you must include the sys subdirectory name in the include directive:</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The file is not included in the compiler search path</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The compiler cannot find the file by using the search rules that are indicated by an <ph id="ph1">`include`</ph> or <ph id="ph2">`import`</ph> directive.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>For example, a header file name that is enclosed by quotation marks</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>tells the compiler to look for the file in the same directory that contains the source file first, and then look in other locations specified by the build environment.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>If the quotation marks contain an absolute path, the compiler only looks for the file at that location.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>If the quotation marks contain a relative path, the compiler looks for the file in the directory relative to the source directory.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>If the name is enclosed by angle brackets</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>the compiler follows a search path that is defined by the build environment, the <bpt id="p1">**</bpt>/I<ept id="p1">**</ept> compiler option, the <bpt id="p2">**</bpt>/X<ept id="p2">**</ept> compiler option, and the <bpt id="p3">**</bpt>INCLUDE<ept id="p3">**</ept> environment variable.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>For more information, including specific details about the search order used to find a file, see <bpt id="p1">[</bpt>#include Directive (C/C++)<ept id="p1">](../../preprocessor/hash-include-directive-c-cpp.md)</ept> and <bpt id="p2">[</bpt>#import Directive<ept id="p2">](../../preprocessor/hash-import-directive-cpp.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Even when header files are listed in <bpt id="p1">**</bpt>Solution Explorer<ept id="p1">**</ept> as part of a project, the files are only found by the compiler when they are referred to by an <ph id="ph1">`include`</ph> or <ph id="ph2">`import`</ph> directive and are located on a directory search path.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Different kinds of builds might use different search paths.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>/X<ept id="p1">**</ept> compiler option can be used to exclude directories from the include file search path.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>This enables different builds to use different include files that have the same name, but are kept in different directories.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>This is an alternative to conditional compilation by using preprocessor commands.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>For more information about the <bpt id="p1">**</bpt>/X<ept id="p1">**</ept> compiler option, see <bpt id="p2">[</bpt>/X (Ignore Standard Include Paths)<ept id="p2">](../../build/reference/x-ignore-standard-include-paths.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>When the compiler is invoked on the command line, environment variables are often used to specify search paths.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>If the search path described by the <bpt id="p1">**</bpt>INCLUDE<ept id="p1">**</ept> environment variable is not set correctly, a C1083 error is generated.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>For more information about how to use environment variables, see <bpt id="p1">[</bpt>How to: Use Environment Variables in a Build<ept id="p1">](http://msdn.microsoft.com/Library/7f9e4469-8865-4b59-aab3-3ff26bd36e77)</ept>.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>To fix this issue, correct the path that the compiler uses to search for the included or imported file.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>A new project uses default search paths.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>You may have to modify the path to add a directory for your project.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>If you are compiling on the command line, set the <bpt id="p1">**</bpt>INCLUDE<ept id="p1">**</ept> environment variable or the <bpt id="p2">**</bpt>/I<ept id="p2">**</ept> compiler option to specify the path of the file.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>To set the include directory path in Visual Studio, open the project’s <bpt id="p1">**</bpt>Property Pages<ept id="p1">**</ept> dialog box, expand <bpt id="p2">**</bpt>Configuration Properties<ept id="p2">**</ept> and <bpt id="p3">**</bpt>VC++ Directories<ept id="p3">**</ept>, and then edit the <bpt id="p4">**</bpt>Include Directories<ept id="p4">**</ept> value.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>For more information about the per-user and per-project directories searched by the compiler in Visual Studio, see <bpt id="p1">[</bpt>VC++ Directories Property Page<ept id="p1">](../../ide/vcpp-directories-property-page.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>For more information about the <bpt id="p1">**</bpt>/I<ept id="p1">**</ept> compiler option, see <bpt id="p2">[</bpt>/I (Additional Include Directories)<ept id="p2">](../../build/reference/i-additional-include-directories.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The wrong version of a file name is included</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>A C1083 error can also indicate that the wrong version of a file is included.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>For example, a build could include the wrong version of a file that has an <ph id="ph1">`include`</ph> directive for a header file that is not intended for that build.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>When the header file is not found, the compiler generates a C1083 error.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The fix for this problem is to use the correct file, not to add the header file or directory to the build.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The precompiled headers are not yet precompiled</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>When a project is configured to use precompiled headers, the relevant .pch files have to be created so that files that use the header contents can be compiled.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>For example, the stdafx.cpp file is automatically created in the project directory for new MFC projects.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Compile that file first to create the precompiled header files.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>(In the typical build process design, this is done automatically.) For more information, see <bpt id="p1">[</bpt>Creating Precompiled Header Files<ept id="p1">](../../build/reference/creating-precompiled-header-files.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Additional causes</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The file uses managed code, but the compiler option <bpt id="p1">**</bpt>/clr<ept id="p1">**</ept> is not specified.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>/clr (Common Language Runtime Compilation)<ept id="p1">](../../build/reference/clr-common-language-runtime-compilation.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The file is compiled by using a different <bpt id="p1">**</bpt>/analyze<ept id="p1">**</ept> compiler option setting than is used to precompile the headers.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>(When the headers for a project are precompiled, all should use the same <bpt id="p1">**</bpt>/analyze<ept id="p1">**</ept> settings.) For more information, see <bpt id="p2">[</bpt>/analyze (Code Analysis)<ept id="p2">](../../build/reference/analyze-code-analysis.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The file, the directory, or the disk is read-only.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Access permissions for the file or the directory are not granted.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>There are not enough file handles.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Close some applications and then recompile.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>This condition is unusual under typical circumstances.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>However, it can occur when large projects are built on a computer that has limited physical memory.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The following example generates a C1083 error.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>For information about how to build C/C++ projects in the IDE or on the command line, and information about setting environment variables, see <bpt id="p1">[</bpt>Building C/C++ Programs<ept id="p1">](../../build/building-c-cpp-programs.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>MSBuild Properties</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>