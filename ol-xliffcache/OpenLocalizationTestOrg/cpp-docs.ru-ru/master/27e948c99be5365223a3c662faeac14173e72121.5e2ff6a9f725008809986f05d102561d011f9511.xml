{"nodes":[{"pos":[12,59],"content":"multimap::value_comp (STL-CLR) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"multimap::value_comp (STL-CLR) | Microsoft Docs","pos":[0,47]}]},{"content":"multimap::value_comp (STL/CLR)","pos":[646,676]},{"content":"Copies the ordering delegate for two element values.","pos":[677,729]},{"content":"Syntax","pos":[738,744]},{"content":"Remarks","pos":[799,806]},{"content":"The member function returns the ordering delegate used to order the controlled sequence.","pos":[810,898]},{"content":"You use it to compare two element values.","pos":[899,940]},{"content":"Example","pos":[949,956]},{"content":"Requirements","pos":[1952,1964]},{"pos":[1968,1993],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> <ph id=\"ph1\">\\&lt;</ph>cliext/map&gt;","source":"**Header:** \\<cliext/map>"},{"pos":[2000,2021],"content":"<bpt id=\"p1\">**</bpt>Namespace:<ept id=\"p1\">**</ept> cliext","source":"**Namespace:** cliext"},{"content":"See Also","pos":[2030,2038]},{"content":"multimap (STL/CLR)","pos":[2043,2061]},{"content":"multimap::value_compare (STL/CLR)","pos":[2099,2132]},{"content":"multimap::value_type (STL/CLR)","pos":[2184,2214]}],"content":"---\ntitle: \"multimap::value_comp (STL-CLR) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"cliext::multimap::value_comp\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"value_comp member [STL/CLR]\"\nms.assetid: 4d142014-ab39-4da3-8aa9-ad0ab0cfddf7\ncaps.latest.revision: 8\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# multimap::value_comp (STL/CLR)\nCopies the ordering delegate for two element values.  \n  \n## Syntax  \n  \n```  \nvalue_compare^ value_comp();  \n```  \n  \n## Remarks  \n The member function returns the ordering delegate used to order the controlled sequence. You use it to compare two element values.  \n  \n## Example  \n  \n```  \n// cliext_multimap_value_comp.cpp   \n// compile with: /clr   \n#include <cliext/map>   \n  \ntypedef cliext::map<wchar_t, int> Mymultimap;   \nint main()   \n    {   \n    Mymultimap c1;   \n    Mymultimap::value_compare^ kcomp = c1.value_comp();   \n  \n    System::Console::WriteLine(\"compare([L'a', 1], [L'a', 1]) = {0}\",   \n        kcomp(Mymultimap::make_value(L'a', 1),   \n            Mymultimap::make_value(L'a', 1)));   \n    System::Console::WriteLine(\"compare([L'a', 1], [L'b', 2]) = {0}\",   \n        kcomp(Mymultimap::make_value(L'a', 1),   \n            Mymultimap::make_value(L'b', 2)));   \n    System::Console::WriteLine(\"compare([L'b', 2], [L'a', 1]) = {0}\",   \n        kcomp(Mymultimap::make_value(L'b', 2),   \n            Mymultimap::make_value(L'a', 1)));   \n    System::Console::WriteLine();   \n    return (0);   \n    }  \n  \n```  \n  \n```Output  \ncompare([L'a', 1], [L'a', 1]) = False  \ncompare([L'a', 1], [L'b', 2]) = True  \ncompare([L'b', 2], [L'a', 1]) = False  \n```  \n  \n## Requirements  \n **Header:** \\<cliext/map>  \n  \n **Namespace:** cliext  \n  \n## See Also  \n [multimap (STL/CLR)](../dotnet/multimap-stl-clr.md)   \n [multimap::value_compare (STL/CLR)](../dotnet/multimap-value-compare-stl-clr.md)   \n [multimap::value_type (STL/CLR)](../dotnet/multimap-value-type-stl-clr.md)"}