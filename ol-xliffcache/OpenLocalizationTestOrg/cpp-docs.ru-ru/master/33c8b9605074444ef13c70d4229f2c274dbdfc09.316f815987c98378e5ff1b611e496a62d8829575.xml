{"nodes":[{"pos":[12,69],"content":"priority_queue::container_type (STL-CLR) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"priority_queue::container_type (STL-CLR) | Microsoft Docs","pos":[0,57]}]},{"content":"priority_queue::container_type (STL/CLR)","pos":[671,711]},{"content":"The type of the underlying container.","pos":[712,749]},{"content":"Syntax","pos":[758,764]},{"content":"Remarks","pos":[820,827]},{"pos":[831,892],"content":"The type is a synonym for the template parameter <ph id=\"ph1\">`Container`</ph>.","source":"The type is a synonym for the template parameter `Container`."},{"content":"Example","pos":[901,908]},{"content":"Requirements","pos":[1517,1529]},{"pos":[1533,1560],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> <ph id=\"ph1\">\\&lt;</ph>cliext/queue&gt;","source":"**Header:** \\<cliext/queue>"},{"pos":[1567,1588],"content":"<bpt id=\"p1\">**</bpt>Namespace:<ept id=\"p1\">**</ept> cliext","source":"**Namespace:** cliext"},{"content":"See Also","pos":[1597,1605]},{"content":"priority_queue (STL/CLR)","pos":[1610,1634]},{"content":"priority_queue::get_container (STL/CLR)","pos":[1678,1717]}],"content":"---\ntitle: \"priority_queue::container_type (STL-CLR) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"cliext::priority_queue::container_type\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"container_type member [STL/CLR]\"\nms.assetid: 97d79791-53cb-48f9-a139-69502517569f\ncaps.latest.revision: 15\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# priority_queue::container_type (STL/CLR)\nThe type of the underlying container.  \n  \n## Syntax  \n  \n```  \ntypedef Container value_type;  \n```  \n  \n## Remarks  \n The type is a synonym for the template parameter `Container`.  \n  \n## Example  \n  \n```  \n// cliext_priority_queue_container_type.cpp   \n// compile with: /clr   \n#include <cliext/queue>   \n  \ntypedef cliext::priority_queue<wchar_t> Mypriority_queue;   \nint main()   \n    {   \n    Mypriority_queue c1;   \n    c1.push(L'a');   \n    c1.push(L'b');   \n    c1.push(L'c');   \n  \n// display contents \" a b c\" using container_type   \n    Mypriority_queue::container_type wc1 = c1.get_container();   \n    for each (wchar_t elem in wc1)   \n        System::Console::Write(\" {0}\", elem);   \n    System::Console::WriteLine();   \n    return (0);   \n    }  \n  \n```  \n  \n```Output  \nc a b  \n```  \n  \n## Requirements  \n **Header:** \\<cliext/queue>  \n  \n **Namespace:** cliext  \n  \n## See Also  \n [priority_queue (STL/CLR)](../dotnet/priority-queue-stl-clr.md)   \n [priority_queue::get_container (STL/CLR)](../dotnet/priority-queue-get-container-stl-clr.md)"}