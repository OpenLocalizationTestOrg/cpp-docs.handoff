{"nodes":[{"pos":[12,43],"content":"QueryInterface | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"QueryInterface | Microsoft Docs","pos":[0,31]}]},{"content":"QueryInterface","pos":[667,681]},{"pos":[682,961],"content":"Although there are mechanisms by which an object can express the functionality it provides statically (before it is instantiated), the fundamental COM mechanism is to use the <bpt id=\"p1\">**</bpt>IUnknown<ept id=\"p1\">**</ept> method called <bpt id=\"p2\">[</bpt>QueryInterface<ept id=\"p2\">](http://msdn.microsoft.com/library/windows/desktop/ms682521)</ept>.","source":"Although there are mechanisms by which an object can express the functionality it provides statically (before it is instantiated), the fundamental COM mechanism is to use the **IUnknown** method called [QueryInterface](http://msdn.microsoft.com/library/windows/desktop/ms682521)."},{"content":"Every interface is derived from <bpt id=\"p1\">**</bpt>IUnknown<ept id=\"p1\">**</ept>, so every interface has an implementation of <ph id=\"ph1\">`QueryInterface`</ph>.","pos":[968,1075],"source":"Every interface is derived from **IUnknown**, so every interface has an implementation of `QueryInterface`."},{"content":"Regardless of implementation, this method queries an object using the IID of the interface to which the caller wants a pointer.","pos":[1076,1203]},{"content":"If the object supports that interface, <ph id=\"ph1\">`QueryInterface`</ph> retrieves a pointer to the interface, while also calling <ph id=\"ph2\">`AddRef`</ph>.","pos":[1204,1326],"source":" If the object supports that interface, `QueryInterface` retrieves a pointer to the interface, while also calling `AddRef`."},{"content":"Otherwise, it returns the <bpt id=\"p1\">**</bpt>E_NOINTERFACE<ept id=\"p1\">**</ept> error code.","pos":[1327,1382],"source":" Otherwise, it returns the **E_NOINTERFACE** error code."},{"content":"Note that you must obey <bpt id=\"p1\">[</bpt>Reference Counting<ept id=\"p1\">](../atl/reference-counting.md)</ept> rules at all times.","pos":[1389,1483],"source":"Note that you must obey [Reference Counting](../atl/reference-counting.md) rules at all times."},{"content":"If you call <bpt id=\"p1\">**</bpt>Release<ept id=\"p1\">**</ept> on an interface pointer to decrement the reference count to zero, you should not use that pointer again.","pos":[1484,1612],"source":" If you call **Release** on an interface pointer to decrement the reference count to zero, you should not use that pointer again."},{"content":"Occasionally you may need to obtain a weak reference to an object (that is, you may wish to obtain a pointer to one of its interfaces without incrementing the reference count), but it is not acceptable to do this by calling <ph id=\"ph1\">`QueryInterface`</ph> followed by <bpt id=\"p1\">**</bpt>Release<ept id=\"p1\">**</ept>.","pos":[1613,1878],"source":" Occasionally you may need to obtain a weak reference to an object (that is, you may wish to obtain a pointer to one of its interfaces without incrementing the reference count), but it is not acceptable to do this by calling `QueryInterface` followed by **Release**."},{"content":"The pointer obtained in such a manner is invalid and should not be used.","pos":[1879,1951]},{"content":"This more readily becomes apparent when <bpt id=\"p1\">[</bpt>_ATL_DEBUG_INTERFACES<ept id=\"p1\">](http://msdn.microsoft.com/library/874b767b-c605-4afc-8d8b-819478d24224)</ept> is defined, so defining this macro is a useful way of finding reference counting bugs.","pos":[1952,2174],"source":" This more readily becomes apparent when [_ATL_DEBUG_INTERFACES](http://msdn.microsoft.com/library/874b767b-c605-4afc-8d8b-819478d24224) is defined, so defining this macro is a useful way of finding reference counting bugs."},{"content":"See Also","pos":[2183,2191]},{"content":"Introduction to COM","pos":[2196,2215]},{"content":"QueryInterface: Navigating in an Object","pos":[2253,2292]}],"content":"---\ntitle: \"QueryInterface | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"QueryInterface\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"interfaces, pointers\"\n  - \"interfaces, availability\"\n  - \"QueryInterface method\"\nms.assetid: 62fce95e-aafa-4187-b50b-e6611b74c3b3\ncaps.latest.revision: 10\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# QueryInterface\nAlthough there are mechanisms by which an object can express the functionality it provides statically (before it is instantiated), the fundamental COM mechanism is to use the **IUnknown** method called [QueryInterface](http://msdn.microsoft.com/library/windows/desktop/ms682521).  \n  \n Every interface is derived from **IUnknown**, so every interface has an implementation of `QueryInterface`. Regardless of implementation, this method queries an object using the IID of the interface to which the caller wants a pointer. If the object supports that interface, `QueryInterface` retrieves a pointer to the interface, while also calling `AddRef`. Otherwise, it returns the **E_NOINTERFACE** error code.  \n  \n Note that you must obey [Reference Counting](../atl/reference-counting.md) rules at all times. If you call **Release** on an interface pointer to decrement the reference count to zero, you should not use that pointer again. Occasionally you may need to obtain a weak reference to an object (that is, you may wish to obtain a pointer to one of its interfaces without incrementing the reference count), but it is not acceptable to do this by calling `QueryInterface` followed by **Release**. The pointer obtained in such a manner is invalid and should not be used. This more readily becomes apparent when [_ATL_DEBUG_INTERFACES](http://msdn.microsoft.com/library/874b767b-c605-4afc-8d8b-819478d24224) is defined, so defining this macro is a useful way of finding reference counting bugs.  \n  \n## See Also  \n [Introduction to COM](../atl/introduction-to-com.md)   \n [QueryInterface: Navigating in an Object](http://msdn.microsoft.com/library/windows/desktop/ms687230)\n\n"}