{"nodes":[{"pos":[12,45],"content":"&lt;hash_map&gt; | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&amp;lt;</ph>hash_map<ph id=\"ph2\">&amp;gt;</ph> | Microsoft Docs","pos":[0,33],"source":"&lt;hash_map&gt; | Microsoft Docs"}]},{"pos":[670,686],"content":"&lt;hash_map&gt;","linkify":"&lt;hash_map&gt;","nodes":[{"content":"<ph id=\"ph1\">&amp;lt;</ph>hash_map<ph id=\"ph2\">&amp;gt;</ph>","pos":[0,16],"source":"&lt;hash_map&gt;"}]},{"pos":[689,800],"content":"[!NOTE]\n This header is obsolete. The alternative is [<unordered_map>](../standard-library/unordered-map.md).","leadings":["","> "],"nodes":[{"content":" This header is obsolete. The alternative is [<unordered_map>](../standard-library/unordered-map.md).","pos":[8,109],"nodes":[{"content":"This header is obsolete.","pos":[1,25]},{"content":"The alternative is <bpt id=\"p1\">[</bpt>&lt;unordered_map&gt;<ept id=\"p1\">](../standard-library/unordered-map.md)</ept>.","pos":[26,101],"source":" The alternative is [<unordered_map>](../standard-library/unordered-map.md)."}]}]},{"content":"Defines the container template classes hash_map and hash_multimap and their supporting templates.","pos":[807,904]},{"content":"In Visual C++ .NET 2003, members of the &lt;hash_map&gt; and &lt;hash_set&gt; header files are no longer in the std namespace, but rather have been moved into the stdext namespace.","pos":[911,1079],"source":"In Visual C++ .NET 2003, members of the <hash_map> and <hash_set> header files are no longer in the std namespace, but rather have been moved into the stdext namespace."},{"content":"See <bpt id=\"p1\">[</bpt>stdext Namespace<ept id=\"p1\">](../standard-library/stdext-namespace.md)</ept> for more information.","pos":[1080,1165],"source":" See [stdext Namespace](../standard-library/stdext-namespace.md) for more information."},{"pos":[1174,1180],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[1230,1239],"content":"Operators","linkify":"Operators","nodes":[{"content":"Operators","pos":[0,9]}]},{"content":"Hash_map version","pos":[1246,1262]},{"content":"Hash_multimap version","pos":[1263,1284]},{"content":"Description","pos":[1285,1296]},{"pos":[1376,1466],"content":"<bpt id=\"p1\">[</bpt>operator!= (hash_map)<ept id=\"p1\">](../standard-library/hash-map-operators.md#operator_neq__hash_map_)</ept>","source":"[operator!= (hash_map)](../standard-library/hash-map-operators.md#operator_neq__hash_map_)"},{"pos":[1467,1551],"content":"<bpt id=\"p1\">[</bpt>operator!= (hash_multimap)<ept id=\"p1\">](../standard-library/hash-map-operators.md#operator_neq)</ept>","source":"[operator!= (hash_multimap)](../standard-library/hash-map-operators.md#operator_neq)"},{"content":"Tests if the hash_map or hash_multimap object on the left side of the operator is not equal to the hash_map or hash_multimap object on the right side.","pos":[1552,1702]},{"pos":[1707,1800],"content":"<bpt id=\"p1\">[</bpt>operator== (hash_map)<ept id=\"p1\">](http://msdn.microsoft.com/en-us/f933cb1c-934d-43f5-aa9e-0b325eb95b85)</ept>","source":"[operator== (hash_map)](http://msdn.microsoft.com/en-us/f933cb1c-934d-43f5-aa9e-0b325eb95b85)"},{"pos":[1801,1899],"content":"<bpt id=\"p1\">[</bpt>operator== (hash_multimap)<ept id=\"p1\">](http://msdn.microsoft.com/en-us/3fa378b1-0250-4e3f-a130-dc14103fc5e9)</ept>","source":"[operator== (hash_multimap)](http://msdn.microsoft.com/en-us/3fa378b1-0250-4e3f-a130-dc14103fc5e9)"},{"content":"Tests if the hash_map or hash_multimap object on the left side of the operator is equal to the hash_map or hash_multimap object on the right side.","pos":[1900,2046]},{"pos":[2057,2087],"content":"Specialized Template Functions","linkify":"Specialized Template Functions","nodes":[{"content":"Specialized Template Functions","pos":[0,30]}]},{"content":"Hash_map version","pos":[2094,2110]},{"content":"Hash_multimap version","pos":[2111,2132]},{"content":"Description","pos":[2133,2144]},{"pos":[2224,2295],"content":"<bpt id=\"p1\">[</bpt>swap (hash_map)<ept id=\"p1\">](../standard-library/hash-map-class.md#hash_map__swap)</ept>","source":"[swap (hash_map)](../standard-library/hash-map-class.md#hash_map__swap)"},{"pos":[2296,2382],"content":"<bpt id=\"p1\">[</bpt>swap (hash_multimap)<ept id=\"p1\">](../standard-library/hash-multimap-class.md#hash_multimap__swap)</ept>","source":"[swap (hash_multimap)](../standard-library/hash-multimap-class.md#hash_multimap__swap)"},{"content":"Exchanges the elements of two hash_maps or hash_multimaps.","pos":[2383,2441]},{"pos":[2452,2459],"content":"Classes","linkify":"Classes","nodes":[{"content":"Classes","pos":[0,7]}]},{"pos":[2480,2543],"content":"<bpt id=\"p1\">[</bpt>hash_compare Class<ept id=\"p1\">](../standard-library/hash-compare-class.md)</ept>","source":"[hash_compare Class](../standard-library/hash-compare-class.md)"},{"pos":[2544,2764],"content":"Describes an object that can be used by any of the hash associative containers — hash_map, hash_multimap, hash_set, or hash_multiset — as a default <bpt id=\"p1\">**</bpt>Traits<ept id=\"p1\">**</ept> parameter object to order and hash the elements they contain.","source":"Describes an object that can be used by any of the hash associative containers — hash_map, hash_multimap, hash_set, or hash_multiset — as a default **Traits** parameter object to order and hash the elements they contain."},{"pos":[2769,2834],"content":"<bpt id=\"p1\">[</bpt>value_compare Class<ept id=\"p1\">](../standard-library/value-compare-class.md)</ept>","source":"[value_compare Class](../standard-library/value-compare-class.md)"},{"content":"Provides a function object that can compare the elements of a hash_map by comparing the values of their keys to determine their relative order in the hash_map.","pos":[2835,2994]},{"pos":[2999,3054],"content":"<bpt id=\"p1\">[</bpt>hash_map Class<ept id=\"p1\">](../standard-library/hash-map-class.md)</ept>","source":"[hash_map Class](../standard-library/hash-map-class.md)"},{"content":"Used for the storage and fast retrieval of data from a collection in which each element is a pair that has a sort key whose value is unique and an associated data value.","pos":[3055,3224]},{"pos":[3229,3294],"content":"<bpt id=\"p1\">[</bpt>hash_multimap Class<ept id=\"p1\">](../standard-library/hash-multimap-class.md)</ept>","source":"[hash_multimap Class](../standard-library/hash-multimap-class.md)"},{"content":"Used for the storage and fast retrieval of data from a collection in which each element is a pair that has a sort key whose value need not be unique and an associated data value.","pos":[3295,3473]},{"pos":[3483,3495],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[3499,3521],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> &lt;hash_map&gt;","source":"**Header:** <hash_map>"},{"pos":[3528,3549],"content":"<bpt id=\"p1\">**</bpt>Namespace:<ept id=\"p1\">**</ept> stdext","source":"**Namespace:** stdext"},{"pos":[3558,3566],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Header Files Reference<ept id=\"p1\">](../standard-library/cpp-standard-library-header-files.md)</ept><ph id=\"ph1\"> </ph>","pos":[3570,3653],"source":"[Header Files Reference](../standard-library/cpp-standard-library-header-files.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Thread Safety in the C++ Standard Library<ept id=\"p1\">](../standard-library/thread-safety-in-the-cpp-standard-library.md)</ept><ph id=\"ph1\"> </ph>","pos":[3656,3767],"source":" [Thread Safety in the C++ Standard Library](../standard-library/thread-safety-in-the-cpp-standard-library.md) "},{"content":"<bpt id=\"p1\"> [</bpt>C++ Standard Library Reference<ept id=\"p1\">](../standard-library/cpp-standard-library-reference.md)</ept>","pos":[3770,3858],"source":" [C++ Standard Library Reference](../standard-library/cpp-standard-library-reference.md)"}],"content":"---\ntitle: \"&lt;hash_map&gt; | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"std.<hash_map>\"\n  - \"<hash_map>\"\n  - \"std::<hash_map>\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"hash_map header\"\nms.assetid: 0765708a-a668-42a2-9800-654c857bdcc2\ncaps.latest.revision: 27\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"ru-ru\"\n  - \"zh-cn\"\n  - \"zh-tw\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"tr-tr\"\n---\n# &lt;hash_map&gt;\n> [!NOTE]\n>  This header is obsolete. The alternative is [<unordered_map>](../standard-library/unordered-map.md).  \n  \n Defines the container template classes hash_map and hash_multimap and their supporting templates.  \n  \n In Visual C++ .NET 2003, members of the <hash_map> and <hash_set> header files are no longer in the std namespace, but rather have been moved into the stdext namespace. See [stdext Namespace](../standard-library/stdext-namespace.md) for more information.  \n  \n## Syntax  \n  \n```  \n#include <hash_map>  \n  \n```  \n  \n### Operators  \n  \n|Hash_map version|Hash_multimap version|Description|  \n|-----------------------|----------------------------|-----------------|  \n|[operator!= (hash_map)](../standard-library/hash-map-operators.md#operator_neq__hash_map_)|[operator!= (hash_multimap)](../standard-library/hash-map-operators.md#operator_neq)|Tests if the hash_map or hash_multimap object on the left side of the operator is not equal to the hash_map or hash_multimap object on the right side.|  \n|[operator== (hash_map)](http://msdn.microsoft.com/en-us/f933cb1c-934d-43f5-aa9e-0b325eb95b85)|[operator== (hash_multimap)](http://msdn.microsoft.com/en-us/3fa378b1-0250-4e3f-a130-dc14103fc5e9)|Tests if the hash_map or hash_multimap object on the left side of the operator is equal to the hash_map or hash_multimap object on the right side.|  \n  \n### Specialized Template Functions  \n  \n|Hash_map version|Hash_multimap version|Description|  \n|-----------------------|----------------------------|-----------------|  \n|[swap (hash_map)](../standard-library/hash-map-class.md#hash_map__swap)|[swap (hash_multimap)](../standard-library/hash-multimap-class.md#hash_multimap__swap)|Exchanges the elements of two hash_maps or hash_multimaps.|  \n  \n### Classes  \n  \n|||  \n|-|-|  \n|[hash_compare Class](../standard-library/hash-compare-class.md)|Describes an object that can be used by any of the hash associative containers — hash_map, hash_multimap, hash_set, or hash_multiset — as a default **Traits** parameter object to order and hash the elements they contain.|  \n|[value_compare Class](../standard-library/value-compare-class.md)|Provides a function object that can compare the elements of a hash_map by comparing the values of their keys to determine their relative order in the hash_map.|  \n|[hash_map Class](../standard-library/hash-map-class.md)|Used for the storage and fast retrieval of data from a collection in which each element is a pair that has a sort key whose value is unique and an associated data value.|  \n|[hash_multimap Class](../standard-library/hash-multimap-class.md)|Used for the storage and fast retrieval of data from a collection in which each element is a pair that has a sort key whose value need not be unique and an associated data value.|  \n  \n## Requirements  \n **Header:** <hash_map>  \n  \n **Namespace:** stdext  \n  \n## See Also  \n [Header Files Reference](../standard-library/cpp-standard-library-header-files.md)   \n [Thread Safety in the C++ Standard Library](../standard-library/thread-safety-in-the-cpp-standard-library.md)   \n [C++ Standard Library Reference](../standard-library/cpp-standard-library-reference.md)\n\n\n\n"}