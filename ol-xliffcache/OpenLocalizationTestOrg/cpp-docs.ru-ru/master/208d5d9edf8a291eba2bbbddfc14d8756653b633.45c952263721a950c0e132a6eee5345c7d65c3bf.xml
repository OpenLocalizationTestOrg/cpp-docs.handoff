{"nodes":[{"pos":[12,85],"content":".NET Framework Equivalents to C++ Native Types (C++-CLI) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":".NET Framework Equivalents to C++ Native Types (C++-CLI) | Microsoft Docs","pos":[0,73]}]},{"content":".NET Framework Equivalents to C++ Native Types (C++/CLI)","pos":[632,688]},{"pos":[689,825],"content":"The following table shows the keywords for built-in Visual C++ types, which are aliases of predefined types in the <bpt id=\"p1\">**</bpt>System<ept id=\"p1\">**</ept> namespace.","source":"The following table shows the keywords for built-in Visual C++ types, which are aliases of predefined types in the **System** namespace."},{"content":"Visual C++ type","pos":[832,847]},{"content":".NET Framework type","pos":[848,867]},{"content":"bool","pos":[928,932]},{"content":"System.Boolean","pos":[937,951]},{"pos":[958,1060],"content":"<bpt id=\"p1\">**</bpt>signed char<ept id=\"p1\">**</ept> (see <bpt id=\"p2\">[</bpt>/J<ept id=\"p2\">](../build/reference/j-default-char-type-is-unsigned.md)</ept> for more information)","source":"**signed char** (see [/J](../build/reference/j-default-char-type-is-unsigned.md) for more information)"},{"content":"System.SByte","pos":[1063,1075]},{"content":"unsigned char","pos":[1084,1097]},{"content":"System.Byte","pos":[1102,1113]},{"content":"wchar_t","pos":[1122,1129]},{"content":"System.Char","pos":[1134,1145]},{"pos":[1152,1182],"content":"<bpt id=\"p1\">**</bpt>double<ept id=\"p1\">**</ept> and <bpt id=\"p2\">**</bpt>long double<ept id=\"p2\">**</ept>","source":"**double** and **long double**"},{"content":"System.Double","pos":[1185,1198]},{"content":"float","pos":[1207,1212]},{"content":"System.Single","pos":[1217,1230]},{"pos":[1237,1291],"content":"<bpt id=\"p1\">**</bpt>int<ept id=\"p1\">**</ept>, <bpt id=\"p2\">**</bpt>signed int<ept id=\"p2\">**</ept>, <bpt id=\"p3\">**</bpt>long<ept id=\"p3\">**</ept>, and <bpt id=\"p4\">**</bpt>signed long<ept id=\"p4\">**</ept>","source":"**int**, **signed int**, **long**, and **signed long**"},{"content":"System.Int32","pos":[1294,1306]},{"pos":[1313,1351],"content":"<bpt id=\"p1\">**</bpt>unsigned int<ept id=\"p1\">**</ept> and <bpt id=\"p2\">**</bpt>unsigned long<ept id=\"p2\">**</ept>","source":"**unsigned int** and **unsigned long**"},{"content":"System.UInt32","pos":[1354,1367]},{"pos":[1374,1408],"content":"<bpt id=\"p1\">**</bpt>__int64<ept id=\"p1\">**</ept> and <bpt id=\"p2\">**</bpt>signed __int64<ept id=\"p2\">**</ept>","source":"**__int64** and **signed __int64**"},{"content":"System.Int64","pos":[1411,1423]},{"content":"unsigned __int64","pos":[1432,1448]},{"content":"System.UInt64","pos":[1453,1466]},{"pos":[1473,1503],"content":"<bpt id=\"p1\">**</bpt>short<ept id=\"p1\">**</ept> and <bpt id=\"p2\">**</bpt>signed short<ept id=\"p2\">**</ept>","source":"**short** and **signed short**"},{"content":"System.Int16","pos":[1506,1518]},{"content":"unsigned short","pos":[1527,1541]},{"content":"System.UInt16","pos":[1546,1559]},{"content":"void","pos":[1568,1572]},{"content":"System.Void","pos":[1577,1588]},{"content":"See Also","pos":[1600,1608]},{"content":"Managed Types (C++/CLI)","pos":[1613,1636]}],"content":"---\ntitle: \".NET Framework Equivalents to C++ Native Types (C++-CLI) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \".NET Framework [C++], C++ equivalents\"\nms.assetid: 7f116a9a-26cd-46db-9877-a63ffdc88723\ncaps.latest.revision: 11\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# .NET Framework Equivalents to C++ Native Types (C++/CLI)\nThe following table shows the keywords for built-in Visual C++ types, which are aliases of predefined types in the **System** namespace.  \n  \n|Visual C++ type|.NET Framework type|  \n|-----------------------|-------------------------|  \n|**bool**|**System.Boolean**|  \n|**signed char** (see [/J](../build/reference/j-default-char-type-is-unsigned.md) for more information)|**System.SByte**|  \n|**unsigned char**|**System.Byte**|  \n|**wchar_t**|**System.Char**|  \n|**double** and **long double**|**System.Double**|  \n|**float**|**System.Single**|  \n|**int**, **signed int**, **long**, and **signed long**|**System.Int32**|  \n|**unsigned int** and **unsigned long**|**System.UInt32**|  \n|**__int64** and **signed __int64**|**System.Int64**|  \n|**unsigned __int64**|**System.UInt64**|  \n|**short** and **signed short**|**System.Int16**|  \n|**unsigned short**|**System.UInt16**|  \n|**void**|**System.Void**|  \n  \n## See Also  \n [Managed Types (C++/CLI)](../dotnet/managed-types-cpp-cli.md)"}