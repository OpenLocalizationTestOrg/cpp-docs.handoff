{"nodes":[{"pos":[12,47],"content":"cpow, cpowf, cpowl | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"cpow, cpowf, cpowl | Microsoft Docs","pos":[0,35]}]},{"content":"cpow, cpowf, cpowl","pos":[1073,1091]},{"content":"Retrieves the value of a number raised to the specified power, where the base and exponent are complex numbers.","pos":[1092,1203]},{"content":"This function has a branch cut for the exponent along the negative real axis.","pos":[1204,1281]},{"content":"Syntax","pos":[1290,1296]},{"content":"Parameters","pos":[1625,1635]},{"content":"The base.","pos":[1646,1655]},{"content":"The exponent.","pos":[1669,1682]},{"content":"Return Value","pos":[1691,1703]},{"pos":[1707,1806],"content":"The value of <ph id=\"ph1\">`x`</ph> raised to the power of <ph id=\"ph2\">`y`</ph> with a branch cut for <ph id=\"ph3\">`x`</ph> along the negative real axis.","source":"The value of `x` raised to the power of `y` with a branch cut for `x` along the negative real axis."},{"content":"Remarks","pos":[1815,1822]},{"content":"Because C++ allows overloading, you can call overloads of <ph id=\"ph1\">`cpow`</ph> that take and return <ph id=\"ph2\">`_Fcomplex`</ph> and <ph id=\"ph3\">`_Lcomplex`</ph> values.","pos":[1826,1947],"source":"Because C++ allows overloading, you can call overloads of `cpow` that take and return `_Fcomplex` and `_Lcomplex` values."},{"content":"In a C program, <ph id=\"ph1\">`cpow`</ph> always takes and returns a <ph id=\"ph2\">`_Dcomplex`</ph> value.","pos":[1948,2016],"source":" In a C program, `cpow` always takes and returns a `_Dcomplex` value."},{"content":"Requirements","pos":[2025,2037]},{"content":"Routine","pos":[2044,2051]},{"content":"C header","pos":[2052,2060]},{"content":"C++ header","pos":[2061,2071]},{"pos":[2134,2158],"content":",               <ph id=\"ph1\">`cpowf`</ph>,","source":",               `cpowf`, "},{"content":"complex.h&gt;","pos":[2169,2179],"source":"complex.h>"},{"content":"ccomplex&gt;","pos":[2182,2191],"source":"ccomplex>"},{"pos":[2199,2317],"content":"For more compatibility information, see <bpt id=\"p1\">[</bpt>Compatibility<ept id=\"p1\">](../../c-runtime-library/compatibility.md)</ept> in the Introduction.","source":"For more compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md) in the Introduction."},{"content":"See Also","pos":[2326,2334]},{"content":"Alphabetical Function Reference","pos":[2339,2370]},{"content":"cexp, cexpf, cexpl","pos":[2451,2469]},{"content":"clog10, clog10f, clog10l","pos":[2531,2555]},{"content":"clog, clogf, clogl","pos":[2623,2641]}],"content":"---\ntitle: \"cpow, cpowf, cpowl | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"cpp\"\n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\napiname: \n  - \"cpow\"\n  - \"cpowf\"\n  - \"cpowl\"\napilocation: \n  - \"msvcrt.dll\"\n  - \"msvcr80.dll\"\n  - \"msvcr90.dll\"\n  - \"msvcr100.dll\"\n  - \"msvcr100_clr0400.dll\"\n  - \"msvcr110.dll\"\n  - \"msvcr110_clr0400.dll\"\n  - \"msvcr120.dll\"\n  - \"msvcr120_clr0400.dll\"\n  - \"ucrtbase.dll\"\n  - \"api-ms-win-crt-math-l1-1-0.dll\"\napitype: \"DLLExport\"\nf1_keywords: \n  - \"cpow\"\n  - \"cpowf\"\n  - \"cpowl\"\n  - \"complex/cpow\"\n  - \"complex/cpowf\"\n  - \"complex/copwl\"\ndev_langs: \n  - \"C\"\n  - \"C++\"\nhelpviewer_keywords: \n  - \"cpow function\"\n  - \"cpowf function\"\n  - \"complex/cpowl function\"\nms.assetid: 83fe2187-22b7-4295-ab16-4d77abdbb80b\ncaps.latest.revision: 13\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# cpow, cpowf, cpowl\nRetrieves the value of a number raised to the specified power, where the base and exponent are complex numbers. This function has a branch cut for the exponent along the negative real axis.  \n  \n## Syntax  \n  \n```  \n_Dcomplex cpow(   \n   _Dcomplex x, _Dcomplex y   \n);  \n_Fcomplex cpow(   \n   _Fcomplex x, _Fcomplex y   \n);  // C++ only  \n_Lcomplex cpow(   \n   _Lcomplex x, _Lcomplex y   \n);  // C++ only  \n_Fcomplex cpowf(   \n   _Fcomplex x, _Fcomplex y   \n);  \n_Lcomplex cpowl(   \n   _Lcomplex x, _Lcomplex y   \n);  \n```  \n  \n#### Parameters  \n `x`  \n The base.  \n  \n `y`  \n The exponent.  \n  \n## Return Value  \n The value of `x` raised to the power of `y` with a branch cut for `x` along the negative real axis.  \n  \n## Remarks  \n Because C++ allows overloading, you can call overloads of `cpow` that take and return `_Fcomplex` and `_Lcomplex` values. In a C program, `cpow` always takes and returns a `_Dcomplex` value.  \n  \n## Requirements  \n  \n|Routine|C header|C++ header|  \n|-------------|--------------|------------------|  \n|`cpow`,               `cpowf`, `cpowl`|\\<complex.h>|\\<ccomplex>|  \n  \n For more compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md) in the Introduction.  \n  \n## See Also  \n [Alphabetical Function Reference](../../c-runtime-library/reference/crt-alphabetical-function-reference.md)   \n [cexp, cexpf, cexpl](../../c-runtime-library/reference/cexp-cexpf-cexpl.md)   \n [clog10, clog10f, clog10l](../../c-runtime-library/reference/clog10-clog10f-clog10l.md)   \n [clog, clogf, clogl](../../c-runtime-library/reference/clog-clogf-clogl.md)"}