{"nodes":[{"pos":[12,64],"content":"CAnimationManagerEventHandler Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"CAnimationManagerEventHandler Class | Microsoft Docs","pos":[0,52]}]},{"pos":[720,755],"content":"CAnimationManagerEventHandler Class","linkify":"CAnimationManagerEventHandler Class","nodes":[{"content":"CAnimationManagerEventHandler Class","pos":[0,35]}]},{"content":"Implements a callback, which is called by the Animation API when a status of an animation manager is changed.","pos":[756,865]},{"pos":[874,880],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[1019,1026],"content":"Members","linkify":"Members","nodes":[{"content":"Members","pos":[0,7]}]},{"pos":[1036,1055],"content":"Public Constructors","linkify":"Public Constructors","nodes":[{"content":"Public Constructors","pos":[0,19]}]},{"content":"Name","pos":[1062,1066]},{"content":"Description","pos":[1067,1078]},{"pos":[1116,1241],"content":"<bpt id=\"p1\">[</bpt>CAnimationManagerEventHandler::CAnimationManagerEventHandler<ept id=\"p1\">](#canimationmanagereventhandler__canimationmanagereventhandler)</ept>","source":"[CAnimationManagerEventHandler::CAnimationManagerEventHandler](#canimationmanagereventhandler__canimationmanagereventhandler)"},{"pos":[1242,1294],"content":"Constructs a <ph id=\"ph1\">`CAnimationManagerEventHandler`</ph> object.","source":"Constructs a `CAnimationManagerEventHandler` object."},{"pos":[1305,1319],"content":"Public Methods","linkify":"Public Methods","nodes":[{"content":"Public Methods","pos":[0,14]}]},{"content":"Name","pos":[1326,1330]},{"content":"Description","pos":[1331,1342]},{"pos":[1380,1475],"content":"<bpt id=\"p1\">[</bpt>CAnimationManagerEventHandler::CreateInstance<ept id=\"p1\">](#canimationmanagereventhandler__createinstance)</ept>","source":"[CAnimationManagerEventHandler::CreateInstance](#canimationmanagereventhandler__createinstance)"},{"pos":[1476,1538],"content":"Creates an instance of <ph id=\"ph1\">`CAnimationManagerEventHandler`</ph> object.","source":"Creates an instance of `CAnimationManagerEventHandler` object."},{"pos":[1543,1654],"content":"<bpt id=\"p1\">[</bpt>CAnimationManagerEventHandler::OnManagerStatusChanged<ept id=\"p1\">](#canimationmanagereventhandler__onmanagerstatuschanged)</ept>","source":"[CAnimationManagerEventHandler::OnManagerStatusChanged](#canimationmanagereventhandler__onmanagerstatuschanged)"},{"content":"Called when a status of animation manager has changed.","pos":[1655,1709]},{"content":"(Overrides <ph id=\"ph1\">`CUIAnimationManagerEventHandlerBase::OnManagerStatusChanged`</ph>.)","pos":[1710,1784],"source":" (Overrides `CUIAnimationManagerEventHandlerBase::OnManagerStatusChanged`.)"},{"pos":[1789,1900],"content":"<bpt id=\"p1\">[</bpt>CAnimationManagerEventHandler::SetAnimationController<ept id=\"p1\">](#canimationmanagereventhandler__setanimationcontroller)</ept>","source":"[CAnimationManagerEventHandler::SetAnimationController](#canimationmanagereventhandler__setanimationcontroller)"},{"content":"Stores a pointer to animation controller to route events.","pos":[1901,1958]},{"pos":[1968,1975],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This event handler is created and passed to IUIAnimationManager::SetManagerEventHandler method, when you call CAnimationController::EnableAnimationManagerEvent.","pos":[1979,2139]},{"pos":[2148,2169],"content":"Inheritance Hierarchy","linkify":"Inheritance Hierarchy","nodes":[{"content":"Inheritance Hierarchy","pos":[0,21]}]},{"pos":[2290,2302],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[2306,2342],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> afxanimationcontroller.h","source":"**Header:** afxanimationcontroller.h"},{"pos":[2352,2489],"content":"<bpt id=\"p1\">&lt;a name=\"canimationmanagereventhandler__canimationmanagereventhandler\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CAnimationManagerEventHandler::CAnimationManagerEventHandler","linkify":"<a name=\"canimationmanagereventhandler__canimationmanagereventhandler\"></a>  CAnimationManagerEventHandler::CAnimationManagerEventHandler","source":"<a name=\"canimationmanagereventhandler__canimationmanagereventhandler\"></a>  CAnimationManagerEventHandler::CAnimationManagerEventHandler"},{"content":"Constructs a CAnimationManagerEventHandler object.","pos":[2583,2633]},{"pos":[2691,2798],"content":"<bpt id=\"p1\">&lt;a name=\"canimationmanagereventhandler__createinstance\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CAnimationManagerEventHandler::CreateInstance","linkify":"<a name=\"canimationmanagereventhandler__createinstance\"></a>  CAnimationManagerEventHandler::CreateInstance","source":"<a name=\"canimationmanagereventhandler__createinstance\"></a>  CAnimationManagerEventHandler::CreateInstance"},{"content":"Creates an instance of CAnimationManagerEventHandler object.","pos":[2892,2952]},{"pos":[3141,3151],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"A pointer to animation controller, which will receive events.","pos":[3181,3242]},{"content":"Output.","pos":[3276,3283]},{"content":"If the method succeeds it contains a pointer to COM object that will handle status updates to an animation manager.","pos":[3284,3399]},{"pos":[3409,3421],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"If the method succeeds, it returns S_OK.","pos":[3425,3465]},{"content":"Otherwise, it returns an HRESULT error code.","pos":[3466,3510]},{"pos":[3520,3643],"content":"<bpt id=\"p1\">&lt;a name=\"canimationmanagereventhandler__onmanagerstatuschanged\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CAnimationManagerEventHandler::OnManagerStatusChanged","linkify":"<a name=\"canimationmanagereventhandler__onmanagerstatuschanged\"></a>  CAnimationManagerEventHandler::OnManagerStatusChanged","source":"<a name=\"canimationmanagereventhandler__onmanagerstatuschanged\"></a>  CAnimationManagerEventHandler::OnManagerStatusChanged"},{"content":"Called when a status of animation manager has changed.","pos":[3737,3791]},{"pos":[3940,3950],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"New status.","pos":[3969,3980]},{"content":"Previous status.","pos":[4007,4023]},{"pos":[4033,4045],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Current implementation always returns S_OK;","pos":[4049,4092]},{"pos":[4102,4225],"content":"<bpt id=\"p1\">&lt;a name=\"canimationmanagereventhandler__setanimationcontroller\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CAnimationManagerEventHandler::SetAnimationController","linkify":"<a name=\"canimationmanagereventhandler__setanimationcontroller\"></a>  CAnimationManagerEventHandler::SetAnimationController","source":"<a name=\"canimationmanagereventhandler__setanimationcontroller\"></a>  CAnimationManagerEventHandler::SetAnimationController"},{"content":"Stores a pointer to animation controller to route events.","pos":[4319,4376]},{"pos":[4474,4484],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"A pointer to animation controller, which will receive events.","pos":[4514,4575]},{"pos":[4584,4592],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"pos":[4596,4641],"content":"<bpt id=\"p1\">[</bpt>Classes<ept id=\"p1\">](../../mfc/reference/mfc-classes.md)</ept>","source":"[Classes](../../mfc/reference/mfc-classes.md)"}],"content":"---\ntitle: \"CAnimationManagerEventHandler Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"afxanimationcontroller/CAnimationManagerEventHandler\"\n  - \"CAnimationManagerEventHandler\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"CAnimationManagerEventHandler class\"\nms.assetid: 6089ec07-e661-4805-b227-823b4652aade\ncaps.latest.revision: 18\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# CAnimationManagerEventHandler Class\nImplements a callback, which is called by the Animation API when a status of an animation manager is changed.  \n  \n## Syntax  \n  \n```  \nclass CAnimationManagerEventHandler : public CUIAnimationManagerEventHandlerBase<CAnimationManagerEventHandler>;  \n```  \n  \n## Members  \n  \n### Public Constructors  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CAnimationManagerEventHandler::CAnimationManagerEventHandler](#canimationmanagereventhandler__canimationmanagereventhandler)|Constructs a `CAnimationManagerEventHandler` object.|  \n  \n### Public Methods  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CAnimationManagerEventHandler::CreateInstance](#canimationmanagereventhandler__createinstance)|Creates an instance of `CAnimationManagerEventHandler` object.|  \n|[CAnimationManagerEventHandler::OnManagerStatusChanged](#canimationmanagereventhandler__onmanagerstatuschanged)|Called when a status of animation manager has changed. (Overrides `CUIAnimationManagerEventHandlerBase::OnManagerStatusChanged`.)|  \n|[CAnimationManagerEventHandler::SetAnimationController](#canimationmanagereventhandler__setanimationcontroller)|Stores a pointer to animation controller to route events.|  \n  \n## Remarks  \n This event handler is created and passed to IUIAnimationManager::SetManagerEventHandler method, when you call CAnimationController::EnableAnimationManagerEvent.  \n  \n## Inheritance Hierarchy  \n `CUIAnimationCallbackBase`  \n  \n `CUIAnimationManagerEventHandlerBase`  \n  \n `CAnimationManagerEventHandler`  \n  \n## Requirements  \n **Header:** afxanimationcontroller.h  \n  \n##  <a name=\"canimationmanagereventhandler__canimationmanagereventhandler\"></a>  CAnimationManagerEventHandler::CAnimationManagerEventHandler  \n [!INCLUDE[dev10_sp1required](../../mfc/reference/includes/dev10_sp1required_md.md)]  \n  \n Constructs a CAnimationManagerEventHandler object.  \n  \n```  \nCAnimationManagerEventHandler();\n```  \n  \n##  <a name=\"canimationmanagereventhandler__createinstance\"></a>  CAnimationManagerEventHandler::CreateInstance  \n [!INCLUDE[dev10_sp1required](../../mfc/reference/includes/dev10_sp1required_md.md)]  \n  \n Creates an instance of CAnimationManagerEventHandler object.  \n  \n```  \nstatic COM_DECLSPEC_NOTHROW HRESULT CreateInstance(\n    CAnimationController* pAnimationController,  \n    IUIAnimationManagerEventHandler** ppManagerEventHandler);\n```  \n  \n### Parameters  \n `pAnimationController`  \n A pointer to animation controller, which will receive events.  \n  \n `ppManagerEventHandler`  \n Output. If the method succeeds it contains a pointer to COM object that will handle status updates to an animation manager.  \n  \n### Return Value  \n If the method succeeds, it returns S_OK. Otherwise, it returns an HRESULT error code.  \n  \n##  <a name=\"canimationmanagereventhandler__onmanagerstatuschanged\"></a>  CAnimationManagerEventHandler::OnManagerStatusChanged  \n [!INCLUDE[dev10_sp1required](../../mfc/reference/includes/dev10_sp1required_md.md)]  \n  \n Called when a status of animation manager has changed.  \n  \n```  \nIFACEMETHOD(\n    OnManagerStatusChanged)(UI_ANIMATION_MANAGER_STATUS newStatus,UI_ANIMATION_MANAGER_STATUS previousStatus);\n```  \n  \n### Parameters  \n `newStatus`  \n New status.  \n  \n `previousStatus`  \n Previous status.  \n  \n### Return Value  \n Current implementation always returns S_OK;  \n  \n##  <a name=\"canimationmanagereventhandler__setanimationcontroller\"></a>  CAnimationManagerEventHandler::SetAnimationController  \n [!INCLUDE[dev10_sp1required](../../mfc/reference/includes/dev10_sp1required_md.md)]  \n  \n Stores a pointer to animation controller to route events.  \n  \n```  \nvoid SetAnimationController(CAnimationController* pAnimationController);\n```  \n  \n### Parameters  \n `pAnimationController`  \n A pointer to animation controller, which will receive events.  \n  \n## See Also  \n [Classes](../../mfc/reference/mfc-classes.md)\n"}