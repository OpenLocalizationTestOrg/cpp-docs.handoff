{"nodes":[{"pos":[12,51],"content":"Using ActiveX Controls | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Using ActiveX Controls | Microsoft Docs","pos":[0,39]}]},{"content":"Using ActiveX Controls","pos":[636,658]},{"content":"The topics in this section present an overview of using ActiveX controls.","pos":[659,732]},{"content":"An ActiveX control is a COM component that supports standard interfaces relating to persistence, connection points, and hosting.","pos":[739,867]},{"content":"These standard interfaces define a protocol by which a control can be hosted in a control container, exchange messages, and handle events.","pos":[868,1006]},{"content":"As COM servers, ActiveX controls have the following.","pos":[1013,1065]},{"content":"Term","pos":[1072,1076]},{"content":"Description","pos":[1077,1088]},{"content":"Properties","pos":[1126,1136]},{"content":"Controls have member variables to represent internal state and are implemented as <bpt id=\"p1\">**</bpt>Get<ept id=\"p1\">**</ept> and <ph id=\"ph1\">`Set`</ph> accessor functions.","pos":[1137,1256],"source":"Controls have member variables to represent internal state and are implemented as **Get** and `Set` accessor functions."},{"content":"A <bpt id=\"p1\">**</bpt>Get<ept id=\"p1\">**</ept> function is generated for each accessor method with a propget tag in the .idl file.","pos":[1257,1350],"source":" A **Get** function is generated for each accessor method with a propget tag in the .idl file."},{"content":"A <ph id=\"ph1\">`Set`</ph> function is generated for each accessor method with either a propput or propputref IDL tag.","pos":[1351,1450],"source":" A `Set` function is generated for each accessor method with either a propput or propputref IDL tag."},{"content":"Use <bpt id=\"p1\">[</bpt>wrapper classes<ept id=\"p1\">](../../data/ado-rdo/wrapper-classes.md)</ept> or the <bpt id=\"p2\">[</bpt>OLE/COM Object Viewer<ept id=\"p2\">](../../data/ado-rdo/using-the-ole-com-object-viewer.md)</ept> to determine how accessor functions are defined.","pos":[1463,1658],"source":" Use [wrapper classes](../../data/ado-rdo/wrapper-classes.md) or the [OLE/COM Object Viewer](../../data/ado-rdo/using-the-ole-com-object-viewer.md) to determine how accessor functions are defined."},{"content":"Methods","pos":[1663,1670]},{"content":"A control's behavior is defined by its public methods.","pos":[1671,1725]},{"content":"Wrapper classes give you access to a control's methods.","pos":[1726,1781]},{"content":"If you do not use wrapper classes (the default), you get access to a control's methods by obtaining a pointer to an interface.","pos":[1794,1920]},{"content":"An example of a public method is the <bpt id=\"p1\">**</bpt>Refresh<ept id=\"p1\">**</ept> method in the ADO data control, which updates the retrieved rowset.","pos":[1933,2049],"source":" An example of a public method is the **Refresh** method in the ADO data control, which updates the retrieved rowset."},{"content":"Events","pos":[2054,2060]},{"content":"A control can generate an event to notify the host that something happened.","pos":[2061,2136]},{"content":"An example is the <ph id=\"ph1\">`OnClick`</ph> event for the Button control.","pos":[2137,2194],"source":" An example is the `OnClick` event for the Button control."},{"content":"When the button gets clicked, the button generates an <ph id=\"ph1\">`OnClick`</ph> event.","pos":[2195,2265],"source":" When the button gets clicked, the button generates an `OnClick` event."},{"content":"If the control's host has a handler for that event, it executes.","pos":[2266,2330]},{"content":"Type Library","pos":[2335,2347]},{"content":"A type library tells a control container what properties, methods, and events are supported by a control.","pos":[2348,2453]},{"content":"Type libraries can exist either as separate files (with a .tlb extension) or internally within the control.","pos":[2454,2561]},{"content":"Type libraries also contain the control's coclass information.","pos":[2574,2636]},{"content":"A coclass is a COM class that is identified with a GUID.","pos":[2637,2693]},{"content":"A coclass contains one or more interfaces that are defined by the control.","pos":[2694,2768]},{"content":"To examine type libraries, use the <bpt id=\"p1\">[</bpt>OLE/COM Object Viewer<ept id=\"p1\">](../../data/ado-rdo/using-the-ole-com-object-viewer.md)</ept>.","pos":[2781,2895],"source":" To examine type libraries, use the [OLE/COM Object Viewer](../../data/ado-rdo/using-the-ole-com-object-viewer.md)."},{"content":"The following topics describe the use of an ActiveX control:","pos":[2903,2963]},{"content":"Inserting the Control into a Visual C++ Application","pos":[2974,3025]},{"content":"Wrapper Classes","pos":[3112,3127]},{"content":"Creating a Database Connection","pos":[3178,3208]},{"content":"Setting Control Properties at Design Time","pos":[3273,3314]},{"content":"Setting Event Handlers on ActiveX Controls","pos":[3391,3433]},{"content":"Modifying a Control's Run-Time Behavior","pos":[3511,3550]},{"content":"Redistributing Controls","pos":[3625,3648]},{"content":"See Also","pos":[3705,3713]},{"content":"Data-Bound Controls (ADO and RDO)","pos":[3718,3751]}],"content":"---\ntitle: \"Using ActiveX Controls | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"controls [C++], ActiveX\"\n  - \"ActiveX controls [C++], about ActiveX controls\"\nms.assetid: 33442173-205d-492f-82c8-9a8105358ec6\ncaps.latest.revision: 7\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Using ActiveX Controls\nThe topics in this section present an overview of using ActiveX controls.  \n  \n An ActiveX control is a COM component that supports standard interfaces relating to persistence, connection points, and hosting. These standard interfaces define a protocol by which a control can be hosted in a control container, exchange messages, and handle events.  \n  \n As COM servers, ActiveX controls have the following.  \n  \n|Term|Description|  \n|----------|-----------------|  \n|Properties|Controls have member variables to represent internal state and are implemented as **Get** and `Set` accessor functions. A **Get** function is generated for each accessor method with a propget tag in the .idl file. A `Set` function is generated for each accessor method with either a propput or propputref IDL tag.<br /><br /> Use [wrapper classes](../../data/ado-rdo/wrapper-classes.md) or the [OLE/COM Object Viewer](../../data/ado-rdo/using-the-ole-com-object-viewer.md) to determine how accessor functions are defined.|  \n|Methods|A control's behavior is defined by its public methods. Wrapper classes give you access to a control's methods.<br /><br /> If you do not use wrapper classes (the default), you get access to a control's methods by obtaining a pointer to an interface.<br /><br /> An example of a public method is the **Refresh** method in the ADO data control, which updates the retrieved rowset.|  \n|Events|A control can generate an event to notify the host that something happened. An example is the `OnClick` event for the Button control. When the button gets clicked, the button generates an `OnClick` event. If the control's host has a handler for that event, it executes.|  \n|Type Library|A type library tells a control container what properties, methods, and events are supported by a control. Type libraries can exist either as separate files (with a .tlb extension) or internally within the control.<br /><br /> Type libraries also contain the control's coclass information. A coclass is a COM class that is identified with a GUID. A coclass contains one or more interfaces that are defined by the control.<br /><br /> To examine type libraries, use the [OLE/COM Object Viewer](../../data/ado-rdo/using-the-ole-com-object-viewer.md).|  \n  \n The following topics describe the use of an ActiveX control:  \n  \n-   [Inserting the Control into a Visual C++ Application](../../data/ado-rdo/inserting-the-control-into-a-visual-cpp-application.md)  \n  \n-   [Wrapper Classes](../../data/ado-rdo/wrapper-classes.md)  \n  \n-   [Creating a Database Connection](../../data/ado-rdo/creating-database-connections.md)  \n  \n-   [Setting Control Properties at Design Time](../../data/ado-rdo/setting-control-properties-at-design-time.md)  \n  \n-   [Setting Event Handlers on ActiveX Controls](../../data/ado-rdo/setting-event-handlers-on-activex-controls.md)  \n  \n-   [Modifying a Control's Run-Time Behavior](../../data/ado-rdo/modifying-a-control-s-run-time-behavior.md)  \n  \n-   [Redistributing Controls](../../data/ado-rdo/redistributing-controls.md)  \n  \n## See Also  \n [Data-Bound Controls (ADO and RDO)](../../data/ado-rdo/data-bound-controls-ado-and-rdo.md)"}