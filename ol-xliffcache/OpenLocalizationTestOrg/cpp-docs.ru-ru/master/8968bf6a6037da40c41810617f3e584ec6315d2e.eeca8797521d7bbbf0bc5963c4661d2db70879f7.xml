{"nodes":[{"pos":[12,52],"content":"hash_map::end (STL-CLR) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"hash_map::end (STL-CLR) | Microsoft Docs","pos":[0,40]}]},{"content":"hash_map::end (STL/CLR)","pos":[626,649]},{"content":"Designates the end of the controlled sequence.","pos":[650,696]},{"content":"Syntax","pos":[705,711]},{"content":"Remarks","pos":[753,760]},{"content":"The member function returns a bidirectional iterator that points just beyond the end of the controlled sequence.","pos":[764,876]},{"content":"You use it to obtain an iterator that designates the end of the controlled sequence; its status doesn not change if the length of the controlled sequence changes.","pos":[877,1039]},{"content":"Example","pos":[1048,1055]},{"content":"Requirements","pos":[2047,2059]},{"pos":[2063,2093],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> <ph id=\"ph1\">\\&lt;</ph>cliext/hash_map&gt;","source":"**Header:** \\<cliext/hash_map>"},{"pos":[2100,2121],"content":"<bpt id=\"p1\">**</bpt>Namespace:<ept id=\"p1\">**</ept> cliext","source":"**Namespace:** cliext"},{"content":"See Also","pos":[2130,2138]},{"content":"hash_map (STL/CLR)","pos":[2143,2161]},{"content":"hash_map::begin (STL/CLR)","pos":[2199,2224]}],"content":"---\ntitle: \"hash_map::end (STL-CLR) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"cliext::hash_map::end\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"end member [STL/CLR]\"\nms.assetid: bda12a48-cc2b-426f-a4e8-992c88f61736\ncaps.latest.revision: 16\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# hash_map::end (STL/CLR)\nDesignates the end of the controlled sequence.  \n  \n## Syntax  \n  \n```  \niterator end();  \n```  \n  \n## Remarks  \n The member function returns a bidirectional iterator that points just beyond the end of the controlled sequence. You use it to obtain an iterator that designates the end of the controlled sequence; its status doesn not change if the length of the controlled sequence changes.  \n  \n## Example  \n  \n```  \n// cliext_hash_map_end.cpp   \n// compile with: /clr   \n#include <cliext/hash_map>   \n  \ntypedef cliext::hash_map<wchar_t, int> Myhash_map;   \nint main()   \n    {   \n    Myhash_map c1;   \n    c1.insert(Myhash_map::make_value(L'a', 1));   \n    c1.insert(Myhash_map::make_value(L'b', 2));   \n    c1.insert(Myhash_map::make_value(L'c', 3));   \n  \n// display contents \" [a 1] [b 2] [c 3]\"   \n    for each (Myhash_map::value_type elem in c1)   \n        System::Console::Write(\" [{0} {1}]\", elem->first, elem->second);   \n    System::Console::WriteLine();   \n  \n// inspect last two items   \n    Myhash_map::iterator it = c1.end();   \n    --it;   \n    --it;   \n    System::Console::WriteLine(\"*-- --end() = [{0} {1}]\",   \n        it->first, it->second);   \n    ++it;   \n    System::Console::WriteLine(\"*--end() = [{0} {1}]\",   \n        it->first, it->second);   \n    return (0);   \n    }  \n  \n```  \n  \n```Output  \n [a 1] [b 2] [c 3]  \n*-- --end() = [b 2]  \n*--end() = [c 3]  \n```  \n  \n## Requirements  \n **Header:** \\<cliext/hash_map>  \n  \n **Namespace:** cliext  \n  \n## See Also  \n [hash_map (STL/CLR)](../dotnet/hash-map-stl-clr.md)   \n [hash_map::begin (STL/CLR)](../dotnet/hash-map-begin-stl-clr.md)"}