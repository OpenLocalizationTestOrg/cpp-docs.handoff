{"nodes":[{"pos":[12,67],"content":"IDBSchemaRowsetImpl::CheckRestrictions | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"IDBSchemaRowsetImpl::CheckRestrictions | Microsoft Docs","pos":[0,55]}]},{"content":"IDBSchemaRowsetImpl::CheckRestrictions","pos":[753,791]},{"content":"Checks the validity of restrictions against a schema rowset.","pos":[792,852]},{"content":"Syntax","pos":[861,867]},{"content":"Parameters","pos":[1024,1034]},{"content":"[in] A reference to the requested schema rowset GUID (for example, <ph id=\"ph1\">`DBSCHEMA_TABLES`</ph>).","pos":[1055,1141],"source":" [in] A reference to the requested schema rowset GUID (for example, `DBSCHEMA_TABLES`)."},{"content":"[in] The number of restrictions that the consumer passed in for the schema rowset.","pos":[1167,1249]},{"content":"[in] An array of length <bpt id=\"p1\">*</bpt>cRestrictions<ept id=\"p1\">*</ept> of restriction values to be set.","pos":[1276,1348],"source":" [in] An array of length *cRestrictions* of restriction values to be set."},{"content":"For more information, see the description of the <ph id=\"ph1\">`rgRestrictions`</ph> parameter in <bpt id=\"p1\">[</bpt>SetRestrictions<ept id=\"p1\">](../../data/oledb/idbschemarowsetimpl-setrestrictions.md)</ept>.","pos":[1349,1503],"source":" For more information, see the description of the `rgRestrictions` parameter in [SetRestrictions](../../data/oledb/idbschemarowsetimpl-setrestrictions.md)."},{"content":"Remarks","pos":[1512,1519]},{"content":"Use <ph id=\"ph1\">`CheckRestrictions`</ph> to check the validity of restrictions against a schema rowset.","pos":[1523,1609],"source":"Use `CheckRestrictions` to check the validity of restrictions against a schema rowset."},{"content":"It checks restrictions for <ph id=\"ph1\">`DBSCHEMA_TABLES`</ph>, <bpt id=\"p1\">**</bpt>DBSCHEMA_COLUMNS<ept id=\"p1\">**</ept>, and <bpt id=\"p2\">**</bpt>DBSCHEMA_PROVIDER_TYPES<ept id=\"p2\">**</ept> schema rowsets.","pos":[1610,1725],"source":" It checks restrictions for `DBSCHEMA_TABLES`, **DBSCHEMA_COLUMNS**, and **DBSCHEMA_PROVIDER_TYPES** schema rowsets."},{"content":"Call it to determine if a consumer's call to <bpt id=\"p1\">**</bpt>IDBSchemaRowset::GetRowset<ept id=\"p1\">**</ept> is correct.","pos":[1726,1813],"source":" Call it to determine if a consumer's call to **IDBSchemaRowset::GetRowset** is correct."},{"content":"If you want to support schema rowsets other than those listed above, you should create your own function to carry out this task.","pos":[1814,1942]},{"content":"determines if the consumer is calling <bpt id=\"p1\">[</bpt>GetRowset<ept id=\"p1\">](../../data/oledb/idbschemarowsetimpl-getrowset.md)</ept> with the correct restriction and the correct restriction type (for example, a <ph id=\"ph1\">`VT_BSTR`</ph> for a string) that the provider supports.","pos":[1969,2199],"source":" determines if the consumer is calling [GetRowset](../../data/oledb/idbschemarowsetimpl-getrowset.md) with the correct restriction and the correct restriction type (for example, a `VT_BSTR` for a string) that the provider supports."},{"content":"It also determines if the correct number of restrictions are supported.","pos":[2200,2271]},{"content":"By default, <ph id=\"ph1\">`CheckRestrictions`</ph> will ask the provider, through the <bpt id=\"p1\">[</bpt>SetRestrictions<ept id=\"p1\">](../../data/oledb/idbschemarowsetimpl-setrestrictions.md)</ept> call, which restrictions it supports on a given rowset.","pos":[2272,2469],"source":" By default, `CheckRestrictions` will ask the provider, through the [SetRestrictions](../../data/oledb/idbschemarowsetimpl-setrestrictions.md) call, which restrictions it supports on a given rowset."},{"content":"It then compares the restrictions from the consumer against those supported by the provider and either succeeds or fails.","pos":[2470,2591]},{"pos":[2598,2814],"content":"For more information on schema rowsets, see <bpt id=\"p1\">[</bpt>IDBSchemaRowset<ept id=\"p1\">](https://msdn.microsoft.com/en-us/library/ms713686.aspx)</ept> in the <bpt id=\"p2\">*</bpt>OLE DB Programmer's Reference<ept id=\"p2\">*</ept> in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"For more information on schema rowsets, see [IDBSchemaRowset](https://msdn.microsoft.com/en-us/library/ms713686.aspx) in the *OLE DB Programmer's Reference* in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"content":"Requirements","pos":[2823,2835]},{"pos":[2839,2858],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> atldb.h","source":"**Header:** atldb.h"},{"content":"See Also","pos":[2867,2875]},{"content":"IDBSchemaRowsetImpl Class","pos":[2880,2905]},{"content":"IDBSchemaRowsetImpl Class Members","pos":[2959,2992]},{"content":"Schema Rowset Classes and Typedef Classes","pos":[3069,3110]}],"content":"---\ntitle: \"IDBSchemaRowsetImpl::CheckRestrictions | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"CheckRestrictions\"\n  - \"IDBSchemaRowsetImpl::CheckRestrictions\"\n  - \"IDBSchemaRowsetImpl.CheckRestrictions\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"CheckRestrictions method\"\nms.assetid: 3c9d77d2-0e4b-48fa-80db-d735da19f1cf\ncaps.latest.revision: 9\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"ru-ru\"\n  - \"zh-cn\"\n  - \"zh-tw\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"tr-tr\"\n---\n# IDBSchemaRowsetImpl::CheckRestrictions\nChecks the validity of restrictions against a schema rowset.  \n  \n## Syntax  \n  \n```  \n  \n      HRESULT CheckRestrictions(  \n   REFGUID rguidSchema,  \n   ULONG cRestrictions,  \n   const VARIANT rgRestrictions[]  \n);  \n```  \n  \n#### Parameters  \n `rguidSchema`  \n [in] A reference to the requested schema rowset GUID (for example, `DBSCHEMA_TABLES`).  \n  \n `cRestrictions`  \n [in] The number of restrictions that the consumer passed in for the schema rowset.  \n  \n `rgRestrictions`  \n [in] An array of length *cRestrictions* of restriction values to be set. For more information, see the description of the `rgRestrictions` parameter in [SetRestrictions](../../data/oledb/idbschemarowsetimpl-setrestrictions.md).  \n  \n## Remarks  \n Use `CheckRestrictions` to check the validity of restrictions against a schema rowset. It checks restrictions for `DBSCHEMA_TABLES`, **DBSCHEMA_COLUMNS**, and **DBSCHEMA_PROVIDER_TYPES** schema rowsets. Call it to determine if a consumer's call to **IDBSchemaRowset::GetRowset** is correct. If you want to support schema rowsets other than those listed above, you should create your own function to carry out this task.  \n  \n `CheckRestrictions` determines if the consumer is calling [GetRowset](../../data/oledb/idbschemarowsetimpl-getrowset.md) with the correct restriction and the correct restriction type (for example, a `VT_BSTR` for a string) that the provider supports. It also determines if the correct number of restrictions are supported. By default, `CheckRestrictions` will ask the provider, through the [SetRestrictions](../../data/oledb/idbschemarowsetimpl-setrestrictions.md) call, which restrictions it supports on a given rowset. It then compares the restrictions from the consumer against those supported by the provider and either succeeds or fails.  \n  \n For more information on schema rowsets, see [IDBSchemaRowset](https://msdn.microsoft.com/en-us/library/ms713686.aspx) in the *OLE DB Programmer's Reference* in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n## Requirements  \n **Header:** atldb.h  \n  \n## See Also  \n [IDBSchemaRowsetImpl Class](../../data/oledb/idbschemarowsetimpl-class.md)   \n [IDBSchemaRowsetImpl Class Members](http://msdn.microsoft.com/en-us/e74f6f82-541c-42e7-b4c6-e2d4656a0649)   \n [Schema Rowset Classes and Typedef Classes](../../data/oledb/schema-rowset-classes-and-typedef-classes.md)"}