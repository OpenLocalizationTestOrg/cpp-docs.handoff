{"nodes":[{"pos":[12,80],"content":"How to: Convert System::String to wchar_t* or char* | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"How to: Convert System::String to wchar_t* or char* | Microsoft Docs","pos":[0,68]}]},{"pos":[794,845],"content":"How to: Convert System::String to wchar_t<bpt id=\"p1\">*</bpt> or char<ept id=\"p1\">*</ept>","source":"How to: Convert System::String to wchar_t* or char*"},{"content":"You can use <ph id=\"ph1\">`PtrToStringChars`</ph> in Vcclr.h to convert &lt;xref:System.String&gt; to native <ph id=\"ph2\">`wchar_t *`</ph> or <ph id=\"ph3\">`char *`</ph>.","pos":[846,954],"source":"You can use `PtrToStringChars` in Vcclr.h to convert <xref:System.String> to native `wchar_t *` or `char *`."},{"content":"This always returns a wide Unicode string pointer because CLR strings are internally Unicode.","pos":[956,1049]},{"content":"You can then convert from wide as shown in the following example.","pos":[1050,1115]},{"content":"Example","pos":[1124,1131]},{"content":"See Also","pos":[2127,2135]},{"content":"Using C++ Interop (Implicit PInvoke)","pos":[2140,2176]}],"content":"---\ntitle: \"How to: Convert System::String to wchar_t* or char* | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"get-started-article\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"System::String, converting to char or wchar_t\"\n  - \"PtrToStringChars method\"\n  - \"System::String\"\n  - \"wchart type, converting System::String\"\n  - \"char data type, converting System::String to\"\nms.assetid: 385da01b-5649-4543-8076-e3e251243ff0\ncaps.latest.revision: 11\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# How to: Convert System::String to wchar_t* or char*\nYou can use `PtrToStringChars` in Vcclr.h to convert <xref:System.String> to native `wchar_t *` or `char *`.  This always returns a wide Unicode string pointer because CLR strings are internally Unicode. You can then convert from wide as shown in the following example.  \n  \n## Example  \n  \n```  \n// convert_string_to_wchar.cpp  \n// compile with: /clr  \n#include < stdio.h >  \n#include < stdlib.h >  \n#include < vcclr.h >  \n  \nusing namespace System;  \n  \nint main() {  \n   String ^str = \"Hello\";  \n  \n   // Pin memory so GC can't move it while native function is called  \n   pin_ptr<const wchar_t> wch = PtrToStringChars(str);  \n   printf_s(\"%S\\n\", wch);  \n  \n   // Conversion to char* :  \n   // Can just convert wchar_t* to char* using one of the   \n   // conversion functions such as:   \n   // WideCharToMultiByte()  \n   // wcstombs_s()  \n   // ... etc  \n   size_t convertedChars = 0;  \n   size_t  sizeInBytes = ((str->Length + 1) * 2);  \n   errno_t err = 0;  \n   char    *ch = (char *)malloc(sizeInBytes);  \n  \n   err = wcstombs_s(&convertedChars,   \n                    ch, sizeInBytes,  \n                    wch, sizeInBytes);  \n   if (err != 0)  \n      printf_s(\"wcstombs_s  failed!\\n\");  \n  \n    printf_s(\"%s\\n\", ch);  \n}  \n```  \n  \n```Output  \nHello  \nHello  \n```  \n  \n## See Also  \n [Using C++ Interop (Implicit PInvoke)](../dotnet/using-cpp-interop-implicit-pinvoke.md)"}