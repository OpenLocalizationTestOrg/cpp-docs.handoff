<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ru-ru">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-787e512" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cbfb7ec31c66c1f008bb475b228cb3ecc20678db</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\c-runtime-library\byte-and-wide-streams.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7f9db85b0bf5f6aac72941a5f22c2b2a6c85a7fe</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fdd11168c9bae8b55f5782c92628d467b41af969</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Byte and Wide Streams | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Byte and Wide Streams</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>A byte stream treats a file as a sequence of bytes.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Within the program, the stream is the identical sequence of bytes.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>By contrast, a wide stream treats a file as a sequence of generalized multibyte characters, which can have a broad range of encoding rules.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>(Text and binary files are still read and written as previously described.) Within the program, the stream looks like the corresponding sequence of wide characters.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Conversions between the two representations occur within the Standard C Library.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The conversion rules can, in principle, be altered by a call to <bpt id="p1">[</bpt>setlocale<ept id="p1">](../c-runtime-library/reference/setlocale-wsetlocale.md)</ept> that alters the category <ph id="ph1">`LC_CTYPE`</ph>.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Each wide stream determines its conversion rules at the time it becomes wide oriented, and retains these rules even if the category <ph id="ph1">`LC_CTYPE`</ph> subsequently changes.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Positioning within a wide stream suffers the same limitations as for text steams.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Moreover, the file-position indicator may well have to deal with a state-dependent encoding.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Typically, it includes both a byte offset within the stream and an object of type <ph id="ph1">`mbstate_t`</ph>.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Thus, the only reliable way to obtain a file position within a wide stream is by calling <bpt id="p1">[</bpt>fgetpos<ept id="p1">](../c-runtime-library/reference/fgetpos.md)</ept>, and the only reliable way to restore a position obtained this way is by calling <bpt id="p2">[</bpt>fsetpos<ept id="p2">](../c-runtime-library/reference/fsetpos.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Files and Streams</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>setlocale, _wsetlocale</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>