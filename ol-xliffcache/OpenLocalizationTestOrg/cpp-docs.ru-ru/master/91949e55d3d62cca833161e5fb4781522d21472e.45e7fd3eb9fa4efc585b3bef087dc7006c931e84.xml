{"nodes":[{"pos":[12,71],"content":"Loading All Imports for a Delay-Loaded DLL | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Loading All Imports for a Delay-Loaded DLL | Microsoft Docs","pos":[0,59]}]},{"content":"Loading All Imports for a Delay-Loaded DLL","pos":[618,660]},{"pos":[661,895],"content":"The <bpt id=\"p1\">**</bpt>__HrLoadAllImportsForDll<ept id=\"p1\">**</ept> function, which is defined in delayhlp.cpp, tells the linker to load all imports from a DLL that was specified with the <bpt id=\"p2\">[</bpt>/delayload<ept id=\"p2\">](../../build/reference/delayload-delay-load-import.md)</ept> linker option.","source":"The **__HrLoadAllImportsForDll** function, which is defined in delayhlp.cpp, tells the linker to load all imports from a DLL that was specified with the [/delayload](../../build/reference/delayload-delay-load-import.md) linker option."},{"content":"Loading all imports allows you to put error handling in one place in your code and not have to use exception handling around the actual calls to the imports.","pos":[902,1059]},{"content":"It also avoids a situation where your application fails partially through a process as a result of the helper code failing to load an import.","pos":[1060,1201]},{"pos":[1208,1420],"content":"Calling <bpt id=\"p1\">**</bpt>__HrLoadAllImportsForDll<ept id=\"p1\">**</ept> does not change the behavior of hooks and error handling; see <bpt id=\"p2\">[</bpt>Error Handling and Notification<ept id=\"p2\">](../../build/reference/error-handling-and-notification.md)</ept> for more information.","source":"Calling **__HrLoadAllImportsForDll** does not change the behavior of hooks and error handling; see [Error Handling and Notification](../../build/reference/error-handling-and-notification.md) for more information."},{"pos":[1427,1554],"content":"The DLL name passed to <bpt id=\"p1\">**</bpt>__HrLoadAllImportsForDll<ept id=\"p1\">**</ept> is compared to the name stored inside the DLL itself and is case sensitive.","source":"The DLL name passed to **__HrLoadAllImportsForDll** is compared to the name stored inside the DLL itself and is case sensitive."},{"pos":[1561,1630],"content":"The following example shows how to call <bpt id=\"p1\">**</bpt>__HrLoadAllImportsForDll<ept id=\"p1\">**</ept>:","source":"The following example shows how to call **__HrLoadAllImportsForDll**:"},{"content":"See Also","pos":[1778,1786]},{"content":"Linker Support for Delay-Loaded DLLs","pos":[1791,1827]}],"content":"---\ntitle: \"Loading All Imports for a Delay-Loaded DLL | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"__HrLoadAllImportsForDll linker option\"\nms.assetid: 975fcd97-1a56-4a16-9698-e1a249d2d592\ncaps.latest.revision: 8\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Loading All Imports for a Delay-Loaded DLL\nThe **__HrLoadAllImportsForDll** function, which is defined in delayhlp.cpp, tells the linker to load all imports from a DLL that was specified with the [/delayload](../../build/reference/delayload-delay-load-import.md) linker option.  \n  \n Loading all imports allows you to put error handling in one place in your code and not have to use exception handling around the actual calls to the imports. It also avoids a situation where your application fails partially through a process as a result of the helper code failing to load an import.  \n  \n Calling **__HrLoadAllImportsForDll** does not change the behavior of hooks and error handling; see [Error Handling and Notification](../../build/reference/error-handling-and-notification.md) for more information.  \n  \n The DLL name passed to **__HrLoadAllImportsForDll** is compared to the name stored inside the DLL itself and is case sensitive.  \n  \n The following example shows how to call **__HrLoadAllImportsForDll**:  \n  \n```  \nif (FAILED(__HrLoadAllImportsForDll(\"delay1.dll\"))) {  \n   printf ( \"failed on snap load, exiting\\n\" );  \n   exit(2);  \n}  \n```  \n  \n## See Also  \n [Linker Support for Delay-Loaded DLLs](../../build/reference/linker-support-for-delay-loaded-dlls.md)"}