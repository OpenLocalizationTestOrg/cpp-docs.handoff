{"nodes":[{"pos":[12,53],"content":"&lt;see&gt; (Visual C++) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"see<ph id=\"ph1\">&amp;gt;</ph> (Visual C++) | Microsoft Docs","pos":[4,41],"source":"see&gt; (Visual C++) | Microsoft Docs"}]},{"content":"see<ph id=\"ph1\">&amp;gt;</ph> (Visual C++)","pos":[642,662],"source":"see&gt; (Visual C++)"},{"content":"The <ph id=\"ph1\">\\&lt;</ph>see&gt; tag lets you specify a link from within text.","pos":[663,719],"source":"The \\<see> tag lets you specify a link from within text."},{"content":"Use <bpt id=\"p1\">[</bpt><ph id=\"ph1\">\\&lt;</ph>seealso&gt;<ept id=\"p1\">](../ide/seealso-visual-cpp.md)</ept> to indicate text that you might want to appear in a See Also section.","pos":[720,836],"source":" Use [\\<seealso>](../ide/seealso-visual-cpp.md) to indicate text that you might want to appear in a See Also section."},{"content":"Syntax","pos":[845,851]},{"content":"Parameters","pos":[900,910]},{"content":"A reference to a member or field that is available to be called from the current compilation environment.","pos":[926,1031]},{"content":"Enclose the name in single or double quotation marks.","pos":[1033,1086]},{"content":"The compiler checks that the given code element exists and resolves <ph id=\"ph1\">`member`</ph> to the element name in the output XML.","pos":[1093,1208],"source":"The compiler checks that the given code element exists and resolves `member` to the element name in the output XML."},{"content":"The compiler issues a warning if it does not find <ph id=\"ph1\">`member`</ph>.","pos":[1210,1269],"source":"  The compiler issues a warning if it does not find `member`."},{"content":"Remarks","pos":[1278,1285]},{"pos":[1289,1417],"content":"Compile with <bpt id=\"p1\">[</bpt>/doc<ept id=\"p1\">](../build/reference/doc-process-documentation-comments-c-cpp.md)</ept> to process documentation comments to a file.","source":"Compile with [/doc](../build/reference/doc-process-documentation-comments-c-cpp.md) to process documentation comments to a file."},{"pos":[1424,1502],"content":"See <bpt id=\"p1\">[</bpt><ph id=\"ph1\">\\&lt;</ph>summary&gt;<ept id=\"p1\">](../ide/summary-visual-cpp.md)</ept> for an example of using <ph id=\"ph2\">\\&lt;</ph>see&gt;.","source":"See [\\<summary>](../ide/summary-visual-cpp.md) for an example of using \\<see>."},{"content":"The Visual C++ compiler will attempt to resolve cref references in one pass through the documentation comments.","pos":[1509,1620]},{"content":"Therefore, if using the C++ lookup rules, a symbol is not found by the compiler the reference will be marked as unresolved.","pos":[1622,1745]},{"content":"See <bpt id=\"p1\">[</bpt><ph id=\"ph1\">\\&lt;</ph>seealso&gt;<ept id=\"p1\">](../ide/seealso-visual-cpp.md)</ept> for more information.","pos":[1746,1814],"source":" See [\\<seealso>](../ide/seealso-visual-cpp.md) for more information."},{"content":"Example","pos":[1823,1830]},{"content":"The following sample shows how you can make cref reference to a generic type, such that, the compiler will resolve the reference.","pos":[1834,1963]},{"content":"See Also","pos":[2610,2618]},{"content":"XML Documentation","pos":[2623,2640]}],"content":"---\ntitle: \"&lt;see&gt; (Visual C++) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"<see>\"\n  - \"see\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"<see> C++ XML tag\"\n  - \"see C++ XML tag\"\nms.assetid: 20ef66f4-b278-45cf-8613-63919edf5720\ncaps.latest.revision: 15\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# &lt;see&gt; (Visual C++)\nThe \\<see> tag lets you specify a link from within text. Use [\\<seealso>](../ide/seealso-visual-cpp.md) to indicate text that you might want to appear in a See Also section.  \n  \n## Syntax  \n  \n```  \n<see cref=\"member\"/>  \n```  \n  \n#### Parameters  \n `member`  \n A reference to a member or field that is available to be called from the current compilation environment.  Enclose the name in single or double quotation marks.  \n  \n The compiler checks that the given code element exists and resolves `member` to the element name in the output XML.  The compiler issues a warning if it does not find `member`.  \n  \n## Remarks  \n Compile with [/doc](../build/reference/doc-process-documentation-comments-c-cpp.md) to process documentation comments to a file.  \n  \n See [\\<summary>](../ide/summary-visual-cpp.md) for an example of using \\<see>.  \n  \n The Visual C++ compiler will attempt to resolve cref references in one pass through the documentation comments.  Therefore, if using the C++ lookup rules, a symbol is not found by the compiler the reference will be marked as unresolved. See [\\<seealso>](../ide/seealso-visual-cpp.md) for more information.  \n  \n## Example  \n The following sample shows how you can make cref reference to a generic type, such that, the compiler will resolve the reference.  \n  \n```  \n// xml_see_cref_example.cpp  \n// compile with: /LD /clr /doc  \n// the following cref shows how to specify the reference, such that,  \n// the compiler will resolve the reference  \n/// <see cref=\"C{T}\">  \n/// </see>  \nref class A {};  \n  \n// the following cref shows another way to specify the reference,   \n// such that, the compiler will resolve the reference  \n/// <see cref=\"C < T >\"/>  \n  \n// the following cref shows how to hard-code the reference  \n/// <see cref=\"T:C`1\">  \n/// </see>  \nref class B {};  \n  \n/// <see cref=\"A\">  \n/// </see>  \n/// <typeparam name=\"T\"></typeparam>  \ngeneric<class T>  \nref class C {};  \n```  \n  \n## See Also  \n [XML Documentation](../ide/xml-documentation-visual-cpp.md)"}