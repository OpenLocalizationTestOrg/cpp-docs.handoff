{"nodes":[{"pos":[12,90],"content":"Exporting Functions from a DLL by Ordinal Rather Than by Name | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Exporting Functions from a DLL by Ordinal Rather Than by Name | Microsoft Docs","pos":[0,78]}]},{"content":"Exporting Functions from a DLL by Ordinal Rather Than by Name","pos":[761,822]},{"content":"The simplest way to export functions from your DLL is to export them by name.","pos":[823,900]},{"content":"This is what happens when you use <bpt id=\"p1\">**</bpt>__declspec(dllexport)<ept id=\"p1\">**</ept>, for example.","pos":[901,974],"source":" This is what happens when you use **__declspec(dllexport)**, for example."},{"content":"But you can instead export functions by ordinal.","pos":[975,1023]},{"content":"With this technique, you must use a .def file instead of <bpt id=\"p1\">**</bpt>__declspec(dllexport)<ept id=\"p1\">**</ept>.","pos":[1024,1107],"source":" With this technique, you must use a .def file instead of **__declspec(dllexport)**."},{"content":"To specify a function's ordinal value, append its ordinal to the function name in the .def file.","pos":[1108,1204]},{"content":"For information about specifying ordinals, see <bpt id=\"p1\">[</bpt>Exporting from a DLL Using .def Files<ept id=\"p1\">](../build/exporting-from-a-dll-using-def-files.md)</ept>.","pos":[1205,1342],"source":" For information about specifying ordinals, see [Exporting from a DLL Using .def Files](../build/exporting-from-a-dll-using-def-files.md)."},{"pos":[1350,1646],"content":"[!TIP]\n If you want to optimize your DLL's file size, use the **NONAME** attribute on each exported function. With the **NONAME** attribute, the ordinals are stored in the DLL's export table rather than the function names. This can be a considerable savings if you are exporting many functions.","leadings":["","> "],"nodes":[{"content":" If you want to optimize your DLL's file size, use the **NONAME** attribute on each exported function. With the **NONAME** attribute, the ordinals are stored in the DLL's export table rather than the function names. This can be a considerable savings if you are exporting many functions.","pos":[7,294],"nodes":[{"content":"If you want to optimize your DLL's file size, use the <bpt id=\"p1\">**</bpt>NONAME<ept id=\"p1\">**</ept> attribute on each exported function.","pos":[1,102],"source":" If you want to optimize your DLL's file size, use the **NONAME** attribute on each exported function."},{"content":"With the <bpt id=\"p1\">**</bpt>NONAME<ept id=\"p1\">**</ept> attribute, the ordinals are stored in the DLL's export table rather than the function names.","pos":[103,215],"source":" With the **NONAME** attribute, the ordinals are stored in the DLL's export table rather than the function names."},{"content":"This can be a considerable savings if you are exporting many functions.","pos":[216,287]}]}]},{"content":"What do you want to do?","pos":[1655,1678]},{"content":"Use a .def file so I can export by ordinal","pos":[1689,1731]},{"content":"Use __declspec(dllexport)","pos":[1793,1818]},{"content":"See Also","pos":[1887,1895]},{"content":"Exporting from a DLL","pos":[1900,1920]}],"content":"---\ntitle: \"Exporting Functions from a DLL by Ordinal Rather Than by Name | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"NONAME\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"exporting functions [C++], ordinal values\"\n  - \"ordinal exports [C++]\"\n  - \"exporting DLLs [C++], ordinal values\"\n  - \"NONAME attribute\"\nms.assetid: 679719fd-d965-4df3-9f7a-7d86ad831702\ncaps.latest.revision: 7\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Exporting Functions from a DLL by Ordinal Rather Than by Name\nThe simplest way to export functions from your DLL is to export them by name. This is what happens when you use **__declspec(dllexport)**, for example. But you can instead export functions by ordinal. With this technique, you must use a .def file instead of **__declspec(dllexport)**. To specify a function's ordinal value, append its ordinal to the function name in the .def file. For information about specifying ordinals, see [Exporting from a DLL Using .def Files](../build/exporting-from-a-dll-using-def-files.md).  \n  \n> [!TIP]\n>  If you want to optimize your DLL's file size, use the **NONAME** attribute on each exported function. With the **NONAME** attribute, the ordinals are stored in the DLL's export table rather than the function names. This can be a considerable savings if you are exporting many functions.  \n  \n## What do you want to do?  \n  \n-   [Use a .def file so I can export by ordinal](../build/exporting-from-a-dll-using-def-files.md)  \n  \n-   [Use __declspec(dllexport)](../build/exporting-from-a-dll-using-declspec-dllexport.md)  \n  \n## See Also  \n [Exporting from a DLL](../build/exporting-from-a-dll.md)"}