{"nodes":[{"pos":[12,50],"content":"numpunct_byname Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"numpunct_byname Class | Microsoft Docs","pos":[0,38]}]},{"content":"numpunct_byname Class","pos":[705,726]},{"pos":[727,904],"content":"The derived template class describes an object that can serve as a <ph id=\"ph1\">`numpunct`</ph> facet of a given locale enabling the formatting and punctuation of numeric and Boolean expressions.","source":"The derived template class describes an object that can serve as a `numpunct` facet of a given locale enabling the formatting and punctuation of numeric and Boolean expressions."},{"content":"Syntax","pos":[913,919]},{"content":"Remarks","pos":[1233,1240]},{"content":"Its behavior is determined by the <bpt id=\"p1\">[</bpt>named<ept id=\"p1\">](../standard-library/locale-class.md#locale__name)</ept> locale <ph id=\"ph1\">`_Locname`</ph>.","pos":[1244,1354],"source":"Its behavior is determined by the [named](../standard-library/locale-class.md#locale__name) locale `_Locname`."},{"content":"The constructor initializes its base object with <bpt id=\"p1\">[</bpt>numpunct<ept id=\"p1\">](../standard-library/numpunct-class.md#numpunct__numpunct)</ept><ph id=\"ph1\">\\&lt;</ph>CharType&gt;( <ph id=\"ph2\">`_Refs`</ph>).","pos":[1355,1494],"source":" The constructor initializes its base object with [numpunct](../standard-library/numpunct-class.md#numpunct__numpunct)\\<CharType>( `_Refs`)."},{"content":"Requirements","pos":[1503,1515]},{"pos":[1519,1540],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> <ph id=\"ph1\">\\&lt;</ph>locale&gt;","source":"**Header:** \\<locale>"},{"pos":[1547,1565],"content":"<bpt id=\"p1\">**</bpt>Namespace:<ept id=\"p1\">**</ept> std","source":"**Namespace:** std"},{"content":"See Also","pos":[1574,1582]},{"content":"Thread Safety in the C++ Standard Library","pos":[1587,1628]}],"content":"---\ntitle: \"numpunct_byname Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"std.numpunct_byname\"\n  - \"numpunct_byname\"\n  - \"xlocnum/std::numpunct_byname\"\n  - \"std::numpunct_byname\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"numpunct_byname class\"\nms.assetid: 18412924-e085-4771-b5e9-7a200cbdd7c0\ncaps.latest.revision: 24\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# numpunct_byname Class\nThe derived template class describes an object that can serve as a `numpunct` facet of a given locale enabling the formatting and punctuation of numeric and Boolean expressions.  \n  \n## Syntax  \n  \n```\ntemplate <class CharType>\nclass numpunct_byname : public numpunct<Elem> {\npublic:\n    explicit numpunct_byname(\n    const char* _Locname,\n    size_t _Refs = 0);\n\n    explicit numpunct_byname(\n    const string& _Locname,\n    size_t _Refs = 0);\n\nprotected:\n    virtual ~numpunct_byname();\n\n };\n```  \n  \n## Remarks  \n Its behavior is determined by the [named](../standard-library/locale-class.md#locale__name) locale `_Locname`. The constructor initializes its base object with [numpunct](../standard-library/numpunct-class.md#numpunct__numpunct)\\<CharType>( `_Refs`).  \n  \n## Requirements  \n **Header:** \\<locale>  \n  \n **Namespace:** std  \n  \n## See Also  \n [Thread Safety in the C++ Standard Library](../standard-library/thread-safety-in-the-cpp-standard-library.md)\n\n\n\n"}