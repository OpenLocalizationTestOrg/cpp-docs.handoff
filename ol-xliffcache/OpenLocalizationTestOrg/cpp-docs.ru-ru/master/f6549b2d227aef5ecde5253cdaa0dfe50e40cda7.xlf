<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ru-ru">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-04506c2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f6549b2d227aef5ecde5253cdaa0dfe50e40cda7</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\mfc\automation-servers-object-lifetime-issues.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">be1ca5c4e34beec9346b9fa3ef4c69d3cbae6a86</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a79d50cc178cb9525e4a8eaa56b786dcb3da8a7f</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Automation Servers: Object-Lifetime Issues | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Automation Servers: Object-Lifetime Issues</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>When an Automation client creates or activates an OLE item, the server passes the client a pointer to that object.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The client establishes a reference to the object through a call to the OLE function <bpt id="p1">[</bpt>IUnknown::AddRef<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms691379)</ept>.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>This reference is in effect until the client calls <bpt id="p1">[</bpt>IUnknown::Release<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms682317)</ept>.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>(Client applications written with the Microsoft Foundation Class Library's OLE classes need not make these calls; the framework does so.) The OLE system and the server itself may establish references to the object.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>A server should not destroy an object as long as external references to the object remain in effect.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The framework maintains an internal count of the number of references to any server object derived from <bpt id="p1">[</bpt>CCmdTarget<ept id="p1">](../mfc/reference/ccmdtarget-class.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>This count is updated when an Automation client or other entity adds or releases a reference to the object.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>When the reference count becomes 0, the framework calls the virtual function <bpt id="p1">[</bpt>CCmdTarget::OnFinalRelease<ept id="p1">](../mfc/reference/ccmdtarget-class.md#ccmdtarget__onfinalrelease)</ept>.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The default implementation of this function calls the <bpt id="p1">**</bpt>delete<ept id="p1">**</ept> operator to delete this object.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The Microsoft Foundation Class Library provides additional facilities for controlling application behavior when external clients have references to the application's objects.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Besides maintaining a count of references to each object, servers maintain a global count of active objects.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The global functions <bpt id="p1">[</bpt>AfxOleLockApp<ept id="p1">](../mfc/reference/application-control.md#afxolelockapp)</ept> and <bpt id="p2">[</bpt>AfxOleUnlockApp<ept id="p2">](../mfc/reference/application-control.md#afxoleunlockapp)</ept> update the application's count of active objects.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>If this count is nonzero, the application does not terminate when the user chooses Close from the system menu or Exit from the File menu.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Instead, the application's main window is hidden (but not destroyed) until all pending client requests have been completed.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Typically, <ph id="ph1">`AfxOleLockApp`</ph> and <ph id="ph2">`AfxOleUnlockApp`</ph> are called in the constructors and destructors, respectively, of classes that support Automation.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Sometimes circumstances force the server to terminate while a client still has a reference to an object.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>For example, a resource on which the server depends may become unavailable, causing the server to encounter an error.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The user may also close a server document that contains objects to which other applications have references.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>In the <ph id="ph1">[!INCLUDE[winSDK](../atl/includes/winsdk_md.md)]</ph>, see <ph id="ph2">`IUnknown::AddRef`</ph> and <ph id="ph3">`IUnknown::Release`</ph>.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Automation Servers</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>AfxOleCanExitApp</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>