{"nodes":[{"pos":[12,45],"content":"&lt;valarray&gt; | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&amp;lt;</ph>valarray<ph id=\"ph2\">&amp;gt;</ph> | Microsoft Docs","pos":[0,33],"source":"&lt;valarray&gt; | Microsoft Docs"}]},{"pos":[675,691],"content":"&lt;valarray&gt;","linkify":"&lt;valarray&gt;","nodes":[{"content":"<ph id=\"ph1\">&amp;lt;</ph>valarray<ph id=\"ph2\">&amp;gt;</ph>","pos":[0,16],"source":"&lt;valarray&gt;"}]},{"content":"Defines the template class valarray and numerous supporting template classes and functions.","pos":[692,783]},{"pos":[792,798],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[847,854],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"These template classes and functions are permitted unusual latitude in the interest of improved performance.","pos":[858,966]},{"content":"Specifically, any function returning type <bpt id=\"p1\">**</bpt>valarray<ph id=\"ph1\">\\&lt;</ph><ept id=\"p1\">**</ept>T1<bpt id=\"p2\">**</bpt><ph id=\"ph2\">&gt;</ph><ept id=\"p2\">**</ept> may return an object of some other type T2.","pos":[967,1074],"source":" Specifically, any function returning type **valarray\\<**T1**>** may return an object of some other type T2."},{"content":"In that case, any function that accepts one or more arguments of type <bpt id=\"p1\">**</bpt>valarray<ph id=\"ph1\">\\&lt;</ph><ept id=\"p1\">**</ept>T2<bpt id=\"p2\">**</bpt><ph id=\"ph2\">&gt;</ph><ept id=\"p2\">**</ept> must have overloads that accept arbitrary combinations of those arguments, each replaced with an argument of type T2.","pos":[1075,1284],"source":" In that case, any function that accepts one or more arguments of type **valarray\\<**T2**>** must have overloads that accept arbitrary combinations of those arguments, each replaced with an argument of type T2."},{"pos":[1294,1303],"content":"Functions","linkify":"Functions","nodes":[{"content":"Functions","pos":[0,9]}]},{"pos":[1324,1376],"content":"<bpt id=\"p1\">[</bpt>abs<ept id=\"p1\">](../standard-library/valarray-functions.md#abs)</ept>","source":"[abs](../standard-library/valarray-functions.md#abs)"},{"content":"Operates on the elements of an input valarray, returning a valarray whose elements are equal to the absolute value of the elements of the input valarray.","pos":[1377,1530]},{"pos":[1535,1589],"content":"<bpt id=\"p1\">[</bpt>acos<ept id=\"p1\">](../standard-library/valarray-functions.md#acos)</ept>","source":"[acos](../standard-library/valarray-functions.md#acos)"},{"content":"Operates on the elements of an input valarray, returning a valarray whose elements are equal to the arccosine of the elements of the input valarray.","pos":[1590,1738]},{"pos":[1743,1797],"content":"<bpt id=\"p1\">[</bpt>asin<ept id=\"p1\">](../standard-library/valarray-functions.md#asin)</ept>","source":"[asin](../standard-library/valarray-functions.md#asin)"},{"content":"Operates on the elements of an input valarray, returning a valarray whose elements are equal to the arcsine of the elements of the input valarray.","pos":[1798,1944]},{"pos":[1949,2003],"content":"<bpt id=\"p1\">[</bpt>atan<ept id=\"p1\">](../standard-library/valarray-functions.md#atan)</ept>","source":"[atan](../standard-library/valarray-functions.md#atan)"},{"content":"Operates on the elements of an input valarray, returning a valarray whose elements are equal to the principal value of the arctangent of the elements of the input valarray.","pos":[2004,2176]},{"pos":[2181,2237],"content":"<bpt id=\"p1\">[</bpt>atan2<ept id=\"p1\">](../standard-library/valarray-functions.md#atan2)</ept>","source":"[atan2](../standard-library/valarray-functions.md#atan2)"},{"content":"Returns a valarray whose elements are equal to the arctangent of the Cartesian components specified by a combination of constants and elements of valarrays.","pos":[2238,2394]},{"pos":[2399,2451],"content":"<bpt id=\"p1\">[</bpt>cos<ept id=\"p1\">](../standard-library/valarray-functions.md#cos)</ept>","source":"[cos](../standard-library/valarray-functions.md#cos)"},{"content":"Operates on the elements of an input valarray, returning a valarray whose elements are equal to the cosine of the elements of the input valarray.","pos":[2452,2597]},{"pos":[2602,2656],"content":"<bpt id=\"p1\">[</bpt>cosh<ept id=\"p1\">](../standard-library/valarray-functions.md#cosh)</ept>","source":"[cosh](../standard-library/valarray-functions.md#cosh)"},{"content":"Operates on the elements of an input valarray, returning a valarray whose elements are equal to the hyperbolic cosine of the elements of the input valarray.","pos":[2657,2813]},{"pos":[2818,2870],"content":"<bpt id=\"p1\">[</bpt>exp<ept id=\"p1\">](../standard-library/valarray-functions.md#exp)</ept>","source":"[exp](../standard-library/valarray-functions.md#exp)"},{"content":"Operates on the elements of an input valarray, returning a valarray whose elements are equal to the natural exponential of the elements of the input valarray.","pos":[2871,3029]},{"pos":[3034,3086],"content":"<bpt id=\"p1\">[</bpt>log<ept id=\"p1\">](../standard-library/valarray-functions.md#log)</ept>","source":"[log](../standard-library/valarray-functions.md#log)"},{"content":"Operates on the elements of an input valarray, returning a valarray whose elements are equal to the natural logarithm of the elements of the input valarray.","pos":[3087,3243]},{"pos":[3248,3304],"content":"<bpt id=\"p1\">[</bpt>log10<ept id=\"p1\">](../standard-library/valarray-functions.md#log10)</ept>","source":"[log10](../standard-library/valarray-functions.md#log10)"},{"content":"Operates on the elements of an input valarray, returning a valarray whose elements are equal to the base 10 or common logarithm of the elements of the input valarray.","pos":[3305,3471]},{"pos":[3476,3528],"content":"<bpt id=\"p1\">[</bpt>pow<ept id=\"p1\">](../standard-library/valarray-functions.md#pow)</ept>","source":"[pow](../standard-library/valarray-functions.md#pow)"},{"content":"Operates on the elements of input valarrays and constants, returning a valarray whose elements are equal to a base specified either by the elements of an input valarray or a constant raised to an exponent specified either by the elements of an input valarray or a constant.","pos":[3529,3802]},{"pos":[3807,3859],"content":"<bpt id=\"p1\">[</bpt>sin<ept id=\"p1\">](../standard-library/valarray-functions.md#sin)</ept>","source":"[sin](../standard-library/valarray-functions.md#sin)"},{"content":"Operates on the elements of an input valarray, returning a valarray whose elements are equal to the sine of the elements of the input valarray.","pos":[3860,4003]},{"pos":[4008,4062],"content":"<bpt id=\"p1\">[</bpt>sinh<ept id=\"p1\">](../standard-library/valarray-functions.md#sinh)</ept>","source":"[sinh](../standard-library/valarray-functions.md#sinh)"},{"content":"Operates on the elements of an input valarray, returning a valarray whose elements are equal to the hyperbolic sine of the elements of the input valarray.","pos":[4063,4217]},{"pos":[4222,4276],"content":"<bpt id=\"p1\">[</bpt>sqrt<ept id=\"p1\">](../standard-library/valarray-functions.md#sqrt)</ept>","source":"[sqrt](../standard-library/valarray-functions.md#sqrt)"},{"content":"Operates on the elements of an input valarray, returning a valarray whose elements are equal to the square root of the elements of the input valarray.","pos":[4277,4427]},{"pos":[4432,4486],"content":"<bpt id=\"p1\">[</bpt>swap<ept id=\"p1\">](../standard-library/valarray-functions.md#swap)</ept>","source":"[swap](../standard-library/valarray-functions.md#swap)"},{"pos":[4492,4544],"content":"<bpt id=\"p1\">[</bpt>tan<ept id=\"p1\">](../standard-library/valarray-functions.md#tan)</ept>","source":"[tan](../standard-library/valarray-functions.md#tan)"},{"content":"Operates on the elements of an input valarray, returning a valarray whose elements are equal to the tangent of the elements of the input valarray.","pos":[4545,4691]},{"pos":[4696,4750],"content":"<bpt id=\"p1\">[</bpt>tanh<ept id=\"p1\">](../standard-library/valarray-functions.md#tanh)</ept>","source":"[tanh](../standard-library/valarray-functions.md#tanh)"},{"content":"Operates on the elements of an input valarray, returning a valarray whose elements are equal to the hyperbolic tangent of the elements of the input valarray.","pos":[4751,4908]},{"pos":[4919,4928],"content":"Operators","linkify":"Operators","nodes":[{"content":"Operators","pos":[0,9]}]},{"pos":[4949,5017],"content":"<bpt id=\"p1\">[</bpt>operator!=<ept id=\"p1\">](../standard-library/valarray-operators.md#operator_neq)</ept>","source":"[operator!=](../standard-library/valarray-operators.md#operator_neq)"},{"content":"Tests whether the corresponding elements of two equally sized valarrays are unequal or whether all the elements of a valarray are unequal a specified value of the valarray's element type.","pos":[5018,5205]},{"pos":[5210,5277],"content":"<bpt id=\"p1\">[</bpt>operator%<ept id=\"p1\">](../standard-library/valarray-operators.md#operator_mod)</ept>","source":"[operator%](../standard-library/valarray-operators.md#operator_mod)"},{"content":"Obtains the remainder of dividing the corresponding elements of two equally sized valarrays or of dividing a valarray by a specified value of the valarray's element type or of dividing a specified value by a valarray.","pos":[5278,5495]},{"pos":[5500,5568],"content":"<bpt id=\"p1\">[</bpt>operator&amp;<ept id=\"p1\">](../standard-library/valarray-operators.md#operator_amp_)</ept>","source":"[operator&](../standard-library/valarray-operators.md#operator_amp_)"},{"pos":[5569,5723],"content":"Obtains the bitwise <bpt id=\"p1\">**</bpt>AND<ept id=\"p1\">**</ept> between corresponding elements of two equally sized valarrays or between a valarray and a specified value of the element type.","source":"Obtains the bitwise **AND** between corresponding elements of two equally sized valarrays or between a valarray and a specified value of the element type."},{"pos":[5728,5802],"content":"<bpt id=\"p1\">[</bpt>operator&amp;&amp;<ept id=\"p1\">](../standard-library/valarray-operators.md#operator_amp__amp_)</ept>","source":"[operator&&](../standard-library/valarray-operators.md#operator_amp__amp_)"},{"pos":[5803,5968],"content":"Obtains the logical <bpt id=\"p1\">**</bpt>AND<ept id=\"p1\">**</ept> between corresponding elements of two equally sized valarrays or between a valarray and a specified value of the valarray's element type.","source":"Obtains the logical **AND** between corresponding elements of two equally sized valarrays or between a valarray and a specified value of the valarray's element type."},{"pos":[5973,6040],"content":"<bpt id=\"p1\">[</bpt>operator&gt;<ept id=\"p1\">](../standard-library/valarray-operators.md#operator_gt_)</ept>","source":"[operator>](../standard-library/valarray-operators.md#operator_gt_)"},{"content":"Tests whether the elements of one valarray are greater than the elements of an equally sized valarray or whether all the elements of a valarray are greater or less than a specified value of the valarray's element type.","pos":[6041,6259]},{"pos":[6264,6335],"content":"<bpt id=\"p1\">[</bpt>operator&gt;=<ept id=\"p1\">](../standard-library/valarray-operators.md#operator_gt__eq)</ept>","source":"[operator>=](../standard-library/valarray-operators.md#operator_gt__eq)"},{"content":"Tests whether the elements of one valarray are greater than or equal to the elements of an equally sized valarray or whether all the elements of a valarray are greater than or equal to or less than or equal to a specified value.","pos":[6336,6564]},{"pos":[6569,6641],"content":"<bpt id=\"p1\">[</bpt>operator&gt;&gt;<ept id=\"p1\">](../standard-library/valarray-operators.md#operator_gt__gt_)</ept>","source":"[operator>>](../standard-library/valarray-operators.md#operator_gt__gt_)"},{"content":"Right-shifts the bits for each element of a valarray a specified number of positions or by an element-wise amount specified by a second valarray.","pos":[6642,6787]},{"pos":[6792,6859],"content":"<bpt id=\"p1\">[</bpt>operator&lt;<ept id=\"p1\">](../standard-library/valarray-operators.md#operator_lt_)</ept>","source":"[operator<](../standard-library/valarray-operators.md#operator_lt_)"},{"content":"Tests whether the elements of one valarray are less than the elements of an equally sized valarray or whether all the elements of a valarray are greater or less than a specified value.","pos":[6860,7044]},{"pos":[7049,7120],"content":"<bpt id=\"p1\">[</bpt>operator&lt;=<ept id=\"p1\">](../standard-library/valarray-operators.md#operator_lt__eq)</ept>","source":"[operator<=](../standard-library/valarray-operators.md#operator_lt__eq)"},{"content":"Tests whether the elements of one valarray are less than or equal to the elements of an equally sized valarray or whether all the elements of a valarray are greater than or equal to or less than or equal to a specified value.","pos":[7121,7346]},{"pos":[7351,7423],"content":"<bpt id=\"p1\">[</bpt>operator&lt;&lt;<ept id=\"p1\">](../standard-library/valarray-operators.md#operator_lt__lt_)</ept>","source":"[operator<<](../standard-library/valarray-operators.md#operator_lt__lt_)"},{"content":"Left shifts the bits for each element of a valarray a specified number of positions or by an element-wise amount specified by a second valarray.","pos":[7424,7568]},{"pos":[7573,7641],"content":"<bpt id=\"p1\">[</bpt>operator*<ept id=\"p1\">](../standard-library/valarray-operators.md#operator_star)</ept>","source":"[operator*](../standard-library/valarray-operators.md#operator_star)"},{"content":"Obtains the element-wise product between corresponding elements of two equally sized valarrays or of between a valarray a specified value of the valarray's element type.","pos":[7642,7811]},{"pos":[7816,7883],"content":"<bpt id=\"p1\">[</bpt>operator+<ept id=\"p1\">](../standard-library/valarray-operators.md#operator_add)</ept>","source":"[operator+](../standard-library/valarray-operators.md#operator_add)"},{"content":"Obtains the element-wise sum between corresponding elements of two equally sized valarrays or of between a valarray a specified value of the valarray's element type.","pos":[7884,8049]},{"pos":[8054,8118],"content":"<bpt id=\"p1\">[</bpt>operator-<ept id=\"p1\">](../standard-library/valarray-operators.md#operator-)</ept>","source":"[operator-](../standard-library/valarray-operators.md#operator-)"},{"content":"Obtains the element-wise difference between corresponding elements of two equally sized valarrays or of between a valarray a specified value of the valarray's element type.","pos":[8119,8291]},{"pos":[8296,8360],"content":"<bpt id=\"p1\">[</bpt>operator/<ept id=\"p1\">](../standard-library/valarray-operators.md#operator_)</ept>","source":"[operator/](../standard-library/valarray-operators.md#operator_)"},{"content":"Obtains the element-wise quotient between corresponding elements of two equally sized valarrays or of between a valarray a specified value of the valarray's element type.","pos":[8361,8531]},{"pos":[8536,8606],"content":"<bpt id=\"p1\">[</bpt>operator==<ept id=\"p1\">](../standard-library/valarray-operators.md#operator_eq_eq)</ept>","source":"[operator==](../standard-library/valarray-operators.md#operator_eq_eq)"},{"content":"Tests whether the corresponding elements of two equally sized valarrays are equal or whether all the elements of a valarray are equal a specified value of the valarray's element type.","pos":[8607,8790]},{"pos":[8795,8862],"content":"<bpt id=\"p1\">[</bpt>operator^<ept id=\"p1\">](../standard-library/valarray-operators.md#operator_xor)</ept>","source":"[operator^](../standard-library/valarray-operators.md#operator_xor)"},{"pos":[8863,9024],"content":"Obtains the bitwise exclusive <ph id=\"ph1\">`OR`</ph> between corresponding elements of two equally sized valarrays or between a valarray and a specified value of the element type.","source":"Obtains the bitwise exclusive `OR` between corresponding elements of two equally sized valarrays or between a valarray and a specified value of the element type."},{"pos":[9029,9100],"content":"<bpt id=\"p1\">[</bpt>operator&amp;#124;<ept id=\"p1\">](../standard-library/valarray-operators.md#operator_or)</ept>","source":"[operator&#124;](../standard-library/valarray-operators.md#operator_or)"},{"pos":[9101,9252],"content":"Obtains the bitwise <ph id=\"ph1\">`OR`</ph> between corresponding elements of two equally sized valarrays or between a valarray and a specified value of the element type.","source":"Obtains the bitwise `OR` between corresponding elements of two equally sized valarrays or between a valarray and a specified value of the element type."},{"pos":[9257,9335],"content":"<bpt id=\"p1\">[</bpt>operator&amp;#124;&amp;#124;<ept id=\"p1\">](../standard-library/valarray-operators.md#operator_lor)</ept>","source":"[operator&#124;&#124;](../standard-library/valarray-operators.md#operator_lor)"},{"pos":[9336,9498],"content":"Obtains the logical <ph id=\"ph1\">`OR`</ph> between corresponding elements of two equally sized valarrays or between a valarray and a specified value of the valarray's element type.","source":"Obtains the logical `OR` between corresponding elements of two equally sized valarrays or between a valarray and a specified value of the valarray's element type."},{"pos":[9509,9516],"content":"Classes","linkify":"Classes","nodes":[{"content":"Classes","pos":[0,7]}]},{"pos":[9537,9588],"content":"<bpt id=\"p1\">[</bpt>gslice Class<ept id=\"p1\">](../standard-library/gslice-class.md)</ept>","source":"[gslice Class](../standard-library/gslice-class.md)"},{"content":"A utility class to valarray that is used to define multi-dimensional slices of a valarray.","pos":[9589,9679]},{"pos":[9684,9747],"content":"<bpt id=\"p1\">[</bpt>gslice_array Class<ept id=\"p1\">](../standard-library/gslice-array-class.md)</ept>","source":"[gslice_array Class](../standard-library/gslice-array-class.md)"},{"content":"An internal, auxiliary template class that supports general slice objects by providing operations between subset arrays defined by the general slice of a valarray.","pos":[9748,9911]},{"pos":[9916,9983],"content":"<bpt id=\"p1\">[</bpt>indirect_array Class<ept id=\"p1\">](../standard-library/indirect-array-class.md)</ept>","source":"[indirect_array Class](../standard-library/indirect-array-class.md)"},{"content":"An internal, auxiliary template class that supports objects that are subsets of valarrays by providing operations between subset arrays defined by specifying a subset of indices of a parent valarray.","pos":[9984,10183]},{"pos":[10188,10247],"content":"<bpt id=\"p1\">[</bpt>mask_array Class<ept id=\"p1\">](../standard-library/mask-array-class.md)</ept>","source":"[mask_array Class](../standard-library/mask-array-class.md)"},{"content":"An internal, auxiliary template class that supports objects that are subsets of parent valarrays, specified with a Boolean expression, by providing operations between the subset arrays.","pos":[10248,10433]},{"pos":[10438,10487],"content":"<bpt id=\"p1\">[</bpt>slice Class<ept id=\"p1\">](../standard-library/slice-class.md)</ept>","source":"[slice Class](../standard-library/slice-class.md)"},{"content":"A utility class to valarray that is used to define one-dimensional, vector-like subsets of a valarray.","pos":[10488,10590]},{"pos":[10595,10656],"content":"<bpt id=\"p1\">[</bpt>slice_array Class<ept id=\"p1\">](../standard-library/slice-array-class.md)</ept>","source":"[slice_array Class](../standard-library/slice-array-class.md)"},{"content":"An internal, auxiliary template class that supports slice objects by providing operations between subset arrays defined by the slice of a valarray.","pos":[10657,10804]},{"pos":[10809,10864],"content":"<bpt id=\"p1\">[</bpt>valarray Class<ept id=\"p1\">](../standard-library/valarray-class.md)</ept>","source":"[valarray Class](../standard-library/valarray-class.md)"},{"pos":[10865,11090],"content":"The template class describes an object that controls a sequence of elements of type <bpt id=\"p1\">**</bpt>Type<ept id=\"p1\">**</ept> that are stored as an array and designed for performing high-speed mathematical operations, optimized for computational performance.","source":"The template class describes an object that controls a sequence of elements of type **Type** that are stored as an array and designed for performing high-speed mathematical operations, optimized for computational performance."},{"pos":[11101,11116],"content":"Specializations","linkify":"Specializations","nodes":[{"content":"Specializations","pos":[0,15]}]},{"pos":[11137,11204],"content":"<bpt id=\"p1\">[</bpt>valarray<ph id=\"ph1\">\\&lt;</ph>bool&gt; Class<ept id=\"p1\">](../standard-library/valarray-bool-class.md)</ept>","source":"[valarray\\<bool> Class](../standard-library/valarray-bool-class.md)"},{"pos":[11205,11296],"content":"A specialized version of the template class valarray<ph id=\"ph1\">\\&lt;</ph><bpt id=\"p1\">**</bpt>Type<ept id=\"p1\">**</ept>&gt; to elements of type <ph id=\"ph2\">`bool`</ph>.","source":"A specialized version of the template class valarray\\<**Type**> to elements of type `bool`."},{"pos":[11306,11314],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Header Files Reference<ept id=\"p1\">](../standard-library/cpp-standard-library-header-files.md)</ept><ph id=\"ph1\"> </ph>","pos":[11318,11401],"source":"[Header Files Reference](../standard-library/cpp-standard-library-header-files.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Thread Safety in the C++ Standard Library<ept id=\"p1\">](../standard-library/thread-safety-in-the-cpp-standard-library.md)</ept>","pos":[11404,11514],"source":" [Thread Safety in the C++ Standard Library](../standard-library/thread-safety-in-the-cpp-standard-library.md)"}],"content":"---\ntitle: \"&lt;valarray&gt; | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"std.<valarray>\"\n  - \"valarray/std::<valarray>\"\n  - \"std::<valarray>\"\n  - \"<valarray>\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"valarray header\"\nms.assetid: 30835415-21c1-4801-8f24-6bbef7dd8ecd\ncaps.latest.revision: 19\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# &lt;valarray&gt;\nDefines the template class valarray and numerous supporting template classes and functions.  \n  \n## Syntax  \n  \n```  \n#include <valarray>  \n  \n```  \n  \n## Remarks  \n These template classes and functions are permitted unusual latitude in the interest of improved performance. Specifically, any function returning type **valarray\\<**T1**>** may return an object of some other type T2. In that case, any function that accepts one or more arguments of type **valarray\\<**T2**>** must have overloads that accept arbitrary combinations of those arguments, each replaced with an argument of type T2.  \n  \n### Functions  \n  \n|||  \n|-|-|  \n|[abs](../standard-library/valarray-functions.md#abs)|Operates on the elements of an input valarray, returning a valarray whose elements are equal to the absolute value of the elements of the input valarray.|  \n|[acos](../standard-library/valarray-functions.md#acos)|Operates on the elements of an input valarray, returning a valarray whose elements are equal to the arccosine of the elements of the input valarray.|  \n|[asin](../standard-library/valarray-functions.md#asin)|Operates on the elements of an input valarray, returning a valarray whose elements are equal to the arcsine of the elements of the input valarray.|  \n|[atan](../standard-library/valarray-functions.md#atan)|Operates on the elements of an input valarray, returning a valarray whose elements are equal to the principal value of the arctangent of the elements of the input valarray.|  \n|[atan2](../standard-library/valarray-functions.md#atan2)|Returns a valarray whose elements are equal to the arctangent of the Cartesian components specified by a combination of constants and elements of valarrays.|  \n|[cos](../standard-library/valarray-functions.md#cos)|Operates on the elements of an input valarray, returning a valarray whose elements are equal to the cosine of the elements of the input valarray.|  \n|[cosh](../standard-library/valarray-functions.md#cosh)|Operates on the elements of an input valarray, returning a valarray whose elements are equal to the hyperbolic cosine of the elements of the input valarray.|  \n|[exp](../standard-library/valarray-functions.md#exp)|Operates on the elements of an input valarray, returning a valarray whose elements are equal to the natural exponential of the elements of the input valarray.|  \n|[log](../standard-library/valarray-functions.md#log)|Operates on the elements of an input valarray, returning a valarray whose elements are equal to the natural logarithm of the elements of the input valarray.|  \n|[log10](../standard-library/valarray-functions.md#log10)|Operates on the elements of an input valarray, returning a valarray whose elements are equal to the base 10 or common logarithm of the elements of the input valarray.|  \n|[pow](../standard-library/valarray-functions.md#pow)|Operates on the elements of input valarrays and constants, returning a valarray whose elements are equal to a base specified either by the elements of an input valarray or a constant raised to an exponent specified either by the elements of an input valarray or a constant.|  \n|[sin](../standard-library/valarray-functions.md#sin)|Operates on the elements of an input valarray, returning a valarray whose elements are equal to the sine of the elements of the input valarray.|  \n|[sinh](../standard-library/valarray-functions.md#sinh)|Operates on the elements of an input valarray, returning a valarray whose elements are equal to the hyperbolic sine of the elements of the input valarray.|  \n|[sqrt](../standard-library/valarray-functions.md#sqrt)|Operates on the elements of an input valarray, returning a valarray whose elements are equal to the square root of the elements of the input valarray.|  \n|[swap](../standard-library/valarray-functions.md#swap)||  \n|[tan](../standard-library/valarray-functions.md#tan)|Operates on the elements of an input valarray, returning a valarray whose elements are equal to the tangent of the elements of the input valarray.|  \n|[tanh](../standard-library/valarray-functions.md#tanh)|Operates on the elements of an input valarray, returning a valarray whose elements are equal to the hyperbolic tangent of the elements of the input valarray.|  \n  \n### Operators  \n  \n|||  \n|-|-|  \n|[operator!=](../standard-library/valarray-operators.md#operator_neq)|Tests whether the corresponding elements of two equally sized valarrays are unequal or whether all the elements of a valarray are unequal a specified value of the valarray's element type.|  \n|[operator%](../standard-library/valarray-operators.md#operator_mod)|Obtains the remainder of dividing the corresponding elements of two equally sized valarrays or of dividing a valarray by a specified value of the valarray's element type or of dividing a specified value by a valarray.|  \n|[operator&](../standard-library/valarray-operators.md#operator_amp_)|Obtains the bitwise **AND** between corresponding elements of two equally sized valarrays or between a valarray and a specified value of the element type.|  \n|[operator&&](../standard-library/valarray-operators.md#operator_amp__amp_)|Obtains the logical **AND** between corresponding elements of two equally sized valarrays or between a valarray and a specified value of the valarray's element type.|  \n|[operator>](../standard-library/valarray-operators.md#operator_gt_)|Tests whether the elements of one valarray are greater than the elements of an equally sized valarray or whether all the elements of a valarray are greater or less than a specified value of the valarray's element type.|  \n|[operator>=](../standard-library/valarray-operators.md#operator_gt__eq)|Tests whether the elements of one valarray are greater than or equal to the elements of an equally sized valarray or whether all the elements of a valarray are greater than or equal to or less than or equal to a specified value.|  \n|[operator>>](../standard-library/valarray-operators.md#operator_gt__gt_)|Right-shifts the bits for each element of a valarray a specified number of positions or by an element-wise amount specified by a second valarray.|  \n|[operator<](../standard-library/valarray-operators.md#operator_lt_)|Tests whether the elements of one valarray are less than the elements of an equally sized valarray or whether all the elements of a valarray are greater or less than a specified value.|  \n|[operator<=](../standard-library/valarray-operators.md#operator_lt__eq)|Tests whether the elements of one valarray are less than or equal to the elements of an equally sized valarray or whether all the elements of a valarray are greater than or equal to or less than or equal to a specified value.|  \n|[operator<<](../standard-library/valarray-operators.md#operator_lt__lt_)|Left shifts the bits for each element of a valarray a specified number of positions or by an element-wise amount specified by a second valarray.|  \n|[operator*](../standard-library/valarray-operators.md#operator_star)|Obtains the element-wise product between corresponding elements of two equally sized valarrays or of between a valarray a specified value of the valarray's element type.|  \n|[operator+](../standard-library/valarray-operators.md#operator_add)|Obtains the element-wise sum between corresponding elements of two equally sized valarrays or of between a valarray a specified value of the valarray's element type.|  \n|[operator-](../standard-library/valarray-operators.md#operator-)|Obtains the element-wise difference between corresponding elements of two equally sized valarrays or of between a valarray a specified value of the valarray's element type.|  \n|[operator/](../standard-library/valarray-operators.md#operator_)|Obtains the element-wise quotient between corresponding elements of two equally sized valarrays or of between a valarray a specified value of the valarray's element type.|  \n|[operator==](../standard-library/valarray-operators.md#operator_eq_eq)|Tests whether the corresponding elements of two equally sized valarrays are equal or whether all the elements of a valarray are equal a specified value of the valarray's element type.|  \n|[operator^](../standard-library/valarray-operators.md#operator_xor)|Obtains the bitwise exclusive `OR` between corresponding elements of two equally sized valarrays or between a valarray and a specified value of the element type.|  \n|[operator&#124;](../standard-library/valarray-operators.md#operator_or)|Obtains the bitwise `OR` between corresponding elements of two equally sized valarrays or between a valarray and a specified value of the element type.|  \n|[operator&#124;&#124;](../standard-library/valarray-operators.md#operator_lor)|Obtains the logical `OR` between corresponding elements of two equally sized valarrays or between a valarray and a specified value of the valarray's element type.|  \n  \n### Classes  \n  \n|||  \n|-|-|  \n|[gslice Class](../standard-library/gslice-class.md)|A utility class to valarray that is used to define multi-dimensional slices of a valarray.|  \n|[gslice_array Class](../standard-library/gslice-array-class.md)|An internal, auxiliary template class that supports general slice objects by providing operations between subset arrays defined by the general slice of a valarray.|  \n|[indirect_array Class](../standard-library/indirect-array-class.md)|An internal, auxiliary template class that supports objects that are subsets of valarrays by providing operations between subset arrays defined by specifying a subset of indices of a parent valarray.|  \n|[mask_array Class](../standard-library/mask-array-class.md)|An internal, auxiliary template class that supports objects that are subsets of parent valarrays, specified with a Boolean expression, by providing operations between the subset arrays.|  \n|[slice Class](../standard-library/slice-class.md)|A utility class to valarray that is used to define one-dimensional, vector-like subsets of a valarray.|  \n|[slice_array Class](../standard-library/slice-array-class.md)|An internal, auxiliary template class that supports slice objects by providing operations between subset arrays defined by the slice of a valarray.|  \n|[valarray Class](../standard-library/valarray-class.md)|The template class describes an object that controls a sequence of elements of type **Type** that are stored as an array and designed for performing high-speed mathematical operations, optimized for computational performance.|  \n  \n### Specializations  \n  \n|||  \n|-|-|  \n|[valarray\\<bool> Class](../standard-library/valarray-bool-class.md)|A specialized version of the template class valarray\\<**Type**> to elements of type `bool`.|  \n  \n## See Also  \n [Header Files Reference](../standard-library/cpp-standard-library-header-files.md)   \n [Thread Safety in the C++ Standard Library](../standard-library/thread-safety-in-the-cpp-standard-library.md)\n\n\n\n"}