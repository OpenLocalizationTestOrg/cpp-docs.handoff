{"nodes":[{"pos":[12,61],"content":"Native and .NET Interoperability | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Native and .NET Interoperability | Microsoft Docs","pos":[0,49]}]},{"content":"Native and .NET Interoperability","pos":[1010,1042]},{"content":"Visual C++ supports interoperability features that allow managed and unmanaged constructs to co-exist and interoperate within the same assembly, and even in the same file.","pos":[1043,1214]},{"content":"A small subset of this functionality, such as P/Invoke, is supported by other .NET languages as well, but most of the interoperability support provided by Visual C++ is not available in other languages.","pos":[1215,1417]},{"content":"In This Section","pos":[1426,1441]},{"content":"Mixed (Native and Managed) Assemblies","pos":[1446,1483]},{"content":"Describes assemblies generated with the <bpt id=\"p1\">[</bpt>/clr (Common Language Runtime Compilation)<ept id=\"p1\">](../build/reference/clr-common-language-runtime-compilation.md)</ept> compiler option that contain both managed and unmanaged functionality.","pos":[1538,1756],"source":" Describes assemblies generated with the [/clr (Common Language Runtime Compilation)](../build/reference/clr-common-language-runtime-compilation.md) compiler option that contain both managed and unmanaged functionality."},{"content":"Using a Windows Form User Control in MFC","pos":[1764,1804]},{"content":"Discusses how to use the MFC Windows Forms support classes to host Windows Forms controls within your MFC applications.","pos":[1864,1983]},{"content":"Calling Native Functions from Managed Code","pos":[1991,2033]},{"content":"Describes how non-CLR DLLs can be used from .NET applications.","pos":[2095,2157]},{"content":"See Also","pos":[2166,2174]},{"content":"(NOTINBUILD)Visual C++ Programming Methodologies","pos":[2179,2227]}],"content":"---\ntitle: \"Native and .NET Interoperability | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"interop [C++]\"\n  - \".NET Framework [C++], interoperability with Visual C++\"\n  - \"interoperability [C++], about .NET interoperability\"\n  - \"interop [C++], about .NET interoperability\"\n  - \"managed code [C++], interoperability\"\n  - \"native code [C++]\"\n  - \"interoperability [C++]\"\n  - \"MFC [C++], .NET integration\"\n  - \"unmanaged code interoperability [C++]\"\n  - \"Visual C++, interoperability\"\n  - \"native code [C++], .NET interoperatibility\"\nms.assetid: f3ec6c99-c745-4256-b95b-f1d12ba17a5a\ncaps.latest.revision: 16\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Native and .NET Interoperability\nVisual C++ supports interoperability features that allow managed and unmanaged constructs to co-exist and interoperate within the same assembly, and even in the same file. A small subset of this functionality, such as P/Invoke, is supported by other .NET languages as well, but most of the interoperability support provided by Visual C++ is not available in other languages.  \n  \n## In This Section  \n [Mixed (Native and Managed) Assemblies](../dotnet/mixed-native-and-managed-assemblies.md)  \n Describes assemblies generated with the [/clr (Common Language Runtime Compilation)](../build/reference/clr-common-language-runtime-compilation.md) compiler option that contain both managed and unmanaged functionality.  \n  \n [Using a Windows Form User Control in MFC](../dotnet/using-a-windows-form-user-control-in-mfc.md)  \n Discusses how to use the MFC Windows Forms support classes to host Windows Forms controls within your MFC applications.  \n  \n [Calling Native Functions from Managed Code](../dotnet/calling-native-functions-from-managed-code.md)  \n Describes how non-CLR DLLs can be used from .NET applications.  \n  \n## See Also  \n [(NOTINBUILD)Visual C++ Programming Methodologies](http://msdn.microsoft.com/en-us/0822f806-fa81-4b65-bf0f-1e2921f30c95)"}