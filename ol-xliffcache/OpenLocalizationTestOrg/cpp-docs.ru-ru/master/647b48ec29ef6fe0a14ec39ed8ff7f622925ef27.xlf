<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ru-ru">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-787e512" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">647b48ec29ef6fe0a14ec39ed8ff7f622925ef27</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\atl\reference\window-class-macros.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3d1e5ac9406909e7bcffc3dbac328344db030fa3</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3b407867f14150c269160ee1865de16c40c99356</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Window Class Macros | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Window Class Macros</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>These macros define window class utilities.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>DECLARE_WND_CLASS</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Allows you to specify the name of a new window class.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>DECLARE_WND_SUPERCLASS</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Allows you to specify the name of an existing window class on which a new window class will be based.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>DECLARE_WND_CLASS_EX</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Allows you to specify the parameters of a class.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>DECLARE_WND_CLASS</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Allows you to specify the name of a new window class.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Place this macro in an ATL ActiveX control's control class.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>[in] The name of the new window class.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">**</bpt>NULL<ept id="p1">**</ept>, ATL will generate a window class name.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>This macro allows you to specify the name of a new window class whose information will be managed by <bpt id="p1">[</bpt>CWndClassInfo<ept id="p1">](../../atl/reference/cwndclassinfo-class.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>defines the new window class by implementing the following static function:</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>NVC_ATL_Windowing#127</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>specifies the following styles for the new window:</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>CS_HREDRAW</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>CS_VREDRAW</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>CS_DBLCLKS</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>also specifies the default window's background color.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Use the <bpt id="p1">[</bpt>DECLARE_WND_CLASS_EX<ept id="p1">](http://msdn.microsoft.com/library/0672c144-f2aa-4f6a-ae16-566e3a1f5411)</ept> macro to provide your own styles and background color.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CWindowImpl<ept id="p1">](../../atl/reference/cwindowimpl-class.md)</ept> uses the <ph id="ph1">`DECLARE_WND_CLASS`</ph> macro to create a window based on a new window class.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>To override this behavior, use the <bpt id="p1">[</bpt>DECLARE_WND_SUPERCLASS<ept id="p1">](http://msdn.microsoft.com/library/650337b6-4973-41e5-8c36-55f90327bdcd)</ept> macro, or provide your own implementation of the <bpt id="p2">[</bpt>GetWndClassInfo<ept id="p2">](cwindowimpl-class.md#cwindowimpl__getwndclassinfo)</ept> function.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>For more information about using windows in ATL, see the article <bpt id="p1">[</bpt>ATL Window Classes<ept id="p1">](../../atl/atl-window-classes.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>DECLARE_WND_SUPERCLASS</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Allows you to specify the parameters of a class.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Place this macro in an ATL ActiveX control's control class.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>[in] The name of the window class that will superclass <ph id="ph1">`OrigWndClassName`</ph>.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">**</bpt>NULL<ept id="p1">**</ept>, ATL will generate a window class name.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>[in] The name of an existing window class.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>This macro allows you to specify the name of a window class that will superclass an existing window class.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CWndClassInfo<ept id="p1">](../../atl/reference/cwndclassinfo-class.md)</ept> manages the information of the superclass.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>implements the following static function:</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>NVC_ATL_Windowing#127</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>By default, <bpt id="p1">[</bpt>CWindowImpl<ept id="p1">](../../atl/reference/cwindowimpl-class.md)</ept> uses the <bpt id="p2">[</bpt>DECLARE_WND_CLASS<ept id="p2">](http://msdn.microsoft.com/library/55247a72-fb9e-4bde-87f3-747c08076971)</ept> macro to create a window based on a new window class.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>By specifying the <ph id="ph1">`DECLARE_WND_SUPERCLASS`</ph> macro in a <ph id="ph2">`CWindowImpl`</ph>-derived class, the window class will be based on an existing class but will use your window procedure.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>This technique is called superclassing.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Besides using the <ph id="ph1">`DECLARE_WND_CLASS`</ph> and <ph id="ph2">`DECLARE_WND_SUPERCLASS`</ph> macros, you can override the <bpt id="p1">[</bpt>GetWndClassInfo<ept id="p1">](cwindowimpl-class.md#cwindowimpl__getwndclassinfo)</ept> function with your own implementation.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>For more information about using windows in ATL, see the article <bpt id="p1">[</bpt>ATL Window Classes<ept id="p1">](../../atl/atl-window-classes.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>DECLARE_WND_CLASS_EX</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Allows you to specify the name of an existing window class on which a new window class will be based.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Place this macro in an ATL ActiveX control's control class.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>[in] The name of the new window class.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">**</bpt>NULL<ept id="p1">**</ept>, ATL will generate a window class name.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>[in] The style of the window.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>bkgnd</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>[in] The background color of the window.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>This macro allows you to specify the class parameters of a new window class, whose information will be managed by <bpt id="p1">[</bpt>CWndClassInfo<ept id="p1">](../../atl/reference/cwndclassinfo-class.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>defines the new window class by implementing the following static function:</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>NVC_ATL_Windowing#127</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>If you want to use the default styles and background color, use the <bpt id="p1">[</bpt>DECLARE_WND_CLASS<ept id="p1">](http://msdn.microsoft.com/library/55247a72-fb9e-4bde-87f3-747c08076971)</ept> macro.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>For more information about using windows in ATL, see the article <bpt id="p1">[</bpt>ATL Window Classes<ept id="p1">](../../atl/atl-window-classes.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Macros</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>