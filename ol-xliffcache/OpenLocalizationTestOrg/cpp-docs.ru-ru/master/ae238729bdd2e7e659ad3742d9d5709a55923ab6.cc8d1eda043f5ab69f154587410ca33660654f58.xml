{"nodes":[{"pos":[12,48],"content":"mbrtoc16, mbrtoc323 | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"mbrtoc16, mbrtoc323 | Microsoft Docs","pos":[0,36]}]},{"pos":[1053,1071],"content":"mbrtoc16, mbrtoc32","linkify":"mbrtoc16, mbrtoc32","nodes":[{"content":"mbrtoc16, mbrtoc32","pos":[0,18]}]},{"content":"Translates the first multibyte character in a narrow string into the equivalent UTF-16 or UTF-32 character.","pos":[1072,1179]},{"pos":[1188,1194],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[1479,1489],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Pointer to the <ph id=\"ph1\">`char16_t`</ph> or <ph id=\"ph2\">`char32_t`</ph> equivalent of the multibyte character to convert.","pos":[1510,1599],"source":" Pointer to the `char16_t` or `char32_t` equivalent of the multibyte character to convert."},{"content":"If null, the function does not store a value.","pos":[1600,1645]},{"content":"Pointer to the multibyte character string to convert.","pos":[1664,1717]},{"content":"The maximum number of bytes in <ph id=\"ph1\">`source`</ph> to examine for a character to convert.","pos":[1739,1817],"source":" The maximum number of bytes in `source` to examine for a character to convert."},{"content":"This should be a value between one and the number of bytes, including any null terminator, remaining in <ph id=\"ph1\">`source`</ph>.","pos":[1818,1931],"source":" This should be a value between one and the number of bytes, including any null terminator, remaining in `source`."},{"content":"Pointer to a <ph id=\"ph1\">`mbstate_t`</ph> conversion state object used to interpret the multibyte string to one or more output characters.","pos":[1949,2070],"source":" Pointer to a `mbstate_t` conversion state object used to interpret the multibyte string to one or more output characters."},{"pos":[2079,2091],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[2095,2204],"content":"On success, returns the value of the first of these conditions that applies, given the current <ph id=\"ph1\">`state`</ph> value:","source":"On success, returns the value of the first of these conditions that applies, given the current `state` value:"},{"content":"Value","pos":[2211,2216]},{"content":"Condition","pos":[2217,2226]},{"content":"0","pos":[2263,2264]},{"content":"The next <ph id=\"ph1\">`max_bytes`</ph> or fewer characters converted from <ph id=\"ph2\">`source`</ph> correspond to the null wide character, which is the value stored if <ph id=\"ph3\">`destination`</ph> is not null.","pos":[2265,2424],"source":"The next `max_bytes` or fewer characters converted from `source` correspond to the null wide character, which is the value stored if `destination` is not null."},{"content":"<ph id=\"ph1\">`state`</ph> contains the initial shift state.","pos":[2437,2478],"source":"`state` contains the initial shift state."},{"pos":[2483,2519],"content":"Between 1 and <ph id=\"ph1\">`max_bytes`</ph>, inclusive","source":"Between 1 and `max_bytes`, inclusive"},{"content":"The value returned is the number of bytes of <ph id=\"ph1\">`source`</ph> that complete a valid multibyte character.","pos":[2520,2616],"source":"The value returned is the number of bytes of `source` that complete a valid multibyte character."},{"content":"The converted wide character is stored  if <ph id=\"ph1\">`destination`</ph> is not null.","pos":[2617,2686],"source":" The converted wide character is stored  if `destination` is not null."},{"content":"-3","pos":[2691,2693]},{"content":"The next wide character resulting from a previous call to the function has been stored in <ph id=\"ph1\">`destination`</ph> if <ph id=\"ph2\">`destination`</ph> is not null.","pos":[2694,2827],"source":"The next wide character resulting from a previous call to the function has been stored in `destination` if `destination` is not null."},{"content":"No bytes from <ph id=\"ph1\">`source`</ph> are consumed by this call to the function.","pos":[2828,2893],"source":" No bytes from `source` are consumed by this call to the function."},{"content":"When  <ph id=\"ph1\">`source`</ph> points to a multibyte character that requires more than one wide character to represent (for example, a surrogate pair), then the <ph id=\"ph2\">`state`</ph> value is updated so that the next function call writes  out the additional character.","pos":[2906,3144],"source":" When  `source` points to a multibyte character that requires more than one wide character to represent (for example, a surrogate pair), then the `state` value is updated so that the next function call writes  out the additional character."},{"content":"-2","pos":[3149,3151]},{"content":"The next <ph id=\"ph1\">`max_bytes`</ph> bytes represent an incomplete, but potentially valid, multibyte character.","pos":[3152,3247],"source":"The next `max_bytes` bytes represent an incomplete, but potentially valid, multibyte character."},{"content":"No value is stored in <ph id=\"ph1\">`destination`</ph>.","pos":[3248,3284],"source":" No value is stored in `destination`."},{"content":"This result can occur if <ph id=\"ph1\">`max_bytes`</ph> is zero.","pos":[3285,3330],"source":" This result can occur if `max_bytes` is zero."},{"content":"-1","pos":[3335,3337]},{"content":"An encoding error has occurred.","pos":[3338,3369]},{"content":"The next <ph id=\"ph1\">`max_bytes`</ph> or fewer bytes do not contribute to a complete and valid multibyte character.","pos":[3370,3468],"source":" The next `max_bytes` or fewer bytes do not contribute to a complete and valid multibyte character."},{"content":"No value is stored in <ph id=\"ph1\">`destination`</ph>.","pos":[3469,3505],"source":" No value is stored in `destination`."},{"content":"<ph id=\"ph1\">`EILSEQ`</ph> is stored in <ph id=\"ph2\">`errno`</ph> and the conversion state <ph id=\"ph3\">`state`</ph> is unspecified.","pos":[3518,3596],"source":"`EILSEQ` is stored in `errno` and the conversion state `state` is unspecified."},{"pos":[3606,3613],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The <ph id=\"ph1\">`mbrtoc16`</ph> function reads up to <ph id=\"ph2\">`max_bytes`</ph> bytes from <ph id=\"ph3\">`source`</ph> to find  the first complete, valid multibyte character, and then stores the equivalent UTF-16 character in <ph id=\"ph4\">`destination`</ph>.","pos":[3617,3806],"source":"The `mbrtoc16` function reads up to `max_bytes` bytes from `source` to find  the first complete, valid multibyte character, and then stores the equivalent UTF-16 character in `destination`."},{"content":"The source bytes are interpreted according to the current thread multibyte locale.","pos":[3807,3889]},{"content":"If the multibyte character requires more than one UTF-16 output character, such as a surrogate pair, then the <ph id=\"ph1\">`state`</ph> value is set to store the next UTF-16 character in <ph id=\"ph2\">`destination`</ph> on the next call to <ph id=\"ph3\">`mbrtoc16`</ph>.","pos":[3890,4104],"source":" If the multibyte character requires more than one UTF-16 output character, such as a surrogate pair, then the `state` value is set to store the next UTF-16 character in `destination` on the next call to `mbrtoc16`."},{"content":"The <ph id=\"ph1\">`mbrtoc32`</ph> function is identical, but output is stored as a UTF-32 character.","pos":[4105,4186],"source":" The `mbrtoc32` function is identical, but output is stored as a UTF-32 character."},{"content":"If <ph id=\"ph1\">`source`</ph> is null, these functions return the equivalent of a call made using arguments of <ph id=\"ph2\">`NULL`</ph> for <ph id=\"ph3\">`destination`</ph>, <ph id=\"ph4\">`\"\"`</ph> for <ph id=\"ph5\">`source`</ph>,  and <ph id=\"ph6\">`1`</ph> for <ph id=\"ph7\">`max_bytes`</ph>.","pos":[4193,4356],"source":"If `source` is null, these functions return the equivalent of a call made using arguments of `NULL` for `destination`, `\"\"` for `source`,  and `1` for `max_bytes`."},{"content":"The passed values of <ph id=\"ph1\">`destination`</ph> and <ph id=\"ph2\">`max_bytes`</ph> are ignored.","pos":[4357,4420],"source":" The passed values of `destination` and `max_bytes` are ignored."},{"content":"If <ph id=\"ph1\">`source`</ph> is not null, the function starts at the beginning of the string and inspects up to <ph id=\"ph2\">`max_bytes`</ph> bytes to determine the number of bytes required to complete the next multibyte character, including any shift sequences.","pos":[4427,4654],"source":"If `source` is not null, the function starts at the beginning of the string and inspects up to `max_bytes` bytes to determine the number of bytes required to complete the next multibyte character, including any shift sequences."},{"content":"If the examined bytes contain a valid and complete multibyte character, the function converts the character into the equivalent 16-bit or 32-bit wide character or characters.","pos":[4655,4829]},{"content":"If <ph id=\"ph1\">`destination`</ph> is not null, the function stores the first (and possibly only) result character in destination.","pos":[4830,4942],"source":" If `destination` is not null, the function stores the first (and possibly only) result character in destination."},{"content":"If additional output characters are required, a value is set in <ph id=\"ph1\">`state`</ph>, so that subsequent calls to the function output the additional characters and return the value -3.","pos":[4943,5114],"source":" If additional output characters are required, a value is set in `state`, so that subsequent calls to the function output the additional characters and return the value -3."},{"content":"If no more output characters are required, then <ph id=\"ph1\">`state`</ph> is set to the initial shift state.","pos":[5115,5205],"source":" If no more output characters are required, then `state` is set to the initial shift state."},{"pos":[5214,5226],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"content":"Function","pos":[5233,5241]},{"content":"C header","pos":[5242,5250]},{"content":"C++ header","pos":[5251,5261]},{"pos":[5319,5356],"content":"<ph id=\"ph1\">`mbrtoc16`</ph>,                <ph id=\"ph2\">`mbrtoc32`</ph>","source":"`mbrtoc16`,                `mbrtoc32`"},{"content":"<ph id=\"ph1\">\\&lt;</ph>uchar.h&gt;","pos":[5357,5367],"source":"\\<uchar.h>"},{"content":"<ph id=\"ph1\">\\&lt;</ph>cuchar&gt;","pos":[5368,5377],"source":"\\<cuchar>"},{"pos":[5385,5489],"content":"For additional compatibility information, see <bpt id=\"p1\">[</bpt>Compatibility<ept id=\"p1\">](../../c-runtime-library/compatibility.md)</ept>.","source":"For additional compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md)."},{"pos":[5498,5506],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Data Conversion<ept id=\"p1\">](../../c-runtime-library/data-conversion.md)</ept><ph id=\"ph1\"> </ph>","pos":[5510,5572],"source":"[Data Conversion](../../c-runtime-library/data-conversion.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Locale<ept id=\"p1\">](../../c-runtime-library/locale.md)</ept><ph id=\"ph1\"> </ph>","pos":[5575,5620],"source":" [Locale](../../c-runtime-library/locale.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Interpretation of Multibyte-Character Sequences<ept id=\"p1\">](../../c-runtime-library/interpretation-of-multibyte-character-sequences.md)</ept><ph id=\"ph1\"> </ph>","pos":[5623,5750],"source":" [Interpretation of Multibyte-Character Sequences](../../c-runtime-library/interpretation-of-multibyte-character-sequences.md) "},{"content":"<bpt id=\"p1\"> [</bpt>c16rtomb, c32rtomb<ept id=\"p1\">](../../c-runtime-library/reference/c16rtomb-c32rtomb1.md)</ept><ph id=\"ph1\"> </ph>","pos":[5753,5832],"source":" [c16rtomb, c32rtomb](../../c-runtime-library/reference/c16rtomb-c32rtomb1.md) "},{"content":"<bpt id=\"p1\"> [</bpt>mbrtowc<ept id=\"p1\">](../../c-runtime-library/reference/mbrtowc.md)</ept><ph id=\"ph1\"> </ph>","pos":[5835,5892],"source":" [mbrtowc](../../c-runtime-library/reference/mbrtowc.md) "},{"content":"<bpt id=\"p1\"> [</bpt>mbsrtowcs<ept id=\"p1\">](../../c-runtime-library/reference/mbsrtowcs.md)</ept><ph id=\"ph1\"> </ph>","pos":[5895,5956],"source":" [mbsrtowcs](../../c-runtime-library/reference/mbsrtowcs.md) "},{"content":"<bpt id=\"p1\"> [</bpt>mbsrtowcs_s<ept id=\"p1\">](../../c-runtime-library/reference/mbsrtowcs-s.md)</ept>","pos":[5959,6023],"source":" [mbsrtowcs_s](../../c-runtime-library/reference/mbsrtowcs-s.md)"}],"content":"---\ntitle: \"mbrtoc16, mbrtoc323 | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"cpp\"\n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\napiname: \n  - \"mbrtoc16\"\n  - \"mbrtoc32\"\napilocation: \n  - \"msvcrt.dll\"\n  - \"msvcr80.dll\"\n  - \"msvcr90.dll\"\n  - \"msvcr100.dll\"\n  - \"msvcr100_clr0400.dll\"\n  - \"msvcr110.dll\"\n  - \"msvcr110_clr0400.dll\"\n  - \"msvcr120.dll\"\n  - \"msvcr120_clr0400.dll\"\n  - \"ucrtbase.dll\"\n  - \"api-ms-win-crt-convert-l1-1-0.dll\"\napitype: \"DLLExport\"\nf1_keywords: \n  - \"mbrtoc16\"\n  - \"mbrtoc32\"\n  - \"uchar/mbrtoc16\"\n  - \"uchar/mbrtoc32\"\ndev_langs: \n  - \"C\"\n  - \"C++\"\nhelpviewer_keywords: \n  - \"mbrtoc16 function\"\n  - \"mbrtoc32 function\"\nms.assetid: 099ade4d-56f7-4e61-8b45-493f1d7a64bd\ncaps.latest.revision: 5\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"ru-ru\"\n  - \"zh-cn\"\n  - \"zh-tw\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"tr-tr\"\n---\n# mbrtoc16, mbrtoc32\nTranslates the first multibyte character in a narrow string into the equivalent UTF-16 or UTF-32 character.  \n  \n## Syntax  \n  \n```  \nsize_t mbrtoc16(   \n   char16_t* destination,   \n   const char* source,   \n   size_t max_bytes,   \n   mbstate_t* state   \n);  \n  \nsize_t mbrtoc32(  \n   char32_t* destination,   \n   const char* source,   \n   size_t max_bytes,   \n   mbstate_t* state   \n);  \n  \n```  \n  \n#### Parameters  \n `destination`  \n Pointer to the `char16_t` or `char32_t` equivalent of the multibyte character to convert. If null, the function does not store a value.  \n  \n `source`  \n Pointer to the multibyte character string to convert.  \n  \n `max_bytes`  \n The maximum number of bytes in `source` to examine for a character to convert. This should be a value between one and the number of bytes, including any null terminator, remaining in `source`.  \n  \n `state`  \n Pointer to a `mbstate_t` conversion state object used to interpret the multibyte string to one or more output characters.  \n  \n## Return Value  \n On success, returns the value of the first of these conditions that applies, given the current `state` value:  \n  \n|Value|Condition|  \n|-----------|---------------|  \n|0|The next `max_bytes` or fewer characters converted from `source` correspond to the null wide character, which is the value stored if `destination` is not null.<br /><br /> `state` contains the initial shift state.|  \n|Between 1 and `max_bytes`, inclusive|The value returned is the number of bytes of `source` that complete a valid multibyte character. The converted wide character is stored  if `destination` is not null.|  \n|-3|The next wide character resulting from a previous call to the function has been stored in `destination` if `destination` is not null. No bytes from `source` are consumed by this call to the function.<br /><br /> When  `source` points to a multibyte character that requires more than one wide character to represent (for example, a surrogate pair), then the `state` value is updated so that the next function call writes  out the additional character.|  \n|-2|The next `max_bytes` bytes represent an incomplete, but potentially valid, multibyte character. No value is stored in `destination`. This result can occur if `max_bytes` is zero.|  \n|-1|An encoding error has occurred. The next `max_bytes` or fewer bytes do not contribute to a complete and valid multibyte character. No value is stored in `destination`.<br /><br /> `EILSEQ` is stored in `errno` and the conversion state `state` is unspecified.|  \n  \n## Remarks  \n The `mbrtoc16` function reads up to `max_bytes` bytes from `source` to find  the first complete, valid multibyte character, and then stores the equivalent UTF-16 character in `destination`. The source bytes are interpreted according to the current thread multibyte locale. If the multibyte character requires more than one UTF-16 output character, such as a surrogate pair, then the `state` value is set to store the next UTF-16 character in `destination` on the next call to `mbrtoc16`. The `mbrtoc32` function is identical, but output is stored as a UTF-32 character.  \n  \n If `source` is null, these functions return the equivalent of a call made using arguments of `NULL` for `destination`, `\"\"` for `source`,  and `1` for `max_bytes`. The passed values of `destination` and `max_bytes` are ignored.  \n  \n If `source` is not null, the function starts at the beginning of the string and inspects up to `max_bytes` bytes to determine the number of bytes required to complete the next multibyte character, including any shift sequences. If the examined bytes contain a valid and complete multibyte character, the function converts the character into the equivalent 16-bit or 32-bit wide character or characters. If `destination` is not null, the function stores the first (and possibly only) result character in destination. If additional output characters are required, a value is set in `state`, so that subsequent calls to the function output the additional characters and return the value -3. If no more output characters are required, then `state` is set to the initial shift state.  \n  \n## Requirements  \n  \n|Function|C header|C++ header|  \n|--------------|--------------|------------------|  \n|`mbrtoc16`,                `mbrtoc32`|\\<uchar.h>|\\<cuchar>|  \n  \n For additional compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md).  \n  \n## See Also  \n [Data Conversion](../../c-runtime-library/data-conversion.md)   \n [Locale](../../c-runtime-library/locale.md)   \n [Interpretation of Multibyte-Character Sequences](../../c-runtime-library/interpretation-of-multibyte-character-sequences.md)   \n [c16rtomb, c32rtomb](../../c-runtime-library/reference/c16rtomb-c32rtomb1.md)   \n [mbrtowc](../../c-runtime-library/reference/mbrtowc.md)   \n [mbsrtowcs](../../c-runtime-library/reference/mbsrtowcs.md)   \n [mbsrtowcs_s](../../c-runtime-library/reference/mbsrtowcs-s.md)"}