{"nodes":[{"pos":[12,50],"content":"round, roundf, roundl | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"round, roundf, roundl | Microsoft Docs","pos":[0,38]}]},{"content":"round, roundf, roundl","pos":[999,1020]},{"content":"Rounds a floating-point value to the nearest integer.","pos":[1021,1074]},{"content":"Syntax","pos":[1083,1089]},{"content":"Parameters","pos":[1336,1346]},{"content":"The floating-point value to round.","pos":[1357,1391]},{"content":"Return Value","pos":[1400,1412]},{"content":"The <ph id=\"ph1\">`round`</ph> functions return a floating-point value that represents the nearest integer to <ph id=\"ph2\">`x`</ph>.","pos":[1416,1511],"source":"The `round` functions return a floating-point value that represents the nearest integer to `x`."},{"content":"Halfway values are rounded away from zero, regardless of the setting of the floating-point rounding mode.","pos":[1512,1617]},{"content":"There is no error return.","pos":[1618,1643]},{"content":"Input","pos":[1650,1655]},{"content":"SEH Exception","pos":[1656,1669]},{"content":"Matherr Exception","pos":[1670,1687]},{"pos":[1752,1761],"content":"± <ph id=\"ph1\">`QNAN`</ph>,","source":"± `QNAN`,"},{"content":"none","pos":[1767,1771]},{"content":"Remarks","pos":[1791,1798]},{"content":"Because C++ allows overloading, you can call overloads of <ph id=\"ph1\">`round`</ph> that take and return <ph id=\"ph2\">`float`</ph> and <ph id=\"ph3\">`long double`</ph> values.","pos":[1802,1922],"source":"Because C++ allows overloading, you can call overloads of `round` that take and return `float` and `long double` values."},{"content":"In a C program, <ph id=\"ph1\">`round`</ph> always takes and returns a <ph id=\"ph2\">`double`</ph>.","pos":[1923,1983],"source":" In a C program, `round` always takes and returns a `double`."},{"content":"Requirements","pos":[1992,2004]},{"content":"Routine","pos":[2011,2018]},{"content":"Required header","pos":[2019,2034]},{"pos":[2086,2097],"content":", <ph id=\"ph1\">`roundf`</ph>,","source":", `roundf`, "},{"content":"math.h&gt;","pos":[2109,2116],"source":"math.h>"},{"pos":[2124,2228],"content":"For additional compatibility information, see <bpt id=\"p1\">[</bpt>Compatibility<ept id=\"p1\">](../../c-runtime-library/compatibility.md)</ept>.","source":"For additional compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md)."},{"content":"Example","pos":[2237,2244]},{"content":".NET Framework Equivalent","pos":[3089,3114]},{"content":"System::Math::Round","pos":[3119,3138]},{"content":"See Also","pos":[3213,3221]},{"content":"Floating-Point Support","pos":[3226,3248]},{"content":"ceil, ceilf, ceill","pos":[3306,3324]},{"content":"floor, floorf, floorl","pos":[3386,3407]},{"content":"fmod, fmodf","pos":[3472,3483]},{"content":"lrint, lrintf, lrintl, llrint, llrintf, llrintl","pos":[3539,3586]},{"content":"lround, lroundf, lroundl, llround, llroundf, llroundl","pos":[3663,3716]},{"content":"nearbyint, nearbyintf, nearbyintl","pos":[3810,3843]},{"content":"rint, rintf, rintl","pos":[3920,3938]}],"content":"---\ntitle: \"round, roundf, roundl | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\napiname: \n  - \"round\"\n  - \"roundl\"\n  - \"roundf\"\napilocation: \n  - \"msvcrt.dll\"\n  - \"msvcr80.dll\"\n  - \"msvcr90.dll\"\n  - \"msvcr100.dll\"\n  - \"msvcr100_clr0400.dll\"\n  - \"msvcr110.dll\"\n  - \"msvcr110_clr0400.dll\"\n  - \"msvcr120.dll\"\n  - \"msvcr120_clr0400.dll\"\n  - \"ucrtbase.dll\"\n  - \"api-ms-win-crt-math-l1-1-0.dll\"\napitype: \"DLLExport\"\nf1_keywords: \n  - \"roundf\"\n  - \"roundl\"\n  - \"round\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"roundl function\"\n  - \"round function\"\n  - \"roundf function\"\nms.assetid: 6be90877-193c-4b80-a32b-c3eca33f9c6f\ncaps.latest.revision: 6\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# round, roundf, roundl\nRounds a floating-point value to the nearest integer.  \n  \n## Syntax  \n  \n```  \ndouble round(   \n   double x   \n);  \nfloat round(  \n   float x  \n);  // C++ only  \nlong double round(  \n   long double x  \n);  // C++ only  \nfloat roundf(  \n   float x  \n);  \nlong double roundl(  \n   long double x  \n);  \n```  \n  \n#### Parameters  \n `x`  \n The floating-point value to round.  \n  \n## Return Value  \n The `round` functions return a floating-point value that represents the nearest integer to `x`. Halfway values are rounded away from zero, regardless of the setting of the floating-point rounding mode. There is no error return.  \n  \n|Input|SEH Exception|Matherr Exception|  \n|-----------|-------------------|-----------------------|  \n|± `QNAN`,`IND`|none|`_DOMAIN`|  \n  \n## Remarks  \n Because C++ allows overloading, you can call overloads of `round` that take and return `float` and `long double` values. In a C program, `round` always takes and returns a `double`.  \n  \n## Requirements  \n  \n|Routine|Required header|  \n|-------------|---------------------|  \n|`round`, `roundf`, `roundl`|\\<math.h>|  \n  \n For additional compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md).  \n  \n## Example  \n  \n```  \n// crt_round.c  \n// Build with: cl /W3 /Tc crt_round.c  \n// This example displays the rounded results of  \n// the floating-point values 2.499999, -2.499999,   \n// 2.8, -2.8, 2.5 and -2.5.  \n  \n#include <math.h>  \n#include <stdio.h>  \n  \nint main( void )  \n{  \n   double x = 2.499999;  \n   float y = 2.8f;  \n   long double z = 2.5;  \n  \n   printf(\"round(%f) is %.0f\\n\", x, round(x));  \n   printf(\"round(%f) is %.0f\\n\", -x, round(-x));  \n   printf(\"roundf(%f) is %.0f\\n\", y, roundf(y));  \n   printf(\"roundf(%f) is %.0f\\n\", -y, roundf(-y));  \n   printf(\"roundl(%Lf) is %.0Lf\\n\", z, roundl(z));  \n   printf(\"roundl(%Lf) is %.0Lf\\n\", -z, roundl(-z));  \n}  \n```  \n  \n```Output  \nround(2.499999) is 2  \nround(-2.499999) is -2  \nroundf(2.800000) is 3  \nroundf(-2.800000) is -3  \nroundl(2.500000) is 3  \nroundl(-2.500000) is -3  \n```  \n  \n## .NET Framework Equivalent  \n [System::Math::Round](https://msdn.microsoft.com/en-us/library/system.math.round.aspx)  \n  \n## See Also  \n [Floating-Point Support](../../c-runtime-library/floating-point-support.md)   \n [ceil, ceilf, ceill](../../c-runtime-library/reference/ceil-ceilf-ceill.md)   \n [floor, floorf, floorl](../../c-runtime-library/reference/floor-floorf-floorl.md)   \n [fmod, fmodf](../../c-runtime-library/reference/fmod-fmodf.md)   \n [lrint, lrintf, lrintl, llrint, llrintf, llrintl](http://msdn.microsoft.com/en-us/312fd869-a9c0-4107-bb23-ab8299d04385)   \n [lround, lroundf, lroundl, llround, llroundf, llroundl](../../c-runtime-library/reference/lround-lroundf-lroundl-llround-llroundf-llroundl.md)   \n [nearbyint, nearbyintf, nearbyintl](http://msdn.microsoft.com/en-us/15111e73-331d-41d1-81b7-3e10df894848)   \n [rint, rintf, rintl](../../c-runtime-library/reference/rint-rintf-rintl.md)"}