{"nodes":[{"pos":[12,42],"content":"_aligned_free | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"_aligned_free | Microsoft Docs","pos":[0,30]}]},{"pos":[975,988],"content":"_aligned_free","linkify":"_aligned_free","nodes":[{"content":"_aligned_free","pos":[0,13]}]},{"pos":[989,1196],"content":"Frees a block of memory that was allocated with <bpt id=\"p1\">[</bpt>_aligned_malloc<ept id=\"p1\">](../../c-runtime-library/reference/aligned-malloc.md)</ept> or <bpt id=\"p2\">[</bpt>_aligned_offset_malloc<ept id=\"p2\">](../../c-runtime-library/reference/aligned-offset-malloc.md)</ept>.","source":"Frees a block of memory that was allocated with [_aligned_malloc](../../c-runtime-library/reference/aligned-malloc.md) or [_aligned_offset_malloc](../../c-runtime-library/reference/aligned-offset-malloc.md)."},{"pos":[1205,1211],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[1285,1295],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"A pointer to the memory block that was returned to the <ph id=\"ph1\">`_aligned_malloc`</ph> or <ph id=\"ph2\">`_aligned_offset_malloc`</ph> function.","pos":[1313,1423],"source":" A pointer to the memory block that was returned to the `_aligned_malloc` or `_aligned_offset_malloc` function."},{"pos":[1432,1439],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"<ph id=\"ph1\">`_aligned_free`</ph> is marked <ph id=\"ph2\">`__declspec(noalias)`</ph>, meaning that the function is guaranteed not to modify global variables.","pos":[1443,1563],"source":"`_aligned_free` is marked `__declspec(noalias)`, meaning that the function is guaranteed not to modify global variables."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>noalias<ept id=\"p1\">](../../cpp/noalias.md)</ept>.","pos":[1564,1622],"source":" For more information, see [noalias](../../cpp/noalias.md)."},{"content":"This function does not validate its parameter, unlike the other _aligned CRT functions.","pos":[1629,1716]},{"content":"If <ph id=\"ph1\">`memblock`</ph> is a <ph id=\"ph2\">`NULL`</ph> pointer, this function simply performs no actions.","pos":[1717,1793],"source":" If `memblock` is a `NULL` pointer, this function simply performs no actions."},{"content":"It does not change <ph id=\"ph1\">`errno`</ph> and it does not invoke the invalid parameter handler.","pos":[1794,1874],"source":" It does not change `errno` and it does not invoke the invalid parameter handler."},{"content":"If an error occurs in the function due to not using _aligned functions previously to allocate the block of memory or a misalignment of memory occurs due to some unforeseen calamity, the function generates a debug report from the <bpt id=\"p1\">[</bpt>_RPT, _RPTF, _RPTW, _RPTFW Macros<ept id=\"p1\">](../../c-runtime-library/reference/rpt-rptf-rptw-rptfw-macros.md)</ept>.","pos":[1875,2205],"source":" If an error occurs in the function due to not using _aligned functions previously to allocate the block of memory or a misalignment of memory occurs due to some unforeseen calamity, the function generates a debug report from the [_RPT, _RPTF, _RPTW, _RPTFW Macros](../../c-runtime-library/reference/rpt-rptf-rptw-rptfw-macros.md)."},{"pos":[2214,2226],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"content":"Routine","pos":[2233,2240]},{"content":"Required header","pos":[2241,2256]},{"content":"<ph id=\"ph1\">\\&lt;</ph>malloc.h&gt;","pos":[2317,2328],"source":"\\<malloc.h>"},{"pos":[2338,2345],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[2349,2446],"content":"For more information, see <bpt id=\"p1\">[</bpt>_aligned_malloc<ept id=\"p1\">](../../c-runtime-library/reference/aligned-malloc.md)</ept>.","source":"For more information, see [_aligned_malloc](../../c-runtime-library/reference/aligned-malloc.md)."},{"pos":[2455,2480],"content":".NET Framework Equivalent","linkify":".NET Framework Equivalent","nodes":[{"content":".NET Framework Equivalent","pos":[0,25]}]},{"content":"Not applicable.","pos":[2484,2499]},{"content":"To call the standard C function, use <ph id=\"ph1\">`PInvoke`</ph>.","pos":[2500,2547],"source":" To call the standard C function, use `PInvoke`."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Platform Invoke Examples<ept id=\"p1\">](http://msdn.microsoft.com/Library/15926806-f0b7-487e-93a6-4e9367ec689f)</ept>.","pos":[2548,2673],"source":" For more information, see [Platform Invoke Examples](http://msdn.microsoft.com/Library/15926806-f0b7-487e-93a6-4e9367ec689f)."},{"pos":[2682,2690],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"pos":[2694,2753],"content":"<bpt id=\"p1\">[</bpt>Data Alignment<ept id=\"p1\">](../../c-runtime-library/data-alignment.md)</ept>","source":"[Data Alignment](../../c-runtime-library/data-alignment.md)"}],"content":"---\ntitle: \"_aligned_free | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\napiname: \n  - \"_aligned_free\"\napilocation: \n  - \"msvcrt.dll\"\n  - \"msvcr80.dll\"\n  - \"msvcr90.dll\"\n  - \"msvcr100.dll\"\n  - \"msvcr100_clr0400.dll\"\n  - \"msvcr110.dll\"\n  - \"msvcr110_clr0400.dll\"\n  - \"msvcr120.dll\"\n  - \"msvcr120_clr0400.dll\"\n  - \"ucrtbase.dll\"\n  - \"api-ms-win-crt-heap-l1-1-0.dll\"\napitype: \"DLLExport\"\nf1_keywords: \n  - \"aligned_free\"\n  - \"_aligned_free\"\ndev_langs: \n  - \"C++\"\n  - \"C\"\nhelpviewer_keywords: \n  - \"_aligned_free function\"\n  - \"aligned_free function\"\nms.assetid: ed1ce952-cdfc-4682-85cc-f75d4101603d\ncaps.latest.revision: 16\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# _aligned_free\nFrees a block of memory that was allocated with [_aligned_malloc](../../c-runtime-library/reference/aligned-malloc.md) or [_aligned_offset_malloc](../../c-runtime-library/reference/aligned-offset-malloc.md).  \n  \n## Syntax  \n  \n```  \nvoid _aligned_free (  \n   void *memblock  \n);  \n```  \n  \n#### Parameters  \n `memblock`  \n A pointer to the memory block that was returned to the `_aligned_malloc` or `_aligned_offset_malloc` function.  \n  \n## Remarks  \n `_aligned_free` is marked `__declspec(noalias)`, meaning that the function is guaranteed not to modify global variables. For more information, see [noalias](../../cpp/noalias.md).  \n  \n This function does not validate its parameter, unlike the other _aligned CRT functions. If `memblock` is a `NULL` pointer, this function simply performs no actions. It does not change `errno` and it does not invoke the invalid parameter handler. If an error occurs in the function due to not using _aligned functions previously to allocate the block of memory or a misalignment of memory occurs due to some unforeseen calamity, the function generates a debug report from the [_RPT, _RPTF, _RPTW, _RPTFW Macros](../../c-runtime-library/reference/rpt-rptf-rptw-rptfw-macros.md).  \n  \n## Requirements  \n  \n|Routine|Required header|  \n|-------------|---------------------|  \n|`_aligned_free`|\\<malloc.h>|  \n  \n## Example  \n For more information, see [_aligned_malloc](../../c-runtime-library/reference/aligned-malloc.md).  \n  \n## .NET Framework Equivalent  \n Not applicable. To call the standard C function, use `PInvoke`. For more information, see [Platform Invoke Examples](http://msdn.microsoft.com/Library/15926806-f0b7-487e-93a6-4e9367ec689f).  \n  \n## See Also  \n [Data Alignment](../../c-runtime-library/data-alignment.md)"}