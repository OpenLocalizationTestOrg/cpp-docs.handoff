{"nodes":[{"pos":[12,47],"content":"omp_init_nest_lock | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"omp_init_nest_lock | Microsoft Docs","pos":[0,35]}]},{"content":"omp_init_nest_lock","pos":[630,648]},{"content":"Initializes a lock.","pos":[649,668]},{"content":"Syntax","pos":[677,683]},{"content":"Remarks","pos":[766,773]},{"content":"where,","pos":[777,783]},{"content":"A variable of type <bpt id=\"p1\">[</bpt>omp_nest_lock_t<ept id=\"p1\">](../../../parallel/openmp/reference/omp-nest-lock-t.md)</ept>.","pos":[800,892],"source":" A variable of type [omp_nest_lock_t](../../../parallel/openmp/reference/omp-nest-lock-t.md)."},{"content":"Remarks","pos":[901,908]},{"content":"The initial nesting count is zero.","pos":[912,946]},{"pos":[953,1116],"content":"For more information, see <bpt id=\"p1\">[</bpt>3.2.1 omp_init_lock and omp_init_nest_lock Functions<ept id=\"p1\">](../../../parallel/openmp/3-2-1-omp-init-lock-and-omp-init-nest-lock-functions.md)</ept>.","source":"For more information, see [3.2.1 omp_init_lock and omp_init_nest_lock Functions](../../../parallel/openmp/3-2-1-omp-init-lock-and-omp-init-nest-lock-functions.md)."},{"content":"Example","pos":[1125,1132]},{"content":"See Also","pos":[2934,2942]},{"content":"Functions","pos":[2947,2956]}],"content":"---\ntitle: \"omp_init_nest_lock | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"omp_init_nest_lock\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"omp_init_nest_lock OpenMP function\"\nms.assetid: cf749ec5-de78-4186-9588-ac7c42b02463\ncaps.latest.revision: 12\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# omp_init_nest_lock\nInitializes a lock.  \n  \n## Syntax  \n  \n```  \nvoid omp_init_nest_lock(  \n   omp_nest_lock_t *lock  \n);  \n```  \n  \n## Remarks  \n where,  \n  \n `lock`  \n A variable of type [omp_nest_lock_t](../../../parallel/openmp/reference/omp-nest-lock-t.md).  \n  \n## Remarks  \n The initial nesting count is zero.  \n  \n For more information, see [3.2.1 omp_init_lock and omp_init_nest_lock Functions](../../../parallel/openmp/3-2-1-omp-init-lock-and-omp-init-nest-lock-functions.md).  \n  \n## Example  \n  \n```  \n// omp_init_nest_lock.cpp  \n// compile with: /openmp  \n#include <stdio.h>  \n#include <omp.h>  \n  \nomp_nest_lock_t my_lock;  \n  \nvoid Test() {  \n   int tid = omp_get_thread_num( );  \n   omp_set_nest_lock(&my_lock);  \n   printf_s(\"Thread %d - starting nested locked region\\n\", tid);  \n   printf_s(\"Thread %d - ending nested locked region\\n\", tid);  \n   omp_unset_nest_lock(&my_lock);  \n}  \n  \nint main() {  \n   omp_init_nest_lock(&my_lock);  \n  \n   #pragma omp parallel num_threads(4)  \n   {  \n      int i, j;  \n  \n      for (i = 0; i < 5; ++i) {  \n         omp_set_nest_lock(&my_lock);  \n            if (i % 3)   \n               Test();  \n            omp_unset_nest_lock(&my_lock);  \n        }  \n    }  \n  \n    omp_destroy_nest_lock(&my_lock);  \n}  \n```  \n  \n```Output  \nThread 0 - starting nested locked region  \nThread 0 - ending nested locked region  \nThread 0 - starting nested locked region  \nThread 0 - ending nested locked region  \nThread 3 - starting nested locked region  \nThread 3 - ending nested locked region  \nThread 3 - starting nested locked region  \nThread 3 - ending nested locked region  \nThread 3 - starting nested locked region  \nThread 3 - ending nested locked region  \nThread 2 - starting nested locked region  \nThread 2 - ending nested locked region  \nThread 2 - starting nested locked region  \nThread 2 - ending nested locked region  \nThread 2 - starting nested locked region  \nThread 2 - ending nested locked region  \nThread 1 - starting nested locked region  \nThread 1 - ending nested locked region  \nThread 1 - starting nested locked region  \nThread 1 - ending nested locked region  \nThread 1 - starting nested locked region  \nThread 1 - ending nested locked region  \nThread 0 - starting nested locked region  \nThread 0 - ending nested locked region  \n```  \n  \n## See Also  \n [Functions](../../../parallel/openmp/reference/openmp-functions.md)"}