<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ru-ru">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-787e512" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9842a9231d5c983ee5cbf5c83046b2878529755c</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\mfc\reference\cchecklistbox-class.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2604c584b92bf7c3050b3fc3a7c1508c2143f728</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a71c7d2adf9245620366453afb6627f72698b7d3</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>CCheckListBox Class | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>CCheckListBox Class</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Provides the functionality of a Windows checklist box.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Members</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Public Constructors</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>CCheckListBox::CCheckListBox</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Constructs a <ph id="ph1">`CCheckListBox`</ph> object.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Public Methods</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>CCheckListBox::Create</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Creates the Windows checklist box and attaches it to the <ph id="ph1">`CCheckListBox`</ph> object.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>CCheckListBox::DrawItem</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Called by the framework when a visual aspect of an owner-draw list box changes.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>CCheckListBox::Enable</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Enables or disables a checklist box item.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>CCheckListBox::GetCheck</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Gets the state of an item's check box.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>CCheckListBox::GetCheckStyle</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Gets the style of the control's check boxes.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>CCheckListBox::IsEnabled</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Determines whether an item is enabled.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>CCheckListBox::MeasureItem</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Called by the framework when a list box with an owner-draw style is created.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>CCheckListBox::OnGetCheckPosition</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Called by the framework to get the position of an item's check box.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>CCheckListBox::SetCheck</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Sets the state of an item's check box.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>CCheckListBox::SetCheckStyle</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Sets the style of the control's check boxes.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>A "checklist box" displays a list of items, such as filenames.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Each item in the list has a check box next to it that the user can check or clear.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>is only for owner-drawn controls because the list contains more than text strings.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>At its simplest, a checklist box contains text strings and check boxes, but you do not need to have text at all.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>For example, you could have a list of small bitmaps with a check box next to each item.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>To create your own checklist box, you must derive your own class from <ph id="ph1">`CCheckListBox`</ph>.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>To derive your own class, write a constructor for the derived class, then call <bpt id="p1">**</bpt>Create<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>If you want to handle Windows notification messages sent by a list box to its parent (usually a class derived from <bpt id="p1">[</bpt>CDialog<ept id="p1">](../../mfc/reference/cdialog-class.md)</ept>), add a message-map entry and message-handler member function to the parent class for each message.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Each message-map entry takes the following form:</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>ON_<ept id="p1">**</ept>Notification <bpt id="p2">**</bpt>(<ept id="p2">**</ept><ph id="ph1">`id`</ph>, <ph id="ph2">`memberFxn`</ph><bpt id="p3">**</bpt>)<ept id="p3">**</ept></source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>where <ph id="ph1">`id`</ph> specifies the child window ID of the control sending the notification and <ph id="ph2">`memberFxn`</ph> is the name of the parent member function you have written to handle the notification.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The parent's function prototype is as follows:</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>afx_msg<ept id="p1">**</ept> <ph id="ph1">`void`</ph> <ph id="ph2">`memberFxn`</ph> <bpt id="p2">**</bpt>( );<ept id="p2">**</ept></source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>There is only one message-map entry that pertains specifically to <bpt id="p1">**</bpt>CCheckListBox<ept id="p1">**</ept> (but see also the message-map entries for <bpt id="p2">[</bpt>CListBox<ept id="p2">](../../mfc/reference/clistbox-class.md)</ept>):</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>ON_CLBN_CHKCHANGE<ept id="p1">**</ept> The user has changed the state of an item's checkbox.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>If your checklist box is a default checklist box (a list of strings with the default-sized checkboxes to the left of each), you can use the default <bpt id="p1">[</bpt>CCheckListBox::DrawItem<ept id="p1">](#cchecklistbox__drawitem)</ept> to draw the checklist box.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Otherwise, you must override the <bpt id="p1">[</bpt>CListBox::CompareItem<ept id="p1">](../../mfc/reference/clistbox-class.md#clistbox__compareitem)</ept> function and the <bpt id="p2">[</bpt>CCheckListBox::DrawItem<ept id="p2">](#cchecklistbox__drawitem)</ept> and <bpt id="p3">[</bpt>CCheckListBox::MeasureItem<ept id="p3">](#cchecklistbox__measureitem)</ept> functions.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>You can create a checklist box either from a dialog template or directly in your code.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Inheritance Hierarchy</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>CObject</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>CCmdTarget</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>CWnd</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>CListBox</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Requirements</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Header:<ept id="p1">**</ept> afxwin.h</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>CCheckListBox::CCheckListBox</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Constructs a <ph id="ph1">`CCheckListBox`</ph> object.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>You construct a <ph id="ph1">`CCheckListBox`</ph> object in two steps.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>First define a class derived from <ph id="ph1">`CCheckListBox`</ph>, then call <bpt id="p1">**</bpt>Create<ept id="p1">**</ept>, which initializes the Windows checklist box and attaches it to the <ph id="ph2">`CCheckListBox`</ph> object.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>NVC_MFCControlLadenDialog#60</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>CCheckListBox::Create</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Creates the Windows checklist box and attaches it to the <ph id="ph1">`CCheckListBox`</ph> object.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Specifies the style of the checklist box.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The style must be <bpt id="p1">**</bpt>LBS_HASSTRINGS<ept id="p1">**</ept> and either <bpt id="p2">**</bpt>LBS_OWNERDRAWFIXED<ept id="p2">**</ept> (all items in the list are the same height) or <bpt id="p3">**</bpt>LBS_OWNERDRAWVARIABLE<ept id="p3">**</ept> (items in the list are of varying heights).</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>This style can be combined with other <bpt id="p1">[</bpt>list-box styles<ept id="p1">](../../mfc/reference/list-box-styles.md)</ept> except <bpt id="p2">**</bpt>LBS_USETABSTOPS<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Specifies the checklist-box size and position.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Can be either a <bpt id="p1">[</bpt>CRect<ept id="p1">](../../atl-mfc-shared/reference/crect-class.md)</ept> object or a <bpt id="p2">[</bpt>RECT<ept id="p2">](../../mfc/reference/rect-structure1.md)</ept> structure.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Specifies the checklist box's parent window (usually a <ph id="ph1">`CDialog`</ph> object).</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>It must not be <bpt id="p1">**</bpt>NULL<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Specifies the checklist box's control ID.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Nonzero if successful; otherwise 0.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>You construct a <ph id="ph1">`CCheckListBox`</ph> object in two steps.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>First, define a class derived from <bpt id="p1">**</bpt>CcheckListBox<ept id="p1">**</ept> and then call <bpt id="p2">**</bpt>Create<ept id="p2">**</ept>, which initializes the Windows checklist box and attaches it to the <ph id="ph1">`CCheckListBox`</ph>.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>CCheckListBox::CCheckListBox<ept id="p1">](#cchecklistbox__cchecklistbox)</ept> for a sample.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>When <bpt id="p1">**</bpt>Create<ept id="p1">**</ept> executes, Windows sends the <bpt id="p2">[</bpt>WM_NCCREATE<ept id="p2">](../../mfc/reference/cwnd-class.md#cwnd__onnccreate)</ept>, <bpt id="p3">[</bpt>WM_CREATE<ept id="p3">](../../mfc/reference/cwnd-class.md#cwnd__oncreate)</ept>, <bpt id="p4">[</bpt>WM_NCCALCSIZE<ept id="p4">](../../mfc/reference/cwnd-class.md#cwnd__onnccalcsize)</ept>, and <bpt id="p5">[</bpt>WM_GETMINMAXINFO<ept id="p5">](../../mfc/reference/cwnd-class.md#cwnd__ongetminmaxinfo)</ept> messages to the checklist-box control.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>These messages are handled by default by the <bpt id="p1">[</bpt>OnNcCreate<ept id="p1">](../../mfc/reference/cwnd-class.md#cwnd__onnccreate)</ept>, <bpt id="p2">[</bpt>OnCreate<ept id="p2">](../../mfc/reference/cwnd-class.md#cwnd__oncreate)</ept>, <bpt id="p3">[</bpt>OnNcCalcSize<ept id="p3">](../../mfc/reference/cwnd-class.md#cwnd__onnccalcsize)</ept>, and <bpt id="p4">[</bpt>OnGetMinMaxInfo<ept id="p4">](../../mfc/reference/cwnd-class.md#cwnd__ongetminmaxinfo)</ept> member functions in the <ph id="ph1">`CWnd`</ph> base class.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>To extend the default message handling, add a message map to the your derived class and override the preceding message-handler member functions.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Override <ph id="ph1">`OnCreate`</ph>, for example, to perform needed initialization for a new class.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Apply the following <bpt id="p1">[</bpt>window styles<ept id="p1">](../../mfc/reference/window-styles.md)</ept> to a checklist-box control:</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>WS_CHILD<ept id="p1">**</ept> Always</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>WS_VISIBLE<ept id="p1">**</ept> Usually</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>WS_DISABLED<ept id="p1">**</ept> Rarely</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>WS_VSCROLL<ept id="p1">**</ept> To add a vertical scroll bar</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>WS_HSCROLL<ept id="p1">**</ept> To add a horizontal scroll bar</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>WS_GROUP<ept id="p1">**</ept> To group controls</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>WS_TABSTOP<ept id="p1">**</ept> To allow tabbing to this control</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>CCheckListBox::DrawItem</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Called by the framework when a visual aspect of an owner-drawn checklist box changes.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>A long pointer to a <bpt id="p1">[</bpt>DRAWITEMSTRUCT<ept id="p1">](../../mfc/reference/drawitemstruct-structure.md)</ept> structure that contains information about the type of drawing required.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>itemAction<ept id="p1">**</ept> and <bpt id="p2">**</bpt>itemState<ept id="p2">**</ept> members of the <ph id="ph1">`DRAWITEMSTRUCT`</ph> structure define the drawing action that is to be performed.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>By default, this function draws a default checkbox list, consisting of a list of strings each with a default-sized checkbox to the left.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>The checkbox list size is the one specified in <bpt id="p1">[</bpt>Create<ept id="p1">](#cchecklistbox__create)</ept>.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Override this member function to implement drawing of owner-draw checklist boxes that are not the default, such as checklist boxes with lists that aren't strings, with variable-height items, or with checkboxes that aren't on the left.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>The application should restore all graphics device interface (GDI) objects selected for the display context supplied in <ph id="ph1">`lpDrawItemStruct`</ph> before the termination of this member function.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>If checklist box items are not all the same height, the checklist box style (specified in <bpt id="p1">**</bpt>Create<ept id="p1">**</ept>) must be <bpt id="p2">**</bpt>LBS_OWNERVARIABLE<ept id="p2">**</ept>, and you must override the <bpt id="p3">[</bpt>MeasureItem<ept id="p3">](#cchecklistbox__measureitem)</ept> function.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>CCheckListBox::Enable</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Call this function to enable or disable a checklist box item.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Index of the checklist box item to be enabled.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Specifies whether the item is enabled or disabled.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>CCheckListBox::GetCheck</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>Retrieves the state of the specified check box.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Zero-based index of a check box that is contained in the list box.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>The state of the specified check box.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>The following table lists possible values.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>Value</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>The check box is checked.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>The check box is not checked.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>The check box state is indeterminate.</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>CCheckListBox::GetCheckStyle</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>Call this function to get the checklist box's style.</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>The style of the control's check boxes.</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>For information on possible styles, see <bpt id="p1">[</bpt>SetCheckStyle<ept id="p1">](#cchecklistbox__setcheckstyle)</ept>.</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>CCheckListBox::IsEnabled</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>Call this function to determine whether an item is enabled.</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>Index of the item.</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>Nonzero if the item is enabled; otherwise 0.</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>CCheckListBox::MeasureItem</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>Called by the framework when a checklist box with a nondefault style is created.</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>A long pointer to a <bpt id="p1">[</bpt>MEASUREITEMSTRUCT<ept id="p1">](../../mfc/reference/measureitemstruct-structure.md)</ept> structure.</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>By default, this member function does nothing.</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>Override this member function and fill in the <ph id="ph1">`MEASUREITEMSTRUCT`</ph> structure to inform Windows of the dimensions of checklist-box items.</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>If the checklist box is created with the <bpt id="p1">[</bpt>LBS_OWNERDRAWVARIABLE<ept id="p1">](../../mfc/reference/list-box-styles.md)</ept> style, the framework calls this member function for each item in the list box.</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>Otherwise, this member is called only once.</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>CCheckListBox::OnGetCheckPosition</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>The framework calls this function to get the position and size of the check box in an item.</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>rectItem</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>The position and size of the list item.</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>The default position and size of an item's check box.</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>The position and size of an item's check box.</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>The default implementation only returns the default position and size of the check box ( <ph id="ph1">`rectCheckBox`</ph>).</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>By default, a check box is aligned in the upper-left corner of an item and is the standard check box size.</source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>There may be cases where you want the check boxes on the right, or want a larger or smaller check box.</source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>In these cases, override <ph id="ph1">`OnGetCheckPosition`</ph> to change the check box position and size within the item.</source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>CCheckListBox::SetCheck</source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>Sets the state of the specified check box.</source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>Zero-based index of a check box that is contained in the list box.</source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>The button state for the specified check box.</source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>See the Remarks section for possible values.</source>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>The following table lists possible values for the <ph id="ph1">`nCheck`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>Value</source>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>BST_CHECKED</source>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>Select the specified check box.</source>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>BST_UNCHECKED</source>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>Clear the specified check box.</source>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>BST_INDETERMINATE</source>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>Set the specified check box state to indeterminate.</source>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>This state is only available if the check box style is <ph id="ph1">`BS_AUTO3STATE`</ph> or <ph id="ph2">`BS_3STATE`</ph>.</source>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Button Styles<ept id="p1">](../../mfc/reference/button-styles.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>CCheckListBox::SetCheckStyle</source>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>Call this function to set the style of check boxes in the checklist box.</source>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>Determines the style of check boxes in the checklist box.</source>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>Valid styles are:</source>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>BS_CHECKBOX</source>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>BS_AUTOCHECKBOX</source>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>BS_AUTO3STATE</source>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>BS_3STATE</source>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>For information on these styles, see <bpt id="p1">[</bpt>Button Styles<ept id="p1">](../../mfc/reference/button-styles.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>MFC Sample TSTCON</source>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>CListBox Class</source>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>Hierarchy Chart</source>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>CListBox Class</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>