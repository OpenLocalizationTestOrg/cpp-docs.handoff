{"nodes":[{"pos":[12,101],"content":"Walkthrough: Creating a Windows Store app using WRL and Media Foundation | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Walkthrough: Creating a Windows Store app using WRL and Media Foundation | Microsoft Docs","pos":[0,89]}]},{"content":"Walkthrough: Creating a Windows Store app using WRL and Media Foundation","pos":[583,655]},{"pos":[656,982],"content":"Learn how to use the <ph id=\"ph1\">[!INCLUDE[cppwrl](../windows/includes/cppwrl_md.md)]</ph> (<ph id=\"ph2\">[!INCLUDE[cppwrl_short](../windows/includes/cppwrl_short_md.md)]</ph>) to create a <ph id=\"ph3\">[!INCLUDE[win8_appname_long](../build/includes/win8_appname_long_md.md)]</ph> app that uses <bpt id=\"p1\">[</bpt>Microsoft Media Foundation<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/apps/ms694197)</ept>.","source":"Learn how to use the [!INCLUDE[cppwrl](../windows/includes/cppwrl_md.md)] ([!INCLUDE[cppwrl_short](../windows/includes/cppwrl_short_md.md)]) to create a [!INCLUDE[win8_appname_long](../build/includes/win8_appname_long_md.md)] app that uses [Microsoft Media Foundation](http://msdn.microsoft.com/library/windows/apps/ms694197)."},{"content":"This example creates a custom Media Foundation transform that applies a grayscale effect to images that are captured from a webcam.","pos":[989,1120]},{"content":"The app uses C++ to define the custom transform and C# to use the component to transform the captured images.","pos":[1121,1230]},{"pos":[1238,1356],"content":"[!NOTE]\n Instead of C#, you can also use JavaScript, Visual Basic, or C++ to consume the custom transform component.","leadings":["","> "],"nodes":[{"content":"Instead of C#, you can also use JavaScript, Visual Basic, or C++ to consume the custom transform component.","pos":[9,116]}]},{"content":"In most cases, you can use <ph id=\"ph1\">[!INCLUDE[cppwrt](../build/reference/includes/cppwrt_md.md)]</ph> (<ph id=\"ph2\">[!INCLUDE[cppwrt_short](../build/reference/includes/cppwrt_short_md.md)]</ph>) to create <ph id=\"ph3\">[!INCLUDE[wrt](../atl/reference/includes/wrt_md.md)]</ph> components.","pos":[1363,1600],"source":"In most cases, you can use [!INCLUDE[cppwrt](../build/reference/includes/cppwrt_md.md)] ([!INCLUDE[cppwrt_short](../build/reference/includes/cppwrt_short_md.md)]) to create [!INCLUDE[wrt](../atl/reference/includes/wrt_md.md)] components."},{"content":"(For more information, see <bpt id=\"p1\">[</bpt>Visual C++ Language Reference<ept id=\"p1\">](http://msdn.microsoft.com/Library/3f6abf92-4e5e-4ed8-8e11-f9252380d30a)</ept>.) However, sometimes you have to use the <ph id=\"ph1\">[!INCLUDE[cppwrl_short](../windows/includes/cppwrl_short_md.md)]</ph>.","pos":[1601,1838],"source":" (For more information, see [Visual C++ Language Reference](http://msdn.microsoft.com/Library/3f6abf92-4e5e-4ed8-8e11-f9252380d30a).) However, sometimes you have to use the [!INCLUDE[cppwrl_short](../windows/includes/cppwrl_short_md.md)]."},{"content":"For example, when you create a media extension for Microsoft Media Foundation, you must create a component that implements both COM and <ph id=\"ph1\">[!INCLUDE[wrt](../atl/reference/includes/wrt_md.md)]</ph> interfaces.","pos":[1839,2039],"source":" For example, when you create a media extension for Microsoft Media Foundation, you must create a component that implements both COM and [!INCLUDE[wrt](../atl/reference/includes/wrt_md.md)] interfaces."},{"content":"Because <ph id=\"ph1\">[!INCLUDE[cppwrt_short](../build/reference/includes/cppwrt_short_md.md)]</ph> can only create <ph id=\"ph2\">[!INCLUDE[wrt](../atl/reference/includes/wrt_md.md)]</ph> objects, to create a media extension you must use the <ph id=\"ph3\">[!INCLUDE[cppwrl_short](../windows/includes/cppwrl_short_md.md)]</ph> because it enables the implementation of both COM and <ph id=\"ph4\">[!INCLUDE[wrt](../atl/reference/includes/wrt_md.md)]</ph> interfaces.","pos":[2040,2427],"source":" Because [!INCLUDE[cppwrt_short](../build/reference/includes/cppwrt_short_md.md)] can only create [!INCLUDE[wrt](../atl/reference/includes/wrt_md.md)] objects, to create a media extension you must use the [!INCLUDE[cppwrl_short](../windows/includes/cppwrl_short_md.md)] because it enables the implementation of both COM and [!INCLUDE[wrt](../atl/reference/includes/wrt_md.md)] interfaces."},{"pos":[2435,2899],"content":"[!NOTE]\n Although this code example is long, it demonstrates the minimum that's required to create a useful Media Foundation transform. You can use it as a starting point for your own custom transform. This example is adapted from the [Media extensions sample](http://code.msdn.microsoft.com/windowsapps/Media-extensions-sample-7b466096), which uses media extensions to apply effects to video, decode video, and create scheme handlers that produce media streams.","leadings":["","> "],"nodes":[{"content":" Although this code example is long, it demonstrates the minimum that's required to create a useful Media Foundation transform. You can use it as a starting point for your own custom transform. This example is adapted from the [Media extensions sample](http://code.msdn.microsoft.com/windowsapps/Media-extensions-sample-7b466096), which uses media extensions to apply effects to video, decode video, and create scheme handlers that produce media streams.","pos":[8,462],"nodes":[{"content":"Although this code example is long, it demonstrates the minimum that's required to create a useful Media Foundation transform.","pos":[1,127]},{"content":"You can use it as a starting point for your own custom transform.","pos":[128,193]},{"content":"This example is adapted from the <bpt id=\"p1\">[</bpt>Media extensions sample<ept id=\"p1\">](http://code.msdn.microsoft.com/windowsapps/Media-extensions-sample-7b466096)</ept>, which uses media extensions to apply effects to video, decode video, and create scheme handlers that produce media streams.","pos":[194,454],"source":" This example is adapted from the [Media extensions sample](http://code.msdn.microsoft.com/windowsapps/Media-extensions-sample-7b466096), which uses media extensions to apply effects to video, decode video, and create scheme handlers that produce media streams."}]}]},{"content":"Prerequisites","pos":[2908,2921]},{"pos":[2931,3031],"content":"Experience with the <bpt id=\"p1\">[</bpt>Windows Runtime<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/apps/br211377.aspx)</ept>.","source":"Experience with the [Windows Runtime](http://msdn.microsoft.com/library/windows/apps/br211377.aspx)."},{"content":"Experience with COM.","pos":[3041,3061]},{"content":"A webcam.","pos":[3071,3080]},{"content":"Key points","pos":[3089,3099]},{"content":"To create a custom Media Foundation component, use a Microsoft Interface Definition Language (MIDL) definition file to define an interface, implement that interface, and then make it activatable from other components.","pos":[3109,3326]},{"pos":[3336,3650],"content":"The <ph id=\"ph1\">`namespace`</ph> and <ph id=\"ph2\">`runtimeclass`</ph> attributes, and the <ph id=\"ph3\">`NTDDI_WIN8`</ph><bpt id=\"p1\">[</bpt>version<ept id=\"p1\">](http://msdn.microsoft.com/en-us/66ac5cf3-2230-44fd-aaf6-8013e4a4ae81)</ept> attribute value are important parts of the MIDL definition for a Media Foundation component that uses <ph id=\"ph4\">[!INCLUDE[cppwrl_short](../windows/includes/cppwrl_short_md.md)]</ph>.","source":"The `namespace` and `runtimeclass` attributes, and the `NTDDI_WIN8`[version](http://msdn.microsoft.com/en-us/66ac5cf3-2230-44fd-aaf6-8013e4a4ae81) attribute value are important parts of the MIDL definition for a Media Foundation component that uses [!INCLUDE[cppwrl_short](../windows/includes/cppwrl_short_md.md)]."},{"content":"<bpt id=\"p1\">[</bpt>Microsoft::WRL::RuntimeClass<ept id=\"p1\">](../windows/runtimeclass-class.md)</ept> is the base class for the custom Media Foundation component.","pos":[3660,3785],"source":"[Microsoft::WRL::RuntimeClass](../windows/runtimeclass-class.md) is the base class for the custom Media Foundation component."},{"content":"The <bpt id=\"p1\">[</bpt>Microsoft::WRL::RuntimeClassType::WinRtClassicComMix<ept id=\"p1\">](../windows/runtimeclasstype-enumeration.md)</ept> enum value, which is provided as a template argument, marks the class for use both as a <ph id=\"ph1\">[!INCLUDE[wrt](../atl/reference/includes/wrt_md.md)]</ph> class and as a classic COM runtime class.","pos":[3786,4071],"source":" The [Microsoft::WRL::RuntimeClassType::WinRtClassicComMix](../windows/runtimeclasstype-enumeration.md) enum value, which is provided as a template argument, marks the class for use both as a [!INCLUDE[wrt](../atl/reference/includes/wrt_md.md)] class and as a classic COM runtime class."},{"pos":[4081,4291],"content":"The <bpt id=\"p1\">[</bpt>InspectableClass<ept id=\"p1\">](../windows/inspectableclass-macro.md)</ept> macro implements basic COM functionality such as reference counting and the <ph id=\"ph1\">`QueryInterface`</ph> method, and sets the runtime class name and trust level.","source":"The [InspectableClass](../windows/inspectableclass-macro.md) macro implements basic COM functionality such as reference counting and the `QueryInterface` method, and sets the runtime class name and trust level."},{"pos":[4301,4894],"content":"Use the Microsoft::WRL::<bpt id=\"p1\">[</bpt>Module class<ept id=\"p1\">](https://www.microsoftonedoc.com/#/organizations/e6f6a65cf14f462597b64ac058dbe1d0/projects/3fedad16-eaf1-41a6-8f96-0c1949c68f32/containers/a3daf831-1c5f-4bbe-964d-503870caf874/tocpaths/b4acf5de-2f4c-4c8b-b5ff-9140d023ecbe/locales/en-US)</ept> to implement DLL entry-point functions such as <bpt id=\"p2\">[</bpt>DllGetActivationFactory<ept id=\"p2\">](http://msdn.microsoft.com/library/br205771.aspx)</ept>, <bpt id=\"p3\">[</bpt>DllCanUnloadNow<ept id=\"p3\">](http://msdn.microsoft.com/library/windows/desktop/ms690368\\(v=vs.85\\).aspx)</ept>, and <bpt id=\"p4\">[</bpt>DllGetClassObject<ept id=\"p4\">](http://msdn.microsoft.com/library/windows/desktop/ms680760\\(v=vs.85\\).aspx)</ept>.","source":"Use the Microsoft::WRL::[Module class](https://www.microsoftonedoc.com/#/organizations/e6f6a65cf14f462597b64ac058dbe1d0/projects/3fedad16-eaf1-41a6-8f96-0c1949c68f32/containers/a3daf831-1c5f-4bbe-964d-503870caf874/tocpaths/b4acf5de-2f4c-4c8b-b5ff-9140d023ecbe/locales/en-US) to implement DLL entry-point functions such as [DllGetActivationFactory](http://msdn.microsoft.com/library/br205771.aspx), [DllCanUnloadNow](http://msdn.microsoft.com/library/windows/desktop/ms690368\\(v=vs.85\\).aspx), and [DllGetClassObject](http://msdn.microsoft.com/library/windows/desktop/ms680760\\(v=vs.85\\).aspx)."},{"content":"Link your component DLL to runtimeobject.lib.","pos":[4904,4949]},{"content":"Also specify <bpt id=\"p1\">[</bpt>/WINMD<ept id=\"p1\">](http://msdn.microsoft.com/Library/ecfadce8-3a3f-40cc-bb01-b4731f8d2fcb)</ept> on the linker line to generate Windows metadata.","pos":[4950,5092],"source":" Also specify [/WINMD](http://msdn.microsoft.com/Library/ecfadce8-3a3f-40cc-bb01-b4731f8d2fcb) on the linker line to generate Windows metadata."},{"pos":[5102,5301],"content":"Use project references to make <ph id=\"ph1\">[!INCLUDE[cppwrl_short](../windows/includes/cppwrl_short_md.md)]</ph> components accessible to <ph id=\"ph2\">[!INCLUDE[win8_appname_long](../build/includes/win8_appname_long_md.md)]</ph> apps.","source":"Use project references to make [!INCLUDE[cppwrl_short](../windows/includes/cppwrl_short_md.md)] components accessible to [!INCLUDE[win8_appname_long](../build/includes/win8_appname_long_md.md)] apps."},{"pos":[5311,5447],"content":"To use the <ph id=\"ph1\">[!INCLUDE[cppwrl_short](../windows/includes/cppwrl_short_md.md)]</ph> to create the Media Foundation grayscale transform component","source":"To use the [!INCLUDE[cppwrl_short](../windows/includes/cppwrl_short_md.md)] to create the Media Foundation grayscale transform component"},{"content":"In Visual Studio, create a <bpt id=\"p1\">**</bpt>Blank Solution<ept id=\"p1\">**</ept> project.","pos":[5457,5511],"source":"In Visual Studio, create a **Blank Solution** project."},{"content":"Name the project, for example, <ph id=\"ph1\">`MediaCapture`</ph>.","pos":[5512,5558],"source":" Name the project, for example, `MediaCapture`."},{"content":"Add a <bpt id=\"p1\">**</bpt>DLL (Windows Store apps)<ept id=\"p1\">**</ept> project to the solution.","pos":[5568,5627],"source":"Add a **DLL (Windows Store apps)** project to the solution."},{"content":"Name the project, for example, <ph id=\"ph1\">`GrayscaleTransform`</ph>.","pos":[5628,5680],"source":" Name the project, for example, `GrayscaleTransform`."},{"content":"Add a <bpt id=\"p1\">**</bpt>Midl File (.idl)<ept id=\"p1\">**</ept> file to the project.","pos":[5690,5737],"source":"Add a **Midl File (.idl)** file to the project."},{"content":"Name the file, for example, <ph id=\"ph1\">`GrayscaleTransform.idl`</ph>.","pos":[5738,5791],"source":" Name the file, for example, `GrayscaleTransform.idl`."},{"content":"Add this code to GrayscaleTransform.idl.","pos":[5801,5841]},{"pos":[5863,5882],"content":"wrl-media-capture#1"},{"content":"Use the following code to replace the contents of pch.h.","pos":[6000,6056]},{"pos":[6078,6097],"content":"wrl-media-capture#2"},{"pos":[6213,6298],"content":"Add a new header file to the project, name it <ph id=\"ph1\">`BufferLock.h`</ph>, and then add this code:","source":"Add a new header file to the project, name it `BufferLock.h`, and then add this code:"},{"pos":[6320,6339],"content":"wrl-media-capture#3"},{"content":"GrayscaleTransform.h is not used in this example.","pos":[6455,6504]},{"content":"You can remove it from the project if you want to.","pos":[6505,6555]},{"content":"Use the following code to replace the contents of GrayscaleTransform.cpp.","pos":[6565,6638]},{"pos":[6660,6679],"content":"wrl-media-capture#4"},{"pos":[6796,6902],"content":"Add a new module-definition file to the project, name it <ph id=\"ph1\">`GrayscaleTransform.def`</ph>, and then add this code:","source":"Add a new module-definition file to the project, name it `GrayscaleTransform.def`, and then add this code:"},{"content":"Use the following code to replace the contents of dllmain.cpp.","pos":[7096,7158]},{"pos":[7180,7199],"content":"wrl-media-capture#6"},{"pos":[7317,7405],"content":"In the project’s <bpt id=\"p1\">**</bpt>Property Pages<ept id=\"p1\">**</ept> dialog box, set the following <bpt id=\"p2\">**</bpt>Linker<ept id=\"p2\">**</ept> properties.","source":"In the project’s **Property Pages** dialog box, set the following **Linker** properties."},{"pos":[7419,7505],"content":"Under <bpt id=\"p1\">**</bpt>Input<ept id=\"p1\">**</ept>, for the <bpt id=\"p2\">**</bpt>Module Definition File<ept id=\"p2\">**</ept>, specify <ph id=\"ph1\">`GrayScaleTransform.def`</ph>.","source":"Under **Input**, for the **Module Definition File**, specify `GrayScaleTransform.def`."},{"pos":[7519,7642],"content":"Also under <bpt id=\"p1\">**</bpt>Input<ept id=\"p1\">**</ept>, add <ph id=\"ph1\">`runtimeobject.lib`</ph>, <ph id=\"ph2\">`mfuuid.lib`</ph>, and <ph id=\"ph3\">`mfplatf.lib`</ph> to the <bpt id=\"p2\">**</bpt>Additional Dependencies<ept id=\"p2\">**</ept> property.","source":"Also under **Input**, add `runtimeobject.lib`, `mfuuid.lib`, and `mfplatf.lib` to the **Additional Dependencies** property."},{"pos":[7656,7738],"content":"Under <bpt id=\"p1\">**</bpt>Windows Metadata<ept id=\"p1\">**</ept>, set <bpt id=\"p2\">**</bpt>Generate Windows Metadata<ept id=\"p2\">**</ept> to <bpt id=\"p3\">**</bpt>Yes (/WINMD)<ept id=\"p3\">**</ept>.","source":"Under **Windows Metadata**, set **Generate Windows Metadata** to **Yes (/WINMD)**."},{"pos":[7748,7875],"content":"To use the <ph id=\"ph1\">[!INCLUDE[cppwrl_short](../windows/includes/cppwrl_short_md.md)]</ph> the custom Media Foundation component from a C# app","source":"To use the [!INCLUDE[cppwrl_short](../windows/includes/cppwrl_short_md.md)] the custom Media Foundation component from a C# app"},{"content":"Add a new <bpt id=\"p1\">**</bpt>C# Blank App (XAML)<ept id=\"p1\">**</ept> project to the <ph id=\"ph1\">`MediaCapture`</ph> solution.","pos":[7885,7958],"source":"Add a new **C# Blank App (XAML)** project to the `MediaCapture` solution."},{"content":"Name the project, for example, <ph id=\"ph1\">`MediaCapture`</ph>.","pos":[7959,8005],"source":" Name the project, for example, `MediaCapture`."},{"content":"In the <bpt id=\"p1\">**</bpt>MediaCapture<ept id=\"p1\">**</ept> project, add a reference to the <ph id=\"ph1\">`GrayscaleTransform`</ph> project.","pos":[8015,8100],"source":"In the **MediaCapture** project, add a reference to the `GrayscaleTransform` project."},{"content":"To learn how, see <bpt id=\"p1\">[</bpt>How to: Add or Remove References By Using the Reference Manager<ept id=\"p1\">](http://msdn.microsoft.com/Library/1aabb520-99b0-46c6-9368-21b4d84793eb)</ept>.","pos":[8101,8257],"source":" To learn how, see [How to: Add or Remove References By Using the Reference Manager](http://msdn.microsoft.com/Library/1aabb520-99b0-46c6-9368-21b4d84793eb)."},{"content":"In Package.appxmanifest, on the <bpt id=\"p1\">**</bpt>Capabilities<ept id=\"p1\">**</ept> tab, select <bpt id=\"p2\">**</bpt>Microphone<ept id=\"p2\">**</ept> and <bpt id=\"p3\">**</bpt>Webcam<ept id=\"p3\">**</ept>.","pos":[8267,8358],"source":"In Package.appxmanifest, on the **Capabilities** tab, select **Microphone** and **Webcam**."},{"content":"Both capabilities are required to capture photos from the webcam.","pos":[8359,8424]},{"pos":[8434,8581],"content":"In MainPage.xaml, add this code to the root <bpt id=\"p1\">[</bpt>Grid<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.grid.aspx)</ept> element:","source":"In MainPage.xaml, add this code to the root [Grid](http://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.grid.aspx) element:"},{"pos":[8603,8622],"content":"wrl-media-capture#7"},{"content":"Use the following code to replace the contents of MainPage.xaml.cs.","pos":[8742,8809]},{"pos":[8830,8849],"content":"wrl-media-capture#8"},{"content":"The following illustration shows the MediaCapture app.","pos":[8966,9020]},{"content":"MediaCapture app capturing a photo","pos":[9029,9063]},{"content":"Next Steps","pos":[9133,9143]},{"content":"The example shows how to capture photos from the default webcam one at a time.","pos":[9147,9225]},{"content":"The <bpt id=\"p1\">[</bpt>Media extensions sample<ept id=\"p1\">](http://code.msdn.microsoft.com/windowsapps/Media-extensions-sample-7b466096)</ept> does more.","pos":[9226,9343],"source":" The [Media extensions sample](http://code.msdn.microsoft.com/windowsapps/Media-extensions-sample-7b466096) does more."},{"content":"It demonstrates how to enumerate webcam devices and work with local scheme handlers, and demonstrates additional media effects that work on both individual photos and streams of video.","pos":[9344,9528]},{"content":"See Also","pos":[9537,9545]},{"content":"Windows Runtime C++ Template Library (WRL)","pos":[9550,9592]},{"content":"Microsoft Media Foundation","pos":[9655,9681]},{"content":"Media extensions sample","pos":[9745,9768]}],"content":"---\ntitle: \"Walkthrough: Creating a Windows Store app using WRL and Media Foundation | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\ndev_langs: \n  - \"C++\"\nms.assetid: 0336c550-fbeb-4dc4-aa9b-660f9fc45382\ncaps.latest.revision: 9\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Walkthrough: Creating a Windows Store app using WRL and Media Foundation\nLearn how to use the [!INCLUDE[cppwrl](../windows/includes/cppwrl_md.md)] ([!INCLUDE[cppwrl_short](../windows/includes/cppwrl_short_md.md)]) to create a [!INCLUDE[win8_appname_long](../build/includes/win8_appname_long_md.md)] app that uses [Microsoft Media Foundation](http://msdn.microsoft.com/library/windows/apps/ms694197).  \n  \n This example creates a custom Media Foundation transform that applies a grayscale effect to images that are captured from a webcam. The app uses C++ to define the custom transform and C# to use the component to transform the captured images.  \n  \n> [!NOTE]\n>  Instead of C#, you can also use JavaScript, Visual Basic, or C++ to consume the custom transform component.  \n  \n In most cases, you can use [!INCLUDE[cppwrt](../build/reference/includes/cppwrt_md.md)] ([!INCLUDE[cppwrt_short](../build/reference/includes/cppwrt_short_md.md)]) to create [!INCLUDE[wrt](../atl/reference/includes/wrt_md.md)] components. (For more information, see [Visual C++ Language Reference](http://msdn.microsoft.com/Library/3f6abf92-4e5e-4ed8-8e11-f9252380d30a).) However, sometimes you have to use the [!INCLUDE[cppwrl_short](../windows/includes/cppwrl_short_md.md)]. For example, when you create a media extension for Microsoft Media Foundation, you must create a component that implements both COM and [!INCLUDE[wrt](../atl/reference/includes/wrt_md.md)] interfaces. Because [!INCLUDE[cppwrt_short](../build/reference/includes/cppwrt_short_md.md)] can only create [!INCLUDE[wrt](../atl/reference/includes/wrt_md.md)] objects, to create a media extension you must use the [!INCLUDE[cppwrl_short](../windows/includes/cppwrl_short_md.md)] because it enables the implementation of both COM and [!INCLUDE[wrt](../atl/reference/includes/wrt_md.md)] interfaces.  \n  \n> [!NOTE]\n>  Although this code example is long, it demonstrates the minimum that's required to create a useful Media Foundation transform. You can use it as a starting point for your own custom transform. This example is adapted from the [Media extensions sample](http://code.msdn.microsoft.com/windowsapps/Media-extensions-sample-7b466096), which uses media extensions to apply effects to video, decode video, and create scheme handlers that produce media streams.  \n  \n## Prerequisites  \n  \n-   Experience with the [Windows Runtime](http://msdn.microsoft.com/library/windows/apps/br211377.aspx).  \n  \n-   Experience with COM.  \n  \n-   A webcam.  \n  \n## Key points  \n  \n-   To create a custom Media Foundation component, use a Microsoft Interface Definition Language (MIDL) definition file to define an interface, implement that interface, and then make it activatable from other components.  \n  \n-   The `namespace` and `runtimeclass` attributes, and the `NTDDI_WIN8`[version](http://msdn.microsoft.com/en-us/66ac5cf3-2230-44fd-aaf6-8013e4a4ae81) attribute value are important parts of the MIDL definition for a Media Foundation component that uses [!INCLUDE[cppwrl_short](../windows/includes/cppwrl_short_md.md)].  \n  \n-   [Microsoft::WRL::RuntimeClass](../windows/runtimeclass-class.md) is the base class for the custom Media Foundation component. The [Microsoft::WRL::RuntimeClassType::WinRtClassicComMix](../windows/runtimeclasstype-enumeration.md) enum value, which is provided as a template argument, marks the class for use both as a [!INCLUDE[wrt](../atl/reference/includes/wrt_md.md)] class and as a classic COM runtime class.  \n  \n-   The [InspectableClass](../windows/inspectableclass-macro.md) macro implements basic COM functionality such as reference counting and the `QueryInterface` method, and sets the runtime class name and trust level.  \n  \n-   Use the Microsoft::WRL::[Module class](https://www.microsoftonedoc.com/#/organizations/e6f6a65cf14f462597b64ac058dbe1d0/projects/3fedad16-eaf1-41a6-8f96-0c1949c68f32/containers/a3daf831-1c5f-4bbe-964d-503870caf874/tocpaths/b4acf5de-2f4c-4c8b-b5ff-9140d023ecbe/locales/en-US) to implement DLL entry-point functions such as [DllGetActivationFactory](http://msdn.microsoft.com/library/br205771.aspx), [DllCanUnloadNow](http://msdn.microsoft.com/library/windows/desktop/ms690368\\(v=vs.85\\).aspx), and [DllGetClassObject](http://msdn.microsoft.com/library/windows/desktop/ms680760\\(v=vs.85\\).aspx).  \n  \n-   Link your component DLL to runtimeobject.lib. Also specify [/WINMD](http://msdn.microsoft.com/Library/ecfadce8-3a3f-40cc-bb01-b4731f8d2fcb) on the linker line to generate Windows metadata.  \n  \n-   Use project references to make [!INCLUDE[cppwrl_short](../windows/includes/cppwrl_short_md.md)] components accessible to [!INCLUDE[win8_appname_long](../build/includes/win8_appname_long_md.md)] apps.  \n  \n### To use the [!INCLUDE[cppwrl_short](../windows/includes/cppwrl_short_md.md)] to create the Media Foundation grayscale transform component  \n  \n1.  In Visual Studio, create a **Blank Solution** project. Name the project, for example, `MediaCapture`.  \n  \n2.  Add a **DLL (Windows Store apps)** project to the solution. Name the project, for example, `GrayscaleTransform`.  \n  \n3.  Add a **Midl File (.idl)** file to the project. Name the file, for example, `GrayscaleTransform.idl`.  \n  \n4.  Add this code to GrayscaleTransform.idl.  \n  \n     [!code-cpp[wrl-media-capture#1](../windows/codesnippet/CPP/walkthrough-creating-a-windows-store-app-using-wrl-and-media-foundation_1.idl)]  \n  \n5.  Use the following code to replace the contents of pch.h.  \n  \n     [!code-cpp[wrl-media-capture#2](../windows/codesnippet/CPP/walkthrough-creating-a-windows-store-app-using-wrl-and-media-foundation_2.h)]  \n  \n6.  Add a new header file to the project, name it `BufferLock.h`, and then add this code:  \n  \n     [!code-cpp[wrl-media-capture#3](../windows/codesnippet/CPP/walkthrough-creating-a-windows-store-app-using-wrl-and-media-foundation_3.h)]  \n  \n7.  GrayscaleTransform.h is not used in this example. You can remove it from the project if you want to.  \n  \n8.  Use the following code to replace the contents of GrayscaleTransform.cpp.  \n  \n     [!code-cpp[wrl-media-capture#4](../windows/codesnippet/CPP/walkthrough-creating-a-windows-store-app-using-wrl-and-media-foundation_4.cpp)]  \n  \n9. Add a new module-definition file to the project, name it `GrayscaleTransform.def`, and then add this code:  \n  \n   ```\n   EXPORTS\n       DllCanUnloadNow                     PRIVATE\n       DllGetActivationFactory             PRIVATE\n       DllGetClassObject                   PRIVATE\n   ```   \n  \n10. Use the following code to replace the contents of dllmain.cpp.  \n  \n     [!code-cpp[wrl-media-capture#6](../windows/codesnippet/CPP/walkthrough-creating-a-windows-store-app-using-wrl-and-media-foundation_6.cpp)]  \n  \n11. In the project’s **Property Pages** dialog box, set the following **Linker** properties.  \n  \n    1.  Under **Input**, for the **Module Definition File**, specify `GrayScaleTransform.def`.  \n  \n    2.  Also under **Input**, add `runtimeobject.lib`, `mfuuid.lib`, and `mfplatf.lib` to the **Additional Dependencies** property.  \n  \n    3.  Under **Windows Metadata**, set **Generate Windows Metadata** to **Yes (/WINMD)**.  \n  \n### To use the [!INCLUDE[cppwrl_short](../windows/includes/cppwrl_short_md.md)] the custom Media Foundation component from a C# app  \n  \n1.  Add a new **C# Blank App (XAML)** project to the `MediaCapture` solution. Name the project, for example, `MediaCapture`.  \n  \n2.  In the **MediaCapture** project, add a reference to the `GrayscaleTransform` project. To learn how, see [How to: Add or Remove References By Using the Reference Manager](http://msdn.microsoft.com/Library/1aabb520-99b0-46c6-9368-21b4d84793eb).  \n  \n3.  In Package.appxmanifest, on the **Capabilities** tab, select **Microphone** and **Webcam**. Both capabilities are required to capture photos from the webcam.  \n  \n4.  In MainPage.xaml, add this code to the root [Grid](http://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.grid.aspx) element:  \n  \n     [!code-xml[wrl-media-capture#7](../windows/codesnippet/Xaml/walkthrough-creating-a-windows-store-app-using-wrl-and-media-foundation_7.xaml)]  \n  \n5.  Use the following code to replace the contents of MainPage.xaml.cs.  \n  \n     [!code-cs[wrl-media-capture#8](../windows/codesnippet/CSharp/walkthrough-creating-a-windows-store-app-using-wrl-and-media-foundation_8.cs)]  \n  \n The following illustration shows the MediaCapture app.  \n  \n ![MediaCapture app capturing a photo](../windows/media/wrl_media_capture.png \"WRL_Media_Capture\")  \n  \n## Next Steps  \n The example shows how to capture photos from the default webcam one at a time. The [Media extensions sample](http://code.msdn.microsoft.com/windowsapps/Media-extensions-sample-7b466096) does more. It demonstrates how to enumerate webcam devices and work with local scheme handlers, and demonstrates additional media effects that work on both individual photos and streams of video.  \n  \n## See Also  \n [Windows Runtime C++ Template Library (WRL)](../windows/windows-runtime-cpp-template-library-wrl.md)   \n [Microsoft Media Foundation](http://msdn.microsoft.com/library/windows/apps/ms694197)   \n [Media extensions sample](http://code.msdn.microsoft.com/windowsapps/Media-extensions-sample-7b466096)"}