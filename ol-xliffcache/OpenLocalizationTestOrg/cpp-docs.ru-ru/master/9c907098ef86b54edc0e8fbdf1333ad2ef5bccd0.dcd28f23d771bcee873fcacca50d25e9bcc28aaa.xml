{"nodes":[{"pos":[12,34],"content":"_swab | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"_swab | Microsoft Docs","pos":[0,22]}]},{"pos":[1000,1005],"content":"_swab","linkify":"_swab","nodes":[{"content":"_swab","pos":[0,5]}]},{"content":"Swaps bytes.","pos":[1006,1018]},{"pos":[1027,1033],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[1121,1131],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Data to be copied and swapped.","pos":[1144,1174]},{"content":"Storage location for swapped data.","pos":[1191,1225]},{"content":"Number of bytes to be copied and swapped.","pos":[1239,1280]},{"pos":[1289,1301],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"content":"The <ph id=\"ph1\">`swab`</ph> function does not return a value.","pos":[1303,1347],"source":"The `swab` function does not return a value."},{"content":"The function sets <ph id=\"ph1\">`errno`</ph> to <ph id=\"ph2\">`EINVAL`</ph> if either the <ph id=\"ph3\">`src`</ph> or <ph id=\"ph4\">`dest`</ph> pointer is null or <ph id=\"ph5\">`n`</ph> is less than zero, and the invalid parameter handler is invoked, as described in <bpt id=\"p1\">[</bpt>Parameter Validation<ept id=\"p1\">](../../c-runtime-library/parameter-validation.md)</ept>.","pos":[1348,1592],"source":" The function sets `errno` to `EINVAL` if either the `src` or `dest` pointer is null or `n` is less than zero, and the invalid parameter handler is invoked, as described in [Parameter Validation](../../c-runtime-library/parameter-validation.md)."},{"pos":[1599,1771],"content":"See <bpt id=\"p1\">[</bpt>_doserrno, errno, _sys_errlist, and _sys_nerr<ept id=\"p1\">](../../c-runtime-library/errno-doserrno-sys-errlist-and-sys-nerr.md)</ept> for more information on this and other return codes.","source":"See [_doserrno, errno, _sys_errlist, and _sys_nerr](../../c-runtime-library/errno-doserrno-sys-errlist-and-sys-nerr.md) for more information on this and other return codes."},{"pos":[1777,1784],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"If <ph id=\"ph1\">`n`</ph> is even, the <ph id=\"ph2\">`_swab`</ph> function copies <ph id=\"ph3\">`n`</ph> bytes from <ph id=\"ph4\">`src`</ph>, swaps each pair of adjacent bytes, and stores the result at <ph id=\"ph5\">`dest`</ph>.","pos":[1788,1921],"source":"If `n` is even, the `_swab` function copies `n` bytes from `src`, swaps each pair of adjacent bytes, and stores the result at `dest`."},{"content":"If <ph id=\"ph1\">`n`</ph> is odd, <ph id=\"ph2\">`_swab`</ph> copies and swaps the first <ph id=\"ph3\">`n-1`</ph> bytes of <ph id=\"ph4\">`src`</ph>, and the final byte is not copied.","pos":[1922,2027],"source":" If `n` is odd, `_swab` copies and swaps the first `n-1` bytes of `src`, and the final byte is not copied."},{"content":"The <ph id=\"ph1\">`_swab`</ph> function is typically used to prepare binary data for transfer to a machine that uses a different byte order.","pos":[2028,2149],"source":" The `_swab` function is typically used to prepare binary data for transfer to a machine that uses a different byte order."},{"pos":[2158,2170],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"content":"Routine","pos":[2174,2181]},{"content":"Required header","pos":[2182,2197]},{"content":"C: <ph id=\"ph1\">\\&lt;</ph>stdlib.h&gt; C++: <ph id=\"ph2\">\\&lt;</ph>cstdlib&gt; or <ph id=\"ph3\">\\&lt;</ph>stdlib.h&gt;","pos":[2250,2295],"source":"C: \\<stdlib.h> C++: \\<cstdlib> or \\<stdlib.h>"},{"pos":[2303,2427],"content":"For additional compatibility information, see <bpt id=\"p1\">[</bpt>Compatibility<ept id=\"p1\">](../../c-runtime-library/compatibility.md)</ept> in the Introduction.","source":"For additional compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md) in the Introduction."},{"pos":[2436,2443],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[2996,3004],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"pos":[3008,3077],"content":"<bpt id=\"p1\">[</bpt>Buffer Manipulation<ept id=\"p1\">](../../c-runtime-library/buffer-manipulation.md)</ept>","source":"[Buffer Manipulation](../../c-runtime-library/buffer-manipulation.md)"}],"content":"---\ntitle: \"_swab | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\napiname: \n  - \"_swab\"\n  - \"stdlib/_swab\"\napilocation: \n  - \"msvcrt.dll\"\n  - \"msvcr80.dll\"\n  - \"msvcr90.dll\"\n  - \"msvcr100.dll\"\n  - \"msvcr100_clr0400.dll\"\n  - \"msvcr110.dll\"\n  - \"msvcr110_clr0400.dll\"\n  - \"msvcr120.dll\"\n  - \"msvcr120_clr0400.dll\"\n  - \"ucrtbase.dll\"\n  - \"api-ms-win-crt-utility-l1-1-0.dll\"\napitype: \"DLLExport\"\nf1_keywords: \n  - \"_swab\"\n  - \"stdlib/_swab\"\ndev_langs: \n  - \"C++\"\n  - \"C\"\nhelpviewer_keywords: \n  - \"_swab function\"\n  - \"swapping bytes\"\n  - \"swab function\"\n  - \"bytes, swapping\"\nms.assetid: 017142f2-050c-4f6a-8b49-6b094f58ec94\ncaps.latest.revision: 18\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# _swab\nSwaps bytes.  \n  \n## Syntax  \n  \n```  \nvoid _swab(  \n   char *src,  \n   char *dest,  \n   int n   \n);  \n```  \n  \n## Parameters  \n `src`  \n Data to be copied and swapped.  \n  \n `dest`  \n Storage location for swapped data.  \n  \n `n`  \n Number of bytes to be copied and swapped.  \n  \n## Return value\n The `swab` function does not return a value. The function sets `errno` to `EINVAL` if either the `src` or `dest` pointer is null or `n` is less than zero, and the invalid parameter handler is invoked, as described in [Parameter Validation](../../c-runtime-library/parameter-validation.md).  \n  \n See [_doserrno, errno, _sys_errlist, and _sys_nerr](../../c-runtime-library/errno-doserrno-sys-errlist-and-sys-nerr.md) for more information on this and other return codes.\n \n## Remarks  \n If `n` is even, the `_swab` function copies `n` bytes from `src`, swaps each pair of adjacent bytes, and stores the result at `dest`. If `n` is odd, `_swab` copies and swaps the first `n-1` bytes of `src`, and the final byte is not copied. The `_swab` function is typically used to prepare binary data for transfer to a machine that uses a different byte order.  \n  \n## Requirements  \n|Routine|Required header|  \n|-------------|---------------------|  \n|`_swab`|C: \\<stdlib.h> C++: \\<cstdlib> or \\<stdlib.h>|  \n  \n For additional compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md) in the Introduction.  \n  \n## Example  \n```c \n// crt_swab.c  \n  \n#include <stdlib.h>  \n#include <stdio.h>  \n  \nchar from[] = \"BADCFEHGJILKNMPORQTSVUXWZY\";  \nchar to[] =   \"...........................\";  \n  \nint main()  \n{  \n    printf(\"Before: %s  %d bytes\\n        %s\\n\\n\", from, sizeof(from), to);  \n    _swab(from, to, sizeof(from));  \n    printf(\"After:  %s\\n        %s\\n\\n\", from, to);  \n}```  \n  \n```Output  \nBefore: BADCFEHGJILKNMPORQTSVUXWZY  27 bytes  \n        ...........................  \n  \nAfter:  BADCFEHGJILKNMPORQTSVUXWZY  \n        ABCDEFGHIJKLMNOPQRSTUVWXYZ.  \n```  \n  \n## See Also  \n [Buffer Manipulation](../../c-runtime-library/buffer-manipulation.md)"}