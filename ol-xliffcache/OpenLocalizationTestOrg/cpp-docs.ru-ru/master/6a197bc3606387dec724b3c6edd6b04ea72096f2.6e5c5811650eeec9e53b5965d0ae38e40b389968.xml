{"nodes":[{"pos":[12,52],"content":"vector::erase (STL-CLR) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"vector::erase (STL-CLR) | Microsoft Docs","pos":[0,40]}]},{"content":"vector::erase (STL/CLR)","pos":[628,651]},{"content":"Removes elements at specified positions.","pos":[652,692]},{"content":"Syntax","pos":[701,707]},{"content":"Parameters","pos":[816,826]},{"content":"first","pos":[830,835]},{"content":"Beginning of range to erase.","pos":[839,867]},{"content":"last","pos":[874,878]},{"content":"End of range to erase.","pos":[882,904]},{"content":"where","pos":[911,916]},{"content":"Element to erase.","pos":[920,937]},{"content":"Remarks","pos":[946,953]},{"content":"The first member function removes the element of the controlled sequence pointed to by <ph id=\"ph1\">`where`</ph>.","pos":[957,1052],"source":"The first member function removes the element of the controlled sequence pointed to by `where`."},{"content":"You use it to remove a single element.","pos":[1053,1091]},{"content":"The second member function removes the elements of the controlled sequence in the range <ph id=\"ph1\">`[``first``,`</ph> <ph id=\"ph2\">`last``)`</ph>.","pos":[1098,1210],"source":"The second member function removes the elements of the controlled sequence in the range `[``first``,` `last``)`."},{"content":"You use it to remove zero or more contiguous elements.","pos":[1211,1265]},{"pos":[1272,1476],"content":"Both member functions return an iterator that designates the first element remaining beyond any elements removed, or <bpt id=\"p1\">[</bpt>vector::end (STL/CLR)<ept id=\"p1\">](../dotnet/vector-end-stl-clr.md)</ept><ph id=\"ph1\">`()`</ph> if no such element exists.","source":"Both member functions return an iterator that designates the first element remaining beyond any elements removed, or [vector::end (STL/CLR)](../dotnet/vector-end-stl-clr.md)`()` if no such element exists."},{"content":"When erasing elements, the number of element copies is linear in the number of elements between the end of the erasure and the nearer end of the sequence.","pos":[1483,1637]},{"content":"(When erasing one or more elements at either end of the sequence, no element copies occur.)","pos":[1638,1729]},{"content":"Example","pos":[1738,1745]},{"content":"Requirements","pos":[2903,2915]},{"pos":[2919,2947],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> <ph id=\"ph1\">\\&lt;</ph>cliext/vector&gt;","source":"**Header:** \\<cliext/vector>"},{"pos":[2954,2975],"content":"<bpt id=\"p1\">**</bpt>Namespace:<ept id=\"p1\">**</ept> cliext","source":"**Namespace:** cliext"},{"content":"See Also","pos":[2984,2992]},{"content":"vector (STL/CLR)","pos":[2997,3013]},{"content":"vector::clear (STL/CLR)","pos":[3049,3072]}],"content":"---\ntitle: \"vector::erase (STL-CLR) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"cliext::vector::erase\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"erase member [STL/CLR]\"\nms.assetid: 624905eb-83c0-499b-a07a-c10aebd7acc3\ncaps.latest.revision: 17\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# vector::erase (STL/CLR)\nRemoves elements at specified positions.  \n  \n## Syntax  \n  \n```  \niterator erase(iterator where);  \niterator erase(iterator first, iterator last);  \n```  \n  \n#### Parameters  \n first  \n Beginning of range to erase.  \n  \n last  \n End of range to erase.  \n  \n where  \n Element to erase.  \n  \n## Remarks  \n The first member function removes the element of the controlled sequence pointed to by `where`. You use it to remove a single element.  \n  \n The second member function removes the elements of the controlled sequence in the range `[``first``,` `last``)`. You use it to remove zero or more contiguous elements.  \n  \n Both member functions return an iterator that designates the first element remaining beyond any elements removed, or [vector::end (STL/CLR)](../dotnet/vector-end-stl-clr.md)`()` if no such element exists.  \n  \n When erasing elements, the number of element copies is linear in the number of elements between the end of the erasure and the nearer end of the sequence. (When erasing one or more elements at either end of the sequence, no element copies occur.)  \n  \n## Example  \n  \n```  \n// cliext_vector_erase.cpp   \n// compile with: /clr   \n#include <cliext/vector>   \n  \nint main()   \n    {   \n    cliext::vector<wchar_t> c1;   \n    c1.push_back(L'a');   \n    c1.push_back(L'b');   \n    c1.push_back(L'c');   \n  \n// display initial contents \" a b c\"   \n    for each (wchar_t elem in c1)   \n        System::Console::Write(\" {0}\", elem);   \n    System::Console::WriteLine();   \n  \n// erase an element and reinspect   \n    System::Console::WriteLine(\"erase(begin()) = {0}\",   \n        *c1.erase(c1.begin()));   \n  \n// add elements and display \" b c d e\"   \n    c1.push_back(L'd');   \n    c1.push_back(L'e');   \n    for each (wchar_t elem in c1)   \n        System::Console::Write(\" {0}\", elem);   \n    System::Console::WriteLine();   \n  \n// erase all but end   \n    cliext::vector<wchar_t>::iterator it = c1.end();   \n    System::Console::WriteLine(\"erase(begin(), end()-1) = {0}\",   \n        *c1.erase(c1.begin(), --it));   \n    System::Console::WriteLine(\"size() = {0}\", c1.size());   \n    return (0);   \n    }  \n  \n```  \n  \n```Output  \n a b c  \nerase(begin()) = b  \n b c d e  \nerase(begin(), end()-1) = e  \nsize() = 1  \n```  \n  \n## Requirements  \n **Header:** \\<cliext/vector>  \n  \n **Namespace:** cliext  \n  \n## See Also  \n [vector (STL/CLR)](../dotnet/vector-stl-clr.md)   \n [vector::clear (STL/CLR)](../dotnet/vector-clear-stl-clr.md)"}