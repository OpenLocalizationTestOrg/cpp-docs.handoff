{"nodes":[{"pos":[12,38],"content":"vi_progid | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"vi_progid | Microsoft Docs","pos":[0,26]}]},{"content":"vi_progid","pos":[616,625]},{"content":"Specifies a version-independent form of the ProgID.","pos":[626,677]},{"content":"Syntax","pos":[686,692]},{"content":"Parameters","pos":[759,769]},{"content":"name","pos":[774,778]},{"content":"The version-independent ProgID representing the object.","pos":[783,838]},{"content":"ProgIDs present a human-readable version of the class identifier (CLSID) used to identify COM/ActiveX objects.","pos":[845,955]},{"content":"Remarks","pos":[964,971]},{"content":"The <bpt id=\"p1\">**</bpt>vi_progid<ept id=\"p1\">**</ept> C++ attribute lets you specify a version-independent ProgID for a COM object.","pos":[975,1070],"source":"The **vi_progid** C++ attribute lets you specify a version-independent ProgID for a COM object."},{"content":"A ProgID has the form <bpt id=\"p1\">*</bpt>name1<ept id=\"p1\">*</ept>.<bpt id=\"p2\">*</bpt>name2<ept id=\"p2\">*</ept>.<bpt id=\"p3\">*</bpt>version<ept id=\"p3\">*</ept>.","pos":[1071,1119],"source":" A ProgID has the form *name1*.*name2*.*version*."},{"content":"A version-independent ProgID does not have a <bpt id=\"p1\">*</bpt>version<ept id=\"p1\">*</ept>.","pos":[1120,1175],"source":" A version-independent ProgID does not have a *version*."},{"content":"It is possible to specify both the <bpt id=\"p1\">**</bpt>progid<ept id=\"p1\">**</ept> and the <bpt id=\"p2\">**</bpt>vi_progid<ept id=\"p2\">**</ept> attributes on a coclass.","pos":[1176,1268],"source":" It is possible to specify both the **progid** and the **vi_progid** attributes on a coclass."},{"content":"If you do not specify <bpt id=\"p1\">**</bpt>vi_progid<ept id=\"p1\">**</ept>, the version-independent ProgID is the value specified by the <bpt id=\"p2\">[</bpt>progid<ept id=\"p2\">](../windows/progid.md)</ept> attribute.","pos":[1269,1408],"source":" If you do not specify **vi_progid**, the version-independent ProgID is the value specified by the [progid](../windows/progid.md) attribute."},{"pos":[1415,1583],"content":"<bpt id=\"p1\">**</bpt>vi_progid<ept id=\"p1\">**</ept> implies the <bpt id=\"p2\">**</bpt>coclass<ept id=\"p2\">**</ept> attribute, that is, if you specify <bpt id=\"p3\">**</bpt>vi_progid<ept id=\"p3\">**</ept>, it is the same thing as specifying the <bpt id=\"p4\">**</bpt>coclass<ept id=\"p4\">**</ept> and <bpt id=\"p5\">**</bpt>vi_progid<ept id=\"p5\">**</ept> attributes.","source":"**vi_progid** implies the **coclass** attribute, that is, if you specify **vi_progid**, it is the same thing as specifying the **coclass** and **vi_progid** attributes."},{"content":"The <bpt id=\"p1\">**</bpt>vi_progid<ept id=\"p1\">**</ept> attribute causes a class to be automatically registered under the specified name.","pos":[1590,1689],"source":"The **vi_progid** attribute causes a class to be automatically registered under the specified name."},{"content":"The generated .idl file will not display the ProgID value.","pos":[1690,1748]},{"pos":[1755,1956],"content":"In ATL projects, If the <bpt id=\"p1\">[</bpt>coclass<ept id=\"p1\">](../windows/coclass.md)</ept> attribute is also present, the specified ProgID is used by the <bpt id=\"p2\">**</bpt>GetVersionIndependentProgID<ept id=\"p2\">**</ept> function (inserted by the <bpt id=\"p3\">**</bpt>coclass<ept id=\"p3\">**</ept> attribute).","source":"In ATL projects, If the [coclass](../windows/coclass.md) attribute is also present, the specified ProgID is used by the **GetVersionIndependentProgID** function (inserted by the **coclass** attribute)."},{"content":"Example","pos":[1965,1972]},{"pos":[1976,2059],"content":"See the <bpt id=\"p1\">[</bpt>coclass<ept id=\"p1\">](../windows/coclass.md)</ept> example for a sample use of <bpt id=\"p2\">**</bpt>vi_progid<ept id=\"p2\">**</ept>.","source":"See the [coclass](../windows/coclass.md) example for a sample use of **vi_progid**."},{"content":"Requirements","pos":[2068,2080]},{"content":"Attribute Context","pos":[2090,2107]},{"content":"Applies to","pos":[2130,2140]},{"pos":[2143,2153],"content":"<bpt id=\"p1\">**</bpt>class<ept id=\"p1\">**</ept>,","source":"**class**, "},{"content":"Repeatable","pos":[2169,2179]},{"content":"No","pos":[2182,2184]},{"content":"Required attributes","pos":[2191,2210]},{"content":"None","pos":[2213,2217]},{"content":"Invalid attributes","pos":[2224,2242]},{"content":"None","pos":[2245,2249]},{"pos":[2257,2367],"content":"For more information about the attribute contexts, see <bpt id=\"p1\">[</bpt>Attribute Contexts<ept id=\"p1\">](../windows/attribute-contexts.md)</ept>.","source":"For more information about the attribute contexts, see [Attribute Contexts](../windows/attribute-contexts.md)."},{"content":"See Also","pos":[2376,2384]},{"content":"IDL Attributes","pos":[2389,2403]},{"content":"Typedef, Enum, Union, and Struct Attributes","pos":[2440,2483]},{"content":"Class Attributes","pos":[2546,2562]},{"content":"ProgID Key","pos":[2601,2611]},{"content":"Attributes Samples","pos":[2678,2696]}],"content":"---\ntitle: \"vi_progid | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"language-reference\"\nf1_keywords: \n  - \"vc-attr.vi_progid\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"vi_progid attribute\"\nms.assetid: a52449be-b93e-4111-b883-44bb8da53261\ncaps.latest.revision: 10\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# vi_progid\nSpecifies a version-independent form of the ProgID.  \n  \n## Syntax  \n  \n```  \n  \n      [ vi_progid(  \n   name  \n) ];  \n```  \n  \n#### Parameters  \n *name*  \n The version-independent ProgID representing the object.  \n  \n ProgIDs present a human-readable version of the class identifier (CLSID) used to identify COM/ActiveX objects.  \n  \n## Remarks  \n The **vi_progid** C++ attribute lets you specify a version-independent ProgID for a COM object. A ProgID has the form *name1*.*name2*.*version*. A version-independent ProgID does not have a *version*. It is possible to specify both the **progid** and the **vi_progid** attributes on a coclass. If you do not specify **vi_progid**, the version-independent ProgID is the value specified by the [progid](../windows/progid.md) attribute.  \n  \n **vi_progid** implies the **coclass** attribute, that is, if you specify **vi_progid**, it is the same thing as specifying the **coclass** and **vi_progid** attributes.  \n  \n The **vi_progid** attribute causes a class to be automatically registered under the specified name. The generated .idl file will not display the ProgID value.  \n  \n In ATL projects, If the [coclass](../windows/coclass.md) attribute is also present, the specified ProgID is used by the **GetVersionIndependentProgID** function (inserted by the **coclass** attribute).  \n  \n## Example  \n See the [coclass](../windows/coclass.md) example for a sample use of **vi_progid**.  \n  \n## Requirements  \n  \n### Attribute Context  \n  \n|||  \n|-|-|  \n|**Applies to**|**class**, `struct`|  \n|**Repeatable**|No|  \n|**Required attributes**|None|  \n|**Invalid attributes**|None|  \n  \n For more information about the attribute contexts, see [Attribute Contexts](../windows/attribute-contexts.md).  \n  \n## See Also  \n [IDL Attributes](../windows/idl-attributes.md)   \n [Typedef, Enum, Union, and Struct Attributes](../windows/typedef-enum-union-and-struct-attributes.md)   \n [Class Attributes](../windows/class-attributes.md)   \n [ProgID Key](http://msdn.microsoft.com/library/windows/desktop/dd542719)   \n [Attributes Samples](http://msdn.microsoft.com/en-us/558ebdb2-082f-44dc-b442-d8d33bf7bdb8)"}