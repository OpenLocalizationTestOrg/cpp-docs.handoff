{"nodes":[{"pos":[12,46],"content":"CHeaderCtrl Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"CHeaderCtrl Class | Microsoft Docs","pos":[0,34]}]},{"pos":[697,714],"content":"CHeaderCtrl Class","linkify":"CHeaderCtrl Class","nodes":[{"content":"CHeaderCtrl Class","pos":[0,17]}]},{"content":"Provides the functionality of the Windows common header control.","pos":[715,779]},{"pos":[788,794],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[852,859],"content":"Members","linkify":"Members","nodes":[{"content":"Members","pos":[0,7]}]},{"pos":[869,888],"content":"Public Constructors","linkify":"Public Constructors","nodes":[{"content":"Public Constructors","pos":[0,19]}]},{"content":"Name","pos":[895,899]},{"content":"Description","pos":[900,911]},{"pos":[949,1002],"content":"<bpt id=\"p1\">[</bpt>CHeaderCtrl::CHeaderCtrl<ept id=\"p1\">](#cheaderctrl__cheaderctrl)</ept>","source":"[CHeaderCtrl::CHeaderCtrl](#cheaderctrl__cheaderctrl)"},{"pos":[1003,1037],"content":"Constructs a <ph id=\"ph1\">`CHeaderCtrl`</ph> object.","source":"Constructs a `CHeaderCtrl` object."},{"pos":[1048,1062],"content":"Public Methods","linkify":"Public Methods","nodes":[{"content":"Public Methods","pos":[0,14]}]},{"content":"Name","pos":[1069,1073]},{"content":"Description","pos":[1074,1085]},{"pos":[1123,1184],"content":"<bpt id=\"p1\">[</bpt>CHeaderCtrl::ClearAllFilters<ept id=\"p1\">](#cheaderctrl__clearallfilters)</ept>","source":"[CHeaderCtrl::ClearAllFilters](#cheaderctrl__clearallfilters)"},{"content":"Clears all filters for a header control.","pos":[1185,1225]},{"pos":[1230,1283],"content":"<bpt id=\"p1\">[</bpt>CHeaderCtrl::ClearFilter<ept id=\"p1\">](#cheaderctrl__clearfilter)</ept>","source":"[CHeaderCtrl::ClearFilter](#cheaderctrl__clearfilter)"},{"content":"Clears the filter for a header control.","pos":[1284,1323]},{"pos":[1328,1371],"content":"<bpt id=\"p1\">[</bpt>CHeaderCtrl::Create<ept id=\"p1\">](#cheaderctrl__create)</ept>","source":"[CHeaderCtrl::Create](#cheaderctrl__create)"},{"pos":[1372,1439],"content":"Creates a header control and attaches it to a <ph id=\"ph1\">`CHeaderCtrl`</ph> object.","source":"Creates a header control and attaches it to a `CHeaderCtrl` object."},{"pos":[1444,1505],"content":"<bpt id=\"p1\">[</bpt>CHeaderCtrl::CreateDragImage<ept id=\"p1\">](#cheaderctrl__createdragimage)</ept>","source":"[CHeaderCtrl::CreateDragImage](#cheaderctrl__createdragimage)"},{"content":"Creates a transparent version of an item's image within a header control.","pos":[1506,1579]},{"pos":[1584,1631],"content":"<bpt id=\"p1\">[</bpt>CHeaderCtrl::CreateEx<ept id=\"p1\">](#cheaderctrl__createex)</ept>","source":"[CHeaderCtrl::CreateEx](#cheaderctrl__createex)"},{"pos":[1632,1740],"content":"Creates a header control with the specified Windows extended styles and attaches it to a <ph id=\"ph1\">`CListCtrl`</ph> object.","source":"Creates a header control with the specified Windows extended styles and attaches it to a `CListCtrl` object."},{"pos":[1745,1796],"content":"<bpt id=\"p1\">[</bpt>CHeaderCtrl::DeleteItem<ept id=\"p1\">](#cheaderctrl__deleteitem)</ept>","source":"[CHeaderCtrl::DeleteItem](#cheaderctrl__deleteitem)"},{"content":"Deletes an item from a header control.","pos":[1797,1835]},{"pos":[1840,1887],"content":"<bpt id=\"p1\">[</bpt>CHeaderCtrl::DrawItem<ept id=\"p1\">](#cheaderctrl__drawitem)</ept>","source":"[CHeaderCtrl::DrawItem](#cheaderctrl__drawitem)"},{"content":"Draws the specified item of a header control.","pos":[1888,1933]},{"pos":[1938,1989],"content":"<bpt id=\"p1\">[</bpt>CHeaderCtrl::EditFilter<ept id=\"p1\">](#cheaderctrl__editfilter)</ept>","source":"[CHeaderCtrl::EditFilter](#cheaderctrl__editfilter)"},{"content":"Starts editing the specified filter of a header control.","pos":[1990,2046]},{"pos":[2051,2112],"content":"<bpt id=\"p1\">[</bpt>CHeaderCtrl::GetBitmapMargin<ept id=\"p1\">](#cheaderctrl__getbitmapmargin)</ept>","source":"[CHeaderCtrl::GetBitmapMargin](#cheaderctrl__getbitmapmargin)"},{"content":"Retrieves the width of the margin of a bitmap in a header control.","pos":[2113,2179]},{"pos":[2184,2243],"content":"<bpt id=\"p1\">[</bpt>CHeaderCtrl::GetFocusedItem<ept id=\"p1\">](#cheaderctrl__getfocuseditem)</ept>","source":"[CHeaderCtrl::GetFocusedItem](#cheaderctrl__getfocuseditem)"},{"content":"Gets the identifier of the item in the current header control that has the focus.","pos":[2244,2325]},{"pos":[2330,2385],"content":"<bpt id=\"p1\">[</bpt>CHeaderCtrl::GetImageList<ept id=\"p1\">](#cheaderctrl__getimagelist)</ept>","source":"[CHeaderCtrl::GetImageList](#cheaderctrl__getimagelist)"},{"content":"Retrieves the handle of an image list used for drawing header items in a header control.","pos":[2386,2474]},{"pos":[2479,2524],"content":"<bpt id=\"p1\">[</bpt>CHeaderCtrl::GetItem<ept id=\"p1\">](#cheaderctrl__getitem)</ept>","source":"[CHeaderCtrl::GetItem](#cheaderctrl__getitem)"},{"content":"Retrieves information about an item in a header control.","pos":[2525,2581]},{"pos":[2586,2641],"content":"<bpt id=\"p1\">[</bpt>CHeaderCtrl::GetItemCount<ept id=\"p1\">](#cheaderctrl__getitemcount)</ept>","source":"[CHeaderCtrl::GetItemCount](#cheaderctrl__getitemcount)"},{"content":"Retrieves a count of the items in a header control.","pos":[2642,2693]},{"pos":[2698,2767],"content":"<bpt id=\"p1\">[</bpt>CHeaderCtrl::GetItemDropDownRect<ept id=\"p1\">](#cheaderctrl__getitemdropdownrect)</ept>","source":"[CHeaderCtrl::GetItemDropDownRect](#cheaderctrl__getitemdropdownrect)"},{"content":"Gets the bounding rectangle information for the specified drop-down button in a header control.","pos":[2768,2863]},{"pos":[2868,2921],"content":"<bpt id=\"p1\">[</bpt>CHeaderCtrl::GetItemRect<ept id=\"p1\">](#cheaderctrl__getitemrect)</ept>","source":"[CHeaderCtrl::GetItemRect](#cheaderctrl__getitemrect)"},{"content":"Retrieves the bounding rectangle for a given item in a header control.","pos":[2922,2992]},{"pos":[2997,3054],"content":"<bpt id=\"p1\">[</bpt>CHeaderCtrl::GetOrderArray<ept id=\"p1\">](#cheaderctrl__getorderarray)</ept>","source":"[CHeaderCtrl::GetOrderArray](#cheaderctrl__getorderarray)"},{"content":"Retrieves the left-to-right order of items in a header control.","pos":[3055,3118]},{"pos":[3123,3184],"content":"<bpt id=\"p1\">[</bpt>CHeaderCtrl::GetOverflowRect<ept id=\"p1\">](#cheaderctrl__getoverflowrect)</ept>","source":"[CHeaderCtrl::GetOverflowRect](#cheaderctrl__getoverflowrect)"},{"content":"Gets the bounding rectangle of the overflow button for the current header control.","pos":[3185,3267]},{"pos":[3272,3317],"content":"<bpt id=\"p1\">[</bpt>CHeaderCtrl::HitTest<ept id=\"p1\">](#cheaderctrl__hittest)</ept>","source":"[CHeaderCtrl::HitTest](#cheaderctrl__hittest)"},{"content":"Determines which header item, if any, is located at a specified point.","pos":[3318,3388]},{"pos":[3393,3444],"content":"<bpt id=\"p1\">[</bpt>CHeaderCtrl::InsertItem<ept id=\"p1\">](#cheaderctrl__insertitem)</ept>","source":"[CHeaderCtrl::InsertItem](#cheaderctrl__insertitem)"},{"content":"Inserts a new item into a header control.","pos":[3445,3486]},{"pos":[3491,3534],"content":"<bpt id=\"p1\">[</bpt>CHeaderCtrl::Layout<ept id=\"p1\">](#cheaderctrl__layout)</ept>","source":"[CHeaderCtrl::Layout](#cheaderctrl__layout)"},{"content":"Retrieves the size and position of a header control within a given rectangle.","pos":[3535,3612]},{"pos":[3617,3672],"content":"<bpt id=\"p1\">[</bpt>CHeaderCtrl::OrderToIndex<ept id=\"p1\">](#cheaderctrl__ordertoindex)</ept>","source":"[CHeaderCtrl::OrderToIndex](#cheaderctrl__ordertoindex)"},{"content":"Retrieves the index value for an item based on its order in the header control.","pos":[3673,3752]},{"pos":[3757,3818],"content":"<bpt id=\"p1\">[</bpt>CHeaderCtrl::SetBitmapMargin<ept id=\"p1\">](#cheaderctrl__setbitmapmargin)</ept>","source":"[CHeaderCtrl::SetBitmapMargin](#cheaderctrl__setbitmapmargin)"},{"content":"Sets the width of the margin of a bitmap in a header control.","pos":[3819,3880]},{"pos":[3885,3960],"content":"<bpt id=\"p1\">[</bpt>CHeaderCtrl::SetFilterChangeTimeout<ept id=\"p1\">](#cheaderctrl__setfilterchangetimeout)</ept>","source":"[CHeaderCtrl::SetFilterChangeTimeout](#cheaderctrl__setfilterchangetimeout)"},{"pos":[3961,4104],"content":"Sets the timeout interval between the time a change takes place in the filter attributes and the posting of an <ph id=\"ph1\">`HDN_FILTERCHANGE`</ph> notification.","source":"Sets the timeout interval between the time a change takes place in the filter attributes and the posting of an `HDN_FILTERCHANGE` notification."},{"pos":[4109,4168],"content":"<bpt id=\"p1\">[</bpt>CHeaderCtrl::SetFocusedItem<ept id=\"p1\">](#cheaderctrl__setfocuseditem)</ept>","source":"[CHeaderCtrl::SetFocusedItem](#cheaderctrl__setfocuseditem)"},{"content":"Sets the focus to a specified header item in the current header control.","pos":[4169,4241]},{"pos":[4246,4303],"content":"<bpt id=\"p1\">[</bpt>CHeaderCtrl::SetHotDivider<ept id=\"p1\">](#cheaderctrl__sethotdivider)</ept>","source":"[CHeaderCtrl::SetHotDivider](#cheaderctrl__sethotdivider)"},{"content":"Changes the divider between header items to indicate a manual drag and drop of a header item.","pos":[4304,4397]},{"pos":[4402,4457],"content":"<bpt id=\"p1\">[</bpt>CHeaderCtrl::SetImageList<ept id=\"p1\">](#cheaderctrl__setimagelist)</ept>","source":"[CHeaderCtrl::SetImageList](#cheaderctrl__setimagelist)"},{"content":"Assigns an image list to a header control.","pos":[4458,4500]},{"pos":[4505,4550],"content":"<bpt id=\"p1\">[</bpt>CHeaderCtrl::SetItem<ept id=\"p1\">](#cheaderctrl__setitem)</ept>","source":"[CHeaderCtrl::SetItem](#cheaderctrl__setitem)"},{"content":"Sets the attributes of the specified item in a header control.","pos":[4551,4613]},{"pos":[4618,4675],"content":"<bpt id=\"p1\">[</bpt>CHeaderCtrl::SetOrderArray<ept id=\"p1\">](#cheaderctrl__setorderarray)</ept>","source":"[CHeaderCtrl::SetOrderArray](#cheaderctrl__setorderarray)"},{"content":"Sets the left-to-right order of items in a header control.","pos":[4676,4734]},{"pos":[4744,4751],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"A header control is a window that is usually positioned above a set of columns of text or numbers.","pos":[4755,4853]},{"content":"It contains a title for each column, and it can be divided into parts.","pos":[4854,4924]},{"content":"The user can drag the dividers that separate the parts to set the width of each column.","pos":[4925,5012]},{"content":"For an illustration of a header control, see <bpt id=\"p1\">[</bpt>Header Controls<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb775238)</ept>.","pos":[5013,5136],"source":" For an illustration of a header control, see [Header Controls](http://msdn.microsoft.com/library/windows/desktop/bb775238)."},{"pos":[5143,5293],"content":"This control (and therefore the <ph id=\"ph1\">`CHeaderCtrl`</ph> class) is available only to programs that run under Windows 95/98 and Windows NT version 3.51 and later.","source":"This control (and therefore the `CHeaderCtrl` class) is available only to programs that run under Windows 95/98 and Windows NT version 3.51 and later."},{"content":"Functionality added for Windows 95/Internet Explorer 4.0 common controls includes the following:","pos":[5300,5396]},{"content":"Header item custom ordering.","pos":[5406,5434]},{"content":"Header item drag and drop, for reordering of header items.","pos":[5444,5502]},{"content":"Use the <ph id=\"ph1\">`HDS_DRAGDROP`</ph> style when you create the <ph id=\"ph2\">`CHeaderCtrl`</ph> object.","pos":[5503,5573],"source":" Use the `HDS_DRAGDROP` style when you create the `CHeaderCtrl` object."},{"content":"Header column text constantly viewable during column resizing.","pos":[5583,5645]},{"content":"Use the <ph id=\"ph1\">`HDS_FULLDRAG`</ph> style when you create a <ph id=\"ph2\">`CHeaderCtrl`</ph> object.","pos":[5646,5714],"source":" Use the `HDS_FULLDRAG` style when you create a `CHeaderCtrl` object."},{"content":"Header hot tracking, which highlights the header item when the pointer is hovering over it.","pos":[5724,5815]},{"content":"Use the <ph id=\"ph1\">`HDS_HOTTRACK`</ph> style when you create the <ph id=\"ph2\">`CHeaderCtrl`</ph> object.","pos":[5816,5886],"source":" Use the `HDS_HOTTRACK` style when you create the `CHeaderCtrl` object."},{"content":"Image list support.","pos":[5896,5915]},{"content":"Header items can contain images stored in a <ph id=\"ph1\">`CImageList`</ph> object or text.","pos":[5916,5988],"source":" Header items can contain images stored in a `CImageList` object or text."},{"pos":[5995,6141],"content":"For more information about using <ph id=\"ph1\">`CHeaderCtrl`</ph>, see <bpt id=\"p1\">[</bpt>Controls<ept id=\"p1\">](../../mfc/controls-mfc.md)</ept> and <bpt id=\"p2\">[</bpt>Using CHeaderCtrl<ept id=\"p2\">](../../mfc/using-cheaderctrl.md)</ept>.","source":"For more information about using `CHeaderCtrl`, see [Controls](../../mfc/controls-mfc.md) and [Using CHeaderCtrl](../../mfc/using-cheaderctrl.md)."},{"pos":[6150,6171],"content":"Inheritance Hierarchy","linkify":"Inheritance Hierarchy","nodes":[{"content":"Inheritance Hierarchy","pos":[0,21]}]},{"pos":[6175,6222],"content":"<bpt id=\"p1\">[</bpt>CObject<ept id=\"p1\">](../../mfc/reference/cobject-class.md)</ept>","source":"[CObject](../../mfc/reference/cobject-class.md)"},{"pos":[6229,6282],"content":"<bpt id=\"p1\">[</bpt>CCmdTarget<ept id=\"p1\">](../../mfc/reference/ccmdtarget-class.md)</ept>","source":"[CCmdTarget](../../mfc/reference/ccmdtarget-class.md)"},{"pos":[6289,6330],"content":"<bpt id=\"p1\">[</bpt>CWnd<ept id=\"p1\">](../../mfc/reference/cwnd-class.md)</ept>","source":"[CWnd](../../mfc/reference/cwnd-class.md)"},{"pos":[6359,6371],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[6375,6395],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> afxcmn.h","source":"**Header:** afxcmn.h"},{"pos":[6405,6470],"content":"<bpt id=\"p1\">&lt;a name=\"cheaderctrl__cheaderctrl\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CHeaderCtrl::CHeaderCtrl","linkify":"<a name=\"cheaderctrl__cheaderctrl\"></a>  CHeaderCtrl::CHeaderCtrl","source":"<a name=\"cheaderctrl__cheaderctrl\"></a>  CHeaderCtrl::CHeaderCtrl"},{"pos":[6474,6508],"content":"Constructs a <ph id=\"ph1\">`CHeaderCtrl`</ph> object.","source":"Constructs a `CHeaderCtrl` object."},{"pos":[6548,6555],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[6559,6654],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_MFC_CHeaderCtrl#1<ept id=\"p2\">](../../mfc/reference/codesnippet/cpp/cheaderctrl-class_1.cpp)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_MFC_CHeaderCtrl#1](../../mfc/reference/codesnippet/cpp/cheaderctrl-class_1.cpp)]"},{"pos":[6664,6737],"content":"<bpt id=\"p1\">&lt;a name=\"cheaderctrl__clearallfilters\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CHeaderCtrl::ClearAllFilters","linkify":"<a name=\"cheaderctrl__clearallfilters\"></a>  CHeaderCtrl::ClearAllFilters","source":"<a name=\"cheaderctrl__clearallfilters\"></a>  CHeaderCtrl::ClearAllFilters"},{"content":"Clears all filters for a header control.","pos":[6741,6781]},{"pos":[6830,6842],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[6846,6902],"content":"<ph id=\"ph1\">`true`</ph> if this method is successful; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if this method is successful; otherwise, `false`."},{"pos":[6912,6919],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[6923,7157],"content":"This method implements the behavior of the Win32 message <bpt id=\"p1\">[</bpt>HDM_CLEARFILTER<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb775306)</ept> with a column value of –1, as described in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"This method implements the behavior of the Win32 message [HDM_CLEARFILTER](http://msdn.microsoft.com/library/windows/desktop/bb775306) with a column value of –1, as described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"pos":[7167,7174],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[7178,7273],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_MFC_CHeaderCtrl#2<ept id=\"p2\">](../../mfc/reference/codesnippet/cpp/cheaderctrl-class_2.cpp)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_MFC_CHeaderCtrl#2](../../mfc/reference/codesnippet/cpp/cheaderctrl-class_2.cpp)]"},{"pos":[7283,7348],"content":"<bpt id=\"p1\">&lt;a name=\"cheaderctrl__clearfilter\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CHeaderCtrl::ClearFilter","linkify":"<a name=\"cheaderctrl__clearfilter\"></a>  CHeaderCtrl::ClearFilter","source":"<a name=\"cheaderctrl__clearfilter\"></a>  CHeaderCtrl::ClearFilter"},{"content":"Clears the filter for a header control.","pos":[7352,7391]},{"pos":[7447,7457],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Column value indicating which filter to clear.","pos":[7474,7520]},{"pos":[7530,7542],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[7546,7602],"content":"<ph id=\"ph1\">`true`</ph> if this method is successful; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if this method is successful; otherwise, `false`."},{"pos":[7612,7619],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[7623,7831],"content":"This method implements the behavior of the Win32 message <bpt id=\"p1\">[</bpt>HDM_CLEARFILTER<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb775306)</ept>, as described in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"This method implements the behavior of the Win32 message [HDM_CLEARFILTER](http://msdn.microsoft.com/library/windows/desktop/bb775306), as described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"pos":[7841,7848],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[7852,7947],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_MFC_CHeaderCtrl#3<ept id=\"p2\">](../../mfc/reference/codesnippet/cpp/cheaderctrl-class_3.cpp)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_MFC_CHeaderCtrl#3](../../mfc/reference/codesnippet/cpp/cheaderctrl-class_3.cpp)]"},{"pos":[7957,8012],"content":"<bpt id=\"p1\">&lt;a name=\"cheaderctrl__create\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CHeaderCtrl::Create","linkify":"<a name=\"cheaderctrl__create\"></a>  CHeaderCtrl::Create","source":"<a name=\"cheaderctrl__create\"></a>  CHeaderCtrl::Create"},{"pos":[8016,8083],"content":"Creates a header control and attaches it to a <ph id=\"ph1\">`CHeaderCtrl`</ph> object.","source":"Creates a header control and attaches it to a `CHeaderCtrl` object."},{"pos":[8213,8223],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Specifies the header control's style.","pos":[8240,8277]},{"content":"For a description of header control styles, see <bpt id=\"p1\">[</bpt>Header Control Styles<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb775241)</ept> in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","pos":[8278,8469],"source":" For a description of header control styles, see [Header Control Styles](http://msdn.microsoft.com/library/windows/desktop/bb775241) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"content":"Specifies the header control's size and position.","pos":[8486,8535]},{"content":"It can be either a <bpt id=\"p1\">[</bpt>CRect<ept id=\"p1\">](../../atl-mfc-shared/reference/crect-class.md)</ept> object or a <bpt id=\"p2\">[</bpt>RECT<ept id=\"p2\">](http://msdn.microsoft.com/library/windows/desktop/dd162897)</ept> structure.","pos":[8536,8699],"source":" It can be either a [CRect](../../atl-mfc-shared/reference/crect-class.md) object or a [RECT](http://msdn.microsoft.com/library/windows/desktop/dd162897) structure."},{"content":"Specifies the header control's parent window, usually a <ph id=\"ph1\">`CDialog`</ph>.","pos":[8722,8788],"source":" Specifies the header control's parent window, usually a `CDialog`."},{"content":"It must not be <bpt id=\"p1\">**</bpt>NULL<ept id=\"p1\">**</ept>.","pos":[8789,8813],"source":" It must not be **NULL**."},{"content":"Specifies the header control's ID.","pos":[8829,8863]},{"pos":[8873,8885],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Nonzero if initialization was successful; otherwise zero.","pos":[8889,8946]},{"pos":[8956,8963],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"You construct a <ph id=\"ph1\">`CHeaderCtrl`</ph> object in two steps.","pos":[8967,9017],"source":"You construct a `CHeaderCtrl` object in two steps."},{"content":"First, call the constructor and then call <bpt id=\"p1\">**</bpt>Create<ept id=\"p1\">**</ept>, which creates the header control and attaches it to the <ph id=\"ph1\">`CHeaderCtrl`</ph> object.","pos":[9018,9149],"source":" First, call the constructor and then call **Create**, which creates the header control and attaches it to the `CHeaderCtrl` object."},{"pos":[9156,9422],"content":"In addition to the header control styles, you can use the following common control styles to determine how the header control positions and resizes itself (see <bpt id=\"p1\">[</bpt>Common Control Styles<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb775498)</ept> for more information):","source":"In addition to the header control styles, you can use the following common control styles to determine how the header control positions and resizes itself (see [Common Control Styles](http://msdn.microsoft.com/library/windows/desktop/bb775498) for more information):"},{"pos":[9430,9593],"content":"<ph id=\"ph1\">`CCS_BOTTOM`</ph> Causes the control to position itself at the bottom of the parent window's client area and sets the width to be the same as the parent window's width.","source":"`CCS_BOTTOM` Causes the control to position itself at the bottom of the parent window's client area and sets the width to be the same as the parent window's width."},{"pos":[9601,9691],"content":"<ph id=\"ph1\">`CCS_NODIVIDER`</ph> Prevents a two-pixel highlight from being drawn at the top of the control.","source":"`CCS_NODIVIDER` Prevents a two-pixel highlight from being drawn at the top of the control."},{"content":"<ph id=\"ph1\">`CCS_NOMOVEY`</ph> Causes the control to resize and move itself horizontally, but not vertically, in response to a <ph id=\"ph2\">`WM_SIZE`</ph> message.","pos":[9699,9827],"source":"`CCS_NOMOVEY` Causes the control to resize and move itself horizontally, but not vertically, in response to a `WM_SIZE` message."},{"content":"If the <ph id=\"ph1\">`CCS_NORESIZE`</ph> style is used, this style does not apply.","pos":[9828,9891],"source":" If the `CCS_NORESIZE` style is used, this style does not apply."},{"content":"Header controls have this style by default.","pos":[9892,9935]},{"content":"<ph id=\"ph1\">`CCS_NOPARENTALIGN`</ph> Prevents the control from automatically moving to the top or bottom of the parent window.","pos":[9943,10052],"source":"`CCS_NOPARENTALIGN` Prevents the control from automatically moving to the top or bottom of the parent window."},{"content":"Instead, the control keeps its position within the parent window despite changes to the size of the parent window.","pos":[10053,10167]},{"content":"If the <ph id=\"ph1\">`CCS_TOP`</ph> or <ph id=\"ph2\">`CCS_BOTTOM`</ph> style is also used, the height is adjusted to the default, but the position and width remain unchanged.","pos":[10168,10304],"source":" If the `CCS_TOP` or `CCS_BOTTOM` style is also used, the height is adjusted to the default, but the position and width remain unchanged."},{"content":"<ph id=\"ph1\">`CCS_NORESIZE`</ph> Prevents the control from using the default width and height when setting its initial size or a new size.","pos":[10312,10432],"source":"`CCS_NORESIZE` Prevents the control from using the default width and height when setting its initial size or a new size."},{"content":"Instead, the control uses the width and height specified in the request for creation or sizing.","pos":[10433,10528]},{"pos":[10536,10693],"content":"<ph id=\"ph1\">`CCS_TOP`</ph> Causes the control to position itself at the top of the parent window's client area and sets the width to be the same as the parent window's width.","source":"`CCS_TOP` Causes the control to position itself at the top of the parent window's client area and sets the width to be the same as the parent window's width."},{"pos":[10700,10848],"content":"You can also apply the following window styles to a header control (see <bpt id=\"p1\">[</bpt>Window Styles<ept id=\"p1\">](../../mfc/reference/window-styles.md)</ept> for more information):","source":"You can also apply the following window styles to a header control (see [Window Styles](../../mfc/reference/window-styles.md) for more information):"},{"content":"<bpt id=\"p1\">**</bpt>WS_CHILD<ept id=\"p1\">**</ept> Creates a child window.","pos":[10856,10892],"source":"**WS_CHILD** Creates a child window."},{"content":"Cannot be used with the <ph id=\"ph1\">`WS_POPUP`</ph> style.","pos":[10893,10934],"source":" Cannot be used with the `WS_POPUP` style."},{"pos":[10942,11000],"content":"<bpt id=\"p1\">**</bpt>WS_VISIBLE<ept id=\"p1\">**</ept> Creates a window that is initially visible.","source":"**WS_VISIBLE** Creates a window that is initially visible."},{"pos":[11008,11068],"content":"<bpt id=\"p1\">**</bpt>WS_DISABLED<ept id=\"p1\">**</ept> Creates a window that is initially disabled.","source":"**WS_DISABLED** Creates a window that is initially disabled."},{"content":"<bpt id=\"p1\">**</bpt>WS_GROUP<ept id=\"p1\">**</ept> Specifies the first control of a group of controls in which the user can move from one control to the next with the arrow keys.","pos":[11076,11216],"source":"**WS_GROUP** Specifies the first control of a group of controls in which the user can move from one control to the next with the arrow keys."},{"content":"All controls defined with the <bpt id=\"p1\">**</bpt>WS_GROUP<ept id=\"p1\">**</ept> style after the first control belong to the same group.","pos":[11217,11315],"source":" All controls defined with the **WS_GROUP** style after the first control belong to the same group."},{"content":"The next control with the <bpt id=\"p1\">**</bpt>WS_GROUP<ept id=\"p1\">**</ept> style ends the style group and starts the next group (that is, one group ends where the next begins).","pos":[11316,11456],"source":" The next control with the **WS_GROUP** style ends the style group and starts the next group (that is, one group ends where the next begins)."},{"content":"<bpt id=\"p1\">**</bpt>WS_TABSTOP<ept id=\"p1\">**</ept> Specifies one of any number of controls through which the user can move by using the TAB key.","pos":[11464,11572],"source":"**WS_TABSTOP** Specifies one of any number of controls through which the user can move by using the TAB key."},{"content":"The TAB key moves the user to the next control specified by the <bpt id=\"p1\">**</bpt>WS_TABSTOP<ept id=\"p1\">**</ept> style.","pos":[11573,11658],"source":" The TAB key moves the user to the next control specified by the **WS_TABSTOP** style."},{"pos":[11665,11789],"content":"If you want to use extended windows styles with your control, call <bpt id=\"p1\">[</bpt>CreateEx<ept id=\"p1\">](#cheaderctrl__createex)</ept> instead of <bpt id=\"p2\">**</bpt>Create<ept id=\"p2\">**</ept>.","source":"If you want to use extended windows styles with your control, call [CreateEx](#cheaderctrl__createex) instead of **Create**."},{"pos":[11799,11806],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[11810,11905],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_MFC_CHeaderCtrl#4<ept id=\"p2\">](../../mfc/reference/codesnippet/cpp/cheaderctrl-class_4.cpp)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_MFC_CHeaderCtrl#4](../../mfc/reference/codesnippet/cpp/cheaderctrl-class_4.cpp)]"},{"pos":[11915,11974],"content":"<bpt id=\"p1\">&lt;a name=\"cheaderctrl__createex\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CHeaderCtrl::CreateEx","linkify":"<a name=\"cheaderctrl__createex\"></a>  CHeaderCtrl::CreateEx","source":"<a name=\"cheaderctrl__createex\"></a>  CHeaderCtrl::CreateEx"},{"pos":[11978,12060],"content":"Creates a control (a child window) and associate it with the <ph id=\"ph1\">`CHeaderCtrl`</ph> object.","source":"Creates a control (a child window) and associate it with the `CHeaderCtrl` object."},{"pos":[12215,12225],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Specifies the extended style of the control being created.","pos":[12244,12302]},{"content":"For a list of extended Windows styles, see the <ph id=\"ph1\">`dwExStyle`</ph> parameter for <bpt id=\"p1\">[</bpt>CreateWindowEx<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms632680)</ept> in the <ph id=\"ph2\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","pos":[12303,12512],"source":" For a list of extended Windows styles, see the `dwExStyle` parameter for [CreateWindowEx](http://msdn.microsoft.com/library/windows/desktop/ms632680) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"content":"The header control's style.","pos":[12532,12559]},{"content":"For a description of header control styles, see <bpt id=\"p1\">[</bpt>Header Control Styles<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb775241)</ept> in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","pos":[12560,12751],"source":" For a description of header control styles, see [Header Control Styles](http://msdn.microsoft.com/library/windows/desktop/bb775241) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"content":"See <bpt id=\"p1\">[</bpt>Create<ept id=\"p1\">](#cheaderctrl__create)</ept> for a list of additional styles.","pos":[12752,12819],"source":" See [Create](#cheaderctrl__create) for a list of additional styles."},{"content":"A reference to a <bpt id=\"p1\">[</bpt>RECT<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/dd162897)</ept> structure describing the size and position of the window to be created, in client coordinates of <ph id=\"ph1\">`pParentWnd`</ph>.","pos":[12836,13030],"source":" A reference to a [RECT](http://msdn.microsoft.com/library/windows/desktop/dd162897) structure describing the size and position of the window to be created, in client coordinates of `pParentWnd`."},{"content":"A pointer to the window that is the control's parent.","pos":[13053,13106]},{"content":"The control's child-window ID.","pos":[13122,13152]},{"pos":[13162,13174],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Nonzero if successful; otherwise 0.","pos":[13178,13213]},{"pos":[13223,13230],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[13234,13364],"content":"Use <ph id=\"ph1\">`CreateEx`</ph> instead of <bpt id=\"p1\">**</bpt>Create<ept id=\"p1\">**</ept> to apply extended Windows styles, specified by the Windows extended style preface <bpt id=\"p2\">**</bpt>WS_EX_<ept id=\"p2\">**</ept>.","source":"Use `CreateEx` instead of **Create** to apply extended Windows styles, specified by the Windows extended style preface **WS_EX_**."},{"pos":[13374,13447],"content":"<bpt id=\"p1\">&lt;a name=\"cheaderctrl__createdragimage\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CHeaderCtrl::CreateDragImage","linkify":"<a name=\"cheaderctrl__createdragimage\"></a>  CHeaderCtrl::CreateDragImage","source":"<a name=\"cheaderctrl__createdragimage\"></a>  CHeaderCtrl::CreateDragImage"},{"content":"Creates a transparent version of an item's image within a header control.","pos":[13451,13524]},{"pos":[13590,13600],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"The zero-based index of the item within the header control.","pos":[13616,13675]},{"content":"The image assigned to this item is the basis for the transparent image.","pos":[13676,13747]},{"pos":[13757,13769],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A pointer to a <bpt id=\"p1\">[</bpt>CImageList<ept id=\"p1\">](../../mfc/reference/cimagelist-class.md)</ept> object if successful; otherwise <bpt id=\"p2\">**</bpt>NULL<ept id=\"p2\">**</ept>.","pos":[13773,13883],"source":"A pointer to a [CImageList](../../mfc/reference/cimagelist-class.md) object if successful; otherwise **NULL**."},{"content":"The returned list contains only one image.","pos":[13884,13926]},{"pos":[13936,13943],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This member function implements the behavior of the Win32 message <bpt id=\"p1\">[</bpt>HDM_CREATEDRAGIMAGE<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb775308)</ept>, as described in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","pos":[13947,14168],"source":"This member function implements the behavior of the Win32 message [HDM_CREATEDRAGIMAGE](http://msdn.microsoft.com/library/windows/desktop/bb775308), as described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"content":"It is provided to support header item drag and drop.","pos":[14169,14221]},{"pos":[14228,14359],"content":"The <ph id=\"ph1\">`CImageList`</ph> object to which the returned pointer points is a temporary object and is deleted in the next idle-time processing.","source":"The `CImageList` object to which the returned pointer points is a temporary object and is deleted in the next idle-time processing."},{"pos":[14369,14432],"content":"<bpt id=\"p1\">&lt;a name=\"cheaderctrl__deleteitem\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CHeaderCtrl::DeleteItem","linkify":"<a name=\"cheaderctrl__deleteitem\"></a>  CHeaderCtrl::DeleteItem","source":"<a name=\"cheaderctrl__deleteitem\"></a>  CHeaderCtrl::DeleteItem"},{"content":"Deletes an item from a header control.","pos":[14436,14474]},{"pos":[14526,14536],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Specifies the zero-based index of the item to delete.","pos":[14550,14603]},{"pos":[14613,14625],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Nonzero if successful; otherwise 0.","pos":[14629,14664]},{"pos":[14674,14681],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[14685,14780],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_MFC_CHeaderCtrl#5<ept id=\"p2\">](../../mfc/reference/codesnippet/cpp/cheaderctrl-class_5.cpp)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_MFC_CHeaderCtrl#5](../../mfc/reference/codesnippet/cpp/cheaderctrl-class_5.cpp)]"},{"pos":[14790,14849],"content":"<bpt id=\"p1\">&lt;a name=\"cheaderctrl__drawitem\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CHeaderCtrl::DrawItem","linkify":"<a name=\"cheaderctrl__drawitem\"></a>  CHeaderCtrl::DrawItem","source":"<a name=\"cheaderctrl__drawitem\"></a>  CHeaderCtrl::DrawItem"},{"content":"Called by the framework when a visual aspect of an owner-draw header control changes.","pos":[14853,14938]},{"pos":[15021,15031],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"A pointer to a <bpt id=\"p1\">[</bpt>DRAWITEMSTRUCT<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb775802)</ept> structure describing the item to be painted.","pos":[15057,15193],"source":" A pointer to a [DRAWITEMSTRUCT](http://msdn.microsoft.com/library/windows/desktop/bb775802) structure describing the item to be painted."},{"pos":[15203,15210],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[15214,15325],"content":"The <bpt id=\"p1\">**</bpt>itemAction<ept id=\"p1\">**</ept> member of the <ph id=\"ph1\">`DRAWITEMSTRUCT`</ph> structure defines the drawing action that is to be performed.","source":"The **itemAction** member of the `DRAWITEMSTRUCT` structure defines the drawing action that is to be performed."},{"content":"By default, this member function does nothing.","pos":[15332,15378]},{"content":"Override this member function to implement drawing for an owner-draw <ph id=\"ph1\">`CHeaderCtrl`</ph> object.","pos":[15379,15469],"source":" Override this member function to implement drawing for an owner-draw `CHeaderCtrl` object."},{"pos":[15476,15654],"content":"The application should restore all graphics device interface (GDI) objects selected for the display context supplied in <ph id=\"ph1\">`lpDrawItemStruct`</ph> before this member function terminates.","source":"The application should restore all graphics device interface (GDI) objects selected for the display context supplied in `lpDrawItemStruct` before this member function terminates."},{"pos":[15664,15671],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[15675,15770],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_MFC_CHeaderCtrl#6<ept id=\"p2\">](../../mfc/reference/codesnippet/cpp/cheaderctrl-class_6.cpp)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_MFC_CHeaderCtrl#6](../../mfc/reference/codesnippet/cpp/cheaderctrl-class_6.cpp)]"},{"pos":[15780,15843],"content":"<bpt id=\"p1\">&lt;a name=\"cheaderctrl__editfilter\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CHeaderCtrl::EditFilter","linkify":"<a name=\"cheaderctrl__editfilter\"></a>  CHeaderCtrl::EditFilter","source":"<a name=\"cheaderctrl__editfilter\"></a>  CHeaderCtrl::EditFilter"},{"content":"Begins to edit the specified filter of a header control.","pos":[15847,15903]},{"pos":[15991,16001],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"The column to edit.","pos":[16018,16037]},{"content":"A value that specifies how to handle the user's editing changes if the user is in the process of editing the filter when the <bpt id=\"p1\">[</bpt>HDM_EDITFILTER<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb775312)</ept> message is sent.","pos":[16065,16283],"source":" A value that specifies how to handle the user's editing changes if the user is in the process of editing the filter when the [HDM_EDITFILTER](http://msdn.microsoft.com/library/windows/desktop/bb775312) message is sent."},{"pos":[16290,16396],"content":"Specify <ph id=\"ph1\">`true`</ph> to discard the changes made by the user, or <ph id=\"ph2\">`false`</ph> to accept the changes made by the user.","source":"Specify `true` to discard the changes made by the user, or `false` to accept the changes made by the user."},{"pos":[16406,16418],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[16422,16478],"content":"<ph id=\"ph1\">`true`</ph> if this method is successful; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if this method is successful; otherwise, `false`."},{"pos":[16488,16495],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[16499,16706],"content":"This method implements the behavior of the Win32 message <bpt id=\"p1\">[</bpt>HDM_EDITFILTER<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb775312)</ept>, as described in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"This method implements the behavior of the Win32 message [HDM_EDITFILTER](http://msdn.microsoft.com/library/windows/desktop/bb775312), as described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"pos":[16716,16723],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[16727,16822],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_MFC_CHeaderCtrl#7<ept id=\"p2\">](../../mfc/reference/codesnippet/cpp/cheaderctrl-class_7.cpp)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_MFC_CHeaderCtrl#7](../../mfc/reference/codesnippet/cpp/cheaderctrl-class_7.cpp)]"},{"pos":[16832,16905],"content":"<bpt id=\"p1\">&lt;a name=\"cheaderctrl__getbitmapmargin\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CHeaderCtrl::GetBitmapMargin","linkify":"<a name=\"cheaderctrl__getbitmapmargin\"></a>  CHeaderCtrl::GetBitmapMargin","source":"<a name=\"cheaderctrl__getbitmapmargin\"></a>  CHeaderCtrl::GetBitmapMargin"},{"content":"Retrieves the width of the margin of a bitmap in a header control.","pos":[16909,16975]},{"pos":[17032,17044],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The width of the bitmap margin in pixels.","pos":[17048,17089]},{"pos":[17099,17106],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[17110,17331],"content":"This member function implements the behavior of the Win32 message <bpt id=\"p1\">[</bpt>HDM_GETBITMAPMARGIN<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb775314)</ept>, as described in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"This member function implements the behavior of the Win32 message [HDM_GETBITMAPMARGIN](http://msdn.microsoft.com/library/windows/desktop/bb775314), as described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"pos":[17341,17348],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[17352,17447],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_MFC_CHeaderCtrl#8<ept id=\"p2\">](../../mfc/reference/codesnippet/cpp/cheaderctrl-class_8.cpp)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_MFC_CHeaderCtrl#8](../../mfc/reference/codesnippet/cpp/cheaderctrl-class_8.cpp)]"},{"pos":[17457,17528],"content":"<bpt id=\"p1\">&lt;a name=\"cheaderctrl__getfocuseditem\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CHeaderCtrl::GetFocusedItem","linkify":"<a name=\"cheaderctrl__getfocuseditem\"></a>  CHeaderCtrl::GetFocusedItem","source":"<a name=\"cheaderctrl__getfocuseditem\"></a>  CHeaderCtrl::GetFocusedItem"},{"content":"Gets the index of the item that has the focus in the current header control.","pos":[17532,17608]},{"pos":[17664,17676],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The zero-based index of the header item that has the focus.","pos":[17680,17739]},{"pos":[17749,17756],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[17760,17950],"content":"This method sends the <bpt id=\"p1\">[</bpt>HDM_GETFOCUSEDITEM<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb775330)</ept> message, which is described in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"This method sends the [HDM_GETFOCUSEDITEM](http://msdn.microsoft.com/library/windows/desktop/bb775330) message, which is described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"pos":[17960,17967],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following code example defines the variable, <ph id=\"ph1\">`m_headerCtrl`</ph>, that is used to access the current header control.","pos":[17971,18086],"source":"The following code example defines the variable, `m_headerCtrl`, that is used to access the current header control."},{"content":"This variable is used in the next example.","pos":[18087,18129]},{"pos":[18136,18232],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_MFC_CHeaderCtrl_s4#6<ept id=\"p2\">](../../mfc/reference/codesnippet/cpp/cheaderctrl-class_9.h)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_MFC_CHeaderCtrl_s4#6](../../mfc/reference/codesnippet/cpp/cheaderctrl-class_9.h)]"},{"pos":[18242,18249],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following code example demonstrates the <ph id=\"ph1\">`SetFocusedItem`</ph> and <ph id=\"ph2\">`GetFocusedItem`</ph> methods.","pos":[18253,18343],"source":"The following code example demonstrates the `SetFocusedItem` and `GetFocusedItem` methods."},{"content":"In an earlier section of the code, we created a header control with five columns.","pos":[18344,18425]},{"content":"However, you can drag a column separator so that the column is not visible.","pos":[18426,18501]},{"content":"The following example sets and then confirms the last column header as the focus item.","pos":[18502,18588]},{"pos":[18595,18694],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_MFC_CHeaderCtrl_s4#4<ept id=\"p2\">](../../mfc/reference/codesnippet/cpp/cheaderctrl-class_10.cpp)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_MFC_CHeaderCtrl_s4#4](../../mfc/reference/codesnippet/cpp/cheaderctrl-class_10.cpp)]"},{"pos":[18704,18771],"content":"<bpt id=\"p1\">&lt;a name=\"cheaderctrl__getimagelist\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CHeaderCtrl::GetImageList","linkify":"<a name=\"cheaderctrl__getimagelist\"></a>  CHeaderCtrl::GetImageList","source":"<a name=\"cheaderctrl__getimagelist\"></a>  CHeaderCtrl::GetImageList"},{"content":"Retrieves the handle of an image list used for drawing header items in a header control.","pos":[18775,18863]},{"pos":[18925,18937],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[18941,19017],"content":"A pointer to a <bpt id=\"p1\">[</bpt>CImageList<ept id=\"p1\">](../../mfc/reference/cimagelist-class.md)</ept> object.","source":"A pointer to a [CImageList](../../mfc/reference/cimagelist-class.md) object."},{"pos":[19027,19034],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This member function implements the behavior of the Win32 message <bpt id=\"p1\">[</bpt>HDM_GETIMAGELIST<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb775332)</ept>, as described in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","pos":[19038,19256],"source":"This member function implements the behavior of the Win32 message [HDM_GETIMAGELIST](http://msdn.microsoft.com/library/windows/desktop/bb775332), as described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"content":"The <ph id=\"ph1\">`CImageList`</ph> object to which the returned pointer points is a temporary object and is deleted in the next idle-time processing.","pos":[19257,19388],"source":" The `CImageList` object to which the returned pointer points is a temporary object and is deleted in the next idle-time processing."},{"pos":[19398,19405],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[19409,19505],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_MFC_CHeaderCtrl#9<ept id=\"p2\">](../../mfc/reference/codesnippet/cpp/cheaderctrl-class_11.cpp)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_MFC_CHeaderCtrl#9](../../mfc/reference/codesnippet/cpp/cheaderctrl-class_11.cpp)]"},{"pos":[19515,19572],"content":"<bpt id=\"p1\">&lt;a name=\"cheaderctrl__getitem\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CHeaderCtrl::GetItem","linkify":"<a name=\"cheaderctrl__getitem\"></a>  CHeaderCtrl::GetItem","source":"<a name=\"cheaderctrl__getitem\"></a>  CHeaderCtrl::GetItem"},{"content":"Retrieves information about a header control item.","pos":[19576,19626]},{"pos":[19716,19726],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Specifies the zero-based index of the item to retrieve.","pos":[19740,19795]},{"content":"Pointer to an <bpt id=\"p1\">[</bpt>HDITEM<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb775247)</ept> structure that receives the new item.","pos":[19819,19939],"source":" Pointer to an [HDITEM](http://msdn.microsoft.com/library/windows/desktop/bb775247) structure that receives the new item."},{"content":"This structure is used with the <ph id=\"ph1\">`InsertItem`</ph> and <ph id=\"ph2\">`SetItem`</ph> member functions.","pos":[19940,20016],"source":" This structure is used with the `InsertItem` and `SetItem` member functions."},{"content":"Any flags set in the <bpt id=\"p1\">**</bpt>mask<ept id=\"p1\">**</ept> element ensure that values in the corresponding elements are properly filled in upon return.","pos":[20017,20139],"source":" Any flags set in the **mask** element ensure that values in the corresponding elements are properly filled in upon return."},{"content":"If the <bpt id=\"p1\">**</bpt>mask<ept id=\"p1\">**</ept> element is set to zero, values in the other structure elements are meaningless.","pos":[20140,20235],"source":" If the **mask** element is set to zero, values in the other structure elements are meaningless."},{"pos":[20245,20257],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Nonzero if successful; otherwise 0.","pos":[20261,20296]},{"pos":[20306,20313],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[20317,20414],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_MFC_CHeaderCtrl#10<ept id=\"p2\">](../../mfc/reference/codesnippet/cpp/cheaderctrl-class_12.cpp)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_MFC_CHeaderCtrl#10](../../mfc/reference/codesnippet/cpp/cheaderctrl-class_12.cpp)]"},{"pos":[20424,20491],"content":"<bpt id=\"p1\">&lt;a name=\"cheaderctrl__getitemcount\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CHeaderCtrl::GetItemCount","linkify":"<a name=\"cheaderctrl__getitemcount\"></a>  CHeaderCtrl::GetItemCount","source":"<a name=\"cheaderctrl__getitemcount\"></a>  CHeaderCtrl::GetItemCount"},{"content":"Retrieves a count of the items in a header control.","pos":[20495,20546]},{"pos":[20600,20612],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Number of header control items if successful; otherwise – 1.","pos":[20616,20676]},{"pos":[20686,20693],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[20698,20770],"content":"See the example for <bpt id=\"p1\">[</bpt>CHeaderCtrl::DeleteItem<ept id=\"p1\">](#cheaderctrl__deleteitem)</ept>.","source":"See the example for [CHeaderCtrl::DeleteItem](#cheaderctrl__deleteitem)."},{"pos":[20780,20861],"content":"<bpt id=\"p1\">&lt;a name=\"cheaderctrl__getitemdropdownrect\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CHeaderCtrl::GetItemDropDownRect","linkify":"<a name=\"cheaderctrl__getitemdropdownrect\"></a>  CHeaderCtrl::GetItemDropDownRect","source":"<a name=\"cheaderctrl__getitemdropdownrect\"></a>  CHeaderCtrl::GetItemDropDownRect"},{"content":"Gets the bounding rectangle of the drop-down button for a header item in the current header control.","pos":[20865,20965]},{"pos":[21063,21073],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[21080,21089]},{"content":"Description","pos":[21090,21101]},{"pos":[21144,21156],"content":"[in] <ph id=\"ph1\">`iItem`</ph>","source":"[in] `iItem`"},{"content":"Zero-based index of a header item whose style is <ph id=\"ph1\">`HDF_SPLITBUTTON`</ph>.","pos":[21157,21224],"source":"Zero-based index of a header item whose style is `HDF_SPLITBUTTON`."},{"content":"For more information, see the <ph id=\"ph1\">`fmt`</ph> member of the <bpt id=\"p1\">[</bpt>HDITEM<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb775247)</ept> structure.","pos":[21225,21354],"source":" For more information, see the `fmt` member of the [HDITEM](http://msdn.microsoft.com/library/windows/desktop/bb775247) structure."},{"pos":[21359,21373],"content":"[out] <ph id=\"ph1\">`lpRect`</ph>","source":"[out] `lpRect`"},{"pos":[21374,21510],"content":"Pointer to a <bpt id=\"p1\">[</bpt>RECT<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/dd162897)</ept> structure to receive the bounding rectangle information.","source":"Pointer to a [RECT](http://msdn.microsoft.com/library/windows/desktop/dd162897) structure to receive the bounding rectangle information."},{"pos":[21521,21533],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[21537,21595],"content":"<ph id=\"ph1\">`true`</ph> if this function is successful; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if this function is successful; otherwise, `false`."},{"pos":[21605,21612],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[21616,21811],"content":"This method sends the <bpt id=\"p1\">[</bpt>HDM_GETITEMDROPDOWNRECT<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb775339)</ept> message, which is described in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"This method sends the [HDM_GETITEMDROPDOWNRECT](http://msdn.microsoft.com/library/windows/desktop/bb775339) message, which is described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"pos":[21821,21828],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following code example defines the variable, <ph id=\"ph1\">`m_headerCtrl`</ph>, that is used to access the current header control.","pos":[21832,21947],"source":"The following code example defines the variable, `m_headerCtrl`, that is used to access the current header control."},{"content":"This variable is used in the next example.","pos":[21948,21990]},{"pos":[21997,22093],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_MFC_CHeaderCtrl_s4#6<ept id=\"p2\">](../../mfc/reference/codesnippet/cpp/cheaderctrl-class_9.h)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_MFC_CHeaderCtrl_s4#6](../../mfc/reference/codesnippet/cpp/cheaderctrl-class_9.h)]"},{"pos":[22103,22110],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following code example demonstrates the <ph id=\"ph1\">`GetItemDropDownRect`</ph> method.","pos":[22114,22187],"source":"The following code example demonstrates the `GetItemDropDownRect` method."},{"content":"In an earlier section of the code, we created a header control with five columns.","pos":[22188,22269]},{"content":"The following code example draws a 3D rectangle around the location on the first column that is reserved for the header drop-down button.","pos":[22270,22407]},{"pos":[22414,22513],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_MFC_CHeaderCtrl_s4#2<ept id=\"p2\">](../../mfc/reference/codesnippet/cpp/cheaderctrl-class_13.cpp)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_MFC_CHeaderCtrl_s4#2](../../mfc/reference/codesnippet/cpp/cheaderctrl-class_13.cpp)]"},{"pos":[22523,22588],"content":"<bpt id=\"p1\">&lt;a name=\"cheaderctrl__getitemrect\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CHeaderCtrl::GetItemRect","linkify":"<a name=\"cheaderctrl__getitemrect\"></a>  CHeaderCtrl::GetItemRect","source":"<a name=\"cheaderctrl__getitemrect\"></a>  CHeaderCtrl::GetItemRect"},{"content":"Retrieves the bounding rectangle for a given item in a header control.","pos":[22592,22662]},{"pos":[22752,22762],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"The zero-based index of the header control item.","pos":[22778,22826]},{"content":"A pointer to the address of a <bpt id=\"p1\">[</bpt>RECT<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/dd162897)</ept> structure that receives the bounding rectangle information.","pos":[22845,23001],"source":" A pointer to the address of a [RECT](http://msdn.microsoft.com/library/windows/desktop/dd162897) structure that receives the bounding rectangle information."},{"pos":[23011,23023],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Nonzero if successful; otherwise 0.","pos":[23027,23062]},{"pos":[23072,23079],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[23083,23291],"content":"This method implements the behavior of the Win32 message <bpt id=\"p1\">[</bpt>HDM_GETITEMRECT<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb775341)</ept>, as described in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"This method implements the behavior of the Win32 message [HDM_GETITEMRECT](http://msdn.microsoft.com/library/windows/desktop/bb775341), as described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"pos":[23301,23370],"content":"<bpt id=\"p1\">&lt;a name=\"cheaderctrl__getorderarray\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CHeaderCtrl::GetOrderArray","linkify":"<a name=\"cheaderctrl__getorderarray\"></a>  CHeaderCtrl::GetOrderArray","source":"<a name=\"cheaderctrl__getorderarray\"></a>  CHeaderCtrl::GetOrderArray"},{"content":"Retrieves the left-to-right order of items in a header control.","pos":[23374,23437]},{"pos":[23520,23530],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"A pointer to the address of a buffer that receives the index values of the items in the header control, in the order in which they appear from left to right.","pos":[23547,23704]},{"content":"The number of header control items.","pos":[23723,23758]},{"content":"Must be non-negative.","pos":[23759,23780]},{"pos":[23790,23802],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Nonzero if successful; otherwise 0.","pos":[23806,23841]},{"pos":[23851,23858],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This member function implements the behavior of the Win32 message <bpt id=\"p1\">[</bpt>HDM_GETORDERARRAY<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb775343)</ept>, as described in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","pos":[23862,24081],"source":"This member function implements the behavior of the Win32 message [HDM_GETORDERARRAY](http://msdn.microsoft.com/library/windows/desktop/bb775343), as described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"content":"It is provided to support header item ordering.","pos":[24082,24129]},{"pos":[24139,24146],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[24150,24247],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_MFC_CHeaderCtrl#11<ept id=\"p2\">](../../mfc/reference/codesnippet/cpp/cheaderctrl-class_14.cpp)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_MFC_CHeaderCtrl#11](../../mfc/reference/codesnippet/cpp/cheaderctrl-class_14.cpp)]"},{"pos":[24257,24330],"content":"<bpt id=\"p1\">&lt;a name=\"cheaderctrl__getoverflowrect\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CHeaderCtrl::GetOverflowRect","linkify":"<a name=\"cheaderctrl__getoverflowrect\"></a>  CHeaderCtrl::GetOverflowRect","source":"<a name=\"cheaderctrl__getoverflowrect\"></a>  CHeaderCtrl::GetOverflowRect"},{"content":"Gets the bounding rectangle of the overflow button of the current header control.","pos":[24334,24415]},{"pos":[24486,24496],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[24503,24512]},{"content":"Description","pos":[24513,24524]},{"pos":[24567,24581],"content":"[out] <ph id=\"ph1\">`lpRect`</ph>","source":"[out] `lpRect`"},{"pos":[24582,24721],"content":"Pointer to a <bpt id=\"p1\">[</bpt>RECT<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/dd162897)</ept> structure that receives the bounding rectangle information.","source":"Pointer to a [RECT](http://msdn.microsoft.com/library/windows/desktop/dd162897) structure that receives the bounding rectangle information."},{"pos":[24732,24744],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[24748,24806],"content":"<ph id=\"ph1\">`true`</ph> if this function is successful; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if this function is successful; otherwise, `false`."},{"pos":[24816,24823],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"If the header control contains more items than can be simultaneously displayed, the control can display an overflow button that scrolls to items that are not visible.","pos":[24827,24993]},{"content":"The header control must have the <ph id=\"ph1\">`HDS_OVERFLOW`</ph> and <ph id=\"ph2\">`HDF_SPLITBUTTON`</ph> styles to display the overflow button.","pos":[24994,25102],"source":" The header control must have the `HDS_OVERFLOW` and `HDF_SPLITBUTTON` styles to display the overflow button."},{"content":"The bounding rectangle encloses the overflow button and exists only when the overflow button is displayed.","pos":[25103,25209]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Header Control Styles<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb775241)</ept>.","pos":[25210,25320],"source":" For more information, see [Header Control Styles](http://msdn.microsoft.com/library/windows/desktop/bb775241)."},{"pos":[25327,25518],"content":"This method sends the <bpt id=\"p1\">[</bpt>HDM_GETOVERFLOWRECT<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb775345)</ept> message, which is described in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"This method sends the [HDM_GETOVERFLOWRECT](http://msdn.microsoft.com/library/windows/desktop/bb775345) message, which is described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"pos":[25528,25535],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following code example defines the variable, <ph id=\"ph1\">`m_headerCtrl`</ph>, that is used to access the current header control.","pos":[25539,25654],"source":"The following code example defines the variable, `m_headerCtrl`, that is used to access the current header control."},{"content":"This variable is used in the next example.","pos":[25655,25697]},{"pos":[25704,25800],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_MFC_CHeaderCtrl_s4#6<ept id=\"p2\">](../../mfc/reference/codesnippet/cpp/cheaderctrl-class_9.h)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_MFC_CHeaderCtrl_s4#6](../../mfc/reference/codesnippet/cpp/cheaderctrl-class_9.h)]"},{"pos":[25810,25817],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following code example demonstrates the <ph id=\"ph1\">`GetOverflowRect`</ph> method.","pos":[25821,25890],"source":"The following code example demonstrates the `GetOverflowRect` method."},{"content":"In an earlier section of the code, we created a header control with five columns.","pos":[25891,25972]},{"content":"However, you can drag a column separator so that the column is not visible.","pos":[25973,26048]},{"content":"If some columns are not visible, the header control draws an overflow button.","pos":[26049,26126]},{"content":"The following code example draws a 3D rectangle around the location of the overflow button.","pos":[26127,26218]},{"pos":[26225,26324],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_MFC_CHeaderCtrl_s4#3<ept id=\"p2\">](../../mfc/reference/codesnippet/cpp/cheaderctrl-class_15.cpp)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_MFC_CHeaderCtrl_s4#3](../../mfc/reference/codesnippet/cpp/cheaderctrl-class_15.cpp)]"},{"pos":[26334,26391],"content":"<bpt id=\"p1\">&lt;a name=\"cheaderctrl__hittest\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CHeaderCtrl::HitTest","linkify":"<a name=\"cheaderctrl__hittest\"></a>  CHeaderCtrl::HitTest","source":"<a name=\"cheaderctrl__hittest\"></a>  CHeaderCtrl::HitTest"},{"content":"Determines which header item, if any, is located at a specified point.","pos":[26395,26465]},{"pos":[26528,26538],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[26545,26554]},{"content":"Description","pos":[26555,26566]},{"pos":[26609,26627],"content":"[in, out] <ph id=\"ph1\">`phdhti`</ph>","source":"[in, out] `phdhti`"},{"pos":[26628,26797],"content":"Pointer to a <bpt id=\"p1\">[</bpt>HDHITTESTINFO<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb775245)</ept> structure that specifies the point to test and receives the results of the test.","source":"Pointer to a [HDHITTESTINFO](http://msdn.microsoft.com/library/windows/desktop/bb775245) structure that specifies the point to test and receives the results of the test."},{"pos":[26808,26820],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The zero-based index of the header item, if any, at the specified position; otherwise, –1.","pos":[26824,26914]},{"pos":[26924,26931],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[26935,27118],"content":"This method sends the <bpt id=\"p1\">[</bpt>HDM_HITTEST<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb775349)</ept> message, which is described in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"This method sends the [HDM_HITTEST](http://msdn.microsoft.com/library/windows/desktop/bb775349) message, which is described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"pos":[27128,27135],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following code example defines the variable, <ph id=\"ph1\">`m_headerCtrl`</ph>, that is used to access the current header control.","pos":[27139,27254],"source":"The following code example defines the variable, `m_headerCtrl`, that is used to access the current header control."},{"content":"This variable is used in the next example.","pos":[27255,27297]},{"pos":[27304,27400],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_MFC_CHeaderCtrl_s4#6<ept id=\"p2\">](../../mfc/reference/codesnippet/cpp/cheaderctrl-class_9.h)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_MFC_CHeaderCtrl_s4#6](../../mfc/reference/codesnippet/cpp/cheaderctrl-class_9.h)]"},{"pos":[27410,27417],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following code example demonstrates the <ph id=\"ph1\">`HitTest`</ph> method.","pos":[27421,27482],"source":"The following code example demonstrates the `HitTest` method."},{"content":"In an earlier section of this code example, we created a header control with five columns.","pos":[27483,27573]},{"content":"However, you can drag a column separator so that the column is not visible.","pos":[27574,27649]},{"content":"This example reports the index of the column if it is visible and -1 if the column is not visible.","pos":[27650,27748]},{"pos":[27755,27854],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_MFC_CHeaderCtrl_s4#1<ept id=\"p2\">](../../mfc/reference/codesnippet/cpp/cheaderctrl-class_16.cpp)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_MFC_CHeaderCtrl_s4#1](../../mfc/reference/codesnippet/cpp/cheaderctrl-class_16.cpp)]"},{"pos":[27864,27927],"content":"<bpt id=\"p1\">&lt;a name=\"cheaderctrl__insertitem\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CHeaderCtrl::InsertItem","linkify":"<a name=\"cheaderctrl__insertitem\"></a>  CHeaderCtrl::InsertItem","source":"<a name=\"cheaderctrl__insertitem\"></a>  CHeaderCtrl::InsertItem"},{"content":"Inserts a new item into a header control at the specified index.","pos":[27931,27995]},{"pos":[28071,28081],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"The zero-based index of the item to be inserted.","pos":[28095,28143]},{"content":"If the value is zero, the item is inserted at the beginning of the header control.","pos":[28144,28226]},{"content":"If the value is greater than the maximum value, the item is inserted at the end of the header control.","pos":[28227,28329]},{"content":"<bpt id=\"p1\">*</bpt>phdi<ept id=\"p1\">*</ept>","pos":[28336,28342],"source":"*phdi*"},{"content":"Pointer to an <bpt id=\"p1\">[</bpt>HDITEM<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb775247)</ept> structure that contains information about the item to be inserted.","pos":[28346,28495],"source":" Pointer to an [HDITEM](http://msdn.microsoft.com/library/windows/desktop/bb775247) structure that contains information about the item to be inserted."},{"pos":[28505,28517],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Index of the new item if successful; otherwise – 1.","pos":[28521,28572]},{"pos":[28582,28589],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[28593,28690],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_MFC_CHeaderCtrl#12<ept id=\"p2\">](../../mfc/reference/codesnippet/cpp/cheaderctrl-class_17.cpp)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_MFC_CHeaderCtrl#12](../../mfc/reference/codesnippet/cpp/cheaderctrl-class_17.cpp)]"},{"pos":[28700,28755],"content":"<bpt id=\"p1\">&lt;a name=\"cheaderctrl__layout\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CHeaderCtrl::Layout","linkify":"<a name=\"cheaderctrl__layout\"></a>  CHeaderCtrl::Layout","source":"<a name=\"cheaderctrl__layout\"></a>  CHeaderCtrl::Layout"},{"content":"Retrieves the size and position of a header control within a given rectangle.","pos":[28759,28836]},{"pos":[28899,28909],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"<bpt id=\"p1\">*</bpt>pHeaderLayout<ept id=\"p1\">*</ept>","pos":[28913,28928],"source":"*pHeaderLayout*"},{"content":"Pointer to an <bpt id=\"p1\">[</bpt>HDLAYOUT<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb775249)</ept> structure, which contains information used to set the size and position of a header control.","pos":[28932,29109],"source":" Pointer to an [HDLAYOUT](http://msdn.microsoft.com/library/windows/desktop/bb775249) structure, which contains information used to set the size and position of a header control."},{"pos":[29119,29131],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Nonzero if successful; otherwise 0.","pos":[29135,29170]},{"pos":[29180,29187],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This function is used to determine the appropriate dimensions for a new header control that is to occupy the given rectangle.","pos":[29191,29316]},{"pos":[29326,29333],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[29337,29434],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_MFC_CHeaderCtrl#13<ept id=\"p2\">](../../mfc/reference/codesnippet/cpp/cheaderctrl-class_18.cpp)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_MFC_CHeaderCtrl#13](../../mfc/reference/codesnippet/cpp/cheaderctrl-class_18.cpp)]"},{"pos":[29444,29511],"content":"<bpt id=\"p1\">&lt;a name=\"cheaderctrl__ordertoindex\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CHeaderCtrl::OrderToIndex","linkify":"<a name=\"cheaderctrl__ordertoindex\"></a>  CHeaderCtrl::OrderToIndex","source":"<a name=\"cheaderctrl__ordertoindex\"></a>  CHeaderCtrl::OrderToIndex"},{"content":"Retrieves the index value for an item based on its order in the header control.","pos":[29515,29594]},{"pos":[29658,29668],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"<bpt id=\"p1\">*</bpt>nOrder<ept id=\"p1\">*</ept>","pos":[29672,29680],"source":"*nOrder*"},{"content":"The zero-based order that the item appears in the header control, from left to right.","pos":[29684,29769]},{"pos":[29779,29791],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The index of the item, based on its order in the header control.","pos":[29795,29859]},{"content":"The index counts from left to right, beginning with 0.","pos":[29860,29914]},{"pos":[29924,29931],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This member function implements the behavior of the Win32 macro <bpt id=\"p1\">[</bpt>HDM_ORDERTOINDEX<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb775355)</ept>, as described in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","pos":[29935,30151],"source":"This member function implements the behavior of the Win32 macro [HDM_ORDERTOINDEX](http://msdn.microsoft.com/library/windows/desktop/bb775355), as described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"content":"It is provided to support header item ordering.","pos":[30152,30199]},{"pos":[30209,30282],"content":"<bpt id=\"p1\">&lt;a name=\"cheaderctrl__setbitmapmargin\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CHeaderCtrl::SetBitmapMargin","linkify":"<a name=\"cheaderctrl__setbitmapmargin\"></a>  CHeaderCtrl::SetBitmapMargin","source":"<a name=\"cheaderctrl__setbitmapmargin\"></a>  CHeaderCtrl::SetBitmapMargin"},{"content":"Sets the width of the margin of a bitmap in a header control.","pos":[30286,30347]},{"pos":[30405,30415],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Width, specified in pixels, of the margin that surrounds a bitmap within an existing header control.","pos":[30431,30531]},{"pos":[30541,30553],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The width of the bitmap margin in pixels.","pos":[30557,30598]},{"pos":[30608,30615],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[30619,30840],"content":"This member function implements the behavior of the Win32 message <bpt id=\"p1\">[</bpt>HDM_SETBITMAPMARGIN<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb775357)</ept>, as described in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"This member function implements the behavior of the Win32 message [HDM_SETBITMAPMARGIN](http://msdn.microsoft.com/library/windows/desktop/bb775357), as described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"pos":[30850,30857],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[30861,30958],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_MFC_CHeaderCtrl#14<ept id=\"p2\">](../../mfc/reference/codesnippet/cpp/cheaderctrl-class_19.cpp)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_MFC_CHeaderCtrl#14](../../mfc/reference/codesnippet/cpp/cheaderctrl-class_19.cpp)]"},{"pos":[30968,31055],"content":"<bpt id=\"p1\">&lt;a name=\"cheaderctrl__setfilterchangetimeout\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CHeaderCtrl::SetFilterChangeTimeout","linkify":"<a name=\"cheaderctrl__setfilterchangetimeout\"></a>  CHeaderCtrl::SetFilterChangeTimeout","source":"<a name=\"cheaderctrl__setfilterchangetimeout\"></a>  CHeaderCtrl::SetFilterChangeTimeout"},{"pos":[31059,31262],"content":"Sets the timeout interval between the time a change takes place in the filter attributes and the posting of an <bpt id=\"p1\">[</bpt>HDN_FILTERCHANGE<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb775277)</ept> notification.","source":"Sets the timeout interval between the time a change takes place in the filter attributes and the posting of an [HDN_FILTERCHANGE](http://msdn.microsoft.com/library/windows/desktop/bb775277) notification."},{"pos":[31332,31342],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"<bpt id=\"p1\">*</bpt>dwTimeOut<ept id=\"p1\">*</ept>","pos":[31346,31357],"source":"*dwTimeOut*"},{"content":"Timeout value, in milliseconds.","pos":[31361,31392]},{"pos":[31402,31414],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The index of the filter control being modified.","pos":[31418,31465]},{"pos":[31475,31482],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[31486,31714],"content":"This member function implements the behavior of the Win32 message <bpt id=\"p1\">[</bpt>HDM_SETFILTERCHANGETIMEOUT<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb775359)</ept>, as described in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"This member function implements the behavior of the Win32 message [HDM_SETFILTERCHANGETIMEOUT](http://msdn.microsoft.com/library/windows/desktop/bb775359), as described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"pos":[31724,31731],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[31735,31832],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_MFC_CHeaderCtrl#15<ept id=\"p2\">](../../mfc/reference/codesnippet/cpp/cheaderctrl-class_20.cpp)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_MFC_CHeaderCtrl#15](../../mfc/reference/codesnippet/cpp/cheaderctrl-class_20.cpp)]"},{"pos":[31842,31913],"content":"<bpt id=\"p1\">&lt;a name=\"cheaderctrl__setfocuseditem\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CHeaderCtrl::SetFocusedItem","linkify":"<a name=\"cheaderctrl__setfocuseditem\"></a>  CHeaderCtrl::SetFocusedItem","source":"<a name=\"cheaderctrl__setfocuseditem\"></a>  CHeaderCtrl::SetFocusedItem"},{"content":"Sets the focus to a specified header item in the current header control.","pos":[31917,31989]},{"pos":[32046,32056],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[32063,32072]},{"content":"Description","pos":[32073,32084]},{"pos":[32127,32139],"content":"[in] <ph id=\"ph1\">`iItem`</ph>","source":"[in] `iItem`"},{"content":"Zero-based index of a header item.","pos":[32140,32174]},{"pos":[32185,32197],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[32201,32257],"content":"<ph id=\"ph1\">`true`</ph> if this method is successful; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if this method is successful; otherwise, `false`."},{"pos":[32267,32274],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[32278,32468],"content":"This method sends the <bpt id=\"p1\">[</bpt>HDM_SETFOCUSEDITEM<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb775361)</ept> message, which is described in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"This method sends the [HDM_SETFOCUSEDITEM](http://msdn.microsoft.com/library/windows/desktop/bb775361) message, which is described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"pos":[32478,32485],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following code example defines the variable, <ph id=\"ph1\">`m_headerCtrl`</ph>, that is used to access the current header control.","pos":[32489,32604],"source":"The following code example defines the variable, `m_headerCtrl`, that is used to access the current header control."},{"content":"This variable is used in the next example.","pos":[32605,32647]},{"pos":[32654,32750],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_MFC_CHeaderCtrl_s4#6<ept id=\"p2\">](../../mfc/reference/codesnippet/cpp/cheaderctrl-class_9.h)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_MFC_CHeaderCtrl_s4#6](../../mfc/reference/codesnippet/cpp/cheaderctrl-class_9.h)]"},{"pos":[32760,32767],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following code example demonstrates the <ph id=\"ph1\">`SetFocusedItem`</ph> and <ph id=\"ph2\">`GetFocusedItem`</ph> methods.","pos":[32771,32861],"source":"The following code example demonstrates the `SetFocusedItem` and `GetFocusedItem` methods."},{"content":"In an earlier section of the code, we created a header control with five columns.","pos":[32862,32943]},{"content":"However, you can drag a column separator so that the column is not visible.","pos":[32944,33019]},{"content":"The following example sets and then confirms the last column header as the focus item.","pos":[33020,33106]},{"pos":[33113,33212],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_MFC_CHeaderCtrl_s4#4<ept id=\"p2\">](../../mfc/reference/codesnippet/cpp/cheaderctrl-class_10.cpp)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_MFC_CHeaderCtrl_s4#4](../../mfc/reference/codesnippet/cpp/cheaderctrl-class_10.cpp)]"},{"pos":[33222,33291],"content":"<bpt id=\"p1\">&lt;a name=\"cheaderctrl__sethotdivider\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CHeaderCtrl::SetHotDivider","linkify":"<a name=\"cheaderctrl__sethotdivider\"></a>  CHeaderCtrl::SetHotDivider","source":"<a name=\"cheaderctrl__sethotdivider\"></a>  CHeaderCtrl::SetHotDivider"},{"content":"Changes the divider between header items to indicate a manual drag and drop of a header item.","pos":[33295,33388]},{"pos":[33477,33487],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"The position of the pointer.","pos":[33499,33527]},{"content":"The header control highlights the appropriate divider based on the pointer's position.","pos":[33528,33614]},{"content":"The index of the highlighted divider.","pos":[33633,33670]},{"pos":[33680,33692],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The index of the highlighted divider.","pos":[33696,33733]},{"pos":[33743,33750],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This member function implements the behavior of the Win32 message <bpt id=\"p1\">[</bpt>HDM_SETHOTDIVIDER<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb775363)</ept>, as described in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","pos":[33754,33973],"source":"This member function implements the behavior of the Win32 message [HDM_SETHOTDIVIDER](http://msdn.microsoft.com/library/windows/desktop/bb775363), as described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"content":"It is provided to support header item drag and drop.","pos":[33974,34026]},{"pos":[34036,34043],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[34047,34144],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_MFC_CHeaderCtrl#16<ept id=\"p2\">](../../mfc/reference/codesnippet/cpp/cheaderctrl-class_21.cpp)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_MFC_CHeaderCtrl#16](../../mfc/reference/codesnippet/cpp/cheaderctrl-class_21.cpp)]"},{"pos":[34154,34221],"content":"<bpt id=\"p1\">&lt;a name=\"cheaderctrl__setimagelist\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CHeaderCtrl::SetImageList","linkify":"<a name=\"cheaderctrl__setimagelist\"></a>  CHeaderCtrl::SetImageList","source":"<a name=\"cheaderctrl__setimagelist\"></a>  CHeaderCtrl::SetImageList"},{"content":"Assigns an image list to a header control.","pos":[34225,34267]},{"pos":[34342,34352],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"A pointer to a <ph id=\"ph1\">`CImageList`</ph> object containing the image list to be assigned to the header control.","pos":[34372,34470],"source":" A pointer to a `CImageList` object containing the image list to be assigned to the header control."},{"pos":[34480,34492],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[34496,34616],"content":"A pointer to the <bpt id=\"p1\">[</bpt>CImageList<ept id=\"p1\">](../../mfc/reference/cimagelist-class.md)</ept> object previously assigned to the header control.","source":"A pointer to the [CImageList](../../mfc/reference/cimagelist-class.md) object previously assigned to the header control."},{"pos":[34626,34633],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This member function implements the behavior of the Win32 message <bpt id=\"p1\">[</bpt>HDM_SETIMAGELIST<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb775365)</ept>, as described in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","pos":[34637,34855],"source":"This member function implements the behavior of the Win32 message [HDM_SETIMAGELIST](http://msdn.microsoft.com/library/windows/desktop/bb775365), as described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"content":"The <ph id=\"ph1\">`CImageList`</ph> object to which the returned pointer points is a temporary object and is deleted in the next idle-time processing.","pos":[34856,34987],"source":" The `CImageList` object to which the returned pointer points is a temporary object and is deleted in the next idle-time processing."},{"pos":[34997,35004],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[35009,35085],"content":"See the example for <bpt id=\"p1\">[</bpt>CHeaderCtrl::GetImageList<ept id=\"p1\">](#cheaderctrl__getimagelist)</ept>.","source":"See the example for [CHeaderCtrl::GetImageList](#cheaderctrl__getimagelist)."},{"pos":[35095,35152],"content":"<bpt id=\"p1\">&lt;a name=\"cheaderctrl__setitem\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CHeaderCtrl::SetItem","linkify":"<a name=\"cheaderctrl__setitem\"></a>  CHeaderCtrl::SetItem","source":"<a name=\"cheaderctrl__setitem\"></a>  CHeaderCtrl::SetItem"},{"content":"Sets the attributes of the specified item in a header control.","pos":[35156,35218]},{"pos":[35299,35309],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"The zero-based index of the item to be manipulated.","pos":[35323,35374]},{"content":"Pointer to an <bpt id=\"p1\">[</bpt>HDITEM<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb775247)</ept> structure that contains information about the new item.","pos":[35398,35536],"source":" Pointer to an [HDITEM](http://msdn.microsoft.com/library/windows/desktop/bb775247) structure that contains information about the new item."},{"pos":[35546,35558],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Nonzero if successful; otherwise 0.","pos":[35562,35597]},{"pos":[35607,35614],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[35619,35685],"content":"See the example for <bpt id=\"p1\">[</bpt>CHeaderCtrl::GetItem<ept id=\"p1\">](#cheaderctrl__getitem)</ept>.","source":"See the example for [CHeaderCtrl::GetItem](#cheaderctrl__getitem)."},{"pos":[35695,35764],"content":"<bpt id=\"p1\">&lt;a name=\"cheaderctrl__setorderarray\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CHeaderCtrl::SetOrderArray","linkify":"<a name=\"cheaderctrl__setorderarray\"></a>  CHeaderCtrl::SetOrderArray","source":"<a name=\"cheaderctrl__setorderarray\"></a>  CHeaderCtrl::SetOrderArray"},{"content":"Sets the left-to-right order of items in a header control.","pos":[35768,35826]},{"pos":[35909,35919],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"The number of header control items.","pos":[35935,35970]},{"content":"A pointer to the address of a buffer that receives the index values of the items in the header control, in the order in which they appear from left to right.","pos":[35990,36147]},{"pos":[36157,36169],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Nonzero if successful; otherwise 0.","pos":[36173,36208]},{"pos":[36218,36225],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This member function implements the behavior of the Win32 macro <bpt id=\"p1\">[</bpt>HDM_SETORDERARRAY<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb775369)</ept>, as described in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","pos":[36229,36446],"source":"This member function implements the behavior of the Win32 macro [HDM_SETORDERARRAY](http://msdn.microsoft.com/library/windows/desktop/bb775369), as described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"content":"It is provided to support header item ordering.","pos":[36447,36494]},{"pos":[36504,36511],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[36516,36594],"content":"See the example for <bpt id=\"p1\">[</bpt>CHeaderCtrl::GetOrderArray<ept id=\"p1\">](#cheaderctrl__getorderarray)</ept>.","source":"See the example for [CHeaderCtrl::GetOrderArray](#cheaderctrl__getorderarray)."},{"pos":[36603,36611],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>CWnd Class<ept id=\"p1\">](../../mfc/reference/cwnd-class.md)</ept><ph id=\"ph1\"> </ph>","pos":[36615,36663],"source":"[CWnd Class](../../mfc/reference/cwnd-class.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Hierarchy Chart<ept id=\"p1\">](../../mfc/hierarchy-chart.md)</ept><ph id=\"ph1\"> </ph>","pos":[36666,36715],"source":" [Hierarchy Chart](../../mfc/hierarchy-chart.md) "},{"content":"<bpt id=\"p1\"> [</bpt>CTabCtrl Class<ept id=\"p1\">](../../mfc/reference/ctabctrl-class.md)</ept><ph id=\"ph1\"> </ph>","pos":[36718,36775],"source":" [CTabCtrl Class](../../mfc/reference/ctabctrl-class.md) "},{"content":"<bpt id=\"p1\"> [</bpt>CListCtrl Class<ept id=\"p1\">](../../mfc/reference/clistctrl-class.md)</ept><ph id=\"ph1\"> </ph>","pos":[36778,36837],"source":" [CListCtrl Class](../../mfc/reference/clistctrl-class.md) "},{"content":"<bpt id=\"p1\"> [</bpt>CImageList Class<ept id=\"p1\">](../../mfc/reference/cimagelist-class.md)</ept>","pos":[36840,36900],"source":" [CImageList Class](../../mfc/reference/cimagelist-class.md)"}],"content":"---\ntitle: \"CHeaderCtrl Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"CHeaderCtrl\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"CHeaderCtrl class\"\n  - \"Windows common controls [C++], CHeaderCtrl\"\n  - \"header controls, CHeaderCtrl class\"\nms.assetid: b847ac90-5fae-4a87-88e0-ca45f77b8b3b\ncaps.latest.revision: 24\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# CHeaderCtrl Class\nProvides the functionality of the Windows common header control.  \n  \n## Syntax  \n  \n```  \nclass CHeaderCtrl : public CWnd  \n```  \n  \n## Members  \n  \n### Public Constructors  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CHeaderCtrl::CHeaderCtrl](#cheaderctrl__cheaderctrl)|Constructs a `CHeaderCtrl` object.|  \n  \n### Public Methods  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CHeaderCtrl::ClearAllFilters](#cheaderctrl__clearallfilters)|Clears all filters for a header control.|  \n|[CHeaderCtrl::ClearFilter](#cheaderctrl__clearfilter)|Clears the filter for a header control.|  \n|[CHeaderCtrl::Create](#cheaderctrl__create)|Creates a header control and attaches it to a `CHeaderCtrl` object.|  \n|[CHeaderCtrl::CreateDragImage](#cheaderctrl__createdragimage)|Creates a transparent version of an item's image within a header control.|  \n|[CHeaderCtrl::CreateEx](#cheaderctrl__createex)|Creates a header control with the specified Windows extended styles and attaches it to a `CListCtrl` object.|  \n|[CHeaderCtrl::DeleteItem](#cheaderctrl__deleteitem)|Deletes an item from a header control.|  \n|[CHeaderCtrl::DrawItem](#cheaderctrl__drawitem)|Draws the specified item of a header control.|  \n|[CHeaderCtrl::EditFilter](#cheaderctrl__editfilter)|Starts editing the specified filter of a header control.|  \n|[CHeaderCtrl::GetBitmapMargin](#cheaderctrl__getbitmapmargin)|Retrieves the width of the margin of a bitmap in a header control.|  \n|[CHeaderCtrl::GetFocusedItem](#cheaderctrl__getfocuseditem)|Gets the identifier of the item in the current header control that has the focus.|  \n|[CHeaderCtrl::GetImageList](#cheaderctrl__getimagelist)|Retrieves the handle of an image list used for drawing header items in a header control.|  \n|[CHeaderCtrl::GetItem](#cheaderctrl__getitem)|Retrieves information about an item in a header control.|  \n|[CHeaderCtrl::GetItemCount](#cheaderctrl__getitemcount)|Retrieves a count of the items in a header control.|  \n|[CHeaderCtrl::GetItemDropDownRect](#cheaderctrl__getitemdropdownrect)|Gets the bounding rectangle information for the specified drop-down button in a header control.|  \n|[CHeaderCtrl::GetItemRect](#cheaderctrl__getitemrect)|Retrieves the bounding rectangle for a given item in a header control.|  \n|[CHeaderCtrl::GetOrderArray](#cheaderctrl__getorderarray)|Retrieves the left-to-right order of items in a header control.|  \n|[CHeaderCtrl::GetOverflowRect](#cheaderctrl__getoverflowrect)|Gets the bounding rectangle of the overflow button for the current header control.|  \n|[CHeaderCtrl::HitTest](#cheaderctrl__hittest)|Determines which header item, if any, is located at a specified point.|  \n|[CHeaderCtrl::InsertItem](#cheaderctrl__insertitem)|Inserts a new item into a header control.|  \n|[CHeaderCtrl::Layout](#cheaderctrl__layout)|Retrieves the size and position of a header control within a given rectangle.|  \n|[CHeaderCtrl::OrderToIndex](#cheaderctrl__ordertoindex)|Retrieves the index value for an item based on its order in the header control.|  \n|[CHeaderCtrl::SetBitmapMargin](#cheaderctrl__setbitmapmargin)|Sets the width of the margin of a bitmap in a header control.|  \n|[CHeaderCtrl::SetFilterChangeTimeout](#cheaderctrl__setfilterchangetimeout)|Sets the timeout interval between the time a change takes place in the filter attributes and the posting of an `HDN_FILTERCHANGE` notification.|  \n|[CHeaderCtrl::SetFocusedItem](#cheaderctrl__setfocuseditem)|Sets the focus to a specified header item in the current header control.|  \n|[CHeaderCtrl::SetHotDivider](#cheaderctrl__sethotdivider)|Changes the divider between header items to indicate a manual drag and drop of a header item.|  \n|[CHeaderCtrl::SetImageList](#cheaderctrl__setimagelist)|Assigns an image list to a header control.|  \n|[CHeaderCtrl::SetItem](#cheaderctrl__setitem)|Sets the attributes of the specified item in a header control.|  \n|[CHeaderCtrl::SetOrderArray](#cheaderctrl__setorderarray)|Sets the left-to-right order of items in a header control.|  \n  \n## Remarks  \n A header control is a window that is usually positioned above a set of columns of text or numbers. It contains a title for each column, and it can be divided into parts. The user can drag the dividers that separate the parts to set the width of each column. For an illustration of a header control, see [Header Controls](http://msdn.microsoft.com/library/windows/desktop/bb775238).  \n  \n This control (and therefore the `CHeaderCtrl` class) is available only to programs that run under Windows 95/98 and Windows NT version 3.51 and later.  \n  \n Functionality added for Windows 95/Internet Explorer 4.0 common controls includes the following:  \n  \n-   Header item custom ordering.  \n  \n-   Header item drag and drop, for reordering of header items. Use the `HDS_DRAGDROP` style when you create the `CHeaderCtrl` object.  \n  \n-   Header column text constantly viewable during column resizing. Use the `HDS_FULLDRAG` style when you create a `CHeaderCtrl` object.  \n  \n-   Header hot tracking, which highlights the header item when the pointer is hovering over it. Use the `HDS_HOTTRACK` style when you create the `CHeaderCtrl` object.  \n  \n-   Image list support. Header items can contain images stored in a `CImageList` object or text.  \n  \n For more information about using `CHeaderCtrl`, see [Controls](../../mfc/controls-mfc.md) and [Using CHeaderCtrl](../../mfc/using-cheaderctrl.md).  \n  \n## Inheritance Hierarchy  \n [CObject](../../mfc/reference/cobject-class.md)  \n  \n [CCmdTarget](../../mfc/reference/ccmdtarget-class.md)  \n  \n [CWnd](../../mfc/reference/cwnd-class.md)  \n  \n `CHeaderCtrl`  \n  \n## Requirements  \n **Header:** afxcmn.h  \n  \n##  <a name=\"cheaderctrl__cheaderctrl\"></a>  CHeaderCtrl::CHeaderCtrl  \n Constructs a `CHeaderCtrl` object.  \n  \n```  \nCHeaderCtrl();\n```  \n  \n### Example  \n [!code-cpp[NVC_MFC_CHeaderCtrl#1](../../mfc/reference/codesnippet/cpp/cheaderctrl-class_1.cpp)]  \n  \n##  <a name=\"cheaderctrl__clearallfilters\"></a>  CHeaderCtrl::ClearAllFilters  \n Clears all filters for a header control.  \n  \n```  \nBOOL ClearAllFilters();\n```  \n  \n### Return Value  \n `true` if this method is successful; otherwise, `false`.  \n  \n### Remarks  \n This method implements the behavior of the Win32 message [HDM_CLEARFILTER](http://msdn.microsoft.com/library/windows/desktop/bb775306) with a column value of –1, as described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n### Example  \n [!code-cpp[NVC_MFC_CHeaderCtrl#2](../../mfc/reference/codesnippet/cpp/cheaderctrl-class_2.cpp)]  \n  \n##  <a name=\"cheaderctrl__clearfilter\"></a>  CHeaderCtrl::ClearFilter  \n Clears the filter for a header control.  \n  \n```  \nBOOL ClearFilter(int nColumn);\n```  \n  \n### Parameters  \n `nColumn`  \n Column value indicating which filter to clear.  \n  \n### Return Value  \n `true` if this method is successful; otherwise, `false`.  \n  \n### Remarks  \n This method implements the behavior of the Win32 message [HDM_CLEARFILTER](http://msdn.microsoft.com/library/windows/desktop/bb775306), as described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n### Example  \n [!code-cpp[NVC_MFC_CHeaderCtrl#3](../../mfc/reference/codesnippet/cpp/cheaderctrl-class_3.cpp)]  \n  \n##  <a name=\"cheaderctrl__create\"></a>  CHeaderCtrl::Create  \n Creates a header control and attaches it to a `CHeaderCtrl` object.  \n  \n```  \nvirtual BOOL Create(\n    DWORD dwStyle,  \n    const RECT& rect,  \n    CWnd* pParentWnd,  \n    UINT nID);\n```  \n  \n### Parameters  \n `dwStyle`  \n Specifies the header control's style. For a description of header control styles, see [Header Control Styles](http://msdn.microsoft.com/library/windows/desktop/bb775241) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n `rect`  \n Specifies the header control's size and position. It can be either a [CRect](../../atl-mfc-shared/reference/crect-class.md) object or a [RECT](http://msdn.microsoft.com/library/windows/desktop/dd162897) structure.  \n  \n `pParentWnd`  \n Specifies the header control's parent window, usually a `CDialog`. It must not be **NULL**.  \n  \n `nID`  \n Specifies the header control's ID.  \n  \n### Return Value  \n Nonzero if initialization was successful; otherwise zero.  \n  \n### Remarks  \n You construct a `CHeaderCtrl` object in two steps. First, call the constructor and then call **Create**, which creates the header control and attaches it to the `CHeaderCtrl` object.  \n  \n In addition to the header control styles, you can use the following common control styles to determine how the header control positions and resizes itself (see [Common Control Styles](http://msdn.microsoft.com/library/windows/desktop/bb775498) for more information):  \n  \n- `CCS_BOTTOM` Causes the control to position itself at the bottom of the parent window's client area and sets the width to be the same as the parent window's width.  \n  \n- `CCS_NODIVIDER` Prevents a two-pixel highlight from being drawn at the top of the control.  \n  \n- `CCS_NOMOVEY` Causes the control to resize and move itself horizontally, but not vertically, in response to a `WM_SIZE` message. If the `CCS_NORESIZE` style is used, this style does not apply. Header controls have this style by default.  \n  \n- `CCS_NOPARENTALIGN` Prevents the control from automatically moving to the top or bottom of the parent window. Instead, the control keeps its position within the parent window despite changes to the size of the parent window. If the `CCS_TOP` or `CCS_BOTTOM` style is also used, the height is adjusted to the default, but the position and width remain unchanged.  \n  \n- `CCS_NORESIZE` Prevents the control from using the default width and height when setting its initial size or a new size. Instead, the control uses the width and height specified in the request for creation or sizing.  \n  \n- `CCS_TOP` Causes the control to position itself at the top of the parent window's client area and sets the width to be the same as the parent window's width.  \n  \n You can also apply the following window styles to a header control (see [Window Styles](../../mfc/reference/window-styles.md) for more information):  \n  \n- **WS_CHILD** Creates a child window. Cannot be used with the `WS_POPUP` style.  \n  \n- **WS_VISIBLE** Creates a window that is initially visible.  \n  \n- **WS_DISABLED** Creates a window that is initially disabled.  \n  \n- **WS_GROUP** Specifies the first control of a group of controls in which the user can move from one control to the next with the arrow keys. All controls defined with the **WS_GROUP** style after the first control belong to the same group. The next control with the **WS_GROUP** style ends the style group and starts the next group (that is, one group ends where the next begins).  \n  \n- **WS_TABSTOP** Specifies one of any number of controls through which the user can move by using the TAB key. The TAB key moves the user to the next control specified by the **WS_TABSTOP** style.  \n  \n If you want to use extended windows styles with your control, call [CreateEx](#cheaderctrl__createex) instead of **Create**.  \n  \n### Example  \n [!code-cpp[NVC_MFC_CHeaderCtrl#4](../../mfc/reference/codesnippet/cpp/cheaderctrl-class_4.cpp)]  \n  \n##  <a name=\"cheaderctrl__createex\"></a>  CHeaderCtrl::CreateEx  \n Creates a control (a child window) and associate it with the `CHeaderCtrl` object.  \n  \n```  \nvirtual BOOL CreateEx(\n    DWORD dwExStyle,  \n    DWORD dwStyle,  \n    const RECT& rect,  \n    CWnd* pParentWnd,  \n    UINT nID);\n```  \n  \n### Parameters  \n `dwExStyle`  \n Specifies the extended style of the control being created. For a list of extended Windows styles, see the `dwExStyle` parameter for [CreateWindowEx](http://msdn.microsoft.com/library/windows/desktop/ms632680) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n `dwStyle`  \n The header control's style. For a description of header control styles, see [Header Control Styles](http://msdn.microsoft.com/library/windows/desktop/bb775241) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]. See [Create](#cheaderctrl__create) for a list of additional styles.  \n  \n `rect`  \n A reference to a [RECT](http://msdn.microsoft.com/library/windows/desktop/dd162897) structure describing the size and position of the window to be created, in client coordinates of `pParentWnd`.  \n  \n `pParentWnd`  \n A pointer to the window that is the control's parent.  \n  \n `nID`  \n The control's child-window ID.  \n  \n### Return Value  \n Nonzero if successful; otherwise 0.  \n  \n### Remarks  \n Use `CreateEx` instead of **Create** to apply extended Windows styles, specified by the Windows extended style preface **WS_EX_**.  \n  \n##  <a name=\"cheaderctrl__createdragimage\"></a>  CHeaderCtrl::CreateDragImage  \n Creates a transparent version of an item's image within a header control.  \n  \n```  \nCImageList* CreateDragImage(int nIndex);\n```  \n  \n### Parameters  \n `nIndex`  \n The zero-based index of the item within the header control. The image assigned to this item is the basis for the transparent image.  \n  \n### Return Value  \n A pointer to a [CImageList](../../mfc/reference/cimagelist-class.md) object if successful; otherwise **NULL**. The returned list contains only one image.  \n  \n### Remarks  \n This member function implements the behavior of the Win32 message [HDM_CREATEDRAGIMAGE](http://msdn.microsoft.com/library/windows/desktop/bb775308), as described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]. It is provided to support header item drag and drop.  \n  \n The `CImageList` object to which the returned pointer points is a temporary object and is deleted in the next idle-time processing.  \n  \n##  <a name=\"cheaderctrl__deleteitem\"></a>  CHeaderCtrl::DeleteItem  \n Deletes an item from a header control.  \n  \n```  \nBOOL DeleteItem(int nPos);\n```  \n  \n### Parameters  \n `nPos`  \n Specifies the zero-based index of the item to delete.  \n  \n### Return Value  \n Nonzero if successful; otherwise 0.  \n  \n### Example  \n [!code-cpp[NVC_MFC_CHeaderCtrl#5](../../mfc/reference/codesnippet/cpp/cheaderctrl-class_5.cpp)]  \n  \n##  <a name=\"cheaderctrl__drawitem\"></a>  CHeaderCtrl::DrawItem  \n Called by the framework when a visual aspect of an owner-draw header control changes.  \n  \n```  \nvirtual void DrawItem(LPDRAWITEMSTRUCT lpDrawItemStruct);\n```  \n  \n### Parameters  \n `lpDrawItemStruct`  \n A pointer to a [DRAWITEMSTRUCT](http://msdn.microsoft.com/library/windows/desktop/bb775802) structure describing the item to be painted.  \n  \n### Remarks  \n The **itemAction** member of the `DRAWITEMSTRUCT` structure defines the drawing action that is to be performed.  \n  \n By default, this member function does nothing. Override this member function to implement drawing for an owner-draw `CHeaderCtrl` object.  \n  \n The application should restore all graphics device interface (GDI) objects selected for the display context supplied in `lpDrawItemStruct` before this member function terminates.  \n  \n### Example  \n [!code-cpp[NVC_MFC_CHeaderCtrl#6](../../mfc/reference/codesnippet/cpp/cheaderctrl-class_6.cpp)]  \n  \n##  <a name=\"cheaderctrl__editfilter\"></a>  CHeaderCtrl::EditFilter  \n Begins to edit the specified filter of a header control.  \n  \n```  \nBOOL EditFilter(\n    int nColumn,  \n    BOOL bDiscardChanges);\n```  \n  \n### Parameters  \n `nColumn`  \n The column to edit.  \n  \n `bDiscardChanges`  \n A value that specifies how to handle the user's editing changes if the user is in the process of editing the filter when the [HDM_EDITFILTER](http://msdn.microsoft.com/library/windows/desktop/bb775312) message is sent.  \n  \n Specify `true` to discard the changes made by the user, or `false` to accept the changes made by the user.  \n  \n### Return Value  \n `true` if this method is successful; otherwise, `false`.  \n  \n### Remarks  \n This method implements the behavior of the Win32 message [HDM_EDITFILTER](http://msdn.microsoft.com/library/windows/desktop/bb775312), as described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n### Example  \n [!code-cpp[NVC_MFC_CHeaderCtrl#7](../../mfc/reference/codesnippet/cpp/cheaderctrl-class_7.cpp)]  \n  \n##  <a name=\"cheaderctrl__getbitmapmargin\"></a>  CHeaderCtrl::GetBitmapMargin  \n Retrieves the width of the margin of a bitmap in a header control.  \n  \n```  \nint GetBitmapMargin() const;\n\n \n```  \n  \n### Return Value  \n The width of the bitmap margin in pixels.  \n  \n### Remarks  \n This member function implements the behavior of the Win32 message [HDM_GETBITMAPMARGIN](http://msdn.microsoft.com/library/windows/desktop/bb775314), as described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n### Example  \n [!code-cpp[NVC_MFC_CHeaderCtrl#8](../../mfc/reference/codesnippet/cpp/cheaderctrl-class_8.cpp)]  \n  \n##  <a name=\"cheaderctrl__getfocuseditem\"></a>  CHeaderCtrl::GetFocusedItem  \n Gets the index of the item that has the focus in the current header control.  \n  \n```  \nint GetFocusedItem() const;\n\n \n```  \n  \n### Return Value  \n The zero-based index of the header item that has the focus.  \n  \n### Remarks  \n This method sends the [HDM_GETFOCUSEDITEM](http://msdn.microsoft.com/library/windows/desktop/bb775330) message, which is described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n### Example  \n The following code example defines the variable, `m_headerCtrl`, that is used to access the current header control. This variable is used in the next example.  \n  \n [!code-cpp[NVC_MFC_CHeaderCtrl_s4#6](../../mfc/reference/codesnippet/cpp/cheaderctrl-class_9.h)]  \n  \n### Example  \n The following code example demonstrates the `SetFocusedItem` and `GetFocusedItem` methods. In an earlier section of the code, we created a header control with five columns. However, you can drag a column separator so that the column is not visible. The following example sets and then confirms the last column header as the focus item.  \n  \n [!code-cpp[NVC_MFC_CHeaderCtrl_s4#4](../../mfc/reference/codesnippet/cpp/cheaderctrl-class_10.cpp)]  \n  \n##  <a name=\"cheaderctrl__getimagelist\"></a>  CHeaderCtrl::GetImageList  \n Retrieves the handle of an image list used for drawing header items in a header control.  \n  \n```  \nCImageList* GetImageList() const;\n\n \n```  \n  \n### Return Value  \n A pointer to a [CImageList](../../mfc/reference/cimagelist-class.md) object.  \n  \n### Remarks  \n This member function implements the behavior of the Win32 message [HDM_GETIMAGELIST](http://msdn.microsoft.com/library/windows/desktop/bb775332), as described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]. The `CImageList` object to which the returned pointer points is a temporary object and is deleted in the next idle-time processing.  \n  \n### Example  \n [!code-cpp[NVC_MFC_CHeaderCtrl#9](../../mfc/reference/codesnippet/cpp/cheaderctrl-class_11.cpp)]  \n  \n##  <a name=\"cheaderctrl__getitem\"></a>  CHeaderCtrl::GetItem  \n Retrieves information about a header control item.  \n  \n```  \nBOOL GetItem(\n    int nPos,  \n    HDITEM* pHeaderItem) const;\n\n \n```  \n  \n### Parameters  \n `nPos`  \n Specifies the zero-based index of the item to retrieve.  \n  \n `pHeaderItem`  \n Pointer to an [HDITEM](http://msdn.microsoft.com/library/windows/desktop/bb775247) structure that receives the new item. This structure is used with the `InsertItem` and `SetItem` member functions. Any flags set in the **mask** element ensure that values in the corresponding elements are properly filled in upon return. If the **mask** element is set to zero, values in the other structure elements are meaningless.  \n  \n### Return Value  \n Nonzero if successful; otherwise 0.  \n  \n### Example  \n [!code-cpp[NVC_MFC_CHeaderCtrl#10](../../mfc/reference/codesnippet/cpp/cheaderctrl-class_12.cpp)]  \n  \n##  <a name=\"cheaderctrl__getitemcount\"></a>  CHeaderCtrl::GetItemCount  \n Retrieves a count of the items in a header control.  \n  \n```  \nint GetItemCount() const;\n\n \n```  \n  \n### Return Value  \n Number of header control items if successful; otherwise – 1.  \n  \n### Example  \n  See the example for [CHeaderCtrl::DeleteItem](#cheaderctrl__deleteitem).  \n  \n##  <a name=\"cheaderctrl__getitemdropdownrect\"></a>  CHeaderCtrl::GetItemDropDownRect  \n Gets the bounding rectangle of the drop-down button for a header item in the current header control.  \n  \n```  \nBOOL GetItemDropDownRect(\n    int iItem,   \n    LPRECT lpRect) const;\n\n \n```  \n  \n### Parameters  \n  \n|Parameter|Description|  \n|---------------|-----------------|  \n|[in] `iItem`|Zero-based index of a header item whose style is `HDF_SPLITBUTTON`. For more information, see the `fmt` member of the [HDITEM](http://msdn.microsoft.com/library/windows/desktop/bb775247) structure.|  \n|[out] `lpRect`|Pointer to a [RECT](http://msdn.microsoft.com/library/windows/desktop/dd162897) structure to receive the bounding rectangle information.|  \n  \n### Return Value  \n `true` if this function is successful; otherwise, `false`.  \n  \n### Remarks  \n This method sends the [HDM_GETITEMDROPDOWNRECT](http://msdn.microsoft.com/library/windows/desktop/bb775339) message, which is described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n### Example  \n The following code example defines the variable, `m_headerCtrl`, that is used to access the current header control. This variable is used in the next example.  \n  \n [!code-cpp[NVC_MFC_CHeaderCtrl_s4#6](../../mfc/reference/codesnippet/cpp/cheaderctrl-class_9.h)]  \n  \n### Example  \n The following code example demonstrates the `GetItemDropDownRect` method. In an earlier section of the code, we created a header control with five columns. The following code example draws a 3D rectangle around the location on the first column that is reserved for the header drop-down button.  \n  \n [!code-cpp[NVC_MFC_CHeaderCtrl_s4#2](../../mfc/reference/codesnippet/cpp/cheaderctrl-class_13.cpp)]  \n  \n##  <a name=\"cheaderctrl__getitemrect\"></a>  CHeaderCtrl::GetItemRect  \n Retrieves the bounding rectangle for a given item in a header control.  \n  \n```  \nBOOL GetItemRect(\n    int nIndex,  \n    LPRECT lpRect) const;\n\n \n```  \n  \n### Parameters  \n `nIndex`  \n The zero-based index of the header control item.  \n  \n `lpRect`  \n A pointer to the address of a [RECT](http://msdn.microsoft.com/library/windows/desktop/dd162897) structure that receives the bounding rectangle information.  \n  \n### Return Value  \n Nonzero if successful; otherwise 0.  \n  \n### Remarks  \n This method implements the behavior of the Win32 message [HDM_GETITEMRECT](http://msdn.microsoft.com/library/windows/desktop/bb775341), as described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n##  <a name=\"cheaderctrl__getorderarray\"></a>  CHeaderCtrl::GetOrderArray  \n Retrieves the left-to-right order of items in a header control.  \n  \n```  \nBOOL GetOrderArray(\n    LPINT piArray,  \n    int iCount);\n```  \n  \n### Parameters  \n `piArray`  \n A pointer to the address of a buffer that receives the index values of the items in the header control, in the order in which they appear from left to right.  \n  \n `iCount`  \n The number of header control items. Must be non-negative.  \n  \n### Return Value  \n Nonzero if successful; otherwise 0.  \n  \n### Remarks  \n This member function implements the behavior of the Win32 message [HDM_GETORDERARRAY](http://msdn.microsoft.com/library/windows/desktop/bb775343), as described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]. It is provided to support header item ordering.  \n  \n### Example  \n [!code-cpp[NVC_MFC_CHeaderCtrl#11](../../mfc/reference/codesnippet/cpp/cheaderctrl-class_14.cpp)]  \n  \n##  <a name=\"cheaderctrl__getoverflowrect\"></a>  CHeaderCtrl::GetOverflowRect  \n Gets the bounding rectangle of the overflow button of the current header control.  \n  \n```  \nBOOL GetOverflowRect(LPRECT lpRect) const;\n\n \n```  \n  \n### Parameters  \n  \n|Parameter|Description|  \n|---------------|-----------------|  \n|[out] `lpRect`|Pointer to a [RECT](http://msdn.microsoft.com/library/windows/desktop/dd162897) structure that receives the bounding rectangle information.|  \n  \n### Return Value  \n `true` if this function is successful; otherwise, `false`.  \n  \n### Remarks  \n If the header control contains more items than can be simultaneously displayed, the control can display an overflow button that scrolls to items that are not visible. The header control must have the `HDS_OVERFLOW` and `HDF_SPLITBUTTON` styles to display the overflow button. The bounding rectangle encloses the overflow button and exists only when the overflow button is displayed. For more information, see [Header Control Styles](http://msdn.microsoft.com/library/windows/desktop/bb775241).  \n  \n This method sends the [HDM_GETOVERFLOWRECT](http://msdn.microsoft.com/library/windows/desktop/bb775345) message, which is described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n### Example  \n The following code example defines the variable, `m_headerCtrl`, that is used to access the current header control. This variable is used in the next example.  \n  \n [!code-cpp[NVC_MFC_CHeaderCtrl_s4#6](../../mfc/reference/codesnippet/cpp/cheaderctrl-class_9.h)]  \n  \n### Example  \n The following code example demonstrates the `GetOverflowRect` method. In an earlier section of the code, we created a header control with five columns. However, you can drag a column separator so that the column is not visible. If some columns are not visible, the header control draws an overflow button. The following code example draws a 3D rectangle around the location of the overflow button.  \n  \n [!code-cpp[NVC_MFC_CHeaderCtrl_s4#3](../../mfc/reference/codesnippet/cpp/cheaderctrl-class_15.cpp)]  \n  \n##  <a name=\"cheaderctrl__hittest\"></a>  CHeaderCtrl::HitTest  \n Determines which header item, if any, is located at a specified point.  \n  \n```  \nint HitTest(LPHDHITTESTINFO* phdhti);\n```  \n  \n### Parameters  \n  \n|Parameter|Description|  \n|---------------|-----------------|  \n|[in, out] `phdhti`|Pointer to a [HDHITTESTINFO](http://msdn.microsoft.com/library/windows/desktop/bb775245) structure that specifies the point to test and receives the results of the test.|  \n  \n### Return Value  \n The zero-based index of the header item, if any, at the specified position; otherwise, –1.  \n  \n### Remarks  \n This method sends the [HDM_HITTEST](http://msdn.microsoft.com/library/windows/desktop/bb775349) message, which is described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n### Example  \n The following code example defines the variable, `m_headerCtrl`, that is used to access the current header control. This variable is used in the next example.  \n  \n [!code-cpp[NVC_MFC_CHeaderCtrl_s4#6](../../mfc/reference/codesnippet/cpp/cheaderctrl-class_9.h)]  \n  \n### Example  \n The following code example demonstrates the `HitTest` method. In an earlier section of this code example, we created a header control with five columns. However, you can drag a column separator so that the column is not visible. This example reports the index of the column if it is visible and -1 if the column is not visible.  \n  \n [!code-cpp[NVC_MFC_CHeaderCtrl_s4#1](../../mfc/reference/codesnippet/cpp/cheaderctrl-class_16.cpp)]  \n  \n##  <a name=\"cheaderctrl__insertitem\"></a>  CHeaderCtrl::InsertItem  \n Inserts a new item into a header control at the specified index.  \n  \n```  \nint InsertItem(\n    int nPos,  \n    HDITEM* phdi);\n```  \n  \n### Parameters  \n `nPos`  \n The zero-based index of the item to be inserted. If the value is zero, the item is inserted at the beginning of the header control. If the value is greater than the maximum value, the item is inserted at the end of the header control.  \n  \n *phdi*  \n Pointer to an [HDITEM](http://msdn.microsoft.com/library/windows/desktop/bb775247) structure that contains information about the item to be inserted.  \n  \n### Return Value  \n Index of the new item if successful; otherwise – 1.  \n  \n### Example  \n [!code-cpp[NVC_MFC_CHeaderCtrl#12](../../mfc/reference/codesnippet/cpp/cheaderctrl-class_17.cpp)]  \n  \n##  <a name=\"cheaderctrl__layout\"></a>  CHeaderCtrl::Layout  \n Retrieves the size and position of a header control within a given rectangle.  \n  \n```  \nBOOL Layout(HDLAYOUT* pHeaderLayout);\n```  \n  \n### Parameters  \n *pHeaderLayout*  \n Pointer to an [HDLAYOUT](http://msdn.microsoft.com/library/windows/desktop/bb775249) structure, which contains information used to set the size and position of a header control.  \n  \n### Return Value  \n Nonzero if successful; otherwise 0.  \n  \n### Remarks  \n This function is used to determine the appropriate dimensions for a new header control that is to occupy the given rectangle.  \n  \n### Example  \n [!code-cpp[NVC_MFC_CHeaderCtrl#13](../../mfc/reference/codesnippet/cpp/cheaderctrl-class_18.cpp)]  \n  \n##  <a name=\"cheaderctrl__ordertoindex\"></a>  CHeaderCtrl::OrderToIndex  \n Retrieves the index value for an item based on its order in the header control.  \n  \n```  \nint OrderToIndex(int nOrder) const;\n\n \n```  \n  \n### Parameters  \n *nOrder*  \n The zero-based order that the item appears in the header control, from left to right.  \n  \n### Return Value  \n The index of the item, based on its order in the header control. The index counts from left to right, beginning with 0.  \n  \n### Remarks  \n This member function implements the behavior of the Win32 macro [HDM_ORDERTOINDEX](http://msdn.microsoft.com/library/windows/desktop/bb775355), as described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]. It is provided to support header item ordering.  \n  \n##  <a name=\"cheaderctrl__setbitmapmargin\"></a>  CHeaderCtrl::SetBitmapMargin  \n Sets the width of the margin of a bitmap in a header control.  \n  \n```  \nint SetBitmapMargin(int nWidth);\n```  \n  \n### Parameters  \n `nWidth`  \n Width, specified in pixels, of the margin that surrounds a bitmap within an existing header control.  \n  \n### Return Value  \n The width of the bitmap margin in pixels.  \n  \n### Remarks  \n This member function implements the behavior of the Win32 message [HDM_SETBITMAPMARGIN](http://msdn.microsoft.com/library/windows/desktop/bb775357), as described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n### Example  \n [!code-cpp[NVC_MFC_CHeaderCtrl#14](../../mfc/reference/codesnippet/cpp/cheaderctrl-class_19.cpp)]  \n  \n##  <a name=\"cheaderctrl__setfilterchangetimeout\"></a>  CHeaderCtrl::SetFilterChangeTimeout  \n Sets the timeout interval between the time a change takes place in the filter attributes and the posting of an [HDN_FILTERCHANGE](http://msdn.microsoft.com/library/windows/desktop/bb775277) notification.  \n  \n```  \nint SetFilterChangeTimeout(DWORD dwTimeOut);\n```  \n  \n### Parameters  \n *dwTimeOut*  \n Timeout value, in milliseconds.  \n  \n### Return Value  \n The index of the filter control being modified.  \n  \n### Remarks  \n This member function implements the behavior of the Win32 message [HDM_SETFILTERCHANGETIMEOUT](http://msdn.microsoft.com/library/windows/desktop/bb775359), as described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n### Example  \n [!code-cpp[NVC_MFC_CHeaderCtrl#15](../../mfc/reference/codesnippet/cpp/cheaderctrl-class_20.cpp)]  \n  \n##  <a name=\"cheaderctrl__setfocuseditem\"></a>  CHeaderCtrl::SetFocusedItem  \n Sets the focus to a specified header item in the current header control.  \n  \n```  \nBOOL SetFocusedItem(int iItem);\n```  \n  \n### Parameters  \n  \n|Parameter|Description|  \n|---------------|-----------------|  \n|[in] `iItem`|Zero-based index of a header item.|  \n  \n### Return Value  \n `true` if this method is successful; otherwise, `false`.  \n  \n### Remarks  \n This method sends the [HDM_SETFOCUSEDITEM](http://msdn.microsoft.com/library/windows/desktop/bb775361) message, which is described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n### Example  \n The following code example defines the variable, `m_headerCtrl`, that is used to access the current header control. This variable is used in the next example.  \n  \n [!code-cpp[NVC_MFC_CHeaderCtrl_s4#6](../../mfc/reference/codesnippet/cpp/cheaderctrl-class_9.h)]  \n  \n### Example  \n The following code example demonstrates the `SetFocusedItem` and `GetFocusedItem` methods. In an earlier section of the code, we created a header control with five columns. However, you can drag a column separator so that the column is not visible. The following example sets and then confirms the last column header as the focus item.  \n  \n [!code-cpp[NVC_MFC_CHeaderCtrl_s4#4](../../mfc/reference/codesnippet/cpp/cheaderctrl-class_10.cpp)]  \n  \n##  <a name=\"cheaderctrl__sethotdivider\"></a>  CHeaderCtrl::SetHotDivider  \n Changes the divider between header items to indicate a manual drag and drop of a header item.  \n  \n```  \nint SetHotDivider(CPoint pt);\n\n \nint SetHotDivider(int nIndex);\n```  \n  \n### Parameters  \n `pt`  \n The position of the pointer. The header control highlights the appropriate divider based on the pointer's position.  \n  \n `nIndex`  \n The index of the highlighted divider.  \n  \n### Return Value  \n The index of the highlighted divider.  \n  \n### Remarks  \n This member function implements the behavior of the Win32 message [HDM_SETHOTDIVIDER](http://msdn.microsoft.com/library/windows/desktop/bb775363), as described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]. It is provided to support header item drag and drop.  \n  \n### Example  \n [!code-cpp[NVC_MFC_CHeaderCtrl#16](../../mfc/reference/codesnippet/cpp/cheaderctrl-class_21.cpp)]  \n  \n##  <a name=\"cheaderctrl__setimagelist\"></a>  CHeaderCtrl::SetImageList  \n Assigns an image list to a header control.  \n  \n```  \nCImageList* SetImageList(CImageList* pImageList);\n```  \n  \n### Parameters  \n `pImageList`  \n A pointer to a `CImageList` object containing the image list to be assigned to the header control.  \n  \n### Return Value  \n A pointer to the [CImageList](../../mfc/reference/cimagelist-class.md) object previously assigned to the header control.  \n  \n### Remarks  \n This member function implements the behavior of the Win32 message [HDM_SETIMAGELIST](http://msdn.microsoft.com/library/windows/desktop/bb775365), as described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]. The `CImageList` object to which the returned pointer points is a temporary object and is deleted in the next idle-time processing.  \n  \n### Example  \n  See the example for [CHeaderCtrl::GetImageList](#cheaderctrl__getimagelist).  \n  \n##  <a name=\"cheaderctrl__setitem\"></a>  CHeaderCtrl::SetItem  \n Sets the attributes of the specified item in a header control.  \n  \n```  \nBOOL SetItem(\n    int nPos,  \n    HDITEM* pHeaderItem);\n```  \n  \n### Parameters  \n `nPos`  \n The zero-based index of the item to be manipulated.  \n  \n `pHeaderItem`  \n Pointer to an [HDITEM](http://msdn.microsoft.com/library/windows/desktop/bb775247) structure that contains information about the new item.  \n  \n### Return Value  \n Nonzero if successful; otherwise 0.  \n  \n### Example  \n  See the example for [CHeaderCtrl::GetItem](#cheaderctrl__getitem).  \n  \n##  <a name=\"cheaderctrl__setorderarray\"></a>  CHeaderCtrl::SetOrderArray  \n Sets the left-to-right order of items in a header control.  \n  \n```  \nBOOL SetOrderArray(\n    int iCount,  \n    LPINT piArray);\n```  \n  \n### Parameters  \n `iCount`  \n The number of header control items.  \n  \n `piArray`  \n A pointer to the address of a buffer that receives the index values of the items in the header control, in the order in which they appear from left to right.  \n  \n### Return Value  \n Nonzero if successful; otherwise 0.  \n  \n### Remarks  \n This member function implements the behavior of the Win32 macro [HDM_SETORDERARRAY](http://msdn.microsoft.com/library/windows/desktop/bb775369), as described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]. It is provided to support header item ordering.  \n  \n### Example  \n  See the example for [CHeaderCtrl::GetOrderArray](#cheaderctrl__getorderarray).  \n  \n## See Also  \n [CWnd Class](../../mfc/reference/cwnd-class.md)   \n [Hierarchy Chart](../../mfc/hierarchy-chart.md)   \n [CTabCtrl Class](../../mfc/reference/ctabctrl-class.md)   \n [CListCtrl Class](../../mfc/reference/clistctrl-class.md)   \n [CImageList Class](../../mfc/reference/cimagelist-class.md)\n"}