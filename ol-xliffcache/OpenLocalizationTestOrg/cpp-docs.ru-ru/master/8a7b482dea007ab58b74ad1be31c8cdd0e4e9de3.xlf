<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ru-ru">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-04506c2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8a7b482dea007ab58b74ad1be31c8cdd0e4e9de3</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\c-runtime-library\reference\mbsnbset-s-mbsnbset-s-l.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3b3c3f62366ca0846b1c1b25adee64b74ab54cb1</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a51ec04c0a0ebd955797b40bf1baeaa42eb9cfb3</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>_mbsnbset_s, _mbsnbset_s_l | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>_mbsnbset_s, _mbsnbset_s_l</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Sets the first <ph id="ph1">`n`</ph> bytes of a multibyte-character string to a specified character.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>These versions of <bpt id="p1">[</bpt>_mbsnbset, _mbsnbset_l<ept id="p1">](../../c-runtime-library/reference/mbsnbset-mbsnbset-l.md)</ept> have security enhancements, as described in <bpt id="p2">[</bpt>Security Features in the CRT<ept id="p2">](../../c-runtime-library/security-features-in-the-crt.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>This API cannot be used in applications that execute in the <ph id="ph1">[!INCLUDE[wrt](../../atl/reference/includes/wrt_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>CRT functions not supported with /ZW<ept id="p1">](http://msdn.microsoft.com/library/windows/apps/jj606124.aspx)</ept>.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>String to be altered.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The size of the string buffer.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Single-byte or multibyte-character setting.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Number of bytes to be set.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Locale to use.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Zero if successful; otherwise, an error code.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`_mbsnbset_s`</ph> and <ph id="ph2">`_mbsnbset_s_l`</ph> functions set, at most, the first <ph id="ph3">`count`</ph> bytes of <ph id="ph4">`str`</ph> to <ph id="ph5">`c`</ph>.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`count`</ph> is greater than the length of <ph id="ph2">`str`</ph>, the length of <ph id="ph3">`str`</ph> is used instead of <ph id="ph4">`count`</ph>.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`c`</ph> is a multibyte character and cannot be set entirely into the last byte that's specified by <ph id="ph2">`count`</ph>, the last byte is padded with a blank character.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>and <ph id="ph1">`_mbsnbset_s_l`</ph> do not place a terminating null at the end of <ph id="ph2">`str`</ph>.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>and <ph id="ph1">`_mbsnbset_s_l`</ph> resemble <ph id="ph2">`_mbsnset`</ph>, except that they set <ph id="ph3">`count`</ph> bytes rather than <ph id="ph4">`count`</ph> characters of <ph id="ph5">`c`</ph>.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`str`</ph> is <ph id="ph2">`NULL`</ph> or <ph id="ph3">`count`</ph> is zero, this function generates an invalid parameter exception, as described in <bpt id="p1">[</bpt>Parameter Validation<ept id="p1">](../../c-runtime-library/parameter-validation.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>If execution is allowed to continue, <ph id="ph1">`errno`</ph> is set to <ph id="ph2">`EINVAL`</ph> and the function returns <ph id="ph3">`NULL`</ph>.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Also, if <ph id="ph1">`c`</ph> is not a valid multibyte character, <ph id="ph2">`errno`</ph> is set to <ph id="ph3">`EINVAL`</ph> and a space is used instead.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The output value is affected by the setting of the <ph id="ph1">`LC_CTYPE`</ph> category setting of the locale; see <bpt id="p1">[</bpt>setlocale, _wsetlocale<ept id="p1">](../../c-runtime-library/reference/setlocale-wsetlocale.md)</ept> for more information.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`_mbsnbset_s`</ph> version of this function uses the current locale for this locale-dependent behavior; the <ph id="ph2">`_mbsnbset_s_l`</ph> version is identical except that it instead uses the locale parameter that's passed in.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Locale<ept id="p1">](../../c-runtime-library/locale.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>In C++, use of these functions is simplified by template overloads; the overloads can infer buffer length automatically and thereby eliminate the need to specify a size argument.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Secure Template Overloads<ept id="p1">](../../c-runtime-library/secure-template-overloads.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The debug versions of these functions first fill the buffer with 0xFD.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>To disable this behavior, use <bpt id="p1">[</bpt>_CrtSetDebugFillThreshold<ept id="p1">](../../c-runtime-library/reference/crtsetdebugfillthreshold.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Generic-Text Routine Mappings</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Tchar.h routine</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>_UNICODE and _MBCS not defined</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>_MBCS defined</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>_UNICODE defined</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Requirements</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Routine</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Required header</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>mbstring.h&gt;</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>mbstring.h&gt;</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>For more compatibility information, see <bpt id="p1">[</bpt>Compatibility<ept id="p1">](../../c-runtime-library/compatibility.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Output</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>.NET Framework Equivalent</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Not applicable.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>To call the standard C function, use <ph id="ph1">`PInvoke`</ph>.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Platform Invoke Examples<ept id="p1">](http://msdn.microsoft.com/Library/15926806-f0b7-487e-93a6-4e9367ec689f)</ept>.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>String Manipulation</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>_mbsnbcat, _mbsnbcat_l</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>_strnset, _strnset_l, _wcsnset, _wcsnset_l, _mbsnset, _mbsnset_l</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>_strset, _strset_l, _wcsset, _wcsset_l, _mbsset, _mbsset_l</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>