{"nodes":[{"pos":[12,63],"content":"-Gh (Enable _penter Hook Function) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"-Gh (Enable _penter Hook Function) | Microsoft Docs","pos":[0,51]}]},{"content":"/Gh (Enable _penter Hook Function)","pos":[712,746]},{"pos":[747,828],"content":"Causes a call to the <ph id=\"ph1\">`_penter`</ph> function at the start of every method or function.","source":"Causes a call to the `_penter` function at the start of every method or function."},{"content":"Syntax","pos":[837,843]},{"content":"Remarks","pos":[873,880]},{"pos":[884,992],"content":"The <ph id=\"ph1\">`_penter`</ph> function is not part of any library and it is up to you to provide a definition for <ph id=\"ph2\">`_penter`</ph>.","source":"The `_penter` function is not part of any library and it is up to you to provide a definition for `_penter`."},{"content":"Unless you plan to explicitly call <ph id=\"ph1\">`_penter`</ph>, you do not need to provide a prototype.","pos":[999,1084],"source":"Unless you plan to explicitly call `_penter`, you do not need to provide a prototype."},{"content":"The function must appear as if it had the following prototype, and it must push the content of all registers on entry and pop the unchanged content on exit:","pos":[1085,1241]},{"content":"This declaration is not available for 64-bit projects.","pos":[1312,1366]},{"content":"To set this compiler option in the Visual Studio development environment","pos":[1376,1448]},{"content":"Open the project's <bpt id=\"p1\">**</bpt>Property Pages<ept id=\"p1\">**</ept> dialog box.","pos":[1458,1507],"source":"Open the project's **Property Pages** dialog box."},{"content":"For details, see <bpt id=\"p1\">[</bpt>Working with Project Properties<ept id=\"p1\">](../../ide/working-with-project-properties.md)</ept>.","pos":[1508,1605],"source":" For details, see [Working with Project Properties](../../ide/working-with-project-properties.md)."},{"pos":[1615,1642],"content":"Click the <bpt id=\"p1\">**</bpt>C/C++<ept id=\"p1\">**</ept> folder.","source":"Click the **C/C++** folder."},{"pos":[1652,1693],"content":"Click the <bpt id=\"p1\">**</bpt>Command Line<ept id=\"p1\">**</ept> property page.","source":"Click the **Command Line** property page."},{"pos":[1703,1762],"content":"Type the compiler option in the <bpt id=\"p1\">**</bpt>Additional Options<ept id=\"p1\">**</ept> box.","source":"Type the compiler option in the **Additional Options** box."},{"content":"To set this compiler option programmatically","pos":[1772,1816]},{"content":"See &lt;xref:Microsoft.VisualStudio.VCProjectEngine.VCCLCompilerTool.AdditionalOptions%2A&gt;.","pos":[1826,1914],"source":"See <xref:Microsoft.VisualStudio.VCProjectEngine.VCCLCompilerTool.AdditionalOptions%2A>."},{"content":"Example","pos":[1923,1930]},{"pos":[1934,2090],"content":"The following code, when compiled with <bpt id=\"p1\">**</bpt>/Gh<ept id=\"p1\">**</ept>, shows how <ph id=\"ph1\">`_penter`</ph> is called twice; once when entering function <ph id=\"ph2\">`main`</ph> and once when entering function <ph id=\"ph3\">`x`</ph>.","source":"The following code, when compiled with **/Gh**, shows how `_penter` is called twice; once when entering function `main` and once when entering function `x`."},{"content":"See Also","pos":[2699,2707]},{"content":"Compiler Options","pos":[2712,2728]},{"content":"Setting Compiler Options","pos":[2778,2802]}],"content":"---\ntitle: \"-Gh (Enable _penter Hook Function) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"_penter\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"/Gh compiler option [C++]\"\n  - \"Gh compiler option [C++]\"\n  - \"_penter function\"\n  - \"-Gh compiler option [C++]\"\nms.assetid: 1510a082-8a0e-486e-a309-6add814b494f\ncaps.latest.revision: 18\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# /Gh (Enable _penter Hook Function)\nCauses a call to the `_penter` function at the start of every method or function.  \n  \n## Syntax  \n  \n```  \n/Gh  \n```  \n  \n## Remarks  \n The `_penter` function is not part of any library and it is up to you to provide a definition for `_penter`.  \n  \n Unless you plan to explicitly call `_penter`, you do not need to provide a prototype. The function must appear as if it had the following prototype, and it must push the content of all registers on entry and pop the unchanged content on exit:  \n  \n```  \nvoid __declspec(naked) _cdecl _penter( void );  \n```  \n  \n This declaration is not available for 64-bit projects.  \n  \n### To set this compiler option in the Visual Studio development environment  \n  \n1.  Open the project's **Property Pages** dialog box. For details, see [Working with Project Properties](../../ide/working-with-project-properties.md).  \n  \n2.  Click the **C/C++** folder.  \n  \n3.  Click the **Command Line** property page.  \n  \n4.  Type the compiler option in the **Additional Options** box.  \n  \n### To set this compiler option programmatically  \n  \n-   See <xref:Microsoft.VisualStudio.VCProjectEngine.VCCLCompilerTool.AdditionalOptions%2A>.  \n  \n## Example  \n The following code, when compiled with **/Gh**, shows how `_penter` is called twice; once when entering function `main` and once when entering function `x`.  \n  \n```  \n// Gh_compiler_option.cpp  \n// compile with: /Gh  \n// processor: x86  \n#include <stdio.h>  \nvoid x() {}  \n  \nint main() {  \n   x();  \n}  \n  \nextern \"C\" void __declspec(naked) _cdecl _penter( void ) {  \n   _asm {  \n      push eax  \n      push ebx  \n      push ecx  \n      push edx  \n      push ebp  \n      push edi  \n      push esi  \n    }  \n  \n   printf_s(\"\\nIn a function!\");  \n  \n   _asm {  \n      pop esi  \n      pop edi  \n      pop ebp  \n      pop edx  \n      pop ecx  \n      pop ebx  \n      pop eax  \n      ret  \n    }  \n}  \n```  \n  \n```Output  \nIn a function!  \nIn a function!  \n```  \n  \n## See Also  \n [Compiler Options](../../build/reference/compiler-options.md)   \n [Setting Compiler Options](../../build/reference/setting-compiler-options.md)"}