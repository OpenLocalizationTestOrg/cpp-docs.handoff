{"nodes":[{"pos":[12,58],"content":"is_nothrow_destructible Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"is_nothrow_destructible Class | Microsoft Docs","pos":[0,46]}]},{"content":"is_nothrow_destructible Class","pos":[772,801]},{"content":"Tests whether the type is destructible and the destructor is known to the compiler not to throw.","pos":[802,898]},{"content":"Syntax","pos":[907,913]},{"content":"Parameters","pos":[990,1000]},{"content":"The type to query.","pos":[1011,1029]},{"content":"Remarks","pos":[1038,1045]},{"content":"An instance of the type predicate holds true if the type <ph id=\"ph1\">`T`</ph> is a destructible type, and the destructor is known to the compiler not to throw.","pos":[1049,1191],"source":"An instance of the type predicate holds true if the type `T` is a destructible type, and the destructor is known to the compiler not to throw."},{"content":"Otherwise, it holds false.","pos":[1192,1218]},{"content":"Requirements","pos":[1227,1239]},{"pos":[1243,1268],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> &lt;type_traits&gt;","source":"**Header:** <type_traits>"},{"pos":[1275,1293],"content":"<bpt id=\"p1\">**</bpt>Namespace:<ept id=\"p1\">**</ept> std","source":"**Namespace:** std"},{"content":"See Also","pos":[1302,1310]},{"content":"&lt;type_traits&gt;","pos":[1315,1328],"source":"<type_traits>"}],"content":"---\ntitle: \"is_nothrow_destructible Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"cpp\"\n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"language-reference\"\nf1_keywords: \n  - \"is_nothrow_destructible\"\n  - \"std.is_nothrow_destructible\"\n  - \"std::is_nothrow_destructible\"\n  - \"type_traits/std::is_nothrow_destructible\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"is_nothrow_destructible\"\nms.assetid: 0bbd8a28-e312-4d72-bd28-aac027f974d3\ncaps.latest.revision: 12\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# is_nothrow_destructible Class\nTests whether the type is destructible and the destructor is known to the compiler not to throw.  \n  \n## Syntax  \n  \n```\ntemplate <class T>  \nstruct is_nothrow_destructible;\n```  \n  \n#### Parameters  \n `T`  \n The type to query.  \n  \n## Remarks  \n An instance of the type predicate holds true if the type `T` is a destructible type, and the destructor is known to the compiler not to throw. Otherwise, it holds false.  \n  \n## Requirements  \n **Header:** <type_traits>  \n  \n **Namespace:** std  \n  \n## See Also  \n [<type_traits>](../standard-library/type-traits.md)\n\n\n\n"}