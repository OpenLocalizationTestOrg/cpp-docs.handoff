{"nodes":[{"pos":[12,43],"content":"CTabView Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"CTabView Class | Microsoft Docs","pos":[0,31]}]},{"pos":[598,612],"content":"CTabView Class","linkify":"CTabView Class","nodes":[{"content":"CTabView Class","pos":[0,14]}]},{"pos":[613,792],"content":"The <ph id=\"ph1\">`CTabView`</ph> class simplifies the use of the tab control class ( <bpt id=\"p1\">[</bpt>CMFCTabCtrl<ept id=\"p1\">](../../mfc/reference/ctabview-class.md)</ept>) in applications that use MFC's document/view architecture.","source":"The `CTabView` class simplifies the use of the tab control class ( [CMFCTabCtrl](../../mfc/reference/ctabview-class.md)) in applications that use MFC's document/view architecture."},{"pos":[801,807],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[866,873],"content":"Members","linkify":"Members","nodes":[{"content":"Members","pos":[0,7]}]},{"pos":[883,897],"content":"Public Methods","linkify":"Public Methods","nodes":[{"content":"Public Methods","pos":[0,14]}]},{"content":"Name","pos":[904,908]},{"content":"Description","pos":[909,920]},{"pos":[958,997],"content":"<bpt id=\"p1\">[</bpt>CTabView::AddView<ept id=\"p1\">](#ctabview__addview)</ept>","source":"[CTabView::AddView](#ctabview__addview)"},{"content":"Adds a new view to the tab control.","pos":[998,1033]},{"pos":[1038,1077],"content":"<bpt id=\"p1\">[</bpt>CTabView::FindTab<ept id=\"p1\">](#ctabview__findtab)</ept>","source":"[CTabView::FindTab](#ctabview__findtab)"},{"content":"Returns the index of the specified view in the tab control.","pos":[1078,1137]},{"pos":[1142,1193],"content":"<bpt id=\"p1\">[</bpt>CTabView::GetActiveView<ept id=\"p1\">](#ctabview__getactiveview)</ept>","source":"[CTabView::GetActiveView](#ctabview__getactiveview)"},{"content":"Returns a pointer to the currently active view","pos":[1194,1240]},{"pos":[1245,1296],"content":"<bpt id=\"p1\">[</bpt>CTabView::GetTabControl<ept id=\"p1\">](#ctabview__gettabcontrol)</ept>","source":"[CTabView::GetTabControl](#ctabview__gettabcontrol)"},{"content":"Returns a reference to the tab control associated with the view.","pos":[1297,1361]},{"pos":[1366,1411],"content":"<bpt id=\"p1\">[</bpt>CTabView::RemoveView<ept id=\"p1\">](#ctabview__removeview)</ept>","source":"[CTabView::RemoveView](#ctabview__removeview)"},{"content":"Removes the view from the tab control.","pos":[1412,1450]},{"pos":[1455,1506],"content":"<bpt id=\"p1\">[</bpt>CTabView::SetActiveView<ept id=\"p1\">](#ctabview__setactiveview)</ept>","source":"[CTabView::SetActiveView](#ctabview__setactiveview)"},{"content":"Makes a view active.","pos":[1507,1527]},{"pos":[1538,1555],"content":"Protected Methods","linkify":"Protected Methods","nodes":[{"content":"Protected Methods","pos":[0,17]}]},{"content":"Name","pos":[1562,1566]},{"content":"Description","pos":[1567,1578]},{"pos":[1616,1663],"content":"<bpt id=\"p1\">[</bpt>CTabView::IsScrollBar<ept id=\"p1\">](#ctabview__isscrollbar)</ept>","source":"[CTabView::IsScrollBar](#ctabview__isscrollbar)"},{"content":"Called by the framework when creating a tab view to determine whether the tab view has a shared horizontal scroll bar.","pos":[1664,1782]},{"pos":[1787,1840],"content":"<bpt id=\"p1\">[</bpt>CTabView::OnActivateView<ept id=\"p1\">](#ctabview__onactivateview)</ept>","source":"[CTabView::OnActivateView](#ctabview__onactivateview)"},{"content":"Called by the framework when the tab view is made active or inactive.","pos":[1841,1910]},{"pos":[1920,1927],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This class makes it easy to put a tabbed view into a document/view application.","pos":[1931,2010]},{"content":"<ph id=\"ph1\">`CTabView`</ph> is a <ph id=\"ph2\">`CView`</ph>-derived class that contains an embedded <ph id=\"ph3\">`CMFCTabCtrl`</ph> object.","pos":[2011,2096],"source":"`CTabView` is a `CView`-derived class that contains an embedded `CMFCTabCtrl` object."},{"content":"<ph id=\"ph1\">`CTabView`</ph> handles all messages required to support the <ph id=\"ph2\">`CMFCTabCtrl`</ph> object.","pos":[2097,2174],"source":"`CTabView` handles all messages required to support the `CMFCTabCtrl` object."},{"content":"Simply derive a class from <ph id=\"ph1\">`CTabView`</ph> and plug it into your application, then add <ph id=\"ph2\">`CView`</ph>-derived classes by using the <ph id=\"ph3\">`AddView`</ph> method.","pos":[2175,2311],"source":" Simply derive a class from `CTabView` and plug it into your application, then add `CView`-derived classes by using the `AddView` method."},{"content":"The tab control will display those views as tabs.","pos":[2312,2361]},{"content":"For example, you might have a document that can be represented in different ways: as a spreadsheet, a chart, an editable form, and so on.","pos":[2368,2505]},{"content":"You can create individual views drawing the data as needed, insert them into your <ph id=\"ph1\">`CTabView`</ph>-derived object and have them tabbed without any additional coding.","pos":[2506,2665],"source":" You can create individual views drawing the data as needed, insert them into your `CTabView`-derived object and have them tabbed without any additional coding."},{"pos":[2672,2782],"content":"<bpt id=\"p1\">[</bpt>TabbedView Sample: MFC Tabbed View Application<ept id=\"p1\">](../../visual-cpp-samples.md)</ept> illustrates usage of <ph id=\"ph1\">`CTabView`</ph>.","source":"[TabbedView Sample: MFC Tabbed View Application](../../visual-cpp-samples.md) illustrates usage of `CTabView`."},{"pos":[2791,2798],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[2802,2878],"content":"The following example shows how <ph id=\"ph1\">`CTabView`</ph> is used in the TabbedView sample.","source":"The following example shows how `CTabView` is used in the TabbedView sample."},{"pos":[2885,2974],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_MFC_TabbedView#1<ept id=\"p2\">](../../mfc/reference/codesnippet/cpp/ctabview-class_1.h)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_MFC_TabbedView#1](../../mfc/reference/codesnippet/cpp/ctabview-class_1.h)]"},{"pos":[2983,2995],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[2999,3023],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> afxTabView.h","source":"**Header:** afxTabView.h"},{"pos":[3033,3084],"content":"<bpt id=\"p1\">&lt;a name=\"ctabview__addview\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CTabView::AddView","linkify":"<a name=\"ctabview__addview\"></a>  CTabView::AddView","source":"<a name=\"ctabview__addview\"></a>  CTabView::AddView"},{"content":"Adds a view to the tab control.","pos":[3088,3119]},{"pos":[3282,3292],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`pViewClass`</ph>","pos":[3296,3313],"source":"[in] `pViewClass`"},{"content":"A pointer to a runtime class of the inserted view.","pos":[3317,3367]},{"content":"[in] <ph id=\"ph1\">`strViewLabel`</ph>","pos":[3374,3393],"source":"[in] `strViewLabel`"},{"content":"Specifies the tab's text.","pos":[3397,3422]},{"content":"[in] <ph id=\"ph1\">`iIndex`</ph>","pos":[3429,3442],"source":"[in] `iIndex`"},{"content":"Specifies the zero-based position at which to insert the view.","pos":[3446,3508]},{"content":"If the position is -1 the new tab is inserted at the end.","pos":[3509,3566]},{"content":"[in] <ph id=\"ph1\">`pContext`</ph>","pos":[3573,3588],"source":"[in] `pContext`"},{"content":"A pointer to the <ph id=\"ph1\">`CCreateContext`</ph> of the view.","pos":[3592,3638],"source":" A pointer to the `CCreateContext` of the view."},{"pos":[3648,3660],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A view index if this method succeeds.","pos":[3664,3701]},{"content":"Otherwise, -1.","pos":[3702,3716]},{"pos":[3726,3733],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Call this function to add a view to the tab control that is embedded in a frame.","pos":[3737,3817]},{"pos":[3827,3878],"content":"<bpt id=\"p1\">&lt;a name=\"ctabview__findtab\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CTabView::FindTab","linkify":"<a name=\"ctabview__findtab\"></a>  CTabView::FindTab","source":"<a name=\"ctabview__findtab\"></a>  CTabView::FindTab"},{"content":"Returns the index of the specified view in the tab control.","pos":[3882,3941]},{"pos":[4003,4013],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`hWndView`</ph>","pos":[4017,4032],"source":"[in] `hWndView`"},{"content":"The handle of the view.","pos":[4036,4059]},{"pos":[4069,4081],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The index of the view if it is found; otherwise, -1.","pos":[4085,4137]},{"pos":[4147,4154],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Call this function to retrieve the index of a view that has a specified handle.","pos":[4158,4237]},{"pos":[4247,4310],"content":"<bpt id=\"p1\">&lt;a name=\"ctabview__getactiveview\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CTabView::GetActiveView","linkify":"<a name=\"ctabview__getactiveview\"></a>  CTabView::GetActiveView","source":"<a name=\"ctabview__getactiveview\"></a>  CTabView::GetActiveView"},{"content":"Returns a pointer to the currently active view.","pos":[4314,4361]},{"pos":[4419,4431],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[4435,4508],"content":"A valid pointer to the active view, or <ph id=\"ph1\">`NULL`</ph> if there is no active view.","source":"A valid pointer to the active view, or `NULL` if there is no active view."},{"pos":[4518,4525],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[4535,4598],"content":"<bpt id=\"p1\">&lt;a name=\"ctabview__gettabcontrol\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CTabView::GetTabControl","linkify":"<a name=\"ctabview__gettabcontrol\"></a>  CTabView::GetTabControl","source":"<a name=\"ctabview__gettabcontrol\"></a>  CTabView::GetTabControl"},{"content":"Returns a reference to the tab control associated with the view.","pos":[4602,4666]},{"pos":[4739,4751],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A reference to the tab control associated with the view.","pos":[4755,4811]},{"pos":[4821,4880],"content":"<bpt id=\"p1\">&lt;a name=\"ctabview__isscrollbar\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CTabView::IsScrollBar","linkify":"<a name=\"ctabview__isscrollbar\"></a>  CTabView::IsScrollBar","source":"<a name=\"ctabview__isscrollbar\"></a>  CTabView::IsScrollBar"},{"content":"Called by the framework when creating a tab view to determine whether the tab view has a shared horizontal scroll bar.","pos":[4884,5002]},{"pos":[5064,5076],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"<ph id=\"ph1\">`TRUE`</ph> if the tab view should be created together with a shared scroll bar.","pos":[5080,5155],"source":"`TRUE` if the tab view should be created together with a shared scroll bar."},{"content":"Otherwise, <ph id=\"ph1\">`FALSE`</ph>.","pos":[5156,5175],"source":" Otherwise, `FALSE`."},{"pos":[5185,5192],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[5196,5270],"content":"The framework calls this method when a <ph id=\"ph1\">`CTabView`</ph> object is being created.","source":"The framework calls this method when a `CTabView` object is being created."},{"pos":[5277,5428],"content":"Override the <ph id=\"ph1\">`IsScrollBar`</ph> method in a <ph id=\"ph2\">`CTabView`</ph>-derived class and return <ph id=\"ph3\">`TRUE`</ph> if you want to create a view that has a shared horizontal scroll bar.","source":"Override the `IsScrollBar` method in a `CTabView`-derived class and return `TRUE` if you want to create a view that has a shared horizontal scroll bar."},{"pos":[5438,5503],"content":"<bpt id=\"p1\">&lt;a name=\"ctabview__onactivateview\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CTabView::OnActivateView","linkify":"<a name=\"ctabview__onactivateview\"></a>  CTabView::OnActivateView","source":"<a name=\"ctabview__onactivateview\"></a>  CTabView::OnActivateView"},{"content":"Called by the framework when the tab view is made active or inactive.","pos":[5507,5576]},{"pos":[5643,5653],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`view`</ph>","pos":[5657,5668],"source":"[in] `view`"},{"content":"A pointer to the view.","pos":[5672,5694]},{"pos":[5704,5711],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The default implementation does nothing.","pos":[5715,5755]},{"content":"Override this method in a <ph id=\"ph1\">`CTabView`</ph>-derived class to process this notification.","pos":[5756,5836],"source":" Override this method in a `CTabView`-derived class to process this notification."},{"pos":[5846,5903],"content":"<bpt id=\"p1\">&lt;a name=\"ctabview__removeview\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CTabView::RemoveView","linkify":"<a name=\"ctabview__removeview\"></a>  CTabView::RemoveView","source":"<a name=\"ctabview__removeview\"></a>  CTabView::RemoveView"},{"content":"Removes the view from the tab control.","pos":[5907,5945]},{"pos":[6000,6010],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`iTabNum`</ph>","pos":[6014,6028],"source":"[in] `iTabNum`"},{"content":"The index of the view to remove.","pos":[6032,6064]},{"pos":[6074,6086],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The index of the removed view if this method succeeds.","pos":[6090,6144]},{"content":"Otherwise -1.","pos":[6145,6158]},{"pos":[6168,6175],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[6185,6248],"content":"<bpt id=\"p1\">&lt;a name=\"ctabview__setactiveview\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CTabView::SetActiveView","linkify":"<a name=\"ctabview__setactiveview\"></a>  CTabView::SetActiveView","source":"<a name=\"ctabview__setactiveview\"></a>  CTabView::SetActiveView"},{"content":"Makes a view active.","pos":[6252,6272]},{"pos":[6330,6340],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`iTabNum`</ph>","pos":[6344,6358],"source":"[in] `iTabNum`"},{"content":"The zero-based index of the tab view.","pos":[6362,6399]},{"pos":[6409,6421],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[6425,6510],"content":"<ph id=\"ph1\">`TRUE`</ph> if the specified view was made active, <ph id=\"ph2\">`FALSE`</ph> if the view's index is invalid.","source":"`TRUE` if the specified view was made active, `FALSE` if the view's index is invalid."},{"pos":[6520,6527],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[6531,6652],"content":"For more information see <bpt id=\"p1\">[</bpt>CMFCTabCtrl::SetActiveTab<ept id=\"p1\">](../../mfc/reference/cmfctabctrl-class.md#cmfctabctrl__setactivetab)</ept>.","source":"For more information see [CMFCTabCtrl::SetActiveTab](../../mfc/reference/cmfctabctrl-class.md#cmfctabctrl__setactivetab)."},{"pos":[6661,6669],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Hierarchy Chart<ept id=\"p1\">](../../mfc/hierarchy-chart.md)</ept><ph id=\"ph1\"> </ph>","pos":[6673,6721],"source":"[Hierarchy Chart](../../mfc/hierarchy-chart.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Classes<ept id=\"p1\">](../../mfc/reference/mfc-classes.md)</ept><ph id=\"ph1\"> </ph>","pos":[6724,6771],"source":" [Classes](../../mfc/reference/mfc-classes.md) "},{"content":"<bpt id=\"p1\"> [</bpt>CMFCTabCtrl<ept id=\"p1\">](../../mfc/reference/ctabview-class.md)</ept><ph id=\"ph1\"> </ph>","pos":[6774,6828],"source":" [CMFCTabCtrl](../../mfc/reference/ctabview-class.md) "},{"content":"<bpt id=\"p1\"> [</bpt>CView Class<ept id=\"p1\">](../../mfc/reference/cview-class.md)</ept>","pos":[6831,6881],"source":" [CView Class](../../mfc/reference/cview-class.md)"}],"content":"---\ntitle: \"CTabView Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"CTabView\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"CTabView class\"\nms.assetid: 8e6ecd9d-d28d-432b-8ec8-0446f0204d52\ncaps.latest.revision: 32\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# CTabView Class\nThe `CTabView` class simplifies the use of the tab control class ( [CMFCTabCtrl](../../mfc/reference/ctabview-class.md)) in applications that use MFC's document/view architecture.  \n  \n## Syntax  \n  \n```  \nclass CTabbedView : public CView  \n```  \n  \n## Members  \n  \n### Public Methods  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CTabView::AddView](#ctabview__addview)|Adds a new view to the tab control.|  \n|[CTabView::FindTab](#ctabview__findtab)|Returns the index of the specified view in the tab control.|  \n|[CTabView::GetActiveView](#ctabview__getactiveview)|Returns a pointer to the currently active view|  \n|[CTabView::GetTabControl](#ctabview__gettabcontrol)|Returns a reference to the tab control associated with the view.|  \n|[CTabView::RemoveView](#ctabview__removeview)|Removes the view from the tab control.|  \n|[CTabView::SetActiveView](#ctabview__setactiveview)|Makes a view active.|  \n  \n### Protected Methods  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CTabView::IsScrollBar](#ctabview__isscrollbar)|Called by the framework when creating a tab view to determine whether the tab view has a shared horizontal scroll bar.|  \n|[CTabView::OnActivateView](#ctabview__onactivateview)|Called by the framework when the tab view is made active or inactive.|  \n  \n## Remarks  \n This class makes it easy to put a tabbed view into a document/view application. `CTabView` is a `CView`-derived class that contains an embedded `CMFCTabCtrl` object. `CTabView` handles all messages required to support the `CMFCTabCtrl` object. Simply derive a class from `CTabView` and plug it into your application, then add `CView`-derived classes by using the `AddView` method. The tab control will display those views as tabs.  \n  \n For example, you might have a document that can be represented in different ways: as a spreadsheet, a chart, an editable form, and so on. You can create individual views drawing the data as needed, insert them into your `CTabView`-derived object and have them tabbed without any additional coding.  \n  \n [TabbedView Sample: MFC Tabbed View Application](../../visual-cpp-samples.md) illustrates usage of `CTabView`.  \n  \n## Example  \n The following example shows how `CTabView` is used in the TabbedView sample.  \n  \n [!code-cpp[NVC_MFC_TabbedView#1](../../mfc/reference/codesnippet/cpp/ctabview-class_1.h)]  \n  \n## Requirements  \n **Header:** afxTabView.h  \n  \n##  <a name=\"ctabview__addview\"></a>  CTabView::AddView  \n Adds a view to the tab control.  \n  \n```  \nint AddView(\n    CRuntimeClass* pViewClass,  \n    const CString& strViewLabel,  \n    int iIndex=-1,  \n    CCreateContext* pContext=NULL);\n```  \n  \n### Parameters  \n [in] `pViewClass`  \n A pointer to a runtime class of the inserted view.  \n  \n [in] `strViewLabel`  \n Specifies the tab's text.  \n  \n [in] `iIndex`  \n Specifies the zero-based position at which to insert the view. If the position is -1 the new tab is inserted at the end.  \n  \n [in] `pContext`  \n A pointer to the `CCreateContext` of the view.  \n  \n### Return Value  \n A view index if this method succeeds. Otherwise, -1.  \n  \n### Remarks  \n Call this function to add a view to the tab control that is embedded in a frame.  \n  \n##  <a name=\"ctabview__findtab\"></a>  CTabView::FindTab  \n Returns the index of the specified view in the tab control.  \n  \n```  \nint FindTab(HWND hWndView) const;\n\n \n```  \n  \n### Parameters  \n [in] `hWndView`  \n The handle of the view.  \n  \n### Return Value  \n The index of the view if it is found; otherwise, -1.  \n  \n### Remarks  \n Call this function to retrieve the index of a view that has a specified handle.  \n  \n##  <a name=\"ctabview__getactiveview\"></a>  CTabView::GetActiveView  \n Returns a pointer to the currently active view.  \n  \n```  \nCView* GetActiveView() const;\n\n \n```  \n  \n### Return Value  \n A valid pointer to the active view, or `NULL` if there is no active view.  \n  \n### Remarks  \n  \n##  <a name=\"ctabview__gettabcontrol\"></a>  CTabView::GetTabControl  \n Returns a reference to the tab control associated with the view.  \n  \n```  \nDECLARE_DYNCREATE CMFCTabCtrl& GetTabControl();\n```  \n  \n### Return Value  \n A reference to the tab control associated with the view.  \n  \n##  <a name=\"ctabview__isscrollbar\"></a>  CTabView::IsScrollBar  \n Called by the framework when creating a tab view to determine whether the tab view has a shared horizontal scroll bar.  \n  \n```  \nvirtual BOOL IsScrollBar() const;\n\n \n```  \n  \n### Return Value  \n `TRUE` if the tab view should be created together with a shared scroll bar. Otherwise, `FALSE`.  \n  \n### Remarks  \n The framework calls this method when a `CTabView` object is being created.  \n  \n Override the `IsScrollBar` method in a `CTabView`-derived class and return `TRUE` if you want to create a view that has a shared horizontal scroll bar.  \n  \n##  <a name=\"ctabview__onactivateview\"></a>  CTabView::OnActivateView  \n Called by the framework when the tab view is made active or inactive.  \n  \n```  \nvirtual void OnActivateView(CView* view);\n```  \n  \n### Parameters  \n [in] `view`  \n A pointer to the view.  \n  \n### Remarks  \n The default implementation does nothing. Override this method in a `CTabView`-derived class to process this notification.  \n  \n##  <a name=\"ctabview__removeview\"></a>  CTabView::RemoveView  \n Removes the view from the tab control.  \n  \n```  \nBOOL RemoveView(int iTabNum);\n```  \n  \n### Parameters  \n [in] `iTabNum`  \n The index of the view to remove.  \n  \n### Return Value  \n The index of the removed view if this method succeeds. Otherwise -1.  \n  \n### Remarks  \n  \n##  <a name=\"ctabview__setactiveview\"></a>  CTabView::SetActiveView  \n Makes a view active.  \n  \n```  \nBOOL SetActiveView(int iTabNum);\n```  \n  \n### Parameters  \n [in] `iTabNum`  \n The zero-based index of the tab view.  \n  \n### Return Value  \n `TRUE` if the specified view was made active, `FALSE` if the view's index is invalid.  \n  \n### Remarks  \n For more information see [CMFCTabCtrl::SetActiveTab](../../mfc/reference/cmfctabctrl-class.md#cmfctabctrl__setactivetab).  \n  \n## See Also  \n [Hierarchy Chart](../../mfc/hierarchy-chart.md)   \n [Classes](../../mfc/reference/mfc-classes.md)   \n [CMFCTabCtrl](../../mfc/reference/ctabview-class.md)   \n [CView Class](../../mfc/reference/cview-class.md)\n"}