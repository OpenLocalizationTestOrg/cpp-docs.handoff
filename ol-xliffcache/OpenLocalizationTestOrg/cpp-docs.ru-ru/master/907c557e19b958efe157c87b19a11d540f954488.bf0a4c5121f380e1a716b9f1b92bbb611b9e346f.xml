{"nodes":[{"pos":[12,55],"content":"IConnectionPointImpl Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"IConnectionPointImpl Class | Microsoft Docs","pos":[0,43]}]},{"content":"IConnectionPointImpl Class","pos":[741,767]},{"content":"This class implements a connection point.","pos":[768,809]},{"content":"Syntax","pos":[818,824]},{"content":"Parameters","pos":[990,1000]},{"content":"Your class, derived from <ph id=\"ph1\">`IConnectionPointImpl`</ph>.","pos":[1011,1059],"source":" Your class, derived from `IConnectionPointImpl`."},{"content":"A pointer to the IID of the interface represented by the connection point object.","pos":[1076,1157]},{"content":"A class that manages the connections.","pos":[1173,1210]},{"content":"The default value is <bpt id=\"p1\">[</bpt>CComDynamicUnkArray<ept id=\"p1\">](../../atl/reference/ccomdynamicunkarray-class.md)</ept>, which allows unlimited connections.","pos":[1211,1340],"source":" The default value is [CComDynamicUnkArray](../../atl/reference/ccomdynamicunkarray-class.md), which allows unlimited connections."},{"content":"You can also use <bpt id=\"p1\">[</bpt>CComUnkArray<ept id=\"p1\">](../../atl/reference/ccomunkarray-class.md)</ept>, which specifies a fixed number of connections.","pos":[1341,1463],"source":" You can also use [CComUnkArray](../../atl/reference/ccomunkarray-class.md), which specifies a fixed number of connections."},{"content":"Members","pos":[1472,1479]},{"content":"Public Methods","pos":[1489,1503]},{"content":"Name","pos":[1510,1514]},{"content":"Description","pos":[1515,1526]},{"content":"IConnectionPointImpl::Advise","pos":[1565,1593]},{"content":"Establishes a connection between the connection point and a sink.","pos":[1626,1691]},{"content":"IConnectionPointImpl::EnumConnections","pos":[1697,1734]},{"content":"Creates an enumerator to iterate through the connections for the connection point.","pos":[1776,1858]},{"content":"IConnectionPointImpl::GetConnectionInterface","pos":[1864,1908]},{"content":"Retrieves the IID of the interface represented by the connection point.","pos":[1957,2028]},{"content":"IConnectionPointImpl::GetConnectionPointContainer","pos":[2034,2083]},{"content":"Retrieves an interface pointer to the connectable object.","pos":[2137,2194]},{"content":"IConnectionPointImpl::Unadvise","pos":[2200,2230]},{"pos":[2265,2329],"content":"Terminates a connection previously established through <ph id=\"ph1\">`Advise`</ph>.","source":"Terminates a connection previously established through `Advise`."},{"content":"Public Data Members","pos":[2340,2359]},{"content":"Name","pos":[2366,2370]},{"content":"Description","pos":[2371,2382]},{"content":"IConnectionPointImpl::m_vec","pos":[2421,2448]},{"content":"Manages the connections for the connection point.","pos":[2480,2529]},{"content":"Remarks","pos":[2539,2546]},{"content":"implements a connection point, which allows an object to expose an outgoing interface to the client.","pos":[2573,2673]},{"content":"The client implements this interface on an object called a sink.","pos":[2674,2738]},{"content":"ATL uses <bpt id=\"p1\">[</bpt>IConnectionPointContainerImpl<ept id=\"p1\">](../../atl/reference/iconnectionpointcontainerimpl-class.md)</ept> to implement the connectable object.","pos":[2745,2882],"source":"ATL uses [IConnectionPointContainerImpl](../../atl/reference/iconnectionpointcontainerimpl-class.md) to implement the connectable object."},{"content":"Each connection point within the connectable object represents an outgoing interface, identified by <ph id=\"ph1\">`piid`</ph>.","pos":[2883,2990],"source":" Each connection point within the connectable object represents an outgoing interface, identified by `piid`."},{"content":"Class <bpt id=\"p1\">*</bpt>CDV<ept id=\"p1\">*</ept> manages the connections between the connection point and a sink.","pos":[2991,3067],"source":" Class *CDV* manages the connections between the connection point and a sink."},{"content":"Each connection is uniquely identified by a \"cookie.\"","pos":[3068,3121]},{"pos":[3128,3259],"content":"For more information about using connection points in ATL, see the article <bpt id=\"p1\">[</bpt>Connection Points<ept id=\"p1\">](../../atl/atl-connection-points.md)</ept>.","source":"For more information about using connection points in ATL, see the article [Connection Points](../../atl/atl-connection-points.md)."},{"content":"Inheritance Hierarchy","pos":[3268,3289]},{"content":"Requirements","pos":[3344,3356]},{"pos":[3360,3380],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> atlcom.h","source":"**Header:** atlcom.h"},{"pos":[3435,3463],"content":"IConnectionPointImpl::Advise"},{"content":"Establishes a connection between the connection point and a sink.","pos":[3467,3532]},{"content":"Remarks","pos":[3621,3628]},{"pos":[3632,3713],"content":"Use <bpt id=\"p1\">[</bpt>Unadvise<ept id=\"p1\">](#iconnectionpointimpl__unadvise)</ept> to terminate the connection call.","source":"Use [Unadvise](#iconnectionpointimpl__unadvise) to terminate the connection call."},{"pos":[3720,3870],"content":"See <bpt id=\"p1\">[</bpt>IConnectionPoint::Advise<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms678815)</ept> in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"See [IConnectionPoint::Advise](http://msdn.microsoft.com/library/windows/desktop/ms678815) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"pos":[3934,3971],"content":"IConnectionPointImpl::EnumConnections"},{"content":"Creates an enumerator to iterate through the connections for the connection point.","pos":[3975,4057]},{"content":"Remarks","pos":[4135,4142]},{"pos":[4146,4305],"content":"See <bpt id=\"p1\">[</bpt>IConnectionPoint::EnumConnections<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms680755)</ept> in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"See [IConnectionPoint::EnumConnections](http://msdn.microsoft.com/library/windows/desktop/ms680755) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"pos":[4376,4420],"content":"IConnectionPointImpl::GetConnectionInterface"},{"content":"Retrieves the IID of the interface represented by the connection point.","pos":[4424,4495]},{"content":"Remarks","pos":[4565,4572]},{"pos":[4576,4742],"content":"See <bpt id=\"p1\">[</bpt>IConnectionPoint::GetConnectionInterface<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms693468)</ept> in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"See [IConnectionPoint::GetConnectionInterface](http://msdn.microsoft.com/library/windows/desktop/ms693468) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"pos":[4818,4867],"content":"IConnectionPointImpl::GetConnectionPointContainer"},{"content":"Retrieves an interface pointer to the connectable object.","pos":[4871,4928]},{"content":"Remarks","pos":[5026,5033]},{"pos":[5037,5208],"content":"See <bpt id=\"p1\">[</bpt>IConnectionPoint::GetConnectionPointContainer<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms679669)</ept> in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"See [IConnectionPoint::GetConnectionPointContainer](http://msdn.microsoft.com/library/windows/desktop/ms679669) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"pos":[5262,5289],"content":"IConnectionPointImpl::m_vec"},{"content":"Manages the connections between the connection point object and a sink.","pos":[5293,5364]},{"content":"Remarks","pos":[5405,5412]},{"pos":[5416,5519],"content":"By default, <ph id=\"ph1\">`m_vec`</ph> is of type <bpt id=\"p1\">[</bpt>CComDynamicUnkArray<ept id=\"p1\">](../../atl/reference/ccomdynamicunkarray-class.md)</ept>.","source":"By default, `m_vec` is of type [CComDynamicUnkArray](../../atl/reference/ccomdynamicunkarray-class.md)."},{"pos":[5576,5606],"content":"IConnectionPointImpl::Unadvise"},{"pos":[5610,5705],"content":"Terminates a connection previously established through <bpt id=\"p1\">[</bpt>Advise<ept id=\"p1\">](#iconnectionpointimpl__advise)</ept>.","source":"Terminates a connection previously established through [Advise](#iconnectionpointimpl__advise)."},{"content":"Remarks","pos":[5765,5772]},{"pos":[5776,5928],"content":"See <bpt id=\"p1\">[</bpt>IConnectionPoint::Unadvise<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms686608)</ept> in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"See [IConnectionPoint::Unadvise](http://msdn.microsoft.com/library/windows/desktop/ms686608) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"content":"See Also","pos":[5937,5945]},{"content":"IConnectionPoint","pos":[5950,5966]},{"content":"Class Overview","pos":[6033,6047]}],"content":"---\ntitle: \"IConnectionPointImpl Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"ATL.IConnectionPointImpl\"\n  - \"IConnectionPointImpl\"\n  - \"ATL::IConnectionPointImpl\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"connection points [C++], implementing\"\n  - \"IConnectionPointImpl class\"\nms.assetid: 27992115-3b86-45dd-bc9e-54f32876c557\ncaps.latest.revision: 19\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# IConnectionPointImpl Class\nThis class implements a connection point.  \n  \n## Syntax  \n  \n```\ntemplate<class T,\n    const IID* piid, class CDV = CComDynamicUnkArray>  class ATL_NO_VTABLE IConnectionPointImpl :  public _ICPLocator<piid>\n```  \n  \n#### Parameters  \n `T`  \n Your class, derived from `IConnectionPointImpl`.  \n  \n `piid`  \n A pointer to the IID of the interface represented by the connection point object.  \n  \n `CDV`  \n A class that manages the connections. The default value is [CComDynamicUnkArray](../../atl/reference/ccomdynamicunkarray-class.md), which allows unlimited connections. You can also use [CComUnkArray](../../atl/reference/ccomunkarray-class.md), which specifies a fixed number of connections.  \n  \n## Members  \n  \n### Public Methods  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[IConnectionPointImpl::Advise](#iconnectionpointimpl__advise)|Establishes a connection between the connection point and a sink.|  \n|[IConnectionPointImpl::EnumConnections](#iconnectionpointimpl__enumconnections)|Creates an enumerator to iterate through the connections for the connection point.|  \n|[IConnectionPointImpl::GetConnectionInterface](#iconnectionpointimpl__getconnectioninterface)|Retrieves the IID of the interface represented by the connection point.|  \n|[IConnectionPointImpl::GetConnectionPointContainer](#iconnectionpointimpl__getconnectionpointcontainer)|Retrieves an interface pointer to the connectable object.|  \n|[IConnectionPointImpl::Unadvise](#iconnectionpointimpl__unadvise)|Terminates a connection previously established through `Advise`.|  \n  \n### Public Data Members  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[IConnectionPointImpl::m_vec](#iconnectionpointimpl__m_vec)|Manages the connections for the connection point.|  \n  \n## Remarks  \n `IConnectionPointImpl` implements a connection point, which allows an object to expose an outgoing interface to the client. The client implements this interface on an object called a sink.  \n  \n ATL uses [IConnectionPointContainerImpl](../../atl/reference/iconnectionpointcontainerimpl-class.md) to implement the connectable object. Each connection point within the connectable object represents an outgoing interface, identified by `piid`. Class *CDV* manages the connections between the connection point and a sink. Each connection is uniquely identified by a \"cookie.\"  \n  \n For more information about using connection points in ATL, see the article [Connection Points](../../atl/atl-connection-points.md).  \n  \n## Inheritance Hierarchy  \n `_ICPLocator`  \n  \n `IConnectionPointImpl`  \n  \n## Requirements  \n **Header:** atlcom.h  \n  \n##  <a name=\"iconnectionpointimpl__advise\"></a>  IConnectionPointImpl::Advise  \n Establishes a connection between the connection point and a sink.  \n  \n```\nSTDMETHOD(Advise)(\n    IUnknown* pUnkSink,\n    DWORD* pdwCookie);\n```  \n  \n### Remarks  \n Use [Unadvise](#iconnectionpointimpl__unadvise) to terminate the connection call.  \n  \n See [IConnectionPoint::Advise](http://msdn.microsoft.com/library/windows/desktop/ms678815) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n##  <a name=\"iconnectionpointimpl__enumconnections\"></a>  IConnectionPointImpl::EnumConnections  \n Creates an enumerator to iterate through the connections for the connection point.  \n  \n```\nSTDMETHOD(EnumConnections)(IEnumConnections** ppEnum);\n```  \n  \n### Remarks  \n See [IConnectionPoint::EnumConnections](http://msdn.microsoft.com/library/windows/desktop/ms680755) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n##  <a name=\"iconnectionpointimpl__getconnectioninterface\"></a>  IConnectionPointImpl::GetConnectionInterface  \n Retrieves the IID of the interface represented by the connection point.  \n  \n```\nSTDMETHOD(GetConnectionInterface)(IID* piid2);\n```  \n  \n### Remarks  \n See [IConnectionPoint::GetConnectionInterface](http://msdn.microsoft.com/library/windows/desktop/ms693468) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n##  <a name=\"iconnectionpointimpl__getconnectionpointcontainer\"></a>  IConnectionPointImpl::GetConnectionPointContainer  \n Retrieves an interface pointer to the connectable object.  \n  \n```\nSTDMETHOD(GetConnectionPointContainer)(IConnectionPointContainer** ppCPC);\n```  \n  \n### Remarks  \n See [IConnectionPoint::GetConnectionPointContainer](http://msdn.microsoft.com/library/windows/desktop/ms679669) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n##  <a name=\"iconnectionpointimpl__m_vec\"></a>  IConnectionPointImpl::m_vec  \n Manages the connections between the connection point object and a sink.  \n  \n```\nCDV\n    m_vec;\n```     \n  \n### Remarks  \n By default, `m_vec` is of type [CComDynamicUnkArray](../../atl/reference/ccomdynamicunkarray-class.md).  \n  \n##  <a name=\"iconnectionpointimpl__unadvise\"></a>  IConnectionPointImpl::Unadvise  \n Terminates a connection previously established through [Advise](#iconnectionpointimpl__advise).  \n  \n```\nSTDMETHOD(Unadvise)(DWORD dwCookie);\n```  \n  \n### Remarks  \n See [IConnectionPoint::Unadvise](http://msdn.microsoft.com/library/windows/desktop/ms686608) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n## See Also  \n [IConnectionPoint](http://msdn.microsoft.com/library/windows/desktop/ms694318)   \n [Class Overview](../../atl/atl-class-overview.md)\n"}