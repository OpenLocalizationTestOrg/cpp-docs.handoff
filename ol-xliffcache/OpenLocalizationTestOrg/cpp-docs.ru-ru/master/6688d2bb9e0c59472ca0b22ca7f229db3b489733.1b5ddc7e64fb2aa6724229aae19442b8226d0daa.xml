{"nodes":[{"pos":[12,73],"content":"multiset::generic_reverse_iterator (STL-CLR) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"multiset::generic_reverse_iterator (STL-CLR) | Microsoft Docs","pos":[0,61]}]},{"content":"multiset::generic_reverse_iterator (STL/CLR)","pos":[688,732]},{"content":"The type of a reverse iterator for use with the generic interface for the container.","pos":[733,817]},{"content":"Syntax","pos":[826,832]},{"content":"Remarks","pos":[985,992]},{"content":"The type describes a generic reverse iterator that can be used with the generic interface for this template container class.","pos":[996,1120]},{"content":"Example","pos":[1129,1136]},{"content":"Requirements","pos":[2074,2086]},{"pos":[2090,2115],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> <ph id=\"ph1\">\\&lt;</ph>cliext/set&gt;","source":"**Header:** \\<cliext/set>"},{"pos":[2122,2143],"content":"<bpt id=\"p1\">**</bpt>Namespace:<ept id=\"p1\">**</ept> cliext","source":"**Namespace:** cliext"},{"content":"See Also","pos":[2152,2160]},{"content":"multiset (STL/CLR)","pos":[2165,2183]},{"content":"multiset::generic_container (STL/CLR)","pos":[2221,2258]},{"content":"multiset::generic_iterator (STL/CLR)","pos":[2314,2350]}],"content":"---\ntitle: \"multiset::generic_reverse_iterator (STL-CLR) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"cliext::multiset::generic_reverse_iterator\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"generic_reverse_iterator member [STL/CLR]\"\nms.assetid: 263808db-e25a-4092-8516-446a8821527e\ncaps.latest.revision: 8\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# multiset::generic_reverse_iterator (STL/CLR)\nThe type of a reverse iterator for use with the generic interface for the container.  \n  \n## Syntax  \n  \n```  \ntypedef Microsoft::VisualC::StlClr::Generic::  \n    ReverseRandomAccessIterator<generic_value>  \n    generic_reverse_iterator;  \n```  \n  \n## Remarks  \n The type describes a generic reverse iterator that can be used with the generic interface for this template container class.  \n  \n## Example  \n  \n```  \n// cliext_multiset_generic_reverse_iterator.cpp   \n// compile with: /clr   \n#include <cliext/set>   \n  \ntypedef cliext::multiset<wchar_t> Mymultiset;   \nint main()   \n    {   \n    Mymultiset c1;   \n    c1.insert(L'a');   \n    c1.insert(L'b');   \n    c1.insert(L'c');   \n  \n// display contents \" a b c\"   \n    for each (wchar_t elem in c1)   \n        System::Console::Write(\" {0}\", elem);   \n    System::Console::WriteLine();   \n  \n// construct a generic container   \n    Mymultiset::generic_container^ gc1 = %c1;   \n    for each (wchar_t elem in gc1)   \n        System::Console::Write(\" {0}\", elem);   \n    System::Console::WriteLine();   \n  \n// get an element and display it   \n    Mymultiset::generic_reverse_iterator gcit = gc1->rbegin();   \n    Mymultiset::generic_value gcval = *gcit;   \n    System::Console::WriteLine(\" {0}\", gcval);   \n    return (0);   \n    }  \n  \n```  \n  \n```Output  \na b c  \na b c  \nc  \n```  \n  \n## Requirements  \n **Header:** \\<cliext/set>  \n  \n **Namespace:** cliext  \n  \n## See Also  \n [multiset (STL/CLR)](../dotnet/multiset-stl-clr.md)   \n [multiset::generic_container (STL/CLR)](../dotnet/multiset-generic-container-stl-clr.md)   \n [multiset::generic_iterator (STL/CLR)](../dotnet/multiset-generic-iterator-stl-clr.md)"}