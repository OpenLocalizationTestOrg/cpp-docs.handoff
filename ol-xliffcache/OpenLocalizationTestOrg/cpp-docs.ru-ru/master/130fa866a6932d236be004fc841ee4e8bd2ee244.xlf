<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ru-ru">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-04506c2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">130fa866a6932d236be004fc841ee4e8bd2ee244</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\atl\queryinterface.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4c50c051ad787d189da610eab208cf48dd389291</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">da461ba3584432e5cda6ad757aad28d8e21f5d2d</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>QueryInterface | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>QueryInterface</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Although there are mechanisms by which an object can express the functionality it provides statically (before it is instantiated), the fundamental COM mechanism is to use the <bpt id="p1">**</bpt>IUnknown<ept id="p1">**</ept> method called <bpt id="p2">[</bpt>QueryInterface<ept id="p2">](http://msdn.microsoft.com/library/windows/desktop/ms682521)</ept>.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Every interface is derived from <bpt id="p1">**</bpt>IUnknown<ept id="p1">**</ept>, so every interface has an implementation of <ph id="ph1">`QueryInterface`</ph>.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Regardless of implementation, this method queries an object using the IID of the interface to which the caller wants a pointer.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>If the object supports that interface, <ph id="ph1">`QueryInterface`</ph> retrieves a pointer to the interface, while also calling <ph id="ph2">`AddRef`</ph>.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Otherwise, it returns the <bpt id="p1">**</bpt>E_NOINTERFACE<ept id="p1">**</ept> error code.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Note that you must obey <bpt id="p1">[</bpt>Reference Counting<ept id="p1">](../atl/reference-counting.md)</ept> rules at all times.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>If you call <bpt id="p1">**</bpt>Release<ept id="p1">**</ept> on an interface pointer to decrement the reference count to zero, you should not use that pointer again.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Occasionally you may need to obtain a weak reference to an object (that is, you may wish to obtain a pointer to one of its interfaces without incrementing the reference count), but it is not acceptable to do this by calling <ph id="ph1">`QueryInterface`</ph> followed by <bpt id="p1">**</bpt>Release<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The pointer obtained in such a manner is invalid and should not be used.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>This more readily becomes apparent when <bpt id="p1">[</bpt>_ATL_DEBUG_INTERFACES<ept id="p1">](http://msdn.microsoft.com/library/874b767b-c605-4afc-8d8b-819478d24224)</ept> is defined, so defining this macro is a useful way of finding reference counting bugs.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Introduction to COM</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>QueryInterface: Navigating in an Object</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>