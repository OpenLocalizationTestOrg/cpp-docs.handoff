<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ru-ru">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-04506c2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8f34e6940e7d1d835999f71b7fd87d917bc28233</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\c-runtime-library\link-options.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dc0310ba120838a1053364c046c56a18a96a3b0c</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7a78d710d2f85c874372bb183e92c8bc230a7d21</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Link Options | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Link Options</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The CRT lib directory includes a number of small object files that enable specific CRT features without any code change.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>These are called "link options" since you just have to add them to the linker command line to use them.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Pure mode versions have been added.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Use the regular versions for native and /clr code, use the pure versions (prefixed with a p) for /clr:pure mode.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Native and /clr</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Pure mode</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>binmode.obj</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>pbinmode.obj</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Sets the default file-translation mode to binary.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>_fmode<ept id="p1">](../c-runtime-library/fmode.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>chkstk.obj</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>n/a</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Provides stack-checking and alloca support when not using the CRT.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>commode.obj</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>pcommode.obj</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Sets the global commit flag to "commit".</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>fopen, _wfopen<ept id="p1">](../c-runtime-library/reference/fopen-wfopen.md)</ept> and <bpt id="p2">[</bpt>fopen_s, _wfopen_s<ept id="p2">](../c-runtime-library/reference/fopen-s-wfopen-s.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>fp10.obj</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>n/a</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Changes the default precision control to 64 bits.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Floating-Point Support<ept id="p1">](../c-runtime-library/floating-point-support.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>invalidcontinue.obj</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>pinvalidcontinue.obj</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Sets a default invalid parameter handler that does nothing, meaning that invalid parameters passed to CRT functions will just set errno and return an error result.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>loosefpmath.obj</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>n/a</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Ensures that floating point code tolerates denormal values.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>newmode.obj</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>pnewmode.obj</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Causes <bpt id="p1">[</bpt>malloc<ept id="p1">](../c-runtime-library/reference/malloc.md)</ept> to call the new handler on failure.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>_set_new_mode<ept id="p1">](../c-runtime-library/reference/set-new-mode.md)</ept>, <bpt id="p2">[</bpt>_set_new_handler<ept id="p2">](../c-runtime-library/reference/set-new-handler.md)</ept>, <bpt id="p3">[</bpt>calloc<ept id="p3">](../c-runtime-library/reference/calloc.md)</ept>, and <bpt id="p4">[</bpt>realloc<ept id="p4">](../c-runtime-library/reference/realloc.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>noarg.obj</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>pnoarg.obj</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Disables all processing of argc and argv.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>nochkclr.obj</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>n/a</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Does nothing.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Remove from your project.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>noenv.obj</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>pnoenv.obj</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Disables the creation of a cached environment for the CRT.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>nothrownew.obj</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>pnothrownew.obj</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Enables the non-throwing version of new in the CRT.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>new and delete Operators<ept id="p1">](../cpp/new-and-delete-operators.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>setargv.obj</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>psetargv.obj</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Enables command-line argument wildcard expansion.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Expanding Wildcard Arguments<ept id="p1">](../c-language/expanding-wildcard-arguments.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>smalheap.obj</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>n/a</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Installs a very simple small heap manager.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>threadlocale.obj</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>pthreadlocale.obj</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Enables per-thread locale for all new threads by default.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>wsetargv.obj</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>pwsetargv.obj</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Enables command-line argument wildcard expansion.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Expanding Wildcard Arguments<ept id="p1">](../c-language/expanding-wildcard-arguments.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>CRT Library Features</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>