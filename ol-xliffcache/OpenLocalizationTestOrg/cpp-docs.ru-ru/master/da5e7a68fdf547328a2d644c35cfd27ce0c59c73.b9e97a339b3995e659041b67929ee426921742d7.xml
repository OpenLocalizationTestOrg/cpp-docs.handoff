{"nodes":[{"pos":[12,52],"content":"set::iterator (STL-CLR) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"set::iterator (STL-CLR) | Microsoft Docs","pos":[0,40]}]},{"content":"set::iterator (STL/CLR)","pos":[631,654]},{"content":"The type of an iterator for the controlled sequence.","pos":[655,707]},{"content":"Syntax","pos":[716,722]},{"content":"Remarks","pos":[769,776]},{"pos":[780,905],"content":"The type describes an object of unspecified type <ph id=\"ph1\">`T1`</ph> that can serve as a bidirectional iterator for the controlled sequence.","source":"The type describes an object of unspecified type `T1` that can serve as a bidirectional iterator for the controlled sequence."},{"content":"Example","pos":[914,921]},{"content":"Requirements","pos":[1434,1446]},{"pos":[1450,1475],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> <ph id=\"ph1\">\\&lt;</ph>cliext/set&gt;","source":"**Header:** \\<cliext/set>"},{"pos":[1482,1503],"content":"<bpt id=\"p1\">**</bpt>Namespace:<ept id=\"p1\">**</ept> cliext","source":"**Namespace:** cliext"},{"content":"See Also","pos":[1512,1520]},{"content":"set (STL/CLR)","pos":[1525,1538]},{"content":"set::const_iterator (STL/CLR)","pos":[1571,1600]}],"content":"---\ntitle: \"set::iterator (STL-CLR) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"cliext::set::iterator\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"iterator member [STL/CLR]\"\nms.assetid: 7e54276b-4cb3-4bff-a3a6-23ae328aa369\ncaps.latest.revision: 13\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# set::iterator (STL/CLR)\nThe type of an iterator for the controlled sequence.  \n  \n## Syntax  \n  \n```  \ntypedef T1 iterator;  \n```  \n  \n## Remarks  \n The type describes an object of unspecified type `T1` that can serve as a bidirectional iterator for the controlled sequence.  \n  \n## Example  \n  \n```  \n// cliext_set_iterator.cpp   \n// compile with: /clr   \n#include <cliext/set>   \n  \ntypedef cliext::set<wchar_t> Myset;   \nint main()   \n    {   \n    Myset c1;   \n    c1.insert(L'a');   \n    c1.insert(L'b');   \n    c1.insert(L'c');   \n  \n// display contents \" a b c\"   \n    Myset::iterator it = c1.begin();   \n    for (; it != c1.end(); ++it)   \n        System::Console::Write(\" {0}\", *it);   \n    System::Console::WriteLine();   \n    return (0);   \n    }  \n  \n```  \n  \n```Output  \na b c  \n```  \n  \n## Requirements  \n **Header:** \\<cliext/set>  \n  \n **Namespace:** cliext  \n  \n## See Also  \n [set (STL/CLR)](../dotnet/set-stl-clr.md)   \n [set::const_iterator (STL/CLR)](../dotnet/set-const-iterator-stl-clr.md)"}