{"nodes":[{"pos":[12,49],"content":"CAtlExeModuleT Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"CAtlExeModuleT Class | Microsoft Docs","pos":[0,37]}]},{"pos":[724,744],"content":"CAtlExeModuleT Class","linkify":"CAtlExeModuleT Class","nodes":[{"content":"CAtlExeModuleT Class","pos":[0,20]}]},{"content":"This class represents the module for an application.","pos":[745,797]},{"pos":[806,812],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[916,926],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Your class derived from <ph id=\"ph1\">`CAtlExeModuleT`</ph>.","pos":[937,978],"source":" Your class derived from `CAtlExeModuleT`."},{"pos":[987,994],"content":"Members","linkify":"Members","nodes":[{"content":"Members","pos":[0,7]}]},{"pos":[1004,1023],"content":"Public Constructors","linkify":"Public Constructors","nodes":[{"content":"Public Constructors","pos":[0,19]}]},{"content":"Name","pos":[1030,1034]},{"content":"Description","pos":[1035,1046]},{"pos":[1084,1149],"content":"<bpt id=\"p1\">[</bpt>CAtlExeModuleT::CAtlExeModuleT<ept id=\"p1\">](#catlexemodulet__catlexemodulet)</ept>","source":"[CAtlExeModuleT::CAtlExeModuleT](#catlexemodulet__catlexemodulet)"},{"content":"The constructor.","pos":[1150,1166]},{"pos":[1171,1242],"content":"<bpt id=\"p1\">[</bpt>CAtlExeModuleT::~CAtlExeModuleT<ept id=\"p1\">](#catlexemodulet___dtorcatlexemodulet)</ept>","source":"[CAtlExeModuleT::~CAtlExeModuleT](#catlexemodulet___dtorcatlexemodulet)"},{"content":"The destructor.","pos":[1243,1258]},{"pos":[1269,1283],"content":"Public Methods","linkify":"Public Methods","nodes":[{"content":"Public Methods","pos":[0,14]}]},{"content":"Name","pos":[1290,1294]},{"content":"Description","pos":[1295,1306]},{"pos":[1344,1407],"content":"<bpt id=\"p1\">[</bpt>CAtlExeModuleT::InitializeCom<ept id=\"p1\">](#catlexemodulet__initializecom)</ept>","source":"[CAtlExeModuleT::InitializeCom](#catlexemodulet__initializecom)"},{"content":"Initializes COM.","pos":[1408,1424]},{"pos":[1429,1498],"content":"<bpt id=\"p1\">[</bpt>CAtlExeModuleT::ParseCommandLine<ept id=\"p1\">](#catlexemodulet__parsecommandline)</ept>","source":"[CAtlExeModuleT::ParseCommandLine](#catlexemodulet__parsecommandline)"},{"content":"Parses the command line and performs registration if necessary.","pos":[1499,1562]},{"pos":[1567,1634],"content":"<bpt id=\"p1\">[</bpt>CAtlExeModuleT::PostMessageLoop<ept id=\"p1\">](#catlexemodulet__postmessageloop)</ept>","source":"[CAtlExeModuleT::PostMessageLoop](#catlexemodulet__postmessageloop)"},{"content":"This method is called immediately after the message loop exits.","pos":[1635,1698]},{"pos":[1703,1768],"content":"<bpt id=\"p1\">[</bpt>CAtlExeModuleT::PreMessageLoop<ept id=\"p1\">](#catlexemodulet__premessageloop)</ept>","source":"[CAtlExeModuleT::PreMessageLoop](#catlexemodulet__premessageloop)"},{"content":"This method is called immediately before entering the message loop.","pos":[1769,1836]},{"pos":[1841,1918],"content":"<bpt id=\"p1\">[</bpt>CAtlExeModuleT::RegisterClassObjects<ept id=\"p1\">](#catlexemodulet__registerclassobjects)</ept>","source":"[CAtlExeModuleT::RegisterClassObjects](#catlexemodulet__registerclassobjects)"},{"content":"Registers the class object.","pos":[1919,1946]},{"pos":[1951,2024],"content":"<bpt id=\"p1\">[</bpt>CAtlExeModuleT::RevokeClassObjects<ept id=\"p1\">](#catlexemodulet__revokeclassobjects)</ept>","source":"[CAtlExeModuleT::RevokeClassObjects](#catlexemodulet__revokeclassobjects)"},{"content":"Revokes the class object.","pos":[2025,2050]},{"pos":[2055,2098],"content":"<bpt id=\"p1\">[</bpt>CAtlExeModuleT::Run<ept id=\"p1\">](#catlexemodulet__run)</ept>","source":"[CAtlExeModuleT::Run](#catlexemodulet__run)"},{"content":"This method executes code in the EXE module to initialize, run the message loop, and clean up.","pos":[2099,2193]},{"pos":[2198,2263],"content":"<bpt id=\"p1\">[</bpt>CAtlExeModuleT::RunMessageLoop<ept id=\"p1\">](#catlexemodulet__runmessageloop)</ept>","source":"[CAtlExeModuleT::RunMessageLoop](#catlexemodulet__runmessageloop)"},{"content":"This method executes the message loop.","pos":[2264,2302]},{"pos":[2307,2374],"content":"<bpt id=\"p1\">[</bpt>CAtlExeModuleT::UninitializeCom<ept id=\"p1\">](#catlexemodulet__uninitializecom)</ept>","source":"[CAtlExeModuleT::UninitializeCom](#catlexemodulet__uninitializecom)"},{"content":"Uninitializes COM.","pos":[2375,2393]},{"pos":[2398,2447],"content":"<bpt id=\"p1\">[</bpt>CAtlExeModuleT::Unlock<ept id=\"p1\">](#catlexemodulet__unlock)</ept>","source":"[CAtlExeModuleT::Unlock](#catlexemodulet__unlock)"},{"content":"Decrements the module's lock count.","pos":[2448,2483]},{"pos":[2488,2539],"content":"<bpt id=\"p1\">[</bpt>CAtlExeModuleT::WinMain<ept id=\"p1\">](#catlexemodulet__winmain)</ept>","source":"[CAtlExeModuleT::WinMain](#catlexemodulet__winmain)"},{"content":"This method implements the code required to run an EXE.","pos":[2540,2595]},{"pos":[2606,2625],"content":"Public Data Members","linkify":"Public Data Members","nodes":[{"content":"Public Data Members","pos":[0,19]}]},{"content":"Name","pos":[2632,2636]},{"content":"Description","pos":[2637,2648]},{"pos":[2686,2755],"content":"<bpt id=\"p1\">[</bpt>CAtlExeModuleT::m_bDelayShutdown<ept id=\"p1\">](#catlexemodulet__m_bdelayshutdown)</ept>","source":"[CAtlExeModuleT::m_bDelayShutdown](#catlexemodulet__m_bdelayshutdown)"},{"content":"A flag indicating that there should be a delay shutting down the module.","pos":[2756,2828]},{"pos":[2833,2888],"content":"<bpt id=\"p1\">[</bpt>CAtlExeModuleT::m_dwPause<ept id=\"p1\">](#catlexemodulet__m_dwpause)</ept>","source":"[CAtlExeModuleT::m_dwPause](#catlexemodulet__m_dwpause)"},{"content":"A pause value used to ensure all objects are released before shutdown.","pos":[2889,2959]},{"pos":[2964,3023],"content":"<bpt id=\"p1\">[</bpt>CAtlExeModuleT::m_dwTimeOut<ept id=\"p1\">](#catlexemodulet__m_dwtimeout)</ept>","source":"[CAtlExeModuleT::m_dwTimeOut](#catlexemodulet__m_dwtimeout)"},{"content":"A time-out value used to delay the unloading of the module.","pos":[3024,3083]},{"pos":[3093,3100],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[3104,3323],"content":"<ph id=\"ph1\">`CAtlExeModuleT`</ph> represents the module for an application (EXE) and contains code that supports creating an EXE, processing the command line, registering class objects, running the message loop, and cleaning up on exit.","source":"`CAtlExeModuleT` represents the module for an application (EXE) and contains code that supports creating an EXE, processing the command line, registering class objects, running the message loop, and cleaning up on exit."},{"content":"This class is designed to improve performance when COM objects in the EXE server are continually created and destroyed.","pos":[3330,3449]},{"content":"After the last COM object is released, the EXE waits for a duration specified by the <bpt id=\"p1\">[</bpt>CAtlExeModuleT::m_dwTimeOut<ept id=\"p1\">](#catlexemodulet__m_dwtimeout)</ept> data member.","pos":[3450,3607],"source":" After the last COM object is released, the EXE waits for a duration specified by the [CAtlExeModuleT::m_dwTimeOut](#catlexemodulet__m_dwtimeout) data member."},{"content":"If there is no activity during this period (that is, no COM objects are created), the shutdown process is initiated.","pos":[3608,3724]},{"content":"The <bpt id=\"p1\">[</bpt>CAtlExeModuleT::m_bDelayShutdown<ept id=\"p1\">](#catlexemodulet__m_bdelayshutdown)</ept> data member is a flag used to determine if the EXE should use the mechanism defined above.","pos":[3731,3895],"source":"The [CAtlExeModuleT::m_bDelayShutdown](#catlexemodulet__m_bdelayshutdown) data member is a flag used to determine if the EXE should use the mechanism defined above."},{"content":"If it is set to false, then the module will terminate immediately.","pos":[3896,3962]},{"pos":[3969,4067],"content":"For more information on modules in ATL, see <bpt id=\"p1\">[</bpt>ATL Module Classes<ept id=\"p1\">](../../atl/atl-module-classes.md)</ept>.","source":"For more information on modules in ATL, see [ATL Module Classes](../../atl/atl-module-classes.md)."},{"pos":[4076,4097],"content":"Inheritance Hierarchy","linkify":"Inheritance Hierarchy","nodes":[{"content":"Inheritance Hierarchy","pos":[0,21]}]},{"pos":[4101,4143],"content":"<bpt id=\"p1\">[</bpt>_ATL_MODULE<ept id=\"p1\">](atl-typedefs.md#_atl_module)</ept>","source":"[_ATL_MODULE](atl-typedefs.md#_atl_module)"},{"pos":[4151,4204],"content":"<bpt id=\"p1\">[</bpt>CAtlModule<ept id=\"p1\">](../../atl/reference/catlmodule-class.md)</ept>","source":"[CAtlModule](../../atl/reference/catlmodule-class.md)"},{"pos":[4211,4266],"content":"<bpt id=\"p1\">[</bpt>CAtlModuleT<ept id=\"p1\">](../../atl/reference/catlmodulet-class.md)</ept>","source":"[CAtlModuleT](../../atl/reference/catlmodulet-class.md)"},{"pos":[4298,4310],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[4314,4335],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> atlbase.h","source":"**Header:** atlbase.h"},{"pos":[4345,4422],"content":"<bpt id=\"p1\">&lt;a name=\"catlexemodulet__catlexemodulet\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CAtlExeModuleT::CAtlExeModuleT","linkify":"<a name=\"catlexemodulet__catlexemodulet\"></a>  CAtlExeModuleT::CAtlExeModuleT","source":"<a name=\"catlexemodulet__catlexemodulet\"></a>  CAtlExeModuleT::CAtlExeModuleT"},{"content":"The constructor.","pos":[4426,4442]},{"pos":[4491,4498],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"If the EXE module could not be initialized, WinMain will immediately return without further processing.","pos":[4502,4605]},{"pos":[4615,4698],"content":"<bpt id=\"p1\">&lt;a name=\"catlexemodulet___dtorcatlexemodulet\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CAtlExeModuleT::~CAtlExeModuleT","linkify":"<a name=\"catlexemodulet___dtorcatlexemodulet\"></a>  CAtlExeModuleT::~CAtlExeModuleT","source":"<a name=\"catlexemodulet___dtorcatlexemodulet\"></a>  CAtlExeModuleT::~CAtlExeModuleT"},{"content":"The destructor.","pos":[4702,4717]},{"pos":[4767,4774],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Frees all allocated resources.","pos":[4778,4808]},{"pos":[4818,4893],"content":"<bpt id=\"p1\">&lt;a name=\"catlexemodulet__initializecom\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CAtlExeModuleT::InitializeCom","linkify":"<a name=\"catlexemodulet__initializecom\"></a>  CAtlExeModuleT::InitializeCom","source":"<a name=\"catlexemodulet__initializecom\"></a>  CAtlExeModuleT::InitializeCom"},{"content":"Initializes COM.","pos":[4897,4913]},{"pos":[4976,4988],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Returns S_OK on success, or an error HRESULT on failure.","pos":[4992,5048]},{"pos":[5058,5065],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This method is called from the constructor and can be overridden to initialize COM in a manner different from the default implementation.","pos":[5069,5206]},{"content":"The default implementation either calls <bpt id=\"p1\">**</bpt>CoInitializeEx(NULL, COINIT_MULTITHREADED)<ept id=\"p1\">**</ept> or <bpt id=\"p2\">**</bpt>CoInitialize(NULL)<ept id=\"p2\">**</ept> depending on the project configuration.","pos":[5207,5359],"source":" The default implementation either calls **CoInitializeEx(NULL, COINIT_MULTITHREADED)** or **CoInitialize(NULL)** depending on the project configuration."},{"pos":[5366,5486],"content":"Overriding this method normally requires overriding <bpt id=\"p1\">[</bpt>CAtlExeModuleT::UninitializeCom<ept id=\"p1\">](#catlexemodulet__uninitializecom)</ept>.","source":"Overriding this method normally requires overriding [CAtlExeModuleT::UninitializeCom](#catlexemodulet__uninitializecom)."},{"pos":[5496,5577],"content":"<bpt id=\"p1\">&lt;a name=\"catlexemodulet__m_bdelayshutdown\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CAtlExeModuleT::m_bDelayShutdown","linkify":"<a name=\"catlexemodulet__m_bdelayshutdown\"></a>  CAtlExeModuleT::m_bDelayShutdown","source":"<a name=\"catlexemodulet__m_bdelayshutdown\"></a>  CAtlExeModuleT::m_bDelayShutdown"},{"content":"A flag indicating that there should be a delay shutting down the module.","pos":[5581,5653]},{"pos":[5699,5706],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[5710,5801],"content":"See the <bpt id=\"p1\">[</bpt>CAtlExeModuleT Overview<ept id=\"p1\">](../../atl/reference/catlexemodulet-class.md)</ept> for details.","source":"See the [CAtlExeModuleT Overview](../../atl/reference/catlexemodulet-class.md) for details."},{"pos":[5811,5878],"content":"<bpt id=\"p1\">&lt;a name=\"catlexemodulet__m_dwpause\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CAtlExeModuleT::m_dwPause","linkify":"<a name=\"catlexemodulet__m_dwpause\"></a>  CAtlExeModuleT::m_dwPause","source":"<a name=\"catlexemodulet__m_dwpause\"></a>  CAtlExeModuleT::m_dwPause"},{"content":"A pause value used to ensure all objects are gone before shutdown.","pos":[5882,5948]},{"pos":[5988,5995],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Change this value after calling <bpt id=\"p1\">[</bpt>CAtlExeModuleT::InitializeCom<ept id=\"p1\">](#catlexemodulet__initializecom)</ept> to set the number of milliseconds used as the pause value for shutting down the server.","pos":[5999,6182],"source":"Change this value after calling [CAtlExeModuleT::InitializeCom](#catlexemodulet__initializecom) to set the number of milliseconds used as the pause value for shutting down the server."},{"content":"The default value is 1000 milliseconds.","pos":[6183,6222]},{"pos":[6232,6303],"content":"<bpt id=\"p1\">&lt;a name=\"catlexemodulet__m_dwtimeout\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CAtlExeModuleT::m_dwTimeOut","linkify":"<a name=\"catlexemodulet__m_dwtimeout\"></a>  CAtlExeModuleT::m_dwTimeOut","source":"<a name=\"catlexemodulet__m_dwtimeout\"></a>  CAtlExeModuleT::m_dwTimeOut"},{"content":"A time-out value used to delay the unloading of the module.","pos":[6307,6366]},{"pos":[6408,6415],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Change this value after calling <bpt id=\"p1\">[</bpt>CAtlExeModuleT::InitializeCom<ept id=\"p1\">](#catlexemodulet__initializecom)</ept> to define the number of milliseconds used as the time-out value for shutting down the server.","pos":[6419,6608],"source":"Change this value after calling [CAtlExeModuleT::InitializeCom](#catlexemodulet__initializecom) to define the number of milliseconds used as the time-out value for shutting down the server."},{"content":"The default value is 5000 milliseconds.","pos":[6609,6648]},{"content":"See the <bpt id=\"p1\">[</bpt>CAtlExeModuleT Overview<ept id=\"p1\">](../../atl/reference/catlexemodulet-class.md)</ept> for more details.","pos":[6649,6745],"source":" See the [CAtlExeModuleT Overview](../../atl/reference/catlexemodulet-class.md) for more details."},{"pos":[6755,6836],"content":"<bpt id=\"p1\">&lt;a name=\"catlexemodulet__parsecommandline\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CAtlExeModuleT::ParseCommandLine","linkify":"<a name=\"catlexemodulet__parsecommandline\"></a>  CAtlExeModuleT::ParseCommandLine","source":"<a name=\"catlexemodulet__parsecommandline\"></a>  CAtlExeModuleT::ParseCommandLine"},{"content":"Parses the command line and performs registration if necessary.","pos":[6840,6903]},{"pos":[7000,7010],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"The command line passed to the application.","pos":[7029,7072]},{"content":"The HRESULT corresponding to the registration (if it took place).","pos":[7094,7159]},{"pos":[7169,7181],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Return true if the application should continue to run, otherwise false.","pos":[7185,7256]},{"pos":[7266,7273],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This method is called from <bpt id=\"p1\">[</bpt>CAtlExeModuleT::WinMain<ept id=\"p1\">](#catlexemodulet__winmain)</ept> and can be overridden to handle command-line switches.","pos":[7277,7410],"source":"This method is called from [CAtlExeModuleT::WinMain](#catlexemodulet__winmain) and can be overridden to handle command-line switches."},{"content":"The default implementation checks for <bpt id=\"p1\">**</bpt>/RegServer<ept id=\"p1\">**</ept> and <bpt id=\"p2\">**</bpt>/UnRegServer<ept id=\"p2\">**</ept> command-line arguments and performs registration or unregistration.","pos":[7411,7552],"source":" The default implementation checks for **/RegServer** and **/UnRegServer** command-line arguments and performs registration or unregistration."},{"pos":[7562,7641],"content":"<bpt id=\"p1\">&lt;a name=\"catlexemodulet__postmessageloop\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CAtlExeModuleT::PostMessageLoop","linkify":"<a name=\"catlexemodulet__postmessageloop\"></a>  CAtlExeModuleT::PostMessageLoop","source":"<a name=\"catlexemodulet__postmessageloop\"></a>  CAtlExeModuleT::PostMessageLoop"},{"content":"This method is called immediately after the message loop exits.","pos":[7645,7708]},{"pos":[7766,7778],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Returns S_OK on success, or an error HRESULT on failure.","pos":[7782,7838]},{"pos":[7848,7855],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Override this method to perform custom application cleanup.","pos":[7859,7918]},{"content":"The default implementation calls <bpt id=\"p1\">[</bpt>CAtlExeModuleT::RevokeClassObjects<ept id=\"p1\">](#catlexemodulet__revokeclassobjects)</ept>.","pos":[7919,8026],"source":" The default implementation calls [CAtlExeModuleT::RevokeClassObjects](#catlexemodulet__revokeclassobjects)."},{"pos":[8036,8113],"content":"<bpt id=\"p1\">&lt;a name=\"catlexemodulet__premessageloop\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CAtlExeModuleT::PreMessageLoop","linkify":"<a name=\"catlexemodulet__premessageloop\"></a>  CAtlExeModuleT::PreMessageLoop","source":"<a name=\"catlexemodulet__premessageloop\"></a>  CAtlExeModuleT::PreMessageLoop"},{"content":"This method is called immediately before entering the message loop.","pos":[8117,8184]},{"pos":[8253,8263],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"The value passed as the <ph id=\"ph1\">`nShowCmd`</ph> parameter in WinMain.","pos":[8281,8337],"source":" The value passed as the `nShowCmd` parameter in WinMain."},{"pos":[8347,8359],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Returns S_OK on success, or an error HRESULT on failure.","pos":[8363,8419]},{"pos":[8429,8436],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Override this method to add custom initialization code for the application.","pos":[8440,8515]},{"content":"The default implementation registers the class objects.","pos":[8516,8571]},{"pos":[8581,8670],"content":"<bpt id=\"p1\">&lt;a name=\"catlexemodulet__registerclassobjects\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CAtlExeModuleT::RegisterClassObjects","linkify":"<a name=\"catlexemodulet__registerclassobjects\"></a>  CAtlExeModuleT::RegisterClassObjects","source":"<a name=\"catlexemodulet__registerclassobjects\"></a>  CAtlExeModuleT::RegisterClassObjects"},{"content":"Registers the class object with OLE so other applications can connect to it.","pos":[8674,8750]},{"pos":[8847,8857],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"<bpt id=\"p1\">*</bpt>dwClsContext<ept id=\"p1\">*</ept>","pos":[8861,8875],"source":"*dwClsContext*"},{"content":"Specifies the context in which the class object is to be run.","pos":[8879,8940]},{"content":"Possible values are CLSCTX_INPROC_SERVER, CLSCTX_INPROC_HANDLER, or CLSCTX_LOCAL_SERVER.","pos":[8941,9029]},{"content":"Determines the connection types to the class object.","pos":[9049,9101]},{"content":"Possible values are REGCLS_SINGLEUSE, REGCLS_MULTIPLEUSE, or REGCLS_MULTI_SEPARATE.","pos":[9102,9185]},{"pos":[9195,9207],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Returns S_OK on success, S_FALSE if there were no classes to register, or an error HRESULT on failure.","pos":[9211,9313]},{"pos":[9323,9408],"content":"<bpt id=\"p1\">&lt;a name=\"catlexemodulet__revokeclassobjects\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CAtlExeModuleT::RevokeClassObjects","linkify":"<a name=\"catlexemodulet__revokeclassobjects\"></a>  CAtlExeModuleT::RevokeClassObjects","source":"<a name=\"catlexemodulet__revokeclassobjects\"></a>  CAtlExeModuleT::RevokeClassObjects"},{"content":"Removes the class object.","pos":[9412,9437]},{"pos":[9498,9510],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Returns S_OK on success, S_FALSE if there were no classes to register, or an error HRESULT on failure.","pos":[9514,9616]},{"pos":[9626,9681],"content":"<bpt id=\"p1\">&lt;a name=\"catlexemodulet__run\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CAtlExeModuleT::Run","linkify":"<a name=\"catlexemodulet__run\"></a>  CAtlExeModuleT::Run","source":"<a name=\"catlexemodulet__run\"></a>  CAtlExeModuleT::Run"},{"content":"This method executes code in the EXE module to initialize, run the message loop, and clean up.","pos":[9685,9779]},{"pos":[9847,9857],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Specifies how the window is to be shown.","pos":[9875,9915]},{"content":"This parameter can be one of the values discussed in the <bpt id=\"p1\">[</bpt>WinMain<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms633559)</ept> section.","pos":[9916,10051],"source":" This parameter can be one of the values discussed in the [WinMain](http://msdn.microsoft.com/library/windows/desktop/ms633559) section."},{"content":"Defaults to SW_HIDE.","pos":[10052,10072]},{"pos":[10082,10094],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Returns S_OK on success, or an error HRESULT on failure.","pos":[10098,10154]},{"pos":[10164,10171],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This method can be overridden.","pos":[10175,10205]},{"content":"However, in practice is it better to override <bpt id=\"p1\">[</bpt>CAtlExeModuleT::PreMessageLoop<ept id=\"p1\">](#catlexemodulet__premessageloop)</ept>, <bpt id=\"p2\">[</bpt>CAtlExeModuleT::RunMessageLoop<ept id=\"p2\">](#catlexemodulet__runmessageloop)</ept>, or <bpt id=\"p3\">[</bpt>CAtlExeModuleT::PostMessageLoop<ept id=\"p3\">](#catlexemodulet__postmessageloop)</ept> instead.","pos":[10206,10465],"source":" However, in practice is it better to override [CAtlExeModuleT::PreMessageLoop](#catlexemodulet__premessageloop), [CAtlExeModuleT::RunMessageLoop](#catlexemodulet__runmessageloop), or [CAtlExeModuleT::PostMessageLoop](#catlexemodulet__postmessageloop) instead."},{"pos":[10475,10552],"content":"<bpt id=\"p1\">&lt;a name=\"catlexemodulet__runmessageloop\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CAtlExeModuleT::RunMessageLoop","linkify":"<a name=\"catlexemodulet__runmessageloop\"></a>  CAtlExeModuleT::RunMessageLoop","source":"<a name=\"catlexemodulet__runmessageloop\"></a>  CAtlExeModuleT::RunMessageLoop"},{"content":"This method executes the message loop.","pos":[10556,10594]},{"pos":[10648,10655],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This method can be overridden to change the behavior of the message loop.","pos":[10659,10732]},{"pos":[10742,10821],"content":"<bpt id=\"p1\">&lt;a name=\"catlexemodulet__uninitializecom\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CAtlExeModuleT::UninitializeCom","linkify":"<a name=\"catlexemodulet__uninitializecom\"></a>  CAtlExeModuleT::UninitializeCom","source":"<a name=\"catlexemodulet__uninitializecom\"></a>  CAtlExeModuleT::UninitializeCom"},{"content":"Uninitializes COM.","pos":[10825,10843]},{"pos":[10905,10912],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"By default this method simply calls <bpt id=\"p1\">[</bpt>CoUninitialize<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms688715)</ept> and is called from the destructor.","pos":[10916,11063],"source":"By default this method simply calls [CoUninitialize](http://msdn.microsoft.com/library/windows/desktop/ms688715) and is called from the destructor."},{"content":"Override this method if you override <bpt id=\"p1\">[</bpt>CAtlExeModuleT::InitializeCom<ept id=\"p1\">](#catlexemodulet__initializecom)</ept>.","pos":[11064,11165],"source":" Override this method if you override [CAtlExeModuleT::InitializeCom](#catlexemodulet__initializecom)."},{"pos":[11175,11236],"content":"<bpt id=\"p1\">&lt;a name=\"catlexemodulet__unlock\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CAtlExeModuleT::Unlock","linkify":"<a name=\"catlexemodulet__unlock\"></a>  CAtlExeModuleT::Unlock","source":"<a name=\"catlexemodulet__unlock\"></a>  CAtlExeModuleT::Unlock"},{"content":"Decrements the module's lock count.","pos":[11240,11275]},{"pos":[11321,11333],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Returns a value which may be useful for diagnostics or testing.","pos":[11337,11400]},{"pos":[11410,11473],"content":"<bpt id=\"p1\">&lt;a name=\"catlexemodulet__winmain\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CAtlExeModuleT::WinMain","linkify":"<a name=\"catlexemodulet__winmain\"></a>  CAtlExeModuleT::WinMain","source":"<a name=\"catlexemodulet__winmain\"></a>  CAtlExeModuleT::WinMain"},{"content":"This method implements the code required to run an EXE.","pos":[11477,11532]},{"pos":[11590,11600],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Specifies how the window is to be shown.","pos":[11618,11658]},{"content":"This parameter can be one of the values discussed in the <bpt id=\"p1\">[</bpt>WinMain<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms633559)</ept> section.","pos":[11659,11794],"source":" This parameter can be one of the values discussed in the [WinMain](http://msdn.microsoft.com/library/windows/desktop/ms633559) section."},{"pos":[11804,11816],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Returns the executable's return value.","pos":[11820,11858]},{"pos":[11868,11875],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This method can be overridden.","pos":[11879,11909]},{"content":"If overriding <bpt id=\"p1\">[</bpt>CAtlExeModuleT::PreMessageLoop<ept id=\"p1\">](#catlexemodulet__premessageloop)</ept>, <bpt id=\"p2\">[</bpt>CAtlExeModuleT::PostMessageLoop<ept id=\"p2\">](#catlexemodulet__postmessageloop)</ept>, or <bpt id=\"p3\">[</bpt>CAtlExeModuleT::RunMessageLoop<ept id=\"p3\">](#catlexemodulet__runmessageloop)</ept> doesn't provide enough flexibility, it's possible to override the <ph id=\"ph1\">`WinMain`</ph> function using this method.","pos":[11910,12232],"source":" If overriding [CAtlExeModuleT::PreMessageLoop](#catlexemodulet__premessageloop), [CAtlExeModuleT::PostMessageLoop](#catlexemodulet__postmessageloop), or [CAtlExeModuleT::RunMessageLoop](#catlexemodulet__runmessageloop) doesn't provide enough flexibility, it's possible to override the `WinMain` function using this method."},{"pos":[12241,12249],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>ATLDuck Sample<ept id=\"p1\">](../../visual-cpp-samples.md)</ept><ph id=\"ph1\"> </ph>","pos":[12253,12299],"source":"[ATLDuck Sample](../../visual-cpp-samples.md) "},{"content":"<bpt id=\"p1\"> [</bpt>CAtlModuleT Class<ept id=\"p1\">](../../atl/reference/catlmodulet-class.md)</ept><ph id=\"ph1\"> </ph>","pos":[12302,12365],"source":" [CAtlModuleT Class](../../atl/reference/catlmodulet-class.md) "},{"content":"<bpt id=\"p1\"> [</bpt>CAtlDllModuleT Class<ept id=\"p1\">](../../atl/reference/catldllmodulet-class.md)</ept><ph id=\"ph1\"> </ph>","pos":[12368,12437],"source":" [CAtlDllModuleT Class](../../atl/reference/catldllmodulet-class.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Class Overview<ept id=\"p1\">](../../atl/atl-class-overview.md)</ept>","pos":[12440,12490],"source":" [Class Overview](../../atl/atl-class-overview.md)"}],"content":"---\ntitle: \"CAtlExeModuleT Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"ATL::CAtlExeModuleT<T>\"\n  - \"CAtlExeModuleT\"\n  - \"ATL.CAtlExeModuleT<T>\"\n  - \"ATL::CAtlExeModuleT\"\n  - \"ATL.CAtlExeModuleT\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"CAtlExeModuleT class\"\nms.assetid: 82245f3d-91d4-44fa-aa86-7cc7fbd758d9\ncaps.latest.revision: 21\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# CAtlExeModuleT Class\nThis class represents the module for an application.  \n  \n## Syntax  \n  \n```\ntemplate <class T>  class ATL_NO_VTABLE CAtlExeModuleT :  public CAtlModuleT<T>\n```  \n  \n#### Parameters  \n `T`  \n Your class derived from `CAtlExeModuleT`.  \n  \n## Members  \n  \n### Public Constructors  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CAtlExeModuleT::CAtlExeModuleT](#catlexemodulet__catlexemodulet)|The constructor.|  \n|[CAtlExeModuleT::~CAtlExeModuleT](#catlexemodulet___dtorcatlexemodulet)|The destructor.|  \n  \n### Public Methods  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CAtlExeModuleT::InitializeCom](#catlexemodulet__initializecom)|Initializes COM.|  \n|[CAtlExeModuleT::ParseCommandLine](#catlexemodulet__parsecommandline)|Parses the command line and performs registration if necessary.|  \n|[CAtlExeModuleT::PostMessageLoop](#catlexemodulet__postmessageloop)|This method is called immediately after the message loop exits.|  \n|[CAtlExeModuleT::PreMessageLoop](#catlexemodulet__premessageloop)|This method is called immediately before entering the message loop.|  \n|[CAtlExeModuleT::RegisterClassObjects](#catlexemodulet__registerclassobjects)|Registers the class object.|  \n|[CAtlExeModuleT::RevokeClassObjects](#catlexemodulet__revokeclassobjects)|Revokes the class object.|  \n|[CAtlExeModuleT::Run](#catlexemodulet__run)|This method executes code in the EXE module to initialize, run the message loop, and clean up.|  \n|[CAtlExeModuleT::RunMessageLoop](#catlexemodulet__runmessageloop)|This method executes the message loop.|  \n|[CAtlExeModuleT::UninitializeCom](#catlexemodulet__uninitializecom)|Uninitializes COM.|  \n|[CAtlExeModuleT::Unlock](#catlexemodulet__unlock)|Decrements the module's lock count.|  \n|[CAtlExeModuleT::WinMain](#catlexemodulet__winmain)|This method implements the code required to run an EXE.|  \n  \n### Public Data Members  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CAtlExeModuleT::m_bDelayShutdown](#catlexemodulet__m_bdelayshutdown)|A flag indicating that there should be a delay shutting down the module.|  \n|[CAtlExeModuleT::m_dwPause](#catlexemodulet__m_dwpause)|A pause value used to ensure all objects are released before shutdown.|  \n|[CAtlExeModuleT::m_dwTimeOut](#catlexemodulet__m_dwtimeout)|A time-out value used to delay the unloading of the module.|  \n  \n## Remarks  \n `CAtlExeModuleT` represents the module for an application (EXE) and contains code that supports creating an EXE, processing the command line, registering class objects, running the message loop, and cleaning up on exit.  \n  \n This class is designed to improve performance when COM objects in the EXE server are continually created and destroyed. After the last COM object is released, the EXE waits for a duration specified by the [CAtlExeModuleT::m_dwTimeOut](#catlexemodulet__m_dwtimeout) data member. If there is no activity during this period (that is, no COM objects are created), the shutdown process is initiated.  \n  \n The [CAtlExeModuleT::m_bDelayShutdown](#catlexemodulet__m_bdelayshutdown) data member is a flag used to determine if the EXE should use the mechanism defined above. If it is set to false, then the module will terminate immediately.  \n  \n For more information on modules in ATL, see [ATL Module Classes](../../atl/atl-module-classes.md).  \n  \n## Inheritance Hierarchy  \n [_ATL_MODULE](atl-typedefs.md#_atl_module)  \n\n  \n [CAtlModule](../../atl/reference/catlmodule-class.md)  \n  \n [CAtlModuleT](../../atl/reference/catlmodulet-class.md)  \n  \n `CAtlExeModuleT`  \n  \n## Requirements  \n **Header:** atlbase.h  \n  \n##  <a name=\"catlexemodulet__catlexemodulet\"></a>  CAtlExeModuleT::CAtlExeModuleT  \n The constructor.  \n  \n```\nCAtlExeModuleT() throw();\n```  \n  \n### Remarks  \n If the EXE module could not be initialized, WinMain will immediately return without further processing.  \n  \n##  <a name=\"catlexemodulet___dtorcatlexemodulet\"></a>  CAtlExeModuleT::~CAtlExeModuleT  \n The destructor.  \n  \n```\n~CAtlExeModuleT() throw();\n```  \n  \n### Remarks  \n Frees all allocated resources.  \n  \n##  <a name=\"catlexemodulet__initializecom\"></a>  CAtlExeModuleT::InitializeCom  \n Initializes COM.  \n  \n```\nstatic HRESULT InitializeCom() throw();\n```  \n  \n### Return Value  \n Returns S_OK on success, or an error HRESULT on failure.  \n  \n### Remarks  \n This method is called from the constructor and can be overridden to initialize COM in a manner different from the default implementation. The default implementation either calls **CoInitializeEx(NULL, COINIT_MULTITHREADED)** or **CoInitialize(NULL)** depending on the project configuration.  \n  \n Overriding this method normally requires overriding [CAtlExeModuleT::UninitializeCom](#catlexemodulet__uninitializecom).  \n  \n##  <a name=\"catlexemodulet__m_bdelayshutdown\"></a>  CAtlExeModuleT::m_bDelayShutdown  \n A flag indicating that there should be a delay shutting down the module.  \n  \n```\nbool m_bDelayShutdown;\n```  \n  \n### Remarks  \n See the [CAtlExeModuleT Overview](../../atl/reference/catlexemodulet-class.md) for details.  \n  \n##  <a name=\"catlexemodulet__m_dwpause\"></a>  CAtlExeModuleT::m_dwPause  \n A pause value used to ensure all objects are gone before shutdown.  \n  \n```\nDWORD m_dwPause;\n```  \n  \n### Remarks  \n Change this value after calling [CAtlExeModuleT::InitializeCom](#catlexemodulet__initializecom) to set the number of milliseconds used as the pause value for shutting down the server. The default value is 1000 milliseconds.  \n  \n##  <a name=\"catlexemodulet__m_dwtimeout\"></a>  CAtlExeModuleT::m_dwTimeOut  \n A time-out value used to delay the unloading of the module.  \n  \n```\nDWORD m_dwTimeOut;\n```  \n  \n### Remarks  \n Change this value after calling [CAtlExeModuleT::InitializeCom](#catlexemodulet__initializecom) to define the number of milliseconds used as the time-out value for shutting down the server. The default value is 5000 milliseconds. See the [CAtlExeModuleT Overview](../../atl/reference/catlexemodulet-class.md) for more details.  \n  \n##  <a name=\"catlexemodulet__parsecommandline\"></a>  CAtlExeModuleT::ParseCommandLine  \n Parses the command line and performs registration if necessary.  \n  \n```\nbool ParseCommandLine(LPCTSTR lpCmdLine,\n    HRESULT* pnRetCode) throw();\n```  \n  \n### Parameters  \n `lpCmdLine`  \n The command line passed to the application.  \n  \n `pnRetCode`  \n The HRESULT corresponding to the registration (if it took place).  \n  \n### Return Value  \n Return true if the application should continue to run, otherwise false.  \n  \n### Remarks  \n This method is called from [CAtlExeModuleT::WinMain](#catlexemodulet__winmain) and can be overridden to handle command-line switches. The default implementation checks for **/RegServer** and **/UnRegServer** command-line arguments and performs registration or unregistration.  \n  \n##  <a name=\"catlexemodulet__postmessageloop\"></a>  CAtlExeModuleT::PostMessageLoop  \n This method is called immediately after the message loop exits.  \n  \n```\nHRESULT PostMessageLoop() throw();\n```  \n  \n### Return Value  \n Returns S_OK on success, or an error HRESULT on failure.  \n  \n### Remarks  \n Override this method to perform custom application cleanup. The default implementation calls [CAtlExeModuleT::RevokeClassObjects](#catlexemodulet__revokeclassobjects).  \n  \n##  <a name=\"catlexemodulet__premessageloop\"></a>  CAtlExeModuleT::PreMessageLoop  \n This method is called immediately before entering the message loop.  \n  \n```\nHRESULT PreMessageLoop(int nShowCmd) throw();\n```  \n  \n### Parameters  \n `nShowCmd`  \n The value passed as the `nShowCmd` parameter in WinMain.  \n  \n### Return Value  \n Returns S_OK on success, or an error HRESULT on failure.  \n  \n### Remarks  \n Override this method to add custom initialization code for the application. The default implementation registers the class objects.  \n  \n##  <a name=\"catlexemodulet__registerclassobjects\"></a>  CAtlExeModuleT::RegisterClassObjects  \n Registers the class object with OLE so other applications can connect to it.  \n  \n```\nHRESULT RegisterClassObjects(DWORD dwClsContext,  DWORD dwFlags) throw();\n```  \n  \n### Parameters  \n *dwClsContext*  \n Specifies the context in which the class object is to be run. Possible values are CLSCTX_INPROC_SERVER, CLSCTX_INPROC_HANDLER, or CLSCTX_LOCAL_SERVER.  \n  \n `dwFlags`  \n Determines the connection types to the class object. Possible values are REGCLS_SINGLEUSE, REGCLS_MULTIPLEUSE, or REGCLS_MULTI_SEPARATE.  \n  \n### Return Value  \n Returns S_OK on success, S_FALSE if there were no classes to register, or an error HRESULT on failure.  \n  \n##  <a name=\"catlexemodulet__revokeclassobjects\"></a>  CAtlExeModuleT::RevokeClassObjects  \n Removes the class object.  \n  \n```\nHRESULT RevokeClassObjects() throw();\n```  \n  \n### Return Value  \n Returns S_OK on success, S_FALSE if there were no classes to register, or an error HRESULT on failure.  \n  \n##  <a name=\"catlexemodulet__run\"></a>  CAtlExeModuleT::Run  \n This method executes code in the EXE module to initialize, run the message loop, and clean up.  \n  \n```\nHRESULT Run(int nShowCmd = SW_HIDE) throw();\n```  \n  \n### Parameters  \n `nShowCmd`  \n Specifies how the window is to be shown. This parameter can be one of the values discussed in the [WinMain](http://msdn.microsoft.com/library/windows/desktop/ms633559) section. Defaults to SW_HIDE.  \n  \n### Return Value  \n Returns S_OK on success, or an error HRESULT on failure.  \n  \n### Remarks  \n This method can be overridden. However, in practice is it better to override [CAtlExeModuleT::PreMessageLoop](#catlexemodulet__premessageloop), [CAtlExeModuleT::RunMessageLoop](#catlexemodulet__runmessageloop), or [CAtlExeModuleT::PostMessageLoop](#catlexemodulet__postmessageloop) instead.  \n  \n##  <a name=\"catlexemodulet__runmessageloop\"></a>  CAtlExeModuleT::RunMessageLoop  \n This method executes the message loop.  \n  \n```\nvoid RunMessageLoop() throw();\n```  \n  \n### Remarks  \n This method can be overridden to change the behavior of the message loop.  \n  \n##  <a name=\"catlexemodulet__uninitializecom\"></a>  CAtlExeModuleT::UninitializeCom  \n Uninitializes COM.  \n  \n```\nstatic void UninitializeCom() throw();\n```  \n  \n### Remarks  \n By default this method simply calls [CoUninitialize](http://msdn.microsoft.com/library/windows/desktop/ms688715) and is called from the destructor. Override this method if you override [CAtlExeModuleT::InitializeCom](#catlexemodulet__initializecom).  \n  \n##  <a name=\"catlexemodulet__unlock\"></a>  CAtlExeModuleT::Unlock  \n Decrements the module's lock count.  \n  \n```\nLONG Unlock() throw();\n```  \n  \n### Return Value  \n Returns a value which may be useful for diagnostics or testing.  \n  \n##  <a name=\"catlexemodulet__winmain\"></a>  CAtlExeModuleT::WinMain  \n This method implements the code required to run an EXE.  \n  \n```\nint WinMain(int nShowCmd) throw();\n```  \n  \n### Parameters  \n `nShowCmd`  \n Specifies how the window is to be shown. This parameter can be one of the values discussed in the [WinMain](http://msdn.microsoft.com/library/windows/desktop/ms633559) section.  \n  \n### Return Value  \n Returns the executable's return value.  \n  \n### Remarks  \n This method can be overridden. If overriding [CAtlExeModuleT::PreMessageLoop](#catlexemodulet__premessageloop), [CAtlExeModuleT::PostMessageLoop](#catlexemodulet__postmessageloop), or [CAtlExeModuleT::RunMessageLoop](#catlexemodulet__runmessageloop) doesn't provide enough flexibility, it's possible to override the `WinMain` function using this method.  \n  \n## See Also  \n [ATLDuck Sample](../../visual-cpp-samples.md)   \n [CAtlModuleT Class](../../atl/reference/catlmodulet-class.md)   \n [CAtlDllModuleT Class](../../atl/reference/catldllmodulet-class.md)   \n [Class Overview](../../atl/atl-class-overview.md)\n"}