{"nodes":[{"pos":[12,44],"content":"CRowset::Insert | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"CRowset::Insert | Microsoft Docs","pos":[0,32]}]},{"content":"CRowset::Insert","pos":[815,830]},{"content":"Creates and initializes a new row using data from the accessor.","pos":[831,894]},{"content":"Syntax","pos":[903,909]},{"content":"Parameters","pos":[1031,1041]},{"content":"[in] The number of the accessor to use for inserting the data.","pos":[1060,1122]},{"content":"bGetHRow","pos":[1130,1138]},{"content":"[in] Indicates whether the handle for the inserted row is retrieved.","pos":[1143,1211]},{"content":"Return Value","pos":[1220,1232]},{"pos":[1236,1257],"content":"A standard <ph id=\"ph1\">`HRESULT`</ph>.","source":"A standard `HRESULT`."},{"content":"Remarks","pos":[1266,1273]},{"content":"This method requires the optional interface <ph id=\"ph1\">`IRowsetChange`</ph>, which might not be supported on all providers; if this is the case, the method returns <bpt id=\"p1\">**</bpt>E_NOINTERFACE<ept id=\"p1\">**</ept>.","pos":[1277,1443],"source":"This method requires the optional interface `IRowsetChange`, which might not be supported on all providers; if this is the case, the method returns **E_NOINTERFACE**."},{"content":"You must also set <bpt id=\"p1\">**</bpt>DBPROP_IRowsetChange<ept id=\"p1\">**</ept> to <ph id=\"ph1\">`VARIANT_TRUE`</ph> before calling <bpt id=\"p2\">**</bpt>Open<ept id=\"p2\">**</ept> on the table or command containing the rowset.","pos":[1444,1575],"source":" You must also set **DBPROP_IRowsetChange** to `VARIANT_TRUE` before calling **Open** on the table or command containing the rowset."},{"content":"Insert might fail if one or more columns is not writable.","pos":[1582,1639]},{"content":"Modify your cursor map to correct this.","pos":[1640,1679]},{"content":"Example","pos":[1688,1695]},{"content":"The following example shows how to access a data source through a rowset and then insert a string using a table in that rowset.","pos":[1699,1826]},{"content":"First, create a table class by inserting a New ATL Object into your project.","pos":[1833,1909]},{"content":"For example, right-click the project in the Workspace pane and select <bpt id=\"p1\">**</bpt>New ATL Object<ept id=\"p1\">**</ept>.","pos":[1910,1999],"source":" For example, right-click the project in the Workspace pane and select **New ATL Object**."},{"content":"From the <bpt id=\"p1\">**</bpt>Data Access<ept id=\"p1\">**</ept> category, select <bpt id=\"p2\">**</bpt>Consumer<ept id=\"p2\">**</ept>.","pos":[2000,2055],"source":" From the **Data Access** category, select **Consumer**."},{"content":"Create a consumer object of type <bpt id=\"p1\">**</bpt>Table<ept id=\"p1\">**</ept>.","pos":[2056,2099],"source":" Create a consumer object of type **Table**."},{"content":"(Selecting <bpt id=\"p1\">**</bpt>Table<ept id=\"p1\">**</ept> creates a rowset directly from the table; selecting <bpt id=\"p2\">**</bpt>Command<ept id=\"p2\">**</ept> creates a rowset through a SQL command.) Select a data source, specifying a table through which to access that data source.","pos":[2100,2308],"source":" (Selecting **Table** creates a rowset directly from the table; selecting **Command** creates a rowset through a SQL command.) Select a data source, specifying a table through which to access that data source."},{"content":"If you call your consumer object <bpt id=\"p1\">**</bpt>CCustomerTable<ept id=\"p1\">**</ept>, you would then implement your insertion code as follows:","pos":[2309,2418],"source":" If you call your consumer object **CCustomerTable**, you would then implement your insertion code as follows:"},{"pos":[2436,2457],"content":"NVC_OLEDB_Consumer#10"},{"content":"Requirements","pos":[2523,2535]},{"pos":[2539,2561],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> atldbcli.h","source":"**Header:** atldbcli.h"},{"content":"See Also","pos":[2570,2578]},{"content":"CRowset Class","pos":[2583,2596]}],"content":"---\ntitle: \"CRowset::Insert | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"ATL.CRowset<TAccessor>.Insert\"\n  - \"CRowset.Insert\"\n  - \"CRowset<TAccessor>.Insert\"\n  - \"CRowset<TAccessor>::Insert\"\n  - \"ATL::CRowset<TAccessor>::Insert\"\n  - \"ATL.CRowset.Insert\"\n  - \"CRowset::Insert\"\n  - \"ATL::CRowset::Insert\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"Insert method\"\nms.assetid: 6a64a1c3-10ac-4296-8685-0fd6fe63a13b\ncaps.latest.revision: 10\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# CRowset::Insert\nCreates and initializes a new row using data from the accessor.  \n  \n## Syntax  \n  \n```  \n  \n      HRESULT Insert(   \n   int nAccessor = 0,   \n   bool bGetHRow = false    \n) throw( );  \n```  \n  \n#### Parameters  \n `nAccessor`  \n [in] The number of the accessor to use for inserting the data.  \n  \n *bGetHRow*  \n [in] Indicates whether the handle for the inserted row is retrieved.  \n  \n## Return Value  \n A standard `HRESULT`.  \n  \n## Remarks  \n This method requires the optional interface `IRowsetChange`, which might not be supported on all providers; if this is the case, the method returns **E_NOINTERFACE**. You must also set **DBPROP_IRowsetChange** to `VARIANT_TRUE` before calling **Open** on the table or command containing the rowset.  \n  \n Insert might fail if one or more columns is not writable. Modify your cursor map to correct this.  \n  \n## Example  \n The following example shows how to access a data source through a rowset and then insert a string using a table in that rowset.  \n  \n First, create a table class by inserting a New ATL Object into your project. For example, right-click the project in the Workspace pane and select **New ATL Object**. From the **Data Access** category, select **Consumer**. Create a consumer object of type **Table**. (Selecting **Table** creates a rowset directly from the table; selecting **Command** creates a rowset through a SQL command.) Select a data source, specifying a table through which to access that data source. If you call your consumer object **CCustomerTable**, you would then implement your insertion code as follows:  \n  \n [!code-cpp[NVC_OLEDB_Consumer#10](../../data/oledb/codesnippet/cpp/crowset-insert_1.cpp)]  \n  \n## Requirements  \n **Header:** atldbcli.h  \n  \n## See Also  \n [CRowset Class](../../data/oledb/crowset-class.md)"}