{"nodes":[{"pos":[12,48],"content":"_configthreadlocale | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"_configthreadlocale | Microsoft Docs","pos":[0,36]}]},{"content":"_configthreadlocale","pos":[1083,1102]},{"content":"Configures per-thread locale options.","pos":[1103,1140]},{"content":"Syntax","pos":[1149,1155]},{"content":"Parameters","pos":[1227,1237]},{"content":"The option to set.","pos":[1251,1269]},{"content":"One of the options listed in the following table.","pos":[1270,1319]},{"content":"Return Value","pos":[1328,1340]},{"pos":[1344,1462],"content":"The previous per-thread locale status (<ph id=\"ph1\">`_DISABLE_PER_THREAD_LOCALE`</ph> or <ph id=\"ph2\">`_ENABLE_PER_THREAD_LOCALE`</ph>), or -1 on failure.","source":"The previous per-thread locale status (`_DISABLE_PER_THREAD_LOCALE` or `_ENABLE_PER_THREAD_LOCALE`), or -1 on failure."},{"content":"Remarks","pos":[1471,1478]},{"content":"The <ph id=\"ph1\">`_configurethreadlocale`</ph> function is used to control the use of thread-specific locales.","pos":[1482,1574],"source":"The `_configurethreadlocale` function is used to control the use of thread-specific locales."},{"content":"Use one of these options to specify or determine the per-thread locale status:","pos":[1575,1653]},{"content":"Make the current thread use a thread-specific locale.","pos":[1691,1744]},{"content":"Subsequent calls to <ph id=\"ph1\">`setlocale`</ph> in this thread affect only the thread's own locale.","pos":[1745,1828],"source":" Subsequent calls to `setlocale` in this thread affect only the thread's own locale."},{"content":"Make the current thread use the global locale.","pos":[1867,1913]},{"content":"Subsequent calls to <ph id=\"ph1\">`setlocale`</ph> in this thread affect other threads using the global locale.","pos":[1914,2006],"source":" Subsequent calls to `setlocale` in this thread affect other threads using the global locale."},{"content":"Retrieves the current setting for this particular thread.","pos":[2020,2077]},{"content":"These functions affect the behavior of <ph id=\"ph1\">`setlocale`</ph>, <ph id=\"ph2\">`_tsetlocale`</ph>, <ph id=\"ph3\">`_wsetlocale`</ph>, <ph id=\"ph4\">`_beginthread`</ph>, and <ph id=\"ph5\">`_beginthreadex`</ph>.","pos":[2084,2203],"source":"These functions affect the behavior of `setlocale`, `_tsetlocale`, `_wsetlocale`, `_beginthread`, and `_beginthreadex`."},{"content":"If another method is used to create threads, the locale settings have no effect on those threads.","pos":[2204,2301]},{"content":"When per-thread locale is disabled, any subsequent call to <ph id=\"ph1\">`setlocale`</ph> or <ph id=\"ph2\">`_wsetlocale`</ph> changes the locale of all threads.","pos":[2308,2430],"source":"When per-thread locale is disabled, any subsequent call to `setlocale` or `_wsetlocale` changes the locale of all threads."},{"content":"When per-thread locale is enabled, <ph id=\"ph1\">`setlocale`</ph> or <ph id=\"ph2\">`_wsetlocale`</ph> only affects the current thread's locale.","pos":[2431,2536],"source":" When per-thread locale is enabled, `setlocale` or `_wsetlocale` only affects the current thread's locale."},{"pos":[2543,2731],"content":"If you use <ph id=\"ph1\">`_configurethreadlocale`</ph> to enable a per-thread locale, we recommend that you call <ph id=\"ph2\">`setlocale`</ph> or <ph id=\"ph3\">`_wsetlocale`</ph> to set the preferred locale in that thread immediately afterward.","source":"If you use `_configurethreadlocale` to enable a per-thread locale, we recommend that you call `setlocale` or `_wsetlocale` to set the preferred locale in that thread immediately afterward."},{"content":"If <ph id=\"ph1\">`type`</ph> is not one of the values listed in the table, this function invokes the invalid parameter handler, as described in <bpt id=\"p1\">[</bpt>Parameter Validation<ept id=\"p1\">](../../c-runtime-library/parameter-validation.md)</ept>.","pos":[2738,2935],"source":"If `type` is not one of the values listed in the table, this function invokes the invalid parameter handler, as described in [Parameter Validation](../../c-runtime-library/parameter-validation.md)."},{"content":"If execution is allowed to continue, this function sets <ph id=\"ph1\">`errno`</ph> to <ph id=\"ph2\">`EINVAL`</ph> and returns -1.","pos":[2936,3027],"source":" If execution is allowed to continue, this function sets `errno` to `EINVAL` and returns -1."},{"content":"Requirements","pos":[3036,3048]},{"content":"Routine","pos":[3055,3062]},{"content":"Required header","pos":[3063,3078]},{"content":"locale.h&gt;","pos":[3147,3156],"source":"locale.h>"},{"content":"Example","pos":[3166,3173]},{"content":".NET Framework Equivalent","pos":[6028,6053]},{"content":"Not applicable.","pos":[6057,6072]},{"content":"However, see <bpt id=\"p1\">[</bpt>Using the CurrentCulture Property<ept id=\"p1\">](http://msdn.microsoft.com/en-us/3156042d-6082-4205-90b4-c917ae6a3ba6)</ept>.","pos":[6073,6192],"source":" However, see [Using the CurrentCulture Property](http://msdn.microsoft.com/en-us/3156042d-6082-4205-90b4-c917ae6a3ba6)."},{"content":"See Also","pos":[6201,6209]},{"content":"setlocale, _wsetlocale","pos":[6214,6236]},{"content":"_beginthread, _beginthreadex","pos":[6302,6330]},{"content":"Locale","pos":[6401,6407]},{"content":"Multithreading and Locales","pos":[6449,6475]}],"content":"---\ntitle: \"_configthreadlocale | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\napiname: \n  - \"_configthreadlocale\"\napilocation: \n  - \"msvcrt.dll\"\n  - \"msvcr80.dll\"\n  - \"msvcr90.dll\"\n  - \"msvcr100.dll\"\n  - \"msvcr100_clr0400.dll\"\n  - \"msvcr110.dll\"\n  - \"msvcr110_clr0400.dll\"\n  - \"msvcr120.dll\"\n  - \"msvcr120_clr0400.dll\"\n  - \"ucrtbase.dll\"\n  - \"api-ms-win-crt-locale-l1-1-0.dll\"\napitype: \"DLLExport\"\nf1_keywords: \n  - \"_configthreadlocale\"\n  - \"configthreadlocale\"\ndev_langs: \n  - \"C++\"\n  - \"C\"\nhelpviewer_keywords: \n  - \"configthreadlocale function\"\n  - \"locales, per-thread\"\n  - \"_configthreadlocale function\"\n  - \"per-thread locale\"\n  - \"thread locale\"\nms.assetid: 10e4050e-b587-4f30-80bc-6c76b35fc770\ncaps.latest.revision: 24\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# _configthreadlocale\nConfigures per-thread locale options.  \n  \n## Syntax  \n  \n```  \nint _configthreadlocale(  \n   int type  \n);  \n```  \n  \n#### Parameters  \n `type`  \n The option to set. One of the options listed in the following table.  \n  \n## Return Value  \n The previous per-thread locale status (`_DISABLE_PER_THREAD_LOCALE` or `_ENABLE_PER_THREAD_LOCALE`), or -1 on failure.  \n  \n## Remarks  \n The `_configurethreadlocale` function is used to control the use of thread-specific locales. Use one of these options to specify or determine the per-thread locale status:  \n  \n `_ENABLE_PER_THREAD_LOCALE`  \n Make the current thread use a thread-specific locale. Subsequent calls to `setlocale` in this thread affect only the thread's own locale.  \n  \n `_DISABLE_PER_THREAD_LOCALE`  \n Make the current thread use the global locale. Subsequent calls to `setlocale` in this thread affect other threads using the global locale.  \n  \n `0`  \n Retrieves the current setting for this particular thread.  \n  \n These functions affect the behavior of `setlocale`, `_tsetlocale`, `_wsetlocale`, `_beginthread`, and `_beginthreadex`. If another method is used to create threads, the locale settings have no effect on those threads.  \n  \n When per-thread locale is disabled, any subsequent call to `setlocale` or `_wsetlocale` changes the locale of all threads. When per-thread locale is enabled, `setlocale` or `_wsetlocale` only affects the current thread's locale.  \n  \n If you use `_configurethreadlocale` to enable a per-thread locale, we recommend that you call `setlocale` or `_wsetlocale` to set the preferred locale in that thread immediately afterward.  \n  \n If `type` is not one of the values listed in the table, this function invokes the invalid parameter handler, as described in [Parameter Validation](../../c-runtime-library/parameter-validation.md). If execution is allowed to continue, this function sets `errno` to `EINVAL` and returns -1.  \n  \n## Requirements  \n  \n|Routine|Required header|  \n|-------------|---------------------|  \n|`_configthreadlocale`|\\<locale.h>|  \n  \n## Example  \n  \n```  \n  \n      // crt_configthreadlocale.cpp  \n//   \n// This program demonstrates the use of _configthreadlocale when  \n// using is two independent threads.  \n//  \n  \n#include <locale.h>  \n#include <process.h>  \n#include <windows.h>  \n#include <stdio.h>  \n#include <time.h>  \n  \n#define BUFF_SIZE 100  \n  \n// Retrieve the date and time in the current  \n// locale's format.  \nint get_time(unsigned char* str)  \n{  \n    __time64_t  ltime;  \n    struct tm   thetime;  \n  \n    // Retieve the time  \n    _time64(&ltime);  \n    _gmtime64_s(&thetime, &ltime);  \n  \n    // Format the current time structure into a string  \n    // using %#x is the long date representation,  \n    // appropriate to the current locale  \n    if (!strftime((char *)str, BUFF_SIZE, \"%#x\",   \n                  (const struct tm*)&thetime))  \n    {  \n        printf(\"strftime failed!\\n\");  \n        return -1;  \n    }  \n    return 0;  \n}  \n  \n// This thread sets its locale to German  \n// and prints the time.  \nunsigned __stdcall SecondThreadFunc( void* pArguments )  \n{  \n    unsigned char str[BUFF_SIZE];  \n  \n    // Set the thread code page  \n    _setmbcp(_MB_CP_ANSI)  \n  \n    // Set the thread locale  \n    printf(\"The thread locale is now set to %s.\\n\",  \n           setlocale(LC_ALL, \"German\"));  \n  \n    // Retrieve the time string from the helper function  \n    if (get_time(str) == 0)  \n    {  \n        printf(\"The time in German locale is: '%s'\\n\", str);  \n    }  \n  \n    _endthreadex( 0 );  \n    return 0;  \n}   \n  \n// The main thread spawns a second thread (above) and then  \n// sets the locale to English and prints the time.  \nint main()  \n{   \n    HANDLE          hThread;  \n    unsigned        threadID;  \n    unsigned char   str[BUFF_SIZE];  \n  \n    // Configure per-thread locale to cause all subsequently created   \n    // threads to have their own locale.  \n    _configthreadlocale(_ENABLE_PER_THREAD_LOCALE);  \n  \n    // Retrieve the time string from the helper function  \n    printf(\"The thread locale is now set to %s.\\n\",  \n           setlocale(LC_ALL, \"English\"));  \n  \n    // Create the second thread.  \n    hThread = (HANDLE)_beginthreadex( NULL, 0, &SecondThreadFunc,  \n                                      NULL, 0, &threadID );  \n  \n    if (get_time(str) == 0)  \n    {  \n        // Retrieve the time string from the helper function  \n        printf(\"The time in English locale is: '%s'\\n\\n\", str);  \n    }  \n  \n    // Wait for the created thread to finish.  \n    WaitForSingleObject( hThread, INFINITE );  \n  \n    // Destroy the thread object.  \n    CloseHandle( hThread );  \n}  \n```  \n  \n```Output  \nThe thread locale is now set to English_United States.1252.  \nThe time in English locale is: 'Wednesday, May 12, 2004'  \n  \nThe thread locale is now set to German_Germany.1252.  \nThe time in German locale is: 'Mittwoch, 12. Mai 2004'  \n```  \n  \n## .NET Framework Equivalent  \n Not applicable. However, see [Using the CurrentCulture Property](http://msdn.microsoft.com/en-us/3156042d-6082-4205-90b4-c917ae6a3ba6).  \n  \n## See Also  \n [setlocale, _wsetlocale](../../c-runtime-library/reference/setlocale-wsetlocale.md)   \n [_beginthread, _beginthreadex](../../c-runtime-library/reference/beginthread-beginthreadex.md)   \n [Locale](../../c-runtime-library/locale.md)   \n [Multithreading and Locales](../../parallel/multithreading-and-locales.md)"}