<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ru-ru">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-787e512" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">96e210672e744717f91175a7ee989ad580ebe368</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\preprocessor\implementation-only.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b8fd74818ad3601730d702df2d8bcfa35ad9f32a</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0db3ab8052be9dff2e75e78dc5f860ccd848974b</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>implementation_only | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>implementation_only</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>C++ Specific</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Suppresses the generation of the .tlh header file (the primary header file).</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>This file contains all the declarations used to expose the type-library contents.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The .tli header file, with the implementations of the wrapper member functions, will be generated and included in the compilation.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>When this attribute is specified, the content of the .tli header is in the same namespace as the one normally used in the .tlh header.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>In addition, the member functions are not declared as inline.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`implementation_only`</ph> attribute is intended for use in conjunction with the <bpt id="p1">[</bpt>no_implementation<ept id="p1">](../preprocessor/no-implementation.md)</ept> attribute as a way of keeping the implementations out of the precompiled header (PCH) file.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">`#import`</ph> statement with the <ph id="ph2">`no_implementation`</ph> attribute is placed in the source region used to create the PCH.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The resulting PCH is used by a number of source files.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">`#import`</ph> statement with the <ph id="ph2">`implementation_only`</ph> attribute is then used outside the PCH region.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>You are required to use this statement only once in one of the source files.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>This will generate all the required wrapper member functions without additional recompilation for each source file.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`implementation_only`</ph> attribute in one <ph id="ph2">`#import`</ph> statement must be use in conjunction with another <ph id="ph3">`#import`</ph> statement, of the same type library, with the <ph id="ph4">`no_implementation`</ph> attribute.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Otherwise, compiler errors will be generated.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>This is because wrapper class definitions generated by the <ph id="ph1">`#import`</ph> statement with the <ph id="ph2">`no_implementation`</ph> attribute are required to compile the implementations generated by the <ph id="ph3">`implementation_only`</ph> attribute.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>END C++ Specific</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>import Attributes</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>import Directive</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>