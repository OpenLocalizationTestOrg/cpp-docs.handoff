{"nodes":[{"pos":[12,62],"content":"auto_gcroot::operator auto_gcroot | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"auto_gcroot::operator auto_gcroot | Microsoft Docs","pos":[0,50]}]},{"content":"auto_gcroot::operator auto_gcroot","pos":[779,812]},{"pos":[813,875],"content":"Type-cast operator between <ph id=\"ph1\">`auto_gcroot`</ph> and compatible types.","source":"Type-cast operator between `auto_gcroot` and compatible types."},{"content":"Syntax","pos":[884,890]},{"content":"Return Value","pos":[986,998]},{"pos":[1002,1063],"content":"The current <ph id=\"ph1\">`auto_gcroot`</ph> cast to <ph id=\"ph2\">`auto_gcroot&lt;_other_type&gt;`</ph>.","source":"The current `auto_gcroot` cast to `auto_gcroot<_other_type>`."},{"content":"Example","pos":[1072,1079]},{"content":"Requirements","pos":[1894,1906]},{"pos":[1910,1948],"content":"<bpt id=\"p1\">**</bpt>Header file<ept id=\"p1\">**</ept> <ph id=\"ph1\">\\&lt;</ph>msclr\\auto_gcroot.h&gt;","source":"**Header file** \\<msclr\\auto_gcroot.h>"},{"pos":[1955,1974],"content":"<bpt id=\"p1\">**</bpt>Namespace<ept id=\"p1\">**</ept> msclr","source":"**Namespace** msclr"},{"content":"See Also","pos":[1983,1991]},{"content":"auto_gcroot Members","pos":[1996,2015]}],"content":"---\ntitle: \"auto_gcroot::operator auto_gcroot | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"auto_gcroot.operator auto_gcroot\"\n  - \"auto_gcroot::operator auto_gcroot\"\n  - \"msclr.auto_gcroot.operator auto_gcroot\"\n  - \"msclr::auto_gcroot::operator auto_gcroot\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"auto_gcroot operator\"\nms.assetid: 43e3f27a-9f68-444f-9149-a9282a9b935a\ncaps.latest.revision: 12\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# auto_gcroot::operator auto_gcroot\nType-cast operator between `auto_gcroot` and compatible types.  \n  \n## Syntax  \n  \n```  \ntemplate<typename _other_type>  \noperator auto_gcroot<_other_type>();  \n```  \n  \n## Return Value  \n The current `auto_gcroot` cast to `auto_gcroot<_other_type>`.  \n  \n## Example  \n  \n```  \n// msl_auto_gcroot_op_auto_gcroot.cpp  \n// compile with: /clr  \n#include <msclr\\auto_gcroot.h>  \n  \nusing namespace System;  \nusing namespace msclr;  \n  \nref class ClassA {  \nprotected:     \n   String^ m_s;  \npublic:  \n   ClassA( String^ s ) : m_s( s ) {}  \n  \n   virtual void PrintHello() {  \n      Console::WriteLine( \"Hello from {0} A!\", m_s );  \n   }  \n};  \n  \nref class ClassB : ClassA {  \npublic:  \n   ClassB( String ^ s) : ClassA( s ) {}  \n   virtual void PrintHello() new {  \n      Console::WriteLine( \"Hello from {0} B!\", m_s );  \n   }  \n};  \n  \nint main() {  \n   auto_gcroot<ClassB^> b = gcnew ClassB(\"first\");  \n   b->PrintHello();  \n   auto_gcroot<ClassA^> a = (auto_gcroot<ClassA^>)b;  \n   a->PrintHello();  \n}  \n```  \n  \n```Output  \nHello from first B!  \nHello from first A!  \n```  \n  \n## Requirements  \n **Header file** \\<msclr\\auto_gcroot.h>  \n  \n **Namespace** msclr  \n  \n## See Also  \n [auto_gcroot Members](../dotnet/auto-gcroot-members.md)"}