{"nodes":[{"pos":[12,47],"content":"is_reference Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"is_reference Class | Microsoft Docs","pos":[0,35]}]},{"content":"is_reference Class","pos":[772,790]},{"content":"Tests if type is a reference.","pos":[791,820]},{"content":"Syntax","pos":[829,835]},{"content":"Parameters","pos":[906,916]},{"content":"The type to query.","pos":[928,946]},{"content":"Remarks","pos":[955,962]},{"pos":[966,1099],"content":"An instance of the type predicate holds true if the type <ph id=\"ph1\">`Ty`</ph> is a reference to an object or to a function, otherwise it holds false.","source":"An instance of the type predicate holds true if the type `Ty` is a reference to an object or to a function, otherwise it holds false."},{"content":"Example","pos":[1108,1115]},{"content":"Requirements","pos":[2036,2048]},{"pos":[2052,2077],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> &lt;type_traits&gt;","source":"**Header:** <type_traits>"},{"pos":[2084,2102],"content":"<bpt id=\"p1\">**</bpt>Namespace:<ept id=\"p1\">**</ept> std","source":"**Namespace:** std"},{"content":"See Also","pos":[2111,2119]},{"content":"&lt;type_traits&gt;","pos":[2124,2137],"source":"<type_traits>"},{"content":"is_pointer Class","pos":[2180,2196]}],"content":"---\ntitle: \"is_reference Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"std.tr1.is_reference\"\n  - \"std::tr1::is_reference\"\n  - \"is_reference\"\n  - \"std.is_reference\"\n  - \"std::is_reference\"\n  - \"type_traits/std::is_reference\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"is_reference class [TR1]\"\n  - \"is_reference\"\nms.assetid: 3d9e631f-3092-430c-843e-e914ab58c257\ncaps.latest.revision: 20\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# is_reference Class\nTests if type is a reference.  \n  \n## Syntax  \n  \n```  \ntemplate <class Ty>  \nstruct is_reference;  \n```  \n  \n#### Parameters  \n `Ty`  \n The type to query.  \n  \n## Remarks  \n An instance of the type predicate holds true if the type `Ty` is a reference to an object or to a function, otherwise it holds false.  \n  \n## Example  \n  \n```cpp  \n// std__type_traits__is_reference.cpp   \n// compile with: /EHsc   \n#include <type_traits>   \n#include <iostream>   \n  \nstruct trivial   \n    {   \n    int val;   \n    };   \n  \nint main()   \n    {   \n    std::cout << \"is_reference<trivial> == \" << std::boolalpha   \n        << std::is_reference<trivial>::value << std::endl;   \n    std::cout << \"is_reference<trivial&> == \" << std::boolalpha   \n        << std::is_reference<trivial&>::value << std::endl;   \n    std::cout << \"is_reference<int()> == \" << std::boolalpha   \n        << std::is_reference<int()>::value << std::endl;   \n    std::cout << \"is_reference<int(&)()> == \" << std::boolalpha   \n        << std::is_reference<int(&)()>::value << std::endl;   \n  \n    return (0);   \n    }  \n  \n```  \n  \n```Output  \nis_reference<trivial> == false  \nis_reference<trivial&> == true  \nis_reference<int()> == false  \nis_reference<int(&)()> == true  \n```  \n  \n## Requirements  \n **Header:** <type_traits>  \n  \n **Namespace:** std  \n  \n## See Also  \n [<type_traits>](../standard-library/type-traits.md)   \n [is_pointer Class](../standard-library/is-pointer-class.md)\n"}