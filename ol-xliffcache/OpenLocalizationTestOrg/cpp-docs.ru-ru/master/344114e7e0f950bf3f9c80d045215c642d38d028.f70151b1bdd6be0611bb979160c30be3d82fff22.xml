{"nodes":[{"pos":[12,49],"content":"accumulate (STL-CLR) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"accumulate (STL-CLR) | Microsoft Docs","pos":[0,37]}]},{"content":"accumulate (STL/CLR)","pos":[628,648]},{"content":"Computes the sum of all the elements in a specified range including some initial value by computing successive partial sums or computes the result of successive partial results similarly obtained from using a specified binary operation other than the sum.","pos":[649,904]},{"content":"Syntax","pos":[913,919]},{"content":"Remarks","pos":[1169,1176]},{"content":"This function behaves the same as the STL numeric function <ph id=\"ph1\">`accumulate`</ph>.","pos":[1180,1252],"source":"This function behaves the same as the STL numeric function `accumulate`."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>accumulate<ept id=\"p1\">](../standard-library/numeric-functions.md#accumulate)</ept>.","pos":[1253,1345],"source":" For more information, see [accumulate](../standard-library/numeric-functions.md#accumulate)."},{"content":"Requirements","pos":[1354,1366]},{"pos":[1370,1399],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> <ph id=\"ph1\">\\&lt;</ph>cliext/numeric&gt;","source":"**Header:** \\<cliext/numeric>"},{"pos":[1406,1427],"content":"<bpt id=\"p1\">**</bpt>Namespace:<ept id=\"p1\">**</ept> cliext","source":"**Namespace:** cliext"},{"content":"See Also","pos":[1436,1444]},{"content":"numeric (STL/CLR)","pos":[1449,1466]}],"content":"---\ntitle: \"accumulate (STL-CLR) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"cliext::accumulate\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"accumulate function [STL/CLR]\"\nms.assetid: b80e1ef1-1858-4c1d-817b-c42ad1f17a2f\ncaps.latest.revision: 4\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# accumulate (STL/CLR)\nComputes the sum of all the elements in a specified range including some initial value by computing successive partial sums or computes the result of successive partial results similarly obtained from using a specified binary operation other than the sum.  \n  \n## Syntax  \n  \n```  \ntemplate<class _InIt, class _Ty> inline  \n    _Ty accumulate(_InIt _First, _InIt _Last, _Ty _Val);  \ntemplate<class _InIt, class _Ty, class _Fn2> inline  \n    _Ty accumulate(_InIt _First, _InIt _Last, _Ty _Val, _Fn2 _Func);  \n```  \n  \n## Remarks  \n This function behaves the same as the STL numeric function `accumulate`. For more information, see [accumulate](../standard-library/numeric-functions.md#accumulate).  \n  \n## Requirements  \n **Header:** \\<cliext/numeric>  \n  \n **Namespace:** cliext  \n  \n## See Also  \n [numeric (STL/CLR)](../dotnet/numeric-stl-clr.md)"}