{"nodes":[{"pos":[12,50],"content":"deque::rend (STL-CLR) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"deque::rend (STL-CLR) | Microsoft Docs","pos":[0,38]}]},{"content":"deque::rend (STL/CLR)","pos":[623,644]},{"content":"Designates the end of the reversed controlled sequence.","pos":[645,700]},{"content":"Syntax","pos":[709,715]},{"content":"Remarks","pos":[766,773]},{"content":"The member function returns a reverse iterator that points just beyond the beginning of the controlled sequence.","pos":[777,889]},{"content":"Hence, it designates the <ph id=\"ph1\">`end`</ph> of the reverse sequence.","pos":[890,945],"source":" Hence, it designates the `end` of the reverse sequence."},{"content":"You use it to obtain an iterator that designates the <ph id=\"ph1\">`current`</ph> end of the controlled sequence seen in reverse order, but its status can change if the length of the controlled sequence changes.","pos":[946,1138],"source":" You use it to obtain an iterator that designates the `current` end of the controlled sequence seen in reverse order, but its status can change if the length of the controlled sequence changes."},{"content":"Example","pos":[1147,1154]},{"content":"Requirements","pos":[2120,2132]},{"pos":[2136,2163],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> <ph id=\"ph1\">\\&lt;</ph>cliext/deque&gt;","source":"**Header:** \\<cliext/deque>"},{"pos":[2170,2191],"content":"<bpt id=\"p1\">**</bpt>Namespace:<ept id=\"p1\">**</ept> cliext","source":"**Namespace:** cliext"},{"content":"See Also","pos":[2200,2208]},{"content":"deque (STL/CLR)","pos":[2213,2228]},{"content":"deque::begin (STL/CLR)","pos":[2263,2285]},{"content":"deque::end (STL/CLR)","pos":[2326,2346]},{"content":"deque::rbegin (STL/CLR)","pos":[2385,2408]}],"content":"---\ntitle: \"deque::rend (STL-CLR) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"cliext::deque::rend\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"rend member [STL/CLR]\"\nms.assetid: c2977998-3cf1-4c6f-9710-6cf6a3aae5e5\ncaps.latest.revision: 15\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# deque::rend (STL/CLR)\nDesignates the end of the reversed controlled sequence.  \n  \n## Syntax  \n  \n```  \nreverse_iterator rend();  \n```  \n  \n## Remarks  \n The member function returns a reverse iterator that points just beyond the beginning of the controlled sequence. Hence, it designates the `end` of the reverse sequence. You use it to obtain an iterator that designates the `current` end of the controlled sequence seen in reverse order, but its status can change if the length of the controlled sequence changes.  \n  \n## Example  \n  \n```  \n// cliext_deque_rend.cpp   \n// compile with: /clr   \n#include <cliext/deque>   \n  \nint main()   \n    {   \n    cliext::deque<wchar_t> c1;   \n    c1.push_back(L'a');   \n    c1.push_back(L'b');   \n    c1.push_back(L'c');   \n  \n// display initial contents \" a b c\"   \n    for each (wchar_t elem in c1)   \n        System::Console::Write(\" {0}\", elem);   \n    System::Console::WriteLine();   \n  \n// inspect first two items   \n    cliext::deque<wchar_t>::reverse_iterator rit = c1.rend();   \n    --rit;   \n    System::Console::WriteLine(\"*-- --rend() = {0}\", *--rit);   \n    System::Console::WriteLine(\"*--rend() = {0}\", *++rit);   \n  \n// alter first two items and reinspect   \n    *--rit = L'x';   \n    *++rit = L'y';   \n    for each (wchar_t elem in c1)   \n        System::Console::Write(\" {0}\", elem);   \n    System::Console::WriteLine();   \n    return (0);   \n    }  \n  \n```  \n  \n```Output  \n a b c  \n*-- --rend() = b  \n*--rend() = a  \n y x c  \n```  \n  \n## Requirements  \n **Header:** \\<cliext/deque>  \n  \n **Namespace:** cliext  \n  \n## See Also  \n [deque (STL/CLR)](../dotnet/deque-stl-clr.md)   \n [deque::begin (STL/CLR)](../dotnet/deque-begin-stl-clr.md)   \n [deque::end (STL/CLR)](../dotnet/deque-end-stl-clr.md)   \n [deque::rbegin (STL/CLR)](../dotnet/deque-rbegin-stl-clr.md)"}