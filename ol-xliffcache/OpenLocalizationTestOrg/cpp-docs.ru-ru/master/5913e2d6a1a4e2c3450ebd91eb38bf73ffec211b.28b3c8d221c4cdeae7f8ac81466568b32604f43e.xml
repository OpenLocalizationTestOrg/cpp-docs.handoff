{"nodes":[{"pos":[12,44],"content":"Registry Macros | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Registry Macros | Microsoft Docs","pos":[0,32]}]},{"content":"Registry Macros","pos":[576,591]},{"content":"These macros define useful type library and registry facilities.","pos":[592,656]},{"content":"_ATL_STATIC_REGISTRY","pos":[678,698]},{"content":"Indicates that you want the registration code for your object to be in the object to avoid a dependency on ATL.DLL.","pos":[723,838]},{"content":"DECLARE_LIBID","pos":[844,857]},{"pos":[875,940],"content":"Provides a way for ATL to obtain the <bpt id=\"p1\">*</bpt>libid<ept id=\"p1\">*</ept> of the type library.","source":"Provides a way for ATL to obtain the *libid* of the type library."},{"content":"DECLARE_NO_REGISTRY","pos":[946,965]},{"content":"Avoids default ATL registration.","pos":[989,1021]},{"content":"DECLARE_REGISTRY","pos":[1027,1043]},{"content":"Enters or removes the main object's entry in the system registry.","pos":[1064,1129]},{"content":"DECLARE_REGISTRY_APPID_RESOURCEID","pos":[1135,1168]},{"pos":[1206,1279],"content":"Specifies the information required to automatically register the <bpt id=\"p1\">*</bpt>appid<ept id=\"p1\">*</ept>.","source":"Specifies the information required to automatically register the *appid*."},{"content":"DECLARE_REGISTRY_RESOURCE","pos":[1285,1310]},{"content":"Finds the named resource and runs the registry script within it.","pos":[1340,1404]},{"content":"DECLARE_REGISTRY_RESOURCEID","pos":[1410,1437]},{"content":"Finds the resource identified by an ID number and runs the registry script within it.","pos":[1469,1554]},{"pos":[1602,1622],"content":"_ATL_STATIC_REGISTRY"},{"content":"A symbol that indicates you want the registration code for your object to be in the object to avoid a dependency on ATL.DLL.","pos":[1626,1750]},{"content":"Remarks","pos":[1802,1809]},{"pos":[1813,1888],"content":"When you define <bpt id=\"p1\">**</bpt>ATL_STATIC_REGISTRY<ept id=\"p1\">**</ept>, you should use the following code:","source":"When you define **ATL_STATIC_REGISTRY**, you should use the following code:"},{"pos":[1906,1935],"content":"NVC_ATL_EventHandlingSample#5"},{"pos":[2026,2039],"content":"DECLARE_LIBID"},{"pos":[2043,2108],"content":"Provides a way for ATL to obtain the <bpt id=\"p1\">*</bpt>libid<ept id=\"p1\">*</ept> of the type library.","source":"Provides a way for ATL to obtain the *libid* of the type library."},{"content":"Parameters","pos":[2160,2170]},{"content":"libid","pos":[2175,2180]},{"content":"The GUID of the type library.","pos":[2185,2214]},{"content":"Remarks","pos":[2224,2231]},{"pos":[2235,2288],"content":"Use <ph id=\"ph1\">`DECLARE_LIBID`</ph> in a <ph id=\"ph2\">`CAtlModuleT`</ph>-derived class.","source":"Use `DECLARE_LIBID` in a `CAtlModuleT`-derived class."},{"content":"Example","pos":[2298,2305]},{"content":"Non-attributed wizard-generated ATL projects will have a sample of using this macro.","pos":[2309,2393]},{"pos":[2439,2458],"content":"DECLARE_NO_REGISTRY"},{"pos":[2462,2580],"content":"Use <ph id=\"ph1\">`DECLARE_NO_REGISTRY`</ph> if you want to avoid any default ATL registration for the class in which this macro appears.","source":"Use `DECLARE_NO_REGISTRY` if you want to avoid any default ATL registration for the class in which this macro appears."},{"pos":[2658,2674],"content":"DECLARE_REGISTRY"},{"content":"Enters the standard class registration into the system registry or removes it from the system registry.","pos":[2678,2781]},{"content":"Parameters","pos":[2883,2893]},{"content":"[in] Included for backward compatibility.","pos":[2908,2949]},{"content":"[in] An <ph id=\"ph1\">`LPCTSTR`</ph> that is a version-specific program identifier.","pos":[2965,3029],"source":" [in] An `LPCTSTR` that is a version-specific program identifier."},{"content":"vpid","pos":[3037,3041]},{"content":"[in] An <ph id=\"ph1\">`LPCTSTR`</ph> that is a version-independent program identifier.","pos":[3046,3113],"source":" [in] An `LPCTSTR` that is a version-independent program identifier."},{"content":"nid","pos":[3121,3124]},{"content":"[in] A <bpt id=\"p1\">**</bpt>UINT<ept id=\"p1\">**</ept> that is an index of the resource string in the registry to use as the description of the program.","pos":[3129,3242],"source":" [in] A **UINT** that is an index of the resource string in the registry to use as the description of the program."},{"content":"[in] A <ph id=\"ph1\">`DWORD`</ph> containing the program's threading model in the registry.","pos":[3260,3332],"source":" [in] A `DWORD` containing the program's threading model in the registry."},{"content":"Must be one of the following values: <bpt id=\"p1\">**</bpt>THREADFLAGS_APARTMENT<ept id=\"p1\">**</ept>, <bpt id=\"p2\">**</bpt>THREADFLAGS_BOTH<ept id=\"p2\">**</ept>, or <bpt id=\"p3\">**</bpt>AUTPRXFLAG<ept id=\"p3\">**</ept>.","pos":[3333,3437],"source":" Must be one of the following values: **THREADFLAGS_APARTMENT**, **THREADFLAGS_BOTH**, or **AUTPRXFLAG**."},{"content":"Remarks","pos":[3447,3454]},{"content":"The standard registration consists of the CLSID, program ID, version-independent program ID, description string, and thread model.","pos":[3458,3588]},{"content":"When you create an object or control using the ATL Add Class Wizard, the wizard automatically implements script-based registry support and adds the <bpt id=\"p1\">[</bpt>DECLARE_REGISTRY_RESOURCEID<ept id=\"p1\">](#declare_registry_resourceid)</ept> macro to your files.","pos":[3595,3823],"source":"When you create an object or control using the ATL Add Class Wizard, the wizard automatically implements script-based registry support and adds the [DECLARE_REGISTRY_RESOURCEID](#declare_registry_resourceid) macro to your files."},{"content":"If you do not want script-based registry support, you need to replace this macro with <ph id=\"ph1\">`DECLARE_REGISTRY`</ph>.","pos":[3824,3929],"source":" If you do not want script-based registry support, you need to replace this macro with `DECLARE_REGISTRY`."},{"content":"only inserts the five basic keys described above into the registry.","pos":[3949,4016]},{"content":"You must manually write code to insert other keys into the registry.","pos":[4017,4085]},{"pos":[4145,4178],"content":"DECLARE_REGISTRY_APPID_RESOURCEID"},{"pos":[4182,4255],"content":"Specifies the information required to automatically register the <bpt id=\"p1\">*</bpt>appid<ept id=\"p1\">*</ept>.","source":"Specifies the information required to automatically register the *appid*."},{"content":"Parameters","pos":[4340,4350]},{"content":"resid","pos":[4355,4360]},{"content":"The resource id of the .rgs file that contains information about the <bpt id=\"p1\">*</bpt>appid<ept id=\"p1\">*</ept>.","pos":[4365,4442],"source":" The resource id of the .rgs file that contains information about the *appid*."},{"content":"appid","pos":[4450,4455]},{"content":"A GUID.","pos":[4460,4467]},{"content":"Remarks","pos":[4477,4484]},{"pos":[4488,4561],"content":"Use <ph id=\"ph1\">`DECLARE_REGISTRY_APPID_RESOURCEID`</ph> in a <ph id=\"ph2\">`CAtlModuleT`</ph>-derived class.","source":"Use `DECLARE_REGISTRY_APPID_RESOURCEID` in a `CAtlModuleT`-derived class."},{"content":"Example","pos":[4571,4578]},{"content":"Classes added to ATL projects with the Add Class code wizard will have a sample of using this macro.","pos":[4582,4682]},{"pos":[4734,4759],"content":"DECLARE_REGISTRY_RESOURCE"},{"content":"Gets the named resource containing the registry file and runs the script to either enter objects into the system registry or remove them from the system registry.","pos":[4763,4925]},{"content":"Parameters","pos":[4985,4995]},{"content":"x","pos":[5000,5001]},{"content":"[in] String identifier of your resource.","pos":[5006,5046]},{"content":"Remarks","pos":[5056,5063]},{"pos":[5067,5346],"content":"When you create an object or control using the ATL Project Wizard, the wizard will automatically implement script-based registry support and add the <bpt id=\"p1\">[</bpt>DECLARE_REGISTRY_RESOURCEID<ept id=\"p1\">](#declare_registry_resourceid)</ept> macro, which is similar to <ph id=\"ph1\">`DECLARE_REGISTRY_RESOURCE`</ph>, to your files.","source":"When you create an object or control using the ATL Project Wizard, the wizard will automatically implement script-based registry support and add the [DECLARE_REGISTRY_RESOURCEID](#declare_registry_resourceid) macro, which is similar to `DECLARE_REGISTRY_RESOURCE`, to your files."},{"content":"You can statically link with the ATL Registry Component (Registrar) for optimized registry access.","pos":[5353,5451]},{"content":"To statically link to the Registrar code, add the following line to your stdafx.h file:","pos":[5452,5539]},{"pos":[5557,5571],"content":"NVC_ATL_COM#56"},{"content":"If you want ATL to substitute replacement values at run time, do not specify the <ph id=\"ph1\">`DECLARE_REGISTRY_RESOURCE`</ph> or <ph id=\"ph2\">`DECLARE_REGISTRY_RESOURCEID`</ph> macro.","pos":[5627,5775],"source":"If you want ATL to substitute replacement values at run time, do not specify the `DECLARE_REGISTRY_RESOURCE` or `DECLARE_REGISTRY_RESOURCEID` macro."},{"content":"Instead, create an array of <bpt id=\"p1\">**</bpt>_ATL_REGMAP_ENTRIES<ept id=\"p1\">**</ept> structures, where each entry contains a variable placeholder paired with a value to replace the placeholder at run time.","pos":[5776,5948],"source":" Instead, create an array of **_ATL_REGMAP_ENTRIES** structures, where each entry contains a variable placeholder paired with a value to replace the placeholder at run time."},{"content":"Then call <bpt id=\"p1\">[</bpt>CAtlModule::UpdateRegistryFromResourceD<ept id=\"p1\">](catlmodule-class.md#catlmodule__updateregistryfromresourced)</ept> or <bpt id=\"p2\">[</bpt>CAtlModule::UpdateRegistryFromResourceS<ept id=\"p2\">](catlmodule-class.md#catlmodule__updateregistryfromresources)</ept>, passing the array.","pos":[5949,6187],"source":" Then call [CAtlModule::UpdateRegistryFromResourceD](catlmodule-class.md#catlmodule__updateregistryfromresourced) or [CAtlModule::UpdateRegistryFromResourceS](catlmodule-class.md#catlmodule__updateregistryfromresources), passing the array."},{"content":"This adds all of the replacement values in the <bpt id=\"p1\">**</bpt>_ATL_REGMAP_ENTRIES<ept id=\"p1\">**</ept> structures to the Registrar's replacement map.","pos":[6188,6305],"source":" This adds all of the replacement values in the **_ATL_REGMAP_ENTRIES** structures to the Registrar's replacement map."},{"pos":[6313,6482],"content":"For more information about replaceable parameters and scripting, see the article <bpt id=\"p1\">[</bpt>The ATL Registry Component (Registrar)<ept id=\"p1\">](../../atl/atl-registry-component-registrar.md)</ept>.","source":"For more information about replaceable parameters and scripting, see the article [The ATL Registry Component (Registrar)](../../atl/atl-registry-component-registrar.md)."},{"pos":[6536,6563],"content":"DECLARE_REGISTRY_RESOURCEID"},{"pos":[6567,6731],"content":"Same as <bpt id=\"p1\">[</bpt>DECLARE_REGISTRY_RESOURCE<ept id=\"p1\">](#declare_registry_resource)</ept> except that it uses a wizard-generated <bpt id=\"p2\">**</bpt>UINT<ept id=\"p2\">**</ept> to identify the resource, rather than a string name.","source":"Same as [DECLARE_REGISTRY_RESOURCE](#declare_registry_resource) except that it uses a wizard-generated **UINT** to identify the resource, rather than a string name."},{"content":"Parameters","pos":[6793,6803]},{"content":"x","pos":[6808,6809]},{"content":"[in] Wizard-generated identifier of your resource.","pos":[6814,6864]},{"content":"Remarks","pos":[6874,6881]},{"pos":[6885,7084],"content":"When you create an object or control using the ATL Project Wizard, the wizard will automatically implement script-based registry support and add the <ph id=\"ph1\">`DECLARE_REGISTRY_RESOURCEID`</ph> macro to your files.","source":"When you create an object or control using the ATL Project Wizard, the wizard will automatically implement script-based registry support and add the `DECLARE_REGISTRY_RESOURCEID` macro to your files."},{"content":"You can statically link with the ATL Registry Component (Registrar) for optimized registry access.","pos":[7091,7189]},{"content":"To statically link to the Registrar code, add the following line to your stdafx.h file:","pos":[7190,7277]},{"pos":[7295,7309],"content":"NVC_ATL_COM#56"},{"content":"If you want ATL to substitute replacement values at run time, do not specify the <ph id=\"ph1\">`DECLARE_REGISTRY_RESOURCE`</ph> or <ph id=\"ph2\">`DECLARE_REGISTRY_RESOURCEID`</ph> macro.","pos":[7365,7513],"source":"If you want ATL to substitute replacement values at run time, do not specify the `DECLARE_REGISTRY_RESOURCE` or `DECLARE_REGISTRY_RESOURCEID` macro."},{"content":"Instead, create an array of <bpt id=\"p1\">**</bpt>_ATL_REGMAP_ENTRIES<ept id=\"p1\">**</ept> structures, where each entry contains a variable placeholder paired with a value to replace the placeholder at run time.","pos":[7514,7686],"source":" Instead, create an array of **_ATL_REGMAP_ENTRIES** structures, where each entry contains a variable placeholder paired with a value to replace the placeholder at run time."},{"content":"Then call <bpt id=\"p1\">[</bpt>CAtlModule::UpdateRegistryFromResourceD<ept id=\"p1\">](catlmodule-class.md#catlmodule__updateregistryfromresourced)</ept> or <bpt id=\"p2\">[</bpt>CAtlModule::UpdateRegistryFromResourceS<ept id=\"p2\">](catlmodule-class.md#catlmodule__updateregistryfromresources)</ept>, passing the array.","pos":[7687,7925],"source":" Then call [CAtlModule::UpdateRegistryFromResourceD](catlmodule-class.md#catlmodule__updateregistryfromresourced) or [CAtlModule::UpdateRegistryFromResourceS](catlmodule-class.md#catlmodule__updateregistryfromresources), passing the array."},{"content":"This adds all of the replacement values in the <bpt id=\"p1\">**</bpt>_ATL_REGMAP_ENTRIES<ept id=\"p1\">**</ept> structures to the Registrar's replacement map.","pos":[7926,8043],"source":" This adds all of the replacement values in the **_ATL_REGMAP_ENTRIES** structures to the Registrar's replacement map."},{"pos":[8051,8220],"content":"For more information about replaceable parameters and scripting, see the article <bpt id=\"p1\">[</bpt>The ATL Registry Component (Registrar)<ept id=\"p1\">](../../atl/atl-registry-component-registrar.md)</ept>.","source":"For more information about replaceable parameters and scripting, see the article [The ATL Registry Component (Registrar)](../../atl/atl-registry-component-registrar.md)."},{"content":"See Also","pos":[8229,8237]},{"content":"Macros","pos":[8242,8248]}],"content":"---\ntitle: \"Registry Macros | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"registry, ATL macros\"\nms.assetid: 3ee041da-c63b-42a4-89cf-2a4b2a6f81ae\ncaps.latest.revision: 16\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Registry Macros\nThese macros define useful type library and registry facilities.  \n  \n|||  \n|-|-|  \n|[_ATL_STATIC_REGISTRY](#_atl_static_registry)|Indicates that you want the registration code for your object to be in the object to avoid a dependency on ATL.DLL.|  \n|[DECLARE_LIBID](#declare_libid)|Provides a way for ATL to obtain the *libid* of the type library.|  \n|[DECLARE_NO_REGISTRY](#declare_no_registry)|Avoids default ATL registration.|  \n|[DECLARE_REGISTRY](#declare_registry)|Enters or removes the main object's entry in the system registry.|  \n|[DECLARE_REGISTRY_APPID_RESOURCEID](#declare_registry_appid_resourceid)|Specifies the information required to automatically register the *appid*.|  \n|[DECLARE_REGISTRY_RESOURCE](#declare_registry_resource)|Finds the named resource and runs the registry script within it.|  \n|[DECLARE_REGISTRY_RESOURCEID](#declare_registry_resourceid)|Finds the resource identified by an ID number and runs the registry script within it.|  \n  \n##  <a name=\"_atl_static_registry\"></a>  _ATL_STATIC_REGISTRY  \n A symbol that indicates you want the registration code for your object to be in the object to avoid a dependency on ATL.DLL.  \n  \n```\n#define _ATL_STATIC_REGISTRY\n```  \n  \n### Remarks  \n When you define **ATL_STATIC_REGISTRY**, you should use the following code:  \n  \n [!code-cpp[NVC_ATL_EventHandlingSample#5](../../atl/codesnippet/cpp/registry-macros_1.cpp)]  \n  \n##  <a name=\"declare_libid\"></a>  DECLARE_LIBID  \n Provides a way for ATL to obtain the *libid* of the type library.  \n  \n```\nDECLARE_LIBID(Â\n    libid Â)\n```  \n  \n### Parameters  \n *libid*  \n The GUID of the type library.  \n  \n### Remarks  \n Use `DECLARE_LIBID` in a `CAtlModuleT`-derived class.  \n  \n### Example  \n Non-attributed wizard-generated ATL projects will have a sample of using this macro.  \n  \n##  <a name=\"declare_no_registry\"></a>  DECLARE_NO_REGISTRY  \n Use `DECLARE_NO_REGISTRY` if you want to avoid any default ATL registration for the class in which this macro appears.  \n  \n```\nDECLARE_NO_REGISTRY()\n```  \n  \n##  <a name=\"declare_registry\"></a>  DECLARE_REGISTRY  \n Enters the standard class registration into the system registry or removes it from the system registry.  \n  \n```\nDECLARE_REGISTRY(Â\n    class, Â\n    pid, Â\n    vpid, Â\n    nid, Â\n    flags Â)\n```  \n  \n### Parameters  \n `class`  \n [in] Included for backward compatibility.  \n  \n `pid`  \n [in] An `LPCTSTR` that is a version-specific program identifier.  \n  \n *vpid*  \n [in] An `LPCTSTR` that is a version-independent program identifier.  \n  \n *nid*  \n [in] A **UINT** that is an index of the resource string in the registry to use as the description of the program.  \n  \n `flags`  \n [in] A `DWORD` containing the program's threading model in the registry. Must be one of the following values: **THREADFLAGS_APARTMENT**, **THREADFLAGS_BOTH**, or **AUTPRXFLAG**.  \n  \n### Remarks  \n The standard registration consists of the CLSID, program ID, version-independent program ID, description string, and thread model.  \n  \n When you create an object or control using the ATL Add Class Wizard, the wizard automatically implements script-based registry support and adds the [DECLARE_REGISTRY_RESOURCEID](#declare_registry_resourceid) macro to your files. If you do not want script-based registry support, you need to replace this macro with `DECLARE_REGISTRY`. `DECLARE_REGISTRY` only inserts the five basic keys described above into the registry. You must manually write code to insert other keys into the registry.  \n  \n##  <a name=\"declare_registry_appid_resourceid\"></a>  DECLARE_REGISTRY_APPID_RESOURCEID  \n Specifies the information required to automatically register the *appid*.  \n  \n```\nDECLARE_REGISTRY_APPID_RESOURCEID(Â\n    resid, Â\n    appid Â)\n```  \n  \n### Parameters  \n *resid*  \n The resource id of the .rgs file that contains information about the *appid*.  \n  \n *appid*  \n A GUID.  \n  \n### Remarks  \n Use `DECLARE_REGISTRY_APPID_RESOURCEID` in a `CAtlModuleT`-derived class.  \n  \n### Example  \n Classes added to ATL projects with the Add Class code wizard will have a sample of using this macro.  \n  \n##  <a name=\"declare_registry_resource\"></a>  DECLARE_REGISTRY_RESOURCE  \n Gets the named resource containing the registry file and runs the script to either enter objects into the system registry or remove them from the system registry.  \n  \n```\nDECLARE_REGISTRY_RESOURCE(Â\n    x Â)\n```  \n  \n### Parameters  \n *x*  \n [in] String identifier of your resource.  \n  \n### Remarks  \n When you create an object or control using the ATL Project Wizard, the wizard will automatically implement script-based registry support and add the [DECLARE_REGISTRY_RESOURCEID](#declare_registry_resourceid) macro, which is similar to `DECLARE_REGISTRY_RESOURCE`, to your files.  \n  \n You can statically link with the ATL Registry Component (Registrar) for optimized registry access. To statically link to the Registrar code, add the following line to your stdafx.h file:  \n  \n [!code-cpp[NVC_ATL_COM#56](../../atl/codesnippet/cpp/registry-macros_2.h)]  \n  \n If you want ATL to substitute replacement values at run time, do not specify the `DECLARE_REGISTRY_RESOURCE` or `DECLARE_REGISTRY_RESOURCEID` macro. Instead, create an array of **_ATL_REGMAP_ENTRIES** structures, where each entry contains a variable placeholder paired with a value to replace the placeholder at run time. Then call [CAtlModule::UpdateRegistryFromResourceD](catlmodule-class.md#catlmodule__updateregistryfromresourced) or [CAtlModule::UpdateRegistryFromResourceS](catlmodule-class.md#catlmodule__updateregistryfromresources), passing the array. This adds all of the replacement values in the **_ATL_REGMAP_ENTRIES** structures to the Registrar's replacement map.  \n\n  \n For more information about replaceable parameters and scripting, see the article [The ATL Registry Component (Registrar)](../../atl/atl-registry-component-registrar.md).  \n  \n##  <a name=\"declare_registry_resourceid\"></a>  DECLARE_REGISTRY_RESOURCEID  \n Same as [DECLARE_REGISTRY_RESOURCE](#declare_registry_resource) except that it uses a wizard-generated **UINT** to identify the resource, rather than a string name.  \n  \n```\nDECLARE_REGISTRY_RESOURCEID(Â\n    x Â)\n```  \n  \n### Parameters  \n *x*  \n [in] Wizard-generated identifier of your resource.  \n  \n### Remarks  \n When you create an object or control using the ATL Project Wizard, the wizard will automatically implement script-based registry support and add the `DECLARE_REGISTRY_RESOURCEID` macro to your files.  \n  \n You can statically link with the ATL Registry Component (Registrar) for optimized registry access. To statically link to the Registrar code, add the following line to your stdafx.h file:  \n  \n [!code-cpp[NVC_ATL_COM#56](../../atl/codesnippet/cpp/registry-macros_2.h)]  \n  \n If you want ATL to substitute replacement values at run time, do not specify the `DECLARE_REGISTRY_RESOURCE` or `DECLARE_REGISTRY_RESOURCEID` macro. Instead, create an array of **_ATL_REGMAP_ENTRIES** structures, where each entry contains a variable placeholder paired with a value to replace the placeholder at run time. Then call [CAtlModule::UpdateRegistryFromResourceD](catlmodule-class.md#catlmodule__updateregistryfromresourced) or [CAtlModule::UpdateRegistryFromResourceS](catlmodule-class.md#catlmodule__updateregistryfromresources), passing the array. This adds all of the replacement values in the **_ATL_REGMAP_ENTRIES** structures to the Registrar's replacement map.  \n\n  \n For more information about replaceable parameters and scripting, see the article [The ATL Registry Component (Registrar)](../../atl/atl-registry-component-registrar.md).  \n  \n## See Also  \n [Macros](../../atl/reference/atl-macros.md)\n"}