{"nodes":[{"pos":[12,55],"content":"vector::pop_back (STL-CLR) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"vector::pop_back (STL-CLR) | Microsoft Docs","pos":[0,43]}]},{"content":"vector::pop_back (STL/CLR)","pos":[637,663]},{"content":"Removes the last element.","pos":[664,689]},{"content":"Syntax","pos":[698,704]},{"content":"Remarks","pos":[747,754]},{"content":"The member function removes the last element of the controlled sequence, which must be non-empty.","pos":[758,855]},{"content":"You use it to shorten the vector by one element at the back.","pos":[856,916]},{"content":"Example","pos":[925,932]},{"content":"Requirements","pos":[1590,1602]},{"pos":[1606,1634],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> <ph id=\"ph1\">\\&lt;</ph>cliext/vector&gt;","source":"**Header:** \\<cliext/vector>"},{"pos":[1641,1662],"content":"<bpt id=\"p1\">**</bpt>Namespace:<ept id=\"p1\">**</ept> cliext","source":"**Namespace:** cliext"},{"content":"See Also","pos":[1671,1679]},{"content":"vector (STL/CLR)","pos":[1684,1700]},{"content":"vector::push_back (STL/CLR)","pos":[1736,1763]}],"content":"---\ntitle: \"vector::pop_back (STL-CLR) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"cliext::vector::pop_back\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"pop_back member [STL/CLR]\"\nms.assetid: 7e9fb72c-e733-4434-a71c-e4389629a821\ncaps.latest.revision: 14\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# vector::pop_back (STL/CLR)\nRemoves the last element.  \n  \n## Syntax  \n  \n```  \nvoid pop_back();  \n```  \n  \n## Remarks  \n The member function removes the last element of the controlled sequence, which must be non-empty. You use it to shorten the vector by one element at the back.  \n  \n## Example  \n  \n```  \n// cliext_vector_pop_back.cpp   \n// compile with: /clr   \n#include <cliext/vector>   \n  \nint main()   \n    {   \n    cliext::vector<wchar_t> c1;   \n    c1.push_back(L'a');   \n    c1.push_back(L'b');   \n    c1.push_back(L'c');   \n  \n// display contents \" a b c\"   \n    for each (wchar_t elem in c1)   \n        System::Console::Write(\" {0}\", elem);   \n    System::Console::WriteLine();   \n  \n// pop an element and redisplay   \n    c1.pop_back();   \n    for each (wchar_t elem in c1)   \n        System::Console::Write(\" {0}\", elem);   \n    System::Console::WriteLine();   \n    return (0);   \n    }  \n  \n```  \n  \n```Output  \na b c  \na b  \n```  \n  \n## Requirements  \n **Header:** \\<cliext/vector>  \n  \n **Namespace:** cliext  \n  \n## See Also  \n [vector (STL/CLR)](../dotnet/vector-stl-clr.md)   \n [vector::push_back (STL/CLR)](../dotnet/vector-push-back-stl-clr.md)"}