{"nodes":[{"pos":[12,46],"content":"CDialogImpl Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"CDialogImpl Class | Microsoft Docs","pos":[0,34]}]},{"content":"CDialogImpl Class","pos":[676,693]},{"content":"This class provides methods for creating a modal or modeless dialog box.","pos":[694,766]},{"pos":[774,884],"content":"[!IMPORTANT]\n This class and its members cannot be used in applications that execute in the Windows Runtime.","leadings":["","> "],"nodes":[{"content":"This class and its members cannot be used in applications that execute in the Windows Runtime.","pos":[14,108]}]},{"content":"Syntax","pos":[893,899]},{"content":"Parameters","pos":[1056,1066]},{"content":"Your class, derived from <ph id=\"ph1\">`CDialogImpl`</ph>.","pos":[1077,1116],"source":" Your class, derived from `CDialogImpl`."},{"content":"TBase","pos":[1124,1129]},{"content":"The base class of your new class.","pos":[1134,1167]},{"content":"The default base class is <bpt id=\"p1\">[</bpt>CWindow<ept id=\"p1\">](../../atl/reference/cwindow-class.md)</ept>.","pos":[1168,1242],"source":" The default base class is [CWindow](../../atl/reference/cwindow-class.md)."},{"content":"Members","pos":[1251,1258]},{"content":"Methods","pos":[1268,1275]},{"content":"Create","pos":[1297,1303]},{"content":"Creates a modeless dialog box.","pos":[1327,1357]},{"content":"DestroyWindow","pos":[1363,1376]},{"content":"Destroys a modeless dialog box.","pos":[1407,1438]},{"content":"DoModal","pos":[1444,1451]},{"content":"Creates a modal dialog box.","pos":[1476,1503]},{"content":"EndDialog","pos":[1509,1518]},{"content":"Destroys a modal dialog box.","pos":[1545,1573]},{"content":"CDialogImplBaseT Methods","pos":[1584,1608]},{"content":"GetDialogProc","pos":[1630,1643]},{"content":"Returns the current dialog box procedure.","pos":[1674,1715]},{"content":"MapDialogRect","pos":[1721,1734]},{"content":"Maps the dialog-box units of the specified rectangle to screen units (pixels).","pos":[1765,1843]},{"content":"OnFinalMessage","pos":[1849,1863]},{"pos":[1895,1961],"content":"Called after receiving the last message, typically <ph id=\"ph1\">`WM_NCDESTROY`</ph>.","source":"Called after receiving the last message, typically `WM_NCDESTROY`."},{"content":"Static Functions","pos":[1972,1988]},{"content":"DialogProc","pos":[2010,2020]},{"content":"Processes messages sent to the dialog box.","pos":[2048,2090]},{"content":"StartDialogProc","pos":[2096,2111]},{"content":"Called when the first message is received to process messages sent to the dialog box.","pos":[2144,2229]},{"content":"Remarks","pos":[2239,2246]},{"content":"With <ph id=\"ph1\">`CDialogImpl`</ph> you can create a modal or modeless dialog box.","pos":[2250,2315],"source":"With `CDialogImpl` you can create a modal or modeless dialog box."},{"content":"provides the dialog box procedure, which uses the default message map to direct messages to the appropriate handlers.","pos":[2330,2447]},{"pos":[2454,2562],"content":"The base class destructor <bpt id=\"p1\">**</bpt>~CWindowImplRoot<ept id=\"p1\">**</ept> ensures that the window is gone before destroying the object.","source":"The base class destructor **~CWindowImplRoot** ensures that the window is gone before destroying the object."},{"pos":[2583,2665],"content":"derives from <bpt id=\"p1\">**</bpt>CDialogImplBaseT<ept id=\"p1\">**</ept>, which in turn derives from <bpt id=\"p2\">**</bpt>CWindowImplRoot<ept id=\"p2\">**</ept>.","source":" derives from **CDialogImplBaseT**, which in turn derives from **CWindowImplRoot**."},{"pos":[2673,2861],"content":"[!NOTE]\n Your class must define an **IDD** member that specifies the dialog template resource ID. For example, the ATL Project Wizard automatically adds the following line to your class:","leadings":["","> "],"nodes":[{"content":" Your class must define an **IDD** member that specifies the dialog template resource ID. For example, the ATL Project Wizard automatically adds the following line to your class:","pos":[8,186],"nodes":[{"content":"Your class must define an <bpt id=\"p1\">**</bpt>IDD<ept id=\"p1\">**</ept> member that specifies the dialog template resource ID.","pos":[1,89],"source":" Your class must define an **IDD** member that specifies the dialog template resource ID."},{"content":"For example, the ATL Project Wizard automatically adds the following line to your class:","pos":[90,178]}]}]},{"pos":[2879,2899],"content":"NVC_ATL_Windowing#41"},{"pos":[2957,3032],"content":"where <ph id=\"ph1\">`MyDlg`</ph> is the <bpt id=\"p1\">**</bpt>Short name<ept id=\"p1\">**</ept> entered in the wizard's <bpt id=\"p2\">**</bpt>Names<ept id=\"p2\">**</ept> page.","source":"where `MyDlg` is the **Short name** entered in the wizard's **Names** page."},{"content":"For more information about","pos":[3039,3065]},{"content":"See","pos":[3066,3069]},{"content":"Creating controls","pos":[3121,3138]},{"content":"ATL Tutorial","pos":[3140,3152]},{"content":"Using dialog boxes in ATL","pos":[3209,3234]},{"content":"ATL Window Classes","pos":[3236,3254]},{"content":"ATL Project Wizard","pos":[3293,3311]},{"content":"Creating an ATL Project","pos":[3313,3336]},{"content":"Dialog boxes","pos":[3390,3402]},{"pos":[3403,3506],"content":"<bpt id=\"p1\">[</bpt>Dialog Boxes<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms632588)</ept> and subsequent topics in the","source":"[Dialog Boxes](http://msdn.microsoft.com/library/windows/desktop/ms632588) and subsequent topics in the "},{"content":"Requirements","pos":[3568,3580]},{"pos":[3584,3604],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> atlwin.h","source":"**Header:** atlwin.h"},{"pos":[3650,3669],"content":"CDialogImpl::Create"},{"content":"Creates a modeless dialog box.","pos":[3673,3703]},{"content":"Parameters","pos":[3886,3896]},{"content":"[in] The handle to the owner window.","pos":[3916,3952]},{"content":"RECT&amp;","pos":[3961,3966],"source":"RECT&"},{"content":"[in] A <bpt id=\"p1\">[</bpt>RECT<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/dd162897)</ept> structure specifying the dialog's size and position.","pos":[3979,4105],"source":" [in] A [RECT](http://msdn.microsoft.com/library/windows/desktop/dd162897) structure specifying the dialog's size and position."},{"content":"[in] Specifies the value to pass to the dialog box in the <bpt id=\"p1\">**</bpt>lParam<ept id=\"p1\">**</ept> parameter of the <bpt id=\"p2\">**</bpt>WM_INITDIALOG<ept id=\"p2\">**</ept> message.","pos":[4129,4241],"source":" [in] Specifies the value to pass to the dialog box in the **lParam** parameter of the **WM_INITDIALOG** message."},{"content":"Return Value","pos":[4251,4263]},{"content":"The handle to the newly created dialog box.","pos":[4267,4310]},{"content":"Remarks","pos":[4320,4327]},{"content":"This dialog box is automatically attached to the <ph id=\"ph1\">`CDialogImpl`</ph> object.","pos":[4331,4401],"source":"This dialog box is automatically attached to the `CDialogImpl` object."},{"content":"To create a modal dialog box, call <bpt id=\"p1\">[</bpt>DoModal<ept id=\"p1\">](#cdialogimpl__domodal)</ept>.","pos":[4402,4470],"source":" To create a modal dialog box, call [DoModal](#cdialogimpl__domodal)."},{"content":"The second override above is used only with <bpt id=\"p1\">[</bpt>CComControl<ept id=\"p1\">](../../atl/reference/ccomcontrol-class.md)</ept>.","pos":[4471,4571],"source":" The second override above is used only with [CComControl](../../atl/reference/ccomcontrol-class.md)."},{"pos":[4624,4650],"content":"CDialogImpl::DestroyWindow"},{"content":"Destroys a modeless dialog box.","pos":[4654,4685]},{"content":"Return Value","pos":[4737,4749]},{"pos":[4753,4828],"content":"<bpt id=\"p1\">**</bpt>TRUE<ept id=\"p1\">**</ept> if the dialog box was successfully destroyed; otherwise <bpt id=\"p2\">**</bpt>FALSE<ept id=\"p2\">**</ept>.","source":"**TRUE** if the dialog box was successfully destroyed; otherwise **FALSE**."},{"content":"Remarks","pos":[4838,4845]},{"pos":[4849,4932],"content":"Returns <bpt id=\"p1\">**</bpt>TRUE<ept id=\"p1\">**</ept> if the dialog box was successfully destroyed; otherwise <bpt id=\"p2\">**</bpt>FALSE<ept id=\"p2\">**</ept>.","source":"Returns **TRUE** if the dialog box was successfully destroyed; otherwise **FALSE**."},{"pos":[4982,5005],"content":"CDialogImpl::DialogProc"},{"content":"This static function implements the dialog box procedure.","pos":[5009,5066]},{"content":"Parameters","pos":[5207,5217]},{"content":"[in] The handle to the dialog box.","pos":[5231,5265]},{"content":"[in] The message sent to the dialog box.","pos":[5282,5322]},{"content":"[in] Additional message-specific information.","pos":[5341,5386]},{"content":"[in] Additional message-specific information.","pos":[5405,5450]},{"content":"Return Value","pos":[5460,5472]},{"pos":[5476,5535],"content":"<bpt id=\"p1\">**</bpt>TRUE<ept id=\"p1\">**</ept> if the message is processed; otherwise, <bpt id=\"p2\">**</bpt>FALSE<ept id=\"p2\">**</ept>.","source":"**TRUE** if the message is processed; otherwise, **FALSE**."},{"content":"Remarks","pos":[5545,5552]},{"pos":[5569,5645],"content":"uses the default message map to direct messages to the appropriate handlers."},{"pos":[5652,5737],"content":"You can override <ph id=\"ph1\">`DialogProc`</ph> to provide a different mechanism for handling messages.","source":"You can override `DialogProc` to provide a different mechanism for handling messages."},{"pos":[5784,5804],"content":"CDialogImpl::DoModal"},{"content":"Creates a modal dialog box.","pos":[5808,5835]},{"content":"Parameters","pos":[5960,5970]},{"content":"[in] The handle to the owner window.","pos":[5990,6026]},{"content":"The default value is the return value of the <bpt id=\"p1\">[</bpt>GetActiveWindow<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms646292)</ept> Win32 function.","pos":[6027,6165],"source":" The default value is the return value of the [GetActiveWindow](http://msdn.microsoft.com/library/windows/desktop/ms646292) Win32 function."},{"content":"[in] Specifies the value to pass to the dialog box in the <bpt id=\"p1\">**</bpt>lParam<ept id=\"p1\">**</ept> parameter of the <bpt id=\"p2\">**</bpt>WM_INITDIALOG<ept id=\"p2\">**</ept> message.","pos":[6189,6301],"source":" [in] Specifies the value to pass to the dialog box in the **lParam** parameter of the **WM_INITDIALOG** message."},{"content":"Return Value","pos":[6311,6323]},{"content":"If successful, the value of the <ph id=\"ph1\">`nRetCode`</ph> parameter specified in the call to <bpt id=\"p1\">[</bpt>EndDialog<ept id=\"p1\">](#cdialogimpl__enddialog)</ept>.","pos":[6327,6442],"source":"If successful, the value of the `nRetCode` parameter specified in the call to [EndDialog](#cdialogimpl__enddialog)."},{"content":"Otherwise, -1.","pos":[6443,6457]},{"content":"Remarks","pos":[6467,6474]},{"pos":[6478,6548],"content":"This dialog box is automatically attached to the <ph id=\"ph1\">`CDialogImpl`</ph> object.","source":"This dialog box is automatically attached to the `CDialogImpl` object."},{"pos":[6555,6624],"content":"To create a modeless dialog box, call <bpt id=\"p1\">[</bpt>Create<ept id=\"p1\">](#cdialogimpl__create)</ept>.","source":"To create a modeless dialog box, call [Create](#cdialogimpl__create)."},{"pos":[6673,6695],"content":"CDialogImpl::EndDialog"},{"content":"Destroys a modal dialog box.","pos":[6699,6727]},{"content":"Parameters","pos":[6787,6797]},{"content":"[in] The value to be returned by <bpt id=\"p1\">[</bpt>CDialogImpl::DoModal<ept id=\"p1\">](#cdialogimpl__domodal)</ept>.","pos":[6815,6894],"source":" [in] The value to be returned by [CDialogImpl::DoModal](#cdialogimpl__domodal)."},{"content":"Return Value","pos":[6904,6916]},{"pos":[6920,6982],"content":"<bpt id=\"p1\">**</bpt>TRUE<ept id=\"p1\">**</ept> if the dialog box is destroyed; otherwise, <bpt id=\"p2\">**</bpt>FALSE<ept id=\"p2\">**</ept>.","source":"**TRUE** if the dialog box is destroyed; otherwise, **FALSE**."},{"content":"Remarks","pos":[6992,6999]},{"content":"must be called through the dialog procedure.","pos":[7015,7059]},{"content":"After the dialog box is destroyed, Windows uses the value of <ph id=\"ph1\">`nRetCode`</ph> as the return value for <ph id=\"ph2\">`DoModal`</ph>, which created the dialog box.","pos":[7060,7196],"source":" After the dialog box is destroyed, Windows uses the value of `nRetCode` as the return value for `DoModal`, which created the dialog box."},{"pos":[7204,7372],"content":"[!NOTE]\n Do not call `EndDialog` to destroy a modeless dialog box. Call [CWindow::DestroyWindow](../../atl/reference/cwindow-class.md#cwindow__destroywindow) instead.","leadings":["","> "],"nodes":[{"content":" Do not call `EndDialog` to destroy a modeless dialog box. Call [CWindow::DestroyWindow](../../atl/reference/cwindow-class.md#cwindow__destroywindow) instead.","pos":[8,166],"nodes":[{"content":"Do not call <ph id=\"ph1\">`EndDialog`</ph> to destroy a modeless dialog box.","pos":[1,58],"source":" Do not call `EndDialog` to destroy a modeless dialog box."},{"content":"Call <bpt id=\"p1\">[</bpt>CWindow::DestroyWindow<ept id=\"p1\">](../../atl/reference/cwindow-class.md#cwindow__destroywindow)</ept> instead.","pos":[59,158],"source":" Call [CWindow::DestroyWindow](../../atl/reference/cwindow-class.md#cwindow__destroywindow) instead."}]}]},{"pos":[7425,7451],"content":"CDialogImpl::GetDialogProc"},{"pos":[7455,7510],"content":"Returns <ph id=\"ph1\">`DialogProc`</ph>, the current dialog box procedure.","source":"Returns `DialogProc`, the current dialog box procedure."},{"content":"Return Value","pos":[7573,7585]},{"content":"The current dialog box procedure.","pos":[7589,7622]},{"content":"Remarks","pos":[7632,7639]},{"content":"Override this method to replace the dialog procedure with your own.","pos":[7643,7710]},{"pos":[7763,7789],"content":"CDialogImpl::MapDialogRect"},{"content":"Converts (maps) the dialog-box units of the specified rectangle to screen units (pixels).","pos":[7793,7882]},{"content":"Parameters","pos":[7947,7957]},{"content":"Points to a <ph id=\"ph1\">`CRect`</ph> object or <bpt id=\"p1\">[</bpt>RECT<ept id=\"p1\">](../../mfc/reference/rect-structure1.md)</ept> structure that is to receive the client coordinates of the update that encloses the update region.","pos":[7973,8148],"source":" Points to a `CRect` object or [RECT](../../mfc/reference/rect-structure1.md) structure that is to receive the client coordinates of the update that encloses the update region."},{"content":"Return Value","pos":[8158,8170]},{"content":"Nonzero if the update succeeds; 0 if the update fails.","pos":[8174,8228]},{"content":"To get extended error information, call <ph id=\"ph1\">`GetLastError`</ph>.","pos":[8229,8284],"source":" To get extended error information, call `GetLastError`."},{"content":"Remarks","pos":[8294,8301]},{"pos":[8305,8512],"content":"The function replaces the coordinates in the specified <ph id=\"ph1\">`RECT`</ph> structure with the converted coordinates, which allows the structure to be used to create a dialog box or position a control within a dialog box.","source":"The function replaces the coordinates in the specified `RECT` structure with the converted coordinates, which allows the structure to be used to create a dialog box or position a control within a dialog box."},{"pos":[8566,8593],"content":"CDialogImpl::OnFinalMessage"},{"pos":[8597,8664],"content":"Called after receiving the last message (typically <ph id=\"ph1\">`WM_NCDESTROY`</ph>).","source":"Called after receiving the last message (typically `WM_NCDESTROY`)."},{"content":"Parameters","pos":[8734,8744]},{"content":"[in] A handle to the window being destroyed.","pos":[8758,8802]},{"content":"Remarks","pos":[8812,8819]},{"pos":[8823,8943],"content":"Note that if you want to automatically delete your object upon the window destruction, you can call <ph id=\"ph1\">`delete this;`</ph> here.","source":"Note that if you want to automatically delete your object upon the window destruction, you can call `delete this;` here."},{"pos":[8998,9026],"content":"CDialogImpl::StartDialogProc"},{"content":"Called only once, when the first message is received, to process messages sent to the dialog box.","pos":[9030,9127]},{"content":"Parameters","pos":[9273,9283]},{"content":"[in] The handle to the dialog box.","pos":[9297,9331]},{"content":"[in] The message sent to the dialog box.","pos":[9348,9388]},{"content":"[in] Additional message-specific information.","pos":[9407,9452]},{"content":"[in] Additional message-specific information.","pos":[9471,9516]},{"content":"Return Value","pos":[9526,9538]},{"content":"The window procedure.","pos":[9542,9563]},{"content":"Remarks","pos":[9573,9580]},{"pos":[9584,9699],"content":"After the initial call to <ph id=\"ph1\">`StartDialogProc`</ph>, <ph id=\"ph2\">`DialogProc`</ph> is set as a dialog procedure, and further calls go there.","source":"After the initial call to `StartDialogProc`, `DialogProc` is set as a dialog procedure, and further calls go there."},{"content":"See Also","pos":[9708,9716]},{"content":"BEGIN_MSG_MAP","pos":[9721,9734]},{"content":"Class Overview","pos":[9813,9827]}],"content":"---\ntitle: \"CDialogImpl Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"CDialogImpl\"\n  - \"ATL.CDialogImpl\"\n  - \"ATL::CDialogImpl\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"dialog boxes, ATL\"\n  - \"CDialogImpl class\"\nms.assetid: d430bc7b-8a28-4ad3-9507-277bdd2c2c2e\ncaps.latest.revision: 25\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# CDialogImpl Class\nThis class provides methods for creating a modal or modeless dialog box.  \n  \n> [!IMPORTANT]\n>  This class and its members cannot be used in applications that execute in the Windows Runtime.  \n  \n## Syntax  \n  \n```  \n \ntemplate <class T,  \n    class TBase = CWindow>  \n    class ATL_NO_VTABLE CDialogImpl :  \n    public CDialogImplBaseT<TBase>  \n \n```  \n  \n#### Parameters  \n `T`  \n Your class, derived from `CDialogImpl`.  \n  \n *TBase*  \n The base class of your new class. The default base class is [CWindow](../../atl/reference/cwindow-class.md).  \n  \n## Members  \n  \n### Methods  \n  \n|||  \n|-|-|  \n|[Create](#cdialogimpl__create)|Creates a modeless dialog box.|  \n|[DestroyWindow](#cdialogimpl__destroywindow)|Destroys a modeless dialog box.|  \n|[DoModal](#cdialogimpl__domodal)|Creates a modal dialog box.|  \n|[EndDialog](#cdialogimpl__enddialog)|Destroys a modal dialog box.|  \n  \n### CDialogImplBaseT Methods  \n  \n|||  \n|-|-|  \n|[GetDialogProc](#cdialogimpl__getdialogproc)|Returns the current dialog box procedure.|  \n|[MapDialogRect](#cdialogimpl__mapdialogrect)|Maps the dialog-box units of the specified rectangle to screen units (pixels).|  \n|[OnFinalMessage](#cdialogimpl__onfinalmessage)|Called after receiving the last message, typically `WM_NCDESTROY`.|  \n  \n### Static Functions  \n  \n|||  \n|-|-|  \n|[DialogProc](#cdialogimpl__dialogproc)|Processes messages sent to the dialog box.|  \n|[StartDialogProc](#cdialogimpl__startdialogproc)|Called when the first message is received to process messages sent to the dialog box.|  \n  \n## Remarks  \n With `CDialogImpl` you can create a modal or modeless dialog box. `CDialogImpl` provides the dialog box procedure, which uses the default message map to direct messages to the appropriate handlers.  \n  \n The base class destructor **~CWindowImplRoot** ensures that the window is gone before destroying the object.  \n  \n `CDialogImpl` derives from **CDialogImplBaseT**, which in turn derives from **CWindowImplRoot**.  \n  \n> [!NOTE]\n>  Your class must define an **IDD** member that specifies the dialog template resource ID. For example, the ATL Project Wizard automatically adds the following line to your class:  \n  \n [!code-cpp[NVC_ATL_Windowing#41](../../atl/codesnippet/cpp/cdialogimpl-class_1.h)]  \n  \n where `MyDlg` is the **Short name** entered in the wizard's **Names** page.  \n  \n|For more information about|See|  \n|--------------------------------|---------|  \n|Creating controls|[ATL Tutorial](../../atl/active-template-library-atl-tutorial.md)|  \n|Using dialog boxes in ATL|[ATL Window Classes](../../atl/atl-window-classes.md)|  \n|ATL Project Wizard|[Creating an ATL Project](../../atl/reference/creating-an-atl-project.md)|  \n|Dialog boxes|[Dialog Boxes](http://msdn.microsoft.com/library/windows/desktop/ms632588) and subsequent topics in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]|  \n  \n## Requirements  \n **Header:** atlwin.h  \n  \n##  <a name=\"cdialogimpl__create\"></a>  CDialogImpl::Create  \n Creates a modeless dialog box.  \n  \n```  \n \nHWND Create(\n    HWND hWndParent,  \n    LPARAM dwInitParam = NULL);\n\n    HWND Create(\n    HWND hWndParent,  \n    RECT&, \n    LPARAM dwInitParam = NULL);\n\n \n```  \n  \n### Parameters  \n `hWndParent`  \n [in] The handle to the owner window.  \n  \n **RECT&** `rect`  \n [in] A [RECT](http://msdn.microsoft.com/library/windows/desktop/dd162897) structure specifying the dialog's size and position.  \n  \n `dwInitParam`  \n [in] Specifies the value to pass to the dialog box in the **lParam** parameter of the **WM_INITDIALOG** message.  \n  \n### Return Value  \n The handle to the newly created dialog box.  \n  \n### Remarks  \n This dialog box is automatically attached to the `CDialogImpl` object. To create a modal dialog box, call [DoModal](#cdialogimpl__domodal). The second override above is used only with [CComControl](../../atl/reference/ccomcontrol-class.md).  \n  \n##  <a name=\"cdialogimpl__destroywindow\"></a>  CDialogImpl::DestroyWindow  \n Destroys a modeless dialog box.  \n  \n```  \n \nBOOL DestroyWindow();\n\n \n```  \n  \n### Return Value  \n **TRUE** if the dialog box was successfully destroyed; otherwise **FALSE**.  \n  \n### Remarks  \n Returns **TRUE** if the dialog box was successfully destroyed; otherwise **FALSE**.  \n  \n##  <a name=\"cdialogimpl__dialogproc\"></a>  CDialogImpl::DialogProc  \n This static function implements the dialog box procedure.  \n  \n```  \n \nstatic LRESULT CALLBACK DialogProc(\n    HWND hWnd,  \n    UINT uMsg,  \n    WPARAM wParam,  \n    LPARAM lParam);\n\n \n```  \n  \n### Parameters  \n `hWnd`  \n [in] The handle to the dialog box.  \n  \n `uMsg`  \n [in] The message sent to the dialog box.  \n  \n `wParam`  \n [in] Additional message-specific information.  \n  \n `lParam`  \n [in] Additional message-specific information.  \n  \n### Return Value  \n **TRUE** if the message is processed; otherwise, **FALSE**.  \n  \n### Remarks  \n `DialogProc` uses the default message map to direct messages to the appropriate handlers.  \n  \n You can override `DialogProc` to provide a different mechanism for handling messages.  \n  \n##  <a name=\"cdialogimpl__domodal\"></a>  CDialogImpl::DoModal  \n Creates a modal dialog box.  \n  \n```  \n \nINT_PTR DoModal(\n    HWND hWndParent = ::GetActiveWindow(),   \n    LPARAM dwInitParam = NULL);\n\n \n```  \n  \n### Parameters  \n `hWndParent`  \n [in] The handle to the owner window. The default value is the return value of the [GetActiveWindow](http://msdn.microsoft.com/library/windows/desktop/ms646292) Win32 function.  \n  \n `dwInitParam`  \n [in] Specifies the value to pass to the dialog box in the **lParam** parameter of the **WM_INITDIALOG** message.  \n  \n### Return Value  \n If successful, the value of the `nRetCode` parameter specified in the call to [EndDialog](#cdialogimpl__enddialog). Otherwise, -1.  \n  \n### Remarks  \n This dialog box is automatically attached to the `CDialogImpl` object.  \n  \n To create a modeless dialog box, call [Create](#cdialogimpl__create).  \n  \n##  <a name=\"cdialogimpl__enddialog\"></a>  CDialogImpl::EndDialog  \n Destroys a modal dialog box.  \n  \n```  \n \nBOOL EndDialog(int nRetCode);\n\n \n```  \n  \n### Parameters  \n `nRetCode`  \n [in] The value to be returned by [CDialogImpl::DoModal](#cdialogimpl__domodal).  \n  \n### Return Value  \n **TRUE** if the dialog box is destroyed; otherwise, **FALSE**.  \n  \n### Remarks  \n `EndDialog` must be called through the dialog procedure. After the dialog box is destroyed, Windows uses the value of `nRetCode` as the return value for `DoModal`, which created the dialog box.  \n  \n> [!NOTE]\n>  Do not call `EndDialog` to destroy a modeless dialog box. Call [CWindow::DestroyWindow](../../atl/reference/cwindow-class.md#cwindow__destroywindow) instead.  \n  \n##  <a name=\"cdialogimpl__getdialogproc\"></a>  CDialogImpl::GetDialogProc  \n Returns `DialogProc`, the current dialog box procedure.  \n  \n```  \n \nvirtual WNDPROC GetDialogProc();\n\n \n```  \n  \n### Return Value  \n The current dialog box procedure.  \n  \n### Remarks  \n Override this method to replace the dialog procedure with your own.  \n  \n##  <a name=\"cdialogimpl__mapdialogrect\"></a>  CDialogImpl::MapDialogRect  \n Converts (maps) the dialog-box units of the specified rectangle to screen units (pixels).  \n  \n```  \n \nBOOL MapDialogRect(LPRECT lpRect);\n\n \n```  \n  \n### Parameters  \n `lpRect`  \n Points to a `CRect` object or [RECT](../../mfc/reference/rect-structure1.md) structure that is to receive the client coordinates of the update that encloses the update region.  \n  \n### Return Value  \n Nonzero if the update succeeds; 0 if the update fails. To get extended error information, call `GetLastError`.  \n  \n### Remarks  \n The function replaces the coordinates in the specified `RECT` structure with the converted coordinates, which allows the structure to be used to create a dialog box or position a control within a dialog box.  \n  \n##  <a name=\"cdialogimpl__onfinalmessage\"></a>  CDialogImpl::OnFinalMessage  \n Called after receiving the last message (typically `WM_NCDESTROY`).  \n  \n```  \n \nvirtual void OnFinalMessage(HWND hWnd);\n\n \n```  \n  \n### Parameters  \n `hWnd`  \n [in] A handle to the window being destroyed.  \n  \n### Remarks  \n Note that if you want to automatically delete your object upon the window destruction, you can call `delete this;` here.  \n  \n##  <a name=\"cdialogimpl__startdialogproc\"></a>  CDialogImpl::StartDialogProc  \n Called only once, when the first message is received, to process messages sent to the dialog box.  \n  \n```  \n \nstatic LRESULT CALLBACK StartDialogProc(\n    HWND hWnd,  \n    UINT uMsg,  \n    WPARAM wParam,  \n    LPARAM lParam);\n\n \n```  \n  \n### Parameters  \n `hWnd`  \n [in] The handle to the dialog box.  \n  \n `uMsg`  \n [in] The message sent to the dialog box.  \n  \n `wParam`  \n [in] Additional message-specific information.  \n  \n `lParam`  \n [in] Additional message-specific information.  \n  \n### Return Value  \n The window procedure.  \n  \n### Remarks  \n After the initial call to `StartDialogProc`, `DialogProc` is set as a dialog procedure, and further calls go there.  \n  \n## See Also  \n [BEGIN_MSG_MAP](http://msdn.microsoft.com/library/8bbb5af9-18b1-48c6-880e-166f599ee554)   \n [Class Overview](../../atl/atl-class-overview.md)"}