{"nodes":[{"pos":[12,39],"content":"void (C++) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"void (C++) | Microsoft Docs","pos":[0,27]}]},{"content":"void (C++)","pos":[666,676]},{"content":"When used as a function return type, the <ph id=\"ph1\">`void`</ph> keyword specifies that the function does not return a value.","pos":[677,785],"source":"When used as a function return type, the `void` keyword specifies that the function does not return a value."},{"content":"When used for a function's parameter list, void specifies that the function takes no parameters.","pos":[786,882]},{"content":"When used in the declaration of a pointer, void specifies that the pointer is \"universal.\"","pos":[883,973]},{"content":"If a pointer's type is <bpt id=\"p1\">**</bpt>void <ph id=\"ph1\">\\*</ph><ept id=\"p1\">**</ept>, the pointer can point to any variable that is not declared with the <bpt id=\"p2\">**</bpt>const<ept id=\"p2\">**</ept> or <ph id=\"ph2\">`volatile`</ph> keyword.","pos":[980,1116],"source":"If a pointer's type is **void \\***, the pointer can point to any variable that is not declared with the **const** or `volatile` keyword."},{"content":"A void pointer cannot be dereferenced unless it is cast to another type.","pos":[1117,1189]},{"content":"A void pointer can be converted into any other type of data pointer.","pos":[1190,1258]},{"content":"A void pointer can point to a function, but not to a class member in C++.","pos":[1265,1338]},{"content":"You cannot declare a variable of type void.","pos":[1345,1388]},{"content":"Example","pos":[1397,1404]},{"content":"See Also","pos":[1611,1619]},{"content":"Keywords","pos":[1624,1632]},{"content":"Fundamental Types","pos":[1663,1680]}],"content":"---\ntitle: \"void (C++) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"language-reference\"\nf1_keywords: \n  - \"void\"\n  - \"void_cpp\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"void keyword [C++]\"\n  - \"functions [C++], void\"\n  - \"pointers, void\"\nms.assetid: d203edba-38e6-4056-8b89-011437351057\ncaps.latest.revision: 9\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# void (C++)\nWhen used as a function return type, the `void` keyword specifies that the function does not return a value. When used for a function's parameter list, void specifies that the function takes no parameters. When used in the declaration of a pointer, void specifies that the pointer is \"universal.\"  \n  \n If a pointer's type is **void \\***, the pointer can point to any variable that is not declared with the **const** or `volatile` keyword. A void pointer cannot be dereferenced unless it is cast to another type. A void pointer can be converted into any other type of data pointer.  \n  \n A void pointer can point to a function, but not to a class member in C++.  \n  \n You cannot declare a variable of type void.  \n  \n## Example  \n  \n```  \n// void.cpp  \nvoid vobject;   // C2182  \nvoid *pv;   // okay  \nint *pint; int i;  \nint main() {  \n   pv = &i;  \n   // Cast optional in C required in C++  \n   pint = (int *)pv;  \n}   \n```  \n  \n## See Also  \n [Keywords](../cpp/keywords-cpp.md)   \n [Fundamental Types](../cpp/fundamental-types-cpp.md)"}