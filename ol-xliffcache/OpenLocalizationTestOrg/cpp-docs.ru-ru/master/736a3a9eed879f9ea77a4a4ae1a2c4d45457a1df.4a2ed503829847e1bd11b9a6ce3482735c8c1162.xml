{"nodes":[{"pos":[12,44],"content":"&lt;sstream&gt; | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"sstream<ph id=\"ph1\">&amp;gt;</ph> | Microsoft Docs","pos":[4,32],"source":"sstream&gt; | Microsoft Docs"}]},{"content":"sstream","pos":[643,650]},{"content":"Defines several template classes that support iostreams operations on sequences stored in an allocated array object.","pos":[655,771]},{"content":"Such sequences are easily converted to and from objects of template class <bpt id=\"p1\">[</bpt>basic_string<ept id=\"p1\">](../standard-library/basic-string-class.md)</ept>.","pos":[772,904],"source":" Such sequences are easily converted to and from objects of template class [basic_string](../standard-library/basic-string-class.md)."},{"content":"Syntax","pos":[913,919]},{"content":"Parameters","pos":[2670,2680]},{"content":"Parameter","pos":[2687,2696]},{"content":"Description","pos":[2697,2708]},{"pos":[2758,2791],"content":"Reference to an <ph id=\"ph1\">`sstream`</ph> object.","source":"Reference to an `sstream` object."},{"pos":[2804,2837],"content":"Reference to an <ph id=\"ph1\">`sstream`</ph> object.","source":"Reference to an `sstream` object."},{"content":"Remarks","pos":[2847,2854]},{"content":"Objects of type <ph id=\"ph1\">`char *`</ph> can use the functionality in <bpt id=\"p1\">[</bpt><ph id=\"ph2\">\\&lt;</ph>strstream&gt;<ept id=\"p1\">](../standard-library/strstream.md)</ept> for streaming.","pos":[2858,2975],"source":"Objects of type `char *` can use the functionality in [\\<strstream>](../standard-library/strstream.md) for streaming."},{"content":"However, <ph id=\"ph1\">`&lt;strstream&gt;`</ph> is deprecated and the use of <ph id=\"ph2\">`&lt;sstream&gt;`</ph> is encouraged.","pos":[2976,3054],"source":" However, `<strstream>` is deprecated and the use of `<sstream>` is encouraged."},{"content":"Typedefs","pos":[3064,3072]},{"content":"istringstream","pos":[3094,3107]},{"pos":[3164,3244],"content":"Creates a type <ph id=\"ph1\">`basic_istringstream`</ph> specialized on a <ph id=\"ph2\">`char`</ph> template parameter.","source":"Creates a type `basic_istringstream` specialized on a `char` template parameter."},{"content":"ostringstream","pos":[3250,3263]},{"pos":[3320,3400],"content":"Creates a type <ph id=\"ph1\">`basic_ostringstream`</ph> specialized on a <ph id=\"ph2\">`char`</ph> template parameter.","source":"Creates a type `basic_ostringstream` specialized on a `char` template parameter."},{"content":"stringbuf","pos":[3406,3415]},{"pos":[3468,3544],"content":"Creates a type <ph id=\"ph1\">`basic_stringbuf`</ph> specialized on a <ph id=\"ph2\">`char`</ph> template parameter.","source":"Creates a type `basic_stringbuf` specialized on a `char` template parameter."},{"content":"stringstream","pos":[3550,3562]},{"pos":[3618,3697],"content":"Creates a type <ph id=\"ph1\">`basic_stringstream`</ph> specialized on a <ph id=\"ph2\">`char`</ph> template parameter.","source":"Creates a type `basic_stringstream` specialized on a `char` template parameter."},{"content":"wistringstream","pos":[3703,3717]},{"pos":[3775,3858],"content":"Creates a type <ph id=\"ph1\">`basic_istringstream`</ph> specialized on a <ph id=\"ph2\">`wchar_t`</ph> template parameter.","source":"Creates a type `basic_istringstream` specialized on a `wchar_t` template parameter."},{"content":"wostringstream","pos":[3864,3878]},{"pos":[3936,4019],"content":"Creates a type <ph id=\"ph1\">`basic_ostringstream`</ph> specialized on a <ph id=\"ph2\">`wchar_t`</ph> template parameter.","source":"Creates a type `basic_ostringstream` specialized on a `wchar_t` template parameter."},{"content":"wstringbuf","pos":[4025,4035]},{"pos":[4089,4168],"content":"Creates a type <ph id=\"ph1\">`basic_stringbuf`</ph> specialized on a <ph id=\"ph2\">`wchar_t`</ph> template parameter.","source":"Creates a type `basic_stringbuf` specialized on a `wchar_t` template parameter."},{"content":"wstringstream","pos":[4174,4187]},{"pos":[4244,4326],"content":"Creates a type <ph id=\"ph1\">`basic_stringstream`</ph> specialized on a <ph id=\"ph2\">`wchar_t`</ph> template parameter.","source":"Creates a type `basic_stringstream` specialized on a `wchar_t` template parameter."},{"content":"Manipulators","pos":[4337,4349]},{"content":"swap","pos":[4371,4375]},{"pos":[4432,4483],"content":"Exchanges the values between two <ph id=\"ph1\">`sstream`</ph> objects.","source":"Exchanges the values between two `sstream` objects."},{"content":"Classes","pos":[4494,4501]},{"content":"basic_stringbuf","pos":[4523,4538]},{"pos":[4586,4793],"content":"Describes a stream buffer that controls the transmission of elements of type <bpt id=\"p1\">**</bpt>Elem<ept id=\"p1\">**</ept>, whose character traits are determined by the class <bpt id=\"p2\">**</bpt>Tr<ept id=\"p2\">**</ept>, to and from a sequence of elements stored in an array object.","source":"Describes a stream buffer that controls the transmission of elements of type **Elem**, whose character traits are determined by the class **Tr**, to and from a sequence of elements stored in an array object."},{"content":"basic_istringstream","pos":[4799,4818]},{"pos":[4870,5226],"content":"Describes an object that controls extraction of elements and encoded objects from a stream buffer of class <bpt id=\"p1\">[</bpt>basic_stringbuf<ept id=\"p1\">](../standard-library/basic-stringbuf-class.md)</ept><ph id=\"ph1\">&lt;</ph><bpt id=\"p2\">**</bpt>Elem<ept id=\"p2\">**</ept>, <bpt id=\"p3\">**</bpt>Tr<ept id=\"p3\">**</ept>, <ph id=\"ph2\">`Alloc`</ph>&gt;, with elements of type <bpt id=\"p4\">**</bpt>Elem<ept id=\"p4\">**</ept>, whose character traits are determined by the class <bpt id=\"p5\">**</bpt>Tr<ept id=\"p5\">**</ept>, and whose elements are allocated by an allocator of class <ph id=\"ph3\">`Alloc`</ph>.","source":"Describes an object that controls extraction of elements and encoded objects from a stream buffer of class [basic_stringbuf](../standard-library/basic-stringbuf-class.md)<**Elem**, **Tr**, `Alloc`>, with elements of type **Elem**, whose character traits are determined by the class **Tr**, and whose elements are allocated by an allocator of class `Alloc`."},{"content":"basic_ostringstream","pos":[5232,5251]},{"pos":[5303,5658],"content":"Describes an object that controls insertion of elements and encoded objects into a stream buffer of class <bpt id=\"p1\">[</bpt>basic_stringbuf<ept id=\"p1\">](../standard-library/basic-stringbuf-class.md)</ept><ph id=\"ph1\">&lt;</ph><bpt id=\"p2\">**</bpt>Elem<ept id=\"p2\">**</ept>, <bpt id=\"p3\">**</bpt>Tr<ept id=\"p3\">**</ept>, <ph id=\"ph2\">`Alloc`</ph>&gt;, with elements of type <bpt id=\"p4\">**</bpt>Elem<ept id=\"p4\">**</ept>, whose character traits are determined by the class <bpt id=\"p5\">**</bpt>Tr<ept id=\"p5\">**</ept>, and whose elements are allocated by an allocator of class <ph id=\"ph3\">`Alloc`</ph>.","source":"Describes an object that controls insertion of elements and encoded objects into a stream buffer of class [basic_stringbuf](../standard-library/basic-stringbuf-class.md)<**Elem**, **Tr**, `Alloc`>, with elements of type **Elem**, whose character traits are determined by the class **Tr**, and whose elements are allocated by an allocator of class `Alloc`."},{"content":"basic_stringstream","pos":[5664,5682]},{"pos":[5733,6104],"content":"Describes an object that controls insertion and extraction of elements and encoded objects using a stream buffer of class <bpt id=\"p1\">[</bpt>basic_stringbuf<ept id=\"p1\">](../standard-library/basic-stringbuf-class.md)</ept><ph id=\"ph1\">&lt;</ph><bpt id=\"p2\">**</bpt>Elem<ept id=\"p2\">**</ept>, <bpt id=\"p3\">**</bpt>Tr<ept id=\"p3\">**</ept>, <ph id=\"ph2\">`Alloc`</ph>&gt;, with elements of type <bpt id=\"p4\">**</bpt>Elem<ept id=\"p4\">**</ept>, whose character traits are determined by the class <bpt id=\"p5\">**</bpt>Tr<ept id=\"p5\">**</ept>, and whose elements are allocated by an allocator of class <ph id=\"ph3\">`Alloc`</ph>.","source":"Describes an object that controls insertion and extraction of elements and encoded objects using a stream buffer of class [basic_stringbuf](../standard-library/basic-stringbuf-class.md)<**Elem**, **Tr**, `Alloc`>, with elements of type **Elem**, whose character traits are determined by the class **Tr**, and whose elements are allocated by an allocator of class `Alloc`."},{"content":"Requirements","pos":[6114,6126]},{"pos":[6134,6156],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> <ph id=\"ph1\">\\&lt;</ph>sstream&gt;","source":"**Header:** \\<sstream>"},{"pos":[6164,6182],"content":"<bpt id=\"p1\">**</bpt>Namespace:<ept id=\"p1\">**</ept> std","source":"**Namespace:** std"},{"content":"See Also","pos":[6191,6199]},{"content":"Header Files Reference","pos":[6204,6226]},{"content":"Thread Safety in the C++ Standard Library","pos":[6291,6332]},{"content":"iostream Programming","pos":[6405,6425]},{"content":"iostreams Conventions","pos":[6477,6498]}],"content":"---\ntitle: \"&lt;sstream&gt; | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"std.<sstream>\"\n  - \"std::<sstream>\"\n  - \"<sstream>\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"sstream header\"\nms.assetid: 56f55bc5-549d-4e7f-aaad-99e0ffa49c9e\ncaps.latest.revision: 20\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# &lt;sstream&gt;\nDefines several template classes that support iostreams operations on sequences stored in an allocated array object. Such sequences are easily converted to and from objects of template class [basic_string](../standard-library/basic-string-class.md).  \n  \n## Syntax  \n  \n```\nnamespace std {\ntemplate <class CharType, class Traits = char_traits<CharType>, class Allocator = allocator<CharType>>\nclass basic_stringbuf;\ntypedef basic_stringbuf<char>  \nstringbuf;\ntypedef basic_stringbuf<wchar_t> wstringbuf;\n\ntemplate <class CharType, class Traits = char_traits<CharType>, class Allocator = allocator<CharType>>\nclass basic_istringstream;\ntypedef basic_istringstream<char>  \nistringstream;\ntypedef basic_istringstream<wchar_t> wistringstream;\n\ntemplate <class CharType, class Traits = char_traits<CharType>, class Allocator = allocator<CharType>>\nclass basic_ostringstream;\ntypedef basic_ostringstream<char>  \nostringstream;\ntypedef basic_ostringstream<wchar_t> wostringstream;\n\ntemplate <class CharType, class Traits = char_traits<CharType>, class Allocator = allocator<CharType>>\nclass basic_stringstream;\ntypedef basic_stringstream<char>  \nstringstream;\ntypedef basic_stringstream<wchar_t> wstringstream;\n// TEMPLATE FUNCTIONS\ntemplate <class CharType, class Traits, class Allocator>\nvoid swap(\n    basic_stringbuf<CharType, Traits, Allocator>& left,\n    basic_stringbuf<CharType, Traits, Allocator>& right);\n\ntemplate <class CharType, class Traits, class Allocator>\nvoid swap(\n    basic_istringstream<CharType, Traits, Allocator>& left,\n    basic_istringstream<CharType, Traits, Allocator>& right);\n\ntemplate <class CharType, class Traits, class Allocator>\nvoid swap(\n    basic_ostringstream<CharType, Traits, Allocator>& left,\n    basic_ostringstream<CharType, Traits, Allocator>& right);\n\ntemplate <class CharType, class Traits, class Allocator>\nvoid swap (\n    basic_stringstream<CharType, Traits, Allocator>& left,\n    basic_stringstream<CharType, Traits, Allocator>& right);\n\n}  // namespace std\n```  \n  \n#### Parameters  \n  \n|Parameter|Description|  \n|---------------|-----------------|  \n|`left`|Reference to an `sstream` object.|  \n|`right`|Reference to an `sstream` object.|  \n  \n## Remarks  \n Objects of type `char *` can use the functionality in [\\<strstream>](../standard-library/strstream.md) for streaming. However, `<strstream>` is deprecated and the use of `<sstream>` is encouraged.  \n  \n### Typedefs  \n  \n|||  \n|-|-|  \n|[istringstream](../standard-library/sstream-typedefs.md#istringstream)|Creates a type `basic_istringstream` specialized on a `char` template parameter.|  \n|[ostringstream](../standard-library/sstream-typedefs.md#ostringstream)|Creates a type `basic_ostringstream` specialized on a `char` template parameter.|  \n|[stringbuf](../standard-library/sstream-typedefs.md#stringbuf)|Creates a type `basic_stringbuf` specialized on a `char` template parameter.|  \n|[stringstream](../standard-library/sstream-typedefs.md#stringstream)|Creates a type `basic_stringstream` specialized on a `char` template parameter.|  \n|[wistringstream](../standard-library/sstream-typedefs.md#wistringstream)|Creates a type `basic_istringstream` specialized on a `wchar_t` template parameter.|  \n|[wostringstream](../standard-library/sstream-typedefs.md#wostringstream)|Creates a type `basic_ostringstream` specialized on a `wchar_t` template parameter.|  \n|[wstringbuf](../standard-library/sstream-typedefs.md#wstringbuf)|Creates a type `basic_stringbuf` specialized on a `wchar_t` template parameter.|  \n|[wstringstream](../standard-library/sstream-typedefs.md#wstringstream)|Creates a type `basic_stringstream` specialized on a `wchar_t` template parameter.|  \n  \n### Manipulators  \n  \n|||  \n|-|-|  \n|[swap](../standard-library/sstream-functions.md#sstream_swap)|Exchanges the values between two `sstream` objects.|  \n  \n### Classes  \n  \n|||  \n|-|-|  \n|[basic_stringbuf](../standard-library/basic-stringbuf-class.md)|Describes a stream buffer that controls the transmission of elements of type **Elem**, whose character traits are determined by the class **Tr**, to and from a sequence of elements stored in an array object.|  \n|[basic_istringstream](../standard-library/basic-istringstream-class.md)|Describes an object that controls extraction of elements and encoded objects from a stream buffer of class [basic_stringbuf](../standard-library/basic-stringbuf-class.md)<**Elem**, **Tr**, `Alloc`>, with elements of type **Elem**, whose character traits are determined by the class **Tr**, and whose elements are allocated by an allocator of class `Alloc`.|  \n|[basic_ostringstream](../standard-library/basic-ostringstream-class.md)|Describes an object that controls insertion of elements and encoded objects into a stream buffer of class [basic_stringbuf](../standard-library/basic-stringbuf-class.md)<**Elem**, **Tr**, `Alloc`>, with elements of type **Elem**, whose character traits are determined by the class **Tr**, and whose elements are allocated by an allocator of class `Alloc`.|  \n|[basic_stringstream](../standard-library/basic-stringstream-class.md)|Describes an object that controls insertion and extraction of elements and encoded objects using a stream buffer of class [basic_stringbuf](../standard-library/basic-stringbuf-class.md)<**Elem**, **Tr**, `Alloc`>, with elements of type **Elem**, whose character traits are determined by the class **Tr**, and whose elements are allocated by an allocator of class `Alloc`.|  \n  \n## Requirements  \n  \n- **Header:** \\<sstream>  \n  \n- **Namespace:** std  \n  \n## See Also  \n [Header Files Reference](../standard-library/cpp-standard-library-header-files.md)   \n [Thread Safety in the C++ Standard Library](../standard-library/thread-safety-in-the-cpp-standard-library.md)   \n [iostream Programming](../standard-library/iostream-programming.md)   \n [iostreams Conventions](../standard-library/iostreams-conventions.md)\n\n\n\n"}