{"nodes":[{"pos":[12,36],"content":"section | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"section | Microsoft Docs","pos":[0,24]}]},{"content":"section","pos":[672,679]},{"content":"Creates a section in an .obj file.","pos":[680,714]},{"content":"Syntax","pos":[723,729]},{"content":"Remarks","pos":[807,814]},{"pos":[818,901],"content":"The meaning of the terms <bpt id=\"p1\">*</bpt>segment<ept id=\"p1\">*</ept> and <bpt id=\"p2\">*</bpt>section<ept id=\"p2\">*</ept> are interchangeable in this topic.","source":"The meaning of the terms *segment* and *section* are interchangeable in this topic."},{"content":"Once a section is defined, it remains valid for the remainder of the compilation.","pos":[908,989]},{"content":"However, you must use <bpt id=\"p1\">[</bpt>__declspec(allocate)<ept id=\"p1\">](../cpp/allocate.md)</ept> or nothing will be placed in the section.","pos":[990,1096],"source":" However, you must use [__declspec(allocate)](../cpp/allocate.md) or nothing will be placed in the section."},{"content":"<bpt id=\"p1\">*</bpt>section-name<ept id=\"p1\">*</ept> is a required parameter that will be the name of the section.","pos":[1103,1179],"source":"*section-name* is a required parameter that will be the name of the section."},{"content":"The name must not conflict with any standard section names.","pos":[1180,1239]},{"content":"See <bpt id=\"p1\">[</bpt>/SECTION<ept id=\"p1\">](../build/reference/section-specify-section-attributes.md)</ept> for a list of names you should not use when creating a section.","pos":[1240,1376],"source":" See [/SECTION](../build/reference/section-specify-section-attributes.md) for a list of names you should not use when creating a section."},{"content":"is an optional parameter consisting of one or more comma-separated attributes that you want to assign to the section.","pos":[1396,1513]},{"content":"Possible <ph id=\"ph1\">`attributes`</ph> are:","pos":[1514,1540],"source":" Possible `attributes` are:"},{"content":"read","pos":[1549,1553]},{"content":"Allows read operations on data.","pos":[1559,1590]},{"content":"write","pos":[1599,1604]},{"content":"Allows write operations on data.","pos":[1610,1642]},{"content":"execute","pos":[1651,1658]},{"content":"Allows code to be executed.","pos":[1664,1691]},{"content":"shared","pos":[1700,1706]},{"content":"Shares the section among all processes that load the image.","pos":[1712,1771]},{"content":"nopage","pos":[1780,1786]},{"content":"Marks the section as not pageable; useful for Win32 device drivers.","pos":[1792,1859]},{"content":"nocache","pos":[1868,1875]},{"content":"Marks the section as not cacheable; useful for Win32 device drivers.","pos":[1881,1949]},{"content":"discard","pos":[1958,1965]},{"content":"Marks the section as discardable; useful for Win32 device drivers.","pos":[1971,2037]},{"content":"remove","pos":[2046,2052]},{"content":"Marks the section as not memory-resident; virtual device drivers (V<bpt id=\"p1\">*</bpt>x<ept id=\"p1\">*</ept>D) only.","pos":[2058,2136],"source":" Marks the section as not memory-resident; virtual device drivers (V*x*D) only."},{"content":"If you do not specify attributes, the section will have read and write attributes.","pos":[2143,2225]},{"content":"Example","pos":[2234,2241]},{"content":"In the following example, the first instruction identifies the section and its attributes.","pos":[2245,2335]},{"content":"The integer <ph id=\"ph1\">`j`</ph> is not put into <ph id=\"ph2\">`mysec`</ph> because it was not declared with <ph id=\"ph3\">`__declspec(allocate)`</ph>; <ph id=\"ph4\">`j`</ph> goes into the data section.","pos":[2336,2464],"source":" The integer `j` is not put into `mysec` because it was not declared with `__declspec(allocate)`; `j` goes into the data section."},{"content":"The integer <ph id=\"ph1\">`i`</ph> does go into <ph id=\"ph2\">`mysec`</ph> as a result of its <ph id=\"ph3\">`__declspec(allocate)`</ph> storage-class attribute.","pos":[2465,2568],"source":" The integer `i` does go into `mysec` as a result of its `__declspec(allocate)` storage-class attribute."},{"content":"See Also","pos":[2733,2741]},{"content":"Pragma Directives and the __Pragma Keyword","pos":[2746,2788]}],"content":"---\ntitle: \"section | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"section_CPP\"\n  - \"vc-pragma.section\"\ndev_langs: \n  - \"C++\"\n  - \"C\"\nhelpviewer_keywords: \n  - \"pragmas, section\"\n  - \"section pragma\"\nms.assetid: c67215e9-2c4a-4b0f-b691-2414d2e2d96f\ncaps.latest.revision: 8\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"ru-ru\"\n  - \"zh-cn\"\n  - \"zh-tw\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"tr-tr\"\n---\n# section\nCreates a section in an .obj file.  \n  \n## Syntax  \n  \n```  \n  \n#pragma section( \"section-name\" [, attributes] )  \n```  \n  \n## Remarks  \n The meaning of the terms *segment* and *section* are interchangeable in this topic.  \n  \n Once a section is defined, it remains valid for the remainder of the compilation. However, you must use [__declspec(allocate)](../cpp/allocate.md) or nothing will be placed in the section.  \n  \n *section-name* is a required parameter that will be the name of the section. The name must not conflict with any standard section names. See [/SECTION](../build/reference/section-specify-section-attributes.md) for a list of names you should not use when creating a section.  \n  \n `attributes` is an optional parameter consisting of one or more comma-separated attributes that you want to assign to the section. Possible `attributes` are:  \n  \n **read**  \n Allows read operations on data.  \n  \n **write**  \n Allows write operations on data.  \n  \n **execute**  \n Allows code to be executed.  \n  \n **shared**  \n Shares the section among all processes that load the image.  \n  \n **nopage**  \n Marks the section as not pageable; useful for Win32 device drivers.  \n  \n **nocache**  \n Marks the section as not cacheable; useful for Win32 device drivers.  \n  \n **discard**  \n Marks the section as discardable; useful for Win32 device drivers.  \n  \n **remove**  \n Marks the section as not memory-resident; virtual device drivers (V*x*D) only.  \n  \n If you do not specify attributes, the section will have read and write attributes.  \n  \n## Example  \n In the following example, the first instruction identifies the section and its attributes. The integer `j` is not put into `mysec` because it was not declared with `__declspec(allocate)`; `j` goes into the data section. The integer `i` does go into `mysec` as a result of its `__declspec(allocate)` storage-class attribute.  \n  \n```  \n// pragma_section.cpp  \n#pragma section(\"mysec\",read,write)  \nint j = 0;  \n  \n__declspec(allocate(\"mysec\"))  \nint i = 0;  \n  \nint main(){}  \n```  \n  \n## See Also  \n [Pragma Directives and the __Pragma Keyword](../preprocessor/pragma-directives-and-the-pragma-keyword.md)"}