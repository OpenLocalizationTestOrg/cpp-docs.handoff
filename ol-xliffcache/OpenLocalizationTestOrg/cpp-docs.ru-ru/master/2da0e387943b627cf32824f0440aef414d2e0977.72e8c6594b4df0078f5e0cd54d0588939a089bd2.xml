{"nodes":[{"pos":[12,50],"content":"equal_range (STL-CLR) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"equal_range (STL-CLR) | Microsoft Docs","pos":[0,38]}]},{"content":"equal_range (STL/CLR)","pos":[631,652]},{"content":"Finds a pair of positions in an ordered range, the first less than or equivalent to the position of a specified element and the second greater than the element's position, where the sense of equivalence or ordering used to establish the positions in the sequence may be specified by a binary predicate.","pos":[653,955]},{"content":"Syntax","pos":[964,970]},{"content":"Remarks","pos":[1290,1297]},{"content":"This function behaves the same as the STL function <ph id=\"ph1\">`equal_range`</ph>.","pos":[1301,1366],"source":"This function behaves the same as the STL function `equal_range`."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>equal_range<ept id=\"p1\">](http://msdn.microsoft.com/Library/f508fa87-41c6-4799-90dc-4ebf17d2126a)</ept>.","pos":[1367,1479],"source":" For more information, see [equal_range](http://msdn.microsoft.com/Library/f508fa87-41c6-4799-90dc-4ebf17d2126a)."},{"content":"Requirements","pos":[1488,1500]},{"pos":[1504,1535],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> <ph id=\"ph1\">\\&lt;</ph>cliext/algorithm&gt;","source":"**Header:** \\<cliext/algorithm>"},{"pos":[1542,1563],"content":"<bpt id=\"p1\">**</bpt>Namespace:<ept id=\"p1\">**</ept> cliext","source":"**Namespace:** cliext"},{"content":"See Also","pos":[1572,1580]},{"content":"algorithm (STL/CLR)","pos":[1585,1604]}],"content":"---\ntitle: \"equal_range (STL-CLR) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"cliext::equal_range\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"equal_range function [STL/CLR]\"\nms.assetid: 1b2e76c3-6b52-486d-9785-2639b54277fd\ncaps.latest.revision: 4\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# equal_range (STL/CLR)\nFinds a pair of positions in an ordered range, the first less than or equivalent to the position of a specified element and the second greater than the element's position, where the sense of equivalence or ordering used to establish the positions in the sequence may be specified by a binary predicate.  \n  \n## Syntax  \n  \n```  \ntemplate<class _FwdIt, class _Ty> inline  \n    _PAIR_TYPE(_FwdIt) equal_range(_FwdIt _First, _FwdIt _Last,  \n        const _Ty% _Val);  \ntemplate<class _FwdIt, class _Ty, class _Pr> inline  \n    _PAIR_TYPE(_FwdIt) equal_range(_FwdIt _First, _FwdIt _Last,  \n        const _Ty% _Val, _Pr _Pred);  \n```  \n  \n## Remarks  \n This function behaves the same as the STL function `equal_range`. For more information, see [equal_range](http://msdn.microsoft.com/Library/f508fa87-41c6-4799-90dc-4ebf17d2126a).  \n  \n## Requirements  \n **Header:** \\<cliext/algorithm>  \n  \n **Namespace:** cliext  \n  \n## See Also  \n [algorithm (STL/CLR)](../dotnet/algorithm-stl-clr.md)"}