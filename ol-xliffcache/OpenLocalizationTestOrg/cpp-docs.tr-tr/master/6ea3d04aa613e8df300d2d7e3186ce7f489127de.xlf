<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="tr-tr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-04506c2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6ea3d04aa613e8df300d2d7e3186ce7f489127de</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\mfc\reference\ccomboboxex-class.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d89df7693828bbf86dae83306b5c650f77a9528d</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0328c1d1da93a319d9913a59bad35c8daab9a615</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>CComboBoxEx Class | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>CComboBoxEx Class</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Extends the combo box control by providing support for image lists.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Members</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Public Constructors</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>CComboBoxEx::CComboBoxEx</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Constructs a <ph id="ph1">`CComboBoxEx`</ph> object.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Public Methods</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>CComboBoxEx::Create</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Creates the combo box and attaches it to the <ph id="ph1">`CComboBoxEx`</ph> object.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>CComboBoxEx::CreateEx</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Creates a combo box with the specified Windows extended styles and attaches it to a <bpt id="p1">**</bpt>ComboBoxEx<ept id="p1">**</ept> object.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>CComboBoxEx::DeleteItem</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Removes an item from a <bpt id="p1">**</bpt>ComboBoxEx<ept id="p1">**</ept> control.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>CComboBoxEx::GetComboBoxCtrl</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Retrieves a pointer to the child combo box control.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>CComboBoxEx::GetEditCtrl</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Retrieves the handle to the edit control portion of a <bpt id="p1">**</bpt>ComboBoxEx<ept id="p1">**</ept> control.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>CComboBoxEx::GetExtendedStyle</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Retrieves the extended styles that are in use for a <bpt id="p1">**</bpt>ComboBoxEx<ept id="p1">**</ept> control.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>CComboBoxEx::GetImageList</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Retrieves a pointer to the image list assigned to a <bpt id="p1">**</bpt>ComboBoxEx<ept id="p1">**</ept> control.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>CComboBoxEx::GetItem</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Retrieves item information for a given <bpt id="p1">**</bpt>ComboBoxEx<ept id="p1">**</ept> item.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>CComboBoxEx::HasEditChanged</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Determines if the user has changed the contents of the <bpt id="p1">**</bpt>ComboBoxEx<ept id="p1">**</ept> edit control by typing.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>CComboBoxEx::InsertItem</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Inserts a new item in a <bpt id="p1">**</bpt>ComboBoxEx<ept id="p1">**</ept> control.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>CComboBoxEx::SetExtendedStyle</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Sets extended styles within a <bpt id="p1">**</bpt>ComboBoxEx<ept id="p1">**</ept> control.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>CComboBoxEx::SetImageList</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Sets an image list for a <bpt id="p1">**</bpt>ComboBoxEx<ept id="p1">**</ept> control.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>CComboBoxEx::SetItem</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Sets the attributes for an item in a <bpt id="p1">**</bpt>ComboBoxEx<ept id="p1">**</ept> control.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>CComboBoxEx::SetWindowTheme</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Sets the visual style of the extended combo box control.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>By using <ph id="ph1">`CComboBoxEx`</ph> to create combo box controls, you no longer need to implement your own image drawing code.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Instead, use <ph id="ph1">`CComboBoxEx`</ph> to access images from an image list.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Image List Support</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>In a standard combo box, the owner of the combo box is responsible for drawing an image by creating the combo box as an owner-draw control.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>When you use <ph id="ph1">`CComboBoxEx`</ph>, you do not need to set the drawing styles <bpt id="p1">**</bpt>CBS_OWNERDRAWFIXED<ept id="p1">**</ept> and <bpt id="p2">**</bpt>CBS_HASSTRINGS<ept id="p2">**</ept> because they are implied.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Otherwise, you must write code to perform drawing operations.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">`CComboBoxEx`</ph> control supports up to three images per item: one for a selected state, one for an unselected state, and one for an overlay image.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Styles</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>supports the styles <bpt id="p1">**</bpt>CBS_SIMPLE<ept id="p1">**</ept>, <bpt id="p2">**</bpt>CBS_DROPDOWN<ept id="p2">**</ept>, <bpt id="p3">**</bpt>CBS_DROPDOWNLIST<ept id="p3">**</ept>, and <bpt id="p4">**</bpt>WS_CHILD<ept id="p4">**</ept>.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>All other styles passed when you create the window are ignored by the control.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>After the window is created, you can provide other combo box styles by calling the <ph id="ph1">`CComboBoxEx`</ph> member function <bpt id="p1">[</bpt>SetExtendedStyle<ept id="p1">](#ccomboboxex__setextendedstyle)</ept>.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>With these styles, you can:</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Set string searches in the list to be case-sensitive.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Create a combo box control that uses the slash ('/'), backslash ('<ph id="ph1">\\</ph>'), and period ('.') characters as word delimiters.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>This allow users to jump from word to word, using the keyboard shortcut CTRL+ ARROW.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Set the combo box control to either display or not display an image.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>If no image is displayed, the combo box can remove the text indent that accommodates an image.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Create a narrow combo box control, including sizing it so it clips the wider combo box it contains.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>These style flags are described further in <bpt id="p1">[</bpt>Using CComboBoxEx<ept id="p1">](../../mfc/using-ccomboboxex.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Item Retention and Callback Item Attributes</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Item information, such as indexes for items and images, indentation values, and text strings, is stored in the Win32 structure <bpt id="p1">[</bpt>COMBOBOXEXITEM<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb775746)</ept>, as described in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The structure also contains members that correspond to callback flags.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>For a detailed, conceptual discussion, see <bpt id="p1">[</bpt>Using CComboBoxEx<ept id="p1">](../../mfc/using-ccomboboxex.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Inheritance Hierarchy</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>CObject</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>CCmdTarget</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>CWnd</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>CComboBox</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Requirements</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Header:<ept id="p1">**</ept> afxcmn.h</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>CComboBoxEx::CComboBoxEx</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Call this member function to create a <ph id="ph1">`CComboBoxEx`</ph> object.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>CComboBoxEx::Create</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Creates the combo box and attaches it to the <ph id="ph1">`CComboBoxEx`</ph> object.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Specifies the combination of combo box styles applied to the combo box.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">**</bpt>Remarks<ept id="p1">**</ept> below for more information about styles.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>A reference to a <bpt id="p1">[</bpt>CRect<ept id="p1">](../../atl-mfc-shared/reference/crect-class.md)</ept> object or <bpt id="p2">[</bpt>RECT<ept id="p2">](http://msdn.microsoft.com/library/windows/desktop/dd162897)</ept> structure, which is the position and size of the combo box.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>A pointer to a <bpt id="p1">[</bpt>CWnd<ept id="p1">](../../mfc/reference/cwnd-class.md)</ept> object that is the parent window of the combo box (usually a <ph id="ph1">`CDialog`</ph>).</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>It must not be <bpt id="p1">**</bpt>NULL<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Specifies the combo box's control ID.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Nonzero if the object was created successfully; otherwise 0.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Create a <ph id="ph1">`CComboBoxEx`</ph> object in two steps:</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Call <bpt id="p1">[</bpt>CComboBoxEx<ept id="p1">](#ccomboboxex__ccomboboxex)</ept> to construct a <ph id="ph1">`CComboBoxEx`</ph> object.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Call this member function, which creates the extended Windows combo box and attaches it to the <ph id="ph1">`CComboBoxEx`</ph> object.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>When you call <bpt id="p1">**</bpt>Create<ept id="p1">**</ept>, MFC initializes the common controls.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>When you create the combo box, you can specify any or all of the following combo-box styles:</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>CBS_SIMPLE</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>CBS_DROPDOWN</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>CBS_DROPDOWNLIST</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>CBS_AUTOHSCROLL</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>WS_CHILD</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>All other styles passed when you create the window are ignored.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>ComboBoxEx<ept id="p1">**</ept> control also supports extended styles that provide additional features.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>These styles are described in <bpt id="p1">[</bpt>ComboBoxEx control extended styles<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb775742)</ept>, in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Set these styles by calling <bpt id="p1">[</bpt>SetExtendedStyle<ept id="p1">](#ccomboboxex__setextendedstyle)</ept>.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>If you want to use extended windows styles with your control, call <bpt id="p1">[</bpt>CreateEx<ept id="p1">](#ccomboboxex__createex)</ept> instead of <bpt id="p2">**</bpt>Create<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>CComboBoxEx::CreateEx</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Call this function to create an extended combo box control (a child window) and associate it with the <ph id="ph1">`CComboBoxEx`</ph> object.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Specifies the extended style of the control being created.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>For a list of extended Windows styles, see the <ph id="ph1">`dwExStyle`</ph> parameter for <bpt id="p1">[</bpt>CreateWindowEx<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms632680)</ept> in the <ph id="ph2">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>The combo box control's style.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Create<ept id="p1">](#ccomboboxex__create)</ept> for a list of styles.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>A reference to a <bpt id="p1">[</bpt>RECT<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/dd162897)</ept> structure describing the size and position of the window to be created, in client coordinates of <ph id="ph1">`pParentWnd`</ph>.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>A pointer to the window that is the control's parent.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>The control's child-window ID.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>Nonzero if successful; otherwise 0.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Use <ph id="ph1">`CreateEx`</ph> instead of <bpt id="p1">**</bpt>Create<ept id="p1">**</ept> to apply extended Windows styles, specified by the Windows extended style preface <bpt id="p2">**</bpt>WS_EX_<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>creates the control with the extended Windows styles specified by <ph id="ph1">`dwExStyle`</ph>.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>You must set extended styles specific to an extended combo box control using <bpt id="p1">[</bpt>SetExtendedStyle<ept id="p1">](#ccomboboxex__setextendedstyle)</ept>.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>For example, use <ph id="ph1">`CreateEx`</ph> to set such styles as <bpt id="p1">**</bpt>WS_EX_CONTEXTHELP<ept id="p1">**</ept>, but use <ph id="ph2">`SetExtendedStyle`</ph> to set such styles as <bpt id="p2">**</bpt>CBES_EX_CASESENSITIVE<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>For more information, see the styles described in the topic <bpt id="p1">[</bpt>ComboBoxEx Control Extended Styles<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb775742)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>CComboBoxEx::DeleteItem</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>Removes an item from a <bpt id="p1">**</bpt>ComboBoxEx<ept id="p1">**</ept> control.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Zero-based index of the item to be removed.</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>The number of items remaining in the control.</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`iIndex`</ph> is invalid, the function returns <bpt id="p1">**</bpt>CB_ERR<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>This member function implements the functionality of the message <bpt id="p1">[</bpt>CBEM_DELETEITEM<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb775768)</ept>, as described in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>When you call DeleteItem, a <bpt id="p1">[</bpt>WM_NOTIFY<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb775583)</ept> message with <bpt id="p2">**</bpt>CBEN_DELETEITEM<ept id="p2">**</ept> notification will be sent to the parent window.</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>CComboBoxEx::GetComboBoxCtrl</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>Call this member function to get a pointer to a combo box control within a <ph id="ph1">`CComboBoxEx`</ph> object.</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>A pointer to a <ph id="ph1">`CComboBox`</ph> object.</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`CComboBoxEx`</ph> control consists of a parent window, which encapsulates a <ph id="ph2">`CComboBox`</ph>.</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`CComboBox`</ph> object pointed to by the return value is a temporary object and is destroyed during the next idle processing time.</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>CComboBoxEx::GetEditCtrl</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>Call this member function to get a pointer to the edit control for a combo box.</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>A pointer to a <bpt id="p1">[</bpt>CEdit<ept id="p1">](../../mfc/reference/cedit-class.md)</ept> object.</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">`CComboBoxEx`</ph> control uses an edit box when it is created with the <bpt id="p1">**</bpt>CBS_DROPDOWN<ept id="p1">**</ept> style.</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`CEdit`</ph> object pointed to by the return value is a temporary object and is destroyed during the next idle processing time.</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>CComboBoxEx::GetExtendedStyle</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>Call this member function to get the extended styles used for a <ph id="ph1">`CComboBoxEx`</ph> control.</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`DWORD`</ph> value that contains the extended styles that are used for the combo box control.</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>ComboBoxEx Control Extended Styles<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb775742)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph> for more information about these styles.</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>CComboBoxEx::GetImageList</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>Call this member function to get a pointer to the image list used by a <ph id="ph1">`CComboBoxEx`</ph> control.</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>A pointer to a <bpt id="p1">[</bpt>CImageList<ept id="p1">](../../mfc/reference/cimagelist-class.md)</ept> object.</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>If it fails, this member function returns <bpt id="p1">**</bpt>NULL<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`CImageList`</ph> object pointed to by the return value is a temporary object and is destroyed during the next idle processing time.</source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>CComboBoxEx::GetItem</source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>Retrieves item information for a given <bpt id="p1">**</bpt>ComboBoxEx<ept id="p1">**</ept> item.</source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>A pointer to a <bpt id="p1">[</bpt>COMBOBOXEXITEM<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb775746)</ept> structure that will receive the item information.</source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>Nonzero if the operation was successful; otherwise 0.</source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>This member function implements the functionality of the message <bpt id="p1">[</bpt>CBEM_GETITEM<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb775779)</ept>, as described in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>CComboBoxEx::HasEditChanged</source>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>Determines if the user has changed the contents of the <bpt id="p1">**</bpt>ComboBoxEx<ept id="p1">**</ept> edit control by typing.</source>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>Nonzero if the user has typed in the control's edit box; otherwise 0.</source>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>This member function implements the functionality of the message <bpt id="p1">[</bpt>CBEM_HASEDITCHANGED<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb775782)</ept>, as described in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>CComboBoxEx::InsertItem</source>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>Inserts a new item in a <bpt id="p1">**</bpt>ComboBoxEx<ept id="p1">**</ept> control.</source>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>A pointer to a <bpt id="p1">[</bpt>COMBOBOXEXITEM<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb775746)</ept> structure that will receive the item information.</source>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>This structure contains callback flag values for the item.</source>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>The index at which the new item was inserted if successful; otherwise -1.</source>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>When you call <ph id="ph1">`InsertItem`</ph>, a <bpt id="p1">[</bpt>WM_NOTIFY<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb775583)</ept> message with <bpt id="p2">[</bpt>CBEN_INSERTITEM<ept id="p2">](http://msdn.microsoft.com/library/windows/desktop/bb775764)</ept> notification will be sent to the parent window.</source>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>CComboBoxEx::SetExtendedStyle</source>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>Call this member function to set the extended styles used for a combo box extended control.</source>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">`DWORD`</ph> value that indicates which styles in <ph id="ph2">`dwExStyles`</ph> are to be affected.</source>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>Only the extended styles in <ph id="ph1">`dwExMask`</ph> will be changed.</source>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>All other styles will be maintained as is.</source>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>If this parameter is zero, then all of the styles in <ph id="ph1">`dwExStyles`</ph> will be affected.</source>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">`DWORD`</ph> value that contains the combo box control extended styles to set for the control.</source>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">`DWORD`</ph> value that contains the extended styles previously used for the control.</source>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>ComboBoxEx Control Extended Styles<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb775742)</ept> in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph> for more information about these styles.</source>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>To create a combo box extended control with extended windows styles, use <bpt id="p1">[</bpt>CreateEx<ept id="p1">](#ccomboboxex__createex)</ept>.</source>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>CComboBoxEx::SetImageList</source>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>Sets an image list for a <bpt id="p1">**</bpt>ComboBoxEx<ept id="p1">**</ept> control.</source>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>A pointer to a <ph id="ph1">`CImageList`</ph> object containing the images to use with the <ph id="ph2">`CComboBoxEx`</ph> control.</source>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>A pointer to a <bpt id="p1">[</bpt>CImageList<ept id="p1">](../../mfc/reference/cimagelist-class.md)</ept> object containing the images previously used by the <ph id="ph1">`CComboBoxEx`</ph> control.</source>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>NULL<ept id="p1">**</ept> if no image list was previously set.</source>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>This member function implements the functionality of the message <bpt id="p1">[</bpt>CBEM_SETIMAGELIST<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb775787)</ept>, as described in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>If you change the height of the default edit control, call the Win32 function <bpt id="p1">[</bpt>SetWindowPos<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms633545)</ept> to resize your control after you call <ph id="ph1">`SetImageList`</ph>, or it will not display properly.</source>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`CImageList`</ph> object pointed to by the return value is a temporary object and is destroyed during the next idle processing time.</source>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>CComboBoxEx::SetItem</source>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>Sets the attributes for an item in a <bpt id="p1">**</bpt>ComboBoxEx<ept id="p1">**</ept> control.</source>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>A pointer to a <bpt id="p1">[</bpt>COMBOBOXEXITEM<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb775746)</ept> structure that will receive the item information.</source>
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>Nonzero if the operation was successful; otherwise 0.</source>
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>This member function implements the functionality of the message <bpt id="p1">[</bpt>CBEM_SETITEM<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb775788)</ept>, as described in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>CComboBoxEx::SetWindowTheme</source>
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>Sets the visual style of the extended combo box control.</source>
        </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>A pointer to a Unicode string that contains the extended combo box visual style to set.</source>
        </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>The return value is not used.</source>
        </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>This member function emulates the functionality of the <bpt id="p1">[</bpt>CBEM_SETWINDOWTHEME<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb775790)</ept> message, as described in the <ph id="ph1">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>MFC Sample MFCIE</source>
        </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>CComboBox Class</source>
        </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>Hierarchy Chart</source>
        </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>CComboBox Class</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>