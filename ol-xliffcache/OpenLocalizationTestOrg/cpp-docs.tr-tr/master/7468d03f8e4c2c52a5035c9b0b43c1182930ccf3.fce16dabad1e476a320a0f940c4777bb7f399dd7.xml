{"nodes":[{"pos":[12,54],"content":"Implementing a Dialog Box | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Implementing a Dialog Box | Microsoft Docs","pos":[0,42]}]},{"content":"Implementing a Dialog Box","pos":[725,750]},{"content":"There are two ways to add a dialog box to your ATL project: use the ATL Dialog Wizard or add it manually.","pos":[751,856]},{"content":"Adding a Dialog Box with the ATL Dialog Wizard","pos":[865,911]},{"content":"In the <bpt id=\"p1\">[</bpt>Add Class dialog box<ept id=\"p1\">](../ide/add-class-dialog-box.md)</ept>, select the ATL Dialog object to add a dialog box to your ATL project.","pos":[915,1047],"source":"In the [Add Class dialog box](../ide/add-class-dialog-box.md), select the ATL Dialog object to add a dialog box to your ATL project."},{"content":"Fill in the ATL Dialog Wizard as appropriate and click <bpt id=\"p1\">**</bpt>Finish<ept id=\"p1\">**</ept>.","pos":[1048,1114],"source":" Fill in the ATL Dialog Wizard as appropriate and click **Finish**."},{"content":"The wizard adds a class derived from <bpt id=\"p1\">[</bpt>CAxDialogImpl<ept id=\"p1\">](../atl/reference/caxdialogimpl-class.md)</ept> to your project.","pos":[1115,1225],"source":" The wizard adds a class derived from [CAxDialogImpl](../atl/reference/caxdialogimpl-class.md) to your project."},{"content":"Open the Resource View from the <bpt id=\"p1\">**</bpt>View<ept id=\"p1\">**</ept> menu, locate your dialog, and double-click it to open it in the resource editor.","pos":[1226,1347],"source":" Open the Resource View from the **View** menu, locate your dialog, and double-click it to open it in the resource editor."},{"pos":[1355,1674],"content":"[!NOTE]\n If your dialog box is derived from `CAxDialogImpl`, it can host both ActiveX and Windows controls. If you don't want the overhead of ActiveX control support in your dialog box class, use [CSimpleDialog](../atl/reference/csimpledialog-class.md) or [CDialogImpl](../atl/reference/cdialogimpl-class.md) instead.","leadings":["","> "],"nodes":[{"content":" If your dialog box is derived from `CAxDialogImpl`, it can host both ActiveX and Windows controls. If you don't want the overhead of ActiveX control support in your dialog box class, use [CSimpleDialog](../atl/reference/csimpledialog-class.md) or [CDialogImpl](../atl/reference/cdialogimpl-class.md) instead.","pos":[8,317],"nodes":[{"content":"If your dialog box is derived from <ph id=\"ph1\">`CAxDialogImpl`</ph>, it can host both ActiveX and Windows controls.","pos":[1,99],"source":" If your dialog box is derived from `CAxDialogImpl`, it can host both ActiveX and Windows controls."},{"content":"If you don't want the overhead of ActiveX control support in your dialog box class, use <bpt id=\"p1\">[</bpt>CSimpleDialog<ept id=\"p1\">](../atl/reference/csimpledialog-class.md)</ept> or <bpt id=\"p2\">[</bpt>CDialogImpl<ept id=\"p2\">](../atl/reference/cdialogimpl-class.md)</ept> instead.","pos":[100,309],"source":" If you don't want the overhead of ActiveX control support in your dialog box class, use [CSimpleDialog](../atl/reference/csimpledialog-class.md) or [CDialogImpl](../atl/reference/cdialogimpl-class.md) instead."}]}]},{"content":"Message and event handlers can be added to your dialog class from Class View.","pos":[1681,1758]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Adding an ATL Message Handler<ept id=\"p1\">](../atl/adding-an-atl-message-handler.md)</ept>.","pos":[1759,1858],"source":" For more information, see [Adding an ATL Message Handler](../atl/adding-an-atl-message-handler.md)."},{"content":"Adding a Dialog Box Manually","pos":[1867,1895]},{"content":"Implementing a dialog box is similar to implementing a window.","pos":[1899,1961]},{"content":"You derive a class from either <bpt id=\"p1\">[</bpt>CAxDialogImpl<ept id=\"p1\">](../atl/reference/caxdialogimpl-class.md)</ept>, <bpt id=\"p2\">[</bpt>CDialogImpl<ept id=\"p2\">](../atl/reference/cdialogimpl-class.md)</ept>, or <bpt id=\"p3\">[</bpt>CSimpleDialog<ept id=\"p3\">](../atl/reference/csimpledialog-class.md)</ept> and declare a <bpt id=\"p4\">[</bpt>message map<ept id=\"p4\">](../atl/message-maps-atl.md)</ept> to handle messages.","pos":[1962,2240],"source":" You derive a class from either [CAxDialogImpl](../atl/reference/caxdialogimpl-class.md), [CDialogImpl](../atl/reference/cdialogimpl-class.md), or [CSimpleDialog](../atl/reference/csimpledialog-class.md) and declare a [message map](../atl/message-maps-atl.md) to handle messages."},{"content":"However, you must also specify a dialog template resource ID in your derived class.","pos":[2241,2324]},{"content":"Your class must have a data member called <ph id=\"ph1\">`IDD`</ph> to hold this value.","pos":[2325,2392],"source":" Your class must have a data member called `IDD` to hold this value."},{"pos":[2400,2534],"content":"[!NOTE]\n When you create a dialog box using the ATL Dialog Wizard, the wizard automatically adds the `IDD` member as an `enum` type.","leadings":["","> "],"nodes":[{"content":"When you create a dialog box using the ATL Dialog Wizard, the wizard automatically adds the <ph id=\"ph1\">`IDD`</ph> member as an <ph id=\"ph2\">`enum`</ph> type.","pos":[9,132],"source":" When you create a dialog box using the ATL Dialog Wizard, the wizard automatically adds the `IDD` member as an `enum` type."}]},{"content":"allows you to implement a modal or a modeless dialog box that hosts Windows controls.","pos":[2555,2640]},{"content":"allows you to implement a modal or a modeless dialog box that hosts both ActiveX and Windows controls.","pos":[2657,2759]},{"content":"To create a modal dialog box, create an instance of your <ph id=\"ph1\">`CDialogImpl`</ph>-derived (or <ph id=\"ph2\">`CAxDialogImpl`</ph>-derived) class and then call the <bpt id=\"p1\">[</bpt>DoModal<ept id=\"p1\">](../atl/reference/cdialogimpl-class.md#cdialogimpl__domodal)</ept> method.","pos":[2766,2975],"source":"To create a modal dialog box, create an instance of your `CDialogImpl`-derived (or `CAxDialogImpl`-derived) class and then call the [DoModal](../atl/reference/cdialogimpl-class.md#cdialogimpl__domodal) method."},{"content":"To close a modal dialog box, call the <bpt id=\"p1\">[</bpt>EndDialog<ept id=\"p1\">](../atl/reference/cdialogimpl-class.md#cdialogimpl__enddialog)</ept> method from a message handler.","pos":[2976,3118],"source":" To close a modal dialog box, call the [EndDialog](../atl/reference/cdialogimpl-class.md#cdialogimpl__enddialog) method from a message handler."},{"content":"To create a modeless dialog box, call the <bpt id=\"p1\">[</bpt>Create<ept id=\"p1\">](../atl/reference/cdialogimpl-class.md#cdialogimpl__create)</ept> method instead of <ph id=\"ph1\">`DoModal`</ph>.","pos":[3119,3257],"source":" To create a modeless dialog box, call the [Create](../atl/reference/cdialogimpl-class.md#cdialogimpl__create) method instead of `DoModal`."},{"content":"To destroy a modeless dialog box, call <bpt id=\"p1\">[</bpt>DestroyWindow<ept id=\"p1\">](../atl/reference/cdialogimpl-class.md#cdialogimpl__destroywindow)</ept>.","pos":[3258,3379],"source":" To destroy a modeless dialog box, call [DestroyWindow](../atl/reference/cdialogimpl-class.md#cdialogimpl__destroywindow)."},{"content":"Sinking events is automatically done in <bpt id=\"p1\">[</bpt>CAxDialogImpl<ept id=\"p1\">](../atl/reference/caxdialogimpl-class.md)</ept>.","pos":[3386,3483],"source":"Sinking events is automatically done in [CAxDialogImpl](../atl/reference/caxdialogimpl-class.md)."},{"content":"Implement the dialog box's message handlers as you would the handlers in a <ph id=\"ph1\">`CWindowImpl`</ph>-derived class.","pos":[3484,3587],"source":" Implement the dialog box's message handlers as you would the handlers in a `CWindowImpl`-derived class."},{"content":"If there is a message-specific return value, return it as an <ph id=\"ph1\">`LRESULT`</ph>.","pos":[3588,3659],"source":" If there is a message-specific return value, return it as an `LRESULT`."},{"content":"The returned <ph id=\"ph1\">`LRESULT`</ph> values are mapped by ATL for proper handling by the Windows dialog manager.","pos":[3660,3758],"source":" The returned `LRESULT` values are mapped by ATL for proper handling by the Windows dialog manager."},{"content":"For details, see the source code for <bpt id=\"p1\">[</bpt>CDialogImplBaseT::DialogProc<ept id=\"p1\">](../atl/reference/cdialogimpl-class.md#cdialogimpl__dialogproc)</ept> in atlwin.h.","pos":[3759,3902],"source":" For details, see the source code for [CDialogImplBaseT::DialogProc](../atl/reference/cdialogimpl-class.md#cdialogimpl__dialogproc) in atlwin.h."},{"content":"Example","pos":[3911,3918]},{"content":"The following class implements a dialog box:","pos":[3922,3966]},{"pos":[3984,4004],"content":"NVC_ATL_Windowing#66"},{"content":"See Also","pos":[4069,4077]},{"content":"Window Classes","pos":[4082,4096]}],"content":"---\ntitle: \"Implementing a Dialog Box | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"CSimpleDialog class, implementing dialog boxes in ATL\"\n  - \"dialog boxes, ATL\"\n  - \"CAxDialogImpl class, implementing dialog boxes in ATL\"\n  - \"ATL, dialog boxes\"\nms.assetid: 478525f2-aa6a-435a-b162-68fc8aa98a8e\ncaps.latest.revision: 10\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Implementing a Dialog Box\nThere are two ways to add a dialog box to your ATL project: use the ATL Dialog Wizard or add it manually.  \n  \n## Adding a Dialog Box with the ATL Dialog Wizard  \n In the [Add Class dialog box](../ide/add-class-dialog-box.md), select the ATL Dialog object to add a dialog box to your ATL project. Fill in the ATL Dialog Wizard as appropriate and click **Finish**. The wizard adds a class derived from [CAxDialogImpl](../atl/reference/caxdialogimpl-class.md) to your project. Open the Resource View from the **View** menu, locate your dialog, and double-click it to open it in the resource editor.  \n  \n> [!NOTE]\n>  If your dialog box is derived from `CAxDialogImpl`, it can host both ActiveX and Windows controls. If you don't want the overhead of ActiveX control support in your dialog box class, use [CSimpleDialog](../atl/reference/csimpledialog-class.md) or [CDialogImpl](../atl/reference/cdialogimpl-class.md) instead.  \n  \n Message and event handlers can be added to your dialog class from Class View. For more information, see [Adding an ATL Message Handler](../atl/adding-an-atl-message-handler.md).  \n  \n## Adding a Dialog Box Manually  \n Implementing a dialog box is similar to implementing a window. You derive a class from either [CAxDialogImpl](../atl/reference/caxdialogimpl-class.md), [CDialogImpl](../atl/reference/cdialogimpl-class.md), or [CSimpleDialog](../atl/reference/csimpledialog-class.md) and declare a [message map](../atl/message-maps-atl.md) to handle messages. However, you must also specify a dialog template resource ID in your derived class. Your class must have a data member called `IDD` to hold this value.  \n  \n> [!NOTE]\n>  When you create a dialog box using the ATL Dialog Wizard, the wizard automatically adds the `IDD` member as an `enum` type.  \n  \n `CDialogImpl` allows you to implement a modal or a modeless dialog box that hosts Windows controls. `CAxDialogImpl` allows you to implement a modal or a modeless dialog box that hosts both ActiveX and Windows controls.  \n  \n To create a modal dialog box, create an instance of your `CDialogImpl`-derived (or `CAxDialogImpl`-derived) class and then call the [DoModal](../atl/reference/cdialogimpl-class.md#cdialogimpl__domodal) method. To close a modal dialog box, call the [EndDialog](../atl/reference/cdialogimpl-class.md#cdialogimpl__enddialog) method from a message handler. To create a modeless dialog box, call the [Create](../atl/reference/cdialogimpl-class.md#cdialogimpl__create) method instead of `DoModal`. To destroy a modeless dialog box, call [DestroyWindow](../atl/reference/cdialogimpl-class.md#cdialogimpl__destroywindow).  \n  \n Sinking events is automatically done in [CAxDialogImpl](../atl/reference/caxdialogimpl-class.md). Implement the dialog box's message handlers as you would the handlers in a `CWindowImpl`-derived class. If there is a message-specific return value, return it as an `LRESULT`. The returned `LRESULT` values are mapped by ATL for proper handling by the Windows dialog manager. For details, see the source code for [CDialogImplBaseT::DialogProc](../atl/reference/cdialogimpl-class.md#cdialogimpl__dialogproc) in atlwin.h.  \n  \n## Example  \n The following class implements a dialog box:  \n  \n [!code-cpp[NVC_ATL_Windowing#66](../atl/codesnippet/cpp/implementing-a-dialog-box_1.h)]  \n  \n## See Also  \n [Window Classes](../atl/atl-window-classes.md)\n\n"}