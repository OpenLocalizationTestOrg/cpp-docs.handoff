{"nodes":[{"pos":[12,47],"content":"length_error Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"length_error Class | Microsoft Docs","pos":[0,35]}]},{"content":"length_error Class","pos":[689,707]},{"content":"The class serves as the base class for all exceptions thrown to report an attempt to generate an object too long to be specified.","pos":[708,837]},{"content":"Syntax","pos":[846,852]},{"content":"Remarks","pos":[1035,1042]},{"pos":[1046,1211],"content":"The value returned by <bpt id=\"p1\">[</bpt>what<ept id=\"p1\">](../standard-library/exception-class.md)</ept> is a copy of <bpt id=\"p2\">**</bpt>message<ept id=\"p2\">**</ept><ph id=\"ph1\">`.`</ph><bpt id=\"p3\">[</bpt>data<ept id=\"p3\">](../standard-library/basic-string-class.md#basic_string__data)</ept>.","source":"The value returned by [what](../standard-library/exception-class.md) is a copy of **message**`.`[data](../standard-library/basic-string-class.md#basic_string__data)."},{"content":"Example","pos":[1220,1227]},{"content":"Requirements","pos":[2004,2016]},{"pos":[2020,2044],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> <ph id=\"ph1\">\\&lt;</ph>stdexcept&gt;","source":"**Header:** \\<stdexcept>"},{"pos":[2051,2069],"content":"<bpt id=\"p1\">**</bpt>Namespace:<ept id=\"p1\">**</ept> std","source":"**Namespace:** std"},{"content":"See Also","pos":[2078,2086]},{"content":"logic_error Class","pos":[2091,2108]},{"content":"Thread Safety in the C++ Standard Library","pos":[2157,2198]}],"content":"---\ntitle: \"length_error Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"stdexcept/std::length_error\"\n  - \"length_error\"\n  - \"std::length_error\"\n  - \"std.length_error\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"length_error class\"\nms.assetid: d53c46c5-4626-400d-bd76-bf3e1e0f64ae\ncaps.latest.revision: 21\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# length_error Class\nThe class serves as the base class for all exceptions thrown to report an attempt to generate an object too long to be specified.  \n  \n## Syntax  \n  \n```  \nclass length_error : public logic_error {  \npublic:  \n    explicit length_error(const string& message);\n\n    explicit length_error(const char *message);\n\n};  \n```  \n  \n## Remarks  \n The value returned by [what](../standard-library/exception-class.md) is a copy of **message**`.`[data](../standard-library/basic-string-class.md#basic_string__data).  \n  \n## Example  \n  \n```cpp  \n// length_error.cpp  \n// compile with: /EHsc /GR /MDd  \n#include <vector>  \n#include <iostream>  \n  \nusing namespace std;  \n  \ntemplate<class  T>  \nclass stingyallocator : public allocator< T>  \n{  \npublic:  \n   template <class U>  \n      struct rebind { typedef stingyallocator<U> other; };  \n   _SIZT max_size( ) const  \n   {  \n         return 10;  \n   };  \n  \n};  \n  \nint main( )  \n{  \n   try  \n   {  \n      vector<int, stingyallocator< int > > myv;  \n      for ( int i = 0; i < 11; i++ ) myv.push_back( i );  \n   }  \n   catch ( exception &e )  \n   {  \n      cerr << \"Caught \" << e.what( ) << endl;  \n      cerr << \"Type \" << typeid( e ).name( ) << endl;  \n   };  \n}  \n\\* Output:   \nCaught vector<T> too long  \nType class std::length_error  \n*\\  \n```  \n  \n## Requirements  \n **Header:** \\<stdexcept>  \n  \n **Namespace:** std  \n  \n## See Also  \n [logic_error Class](../standard-library/logic-error-class.md)   \n [Thread Safety in the C++ Standard Library](../standard-library/thread-safety-in-the-cpp-standard-library.md)\n\n"}