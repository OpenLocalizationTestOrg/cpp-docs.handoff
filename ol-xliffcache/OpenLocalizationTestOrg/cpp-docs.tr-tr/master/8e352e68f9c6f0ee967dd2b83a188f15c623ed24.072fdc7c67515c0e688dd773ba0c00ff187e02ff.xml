{"nodes":[{"pos":[12,48],"content":"_execvpe, _wexecvpe | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"_execvpe, _wexecvpe | Microsoft Docs","pos":[0,36]}]},{"pos":[1055,1074],"content":"_execvpe, _wexecvpe","linkify":"_execvpe, _wexecvpe","nodes":[{"content":"_execvpe, _wexecvpe","pos":[0,19]}]},{"content":"Loads and runs new child processes.","pos":[1075,1110]},{"pos":[1118,1378],"content":"[!IMPORTANT]\n This API cannot be used in applications that execute in the [!INCLUDE[wrt](../../atl/reference/includes/wrt_md.md)]. For more information, see [CRT functions not supported with /ZW](http://msdn.microsoft.com/library/windows/apps/jj606124.aspx).","leadings":["","> "],"nodes":[{"content":" This API cannot be used in applications that execute in the [!INCLUDE[wrt](../../atl/reference/includes/wrt_md.md)]. For more information, see [CRT functions not supported with /ZW](http://msdn.microsoft.com/library/windows/apps/jj606124.aspx).","pos":[13,258],"nodes":[{"content":"This API cannot be used in applications that execute in the <ph id=\"ph1\">[!INCLUDE[wrt](../../atl/reference/includes/wrt_md.md)]</ph>.","pos":[1,117],"source":" This API cannot be used in applications that execute in the [!INCLUDE[wrt](../../atl/reference/includes/wrt_md.md)]."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>CRT functions not supported with /ZW<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/apps/jj606124.aspx)</ept>.","pos":[118,245],"source":" For more information, see [CRT functions not supported with /ZW](http://msdn.microsoft.com/library/windows/apps/jj606124.aspx)."}]}]},{"pos":[1387,1393],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[1655,1665],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Path of the file to execute.","pos":[1682,1710]},{"content":"Array of pointers to parameters.","pos":[1727,1759]},{"content":"Array of pointers to environment settings.","pos":[1776,1818]},{"pos":[1827,1839],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"If successful, these functions do not return to the calling process.","pos":[1843,1911]},{"content":"A return value of –1 indicates an error, in which case the <ph id=\"ph1\">`errno`</ph> global variable is set.","pos":[1912,2002],"source":" A return value of –1 indicates an error, in which case the `errno` global variable is set."},{"pos":[2009,2022],"content":"<ph id=\"ph1\">`errno`</ph> value","source":"`errno` value"},{"content":"Description","pos":[2023,2034]},{"content":"The space that's required for the arguments and environment settings exceeds 32 KB.","pos":[2089,2172]},{"content":"The specified file has a locking or sharing violation.","pos":[2186,2240]},{"content":"Too many files are open.","pos":[2254,2278]},{"content":"(The specified file must be opened to determine whether it is executable.)","pos":[2279,2353]},{"content":"The file or path is not found.","pos":[2367,2397]},{"content":"The specified file is not executable or has an invalid executable-file format.","pos":[2412,2490]},{"content":"Not enough memory is available to execute the new process; the available memory has been corrupted; or an invalid block exists, which indicates that the calling process was not allocated correctly.","pos":[2504,2701]},{"pos":[2709,2886],"content":"For more information about these and other return codes, see <bpt id=\"p1\">[</bpt>errno, _doserrno, _sys_errlist, and _sys_nerr<ept id=\"p1\">](../../c-runtime-library/errno-doserrno-sys-errlist-and-sys-nerr.md)</ept>.","source":"For more information about these and other return codes, see [errno, _doserrno, _sys_errlist, and _sys_nerr](../../c-runtime-library/errno-doserrno-sys-errlist-and-sys-nerr.md)."},{"pos":[2895,2902],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Each of these functions loads and executes a new process, and passes an array of pointers to command-line arguments and an array of pointers to environment settings.","pos":[2906,3071]},{"content":"These functions use the <ph id=\"ph1\">`PATH`</ph> environment variable to find the file to execute.","pos":[3072,3152],"source":" These functions use the `PATH` environment variable to find the file to execute."},{"content":"The <ph id=\"ph1\">`_execvpe`</ph> functions validate their parameters.","pos":[3159,3210],"source":"The `_execvpe` functions validate their parameters."},{"content":"If the <ph id=\"ph1\">`cmdname`</ph> is a null pointer, or if <ph id=\"ph2\">`argv`</ph> is a null pointer, a pointer to an empty array, or a pointer to an array that contains an empty string as the first argument, these functions invoke the invalid parameter handler, as described in <bpt id=\"p1\">[</bpt>Parameter Validation<ept id=\"p1\">](../../c-runtime-library/parameter-validation.md)</ept>.","pos":[3211,3528],"source":" If the `cmdname` is a null pointer, or if `argv` is a null pointer, a pointer to an empty array, or a pointer to an array that contains an empty string as the first argument, these functions invoke the invalid parameter handler, as described in [Parameter Validation](../../c-runtime-library/parameter-validation.md)."},{"content":"If execution is allowed to continue, these functions set <ph id=\"ph1\">`errno`</ph> to <ph id=\"ph2\">`EINVAL`</ph> and return -1.","pos":[3529,3620],"source":" If execution is allowed to continue, these functions set `errno` to `EINVAL` and return -1."},{"content":"No process is launched.","pos":[3621,3644]},{"pos":[3653,3665],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"content":"Function","pos":[3672,3680]},{"content":"Required header","pos":[3681,3696]},{"content":"Optional header","pos":[3697,3712]},{"content":"<ph id=\"ph1\">\\&lt;</ph>process.h&gt;","pos":[3791,3803],"source":"\\<process.h>"},{"content":"<ph id=\"ph1\">\\&lt;</ph>errno.h&gt;","pos":[3804,3814],"source":"\\<errno.h>"},{"content":"<ph id=\"ph1\">\\&lt;</ph>process.h&gt; or <ph id=\"ph2\">\\&lt;</ph>wchar.h&gt;","pos":[3831,3857],"source":"\\<process.h> or \\<wchar.h>"},{"content":"<ph id=\"ph1\">\\&lt;</ph>errno.h&gt;","pos":[3858,3868],"source":"\\<errno.h>"},{"pos":[3876,3974],"content":"For more compatibility information, see <bpt id=\"p1\">[</bpt>Compatibility<ept id=\"p1\">](../../c-runtime-library/compatibility.md)</ept>.","source":"For more compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md)."},{"pos":[3983,3990],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[3994,4088],"content":"See the example in <bpt id=\"p1\">[</bpt>_exec, _wexec Functions<ept id=\"p1\">](../../c-runtime-library/exec-wexec-functions.md)</ept>.","source":"See the example in [_exec, _wexec Functions](../../c-runtime-library/exec-wexec-functions.md)."},{"pos":[4097,4122],"content":".NET Framework Equivalent","linkify":".NET Framework Equivalent","nodes":[{"content":".NET Framework Equivalent","pos":[0,25]}]},{"pos":[4132,4242],"content":"<bpt id=\"p1\">[</bpt>System::Diagnostics::Process Class<ept id=\"p1\">](https://msdn.microsoft.com/en-us/library/system.diagnostics.process.aspx)</ept>","source":"[System::Diagnostics::Process Class](https://msdn.microsoft.com/en-us/library/system.diagnostics.process.aspx)"},{"pos":[4252,4380],"content":"<bpt id=\"p1\">[</bpt>System::Diagnostics::ProcessStartInfo Class<ept id=\"p1\">](https://msdn.microsoft.com/en-us/library/system.diagnostics.processstartinfo.aspx)</ept>","source":"[System::Diagnostics::ProcessStartInfo Class](https://msdn.microsoft.com/en-us/library/system.diagnostics.processstartinfo.aspx)"},{"pos":[4389,4397],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Process and Environment Control<ept id=\"p1\">](../../c-runtime-library/process-and-environment-control.md)</ept><ph id=\"ph1\"> </ph>","pos":[4401,4495],"source":"[Process and Environment Control](../../c-runtime-library/process-and-environment-control.md) "},{"content":"<bpt id=\"p1\"> [</bpt>_exec, _wexec Functions<ept id=\"p1\">](../../c-runtime-library/exec-wexec-functions.md)</ept><ph id=\"ph1\"> </ph>","pos":[4498,4574],"source":" [_exec, _wexec Functions](../../c-runtime-library/exec-wexec-functions.md) "},{"content":"<bpt id=\"p1\"> [</bpt>abort<ept id=\"p1\">](../../c-runtime-library/reference/abort.md)</ept><ph id=\"ph1\"> </ph>","pos":[4577,4630],"source":" [abort](../../c-runtime-library/reference/abort.md) "},{"content":"<bpt id=\"p1\"> [</bpt>atexit<ept id=\"p1\">](../../c-runtime-library/reference/atexit.md)</ept><ph id=\"ph1\"> </ph>","pos":[4633,4688],"source":" [atexit](../../c-runtime-library/reference/atexit.md) "},{"content":"<bpt id=\"p1\"> [</bpt>exit, _Exit, _exit<ept id=\"p1\">](../../c-runtime-library/reference/exit-exit-exit.md)</ept><ph id=\"ph1\"> </ph>","pos":[4691,4766],"source":" [exit, _Exit, _exit](../../c-runtime-library/reference/exit-exit-exit.md) "},{"content":"<bpt id=\"p1\"> [</bpt>_onexit, _onexit_m<ept id=\"p1\">](../../c-runtime-library/reference/onexit-onexit-m.md)</ept><ph id=\"ph1\"> </ph>","pos":[4769,4845],"source":" [_onexit, _onexit_m](../../c-runtime-library/reference/onexit-onexit-m.md) "},{"content":"<bpt id=\"p1\"> [</bpt>_spawn, _wspawn Functions<ept id=\"p1\">](../../c-runtime-library/spawn-wspawn-functions.md)</ept><ph id=\"ph1\"> </ph>","pos":[4848,4928],"source":" [_spawn, _wspawn Functions](../../c-runtime-library/spawn-wspawn-functions.md) "},{"content":"<bpt id=\"p1\"> [</bpt>system, _wsystem<ept id=\"p1\">](../../c-runtime-library/reference/system-wsystem.md)</ept>","pos":[4931,5003],"source":" [system, _wsystem](../../c-runtime-library/reference/system-wsystem.md)"}],"content":"---\ntitle: \"_execvpe, _wexecvpe | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\napiname: \n  - \"_execvpe\"\n  - \"_wexecvpe\"\napilocation: \n  - \"msvcrt.dll\"\n  - \"msvcr80.dll\"\n  - \"msvcr90.dll\"\n  - \"msvcr100.dll\"\n  - \"msvcr100_clr0400.dll\"\n  - \"msvcr110.dll\"\n  - \"msvcr110_clr0400.dll\"\n  - \"msvcr120.dll\"\n  - \"msvcr120_clr0400.dll\"\n  - \"ucrtbase.dll\"\n  - \"api-ms-win-crt-process-l1-1-0.dll\"\napitype: \"DLLExport\"\nf1_keywords: \n  - \"wexecvpe\"\n  - \"execvpe\"\n  - \"_wexecvpe\"\n  - \"_execvpe\"\ndev_langs: \n  - \"C++\"\n  - \"C\"\nhelpviewer_keywords: \n  - \"wexecvpe function\"\n  - \"execvpe function\"\n  - \"_wexecvpe function\"\n  - \"_execvpe function\"\nms.assetid: c0c3c986-d9c0-4814-a96c-10f0b3092766\ncaps.latest.revision: 23\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# _execvpe, _wexecvpe\nLoads and runs new child processes.  \n  \n> [!IMPORTANT]\n>  This API cannot be used in applications that execute in the [!INCLUDE[wrt](../../atl/reference/includes/wrt_md.md)]. For more information, see [CRT functions not supported with /ZW](http://msdn.microsoft.com/library/windows/apps/jj606124.aspx).  \n  \n## Syntax  \n  \n```  \nintptr_t _execvpe(   \n   const char *cmdname,  \n   const char *const *argv,  \n   const char *const *envp   \n);  \nintptr_t _wexecvpe(   \n   const wchar_t *cmdname,  \n   const wchar_t *const *argv,  \n   const wchar_t *const *envp   \n);  \n```  \n  \n#### Parameters  \n `cmdname`  \n Path of the file to execute.  \n  \n `argv`  \n Array of pointers to parameters.  \n  \n `envp`  \n Array of pointers to environment settings.  \n  \n## Return Value  \n If successful, these functions do not return to the calling process. A return value of –1 indicates an error, in which case the `errno` global variable is set.  \n  \n|`errno` value|Description|  \n|-------------------|-----------------|  \n|`E2BIG`|The space that's required for the arguments and environment settings exceeds 32 KB.|  \n|`EACCES`|The specified file has a locking or sharing violation.|  \n|`EMFILE`|Too many files are open. (The specified file must be opened to determine whether it is executable.)|  \n|`ENOENT`|The file or path is not found.|  \n|`ENOEXEC`|The specified file is not executable or has an invalid executable-file format.|  \n|`ENOMEM`|Not enough memory is available to execute the new process; the available memory has been corrupted; or an invalid block exists, which indicates that the calling process was not allocated correctly.|  \n  \n For more information about these and other return codes, see [errno, _doserrno, _sys_errlist, and _sys_nerr](../../c-runtime-library/errno-doserrno-sys-errlist-and-sys-nerr.md).  \n  \n## Remarks  \n Each of these functions loads and executes a new process, and passes an array of pointers to command-line arguments and an array of pointers to environment settings. These functions use the `PATH` environment variable to find the file to execute.  \n  \n The `_execvpe` functions validate their parameters. If the `cmdname` is a null pointer, or if `argv` is a null pointer, a pointer to an empty array, or a pointer to an array that contains an empty string as the first argument, these functions invoke the invalid parameter handler, as described in [Parameter Validation](../../c-runtime-library/parameter-validation.md). If execution is allowed to continue, these functions set `errno` to `EINVAL` and return -1. No process is launched.  \n  \n## Requirements  \n  \n|Function|Required header|Optional header|  \n|--------------|---------------------|---------------------|  \n|`_execvpe`|\\<process.h>|\\<errno.h>|  \n|`_wexecvpe`|\\<process.h> or \\<wchar.h>|\\<errno.h>|  \n  \n For more compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md).  \n  \n## Example  \n See the example in [_exec, _wexec Functions](../../c-runtime-library/exec-wexec-functions.md).  \n  \n## .NET Framework Equivalent  \n  \n-   [System::Diagnostics::Process Class](https://msdn.microsoft.com/en-us/library/system.diagnostics.process.aspx)  \n  \n-   [System::Diagnostics::ProcessStartInfo Class](https://msdn.microsoft.com/en-us/library/system.diagnostics.processstartinfo.aspx)  \n  \n## See Also  \n [Process and Environment Control](../../c-runtime-library/process-and-environment-control.md)   \n [_exec, _wexec Functions](../../c-runtime-library/exec-wexec-functions.md)   \n [abort](../../c-runtime-library/reference/abort.md)   \n [atexit](../../c-runtime-library/reference/atexit.md)   \n [exit, _Exit, _exit](../../c-runtime-library/reference/exit-exit-exit.md)   \n [_onexit, _onexit_m](../../c-runtime-library/reference/onexit-onexit-m.md)   \n [_spawn, _wspawn Functions](../../c-runtime-library/spawn-wspawn-functions.md)   \n [system, _wsystem](../../c-runtime-library/reference/system-wsystem.md)"}