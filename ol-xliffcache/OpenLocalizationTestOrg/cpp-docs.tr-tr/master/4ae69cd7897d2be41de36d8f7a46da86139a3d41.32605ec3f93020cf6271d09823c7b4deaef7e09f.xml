{"nodes":[{"pos":[12,51],"content":"deque::clear (STL-CLR) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"deque::clear (STL-CLR) | Microsoft Docs","pos":[0,39]}]},{"content":"deque::clear (STL/CLR)","pos":[626,648]},{"content":"Removes all elements.","pos":[649,670]},{"content":"Syntax","pos":[679,685]},{"content":"Remarks","pos":[725,732]},{"content":"The member function effectively calls <bpt id=\"p1\">[</bpt>deque::erase (STL/CLR)<ept id=\"p1\">](../dotnet/deque-erase-stl-clr.md)</ept><ph id=\"ph1\">`(`</ph> <bpt id=\"p2\">[</bpt>deque::begin (STL/CLR)<ept id=\"p2\">](../dotnet/deque-begin-stl-clr.md)</ept><ph id=\"ph2\">`(),`</ph> <bpt id=\"p3\">[</bpt>deque::end (STL/CLR)<ept id=\"p3\">](../dotnet/deque-end-stl-clr.md)</ept><ph id=\"ph3\">`())`</ph>.","pos":[736,960],"source":"The member function effectively calls [deque::erase (STL/CLR)](../dotnet/deque-erase-stl-clr.md)`(` [deque::begin (STL/CLR)](../dotnet/deque-begin-stl-clr.md)`(),` [deque::end (STL/CLR)](../dotnet/deque-end-stl-clr.md)`())`."},{"content":"You use it to ensure that the controlled sequence is empty.","pos":[961,1020]},{"content":"Example","pos":[1029,1036]},{"content":"Requirements","pos":[1964,1976]},{"pos":[1980,2007],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> <ph id=\"ph1\">\\&lt;</ph>cliext/deque&gt;","source":"**Header:** \\<cliext/deque>"},{"pos":[2014,2035],"content":"<bpt id=\"p1\">**</bpt>Namespace:<ept id=\"p1\">**</ept> cliext","source":"**Namespace:** cliext"},{"content":"See Also","pos":[2044,2052]},{"content":"deque (STL/CLR)","pos":[2057,2072]},{"content":"deque::erase (STL/CLR)","pos":[2107,2129]}],"content":"---\ntitle: \"deque::clear (STL-CLR) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"cliext::deque::clear\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"clear member [STL/CLR]\"\nms.assetid: 1d9a3d11-b3fa-43a7-a508-7a05cbcd91bf\ncaps.latest.revision: 15\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# deque::clear (STL/CLR)\nRemoves all elements.  \n  \n## Syntax  \n  \n```  \nvoid clear();  \n```  \n  \n## Remarks  \n The member function effectively calls [deque::erase (STL/CLR)](../dotnet/deque-erase-stl-clr.md)`(` [deque::begin (STL/CLR)](../dotnet/deque-begin-stl-clr.md)`(),` [deque::end (STL/CLR)](../dotnet/deque-end-stl-clr.md)`())`. You use it to ensure that the controlled sequence is empty.  \n  \n## Example  \n  \n```  \n// cliext_deque_clear.cpp   \n// compile with: /clr   \n#include <cliext/deque>   \n  \nint main()   \n    {   \n    cliext::deque<wchar_t> c1;   \n    c1.push_back(L'a');   \n    c1.push_back(L'b');   \n    c1.push_back(L'c');   \n  \n// display initial contents \" a b c\"   \n    for each (wchar_t elem in c1)   \n        System::Console::Write(\" {0}\", elem);   \n    System::Console::WriteLine();   \n  \n// clear the container and reinspect   \n    c1.clear();   \n    System::Console::WriteLine(\"size() = {0}\", c1.size());   \n  \n// add elements and clear again   \n    c1.push_back(L'a');   \n    c1.push_back(L'b');   \n  \n    for each (wchar_t elem in c1)   \n        System::Console::Write(\" {0}\", elem);   \n    System::Console::WriteLine();   \n    c1.clear();   \n    System::Console::WriteLine(\"size() = {0}\", c1.size());   \n    return (0);   \n    }  \n  \n```  \n  \n```Output  \n a b c  \nsize() = 0  \n a b  \nsize() = 0  \n```  \n  \n## Requirements  \n **Header:** \\<cliext/deque>  \n  \n **Namespace:** cliext  \n  \n## See Also  \n [deque (STL/CLR)](../dotnet/deque-stl-clr.md)   \n [deque::erase (STL/CLR)](../dotnet/deque-erase-stl-clr.md)"}