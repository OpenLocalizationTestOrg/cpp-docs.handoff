{"nodes":[{"pos":[12,56],"content":"Structure and Union Members | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Structure and Union Members | Microsoft Docs","pos":[0,44]}]},{"content":"Structure and Union Members","pos":[830,857]},{"content":"A \"member-selection expression\" refers to members of structures and unions.","pos":[858,933]},{"content":"Such an expression has the value and type of the selected member.","pos":[934,999]},{"content":"This list describes the two forms of the member-selection expressions:","pos":[1104,1174]},{"content":"In the first form, <bpt id=\"p1\">*</bpt>postfix-expression<ept id=\"p1\">*</ept> represents a value of <ph id=\"ph1\">`struct`</ph> or <bpt id=\"p2\">**</bpt>union<ept id=\"p2\">**</ept> type, and <bpt id=\"p3\">*</bpt>identifier<ept id=\"p3\">*</ept> names a member of the specified structure or union.","pos":[1184,1342],"source":"In the first form, *postfix-expression* represents a value of `struct` or **union** type, and *identifier* names a member of the specified structure or union."},{"content":"The value of the operation is that of <bpt id=\"p1\">*</bpt>identifier<ept id=\"p1\">*</ept> and is an l-value if <bpt id=\"p2\">*</bpt>postfix-expression<ept id=\"p2\">*</ept> is an l-value.","pos":[1343,1450],"source":" The value of the operation is that of *identifier* and is an l-value if *postfix-expression* is an l-value."},{"content":"See <bpt id=\"p1\">[</bpt>L-Value and R-Value Expressions<ept id=\"p1\">](../c-language/l-value-and-r-value-expressions.md)</ept> for more information.","pos":[1451,1560],"source":" See [L-Value and R-Value Expressions](../c-language/l-value-and-r-value-expressions.md) for more information."},{"content":"In the second form, <bpt id=\"p1\">*</bpt>postfix-expression<ept id=\"p1\">*</ept> represents a pointer to a structure or union, and <bpt id=\"p2\">*</bpt>identifier<ept id=\"p2\">*</ept> names a member of the specified structure or union.","pos":[1570,1725],"source":"In the second form, *postfix-expression* represents a pointer to a structure or union, and *identifier* names a member of the specified structure or union."},{"content":"The value is that of <bpt id=\"p1\">*</bpt>identifier<ept id=\"p1\">*</ept> and is an l-value.","pos":[1726,1778],"source":" The value is that of *identifier* and is an l-value."},{"content":"The two forms of member-selection expressions have similar effects.","pos":[1785,1852]},{"content":"In fact, an expression involving the member-selection operator (<bpt id=\"p1\">**</bpt>–&gt;<ept id=\"p1\">**</ept>) is a shorthand version of an expression using the period (<bpt id=\"p2\">**</bpt>.<ept id=\"p2\">**</ept>) if the expression before the period consists of the indirection operator (<bpt id=\"p3\">**</bpt><ph id=\"ph1\">\\*</ph><ept id=\"p3\">**</ept>) applied to a pointer value.","pos":[1859,2105],"source":"In fact, an expression involving the member-selection operator (**–>**) is a shorthand version of an expression using the period (**.**) if the expression before the period consists of the indirection operator (**\\***) applied to a pointer value."},{"content":"Therefore,","pos":[2106,2116]},{"content":"is equivalent to","pos":[2175,2191]},{"pos":[2256,2293],"content":"when <bpt id=\"p1\">*</bpt>expression<ept id=\"p1\">*</ept> is a pointer value.","source":"when *expression* is a pointer value."},{"content":"Examples","pos":[2302,2310]},{"content":"The following examples refer to this structure declaration.","pos":[2314,2373]},{"content":"For information about the indirection operator (<bpt id=\"p1\">**</bpt><ph id=\"ph1\">\\*</ph><ept id=\"p1\">**</ept>) used in these examples, see <bpt id=\"p2\">[</bpt>Indirection and Address-of Operators<ept id=\"p2\">](../c-language/indirection-and-address-of-operators.md)</ept>.","pos":[2374,2552],"source":" For information about the indirection operator (**\\***) used in these examples, see [Indirection and Address-of Operators](../c-language/indirection-and-address-of-operators.md)."},{"pos":[2662,2733],"content":"A member-selection expression for the <ph id=\"ph1\">`item`</ph> structure looks like this:","source":"A member-selection expression for the `item` structure looks like this:"},{"content":"In the example above, the address of the <ph id=\"ph1\">`item`</ph> structure is assigned to the <ph id=\"ph2\">`sp`</ph> member of the structure.","pos":[2774,2880],"source":"In the example above, the address of the `item` structure is assigned to the `sp` member of the structure."},{"content":"This means that <ph id=\"ph1\">`item`</ph> contains a pointer to itself.","pos":[2881,2933],"source":" This means that `item` contains a pointer to itself."},{"pos":[2976,3114],"content":"In this example, the pointer expression <ph id=\"ph1\">`item.sp`</ph> is used with the member-selection operator (<bpt id=\"p1\">**</bpt>–&gt;<ept id=\"p1\">**</ept>) to assign a value to the member <ph id=\"ph2\">`a`</ph>.","source":"In this example, the pointer expression `item.sp` is used with the member-selection operator (**–>**) to assign a value to the member `a`."},{"content":"This statement shows how to select an individual structure member from an array of structures.","pos":[3154,3248]},{"content":"See Also","pos":[3257,3265]},{"content":"Member Access Operators: .","pos":[3270,3296]},{"content":"and -&gt;","pos":[3297,3303],"source":" and ->"}],"content":"---\ntitle: \"Structure and Union Members | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"C++\"\n  - \"C\"\nhelpviewer_keywords: \n  - \"member-selection operators\"\n  - \"structure members, referencing\"\n  - \"-> operator, structure and union members\"\n  - \"dot operator (.)\"\n  - \"referencing structure members\"\n  - \". operator\"\n  - \"operators [C], member selection\"\n  - \"structure member selection\"\nms.assetid: bb1fe304-af49-4f98-808d-afdc99b3e319\ncaps.latest.revision: 8\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Structure and Union Members\nA \"member-selection expression\" refers to members of structures and unions. Such an expression has the value and type of the selected member.  \n  \n```  \n  \npostfix-expression  \n.  \nidentifier  \npostfix-expression  \n–>  \nidentifier  \n  \n```  \n  \n This list describes the two forms of the member-selection expressions:  \n  \n1.  In the first form, *postfix-expression* represents a value of `struct` or **union** type, and *identifier* names a member of the specified structure or union. The value of the operation is that of *identifier* and is an l-value if *postfix-expression* is an l-value. See [L-Value and R-Value Expressions](../c-language/l-value-and-r-value-expressions.md) for more information.  \n  \n2.  In the second form, *postfix-expression* represents a pointer to a structure or union, and *identifier* names a member of the specified structure or union. The value is that of *identifier* and is an l-value.  \n  \n The two forms of member-selection expressions have similar effects.  \n  \n In fact, an expression involving the member-selection operator (**–>**) is a shorthand version of an expression using the period (**.**) if the expression before the period consists of the indirection operator (**\\***) applied to a pointer value. Therefore,  \n  \n```  \n  \nexpression  \n–>  \nidentifier  \n  \n```  \n  \n is equivalent to  \n  \n```  \n  \n(*  \nexpression  \n) .  \nidentifier  \n  \n```  \n  \n when *expression* is a pointer value.  \n  \n## Examples  \n The following examples refer to this structure declaration. For information about the indirection operator (**\\***) used in these examples, see [Indirection and Address-of Operators](../c-language/indirection-and-address-of-operators.md).  \n  \n```  \nstruct pair   \n{  \n    int a;  \n    int b;  \n    struct pair *sp;  \n} item, list[10];  \n```  \n  \n A member-selection expression for the `item` structure looks like this:  \n  \n```  \nitem.sp = &item;  \n```  \n  \n In the example above, the address of the `item` structure is assigned to the `sp` member of the structure. This means that `item` contains a pointer to itself.  \n  \n```  \n(item.sp)–>a = 24;  \n```  \n  \n In this example, the pointer expression `item.sp` is used with the member-selection operator (**–>**) to assign a value to the member `a`.  \n  \n```  \nlist[8].b = 12;  \n```  \n  \n This statement shows how to select an individual structure member from an array of structures.  \n  \n## See Also  \n [Member Access Operators: . and ->](../cpp/member-access-operators-dot-and.md)"}