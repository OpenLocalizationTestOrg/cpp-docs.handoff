{"nodes":[{"pos":[12,47],"content":"ptr::operator bool | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"ptr::operator bool | Microsoft Docs","pos":[0,35]}]},{"content":"ptr::operator bool","pos":[731,749]},{"pos":[750,808],"content":"Operator for using <ph id=\"ph1\">`com::ptr`</ph> in a conditional expression.","source":"Operator for using `com::ptr` in a conditional expression."},{"content":"Syntax","pos":[817,823]},{"content":"Return Value","pos":[866,878]},{"pos":[889,941],"content":"if the owned COM object is valid; <ph id=\"ph1\">`false`</ph> otherwise.","source":" if the owned COM object is valid; `false` otherwise."},{"content":"Remarks","pos":[950,957]},{"pos":[961,1014],"content":"The owned COM object is valid if it is not <ph id=\"ph1\">`nullptr`</ph>.","source":"The owned COM object is valid if it is not `nullptr`."},{"pos":[1021,1162],"content":"This operator actually converts to <ph id=\"ph1\">`_detail_class::_safe_bool`</ph> which is safer than <ph id=\"ph2\">`bool`</ph> because it cannot be converted to an integral type.","source":"This operator actually converts to `_detail_class::_safe_bool` which is safer than `bool` because it cannot be converted to an integral type."},{"content":"Example","pos":[1171,1178]},{"content":"This example implements a CLR class that uses a <ph id=\"ph1\">`com::ptr`</ph> to wrap its private member <ph id=\"ph2\">`IXMLDOMDocument`</ph> object.","pos":[1182,1293],"source":"This example implements a CLR class that uses a `com::ptr` to wrap its private member `IXMLDOMDocument` object."},{"content":"The <ph id=\"ph1\">`CreateInstance`</ph> member function uses <ph id=\"ph2\">`operator bool`</ph> after creating the new document object to determine if it is valid and writes to the console if it is.","pos":[1294,1454],"source":" The `CreateInstance` member function uses `operator bool` after creating the new document object to determine if it is valid and writes to the console if it is."},{"content":"Requirements","pos":[2660,2672]},{"pos":[2676,2710],"content":"<bpt id=\"p1\">**</bpt>Header file<ept id=\"p1\">**</ept> <ph id=\"ph1\">\\&lt;</ph>msclr\\com\\ptr.h&gt;","source":"**Header file** \\<msclr\\com\\ptr.h>"},{"pos":[2717,2741],"content":"<bpt id=\"p1\">**</bpt>Namespace<ept id=\"p1\">**</ept> msclr::com","source":"**Namespace** msclr::com"},{"content":"See Also","pos":[2750,2758]},{"content":"ptr Members","pos":[2763,2774]},{"content":"ptr::operator!","pos":[2807,2821]}],"content":"---\ntitle: \"ptr::operator bool | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"ptr::operator bool\"\n  - \"ptr.operator bool\"\n  - \"operator bool\"\n  - \"msclr::com::ptr::operator bool\"\n  - \"msclr.com.ptr.operator bool\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"ptr::operator bool\"\nms.assetid: 31123377-6ecd-4cef-9b75-3db3996fbcd1\ncaps.latest.revision: 10\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# ptr::operator bool\nOperator for using `com::ptr` in a conditional expression.  \n  \n## Syntax  \n  \n```  \noperator bool();  \n```  \n  \n## Return Value  \n `true` if the owned COM object is valid; `false` otherwise.  \n  \n## Remarks  \n The owned COM object is valid if it is not `nullptr`.  \n  \n This operator actually converts to `_detail_class::_safe_bool` which is safer than `bool` because it cannot be converted to an integral type.  \n  \n## Example  \n This example implements a CLR class that uses a `com::ptr` to wrap its private member `IXMLDOMDocument` object. The `CreateInstance` member function uses `operator bool` after creating the new document object to determine if it is valid and writes to the console if it is.  \n  \n```  \n// comptr_op_bool.cpp  \n// compile with: /clr /link msxml2.lib  \n#include <msxml2.h>  \n#include <msclr\\com\\ptr.h>  \n  \n#import <msxml3.dll> raw_interfaces_only  \n  \nusing namespace System;  \nusing namespace System::Runtime::InteropServices;  \nusing namespace msclr;  \n  \n// a ref class that uses a com::ptr to contain an   \n// IXMLDOMDocument object  \nref class XmlDocument {  \npublic:  \n   void CreateInstance(String^ progid) {  \n      if (!m_ptrDoc) {  \n         m_ptrDoc.CreateInstance(progid);     \n         if (m_ptrDoc) { // uses operator bool  \n            Console::WriteLine(\"DOM Document created.\");  \n         }  \n      }  \n   }  \n  \n   // note that the destructor will call the com::ptr destructor  \n   // and automatically release the reference to the COM object  \n  \nprivate:  \n   com::ptr<IXMLDOMDocument> m_ptrDoc;  \n};  \n  \n// use the ref class to handle an XML DOM Document object  \nint main() {  \n   try {  \n      XmlDocument doc;  \n      // create the instance from a progid string  \n      doc.CreateInstance(\"Msxml2.DOMDocument.3.0\");  \n   }  \n   catch (Exception^ e) {  \n      Console::WriteLine(e);     \n   }  \n}  \n```  \n  \n```Output  \nDOM Document created.  \n```  \n  \n## Requirements  \n **Header file** \\<msclr\\com\\ptr.h>  \n  \n **Namespace** msclr::com  \n  \n## See Also  \n [ptr Members](../dotnet/ptr-members.md)   \n [ptr::operator!](../dotnet/ptr-operator-logical-not.md)"}