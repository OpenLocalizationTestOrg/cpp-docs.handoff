{"nodes":[{"pos":[12,37],"content":"Trackers | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Trackers | Microsoft Docs","pos":[0,25]}]},{"content":"Trackers","pos":[799,807]},{"content":"The <bpt id=\"p1\">[</bpt>CRectTracker<ept id=\"p1\">](../mfc/reference/crecttracker-class.md)</ept> class provides a user interface between rectangular items in your application and your user by providing a variety of display styles.","pos":[808,1000],"source":"The [CRectTracker](../mfc/reference/crecttracker-class.md) class provides a user interface between rectangular items in your application and your user by providing a variety of display styles."},{"content":"These styles include solid, hatched, or dashed borders; a hatched pattern that covers the item; and resize handles that can be located on the outside or inside of a border.","pos":[1001,1173]},{"content":"Trackers are often used in conjunction with OLE items, that is, objects derived from <ph id=\"ph1\">`COleClientItem`</ph>.","pos":[1174,1276],"source":" Trackers are often used in conjunction with OLE items, that is, objects derived from `COleClientItem`."},{"content":"The tracker rectangles give visual cues on the current status of the item.","pos":[1277,1351]},{"content":"The MFC OLE sample <bpt id=\"p1\">[</bpt>OCLIENT<ept id=\"p1\">](../visual-cpp-samples.md)</ept> demonstrates a common interface using trackers and OLE client items from the viewpoint of a container application.","pos":[1358,1527],"source":"The MFC OLE sample [OCLIENT](../visual-cpp-samples.md) demonstrates a common interface using trackers and OLE client items from the viewpoint of a container application."},{"content":"For a demonstration of the different styles and abilities of a tracker object, see the MFC general sample <bpt id=\"p1\">[</bpt>TRACKER<ept id=\"p1\">](../visual-cpp-samples.md)</ept>.","pos":[1528,1670],"source":" For a demonstration of the different styles and abilities of a tracker object, see the MFC general sample [TRACKER](../visual-cpp-samples.md)."},{"pos":[1677,1875],"content":"For more information on implementing trackers in your OLE application, see <bpt id=\"p1\">[</bpt>Trackers: Implementing Trackers in Your OLE Application<ept id=\"p1\">](../mfc/trackers-implementing-trackers-in-your-ole-application.md)</ept>","source":"For more information on implementing trackers in your OLE application, see [Trackers: Implementing Trackers in Your OLE Application](../mfc/trackers-implementing-trackers-in-your-ole-application.md)"},{"content":"See Also","pos":[1884,1892]},{"content":"OLE","pos":[1897,1900]},{"content":"COleClientItem Class","pos":[1929,1949]}],"content":"---\ntitle: \"Trackers | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"trackers\"\n  - \"OLE applications [C++], trackers\"\n  - \"applications [OLE], trackers\"\n  - \"tracking OLE items\"\n  - \"OLE containers, trackers\"\n  - \"CDC class, trackers\"\n  - \"CRectTracker class, implementing trackers\"\n  - \"OLE server applications, trackers\"\nms.assetid: dcd09399-6637-4621-80e5-d12670429787\ncaps.latest.revision: 10\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Trackers\nThe [CRectTracker](../mfc/reference/crecttracker-class.md) class provides a user interface between rectangular items in your application and your user by providing a variety of display styles. These styles include solid, hatched, or dashed borders; a hatched pattern that covers the item; and resize handles that can be located on the outside or inside of a border. Trackers are often used in conjunction with OLE items, that is, objects derived from `COleClientItem`. The tracker rectangles give visual cues on the current status of the item.  \n  \n The MFC OLE sample [OCLIENT](../visual-cpp-samples.md) demonstrates a common interface using trackers and OLE client items from the viewpoint of a container application. For a demonstration of the different styles and abilities of a tracker object, see the MFC general sample [TRACKER](../visual-cpp-samples.md).  \n  \n For more information on implementing trackers in your OLE application, see [Trackers: Implementing Trackers in Your OLE Application](../mfc/trackers-implementing-trackers-in-your-ole-application.md)  \n  \n## See Also  \n [OLE](../mfc/ole-in-mfc.md)   \n [COleClientItem Class](../mfc/reference/coleclientitem-class.md)\n"}