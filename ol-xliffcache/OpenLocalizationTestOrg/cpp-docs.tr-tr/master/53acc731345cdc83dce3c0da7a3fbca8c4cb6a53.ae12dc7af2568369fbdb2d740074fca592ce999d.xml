{"nodes":[{"pos":[12,32],"content":"div | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"div | Microsoft Docs","pos":[0,20]}]},{"content":"div","pos":[984,987]},{"content":"Computes the quotient and the remainder of two integer values.","pos":[988,1050]},{"content":"Syntax","pos":[1059,1065]},{"content":"Parameters","pos":[1288,1298]},{"content":"The numerator.","pos":[1313,1327]},{"content":"The denominator.","pos":[1345,1361]},{"content":"Return Value","pos":[1370,1382]},{"content":"called by using arguments of type <ph id=\"ph1\">`int`</ph> returns a structure of type <ph id=\"ph2\">`div_t`</ph>, which comprises the quotient and the remainder.","pos":[1392,1516],"source":" called by using arguments of type `int` returns a structure of type `div_t`, which comprises the quotient and the remainder."},{"content":"The return value of the overload with arguments of type <ph id=\"ph1\">`long`</ph> is <ph id=\"ph2\">`ldiv_t`</ph>.","pos":[1517,1592],"source":" The return value of the overload with arguments of type `long` is `ldiv_t`."},{"content":"Both <ph id=\"ph1\">`div_t`</ph> and <ph id=\"ph2\">`ldiv_t`</ph> are defined in STDLIB.H.","pos":[1593,1643],"source":" Both `div_t` and `ldiv_t` are defined in STDLIB.H."},{"content":"Remarks","pos":[1652,1659]},{"content":"The <ph id=\"ph1\">`div`</ph> function divides <ph id=\"ph2\">`numer`</ph> by <ph id=\"ph3\">`denom`</ph> and thereby computes the quotient and the remainder.","pos":[1663,1761],"source":"The `div` function divides `numer` by `denom` and thereby computes the quotient and the remainder."},{"content":"The <bpt id=\"p1\">[</bpt>div_t<ept id=\"p1\">](../../c-runtime-library/standard-types.md)</ept> structure contains the quotient, <ph id=\"ph1\">`int``quot`</ph>, and the remainder, <ph id=\"ph2\">`int``rem`</ph>.","pos":[1762,1893],"source":" The [div_t](../../c-runtime-library/standard-types.md) structure contains the quotient, `int``quot`, and the remainder, `int``rem`."},{"content":"The sign of the quotient is the same as that of the mathematical quotient.","pos":[1894,1968]},{"content":"Its absolute value is the largest integer that is less than the absolute value of the mathematical quotient.","pos":[1969,2077]},{"content":"If the denominator is 0, the program terminates with an error message.","pos":[2078,2148]},{"content":"The overloads that take arguments of type <ph id=\"ph1\">`long`</ph> or <ph id=\"ph2\">`long long`</ph> are only available to C++ code.","pos":[2155,2250],"source":"The overloads that take arguments of type `long` or `long long` are only available to C++ code."},{"content":"The return type <bpt id=\"p1\">[</bpt>ldiv_t<ept id=\"p1\">](../../c-runtime-library/standard-types.md)</ept> contains the members <ph id=\"ph1\">`long``quot`</ph> and <ph id=\"ph2\">`long``rem`</ph>, and the return type <bpt id=\"p2\">[</bpt>lldiv_t<ept id=\"p2\">](../../c-runtime-library/standard-types.md)</ept> contains the members <ph id=\"ph3\">`long long quot`</ph> and <ph id=\"ph4\">`long long rem`</ph>, which have the same meanings as the members of <ph id=\"ph5\">`div_t`</ph>.","pos":[2251,2557],"source":" The return type [ldiv_t](../../c-runtime-library/standard-types.md) contains the members `long``quot` and `long``rem`, and the return type [lldiv_t](../../c-runtime-library/standard-types.md) contains the members `long long quot` and `long long rem`, which have the same meanings as the members of `div_t`."},{"content":"Requirements","pos":[2566,2578]},{"content":"Routine","pos":[2585,2592]},{"content":"Required header","pos":[2593,2608]},{"content":"stdlib.h&gt;","pos":[2661,2670],"source":"stdlib.h>"},{"pos":[2678,2782],"content":"For additional compatibility information, see <bpt id=\"p1\">[</bpt>Compatibility<ept id=\"p1\">](../../c-runtime-library/compatibility.md)</ept>.","source":"For additional compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md)."},{"content":"Example","pos":[2791,2798]},{"content":".NET Framework Equivalent","pos":[3682,3707]},{"content":"Not applicable.","pos":[3711,3726]},{"content":"To call the standard C function, use <ph id=\"ph1\">`PInvoke`</ph>.","pos":[3727,3774],"source":" To call the standard C function, use `PInvoke`."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Platform Invoke Examples<ept id=\"p1\">](http://msdn.microsoft.com/Library/15926806-f0b7-487e-93a6-4e9367ec689f)</ept>.","pos":[3775,3900],"source":" For more information, see [Platform Invoke Examples](http://msdn.microsoft.com/Library/15926806-f0b7-487e-93a6-4e9367ec689f)."},{"content":"See Also","pos":[3909,3917]},{"content":"Floating-Point Support","pos":[3922,3944]},{"content":"ldiv, lldiv","pos":[4002,4013]},{"content":"imaxdiv","pos":[4069,4076]}],"content":"---\ntitle: \"div | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\napiname: \n  - \"div\"\napilocation: \n  - \"msvcrt.dll\"\n  - \"msvcr80.dll\"\n  - \"msvcr90.dll\"\n  - \"msvcr100.dll\"\n  - \"msvcr100_clr0400.dll\"\n  - \"msvcr110.dll\"\n  - \"msvcr110_clr0400.dll\"\n  - \"msvcr120.dll\"\n  - \"msvcr120_clr0400.dll\"\n  - \"ucrtbase.dll\"\n  - \"api-ms-win-crt-utility-l1-1-0.dll\"\napitype: \"DLLExport\"\nf1_keywords: \n  - \"div\"\ndev_langs: \n  - \"C++\"\n  - \"C\"\nhelpviewer_keywords: \n  - \"div function\"\n  - \"quotients, computing\"\n  - \"quotients\"\n  - \"dividing integers\"\n  - \"remainder computing\"\nms.assetid: 8ae80d97-54fd-499e-b14c-e30993b58119\ncaps.latest.revision: 15\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# div\nComputes the quotient and the remainder of two integer values.  \n  \n## Syntax  \n  \n```  \ndiv_t div(   \n   int numer,  \n   int denom   \n);  \nldiv_t div(  \n   long numer,  \n   long denom  \n); /* C++ only */   \nlldiv_t div(  \n   long long numer,  \n   long long denom  \n); /* C++ only */  \n```  \n  \n#### Parameters  \n `numer`  \n The numerator.  \n  \n `denom`  \n The denominator.  \n  \n## Return Value  \n `div` called by using arguments of type `int` returns a structure of type `div_t`, which comprises the quotient and the remainder. The return value of the overload with arguments of type `long` is `ldiv_t`. Both `div_t` and `ldiv_t` are defined in STDLIB.H.  \n  \n## Remarks  \n The `div` function divides `numer` by `denom` and thereby computes the quotient and the remainder. The [div_t](../../c-runtime-library/standard-types.md) structure contains the quotient, `int``quot`, and the remainder, `int``rem`. The sign of the quotient is the same as that of the mathematical quotient. Its absolute value is the largest integer that is less than the absolute value of the mathematical quotient. If the denominator is 0, the program terminates with an error message.  \n  \n The overloads that take arguments of type `long` or `long long` are only available to C++ code. The return type [ldiv_t](../../c-runtime-library/standard-types.md) contains the members `long``quot` and `long``rem`, and the return type [lldiv_t](../../c-runtime-library/standard-types.md) contains the members `long long quot` and `long long rem`, which have the same meanings as the members of `div_t`.  \n  \n## Requirements  \n  \n|Routine|Required header|  \n|-------------|---------------------|  \n|`div`|\\<stdlib.h>|  \n  \n For additional compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md).  \n  \n## Example  \n  \n```  \n// crt_div.c  \n// arguments: 876 13  \n  \n// This example takes two integers as command-line  \n// arguments and displays the results of the integer  \n// division. This program accepts two arguments on the  \n// command line following the program name, then calls  \n// div to divide the first argument by the second.  \n// Finally, it prints the structure members quot and rem.  \n//  \n  \n#include <stdlib.h>  \n#include <stdio.h>  \n#include <math.h>  \n  \nint main( int argc, char *argv[] )  \n{  \n   int x,y;  \n   div_t div_result;  \n  \n   x = atoi( argv[1] );  \n   y = atoi( argv[2] );  \n  \n   printf( \"x is %d, y is %d\\n\", x, y );  \n   div_result = div( x, y );  \n   printf( \"The quotient is %d, and the remainder is %d\\n\",  \n           div_result.quot, div_result.rem );  \n}  \n```  \n  \n```Output  \nx is 876, y is 13  \nThe quotient is 67, and the remainder is 5  \n```  \n  \n## .NET Framework Equivalent  \n Not applicable. To call the standard C function, use `PInvoke`. For more information, see [Platform Invoke Examples](http://msdn.microsoft.com/Library/15926806-f0b7-487e-93a6-4e9367ec689f).  \n  \n## See Also  \n [Floating-Point Support](../../c-runtime-library/floating-point-support.md)   \n [ldiv, lldiv](../../c-runtime-library/reference/ldiv-lldiv.md)   \n [imaxdiv](../../c-runtime-library/reference/imaxdiv.md)"}