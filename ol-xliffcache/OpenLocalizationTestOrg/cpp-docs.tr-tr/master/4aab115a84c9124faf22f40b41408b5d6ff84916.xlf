<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="tr-tr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-04506c2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4aab115a84c9124faf22f40b41408b5d6ff84916</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\mfc\servers-implementing-in-place-frame-windows.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d88ef0628b09ec50f9838a86fb3aac05540998d5</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a6e4724e9b19af51a9e83d7830ddd1d706fb8672</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Servers: Implementing In-Place Frame Windows | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Servers: Implementing In-Place Frame Windows</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This article explains what you must do to implement in-place frame windows in your visual editing server application if you do not use the application wizard to create your server application.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>In place of following the procedure outlined in this article, you could use an existing in-place frame-window class from either an application wizardâ€“generated application or a sample provided with Visual C++.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>To declare an in-place frame-window class</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Derive an in-place frame-window class from <ph id="ph1">`COleIPFrameWnd`</ph>.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Use the <ph id="ph1">`DECLARE_DYNCREATE`</ph> macro in your class header file.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Use the <ph id="ph1">`IMPLEMENT_DYNCREATE`</ph> macro in your class implementation (.cpp) file.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>This allows objects of this class to be created by the framework.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Declare a <ph id="ph1">`COleResizeBar`</ph> member in the frame-window class.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>This is needed if you want to support in-place resizing in server applications.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Declare an <ph id="ph1">`OnCreate`</ph> message handler (using the <bpt id="p1">**</bpt>Properties<ept id="p1">**</ept> window), and call <bpt id="p2">**</bpt>Create<ept id="p2">**</ept> for your <ph id="ph2">`COleResizeBar`</ph> member, if you've defined it.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>If you have a toolbar, declare a <ph id="ph1">`CToolBar`</ph> member in the frame-window class.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Override the <ph id="ph1">`OnCreateControlBars`</ph> member function to create a toolbar when the server is active in place.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>For example:</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>NVC_MFCOleServer#1</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>See the discussion of this code following step 5.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Include the header file for this in-place frame-window class in your main .cpp file.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>In <ph id="ph1">`InitInstance`</ph> for your application class, call the <ph id="ph2">`SetServerInfo`</ph> function of the document template object to specify the resources and in-place frame window to be used in open and in-place editing.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The series of function calls in the <bpt id="p1">**</bpt>if<ept id="p1">**</ept> statement creates the toolbar from the resources the server provided.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>At this point, the toolbar is part of the container's window hierarchy.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Because this toolbar is derived from <ph id="ph1">`CToolBar`</ph>, it will pass its messages to its owner, the container application's frame window, unless you change the owner.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>That is why the call to <ph id="ph1">`SetOwner`</ph> is necessary.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>This call changes the window where commands are sent to be the server's in-place frame window, causing the messages to be passed to the server.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>This allows the server to react to operations on the toolbar that it provides.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The ID for the toolbar bitmap should be the same as the other in-place resources defined in your server application.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Menus and Resources: Server Additions<ept id="p1">](../mfc/menus-and-resources-server-additions.md)</ept> for details.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>COleIPFrameWnd<ept id="p1">](../mfc/reference/coleipframewnd-class.md)</ept>, <bpt id="p2">[</bpt>COleResizeBar<ept id="p2">](../mfc/reference/coleresizebar-class.md)</ept>, and <bpt id="p3">[</bpt>CDocTemplate::SetServerInfo<ept id="p3">](../mfc/reference/cdoctemplate-class.md#cdoctemplate__setserverinfo)</ept> in the <bpt id="p4">*</bpt>Class Library Reference<ept id="p4">*</ept>.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Servers</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Servers: Implementing a Server</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Servers: Implementing Server Documents</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Servers: Server Items</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>