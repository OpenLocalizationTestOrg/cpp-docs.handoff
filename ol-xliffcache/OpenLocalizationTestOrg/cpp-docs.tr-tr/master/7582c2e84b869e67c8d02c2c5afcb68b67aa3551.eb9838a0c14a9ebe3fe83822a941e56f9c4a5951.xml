{"nodes":[{"pos":[12,50],"content":"CAnimationValue Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"CAnimationValue Class | Microsoft Docs","pos":[0,38]}]},{"pos":[664,685],"content":"CAnimationValue Class","linkify":"CAnimationValue Class","nodes":[{"content":"CAnimationValue Class","pos":[0,21]}]},{"content":"Implements the functionality of animation object that has one value.","pos":[686,754]},{"pos":[763,769],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[848,855],"content":"Members","linkify":"Members","nodes":[{"content":"Members","pos":[0,7]}]},{"pos":[865,884],"content":"Public Constructors","linkify":"Public Constructors","nodes":[{"content":"Public Constructors","pos":[0,19]}]},{"content":"Name","pos":[891,895]},{"content":"Description","pos":[896,907]},{"pos":[945,1014],"content":"<bpt id=\"p1\">[</bpt>CAnimationValue::CAnimationValue<ept id=\"p1\">](#canimationvalue__canimationvalue)</ept>","source":"[CAnimationValue::CAnimationValue](#canimationvalue__canimationvalue)"},{"content":"Overloaded.","pos":[1015,1026]},{"content":"Constructs a CAnimationValue object.","pos":[1027,1063]},{"pos":[1074,1088],"content":"Public Methods","linkify":"Public Methods","nodes":[{"content":"Public Methods","pos":[0,14]}]},{"content":"Name","pos":[1095,1099]},{"content":"Description","pos":[1100,1111]},{"pos":[1149,1214],"content":"<bpt id=\"p1\">[</bpt>CAnimationValue::AddTransition<ept id=\"p1\">](#canimationvalue__addtransition)</ept>","source":"[CAnimationValue::AddTransition](#canimationvalue__addtransition)"},{"content":"Adds a transition to be applied to a value.","pos":[1215,1258]},{"pos":[1263,1318],"content":"<bpt id=\"p1\">[</bpt>CAnimationValue::GetValue<ept id=\"p1\">](#canimationvalue__getvalue)</ept>","source":"[CAnimationValue::GetValue](#canimationvalue__getvalue)"},{"content":"Overloaded.","pos":[1319,1330]},{"content":"Retrieves the current value.","pos":[1331,1359]},{"pos":[1364,1425],"content":"<bpt id=\"p1\">[</bpt>CAnimationValue::GetVariable<ept id=\"p1\">](#canimationvalue__getvariable)</ept>","source":"[CAnimationValue::GetVariable](#canimationvalue__getvariable)"},{"content":"Provides access to encapsulated animation variable.","pos":[1426,1477]},{"pos":[1482,1551],"content":"<bpt id=\"p1\">[</bpt>CAnimationValue::SetDefaultValue<ept id=\"p1\">](#canimationvalue__setdefaultvalue)</ept>","source":"[CAnimationValue::SetDefaultValue](#canimationvalue__setdefaultvalue)"},{"content":"Sets default value.","pos":[1552,1571]},{"pos":[1582,1599],"content":"Protected Methods","linkify":"Protected Methods","nodes":[{"content":"Protected Methods","pos":[0,17]}]},{"content":"Name","pos":[1606,1610]},{"content":"Description","pos":[1611,1622]},{"pos":[1660,1747],"content":"<bpt id=\"p1\">[</bpt>CAnimationValue::GetAnimationVariableList<ept id=\"p1\">](#canimationvalue__getanimationvariablelist)</ept>","source":"[CAnimationValue::GetAnimationVariableList](#canimationvalue__getanimationvariablelist)"},{"content":"Puts the encapsulated animation variable into a list.","pos":[1748,1801]},{"content":"(Overrides <bpt id=\"p1\">[</bpt>CAnimationBaseObject::GetAnimationVariableList<ept id=\"p1\">](../../mfc/reference/canimationbaseobject-class.md#canimationbaseobject__getanimationvariablelist)</ept>.)","pos":[1802,1961],"source":" (Overrides [CAnimationBaseObject::GetAnimationVariableList](../../mfc/reference/canimationbaseobject-class.md#canimationbaseobject__getanimationvariablelist).)"},{"pos":[1972,1988],"content":"Public Operators","linkify":"Public Operators","nodes":[{"content":"Public Operators","pos":[0,16]}]},{"content":"Name","pos":[1995,1999]},{"content":"Description","pos":[2000,2011]},{"pos":[2049,2118],"content":"<bpt id=\"p1\">[</bpt>CAnimationValue::operator DOUBLE<ept id=\"p1\">](#canimationvalue__operator_double)</ept>","source":"[CAnimationValue::operator DOUBLE](#canimationvalue__operator_double)"},{"content":"Provides conversion between CAnimationValue and DOUBLE.","pos":[2119,2174]},{"pos":[2179,2246],"content":"<bpt id=\"p1\">[</bpt>CAnimationValue::operator INT32<ept id=\"p1\">](#canimationvalue__operator_int32)</ept>","source":"[CAnimationValue::operator INT32](#canimationvalue__operator_int32)"},{"content":"Provides conversion between CAnimationValue and INT32.","pos":[2247,2301]},{"pos":[2306,2365],"content":"<bpt id=\"p1\">[</bpt>CAnimationValue::operator=<ept id=\"p1\">](#canimationvalue__operator_eq)</ept>","source":"[CAnimationValue::operator=](#canimationvalue__operator_eq)"},{"content":"Overloaded.","pos":[2366,2377]},{"content":"Assigns an INT32 value to CAnimationValue.","pos":[2378,2420]},{"pos":[2431,2453],"content":"Protected Data Members","linkify":"Protected Data Members","nodes":[{"content":"Protected Data Members","pos":[0,22]}]},{"content":"Name","pos":[2460,2464]},{"content":"Description","pos":[2465,2476]},{"pos":[2514,2567],"content":"<bpt id=\"p1\">[</bpt>CAnimationValue::m_value<ept id=\"p1\">](#canimationvalue__m_value)</ept>","source":"[CAnimationValue::m_value](#canimationvalue__m_value)"},{"content":"The encapsulated animation variable that represents animation value.","pos":[2568,2636]},{"pos":[2646,2653],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The CAnimationValue class encapsulates a single CAnimationVariable object and can represent in applications a single animated value.","pos":[2657,2789]},{"content":"For example, you can use this class for animated transparency (fade effect), angle (to rotate objects), or for any other case when you need to create an animation depending on a single animated value.","pos":[2790,2990]},{"content":"To use this class in application, just instantiate an object of this class, add it to animation controller using CAnimationController::AddAnimationObject and call AddTransition for each transition to be applied to the value.","pos":[2991,3215]},{"pos":[3224,3245],"content":"Inheritance Hierarchy","linkify":"Inheritance Hierarchy","nodes":[{"content":"Inheritance Hierarchy","pos":[0,21]}]},{"pos":[3249,3296],"content":"<bpt id=\"p1\">[</bpt>CObject<ept id=\"p1\">](../../mfc/reference/cobject-class.md)</ept>","source":"[CObject](../../mfc/reference/cobject-class.md)"},{"pos":[3303,3376],"content":"<bpt id=\"p1\">[</bpt>CAnimationBaseObject<ept id=\"p1\">](../../mfc/reference/canimationbaseobject-class.md)</ept>","source":"[CAnimationBaseObject](../../mfc/reference/canimationbaseobject-class.md)"},{"pos":[3383,3446],"content":"<bpt id=\"p1\">[</bpt>CAnimationValue<ept id=\"p1\">](../../mfc/reference/canimationvalue-class.md)</ept>","source":"[CAnimationValue](../../mfc/reference/canimationvalue-class.md)"},{"pos":[3455,3467],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[3471,3507],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> afxanimationcontroller.h","source":"**Header:** afxanimationcontroller.h"},{"pos":[3517,3594],"content":"<bpt id=\"p1\">&lt;a name=\"canimationvalue__addtransition\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CAnimationValue::AddTransition","linkify":"<a name=\"canimationvalue__addtransition\"></a>  CAnimationValue::AddTransition","source":"<a name=\"canimationvalue__addtransition\"></a>  CAnimationValue::AddTransition"},{"content":"Adds a transition to be applied to a value.","pos":[3598,3641]},{"pos":[3716,3726],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"A pointer to transition object.","pos":[3747,3778]},{"pos":[3788,3795],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Call this function to add a transition to internal list of transitions to be applied to an animation variable.","pos":[3799,3909]},{"content":"When you add transitions, they are not applied immediately and stored in an internal list.","pos":[3910,4000]},{"content":"Transitions are applied (added to a storyboard for a particular value) when you call CAnimationController::AnimateGroup.","pos":[4001,4121]},{"pos":[4131,4212],"content":"<bpt id=\"p1\">&lt;a name=\"canimationvalue__canimationvalue\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CAnimationValue::CAnimationValue","linkify":"<a name=\"canimationvalue__canimationvalue\"></a>  CAnimationValue::CAnimationValue","source":"<a name=\"canimationvalue__canimationvalue\"></a>  CAnimationValue::CAnimationValue"},{"content":"Constructs a CAnimationValue object.","pos":[4216,4252]},{"pos":[4433,4443],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Specifies default value.","pos":[4468,4492]},{"content":"Specifies Group ID.","pos":[4513,4532]},{"content":"Specifies Object ID.","pos":[4554,4574]},{"content":"specifies user-defined data.","pos":[4597,4625]},{"pos":[4635,4642],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Constructs CAnimationValue object with default properties: default value, Group ID and Object ID are set to 0.","pos":[4646,4756]},{"pos":[4766,4865],"content":"<bpt id=\"p1\">&lt;a name=\"canimationvalue__getanimationvariablelist\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CAnimationValue::GetAnimationVariableList","linkify":"<a name=\"canimationvalue__getanimationvariablelist\"></a>  CAnimationValue::GetAnimationVariableList","source":"<a name=\"canimationvalue__getanimationvariablelist\"></a>  CAnimationValue::GetAnimationVariableList"},{"content":"Puts the encapsulated animation variable into a list.","pos":[4869,4922]},{"pos":[5050,5060],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"When the function returns, it contains a pointer to CAnimationVariable representing the animated value.","pos":[5073,5176]},{"pos":[5186,5253],"content":"<bpt id=\"p1\">&lt;a name=\"canimationvalue__getvalue\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CAnimationValue::GetValue","linkify":"<a name=\"canimationvalue__getvalue\"></a>  CAnimationValue::GetValue","source":"<a name=\"canimationvalue__getvalue\"></a>  CAnimationValue::GetValue"},{"content":"Retrieves the current value.","pos":[5257,5285]},{"pos":[5376,5386],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Output.","pos":[5404,5411]},{"content":"When the function returns it contains a current value of animation variable.","pos":[5412,5488]},{"content":"Output.","pos":[5507,5514]},{"content":"When the function returns it contains a current value of animation variable.","pos":[5515,5591]},{"pos":[5601,5613],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"TRUE if the current value was retrieved successfully; otherwise FALSE.","pos":[5617,5687]},{"pos":[5697,5704],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Call this function to retrieve the current value.","pos":[5708,5757]},{"content":"This implementation calls the encapsulated COM object, and if the call fails, this method returns the default value that was previously set in constructor or with SetDefaultValue.","pos":[5758,5937]},{"pos":[5947,6020],"content":"<bpt id=\"p1\">&lt;a name=\"canimationvalue__getvariable\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CAnimationValue::GetVariable","linkify":"<a name=\"canimationvalue__getvariable\"></a>  CAnimationValue::GetVariable","source":"<a name=\"canimationvalue__getvariable\"></a>  CAnimationValue::GetVariable"},{"content":"Provides access to encapsulated animation variable.","pos":[6024,6075]},{"pos":[6135,6147],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A reference to encapsulated animation variable.","pos":[6151,6198]},{"pos":[6208,6215],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Use this method to access the encapsulated animation variable.","pos":[6219,6281]},{"content":"From CAnimationVariable you get access to underlying IUIAnimationVariable object, whose pointer can be NULL if animation variable has not been created.","pos":[6282,6433]},{"pos":[6443,6508],"content":"<bpt id=\"p1\">&lt;a name=\"canimationvalue__m_value\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CAnimationValue::m_value","linkify":"<a name=\"canimationvalue__m_value\"></a>  CAnimationValue::m_value","source":"<a name=\"canimationvalue__m_value\"></a>  CAnimationValue::m_value"},{"content":"The encapsulated animation variable that represents animation value.","pos":[6512,6580]},{"pos":[6635,6716],"content":"<bpt id=\"p1\">&lt;a name=\"canimationvalue__operator_double\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CAnimationValue::operator DOUBLE","linkify":"<a name=\"canimationvalue__operator_double\"></a>  CAnimationValue::operator DOUBLE","source":"<a name=\"canimationvalue__operator_double\"></a>  CAnimationValue::operator DOUBLE"},{"content":"Provides conversion between CAnimationValue and DOUBLE.","pos":[6720,6775]},{"pos":[6820,6832],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Current value of Animation Value.","pos":[6836,6869]},{"pos":[6879,6886],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Provides conversion between CAnimationValue and DOUBLE.","pos":[6890,6945]},{"content":"This method internally calls GetValue and doesn't check for errors.","pos":[6946,7013]},{"content":"If GetValue fails, the returned value will contain a default value previously set in constructor or with SetDefaultValue.","pos":[7014,7135]},{"pos":[7145,7224],"content":"<bpt id=\"p1\">&lt;a name=\"canimationvalue__operator_int32\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CAnimationValue::operator INT32","linkify":"<a name=\"canimationvalue__operator_int32\"></a>  CAnimationValue::operator INT32","source":"<a name=\"canimationvalue__operator_int32\"></a>  CAnimationValue::operator INT32"},{"content":"Provides conversion between CAnimationValue and INT32.","pos":[7228,7282]},{"pos":[7326,7338],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Current value of Animation Value as integer.","pos":[7342,7386]},{"pos":[7396,7403],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Provides conversion between CAnimationValue and INT32.","pos":[7407,7461]},{"content":"This method internally calls GetValue and doesn't check for errors.","pos":[7462,7529]},{"content":"If GetValue fails, the returned value will contain a default value previously set in constructor or with SetDefaultValue.","pos":[7530,7651]},{"pos":[7661,7732],"content":"<bpt id=\"p1\">&lt;a name=\"canimationvalue__operator_eq\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CAnimationValue::operator=","linkify":"<a name=\"canimationvalue__operator_eq\"></a>  CAnimationValue::operator=","source":"<a name=\"canimationvalue__operator_eq\"></a>  CAnimationValue::operator="},{"content":"Assigns a DOUBLE value to CAnimationValue.","pos":[7736,7778]},{"pos":[7865,7875],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Specifies the value to be assigned to Animation Value.","pos":[7891,7945]},{"content":"Specifies the value to be assigned to Animation Value.","pos":[7962,8016]},{"pos":[8026,8033],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Assigns a DOUBLE value to CAnimationValue.","pos":[8037,8079]},{"content":"This value is set as a default value for encapsulated animation variable.","pos":[8080,8153]},{"content":"If you subscribed this animation object to events (ValueChanged or IntegerValueChanged), you need to re-enable these events.","pos":[8154,8278]},{"pos":[8288,8369],"content":"<bpt id=\"p1\">&lt;a name=\"canimationvalue__setdefaultvalue\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CAnimationValue::SetDefaultValue","linkify":"<a name=\"canimationvalue__setdefaultvalue\"></a>  CAnimationValue::SetDefaultValue","source":"<a name=\"canimationvalue__setdefaultvalue\"></a>  CAnimationValue::SetDefaultValue"},{"content":"Sets default value.","pos":[8373,8392]},{"pos":[8463,8473],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Specifies the default value.","pos":[8498,8526]},{"pos":[8536,8543],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Use this method to set a default value.","pos":[8547,8586]},{"content":"A default value is returned to application when animation has not been started and/or underlying COM object has not been created.","pos":[8587,8716]},{"content":"If the underlying COM object encapsulated in CAnimationVarible was already created, this method recreates it, therefore you might need to call EnableValueChanged/EnableIntegerValueChanged methods again.","pos":[8717,8919]},{"pos":[8928,8936],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"pos":[8940,8985],"content":"<bpt id=\"p1\">[</bpt>Classes<ept id=\"p1\">](../../mfc/reference/mfc-classes.md)</ept>","source":"[Classes](../../mfc/reference/mfc-classes.md)"}],"content":"---\ntitle: \"CAnimationValue Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"afxanimationcontroller/CAnimationValue\"\n  - \"CAnimationValue\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"CAnimationValue class\"\nms.assetid: 78c5ae19-ede5-4f20-bfbe-68b467b603c2\ncaps.latest.revision: 17\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# CAnimationValue Class\nImplements the functionality of animation object that has one value.  \n  \n## Syntax  \n  \n```  \nclass CAnimationValue : public CAnimationBaseObject;  \n```  \n  \n## Members  \n  \n### Public Constructors  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CAnimationValue::CAnimationValue](#canimationvalue__canimationvalue)|Overloaded. Constructs a CAnimationValue object.|  \n  \n### Public Methods  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CAnimationValue::AddTransition](#canimationvalue__addtransition)|Adds a transition to be applied to a value.|  \n|[CAnimationValue::GetValue](#canimationvalue__getvalue)|Overloaded. Retrieves the current value.|  \n|[CAnimationValue::GetVariable](#canimationvalue__getvariable)|Provides access to encapsulated animation variable.|  \n|[CAnimationValue::SetDefaultValue](#canimationvalue__setdefaultvalue)|Sets default value.|  \n  \n### Protected Methods  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CAnimationValue::GetAnimationVariableList](#canimationvalue__getanimationvariablelist)|Puts the encapsulated animation variable into a list. (Overrides [CAnimationBaseObject::GetAnimationVariableList](../../mfc/reference/canimationbaseobject-class.md#canimationbaseobject__getanimationvariablelist).)|  \n  \n### Public Operators  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CAnimationValue::operator DOUBLE](#canimationvalue__operator_double)|Provides conversion between CAnimationValue and DOUBLE.|  \n|[CAnimationValue::operator INT32](#canimationvalue__operator_int32)|Provides conversion between CAnimationValue and INT32.|  \n|[CAnimationValue::operator=](#canimationvalue__operator_eq)|Overloaded. Assigns an INT32 value to CAnimationValue.|  \n  \n### Protected Data Members  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CAnimationValue::m_value](#canimationvalue__m_value)|The encapsulated animation variable that represents animation value.|  \n  \n## Remarks  \n The CAnimationValue class encapsulates a single CAnimationVariable object and can represent in applications a single animated value. For example, you can use this class for animated transparency (fade effect), angle (to rotate objects), or for any other case when you need to create an animation depending on a single animated value. To use this class in application, just instantiate an object of this class, add it to animation controller using CAnimationController::AddAnimationObject and call AddTransition for each transition to be applied to the value.  \n  \n## Inheritance Hierarchy  \n [CObject](../../mfc/reference/cobject-class.md)  \n  \n [CAnimationBaseObject](../../mfc/reference/canimationbaseobject-class.md)  \n  \n [CAnimationValue](../../mfc/reference/canimationvalue-class.md)  \n  \n## Requirements  \n **Header:** afxanimationcontroller.h  \n  \n##  <a name=\"canimationvalue__addtransition\"></a>  CAnimationValue::AddTransition  \n Adds a transition to be applied to a value.  \n  \n```  \nvoid AddTransition(CBaseTransition* pTransition);\n```  \n  \n### Parameters  \n `pTransition`  \n A pointer to transition object.  \n  \n### Remarks  \n Call this function to add a transition to internal list of transitions to be applied to an animation variable. When you add transitions, they are not applied immediately and stored in an internal list. Transitions are applied (added to a storyboard for a particular value) when you call CAnimationController::AnimateGroup.  \n  \n##  <a name=\"canimationvalue__canimationvalue\"></a>  CAnimationValue::CAnimationValue  \n Constructs a CAnimationValue object.  \n  \n```  \nCAnimationValue();\n\n \nCAnimationValue(\n    DOUBLE dblDefaultValue,  \n    UINT32 nGroupID,  \n    UINT32 nObjectID = (UINT32)-1,  \n    DWORD dwUserData = 0);\n```  \n  \n### Parameters  \n `dblDefaultValue`  \n Specifies default value.  \n  \n `nGroupID`  \n Specifies Group ID.  \n  \n `nObjectID`  \n Specifies Object ID.  \n  \n `dwUserData`  \n specifies user-defined data.  \n  \n### Remarks  \n Constructs CAnimationValue object with default properties: default value, Group ID and Object ID are set to 0.  \n  \n##  <a name=\"canimationvalue__getanimationvariablelist\"></a>  CAnimationValue::GetAnimationVariableList  \n Puts the encapsulated animation variable into a list.  \n  \n```  \nvirtual void GetAnimationVariableList(\n    CList<CAnimationVariable*, \n    CAnimationVariable*>& lst);\n```  \n  \n### Parameters  \n `lst`  \n When the function returns, it contains a pointer to CAnimationVariable representing the animated value.  \n  \n##  <a name=\"canimationvalue__getvalue\"></a>  CAnimationValue::GetValue  \n Retrieves the current value.  \n  \n```  \nBOOL GetValue(DOUBLE& dblValue);\n\n \nBOOL GetValue(INT32& nValue);\n```  \n  \n### Parameters  \n `dblValue`  \n Output. When the function returns it contains a current value of animation variable.  \n  \n `nValue`  \n Output. When the function returns it contains a current value of animation variable.  \n  \n### Return Value  \n TRUE if the current value was retrieved successfully; otherwise FALSE.  \n  \n### Remarks  \n Call this function to retrieve the current value. This implementation calls the encapsulated COM object, and if the call fails, this method returns the default value that was previously set in constructor or with SetDefaultValue.  \n  \n##  <a name=\"canimationvalue__getvariable\"></a>  CAnimationValue::GetVariable  \n Provides access to encapsulated animation variable.  \n  \n```  \nCAnimationVariable& GetVariable();\n```  \n  \n### Return Value  \n A reference to encapsulated animation variable.  \n  \n### Remarks  \n Use this method to access the encapsulated animation variable. From CAnimationVariable you get access to underlying IUIAnimationVariable object, whose pointer can be NULL if animation variable has not been created.  \n  \n##  <a name=\"canimationvalue__m_value\"></a>  CAnimationValue::m_value  \n The encapsulated animation variable that represents animation value.  \n  \n```  \nCAnimationVariable m_value;  \n```  \n  \n##  <a name=\"canimationvalue__operator_double\"></a>  CAnimationValue::operator DOUBLE  \n Provides conversion between CAnimationValue and DOUBLE.  \n  \n```  \noperator DOUBLE();\n```   \n  \n### Return Value  \n Current value of Animation Value.  \n  \n### Remarks  \n Provides conversion between CAnimationValue and DOUBLE. This method internally calls GetValue and doesn't check for errors. If GetValue fails, the returned value will contain a default value previously set in constructor or with SetDefaultValue.  \n  \n##  <a name=\"canimationvalue__operator_int32\"></a>  CAnimationValue::operator INT32  \n Provides conversion between CAnimationValue and INT32.  \n  \n```  \noperator INT32();\n```   \n  \n### Return Value  \n Current value of Animation Value as integer.  \n  \n### Remarks  \n Provides conversion between CAnimationValue and INT32. This method internally calls GetValue and doesn't check for errors. If GetValue fails, the returned value will contain a default value previously set in constructor or with SetDefaultValue.  \n  \n##  <a name=\"canimationvalue__operator_eq\"></a>  CAnimationValue::operator=  \n Assigns a DOUBLE value to CAnimationValue.  \n  \n```  \nvoid operator=(DOUBLE dblVal);\n\n \nvoid operator=(INT32 nVal);\n```  \n  \n### Parameters  \n `dblVal`  \n Specifies the value to be assigned to Animation Value.  \n  \n `nVal`  \n Specifies the value to be assigned to Animation Value.  \n  \n### Remarks  \n Assigns a DOUBLE value to CAnimationValue. This value is set as a default value for encapsulated animation variable. If you subscribed this animation object to events (ValueChanged or IntegerValueChanged), you need to re-enable these events.  \n  \n##  <a name=\"canimationvalue__setdefaultvalue\"></a>  CAnimationValue::SetDefaultValue  \n Sets default value.  \n  \n```  \nvoid SetDefaultValue(DOUBLE dblDefaultValue);\n```  \n  \n### Parameters  \n `dblDefaultValue`  \n Specifies the default value.  \n  \n### Remarks  \n Use this method to set a default value. A default value is returned to application when animation has not been started and/or underlying COM object has not been created. If the underlying COM object encapsulated in CAnimationVarible was already created, this method recreates it, therefore you might need to call EnableValueChanged/EnableIntegerValueChanged methods again.  \n  \n## See Also  \n [Classes](../../mfc/reference/mfc-classes.md)\n"}