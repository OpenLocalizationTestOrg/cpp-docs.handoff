{"nodes":[{"pos":[12,59],"content":"CXMLAccessor::GetXMLColumnData | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"CXMLAccessor::GetXMLColumnData | Microsoft Docs","pos":[0,47]}]},{"content":"CXMLAccessor::GetXMLColumnData","pos":[783,813]},{"content":"Retrieves the column type information of a table as XML-formatted string data, by column.","pos":[814,903]},{"content":"Syntax","pos":[912,918]},{"content":"Parameters","pos":[1029,1039]},{"content":"[out] A reference to a string buffer containing the column type information to be retrieved.","pos":[1058,1150]},{"content":"The string is formatted with XML tag names that match the data store's column names.","pos":[1151,1235]},{"content":"Return Value","pos":[1244,1256]},{"pos":[1260,1297],"content":"One of the standard <ph id=\"ph1\">`HRESULT`</ph> values.","source":"One of the standard `HRESULT` values."},{"content":"Remarks","pos":[1306,1313]},{"content":"The following shows how the column type information is formatted in XML.","pos":[1317,1389]},{"content":"specifies the column's data type.","pos":[1397,1430]},{"content":"Note that the data types are based on OLE DB data types, not those of the database being accessed.","pos":[1431,1529]},{"content":"Requirements","pos":[1620,1632]},{"pos":[1636,1658],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> atldbcli.h","source":"**Header:** atldbcli.h"},{"content":"See Also","pos":[1667,1675]},{"content":"CXMLAccessor Class","pos":[1680,1698]}],"content":"---\ntitle: \"CXMLAccessor::GetXMLColumnData | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"ATL.CXMLAccessor.GetXMLColumnData\"\n  - \"CXMLAccessor::GetXMLColumnData\"\n  - \"CXMLAccessor.GetXMLColumnData\"\n  - \"ATL::CXMLAccessor::GetXMLColumnData\"\n  - \"GetXMLColumnData\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"GetXMLColumnData method\"\nms.assetid: 719e8efe-8758-4af7-a855-0e44ea196546\ncaps.latest.revision: 9\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# CXMLAccessor::GetXMLColumnData\nRetrieves the column type information of a table as XML-formatted string data, by column.  \n  \n## Syntax  \n  \n```  \n  \n      HRESULT GetXMLColumnData(   \n   CSimpleStringW& strOutput    \n) throw( );  \n```  \n  \n#### Parameters  \n `strOutput`  \n [out] A reference to a string buffer containing the column type information to be retrieved. The string is formatted with XML tag names that match the data store's column names.  \n  \n## Return Value  \n One of the standard `HRESULT` values.  \n  \n## Remarks  \n The following shows how the column type information is formatted in XML. `type` specifies the column's data type. Note that the data types are based on OLE DB data types, not those of the database being accessed.  \n  \n `<columninfo>`  \n  \n `<column type = I2/> ColumnName`  \n  \n `</columninfo>`  \n  \n## Requirements  \n **Header:** atldbcli.h  \n  \n## See Also  \n [CXMLAccessor Class](../../data/oledb/cxmlaccessor-class.md)"}