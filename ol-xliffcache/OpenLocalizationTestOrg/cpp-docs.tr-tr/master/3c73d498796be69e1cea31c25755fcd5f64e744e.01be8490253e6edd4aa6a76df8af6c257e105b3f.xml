{"nodes":[{"pos":[12,46],"content":"sections (OpenMP) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"sections (OpenMP) | Microsoft Docs","pos":[0,34]}]},{"pos":[624,641],"content":"sections (OpenMP)","linkify":"sections (OpenMP)","nodes":[{"content":"sections (OpenMP)","pos":[0,17]}]},{"content":"Identifies code sections to be divided among all threads.","pos":[642,699]},{"pos":[708,714],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[850,857],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"where,","pos":[861,867]},{"content":"<ph id=\"ph1\">`clause`</ph> (optional)","pos":[874,893],"source":"`clause` (optional)"},{"content":"Zero or more clauses.","pos":[897,918]},{"content":"See the Remarks section for a list of the clauses supported by <bpt id=\"p1\">**</bpt>sections<ept id=\"p1\">**</ept>.","pos":[919,995],"source":" See the Remarks section for a list of the clauses supported by **sections**."},{"pos":[1004,1011],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[1015,1090],"content":"The <bpt id=\"p1\">**</bpt>sections<ept id=\"p1\">**</ept> directive can contain zero or more <bpt id=\"p2\">**</bpt>section<ept id=\"p2\">**</ept> directives.","source":"The **sections** directive can contain zero or more **section** directives."},{"pos":[1097,1162],"content":"The <bpt id=\"p1\">**</bpt>sections<ept id=\"p1\">**</ept> directive supports the following OpenMP clauses:","source":"The **sections** directive supports the following OpenMP clauses:"},{"pos":[1172,1238],"content":"<bpt id=\"p1\">[</bpt>firstprivate<ept id=\"p1\">](../../../parallel/openmp/reference/firstprivate.md)</ept>","source":"[firstprivate](../../../parallel/openmp/reference/firstprivate.md)"},{"pos":[1248,1312],"content":"<bpt id=\"p1\">[</bpt>lastprivate<ept id=\"p1\">](../../../parallel/openmp/reference/lastprivate.md)</ept>","source":"[lastprivate](../../../parallel/openmp/reference/lastprivate.md)"},{"pos":[1322,1376],"content":"<bpt id=\"p1\">[</bpt>nowait<ept id=\"p1\">](../../../parallel/openmp/reference/nowait.md)</ept>","source":"[nowait](../../../parallel/openmp/reference/nowait.md)"},{"pos":[1386,1449],"content":"<bpt id=\"p1\">[</bpt>private<ept id=\"p1\">](../../../parallel/openmp/reference/private-openmp.md)</ept>","source":"[private](../../../parallel/openmp/reference/private-openmp.md)"},{"pos":[1459,1519],"content":"<bpt id=\"p1\">[</bpt>reduction<ept id=\"p1\">](../../../parallel/openmp/reference/reduction.md)</ept>","source":"[reduction](../../../parallel/openmp/reference/reduction.md)"},{"pos":[1526,1661],"content":"If <bpt id=\"p1\">**</bpt>parallel<ept id=\"p1\">**</ept> is also specified, <ph id=\"ph1\">`clause`</ph> can be any clause accepted by the <bpt id=\"p2\">**</bpt>parallel<ept id=\"p2\">**</ept> or <bpt id=\"p3\">**</bpt>sections<ept id=\"p3\">**</ept> directives, except <ph id=\"ph2\">`nowait`</ph>.","source":"If **parallel** is also specified, `clause` can be any clause accepted by the **parallel** or **sections** directives, except `nowait`."},{"pos":[1668,1775],"content":"For more information, see <bpt id=\"p1\">[</bpt>2.4.2 sections Construct<ept id=\"p1\">](../../../parallel/openmp/2-4-2-sections-construct.md)</ept>.","source":"For more information, see [2.4.2 sections Construct](../../../parallel/openmp/2-4-2-sections-construct.md)."},{"pos":[1784,1791],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[2225,2233],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"pos":[2237,2306],"content":"<bpt id=\"p1\">[</bpt>Directives<ept id=\"p1\">](../../../parallel/openmp/reference/openmp-directives.md)</ept>","source":"[Directives](../../../parallel/openmp/reference/openmp-directives.md)"}],"content":"---\ntitle: \"sections (OpenMP) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"section\"\n  - \"SECTIONS\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"sections OpenMP directive\"\nms.assetid: 4cd1d776-e198-470e-930a-01fb0ab0a0bd\ncaps.latest.revision: 11\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# sections (OpenMP)\nIdentifies code sections to be divided among all threads.  \n  \n## Syntax  \n  \n```  \n#pragma omp [parallel] sections [clauses]  \n{  \n   #pragma omp section  \n   {  \n      code_block   \n   }   \n}  \n```  \n  \n## Remarks  \n where,  \n  \n `clause` (optional)  \n Zero or more clauses. See the Remarks section for a list of the clauses supported by **sections**.  \n  \n## Remarks  \n The **sections** directive can contain zero or more **section** directives.  \n  \n The **sections** directive supports the following OpenMP clauses:  \n  \n-   [firstprivate](../../../parallel/openmp/reference/firstprivate.md)  \n  \n-   [lastprivate](../../../parallel/openmp/reference/lastprivate.md)  \n  \n-   [nowait](../../../parallel/openmp/reference/nowait.md)  \n  \n-   [private](../../../parallel/openmp/reference/private-openmp.md)  \n  \n-   [reduction](../../../parallel/openmp/reference/reduction.md)  \n  \n If **parallel** is also specified, `clause` can be any clause accepted by the **parallel** or **sections** directives, except `nowait`.  \n  \n For more information, see [2.4.2 sections Construct](../../../parallel/openmp/2-4-2-sections-construct.md).  \n  \n## Example  \n  \n```  \n// omp_sections.cpp  \n// compile with: /openmp   \n#include <stdio.h>  \n#include <omp.h>  \n  \nint main() {  \n    #pragma omp parallel sections num_threads(4)  \n    {  \n        printf_s(\"Hello from thread %d\\n\", omp_get_thread_num());  \n        #pragma omp section  \n        printf_s(\"Hello from thread %d\\n\", omp_get_thread_num());  \n    }  \n}  \n```  \n  \n```Output  \nHello from thread 0  \nHello from thread 0  \n```  \n  \n## See Also  \n [Directives](../../../parallel/openmp/reference/openmp-directives.md)"}