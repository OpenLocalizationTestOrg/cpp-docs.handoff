{"nodes":[{"pos":[12,55],"content":"valarray&lt;bool&gt; Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"valarray<ph id=\"ph1\">&amp;lt;</ph>bool<ph id=\"ph2\">&amp;gt;</ph> Class | Microsoft Docs","pos":[0,43],"source":"valarray&lt;bool&gt; Class | Microsoft Docs"}]},{"content":"valarray<ph id=\"ph1\">&amp;lt;</ph>bool<ph id=\"ph2\">&amp;gt;</ph> Class","pos":[706,732],"source":"valarray&lt;bool&gt; Class"},{"pos":[733,824],"content":"A specialized version of the template class <bpt id=\"p1\">**</bpt>valarray<ph id=\"ph1\">\\&lt;</ph>Type&gt;<ept id=\"p1\">**</ept> to elements of type <ph id=\"ph2\">`bool`</ph>.","source":"A specialized version of the template class **valarray\\<Type>** to elements of type `bool`."},{"content":"Syntax","pos":[833,839]},{"content":"Example","pos":[886,893]},{"content":"Requirements","pos":[2099,2111]},{"pos":[2115,2138],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> <ph id=\"ph1\">\\&lt;</ph>valarray&gt;","source":"**Header:** \\<valarray>"},{"pos":[2145,2163],"content":"<bpt id=\"p1\">**</bpt>Namespace:<ept id=\"p1\">**</ept> std","source":"**Namespace:** std"},{"content":"See Also","pos":[2172,2180]},{"content":"valarray Class","pos":[2185,2199]},{"content":"Thread Safety in the C++ Standard Library","pos":[2245,2286]}],"content":"---\ntitle: \"valarray&lt;bool&gt; Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"valarray<bool>\"\n  - \"valarray/std::valarray<bool>\"\n  - \"std::valarray<bool>\"\n  - \"std.valarray<bool>\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"valarray<bool> class\"\nms.assetid: fc0e7121-4758-4ea5-86c3-f04448f04acf\ncaps.latest.revision: 14\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# valarray&lt;bool&gt; Class\nA specialized version of the template class **valarray\\<Type>** to elements of type `bool`.  \n  \n## Syntax  \n  \n```  \nclass valarray<bool>  \n```  \n  \n## Example  \n  \n```cpp  \n// valarray_bool.cpp  \n// compile with: /EHsc  \n#include <valarray>  \n#include <iostream>  \n  \nint main( )  \n{  \n   using namespace std;  \n   int i;  \n  \n   valarray<int> vaL ( 10 ), vaR ( 10 );  \n   valarray<bool> vaBool ( 10 );  \n   for ( i = 0 ; i < 10 ; i += 2 )   \n      vaL [ i ] =  -i;  \n   for ( i = 1 ; i < 10 ; i += 2 )   \n      vaL [ i ] =  i;  \n   for ( i = 0 ; i < 10 ; i++ )   \n      vaR [ i ] =  i;  \n  \n   cout << \"The initial Left valarray is: ( \";  \n   for ( i = 0 ; i < 10 ; i++ )  \n      cout << vaL [ i ] << \" \";  \n   cout << \").\" << endl;  \n  \n   cout << \"The initial Right valarray is: ( \";  \n   for ( i = 0 ; i < 10 ; i++ )  \n      cout << vaR [ i ] << \" \";  \n   cout << \").\" << endl;  \n  \n   vaBool = ( vaL < vaR );  \n   cout << \"The result of the less-than comparison \"  \n   << \"test is the\\n valarray<bool>: ( \";  \n   for ( i = 0 ; i < 10 ; i++ )  \n      cout << vaBool [ i ] << \" \";  \n   cout << \").\" << endl;  \n}  \n\\* Output:   \nThe initial Left valarray is: ( 0 1 -2 3 -4 5 -6 7 -8 9 ).  \nThe initial Right valarray is: ( 0 1 2 3 4 5 6 7 8 9 ).  \nThe result of the less-than comparison test is the  \n valarray<bool>: ( 0 0 1 0 1 0 1 0 1 0 ).  \n*\\  \n```  \n  \n## Requirements  \n **Header:** \\<valarray>  \n  \n **Namespace:** std  \n  \n## See Also  \n [valarray Class](../standard-library/valarray-class.md)   \n [Thread Safety in the C++ Standard Library](../standard-library/thread-safety-in-the-cpp-standard-library.md)\n\n"}