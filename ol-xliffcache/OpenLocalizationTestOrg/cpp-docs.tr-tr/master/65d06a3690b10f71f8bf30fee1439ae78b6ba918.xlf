<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="tr-tr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-04506c2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">65d06a3690b10f71f8bf30fee1439ae78b6ba918</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\mfc\upgrading-an-existing-activex-control.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d175134c7d5b71f25c9afecb12090a728b105e74</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">215a6f955b68903daf515ae6dd0d9181b61817a5</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Upgrading an Existing ActiveX Control | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Upgrading an Existing ActiveX Control</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Existing ActiveX controls (formerly OLE controls) can be used on the Internet without modification.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>However, you may want to modify controls to improve their performance.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>When using your control on a Web page, there are additional considerations.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The .ocx file and all supporting files must be on the target machine or be downloaded across the Internet.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>This makes code size and download time an important consideration.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Downloads can be packaged in a signed .cab file.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>You can mark your control as safe for scripting, and as safe for initializing.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>This article discusses the following topics:</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Packaging Code for Downloading</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Marking a Control Safe for Scripting and Initializing</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Licensing Issues</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Signing Code</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Managing the Palette</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Internet Explorer Browser Safety Levels and Control Behavior</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>You can also add optimizations, as described in <bpt id="p1">[</bpt>ActiveX Controls: Optimization<ept id="p1">](../mfc/mfc-activex-controls-optimization.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Monikers can be used to download properties and large BLOBs asynchronously, as described in <bpt id="p1">[</bpt>ActiveX Controls on the Internet<ept id="p1">](../mfc/activex-controls-on-the-internet.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Packaging Code for Downloading</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>For more information on this subject, see the Knowledge Base article "Packaging MFC Controls for Use Over the Internet" (Q167158).</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>You can find Knowledge Base articles on the MSDN Library CD-ROM or at <bpt id="p1">[</bpt>http://support.microsoft.com/support<ept id="p1">](http://support.microsoft.com/support)</ept>.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The CODEBASE Tag</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>ActiveX controls are embedded in Web pages using the <ph id="ph1">`&lt;OBJECT&gt;`</ph> tag.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`CODEBASE`</ph> parameter of the <ph id="ph2">`&lt;OBJECT&gt;`</ph> tag specifies the location from which to download the control.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>can point at a number of different file types successfully.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Using the CODEBASE Tag with an OCX File</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>This solution downloads only the control's .ocx file, and requires any supporting DLLs to already be installed on the client machine.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>This will work for Internet Explorer and MFC ActiveX controls built with Visual C++, because Internet Explorer ships with the supporting DLLs for Visual C++ controls.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>If another Internet browser that is ActiveX control-capable is used to view this control, this solution will not work.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Using the CODEBASE Tag with an INF File</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>An .inf file will control the installation of an .ocx and its supporting files.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>This method is not recommended because it is not possible to sign an .inf file (see <bpt id="p1">[</bpt>Signing Code<ept id="p1">](#_core_signing_code)</ept> for pointers on code signing).</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Using the CODEBASE Tag with a CAB File</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Cabinet files are the recommended way to package ActiveX controls that use MFC.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Packaging an MFC ActiveX control in a cabinet file allows an .inf file to be included to control installation of the ActiveX control and any dependent DLLs (such as the MFC DLLs).</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Using a CAB file automatically compresses the code for quicker download.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>If you are using a .cab file for component download, it is faster to sign the entire .cab file than each individual component.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Creating CAB Files</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>You can download the Cabinet Development Kit from the Knowledge Base article <bpt id="p1">[</bpt>310618: Microsoft Cabinet Software Development Kit<ept id="p1">](http://go.microsoft.com/fwlink/linkid=148204)</ept>.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>In this kit you will find the necessary tools to construct cabinet files.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The cabinet file pointed to by <ph id="ph1">`CODEBASE`</ph> should contain the .ocx file for your ActiveX control and an .inf file to control its installation.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>You create the cabinet file by specifying the name of your control file and an .inf file.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Do not include dependent DLLs that may already exist on the system in this cabinet file.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>For example, the MFC DLLs are packaged in a separate cabinet file and referred to by the controlling .inf file.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>For details on how to create a CAB file, see <bpt id="p1">[</bpt>Creating a CAB File<ept id="p1">](http://msdn.microsoft.com/en-us/cc52fd09-bdf6-4410-a693-149a308f36a3)</ept>.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The INF File</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The following example, spindial.inf, lists the supporting files and the version information needed for the MFC Spindial control.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Notice the location for the MFC DLLs is a Microsoft Web site.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The mfc42.cab is provided and signed by Microsoft.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">\&lt;</ph>OBJECT&gt; Tag</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The following example illustrates using the <ph id="ph1">`&lt;OBJECT&gt;`</ph> tag to package the MFC Spindial sample control.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>In this case, spindial.cab will contain two files, spindial.ocx and spindial.inf.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The following command will build the cabinet file:</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`–s 6144`</ph> parameter reserves space in the cabinet for code signing.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The Version Tag</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Note here that the <ph id="ph1">`#Version`</ph> information specified with a CAB file applies to the control specified by the <ph id="ph2">`CLASSID`</ph> parameter of the <ph id="ph3">`&lt;OBJECT&gt;`</ph> tag.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Depending on the version specified, you can force download of your control.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>For complete specifications of the <ph id="ph1">`OBJECT`</ph> tag including the <ph id="ph2">`CODEBASE`</ph> parameter, see the W3C reference.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Marking a Control Safe for Scripting and Initializing</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>ActiveX controls used in Web pages should be marked as safe for scripting and safe for initializing if they are in fact safe.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>A safe control will not perform disk IO or access the memory or registers of a machine directly.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Controls can be marked as safe for scripting and safe for initializing via the registry.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Modify <ph id="ph1">`DllRegisterServer`</ph> to add entries similar to the following to mark the control as safe for scripting and persistence in the registry.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>An alternative method is to implement <ph id="ph1">`IObjectSafety`</ph>.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>You will define GUIDs (Globally Unique Identifiers) for your control to mark it safe for scripting and for persistence.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Controls that can be safely scripted will contain a registry entry similar to the following:</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Controls that can be safely initialized from persistent data are marked safe for persistence with a registry entry similar to:</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Add entries similar to the following (substituting your control's class ID in place of <ph id="ph1">`{06889605-B8D0-101A-91F1-00608CEAD5B3}`</ph>) to associate your keys with the following class ID:</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Licensing Issues</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>If you want to use a licensed control on a Web page, you must verify that the license agreement allows its use on the Internet and create a license package file (LPK) for it.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>A licensed ActiveX control will not load properly in an HTML page if the computer running Internet Explorer is not licensed to use the control.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>For example, if a licensed control was built using Visual C++, the HTML page using the control will load properly on the computer where the control was built, but it will not load on a different computer unless licensing information is included.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>To use a licensed ActiveX control in Internet Explorer, you must check the vendor's license agreement to verify that the license for the control permits:</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Redistribution</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Use of the control on the Internet</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Use of the Codebase parameter</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>To use a licensed control in an HTML page on a nonlicensed machine, you must generate a license package file (LPK).</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>The LPK file contains run-time licenses for licensed controls in the HTML page.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>This file is generated via LPK_TOOL.EXE which comes with the ActiveX SDK.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>For more information, see the MSDN Web site at <bpt id="p1">[</bpt>http://msdn.microsoft.com<ept id="p1">](http://msdn.microsoft.com)</ept>.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>To create an LPK file</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Run LPK_TOOL.EXE on a computer that is licensed to use the control.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>License Package Authoring Tool<ept id="p1">**</ept> dialog box, in the <bpt id="p2">**</bpt>Available Controls<ept id="p2">**</ept> list box, select each licensed ActiveX control that will be used on the HTML page and click <bpt id="p3">**</bpt>Add<ept id="p3">**</ept>.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Click <bpt id="p1">**</bpt>Save &amp; Exit<ept id="p1">**</ept> and type a name for the LPK file.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>This will create the LPK file and close the application.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>To embed a licensed control on an HTML page</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Edit your HTML page.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>In the HTML page, insert an <ph id="ph1">\&lt;</ph>OBJECT&gt; tag for the License Manager object before any other <ph id="ph2">\&lt;</ph>OBJECT&gt; tags.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>The License Manager is an ActiveX control that is installed with Internet Explorer.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Its class ID is shown below.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Set the LPKPath property of the License Manager object to the path and name of the LPK file.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>You can have only one LPK file per HTML page.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Insert the <ph id="ph1">\&lt;</ph>OBJECT&gt; tag for your licensed control after the License Manager tag.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>For example, an HTML page that displays the Microsoft Masked Edit control is shown below.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>The first class ID is for the License Manager control, the second class ID is for the Masked Edit control.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Change the tags to point to the relative path of the .lpk file you created earlier, and add an object tag including the class ID for your control.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Insert the <ph id="ph1">\&lt;</ph>EMBED&gt; attribute for your LPK file, if using the NCompass ActiveX plug-in.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>If your control may be viewed on other Active enabled browsers — for example, Netscape using the NCompass ActiveX plug-in — you must add the <ph id="ph1">\&lt;</ph>EMBED&gt; syntax as shown below.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>For more information about control licensing, see <bpt id="p1">[</bpt>ActiveX Controls: Licensing an ActiveX Control<ept id="p1">](../mfc/mfc-activex-controls-licensing-an-activex-control.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Signing Code</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Code signing is designed to identify the source of code, and to guarantee that the code has not changed since it was signed.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Depending on browser safety settings, users may be warned before the code is downloaded.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Users may choose to trust certain certificate owners or companies, in which case code signed by those trusted will be downloaded without warning.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Code is digitally signed to avoid tampering.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Make sure your final code is signed so that your control can be automatically downloaded without displaying trust warning messages.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>For details on how to sign code, check the documentation on Authenticode in the ActiveX SDK and see <bpt id="p1">[</bpt>Signing a CAB File<ept id="p1">](http://msdn.microsoft.com/en-us/04d8b47a-8f1c-4b54-ab90-730fcdc03747)</ept>.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Depending on trust and browser safety level settings, a certificate may be displayed to identify the signing person or company.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>If the safety level is none, or if the signed control's certificate owner is trusted, a certificate will not be displayed.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Internet Explorer Browser Safety Levels and Control Behavior<ept id="p1">](#_core_internet_explorer_browser_safety_levels_and_control_behavior)</ept> for details on how the browser safety setting will determine whether your control is downloaded and a certificate displayed.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Digital signing guarantees code has not changed since it's been signed.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>A hash of the code is taken and embedded in the certificate.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>This hash is later compared with a hash of the code taken after the code is downloaded but before it runs.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>Companies such as Verisign can supply private and public keys needed to sign code.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>The ActiveX SDK ships with MakeCert, a utility for creating test certificates.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Managing the Palette</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Containers determine the palette and make it available as an ambient property, <bpt id="p1">**</bpt>DISPID_AMBIENT_PALETTE<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>A container (for example, Internet Explorer) chooses a palette that is used by all ActiveX controls on a page to determine their own palette.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>This prevents display flickering and presents a consistent appearance.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>A control can override <ph id="ph1">`OnAmbientPropertyChange`</ph> to handle notification of changes to the palette.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>A control can override <ph id="ph1">`OnGetColorSet`</ph> to return a color set to draw the palette.</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>Containers use the return value to determine if a control is palette-aware.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>Under OCX 96 guidelines, a control must always realize its palette in the background.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Older containers that do not use the ambient palette property will send <ph id="ph1">`WM_QUERYNEWPALETTE`</ph> and <ph id="ph2">`WM_PALETTECHANGED`</ph> messages.</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>A control can override <ph id="ph1">`OnQueryNewPalette`</ph> and <ph id="ph2">`OnPaletteChanged`</ph> to handle these messages.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>Internet Explorer Browser Safety Levels and Control Behavior</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>A browser has options for safety level, configurable by the user.</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>Because Web pages can contain active content that might potentially harm a user's computer, browsers allow the user to select options for safety level.</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>Depending on the way a browser implements safety levels, a control may not be downloaded at all, or will display a certificate or a warning message to allow the user to choose at run time whether or not to download the control.</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>The behavior of ActiveX controls under high, medium, and low safety levels on Internet Explorer is listed below.</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>High Safety Mode</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>Unsigned controls will not be downloaded.</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>Signed controls will display a certificate if untrusted (a user can choose an option to always trust code from this certificate owner from now on).</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>Only controls marked as safe will have persistent data and/or be scriptable.</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>Medium Safety Mode</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>Unsigned controls will display a warning before downloading.</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>Signed controls will display a certificate if untrusted.</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>Controls not marked as safe will display a warning.</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>Low Safety Mode</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>Controls are downloaded without warning.</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>Scripting and persistence occur without warning.</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>MFC Internet Programming Tasks</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>MFC Internet Programming Basics</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>MFC ActiveX Controls: Licensing an ActiveX Control</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>