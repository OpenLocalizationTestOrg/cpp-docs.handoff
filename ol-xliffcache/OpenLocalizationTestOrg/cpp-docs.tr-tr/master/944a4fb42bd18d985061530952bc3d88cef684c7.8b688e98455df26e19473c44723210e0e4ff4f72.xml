{"nodes":[{"pos":[12,50],"content":"CBaseTransition Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"CBaseTransition Class | Microsoft Docs","pos":[0,38]}]},{"pos":[664,685],"content":"CBaseTransition Class","linkify":"CBaseTransition Class","nodes":[{"content":"CBaseTransition Class","pos":[0,21]}]},{"content":"Represents a basic transition.","pos":[686,716]},{"pos":[725,731],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[797,804],"content":"Members","linkify":"Members","nodes":[{"content":"Members","pos":[0,7]}]},{"pos":[814,833],"content":"Public Enumerations","linkify":"Public Enumerations","nodes":[{"content":"Public Enumerations","pos":[0,19]}]},{"content":"Name","pos":[840,844]},{"content":"Description","pos":[845,856]},{"pos":[894,987],"content":"<bpt id=\"p1\">[</bpt>CBaseTransition::TRANSITION_TYPE Enumeration<ept id=\"p1\">](#cbasetransition__transition_type_enumeration)</ept>","source":"[CBaseTransition::TRANSITION_TYPE Enumeration](#cbasetransition__transition_type_enumeration)"},{"content":"Defines the transition types currently supported by the MFC implementation of Windows Animation API.","pos":[988,1088]},{"pos":[1099,1118],"content":"Public Constructors","linkify":"Public Constructors","nodes":[{"content":"Public Constructors","pos":[0,19]}]},{"content":"Name","pos":[1125,1129]},{"content":"Description","pos":[1130,1141]},{"pos":[1179,1248],"content":"<bpt id=\"p1\">[</bpt>CBaseTransition::CBaseTransition<ept id=\"p1\">](#cbasetransition__cbasetransition)</ept>","source":"[CBaseTransition::CBaseTransition](#cbasetransition__cbasetransition)"},{"content":"Constructs a base transtion object.","pos":[1249,1284]},{"pos":[1289,1360],"content":"<bpt id=\"p1\">[</bpt>CBaseTransition::~CBaseTransition<ept id=\"p1\">](#cbasetransition__~cbasetransition)</ept>","source":"[CBaseTransition::~CBaseTransition](#cbasetransition__~cbasetransition)"},{"content":"The destructor.","pos":[1361,1376]},{"content":"Called when a transition object is being destroyed.","pos":[1377,1428]},{"pos":[1439,1453],"content":"Public Methods","linkify":"Public Methods","nodes":[{"content":"Public Methods","pos":[0,14]}]},{"content":"Name","pos":[1460,1464]},{"content":"Description","pos":[1465,1476]},{"pos":[1514,1583],"content":"<bpt id=\"p1\">[</bpt>CBaseTransition::AddToStoryboard<ept id=\"p1\">](#cbasetransition__addtostoryboard)</ept>","source":"[CBaseTransition::AddToStoryboard](#cbasetransition__addtostoryboard)"},{"content":"Adds a transition to a storyboard.","pos":[1584,1618]},{"pos":[1623,1714],"content":"<bpt id=\"p1\">[</bpt>CBaseTransition::AddToStoryboardAtKeyframes<ept id=\"p1\">](#cbasetransition__addtostoryboardatkeyframes)</ept>","source":"[CBaseTransition::AddToStoryboardAtKeyframes](#cbasetransition__addtostoryboardatkeyframes)"},{"content":"Adds a transition to a storyboard.","pos":[1715,1749]},{"pos":[1754,1803],"content":"<bpt id=\"p1\">[</bpt>CBaseTransition::Clear<ept id=\"p1\">](#cbasetransition__clear)</ept>","source":"[CBaseTransition::Clear](#cbasetransition__clear)"},{"content":"Releases encapsulated IUIAnimationTransition COM object.","pos":[1804,1860]},{"pos":[1865,1916],"content":"<bpt id=\"p1\">[</bpt>CBaseTransition::Create<ept id=\"p1\">](#cbasetransition__create)</ept>","source":"[CBaseTransition::Create](#cbasetransition__create)"},{"content":"Creates a COM transition.","pos":[1917,1942]},{"pos":[1947,2014],"content":"<bpt id=\"p1\">[</bpt>CBaseTransition::GetEndKeyframe<ept id=\"p1\">](#cbasetransition__getendkeyframe)</ept>","source":"[CBaseTransition::GetEndKeyframe](#cbasetransition__getendkeyframe)"},{"content":"Returns start keyframe.","pos":[2015,2038]},{"pos":[2043,2118],"content":"<bpt id=\"p1\">[</bpt>CBaseTransition::GetRelatedVariable<ept id=\"p1\">](#cbasetransition__getrelatedvariable)</ept>","source":"[CBaseTransition::GetRelatedVariable](#cbasetransition__getrelatedvariable)"},{"content":"Returns a pointer to related variable.","pos":[2119,2157]},{"pos":[2162,2233],"content":"<bpt id=\"p1\">[</bpt>CBaseTransition::GetStartKeyframe<ept id=\"p1\">](#cbasetransition__getstartkeyframe)</ept>","source":"[CBaseTransition::GetStartKeyframe](#cbasetransition__getstartkeyframe)"},{"content":"Returns start keyframe.","pos":[2234,2257]},{"pos":[2262,2327],"content":"<bpt id=\"p1\">[</bpt>CBaseTransition::GetTransition<ept id=\"p1\">](#cbasetransition__gettransition)</ept>","source":"[CBaseTransition::GetTransition](#cbasetransition__gettransition)"},{"content":"Overloaded.","pos":[2328,2339]},{"content":"Returns a pointer to underlying COM transition object.","pos":[2340,2394]},{"pos":[2399,2452],"content":"<bpt id=\"p1\">[</bpt>CBaseTransition::GetType<ept id=\"p1\">](#cbasetransition__gettype)</ept>","source":"[CBaseTransition::GetType](#cbasetransition__gettype)"},{"content":"Returns transition type.","pos":[2453,2477]},{"pos":[2482,2535],"content":"<bpt id=\"p1\">[</bpt>CBaseTransition::IsAdded<ept id=\"p1\">](#cbasetransition__isadded)</ept>","source":"[CBaseTransition::IsAdded](#cbasetransition__isadded)"},{"content":"Tells whether a transition has been added to a storyboard.","pos":[2536,2594]},{"pos":[2599,2662],"content":"<bpt id=\"p1\">[</bpt>CBaseTransition::SetKeyframes<ept id=\"p1\">](#cbasetransition__setkeyframes)</ept>","source":"[CBaseTransition::SetKeyframes](#cbasetransition__setkeyframes)"},{"content":"Sets keyframes for a transition.","pos":[2663,2695]},{"pos":[2700,2775],"content":"<bpt id=\"p1\">[</bpt>CBaseTransition::SetRelatedVariable<ept id=\"p1\">](#cbasetransition__setrelatedvariable)</ept>","source":"[CBaseTransition::SetRelatedVariable](#cbasetransition__setrelatedvariable)"},{"content":"Establishes a relationship between animation variable and transition.","pos":[2776,2845]},{"pos":[2856,2878],"content":"Protected Data Members","linkify":"Protected Data Members","nodes":[{"content":"Protected Data Members","pos":[0,22]}]},{"content":"Name","pos":[2885,2889]},{"content":"Description","pos":[2890,2901]},{"pos":[2939,2994],"content":"<bpt id=\"p1\">[</bpt>CBaseTransition::m_bAdded<ept id=\"p1\">](#cbasetransition__m_badded)</ept>","source":"[CBaseTransition::m_bAdded](#cbasetransition__m_badded)"},{"content":"Specifies whether a transition has been added to a storyboard.","pos":[2995,3057]},{"pos":[3062,3129],"content":"<bpt id=\"p1\">[</bpt>CBaseTransition::m_pEndKeyframe<ept id=\"p1\">](#cbasetransition__m_pendkeyframe)</ept>","source":"[CBaseTransition::m_pEndKeyframe](#cbasetransition__m_pendkeyframe)"},{"content":"Stores a pointer to the keyframe that specifies the end of the transition.","pos":[3130,3204]},{"pos":[3209,3284],"content":"<bpt id=\"p1\">[</bpt>CBaseTransition::m_pRelatedVariable<ept id=\"p1\">](#cbasetransition__m_prelatedvariable)</ept>","source":"[CBaseTransition::m_pRelatedVariable](#cbasetransition__m_prelatedvariable)"},{"content":"A pointer to an animation variable, which is animated with the transition stored in m_transition.","pos":[3285,3382]},{"pos":[3387,3458],"content":"<bpt id=\"p1\">[</bpt>CBaseTransition::m_pStartKeyframe<ept id=\"p1\">](#cbasetransition__m_pstartkeyframe)</ept>","source":"[CBaseTransition::m_pStartKeyframe](#cbasetransition__m_pstartkeyframe)"},{"content":"Stores a pointer to the keyframe that specifies the beginning of the transition.","pos":[3459,3539]},{"pos":[3544,3607],"content":"<bpt id=\"p1\">[</bpt>CBaseTransition::m_transition<ept id=\"p1\">](#cbasetransition__m_transition)</ept>","source":"[CBaseTransition::m_transition](#cbasetransition__m_transition)"},{"content":"Stores a pointer to IUIAnimationTransition.","pos":[3608,3651]},{"content":"NULL if a COM transition object has not been created.","pos":[3652,3705]},{"pos":[3710,3761],"content":"<bpt id=\"p1\">[</bpt>CBaseTransition::m_type<ept id=\"p1\">](#cbasetransition__m_type)</ept>","source":"[CBaseTransition::m_type](#cbasetransition__m_type)"},{"content":"Stores the transition type.","pos":[3762,3789]},{"pos":[3799,3806],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This class encapsulates IUIAnimationTransition interface and serves as a base class for all transitions.","pos":[3810,3914]},{"pos":[3923,3944],"content":"Inheritance Hierarchy","linkify":"Inheritance Hierarchy","nodes":[{"content":"Inheritance Hierarchy","pos":[0,21]}]},{"pos":[3948,3995],"content":"<bpt id=\"p1\">[</bpt>CObject<ept id=\"p1\">](../../mfc/reference/cobject-class.md)</ept>","source":"[CObject](../../mfc/reference/cobject-class.md)"},{"pos":[4002,4065],"content":"<bpt id=\"p1\">[</bpt>CBaseTransition<ept id=\"p1\">](../../mfc/reference/cbasetransition-class.md)</ept>","source":"[CBaseTransition](../../mfc/reference/cbasetransition-class.md)"},{"pos":[4074,4086],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[4090,4126],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> afxanimationcontroller.h","source":"**Header:** afxanimationcontroller.h"},{"pos":[4136,4223],"content":"<bpt id=\"p1\">&lt;a name=\"cbasetransition___dtorcbasetransition\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CBaseTransition::~CBaseTransition","linkify":"<a name=\"cbasetransition___dtorcbasetransition\"></a>  CBaseTransition::~CBaseTransition","source":"<a name=\"cbasetransition___dtorcbasetransition\"></a>  CBaseTransition::~CBaseTransition"},{"content":"The destructor.","pos":[4227,4242]},{"content":"Called when a transition object is being destroyed.","pos":[4243,4294]},{"pos":[4347,4428],"content":"<bpt id=\"p1\">&lt;a name=\"cbasetransition__addtostoryboard\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CBaseTransition::AddToStoryboard","linkify":"<a name=\"cbasetransition__addtostoryboard\"></a>  CBaseTransition::AddToStoryboard","source":"<a name=\"cbasetransition__addtostoryboard\"></a>  CBaseTransition::AddToStoryboard"},{"content":"Adds a transition to a storyboard.","pos":[4432,4466]},{"pos":[4550,4560],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"A pointer to storyboard, which will animate the related variable.","pos":[4581,4646]},{"pos":[4656,4668],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"TRUE, if transition was successfully added to a storyboard.","pos":[4672,4731]},{"pos":[4741,4748],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Applies the transition to the related variable in the storyboard.","pos":[4752,4817]},{"content":"If this is the first transition applied to this variable in this storyboard, the transition begins at the start of the storyboard.","pos":[4818,4948]},{"content":"Otherwise, the transition is appended to the transition added most recently to the variable.","pos":[4949,5041]},{"pos":[5051,5154],"content":"<bpt id=\"p1\">&lt;a name=\"cbasetransition__addtostoryboardatkeyframes\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CBaseTransition::AddToStoryboardAtKeyframes","linkify":"<a name=\"cbasetransition__addtostoryboardatkeyframes\"></a>  CBaseTransition::AddToStoryboardAtKeyframes","source":"<a name=\"cbasetransition__addtostoryboardatkeyframes\"></a>  CBaseTransition::AddToStoryboardAtKeyframes"},{"content":"Adds a transition to a storyboard.","pos":[5158,5192]},{"pos":[5287,5297],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"A pointer to storyboard, which will animate the related variable.","pos":[5318,5383]},{"pos":[5393,5405],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"TRUE, if transition was successfully added to a storyboard.","pos":[5409,5468]},{"pos":[5478,5485],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Applies the transition to the related variable in the storyboard.","pos":[5489,5554]},{"content":"If the start keyframe was specified, the transition begins at that keyframe.","pos":[5555,5631]},{"content":"If the end keyframe was specified, the transition begins at the start keyframe and and stops at the end keyframe.","pos":[5632,5745]},{"content":"If the transition was created with a duration parameter specified, that duration is overwritten with the duration of time between the start and end keyframes.","pos":[5746,5904]},{"content":"If no keyframe was specified, the transition is appended to the transition added most recently to the variable.","pos":[5905,6016]},{"pos":[6026,6107],"content":"<bpt id=\"p1\">&lt;a name=\"cbasetransition__cbasetransition\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CBaseTransition::CBaseTransition","linkify":"<a name=\"cbasetransition__cbasetransition\"></a>  CBaseTransition::CBaseTransition","source":"<a name=\"cbasetransition__cbasetransition\"></a>  CBaseTransition::CBaseTransition"},{"content":"Constructs a base transtion object.","pos":[6111,6146]},{"pos":[6190,6251],"content":"<bpt id=\"p1\">&lt;a name=\"cbasetransition__clear\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CBaseTransition::Clear","linkify":"<a name=\"cbasetransition__clear\"></a>  CBaseTransition::Clear","source":"<a name=\"cbasetransition__clear\"></a>  CBaseTransition::Clear"},{"content":"Releases encapsulated IUIAnimationTransition COM object.","pos":[6255,6311]},{"pos":[6350,6357],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This method should be called from a derived class's Create method in order to prevent IUITransition interface leak.","pos":[6361,6476]},{"pos":[6486,6549],"content":"<bpt id=\"p1\">&lt;a name=\"cbasetransition__create\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CBaseTransition::Create","linkify":"<a name=\"cbasetransition__create\"></a>  CBaseTransition::Create","source":"<a name=\"cbasetransition__create\"></a>  CBaseTransition::Create"},{"content":"Creates a COM transition.","pos":[6553,6578]},{"pos":[6723,6733],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"A pointer to transition library, which creates standard transitions.","pos":[6751,6819]},{"content":"It can be NULL for custom transitions.","pos":[6820,6858]},{"content":"A pointer to transition factory, which creates custom transitions.","pos":[6879,6945]},{"content":"It can be NULL for standard transitions.","pos":[6946,6986]},{"pos":[6996,7008],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"TRUE if a transition COM object was created successfully; otherwise FALSE.","pos":[7012,7086]},{"pos":[7096,7103],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This is a pure virtual function that must be overridden in a derived class.","pos":[7107,7182]},{"content":"It's called by the framework to instantiate the underlying COM transition object.","pos":[7183,7264]},{"pos":[7274,7353],"content":"<bpt id=\"p1\">&lt;a name=\"cbasetransition__getendkeyframe\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CBaseTransition::GetEndKeyframe","linkify":"<a name=\"cbasetransition__getendkeyframe\"></a>  CBaseTransition::GetEndKeyframe","source":"<a name=\"cbasetransition__getendkeyframe\"></a>  CBaseTransition::GetEndKeyframe"},{"content":"Returns start keyframe.","pos":[7357,7380]},{"pos":[7438,7450],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A valid pointer to a keyframe, or NULL if a transition should not be inserted between keyframes.","pos":[7454,7550]},{"pos":[7560,7567],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This method can be used to access a keyframe object that was previously set by SetKeyframes.","pos":[7571,7663]},{"content":"It's called by top level code when transitions are being added to storyboard.","pos":[7664,7741]},{"pos":[7751,7838],"content":"<bpt id=\"p1\">&lt;a name=\"cbasetransition__getrelatedvariable\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CBaseTransition::GetRelatedVariable","linkify":"<a name=\"cbasetransition__getrelatedvariable\"></a>  CBaseTransition::GetRelatedVariable","source":"<a name=\"cbasetransition__getrelatedvariable\"></a>  CBaseTransition::GetRelatedVariable"},{"content":"Returns a pointer to related variable.","pos":[7842,7880]},{"pos":[7947,7959],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A valid pointer to animation variable, or NULL if an animation variable has not been set by SetRelatedVariable.","pos":[7963,8074]},{"pos":[8084,8091],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This is an accessor to related animation variable.","pos":[8095,8145]},{"pos":[8155,8238],"content":"<bpt id=\"p1\">&lt;a name=\"cbasetransition__getstartkeyframe\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CBaseTransition::GetStartKeyframe","linkify":"<a name=\"cbasetransition__getstartkeyframe\"></a>  CBaseTransition::GetStartKeyframe","source":"<a name=\"cbasetransition__getstartkeyframe\"></a>  CBaseTransition::GetStartKeyframe"},{"content":"Returns start keyframe.","pos":[8242,8265]},{"pos":[8325,8337],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A valid pointer to a keyframe, or NULL if a transition should not start after a keyframe.","pos":[8341,8430]},{"pos":[8440,8447],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This method can be used to access a keyframe object that was previously set by SetKeyframes.","pos":[8451,8543]},{"content":"It's called by top level code when transitions are being added to storyboard.","pos":[8544,8621]},{"pos":[8631,8708],"content":"<bpt id=\"p1\">&lt;a name=\"cbasetransition__gettransition\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CBaseTransition::GetTransition","linkify":"<a name=\"cbasetransition__gettransition\"></a>  CBaseTransition::GetTransition","source":"<a name=\"cbasetransition__gettransition\"></a>  CBaseTransition::GetTransition"},{"content":"Returns a pointer to underlying COM transition object.","pos":[8712,8766]},{"pos":[8967,8977],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"A pointer to transition library, which creates standard transitions.","pos":[8995,9063]},{"content":"It can be NULL for custom transitions.","pos":[9064,9102]},{"content":"A pointer to transition factory, which creates custom transitions.","pos":[9123,9189]},{"content":"It can be NULL for standard transitions.","pos":[9190,9230]},{"pos":[9240,9252],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A valid pointer to IUIAnimationTransition or NULL if underlying transition can't be created.","pos":[9256,9348]},{"pos":[9358,9365],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This method returns a pointer to underlying COM transition object and creates it if necessary.","pos":[9369,9463]},{"pos":[9473,9538],"content":"<bpt id=\"p1\">&lt;a name=\"cbasetransition__gettype\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CBaseTransition::GetType","linkify":"<a name=\"cbasetransition__gettype\"></a>  CBaseTransition::GetType","source":"<a name=\"cbasetransition__gettype\"></a>  CBaseTransition::GetType"},{"content":"Returns transition type.","pos":[9542,9566]},{"pos":[9627,9639],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"One of TRANSITION_TYPE enumerated values.","pos":[9643,9684]},{"pos":[9694,9701],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This method can be used to identify a transition object by its type.","pos":[9705,9773]},{"content":"The type is set in a constructor in a derived class.","pos":[9774,9826]},{"pos":[9836,9901],"content":"<bpt id=\"p1\">&lt;a name=\"cbasetransition__isadded\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CBaseTransition::IsAdded","linkify":"<a name=\"cbasetransition__isadded\"></a>  CBaseTransition::IsAdded","source":"<a name=\"cbasetransition__isadded\"></a>  CBaseTransition::IsAdded"},{"content":"Tells whether a transition has been added to a storyboard.","pos":[9905,9963]},{"pos":[10004,10016],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Returns TRUE if a transition has been added to a storyboard, otherwise FALSE.","pos":[10020,10097]},{"pos":[10107,10114],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This flag is set internally when the top level code adds transitions to storyboard.","pos":[10118,10201]},{"pos":[10211,10278],"content":"<bpt id=\"p1\">&lt;a name=\"cbasetransition__m_badded\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CBaseTransition::m_bAdded","linkify":"<a name=\"cbasetransition__m_badded\"></a>  CBaseTransition::m_bAdded","source":"<a name=\"cbasetransition__m_badded\"></a>  CBaseTransition::m_bAdded"},{"content":"Specifies whether a transition has been added to a storyboard.","pos":[10282,10344]},{"pos":[10386,10465],"content":"<bpt id=\"p1\">&lt;a name=\"cbasetransition__m_pendkeyframe\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CBaseTransition::m_pEndKeyframe","linkify":"<a name=\"cbasetransition__m_pendkeyframe\"></a>  CBaseTransition::m_pEndKeyframe","source":"<a name=\"cbasetransition__m_pendkeyframe\"></a>  CBaseTransition::m_pEndKeyframe"},{"content":"Stores a pointer to the keyframe that specifies the end of the transition.","pos":[10469,10543]},{"pos":[10601,10688],"content":"<bpt id=\"p1\">&lt;a name=\"cbasetransition__m_prelatedvariable\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CBaseTransition::m_pRelatedVariable","linkify":"<a name=\"cbasetransition__m_prelatedvariable\"></a>  CBaseTransition::m_pRelatedVariable","source":"<a name=\"cbasetransition__m_prelatedvariable\"></a>  CBaseTransition::m_pRelatedVariable"},{"content":"A pointer to an animation variable, which is animated with the transition stored in m_transition.","pos":[10692,10789]},{"pos":[10856,10939],"content":"<bpt id=\"p1\">&lt;a name=\"cbasetransition__m_pstartkeyframe\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CBaseTransition::m_pStartKeyframe","linkify":"<a name=\"cbasetransition__m_pstartkeyframe\"></a>  CBaseTransition::m_pStartKeyframe","source":"<a name=\"cbasetransition__m_pstartkeyframe\"></a>  CBaseTransition::m_pStartKeyframe"},{"content":"Stores a pointer to the keyframe that specifies the beginning of the transition.","pos":[10943,11023]},{"pos":[11083,11158],"content":"<bpt id=\"p1\">&lt;a name=\"cbasetransition__m_transition\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CBaseTransition::m_transition","linkify":"<a name=\"cbasetransition__m_transition\"></a>  CBaseTransition::m_transition","source":"<a name=\"cbasetransition__m_transition\"></a>  CBaseTransition::m_transition"},{"content":"Stores a pointer to IUIAnimationTransition.","pos":[11162,11205]},{"content":"NULL if a COM transition object has not been created.","pos":[11206,11259]},{"pos":[11337,11400],"content":"<bpt id=\"p1\">&lt;a name=\"cbasetransition__m_type\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CBaseTransition::m_type","linkify":"<a name=\"cbasetransition__m_type\"></a>  CBaseTransition::m_type","source":"<a name=\"cbasetransition__m_type\"></a>  CBaseTransition::m_type"},{"content":"Stores the transition type.","pos":[11404,11431]},{"pos":[11482,11557],"content":"<bpt id=\"p1\">&lt;a name=\"cbasetransition__setkeyframes\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CBaseTransition::SetKeyframes","linkify":"<a name=\"cbasetransition__setkeyframes\"></a>  CBaseTransition::SetKeyframes","source":"<a name=\"cbasetransition__setkeyframes\"></a>  CBaseTransition::SetKeyframes"},{"content":"Sets keyframes for a transition.","pos":[11561,11593]},{"pos":[11706,11716],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"A keyframe that specifies the beginning of the transition.","pos":[11732,11790]},{"content":"A keyframe that specifies the end of the transition.","pos":[11807,11859]},{"pos":[11869,11876],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This method tells the transition to start after specified keyframe and, optionally, if pEnd is not NULL, end before the specified keyframe.","pos":[11880,12019]},{"content":"If the transition was created with a duration parameter specified, that duration is overwritten with the duration of time between the start and end keyframes.","pos":[12020,12178]},{"pos":[12188,12275],"content":"<bpt id=\"p1\">&lt;a name=\"cbasetransition__setrelatedvariable\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CBaseTransition::SetRelatedVariable","linkify":"<a name=\"cbasetransition__setrelatedvariable\"></a>  CBaseTransition::SetRelatedVariable","source":"<a name=\"cbasetransition__setrelatedvariable\"></a>  CBaseTransition::SetRelatedVariable"},{"content":"Establishes a relationship between animation variable and transition.","pos":[12279,12348]},{"pos":[12429,12439],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"A pointer to related animation variable.","pos":[12458,12498]},{"pos":[12508,12515],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Establishes a relationship between animation variable and transition.","pos":[12519,12588]},{"content":"A transition can be applied only to one variable.","pos":[12589,12638]},{"pos":[12648,12753],"content":"<bpt id=\"p1\">&lt;a name=\"cbasetransition__transition_type_enumeration\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CBaseTransition::TRANSITION_TYPE Enumeration","linkify":"<a name=\"cbasetransition__transition_type_enumeration\"></a>  CBaseTransition::TRANSITION_TYPE Enumeration","source":"<a name=\"cbasetransition__transition_type_enumeration\"></a>  CBaseTransition::TRANSITION_TYPE Enumeration"},{"content":"Defines the transition types currently supported by the MFC implementation of Windows Animation API.","pos":[12757,12857]},{"pos":[12906,12913],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"A transition type is set in the constructor of specific transition.","pos":[12917,12984]},{"content":"For example, CSinusoidalTransitionFromRange sets its type to SINUSOIDAL_FROM_RANGE.","pos":[12985,13068]},{"pos":[13077,13085],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"pos":[13089,13134],"content":"<bpt id=\"p1\">[</bpt>Classes<ept id=\"p1\">](../../mfc/reference/mfc-classes.md)</ept>","source":"[Classes](../../mfc/reference/mfc-classes.md)"}],"content":"---\ntitle: \"CBaseTransition Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"CBaseTransition\"\n  - \"afxanimationcontroller/CBaseTransition\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"CBaseTransition class\"\nms.assetid: dfe84007-bbc5-43b7-b5b8-fae9145573bf\ncaps.latest.revision: 17\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# CBaseTransition Class\nRepresents a basic transition.  \n  \n## Syntax  \n  \n```  \nclass CBaseTransition : public CObject;  \n```  \n  \n## Members  \n  \n### Public Enumerations  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CBaseTransition::TRANSITION_TYPE Enumeration](#cbasetransition__transition_type_enumeration)|Defines the transition types currently supported by the MFC implementation of Windows Animation API.|  \n  \n### Public Constructors  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CBaseTransition::CBaseTransition](#cbasetransition__cbasetransition)|Constructs a base transtion object.|  \n|[CBaseTransition::~CBaseTransition](#cbasetransition__~cbasetransition)|The destructor. Called when a transition object is being destroyed.|  \n  \n### Public Methods  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CBaseTransition::AddToStoryboard](#cbasetransition__addtostoryboard)|Adds a transition to a storyboard.|  \n|[CBaseTransition::AddToStoryboardAtKeyframes](#cbasetransition__addtostoryboardatkeyframes)|Adds a transition to a storyboard.|  \n|[CBaseTransition::Clear](#cbasetransition__clear)|Releases encapsulated IUIAnimationTransition COM object.|  \n|[CBaseTransition::Create](#cbasetransition__create)|Creates a COM transition.|  \n|[CBaseTransition::GetEndKeyframe](#cbasetransition__getendkeyframe)|Returns start keyframe.|  \n|[CBaseTransition::GetRelatedVariable](#cbasetransition__getrelatedvariable)|Returns a pointer to related variable.|  \n|[CBaseTransition::GetStartKeyframe](#cbasetransition__getstartkeyframe)|Returns start keyframe.|  \n|[CBaseTransition::GetTransition](#cbasetransition__gettransition)|Overloaded. Returns a pointer to underlying COM transition object.|  \n|[CBaseTransition::GetType](#cbasetransition__gettype)|Returns transition type.|  \n|[CBaseTransition::IsAdded](#cbasetransition__isadded)|Tells whether a transition has been added to a storyboard.|  \n|[CBaseTransition::SetKeyframes](#cbasetransition__setkeyframes)|Sets keyframes for a transition.|  \n|[CBaseTransition::SetRelatedVariable](#cbasetransition__setrelatedvariable)|Establishes a relationship between animation variable and transition.|  \n  \n### Protected Data Members  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CBaseTransition::m_bAdded](#cbasetransition__m_badded)|Specifies whether a transition has been added to a storyboard.|  \n|[CBaseTransition::m_pEndKeyframe](#cbasetransition__m_pendkeyframe)|Stores a pointer to the keyframe that specifies the end of the transition.|  \n|[CBaseTransition::m_pRelatedVariable](#cbasetransition__m_prelatedvariable)|A pointer to an animation variable, which is animated with the transition stored in m_transition.|  \n|[CBaseTransition::m_pStartKeyframe](#cbasetransition__m_pstartkeyframe)|Stores a pointer to the keyframe that specifies the beginning of the transition.|  \n|[CBaseTransition::m_transition](#cbasetransition__m_transition)|Stores a pointer to IUIAnimationTransition. NULL if a COM transition object has not been created.|  \n|[CBaseTransition::m_type](#cbasetransition__m_type)|Stores the transition type.|  \n  \n## Remarks  \n This class encapsulates IUIAnimationTransition interface and serves as a base class for all transitions.  \n  \n## Inheritance Hierarchy  \n [CObject](../../mfc/reference/cobject-class.md)  \n  \n [CBaseTransition](../../mfc/reference/cbasetransition-class.md)  \n  \n## Requirements  \n **Header:** afxanimationcontroller.h  \n  \n##  <a name=\"cbasetransition___dtorcbasetransition\"></a>  CBaseTransition::~CBaseTransition  \n The destructor. Called when a transition object is being destroyed.  \n  \n```  \nvirtual ~CBaseTransition();\n```  \n  \n##  <a name=\"cbasetransition__addtostoryboard\"></a>  CBaseTransition::AddToStoryboard  \n Adds a transition to a storyboard.  \n  \n```  \nBOOL AddToStoryboard(IUIAnimationStoryboard* pStoryboard);\n```  \n  \n### Parameters  \n `pStoryboard`  \n A pointer to storyboard, which will animate the related variable.  \n  \n### Return Value  \n TRUE, if transition was successfully added to a storyboard.  \n  \n### Remarks  \n Applies the transition to the related variable in the storyboard. If this is the first transition applied to this variable in this storyboard, the transition begins at the start of the storyboard. Otherwise, the transition is appended to the transition added most recently to the variable.  \n  \n##  <a name=\"cbasetransition__addtostoryboardatkeyframes\"></a>  CBaseTransition::AddToStoryboardAtKeyframes  \n Adds a transition to a storyboard.  \n  \n```  \nBOOL AddToStoryboardAtKeyframes(IUIAnimationStoryboard* pStoryboard);\n```  \n  \n### Parameters  \n `pStoryboard`  \n A pointer to storyboard, which will animate the related variable.  \n  \n### Return Value  \n TRUE, if transition was successfully added to a storyboard.  \n  \n### Remarks  \n Applies the transition to the related variable in the storyboard. If the start keyframe was specified, the transition begins at that keyframe. If the end keyframe was specified, the transition begins at the start keyframe and and stops at the end keyframe. If the transition was created with a duration parameter specified, that duration is overwritten with the duration of time between the start and end keyframes. If no keyframe was specified, the transition is appended to the transition added most recently to the variable.  \n  \n##  <a name=\"cbasetransition__cbasetransition\"></a>  CBaseTransition::CBaseTransition  \n Constructs a base transtion object.  \n  \n```  \nCBaseTransition();\n```  \n  \n##  <a name=\"cbasetransition__clear\"></a>  CBaseTransition::Clear  \n Releases encapsulated IUIAnimationTransition COM object.  \n  \n```  \nvoid Clear();\n```  \n  \n### Remarks  \n This method should be called from a derived class's Create method in order to prevent IUITransition interface leak.  \n  \n##  <a name=\"cbasetransition__create\"></a>  CBaseTransition::Create  \n Creates a COM transition.  \n  \n```  \nvirtual BOOL Create(\n    IUIAnimationTransitionLibrary* pLibrary,  \n    IUIAnimationTransitionFactory* pFactory) = 0;  \n```  \n  \n### Parameters  \n `pLibrary`  \n A pointer to transition library, which creates standard transitions. It can be NULL for custom transitions.  \n  \n `pFactory`  \n A pointer to transition factory, which creates custom transitions. It can be NULL for standard transitions.  \n  \n### Return Value  \n TRUE if a transition COM object was created successfully; otherwise FALSE.  \n  \n### Remarks  \n This is a pure virtual function that must be overridden in a derived class. It's called by the framework to instantiate the underlying COM transition object.  \n  \n##  <a name=\"cbasetransition__getendkeyframe\"></a>  CBaseTransition::GetEndKeyframe  \n Returns start keyframe.  \n  \n```  \nCBaseKeyFrame* GetEndKeyframe();\n```  \n  \n### Return Value  \n A valid pointer to a keyframe, or NULL if a transition should not be inserted between keyframes.  \n  \n### Remarks  \n This method can be used to access a keyframe object that was previously set by SetKeyframes. It's called by top level code when transitions are being added to storyboard.  \n  \n##  <a name=\"cbasetransition__getrelatedvariable\"></a>  CBaseTransition::GetRelatedVariable  \n Returns a pointer to related variable.  \n  \n```  \nCAnimationVariable* GetRelatedVariable();\n```  \n  \n### Return Value  \n A valid pointer to animation variable, or NULL if an animation variable has not been set by SetRelatedVariable.  \n  \n### Remarks  \n This is an accessor to related animation variable.  \n  \n##  <a name=\"cbasetransition__getstartkeyframe\"></a>  CBaseTransition::GetStartKeyframe  \n Returns start keyframe.  \n  \n```  \nCBaseKeyFrame* GetStartKeyframe();\n```  \n  \n### Return Value  \n A valid pointer to a keyframe, or NULL if a transition should not start after a keyframe.  \n  \n### Remarks  \n This method can be used to access a keyframe object that was previously set by SetKeyframes. It's called by top level code when transitions are being added to storyboard.  \n  \n##  <a name=\"cbasetransition__gettransition\"></a>  CBaseTransition::GetTransition  \n Returns a pointer to underlying COM transition object.  \n  \n```  \nIUIAnimationTransition* GetTransition(\n    IUIAnimationTransitionLibrary* pLibrary,  \n    IUIAnimationTransitionFactory* pFactory);\n\n \nIUIAnimationTransition* GetTransition();\n```  \n  \n### Parameters  \n `pLibrary`  \n A pointer to transition library, which creates standard transitions. It can be NULL for custom transitions.  \n  \n `pFactory`  \n A pointer to transition factory, which creates custom transitions. It can be NULL for standard transitions.  \n  \n### Return Value  \n A valid pointer to IUIAnimationTransition or NULL if underlying transition can't be created.  \n  \n### Remarks  \n This method returns a pointer to underlying COM transition object and creates it if necessary.  \n  \n##  <a name=\"cbasetransition__gettype\"></a>  CBaseTransition::GetType  \n Returns transition type.  \n  \n```  \nTRANSITION_TYPE GetType() const;\n\n \n```  \n  \n### Return Value  \n One of TRANSITION_TYPE enumerated values.  \n  \n### Remarks  \n This method can be used to identify a transition object by its type. The type is set in a constructor in a derived class.  \n  \n##  <a name=\"cbasetransition__isadded\"></a>  CBaseTransition::IsAdded  \n Tells whether a transition has been added to a storyboard.  \n  \n```  \nBOOL IsAdded();\n```  \n  \n### Return Value  \n Returns TRUE if a transition has been added to a storyboard, otherwise FALSE.  \n  \n### Remarks  \n This flag is set internally when the top level code adds transitions to storyboard.  \n  \n##  <a name=\"cbasetransition__m_badded\"></a>  CBaseTransition::m_bAdded  \n Specifies whether a transition has been added to a storyboard.  \n  \n```  \nBOOL m_bAdded;  \n```  \n  \n##  <a name=\"cbasetransition__m_pendkeyframe\"></a>  CBaseTransition::m_pEndKeyframe  \n Stores a pointer to the keyframe that specifies the end of the transition.  \n  \n```  \nCBaseKeyFrame* m_pEndKeyframe;  \n```  \n  \n##  <a name=\"cbasetransition__m_prelatedvariable\"></a>  CBaseTransition::m_pRelatedVariable  \n A pointer to an animation variable, which is animated with the transition stored in m_transition.  \n  \n```  \nCAnimationVariable* m_pRelatedVariable;  \n```  \n  \n##  <a name=\"cbasetransition__m_pstartkeyframe\"></a>  CBaseTransition::m_pStartKeyframe  \n Stores a pointer to the keyframe that specifies the beginning of the transition.  \n  \n```  \nCBaseKeyFrame* m_pStartKeyframe;  \n```  \n  \n##  <a name=\"cbasetransition__m_transition\"></a>  CBaseTransition::m_transition  \n Stores a pointer to IUIAnimationTransition. NULL if a COM transition object has not been created.  \n  \n```  \nATL::CComPtr<IUIAnimationTransition> m_transition;  \n```  \n  \n##  <a name=\"cbasetransition__m_type\"></a>  CBaseTransition::m_type  \n Stores the transition type.  \n  \n```  \nTRANSITION_TYPE m_type;  \n```  \n  \n##  <a name=\"cbasetransition__setkeyframes\"></a>  CBaseTransition::SetKeyframes  \n Sets keyframes for a transition.  \n  \n```  \nvoid SetKeyframes(\n    CBaseKeyFrame* pStart = NULL,  \n    CBaseKeyFrame* pEnd = NULL);\n```  \n  \n### Parameters  \n `pStart`  \n A keyframe that specifies the beginning of the transition.  \n  \n `pEnd`  \n A keyframe that specifies the end of the transition.  \n  \n### Remarks  \n This method tells the transition to start after specified keyframe and, optionally, if pEnd is not NULL, end before the specified keyframe. If the transition was created with a duration parameter specified, that duration is overwritten with the duration of time between the start and end keyframes.  \n  \n##  <a name=\"cbasetransition__setrelatedvariable\"></a>  CBaseTransition::SetRelatedVariable  \n Establishes a relationship between animation variable and transition.  \n  \n```  \nvoid SetRelatedVariable(CAnimationVariable* pVariable);\n```  \n  \n### Parameters  \n `pVariable`  \n A pointer to related animation variable.  \n  \n### Remarks  \n Establishes a relationship between animation variable and transition. A transition can be applied only to one variable.  \n  \n##  <a name=\"cbasetransition__transition_type_enumeration\"></a>  CBaseTransition::TRANSITION_TYPE Enumeration  \n Defines the transition types currently supported by the MFC implementation of Windows Animation API.  \n  \n```  \nenum TRANSITION_TYPE;  \n```  \n  \n### Remarks  \n A transition type is set in the constructor of specific transition. For example, CSinusoidalTransitionFromRange sets its type to SINUSOIDAL_FROM_RANGE.  \n  \n## See Also  \n [Classes](../../mfc/reference/mfc-classes.md)\n"}