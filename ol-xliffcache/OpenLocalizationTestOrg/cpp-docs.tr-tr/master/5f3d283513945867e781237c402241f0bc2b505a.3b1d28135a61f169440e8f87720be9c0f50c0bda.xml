{"nodes":[{"pos":[12,45],"content":"if Statement (C) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"if Statement (C) | Microsoft Docs","pos":[0,33]}]},{"content":"if Statement (C)","pos":[718,734]},{"content":"The <bpt id=\"p1\">**</bpt>if<ept id=\"p1\">**</ept> statement controls conditional branching.","pos":[735,787],"source":"The **if** statement controls conditional branching."},{"content":"The body of an <bpt id=\"p1\">**</bpt>if<ept id=\"p1\">**</ept> statement is executed if the value of the expression is nonzero.","pos":[788,874],"source":" The body of an **if** statement is executed if the value of the expression is nonzero."},{"content":"The syntax for the <bpt id=\"p1\">**</bpt>if<ept id=\"p1\">**</ept> statement has two forms.","pos":[875,925],"source":" The syntax for the **if** statement has two forms."},{"content":"Syntax","pos":[934,940]},{"content":"<bpt id=\"p1\">*</bpt>selection-statement<ept id=\"p1\">*</ept>:","pos":[944,966],"source":"*selection-statement*:"},{"content":"<bpt id=\"p1\"> **</bpt>if (<ept id=\"p1\">**</ept>  <bpt id=\"p2\">*</bpt>expression<ept id=\"p2\">*</ept>  <bpt id=\"p3\">**</bpt>)<ept id=\"p3\">**</ept>  <bpt id=\"p4\">*</bpt>statement<ept id=\"p4\">*</ept>","pos":[969,1012],"source":" **if (**  *expression*  **)**  *statement*"},{"pos":[1019,1084],"content":"<bpt id=\"p1\">**</bpt>if (<ept id=\"p1\">**</ept>  <bpt id=\"p2\">*</bpt>expression<ept id=\"p2\">*</ept>  <bpt id=\"p3\">**</bpt>)<ept id=\"p3\">**</ept>  <bpt id=\"p4\">*</bpt>statement<ept id=\"p4\">*</ept>  <bpt id=\"p5\">**</bpt>else<ept id=\"p5\">**</ept>  <bpt id=\"p6\">*</bpt>statement<ept id=\"p6\">*</ept>","source":"**if (**  *expression*  **)**  *statement*  **else**  *statement*"},{"pos":[1091,1234],"content":"In both forms of the <bpt id=\"p1\">**</bpt>if<ept id=\"p1\">**</ept> statement, the expressions, which can have any value except a structure, are evaluated, including all side effects.","source":"In both forms of the **if** statement, the expressions, which can have any value except a structure, are evaluated, including all side effects."},{"content":"In the first form of the syntax, if <bpt id=\"p1\">*</bpt>expression<ept id=\"p1\">*</ept> is true (nonzero), <bpt id=\"p2\">*</bpt>statement<ept id=\"p2\">*</ept> is executed.","pos":[1241,1333],"source":"In the first form of the syntax, if *expression* is true (nonzero), *statement* is executed."},{"content":"If <bpt id=\"p1\">*</bpt>expression<ept id=\"p1\">*</ept> is false, <bpt id=\"p2\">*</bpt>statement<ept id=\"p2\">*</ept> is ignored.","pos":[1334,1383],"source":" If *expression* is false, *statement* is ignored."},{"content":"In the second form of syntax, which uses <bpt id=\"p1\">**</bpt>else<ept id=\"p1\">**</ept>, the second <bpt id=\"p2\">*</bpt>statement<ept id=\"p2\">*</ept> is executed if <bpt id=\"p3\">*</bpt>expression<ept id=\"p3\">*</ept> is false.","pos":[1384,1495],"source":" In the second form of syntax, which uses **else**, the second *statement* is executed if *expression* is false."},{"content":"With both forms, control then passes from the <bpt id=\"p1\">**</bpt>if<ept id=\"p1\">**</ept> statement to the next statement in the program unless one of the statements contains a <bpt id=\"p2\">**</bpt>break<ept id=\"p2\">**</ept>, <bpt id=\"p3\">**</bpt>continue<ept id=\"p3\">**</ept>, or <ph id=\"ph1\">`goto`</ph>.","pos":[1496,1671],"source":" With both forms, control then passes from the **if** statement to the next statement in the program unless one of the statements contains a **break**, **continue**, or `goto`."},{"pos":[1678,1729],"content":"The following are examples of the <bpt id=\"p1\">**</bpt>if<ept id=\"p1\">**</ept> statement:","source":"The following are examples of the **if** statement:"},{"content":"In this example, the statement <ph id=\"ph1\">`y = x/i;`</ph> is executed if <ph id=\"ph2\">`i`</ph> is greater than 0.","pos":[1830,1909],"source":"In this example, the statement `y = x/i;` is executed if `i` is greater than 0."},{"content":"If <ph id=\"ph1\">`i`</ph> is less than or equal to 0, <ph id=\"ph2\">`i`</ph> is assigned to <ph id=\"ph3\">`x`</ph> and <ph id=\"ph4\">`f( x )`</ph> is assigned to <ph id=\"ph5\">`y`</ph>.","pos":[1910,2000],"source":" If `i` is less than or equal to 0, `i` is assigned to `x` and `f( x )` is assigned to `y`."},{"content":"Note that the statement forming the <bpt id=\"p1\">**</bpt>if<ept id=\"p1\">**</ept> clause ends with a semicolon.","pos":[2001,2073],"source":" Note that the statement forming the **if** clause ends with a semicolon."},{"content":"When nesting <bpt id=\"p1\">**</bpt>if<ept id=\"p1\">**</ept> statements and <bpt id=\"p2\">**</bpt>else<ept id=\"p2\">**</ept> clauses, use braces to group the statements and clauses into compound statements that clarify your intent.","pos":[2080,2230],"source":"When nesting **if** statements and **else** clauses, use braces to group the statements and clauses into compound statements that clarify your intent."},{"content":"If no braces are present, the compiler resolves ambiguities by associating each <bpt id=\"p1\">**</bpt>else<ept id=\"p1\">**</ept> with the closest <bpt id=\"p2\">**</bpt>if<ept id=\"p2\">**</ept> that lacks an <bpt id=\"p3\">**</bpt>else<ept id=\"p3\">**</ept>.","pos":[2231,2367],"source":" If no braces are present, the compiler resolves ambiguities by associating each **else** with the closest **if** that lacks an **else**."},{"content":"The <bpt id=\"p1\">**</bpt>else<ept id=\"p1\">**</ept> clause is associated with the inner <bpt id=\"p2\">**</bpt>if<ept id=\"p2\">**</ept> statement in this example.","pos":[2499,2581],"source":"The **else** clause is associated with the inner **if** statement in this example."},{"content":"If <ph id=\"ph1\">`i`</ph> is less than or equal to 0, no value is assigned to <ph id=\"ph2\">`x`</ph>.","pos":[2582,2645],"source":" If `i` is less than or equal to 0, no value is assigned to `x`."},{"content":"The braces surrounding the inner <bpt id=\"p1\">**</bpt>if<ept id=\"p1\">**</ept> statement in this example make the <bpt id=\"p2\">**</bpt>else<ept id=\"p2\">**</ept> clause part of the outer <bpt id=\"p3\">**</bpt>if<ept id=\"p3\">**</ept> statement.","pos":[2786,2912],"source":"The braces surrounding the inner **if** statement in this example make the **else** clause part of the outer **if** statement."},{"content":"If <ph id=\"ph1\">`i`</ph> is less than or equal to 0, <ph id=\"ph2\">`i`</ph> is assigned to <ph id=\"ph3\">`x`</ph>.","pos":[2913,2971],"source":" If `i` is less than or equal to 0, `i` is assigned to `x`."},{"content":"See Also","pos":[2980,2988]},{"content":"if-else Statement (C++)","pos":[2993,3016]}],"content":"---\ntitle: \"if Statement (C) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"else\"\n  - \"if\"\ndev_langs: \n  - \"C++\"\n  - \"C\"\nhelpviewer_keywords: \n  - \"if keyword [C]\"\n  - \"else clauses\"\n  - \"else keyword [C]\"\n  - \"if keyword [C], if statement syntax\"\n  - \"nested statements\"\nms.assetid: d7fc16a0-fdbc-4f39-b596-76e1ca4ad4a5\ncaps.latest.revision: 7\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# if Statement (C)\nThe **if** statement controls conditional branching. The body of an **if** statement is executed if the value of the expression is nonzero. The syntax for the **if** statement has two forms.  \n  \n## Syntax  \n *selection-statement*:  \n **if (**  *expression*  **)**  *statement*  \n  \n **if (**  *expression*  **)**  *statement*  **else**  *statement*  \n  \n In both forms of the **if** statement, the expressions, which can have any value except a structure, are evaluated, including all side effects.  \n  \n In the first form of the syntax, if *expression* is true (nonzero), *statement* is executed. If *expression* is false, *statement* is ignored. In the second form of syntax, which uses **else**, the second *statement* is executed if *expression* is false. With both forms, control then passes from the **if** statement to the next statement in the program unless one of the statements contains a **break**, **continue**, or `goto`.  \n  \n The following are examples of the **if** statement:  \n  \n```  \nif ( i > 0 )  \n    y = x / i;  \nelse   \n{  \n    x = i;  \n    y = f( x );  \n}  \n```  \n  \n In this example, the statement `y = x/i;` is executed if `i` is greater than 0. If `i` is less than or equal to 0, `i` is assigned to `x` and `f( x )` is assigned to `y`. Note that the statement forming the **if** clause ends with a semicolon.  \n  \n When nesting **if** statements and **else** clauses, use braces to group the statements and clauses into compound statements that clarify your intent. If no braces are present, the compiler resolves ambiguities by associating each **else** with the closest **if** that lacks an **else**.  \n  \n```  \nif ( i > 0 )           /* Without braces */  \n    if ( j > i )  \n        x = j;  \n    else  \n        x = i;  \n```  \n  \n The **else** clause is associated with the inner **if** statement in this example. If `i` is less than or equal to 0, no value is assigned to `x`.  \n  \n```  \nif ( i > 0 )   \n{                      /* With braces */  \n    if ( j > i )  \n        x = j;  \n}  \nelse  \n    x = i;  \n```  \n  \n The braces surrounding the inner **if** statement in this example make the **else** clause part of the outer **if** statement. If `i` is less than or equal to 0, `i` is assigned to `x`.  \n  \n## See Also  \n [if-else Statement (C++)](../cpp/if-else-statement-cpp.md)"}