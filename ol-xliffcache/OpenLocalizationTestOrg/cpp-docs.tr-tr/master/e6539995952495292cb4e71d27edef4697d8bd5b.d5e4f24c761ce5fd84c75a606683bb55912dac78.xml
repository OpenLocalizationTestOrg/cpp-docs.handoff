{"nodes":[{"pos":[12,51],"content":"stack::empty (STL-CLR) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"stack::empty (STL-CLR) | Microsoft Docs","pos":[0,39]}]},{"content":"stack::empty (STL/CLR)","pos":[626,648]},{"content":"Tests whether no elements are present.","pos":[649,687]},{"content":"Syntax","pos":[696,702]},{"content":"Remarks","pos":[742,749]},{"content":"The member function returns true for an empty controlled sequence.","pos":[753,819]},{"content":"It is equivalent to <bpt id=\"p1\">[</bpt>stack::size (STL/CLR)<ept id=\"p1\">](../dotnet/stack-size-stl-clr.md)</ept><ph id=\"ph1\">`() == 0`</ph>.","pos":[820,906],"source":" It is equivalent to [stack::size (STL/CLR)](../dotnet/stack-size-stl-clr.md)`() == 0`."},{"content":"You use it to test whether the stack is empty.","pos":[907,953]},{"content":"Example","pos":[962,969]},{"content":"Requirements","pos":[1877,1889]},{"pos":[1893,1920],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> <ph id=\"ph1\">\\&lt;</ph>cliext/stack&gt;","source":"**Header:** \\<cliext/stack>"},{"pos":[1927,1948],"content":"<bpt id=\"p1\">**</bpt>Namespace:<ept id=\"p1\">**</ept> cliext","source":"**Namespace:** cliext"},{"content":"See Also","pos":[1957,1965]},{"content":"stack (STL/CLR)","pos":[1970,1985]},{"content":"stack::size (STL/CLR)","pos":[2020,2041]}],"content":"---\ntitle: \"stack::empty (STL-CLR) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"cliext::stack::empty\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"empty member [STL/CLR]\"\nms.assetid: 30bb4ec6-e7a1-4137-99ba-0e0ebdf31baf\ncaps.latest.revision: 16\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# stack::empty (STL/CLR)\nTests whether no elements are present.  \n  \n## Syntax  \n  \n```  \nbool empty();  \n```  \n  \n## Remarks  \n The member function returns true for an empty controlled sequence. It is equivalent to [stack::size (STL/CLR)](../dotnet/stack-size-stl-clr.md)`() == 0`. You use it to test whether the stack is empty.  \n  \n## Example  \n  \n```  \n// cliext_stack_empty.cpp   \n// compile with: /clr   \n#include <cliext/stack>   \n  \ntypedef cliext::stack<wchar_t> Mystack;   \nint main()   \n    {   \n    Mystack c1;   \n    c1.push(L'a');   \n    c1.push(L'b');   \n    c1.push(L'c');   \n  \n// display initial contents \" a b c\"   \n    for each (wchar_t elem in c1.get_container())   \n        System::Console::Write(\" {0}\", elem);   \n    System::Console::WriteLine();   \n    System::Console::WriteLine(\"size() = {0}\", c1.size());   \n    System::Console::WriteLine(\"empty() = {0}\", c1.empty());   \n  \n// clear the container and reinspect   \n    c1.pop();   \n    c1.pop();   \n    c1.pop();   \n    System::Console::WriteLine(\"size() = {0}\", c1.size());   \n    System::Console::WriteLine(\"empty() = {0}\", c1.empty());   \n    return (0);   \n    }  \n  \n```  \n  \n```Output  \n a b c  \nsize() = 3  \nempty() = False  \nsize() = 0  \nempty() = True  \n```  \n  \n## Requirements  \n **Header:** \\<cliext/stack>  \n  \n **Namespace:** cliext  \n  \n## See Also  \n [stack (STL/CLR)](../dotnet/stack-stl-clr.md)   \n [stack::size (STL/CLR)](../dotnet/stack-size-stl-clr.md)"}