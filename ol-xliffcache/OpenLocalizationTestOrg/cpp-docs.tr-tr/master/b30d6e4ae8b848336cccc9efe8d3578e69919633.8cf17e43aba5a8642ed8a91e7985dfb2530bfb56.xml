{"nodes":[{"pos":[12,68],"content":"collection_adapter::operator= (STL-CLR) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"collection_adapter::operator= (STL-CLR) | Microsoft Docs","pos":[0,56]}]},{"content":"collection_adapter::operator= (STL/CLR)","pos":[663,702]},{"content":"Replaces the stored BCL handle.","pos":[703,734]},{"content":"Syntax","pos":[743,749]},{"content":"Parameters","pos":[847,857]},{"content":"right","pos":[861,866]},{"content":"Adapter to copy.","pos":[870,886]},{"content":"Remarks","pos":[895,902]},{"content":"The member operator copies <ph id=\"ph1\">`right`</ph> to the object, then returns <ph id=\"ph2\">`*this`</ph>.","pos":[906,977],"source":"The member operator copies `right` to the object, then returns `*this`."},{"content":"You use it to replace the stored BCL handle with a copy of the stored BCL handle in <ph id=\"ph1\">`right`</ph>.","pos":[978,1070],"source":" You use it to replace the stored BCL handle with a copy of the stored BCL handle in `right`."},{"content":"Example","pos":[1079,1086]},{"content":"Requirements","pos":[1916,1928]},{"pos":[1932,1961],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> <ph id=\"ph1\">\\&lt;</ph>cliext/adapter&gt;","source":"**Header:** \\<cliext/adapter>"},{"pos":[1968,1989],"content":"<bpt id=\"p1\">**</bpt>Namespace:<ept id=\"p1\">**</ept> cliext","source":"**Namespace:** cliext"},{"content":"See Also","pos":[1998,2006]},{"content":"collection_adapter (STL/CLR)","pos":[2011,2039]}],"content":"---\ntitle: \"collection_adapter::operator= (STL-CLR) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"cliext::collection_adapter::operator=\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"operator= member [STL/CLR]\"\nms.assetid: 45365a33-3b56-4cb7-962f-81c20d8901d3\ncaps.latest.revision: 9\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# collection_adapter::operator= (STL/CLR)\nReplaces the stored BCL handle.  \n  \n## Syntax  \n  \n```  \ncollection_adapter<Coll>% operator=(collection_adapter<Coll>% right);  \n```  \n  \n#### Parameters  \n right  \n Adapter to copy.  \n  \n## Remarks  \n The member operator copies `right` to the object, then returns `*this`. You use it to replace the stored BCL handle with a copy of the stored BCL handle in `right`.  \n  \n## Example  \n  \n```  \n// cliext_collection_adapter_operator_as.cpp   \n// compile with: /clr   \n#include <cliext/adapter>   \n#include <cliext/deque>   \n  \ntypedef cliext::collection_adapter<   \n    System::Collections::ICollection> Mycoll;   \nint main()   \n    {   \n    cliext::deque<wchar_t> d1;   \n    d1.push_back(L'a');   \n    d1.push_back(L'b');   \n    d1.push_back(L'c');   \n    Mycoll c1(%d1);   \n  \n// display initial contents \" a b c\"   \n    for each (wchar_t elem in c1)   \n        System::Console::Write(\" {0}\", elem);   \n    System::Console::WriteLine();   \n  \n// assign to a new container   \n    Mycoll c2;   \n    c2 = c1;   \n    for each (wchar_t elem in c2)   \n        System::Console::Write(\" {0}\", elem);   \n    System::Console::WriteLine();   \n    return (0);   \n    }  \n  \n```  \n  \n```Output  \na b c  \na b c  \n```  \n  \n## Requirements  \n **Header:** \\<cliext/adapter>  \n  \n **Namespace:** cliext  \n  \n## See Also  \n [collection_adapter (STL/CLR)](../dotnet/collection-adapter-stl-clr.md)"}