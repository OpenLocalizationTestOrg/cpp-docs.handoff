{"nodes":[{"pos":[12,55],"content":"map::lower_bound (STL-CLR) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"map::lower_bound (STL-CLR) | Microsoft Docs","pos":[0,43]}]},{"content":"map::lower_bound (STL/CLR)","pos":[640,666]},{"content":"Finds beginning of range that matches a specified key.","pos":[667,721]},{"content":"Syntax","pos":[730,736]},{"content":"Parameters","pos":[800,810]},{"content":"key","pos":[814,817]},{"content":"Key value to search for.","pos":[821,845]},{"content":"Remarks","pos":[854,861]},{"content":"The member function determines the first element <ph id=\"ph1\">`X`</ph> in the controlled sequence that has equivalent ordering to <ph id=\"ph2\">`key`</ph>.","pos":[865,983],"source":"The member function determines the first element `X` in the controlled sequence that has equivalent ordering to `key`."},{"content":"If no such element exists, it returns <bpt id=\"p1\">[</bpt>map::end (STL/CLR)<ept id=\"p1\">](../dotnet/map-end-stl-clr.md)</ept><ph id=\"ph1\">`()`</ph>; otherwise it returns an iterator that designates <ph id=\"ph2\">`X`</ph>.","pos":[984,1131],"source":" If no such element exists, it returns [map::end (STL/CLR)](../dotnet/map-end-stl-clr.md)`()`; otherwise it returns an iterator that designates `X`."},{"content":"You use it to locate the beginning of a sequence of elements currently in the controlled sequence that match a specified key.","pos":[1132,1257]},{"content":"Example","pos":[1266,1273]},{"content":"Requirements","pos":[2386,2398]},{"pos":[2402,2427],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> <ph id=\"ph1\">\\&lt;</ph>cliext/map&gt;","source":"**Header:** \\<cliext/map>"},{"pos":[2434,2455],"content":"<bpt id=\"p1\">**</bpt>Namespace:<ept id=\"p1\">**</ept> cliext","source":"**Namespace:** cliext"},{"content":"See Also","pos":[2464,2472]},{"content":"map (STL/CLR)","pos":[2477,2490]},{"content":"map::count (STL/CLR)","pos":[2523,2543]},{"content":"map::equal_range (STL/CLR)","pos":[2582,2608]},{"content":"map::find (STL/CLR)","pos":[2653,2672]},{"content":"map::upper_bound (STL/CLR)","pos":[2710,2736]}],"content":"---\ntitle: \"map::lower_bound (STL-CLR) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"cliext::map::lower_bound\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"lower_bound member [STL/CLR]\"\nms.assetid: 959651a0-f949-4cc1-859b-248b6930f16c\ncaps.latest.revision: 16\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# map::lower_bound (STL/CLR)\nFinds beginning of range that matches a specified key.  \n  \n## Syntax  \n  \n```  \niterator lower_bound(key_type key);  \n```  \n  \n#### Parameters  \n key  \n Key value to search for.  \n  \n## Remarks  \n The member function determines the first element `X` in the controlled sequence that has equivalent ordering to `key`. If no such element exists, it returns [map::end (STL/CLR)](../dotnet/map-end-stl-clr.md)`()`; otherwise it returns an iterator that designates `X`. You use it to locate the beginning of a sequence of elements currently in the controlled sequence that match a specified key.  \n  \n## Example  \n  \n```  \n// cliext_map_lower_bound.cpp   \n// compile with: /clr   \n#include <cliext/map>   \n  \ntypedef cliext::map<wchar_t, int> Mymap;   \nint main()   \n    {   \n    Mymap c1;   \n    c1.insert(Mymap::make_value(L'a', 1));   \n    c1.insert(Mymap::make_value(L'b', 2));   \n    c1.insert(Mymap::make_value(L'c', 3));   \n  \n// display contents \" [a 1] [b 2] [c 3]\"   \n    for each (Mymap::value_type elem in c1)   \n        System::Console::Write(\" [{0} {1}]\", elem->first, elem->second);   \n    System::Console::WriteLine();   \n  \n    System::Console::WriteLine(\"lower_bound(L'x')==end() = {0}\",   \n        c1.lower_bound(L'x') == c1.end());   \n  \n    Mymap::iterator it = c1.lower_bound(L'a');   \n    System::Console::WriteLine(\"*lower_bound(L'a') = [{0} {1}]\",   \n        it->first, it->second);   \n    it = c1.lower_bound(L'b');   \n    System::Console::WriteLine(\"*lower_bound(L'b') = [{0} {1}]\",   \n        it->first, it->second);   \n    return (0);   \n    }  \n  \n```  \n  \n```Output  \n [a 1] [b 2] [c 3]  \nlower_bound(L'x')==end() = True  \n*lower_bound(L'a') = [a 1]  \n*lower_bound(L'b') = [b 2]  \n```  \n  \n## Requirements  \n **Header:** \\<cliext/map>  \n  \n **Namespace:** cliext  \n  \n## See Also  \n [map (STL/CLR)](../dotnet/map-stl-clr.md)   \n [map::count (STL/CLR)](../dotnet/map-count-stl-clr.md)   \n [map::equal_range (STL/CLR)](../dotnet/map-equal-range-stl-clr.md)   \n [map::find (STL/CLR)](../dotnet/map-find-stl-clr.md)   \n [map::upper_bound (STL/CLR)](../dotnet/map-upper-bound-stl-clr.md)"}