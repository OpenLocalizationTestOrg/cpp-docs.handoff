{"nodes":[{"pos":[12,53],"content":"is_move_assignable Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"is_move_assignable Class | Microsoft Docs","pos":[0,41]}]},{"pos":[721,745],"content":"is_move_assignable Class","linkify":"is_move_assignable Class","nodes":[{"content":"is_move_assignable Class","pos":[0,24]}]},{"content":"Tests if the type can be move assigned.","pos":[746,785]},{"pos":[794,800],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[870,880],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"The type to query.","pos":[891,909]},{"pos":[918,925],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"A type is move assignable if an rvalue reference to the type can be assigned to a reference to the type.","pos":[929,1033]},{"content":"The type predicate is equivalent to <ph id=\"ph1\">`is_assignable&lt;T&amp;, T&amp;&amp;&gt;`</ph>.","pos":[1034,1095],"source":" The type predicate is equivalent to `is_assignable<T&, T&&>`."},{"content":"Move assignable types include referenceable scalar types and class types that have either compiler-generated or user-defined move assignment operators.","pos":[1096,1247]},{"pos":[1256,1268],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[1272,1297],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> &lt;type_traits&gt;","source":"**Header:** <type_traits>"},{"pos":[1304,1322],"content":"<bpt id=\"p1\">**</bpt>Namespace:<ept id=\"p1\">**</ept> std","source":"**Namespace:** std"},{"pos":[1331,1339],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"pos":[1343,1394],"content":"<bpt id=\"p1\">[</bpt>&lt;type_traits&gt;<ept id=\"p1\">](../standard-library/type-traits.md)</ept>","source":"[<type_traits>](../standard-library/type-traits.md)"}],"content":"---\ntitle: \"is_move_assignable Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"is_move_assignable\"\n  - \"std.is_move_assignable\"\n  - \"std::is_move_assignable\"\n  - \"type_traits/std::is_move_assignable\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"is_move_assignable\"\nms.assetid: f33137f2-0639-4912-8745-bc0f9fd18d28\ncaps.latest.revision: 13\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# is_move_assignable Class\nTests if the type can be move assigned.  \n  \n## Syntax  \n  \n```\ntemplate <class T>\nstruct is_move_assignable;\n```  \n  \n#### Parameters  \n `T`  \n The type to query.  \n  \n## Remarks  \n A type is move assignable if an rvalue reference to the type can be assigned to a reference to the type. The type predicate is equivalent to `is_assignable<T&, T&&>`. Move assignable types include referenceable scalar types and class types that have either compiler-generated or user-defined move assignment operators.  \n  \n## Requirements  \n **Header:** <type_traits>  \n  \n **Namespace:** std  \n  \n## See Also  \n [<type_traits>](../standard-library/type-traits.md)\n\n\n\n"}