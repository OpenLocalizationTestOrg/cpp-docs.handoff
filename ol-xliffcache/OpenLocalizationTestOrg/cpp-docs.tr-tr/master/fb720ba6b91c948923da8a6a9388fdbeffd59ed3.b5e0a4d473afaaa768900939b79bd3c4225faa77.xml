{"nodes":[{"pos":[12,46],"content":"C String Literals | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"C String Literals | Microsoft Docs","pos":[0,34]}]},{"content":"C String Literals","pos":[649,666]},{"content":"A \"string literal\" is a sequence of characters from the source character set enclosed in double quotation marks (<bpt id=\"p1\">**</bpt>\" \"<ept id=\"p1\">**</ept>).","pos":[667,789],"source":"A \"string literal\" is a sequence of characters from the source character set enclosed in double quotation marks (**\" \"**)."},{"content":"String literals are used to represent a sequence of characters which, taken together, form a null-terminated string.","pos":[790,906]},{"content":"You must always prefix wide-string literals with the letter <bpt id=\"p1\">**</bpt>L<ept id=\"p1\">**</ept>.","pos":[907,973],"source":" You must always prefix wide-string literals with the letter **L**."},{"content":"Syntax","pos":[982,988]},{"content":"<bpt id=\"p1\">*</bpt>string-literal<ept id=\"p1\">*</ept>:","pos":[992,1009],"source":"*string-literal*:"},{"content":"<bpt id=\"p1\"> **</bpt>\"<ept id=\"p1\">**</ept> <bpt id=\"p2\">*</bpt>s-char-sequence<ept id=\"p2\">*</ept> opt<bpt id=\"p3\">**</bpt>\"<ept id=\"p3\">**</ept>","pos":[1012,1045],"source":" **\"** *s-char-sequence* opt**\"**"},{"pos":[1052,1085],"content":"<bpt id=\"p1\">**</bpt>L\"<ept id=\"p1\">**</ept> <bpt id=\"p2\">*</bpt>s-char-sequence<ept id=\"p2\">*</ept> opt<bpt id=\"p3\">**</bpt>\"<ept id=\"p3\">**</ept>","source":"**L\"** *s-char-sequence* opt**\"**"},{"content":"<bpt id=\"p1\">*</bpt>s-char-sequence<ept id=\"p1\">*</ept>:","pos":[1092,1110],"source":"*s-char-sequence*:"},{"content":"s-char","pos":[1115,1121]},{"content":"s-char-sequence s-char","pos":[1130,1152]},{"content":"<bpt id=\"p1\">*</bpt>s-char<ept id=\"p1\">*</ept>:","pos":[1160,1169],"source":"*s-char*:"},{"content":"any member of the source character set except the double quotation mark (\"), backslash (<ph id=\"ph1\">\\\\</ph>), or newline character","pos":[1173,1286],"source":" any member of the source character set except the double quotation mark (\"), backslash (\\\\), or newline character"},{"content":"escape-sequence","pos":[1294,1309]},{"content":"The example below is a simple string literal:","pos":[1317,1362]},{"content":"All escape codes listed in the <bpt id=\"p1\">[</bpt>Escape Sequences<ept id=\"p1\">](../c-language/escape-sequences.md)</ept> table are valid in string literals.","pos":[1432,1552],"source":"All escape codes listed in the [Escape Sequences](../c-language/escape-sequences.md) table are valid in string literals."},{"content":"To represent a double quotation mark in a string literal, use the escape sequence <bpt id=\"p1\">**</bpt><ph id=\"ph1\">\\\\</ph>\"<ept id=\"p1\">**</ept>.","pos":[1553,1643],"source":" To represent a double quotation mark in a string literal, use the escape sequence **\\\\\"**."},{"content":"The single quotation mark (<bpt id=\"p1\">**</bpt>'<ept id=\"p1\">**</ept>) can be represented without an escape sequence.","pos":[1644,1724],"source":" The single quotation mark (**'**) can be represented without an escape sequence."},{"content":"The backslash (<bpt id=\"p1\">**</bpt><ph id=\"ph1\">\\\\</ph><ept id=\"p1\">**</ept>) must be followed with a second backslash (<bpt id=\"p2\">**</bpt><ph id=\"ph2\">\\\\\\\\</ph><ept id=\"p2\">**</ept>) when it appears within a string.","pos":[1725,1832],"source":" The backslash (**\\\\**) must be followed with a second backslash (**\\\\\\\\**) when it appears within a string."},{"content":"When a backslash appears at the end of a line, it is always interpreted as a line-continuation character.","pos":[1833,1938]},{"content":"See Also","pos":[1947,1955]},{"content":"Elements of C","pos":[1960,1973]}],"content":"---\ntitle: \"C String Literals | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"C++\"\n  - \"C\"\nhelpviewer_keywords: \n  - \"string literals, syntax\"\n  - \"strings [C++], string literals\"\n  - \"literal strings, C\"\nms.assetid: 4b05523e-49a2-4900-b21a-754350af3328\ncaps.latest.revision: 11\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# C String Literals\nA \"string literal\" is a sequence of characters from the source character set enclosed in double quotation marks (**\" \"**). String literals are used to represent a sequence of characters which, taken together, form a null-terminated string. You must always prefix wide-string literals with the letter **L**.  \n  \n## Syntax  \n *string-literal*:  \n **\"** *s-char-sequence* opt**\"**  \n  \n **L\"** *s-char-sequence* opt**\"**  \n  \n *s-char-sequence*:  \n *s-char*  \n  \n *s-char-sequence s-char*  \n  \n *s-char*:  \n any member of the source character set except the double quotation mark (\"), backslash (\\\\), or newline character  \n  \n *escape-sequence*  \n  \n The example below is a simple string literal:  \n  \n```  \nchar *amessage = \"This is a string literal.\";  \n```  \n  \n All escape codes listed in the [Escape Sequences](../c-language/escape-sequences.md) table are valid in string literals. To represent a double quotation mark in a string literal, use the escape sequence **\\\\\"**. The single quotation mark (**'**) can be represented without an escape sequence. The backslash (**\\\\**) must be followed with a second backslash (**\\\\\\\\**) when it appears within a string. When a backslash appears at the end of a line, it is always interpreted as a line-continuation character.  \n  \n## See Also  \n [Elements of C](../c-language/elements-of-c.md)"}