{"nodes":[{"pos":[12,62],"content":"Missing Function Body or Variable | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Missing Function Body or Variable | Microsoft Docs","pos":[0,50]}]},{"pos":[617,650],"content":"Missing Function Body or Variable","linkify":"Missing Function Body or Variable","nodes":[{"content":"Missing Function Body or Variable","pos":[0,33]}]},{"content":"With just a function prototype, the compiler can continue without error, but the linker cannot resolve a call to an address because there is no function code or variable space reserved.","pos":[651,836]},{"content":"You will not see this error until you create a call to the function that the linker must resolve.","pos":[837,934]},{"pos":[943,950],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The function call in main will cause LNK2019 because the prototype allows the compiler to think the function exists.","pos":[954,1070]},{"content":"The linker finds that it doesn't.","pos":[1072,1105]},{"pos":[1238,1245],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"In C++, make sure that you include the implementation of a specific function for a class and not just a prototype in the class definition.","pos":[1249,1387]},{"content":"If you are defining the class outside of the header file, be sure to include the class name before the function (<ph id=\"ph1\">`Classname``::``memberfunction`</ph>).","pos":[1388,1534],"source":" If you are defining the class outside of the header file, be sure to include the class name before the function (`Classname``::``memberfunction`)."},{"pos":[1759,1767],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"pos":[1771,1863],"content":"<bpt id=\"p1\">[</bpt>Linker Tools Error LNK2019<ept id=\"p1\">](../../error-messages/tool-errors/linker-tools-error-lnk2019.md)</ept>","source":"[Linker Tools Error LNK2019](../../error-messages/tool-errors/linker-tools-error-lnk2019.md)"}],"content":"---\ntitle: \"Missing Function Body or Variable | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"error-reference\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"function body\"\n  - \"variables, missing\"\nms.assetid: 1a88d809-b14f-46a4-97c4-3e48beb418f2\ncaps.latest.revision: 8\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Missing Function Body or Variable\nWith just a function prototype, the compiler can continue without error, but the linker cannot resolve a call to an address because there is no function code or variable space reserved. You will not see this error until you create a call to the function that the linker must resolve.  \n  \n## Example  \n The function call in main will cause LNK2019 because the prototype allows the compiler to think the function exists.  The linker finds that it doesn't.  \n  \n```  \n// LNK2019_MFBV.cpp  \n// LNK2019 expected  \nvoid DoSomething(void);  \nint main() {  \n   DoSomething();  \n}  \n```  \n  \n## Example  \n In C++, make sure that you include the implementation of a specific function for a class and not just a prototype in the class definition. If you are defining the class outside of the header file, be sure to include the class name before the function (`Classname``::``memberfunction`).  \n  \n```  \n// LNK2019_MFBV_2.cpp  \n// LNK2019 expected  \nstruct A {  \n   static void Test();  \n};  \n  \n// Should be void A::Test() {}  \nvoid Test() {}  \n  \nint main() {  \n   A AObject;  \n   AObject.Test();  \n}  \n```  \n  \n## See Also  \n [Linker Tools Error LNK2019](../../error-messages/tool-errors/linker-tools-error-lnk2019.md)"}