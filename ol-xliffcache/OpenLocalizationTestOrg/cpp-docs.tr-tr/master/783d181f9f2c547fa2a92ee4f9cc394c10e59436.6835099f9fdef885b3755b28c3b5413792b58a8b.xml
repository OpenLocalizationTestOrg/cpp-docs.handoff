{"nodes":[{"pos":[12,61],"content":"Compiler Warning (level 3) C4398 | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Compiler Warning (level 3) C4398 | Microsoft Docs","pos":[0,49]}]},{"content":"Compiler Warning (level 3) C4398","pos":[609,641]},{"content":"'variable' : per-process global object might not work correctly with multiple appdomains; consider using __declspec(appdomain)","pos":[642,768]},{"content":"A virtual function with <bpt id=\"p1\">[</bpt>__clrcall<ept id=\"p1\">](../../cpp/clrcall.md)</ept> calling convention in a native type causes the creation of a per application domain vtable.","pos":[775,924],"source":"A virtual function with [__clrcall](../../cpp/clrcall.md) calling convention in a native type causes the creation of a per application domain vtable."},{"content":"Such a variable may not correct correctly when used in multiple application domains.","pos":[925,1009]},{"pos":[1016,1195],"content":"You can resolve this warning by compiling with <bpt id=\"p1\">**</bpt>/clr:pure<ept id=\"p1\">**</ept>, which makes global variables per appdomain by default, or by explicitly marking the variable <ph id=\"ph1\">`__declspec(appdomain)`</ph>.","source":"You can resolve this warning by compiling with **/clr:pure**, which makes global variables per appdomain by default, or by explicitly marking the variable `__declspec(appdomain)`."},{"pos":[1202,1357],"content":"For more information, see <bpt id=\"p1\">[</bpt>appdomain<ept id=\"p1\">](../../cpp/appdomain.md)</ept> and <bpt id=\"p2\">[</bpt>Application Domains and Visual C++<ept id=\"p2\">](../../dotnet/application-domains-and-visual-cpp.md)</ept>.","source":"For more information, see [appdomain](../../cpp/appdomain.md) and [Application Domains and Visual C++](../../dotnet/application-domains-and-visual-cpp.md)."},{"content":"Example","pos":[1366,1373]},{"content":"The following sample generates C4398.","pos":[1377,1414]}],"content":"---\ntitle: \"Compiler Warning (level 3) C4398 | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"error-reference\"\nf1_keywords: \n  - \"C4398\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"C4398\"\nms.assetid: b6221432-9fed-4272-a547-a73f587904e6\ncaps.latest.revision: 6\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Compiler Warning (level 3) C4398\n'variable' : per-process global object might not work correctly with multiple appdomains; consider using __declspec(appdomain)  \n  \n A virtual function with [__clrcall](../../cpp/clrcall.md) calling convention in a native type causes the creation of a per application domain vtable. Such a variable may not correct correctly when used in multiple application domains.  \n  \n You can resolve this warning by compiling with **/clr:pure**, which makes global variables per appdomain by default, or by explicitly marking the variable `__declspec(appdomain)`.  \n  \n For more information, see [appdomain](../../cpp/appdomain.md) and [Application Domains and Visual C++](../../dotnet/application-domains-and-visual-cpp.md).  \n  \n## Example  \n The following sample generates C4398.  \n  \n```  \n// C4398.cpp  \n// compile with: /clr /W3 /c  \nstruct S {  \n   virtual void f( System::String ^ );   // String^ parameter makes function __clrcall  \n};  \n  \nS glob_s;   // C4398  \n__declspec(appdomain) S glob_s2;   // OK  \n```"}