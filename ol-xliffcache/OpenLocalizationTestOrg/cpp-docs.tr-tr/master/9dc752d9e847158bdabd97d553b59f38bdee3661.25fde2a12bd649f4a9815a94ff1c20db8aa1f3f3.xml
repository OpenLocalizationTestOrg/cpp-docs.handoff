{"nodes":[{"pos":[12,40],"content":"putc, putwc | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"putc, putwc | Microsoft Docs","pos":[0,28]}]},{"pos":[1090,1101],"content":"putc, putwc","linkify":"putc, putwc","nodes":[{"content":"putc, putwc","pos":[0,11]}]},{"content":"Writes a character to a stream.","pos":[1102,1133]},{"pos":[1142,1148],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[1287,1297],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Character to be written.","pos":[1308,1332]},{"content":"Pointer to <bpt id=\"p1\">**</bpt>FILE<ept id=\"p1\">**</ept> structure.","pos":[1351,1381],"source":" Pointer to **FILE** structure."},{"pos":[1390,1402],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Returns the character written.","pos":[1406,1436]},{"content":"To indicate an error or end-of-file condition, <ph id=\"ph1\">`putc`</ph> and <ph id=\"ph2\">`putchar`</ph> return <ph id=\"ph3\">`EOF`</ph>; <ph id=\"ph4\">`putwc`</ph> and <ph id=\"ph5\">`putwchar`</ph> return <bpt id=\"p1\">**</bpt>WEOF<ept id=\"p1\">**</ept>.","pos":[1437,1558],"source":" To indicate an error or end-of-file condition, `putc` and `putchar` return `EOF`; `putwc` and `putwchar` return **WEOF**."},{"content":"For all four routines, use <bpt id=\"p1\">[</bpt>ferror<ept id=\"p1\">](../../c-runtime-library/reference/ferror.md)</ept> or <bpt id=\"p2\">[</bpt>feof<ept id=\"p2\">](../../c-runtime-library/reference/feof.md)</ept> to check for an error or end of file.","pos":[1559,1730],"source":" For all four routines, use [ferror](../../c-runtime-library/reference/ferror.md) or [feof](../../c-runtime-library/reference/feof.md) to check for an error or end of file."},{"content":"If passed a null pointer for <ph id=\"ph1\">`stream`</ph>, the invalid parameter handler is invoked, as described in <bpt id=\"p1\">[</bpt>Parameter Validation<ept id=\"p1\">](../../c-runtime-library/parameter-validation.md)</ept>.","pos":[1731,1900],"source":" If passed a null pointer for `stream`, the invalid parameter handler is invoked, as described in [Parameter Validation](../../c-runtime-library/parameter-validation.md)."},{"content":"If execution is allowed to continue, these functions return <ph id=\"ph1\">`EOF`</ph> or <bpt id=\"p1\">**</bpt>WEOF<ept id=\"p1\">**</ept> and set <ph id=\"ph2\">`errno`</ph> to <ph id=\"ph3\">`EINVAL`</ph>.","pos":[1901,2007],"source":" If execution is allowed to continue, these functions return `EOF` or **WEOF** and set `errno` to `EINVAL`."},{"pos":[2014,2188],"content":"See <bpt id=\"p1\">[</bpt>_doserrno, errno, _sys_errlist, and _sys_nerr<ept id=\"p1\">](../../c-runtime-library/errno-doserrno-sys-errlist-and-sys-nerr.md)</ept> for more information on these, and other, error codes.","source":"See [_doserrno, errno, _sys_errlist, and _sys_nerr](../../c-runtime-library/errno-doserrno-sys-errlist-and-sys-nerr.md) for more information on these, and other, error codes."},{"pos":[2197,2204],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The <ph id=\"ph1\">`putc`</ph> routine writes the single character <ph id=\"ph2\">`c`</ph> to the output <ph id=\"ph3\">`stream`</ph> at the current position.","pos":[2208,2306],"source":"The `putc` routine writes the single character `c` to the output `stream` at the current position."},{"content":"Any integer can be passed to <ph id=\"ph1\">`putc`</ph>, but only the lower 8 bits are written.","pos":[2307,2382],"source":" Any integer can be passed to `putc`, but only the lower 8 bits are written."},{"content":"The <ph id=\"ph1\">`putchar`</ph> routine is identical to <bpt id=\"p1\">**</bpt>putc(<ept id=\"p1\">**</ept> <ph id=\"ph2\">`c`</ph><bpt id=\"p2\">**</bpt>, stdout )<ept id=\"p2\">**</ept>.","pos":[2383,2449],"source":" The `putchar` routine is identical to **putc(** `c`**, stdout )**."},{"content":"For each routine, if a read error occurs, the error indicator for the stream is set.","pos":[2450,2534]},{"content":"<ph id=\"ph1\">`putc`</ph> and <ph id=\"ph2\">`putchar`</ph> are similar to <ph id=\"ph3\">`fputc`</ph> and <ph id=\"ph4\">`_fputchar`</ph>, respectively, but are implemented both as functions and as macros (see <bpt id=\"p1\">[</bpt>Choosing Between Functions and Macros<ept id=\"p1\">](../../c-runtime-library/recommendations-for-choosing-between-functions-and-macros.md)</ept>).","pos":[2535,2794],"source":"`putc` and `putchar` are similar to `fputc` and `_fputchar`, respectively, but are implemented both as functions and as macros (see [Choosing Between Functions and Macros](../../c-runtime-library/recommendations-for-choosing-between-functions-and-macros.md))."},{"content":"<ph id=\"ph1\">`putwc`</ph> and <ph id=\"ph2\">`putwchar`</ph> are wide-character versions of <ph id=\"ph3\">`putc`</ph> and <ph id=\"ph4\">`putchar`</ph>, respectively.","pos":[2795,2884],"source":"`putwc` and `putwchar` are wide-character versions of `putc` and `putchar`, respectively."},{"content":"<ph id=\"ph1\">`putwc`</ph> and <ph id=\"ph2\">`putc`</ph> behave identically if the stream is opened in ANSI mode.","pos":[2885,2960],"source":"`putwc` and `putc` behave identically if the stream is opened in ANSI mode."},{"content":"<ph id=\"ph1\">`putc`</ph> doesn't currently support output into a UNICODE stream.","pos":[2961,3023],"source":"`putc` doesn't currently support output into a UNICODE stream."},{"content":"The versions with the <bpt id=\"p1\">**</bpt>_nolock<ept id=\"p1\">**</ept> suffix are identical except that they are not protected from interference by other threads.","pos":[3030,3155],"source":"The versions with the **_nolock** suffix are identical except that they are not protected from interference by other threads."},{"content":"For more information, see <bpt id=\"p1\">**</bpt>_putc_nolock, _putwc_nolock<ept id=\"p1\">**</ept>.","pos":[3156,3214],"source":" For more information, see **_putc_nolock, _putwc_nolock**."},{"pos":[3224,3253],"content":"Generic-Text Routine Mappings","linkify":"Generic-Text Routine Mappings","nodes":[{"content":"Generic-Text Routine Mappings","pos":[0,29]}]},{"content":"TCHAR.H routine","pos":[3260,3275]},{"content":"_UNICODE &amp; _MBCS not defined","pos":[3276,3304],"source":"_UNICODE & _MBCS not defined"},{"content":"_MBCS defined","pos":[3305,3318]},{"content":"_UNICODE defined","pos":[3319,3335]},{"pos":[3471,3480],"content":"<bpt id=\"p1\">**</bpt>putwc<ept id=\"p1\">**</ept>","source":"**putwc**"},{"pos":[3490,3502],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"content":"Routine","pos":[3509,3516]},{"content":"Required header","pos":[3517,3532]},{"content":"<ph id=\"ph1\">\\&lt;</ph>stdio.h&gt;","pos":[3584,3594],"source":"\\<stdio.h>"},{"content":"<ph id=\"ph1\">\\&lt;</ph>stdio.h&gt; or <ph id=\"ph2\">\\&lt;</ph>wchar.h&gt;","pos":[3607,3631],"source":"\\<stdio.h> or \\<wchar.h>"},{"content":"The console is not supported in <ph id=\"ph1\">[!INCLUDE[win8_appname_long](../../build/includes/win8_appname_long_md.md)]</ph> apps.","pos":[3639,3752],"source":"The console is not supported in [!INCLUDE[win8_appname_long](../../build/includes/win8_appname_long_md.md)] apps."},{"content":"The standard stream handles that are associated with the console—<ph id=\"ph1\">`stdin`</ph>, <ph id=\"ph2\">`stdout`</ph>, and <ph id=\"ph3\">`stderr`</ph>—must be redirected before C run-time functions can use them in <ph id=\"ph4\">[!INCLUDE[win8_appname_long](../../build/includes/win8_appname_long_md.md)]</ph> apps.","pos":[3753,3994],"source":" The standard stream handles that are associated with the console—`stdin`, `stdout`, and `stderr`—must be redirected before C run-time functions can use them in [!INCLUDE[win8_appname_long](../../build/includes/win8_appname_long_md.md)] apps."},{"content":"For additional compatibility information, see <bpt id=\"p1\">[</bpt>Compatibility<ept id=\"p1\">](../../c-runtime-library/compatibility.md)</ept>.","pos":[3995,4099],"source":" For additional compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md)."},{"pos":[4108,4117],"content":"Libraries","linkify":"Libraries","nodes":[{"content":"Libraries","pos":[0,9]}]},{"pos":[4121,4213],"content":"All versions of the <bpt id=\"p1\">[</bpt>C run-time libraries<ept id=\"p1\">](../../c-runtime-library/crt-library-features.md)</ept>.","source":"All versions of the [C run-time libraries](../../c-runtime-library/crt-library-features.md)."},{"pos":[4222,4229],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[4743,4749],"content":"Output","linkify":"Output","nodes":[{"content":"Output","pos":[0,6]}]},{"pos":[4802,4827],"content":".NET Framework Equivalent","linkify":".NET Framework Equivalent","nodes":[{"content":".NET Framework Equivalent","pos":[0,25]}]},{"pos":[4837,4946],"content":"<bpt id=\"p1\">[</bpt>System::IO::StreamWriter::Write<ept id=\"p1\">](https://msdn.microsoft.com/en-us/library/system.io.streamwriter.write.aspx)</ept>","source":"[System::IO::StreamWriter::Write](https://msdn.microsoft.com/en-us/library/system.io.streamwriter.write.aspx)"},{"pos":[4956,5048],"content":"<bpt id=\"p1\">[</bpt>System::Console::Write<ept id=\"p1\">](https://msdn.microsoft.com/en-us/library/system.console.write.aspx)</ept>","source":"[System::Console::Write](https://msdn.microsoft.com/en-us/library/system.console.write.aspx)"},{"pos":[5057,5065],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Stream I/O<ept id=\"p1\">](../../c-runtime-library/stream-i-o.md)</ept><ph id=\"ph1\"> </ph>","pos":[5069,5121],"source":"[Stream I/O](../../c-runtime-library/stream-i-o.md) "},{"content":"<bpt id=\"p1\"> [</bpt>fputc, fputwc<ept id=\"p1\">](../../c-runtime-library/reference/fputc-fputwc.md)</ept><ph id=\"ph1\"> </ph>","pos":[5124,5192],"source":" [fputc, fputwc](../../c-runtime-library/reference/fputc-fputwc.md) "},{"content":"<bpt id=\"p1\"> [</bpt>getc, getwc<ept id=\"p1\">](../../c-runtime-library/reference/getc-getwc.md)</ept>","pos":[5195,5258],"source":" [getc, getwc](../../c-runtime-library/reference/getc-getwc.md)"}],"content":"---\ntitle: \"putc, putwc | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\napiname: \n  - \"putwc\"\n  - \"putc\"\napilocation: \n  - \"msvcrt.dll\"\n  - \"msvcr80.dll\"\n  - \"msvcr90.dll\"\n  - \"msvcr100.dll\"\n  - \"msvcr100_clr0400.dll\"\n  - \"msvcr110.dll\"\n  - \"msvcr110_clr0400.dll\"\n  - \"msvcr120.dll\"\n  - \"msvcr120_clr0400.dll\"\n  - \"ucrtbase.dll\"\n  - \"api-ms-win-crt-stdio-l1-1-0.dll\"\napitype: \"DLLExport\"\nf1_keywords: \n  - \"_puttc\"\n  - \"putwc\"\n  - \"putc\"\ndev_langs: \n  - \"C++\"\n  - \"C\"\nhelpviewer_keywords: \n  - \"streams, writing characters to\"\n  - \"characters, writing\"\n  - \"putwc function\"\n  - \"putc function\"\n  - \"_puttc function\"\n  - \"puttc function\"\nms.assetid: a37b2e82-9d88-4565-8190-ff8d04c0ddb9\ncaps.latest.revision: 16\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"ru-ru\"\n  - \"zh-cn\"\n  - \"zh-tw\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"tr-tr\"\n---\n# putc, putwc\nWrites a character to a stream.  \n  \n## Syntax  \n  \n```  \n  \n      int putc(  \n   int c,  \n   FILE *stream   \n);  \nwint_t putwc(  \n   wchar_t c,  \n   FILE *stream   \n);  \n```  \n  \n#### Parameters  \n `c`  \n Character to be written.  \n  \n `stream`  \n Pointer to **FILE** structure.  \n  \n## Return Value  \n Returns the character written. To indicate an error or end-of-file condition, `putc` and `putchar` return `EOF`; `putwc` and `putwchar` return **WEOF**. For all four routines, use [ferror](../../c-runtime-library/reference/ferror.md) or [feof](../../c-runtime-library/reference/feof.md) to check for an error or end of file. If passed a null pointer for `stream`, the invalid parameter handler is invoked, as described in [Parameter Validation](../../c-runtime-library/parameter-validation.md). If execution is allowed to continue, these functions return `EOF` or **WEOF** and set `errno` to `EINVAL`.  \n  \n See [_doserrno, errno, _sys_errlist, and _sys_nerr](../../c-runtime-library/errno-doserrno-sys-errlist-and-sys-nerr.md) for more information on these, and other, error codes.  \n  \n## Remarks  \n The `putc` routine writes the single character `c` to the output `stream` at the current position. Any integer can be passed to `putc`, but only the lower 8 bits are written. The `putchar` routine is identical to **putc(** `c`**, stdout )**. For each routine, if a read error occurs, the error indicator for the stream is set. `putc` and `putchar` are similar to `fputc` and `_fputchar`, respectively, but are implemented both as functions and as macros (see [Choosing Between Functions and Macros](../../c-runtime-library/recommendations-for-choosing-between-functions-and-macros.md)). `putwc` and `putwchar` are wide-character versions of `putc` and `putchar`, respectively. `putwc` and `putc` behave identically if the stream is opened in ANSI mode. `putc` doesn't currently support output into a UNICODE stream.  \n  \n The versions with the **_nolock** suffix are identical except that they are not protected from interference by other threads. For more information, see **_putc_nolock, _putwc_nolock**.  \n  \n### Generic-Text Routine Mappings  \n  \n|TCHAR.H routine|_UNICODE & _MBCS not defined|_MBCS defined|_UNICODE defined|  \n|---------------------|------------------------------------|--------------------|-----------------------|  \n|`_puttc`|`putc`|`putc`|**putwc**|  \n  \n## Requirements  \n  \n|Routine|Required header|  \n|-------------|---------------------|  \n|`putc`|\\<stdio.h>|  \n|`putwc`|\\<stdio.h> or \\<wchar.h>|  \n  \n The console is not supported in [!INCLUDE[win8_appname_long](../../build/includes/win8_appname_long_md.md)] apps. The standard stream handles that are associated with the console—`stdin`, `stdout`, and `stderr`—must be redirected before C run-time functions can use them in [!INCLUDE[win8_appname_long](../../build/includes/win8_appname_long_md.md)] apps. For additional compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md).  \n  \n## Libraries  \n All versions of the [C run-time libraries](../../c-runtime-library/crt-library-features.md).  \n  \n## Example  \n  \n```  \n// crt_putc.c  \n/* This program uses putc to write buffer  \n * to a stream. If an error occurs, the program  \n * stops before writing the entire buffer.  \n */  \n  \n#include <stdio.h>  \n  \nint main( void )  \n{  \n   FILE *stream;  \n   char *p, buffer[] = \"This is the line of output\\n\";  \n   int  ch;  \n  \n   ch = 0;  \n   /* Make standard out the stream and write to it. */  \n   stream = stdout;  \n   for( p = buffer; (ch != EOF) && (*p != '\\0'); p++ )  \n      ch = putc( *p, stream );  \n}  \n```  \n  \n## Output  \n  \n```  \nThis is the line of output  \n```  \n  \n## .NET Framework Equivalent  \n  \n-   [System::IO::StreamWriter::Write](https://msdn.microsoft.com/en-us/library/system.io.streamwriter.write.aspx)  \n  \n-   [System::Console::Write](https://msdn.microsoft.com/en-us/library/system.console.write.aspx)  \n  \n## See Also  \n [Stream I/O](../../c-runtime-library/stream-i-o.md)   \n [fputc, fputwc](../../c-runtime-library/reference/fputc-fputwc.md)   \n [getc, getwc](../../c-runtime-library/reference/getc-getwc.md)"}