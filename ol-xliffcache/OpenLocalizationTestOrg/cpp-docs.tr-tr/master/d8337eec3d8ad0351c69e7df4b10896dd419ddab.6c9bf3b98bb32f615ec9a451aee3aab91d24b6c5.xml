{"nodes":[{"pos":[12,44],"content":"Flag Directives | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Flag Directives | Microsoft Docs","pos":[0,32]}]},{"content":"Flag Directives","pos":[909,924]},{"content":"In a format specification, the first optional field is <ph id=\"ph1\">`flags`</ph>.","pos":[925,988],"source":"In a format specification, the first optional field is `flags`."},{"content":"A flag directive is a character that specifies output justification and output of signs, blanks, leading zeros, decimal points, and octal and hexadecimal prefixes.","pos":[989,1152]},{"content":"More than one flag directive may appear in a format specification, and flags can appear in any order.","pos":[1153,1254]},{"content":"Flag Characters","pos":[1264,1279]},{"content":"Flag","pos":[1286,1290]},{"content":"Meaning","pos":[1291,1298]},{"content":"Default","pos":[1299,1306]},{"content":"Left align the result within the given field width.","pos":[1358,1409]},{"content":"Right align.","pos":[1410,1422]},{"content":"Use a sign (+ or –) to prefix the output value if it is of a signed type.","pos":[1431,1504]},{"content":"Sign appears only for negative signed values (–).","pos":[1505,1554]},{"content":"If <ph id=\"ph1\">`width`</ph> is prefixed by <ph id=\"ph2\">`0`</ph>, leading zeros are added until the minimum width is reached.","pos":[1563,1653],"source":"If `width` is prefixed by `0`, leading zeros are added until the minimum width is reached."},{"content":"If both <ph id=\"ph1\">`0`</ph> and <ph id=\"ph2\">`–`</ph> appear, the <ph id=\"ph3\">`0`</ph> is ignored.","pos":[1654,1701],"source":" If both `0` and `–` appear, the `0` is ignored."},{"content":"If <ph id=\"ph1\">`0`</ph> is specified as an integer format (<ph id=\"ph2\">`i`</ph>, <ph id=\"ph3\">`u`</ph>, <ph id=\"ph4\">`x`</ph>, <ph id=\"ph5\">`X`</ph>, <ph id=\"ph6\">`o`</ph>, <ph id=\"ph7\">`d`</ph>) and a precision specification is also present—for example, <ph id=\"ph8\">`%04.d`</ph>—the <ph id=\"ph9\">`0`</ph> is ignored.","pos":[1702,1860],"source":" If `0` is specified as an integer format (`i`, `u`, `x`, `X`, `o`, `d`) and a precision specification is also present—for example, `%04.d`—the `0` is ignored."},{"content":"No padding.","pos":[1861,1872]},{"content":"blank (' ')","pos":[1877,1888]},{"content":"Use a blank to prefix the output value if it is signed and positive.","pos":[1889,1957]},{"content":"The blank is ignored if both the blank and + flags appear.","pos":[1958,2016]},{"content":"No blank appears.","pos":[2017,2034]},{"pos":[2043,2173],"content":"When it's used with the <ph id=\"ph1\">`o`</ph>, <ph id=\"ph2\">`x`</ph>, or <ph id=\"ph3\">`X`</ph> format, the <ph id=\"ph4\">`#`</ph> flag uses 0, 0x, or 0X, respectively, to prefix any nonzero output value.","source":"When it's used with the `o`, `x`, or `X` format, the `#` flag uses 0, 0x, or 0X, respectively, to prefix any nonzero output value."},{"content":"No blank appears.","pos":[2174,2191]},{"pos":[2197,2319],"content":"When it's used with the <ph id=\"ph1\">`e`</ph>, <ph id=\"ph2\">`E`</ph>, <ph id=\"ph3\">`f`</ph>, <ph id=\"ph4\">`a`</ph> or <ph id=\"ph5\">`A`</ph> format, the <ph id=\"ph6\">`#`</ph> flag forces the output value to contain a decimal point.","source":"When it's used with the `e`, `E`, `f`, `a` or `A` format, the `#` flag forces the output value to contain a decimal point."},{"content":"Decimal point appears only if digits follow it.","pos":[2320,2367]},{"content":"When it's used with the <ph id=\"ph1\">`g`</ph> or <ph id=\"ph2\">`G`</ph> format, the <ph id=\"ph3\">`#`</ph> flag forces the output value to contain a decimal point and prevents the truncation of trailing zeros.","pos":[2373,2526],"source":"When it's used with the `g` or `G` format, the `#` flag forces the output value to contain a decimal point and prevents the truncation of trailing zeros."},{"content":"Ignored when used with <ph id=\"ph1\">`c`</ph>, <ph id=\"ph2\">`d`</ph>, <ph id=\"ph3\">`i`</ph>, <ph id=\"ph4\">`u`</ph>, or <ph id=\"ph5\">`s`</ph>.","pos":[2539,2589],"source":" Ignored when used with `c`, `d`, `i`, `u`, or `s`."},{"content":"Decimal point appears only if digits follow it.","pos":[2590,2637]},{"content":"Trailing zeros are truncated.","pos":[2638,2667]},{"content":"See Also","pos":[2677,2685]},{"content":"printf, _printf_l, wprintf, _wprintf_l","pos":[2690,2728]},{"content":"Format Specification Syntax: printf and wprintf Functions","pos":[2804,2861]},{"content":"printf Width Specification","pos":[2950,2976]},{"content":"Precision Specification","pos":[3035,3058]},{"content":"Size Specification","pos":[3114,3132]},{"content":"printf Type Field Characters","pos":[3183,3211]}],"content":"---\ntitle: \"Flag Directives | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\napilocation: \n  - \"msvcr120.dll\"\n  - \"msvcr100.dll\"\n  - \"msvcr110_clr0400.dll\"\n  - \"msvcr110.dll\"\n  - \"msvcr80.dll\"\n  - \"msvcr90.dll\"\napitype: \"DLLExport\"\nf1_keywords: \n  - \"c.flags\"\ndev_langs: \n  - \"C++\"\n  - \"C\"\nhelpviewer_keywords: \n  - \"format specification fields for printf function\"\n  - \"print flag directives\"\n  - \"printf function, format specification fields\"\n  - \"flag directives printf function\"\nms.assetid: b00cbdc9-1e5c-4b30-9f56-c1ef8d383767\ncaps.latest.revision: 12\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Flag Directives\nIn a format specification, the first optional field is `flags`. A flag directive is a character that specifies output justification and output of signs, blanks, leading zeros, decimal points, and octal and hexadecimal prefixes. More than one flag directive may appear in a format specification, and flags can appear in any order.  \n  \n### Flag Characters  \n  \n|Flag|Meaning|Default|  \n|----------|-------------|-------------|  \n|`–`|Left align the result within the given field width.|Right align.|  \n|`+`|Use a sign (+ or –) to prefix the output value if it is of a signed type.|Sign appears only for negative signed values (–).|  \n|`0`|If `width` is prefixed by `0`, leading zeros are added until the minimum width is reached. If both `0` and `–` appear, the `0` is ignored. If `0` is specified as an integer format (`i`, `u`, `x`, `X`, `o`, `d`) and a precision specification is also present—for example, `%04.d`—the `0` is ignored.|No padding.|  \n|blank (' ')|Use a blank to prefix the output value if it is signed and positive. The blank is ignored if both the blank and + flags appear.|No blank appears.|  \n|`#`|When it's used with the `o`, `x`, or `X` format, the `#` flag uses 0, 0x, or 0X, respectively, to prefix any nonzero output value.|No blank appears.|  \n||When it's used with the `e`, `E`, `f`, `a` or `A` format, the `#` flag forces the output value to contain a decimal point.|Decimal point appears only if digits follow it.|  \n||When it's used with the `g` or `G` format, the `#` flag forces the output value to contain a decimal point and prevents the truncation of trailing zeros.<br /><br /> Ignored when used with `c`, `d`, `i`, `u`, or `s`.|Decimal point appears only if digits follow it. Trailing zeros are truncated.|  \n  \n## See Also  \n [printf, _printf_l, wprintf, _wprintf_l](../c-runtime-library/reference/printf-printf-l-wprintf-wprintf-l.md)   \n [Format Specification Syntax: printf and wprintf Functions](../c-runtime-library/format-specification-syntax-printf-and-wprintf-functions.md)   \n [printf Width Specification](../c-runtime-library/printf-width-specification.md)   \n [Precision Specification](../c-runtime-library/precision-specification.md)   \n [Size Specification](../c-runtime-library/size-specification.md)   \n [printf Type Field Characters](../c-runtime-library/printf-type-field-characters.md)"}