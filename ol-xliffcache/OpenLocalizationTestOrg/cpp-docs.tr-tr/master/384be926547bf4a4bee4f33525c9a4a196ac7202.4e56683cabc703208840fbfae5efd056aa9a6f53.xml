{"nodes":[{"pos":[12,52],"content":"vector::clear (STL-CLR) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"vector::clear (STL-CLR) | Microsoft Docs","pos":[0,40]}]},{"content":"vector::clear (STL/CLR)","pos":[628,651]},{"content":"Removes all elements.","pos":[652,673]},{"content":"Syntax","pos":[682,688]},{"content":"Remarks","pos":[728,735]},{"content":"The member function effectively calls <bpt id=\"p1\">[</bpt>vector::erase (STL/CLR)<ept id=\"p1\">](../dotnet/vector-erase-stl-clr.md)</ept><ph id=\"ph1\">`(`</ph> <bpt id=\"p2\">[</bpt>vector::begin (STL/CLR)<ept id=\"p2\">](../dotnet/vector-begin-stl-clr.md)</ept><ph id=\"ph2\">`(),`</ph> <bpt id=\"p3\">[</bpt>vector::end (STL/CLR)<ept id=\"p3\">](../dotnet/vector-end-stl-clr.md)</ept><ph id=\"ph3\">`())`</ph>.","pos":[739,969],"source":"The member function effectively calls [vector::erase (STL/CLR)](../dotnet/vector-erase-stl-clr.md)`(` [vector::begin (STL/CLR)](../dotnet/vector-begin-stl-clr.md)`(),` [vector::end (STL/CLR)](../dotnet/vector-end-stl-clr.md)`())`."},{"content":"You use it to ensure that the controlled sequence is empty.","pos":[970,1029]},{"content":"Example","pos":[1038,1045]},{"content":"Requirements","pos":[1976,1988]},{"pos":[1992,2020],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> <ph id=\"ph1\">\\&lt;</ph>cliext/vector&gt;","source":"**Header:** \\<cliext/vector>"},{"pos":[2027,2048],"content":"<bpt id=\"p1\">**</bpt>Namespace:<ept id=\"p1\">**</ept> cliext","source":"**Namespace:** cliext"},{"content":"See Also","pos":[2057,2065]},{"content":"vector (STL/CLR)","pos":[2070,2086]},{"content":"vector::erase (STL/CLR)","pos":[2122,2145]}],"content":"---\ntitle: \"vector::clear (STL-CLR) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"cliext::vector::clear\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"clear member [STL/CLR]\"\nms.assetid: 4ed20ec8-3089-4c36-b68f-1b51c639041f\ncaps.latest.revision: 15\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# vector::clear (STL/CLR)\nRemoves all elements.  \n  \n## Syntax  \n  \n```  \nvoid clear();  \n```  \n  \n## Remarks  \n The member function effectively calls [vector::erase (STL/CLR)](../dotnet/vector-erase-stl-clr.md)`(` [vector::begin (STL/CLR)](../dotnet/vector-begin-stl-clr.md)`(),` [vector::end (STL/CLR)](../dotnet/vector-end-stl-clr.md)`())`. You use it to ensure that the controlled sequence is empty.  \n  \n## Example  \n  \n```  \n// cliext_vector_clear.cpp   \n// compile with: /clr   \n#include <cliext/vector>   \n  \nint main()   \n    {   \n    cliext::vector<wchar_t> c1;   \n    c1.push_back(L'a');   \n    c1.push_back(L'b');   \n    c1.push_back(L'c');   \n  \n// display initial contents \" a b c\"   \n    for each (wchar_t elem in c1)   \n        System::Console::Write(\" {0}\", elem);   \n    System::Console::WriteLine();   \n  \n// clear the container and reinspect   \n    c1.clear();   \n    System::Console::WriteLine(\"size() = {0}\", c1.size());   \n  \n// add elements and clear again   \n    c1.push_back(L'a');   \n    c1.push_back(L'b');   \n  \n    for each (wchar_t elem in c1)   \n        System::Console::Write(\" {0}\", elem);   \n    System::Console::WriteLine();   \n    c1.clear();   \n    System::Console::WriteLine(\"size() = {0}\", c1.size());   \n    return (0);   \n    }  \n  \n```  \n  \n```Output  \n a b c  \nsize() = 0  \n a b  \nsize() = 0  \n```  \n  \n## Requirements  \n **Header:** \\<cliext/vector>  \n  \n **Namespace:** cliext  \n  \n## See Also  \n [vector (STL/CLR)](../dotnet/vector-stl-clr.md)   \n [vector::erase (STL/CLR)](../dotnet/vector-erase-stl-clr.md)"}