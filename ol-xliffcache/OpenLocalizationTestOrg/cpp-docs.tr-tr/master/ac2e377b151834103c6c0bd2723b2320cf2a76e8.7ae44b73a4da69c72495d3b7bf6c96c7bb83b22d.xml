{"nodes":[{"pos":[12,44],"content":"remove_cv Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"remove_cv Class | Microsoft Docs","pos":[0,32]}]},{"pos":[745,760],"content":"remove_cv Class","linkify":"remove_cv Class","nodes":[{"content":"remove_cv Class","pos":[0,15]}]},{"content":"Makes non const/volatile type from type.","pos":[761,801]},{"pos":[810,816],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[957,967],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"The type to modify.","pos":[978,997]},{"pos":[1006,1013],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[1017,1171],"content":"An instance of <ph id=\"ph1\">`remove_cv&lt;T&gt;`</ph> holds a modified-type that is <ph id=\"ph2\">`T1`</ph> when <ph id=\"ph3\">`T`</ph> is of the form <ph id=\"ph4\">`const T1`</ph>, <ph id=\"ph5\">`volatile T1`</ph>, or <ph id=\"ph6\">`const volatile T1`</ph>, otherwise <ph id=\"ph7\">`T`</ph>.","source":"An instance of `remove_cv<T>` holds a modified-type that is `T1` when `T` is of the form `const T1`, `volatile T1`, or `const volatile T1`, otherwise `T`."},{"pos":[1180,1187],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[1597,1609],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[1613,1638],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> &lt;type_traits&gt;","source":"**Header:** <type_traits>"},{"pos":[1645,1663],"content":"<bpt id=\"p1\">**</bpt>Namespace:<ept id=\"p1\">**</ept> std","source":"**Namespace:** std"},{"pos":[1672,1680],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>&lt;type_traits&gt;<ept id=\"p1\">](../standard-library/type-traits.md)</ept><ph id=\"ph1\"> </ph>","pos":[1684,1736],"source":"[<type_traits>](../standard-library/type-traits.md) "},{"content":"<bpt id=\"p1\"> [</bpt>remove_const Class<ept id=\"p1\">](../standard-library/remove-const-class.md)</ept><ph id=\"ph1\"> </ph>","pos":[1739,1804],"source":" [remove_const Class](../standard-library/remove-const-class.md) "},{"content":"<bpt id=\"p1\"> [</bpt>remove_volatile Class<ept id=\"p1\">](../standard-library/remove-volatile-class.md)</ept>","pos":[1807,1877],"source":" [remove_volatile Class](../standard-library/remove-volatile-class.md)"}],"content":"---\ntitle: \"remove_cv Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"remove_cv\"\n  - \"std::tr1::remove_cv\"\n  - \"std.tr1.remove_cv\"\n  - \"std.remove_cv\"\n  - \"std::remove_cv\"\n  - \"type_traits/std::remove_cv\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"remove_cv class [TR1]\"\n  - \"remove_cv\"\nms.assetid: 8502602a-1c80-479c-84e0-33bd1d6496d6\ncaps.latest.revision: 20\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# remove_cv Class\nMakes non const/volatile type from type.  \n  \n## Syntax  \n  \n```  \ntemplate <class T>  \nstruct remove_cv;  \n \ntemplate <class T>  \nusing remove_cv_t = typename remove_cv<T>::type;  \n```  \n  \n#### Parameters  \n `T`  \n The type to modify.  \n  \n## Remarks  \n An instance of `remove_cv<T>` holds a modified-type that is `T1` when `T` is of the form `const T1`, `volatile T1`, or `const volatile T1`, otherwise `T`.  \n  \n## Example  \n  \n```cpp  \n  \n#include <type_traits>   \n#include <iostream>   \n  \nint main()   \n    {   \n    int *p = (std::remove_cv_t<const volatile int> *)0;   \n  \n    p = p;  // to quiet \"unused\" warning   \n    std::cout << \"remove_cv_t<const volatile int> == \"   \n        << typeid(*p).name() << std::endl;   \n  \n    return (0);   \n    }  \n  \n```  \n  \n```Output  \nremove_cv_t<const volatile int> == int  \n```  \n  \n## Requirements  \n **Header:** <type_traits>  \n  \n **Namespace:** std  \n  \n## See Also  \n [<type_traits>](../standard-library/type-traits.md)   \n [remove_const Class](../standard-library/remove-const-class.md)   \n [remove_volatile Class](../standard-library/remove-volatile-class.md)\n"}