{"nodes":[{"pos":[12,61],"content":"Concurrency Runtime Walkthroughs | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Concurrency Runtime Walkthroughs | Microsoft Docs","pos":[0,49]}]},{"content":"Concurrency Runtime Walkthroughs","pos":[645,677]},{"content":"The scenario-based topics in this section show how to use many of the features of the Concurrency Runtime.","pos":[678,784]},{"content":"In This Section","pos":[793,808]},{"content":"Walkthrough: Connecting Using Tasks and XML HTTP Requests","pos":[813,870]},{"content":"Shows how to use the <bpt id=\"p1\">[</bpt>IXMLHTTPRequest2<ept id=\"p1\">](http://msdn.microsoft.com/en-us/bbc11c4a-aecf-4d6d-8275-3e852e309908)</ept> and <bpt id=\"p2\">[</bpt>IXMLHTTPRequest2Callback<ept id=\"p2\">](http://msdn.microsoft.com/en-us/aa4b3f4c-6e28-458b-be25-6cce8865fc71)</ept> interfaces together with tasks to send HTTP GET and POST requests to a web service in a <ph id=\"ph1\">[!INCLUDE[win8_appname_long](../../build/includes/win8_appname_long_md.md)]</ph> app.","pos":[958,1337],"source":" Shows how to use the [IXMLHTTPRequest2](http://msdn.microsoft.com/en-us/bbc11c4a-aecf-4d6d-8275-3e852e309908) and [IXMLHTTPRequest2Callback](http://msdn.microsoft.com/en-us/aa4b3f4c-6e28-458b-be25-6cce8865fc71) interfaces together with tasks to send HTTP GET and POST requests to a web service in a [!INCLUDE[win8_appname_long](../../build/includes/win8_appname_long_md.md)] app."},{"content":"Walkthrough: Creating an Agent-Based Application","pos":[1345,1393]},{"content":"Describes how to create a basic agent-based application.","pos":[1472,1528]},{"content":"Walkthrough: Creating a Dataflow Agent","pos":[1536,1574]},{"content":"Demonstrates how to create agent-based applications that are based on dataflow, instead of on control flow.","pos":[1643,1750]},{"content":"Walkthrough: Creating an Image-Processing Network","pos":[1758,1807]},{"content":"Demonstrates how to create a network of asynchronous message blocks that perform image processing.","pos":[1887,1985]},{"content":"Walkthrough: Implementing Futures","pos":[1993,2026]},{"content":"Shows how to asynchronously compute values for later use.","pos":[2090,2147]},{"content":"Walkthrough: Using join to Prevent Deadlock","pos":[2155,2198]},{"content":"Uses the dining philosophers problem to illustrate how to use the <bpt id=\"p1\">[</bpt>concurrency::join<ept id=\"p1\">](../../parallel/concrt/reference/join-class.md)</ept> class to prevent deadlock in your application.","pos":[2272,2451],"source":" Uses the dining philosophers problem to illustrate how to use the [concurrency::join](../../parallel/concrt/reference/join-class.md) class to prevent deadlock in your application."},{"content":"Walkthrough: Removing Work from a User-Interface Thread","pos":[2459,2514]},{"content":"Demonstrates how to improve the performance of an MFC application that draws the Mandelbrot fractal.","pos":[2600,2700]},{"content":"Walkthrough: Using the Concurrency Runtime in a COM-Enabled Application","pos":[2708,2779]},{"content":"Demonstrates how to use the Concurrency Runtime in an application that uses the Component Object Model (COM).","pos":[2881,2990]},{"content":"Walkthrough: Adapting Existing Code to Use Lightweight Tasks","pos":[2998,3058]},{"content":"Shows how to adapt existing code that uses the Windows API to create and execute a thread to use a lightweight task.","pos":[3149,3265]},{"content":"Walkthrough: Creating a Custom Message Block","pos":[3273,3317]},{"content":"Describes how to create a custom message block type that orders incoming messages by priority.","pos":[3392,3486]},{"content":"Related Sections","pos":[3495,3511]},{"content":"Concurrency Runtime","pos":[3516,3535]},{"content":"Introduces the concurrent programming framework for Visual C++.","pos":[3586,3649]}],"content":"---\ntitle: \"Concurrency Runtime Walkthroughs | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"walkthroughs [Concurrency Runtime]\"\n  - \"Concurrency Runtime, walkthroughs\"\nms.assetid: 7374c5e9-54eb-44bf-9ed9-5e190cfd290b\ncaps.latest.revision: 14\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Concurrency Runtime Walkthroughs\nThe scenario-based topics in this section show how to use many of the features of the Concurrency Runtime.  \n  \n## In This Section  \n [Walkthrough: Connecting Using Tasks and XML HTTP Requests](../../parallel/concrt/walkthrough-connecting-using-tasks-and-xml-http-requests.md)  \n Shows how to use the [IXMLHTTPRequest2](http://msdn.microsoft.com/en-us/bbc11c4a-aecf-4d6d-8275-3e852e309908) and [IXMLHTTPRequest2Callback](http://msdn.microsoft.com/en-us/aa4b3f4c-6e28-458b-be25-6cce8865fc71) interfaces together with tasks to send HTTP GET and POST requests to a web service in a [!INCLUDE[win8_appname_long](../../build/includes/win8_appname_long_md.md)] app.  \n  \n [Walkthrough: Creating an Agent-Based Application](../../parallel/concrt/walkthrough-creating-an-agent-based-application.md)  \n Describes how to create a basic agent-based application.  \n  \n [Walkthrough: Creating a Dataflow Agent](../../parallel/concrt/walkthrough-creating-a-dataflow-agent.md)  \n Demonstrates how to create agent-based applications that are based on dataflow, instead of on control flow.  \n  \n [Walkthrough: Creating an Image-Processing Network](../../parallel/concrt/walkthrough-creating-an-image-processing-network.md)  \n Demonstrates how to create a network of asynchronous message blocks that perform image processing.  \n  \n [Walkthrough: Implementing Futures](../../parallel/concrt/walkthrough-implementing-futures.md)  \n Shows how to asynchronously compute values for later use.  \n  \n [Walkthrough: Using join to Prevent Deadlock](../../parallel/concrt/walkthrough-using-join-to-prevent-deadlock.md)  \n Uses the dining philosophers problem to illustrate how to use the [concurrency::join](../../parallel/concrt/reference/join-class.md) class to prevent deadlock in your application.  \n  \n [Walkthrough: Removing Work from a User-Interface Thread](../../parallel/concrt/walkthrough-removing-work-from-a-user-interface-thread.md)  \n Demonstrates how to improve the performance of an MFC application that draws the Mandelbrot fractal.  \n  \n [Walkthrough: Using the Concurrency Runtime in a COM-Enabled Application](../../parallel/concrt/walkthrough-using-the-concurrency-runtime-in-a-com-enabled-application.md)  \n Demonstrates how to use the Concurrency Runtime in an application that uses the Component Object Model (COM).  \n  \n [Walkthrough: Adapting Existing Code to Use Lightweight Tasks](../../parallel/concrt/walkthrough-adapting-existing-code-to-use-lightweight-tasks.md)  \n Shows how to adapt existing code that uses the Windows API to create and execute a thread to use a lightweight task.  \n  \n [Walkthrough: Creating a Custom Message Block](../../parallel/concrt/walkthrough-creating-a-custom-message-block.md)  \n Describes how to create a custom message block type that orders incoming messages by priority.  \n  \n## Related Sections  \n [Concurrency Runtime](../../parallel/concrt/concurrency-runtime.md)  \n Introduces the concurrent programming framework for Visual C++.\n\n"}