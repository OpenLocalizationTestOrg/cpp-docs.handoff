{"nodes":[{"pos":[12,76],"content":"Override Specifiers  (C++ Component Extensions) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Override Specifiers  (C++ Component Extensions) | Microsoft Docs","pos":[0,64]}]},{"content":"Override Specifiers  (C++ Component Extensions)","pos":[680,727]},{"pos":[728,832],"content":"<bpt id=\"p1\">*</bpt>Override specifiers<ept id=\"p1\">*</ept> modify how inherited types and members of inherited types behave in derived types.","source":"*Override specifiers* modify how inherited types and members of inherited types behave in derived types."},{"content":"All Runtimes","pos":[841,853]},{"content":"Remarks","pos":[859,866]},{"content":"For more information about override specifiers, see:","pos":[875,927]},{"content":"abstract","pos":[938,946]},{"content":"new (new slot in vtable)","pos":[1007,1031]},{"content":"override","pos":[1106,1114]},{"content":"sealed","pos":[1175,1181]},{"content":"Override Specifiers and Native Compilations","pos":[1240,1283]},{"pos":[1382,1477],"content":"and <ph id=\"ph1\">`sealed`</ph> are also valid on type declarations, where they do not act as override specifiers.","source":" and `sealed` are also valid on type declarations, where they do not act as override specifiers."},{"pos":[1484,1634],"content":"For information about explicitly overriding base class functions, see <bpt id=\"p1\">[</bpt>Explicit Overrides<ept id=\"p1\">](../windows/explicit-overrides-cpp-component-extensions.md)</ept>.","source":"For information about explicitly overriding base class functions, see [Explicit Overrides](../windows/explicit-overrides-cpp-component-extensions.md)."},{"content":"Windows Runtime","pos":[1643,1658]},{"content":"(There are no remarks for this language feature that apply to only the Windows Runtime.)","pos":[1662,1750]},{"content":"Requirements","pos":[1760,1772]},{"pos":[1776,1800],"content":"Compiler option: <bpt id=\"p1\">**</bpt>/ZW<ept id=\"p1\">**</ept>","source":"Compiler option: **/ZW**"},{"content":"Common Language Runtime","pos":[1809,1832]},{"content":"(There are no remarks for this language feature that apply to only the common language runtime.)","pos":[1836,1932]},{"content":"Requirements","pos":[1942,1954]},{"pos":[1958,1983],"content":"Compiler option: <bpt id=\"p1\">**</bpt>/clr<ept id=\"p1\">**</ept>","source":"Compiler option: **/clr**"},{"content":"See Also","pos":[1992,2000]},{"content":"Component Extensions for Runtime Platforms","pos":[2005,2047]}],"content":"---\ntitle: \"Override Specifiers  (C++ Component Extensions) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"language-reference\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"override specifiers, Visual C++\"\n  - \"override specifiers\"\nms.assetid: 155bbf6f-4722-4654-afb1-9cb52af799fb\ncaps.latest.revision: 13\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"ru-ru\"\n  - \"zh-cn\"\n  - \"zh-tw\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"tr-tr\"\n---\n# Override Specifiers  (C++ Component Extensions)\n*Override specifiers* modify how inherited types and members of inherited types behave in derived types.  \n  \n## All Runtimes  \n **Remarks**  \n  \n For more information about override specifiers, see:  \n  \n-   [abstract](../windows/abstract-cpp-component-extensions.md)  \n  \n-   [new (new slot in vtable)](../windows/new-new-slot-in-vtable-cpp-component-extensions.md)  \n  \n-   [override](../windows/override-cpp-component-extensions.md)  \n  \n-   [sealed](../windows/sealed-cpp-component-extensions.md)  \n  \n-   [Override Specifiers and Native Compilations](../dotnet/how-to-declare-override-specifiers-in-native-compilations-cpp-cli.md)  \n  \n `abstract` and `sealed` are also valid on type declarations, where they do not act as override specifiers.  \n  \n For information about explicitly overriding base class functions, see [Explicit Overrides](../windows/explicit-overrides-cpp-component-extensions.md).  \n  \n## Windows Runtime  \n (There are no remarks for this language feature that apply to only the Windows Runtime.)  \n  \n### Requirements  \n Compiler option: **/ZW**  \n  \n## Common Language Runtime  \n (There are no remarks for this language feature that apply to only the common language runtime.)  \n  \n### Requirements  \n Compiler option: **/clr**  \n  \n## See Also  \n [Component Extensions for Runtime Platforms](../windows/component-extensions-for-runtime-platforms.md)"}