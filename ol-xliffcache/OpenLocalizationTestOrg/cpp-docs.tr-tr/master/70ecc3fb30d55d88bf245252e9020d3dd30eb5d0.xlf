<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="tr-tr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-04506c2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">70ecc3fb30d55d88bf245252e9020d3dd30eb5d0</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\data\odbc\recordset-creating-and-closing-recordsets-odbc.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8dd87355051f6182ac074fccc6f9b4e0a675b310</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1d44956b05699e8d5d2eacaedead66787f06e487</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Recordset: Creating and Closing Recordsets (ODBC) | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Recordset: Creating and Closing Recordsets (ODBC)</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This topic applies to the MFC ODBC classes.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>To use a recordset, construct a recordset object and then call its <bpt id="p1">**</bpt>Open<ept id="p1">**</ept> member function to run the recordset's query and select records.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>When you finish with the recordset, close and destroy the object.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>This topic explains:</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>When and how to create a recordset object<ept id="p1">](#_core_creating_recordsets_at_run_time)</ept>.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>When and how you can qualify the recordset's behavior by parameterizing, filtering, sorting, or locking it<ept id="p1">](#_core_setting_recordset_options)</ept>.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>When and how to close a recordset object<ept id="p1">](#_core_closing_a_recordset)</ept>.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Creating Recordsets at Run Time</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Before you can create recordset objects in your program, you typically write application-specific recordset classes.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>For more information about this preliminary step, see <bpt id="p1">[</bpt>Adding an MFC ODBC Consumer<ept id="p1">](../../mfc/reference/adding-an-mfc-odbc-consumer.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Open a dynaset or snapshot object when you need to select records from a data source.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The type of object to create depends on what you need to do with the data in your application and on what your ODBC driver supports.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Dynaset<ept id="p1">](../../data/odbc/dynaset.md)</ept> and <bpt id="p2">[</bpt>Snapshot<ept id="p2">](../../data/odbc/snapshot.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>To open a recordset</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Construct an object of your <ph id="ph1">`CRecordset`</ph>-derived class.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>You can construct the object on the heap or on the stack frame of a function.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Optionally modify the default recordset behavior.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>For the available options, see <bpt id="p1">[</bpt>Setting Recordset Options<ept id="p1">](#_core_setting_recordset_options)</ept>.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Call the object's <bpt id="p1">[</bpt>Open<ept id="p1">](../../mfc/reference/crecordset-class.md#crecordset__open)</ept> member function.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>In the constructor, pass a pointer to a <ph id="ph1">`CDatabase`</ph> object or pass <bpt id="p1">**</bpt>NULL<ept id="p1">**</ept> to use a temporary database object that the framework constructs and opens based on the connection string returned by the <bpt id="p2">[</bpt>GetDefaultConnect<ept id="p2">](../../mfc/reference/crecordset-class.md#crecordset__getdefaultconnect)</ept> member function.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`CDatabase`</ph> object might already be connected to a data source.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The call to <bpt id="p1">**</bpt>Open<ept id="p1">**</ept> uses SQL to select records from the data source.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The first record selected (if any) is the current record.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The values of this record's fields are stored in the recordset object's field data members.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>If any records were selected, both the <ph id="ph1">`IsBOF`</ph> and <ph id="ph2">`IsEOF`</ph> member functions return 0.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>In your <bpt id="p1">[</bpt>Open<ept id="p1">](../../mfc/reference/crecordset-class.md#crecordset__open)</ept> call, you can:</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Specify whether the recordset is a dynaset or snapshot.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Recordsets open as snapshots by default.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Or, you can specify a forward-only recordset, which allows only forward scrolling, one record at a time.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>By default, a recordset uses the default type stored in the <ph id="ph1">`CRecordset`</ph> data member <bpt id="p1">**</bpt>m_nDefaultType<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Wizards write code to initialize <bpt id="p1">**</bpt>m_nDefaultType<ept id="p1">**</ept> to the recordset type you choose in the wizard.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Rather than accepting this default, you can substitute another recordset type.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Specify a string to replace the default SQL <bpt id="p1">**</bpt>SELECT<ept id="p1">**</ept> statement that the recordset constructs.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Specify whether the recordset is read-only or append-only.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Recordsets allow full updating by default, but you can limit that to adding new records only or you can disallow all updates.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The following example shows how to open a read-only snapshot object of class <ph id="ph1">`CStudentSet`</ph>, an application-specific class:</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>After you call <bpt id="p1">**</bpt>Open<ept id="p1">**</ept>, use the member functions and data members of the object to work with the records.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>In some cases, you might want to requery or refresh the recordset to include changes that have occurred on the data source.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Recordset: Requerying a Recordset (ODBC)<ept id="p1">](../../data/odbc/recordset-requerying-a-recordset-odbc.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The connect string you use during development might not be the same connect string that your eventual users need.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>For ideas about generalizing your application in this regard, see <bpt id="p1">[</bpt>Data Source: Managing Connections (ODBC)<ept id="p1">](../../data/odbc/data-source-managing-connections-odbc.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Setting Recordset Options</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>After you construct your recordset object but before you call <bpt id="p1">**</bpt>Open<ept id="p1">**</ept> to select records, you might want to set some options to control the recordset's behavior.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>For all recordsets, you can:</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Specify a <bpt id="p1">[</bpt>filter<ept id="p1">](../../data/odbc/recordset-filtering-records-odbc.md)</ept> to constrain record selection.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Specify a <bpt id="p1">[</bpt>sort<ept id="p1">](../../data/odbc/recordset-sorting-records-odbc.md)</ept> order for the records.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Specify <bpt id="p1">[</bpt>parameters<ept id="p1">](../../data/odbc/recordset-parameterizing-a-recordset-odbc.md)</ept> so you can select records using information obtained or calculated at run time.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>You can also set the following option if conditions are right:</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>If the recordset is updateable and supports locking options, specify the <bpt id="p1">[</bpt>locking<ept id="p1">](../../data/odbc/recordset-locking-records-odbc.md)</ept> method used for updates.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>To affect record selection, you must set these options before you call the <bpt id="p1">**</bpt>Open<ept id="p1">**</ept> member function.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Closing a Recordset</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>When you finish with your recordset, you must dispose of it and deallocate its memory.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>To close a recordset</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Call its <bpt id="p1">[</bpt>Close<ept id="p1">](../../mfc/reference/crecordset-class.md#crecordset__close)</ept> member function.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Destroy the recordset object.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>If you declared it on the stack frame of a function, the object is destroyed automatically when the object goes out of scope.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Otherwise, use the <bpt id="p1">**</bpt>delete<ept id="p1">**</ept> operator.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Close<ept id="p1">**</ept> frees the recordset's <bpt id="p2">**</bpt>HSTMT<ept id="p2">**</ept> handle.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>It does not destroy the C++ object.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Recordset (ODBC)</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Recordset: Scrolling (ODBC)</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Recordset: Adding, Updating, and Deleting Records (ODBC)</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>