<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="tr-tr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-04506c2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">bf98a3d0d8dab7552c3834ecb030f1b65699953c</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\mfc\providing-windowless-activation.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">31b71b3f4ee09e2a0e57818220d6acd9790d52e1</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">82ac2bd3f80e0b7cef60d025e755f3d926ffc4a6</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Providing Windowless Activation | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Providing Windowless Activation</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Window creation code (that is, everything that happens when you call <bpt id="p1">**</bpt>CreateWindow<ept id="p1">**</ept>) is costly to execute.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>A control that maintains an on-screen window has to manage messages for the window.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Windowless controls are therefore faster than controls with windows.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>A further advantage of windowless controls is that, unlike windowed controls, windowless controls support transparent painting and nonrectangular screen regions.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>A common example of a transparent control is a text control with a transparent background.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The controls paints the text but not the background, so whatever is under the text shows through.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Newer forms often make use of nonrectangular controls, such as arrows and round buttons.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Often, a control does not need a window of its own and, instead, can use the window services of its container, provided that the container has been written to support windowless objects.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Windowless controls are backward compatible with older containers.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>In older containers not written to support windowless controls, the windowless controls create a window when active.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Because windowless controls do not have their own windows, the container (which does have a window) is responsible for providing services that would otherwise have been provided by the control's own window.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>For example, if your control needs to query the keyboard focus, capture the mouse, or obtain a device context, these operations are managed by the container.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The container routes user input messages sent to its window to the appropriate windowless control, using the <ph id="ph1">`IOleInPlaceObjectWindowless`</ph> interface.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>(See the <bpt id="p1">*</bpt>ActiveX SDK<ept id="p1">*</ept> for a description of this interface.) <ph id="ph1">`COleControl`</ph> member functions invoke these services from the container.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>To make your control use windowless activation, include the <bpt id="p1">**</bpt>windowlessActivate<ept id="p1">**</ept> flag in the set of flags returned by <bpt id="p2">[</bpt>COleControl::GetControlFlags<ept id="p2">](../mfc/reference/colecontrol-class.md#colecontrol__getcontrolflags)</ept>.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>For example:</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>NVC_MFC_AxOpt#5</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>NVC_MFC_AxOpt#6</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>NVC_MFC_AxOpt#7</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The code to include this flag is automatically generated if you select the <bpt id="p1">**</bpt>Windowless activation<ept id="p1">**</ept> option on the <bpt id="p2">[</bpt>Control Settings<ept id="p2">](../mfc/reference/control-settings-mfc-activex-control-wizard.md)</ept> page of the MFC ActiveX Control Wizard.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>When windowless activation is enabled, the container will delegate input messages to the control's <ph id="ph1">`IOleInPlaceObjectWindowless`</ph> interface.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>'s implementation of this interface dispatches the messages through your control's message map, after adjusting the mouse coordinates appropriately.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>You can process the messages like ordinary window messages, by adding the corresponding entries to the message map.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>In your handlers for these messages, avoid using the <ph id="ph1">`m_hWnd`</ph> member variable (or any member function that uses it) without first checking that its value is not <bpt id="p1">**</bpt>NULL<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>provides member functions that invoke mouse capture, keyboard focus, scrolling, and other window services from the container as appropriate, including:</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>GetFocus<ept id="p1">](../mfc/reference/colecontrol-class.md#colecontrol__getfocus)</ept>, <bpt id="p2">[</bpt>SetFocus<ept id="p2">](../mfc/reference/colecontrol-class.md#colecontrol__setfocus)</ept></source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>GetCapture<ept id="p1">](../mfc/reference/colecontrol-class.md#colecontrol__getcapture)</ept>, <bpt id="p2">[</bpt>SetCapture<ept id="p2">](../mfc/reference/colecontrol-class.md#colecontrol__setcapture)</ept>, <bpt id="p3">[</bpt>ReleaseCapture<ept id="p3">](../mfc/reference/colecontrol-class.md#colecontrol__releasecapture)</ept></source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>GetDC<ept id="p1">](../mfc/reference/colecontrol-class.md#colecontrol__getdc)</ept>, <bpt id="p2">[</bpt>ReleaseDC<ept id="p2">](../mfc/reference/colecontrol-class.md#colecontrol__releasedc)</ept></source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>InvalidateRgn</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>ScrollWindow</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>GetClientRect</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>In windowless controls, you should always use the <ph id="ph1">`COleControl`</ph> member functions instead of the corresponding <ph id="ph2">`CWnd`</ph> member functions or their related Win32 API functions.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>You may want a windowless control to be the target of an OLE drag-and-drop operation.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Normally, this would require that the control's window be registered as a drop target.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Since the control has no window of its own, the container uses its own window as a drop target.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The control provides an implementation of the <ph id="ph1">`IDropTarget`</ph> interface to which the container can delegate calls at the appropriate time.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>To expose this interface to the container, override <bpt id="p1">[</bpt>COleControl::GetWindowlessDropTarget<ept id="p1">](../mfc/reference/colecontrol-class.md#colecontrol__getwindowlessdroptarget)</ept>.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>For example:</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>NVC_MFC_AxOpt#8</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>MFC ActiveX Controls: Optimization</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>