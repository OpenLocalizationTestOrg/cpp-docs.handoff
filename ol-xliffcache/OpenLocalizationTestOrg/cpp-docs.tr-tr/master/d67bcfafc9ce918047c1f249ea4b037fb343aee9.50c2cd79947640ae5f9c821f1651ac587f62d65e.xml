{"nodes":[{"pos":[12,51],"content":"CComObjectNoLock Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"CComObjectNoLock Class | Microsoft Docs","pos":[0,39]}]},{"content":"CComObjectNoLock Class","pos":[744,766]},{"pos":[767,894],"content":"This class implements <bpt id=\"p1\">**</bpt>IUnknown<ept id=\"p1\">**</ept> for a nonaggregated object, but does not increment the module lock count in the constructor.","source":"This class implements **IUnknown** for a nonaggregated object, but does not increment the module lock count in the constructor."},{"content":"Syntax","pos":[903,909]},{"content":"Parameters","pos":[993,1003]},{"content":"Your class, derived from <bpt id=\"p1\">[</bpt>CComObjectRoot<ept id=\"p1\">](../../atl/reference/ccomobjectroot-class.md)</ept> or <bpt id=\"p2\">[</bpt>CComObjectRootEx<ept id=\"p2\">](../../atl/reference/ccomobjectrootex-class.md)</ept>, as well as from any other interface you want to support on the object.","pos":[1017,1244],"source":" Your class, derived from [CComObjectRoot](../../atl/reference/ccomobjectroot-class.md) or [CComObjectRootEx](../../atl/reference/ccomobjectrootex-class.md), as well as from any other interface you want to support on the object."},{"content":"Members","pos":[1253,1260]},{"content":"Public Constructors","pos":[1270,1289]},{"content":"Name","pos":[1296,1300]},{"content":"Description","pos":[1301,1312]},{"content":"CComObjectNoLock::CComObjectNoLock","pos":[1351,1385]},{"content":"Constructor.","pos":[1424,1436]},{"content":"CComObjectNoLock::~CComObjectNoLock","pos":[1442,1477]},{"content":"The destructor.","pos":[1521,1536]},{"content":"Public Methods","pos":[1547,1561]},{"content":"Name","pos":[1568,1572]},{"content":"Description","pos":[1573,1584]},{"content":"CComObjectNoLock::AddRef","pos":[1623,1647]},{"content":"Increments the reference count on the object.","pos":[1676,1721]},{"content":"CComObjectNoLock::QueryInterface","pos":[1727,1759]},{"content":"Returns a pointer to the requested interface.","pos":[1796,1841]},{"content":"CComObjectNoLock::Release","pos":[1847,1872]},{"content":"Decrements the reference count on the object.","pos":[1902,1947]},{"content":"Remarks","pos":[1957,1964]},{"pos":[1987,2264],"content":"is similar to <bpt id=\"p1\">[</bpt>CComObject<ept id=\"p1\">](../../atl/reference/ccomobject-class.md)</ept> in that it implements <bpt id=\"p2\">[</bpt>IUnknown<ept id=\"p2\">](http://msdn.microsoft.com/library/windows/desktop/ms680509)</ept> for a nonaggregated object; however, <ph id=\"ph1\">`CComObjectNoLock`</ph> does not increment the module lock count in the constructor.","source":" is similar to [CComObject](../../atl/reference/ccomobject-class.md) in that it implements [IUnknown](http://msdn.microsoft.com/library/windows/desktop/ms680509) for a nonaggregated object; however, `CComObjectNoLock` does not increment the module lock count in the constructor."},{"content":"ATL uses <ph id=\"ph1\">`CComObjectNoLock`</ph> internally for class factories.","pos":[2271,2330],"source":"ATL uses `CComObjectNoLock` internally for class factories."},{"content":"In general, you will not use this class directly.","pos":[2331,2380]},{"content":"Inheritance Hierarchy","pos":[2389,2410]},{"content":"Requirements","pos":[2454,2466]},{"pos":[2470,2490],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> atlcom.h","source":"**Header:** atlcom.h"},{"pos":[2541,2565],"content":"CComObjectNoLock::AddRef"},{"content":"Increments the reference count on the object.","pos":[2569,2614]},{"content":"Return Value","pos":[2666,2678]},{"content":"A value that may be useful for diagnostics or testing.","pos":[2682,2736]},{"pos":[2797,2831],"content":"CComObjectNoLock::CComObjectNoLock"},{"content":"The constructor.","pos":[2835,2851]},{"content":"Unlike <bpt id=\"p1\">[</bpt>CComObject<ept id=\"p1\">](../../atl/reference/ccomobject-class.md)</ept>, does not increment the module lock count.","pos":[2852,2955],"source":" Unlike [CComObject](../../atl/reference/ccomobject-class.md), does not increment the module lock count."},{"content":"Parameters","pos":[3010,3020]},{"content":"void","pos":[3026,3030]},{"content":"[in] This unnamed parameter is not used.","pos":[3038,3078]},{"content":"It exists for symmetry with other <bpt id=\"p1\">**</bpt>CCom<ept id=\"p1\">**</ept><bpt id=\"p2\">*</bpt>XXX<ept id=\"p2\">*</ept><ph id=\"ph1\">`Object`</ph><bpt id=\"p3\">*</bpt>XXX<ept id=\"p3\">*</ept> constructors.","pos":[3079,3153],"source":" It exists for symmetry with other **CCom***XXX*`Object`*XXX* constructors."},{"pos":[3219,3254],"content":"CComObjectNoLock::~CComObjectNoLock"},{"content":"The destructor.","pos":[3258,3273]},{"content":"Remarks","pos":[3317,3324]},{"pos":[3328,3441],"content":"Frees all allocated resources and calls <bpt id=\"p1\">[</bpt>FinalRelease<ept id=\"p1\">](ccomobjectrootex-class.md#ccomobjectrootex__finalrelease)</ept>.","source":"Frees all allocated resources and calls [FinalRelease](ccomobjectrootex-class.md#ccomobjectrootex__finalrelease)."},{"pos":[3501,3533],"content":"CComObjectNoLock::QueryInterface"},{"content":"Retrieves a pointer to the requested interface.","pos":[3537,3584]},{"content":"Parameters","pos":[3668,3678]},{"content":"[in] The identifier of the interface being requested.","pos":[3691,3744]},{"content":"[out] A pointer to the interface pointer identified by <ph id=\"ph1\">`iid`</ph>.","pos":[3766,3827],"source":" [out] A pointer to the interface pointer identified by `iid`."},{"content":"If the object does not support this interface, <ph id=\"ph1\">`ppvObject`</ph> is set to <bpt id=\"p1\">**</bpt>NULL<ept id=\"p1\">**</ept>.","pos":[3828,3906],"source":" If the object does not support this interface, `ppvObject` is set to **NULL**."},{"content":"Return Value","pos":[3916,3928]},{"pos":[3932,3959],"content":"A standard <ph id=\"ph1\">`HRESULT`</ph> value.","source":"A standard `HRESULT` value."},{"pos":[4011,4036],"content":"CComObjectNoLock::Release"},{"content":"Decrements the reference count on the object.","pos":[4040,4085]},{"content":"Return Value","pos":[4138,4150]},{"content":"In debug builds, <bpt id=\"p1\">**</bpt>Release<ept id=\"p1\">**</ept> returns a value that may be useful for diagnostics or testing.","pos":[4154,4245],"source":"In debug builds, **Release** returns a value that may be useful for diagnostics or testing."},{"content":"In non-debug builds, <bpt id=\"p1\">**</bpt>Release<ept id=\"p1\">**</ept> always returns 0.","pos":[4246,4296],"source":" In non-debug builds, **Release** always returns 0."},{"content":"See Also","pos":[4305,4313]},{"content":"Class Overview","pos":[4318,4332]}],"content":"---\ntitle: \"CComObjectNoLock Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"ATL.CComObjectNoLock\"\n  - \"ATL::CComObjectNoLock\"\n  - \"ATL.CComObjectNoLock<Base>\"\n  - \"CComObjectNoLock\"\n  - \"ATL::CComObjectNoLock<Base>\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"CComObjectNoLock class\"\nms.assetid: 288c6506-7da8-4127-8d58-7f4bd779539a\ncaps.latest.revision: 19\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# CComObjectNoLock Class\nThis class implements **IUnknown** for a nonaggregated object, but does not increment the module lock count in the constructor.  \n  \n## Syntax  \n  \n```\ntemplate<class Base>  class CComObjectNoLock :  public Base\n```  \n  \n#### Parameters  \n `Base`  \n Your class, derived from [CComObjectRoot](../../atl/reference/ccomobjectroot-class.md) or [CComObjectRootEx](../../atl/reference/ccomobjectrootex-class.md), as well as from any other interface you want to support on the object.  \n  \n## Members  \n  \n### Public Constructors  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CComObjectNoLock::CComObjectNoLock](#ccomobjectnolock__ccomobjectnolock)|Constructor.|  \n|[CComObjectNoLock::~CComObjectNoLock](#ccomobjectnolock___dtorccomobjectnolock)|The destructor.|  \n  \n### Public Methods  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CComObjectNoLock::AddRef](#ccomobjectnolock__addref)|Increments the reference count on the object.|  \n|[CComObjectNoLock::QueryInterface](#ccomobjectnolock__queryinterface)|Returns a pointer to the requested interface.|  \n|[CComObjectNoLock::Release](#ccomobjectnolock__release)|Decrements the reference count on the object.|  \n  \n## Remarks  \n `CComObjectNoLock` is similar to [CComObject](../../atl/reference/ccomobject-class.md) in that it implements [IUnknown](http://msdn.microsoft.com/library/windows/desktop/ms680509) for a nonaggregated object; however, `CComObjectNoLock` does not increment the module lock count in the constructor.  \n  \n ATL uses `CComObjectNoLock` internally for class factories. In general, you will not use this class directly.  \n  \n## Inheritance Hierarchy  \n `Base`  \n  \n `CComObjectNoLock`  \n  \n## Requirements  \n **Header:** atlcom.h  \n  \n##  <a name=\"ccomobjectnolock__addref\"></a>  CComObjectNoLock::AddRef  \n Increments the reference count on the object.  \n  \n```\nSTDMETHOD_(ULONG, AddRef)();\n```  \n  \n### Return Value  \n A value that may be useful for diagnostics or testing.  \n  \n##  <a name=\"ccomobjectnolock__ccomobjectnolock\"></a>  CComObjectNoLock::CComObjectNoLock  \n The constructor. Unlike [CComObject](../../atl/reference/ccomobject-class.md), does not increment the module lock count.  \n  \n```\nCComObjectNoLock(void* = NULL);\n```  \n  \n### Parameters  \n **void\\***  \n [in] This unnamed parameter is not used. It exists for symmetry with other **CCom***XXX*`Object`*XXX* constructors.  \n  \n##  <a name=\"ccomobjectnolock___dtorccomobjectnolock\"></a>  CComObjectNoLock::~CComObjectNoLock  \n The destructor.  \n  \n```\n~CComObjectNoLock();\n```  \n  \n### Remarks  \n Frees all allocated resources and calls [FinalRelease](ccomobjectrootex-class.md#ccomobjectrootex__finalrelease).  \n\n  \n##  <a name=\"ccomobjectnolock__queryinterface\"></a>  CComObjectNoLock::QueryInterface  \n Retrieves a pointer to the requested interface.  \n  \n```\nSTDMETHOD(QueryInterface)(REFIID iid,\n    void** ppvObject);\n```  \n  \n### Parameters  \n `iid`  \n [in] The identifier of the interface being requested.  \n  \n `ppvObject`  \n [out] A pointer to the interface pointer identified by `iid`. If the object does not support this interface, `ppvObject` is set to **NULL**.  \n  \n### Return Value  \n A standard `HRESULT` value.  \n  \n##  <a name=\"ccomobjectnolock__release\"></a>  CComObjectNoLock::Release  \n Decrements the reference count on the object.  \n  \n```\nSTDMETHOD_(ULONG, Release)();\n```  \n  \n### Return Value  \n In debug builds, **Release** returns a value that may be useful for diagnostics or testing. In non-debug builds, **Release** always returns 0.  \n  \n## See Also  \n [Class Overview](../../atl/atl-class-overview.md)\n"}