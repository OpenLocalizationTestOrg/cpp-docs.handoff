{"nodes":[{"pos":[12,51],"content":"__security_init_cookie | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"__security_init_cookie | Microsoft Docs","pos":[0,39]}]},{"pos":[1047,1069],"content":"__security_init_cookie","linkify":"__security_init_cookie","nodes":[{"content":"__security_init_cookie","pos":[0,22]}]},{"content":"Initializes the global security cookie.","pos":[1070,1109]},{"pos":[1118,1124],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[1185,1192],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The global security cookie is used for buffer overrun protection in code compiled with <bpt id=\"p1\">[</bpt>/GS (Buffer Security Check)<ept id=\"p1\">](../../build/reference/gs-buffer-security-check.md)</ept> and in code that uses exception handling.","pos":[1196,1405],"source":"The global security cookie is used for buffer overrun protection in code compiled with [/GS (Buffer Security Check)](../../build/reference/gs-buffer-security-check.md) and in code that uses exception handling."},{"content":"On entry to an overrun-protected function, the cookie is put on the stack, and on exit, the value on the stack is compared with the global cookie.","pos":[1406,1552]},{"content":"Any difference between them indicates that a buffer overrun has occurred and causes immediate termination of the program.","pos":[1553,1674]},{"content":"Normally, <ph id=\"ph1\">`__security_init_cookie`</ph> is called by the CRT when it is initialized.","pos":[1681,1760],"source":"Normally, `__security_init_cookie` is called by the CRT when it is initialized."},{"content":"If you bypass CRT initialization—for example, if you use <bpt id=\"p1\">[</bpt>/ENTRY<ept id=\"p1\">](../../build/reference/entry-entry-point-symbol.md)</ept> to specify an entry-point—then you must call <ph id=\"ph1\">`__security_init_cookie`</ph> yourself.","pos":[1761,1957],"source":" If you bypass CRT initialization—for example, if you use [/ENTRY](../../build/reference/entry-entry-point-symbol.md) to specify an entry-point—then you must call `__security_init_cookie` yourself."},{"content":"If <ph id=\"ph1\">`__security_init_cookie`</ph> is not called, the global security cookie is set to a default value and buffer overrun protection is compromised.","pos":[1958,2099],"source":" If `__security_init_cookie` is not called, the global security cookie is set to a default value and buffer overrun protection is compromised."},{"content":"Because an attacker can exploit this default cookie value to defeat the buffer overrun checks, we recommend that you always call <ph id=\"ph1\">`__security_init_cookie`</ph> when you define your own entry point.","pos":[2100,2291],"source":" Because an attacker can exploit this default cookie value to defeat the buffer overrun checks, we recommend that you always call `__security_init_cookie` when you define your own entry point."},{"content":"The call to <ph id=\"ph1\">`__security_init_cookie`</ph> must be made before any overrun-protected function is entered; otherwise a spurious buffer overrun will be detected.","pos":[2298,2451],"source":"The call to `__security_init_cookie` must be made before any overrun-protected function is entered; otherwise a spurious buffer overrun will be detected."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>C Runtime Error R6035<ept id=\"p1\">](../../error-messages/tool-errors/c-runtime-error-r6035.md)</ept>.","pos":[2452,2561],"source":" For more information, see [C Runtime Error R6035](../../error-messages/tool-errors/c-runtime-error-r6035.md)."},{"pos":[2570,2577],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[2581,2684],"content":"See the examples in <bpt id=\"p1\">[</bpt>C Runtime Error R6035<ept id=\"p1\">](../../error-messages/tool-errors/c-runtime-error-r6035.md)</ept>.","source":"See the examples in [C Runtime Error R6035](../../error-messages/tool-errors/c-runtime-error-r6035.md)."},{"pos":[2693,2705],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"content":"Routine","pos":[2712,2719]},{"content":"Required header","pos":[2720,2735]},{"content":"<ph id=\"ph1\">\\&lt;</ph>process.h&gt;","pos":[2805,2817],"source":"\\<process.h>"},{"content":"<ph id=\"ph1\">`__security_init_cookie`</ph> is a Microsoft extension to the standard C Runtime Library.","pos":[2825,2909],"source":"`__security_init_cookie` is a Microsoft extension to the standard C Runtime Library."},{"content":"For compatibility information, see <bpt id=\"p1\">[</bpt>Compatibility<ept id=\"p1\">](../../c-runtime-library/compatibility.md)</ept>.","pos":[2910,3003],"source":" For compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md)."},{"pos":[3012,3037],"content":".NET Framework Equivalent","linkify":".NET Framework Equivalent","nodes":[{"content":".NET Framework Equivalent","pos":[0,25]}]},{"content":"Not applicable.","pos":[3041,3056]},{"content":"This function should only be called from native code, not managed code.","pos":[3057,3128]},{"pos":[3137,3145],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"pos":[3149,3229],"content":"<bpt id=\"p1\">[</bpt>Compiler Security Checks In Depth<ept id=\"p1\">](http://go.microsoft.com/fwlink/?linkid=7260)</ept>","source":"[Compiler Security Checks In Depth](http://go.microsoft.com/fwlink/?linkid=7260)"}],"content":"---\ntitle: \"__security_init_cookie | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\napiname: \n  - \"__security_init_cookie\"\napilocation: \n  - \"msvcrt.dll\"\n  - \"msvcr80.dll\"\n  - \"msvcr90.dll\"\n  - \"msvcr100.dll\"\n  - \"msvcr100_clr0400.dll\"\n  - \"msvcr110.dll\"\n  - \"msvcr110_clr0400.dll\"\n  - \"msvcr120.dll\"\n  - \"msvcr120_clr0400.dll\"\n  - \"ucrtbase.dll\"\napitype: \"DLLExport\"\nf1_keywords: \n  - \"security_init_cookie\"\n  - \"__security_init_cookie\"\ndev_langs: \n  - \"C++\"\n  - \"C\"\nhelpviewer_keywords: \n  - \"security cookie [C++]\"\n  - \"__security_init_cookie function\"\n  - \"security_init_cookie function\"\n  - \"global security cookie\"\nms.assetid: 32119905-0897-4a1c-84ca-bffd16c9b2af\ncaps.latest.revision: 12\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# __security_init_cookie\nInitializes the global security cookie.  \n  \n## Syntax  \n  \n```  \nvoid __security_init_cookie(void);  \n```  \n  \n## Remarks  \n The global security cookie is used for buffer overrun protection in code compiled with [/GS (Buffer Security Check)](../../build/reference/gs-buffer-security-check.md) and in code that uses exception handling. On entry to an overrun-protected function, the cookie is put on the stack, and on exit, the value on the stack is compared with the global cookie. Any difference between them indicates that a buffer overrun has occurred and causes immediate termination of the program.  \n  \n Normally, `__security_init_cookie` is called by the CRT when it is initialized. If you bypass CRT initialization—for example, if you use [/ENTRY](../../build/reference/entry-entry-point-symbol.md) to specify an entry-point—then you must call `__security_init_cookie` yourself. If `__security_init_cookie` is not called, the global security cookie is set to a default value and buffer overrun protection is compromised. Because an attacker can exploit this default cookie value to defeat the buffer overrun checks, we recommend that you always call `__security_init_cookie` when you define your own entry point.  \n  \n The call to `__security_init_cookie` must be made before any overrun-protected function is entered; otherwise a spurious buffer overrun will be detected. For more information, see [C Runtime Error R6035](../../error-messages/tool-errors/c-runtime-error-r6035.md).  \n  \n## Example  \n See the examples in [C Runtime Error R6035](../../error-messages/tool-errors/c-runtime-error-r6035.md).  \n  \n## Requirements  \n  \n|Routine|Required header|  \n|-------------|---------------------|  \n|`__security_init_cookie`|\\<process.h>|  \n  \n `__security_init_cookie` is a Microsoft extension to the standard C Runtime Library. For compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md).  \n  \n## .NET Framework Equivalent  \n Not applicable. This function should only be called from native code, not managed code.  \n  \n## See Also  \n [Compiler Security Checks In Depth](http://go.microsoft.com/fwlink/?linkid=7260)"}