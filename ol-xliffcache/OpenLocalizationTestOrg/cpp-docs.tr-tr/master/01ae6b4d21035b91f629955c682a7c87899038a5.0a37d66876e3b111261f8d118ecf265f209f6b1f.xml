{"nodes":[{"pos":[12,41],"content":"_getmaxstdio | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"_getmaxstdio | Microsoft Docs","pos":[0,29]}]},{"pos":[1034,1046],"content":"_getmaxstdio","linkify":"_getmaxstdio","nodes":[{"content":"_getmaxstdio","pos":[0,12]}]},{"content":"Returns the number of simultaneously open files permitted at the stream I/O level.","pos":[1047,1129]},{"pos":[1138,1144],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[1196,1208],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[1212,1326],"content":"Returns a number that represents the number of simultaneously open files currently permitted at the <ph id=\"ph1\">`stdio`</ph> level.","source":"Returns a number that represents the number of simultaneously open files currently permitted at the `stdio` level."},{"pos":[1335,1342],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[1346,1499],"content":"Use <bpt id=\"p1\">[</bpt>_setmaxstdio<ept id=\"p1\">](../../c-runtime-library/reference/setmaxstdio.md)</ept> to configure the number of simultaneously open files permitted at the <ph id=\"ph1\">`stdio`</ph> level.","source":"Use [_setmaxstdio](../../c-runtime-library/reference/setmaxstdio.md) to configure the number of simultaneously open files permitted at the `stdio` level."},{"pos":[1508,1520],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"content":"Routine","pos":[1527,1534]},{"content":"Required header","pos":[1535,1550]},{"content":"<ph id=\"ph1\">\\&lt;</ph>stdio.h&gt;","pos":[1610,1620],"source":"\\<stdio.h>"},{"pos":[1628,1746],"content":"For more compatibility information, see <bpt id=\"p1\">[</bpt>Compatibility<ept id=\"p1\">](../../c-runtime-library/compatibility.md)</ept> in the Introduction.","source":"For more compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md) in the Introduction."},{"pos":[1755,1762],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[2107,2132],"content":".NET Framework Equivalent","linkify":".NET Framework Equivalent","nodes":[{"content":".NET Framework Equivalent","pos":[0,25]}]},{"content":"Not applicable.","pos":[2136,2151]},{"content":"To call the standard C function, use <ph id=\"ph1\">`PInvoke`</ph>.","pos":[2152,2199],"source":" To call the standard C function, use `PInvoke`."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Platform Invoke Examples<ept id=\"p1\">](http://msdn.microsoft.com/Library/15926806-f0b7-487e-93a6-4e9367ec689f)</ept>.","pos":[2200,2325],"source":" For more information, see [Platform Invoke Examples](http://msdn.microsoft.com/Library/15926806-f0b7-487e-93a6-4e9367ec689f)."},{"pos":[2334,2342],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"pos":[2346,2397],"content":"<bpt id=\"p1\">[</bpt>Stream I/O<ept id=\"p1\">](../../c-runtime-library/stream-i-o.md)</ept>","source":"[Stream I/O](../../c-runtime-library/stream-i-o.md)"}],"content":"---\ntitle: \"_getmaxstdio | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\napiname: \n  - \"_getmaxstdio\"\napilocation: \n  - \"msvcrt.dll\"\n  - \"msvcr80.dll\"\n  - \"msvcr90.dll\"\n  - \"msvcr100.dll\"\n  - \"msvcr100_clr0400.dll\"\n  - \"msvcr110.dll\"\n  - \"msvcr110_clr0400.dll\"\n  - \"msvcr120.dll\"\n  - \"msvcr120_clr0400.dll\"\n  - \"ucrtbase.dll\"\n  - \"api-ms-win-crt-stdio-l1-1-0.dll\"\napitype: \"DLLExport\"\nf1_keywords: \n  - \"_getmaxstdio\"\n  - \"getmaxstdio\"\ndev_langs: \n  - \"C++\"\n  - \"C\"\nhelpviewer_keywords: \n  - \"files [C++], number open\"\n  - \"_getmaxstdio function\"\n  - \"getmaxstdio function\"\n  - \"open files, getting number\"\nms.assetid: 700ca8ce-4a8c-4e00-9467-dfa9d6b831a0\ncaps.latest.revision: 13\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# _getmaxstdio\nReturns the number of simultaneously open files permitted at the stream I/O level.  \n  \n## Syntax  \n  \n```  \nint _getmaxstdio( void );  \n```  \n  \n## Return Value  \n Returns a number that represents the number of simultaneously open files currently permitted at the `stdio` level.  \n  \n## Remarks  \n Use [_setmaxstdio](../../c-runtime-library/reference/setmaxstdio.md) to configure the number of simultaneously open files permitted at the `stdio` level.  \n  \n## Requirements  \n  \n|Routine|Required header|  \n|-------------|---------------------|  \n|`_getmaxstdio`|\\<stdio.h>|  \n  \n For more compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md) in the Introduction.  \n  \n## Example  \n  \n```  \n// crt_setmaxstdio.c  \n// The program retrieves the maximum number  \n// of open files and prints the results  \n// to the console.  \n  \n#include <stdio.h>  \n  \nint main()  \n{  \n   printf( \"%d\\n\", _getmaxstdio());  \n  \n   _setmaxstdio(2048);  \n  \n   printf( \"%d\\n\", _getmaxstdio());  \n}  \n```  \n  \n```Output  \n512  \n2048  \n```  \n  \n## .NET Framework Equivalent  \n Not applicable. To call the standard C function, use `PInvoke`. For more information, see [Platform Invoke Examples](http://msdn.microsoft.com/Library/15926806-f0b7-487e-93a6-4e9367ec689f).  \n  \n## See Also  \n [Stream I/O](../../c-runtime-library/stream-i-o.md)"}