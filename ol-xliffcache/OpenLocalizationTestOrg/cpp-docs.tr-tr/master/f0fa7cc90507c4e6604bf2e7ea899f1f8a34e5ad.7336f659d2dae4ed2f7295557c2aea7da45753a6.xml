{"nodes":[{"pos":[12,51],"content":"CMFCRibbonButton Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"CMFCRibbonButton Class | Microsoft Docs","pos":[0,39]}]},{"content":"CMFCRibbonButton Class","pos":[622,644]},{"pos":[645,794],"content":"The <ph id=\"ph1\">`CMFCRibbonButton`</ph> class implements buttons that you can position on ribbon bar elements such as panels, Quick Access Toolbars, and pop-up menus.","source":"The `CMFCRibbonButton` class implements buttons that you can position on ribbon bar elements such as panels, Quick Access Toolbars, and pop-up menus."},{"content":"Syntax","pos":[803,809]},{"content":"Members","pos":[889,896]},{"content":"Public Constructors","pos":[906,925]},{"content":"Name","pos":[932,936]},{"content":"Description","pos":[937,948]},{"content":"CMFCRibbonButton::CMFCRibbonButton","pos":[987,1021]},{"content":"Constructs a ribbon button object.","pos":[1060,1094]},{"content":"Public Methods","pos":[1105,1119]},{"content":"Name","pos":[1126,1130]},{"content":"Description","pos":[1131,1142]},{"content":"CMFCRibbonButton::AddSubItem","pos":[1181,1209]},{"content":"Adds a menu item to the pop-up menu that is associated with the button.","pos":[1242,1313]},{"content":"CMFCRibbonButton::CanBeStretched","pos":[1319,1351]},{"pos":[1388,1530],"content":"(Overrides <bpt id=\"p1\">[</bpt>CMFCRibbonBaseElement::CanBeStretched<ept id=\"p1\">](../../mfc/reference/cmfcribbonbaseelement-class.md#cmfcribbonbaseelement__canbestretched)</ept>.)","source":"(Overrides [CMFCRibbonBaseElement::CanBeStretched](../../mfc/reference/cmfcribbonbaseelement-class.md#cmfcribbonbaseelement__canbestretched).)"},{"content":"CMFCRibbonButton::CleanUpSizes","pos":[1536,1566]},{"pos":[1601,1739],"content":"(Overrides <bpt id=\"p1\">[</bpt>CMFCRibbonBaseElement::CleanUpSizes<ept id=\"p1\">](../../mfc/reference/cmfcribbonbaseelement-class.md#cmfcribbonbaseelement__cleanupsizes)</ept>.)","source":"(Overrides [CMFCRibbonBaseElement::CleanUpSizes](../../mfc/reference/cmfcribbonbaseelement-class.md#cmfcribbonbaseelement__cleanupsizes).)"},{"content":"CMFCRibbonButton::ClosePopupMenu","pos":[1745,1777]},{"pos":[1814,1956],"content":"(Overrides <bpt id=\"p1\">[</bpt>CMFCRibbonBaseElement::ClosePopupMenu<ept id=\"p1\">](../../mfc/reference/cmfcribbonbaseelement-class.md#cmfcribbonbaseelement__closepopupmenu)</ept>.)","source":"(Overrides [CMFCRibbonBaseElement::ClosePopupMenu](../../mfc/reference/cmfcribbonbaseelement-class.md#cmfcribbonbaseelement__closepopupmenu).)"},{"content":"CMFCRibbonButton::DrawBottomText","pos":[1962,1994]},{"content":"CMFCRibbonButton::DrawImage","pos":[2037,2064]},{"pos":[2096,2228],"content":"(Overrides <bpt id=\"p1\">[</bpt>CMFCRibbonBaseElement::DrawImage<ept id=\"p1\">](../../mfc/reference/cmfcribbonbaseelement-class.md#cmfcribbonbaseelement__drawimage)</ept>.)","source":"(Overrides [CMFCRibbonBaseElement::DrawImage](../../mfc/reference/cmfcribbonbaseelement-class.md#cmfcribbonbaseelement__drawimage).)"},{"content":"CMFCRibbonButton::DrawRibbonText","pos":[2234,2266]},{"content":"CMFCRibbonButton::FindSubItemIndexByID","pos":[2309,2347]},{"content":"Returns the index of a pop-up menu item that is associated with the specified command ID.","pos":[2390,2479]},{"content":"CMFCRibbonButton::GetCommandRect","pos":[2485,2517]},{"content":"CMFCRibbonButton::GetCompactSize","pos":[2560,2592]},{"content":"Returns the compact size of the ribbon element.","pos":[2629,2676]},{"content":"(Overrides <bpt id=\"p1\">[</bpt>CMFCRibbonBaseElement::GetCompactSize<ept id=\"p1\">](../../mfc/reference/cmfcribbonbaseelement-class.md#cmfcribbonbaseelement__getcompactsize)</ept>.)","pos":[2677,2819],"source":" (Overrides [CMFCRibbonBaseElement::GetCompactSize](../../mfc/reference/cmfcribbonbaseelement-class.md#cmfcribbonbaseelement__getcompactsize).)"},{"content":"CMFCRibbonButton::GetIcon","pos":[2825,2850]},{"content":"CMFCRibbonButton::GetImageIndex","pos":[2886,2917]},{"content":"Returns the index of the image that is associated with the button.","pos":[2953,3019]},{"content":"CMFCRibbonButton::GetImageSize","pos":[3025,3055]},{"content":"Returns the image size of the ribbon element.","pos":[3090,3135]},{"content":"(Overrides <bpt id=\"p1\">[</bpt>CMFCRibbonBaseElement::GetImageSize<ept id=\"p1\">](../../mfc/reference/cmfcribbonbaseelement-class.md#cmfcribbonbaseelement__getimagesize)</ept>.)","pos":[3136,3274],"source":" (Overrides [CMFCRibbonBaseElement::GetImageSize](../../mfc/reference/cmfcribbonbaseelement-class.md#cmfcribbonbaseelement__getimagesize).)"},{"content":"CMFCRibbonButton::GetIntermediateSize","pos":[3280,3317]},{"content":"Returns the size of the ribbon element in its intermediate state.","pos":[3359,3424]},{"content":"(Overrides <bpt id=\"p1\">[</bpt>CMFCRibbonBaseElement::GetIntermediateSize<ept id=\"p1\">](../../mfc/reference/cmfcribbonbaseelement-class.md#cmfcribbonbaseelement__getintermediatesize)</ept>.)","pos":[3425,3577],"source":" (Overrides [CMFCRibbonBaseElement::GetIntermediateSize](../../mfc/reference/cmfcribbonbaseelement-class.md#cmfcribbonbaseelement__getintermediatesize).)"},{"content":"CMFCRibbonButton::GetMenu","pos":[3583,3608]},{"content":"Returns a handle to a Windows menu that is assigned to the ribbon button.","pos":[3638,3711]},{"content":"CMFCRibbonButton::GetMenuRect","pos":[3717,3746]},{"content":"CMFCRibbonButton::GetRegularSize","pos":[3786,3818]},{"content":"Returns the regular size of the ribbon element.","pos":[3855,3902]},{"content":"(Overrides <bpt id=\"p1\">[</bpt>CMFCRibbonBaseElement::GetRegularSize<ept id=\"p1\">](../../mfc/reference/cmfcribbonbaseelement-class.md#cmfcribbonbaseelement__getregularsize)</ept>.)","pos":[3903,4045],"source":" (Overrides [CMFCRibbonBaseElement::GetRegularSize](../../mfc/reference/cmfcribbonbaseelement-class.md#cmfcribbonbaseelement__getregularsize).)"},{"content":"CMFCRibbonButton::GetSubItems","pos":[4051,4080]},{"content":"CMFCRibbonButton::GetTextRowHeight","pos":[4120,4154]},{"content":"CMFCRibbonButton::GetToolTipText","pos":[4199,4231]},{"content":"Returns tooltip text of the ribbon element.","pos":[4268,4311]},{"content":"(Overrides <bpt id=\"p1\">[</bpt>CMFCRibbonBaseElement::GetToolTipText<ept id=\"p1\">](../../mfc/reference/cmfcribbonbaseelement-class.md#cmfcribbonbaseelement__gettooltiptext)</ept>.)","pos":[4312,4454],"source":" (Overrides [CMFCRibbonBaseElement::GetToolTipText](../../mfc/reference/cmfcribbonbaseelement-class.md#cmfcribbonbaseelement__gettooltiptext).)"},{"content":"CMFCRibbonButton::HasCompactMode","pos":[4460,4492]},{"content":"Specifies whether the ribbon element has a compact mode.","pos":[4529,4585]},{"content":"(Overrides <bpt id=\"p1\">[</bpt>CMFCRibbonBaseElement::HasCompactMode<ept id=\"p1\">](../../mfc/reference/cmfcribbonbaseelement-class.md#cmfcribbonbaseelement__hascompactmode)</ept>.)","pos":[4586,4728],"source":" (Overrides [CMFCRibbonBaseElement::HasCompactMode](../../mfc/reference/cmfcribbonbaseelement-class.md#cmfcribbonbaseelement__hascompactmode).)"},{"content":"CMFCRibbonButton::HasIntermediateMode","pos":[4734,4771]},{"content":"Specifies whether the ribbon element has an intermediate mode.","pos":[4813,4875]},{"content":"(Overrides <bpt id=\"p1\">[</bpt>CMFCRibbonBaseElement::HasIntermediateMode<ept id=\"p1\">](../../mfc/reference/cmfcribbonbaseelement-class.md#cmfcribbonbaseelement__hasintermediatemode)</ept>.)","pos":[4876,5028],"source":" (Overrides [CMFCRibbonBaseElement::HasIntermediateMode](../../mfc/reference/cmfcribbonbaseelement-class.md#cmfcribbonbaseelement__hasintermediatemode).)"},{"content":"CMFCRibbonButton::HasLargeMode","pos":[5034,5064]},{"content":"Determines whether the ribbon element has a large mode.","pos":[5099,5154]},{"content":"(Overrides <bpt id=\"p1\">[</bpt>CMFCRibbonBaseElement::HasLargeMode<ept id=\"p1\">](../../mfc/reference/cmfcribbonbaseelement-class.md#cmfcribbonbaseelement__haslargemode)</ept>.)","pos":[5155,5293],"source":" (Overrides [CMFCRibbonBaseElement::HasLargeMode](../../mfc/reference/cmfcribbonbaseelement-class.md#cmfcribbonbaseelement__haslargemode).)"},{"content":"CMFCRibbonButton::HasMenu","pos":[5299,5324]},{"pos":[5354,5482],"content":"(Overrides <bpt id=\"p1\">[</bpt>CMFCRibbonBaseElement::HasMenu<ept id=\"p1\">](../../mfc/reference/cmfcribbonbaseelement-class.md#cmfcribbonbaseelement__hasmenu)</ept>.)","source":"(Overrides [CMFCRibbonBaseElement::HasMenu](../../mfc/reference/cmfcribbonbaseelement-class.md#cmfcribbonbaseelement__hasmenu).)"},{"content":"CMFCRibbonButton::IsAlwaysDrawBorder","pos":[5488,5524]},{"content":"CMFCRibbonButton::IsAlwaysLargeImage","pos":[5571,5607]},{"pos":[5648,5798],"content":"(Overrides <bpt id=\"p1\">[</bpt>CMFCRibbonBaseElement::IsAlwaysLargeImage<ept id=\"p1\">](../../mfc/reference/cmfcribbonbaseelement-class.md#cmfcribbonbaseelement__isalwayslargeimage)</ept>.)","source":"(Overrides [CMFCRibbonBaseElement::IsAlwaysLargeImage](../../mfc/reference/cmfcribbonbaseelement-class.md#cmfcribbonbaseelement__isalwayslargeimage).)"},{"content":"CMFCRibbonButton::IsApplicationButton","pos":[5804,5841]},{"content":"CMFCRibbonButton::IsCommandAreaHighlighted","pos":[5889,5931]},{"content":"CMFCRibbonButton::IsDefaultCommand","pos":[5984,6018]},{"content":"Determines whether you have enabled the default command for a ribbon button.","pos":[6057,6133]},{"content":"CMFCRibbonButton::IsDefaultPanelButton","pos":[6139,6177]},{"content":"CMFCRibbonButton::IsDrawTooltipImage","pos":[6226,6262]},{"content":"CMFCRibbonButton::IsLargeImage","pos":[6309,6339]},{"content":"CMFCRibbonButton::IsMenuAreaHighlighted","pos":[6380,6419]},{"content":"CMFCRibbonButton::IsMenuOnBottom","pos":[6469,6501]},{"content":"CMFCRibbonButton::IsPopupDefaultMenuLook","pos":[6544,6584]},{"content":"CMFCRibbonButton::IsRightAlignMenu","pos":[6635,6669]},{"content":"Determines whether the menu is right-aligned.","pos":[6708,6753]},{"content":"CMFCRibbonButton::IsSingleLineText","pos":[6759,6793]},{"content":"CMFCRibbonButton::OnCalcTextSize","pos":[6838,6870]},{"pos":[6907,7049],"content":"(Overrides <bpt id=\"p1\">[</bpt>CMFCRibbonBaseElement::OnCalcTextSize<ept id=\"p1\">](../../mfc/reference/cmfcribbonbaseelement-class.md#cmfcribbonbaseelement__oncalctextsize)</ept>.)","source":"(Overrides [CMFCRibbonBaseElement::OnCalcTextSize](../../mfc/reference/cmfcribbonbaseelement-class.md#cmfcribbonbaseelement__oncalctextsize).)"},{"content":"CMFCRibbonButton::OnDrawBorder","pos":[7055,7085]},{"content":"CMFCRibbonButton::OnDraw","pos":[7126,7150]},{"content":"Called by the framework to draw the ribbon element.","pos":[7179,7230]},{"content":"(Overrides <bpt id=\"p1\">[</bpt>CMFCRibbonBaseElement::OnDraw<ept id=\"p1\">](../../mfc/reference/cmfcribbonbaseelement-class.md#cmfcribbonbaseelement__ondraw)</ept>.)","pos":[7231,7357],"source":" (Overrides [CMFCRibbonBaseElement::OnDraw](../../mfc/reference/cmfcribbonbaseelement-class.md#cmfcribbonbaseelement__ondraw).)"},{"content":"CMFCRibbonButton::OnFillBackground","pos":[7363,7397]},{"content":"CMFCRibbonButton::RemoveAllSubItems","pos":[7442,7477]},{"content":"Removes all menu items from the pop-up menu.","pos":[7517,7561]},{"content":"CMFCRibbonButton::RemoveSubItem","pos":[7567,7598]},{"content":"Removes a menu item from the pop-up menu.","pos":[7634,7675]},{"content":"CMFCRibbonButton::SetACCData","pos":[7681,7709]},{"pos":[7742,7876],"content":"(Overrides <bpt id=\"p1\">[</bpt>CMFCRibbonBaseElement::SetACCData<ept id=\"p1\">](../../mfc/reference/cmfcribbonbaseelement-class.md#cmfcribbonbaseelement__setaccdata)</ept>.)","source":"(Overrides [CMFCRibbonBaseElement::SetACCData](../../mfc/reference/cmfcribbonbaseelement-class.md#cmfcribbonbaseelement__setaccdata).)"},{"content":"CMFCRibbonButton::SetAlwaysLargeImage","pos":[7882,7919]},{"content":"Specifies whether the button displays a large or a small image when the user collapses the button.","pos":[7961,8059]},{"content":"CMFCRibbonButton::SetDefaultCommand","pos":[8065,8100]},{"content":"Enables the default command for the ribbon button.","pos":[8140,8190]},{"content":"CMFCRibbonButton::SetDescription","pos":[8196,8228]},{"content":"Sets the description for the ribbon element.","pos":[8265,8309]},{"content":"(Overrides <bpt id=\"p1\">[</bpt>CMFCRibbonBaseElement::SetDescription<ept id=\"p1\">](../../mfc/reference/cmfcribbonbaseelement-class.md#cmfcribbonbaseelement__setdescription)</ept>.)","pos":[8310,8452],"source":" (Overrides [CMFCRibbonBaseElement::SetDescription](../../mfc/reference/cmfcribbonbaseelement-class.md#cmfcribbonbaseelement__setdescription).)"},{"content":"CMFCRibbonButton::SetImageIndex","pos":[8458,8489]},{"content":"Assigns an index to the image of the button.","pos":[8525,8569]},{"content":"CMFCRibbonButton::SetMenu","pos":[8575,8600]},{"content":"Assigns a pop-up menu to the ribbon button.","pos":[8630,8673]},{"content":"CMFCRibbonButton::SetParentCategory","pos":[8679,8714]},{"pos":[8754,8902],"content":"(Overrides <bpt id=\"p1\">[</bpt>CMFCRibbonBaseElement::SetParentCategory<ept id=\"p1\">](../../mfc/reference/cmfcribbonbaseelement-class.md#cmfcribbonbaseelement__setparentcategory)</ept>.)","source":"(Overrides [CMFCRibbonBaseElement::SetParentCategory](../../mfc/reference/cmfcribbonbaseelement-class.md#cmfcribbonbaseelement__setparentcategory).)"},{"content":"CMFCRibbonButton::SetRightAlignMenu","pos":[8908,8943]},{"content":"Aligns the pop-up menu to the right of the button.","pos":[8983,9033]},{"content":"CMFCRibbonButton::SetText","pos":[9039,9064]},{"content":"Sets the text for the ribbon element.","pos":[9094,9131]},{"content":"(Overrides <bpt id=\"p1\">[</bpt>CMFCRibbonBaseElement::SetText<ept id=\"p1\">](../../mfc/reference/cmfcribbonbaseelement-class.md#cmfcribbonbaseelement__settext)</ept>.)","pos":[9132,9260],"source":" (Overrides [CMFCRibbonBaseElement::SetText](../../mfc/reference/cmfcribbonbaseelement-class.md#cmfcribbonbaseelement__settext).)"},{"content":"Protected Methods","pos":[9271,9288]},{"content":"Name","pos":[9295,9299]},{"content":"Description","pos":[9300,9311]},{"content":"CMFCRibbonButton::OnClick","pos":[9350,9375]},{"content":"Called by the framework when the user clicks the button.","pos":[9405,9461]},{"content":"Example","pos":[9471,9478]},{"content":"The following example demonstrates how to use the various methods in the <ph id=\"ph1\">`CMFCRibbonButton`</ph> class.","pos":[9482,9580],"source":"The following example demonstrates how to use the various methods in the `CMFCRibbonButton` class."},{"content":"The example shows how to construct an object of the <ph id=\"ph1\">`CMFCRibbonButton`</ph> class, assign a pop-up menu to the ribbon button, set the description of the button, remove a menu item from the pop-up menu, and right align the pop-up menu to the edge of the button.","pos":[9581,9836],"source":" The example shows how to construct an object of the `CMFCRibbonButton` class, assign a pop-up menu to the ribbon button, set the description of the button, remove a menu item from the pop-up menu, and right align the pop-up menu to the edge of the button."},{"pos":[9854,9873],"content":"NVC_MFC_RibbonApp#7"},{"content":"Remarks","pos":[9950,9957]},{"pos":[9961,10122],"content":"To use a ribbon button in an application, construct the button object and add it to the appropriate ribbon <bpt id=\"p1\">[</bpt>panel<ept id=\"p1\">](../../mfc/reference/cmfcribbonpanel-class.md)</ept>.","source":"To use a ribbon button in an application, construct the button object and add it to the appropriate ribbon [panel](../../mfc/reference/cmfcribbonpanel-class.md)."},{"content":"Inheritance Hierarchy","pos":[10938,10959]},{"content":"CObject","pos":[10964,10971]},{"content":"CMFCRibbonBaseElement","pos":[11018,11039]},{"content":"CMFCRibbonButton","pos":[11100,11116]},{"content":"Requirements","pos":[11173,11185]},{"pos":[11189,11218],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> afxribbonbutton.h","source":"**Header:** afxribbonbutton.h"},{"pos":[11273,11301],"content":"CMFCRibbonButton::AddSubItem"},{"content":"Adds a menu item to the pop-up menu that is associated with the button.","pos":[11305,11376]},{"content":"Parameters","pos":[11477,11487]},{"content":"[in]","pos":[11491,11495]},{"content":"Specifies a pointer to the new element to add.","pos":[11510,11556]},{"content":"[in]","pos":[11563,11567]},{"content":"Specifies the index at which to add the element to the array of menu items of the button; -1 to add the element at the end of the array of menu items.","pos":[11580,11730]},{"pos":[11789,11821],"content":"CMFCRibbonButton::CanBeStretched"},{"content":"Return Value","pos":[11980,11992]},{"content":"Remarks","pos":[12002,12009]},{"pos":[12066,12096],"content":"CMFCRibbonButton::CleanUpSizes"},{"content":"Remarks","pos":[12253,12260]},{"pos":[12319,12351],"content":"CMFCRibbonButton::ClosePopupMenu"},{"content":"Remarks","pos":[12510,12517]},{"pos":[12578,12612],"content":"CMFCRibbonButton::CMFCRibbonButton"},{"content":"Constructs a ribbon button object.","pos":[12616,12650]},{"content":"Parameters","pos":[13051,13061]},{"content":"[in]","pos":[13065,13069]},{"content":"Specifies the command ID of the button.","pos":[13079,13118]},{"content":"[in]","pos":[13125,13129]},{"content":"Specifies the text label of the button.","pos":[13144,13183]},{"content":"[in]","pos":[13190,13194]},{"content":"Specifies a zero-based index of the button's small image in the image list of the parent category.","pos":[13217,13315]},{"content":"[in]","pos":[13322,13326]},{"content":"Specifies a zero-based index of the button's large image in the image list of the parent category.","pos":[13349,13447]},{"content":"[in]","pos":[13454,13458]},{"content":"Specifies a handle to the icon that the application uses as the button's image.","pos":[13470,13549]},{"content":"Example","pos":[13559,13566]},{"pos":[13570,13650],"content":"The following example demonstrates how to construct a <ph id=\"ph1\">`CMFCRibbonButton`</ph> object.","source":"The following example demonstrates how to construct a `CMFCRibbonButton` object."},{"pos":[13668,13687],"content":"NVC_MFC_RibbonApp#6"},{"pos":[13814,13846],"content":"CMFCRibbonButton::DrawBottomText"},{"content":"Parameters","pos":[14033,14043]},{"content":"[in]","pos":[14047,14051]},{"content":"[in]","pos":[14061,14065]},{"content":"Return Value","pos":[14087,14099]},{"content":"Remarks","pos":[14109,14116]},{"pos":[14170,14197],"content":"CMFCRibbonButton::DrawImage"},{"content":"Parameters","pos":[14415,14425]},{"content":"[in]","pos":[14429,14433]},{"content":"[in]","pos":[14443,14447]},{"content":"[in]","pos":[14458,14462]},{"content":"Remarks","pos":[14484,14491]},{"pos":[14550,14582],"content":"CMFCRibbonButton::DrawRibbonText"},{"content":"Parameters","pos":[14866,14876]},{"content":"[in]","pos":[14880,14884]},{"content":"[in]","pos":[14894,14898]},{"content":"[in]","pos":[14912,14916]},{"content":"[in]","pos":[14931,14935]},{"content":"[in]","pos":[14951,14955]},{"content":"Return Value","pos":[14975,14987]},{"content":"Remarks","pos":[14997,15004]},{"pos":[15069,15107],"content":"CMFCRibbonButton::FindSubItemIndexByID"},{"content":"Returns the index of a pop-up menu item that is associated with the specified command ID.","pos":[15111,15200]},{"content":"Parameters","pos":[15271,15281]},{"content":"[in]","pos":[15285,15289]},{"content":"Specifies the command ID of the pop-up menu item.","pos":[15300,15349]},{"content":"Return Value","pos":[15359,15371]},{"content":"The zero-based index of the sub-item that is associated with the <ph id=\"ph1\">`uiID`</ph>.","pos":[15375,15447],"source":"The zero-based index of the sub-item that is associated with the `uiID`."},{"content":"-1 if there is no such sub-item.","pos":[15448,15480]},{"pos":[15539,15571],"content":"CMFCRibbonButton::GetCommandRect"},{"content":"Return Value","pos":[15732,15744]},{"content":"Remarks","pos":[15754,15761]},{"pos":[15820,15852],"content":"CMFCRibbonButton::GetCompactSize"},{"content":"Parameters","pos":[16020,16030]},{"pos":[16034,16038],"content":"[in]"},{"content":"Return Value","pos":[16054,16066]},{"content":"Remarks","pos":[16076,16083]},{"pos":[16135,16160],"content":"CMFCRibbonButton::GetIcon"},{"content":"Parameters","pos":[16336,16346]},{"pos":[16350,16354],"content":"[in]"},{"content":"Return Value","pos":[16377,16389]},{"content":"Remarks","pos":[16399,16406]},{"pos":[16464,16495],"content":"CMFCRibbonButton::GetImageIndex"},{"content":"Returns the index of the image that is associated with the button.","pos":[16499,16565]},{"content":"Parameters","pos":[16636,16646]},{"content":"[in]","pos":[16650,16654]},{"content":"If <ph id=\"ph1\">`TRUE`</ph>, returns the image index in the image list that contains the large images; otherwise returns the image index in the image list that contains the small images.","pos":[16672,16840],"source":" If `TRUE`, returns the image index in the image list that contains the large images; otherwise returns the image index in the image list that contains the small images."},{"content":"Return Value","pos":[16850,16862]},{"content":"The index of the button's image in the associated image list.","pos":[16866,16927]},{"pos":[16984,17014],"content":"CMFCRibbonButton::GetImageSize"},{"content":"Parameters","pos":[17201,17211]},{"pos":[17215,17219],"content":"[in]"},{"content":"Return Value","pos":[17236,17248]},{"content":"Remarks","pos":[17258,17265]},{"pos":[17329,17366],"content":"CMFCRibbonButton::GetIntermediateSize"},{"content":"Parameters","pos":[17539,17549]},{"pos":[17553,17557],"content":"[in]"},{"content":"Return Value","pos":[17573,17585]},{"content":"Remarks","pos":[17595,17602]},{"pos":[17654,17679],"content":"CMFCRibbonButton::GetMenu"},{"content":"Returns a handle to a Windows menu that is assigned to the ribbon button.","pos":[17683,17756]},{"content":"Return Value","pos":[17807,17819]},{"pos":[17823,17910],"content":"A handle to a Windows menu assigned to the button; <ph id=\"ph1\">`NULL`</ph> if there is no menu assigned.","source":"A handle to a Windows menu assigned to the button; `NULL` if there is no menu assigned."},{"pos":[17966,17995],"content":"CMFCRibbonButton::GetMenuRect"},{"content":"Return Value","pos":[18153,18165]},{"content":"Remarks","pos":[18175,18182]},{"pos":[18241,18273],"content":"CMFCRibbonButton::GetRegularSize"},{"content":"Parameters","pos":[18441,18451]},{"pos":[18455,18459],"content":"[in]"},{"content":"Return Value","pos":[18475,18487]},{"content":"Remarks","pos":[18497,18504]},{"pos":[18560,18589],"content":"CMFCRibbonButton::GetSubItems"},{"content":"Return Value","pos":[18803,18815]},{"content":"Remarks","pos":[18825,18832]},{"pos":[18893,18927],"content":"CMFCRibbonButton::GetTextRowHeight"},{"content":"Return Value","pos":[19088,19100]},{"content":"Remarks","pos":[19110,19117]},{"pos":[19176,19208],"content":"CMFCRibbonButton::GetToolTipText"},{"content":"Return Value","pos":[19379,19391]},{"content":"Remarks","pos":[19401,19408]},{"pos":[19467,19499],"content":"CMFCRibbonButton::HasCompactMode"},{"content":"Return Value","pos":[19667,19679]},{"content":"Remarks","pos":[19689,19696]},{"pos":[19760,19797],"content":"CMFCRibbonButton::HasIntermediateMode"},{"content":"Return Value","pos":[19970,19982]},{"content":"Remarks","pos":[19992,19999]},{"pos":[20056,20086],"content":"CMFCRibbonButton::HasLargeMode"},{"content":"Return Value","pos":[20252,20264]},{"content":"Remarks","pos":[20274,20281]},{"pos":[20333,20358],"content":"CMFCRibbonButton::HasMenu"},{"content":"Return Value","pos":[20519,20531]},{"content":"Remarks","pos":[20541,20548]},{"pos":[20611,20647],"content":"CMFCRibbonButton::IsAlwaysDrawBorder"},{"content":"Return Value","pos":[20819,20831]},{"content":"Remarks","pos":[20841,20848]},{"pos":[20911,20947],"content":"CMFCRibbonButton::IsAlwaysLargeImage"},{"content":"Return Value","pos":[21119,21131]},{"content":"Remarks","pos":[21141,21148]},{"pos":[21212,21249],"content":"CMFCRibbonButton::IsApplicationButton"},{"content":"Return Value","pos":[21422,21434]},{"content":"Remarks","pos":[21444,21451]},{"pos":[21520,21562],"content":"CMFCRibbonButton::IsCommandAreaHighlighted"},{"content":"Return Value","pos":[21740,21752]},{"content":"Remarks","pos":[21762,21769]},{"pos":[21830,21864],"content":"CMFCRibbonButton::IsDefaultCommand"},{"content":"Specifies whether the default command for a ribbon button is enabled.","pos":[21868,21937]},{"content":"Return Value","pos":[21996,22008]},{"pos":[22019,22098],"content":"if you have enabled the default command for a ribbon button; <ph id=\"ph1\">`FALSE`</ph> otherwise.","source":" if you have enabled the default command for a ribbon button; `FALSE` otherwise."},{"pos":[22163,22201],"content":"CMFCRibbonButton::IsDefaultPanelButton"},{"content":"Return Value","pos":[22375,22387]},{"content":"Remarks","pos":[22397,22404]},{"pos":[22467,22503],"content":"CMFCRibbonButton::IsDrawTooltipImage"},{"content":"Return Value","pos":[22675,22687]},{"content":"Remarks","pos":[22697,22704]},{"pos":[22761,22791],"content":"CMFCRibbonButton::IsLargeImage"},{"content":"Return Value","pos":[22949,22961]},{"content":"Remarks","pos":[22971,22978]},{"pos":[23044,23083],"content":"CMFCRibbonButton::IsMenuAreaHighlighted"},{"content":"Return Value","pos":[23258,23270]},{"content":"Remarks","pos":[23280,23287]},{"pos":[23346,23378],"content":"CMFCRibbonButton::IsMenuOnBottom"},{"content":"Return Value","pos":[23538,23550]},{"content":"Remarks","pos":[23560,23567]},{"pos":[23634,23674],"content":"CMFCRibbonButton::IsPopupDefaultMenuLook"},{"content":"Return Value","pos":[23850,23862]},{"content":"Remarks","pos":[23872,23879]},{"pos":[23940,23974],"content":"CMFCRibbonButton::IsRightAlignMenu"},{"content":"Specifies whether the menu is right-aligned.","pos":[23978,24022]},{"content":"Return Value","pos":[24081,24093]},{"pos":[24104,24148],"content":"if menu is right-aligned; otherwise <ph id=\"ph1\">`FALSE`</ph>.","source":" if menu is right-aligned; otherwise `FALSE`."},{"pos":[24209,24243],"content":"CMFCRibbonButton::IsSingleLineText"},{"content":"Return Value","pos":[24405,24417]},{"content":"Remarks","pos":[24427,24434]},{"pos":[24493,24525],"content":"CMFCRibbonButton::OnCalcTextSize"},{"content":"Parameters","pos":[24692,24702]},{"pos":[24706,24710],"content":"[in]"},{"content":"Remarks","pos":[24726,24733]},{"pos":[24785,24810],"content":"CMFCRibbonButton::OnClick"},{"content":"Called by the framework when the user clicks the button.","pos":[24814,24870]},{"content":"Parameters","pos":[24931,24941]},{"content":"[in]","pos":[24945,24949]},{"content":"Specifies the position of the mouse click.","pos":[24961,25003]},{"content":"Remarks","pos":[25013,25020]},{"content":"Override this method in a derived class if you want to handle this event.","pos":[25024,25097]},{"pos":[25148,25172],"content":"CMFCRibbonButton::OnDraw"},{"content":"Parameters","pos":[25331,25341]},{"pos":[25345,25349],"content":"[in]"},{"content":"Remarks","pos":[25365,25372]},{"pos":[25429,25459],"content":"CMFCRibbonButton::OnDrawBorder"},{"content":"Parameters","pos":[25624,25634]},{"pos":[25638,25642],"content":"[in]"},{"content":"Remarks","pos":[25658,25665]},{"pos":[25726,25760],"content":"CMFCRibbonButton::OnFillBackground"},{"content":"Parameters","pos":[25933,25943]},{"pos":[25947,25951],"content":"[in]"},{"content":"Return Value","pos":[25967,25979]},{"content":"Remarks","pos":[25989,25996]},{"pos":[26058,26093],"content":"CMFCRibbonButton::RemoveAllSubItems"},{"content":"Removes all menu items from the pop-up menu.","pos":[26097,26141]},{"pos":[26240,26271],"content":"CMFCRibbonButton::RemoveSubItem"},{"content":"Removes a menu item from the pop-up menu.","pos":[26275,26316]},{"content":"Parameters","pos":[26373,26383]},{"content":"[in]","pos":[26387,26391]},{"content":"Specifies the zero-based index of the menu item that you want to remove.","pos":[26404,26476]},{"content":"Return Value","pos":[26486,26498]},{"pos":[26509,26659],"content":"if the specified item has been removed successfully; otherwise <ph id=\"ph1\">`FALSE`</ph> if <ph id=\"ph2\">`nIndex`</ph> is negative or exceeds the number of menu items in the pop-up menu.","source":" if the specified item has been removed successfully; otherwise `FALSE` if `nIndex` is negative or exceeds the number of menu items in the pop-up menu."},{"pos":[26714,26742],"content":"CMFCRibbonButton::SetACCData"},{"content":"Sets the accessibility data for the ribbon button.","pos":[26746,26796]},{"content":"Parameters","pos":[26901,26911]},{"content":"The parent window for the ribbon element.","pos":[26928,26969]},{"content":"The accessibility data for the ribbon element.","pos":[26986,27032]},{"content":"Return Value","pos":[27042,27054]},{"pos":[27058,27104],"content":"Returns <ph id=\"ph1\">`TRUE`</ph> if successful; otherwise FALSE.","source":"Returns `TRUE` if successful; otherwise FALSE."},{"content":"Remarks","pos":[27114,27121]},{"pos":[27185,27222],"content":"CMFCRibbonButton::SetAlwaysLargeImage"},{"content":"Specifies whether the button displays a large or a small image when the user collapses the button.","pos":[27226,27324]},{"content":"Parameters","pos":[27391,27401]},{"content":"[in]","pos":[27405,27409]},{"content":"If <ph id=\"ph1\">`TRUE`</ph>, the button displays a large image.","pos":[27420,27465],"source":" If `TRUE`, the button displays a large image."},{"content":"Otherwise, the button displays a small image.","pos":[27466,27511]},{"pos":[27573,27608],"content":"CMFCRibbonButton::SetDefaultCommand"},{"content":"Enables the default command for the ribbon button.","pos":[27612,27662]},{"content":"Parameters","pos":[27727,27737]},{"content":"[in]","pos":[27741,27745]},{"content":"If <ph id=\"ph1\">`TRUE`</ph>, the button can execute its default command.","pos":[27756,27810],"source":" If `TRUE`, the button can execute its default command."},{"content":"If <ph id=\"ph1\">`FALSE`</ph>, the button cannot execute its default command.","pos":[27811,27869],"source":" If `FALSE`, the button cannot execute its default command."},{"content":"Remarks","pos":[27879,27886]},{"content":"is relevant only when the button has a menu.","pos":[27897,27941]},{"content":"If <ph id=\"ph1\">`bSet`</ph> is <ph id=\"ph2\">`TRUE`</ph>, the button can execute its default command and the assigned pop-up menu appears only when a user clicks the arrow at the right edge of the button.","pos":[27942,28109],"source":" If `bSet` is `TRUE`, the button can execute its default command and the assigned pop-up menu appears only when a user clicks the arrow at the right edge of the button."},{"content":"Otherwise, the button cannot execute its default command, and the pop-up menu appears regardless of which area of the button the user clicks.","pos":[28110,28251]},{"pos":[28310,28342],"content":"CMFCRibbonButton::SetDescription"},{"content":"Parameters","pos":[28517,28527]},{"pos":[28531,28535],"content":"[in]"},{"content":"Remarks","pos":[28556,28563]},{"pos":[28621,28652],"content":"CMFCRibbonButton::SetImageIndex"},{"content":"Assigns an index to the image of the button.","pos":[28656,28700]},{"content":"Parameters","pos":[28786,28796]},{"content":"[in]","pos":[28800,28804]},{"content":"Specifies the image index.","pos":[28817,28843]},{"content":"[in]","pos":[28850,28854]},{"content":"If <ph id=\"ph1\">`TRUE`</ph>, the specified index refers to the list of large images.","pos":[28872,28938],"source":" If `TRUE`, the specified index refers to the list of large images."},{"content":"Otherwise, the index refers to the list of the small images.","pos":[28939,28999]},{"pos":[29051,29076],"content":"CMFCRibbonButton::SetMenu"},{"content":"Assigns a pop-up menu to the ribbon button.","pos":[29080,29123]},{"content":"Parameters","pos":[29350,29360]},{"content":"A handle to a Windows menu.","pos":[29375,29402]},{"content":"If <ph id=\"ph1\">`TRUE`</ph>, the button can execute its default command; otherwise, the button displays a pop-up menu.","pos":[29432,29532],"source":" If `TRUE`, the button can execute its default command; otherwise, the button displays a pop-up menu."},{"content":"If <ph id=\"ph1\">`TRUE`</ph>, the menu is right-aligned.","pos":[29556,29593],"source":" If `TRUE`, the menu is right-aligned."},{"content":"Otherwise, the menu is left-aligned.","pos":[29594,29630]},{"content":"A menu resource ID.","pos":[29654,29673]},{"content":"Remarks","pos":[29683,29690]},{"content":"When the application assigns the menu to the button, the button displays an arrow on its right side.","pos":[29694,29794]},{"content":"If <ph id=\"ph1\">`bIsDefaultCommand`</ph> is <ph id=\"ph2\">`TRUE`</ph>, the menu appears only when the user clicks the arrow.","pos":[29795,29882],"source":" If `bIsDefaultCommand` is `TRUE`, the menu appears only when the user clicks the arrow."},{"content":"If the user clicks the button, its default command is executed.","pos":[29883,29946]},{"content":"If <ph id=\"ph1\">`bIsDefaultCommand`</ph> is <ph id=\"ph2\">`FALSE`</ph>, the menu appears by clicking anywhere on the button.","pos":[29947,30034],"source":" If `bIsDefaultCommand` is `FALSE`, the menu appears by clicking anywhere on the button."},{"pos":[30096,30131],"content":"CMFCRibbonButton::SetParentCategory"},{"content":"Parameters","pos":[30320,30330]},{"pos":[30334,30338],"content":"[in]"},{"content":"Remarks","pos":[30358,30365]},{"pos":[30427,30462],"content":"CMFCRibbonButton::SetRightAlignMenu"},{"content":"Aligns the pop-up menu to the edge of the button.","pos":[30466,30515]},{"content":"Parameters","pos":[30580,30590]},{"content":"[in]","pos":[30594,30598]},{"content":"If <ph id=\"ph1\">`TRUE`</ph>, the menu is right-aligned.","pos":[30609,30646],"source":" If `TRUE`, the menu is right-aligned."},{"content":"Otherwise, the menu is left-aligned","pos":[30647,30682]},{"pos":[30734,30759],"content":"CMFCRibbonButton::SetText"},{"content":"Parameters","pos":[30927,30937]},{"pos":[30941,30945],"content":"[in]"},{"content":"Remarks","pos":[30966,30973]},{"content":"See Also","pos":[30982,30990]},{"content":"Hierarchy Chart","pos":[30995,31010]},{"content":"Classes","pos":[31047,31054]}],"content":"---\ntitle: \"CMFCRibbonButton Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"CMFCRibbonButton\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"CMFCRibbonButton class\"\nms.assetid: 732e941c-9504-4b83-a691-d18075965d53\ncaps.latest.revision: 42\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# CMFCRibbonButton Class\nThe `CMFCRibbonButton` class implements buttons that you can position on ribbon bar elements such as panels, Quick Access Toolbars, and pop-up menus.  \n  \n## Syntax  \n  \n```  \nclass CMFCRibbonButton : public CMFCRibbonBaseElement  \n```  \n  \n## Members  \n  \n### Public Constructors  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CMFCRibbonButton::CMFCRibbonButton](#cmfcribbonbutton__cmfcribbonbutton)|Constructs a ribbon button object.|  \n  \n### Public Methods  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CMFCRibbonButton::AddSubItem](#cmfcribbonbutton__addsubitem)|Adds a menu item to the pop-up menu that is associated with the button.|  \n|[CMFCRibbonButton::CanBeStretched](#cmfcribbonbutton__canbestretched)|(Overrides [CMFCRibbonBaseElement::CanBeStretched](../../mfc/reference/cmfcribbonbaseelement-class.md#cmfcribbonbaseelement__canbestretched).)|  \n|[CMFCRibbonButton::CleanUpSizes](#cmfcribbonbutton__cleanupsizes)|(Overrides [CMFCRibbonBaseElement::CleanUpSizes](../../mfc/reference/cmfcribbonbaseelement-class.md#cmfcribbonbaseelement__cleanupsizes).)|  \n|[CMFCRibbonButton::ClosePopupMenu](#cmfcribbonbutton__closepopupmenu)|(Overrides [CMFCRibbonBaseElement::ClosePopupMenu](../../mfc/reference/cmfcribbonbaseelement-class.md#cmfcribbonbaseelement__closepopupmenu).)|  \n|[CMFCRibbonButton::DrawBottomText](#cmfcribbonbutton__drawbottomtext)||  \n|[CMFCRibbonButton::DrawImage](#cmfcribbonbutton__drawimage)|(Overrides [CMFCRibbonBaseElement::DrawImage](../../mfc/reference/cmfcribbonbaseelement-class.md#cmfcribbonbaseelement__drawimage).)|  \n|[CMFCRibbonButton::DrawRibbonText](#cmfcribbonbutton__drawribbontext)||  \n|[CMFCRibbonButton::FindSubItemIndexByID](#cmfcribbonbutton__findsubitemindexbyid)|Returns the index of a pop-up menu item that is associated with the specified command ID.|  \n|[CMFCRibbonButton::GetCommandRect](#cmfcribbonbutton__getcommandrect)||  \n|[CMFCRibbonButton::GetCompactSize](#cmfcribbonbutton__getcompactsize)|Returns the compact size of the ribbon element. (Overrides [CMFCRibbonBaseElement::GetCompactSize](../../mfc/reference/cmfcribbonbaseelement-class.md#cmfcribbonbaseelement__getcompactsize).)|  \n|[CMFCRibbonButton::GetIcon](#cmfcribbonbutton__geticon)||  \n|[CMFCRibbonButton::GetImageIndex](#cmfcribbonbutton__getimageindex)|Returns the index of the image that is associated with the button.|  \n|[CMFCRibbonButton::GetImageSize](#cmfcribbonbutton__getimagesize)|Returns the image size of the ribbon element. (Overrides [CMFCRibbonBaseElement::GetImageSize](../../mfc/reference/cmfcribbonbaseelement-class.md#cmfcribbonbaseelement__getimagesize).)|  \n|[CMFCRibbonButton::GetIntermediateSize](#cmfcribbonbutton__getintermediatesize)|Returns the size of the ribbon element in its intermediate state. (Overrides [CMFCRibbonBaseElement::GetIntermediateSize](../../mfc/reference/cmfcribbonbaseelement-class.md#cmfcribbonbaseelement__getintermediatesize).)|  \n|[CMFCRibbonButton::GetMenu](#cmfcribbonbutton__getmenu)|Returns a handle to a Windows menu that is assigned to the ribbon button.|  \n|[CMFCRibbonButton::GetMenuRect](#cmfcribbonbutton__getmenurect)||  \n|[CMFCRibbonButton::GetRegularSize](#cmfcribbonbutton__getregularsize)|Returns the regular size of the ribbon element. (Overrides [CMFCRibbonBaseElement::GetRegularSize](../../mfc/reference/cmfcribbonbaseelement-class.md#cmfcribbonbaseelement__getregularsize).)|  \n|[CMFCRibbonButton::GetSubItems](#cmfcribbonbutton__getsubitems)||  \n|[CMFCRibbonButton::GetTextRowHeight](#cmfcribbonbutton__gettextrowheight)||  \n|[CMFCRibbonButton::GetToolTipText](#cmfcribbonbutton__gettooltiptext)|Returns tooltip text of the ribbon element. (Overrides [CMFCRibbonBaseElement::GetToolTipText](../../mfc/reference/cmfcribbonbaseelement-class.md#cmfcribbonbaseelement__gettooltiptext).)|  \n|[CMFCRibbonButton::HasCompactMode](#cmfcribbonbutton__hascompactmode)|Specifies whether the ribbon element has a compact mode. (Overrides [CMFCRibbonBaseElement::HasCompactMode](../../mfc/reference/cmfcribbonbaseelement-class.md#cmfcribbonbaseelement__hascompactmode).)|  \n|[CMFCRibbonButton::HasIntermediateMode](#cmfcribbonbutton__hasintermediatemode)|Specifies whether the ribbon element has an intermediate mode. (Overrides [CMFCRibbonBaseElement::HasIntermediateMode](../../mfc/reference/cmfcribbonbaseelement-class.md#cmfcribbonbaseelement__hasintermediatemode).)|  \n|[CMFCRibbonButton::HasLargeMode](#cmfcribbonbutton__haslargemode)|Determines whether the ribbon element has a large mode. (Overrides [CMFCRibbonBaseElement::HasLargeMode](../../mfc/reference/cmfcribbonbaseelement-class.md#cmfcribbonbaseelement__haslargemode).)|  \n|[CMFCRibbonButton::HasMenu](#cmfcribbonbutton__hasmenu)|(Overrides [CMFCRibbonBaseElement::HasMenu](../../mfc/reference/cmfcribbonbaseelement-class.md#cmfcribbonbaseelement__hasmenu).)|  \n|[CMFCRibbonButton::IsAlwaysDrawBorder](#cmfcribbonbutton__isalwaysdrawborder)||  \n|[CMFCRibbonButton::IsAlwaysLargeImage](#cmfcribbonbutton__isalwayslargeimage)|(Overrides [CMFCRibbonBaseElement::IsAlwaysLargeImage](../../mfc/reference/cmfcribbonbaseelement-class.md#cmfcribbonbaseelement__isalwayslargeimage).)|  \n|[CMFCRibbonButton::IsApplicationButton](#cmfcribbonbutton__isapplicationbutton)||  \n|[CMFCRibbonButton::IsCommandAreaHighlighted](#cmfcribbonbutton__iscommandareahighlighted)||  \n|[CMFCRibbonButton::IsDefaultCommand](#cmfcribbonbutton__isdefaultcommand)|Determines whether you have enabled the default command for a ribbon button.|  \n|[CMFCRibbonButton::IsDefaultPanelButton](#cmfcribbonbutton__isdefaultpanelbutton)||  \n|[CMFCRibbonButton::IsDrawTooltipImage](#cmfcribbonbutton__isdrawtooltipimage)||  \n|[CMFCRibbonButton::IsLargeImage](#cmfcribbonbutton__islargeimage)||  \n|[CMFCRibbonButton::IsMenuAreaHighlighted](#cmfcribbonbutton__ismenuareahighlighted)||  \n|[CMFCRibbonButton::IsMenuOnBottom](#cmfcribbonbutton__ismenuonbottom)||  \n|[CMFCRibbonButton::IsPopupDefaultMenuLook](#cmfcribbonbutton__ispopupdefaultmenulook)||  \n|[CMFCRibbonButton::IsRightAlignMenu](#cmfcribbonbutton__isrightalignmenu)|Determines whether the menu is right-aligned.|  \n|[CMFCRibbonButton::IsSingleLineText](#cmfcribbonbutton__issinglelinetext)||  \n|[CMFCRibbonButton::OnCalcTextSize](#cmfcribbonbutton__oncalctextsize)|(Overrides [CMFCRibbonBaseElement::OnCalcTextSize](../../mfc/reference/cmfcribbonbaseelement-class.md#cmfcribbonbaseelement__oncalctextsize).)|  \n|[CMFCRibbonButton::OnDrawBorder](#cmfcribbonbutton__ondrawborder)||  \n|[CMFCRibbonButton::OnDraw](#cmfcribbonbutton__ondraw)|Called by the framework to draw the ribbon element. (Overrides [CMFCRibbonBaseElement::OnDraw](../../mfc/reference/cmfcribbonbaseelement-class.md#cmfcribbonbaseelement__ondraw).)|  \n|[CMFCRibbonButton::OnFillBackground](#cmfcribbonbutton__onfillbackground)||  \n|[CMFCRibbonButton::RemoveAllSubItems](#cmfcribbonbutton__removeallsubitems)|Removes all menu items from the pop-up menu.|  \n|[CMFCRibbonButton::RemoveSubItem](#cmfcribbonbutton__removesubitem)|Removes a menu item from the pop-up menu.|  \n|[CMFCRibbonButton::SetACCData](#cmfcribbonbutton__setaccdata)|(Overrides [CMFCRibbonBaseElement::SetACCData](../../mfc/reference/cmfcribbonbaseelement-class.md#cmfcribbonbaseelement__setaccdata).)|  \n|[CMFCRibbonButton::SetAlwaysLargeImage](#cmfcribbonbutton__setalwayslargeimage)|Specifies whether the button displays a large or a small image when the user collapses the button.|  \n|[CMFCRibbonButton::SetDefaultCommand](#cmfcribbonbutton__setdefaultcommand)|Enables the default command for the ribbon button.|  \n|[CMFCRibbonButton::SetDescription](#cmfcribbonbutton__setdescription)|Sets the description for the ribbon element. (Overrides [CMFCRibbonBaseElement::SetDescription](../../mfc/reference/cmfcribbonbaseelement-class.md#cmfcribbonbaseelement__setdescription).)|  \n|[CMFCRibbonButton::SetImageIndex](#cmfcribbonbutton__setimageindex)|Assigns an index to the image of the button.|  \n|[CMFCRibbonButton::SetMenu](#cmfcribbonbutton__setmenu)|Assigns a pop-up menu to the ribbon button.|  \n|[CMFCRibbonButton::SetParentCategory](#cmfcribbonbutton__setparentcategory)|(Overrides [CMFCRibbonBaseElement::SetParentCategory](../../mfc/reference/cmfcribbonbaseelement-class.md#cmfcribbonbaseelement__setparentcategory).)|  \n|[CMFCRibbonButton::SetRightAlignMenu](#cmfcribbonbutton__setrightalignmenu)|Aligns the pop-up menu to the right of the button.|  \n|[CMFCRibbonButton::SetText](#cmfcribbonbutton__settext)|Sets the text for the ribbon element. (Overrides [CMFCRibbonBaseElement::SetText](../../mfc/reference/cmfcribbonbaseelement-class.md#cmfcribbonbaseelement__settext).)|  \n  \n### Protected Methods  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CMFCRibbonButton::OnClick](#cmfcribbonbutton__onclick)|Called by the framework when the user clicks the button.|  \n  \n## Example  \n The following example demonstrates how to use the various methods in the `CMFCRibbonButton` class. The example shows how to construct an object of the `CMFCRibbonButton` class, assign a pop-up menu to the ribbon button, set the description of the button, remove a menu item from the pop-up menu, and right align the pop-up menu to the edge of the button.  \n  \n [!code-cpp[NVC_MFC_RibbonApp#7](../../mfc/reference/codesnippet/cpp/cmfcribbonbutton-class_1.cpp)]  \n  \n## Remarks  \n To use a ribbon button in an application, construct the button object and add it to the appropriate ribbon [panel](../../mfc/reference/cmfcribbonpanel-class.md).  \n  \n```  \nCMFCRibbonPanel* pPanel = pCategory->AddPanel (\n    _T(\"Clipboard\"), // Panel name  \n    m_PanelIcons.ExtractIcon (0));\n*// Panel icon  \n// Create the first button (\"Paste\"):  \nCMFCRibbonButton* pPasteButton = \n    new CMFCRibbonButton (ID_EDIT_PASTE,\n    _T(\"Paste\"), -1,\n    0);\n\n// The third parameter (-1) disables small images for button.  \n// This button is always displayed with a large image  \n// Associate a pop-up menu with the \"Paste\" button:  \npPasteButton->SetMenu (IDR_CONTEXT_MENU);\n\n// Add buttons to the panel. These buttons have only small images.  \npPanel->Add (new CMFCRibbonButton (ID_EDIT_CUT,\n    _T(\"Cut\"),\n    1));\n\npPanel->Add (new CMFCRibbonButton (ID_EDIT_COPY,\n    _T(\"Copy\"),\n    2));\n\npPanel->Add (new CMFCRibbonButton (ID_EDIT_PAINT,\n    _T(\"Paint\"),\n    9));\n```  \n  \n## Inheritance Hierarchy  \n [CObject](../../mfc/reference/cobject-class.md)  \n  \n [CMFCRibbonBaseElement](../../mfc/reference/cmfcribbonbaseelement-class.md)  \n  \n [CMFCRibbonButton](../../mfc/reference/cmfcribbonbutton-class.md)  \n  \n## Requirements  \n **Header:** afxribbonbutton.h  \n  \n##  <a name=\"cmfcribbonbutton__addsubitem\"></a>  CMFCRibbonButton::AddSubItem  \n Adds a menu item to the pop-up menu that is associated with the button.  \n  \n```  \nvoid AddSubItem(\n    CMFCRibbonBaseElement* pSubItem,  \n    int nIndex=-1);\n```  \n  \n### Parameters  \n [in] `pSubItem`  \n Specifies a pointer to the new element to add.  \n  \n [in] `nIndex`  \n Specifies the index at which to add the element to the array of menu items of the button; -1 to add the element at the end of the array of menu items.  \n  \n##  <a name=\"cmfcribbonbutton__canbestretched\"></a>  CMFCRibbonButton::CanBeStretched  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvirtual BOOL CanBeStretched();\n```  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cmfcribbonbutton__cleanupsizes\"></a>  CMFCRibbonButton::CleanUpSizes  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvirtual void CleanUpSizes();\n```  \n  \n### Remarks  \n  \n##  <a name=\"cmfcribbonbutton__closepopupmenu\"></a>  CMFCRibbonButton::ClosePopupMenu  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvirtual void ClosePopupMenu();\n```  \n  \n### Remarks  \n  \n##  <a name=\"cmfcribbonbutton__cmfcribbonbutton\"></a>  CMFCRibbonButton::CMFCRibbonButton  \n Constructs a ribbon button object.  \n  \n```  \nCMFCRibbonButton(\n    UINT nID,  \n    LPCTSTR lpszText,  \n    int nSmallImageIndex=-1,  \n    int nLargeImageIndex=-1,  \n    BOOL bAlwaysShowDescription=FALSE);\n\nCMFCRibbonButton(\n    UINT nID,  \n    LPCTSTR lpszText,  \n    HICON hIcon,  \n    BOOL bAlwaysShowDescription=FALSE,  \n    HICON hIconSmall=NULL,  \n    BOOL bAutoDestroyIcon=FALSE,  \n    BOOL bAlphaBlendIcon=FALSE);\n```  \n  \n### Parameters  \n [in] `nID`  \n Specifies the command ID of the button.  \n  \n [in] `lpszText`  \n Specifies the text label of the button.  \n  \n [in] `nSmallImageIndex`  \n Specifies a zero-based index of the button's small image in the image list of the parent category.  \n  \n [in] `nLargeImageIndex`  \n Specifies a zero-based index of the button's large image in the image list of the parent category.  \n  \n [in] `hIcon`  \n Specifies a handle to the icon that the application uses as the button's image.  \n  \n### Example  \n The following example demonstrates how to construct a `CMFCRibbonButton` object.  \n  \n [!code-cpp[NVC_MFC_RibbonApp#6](../../mfc/reference/codesnippet/cpp/cmfcribbonbutton-class_2.cpp)]  \n  \n##  <a name=\"cmfcribbonbutton__drawbottomtext\"></a>  CMFCRibbonButton::DrawBottomText  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nCSize DrawBottomText(\n    CDC* pDC,  \n    BOOL bCalcOnly);\n```  \n  \n### Parameters  \n [in] `pDC`  \n [in] `bCalcOnly`  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cmfcribbonbutton__drawimage\"></a>  CMFCRibbonButton::DrawImage  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvirtual void DrawImage(\n    CDC* pDC,  \n    RibbonImageType type,  \n    CRect rectImage);\n```  \n  \n### Parameters  \n [in] `pDC`  \n [in] `type`  \n [in] `rectImage`  \n  \n### Remarks  \n  \n##  <a name=\"cmfcribbonbutton__drawribbontext\"></a>  CMFCRibbonButton::DrawRibbonText  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvirtual int DrawRibbonText(\n    CDC* pDC,  \n    const CString& strText,  \n    CRect rectText,  \n    UINT uiDTFlags,  \n    COLORREF clrText = (COLORREF)-1);\n```  \n  \n### Parameters  \n [in] `pDC`  \n [in] `strText`  \n [in] `rectText`  \n [in] `uiDTFlags`  \n [in] `clrText`  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cmfcribbonbutton__findsubitemindexbyid\"></a>  CMFCRibbonButton::FindSubItemIndexByID  \n Returns the index of a pop-up menu item that is associated with the specified command ID.  \n  \n```  \nint FindSubItemIndexByID(UINT uiID) const;\n\n \n```  \n  \n### Parameters  \n [in] `uiID`  \n Specifies the command ID of the pop-up menu item.  \n  \n### Return Value  \n The zero-based index of the sub-item that is associated with the `uiID`. -1 if there is no such sub-item.  \n  \n##  <a name=\"cmfcribbonbutton__getcommandrect\"></a>  CMFCRibbonButton::GetCommandRect  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nCRect GetCommandRect() const;\n\n \n```  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cmfcribbonbutton__getcompactsize\"></a>  CMFCRibbonButton::GetCompactSize  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvirtual CSize GetCompactSize(CDC* pDC);\n```  \n  \n### Parameters  \n [in] `pDC`  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cmfcribbonbutton__geticon\"></a>  CMFCRibbonButton::GetIcon  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nHICON GetIcon(BOOL bLargeIcon = TRUE) const;\n\n \n```  \n  \n### Parameters  \n [in] `bLargeIcon`  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cmfcribbonbutton__getimageindex\"></a>  CMFCRibbonButton::GetImageIndex  \n Returns the index of the image that is associated with the button.  \n  \n```  \nint GetImageIndex(BOOL bLargeImage) const;\n\n \n```  \n  \n### Parameters  \n [in] `bLargeImage`  \n If `TRUE`, returns the image index in the image list that contains the large images; otherwise returns the image index in the image list that contains the small images.  \n  \n### Return Value  \n The index of the button's image in the associated image list.  \n  \n##  <a name=\"cmfcribbonbutton__getimagesize\"></a>  CMFCRibbonButton::GetImageSize  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvirtual CSize GetImageSize(RibbonImageType type) const;\n\n \n```  \n  \n### Parameters  \n [in] `type`  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cmfcribbonbutton__getintermediatesize\"></a>  CMFCRibbonButton::GetIntermediateSize  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvirtual CSize GetIntermediateSize(CDC* pDC);\n```  \n  \n### Parameters  \n [in] `pDC`  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cmfcribbonbutton__getmenu\"></a>  CMFCRibbonButton::GetMenu  \n Returns a handle to a Windows menu that is assigned to the ribbon button.  \n  \n```  \nHMENU GetMenu() const;\n\n \n```  \n  \n### Return Value  \n A handle to a Windows menu assigned to the button; `NULL` if there is no menu assigned.  \n  \n##  <a name=\"cmfcribbonbutton__getmenurect\"></a>  CMFCRibbonButton::GetMenuRect  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nCRect GetMenuRect() const;\n\n \n```  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cmfcribbonbutton__getregularsize\"></a>  CMFCRibbonButton::GetRegularSize  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvirtual CSize GetRegularSize(CDC* pDC);\n```  \n  \n### Parameters  \n [in] `pDC`  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cmfcribbonbutton__getsubitems\"></a>  CMFCRibbonButton::GetSubItems  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nconst CArray<CMFCRibbonBaseElement*, CMFCRibbonBaseElement*>& GetSubItems() const;\n\n \n```  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cmfcribbonbutton__gettextrowheight\"></a>  CMFCRibbonButton::GetTextRowHeight  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nint GetTextRowHeight() const;\n\n \n```  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cmfcribbonbutton__gettooltiptext\"></a>  CMFCRibbonButton::GetToolTipText  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvirtual CString GetToolTipText() const;\n\n \n```  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cmfcribbonbutton__hascompactmode\"></a>  CMFCRibbonButton::HasCompactMode  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvirtual BOOL HasCompactMode() const;\n\n \n```  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cmfcribbonbutton__hasintermediatemode\"></a>  CMFCRibbonButton::HasIntermediateMode  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvirtual BOOL HasIntermediateMode() const;\n\n \n```  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cmfcribbonbutton__haslargemode\"></a>  CMFCRibbonButton::HasLargeMode  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvirtual BOOL HasLargeMode() const;\n\n \n```  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cmfcribbonbutton__hasmenu\"></a>  CMFCRibbonButton::HasMenu  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvirtual BOOL HasMenu() const;\n\n \n```  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cmfcribbonbutton__isalwaysdrawborder\"></a>  CMFCRibbonButton::IsAlwaysDrawBorder  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvirtual BOOL IsAlwaysDrawBorder() const;\n\n \n```  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cmfcribbonbutton__isalwayslargeimage\"></a>  CMFCRibbonButton::IsAlwaysLargeImage  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvirtual BOOL IsAlwaysLargeImage() const;\n\n \n```  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cmfcribbonbutton__isapplicationbutton\"></a>  CMFCRibbonButton::IsApplicationButton  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvirtual BOOL IsApplicationButton() const;\n\n \n```  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cmfcribbonbutton__iscommandareahighlighted\"></a>  CMFCRibbonButton::IsCommandAreaHighlighted  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvirtual BOOL IsCommandAreaHighlighted() const;\n\n \n```  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cmfcribbonbutton__isdefaultcommand\"></a>  CMFCRibbonButton::IsDefaultCommand  \n Specifies whether the default command for a ribbon button is enabled.  \n  \n```  \nBOOL IsDefaultCommand() const;\n\n \n```  \n  \n### Return Value  \n `TRUE` if you have enabled the default command for a ribbon button; `FALSE` otherwise.  \n  \n##  <a name=\"cmfcribbonbutton__isdefaultpanelbutton\"></a>  CMFCRibbonButton::IsDefaultPanelButton  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvirtual BOOL IsDefaultPanelButton() const;\n\n \n```  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cmfcribbonbutton__isdrawtooltipimage\"></a>  CMFCRibbonButton::IsDrawTooltipImage  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvirtual BOOL IsDrawTooltipImage() const;\n\n \n```  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cmfcribbonbutton__islargeimage\"></a>  CMFCRibbonButton::IsLargeImage  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nBOOL IsLargeImage() const;\n\n \n```  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cmfcribbonbutton__ismenuareahighlighted\"></a>  CMFCRibbonButton::IsMenuAreaHighlighted  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvirtual BOOL IsMenuAreaHighlighted() const;\n\n \n```  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cmfcribbonbutton__ismenuonbottom\"></a>  CMFCRibbonButton::IsMenuOnBottom  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nBOOL IsMenuOnBottom() const;\n\n \n```  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cmfcribbonbutton__ispopupdefaultmenulook\"></a>  CMFCRibbonButton::IsPopupDefaultMenuLook  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvirtual BOOL IsPopupDefaultMenuLook() const;\n\n \n```  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cmfcribbonbutton__isrightalignmenu\"></a>  CMFCRibbonButton::IsRightAlignMenu  \n Specifies whether the menu is right-aligned.  \n  \n```  \nBOOL IsRightAlignMenu() const;\n\n \n```  \n  \n### Return Value  \n `TRUE` if menu is right-aligned; otherwise `FALSE`.  \n  \n##  <a name=\"cmfcribbonbutton__issinglelinetext\"></a>  CMFCRibbonButton::IsSingleLineText  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nBOOL IsSingleLineText() const;\n\n \n```  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cmfcribbonbutton__oncalctextsize\"></a>  CMFCRibbonButton::OnCalcTextSize  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvirtual void OnCalcTextSize(CDC* pDC);\n```  \n  \n### Parameters  \n [in] `pDC`  \n  \n### Remarks  \n  \n##  <a name=\"cmfcribbonbutton__onclick\"></a>  CMFCRibbonButton::OnClick  \n Called by the framework when the user clicks the button.  \n  \n```  \nvirtual void OnClick(CPoint point);\n```  \n  \n### Parameters  \n [in] `point`  \n Specifies the position of the mouse click.  \n  \n### Remarks  \n Override this method in a derived class if you want to handle this event.  \n  \n##  <a name=\"cmfcribbonbutton__ondraw\"></a>  CMFCRibbonButton::OnDraw  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvirtual void OnDraw(CDC* pDC);\n```  \n  \n### Parameters  \n [in] `pDC`  \n  \n### Remarks  \n  \n##  <a name=\"cmfcribbonbutton__ondrawborder\"></a>  CMFCRibbonButton::OnDrawBorder  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvirtual void OnDrawBorder(CDC* pDC);\n```  \n  \n### Parameters  \n [in] `pDC`  \n  \n### Remarks  \n  \n##  <a name=\"cmfcribbonbutton__onfillbackground\"></a>  CMFCRibbonButton::OnFillBackground  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvirtual COLORREF OnFillBackground(CDC* pDC);\n```  \n  \n### Parameters  \n [in] `pDC`  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cmfcribbonbutton__removeallsubitems\"></a>  CMFCRibbonButton::RemoveAllSubItems  \n Removes all menu items from the pop-up menu.  \n  \n```  \nvoid RemoveAllSubItems();\n```  \n  \n##  <a name=\"cmfcribbonbutton__removesubitem\"></a>  CMFCRibbonButton::RemoveSubItem  \n Removes a menu item from the pop-up menu.  \n  \n```  \nBOOL RemoveSubItem(int nIndex);\n```  \n  \n### Parameters  \n [in] `nIndex`  \n Specifies the zero-based index of the menu item that you want to remove.  \n  \n### Return Value  \n `TRUE` if the specified item has been removed successfully; otherwise `FALSE` if `nIndex` is negative or exceeds the number of menu items in the pop-up menu.  \n  \n##  <a name=\"cmfcribbonbutton__setaccdata\"></a>  CMFCRibbonButton::SetACCData  \n Sets the accessibility data for the ribbon button.  \n  \n```  \nvirtual BOOL SetACCData(\n    CWnd* pParent,  \n    CAccessibilityData& data);\n\n \n```  \n  \n### Parameters  \n `pParent`  \n The parent window for the ribbon element.  \n  \n `data`  \n The accessibility data for the ribbon element.  \n  \n### Return Value  \n Returns `TRUE` if successful; otherwise FALSE.  \n  \n### Remarks  \n  \n##  <a name=\"cmfcribbonbutton__setalwayslargeimage\"></a>  CMFCRibbonButton::SetAlwaysLargeImage  \n Specifies whether the button displays a large or a small image when the user collapses the button.  \n  \n```  \nvoid SetAlwaysLargeImage(BOOL bSet=TRUE);\n```  \n  \n### Parameters  \n [in] `bSet`  \n If `TRUE`, the button displays a large image. Otherwise, the button displays a small image.  \n  \n##  <a name=\"cmfcribbonbutton__setdefaultcommand\"></a>  CMFCRibbonButton::SetDefaultCommand  \n Enables the default command for the ribbon button.  \n  \n```  \nvoid SetDefaultCommand(BOOL bSet=TRUE);\n```  \n  \n### Parameters  \n [in] `bSet`  \n If `TRUE`, the button can execute its default command. If `FALSE`, the button cannot execute its default command.  \n  \n### Remarks  \n `bSet` is relevant only when the button has a menu. If `bSet` is `TRUE`, the button can execute its default command and the assigned pop-up menu appears only when a user clicks the arrow at the right edge of the button. Otherwise, the button cannot execute its default command, and the pop-up menu appears regardless of which area of the button the user clicks.  \n  \n##  <a name=\"cmfcribbonbutton__setdescription\"></a>  CMFCRibbonButton::SetDescription  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvirtual void SetDescription(LPCTSTR lpszText);\n```  \n  \n### Parameters  \n [in] `lpszText`  \n  \n### Remarks  \n  \n##  <a name=\"cmfcribbonbutton__setimageindex\"></a>  CMFCRibbonButton::SetImageIndex  \n Assigns an index to the image of the button.  \n  \n```  \nvoid SetImageIndex(\n    int nIndex,  \n    BOOL bLargeImage);\n```  \n  \n### Parameters  \n [in] `nIndex`  \n Specifies the image index.  \n  \n [in] `bLargeImage`  \n If `TRUE`, the specified index refers to the list of large images. Otherwise, the index refers to the list of the small images.  \n  \n##  <a name=\"cmfcribbonbutton__setmenu\"></a>  CMFCRibbonButton::SetMenu  \n Assigns a pop-up menu to the ribbon button.  \n  \n```  \nvoid SetMenu(\n    HMENU hMenu,  \n    BOOL bIsDefaultCommand=FALSE,  \n    BOOL bRightAlign=FALSE);\n\nvoid SetMenu(\n    UINT uiMenuResID,  \n    BOOL bIsDefaultCommand=FALSE,  \n    BOOL bRightAlign=FALSE);\n```  \n  \n### Parameters  \n `hMenu`  \n A handle to a Windows menu.  \n  \n `bIsDefaultCommand`  \n If `TRUE`, the button can execute its default command; otherwise, the button displays a pop-up menu.  \n  \n `bRightAlign`  \n If `TRUE`, the menu is right-aligned. Otherwise, the menu is left-aligned.  \n  \n `uiMenuResID`  \n A menu resource ID.  \n  \n### Remarks  \n When the application assigns the menu to the button, the button displays an arrow on its right side. If `bIsDefaultCommand` is `TRUE`, the menu appears only when the user clicks the arrow. If the user clicks the button, its default command is executed. If `bIsDefaultCommand` is `FALSE`, the menu appears by clicking anywhere on the button.  \n  \n##  <a name=\"cmfcribbonbutton__setparentcategory\"></a>  CMFCRibbonButton::SetParentCategory  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvirtual void SetParentCategory(CMFCRibbonCategory* pParent);\n```  \n  \n### Parameters  \n [in] `pParent`  \n  \n### Remarks  \n  \n##  <a name=\"cmfcribbonbutton__setrightalignmenu\"></a>  CMFCRibbonButton::SetRightAlignMenu  \n Aligns the pop-up menu to the edge of the button.  \n  \n```  \nvoid SetRightAlignMenu(BOOL bSet=TRUE);\n```  \n  \n### Parameters  \n [in] `bSet`  \n If `TRUE`, the menu is right-aligned. Otherwise, the menu is left-aligned  \n  \n##  <a name=\"cmfcribbonbutton__settext\"></a>  CMFCRibbonButton::SetText  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvirtual void SetText(LPCTSTR lpszText);\n```  \n  \n### Parameters  \n [in] `lpszText`  \n  \n### Remarks  \n  \n## See Also  \n [Hierarchy Chart](../../mfc/hierarchy-chart.md)   \n [Classes](../../mfc/reference/mfc-classes.md)\n"}