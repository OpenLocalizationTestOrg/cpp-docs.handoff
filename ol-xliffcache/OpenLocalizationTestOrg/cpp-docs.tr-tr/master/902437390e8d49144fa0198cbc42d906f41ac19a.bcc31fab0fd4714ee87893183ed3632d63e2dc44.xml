{"nodes":[{"pos":[12,71],"content":"Unary Plus and Negation Operators: + and - | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Unary Plus and Negation Operators: + and - | Microsoft Docs","pos":[0,59]}]},{"content":"Unary Plus and Negation Operators: + and -","pos":[734,776]},{"content":"Syntax","pos":[780,786]},{"content":"+ operator","pos":[871,881]},{"content":"The result of the unary plus operator (<bpt id=\"p1\">**</bpt><ph id=\"ph1\">+</ph><ept id=\"p1\">**</ept>) is the value of its operand.","pos":[885,959],"source":"The result of the unary plus operator (**+**) is the value of its operand."},{"content":"The operand to the unary plus operator must be of an arithmetic type.","pos":[960,1029]},{"content":"Integral promotion is performed on integral operands.","pos":[1036,1089]},{"content":"The resultant type is the type to which the operand is promoted.","pos":[1090,1154]},{"content":"Thus, the expression <ph id=\"ph1\">`+ch`</ph>, where <ph id=\"ph2\">`ch`</ph> is of type <ph id=\"ph3\">`char`</ph>, results in type <ph id=\"ph4\">`int`</ph>; the value is unmodified.","pos":[1155,1260],"source":" Thus, the expression `+ch`, where `ch` is of type `char`, results in type `int`; the value is unmodified."},{"content":"See <bpt id=\"p1\">[</bpt>Standard Conversions<ept id=\"p1\">](standard-conversions.md)</ept> for more information about how the promotion is done.","pos":[1261,1366],"source":" See [Standard Conversions](standard-conversions.md) for more information about how the promotion is done."},{"content":"- operator","pos":[1375,1385]},{"content":"The unary negation operator (<bpt id=\"p1\">**</bpt>–<ept id=\"p1\">**</ept>) produces the negative of its operand.","pos":[1389,1462],"source":"The unary negation operator (**–**) produces the negative of its operand."},{"content":"The operand to the unary negation operator must be an arithmetic type.","pos":[1463,1533]},{"content":"Integral promotion is performed on integral operands, and the resultant type is the type to which the operand is promoted.","pos":[1540,1662]},{"content":"See <bpt id=\"p1\">[</bpt>Standard Conversions<ept id=\"p1\">](standard-conversions.md)</ept> for more information about how the promotion is performed.","pos":[1663,1773],"source":" See [Standard Conversions](standard-conversions.md) for more information about how the promotion is performed."},{"content":"Microsoft specific","pos":[1782,1800]},{"content":"Unary negation of unsigned quantities is performed by subtracting the value of the operand from 2^n, where n is the number of bits in an object of the given unsigned type.","pos":[1804,1975]},{"content":"(Microsoft C++ runs on processors that utilize two's-complement arithmetic.","pos":[1976,2051]},{"content":"On other processors, the algorithm for negation can differ.)","pos":[2052,2112]},{"content":"See Also","pos":[2121,2129]},{"content":"Expressions with Unary Operators","pos":[2134,2166]},{"content":"C++ Built-in Operators, Precedence and Associativity","pos":[2217,2269]}],"content":"---\ntitle: \"Unary Plus and Negation Operators: + and - | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"language-reference\"\nf1_keywords: \n  - \"+\"\n  - \"-\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"unary operators, plus\"\n  - \"- operator\"\n  - \"negation operator\"\n  - \"+ operator, unary operators\"\n  - \"+ operator\"\nms.assetid: 2c58c4f4-0d92-4ae3-9d0c-1a6157875cc1\ncaps.latest.revision: 8\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Unary Plus and Negation Operators: + and -\n## Syntax  \n  \n```  \n  \n+ cast-expression  \n```  \n  \n```  \n  \n- cast-expression  \n```  \n  \n## + operator  \n The result of the unary plus operator (**+**) is the value of its operand. The operand to the unary plus operator must be of an arithmetic type.  \n  \n Integral promotion is performed on integral operands. The resultant type is the type to which the operand is promoted. Thus, the expression `+ch`, where `ch` is of type `char`, results in type `int`; the value is unmodified. See [Standard Conversions](standard-conversions.md) for more information about how the promotion is done.  \n  \n## - operator  \n The unary negation operator (**–**) produces the negative of its operand. The operand to the unary negation operator must be an arithmetic type.  \n  \n Integral promotion is performed on integral operands, and the resultant type is the type to which the operand is promoted. See [Standard Conversions](standard-conversions.md) for more information about how the promotion is performed.  \n  \n## Microsoft specific  \n Unary negation of unsigned quantities is performed by subtracting the value of the operand from 2^n, where n is the number of bits in an object of the given unsigned type. (Microsoft C++ runs on processors that utilize two's-complement arithmetic. On other processors, the algorithm for negation can differ.)  \n  \n## See Also  \n [Expressions with Unary Operators](../cpp/expressions-with-unary-operators.md)   \n [C++ Built-in Operators, Precedence and Associativity](../cpp/cpp-built-in-operators-precedence-and-associativity.md)"}