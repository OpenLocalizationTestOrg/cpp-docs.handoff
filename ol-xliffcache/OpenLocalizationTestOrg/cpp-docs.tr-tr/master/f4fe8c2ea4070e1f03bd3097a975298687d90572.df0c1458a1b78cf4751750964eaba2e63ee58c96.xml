{"nodes":[{"pos":[12,60],"content":"is_trivially_destructible Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"is_trivially_destructible Class | Microsoft Docs","pos":[0,48]}]},{"content":"is_trivially_destructible Class","pos":[794,825]},{"content":"Tests whether the type is trivially destructible.","pos":[826,875]},{"content":"Syntax","pos":[884,890]},{"content":"Parameters","pos":[969,979]},{"content":"The type to query.","pos":[990,1008]},{"content":"Remarks","pos":[1017,1024]},{"content":"An instance of the type predicate holds true if the type <ph id=\"ph1\">`T`</ph> is a destructible type, and the destructor is known to the compiler to use no non-trivial operations.","pos":[1028,1190],"source":"An instance of the type predicate holds true if the type `T` is a destructible type, and the destructor is known to the compiler to use no non-trivial operations."},{"content":"Otherwise, it holds false.","pos":[1191,1217]},{"content":"Requirements","pos":[1226,1238]},{"pos":[1242,1267],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> &lt;type_traits&gt;","source":"**Header:** <type_traits>"},{"pos":[1274,1292],"content":"<bpt id=\"p1\">**</bpt>Namespace:<ept id=\"p1\">**</ept> std","source":"**Namespace:** std"},{"content":"See Also","pos":[1301,1309]},{"content":"&lt;type_traits&gt;","pos":[1314,1327],"source":"<type_traits>"}],"content":"---\ntitle: \"is_trivially_destructible Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"cpp\"\n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"language-reference\"\nf1_keywords: \n  - \"is_trivially_destructible\"\n  - \"std.is_trivially_destructible\"\n  - \"std::is_trivially_destructible\"\n  - \"type_traits/std::is_trivially_destructible\"\ndev_langs: \n  - \"C++\"\n  - \"c++\"\nhelpviewer_keywords: \n  - \"is_trivially_destructible\"\nms.assetid: 3f7a787d-2448-40c5-ac51-a228318e02ce\ncaps.latest.revision: 13\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# is_trivially_destructible Class\nTests whether the type is trivially destructible.  \n  \n## Syntax  \n  \n```\ntemplate <class T>  \nstruct is_trivially_destructible;\n```  \n  \n#### Parameters  \n `T`  \n The type to query.  \n  \n## Remarks  \n An instance of the type predicate holds true if the type `T` is a destructible type, and the destructor is known to the compiler to use no non-trivial operations. Otherwise, it holds false.  \n  \n## Requirements  \n **Header:** <type_traits>  \n  \n **Namespace:** std  \n  \n## See Also  \n [<type_traits>](../standard-library/type-traits.md)\n\n\n\n"}