{"nodes":[{"pos":[12,52],"content":"inplace_merge (STL-CLR) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"inplace_merge (STL-CLR) | Microsoft Docs","pos":[0,40]}]},{"content":"inplace_merge (STL/CLR)","pos":[637,660]},{"content":"Combines the elements from two consecutive sorted ranges into a single sorted range, where the ordering criterion may be specified by a binary predicate.","pos":[661,814]},{"content":"Syntax","pos":[823,829]},{"content":"Remarks","pos":[1085,1092]},{"pos":[1096,1277],"content":"This function behaves the same as the STL function <ph id=\"ph1\">`inplace_merge`</ph> For more information, see <bpt id=\"p1\">[</bpt>inplace_merge<ept id=\"p1\">](http://msdn.microsoft.com/Library/a3a7d861-2b47-4b0c-a2ac-df805c813437)</ept>.","source":"This function behaves the same as the STL function `inplace_merge` For more information, see [inplace_merge](http://msdn.microsoft.com/Library/a3a7d861-2b47-4b0c-a2ac-df805c813437)."},{"content":"Requirements","pos":[1286,1298]},{"pos":[1302,1333],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> <ph id=\"ph1\">\\&lt;</ph>cliext/algorithm&gt;","source":"**Header:** \\<cliext/algorithm>"},{"pos":[1340,1361],"content":"<bpt id=\"p1\">**</bpt>Namespace:<ept id=\"p1\">**</ept> cliext","source":"**Namespace:** cliext"},{"content":"See Also","pos":[1370,1378]},{"content":"algorithm (STL/CLR)","pos":[1383,1402]}],"content":"---\ntitle: \"inplace_merge (STL-CLR) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"cliext::inplace_merge\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"inplace_merge function [STL/CLR]\"\nms.assetid: e6948c03-8c5b-4a7c-915c-0a531946a321\ncaps.latest.revision: 4\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# inplace_merge (STL/CLR)\nCombines the elements from two consecutive sorted ranges into a single sorted range, where the ordering criterion may be specified by a binary predicate.  \n  \n## Syntax  \n  \n```  \ntemplate<class _BidIt> inline  \n    void inplace_merge(_BidIt _First, _BidIt _Mid, _BidIt _Last);  \ntemplate<class _BidIt, class _Pr> inline  \n    void inplace_merge(_BidIt _First, _BidIt _Mid, _BidIt _Last,  \n        _Pr _Pred);  \n```  \n  \n## Remarks  \n This function behaves the same as the STL function `inplace_merge` For more information, see [inplace_merge](http://msdn.microsoft.com/Library/a3a7d861-2b47-4b0c-a2ac-df805c813437).  \n  \n## Requirements  \n **Header:** \\<cliext/algorithm>  \n  \n **Namespace:** cliext  \n  \n## See Also  \n [algorithm (STL/CLR)](../dotnet/algorithm-stl-clr.md)"}