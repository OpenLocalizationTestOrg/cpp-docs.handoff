{"nodes":[{"pos":[12,49],"content":"Compiler Error C3854 | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Compiler Error C3854 | Microsoft Docs","pos":[0,37]}]},{"pos":[597,617],"content":"Compiler Error C3854","linkify":"Compiler Error C3854","nodes":[{"content":"Compiler Error C3854","pos":[0,20]}]},{"content":"expression to left of '=' evaluates to a function.","pos":[618,668]},{"content":"Cannot assign to a function (a function is not an l-value)","pos":[669,727]},{"content":"A reference cannot be reinitialized.","pos":[734,770]},{"content":"Dereferencing a reference to a function yields a function, which is an rvalue, to which you cannot assign.","pos":[771,877]},{"content":"Therefore, you cannot assign through a reference to a function.","pos":[878,941]},{"content":"The following sample generates C3854:","pos":[948,985]}],"content":"---\ntitle: \"Compiler Error C3854 | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"error-reference\"\nf1_keywords: \n  - \"C3854\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"C3854\"\nms.assetid: 32a9ead0-c6c7-485a-8802-c7b1fe921d3a\ncaps.latest.revision: 6\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Compiler Error C3854\nexpression to left of '=' evaluates to a function. Cannot assign to a function (a function is not an l-value)  \n  \n A reference cannot be reinitialized. Dereferencing a reference to a function yields a function, which is an rvalue, to which you cannot assign. Therefore, you cannot assign through a reference to a function.  \n  \n The following sample generates C3854:  \n  \n```  \n// C3854.cpp  \nint afunc(int i)  \n{  \n   return i;  \n}  \n  \ntypedef int (& rFunc_t)(int);  \ntypedef int (* pFunc_t)(int);  \n  \nint main()  \n{  \n   rFunc_t rf = afunc;   // OK binding a reference to function  \n   pFunc_t pf = &afunc;   // OK initializing a pointer to function  \n  \n   *pf = &afunc;   // C3854  \n   // try the following line instead  \n   // pf = &afunc;  \n   *rf = &afunc;   // C3854  \n}  \n```"}