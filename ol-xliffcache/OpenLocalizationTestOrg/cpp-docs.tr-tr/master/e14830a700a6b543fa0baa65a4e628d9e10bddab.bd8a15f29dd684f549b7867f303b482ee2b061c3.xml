{"nodes":[{"pos":[12,49],"content":"indirect_array Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"indirect_array Class | Microsoft Docs","pos":[0,37]}]},{"pos":[700,720],"content":"indirect_array Class","linkify":"indirect_array Class","nodes":[{"content":"indirect_array Class","pos":[0,20]}]},{"content":"An internal, auxiliary template class that supports objects that are subsets of valarrays by providing operations between subset arrays defined by specifying a subset of indices of a parent valarray.","pos":[721,920]},{"pos":[929,935],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[950,957],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[961,1252],"content":"The class describes an object that stores a reference to an object <bpt id=\"p1\">**</bpt>va<ept id=\"p1\">**</ept> of class <bpt id=\"p2\">[</bpt>valarray<ept id=\"p2\">](../standard-library/valarray-class.md)</ept><bpt id=\"p3\">**</bpt><ph id=\"ph1\">\\&lt;</ph>Type&gt;<ept id=\"p3\">**</ept>, along with an object <bpt id=\"p4\">**</bpt>xa<ept id=\"p4\">**</ept> of class <bpt id=\"p5\">**</bpt>valarray&lt;size_t&gt;<ept id=\"p5\">**</ept>, which describes the sequence of elements to select from the <bpt id=\"p6\">**</bpt>valarray<ph id=\"ph2\">\\&lt;</ph>Type&gt;<ept id=\"p6\">**</ept> object.","source":"The class describes an object that stores a reference to an object **va** of class [valarray](../standard-library/valarray-class.md)**\\<Type>**, along with an object **xa** of class **valarray<size_t>**, which describes the sequence of elements to select from the **valarray\\<Type>** object."},{"content":"You construct an <bpt id=\"p1\">**</bpt>indirect_array<ph id=\"ph1\">\\&lt;</ph>Type&gt;<ept id=\"p1\">**</ept> object only by writing an expression of the form <bpt id=\"p2\">**</bpt>va[xa]<ept id=\"p2\">**</ept>.","pos":[1259,1362],"source":"You construct an **indirect_array\\<Type>** object only by writing an expression of the form **va[xa]**."},{"content":"The member functions of class indirect_array then behave like the corresponding function signatures defined for <bpt id=\"p1\">**</bpt>valarray<ph id=\"ph1\">\\&lt;</ph>Type&gt;<ept id=\"p1\">**</ept>, except that only the sequence of selected elements is affected.","pos":[1363,1559],"source":" The member functions of class indirect_array then behave like the corresponding function signatures defined for **valarray\\<Type>**, except that only the sequence of selected elements is affected."},{"pos":[1566,1732],"content":"The sequence consists of <bpt id=\"p1\">**</bpt>xa.<ept id=\"p1\">**</ept><bpt id=\"p2\">[</bpt>size<ept id=\"p2\">](../standard-library/valarray-class.md#valarray__size)</ept> elements, where element <ph id=\"ph1\">`I`</ph> becomes the index <bpt id=\"p3\">**</bpt>xa<ept id=\"p3\">**</ept>[ <ph id=\"ph2\">`I`</ph>] within <bpt id=\"p4\">**</bpt>va<ept id=\"p4\">**</ept>.","source":"The sequence consists of **xa.**[size](../standard-library/valarray-class.md#valarray__size) elements, where element `I` becomes the index **xa**[ `I`] within **va**."},{"pos":[1741,1749],"content":"Example:","linkify":"Example:","nodes":[{"content":"Example:","pos":[0,8]}]},{"pos":[2590,2596],"content":"Output","linkify":"Output","nodes":[{"content":"Output","pos":[0,6]}]},{"pos":[2752,2764],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[2768,2791],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> <ph id=\"ph1\">\\&lt;</ph>valarray&gt;","source":"**Header:** \\<valarray>"},{"pos":[2798,2816],"content":"<bpt id=\"p1\">**</bpt>Namespace:<ept id=\"p1\">**</ept> std","source":"**Namespace:** std"},{"pos":[2825,2833],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"pos":[2837,2946],"content":"<bpt id=\"p1\">[</bpt>Thread Safety in the C++ Standard Library<ept id=\"p1\">](../standard-library/thread-safety-in-the-cpp-standard-library.md)</ept>","source":"[Thread Safety in the C++ Standard Library](../standard-library/thread-safety-in-the-cpp-standard-library.md)"}],"content":"---\ntitle: \"indirect_array Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"std.indirect_array\"\n  - \"valarray/std::indirect_array\"\n  - \"std::indirect_array\"\n  - \"indirect_array\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"indirect_array class\"\nms.assetid: 10e1eaea-ba5a-405c-a25e-7bdd3eee7fc7\ncaps.latest.revision: 20\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# indirect_array Class\nAn internal, auxiliary template class that supports objects that are subsets of valarrays by providing operations between subset arrays defined by specifying a subset of indices of a parent valarray.  \n  \n## Syntax  \n  \n  \n  \n## Remarks  \n The class describes an object that stores a reference to an object **va** of class [valarray](../standard-library/valarray-class.md)**\\<Type>**, along with an object **xa** of class **valarray<size_t>**, which describes the sequence of elements to select from the **valarray\\<Type>** object.  \n  \n You construct an **indirect_array\\<Type>** object only by writing an expression of the form **va[xa]**. The member functions of class indirect_array then behave like the corresponding function signatures defined for **valarray\\<Type>**, except that only the sequence of selected elements is affected.  \n  \n The sequence consists of **xa.**[size](../standard-library/valarray-class.md#valarray__size) elements, where element `I` becomes the index **xa**[ `I`] within **va**.  \n  \n## Example:  \n  \n```  \n// indirect_array.cpp  \n// compile with: /EHsc  \n#include <valarray>  \n#include <iostream>  \n  \nint main( )  \n{  \n   using namespace std;  \n   int i;  \n  \n   valarray<int> va ( 10 );  \n   for ( i = 0 ; i < 10 ; i += 2 )  \n      va [ i ] =  i;  \n   for ( i = 1 ; i < 10 ; i += 2 )  \n      va [ i ] =  -1;  \n  \n   cout << \"The initial operand valarray is:  ( \";  \n      for ( i = 0 ; i < 10 ; i++ )  \n         cout << va [ i ] << \" \";  \n   cout << \").\" << endl;  \n  \n   // Select 2nd, 4th & 6th elements  \n   // and assign a value of 10 to them  \n   valarray<size_t> indx ( 3 );  \n   indx [0] = 2;  \n   indx [1] = 4;  \n   indx [2] = 6;  \n   va[indx] = 10;  \n  \n   cout << \"The modified operand valarray is:  ( \";  \n      for (i = 0 ; i < 10 ; i++ )  \n         cout << va [ i ] << \" \";  \n   cout << \").\" << endl;  \n}  \n```  \n  \n### Output  \n  \n```  \nThe initial operand valarray is:  (0 -1 2 -1 4 -1 6 -1 8 -1).  \nThe modified operand valarray is:  (0 -1 10 -1 10 -1 10 -1 8 -1).  \n```  \n  \n## Requirements  \n **Header:** \\<valarray>  \n  \n **Namespace:** std  \n  \n## See Also  \n [Thread Safety in the C++ Standard Library](../standard-library/thread-safety-in-the-cpp-standard-library.md)\n\n"}