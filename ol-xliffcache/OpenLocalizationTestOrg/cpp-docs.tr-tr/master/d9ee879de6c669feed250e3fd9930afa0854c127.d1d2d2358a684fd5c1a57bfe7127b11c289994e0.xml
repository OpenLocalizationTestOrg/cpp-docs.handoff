{"nodes":[{"pos":[12,51],"content":"COleIPFrameWndEx Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"COleIPFrameWndEx Class | Microsoft Docs","pos":[0,39]}]},{"pos":[648,670],"content":"COleIPFrameWndEx Class","linkify":"COleIPFrameWndEx Class","nodes":[{"content":"COleIPFrameWndEx Class","pos":[0,22]}]},{"content":"The <ph id=\"ph1\">`COleIPFrameWndEx`</ph> class implements an OLE container that supports MFC.","pos":[671,746],"source":"The `COleIPFrameWndEx` class implements an OLE container that supports MFC."},{"content":"You must derive the in-place frame window class for your application from the <ph id=\"ph1\">`COleIPFrameWndEx`</ph> class, instead of deriving it from the <bpt id=\"p1\">[</bpt>COleIPFrameWnd<ept id=\"p1\">](../../mfc/reference/coleipframewnd-class.md)</ept>class.","pos":[747,950],"source":" You must derive the in-place frame window class for your application from the `COleIPFrameWndEx` class, instead of deriving it from the [COleIPFrameWnd](../../mfc/reference/coleipframewnd-class.md)class."},{"pos":[959,965],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[1038,1045],"content":"Members","linkify":"Members","nodes":[{"content":"Members","pos":[0,7]}]},{"pos":[1055,1069],"content":"Public Methods","linkify":"Public Methods","nodes":[{"content":"Public Methods","pos":[0,14]}]},{"content":"Name","pos":[1076,1080]},{"content":"Description","pos":[1081,1092]},{"pos":[1130,1193],"content":"<bpt id=\"p1\">[</bpt>COleIPFrameWndEx::AddDockSite<ept id=\"p1\">](#coleipframewndex__adddocksite)</ept>","source":"[COleIPFrameWndEx::AddDockSite](#coleipframewndex__adddocksite)"},{"pos":[1199,1254],"content":"<bpt id=\"p1\">[</bpt>COleIPFrameWndEx::AddPane<ept id=\"p1\">](#coleipframewndex__addpane)</ept>","source":"[COleIPFrameWndEx::AddPane](#coleipframewndex__addpane)"},{"pos":[1260,1339],"content":"<bpt id=\"p1\">[</bpt>COleIPFrameWndEx::AdjustDockingLayout<ept id=\"p1\">](#coleipframewndex__adjustdockinglayout)</ept>","source":"[COleIPFrameWndEx::AdjustDockingLayout](#coleipframewndex__adjustdockinglayout)"},{"pos":[1345,1402],"content":"<bpt id=\"p1\">[</bpt>COleIPFrameWndEx::DockPane<ept id=\"p1\">](#coleipframewndex__dockpane)</ept>","source":"[COleIPFrameWndEx::DockPane](#coleipframewndex__dockpane)"},{"pos":[1408,1477],"content":"<bpt id=\"p1\">[</bpt>COleIPFrameWndEx::DockPaneLeftOf<ept id=\"p1\">](#coleipframewndex__dockpaneleftof)</ept>","source":"[COleIPFrameWndEx::DockPaneLeftOf](#coleipframewndex__dockpaneleftof)"},{"content":"Docks one pane to the left of another pane.","pos":[1478,1521]},{"pos":[1526,1605],"content":"<bpt id=\"p1\">[</bpt>COleIPFrameWndEx::EnableAutoHidePanes<ept id=\"p1\">](#coleipframewndex__enableautohidepanes)</ept>","source":"[COleIPFrameWndEx::EnableAutoHidePanes](#coleipframewndex__enableautohidepanes)"},{"pos":[1611,1678],"content":"<bpt id=\"p1\">[</bpt>COleIPFrameWndEx::EnableDocking<ept id=\"p1\">](#coleipframewndex__enabledocking)</ept>","source":"[COleIPFrameWndEx::EnableDocking](#coleipframewndex__enabledocking)"},{"pos":[1684,1753],"content":"<bpt id=\"p1\">[</bpt>COleIPFrameWndEx::EnablePaneMenu<ept id=\"p1\">](#coleipframewndex__enablepanemenu)</ept>","source":"[COleIPFrameWndEx::EnablePaneMenu](#coleipframewndex__enablepanemenu)"},{"pos":[1759,1828],"content":"<bpt id=\"p1\">[</bpt>COleIPFrameWndEx::GetActivePopup<ept id=\"p1\">](#coleipframewndex__getactivepopup)</ept>","source":"[COleIPFrameWndEx::GetActivePopup](#coleipframewndex__getactivepopup)"},{"content":"Returns a pointer to the currently displayed popup menu.","pos":[1829,1885]},{"pos":[1890,1977],"content":"<bpt id=\"p1\">[</bpt>COleIPFrameWndEx::GetContainerFrameWindow<ept id=\"p1\">](#coleipframewndex__getcontainerframewindow)</ept>","source":"[COleIPFrameWndEx::GetContainerFrameWindow](#coleipframewndex__getcontainerframewindow)"},{"pos":[1983,2054],"content":"<bpt id=\"p1\">[</bpt>COleIPFrameWndEx::GetDefaultResId<ept id=\"p1\">](#coleipframewndex__getdefaultresid)</ept>","source":"[COleIPFrameWndEx::GetDefaultResId](#coleipframewndex__getdefaultresid)"},{"content":"Returns the resource ID of the frame window that you specified when the window was loaded.","pos":[2055,2145]},{"pos":[2150,2215],"content":"<bpt id=\"p1\">[</bpt>COleIPFrameWndEx::GetDockFrame<ept id=\"p1\">](#coleipframewndex__getdockframe)</ept>","source":"[COleIPFrameWndEx::GetDockFrame](#coleipframewndex__getdockframe)"},{"pos":[2221,2296],"content":"<bpt id=\"p1\">[</bpt>COleIPFrameWndEx::GetDockingManager<ept id=\"p1\">](#coleipframewndex__getdockingmanager)</ept>","source":"[COleIPFrameWndEx::GetDockingManager](#coleipframewndex__getdockingmanager)"},{"pos":[2302,2367],"content":"<bpt id=\"p1\">[</bpt>COleIPFrameWndEx::GetMainFrame<ept id=\"p1\">](#coleipframewndex__getmainframe)</ept>","source":"[COleIPFrameWndEx::GetMainFrame](#coleipframewndex__getmainframe)"},{"pos":[2373,2434],"content":"<bpt id=\"p1\">[</bpt>COleIPFrameWndEx::GetMenuBar<ept id=\"p1\">](#coleipframewndex__getmenubar)</ept>","source":"[COleIPFrameWndEx::GetMenuBar](#coleipframewndex__getmenubar)"},{"content":"Returns a pointer to the menu bar object attached to the frame window.","pos":[2435,2505]},{"pos":[2510,2565],"content":"<bpt id=\"p1\">[</bpt>COleIPFrameWndEx::GetPane<ept id=\"p1\">](#coleipframewndex__getpane)</ept>","source":"[COleIPFrameWndEx::GetPane](#coleipframewndex__getpane)"},{"pos":[2571,2640],"content":"<bpt id=\"p1\">[</bpt>COleIPFrameWndEx::GetTearOffBars<ept id=\"p1\">](#coleipframewndex__gettearoffbars)</ept>","source":"[COleIPFrameWndEx::GetTearOffBars](#coleipframewndex__gettearoffbars)"},{"content":"Returns a list of pane objects that are in a tear-off state.","pos":[2641,2701]},{"pos":[2706,2801],"content":"<bpt id=\"p1\">[</bpt>COleIPFrameWndEx::GetToolbarButtonToolTipText<ept id=\"p1\">](#coleipframewndex__gettoolbarbuttontooltiptext)</ept>","source":"[COleIPFrameWndEx::GetToolbarButtonToolTipText](#coleipframewndex__gettoolbarbuttontooltiptext)"},{"content":"Called by the framework before the tooltip for a button is displayed.","pos":[2802,2871]},{"pos":[2876,2937],"content":"<bpt id=\"p1\">[</bpt>COleIPFrameWndEx::InsertPane<ept id=\"p1\">](#coleipframewndex__insertpane)</ept>","source":"[COleIPFrameWndEx::InsertPane](#coleipframewndex__insertpane)"},{"pos":[2943,3020],"content":"<bpt id=\"p1\">[</bpt>COleIPFrameWndEx::IsMenuBarAvailable<ept id=\"p1\">](#coleipframewndex__ismenubaravailable)</ept>","source":"[COleIPFrameWndEx::IsMenuBarAvailable](#coleipframewndex__ismenubaravailable)"},{"pos":[3021,3089],"content":"Determines whether the pointer to the menu bar object is not <ph id=\"ph1\">`NULL`</ph>.","source":"Determines whether the pointer to the menu bar object is not `NULL`."},{"pos":[3094,3173],"content":"<bpt id=\"p1\">[</bpt>COleIPFrameWndEx::IsPointNearDockSite<ept id=\"p1\">](#coleipframewndex__ispointneardocksite)</ept>","source":"[COleIPFrameWndEx::IsPointNearDockSite](#coleipframewndex__ispointneardocksite)"},{"pos":[3179,3238],"content":"<bpt id=\"p1\">[</bpt>COleIPFrameWndEx::LoadFrame<ept id=\"p1\">](#coleipframewndex__loadframe)</ept>","source":"[COleIPFrameWndEx::LoadFrame](#coleipframewndex__loadframe)"},{"pos":[3239,3279],"content":"(Overrides <ph id=\"ph1\">`COleIPFrameWnd::LoadFrame`</ph>.)","source":"(Overrides `COleIPFrameWnd::LoadFrame`.)"},{"pos":[3284,3361],"content":"<bpt id=\"p1\">[</bpt>COleIPFrameWndEx::OnCloseDockingPane<ept id=\"p1\">](#coleipframewndex__onclosedockingpane)</ept>","source":"[COleIPFrameWndEx::OnCloseDockingPane](#coleipframewndex__onclosedockingpane)"},{"pos":[3367,3440],"content":"<bpt id=\"p1\">[</bpt>COleIPFrameWndEx::OnCloseMiniFrame<ept id=\"p1\">](#coleipframewndex__oncloseminiframe)</ept>","source":"[COleIPFrameWndEx::OnCloseMiniFrame](#coleipframewndex__oncloseminiframe)"},{"pos":[3446,3519],"content":"<bpt id=\"p1\">[</bpt>COleIPFrameWndEx::OnClosePopupMenu<ept id=\"p1\">](#coleipframewndex__onclosepopupmenu)</ept>","source":"[COleIPFrameWndEx::OnClosePopupMenu](#coleipframewndex__onclosepopupmenu)"},{"content":"Called by the framework when an active pop-up menu processes a WM_DESTROY message.","pos":[3520,3602]},{"pos":[3607,3664],"content":"<bpt id=\"p1\">[</bpt>COleIPFrameWndEx::OnCmdMsg<ept id=\"p1\">](#coleipframewndex__oncmdmsg)</ept>","source":"[COleIPFrameWndEx::OnCmdMsg](#coleipframewndex__oncmdmsg)"},{"pos":[3665,3699],"content":"(Overrides <ph id=\"ph1\">`CFrameWnd::OnCmdMsg`</ph>.)","source":"(Overrides `CFrameWnd::OnCmdMsg`.)"},{"pos":[3704,3775],"content":"<bpt id=\"p1\">[</bpt>COleIPFrameWndEx::OnDrawMenuImage<ept id=\"p1\">](#coleipframewndex__ondrawmenuimage)</ept>","source":"[COleIPFrameWndEx::OnDrawMenuImage](#coleipframewndex__ondrawmenuimage)"},{"content":"Called by the framework when the image associated with a menu item is drawn.","pos":[3776,3852]},{"pos":[3857,3926],"content":"<bpt id=\"p1\">[</bpt>COleIPFrameWndEx::OnDrawMenuLogo<ept id=\"p1\">](#coleipframewndex__ondrawmenulogo)</ept>","source":"[COleIPFrameWndEx::OnDrawMenuLogo](#coleipframewndex__ondrawmenulogo)"},{"pos":[3927,4053],"content":"Called by the framework when a <bpt id=\"p1\">[</bpt>CMFCPopupMenu<ept id=\"p1\">](../../mfc/reference/cmfcpopupmenu-class.md)</ept>object processes a WM_PAINT message.","source":"Called by the framework when a [CMFCPopupMenu](../../mfc/reference/cmfcpopupmenu-class.md)object processes a WM_PAINT message."},{"pos":[4058,4145],"content":"<bpt id=\"p1\">[</bpt>COleIPFrameWndEx::OnMenuButtonToolHitTest<ept id=\"p1\">](#coleipframewndex__onmenubuttontoolhittest)</ept>","source":"[COleIPFrameWndEx::OnMenuButtonToolHitTest](#coleipframewndex__onmenubuttontoolhittest)"},{"pos":[4146,4282],"content":"Called by the framework when a <bpt id=\"p1\">[</bpt>CMFCToolBarButton<ept id=\"p1\">](../../mfc/reference/cmfctoolbarbutton-class.md)</ept>object processes WM_NCHITTEST message.","source":"Called by the framework when a [CMFCToolBarButton](../../mfc/reference/cmfctoolbarbutton-class.md)object processes WM_NCHITTEST message."},{"pos":[4287,4358],"content":"<bpt id=\"p1\">[</bpt>COleIPFrameWndEx::OnMoveMiniFrame<ept id=\"p1\">](#coleipframewndex__onmoveminiframe)</ept>","source":"[COleIPFrameWndEx::OnMoveMiniFrame](#coleipframewndex__onmoveminiframe)"},{"pos":[4364,4437],"content":"<bpt id=\"p1\">[</bpt>COleIPFrameWndEx::OnSetPreviewMode<ept id=\"p1\">](#coleipframewndex__onsetpreviewmode)</ept>","source":"[COleIPFrameWndEx::OnSetPreviewMode](#coleipframewndex__onsetpreviewmode)"},{"content":"Call this member function to set the application's main frame window into and out of print-preview mode.","pos":[4438,4542]},{"content":"(Overrides <bpt id=\"p1\">[</bpt>CFrameWnd::OnSetPreviewMode<ept id=\"p1\">](../../mfc/reference/cframewnd-class.md#cframewnd__onsetpreviewmode)</ept>.)","pos":[4543,4653],"source":" (Overrides [CFrameWnd::OnSetPreviewMode](../../mfc/reference/cframewnd-class.md#cframewnd__onsetpreviewmode).)"},{"pos":[4658,4737],"content":"<bpt id=\"p1\">[</bpt>COleIPFrameWndEx::OnShowCustomizePane<ept id=\"p1\">](#coleipframewndex__onshowcustomizepane)</ept>","source":"[COleIPFrameWndEx::OnShowCustomizePane](#coleipframewndex__onshowcustomizepane)"},{"pos":[4743,4806],"content":"<bpt id=\"p1\">[</bpt>COleIPFrameWndEx::OnShowPanes<ept id=\"p1\">](#coleipframewndex__onshowpanes)</ept>","source":"[COleIPFrameWndEx::OnShowPanes](#coleipframewndex__onshowpanes)"},{"pos":[4812,4883],"content":"<bpt id=\"p1\">[</bpt>COleIPFrameWndEx::OnShowPopupMenu<ept id=\"p1\">](#coleipframewndex__onshowpopupmenu)</ept>","source":"[COleIPFrameWndEx::OnShowPopupMenu](#coleipframewndex__onshowpopupmenu)"},{"content":"Called by the framework when a pop-up menu is activated.","pos":[4884,4940]},{"pos":[4945,5012],"content":"<bpt id=\"p1\">[</bpt>COleIPFrameWndEx::OnTearOffMenu<ept id=\"p1\">](#coleipframewndex__ontearoffmenu)</ept>","source":"[COleIPFrameWndEx::OnTearOffMenu](#coleipframewndex__ontearoffmenu)"},{"content":"Called by the framework when a menu that has a tear-off bar is activated.","pos":[5013,5086]},{"pos":[5091,5158],"content":"<bpt id=\"p1\">[</bpt>COleIPFrameWndEx::PaneFromPoint<ept id=\"p1\">](#coleipframewndex__panefrompoint)</ept>","source":"[COleIPFrameWndEx::PaneFromPoint](#coleipframewndex__panefrompoint)"},{"pos":[5164,5243],"content":"<bpt id=\"p1\">[</bpt>COleIPFrameWndEx::PreTranslateMessage<ept id=\"p1\">](#coleipframewndex__pretranslatemessage)</ept>","source":"[COleIPFrameWndEx::PreTranslateMessage](#coleipframewndex__pretranslatemessage)"},{"pos":[5244,5294],"content":"(Overrides <ph id=\"ph1\">`COleIPFrameWnd::PreTranslateMessage`</ph>.)","source":"(Overrides `COleIPFrameWnd::PreTranslateMessage`.)"},{"pos":[5299,5364],"content":"<bpt id=\"p1\">[</bpt>COleIPFrameWndEx::RecalcLayout<ept id=\"p1\">](#coleipframewndex__recalclayout)</ept>","source":"[COleIPFrameWndEx::RecalcLayout](#coleipframewndex__recalclayout)"},{"pos":[5365,5408],"content":"(Overrides <ph id=\"ph1\">`COleIPFrameWnd::RecalcLayout`</ph>.)","source":"(Overrides `COleIPFrameWnd::RecalcLayout`.)"},{"pos":[5413,5504],"content":"<bpt id=\"p1\">[</bpt>COleIPFrameWndEx::RemovePaneFromDockManager<ept id=\"p1\">](#coleipframewndex__removepanefromdockmanager)</ept>","source":"[COleIPFrameWndEx::RemovePaneFromDockManager](#coleipframewndex__removepanefromdockmanager)"},{"pos":[5510,5575],"content":"<bpt id=\"p1\">[</bpt>COleIPFrameWndEx::SetDockState<ept id=\"p1\">](#coleipframewndex__setdockstate)</ept>","source":"[COleIPFrameWndEx::SetDockState](#coleipframewndex__setdockstate)"},{"content":"Applies the specified docking state to the panes that belong to the frame window.","pos":[5576,5657]},{"pos":[5662,5735],"content":"<bpt id=\"p1\">[</bpt>COleIPFrameWndEx::SetupToolbarMenu<ept id=\"p1\">](#coleipframewndex__setuptoolbarmenu)</ept>","source":"[COleIPFrameWndEx::SetupToolbarMenu](#coleipframewndex__setuptoolbarmenu)"},{"content":"Modifies a toolbar object by searching for dummy items and replacing them with the specified user-defined items.","pos":[5736,5848]},{"pos":[5853,5910],"content":"<bpt id=\"p1\">[</bpt>COleIPFrameWndEx::ShowPane<ept id=\"p1\">](#coleipframewndex__showpane)</ept>","source":"[COleIPFrameWndEx::ShowPane](#coleipframewndex__showpane)"},{"pos":[5916,5973],"content":"<bpt id=\"p1\">[</bpt>COleIPFrameWndEx::WinHelpA<ept id=\"p1\">](#coleipframewndex__winhelpa)</ept>","source":"[COleIPFrameWndEx::WinHelpA](#coleipframewndex__winhelpa)"},{"content":"Called by the framework to initiate the WinHelp application or context help.","pos":[5974,6050]},{"pos":[6061,6078],"content":"Protected Methods","linkify":"Protected Methods","nodes":[{"content":"Protected Methods","pos":[0,17]}]},{"content":"Name","pos":[6085,6089]},{"content":"Description","pos":[6090,6101]},{"pos":[6139,6210],"content":"<bpt id=\"p1\">[</bpt>COleIPFrameWndEx::InitUserToobars<ept id=\"p1\">](#coleipframewndex__initusertoobars)</ept>","source":"[COleIPFrameWndEx::InitUserToobars](#coleipframewndex__initusertoobars)"},{"content":"Tells the framework to initialize a range of control IDs that are assigned to user-defined toolbars.","pos":[6211,6311]},{"pos":[6321,6328],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following example demonstrates how to subclass an instance of the <ph id=\"ph1\">`COleIPFrameWndEx`</ph> class and over ride its methods.","pos":[6332,6453],"source":"The following example demonstrates how to subclass an instance of the `COleIPFrameWndEx` class and over ride its methods."},{"content":"The example shows how to over ride the <ph id=\"ph1\">`OnDestory`</ph> method, the <ph id=\"ph2\">`RepositionFrame`</ph> method, the <ph id=\"ph3\">`RecalcLayout`</ph> method, and the <ph id=\"ph4\">`CalcWindowRect`</ph> method.","pos":[6454,6602],"source":" The example shows how to over ride the `OnDestory` method, the `RepositionFrame` method, the `RecalcLayout` method, and the `CalcWindowRect` method."},{"content":"This code snippet is part of the <bpt id=\"p1\">[</bpt>Word Pad sample<ept id=\"p1\">](../../visual-cpp-samples.md)</ept>.","pos":[6603,6683],"source":" This code snippet is part of the [Word Pad sample](../../visual-cpp-samples.md)."},{"pos":[6690,6786],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_MFC_WordPad#1<ept id=\"p2\">](../../mfc/reference/codesnippet/cpp/coleipframewndex-class_1.cpp)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_MFC_WordPad#1](../../mfc/reference/codesnippet/cpp/coleipframewndex-class_1.cpp)]"},{"pos":[6795,6816],"content":"Inheritance Hierarchy","linkify":"Inheritance Hierarchy","nodes":[{"content":"Inheritance Hierarchy","pos":[0,21]}]},{"pos":[6820,6867],"content":"<bpt id=\"p1\">[</bpt>CObject<ept id=\"p1\">](../../mfc/reference/cobject-class.md)</ept>","source":"[CObject](../../mfc/reference/cobject-class.md)"},{"pos":[6874,6927],"content":"<bpt id=\"p1\">[</bpt>CCmdTarget<ept id=\"p1\">](../../mfc/reference/ccmdtarget-class.md)</ept>","source":"[CCmdTarget](../../mfc/reference/ccmdtarget-class.md)"},{"pos":[6934,6975],"content":"<bpt id=\"p1\">[</bpt>CWnd<ept id=\"p1\">](../../mfc/reference/cwnd-class.md)</ept>","source":"[CWnd](../../mfc/reference/cwnd-class.md)"},{"pos":[6982,7033],"content":"<bpt id=\"p1\">[</bpt>CFrameWnd<ept id=\"p1\">](../../mfc/reference/cframewnd-class.md)</ept>","source":"[CFrameWnd](../../mfc/reference/cframewnd-class.md)"},{"pos":[7040,7101],"content":"<bpt id=\"p1\">[</bpt>COleIPFrameWnd<ept id=\"p1\">](../../mfc/reference/coleipframewnd-class.md)</ept>","source":"[COleIPFrameWnd](../../mfc/reference/coleipframewnd-class.md)"},{"pos":[7108,7173],"content":"<bpt id=\"p1\">[</bpt>COleIPFrameWndEx<ept id=\"p1\">](../../mfc/reference/coleipframewndex-class.md)</ept>","source":"[COleIPFrameWndEx](../../mfc/reference/coleipframewndex-class.md)"},{"pos":[7182,7194],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[7198,7230],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> afxoleipframewndex.h","source":"**Header:** afxoleipframewndex.h"},{"pos":[7240,7315],"content":"<bpt id=\"p1\">&lt;a name=\"coleipframewndex__adddocksite\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  COleIPFrameWndEx::AddDockSite","linkify":"<a name=\"coleipframewndex__adddocksite\"></a>  COleIPFrameWndEx::AddDockSite","source":"<a name=\"coleipframewndex__adddocksite\"></a>  COleIPFrameWndEx::AddDockSite"},{"pos":[7463,7470],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[7480,7547],"content":"<bpt id=\"p1\">&lt;a name=\"coleipframewndex__addpane\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  COleIPFrameWndEx::AddPane","linkify":"<a name=\"coleipframewndex__addpane\"></a>  COleIPFrameWndEx::AddPane","source":"<a name=\"coleipframewndex__addpane\"></a>  COleIPFrameWndEx::AddPane"},{"pos":[7743,7753],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`pControlBar`</ph>","pos":[7757,7775],"source":"[in] `pControlBar`"},{"content":"[in] <ph id=\"ph1\">`bTail`</ph>","pos":[7779,7791],"source":" [in] `bTail`"},{"pos":[7801,7813],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[7823,7830],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[7840,7931],"content":"<bpt id=\"p1\">&lt;a name=\"coleipframewndex__adjustdockinglayout\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  COleIPFrameWndEx::AdjustDockingLayout","linkify":"<a name=\"coleipframewndex__adjustdockinglayout\"></a>  COleIPFrameWndEx::AdjustDockingLayout","source":"<a name=\"coleipframewndex__adjustdockinglayout\"></a>  COleIPFrameWndEx::AdjustDockingLayout"},{"pos":[8111,8121],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"pos":[8125,8136],"content":"[in] <ph id=\"ph1\">`hdwp`</ph>","source":"[in] `hdwp`"},{"pos":[8146,8153],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[8163,8232],"content":"<bpt id=\"p1\">&lt;a name=\"coleipframewndex__dockpane\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  COleIPFrameWndEx::DockPane","linkify":"<a name=\"coleipframewndex__dockpane\"></a>  COleIPFrameWndEx::DockPane","source":"<a name=\"coleipframewndex__dockpane\"></a>  COleIPFrameWndEx::DockPane"},{"pos":[8453,8463],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`pBar`</ph>","pos":[8467,8478],"source":"[in] `pBar`"},{"content":"[in] <ph id=\"ph1\">`nDockBarID`</ph>","pos":[8482,8499],"source":" [in] `nDockBarID`"},{"content":"[in] <ph id=\"ph1\">`lpRect`</ph>","pos":[8503,8516],"source":" [in] `lpRect`"},{"pos":[8526,8533],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[8543,8624],"content":"<bpt id=\"p1\">&lt;a name=\"coleipframewndex__dockpaneleftof\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  COleIPFrameWndEx::DockPaneLeftOf","linkify":"<a name=\"coleipframewndex__dockpaneleftof\"></a>  COleIPFrameWndEx::DockPaneLeftOf","source":"<a name=\"coleipframewndex__dockpaneleftof\"></a>  COleIPFrameWndEx::DockPaneLeftOf"},{"content":"Docks one pane to the left of another pane.","pos":[8628,8671]},{"pos":[8757,8767],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`pBar`</ph>","pos":[8771,8782],"source":"[in] `pBar`"},{"content":"A pointer to the pane to dock.","pos":[8786,8816]},{"content":"[in] <ph id=\"ph1\">`pLeftOf`</ph>","pos":[8823,8837],"source":"[in] `pLeftOf`"},{"content":"A pointer to the pane that serves as origin.","pos":[8841,8885]},{"pos":[8895,8907],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Returns <ph id=\"ph1\">`TRUE`</ph> if the operation is successful.","pos":[8911,8957],"source":"Returns `TRUE` if the operation is successful."},{"content":"Otherwise returns <ph id=\"ph1\">`FALSE`</ph>.","pos":[8958,8984],"source":" Otherwise returns `FALSE`."},{"pos":[8994,9001],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Call this method to dock several pane objects in a predefined order.","pos":[9005,9073]},{"content":"This method docks the pane specified by <ph id=\"ph1\">`pBar`</ph> to the left of the pane specified by <ph id=\"ph2\">`pLeftOf`</ph>.","pos":[9074,9168],"source":" This method docks the pane specified by `pBar` to the left of the pane specified by `pLeftOf`."},{"pos":[9178,9269],"content":"<bpt id=\"p1\">&lt;a name=\"coleipframewndex__enableautohidepanes\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  COleIPFrameWndEx::EnableAutoHidePanes","linkify":"<a name=\"coleipframewndex__enableautohidepanes\"></a>  COleIPFrameWndEx::EnableAutoHidePanes","source":"<a name=\"coleipframewndex__enableautohidepanes\"></a>  COleIPFrameWndEx::EnableAutoHidePanes"},{"pos":[9442,9452],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"pos":[9456,9474],"content":"[in] <ph id=\"ph1\">`dwDockStyle`</ph>","source":"[in] `dwDockStyle`"},{"pos":[9484,9496],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[9506,9513],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[9523,9602],"content":"<bpt id=\"p1\">&lt;a name=\"coleipframewndex__enabledocking\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  COleIPFrameWndEx::EnableDocking","linkify":"<a name=\"coleipframewndex__enabledocking\"></a>  COleIPFrameWndEx::EnableDocking","source":"<a name=\"coleipframewndex__enabledocking\"></a>  COleIPFrameWndEx::EnableDocking"},{"pos":[9769,9779],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"pos":[9783,9801],"content":"[in] <ph id=\"ph1\">`dwDockStyle`</ph>","source":"[in] `dwDockStyle`"},{"pos":[9811,9823],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[9833,9840],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[9850,9931],"content":"<bpt id=\"p1\">&lt;a name=\"coleipframewndex__enablepanemenu\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  COleIPFrameWndEx::EnablePaneMenu","linkify":"<a name=\"coleipframewndex__enablepanemenu\"></a>  COleIPFrameWndEx::EnablePaneMenu","source":"<a name=\"coleipframewndex__enablepanemenu\"></a>  COleIPFrameWndEx::EnablePaneMenu"},{"pos":[10301,10311],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`bEnable`</ph>","pos":[10315,10329],"source":"[in] `bEnable`"},{"content":"[in] <ph id=\"ph1\">`uiCustomizeCmd`</ph>","pos":[10333,10354],"source":" [in] `uiCustomizeCmd`"},{"content":"[in] <ph id=\"ph1\">`strCustomizeLabel`</ph>","pos":[10358,10382],"source":" [in] `strCustomizeLabel`"},{"content":"[in] <ph id=\"ph1\">`uiViewToolbarsMenuEntryID`</ph>","pos":[10386,10418],"source":" [in] `uiViewToolbarsMenuEntryID`"},{"content":"[in] <ph id=\"ph1\">`bContextMenuShowsToolbarsOnly`</ph>","pos":[10422,10458],"source":" [in] `bContextMenuShowsToolbarsOnly`"},{"content":"[in] <ph id=\"ph1\">`bViewMenuShowsToolbarsOnly`</ph>","pos":[10462,10495],"source":" [in] `bViewMenuShowsToolbarsOnly`"},{"pos":[10505,10512],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[10522,10603],"content":"<bpt id=\"p1\">&lt;a name=\"coleipframewndex__getactivepopup\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  COleIPFrameWndEx::GetActivePopup","linkify":"<a name=\"coleipframewndex__getactivepopup\"></a>  COleIPFrameWndEx::GetActivePopup","source":"<a name=\"coleipframewndex__getactivepopup\"></a>  COleIPFrameWndEx::GetActivePopup"},{"content":"Returns a pointer to the currently displayed pop-up menu.","pos":[10607,10664]},{"pos":[10731,10743],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[10747,10801],"content":"A pointer to the active pop-up menu; otherwise <ph id=\"ph1\">`NULL`</ph>.","source":"A pointer to the active pop-up menu; otherwise `NULL`."},{"pos":[10811,10818],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[10822,10966],"content":"Use this method to obtain a pointer to the <bpt id=\"p1\">[</bpt>CMFCPopupMenu Class<ept id=\"p1\">](../../mfc/reference/cmfcpopupmenu-class.md)</ept> object that is currently displayed.","source":"Use this method to obtain a pointer to the [CMFCPopupMenu Class](../../mfc/reference/cmfcpopupmenu-class.md) object that is currently displayed."},{"pos":[10976,11075],"content":"<bpt id=\"p1\">&lt;a name=\"coleipframewndex__getcontainerframewindow\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  COleIPFrameWndEx::GetContainerFrameWindow","linkify":"<a name=\"coleipframewndex__getcontainerframewindow\"></a>  COleIPFrameWndEx::GetContainerFrameWindow","source":"<a name=\"coleipframewndex__getcontainerframewindow\"></a>  COleIPFrameWndEx::GetContainerFrameWindow"},{"pos":[11250,11262],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[11272,11279],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[11289,11372],"content":"<bpt id=\"p1\">&lt;a name=\"coleipframewndex__getdefaultresid\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  COleIPFrameWndEx::GetDefaultResId","linkify":"<a name=\"coleipframewndex__getdefaultresid\"></a>  COleIPFrameWndEx::GetDefaultResId","source":"<a name=\"coleipframewndex__getdefaultresid\"></a>  COleIPFrameWndEx::GetDefaultResId"},{"content":"Returns the menu resource ID that was specified when the frame window loaded the menu.","pos":[11376,11462]},{"pos":[11520,11532],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Returns the resource ID of the menu, or 0 if the frame window has no menu bar.","pos":[11536,11614]},{"pos":[11624,11631],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[11635,11789],"content":"Call this function to retrieve the resource ID that was specified when the frame window loaded the menu resource by calling <ph id=\"ph1\">`COleIPFrameWndEx::LoadFrame`</ph>.","source":"Call this function to retrieve the resource ID that was specified when the frame window loaded the menu resource by calling `COleIPFrameWndEx::LoadFrame`."},{"pos":[11799,11876],"content":"<bpt id=\"p1\">&lt;a name=\"coleipframewndex__getdockframe\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  COleIPFrameWndEx::GetDockFrame","linkify":"<a name=\"coleipframewndex__getdockframe\"></a>  COleIPFrameWndEx::GetDockFrame","source":"<a name=\"coleipframewndex__getdockframe\"></a>  COleIPFrameWndEx::GetDockFrame"},{"pos":[12031,12043],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[12053,12060],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[12070,12157],"content":"<bpt id=\"p1\">&lt;a name=\"coleipframewndex__getdockingmanager\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  COleIPFrameWndEx::GetDockingManager","linkify":"<a name=\"coleipframewndex__getdockingmanager\"></a>  COleIPFrameWndEx::GetDockingManager","source":"<a name=\"coleipframewndex__getdockingmanager\"></a>  COleIPFrameWndEx::GetDockingManager"},{"pos":[12323,12335],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[12345,12352],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[12362,12439],"content":"<bpt id=\"p1\">&lt;a name=\"coleipframewndex__getmainframe\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  COleIPFrameWndEx::GetMainFrame","linkify":"<a name=\"coleipframewndex__getmainframe\"></a>  COleIPFrameWndEx::GetMainFrame","source":"<a name=\"coleipframewndex__getmainframe\"></a>  COleIPFrameWndEx::GetMainFrame"},{"pos":[12594,12606],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[12616,12623],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[12633,12706],"content":"<bpt id=\"p1\">&lt;a name=\"coleipframewndex__getmenubar\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  COleIPFrameWndEx::GetMenuBar","linkify":"<a name=\"coleipframewndex__getmenubar\"></a>  COleIPFrameWndEx::GetMenuBar","source":"<a name=\"coleipframewndex__getmenubar\"></a>  COleIPFrameWndEx::GetMenuBar"},{"content":"Returns a pointer to the menu bar object attached to the frame window.","pos":[12710,12780]},{"pos":[12847,12859],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A pointer to the menu bar object.","pos":[12863,12896]},{"pos":[12906,12913],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[12917,13026],"content":"Use this function to retrieve a pointer to the menu bar object that belongs to the <ph id=\"ph1\">`COleIPFrameWndEx`</ph> object.","source":"Use this function to retrieve a pointer to the menu bar object that belongs to the `COleIPFrameWndEx` object."},{"pos":[13036,13103],"content":"<bpt id=\"p1\">&lt;a name=\"coleipframewndex__getpane\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  COleIPFrameWndEx::GetPane","linkify":"<a name=\"coleipframewndex__getpane\"></a>  COleIPFrameWndEx::GetPane","source":"<a name=\"coleipframewndex__getpane\"></a>  COleIPFrameWndEx::GetPane"},{"pos":[13261,13271],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"pos":[13275,13285],"content":"[in] <ph id=\"ph1\">`nID`</ph>","source":"[in] `nID`"},{"pos":[13295,13307],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[13317,13324],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[13334,13415],"content":"<bpt id=\"p1\">&lt;a name=\"coleipframewndex__gettearoffbars\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  COleIPFrameWndEx::GetTearOffBars","linkify":"<a name=\"coleipframewndex__gettearoffbars\"></a>  COleIPFrameWndEx::GetTearOffBars","source":"<a name=\"coleipframewndex__gettearoffbars\"></a>  COleIPFrameWndEx::GetTearOffBars"},{"content":"Returns a list of pane objects that are in a tear-off state.","pos":[13419,13479]},{"pos":[13546,13558],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[13562,13716],"content":"A reference to a <ph id=\"ph1\">`CObList`</ph> object that contains a collection of pointers to the <bpt id=\"p1\">[</bpt>CBasePane Class<ept id=\"p1\">](../../mfc/reference/cbasepane-class.md)</ept>-derived objects.","source":"A reference to a `CObList` object that contains a collection of pointers to the [CBasePane Class](../../mfc/reference/cbasepane-class.md)-derived objects."},{"pos":[13726,13733],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The <ph id=\"ph1\">`COleIPFrameWndEx`</ph> object maintains the collection of tear-off menus as a list of <bpt id=\"p1\">[</bpt>CBasePane Class<ept id=\"p1\">](../../mfc/reference/cbasepane-class.md)</ept>-derived objects.","pos":[13737,13897],"source":"The `COleIPFrameWndEx` object maintains the collection of tear-off menus as a list of [CBasePane Class](../../mfc/reference/cbasepane-class.md)-derived objects."},{"content":"Use this method to retrieve a reference to this list.","pos":[13898,13951]},{"pos":[13961,14068],"content":"<bpt id=\"p1\">&lt;a name=\"coleipframewndex__gettoolbarbuttontooltiptext\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  COleIPFrameWndEx::GetToolbarButtonToolTipText","linkify":"<a name=\"coleipframewndex__gettoolbarbuttontooltiptext\"></a>  COleIPFrameWndEx::GetToolbarButtonToolTipText","source":"<a name=\"coleipframewndex__gettoolbarbuttontooltiptext\"></a>  COleIPFrameWndEx::GetToolbarButtonToolTipText"},{"content":"Called by the framework before the tooltip for a button is displayed.","pos":[14072,14141]},{"pos":[14267,14277],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`pButton`</ph>","pos":[14281,14295],"source":"[in] `pButton`"},{"content":"Pointer to the button.","pos":[14299,14321]},{"content":"[in] <ph id=\"ph1\">`strTTText`</ph>","pos":[14328,14344],"source":"[in] `strTTText`"},{"content":"Pointer to the tooltip text.","pos":[14348,14376]},{"pos":[14386,14398],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The default implementation returns 0.","pos":[14402,14439]},{"pos":[14449,14456],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Override this function to customize the display of tooltips on toolbar buttons.","pos":[14460,14539]},{"pos":[14549,14632],"content":"<bpt id=\"p1\">&lt;a name=\"coleipframewndex__initusertoobars\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  COleIPFrameWndEx::InitUserToobars","linkify":"<a name=\"coleipframewndex__initusertoobars\"></a>  COleIPFrameWndEx::InitUserToobars","source":"<a name=\"coleipframewndex__initusertoobars\"></a>  COleIPFrameWndEx::InitUserToobars"},{"content":"Specifies a range of control IDs that the framework assigns to the user-defined toolbars.","pos":[14636,14725]},{"pos":[14864,14874],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`lpszRegEntry`</ph>","pos":[14878,14897],"source":"[in] `lpszRegEntry`"},{"content":"The registry entry where the library stores user toolbar settings.","pos":[14901,14967]},{"content":"[in] <ph id=\"ph1\">`uiUserToolbarFirst`</ph>","pos":[14974,14999],"source":"[in] `uiUserToolbarFirst`"},{"content":"Control ID assigned to the first user-defined toolbar.","pos":[15003,15057]},{"content":"[in] <ph id=\"ph1\">`uiUserToolbarLast`</ph>","pos":[15064,15088],"source":"[in] `uiUserToolbarLast`"},{"content":"Control ID assigned to the last user-defined toolbar.","pos":[15092,15145]},{"pos":[15155,15162],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Use this function to initialize a range of control IDs for assignment to toolbars that users define dynamically.","pos":[15166,15278]},{"content":"The parameters <ph id=\"ph1\">`uiUserToolbarFirst`</ph> and <ph id=\"ph2\">`uiUserToolbarLast`</ph> define a range of allowed toolbar control IDs.","pos":[15279,15385],"source":" The parameters `uiUserToolbarFirst` and `uiUserToolbarLast` define a range of allowed toolbar control IDs."},{"content":"To disable the creation of user-defined toolbars, set <ph id=\"ph1\">`uiUserToolbarFirst`</ph> or <ph id=\"ph2\">`uiUserToolbarLast`</ph> to -1.","pos":[15386,15490],"source":" To disable the creation of user-defined toolbars, set `uiUserToolbarFirst` or `uiUserToolbarLast` to -1."},{"pos":[15500,15573],"content":"<bpt id=\"p1\">&lt;a name=\"coleipframewndex__insertpane\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  COleIPFrameWndEx::InsertPane","linkify":"<a name=\"coleipframewndex__insertpane\"></a>  COleIPFrameWndEx::InsertPane","source":"<a name=\"coleipframewndex__insertpane\"></a>  COleIPFrameWndEx::InsertPane"},{"pos":[15799,15809],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`pControlBar`</ph>","pos":[15813,15831],"source":"[in] `pControlBar`"},{"content":"[in] <ph id=\"ph1\">`pTarget`</ph>","pos":[15835,15849],"source":" [in] `pTarget`"},{"content":"[in] <ph id=\"ph1\">`bAfter`</ph>","pos":[15853,15866],"source":" [in] `bAfter`"},{"pos":[15876,15888],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[15898,15905],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[15915,16004],"content":"<bpt id=\"p1\">&lt;a name=\"coleipframewndex__ismenubaravailable\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  COleIPFrameWndEx::IsMenuBarAvailable","linkify":"<a name=\"coleipframewndex__ismenubaravailable\"></a>  COleIPFrameWndEx::IsMenuBarAvailable","source":"<a name=\"coleipframewndex__ismenubaravailable\"></a>  COleIPFrameWndEx::IsMenuBarAvailable"},{"pos":[16008,16075],"content":"Determines whether the pointer to the menu bar object is not <ph id=\"ph1\">`NULL`</ph>","source":"Determines whether the pointer to the menu bar object is not `NULL`"},{"pos":[16136,16148],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Returns a non-zero value if the frame window has a menu bar; otherwise returns 0.","pos":[16152,16233]},{"pos":[16243,16250],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[16254,16364],"content":"Call this method to determine whether the frame window maintains a non- <ph id=\"ph1\">`NULL`</ph> pointer to its menu bar object.","source":"Call this method to determine whether the frame window maintains a non- `NULL` pointer to its menu bar object."},{"pos":[16374,16465],"content":"<bpt id=\"p1\">&lt;a name=\"coleipframewndex__ispointneardocksite\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  COleIPFrameWndEx::IsPointNearDockSite","linkify":"<a name=\"coleipframewndex__ispointneardocksite\"></a>  COleIPFrameWndEx::IsPointNearDockSite","source":"<a name=\"coleipframewndex__ispointneardocksite\"></a>  COleIPFrameWndEx::IsPointNearDockSite"},{"pos":[16700,16710],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`point`</ph>","pos":[16714,16726],"source":"[in] `point`"},{"content":"[in] <ph id=\"ph1\">`dwBarAlignment`</ph>","pos":[16730,16751],"source":" [in] `dwBarAlignment`"},{"content":"[in] <ph id=\"ph1\">`bOuterEdge`</ph>","pos":[16755,16772],"source":" [in] `bOuterEdge`"},{"pos":[16782,16794],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[16804,16811],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[16821,16892],"content":"<bpt id=\"p1\">&lt;a name=\"coleipframewndex__loadframe\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  COleIPFrameWndEx::LoadFrame","linkify":"<a name=\"coleipframewndex__loadframe\"></a>  COleIPFrameWndEx::LoadFrame","source":"<a name=\"coleipframewndex__loadframe\"></a>  COleIPFrameWndEx::LoadFrame"},{"pos":[17204,17214],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`nIDResource`</ph>","pos":[17218,17236],"source":"[in] `nIDResource`"},{"content":"[in] <ph id=\"ph1\">`dwDefaultStyle`</ph>","pos":[17240,17261],"source":" [in] `dwDefaultStyle`"},{"content":"[in] <ph id=\"ph1\">`pParentWnd`</ph>","pos":[17265,17282],"source":" [in] `pParentWnd`"},{"content":"[in] <ph id=\"ph1\">`pContext`</ph>","pos":[17286,17301],"source":" [in] `pContext`"},{"pos":[17311,17323],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[17333,17340],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[17350,17439],"content":"<bpt id=\"p1\">&lt;a name=\"coleipframewndex__onclosedockingpane\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  COleIPFrameWndEx::OnCloseDockingPane","linkify":"<a name=\"coleipframewndex__onclosedockingpane\"></a>  COleIPFrameWndEx::OnCloseDockingPane","source":"<a name=\"coleipframewndex__onclosedockingpane\"></a>  COleIPFrameWndEx::OnCloseDockingPane"},{"pos":[17616,17626],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"pos":[17630,17651],"content":"[in] <ph id=\"ph1\">`CDockablePane*`</ph>","source":"[in] `CDockablePane*`"},{"pos":[17661,17673],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[17683,17690],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[17700,17785],"content":"<bpt id=\"p1\">&lt;a name=\"coleipframewndex__oncloseminiframe\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  COleIPFrameWndEx::OnCloseMiniFrame","linkify":"<a name=\"coleipframewndex__oncloseminiframe\"></a>  COleIPFrameWndEx::OnCloseMiniFrame","source":"<a name=\"coleipframewndex__oncloseminiframe\"></a>  COleIPFrameWndEx::OnCloseMiniFrame"},{"pos":[17960,17970],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"pos":[17974,17995],"content":"[in] <ph id=\"ph1\">`CPaneFrameWnd*`</ph>","source":"[in] `CPaneFrameWnd*`"},{"pos":[18005,18017],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[18027,18034],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[18044,18129],"content":"<bpt id=\"p1\">&lt;a name=\"coleipframewndex__onclosepopupmenu\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  COleIPFrameWndEx::OnClosePopupMenu","linkify":"<a name=\"coleipframewndex__onclosepopupmenu\"></a>  COleIPFrameWndEx::OnClosePopupMenu","source":"<a name=\"coleipframewndex__onclosepopupmenu\"></a>  COleIPFrameWndEx::OnClosePopupMenu"},{"pos":[18133,18217],"content":"Called by the framework when an active pop-up menu processes a <ph id=\"ph1\">`WM_DESTROY`</ph> message.","source":"Called by the framework when an active pop-up menu processes a `WM_DESTROY` message."},{"pos":[18300,18310],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`pMenuPopup`</ph>","pos":[18314,18331],"source":"[in] `pMenuPopup`"},{"content":"A pointer to the pop-up menu object.","pos":[18335,18371]},{"pos":[18381,18388],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[18392,18507],"content":"Override this method to receive notifications from <ph id=\"ph1\">`CMFCPopupMenu`</ph> objects when they process <ph id=\"ph2\">`WM_DESTROY`</ph> messages.","source":"Override this method to receive notifications from `CMFCPopupMenu` objects when they process `WM_DESTROY` messages."},{"pos":[18517,18586],"content":"<bpt id=\"p1\">&lt;a name=\"coleipframewndex__oncmdmsg\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  COleIPFrameWndEx::OnCmdMsg","linkify":"<a name=\"coleipframewndex__oncmdmsg\"></a>  COleIPFrameWndEx::OnCmdMsg","source":"<a name=\"coleipframewndex__oncmdmsg\"></a>  COleIPFrameWndEx::OnCmdMsg"},{"pos":[18829,18839],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`nID`</ph>","pos":[18843,18853],"source":"[in] `nID`"},{"content":"[in] <ph id=\"ph1\">`nCode`</ph>","pos":[18857,18869],"source":" [in] `nCode`"},{"content":"[in] <ph id=\"ph1\">`pExtra`</ph>","pos":[18873,18886],"source":" [in] `pExtra`"},{"content":"[in] <ph id=\"ph1\">`pHandlerInfo`</ph>","pos":[18890,18909],"source":" [in] `pHandlerInfo`"},{"pos":[18919,18931],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[18941,18948],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[18958,19041],"content":"<bpt id=\"p1\">&lt;a name=\"coleipframewndex__ondrawmenuimage\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  COleIPFrameWndEx::OnDrawMenuImage","linkify":"<a name=\"coleipframewndex__ondrawmenuimage\"></a>  COleIPFrameWndEx::OnDrawMenuImage","source":"<a name=\"coleipframewndex__ondrawmenuimage\"></a>  COleIPFrameWndEx::OnDrawMenuImage"},{"content":"Called by the framework when the image that is associated with a menu item is drawn.","pos":[19045,19129]},{"pos":[19277,19287],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`pDC`</ph>","pos":[19291,19301],"source":"[in] `pDC`"},{"content":"Pointer to the device context.","pos":[19305,19335]},{"content":"[in] <ph id=\"ph1\">`pMenuButton`</ph>","pos":[19342,19360],"source":"[in] `pMenuButton`"},{"content":"Pointer to the menu button.","pos":[19364,19391]},{"content":"[in] <ph id=\"ph1\">`rectImage`</ph>","pos":[19398,19414],"source":"[in] `rectImage`"},{"content":"The image associated with the menu item.","pos":[19418,19458]},{"pos":[19468,19480],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The default implementation does nothing and returns 0.","pos":[19484,19538]},{"pos":[19548,19555],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[19559,19713],"content":"Override this method if you want to customize image drawing for the menu items that belong to the menu bar owned by the <ph id=\"ph1\">`COleIPFrameWndEx`</ph>-derived object.","source":"Override this method if you want to customize image drawing for the menu items that belong to the menu bar owned by the `COleIPFrameWndEx`-derived object."},{"pos":[19723,19804],"content":"<bpt id=\"p1\">&lt;a name=\"coleipframewndex__ondrawmenulogo\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  COleIPFrameWndEx::OnDrawMenuLogo","linkify":"<a name=\"coleipframewndex__ondrawmenulogo\"></a>  COleIPFrameWndEx::OnDrawMenuLogo","source":"<a name=\"coleipframewndex__ondrawmenulogo\"></a>  COleIPFrameWndEx::OnDrawMenuLogo"},{"pos":[19808,19936],"content":"Called by the framework when a <bpt id=\"p1\">[</bpt>CMFCPopupMenu<ept id=\"p1\">](../../mfc/reference/cmfcpopupmenu-class.md)</ept>object processes a <ph id=\"ph1\">`WM_PAINT`</ph> message.","source":"Called by the framework when a [CMFCPopupMenu](../../mfc/reference/cmfcpopupmenu-class.md)object processes a `WM_PAINT` message."},{"pos":[20062,20072],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`pDC`</ph>","pos":[20076,20086],"source":"[in] `pDC`"},{"content":"Pointer to the device context.","pos":[20090,20120]},{"content":"[in] <ph id=\"ph1\">`pMenu`</ph>","pos":[20127,20139],"source":"[in] `pMenu`"},{"content":"Pointer to the pop-up menu object.","pos":[20143,20177]},{"content":"[in] <ph id=\"ph1\">`rectLogo`</ph>","pos":[20184,20199],"source":"[in] `rectLogo`"},{"content":"Pointer to the logo to display.","pos":[20203,20234]},{"pos":[20244,20251],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Override this method to display a logo on the pop-up menu associated with the menu bar owned by the <ph id=\"ph1\">`COleIPFrameWndEx`</ph>-derived object.","pos":[20255,20389],"source":"Override this method to display a logo on the pop-up menu associated with the menu bar owned by the `COleIPFrameWndEx`-derived object."},{"content":"The default implementation does nothing.","pos":[20390,20430]},{"pos":[20440,20539],"content":"<bpt id=\"p1\">&lt;a name=\"coleipframewndex__onmenubuttontoolhittest\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  COleIPFrameWndEx::OnMenuButtonToolHitTest","linkify":"<a name=\"coleipframewndex__onmenubuttontoolhittest\"></a>  COleIPFrameWndEx::OnMenuButtonToolHitTest","source":"<a name=\"coleipframewndex__onmenubuttontoolhittest\"></a>  COleIPFrameWndEx::OnMenuButtonToolHitTest"},{"pos":[20543,20683],"content":"Called by the framework when a <bpt id=\"p1\">[</bpt>CMFCToolBarButton<ept id=\"p1\">](../../mfc/reference/cmfctoolbarbutton-class.md)</ept>object processes a <ph id=\"ph1\">`WM_NCHITTEST`</ph> message.","source":"Called by the framework when a [CMFCToolBarButton](../../mfc/reference/cmfctoolbarbutton-class.md)object processes a `WM_NCHITTEST` message."},{"pos":[20800,20810],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] pButton","pos":[20814,20826]},{"content":"Pointer to a menu button.","pos":[20830,20855]},{"content":"[out] pTI","pos":[20862,20871]},{"content":"Pointer to a <ph id=\"ph1\">`TOOLINFO`</ph> structure.","pos":[20875,20909],"source":" Pointer to a `TOOLINFO` structure."},{"pos":[20919,20931],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The default implementation does nothing and returns 0.","pos":[20935,20989]},{"content":"Your implementation should return a non-zero value if it fills the <ph id=\"ph1\">`pTI`</ph> parameter.","pos":[20990,21073],"source":" Your implementation should return a non-zero value if it fills the `pTI` parameter."},{"pos":[21083,21090],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Override this method to provide ToolTip information about a specific menu item.","pos":[21094,21173]},{"pos":[21183,21266],"content":"<bpt id=\"p1\">&lt;a name=\"coleipframewndex__onmoveminiframe\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  COleIPFrameWndEx::OnMoveMiniFrame","linkify":"<a name=\"coleipframewndex__onmoveminiframe\"></a>  COleIPFrameWndEx::OnMoveMiniFrame","source":"<a name=\"coleipframewndex__onmoveminiframe\"></a>  COleIPFrameWndEx::OnMoveMiniFrame"},{"pos":[21438,21448],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"pos":[21452,21465],"content":"[in] <ph id=\"ph1\">`pFrame`</ph>","source":"[in] `pFrame`"},{"pos":[21475,21487],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[21497,21504],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[21514,21599],"content":"<bpt id=\"p1\">&lt;a name=\"coleipframewndex__onsetpreviewmode\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  COleIPFrameWndEx::OnSetPreviewMode","linkify":"<a name=\"coleipframewndex__onsetpreviewmode\"></a>  COleIPFrameWndEx::OnSetPreviewMode","source":"<a name=\"coleipframewndex__onsetpreviewmode\"></a>  COleIPFrameWndEx::OnSetPreviewMode"},{"pos":[21812,21822],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`bPreview`</ph>","pos":[21826,21841],"source":"[in] `bPreview`"},{"content":"[in] <ph id=\"ph1\">`pState`</ph>","pos":[21845,21858],"source":" [in] `pState`"},{"pos":[21868,21875],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[21885,21976],"content":"<bpt id=\"p1\">&lt;a name=\"coleipframewndex__onshowcustomizepane\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  COleIPFrameWndEx::OnShowCustomizePane","linkify":"<a name=\"coleipframewndex__onshowcustomizepane\"></a>  COleIPFrameWndEx::OnShowCustomizePane","source":"<a name=\"coleipframewndex__onshowcustomizepane\"></a>  COleIPFrameWndEx::OnShowCustomizePane"},{"pos":[22193,22203],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`pMenuPane`</ph>","pos":[22207,22223],"source":"[in] `pMenuPane`"},{"content":"[in] <ph id=\"ph1\">`uiToolbarID`</ph>","pos":[22227,22245],"source":" [in] `uiToolbarID`"},{"pos":[22255,22267],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[22277,22284],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[22294,22369],"content":"<bpt id=\"p1\">&lt;a name=\"coleipframewndex__onshowpanes\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  COleIPFrameWndEx::OnShowPanes","linkify":"<a name=\"coleipframewndex__onshowpanes\"></a>  COleIPFrameWndEx::OnShowPanes","source":"<a name=\"coleipframewndex__onshowpanes\"></a>  COleIPFrameWndEx::OnShowPanes"},{"pos":[22535,22545],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"pos":[22549,22561],"content":"[in] <ph id=\"ph1\">`bShow`</ph>","source":"[in] `bShow`"},{"pos":[22571,22583],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[22593,22600],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[22610,22693],"content":"<bpt id=\"p1\">&lt;a name=\"coleipframewndex__onshowpopupmenu\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  COleIPFrameWndEx::OnShowPopupMenu","linkify":"<a name=\"coleipframewndex__onshowpopupmenu\"></a>  COleIPFrameWndEx::OnShowPopupMenu","source":"<a name=\"coleipframewndex__onshowpopupmenu\"></a>  COleIPFrameWndEx::OnShowPopupMenu"},{"content":"Called by the framework when a pop-up menu is displayed.","pos":[22697,22753]},{"pos":[22835,22845],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Pointer to the pop-up menu to be displayed.","pos":[22870,22913]},{"pos":[22923,22935],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The default implementation does nothing and returns a non-zero value.","pos":[22939,23008]},{"content":"Your implementation should return <ph id=\"ph1\">`FALSE`</ph> if the pop-up menu cannot be displayed.","pos":[23009,23090],"source":" Your implementation should return `FALSE` if the pop-up menu cannot be displayed."},{"pos":[23100,23107],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Override this method to customize the display of a pop-up menu.","pos":[23111,23174]},{"content":"For example, you could change the menu buttons to color menu buttons or initialize tear-off bars.","pos":[23175,23272]},{"pos":[23282,23361],"content":"<bpt id=\"p1\">&lt;a name=\"coleipframewndex__ontearoffmenu\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  COleIPFrameWndEx::OnTearOffMenu","linkify":"<a name=\"coleipframewndex__ontearoffmenu\"></a>  COleIPFrameWndEx::OnTearOffMenu","source":"<a name=\"coleipframewndex__ontearoffmenu\"></a>  COleIPFrameWndEx::OnTearOffMenu"},{"content":"Called by the framework when the user selects a menu that has a tear-off bar.","pos":[23365,23442]},{"pos":[23546,23556],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`pMenuPopup`</ph>","pos":[23560,23577],"source":"[in] `pMenuPopup`"},{"content":"A pointer to the pop-up menu that the user selected.","pos":[23581,23633]},{"content":"[in] <ph id=\"ph1\">`pBar`</ph>","pos":[23640,23651],"source":"[in] `pBar`"},{"content":"A pointer to the pane that hosts the menu.","pos":[23655,23697]},{"pos":[23707,23719],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"<ph id=\"ph1\">`TRUE`</ph> if you want the framework to activate the pop-up menu; otherwise <ph id=\"ph2\">`FALSE`</ph>.","pos":[23723,23803],"source":"`TRUE` if you want the framework to activate the pop-up menu; otherwise `FALSE`."},{"content":"The default value is <ph id=\"ph1\">`TRUE`</ph>.","pos":[23804,23832],"source":" The default value is `TRUE`."},{"pos":[23842,23849],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Override this function if you want to customize the setup of the tear-off bar.","pos":[23853,23931]},{"pos":[23941,24020],"content":"<bpt id=\"p1\">&lt;a name=\"coleipframewndex__panefrompoint\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  COleIPFrameWndEx::PaneFromPoint","linkify":"<a name=\"coleipframewndex__panefrompoint\"></a>  COleIPFrameWndEx::PaneFromPoint","source":"<a name=\"coleipframewndex__panefrompoint\"></a>  COleIPFrameWndEx::PaneFromPoint"},{"pos":[24420,24430],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`point`</ph>","pos":[24434,24446],"source":"[in] `point`"},{"content":"[in] <ph id=\"ph1\">`nSensitivity`</ph>","pos":[24450,24469],"source":" [in] `nSensitivity`"},{"content":"[in] <ph id=\"ph1\">`bExactBar`</ph>","pos":[24473,24489],"source":" [in] `bExactBar`"},{"content":"[in] <ph id=\"ph1\">`pRTCBarType`</ph>","pos":[24493,24511],"source":" [in] `pRTCBarType`"},{"content":"[in] <ph id=\"ph1\">`dwAlignment`</ph>","pos":[24515,24533],"source":" [in] `dwAlignment`"},{"pos":[24543,24555],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[24565,24572],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[24582,24673],"content":"<bpt id=\"p1\">&lt;a name=\"coleipframewndex__pretranslatemessage\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  COleIPFrameWndEx::PreTranslateMessage","linkify":"<a name=\"coleipframewndex__pretranslatemessage\"></a>  COleIPFrameWndEx::PreTranslateMessage","source":"<a name=\"coleipframewndex__pretranslatemessage\"></a>  COleIPFrameWndEx::PreTranslateMessage"},{"pos":[24846,24856],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"pos":[24860,24871],"content":"[in] <ph id=\"ph1\">`pMsg`</ph>","source":"[in] `pMsg`"},{"pos":[24881,24893],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[24903,24910],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[24920,24997],"content":"<bpt id=\"p1\">&lt;a name=\"coleipframewndex__recalclayout\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  COleIPFrameWndEx::RecalcLayout","linkify":"<a name=\"coleipframewndex__recalclayout\"></a>  COleIPFrameWndEx::RecalcLayout","source":"<a name=\"coleipframewndex__recalclayout\"></a>  COleIPFrameWndEx::RecalcLayout"},{"pos":[25173,25183],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"pos":[25187,25201],"content":"[in] <ph id=\"ph1\">`bNotify`</ph>","source":"[in] `bNotify`"},{"pos":[25211,25218],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[25228,25331],"content":"<bpt id=\"p1\">&lt;a name=\"coleipframewndex__removepanefromdockmanager\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  COleIPFrameWndEx::RemovePaneFromDockManager","linkify":"<a name=\"coleipframewndex__removepanefromdockmanager\"></a>  COleIPFrameWndEx::RemovePaneFromDockManager","source":"<a name=\"coleipframewndex__removepanefromdockmanager\"></a>  COleIPFrameWndEx::RemovePaneFromDockManager"},{"pos":[25623,25633],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`pControlBar`</ph>","pos":[25637,25655],"source":"[in] `pControlBar`"},{"content":"[in] <ph id=\"ph1\">`bDestroy`</ph>","pos":[25659,25674],"source":" [in] `bDestroy`"},{"content":"[in] <ph id=\"ph1\">`bAdjustLayout`</ph>","pos":[25678,25698],"source":" [in] `bAdjustLayout`"},{"content":"[in] <ph id=\"ph1\">`bAutoHide`</ph>","pos":[25702,25718],"source":" [in] `bAutoHide`"},{"content":"[in] <ph id=\"ph1\">`pBarReplacement`</ph>","pos":[25722,25744],"source":" [in] `pBarReplacement`"},{"pos":[25754,25761],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[25771,25848],"content":"<bpt id=\"p1\">&lt;a name=\"coleipframewndex__setdockstate\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  COleIPFrameWndEx::SetDockState","linkify":"<a name=\"coleipframewndex__setdockstate\"></a>  COleIPFrameWndEx::SetDockState","source":"<a name=\"coleipframewndex__setdockstate\"></a>  COleIPFrameWndEx::SetDockState"},{"content":"Applies the specified docking state to panes that belong to the frame window.","pos":[25852,25929]},{"pos":[25998,26008],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`state`</ph>","pos":[26012,26024],"source":"[in] `state`"},{"content":"Specifies the docking state.","pos":[26028,26056]},{"pos":[26066,26073],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[26077,26181],"content":"Use this function to specify a new docking state for panes that belong to the <ph id=\"ph1\">`COleIPFrameWndEx`</ph> object.","source":"Use this function to specify a new docking state for panes that belong to the `COleIPFrameWndEx` object."},{"pos":[26191,26276],"content":"<bpt id=\"p1\">&lt;a name=\"coleipframewndex__setuptoolbarmenu\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  COleIPFrameWndEx::SetupToolbarMenu","linkify":"<a name=\"coleipframewndex__setuptoolbarmenu\"></a>  COleIPFrameWndEx::SetupToolbarMenu","source":"<a name=\"coleipframewndex__setuptoolbarmenu\"></a>  COleIPFrameWndEx::SetupToolbarMenu"},{"content":"Modifies a toolbar object by searching for dummy items and replacing them with the specified user-defined items.","pos":[26280,26392]},{"pos":[26545,26555],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`menu`</ph>","pos":[26559,26570],"source":"[in] `menu`"},{"content":"A reference to a <bpt id=\"p1\">[</bpt>CMenu<ept id=\"p1\">](../../mfc/reference/cmenu-class.md)</ept> object to be modified.","pos":[26574,26657],"source":" A reference to a [CMenu](../../mfc/reference/cmenu-class.md) object to be modified."},{"content":"[in] <ph id=\"ph1\">`uiViewUserToolbarCmdFirst`</ph>","pos":[26664,26696],"source":"[in] `uiViewUserToolbarCmdFirst`"},{"content":"Specifies the first user-defined command.","pos":[26700,26741]},{"content":"[in] <ph id=\"ph1\">`uiViewUserToolbarCmdLast`</ph>","pos":[26748,26779],"source":"[in] `uiViewUserToolbarCmdLast`"},{"content":"Specifies the last user-defined command.","pos":[26783,26823]},{"pos":[26833,26840],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[26850,26919],"content":"<bpt id=\"p1\">&lt;a name=\"coleipframewndex__showpane\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  COleIPFrameWndEx::ShowPane","linkify":"<a name=\"coleipframewndex__showpane\"></a>  COleIPFrameWndEx::ShowPane","source":"<a name=\"coleipframewndex__showpane\"></a>  COleIPFrameWndEx::ShowPane"},{"pos":[27143,27153],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`pBar`</ph>","pos":[27157,27168],"source":"[in] `pBar`"},{"content":"[in] <ph id=\"ph1\">`bShow`</ph>","pos":[27172,27184],"source":" [in] `bShow`"},{"content":"[in] <ph id=\"ph1\">`bDelay`</ph>","pos":[27188,27201],"source":" [in] `bDelay`"},{"content":"[in] <ph id=\"ph1\">`bActivate`</ph>","pos":[27205,27221],"source":" [in] `bActivate`"},{"pos":[27231,27238],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[27248,27317],"content":"<bpt id=\"p1\">&lt;a name=\"coleipframewndex__winhelpa\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  COleIPFrameWndEx::WinHelpA","linkify":"<a name=\"coleipframewndex__winhelpa\"></a>  COleIPFrameWndEx::WinHelpA","source":"<a name=\"coleipframewndex__winhelpa\"></a>  COleIPFrameWndEx::WinHelpA"},{"content":"Called by the framework to initiate the WinHelp application or context help.","pos":[27321,27397]},{"pos":[27495,27505],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] dwData","pos":[27509,27520]},{"content":"Specifies data as required for the type of help specified by <ph id=\"ph1\">`nCmd`</ph>.","pos":[27524,27592],"source":" Specifies data as required for the type of help specified by `nCmd`."},{"content":"[in] <ph id=\"ph1\">`nCmd`</ph>","pos":[27599,27610],"source":"[in] `nCmd`"},{"content":"Specifies the type of help requested.","pos":[27614,27651]},{"content":"For a list of possible values and how they affect the <ph id=\"ph1\">`dwData`</ph> parameter, see the <bpt id=\"p1\">[</bpt>WinHelp Function<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb762267)</ept> in the Windows SDK.","pos":[27652,27832],"source":" For a list of possible values and how they affect the `dwData` parameter, see the [WinHelp Function](http://msdn.microsoft.com/library/windows/desktop/bb762267) in the Windows SDK."},{"pos":[27842,27849],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[27858,27866],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Hierarchy Chart<ept id=\"p1\">](../../mfc/hierarchy-chart.md)</ept><ph id=\"ph1\"> </ph>","pos":[27870,27918],"source":"[Hierarchy Chart](../../mfc/hierarchy-chart.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Classes<ept id=\"p1\">](../../mfc/reference/mfc-classes.md)</ept><ph id=\"ph1\"> </ph>","pos":[27921,27968],"source":" [Classes](../../mfc/reference/mfc-classes.md) "},{"content":"<bpt id=\"p1\"> [</bpt>CFrameWndEx Class<ept id=\"p1\">](../../mfc/reference/cframewndex-class.md)</ept><ph id=\"ph1\"> </ph>","pos":[27971,28034],"source":" [CFrameWndEx Class](../../mfc/reference/cframewndex-class.md) "},{"content":"<bpt id=\"p1\"> [</bpt>CMDIFrameWndEx Class<ept id=\"p1\">](../../mfc/reference/cmdiframewndex-class.md)</ept>","pos":[28037,28105],"source":" [CMDIFrameWndEx Class](../../mfc/reference/cmdiframewndex-class.md)"}],"content":"---\ntitle: \"COleIPFrameWndEx Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"COleIPFrameWndEx\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"COleIPFrameWndEx class\"\nms.assetid: ebff1560-a1eb-4854-af00-95d4a192bd55\ncaps.latest.revision: 34\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"ru-ru\"\n  - \"zh-cn\"\n  - \"zh-tw\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"tr-tr\"\n---\n# COleIPFrameWndEx Class\nThe `COleIPFrameWndEx` class implements an OLE container that supports MFC. You must derive the in-place frame window class for your application from the `COleIPFrameWndEx` class, instead of deriving it from the [COleIPFrameWnd](../../mfc/reference/coleipframewnd-class.md)class.  \n  \n## Syntax  \n  \n```  \nclass COleIPFrameWndEx : public COleIPFrameWnd  \n```  \n  \n## Members  \n  \n### Public Methods  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[COleIPFrameWndEx::AddDockSite](#coleipframewndex__adddocksite)||  \n|[COleIPFrameWndEx::AddPane](#coleipframewndex__addpane)||  \n|[COleIPFrameWndEx::AdjustDockingLayout](#coleipframewndex__adjustdockinglayout)||  \n|[COleIPFrameWndEx::DockPane](#coleipframewndex__dockpane)||  \n|[COleIPFrameWndEx::DockPaneLeftOf](#coleipframewndex__dockpaneleftof)|Docks one pane to the left of another pane.|  \n|[COleIPFrameWndEx::EnableAutoHidePanes](#coleipframewndex__enableautohidepanes)||  \n|[COleIPFrameWndEx::EnableDocking](#coleipframewndex__enabledocking)||  \n|[COleIPFrameWndEx::EnablePaneMenu](#coleipframewndex__enablepanemenu)||  \n|[COleIPFrameWndEx::GetActivePopup](#coleipframewndex__getactivepopup)|Returns a pointer to the currently displayed popup menu.|  \n|[COleIPFrameWndEx::GetContainerFrameWindow](#coleipframewndex__getcontainerframewindow)||  \n|[COleIPFrameWndEx::GetDefaultResId](#coleipframewndex__getdefaultresid)|Returns the resource ID of the frame window that you specified when the window was loaded.|  \n|[COleIPFrameWndEx::GetDockFrame](#coleipframewndex__getdockframe)||  \n|[COleIPFrameWndEx::GetDockingManager](#coleipframewndex__getdockingmanager)||  \n|[COleIPFrameWndEx::GetMainFrame](#coleipframewndex__getmainframe)||  \n|[COleIPFrameWndEx::GetMenuBar](#coleipframewndex__getmenubar)|Returns a pointer to the menu bar object attached to the frame window.|  \n|[COleIPFrameWndEx::GetPane](#coleipframewndex__getpane)||  \n|[COleIPFrameWndEx::GetTearOffBars](#coleipframewndex__gettearoffbars)|Returns a list of pane objects that are in a tear-off state.|  \n|[COleIPFrameWndEx::GetToolbarButtonToolTipText](#coleipframewndex__gettoolbarbuttontooltiptext)|Called by the framework before the tooltip for a button is displayed.|  \n|[COleIPFrameWndEx::InsertPane](#coleipframewndex__insertpane)||  \n|[COleIPFrameWndEx::IsMenuBarAvailable](#coleipframewndex__ismenubaravailable)|Determines whether the pointer to the menu bar object is not `NULL`.|  \n|[COleIPFrameWndEx::IsPointNearDockSite](#coleipframewndex__ispointneardocksite)||  \n|[COleIPFrameWndEx::LoadFrame](#coleipframewndex__loadframe)|(Overrides `COleIPFrameWnd::LoadFrame`.)|  \n|[COleIPFrameWndEx::OnCloseDockingPane](#coleipframewndex__onclosedockingpane)||  \n|[COleIPFrameWndEx::OnCloseMiniFrame](#coleipframewndex__oncloseminiframe)||  \n|[COleIPFrameWndEx::OnClosePopupMenu](#coleipframewndex__onclosepopupmenu)|Called by the framework when an active pop-up menu processes a WM_DESTROY message.|  \n|[COleIPFrameWndEx::OnCmdMsg](#coleipframewndex__oncmdmsg)|(Overrides `CFrameWnd::OnCmdMsg`.)|  \n|[COleIPFrameWndEx::OnDrawMenuImage](#coleipframewndex__ondrawmenuimage)|Called by the framework when the image associated with a menu item is drawn.|  \n|[COleIPFrameWndEx::OnDrawMenuLogo](#coleipframewndex__ondrawmenulogo)|Called by the framework when a [CMFCPopupMenu](../../mfc/reference/cmfcpopupmenu-class.md)object processes a WM_PAINT message.|  \n|[COleIPFrameWndEx::OnMenuButtonToolHitTest](#coleipframewndex__onmenubuttontoolhittest)|Called by the framework when a [CMFCToolBarButton](../../mfc/reference/cmfctoolbarbutton-class.md)object processes WM_NCHITTEST message.|  \n|[COleIPFrameWndEx::OnMoveMiniFrame](#coleipframewndex__onmoveminiframe)||  \n|[COleIPFrameWndEx::OnSetPreviewMode](#coleipframewndex__onsetpreviewmode)|Call this member function to set the application's main frame window into and out of print-preview mode. (Overrides [CFrameWnd::OnSetPreviewMode](../../mfc/reference/cframewnd-class.md#cframewnd__onsetpreviewmode).)|  \n|[COleIPFrameWndEx::OnShowCustomizePane](#coleipframewndex__onshowcustomizepane)||  \n|[COleIPFrameWndEx::OnShowPanes](#coleipframewndex__onshowpanes)||  \n|[COleIPFrameWndEx::OnShowPopupMenu](#coleipframewndex__onshowpopupmenu)|Called by the framework when a pop-up menu is activated.|  \n|[COleIPFrameWndEx::OnTearOffMenu](#coleipframewndex__ontearoffmenu)|Called by the framework when a menu that has a tear-off bar is activated.|  \n|[COleIPFrameWndEx::PaneFromPoint](#coleipframewndex__panefrompoint)||  \n|[COleIPFrameWndEx::PreTranslateMessage](#coleipframewndex__pretranslatemessage)|(Overrides `COleIPFrameWnd::PreTranslateMessage`.)|  \n|[COleIPFrameWndEx::RecalcLayout](#coleipframewndex__recalclayout)|(Overrides `COleIPFrameWnd::RecalcLayout`.)|  \n|[COleIPFrameWndEx::RemovePaneFromDockManager](#coleipframewndex__removepanefromdockmanager)||  \n|[COleIPFrameWndEx::SetDockState](#coleipframewndex__setdockstate)|Applies the specified docking state to the panes that belong to the frame window.|  \n|[COleIPFrameWndEx::SetupToolbarMenu](#coleipframewndex__setuptoolbarmenu)|Modifies a toolbar object by searching for dummy items and replacing them with the specified user-defined items.|  \n|[COleIPFrameWndEx::ShowPane](#coleipframewndex__showpane)||  \n|[COleIPFrameWndEx::WinHelpA](#coleipframewndex__winhelpa)|Called by the framework to initiate the WinHelp application or context help.|  \n  \n### Protected Methods  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[COleIPFrameWndEx::InitUserToobars](#coleipframewndex__initusertoobars)|Tells the framework to initialize a range of control IDs that are assigned to user-defined toolbars.|  \n  \n## Example  \n The following example demonstrates how to subclass an instance of the `COleIPFrameWndEx` class and over ride its methods. The example shows how to over ride the `OnDestory` method, the `RepositionFrame` method, the `RecalcLayout` method, and the `CalcWindowRect` method. This code snippet is part of the [Word Pad sample](../../visual-cpp-samples.md).  \n  \n [!code-cpp[NVC_MFC_WordPad#1](../../mfc/reference/codesnippet/cpp/coleipframewndex-class_1.cpp)]  \n  \n## Inheritance Hierarchy  \n [CObject](../../mfc/reference/cobject-class.md)  \n  \n [CCmdTarget](../../mfc/reference/ccmdtarget-class.md)  \n  \n [CWnd](../../mfc/reference/cwnd-class.md)  \n  \n [CFrameWnd](../../mfc/reference/cframewnd-class.md)  \n  \n [COleIPFrameWnd](../../mfc/reference/coleipframewnd-class.md)  \n  \n [COleIPFrameWndEx](../../mfc/reference/coleipframewndex-class.md)  \n  \n## Requirements  \n **Header:** afxoleipframewndex.h  \n  \n##  <a name=\"coleipframewndex__adddocksite\"></a>  COleIPFrameWndEx::AddDockSite  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvoid AddDockSite();\n```  \n  \n### Remarks  \n  \n##  <a name=\"coleipframewndex__addpane\"></a>  COleIPFrameWndEx::AddPane  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nBOOL AddPane(\n    CBasePane* pControlBar,  \n    BOOL bTail = TRUE);\n```  \n  \n### Parameters  \n [in] `pControlBar`  \n [in] `bTail`  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"coleipframewndex__adjustdockinglayout\"></a>  COleIPFrameWndEx::AdjustDockingLayout  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvirtual void AdjustDockingLayout(HDWP hdwp = NULL);\n```  \n  \n### Parameters  \n [in] `hdwp`  \n  \n### Remarks  \n  \n##  <a name=\"coleipframewndex__dockpane\"></a>  COleIPFrameWndEx::DockPane  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvoid DockPane(\n    CBasePane* pBar,  \n    UINT nDockBarID = 0,  \n    LPCRECT lpRect = NULL);\n```  \n  \n### Parameters  \n [in] `pBar`  \n [in] `nDockBarID`  \n [in] `lpRect`  \n  \n### Remarks  \n  \n##  <a name=\"coleipframewndex__dockpaneleftof\"></a>  COleIPFrameWndEx::DockPaneLeftOf  \n Docks one pane to the left of another pane.  \n  \n```  \nBOOL DockPaneLeftOf(\n    CPane* pBar,  \n    CPane* pLeftOf);\n```  \n  \n### Parameters  \n [in] `pBar`  \n A pointer to the pane to dock.  \n  \n [in] `pLeftOf`  \n A pointer to the pane that serves as origin.  \n  \n### Return Value  \n Returns `TRUE` if the operation is successful. Otherwise returns `FALSE`.  \n  \n### Remarks  \n Call this method to dock several pane objects in a predefined order. This method docks the pane specified by `pBar` to the left of the pane specified by `pLeftOf`.  \n  \n##  <a name=\"coleipframewndex__enableautohidepanes\"></a>  COleIPFrameWndEx::EnableAutoHidePanes  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nBOOL EnableAutoHidePanes(DWORD dwDockStyle);\n```  \n  \n### Parameters  \n [in] `dwDockStyle`  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"coleipframewndex__enabledocking\"></a>  COleIPFrameWndEx::EnableDocking  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nBOOL EnableDocking(DWORD dwDockStyle);\n```  \n  \n### Parameters  \n [in] `dwDockStyle`  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"coleipframewndex__enablepanemenu\"></a>  COleIPFrameWndEx::EnablePaneMenu  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvoid EnablePaneMenu(\n    BOOL bEnable,  \n    UINT uiCustomizeCmd,  \n    const CString& strCustomizeLabel,  \n    UINT uiViewToolbarsMenuEntryID,  \n    BOOL bContextMenuShowsToolbarsOnly = FALSE,  \n    BOOL bViewMenuShowsToolbarsOnly = FALSE);\n```  \n  \n### Parameters  \n [in] `bEnable`  \n [in] `uiCustomizeCmd`  \n [in] `strCustomizeLabel`  \n [in] `uiViewToolbarsMenuEntryID`  \n [in] `bContextMenuShowsToolbarsOnly`  \n [in] `bViewMenuShowsToolbarsOnly`  \n  \n### Remarks  \n  \n##  <a name=\"coleipframewndex__getactivepopup\"></a>  COleIPFrameWndEx::GetActivePopup  \n Returns a pointer to the currently displayed pop-up menu.  \n  \n```  \nCMFCPopupMenu* GetActivePopup() const;\n\n \n```  \n  \n### Return Value  \n A pointer to the active pop-up menu; otherwise `NULL`.  \n  \n### Remarks  \n Use this method to obtain a pointer to the [CMFCPopupMenu Class](../../mfc/reference/cmfcpopupmenu-class.md) object that is currently displayed.  \n  \n##  <a name=\"coleipframewndex__getcontainerframewindow\"></a>  COleIPFrameWndEx::GetContainerFrameWindow  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nCOleCntrFrameWndEx* GetContainerFrameWindow();\n```  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"coleipframewndex__getdefaultresid\"></a>  COleIPFrameWndEx::GetDefaultResId  \n Returns the menu resource ID that was specified when the frame window loaded the menu.  \n  \n```  \nUINT GetDefaultResId() const;\n\n \n```  \n  \n### Return Value  \n Returns the resource ID of the menu, or 0 if the frame window has no menu bar.  \n  \n### Remarks  \n Call this function to retrieve the resource ID that was specified when the frame window loaded the menu resource by calling `COleIPFrameWndEx::LoadFrame`.  \n  \n##  <a name=\"coleipframewndex__getdockframe\"></a>  COleIPFrameWndEx::GetDockFrame  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nCFrameWnd* GetDockFrame();\n```  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"coleipframewndex__getdockingmanager\"></a>  COleIPFrameWndEx::GetDockingManager  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nCDockingManager* GetDockingManager();\n```  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"coleipframewndex__getmainframe\"></a>  COleIPFrameWndEx::GetMainFrame  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nCFrameWnd* GetMainFrame();\n```  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"coleipframewndex__getmenubar\"></a>  COleIPFrameWndEx::GetMenuBar  \n Returns a pointer to the menu bar object attached to the frame window.  \n  \n```  \nconst CMFCMenuBar* GetMenuBar() const;\n\n \n```  \n  \n### Return Value  \n A pointer to the menu bar object.  \n  \n### Remarks  \n Use this function to retrieve a pointer to the menu bar object that belongs to the `COleIPFrameWndEx` object.  \n  \n##  <a name=\"coleipframewndex__getpane\"></a>  COleIPFrameWndEx::GetPane  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nCBasePane* GetPane(UINT nID);\n```  \n  \n### Parameters  \n [in] `nID`  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"coleipframewndex__gettearoffbars\"></a>  COleIPFrameWndEx::GetTearOffBars  \n Returns a list of pane objects that are in a tear-off state.  \n  \n```  \nconst CObList& GetTearOffBars() const;\n\n \n```  \n  \n### Return Value  \n A reference to a `CObList` object that contains a collection of pointers to the [CBasePane Class](../../mfc/reference/cbasepane-class.md)-derived objects.  \n  \n### Remarks  \n The `COleIPFrameWndEx` object maintains the collection of tear-off menus as a list of [CBasePane Class](../../mfc/reference/cbasepane-class.md)-derived objects. Use this method to retrieve a reference to this list.  \n  \n##  <a name=\"coleipframewndex__gettoolbarbuttontooltiptext\"></a>  COleIPFrameWndEx::GetToolbarButtonToolTipText  \n Called by the framework before the tooltip for a button is displayed.  \n  \n```  \nvirtual BOOL GetToolbarButtonToolTipText(\n    CMFCToolBarButton* pButton,  \n    CString& strTTText);\n```  \n  \n### Parameters  \n [in] `pButton`  \n Pointer to the button.  \n  \n [in] `strTTText`  \n Pointer to the tooltip text.  \n  \n### Return Value  \n The default implementation returns 0.  \n  \n### Remarks  \n Override this function to customize the display of tooltips on toolbar buttons.  \n  \n##  <a name=\"coleipframewndex__initusertoobars\"></a>  COleIPFrameWndEx::InitUserToobars  \n Specifies a range of control IDs that the framework assigns to the user-defined toolbars.  \n  \n```  \nvoid InitUserToolbars(\n    LPCTSTR lpszRegEntry,   \n    UINT uiUserToolbarFirst,   \n    UINT uiUserToolbarLast)  \n```  \n  \n### Parameters  \n [in] `lpszRegEntry`  \n The registry entry where the library stores user toolbar settings.  \n  \n [in] `uiUserToolbarFirst`  \n Control ID assigned to the first user-defined toolbar.  \n  \n [in] `uiUserToolbarLast`  \n Control ID assigned to the last user-defined toolbar.  \n  \n### Remarks  \n Use this function to initialize a range of control IDs for assignment to toolbars that users define dynamically. The parameters `uiUserToolbarFirst` and `uiUserToolbarLast` define a range of allowed toolbar control IDs. To disable the creation of user-defined toolbars, set `uiUserToolbarFirst` or `uiUserToolbarLast` to -1.  \n  \n##  <a name=\"coleipframewndex__insertpane\"></a>  COleIPFrameWndEx::InsertPane  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nBOOL InsertPane(\n    CBasePane* pControlBar,  \n    CBasePane* pTarget,  \n    BOOL bAfter = TRUE);\n```  \n  \n### Parameters  \n [in] `pControlBar`  \n [in] `pTarget`  \n [in] `bAfter`  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"coleipframewndex__ismenubaravailable\"></a>  COleIPFrameWndEx::IsMenuBarAvailable  \n Determines whether the pointer to the menu bar object is not `NULL`  \n  \n```  \nBOOL IsMenuBarAvailable() const;\n\n \n```  \n  \n### Return Value  \n Returns a non-zero value if the frame window has a menu bar; otherwise returns 0.  \n  \n### Remarks  \n Call this method to determine whether the frame window maintains a non- `NULL` pointer to its menu bar object.  \n  \n##  <a name=\"coleipframewndex__ispointneardocksite\"></a>  COleIPFrameWndEx::IsPointNearDockSite  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nBOOL IsPointNearDockSite(\n    CPoint point,  \n    DWORD& dwBarAlignment,  \n    BOOL& bOuterEdge) const;\n\n \n```  \n  \n### Parameters  \n [in] `point`  \n [in] `dwBarAlignment`  \n [in] `bOuterEdge`  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"coleipframewndex__loadframe\"></a>  COleIPFrameWndEx::LoadFrame  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvirtual BOOL LoadFrame(\n    UINT nIDResource,  \n    DWORD dwDefaultStyle = WS_OVERLAPPEDWINDOW | FWS_ADDTOTITLE,  \n    CWnd* pParentWnd = NULL,  \n    CCreateContext* pContext = NULL);\n```  \n  \n### Parameters  \n [in] `nIDResource`  \n [in] `dwDefaultStyle`  \n [in] `pParentWnd`  \n [in] `pContext`  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"coleipframewndex__onclosedockingpane\"></a>  COleIPFrameWndEx::OnCloseDockingPane  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvirtual BOOL OnCloseDockingPane(CDockablePane*);\n```  \n  \n### Parameters  \n [in] `CDockablePane*`  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"coleipframewndex__oncloseminiframe\"></a>  COleIPFrameWndEx::OnCloseMiniFrame  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvirtual BOOL OnCloseMiniFrame(CPaneFrameWnd*);\n```  \n  \n### Parameters  \n [in] `CPaneFrameWnd*`  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"coleipframewndex__onclosepopupmenu\"></a>  COleIPFrameWndEx::OnClosePopupMenu  \n Called by the framework when an active pop-up menu processes a `WM_DESTROY` message.  \n  \n```  \nvirtual void OnClosePopupMenu(CMFCPopupMenu* pMenuPopup);\n```  \n  \n### Parameters  \n [in] `pMenuPopup`  \n A pointer to the pop-up menu object.  \n  \n### Remarks  \n Override this method to receive notifications from `CMFCPopupMenu` objects when they process `WM_DESTROY` messages.  \n  \n##  <a name=\"coleipframewndex__oncmdmsg\"></a>  COleIPFrameWndEx::OnCmdMsg  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvirtual BOOL OnCmdMsg(\n    UINT nID,  \n    int nCode,  \n    void* pExtra,  \n    AFX_CMDHANDLERINFO* pHandlerInfo);\n```  \n  \n### Parameters  \n [in] `nID`  \n [in] `nCode`  \n [in] `pExtra`  \n [in] `pHandlerInfo`  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"coleipframewndex__ondrawmenuimage\"></a>  COleIPFrameWndEx::OnDrawMenuImage  \n Called by the framework when the image that is associated with a menu item is drawn.  \n  \n```  \nvirtual BOOL OnDrawMenuImage(\n    CDC* pDC,  \n    const CMFCToolBarMenuButton* pMenuButton,  \n    const CRect& rectImage);\n```  \n  \n### Parameters  \n [in] `pDC`  \n Pointer to the device context.  \n  \n [in] `pMenuButton`  \n Pointer to the menu button.  \n  \n [in] `rectImage`  \n The image associated with the menu item.  \n  \n### Return Value  \n The default implementation does nothing and returns 0.  \n  \n### Remarks  \n Override this method if you want to customize image drawing for the menu items that belong to the menu bar owned by the `COleIPFrameWndEx`-derived object.  \n  \n##  <a name=\"coleipframewndex__ondrawmenulogo\"></a>  COleIPFrameWndEx::OnDrawMenuLogo  \n Called by the framework when a [CMFCPopupMenu](../../mfc/reference/cmfcpopupmenu-class.md)object processes a `WM_PAINT` message.  \n  \n```  \nvirtual void OnDrawMenuLogo(\n    CDC* pDC,  \n    CMFCPopupMenu* pMenu,  \n    const CRect& rectLogo);\n```  \n  \n### Parameters  \n [in] `pDC`  \n Pointer to the device context.  \n  \n [in] `pMenu`  \n Pointer to the pop-up menu object.  \n  \n [in] `rectLogo`  \n Pointer to the logo to display.  \n  \n### Remarks  \n Override this method to display a logo on the pop-up menu associated with the menu bar owned by the `COleIPFrameWndEx`-derived object. The default implementation does nothing.  \n  \n##  <a name=\"coleipframewndex__onmenubuttontoolhittest\"></a>  COleIPFrameWndEx::OnMenuButtonToolHitTest  \n Called by the framework when a [CMFCToolBarButton](../../mfc/reference/cmfctoolbarbutton-class.md)object processes a `WM_NCHITTEST` message.  \n  \n```  \nvirtual BOOL OnMenuButtonToolHitTest(\n    CMFCToolBarButton* pButton,  \n    TOOLINFO* pTI);\n```  \n  \n### Parameters  \n [in] pButton  \n Pointer to a menu button.  \n  \n [out] pTI  \n Pointer to a `TOOLINFO` structure.  \n  \n### Return Value  \n The default implementation does nothing and returns 0. Your implementation should return a non-zero value if it fills the `pTI` parameter.  \n  \n### Remarks  \n Override this method to provide ToolTip information about a specific menu item.  \n  \n##  <a name=\"coleipframewndex__onmoveminiframe\"></a>  COleIPFrameWndEx::OnMoveMiniFrame  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvirtual BOOL OnMoveMiniFrame(CWnd* pFrame);\n```  \n  \n### Parameters  \n [in] `pFrame`  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"coleipframewndex__onsetpreviewmode\"></a>  COleIPFrameWndEx::OnSetPreviewMode  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvirtual void OnSetPreviewMode(\n    BOOL bPreview,  \n    CPrintPreviewState* pState);\n```  \n  \n### Parameters  \n [in] `bPreview`  \n [in] `pState`  \n  \n### Remarks  \n  \n##  <a name=\"coleipframewndex__onshowcustomizepane\"></a>  COleIPFrameWndEx::OnShowCustomizePane  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvirtual BOOL OnShowCustomizePane(\n    CMFCPopupMenu* pMenuPane,  \n    UINT uiToolbarID);\n```  \n  \n### Parameters  \n [in] `pMenuPane`  \n [in] `uiToolbarID`  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"coleipframewndex__onshowpanes\"></a>  COleIPFrameWndEx::OnShowPanes  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvirtual BOOL OnShowPanes(BOOL bShow);\n```  \n  \n### Parameters  \n [in] `bShow`  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"coleipframewndex__onshowpopupmenu\"></a>  COleIPFrameWndEx::OnShowPopupMenu  \n Called by the framework when a pop-up menu is displayed.  \n  \n```  \nvirtual BOOL OnShowPopupMenu(CMFCPopupMenu* pMenuPopup);\n```  \n  \n### Parameters  \n `[in] pMenuPopup`  \n Pointer to the pop-up menu to be displayed.  \n  \n### Return Value  \n The default implementation does nothing and returns a non-zero value. Your implementation should return `FALSE` if the pop-up menu cannot be displayed.  \n  \n### Remarks  \n Override this method to customize the display of a pop-up menu. For example, you could change the menu buttons to color menu buttons or initialize tear-off bars.  \n  \n##  <a name=\"coleipframewndex__ontearoffmenu\"></a>  COleIPFrameWndEx::OnTearOffMenu  \n Called by the framework when the user selects a menu that has a tear-off bar.  \n  \n```  \nvirtual BOOL OnTearOffMenu(\n    CMFCPopupMenu* pMenuPopup,  \n    CPane* pBar);\n```  \n  \n### Parameters  \n [in] `pMenuPopup`  \n A pointer to the pop-up menu that the user selected.  \n  \n [in] `pBar`  \n A pointer to the pane that hosts the menu.  \n  \n### Return Value  \n `TRUE` if you want the framework to activate the pop-up menu; otherwise `FALSE`. The default value is `TRUE`.  \n  \n### Remarks  \n Override this function if you want to customize the setup of the tear-off bar.  \n  \n##  <a name=\"coleipframewndex__panefrompoint\"></a>  COleIPFrameWndEx::PaneFromPoint  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nCBasePane* PaneFromPoint(\n    CPoint point,  \n    int nSensitivity,  \n    bool bExactBar,  \n    CRuntimeClass* pRTCBarType) const;\n\n \nCBasePane* PaneFromPoint(\n    CPoint point,  \n    int nSensitivity,  \n    DWORD& dwAlignment,  \n    CRuntimeClass* pRTCBarType) const;\n\n \n```  \n  \n### Parameters  \n [in] `point`  \n [in] `nSensitivity`  \n [in] `bExactBar`  \n [in] `pRTCBarType`  \n [in] `dwAlignment`  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"coleipframewndex__pretranslatemessage\"></a>  COleIPFrameWndEx::PreTranslateMessage  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvirtual BOOL PreTranslateMessage(MSG* pMsg);\n```  \n  \n### Parameters  \n [in] `pMsg`  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"coleipframewndex__recalclayout\"></a>  COleIPFrameWndEx::RecalcLayout  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvirtual void RecalcLayout(BOOL bNotify = TRUE);\n```  \n  \n### Parameters  \n [in] `bNotify`  \n  \n### Remarks  \n  \n##  <a name=\"coleipframewndex__removepanefromdockmanager\"></a>  COleIPFrameWndEx::RemovePaneFromDockManager  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvoid RemovePaneFromDockManager(\n    CBasePane* pControlBar,  \n    BOOL bDestroy,  \n    BOOL bAdjustLayout,  \n    BOOL bAutoHide,  \n    CBasePane* pBarReplacement);\n```  \n  \n### Parameters  \n [in] `pControlBar`  \n [in] `bDestroy`  \n [in] `bAdjustLayout`  \n [in] `bAutoHide`  \n [in] `pBarReplacement`  \n  \n### Remarks  \n  \n##  <a name=\"coleipframewndex__setdockstate\"></a>  COleIPFrameWndEx::SetDockState  \n Applies the specified docking state to panes that belong to the frame window.  \n  \n```  \nvoid SetDockState(const CDockState& state);\n```  \n  \n### Parameters  \n [in] `state`  \n Specifies the docking state.  \n  \n### Remarks  \n Use this function to specify a new docking state for panes that belong to the `COleIPFrameWndEx` object.  \n  \n##  <a name=\"coleipframewndex__setuptoolbarmenu\"></a>  COleIPFrameWndEx::SetupToolbarMenu  \n Modifies a toolbar object by searching for dummy items and replacing them with the specified user-defined items.  \n  \n```  \nvoid SetupToolbarMenu(\n    CMenu& menu,  \n    const UINT uiViewUserToolbarCmdFirst,  \n    const UINT uiViewUserToolbarCmdLast);\n```  \n  \n### Parameters  \n [in] `menu`  \n A reference to a [CMenu](../../mfc/reference/cmenu-class.md) object to be modified.  \n  \n [in] `uiViewUserToolbarCmdFirst`  \n Specifies the first user-defined command.  \n  \n [in] `uiViewUserToolbarCmdLast`  \n Specifies the last user-defined command.  \n  \n### Remarks  \n  \n##  <a name=\"coleipframewndex__showpane\"></a>  COleIPFrameWndEx::ShowPane  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvoid ShowPane(\n    CBasePane* pBar,  \n    BOOL bShow,  \n    BOOL bDelay,  \n    BOOL bActivate);\n```  \n  \n### Parameters  \n [in] `pBar`  \n [in] `bShow`  \n [in] `bDelay`  \n [in] `bActivate`  \n  \n### Remarks  \n  \n##  <a name=\"coleipframewndex__winhelpa\"></a>  COleIPFrameWndEx::WinHelpA  \n Called by the framework to initiate the WinHelp application or context help.  \n  \n```  \nvirtual void WinHelp(\n    DWORD dwData,  \n    UINT nCmd = HELP_CONTEXT);\n```  \n  \n### Parameters  \n [in] dwData  \n Specifies data as required for the type of help specified by `nCmd`.  \n  \n [in] `nCmd`  \n Specifies the type of help requested. For a list of possible values and how they affect the `dwData` parameter, see the [WinHelp Function](http://msdn.microsoft.com/library/windows/desktop/bb762267) in the Windows SDK.  \n  \n### Remarks  \n  \n## See Also  \n [Hierarchy Chart](../../mfc/hierarchy-chart.md)   \n [Classes](../../mfc/reference/mfc-classes.md)   \n [CFrameWndEx Class](../../mfc/reference/cframewndex-class.md)   \n [CMDIFrameWndEx Class](../../mfc/reference/cmdiframewndex-class.md)\n"}