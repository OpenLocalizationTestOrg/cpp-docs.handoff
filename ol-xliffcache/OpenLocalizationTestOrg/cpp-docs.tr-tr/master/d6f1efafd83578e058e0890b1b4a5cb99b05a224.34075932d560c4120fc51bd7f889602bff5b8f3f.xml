{"nodes":[{"pos":[12,48],"content":"CComEnumOnSTL Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"CComEnumOnSTL Class | Microsoft Docs","pos":[0,36]}]},{"pos":[613,632],"content":"CComEnumOnSTL Class","linkify":"CComEnumOnSTL Class","nodes":[{"content":"CComEnumOnSTL Class","pos":[0,19]}]},{"content":"This class defines a COM enumerator object based on an STL collection.","pos":[633,703]},{"pos":[712,718],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[1014,1024],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"A COM enumerator ( <bpt id=\"p1\">[</bpt>IEnumXXXX<ept id=\"p1\">](https://msdn.microsoft.com/library/ms680089.aspx)</ept>) interface.","pos":[1038,1130],"source":" A COM enumerator ( [IEnumXXXX](https://msdn.microsoft.com/library/ms680089.aspx)) interface."},{"content":"A pointer to the interface ID of the enumerator interface.","pos":[1147,1205]},{"content":"The type of item exposed by the enumerator interface.","pos":[1219,1272]},{"content":"A <bpt id=\"p1\">[</bpt>copy policy<ept id=\"p1\">](../../atl/atl-copy-policy-classes.md)</ept> class.","pos":[1289,1349],"source":" A [copy policy](../../atl/atl-copy-policy-classes.md) class."},{"content":"An STL container class.","pos":[1370,1393]},{"pos":[1402,1409],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"<ph id=\"ph1\">`CComEnumOnSTL`</ph> defines a COM enumerator object based on an STL collection.","pos":[1413,1488],"source":"`CComEnumOnSTL` defines a COM enumerator object based on an STL collection."},{"content":"This class can be used on its own or in conjunction with <bpt id=\"p1\">[</bpt>ICollectionOnSTLImpl<ept id=\"p1\">](../../atl/reference/icollectiononstlimpl-class.md)</ept>.","pos":[1489,1620],"source":" This class can be used on its own or in conjunction with [ICollectionOnSTLImpl](../../atl/reference/icollectiononstlimpl-class.md)."},{"content":"Typical steps for using this class are outlined below.","pos":[1621,1675]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>ATL Collections and Enumerators<ept id=\"p1\">](../../atl/atl-collections-and-enumerators.md)</ept>.","pos":[1676,1782],"source":" For more information, see [ATL Collections and Enumerators](../../atl/atl-collections-and-enumerators.md)."},{"pos":[1791,1835],"content":"To use this class with ICollectionOnSTLImpl:","linkify":"To use this class with ICollectionOnSTLImpl:","nodes":[{"content":"To use this class with ICollectionOnSTLImpl:","pos":[0,44]}]},{"pos":[1843,1884],"content":"<ph id=\"ph1\">`typedef`</ph> a specialization of this class.","source":"`typedef` a specialization of this class."},{"pos":[1894,1989],"content":"Use the <ph id=\"ph1\">`typedef`</ph> as the final template argument in a specialization of <ph id=\"ph2\">`ICollectionOnSTLImpl`</ph>.","source":"Use the `typedef` as the final template argument in a specialization of `ICollectionOnSTLImpl`."},{"pos":[1996,2095],"content":"See <bpt id=\"p1\">[</bpt>ATL Collections and Enumerators<ept id=\"p1\">](../../atl/atl-collections-and-enumerators.md)</ept> for an example.","source":"See [ATL Collections and Enumerators](../../atl/atl-collections-and-enumerators.md) for an example."},{"pos":[2104,2160],"content":"To use this class independently of ICollectionOnSTLImpl:","linkify":"To use this class independently of ICollectionOnSTLImpl:","nodes":[{"content":"To use this class independently of ICollectionOnSTLImpl:","pos":[0,56]}]},{"pos":[2168,2209],"content":"<ph id=\"ph1\">`typedef`</ph> a specialization of this class.","source":"`typedef` a specialization of this class."},{"pos":[2219,2298],"content":"Use the <ph id=\"ph1\">`typedef`</ph> as the template argument in a specialization of <ph id=\"ph2\">`CComObject`</ph>.","source":"Use the `typedef` as the template argument in a specialization of `CComObject`."},{"pos":[2308,2362],"content":"Create an instance of the <ph id=\"ph1\">`CComObject`</ph> specialization.","source":"Create an instance of the `CComObject` specialization."},{"pos":[2372,2505],"content":"Initialize the enumerator object by calling <bpt id=\"p1\">[</bpt>IEnumOnSTLImpl::Init<ept id=\"p1\">](../../atl/reference/ienumonstlimpl-class.md#ienumonstlimpl__init)</ept>.","source":"Initialize the enumerator object by calling [IEnumOnSTLImpl::Init](../../atl/reference/ienumonstlimpl-class.md#ienumonstlimpl__init)."},{"content":"Return the enumerator interface to the client.","pos":[2515,2561]},{"pos":[2570,2591],"content":"Inheritance Hierarchy","linkify":"Inheritance Hierarchy","nodes":[{"content":"Inheritance Hierarchy","pos":[0,21]}]},{"pos":[2635,2700],"content":"<bpt id=\"p1\">[</bpt>CComObjectRootEx<ept id=\"p1\">](../../atl/reference/ccomobjectrootex-class.md)</ept>","source":"[CComObjectRootEx](../../atl/reference/ccomobjectrootex-class.md)"},{"pos":[2707,2768],"content":"<bpt id=\"p1\">[</bpt>IEnumOnSTLImpl<ept id=\"p1\">](../../atl/reference/ienumonstlimpl-class.md)</ept>","source":"[IEnumOnSTLImpl](../../atl/reference/ienumonstlimpl-class.md)"},{"pos":[2799,2811],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[2815,2835],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> atlcom.h","source":"**Header:** atlcom.h"},{"pos":[2844,2851],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The code shown below provides a generic function to handle the creation and initialization of an enumerator object:","pos":[2855,2970]},{"pos":[2977,3055],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_ATL_COM#34<ept id=\"p2\">](../../atl/codesnippet/cpp/ccomenumonstl-class_1.h)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_ATL_COM#34](../../atl/codesnippet/cpp/ccomenumonstl-class_1.h)]"},{"pos":[3062,3175],"content":"This template function can be used to implement the <ph id=\"ph1\">`_NewEnum`</ph> property of a collection interface as shown below:","source":"This template function can be used to implement the `_NewEnum` property of a collection interface as shown below:"},{"pos":[3182,3260],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_ATL_COM#35<ept id=\"p2\">](../../atl/codesnippet/cpp/ccomenumonstl-class_2.h)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_ATL_COM#35](../../atl/codesnippet/cpp/ccomenumonstl-class_2.h)]"},{"content":"This code creates a <ph id=\"ph1\">`typedef`</ph> for <ph id=\"ph2\">`CComEnumOnSTL`</ph> that exposes a vector of <ph id=\"ph3\">`CComVariant`</ph>s by means of the <bpt id=\"p1\">**</bpt>IEnumVariant<ept id=\"p1\">**</ept> interface.","pos":[3267,3400],"source":"This code creates a `typedef` for `CComEnumOnSTL` that exposes a vector of `CComVariant`s by means of the **IEnumVariant** interface."},{"content":"The <bpt id=\"p1\">**</bpt>CVariantCollection<ept id=\"p1\">**</ept> class simply specializes <bpt id=\"p2\">**</bpt>CreateSTLEnumerator<ept id=\"p2\">**</ept> to work with enumerator objects of this type.","pos":[3401,3522],"source":" The **CVariantCollection** class simply specializes **CreateSTLEnumerator** to work with enumerator objects of this type."},{"pos":[3531,3539],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>IEnumOnSTLImpl<ept id=\"p1\">](../../atl/reference/ienumonstlimpl-class.md)</ept><ph id=\"ph1\"> </ph>","pos":[3543,3605],"source":"[IEnumOnSTLImpl](../../atl/reference/ienumonstlimpl-class.md) "},{"content":"<bpt id=\"p1\"> [</bpt>ATLCollections Sample: Demonstrates ICollectionOnSTLImpl, CComEnumOnSTL, and Custom Copy Policy Classes<ept id=\"p1\">](../../visual-cpp-samples.md)</ept><ph id=\"ph1\"> </ph>","pos":[3608,3744],"source":" [ATLCollections Sample: Demonstrates ICollectionOnSTLImpl, CComEnumOnSTL, and Custom Copy Policy Classes](../../visual-cpp-samples.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Class Overview<ept id=\"p1\">](../../atl/atl-class-overview.md)</ept><ph id=\"ph1\"> </ph>","pos":[3747,3798],"source":" [Class Overview](../../atl/atl-class-overview.md) "},{"content":"<bpt id=\"p1\"> [</bpt>CComObjectRootEx Class<ept id=\"p1\">](../../atl/reference/ccomobjectrootex-class.md)</ept><ph id=\"ph1\"> </ph>","pos":[3801,3874],"source":" [CComObjectRootEx Class](../../atl/reference/ccomobjectrootex-class.md) "},{"content":"<bpt id=\"p1\"> [</bpt>CComObjectThreadModel<ept id=\"p1\">](atl-typedefs.md#ccomobjectthreadmodel)</ept><ph id=\"ph1\"> </ph>","pos":[3877,3941],"source":" [CComObjectThreadModel](atl-typedefs.md#ccomobjectthreadmodel) "},{"content":"<bpt id=\"p1\"> [</bpt>IEnumOnSTLImpl Class<ept id=\"p1\">](../../atl/reference/ienumonstlimpl-class.md)</ept>","pos":[3944,4012],"source":" [IEnumOnSTLImpl Class](../../atl/reference/ienumonstlimpl-class.md)"}],"content":"---\ntitle: \"CComEnumOnSTL Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"CComEnumOnSTL\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"CComEnumOnSTL class\"\nms.assetid: befe1a44-7a00-4f28-9a2e-cc0fa526643c\ncaps.latest.revision: 21\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# CComEnumOnSTL Class\nThis class defines a COM enumerator object based on an STL collection.  \n  \n## Syntax  \n  \n```\ntemplate <class Base,\n    const IID* piid, class T, class Copy, class CollType, class ThreadModel = CComObjectThreadModel>\n    class ATL_NO_VTABLE CComEnumOnSTL :\n    public IEnumOnSTLImpl<Base,\n    piid,\n T,\n    Copy,\n CollType>,\n    public CComObjectRootEx<ThreadModel>\n```  \n  \n#### Parameters  \n `Base`  \n A COM enumerator ( [IEnumXXXX](https://msdn.microsoft.com/library/ms680089.aspx)) interface.  \n  \n `piid`  \n A pointer to the interface ID of the enumerator interface.  \n  \n `T`  \n The type of item exposed by the enumerator interface.  \n  \n `Copy`  \n A [copy policy](../../atl/atl-copy-policy-classes.md) class.  \n  \n `CollType`  \n An STL container class.  \n  \n## Remarks  \n `CComEnumOnSTL` defines a COM enumerator object based on an STL collection. This class can be used on its own or in conjunction with [ICollectionOnSTLImpl](../../atl/reference/icollectiononstlimpl-class.md). Typical steps for using this class are outlined below. For more information, see [ATL Collections and Enumerators](../../atl/atl-collections-and-enumerators.md).  \n  \n## To use this class with ICollectionOnSTLImpl:  \n  \n- `typedef` a specialization of this class.  \n  \n-   Use the `typedef` as the final template argument in a specialization of `ICollectionOnSTLImpl`.  \n  \n See [ATL Collections and Enumerators](../../atl/atl-collections-and-enumerators.md) for an example.  \n  \n## To use this class independently of ICollectionOnSTLImpl:  \n  \n- `typedef` a specialization of this class.  \n  \n-   Use the `typedef` as the template argument in a specialization of `CComObject`.  \n  \n-   Create an instance of the `CComObject` specialization.  \n  \n-   Initialize the enumerator object by calling [IEnumOnSTLImpl::Init](../../atl/reference/ienumonstlimpl-class.md#ienumonstlimpl__init).  \n  \n-   Return the enumerator interface to the client.  \n  \n## Inheritance Hierarchy  \n `CComObjectRootBase`  \n  \n `Base`  \n  \n [CComObjectRootEx](../../atl/reference/ccomobjectrootex-class.md)  \n  \n [IEnumOnSTLImpl](../../atl/reference/ienumonstlimpl-class.md)  \n  \n `CComEnumOnSTL`  \n  \n## Requirements  \n **Header:** atlcom.h  \n  \n## Example  \n The code shown below provides a generic function to handle the creation and initialization of an enumerator object:  \n  \n [!code-cpp[NVC_ATL_COM#34](../../atl/codesnippet/cpp/ccomenumonstl-class_1.h)]  \n  \n This template function can be used to implement the `_NewEnum` property of a collection interface as shown below:  \n  \n [!code-cpp[NVC_ATL_COM#35](../../atl/codesnippet/cpp/ccomenumonstl-class_2.h)]  \n  \n This code creates a `typedef` for `CComEnumOnSTL` that exposes a vector of `CComVariant`s by means of the **IEnumVariant** interface. The **CVariantCollection** class simply specializes **CreateSTLEnumerator** to work with enumerator objects of this type.  \n  \n## See Also  \n [IEnumOnSTLImpl](../../atl/reference/ienumonstlimpl-class.md)   \n [ATLCollections Sample: Demonstrates ICollectionOnSTLImpl, CComEnumOnSTL, and Custom Copy Policy Classes](../../visual-cpp-samples.md)   \n [Class Overview](../../atl/atl-class-overview.md)   \n [CComObjectRootEx Class](../../atl/reference/ccomobjectrootex-class.md)   \n [CComObjectThreadModel](atl-typedefs.md#ccomobjectthreadmodel)   \n [IEnumOnSTLImpl Class](../../atl/reference/ienumonstlimpl-class.md)\n"}