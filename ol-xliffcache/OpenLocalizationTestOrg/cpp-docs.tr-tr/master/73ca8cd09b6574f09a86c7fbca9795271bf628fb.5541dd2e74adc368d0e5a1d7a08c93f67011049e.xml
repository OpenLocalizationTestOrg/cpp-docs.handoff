{"nodes":[{"pos":[12,38],"content":"fegetenv1 | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"fegetenv1 | Microsoft Docs","pos":[0,26]}]},{"pos":[941,949],"content":"fegetenv","linkify":"fegetenv","nodes":[{"content":"fegetenv","pos":[0,8]}]},{"content":"Stores the current floating-point environment in the specified object.","pos":[950,1020]},{"pos":[1029,1035],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[1103,1113],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Pointer to an <ph id=\"ph1\">`fenv_t`</ph> object to contain the current floating-point environment values.","pos":[1127,1214],"source":" Pointer to an `fenv_t` object to contain the current floating-point environment values."},{"pos":[1223,1235],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Returns 0 if the floating-point environment was successfully stored in <ph id=\"ph1\">`penv`</ph>.","pos":[1239,1317],"source":"Returns 0 if the floating-point environment was successfully stored in `penv`."},{"content":"Otherwise, returns a non-zero value.","pos":[1318,1354]},{"pos":[1363,1370],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The <ph id=\"ph1\">`fegetenv`</ph> function stores the current floating-point environment in the object pointed to by <ph id=\"ph2\">`penv`</ph>.","pos":[1374,1479],"source":"The `fegetenv` function stores the current floating-point environment in the object pointed to by `penv`."},{"content":"The floating point environment is the set of status flags and control modes that affect floating-point calculations.","pos":[1480,1596]},{"content":"This includes the rounding direction mode and the status flags for floating-point exceptions.","pos":[1597,1690]},{"content":"If <ph id=\"ph1\">`penv`</ph> does not point to a valid <ph id=\"ph2\">`fenv_t`</ph> object, subsequent behavior is undefined.","pos":[1692,1778],"source":"  If `penv` does not point to a valid `fenv_t` object, subsequent behavior is undefined."},{"content":"To use this function, you must turn off floating-point optimizations that could prevent access by using the <ph id=\"ph1\">`#pragma fenv_access(on)`</ph> directive prior to the call.","pos":[1785,1947],"source":"To use this function, you must turn off floating-point optimizations that could prevent access by using the `#pragma fenv_access(on)` directive prior to the call."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>fenv_access<ept id=\"p1\">](../../preprocessor/fenv-access.md)</ept>.","pos":[1948,2023],"source":" For more information, see [fenv_access](../../preprocessor/fenv-access.md)."},{"pos":[2032,2044],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"content":"Function","pos":[2051,2059]},{"content":"C header","pos":[2060,2068]},{"content":"C++ header","pos":[2069,2079]},{"content":"<ph id=\"ph1\">\\&lt;</ph>fenv.h&gt;","pos":[2148,2157],"source":"\\<fenv.h>"},{"content":"<ph id=\"ph1\">\\&lt;</ph>cfenv&gt;","pos":[2158,2166],"source":"\\<cfenv>"},{"pos":[2174,2278],"content":"For additional compatibility information, see <bpt id=\"p1\">[</bpt>Compatibility<ept id=\"p1\">](../../c-runtime-library/compatibility.md)</ept>.","source":"For additional compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md)."},{"pos":[2287,2295],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Alphabetical Function Reference<ept id=\"p1\">](../../c-runtime-library/reference/crt-alphabetical-function-reference.md)</ept><ph id=\"ph1\"> </ph>","pos":[2299,2407],"source":"[Alphabetical Function Reference](../../c-runtime-library/reference/crt-alphabetical-function-reference.md) "},{"content":"<bpt id=\"p1\"> [</bpt>fesetenv<ept id=\"p1\">](../../c-runtime-library/reference/fesetenv1.md)</ept>","pos":[2410,2469],"source":" [fesetenv](../../c-runtime-library/reference/fesetenv1.md)"}],"content":"---\ntitle: \"fegetenv1 | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"cpp\"\n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\napiname: \n  - \"fetegenv\"\napilocation: \n  - \"msvcrt.dll\"\n  - \"msvcr80.dll\"\n  - \"msvcr90.dll\"\n  - \"msvcr100.dll\"\n  - \"msvcr100_clr0400.dll\"\n  - \"msvcr110.dll\"\n  - \"msvcr110_clr0400.dll\"\n  - \"msvcr120.dll\"\n  - \"msvcr120_clr0400.dll\"\n  - \"ucrtbase.dll\"\n  - \"api-ms-win-crt-runtime-l1-1-0.dll\"\napitype: \"DLLExport\"\nf1_keywords: \n  - \"fegetenv\"\n  - \"fenv/fegetenv\"\ndev_langs: \n  - \"C\"\n  - \"C++\"\nhelpviewer_keywords: \n  - \"fetegenv function\"\nms.assetid: 68962421-6978-4b27-8e4c-ad1577830cf6\ncaps.latest.revision: 7\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# fegetenv\nStores the current floating-point environment in the specified object.  \n  \n## Syntax  \n  \n```  \nint fegetenv(  \n   fenv_t *penv  \n);  \n  \n```  \n  \n#### Parameters  \n `penv`  \n Pointer to an `fenv_t` object to contain the current floating-point environment values.  \n  \n## Return Value  \n Returns 0 if the floating-point environment was successfully stored in `penv`. Otherwise, returns a non-zero value.  \n  \n## Remarks  \n The `fegetenv` function stores the current floating-point environment in the object pointed to by `penv`. The floating point environment is the set of status flags and control modes that affect floating-point calculations. This includes the rounding direction mode and the status flags for floating-point exceptions.  If `penv` does not point to a valid `fenv_t` object, subsequent behavior is undefined.  \n  \n To use this function, you must turn off floating-point optimizations that could prevent access by using the `#pragma fenv_access(on)` directive prior to the call. For more information, see [fenv_access](../../preprocessor/fenv-access.md).  \n  \n## Requirements  \n  \n|Function|C header|C++ header|  \n|--------------|--------------|------------------|  \n|`fegetenv`|\\<fenv.h>|\\<cfenv>|  \n  \n For additional compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md).  \n  \n## See Also  \n [Alphabetical Function Reference](../../c-runtime-library/reference/crt-alphabetical-function-reference.md)   \n [fesetenv](../../c-runtime-library/reference/fesetenv1.md)"}