{"nodes":[{"pos":[12,43],"content":"&lt;string&gt; | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&amp;lt;</ph>string<ph id=\"ph2\">&amp;gt;</ph> | Microsoft Docs","pos":[0,31],"source":"&lt;string&gt; | Microsoft Docs"}]},{"pos":[661,675],"content":"&lt;string&gt;","linkify":"&lt;string&gt;","nodes":[{"content":"<ph id=\"ph1\">&amp;lt;</ph>string<ph id=\"ph2\">&amp;gt;</ph>","pos":[0,14],"source":"&lt;string&gt;"}]},{"pos":[676,761],"content":"Defines the container template class <ph id=\"ph1\">`basic_string`</ph> and various supporting templates.","source":"Defines the container template class `basic_string` and various supporting templates."},{"pos":[768,878],"content":"For more information about <ph id=\"ph1\">`basic_string`</ph>, see <bpt id=\"p1\">[</bpt>basic_string Class<ept id=\"p1\">](../standard-library/basic-string-class.md)</ept>","source":"For more information about `basic_string`, see [basic_string Class](../standard-library/basic-string-class.md)"},{"pos":[887,893],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[937,944],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The C++ language and the Standard C++ Library support two types of strings:","pos":[948,1023]},{"content":"Null-terminated character arrays often referred to as C strings.","pos":[1033,1097]},{"pos":[1107,1202],"content":"Template class objects, of type <ph id=\"ph1\">`basic_string`</ph>, that handle all <ph id=\"ph2\">`char`</ph>-like template arguments.","source":"Template class objects, of type `basic_string`, that handle all `char`-like template arguments."},{"pos":[1212,1220],"content":"Typedefs","linkify":"Typedefs","nodes":[{"content":"Typedefs","pos":[0,8]}]},{"pos":[1241,1296],"content":"<bpt id=\"p1\">[</bpt>string<ept id=\"p1\">](../standard-library/string-typedefs.md#string)</ept>","source":"[string](../standard-library/string-typedefs.md#string)"},{"pos":[1297,1416],"content":"A type that describes a specialization of the template class <ph id=\"ph1\">`basic_string`</ph> with elements of type <ph id=\"ph2\">`char`</ph> as a <ph id=\"ph3\">`string`</ph>.","source":"A type that describes a specialization of the template class `basic_string` with elements of type `char` as a `string`."},{"pos":[1421,1478],"content":"<bpt id=\"p1\">[</bpt>wstring<ept id=\"p1\">](../standard-library/string-typedefs.md#wstring)</ept>","source":"[wstring](../standard-library/string-typedefs.md#wstring)"},{"pos":[1479,1602],"content":"A type that describes a specialization of the template class <ph id=\"ph1\">`basic_string`</ph> with elements of type <ph id=\"ph2\">`wchar_t`</ph> as a <ph id=\"ph3\">`wstring`</ph>.","source":"A type that describes a specialization of the template class `basic_string` with elements of type `wchar_t` as a `wstring`."},{"pos":[1607,1668],"content":"<bpt id=\"p1\">[</bpt>u16string<ept id=\"p1\">](../standard-library/string-typedefs.md#u16string)</ept>","source":"[u16string](../standard-library/string-typedefs.md#u16string)"},{"pos":[1669,1782],"content":"A type that describes a specialization of the template class <ph id=\"ph1\">`basic_string`</ph> based on elements of type <ph id=\"ph2\">`char16_t`</ph>.","source":"A type that describes a specialization of the template class `basic_string` based on elements of type `char16_t`."},{"pos":[1787,1848],"content":"<bpt id=\"p1\">[</bpt>u32string<ept id=\"p1\">](../standard-library/string-typedefs.md#u32string)</ept>","source":"[u32string](../standard-library/string-typedefs.md#u32string)"},{"pos":[1849,1962],"content":"A type that describes a specialization of the template class <ph id=\"ph1\">`basic_string`</ph> based on elements of type <ph id=\"ph2\">`char32_t`</ph>.","source":"A type that describes a specialization of the template class `basic_string` based on elements of type `char32_t`."},{"pos":[1973,1982],"content":"Operators","linkify":"Operators","nodes":[{"content":"Operators","pos":[0,9]}]},{"pos":[2003,2068],"content":"<bpt id=\"p1\">[</bpt>operator+<ept id=\"p1\">](../standard-library/string-operators.md#operator_add)</ept>","source":"[operator+](../standard-library/string-operators.md#operator_add)"},{"content":"Concatenates two string objects.","pos":[2069,2101]},{"pos":[2106,2172],"content":"<bpt id=\"p1\">[</bpt>operator!=<ept id=\"p1\">](../standard-library/string-operators.md#operator_neq)</ept>","source":"[operator!=](../standard-library/string-operators.md#operator_neq)"},{"content":"Tests if the string object on the left side of the operator is not equal to the string object on the right side.","pos":[2173,2285]},{"pos":[2290,2358],"content":"<bpt id=\"p1\">[</bpt>operator==<ept id=\"p1\">](../standard-library/string-operators.md#operator_eq_eq)</ept>","source":"[operator==](../standard-library/string-operators.md#operator_eq_eq)"},{"content":"Tests if the string object on the left side of the operator is equal to the string object on the right side.","pos":[2359,2467]},{"pos":[2472,2537],"content":"<bpt id=\"p1\">[</bpt>operator&lt;<ept id=\"p1\">](../standard-library/string-operators.md#operator_lt_)</ept>","source":"[operator<](../standard-library/string-operators.md#operator_lt_)"},{"content":"Tests if the string object on the left side of the operator is less than to the string object on the right side.","pos":[2538,2650]},{"pos":[2655,2724],"content":"<bpt id=\"p1\">[</bpt>operator&lt;=<ept id=\"p1\">](../standard-library/string-operators.md#operator_lt__eq)</ept>","source":"[operator<=](../standard-library/string-operators.md#operator_lt__eq)"},{"content":"Tests if the string object on the left side of the operator is less than or equal to the string object on the right side.","pos":[2725,2846]},{"pos":[2851,2922],"content":"<bpt id=\"p1\">[</bpt>operator&lt;<ph id=\"ph1\">\\&lt;</ph><ept id=\"p1\">](../standard-library/string-operators.md#operator_lt__lt_)</ept>","source":"[operator<\\<](../standard-library/string-operators.md#operator_lt__lt_)"},{"content":"A template function that inserts a string into the output stream.","pos":[2923,2988]},{"pos":[2993,3058],"content":"<bpt id=\"p1\">[</bpt>operator&gt;<ept id=\"p1\">](../standard-library/string-operators.md#operator_gt_)</ept>","source":"[operator>](../standard-library/string-operators.md#operator_gt_)"},{"content":"Tests if the string object on the left side of the operator is greater than to the string object on the right side.","pos":[3059,3174]},{"pos":[3179,3248],"content":"<bpt id=\"p1\">[</bpt>operator&gt;=<ept id=\"p1\">](../standard-library/string-operators.md#operator_gt__eq)</ept>","source":"[operator>=](../standard-library/string-operators.md#operator_gt__eq)"},{"content":"Tests if the string object on the left side of the operator is greater than or equal to the string object on the right side.","pos":[3249,3373]},{"pos":[3378,3448],"content":"<bpt id=\"p1\">[</bpt>operator&gt;&gt;<ept id=\"p1\">](../standard-library/string-operators.md#operator_gt__gt_)</ept>","source":"[operator>>](../standard-library/string-operators.md#operator_gt__gt_)"},{"content":"A template function that extracts a string from the input stream.","pos":[3449,3514]},{"pos":[3525,3555],"content":"Specialized Template Functions","linkify":"Specialized Template Functions","nodes":[{"content":"Specialized Template Functions","pos":[0,30]}]},{"pos":[3576,3628],"content":"<bpt id=\"p1\">[</bpt>swap<ept id=\"p1\">](../standard-library/string-functions.md#swap)</ept>","source":"[swap](../standard-library/string-functions.md#swap)"},{"content":"Exchanges the arrays of characters of two strings.","pos":[3629,3679]},{"pos":[3684,3736],"content":"<bpt id=\"p1\">[</bpt>stod<ept id=\"p1\">](../standard-library/string-functions.md#stod)</ept>","source":"[stod](../standard-library/string-functions.md#stod)"},{"pos":[3737,3781],"content":"Converts a character sequence to a <ph id=\"ph1\">`double.`</ph>","source":"Converts a character sequence to a `double.`"},{"pos":[3786,3838],"content":"<bpt id=\"p1\">[</bpt>stof<ept id=\"p1\">](../standard-library/string-functions.md#stof)</ept>","source":"[stof](../standard-library/string-functions.md#stof)"},{"pos":[3839,3882],"content":"Converts a character sequence to a <ph id=\"ph1\">`float`</ph>.","source":"Converts a character sequence to a `float`."},{"pos":[3887,3939],"content":"<bpt id=\"p1\">[</bpt>stoi<ept id=\"p1\">](../standard-library/string-functions.md#stoi)</ept>","source":"[stoi](../standard-library/string-functions.md#stoi)"},{"content":"Converts a character sequence to an integer.","pos":[3940,3984]},{"pos":[3989,4043],"content":"<bpt id=\"p1\">[</bpt>stold<ept id=\"p1\">](../standard-library/string-functions.md#stold)</ept>","source":"[stold](../standard-library/string-functions.md#stold)"},{"pos":[4044,4093],"content":"Converts a character sequence to a <ph id=\"ph1\">`long double`</ph>.","source":"Converts a character sequence to a `long double`."},{"pos":[4098,4152],"content":"<bpt id=\"p1\">[</bpt>stoll<ept id=\"p1\">](../standard-library/string-functions.md#stoll)</ept>","source":"[stoll](../standard-library/string-functions.md#stoll)"},{"pos":[4153,4200],"content":"Converts a character sequence to a <ph id=\"ph1\">`long long`</ph>.","source":"Converts a character sequence to a `long long`."},{"pos":[4205,4259],"content":"<bpt id=\"p1\">[</bpt>stoul<ept id=\"p1\">](../standard-library/string-functions.md#stoul)</ept>","source":"[stoul](../standard-library/string-functions.md#stoul)"},{"pos":[4260,4312],"content":"Converts a character sequence to an <ph id=\"ph1\">`unsigned long`</ph>.","source":"Converts a character sequence to an `unsigned long`."},{"pos":[4317,4373],"content":"<bpt id=\"p1\">[</bpt>stoull<ept id=\"p1\">](../standard-library/string-functions.md#stoull)</ept>","source":"[stoull](../standard-library/string-functions.md#stoull)"},{"pos":[4374,4431],"content":"Converts a character sequence to an <ph id=\"ph1\">`unsigned long long`</ph>.","source":"Converts a character sequence to an `unsigned long long`."},{"pos":[4436,4498],"content":"<bpt id=\"p1\">[</bpt>to_string<ept id=\"p1\">](../standard-library/string-functions.md#to_string)</ept>","source":"[to_string](../standard-library/string-functions.md#to_string)"},{"pos":[4499,4530],"content":"Converts a value to a <ph id=\"ph1\">`string`</ph>.","source":"Converts a value to a `string`."},{"pos":[4535,4599],"content":"<bpt id=\"p1\">[</bpt>to_wstring<ept id=\"p1\">](../standard-library/string-functions.md#to_wstring)</ept>","source":"[to_wstring](../standard-library/string-functions.md#to_wstring)"},{"pos":[4600,4636],"content":"Converts a value to a wide <ph id=\"ph1\">`string`</ph>.","source":"Converts a value to a wide `string`."},{"pos":[4647,4656],"content":"Functions","linkify":"Functions","nodes":[{"content":"Functions","pos":[0,9]}]},{"pos":[4677,4753],"content":"<bpt id=\"p1\">[</bpt>getline Template Function<ept id=\"p1\">](../standard-library/string-functions.md#getline)</ept>","source":"[getline Template Function](../standard-library/string-functions.md#getline)"},{"content":"Extract strings from the input stream line by line.","pos":[4754,4805]},{"pos":[4816,4823],"content":"Classes","linkify":"Classes","nodes":[{"content":"Classes","pos":[0,7]}]},{"pos":[4844,4907],"content":"<bpt id=\"p1\">[</bpt>basic_string Class<ept id=\"p1\">](../standard-library/basic-string-class.md)</ept>","source":"[basic_string Class](../standard-library/basic-string-class.md)"},{"content":"A template class that describes objects that can store a sequence of arbitrary character-like objects.","pos":[4908,5010]},{"pos":[5015,5078],"content":"<bpt id=\"p1\">[</bpt>char_traits Struct<ept id=\"p1\">](../standard-library/char-traits-struct.md)</ept>","source":"[char_traits Struct](../standard-library/char-traits-struct.md)"},{"content":"A template class that describes attributes associated with a character of type CharType","pos":[5079,5166]},{"pos":[5177,5192],"content":"Specializations","linkify":"Specializations","nodes":[{"content":"Specializations","pos":[0,15]}]},{"pos":[5213,5288],"content":"<bpt id=\"p1\">[</bpt>char_traits<ph id=\"ph1\">\\&lt;</ph>char&gt; Struct<ept id=\"p1\">](../standard-library/char-traits-char-struct.md)</ept>","source":"[char_traits\\<char> Struct](../standard-library/char-traits-char-struct.md)"},{"pos":[5289,5400],"content":"A struct that is a specialization of the template struct <ph id=\"ph1\">`char_traits`</ph><ph id=\"ph2\">\\&lt;</ph>CharType&gt; to an element of type <ph id=\"ph3\">`char`</ph>.","source":"A struct that is a specialization of the template struct `char_traits`\\<CharType> to an element of type `char`."},{"pos":[5405,5485],"content":"<bpt id=\"p1\">[</bpt>char_traits&lt;wchar_t&gt; Struct<ept id=\"p1\">](../standard-library/char-traits-wchar-t-struct.md)</ept>","source":"[char_traits<wchar_t> Struct](../standard-library/char-traits-wchar-t-struct.md)"},{"pos":[5486,5600],"content":"A struct that is a specialization of the template struct <ph id=\"ph1\">`char_traits`</ph><ph id=\"ph2\">\\&lt;</ph>CharType&gt; to an element of type <ph id=\"ph3\">`wchar_t`</ph>.","source":"A struct that is a specialization of the template struct `char_traits`\\<CharType> to an element of type `wchar_t`."},{"pos":[5605,5687],"content":"<bpt id=\"p1\">[</bpt>char_traits&lt;char16_t&gt; Struct<ept id=\"p1\">](../standard-library/char-traits-char16-t-struct.md)</ept>","source":"[char_traits<char16_t> Struct](../standard-library/char-traits-char16-t-struct.md)"},{"pos":[5688,5803],"content":"A struct that is a specialization of the template struct <ph id=\"ph1\">`char_traits`</ph><ph id=\"ph2\">\\&lt;</ph>CharType&gt; to an element of type <ph id=\"ph3\">`char16_t`</ph>.","source":"A struct that is a specialization of the template struct `char_traits`\\<CharType> to an element of type `char16_t`."},{"pos":[5808,5890],"content":"<bpt id=\"p1\">[</bpt>char_traits&lt;char32_t&gt; Struct<ept id=\"p1\">](../standard-library/char-traits-char32-t-struct.md)</ept>","source":"[char_traits<char32_t> Struct](../standard-library/char-traits-char32-t-struct.md)"},{"pos":[5891,6006],"content":"A struct that is a specialization of the template struct <ph id=\"ph1\">`char_traits`</ph><ph id=\"ph2\">\\&lt;</ph>CharType&gt; to an element of type <ph id=\"ph3\">`char32_t`</ph>.","source":"A struct that is a specialization of the template struct `char_traits`\\<CharType> to an element of type `char32_t`."},{"pos":[6016,6028],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[6036,6057],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> <ph id=\"ph1\">\\&lt;</ph>string&gt;","source":"**Header:** \\<string>"},{"pos":[6065,6083],"content":"<bpt id=\"p1\">**</bpt>Namespace:<ept id=\"p1\">**</ept> std","source":"**Namespace:** std"},{"pos":[6092,6100],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Header Files Reference<ept id=\"p1\">](../standard-library/cpp-standard-library-header-files.md)</ept><ph id=\"ph1\"> </ph>","pos":[6104,6187],"source":"[Header Files Reference](../standard-library/cpp-standard-library-header-files.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Thread Safety in the C++ Standard Library<ept id=\"p1\">](../standard-library/thread-safety-in-the-cpp-standard-library.md)</ept>","pos":[6190,6300],"source":" [Thread Safety in the C++ Standard Library](../standard-library/thread-safety-in-the-cpp-standard-library.md)"}],"content":"---\ntitle: \"&lt;string&gt; | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"std::<string>\"\n  - \"string/std::<string>\"\n  - \"std.<string>\"\n  - \"<string>\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"string header\"\nms.assetid: a2fb9d00-d7ae-4170-bfea-2dc337aa37cf\ncaps.latest.revision: 23\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# &lt;string&gt;\nDefines the container template class `basic_string` and various supporting templates.  \n  \n For more information about `basic_string`, see [basic_string Class](../standard-library/basic-string-class.md)  \n  \n## Syntax  \n  \n```  \n#include <string>  \n```  \n  \n## Remarks  \n The C++ language and the Standard C++ Library support two types of strings:  \n  \n-   Null-terminated character arrays often referred to as C strings.  \n  \n-   Template class objects, of type `basic_string`, that handle all `char`-like template arguments.  \n  \n### Typedefs  \n  \n|||  \n|-|-|  \n|[string](../standard-library/string-typedefs.md#string)|A type that describes a specialization of the template class `basic_string` with elements of type `char` as a `string`.|  \n|[wstring](../standard-library/string-typedefs.md#wstring)|A type that describes a specialization of the template class `basic_string` with elements of type `wchar_t` as a `wstring`.|  \n|[u16string](../standard-library/string-typedefs.md#u16string)|A type that describes a specialization of the template class `basic_string` based on elements of type `char16_t`.|  \n|[u32string](../standard-library/string-typedefs.md#u32string)|A type that describes a specialization of the template class `basic_string` based on elements of type `char32_t`.|  \n  \n### Operators  \n  \n|||  \n|-|-|  \n|[operator+](../standard-library/string-operators.md#operator_add)|Concatenates two string objects.|  \n|[operator!=](../standard-library/string-operators.md#operator_neq)|Tests if the string object on the left side of the operator is not equal to the string object on the right side.|  \n|[operator==](../standard-library/string-operators.md#operator_eq_eq)|Tests if the string object on the left side of the operator is equal to the string object on the right side.|  \n|[operator<](../standard-library/string-operators.md#operator_lt_)|Tests if the string object on the left side of the operator is less than to the string object on the right side.|  \n|[operator<=](../standard-library/string-operators.md#operator_lt__eq)|Tests if the string object on the left side of the operator is less than or equal to the string object on the right side.|  \n|[operator<\\<](../standard-library/string-operators.md#operator_lt__lt_)|A template function that inserts a string into the output stream.|  \n|[operator>](../standard-library/string-operators.md#operator_gt_)|Tests if the string object on the left side of the operator is greater than to the string object on the right side.|  \n|[operator>=](../standard-library/string-operators.md#operator_gt__eq)|Tests if the string object on the left side of the operator is greater than or equal to the string object on the right side.|  \n|[operator>>](../standard-library/string-operators.md#operator_gt__gt_)|A template function that extracts a string from the input stream.|  \n  \n### Specialized Template Functions  \n  \n|||  \n|-|-|  \n|[swap](../standard-library/string-functions.md#swap)|Exchanges the arrays of characters of two strings.|  \n|[stod](../standard-library/string-functions.md#stod)|Converts a character sequence to a `double.`|  \n|[stof](../standard-library/string-functions.md#stof)|Converts a character sequence to a `float`.|  \n|[stoi](../standard-library/string-functions.md#stoi)|Converts a character sequence to an integer.|  \n|[stold](../standard-library/string-functions.md#stold)|Converts a character sequence to a `long double`.|  \n|[stoll](../standard-library/string-functions.md#stoll)|Converts a character sequence to a `long long`.|  \n|[stoul](../standard-library/string-functions.md#stoul)|Converts a character sequence to an `unsigned long`.|  \n|[stoull](../standard-library/string-functions.md#stoull)|Converts a character sequence to an `unsigned long long`.|  \n|[to_string](../standard-library/string-functions.md#to_string)|Converts a value to a `string`.|  \n|[to_wstring](../standard-library/string-functions.md#to_wstring)|Converts a value to a wide `string`.|  \n  \n### Functions  \n  \n|||  \n|-|-|  \n|[getline Template Function](../standard-library/string-functions.md#getline)|Extract strings from the input stream line by line.|  \n  \n### Classes  \n  \n|||  \n|-|-|  \n|[basic_string Class](../standard-library/basic-string-class.md)|A template class that describes objects that can store a sequence of arbitrary character-like objects.|  \n|[char_traits Struct](../standard-library/char-traits-struct.md)|A template class that describes attributes associated with a character of type CharType|  \n  \n### Specializations  \n  \n|||  \n|-|-|  \n|[char_traits\\<char> Struct](../standard-library/char-traits-char-struct.md)|A struct that is a specialization of the template struct `char_traits`\\<CharType> to an element of type `char`.|  \n|[char_traits<wchar_t> Struct](../standard-library/char-traits-wchar-t-struct.md)|A struct that is a specialization of the template struct `char_traits`\\<CharType> to an element of type `wchar_t`.|  \n|[char_traits<char16_t> Struct](../standard-library/char-traits-char16-t-struct.md)|A struct that is a specialization of the template struct `char_traits`\\<CharType> to an element of type `char16_t`.|  \n|[char_traits<char32_t> Struct](../standard-library/char-traits-char32-t-struct.md)|A struct that is a specialization of the template struct `char_traits`\\<CharType> to an element of type `char32_t`.|  \n  \n## Requirements  \n  \n- **Header:** \\<string>  \n  \n- **Namespace:** std  \n  \n## See Also  \n [Header Files Reference](../standard-library/cpp-standard-library-header-files.md)   \n [Thread Safety in the C++ Standard Library](../standard-library/thread-safety-in-the-cpp-standard-library.md)\n\n\n\n"}