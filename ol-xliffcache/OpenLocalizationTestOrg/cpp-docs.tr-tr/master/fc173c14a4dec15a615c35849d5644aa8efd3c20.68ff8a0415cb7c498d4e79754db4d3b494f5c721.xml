{"nodes":[{"pos":[12,48],"content":"CShellManager Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"CShellManager Class | Microsoft Docs","pos":[0,36]}]},{"pos":[613,632],"content":"CShellManager Class","linkify":"CShellManager Class","nodes":[{"content":"CShellManager Class","pos":[0,19]}]},{"content":"Implements several methods that enable you to work with pointers to identifier lists (PIDLs).","pos":[633,726]},{"pos":[735,741],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[804,811],"content":"Members","linkify":"Members","nodes":[{"content":"Members","pos":[0,7]}]},{"pos":[821,840],"content":"Public Constructors","linkify":"Public Constructors","nodes":[{"content":"Public Constructors","pos":[0,19]}]},{"content":"Name","pos":[847,851]},{"content":"Description","pos":[852,863]},{"pos":[901,962],"content":"<bpt id=\"p1\">[</bpt>CShellManager::CShellManager<ept id=\"p1\">](#cshellmanager__cshellmanager)</ept>","source":"[CShellManager::CShellManager](#cshellmanager__cshellmanager)"},{"pos":[963,999],"content":"Constructs a <ph id=\"ph1\">`CShellManager`</ph> object.","source":"Constructs a `CShellManager` object."},{"pos":[1010,1024],"content":"Public Methods","linkify":"Public Methods","nodes":[{"content":"Public Methods","pos":[0,14]}]},{"content":"Name","pos":[1031,1035]},{"content":"Description","pos":[1036,1047]},{"pos":[1085,1150],"content":"<bpt id=\"p1\">[</bpt>CShellManager::BrowseForFolder<ept id=\"p1\">](#cshellmanager__browseforfolder)</ept>","source":"[CShellManager::BrowseForFolder](#cshellmanager__browseforfolder)"},{"content":"Displays a dialog box that enables the user to select a shell folder.","pos":[1151,1220]},{"pos":[1225,1290],"content":"<bpt id=\"p1\">[</bpt>CShellManager::ConcatenateItem<ept id=\"p1\">](#cshellmanager__concatenateitem)</ept>","source":"[CShellManager::ConcatenateItem](#cshellmanager__concatenateitem)"},{"content":"Concatenates two PIDLs.","pos":[1291,1314]},{"pos":[1319,1370],"content":"<bpt id=\"p1\">[</bpt>CShellManager::CopyItem<ept id=\"p1\">](#cshellmanager__copyitem)</ept>","source":"[CShellManager::CopyItem](#cshellmanager__copyitem)"},{"content":"Creates a new PIDL and copies the supplied PIDL to it.","pos":[1371,1425]},{"pos":[1430,1485],"content":"<bpt id=\"p1\">[</bpt>CShellManager::CreateItem<ept id=\"p1\">](#cshellmanager__createitem)</ept>","source":"[CShellManager::CreateItem](#cshellmanager__createitem)"},{"content":"Creates a new PIDL of the specified size.","pos":[1486,1527]},{"pos":[1532,1583],"content":"<bpt id=\"p1\">[</bpt>CShellManager::FreeItem<ept id=\"p1\">](#cshellmanager__freeitem)</ept>","source":"[CShellManager::FreeItem](#cshellmanager__freeitem)"},{"content":"Deletes the supplied PIDL.","pos":[1584,1610]},{"pos":[1615,1674],"content":"<bpt id=\"p1\">[</bpt>CShellManager::GetItemCount<ept id=\"p1\">](#cshellmanager__getitemcount)</ept>","source":"[CShellManager::GetItemCount](#cshellmanager__getitemcount)"},{"content":"Returns the number of items in the supplied PIDL.","pos":[1675,1724]},{"pos":[1729,1786],"content":"<bpt id=\"p1\">[</bpt>CShellManager::GetItemSize<ept id=\"p1\">](#cshellmanager__getitemsize)</ept>","source":"[CShellManager::GetItemSize](#cshellmanager__getitemsize)"},{"content":"Returns the size of the supplied PIDL.","pos":[1787,1825]},{"pos":[1830,1887],"content":"<bpt id=\"p1\">[</bpt>CShellManager::GetNextItem<ept id=\"p1\">](#cshellmanager__getnextitem)</ept>","source":"[CShellManager::GetNextItem](#cshellmanager__getnextitem)"},{"content":"Returns the next item from the PIDL.","pos":[1888,1924]},{"pos":[1929,1990],"content":"<bpt id=\"p1\">[</bpt>CShellManager::GetParentItem<ept id=\"p1\">](#cshellmanager__getparentitem)</ept>","source":"[CShellManager::GetParentItem](#cshellmanager__getparentitem)"},{"content":"Retrieves the parent item of the supplied item.","pos":[1991,2038]},{"pos":[2043,2102],"content":"<bpt id=\"p1\">[</bpt>CShellManager::ItemFromPath<ept id=\"p1\">](#cshellmanager__itemfrompath)</ept>","source":"[CShellManager::ItemFromPath](#cshellmanager__itemfrompath)"},{"content":"Retrieves the PIDL for the item identified by the supplied path.","pos":[2103,2167]},{"pos":[2177,2184],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The methods of the <ph id=\"ph1\">`CShellManager`</ph> class all deal with PIDLs.","pos":[2188,2249],"source":"The methods of the `CShellManager` class all deal with PIDLs."},{"content":"A PIDL is a unique identifier for a shell object.","pos":[2250,2299]},{"content":"You should not create a <ph id=\"ph1\">`CShellManager`</ph> object manually.","pos":[2306,2362],"source":"You should not create a `CShellManager` object manually."},{"content":"It will be created automatically by the framework of your application.","pos":[2363,2433]},{"content":"However, you should call <bpt id=\"p1\">[</bpt>CWinAppEx::InitShellManager<ept id=\"p1\">](../../mfc/reference/cwinappex-class.md#cwinappex__initshellmanager)</ept> during the initialization process of your application.","pos":[2434,2611],"source":" However, you should call [CWinAppEx::InitShellManager](../../mfc/reference/cwinappex-class.md#cwinappex__initshellmanager) during the initialization process of your application."},{"content":"To get a pointer to the shell manager for your application, call <bpt id=\"p1\">[</bpt>CWinAppEx::GetShellManager<ept id=\"p1\">](../../mfc/reference/cwinappex-class.md#cwinappex__getshellmanager)</ept>.","pos":[2612,2773],"source":" To get a pointer to the shell manager for your application, call [CWinAppEx::GetShellManager](../../mfc/reference/cwinappex-class.md#cwinappex__getshellmanager)."},{"pos":[2782,2803],"content":"Inheritance Hierarchy","linkify":"Inheritance Hierarchy","nodes":[{"content":"Inheritance Hierarchy","pos":[0,21]}]},{"pos":[2807,2854],"content":"<bpt id=\"p1\">[</bpt>CObject<ept id=\"p1\">](../../mfc/reference/cobject-class.md)</ept>","source":"[CObject](../../mfc/reference/cobject-class.md)"},{"pos":[2861,2920],"content":"<bpt id=\"p1\">[</bpt>CShellManager<ept id=\"p1\">](../../mfc/reference/cshellmanager-class.md)</ept>","source":"[CShellManager](../../mfc/reference/cshellmanager-class.md)"},{"pos":[2929,2941],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[2945,2974],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> afxshellmanager.h","source":"**Header:** afxshellmanager.h"},{"pos":[2984,3061],"content":"<bpt id=\"p1\">&lt;a name=\"cshellmanager__browseforfolder\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CShellManager::BrowseForFolder","linkify":"<a name=\"cshellmanager__browseforfolder\"></a>  CShellManager::BrowseForFolder","source":"<a name=\"cshellmanager__browseforfolder\"></a>  CShellManager::BrowseForFolder"},{"content":"Displays a dialog box that enables the user to select a shell folder.","pos":[3065,3134]},{"pos":[3390,3400],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[out] <ph id=\"ph1\">`strOutFolder`</ph>","pos":[3404,3424],"source":"[out] `strOutFolder`"},{"content":"The string used by the method to store the path of the selected folder.","pos":[3428,3499]},{"content":"[in] <ph id=\"ph1\">`pWndParent`</ph>","pos":[3506,3523],"source":"[in] `pWndParent`"},{"content":"A pointer to the parent window.","pos":[3527,3558]},{"content":"[in] <ph id=\"ph1\">`lplszInitialFolder`</ph>","pos":[3565,3590],"source":"[in] `lplszInitialFolder`"},{"content":"A string that contains the folder that is selected by default when the dialog box is displayed.","pos":[3594,3689]},{"content":"[in] <ph id=\"ph1\">`lpszTitle`</ph>","pos":[3696,3712],"source":"[in] `lpszTitle`"},{"content":"The title for the dialog box.","pos":[3716,3745]},{"content":"[in] <ph id=\"ph1\">`ulFlags`</ph>","pos":[3752,3766],"source":"[in] `ulFlags`"},{"content":"Flags specifying options for the dialog box.","pos":[3770,3814]},{"content":"See <bpt id=\"p1\">[</bpt>BROWSEINFO<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb773205)</ept> for the detailed description.","pos":[3815,3921],"source":" See [BROWSEINFO](http://msdn.microsoft.com/library/windows/desktop/bb773205) for the detailed description."},{"content":"[out] <ph id=\"ph1\">`piFolderImage`</ph>","pos":[3928,3949],"source":"[out] `piFolderImage`"},{"content":"A pointer to the integer value where the method writes the image index of the selected folder.","pos":[3953,4047]},{"pos":[4057,4069],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Nonzero if the user selects a folder from the dialog box; otherwise 0.","pos":[4073,4143]},{"pos":[4153,4160],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"When you call this method, the application creates and shows a dialog box that enables the user to select a folder.","pos":[4164,4279]},{"content":"The method will write the path of the folder into the <ph id=\"ph1\">`strOutFolder`</ph> parameter.","pos":[4280,4359],"source":" The method will write the path of the folder into the `strOutFolder` parameter."},{"pos":[4369,4376],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following example demonstrates how to retrieve a reference to a <ph id=\"ph1\">`CShellManager`</ph> object by using the <ph id=\"ph2\">`CWinAppEx::GetShellManager`</ph> method and how to use the <ph id=\"ph3\">`BrowseForFolder`</ph> method.","pos":[4380,4564],"source":"The following example demonstrates how to retrieve a reference to a `CShellManager` object by using the `CWinAppEx::GetShellManager` method and how to use the `BrowseForFolder` method."},{"content":"This code snippet is part of the <bpt id=\"p1\">[</bpt>Explorer sample<ept id=\"p1\">](../../visual-cpp-samples.md)</ept>.","pos":[4565,4645],"source":" This code snippet is part of the [Explorer sample](../../visual-cpp-samples.md)."},{"pos":[4652,4746],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_MFC_Explorer#6<ept id=\"p2\">](../../mfc/reference/codesnippet/cpp/cshellmanager-class_1.cpp)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_MFC_Explorer#6](../../mfc/reference/codesnippet/cpp/cshellmanager-class_1.cpp)]"},{"pos":[4756,4833],"content":"<bpt id=\"p1\">&lt;a name=\"cshellmanager__concatenateitem\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CShellManager::ConcatenateItem","linkify":"<a name=\"cshellmanager__concatenateitem\"></a>  CShellManager::ConcatenateItem","source":"<a name=\"cshellmanager__concatenateitem\"></a>  CShellManager::ConcatenateItem"},{"content":"Creates a new list containing two PIDLs.","pos":[4837,4877]},{"pos":[4985,4995],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`pidl1`</ph>","pos":[4999,5011],"source":"[in] `pidl1`"},{"content":"The first item.","pos":[5015,5030]},{"content":"[in] <ph id=\"ph1\">`pidl2`</ph>","pos":[5037,5049],"source":"[in] `pidl2`"},{"content":"The second item.","pos":[5053,5069]},{"pos":[5079,5091],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[5095,5169],"content":"A pointer to the new item list if the function succeeds, otherwise <ph id=\"ph1\">`NULL`</ph>.","source":"A pointer to the new item list if the function succeeds, otherwise `NULL`."},{"pos":[5179,5186],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This method creates a new <bpt id=\"p1\">[</bpt>ITEMIDLIST<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb773321)</ept> large enough to contain both <ph id=\"ph1\">`pidl1`</ph> and <ph id=\"ph2\">`pidl2`</ph>.","pos":[5190,5338],"source":"This method creates a new [ITEMIDLIST](http://msdn.microsoft.com/library/windows/desktop/bb773321) large enough to contain both `pidl1` and `pidl2`."},{"content":"It then copies <ph id=\"ph1\">`pidl1`</ph> and <ph id=\"ph2\">`pidl2`</ph> to the new list.","pos":[5339,5390],"source":" It then copies `pidl1` and `pidl2` to the new list."},{"pos":[5400,5463],"content":"<bpt id=\"p1\">&lt;a name=\"cshellmanager__copyitem\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CShellManager::CopyItem","linkify":"<a name=\"cshellmanager__copyitem\"></a>  CShellManager::CopyItem","source":"<a name=\"cshellmanager__copyitem\"></a>  CShellManager::CopyItem"},{"content":"Copies an item list.","pos":[5467,5487]},{"pos":[5561,5571],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`pidlSource`</ph>","pos":[5575,5592],"source":"[in] `pidlSource`"},{"content":"The original item list.","pos":[5596,5619]},{"pos":[5629,5641],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[5645,5718],"content":"A pointer to the newly created item list if successful; otherwise <ph id=\"ph1\">`NULL`</ph>.","source":"A pointer to the newly created item list if successful; otherwise `NULL`."},{"pos":[5728,5735],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The newly created item list has the same size as the source item list.","pos":[5739,5809]},{"pos":[5819,5886],"content":"<bpt id=\"p1\">&lt;a name=\"cshellmanager__createitem\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CShellManager::CreateItem","linkify":"<a name=\"cshellmanager__createitem\"></a>  CShellManager::CreateItem","source":"<a name=\"cshellmanager__createitem\"></a>  CShellManager::CreateItem"},{"content":"Creates a new PIDL.","pos":[5890,5909]},{"pos":[5972,5982],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`cbSize`</ph>","pos":[5986,5999],"source":"[in] `cbSize`"},{"content":"The size of the item list.","pos":[6003,6029]},{"pos":[6039,6051],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[6055,6122],"content":"A pointer to the created item list if successful; otherwise <ph id=\"ph1\">`NULL`</ph>.","source":"A pointer to the created item list if successful; otherwise `NULL`."},{"pos":[6132,6205],"content":"<bpt id=\"p1\">&lt;a name=\"cshellmanager__cshellmanager\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CShellManager::CShellManager","linkify":"<a name=\"cshellmanager__cshellmanager\"></a>  CShellManager::CShellManager","source":"<a name=\"cshellmanager__cshellmanager\"></a>  CShellManager::CShellManager"},{"pos":[6209,6245],"content":"Constructs a <ph id=\"ph1\">`CShellManager`</ph> object.","source":"Constructs a `CShellManager` object."},{"pos":[6287,6294],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"In most cases, you do not have to create a <ph id=\"ph1\">`CShellManager`</ph> directly.","pos":[6298,6366],"source":"In most cases, you do not have to create a `CShellManager` directly."},{"content":"By default, the framework creates one for you.","pos":[6367,6413]},{"content":"To get a pointer to the <ph id=\"ph1\">`CShellManager`</ph>, call <bpt id=\"p1\">[</bpt>CWinAppEx::GetShellManager<ept id=\"p1\">](../../mfc/reference/cwinappex-class.md#cwinappex__getshellmanager)</ept>.","pos":[6414,6556],"source":" To get a pointer to the `CShellManager`, call [CWinAppEx::GetShellManager](../../mfc/reference/cwinappex-class.md#cwinappex__getshellmanager)."},{"content":"If you do create a <ph id=\"ph1\">`CShellManager`</ph> manually, you must initialize it with the method <bpt id=\"p1\">[</bpt>CWinAppEx::InitShellManager<ept id=\"p1\">](../../mfc/reference/cwinappex-class.md#cwinappex__initshellmanager)</ept>.","pos":[6557,6739],"source":" If you do create a `CShellManager` manually, you must initialize it with the method [CWinAppEx::InitShellManager](../../mfc/reference/cwinappex-class.md#cwinappex__initshellmanager)."},{"pos":[6749,6812],"content":"<bpt id=\"p1\">&lt;a name=\"cshellmanager__freeitem\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CShellManager::FreeItem","linkify":"<a name=\"cshellmanager__freeitem\"></a>  CShellManager::FreeItem","source":"<a name=\"cshellmanager__freeitem\"></a>  CShellManager::FreeItem"},{"content":"Deletes an item list.","pos":[6816,6837]},{"pos":[6896,6906],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`pidl`</ph>","pos":[6910,6921],"source":"[in] `pidl`"},{"content":"An item list to delete.","pos":[6925,6948]},{"pos":[6958,7029],"content":"<bpt id=\"p1\">&lt;a name=\"cshellmanager__getitemcount\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CShellManager::GetItemCount","linkify":"<a name=\"cshellmanager__getitemcount\"></a>  CShellManager::GetItemCount","source":"<a name=\"cshellmanager__getitemcount\"></a>  CShellManager::GetItemCount"},{"content":"Returns the number of items in an item list.","pos":[7033,7077]},{"pos":[7141,7151],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`pidl`</ph>","pos":[7155,7166],"source":"[in] `pidl`"},{"content":"A pointer to an item list.","pos":[7170,7196]},{"pos":[7206,7218],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The number of items in the item list.","pos":[7222,7259]},{"pos":[7269,7338],"content":"<bpt id=\"p1\">&lt;a name=\"cshellmanager__getitemsize\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CShellManager::GetItemSize","linkify":"<a name=\"cshellmanager__getitemsize\"></a>  CShellManager::GetItemSize","source":"<a name=\"cshellmanager__getitemsize\"></a>  CShellManager::GetItemSize"},{"content":"Returns the size of an item list.","pos":[7342,7375]},{"pos":[7438,7448],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`pidl`</ph>","pos":[7452,7463],"source":"[in] `pidl`"},{"content":"A pointer to an item list.","pos":[7467,7493]},{"pos":[7503,7515],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The size of the item list.","pos":[7519,7545]},{"pos":[7555,7624],"content":"<bpt id=\"p1\">&lt;a name=\"cshellmanager__getnextitem\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CShellManager::GetNextItem","linkify":"<a name=\"cshellmanager__getnextitem\"></a>  CShellManager::GetNextItem","source":"<a name=\"cshellmanager__getnextitem\"></a>  CShellManager::GetNextItem"},{"content":"Retrieves the next item from a pointer to an item identifier list (PIDL).","pos":[7628,7701]},{"pos":[7772,7782],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`pidl`</ph>","pos":[7786,7797],"source":"[in] `pidl`"},{"content":"The list of items to iterate.","pos":[7801,7830]},{"pos":[7840,7852],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A pointer to the next item in the list.","pos":[7856,7895]},{"pos":[7905,7912],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[7916,7983],"content":"If there are no more items in the list, this method returns <ph id=\"ph1\">`NULL`</ph>.","source":"If there are no more items in the list, this method returns `NULL`."},{"pos":[7993,8066],"content":"<bpt id=\"p1\">&lt;a name=\"cshellmanager__getparentitem\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CShellManager::GetParentItem","linkify":"<a name=\"cshellmanager__getparentitem\"></a>  CShellManager::GetParentItem","source":"<a name=\"cshellmanager__getparentitem\"></a>  CShellManager::GetParentItem"},{"content":"Retrieves the parent of a pointer to an item identifier list (PIDL).","pos":[8070,8138]},{"pos":[8241,8251],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`lpidl`</ph>","pos":[8255,8267],"source":"[in] `lpidl`"},{"content":"A PIDL whose parent will be retrieved.","pos":[8271,8309]},{"content":"[out] <ph id=\"ph1\">`lpidlParent`</ph>","pos":[8316,8335],"source":"[out] `lpidlParent`"},{"content":"A reference to a PIDL where the method will store the result.","pos":[8339,8400]},{"pos":[8410,8422],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The level of the parent PIDL.","pos":[8426,8455]},{"pos":[8465,8472],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The level of a PIDL is relative to the desktop.","pos":[8476,8523]},{"content":"The desktop PIDL is considered to have a level of 0.","pos":[8524,8576]},{"pos":[8586,8657],"content":"<bpt id=\"p1\">&lt;a name=\"cshellmanager__itemfrompath\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CShellManager::ItemFromPath","linkify":"<a name=\"cshellmanager__itemfrompath\"></a>  CShellManager::ItemFromPath","source":"<a name=\"cshellmanager__itemfrompath\"></a>  CShellManager::ItemFromPath"},{"content":"Retrieves the pointer to an item identifier list (PIDL) from the item identified by a string path.","pos":[8661,8759]},{"pos":[8855,8865],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] <ph id=\"ph1\">`lpszPath`</ph>","pos":[8869,8884],"source":"[in] `lpszPath`"},{"content":"A string that specifies the path for the item.","pos":[8888,8934]},{"content":"[out] <ph id=\"ph1\">`pidl`</ph>","pos":[8941,8953],"source":"[out] `pidl`"},{"content":"A reference to a PIDL.","pos":[8957,8979]},{"content":"The method uses this PIDL to store the pointer to its return value.","pos":[8980,9047]},{"pos":[9057,9069],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[9073,9133],"content":"Returns <ph id=\"ph1\">`NOERROR`</ph> if successful; an OLE-defined error value.","source":"Returns `NOERROR` if successful; an OLE-defined error value."},{"pos":[9142,9150],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Hierarchy Chart<ept id=\"p1\">](../../mfc/hierarchy-chart.md)</ept><ph id=\"ph1\"> </ph>","pos":[9154,9202],"source":"[Hierarchy Chart](../../mfc/hierarchy-chart.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Classes<ept id=\"p1\">](../../mfc/reference/mfc-classes.md)</ept>","pos":[9205,9251],"source":" [Classes](../../mfc/reference/mfc-classes.md)"}],"content":"---\ntitle: \"CShellManager Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"CShellManager\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"CShellManager class\"\nms.assetid: f15c4c1a-6fae-487d-9913-9b7369b33da0\ncaps.latest.revision: 23\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# CShellManager Class\nImplements several methods that enable you to work with pointers to identifier lists (PIDLs).  \n  \n## Syntax  \n  \n```  \nclass CShellManager : public CObject  \n```  \n  \n## Members  \n  \n### Public Constructors  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CShellManager::CShellManager](#cshellmanager__cshellmanager)|Constructs a `CShellManager` object.|  \n  \n### Public Methods  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CShellManager::BrowseForFolder](#cshellmanager__browseforfolder)|Displays a dialog box that enables the user to select a shell folder.|  \n|[CShellManager::ConcatenateItem](#cshellmanager__concatenateitem)|Concatenates two PIDLs.|  \n|[CShellManager::CopyItem](#cshellmanager__copyitem)|Creates a new PIDL and copies the supplied PIDL to it.|  \n|[CShellManager::CreateItem](#cshellmanager__createitem)|Creates a new PIDL of the specified size.|  \n|[CShellManager::FreeItem](#cshellmanager__freeitem)|Deletes the supplied PIDL.|  \n|[CShellManager::GetItemCount](#cshellmanager__getitemcount)|Returns the number of items in the supplied PIDL.|  \n|[CShellManager::GetItemSize](#cshellmanager__getitemsize)|Returns the size of the supplied PIDL.|  \n|[CShellManager::GetNextItem](#cshellmanager__getnextitem)|Returns the next item from the PIDL.|  \n|[CShellManager::GetParentItem](#cshellmanager__getparentitem)|Retrieves the parent item of the supplied item.|  \n|[CShellManager::ItemFromPath](#cshellmanager__itemfrompath)|Retrieves the PIDL for the item identified by the supplied path.|  \n  \n## Remarks  \n The methods of the `CShellManager` class all deal with PIDLs. A PIDL is a unique identifier for a shell object.  \n  \n You should not create a `CShellManager` object manually. It will be created automatically by the framework of your application. However, you should call [CWinAppEx::InitShellManager](../../mfc/reference/cwinappex-class.md#cwinappex__initshellmanager) during the initialization process of your application. To get a pointer to the shell manager for your application, call [CWinAppEx::GetShellManager](../../mfc/reference/cwinappex-class.md#cwinappex__getshellmanager).  \n  \n## Inheritance Hierarchy  \n [CObject](../../mfc/reference/cobject-class.md)  \n  \n [CShellManager](../../mfc/reference/cshellmanager-class.md)  \n  \n## Requirements  \n **Header:** afxshellmanager.h  \n  \n##  <a name=\"cshellmanager__browseforfolder\"></a>  CShellManager::BrowseForFolder  \n Displays a dialog box that enables the user to select a shell folder.  \n  \n```  \nBOOL BrowseForFolder(\n    CString& strOutFolder,  \n    CWnd* pWndParent = NULL,  \n    LPCTSTR lplszInitialFolder = NULL,  \n    LPCTSTR lpszTitle = NULL,  \n    UINT ulFlags = BIF_RETURNONLYFSDIRS,  \n    LPINT piFolderImage = NULL);\n```  \n  \n### Parameters  \n [out] `strOutFolder`  \n The string used by the method to store the path of the selected folder.  \n  \n [in] `pWndParent`  \n A pointer to the parent window.  \n  \n [in] `lplszInitialFolder`  \n A string that contains the folder that is selected by default when the dialog box is displayed.  \n  \n [in] `lpszTitle`  \n The title for the dialog box.  \n  \n [in] `ulFlags`  \n Flags specifying options for the dialog box. See [BROWSEINFO](http://msdn.microsoft.com/library/windows/desktop/bb773205) for the detailed description.  \n  \n [out] `piFolderImage`  \n A pointer to the integer value where the method writes the image index of the selected folder.  \n  \n### Return Value  \n Nonzero if the user selects a folder from the dialog box; otherwise 0.  \n  \n### Remarks  \n When you call this method, the application creates and shows a dialog box that enables the user to select a folder. The method will write the path of the folder into the `strOutFolder` parameter.  \n  \n### Example  \n The following example demonstrates how to retrieve a reference to a `CShellManager` object by using the `CWinAppEx::GetShellManager` method and how to use the `BrowseForFolder` method. This code snippet is part of the [Explorer sample](../../visual-cpp-samples.md).  \n  \n [!code-cpp[NVC_MFC_Explorer#6](../../mfc/reference/codesnippet/cpp/cshellmanager-class_1.cpp)]  \n  \n##  <a name=\"cshellmanager__concatenateitem\"></a>  CShellManager::ConcatenateItem  \n Creates a new list containing two PIDLs.  \n  \n```  \nLPITEMIDLIST ConcatenateItem(\n    LPCITEMIDLIST pidl1,  \n    LPCITEMIDLIST pidl2);\n```  \n  \n### Parameters  \n [in] `pidl1`  \n The first item.  \n  \n [in] `pidl2`  \n The second item.  \n  \n### Return Value  \n A pointer to the new item list if the function succeeds, otherwise `NULL`.  \n  \n### Remarks  \n This method creates a new [ITEMIDLIST](http://msdn.microsoft.com/library/windows/desktop/bb773321) large enough to contain both `pidl1` and `pidl2`. It then copies `pidl1` and `pidl2` to the new list.  \n  \n##  <a name=\"cshellmanager__copyitem\"></a>  CShellManager::CopyItem  \n Copies an item list.  \n  \n```  \nLPITEMIDLIST CopyItem(LPCITEMIDLIST pidlSource);\n```  \n  \n### Parameters  \n [in] `pidlSource`  \n The original item list.  \n  \n### Return Value  \n A pointer to the newly created item list if successful; otherwise `NULL`.  \n  \n### Remarks  \n The newly created item list has the same size as the source item list.  \n  \n##  <a name=\"cshellmanager__createitem\"></a>  CShellManager::CreateItem  \n Creates a new PIDL.  \n  \n```  \nLPITEMIDLIST CreateItem(UINT cbSize);\n```  \n  \n### Parameters  \n [in] `cbSize`  \n The size of the item list.  \n  \n### Return Value  \n A pointer to the created item list if successful; otherwise `NULL`.  \n  \n##  <a name=\"cshellmanager__cshellmanager\"></a>  CShellManager::CShellManager  \n Constructs a `CShellManager` object.  \n  \n```  \nCShellManager();\n```  \n  \n### Remarks  \n In most cases, you do not have to create a `CShellManager` directly. By default, the framework creates one for you. To get a pointer to the `CShellManager`, call [CWinAppEx::GetShellManager](../../mfc/reference/cwinappex-class.md#cwinappex__getshellmanager). If you do create a `CShellManager` manually, you must initialize it with the method [CWinAppEx::InitShellManager](../../mfc/reference/cwinappex-class.md#cwinappex__initshellmanager).  \n  \n##  <a name=\"cshellmanager__freeitem\"></a>  CShellManager::FreeItem  \n Deletes an item list.  \n  \n```  \nvoid FreeItem(LPITEMIDLIST pidl);\n```  \n  \n### Parameters  \n [in] `pidl`  \n An item list to delete.  \n  \n##  <a name=\"cshellmanager__getitemcount\"></a>  CShellManager::GetItemCount  \n Returns the number of items in an item list.  \n  \n```  \nUINT GetItemCount(LPCITEMIDLIST pidl);\n```  \n  \n### Parameters  \n [in] `pidl`  \n A pointer to an item list.  \n  \n### Return Value  \n The number of items in the item list.  \n  \n##  <a name=\"cshellmanager__getitemsize\"></a>  CShellManager::GetItemSize  \n Returns the size of an item list.  \n  \n```  \nUINT GetItemSize(LPCITEMIDLIST pidl);\n```  \n  \n### Parameters  \n [in] `pidl`  \n A pointer to an item list.  \n  \n### Return Value  \n The size of the item list.  \n  \n##  <a name=\"cshellmanager__getnextitem\"></a>  CShellManager::GetNextItem  \n Retrieves the next item from a pointer to an item identifier list (PIDL).  \n  \n```  \nLPITEMIDLIST GetNextItem(LPCITEMIDLIST pidl);\n```  \n  \n### Parameters  \n [in] `pidl`  \n The list of items to iterate.  \n  \n### Return Value  \n A pointer to the next item in the list.  \n  \n### Remarks  \n If there are no more items in the list, this method returns `NULL`.  \n  \n##  <a name=\"cshellmanager__getparentitem\"></a>  CShellManager::GetParentItem  \n Retrieves the parent of a pointer to an item identifier list (PIDL).  \n  \n```  \nint GetParentItem(\n    LPCITEMIDLIST lpidl,  \n    LPITEMIDLIST& lpidlParent);\n```  \n  \n### Parameters  \n [in] `lpidl`  \n A PIDL whose parent will be retrieved.  \n  \n [out] `lpidlParent`  \n A reference to a PIDL where the method will store the result.  \n  \n### Return Value  \n The level of the parent PIDL.  \n  \n### Remarks  \n The level of a PIDL is relative to the desktop. The desktop PIDL is considered to have a level of 0.  \n  \n##  <a name=\"cshellmanager__itemfrompath\"></a>  CShellManager::ItemFromPath  \n Retrieves the pointer to an item identifier list (PIDL) from the item identified by a string path.  \n  \n```  \nHRESULT ItemFromPath(\n    LPCTSTR lpszPath,  \n    LPITEMIDLIST& pidl);\n```  \n  \n### Parameters  \n [in] `lpszPath`  \n A string that specifies the path for the item.  \n  \n [out] `pidl`  \n A reference to a PIDL. The method uses this PIDL to store the pointer to its return value.  \n  \n### Return Value  \n Returns `NOERROR` if successful; an OLE-defined error value.  \n  \n## See Also  \n [Hierarchy Chart](../../mfc/hierarchy-chart.md)   \n [Classes](../../mfc/reference/mfc-classes.md)\n"}