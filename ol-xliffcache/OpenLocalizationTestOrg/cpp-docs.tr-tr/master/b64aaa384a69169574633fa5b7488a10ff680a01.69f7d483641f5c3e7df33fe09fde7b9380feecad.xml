{"nodes":[{"pos":[12,64],"content":"Supporting IDispatch and IErrorInfo | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Supporting IDispatch and IErrorInfo | Microsoft Docs","pos":[0,52]}]},{"content":"Supporting IDispatch and IErrorInfo","pos":[775,810]},{"pos":[811,1010],"content":"You can use the template class <bpt id=\"p1\">[</bpt>IDispatchImpl<ept id=\"p1\">](../atl/reference/idispatchimpl-class.md)</ept> to provide a default implementation of the <ph id=\"ph1\">`IDispatch Interface`</ph> portion of any dual interfaces on your object.","source":"You can use the template class [IDispatchImpl](../atl/reference/idispatchimpl-class.md) to provide a default implementation of the `IDispatch Interface` portion of any dual interfaces on your object."},{"content":"If your object uses the <ph id=\"ph1\">`IErrorInfo`</ph> interface to report errors back to the client, then your object must support the <ph id=\"ph2\">`ISupportErrorInfo Interface`</ph> interface.","pos":[1017,1175],"source":"If your object uses the `IErrorInfo` interface to report errors back to the client, then your object must support the `ISupportErrorInfo Interface` interface."},{"content":"The template class <bpt id=\"p1\">[</bpt>ISupportErrorInfoImpl<ept id=\"p1\">](../atl/reference/isupporterrorinfoimpl-class.md)</ept> provides an easy way to implement this if you only have a single interface that generates errors on your object.","pos":[1176,1380],"source":" The template class [ISupportErrorInfoImpl](../atl/reference/isupporterrorinfoimpl-class.md) provides an easy way to implement this if you only have a single interface that generates errors on your object."},{"content":"See Also","pos":[1389,1397]},{"content":"Fundamentals of ATL COM Objects","pos":[1402,1433]}],"content":"---\ntitle: \"Supporting IDispatch and IErrorInfo | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"IErrorInfo\"\n  - \"IDispatch\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"ISupportErrorInfoImpl method\"\n  - \"IErrorInfo class suppor in ATL\"\n  - \"IDispatchImpl class\"\n  - \"IDispatch class support in ATL\"\nms.assetid: 7db2220f-319d-4ce9-9382-d340019f14f7\ncaps.latest.revision: 16\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"ru-ru\"\n  - \"zh-cn\"\n  - \"zh-tw\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"tr-tr\"\n---\n# Supporting IDispatch and IErrorInfo\nYou can use the template class [IDispatchImpl](../atl/reference/idispatchimpl-class.md) to provide a default implementation of the `IDispatch Interface` portion of any dual interfaces on your object.  \n  \n If your object uses the `IErrorInfo` interface to report errors back to the client, then your object must support the `ISupportErrorInfo Interface` interface. The template class [ISupportErrorInfoImpl](../atl/reference/isupporterrorinfoimpl-class.md) provides an easy way to implement this if you only have a single interface that generates errors on your object.  \n  \n## See Also  \n [Fundamentals of ATL COM Objects](../atl/fundamentals-of-atl-com-objects.md)\n\n"}