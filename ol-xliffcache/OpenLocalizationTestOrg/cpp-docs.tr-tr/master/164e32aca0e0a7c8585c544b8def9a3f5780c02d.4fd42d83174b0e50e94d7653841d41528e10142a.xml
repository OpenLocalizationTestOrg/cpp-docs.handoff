{"nodes":[{"pos":[12,46],"content":"_com_error::WCode | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"_com_error::WCode | Microsoft Docs","pos":[0,34]}]},{"content":"_com_error::WCode","pos":[651,668]},{"content":"Microsoft Specific","pos":[671,689]},{"pos":[698,769],"content":"Retrieves the 16-bit error code mapped into the encapsulated <ph id=\"ph1\">`HRESULT`</ph>.","source":"Retrieves the 16-bit error code mapped into the encapsulated `HRESULT`."},{"content":"Syntax","pos":[778,784]},{"content":"Return Value","pos":[847,859]},{"pos":[863,1014],"content":"If the <ph id=\"ph1\">`HRESULT`</ph> is within the range 0x80040200 to 0x8004FFFF, the <bpt id=\"p1\">**</bpt>WCode<ept id=\"p1\">**</ept> method returns the <ph id=\"ph2\">`HRESULT`</ph> minus 0x80040200; otherwise, it returns zero.","source":"If the `HRESULT` is within the range 0x80040200 to 0x8004FFFF, the **WCode** method returns the `HRESULT` minus 0x80040200; otherwise, it returns zero."},{"content":"Remarks","pos":[1023,1030]},{"content":"The <bpt id=\"p1\">**</bpt>WCode<ept id=\"p1\">**</ept> method is used to undo a mapping that happens in the COM support code.","pos":[1034,1118],"source":"The **WCode** method is used to undo a mapping that happens in the COM support code."},{"content":"The wrapper for a <bpt id=\"p1\">**</bpt>dispinterface<ept id=\"p1\">**</ept> property or method calls a support routine that packages the arguments and calls <bpt id=\"p2\">**</bpt>IDispatch::Invoke<ept id=\"p2\">**</ept>.","pos":[1119,1258],"source":" The wrapper for a **dispinterface** property or method calls a support routine that packages the arguments and calls **IDispatch::Invoke**."},{"content":"Upon return, if a failure <ph id=\"ph1\">`HRESULT`</ph> of <ph id=\"ph2\">`DISP_E_EXCEPTION`</ph> is returned, the error information is retrieved from the <bpt id=\"p1\">**</bpt>EXCEPINFO<ept id=\"p1\">**</ept> structure passed to <bpt id=\"p2\">**</bpt>IDispatch::Invoke<ept id=\"p2\">**</ept>.","pos":[1259,1430],"source":" Upon return, if a failure `HRESULT` of `DISP_E_EXCEPTION` is returned, the error information is retrieved from the **EXCEPINFO** structure passed to **IDispatch::Invoke**."},{"content":"The error code can either be a 16-bit value stored in the <ph id=\"ph1\">`wCode`</ph> member of the <bpt id=\"p1\">**</bpt>EXCEPINFO<ept id=\"p1\">**</ept> structure or a full 32-bit value in the <bpt id=\"p2\">**</bpt>scode<ept id=\"p2\">**</ept> member of the <bpt id=\"p3\">**</bpt>EXCEPINFO<ept id=\"p3\">**</ept> structure.","pos":[1431,1613],"source":" The error code can either be a 16-bit value stored in the `wCode` member of the **EXCEPINFO** structure or a full 32-bit value in the **scode** member of the **EXCEPINFO** structure."},{"content":"If a 16-bit <ph id=\"ph1\">`wCode`</ph> is returned, it must first be mapped to a 32-bit failure <ph id=\"ph2\">`HRESULT`</ph>.","pos":[1614,1701],"source":" If a 16-bit `wCode` is returned, it must first be mapped to a 32-bit failure `HRESULT`."},{"content":"END Microsoft Specific","pos":[1710,1732]},{"content":"See Also","pos":[1743,1751]},{"content":"_com_error::HRESULTToWCode","pos":[1756,1782]},{"content":"_com_error::WCodeToHRESULT","pos":[1825,1851]},{"content":"_com_error Class","pos":[1894,1910]}],"content":"---\ntitle: \"_com_error::WCode | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"language-reference\"\nf1_keywords: \n  - \"_com_error.WCode\"\n  - \"_com_error::WCode\"\n  - \"WCode\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"WCode method\"\nms.assetid: f3b21852-f8ea-4e43-bff1-11c2d35454c4\ncaps.latest.revision: 6\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# _com_error::WCode\n**Microsoft Specific**  \n  \n Retrieves the 16-bit error code mapped into the encapsulated `HRESULT`.  \n  \n## Syntax  \n  \n```  \n  \nWORD WCode ( ) const throw( );  \n  \n```  \n  \n## Return Value  \n If the `HRESULT` is within the range 0x80040200 to 0x8004FFFF, the **WCode** method returns the `HRESULT` minus 0x80040200; otherwise, it returns zero.  \n  \n## Remarks  \n The **WCode** method is used to undo a mapping that happens in the COM support code. The wrapper for a **dispinterface** property or method calls a support routine that packages the arguments and calls **IDispatch::Invoke**. Upon return, if a failure `HRESULT` of `DISP_E_EXCEPTION` is returned, the error information is retrieved from the **EXCEPINFO** structure passed to **IDispatch::Invoke**. The error code can either be a 16-bit value stored in the `wCode` member of the **EXCEPINFO** structure or a full 32-bit value in the **scode** member of the **EXCEPINFO** structure. If a 16-bit `wCode` is returned, it must first be mapped to a 32-bit failure `HRESULT`.  \n  \n **END Microsoft Specific**  \n  \n## See Also  \n [_com_error::HRESULTToWCode](../cpp/com-error-hresulttowcode.md)   \n [_com_error::WCodeToHRESULT](../cpp/com-error-wcodetohresult.md)   \n [_com_error Class](../cpp/com-error-class.md)"}