{"nodes":[{"pos":[12,66],"content":"ested_scheduler_missing_detach Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"ested_scheduler_missing_detach Class | Microsoft Docs","pos":[0,53]}]},{"content":"nested_scheduler_missing_detach Class","pos":[685,722]},{"pos":[723,967],"content":"This class describes an exception thrown when the Concurrency Runtime detects that you neglected to call the <ph id=\"ph1\">`CurrentScheduler::Detach`</ph> method on a context that attached to a second scheduler using the <ph id=\"ph2\">`Attach`</ph> method of the <ph id=\"ph3\">`Scheduler`</ph> object.","source":"This class describes an exception thrown when the Concurrency Runtime detects that you neglected to call the `CurrentScheduler::Detach` method on a context that attached to a second scheduler using the `Attach` method of the `Scheduler` object."},{"content":"Syntax","pos":[976,982]},{"content":"Members","pos":[1067,1074]},{"content":"Public Constructors","pos":[1084,1103]},{"content":"Name","pos":[1110,1114]},{"content":"Description","pos":[1115,1126]},{"content":"nested_scheduler_missing_detach::nested_scheduler_missing_detach Constructor","pos":[1165,1241]},{"content":"Overloaded.","pos":[1250,1261]},{"content":"Constructs a <ph id=\"ph1\">`nested_scheduler_missing_detach`</ph> object.","pos":[1262,1316],"source":" Constructs a `nested_scheduler_missing_detach` object."},{"content":"Remarks","pos":[1326,1333]},{"content":"This exception is thrown only when you nest one scheduler inside another by calling the <ph id=\"ph1\">`Attach`</ph> method of a <ph id=\"ph2\">`Scheduler`</ph> object on a context that is already owned by or attached to another scheduler.","pos":[1337,1536],"source":"This exception is thrown only when you nest one scheduler inside another by calling the `Attach` method of a `Scheduler` object on a context that is already owned by or attached to another scheduler."},{"content":"The Concurrency Runtime throws this exception opportunistically when it can detect the scenario as an aid to locating the problem.","pos":[1537,1667]},{"content":"Not every instance of neglecting to call the <ph id=\"ph1\">`CurrentScheduler::Detach`</ph> method is guaranteed to throw this exception.","pos":[1668,1785],"source":" Not every instance of neglecting to call the `CurrentScheduler::Detach` method is guaranteed to throw this exception."},{"content":"Inheritance Hierarchy","pos":[1794,1815]},{"content":"Requirements","pos":[1879,1891]},{"pos":[1895,1915],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> concrt.h","source":"**Header:** concrt.h"},{"pos":[1922,1948],"content":"<bpt id=\"p1\">**</bpt>Namespace:<ept id=\"p1\">**</ept> concurrency","source":"**Namespace:** concurrency"},{"pos":[1979,2055],"content":"nested_scheduler_missing_detach::nested_scheduler_missing_detach Constructor"},{"pos":[2059,2113],"content":"Constructs a <ph id=\"ph1\">`nested_scheduler_missing_detach`</ph> object.","source":"Constructs a `nested_scheduler_missing_detach` object."},{"content":"Parameters","pos":[2267,2277]},{"content":"A descriptive message of the error.","pos":[2295,2330]},{"content":"See Also","pos":[2339,2347]},{"content":"concurrency Namespace","pos":[2352,2373]},{"content":"Scheduler Class","pos":[2406,2421]}],"content":"---\ntitle: \"nested_scheduler_missing_detach Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"concrt/concurrency::nested_scheduler_missing_detach\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"nested_scheduler_missing_detach class\"\nms.assetid: 65d3f277-6d43-4160-97ef-caf8b26c1641\ncaps.latest.revision: 19\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# nested_scheduler_missing_detach Class\nThis class describes an exception thrown when the Concurrency Runtime detects that you neglected to call the `CurrentScheduler::Detach` method on a context that attached to a second scheduler using the `Attach` method of the `Scheduler` object.  \n  \n## Syntax  \n  \n```\nclass nested_scheduler_missing_detach : public std::exception;\n```  \n  \n## Members  \n  \n### Public Constructors  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[nested_scheduler_missing_detach::nested_scheduler_missing_detach Constructor](#ctor)|Overloaded. Constructs a `nested_scheduler_missing_detach` object.|  \n  \n## Remarks  \n This exception is thrown only when you nest one scheduler inside another by calling the `Attach` method of a `Scheduler` object on a context that is already owned by or attached to another scheduler. The Concurrency Runtime throws this exception opportunistically when it can detect the scenario as an aid to locating the problem. Not every instance of neglecting to call the `CurrentScheduler::Detach` method is guaranteed to throw this exception.  \n  \n## Inheritance Hierarchy  \n `exception`  \n  \n `nested_scheduler_missing_detach`  \n  \n## Requirements  \n **Header:** concrt.h  \n  \n **Namespace:** concurrency  \n  \n##  <a name=\"ctor\"></a>  nested_scheduler_missing_detach::nested_scheduler_missing_detach Constructor  \n Constructs a `nested_scheduler_missing_detach` object.  \n  \n```\nexplicit _CRTIMP nested_scheduler_missing_detach(_In_z_ const char* _Message) throw();\n\nnested_scheduler_missing_detach() throw();\n```  \n  \n### Parameters  \n `_Message`  \n A descriptive message of the error.  \n  \n## See Also  \n [concurrency Namespace](concurrency-namespace.md)   \n [Scheduler Class](scheduler-class.md)\n"}