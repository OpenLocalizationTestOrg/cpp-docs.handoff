<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="tr-tr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-04506c2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d5fad931ce4342969d8a4efdb42897b5428478a6</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\mfc\tn020-id-naming-and-numbering-conventions.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">db23b5092196db61fd31391bc27d53aa218bdf78</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">740511b10acc87aad7e3f6bf3ef038c2ed373ca8</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>TN020: ID Naming and Numbering Conventions | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>TN020: ID Naming and Numbering Conventions</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This note describes the ID naming and numbering conventions that MFC 2.0 uses for resources, commands, strings, controls, and child windows.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The MFC ID naming and numbering conventions are intended to meet the following requirements:</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Provide a consistent ID-naming standard used across the MFC library and MFC applications that are supported by the Visual C++ resource editor.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>This makes it easier for the programmer to interpret the type and origin of a resource from its ID.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Emphasize the strong 1-to-1 relationship between certain types of IDs.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Conform to already widely used standards for naming IDs in Windows.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Partition the ID-numbering space.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>ID numbers can be assigned by the programmer, MFC, Windows, and Visual C++-edited resources.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Appropriate partitioning will help avoid duplication of ID numbers.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The ID Prefix Naming Convention</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Several types of IDs can occur in an application.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The MFC ID-naming convention defines different prefixes for different resource types.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>MFC uses the prefix "IDR_" to indicate a resource ID that applies to multiple resource types.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>For example, for a given frame window, MFC uses the same "IDR_" prefix to indicate a menu, accelerator, string and icon resource.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The following table shows the various prefixes and their usage:</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Prefix</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Use</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>IDR_</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>For multiple resource types (primarily used for menus, accelerators, and ribbons).</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>IDD_</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>For dialog template resources (for example, IDD_DIALOG1).</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>IDC_</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>For cursor resources.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>IDI_</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>For icon resources.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>IDB_</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>For bitmap resources.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>IDS_</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>For string resources.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Within a DIALOG resource, MFC follows these conventions:</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Prefix or label</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Use</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>IDOK, IDCANCEL</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>For standard push button IDs.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>IDC_</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>For other dialog controls.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The "IDC_" prefix is also used for cursors.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>This naming conflict is not usually a problem because a typical application will have few cursors and many dialog controls.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Within a menu resource, MFC follows these conventions:</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Prefix</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Use</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>IDM_</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>For menu items that do not use the MFC command architecture.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>ID_</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>For menu commands that use the MFC command architecture.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Commands that follow the MFC command architecture must have an <ph id="ph1">`ON_COMMAND`</ph> command handler and can have an <ph id="ph2">`ON_UPDATE_COMMAND_UI`</ph> handler.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>If these command handlers follow the MFC command architecture, they will function correctly whether they are bound to a menu command, a toolbar button, or a dialog bar button.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The same "ID_" prefix is also used for a menu prompt string that is displayed on the program's message bar.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Most of the menu items in your application should follow the MFC command conventions.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>All of the standard command IDs (for example, <ph id="ph1">`ID_FILE_NEW`</ph>) follow this convention.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>MFC also uses "IDP_" as a specialized form of strings (instead of "IDS_").</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Strings with the "IDP_" prefix are prompts, that is, strings used in message boxes.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>"IDP_" strings can contain "%1" and "%2" as placeholders of strings determined by the program.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>"IDP_" strings usually have help topics associated with them, and "IDS_" strings do not.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>"IDP_" strings are always localized, and "IDS_" strings might not be localized.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The MFC library also uses the "IDW_" prefix as a specialized form of control IDs (instead of "IDC_").</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>These IDs are assigned to child windows such as views and splitters by the framework classes.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>MFC implementation IDs are prefixed with "AFX_".</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The ID-Numbering Convention</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The following table lists the valid ranges for the IDs of the specific types.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Some of the limits are technical implementation limits, and others are conventions that are designed to prevent your IDs from colliding with Windows predefined IDs or MFC default implementations.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>We strongly recommend that you define all IDs inside the recommended ranges.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The lower limit of these ranges is 1 because 0 is not used.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>We recommend that you use the common convention and use 100 or 101 as the first ID.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Prefix</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Resource type</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Valid range</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>IDR_</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>multiple</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>1 through 0x6FFF</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>IDD_</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>dialog templates</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>1 through 0x6FFF</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>IDC_,IDI_,IDB_</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>cursors, icons, bitmaps</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>1 through 0x6FFF</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>IDS_, IDP_</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>general strings</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>1 through 0x7FFF</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>ID_</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>commands</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>0x8000 through 0xDFFF</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>IDC_</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>controls</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>8 through 0xDFFF</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Reasons for these range limits:</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>By convention, the ID value of 0 is not used.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Windows implementation limitations restrict true resource IDs to be less than or equal to 0x7FFF.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>MFC's internal framework reserves these ranges:</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>0x7000 through 0x7FFF (see afxres.h)</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>0xE000 through 0xEFFF (see afxres.h)</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>16000 through 18000 (see afxribbonres.h)</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>These ranges may change in future MFC implementations.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Several Windows system commands use the range of 0xF000 through 0xFFFF.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Control IDs of 1 through 7 are reserved for standard controls such as IDOK and IDCANCEL.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>The range of 0x8000 through 0xFFFF for strings is reserved for menu prompts for commands.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Technical Notes by Number</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Technical Notes by Category</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>