{"nodes":[{"pos":[12,43],"content":"_fflush_nolock | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"_fflush_nolock | Microsoft Docs","pos":[0,31]}]},{"content":"_fflush_nolock","pos":[1021,1035]},{"content":"Flushes a stream without locking the thread.","pos":[1036,1080]},{"content":"Syntax","pos":[1089,1095]},{"content":"Parameters","pos":[1168,1178]},{"content":"Pointer to the <ph id=\"ph1\">`FILE`</ph> structure.","pos":[1194,1226],"source":" Pointer to the `FILE` structure."},{"content":"Return Value","pos":[1235,1247]},{"pos":[1251,1309],"content":"See <bpt id=\"p1\">[</bpt>fflush<ept id=\"p1\">](../../c-runtime-library/reference/fflush.md)</ept>.","source":"See [fflush](../../c-runtime-library/reference/fflush.md)."},{"content":"Remarks","pos":[1318,1325]},{"content":"This function is a non-locking version of <ph id=\"ph1\">`fflush`</ph>.","pos":[1329,1380],"source":"This function is a non-locking version of `fflush`."},{"content":"It is identical to <ph id=\"ph1\">`fflush`</ph> except that it is not protected from interference by other threads.","pos":[1381,1476],"source":" It is identical to `fflush` except that it is not protected from interference by other threads."},{"content":"It might be faster because it does not incur the overhead of locking out other threads.","pos":[1477,1564]},{"content":"Use this function only in thread-safe contexts such as single-threaded applications or where the calling scope already handles thread isolation.","pos":[1565,1709]},{"content":"Requirements","pos":[1718,1730]},{"content":"Function","pos":[1737,1745]},{"content":"Required header","pos":[1746,1761]},{"content":"stdio.h&gt;","pos":[1826,1834],"source":"stdio.h>"},{"pos":[1842,1960],"content":"For more compatibility information, see <bpt id=\"p1\">[</bpt>Compatibility<ept id=\"p1\">](../../c-runtime-library/compatibility.md)</ept> in the Introduction.","source":"For more compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md) in the Introduction."},{"content":".NET Framework Equivalent","pos":[1969,1994]},{"content":"System::IO::FileStream::Flush","pos":[1999,2028]},{"content":"See Also","pos":[2094,2102]},{"content":"Stream I/O","pos":[2107,2117]},{"content":"fclose, _fcloseall","pos":[2163,2181]},{"content":"_flushall","pos":[2243,2252]},{"content":"setvbuf","pos":[2306,2313]}],"content":"---\ntitle: \"_fflush_nolock | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\napiname: \n  - \"_fflush_nolock\"\napilocation: \n  - \"msvcrt.dll\"\n  - \"msvcr80.dll\"\n  - \"msvcr90.dll\"\n  - \"msvcr100.dll\"\n  - \"msvcr100_clr0400.dll\"\n  - \"msvcr110.dll\"\n  - \"msvcr110_clr0400.dll\"\n  - \"msvcr120.dll\"\n  - \"msvcr120_clr0400.dll\"\n  - \"ucrtbase.dll\"\n  - \"api-ms-win-crt-stdio-l1-1-0.dll\"\napitype: \"DLLExport\"\nf1_keywords: \n  - \"fflush_nolock\"\n  - \"_fflush_nolock\"\ndev_langs: \n  - \"C++\"\n  - \"C\"\nhelpviewer_keywords: \n  - \"fflush_nolock function\"\n  - \"_fflush_nolock function\"\n  - \"streams, flushing\"\n  - \"flushing\"\nms.assetid: 5e33c4a1-b10c-4001-ad01-210757919291\ncaps.latest.revision: 12\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# _fflush_nolock\nFlushes a stream without locking the thread.  \n  \n## Syntax  \n  \n```  \nint _fflush_nolock(   \n   FILE *stream   \n);  \n```  \n  \n#### Parameters  \n `stream`  \n Pointer to the `FILE` structure.  \n  \n## Return Value  \n See [fflush](../../c-runtime-library/reference/fflush.md).  \n  \n## Remarks  \n This function is a non-locking version of `fflush`. It is identical to `fflush` except that it is not protected from interference by other threads. It might be faster because it does not incur the overhead of locking out other threads. Use this function only in thread-safe contexts such as single-threaded applications or where the calling scope already handles thread isolation.  \n  \n## Requirements  \n  \n|Function|Required header|  \n|--------------|---------------------|  \n|`_fflush_nolock`|\\<stdio.h>|  \n  \n For more compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md) in the Introduction.  \n  \n## .NET Framework Equivalent  \n [System::IO::FileStream::Flush](https://msdn.microsoft.com/en-us/library/2bw4h516.aspx)  \n  \n## See Also  \n [Stream I/O](../../c-runtime-library/stream-i-o.md)   \n [fclose, _fcloseall](../../c-runtime-library/reference/fclose-fcloseall.md)   \n [_flushall](../../c-runtime-library/reference/flushall.md)   \n [setvbuf](../../c-runtime-library/reference/setvbuf.md)"}