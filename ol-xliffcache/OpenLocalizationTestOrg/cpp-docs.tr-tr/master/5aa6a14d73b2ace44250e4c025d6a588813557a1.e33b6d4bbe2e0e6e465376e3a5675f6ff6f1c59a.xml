{"nodes":[{"pos":[12,53],"content":"map::reference (STL-CLR) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"map::reference (STL-CLR) | Microsoft Docs","pos":[0,41]}]},{"content":"map::reference (STL/CLR)","pos":[660,684]},{"content":"The type of a reference to an element.","pos":[685,723]},{"content":"Syntax","pos":[732,738]},{"content":"Remarks","pos":[795,802]},{"content":"The type describes a reference to an element.","pos":[806,851]},{"content":"Example","pos":[860,867]},{"content":"Requirements","pos":[1602,1614]},{"pos":[1618,1643],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> <ph id=\"ph1\">\\&lt;</ph>cliext/map&gt;","source":"**Header:** \\<cliext/map>"},{"pos":[1650,1671],"content":"<bpt id=\"p1\">**</bpt>Namespace:<ept id=\"p1\">**</ept> cliext","source":"**Namespace:** cliext"},{"content":"See Also","pos":[1680,1688]},{"content":"map (STL/CLR)","pos":[1693,1706]},{"content":"map::const_reference (STL/CLR)","pos":[1739,1769]},{"content":"map::value_type (STL/CLR)","pos":[1818,1843]}],"content":"---\ntitle: \"map::reference (STL-CLR) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"cliext::map::reference\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"reference member [STL/CLR]\"\nms.assetid: 7bbfeb61-f12a-42d1-b5ae-7b6421c1d33c\ncaps.latest.revision: 14\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"ru-ru\"\n  - \"zh-cn\"\n  - \"zh-tw\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"tr-tr\"\n---\n# map::reference (STL/CLR)\nThe type of a reference to an element.  \n  \n## Syntax  \n  \n```  \ntypedef value_type% reference;  \n```  \n  \n## Remarks  \n The type describes a reference to an element.  \n  \n## Example  \n  \n```  \n// cliext_map_reference.cpp   \n// compile with: /clr   \n#include <cliext/map>   \n  \ntypedef cliext::map<wchar_t, int> Mymap;   \nint main()   \n    {   \n    Mymap c1;   \n    c1.insert(Mymap::make_value(L'a', 1));   \n    c1.insert(Mymap::make_value(L'b', 2));   \n    c1.insert(Mymap::make_value(L'c', 3));   \n  \n// display contents \" [a 1] [b 2] [c 3]\"   \n    Mymap::iterator it = c1.begin();   \n    for (; it != c1.end(); ++it)   \n        {   // get a reference to an element   \n        Mymap::reference ref = *it;   \n        System::Console::Write(\" [{0} {1}]\", ref->first, ref->second);   \n        }   \n    System::Console::WriteLine();   \n    return (0);   \n    }  \n  \n```  \n  \n```Output  \n[a 1] [b 2] [c 3]  \n```  \n  \n## Requirements  \n **Header:** \\<cliext/map>  \n  \n **Namespace:** cliext  \n  \n## See Also  \n [map (STL/CLR)](../dotnet/map-stl-clr.md)   \n [map::const_reference (STL/CLR)](../dotnet/map-const-reference-stl-clr.md)   \n [map::value_type (STL/CLR)](../dotnet/map-value-type-stl-clr.md)"}