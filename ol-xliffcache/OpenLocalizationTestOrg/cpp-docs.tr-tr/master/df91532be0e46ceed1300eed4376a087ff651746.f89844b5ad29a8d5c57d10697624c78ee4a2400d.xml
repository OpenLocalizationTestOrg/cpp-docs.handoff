{"nodes":[{"pos":[12,71],"content":"vprintf, _vprintf_l, vwprintf, _vwprintf_l | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"vprintf, _vprintf_l, vwprintf, _vwprintf_l | Microsoft Docs","pos":[0,59]}]},{"pos":[1226,1268],"content":"vprintf, _vprintf_l, vwprintf, _vwprintf_l","linkify":"vprintf, _vprintf_l, vwprintf, _vwprintf_l","nodes":[{"content":"vprintf, _vprintf_l, vwprintf, _vwprintf_l","pos":[0,42]}]},{"content":"Writes formatted output by using a pointer to a list of arguments.","pos":[1269,1335]},{"content":"More secure versions of these functions are available, see <bpt id=\"p1\">[</bpt>vprintf_s, _vprintf_s_l, vwprintf_s, _vwprintf_s_l<ept id=\"p1\">](../../c-runtime-library/reference/vprintf-s-vprintf-s-l-vwprintf-s-vwprintf-s-l.md)</ept>.","pos":[1336,1532],"source":" More secure versions of these functions are available, see [vprintf_s, _vprintf_s_l, vwprintf_s, _vwprintf_s_l](../../c-runtime-library/reference/vprintf-s-vprintf-s-l-vwprintf-s-vwprintf-s-l.md)."},{"pos":[1541,1547],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[1895,1905],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Format specification.","pos":[1921,1942]},{"content":"Pointer to list of arguments.","pos":[1961,1990]},{"content":"The locale to use.","pos":[2009,2027]},{"pos":[2034,2169],"content":"For more information, see <bpt id=\"p1\">[</bpt>Format Specifications<ept id=\"p1\">](../../c-runtime-library/format-specification-syntax-printf-and-wprintf-functions.md)</ept>.","source":"For more information, see [Format Specifications](../../c-runtime-library/format-specification-syntax-printf-and-wprintf-functions.md)."},{"pos":[2178,2190],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"<ph id=\"ph1\">`vprintf`</ph> and <ph id=\"ph2\">`vwprintf`</ph> return the number of characters written, not including the terminating null character, or a negative value if an output error occurs.","pos":[2194,2352],"source":"`vprintf` and `vwprintf` return the number of characters written, not including the terminating null character, or a negative value if an output error occurs."},{"content":"If <ph id=\"ph1\">`format`</ph> is a null pointer, or if the format string contains invalid formatting characters, the invalid parameter handler is invoked, as described in <bpt id=\"p1\">[</bpt>Parameter Validation<ept id=\"p1\">](../../c-runtime-library/parameter-validation.md)</ept>.","pos":[2353,2578],"source":" If `format` is a null pointer, or if the format string contains invalid formatting characters, the invalid parameter handler is invoked, as described in [Parameter Validation](../../c-runtime-library/parameter-validation.md)."},{"content":"If execution is allowed to continue, the functions return -1 and set <ph id=\"ph1\">`errno`</ph> to <ph id=\"ph2\">`EINVAL`</ph>.","pos":[2579,2668],"source":" If execution is allowed to continue, the functions return -1 and set `errno` to `EINVAL`."},{"pos":[2675,2843],"content":"For information on these and other error codes, see <bpt id=\"p1\">[</bpt>_doserrno, errno, _sys_errlist, and _sys_nerr<ept id=\"p1\">](../../c-runtime-library/errno-doserrno-sys-errlist-and-sys-nerr.md)</ept>.","source":"For information on these and other error codes, see [_doserrno, errno, _sys_errlist, and _sys_nerr](../../c-runtime-library/errno-doserrno-sys-errlist-and-sys-nerr.md)."},{"pos":[2852,2859],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[2863,2975],"content":"Each of these functions takes a pointer to an argument list, then formats and writes the given data to <ph id=\"ph1\">`stdout`</ph>.","source":"Each of these functions takes a pointer to an argument list, then formats and writes the given data to `stdout`."},{"content":"<ph id=\"ph1\">`vwprintf`</ph> is the wide-character version of <ph id=\"ph2\">`vprintf`</ph>; the two functions behave identically if the stream is opened in ANSI mode.","pos":[2982,3111],"source":"`vwprintf` is the wide-character version of `vprintf`; the two functions behave identically if the stream is opened in ANSI mode."},{"content":"<ph id=\"ph1\">`vprintf`</ph> doesn't currently support output into a UNICODE stream.","pos":[3112,3177],"source":"`vprintf` doesn't currently support output into a UNICODE stream."},{"pos":[3184,3340],"content":"The versions of these functions with the <ph id=\"ph1\">`_l`</ph> suffix are identical except that they use the locale parameter passed in instead of the current thread locale.","source":"The versions of these functions with the `_l` suffix are identical except that they use the locale parameter passed in instead of the current thread locale."},{"pos":[3348,3598],"content":"[!IMPORTANT]\n Ensure that `format` is not a user-defined string. For more information, see [Avoiding Buffer Overruns](http://msdn.microsoft.com/library/windows/desktop/ms717795). Note that invalid format strings are detected and result in an error.","leadings":["","> "],"nodes":[{"content":" Ensure that `format` is not a user-defined string. For more information, see [Avoiding Buffer Overruns](http://msdn.microsoft.com/library/windows/desktop/ms717795). Note that invalid format strings are detected and result in an error.","pos":[13,248],"nodes":[{"content":"Ensure that <ph id=\"ph1\">`format`</ph> is not a user-defined string.","pos":[1,51],"source":" Ensure that `format` is not a user-defined string."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Avoiding Buffer Overruns<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms717795)</ept>.","pos":[52,165],"source":" For more information, see [Avoiding Buffer Overruns](http://msdn.microsoft.com/library/windows/desktop/ms717795)."},{"content":"Note that invalid format strings are detected and result in an error.","pos":[166,235]}]}]},{"pos":[3608,3637],"content":"Generic-Text Routine Mappings","linkify":"Generic-Text Routine Mappings","nodes":[{"content":"Generic-Text Routine Mappings","pos":[0,29]}]},{"content":"TCHAR.H routine","pos":[3644,3659]},{"content":"_UNICODE &amp; _MBCS not defined","pos":[3660,3688],"source":"_UNICODE & _MBCS not defined"},{"content":"_MBCS defined","pos":[3689,3702]},{"content":"_UNICODE defined","pos":[3703,3719]},{"pos":[3942,3954],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"content":"Routine","pos":[3961,3968]},{"content":"Required header","pos":[3969,3984]},{"content":"Optional headers","pos":[3985,4001]},{"pos":[4069,4092],"content":"<ph id=\"ph1\">`vprintf`</ph>, <ph id=\"ph2\">`_vprintf_l`</ph>","source":"`vprintf`, `_vprintf_l`"},{"content":"<ph id=\"ph1\">\\&lt;</ph>stdio.h&gt; and <ph id=\"ph2\">\\&lt;</ph>stdarg.h&gt;","pos":[4093,4119],"source":"\\<stdio.h> and \\<stdarg.h>"},{"content":"<ph id=\"ph1\">\\&lt;</ph>varargs.h&gt;*","pos":[4120,4133],"source":"\\<varargs.h>*"},{"pos":[4138,4163],"content":"<ph id=\"ph1\">`vwprintf`</ph>, <ph id=\"ph2\">`_vwprintf_l`</ph>","source":"`vwprintf`, `_vwprintf_l`"},{"content":"<ph id=\"ph1\">\\&lt;</ph>stdio.h&gt; or <ph id=\"ph2\">\\&lt;</ph>wchar.h&gt;, and <ph id=\"ph3\">\\&lt;</ph>stdarg.h&gt;","pos":[4164,4205],"source":"\\<stdio.h> or \\<wchar.h>, and \\<stdarg.h>"},{"content":"<ph id=\"ph1\">\\&lt;</ph>varargs.h&gt;*","pos":[4206,4219],"source":"\\<varargs.h>*"},{"content":"<ph id=\"ph1\">\\*</ph> Required for UNIX V compatibility.","pos":[4227,4264],"source":"\\* Required for UNIX V compatibility."},{"content":"The console is not supported in <ph id=\"ph1\">[!INCLUDE[win8_appname_long](../../build/includes/win8_appname_long_md.md)]</ph> apps.","pos":[4271,4384],"source":"The console is not supported in [!INCLUDE[win8_appname_long](../../build/includes/win8_appname_long_md.md)] apps."},{"content":"The standard stream handles that are associated with the console—<ph id=\"ph1\">`stdin`</ph>, <ph id=\"ph2\">`stdout`</ph>, and <ph id=\"ph3\">`stderr`</ph>—must be redirected before C run-time functions can use them in <ph id=\"ph4\">[!INCLUDE[win8_appname_long](../../build/includes/win8_appname_long_md.md)]</ph> apps.","pos":[4385,4626],"source":" The standard stream handles that are associated with the console—`stdin`, `stdout`, and `stderr`—must be redirected before C run-time functions can use them in [!INCLUDE[win8_appname_long](../../build/includes/win8_appname_long_md.md)] apps."},{"content":"For additional compatibility information, see <bpt id=\"p1\">[</bpt>Compatibility<ept id=\"p1\">](../../c-runtime-library/compatibility.md)</ept>.","pos":[4627,4731],"source":" For additional compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md)."},{"pos":[4740,4765],"content":".NET Framework Equivalent","linkify":".NET Framework Equivalent","nodes":[{"content":".NET Framework Equivalent","pos":[0,25]}]},{"pos":[4769,4861],"content":"<bpt id=\"p1\">[</bpt>System::Console::Write<ept id=\"p1\">](https://msdn.microsoft.com/en-us/library/system.console.write.aspx)</ept>","source":"[System::Console::Write](https://msdn.microsoft.com/en-us/library/system.console.write.aspx)"},{"pos":[4870,4878],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Stream I/O<ept id=\"p1\">](../../c-runtime-library/stream-i-o.md)</ept><ph id=\"ph1\"> </ph>","pos":[4882,4934],"source":"[Stream I/O](../../c-runtime-library/stream-i-o.md) "},{"content":"<bpt id=\"p1\"> [</bpt>vprintf Functions<ept id=\"p1\">](../../c-runtime-library/vprintf-functions.md)</ept><ph id=\"ph1\"> </ph>","pos":[4937,5004],"source":" [vprintf Functions](../../c-runtime-library/vprintf-functions.md) "},{"content":"<bpt id=\"p1\"> [</bpt>fprintf, _fprintf_l, fwprintf, _fwprintf_l<ept id=\"p1\">](../../c-runtime-library/reference/fprintf-fprintf-l-fwprintf-fwprintf-l.md)</ept><ph id=\"ph1\"> </ph>","pos":[5007,5129],"source":" [fprintf, _fprintf_l, fwprintf, _fwprintf_l](../../c-runtime-library/reference/fprintf-fprintf-l-fwprintf-fwprintf-l.md) "},{"content":"<bpt id=\"p1\"> [</bpt>printf, _printf_l, wprintf, _wprintf_l<ept id=\"p1\">](../../c-runtime-library/reference/printf-printf-l-wprintf-wprintf-l.md)</ept><ph id=\"ph1\"> </ph>","pos":[5132,5246],"source":" [printf, _printf_l, wprintf, _wprintf_l](../../c-runtime-library/reference/printf-printf-l-wprintf-wprintf-l.md) "},{"content":"<bpt id=\"p1\"> [</bpt>sprintf, _sprintf_l, swprintf, _swprintf_l, <ph id=\"ph1\">\\_</ph>_swprintf_l<ept id=\"p1\">](../../c-runtime-library/reference/sprintf-sprintf-l-swprintf-swprintf-l-swprintf-l.md)</ept><ph id=\"ph2\"> </ph>","pos":[5249,5397],"source":" [sprintf, _sprintf_l, swprintf, _swprintf_l, \\__swprintf_l](../../c-runtime-library/reference/sprintf-sprintf-l-swprintf-swprintf-l-swprintf-l.md) "},{"content":"<bpt id=\"p1\"> [</bpt>va_arg, va_copy, va_end, va_start<ept id=\"p1\">](../../c-runtime-library/reference/va-arg-va-copy-va-end-va-start.md)</ept>","pos":[5400,5505],"source":" [va_arg, va_copy, va_end, va_start](../../c-runtime-library/reference/va-arg-va-copy-va-end-va-start.md)"}],"content":"---\ntitle: \"vprintf, _vprintf_l, vwprintf, _vwprintf_l | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\napiname: \n  - \"vprintf\"\n  - \"_vwprintf_l\"\n  - \"_vprintf_l\"\n  - \"vwprintf\"\napilocation: \n  - \"msvcrt.dll\"\n  - \"msvcr80.dll\"\n  - \"msvcr90.dll\"\n  - \"msvcr100.dll\"\n  - \"msvcr100_clr0400.dll\"\n  - \"msvcr110.dll\"\n  - \"msvcr110_clr0400.dll\"\n  - \"msvcr120.dll\"\n  - \"msvcr120_clr0400.dll\"\n  - \"ucrtbase.dll\"\napitype: \"DLLExport\"\nf1_keywords: \n  - \"vwprintf\"\n  - \"_vtprintf\"\ndev_langs: \n  - \"C++\"\n  - \"C\"\nhelpviewer_keywords: \n  - \"vwprintf function\"\n  - \"_vwprintf_l function\"\n  - \"vwprintf_l function\"\n  - \"_vtprintf function\"\n  - \"vtprintf_l function\"\n  - \"vprintf function\"\n  - \"_vprintf_l function\"\n  - \"vprintf_l function\"\n  - \"vtprintf function\"\n  - \"_vtprintf_l function\"\n  - \"formatted text [C++]\"\nms.assetid: 44549505-00a0-4fa7-9a85-f2e666f55a38\ncaps.latest.revision: 20\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# vprintf, _vprintf_l, vwprintf, _vwprintf_l\nWrites formatted output by using a pointer to a list of arguments. More secure versions of these functions are available, see [vprintf_s, _vprintf_s_l, vwprintf_s, _vwprintf_s_l](../../c-runtime-library/reference/vprintf-s-vprintf-s-l-vwprintf-s-vwprintf-s-l.md).  \n  \n## Syntax  \n  \n```  \nint vprintf(  \n   const char *format,  \n   va_list argptr   \n);  \nint _vprintf_l(  \n   const char *format,  \n   locale_t locale,  \n   va_list argptr   \n);  \nint vwprintf(  \n   const wchar_t *format,  \n   va_list argptr   \n);  \nint _vwprintf_l(  \n   const wchar_t *format,  \n   locale_t locale,  \n   va_list argptr   \n);  \n```  \n  \n#### Parameters  \n `format`  \n Format specification.  \n  \n `argptr`  \n Pointer to list of arguments.  \n  \n `locale`  \n The locale to use.  \n  \n For more information, see [Format Specifications](../../c-runtime-library/format-specification-syntax-printf-and-wprintf-functions.md).  \n  \n## Return Value  \n `vprintf` and `vwprintf` return the number of characters written, not including the terminating null character, or a negative value if an output error occurs. If `format` is a null pointer, or if the format string contains invalid formatting characters, the invalid parameter handler is invoked, as described in [Parameter Validation](../../c-runtime-library/parameter-validation.md). If execution is allowed to continue, the functions return -1 and set `errno` to `EINVAL`.  \n  \n For information on these and other error codes, see [_doserrno, errno, _sys_errlist, and _sys_nerr](../../c-runtime-library/errno-doserrno-sys-errlist-and-sys-nerr.md).  \n  \n## Remarks  \n Each of these functions takes a pointer to an argument list, then formats and writes the given data to `stdout`.  \n  \n `vwprintf` is the wide-character version of `vprintf`; the two functions behave identically if the stream is opened in ANSI mode. `vprintf` doesn't currently support output into a UNICODE stream.  \n  \n The versions of these functions with the `_l` suffix are identical except that they use the locale parameter passed in instead of the current thread locale.  \n  \n> [!IMPORTANT]\n>  Ensure that `format` is not a user-defined string. For more information, see [Avoiding Buffer Overruns](http://msdn.microsoft.com/library/windows/desktop/ms717795). Note that invalid format strings are detected and result in an error.  \n  \n### Generic-Text Routine Mappings  \n  \n|TCHAR.H routine|_UNICODE & _MBCS not defined|_MBCS defined|_UNICODE defined|  \n|---------------------|------------------------------------|--------------------|-----------------------|  \n|`_vtprintf`|`vprintf`|`vprintf`|`vwprintf`|  \n|`_vtprintf_l`|`_vprintf_l`|`_vprintf_l`|`_vwprintf_l`|  \n  \n## Requirements  \n  \n|Routine|Required header|Optional headers|  \n|-------------|---------------------|----------------------|  \n|`vprintf`, `_vprintf_l`|\\<stdio.h> and \\<stdarg.h>|\\<varargs.h>*|  \n|`vwprintf`, `_vwprintf_l`|\\<stdio.h> or \\<wchar.h>, and \\<stdarg.h>|\\<varargs.h>*|  \n  \n \\* Required for UNIX V compatibility.  \n  \n The console is not supported in [!INCLUDE[win8_appname_long](../../build/includes/win8_appname_long_md.md)] apps. The standard stream handles that are associated with the console—`stdin`, `stdout`, and `stderr`—must be redirected before C run-time functions can use them in [!INCLUDE[win8_appname_long](../../build/includes/win8_appname_long_md.md)] apps. For additional compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md).  \n  \n## .NET Framework Equivalent  \n [System::Console::Write](https://msdn.microsoft.com/en-us/library/system.console.write.aspx)  \n  \n## See Also  \n [Stream I/O](../../c-runtime-library/stream-i-o.md)   \n [vprintf Functions](../../c-runtime-library/vprintf-functions.md)   \n [fprintf, _fprintf_l, fwprintf, _fwprintf_l](../../c-runtime-library/reference/fprintf-fprintf-l-fwprintf-fwprintf-l.md)   \n [printf, _printf_l, wprintf, _wprintf_l](../../c-runtime-library/reference/printf-printf-l-wprintf-wprintf-l.md)   \n [sprintf, _sprintf_l, swprintf, _swprintf_l, \\__swprintf_l](../../c-runtime-library/reference/sprintf-sprintf-l-swprintf-swprintf-l-swprintf-l.md)   \n [va_arg, va_copy, va_end, va_start](../../c-runtime-library/reference/va-arg-va-copy-va-end-va-start.md)"}