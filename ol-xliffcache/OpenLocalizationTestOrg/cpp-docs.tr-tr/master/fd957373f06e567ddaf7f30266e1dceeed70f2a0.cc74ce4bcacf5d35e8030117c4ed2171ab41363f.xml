{"nodes":[{"pos":[12,49],"content":"_mbbtype, _mbbtype_l | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"_mbbtype, _mbbtype_l | Microsoft Docs","pos":[0,37]}]},{"content":"_mbbtype, _mbbtype_l","pos":[1063,1083]},{"content":"Returns the byte type, based on the previous byte.","pos":[1084,1134]},{"pos":[1142,1402],"content":"[!IMPORTANT]\n This API cannot be used in applications that execute in the [!INCLUDE[wrt](../../atl/reference/includes/wrt_md.md)]. For more information, see [CRT functions not supported with /ZW](http://msdn.microsoft.com/library/windows/apps/jj606124.aspx).","leadings":["","> "],"nodes":[{"content":" This API cannot be used in applications that execute in the [!INCLUDE[wrt](../../atl/reference/includes/wrt_md.md)]. For more information, see [CRT functions not supported with /ZW](http://msdn.microsoft.com/library/windows/apps/jj606124.aspx).","pos":[13,258],"nodes":[{"content":"This API cannot be used in applications that execute in the <ph id=\"ph1\">[!INCLUDE[wrt](../../atl/reference/includes/wrt_md.md)]</ph>.","pos":[1,117],"source":" This API cannot be used in applications that execute in the [!INCLUDE[wrt](../../atl/reference/includes/wrt_md.md)]."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>CRT functions not supported with /ZW<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/apps/jj606124.aspx)</ept>.","pos":[118,245],"source":" For more information, see [CRT functions not supported with /ZW](http://msdn.microsoft.com/library/windows/apps/jj606124.aspx)."}]}]},{"content":"Syntax","pos":[1411,1417]},{"content":"Parameters","pos":[1583,1593]},{"content":"The character to test.","pos":[1604,1626]},{"content":"The type of byte to test for.","pos":[1643,1672]},{"content":"The locale to use.","pos":[1691,1709]},{"content":"Return Value","pos":[1718,1730]},{"content":"returns the type of byte in a string.","pos":[1745,1782]},{"content":"This decision is context-sensitive, as specified by the value of <ph id=\"ph1\">`type`</ph>, which provides the control test condition.","pos":[1783,1898],"source":" This decision is context-sensitive, as specified by the value of `type`, which provides the control test condition."},{"content":"is the type of the previous byte in the string.","pos":[1906,1953]},{"content":"The manifest constants in the following table are defined in Mbctype.h.","pos":[1954,2025]},{"pos":[2032,2040],"content":"Value of"},{"pos":[2059,2068],"content":"tests for"},{"content":"Return value","pos":[2069,2081]},{"content":"Any value except 1","pos":[2172,2190]},{"content":"Valid single byte or lead byte","pos":[2191,2221]},{"pos":[2236,2239],"content":"(0)"},{"content":"Single byte (0x20 – 0x7E, 0xA1 – 0xDF)","pos":[2240,2278]},{"content":"Any value except 1","pos":[2283,2301]},{"content":"Valid single byte or lead byte","pos":[2302,2332]},{"pos":[2345,2348],"content":"(1)"},{"content":"Lead byte of multibyte character (0x81 – 0x9F, 0xE0 – 0xFC)","pos":[2349,2408]},{"content":"Any value except 1","pos":[2413,2431]},{"content":"Valid single-byte or lead byte","pos":[2432,2462]},{"content":"( –1)","pos":[2490,2495]},{"content":"Invalid character (any value except 0x20 – 0x7E, 0xA1 – 0xDF, 0x81 – 0x9F, 0xE0 – 0xFC","pos":[2496,2582]},{"content":"1","pos":[2587,2588]},{"content":"Valid trail byte","pos":[2589,2605]},{"pos":[2619,2622],"content":"(2)"},{"content":"Trailing byte of multibyte character (0x40 – 0x7E, 0x80 – 0xFC)","pos":[2623,2686]},{"content":"1","pos":[2691,2692]},{"content":"Valid trail byte","pos":[2693,2709]},{"content":"( –1)","pos":[2737,2742]},{"content":"Invalid character (any value except 0x20 – 0x7E, 0xA1 – 0xDF, 0x81 – 0x9F, 0xE0 – 0xFC","pos":[2743,2829]},{"content":"Remarks","pos":[2839,2846]},{"content":"The <ph id=\"ph1\">`_mbbtype`</ph> function determines the type of a byte in a multibyte character.","pos":[2850,2929],"source":"The `_mbbtype` function determines the type of a byte in a multibyte character."},{"content":"If the value of <ph id=\"ph1\">`type`</ph> is any value except 1, <ph id=\"ph2\">`_mbbtype`</ph> tests for a valid single-byte or lead byte of a multibyte character.","pos":[2930,3055],"source":" If the value of `type` is any value except 1, `_mbbtype` tests for a valid single-byte or lead byte of a multibyte character."},{"content":"If the value of <ph id=\"ph1\">`type`</ph> is 1, <ph id=\"ph2\">`_mbbtype`</ph> tests for a valid trail byte of a multibyte character.","pos":[3056,3150],"source":" If the value of `type` is 1, `_mbbtype` tests for a valid trail byte of a multibyte character."},{"content":"The output value is affected by the setting of the <ph id=\"ph1\">`LC_CTYPE`</ph> category setting of the locale; see <bpt id=\"p1\">[</bpt>setlocale, _wsetlocale<ept id=\"p1\">](../../c-runtime-library/reference/setlocale-wsetlocale.md)</ept> for more information.","pos":[3157,3360],"source":"The output value is affected by the setting of the `LC_CTYPE` category setting of the locale; see [setlocale, _wsetlocale](../../c-runtime-library/reference/setlocale-wsetlocale.md) for more information."},{"content":"The <ph id=\"ph1\">`_mbbtype`</ph> version of this function uses the current locale for this locale-dependent behavior; the <ph id=\"ph2\">`_mbbtype_l`</ph> version is identical except that it use the locale parameter that's passed in instead.","pos":[3361,3564],"source":" The `_mbbtype` version of this function uses the current locale for this locale-dependent behavior; the `_mbbtype_l` version is identical except that it use the locale parameter that's passed in instead."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Locale<ept id=\"p1\">](../../c-runtime-library/locale.md)</ept>.","pos":[3565,3635],"source":" For more information, see [Locale](../../c-runtime-library/locale.md)."},{"content":"In earlier versions, <ph id=\"ph1\">`_mbbtype`</ph> was named <ph id=\"ph2\">`chkctype`</ph>.","pos":[3642,3695],"source":"In earlier versions, `_mbbtype` was named `chkctype`."},{"content":"For new code, use <ph id=\"ph1\">`_mbbtype`</ph> instead.","pos":[3696,3733],"source":" For new code, use `_mbbtype` instead."},{"content":"Requirements","pos":[3742,3754]},{"content":"Routine","pos":[3761,3768]},{"content":"Required header","pos":[3769,3784]},{"content":"Optional header","pos":[3785,3800]},{"content":"mbstring.h&gt;","pos":[3880,3891],"source":"mbstring.h>"},{"content":"mbctype.h&gt;*","pos":[3894,3905],"source":"mbctype.h>*"},{"content":"mbstring.h&gt;","pos":[3925,3936],"source":"mbstring.h>"},{"content":"mbctype.h&gt;*","pos":[3939,3950],"source":"mbctype.h>*"},{"content":"For definitions of manifest constants that are used as return values.","pos":[3961,4030]},{"pos":[4037,4135],"content":"For more compatibility information, see <bpt id=\"p1\">[</bpt>Compatibility<ept id=\"p1\">](../../c-runtime-library/compatibility.md)</ept>.","source":"For more compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md)."},{"content":".NET Framework Equivalent","pos":[4144,4169]},{"pos":[4173,4314],"content":"Not applicable, but see <bpt id=\"p1\">[</bpt>System::Globalization::CultureInfo<ept id=\"p1\">](https://msdn.microsoft.com/en-us/library/system.globalization.cultureinfo.aspx)</ept>.","source":"Not applicable, but see [System::Globalization::CultureInfo](https://msdn.microsoft.com/en-us/library/system.globalization.cultureinfo.aspx)."},{"content":"See Also","pos":[4323,4331]},{"content":"Byte Classification","pos":[4336,4355]}],"content":"---\ntitle: \"_mbbtype, _mbbtype_l | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\napiname: \n  - \"_mbbtype\"\n  - \"_mbbtype_l\"\napilocation: \n  - \"msvcrt.dll\"\n  - \"msvcr80.dll\"\n  - \"msvcr90.dll\"\n  - \"msvcr100.dll\"\n  - \"msvcr100_clr0400.dll\"\n  - \"msvcr110.dll\"\n  - \"msvcr110_clr0400.dll\"\n  - \"msvcr120.dll\"\n  - \"msvcr120_clr0400.dll\"\n  - \"ucrtbase.dll\"\n  - \"api-ms-win-crt-multibyte-l1-1-0.dll\"\napitype: \"DLLExport\"\nf1_keywords: \n  - \"_mbbtype_l\"\n  - \"mbbtype\"\n  - \"mbbtype_l\"\n  - \"_mbbtype\"\ndev_langs: \n  - \"C++\"\n  - \"C\"\nhelpviewer_keywords: \n  - \"_mbbtype function\"\n  - \"_mbbtype_l function\"\n  - \"mbbtype function\"\n  - \"mbbtype_l function\"\nms.assetid: b8e34b40-842a-4298-aa39-0bd2d8e51c2a\ncaps.latest.revision: 18\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# _mbbtype, _mbbtype_l\nReturns the byte type, based on the previous byte.  \n  \n> [!IMPORTANT]\n>  This API cannot be used in applications that execute in the [!INCLUDE[wrt](../../atl/reference/includes/wrt_md.md)]. For more information, see [CRT functions not supported with /ZW](http://msdn.microsoft.com/library/windows/apps/jj606124.aspx).  \n  \n## Syntax  \n  \n```  \nint _mbbtype(  \n   unsigned char c,  \n   int type   \n);  \nint _mbbtype_l(  \n   unsigned char c,  \n   int type,  \n   _locale_t locale  \n);  \n```  \n  \n#### Parameters  \n `c`  \n The character to test.  \n  \n `type`  \n The type of byte to test for.  \n  \n `locale`  \n The locale to use.  \n  \n## Return Value  \n `_mbbtype` returns the type of byte in a string. This decision is context-sensitive, as specified by the value of `type`, which provides the control test condition. `type` is the type of the previous byte in the string. The manifest constants in the following table are defined in Mbctype.h.  \n  \n|Value of `type`|`_mbbtype` tests for|Return value|`c`|  \n|---------------------|--------------------------|------------------|---------|  \n|Any value except 1|Valid single byte or lead byte|`_MBC_SINGLE` (0)|Single byte (0x20 – 0x7E, 0xA1 – 0xDF)|  \n|Any value except 1|Valid single byte or lead byte|`_MBC_LEAD` (1)|Lead byte of multibyte character (0x81 – 0x9F, 0xE0 – 0xFC)|  \n|Any value except 1|Valid single-byte or lead byte|`_MBC_ILLEGAL`<br /><br /> ( –1)|Invalid character (any value except 0x20 – 0x7E, 0xA1 – 0xDF, 0x81 – 0x9F, 0xE0 – 0xFC|  \n|1|Valid trail byte|`_MBC_TRAIL` (2)|Trailing byte of multibyte character (0x40 – 0x7E, 0x80 – 0xFC)|  \n|1|Valid trail byte|`_MBC_ILLEGAL`<br /><br /> ( –1)|Invalid character (any value except 0x20 – 0x7E, 0xA1 – 0xDF, 0x81 – 0x9F, 0xE0 – 0xFC|  \n  \n## Remarks  \n The `_mbbtype` function determines the type of a byte in a multibyte character. If the value of `type` is any value except 1, `_mbbtype` tests for a valid single-byte or lead byte of a multibyte character. If the value of `type` is 1, `_mbbtype` tests for a valid trail byte of a multibyte character.  \n  \n The output value is affected by the setting of the `LC_CTYPE` category setting of the locale; see [setlocale, _wsetlocale](../../c-runtime-library/reference/setlocale-wsetlocale.md) for more information. The `_mbbtype` version of this function uses the current locale for this locale-dependent behavior; the `_mbbtype_l` version is identical except that it use the locale parameter that's passed in instead. For more information, see [Locale](../../c-runtime-library/locale.md).  \n  \n In earlier versions, `_mbbtype` was named `chkctype`. For new code, use `_mbbtype` instead.  \n  \n## Requirements  \n  \n|Routine|Required header|Optional header|  \n|-------------|---------------------|---------------------|  \n|`_mbbtype`|\\<mbstring.h>|\\<mbctype.h>*|  \n|`_mbbtype_l`|\\<mbstring.h>|\\<mbctype.h>*|  \n  \n \\* For definitions of manifest constants that are used as return values.  \n  \n For more compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md).  \n  \n## .NET Framework Equivalent  \n Not applicable, but see [System::Globalization::CultureInfo](https://msdn.microsoft.com/en-us/library/system.globalization.cultureinfo.aspx).  \n  \n## See Also  \n [Byte Classification](../../c-runtime-library/byte-classification.md)"}