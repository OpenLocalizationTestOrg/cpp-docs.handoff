{"nodes":[{"pos":[12,59],"content":"hash_multiset::clear (STL-CLR) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"hash_multiset::clear (STL-CLR) | Microsoft Docs","pos":[0,47]}]},{"content":"hash_multiset::clear (STL/CLR)","pos":[642,672]},{"content":"Removes all elements.","pos":[673,694]},{"content":"Syntax","pos":[703,709]},{"content":"Remarks","pos":[749,756]},{"content":"The member function effectively calls <bpt id=\"p1\">[</bpt>hash_multiset::erase (STL/CLR)<ept id=\"p1\">](../dotnet/hash-multiset-erase-stl-clr.md)</ept><ph id=\"ph1\">`(`</ph> <bpt id=\"p2\">[</bpt>hash_multiset::begin (STL/CLR)<ept id=\"p2\">](../dotnet/hash-multiset-begin-stl-clr.md)</ept><ph id=\"ph2\">`(),`</ph> <bpt id=\"p3\">[</bpt>hash_multiset::end (STL/CLR)<ept id=\"p3\">](../dotnet/hash-multiset-end-stl-clr.md)</ept><ph id=\"ph3\">`())`</ph>.","pos":[760,1032],"source":"The member function effectively calls [hash_multiset::erase (STL/CLR)](../dotnet/hash-multiset-erase-stl-clr.md)`(` [hash_multiset::begin (STL/CLR)](../dotnet/hash-multiset-begin-stl-clr.md)`(),` [hash_multiset::end (STL/CLR)](../dotnet/hash-multiset-end-stl-clr.md)`())`."},{"content":"You use it to ensure that the controlled sequence is empty.","pos":[1033,1092]},{"content":"Example","pos":[1101,1108]},{"content":"Requirements","pos":[2084,2096]},{"pos":[2100,2130],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> <ph id=\"ph1\">\\&lt;</ph>cliext/hash_set&gt;","source":"**Header:** \\<cliext/hash_set>"},{"pos":[2137,2158],"content":"<bpt id=\"p1\">**</bpt>Namespace:<ept id=\"p1\">**</ept> cliext","source":"**Namespace:** cliext"},{"content":"See Also","pos":[2167,2175]},{"content":"hash_multiset (STL/CLR)","pos":[2180,2203]},{"content":"hash_multiset::erase (STL/CLR)","pos":[2246,2276]}],"content":"---\ntitle: \"hash_multiset::clear (STL-CLR) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"cliext::hash_multiset::clear\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"clear member [STL/CLR]\"\nms.assetid: 2253d5e3-38e6-4ad4-aff4-b546fe95830f\ncaps.latest.revision: 16\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# hash_multiset::clear (STL/CLR)\nRemoves all elements.  \n  \n## Syntax  \n  \n```  \nvoid clear();  \n```  \n  \n## Remarks  \n The member function effectively calls [hash_multiset::erase (STL/CLR)](../dotnet/hash-multiset-erase-stl-clr.md)`(` [hash_multiset::begin (STL/CLR)](../dotnet/hash-multiset-begin-stl-clr.md)`(),` [hash_multiset::end (STL/CLR)](../dotnet/hash-multiset-end-stl-clr.md)`())`. You use it to ensure that the controlled sequence is empty.  \n  \n## Example  \n  \n```  \n// cliext_hash_multiset_clear.cpp   \n// compile with: /clr   \n#include <cliext/hash_set>   \n  \ntypedef cliext::hash_multiset<wchar_t> Myhash_multiset;   \nint main()   \n    {   \n    Myhash_multiset c1;   \n    c1.insert(L'a');   \n    c1.insert(L'b');   \n    c1.insert(L'c');   \n  \n// display initial contents \" a b c\"   \n    for each (wchar_t elem in c1)   \n        System::Console::Write(\" {0}\", elem);   \n    System::Console::WriteLine();   \n  \n// clear the container and reinspect   \n    c1.clear();   \n    System::Console::WriteLine(\"size() = {0}\", c1.size());   \n  \n// add elements and clear again   \n    c1.insert(L'a');   \n    c1.insert(L'b');   \n  \n    for each (wchar_t elem in c1)   \n        System::Console::Write(\" {0}\", elem);   \n    System::Console::WriteLine();   \n    c1.clear();   \n    System::Console::WriteLine(\"size() = {0}\", c1.size());   \n    return (0);   \n    }  \n  \n```  \n  \n```Output  \n a b c  \nsize() = 0  \n a b  \nsize() = 0  \n```  \n  \n## Requirements  \n **Header:** \\<cliext/hash_set>  \n  \n **Namespace:** cliext  \n  \n## See Also  \n [hash_multiset (STL/CLR)](../dotnet/hash-multiset-stl-clr.md)   \n [hash_multiset::erase (STL/CLR)](../dotnet/hash-multiset-erase-stl-clr.md)"}