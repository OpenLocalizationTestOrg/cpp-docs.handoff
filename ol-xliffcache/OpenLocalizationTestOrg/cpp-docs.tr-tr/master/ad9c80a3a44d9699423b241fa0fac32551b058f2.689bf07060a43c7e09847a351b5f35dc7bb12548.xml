{"nodes":[{"pos":[12,36],"content":"_chsize | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"_chsize | Microsoft Docs","pos":[0,24]}]},{"pos":[997,1004],"content":"_chsize","linkify":"_chsize","nodes":[{"content":"_chsize","pos":[0,7]}]},{"content":"Changes the size of a file.","pos":[1005,1032]},{"content":"A more secure version is available; see <bpt id=\"p1\">[</bpt>_chsize_s<ept id=\"p1\">](../../c-runtime-library/reference/chsize-s.md)</ept>.","pos":[1033,1132],"source":" A more secure version is available; see [_chsize_s](../../c-runtime-library/reference/chsize-s.md)."},{"pos":[1141,1147],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[1223,1233],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"File descriptor referring to an open file.","pos":[1245,1287]},{"content":"New length of the file in bytes.","pos":[1304,1336]},{"pos":[1345,1357],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"<ph id=\"ph1\">`_chsize`</ph> returns the value 0 if the file size is successfully changed.","pos":[1361,1432],"source":"`_chsize` returns the value 0 if the file size is successfully changed."},{"content":"A return value of –1 indicates an error: <ph id=\"ph1\">`errno`</ph> is set to <ph id=\"ph2\">`EACCES`</ph> if the specified file is locked against access, to <ph id=\"ph3\">`EBADF`</ph> if the specified file is read-only or the descriptor is invalid, <ph id=\"ph4\">`ENOSPC`</ph> if no space is left on the device, or <ph id=\"ph5\">`EINVAL`</ph> if <ph id=\"ph6\">`size`</ph> is less than zero.","pos":[1433,1709],"source":" A return value of –1 indicates an error: `errno` is set to `EACCES` if the specified file is locked against access, to `EBADF` if the specified file is read-only or the descriptor is invalid, `ENOSPC` if no space is left on the device, or `EINVAL` if `size` is less than zero."},{"pos":[1716,1891],"content":"See <bpt id=\"p1\">[</bpt>_doserrno, errno, _sys_errlist, and _sys_nerr<ept id=\"p1\">](../../c-runtime-library/errno-doserrno-sys-errlist-and-sys-nerr.md)</ept> for more information on these, and other, return codes.","source":"See [_doserrno, errno, _sys_errlist, and _sys_nerr](../../c-runtime-library/errno-doserrno-sys-errlist-and-sys-nerr.md) for more information on these, and other, return codes."},{"pos":[1900,1907],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The <ph id=\"ph1\">`_chsize`</ph> function extends or truncates the file associated with <ph id=\"ph2\">`fd`</ph> to the length specified by <ph id=\"ph3\">`size`</ph>.","pos":[1911,2019],"source":"The `_chsize` function extends or truncates the file associated with `fd` to the length specified by `size`."},{"content":"The file must be open in a mode that permits writing.","pos":[2020,2073]},{"content":"Null characters ('\\0') are appended if the file is extended.","pos":[2074,2134]},{"content":"If the file is truncated, all data from the end of the shortened file to the original length of the file is lost.","pos":[2135,2248]},{"content":"This function validates its parameters.","pos":[2255,2294]},{"content":"If <ph id=\"ph1\">`size`</ph> is less than zero or <ph id=\"ph2\">`fd`</ph> is a bad file descriptor, the invalid parameter handler is invoked, as described in <bpt id=\"p1\">[</bpt>Parameter Validation<ept id=\"p1\">](../../c-runtime-library/parameter-validation.md)</ept>.","pos":[2295,2487],"source":" If `size` is less than zero or `fd` is a bad file descriptor, the invalid parameter handler is invoked, as described in [Parameter Validation](../../c-runtime-library/parameter-validation.md)."},{"pos":[2496,2508],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"content":"Routine","pos":[2515,2522]},{"content":"Required header","pos":[2523,2538]},{"content":"Optional header","pos":[2539,2554]},{"content":"<ph id=\"ph1\">\\&lt;</ph>io.h&gt;","pos":[2631,2638],"source":"\\<io.h>"},{"content":"<ph id=\"ph1\">\\&lt;</ph>errno.h&gt;","pos":[2639,2649],"source":"\\<errno.h>"},{"pos":[2657,2775],"content":"For more compatibility information, see <bpt id=\"p1\">[</bpt>Compatibility<ept id=\"p1\">](../../c-runtime-library/compatibility.md)</ept> in the Introduction.","source":"For more compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md) in the Introduction."},{"pos":[2784,2791],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[3746,3771],"content":".NET Framework Equivalent","linkify":".NET Framework Equivalent","nodes":[{"content":".NET Framework Equivalent","pos":[0,25]}]},{"pos":[3781,3886],"content":"<bpt id=\"p1\">[</bpt>System::IO::Stream::SetLength<ept id=\"p1\">](https://msdn.microsoft.com/en-us/library/system.io.stream.setlength.aspx)</ept>","source":"[System::IO::Stream::SetLength](https://msdn.microsoft.com/en-us/library/system.io.stream.setlength.aspx)"},{"pos":[3896,4009],"content":"<bpt id=\"p1\">[</bpt>System::IO::FileStream::SetLength<ept id=\"p1\">](https://msdn.microsoft.com/en-us/library/system.io.filestream.setlength.aspx)</ept>","source":"[System::IO::FileStream::SetLength](https://msdn.microsoft.com/en-us/library/system.io.filestream.setlength.aspx)"},{"pos":[4018,4026],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>File Handling<ept id=\"p1\">](../../c-runtime-library/file-handling.md)</ept><ph id=\"ph1\"> </ph>","pos":[4030,4088],"source":"[File Handling](../../c-runtime-library/file-handling.md) "},{"content":"<bpt id=\"p1\"> [</bpt>_close<ept id=\"p1\">](../../c-runtime-library/reference/close.md)</ept><ph id=\"ph1\"> </ph>","pos":[4091,4145],"source":" [_close](../../c-runtime-library/reference/close.md) "},{"content":"<bpt id=\"p1\"> [</bpt>_sopen, _wsopen<ept id=\"p1\">](../../c-runtime-library/reference/sopen-wsopen.md)</ept><ph id=\"ph1\"> </ph>","pos":[4148,4218],"source":" [_sopen, _wsopen](../../c-runtime-library/reference/sopen-wsopen.md) "},{"content":"<bpt id=\"p1\"> [</bpt>_open, _wopen<ept id=\"p1\">](../../c-runtime-library/reference/open-wopen.md)</ept>","pos":[4221,4286],"source":" [_open, _wopen](../../c-runtime-library/reference/open-wopen.md)"}],"content":"---\ntitle: \"_chsize | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\napiname: \n  - \"_chsize\"\napilocation: \n  - \"msvcrt.dll\"\n  - \"msvcr80.dll\"\n  - \"msvcr90.dll\"\n  - \"msvcr100.dll\"\n  - \"msvcr100_clr0400.dll\"\n  - \"msvcr110.dll\"\n  - \"msvcr110_clr0400.dll\"\n  - \"msvcr120.dll\"\n  - \"msvcr120_clr0400.dll\"\n  - \"ucrtbase.dll\"\n  - \"api-ms-win-crt-stdio-l1-1-0.dll\"\napitype: \"DLLExport\"\nf1_keywords: \n  - \"_chsize\"\ndev_langs: \n  - \"C++\"\n  - \"C\"\nhelpviewer_keywords: \n  - \"size\"\n  - \"_chsize function\"\n  - \"size, changing file\"\n  - \"files [C++], changing size\"\n  - \"chsize function\"\nms.assetid: b3e881c5-7b27-4837-a3d4-c51591ab10ff\ncaps.latest.revision: 21\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# _chsize\nChanges the size of a file. A more secure version is available; see [_chsize_s](../../c-runtime-library/reference/chsize-s.md).  \n  \n## Syntax  \n  \n```  \nint _chsize(   \n   int fd,  \n   long size   \n);  \n```  \n  \n#### Parameters  \n `fd`  \n File descriptor referring to an open file.  \n  \n `size`  \n New length of the file in bytes.  \n  \n## Return Value  \n `_chsize` returns the value 0 if the file size is successfully changed. A return value of –1 indicates an error: `errno` is set to `EACCES` if the specified file is locked against access, to `EBADF` if the specified file is read-only or the descriptor is invalid, `ENOSPC` if no space is left on the device, or `EINVAL` if `size` is less than zero.  \n  \n See [_doserrno, errno, _sys_errlist, and _sys_nerr](../../c-runtime-library/errno-doserrno-sys-errlist-and-sys-nerr.md) for more information on these, and other, return codes.  \n  \n## Remarks  \n The `_chsize` function extends or truncates the file associated with `fd` to the length specified by `size`. The file must be open in a mode that permits writing. Null characters ('\\0') are appended if the file is extended. If the file is truncated, all data from the end of the shortened file to the original length of the file is lost.  \n  \n This function validates its parameters. If `size` is less than zero or `fd` is a bad file descriptor, the invalid parameter handler is invoked, as described in [Parameter Validation](../../c-runtime-library/parameter-validation.md).  \n  \n## Requirements  \n  \n|Routine|Required header|Optional header|  \n|-------------|---------------------|---------------------|  \n|`_chsize`|\\<io.h>|\\<errno.h>|  \n  \n For more compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md) in the Introduction.  \n  \n## Example  \n  \n```  \n// crt_chsize.c  \n// This program uses _filelength to report the size  \n// of a file before and after modifying it with _chsize.  \n  \n#include <io.h>  \n#include <fcntl.h>  \n#include <sys/types.h>  \n#include <sys/stat.h>  \n#include <stdio.h>  \n#include <share.h>  \n  \nint main( void )  \n{  \n   int fh, result;  \n   unsigned int nbytes = BUFSIZ;  \n  \n   // Open a file   \n   if( _sopen_s( &fh, \"data\", _O_RDWR | _O_CREAT, _SH_DENYNO,  \n                 _S_IREAD | _S_IWRITE ) == 0 )  \n   {  \n      printf( \"File length before: %ld\\n\", _filelength( fh ) );  \n      if( ( result = _chsize( fh, 329678 ) ) == 0 )  \n         printf( \"Size successfully changed\\n\" );  \n      else  \n         printf( \"Problem in changing the size\\n\" );  \n      printf( \"File length after:  %ld\\n\", _filelength( fh ) );  \n      _close( fh );  \n   }  \n}  \n```  \n  \n```Output  \nFile length before: 0  \nSize successfully changed  \nFile length after:  329678  \n```  \n  \n## .NET Framework Equivalent  \n  \n-   [System::IO::Stream::SetLength](https://msdn.microsoft.com/en-us/library/system.io.stream.setlength.aspx)  \n  \n-   [System::IO::FileStream::SetLength](https://msdn.microsoft.com/en-us/library/system.io.filestream.setlength.aspx)  \n  \n## See Also  \n [File Handling](../../c-runtime-library/file-handling.md)   \n [_close](../../c-runtime-library/reference/close.md)   \n [_sopen, _wsopen](../../c-runtime-library/reference/sopen-wsopen.md)   \n [_open, _wopen](../../c-runtime-library/reference/open-wopen.md)"}