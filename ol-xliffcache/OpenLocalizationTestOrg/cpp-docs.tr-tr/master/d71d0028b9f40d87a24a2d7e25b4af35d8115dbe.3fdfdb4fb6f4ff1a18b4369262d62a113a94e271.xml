{"nodes":[{"pos":[12,44],"content":"CDialogEx Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"CDialogEx Class | Microsoft Docs","pos":[0,32]}]},{"content":"CDialogEx Class","pos":[645,660]},{"pos":[661,751],"content":"The <ph id=\"ph1\">`CDialogEx`</ph> class specifies the background color and background image of a dialog box.","source":"The `CDialogEx` class specifies the background color and background image of a dialog box."},{"content":"Syntax","pos":[760,766]},{"content":"Members","pos":[825,832]},{"content":"Public Constructors","pos":[842,861]},{"content":"Name","pos":[868,872]},{"content":"Description","pos":[873,884]},{"content":"CDialogEx::CDialogEx","pos":[923,943]},{"pos":[968,1000],"content":"Constructs a <ph id=\"ph1\">`CDialogEx`</ph> object.","source":"Constructs a `CDialogEx` object."},{"content":"Destructor.","pos":[1029,1040]},{"content":"Public Methods","pos":[1051,1065]},{"content":"Name","pos":[1072,1076]},{"content":"Description","pos":[1077,1088]},{"content":"CDialogEx::SetBackgroundColor","pos":[1127,1156]},{"content":"Sets the background color of the dialog box.","pos":[1190,1234]},{"content":"CDialogEx::SetBackgroundImage","pos":[1240,1269]},{"content":"Sets the background image of the dialog box.","pos":[1303,1347]},{"content":"Remarks","pos":[1357,1364]},{"pos":[1368,1485],"content":"To use the <ph id=\"ph1\">`CDialogEx`</ph> class, derive your dialog box class from the <ph id=\"ph2\">`CDialogEx`</ph> class instead of the <ph id=\"ph3\">`CDialog`</ph> class.","source":"To use the `CDialogEx` class, derive your dialog box class from the `CDialogEx` class instead of the `CDialog` class."},{"content":"Dialog box images are stored in a resource file.","pos":[1492,1540]},{"content":"The framework automatically deletes any image that is loaded from the resource file.","pos":[1541,1625]},{"content":"To programmatically delete the current background image, call the <bpt id=\"p1\">[</bpt>CDialogEx::SetBackgroundImage<ept id=\"p1\">](#cdialogex__setbackgroundimage)</ept> method or implement an <ph id=\"ph1\">`OnDestroy`</ph> event handler.","pos":[1626,1805],"source":" To programmatically delete the current background image, call the [CDialogEx::SetBackgroundImage](#cdialogex__setbackgroundimage) method or implement an `OnDestroy` event handler."},{"content":"When you call the <bpt id=\"p1\">[</bpt>CDialogEx::SetBackgroundImage<ept id=\"p1\">](#cdialogex__setbackgroundimage)</ept> method, pass in an <ph id=\"ph1\">`HBITMAP`</ph> parameter as the image handle.","pos":[1806,1947],"source":" When you call the [CDialogEx::SetBackgroundImage](#cdialogex__setbackgroundimage) method, pass in an `HBITMAP` parameter as the image handle."},{"content":"The <ph id=\"ph1\">`CDialogEx`</ph> object will take ownership of the image and delete it if the <ph id=\"ph2\">`m_bAutoDestroyBmp`</ph> flag is <ph id=\"ph3\">`TRUE`</ph>.","pos":[1948,2060],"source":" The `CDialogEx` object will take ownership of the image and delete it if the `m_bAutoDestroyBmp` flag is `TRUE`."},{"content":"A <ph id=\"ph1\">`CDialogEx`</ph> object can be a parent of a <bpt id=\"p1\">[</bpt>CMFCPopupMenu Class<ept id=\"p1\">](../../mfc/reference/cmfcpopupmenu-class.md)</ept> object.","pos":[2067,2182],"source":"A `CDialogEx` object can be a parent of a [CMFCPopupMenu Class](../../mfc/reference/cmfcpopupmenu-class.md) object."},{"content":"The <bpt id=\"p1\">[</bpt>CMFCPopupMenu Class<ept id=\"p1\">](../../mfc/reference/cmfcpopupmenu-class.md)</ept> object calls the <ph id=\"ph1\">`CDialogEx::SetActiveMenu`</ph> method when the <bpt id=\"p2\">[</bpt>CMFCPopupMenu Class<ept id=\"p2\">](../../mfc/reference/cmfcpopupmenu-class.md)</ept> object opens.","pos":[2183,2392],"source":" The [CMFCPopupMenu Class](../../mfc/reference/cmfcpopupmenu-class.md) object calls the `CDialogEx::SetActiveMenu` method when the [CMFCPopupMenu Class](../../mfc/reference/cmfcpopupmenu-class.md) object opens."},{"content":"Afterward, the <ph id=\"ph1\">`CDialogEx`</ph> object handles any menu event until the <bpt id=\"p1\">[</bpt>CMFCPopupMenu Class<ept id=\"p1\">](../../mfc/reference/cmfcpopupmenu-class.md)</ept> object is closed.","pos":[2393,2543],"source":" Afterward, the `CDialogEx` object handles any menu event until the [CMFCPopupMenu Class](../../mfc/reference/cmfcpopupmenu-class.md) object is closed."},{"content":"Inheritance Hierarchy","pos":[2552,2573]},{"content":"CObject","pos":[2578,2585]},{"content":"CCmdTarget","pos":[2632,2642]},{"content":"CWnd","pos":[2692,2696]},{"content":"CDialog","pos":[2740,2747]},{"content":"CDialogEx","pos":[2794,2803]},{"content":"Requirements","pos":[2853,2865]},{"pos":[2869,2894],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> afxdialogex.h","source":"**Header:** afxdialogex.h"},{"pos":[2941,2961],"content":"CDialogEx::CDialogEx"},{"pos":[2965,2997],"content":"Constructs a <ph id=\"ph1\">`CDialogEx`</ph> object.","source":"Constructs a `CDialogEx` object."},{"content":"Parameters","pos":[3156,3166]},{"content":"[in]","pos":[3170,3174]},{"content":"The resource ID of a dialog box template.","pos":[3192,3233]},{"content":"[in]","pos":[3240,3244]},{"content":"The resource name of a dialog box template.","pos":[3267,3310]},{"content":"[in]","pos":[3317,3321]},{"content":"A pointer to the parent window.","pos":[3335,3366]},{"content":"The default value is <ph id=\"ph1\">`NULL`</ph>.","pos":[3367,3395],"source":" The default value is `NULL`."},{"content":"[in]","pos":[3402,3406]},{"content":"A pointer to the parent window.","pos":[3423,3454]},{"content":"The default value is <ph id=\"ph1\">`NULL`</ph>.","pos":[3455,3483],"source":" The default value is `NULL`."},{"content":"Return Value","pos":[3493,3505]},{"content":"Remarks","pos":[3515,3522]},{"pos":[3578,3607],"content":"CDialogEx::SetBackgroundColor"},{"content":"Sets the background color of the dialog box.","pos":[3611,3655]},{"content":"Parameters","pos":[3752,3762]},{"content":"[in]","pos":[3766,3770]},{"content":"An RGB color value.","pos":[3782,3801]},{"content":"[in]","pos":[3808,3812]},{"content":"to immediately update the screen; otherwise, <ph id=\"ph1\">`FALSE`</ph>.","pos":[3834,3887],"source":" to immediately update the screen; otherwise, `FALSE`."},{"content":"The default value is <ph id=\"ph1\">`TRUE`</ph>.","pos":[3888,3916],"source":" The default value is `TRUE`."},{"content":"Remarks","pos":[3926,3933]},{"pos":[3989,4018],"content":"CDialogEx::SetBackgroundImage"},{"content":"Sets the background image of the dialog box.","pos":[4022,4066]},{"content":"Parameters","pos":[4364,4374]},{"content":"[in]","pos":[4378,4382]},{"content":"A handle to the background image.","pos":[4396,4429]},{"content":"[in]","pos":[4436,4440]},{"content":"The resource ID of the background image.","pos":[4457,4497]},{"content":"[in]","pos":[4504,4508]},{"content":"One of the <ph id=\"ph1\">`CDialogEx::BackgroundLocation`</ph> values that specify the location of the image.","pos":[4523,4612],"source":" One of the `CDialogEx::BackgroundLocation` values that specify the location of the image."},{"content":"Valid values include BACKGR_TILE, BACKGR_TOPLEFT, BACKGR_TOPRIGHT, BACKGR_BOTTOMLEFT, and BACKGR_BOTTOMRIGHT.","pos":[4613,4722]},{"content":"The default value is BACKGR_TILE.","pos":[4723,4756]},{"content":"[in]","pos":[4763,4767]},{"content":"to automatically destroy the background image; otherwise, <ph id=\"ph1\">`FALSE`</ph>.","pos":[4793,4859],"source":" to automatically destroy the background image; otherwise, `FALSE`."},{"content":"[in]","pos":[4866,4870]},{"content":"to immediately redraw the dialog box; otherwise, <ph id=\"ph1\">`FALSE`</ph>.","pos":[4892,4949],"source":" to immediately redraw the dialog box; otherwise, `FALSE`."},{"content":"Return Value","pos":[4959,4971]},{"pos":[4975,5068],"content":"In the second method overload syntax, <ph id=\"ph1\">`TRUE`</ph> if the method is successful; otherwise, <ph id=\"ph2\">`FALSE`</ph>.","source":"In the second method overload syntax, `TRUE` if the method is successful; otherwise, `FALSE`."},{"content":"Remarks","pos":[5078,5085]},{"content":"The image that you specify is not stretched to fit the dialog box client area.","pos":[5089,5167]},{"content":"See Also","pos":[5176,5184]},{"content":"Hierarchy Chart","pos":[5189,5204]},{"content":"Classes","pos":[5241,5248]},{"content":"CMFCPopupMenu Class","pos":[5291,5310]},{"content":"CContextMenuManager Class","pos":[5361,5386]}],"content":"---\ntitle: \"CDialogEx Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"CDialogEx\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"CDialogEx class\"\n  - \"CDialogEx::PreTranslateMessage method\"\nms.assetid: a6ed3b1f-aef8-4b66-ac78-2160faf63c13\ncaps.latest.revision: 27\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# CDialogEx Class\nThe `CDialogEx` class specifies the background color and background image of a dialog box.  \n  \n## Syntax  \n  \n```  \nclass CDialogEx : public CDialog  \n```  \n  \n## Members  \n  \n### Public Constructors  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CDialogEx::CDialogEx](#cdialogex__cdialogex)|Constructs a `CDialogEx` object.|  \n|`CDialogEx::~CDialogEx`|Destructor.|  \n  \n### Public Methods  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CDialogEx::SetBackgroundColor](#cdialogex__setbackgroundcolor)|Sets the background color of the dialog box.|  \n|[CDialogEx::SetBackgroundImage](#cdialogex__setbackgroundimage)|Sets the background image of the dialog box.|  \n  \n## Remarks  \n To use the `CDialogEx` class, derive your dialog box class from the `CDialogEx` class instead of the `CDialog` class.  \n  \n Dialog box images are stored in a resource file. The framework automatically deletes any image that is loaded from the resource file. To programmatically delete the current background image, call the [CDialogEx::SetBackgroundImage](#cdialogex__setbackgroundimage) method or implement an `OnDestroy` event handler. When you call the [CDialogEx::SetBackgroundImage](#cdialogex__setbackgroundimage) method, pass in an `HBITMAP` parameter as the image handle. The `CDialogEx` object will take ownership of the image and delete it if the `m_bAutoDestroyBmp` flag is `TRUE`.  \n  \n A `CDialogEx` object can be a parent of a [CMFCPopupMenu Class](../../mfc/reference/cmfcpopupmenu-class.md) object. The [CMFCPopupMenu Class](../../mfc/reference/cmfcpopupmenu-class.md) object calls the `CDialogEx::SetActiveMenu` method when the [CMFCPopupMenu Class](../../mfc/reference/cmfcpopupmenu-class.md) object opens. Afterward, the `CDialogEx` object handles any menu event until the [CMFCPopupMenu Class](../../mfc/reference/cmfcpopupmenu-class.md) object is closed.  \n  \n## Inheritance Hierarchy  \n [CObject](../../mfc/reference/cobject-class.md)  \n  \n [CCmdTarget](../../mfc/reference/ccmdtarget-class.md)  \n  \n [CWnd](../../mfc/reference/cwnd-class.md)  \n  \n [CDialog](../../mfc/reference/cdialog-class.md)  \n  \n [CDialogEx](../../mfc/reference/cdialogex-class.md)  \n  \n## Requirements  \n **Header:** afxdialogex.h  \n  \n##  <a name=\"cdialogex__cdialogex\"></a>  CDialogEx::CDialogEx  \n Constructs a `CDialogEx` object.  \n  \n```  \nCDialogEx(\n    UINT nIDTemplate,  \n    CWnd* pParent=NULL);\n\n \nCDialogEx(\n    LPCTSTR lpszTemplateName,  \n    CWnd* pParentWnd=NULL);\n```  \n  \n### Parameters  \n [in] `nIDTemplate`  \n The resource ID of a dialog box template.  \n  \n [in] `lpszTemplateName`  \n The resource name of a dialog box template.  \n  \n [in] `pParent`  \n A pointer to the parent window. The default value is `NULL`.  \n  \n [in] `pParentWnd`  \n A pointer to the parent window. The default value is `NULL`.  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cdialogex__setbackgroundcolor\"></a>  CDialogEx::SetBackgroundColor  \n Sets the background color of the dialog box.  \n  \n```  \nvoid SetBackgroundColor(\n    COLORREF color,  \n    BOOL bRepaint=TRUE);\n```  \n  \n### Parameters  \n [in] `color`  \n An RGB color value.  \n  \n [in] `bRepaint`  \n `TRUE` to immediately update the screen; otherwise, `FALSE`. The default value is `TRUE`.  \n  \n### Remarks  \n  \n##  <a name=\"cdialogex__setbackgroundimage\"></a>  CDialogEx::SetBackgroundImage  \n Sets the background image of the dialog box.  \n  \n```  \nvoid SetBackgroundImage(\n    HBITMAP hBitmap,  \n    BackgroundLocation location=BACKGR_TILE,  \n    BOOL bAutoDestroy=TRUE,  \n    BOOL bRepaint=TRUE);\n\n \nBOOL SetBackgroundImage(\n    UINT uiBmpResId,  \n    BackgroundLocation location=BACKGR_TILE,  \n    BOOL bRepaint=TRUE);\n```  \n  \n### Parameters  \n [in] `hBitmap`  \n A handle to the background image.  \n  \n [in] `uiBmpResId`  \n The resource ID of the background image.  \n  \n [in] `location`  \n One of the `CDialogEx::BackgroundLocation` values that specify the location of the image. Valid values include BACKGR_TILE, BACKGR_TOPLEFT, BACKGR_TOPRIGHT, BACKGR_BOTTOMLEFT, and BACKGR_BOTTOMRIGHT. The default value is BACKGR_TILE.  \n  \n [in] `bAutoDestroy`  \n `TRUE` to automatically destroy the background image; otherwise, `FALSE`.  \n  \n [in] `bRepaint`  \n `TRUE` to immediately redraw the dialog box; otherwise, `FALSE`.  \n  \n### Return Value  \n In the second method overload syntax, `TRUE` if the method is successful; otherwise, `FALSE`.  \n  \n### Remarks  \n The image that you specify is not stretched to fit the dialog box client area.  \n  \n## See Also  \n [Hierarchy Chart](../../mfc/hierarchy-chart.md)   \n [Classes](../../mfc/reference/mfc-classes.md)   \n [CMFCPopupMenu Class](../../mfc/reference/cmfcpopupmenu-class.md)   \n [CContextMenuManager Class](../../mfc/reference/ccontextmenumanager-class.md)\n"}