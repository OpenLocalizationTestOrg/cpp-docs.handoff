{"nodes":[{"pos":[12,64],"content":"Instruction Set for Inline Assembly | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Instruction Set for Inline Assembly | Microsoft Docs","pos":[0,52]}]},{"content":"Instruction Set for Inline Assembly","pos":[723,758]},{"content":"Microsoft Specific","pos":[762,780]},{"content":"The Visual C++ compiler supports all opcodes through the Pentium 4 and AMD Athlon.","pos":[784,866]},{"content":"Additional instructions supported by the target processor can be created with the <bpt id=\"p1\">[</bpt>_emit Pseudoinstruction<ept id=\"p1\">](../../assembler/inline/emit-pseudoinstruction.md)</ept>.","pos":[867,1025],"source":" Additional instructions supported by the target processor can be created with the [_emit Pseudoinstruction](../../assembler/inline/emit-pseudoinstruction.md)."},{"content":"END Microsoft Specific","pos":[1034,1056]},{"content":"See Also","pos":[1067,1075]},{"content":"Using Assembly Language in __asm Blocks","pos":[1080,1119]}],"content":"---\ntitle: \"Instruction Set for Inline Assembly | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"inline assembly [C++], instruction set\"\n  - \"instruction set [C++], inline assembly\"\n  - \"assembler [C++], instruction set\"\n  - \"instruction set [C++]\"\nms.assetid: a45b5b22-9b5f-4545-81ec-70eb8ea2ef9b\ncaps.latest.revision: 8\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Instruction Set for Inline Assembly\n## Microsoft Specific  \n The Visual C++ compiler supports all opcodes through the Pentium 4 and AMD Athlon. Additional instructions supported by the target processor can be created with the [_emit Pseudoinstruction](../../assembler/inline/emit-pseudoinstruction.md).  \n  \n **END Microsoft Specific**  \n  \n## See Also  \n [Using Assembly Language in __asm Blocks](../../assembler/inline/using-assembly-language-in-asm-blocks.md)"}