{"nodes":[{"pos":[12,58],"content":"_fullpath_dbg, _wfullpath_dbg | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"_fullpath_dbg, _wfullpath_dbg | Microsoft Docs","pos":[0,46]}]},{"pos":[1122,1151],"content":"_fullpath_dbg, _wfullpath_dbg","linkify":"_fullpath_dbg, _wfullpath_dbg","nodes":[{"content":"_fullpath_dbg, _wfullpath_dbg","pos":[0,29]}]},{"pos":[1152,1303],"content":"Versions of <bpt id=\"p1\">[</bpt>_fullpath, _wfullpath<ept id=\"p1\">](../../c-runtime-library/reference/fullpath-wfullpath.md)</ept> that use the debug version of <ph id=\"ph1\">`malloc`</ph> to allocate memory.","source":"Versions of [_fullpath, _wfullpath](../../c-runtime-library/reference/fullpath-wfullpath.md) that use the debug version of `malloc` to allocate memory."},{"pos":[1312,1318],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[1686,1696],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Pointer to a buffer containing the absolute or full path name, or <ph id=\"ph1\">`NULL`</ph>.","pos":[1713,1786],"source":" Pointer to a buffer containing the absolute or full path name, or `NULL`."},{"content":"Relative path name.","pos":[1806,1825]},{"content":"Maximum length of the absolute path name buffer (<ph id=\"ph1\">`absPath`</ph>).","pos":[1847,1907],"source":" Maximum length of the absolute path name buffer (`absPath`)."},{"content":"This length is in bytes for <ph id=\"ph1\">`_fullpath`</ph> but in wide characters (<ph id=\"ph2\">`wchar_t`</ph>) for <ph id=\"ph3\">`_wfullpath`</ph>.","pos":[1908,2000],"source":" This length is in bytes for `_fullpath` but in wide characters (`wchar_t`) for `_wfullpath`."},{"content":"Requested type of memory block: <ph id=\"ph1\">`_CLIENT_BLOCK`</ph> or <ph id=\"ph2\">`_NORMAL_BLOCK`</ph>.","pos":[2022,2089],"source":" Requested type of memory block: `_CLIENT_BLOCK` or `_NORMAL_BLOCK`."},{"content":"Pointer to the name of the source file that requested allocation operation or <ph id=\"ph1\">`NULL`</ph>.","pos":[2110,2195],"source":" Pointer to the name of the source file that requested allocation operation or `NULL`."},{"content":"Line number in the source file where the allocation operation was requested or <ph id=\"ph1\">`NULL`</ph>.","pos":[2218,2304],"source":" Line number in the source file where the allocation operation was requested or `NULL`."},{"pos":[2313,2325],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Each function returns a pointer to a buffer containing the absolute path name (<ph id=\"ph1\">`absPath`</ph>).","pos":[2329,2419],"source":"Each function returns a pointer to a buffer containing the absolute path name (`absPath`)."},{"content":"If there is an error (for example, if the value passed in <ph id=\"ph1\">`relPath`</ph> includes a drive letter that is not valid or cannot be found, or if the length of the created absolute path name (<ph id=\"ph2\">`absPath`</ph>) is greater than <ph id=\"ph3\">`maxLength`</ph>) the function returns <ph id=\"ph4\">`NULL`</ph>.","pos":[2420,2670],"source":" If there is an error (for example, if the value passed in `relPath` includes a drive letter that is not valid or cannot be found, or if the length of the created absolute path name (`absPath`) is greater than `maxLength`) the function returns `NULL`."},{"pos":[2679,2686],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The <ph id=\"ph1\">`_fullpath_dbg`</ph> and <ph id=\"ph2\">`_wfullpath_dbg`</ph> functions are identical to <ph id=\"ph3\">`_fullpath`</ph> and <ph id=\"ph4\">`_wfullpath`</ph> except that, when <bpt id=\"p1\">**</bpt>_<ept id=\"p1\">**</ept><ph id=\"ph5\">`DEBUG`</ph>is defined, these functions use the debug version of <ph id=\"ph6\">`malloc`</ph>, <ph id=\"ph7\">`_malloc_dbg`</ph>, to allocate memory if NULL is passed as the first parameter.","pos":[2690,2955],"source":"The `_fullpath_dbg` and `_wfullpath_dbg` functions are identical to `_fullpath` and `_wfullpath` except that, when **_**`DEBUG`is defined, these functions use the debug version of `malloc`, `_malloc_dbg`, to allocate memory if NULL is passed as the first parameter."},{"content":"For information on the debugging features of <ph id=\"ph1\">`_malloc_dbg`</ph>, see <bpt id=\"p1\">[</bpt>_malloc_dbg<ept id=\"p1\">](../../c-runtime-library/reference/malloc-dbg.md)</ept>.","pos":[2956,3083],"source":" For information on the debugging features of `_malloc_dbg`, see [_malloc_dbg](../../c-runtime-library/reference/malloc-dbg.md)."},{"content":"You do not need to call these functions explicitly in most cases.","pos":[3090,3155]},{"content":"Instead, you can define the <ph id=\"ph1\">`_CRTDBG_MAP_ALLOC`</ph> flag.","pos":[3156,3209],"source":" Instead, you can define the `_CRTDBG_MAP_ALLOC` flag."},{"content":"When <ph id=\"ph1\">`_CRTDBG_MAP_ALLOC`</ph>is defined, calls to <ph id=\"ph2\">`_fullpath`</ph> and <ph id=\"ph3\">`_wfullpath`</ph>are remapped to <ph id=\"ph4\">`_fullpath_dbg`</ph> and <ph id=\"ph5\">`_wfullpath_dbg`</ph>, respectively, with the <ph id=\"ph6\">`blockType`</ph> set to <ph id=\"ph7\">`_NORMAL_BLOCK`</ph>.","pos":[3210,3395],"source":" When `_CRTDBG_MAP_ALLOC`is defined, calls to `_fullpath` and `_wfullpath`are remapped to `_fullpath_dbg` and `_wfullpath_dbg`, respectively, with the `blockType` set to `_NORMAL_BLOCK`."},{"content":"Thus, you do not need to call these functions explicitly unless you want to mark the heap blocks as <ph id=\"ph1\">`_CLIENT_BLOCK`</ph>.","pos":[3396,3512],"source":" Thus, you do not need to call these functions explicitly unless you want to mark the heap blocks as `_CLIENT_BLOCK`."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Types of blocks on the debug heap<ept id=\"p1\">](/visualstudio/debugger/crt-debug-heap-details)</ept>.","pos":[3513,3622],"source":" For more information, see [Types of blocks on the debug heap](/visualstudio/debugger/crt-debug-heap-details)."},{"pos":[3632,3661],"content":"Generic-Text Routine Mappings","linkify":"Generic-Text Routine Mappings","nodes":[{"content":"Generic-Text Routine Mappings","pos":[0,29]}]},{"content":"Tchar.h routine","pos":[3668,3683]},{"content":"_UNICODE and _MBCS not defined","pos":[3684,3714]},{"content":"_MBCS defined","pos":[3715,3728]},{"content":"_UNICODE defined","pos":[3729,3745]},{"pos":[3935,3947],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"content":"Function","pos":[3954,3962]},{"content":"Required header","pos":[3963,3978]},{"content":"<ph id=\"ph1\">\\&lt;</ph>crtdbg.h&gt;","pos":[4040,4051],"source":"\\<crtdbg.h>"},{"content":"<ph id=\"ph1\">\\&lt;</ph>crtdbg.h&gt;","pos":[4073,4084],"source":"\\<crtdbg.h>"},{"pos":[4092,4210],"content":"For more compatibility information, see <bpt id=\"p1\">[</bpt>Compatibility<ept id=\"p1\">](../../c-runtime-library/compatibility.md)</ept> in the Introduction.","source":"For more compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md) in the Introduction."},{"pos":[4219,4244],"content":".NET Framework Equivalent","linkify":".NET Framework Equivalent","nodes":[{"content":".NET Framework Equivalent","pos":[0,25]}]},{"content":"&lt;xref:System.IO.File.Create%2A&gt;","pos":[4248,4279],"source":"<xref:System.IO.File.Create%2A>"},{"pos":[4288,4296],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>File Handling<ept id=\"p1\">](../../c-runtime-library/file-handling.md)</ept><ph id=\"ph1\"> </ph>","pos":[4300,4358],"source":"[File Handling](../../c-runtime-library/file-handling.md) "},{"content":"<bpt id=\"p1\"> [</bpt>_fullpath, _wfullpath<ept id=\"p1\">](../../c-runtime-library/reference/fullpath-wfullpath.md)</ept><ph id=\"ph1\"> </ph>","pos":[4361,4443],"source":" [_fullpath, _wfullpath](../../c-runtime-library/reference/fullpath-wfullpath.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Debug Versions of Heap Allocation Functions<ept id=\"p1\">](/visualstudio/debugger/debug-versions-of-heap-allocation-functions)</ept>","pos":[4446,4560],"source":" [Debug Versions of Heap Allocation Functions](/visualstudio/debugger/debug-versions-of-heap-allocation-functions)"}],"content":"---\ntitle: \"_fullpath_dbg, _wfullpath_dbg | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\napiname: \n  - \"_wfullpath_dbg\"\n  - \"_fullpath_dbg\"\napilocation: \n  - \"msvcrt.dll\"\n  - \"msvcr80.dll\"\n  - \"msvcr90.dll\"\n  - \"msvcr100.dll\"\n  - \"msvcr100_clr0400.dll\"\n  - \"msvcr110.dll\"\n  - \"msvcr110_clr0400.dll\"\n  - \"msvcr120.dll\"\n  - \"msvcr120_clr0400.dll\"\n  - \"ucrtbase.dll\"\napitype: \"DLLExport\"\nf1_keywords: \n  - \"wfullpath_dbg\"\n  - \"_wfullpath_dbg\"\n  - \"_fullpath_dbg\"\n  - \"fullpath_dbg\"\ndev_langs: \n  - \"C++\"\n  - \"C\"\nhelpviewer_keywords: \n  - \"_fullpath_dbg function\"\n  - \"relative file paths\"\n  - \"absolute paths\"\n  - \"fullpath_dbg function\"\n  - \"_wfullpath_dbg function\"\n  - \"wfullpath_dbg function\"\nms.assetid: 81f72f85-07da-4f5c-866a-598e0fb03f6b\ncaps.latest.revision: 16\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# _fullpath_dbg, _wfullpath_dbg\nVersions of [_fullpath, _wfullpath](../../c-runtime-library/reference/fullpath-wfullpath.md) that use the debug version of `malloc` to allocate memory.  \n  \n## Syntax  \n  \n```  \nchar *_fullpath_dbg(   \n   char *absPath,  \n   const char *relPath,  \n   size_t maxLength,  \n   int blockType,  \n   const char *filename,  \n   int linenumber   \n);  \nwchar_t *_wfullpath_dbg(   \n   wchar_t *absPath,  \n   const wchar_t *relPath,  \n   size_t maxLength,  \n   int blockType,  \n   const char *filename,  \n   int linenumber   \n);  \n```  \n  \n#### Parameters  \n `absPath`  \n Pointer to a buffer containing the absolute or full path name, or `NULL`.  \n  \n `relPath`  \n Relative path name.  \n  \n `maxLength`  \n Maximum length of the absolute path name buffer (`absPath`). This length is in bytes for `_fullpath` but in wide characters (`wchar_t`) for `_wfullpath`.  \n  \n `blockType`  \n Requested type of memory block: `_CLIENT_BLOCK` or `_NORMAL_BLOCK`.  \n  \n `filename`  \n Pointer to the name of the source file that requested allocation operation or `NULL`.  \n  \n `linenumber`  \n Line number in the source file where the allocation operation was requested or `NULL`.  \n  \n## Return Value  \n Each function returns a pointer to a buffer containing the absolute path name (`absPath`). If there is an error (for example, if the value passed in `relPath` includes a drive letter that is not valid or cannot be found, or if the length of the created absolute path name (`absPath`) is greater than `maxLength`) the function returns `NULL`.  \n  \n## Remarks  \n The `_fullpath_dbg` and `_wfullpath_dbg` functions are identical to `_fullpath` and `_wfullpath` except that, when **_**`DEBUG`is defined, these functions use the debug version of `malloc`, `_malloc_dbg`, to allocate memory if NULL is passed as the first parameter. For information on the debugging features of `_malloc_dbg`, see [_malloc_dbg](../../c-runtime-library/reference/malloc-dbg.md).  \n  \n You do not need to call these functions explicitly in most cases. Instead, you can define the `_CRTDBG_MAP_ALLOC` flag. When `_CRTDBG_MAP_ALLOC`is defined, calls to `_fullpath` and `_wfullpath`are remapped to `_fullpath_dbg` and `_wfullpath_dbg`, respectively, with the `blockType` set to `_NORMAL_BLOCK`. Thus, you do not need to call these functions explicitly unless you want to mark the heap blocks as `_CLIENT_BLOCK`. For more information, see [Types of blocks on the debug heap](/visualstudio/debugger/crt-debug-heap-details).  \n  \n### Generic-Text Routine Mappings  \n  \n|Tchar.h routine|_UNICODE and _MBCS not defined|_MBCS defined|_UNICODE defined|  \n|---------------------|--------------------------------------|--------------------|-----------------------|  \n|`_tfullpath_dbg`|`_fullpath_dbg`|`_fullpath_dbg`|`_wfullpath_dbg`|  \n  \n## Requirements  \n  \n|Function|Required header|  \n|--------------|---------------------|  \n|`_fullpath_dbg`|\\<crtdbg.h>|  \n|`_wfullpath_dbg`|\\<crtdbg.h>|  \n  \n For more compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md) in the Introduction.  \n  \n## .NET Framework Equivalent  \n <xref:System.IO.File.Create%2A>  \n  \n## See Also  \n [File Handling](../../c-runtime-library/file-handling.md)   \n [_fullpath, _wfullpath](../../c-runtime-library/reference/fullpath-wfullpath.md)   \n [Debug Versions of Heap Allocation Functions](/visualstudio/debugger/debug-versions-of-heap-allocation-functions)"}