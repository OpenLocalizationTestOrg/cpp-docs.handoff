{"nodes":[{"pos":[12,61],"content":"Variant Parameter Type Constants | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Variant Parameter Type Constants | Microsoft Docs","pos":[0,49]}]},{"pos":[1381,1413],"content":"Variant Parameter Type Constants","linkify":"Variant Parameter Type Constants","nodes":[{"content":"Variant Parameter Type Constants","pos":[0,32]}]},{"content":"This topic lists new constants that indicate variant parameter types designed for use with the OLE control classes of the Microsoft Foundation Class Library.","pos":[1414,1571]},{"content":"The following is a list of class constants:","pos":[1578,1621]},{"pos":[1631,1696],"content":"<bpt id=\"p1\">&lt;a name=\"_mfc_variant_data_constants\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept> Variant Data Constants","linkify":"<a name=\"_mfc_variant_data_constants\"></a> Variant Data Constants","source":"<a name=\"_mfc_variant_data_constants\"></a> Variant Data Constants"},{"pos":[1706,1773],"content":"<bpt id=\"p1\">**</bpt>VTS_COLOR<ept id=\"p1\">**</ept> A 32-bit integer used to represent a RGB color value.","source":"**VTS_COLOR** A 32-bit integer used to represent a RGB color value."},{"pos":[1783,1883],"content":"<bpt id=\"p1\">**</bpt>VTS_FONT<ept id=\"p1\">**</ept> A pointer to the                         <bpt id=\"p2\">**</bpt>IFontDisp<ept id=\"p2\">**</ept> interface of an OLE font object.","source":"**VTS_FONT** A pointer to the                         **IFontDisp** interface of an OLE font object."},{"pos":[1893,1931],"content":"<bpt id=\"p1\">**</bpt>VTS_HANDLE<ept id=\"p1\">**</ept> A Windows handle value.","source":"**VTS_HANDLE** A Windows handle value."},{"pos":[1941,2048],"content":"<bpt id=\"p1\">**</bpt>VTS_PICTURE<ept id=\"p1\">**</ept> A pointer to the                         <ph id=\"ph1\">`IPictureDisp`</ph> interface of an OLE picture object.","source":"**VTS_PICTURE** A pointer to the                         `IPictureDisp` interface of an OLE picture object."},{"content":"<bpt id=\"p1\">**</bpt>VTS_OPTEXCLUSIVE<ept id=\"p1\">**</ept> A 16-bit value used for a control that is intended to be used in a group of controls, such as radio buttons.","pos":[2058,2187],"source":"**VTS_OPTEXCLUSIVE** A 16-bit value used for a control that is intended to be used in a group of controls, such as radio buttons."},{"content":"This type tells the container that if one control in a group has a                         <bpt id=\"p1\">**</bpt>TRUE<ept id=\"p1\">**</ept> value, all others must be                         <bpt id=\"p2\">**</bpt>FALSE<ept id=\"p2\">**</ept>.","pos":[2188,2348],"source":" This type tells the container that if one control in a group has a                         **TRUE** value, all others must be                         **FALSE**."},{"pos":[2358,2521],"content":"<bpt id=\"p1\">**</bpt>VTS_TRISTATE<ept id=\"p1\">**</ept> A 16-bit signed integer used for properties that can have one of three possible values (selected, cleared, unavailable), for example, a check box.","source":"**VTS_TRISTATE** A 16-bit signed integer used for properties that can have one of three possible values (selected, cleared, unavailable), for example, a check box."},{"pos":[2531,2671],"content":"<bpt id=\"p1\">**</bpt>VTS_XPOS_HIMETRIC<ept id=\"p1\">**</ept> A 32-bit unsigned integer used to represent a position along the x-axis in                         <bpt id=\"p2\">**</bpt>HIMETRIC<ept id=\"p2\">**</ept> units.","source":"**VTS_XPOS_HIMETRIC** A 32-bit unsigned integer used to represent a position along the x-axis in                         **HIMETRIC** units."},{"pos":[2681,2821],"content":"<bpt id=\"p1\">**</bpt>VTS_YPOS_HIMETRIC<ept id=\"p1\">**</ept> A 32-bit unsigned integer used to represent a position along the y-axis in                         <bpt id=\"p2\">**</bpt>HIMETRIC<ept id=\"p2\">**</ept> units.","source":"**VTS_YPOS_HIMETRIC** A 32-bit unsigned integer used to represent a position along the y-axis in                         **HIMETRIC** units."},{"pos":[2831,2933],"content":"<bpt id=\"p1\">**</bpt>VTS_XPOS_PIXELS<ept id=\"p1\">**</ept> A 32-bit unsigned integer used to represent a position along the x-axis in pixels.","source":"**VTS_XPOS_PIXELS** A 32-bit unsigned integer used to represent a position along the x-axis in pixels."},{"pos":[2943,3045],"content":"<bpt id=\"p1\">**</bpt>VTS_YPOS_PIXELS<ept id=\"p1\">**</ept> A 32-bit unsigned integer used to represent a position along the y-axis in pixels.","source":"**VTS_YPOS_PIXELS** A 32-bit unsigned integer used to represent a position along the y-axis in pixels."},{"pos":[3055,3159],"content":"<bpt id=\"p1\">**</bpt>VTS_XSIZE_PIXELS<ept id=\"p1\">**</ept> A 32-bit unsigned integer used to represent the width of a screen object in pixels.","source":"**VTS_XSIZE_PIXELS** A 32-bit unsigned integer used to represent the width of a screen object in pixels."},{"pos":[3169,3274],"content":"<bpt id=\"p1\">**</bpt>VTS_YSIZE_PIXELS<ept id=\"p1\">**</ept> A 32-bit unsigned integer used to represent the height of a screen object in pixels.","source":"**VTS_YSIZE_PIXELS** A 32-bit unsigned integer used to represent the height of a screen object in pixels."},{"pos":[3284,3426],"content":"<bpt id=\"p1\">**</bpt>VTS_XSIZE_HIMETRIC<ept id=\"p1\">**</ept> A 32-bit unsigned integer used to represent the width of a screen object in                         <bpt id=\"p2\">**</bpt>HIMETRIC<ept id=\"p2\">**</ept> units.","source":"**VTS_XSIZE_HIMETRIC** A 32-bit unsigned integer used to represent the width of a screen object in                         **HIMETRIC** units."},{"pos":[3436,3579],"content":"<bpt id=\"p1\">**</bpt>VTS_YSIZE_HIMETRIC<ept id=\"p1\">**</ept> A 32-bit unsigned integer used to represent the height of a screen object in                         <bpt id=\"p2\">**</bpt>HIMETRIC<ept id=\"p2\">**</ept> units.","source":"**VTS_YSIZE_HIMETRIC** A 32-bit unsigned integer used to represent the height of a screen object in                         **HIMETRIC** units."},{"pos":[3591,4066],"content":"[!NOTE]\nAdditional variant constants have been defined for all variant types, with the exception of                             **VTS_FONT** and                             **VTS_PICTURE**, that provide a pointer to the variant data constant. These constants are named using the                             **VTS_P**`constantname` convention. For example,                             **VTS_PCOLOR** is a pointer to a                             **VTS_COLOR** constant.","leadings":["","    >  "],"nodes":[{"content":"Additional variant constants have been defined for all variant types, with the exception of                             **VTS_FONT** and                             **VTS_PICTURE**, that provide a pointer to the variant data constant. These constants are named using the                             **VTS_P**`constantname` convention. For example,                             **VTS_PCOLOR** is a pointer to a                             **VTS_COLOR** constant.","pos":[8,468],"nodes":[{"content":"Additional variant constants have been defined for all variant types, with the exception of                             <bpt id=\"p1\">**</bpt>VTS_FONT<ept id=\"p1\">**</ept> and                             <bpt id=\"p2\">**</bpt>VTS_PICTURE<ept id=\"p2\">**</ept>, that provide a pointer to the variant data constant.","pos":[0,234],"source":"Additional variant constants have been defined for all variant types, with the exception of                             **VTS_FONT** and                             **VTS_PICTURE**, that provide a pointer to the variant data constant."},{"content":"These constants are named using the                             <bpt id=\"p1\">**</bpt>VTS_P<ept id=\"p1\">**</ept><ph id=\"ph1\">`constantname`</ph> convention.","pos":[235,334],"source":" These constants are named using the                             **VTS_P**`constantname` convention."},{"content":"For example,                             <bpt id=\"p1\">**</bpt>VTS_PCOLOR<ept id=\"p1\">**</ept> is a pointer to a                             <bpt id=\"p2\">**</bpt>VTS_COLOR<ept id=\"p2\">**</ept> constant.","pos":[335,460],"source":" For example,                             **VTS_PCOLOR** is a pointer to a                             **VTS_COLOR** constant."}]}]},{"pos":[4075,4087],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[4091,4112],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> afxdisp.h","source":"**Header:** afxdisp.h"},{"pos":[4121,4129],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"pos":[4133,4200],"content":"<bpt id=\"p1\">[</bpt>Macros and Globals<ept id=\"p1\">](../../mfc/reference/mfc-macros-and-globals.md)</ept>","source":"[Macros and Globals](../../mfc/reference/mfc-macros-and-globals.md)"}],"content":"---\ntitle: \"Variant Parameter Type Constants | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"VTS_YPOS_HIMETRIC\"\n  - \"VTS_PICTURE\"\n  - \"VTS_FONT\"\n  - \"VTS_XPOS_HIMETRIC\"\n  - \"VTS_XPOS_PIXELS\"\n  - \"VTS_XSIZE_HIMETRIC\"\n  - \"VTS_YPOS_PIXELS\"\n  - \"VTS_TRISTATE\"\n  - \"VTS_HANDLE\"\n  - \"VTS_YSIZE_HIMETRIC\"\n  - \"VTS_COLOR\"\n  - \"VTS_OPTEXCLUSIVE\"\n  - \"VTS_YSIZE_PIXELS\"\n  - \"VTS_XSIZE_PIXELS\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"VTS_XPOS_HIMETRIC constant\"\n  - \"VTS_FONT constant\"\n  - \"VTS_XPOS_PIXELS constant\"\n  - \"VTS_COLOR constant\"\n  - \"Variants\"\n  - \"VTS_YPOS_PIXELS constant\"\n  - \"VTS_YSIZE_HIMETRIC constant\"\n  - \"VTS_YPOS_HIMETRIC constant\"\n  - \"Variants, parameter type constants\"\n  - \"Variant data constants\"\n  - \"VTS_PICTURE constant\"\n  - \"VTS_TRISTATE constant\"\n  - \"VTS_XSIZE_HIMETRIC constant\"\n  - \"VTS_HANDLE constant\"\n  - \"VTS_XSIZE_PIXELS constant\"\n  - \"VTS_OPTEXCLUSIVE constant\"\n  - \"VTS_YSIZE_PIXELS constant\"\nms.assetid: de99c7a9-7aae-4dc4-b723-40c6380543ab\ncaps.latest.revision: 14\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Variant Parameter Type Constants\nThis topic lists new constants that indicate variant parameter types designed for use with the OLE control classes of the Microsoft Foundation Class Library.  \n  \n The following is a list of class constants:  \n  \n##  <a name=\"_mfc_variant_data_constants\"></a> Variant Data Constants  \n  \n-   **VTS_COLOR** A 32-bit integer used to represent a RGB color value.  \n  \n-   **VTS_FONT** A pointer to the                         **IFontDisp** interface of an OLE font object.  \n  \n-   **VTS_HANDLE** A Windows handle value.  \n  \n-   **VTS_PICTURE** A pointer to the                         `IPictureDisp` interface of an OLE picture object.  \n  \n-   **VTS_OPTEXCLUSIVE** A 16-bit value used for a control that is intended to be used in a group of controls, such as radio buttons. This type tells the container that if one control in a group has a                         **TRUE** value, all others must be                         **FALSE**.  \n  \n-   **VTS_TRISTATE** A 16-bit signed integer used for properties that can have one of three possible values (selected, cleared, unavailable), for example, a check box.  \n  \n-   **VTS_XPOS_HIMETRIC** A 32-bit unsigned integer used to represent a position along the x-axis in                         **HIMETRIC** units.  \n  \n-   **VTS_YPOS_HIMETRIC** A 32-bit unsigned integer used to represent a position along the y-axis in                         **HIMETRIC** units.  \n  \n-   **VTS_XPOS_PIXELS** A 32-bit unsigned integer used to represent a position along the x-axis in pixels.  \n  \n-   **VTS_YPOS_PIXELS** A 32-bit unsigned integer used to represent a position along the y-axis in pixels.  \n  \n-   **VTS_XSIZE_PIXELS** A 32-bit unsigned integer used to represent the width of a screen object in pixels.  \n  \n-   **VTS_YSIZE_PIXELS** A 32-bit unsigned integer used to represent the height of a screen object in pixels.  \n  \n-   **VTS_XSIZE_HIMETRIC** A 32-bit unsigned integer used to represent the width of a screen object in                         **HIMETRIC** units.  \n  \n-   **VTS_YSIZE_HIMETRIC** A 32-bit unsigned integer used to represent the height of a screen object in                         **HIMETRIC** units.  \n  \n    > [!NOTE]\n    >  Additional variant constants have been defined for all variant types, with the exception of                             **VTS_FONT** and                             **VTS_PICTURE**, that provide a pointer to the variant data constant. These constants are named using the                             **VTS_P**`constantname` convention. For example,                             **VTS_PCOLOR** is a pointer to a                             **VTS_COLOR** constant.  \n  \n## Requirements  \n **Header:** afxdisp.h  \n  \n## See Also  \n [Macros and Globals](../../mfc/reference/mfc-macros-and-globals.md)\n"}