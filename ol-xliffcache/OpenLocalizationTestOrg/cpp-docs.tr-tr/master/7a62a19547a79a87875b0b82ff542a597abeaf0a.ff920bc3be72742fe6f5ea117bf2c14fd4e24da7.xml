{"nodes":[{"pos":[12,77],"content":"_vcprintf, _vcprintf_l, _vcwprintf, _vcwprintf_l | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"_vcprintf, _vcprintf_l, _vcwprintf, _vcwprintf_l | Microsoft Docs","pos":[0,65]}]},{"content":"_vcprintf, _vcprintf_l, _vcwprintf, _vcwprintf_l","pos":[1421,1469]},{"content":"Writes formatted output to the console by using a pointer to a list of arguments.","pos":[1470,1551]},{"content":"More secure versions of these functions are available, see <bpt id=\"p1\">[</bpt>_vcprintf_s, _vcprintf_s_l, _vcwprintf_s, _vcwprintf_s_l<ept id=\"p1\">](../../c-runtime-library/reference/vcprintf-s-vcprintf-s-l-vcwprintf-s-vcwprintf-s-l.md)</ept>.","pos":[1552,1758],"source":" More secure versions of these functions are available, see [_vcprintf_s, _vcprintf_s_l, _vcwprintf_s, _vcwprintf_s_l](../../c-runtime-library/reference/vcprintf-s-vcprintf-s-l-vcwprintf-s-vcwprintf-s-l.md)."},{"pos":[1766,1986],"content":"[!IMPORTANT]\n This API cannot be used in applications that execute in the Windows Runtime. For more information, see [CRT functions not supported with /ZW](http://msdn.microsoft.com/library/windows/apps/jj606124.aspx).","leadings":["","> "],"nodes":[{"content":" This API cannot be used in applications that execute in the Windows Runtime. For more information, see [CRT functions not supported with /ZW](http://msdn.microsoft.com/library/windows/apps/jj606124.aspx).","pos":[13,218],"nodes":[{"content":"This API cannot be used in applications that execute in the Windows Runtime.","pos":[1,77]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>CRT functions not supported with /ZW<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/apps/jj606124.aspx)</ept>.","pos":[78,205],"source":" For more information, see [CRT functions not supported with /ZW](http://msdn.microsoft.com/library/windows/apps/jj606124.aspx)."}]}]},{"content":"Syntax","pos":[1995,2001]},{"content":"Parameters","pos":[2351,2361]},{"content":"Format specification.","pos":[2377,2398]},{"content":"Pointer to list of arguments.","pos":[2417,2446]},{"content":"The locale to use.","pos":[2465,2483]},{"pos":[2490,2625],"content":"For more information, see <bpt id=\"p1\">[</bpt>Format Specifications<ept id=\"p1\">](../../c-runtime-library/format-specification-syntax-printf-and-wprintf-functions.md)</ept>.","source":"For more information, see [Format Specifications](../../c-runtime-library/format-specification-syntax-printf-and-wprintf-functions.md)."},{"content":"Return Value","pos":[2634,2646]},{"content":"The number of characters written, or a negative value if an output error occurs.","pos":[2650,2730]},{"content":"If <ph id=\"ph1\">`format`</ph> is a null pointer, the invalid parameter handler is invoked, as described in <bpt id=\"p1\">[</bpt>Parameter Validation<ept id=\"p1\">](../../c-runtime-library/parameter-validation.md)</ept>.","pos":[2731,2892],"source":" If `format` is a null pointer, the invalid parameter handler is invoked, as described in [Parameter Validation](../../c-runtime-library/parameter-validation.md)."},{"content":"If execution is allowed to continue, <ph id=\"ph1\">`errno`</ph> is set to <ph id=\"ph2\">`EINVAL`</ph> and -1 is returned.","pos":[2893,2976],"source":" If execution is allowed to continue, `errno` is set to `EINVAL` and -1 is returned."},{"content":"Remarks","pos":[2985,2992]},{"content":"Each of these functions takes a pointer to an argument list, then formats and writes the given data to the console.","pos":[2996,3111]},{"content":"is the wide-character version of <ph id=\"ph1\">`_vcprintf`</ph>.","pos":[3125,3170],"source":" is the wide-character version of `_vcprintf`."},{"content":"It takes a wide-character string as an argument.","pos":[3171,3219]},{"pos":[3226,3375],"content":"The versions of these functions with the <ph id=\"ph1\">`_l`</ph> suffix are identical except that they use the locale parameter passed in instead of the current locale.","source":"The versions of these functions with the `_l` suffix are identical except that they use the locale parameter passed in instead of the current locale."},{"pos":[3383,3563],"content":"[!IMPORTANT]\n Ensure that `format` is not a user-defined string. For more information, see [Avoiding Buffer Overruns](http://msdn.microsoft.com/library/windows/desktop/ms717795).","leadings":["","> "],"nodes":[{"content":" Ensure that `format` is not a user-defined string. For more information, see [Avoiding Buffer Overruns](http://msdn.microsoft.com/library/windows/desktop/ms717795).","pos":[13,178],"nodes":[{"content":"Ensure that <ph id=\"ph1\">`format`</ph> is not a user-defined string.","pos":[1,51],"source":" Ensure that `format` is not a user-defined string."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Avoiding Buffer Overruns<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms717795)</ept>.","pos":[52,165],"source":" For more information, see [Avoiding Buffer Overruns](http://msdn.microsoft.com/library/windows/desktop/ms717795)."}]}]},{"content":"Generic-Text Routine Mappings","pos":[3573,3602]},{"content":"TCHAR.H routine","pos":[3609,3624]},{"content":"_UNICODE &amp; _MBCS not defined","pos":[3625,3653],"source":"_UNICODE & _MBCS not defined"},{"content":"_MBCS defined","pos":[3654,3667]},{"content":"_UNICODE defined","pos":[3668,3684]},{"content":"Requirements","pos":[3918,3930]},{"content":"Routine","pos":[3937,3944]},{"content":"Required header","pos":[3945,3960]},{"content":"Optional headers","pos":[3961,3977]},{"pos":[4056,4057],"content":","},{"content":"conio.h&gt; and <ph id=\"ph1\">\\&lt;</ph>stdarg.h&gt;","pos":[4074,4098],"source":"conio.h> and \\<stdarg.h>"},{"content":"varargs.h&gt;*","pos":[4101,4112],"source":"varargs.h>*"},{"pos":[4129,4130],"content":","},{"content":"conio.h&gt; or <ph id=\"ph1\">\\&lt;</ph>wchar.h&gt;, and <ph id=\"ph2\">\\&lt;</ph>stdarg.h&gt;","pos":[4148,4187],"source":"conio.h> or \\<wchar.h>, and \\<stdarg.h>"},{"content":"varargs.h&gt;*","pos":[4190,4201],"source":"varargs.h>*"},{"content":"Required for UNIX V compatibility.","pos":[4212,4246]},{"pos":[4253,4357],"content":"For additional compatibility information, see <bpt id=\"p1\">[</bpt>Compatibility<ept id=\"p1\">](../../c-runtime-library/compatibility.md)</ept>.","source":"For additional compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md)."},{"content":"Example","pos":[4366,4373]},{"content":".NET Framework Equivalent","pos":[5016,5041]},{"content":"System::Console::Write","pos":[5046,5068]},{"content":"See Also","pos":[5146,5154]},{"content":"Stream I/O","pos":[5159,5169]},{"content":"vprintf Functions","pos":[5215,5232]},{"content":"_cprintf, _cprintf_l, _cwprintf, _cwprintf_l","pos":[5285,5329]},{"content":"fprintf, _fprintf_l, fwprintf, _fwprintf_l","pos":[5412,5454]},{"content":"printf, _printf_l, wprintf, _wprintf_l","pos":[5537,5575]},{"content":"sprintf, _sprintf_l, swprintf, _swprintf_l, <ph id=\"ph1\">\\_</ph>_swprintf_l","pos":[5654,5711],"source":"sprintf, _sprintf_l, swprintf, _swprintf_l, \\__swprintf_l"},{"content":"va_arg, va_copy, va_end, va_start","pos":[5805,5838]}],"content":"---\ntitle: \"_vcprintf, _vcprintf_l, _vcwprintf, _vcwprintf_l | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\napiname: \n  - \"_vcwprintf\"\n  - \"_vcprintf_l\"\n  - \"_vcwprintf_l\"\n  - \"_vcprintf\"\napilocation: \n  - \"msvcrt.dll\"\n  - \"msvcr80.dll\"\n  - \"msvcr90.dll\"\n  - \"msvcr100.dll\"\n  - \"msvcr100_clr0400.dll\"\n  - \"msvcr110.dll\"\n  - \"msvcr110_clr0400.dll\"\n  - \"msvcr120.dll\"\n  - \"msvcr120_clr0400.dll\"\n  - \"ucrtbase.dll\"\napitype: \"DLLExport\"\nf1_keywords: \n  - \"_vcwprintf_l\"\n  - \"_vtcprintf\"\n  - \"vcwprintf\"\n  - \"_vcwprintf\"\n  - \"vcprintf_l\"\n  - \"_vcprintf_l\"\n  - \"_vcprintf\"\n  - \"vcprintf\"\n  - \"vcwprintf_l\"\ndev_langs: \n  - \"C++\"\n  - \"C\"\nhelpviewer_keywords: \n  - \"vcwprintf function\"\n  - \"_vcwprintf_l function\"\n  - \"_vcprintf function\"\n  - \"_vcprintf_l function\"\n  - \"vtcprintf_l function\"\n  - \"vcprintf function\"\n  - \"vcprintf_l function\"\n  - \"_vtcprintf function\"\n  - \"_vcwprintf function\"\n  - \"_vtcprintf_l function\"\n  - \"vcwprintf_l function\"\n  - \"vtcprintf function\"\n  - \"formatted text [C++]\"\nms.assetid: 4ef8d237-6200-4b66-8731-8c57e5624bb1\ncaps.latest.revision: 28\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# _vcprintf, _vcprintf_l, _vcwprintf, _vcwprintf_l\nWrites formatted output to the console by using a pointer to a list of arguments. More secure versions of these functions are available, see [_vcprintf_s, _vcprintf_s_l, _vcwprintf_s, _vcwprintf_s_l](../../c-runtime-library/reference/vcprintf-s-vcprintf-s-l-vcwprintf-s-vcwprintf-s-l.md).  \n  \n> [!IMPORTANT]\n>  This API cannot be used in applications that execute in the Windows Runtime. For more information, see [CRT functions not supported with /ZW](http://msdn.microsoft.com/library/windows/apps/jj606124.aspx).  \n  \n## Syntax  \n  \n```  \nint _vcprintf(  \n   const char* format,  \n   va_list argptr  \n);  \nint _vcprintf_l(  \n   const char* format,  \n   locale_t locale,  \n   va_list argptr  \n);  \nint _vcwprintf(  \n   const wchar_t* format,  \n   va_list argptr  \n);  \nint _vcwprintf_l(  \n   const wchar_t* format,  \n   locale_t locale,  \n   va_list argptr  \n);  \n```  \n  \n#### Parameters  \n `format`  \n Format specification.  \n  \n `argptr`  \n Pointer to list of arguments.  \n  \n `locale`  \n The locale to use.  \n  \n For more information, see [Format Specifications](../../c-runtime-library/format-specification-syntax-printf-and-wprintf-functions.md).  \n  \n## Return Value  \n The number of characters written, or a negative value if an output error occurs. If `format` is a null pointer, the invalid parameter handler is invoked, as described in [Parameter Validation](../../c-runtime-library/parameter-validation.md). If execution is allowed to continue, `errno` is set to `EINVAL` and -1 is returned.  \n  \n## Remarks  \n Each of these functions takes a pointer to an argument list, then formats and writes the given data to the console. `_vcwprintf` is the wide-character version of `_vcprintf`. It takes a wide-character string as an argument.  \n  \n The versions of these functions with the `_l` suffix are identical except that they use the locale parameter passed in instead of the current locale.  \n  \n> [!IMPORTANT]\n>  Ensure that `format` is not a user-defined string. For more information, see [Avoiding Buffer Overruns](http://msdn.microsoft.com/library/windows/desktop/ms717795).  \n  \n### Generic-Text Routine Mappings  \n  \n|TCHAR.H routine|_UNICODE & _MBCS not defined|_MBCS defined|_UNICODE defined|  \n|---------------------|------------------------------------|--------------------|-----------------------|  \n|`_vtcprintf`|`_vcprintf`|`_vcprintf`|`_vcwprintf`|  \n|`_vtcprintf_l`|`_vcprintf_l`|`_vcprintf_l`|`_vcwprintf_l`|  \n  \n## Requirements  \n  \n|Routine|Required header|Optional headers|  \n|-------------|---------------------|----------------------|  \n|`_vcprintf`, `_vcprintf_l`|\\<conio.h> and \\<stdarg.h>|\\<varargs.h>*|  \n|`_vcwprintf`, `_vcwprintf_l`|\\<conio.h> or \\<wchar.h>, and \\<stdarg.h>|\\<varargs.h>*|  \n  \n \\* Required for UNIX V compatibility.  \n  \n For additional compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md).  \n  \n## Example  \n  \n```  \n// crt_vcprintf.cpp  \n// compile with: /c  \n#include <conio.h>  \n#include <stdarg.h>  \n  \n// An error formatting function used to print to the console.  \nint eprintf(const char* format, ...)  \n{  \n  va_list args;  \n  va_start(args, format);  \n  return _vcprintf(format, args);  \n}  \n  \nint main()  \n{  \n   eprintf(\"  (%d:%d): Error %s%d : %s\\n\", 10, 23, \"C\", 2111,  \n           \"<some error text>\");  \n   eprintf(\"  (Related to symbol '%s' defined on line %d).\\n\",  \n           \"<symbol>\", 5 );  \n}  \n```  \n  \n```Output  \n(10,23): Error C2111 : <some error text>  \n  (Related to symbol '<symbol>' defined on line 5).  \n```  \n  \n## .NET Framework Equivalent  \n [System::Console::Write](https://msdn.microsoft.com/en-us/library/system.console.write.aspx)  \n  \n## See Also  \n [Stream I/O](../../c-runtime-library/stream-i-o.md)   \n [vprintf Functions](../../c-runtime-library/vprintf-functions.md)   \n [_cprintf, _cprintf_l, _cwprintf, _cwprintf_l](../../c-runtime-library/reference/cprintf-cprintf-l-cwprintf-cwprintf-l.md)   \n [fprintf, _fprintf_l, fwprintf, _fwprintf_l](../../c-runtime-library/reference/fprintf-fprintf-l-fwprintf-fwprintf-l.md)   \n [printf, _printf_l, wprintf, _wprintf_l](../../c-runtime-library/reference/printf-printf-l-wprintf-wprintf-l.md)   \n [sprintf, _sprintf_l, swprintf, _swprintf_l, \\__swprintf_l](../../c-runtime-library/reference/sprintf-sprintf-l-swprintf-swprintf-l-swprintf-l.md)   \n [va_arg, va_copy, va_end, va_start](../../c-runtime-library/reference/va-arg-va-copy-va-end-va-start.md)"}