{"nodes":[{"pos":[12,45],"content":"CComObject Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"CComObject Class | Microsoft Docs","pos":[0,33]}]},{"pos":[702,718],"content":"CComObject Class","linkify":"CComObject Class","nodes":[{"content":"CComObject Class","pos":[0,16]}]},{"pos":[719,781],"content":"This class implements <bpt id=\"p1\">**</bpt>IUnknown<ept id=\"p1\">**</ept> for a nonaggregated object.","source":"This class implements **IUnknown** for a nonaggregated object."},{"pos":[790,796],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[874,884],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Your class, derived from <bpt id=\"p1\">[</bpt>CComObjectRoot<ept id=\"p1\">](../../atl/reference/ccomobjectroot-class.md)</ept> or <bpt id=\"p2\">[</bpt>CComObjectRootEx<ept id=\"p2\">](../../atl/reference/ccomobjectrootex-class.md)</ept>, as well as from any other interfaces you want to support on the object.","pos":[898,1126],"source":" Your class, derived from [CComObjectRoot](../../atl/reference/ccomobjectroot-class.md) or [CComObjectRootEx](../../atl/reference/ccomobjectrootex-class.md), as well as from any other interfaces you want to support on the object."},{"pos":[1135,1142],"content":"Members","linkify":"Members","nodes":[{"content":"Members","pos":[0,7]}]},{"pos":[1152,1171],"content":"Public Constructors","linkify":"Public Constructors","nodes":[{"content":"Public Constructors","pos":[0,19]}]},{"content":"Name","pos":[1178,1182]},{"content":"Description","pos":[1183,1194]},{"pos":[1232,1281],"content":"<bpt id=\"p1\">[</bpt>CComObject::CComObject<ept id=\"p1\">](#ccomobject__ccomobject)</ept>","source":"[CComObject::CComObject](#ccomobject__ccomobject)"},{"content":"The constructor.","pos":[1282,1298]},{"pos":[1303,1358],"content":"<bpt id=\"p1\">[</bpt>CComObject::~CComObject<ept id=\"p1\">](#ccomobject___dtorccomobject)</ept>","source":"[CComObject::~CComObject](#ccomobject___dtorccomobject)"},{"content":"The destructor.","pos":[1359,1374]},{"pos":[1385,1399],"content":"Public Methods","linkify":"Public Methods","nodes":[{"content":"Public Methods","pos":[0,14]}]},{"content":"Name","pos":[1406,1410]},{"content":"Description","pos":[1411,1422]},{"pos":[1460,1501],"content":"<bpt id=\"p1\">[</bpt>CComObject::AddRef<ept id=\"p1\">](#ccomobject__addref)</ept>","source":"[CComObject::AddRef](#ccomobject__addref)"},{"content":"Increments the reference count on the object.","pos":[1502,1547]},{"pos":[1552,1609],"content":"<bpt id=\"p1\">[</bpt>CComObject::CreateInstance<ept id=\"p1\">](#ccomobject__createinstance)</ept>","source":"[CComObject::CreateInstance](#ccomobject__createinstance)"},{"pos":[1610,1653],"content":"(Static) Creates a new <ph id=\"ph1\">`CComObject`</ph> object.","source":"(Static) Creates a new `CComObject` object."},{"pos":[1658,1715],"content":"<bpt id=\"p1\">[</bpt>CComObject::QueryInterface<ept id=\"p1\">](#ccomobject__queryinterface)</ept>","source":"[CComObject::QueryInterface](#ccomobject__queryinterface)"},{"content":"Retrieves a pointer to the requested interface.","pos":[1716,1763]},{"pos":[1768,1811],"content":"<bpt id=\"p1\">[</bpt>CComObject::Release<ept id=\"p1\">](#ccomobject__release)</ept>","source":"[CComObject::Release](#ccomobject__release)"},{"content":"Decrements the reference count on the object.","pos":[1812,1857]},{"pos":[1867,1874],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"<ph id=\"ph1\">`CComObject`</ph> implements <bpt id=\"p1\">[</bpt>IUnknown<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms680509)</ept> for a nonaggregated object.","pos":[1878,2000],"source":"`CComObject` implements [IUnknown](http://msdn.microsoft.com/library/windows/desktop/ms680509) for a nonaggregated object."},{"content":"However, calls to <ph id=\"ph1\">`QueryInterface`</ph>, <ph id=\"ph2\">`AddRef`</ph>, and <bpt id=\"p1\">**</bpt>Release<ept id=\"p1\">**</ept> are delegated to <ph id=\"ph3\">`CComObjectRootEx`</ph>.","pos":[2001,2099],"source":" However, calls to `QueryInterface`, `AddRef`, and **Release** are delegated to `CComObjectRootEx`."},{"pos":[2106,2249],"content":"For more information about using <ph id=\"ph1\">`CComObject`</ph>, see the article <bpt id=\"p1\">[</bpt>Fundamentals of ATL COM Objects<ept id=\"p1\">](../../atl/fundamentals-of-atl-com-objects.md)</ept>.","source":"For more information about using `CComObject`, see the article [Fundamentals of ATL COM Objects](../../atl/fundamentals-of-atl-com-objects.md)."},{"pos":[2258,2279],"content":"Inheritance Hierarchy","linkify":"Inheritance Hierarchy","nodes":[{"content":"Inheritance Hierarchy","pos":[0,21]}]},{"pos":[2317,2329],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[2333,2353],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> atlcom.h","source":"**Header:** atlcom.h"},{"pos":[2363,2416],"content":"<bpt id=\"p1\">&lt;a name=\"ccomobject__addref\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CComObject::AddRef","linkify":"<a name=\"ccomobject__addref\"></a>  CComObject::AddRef","source":"<a name=\"ccomobject__addref\"></a>  CComObject::AddRef"},{"content":"Increments the reference count on the object.","pos":[2420,2465]},{"pos":[2517,2529],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"This function returns the new incremented reference count on the object.","pos":[2533,2605]},{"content":"This value may be useful for diagnostics or testing.","pos":[2606,2658]},{"pos":[2668,2729],"content":"<bpt id=\"p1\">&lt;a name=\"ccomobject__ccomobject\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CComObject::CComObject","linkify":"<a name=\"ccomobject__ccomobject\"></a>  CComObject::CComObject","source":"<a name=\"ccomobject__ccomobject\"></a>  CComObject::CComObject"},{"content":"The constructor increments the module lock count.","pos":[2733,2782]},{"pos":[2831,2841],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"<bpt id=\"p1\">**</bpt>void<ph id=\"ph1\">\\*</ph><ept id=\"p1\">**</ept>","pos":[2845,2855],"source":"**void\\***"},{"content":"[in] This unnamed parameter is not used.","pos":[2859,2899]},{"content":"It exists for symmetry with other <bpt id=\"p1\">**</bpt>CCom<ept id=\"p1\">**</ept><bpt id=\"p2\">*</bpt>XXX<ept id=\"p2\">*</ept><ph id=\"ph1\">`Object`</ph><bpt id=\"p3\">*</bpt>XXX<ept id=\"p3\">*</ept> constructors.","pos":[2900,2974],"source":" It exists for symmetry with other **CCom***XXX*`Object`*XXX* constructors."},{"pos":[2984,2991],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The destructor decrements it.","pos":[2995,3024]},{"content":"If a <ph id=\"ph1\">`CComObject`</ph>-derived object is successfully constructed using the <bpt id=\"p1\">**</bpt>new<ept id=\"p1\">**</ept> operator, the initial reference count is 0.","pos":[3031,3153],"source":"If a `CComObject`-derived object is successfully constructed using the **new** operator, the initial reference count is 0."},{"content":"To set the reference count to the proper value (1), make a call to the <bpt id=\"p1\">[</bpt>AddRef<ept id=\"p1\">](#ccomobject__addref)</ept> function.","pos":[3154,3264],"source":" To set the reference count to the proper value (1), make a call to the [AddRef](#ccomobject__addref) function."},{"pos":[3274,3341],"content":"<bpt id=\"p1\">&lt;a name=\"ccomobject___dtorccomobject\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CComObject::~CComObject","linkify":"<a name=\"ccomobject___dtorccomobject\"></a>  CComObject::~CComObject","source":"<a name=\"ccomobject___dtorccomobject\"></a>  CComObject::~CComObject"},{"content":"The destructor.","pos":[3345,3360]},{"pos":[3397,3404],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[3408,3556],"content":"Frees all allocated resources, calls <bpt id=\"p1\">[</bpt>FinalRelease<ept id=\"p1\">](ccomobjectrootex-class.md#ccomobjectrootex__finalrelease)</ept>, and decrements the module lock count.","source":"Frees all allocated resources, calls [FinalRelease](ccomobjectrootex-class.md#ccomobjectrootex__finalrelease), and decrements the module lock count."},{"pos":[3567,3636],"content":"<bpt id=\"p1\">&lt;a name=\"ccomobject__createinstance\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CComObject::CreateInstance","linkify":"<a name=\"ccomobject__createinstance\"></a>  CComObject::CreateInstance","source":"<a name=\"ccomobject__createinstance\"></a>  CComObject::CreateInstance"},{"pos":[3640,3826],"content":"This static function allows you to create a new <bpt id=\"p1\">**</bpt>CComObject&lt;<ept id=\"p1\">**</ept><ph id=\"ph1\">`Base`</ph><bpt id=\"p2\">**</bpt><ph id=\"ph2\">&gt;</ph><ept id=\"p2\">**</ept> object, without the overhead of <bpt id=\"p3\">[</bpt>CoCreateInstance<ept id=\"p3\">](http://msdn.microsoft.com/library/windows/desktop/ms686615)</ept>.","source":"This static function allows you to create a new **CComObject<**`Base`**>** object, without the overhead of [CoCreateInstance](http://msdn.microsoft.com/library/windows/desktop/ms686615)."},{"pos":[3910,3920],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[out] A pointer to a <bpt id=\"p1\">**</bpt>CComObject&lt;<ept id=\"p1\">**</ept><ph id=\"ph1\">`Base`</ph><bpt id=\"p2\">**</bpt><ph id=\"ph2\">&gt;</ph><ept id=\"p2\">**</ept> pointer.","pos":[3932,3988],"source":" [out] A pointer to a **CComObject<**`Base`**>** pointer."},{"content":"If <ph id=\"ph1\">`CreateInstance`</ph> is unsuccessful, <ph id=\"ph2\">`pp`</ph> is set to <bpt id=\"p1\">**</bpt>NULL<ept id=\"p1\">**</ept>.","pos":[3989,4050],"source":" If `CreateInstance` is unsuccessful, `pp` is set to **NULL**."},{"pos":[4060,4072],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[4076,4103],"content":"A standard <ph id=\"ph1\">`HRESULT`</ph> value.","source":"A standard `HRESULT` value."},{"pos":[4113,4120],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[4124,4287],"content":"The object returned has a reference count of zero, so call <ph id=\"ph1\">`AddRef`</ph> immediately, then use <bpt id=\"p1\">**</bpt>Release<ept id=\"p1\">**</ept> to free the reference on the object pointer when you're done.","source":"The object returned has a reference count of zero, so call `AddRef` immediately, then use **Release** to free the reference on the object pointer when you're done."},{"pos":[4294,4536],"content":"If you do not need direct access to the object, but still want to create a new object without the overhead of <ph id=\"ph1\">`CoCreateInstance`</ph>, use <bpt id=\"p1\">[</bpt>CComCoClass::CreateInstance<ept id=\"p1\">](../../atl/reference/ccomcoclass-class.md#ccomcoclass__createinstance)</ept> instead.","source":"If you do not need direct access to the object, but still want to create a new object without the overhead of `CoCreateInstance`, use [CComCoClass::CreateInstance](../../atl/reference/ccomcoclass-class.md#ccomcoclass__createinstance) instead."},{"pos":[4546,4553],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[4557,4632],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_ATL_COM#38<ept id=\"p2\">](../../atl/codesnippet/cpp/ccomobject-class_1.h)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_ATL_COM#38](../../atl/codesnippet/cpp/ccomobject-class_1.h)]"},{"pos":[4639,4716],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_ATL_COM#39<ept id=\"p2\">](../../atl/codesnippet/cpp/ccomobject-class_2.cpp)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_ATL_COM#39](../../atl/codesnippet/cpp/ccomobject-class_2.cpp)]"},{"pos":[4726,4795],"content":"<bpt id=\"p1\">&lt;a name=\"ccomobject__queryinterface\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CComObject::QueryInterface","linkify":"<a name=\"ccomobject__queryinterface\"></a>  CComObject::QueryInterface","source":"<a name=\"ccomobject__queryinterface\"></a>  CComObject::QueryInterface"},{"content":"Retrieves a pointer to the requested interface.","pos":[4799,4846]},{"pos":[5010,5020],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] The identifier of the interface being requested.","pos":[5033,5086]},{"content":"[out] A pointer to the interface pointer identified by <ph id=\"ph1\">`iid`</ph>.","pos":[5108,5169],"source":" [out] A pointer to the interface pointer identified by `iid`."},{"content":"If the object does not support this interface, <ph id=\"ph1\">`ppvObject`</ph> is set to <bpt id=\"p1\">**</bpt>NULL<ept id=\"p1\">**</ept>.","pos":[5170,5248],"source":" If the object does not support this interface, `ppvObject` is set to **NULL**."},{"content":"[out] A pointer to the interface pointer identified by type <ph id=\"ph1\">`Q`</ph>.","pos":[5263,5327],"source":" [out] A pointer to the interface pointer identified by type `Q`."},{"content":"If the object does not support this interface, <ph id=\"ph1\">`pp`</ph> is set to <bpt id=\"p1\">**</bpt>NULL<ept id=\"p1\">**</ept>.","pos":[5328,5399],"source":" If the object does not support this interface, `pp` is set to **NULL**."},{"pos":[5409,5421],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[5425,5452],"content":"A standard <ph id=\"ph1\">`HRESULT`</ph> value.","source":"A standard `HRESULT` value."},{"pos":[5462,5517],"content":"<bpt id=\"p1\">&lt;a name=\"ccomobject__release\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CComObject::Release","linkify":"<a name=\"ccomobject__release\"></a>  CComObject::Release","source":"<a name=\"ccomobject__release\"></a>  CComObject::Release"},{"content":"Decrements the reference count on the object.","pos":[5521,5566]},{"pos":[5619,5631],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"This function returns the new decremented reference count on the object.","pos":[5635,5707]},{"content":"In debug builds, the return value may be useful for diagnostics or testing.","pos":[5708,5783]},{"content":"In non-debug builds, <bpt id=\"p1\">**</bpt>Release<ept id=\"p1\">**</ept> always returns 0.","pos":[5784,5834],"source":" In non-debug builds, **Release** always returns 0."},{"pos":[5843,5851],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>CComAggObject Class<ept id=\"p1\">](../../atl/reference/ccomaggobject-class.md)</ept><ph id=\"ph1\"> </ph>","pos":[5855,5921],"source":"[CComAggObject Class](../../atl/reference/ccomaggobject-class.md) "},{"content":"<bpt id=\"p1\"> [</bpt>CComPolyObject Class<ept id=\"p1\">](../../atl/reference/ccompolyobject-class.md)</ept><ph id=\"ph1\"> </ph>","pos":[5924,5993],"source":" [CComPolyObject Class](../../atl/reference/ccompolyobject-class.md) "},{"content":"<bpt id=\"p1\"> [</bpt>DECLARE_AGGREGATABLE<ept id=\"p1\">](http://msdn.microsoft.com/library/e7e568d7-04e0-4226-b5dc-224deed229ab)</ept><ph id=\"ph1\"> </ph>","pos":[5996,6092],"source":" [DECLARE_AGGREGATABLE](http://msdn.microsoft.com/library/e7e568d7-04e0-4226-b5dc-224deed229ab) "},{"content":"<bpt id=\"p1\"> [</bpt>DECLARE_NOT_AGGREGATABLE<ept id=\"p1\">](http://msdn.microsoft.com/library/2a116c7c-bab8-4f2a-a9ad-03d7aba0f762)</ept><ph id=\"ph1\"> </ph>","pos":[6095,6195],"source":" [DECLARE_NOT_AGGREGATABLE](http://msdn.microsoft.com/library/2a116c7c-bab8-4f2a-a9ad-03d7aba0f762) "},{"content":"<bpt id=\"p1\"> [</bpt>Class Overview<ept id=\"p1\">](../../atl/atl-class-overview.md)</ept>","pos":[6198,6248],"source":" [Class Overview](../../atl/atl-class-overview.md)"}],"content":"---\ntitle: \"CComObject Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"ATL.CComObject<Base>\"\n  - \"ATL::CComObject\"\n  - \"ATL::CComObject<Base>\"\n  - \"ATL.CComObject\"\n  - \"CComObject\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"CComObject class\"\nms.assetid: e2b6433b-6349-4749-b4bc-acbd7a22c8b0\ncaps.latest.revision: 19\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# CComObject Class\nThis class implements **IUnknown** for a nonaggregated object.  \n  \n## Syntax  \n  \n```\ntemplate<class Base>  class CComObject :  public Base\n```  \n  \n#### Parameters  \n `Base`  \n Your class, derived from [CComObjectRoot](../../atl/reference/ccomobjectroot-class.md) or [CComObjectRootEx](../../atl/reference/ccomobjectrootex-class.md), as well as from any other interfaces you want to support on the object.  \n  \n## Members  \n  \n### Public Constructors  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CComObject::CComObject](#ccomobject__ccomobject)|The constructor.|  \n|[CComObject::~CComObject](#ccomobject___dtorccomobject)|The destructor.|  \n  \n### Public Methods  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CComObject::AddRef](#ccomobject__addref)|Increments the reference count on the object.|  \n|[CComObject::CreateInstance](#ccomobject__createinstance)|(Static) Creates a new `CComObject` object.|  \n|[CComObject::QueryInterface](#ccomobject__queryinterface)|Retrieves a pointer to the requested interface.|  \n|[CComObject::Release](#ccomobject__release)|Decrements the reference count on the object.|  \n  \n## Remarks  \n `CComObject` implements [IUnknown](http://msdn.microsoft.com/library/windows/desktop/ms680509) for a nonaggregated object. However, calls to `QueryInterface`, `AddRef`, and **Release** are delegated to `CComObjectRootEx`.  \n  \n For more information about using `CComObject`, see the article [Fundamentals of ATL COM Objects](../../atl/fundamentals-of-atl-com-objects.md).  \n  \n## Inheritance Hierarchy  \n `Base`  \n  \n `CComObject`  \n  \n## Requirements  \n **Header:** atlcom.h  \n  \n##  <a name=\"ccomobject__addref\"></a>  CComObject::AddRef  \n Increments the reference count on the object.  \n  \n```\nSTDMETHOD_(ULONG, AddRef)();\n```  \n  \n### Return Value  \n This function returns the new incremented reference count on the object. This value may be useful for diagnostics or testing.  \n  \n##  <a name=\"ccomobject__ccomobject\"></a>  CComObject::CComObject  \n The constructor increments the module lock count.  \n  \n```\nCComObject(void* = NULL);\n```  \n  \n### Parameters  \n **void\\***  \n [in] This unnamed parameter is not used. It exists for symmetry with other **CCom***XXX*`Object`*XXX* constructors.  \n  \n### Remarks  \n The destructor decrements it.  \n  \n If a `CComObject`-derived object is successfully constructed using the **new** operator, the initial reference count is 0. To set the reference count to the proper value (1), make a call to the [AddRef](#ccomobject__addref) function.  \n  \n##  <a name=\"ccomobject___dtorccomobject\"></a>  CComObject::~CComObject  \n The destructor.  \n  \n```\nCComObject();\n```  \n  \n### Remarks  \n Frees all allocated resources, calls [FinalRelease](ccomobjectrootex-class.md#ccomobjectrootex__finalrelease), and decrements the module lock count.  \n\n  \n##  <a name=\"ccomobject__createinstance\"></a>  CComObject::CreateInstance  \n This static function allows you to create a new **CComObject<**`Base`**>** object, without the overhead of [CoCreateInstance](http://msdn.microsoft.com/library/windows/desktop/ms686615).  \n  \n```\nstatic HRESULT WINAPI CreateInstance(CComObject<Base>** pp);\n```  \n  \n### Parameters  \n `pp`  \n [out] A pointer to a **CComObject<**`Base`**>** pointer. If `CreateInstance` is unsuccessful, `pp` is set to **NULL**.  \n  \n### Return Value  \n A standard `HRESULT` value.  \n  \n### Remarks  \n The object returned has a reference count of zero, so call `AddRef` immediately, then use **Release** to free the reference on the object pointer when you're done.  \n  \n If you do not need direct access to the object, but still want to create a new object without the overhead of `CoCreateInstance`, use [CComCoClass::CreateInstance](../../atl/reference/ccomcoclass-class.md#ccomcoclass__createinstance) instead.  \n  \n### Example  \n [!code-cpp[NVC_ATL_COM#38](../../atl/codesnippet/cpp/ccomobject-class_1.h)]  \n  \n [!code-cpp[NVC_ATL_COM#39](../../atl/codesnippet/cpp/ccomobject-class_2.cpp)]  \n  \n##  <a name=\"ccomobject__queryinterface\"></a>  CComObject::QueryInterface  \n Retrieves a pointer to the requested interface.  \n  \n```\nSTDMETHOD(QueryInterface)(REFIID iid,\n    void** ppvObject);\n\n    template <class Q>  HRESULT STDMETHODCALLTYPE QueryInterface(\n    Q** pp);\n```  \n  \n### Parameters  \n `iid`  \n [in] The identifier of the interface being requested.  \n  \n `ppvObject`  \n [out] A pointer to the interface pointer identified by `iid`. If the object does not support this interface, `ppvObject` is set to **NULL**.  \n  \n `pp`  \n [out] A pointer to the interface pointer identified by type `Q`. If the object does not support this interface, `pp` is set to **NULL**.  \n  \n### Return Value  \n A standard `HRESULT` value.  \n  \n##  <a name=\"ccomobject__release\"></a>  CComObject::Release  \n Decrements the reference count on the object.  \n  \n```\nSTDMETHOD_(ULONG, Release)();\n```  \n  \n### Return Value  \n This function returns the new decremented reference count on the object. In debug builds, the return value may be useful for diagnostics or testing. In non-debug builds, **Release** always returns 0.  \n  \n## See Also  \n [CComAggObject Class](../../atl/reference/ccomaggobject-class.md)   \n [CComPolyObject Class](../../atl/reference/ccompolyobject-class.md)   \n [DECLARE_AGGREGATABLE](http://msdn.microsoft.com/library/e7e568d7-04e0-4226-b5dc-224deed229ab)   \n [DECLARE_NOT_AGGREGATABLE](http://msdn.microsoft.com/library/2a116c7c-bab8-4f2a-a9ad-03d7aba0f762)   \n [Class Overview](../../atl/atl-class-overview.md)\n"}