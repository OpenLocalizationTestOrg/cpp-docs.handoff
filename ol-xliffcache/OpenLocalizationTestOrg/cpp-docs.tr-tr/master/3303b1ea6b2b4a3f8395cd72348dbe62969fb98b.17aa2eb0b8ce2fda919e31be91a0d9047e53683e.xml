{"nodes":[{"pos":[12,40],"content":"db_accessor | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"db_accessor | Microsoft Docs","pos":[0,28]}]},{"content":"db_accessor","pos":[622,633]},{"pos":[634,712],"content":"Groups <bpt id=\"p1\">**</bpt>db_column<ept id=\"p1\">**</ept> attributes that participate in <ph id=\"ph1\">`IAccessor`</ph>-based binding.","source":"Groups **db_column** attributes that participate in `IAccessor`-based binding."},{"content":"Syntax","pos":[721,727]},{"content":"Parameters","pos":[808,818]},{"content":"num","pos":[823,826]},{"content":"Specifies the accessor number (a zero-based integer index).","pos":[831,890]},{"content":"You must specify accessor numbers in increasing order, using integers or defined values.","pos":[891,979]},{"content":"auto","pos":[987,991]},{"content":"A Boolean value that specifies whether the accessor is automatically retrieved (<bpt id=\"p1\">**</bpt>TRUE<ept id=\"p1\">**</ept>) or not retrieved (<bpt id=\"p2\">**</bpt>FALSE<ept id=\"p2\">**</ept>).","pos":[996,1115],"source":" A Boolean value that specifies whether the accessor is automatically retrieved (**TRUE**) or not retrieved (**FALSE**)."},{"content":"Remarks","pos":[1124,1131]},{"content":"<bpt id=\"p1\">**</bpt>db_accessor<ept id=\"p1\">**</ept> defines the underlying OLE DB accessor for subsequent <bpt id=\"p2\">**</bpt>db_column<ept id=\"p2\">**</ept> and <bpt id=\"p3\">**</bpt>db_param<ept id=\"p3\">**</ept> attributes within the same class or function.","pos":[1135,1281],"source":"**db_accessor** defines the underlying OLE DB accessor for subsequent **db_column** and **db_param** attributes within the same class or function."},{"content":"<bpt id=\"p1\">**</bpt>db_accessor<ept id=\"p1\">**</ept> is usable at member level and is used to group <bpt id=\"p2\">**</bpt>db_column<ept id=\"p2\">**</ept> attributes that participate in OLE DB <ph id=\"ph1\">`IAccessor`</ph>-based binding.","pos":[1282,1423],"source":"**db_accessor** is usable at member level and is used to group **db_column** attributes that participate in OLE DB `IAccessor`-based binding."},{"content":"It is used in conjunction with either the <bpt id=\"p1\">**</bpt>db_table<ept id=\"p1\">**</ept> or <bpt id=\"p2\">**</bpt>db_command<ept id=\"p2\">**</ept> attributes.","pos":[1424,1508],"source":" It is used in conjunction with either the **db_table** or **db_command** attributes."},{"content":"Calling this attribute is similar to calling the <bpt id=\"p1\">[</bpt>BEGIN_ACCESSOR<ept id=\"p1\">](../data/oledb/begin-accessor.md)</ept> and <bpt id=\"p2\">[</bpt>END_ACCESSOR<ept id=\"p2\">](../data/oledb/end-accessor.md)</ept> macros.","pos":[1509,1665],"source":" Calling this attribute is similar to calling the [BEGIN_ACCESSOR](../data/oledb/begin-accessor.md) and [END_ACCESSOR](../data/oledb/end-accessor.md) macros."},{"content":"<bpt id=\"p1\">**</bpt>db_accessor<ept id=\"p1\">**</ept> generates a rowset and binds it to the corresponding accessor maps.","pos":[1672,1755],"source":"**db_accessor** generates a rowset and binds it to the corresponding accessor maps."},{"content":"If you do not call <bpt id=\"p1\">**</bpt>db_accessor<ept id=\"p1\">**</ept>, accessor 0 will automatically be generated, and all column bindings will be mapped to this accessor block.","pos":[1756,1898],"source":" If you do not call **db_accessor**, accessor 0 will automatically be generated, and all column bindings will be mapped to this accessor block."},{"content":"<bpt id=\"p1\">**</bpt>db_accessor<ept id=\"p1\">**</ept> groups database column bindings into one or more accessors.","pos":[1905,1980],"source":"**db_accessor** groups database column bindings into one or more accessors."},{"content":"For a discussion of the scenarios in which you need to use multiple accessors, see <bpt id=\"p1\">[</bpt>Using Multiple Accessors on a Rowset<ept id=\"p1\">](../data/oledb/using-multiple-accessors-on-a-rowset.md)</ept>.","pos":[1981,2158],"source":" For a discussion of the scenarios in which you need to use multiple accessors, see [Using Multiple Accessors on a Rowset](../data/oledb/using-multiple-accessors-on-a-rowset.md)."},{"content":"Also see \"User Record Support for Multiple Accessors\" in <bpt id=\"p1\">[</bpt>User Records<ept id=\"p1\">](../data/oledb/user-records.md)</ept>.","pos":[2159,2262],"source":" Also see \"User Record Support for Multiple Accessors\" in [User Records](../data/oledb/user-records.md)."},{"content":"When the consumer attribute provider applies this attribute to a class, the compiler will rename the class to _<bpt id=\"p1\">*</bpt>YourClassName<ept id=\"p1\">*</ept>Accessor, where <bpt id=\"p2\">*</bpt>YourClassName<ept id=\"p2\">*</ept> is the name you gave the class, and the compiler will also create a class called <bpt id=\"p3\">*</bpt>YourClassName,<ept id=\"p3\">*</ept> which derives from <ph id=\"ph1\">\\_</ph><bpt id=\"p4\">*</bpt>YourClassName<ept id=\"p4\">*</ept>Accessor.","pos":[2269,2570],"source":"When the consumer attribute provider applies this attribute to a class, the compiler will rename the class to _*YourClassName*Accessor, where *YourClassName* is the name you gave the class, and the compiler will also create a class called *YourClassName,* which derives from \\_*YourClassName*Accessor."},{"content":"In Class View, you will see both classes.","pos":[2572,2613]},{"content":"Example","pos":[2622,2629]},{"content":"The following example uses <bpt id=\"p1\">**</bpt>db_accessor<ept id=\"p1\">**</ept> to group columns in the Orders table from the Northwind database into two accessors.","pos":[2633,2760],"source":"The following example uses **db_accessor** to group columns in the Orders table from the Northwind database into two accessors."},{"content":"Accessor 0 is an automatic accessor, and accessor 1 is not.","pos":[2761,2820]},{"content":"Requirements","pos":[3337,3349]},{"content":"Attribute Context","pos":[3359,3376]},{"content":"Applies to","pos":[3399,3409]},{"content":"Attribute blocks","pos":[3412,3428]},{"content":"Repeatable","pos":[3435,3445]},{"content":"No","pos":[3448,3450]},{"content":"Required attributes","pos":[3457,3476]},{"content":"None","pos":[3479,3483]},{"content":"Invalid attributes","pos":[3490,3508]},{"content":"None","pos":[3511,3515]},{"pos":[3523,3633],"content":"For more information about the attribute contexts, see <bpt id=\"p1\">[</bpt>Attribute Contexts<ept id=\"p1\">](../windows/attribute-contexts.md)</ept>.","source":"For more information about the attribute contexts, see [Attribute Contexts](../windows/attribute-contexts.md)."},{"content":"See Also","pos":[3642,3650]},{"content":"OLE DB Consumer Attributes","pos":[3655,3681]},{"content":"Attributes Samples","pos":[3730,3748]}],"content":"---\ntitle: \"db_accessor | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"language-reference\"\nf1_keywords: \n  - \"vc-attr.db_accessor\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"db_accessor attribute\"\nms.assetid: ec407a9f-24d7-4822-96d4-7cc6a0301815\ncaps.latest.revision: 11\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# db_accessor\nGroups **db_column** attributes that participate in `IAccessor`-based binding.  \n  \n## Syntax  \n  \n```  \n  \n      [ db_accessor(   \n   num,   \n   auto   \n) ]  \n```  \n  \n#### Parameters  \n *num*  \n Specifies the accessor number (a zero-based integer index). You must specify accessor numbers in increasing order, using integers or defined values.  \n  \n *auto*  \n A Boolean value that specifies whether the accessor is automatically retrieved (**TRUE**) or not retrieved (**FALSE**).  \n  \n## Remarks  \n **db_accessor** defines the underlying OLE DB accessor for subsequent **db_column** and **db_param** attributes within the same class or function. **db_accessor** is usable at member level and is used to group **db_column** attributes that participate in OLE DB `IAccessor`-based binding. It is used in conjunction with either the **db_table** or **db_command** attributes. Calling this attribute is similar to calling the [BEGIN_ACCESSOR](../data/oledb/begin-accessor.md) and [END_ACCESSOR](../data/oledb/end-accessor.md) macros.  \n  \n **db_accessor** generates a rowset and binds it to the corresponding accessor maps. If you do not call **db_accessor**, accessor 0 will automatically be generated, and all column bindings will be mapped to this accessor block.  \n  \n **db_accessor** groups database column bindings into one or more accessors. For a discussion of the scenarios in which you need to use multiple accessors, see [Using Multiple Accessors on a Rowset](../data/oledb/using-multiple-accessors-on-a-rowset.md). Also see \"User Record Support for Multiple Accessors\" in [User Records](../data/oledb/user-records.md).  \n  \n When the consumer attribute provider applies this attribute to a class, the compiler will rename the class to _*YourClassName*Accessor, where *YourClassName* is the name you gave the class, and the compiler will also create a class called *YourClassName,* which derives from \\_*YourClassName*Accessor.  In Class View, you will see both classes.  \n  \n## Example  \n The following example uses **db_accessor** to group columns in the Orders table from the Northwind database into two accessors. Accessor 0 is an automatic accessor, and accessor 1 is not.  \n  \n```  \n// cpp_attr_ref_db_accessor.cpp  \n// compile with: /LD /link /OPT:NOREF  \n#define _ATL_ATTRIBUTES  \n#include <atlbase.h>  \n#include <atldbcli.h>  \n  \n[ db_command(L\"SELECT LastName, FirstName FROM Orders\") ]  \nclass CEmployees {  \npublic:  \n   [ db_accessor(0, TRUE) ];  \n   [ db_column(\"1\") ] LONG m_OrderID;  \n   [ db_column(\"2\") ] TCHAR m_CustomerID[6];  \n   [ db_column(\"4\") ] DBTIMESTAMP m_OrderDate;   \n  \n   [ db_accessor(1, FALSE) ];  \n   [ db_column(\"8\") ] CURRENCY m_Freight;  \n};  \n```  \n  \n## Requirements  \n  \n### Attribute Context  \n  \n|||  \n|-|-|  \n|**Applies to**|Attribute blocks|  \n|**Repeatable**|No|  \n|**Required attributes**|None|  \n|**Invalid attributes**|None|  \n  \n For more information about the attribute contexts, see [Attribute Contexts](../windows/attribute-contexts.md).  \n  \n## See Also  \n [OLE DB Consumer Attributes](../windows/ole-db-consumer-attributes.md)   \n [Attributes Samples](http://msdn.microsoft.com/en-us/558ebdb2-082f-44dc-b442-d8d33bf7bdb8)"}