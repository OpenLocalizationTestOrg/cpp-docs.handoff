{"nodes":[{"pos":[12,61],"content":"How to: Specify an out Parameter | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"How to: Specify an out Parameter | Microsoft Docs","pos":[0,49]}]},{"content":"How to: Specify an out Parameter","pos":[623,655]},{"content":"This sample shows how to specify that a function parameter is an out parameter and how to call that function from a C# program.","pos":[656,783]},{"content":"An out parameter is specified in Visual C++ with &lt;xref:System.Runtime.InteropServices.OutAttribute&gt; .","pos":[790,891],"source":"An out parameter is specified in Visual C++ with <xref:System.Runtime.InteropServices.OutAttribute> ."},{"content":"Example","pos":[900,907]},{"content":"The first part of this sample is a Visual C++ DLL with a type that contains a function with an out parameter.","pos":[911,1020]},{"content":"Example","pos":[1265,1272]},{"content":"This is a C# client that consumes the Visual C++ component created in the previous example.","pos":[1276,1367]},{"content":"See Also","pos":[1662,1670]},{"content":"Using C++ Interop (Implicit PInvoke)","pos":[1675,1711]}],"content":"---\ntitle: \"How to: Specify an out Parameter | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"get-started-article\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"function parameters\"\n  - \"out parameters\"\nms.assetid: 02862448-603c-4e9d-a5c5-b45fe38446e3\ncaps.latest.revision: 11\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# How to: Specify an out Parameter\nThis sample shows how to specify that a function parameter is an out parameter and how to call that function from a C# program.  \n  \n An out parameter is specified in Visual C++ with <xref:System.Runtime.InteropServices.OutAttribute> .  \n  \n## Example  \n The first part of this sample is a Visual C++ DLL with a type that contains a function with an out parameter.  \n  \n```  \n// cpp_out_param.cpp  \n// compile with: /LD /clr:safe  \nusing namespace System;  \npublic value struct TestStruct {  \n   static void Test([Runtime::InteropServices::Out] String^ %s) {  \n      s = \"a string\";  \n   }  \n};  \n```  \n  \n## Example  \n This is a C# client that consumes the Visual C++ component created in the previous example.  \n  \n```  \n// cpp_out_param_2.cs  \n// compile with: /reference:cpp_out_param.dll  \nusing System;  \nclass TestClass {  \n   public static void Main() {  \n      String t;  \n      TestStruct.Test(out t);  \n      System.Console.WriteLine(t);  \n   }  \n}  \n```  \n  \n```Output  \na string  \n```  \n  \n## See Also  \n [Using C++ Interop (Implicit PInvoke)](../dotnet/using-cpp-interop-implicit-pinvoke.md)"}