{"nodes":[{"pos":[12,61],"content":"Compiler Warning (level 4) C4626 | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Compiler Warning (level 4) C4626 | Microsoft Docs","pos":[0,49]}]},{"content":"Compiler Warning (level 4) C4626","pos":[609,641]},{"content":"'derived class' : assignment operator was implicitly defined as deleted because a base class assignment operator is inaccessible or deleted","pos":[642,781]},{"content":"An assignment operator was deleted or not accessible in a base class and was therefore not generated for a derived class.","pos":[788,909]},{"content":"Any attempt to assign objects of this type will cause a compiler error.","pos":[910,981]},{"content":"This warning is off by default.","pos":[988,1019]},{"content":"See <bpt id=\"p1\">[</bpt>Compiler Warnings That Are Off by Default<ept id=\"p1\">](../../preprocessor/compiler-warnings-that-are-off-by-default.md)</ept> for more information.","pos":[1020,1154],"source":" See [Compiler Warnings That Are Off by Default](../../preprocessor/compiler-warnings-that-are-off-by-default.md) for more information."},{"content":"The following sample generates C4626 and shows how to fix it:","pos":[1161,1222]}],"content":"---\ntitle: \"Compiler Warning (level 4) C4626 | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"error-reference\"\nf1_keywords: \n  - \"C4626\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"C4626\"\nms.assetid: 7f822ff4-a4a3-4f17-b45b-e8b7b4659a14\ncaps.latest.revision: 8\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Compiler Warning (level 4) C4626\n'derived class' : assignment operator was implicitly defined as deleted because a base class assignment operator is inaccessible or deleted  \n  \n An assignment operator was deleted or not accessible in a base class and was therefore not generated for a derived class. Any attempt to assign objects of this type will cause a compiler error.  \n  \n This warning is off by default. See [Compiler Warnings That Are Off by Default](../../preprocessor/compiler-warnings-that-are-off-by-default.md) for more information.  \n  \n The following sample generates C4626 and shows how to fix it:  \n  \n```  \n// C4626  \n// compile with: /W4  \n#pragma warning(default : 4626)  \nclass B  \n{  \n// public:  \n   B& operator = (const B&)  \n   {  \n      return *this;  \n   }  \n};  \n  \nclass D : public B  \n{  \n  \n}; // C4626 - to fix, make B's copy constructor public  \n  \nint main()  \n{  \n   D m;  \n   D n;  \n   // m = n;   // this line will cause an error  \n}  \n```"}