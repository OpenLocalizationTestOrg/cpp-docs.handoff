{"nodes":[{"pos":[12,53],"content":"typeof Goes to T::typeid | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"typeof Goes to T::typeid | Microsoft Docs","pos":[0,41]}]},{"content":"typeof Goes to T::typeid","pos":[627,651]},{"pos":[652,828],"content":"The <ph id=\"ph1\">`typeof`</ph> operator used in Managed Extensions for C++ has been supplanted by the <ph id=\"ph2\">`typeid`</ph> keyword in <ph id=\"ph3\">[!INCLUDE[cpp_current_long](../dotnet/includes/cpp_current_long_md.md)]</ph>.","source":"The `typeof` operator used in Managed Extensions for C++ has been supplanted by the `typeid` keyword in [!INCLUDE[cpp_current_long](../dotnet/includes/cpp_current_long_md.md)]."},{"content":"In Managed Extensions, the <ph id=\"ph1\">`__typeof()`</ph> operator returns the associated <ph id=\"ph2\">`Type*`</ph> object when passed the name of a managed type.","pos":[835,961],"source":"In Managed Extensions, the `__typeof()` operator returns the associated `Type*` object when passed the name of a managed type."},{"content":"For example:","pos":[962,974]},{"pos":[1120,1258],"content":"In the new syntax, <ph id=\"ph1\">`__typeof`</ph> has been replaced by an additional form of <ph id=\"ph2\">`typeid`</ph> that returns a <ph id=\"ph3\">`Type^`</ph> when a managed type is specified.","source":"In the new syntax, `__typeof` has been replaced by an additional form of `typeid` that returns a `Type^` when a managed type is specified."},{"content":"See Also","pos":[1404,1412]},{"content":"General Language Changes (C++/CLI)","pos":[1417,1451]},{"content":"typeid","pos":[1505,1511]}],"content":"---\ntitle: \"typeof Goes to T::typeid | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"typeid operator\"\n  - \"__typeof keyword\"\n  - \"typeid keyword [C++]\"\nms.assetid: 6a0d35a7-7a1a-4070-b187-cff37cfdc205\ncaps.latest.revision: 8\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# typeof Goes to T::typeid\nThe `typeof` operator used in Managed Extensions for C++ has been supplanted by the `typeid` keyword in [!INCLUDE[cpp_current_long](../dotnet/includes/cpp_current_long_md.md)].  \n  \n In Managed Extensions, the `__typeof()` operator returns the associated `Type*` object when passed the name of a managed type. For example:  \n  \n```  \n// Creates and initializes a new Array instance.  \nArray* myIntArray =   \n   Array::CreateInstance( __typeof(Int32), 5 );  \n```  \n  \n In the new syntax, `__typeof` has been replaced by an additional form of `typeid` that returns a `Type^` when a managed type is specified.  \n  \n```  \n// Creates and initializes a new Array instance.  \nArray^ myIntArray =   \n   Array::CreateInstance( Int32::typeid, 5 );  \n```  \n  \n## See Also  \n [General Language Changes (C++/CLI)](../dotnet/general-language-changes-cpp-cli.md)   \n [typeid](../windows/typeid-cpp-component-extensions.md)"}