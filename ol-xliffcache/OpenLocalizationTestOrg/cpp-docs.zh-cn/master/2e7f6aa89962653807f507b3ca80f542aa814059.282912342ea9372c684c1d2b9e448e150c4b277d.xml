{"nodes":[{"pos":[12,37],"content":"typename | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"typename | Microsoft Docs","pos":[0,25]}]},{"content":"typename","pos":[632,640]},{"content":"In template definitions, provides a hint to the compiler that an unknown identifier is a type.","pos":[641,735]},{"content":"In template parameter lists, is used to specify a type parameter.","pos":[736,801]},{"content":"Syntax","pos":[810,816]},{"content":"Remarks","pos":[866,873]},{"content":"This keyword must be used if a name in a template definition is a qualified name that is dependent on a template argument; it is optional if the qualified name is not dependent.","pos":[877,1054]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Templates and Name Resolution<ept id=\"p1\">](../cpp/templates-and-name-resolution.md)</ept>.","pos":[1055,1154],"source":" For more information, see [Templates and Name Resolution](../cpp/templates-and-name-resolution.md)."},{"content":"<bpt id=\"p1\">**</bpt>typename<ept id=\"p1\">**</ept> can be used by any type anywhere in a template declaration or definition.","pos":[1161,1247],"source":"**typename** can be used by any type anywhere in a template declaration or definition."},{"content":"It is not allowed in the base class list, unless as a template argument to a template base class.","pos":[1248,1345]},{"content":"The <bpt id=\"p1\">**</bpt>typename<ept id=\"p1\">**</ept> keyword can also be used in place of <bpt id=\"p2\">**</bpt>class<ept id=\"p2\">**</ept> in template parameter lists.","pos":[1544,1636],"source":"The **typename** keyword can also be used in place of **class** in template parameter lists."},{"content":"For example, the following statements are semantically equivalent:","pos":[1637,1703]},{"content":"Example","pos":[1801,1808]},{"content":"See Also","pos":[1958,1966]},{"content":"Templates","pos":[1971,1980]},{"content":"Keywords","pos":[2012,2020]}],"content":"---\ntitle: \"typename | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"language-reference\"\nf1_keywords: \n  - \"typename\"\n  - \"typename_cpp\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"typename template specifier\"\nms.assetid: 52e1d901-220d-4f0d-ab43-dae7e05fb491\ncaps.latest.revision: 7\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# typename\nIn template definitions, provides a hint to the compiler that an unknown identifier is a type. In template parameter lists, is used to specify a type parameter.  \n  \n## Syntax  \n  \n```  \n  \ntypename identifier;  \n```  \n  \n## Remarks  \n This keyword must be used if a name in a template definition is a qualified name that is dependent on a template argument; it is optional if the qualified name is not dependent. For more information, see [Templates and Name Resolution](../cpp/templates-and-name-resolution.md).  \n  \n **typename** can be used by any type anywhere in a template declaration or definition. It is not allowed in the base class list, unless as a template argument to a template base class.  \n  \n```  \ntemplate <class T>  \nclass C1 : typename T::InnerType // Error - typename not allowed.  \n{};  \ntemplate <class T>  \nclass C2 : A<typename T::InnerType>  // typename OK.  \n{};  \n```  \n  \n The **typename** keyword can also be used in place of **class** in template parameter lists. For example, the following statements are semantically equivalent:  \n  \n```  \ntemplate<class T1, class T2>...  \ntemplate<typename T1, typename T2>...  \n```  \n  \n## Example  \n  \n```  \n// typename.cpp  \ntemplate<class T> class X  \n{  \n   typename T::Y m_y;   // treat Y as a type  \n};  \n  \nint main()  \n{  \n}  \n```  \n  \n## See Also  \n [Templates](../cpp/templates-cpp.md)   \n [Keywords](../cpp/keywords-cpp.md)"}