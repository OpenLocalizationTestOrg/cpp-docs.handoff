{"nodes":[{"pos":[12,49],"content":"list::swap (STL-CLR) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"list::swap (STL-CLR) | Microsoft Docs","pos":[0,37]}]},{"content":"list::swap (STL/CLR)","pos":[621,641]},{"content":"Swaps the contents of two containers.","pos":[642,679]},{"content":"Syntax","pos":[688,694]},{"content":"Parameters","pos":[753,763]},{"content":"right","pos":[767,772]},{"content":"Container to swap contents with.","pos":[776,808]},{"content":"Remarks","pos":[817,824]},{"content":"The member function swaps the controlled sequences between <ph id=\"ph1\">`*this`</ph> and <ph id=\"ph2\">`right`</ph>.","pos":[828,907],"source":"The member function swaps the controlled sequences between `*this` and `right`."},{"content":"It does so in constant time and it throws no exceptions.","pos":[908,964]},{"content":"You use it as a quick way to exchange the contents of two containers.","pos":[965,1034]},{"content":"Example","pos":[1043,1050]},{"content":"Requirements","pos":[2074,2086]},{"pos":[2090,2116],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> <ph id=\"ph1\">\\&lt;</ph>cliext/list&gt;","source":"**Header:** \\<cliext/list>"},{"pos":[2123,2144],"content":"<bpt id=\"p1\">**</bpt>Namespace:<ept id=\"p1\">**</ept> cliext","source":"**Namespace:** cliext"},{"content":"See Also","pos":[2153,2161]},{"content":"list (STL/CLR)","pos":[2166,2180]},{"content":"list::assign (STL/CLR)","pos":[2214,2236]},{"content":"list::operator= (STL/CLR)","pos":[2277,2302]}],"content":"---\ntitle: \"list::swap (STL-CLR) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"cliext::list::swap\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"swap member [STL/CLR]\"\nms.assetid: 188b66c2-0a08-4001-a566-41d0955c89bd\ncaps.latest.revision: 17\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# list::swap (STL/CLR)\nSwaps the contents of two containers.  \n  \n## Syntax  \n  \n```  \nvoid swap(list<Value>% right);  \n```  \n  \n#### Parameters  \n right  \n Container to swap contents with.  \n  \n## Remarks  \n The member function swaps the controlled sequences between `*this` and `right`. It does so in constant time and it throws no exceptions. You use it as a quick way to exchange the contents of two containers.  \n  \n## Example  \n  \n```  \n// cliext_list_swap.cpp   \n// compile with: /clr   \n#include <cliext/list>   \n  \nint main()   \n    {   \n    cliext::list<wchar_t> c1;   \n    c1.push_back(L'a');   \n    c1.push_back(L'b');   \n    c1.push_back(L'c');   \n  \n// display initial contents \" a b c\"   \n    for each (wchar_t elem in c1)   \n        System::Console::Write(\" {0}\", elem);   \n    System::Console::WriteLine();   \n  \n// construct another container with repetition of values   \n    cliext::list<wchar_t> c2(5, L'x');   \n    for each (wchar_t elem in c2)   \n        System::Console::Write(\" {0}\", elem);   \n    System::Console::WriteLine();   \n  \n// swap and redisplay   \n    c1.swap(c2);   \n    for each (wchar_t elem in c1)   \n        System::Console::Write(\" {0}\", elem);   \n    System::Console::WriteLine();   \n  \n    for each (wchar_t elem in c2)   \n        System::Console::Write(\" {0}\", elem);   \n    System::Console::WriteLine();   \n    return (0);   \n    }  \n  \n```  \n  \n```Output  \na b c  \nx x x x x  \nx x x x x  \na b c  \n```  \n  \n## Requirements  \n **Header:** \\<cliext/list>  \n  \n **Namespace:** cliext  \n  \n## See Also  \n [list (STL/CLR)](../dotnet/list-stl-clr.md)   \n [list::assign (STL/CLR)](../dotnet/list-assign-stl-clr.md)   \n [list::operator= (STL/CLR)](../dotnet/list-operator-assign-stl-clr.md)"}