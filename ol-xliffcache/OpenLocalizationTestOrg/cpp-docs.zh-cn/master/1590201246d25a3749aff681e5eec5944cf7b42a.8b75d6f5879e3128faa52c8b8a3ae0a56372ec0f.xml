{"nodes":[{"pos":[12,63],"content":"strchr, wcschr, _mbschr, _mbschr_l | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"strchr, wcschr, _mbschr, _mbschr_l | Microsoft Docs","pos":[0,51]}]},{"content":"strchr, wcschr, _mbschr, _mbschr_l","pos":[1314,1348]},{"content":"Finds a character in a string, by using the current locale or a specified LC_CTYPE conversion-state category.","pos":[1349,1458]},{"pos":[1466,1703],"content":"[!IMPORTANT]\n `_mbschr` and `_mbschr_l` cannot be used in applications that execute in the Windows Runtime. For more information, see [CRT functions not supported with /ZW](http://msdn.microsoft.com/library/windows/apps/jj606124.aspx).","leadings":["","> "],"nodes":[{"content":" and `_mbschr_l` cannot be used in applications that execute in the Windows Runtime. For more information, see [CRT functions not supported with /ZW](http://msdn.microsoft.com/library/windows/apps/jj606124.aspx).","pos":[23,235],"nodes":[{"content":"and <ph id=\"ph1\">`_mbschr_l`</ph> cannot be used in applications that execute in the Windows Runtime.","pos":[1,84],"source":" and `_mbschr_l` cannot be used in applications that execute in the Windows Runtime."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>CRT functions not supported with /ZW<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/apps/jj606124.aspx)</ept>.","pos":[85,212],"source":" For more information, see [CRT functions not supported with /ZW](http://msdn.microsoft.com/library/windows/apps/jj606124.aspx)."}]}]},{"content":"Syntax","pos":[1712,1718]},{"content":"Parameters","pos":[2816,2826]},{"content":"Null-terminated source string.","pos":[2839,2869]},{"content":"Character to be located.","pos":[2883,2907]},{"content":"Locale to use.","pos":[2926,2940]},{"content":"Return Value","pos":[2949,2961]},{"pos":[2965,3078],"content":"Each of these functions returns a pointer to the first occurrence of <ph id=\"ph1\">`c`</ph> in <ph id=\"ph2\">`str`</ph>, or <ph id=\"ph3\">`NULL`</ph> if <ph id=\"ph4\">`c`</ph> is not found.","source":"Each of these functions returns a pointer to the first occurrence of `c` in `str`, or `NULL` if `c` is not found."},{"content":"Remarks","pos":[3087,3094]},{"content":"The <ph id=\"ph1\">`strchr`</ph> function finds the first occurrence of <ph id=\"ph2\">`c`</ph> in <ph id=\"ph3\">`str`</ph>, or it returns <ph id=\"ph4\">`NULL`</ph> if <ph id=\"ph5\">`c`</ph> is not found.","pos":[3098,3205],"source":"The `strchr` function finds the first occurrence of `c` in `str`, or it returns `NULL` if `c` is not found."},{"content":"The null terminating character is included in the search.","pos":[3206,3263]},{"content":", <ph id=\"ph1\">`_mbschr`</ph> and <ph id=\"ph2\">`_mbschr_l`</ph> are wide-character and multibyte-character versions of <ph id=\"ph3\">`strchr`</ph>.","pos":[3278,3370],"source":", `_mbschr` and `_mbschr_l` are wide-character and multibyte-character versions of `strchr`."},{"content":"The arguments and return value of <ph id=\"ph1\">`wcschr`</ph> are wide-character strings; those of <ph id=\"ph2\">`_mbschr`</ph> are multibyte-character strings.","pos":[3371,3493],"source":" The arguments and return value of `wcschr` are wide-character strings; those of `_mbschr` are multibyte-character strings."},{"content":"recognizes multibyte-character sequences.","pos":[3504,3545]},{"content":"Also, if the string is a null pointer, <ph id=\"ph1\">`_mbschr`</ph> invokes the invalid parameter handler, as described in <bpt id=\"p1\">[</bpt>Parameter Validation<ept id=\"p1\">](../../c-runtime-library/parameter-validation.md)</ept>.","pos":[3546,3722],"source":" Also, if the string is a null pointer, `_mbschr` invokes the invalid parameter handler, as described in [Parameter Validation](../../c-runtime-library/parameter-validation.md)."},{"content":"If execution is allowed to continue, <ph id=\"ph1\">`_mbschr`</ph> returns <ph id=\"ph2\">`NULL`</ph> and sets <ph id=\"ph3\">`errno`</ph> to <ph id=\"ph4\">`EINVAL`</ph>.","pos":[3723,3814],"source":" If execution is allowed to continue, `_mbschr` returns `NULL` and sets `errno` to `EINVAL`."},{"content":"and <ph id=\"ph1\">`wcschr`</ph> do not validate their parameters.","pos":[3824,3870],"source":" and `wcschr` do not validate their parameters."},{"content":"These three functions behave identically otherwise.","pos":[3871,3922]},{"content":"The output value is affected by the setting of the <ph id=\"ph1\">`LC_CTYPE`</ph> category setting of the locale; for more information, see <bpt id=\"p1\">[</bpt>setlocale<ept id=\"p1\">](../../c-runtime-library/reference/setlocale-wsetlocale.md)</ept>.","pos":[3929,4120],"source":"The output value is affected by the setting of the `LC_CTYPE` category setting of the locale; for more information, see [setlocale](../../c-runtime-library/reference/setlocale-wsetlocale.md)."},{"content":"The versions of these functions without the <ph id=\"ph1\">`_l`</ph> suffix use the current locale for this locale-dependent behavior; the versions with the <ph id=\"ph2\">`_l`</ph> suffix are identical except that they use the locale parameter passed in instead.","pos":[4121,4344],"source":" The versions of these functions without the `_l` suffix use the current locale for this locale-dependent behavior; the versions with the `_l` suffix are identical except that they use the locale parameter passed in instead."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Locale<ept id=\"p1\">](../../c-runtime-library/locale.md)</ept>.","pos":[4345,4415],"source":" For more information, see [Locale](../../c-runtime-library/locale.md)."},{"content":"In C, these functions take a <ph id=\"ph1\">`const`</ph> pointer for the first argument.","pos":[4422,4490],"source":"In C, these functions take a `const` pointer for the first argument."},{"content":"In C++, two overloads are available.","pos":[4491,4527]},{"content":"The overload taking a pointer to <ph id=\"ph1\">`const`</ph> returns a pointer to <ph id=\"ph2\">`const`</ph>; the version that takes a pointer to non-<ph id=\"ph3\">`const`</ph> returns a pointer to non-<ph id=\"ph4\">`const`</ph>.","pos":[4528,4680],"source":" The overload taking a pointer to `const` returns a pointer to `const`; the version that takes a pointer to non-`const` returns a pointer to non-`const`."},{"content":"The macro _CONST_CORRECT_OVERLOADS is defined if both the <ph id=\"ph1\">`const`</ph> and non-<ph id=\"ph2\">`const`</ph> versions of these functions are available.","pos":[4681,4805],"source":" The macro _CONST_CORRECT_OVERLOADS is defined if both the `const` and non-`const` versions of these functions are available."},{"content":"If you require the non-<ph id=\"ph1\">`const`</ph> behavior for both C++ overloads, define the symbol _CONST_RETURN.","pos":[4806,4902],"source":" If you require the non-`const` behavior for both C++ overloads, define the symbol _CONST_RETURN."},{"content":"Generic-Text Routine Mappings","pos":[4912,4941]},{"content":"TCHAR.H routine","pos":[4948,4963]},{"content":"_UNICODE &amp; _MBCS not defined","pos":[4964,4992],"source":"_UNICODE & _MBCS not defined"},{"content":"_MBCS defined","pos":[4993,5006]},{"content":"_UNICODE defined","pos":[5007,5023]},{"content":"_n/a","pos":[5180,5184]},{"content":"n/a","pos":[5189,5192]},{"content":"n/a","pos":[5209,5212]},{"content":"Requirements","pos":[5224,5236]},{"content":"Routine","pos":[5243,5250]},{"content":"Required header","pos":[5251,5266]},{"content":"string.h&gt;","pos":[5322,5331],"source":"string.h>"},{"content":"string.h&gt; or <ph id=\"ph1\">\\&lt;</ph>wchar.h&gt;","pos":[5347,5370],"source":"string.h> or \\<wchar.h>"},{"pos":[5384,5385],"content":","},{"content":"mbstring.h&gt;","pos":[5400,5411],"source":"mbstring.h>"},{"pos":[5419,5523],"content":"For more information about compatibility, see <bpt id=\"p1\">[</bpt>Compatibility<ept id=\"p1\">](../../c-runtime-library/compatibility.md)</ept>.","source":"For more information about compatibility, see [Compatibility](../../c-runtime-library/compatibility.md)."},{"content":"Example","pos":[5532,5539]},{"content":".NET Framework Equivalent","pos":[7094,7119]},{"content":"System::String::IndexOf","pos":[7124,7147]},{"content":"See Also","pos":[7226,7234]},{"content":"String Manipulation","pos":[7239,7258]},{"content":"Locale","pos":[7317,7323]},{"content":"Interpretation of Multibyte-Character Sequences","pos":[7365,7412]},{"content":"strcspn, wcscspn, _mbscspn, _mbscspn_l","pos":[7495,7533]},{"content":"strncat, _strncat_l, wcsncat, _wcsncat_l, _mbsncat, _mbsncat_l","pos":[7612,7674]},{"content":"strncmp, wcsncmp, _mbsncmp, _mbsncmp_l","pos":[7773,7811]},{"content":"strncpy, _strncpy_l, wcsncpy, _wcsncpy_l, _mbsncpy, _mbsncpy_l","pos":[7890,7952]},{"content":"_strnicmp, _wcsnicmp, _mbsnicmp, _strnicmp_l, _wcsnicmp_l, _mbsnicmp_l","pos":[8051,8121]},{"content":"strpbrk, wcspbrk, _mbspbrk, _mbspbrk_l","pos":[8226,8264]},{"content":"strrchr, wcsrchr, _mbsrchr, _mbsrchr_l","pos":[8343,8381]},{"content":"strstr, wcsstr, _mbsstr, _mbsstr_l","pos":[8460,8494]}],"content":"---\ntitle: \"strchr, wcschr, _mbschr, _mbschr_l | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\napiname: \n  - \"strchr\"\n  - \"wcschr\"\n  - \"_mbschr_l\"\n  - \"_mbschr\"\napilocation: \n  - \"msvcrt.dll\"\n  - \"msvcr80.dll\"\n  - \"msvcr90.dll\"\n  - \"msvcr100.dll\"\n  - \"msvcr100_clr0400.dll\"\n  - \"msvcr110.dll\"\n  - \"msvcr110_clr0400.dll\"\n  - \"msvcr120.dll\"\n  - \"msvcr120_clr0400.dll\"\n  - \"ucrtbase.dll\"\n  - \"api-ms-win-crt-multibyte-l1-1-0.dll\"\napitype: \"DLLExport\"\nf1_keywords: \n  - \"_ftcschr\"\n  - \"strchr\"\n  - \"wcschr\"\n  - \"_tcschr\"\n  - \"_mbschr\"\ndev_langs: \n  - \"C++\"\n  - \"C\"\nhelpviewer_keywords: \n  - \"strings [C++], searching\"\n  - \"mbschr function\"\n  - \"_ftcschr function\"\n  - \"_mbschr function\"\n  - \"characters [C++], finding in strings\"\n  - \"_mbschr_l function\"\n  - \"ftcschr function\"\n  - \"wcschr function\"\n  - \"strchr function\"\n  - \"_tcschr function\"\n  - \"tcschr function\"\n  - \"mbschr_l function\"\nms.assetid: 2639905d-e983-43b7-b885-abef32cfac43\ncaps.latest.revision: 31\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# strchr, wcschr, _mbschr, _mbschr_l\nFinds a character in a string, by using the current locale or a specified LC_CTYPE conversion-state category.  \n  \n> [!IMPORTANT]\n>  `_mbschr` and `_mbschr_l` cannot be used in applications that execute in the Windows Runtime. For more information, see [CRT functions not supported with /ZW](http://msdn.microsoft.com/library/windows/apps/jj606124.aspx).  \n  \n## Syntax  \n  \n```  \nchar *strchr(  \n   const char *str,  \n   int c   \n);  // C only  \nchar *strchr(  \n   char * str,  \n   int c   \n); // C++ only  \nconst char *strchr(  \n   const char * str,  \n   int c   \n); // C++ only  \nwchar_t *wcschr(  \n   const wchar_t *str,  \n   wchar_t c   \n); // C only  \nwchar_t *wcschr(  \n   wchar_t *str,  \n   wchar_t c   \n);  // C++ only  \nconst wchar_t *wcschr(  \n   const wchar_t *str,  \n   wchar_t c   \n);  // C++ only  \nunsigned char *_mbschr(  \n   const unsigned char *str,  \n   unsigned int c   \n); // C only  \nunsigned char *_mbschr(  \n   unsigned char *str,  \n   unsigned int c   \n); // C++ only  \nconst unsigned char *_mbschr(  \n   const unsigned char *str,  \n   unsigned int c   \n); // C++ only  \nunsigned char *_mbschr_l(  \n   const unsigned char *str,  \n   unsigned int c,  \n   _locale_t locale  \n); // C only   \nunsigned char *_mbschr_l(  \n   unsigned char *str,  \n   unsigned int c,  \n   _locale_t locale  \n); // C++ only  \nconst unsigned char *_mbschr_l(  \n   const unsigned char *str,  \n   unsigned int c,  \n   _locale_t locale  \n); // C++ only  \n```  \n  \n#### Parameters  \n `str`  \n Null-terminated source string.  \n  \n `c`  \n Character to be located.  \n  \n `locale`  \n Locale to use.  \n  \n## Return Value  \n Each of these functions returns a pointer to the first occurrence of `c` in `str`, or `NULL` if `c` is not found.  \n  \n## Remarks  \n The `strchr` function finds the first occurrence of `c` in `str`, or it returns `NULL` if `c` is not found. The null terminating character is included in the search.  \n  \n `wcschr`, `_mbschr` and `_mbschr_l` are wide-character and multibyte-character versions of `strchr`. The arguments and return value of `wcschr` are wide-character strings; those of `_mbschr` are multibyte-character strings. `_mbschr` recognizes multibyte-character sequences. Also, if the string is a null pointer, `_mbschr` invokes the invalid parameter handler, as described in [Parameter Validation](../../c-runtime-library/parameter-validation.md). If execution is allowed to continue, `_mbschr` returns `NULL` and sets `errno` to `EINVAL`. `strchr` and `wcschr` do not validate their parameters. These three functions behave identically otherwise.  \n  \n The output value is affected by the setting of the `LC_CTYPE` category setting of the locale; for more information, see [setlocale](../../c-runtime-library/reference/setlocale-wsetlocale.md). The versions of these functions without the `_l` suffix use the current locale for this locale-dependent behavior; the versions with the `_l` suffix are identical except that they use the locale parameter passed in instead. For more information, see [Locale](../../c-runtime-library/locale.md).  \n  \n In C, these functions take a `const` pointer for the first argument. In C++, two overloads are available. The overload taking a pointer to `const` returns a pointer to `const`; the version that takes a pointer to non-`const` returns a pointer to non-`const`. The macro _CONST_CORRECT_OVERLOADS is defined if both the `const` and non-`const` versions of these functions are available. If you require the non-`const` behavior for both C++ overloads, define the symbol _CONST_RETURN.  \n  \n### Generic-Text Routine Mappings  \n  \n|TCHAR.H routine|_UNICODE & _MBCS not defined|_MBCS defined|_UNICODE defined|  \n|---------------------|------------------------------------|--------------------|-----------------------|  \n|`_tcschr`|`strchr`|`_mbschr`|`wcschr`|  \n|**_n/a**|**n/a**|`_mbschr_l`|**n/a**|  \n  \n## Requirements  \n  \n|Routine|Required header|  \n|-------------|---------------------|  \n|`strchr`|\\<string.h>|  \n|`wcschr`|\\<string.h> or \\<wchar.h>|  \n|`_mbschr`, `_mbschr_l`|\\<mbstring.h>|  \n  \n For more information about compatibility, see [Compatibility](../../c-runtime-library/compatibility.md).  \n  \n## Example  \n  \n```  \n// crt_strchr.c  \n//   \n// This program illustrates searching for a character  \n// with strchr (search forward) or strrchr (search backward).  \n//  \n  \n#include <string.h>  \n#include <stdio.h>  \n  \nint  ch = 'r';  \n  \nchar string[] = \"The quick brown dog jumps over the lazy fox\";  \nchar fmt1[] =   \"         1         2         3         4         5\";  \nchar fmt2[] =   \"12345678901234567890123456789012345678901234567890\";  \n  \nint main( void )  \n{  \n   char *pdest;  \n   int result;  \n  \n   printf_s( \"String to be searched:\\n      %s\\n\", string );  \n   printf_s( \"      %s\\n      %s\\n\\n\", fmt1, fmt2 );  \n   printf_s( \"Search char:   %c\\n\", ch );  \n  \n   // Search forward.   \n   pdest = strchr( string, ch );  \n   result = (int)(pdest - string + 1);  \n   if ( pdest != NULL )  \n      printf_s( \"Result:   first %c found at position %d\\n\",   \n              ch, result );  \n   else  \n      printf_s( \"Result:   %c not found\\n\", ch );  \n  \n   // Search backward.   \n   pdest = strrchr( string, ch );  \n   result = (int)(pdest - string + 1);  \n   if ( pdest != NULL )  \n      printf_s( \"Result:   last %c found at position %d\\n\", ch, result );  \n   else  \n      printf_s( \"Result:\\t%c not found\\n\", ch );  \n}  \n```  \n  \n```Output  \nString to be searched:  \n      The quick brown dog jumps over the lazy fox  \n               1         2         3         4         5  \n      12345678901234567890123456789012345678901234567890  \n  \nSearch char:   r  \nResult:   first r found at position 12  \nResult:   last r found at position 30  \n```  \n  \n## .NET Framework Equivalent  \n [System::String::IndexOf](https://msdn.microsoft.com/en-us/library/system.string.indexof.aspx)  \n  \n## See Also  \n [String Manipulation](../../c-runtime-library/string-manipulation-crt.md)   \n [Locale](../../c-runtime-library/locale.md)   \n [Interpretation of Multibyte-Character Sequences](../../c-runtime-library/interpretation-of-multibyte-character-sequences.md)   \n [strcspn, wcscspn, _mbscspn, _mbscspn_l](../../c-runtime-library/reference/strcspn-wcscspn-mbscspn-mbscspn-l.md)   \n [strncat, _strncat_l, wcsncat, _wcsncat_l, _mbsncat, _mbsncat_l](../../c-runtime-library/reference/strncat-strncat-l-wcsncat-wcsncat-l-mbsncat-mbsncat-l.md)   \n [strncmp, wcsncmp, _mbsncmp, _mbsncmp_l](../../c-runtime-library/reference/strncmp-wcsncmp-mbsncmp-mbsncmp-l.md)   \n [strncpy, _strncpy_l, wcsncpy, _wcsncpy_l, _mbsncpy, _mbsncpy_l](../../c-runtime-library/reference/strncpy-strncpy-l-wcsncpy-wcsncpy-l-mbsncpy-mbsncpy-l.md)   \n [_strnicmp, _wcsnicmp, _mbsnicmp, _strnicmp_l, _wcsnicmp_l, _mbsnicmp_l](../../c-runtime-library/reference/strnicmp-wcsnicmp-mbsnicmp-strnicmp-l-wcsnicmp-l-mbsnicmp-l.md)   \n [strpbrk, wcspbrk, _mbspbrk, _mbspbrk_l](../../c-runtime-library/reference/strpbrk-wcspbrk-mbspbrk-mbspbrk-l.md)   \n [strrchr, wcsrchr, _mbsrchr, _mbsrchr_l](../../c-runtime-library/reference/strrchr-wcsrchr-mbsrchr-mbsrchr-l.md)   \n [strstr, wcsstr, _mbsstr, _mbsstr_l](../../c-runtime-library/reference/strstr-wcsstr-mbsstr-mbsstr-l.md)"}