{"nodes":[{"pos":[12,37],"content":"_umul128 | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"_umul128 | Microsoft Docs","pos":[0,25]}]},{"content":"_umul128","pos":[596,604]},{"content":"Microsoft Specific","pos":[607,625]},{"pos":[634,854],"content":"Multiplies two 64-bit unsigned integers passed in as the first two arguments and puts the high 64 bits of the product in the 64-bit unsigned integer pointed to by <ph id=\"ph1\">`HighProduct`</ph> and returns the low 64 bits of the product.","source":"Multiplies two 64-bit unsigned integers passed in as the first two arguments and puts the high 64 bits of the product in the 64-bit unsigned integer pointed to by `HighProduct` and returns the low 64 bits of the product."},{"content":"Syntax","pos":[863,869]},{"content":"Parameters","pos":[1038,1048]},{"content":"[in]","pos":[1052,1056]},{"content":"The first 64-bit integer to multiply.","pos":[1073,1110]},{"content":"[in]","pos":[1117,1121]},{"content":"The second 64-bit integer to multiply.","pos":[1140,1178]},{"content":"[out]","pos":[1185,1190]},{"content":"The high 64 bits of the product.","pos":[1208,1240]},{"content":"Return Value","pos":[1249,1261]},{"content":"The low 64 bits of the product.","pos":[1265,1296]},{"content":"Requirements","pos":[1305,1317]},{"content":"Intrinsic","pos":[1324,1333]},{"content":"Architecture","pos":[1334,1346]},{"content":"Header","pos":[1347,1353]},{"pos":[1421,1425],"content":"ARM,"},{"content":"intrin.h&gt;","pos":[1492,1501],"source":"intrin.h>"},{"content":"Example","pos":[1511,1518]},{"content":"END Microsoft Specific","pos":[1987,2009]},{"content":"See Also","pos":[2018,2026]},{"content":"Compiler Intrinsics","pos":[2031,2050]}],"content":"---\ntitle: \"_umul128 | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"__umul128\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"__umul128 intrinsic\"\nms.assetid: 13684df3-3ac7-467c-b258-a0e93bc490b5\ncaps.latest.revision: 15\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# _umul128\n**Microsoft Specific**  \n  \n Multiplies two 64-bit unsigned integers passed in as the first two arguments and puts the high 64 bits of the product in the 64-bit unsigned integer pointed to by `HighProduct` and returns the low 64 bits of the product.  \n  \n## Syntax  \n  \n```  \nunsigned __int64 _umul128(   \n   unsigned __int64 Multiplier,   \n   unsigned __int64 Multiplicand,   \n   unsigned __int64 *HighProduct   \n);  \n```  \n  \n#### Parameters  \n [in] `Multiplier`  \n The first 64-bit integer to multiply.  \n  \n [in] `Multiplicand`  \n The second 64-bit integer to multiply.  \n  \n [out] `HighProduct`  \n The high 64 bits of the product.  \n  \n## Return Value  \n The low 64 bits of the product.  \n  \n## Requirements  \n  \n|Intrinsic|Architecture|Header|  \n|---------------|------------------|------------|  \n|`_umul128`|ARM, [!INCLUDE[vcprx64](../assembler/inline/includes/vcprx64_md.md)]|\\<intrin.h>|  \n  \n## Example  \n  \n```  \n// umul128.c  \n// processor: IPF, x64  \n  \n#include <stdio.h>  \n#include <intrin.h>  \n  \n#pragma intrinsic(_umul128)  \n  \nint main()  \n{  \n    unsigned __int64 a = 0x0fffffffffffffffI64;  \n    unsigned __int64 b = 0xf0000000I64;  \n    unsigned __int64 c, d;  \n  \n    d = _umul128(a, b, &c);  \n  \n    printf_s(\"%#I64x * %#I64x = %#I64x%I64x\\n\", a, b, c, d);  \n}  \n```  \n  \n```Output  \n0xfffffffffffffff * 0xf0000000 = 0xeffffffffffffff10000000  \n```  \n  \n## END Microsoft Specific  \n  \n## See Also  \n [Compiler Intrinsics](../intrinsics/compiler-intrinsics.md)"}