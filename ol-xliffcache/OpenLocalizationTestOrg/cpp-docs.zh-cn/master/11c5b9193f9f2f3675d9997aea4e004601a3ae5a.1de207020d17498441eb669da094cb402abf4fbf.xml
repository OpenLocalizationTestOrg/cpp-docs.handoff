{"nodes":[{"pos":[12,46],"content":"Arguments to main | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Arguments to main | Microsoft Docs","pos":[0,34]}]},{"content":"Arguments to main","pos":[534,551]},{"pos":[552,609],"content":"<bpt id=\"p1\">**</bpt>ANSI 2.1.2.2.1<ept id=\"p1\">**</ept> The semantics of the arguments to main","source":"**ANSI 2.1.2.2.1** The semantics of the arguments to main"},{"content":"In Microsoft C, the function called at program startup is called <bpt id=\"p1\">**</bpt>main<ept id=\"p1\">**</ept>.","pos":[616,690],"source":"In Microsoft C, the function called at program startup is called **main**."},{"content":"There is no prototype declared for <bpt id=\"p1\">**</bpt>main<ept id=\"p1\">**</ept>, and it can be defined with zero, two, or three parameters:","pos":[691,794],"source":" There is no prototype declared for **main**, and it can be defined with zero, two, or three parameters:"},{"content":"The third line above, where <bpt id=\"p1\">**</bpt>main<ept id=\"p1\">**</ept> accepts three parameters, is a Microsoft extension to the ANSI C standard.","pos":[923,1034],"source":"The third line above, where **main** accepts three parameters, is a Microsoft extension to the ANSI C standard."},{"content":"The third parameter, <bpt id=\"p1\">**</bpt>envp<ept id=\"p1\">**</ept>, is an array of pointers to environment variables.","pos":[1035,1115],"source":" The third parameter, **envp**, is an array of pointers to environment variables."},{"content":"The <bpt id=\"p1\">**</bpt>envp<ept id=\"p1\">**</ept> array is terminated by a null pointer.","pos":[1116,1167],"source":" The **envp** array is terminated by a null pointer."},{"content":"See <bpt id=\"p1\">[</bpt>The main Function and Program Execution<ept id=\"p1\">](../c-language/main-function-and-program-execution.md)</ept> for more information about <bpt id=\"p2\">**</bpt>main<ept id=\"p2\">**</ept> and <bpt id=\"p3\">**</bpt>envp<ept id=\"p3\">**</ept>.","pos":[1168,1317],"source":" See [The main Function and Program Execution](../c-language/main-function-and-program-execution.md) for more information about **main** and **envp**."},{"pos":[1324,1375],"content":"The variable <bpt id=\"p1\">**</bpt>argc<ept id=\"p1\">**</ept> never holds a negative value.","source":"The variable **argc** never holds a negative value."},{"pos":[1382,1459],"content":"The array of strings ends with <bpt id=\"p1\">**</bpt>argv[argc]<ept id=\"p1\">**</ept>, which contains a null pointer.","source":"The array of strings ends with **argv[argc]**, which contains a null pointer."},{"pos":[1466,1525],"content":"All elements of the <bpt id=\"p1\">**</bpt>argv<ept id=\"p1\">**</ept> array are pointers to strings.","source":"All elements of the **argv** array are pointers to strings."},{"content":"A program invoked with no command-line arguments will receive a value of one for <bpt id=\"p1\">**</bpt>argc<ept id=\"p1\">**</ept>, as the name of the executable file is placed in <bpt id=\"p2\">**</bpt>argv[0]<ept id=\"p2\">**</ept>.","pos":[1532,1683],"source":"A program invoked with no command-line arguments will receive a value of one for **argc**, as the name of the executable file is placed in **argv[0]**."},{"content":"(In MS-DOS versions prior to 3.0, the executable-file name is not available.","pos":[1684,1760]},{"content":"The letter \"C\" is placed in <bpt id=\"p1\">**</bpt>argv[0]<ept id=\"p1\">**</ept>.) Strings pointed to by <bpt id=\"p2\">**</bpt>argv[1]<ept id=\"p2\">**</ept> through <bpt id=\"p3\">**</bpt>argv[argc – 1]<ept id=\"p3\">**</ept> represent program parameters.","pos":[1761,1893],"source":" The letter \"C\" is placed in **argv[0]**.) Strings pointed to by **argv[1]** through **argv[argc – 1]** represent program parameters."},{"pos":[1900,2036],"content":"The parameters <bpt id=\"p1\">**</bpt>argc<ept id=\"p1\">**</ept> and <bpt id=\"p2\">**</bpt>argv<ept id=\"p2\">**</ept> are modifiable and retain their last-stored values between program startup and program termination.","source":"The parameters **argc** and **argv** are modifiable and retain their last-stored values between program startup and program termination."},{"content":"See Also","pos":[2045,2053]},{"content":"Environment","pos":[2058,2069]}],"content":"---\ntitle: \"Arguments to main | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"C++\"\n  - \"C\"\nms.assetid: 39824fef-05ad-461d-ae82-49447dda8060\ncaps.latest.revision: 7\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Arguments to main\n**ANSI 2.1.2.2.1** The semantics of the arguments to main  \n  \n In Microsoft C, the function called at program startup is called **main**. There is no prototype declared for **main**, and it can be defined with zero, two, or three parameters:  \n  \n```  \nint main( void )  \nint main( int argc, char *argv[] )  \nint main( int argc, char *argv[], char *envp[] )  \n```  \n  \n The third line above, where **main** accepts three parameters, is a Microsoft extension to the ANSI C standard. The third parameter, **envp**, is an array of pointers to environment variables. The **envp** array is terminated by a null pointer. See [The main Function and Program Execution](../c-language/main-function-and-program-execution.md) for more information about **main** and **envp**.  \n  \n The variable **argc** never holds a negative value.  \n  \n The array of strings ends with **argv[argc]**, which contains a null pointer.  \n  \n All elements of the **argv** array are pointers to strings.  \n  \n A program invoked with no command-line arguments will receive a value of one for **argc**, as the name of the executable file is placed in **argv[0]**. (In MS-DOS versions prior to 3.0, the executable-file name is not available. The letter \"C\" is placed in **argv[0]**.) Strings pointed to by **argv[1]** through **argv[argc – 1]** represent program parameters.  \n  \n The parameters **argc** and **argv** are modifiable and retain their last-stored values between program startup and program termination.  \n  \n## See Also  \n [Environment](../c-language/environment.md)"}