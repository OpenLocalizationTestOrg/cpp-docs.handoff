{"nodes":[{"pos":[12,60],"content":"AsyncBase::get_ErrorCode Method | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"AsyncBase::get_ErrorCode Method | Microsoft Docs","pos":[0,48]}]},{"content":"AsyncBase::get_ErrorCode Method","pos":[684,715]},{"content":"Retrieves the error code for the current asynchronous operation.","pos":[716,780]},{"content":"Syntax","pos":[789,795]},{"content":"Parameters","pos":[887,897]},{"content":"The location where the current error code is stored.","pos":[916,968]},{"content":"Return Value","pos":[977,989]},{"content":"S_OK if successful; otherwise, E_ILLEGAL_METHOD_CALL if the current asynchronous operation is closed.","pos":[993,1094]},{"content":"Requirements","pos":[1103,1115]},{"pos":[1119,1138],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> async.h","source":"**Header:** async.h"},{"pos":[1145,1174],"content":"<bpt id=\"p1\">**</bpt>Namespace:<ept id=\"p1\">**</ept> Microsoft::WRL","source":"**Namespace:** Microsoft::WRL"},{"content":"See Also","pos":[1183,1191]},{"content":"AsyncBase Class","pos":[1196,1211]}],"content":"---\ntitle: \"AsyncBase::get_ErrorCode Method | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"async/Microsoft::WRL::AsyncBase::get_ErrorCode\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"get_ErrorCode method\"\nms.assetid: 50b4f8a2-9a21-4ea0-bb5d-7ff524d62aea\ncaps.latest.revision: 3\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"ru-ru\"\n  - \"zh-cn\"\n  - \"zh-tw\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"tr-tr\"\n---\n# AsyncBase::get_ErrorCode Method\nRetrieves the error code for the current asynchronous operation.  \n  \n## Syntax  \n  \n```  \nSTDMETHOD(  \n   get_ErrorCode  \n)(HRESULT* errorCode) override;  \n```  \n  \n#### Parameters  \n `errorCode`  \n The location where the current error code is stored.  \n  \n## Return Value  \n S_OK if successful; otherwise, E_ILLEGAL_METHOD_CALL if the current asynchronous operation is closed.  \n  \n## Requirements  \n **Header:** async.h  \n  \n **Namespace:** Microsoft::WRL  \n  \n## See Also  \n [AsyncBase Class](../windows/asyncbase-class.md)"}