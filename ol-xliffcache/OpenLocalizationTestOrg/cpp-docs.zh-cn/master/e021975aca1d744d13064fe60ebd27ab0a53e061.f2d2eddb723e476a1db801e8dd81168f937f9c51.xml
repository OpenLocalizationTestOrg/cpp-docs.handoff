{"nodes":[{"pos":[12,67],"content":"Compiler Options Listed Alphabetically | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Compiler Options Listed Alphabetically | Microsoft Docs","pos":[0,55]}]},{"content":"Compiler Options Listed Alphabetically","pos":[624,662]},{"content":"The following is a comprehensive alphabetical list of compiler options.","pos":[663,734]},{"content":"For a categorical list, see the <bpt id=\"p1\">[</bpt>Compiler Options Listed by Category<ept id=\"p1\">](../../build/reference/compiler-options-listed-by-category.md)</ept>.","pos":[735,867],"source":" For a categorical list, see the [Compiler Options Listed by Category](../../build/reference/compiler-options-listed-by-category.md)."},{"content":"Option","pos":[874,880]},{"content":"Purpose","pos":[881,888]},{"content":"Specifies a response file.","pos":[990,1016]},{"content":"/?","pos":[1022,1024]},{"content":"Lists the compiler options.","pos":[1084,1111]},{"content":"/AI","pos":[1117,1120]},{"pos":[1180,1320],"content":"Specifies a directory to search to resolve file references passed to the <bpt id=\"p1\">[</bpt>#using<ept id=\"p1\">](../../preprocessor/hash-using-directive-cpp.md)</ept> directive.","source":"Specifies a directory to search to resolve file references passed to the [#using](../../preprocessor/hash-using-directive-cpp.md) directive."},{"content":"/analyze","pos":[1326,1334]},{"content":"Enable code analysis.","pos":[1384,1405]},{"content":"/arch","pos":[1411,1416]},{"content":"Specifies the architecture for code generation.","pos":[1474,1521]},{"content":"/bigobj","pos":[1527,1534]},{"content":"Increases the number of addressable sections in an .obj file.","pos":[1613,1674]},{"content":"/C","pos":[1680,1682]},{"content":"Preserves comments during preprocessing.","pos":[1751,1791]},{"content":"/c","pos":[1797,1799]},{"content":"Compiles without linking.","pos":[1853,1878]},{"content":"/cgthreads","pos":[1884,1894]},{"content":"Specifies number of cl.exe threads to use for optimization and code generation.","pos":[1956,2035]},{"content":"/clr","pos":[2041,2045]},{"content":"Produces an output file to run on the common language runtime.","pos":[2113,2175]},{"content":"/D","pos":[2181,2183]},{"content":"Defines constants and macros.","pos":[2238,2267]},{"content":"/doc","pos":[2273,2277]},{"content":"Process documentation comments to an XML file.","pos":[2346,2392]},{"content":"/E","pos":[2398,2400]},{"content":"Copies preprocessor output to standard output.","pos":[2451,2497]},{"content":"/EH","pos":[2503,2506]},{"content":"Specifies the model of exception handling.","pos":[2562,2604]},{"content":"/EP","pos":[2610,2613]},{"content":"Copies preprocessor output to standard output.","pos":[2694,2740]},{"content":"/errorReport","pos":[2746,2758]},{"content":"Allows you to provide internal compiler error (ICE) information directly to the Visual C++ team.","pos":[2830,2926]},{"content":"/F","pos":[2932,2934]},{"content":"Sets stack size.","pos":[2979,2995]},{"content":"/favor","pos":[3001,3007]},{"pos":[3077,3322],"content":"Produces code that is optimized for a specific <ph id=\"ph1\">[!INCLUDE[vcprx64](../../assembler/inline/includes/vcprx64_md.md)]</ph> architecture or for the specifics of micro-architectures in both the AMD64 and Extended Memory 64 Technology (EM64T) architectures.","source":"Produces code that is optimized for a specific [!INCLUDE[vcprx64](../../assembler/inline/includes/vcprx64_md.md)] architecture or for the specifics of micro-architectures in both the AMD64 and Extended Memory 64 Technology (EM64T) architectures."},{"content":"/FA","pos":[3328,3331]},{"content":"Creates a listing file.","pos":[3378,3401]},{"content":"/Fa","pos":[3407,3410]},{"content":"Sets the listing file name.","pos":[3457,3484]},{"content":"/FC","pos":[3490,3493]},{"content":"Display full path of source code files passed to cl.exe in diagnostic text.","pos":[3569,3644]},{"content":"/Fd","pos":[3650,3653]},{"content":"Renames program database file.","pos":[3711,3741]},{"content":"/Fe","pos":[3747,3750]},{"content":"Renames the executable file.","pos":[3795,3823]},{"content":"/FI","pos":[3829,3832]},{"content":"Preprocesses the specified include file.","pos":[3888,3928]},{"content":"/Fi","pos":[3934,3937]},{"content":"Sets the preprocessed output file name.","pos":[3996,4035]},{"content":"/Fm","pos":[4041,4044]},{"content":"Creates a mapfile.","pos":[4088,4106]},{"content":"/Fo","pos":[4112,4115]},{"content":"Creates an object file.","pos":[4163,4186]},{"content":"/fp","pos":[4192,4195]},{"content":"Specify floating-point behavior.","pos":[4258,4290]},{"content":"/Fp","pos":[4296,4299]},{"content":"Specifies a precompiled header file name.","pos":[4348,4389]},{"content":"/FR","pos":[4395,4398]},{"content":"/Fr","pos":[4465,4468]},{"content":"Generates browser files.","pos":[4522,4546]},{"content":"<bpt id=\"p1\">**</bpt>/Fr<ept id=\"p1\">**</ept> is deprecated.","pos":[4547,4569],"source":"**/Fr** is deprecated."},{"content":"/FS","pos":[4575,4578]},{"content":"Forces writes to the program database (PDB) file to be serialized through MSPDBSRV.EXE.","pos":[4638,4725]},{"content":"/FU","pos":[4731,4734]},{"pos":[4793,4922],"content":"Forces the use of a file name as if it had been passed to the <bpt id=\"p1\">[</bpt>#using<ept id=\"p1\">](../../preprocessor/hash-using-directive-cpp.md)</ept> directive.","source":"Forces the use of a file name as if it had been passed to the [#using](../../preprocessor/hash-using-directive-cpp.md) directive."},{"content":"/Fx","pos":[4928,4931]},{"content":"Merges injected code with source file.","pos":[4982,5020]},{"content":"/GA","pos":[5026,5029]},{"content":"Optimizes code for Windows application.","pos":[5093,5132]},{"content":"/Gd","pos":[5138,5141]},{"pos":[5200,5249],"content":"Uses the <ph id=\"ph1\">`__cdecl`</ph> calling convention (x86 only).","source":"Uses the `__cdecl` calling convention (x86 only)."},{"content":"/Ge","pos":[5255,5258]},{"content":"Deprecated.","pos":[5309,5320]},{"content":"Activates stack probes.","pos":[5321,5344]},{"content":"/GF","pos":[5350,5353]},{"content":"Enables string pooling.","pos":[5412,5435]},{"content":"/GH","pos":[5441,5444]},{"pos":[5502,5531],"content":"Calls hook function <ph id=\"ph1\">`_pexit`</ph>.","source":"Calls hook function `_pexit`."},{"content":"/Gh","pos":[5537,5540]},{"pos":[5599,5629],"content":"Calls hook function <ph id=\"ph1\">`_penter`</ph>.","source":"Calls hook function `_penter`."},{"content":"/GL","pos":[5635,5638]},{"content":"Enables whole program optimization.","pos":[5696,5731]},{"content":"/Gm","pos":[5737,5740]},{"content":"Enables minimal rebuild.","pos":[5794,5818]},{"content":"/GR","pos":[5824,5827]},{"content":"Enables run-time type information (RTTI).","pos":[5891,5932]},{"content":"/Gr","pos":[5938,5941]},{"pos":[6000,6052],"content":"Uses the <ph id=\"ph1\">`__fastcall`</ph> calling convention (x86 only).","source":"Uses the `__fastcall` calling convention (x86 only)."},{"content":"/GS","pos":[6058,6061]},{"content":"Buffers security check.","pos":[6114,6137]},{"content":"/Gs","pos":[6143,6146]},{"content":"Controls stack probes.","pos":[6206,6228]},{"content":"/GT","pos":[6234,6237]},{"content":"Supports fiber safety for data allocated using static thread-local storage.","pos":[6308,6383]},{"content":"/guard:cf","pos":[6389,6398]},{"content":"Adds control flow guard security checks.","pos":[6458,6498]},{"content":"/Gv","pos":[6504,6507]},{"content":"Uses the <ph id=\"ph1\">`__vectorcall`</ph> calling convention.","pos":[6566,6609],"source":"Uses the `__vectorcall` calling convention."},{"content":"(x86 and x64 only)","pos":[6610,6628]},{"content":"/Gw","pos":[6634,6637]},{"content":"Enables whole-program global data optimization.","pos":[6689,6736]},{"content":"/GX","pos":[6742,6745]},{"content":"Deprecated.","pos":[6802,6813]},{"content":"Enables synchronous exception handling.","pos":[6814,6853]},{"content":"Use <bpt id=\"p1\">[</bpt>/EH<ept id=\"p1\">](../../build/reference/eh-exception-handling-model.md)</ept> instead.","pos":[6854,6926],"source":" Use [/EH](../../build/reference/eh-exception-handling-model.md) instead."},{"content":"/Gy","pos":[6932,6935]},{"content":"Enables function-level linking.","pos":[6996,7027]},{"content":"/GZ","pos":[7033,7036]},{"content":"Deprecated.","pos":[7110,7121]},{"content":"Same as <bpt id=\"p1\">[</bpt>/RTC1<ept id=\"p1\">](../../build/reference/rtc-run-time-error-checks.md)</ept>.","pos":[7122,7190],"source":" Same as [/RTC1](../../build/reference/rtc-run-time-error-checks.md)."},{"content":"/Gz","pos":[7196,7199]},{"pos":[7258,7309],"content":"Uses the <ph id=\"ph1\">`__stdcall`</ph> calling convention (x86 only).","source":"Uses the `__stdcall` calling convention (x86 only)."},{"content":"/H","pos":[7315,7317]},{"content":"Deprecated.","pos":[7381,7392]},{"content":"Restricts the length of external (public) names.","pos":[7393,7441]},{"content":"/HELP","pos":[7447,7452]},{"content":"Lists the compiler options.","pos":[7512,7539]},{"content":"/homeparams","pos":[7545,7556]},{"content":"Forces parameters passed in registers to be written to their locations on the stack upon function entry.","pos":[7629,7733]},{"content":"This compiler option is only for the <ph id=\"ph1\">[!INCLUDE[vcprx64](../../assembler/inline/includes/vcprx64_md.md)]</ph> compilers (native and cross compile).","pos":[7734,7875],"source":" This compiler option is only for the [!INCLUDE[vcprx64](../../assembler/inline/includes/vcprx64_md.md)] compilers (native and cross compile)."},{"content":"/hotpatch","pos":[7881,7890]},{"content":"Creates a hotpatchable image.","pos":[7953,7982]},{"content":"/I","pos":[7988,7990]},{"content":"Searches a directory for include files.","pos":[8051,8090]},{"content":"/J","pos":[8096,8098]},{"pos":[8158,8190],"content":"Changes the default <ph id=\"ph1\">`char`</ph> type.","source":"Changes the default `char` type."},{"content":"/kernel","pos":[8196,8203]},{"content":"The compiler and linker will create a binary that can be executed in the Windows kernel.","pos":[8264,8352]},{"content":"/LD","pos":[8358,8361]},{"content":"Creates a dynamic-link library.","pos":[8419,8450]},{"content":"/LDd","pos":[8456,8460]},{"content":"Creates a debug dynamic-link library.","pos":[8518,8555]},{"content":"/link","pos":[8561,8566]},{"content":"Passes the specified option to LINK.","pos":[8622,8658]},{"content":"/LN","pos":[8664,8667]},{"content":"Creates an MSIL module.","pos":[8717,8740]},{"content":"/MD","pos":[8746,8749]},{"content":"Creates a multithreaded DLL using MSVCRT.lib.","pos":[8807,8852]},{"content":"/MDd","pos":[8858,8862]},{"content":"Creates a debug multithreaded DLL using MSVCRTD.lib.","pos":[8920,8972]},{"content":"/MP","pos":[8978,8981]},{"content":"Compiles multiple source files by using multiple processes.","pos":[9042,9101]},{"content":"/MT","pos":[9107,9110]},{"content":"Creates a multithreaded executable file using LIBCMT.lib.","pos":[9168,9225]},{"content":"/MTd","pos":[9231,9235]},{"content":"Creates a debug multithreaded executable file using LIBCMTD.lib.","pos":[9293,9357]},{"content":"/nologo","pos":[9363,9370]},{"content":"Suppresses display of sign-on banner.","pos":[9435,9472]},{"content":"/O1","pos":[9478,9481]},{"content":"Creates small code.","pos":[9544,9563]},{"content":"/O2","pos":[9569,9572]},{"content":"Creates fast code.","pos":[9635,9653]},{"content":"/Ob","pos":[9659,9662]},{"content":"Controls inline expansion.","pos":[9719,9745]},{"content":"/Od","pos":[9751,9754]},{"content":"Disables optimization.","pos":[9799,9821]},{"content":"/Og","pos":[9827,9830]},{"content":"Deprecated.","pos":[9882,9893]},{"content":"Uses global optimizations.","pos":[9894,9920]},{"content":"/Oi","pos":[9926,9929]},{"content":"Generates intrinsic functions.","pos":[9989,10019]},{"content":"/openmp","pos":[10025,10032]},{"pos":[10093,10157],"content":"Enables <bpt id=\"p1\">[</bpt>#pragma omp<ept id=\"p1\">](../../preprocessor/omp.md)</ept> in source code.","source":"Enables [#pragma omp](../../preprocessor/omp.md) in source code."},{"content":"/Os","pos":[10163,10166]},{"content":"Favors small code.","pos":[10233,10251]},{"content":"/Ot","pos":[10257,10260]},{"content":"Favors fast code.","pos":[10327,10344]},{"content":"/Ox","pos":[10350,10353]},{"content":"Uses maximum optimization (/Ob2gity /Gs).","pos":[10402,10443]},{"content":"/Oy","pos":[10449,10452]},{"content":"Omits frame pointer (x86 only).","pos":[10506,10537]},{"content":"/P","pos":[10543,10545]},{"content":"Writes preprocessor output to a file.","pos":[10596,10633]},{"content":"/Qfast_transcendentals","pos":[10639,10661]},{"content":"Generates fast transcendentals.","pos":[10738,10769]},{"content":"/QIfist","pos":[10775,10782]},{"content":"Deprecated.","pos":[10831,10842]},{"content":"Suppresses <ph id=\"ph1\">`_ftol`</ph> when a conversion from a floating-point type to an integral type is required (x86 only).","pos":[10843,10950],"source":" Suppresses `_ftol` when a conversion from a floating-point type to an integral type is required (x86 only)."},{"content":"/Qimprecise_fwaits","pos":[10956,10974]},{"pos":[11052,11097],"content":"Removes <ph id=\"ph1\">`fwait`</ph> commands inside <ph id=\"ph2\">`try`</ph> blocks.","source":"Removes `fwait` commands inside `try` blocks."},{"content":"/Qpar (Auto-Parallelizer)","pos":[11103,11128]},{"pos":[11179,11302],"content":"Enables automatic parallelization of loops that are marked with the <bpt id=\"p1\">[</bpt>#pragma loop()<ept id=\"p1\">](../../preprocessor/loop.md)</ept> directive.","source":"Enables automatic parallelization of loops that are marked with the [#pragma loop()](../../preprocessor/loop.md) directive."},{"content":"/Qsafe_fp_loads","pos":[11308,11323]},{"content":"Uses integer move instructions for floating-point values and disables certain floating point load optimizations.","pos":[11366,11478]},{"content":"/Qvec-report (Auto-Vectorizer Reporting Level)","pos":[11484,11530]},{"content":"Enables reporting levels for automatic vectorization.","pos":[11602,11655]},{"content":"/RTC","pos":[11661,11665]},{"content":"Enables run-time error checking.","pos":[11719,11751]},{"content":"/sdl","pos":[11757,11761]},{"content":"Enables additional security features and warnings.","pos":[11827,11877]},{"content":"/showIncludes","pos":[11883,11896]},{"content":"Displays a list of include files during compilation.","pos":[11956,12008]},{"content":"/Tc","pos":[12014,12017]},{"content":"/TC","pos":[12095,12098]},{"content":"Specifies a C source file.","pos":[12163,12189]},{"content":"/Tp","pos":[12195,12198]},{"content":"/TP","pos":[12276,12279]},{"content":"Specifies a C++ source file.","pos":[12344,12372]},{"content":"/U","pos":[12378,12380]},{"content":"Removes a predefined macro.","pos":[12429,12456]},{"content":"/u","pos":[12462,12464]},{"content":"Removes all predefined macros.","pos":[12513,12543]},{"content":"/V","pos":[12549,12551]},{"content":"Deprecated.","pos":[12596,12607]},{"content":"Sets the .obj file version string.","pos":[12608,12642]},{"content":"/vd","pos":[12648,12651]},{"content":"Suppresses or enables hidden vtordisp class members.","pos":[12717,12769]},{"content":"/vmb","pos":[12775,12779]},{"content":"Uses best base for pointers to members.","pos":[12837,12876]},{"content":"/vmg","pos":[12882,12886]},{"content":"Uses full generality for pointers to members.","pos":[12944,12989]},{"content":"/vmm","pos":[12995,12999]},{"content":"Declares multiple inheritance.","pos":[13070,13100]},{"content":"/vms","pos":[13106,13110]},{"content":"Declares single inheritance.","pos":[13181,13209]},{"content":"/vmv","pos":[13215,13219]},{"content":"Declares virtual inheritance.","pos":[13290,13319]},{"content":"/volatile","pos":[13325,13334]},{"content":"Selects how the volatile keyword is interpreted.","pos":[13403,13451]},{"content":"/w","pos":[13457,13459]},{"content":"Disables all warnings.","pos":[13517,13539]},{"content":"/W0, /W1, /W2, /W3, /W4","pos":[13545,13568]},{"content":"Sets which warning level to output.","pos":[13626,13661]},{"content":"/w1, /w2, /w3, /w4","pos":[13667,13685]},{"content":"Sets the warning level for the specified warning.","pos":[13743,13792]},{"content":"/Wall","pos":[13798,13803]},{"content":"Enables all warnings, including warnings that are disabled by default.","pos":[13861,13931]},{"content":"/wd","pos":[13937,13940]},{"content":"Disables the specified warning.","pos":[13998,14029]},{"content":"/we","pos":[14035,14038]},{"content":"Treats the specified warning as an error.","pos":[14096,14137]},{"content":"/WL","pos":[14143,14146]},{"content":"Enables one-line diagnostics for error and warning messages when compiling C++ source code from the command line.","pos":[14205,14318]},{"content":"/wo","pos":[14324,14327]},{"content":"Displays the specified warning only once.","pos":[14385,14426]},{"content":"/Wp64","pos":[14432,14437]},{"content":"Obsolete.","pos":[14503,14512]},{"content":"Detects 64-bit portability problems.","pos":[14513,14549]},{"content":"/Wv","pos":[14555,14558]},{"content":"Displays no warnings introduced after the specified version of the compiler.","pos":[14616,14692]},{"content":"/WX","pos":[14698,14701]},{"content":"Treats all warnings as errors.","pos":[14759,14789]},{"content":"/X","pos":[14795,14797]},{"content":"Ignores the standard include directory.","pos":[14857,14896]},{"content":"/Y-","pos":[14902,14905]},{"content":"Ignores all other precompiled-header compiler options in the current build.","pos":[14969,15044]},{"content":"/Yc","pos":[15050,15053]},{"content":"Creates a precompiled header file.","pos":[15115,15149]},{"content":"/Yd","pos":[15155,15158]},{"content":"Deprecated.","pos":[15228,15239]},{"content":"Places complete debugging information in all object files.","pos":[15240,15298]},{"content":"Use <bpt id=\"p1\">[</bpt>/Zi<ept id=\"p1\">](../../build/reference/z7-zi-zi-debug-information-format.md)</ept> instead.","pos":[15299,15377],"source":" Use [/Zi](../../build/reference/z7-zi-zi-debug-information-format.md) instead."},{"content":"/Yl","pos":[15383,15386]},{"content":"Injects a PCH reference when creating a debug library","pos":[15456,15509]},{"content":"/Yu","pos":[15515,15518]},{"content":"Uses a precompiled header file during build.","pos":[15577,15621]},{"content":"/Z7","pos":[15627,15630]},{"content":"Generates C 7.0–compatible debugging information.","pos":[15692,15741]},{"content":"/Za","pos":[15747,15750]},{"content":"Disables language extensions.","pos":[15812,15841]},{"content":"/Zc","pos":[15847,15850]},{"pos":[15893,16093],"content":"Specifies standard behavior under <bpt id=\"p1\">[</bpt>/Ze<ept id=\"p1\">](../../build/reference/za-ze-disable-language-extensions.md)</ept>.<bpt id=\"p2\">[</bpt>/Za, /Ze (Disable Language Extensions)<ept id=\"p2\">](../../build/reference/za-ze-disable-language-extensions.md)</ept>","source":"Specifies standard behavior under [/Ze](../../build/reference/za-ze-disable-language-extensions.md).[/Za, /Ze (Disable Language Extensions)](../../build/reference/za-ze-disable-language-extensions.md)"},{"content":"/Ze","pos":[16099,16102]},{"content":"Deprecated.","pos":[16164,16175]},{"content":"Enables language extensions.","pos":[16176,16204]},{"content":"/Zg","pos":[16210,16213]},{"content":"Removed in Visual C++ 2015.","pos":[16273,16300]},{"content":"Generates function prototypes.","pos":[16301,16331]},{"content":"/ZI","pos":[16337,16340]},{"content":"Includes debug information in a program database compatible with Edit and Continue.","pos":[16402,16485]},{"content":"/Zi","pos":[16491,16494]},{"content":"Generates complete debugging information.","pos":[16556,16597]},{"content":"/Zl","pos":[16603,16606]},{"content":"Removes default library name from .obj file (x86 only).","pos":[16663,16718]},{"content":"/Zm","pos":[16724,16727]},{"content":"Specifies the precompiled header memory allocation limit.","pos":[16809,16866]},{"content":"/Zp","pos":[16872,16875]},{"content":"Packs structure members.","pos":[16930,16954]},{"content":"/Zs","pos":[16960,16963]},{"content":"Checks syntax only.","pos":[17012,17031]},{"content":"/ZW","pos":[17037,17040]},{"pos":[17099,17193],"content":"Produces an output file to run on the <ph id=\"ph1\">[!INCLUDE[wrt](../../atl/reference/includes/wrt_md.md)]</ph>.","source":"Produces an output file to run on the [!INCLUDE[wrt](../../atl/reference/includes/wrt_md.md)]."},{"content":"See Also","pos":[17203,17211]},{"content":"C/C++ Building Reference","pos":[17216,17240]},{"content":"Compiler Options","pos":[17298,17314]},{"content":"Setting Compiler Options","pos":[17364,17388]}],"content":"---\ntitle: \"Compiler Options Listed Alphabetically | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"compiler options, C++\"\nms.assetid: 98375dad-c9c6-4796-aaa6-fd573269d4ae\ncaps.latest.revision: 66\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"ru-ru\"\n  - \"zh-cn\"\n  - \"zh-tw\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"tr-tr\"\n---\n# Compiler Options Listed Alphabetically\nThe following is a comprehensive alphabetical list of compiler options. For a categorical list, see the [Compiler Options Listed by Category](../../build/reference/compiler-options-listed-by-category.md).  \n  \n|Option|Purpose|  \n|------------|-------------|  \n|[@](../../build/reference/at-specify-a-compiler-response-file.md)|Specifies a response file.|  \n|[/?](../../build/reference/help-compiler-command-line-help.md)|Lists the compiler options.|  \n|[/AI](../../build/reference/ai-specify-metadata-directories.md)|Specifies a directory to search to resolve file references passed to the [#using](../../preprocessor/hash-using-directive-cpp.md) directive.|  \n|[/analyze](../../build/reference/analyze-code-analysis.md)|Enable code analysis.|  \n|[/arch](../../build/reference/arch-minimum-cpu-architecture.md)|Specifies the architecture for code generation.|  \n|[/bigobj](../../build/reference/bigobj-increase-number-of-sections-in-dot-obj-file.md)|Increases the number of addressable sections in an .obj file.|  \n|[/C](../../build/reference/c-preserve-comments-during-preprocessing.md)|Preserves comments during preprocessing.|  \n|[/c](../../build/reference/c-compile-without-linking.md)|Compiles without linking.|  \n|[/cgthreads](../../build/reference/cgthreads-code-generation-threads.md)|Specifies number of cl.exe threads to use for optimization and code generation.|  \n|[/clr](../../build/reference/clr-common-language-runtime-compilation.md)|Produces an output file to run on the common language runtime.|  \n|[/D](../../build/reference/d-preprocessor-definitions.md)|Defines constants and macros.|  \n|[/doc](../../build/reference/doc-process-documentation-comments-c-cpp.md)|Process documentation comments to an XML file.|  \n|[/E](../../build/reference/e-preprocess-to-stdout.md)|Copies preprocessor output to standard output.|  \n|[/EH](../../build/reference/eh-exception-handling-model.md)|Specifies the model of exception handling.|  \n|[/EP](../../build/reference/ep-preprocess-to-stdout-without-hash-line-directives.md)|Copies preprocessor output to standard output.|  \n|[/errorReport](../../build/reference/errorreport-report-internal-compiler-errors.md)|Allows you to provide internal compiler error (ICE) information directly to the Visual C++ team.|  \n|[/F](../../build/reference/f-set-stack-size.md)|Sets stack size.|  \n|[/favor](../../build/reference/favor-optimize-for-architecture-specifics.md)|Produces code that is optimized for a specific [!INCLUDE[vcprx64](../../assembler/inline/includes/vcprx64_md.md)] architecture or for the specifics of micro-architectures in both the AMD64 and Extended Memory 64 Technology (EM64T) architectures.|  \n|[/FA](../../build/reference/fa-fa-listing-file.md)|Creates a listing file.|  \n|[/Fa](../../build/reference/fa-fa-listing-file.md)|Sets the listing file name.|  \n|[/FC](../../build/reference/fc-full-path-of-source-code-file-in-diagnostics.md)|Display full path of source code files passed to cl.exe in diagnostic text.|  \n|[/Fd](../../build/reference/fd-program-database-file-name.md)|Renames program database file.|  \n|[/Fe](../../build/reference/fe-name-exe-file.md)|Renames the executable file.|  \n|[/FI](../../build/reference/fi-name-forced-include-file.md)|Preprocesses the specified include file.|  \n|[/Fi](../../build/reference/fi-preprocess-output-file-name.md)|Sets the preprocessed output file name.|  \n|[/Fm](../../build/reference/fm-name-mapfile.md)|Creates a mapfile.|  \n|[/Fo](../../build/reference/fo-object-file-name.md)|Creates an object file.|  \n|[/fp](../../build/reference/fp-specify-floating-point-behavior.md)|Specify floating-point behavior.|  \n|[/Fp](../../build/reference/fp-name-dot-pch-file.md)|Specifies a precompiled header file name.|  \n|[/FR](../../build/reference/fr-fr-create-dot-sbr-file.md)<br /><br /> [/Fr](../../build/reference/fr-fr-create-dot-sbr-file.md)|Generates browser files. **/Fr** is deprecated.|  \n|[/FS](../../build/reference/fs-force-synchronous-pdb-writes.md)|Forces writes to the program database (PDB) file to be serialized through MSPDBSRV.EXE.|  \n|[/FU](../../build/reference/fu-name-forced-hash-using-file.md)|Forces the use of a file name as if it had been passed to the [#using](../../preprocessor/hash-using-directive-cpp.md) directive.|  \n|[/Fx](../../build/reference/fx-merge-injected-code.md)|Merges injected code with source file.|  \n|[/GA](../../build/reference/ga-optimize-for-windows-application.md)|Optimizes code for Windows application.|  \n|[/Gd](../../build/reference/gd-gr-gv-gz-calling-convention.md)|Uses the `__cdecl` calling convention (x86 only).|  \n|[/Ge](../../build/reference/ge-enable-stack-probes.md)|Deprecated. Activates stack probes.|  \n|[/GF](../../build/reference/gf-eliminate-duplicate-strings.md)|Enables string pooling.|  \n|[/GH](../../build/reference/gh-enable-pexit-hook-function.md)|Calls hook function `_pexit`.|  \n|[/Gh](../../build/reference/gh-enable-penter-hook-function.md)|Calls hook function `_penter`.|  \n|[/GL](../../build/reference/gl-whole-program-optimization.md)|Enables whole program optimization.|  \n|[/Gm](../../build/reference/gm-enable-minimal-rebuild.md)|Enables minimal rebuild.|  \n|[/GR](../../build/reference/gr-enable-run-time-type-information.md)|Enables run-time type information (RTTI).|  \n|[/Gr](../../build/reference/gd-gr-gv-gz-calling-convention.md)|Uses the `__fastcall` calling convention (x86 only).|  \n|[/GS](../../build/reference/gs-buffer-security-check.md)|Buffers security check.|  \n|[/Gs](../../build/reference/gs-control-stack-checking-calls.md)|Controls stack probes.|  \n|[/GT](../../build/reference/gt-support-fiber-safe-thread-local-storage.md)|Supports fiber safety for data allocated using static thread-local storage.|  \n|[/guard:cf](../../build/reference/guard-enable-control-flow-guard.md)|Adds control flow guard security checks.|  \n|[/Gv](../../build/reference/gd-gr-gv-gz-calling-convention.md)|Uses the `__vectorcall` calling convention. (x86 and x64 only)|  \n|[/Gw](../../build/reference/gw-optimize-global-data.md)|Enables whole-program global data optimization.|  \n|[/GX](../../build/reference/gx-enable-exception-handling.md)|Deprecated. Enables synchronous exception handling. Use [/EH](../../build/reference/eh-exception-handling-model.md) instead.|  \n|[/Gy](../../build/reference/gy-enable-function-level-linking.md)|Enables function-level linking.|  \n|[/GZ](../../build/reference/gz-enable-stack-frame-run-time-error-checking.md)|Deprecated. Same as [/RTC1](../../build/reference/rtc-run-time-error-checks.md).|  \n|[/Gz](../../build/reference/gd-gr-gv-gz-calling-convention.md)|Uses the `__stdcall` calling convention (x86 only).|  \n|[/H](../../build/reference/h-restrict-length-of-external-names.md)|Deprecated. Restricts the length of external (public) names.|  \n|[/HELP](../../build/reference/help-compiler-command-line-help.md)|Lists the compiler options.|  \n|[/homeparams](../../build/reference/homeparams-copy-register-parameters-to-stack.md)|Forces parameters passed in registers to be written to their locations on the stack upon function entry. This compiler option is only for the [!INCLUDE[vcprx64](../../assembler/inline/includes/vcprx64_md.md)] compilers (native and cross compile).|  \n|[/hotpatch](../../build/reference/hotpatch-create-hotpatchable-image.md)|Creates a hotpatchable image.|  \n|[/I](../../build/reference/i-additional-include-directories.md)|Searches a directory for include files.|  \n|[/J](../../build/reference/j-default-char-type-is-unsigned.md)|Changes the default `char` type.|  \n|[/kernel](../../build/reference/kernel-create-kernel-mode-binary.md)|The compiler and linker will create a binary that can be executed in the Windows kernel.|  \n|[/LD](../../build/reference/md-mt-ld-use-run-time-library.md)|Creates a dynamic-link library.|  \n|[/LDd](../../build/reference/md-mt-ld-use-run-time-library.md)|Creates a debug dynamic-link library.|  \n|[/link](../../build/reference/link-pass-options-to-linker.md)|Passes the specified option to LINK.|  \n|[/LN](../../build/reference/ln-create-msil-module.md)|Creates an MSIL module.|  \n|[/MD](../../build/reference/md-mt-ld-use-run-time-library.md)|Creates a multithreaded DLL using MSVCRT.lib.|  \n|[/MDd](../../build/reference/md-mt-ld-use-run-time-library.md)|Creates a debug multithreaded DLL using MSVCRTD.lib.|  \n|[/MP](../../build/reference/mp-build-with-multiple-processes.md)|Compiles multiple source files by using multiple processes.|  \n|[/MT](../../build/reference/md-mt-ld-use-run-time-library.md)|Creates a multithreaded executable file using LIBCMT.lib.|  \n|[/MTd](../../build/reference/md-mt-ld-use-run-time-library.md)|Creates a debug multithreaded executable file using LIBCMTD.lib.|  \n|[/nologo](../../build/reference/nologo-suppress-startup-banner-c-cpp.md)|Suppresses display of sign-on banner.|  \n|[/O1](../../build/reference/o1-o2-minimize-size-maximize-speed.md)|Creates small code.|  \n|[/O2](../../build/reference/o1-o2-minimize-size-maximize-speed.md)|Creates fast code.|  \n|[/Ob](../../build/reference/ob-inline-function-expansion.md)|Controls inline expansion.|  \n|[/Od](../../build/reference/od-disable-debug.md)|Disables optimization.|  \n|[/Og](../../build/reference/og-global-optimizations.md)|Deprecated. Uses global optimizations.|  \n|[/Oi](../../build/reference/oi-generate-intrinsic-functions.md)|Generates intrinsic functions.|  \n|[/openmp](../../build/reference/openmp-enable-openmp-2-0-support.md)|Enables [#pragma omp](../../preprocessor/omp.md) in source code.|  \n|[/Os](../../build/reference/os-ot-favor-small-code-favor-fast-code.md)|Favors small code.|  \n|[/Ot](../../build/reference/os-ot-favor-small-code-favor-fast-code.md)|Favors fast code.|  \n|[/Ox](../../build/reference/ox-full-optimization.md)|Uses maximum optimization (/Ob2gity /Gs).|  \n|[/Oy](../../build/reference/oy-frame-pointer-omission.md)|Omits frame pointer (x86 only).|  \n|[/P](../../build/reference/p-preprocess-to-a-file.md)|Writes preprocessor output to a file.|  \n|[/Qfast_transcendentals](../../build/reference/qfast-transcendentals-force-fast-transcendentals.md)|Generates fast transcendentals.|  \n|[/QIfist](../../build/reference/qifist-suppress-ftol.md)|Deprecated. Suppresses `_ftol` when a conversion from a floating-point type to an integral type is required (x86 only).|  \n|[/Qimprecise_fwaits](../../build/reference/qimprecise-fwaits-remove-fwaits-inside-try-blocks.md)|Removes `fwait` commands inside `try` blocks.|  \n|[/Qpar (Auto-Parallelizer)](../../build/reference/qpar-auto-parallelizer.md)|Enables automatic parallelization of loops that are marked with the [#pragma loop()](../../preprocessor/loop.md) directive.|  \n|[/Qsafe_fp_loads](../../build/reference/qsafe-fp-loads.md)|Uses integer move instructions for floating-point values and disables certain floating point load optimizations.|  \n|[/Qvec-report (Auto-Vectorizer Reporting Level)](../../build/reference/qvec-report-auto-vectorizer-reporting-level.md)|Enables reporting levels for automatic vectorization.|  \n|[/RTC](../../build/reference/rtc-run-time-error-checks.md)|Enables run-time error checking.|  \n|[/sdl](../../build/reference/sdl-enable-additional-security-checks.md)|Enables additional security features and warnings.|  \n|[/showIncludes](../../build/reference/showincludes-list-include-files.md)|Displays a list of include files during compilation.|  \n|[/Tc](../../build/reference/tc-tp-tc-tp-specify-source-file-type.md)<br /><br /> [/TC](../../build/reference/tc-tp-tc-tp-specify-source-file-type.md)|Specifies a C source file.|  \n|[/Tp](../../build/reference/tc-tp-tc-tp-specify-source-file-type.md)<br /><br /> [/TP](../../build/reference/tc-tp-tc-tp-specify-source-file-type.md)|Specifies a C++ source file.|  \n|[/U](../../build/reference/u-u-undefine-symbols.md)|Removes a predefined macro.|  \n|[/u](../../build/reference/u-u-undefine-symbols.md)|Removes all predefined macros.|  \n|[/V](../../build/reference/v-version-number.md)|Deprecated. Sets the .obj file version string.|  \n|[/vd](../../build/reference/vd-disable-construction-displacements.md)|Suppresses or enables hidden vtordisp class members.|  \n|[/vmb](../../build/reference/vmb-vmg-representation-method.md)|Uses best base for pointers to members.|  \n|[/vmg](../../build/reference/vmb-vmg-representation-method.md)|Uses full generality for pointers to members.|  \n|[/vmm](../../build/reference/vmm-vms-vmv-general-purpose-representation.md)|Declares multiple inheritance.|  \n|[/vms](../../build/reference/vmm-vms-vmv-general-purpose-representation.md)|Declares single inheritance.|  \n|[/vmv](../../build/reference/vmm-vms-vmv-general-purpose-representation.md)|Declares virtual inheritance.|  \n|[/volatile](../../build/reference/volatile-volatile-keyword-interpretation.md)|Selects how the volatile keyword is interpreted.|  \n|[/w](../../build/reference/compiler-option-warning-level.md)|Disables all warnings.|  \n|[/W0, /W1, /W2, /W3, /W4](../../build/reference/compiler-option-warning-level.md)|Sets which warning level to output.|  \n|[/w1, /w2, /w3, /w4](../../build/reference/compiler-option-warning-level.md)|Sets the warning level for the specified warning.|  \n|[/Wall](../../build/reference/compiler-option-warning-level.md)|Enables all warnings, including warnings that are disabled by default.|  \n|[/wd](../../build/reference/compiler-option-warning-level.md)|Disables the specified warning.|  \n|[/we](../../build/reference/compiler-option-warning-level.md)|Treats the specified warning as an error.|  \n|[/WL](../../build/reference/wl-enable-one-line-diagnostics.md)|Enables one-line diagnostics for error and warning messages when compiling C++ source code from the command line.|  \n|[/wo](../../build/reference/compiler-option-warning-level.md)|Displays the specified warning only once.|  \n|[/Wp64](../../build/reference/wp64-detect-64-bit-portability-issues.md)|Obsolete. Detects 64-bit portability problems.|  \n|[/Wv](../../build/reference/compiler-option-warning-level.md)|Displays no warnings introduced after the specified version of the compiler.|  \n|[/WX](../../build/reference/compiler-option-warning-level.md)|Treats all warnings as errors.|  \n|[/X](../../build/reference/x-ignore-standard-include-paths.md)|Ignores the standard include directory.|  \n|[/Y-](../../build/reference/y-ignore-precompiled-header-options.md)|Ignores all other precompiled-header compiler options in the current build.|  \n|[/Yc](../../build/reference/yc-create-precompiled-header-file.md)|Creates a precompiled header file.|  \n|[/Yd](../../build/reference/yd-place-debug-information-in-object-file.md)|Deprecated. Places complete debugging information in all object files. Use [/Zi](../../build/reference/z7-zi-zi-debug-information-format.md) instead.|  \n|[/Yl](../../build/reference/yl-inject-pch-reference-for-debug-library.md)|Injects a PCH reference when creating a debug library|  \n|[/Yu](../../build/reference/yu-use-precompiled-header-file.md)|Uses a precompiled header file during build.|  \n|[/Z7](../../build/reference/z7-zi-zi-debug-information-format.md)|Generates C 7.0–compatible debugging information.|  \n|[/Za](../../build/reference/za-ze-disable-language-extensions.md)|Disables language extensions.|  \n|[/Zc](../../build/reference/zc-conformance.md)|Specifies standard behavior under [/Ze](../../build/reference/za-ze-disable-language-extensions.md).[/Za, /Ze (Disable Language Extensions)](../../build/reference/za-ze-disable-language-extensions.md)|  \n|[/Ze](../../build/reference/za-ze-disable-language-extensions.md)|Deprecated. Enables language extensions.|  \n|[/Zg](../../build/reference/zg-generate-function-prototypes.md)|Removed in Visual C++ 2015. Generates function prototypes.|  \n|[/ZI](../../build/reference/z7-zi-zi-debug-information-format.md)|Includes debug information in a program database compatible with Edit and Continue.|  \n|[/Zi](../../build/reference/z7-zi-zi-debug-information-format.md)|Generates complete debugging information.|  \n|[/Zl](../../build/reference/zl-omit-default-library-name.md)|Removes default library name from .obj file (x86 only).|  \n|[/Zm](../../build/reference/zm-specify-precompiled-header-memory-allocation-limit.md)|Specifies the precompiled header memory allocation limit.|  \n|[/Zp](../../build/reference/zp-struct-member-alignment.md)|Packs structure members.|  \n|[/Zs](../../build/reference/zs-syntax-check-only.md)|Checks syntax only.|  \n|[/ZW](../../build/reference/zw-windows-runtime-compilation.md)|Produces an output file to run on the [!INCLUDE[wrt](../../atl/reference/includes/wrt_md.md)].|  \n  \n## See Also  \n [C/C++ Building Reference](../../build/reference/c-cpp-building-reference.md)   \n [Compiler Options](../../build/reference/compiler-options.md)   \n [Setting Compiler Options](../../build/reference/setting-compiler-options.md)"}