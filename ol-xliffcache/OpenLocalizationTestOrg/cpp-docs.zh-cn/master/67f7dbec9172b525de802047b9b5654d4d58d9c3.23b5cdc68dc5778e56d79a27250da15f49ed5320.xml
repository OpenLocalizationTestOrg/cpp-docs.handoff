{"nodes":[{"pos":[12,51],"content":"_set_com_error_handler | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"_set_com_error_handler | Microsoft Docs","pos":[0,39]}]},{"content":"_set_com_error_handler","pos":[603,625]},{"content":"Microsoft Specific","pos":[628,646]},{"content":"Replaces the default function that is used for COM error-handling.","pos":[655,721]},{"content":"Syntax","pos":[730,736]},{"content":"Parameters","pos":[898,908]},{"content":"Pointer to the replacement function.","pos":[926,962]},{"content":"information.","pos":[987,999]},{"content":"object.","pos":[1033,1040]},{"content":"Remarks","pos":[1049,1056]},{"content":"By default, <bpt id=\"p1\">[</bpt>_com_raise_error<ept id=\"p1\">](../cpp/com-raise-error.md)</ept> handles all COM errors.","pos":[1060,1141],"source":"By default, [_com_raise_error](../cpp/com-raise-error.md) handles all COM errors."},{"content":"You can change this behavior by using <ph id=\"ph1\">`_set_com_error_handler`</ph> to call your own error-handling function.","pos":[1142,1246],"source":" You can change this behavior by using `_set_com_error_handler` to call your own error-handling function."},{"pos":[1253,1349],"content":"The replacement function must have a signature that is equivalent to that of <ph id=\"ph1\">`_com_raise_error`</ph>.","source":"The replacement function must have a signature that is equivalent to that of `_com_raise_error`."},{"content":"Example","pos":[1358,1365]},{"content":"Requirements","pos":[2339,2351]},{"pos":[2355,2375],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> comdef.h","source":"**Header:** comdef.h"},{"content":"<bpt id=\"p1\">**</bpt>Lib:<ept id=\"p1\">**</ept> If the “wchar_t is Native Type” compiler option is on, use comsuppw.lib or comsuppwd.lib.","pos":[2382,2480],"source":"**Lib:** If the “wchar_t is Native Type” compiler option is on, use comsuppw.lib or comsuppwd.lib."},{"content":"If “wchar_t is Native Type” is off, use comsupp.lib.","pos":[2481,2533]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>/Zc:wchar_t (wchar_t Is Native Type)<ept id=\"p1\">](../build/reference/zc-wchar-t-wchar-t-is-native-type.md)</ept>.","pos":[2534,2656],"source":" For more information, see [/Zc:wchar_t (wchar_t Is Native Type)](../build/reference/zc-wchar-t-wchar-t-is-native-type.md)."},{"content":"See Also","pos":[2665,2673]},{"content":"Compiler COM Global Functions","pos":[2678,2707]}],"content":"---\ntitle: \"_set_com_error_handler | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"language-reference\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"_set_com_error_handler function\"\nms.assetid: 49fe4fca-5e37-4d83-abaf-15be5ce37f94\ncaps.latest.revision: 11\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# _set_com_error_handler\n**Microsoft Specific**  \n  \n Replaces the default function that is used for COM error-handling.  \n  \n## Syntax  \n  \n```  \nvoid __stdcall _set_com_error_handler(  \n   void (__stdcall *pHandler)(  \n      HRESULT hr,   \n      IErrorInfo* perrinfo  \n   )  \n);  \n```  \n  \n#### Parameters  \n `pHandler`  \n Pointer to the replacement function.  \n  \n `hr`  \n `HRESULT` information.  \n  \n `perrinfo`  \n `IErrorInfo` object.  \n  \n## Remarks  \n By default, [_com_raise_error](../cpp/com-raise-error.md) handles all COM errors. You can change this behavior by using `_set_com_error_handler` to call your own error-handling function.  \n  \n The replacement function must have a signature that is equivalent to that of `_com_raise_error`.  \n  \n## Example  \n  \n```  \n// _set_com_error_handler.cpp  \n// compile with /EHsc  \n#include <stdio.h>  \n#include <comdef.h>  \n#include <comutil.h>  \n  \n// Importing ado dll to attempt to establish an ado connection.  \n// Not related to _set_com_error_handler   \n#import \"C:\\Program Files\\Common Files\\System\\ado\\msado15.dll\" no_namespace rename(\"EOF\", \"adoEOF\")  \n  \nvoid __stdcall _My_com_raise_error(HRESULT hr, IErrorInfo* perrinfo)  \n{  \n   throw \"Unable to establish the connection!\";  \n}  \n  \nint main()  \n{  \n   _set_com_error_handler(_My_com_raise_error);  \n   _bstr_t bstrEmpty(L\"\");  \n   _ConnectionPtr Connection = NULL;  \n   try  \n   {  \n      Connection.CreateInstance(__uuidof(Connection));  \n      Connection->Open(bstrEmpty, bstrEmpty, bstrEmpty, 0);   \n   }  \n   catch(char* errorMessage)  \n   {  \n      printf(\"Exception raised: %s\\n\", errorMessage);  \n   }  \n  \n   return 0;  \n}  \n```  \n  \n```Output  \nException raised: Unable to establish the connection!  \n```  \n  \n## Requirements  \n **Header:** comdef.h  \n  \n **Lib:** If the “wchar_t is Native Type” compiler option is on, use comsuppw.lib or comsuppwd.lib. If “wchar_t is Native Type” is off, use comsupp.lib. For more information, see [/Zc:wchar_t (wchar_t Is Native Type)](../build/reference/zc-wchar-t-wchar-t-is-native-type.md).  \n  \n## See Also  \n [Compiler COM Global Functions](../cpp/compiler-com-global-functions.md)"}