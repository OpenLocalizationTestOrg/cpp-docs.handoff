{"nodes":[{"pos":[12,42],"content":"feholdexcept2 | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"feholdexcept2 | Microsoft Docs","pos":[0,30]}]},{"content":"feholdexcept","pos":[961,973]},{"content":"Saves the current floating-point environment in the specified object, clears the floating-point status flags, and, if possible, puts the floating-point environment into non-stop  mode.","pos":[974,1158]},{"content":"Syntax","pos":[1167,1173]},{"content":"Parameters","pos":[1245,1255]},{"content":"Pointer to an <ph id=\"ph1\">`fenv_t`</ph> object to contain a copy of the floating-point environment.","pos":[1269,1351],"source":" Pointer to an `fenv_t` object to contain a copy of the floating-point environment."},{"content":"Return Value","pos":[1360,1372]},{"content":"Returns zero if and only if the function is able to successfully turn on non-stop floating-point        exception handling.","pos":[1376,1499]},{"content":"Remarks","pos":[1508,1515]},{"content":"The <ph id=\"ph1\">`feholdexcept`</ph> function is used to store the state of the current floating point environment in the <ph id=\"ph2\">`fenv_t`</ph> object pointed to by <ph id=\"ph3\">`penv`</ph>, and to set the environment to not interrupt execution on floating-point exceptions.","pos":[1519,1744],"source":"The `feholdexcept` function is used to store the state of the current floating point environment in the `fenv_t` object pointed to by `penv`, and to set the environment to not interrupt execution on floating-point exceptions."},{"content":"This is known as non-stop mode.","pos":[1745,1776]},{"content":"This mode continues until the environment is restored using <bpt id=\"p1\">[</bpt>fesetenv<ept id=\"p1\">](http://msdn.microsoft.com/Library/a34b2705-0bd4-452e-a30f-eea3898d8183)</ept> or <bpt id=\"p2\">[</bpt>feupdateenv<ept id=\"p2\">](../../c-runtime-library/reference/feupdateenv.md)</ept>.","pos":[1778,1988],"source":"  This mode continues until the environment is restored using [fesetenv](http://msdn.microsoft.com/Library/a34b2705-0bd4-452e-a30f-eea3898d8183) or [feupdateenv](../../c-runtime-library/reference/feupdateenv.md)."},{"content":"You can use this function at the beginning of a subroutine that needs to hide one or more floating-point exceptions from the caller.","pos":[1995,2127]},{"content":"To report an exception, you can simply clear  the unwanted exceptions by using <bpt id=\"p1\">[</bpt>feclearexcept,<ept id=\"p1\">](../../c-runtime-library/reference/feclearexcept1.md)</ept> and then end the non-stop mode with a call to <ph id=\"ph1\">`feupdateenv`</ph>.","pos":[2128,2337],"source":" To report an exception, you can simply clear  the unwanted exceptions by using [feclearexcept,](../../c-runtime-library/reference/feclearexcept1.md) and then end the non-stop mode with a call to `feupdateenv`."},{"content":"To use this function, you must turn off floating-point optimizations that could prevent access by using the <ph id=\"ph1\">`#pragma fenv_access(on)`</ph> directive prior to the call.","pos":[2344,2506],"source":"To use this function, you must turn off floating-point optimizations that could prevent access by using the `#pragma fenv_access(on)` directive prior to the call."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>fenv_access<ept id=\"p1\">](../../preprocessor/fenv-access.md)</ept>.","pos":[2507,2582],"source":" For more information, see [fenv_access](../../preprocessor/fenv-access.md)."},{"content":"Requirements","pos":[2591,2603]},{"content":"Function","pos":[2610,2618]},{"content":"C header","pos":[2619,2627]},{"content":"C++ header","pos":[2628,2638]},{"content":"fenv.h&gt;","pos":[2713,2720],"source":"fenv.h>"},{"content":"cfenv&gt;","pos":[2723,2729],"source":"cfenv>"},{"pos":[2737,2841],"content":"For additional compatibility information, see <bpt id=\"p1\">[</bpt>Compatibility<ept id=\"p1\">](../../c-runtime-library/compatibility.md)</ept>.","source":"For additional compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md)."},{"content":"See Also","pos":[2850,2858]},{"content":"Alphabetical Function Reference","pos":[2863,2894]},{"content":"feclearexcept","pos":[2975,2988]},{"content":"fesetenv","pos":[3048,3056]},{"content":"feupdateenv","pos":[3135,3146]}],"content":"---\ntitle: \"feholdexcept2 | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"cpp\"\n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\napiname: \n  - \"feholdexcept\"\napilocation: \n  - \"msvcrt.dll\"\n  - \"msvcr80.dll\"\n  - \"msvcr90.dll\"\n  - \"msvcr100.dll\"\n  - \"msvcr100_clr0400.dll\"\n  - \"msvcr110.dll\"\n  - \"msvcr110_clr0400.dll\"\n  - \"msvcr120.dll\"\n  - \"msvcr120_clr0400.dll\"\n  - \"ucrtbase.dll\"\n  - \"api-ms-win-crt-runtime-l1-1-0.dll\"\napitype: \"DLLExport\"\nf1_keywords: \n  - \"feholdexcept\"\n  - \"fenv/feholdexcept\"\ndev_langs: \n  - \"C\"\n  - \"C++\"\nhelpviewer_keywords: \n  - \"feholdexcept function\"\nms.assetid: 88e512ae-b5d8-452c-afe9-c824cd3ef1d8\ncaps.latest.revision: 5\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# feholdexcept\nSaves the current floating-point environment in the specified object, clears the floating-point status flags, and, if possible, puts the floating-point environment into non-stop  mode.  \n  \n## Syntax  \n  \n```  \nint feholdexcept(  \n   fenv_t *penv  \n);  \n  \n```  \n  \n#### Parameters  \n `penv`  \n Pointer to an `fenv_t` object to contain a copy of the floating-point environment.  \n  \n## Return Value  \n Returns zero if and only if the function is able to successfully turn on non-stop floating-point        exception handling.  \n  \n## Remarks  \n The `feholdexcept` function is used to store the state of the current floating point environment in the `fenv_t` object pointed to by `penv`, and to set the environment to not interrupt execution on floating-point exceptions. This is known as non-stop mode.  This mode continues until the environment is restored using [fesetenv](http://msdn.microsoft.com/Library/a34b2705-0bd4-452e-a30f-eea3898d8183) or [feupdateenv](../../c-runtime-library/reference/feupdateenv.md).  \n  \n You can use this function at the beginning of a subroutine that needs to hide one or more floating-point exceptions from the caller. To report an exception, you can simply clear  the unwanted exceptions by using [feclearexcept,](../../c-runtime-library/reference/feclearexcept1.md) and then end the non-stop mode with a call to `feupdateenv`.  \n  \n To use this function, you must turn off floating-point optimizations that could prevent access by using the `#pragma fenv_access(on)` directive prior to the call. For more information, see [fenv_access](../../preprocessor/fenv-access.md).  \n  \n## Requirements  \n  \n|Function|C header|C++ header|  \n|--------------|--------------|------------------|  \n|`feholdexcept`|\\<fenv.h>|\\<cfenv>|  \n  \n For additional compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md).  \n  \n## See Also  \n [Alphabetical Function Reference](../../c-runtime-library/reference/crt-alphabetical-function-reference.md)   \n [feclearexcept](../../c-runtime-library/reference/feclearexcept1.md)   \n [fesetenv](http://msdn.microsoft.com/Library/a34b2705-0bd4-452e-a30f-eea3898d8183)   \n [feupdateenv](../../c-runtime-library/reference/feupdateenv.md)"}