{"nodes":[{"pos":[12,45],"content":"time_point Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"time_point Class | Microsoft Docs","pos":[0,33]}]},{"content":"time_point Class","pos":[577,593]},{"content":"A <ph id=\"ph1\">`time_point`</ph> describes a type that represents a point in time.","pos":[594,658],"source":"A `time_point` describes a type that represents a point in time."},{"content":"It holds an object of type <bpt id=\"p1\">[</bpt>duration<ept id=\"p1\">](../standard-library/duration-class.md)</ept> that stores the elapsed time since the epoch that is represented by the template argument <ph id=\"ph1\">`Clock`</ph>.","pos":[659,834],"source":" It holds an object of type [duration](../standard-library/duration-class.md) that stores the elapsed time since the epoch that is represented by the template argument `Clock`."},{"content":"Syntax","pos":[843,849]},{"content":"Members","pos":[967,974]},{"content":"Public Typedefs","pos":[984,999]},{"content":"Name","pos":[1006,1010]},{"content":"Description","pos":[1011,1022]},{"pos":[1080,1123],"content":"Synonym for the template parameter <ph id=\"ph1\">`Clock`</ph>.","source":"Synonym for the template parameter `Clock`."},{"pos":[1151,1197],"content":"Synonym for the template parameter <ph id=\"ph1\">`Duration`</ph>.","source":"Synonym for the template parameter `Duration`."},{"pos":[1223,1275],"content":"Synonym for the nested type name <ph id=\"ph1\">`duration::period`</ph>.","source":"Synonym for the nested type name `duration::period`."},{"pos":[1298,1347],"content":"Synonym for the nested type name <ph id=\"ph1\">`duration::rep`</ph>.","source":"Synonym for the nested type name `duration::rep`."},{"content":"Public Constructors","pos":[1358,1377]},{"content":"Name","pos":[1384,1388]},{"content":"Description","pos":[1389,1400]},{"content":"time_point::time_point Constructor","pos":[1439,1473]},{"pos":[1512,1545],"content":"Constructs a <ph id=\"ph1\">`time_point`</ph> object.","source":"Constructs a `time_point` object."},{"content":"Public Methods","pos":[1556,1570]},{"content":"Name","pos":[1577,1581]},{"content":"Description","pos":[1582,1593]},{"content":"time_point::max Method","pos":[1632,1654]},{"pos":[1681,1729],"content":"Specifies the upper limit for <ph id=\"ph1\">`time_point::ref`</ph>.","source":"Specifies the upper limit for `time_point::ref`."},{"content":"time_point::min Method","pos":[1735,1757]},{"pos":[1784,1832],"content":"Specifies the lower limit for <ph id=\"ph1\">`time_point::ref`</ph>.","source":"Specifies the lower limit for `time_point::ref`."},{"content":"time_point::time_since_epoch Method","pos":[1838,1873]},{"pos":[1913,1949],"content":"Returns the stored <ph id=\"ph1\">`duration`</ph> value.","source":"Returns the stored `duration` value."},{"content":"Public Operators","pos":[1960,1976]},{"content":"Name","pos":[1983,1987]},{"content":"Description","pos":[1988,1999]},{"content":"time_point::operator+=","pos":[2038,2060]},{"content":"Adds a specified value to the stored duration.","pos":[2092,2138]},{"content":"time_point::operator-=","pos":[2144,2166]},{"content":"Subtracts a specified value from the stored duration.","pos":[2195,2248]},{"content":"Requirements","pos":[2258,2270]},{"pos":[2274,2292],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> chrono","source":"**Header:** chrono"},{"pos":[2299,2325],"content":"<bpt id=\"p1\">**</bpt>Namespace:<ept id=\"p1\">**</ept> std::chrono","source":"**Namespace:** std::chrono"},{"pos":[2374,2396],"content":"time_point::max Method"},{"pos":[2400,2480],"content":"Static method that returns the upper bound for values of type <ph id=\"ph1\">`time_point::ref`</ph>.","source":"Static method that returns the upper bound for values of type `time_point::ref`."},{"content":"Return Value","pos":[2540,2552]},{"pos":[2556,2605],"content":"In effect, returns <ph id=\"ph1\">`time_point(duration::max())`</ph>.","source":"In effect, returns `time_point(duration::max())`."},{"pos":[2654,2676],"content":"time_point::min Method"},{"pos":[2680,2760],"content":"Static method that returns the lower bound for values of type <ph id=\"ph1\">`time_point::ref`</ph>.","source":"Static method that returns the lower bound for values of type `time_point::ref`."},{"content":"Return Value","pos":[2820,2832]},{"pos":[2836,2885],"content":"In effect, returns <ph id=\"ph1\">`time_point(duration::min())`</ph>.","source":"In effect, returns `time_point(duration::min())`."},{"pos":[2939,2961],"content":"time_point::operator+="},{"pos":[2965,3058],"content":"Adds a specified value to the stored <bpt id=\"p1\">[</bpt>duration<ept id=\"p1\">](../standard-library/duration-class.md)</ept> value.","source":"Adds a specified value to the stored [duration](../standard-library/duration-class.md) value."},{"content":"Parameters","pos":[3128,3138]},{"content":"A <ph id=\"ph1\">`duration`</ph> object.","pos":[3151,3171],"source":" A `duration` object."},{"content":"Return Value","pos":[3181,3193]},{"pos":[3197,3253],"content":"The <ph id=\"ph1\">`time_point`</ph> object after the addition is performed.","source":"The `time_point` object after the addition is performed."},{"pos":[3304,3326],"content":"time_point::operator-="},{"pos":[3330,3430],"content":"Subtracts a specified value from the stored <bpt id=\"p1\">[</bpt>duration<ept id=\"p1\">](../standard-library/duration-class.md)</ept> value.","source":"Subtracts a specified value from the stored [duration](../standard-library/duration-class.md) value."},{"content":"Parameters","pos":[3500,3510]},{"content":"A <ph id=\"ph1\">`duration`</ph> object.","pos":[3523,3543],"source":" A `duration` object."},{"content":"Return Value","pos":[3553,3565]},{"pos":[3569,3628],"content":"The <ph id=\"ph1\">`time_point`</ph> object after the subtraction is performed.","source":"The `time_point` object after the subtraction is performed."},{"pos":[3689,3723],"content":"time_point::time_point Constructor"},{"pos":[3727,3760],"content":"Constructs a <ph id=\"ph1\">`time_point`</ph> object.","source":"Constructs a `time_point` object."},{"content":"Parameters","pos":[3954,3964]},{"content":"A <bpt id=\"p1\">[</bpt>duration<ept id=\"p1\">](../standard-library/duration-class.md)</ept> object.","pos":[3977,4036],"source":" A [duration](../standard-library/duration-class.md) object."},{"content":"A <ph id=\"ph1\">`time_point`</ph> object.","pos":[4051,4073],"source":" A `time_point` object."},{"content":"Remarks","pos":[4083,4090]},{"pos":[4094,4257],"content":"The first constructor constructs an object whose stored <ph id=\"ph1\">`duration`</ph> value is equal to <bpt id=\"p1\">[</bpt>duration::zero<ept id=\"p1\">](../standard-library/duration-class.md#duration__zero_method)</ept>.","source":"The first constructor constructs an object whose stored `duration` value is equal to [duration::zero](../standard-library/duration-class.md#duration__zero_method)."},{"content":"The second constructor constructs an object whose stored duration value is equal to <ph id=\"ph1\">`Dur`</ph>.","pos":[4264,4354],"source":"The second constructor constructs an object whose stored duration value is equal to `Dur`."},{"content":"Unless <ph id=\"ph1\">`is_convertible&lt;Duration2, duration&gt;`</ph><bpt id=\"p1\">*</bpt>holds true<ept id=\"p1\">*</ept>, the second constructor does not participate in overload resolution.","pos":[4355,4480],"source":" Unless `is_convertible<Duration2, duration>`*holds true*, the second constructor does not participate in overload resolution."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>&lt;type_traits&gt;<ept id=\"p1\">](../standard-library/type-traits.md)</ept>.","pos":[4481,4559],"source":" For more information, see [<type_traits>](../standard-library/type-traits.md)."},{"pos":[4566,4654],"content":"The third constructor initializes its <ph id=\"ph1\">`duration`</ph> value by using <ph id=\"ph2\">`Tp.time_since_epoch()`</ph>.","source":"The third constructor initializes its `duration` value by using `Tp.time_since_epoch()`."},{"pos":[4716,4751],"content":"time_point::time_since_epoch Method"},{"pos":[4755,4832],"content":"Retrieves the stored <bpt id=\"p1\">[</bpt>duration<ept id=\"p1\">](../standard-library/duration-class.md)</ept> value.","source":"Retrieves the stored [duration](../standard-library/duration-class.md) value."},{"content":"See Also","pos":[4901,4909]},{"content":"Header Files Reference","pos":[4914,4936]},{"content":"chrono&gt;","pos":[5003,5010],"source":"chrono>"}],"content":"---\ntitle: \"time_point Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"chrono/std::chrono::time_point\"\ndev_langs: \n  - \"C++\"\nms.assetid: 18be1e52-57b9-489a-8a9b-f58894f0aaad\ncaps.latest.revision: 10\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# time_point Class\nA `time_point` describes a type that represents a point in time. It holds an object of type [duration](../standard-library/duration-class.md) that stores the elapsed time since the epoch that is represented by the template argument `Clock`.  \n  \n## Syntax  \n  \n```  \ntemplate <class Clock,  \n    class Duration = typename Clock::duration>  \nclass time_point;  \n```  \n  \n## Members  \n  \n### Public Typedefs  \n  \n|Name|Description|  \n|----------|-----------------|  \n|`time_point::clock`|Synonym for the template parameter `Clock`.|  \n|`time_point::duration`|Synonym for the template parameter `Duration`.|  \n|`time_point::period`|Synonym for the nested type name `duration::period`.|  \n|`time_point::rep`|Synonym for the nested type name `duration::rep`.|  \n  \n### Public Constructors  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[time_point::time_point Constructor](#time_point__time_point_constructor)|Constructs a `time_point` object.|  \n  \n### Public Methods  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[time_point::max Method](#time_point__max_method)|Specifies the upper limit for `time_point::ref`.|  \n|[time_point::min Method](#time_point__min_method)|Specifies the lower limit for `time_point::ref`.|  \n|[time_point::time_since_epoch Method](#time_point__time_since_epoch_method)|Returns the stored `duration` value.|  \n  \n### Public Operators  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[time_point::operator+=](#time_point__operator_add_eq)|Adds a specified value to the stored duration.|  \n|[time_point::operator-=](#time_point__operator-_eq)|Subtracts a specified value from the stored duration.|  \n  \n## Requirements  \n **Header:** chrono  \n  \n **Namespace:** std::chrono  \n  \n##  <a name=\"time_point__max_method\"></a>  time_point::max Method  \n Static method that returns the upper bound for values of type `time_point::ref`.  \n  \n```  \nstatic constexpr time_point max();\n```  \n  \n### Return Value  \n In effect, returns `time_point(duration::max())`.  \n  \n##  <a name=\"time_point__min_method\"></a>  time_point::min Method  \n Static method that returns the lower bound for values of type `time_point::ref`.  \n  \n```  \nstatic constexpr time_point min();\n```  \n  \n### Return Value  \n In effect, returns `time_point(duration::min())`.  \n  \n##  <a name=\"time_point__operator_add_eq\"></a>  time_point::operator+=  \n Adds a specified value to the stored [duration](../standard-library/duration-class.md) value.  \n  \n```  \ntime_point& operator+=(const duration& Dur);\n```  \n  \n### Parameters  \n `Dur`  \n A `duration` object.  \n  \n### Return Value  \n The `time_point` object after the addition is performed.  \n  \n##  <a name=\"time_point__operator-_eq\"></a>  time_point::operator-=  \n Subtracts a specified value from the stored [duration](../standard-library/duration-class.md) value.  \n  \n```  \ntime_point& operator-=(const duration& Dur);\n```  \n  \n### Parameters  \n `Dur`  \n A `duration` object.  \n  \n### Return Value  \n The `time_point` object after the subtraction is performed.  \n  \n##  <a name=\"time_point__time_point_constructor\"></a>  time_point::time_point Constructor  \n Constructs a `time_point` object.  \n  \n```  \nconstexpr time_point();\n\nconstexpr explicit time_point(const duration& Dur);\n\ntemplate <class Duration2>  \nconstexpr time_point(const time_point<clock, Duration2>& Tp);\n```  \n  \n### Parameters  \n `Dur`  \n A [duration](../standard-library/duration-class.md) object.  \n  \n `Tp`  \n A `time_point` object.  \n  \n### Remarks  \n The first constructor constructs an object whose stored `duration` value is equal to [duration::zero](../standard-library/duration-class.md#duration__zero_method).  \n  \n The second constructor constructs an object whose stored duration value is equal to `Dur`. Unless `is_convertible<Duration2, duration>`*holds true*, the second constructor does not participate in overload resolution. For more information, see [<type_traits>](../standard-library/type-traits.md).  \n  \n The third constructor initializes its `duration` value by using `Tp.time_since_epoch()`.  \n  \n##  <a name=\"time_point__time_since_epoch_method\"></a>  time_point::time_since_epoch Method  \n Retrieves the stored [duration](../standard-library/duration-class.md) value.  \n  \n```  \nconstexpr duration time_since_epoch() const;\n```  \n  \n## See Also  \n [Header Files Reference](../standard-library/cpp-standard-library-header-files.md)   \n [\\<chrono>](../standard-library/chrono.md)\n\n"}