{"nodes":[{"pos":[12,42],"content":"Make Function | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Make Function | Microsoft Docs","pos":[0,30]}]},{"content":"Make Function","pos":[618,631]},{"content":"Initializes the specified <ph id=\"ph1\">[!INCLUDE[wrt](../atl/reference/includes/wrt_md.md)]</ph> class.","pos":[632,717],"source":"Initializes the specified [!INCLUDE[wrt](../atl/reference/includes/wrt_md.md)] class."},{"content":"Use this function to instantiate a component that is defined in the same module.","pos":[718,798]},{"content":"Syntax","pos":[807,813]},{"content":"Parameters","pos":[3187,3197]},{"content":"A user-specified class that inherits from <ph id=\"ph1\">`WRL::RuntimeClass`</ph>.","pos":[3208,3270],"source":" A user-specified class that inherits from `WRL::RuntimeClass`."},{"content":"Type of argument 1 that is passed to the specified runtime class.","pos":[3288,3353]},{"content":"Type of argument 2 that is passed to the specified runtime class.","pos":[3371,3436]},{"content":"Type of argument 3 that is passed to the specified runtime class.","pos":[3454,3519]},{"content":"Type of argument 4 that is passed to the specified runtime class.","pos":[3537,3602]},{"content":"Type of argument 5 that is passed to the specified runtime class.","pos":[3620,3685]},{"content":"Type of argument 6 that is passed to the specified runtime class.","pos":[3703,3768]},{"content":"Type of argument 7 that is passed to the specified runtime class.","pos":[3786,3851]},{"content":"Type of argument 8 that is passed to the specified runtime class.","pos":[3869,3934]},{"content":"Type of argument 9 that is passed to the specified runtime class.","pos":[3952,4017]},{"content":"Argument 1 that is passed to the specified runtime class.","pos":[4034,4091]},{"content":"Argument 2 that is passed to the specified runtime class.","pos":[4108,4165]},{"content":"Argument 3 that is passed to the specified runtime class.","pos":[4182,4239]},{"content":"Argument 4 that is passed to the specified runtime class.","pos":[4256,4313]},{"content":"Argument 5 that is passed to the specified runtime class.","pos":[4330,4387]},{"content":"Argument 6 that is passed to the specified runtime class.","pos":[4404,4461]},{"content":"Argument 7 that is passed to the specified runtime class.","pos":[4478,4535]},{"content":"Argument 8 that is passed to the specified runtime class.","pos":[4552,4609]},{"content":"Argument 9 that is passed to the specified runtime class.","pos":[4626,4683]},{"content":"Return Value","pos":[4692,4704]},{"pos":[4708,4765],"content":"A <ph id=\"ph1\">`ComPtr&lt;T&gt;`</ph> object if successful; otherwise, <ph id=\"ph2\">`nullptr`</ph>.","source":"A `ComPtr<T>` object if successful; otherwise, `nullptr`."},{"content":"Remarks","pos":[4774,4781]},{"pos":[4785,5051],"content":"See <bpt id=\"p1\">[</bpt>How to: Instantiate WRL Components Directly<ept id=\"p1\">](../windows/how-to-instantiate-wrl-components-directly.md)</ept> to learn the differences between this function and <bpt id=\"p2\">[</bpt>Microsoft::WRL::Details::MakeAndInitialize<ept id=\"p2\">](../windows/makeandinitialize-function.md)</ept>, and for an example.","source":"See [How to: Instantiate WRL Components Directly](../windows/how-to-instantiate-wrl-components-directly.md) to learn the differences between this function and [Microsoft::WRL::Details::MakeAndInitialize](../windows/makeandinitialize-function.md), and for an example."},{"content":"Requirements","pos":[5060,5072]},{"pos":[5076,5100],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> implements.h","source":"**Header:** implements.h"},{"pos":[5107,5136],"content":"<bpt id=\"p1\">**</bpt>Namespace:<ept id=\"p1\">**</ept> Microsoft::WRL","source":"**Namespace:** Microsoft::WRL"},{"content":"See Also","pos":[5145,5153]},{"content":"Microsoft::WRL Namespace","pos":[5158,5182]}],"content":"---\ntitle: \"Make Function | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"implements/Microsoft::WRL::Make\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"Make function\"\nms.assetid: 66704143-df99-4a95-904d-ed99607e1034\ncaps.latest.revision: 4\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Make Function\nInitializes the specified [!INCLUDE[wrt](../atl/reference/includes/wrt_md.md)] class. Use this function to instantiate a component that is defined in the same module.  \n  \n## Syntax  \n  \n```  \ntemplate <  \n   typename T,  \n   typename TArg1,  \n   typename TArg2,  \n   typename TArg3,  \n   typename TArg4,  \n   typename TArg5,  \n   typename TArg6,  \n   typename TArg7,  \n   typename TArg8,  \n   typename TArg9  \n>  \nComPtr<T> Make(  \n   TArg1 &&arg1,  \n   TArg2 &&arg2,  \n   TArg3 &&arg3,  \n   TArg4 &&arg4,  \n   TArg5 &&arg5,  \n   TArg6 &&arg6,  \n   TArg7 &&arg7,  \n   TArg8 &&arg8,  \n   TArg9 &&arg9  \n);  \ntemplate <  \n   typename T,  \n   typename TArg1,  \n   typename TArg2,  \n   typename TArg3,  \n   typename TArg4,  \n   typename TArg5,  \n   typename TArg6,  \n   typename TArg7,  \n   typename TArg8  \n>  \nComPtr<T> Make(  \n   TArg1 &&arg1,  \n   TArg2 &&arg2,  \n   TArg3 &&arg3,  \n   TArg4 &&arg4,  \n   TArg5 &&arg5,  \n   TArg6 &&arg6,  \n   TArg7 &&arg7,  \n   TArg8 &&arg8  \n);  \ntemplate <  \n   typename T,  \n   typename TArg1,  \n   typename TArg2,  \n   typename TArg3,  \n   typename TArg4,  \n   typename TArg5,  \n   typename TArg6,  \n   typename TArg7  \n>  \nComPtr<T> Make(  \n   TArg1 &&arg1,  \n   TArg2 &&arg2,  \n   TArg3 &&arg3,  \n   TArg4 &&arg4,  \n   TArg5 &&arg5,  \n   TArg6 &&arg6,  \n   TArg7 &&arg7  \n);  \ntemplate <  \n   typename T,  \n   typename TArg1,  \n   typename TArg2,  \n   typename TArg3,  \n   typename TArg4,  \n   typename TArg5,  \n   typename TArg6  \n>  \nComPtr<T> Make(  \n   TArg1 &&arg1,  \n   TArg2 &&arg2,  \n   TArg3 &&arg3,  \n   TArg4 &&arg4,  \n   TArg5 &&arg5,  \n   TArg6 &&arg6  \n);  \ntemplate <  \n   typename T,  \n   typename TArg1,  \n   typename TArg2,  \n   typename TArg3,  \n   typename TArg4,  \n   typename TArg5  \n>  \nComPtr<T> Make(  \n   TArg1 &&arg1,  \n   TArg2 &&arg2,  \n   TArg3 &&arg3,  \n   TArg4 &&arg4,  \n   TArg5 &&arg5  \n);  \ntemplate <  \n   typename T,  \n   typename TArg1,  \n   typename TArg2,  \n   typename TArg3,  \n   typename TArg4  \n>  \nComPtr<T> Make(  \n   TArg1 &&arg1,  \n   TArg2 &&arg2,  \n   TArg3 &&arg3,  \n   TArg4 &&arg4  \n);  \ntemplate <  \n   typename T,  \n   typename TArg1,  \n   typename TArg2,  \n   typename TArg3  \n>  \nComPtr<T> Make(  \n   TArg1 &&arg1,  \n   TArg2 &&arg2,  \n   TArg3 &&arg3  \n);  \ntemplate <  \n   typename T,  \n   typename TArg1,  \n   typename TArg2  \n>  \nComPtr<T> Make(  \n   TArg1 &&arg1,  \n   TArg2 &&arg2  \n);  \ntemplate <  \n   typename T,  \n   typename TArg1  \n>  \nComPtr<T> Make(  \n   TArg1 &&arg1  \n);  \ntemplate <  \n   typename T  \n>  \nComPtr<T> Make();  \n```  \n  \n#### Parameters  \n `T`  \n A user-specified class that inherits from `WRL::RuntimeClass`.  \n  \n `TArg1`  \n Type of argument 1 that is passed to the specified runtime class.  \n  \n `TArg2`  \n Type of argument 2 that is passed to the specified runtime class.  \n  \n `TArg3`  \n Type of argument 3 that is passed to the specified runtime class.  \n  \n `TArg4`  \n Type of argument 4 that is passed to the specified runtime class.  \n  \n `TArg5`  \n Type of argument 5 that is passed to the specified runtime class.  \n  \n `TArg6`  \n Type of argument 6 that is passed to the specified runtime class.  \n  \n `TArg7`  \n Type of argument 7 that is passed to the specified runtime class.  \n  \n `TArg8`  \n Type of argument 8 that is passed to the specified runtime class.  \n  \n `TArg9`  \n Type of argument 9 that is passed to the specified runtime class.  \n  \n `arg1`  \n Argument 1 that is passed to the specified runtime class.  \n  \n `arg2`  \n Argument 2 that is passed to the specified runtime class.  \n  \n `arg3`  \n Argument 3 that is passed to the specified runtime class.  \n  \n `arg4`  \n Argument 4 that is passed to the specified runtime class.  \n  \n `arg5`  \n Argument 5 that is passed to the specified runtime class.  \n  \n `arg6`  \n Argument 6 that is passed to the specified runtime class.  \n  \n `arg7`  \n Argument 7 that is passed to the specified runtime class.  \n  \n `arg8`  \n Argument 8 that is passed to the specified runtime class.  \n  \n `arg9`  \n Argument 9 that is passed to the specified runtime class.  \n  \n## Return Value  \n A `ComPtr<T>` object if successful; otherwise, `nullptr`.  \n  \n## Remarks  \n See [How to: Instantiate WRL Components Directly](../windows/how-to-instantiate-wrl-components-directly.md) to learn the differences between this function and [Microsoft::WRL::Details::MakeAndInitialize](../windows/makeandinitialize-function.md), and for an example.  \n  \n## Requirements  \n **Header:** implements.h  \n  \n **Namespace:** Microsoft::WRL  \n  \n## See Also  \n [Microsoft::WRL Namespace](../windows/microsoft-wrl-namespace.md)"}