{"nodes":[{"pos":[12,81],"content":"Configuring Programs for ARM Processors (Visual C++) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Configuring Programs for ARM Processors (Visual C++) | Microsoft Docs","pos":[0,69]}]},{"content":"Configuring Programs for ARM Processors (Visual C++)","pos":[562,614]},{"content":"This section of the documentation contains information about how to use the Visual C++ build tools to target ARM hardware.","pos":[615,737]},{"content":"In This Section","pos":[746,761]},{"content":"Overview of ARM ABI Conventions","pos":[766,797]},{"content":"Describes the application binary interface used by Windows on ARM for register usage, calling conventions and exception handling.","pos":[847,976]},{"content":"Common Visual C++ ARM Migration Issues","pos":[984,1022]},{"content":"Describes C++ code elements that are commonly assumed to be portable across architectures, but which produce different results for ARM than for x86 and x64.","pos":[1079,1235]},{"content":"ARM Exception Handling","pos":[1243,1265]},{"content":"Describes the encoding scheme for stack unwinding during structured exception handling in Windows on ARM.","pos":[1306,1411]},{"content":"Related Sections","pos":[1420,1436]},{"content":"Title","pos":[1443,1448]},{"content":"Description","pos":[1449,1460]},{"content":"ARM Intrinsics","pos":[1500,1514]},{"content":"Describes compiler intrinsics for processors that use the ARM architecture.","pos":[1549,1624]}],"content":"---\ntitle: \"Configuring Programs for ARM Processors (Visual C++) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"C++\"\nms.assetid: 3d95f221-656a-480d-9651-9ad263895747\ncaps.latest.revision: 13\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Configuring Programs for ARM Processors (Visual C++)\nThis section of the documentation contains information about how to use the Visual C++ build tools to target ARM hardware.  \n  \n## In This Section  \n [Overview of ARM ABI Conventions](../build/overview-of-arm-abi-conventions.md)  \n Describes the application binary interface used by Windows on ARM for register usage, calling conventions and exception handling.  \n  \n [Common Visual C++ ARM Migration Issues](../build/common-visual-cpp-arm-migration-issues.md)  \n Describes C++ code elements that are commonly assumed to be portable across architectures, but which produce different results for ARM than for x86 and x64.  \n  \n [ARM Exception Handling](../build/arm-exception-handling.md)  \n Describes the encoding scheme for stack unwinding during structured exception handling in Windows on ARM.  \n  \n## Related Sections  \n  \n|Title|Description|  \n|-----------|-----------------|  \n|[ARM Intrinsics](../intrinsics/arm-intrinsics.md)|Describes compiler intrinsics for processors that use the ARM architecture.|"}