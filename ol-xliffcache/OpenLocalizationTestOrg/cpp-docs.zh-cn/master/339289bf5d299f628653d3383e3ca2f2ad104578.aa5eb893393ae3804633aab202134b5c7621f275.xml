{"nodes":[{"pos":[12,42],"content":"Integer Types | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Integer Types | Microsoft Docs","pos":[0,30]}]},{"content":"Integer Types","pos":[664,677]},{"content":"Every integer constant is given a type based on its value and the way it is expressed.","pos":[678,764]},{"content":"You can force any integer constant to type <bpt id=\"p1\">**</bpt>long<ept id=\"p1\">**</ept> by appending the letter <bpt id=\"p2\">**</bpt>l<ept id=\"p2\">**</ept> or <bpt id=\"p3\">**</bpt>L<ept id=\"p3\">**</ept> to the end of the constant; you can force it to be type <ph id=\"ph1\">`unsigned`</ph> by appending <bpt id=\"p4\">**</bpt>u<ept id=\"p4\">**</ept> or <bpt id=\"p5\">**</bpt>U<ept id=\"p5\">**</ept> to the value.","pos":[765,964],"source":" You can force any integer constant to type **long** by appending the letter **l** or **L** to the end of the constant; you can force it to be type `unsigned` by appending **u** or **U** to the value."},{"content":"The lowercase letter <bpt id=\"p1\">**</bpt>l<ept id=\"p1\">**</ept> can be confused with the digit 1 and should be avoided.","pos":[965,1047],"source":" The lowercase letter **l** can be confused with the digit 1 and should be avoided."},{"content":"Some forms of <bpt id=\"p1\">**</bpt>long<ept id=\"p1\">**</ept> integer constants follow:","pos":[1048,1096],"source":" Some forms of **long** integer constants follow:"},{"content":"The type you assign to a constant depends on the value the constant represents.","pos":[1342,1421]},{"content":"A constant's value must be in the range of representable values for its type.","pos":[1422,1499]},{"content":"A constant's type determines which conversions are performed when the constant is used in an expression or when the minus sign (<bpt id=\"p1\">**</bpt>–<ept id=\"p1\">**</ept>) is applied.","pos":[1500,1646],"source":" A constant's type determines which conversions are performed when the constant is used in an expression or when the minus sign (**–**) is applied."},{"content":"This list summarizes the conversion rules for integer constants.","pos":[1647,1711]},{"content":"The type for a decimal constant without a suffix is either <ph id=\"ph1\">`int`</ph>, <bpt id=\"p1\">**</bpt>long int<ept id=\"p1\">**</ept>, or <bpt id=\"p2\">**</bpt>unsigned long int<ept id=\"p2\">**</ept>.","pos":[1721,1826],"source":"The type for a decimal constant without a suffix is either `int`, **long int**, or **unsigned long int**."},{"content":"The first of these three types in which the constant's value can be represented is the type assigned to the constant.","pos":[1827,1944]},{"pos":[1954,2127],"content":"The type assigned to octal and hexadecimal constants without suffixes is <ph id=\"ph1\">`int`</ph>, <ph id=\"ph2\">`unsigned int`</ph>, <bpt id=\"p1\">**</bpt>long int<ept id=\"p1\">**</ept>, or <bpt id=\"p2\">**</bpt>unsigned long int<ept id=\"p2\">**</ept> depending on the size of the constant.","source":"The type assigned to octal and hexadecimal constants without suffixes is `int`, `unsigned int`, **long int**, or **unsigned long int** depending on the size of the constant."},{"pos":[2137,2266],"content":"The type assigned to constants with a <bpt id=\"p1\">**</bpt>u<ept id=\"p1\">**</ept> or <bpt id=\"p2\">**</bpt>U<ept id=\"p2\">**</ept> suffix is <bpt id=\"p3\">**</bpt>unsigned int<ept id=\"p3\">**</ept> or <bpt id=\"p4\">**</bpt>unsigned long int<ept id=\"p4\">**</ept> depending on their size.","source":"The type assigned to constants with a **u** or **U** suffix is **unsigned int** or **unsigned long int** depending on their size."},{"pos":[2276,2402],"content":"The type assigned to constants with an <bpt id=\"p1\">**</bpt>l<ept id=\"p1\">**</ept> or <bpt id=\"p2\">**</bpt>L<ept id=\"p2\">**</ept> suffix is <bpt id=\"p3\">**</bpt>long int<ept id=\"p3\">**</ept> or <bpt id=\"p4\">**</bpt>unsigned long int<ept id=\"p4\">**</ept> depending on their size.","source":"The type assigned to constants with an **l** or **L** suffix is **long int** or **unsigned long int** depending on their size."},{"pos":[2412,2519],"content":"The type assigned to constants with a <bpt id=\"p1\">**</bpt>u<ept id=\"p1\">**</ept> or <bpt id=\"p2\">**</bpt>U<ept id=\"p2\">**</ept> and an <bpt id=\"p3\">**</bpt>l<ept id=\"p3\">**</ept> or <bpt id=\"p4\">**</bpt>L<ept id=\"p4\">**</ept> suffix is <bpt id=\"p5\">**</bpt>unsigned long int<ept id=\"p5\">**</ept>.","source":"The type assigned to constants with a **u** or **U** and an **l** or **L** suffix is **unsigned long int**."},{"content":"See Also","pos":[2528,2536]},{"content":"C Integer Constants","pos":[2541,2560]}],"content":"---\ntitle: \"Integer Types | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"C++\"\n  - \"C\"\nhelpviewer_keywords: \n  - \"integer data type, integer types in C++\"\n  - \"integer constants\"\n  - \"integer types\"\n  - \"integers, types\"\nms.assetid: c8926a5e-0e98-4e37-9b05-ce97961379bd\ncaps.latest.revision: 7\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Integer Types\nEvery integer constant is given a type based on its value and the way it is expressed. You can force any integer constant to type **long** by appending the letter **l** or **L** to the end of the constant; you can force it to be type `unsigned` by appending **u** or **U** to the value. The lowercase letter **l** can be confused with the digit 1 and should be avoided. Some forms of **long** integer constants follow:  \n  \n```  \n/* Long decimal constants */  \n10L  \n79L  \n  \n/* Long octal constants */  \n012L  \n0115L  \n  \n/* Long hexadecimal constants */  \n0xaL or 0xAL  \n0X4fL or 0x4FL  \n  \n/* Unsigned long decimal constant */  \n776745UL  \n778866LU  \n```  \n  \n The type you assign to a constant depends on the value the constant represents. A constant's value must be in the range of representable values for its type. A constant's type determines which conversions are performed when the constant is used in an expression or when the minus sign (**–**) is applied. This list summarizes the conversion rules for integer constants.  \n  \n-   The type for a decimal constant without a suffix is either `int`, **long int**, or **unsigned long int**. The first of these three types in which the constant's value can be represented is the type assigned to the constant.  \n  \n-   The type assigned to octal and hexadecimal constants without suffixes is `int`, `unsigned int`, **long int**, or **unsigned long int** depending on the size of the constant.  \n  \n-   The type assigned to constants with a **u** or **U** suffix is **unsigned int** or **unsigned long int** depending on their size.  \n  \n-   The type assigned to constants with an **l** or **L** suffix is **long int** or **unsigned long int** depending on their size.  \n  \n-   The type assigned to constants with a **u** or **U** and an **l** or **L** suffix is **unsigned long int**.  \n  \n## See Also  \n [C Integer Constants](../c-language/c-integer-constants.md)"}