{"nodes":[{"pos":[12,63],"content":"collection_adapter::swap (STL-CLR) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"collection_adapter::swap (STL-CLR) | Microsoft Docs","pos":[0,51]}]},{"content":"collection_adapter::swap (STL/CLR)","pos":[648,682]},{"content":"Swaps the contents of two containers.","pos":[683,720]},{"content":"Syntax","pos":[729,735]},{"content":"Parameters","pos":[807,817]},{"content":"right","pos":[821,826]},{"content":"Container to swap contents with.","pos":[830,862]},{"content":"Remarks","pos":[871,878]},{"pos":[882,959],"content":"The member function swaps the stored BCL handles between <ph id=\"ph1\">`*this`</ph> and <ph id=\"ph2\">`right`</ph>.","source":"The member function swaps the stored BCL handles between `*this` and `right`."},{"content":"Example","pos":[968,975]},{"content":"Requirements","pos":[2179,2191]},{"pos":[2195,2224],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> <ph id=\"ph1\">\\&lt;</ph>cliext/adapter&gt;","source":"**Header:** \\<cliext/adapter>"},{"pos":[2231,2252],"content":"<bpt id=\"p1\">**</bpt>Namespace:<ept id=\"p1\">**</ept> cliext","source":"**Namespace:** cliext"},{"content":"See Also","pos":[2261,2269]},{"content":"collection_adapter (STL/CLR)","pos":[2274,2302]},{"content":"collection_adapter::operator= (STL/CLR)","pos":[2350,2389]}],"content":"---\ntitle: \"collection_adapter::swap (STL-CLR) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"cliext::collection_adapter::swap\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"swap member [STL/CLR]\"\nms.assetid: 778f85bf-c6e3-48ff-bc97-0488f3e8f143\ncaps.latest.revision: 9\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# collection_adapter::swap (STL/CLR)\nSwaps the contents of two containers.  \n  \n## Syntax  \n  \n```  \nvoid swap(collection_adapter<Coll>% right);  \n```  \n  \n#### Parameters  \n right  \n Container to swap contents with.  \n  \n## Remarks  \n The member function swaps the stored BCL handles between `*this` and `right`.  \n  \n## Example  \n  \n```  \n// cliext_collection_adapter_swap.cpp   \n// compile with: /clr   \n#include <cliext/adapter>   \n#include <cliext/deque>   \n  \ntypedef cliext::collection_adapter<   \n    System::Collections::ICollection> Mycoll;   \nint main()   \n    {   \n    cliext::deque<wchar_t> d1;   \n    d1.push_back(L'a');   \n    d1.push_back(L'b');   \n    d1.push_back(L'c');   \n    Mycoll c1(%d1);   \n  \n// display initial contents \" a b c\"   \n    for each (wchar_t elem in c1)   \n        System::Console::Write(\" {0}\", elem);   \n    System::Console::WriteLine();   \n  \n// construct another container with repetition of values   \n    cliext::deque<wchar_t> d2(5, L'x');   \n    Mycoll c2(%d2);   \n    for each (wchar_t elem in c2)   \n        System::Console::Write(\" {0}\", elem);   \n    System::Console::WriteLine();   \n  \n// swap and redisplay   \n    c1.swap(c2);   \n    for each (wchar_t elem in c1)   \n        System::Console::Write(\" {0}\", elem);   \n    System::Console::WriteLine();   \n  \n    for each (wchar_t elem in c2)   \n        System::Console::Write(\" {0}\", elem);   \n    System::Console::WriteLine();   \n    return (0);   \n    }  \n  \n```  \n  \n```Output  \na b c  \nx x x x x  \nx x x x x  \na b c  \n```  \n  \n## Requirements  \n **Header:** \\<cliext/adapter>  \n  \n **Namespace:** cliext  \n  \n## See Also  \n [collection_adapter (STL/CLR)](../dotnet/collection-adapter-stl-clr.md)   \n [collection_adapter::operator= (STL/CLR)](../dotnet/collection-adapter-operator-assign-stl-clr.md)"}