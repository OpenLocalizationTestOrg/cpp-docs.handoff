{"nodes":[{"pos":[12,67],"content":"fscanf, _fscanf_l, fwscanf, _fwscanf_l | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"fscanf, _fscanf_l, fwscanf, _fwscanf_l | Microsoft Docs","pos":[0,55]}]},{"content":"fscanf, _fscanf_l, fwscanf, _fwscanf_l","pos":[1379,1417]},{"content":"Read formatted data from a stream.","pos":[1418,1452]},{"content":"More secure versions of these functions are available; see <bpt id=\"p1\">[</bpt>fscanf_s, _fscanf_s_l, fwscanf_s, _fwscanf_s_l<ept id=\"p1\">](../../c-runtime-library/reference/fscanf-s-fscanf-s-l-fwscanf-s-fwscanf-s-l.md)</ept>.","pos":[1453,1641],"source":" More secure versions of these functions are available; see [fscanf_s, _fscanf_s_l, fwscanf_s, _fwscanf_s_l](../../c-runtime-library/reference/fscanf-s-fscanf-s-l-fwscanf-s-fwscanf-s-l.md)."},{"content":"Syntax","pos":[1650,1656]},{"content":"Parameters","pos":[2084,2094]},{"content":"Pointer to <ph id=\"ph1\">`FILE`</ph> structure.","pos":[2110,2138],"source":" Pointer to `FILE` structure."},{"content":"Format-control string.","pos":[2157,2179]},{"content":"Optional arguments.","pos":[2200,2219]},{"content":"The locale to use.","pos":[2238,2256]},{"content":"Return Value","pos":[2265,2277]},{"content":"Each of these functions returns the number of fields successfully converted and assigned; the return value does not include fields that were read but not assigned.","pos":[2281,2444]},{"content":"A return value of 0 indicates that no fields were assigned.","pos":[2445,2504]},{"content":"If an error occurs, or if the end of the file stream is reached before the first conversion, the return value is <ph id=\"ph1\">`EOF`</ph> for <ph id=\"ph2\">`fscanf`</ph> and <ph id=\"ph3\">`fwscanf`</ph>.","pos":[2505,2651],"source":" If an error occurs, or if the end of the file stream is reached before the first conversion, the return value is `EOF` for `fscanf` and `fwscanf`."},{"content":"These functions validate their parameters.","pos":[2658,2700]},{"content":"If <ph id=\"ph1\">`stream`</ph> or <ph id=\"ph2\">`format`</ph> is a null pointer, the invalid parameter handler is invoked, as described in <bpt id=\"p1\">[</bpt>Parameter Validation<ept id=\"p1\">](../../c-runtime-library/parameter-validation.md)</ept>.","pos":[2701,2874],"source":" If `stream` or `format` is a null pointer, the invalid parameter handler is invoked, as described in [Parameter Validation](../../c-runtime-library/parameter-validation.md)."},{"content":"If execution is allowed to continue, these functions return <ph id=\"ph1\">`EOF`</ph> and set <ph id=\"ph2\">`errno`</ph> to <ph id=\"ph3\">`EINVAL`</ph>.","pos":[2875,2969],"source":" If execution is allowed to continue, these functions return `EOF` and set `errno` to `EINVAL`."},{"content":"Remarks","pos":[2978,2985]},{"content":"The <ph id=\"ph1\">`fscanf`</ph> function reads data from the current position of <ph id=\"ph2\">`stream`</ph> into the locations given by <ph id=\"ph3\">`argument`</ph> (if any).","pos":[2989,3108],"source":"The `fscanf` function reads data from the current position of `stream` into the locations given by `argument` (if any)."},{"content":"Each <ph id=\"ph1\">`argument`</ph> must be a pointer to a variable of a type that corresponds to a type specifier in <ph id=\"ph2\">`format`</ph>.","pos":[3109,3216],"source":" Each `argument` must be a pointer to a variable of a type that corresponds to a type specifier in `format`."},{"content":"controls the interpretation of the input fields and has the same form and function as the <ph id=\"ph1\">`format`</ph> argument for <ph id=\"ph2\">`scanf`</ph>; see <bpt id=\"p1\">[</bpt>scanf<ept id=\"p1\">](../../c-runtime-library/reference/scanf-scanf-l-wscanf-wscanf-l.md)</ept> for a description of <ph id=\"ph3\">`format`</ph><bpt id=\"p2\">*</bpt>.<ept id=\"p2\">*</ept>","pos":[3226,3459],"source":" controls the interpretation of the input fields and has the same form and function as the `format` argument for `scanf`; see [scanf](../../c-runtime-library/reference/scanf-scanf-l-wscanf-wscanf-l.md) for a description of `format`*.*"},{"content":"is a wide-character version of <ph id=\"ph1\">`fscanf`</ph>; the format argument to <ph id=\"ph2\">`fwscanf`</ph> is a wide-character string.","pos":[3476,3577],"source":" is a wide-character version of `fscanf`; the format argument to `fwscanf` is a wide-character string."},{"content":"These functions behave identically identically if the stream is opened in ANSI mode.","pos":[3578,3662]},{"content":"doesn't currently support input from a UNICODE stream.","pos":[3672,3726]},{"pos":[3733,3889],"content":"The versions of these functions with the <ph id=\"ph1\">`_l`</ph> suffix are identical except that they use the locale parameter passed in instead of the current thread locale.","source":"The versions of these functions with the `_l` suffix are identical except that they use the locale parameter passed in instead of the current thread locale."},{"content":"Generic-Text Routine Mappings","pos":[3899,3928]},{"content":"TCHAR.H routine","pos":[3935,3950]},{"content":"_UNICODE &amp; _MBCS not defined","pos":[3951,3979],"source":"_UNICODE & _MBCS not defined"},{"content":"_MBCS defined","pos":[3980,3993]},{"content":"_UNICODE defined","pos":[3994,4010]},{"pos":[4223,4401],"content":"For more information, see <bpt id=\"p1\">[</bpt>Format Specification Fields – scanf functions and wscanf Functions<ept id=\"p1\">](../../c-runtime-library/format-specification-fields-scanf-and-wscanf-functions.md)</ept>.","source":"For more information, see [Format Specification Fields – scanf functions and wscanf Functions](../../c-runtime-library/format-specification-fields-scanf-and-wscanf-functions.md)."},{"content":"Requirements","pos":[4410,4422]},{"content":"Function","pos":[4429,4437]},{"content":"Required header","pos":[4438,4453]},{"pos":[4507,4508],"content":","},{"content":"stdio.h&gt;","pos":[4523,4531],"source":"stdio.h>"},{"pos":[4545,4546],"content":","},{"content":"stdio.h&gt; or <ph id=\"ph1\">\\&lt;</ph>wchar.h&gt;","pos":[4562,4584],"source":"stdio.h> or \\<wchar.h>"},{"pos":[4592,4716],"content":"For additional compatibility information, see <bpt id=\"p1\">[</bpt>Compatibility<ept id=\"p1\">](../../c-runtime-library/compatibility.md)</ept> in the Introduction.","source":"For additional compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md) in the Introduction."},{"content":"Example","pos":[4725,4732]},{"content":".NET Framework Equivalent","pos":[6065,6090]},{"content":"<bpt id=\"p1\">[</bpt>System::IO::StreamReader::ReadLine<ept id=\"p1\">](https://msdn.microsoft.com/en-us/library/system.io.streamreader.readline.aspx)</ept>.","pos":[6094,6210],"source":"[System::IO::StreamReader::ReadLine](https://msdn.microsoft.com/en-us/library/system.io.streamreader.readline.aspx)."},{"content":"See also <ph id=\"ph1\">`Parse`</ph> methods, such as <bpt id=\"p1\">[</bpt>System::Double::Parse<ept id=\"p1\">](https://msdn.microsoft.com/en-us/library/system.double.parse.aspx)</ept>.","pos":[6211,6336],"source":" See also `Parse` methods, such as [System::Double::Parse](https://msdn.microsoft.com/en-us/library/system.double.parse.aspx)."},{"content":"See Also","pos":[6345,6353]},{"content":"Stream I/O","pos":[6358,6368]},{"content":"_cscanf, _cscanf_l, _cwscanf, _cwscanf_l","pos":[6414,6454]},{"content":"fprintf, _fprintf_l, fwprintf, _fwprintf_l","pos":[6533,6575]},{"content":"scanf, _scanf_l, wscanf, _wscanf_l","pos":[6658,6692]},{"content":"sscanf, _sscanf_l, swscanf, _swscanf_l","pos":[6767,6805]},{"content":"fscanf_s, _fscanf_s_l, fwscanf_s, _fwscanf_s_l","pos":[6884,6930]}],"content":"---\ntitle: \"fscanf, _fscanf_l, fwscanf, _fwscanf_l | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\napiname: \n  - \"fscanf\"\n  - \"_fwscanf_l\"\n  - \"_fscanf_l\"\n  - \"fwscanf\"\napilocation: \n  - \"msvcrt.dll\"\n  - \"msvcr80.dll\"\n  - \"msvcr90.dll\"\n  - \"msvcr100.dll\"\n  - \"msvcr100_clr0400.dll\"\n  - \"msvcr110.dll\"\n  - \"msvcr110_clr0400.dll\"\n  - \"msvcr120.dll\"\n  - \"msvcr120_clr0400.dll\"\n  - \"ucrtbase.dll\"\napitype: \"DLLExport\"\nf1_keywords: \n  - \"fscanf\"\n  - \"fwscanf\"\n  - \"_ftscanf_l\"\n  - \"_fwscanf_l\"\n  - \"_ftscanf\"\n  - \"_fscanf_l\"\ndev_langs: \n  - \"C++\"\n  - \"C\"\nhelpviewer_keywords: \n  - \"fscanf function\"\n  - \"fwscanf function\"\n  - \"formatted data [C++], reading from streams\"\n  - \"ftscanf_l function\"\n  - \"_ftscanf_l function\"\n  - \"_fwscanf_l function\"\n  - \"data [CRT], reading from streams\"\n  - \"_fscanf_l function\"\n  - \"ftscanf function\"\n  - \"fscanf_l function\"\n  - \"streams [C++], reading formatted data from\"\n  - \"_ftscanf function\"\n  - \"fwscanf_l function\"\nms.assetid: 9004e978-6c5f-4bb2-98fd-51e5948933f2\ncaps.latest.revision: 24\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# fscanf, _fscanf_l, fwscanf, _fwscanf_l\nRead formatted data from a stream. More secure versions of these functions are available; see [fscanf_s, _fscanf_s_l, fwscanf_s, _fwscanf_s_l](../../c-runtime-library/reference/fscanf-s-fscanf-s-l-fwscanf-s-fwscanf-s-l.md).  \n  \n## Syntax  \n  \n```  \nint fscanf(   \n   FILE *stream,  \n   const char *format [,  \n   argument ]...   \n);  \nint _fscanf_l(   \n   FILE *stream,  \n   const char *format,  \n   locale_t locale [,  \n   argument ]...   \n);  \nint fwscanf(   \n   FILE *stream,  \n   const wchar_t *format [,  \n   argument ]...   \n);  \nint _fwscanf_l(   \n   FILE *stream,  \n   const wchar_t *format,  \n   locale_t locale [,  \n   argument ]...   \n);  \n```  \n  \n#### Parameters  \n `stream`  \n Pointer to `FILE` structure.  \n  \n `format`  \n Format-control string.  \n  \n `argument`  \n Optional arguments.  \n  \n `locale`  \n The locale to use.  \n  \n## Return Value  \n Each of these functions returns the number of fields successfully converted and assigned; the return value does not include fields that were read but not assigned. A return value of 0 indicates that no fields were assigned. If an error occurs, or if the end of the file stream is reached before the first conversion, the return value is `EOF` for `fscanf` and `fwscanf`.  \n  \n These functions validate their parameters. If `stream` or `format` is a null pointer, the invalid parameter handler is invoked, as described in [Parameter Validation](../../c-runtime-library/parameter-validation.md). If execution is allowed to continue, these functions return `EOF` and set `errno` to `EINVAL`.  \n  \n## Remarks  \n The `fscanf` function reads data from the current position of `stream` into the locations given by `argument` (if any). Each `argument` must be a pointer to a variable of a type that corresponds to a type specifier in `format`. `format` controls the interpretation of the input fields and has the same form and function as the `format` argument for `scanf`; see [scanf](../../c-runtime-library/reference/scanf-scanf-l-wscanf-wscanf-l.md) for a description of `format`*.*  \n  \n `fwscanf` is a wide-character version of `fscanf`; the format argument to `fwscanf` is a wide-character string. These functions behave identically identically if the stream is opened in ANSI mode. `fscanf` doesn't currently support input from a UNICODE stream.  \n  \n The versions of these functions with the `_l` suffix are identical except that they use the locale parameter passed in instead of the current thread locale.  \n  \n### Generic-Text Routine Mappings  \n  \n|TCHAR.H routine|_UNICODE & _MBCS not defined|_MBCS defined|_UNICODE defined|  \n|---------------------|------------------------------------|--------------------|-----------------------|  \n|`_ftscanf`|`fscanf`|`fscanf`|`fwscanf`|  \n|`_ftscanf_l`|`_fscanf_l`|`_fscanf_l`|`_fwscanf_l`|  \n  \n For more information, see [Format Specification Fields – scanf functions and wscanf Functions](../../c-runtime-library/format-specification-fields-scanf-and-wscanf-functions.md).  \n  \n## Requirements  \n  \n|Function|Required header|  \n|--------------|---------------------|  \n|`fscanf`, `_fscanf_l`|\\<stdio.h>|  \n|`fwscanf`, `_fwscanf_l`|\\<stdio.h> or \\<wchar.h>|  \n  \n For additional compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md) in the Introduction.  \n  \n## Example  \n  \n```  \n// crt_fscanf.c  \n// compile with: /W3  \n// This program writes formatted  \n// data to a file. It then uses fscanf to  \n// read the various data back from the file.  \n  \n#include <stdio.h>  \n  \nFILE *stream;  \n  \nint main( void )  \n{  \n   long l;  \n   float fp;  \n   char s[81];  \n   char c;  \n  \n   if( fopen_s( &stream, \"fscanf.out\", \"w+\" ) != 0 )  \n      printf( \"The file fscanf.out was not opened\\n\" );  \n   else  \n   {  \n      fprintf( stream, \"%s %ld %f%c\", \"a-string\",   \n               65000, 3.14159, 'x' );  \n      // Security caution!  \n      // Beware loading data from a file without confirming its size,  \n      // as it may lead to a buffer overrun situation.  \n  \n      // Set pointer to beginning of file:  \n      fseek( stream, 0L, SEEK_SET );  \n  \n      // Read data back from file:  \n      fscanf( stream, \"%s\", s );   // C4996  \n      fscanf( stream, \"%ld\", &l ); // C4996  \n  \n      fscanf( stream, \"%f\", &fp ); // C4996  \n      fscanf( stream, \"%c\", &c );  // C4996  \n      // Note: fscanf is deprecated; consider using fscanf_s instead  \n  \n      // Output data read:   \n      printf( \"%s\\n\", s );  \n      printf( \"%ld\\n\", l );  \n      printf( \"%f\\n\", fp );  \n      printf( \"%c\\n\", c );  \n  \n      fclose( stream );  \n   }  \n}  \n```  \n  \n```Output  \na-string  \n65000  \n3.141590  \nx  \n```  \n  \n## .NET Framework Equivalent  \n [System::IO::StreamReader::ReadLine](https://msdn.microsoft.com/en-us/library/system.io.streamreader.readline.aspx). See also `Parse` methods, such as [System::Double::Parse](https://msdn.microsoft.com/en-us/library/system.double.parse.aspx).  \n  \n## See Also  \n [Stream I/O](../../c-runtime-library/stream-i-o.md)   \n [_cscanf, _cscanf_l, _cwscanf, _cwscanf_l](../../c-runtime-library/reference/cscanf-cscanf-l-cwscanf-cwscanf-l.md)   \n [fprintf, _fprintf_l, fwprintf, _fwprintf_l](../../c-runtime-library/reference/fprintf-fprintf-l-fwprintf-fwprintf-l.md)   \n [scanf, _scanf_l, wscanf, _wscanf_l](../../c-runtime-library/reference/scanf-scanf-l-wscanf-wscanf-l.md)   \n [sscanf, _sscanf_l, swscanf, _swscanf_l](../../c-runtime-library/reference/sscanf-sscanf-l-swscanf-swscanf-l.md)   \n [fscanf_s, _fscanf_s_l, fwscanf_s, _fwscanf_s_l](../../c-runtime-library/reference/fscanf-s-fscanf-s-l-fwscanf-s-fwscanf-s-l.md)"}