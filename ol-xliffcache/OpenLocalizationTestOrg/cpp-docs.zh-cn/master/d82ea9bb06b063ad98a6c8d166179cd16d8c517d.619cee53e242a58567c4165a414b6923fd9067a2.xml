{"nodes":[{"pos":[12,71],"content":"strerror, _strerror, _wcserror, __wcserror | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"strerror, _strerror, _wcserror, __wcserror | Microsoft Docs","pos":[0,59]}]},{"content":"strerror, _strerror, _wcserror, __wcserror","pos":[1403,1445]},{"content":"Gets a system error message string (<ph id=\"ph1\">`strerror`</ph>, <ph id=\"ph2\">`_wcserror`</ph>) or formats a user-supplied error message string (<ph id=\"ph3\">`_strerror`</ph>, <ph id=\"ph4\">`__wcserror`</ph>).","pos":[1446,1583],"source":"Gets a system error message string (`strerror`, `_wcserror`) or formats a user-supplied error message string (`_strerror`, `__wcserror`)."},{"content":"More secure versions of these functions are available; see <bpt id=\"p1\">[</bpt>strerror_s, _strerror_s, _wcserror_s, <ph id=\"ph1\">\\_</ph>_wcserror_s<ept id=\"p1\">](../../c-runtime-library/reference/strerror-s-strerror-s-wcserror-s-wcserror-s.md)</ept>.","pos":[1584,1779],"source":" More secure versions of these functions are available; see [strerror_s, _strerror_s, _wcserror_s, \\__wcserror_s](../../c-runtime-library/reference/strerror-s-strerror-s-wcserror-s-wcserror-s.md)."},{"content":"Syntax","pos":[1788,1794]},{"content":"Parameters","pos":[2017,2027]},{"content":"Error number.","pos":[2043,2056]},{"content":"User-supplied message.","pos":[2078,2100]},{"content":"Return Value","pos":[2109,2121]},{"content":"All of these functions return a pointer to the error-message string.","pos":[2125,2193]},{"content":"Subsequent calls can overwrite the string.","pos":[2194,2236]},{"content":"Remarks","pos":[2245,2252]},{"content":"The <ph id=\"ph1\">`strerror`</ph> function maps <ph id=\"ph2\">`errnum`</ph> to an error-message string and returns a pointer to the string.","pos":[2256,2357],"source":"The `strerror` function maps `errnum` to an error-message string and returns a pointer to the string."},{"content":"Neither <ph id=\"ph1\">`strerror`</ph> nor <ph id=\"ph2\">`_strerror`</ph> actually prints the message: For that, you have to call an output function such as <bpt id=\"p1\">[</bpt>fprintf<ept id=\"p1\">](../../c-runtime-library/reference/fprintf-fprintf-l-fwprintf-fwprintf-l.md)</ept>:","pos":[2358,2562],"source":" Neither `strerror` nor `_strerror` actually prints the message: For that, you have to call an output function such as [fprintf](../../c-runtime-library/reference/fprintf-fprintf-l-fwprintf-fwprintf-l.md):"},{"content":"If <ph id=\"ph1\">`strErrMsg`</ph> is passed as <ph id=\"ph2\">`NULL`</ph>, <ph id=\"ph3\">`_strerror`</ph> returns a pointer to a string that contains the system error message for the last library call that produced an error.","pos":[2666,2832],"source":"If `strErrMsg` is passed as `NULL`, `_strerror` returns a pointer to a string that contains the system error message for the last library call that produced an error."},{"content":"The error-message string is terminated by the newline character ('\\n').","pos":[2833,2904]},{"content":"If <ph id=\"ph1\">`strErrMsg`</ph> is not equal to <ph id=\"ph2\">`NULL`</ph>, then <ph id=\"ph3\">`_strerror`</ph> returns a pointer to a string that contains (in order) your string message, a colon, a space, the system error message for the last library call that produces an error, and a newline character.","pos":[2905,3154],"source":" If `strErrMsg` is not equal to `NULL`, then `_strerror` returns a pointer to a string that contains (in order) your string message, a colon, a space, the system error message for the last library call that produces an error, and a newline character."},{"content":"Your string message can be, at most, 94 characters long.","pos":[3155,3211]},{"content":"The actual error number for <ph id=\"ph1\">`_strerror`</ph> is stored in the variable <bpt id=\"p1\">[</bpt>errno<ept id=\"p1\">](../../c-runtime-library/errno-doserrno-sys-errlist-and-sys-nerr.md)</ept>.","pos":[3218,3360],"source":"The actual error number for `_strerror` is stored in the variable [errno](../../c-runtime-library/errno-doserrno-sys-errlist-and-sys-nerr.md)."},{"content":"To produce accurate results, call <ph id=\"ph1\">`_strerror`</ph> immediately after a library routine returns with an error.","pos":[3361,3465],"source":" To produce accurate results, call `_strerror` immediately after a library routine returns with an error."},{"content":"Otherwise, subsequent calls to <ph id=\"ph1\">`strerror`</ph> or <ph id=\"ph2\">`_strerror`</ph> can overwrite the <ph id=\"ph3\">`errno`</ph> value.","pos":[3466,3555],"source":" Otherwise, subsequent calls to `strerror` or `_strerror` can overwrite the `errno` value."},{"pos":[3574,3663],"content":"and <ph id=\"ph1\">`__wcserror`</ph> are wide-character versions of <ph id=\"ph2\">`strerror`</ph> and <ph id=\"ph3\">`_strerror`</ph>, respectively.","source":" and `__wcserror` are wide-character versions of `strerror` and `_strerror`, respectively."},{"content":", <ph id=\"ph1\">`_wcserror`</ph>, and <ph id=\"ph2\">`__wcserror`</ph> are not part of the ANSI definition; they are Microsoft extensions and we recommend that you do not use them where you want portable code.","pos":[3681,3851],"source":", `_wcserror`, and `__wcserror` are not part of the ANSI definition; they are Microsoft extensions and we recommend that you do not use them where you want portable code."},{"content":"For ANSI compatibility, use <ph id=\"ph1\">`strerror`</ph> instead.","pos":[3852,3899],"source":" For ANSI compatibility, use `strerror` instead."},{"pos":[3906,4238],"content":"To get error strings, we recommend <ph id=\"ph1\">`strerror`</ph> or <ph id=\"ph2\">`_wcserror`</ph> instead of the deprecated macros <bpt id=\"p1\">[</bpt>_sys_errlist<ept id=\"p1\">](../../c-runtime-library/errno-doserrno-sys-errlist-and-sys-nerr.md)</ept> and <bpt id=\"p2\">[</bpt>_sys_nerr<ept id=\"p2\">](../../c-runtime-library/errno-doserrno-sys-errlist-and-sys-nerr.md)</ept> and the deprecated internal functions <ph id=\"ph3\">`__sys_errlist`</ph> and <ph id=\"ph4\">`__sys_nerr`</ph>.","source":"To get error strings, we recommend `strerror` or `_wcserror` instead of the deprecated macros [_sys_errlist](../../c-runtime-library/errno-doserrno-sys-errlist-and-sys-nerr.md) and [_sys_nerr](../../c-runtime-library/errno-doserrno-sys-errlist-and-sys-nerr.md) and the deprecated internal functions `__sys_errlist` and `__sys_nerr`."},{"content":"Generic-Text Routine Mappings","pos":[4248,4277]},{"content":"TCHAR.H routine","pos":[4284,4299]},{"content":"_UNICODE &amp; _MBCS not defined","pos":[4300,4328],"source":"_UNICODE & _MBCS not defined"},{"content":"_MBCS defined","pos":[4329,4342]},{"content":"_UNICODE defined","pos":[4343,4359]},{"content":"Requirements","pos":[4527,4539]},{"content":"Routine","pos":[4546,4553]},{"content":"Required header","pos":[4554,4569]},{"content":"string.h&gt;","pos":[4627,4636],"source":"string.h>"},{"content":"string.h&gt;","pos":[4655,4664],"source":"string.h>"},{"pos":[4680,4681],"content":","},{"content":"string.h&gt;","pos":[4697,4706],"source":"string.h>"},{"pos":[4714,4818],"content":"For additional compatibility information, see <bpt id=\"p1\">[</bpt>Compatibility<ept id=\"p1\">](../../c-runtime-library/compatibility.md)</ept>.","source":"For additional compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md)."},{"content":"Example","pos":[4827,4834]},{"pos":[4838,4920],"content":"See the example for <bpt id=\"p1\">[</bpt>perror<ept id=\"p1\">](../../c-runtime-library/reference/perror-wperror.md)</ept>.","source":"See the example for [perror](../../c-runtime-library/reference/perror-wperror.md)."},{"content":".NET Framework Equivalent","pos":[4929,4954]},{"content":"System::Exception::Message","pos":[4959,4985]},{"content":"See Also","pos":[5067,5075]},{"content":"String Manipulation","pos":[5080,5099]},{"content":"clearerr","pos":[5158,5166]},{"content":"ferror","pos":[5220,5226]},{"content":"perror, _wperror","pos":[5278,5294]}],"content":"---\ntitle: \"strerror, _strerror, _wcserror, __wcserror | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\napiname: \n  - \"strerror\"\n  - \"_strerror\"\n  - \"_wcserror\"\n  - \"__wcserror\"\napilocation: \n  - \"msvcrt.dll\"\n  - \"msvcr80.dll\"\n  - \"msvcr90.dll\"\n  - \"msvcr100.dll\"\n  - \"msvcr100_clr0400.dll\"\n  - \"msvcr110.dll\"\n  - \"msvcr110_clr0400.dll\"\n  - \"msvcr120.dll\"\n  - \"msvcr120_clr0400.dll\"\n  - \"ucrtbase.dll\"\n  - \"api-ms-win-crt-runtime-l1-1-0.dll\"\napitype: \"DLLExport\"\nf1_keywords: \n  - \"__sys_errlist\"\n  - \"wcserror\"\n  - \"_strerror\"\n  - \"__wcserror\"\n  - \"strerror\"\n  - \"__sys_nerr\"\n  - \"_tcserror\"\n  - \"_wcserror\"\n  - \"tcserror\"\ndev_langs: \n  - \"C++\"\n  - \"C\"\nhelpviewer_keywords: \n  - \"strerror function\"\n  - \"_strerror function\"\n  - \"__sys_errlist\"\n  - \"wcserror function\"\n  - \"error messages, printing\"\n  - \"__sys_nerr\"\n  - \"tcserror function\"\n  - \"printing error messages\"\n  - \"_wcserror function\"\n  - \"_tcserror function\"\n  - \"__wcserror function\"\n  - \"error messages, getting\"\nms.assetid: 27b72255-f627-43c0-8836-bcda8b003e14\ncaps.latest.revision: 21\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# strerror, _strerror, _wcserror, __wcserror\nGets a system error message string (`strerror`, `_wcserror`) or formats a user-supplied error message string (`_strerror`, `__wcserror`). More secure versions of these functions are available; see [strerror_s, _strerror_s, _wcserror_s, \\__wcserror_s](../../c-runtime-library/reference/strerror-s-strerror-s-wcserror-s-wcserror-s.md).  \n  \n## Syntax  \n  \n```  \nchar *strerror(  \n   int errnum   \n);  \nchar *_strerror(  \n   const char *strErrMsg   \n);  \nwchar_t * _wcserror(  \n   int errnum   \n);  \nwchar_t * __wcserror(  \n   const wchar_t *strErrMsg   \n);  \n```  \n  \n#### Parameters  \n `errnum`  \n Error number.  \n  \n `strErrMsg`  \n User-supplied message.  \n  \n## Return Value  \n All of these functions return a pointer to the error-message string. Subsequent calls can overwrite the string.  \n  \n## Remarks  \n The `strerror` function maps `errnum` to an error-message string and returns a pointer to the string. Neither `strerror` nor `_strerror` actually prints the message: For that, you have to call an output function such as [fprintf](../../c-runtime-library/reference/fprintf-fprintf-l-fwprintf-fwprintf-l.md):  \n  \n```  \nif (( _access( \"datafile\",2 )) == -1 )  \n   fprintf( stderr, _strerror(NULL) );  \n```  \n  \n If `strErrMsg` is passed as `NULL`, `_strerror` returns a pointer to a string that contains the system error message for the last library call that produced an error. The error-message string is terminated by the newline character ('\\n'). If `strErrMsg` is not equal to `NULL`, then `_strerror` returns a pointer to a string that contains (in order) your string message, a colon, a space, the system error message for the last library call that produces an error, and a newline character. Your string message can be, at most, 94 characters long.  \n  \n The actual error number for `_strerror` is stored in the variable [errno](../../c-runtime-library/errno-doserrno-sys-errlist-and-sys-nerr.md). To produce accurate results, call `_strerror` immediately after a library routine returns with an error. Otherwise, subsequent calls to `strerror` or `_strerror` can overwrite the `errno` value.  \n  \n `_wcserror` and `__wcserror` are wide-character versions of `strerror` and `_strerror`, respectively.  \n  \n `_strerror`, `_wcserror`, and `__wcserror` are not part of the ANSI definition; they are Microsoft extensions and we recommend that you do not use them where you want portable code. For ANSI compatibility, use `strerror` instead.  \n  \n To get error strings, we recommend `strerror` or `_wcserror` instead of the deprecated macros [_sys_errlist](../../c-runtime-library/errno-doserrno-sys-errlist-and-sys-nerr.md) and [_sys_nerr](../../c-runtime-library/errno-doserrno-sys-errlist-and-sys-nerr.md) and the deprecated internal functions `__sys_errlist` and `__sys_nerr`.  \n  \n### Generic-Text Routine Mappings  \n  \n|TCHAR.H routine|_UNICODE & _MBCS not defined|_MBCS defined|_UNICODE defined|  \n|---------------------|------------------------------------|--------------------|-----------------------|  \n|`_tcserror`|`strerror`|`strerror`|`_wcserror`|  \n  \n## Requirements  \n  \n|Routine|Required header|  \n|-------------|---------------------|  \n|`strerror`|\\<string.h>|  \n|`_strerror`|\\<string.h>|  \n|`_wcserror`, `__wcserror`|\\<string.h>|  \n  \n For additional compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md).  \n  \n## Example  \n See the example for [perror](../../c-runtime-library/reference/perror-wperror.md).  \n  \n## .NET Framework Equivalent  \n [System::Exception::Message](https://msdn.microsoft.com/en-us/library/system.exception.message.aspx)  \n  \n## See Also  \n [String Manipulation](../../c-runtime-library/string-manipulation-crt.md)   \n [clearerr](../../c-runtime-library/reference/clearerr.md)   \n [ferror](../../c-runtime-library/reference/ferror.md)   \n [perror, _wperror](../../c-runtime-library/reference/perror-wperror.md)"}