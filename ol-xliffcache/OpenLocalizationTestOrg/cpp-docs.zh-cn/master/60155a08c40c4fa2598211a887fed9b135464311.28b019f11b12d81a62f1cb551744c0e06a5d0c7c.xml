{"nodes":[{"pos":[12,52],"content":"Dynamic Object Creation | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Dynamic Object Creation | Microsoft Docs","pos":[0,40]}]},{"content":"Dynamic Object Creation","pos":[731,754]},{"content":"This article explains how to create an object dynamically at run time.","pos":[755,825]},{"content":"The procedure uses run-time class information, as discussed in the article <bpt id=\"p1\">[</bpt>Accessing Run-Time Class Information<ept id=\"p1\">](../mfc/accessing-run-time-class-information.md)</ept>.","pos":[826,988],"source":" The procedure uses run-time class information, as discussed in the article [Accessing Run-Time Class Information](../mfc/accessing-run-time-class-information.md)."},{"content":"To dynamically create an object given its run-time class","pos":[999,1055]},{"content":"Use the following code to dynamically create an object by using the <ph id=\"ph1\">`CreateObject`</ph> function of the <ph id=\"ph2\">`CRuntimeClass`</ph>.","pos":[1065,1180],"source":"Use the following code to dynamically create an object by using the `CreateObject` function of the `CRuntimeClass`."},{"content":"Note that on failure, <ph id=\"ph1\">`CreateObject`</ph> returns <bpt id=\"p1\">**</bpt>NULL<ept id=\"p1\">**</ept> instead of raising an exception:","pos":[1181,1267],"source":" Note that on failure, `CreateObject` returns **NULL** instead of raising an exception:"},{"pos":[1289,1311],"content":"NVC_MFCCObjectSample#6"},{"content":"See Also","pos":[1376,1384]},{"content":"Using CObject","pos":[1389,1402]}],"content":"---\ntitle: \"Dynamic Object Creation | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"object creation, dynamically at run time\"\n  - \"CObject class, dynamic object creation\"\n  - \"objects [C++], creating dynamically at run time\"\n  - \"dynamic object creation\"\nms.assetid: 3e0f51cb-3e24-4231-817f-1c0ce9f2d5df\ncaps.latest.revision: 10\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Dynamic Object Creation\nThis article explains how to create an object dynamically at run time. The procedure uses run-time class information, as discussed in the article [Accessing Run-Time Class Information](../mfc/accessing-run-time-class-information.md).  \n  \n#### To dynamically create an object given its run-time class  \n  \n1.  Use the following code to dynamically create an object by using the `CreateObject` function of the `CRuntimeClass`. Note that on failure, `CreateObject` returns **NULL** instead of raising an exception:  \n  \n     [!code-cpp[NVC_MFCCObjectSample#6](../mfc/codesnippet/cpp/dynamic-object-creation_1.cpp)]  \n  \n## See Also  \n [Using CObject](../mfc/using-cobject.md)\n\n"}