{"nodes":[{"pos":[12,55],"content":"list::front_item (STL-CLR) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"list::front_item (STL-CLR) | Microsoft Docs","pos":[0,43]}]},{"content":"list::front_item (STL/CLR)","pos":[665,691]},{"content":"Accesses the first element.","pos":[692,719]},{"content":"Syntax","pos":[728,734]},{"content":"Remarks","pos":[792,799]},{"content":"The property accesses the first element of the controlled sequence, which must be non-empty.","pos":[803,895]},{"content":"You use it to read or write the first element, when you know it exists.","pos":[896,967]},{"content":"Example","pos":[976,983]},{"content":"Requirements","pos":[1773,1785]},{"pos":[1789,1815],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> <ph id=\"ph1\">\\&lt;</ph>cliext/list&gt;","source":"**Header:** \\<cliext/list>"},{"pos":[1822,1843],"content":"<bpt id=\"p1\">**</bpt>Namespace:<ept id=\"p1\">**</ept> cliext","source":"**Namespace:** cliext"},{"content":"See Also","pos":[1852,1860]},{"content":"list (STL/CLR)","pos":[1865,1879]},{"content":"list::back (STL/CLR)","pos":[1913,1933]},{"content":"list::back_item (STL/CLR)","pos":[1972,1997]},{"content":"list::front (STL/CLR)","pos":[2041,2062]}],"content":"---\ntitle: \"list::front_item (STL-CLR) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"cliext::list::front_item\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"front_item member [STL/CLR]\"\nms.assetid: c871873b-7745-442b-9760-9d8096fa8610\ncaps.latest.revision: 17\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"ru-ru\"\n  - \"zh-cn\"\n  - \"zh-tw\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"tr-tr\"\n---\n# list::front_item (STL/CLR)\nAccesses the first element.  \n  \n## Syntax  \n  \n```  \nproperty value_type front_item;  \n```  \n  \n## Remarks  \n The property accesses the first element of the controlled sequence, which must be non-empty. You use it to read or write the first element, when you know it exists.  \n  \n## Example  \n  \n```  \n// cliext_list_front_item.cpp   \n// compile with: /clr   \n#include <cliext/list>   \n  \nint main()   \n    {   \n    cliext::list<wchar_t> c1;   \n    c1.push_back(L'a');   \n    c1.push_back(L'b');   \n    c1.push_back(L'c');   \n  \n// display initial contents \" a b c\"   \n    for each (wchar_t elem in c1)   \n        System::Console::Write(\" {0}\", elem);   \n    System::Console::WriteLine();   \n  \n// inspect first item   \n    System::Console::WriteLine(\"front_item = {0}\", c1.front_item);   \n  \n// alter first item and reinspect   \n    c1.front_item = L'x';   \n    for each (wchar_t elem in c1)   \n        System::Console::Write(\" {0}\", elem);   \n    System::Console::WriteLine();   \n    return (0);   \n    }  \n  \n```  \n  \n```Output  \n a b c  \nfront_item = a  \n x b c  \n```  \n  \n## Requirements  \n **Header:** \\<cliext/list>  \n  \n **Namespace:** cliext  \n  \n## See Also  \n [list (STL/CLR)](../dotnet/list-stl-clr.md)   \n [list::back (STL/CLR)](../dotnet/list-back-stl-clr.md)   \n [list::back_item (STL/CLR)](../dotnet/list-back-item-stl-clr.md)   \n [list::front (STL/CLR)](../dotnet/list-front-stl-clr.md)"}