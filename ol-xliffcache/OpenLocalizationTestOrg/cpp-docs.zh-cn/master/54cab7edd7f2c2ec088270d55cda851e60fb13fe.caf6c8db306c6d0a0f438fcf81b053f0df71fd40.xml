{"nodes":[{"pos":[12,44],"content":"ComPtrRef Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"ComPtrRef Class | Microsoft Docs","pos":[0,32]}]},{"content":"ComPtrRef Class","pos":[658,673]},{"content":"Supports the WRL infrastructure and is not intended to be used directly from your code.","pos":[674,761]},{"content":"Syntax","pos":[770,776]},{"content":"Parameters","pos":[880,890]},{"content":"A <bpt id=\"p1\">[</bpt>ComPtr<ph id=\"ph1\">\\&lt;</ph>T&gt;<ept id=\"p1\">](../windows/comptr-class.md)</ept> type or a type derived from it, not merely the interface represented by the ComPtr.","pos":[901,1027],"source":" A [ComPtr\\<T>](../windows/comptr-class.md) type or a type derived from it, not merely the interface represented by the ComPtr."},{"content":"Remarks","pos":[1036,1043]},{"content":"Represents a reference to an object of type ComPtr<ph id=\"ph1\">\\&lt;</ph>T&gt;.","pos":[1047,1102],"source":"Represents a reference to an object of type ComPtr\\<T>."},{"content":"Members","pos":[1111,1118]},{"content":"Public Constructors","pos":[1128,1147]},{"content":"Name","pos":[1154,1158]},{"content":"Description","pos":[1159,1170]},{"content":"ComPtrRef::ComPtrRef Constructor","pos":[1209,1241]},{"content":"Initializes a new instance of the ComPtrRef class from the specified pointer to another ComPtrRef object.","pos":[1290,1395]},{"content":"Public Methods","pos":[1406,1420]},{"content":"Name","pos":[1427,1431]},{"content":"Description","pos":[1432,1443]},{"content":"ComPtrRef::GetAddressOf Method","pos":[1482,1512]},{"content":"Retrieves the address of a pointer to the interface represented by the current ComPtrRef object.","pos":[1559,1655]},{"content":"ComPtrRef::ReleaseAndGetAddressOf Method","pos":[1661,1701]},{"content":"Deletes the current ComPtrRef object and returns a pointer-to-a-pointer to the interface that was represented by the ComPtrRef object.","pos":[1758,1892]},{"content":"Public Operators","pos":[1903,1919]},{"content":"Name","pos":[1926,1930]},{"content":"Description","pos":[1931,1942]},{"content":"ComPtrRef::operator InterfaceType** Operator","pos":[1981,2025]},{"content":"Deletes the current ComPtrRef object and returns a pointer-to-a-pointer to the interface that was represented by the ComPtrRef object.","pos":[2094,2228]},{"content":"ComPtrRef::operator T* Operator","pos":[2234,2265]},{"pos":[2317,2438],"content":"Returns the value of the <bpt id=\"p1\">[</bpt>ptr_<ept id=\"p1\">](../windows/comptrrefbase-ptr-data-member.md)</ept> data member of the current ComPtrRef object.","source":"Returns the value of the [ptr_](../windows/comptrrefbase-ptr-data-member.md) data member of the current ComPtrRef object."},{"content":"ComPtrRef::operator void** Operator","pos":[2444,2479]},{"pos":[2539,2726],"content":"Deletes the current ComPtrRef object, casts the pointer to the interface that was represented by the ComPtrRef object as a pointer-to-pointer-to <ph id=\"ph1\">`void`</ph>, and then returns the cast pointer.","source":"Deletes the current ComPtrRef object, casts the pointer to the interface that was represented by the ComPtrRef object as a pointer-to-pointer-to `void`, and then returns the cast pointer."},{"content":"ComPtrRef::operator* Operator","pos":[2732,2761]},{"content":"Retrieves the pointer to the interface represented by the current ComPtrRef object.","pos":[2811,2894]},{"content":"ComPtrRef::operator== Operator","pos":[2900,2930]},{"content":"Indicates whether two ComPtrRef objects are equal.","pos":[2984,3034]},{"content":"ComPtrRef::operator!= Operator","pos":[3040,3070]},{"content":"Indicates whether two ComPtrRef objects are not equal.","pos":[3126,3180]},{"content":"Inheritance Hierarchy","pos":[3190,3211]},{"content":"Requirements","pos":[3257,3269]},{"pos":[3273,3293],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> client.h","source":"**Header:** client.h"},{"pos":[3300,3338],"content":"<bpt id=\"p1\">**</bpt>Namespace:<ept id=\"p1\">**</ept> Microsoft::WRL::Details","source":"**Namespace:** Microsoft::WRL::Details"},{"content":"See Also","pos":[3347,3355]},{"content":"Microsoft::WRL::Details Namespace","pos":[3360,3393]}],"content":"---\ntitle: \"ComPtrRef Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"client/Microsoft::WRL::Details::ComPtrRef\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"ComPtrRef class\"\nms.assetid: d6bdfd20-e977-45b4-9ac1-1b8efbdb77de\ncaps.latest.revision: 6\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"ru-ru\"\n  - \"zh-cn\"\n  - \"zh-tw\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"tr-tr\"\n---\n# ComPtrRef Class\nSupports the WRL infrastructure and is not intended to be used directly from your code.  \n  \n## Syntax  \n  \n```  \ntemplate <  \n   typename T  \n>  \nclass ComPtrRef : public ComPtrRefBase<T>;  \n```  \n  \n#### Parameters  \n `T`  \n A [ComPtr\\<T>](../windows/comptr-class.md) type or a type derived from it, not merely the interface represented by the ComPtr.  \n  \n## Remarks  \n Represents a reference to an object of type ComPtr\\<T>.  \n  \n## Members  \n  \n### Public Constructors  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[ComPtrRef::ComPtrRef Constructor](../windows/comptrref-comptrref-constructor.md)|Initializes a new instance of the ComPtrRef class from the specified pointer to another ComPtrRef object.|  \n  \n### Public Methods  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[ComPtrRef::GetAddressOf Method](../windows/comptrref-getaddressof-method.md)|Retrieves the address of a pointer to the interface represented by the current ComPtrRef object.|  \n|[ComPtrRef::ReleaseAndGetAddressOf Method](../windows/comptrref-releaseandgetaddressof-method.md)|Deletes the current ComPtrRef object and returns a pointer-to-a-pointer to the interface that was represented by the ComPtrRef object.|  \n  \n### Public Operators  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[ComPtrRef::operator InterfaceType** Operator](../windows/comptrref-operator-interfacetype-star-star-operator.md)|Deletes the current ComPtrRef object and returns a pointer-to-a-pointer to the interface that was represented by the ComPtrRef object.|  \n|[ComPtrRef::operator T* Operator](../windows/comptrref-operator-t-star-operator.md)|Returns the value of the [ptr_](../windows/comptrrefbase-ptr-data-member.md) data member of the current ComPtrRef object.|  \n|[ComPtrRef::operator void** Operator](../windows/comptrref-operator-void-star-star-operator.md)|Deletes the current ComPtrRef object, casts the pointer to the interface that was represented by the ComPtrRef object as a pointer-to-pointer-to `void`, and then returns the cast pointer.|  \n|[ComPtrRef::operator* Operator](../windows/comptrref-operator-star-operator.md)|Retrieves the pointer to the interface represented by the current ComPtrRef object.|  \n|[ComPtrRef::operator== Operator](../windows/comptrref-operator-equality-operator.md)|Indicates whether two ComPtrRef objects are equal.|  \n|[ComPtrRef::operator!= Operator](../windows/comptrref-operator-inequality-operator.md)|Indicates whether two ComPtrRef objects are not equal.|  \n  \n## Inheritance Hierarchy  \n `ComPtrRefBase`  \n  \n `ComPtrRef`  \n  \n## Requirements  \n **Header:** client.h  \n  \n **Namespace:** Microsoft::WRL::Details  \n  \n## See Also  \n [Microsoft::WRL::Details Namespace](../windows/microsoft-wrl-details-namespace.md)"}