{"nodes":[{"pos":[12,46],"content":"CNoAccessor Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"CNoAccessor Class | Microsoft Docs","pos":[0,34]}]},{"content":"CNoAccessor Class","pos":[649,666]},{"pos":[667,811],"content":"Can be used as a template argument (<ph id=\"ph1\">`TAccessor`</ph>) for template classes, such as <ph id=\"ph2\">`CCommand`</ph> and <ph id=\"ph3\">`CTable`</ph>, that require an accessor class argument.","source":"Can be used as a template argument (`TAccessor`) for template classes, such as `CCommand` and `CTable`, that require an accessor class argument."},{"content":"Syntax","pos":[820,826]},{"content":"Remarks","pos":[870,877]},{"pos":[881,993],"content":"Use <ph id=\"ph1\">`CNoAccessor`</ph> as a template argument when you do not want the class to support parameters or output columns.","source":"Use `CNoAccessor` as a template argument when you do not want the class to support parameters or output columns."},{"pos":[1014,1110],"content":"implements the following stub methods, each of which correspond to other accessor class methods:"},{"pos":[1120,1165],"content":"<bpt id=\"p1\">**</bpt>BindColumns<ept id=\"p1\">**</ept> - Binds columns to accessors.","source":"**BindColumns** - Binds columns to accessors."},{"pos":[1192,1234],"content":"- Binds the created parameters to columns."},{"pos":[1244,1272],"content":"<bpt id=\"p1\">**</bpt>Bind<ept id=\"p1\">**</ept> - Creates bindings.","source":"**Bind** - Creates bindings."},{"pos":[1282,1314],"content":"<bpt id=\"p1\">**</bpt>Close<ept id=\"p1\">**</ept> - Closes the accessor.","source":"**Close** - Closes the accessor."},{"pos":[1343,1389],"content":"- Releases the accessors created by the class."},{"pos":[1418,1482],"content":"- Frees any columns in the current record that need to be freed."},{"pos":[1508,1557],"content":"- Gets column information from the opened rowset."},{"pos":[1585,1642],"content":"- Retrieves the number of accessors created by the class."},{"pos":[1669,1760],"content":"- Returns true if data is automatically retrieved for the accessor during a Move operation."},{"pos":[1785,1841],"content":"- Retrieves the accessor handle of a specified accessor."},{"pos":[1863,1910],"content":"- Retrieves the pointer to the bookmark buffer."},{"pos":[1920,1984],"content":"<bpt id=\"p1\">**</bpt>NoBindOnNullRowset<ept id=\"p1\">**</ept> - Prevents data binding on empty rowsets.","source":"**NoBindOnNullRowset** - Prevents data binding on empty rowsets."},{"content":"Requirements","pos":[1993,2005]},{"pos":[2009,2031],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> atldbcli.h","source":"**Header:** atldbcli.h"},{"content":"See Also","pos":[2040,2048]},{"content":"OLE DB Consumer Templates","pos":[2053,2078]},{"content":"OLE DB Consumer Templates Reference","pos":[2136,2171]}],"content":"---\ntitle: \"CNoAccessor Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"ATL::CNoAccessor\"\n  - \"CNoAccessor\"\n  - \"ATL.CNoAccessor\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"CNoAccessor class\"\nms.assetid: eb669ae5-0a56-49a3-9646-c4ae6239da31\ncaps.latest.revision: 8\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# CNoAccessor Class\nCan be used as a template argument (`TAccessor`) for template classes, such as `CCommand` and `CTable`, that require an accessor class argument.  \n  \n## Syntax  \n  \n```  \nclass CNoAccessor  \n```  \n  \n## Remarks  \n Use `CNoAccessor` as a template argument when you do not want the class to support parameters or output columns.  \n  \n `CNoAccessor` implements the following stub methods, each of which correspond to other accessor class methods:  \n  \n-   **BindColumns** - Binds columns to accessors.  \n  \n-   `BindParameters` - Binds the created parameters to columns.  \n  \n-   **Bind** - Creates bindings.  \n  \n-   **Close** - Closes the accessor.  \n  \n-   `ReleaseAccessors` - Releases the accessors created by the class.  \n  \n-   `FreeRecordMemory` - Frees any columns in the current record that need to be freed.  \n  \n-   `GetColumnInfo` - Gets column information from the opened rowset.  \n  \n-   `GetNumAccessors` - Retrieves the number of accessors created by the class.  \n  \n-   `IsAutoAccessor` - Returns true if data is automatically retrieved for the accessor during a Move operation.  \n  \n-   `GetHAccessor` - Retrieves the accessor handle of a specified accessor.  \n  \n-   `GetBuffer` - Retrieves the pointer to the bookmark buffer.  \n  \n-   **NoBindOnNullRowset** - Prevents data binding on empty rowsets.  \n  \n## Requirements  \n **Header:** atldbcli.h  \n  \n## See Also  \n [OLE DB Consumer Templates](../../data/oledb/ole-db-consumer-templates-cpp.md)   \n [OLE DB Consumer Templates Reference](../../data/oledb/ole-db-consumer-templates-reference.md)"}