{"nodes":[{"pos":[12,56],"content":"ISupportErrorInfoImpl Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"ISupportErrorInfoImpl Class | Microsoft Docs","pos":[0,44]}]},{"content":"ISupportErrorInfoImpl Class","pos":[851,878]},{"pos":[879,1106],"content":"This class provides a default implementation of the <bpt id=\"p1\">[</bpt>ISupportErrorInfo Interface<ept id=\"p1\">](http://msdn.microsoft.com/en-us/42d33066-36b4-4a5b-aa5d-46682e560f32)</ept> and can be used when only a single interface generates errors on an object.","source":"This class provides a default implementation of the [ISupportErrorInfo Interface](http://msdn.microsoft.com/en-us/42d33066-36b4-4a5b-aa5d-46682e560f32) and can be used when only a single interface generates errors on an object."},{"pos":[1114,1264],"content":"[!IMPORTANT]\n This class and its members cannot be used in applications that execute in the [!INCLUDE[wrt](../../atl/reference/includes/wrt_md.md)].","leadings":["","> "],"nodes":[{"content":"This class and its members cannot be used in applications that execute in the <ph id=\"ph1\">[!INCLUDE[wrt](../../atl/reference/includes/wrt_md.md)]</ph>.","pos":[14,148],"source":" This class and its members cannot be used in applications that execute in the [!INCLUDE[wrt](../../atl/reference/includes/wrt_md.md)]."}]},{"content":"Syntax","pos":[1273,1279]},{"content":"Parameters","pos":[1400,1410]},{"content":"A pointer to the IID of an interface that supports <bpt id=\"p1\">[</bpt>IErrorInfo<ept id=\"p1\">](http://msdn.microsoft.com/en-us/4dda6909-2d9a-4727-ae0c-b5f90dcfa447)</ept>.","pos":[1424,1558],"source":" A pointer to the IID of an interface that supports [IErrorInfo](http://msdn.microsoft.com/en-us/4dda6909-2d9a-4727-ae0c-b5f90dcfa447)."},{"content":"Members","pos":[1567,1574]},{"content":"Public Methods","pos":[1584,1598]},{"content":"Name","pos":[1605,1609]},{"content":"Description","pos":[1610,1621]},{"content":"ISupportErrorInfoImpl::InterfaceSupportsErrorInfo","pos":[1660,1709]},{"pos":[1763,1922],"content":"Indicates whether the interface identified by <ph id=\"ph1\">`riid`</ph> supports the <bpt id=\"p1\">[</bpt>IErrorInfo<ept id=\"p1\">](http://msdn.microsoft.com/en-us/4dda6909-2d9a-4727-ae0c-b5f90dcfa447)</ept> interface.","source":"Indicates whether the interface identified by `riid` supports the [IErrorInfo](http://msdn.microsoft.com/en-us/4dda6909-2d9a-4727-ae0c-b5f90dcfa447) interface."},{"content":"Remarks","pos":[1932,1939]},{"content":"The <bpt id=\"p1\">[</bpt>ISupportErrorInfo Interface<ept id=\"p1\">](http://msdn.microsoft.com/en-us/42d33066-36b4-4a5b-aa5d-46682e560f32)</ept> ensures that error information can be returned to the client.","pos":[1943,2108],"source":"The [ISupportErrorInfo Interface](http://msdn.microsoft.com/en-us/42d33066-36b4-4a5b-aa5d-46682e560f32) ensures that error information can be returned to the client."},{"content":"Objects that use <bpt id=\"p1\">**</bpt>IErrorInfo<ept id=\"p1\">**</ept> must implement <bpt id=\"p2\">**</bpt>ISupportErrorInfo<ept id=\"p2\">**</ept>.","pos":[2109,2178],"source":" Objects that use **IErrorInfo** must implement **ISupportErrorInfo**."},{"content":"Class <ph id=\"ph1\">`ISupportErrorInfoImpl`</ph> provides a default implementation of <bpt id=\"p1\">**</bpt>ISupportErrorInfo<ept id=\"p1\">**</ept> and can be used when only a single interface generates errors on an object.","pos":[2185,2349],"source":"Class `ISupportErrorInfoImpl` provides a default implementation of **ISupportErrorInfo** and can be used when only a single interface generates errors on an object."},{"content":"For example:","pos":[2350,2362]},{"pos":[2380,2394],"content":"NVC_ATL_COM#48"},{"content":"Inheritance Hierarchy","pos":[2464,2485]},{"content":"Requirements","pos":[2547,2559]},{"pos":[2563,2583],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> atlcom.h","source":"**Header:** atlcom.h"},{"pos":[2659,2708],"content":"ISupportErrorInfoImpl::InterfaceSupportsErrorInfo"},{"pos":[2712,2871],"content":"Indicates whether the interface identified by <ph id=\"ph1\">`riid`</ph> supports the <bpt id=\"p1\">[</bpt>IErrorInfo<ept id=\"p1\">](http://msdn.microsoft.com/en-us/4dda6909-2d9a-4727-ae0c-b5f90dcfa447)</ept> interface.","source":"Indicates whether the interface identified by `riid` supports the [IErrorInfo](http://msdn.microsoft.com/en-us/4dda6909-2d9a-4727-ae0c-b5f90dcfa447) interface."},{"content":"Remarks","pos":[2946,2953]},{"pos":[2957,3138],"content":"See <bpt id=\"p1\">[</bpt>ISupportErrorInfo::InterfaceSupportsErrorInfo<ept id=\"p1\">](http://msdn.microsoft.com/en-us/a54ef18d-ee3f-4483-ac4a-99d758f0960a)</ept> in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"See [ISupportErrorInfo::InterfaceSupportsErrorInfo](http://msdn.microsoft.com/en-us/a54ef18d-ee3f-4483-ac4a-99d758f0960a) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"pos":[3191,3217],"content":"IThreadPoolConfig::GetSize"},{"content":"Call this method to get the number of threads in the pool.","pos":[3221,3279]},{"content":"Parameters","pos":[3341,3351]},{"content":"[out] Address of the variable that, on success, receives the number of threads in the pool.","pos":[3373,3464]},{"content":"Return Value","pos":[3474,3486]},{"content":"Returns S_OK on success, or an error HRESULT on failure.","pos":[3490,3546]},{"content":"Example","pos":[3556,3563]},{"pos":[3578,3599],"content":"NVC_ATL_Utilities#134"},{"pos":[3718,3747],"content":"IThreadPoolConfig::GetTimeout"},{"content":"Call this method to get the maximum time in milliseconds that the thread pool will wait for a thread to shut down.","pos":[3751,3865]},{"content":"Parameters","pos":[3930,3940]},{"content":"[out] Address of the variable that, on success, receives the maximum time in milliseconds that the thread pool will wait for a thread to shut down.","pos":[3960,4107]},{"content":"Return Value","pos":[4117,4129]},{"content":"Returns S_OK on success, or an error HRESULT on failure.","pos":[4133,4189]},{"content":"Example","pos":[4199,4206]},{"pos":[4210,4272],"content":"See <bpt id=\"p1\">[</bpt>IThreadPoolConfig::GetSize<ept id=\"p1\">](#ithreadpoolconfig__getsize)</ept>.","source":"See [IThreadPoolConfig::GetSize](#ithreadpoolconfig__getsize)."},{"pos":[4325,4351],"content":"IThreadPoolConfig::SetSize"},{"content":"Call this method to set the number of threads in the pool.","pos":[4355,4413]},{"content":"Parameters","pos":[4473,4483]},{"content":"The requested number of threads in the pool.","pos":[4504,4548]},{"pos":[4555,4701],"content":"If <ph id=\"ph1\">`nNumThreads`</ph> is negative, its absolute value will be multiplied by the number of processors in the machine to get the total number of threads.","source":"If `nNumThreads` is negative, its absolute value will be multiplied by the number of processors in the machine to get the total number of threads."},{"pos":[4708,4933],"content":"If <ph id=\"ph1\">`nNumThreads`</ph> is zero, <bpt id=\"p1\">[</bpt>ATLS_DEFAULT_THREADSPERPROC<ept id=\"p1\">](http://msdn.microsoft.com/library/e0dcf107-72a9-4122-abb4-83c63aa7d571)</ept> will be multiplied by the number of processors in the machine to get the total number of threads.","source":"If `nNumThreads` is zero, [ATLS_DEFAULT_THREADSPERPROC](http://msdn.microsoft.com/library/e0dcf107-72a9-4122-abb4-83c63aa7d571) will be multiplied by the number of processors in the machine to get the total number of threads."},{"content":"Return Value","pos":[4943,4955]},{"content":"Returns S_OK on success, or an error HRESULT on failure.","pos":[4959,5015]},{"content":"Example","pos":[5025,5032]},{"pos":[5036,5098],"content":"See <bpt id=\"p1\">[</bpt>IThreadPoolConfig::GetSize<ept id=\"p1\">](#ithreadpoolconfig__getsize)</ept>.","source":"See [IThreadPoolConfig::GetSize](#ithreadpoolconfig__getsize)."},{"pos":[5154,5183],"content":"IThreadPoolConfig::SetTimeout"},{"content":"Call this method to set the maximum time in milliseconds that the thread pool will wait for a thread to shut down.","pos":[5187,5301]},{"content":"Parameters","pos":[5364,5374]},{"content":"The requested maximum time in milliseconds that the thread pool will wait for a thread to shut down.","pos":[5393,5493]},{"content":"Return Value","pos":[5503,5515]},{"content":"Returns S_OK on success, or an error HRESULT on failure.","pos":[5519,5575]},{"content":"Example","pos":[5585,5592]},{"pos":[5596,5658],"content":"See <bpt id=\"p1\">[</bpt>IThreadPoolConfig::GetSize<ept id=\"p1\">](#ithreadpoolconfig__getsize)</ept>.","source":"See [IThreadPoolConfig::GetSize](#ithreadpoolconfig__getsize)."},{"content":"See Also","pos":[5667,5675]},{"content":"Class Overview","pos":[5680,5694]}],"content":"---\ntitle: \"ISupportErrorInfoImpl Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"ATL::ISupportErrorInfoImpl<piid>\"\n  - \"ATL::ISupportErrorInfoImpl\"\n  - \"ISupportErrorInfoImpl\"\n  - \"ATL.ISupportErrorInfoImpl<piid>\"\n  - \"ATL.ISupportErrorInfoImpl\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"ISupportErrorInfo ATL implementation\"\n  - \"ISupportErrorInfoImpl class\"\n  - \"error information, ATL\"\nms.assetid: e33a4b11-a123-41cf-bcea-7b19743902af\ncaps.latest.revision: 23\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# ISupportErrorInfoImpl Class\nThis class provides a default implementation of the [ISupportErrorInfo Interface](http://msdn.microsoft.com/en-us/42d33066-36b4-4a5b-aa5d-46682e560f32) and can be used when only a single interface generates errors on an object.  \n  \n> [!IMPORTANT]\n>  This class and its members cannot be used in applications that execute in the [!INCLUDE[wrt](../../atl/reference/includes/wrt_md.md)].  \n  \n## Syntax  \n  \n```\ntemplate<const IID* piid>  class ATL_NO_VTABLE ISupportErrorInfoImpl :  public ISupportErrorInfo\n```  \n  \n#### Parameters  \n `piid`  \n A pointer to the IID of an interface that supports [IErrorInfo](http://msdn.microsoft.com/en-us/4dda6909-2d9a-4727-ae0c-b5f90dcfa447).  \n  \n## Members  \n  \n### Public Methods  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[ISupportErrorInfoImpl::InterfaceSupportsErrorInfo](#isupporterrorinfoimpl__interfacesupportserrorinfo)|Indicates whether the interface identified by `riid` supports the [IErrorInfo](http://msdn.microsoft.com/en-us/4dda6909-2d9a-4727-ae0c-b5f90dcfa447) interface.|  \n  \n## Remarks  \n The [ISupportErrorInfo Interface](http://msdn.microsoft.com/en-us/42d33066-36b4-4a5b-aa5d-46682e560f32) ensures that error information can be returned to the client. Objects that use **IErrorInfo** must implement **ISupportErrorInfo**.  \n  \n Class `ISupportErrorInfoImpl` provides a default implementation of **ISupportErrorInfo** and can be used when only a single interface generates errors on an object. For example:  \n  \n [!code-cpp[NVC_ATL_COM#48](../../atl/codesnippet/cpp/isupporterrorinfoimpl-class_1.h)]  \n  \n## Inheritance Hierarchy  \n `ISupportErrorInfo`  \n  \n `ISupportErrorInfoImpl`  \n  \n## Requirements  \n **Header:** atlcom.h  \n  \n##  <a name=\"isupporterrorinfoimpl__interfacesupportserrorinfo\"></a>  ISupportErrorInfoImpl::InterfaceSupportsErrorInfo  \n Indicates whether the interface identified by `riid` supports the [IErrorInfo](http://msdn.microsoft.com/en-us/4dda6909-2d9a-4727-ae0c-b5f90dcfa447) interface.  \n  \n```\nSTDMETHOD(InterfaceSupportsErrorInfo)(REFIID riid);\n```  \n  \n### Remarks  \n See [ISupportErrorInfo::InterfaceSupportsErrorInfo](http://msdn.microsoft.com/en-us/a54ef18d-ee3f-4483-ac4a-99d758f0960a) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n##  <a name=\"ithreadpoolconfig__getsize\"></a>  IThreadPoolConfig::GetSize  \n Call this method to get the number of threads in the pool.  \n  \n```\nSTDMETHOD(GetSize)(int* pnNumThreads);\n```  \n  \n### Parameters  \n `pnNumThreads`  \n [out] Address of the variable that, on success, receives the number of threads in the pool.  \n  \n### Return Value  \n Returns S_OK on success, or an error HRESULT on failure.  \n  \n### Example  \n [!code-cpp[NVC_ATL_Utilities#134](../../atl/codesnippet/cpp/isupporterrorinfoimpl-class_2.cpp)]  \n  \n##  <a name=\"ithreadpoolconfig__gettimeout\"></a>  IThreadPoolConfig::GetTimeout  \n Call this method to get the maximum time in milliseconds that the thread pool will wait for a thread to shut down.  \n  \n```\nSTDMETHOD(GetTimeout)(DWORD* pdwMaxWait);\n```  \n  \n### Parameters  \n `pdwMaxWait`  \n [out] Address of the variable that, on success, receives the maximum time in milliseconds that the thread pool will wait for a thread to shut down.  \n  \n### Return Value  \n Returns S_OK on success, or an error HRESULT on failure.  \n  \n### Example  \n See [IThreadPoolConfig::GetSize](#ithreadpoolconfig__getsize).  \n  \n##  <a name=\"ithreadpoolconfig__setsize\"></a>  IThreadPoolConfig::SetSize  \n Call this method to set the number of threads in the pool.  \n  \n```\nSTDMETHOD(SetSize)(int nNumThreads);\n```  \n  \n### Parameters  \n `nNumThreads`  \n The requested number of threads in the pool.  \n  \n If `nNumThreads` is negative, its absolute value will be multiplied by the number of processors in the machine to get the total number of threads.  \n  \n If `nNumThreads` is zero, [ATLS_DEFAULT_THREADSPERPROC](http://msdn.microsoft.com/library/e0dcf107-72a9-4122-abb4-83c63aa7d571) will be multiplied by the number of processors in the machine to get the total number of threads.  \n  \n### Return Value  \n Returns S_OK on success, or an error HRESULT on failure.  \n  \n### Example  \n See [IThreadPoolConfig::GetSize](#ithreadpoolconfig__getsize).  \n  \n##  <a name=\"ithreadpoolconfig__settimeout\"></a>  IThreadPoolConfig::SetTimeout  \n Call this method to set the maximum time in milliseconds that the thread pool will wait for a thread to shut down.  \n  \n```\nSTDMETHOD(SetTimeout)(DWORD dwMaxWait);\n```  \n  \n### Parameters  \n `dwMaxWait`  \n The requested maximum time in milliseconds that the thread pool will wait for a thread to shut down.  \n  \n### Return Value  \n Returns S_OK on success, or an error HRESULT on failure.  \n  \n### Example  \n See [IThreadPoolConfig::GetSize](#ithreadpoolconfig__getsize).  \n  \n## See Also  \n [Class Overview](../../atl/atl-class-overview.md)\n"}