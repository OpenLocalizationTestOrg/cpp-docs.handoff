{"nodes":[{"pos":[12,56],"content":"vector::reference (STL-CLR) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"vector::reference (STL-CLR) | Microsoft Docs","pos":[0,44]}]},{"content":"vector::reference (STL/CLR)","pos":[640,667]},{"content":"The type of a reference to an element.","pos":[668,706]},{"content":"Syntax","pos":[715,721]},{"content":"Remarks","pos":[778,785]},{"content":"The type describes a reference to an element.","pos":[789,834]},{"content":"Example","pos":[843,850]},{"content":"Requirements","pos":[1843,1855]},{"pos":[1859,1887],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> <ph id=\"ph1\">\\&lt;</ph>cliext/vector&gt;","source":"**Header:** \\<cliext/vector>"},{"pos":[1894,1915],"content":"<bpt id=\"p1\">**</bpt>Namespace:<ept id=\"p1\">**</ept> cliext","source":"**Namespace:** cliext"},{"content":"See Also","pos":[1924,1932]},{"content":"vector (STL/CLR)","pos":[1937,1953]},{"content":"vector::const_reference (STL/CLR)","pos":[1989,2022]},{"content":"vector::value_type (STL/CLR)","pos":[2074,2102]}],"content":"---\ntitle: \"vector::reference (STL-CLR) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"cliext::vector::reference\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"reference member [STL/CLR]\"\nms.assetid: 6ea0d3b0-d2e6-42c3-856c-a10f5ef7620c\ncaps.latest.revision: 15\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# vector::reference (STL/CLR)\nThe type of a reference to an element.  \n  \n## Syntax  \n  \n```  \ntypedef value_type% reference;  \n```  \n  \n## Remarks  \n The type describes a reference to an element.  \n  \n## Example  \n  \n```  \n// cliext_vector_reference.cpp   \n// compile with: /clr   \n#include <cliext/vector>   \n  \nint main()   \n    {   \n    cliext::vector<wchar_t> c1;   \n    c1.push_back(L'a');   \n    c1.push_back(L'b');   \n    c1.push_back(L'c');   \n  \n// display initial contents \" a b c\"   \n    cliext::vector<wchar_t>::iterator it = c1.begin();   \n    for (; it != c1.end(); ++it)   \n        {   // get a reference to an element   \n        cliext::vector<wchar_t>::reference ref = *it;   \n        System::Console::Write(\" {0}\", ref);   \n        }   \n    System::Console::WriteLine();   \n  \n// modify contents \" a b c\"   \n    for (it = c1.begin(); it != c1.end(); ++it)   \n        {   // get a reference to an element   \n        cliext::vector<wchar_t>::reference ref = *it;   \n  \n        ref += (wchar_t)(L'A' - L'a');   \n        System::Console::Write(\" {0}\", ref);   \n        }   \n    System::Console::WriteLine();   \n    return (0);   \n    }  \n  \n```  \n  \n```Output  \na b c  \nA B C  \n```  \n  \n## Requirements  \n **Header:** \\<cliext/vector>  \n  \n **Namespace:** cliext  \n  \n## See Also  \n [vector (STL/CLR)](../dotnet/vector-stl-clr.md)   \n [vector::const_reference (STL/CLR)](../dotnet/vector-const-reference-stl-clr.md)   \n [vector::value_type (STL/CLR)](../dotnet/vector-value-type-stl-clr.md)"}