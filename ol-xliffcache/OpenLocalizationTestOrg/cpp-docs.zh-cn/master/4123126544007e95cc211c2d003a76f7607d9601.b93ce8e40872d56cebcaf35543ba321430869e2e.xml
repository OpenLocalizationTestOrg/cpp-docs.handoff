{"nodes":[{"pos":[12,58],"content":"__getmainargs, __wgetmainargs | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"__getmainargs, __wgetmainargs | Microsoft Docs","pos":[0,46]}]},{"content":"__getmainargs, __wgetmainargs","pos":[905,934]},{"pos":[935,1034],"content":"Invokes command-line parsing and copies the arguments to <ph id=\"ph1\">`main()`</ph> back through the passed pointers.","source":"Invokes command-line parsing and copies the arguments to `main()` back through the passed pointers."},{"content":"Syntax","pos":[1043,1049]},{"content":"Parameters","pos":[1360,1370]},{"content":"An integer that contains the number of arguments that follow in <ph id=\"ph1\">`argv`</ph>.","pos":[1385,1456],"source":" An integer that contains the number of arguments that follow in `argv`."},{"content":"The <ph id=\"ph1\">`argc`</ph> parameter is always greater than or equal to 1.","pos":[1457,1515],"source":" The `argc` parameter is always greater than or equal to 1."},{"content":"An array of null-terminated strings representing command-line arguments entered by the user of the program.","pos":[1533,1640]},{"content":"By convention, <ph id=\"ph1\">`argv[0]`</ph> is the command with which the program is invoked, argv[1] is the first command-line argument, and so on, until argv[argc], which is always NULL.","pos":[1641,1810],"source":" By convention, `argv[0]` is the command with which the program is invoked, argv[1] is the first command-line argument, and so on, until argv[argc], which is always NULL."},{"content":"The first command-line argument is always <ph id=\"ph1\">`argv[1]`</ph> and the last one is <ph id=\"ph2\">`argv[argc – 1]`</ph>.","pos":[1811,1900],"source":" The first command-line argument is always `argv[1]` and the last one is `argv[argc – 1]`."},{"content":"An array of strings that represent the variables set in the user's environment.","pos":[1917,1996]},{"content":"This array is terminated by a NULL entry.","pos":[1997,2038]},{"content":"An integer that if set to 1 expands the wildcards in the command line arguments, or if set to 0 does nothing.","pos":[2062,2171]},{"content":"Other information to be passed to the CRT DLL.","pos":[2194,2240]},{"content":"Return Value","pos":[2249,2261]},{"content":"0 if successful; a negative value if unsuccessful.","pos":[2265,2315]},{"content":"Remarks","pos":[2324,2331]},{"pos":[2335,2447],"content":"Use <ph id=\"ph1\">`__getmainargs`</ph> on non-wide character platforms, and <ph id=\"ph2\">`__wgetmainargs`</ph> on wide-character (Unicode) platforms.","source":"Use `__getmainargs` on non-wide character platforms, and `__wgetmainargs` on wide-character (Unicode) platforms."},{"content":"Requirements","pos":[2456,2468]},{"content":"Routine","pos":[2475,2482]},{"content":"Required header","pos":[2483,2498]},{"content":"__getmainargs","pos":[2543,2556]},{"content":"internal.h","pos":[2557,2567]},{"content":"__wgetmainargs","pos":[2572,2586]},{"content":"internal.h","pos":[2587,2597]}],"content":"---\ntitle: \"__getmainargs, __wgetmainargs | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\napiname: \n  - \"__wgetmainargs\"\n  - \"__getmainargs\"\napilocation: \n  - \"msvcr100.dll\"\n  - \"msvcrt.dll\"\n  - \"msvcr110_clr0400.dll\"\n  - \"msvcr80.dll\"\n  - \"msvcr110.dll\"\n  - \"msvcr90.dll\"\n  - \"msvcr120.dll\"\napitype: \"DLLExport\"\nf1_keywords: \n  - \"__wgetmainargs\"\n  - \"__getmainargs\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"__wgetmainargs\"\n  - \"__getmainargs\"\nms.assetid: f72f54eb-9509-4bdf-8752-40fc49055439\ncaps.latest.revision: 3\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"ru-ru\"\n  - \"zh-cn\"\n  - \"zh-tw\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"tr-tr\"\n---\n# __getmainargs, __wgetmainargs\nInvokes command-line parsing and copies the arguments to `main()` back through the passed pointers.  \n  \n## Syntax  \n  \n```cpp  \nint __getmainargs(  \n    int * _Argc,   \n   char *** _Argv,   \n   char *** _Env,   \n   int _DoWildCard,  \n_startupinfo * _StartInfo);  \n  \n int __wgetmainargs (  \n   int *_Argc,  \n   wchar_t ***_Argv,  \n   wchar_t ***_Env,  \n   int _DoWildCard,  \n   _startupinfo * _StartInfo)  \n  \n```  \n  \n#### Parameters  \n `_Argc`  \n An integer that contains the number of arguments that follow in `argv`. The `argc` parameter is always greater than or equal to 1.  \n  \n `_Argv`  \n An array of null-terminated strings representing command-line arguments entered by the user of the program. By convention, `argv[0]` is the command with which the program is invoked, argv[1] is the first command-line argument, and so on, until argv[argc], which is always NULL. The first command-line argument is always `argv[1]` and the last one is `argv[argc – 1]`.  \n  \n `_Env`  \n An array of strings that represent the variables set in the user's environment. This array is terminated by a NULL entry.  \n  \n `_DoWildCard`  \n An integer that if set to 1 expands the wildcards in the command line arguments, or if set to 0 does nothing.  \n  \n `_StartInfo`  \n Other information to be passed to the CRT DLL.  \n  \n## Return Value  \n 0 if successful; a negative value if unsuccessful.  \n  \n## Remarks  \n Use `__getmainargs` on non-wide character platforms, and `__wgetmainargs` on wide-character (Unicode) platforms.  \n  \n## Requirements  \n  \n|Routine|Required header|  \n|-------------|---------------------|  \n|__getmainargs|internal.h|  \n|__wgetmainargs|internal.h|"}