{"nodes":[{"pos":[12,58],"content":"InterfaceListHelper Structure | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"InterfaceListHelper Structure | Microsoft Docs","pos":[0,46]}]},{"content":"InterfaceListHelper Structure","pos":[700,729]},{"content":"Supports the WRL infrastructure and is not intended to be used directly from your code.","pos":[730,817]},{"content":"Syntax","pos":[826,832]},{"content":"Parameters","pos":[1249,1259]},{"content":"Template parameter 0, which is required.","pos":[1271,1311]},{"content":"Template parameter 1, which by default is unspecified.","pos":[1326,1380]},{"content":"Template parameter 2, which by default is unspecified.The third template parameter.","pos":[1395,1478]},{"content":"Template parameter 3, which by default is unspecified.","pos":[1493,1547]},{"content":"Template parameter 4, which by default is unspecified.","pos":[1562,1616]},{"content":"Template parameter 5, which by default is unspecified.","pos":[1631,1685]},{"content":"Template parameter 6, which by default is unspecified.","pos":[1700,1754]},{"content":"Template parameter 7, which by default is unspecified.","pos":[1769,1823]},{"content":"Template parameter 8, which by default is unspecified.","pos":[1838,1892]},{"content":"Template parameter 9, which by default is unspecified.","pos":[1907,1961]},{"content":"Remarks","pos":[1970,1977]},{"content":"Builds an InterfaceList type by recursively applying the specified template parameter arguments.","pos":[1981,2077]},{"content":"The InterfaceListHelper template uses template parameter <ph id=\"ph1\">`T0`</ph> to define the first data member in an InterfaceList structure, and then recursively applies the InterfaceListHelper template to any remaining template parameters.","pos":[2084,2308],"source":"The InterfaceListHelper template uses template parameter `T0` to define the first data member in an InterfaceList structure, and then recursively applies the InterfaceListHelper template to any remaining template parameters."},{"content":"InterfaceListHelper stops when there are no remaining template parameters.","pos":[2309,2383]},{"content":"Members","pos":[2392,2399]},{"content":"Public Typedefs","pos":[2409,2424]},{"content":"Name","pos":[2431,2435]},{"content":"Description","pos":[2436,2447]},{"content":"A synonym for the InterfaceList type.","pos":[2493,2530]},{"content":"Inheritance Hierarchy","pos":[2540,2561]},{"content":"Requirements","pos":[2595,2607]},{"pos":[2611,2635],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> implements.h","source":"**Header:** implements.h"},{"pos":[2642,2680],"content":"<bpt id=\"p1\">**</bpt>Namespace:<ept id=\"p1\">**</ept> Microsoft::WRL::Details","source":"**Namespace:** Microsoft::WRL::Details"},{"content":"See Also","pos":[2689,2697]},{"content":"Microsoft::WRL::Details Namespace","pos":[2702,2735]}],"content":"---\ntitle: \"InterfaceListHelper Structure | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"implements/Microsoft::WRL::Details::InterfaceListHelper\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"InterfaceListHelper structure\"\nms.assetid: 4297e419-c96b-45df-8a00-7568062125ba\ncaps.latest.revision: 5\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"ru-ru\"\n  - \"zh-cn\"\n  - \"zh-tw\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"tr-tr\"\n---\n# InterfaceListHelper Structure\nSupports the WRL infrastructure and is not intended to be used directly from your code.  \n  \n## Syntax  \n  \n```  \ntemplate <  \n   typename T0,  \n   typename T1 = Nil,  \n   typename T2 = Nil,  \n   typename T3 = Nil,  \n   typename T4 = Nil,  \n   typename T5 = Nil,  \n   typename T6 = Nil,  \n   typename T7 = Nil,  \n   typename T8 = Nil,  \n   typename T9 = Nil  \n>  \nstruct InterfaceListHelper;  \n  \ntemplate <  \n   typename T0  \n>  \nstruct InterfaceListHelper<T0, Nil, Nil, Nil, Nil, Nil, Nil, Nil, Nil>;  \n```  \n  \n#### Parameters  \n `T0`  \n Template parameter 0, which is required.  \n  \n `T1`  \n Template parameter 1, which by default is unspecified.  \n  \n `T2`  \n Template parameter 2, which by default is unspecified.The third template parameter.  \n  \n `T3`  \n Template parameter 3, which by default is unspecified.  \n  \n `T4`  \n Template parameter 4, which by default is unspecified.  \n  \n `T5`  \n Template parameter 5, which by default is unspecified.  \n  \n `T6`  \n Template parameter 6, which by default is unspecified.  \n  \n `T7`  \n Template parameter 7, which by default is unspecified.  \n  \n `T8`  \n Template parameter 8, which by default is unspecified.  \n  \n `T9`  \n Template parameter 9, which by default is unspecified.  \n  \n## Remarks  \n Builds an InterfaceList type by recursively applying the specified template parameter arguments.  \n  \n The InterfaceListHelper template uses template parameter `T0` to define the first data member in an InterfaceList structure, and then recursively applies the InterfaceListHelper template to any remaining template parameters. InterfaceListHelper stops when there are no remaining template parameters.  \n  \n## Members  \n  \n### Public Typedefs  \n  \n|Name|Description|  \n|----------|-----------------|  \n|`TypeT`|A synonym for the InterfaceList type.|  \n  \n## Inheritance Hierarchy  \n `InterfaceListHelper`  \n  \n## Requirements  \n **Header:** implements.h  \n  \n **Namespace:** Microsoft::WRL::Details  \n  \n## See Also  \n [Microsoft::WRL::Details Namespace](../windows/microsoft-wrl-details-namespace.md)"}