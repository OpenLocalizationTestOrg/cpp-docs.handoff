{"nodes":[{"pos":[12,87],"content":"-Zc:strictStrings (Disable string literal type conversion) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"-Zc:strictStrings (Disable string literal type conversion) | Microsoft Docs","pos":[0,75]}]},{"content":"/Zc:strictStrings (Disable string literal type conversion)","pos":[789,847]},{"pos":[848,977],"content":"When specified, the compiler requires strict <ph id=\"ph1\">`const`</ph>-qualification conformance for pointers initialized by using string literals.","source":"When specified, the compiler requires strict `const`-qualification conformance for pointers initialized by using string literals."},{"content":"Syntax","pos":[986,992]},{"content":"Remarks","pos":[1039,1046]},{"content":"If <bpt id=\"p1\">**</bpt>/Zc:strictStrings<ept id=\"p1\">**</ept> is specified, the compiler enforces the standard C++ <ph id=\"ph1\">`const`</ph> qualifications for string literals, as type 'array of <ph id=\"ph2\">`const``char`</ph>' or 'array of <ph id=\"ph3\">`const``wchar_t`</ph>', depending on the declaration.","pos":[1050,1266],"source":"If **/Zc:strictStrings** is specified, the compiler enforces the standard C++ `const` qualifications for string literals, as type 'array of `const``char`' or 'array of `const``wchar_t`', depending on the declaration."},{"content":"String literals are immutable, and an attempt to modify the contents of one results in an access violation error at run time.","pos":[1267,1392]},{"content":"You must declare a string pointer as <ph id=\"ph1\">`const`</ph> to initialize it by using a string literal, or use an explicit <ph id=\"ph2\">`const_cast`</ph> to initialize a non-<ph id=\"ph3\">`const`</ph> pointer.","pos":[1393,1550],"source":" You must declare a string pointer as `const` to initialize it by using a string literal, or use an explicit `const_cast` to initialize a non-`const` pointer."},{"content":"By default, or if <bpt id=\"p1\">**</bpt>/Zc:strictStrings-<ept id=\"p1\">**</ept> is specified, the compiler does not enforce the standard C++ <ph id=\"ph1\">`const`</ph> qualifications for string pointers initialized by using string literals.","pos":[1551,1733],"source":" By default, or if **/Zc:strictStrings-** is specified, the compiler does not enforce the standard C++ `const` qualifications for string pointers initialized by using string literals."},{"content":"Use the <bpt id=\"p1\">**</bpt>/Zc:strictStrings<ept id=\"p1\">**</ept> option to prevent compilation of incorrect code.","pos":[1740,1818],"source":"Use the **/Zc:strictStrings** option to prevent compilation of incorrect code."},{"content":"This example shows how a simple declaration error leads to a crash at run time:","pos":[1819,1898]},{"pos":[2107,2205],"content":"When <bpt id=\"p1\">**</bpt>/Zc:strictStrings<ept id=\"p1\">**</ept> is enabled, the same code reports an error in the declaration of <ph id=\"ph1\">`str`</ph>.","source":"When **/Zc:strictStrings** is enabled, the same code reports an error in the declaration of `str`."},{"content":"If you use <ph id=\"ph1\">`auto`</ph> to declare a string pointer, the compiler creates the correct <ph id=\"ph2\">`const`</ph> pointer type declaration for you.","pos":[2467,2588],"source":"If you use `auto` to declare a string pointer, the compiler creates the correct `const` pointer type declaration for you."},{"content":"An attempt to modify the contents of a <ph id=\"ph1\">`const`</ph> pointer is reported by the compiler as an error.","pos":[2589,2684],"source":" An attempt to modify the contents of a `const` pointer is reported by the compiler as an error."},{"pos":[2692,3029],"content":"[!NOTE]\n The Standard C++ Library in [!INCLUDE[cpp_dev12_long](../../build/reference/includes/cpp_dev12_long_md.md)] does not support the **/Zc:strictStrings** compiler option in debug builds. If you see several [C2665](../../error-messages/compiler-errors-2/compiler-error-c2665.md) errors in your build output, this may be the cause.","leadings":["","> "],"nodes":[{"content":" The Standard C++ Library in [!INCLUDE[cpp_dev12_long](../../build/reference/includes/cpp_dev12_long_md.md)] does not support the **/Zc:strictStrings** compiler option in debug builds. If you see several [C2665](../../error-messages/compiler-errors-2/compiler-error-c2665.md) errors in your build output, this may be the cause.","pos":[8,335],"nodes":[{"content":"The Standard C++ Library in <ph id=\"ph1\">[!INCLUDE[cpp_dev12_long](../../build/reference/includes/cpp_dev12_long_md.md)]</ph> does not support the <bpt id=\"p1\">**</bpt>/Zc:strictStrings<ept id=\"p1\">**</ept> compiler option in debug builds.","pos":[1,184],"source":" The Standard C++ Library in [!INCLUDE[cpp_dev12_long](../../build/reference/includes/cpp_dev12_long_md.md)] does not support the **/Zc:strictStrings** compiler option in debug builds."},{"content":"If you see several <bpt id=\"p1\">[</bpt>C2665<ept id=\"p1\">](../../error-messages/compiler-errors-2/compiler-error-c2665.md)</ept> errors in your build output, this may be the cause.","pos":[185,327],"source":" If you see several [C2665](../../error-messages/compiler-errors-2/compiler-error-c2665.md) errors in your build output, this may be the cause."}]}]},{"pos":[3036,3159],"content":"For more information about conformance issues in Visual C++, see <bpt id=\"p1\">[</bpt>Nonstandard Behavior<ept id=\"p1\">](../../cpp/nonstandard-behavior.md)</ept>.","source":"For more information about conformance issues in Visual C++, see [Nonstandard Behavior](../../cpp/nonstandard-behavior.md)."},{"content":"To set this compiler option in the Visual Studio development environment","pos":[3169,3241]},{"content":"Open the project's <bpt id=\"p1\">**</bpt>Property Pages<ept id=\"p1\">**</ept> dialog box.","pos":[3251,3300],"source":"Open the project's **Property Pages** dialog box."},{"content":"For details, see <bpt id=\"p1\">[</bpt>Working with Project Properties<ept id=\"p1\">](../../ide/working-with-project-properties.md)</ept>.","pos":[3301,3398],"source":" For details, see [Working with Project Properties](../../ide/working-with-project-properties.md)."},{"pos":[3408,3436],"content":"Select the <bpt id=\"p1\">**</bpt>C/C++<ept id=\"p1\">**</ept> folder.","source":"Select the **C/C++** folder."},{"pos":[3446,3488],"content":"Select the <bpt id=\"p1\">**</bpt>Command Line<ept id=\"p1\">**</ept> property page.","source":"Select the **Command Line** property page."},{"pos":[3498,3595],"content":"Modify the <bpt id=\"p1\">**</bpt>Additional Options<ept id=\"p1\">**</ept> property to include <ph id=\"ph1\">`/Zc:strictStrings`</ph> and then choose <bpt id=\"p2\">**</bpt>OK<ept id=\"p2\">**</ept>.","source":"Modify the **Additional Options** property to include `/Zc:strictStrings` and then choose **OK**."},{"content":"See Also","pos":[3604,3612]},{"content":"/Zc (Conformance)","pos":[3617,3634]}],"content":"---\ntitle: \"-Zc:strictStrings (Disable string literal type conversion) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"/Zc:strictStrings\"\n  - \"strictStrings\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"/Zc:strictStrings\"\n  - \"-Zc compiler options (C++)\"\n  - \"strictStrings\"\n  - \"/Zc compiler options (C++)\"\n  - \"Zc compiler options (C++)\"\nms.assetid: b7eb3f3b-82c1-48a2-8e63-66bad7397b46\ncaps.latest.revision: 8\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# /Zc:strictStrings (Disable string literal type conversion)\nWhen specified, the compiler requires strict `const`-qualification conformance for pointers initialized by using string literals.  \n  \n## Syntax  \n  \n```  \n/Zc:strictStrings[-]  \n```  \n  \n## Remarks  \n If **/Zc:strictStrings** is specified, the compiler enforces the standard C++ `const` qualifications for string literals, as type 'array of `const``char`' or 'array of `const``wchar_t`', depending on the declaration. String literals are immutable, and an attempt to modify the contents of one results in an access violation error at run time. You must declare a string pointer as `const` to initialize it by using a string literal, or use an explicit `const_cast` to initialize a non-`const` pointer. By default, or if **/Zc:strictStrings-** is specified, the compiler does not enforce the standard C++ `const` qualifications for string pointers initialized by using string literals.  \n  \n Use the **/Zc:strictStrings** option to prevent compilation of incorrect code. This example shows how a simple declaration error leads to a crash at run time:  \n  \n```cpp  \n// strictStrings_off.cpp  \n// compile by using: cl /W4 strictStrings_off.cpp  \nint main() {  \n   wchar_t* str = L\"hello\";  \n   str[2] = L'a'; // run-time error: access violation  \n}  \n```  \n  \n When **/Zc:strictStrings** is enabled, the same code reports an error in the declaration of `str`.  \n  \n```cpp  \n// strictStrings_on.cpp  \n// compile by using: cl /Zc:strictStrings /W4 strictStrings_on.cpp  \nint main() {  \n   wchar_t* str = L\"hello\"; // error: Conversion from string literal   \n   // loses const qualifier  \n   str[2] = L'a';   \n}  \n```  \n  \n If you use `auto` to declare a string pointer, the compiler creates the correct `const` pointer type declaration for you. An attempt to modify the contents of a `const` pointer is reported by the compiler as an error.  \n  \n> [!NOTE]\n>  The Standard C++ Library in [!INCLUDE[cpp_dev12_long](../../build/reference/includes/cpp_dev12_long_md.md)] does not support the **/Zc:strictStrings** compiler option in debug builds. If you see several [C2665](../../error-messages/compiler-errors-2/compiler-error-c2665.md) errors in your build output, this may be the cause.  \n  \n For more information about conformance issues in Visual C++, see [Nonstandard Behavior](../../cpp/nonstandard-behavior.md).  \n  \n### To set this compiler option in the Visual Studio development environment  \n  \n1.  Open the project's **Property Pages** dialog box. For details, see [Working with Project Properties](../../ide/working-with-project-properties.md).  \n  \n2.  Select the **C/C++** folder.  \n  \n3.  Select the **Command Line** property page.  \n  \n4.  Modify the **Additional Options** property to include `/Zc:strictStrings` and then choose **OK**.  \n  \n## See Also  \n [/Zc (Conformance)](../../build/reference/zc-conformance.md)"}