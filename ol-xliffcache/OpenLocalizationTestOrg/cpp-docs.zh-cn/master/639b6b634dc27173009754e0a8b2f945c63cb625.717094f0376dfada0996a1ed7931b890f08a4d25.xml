{"nodes":[{"pos":[12,62],"content":"Expressions with Binary Operators | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Expressions with Binary Operators | Microsoft Docs","pos":[0,50]}]},{"content":"Expressions with Binary Operators","pos":[670,703]},{"content":"Binary operators act on two operands in an expression.","pos":[704,758]},{"content":"The binary operators are:","pos":[759,784]},{"content":"Multiplicative operators","pos":[795,819]},{"content":"Multiplication (*)","pos":[895,913]},{"content":"Division (/)","pos":[927,939]},{"content":"Modulus (%)","pos":[953,964]},{"content":"Additive operators","pos":[975,993]},{"content":"Addition (+)","pos":[1047,1059]},{"content":"Subtraction (–)","pos":[1073,1088]},{"content":"Shift operators","pos":[1099,1114]},{"content":"Right shift (&gt;&gt;)","pos":[1194,1210],"source":"Right shift (>>)"},{"content":"Left shift (&lt;&lt;)","pos":[1224,1239],"source":"Left shift (<<)"},{"content":"Relational and equality operators","pos":[1250,1283]},{"content":"Less than (<ph id=\"ph1\">\\&lt;</ph>)","pos":[1346,1360],"source":"Less than (\\<)"},{"content":"Greater than (&gt;)","pos":[1374,1390],"source":"Greater than (>)"},{"content":"Less than or equal to (<ph id=\"ph1\">\\&lt;</ph>=)","pos":[1404,1431],"source":"Less than or equal to (\\<=)"},{"content":"Greater than or equal to (&gt;=)","pos":[1445,1474],"source":"Greater than or equal to (>=)"},{"content":"Equal to (==)","pos":[1488,1501]},{"content":"Not equal to (!=)","pos":[1515,1532]},{"content":"Bitwise operators","pos":[1542,1559]},{"content":"Bitwise AND (&amp;)","pos":[1574,1589],"source":"Bitwise AND (&)"},{"content":"Bitwise exclusive OR (^)","pos":[1641,1665]},{"content":"Bitwise inclusive OR (&amp;#124;)","pos":[1726,1755],"source":"Bitwise inclusive OR (&#124;)"},{"content":"Logical operators","pos":[1812,1829]},{"content":"Logical AND (&amp;&amp;)","pos":[1844,1860],"source":"Logical AND (&&)"},{"content":"Logical OR (&amp;#124;&amp;#124;)","pos":[1916,1941],"source":"Logical OR (&#124;&#124;)"},{"content":"Assignment operators","pos":[1994,2014]},{"content":"Assignment (=)","pos":[2061,2075]},{"content":"Addition assignment (+=)","pos":[2089,2113]},{"content":"Subtraction assignment (–=)","pos":[2127,2154]},{"content":"Multiplication assignment (*=)","pos":[2168,2198]},{"content":"Division assignment (/=)","pos":[2212,2236]},{"content":"Modulus assignment (%=)","pos":[2250,2273]},{"content":"Left shift assignment (&lt;<ph id=\"ph1\">\\&lt;</ph>=)","pos":[2287,2315],"source":"Left shift assignment (<\\<=)"},{"content":"Right shift assignment (&gt;&gt;=)","pos":[2329,2357],"source":"Right shift assignment (>>=)"},{"content":"Bitwise AND assignment (&amp;=)","pos":[2371,2398],"source":"Bitwise AND assignment (&=)"},{"content":"Bitwise exclusive OR assignment (^=)","pos":[2412,2448]},{"content":"Bitwise inclusive OR assignment (&amp;#124;=)","pos":[2462,2503],"source":"Bitwise inclusive OR assignment (&#124;=)"},{"pos":[2513,2559],"content":"<bpt id=\"p1\">[</bpt>Comma Operator<ept id=\"p1\">](../cpp/comma-operator.md)</ept> (,)","source":"[Comma Operator](../cpp/comma-operator.md) (,)"},{"content":"See Also","pos":[2568,2576]},{"content":"Types of Expressions","pos":[2581,2601]}],"content":"---\ntitle: \"Expressions with Binary Operators | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"language-reference\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"operators [C++], binary\"\n  - \"binary operators\"\n  - \"expressions [C++], binary operators\"\nms.assetid: 6dea3df4-a4bd-42c3-9807-4a27c120ac9a\ncaps.latest.revision: 7\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Expressions with Binary Operators\nBinary operators act on two operands in an expression. The binary operators are:  \n  \n-   [Multiplicative operators](../cpp/multiplicative-operators-and-the-modulus-operator.md)  \n  \n    -   Multiplication (*)  \n  \n    -   Division (/)  \n  \n    -   Modulus (%)  \n  \n-   [Additive operators](../cpp/additive-operators-plus-and.md)  \n  \n    -   Addition (+)  \n  \n    -   Subtraction (–)  \n  \n-   [Shift operators](../cpp/left-shift-and-right-shift-operators-input-and-output.md)  \n  \n    -   Right shift (>>)  \n  \n    -   Left shift (<<)  \n  \n-   [Relational and equality operators](../cpp/relational-operators-equal-and-equal.md)  \n  \n    -   Less than (\\<)  \n  \n    -   Greater than (>)  \n  \n    -   Less than or equal to (\\<=)  \n  \n    -   Greater than or equal to (>=)  \n  \n    -   Equal to (==)  \n  \n    -   Not equal to (!=)  \n  \n-   Bitwise operators  \n  \n    -   [Bitwise AND (&)](../cpp/bitwise-and-operator-amp.md)  \n  \n    -   [Bitwise exclusive OR (^)](../cpp/bitwise-exclusive-or-operator-hat.md)  \n  \n    -   [Bitwise inclusive OR (&#124;)](../cpp/bitwise-inclusive-or-operator-pipe.md)  \n  \n-   Logical operators  \n  \n    -   [Logical AND (&&)](../cpp/logical-and-operator-amp-amp.md)  \n  \n    -   [Logical OR (&#124;&#124;)](../cpp/logical-or-operator-pipe-pipe.md)  \n  \n-   [Assignment operators](../cpp/assignment-operators.md)  \n  \n    -   Assignment (=)  \n  \n    -   Addition assignment (+=)  \n  \n    -   Subtraction assignment (–=)  \n  \n    -   Multiplication assignment (*=)  \n  \n    -   Division assignment (/=)  \n  \n    -   Modulus assignment (%=)  \n  \n    -   Left shift assignment (<\\<=)  \n  \n    -   Right shift assignment (>>=)  \n  \n    -   Bitwise AND assignment (&=)  \n  \n    -   Bitwise exclusive OR assignment (^=)  \n  \n    -   Bitwise inclusive OR assignment (&#124;=)  \n  \n-   [Comma Operator](../cpp/comma-operator.md) (,)  \n  \n## See Also  \n [Types of Expressions](../cpp/types-of-expressions.md)"}