{"nodes":[{"pos":[12,38],"content":"idl_quote | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"idl_quote | Microsoft Docs","pos":[0,26]}]},{"content":"idl_quote","pos":[616,625]},{"content":"Allows you to use IDL constructs that are not supported in the current version of Visual C++ and have them pass through to the generated .idl file.","pos":[626,773]},{"content":"Syntax","pos":[782,788]},{"content":"Parameters","pos":[854,864]},{"content":"text","pos":[869,873]},{"content":"The attribute name that you intend the Visual C++ compiler to pass through to the generated .idl file without returning a compiler error.","pos":[878,1015]},{"content":"Remarks","pos":[1024,1031]},{"content":"If the <bpt id=\"p1\">**</bpt>idl_quote<ept id=\"p1\">**</ept> C++ attribute is used as a stand-alone attribute (with a semicolon after the closing bracket), then <bpt id=\"p2\">*</bpt>text<ept id=\"p2\">*</ept> is placed in the merged .idl file as is.","pos":[1035,1203],"source":"If the **idl_quote** C++ attribute is used as a stand-alone attribute (with a semicolon after the closing bracket), then *text* is placed in the merged .idl file as is."},{"content":"If <bpt id=\"p1\">**</bpt>idl_quote<ept id=\"p1\">**</ept> is used on a symbol, <bpt id=\"p2\">*</bpt>text<ept id=\"p2\">*</ept> is placed within the attribute block for that symbol.","pos":[1204,1302],"source":" If **idl_quote** is used on a symbol, *text* is placed within the attribute block for that symbol."},{"content":"Example","pos":[1311,1318]},{"pos":[1322,1483],"content":"The following code shows how you could specify an unsupported attribute (using <bpt id=\"p1\">**</bpt>in<ept id=\"p1\">**</ept>, which is supported) and how to define and use an undefined .idl construct:","source":"The following code shows how you could specify an unsupported attribute (using **in**, which is supported) and how to define and use an undefined .idl construct:"},{"content":"This code causes MYFLOT and MYDUB and the <bpt id=\"p1\">*</bpt>text<ept id=\"p1\">*</ept> entry to be placed in the generated .idl file.","pos":[2138,2233],"source":"This code causes MYFLOT and MYDUB and the *text* entry to be placed in the generated .idl file."},{"content":"The <bpt id=\"p1\">*</bpt>name<ept id=\"p1\">*</ept> parameter forces <bpt id=\"p2\">*</bpt>text<ept id=\"p2\">*</ept> to be placed before anything that references <bpt id=\"p3\">*</bpt>name<ept id=\"p3\">*</ept> in the generated .idl file.","pos":[2234,2348],"source":" The *name* parameter forces *text* to be placed before anything that references *name* in the generated .idl file."},{"content":"The <bpt id=\"p1\">*</bpt>dependencies<ept id=\"p1\">*</ept> parameter forces the dependency list definitions to be placed before <bpt id=\"p2\">*</bpt>text<ept id=\"p2\">*</ept> in the generated .idl file.","pos":[2349,2471],"source":" The *dependencies* parameter forces the dependency list definitions to be placed before *text* in the generated .idl file."},{"content":"Requirements","pos":[2480,2492]},{"content":"Attribute Context","pos":[2502,2519]},{"content":"Applies to","pos":[2542,2552]},{"content":"Anywhere","pos":[2555,2563]},{"content":"Repeatable","pos":[2570,2580]},{"content":"No","pos":[2583,2585]},{"content":"Required attributes","pos":[2592,2611]},{"content":"None","pos":[2614,2618]},{"content":"Invalid attributes","pos":[2625,2643]},{"content":"None","pos":[2646,2650]},{"pos":[2658,2739],"content":"For more information, see <bpt id=\"p1\">[</bpt>Attribute Contexts<ept id=\"p1\">](../windows/attribute-contexts.md)</ept>.","source":"For more information, see [Attribute Contexts](../windows/attribute-contexts.md)."},{"content":"See Also","pos":[2748,2756]},{"content":"IDL Attributes","pos":[2761,2775]},{"content":"Stand-Alone Attributes","pos":[2812,2834]},{"content":"Attributes Samples","pos":[2879,2897]}],"content":"---\ntitle: \"idl_quote | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"language-reference\"\nf1_keywords: \n  - \"vc-attr.idl_quote\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"idl_quote attribute\"\nms.assetid: a370e1b7-948b-4e67-9a25-58facf24e4c9\ncaps.latest.revision: 10\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# idl_quote\nAllows you to use IDL constructs that are not supported in the current version of Visual C++ and have them pass through to the generated .idl file.  \n  \n## Syntax  \n  \n```  \n  \n      [ idl_quote(  \n   text  \n) ]  \n```  \n  \n#### Parameters  \n *text*  \n The attribute name that you intend the Visual C++ compiler to pass through to the generated .idl file without returning a compiler error.  \n  \n## Remarks  \n If the **idl_quote** C++ attribute is used as a stand-alone attribute (with a semicolon after the closing bracket), then *text* is placed in the merged .idl file as is. If **idl_quote** is used on a symbol, *text* is placed within the attribute block for that symbol.  \n  \n## Example  \n The following code shows how you could specify an unsupported attribute (using **in**, which is supported) and how to define and use an undefined .idl construct:  \n  \n```  \n// cpp_attr_ref_idl_quote.cpp  \n// compile with: /LD  \n#include <unknwn.h>  \n[module(name=\"MyLibrary\")];  \n  \n[export]  \nstruct MYFLOT {  \n   int i;  \n};  \n  \n[export]  \nstruct MYDUB {  \n   int i;  \n};  \n  \n[idl_quote(\"typedef union _S1_TYPE switch (long l1) U1_TYPE { case 1024: \\  \nstruct MYFLOT f1; case 2048: struct MYDUB d2; } S1_TYPE;\") ];  \n  \ntypedef struct _S1_TYPE {   \n   long l1;   \n  \nunion {   \n   MYFLOT f1; MYDUB d2; } U1_TYPE;   \n} S1_TYPE;  \n  \n[uuid(\"2F5F63F1-16DA-11d2-9E7B-00C04FB926DA\"), object]  \n__interface IStatic{  \n   HRESULT Func1([idl_quote(\"in\")] int i);  \n   HRESULT func( S1_TYPE* myStruct );  \n};  \n```  \n  \n This code causes MYFLOT and MYDUB and the *text* entry to be placed in the generated .idl file. The *name* parameter forces *text* to be placed before anything that references *name* in the generated .idl file. The *dependencies* parameter forces the dependency list definitions to be placed before *text* in the generated .idl file.  \n  \n## Requirements  \n  \n### Attribute Context  \n  \n|||  \n|-|-|  \n|**Applies to**|Anywhere|  \n|**Repeatable**|No|  \n|**Required attributes**|None|  \n|**Invalid attributes**|None|  \n  \n For more information, see [Attribute Contexts](../windows/attribute-contexts.md).  \n  \n## See Also  \n [IDL Attributes](../windows/idl-attributes.md)   \n [Stand-Alone Attributes](../windows/stand-alone-attributes.md)   \n [Attributes Samples](http://msdn.microsoft.com/en-us/558ebdb2-082f-44dc-b442-d8d33bf7bdb8)"}