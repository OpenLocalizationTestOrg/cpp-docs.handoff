{"nodes":[{"pos":[12,52],"content":"CMFCDynamicLayout Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"CMFCDynamicLayout Class | Microsoft Docs","pos":[0,40]}]},{"content":"CMFCDynamicLayout Class","pos":[535,558]},{"content":"Specifies how controls in a window are moved and resized as the user resizes the window.","pos":[559,647]},{"content":"Syntax","pos":[656,662]},{"content":"Members","pos":[729,736]},{"content":"Public Constructors","pos":[746,765]},{"content":"Name","pos":[772,776]},{"content":"Description","pos":[777,788]},{"pos":[865,905],"content":"Constructs a <ph id=\"ph1\">`CMFCDynamicLayout`</ph> object.","source":"Constructs a `CMFCDynamicLayout` object."},{"content":"Destructor.","pos":[950,961]},{"content":"Public Methods","pos":[972,986]},{"content":"Name","pos":[993,997]},{"content":"Description","pos":[998,1009]},{"content":"CMFCDynamicLayout::AddItem","pos":[1048,1074]},{"content":"Adds a child window, typically a control, to the list of windows that are controlled by the dynamic layout manager.","pos":[1105,1220]},{"content":"CMFCDynamicLayout::Adjust","pos":[1226,1251]},{"content":"Adds a child window, typically a control, to the list of windows that are controlled by the dynamic layout manager.","pos":[1281,1396]},{"content":"CMFCDynamicLayout::Create","pos":[1402,1427]},{"content":"Stores and validates the host window.","pos":[1457,1494]},{"content":"CMFCDynamicLayout::GetHostWnd","pos":[1500,1529]},{"content":"Returns a pointer to a host window.","pos":[1563,1598]},{"content":"CMFCDynamicLayout::GetMinSize","pos":[1604,1633]},{"content":"Returns the window size below which layout is not adjusted.","pos":[1667,1726]},{"content":"CMFCDynamicLayout::GetWindowRect","pos":[1732,1764]},{"content":"Retrieves the rectangle for the window's current client area.","pos":[1801,1862]},{"content":"CMFCDynamicLayout::HasItem","pos":[1868,1894]},{"content":"Checks if a child control was added to dynamic layout.","pos":[1925,1979]},{"content":"CMFCDynamicLayout::IsEmpty","pos":[1985,2011]},{"content":"Checks if a dynamic layout has no child windows added.","pos":[2042,2096]},{"content":"CMFCDynamicLayout::LoadResource","pos":[2102,2133]},{"content":"Reads the dynamic layout from AFX_DIALOG_LAYOUT resource and then applies the layout to the host window.","pos":[2169,2273]},{"pos":[2278,2356],"content":"static <bpt id=\"p1\">[</bpt>CMFCDynamicLayout::MoveHorizontal<ept id=\"p1\">](#cmfcdynamiclayout__movehorizontal)</ept>","source":"static [CMFCDynamicLayout::MoveHorizontal](#cmfcdynamiclayout__movehorizontal)"},{"pos":[2357,2530],"content":"Gets a <bpt id=\"p1\">[</bpt>MoveSettings<ept id=\"p1\">](#cmfcdynamiclayout__movesettings_structure)</ept> value that defines how much a child control is moved horizontally when the user resizes its hosting window.","source":"Gets a [MoveSettings](#cmfcdynamiclayout__movesettings_structure) value that defines how much a child control is moved horizontally when the user resizes its hosting window."},{"pos":[2535,2635],"content":"static <bpt id=\"p1\">[</bpt>CMFCDynamicLayout::MoveHorizontalAndVertical<ept id=\"p1\">](#cmfcdynamiclayout__movehorizontalandvertical)</ept>","source":"static [CMFCDynamicLayout::MoveHorizontalAndVertical](#cmfcdynamiclayout__movehorizontalandvertical)"},{"pos":[2636,2809],"content":"Gets a <bpt id=\"p1\">[</bpt>MoveSettings<ept id=\"p1\">](#cmfcdynamiclayout__movesettings_structure)</ept> value that defines how much a child control is moved horizontally when the user resizes its hosting window.","source":"Gets a [MoveSettings](#cmfcdynamiclayout__movesettings_structure) value that defines how much a child control is moved horizontally when the user resizes its hosting window."},{"pos":[2814,2880],"content":"static <bpt id=\"p1\">[</bpt>CMFCDynamicLayout::MoveNone<ept id=\"p1\">](#cmfcdynamiclayout__movenone)</ept>","source":"static [CMFCDynamicLayout::MoveNone](#cmfcdynamiclayout__movenone)"},{"pos":[2881,3024],"content":"Gets a <bpt id=\"p1\">[</bpt>MoveSettings<ept id=\"p1\">](#cmfcdynamiclayout__movesettings_structure)</ept> value that represents no motion, vertical or horizontal, for a child control.","source":"Gets a [MoveSettings](#cmfcdynamiclayout__movesettings_structure) value that represents no motion, vertical or horizontal, for a child control."},{"pos":[3029,3103],"content":"static <bpt id=\"p1\">[</bpt>CMFCDynamicLayout::MoveVertical<ept id=\"p1\">](#cmfcdynamiclayout__movevertical)</ept>","source":"static [CMFCDynamicLayout::MoveVertical](#cmfcdynamiclayout__movevertical)"},{"pos":[3104,3275],"content":"Gets a <bpt id=\"p1\">[</bpt>MoveSettings<ept id=\"p1\">](#cmfcdynamiclayout__movesettings_structure)</ept> value that defines how much a child control is moved vertically when the user resizes its hosting window.","source":"Gets a [MoveSettings](#cmfcdynamiclayout__movesettings_structure) value that defines how much a child control is moved vertically when the user resizes its hosting window."},{"content":"CMFCDynamicLayout::SetMinSize","pos":[3281,3310]},{"content":"Sets the window size below which layout is not adjusted.","pos":[3344,3400]},{"pos":[3405,3483],"content":"static <bpt id=\"p1\">[</bpt>CMFCDynamicLayout::SizeHorizontal<ept id=\"p1\">](#cmfcdynamiclayout__sizehorizontal)</ept>","source":"static [CMFCDynamicLayout::SizeHorizontal](#cmfcdynamiclayout__sizehorizontal)"},{"pos":[3484,3659],"content":"Gets a <bpt id=\"p1\">[</bpt>SizeSettings<ept id=\"p1\">](#cmfcdynamiclayout__sizesettings_structure)</ept> value that defines how much a child control is resized horizontally when the user resizes its hosting window.","source":"Gets a [SizeSettings](#cmfcdynamiclayout__sizesettings_structure) value that defines how much a child control is resized horizontally when the user resizes its hosting window."},{"pos":[3664,3764],"content":"static <bpt id=\"p1\">[</bpt>CMFCDynamicLayout::SizeHorizontalAndVertical<ept id=\"p1\">](#cmfcdynamiclayout__sizehorizontalandvertical)</ept>","source":"static [CMFCDynamicLayout::SizeHorizontalAndVertical](#cmfcdynamiclayout__sizehorizontalandvertical)"},{"pos":[3765,3940],"content":"Gets a <bpt id=\"p1\">[</bpt>SizeSettings<ept id=\"p1\">](#cmfcdynamiclayout__sizesettings_structure)</ept> value that defines how much a child control is resized horizontally when the user resizes its hosting window.","source":"Gets a [SizeSettings](#cmfcdynamiclayout__sizesettings_structure) value that defines how much a child control is resized horizontally when the user resizes its hosting window."},{"pos":[3945,4011],"content":"static <bpt id=\"p1\">[</bpt>CMFCDynamicLayout::SizeNone<ept id=\"p1\">](#cmfcdynamiclayout__sizenone)</ept>","source":"static [CMFCDynamicLayout::SizeNone](#cmfcdynamiclayout__sizenone)"},{"pos":[4012,4138],"content":"Gets a <bpt id=\"p1\">[</bpt>SizeSettings<ept id=\"p1\">](#cmfcdynamiclayout__sizesettings_structure)</ept> value that represents no change in size for a child control.","source":"Gets a [SizeSettings](#cmfcdynamiclayout__sizesettings_structure) value that represents no change in size for a child control."},{"pos":[4143,4217],"content":"static <bpt id=\"p1\">[</bpt>CMFCDynamicLayout::SizeVertical<ept id=\"p1\">](#cmfcdynamiclayout__sizevertical)</ept>","source":"static [CMFCDynamicLayout::SizeVertical](#cmfcdynamiclayout__sizevertical)"},{"pos":[4218,4391],"content":"Gets a <bpt id=\"p1\">[</bpt>SizeSettings<ept id=\"p1\">](#cmfcdynamiclayout__sizesettings_structure)</ept> value that defines how much a child control is resized vertically when the user resizes its hosting window.","source":"Gets a [SizeSettings](#cmfcdynamiclayout__sizesettings_structure) value that defines how much a child control is resized vertically when the user resizes its hosting window."},{"content":"Nested Types","pos":[4401,4413]},{"content":"Name","pos":[4420,4424]},{"content":"Description","pos":[4425,4436]},{"content":"CMFCDynamicLayout::MoveSettings Structure","pos":[4475,4516]},{"content":"Encapsulates move data for controls in a dynamic layout.","pos":[4562,4618]},{"content":"CMFCDynamicLayout::SizeSettings Structure","pos":[4624,4665]},{"content":"Encapsulates size change data for controls in a dynamic layout.","pos":[4711,4774]},{"content":"Remarks","pos":[4784,4791]},{"content":"Inheritance Hierarchy","pos":[4800,4821]},{"content":"CObject","pos":[4826,4833]},{"content":"CMFCDynamicLayout","pos":[4880,4897]},{"content":"Requirements","pos":[4955,4967]},{"pos":[4971,4994],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> afxlayout.h","source":"**Header:** afxlayout.h"},{"pos":[5047,5073],"content":"CMFCDynamicLayout::AddItem"},{"content":"Adds a child window, typically a control, to the list of windows that are controlled by the dynamic layout manager.","pos":[5077,5192]},{"content":"Parameters","pos":[5392,5402]},{"content":"The handle to the window to add.","pos":[5416,5448]},{"content":"The ID of the child control to add.","pos":[5464,5499]},{"content":"A structure that describes how the control should be moved as the window size changes.","pos":[5524,5610]},{"content":"A structure that describes how the control should be resized as the window size changes.","pos":[5635,5723]},{"content":"Return Value","pos":[5733,5745]},{"content":"TRUE if the item was added successfully; otherwise FALSE.","pos":[5749,5806]},{"content":"Remarks","pos":[5816,5823]},{"content":"The position and size of a child control is changed dynamically when a hosting window is being resized.","pos":[5827,5930]},{"pos":[5982,6007],"content":"CMFCDynamicLayout::Adjust"},{"content":"Adds a child window, typically a control, to the list of windows that are controlled by the dynamic layout manager.","pos":[6011,6126]},{"content":"Remarks","pos":[6166,6173]},{"content":"The position and size of a child control is changed dynamically when a hosting window is being resized.","pos":[6177,6280]},{"pos":[6332,6357],"content":"CMFCDynamicLayout::Create"},{"content":"Stores and validates the host window.","pos":[6361,6398]},{"content":"Parameters","pos":[6452,6462]},{"content":"pHostWnd","pos":[6466,6474]},{"content":"A pointer to the host window.","pos":[6478,6507]},{"content":"Return Value","pos":[6517,6529]},{"content":"TRUE if creation succeeded; otherwise FALSE.","pos":[6533,6577]},{"content":"Remarks","pos":[6587,6594]},{"pos":[6650,6679],"content":"CMFCDynamicLayout::GetHostWnd"},{"content":"Returns a pointer to a host window.","pos":[6683,6718]},{"content":"Return Value","pos":[6763,6775]},{"content":"A pointer to the host window.","pos":[6779,6808]},{"content":"Remarks","pos":[6818,6825]},{"content":"By default all child control positions recalculated relative to this window.","pos":[6829,6905]},{"pos":[6961,6990],"content":"CMFCDynamicLayout::GetMinSize"},{"content":"Returns the window size below which layout is not adjusted.","pos":[6994,7053]},{"content":"Return Value","pos":[7098,7110]},{"content":"The window size below which layout is not adjusted.","pos":[7114,7165]},{"content":"Remarks","pos":[7175,7182]},{"content":"The position and size of a child control is changed dynamically when a hosting window is being resized, but there is a minimum size below which the layout is not adjusted.","pos":[7186,7357]},{"content":"The user can resize the window to a smaller size, but parts of the window are then hidden from view.","pos":[7358,7458]},{"pos":[7517,7549],"content":"CMFCDynamicLayout::GetWindowRect"},{"content":"Retrieves the rectangle for the window's current client area.","pos":[7553,7614]},{"content":"Parameters","pos":[7679,7689]},{"content":"After the function returns, this parameter contains the bounding rectangle of the layout area.","pos":[7703,7797]},{"content":"This is an out parameter; the input value is overwritten.","pos":[7798,7855]},{"content":"Remarks","pos":[7865,7872]},{"pos":[7925,7951],"content":"CMFCDynamicLayout::HasItem"},{"content":"Checks if a child control was added to dynamic layout.","pos":[7955,8009]},{"content":"Parameters","pos":[8059,8069]},{"content":"The window handle for the control.","pos":[8083,8117]},{"content":"Return Value","pos":[8127,8139]},{"content":"TRUE if layout already has this item; otherwise FALSE.","pos":[8143,8197]},{"content":"Remarks","pos":[8207,8214]},{"pos":[8267,8293],"content":"CMFCDynamicLayout::IsEmpty"},{"content":"Checks if a dynamic layout has no child windows added.","pos":[8297,8351]},{"content":"Return Value","pos":[8392,8404]},{"content":"TRUE if layout has no items; otherwise FALSE.","pos":[8408,8453]},{"content":"Remarks","pos":[8463,8470]},{"pos":[8528,8559],"content":"CMFCDynamicLayout::LoadResource"},{"content":"Reads the dynamic layout from AFX_DIALOG_LAYOUT resource and then applies the layout to the host window.","pos":[8563,8667]},{"content":"Parameters","pos":[8778,8788]},{"content":"A pointer to the host window.","pos":[8806,8835]},{"content":"A pointer to the buffer that contains the AFX_DIALOG_LAYOUT resource.","pos":[8858,8927]},{"content":"The buffer size in bytes.","pos":[8946,8971]},{"content":"Return Value","pos":[8981,8993]},{"content":"TRUE if resource is loaded and applied to the host window; otherwise FALSE.","pos":[8997,9072]},{"content":"Remarks","pos":[9082,9089]},{"pos":[9149,9182],"content":"CMFCDynamicLayout::MoveHorizontal"},{"pos":[9186,9359],"content":"Gets a <bpt id=\"p1\">[</bpt>MoveSettings<ept id=\"p1\">](#cmfcdynamiclayout__movesettings_structure)</ept> value that defines how much a child control is moved horizontally when the user resizes its hosting window.","source":"Gets a [MoveSettings](#cmfcdynamiclayout__movesettings_structure) value that defines how much a child control is moved horizontally when the user resizes its hosting window."},{"content":"Parameters","pos":[9435,9445]},{"content":"Defines as a percentage how far a child control is moved horizontally when the user resizes the host window.","pos":[9461,9569]},{"content":"Return Value","pos":[9579,9591]},{"pos":[9595,9705],"content":"A <bpt id=\"p1\">[</bpt>MoveSettings<ept id=\"p1\">](#cmfcdynamiclayout__movesettings_structure)</ept> value that encapsulates the requested move ratio.","source":"A [MoveSettings](#cmfcdynamiclayout__movesettings_structure) value that encapsulates the requested move ratio."},{"content":"Remarks","pos":[9715,9722]},{"pos":[9793,9837],"content":"CMFCDynamicLayout::MoveHorizontalAndVertical"},{"pos":[9841,10014],"content":"Gets a <bpt id=\"p1\">[</bpt>MoveSettings<ept id=\"p1\">](#cmfcdynamiclayout__movesettings_structure)</ept> value that defines how much a child control is moved horizontally when the user resizes its hosting window.","source":"Gets a [MoveSettings](#cmfcdynamiclayout__movesettings_structure) value that defines how much a child control is moved horizontally when the user resizes its hosting window."},{"content":"Parameters","pos":[10114,10124]},{"content":"Defines as a percentage how far a child control is moved horizontally when the user resizes the host window.","pos":[10141,10249]},{"content":"Defines as a percentage how far a child control is moved vertically when the user resizes the host window.","pos":[10269,10375]},{"content":"Return Value","pos":[10385,10397]},{"pos":[10401,10511],"content":"A <bpt id=\"p1\">[</bpt>MoveSettings<ept id=\"p1\">](#cmfcdynamiclayout__movesettings_structure)</ept> value that encapsulates the requested move ratio.","source":"A [MoveSettings](#cmfcdynamiclayout__movesettings_structure) value that encapsulates the requested move ratio."},{"content":"Remarks","pos":[10521,10528]},{"pos":[10582,10609],"content":"CMFCDynamicLayout::MoveNone"},{"pos":[10613,10756],"content":"Gets a <bpt id=\"p1\">[</bpt>MoveSettings<ept id=\"p1\">](#cmfcdynamiclayout__movesettings_structure)</ept> value that represents no motion, vertical or horizontal, for a child control.","source":"Gets a [MoveSettings](#cmfcdynamiclayout__movesettings_structure) value that represents no motion, vertical or horizontal, for a child control."},{"content":"Return Value","pos":[10816,10828]},{"pos":[10832,10993],"content":"A <bpt id=\"p1\">[</bpt>MoveSettings<ept id=\"p1\">](#cmfcdynamiclayout__movesettings_structure)</ept> value that fixes the control in place, so that it does not move as the user resizes the host window.","source":"A [MoveSettings](#cmfcdynamiclayout__movesettings_structure) value that fixes the control in place, so that it does not move as the user resizes the host window."},{"content":"Remarks","pos":[11003,11010]},{"pos":[11078,11119],"content":"CMFCDynamicLayout::MoveSettings Structure"},{"content":"Encapsulates move data for controls in a dynamic layout.","pos":[11123,11179]},{"content":"Remarks","pos":[11246,11253]},{"pos":[11257,11307],"content":"This is a nested class inside <ph id=\"ph1\">`CMFCDynamicLayout`</ph>.","source":"This is a nested class inside `CMFCDynamicLayout`."},{"content":"CMFCDynamicLayout::MoveSettings::IsHorizontal","pos":[11314,11359]},{"content":"Check if the move data specifies a nonzero horizontal move.","pos":[11360,11419]},{"content":"Return Value","pos":[11471,11483]},{"pos":[11487,11557],"content":"TRUE if the <ph id=\"ph1\">`MoveSettings`</ph> object specifies a nonzero horizontal move.","source":"TRUE if the `MoveSettings` object specifies a nonzero horizontal move."},{"content":"CMFCDynamicLayout::MoveSettings::IsNone","pos":[11565,11604]},{"content":"Check if the move data specifies no movement.","pos":[11606,11651]},{"content":"Return Value","pos":[11696,11708]},{"pos":[11712,11768],"content":"TRUE if the <ph id=\"ph1\">`MoveSettings`</ph> object specifies no movement.","source":"TRUE if the `MoveSettings` object specifies no movement."},{"content":"CMFCDynamicLayout::MoveSettings::IsVertical","pos":[11775,11818]},{"content":"Check if the move data specifies a nonzero vertical movement.","pos":[11821,11882]},{"content":"Return Value","pos":[11931,11943]},{"pos":[11947,12019],"content":"TRUE if the <ph id=\"ph1\">`MoveSettings`</ph> object specifies a nonzero vertical movement.","source":"TRUE if the `MoveSettings` object specifies a nonzero vertical movement."},{"pos":[12075,12106],"content":"CMFCDynamicLayout::MoveVertical"},{"pos":[12110,12281],"content":"Gets a <bpt id=\"p1\">[</bpt>MoveSettings<ept id=\"p1\">](#cmfcdynamiclayout__movesettings_structure)</ept> value that defines how much a child control is moved vertically when the user resizes its hosting window.","source":"Gets a [MoveSettings](#cmfcdynamiclayout__movesettings_structure) value that defines how much a child control is moved vertically when the user resizes its hosting window."},{"content":"Parameters","pos":[12355,12365]},{"content":"Defines as a percentage how far a child control is moved vertically when the user resizes the host window.","pos":[12381,12487]},{"content":"Return Value","pos":[12497,12509]},{"pos":[12513,12623],"content":"A <bpt id=\"p1\">[</bpt>MoveSettings<ept id=\"p1\">](#cmfcdynamiclayout__movesettings_structure)</ept> value that encapsulates the requested move ratio.","source":"A [MoveSettings](#cmfcdynamiclayout__movesettings_structure) value that encapsulates the requested move ratio."},{"content":"Remarks","pos":[12633,12640]},{"pos":[12696,12725],"content":"CMFCDynamicLayout::SetMinSize"},{"content":"Sets the window size below which layout is not adjusted.","pos":[12729,12785]},{"content":"Parameters","pos":[12846,12856]},{"content":"The desired size below which layout is not adjusted.","pos":[12870,12922]},{"content":"Remarks","pos":[12932,12939]},{"content":"The position and size of a child control is changed dynamically when a hosting window is being resized, but there is a minimum size below which the layout is not adjusted.","pos":[12943,13114]},{"content":"The user can resize the window to a smaller size, but parts of the window are then hidden from view.","pos":[13115,13215]},{"pos":[13275,13308],"content":"CMFCDynamicLayout::SizeHorizontal"},{"pos":[13312,13487],"content":"Gets a <bpt id=\"p1\">[</bpt>SizeSettings<ept id=\"p1\">](#cmfcdynamiclayout__sizesettings_structure)</ept> value that defines how much a child control is resized horizontally when the user resizes its hosting window.","source":"Gets a [SizeSettings](#cmfcdynamiclayout__sizesettings_structure) value that defines how much a child control is resized horizontally when the user resizes its hosting window."},{"content":"Parameters","pos":[13563,13573]},{"content":"Defines as a percentage how far a child control is resized horizontally when the user resizes the host window.","pos":[13589,13699]},{"content":"Return Value","pos":[13709,13721]},{"pos":[13725,13835],"content":"A <bpt id=\"p1\">[</bpt>SizeSettings<ept id=\"p1\">](#cmfcdynamiclayout__sizesettings_structure)</ept> value that encapsulates the requested size ratio.","source":"A [SizeSettings](#cmfcdynamiclayout__sizesettings_structure) value that encapsulates the requested size ratio."},{"content":"Remarks","pos":[13845,13852]},{"pos":[13923,13967],"content":"CMFCDynamicLayout::SizeHorizontalAndVertical"},{"pos":[13971,14146],"content":"Gets a <bpt id=\"p1\">[</bpt>SizeSettings<ept id=\"p1\">](#cmfcdynamiclayout__sizesettings_structure)</ept> value that defines how much a child control is resized horizontally when the user resizes its hosting window.","source":"Gets a [SizeSettings](#cmfcdynamiclayout__sizesettings_structure) value that defines how much a child control is resized horizontally when the user resizes its hosting window."},{"content":"Parameters","pos":[14246,14256]},{"content":"Defines as a percentage how far a child control is resized horizontally when the user resizes the host window.","pos":[14273,14383]},{"content":"Defines as a percentage how far a child control is resized vertically when the user resizes the host window.","pos":[14403,14511]},{"content":"Return Value","pos":[14521,14533]},{"pos":[14537,14647],"content":"A <bpt id=\"p1\">[</bpt>SizeSettings<ept id=\"p1\">](#cmfcdynamiclayout__sizesettings_structure)</ept> value that encapsulates the requested size ratio.","source":"A [SizeSettings](#cmfcdynamiclayout__sizesettings_structure) value that encapsulates the requested size ratio."},{"content":"Remarks","pos":[14657,14664]},{"pos":[14718,14745],"content":"CMFCDynamicLayout::SizeNone"},{"pos":[14749,14875],"content":"Gets a <bpt id=\"p1\">[</bpt>SizeSettings<ept id=\"p1\">](#cmfcdynamiclayout__sizesettings_structure)</ept> value that represents no change in size for a child control.","source":"Gets a [SizeSettings](#cmfcdynamiclayout__sizesettings_structure) value that represents no change in size for a child control."},{"content":"Return Value","pos":[14935,14947]},{"pos":[14951,15128],"content":"A <bpt id=\"p1\">[</bpt>SizeSettings<ept id=\"p1\">](#cmfcdynamiclayout__sizesettings_structure)</ept> value that fixes the control at a certain size, so that it does not change size as the user resizes the host window.","source":"A [SizeSettings](#cmfcdynamiclayout__sizesettings_structure) value that fixes the control at a certain size, so that it does not change size as the user resizes the host window."},{"content":"Remarks","pos":[15138,15145]},{"pos":[15213,15254],"content":"CMFCDynamicLayout::SizeSettings Structure"},{"content":"Encapsulates size change data for controls in a dynamic layout.","pos":[15258,15321]},{"content":"Remarks","pos":[15388,15395]},{"pos":[15399,15449],"content":"This is a nested class inside <ph id=\"ph1\">`CMFCDynamicLayout`</ph>.","source":"This is a nested class inside `CMFCDynamicLayout`."},{"content":"CMFCDynamicLayout::SizeSettings::IsHorizontal","pos":[15456,15501]},{"content":"Checks if the resize data specifies a nonzero horizontal resizing.","pos":[15502,15568]},{"content":"Return Value","pos":[15619,15631]},{"pos":[15635,15709],"content":"TRUE if the <ph id=\"ph1\">`SizeSettings`</ph> object specifies a nonzero horizontal resizing.","source":"TRUE if the `SizeSettings` object specifies a nonzero horizontal resizing."},{"content":"CMFCDynamicLayout::SizeSettings::IsNone","pos":[15715,15754]},{"content":"Checks if the resize data specifies no resizing.","pos":[15755,15803]},{"content":"Return Value","pos":[15848,15860]},{"pos":[15864,15920],"content":"TRUE if the <ph id=\"ph1\">`SizeSettings`</ph> object specifies no resizing.","source":"TRUE if the `SizeSettings` object specifies no resizing."},{"content":"CMFCDynamicLayout::SizeSettings::IsVertical","pos":[15927,15970]},{"content":"Checks if the resize data specifies a nonzero vertical resizing.","pos":[15971,16035]},{"content":"Return Value","pos":[16084,16096]},{"pos":[16100,16172],"content":"TRUE if the <ph id=\"ph1\">`SizeSettings`</ph> object specifies a nonzero vertical resizing.","source":"TRUE if the `SizeSettings` object specifies a nonzero vertical resizing."},{"pos":[16228,16259],"content":"CMFCDynamicLayout::SizeVertical"},{"pos":[16263,16436],"content":"Gets a <bpt id=\"p1\">[</bpt>SizeSettings<ept id=\"p1\">](#cmfcdynamiclayout__sizesettings_structure)</ept> value that defines how much a child control is resized vertically when the user resizes its hosting window.","source":"Gets a [SizeSettings](#cmfcdynamiclayout__sizesettings_structure) value that defines how much a child control is resized vertically when the user resizes its hosting window."},{"content":"Parameters","pos":[16510,16520]},{"content":"Defines as a percentage how far a child control is resized vertically when the user resizes the host window.","pos":[16536,16644]},{"content":"Return Value","pos":[16654,16666]},{"pos":[16670,16780],"content":"A <bpt id=\"p1\">[</bpt>SizeSettings<ept id=\"p1\">](#cmfcdynamiclayout__sizesettings_structure)</ept> value that encapsulates the requested size ratio.","source":"A [SizeSettings](#cmfcdynamiclayout__sizesettings_structure) value that encapsulates the requested size ratio."},{"content":"Remarks","pos":[16790,16797]},{"content":"See Also","pos":[16806,16814]},{"content":"Hierarchy Chart","pos":[16819,16834]},{"content":"Classes","pos":[16871,16878]}],"content":"---\ntitle: \"CMFCDynamicLayout Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\ndev_langs: \n  - \"C++\"\nms.assetid: c2df2976-f049-47fc-9cf0-abe3e01948bc\ncaps.latest.revision: 16\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# CMFCDynamicLayout Class\nSpecifies how controls in a window are moved and resized as the user resizes the window.  \n  \n## Syntax  \n  \n```  \nclass CMFCDynamicLayout : public CObject  \n```  \n  \n## Members  \n  \n### Public Constructors  \n  \n|Name|Description|  \n|----------|-----------------|  \n|`CMFCDynamicLayout::CMFCDynamicLayout`|Constructs a `CMFCDynamicLayout` object.|  \n|`CMFCDynamicLayout::~CMFCDynamicLayout`|Destructor.|  \n  \n### Public Methods  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CMFCDynamicLayout::AddItem](#cmfcdynamiclayout__additem)|Adds a child window, typically a control, to the list of windows that are controlled by the dynamic layout manager.|  \n|[CMFCDynamicLayout::Adjust](#cmfcdynamiclayout__adjust)|Adds a child window, typically a control, to the list of windows that are controlled by the dynamic layout manager.|  \n|[CMFCDynamicLayout::Create](#cmfcdynamiclayout__create)|Stores and validates the host window.|  \n|[CMFCDynamicLayout::GetHostWnd](#cmfcdynamiclayout__gethostwnd)|Returns a pointer to a host window.|  \n|[CMFCDynamicLayout::GetMinSize](#cmfcdynamiclayout__getminsize)|Returns the window size below which layout is not adjusted.|  \n|[CMFCDynamicLayout::GetWindowRect](#cmfcdynamiclayout__getwindowrect)|Retrieves the rectangle for the window's current client area.|  \n|[CMFCDynamicLayout::HasItem](#cmfcdynamiclayout__hasitem)|Checks if a child control was added to dynamic layout.|  \n|[CMFCDynamicLayout::IsEmpty](#cmfcdynamiclayout__isempty)|Checks if a dynamic layout has no child windows added.|  \n|[CMFCDynamicLayout::LoadResource](#cmfcdynamiclayout__loadresource)|Reads the dynamic layout from AFX_DIALOG_LAYOUT resource and then applies the layout to the host window.|  \n|static [CMFCDynamicLayout::MoveHorizontal](#cmfcdynamiclayout__movehorizontal)|Gets a [MoveSettings](#cmfcdynamiclayout__movesettings_structure) value that defines how much a child control is moved horizontally when the user resizes its hosting window.|  \n|static [CMFCDynamicLayout::MoveHorizontalAndVertical](#cmfcdynamiclayout__movehorizontalandvertical)|Gets a [MoveSettings](#cmfcdynamiclayout__movesettings_structure) value that defines how much a child control is moved horizontally when the user resizes its hosting window.|  \n|static [CMFCDynamicLayout::MoveNone](#cmfcdynamiclayout__movenone)|Gets a [MoveSettings](#cmfcdynamiclayout__movesettings_structure) value that represents no motion, vertical or horizontal, for a child control.|  \n|static [CMFCDynamicLayout::MoveVertical](#cmfcdynamiclayout__movevertical)|Gets a [MoveSettings](#cmfcdynamiclayout__movesettings_structure) value that defines how much a child control is moved vertically when the user resizes its hosting window.|  \n|[CMFCDynamicLayout::SetMinSize](#cmfcdynamiclayout__setminsize)|Sets the window size below which layout is not adjusted.|  \n|static [CMFCDynamicLayout::SizeHorizontal](#cmfcdynamiclayout__sizehorizontal)|Gets a [SizeSettings](#cmfcdynamiclayout__sizesettings_structure) value that defines how much a child control is resized horizontally when the user resizes its hosting window.|  \n|static [CMFCDynamicLayout::SizeHorizontalAndVertical](#cmfcdynamiclayout__sizehorizontalandvertical)|Gets a [SizeSettings](#cmfcdynamiclayout__sizesettings_structure) value that defines how much a child control is resized horizontally when the user resizes its hosting window.|  \n|static [CMFCDynamicLayout::SizeNone](#cmfcdynamiclayout__sizenone)|Gets a [SizeSettings](#cmfcdynamiclayout__sizesettings_structure) value that represents no change in size for a child control.|  \n|static [CMFCDynamicLayout::SizeVertical](#cmfcdynamiclayout__sizevertical)|Gets a [SizeSettings](#cmfcdynamiclayout__sizesettings_structure) value that defines how much a child control is resized vertically when the user resizes its hosting window.|  \n  \n## Nested Types  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CMFCDynamicLayout::MoveSettings Structure](#cmfcdynamiclayout__movesettings_structure)|Encapsulates move data for controls in a dynamic layout.|  \n|[CMFCDynamicLayout::SizeSettings Structure](#cmfcdynamiclayout__sizesettings_structure)|Encapsulates size change data for controls in a dynamic layout.|  \n  \n## Remarks  \n  \n## Inheritance Hierarchy  \n [CObject](../../mfc/reference/cobject-class.md)  \n  \n [CMFCDynamicLayout](../../mfc/reference/cmfctoolbarbutton-class.md)  \n  \n## Requirements  \n **Header:** afxlayout.h  \n  \n##  <a name=\"cmfcdynamiclayout__additem\"></a>  CMFCDynamicLayout::AddItem  \n Adds a child window, typically a control, to the list of windows that are controlled by the dynamic layout manager.  \n  \n```  \nBOOL AddItem(\n    HWND hwnd,\n    MoveSettings moveSettings SizeSettings sizeSettings);\n\n \nBOOL AddItem(\n    int nID,\n    MoveSettings moveSettings SizeSettings sizeSettings);\n```  \n  \n### Parameters  \n `hwnd`  \n The handle to the window to add.  \n  \n `nID`  \n The ID of the child control to add.  \n  \n `moveSettings`  \n A structure that describes how the control should be moved as the window size changes.  \n  \n `sizeSettings`  \n A structure that describes how the control should be resized as the window size changes.  \n  \n### Return Value  \n TRUE if the item was added successfully; otherwise FALSE.  \n  \n### Remarks  \n The position and size of a child control is changed dynamically when a hosting window is being resized.  \n  \n##  <a name=\"cmfcdynamiclayout__adjust\"></a>  CMFCDynamicLayout::Adjust  \n Adds a child window, typically a control, to the list of windows that are controlled by the dynamic layout manager.  \n  \n```  \nvoid Adjust();\n```  \n  \n### Remarks  \n The position and size of a child control is changed dynamically when a hosting window is being resized.  \n  \n##  <a name=\"cmfcdynamiclayout__create\"></a>  CMFCDynamicLayout::Create  \n Stores and validates the host window.  \n  \n```  \nBOOL Create(CWnd* pHostWnd);\n```  \n  \n### Parameters  \n pHostWnd  \n A pointer to the host window.  \n  \n### Return Value  \n TRUE if creation succeeded; otherwise FALSE.  \n  \n### Remarks  \n  \n##  <a name=\"cmfcdynamiclayout__gethostwnd\"></a>  CMFCDynamicLayout::GetHostWnd  \n Returns a pointer to a host window.  \n  \n```  \nCWnd* GetHostWnd();\n```  \n  \n### Return Value  \n A pointer to the host window.  \n  \n### Remarks  \n By default all child control positions recalculated relative to this window.  \n  \n##  <a name=\"cmfcdynamiclayout__getminsize\"></a>  CMFCDynamicLayout::GetMinSize  \n Returns the window size below which layout is not adjusted.  \n  \n```  \nCSize GetMinSize();\n```  \n  \n### Return Value  \n The window size below which layout is not adjusted.  \n  \n### Remarks  \n The position and size of a child control is changed dynamically when a hosting window is being resized, but there is a minimum size below which the layout is not adjusted. The user can resize the window to a smaller size, but parts of the window are then hidden from view.  \n  \n##  <a name=\"cmfcdynamiclayout__getwindowrect\"></a>  CMFCDynamicLayout::GetWindowRect  \n Retrieves the rectangle for the window's current client area.  \n  \n```  \nvoid GetHostWndRect(\n    CRect& rect,);\n```  \n  \n### Parameters  \n `rect`  \n After the function returns, this parameter contains the bounding rectangle of the layout area. This is an out parameter; the input value is overwritten.  \n  \n### Remarks  \n  \n##  <a name=\"cmfcdynamiclayout__hasitem\"></a>  CMFCDynamicLayout::HasItem  \n Checks if a child control was added to dynamic layout.  \n  \n```  \nBOOL HasItem(HWND hwnd);\n```  \n  \n### Parameters  \n `hwnd`  \n The window handle for the control.  \n  \n### Return Value  \n TRUE if layout already has this item; otherwise FALSE.  \n  \n### Remarks  \n  \n##  <a name=\"cmfcdynamiclayout__isempty\"></a>  CMFCDynamicLayout::IsEmpty  \n Checks if a dynamic layout has no child windows added.  \n  \n```  \nBOOL IsEmpty();\n```  \n  \n### Return Value  \n TRUE if layout has no items; otherwise FALSE.  \n  \n### Remarks  \n  \n##  <a name=\"cmfcdynamiclayout__loadresource\"></a>  CMFCDynamicLayout::LoadResource  \n Reads the dynamic layout from AFX_DIALOG_LAYOUT resource and then applies the layout to the host window.  \n  \n```  \nstatic BOOL LoadResource(CWnd* pHostWnd,\n    LPVOID lpResource,\n    DWORD dwSize);\n\n \n```  \n  \n### Parameters  \n `pHostWnd`  \n A pointer to the host window.  \n  \n `lpResource`  \n A pointer to the buffer that contains the AFX_DIALOG_LAYOUT resource.  \n  \n `dwSize`  \n The buffer size in bytes.  \n  \n### Return Value  \n TRUE if resource is loaded and applied to the host window; otherwise FALSE.  \n  \n### Remarks  \n  \n##  <a name=\"cmfcdynamiclayout__movehorizontal\"></a>  CMFCDynamicLayout::MoveHorizontal  \n Gets a [MoveSettings](#cmfcdynamiclayout__movesettings_structure) value that defines how much a child control is moved horizontally when the user resizes its hosting window.  \n  \n```  \nstatic MoveSettings MoveHorizontal(int nRatio);\n\n \n```  \n  \n### Parameters  \n `nRatio`  \n Defines as a percentage how far a child control is moved horizontally when the user resizes the host window.  \n  \n### Return Value  \n A [MoveSettings](#cmfcdynamiclayout__movesettings_structure) value that encapsulates the requested move ratio.  \n  \n### Remarks  \n  \n##  <a name=\"cmfcdynamiclayout__movehorizontalandvertical\"></a>  CMFCDynamicLayout::MoveHorizontalAndVertical  \n Gets a [MoveSettings](#cmfcdynamiclayout__movesettings_structure) value that defines how much a child control is moved horizontally when the user resizes its hosting window.  \n  \n```  \nstatic MoveSettings MoveHorizontalAndVertical(int nXRatio int nYRatio);\n\n \n```  \n  \n### Parameters  \n `nXRatio`  \n Defines as a percentage how far a child control is moved horizontally when the user resizes the host window.  \n  \n `nYRatio`  \n Defines as a percentage how far a child control is moved vertically when the user resizes the host window.  \n  \n### Return Value  \n A [MoveSettings](#cmfcdynamiclayout__movesettings_structure) value that encapsulates the requested move ratio.  \n  \n### Remarks  \n  \n##  <a name=\"cmfcdynamiclayout__movenone\"></a>  CMFCDynamicLayout::MoveNone  \n Gets a [MoveSettings](#cmfcdynamiclayout__movesettings_structure) value that represents no motion, vertical or horizontal, for a child control.  \n  \n```  \nstatic MoveSettings MoveNone();\n\n \n```  \n  \n### Return Value  \n A [MoveSettings](#cmfcdynamiclayout__movesettings_structure) value that fixes the control in place, so that it does not move as the user resizes the host window.  \n  \n### Remarks  \n  \n##  <a name=\"cmfcdynamiclayout__movesettings_structure\"></a>  CMFCDynamicLayout::MoveSettings Structure  \n Encapsulates move data for controls in a dynamic layout.  \n  \n```  \nstruct CMFCDynamicLayout::MoveSettings;  \n```  \n  \n### Remarks  \n This is a nested class inside `CMFCDynamicLayout`.  \n\n## CMFCDynamicLayout::MoveSettings::IsHorizontal\nCheck if the move data specifies a nonzero horizontal move.  \n  \n\n```  \nBOOL IsHorizontal() const \n```  \n  \n## Return Value  \n TRUE if the `MoveSettings` object specifies a nonzero horizontal move.  \n\n ## CMFCDynamicLayout::MoveSettings::IsNone\n Check if the move data specifies no movement.  \n  \n```  \nBOOL IsNone() const \n```  \n  \n## Return Value  \n TRUE if the `MoveSettings` object specifies no movement.  \n\n## CMFCDynamicLayout::MoveSettings::IsVertical\n  Check if the move data specifies a nonzero vertical movement.  \n  \n```  \nBOOL IsVertical() const \n```  \n  \n## Return Value  \n TRUE if the `MoveSettings` object specifies a nonzero vertical movement.  \n\n##  <a name=\"cmfcdynamiclayout__movevertical\"></a>  CMFCDynamicLayout::MoveVertical  \n Gets a [MoveSettings](#cmfcdynamiclayout__movesettings_structure) value that defines how much a child control is moved vertically when the user resizes its hosting window.  \n  \n```  \nstatic MoveSettings MoveVertical(int nRatio);\n\n \n```  \n  \n### Parameters  \n `nRatio`  \n Defines as a percentage how far a child control is moved vertically when the user resizes the host window.  \n  \n### Return Value  \n A [MoveSettings](#cmfcdynamiclayout__movesettings_structure) value that encapsulates the requested move ratio.  \n  \n### Remarks  \n  \n##  <a name=\"cmfcdynamiclayout__setminsize\"></a>  CMFCDynamicLayout::SetMinSize  \n Sets the window size below which layout is not adjusted.  \n  \n```  \nvoid SetMinSize(const CSize& size);\n```  \n  \n### Parameters  \n `size`  \n The desired size below which layout is not adjusted.  \n  \n### Remarks  \n The position and size of a child control is changed dynamically when a hosting window is being resized, but there is a minimum size below which the layout is not adjusted. The user can resize the window to a smaller size, but parts of the window are then hidden from view.  \n  \n##  <a name=\"cmfcdynamiclayout__sizehorizontal\"></a>  CMFCDynamicLayout::SizeHorizontal  \n Gets a [SizeSettings](#cmfcdynamiclayout__sizesettings_structure) value that defines how much a child control is resized horizontally when the user resizes its hosting window.  \n  \n```  \nstatic SizeSettings SizeHorizontal(int nRatio);\n\n \n```  \n  \n### Parameters  \n `nRatio`  \n Defines as a percentage how far a child control is resized horizontally when the user resizes the host window.  \n  \n### Return Value  \n A [SizeSettings](#cmfcdynamiclayout__sizesettings_structure) value that encapsulates the requested size ratio.  \n  \n### Remarks  \n  \n##  <a name=\"cmfcdynamiclayout__sizehorizontalandvertical\"></a>  CMFCDynamicLayout::SizeHorizontalAndVertical  \n Gets a [SizeSettings](#cmfcdynamiclayout__sizesettings_structure) value that defines how much a child control is resized horizontally when the user resizes its hosting window.  \n  \n```  \nstatic SizeSettings SizeHorizontalAndVertical(int nXRatio int nYRatio);\n\n \n```  \n  \n### Parameters  \n `nXRatio`  \n Defines as a percentage how far a child control is resized horizontally when the user resizes the host window.  \n  \n `nYRatio`  \n Defines as a percentage how far a child control is resized vertically when the user resizes the host window.  \n  \n### Return Value  \n A [SizeSettings](#cmfcdynamiclayout__sizesettings_structure) value that encapsulates the requested size ratio.  \n  \n### Remarks  \n  \n##  <a name=\"cmfcdynamiclayout__sizenone\"></a>  CMFCDynamicLayout::SizeNone  \n Gets a [SizeSettings](#cmfcdynamiclayout__sizesettings_structure) value that represents no change in size for a child control.  \n  \n```  \nstatic SizeSettings SizeNone();\n\n \n```  \n  \n### Return Value  \n A [SizeSettings](#cmfcdynamiclayout__sizesettings_structure) value that fixes the control at a certain size, so that it does not change size as the user resizes the host window.  \n  \n### Remarks  \n  \n##  <a name=\"cmfcdynamiclayout__sizesettings_structure\"></a>  CMFCDynamicLayout::SizeSettings Structure  \n Encapsulates size change data for controls in a dynamic layout.  \n  \n```  \nstruct CMFCDynamicLayout::SizeSettings;  \n```  \n  \n### Remarks  \n This is a nested class inside `CMFCDynamicLayout`.  \n\n## CMFCDynamicLayout::SizeSettings::IsHorizontal\nChecks if the resize data specifies a nonzero horizontal resizing.  \n  \n```  \nBOOL IsHorizontal() const \n```  \n  \n## Return Value  \n TRUE if the `SizeSettings` object specifies a nonzero horizontal resizing. \n\n## CMFCDynamicLayout::SizeSettings::IsNone\nChecks if the resize data specifies no resizing.  \n  \n```  \nBOOL IsNone() const \n```  \n  \n## Return Value  \n TRUE if the `SizeSettings` object specifies no resizing.  \n\n## CMFCDynamicLayout::SizeSettings::IsVertical\nChecks if the resize data specifies a nonzero vertical resizing.  \n  \n```  \nBOOL IsVertical() const \n```  \n  \n## Return Value  \n TRUE if the `SizeSettings` object specifies a nonzero vertical resizing.  \n\n##  <a name=\"cmfcdynamiclayout__sizevertical\"></a>  CMFCDynamicLayout::SizeVertical  \n Gets a [SizeSettings](#cmfcdynamiclayout__sizesettings_structure) value that defines how much a child control is resized vertically when the user resizes its hosting window.  \n  \n```  \nstatic SizeSettings SizeVertical(int nRatio);\n\n \n```  \n  \n### Parameters  \n `nRatio`  \n Defines as a percentage how far a child control is resized vertically when the user resizes the host window.  \n  \n### Return Value  \n A [SizeSettings](#cmfcdynamiclayout__sizesettings_structure) value that encapsulates the requested size ratio.  \n  \n### Remarks  \n  \n## See Also  \n [Hierarchy Chart](../../mfc/hierarchy-chart.md)   \n [Classes](../../mfc/reference/mfc-classes.md)\n"}