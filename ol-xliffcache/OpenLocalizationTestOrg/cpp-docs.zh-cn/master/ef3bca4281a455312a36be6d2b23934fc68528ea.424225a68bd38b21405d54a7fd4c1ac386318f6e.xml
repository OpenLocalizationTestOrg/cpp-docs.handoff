{"nodes":[{"pos":[12,57],"content":"Expanding Wildcard Arguments | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Expanding Wildcard Arguments | Microsoft Docs","pos":[0,45]}]},{"content":"Expanding Wildcard Arguments","pos":[710,738]},{"content":"Microsoft Specific","pos":[741,759]},{"content":"When you run a C program, you can use either of the two wildcards — the question mark (?) and the asterisk (*) — to specify filename and path arguments on the command line.","pos":[768,940]},{"content":"By default, wildcards are not expanded in command-line arguments.","pos":[947,1012]},{"content":"You can replace the normal argument vector <ph id=\"ph1\">`argv`</ph> loading routine with a version that does expand wildcards by linking with the setargv.obj or wsetargv.obj file.","pos":[1013,1174],"source":" You can replace the normal argument vector `argv` loading routine with a version that does expand wildcards by linking with the setargv.obj or wsetargv.obj file."},{"content":"If your program uses a <ph id=\"ph1\">`main`</ph> function, link with setargv.obj.","pos":[1175,1237],"source":" If your program uses a `main` function, link with setargv.obj."},{"content":"If your program uses a <ph id=\"ph1\">`wmain`</ph> function, link with wsetargv.obj.","pos":[1238,1302],"source":" If your program uses a `wmain` function, link with wsetargv.obj."},{"content":"Both of these have equivalent behavior.","pos":[1303,1342]},{"content":"To link with setargv.obj or wsetargv.obj, use the <bpt id=\"p1\">**</bpt>/link<ept id=\"p1\">**</ept> option.","pos":[1349,1416],"source":"To link with setargv.obj or wsetargv.obj, use the **/link** option."},{"content":"For example:","pos":[1417,1429]},{"content":"cl example.c /link setargv.obj","pos":[1438,1468]},{"content":"The wildcards are expanded in the same manner as operating system commands.","pos":[1477,1552]},{"content":"(See your operating system user's guide if you are unfamiliar with wildcards.)","pos":[1553,1631]},{"content":"END Microsoft Specific","pos":[1640,1662]},{"content":"See Also","pos":[1673,1681]},{"content":"Link Options","pos":[1686,1698]},{"content":"main Function and Program Execution","pos":[1743,1778]}],"content":"---\ntitle: \"Expanding Wildcard Arguments | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"C++\"\n  - \"C\"\nhelpviewer_keywords: \n  - \"asterisk wildcard\"\n  - \"question mark, wildcard\"\n  - \"expanding wildcard arguments\"\n  - \"wildcards, expanding\"\nms.assetid: 80a11c4b-0199-420e-a342-cf1d803be5bc\ncaps.latest.revision: 11\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"ru-ru\"\n  - \"zh-cn\"\n  - \"zh-tw\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"tr-tr\"\n---\n# Expanding Wildcard Arguments\n**Microsoft Specific**  \n  \n When you run a C program, you can use either of the two wildcards — the question mark (?) and the asterisk (*) — to specify filename and path arguments on the command line.  \n  \n By default, wildcards are not expanded in command-line arguments. You can replace the normal argument vector `argv` loading routine with a version that does expand wildcards by linking with the setargv.obj or wsetargv.obj file. If your program uses a `main` function, link with setargv.obj. If your program uses a `wmain` function, link with wsetargv.obj. Both of these have equivalent behavior.  \n  \n To link with setargv.obj or wsetargv.obj, use the **/link** option. For example:  \n  \n **cl example.c /link setargv.obj**  \n  \n The wildcards are expanded in the same manner as operating system commands. (See your operating system user's guide if you are unfamiliar with wildcards.)  \n  \n **END Microsoft Specific**  \n  \n## See Also  \n [Link Options](../c-runtime-library/link-options.md)   \n [main Function and Program Execution](../c-language/main-function-and-program-execution.md)"}