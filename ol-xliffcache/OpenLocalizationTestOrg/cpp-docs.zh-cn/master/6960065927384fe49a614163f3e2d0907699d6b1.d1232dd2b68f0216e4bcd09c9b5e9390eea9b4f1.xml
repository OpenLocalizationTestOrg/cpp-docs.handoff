{"nodes":[{"pos":[12,43],"content":"Heap Constants | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Heap Constants | Microsoft Docs","pos":[0,31]}]},{"content":"Heap Constants","pos":[1011,1025]},{"content":"Syntax","pos":[1029,1035]},{"content":"Remarks","pos":[1087,1094]},{"content":"These constants give the return value indicating status of the heap.","pos":[1098,1166]},{"content":"Constant","pos":[1173,1181]},{"content":"Meaning","pos":[1182,1189]},{"content":"Initial header information was not found or was invalid.","pos":[1243,1299]},{"content":"Bad node was found, or heap is damaged.","pos":[1319,1358]},{"pos":[1377,1490],"content":"<bpt id=\"p1\">**</bpt>_pentry<ept id=\"p1\">**</ept> field of <bpt id=\"p2\">**</bpt>_HEAPINFO<ept id=\"p2\">**</ept> structure does not contain valid pointer into heap (<ph id=\"ph1\">`_heapwalk`</ph> routine only).","source":"**_pentry** field of **_HEAPINFO** structure does not contain valid pointer into heap (`_heapwalk` routine only)."},{"content":"Heap has not been initialized.","pos":[1508,1538]},{"pos":[1554,1618],"content":"End of heap was reached successfully (<ph id=\"ph1\">`_heapwalk`</ph> routine only).","source":"End of heap was reached successfully (`_heapwalk` routine only)."},{"content":"Heap is consistent (<ph id=\"ph1\">`_heapset`</ph> and <ph id=\"ph2\">`_heapchk`</ph> routines only).","pos":[1633,1694],"source":"Heap is consistent (`_heapset` and `_heapchk` routines only)."},{"content":"No errors so far; <bpt id=\"p1\">**</bpt>_HEAPINFO<ept id=\"p1\">**</ept> structure contains information about next entry (<ph id=\"ph1\">`_heapwalk`</ph> routine only).","pos":[1695,1802],"source":" No errors so far; **_HEAPINFO** structure contains information about next entry (`_heapwalk` routine only)."},{"content":"See Also","pos":[1812,1820]},{"content":"_heapchk","pos":[1825,1833]},{"content":"_heapset","pos":[1883,1891]},{"content":"_heapwalk","pos":[1931,1940]},{"content":"Global Constants","pos":[1991,2007]}],"content":"---\ntitle: \"Heap Constants | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"_HEAPBADPTR\"\n  - \"_HEAPEMPTY\"\n  - \"_HEAPBADBEGIN\"\n  - \"_HEAPOK\"\n  - \"_HEAPBADNODE\"\n  - \"_HEAPEND\"\ndev_langs: \n  - \"C++\"\n  - \"C\"\nhelpviewer_keywords: \n  - \"_HEAPOK constants\"\n  - \"_HEAPEND constants\"\n  - \"HEAPBADBEGIN constants\"\n  - \"_HEAPBADNODE constants\"\n  - \"HEAPBADNODE constants\"\n  - \"HEAPBADPTR constants\"\n  - \"_HEAPEMPTY constants\"\n  - \"HEAPEND constants\"\n  - \"HEAPOK constants\"\n  - \"HEAPEMPTY constants\"\n  - \"_HEAPBADBEGIN constants\"\n  - \"_HEAPBADPTR constants\"\n  - \"heap constants\"\nms.assetid: 3f751bb9-2dc4-486f-b5f5-9061c96d3754\ncaps.latest.revision: 6\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Heap Constants\n## Syntax  \n  \n```  \n  \n#include <malloc.h>  \n  \n```  \n  \n## Remarks  \n These constants give the return value indicating status of the heap.  \n  \n|Constant|Meaning|  \n|--------------|-------------|  \n|`_HEAPBADBEGIN`|Initial header information was not found or was invalid.|  \n|`_HEAPBADNODE`|Bad node was found, or heap is damaged.|  \n|`_HEAPBADPTR`|**_pentry** field of **_HEAPINFO** structure does not contain valid pointer into heap (`_heapwalk` routine only).|  \n|`_HEAPEMPTY`|Heap has not been initialized.|  \n|`_HEAPEND`|End of heap was reached successfully (`_heapwalk` routine only).|  \n|`_HEAPOK`|Heap is consistent (`_heapset` and `_heapchk` routines only). No errors so far; **_HEAPINFO** structure contains information about next entry (`_heapwalk` routine only).|  \n  \n## See Also  \n [_heapchk](../c-runtime-library/reference/heapchk.md)   \n [_heapset](../c-runtime-library/heapset.md)   \n [_heapwalk](../c-runtime-library/reference/heapwalk.md)   \n [Global Constants](../c-runtime-library/global-constants.md)"}