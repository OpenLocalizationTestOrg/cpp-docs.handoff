{"nodes":[{"pos":[12,58],"content":"CMFCToolBarDateTimeCtrl Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"CMFCToolBarDateTimeCtrl Class | Microsoft Docs","pos":[0,46]}]},{"content":"CMFCToolBarDateTimeCtrl Class","pos":[1407,1436]},{"content":"A toolbar button that contains a date and time picker control.","pos":[1437,1499]},{"content":"Syntax","pos":[1508,1514]},{"content":"Members","pos":[1597,1604]},{"content":"Public Constructors","pos":[1614,1633]},{"content":"Name","pos":[1640,1644]},{"content":"Description","pos":[1645,1656]},{"content":"CMFCToolBarDateTimeCtrl::CMFCToolBarDateTimeCtrl","pos":[1695,1743]},{"pos":[1796,1842],"content":"Constructs a <ph id=\"ph1\">`CMFCToolBarDateTimeCtrl`</ph> object.","source":"Constructs a `CMFCToolBarDateTimeCtrl` object."},{"content":"Destructor.","pos":[1899,1910]},{"content":"Public Methods","pos":[1921,1935]},{"content":"Name","pos":[1942,1946]},{"content":"Description","pos":[1947,1958]},{"content":"CMFCToolBarDateTimeCtrl::CanBeStretched","pos":[1997,2036]},{"content":"Specifies whether a user can stretch the button during customization.","pos":[2080,2149]},{"content":"(Overrides <bpt id=\"p1\">[</bpt>CMFCToolBarButton::CanBeStretched<ept id=\"p1\">](../../mfc/reference/cmfctoolbarbutton-class.md#cmfctoolbarbutton__canbestretched)</ept>.)","pos":[2150,2280],"source":" (Overrides [CMFCToolBarButton::CanBeStretched](../../mfc/reference/cmfctoolbarbutton-class.md#cmfctoolbarbutton__canbestretched).)"},{"content":"CMFCToolBarDateTimeCtrl::CopyFrom","pos":[2286,2319]},{"content":"Copies the properties of another toolbar button to the current button.","pos":[2357,2427]},{"content":"(Overrides <bpt id=\"p1\">[</bpt>CMFCToolBarButton::CopyFrom<ept id=\"p1\">](../../mfc/reference/cmfctoolbarbutton-class.md#cmfctoolbarbutton__copyfrom)</ept>.)","pos":[2428,2546],"source":" (Overrides [CMFCToolBarButton::CopyFrom](../../mfc/reference/cmfctoolbarbutton-class.md#cmfctoolbarbutton__copyfrom).)"},{"content":"Reserved for future use.","pos":[2592,2616]},{"content":"CMFCToolBarButton::ExportToMenuButton","pos":[2622,2659]},{"content":"Copies text from the toolbar button to a menu.","pos":[2747,2793]},{"content":"Used by the framework to create a dynamic instance of this class type.","pos":[2838,2908]},{"content":"CMFCToolBarDateTimeCtrl::GetByCmd","pos":[2914,2947]},{"pos":[2985,3091],"content":"Retrieves the first <ph id=\"ph1\">`CMFCToolBarDateTimeCtrl`</ph> object in the application that has the specified command ID.","source":"Retrieves the first `CMFCToolBarDateTimeCtrl` object in the application that has the specified command ID."},{"content":"CMFCToolBarDateTimeCtrl::GetDateTimeCtrl","pos":[3097,3137]},{"content":"Returns a pointer to the date and time picker control.","pos":[3182,3236]},{"content":"CMFCToolBarDateTimeCtrl::GetHwnd","pos":[3242,3274]},{"content":"Retrieves the window handle that is associated with the toolbar button.","pos":[3311,3382]},{"content":"(Overrides <bpt id=\"p1\">[</bpt>CMFCToolBarButton::GetHwnd<ept id=\"p1\">](../../mfc/reference/cmfctoolbarbutton-class.md#cmfctoolbarbutton__gethwnd)</ept>.)","pos":[3383,3499],"source":" (Overrides [CMFCToolBarButton::GetHwnd](../../mfc/reference/cmfctoolbarbutton-class.md#cmfctoolbarbutton__gethwnd).)"},{"pos":[3544,3704],"content":"Used by the framework to obtain a pointer to the <bpt id=\"p1\">[</bpt>CRuntimeClass<ept id=\"p1\">](../../mfc/reference/cruntimeclass-structure.md)</ept> object that is associated with this class type.","source":"Used by the framework to obtain a pointer to the [CRuntimeClass](../../mfc/reference/cruntimeclass-structure.md) object that is associated with this class type."},{"content":"CMFCToolBarDateTimeCtrl::GetTime","pos":[3710,3742]},{"pos":[3779,3948],"content":"Gets the selected time from a date and time picker control and puts it in a specified <bpt id=\"p1\">[</bpt>SYSTEMTIME<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms724950)</ept> structure.","source":"Gets the selected time from a date and time picker control and puts it in a specified [SYSTEMTIME](http://msdn.microsoft.com/library/windows/desktop/ms724950) structure."},{"content":"CMFCToolBarDateTimeCtrl::GetTimeAll","pos":[3954,3989]},{"content":"Returns the selected time from the time picker control button that has a specified command ID.","pos":[4029,4123]},{"content":"CMFCToolBarDateTimeCtrl::HaveHotBorder","pos":[4129,4167]},{"content":"Determines whether a border of the button is displayed when a user selects the button.","pos":[4210,4296]},{"content":"(Overrides <bpt id=\"p1\">[</bpt>CMFCToolBarButton::HaveHotBorder<ept id=\"p1\">](../../mfc/reference/cmfctoolbarbutton-class.md#cmfctoolbarbutton__havehotborder)</ept>.)","pos":[4297,4425],"source":" (Overrides [CMFCToolBarButton::HaveHotBorder](../../mfc/reference/cmfctoolbarbutton-class.md#cmfctoolbarbutton__havehotborder).)"},{"content":"CMFCToolBarDateTimeCtrl::NotifyCommand","pos":[4431,4469]},{"content":"Specifies whether the button processes the <bpt id=\"p1\">[</bpt>WM_COMMAND<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms647591)</ept> message.","pos":[4512,4636],"source":"Specifies whether the button processes the [WM_COMMAND](http://msdn.microsoft.com/library/windows/desktop/ms647591) message."},{"content":"(Overrides <bpt id=\"p1\">[</bpt>CMFCToolBarButton::NotifyCommand<ept id=\"p1\">](../../mfc/reference/cmfctoolbarbutton-class.md#cmfctoolbarbutton__notifycommand)</ept>.)","pos":[4637,4765],"source":" (Overrides [CMFCToolBarButton::NotifyCommand](../../mfc/reference/cmfctoolbarbutton-class.md#cmfctoolbarbutton__notifycommand).)"},{"content":"CMFCToolBarDateTimeCtrl::OnAddToCustomizePage","pos":[4771,4816]},{"content":"Called by the framework when the button is added to a <bpt id=\"p1\">**</bpt>Customize<ept id=\"p1\">**</ept> dialog box.","pos":[4866,4945],"source":"Called by the framework when the button is added to a **Customize** dialog box."},{"content":"(Overrides <bpt id=\"p1\">[</bpt>CMFCToolBarButton::OnAddToCustomizePage<ept id=\"p1\">](../../mfc/reference/cmfctoolbarbutton-class.md#cmfctoolbarbutton__onaddtocustomizepage)</ept>.)","pos":[4946,5088],"source":" (Overrides [CMFCToolBarButton::OnAddToCustomizePage](../../mfc/reference/cmfctoolbarbutton-class.md#cmfctoolbarbutton__onaddtocustomizepage).)"},{"content":"Called by the framework to calculate the size of the button for the specified device context and docking state.","pos":[5136,5247]},{"content":"(Overrides <bpt id=\"p1\">[</bpt>CMFCToolBarButton::OnCalculateSize<ept id=\"p1\">](../../mfc/reference/cmfctoolbarbutton-class.md#cmfctoolbarbutton__oncalculatesize)</ept>.)","pos":[5248,5380],"source":" (Overrides [CMFCToolBarButton::OnCalculateSize](../../mfc/reference/cmfctoolbarbutton-class.md#cmfctoolbarbutton__oncalculatesize).)"},{"content":"CMFCToolBarDateTimeCtrl::OnChangeParentWnd","pos":[5386,5428]},{"content":"Called by the framework when the button is inserted into a new toolbar.","pos":[5475,5546]},{"content":"(Overrides <bpt id=\"p1\">[</bpt>CMFCToolBarButton::OnChangeParentWnd<ept id=\"p1\">](../../mfc/reference/cmfctoolbarbutton-class.md#cmfctoolbarbutton__onchangeparentwnd)</ept>.)","pos":[5547,5683],"source":" (Overrides [CMFCToolBarButton::OnChangeParentWnd](../../mfc/reference/cmfctoolbarbutton-class.md#cmfctoolbarbutton__onchangeparentwnd).)"},{"content":"CMFCToolBarDateTimeCtrl::OnClick","pos":[5689,5721]},{"content":"Called by the framework when the user clicks the control.","pos":[5758,5815]},{"content":"(Overrides <bpt id=\"p1\">[</bpt>CMFCToolBarButton::OnClick<ept id=\"p1\">](../../mfc/reference/cmfctoolbarbutton-class.md#cmfctoolbarbutton__onclick)</ept>.)","pos":[5816,5932],"source":" (Overrides [CMFCToolBarButton::OnClick](../../mfc/reference/cmfctoolbarbutton-class.md#cmfctoolbarbutton__onclick).)"},{"content":"CMFCToolBarDateTimeCtrl::OnCtlColor","pos":[5938,5973]},{"content":"Called by the framework when the parent toolbar handles a <ph id=\"ph1\">`WM_CTLCOLOR`</ph> message.","pos":[6013,6093],"source":"Called by the framework when the parent toolbar handles a `WM_CTLCOLOR` message."},{"content":"(Overrides <bpt id=\"p1\">[</bpt>CMFCToolBarButton::OnCtlColor<ept id=\"p1\">](../../mfc/reference/cmfctoolbarbutton-class.md#cmfctoolbarbutton__onctlcolor)</ept>.)","pos":[6094,6216],"source":" (Overrides [CMFCToolBarButton::OnCtlColor](../../mfc/reference/cmfctoolbarbutton-class.md#cmfctoolbarbutton__onctlcolor).)"},{"content":"Called by the framework to draw the button by using the specified styles and options.","pos":[6255,6340]},{"content":"(Overrides <bpt id=\"p1\">[</bpt>CMFCToolBarButton::OnDraw<ept id=\"p1\">](../../mfc/reference/cmfctoolbarbutton-class.md#cmfctoolbarbutton__ondraw)</ept>.)","pos":[6341,6455],"source":" (Overrides [CMFCToolBarButton::OnDraw](../../mfc/reference/cmfctoolbarbutton-class.md#cmfctoolbarbutton__ondraw).)"},{"content":"Called by the framework to draw the button in the <bpt id=\"p1\">**</bpt>Commands<ept id=\"p1\">**</ept> pane of the <bpt id=\"p2\">**</bpt>Customize<ept id=\"p2\">**</ept> dialog box.","pos":[6509,6609],"source":"Called by the framework to draw the button in the **Commands** pane of the **Customize** dialog box."},{"content":"(Overrides <bpt id=\"p1\">[</bpt>CMFCToolBarButton::OnDrawOnCustomizeList<ept id=\"p1\">](../../mfc/reference/cmfctoolbarbutton-class.md#cmfctoolbarbutton__ondrawoncustomizelist)</ept>.)","pos":[6610,6754],"source":" (Overrides [CMFCToolBarButton::OnDrawOnCustomizeList](../../mfc/reference/cmfctoolbarbutton-class.md#cmfctoolbarbutton__ondrawoncustomizelist).)"},{"content":"CMFCToolBarDateTimeCtrl::OnGlobalFontsChanged","pos":[6760,6805]},{"content":"Called by the framework when the global font has changed.","pos":[6855,6912]},{"content":"(Overrides <bpt id=\"p1\">[</bpt>CMFCToolBarButton::OnGlobalFontsChanged<ept id=\"p1\">](../../mfc/reference/cmfctoolbarbutton-class.md#cmfctoolbarbutton__onglobalfontschanged)</ept>.)","pos":[6913,7055],"source":" (Overrides [CMFCToolBarButton::OnGlobalFontsChanged](../../mfc/reference/cmfctoolbarbutton-class.md#cmfctoolbarbutton__onglobalfontschanged).)"},{"content":"CMFCToolBarDateTimeCtrl::OnMove","pos":[7061,7092]},{"content":"Called by the framework when the parent toolbar moves.","pos":[7128,7182]},{"content":"(Overrides <bpt id=\"p1\">[</bpt>CMFCToolBarButton::OnMove<ept id=\"p1\">](../../mfc/reference/cmfctoolbarbutton-class.md#cmfctoolbarbutton__onmove)</ept>.)","pos":[7183,7297],"source":" (Overrides [CMFCToolBarButton::OnMove](../../mfc/reference/cmfctoolbarbutton-class.md#cmfctoolbarbutton__onmove).)"},{"content":"CMFCToolBarDateTimeCtrl::OnShow","pos":[7303,7334]},{"content":"Called by the framework when the button becomes visible or invisible.","pos":[7370,7439]},{"content":"(Overrides <bpt id=\"p1\">[</bpt>CMFCToolBarButton::OnShow<ept id=\"p1\">](../../mfc/reference/cmfctoolbarbutton-class.md#cmfctoolbarbutton__onshow)</ept>.)","pos":[7440,7554],"source":" (Overrides [CMFCToolBarButton::OnShow](../../mfc/reference/cmfctoolbarbutton-class.md#cmfctoolbarbutton__onshow).)"},{"content":"Called by the framework when the parent toolbar changes its size or position and this change causes the button to change size.","pos":[7593,7719]},{"content":"(Overrides <bpt id=\"p1\">[</bpt>CMFCToolBarButton::OnSize<ept id=\"p1\">](../../mfc/reference/cmfctoolbarbutton-class.md#cmfctoolbarbutton__onsize)</ept>.)","pos":[7720,7834],"source":" (Overrides [CMFCToolBarButton::OnSize](../../mfc/reference/cmfctoolbarbutton-class.md#cmfctoolbarbutton__onsize).)"},{"content":"CMFCToolBarDateTimeCtrl::OnUpdateToolTip","pos":[7840,7880]},{"content":"Called by the framework when the parent toolbar updates its tooltip text.","pos":[7925,7998]},{"content":"(Overrides <bpt id=\"p1\">[</bpt>CMFCToolBarButton::OnUpdateToolTip<ept id=\"p1\">](../../mfc/reference/cmfctoolbarbutton-class.md#cmfctoolbarbutton__onupdatetooltip)</ept>.)","pos":[7999,8131],"source":" (Overrides [CMFCToolBarButton::OnUpdateToolTip](../../mfc/reference/cmfctoolbarbutton-class.md#cmfctoolbarbutton__onupdatetooltip).)"},{"pos":[8173,8355],"content":"Reads this object from an archive or writes it to an archive, (Overrides <bpt id=\"p1\">[</bpt>CMFCToolBarButton::Serialize<ept id=\"p1\">](../../mfc/reference/cmfctoolbarbutton-class.md#cmfctoolbarbutton__serialize)</ept>.)","source":"Reads this object from an archive or writes it to an archive, (Overrides [CMFCToolBarButton::Serialize](../../mfc/reference/cmfctoolbarbutton-class.md#cmfctoolbarbutton__serialize).)"},{"content":"Sets the style of the toolbar button.","pos":[8396,8433]},{"content":"(Overrides <bpt id=\"p1\">[</bpt>CMFCToolBarButton::SetStyle<ept id=\"p1\">](../../mfc/reference/cmfctoolbarbutton-class.md#cmfctoolbarbutton__setstyle)</ept>.)","pos":[8434,8552],"source":" (Overrides [CMFCToolBarButton::SetStyle](../../mfc/reference/cmfctoolbarbutton-class.md#cmfctoolbarbutton__setstyle).)"},{"content":"CMFCToolBarDateTimeCtrl::SetTime","pos":[8558,8590]},{"content":"Sets the time and date in the time picker control.","pos":[8627,8677]},{"content":"CMFCToolBarDateTimeCtrl::SetTimeAll","pos":[8683,8718]},{"content":"Sets the time and date in all instances of the time picker control that have a specified command ID.","pos":[8758,8858]},{"content":"Remarks","pos":[8868,8875]},{"content":"For an example of how to use a date and time picker control, see the ToolbarDateTimePicker sample project.","pos":[8879,8985]},{"content":"For information about how to add control buttons to toolbars, see <bpt id=\"p1\">[</bpt>Walkthrough: Putting Controls On Toolbars<ept id=\"p1\">](../../mfc/walkthrough-putting-controls-on-toolbars.md)</ept>.","pos":[8986,9151],"source":" For information about how to add control buttons to toolbars, see [Walkthrough: Putting Controls On Toolbars](../../mfc/walkthrough-putting-controls-on-toolbars.md)."},{"content":"Inheritance Hierarchy","pos":[9160,9181]},{"content":"CObject","pos":[9186,9193]},{"content":"CMFCToolBarButton","pos":[9240,9257]},{"content":"CMFCToolBarDateTimeCtrl","pos":[9314,9337]},{"content":"Requirements","pos":[9401,9413]},{"pos":[9417,9453],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> afxtoolbardatetimectrl.h","source":"**Header:** afxtoolbardatetimectrl.h"},{"pos":[9519,9558],"content":"CMFCToolBarDateTimeCtrl::CanBeStretched"},{"content":"Specifies whether a user can stretch the button during customization.","pos":[9562,9631]},{"content":"Return Value","pos":[9696,9708]},{"pos":[9712,9739],"content":"This method returns <ph id=\"ph1\">`TRUE`</ph>.","source":"This method returns `TRUE`."},{"content":"Remarks","pos":[9749,9756]},{"content":"By default, the framework does not allow the user to stretch a toolbar button during customization.","pos":[9760,9859]},{"content":"This method extends the base class implementation ( <bpt id=\"p1\">[</bpt>CMFCToolBarButton::CanBeStretched<ept id=\"p1\">](../../mfc/reference/cmfctoolbarbutton-class.md#cmfctoolbarbutton__canbestretched)</ept>) by allowing the user to stretch a date and time toolbar button during customization.","pos":[9860,10115],"source":" This method extends the base class implementation ( [CMFCToolBarButton::CanBeStretched](../../mfc/reference/cmfctoolbarbutton-class.md#cmfctoolbarbutton__canbestretched)) by allowing the user to stretch a date and time toolbar button during customization."},{"pos":[10190,10238],"content":"CMFCToolBarDateTimeCtrl::CMFCToolBarDateTimeCtrl"},{"pos":[10242,10355],"content":"Creates and initializes a <bpt id=\"p1\">[</bpt>CMFCToolBarDateTimeCtrl<ept id=\"p1\">](../../mfc/reference/cmfctoolbardatetimectrl-class.md)</ept> object.","source":"Creates and initializes a [CMFCToolBarDateTimeCtrl](../../mfc/reference/cmfctoolbardatetimectrl-class.md) object."},{"content":"Parameters","pos":[10482,10492]},{"content":"[in]","pos":[10496,10500]},{"content":"The control ID.","pos":[10511,10526]},{"content":"[in]","pos":[10533,10537]},{"content":"The index of the image in the toolbar's <ph id=\"ph1\">`CMFCToolBarImages`</ph> object.","pos":[10550,10617],"source":" The index of the image in the toolbar's `CMFCToolBarImages` object."},{"content":"[in]","pos":[10624,10628]},{"content":"The style of the <ph id=\"ph1\">`CMFCToolBarDateTimeCtrlImpl`</ph> window that is created when a user clicks the button.","pos":[10642,10742],"source":" The style of the `CMFCToolBarDateTimeCtrlImpl` window that is created when a user clicks the button."},{"content":"[in]","pos":[10749,10753]},{"content":"The width of the control, in pixels.","pos":[10766,10802]},{"content":"Remarks","pos":[10812,10819]},{"content":"This object is initialized to the system date and time.","pos":[10823,10878]},{"content":"The window style of the internal <ph id=\"ph1\">`CMFCToolBarDateTimeCtrlImpl`</ph> object includes the <ph id=\"ph2\">`dwStyle`</ph> parameter and the <ph id=\"ph3\">`WS_CHILD`</ph> and <ph id=\"ph4\">`WS_VISIBLE`</ph> styles.","pos":[10879,11025],"source":" The window style of the internal `CMFCToolBarDateTimeCtrlImpl` object includes the `dwStyle` parameter and the `WS_CHILD` and `WS_VISIBLE` styles."},{"content":"You cannot change these styles by using <ph id=\"ph1\">`CMFCToolBarDateTimeCtrl::SetStyle`</ph>.","pos":[11026,11102],"source":" You cannot change these styles by using `CMFCToolBarDateTimeCtrl::SetStyle`."},{"content":"Use <ph id=\"ph1\">`SetStyle`</ph> to change the style of the <ph id=\"ph2\">`CMFCToolBarDateTimeCtrl`</ph> control.","pos":[11103,11179],"source":" Use `SetStyle` to change the style of the `CMFCToolBarDateTimeCtrl` control."},{"content":"Example","pos":[11189,11196]},{"content":"The following example demonstrates how to construct an object of the <ph id=\"ph1\">`CMFCToolBarDateTimeCtrl`</ph> class.","pos":[11200,11301],"source":"The following example demonstrates how to construct an object of the `CMFCToolBarDateTimeCtrl` class."},{"content":"This code snippet is part of the <bpt id=\"p1\">[</bpt>Toolbar Date Time Picker sample<ept id=\"p1\">](../../visual-cpp-samples.md)</ept>.","pos":[11302,11398],"source":" This code snippet is part of the [Toolbar Date Time Picker sample](../../visual-cpp-samples.md)."},{"pos":[11416,11447],"content":"NVC_MFC_ToolbarDateTimePicker#1"},{"pos":[11582,11615],"content":"CMFCToolBarDateTimeCtrl::CopyFrom"},{"content":"Copies the properties of another toolbar button to the current button.","pos":[11619,11689]},{"content":"Parameters","pos":[11767,11777]},{"content":"[in]","pos":[11781,11785]},{"content":"A reference to the source button from which to copy.","pos":[11795,11847]},{"content":"Remarks","pos":[11857,11864]},{"content":"Call this method to copy another toolbar button to this toolbar button.","pos":[11868,11939]},{"content":"must be of type <ph id=\"ph1\">`CMFCToolBarDateTimeCtrl`</ph>.","pos":[11946,11988],"source":" must be of type `CMFCToolBarDateTimeCtrl`."},{"pos":[12058,12101],"content":"CMFCToolBarDateTimeCtrl::ExportToMenuButton"},{"content":"Copies text from the toolbar button to a menu.","pos":[12105,12151]},{"content":"Parameters","pos":[12253,12263]},{"content":"[in]","pos":[12267,12271]},{"content":"A reference to the target menu button.","pos":[12288,12326]},{"content":"Return Value","pos":[12336,12348]},{"pos":[12352,12379],"content":"This method returns <ph id=\"ph1\">`TRUE`</ph>.","source":"This method returns `TRUE`."},{"content":"Remarks","pos":[12389,12396]},{"content":"This method overrides the base class implementation ( <bpt id=\"p1\">[</bpt>CMFCToolBarButton::ExportToMenuButton<ept id=\"p1\">](../../mfc/reference/cmfctoolbarbutton-class.md#cmfctoolbarbutton__exporttomenubutton)</ept>) by loading the string resource that is associated with the command ID of the control.","pos":[12400,12666],"source":"This method overrides the base class implementation ( [CMFCToolBarButton::ExportToMenuButton](../../mfc/reference/cmfctoolbarbutton-class.md#cmfctoolbarbutton__exporttomenubutton)) by loading the string resource that is associated with the command ID of the control."},{"content":"For more information about string resources, see <bpt id=\"p1\">[</bpt>CStringT::LoadString<ept id=\"p1\">](../../atl-mfc-shared/reference/cstringt-class.md#cstringt__loadstring)</ept>.","pos":[12667,12810],"source":" For more information about string resources, see [CStringT::LoadString](../../atl-mfc-shared/reference/cstringt-class.md#cstringt__loadstring)."},{"pos":[12870,12903],"content":"CMFCToolBarDateTimeCtrl::GetByCmd"},{"pos":[12907,13013],"content":"Retrieves the first <ph id=\"ph1\">`CMFCToolBarDateTimeCtrl`</ph> object in the application that has the specified command ID.","source":"Retrieves the first `CMFCToolBarDateTimeCtrl` object in the application that has the specified command ID."},{"content":"Parameters","pos":[13102,13112]},{"content":"[in]","pos":[13116,13120]},{"content":"The command ID of the button to retrieve.","pos":[13132,13173]},{"content":"Return Value","pos":[13183,13195]},{"pos":[13199,13376],"content":"The first <ph id=\"ph1\">`CMFCToolBarDateTimeCtrl`</ph> object in the application that has the specified command ID, or <ph id=\"ph2\">`NULL`</ph> if no <ph id=\"ph3\">`CMFCToolBarDateTimeCtrl`</ph> objects have the specified command ID.","source":"The first `CMFCToolBarDateTimeCtrl` object in the application that has the specified command ID, or `NULL` if no `CMFCToolBarDateTimeCtrl` objects have the specified command ID."},{"content":"Remarks","pos":[13386,13393]},{"pos":[13397,13716],"content":"This shared utility method is used by methods such as <bpt id=\"p1\">[</bpt>CMFCToolBarDateTimeCtrl::SetTimeAll<ept id=\"p1\">](#cmfctoolbardatetimectrl__settimeall)</ept> and <bpt id=\"p2\">[</bpt>CMFCToolBarDateTimeCtrl::GetTimeAll<ept id=\"p2\">](#cmfctoolbardatetimectrl__gettimeall)</ept> to set or get the time and date of all instances of the time picker control that have a specified command ID.","source":"This shared utility method is used by methods such as [CMFCToolBarDateTimeCtrl::SetTimeAll](#cmfctoolbardatetimectrl__settimeall) and [CMFCToolBarDateTimeCtrl::GetTimeAll](#cmfctoolbardatetimectrl__gettimeall) to set or get the time and date of all instances of the time picker control that have a specified command ID."},{"pos":[13783,13823],"content":"CMFCToolBarDateTimeCtrl::GetDateTimeCtrl"},{"content":"Returns a pointer to the date and time picker control.","pos":[13827,13881]},{"content":"Return Value","pos":[13949,13961]},{"pos":[13965,14048],"content":"A pointer to date and time picker control; or <ph id=\"ph1\">`NULL`</ph> if the control does not exist.","source":"A pointer to date and time picker control; or `NULL` if the control does not exist."},{"content":"Remarks","pos":[14058,14065]},{"pos":[14069,14216],"content":"The <ph id=\"ph1\">`CMFCToolBarDateTimeCtrl`</ph> class initializes the <ph id=\"ph2\">`m_pWndDateTime`</ph> data member when you insert a <ph id=\"ph3\">`CMFCToolBarDateTimeCtrl`</ph> object into a toolbar.","source":"The `CMFCToolBarDateTimeCtrl` class initializes the `m_pWndDateTime` data member when you insert a `CMFCToolBarDateTimeCtrl` object into a toolbar."},{"pos":[14275,14307],"content":"CMFCToolBarDateTimeCtrl::GetHwnd"},{"content":"Retrieves the window handle that is associated with the toolbar button.","pos":[14311,14382]},{"content":"Return Value","pos":[14431,14443]},{"content":"The window handle that is associated with the date and time toolbar button.","pos":[14447,14522]},{"content":"Remarks","pos":[14532,14539]},{"pos":[14543,14680],"content":"This method overrides the <bpt id=\"p1\">[</bpt>CMFCToolBarButton::GetHwnd<ept id=\"p1\">](../../mfc/reference/cmfctoolbarbutton-class.md#cmfctoolbarbutton__gethwnd)</ept> method.","source":"This method overrides the [CMFCToolBarButton::GetHwnd](../../mfc/reference/cmfctoolbarbutton-class.md#cmfctoolbarbutton__gethwnd) method."},{"pos":[14739,14771],"content":"CMFCToolBarDateTimeCtrl::GetTime"},{"pos":[14775,14956],"content":"Gets the selected time from the associated date and time picker control and puts it in a specified <bpt id=\"p1\">[</bpt>SYSTEMTIME<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms724950)</ept> structure","source":"Gets the selected time from the associated date and time picker control and puts it in a specified [SYSTEMTIME](http://msdn.microsoft.com/library/windows/desktop/ms724950) structure"},{"content":"Parameters","pos":[15119,15129]},{"content":"In the first overload, a <bpt id=\"p1\">[</bpt>COleDateTime Class<ept id=\"p1\">](../../atl-mfc-shared/reference/coledatetime-class.md)</ept> object that will receive the system time information.","pos":[15153,15306],"source":" In the first overload, a [COleDateTime Class](../../atl-mfc-shared/reference/coledatetime-class.md) object that will receive the system time information."},{"content":"In the second overload, a <bpt id=\"p1\">[</bpt>CTime<ept id=\"p1\">](../../atl-mfc-shared/reference/ctime-class.md)</ept> object that will receive the system time information.","pos":[15307,15441],"source":" In the second overload, a [CTime](../../atl-mfc-shared/reference/ctime-class.md) object that will receive the system time information."},{"content":"A pointer to the <bpt id=\"p1\">[</bpt>SYSTEMTIME<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms724950)</ept> structure to receive the system time information.","pos":[15469,15608],"source":" A pointer to the [SYSTEMTIME](http://msdn.microsoft.com/library/windows/desktop/ms724950) structure to receive the system time information."},{"content":"Must not be <ph id=\"ph1\">`NULL`</ph>.","pos":[15609,15628],"source":" Must not be `NULL`."},{"content":"Return Value","pos":[15638,15650]},{"content":"In the first overload, nonzero if the time is successfully written to the <bpt id=\"p1\">[</bpt>COleDateTime Class<ept id=\"p1\">](../../atl-mfc-shared/reference/coledatetime-class.md)</ept> object; otherwise 0.","pos":[15654,15823],"source":"In the first overload, nonzero if the time is successfully written to the [COleDateTime Class](../../atl-mfc-shared/reference/coledatetime-class.md) object; otherwise 0."},{"content":"In the second and third overloads, the return value is a <ph id=\"ph1\">`DWORD`</ph> that is equal to the dwFlag member that was set in the <bpt id=\"p1\">[</bpt>NMDATETIMECHANGE<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb761730)</ept> structure.","pos":[15824,16033],"source":" In the second and third overloads, the return value is a `DWORD` that is equal to the dwFlag member that was set in the [NMDATETIMECHANGE](http://msdn.microsoft.com/library/windows/desktop/bb761730) structure."},{"content":"Remarks","pos":[16043,16050]},{"content":"The method sets the <bpt id=\"p1\">[</bpt>NMDATETIMECHANGE<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb761730)</ept> structure member dwFlags to indicate whether the date and time picker is set to a date and time.","pos":[16054,16249],"source":"The method sets the [NMDATETIMECHANGE](http://msdn.microsoft.com/library/windows/desktop/bb761730) structure member dwFlags to indicate whether the date and time picker is set to a date and time."},{"content":"If the value equals GDT_NONE, the control is set to <ph id=\"ph1\">`no date`</ph> status, and uses the DTS_SHOWNONE style.","pos":[16250,16352],"source":" If the value equals GDT_NONE, the control is set to `no date` status, and uses the DTS_SHOWNONE style."},{"content":"If the value returned equals GDT_VALID, the system time is successfully stored in the destination location.","pos":[16353,16460]},{"pos":[16522,16557],"content":"CMFCToolBarDateTimeCtrl::GetTimeAll"},{"content":"Returns the time selected by the user from the time picker control button that has a specified command ID.","pos":[16561,16667]},{"content":"Parameters","pos":[16902,16912]},{"content":"Specifies a toolbar button's command ID.","pos":[16932,16972]},{"content":"In the first overload, a <bpt id=\"p1\">[</bpt>COleDateTime Class<ept id=\"p1\">](../../atl-mfc-shared/reference/coledatetime-class.md)</ept> object that will receive the system time information.","pos":[16999,17152],"source":" In the first overload, a [COleDateTime Class](../../atl-mfc-shared/reference/coledatetime-class.md) object that will receive the system time information."},{"content":"In the second overload, a <bpt id=\"p1\">[</bpt>CTime<ept id=\"p1\">](../../atl-mfc-shared/reference/ctime-class.md)</ept> object that will receive the system time information.","pos":[17153,17287],"source":" In the second overload, a [CTime](../../atl-mfc-shared/reference/ctime-class.md) object that will receive the system time information."},{"content":"A pointer to the <bpt id=\"p1\">[</bpt>SYSTEMTIME<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms724950)</ept> structure to receive the system time information.","pos":[17315,17454],"source":" A pointer to the [SYSTEMTIME](http://msdn.microsoft.com/library/windows/desktop/ms724950) structure to receive the system time information."},{"content":"Must not be <ph id=\"ph1\">`NULL`</ph>.","pos":[17455,17474],"source":" Must not be `NULL`."},{"content":"Return Value","pos":[17484,17496]},{"content":"If the framework cannot find a toolbar button that matches the command ID <ph id=\"ph1\">`uiCmd`</ph>, the return value is zero in the first overload, and GDT_NONE in the other overloads.","pos":[17500,17667],"source":"If the framework cannot find a toolbar button that matches the command ID `uiCmd`, the return value is zero in the first overload, and GDT_NONE in the other overloads."},{"content":"If the toolbar button is found, the return value is the same as the return value from a call to <bpt id=\"p1\">[</bpt>CMFCToolBarDateTimeCtrl::GetTime<ept id=\"p1\">](#cmfctoolbardatetimectrl__gettime)</ept> on that button.","pos":[17668,17849],"source":" If the toolbar button is found, the return value is the same as the return value from a call to [CMFCToolBarDateTimeCtrl::GetTime](#cmfctoolbardatetimectrl__gettime) on that button."},{"content":"A return value of zero or GDT_NONE can occur when the button is found, which indicates that the call to <ph id=\"ph1\">`GetTime`</ph> did not return a valid date for some other reason.","pos":[17850,18014],"source":" A return value of zero or GDT_NONE can occur when the button is found, which indicates that the call to `GetTime` did not return a valid date for some other reason."},{"content":"Remarks","pos":[18024,18031]},{"pos":[18035,18210],"content":"This method looks for a toolbar button that has the specified command ID and calls <bpt id=\"p1\">[</bpt>CMFCToolBarDateTimeCtrl::GetTime<ept id=\"p1\">](#cmfctoolbardatetimectrl__gettime)</ept> method on that button.","source":"This method looks for a toolbar button that has the specified command ID and calls [CMFCToolBarDateTimeCtrl::GetTime](#cmfctoolbardatetimectrl__gettime) method on that button."},{"pos":[18275,18313],"content":"CMFCToolBarDateTimeCtrl::HaveHotBorder"},{"content":"Determines whether a border of the button is displayed when a user selects the button.","pos":[18317,18403]},{"content":"Return Value","pos":[18467,18479]},{"content":"Nonzero if a button displays its border when selected; otherwise 0.","pos":[18483,18550]},{"content":"Remarks","pos":[18560,18567]},{"content":"This method returns a nonzero value if the control is visible.","pos":[18571,18633]},{"pos":[18698,18736],"content":"CMFCToolBarDateTimeCtrl::NotifyCommand"},{"pos":[18740,18864],"content":"Specifies whether the button processes the <bpt id=\"p1\">[</bpt>WM_COMMAND<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms647591)</ept> message.","source":"Specifies whether the button processes the [WM_COMMAND](http://msdn.microsoft.com/library/windows/desktop/ms647591) message."},{"content":"Parameters","pos":[18934,18944]},{"content":"[in]","pos":[18948,18952]},{"content":"The notification message that is associated with the command.","pos":[18970,19031]},{"content":"Return Value","pos":[19041,19053]},{"pos":[19064,19194],"content":"if the button processes the <ph id=\"ph1\">`WM_COMMAND`</ph> message, or <ph id=\"ph2\">`FALSE`</ph> to indicate that the message should be handled by the parent toolbar.","source":" if the button processes the `WM_COMMAND` message, or `FALSE` to indicate that the message should be handled by the parent toolbar."},{"content":"Remarks","pos":[19204,19211]},{"pos":[19215,19376],"content":"The framework calls this method when it is about to send a <bpt id=\"p1\">[</bpt>WM_COMMAND<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms647591)</ept> message to the parent window.","source":"The framework calls this method when it is about to send a [WM_COMMAND](http://msdn.microsoft.com/library/windows/desktop/ms647591) message to the parent window."},{"content":"This method extends the base class implementation ( <bpt id=\"p1\">[</bpt>CMFCToolBarButton::NotifyCommand<ept id=\"p1\">](../../mfc/reference/cmfctoolbarbutton-class.md#cmfctoolbarbutton__notifycommand)</ept>) by processing the <bpt id=\"p2\">[</bpt>DTN_DATETIMECHANGE<ept id=\"p2\">](http://msdn.microsoft.com/library/windows/desktop/bb761737)</ept> notification.","pos":[19383,19664],"source":"This method extends the base class implementation ( [CMFCToolBarButton::NotifyCommand](../../mfc/reference/cmfctoolbarbutton-class.md#cmfctoolbarbutton__notifycommand)) by processing the [DTN_DATETIMECHANGE](http://msdn.microsoft.com/library/windows/desktop/bb761737) notification."},{"content":"It updates the internal time status and updates the time property of all <ph id=\"ph1\">`CMFCToolBarDateTimeCtrl`</ph> objects with the same command ID.","pos":[19665,19797],"source":" It updates the internal time status and updates the time property of all `CMFCToolBarDateTimeCtrl` objects with the same command ID."},{"pos":[19869,19914],"content":"CMFCToolBarDateTimeCtrl::OnAddToCustomizePage"},{"pos":[19918,19997],"content":"Called by the framework when the button is added to a <bpt id=\"p1\">**</bpt>Customize<ept id=\"p1\">**</ept> dialog box.","source":"Called by the framework when the button is added to a **Customize** dialog box."},{"content":"Remarks","pos":[20059,20066]},{"content":"This method extends the base class implementation, <bpt id=\"p1\">[</bpt>CMFCToolBarButton::OnAddToCustomizePage<ept id=\"p1\">](../../mfc/reference/cmfctoolbarbutton-class.md#cmfctoolbarbutton__onaddtocustomizepage)</ept>, by copying the properties from the first date and time control in any toolbar that has the same command ID as this object.","pos":[20070,20374],"source":"This method extends the base class implementation, [CMFCToolBarButton::OnAddToCustomizePage](../../mfc/reference/cmfctoolbarbutton-class.md#cmfctoolbarbutton__onaddtocustomizepage), by copying the properties from the first date and time control in any toolbar that has the same command ID as this object."},{"content":"This method does nothing if no toolbar has a date and time control that has the same command ID as this object.","pos":[20375,20486]},{"pos":[20493,20648],"content":"For more information about the <bpt id=\"p1\">**</bpt>Customize<ept id=\"p1\">**</ept> dialog box, see <bpt id=\"p2\">[</bpt>CMFCToolBarsCustomizeDialog Class<ept id=\"p2\">](../../mfc/reference/cmfctoolbarscustomizedialog-class.md)</ept>.","source":"For more information about the **Customize** dialog box, see [CMFCToolBarsCustomizeDialog Class](../../mfc/reference/cmfctoolbarscustomizedialog-class.md)."},{"pos":[20717,20759],"content":"CMFCToolBarDateTimeCtrl::OnChangeParentWnd"},{"content":"Called by the framework when the button is inserted into a new toolbar.","pos":[20763,20834]},{"content":"Parameters","pos":[20909,20919]},{"content":"[in]","pos":[20923,20927]},{"content":"The new parent window.","pos":[20944,20966]},{"content":"Remarks","pos":[20976,20983]},{"pos":[20987,21230],"content":"This method overrides the base class implementation ( <bpt id=\"p1\">[</bpt>CMFCToolBarButton::OnChangeParentWnd<ept id=\"p1\">](../../mfc/reference/cmfctoolbarbutton-class.md#cmfctoolbarbutton__onchangeparentwnd)</ept>) by recreating the internal <ph id=\"ph1\">`CMFCToolBarDateTimeCtrlImpl`</ph> object.","source":"This method overrides the base class implementation ( [CMFCToolBarButton::OnChangeParentWnd](../../mfc/reference/cmfctoolbarbutton-class.md#cmfctoolbarbutton__onchangeparentwnd)) by recreating the internal `CMFCToolBarDateTimeCtrlImpl` object."},{"pos":[21289,21321],"content":"CMFCToolBarDateTimeCtrl::OnClick"},{"content":"Called by the framework when the user clicks the control.","pos":[21325,21382]},{"content":"Parameters","pos":[21472,21482]},{"content":"[in]","pos":[21486,21490]},{"content":"Unused.","pos":[21501,21508]},{"content":"[in]","pos":[21515,21519]},{"content":"Unused.","pos":[21532,21539]},{"content":"Return Value","pos":[21549,21561]},{"content":"Nonzero if the button processes the click message; otherwise 0.","pos":[21565,21628]},{"content":"Remarks","pos":[21638,21645]},{"pos":[21649,21900],"content":"This method overrides the base class implementation, <bpt id=\"p1\">[</bpt>CMFCToolBarButton::OnClick<ept id=\"p1\">](../../mfc/reference/cmfctoolbarbutton-class.md#cmfctoolbarbutton__onclick)</ept>, by returning a nonzero value if the internal <ph id=\"ph1\">`CMFCToolBarDateTimeCtrlImpl`</ph> object is visible.","source":"This method overrides the base class implementation, [CMFCToolBarButton::OnClick](../../mfc/reference/cmfctoolbarbutton-class.md#cmfctoolbarbutton__onclick), by returning a nonzero value if the internal `CMFCToolBarDateTimeCtrlImpl` object is visible."},{"pos":[21962,21997],"content":"CMFCToolBarDateTimeCtrl::OnCtlColor"},{"pos":[22001,22081],"content":"Called by the framework when the parent toolbar handles a <ph id=\"ph1\">`WM_CTLCOLOR`</ph> message.","source":"Called by the framework when the parent toolbar handles a `WM_CTLCOLOR` message."},{"content":"Parameters","pos":[22170,22180]},{"content":"[in]","pos":[22184,22188]},{"content":"The device context that displays the button.","pos":[22198,22242]},{"content":"[in]","pos":[22249,22253]},{"content":"Unused.","pos":[22269,22276]},{"content":"Return Value","pos":[22286,22298]},{"content":"A handle to the global brush that the framework uses to paint the background of the button.","pos":[22302,22393]},{"content":"Remarks","pos":[22403,22410]},{"pos":[22414,22706],"content":"This method overrides the base class implementation, <bpt id=\"p1\">[</bpt>CMFCToolBarButton::OnCtlColor<ept id=\"p1\">](../../mfc/reference/cmfctoolbarbutton-class.md#cmfctoolbarbutton__onctlcolor)</ept>, by setting the text and background colors of the provided device context to the global text and background colors, respectively.","source":"This method overrides the base class implementation, [CMFCToolBarButton::OnCtlColor](../../mfc/reference/cmfctoolbarbutton-class.md#cmfctoolbarbutton__onctlcolor), by setting the text and background colors of the provided device context to the global text and background colors, respectively."},{"pos":[22713,22877],"content":"For more information about global options that are available to your application, see <bpt id=\"p1\">[</bpt>AFX_GLOBAL_DATA Structure<ept id=\"p1\">](../../mfc/reference/afx-global-data-structure.md)</ept>.","source":"For more information about global options that are available to your application, see [AFX_GLOBAL_DATA Structure](../../mfc/reference/afx-global-data-structure.md)."},{"pos":[22949,22994],"content":"CMFCToolBarDateTimeCtrl::OnGlobalFontsChanged"},{"content":"Called by the framework when the global font has changed.","pos":[22998,23055]},{"content":"Remarks","pos":[23117,23124]},{"pos":[23128,23374],"content":"This method extends the base class implementation ( <bpt id=\"p1\">[</bpt>CMFCToolBarButton::OnGlobalFontsChanged<ept id=\"p1\">](../../mfc/reference/cmfctoolbarbutton-class.md#cmfctoolbarbutton__onglobalfontschanged)</ept>) by changing the font of the control to that of the global font.","source":"This method extends the base class implementation ( [CMFCToolBarButton::OnGlobalFontsChanged](../../mfc/reference/cmfctoolbarbutton-class.md#cmfctoolbarbutton__onglobalfontschanged)) by changing the font of the control to that of the global font."},{"pos":[23381,23545],"content":"For more information about global options that are available to your application, see <bpt id=\"p1\">[</bpt>AFX_GLOBAL_DATA Structure<ept id=\"p1\">](../../mfc/reference/afx-global-data-structure.md)</ept>.","source":"For more information about global options that are available to your application, see [AFX_GLOBAL_DATA Structure](../../mfc/reference/afx-global-data-structure.md)."},{"pos":[23603,23634],"content":"CMFCToolBarDateTimeCtrl::OnMove"},{"content":"Called by the framework when the parent toolbar moves.","pos":[23638,23692]},{"content":"Remarks","pos":[23740,23747]},{"pos":[23751,23989],"content":"This method overrides the default class implementation ( <bpt id=\"p1\">[</bpt>CMFCToolBarButton::OnMove<ept id=\"p1\">](../../mfc/reference/cmfctoolbarbutton-class.md#cmfctoolbarbutton__onmove)</ept>) by updating the position of the internal <ph id=\"ph1\">`CMFCToolBarDateTimeCtrlImpl`</ph> object.","source":"This method overrides the default class implementation ( [CMFCToolBarButton::OnMove](../../mfc/reference/cmfctoolbarbutton-class.md#cmfctoolbarbutton__onmove)) by updating the position of the internal `CMFCToolBarDateTimeCtrlImpl` object."},{"pos":[24047,24078],"content":"CMFCToolBarDateTimeCtrl::OnShow"},{"content":"Called by the framework when the button becomes visible or invisible.","pos":[24082,24151]},{"content":"Parameters","pos":[24209,24219]},{"content":"[in]","pos":[24223,24227]},{"content":"Specifies whether the button is visible.","pos":[24239,24279]},{"content":"If this parameter is <ph id=\"ph1\">`TRUE`</ph>, the button is visible.","pos":[24280,24331],"source":" If this parameter is `TRUE`, the button is visible."},{"content":"Otherwise, the button is not visible.","pos":[24332,24369]},{"content":"Remarks","pos":[24379,24386]},{"content":"This method extends the base class implementation ( <bpt id=\"p1\">[</bpt>CMFCToolBarButton::OnShow<ept id=\"p1\">](../../mfc/reference/cmfctoolbarbutton-class.md#cmfctoolbarbutton__onshow)</ept>) by displaying the button if <ph id=\"ph1\">`bShow`</ph> is <ph id=\"ph2\">`TRUE`</ph>.","pos":[24390,24591],"source":"This method extends the base class implementation ( [CMFCToolBarButton::OnShow](../../mfc/reference/cmfctoolbarbutton-class.md#cmfctoolbarbutton__onshow)) by displaying the button if `bShow` is `TRUE`."},{"content":"Otherwise, this method hides the button.","pos":[24592,24632]},{"pos":[24690,24721],"content":"CMFCToolBarDateTimeCtrl::OnSize"},{"content":"Called by the framework when the parent toolbar changes its size or position and this change causes the button to change size.","pos":[24725,24851]},{"content":"Parameters","pos":[24908,24918]},{"content":"[in]","pos":[24922,24926]},{"content":"The new width of the button, in pixels.","pos":[24938,24977]},{"content":"Remarks","pos":[24987,24994]},{"pos":[24998,25245],"content":"This method overrides the default class implementation ( <bpt id=\"p1\">[</bpt>CMFCToolBarButton::OnSize<ept id=\"p1\">](../../mfc/reference/cmfctoolbarbutton-class.md#cmfctoolbarbutton__onsize)</ept>) by updating the size and position of the internal <ph id=\"ph1\">`CMFCToolBarDateTimeCtrlImpl`</ph> object.","source":"This method overrides the default class implementation ( [CMFCToolBarButton::OnSize](../../mfc/reference/cmfctoolbarbutton-class.md#cmfctoolbarbutton__onsize)) by updating the size and position of the internal `CMFCToolBarDateTimeCtrlImpl` object."},{"pos":[25312,25352],"content":"CMFCToolBarDateTimeCtrl::OnUpdateToolTip"},{"content":"Called by the framework when the parent toolbar updates its tooltip text.","pos":[25356,25429]},{"content":"Parameters","pos":[25583,25593]},{"content":"[in]","pos":[25597,25601]},{"content":"The parent window.","pos":[25618,25636]},{"content":"[in]","pos":[25643,25647]},{"content":"The zero-based index of the button in the parent button collection.","pos":[25666,25733]},{"content":"[in]","pos":[25740,25744]},{"content":"The control that displays the tooltip text.","pos":[25761,25804]},{"content":"[out]","pos":[25811,25816]},{"content":"A <ph id=\"ph1\">`CString`</ph> object that receives the updated tooltip text.","pos":[25826,25884],"source":" A `CString` object that receives the updated tooltip text."},{"content":"Return Value","pos":[25894,25906]},{"content":"Nonzero if the method updates the tooltip text; otherwise 0.","pos":[25910,25970]},{"content":"Remarks","pos":[25980,25987]},{"content":"This method extends the base class implementation ( <bpt id=\"p1\">[</bpt>CMFCToolBarButton::OnUpdateToolTip<ept id=\"p1\">](../../mfc/reference/cmfctoolbarbutton-class.md#cmfctoolbarbutton__onupdatetooltip)</ept>) by displaying the tooltip text that is associated with the button.","pos":[25991,26230],"source":"This method extends the base class implementation ( [CMFCToolBarButton::OnUpdateToolTip](../../mfc/reference/cmfctoolbarbutton-class.md#cmfctoolbarbutton__onupdatetooltip)) by displaying the tooltip text that is associated with the button."},{"content":"If the button is not docked horizontally, this method does nothing and returns <ph id=\"ph1\">`FALSE`</ph>.","pos":[26231,26318],"source":" If the button is not docked horizontally, this method does nothing and returns `FALSE`."},{"pos":[26377,26409],"content":"CMFCToolBarDateTimeCtrl::SetTime"},{"content":"Sets the time and date in the time picker control.","pos":[26413,26463]},{"content":"Parameters","pos":[26611,26621]},{"content":"In the first version, a reference to a <bpt id=\"p1\">[</bpt>COleDateTime Class<ept id=\"p1\">](../../atl-mfc-shared/reference/coledatetime-class.md)</ept> object that contains the time to which the control will be set.","pos":[26643,26820],"source":" In the first version, a reference to a [COleDateTime Class](../../atl-mfc-shared/reference/coledatetime-class.md) object that contains the time to which the control will be set."},{"content":"In the second version, a pointer to a <bpt id=\"p1\">[</bpt>CTime<ept id=\"p1\">](../../atl-mfc-shared/reference/ctime-class.md)</ept> object that contains the time to which the control will be set.","pos":[26821,26977],"source":" In the second version, a pointer to a [CTime](../../atl-mfc-shared/reference/ctime-class.md) object that contains the time to which the control will be set."},{"content":"A pointer to the <bpt id=\"p1\">[</bpt>SYSTEMTIME<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms724950)</ept> structure that contains the time to which the control will be set.","pos":[27003,27159],"source":" A pointer to the [SYSTEMTIME](http://msdn.microsoft.com/library/windows/desktop/ms724950) structure that contains the time to which the control will be set."},{"content":"Return Value","pos":[27169,27181]},{"content":"Nonzero if successful; otherwise 0.","pos":[27185,27220]},{"content":"Remarks","pos":[27230,27237]},{"pos":[27241,27392],"content":"Sets the time in a date and time picker control by calling <bpt id=\"p1\">[</bpt>CDateTimeCtrl::SetTime<ept id=\"p1\">](../../mfc/reference/cdatetimectrl-class.md#cdatetimectrl__settime)</ept>.","source":"Sets the time in a date and time picker control by calling [CDateTimeCtrl::SetTime](../../mfc/reference/cdatetimectrl-class.md#cdatetimectrl__settime)."},{"pos":[27454,27489],"content":"CMFCToolBarDateTimeCtrl::SetTimeAll"},{"content":"Sets the time and date in all instances of the time picker control that have a specified command ID.","pos":[27493,27593]},{"content":"Parameters","pos":[27841,27851]},{"content":"Specifies a toolbar button's command ID.","pos":[27871,27911]},{"content":"In the first version, a <bpt id=\"p1\">[</bpt>COleDateTime Class<ept id=\"p1\">](../../atl-mfc-shared/reference/coledatetime-class.md)</ept> object that contains the time to which the control will be set.","pos":[27936,28098],"source":" In the first version, a [COleDateTime Class](../../atl-mfc-shared/reference/coledatetime-class.md) object that contains the time to which the control will be set."},{"content":"In the second version, a pointer to a <bpt id=\"p1\">[</bpt>CTime<ept id=\"p1\">](../../atl-mfc-shared/reference/ctime-class.md)</ept> object that contains the time to which the control will be set.","pos":[28099,28255],"source":" In the second version, a pointer to a [CTime](../../atl-mfc-shared/reference/ctime-class.md) object that contains the time to which the control will be set."},{"content":"A pointer to the <bpt id=\"p1\">[</bpt>SYSTEMTIME<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms724950)</ept> structure that contains the time to which the control will be set.","pos":[28281,28437],"source":" A pointer to the [SYSTEMTIME](http://msdn.microsoft.com/library/windows/desktop/ms724950) structure that contains the time to which the control will be set."},{"content":"Return Value","pos":[28447,28459]},{"content":"Nonzero if successful; otherwise 0.","pos":[28463,28498]},{"content":"Remarks","pos":[28508,28515]},{"pos":[28519,28709],"content":"Looks for a toolbar button with the specified command ID and sets the time in a date and time picker control by calling <bpt id=\"p1\">[</bpt>CMFCToolBarDateTimeCtrl::SetTime<ept id=\"p1\">](#cmfctoolbardatetimectrl__settime)</ept>.","source":"Looks for a toolbar button with the specified command ID and sets the time in a date and time picker control by calling [CMFCToolBarDateTimeCtrl::SetTime](#cmfctoolbardatetimectrl__settime)."},{"content":"See Also","pos":[28718,28726]},{"content":"Hierarchy Chart","pos":[28731,28746]},{"content":"Classes","pos":[28783,28790]},{"content":"CMFCToolBarButton Class","pos":[28833,28856]},{"content":"Walkthrough: Putting Controls On Toolbars","pos":[28911,28952]}],"content":"---\ntitle: \"CMFCToolBarDateTimeCtrl Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"OnDrawOnCustomizeList\"\n  - \"CMFCToolBarDateTimeCtrl::OnDraw\"\n  - \"OnDraw\"\n  - \"CMFCToolBarDateTimeCtrl.Serialize\"\n  - \"CMFCToolBarDateTimeCtrl.OnSize\"\n  - \"CMFCToolBarDateTimeCtrl.OnDrawOnCustomizeList\"\n  - \"OnSize\"\n  - \"OnCalculateSize\"\n  - \"CMFCToolBarDateTimeCtrl\"\n  - \"CMFCToolBarDateTimeCtrl::OnCalculateSize\"\n  - \"SetStyle\"\n  - \"CMFCToolBarDateTimeCtrl::OnDrawOnCustomizeList\"\n  - \"CMFCToolBarDateTimeCtrl.OnDraw\"\n  - \"CMFCToolBarDateTimeCtrl.SetStyle\"\n  - \"CMFCToolBarDateTimeCtrl::SetStyle\"\n  - \"CMFCToolBarDateTimeCtrl.OnCalculateSize\"\n  - \"CMFCToolBarDateTimeCtrl::Serialize\"\n  - \"CMFCToolBarDateTimeCtrl::OnSize\"\n  - \"Serialize\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"SetStyle method\"\n  - \"OnCalculateSize method\"\n  - \"OnDraw method\"\n  - \"OnDrawOnCustomizeList method\"\n  - \"CMFCToolBarDateTimeCtrl class\"\n  - \"Serialize method\"\n  - \"OnSize method\"\nms.assetid: a3853cb9-8ebc-444f-a1e4-9cf905e24c18\ncaps.latest.revision: 30\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# CMFCToolBarDateTimeCtrl Class\nA toolbar button that contains a date and time picker control.  \n  \n## Syntax  \n  \n```  \nclass CMFCToolBarDateTimeCtrl : public CMFCToolBarButton  \n```  \n  \n## Members  \n  \n### Public Constructors  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CMFCToolBarDateTimeCtrl::CMFCToolBarDateTimeCtrl](#cmfctoolbardatetimectrl__cmfctoolbardatetimectrl)|Constructs a `CMFCToolBarDateTimeCtrl` object.|  \n|`CMFCToolBarDateTimeCtrl::~CMFCToolBarDateTimeCtrl`|Destructor.|  \n  \n### Public Methods  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CMFCToolBarDateTimeCtrl::CanBeStretched](#cmfctoolbardatetimectrl__canbestretched)|Specifies whether a user can stretch the button during customization. (Overrides [CMFCToolBarButton::CanBeStretched](../../mfc/reference/cmfctoolbarbutton-class.md#cmfctoolbarbutton__canbestretched).)|  \n|[CMFCToolBarDateTimeCtrl::CopyFrom](#cmfctoolbardatetimectrl__copyfrom)|Copies the properties of another toolbar button to the current button. (Overrides [CMFCToolBarButton::CopyFrom](../../mfc/reference/cmfctoolbarbutton-class.md#cmfctoolbarbutton__copyfrom).)|  \n|`CMFCToolBarDateTimeCtrl::DuplicateData`|Reserved for future use.|  \n|[CMFCToolBarButton::ExportToMenuButton](../../mfc/reference/cmfctoolbarbutton-class.md#cmfctoolbarbutton__exporttomenubutton)|Copies text from the toolbar button to a menu.|  \n|`CMFCToolBarDateTimeCtrl::CreateObject`|Used by the framework to create a dynamic instance of this class type.|  \n|[CMFCToolBarDateTimeCtrl::GetByCmd](#cmfctoolbardatetimectrl__getbycmd)|Retrieves the first `CMFCToolBarDateTimeCtrl` object in the application that has the specified command ID.|  \n|[CMFCToolBarDateTimeCtrl::GetDateTimeCtrl](#cmfctoolbardatetimectrl__getdatetimectrl)|Returns a pointer to the date and time picker control.|  \n|[CMFCToolBarDateTimeCtrl::GetHwnd](#cmfctoolbardatetimectrl__gethwnd)|Retrieves the window handle that is associated with the toolbar button. (Overrides [CMFCToolBarButton::GetHwnd](../../mfc/reference/cmfctoolbarbutton-class.md#cmfctoolbarbutton__gethwnd).)|  \n|`CMFCToolBarDateTimeCtrl::GetThisClass`|Used by the framework to obtain a pointer to the [CRuntimeClass](../../mfc/reference/cruntimeclass-structure.md) object that is associated with this class type.|  \n|[CMFCToolBarDateTimeCtrl::GetTime](#cmfctoolbardatetimectrl__gettime)|Gets the selected time from a date and time picker control and puts it in a specified [SYSTEMTIME](http://msdn.microsoft.com/library/windows/desktop/ms724950) structure.|  \n|[CMFCToolBarDateTimeCtrl::GetTimeAll](#cmfctoolbardatetimectrl__gettimeall)|Returns the selected time from the time picker control button that has a specified command ID.|  \n|[CMFCToolBarDateTimeCtrl::HaveHotBorder](#cmfctoolbardatetimectrl__havehotborder)|Determines whether a border of the button is displayed when a user selects the button. (Overrides [CMFCToolBarButton::HaveHotBorder](../../mfc/reference/cmfctoolbarbutton-class.md#cmfctoolbarbutton__havehotborder).)|  \n|[CMFCToolBarDateTimeCtrl::NotifyCommand](#cmfctoolbardatetimectrl__notifycommand)|Specifies whether the button processes the [WM_COMMAND](http://msdn.microsoft.com/library/windows/desktop/ms647591) message. (Overrides [CMFCToolBarButton::NotifyCommand](../../mfc/reference/cmfctoolbarbutton-class.md#cmfctoolbarbutton__notifycommand).)|  \n|[CMFCToolBarDateTimeCtrl::OnAddToCustomizePage](#cmfctoolbardatetimectrl__onaddtocustomizepage)|Called by the framework when the button is added to a **Customize** dialog box. (Overrides [CMFCToolBarButton::OnAddToCustomizePage](../../mfc/reference/cmfctoolbarbutton-class.md#cmfctoolbarbutton__onaddtocustomizepage).)|  \n|`CMFCToolBarDateTimeCtrl::OnCalculateSize`|Called by the framework to calculate the size of the button for the specified device context and docking state. (Overrides [CMFCToolBarButton::OnCalculateSize](../../mfc/reference/cmfctoolbarbutton-class.md#cmfctoolbarbutton__oncalculatesize).)|  \n|[CMFCToolBarDateTimeCtrl::OnChangeParentWnd](#cmfctoolbardatetimectrl__onchangeparentwnd)|Called by the framework when the button is inserted into a new toolbar. (Overrides [CMFCToolBarButton::OnChangeParentWnd](../../mfc/reference/cmfctoolbarbutton-class.md#cmfctoolbarbutton__onchangeparentwnd).)|  \n|[CMFCToolBarDateTimeCtrl::OnClick](#cmfctoolbardatetimectrl__onclick)|Called by the framework when the user clicks the control. (Overrides [CMFCToolBarButton::OnClick](../../mfc/reference/cmfctoolbarbutton-class.md#cmfctoolbarbutton__onclick).)|  \n|[CMFCToolBarDateTimeCtrl::OnCtlColor](#cmfctoolbardatetimectrl__onctlcolor)|Called by the framework when the parent toolbar handles a `WM_CTLCOLOR` message. (Overrides [CMFCToolBarButton::OnCtlColor](../../mfc/reference/cmfctoolbarbutton-class.md#cmfctoolbarbutton__onctlcolor).)|  \n|`CMFCToolBarDateTimeCtrl::OnDraw`|Called by the framework to draw the button by using the specified styles and options. (Overrides [CMFCToolBarButton::OnDraw](../../mfc/reference/cmfctoolbarbutton-class.md#cmfctoolbarbutton__ondraw).)|  \n|`CMFCToolBarDateTimeCtrl::OnDrawOnCustomizeList`|Called by the framework to draw the button in the **Commands** pane of the **Customize** dialog box. (Overrides [CMFCToolBarButton::OnDrawOnCustomizeList](../../mfc/reference/cmfctoolbarbutton-class.md#cmfctoolbarbutton__ondrawoncustomizelist).)|  \n|[CMFCToolBarDateTimeCtrl::OnGlobalFontsChanged](#cmfctoolbardatetimectrl__onglobalfontschanged)|Called by the framework when the global font has changed. (Overrides [CMFCToolBarButton::OnGlobalFontsChanged](../../mfc/reference/cmfctoolbarbutton-class.md#cmfctoolbarbutton__onglobalfontschanged).)|  \n|[CMFCToolBarDateTimeCtrl::OnMove](#cmfctoolbardatetimectrl__onmove)|Called by the framework when the parent toolbar moves. (Overrides [CMFCToolBarButton::OnMove](../../mfc/reference/cmfctoolbarbutton-class.md#cmfctoolbarbutton__onmove).)|  \n|[CMFCToolBarDateTimeCtrl::OnShow](#cmfctoolbardatetimectrl__onshow)|Called by the framework when the button becomes visible or invisible. (Overrides [CMFCToolBarButton::OnShow](../../mfc/reference/cmfctoolbarbutton-class.md#cmfctoolbarbutton__onshow).)|  \n|`CMFCToolBarDateTimeCtrl::OnSize`|Called by the framework when the parent toolbar changes its size or position and this change causes the button to change size. (Overrides [CMFCToolBarButton::OnSize](../../mfc/reference/cmfctoolbarbutton-class.md#cmfctoolbarbutton__onsize).)|  \n|[CMFCToolBarDateTimeCtrl::OnUpdateToolTip](#cmfctoolbardatetimectrl__onupdatetooltip)|Called by the framework when the parent toolbar updates its tooltip text. (Overrides [CMFCToolBarButton::OnUpdateToolTip](../../mfc/reference/cmfctoolbarbutton-class.md#cmfctoolbarbutton__onupdatetooltip).)|  \n|`CMFCToolBarDateTimeCtrl::Serialize`|Reads this object from an archive or writes it to an archive, (Overrides [CMFCToolBarButton::Serialize](../../mfc/reference/cmfctoolbarbutton-class.md#cmfctoolbarbutton__serialize).)|  \n|`CMFCToolBarDateTimeCtrl::SetStyle`|Sets the style of the toolbar button. (Overrides [CMFCToolBarButton::SetStyle](../../mfc/reference/cmfctoolbarbutton-class.md#cmfctoolbarbutton__setstyle).)|  \n|[CMFCToolBarDateTimeCtrl::SetTime](#cmfctoolbardatetimectrl__settime)|Sets the time and date in the time picker control.|  \n|[CMFCToolBarDateTimeCtrl::SetTimeAll](#cmfctoolbardatetimectrl__settimeall)|Sets the time and date in all instances of the time picker control that have a specified command ID.|  \n  \n## Remarks  \n For an example of how to use a date and time picker control, see the ToolbarDateTimePicker sample project. For information about how to add control buttons to toolbars, see [Walkthrough: Putting Controls On Toolbars](../../mfc/walkthrough-putting-controls-on-toolbars.md).  \n  \n## Inheritance Hierarchy  \n [CObject](../../mfc/reference/cobject-class.md)  \n  \n [CMFCToolBarButton](../../mfc/reference/cmfctoolbarbutton-class.md)  \n  \n [CMFCToolBarDateTimeCtrl](../../mfc/reference/cmfctoolbardatetimectrl-class.md)  \n  \n## Requirements  \n **Header:** afxtoolbardatetimectrl.h  \n  \n##  <a name=\"cmfctoolbardatetimectrl__canbestretched\"></a>  CMFCToolBarDateTimeCtrl::CanBeStretched  \n Specifies whether a user can stretch the button during customization.  \n  \n```  \nvirtual BOOL CanBeStretched() const;\n\n \n```  \n  \n### Return Value  \n This method returns `TRUE`.  \n  \n### Remarks  \n By default, the framework does not allow the user to stretch a toolbar button during customization. This method extends the base class implementation ( [CMFCToolBarButton::CanBeStretched](../../mfc/reference/cmfctoolbarbutton-class.md#cmfctoolbarbutton__canbestretched)) by allowing the user to stretch a date and time toolbar button during customization.  \n  \n##  <a name=\"cmfctoolbardatetimectrl__cmfctoolbardatetimectrl\"></a>  CMFCToolBarDateTimeCtrl::CMFCToolBarDateTimeCtrl  \n Creates and initializes a [CMFCToolBarDateTimeCtrl](../../mfc/reference/cmfctoolbardatetimectrl-class.md) object.  \n  \n```  \nCMFCToolBarDateTimeCtrl(\n    UINT uiID,  \n    int iImage,  \n    DWORD dwStyle=0,  \n    int iWidth=0);\n```  \n  \n### Parameters  \n [in] `uiID`  \n The control ID.  \n  \n [in] `iImage`  \n The index of the image in the toolbar's `CMFCToolBarImages` object.  \n  \n [in] `dwStyle`  \n The style of the `CMFCToolBarDateTimeCtrlImpl` window that is created when a user clicks the button.  \n  \n [in] `iWidth`  \n The width of the control, in pixels.  \n  \n### Remarks  \n This object is initialized to the system date and time. The window style of the internal `CMFCToolBarDateTimeCtrlImpl` object includes the `dwStyle` parameter and the `WS_CHILD` and `WS_VISIBLE` styles. You cannot change these styles by using `CMFCToolBarDateTimeCtrl::SetStyle`. Use `SetStyle` to change the style of the `CMFCToolBarDateTimeCtrl` control.  \n  \n### Example  \n The following example demonstrates how to construct an object of the `CMFCToolBarDateTimeCtrl` class. This code snippet is part of the [Toolbar Date Time Picker sample](../../visual-cpp-samples.md).  \n  \n [!code-cpp[NVC_MFC_ToolbarDateTimePicker#1](../../mfc/reference/codesnippet/cpp/cmfctoolbardatetimectrl-class_1.cpp)]  \n  \n##  <a name=\"cmfctoolbardatetimectrl__copyfrom\"></a>  CMFCToolBarDateTimeCtrl::CopyFrom  \n Copies the properties of another toolbar button to the current button.  \n  \n```  \nvirtual void CopyFrom(const CMFCToolBarButton& src);\n```  \n  \n### Parameters  \n [in] `src`  \n A reference to the source button from which to copy.  \n  \n### Remarks  \n Call this method to copy another toolbar button to this toolbar button. `src` must be of type `CMFCToolBarDateTimeCtrl`.  \n  \n##  <a name=\"cmfctoolbardatetimectrl__exporttomenubutton\"></a>  CMFCToolBarDateTimeCtrl::ExportToMenuButton  \n Copies text from the toolbar button to a menu.  \n  \n```  \nvirtual BOOL ExportToMenuButton(CMFCToolBarMenuButton& menuButton) const;\n\n \n```  \n  \n### Parameters  \n [in] `menuButton`  \n A reference to the target menu button.  \n  \n### Return Value  \n This method returns `TRUE`.  \n  \n### Remarks  \n This method overrides the base class implementation ( [CMFCToolBarButton::ExportToMenuButton](../../mfc/reference/cmfctoolbarbutton-class.md#cmfctoolbarbutton__exporttomenubutton)) by loading the string resource that is associated with the command ID of the control. For more information about string resources, see [CStringT::LoadString](../../atl-mfc-shared/reference/cstringt-class.md#cstringt__loadstring).  \n  \n##  <a name=\"cmfctoolbardatetimectrl__getbycmd\"></a>  CMFCToolBarDateTimeCtrl::GetByCmd  \n Retrieves the first `CMFCToolBarDateTimeCtrl` object in the application that has the specified command ID.  \n  \n```  \nstatic CMFCToolBarDateTimeCtrl* __stdcall GetByCmd(UINT uiCmd);\n```  \n  \n### Parameters  \n [in] `uiCmd`  \n The command ID of the button to retrieve.  \n  \n### Return Value  \n The first `CMFCToolBarDateTimeCtrl` object in the application that has the specified command ID, or `NULL` if no `CMFCToolBarDateTimeCtrl` objects have the specified command ID.  \n  \n### Remarks  \n This shared utility method is used by methods such as [CMFCToolBarDateTimeCtrl::SetTimeAll](#cmfctoolbardatetimectrl__settimeall) and [CMFCToolBarDateTimeCtrl::GetTimeAll](#cmfctoolbardatetimectrl__gettimeall) to set or get the time and date of all instances of the time picker control that have a specified command ID.  \n  \n##  <a name=\"cmfctoolbardatetimectrl__getdatetimectrl\"></a>  CMFCToolBarDateTimeCtrl::GetDateTimeCtrl  \n Returns a pointer to the date and time picker control.  \n  \n```  \nCDateTimeCtrl* GetDateTimeCtrl() const;\n\n \n```  \n  \n### Return Value  \n A pointer to date and time picker control; or `NULL` if the control does not exist.  \n  \n### Remarks  \n The `CMFCToolBarDateTimeCtrl` class initializes the `m_pWndDateTime` data member when you insert a `CMFCToolBarDateTimeCtrl` object into a toolbar.  \n  \n##  <a name=\"cmfctoolbardatetimectrl__gethwnd\"></a>  CMFCToolBarDateTimeCtrl::GetHwnd  \n Retrieves the window handle that is associated with the toolbar button.  \n  \n```  \nvirtual HWND GetHwnd();\n```  \n  \n### Return Value  \n The window handle that is associated with the date and time toolbar button.  \n  \n### Remarks  \n This method overrides the [CMFCToolBarButton::GetHwnd](../../mfc/reference/cmfctoolbarbutton-class.md#cmfctoolbarbutton__gethwnd) method.  \n  \n##  <a name=\"cmfctoolbardatetimectrl__gettime\"></a>  CMFCToolBarDateTimeCtrl::GetTime  \n Gets the selected time from the associated date and time picker control and puts it in a specified [SYSTEMTIME](http://msdn.microsoft.com/library/windows/desktop/ms724950) structure  \n  \n```  \nBOOL GetTime(COleDateTime& timeDest) const;\n\n \nDWORD GetTime(CTime& timeDest) const;\n\n \nDWORD GetTime(LPSYSTEMTIME pTimeDest) const;\n\n \n \n```  \n  \n### Parameters  \n `[out] timeDest`  \n In the first overload, a [COleDateTime Class](../../atl-mfc-shared/reference/coledatetime-class.md) object that will receive the system time information. In the second overload, a [CTime](../../atl-mfc-shared/reference/ctime-class.md) object that will receive the system time information.  \n  \n `[out] pTimeDest`  \n A pointer to the [SYSTEMTIME](http://msdn.microsoft.com/library/windows/desktop/ms724950) structure to receive the system time information. Must not be `NULL`.  \n  \n### Return Value  \n In the first overload, nonzero if the time is successfully written to the [COleDateTime Class](../../atl-mfc-shared/reference/coledatetime-class.md) object; otherwise 0. In the second and third overloads, the return value is a `DWORD` that is equal to the dwFlag member that was set in the [NMDATETIMECHANGE](http://msdn.microsoft.com/library/windows/desktop/bb761730) structure.  \n  \n### Remarks  \n The method sets the [NMDATETIMECHANGE](http://msdn.microsoft.com/library/windows/desktop/bb761730) structure member dwFlags to indicate whether the date and time picker is set to a date and time. If the value equals GDT_NONE, the control is set to `no date` status, and uses the DTS_SHOWNONE style. If the value returned equals GDT_VALID, the system time is successfully stored in the destination location.  \n  \n##  <a name=\"cmfctoolbardatetimectrl__gettimeall\"></a>  CMFCToolBarDateTimeCtrl::GetTimeAll  \n Returns the time selected by the user from the time picker control button that has a specified command ID.  \n  \n```  \nstatic BOOL GetTimeAll(\n    UINT uiCmd,  \n    COleDateTime& timeDest);\n\nstatic DWORD GetTimeAll(\n    UINT uiCmd,  \n    CTime& timeDest);\n\nstatic DWORD GetTimeAll(\n    UINT uiCmd,  \n    LPSYSTEMTIME pTimeDest);\n```  \n  \n### Parameters  \n `[in] uiCmd`  \n Specifies a toolbar button's command ID.  \n  \n `[out] timeDest`  \n In the first overload, a [COleDateTime Class](../../atl-mfc-shared/reference/coledatetime-class.md) object that will receive the system time information. In the second overload, a [CTime](../../atl-mfc-shared/reference/ctime-class.md) object that will receive the system time information.  \n  \n `[out] pTimeDest`  \n A pointer to the [SYSTEMTIME](http://msdn.microsoft.com/library/windows/desktop/ms724950) structure to receive the system time information. Must not be `NULL`.  \n  \n### Return Value  \n If the framework cannot find a toolbar button that matches the command ID `uiCmd`, the return value is zero in the first overload, and GDT_NONE in the other overloads. If the toolbar button is found, the return value is the same as the return value from a call to [CMFCToolBarDateTimeCtrl::GetTime](#cmfctoolbardatetimectrl__gettime) on that button. A return value of zero or GDT_NONE can occur when the button is found, which indicates that the call to `GetTime` did not return a valid date for some other reason.  \n  \n### Remarks  \n This method looks for a toolbar button that has the specified command ID and calls [CMFCToolBarDateTimeCtrl::GetTime](#cmfctoolbardatetimectrl__gettime) method on that button.  \n  \n##  <a name=\"cmfctoolbardatetimectrl__havehotborder\"></a>  CMFCToolBarDateTimeCtrl::HaveHotBorder  \n Determines whether a border of the button is displayed when a user selects the button.  \n  \n```  \nvirtual BOOL HaveHotBorder() const;\n\n \n```  \n  \n### Return Value  \n Nonzero if a button displays its border when selected; otherwise 0.  \n  \n### Remarks  \n This method returns a nonzero value if the control is visible.  \n  \n##  <a name=\"cmfctoolbardatetimectrl__notifycommand\"></a>  CMFCToolBarDateTimeCtrl::NotifyCommand  \n Specifies whether the button processes the [WM_COMMAND](http://msdn.microsoft.com/library/windows/desktop/ms647591) message.  \n  \n```  \nvirtual BOOL NotifyCommand(int iNotifyCode);\n```  \n  \n### Parameters  \n [in] `iNotifyCode`  \n The notification message that is associated with the command.  \n  \n### Return Value  \n `TRUE` if the button processes the `WM_COMMAND` message, or `FALSE` to indicate that the message should be handled by the parent toolbar.  \n  \n### Remarks  \n The framework calls this method when it is about to send a [WM_COMMAND](http://msdn.microsoft.com/library/windows/desktop/ms647591) message to the parent window.  \n  \n This method extends the base class implementation ( [CMFCToolBarButton::NotifyCommand](../../mfc/reference/cmfctoolbarbutton-class.md#cmfctoolbarbutton__notifycommand)) by processing the [DTN_DATETIMECHANGE](http://msdn.microsoft.com/library/windows/desktop/bb761737) notification. It updates the internal time status and updates the time property of all `CMFCToolBarDateTimeCtrl` objects with the same command ID.  \n  \n##  <a name=\"cmfctoolbardatetimectrl__onaddtocustomizepage\"></a>  CMFCToolBarDateTimeCtrl::OnAddToCustomizePage  \n Called by the framework when the button is added to a **Customize** dialog box.  \n  \n```  \nvirtual void OnAddToCustomizePage();\n```  \n  \n### Remarks  \n This method extends the base class implementation, [CMFCToolBarButton::OnAddToCustomizePage](../../mfc/reference/cmfctoolbarbutton-class.md#cmfctoolbarbutton__onaddtocustomizepage), by copying the properties from the first date and time control in any toolbar that has the same command ID as this object. This method does nothing if no toolbar has a date and time control that has the same command ID as this object.  \n  \n For more information about the **Customize** dialog box, see [CMFCToolBarsCustomizeDialog Class](../../mfc/reference/cmfctoolbarscustomizedialog-class.md).  \n  \n##  <a name=\"cmfctoolbardatetimectrl__onchangeparentwnd\"></a>  CMFCToolBarDateTimeCtrl::OnChangeParentWnd  \n Called by the framework when the button is inserted into a new toolbar.  \n  \n```  \nvirtual void OnChangeParentWnd(CWnd* pWndParent);\n```  \n  \n### Parameters  \n [in] `pWndParent`  \n The new parent window.  \n  \n### Remarks  \n This method overrides the base class implementation ( [CMFCToolBarButton::OnChangeParentWnd](../../mfc/reference/cmfctoolbarbutton-class.md#cmfctoolbarbutton__onchangeparentwnd)) by recreating the internal `CMFCToolBarDateTimeCtrlImpl` object.  \n  \n##  <a name=\"cmfctoolbardatetimectrl__onclick\"></a>  CMFCToolBarDateTimeCtrl::OnClick  \n Called by the framework when the user clicks the control.  \n  \n```  \nvirtual BOOL OnClick(\n    CWnd* pWnd,  \n    BOOL bDelay = TRUE);\n```  \n  \n### Parameters  \n [in] `pWnd`  \n Unused.  \n  \n [in] `bDelay`  \n Unused.  \n  \n### Return Value  \n Nonzero if the button processes the click message; otherwise 0.  \n  \n### Remarks  \n This method overrides the base class implementation, [CMFCToolBarButton::OnClick](../../mfc/reference/cmfctoolbarbutton-class.md#cmfctoolbarbutton__onclick), by returning a nonzero value if the internal `CMFCToolBarDateTimeCtrlImpl` object is visible.  \n  \n##  <a name=\"cmfctoolbardatetimectrl__onctlcolor\"></a>  CMFCToolBarDateTimeCtrl::OnCtlColor  \n Called by the framework when the parent toolbar handles a `WM_CTLCOLOR` message.  \n  \n```  \nvirtual HBRUSH OnCtlColor(\n    CDC* pDC,  \n    UINT nCtlColor);\n```  \n  \n### Parameters  \n [in] `pDC`  \n The device context that displays the button.  \n  \n [in] `nCtlColor`  \n Unused.  \n  \n### Return Value  \n A handle to the global brush that the framework uses to paint the background of the button.  \n  \n### Remarks  \n This method overrides the base class implementation, [CMFCToolBarButton::OnCtlColor](../../mfc/reference/cmfctoolbarbutton-class.md#cmfctoolbarbutton__onctlcolor), by setting the text and background colors of the provided device context to the global text and background colors, respectively.  \n  \n For more information about global options that are available to your application, see [AFX_GLOBAL_DATA Structure](../../mfc/reference/afx-global-data-structure.md).  \n  \n##  <a name=\"cmfctoolbardatetimectrl__onglobalfontschanged\"></a>  CMFCToolBarDateTimeCtrl::OnGlobalFontsChanged  \n Called by the framework when the global font has changed.  \n  \n```  \nvirtual void OnGlobalFontsChanged();\n```  \n  \n### Remarks  \n This method extends the base class implementation ( [CMFCToolBarButton::OnGlobalFontsChanged](../../mfc/reference/cmfctoolbarbutton-class.md#cmfctoolbarbutton__onglobalfontschanged)) by changing the font of the control to that of the global font.  \n  \n For more information about global options that are available to your application, see [AFX_GLOBAL_DATA Structure](../../mfc/reference/afx-global-data-structure.md).  \n  \n##  <a name=\"cmfctoolbardatetimectrl__onmove\"></a>  CMFCToolBarDateTimeCtrl::OnMove  \n Called by the framework when the parent toolbar moves.  \n  \n```  \nvirtual void OnMove();\n```  \n  \n### Remarks  \n This method overrides the default class implementation ( [CMFCToolBarButton::OnMove](../../mfc/reference/cmfctoolbarbutton-class.md#cmfctoolbarbutton__onmove)) by updating the position of the internal `CMFCToolBarDateTimeCtrlImpl` object.  \n  \n##  <a name=\"cmfctoolbardatetimectrl__onshow\"></a>  CMFCToolBarDateTimeCtrl::OnShow  \n Called by the framework when the button becomes visible or invisible.  \n  \n```  \nvirtual void OnShow(BOOL bShow);\n```  \n  \n### Parameters  \n [in] `bShow`  \n Specifies whether the button is visible. If this parameter is `TRUE`, the button is visible. Otherwise, the button is not visible.  \n  \n### Remarks  \n This method extends the base class implementation ( [CMFCToolBarButton::OnShow](../../mfc/reference/cmfctoolbarbutton-class.md#cmfctoolbarbutton__onshow)) by displaying the button if `bShow` is `TRUE`. Otherwise, this method hides the button.  \n  \n##  <a name=\"cmfctoolbardatetimectrl__onsize\"></a>  CMFCToolBarDateTimeCtrl::OnSize  \n Called by the framework when the parent toolbar changes its size or position and this change causes the button to change size.  \n  \n```  \nvirtual void OnSize(int iSize);\n```  \n  \n### Parameters  \n [in] `iSize`  \n The new width of the button, in pixels.  \n  \n### Remarks  \n This method overrides the default class implementation ( [CMFCToolBarButton::OnSize](../../mfc/reference/cmfctoolbarbutton-class.md#cmfctoolbarbutton__onsize)) by updating the size and position of the internal `CMFCToolBarDateTimeCtrlImpl` object.  \n  \n##  <a name=\"cmfctoolbardatetimectrl__onupdatetooltip\"></a>  CMFCToolBarDateTimeCtrl::OnUpdateToolTip  \n Called by the framework when the parent toolbar updates its tooltip text.  \n  \n```  \nvirtual BOOL OnUpdateToolTip(\n    CWnd* pWndParent,  \n    int iButtonIndex,  \n    CToolTipCtrl& wndToolTip,  \n    CString& str);\n```  \n  \n### Parameters  \n [in] `pWndParent`  \n The parent window.  \n  \n [in] `iButtonIndex`  \n The zero-based index of the button in the parent button collection.  \n  \n [in] `wndToolTip`  \n The control that displays the tooltip text.  \n  \n [out] `str`  \n A `CString` object that receives the updated tooltip text.  \n  \n### Return Value  \n Nonzero if the method updates the tooltip text; otherwise 0.  \n  \n### Remarks  \n This method extends the base class implementation ( [CMFCToolBarButton::OnUpdateToolTip](../../mfc/reference/cmfctoolbarbutton-class.md#cmfctoolbarbutton__onupdatetooltip)) by displaying the tooltip text that is associated with the button. If the button is not docked horizontally, this method does nothing and returns `FALSE`.  \n  \n##  <a name=\"cmfctoolbardatetimectrl__settime\"></a>  CMFCToolBarDateTimeCtrl::SetTime  \n Sets the time and date in the time picker control.  \n  \n```  \nBOOL SetTime(const COleDateTime& timeNew);\n\nBOOL SetTime(const CTime* timeNew);\n\nBOOL SetTime(LPSYSTEMTIME pTimeNew=NULL);\n```  \n  \n### Parameters  \n `[in] timeNew`  \n In the first version, a reference to a [COleDateTime Class](../../atl-mfc-shared/reference/coledatetime-class.md) object that contains the time to which the control will be set. In the second version, a pointer to a [CTime](../../atl-mfc-shared/reference/ctime-class.md) object that contains the time to which the control will be set.  \n  \n `[in] pTimeNew`  \n A pointer to the [SYSTEMTIME](http://msdn.microsoft.com/library/windows/desktop/ms724950) structure that contains the time to which the control will be set.  \n  \n### Return Value  \n Nonzero if successful; otherwise 0.  \n  \n### Remarks  \n Sets the time in a date and time picker control by calling [CDateTimeCtrl::SetTime](../../mfc/reference/cdatetimectrl-class.md#cdatetimectrl__settime).  \n  \n##  <a name=\"cmfctoolbardatetimectrl__settimeall\"></a>  CMFCToolBarDateTimeCtrl::SetTimeAll  \n Sets the time and date in all instances of the time picker control that have a specified command ID.  \n  \n```  \nstatic BOOL SetTimeAll(\n    UINT uiCmd,  \n    const COleDateTime& timeNew);\n\nstatic BOOL SetTimeAll(\n    UINT uiCmd,  \n    const CTime* pTimeNew);\n\nstatic BOOL SetTimeAll(\n    UINT uiCmd,  \n    LPSYSTEMTIME pTimeNew=NULL);\n```  \n  \n### Parameters  \n `[in] uiCmd`  \n Specifies a toolbar button's command ID.  \n  \n `[in] timeNew`  \n In the first version, a [COleDateTime Class](../../atl-mfc-shared/reference/coledatetime-class.md) object that contains the time to which the control will be set. In the second version, a pointer to a [CTime](../../atl-mfc-shared/reference/ctime-class.md) object that contains the time to which the control will be set.  \n  \n `[in] pTimeNew`  \n A pointer to the [SYSTEMTIME](http://msdn.microsoft.com/library/windows/desktop/ms724950) structure that contains the time to which the control will be set.  \n  \n### Return Value  \n Nonzero if successful; otherwise 0.  \n  \n### Remarks  \n Looks for a toolbar button with the specified command ID and sets the time in a date and time picker control by calling [CMFCToolBarDateTimeCtrl::SetTime](#cmfctoolbardatetimectrl__settime).  \n  \n## See Also  \n [Hierarchy Chart](../../mfc/hierarchy-chart.md)   \n [Classes](../../mfc/reference/mfc-classes.md)   \n [CMFCToolBarButton Class](../../mfc/reference/cmfctoolbarbutton-class.md)   \n [Walkthrough: Putting Controls On Toolbars](../../mfc/walkthrough-putting-controls-on-toolbars.md)\n\n\n\n"}