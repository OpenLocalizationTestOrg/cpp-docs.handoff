{"nodes":[{"pos":[12,76],"content":"How to: Implement the lock C# Keyword (C++-CLI) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"How to: Implement the lock C# Keyword (C++-CLI) | Microsoft Docs","pos":[0,64]}]},{"content":"How to: Implement the lock C# Keyword (C++/CLI)","pos":[640,687]},{"pos":[688,758],"content":"This topic shows how to implement the C# <ph id=\"ph1\">`lock`</ph> keyword in Visual C++.","source":"This topic shows how to implement the C# `lock` keyword in Visual C++."},{"content":"You can also use the <ph id=\"ph1\">`lock`</ph> class in the C++ Support Library.","pos":[764,825],"source":"You can also use the `lock` class in the C++ Support Library."},{"content":"See <bpt id=\"p1\">[</bpt>Synchronization (lock Class)<ept id=\"p1\">](../dotnet/synchronization-lock-class.md)</ept> for more information.","pos":[826,923],"source":" See [Synchronization (lock Class)](../dotnet/synchronization-lock-class.md) for more information."},{"content":"Example","pos":[932,939]},{"content":"See Also","pos":[1638,1646]},{"content":"Interoperability with Other .NET Languages (C++/CLI)","pos":[1651,1703]}],"content":"---\ntitle: \"How to: Implement the lock C# Keyword (C++-CLI) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"get-started-article\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"lock statement\"\n  - \"lock C# keyword [C++]\"\nms.assetid: 436fe544-ffb7-49b9-9798-90794e9974de\ncaps.latest.revision: 12\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# How to: Implement the lock C# Keyword (C++/CLI)\nThis topic shows how to implement the C# `lock` keyword in Visual C++. \n  \n You can also use the `lock` class in the C++ Support Library. See [Synchronization (lock Class)](../dotnet/synchronization-lock-class.md) for more information.  \n  \n## Example  \n  \n```  \n// CS_lock_in_CPP.cpp  \n// compile with: /clr  \nusing namespace System::Threading;  \nref class Lock {  \n   Object^ m_pObject;  \npublic:  \n   Lock( Object ^ pObject ) : m_pObject( pObject ) {  \n      Monitor::Enter( m_pObject );  \n   }  \n   ~Lock() {  \n      Monitor::Exit( m_pObject );  \n   }  \n};  \n  \nref struct LockHelper {  \n   void DoSomething();  \n};  \n  \nvoid LockHelper::DoSomething() {  \n   // Note: Reference type with stack allocation semantics to provide   \n   // deterministic finalization  \n  \n   Lock lock( this );     \n   // LockHelper instance is locked  \n}  \n  \nint main()  \n{  \n   LockHelper lockHelper;  \n   lockHelper.DoSomething();  \n   return 0;  \n}  \n```  \n  \n## See Also  \n [Interoperability with Other .NET Languages (C++/CLI)](../dotnet/interoperability-with-other-dotnet-languages-cpp-cli.md)"}