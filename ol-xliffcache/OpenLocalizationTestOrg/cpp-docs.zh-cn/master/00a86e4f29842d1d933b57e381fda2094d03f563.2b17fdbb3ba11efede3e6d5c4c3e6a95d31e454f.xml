{"nodes":[{"pos":[12,43],"content":"COLUMN_NAME_EX | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"COLUMN_NAME_EX | Microsoft Docs","pos":[0,31]}]},{"content":"COLUMN_NAME_EX","pos":[607,621]},{"content":"Represents a binding on the rowset to the specific column in the rowset.","pos":[622,694]},{"content":"Similar to <bpt id=\"p1\">[</bpt>COLUMN_NAME<ept id=\"p1\">](../../data/oledb/column-name.md)</ept>, except that this macro also takes data type, size, precision, scale, column length, and column status.","pos":[695,856],"source":" Similar to [COLUMN_NAME](../../data/oledb/column-name.md), except that this macro also takes data type, size, precision, scale, column length, and column status."},{"content":"Syntax","pos":[865,871]},{"content":"Parameters","pos":[1030,1040]},{"content":"[in] A pointer to the column name.","pos":[1057,1091]},{"content":"The name must be a Unicode string.","pos":[1092,1126]},{"content":"You can accomplish this by putting an 'L' in front of the name, for example: <ph id=\"ph1\">`L\"MyColumn\"`</ph>.","pos":[1127,1218],"source":" You can accomplish this by putting an 'L' in front of the name, for example: `L\"MyColumn\"`."},{"content":"[in] The data type.","pos":[1236,1255]},{"content":"[in] The data size in bytes.","pos":[1275,1303]},{"content":"[in] The maximum precision to use when getting data and <ph id=\"ph1\">`wType`</ph> is <ph id=\"ph2\">`DBTYPE_NUMERIC`</ph>.","pos":[1326,1410],"source":" [in] The maximum precision to use when getting data and `wType` is `DBTYPE_NUMERIC`."},{"content":"Otherwise, this parameter is ignored.","pos":[1411,1448]},{"content":"[in] The scale to use when getting data and <ph id=\"ph1\">`wType`</ph> is <ph id=\"ph2\">`DBTYPE_NUMERIC`</ph> or <bpt id=\"p1\">**</bpt>DBTYPE_DECIMAL<ept id=\"p1\">**</ept>.","pos":[1467,1561],"source":" [in] The scale to use when getting data and `wType` is `DBTYPE_NUMERIC` or **DBTYPE_DECIMAL**."},{"content":"[in] The corresponding data member in the user record.","pos":[1578,1632]},{"content":"length","pos":[1640,1646]},{"content":"[in] The variable to be bound to the column length.","pos":[1651,1702]},{"content":"status","pos":[1710,1716]},{"content":"[in] The variable to be bound to the column status.","pos":[1721,1772]},{"content":"Remarks","pos":[1781,1788]},{"pos":[1792,1907],"content":"See <bpt id=\"p1\">[</bpt>COLUMN_NAME<ept id=\"p1\">](../../data/oledb/column-name.md)</ept> for information on where the <bpt id=\"p2\">**</bpt>COLUMN_NAME_<ph id=\"ph1\">\\*</ph><ept id=\"p2\">**</ept> macros are used.","source":"See [COLUMN_NAME](../../data/oledb/column-name.md) for information on where the **COLUMN_NAME_\\*** macros are used."},{"content":"Requirements","pos":[1916,1928]},{"pos":[1932,1954],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> atldbcli.h","source":"**Header:** atldbcli.h"},{"content":"See Also","pos":[1963,1971]},{"content":"Macros and Global Functions for OLE DB Consumer Templates","pos":[1976,2033]},{"content":"BEGIN_ACCESSOR","pos":[2119,2133]},{"content":"BEGIN_ACCESSOR_MAP","pos":[2176,2194]},{"content":"BEGIN_COLUMN_MAP","pos":[2241,2257]},{"content":"COLUMN_NAME","pos":[2302,2313]},{"content":"COLUMN_NAME_LENGTH","pos":[2353,2371]},{"content":"COLUMN_NAME_LENGTH_STATUS","pos":[2418,2443]},{"content":"COLUMN_NAME_STATUS","pos":[2497,2515]},{"content":"COLUMN_NAME_PS","pos":[2562,2576]},{"content":"COLUMN_NAME_PS_LENGTH","pos":[2619,2640]},{"content":"COLUMN_NAME_PS_STATUS","pos":[2690,2711]},{"content":"COLUMN_NAME_PS_LENGTH_STATUS","pos":[2761,2789]},{"content":"COLUMN_NAME_TYPE","pos":[2846,2862]},{"content":"COLUMN_NAME_TYPE_PS","pos":[2907,2926]},{"content":"COLUMN_NAME_TYPE_SIZE","pos":[2974,2995]},{"content":"COLUMN_NAME_TYPE_STATUS","pos":[3045,3068]}],"content":"---\ntitle: \"COLUMN_NAME_EX | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"COLUMN_NAME_EX\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"COLUMN_NAME_EX macro\"\nms.assetid: 4f916a85-f6ae-464a-9cbe-0a56dbb274a6\ncaps.latest.revision: 7\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# COLUMN_NAME_EX\nRepresents a binding on the rowset to the specific column in the rowset. Similar to [COLUMN_NAME](../../data/oledb/column-name.md), except that this macro also takes data type, size, precision, scale, column length, and column status.  \n  \n## Syntax  \n  \n```  \n  \nCOLUMN_NAME_EX(  \npszName  \n,   \nwType  \n,   \nnLength  \n,   \nnPrecision  \n,   \nnScale  \n,   \ndata  \n,   \nlength  \n,   \nstatus )  \n```  \n  \n#### Parameters  \n `pszName`  \n [in] A pointer to the column name. The name must be a Unicode string. You can accomplish this by putting an 'L' in front of the name, for example: `L\"MyColumn\"`.  \n  \n `wType`  \n [in] The data type.  \n  \n `nLength`  \n [in] The data size in bytes.  \n  \n `nPrecision`  \n [in] The maximum precision to use when getting data and `wType` is `DBTYPE_NUMERIC`. Otherwise, this parameter is ignored.  \n  \n `nScale`  \n [in] The scale to use when getting data and `wType` is `DBTYPE_NUMERIC` or **DBTYPE_DECIMAL**.  \n  \n `data`  \n [in] The corresponding data member in the user record.  \n  \n *length*  \n [in] The variable to be bound to the column length.  \n  \n *status*  \n [in] The variable to be bound to the column status.  \n  \n## Remarks  \n See [COLUMN_NAME](../../data/oledb/column-name.md) for information on where the **COLUMN_NAME_\\*** macros are used.  \n  \n## Requirements  \n **Header:** atldbcli.h  \n  \n## See Also  \n [Macros and Global Functions for OLE DB Consumer Templates](../../data/oledb/macros-and-global-functions-for-ole-db-consumer-templates.md)   \n [BEGIN_ACCESSOR](../../data/oledb/begin-accessor.md)   \n [BEGIN_ACCESSOR_MAP](../../data/oledb/begin-accessor-map.md)   \n [BEGIN_COLUMN_MAP](../../data/oledb/begin-column-map.md)   \n [COLUMN_NAME](../../data/oledb/column-name.md)   \n [COLUMN_NAME_LENGTH](../../data/oledb/column-name-length.md)   \n [COLUMN_NAME_LENGTH_STATUS](../../data/oledb/column-name-length-status.md)   \n [COLUMN_NAME_STATUS](../../data/oledb/column-name-status.md)   \n [COLUMN_NAME_PS](../../data/oledb/column-name-ps.md)   \n [COLUMN_NAME_PS_LENGTH](../../data/oledb/column-name-ps-length.md)   \n [COLUMN_NAME_PS_STATUS](../../data/oledb/column-name-ps-status.md)   \n [COLUMN_NAME_PS_LENGTH_STATUS](../../data/oledb/column-name-ps-length-status.md)   \n [COLUMN_NAME_TYPE](../../data/oledb/column-name-type.md)   \n [COLUMN_NAME_TYPE_PS](../../data/oledb/column-name-type-ps.md)   \n [COLUMN_NAME_TYPE_SIZE](../../data/oledb/column-name-type-size.md)   \n [COLUMN_NAME_TYPE_STATUS](../../data/oledb/column-name-type-status.md)"}