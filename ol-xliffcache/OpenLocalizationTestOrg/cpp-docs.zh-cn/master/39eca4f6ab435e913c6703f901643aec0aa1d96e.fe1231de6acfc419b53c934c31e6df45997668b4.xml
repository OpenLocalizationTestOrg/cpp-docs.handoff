{"nodes":[{"pos":[12,82],"content":"How to: Define and Install a Global Exception Handler | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"How to: Define and Install a Global Exception Handler | Microsoft Docs","pos":[0,70]}]},{"content":"How to: Define and Install a Global Exception Handler","pos":[607,660]},{"content":"The following code example demonstrates how unhandled exceptions can be captured.","pos":[661,742]},{"content":"The example form contains a button that, when pressed, performs a null reference, causing an exception to be thrown.","pos":[743,859]},{"content":"This functionality represents a typical code failure.","pos":[860,913]},{"content":"The resulting exception is caught by the application-wide exception handler installed by the main function.","pos":[914,1021]},{"content":"This is accomplished by binding a delegate to the &lt;xref:System.Windows.Forms.Application.ThreadException&gt; event.","pos":[1028,1140],"source":"This is accomplished by binding a delegate to the <xref:System.Windows.Forms.Application.ThreadException> event."},{"content":"In this case, subsequent exceptions are then sent to the <ph id=\"ph1\">`App::OnUnhandled`</ph> method.","pos":[1141,1224],"source":" In this case, subsequent exceptions are then sent to the `App::OnUnhandled` method."},{"content":"Example","pos":[1233,1240]},{"content":"See Also","pos":[2468,2476]},{"content":"Exception Handling","pos":[2481,2499]}],"content":"---\ntitle: \"How to: Define and Install a Global Exception Handler | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"handlers, global\"\nms.assetid: dd88a812-3bc7-4ce8-8283-4b674c246534\ncaps.latest.revision: 9\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# How to: Define and Install a Global Exception Handler\nThe following code example demonstrates how unhandled exceptions can be captured. The example form contains a button that, when pressed, performs a null reference, causing an exception to be thrown. This functionality represents a typical code failure. The resulting exception is caught by the application-wide exception handler installed by the main function.  \n  \n This is accomplished by binding a delegate to the <xref:System.Windows.Forms.Application.ThreadException> event. In this case, subsequent exceptions are then sent to the `App::OnUnhandled` method.  \n  \n## Example  \n  \n```  \n// global_exception_handler.cpp  \n// compile with: /clr  \n#using <system.dll>  \n#using <system.drawing.dll>  \n#using <system.windows.forms.dll>  \n  \nusing namespace System;  \nusing namespace System::Threading;  \nusing namespace System::Drawing;  \nusing namespace System::Windows::Forms;  \n  \nref class MyForm : public Form  \n{  \n   Button^ b;  \npublic:  \n   MyForm( )  \n   {  \n      b = gcnew Button( );  \n      b->Text = \"Do Null Access\";  \n      b->Size = Drawing::Size(150, 30);  \n      b->Click += gcnew EventHandler(this, &MyForm::OnClick);  \n      Controls->Add(b);  \n   }  \n   void OnClick(Object^ sender, EventArgs^ args)   \n   {  \n      // do something illegal, like call through a null pointer...  \n      Object^ o = nullptr;  \n      o->ToString( );        \n   }  \n};  \n  \nref class App  \n{  \npublic:  \n   static void OnUnhandled(Object^ sender, ThreadExceptionEventArgs^ e)  \n   {  \n      MessageBox::Show(e->Exception->Message, \"Global Exeception\");  \n      Application::ExitThread( );  \n   }  \n};  \n  \nint main()  \n{  \n   Application::ThreadException += gcnew   \n      ThreadExceptionEventHandler(App::OnUnhandled);  \n  \n   MyForm^ form = gcnew MyForm( );  \n   Application::Run(form);  \n}  \n```  \n  \n## See Also  \n [Exception Handling](../windows/exception-handling-cpp-component-extensions.md)"}