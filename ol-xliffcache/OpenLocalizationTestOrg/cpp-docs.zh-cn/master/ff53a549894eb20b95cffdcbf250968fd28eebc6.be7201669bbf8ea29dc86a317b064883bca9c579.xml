{"nodes":[{"pos":[12,50],"content":"CDataConnection Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"CDataConnection Class | Microsoft Docs","pos":[0,38]}]},{"content":"CDataConnection Class","pos":[670,691]},{"content":"Manages the connection with the data source.","pos":[692,736]},{"content":"Syntax","pos":[745,751]},{"content":"Members","pos":[799,806]},{"content":"Methods","pos":[816,823]},{"content":"CDataConnection","pos":[845,860]},{"content":"Constructor.","pos":[915,927]},{"content":"Instantiates and initializes a <ph id=\"ph1\">`CDataConnection`</ph> object.","pos":[928,984],"source":" Instantiates and initializes a `CDataConnection` object."},{"content":"Copy","pos":[990,994]},{"content":"Creates a copy of an existing data connection.","pos":[1038,1084]},{"content":"Open","pos":[1090,1094]},{"content":"Opens a connection to a data source using an initialization string.","pos":[1138,1205]},{"content":"OpenNewSession","pos":[1211,1225]},{"content":"Opens a new session on the current connection.","pos":[1279,1325]},{"content":"Operators","pos":[1336,1345]},{"content":"operator BOOL","pos":[1367,1380]},{"content":"Determines whether the current session is open or not.","pos":[1433,1487]},{"content":"operator bool","pos":[1493,1506]},{"content":"Determines whether the current session is open or not.","pos":[1566,1620]},{"content":"operator CDataSource&amp;","pos":[1626,1647],"source":"operator CDataSource&"},{"pos":[1711,1769],"content":"Returns a reference to the contained <ph id=\"ph1\">`CDataSource`</ph> object.","source":"Returns a reference to the contained `CDataSource` object."},{"content":"operator CDataSource*","pos":[1775,1796]},{"pos":[1861,1917],"content":"Returns a pointer to the contained <ph id=\"ph1\">`CDataSource`</ph> object.","source":"Returns a pointer to the contained `CDataSource` object."},{"content":"operator CSession&amp;","pos":[1923,1941],"source":"operator CSession&"},{"pos":[2002,2057],"content":"Returns a reference to the contained <ph id=\"ph1\">`CSession`</ph> object.","source":"Returns a reference to the contained `CSession` object."},{"content":"operator CSession*","pos":[2063,2081]},{"pos":[2143,2196],"content":"Returns a pointer to the contained <ph id=\"ph1\">`CSession`</ph> object.","source":"Returns a pointer to the contained `CSession` object."},{"content":"Remarks","pos":[2206,2213]},{"pos":[2235,2410],"content":"is a useful class for creating clients because it encapsulates necessary objects (data source and session) and some of the work you need to do when connecting to a data source"},{"pos":[2417,2839],"content":"Without <ph id=\"ph1\">`CDataConnection`</ph>, you have to create a <ph id=\"ph2\">`CDataSource`</ph> object, call its <bpt id=\"p1\">[</bpt>OpenFromInitializationString<ept id=\"p1\">](../../data/oledb/cdatasource-openfrominitializationstring.md)</ept> method, then create an instance of a <bpt id=\"p2\">[</bpt>CSession<ept id=\"p2\">](../../data/oledb/csession-class.md)</ept> object, call its <bpt id=\"p3\">[</bpt>Open<ept id=\"p3\">](../../data/oledb/csession-open.md)</ept> method, then create a <bpt id=\"p4\">[</bpt>CCommand<ept id=\"p4\">](../../data/oledb/ccommand-class.md)</ept> object and call its <bpt id=\"p5\">**</bpt>Open<ept id=\"p5\">**</ept>* methods.","source":"Without `CDataConnection`, you have to create a `CDataSource` object, call its [OpenFromInitializationString](../../data/oledb/cdatasource-openfrominitializationstring.md) method, then create an instance of a [CSession](../../data/oledb/csession-class.md) object, call its [Open](../../data/oledb/csession-open.md) method, then create a [CCommand](../../data/oledb/ccommand-class.md) object and call its **Open*** methods."},{"content":"With <ph id=\"ph1\">`CDataConnection`</ph>, you only need to create a connection object, pass it an initialization string, then use that connection to open commands.","pos":[2846,2991],"source":"With `CDataConnection`, you only need to create a connection object, pass it an initialization string, then use that connection to open commands."},{"content":"If you plan on using your connection to the database repeatedly, it is a good idea to keep the connection open, and <ph id=\"ph1\">`CDataConnection`</ph> provides a convenient way to do that.","pos":[2992,3163],"source":" If you plan on using your connection to the database repeatedly, it is a good idea to keep the connection open, and `CDataConnection` provides a convenient way to do that."},{"pos":[3171,3355],"content":"[!NOTE]\n If you are creating a database application that needs to handle multiple sessions, you will need to use [OpenNewSession](../../data/oledb/cdataconnection-opennewsession.md).","leadings":["","> "],"nodes":[{"content":"If you are creating a database application that needs to handle multiple sessions, you will need to use <bpt id=\"p1\">[</bpt>OpenNewSession<ept id=\"p1\">](../../data/oledb/cdataconnection-opennewsession.md)</ept>.","pos":[9,182],"source":" If you are creating a database application that needs to handle multiple sessions, you will need to use [OpenNewSession](../../data/oledb/cdataconnection-opennewsession.md)."}]},{"content":"Requirements","pos":[3364,3376]},{"pos":[3380,3402],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> atldbcli.h","source":"**Header:** atldbcli.h"},{"content":"See Also","pos":[3411,3419]},{"content":"OLE DB Consumer Templates","pos":[3424,3449]},{"content":"OLE DB Consumer Templates Reference","pos":[3507,3542]}],"content":"---\ntitle: \"CDataConnection Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"ATL::CDataConnection\"\n  - \"ATL.CDataConnection\"\n  - \"CDataConnection\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"CDataConnection class\"\nms.assetid: 77432d85-4e20-49ec-a0b0-142137828471\ncaps.latest.revision: 13\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# CDataConnection Class\nManages the connection with the data source.  \n  \n## Syntax  \n  \n```  \nclass CDataConnection  \n```  \n  \n## Members  \n  \n### Methods  \n  \n|||  \n|-|-|  \n|[CDataConnection](../../data/oledb/cdataconnection-cdataconnection.md)|Constructor. Instantiates and initializes a `CDataConnection` object.|  \n|[Copy](../../data/oledb/cdataconnection-copy.md)|Creates a copy of an existing data connection.|  \n|[Open](../../data/oledb/cdataconnection-open.md)|Opens a connection to a data source using an initialization string.|  \n|[OpenNewSession](../../data/oledb/cdataconnection-opennewsession.md)|Opens a new session on the current connection.|  \n  \n### Operators  \n  \n|||  \n|-|-|  \n|[operator BOOL](../../data/oledb/cdataconnection-operator-bool.md)|Determines whether the current session is open or not.|  \n|[operator bool](../../data/oledb/cdataconnection-operator-bool-ole-db.md)|Determines whether the current session is open or not.|  \n|[operator CDataSource&](../../data/oledb/cdataconnection-operator-cdatasource-amp.md)|Returns a reference to the contained `CDataSource` object.|  \n|[operator CDataSource*](../../data/oledb/cdataconnection-operator-cdatasource-star.md)|Returns a pointer to the contained `CDataSource` object.|  \n|[operator CSession&](../../data/oledb/cdataconnection-operator-csession-amp.md)|Returns a reference to the contained `CSession` object.|  \n|[operator CSession*](../../data/oledb/cdataconnection-operator-csession-star.md)|Returns a pointer to the contained `CSession` object.|  \n  \n## Remarks  \n `CDataConnection` is a useful class for creating clients because it encapsulates necessary objects (data source and session) and some of the work you need to do when connecting to a data source  \n  \n Without `CDataConnection`, you have to create a `CDataSource` object, call its [OpenFromInitializationString](../../data/oledb/cdatasource-openfrominitializationstring.md) method, then create an instance of a [CSession](../../data/oledb/csession-class.md) object, call its [Open](../../data/oledb/csession-open.md) method, then create a [CCommand](../../data/oledb/ccommand-class.md) object and call its **Open*** methods.  \n  \n With `CDataConnection`, you only need to create a connection object, pass it an initialization string, then use that connection to open commands. If you plan on using your connection to the database repeatedly, it is a good idea to keep the connection open, and `CDataConnection` provides a convenient way to do that.  \n  \n> [!NOTE]\n>  If you are creating a database application that needs to handle multiple sessions, you will need to use [OpenNewSession](../../data/oledb/cdataconnection-opennewsession.md).  \n  \n## Requirements  \n **Header:** atldbcli.h  \n  \n## See Also  \n [OLE DB Consumer Templates](../../data/oledb/ole-db-consumer-templates-cpp.md)   \n [OLE DB Consumer Templates Reference](../../data/oledb/ole-db-consumer-templates-reference.md)"}