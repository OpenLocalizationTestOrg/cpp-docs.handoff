{"nodes":[{"pos":[12,72],"content":"Modifying a Control&#39;s Run-Time Behavior | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Modifying a Control&amp;#39;s Run-Time Behavior | Microsoft Docs","pos":[0,60],"source":"Modifying a Control&#39;s Run-Time Behavior | Microsoft Docs"}]},{"content":"Modifying a Control&amp;#39;s Run-Time Behavior","pos":[649,692],"source":"Modifying a Control&#39;s Run-Time Behavior"},{"pos":[693,958],"content":"After you <bpt id=\"p1\">[</bpt>insert a control<ept id=\"p1\">](../../data/ado-rdo/inserting-the-control-into-a-visual-cpp-application.md)</ept> and generate one or more <bpt id=\"p2\">[</bpt>wrapper classes<ept id=\"p2\">](../../data/ado-rdo/wrapper-classes.md)</ept>, you can invoke the control's methods and program the control's event handlers.","source":"After you [insert a control](../../data/ado-rdo/inserting-the-control-into-a-visual-cpp-application.md) and generate one or more [wrapper classes](../../data/ado-rdo/wrapper-classes.md), you can invoke the control's methods and program the control's event handlers."},{"content":"The control's <bpt id=\"p1\">[</bpt>wrapper classes<ept id=\"p1\">](../../data/ado-rdo/wrapper-classes.md)</ept> specify the functions you can use to modify the run-time behavior of the control.","pos":[965,1117],"source":"The control's [wrapper classes](../../data/ado-rdo/wrapper-classes.md) specify the functions you can use to modify the run-time behavior of the control."},{"content":"Include the appropriate wrapper class header file and use the methods.","pos":[1118,1188]},{"content":"To set a property, look for an accessor method with the property name prefixed by Set.","pos":[1189,1275]},{"content":"To retrieve a property, look for an accessor method with the property name prefixed by Get.","pos":[1276,1367]},{"content":"Event handlers can be written later.","pos":[1368,1404]},{"content":"Because the controls are implemented using Automation, the types passed can only be Automation-safe types such as BSTR and VARIANT.","pos":[1411,1542]},{"content":"While you can use system calls to allocate and set BSTRs and VARIANTs, you might want to use the ATL wrapper classes (<bpt id=\"p1\">[</bpt>CComBSTR<ept id=\"p1\">](../../atl/reference/ccombstr-class.md)</ept>, <bpt id=\"p2\">[</bpt>CComVariant<ept id=\"p2\">](../../atl/reference/ccomvariant-class.md)</ept>), the Visual C++ COM Compiler support wrapper classes (<bpt id=\"p3\">[</bpt>_bstr_t<ept id=\"p3\">](../../cpp/bstr-t-class.md)</ept>, <bpt id=\"p4\">[</bpt>_variant_t<ept id=\"p4\">](../../cpp/variant-t-class.md)</ept>), or the MFC wrapper class (<bpt id=\"p5\">[</bpt>COleVariant<ept id=\"p5\">](../../mfc/reference/colevariant-class.md)</ept>).","pos":[1543,1989],"source":" While you can use system calls to allocate and set BSTRs and VARIANTs, you might want to use the ATL wrapper classes ([CComBSTR](../../atl/reference/ccombstr-class.md), [CComVariant](../../atl/reference/ccomvariant-class.md)), the Visual C++ COM Compiler support wrapper classes ([_bstr_t](../../cpp/bstr-t-class.md), [_variant_t](../../cpp/variant-t-class.md)), or the MFC wrapper class ([COleVariant](../../mfc/reference/colevariant-class.md))."},{"content":"If you add a data control, the Insert ActiveX Control Wizard generates wrapper classes for the data control's coclasses that manage its internal data objects.","pos":[1996,2154]},{"content":"These classes do not include all of RDO or ADO, but rather represent internal objects declared in the type library.","pos":[2155,2270]},{"pos":[2277,2603],"content":"If you want to use ADO and RDO directly, you should connect to the ADO or RDO DLLs directly (Msado15.dll or Msrdo20.dll), either with the <bpt id=\"p1\">[</bpt>compiler COM support classes<ept id=\"p1\">](../../cpp/compiler-com-support-classes.md)</ept>, which support the <bpt id=\"p2\">[</bpt>#import directive<ept id=\"p2\">](../../preprocessor/preprocessor-directives.md)</ept>, or with the respective SDK.","source":"If you want to use ADO and RDO directly, you should connect to the ADO or RDO DLLs directly (Msado15.dll or Msrdo20.dll), either with the [compiler COM support classes](../../cpp/compiler-com-support-classes.md), which support the [#import directive](../../preprocessor/preprocessor-directives.md), or with the respective SDK."},{"content":"To Set Control Properties at Run Time","pos":[2612,2649]},{"content":"Note that some properties of an ActiveX control might be read-only at run time, which makes dynamic creation difficult.","pos":[2653,2772]},{"content":"You can temporarily simulate design mode for property initialization by overriding the control container's <bpt id=\"p1\">[</bpt>OnAmbientPropertyChange<ept id=\"p1\">](../mfc/reference/colecontrol-class.md#colecontrol__onambientpropertychange)</ept> handler, as described in the Knowledge Base article, \"How to: Set ActiveX Control Design-Time Properties at Run Time (Q260744)\".","pos":[2773,3110],"source":" You can temporarily simulate design mode for property initialization by overriding the control container's [OnAmbientPropertyChange](../mfc/reference/colecontrol-class.md#colecontrol__onambientpropertychange) handler, as described in the Knowledge Base article, \"How to: Set ActiveX Control Design-Time Properties at Run Time (Q260744)\"."},{"content":"You can find Knowledge Base articles at <bpt id=\"p1\">[</bpt>http://support.microsoft.com/<ept id=\"p1\">](http://support.microsoft.com/)</ept>.","pos":[3111,3214],"source":" You can find Knowledge Base articles at [http://support.microsoft.com/](http://support.microsoft.com/)."},{"content":"See Also","pos":[3223,3231]},{"content":"Using ActiveX Controls","pos":[3236,3258]}],"content":"---\ntitle: \"Modifying a Control&#39;s Run-Time Behavior | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"ActiveX controls [C++], run-time behavior\"\nms.assetid: 78b44b0f-0d5a-4da0-8aa2-595f5789c634\ncaps.latest.revision: 10\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"ru-ru\"\n  - \"zh-cn\"\n  - \"zh-tw\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"tr-tr\"\n---\n# Modifying a Control&#39;s Run-Time Behavior\nAfter you [insert a control](../../data/ado-rdo/inserting-the-control-into-a-visual-cpp-application.md) and generate one or more [wrapper classes](../../data/ado-rdo/wrapper-classes.md), you can invoke the control's methods and program the control's event handlers.  \n  \n The control's [wrapper classes](../../data/ado-rdo/wrapper-classes.md) specify the functions you can use to modify the run-time behavior of the control. Include the appropriate wrapper class header file and use the methods. To set a property, look for an accessor method with the property name prefixed by Set. To retrieve a property, look for an accessor method with the property name prefixed by Get. Event handlers can be written later.  \n  \n Because the controls are implemented using Automation, the types passed can only be Automation-safe types such as BSTR and VARIANT. While you can use system calls to allocate and set BSTRs and VARIANTs, you might want to use the ATL wrapper classes ([CComBSTR](../../atl/reference/ccombstr-class.md), [CComVariant](../../atl/reference/ccomvariant-class.md)), the Visual C++ COM Compiler support wrapper classes ([_bstr_t](../../cpp/bstr-t-class.md), [_variant_t](../../cpp/variant-t-class.md)), or the MFC wrapper class ([COleVariant](../../mfc/reference/colevariant-class.md)).  \n  \n If you add a data control, the Insert ActiveX Control Wizard generates wrapper classes for the data control's coclasses that manage its internal data objects. These classes do not include all of RDO or ADO, but rather represent internal objects declared in the type library.  \n  \n If you want to use ADO and RDO directly, you should connect to the ADO or RDO DLLs directly (Msado15.dll or Msrdo20.dll), either with the [compiler COM support classes](../../cpp/compiler-com-support-classes.md), which support the [#import directive](../../preprocessor/preprocessor-directives.md), or with the respective SDK.  \n  \n## To Set Control Properties at Run Time  \n Note that some properties of an ActiveX control might be read-only at run time, which makes dynamic creation difficult. You can temporarily simulate design mode for property initialization by overriding the control container's [OnAmbientPropertyChange](../mfc/reference/colecontrol-class.md#colecontrol__onambientpropertychange) handler, as described in the Knowledge Base article, \"How to: Set ActiveX Control Design-Time Properties at Run Time (Q260744)\". You can find Knowledge Base articles at [http://support.microsoft.com/](http://support.microsoft.com/).  \n  \n## See Also  \n [Using ActiveX Controls](../../data/ado-rdo/using-activex-controls.md)"}