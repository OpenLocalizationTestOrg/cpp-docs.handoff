{"nodes":[{"pos":[12,35],"content":"__m128 | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"__m128 | Microsoft Docs","pos":[0,23]}]},{"content":"__m128","pos":[645,651]},{"content":"Microsoft Specific","pos":[655,673]},{"pos":[677,829],"content":"The <bpt id=\"p1\">**</bpt>__m128 data<ept id=\"p1\">**</ept> type, for use with the Streaming SIMD Extensions and Streaming SIMD Extensions 2 instructions intrinsics, is defined in xmmintrin.h.","source":"The **__m128 data** type, for use with the Streaming SIMD Extensions and Streaming SIMD Extensions 2 instructions intrinsics, is defined in xmmintrin.h."},{"content":"Remarks","pos":[938,945]},{"content":"You should not access the <ph id=\"ph1\">`__m128`</ph> fields directly.","pos":[949,1000],"source":"You should not access the `__m128` fields directly."},{"content":"You can, however, see these types in the debugger.","pos":[1001,1051]},{"content":"A variable of type <ph id=\"ph1\">`__m128`</ph> maps to the XMM[0-7] registers.","pos":[1052,1111],"source":" A variable of type `__m128` maps to the XMM[0-7] registers."},{"pos":[1118,1194],"content":"Variables of type <bpt id=\"p1\">**</bpt>_m128<ept id=\"p1\">**</ept> are automatically aligned on 16-byte boundaries.","source":"Variables of type **_m128** are automatically aligned on 16-byte boundaries."},{"pos":[1201,1259],"content":"The <ph id=\"ph1\">`__m128`</ph> data type is not supported on ARM processors.","source":"The `__m128` data type is not supported on ARM processors."},{"content":"END Microsoft Specific","pos":[1268,1290]},{"content":"See Also","pos":[1299,1307]},{"content":"Keywords","pos":[1312,1320]},{"content":"Fundamental Types","pos":[1351,1368]},{"content":"Data Type Ranges","pos":[1408,1424]}],"content":"---\ntitle: \"__m128 | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"language-reference\"\nf1_keywords: \n  - \"__m128\"\n  - \"__m128_cpp\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"__m128 keyword [C++]\"\nms.assetid: e51a472a-0e3c-4989-9a2a-36adb05273a3\ncaps.latest.revision: 8\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"ru-ru\"\n  - \"zh-cn\"\n  - \"zh-tw\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"tr-tr\"\n---\n# __m128\n## Microsoft Specific  \n The **__m128 data** type, for use with the Streaming SIMD Extensions and Streaming SIMD Extensions 2 instructions intrinsics, is defined in xmmintrin.h.  \n  \n```  \n// data_types__m128.cpp  \n#include <xmmintrin.h>  \nint main() {  \n   __m128 x;  \n}  \n```  \n  \n## Remarks  \n You should not access the `__m128` fields directly. You can, however, see these types in the debugger. A variable of type `__m128` maps to the XMM[0-7] registers.  \n  \n Variables of type **_m128** are automatically aligned on 16-byte boundaries.  \n  \n The `__m128` data type is not supported on ARM processors.  \n  \n## END Microsoft Specific  \n  \n## See Also  \n [Keywords](../cpp/keywords-cpp.md)   \n [Fundamental Types](../cpp/fundamental-types-cpp.md)   \n [Data Type Ranges](../cpp/data-type-ranges.md)"}