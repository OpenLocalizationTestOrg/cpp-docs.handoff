{"nodes":[{"pos":[12,62],"content":"lexicographical_compare (STL-CLR) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"lexicographical_compare (STL-CLR) | Microsoft Docs","pos":[0,50]}]},{"content":"lexicographical_compare (STL/CLR)","pos":[667,700]},{"content":"Compares element by element between two sequences to determine which is lesser of the two.","pos":[701,791]},{"content":"Syntax","pos":[800,806]},{"content":"Remarks","pos":[1160,1167]},{"content":"This function behaves the same as the STL function <ph id=\"ph1\">`lexicographical_compare`</ph>.","pos":[1171,1248],"source":"This function behaves the same as the STL function `lexicographical_compare`."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>lexicographical_compare<ept id=\"p1\">](http://msdn.microsoft.com/Library/403f8526-50a4-4c1c-865e-391b1095fc32)</ept>.","pos":[1249,1373],"source":" For more information, see [lexicographical_compare](http://msdn.microsoft.com/Library/403f8526-50a4-4c1c-865e-391b1095fc32)."},{"content":"Requirements","pos":[1382,1394]},{"pos":[1398,1429],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> <ph id=\"ph1\">\\&lt;</ph>cliext/algorithm&gt;","source":"**Header:** \\<cliext/algorithm>"},{"pos":[1436,1457],"content":"<bpt id=\"p1\">**</bpt>Namespace:<ept id=\"p1\">**</ept> cliext","source":"**Namespace:** cliext"},{"content":"See Also","pos":[1466,1474]},{"content":"algorithm (STL/CLR)","pos":[1479,1498]}],"content":"---\ntitle: \"lexicographical_compare (STL-CLR) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"cliext::lexicographical_compare\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"lexicographical_compare function [STL/CLR]\"\nms.assetid: 9ec217f3-5523-4f90-a0cc-8fb7dbe4946b\ncaps.latest.revision: 4\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# lexicographical_compare (STL/CLR)\nCompares element by element between two sequences to determine which is lesser of the two.  \n  \n## Syntax  \n  \n```  \ntemplate<class _InIt1, class _InIt2> inline  \n    bool lexicographical_compare(_InIt1 _First1, _InIt1 _Last1,  \n        _InIt2 _First2, _InIt2 _Last2);  \ntemplate<class _InIt1, class _InIt2, class _Pr> inline  \n    bool lexicographical_compare(_InIt1 _First1, _InIt1 _Last1,  \n        _InIt2 _First2, _InIt2 _Last2, _Pr _Pred);  \n```  \n  \n## Remarks  \n This function behaves the same as the STL function `lexicographical_compare`. For more information, see [lexicographical_compare](http://msdn.microsoft.com/Library/403f8526-50a4-4c1c-865e-391b1095fc32).  \n  \n## Requirements  \n **Header:** \\<cliext/algorithm>  \n  \n **Namespace:** cliext  \n  \n## See Also  \n [algorithm (STL/CLR)](../dotnet/algorithm-stl-clr.md)"}