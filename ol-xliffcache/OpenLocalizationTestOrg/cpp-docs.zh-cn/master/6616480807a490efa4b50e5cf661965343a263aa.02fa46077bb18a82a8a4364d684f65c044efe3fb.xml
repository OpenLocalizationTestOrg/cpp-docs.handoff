{"nodes":[{"pos":[12,74],"content":"errno, _doserrno, _sys_errlist, and _sys_nerr | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"errno, _doserrno, _sys_errlist, and _sys_nerr | Microsoft Docs","pos":[0,62]}]},{"content":"errno, _doserrno, _sys_errlist, and _sys_nerr","pos":[988,1033]},{"content":"Global macros that hold error codes that are set during program execution, and string equivalents of the error codes for display.","pos":[1034,1163]},{"content":"Syntax","pos":[1172,1178]},{"content":"Remarks","pos":[1347,1354]},{"content":"Both <ph id=\"ph1\">`errno`</ph> and <ph id=\"ph2\">`_doserrno`</ph> are set to 0 by the runtime during program startup.","pos":[1358,1438],"source":"Both `errno` and `_doserrno` are set to 0 by the runtime during program startup."},{"content":"is set on an error in a system-level call.","pos":[1447,1489]},{"content":"Because <ph id=\"ph1\">`errno`</ph> holds the value for the last call that set it, this value may be changed by succeeding calls.","pos":[1490,1599],"source":" Because `errno` holds the value for the last call that set it, this value may be changed by succeeding calls."},{"content":"Run-time library calls that set <ph id=\"ph1\">`errno`</ph> on an error do not clear <ph id=\"ph2\">`errno`</ph> on success.","pos":[1600,1684],"source":" Run-time library calls that set `errno` on an error do not clear `errno` on success."},{"content":"Always clear <ph id=\"ph1\">`errno`</ph> by calling <ph id=\"ph2\">`_set_errno(0)`</ph> immediately before a call that may set it, and check it immediately after the call.","pos":[1685,1816],"source":" Always clear `errno` by calling `_set_errno(0)` immediately before a call that may set it, and check it immediately after the call."},{"content":"On an error, <ph id=\"ph1\">`errno`</ph> is not necessarily set to the same value as the error code returned by a system call.","pos":[1823,1929],"source":"On an error, `errno` is not necessarily set to the same value as the error code returned by a system call."},{"content":"For I/O operations, <ph id=\"ph1\">`_doserrno`</ph> stores the operating-system error-code equivalents of <ph id=\"ph2\">`errno`</ph> codes.","pos":[1930,2030],"source":" For I/O operations, `_doserrno` stores the operating-system error-code equivalents of `errno` codes."},{"content":"For most non-I/O operations, the value of <ph id=\"ph1\">`_doserrno`</ph> is not set.","pos":[2031,2096],"source":" For most non-I/O operations, the value of `_doserrno` is not set."},{"content":"Each <ph id=\"ph1\">`errno`</ph> value is associated with an error message in <ph id=\"ph2\">`_sys_errlist`</ph> that can be printed by using one of the <bpt id=\"p1\">[</bpt>perror<ept id=\"p1\">](../c-runtime-library/reference/perror-wperror.md)</ept> functions, or stored in a string by using one of the <bpt id=\"p2\">[</bpt>strerror<ept id=\"p2\">](../c-runtime-library/reference/strerror-strerror-wcserror-wcserror.md)</ept> or <bpt id=\"p3\">[</bpt>strerror_s<ept id=\"p3\">](../c-runtime-library/reference/strerror-s-strerror-s-wcserror-s-wcserror-s.md)</ept> functions.","pos":[2103,2515],"source":"Each `errno` value is associated with an error message in `_sys_errlist` that can be printed by using one of the [perror](../c-runtime-library/reference/perror-wperror.md) functions, or stored in a string by using one of the [strerror](../c-runtime-library/reference/strerror-strerror-wcserror-wcserror.md) or [strerror_s](../c-runtime-library/reference/strerror-s-strerror-s-wcserror-s-wcserror-s.md) functions."},{"content":"The <ph id=\"ph1\">`perror`</ph> and <ph id=\"ph2\">`strerror`</ph> functions use the <ph id=\"ph3\">`_sys_errlist`</ph> array and <ph id=\"ph4\">`_sys_nerr`</ph>—the number of elements in <ph id=\"ph5\">`_sys_errlist`</ph>—to process error information.","pos":[2516,2669],"source":" The `perror` and `strerror` functions use the `_sys_errlist` array and `_sys_nerr`—the number of elements in `_sys_errlist`—to process error information."},{"content":"Direct access to <ph id=\"ph1\">`_sys_errlist`</ph> and <ph id=\"ph2\">`_sys_nerr`</ph> is deprecated for code-security reasons.","pos":[2670,2758],"source":" Direct access to `_sys_errlist` and `_sys_nerr` is deprecated for code-security reasons."},{"content":"We recommend that you use the more secure, functional versions instead of the global macros, as shown here:","pos":[2759,2866]},{"content":"Global Macro","pos":[2873,2885]},{"content":"Functional Equivalents","pos":[2886,2908]},{"pos":[2977,3105],"content":"<bpt id=\"p1\">[</bpt>_get_doserrno<ept id=\"p1\">](../c-runtime-library/reference/get-doserrno.md)</ept>, <bpt id=\"p2\">[</bpt>_set_doserrno<ept id=\"p2\">](../c-runtime-library/reference/set-doserrno.md)</ept>","source":"[_get_doserrno](../c-runtime-library/reference/get-doserrno.md), [_set_doserrno](../c-runtime-library/reference/set-doserrno.md)"},{"pos":[3118,3234],"content":"<bpt id=\"p1\">[</bpt>_get_errno<ept id=\"p1\">](../c-runtime-library/reference/get-errno.md)</ept>, <bpt id=\"p2\">[</bpt>_set_errno<ept id=\"p2\">](../c-runtime-library/reference/set-errno.md)</ept>","source":"[_get_errno](../c-runtime-library/reference/get-errno.md), [_set_errno](../c-runtime-library/reference/set-errno.md)"},{"pos":[3253,3254],"content":","},{"content":"strerror_s, _strerror_s, _wcserror_s, <ph id=\"ph1\">\\_</ph>_wcserror_s","pos":[3268,3319],"source":"strerror_s, _strerror_s, _wcserror_s, \\__wcserror_s"},{"content":"Library math routines set <ph id=\"ph1\">`errno`</ph> by calling <bpt id=\"p1\">[</bpt>_matherr<ept id=\"p1\">](../c-runtime-library/reference/matherr.md)</ept>.","pos":[3407,3506],"source":"Library math routines set `errno` by calling [_matherr](../c-runtime-library/reference/matherr.md)."},{"content":"To handle math errors differently, write your own routine according to the <ph id=\"ph1\">`_matherr`</ph> reference description and name it <ph id=\"ph2\">`_matherr`</ph>.","pos":[3507,3638],"source":" To handle math errors differently, write your own routine according to the `_matherr` reference description and name it `_matherr`."},{"content":"All <ph id=\"ph1\">`errno`</ph> values in the following table are predefined constants in <ph id=\"ph2\">\\&lt;</ph>errno.h&gt;, and are UNIX-compatible.","pos":[3645,3751],"source":"All `errno` values in the following table are predefined constants in \\<errno.h>, and are UNIX-compatible."},{"content":"Only <ph id=\"ph1\">`ERANGE`</ph>, <ph id=\"ph2\">`EILSEQ`</ph>, and <ph id=\"ph3\">`EDOM`</ph> are specified in the ISO C99 standard.","pos":[3752,3826],"source":" Only `ERANGE`, `EILSEQ`, and `EDOM` are specified in the ISO C99 standard."},{"content":"Constant","pos":[3833,3841]},{"content":"System error message","pos":[3842,3862]},{"content":"Value","pos":[3863,3868]},{"content":"Operation not permitted","pos":[3939,3962]},{"content":"1","pos":[3963,3964]},{"content":"No such file or directory","pos":[3978,4003]},{"content":"2","pos":[4004,4005]},{"content":"No such process","pos":[4018,4033]},{"content":"3","pos":[4034,4035]},{"content":"Interrupted function","pos":[4048,4068]},{"content":"4","pos":[4069,4070]},{"content":"I/O error","pos":[4081,4090]},{"content":"5","pos":[4091,4092]},{"content":"No such device or address","pos":[4105,4130]},{"content":"6","pos":[4131,4132]},{"content":"Argument list too long","pos":[4145,4167]},{"content":"7","pos":[4168,4169]},{"content":"Exec format error","pos":[4184,4201]},{"content":"8","pos":[4202,4203]},{"content":"Bad file number","pos":[4216,4231]},{"content":"9","pos":[4232,4233]},{"content":"No spawned processes","pos":[4247,4267]},{"content":"10","pos":[4268,4270]},{"content":"No more processes or not enough memory or maximum nesting level reached","pos":[4284,4355]},{"content":"11","pos":[4356,4358]},{"content":"Not enough memory","pos":[4372,4389]},{"content":"12","pos":[4390,4392]},{"content":"Permission denied","pos":[4406,4423]},{"content":"13","pos":[4424,4426]},{"content":"Bad address","pos":[4440,4451]},{"content":"14","pos":[4452,4454]},{"content":"Device or resource busy","pos":[4467,4490]},{"content":"16","pos":[4491,4493]},{"content":"File exists","pos":[4507,4518]},{"content":"17","pos":[4519,4521]},{"content":"Cross-device link","pos":[4534,4551]},{"content":"18","pos":[4552,4554]},{"content":"No such device","pos":[4568,4582]},{"content":"19","pos":[4583,4585]},{"content":"Not a directory","pos":[4600,4615]},{"content":"20","pos":[4616,4618]},{"content":"Is a directory","pos":[4632,4646]},{"content":"21","pos":[4647,4649]},{"content":"Invalid argument","pos":[4663,4679]},{"content":"22","pos":[4680,4682]},{"content":"Too many files open in system","pos":[4696,4725]},{"content":"23","pos":[4726,4728]},{"content":"Too many open files","pos":[4742,4761]},{"content":"24","pos":[4762,4764]},{"content":"Inappropriate I/O control operation","pos":[4778,4813]},{"content":"25","pos":[4814,4816]},{"content":"File too large","pos":[4829,4843]},{"content":"27","pos":[4844,4846]},{"content":"No space left on device","pos":[4860,4883]},{"content":"28","pos":[4884,4886]},{"content":"Invalid seek","pos":[4900,4912]},{"content":"29","pos":[4913,4915]},{"content":"Read-only file system","pos":[4928,4949]},{"content":"30","pos":[4950,4952]},{"content":"Too many links","pos":[4966,4980]},{"content":"31","pos":[4981,4983]},{"content":"Broken pipe","pos":[4996,5007]},{"content":"32","pos":[5008,5010]},{"content":"Math argument","pos":[5022,5035]},{"content":"33","pos":[5036,5038]},{"content":"Result too large","pos":[5052,5068]},{"content":"34","pos":[5069,5071]},{"content":"Resource deadlock would occur","pos":[5086,5115]},{"content":"36","pos":[5116,5118]},{"content":"Same as EDEADLK for compatibility with older Microsoft C versions","pos":[5135,5200]},{"content":"36","pos":[5201,5203]},{"content":"Filename too long","pos":[5223,5240]},{"content":"38","pos":[5241,5243]},{"content":"No locks available","pos":[5257,5275]},{"content":"39","pos":[5276,5278]},{"content":"Function not supported","pos":[5292,5314]},{"content":"40","pos":[5315,5317]},{"content":"Directory not empty","pos":[5334,5353]},{"content":"41","pos":[5354,5356]},{"content":"Illegal byte sequence","pos":[5370,5391]},{"content":"42","pos":[5392,5394]},{"content":"String was truncated","pos":[5411,5431]},{"content":"80","pos":[5432,5434]},{"content":"Requirements","pos":[5444,5456]},{"content":"Global macro","pos":[5463,5475]},{"content":"Required header","pos":[5476,5491]},{"content":"Optional header","pos":[5492,5507]},{"content":"errno.h&gt; or <ph id=\"ph1\">\\&lt;</ph>stdlib.h&gt;, <ph id=\"ph2\">\\&lt;</ph>cerrno&gt; or <ph id=\"ph3\">\\&lt;</ph>cstdlib&gt; (C++)","pos":[5589,5643],"source":"errno.h> or \\<stdlib.h>, \\<cerrno> or \\<cstdlib> (C++)"},{"pos":[5660,5677],"content":", <ph id=\"ph1\">`_sys_errlist`</ph>,","source":", `_sys_errlist`, "},{"content":"stdlib.h&gt;, <ph id=\"ph1\">\\&lt;</ph>cstdlib&gt; (C++)","pos":[5692,5719],"source":"stdlib.h>, \\<cstdlib> (C++)"},{"content":"errno.h&gt;, <ph id=\"ph1\">\\&lt;</ph>cerrno&gt; (C++)","pos":[5722,5747],"source":"errno.h>, \\<cerrno> (C++)"},{"content":"The <ph id=\"ph1\">`_doserrno`</ph>, <ph id=\"ph2\">`_sys_errlist`</ph>, and <ph id=\"ph3\">`_sys_nerr`</ph> macros are Microsoft extensions.","pos":[5755,5836],"source":"The `_doserrno`, `_sys_errlist`, and `_sys_nerr` macros are Microsoft extensions."},{"content":"For more compatibility information, see <bpt id=\"p1\">[</bpt>Compatibility<ept id=\"p1\">](../c-runtime-library/compatibility.md)</ept>.","pos":[5837,5932],"source":" For more compatibility information, see [Compatibility](../c-runtime-library/compatibility.md)."},{"content":"See Also","pos":[5941,5949]},{"content":"Global Variables","pos":[5954,5970]},{"content":"errno Constants","pos":[6019,6034]},{"content":"perror, _wperror","pos":[6082,6098]},{"content":"strerror, _strerror, _wcserror, <ph id=\"ph1\">\\_</ph>_wcserror","pos":[6155,6198],"source":"strerror, _strerror, _wcserror, \\__wcserror"},{"content":"strerror_s, _strerror_s, _wcserror_s, <ph id=\"ph1\">\\_</ph>_wcserror_s","pos":[6276,6327],"source":"strerror_s, _strerror_s, _wcserror_s, \\__wcserror_s"},{"content":"_get_doserrno","pos":[6413,6426]},{"content":"_set_doserrno","pos":[6481,6494]},{"content":"_get_errno","pos":[6549,6559]},{"content":"_set_errno","pos":[6611,6621]}],"content":"---\ntitle: \"errno, _doserrno, _sys_errlist, and _sys_nerr | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\napiname: \n  - \"_errno\"\napilocation: \n  - \"msvcrt.dll\"\napitype: \"DLLExport\"\nf1_keywords: \n  - \"_sys_errlist\"\n  - \"errno\"\n  - \"_sys_nerr\"\n  - \"_doserrno\"\ndev_langs: \n  - \"C++\"\n  - \"C\"\nhelpviewer_keywords: \n  - \"error codes, printing\"\n  - \"sys_errlist global variable\"\n  - \"doserrno global variable\"\n  - \"errno global variable\"\n  - \"_doserrno global variable\"\n  - \"_sys_errlist global variable\"\n  - \"_sys_nerr global variable\"\n  - \"sys_nerr global variable\"\nms.assetid: adbec641-6d91-4e19-8398-9a34046bd369\ncaps.latest.revision: 18\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# errno, _doserrno, _sys_errlist, and _sys_nerr\nGlobal macros that hold error codes that are set during program execution, and string equivalents of the error codes for display.  \n  \n## Syntax  \n  \n```  \n#define errno   (*_errno())  \n#define _doserrno   (*__doserrno())  \n#define _sys_errlist (__sys_errlist())  \n#define _sys_nerr (*__sys_nerr())  \n```  \n  \n## Remarks  \n Both `errno` and `_doserrno` are set to 0 by the runtime during program startup. `errno` is set on an error in a system-level call. Because `errno` holds the value for the last call that set it, this value may be changed by succeeding calls. Run-time library calls that set `errno` on an error do not clear `errno` on success. Always clear `errno` by calling `_set_errno(0)` immediately before a call that may set it, and check it immediately after the call.  \n  \n On an error, `errno` is not necessarily set to the same value as the error code returned by a system call. For I/O operations, `_doserrno` stores the operating-system error-code equivalents of `errno` codes. For most non-I/O operations, the value of `_doserrno` is not set.  \n  \n Each `errno` value is associated with an error message in `_sys_errlist` that can be printed by using one of the [perror](../c-runtime-library/reference/perror-wperror.md) functions, or stored in a string by using one of the [strerror](../c-runtime-library/reference/strerror-strerror-wcserror-wcserror.md) or [strerror_s](../c-runtime-library/reference/strerror-s-strerror-s-wcserror-s-wcserror-s.md) functions. The `perror` and `strerror` functions use the `_sys_errlist` array and `_sys_nerr`—the number of elements in `_sys_errlist`—to process error information. Direct access to `_sys_errlist` and `_sys_nerr` is deprecated for code-security reasons. We recommend that you use the more secure, functional versions instead of the global macros, as shown here:  \n  \n|Global Macro|Functional Equivalents|  \n|------------------|----------------------------|  \n|`_doserrno`|[_get_doserrno](../c-runtime-library/reference/get-doserrno.md), [_set_doserrno](../c-runtime-library/reference/set-doserrno.md)|  \n|`errno`|[_get_errno](../c-runtime-library/reference/get-errno.md), [_set_errno](../c-runtime-library/reference/set-errno.md)|  \n|`_sys_errlist`, `_sys_nerr`|[strerror_s, _strerror_s, _wcserror_s, \\__wcserror_s](../c-runtime-library/reference/strerror-s-strerror-s-wcserror-s-wcserror-s.md)|  \n  \n Library math routines set `errno` by calling [_matherr](../c-runtime-library/reference/matherr.md). To handle math errors differently, write your own routine according to the `_matherr` reference description and name it `_matherr`.  \n  \n All `errno` values in the following table are predefined constants in \\<errno.h>, and are UNIX-compatible. Only `ERANGE`, `EILSEQ`, and `EDOM` are specified in the ISO C99 standard.  \n  \n|Constant|System error message|Value|  \n|--------------|--------------------------|-----------|  \n|`EPERM`|Operation not permitted|1|  \n|`ENOENT`|No such file or directory|2|  \n|`ESRCH`|No such process|3|  \n|`EINTR`|Interrupted function|4|  \n|`EIO`|I/O error|5|  \n|`ENXIO`|No such device or address|6|  \n|`E2BIG`|Argument list too long|7|  \n|`ENOEXEC`|Exec format error|8|  \n|`EBADF`|Bad file number|9|  \n|`ECHILD`|No spawned processes|10|  \n|`EAGAIN`|No more processes or not enough memory or maximum nesting level reached|11|  \n|`ENOMEM`|Not enough memory|12|  \n|`EACCES`|Permission denied|13|  \n|`EFAULT`|Bad address|14|  \n|`EBUSY`|Device or resource busy|16|  \n|`EEXIST`|File exists|17|  \n|`EXDEV`|Cross-device link|18|  \n|`ENODEV`|No such device|19|  \n|`ENOTDIR`|Not a directory|20|  \n|`EISDIR`|Is a directory|21|  \n|`EINVAL`|Invalid argument|22|  \n|`ENFILE`|Too many files open in system|23|  \n|`EMFILE`|Too many open files|24|  \n|`ENOTTY`|Inappropriate I/O control operation|25|  \n|`EFBIG`|File too large|27|  \n|`ENOSPC`|No space left on device|28|  \n|`ESPIPE`|Invalid seek|29|  \n|`EROFS`|Read-only file system|30|  \n|`EMLINK`|Too many links|31|  \n|`EPIPE`|Broken pipe|32|  \n|`EDOM`|Math argument|33|  \n|`ERANGE`|Result too large|34|  \n|`EDEADLK`|Resource deadlock would occur|36|  \n|`EDEADLOCK`|Same as EDEADLK for compatibility with older Microsoft C versions|36|  \n|`ENAMETOOLONG`|Filename too long|38|  \n|`ENOLCK`|No locks available|39|  \n|`ENOSYS`|Function not supported|40|  \n|`ENOTEMPTY`|Directory not empty|41|  \n|`EILSEQ`|Illegal byte sequence|42|  \n|`STRUNCATE`|String was truncated|80|  \n  \n## Requirements  \n  \n|Global macro|Required header|Optional header|  \n|------------------|---------------------|---------------------|  \n|`errno`|\\<errno.h> or \\<stdlib.h>, \\<cerrno> or \\<cstdlib> (C++)||  \n|`_doserrno`, `_sys_errlist`, `_sys_nerr`|\\<stdlib.h>, \\<cstdlib> (C++)|\\<errno.h>, \\<cerrno> (C++)|  \n  \n The `_doserrno`, `_sys_errlist`, and `_sys_nerr` macros are Microsoft extensions. For more compatibility information, see [Compatibility](../c-runtime-library/compatibility.md).  \n  \n## See Also  \n [Global Variables](../c-runtime-library/global-variables.md)   \n [errno Constants](../c-runtime-library/errno-constants.md)   \n [perror, _wperror](../c-runtime-library/reference/perror-wperror.md)   \n [strerror, _strerror, _wcserror, \\__wcserror](../c-runtime-library/reference/strerror-strerror-wcserror-wcserror.md)   \n [strerror_s, _strerror_s, _wcserror_s, \\__wcserror_s](../c-runtime-library/reference/strerror-s-strerror-s-wcserror-s-wcserror-s.md)   \n [_get_doserrno](../c-runtime-library/reference/get-doserrno.md)   \n [_set_doserrno](../c-runtime-library/reference/set-doserrno.md)   \n [_get_errno](../c-runtime-library/reference/get-errno.md)   \n [_set_errno](../c-runtime-library/reference/set-errno.md)"}