{"nodes":[{"pos":[12,49],"content":"Compiler Error C2057 | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Compiler Error C2057 | Microsoft Docs","pos":[0,37]}]},{"content":"Compiler Error C2057","pos":[598,618]},{"content":"expected constant expression","pos":[619,647]},{"content":"The context requires a constant expression, an expression whose value is known at compile time.","pos":[654,749]},{"content":"The compiler must know the size of a type at compile time in order to allocate space for an instance of that type.","pos":[756,870]},{"content":"Example","pos":[879,886]},{"content":"The following sample generates C2057 and shows how to fix it:","pos":[890,951]},{"content":"Example","pos":[1168,1175]},{"content":"C has more restrictive rules for constant expressions.","pos":[1179,1233]},{"content":"The following sample generates C2057 and shows how to fix it:","pos":[1235,1296]}],"content":"---\ntitle: \"Compiler Error C2057 | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"error-reference\"\nf1_keywords: \n  - \"C2057\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"C2057\"\nms.assetid: 038a99d6-1f5a-42fa-8449-03b4ff11ee0b\ncaps.latest.revision: 11\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Compiler Error C2057\nexpected constant expression  \n  \n The context requires a constant expression, an expression whose value is known at compile time.  \n  \n The compiler must know the size of a type at compile time in order to allocate space for an instance of that type.  \n  \n## Example  \n The following sample generates C2057 and shows how to fix it:  \n  \n```  \n// C2057.cpp  \nint i;  \nint b[i];   // C2057 - value of i is unknown at compile time  \nint main() {  \n   const int i = 8;  \n   int b[i]; // OK - value of i is fixed and known to compiler  \n}  \n```  \n  \n## Example  \n C has more restrictive rules for constant expressions.  The following sample generates C2057 and shows how to fix it:  \n  \n```  \n// C2057b.c  \n#define ArraySize1 10  \nint main() {   \n   const int ArraySize2 = 10;   \n   int h[ArraySize2];   // C2057 - C does not allow variables here  \n   int h[ArraySize1];   // OK - uses preprocessor constant  \n}  \n```"}