<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-04506c2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cb2930157aabd7d585ed2f8b81876138e35464c6</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\build\reference\z7-zi-zi-debug-information-format.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7dffcf09ea1b623c709b81d5e13e10222a2a9ba4</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2ca3bf15dea5a826fb666b179472c1b075edc730</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>-Z7, -Zi, -ZI (Debug Information Format) | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>/Z7, /Zi, /ZI (Debug Information Format)</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Select the type of debugging information created for your program and whether this information is kept in object (.obj) files or in a program database (PDB).</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The options are described in the following table.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>None</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Produces no debugging information, so compilation is faster.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>/Z7</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Produces an .obj file containing full symbolic debugging information for use with the debugger.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The symbolic debugging information includes the names and types of variables, as well as functions and line numbers.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>No .pdb file is produced.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>For distributors of third-party libraries, there is an advantage to not having a .pdb file.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>However, the .obj files for the precompiled headers are necessary during the link phase, and debugging.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>If there is only type information (and no code) in the .pch object files, you will also have to compile with <bpt id="p1">[</bpt>/Yl (Inject PCH Reference for Debug Library)<ept id="p1">](../../build/reference/yl-inject-pch-reference-for-debug-library.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>/Zi</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Produces a program database (PDB) that contains type information and symbolic debugging information for use with the debugger.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The symbolic debugging information includes the names and types of variables, as well as functions and line numbers.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>/Zi<ept id="p1">**</ept> does not affect optimizations.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>However, <bpt id="p1">**</bpt>/Zi<ept id="p1">**</ept> does imply <bpt id="p2">**</bpt>/debug<ept id="p2">**</ept>; see <bpt id="p3">[</bpt>/DEBUG (Generate Debug Info)<ept id="p3">](../../build/reference/debug-generate-debug-info.md)</ept> for more information.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Type information is placed in the .pdb file, and not in the .obj file.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>You can use <bpt id="p1">[</bpt>/Gm (Enable Minimal Rebuild)<ept id="p1">](../../build/reference/gm-enable-minimal-rebuild.md)</ept> with <bpt id="p2">**</bpt>/Zi<ept id="p2">**</ept>, whereas <bpt id="p3">**</bpt>/Gm<ept id="p3">**</ept> is not available when compiling with <bpt id="p4">**</bpt>/Z7<ept id="p4">**</ept>.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>When compiling with <bpt id="p1">**</bpt>/Zi<ept id="p1">**</ept> and <bpt id="p2">**</bpt>/clr<ept id="p2">**</ept>, the &lt;xref:System.Diagnostics.DebuggableAttribute&gt; attribute will not be placed in the assembly metadata; you must specify it in source code, if you want it.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>This attribute can affect the runtime performance of the application.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>For more information about how the Debuggable attribute affects performance and how you can modify the performance impact, see <bpt id="p1">[</bpt>Making an Image Easier to Debug<ept id="p1">](http://msdn.microsoft.com/Library/7d90ea7a-150f-4f97-98a7-f9c26541b9a3)</ept>.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>/ZI</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Produces a program database, as described above, in a format that supports the Edit and Continue feature.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>If you want to use Edit and Continue debugging, you must use this option.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Because most optimizations are incompatible with Edit and Continue, using <bpt id="p1">**</bpt>/ZI<ept id="p1">**</ept> disables any <ph id="ph1">`#pragma optimize`</ph> statements in your code.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>/ZI<ept id="p1">**</ept> causes <bpt id="p2">[</bpt>/Gy (Enable Function-Level Linking)<ept id="p2">](../../build/reference/gy-enable-function-level-linking.md)</ept> and <bpt id="p3">[</bpt>/FC (Full Path of Source Code File in Diagnostics)<ept id="p3">](../../build/reference/fc-full-path-of-source-code-file-in-diagnostics.md)</ept> to be used in your compilation.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>/ZI<ept id="p1">**</ept> is not compatible with <bpt id="p2">[</bpt>/clr (Common Language Runtime Compilation)<ept id="p2">](../../build/reference/clr-common-language-runtime-compilation.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> **</bpt>/ZI<ept id="p1">**</ept> is only available in the compilers targeting x86 and x64 processors; this compiler option is not available in the compilers targeting ARM processors.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The compiler names the program database <bpt id="p1">*</bpt>project<ept id="p1">*</ept>.pdb.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>If you compile a file without a project, the compiler creates a database named VC<bpt id="p1">*</bpt>x<ept id="p1">*</ept>0.pdb., where <bpt id="p2">*</bpt>x<ept id="p2">*</ept> is the major version of <ph id="ph1">[!INCLUDE[vcprvc](../../build/includes/vcprvc_md.md)]</ph> in use.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The compiler embeds the name of the PDB in each .obj file created using this option, pointing the debugger to the location of symbolic and line-number information.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>When you use this option, your .obj files will be smaller, because debugging information is stored in the .pdb file rather than in .obj files.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>If you create a library from objects that were compiled using this option, the associated .pdb file must be available when the library is linked to a program.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Thus, if you distribute the library, you must distribute the PDB.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>To create a library that contains debugging information without using .pdb files, you must select the compiler's C 7.0-Compatible (<bpt id="p1">**</bpt>/Z7<ept id="p1">**</ept>) option.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>If you use the precompiled headers options, debugging information for both the precompiled header and the rest of the source code is placed in the PDB.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>/Yd<ept id="p1">**</ept> option is ignored when the Program Database option is specified.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>To set this compiler option in the Visual Studio development environment</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Open the project's <bpt id="p1">**</bpt>Property Pages<ept id="p1">**</ept> dialog box.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>For details, see <bpt id="p1">[</bpt>Working with Project Properties<ept id="p1">](../../ide/working-with-project-properties.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Click the <bpt id="p1">**</bpt>C/C++<ept id="p1">**</ept> folder.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Click the <bpt id="p1">**</bpt>General<ept id="p1">**</ept> property page.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Modify the <bpt id="p1">**</bpt>Debug Information Format<ept id="p1">**</ept> property.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>To set this compiler option programmatically</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>See &lt;xref:Microsoft.VisualStudio.VCProjectEngine.VCCLCompilerTool.DebugInformationFormat%2A&gt;.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Compiler Options</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Setting Compiler Options</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>