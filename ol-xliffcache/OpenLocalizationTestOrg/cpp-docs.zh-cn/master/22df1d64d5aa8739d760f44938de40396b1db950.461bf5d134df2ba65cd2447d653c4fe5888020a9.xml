{"nodes":[{"pos":[12,69],"content":"Calling C++ Functions in Inline Assembly | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Calling C++ Functions in Inline Assembly | Microsoft Docs","pos":[0,57]}]},{"content":"Calling C++ Functions in Inline Assembly","pos":[812,852]},{"content":"Microsoft Specific","pos":[856,874]},{"content":"An <ph id=\"ph1\">`__asm`</ph> block can call only global C++ functions that are not overloaded.","pos":[878,954],"source":"An `__asm` block can call only global C++ functions that are not overloaded."},{"content":"If you call an overloaded global C++ function or a C++ member function, the compiler issues an error.","pos":[955,1056]},{"content":"You can also call any functions declared with <bpt id=\"p1\">**</bpt>extern \"C\"<ept id=\"p1\">**</ept> linkage.","pos":[1063,1132],"source":"You can also call any functions declared with **extern \"C\"** linkage."},{"content":"This allows an <ph id=\"ph1\">`__asm`</ph> block within a C++ program to call the C library functions, because all the standard header files declare the library functions to have <bpt id=\"p1\">**</bpt>extern \"C\"<ept id=\"p1\">**</ept> linkage.","pos":[1133,1315],"source":" This allows an `__asm` block within a C++ program to call the C library functions, because all the standard header files declare the library functions to have **extern \"C\"** linkage."},{"content":"END Microsoft Specific","pos":[1324,1346]},{"content":"See Also","pos":[1357,1365]},{"content":"Inline Assembler","pos":[1370,1386]}],"content":"---\ntitle: \"Calling C++ Functions in Inline Assembly | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"functions [C++], calling in inline assembly\"\n  - \"function calls, C++ functions\"\n  - \"function calls, in inline assembly\"\n  - \"Visual C++, functions\"\n  - \"inline assembly, calling functions\"\n  - \"__asm keyword [C++], calling functions\"\nms.assetid: 1f0d1eb3-54cf-45d5-838d-958188616b38\ncaps.latest.revision: 7\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Calling C++ Functions in Inline Assembly\n## Microsoft Specific  \n An `__asm` block can call only global C++ functions that are not overloaded. If you call an overloaded global C++ function or a C++ member function, the compiler issues an error.  \n  \n You can also call any functions declared with **extern \"C\"** linkage. This allows an `__asm` block within a C++ program to call the C library functions, because all the standard header files declare the library functions to have **extern \"C\"** linkage.  \n  \n **END Microsoft Specific**  \n  \n## See Also  \n [Inline Assembler](../../assembler/inline/inline-assembler.md)"}