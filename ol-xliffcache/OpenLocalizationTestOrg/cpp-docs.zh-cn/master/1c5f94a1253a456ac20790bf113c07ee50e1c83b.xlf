<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-04506c2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1c5f94a1253a456ac20790bf113c07ee50e1c83b</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\mfc\tn029-splitter-windows.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">00b267a2f980ca954c169602604a736763436bf6</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b354160bcc2bec2517e9b3b22ab51a354c454fac</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>TN029: Splitter Windows | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>TN029: Splitter Windows</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This note describes the MFC <bpt id="p1">[</bpt>CSplitterWnd Class<ept id="p1">](../mfc/reference/csplitterwnd-class.md)</ept>, which provides window splits and manages the resizing of other pane windows.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Splitter Styles</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">`CSplitterWnd`</ph> supports two different styles of splitting windows.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>In "static splitters," the splitter window creates the panes when it is created.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The order and number of panes never change.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Splitter bars are used to resize the different panes.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>You can use this style to display a different view class in each pane.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The Visual C++ graphics editor and the Windows File Manager are examples of programs that use this splitter style.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>This style of splitter window does not use splitter boxes.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>In "dynamic splitters," additional panes are created and destroyed as the user splits and un-splits new views.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>This splitter starts out with a single view and provides splitter boxes for the user to initiate splitting.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The splitter window dynamically creates a new view object when the view is split in one direction.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>This new view object represents the new pane.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>If the view is split in two directions by using the keyboard interface, the splitter window creates three new view objects for the three new panes.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>While the split is active, Windows displays the splitter box as a splitter bar between the panes.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Windows destroys additional view objects when the user removes a split, but the original view remains until the splitter window itself is destroyed.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Microsoft Excel and Microsoft Word are examples of applications that use the dynamic splitter style.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>When you create either kind of splitter window, you must specify the maximum number of rows and columns that the splitter will manage.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>A static splitter will create panes to fill all the rows and columns.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>A dynamic splitter will create only the first pane when the <ph id="ph1">`CSplitterWnd`</ph> is created.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The maximum number of panes you can specify for static splitters is 16 rows by 16 columns.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The recommended configurations are:</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>1 row x 2 columns : usually with dissimilar panes</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>2 rows x 1 column : usually with dissimilar panes</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>2 rows x 2 columns : usually with similar panes</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The maximum number of panes that you can specify for dynamic splitters is 2 rows by 2 columns.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The recommended configurations are:</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>1 row x 2 columns : for columnar data</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>2 rows x 1 column : for textual or other data</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>2 rows x 2 columns : for grid or table oriented data</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Splitter Examples</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Many of the MFC sample programs use splitter windows directly or indirectly.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The MFC General sample <bpt id="p1">[</bpt>VIEWEX<ept id="p1">](../visual-cpp-samples.md)</ept> illustrates several uses of static splitters, including how to place a splitter in a splitter.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>You can also use ClassWizard to create a new multiple document interface (MDI) Child frame window class that contains a splitter window.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>For more information on splitter windows, see <bpt id="p1">[</bpt>Multiple Document Types, Views, and Frame Windows<ept id="p1">](../mfc/multiple-document-types-views-and-frame-windows.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Terminology Used by Implementation</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Here is a list of terms that are specific to splitter windows:</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>:</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>A window that provides pane-splitting controls and scroll bars that are shared between all panes on a row or column.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>You specify rows and columns with zero-based numbers (the first pane is row = 0 and column = 0).</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Pane:</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>An application-specific window that a <ph id="ph1">`CSplitterWnd`</ph> manages.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>A pane is usually an object that is derived from the <bpt id="p1">[</bpt>CView Class<ept id="p1">](../mfc/reference/cview-class.md)</ept>, but can be any <bpt id="p2">[</bpt>CWnd<ept id="p2">](../mfc/reference/cwnd-class.md)</ept> object that has the appropriate child window ID.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>To use a <ph id="ph1">`CWnd`</ph>-derived object, pass the <ph id="ph2">`RUNTIME_CLASS`</ph> of the object to the <ph id="ph3">`CreateView`</ph> function as you would if you were using a <ph id="ph4">`CView`</ph>-derived class.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Your class must use <ph id="ph1">`DECLARE_DYNCREATE`</ph> and <ph id="ph2">`IMPLEMENT_DYNCREATE`</ph> because the framework uses dynamic creation at runtime.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Although there is a lot of code in <ph id="ph1">`CSplitterWnd`</ph> that is specific to the <ph id="ph2">`CView`</ph> class, <bpt id="p1">[</bpt>CObject::IsKindOf<ept id="p1">](../mfc/reference/cobject-class.md#cobject__iskindof)</ept> is always used before those actions are performed.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Splitter Bar:</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>A control that is placed between rows and columns of panes.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>It may be used to adjust the sizes of rows or columns of panes.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Splitter Box:</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>A control in a dynamic <ph id="ph1">`CSplitterWnd`</ph> that you can use to create new rows or columns of panes.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>It is located at the top of the vertical scroll bars or to the left of the horizontal scroll bars.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Splitter Intersection:</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The intersection of a vertical splitter bar and a horizontal splitter bar.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>You can drag it to adjust the size of a row and column of panes simultaneously.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Shared Scroll Bars</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`CSplitterWnd`</ph> class also supports shared scroll bars.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>These scroll bar controls are children of the <ph id="ph1">`CSplitterWnd`</ph> and are shared with the different panes in the splitter.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>For example, in a 1 row x 2 column window, you can specify WS_VSCROLL when creating the <ph id="ph1">`CSplitterWnd`</ph>.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Windows creates a special scroll bar control that is shared between the two panes.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>When the user moves the scroll bar, <ph id="ph1">`WM_VSCROLL`</ph> messages will be sent to both views.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>When either view sets the scroll bar position, the shared scroll bar will be set.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Note that shared scroll bars are most useful with similar view objects.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>If you mix views of different types in a splitter, then you may have to write special code to coordinate their scroll positions.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Any <ph id="ph1">`CView`</ph>-derived class that uses the <ph id="ph2">`CWnd`</ph> scroll bar APIs will delegate to the shared scroll bar if it exists.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`CScrollView`</ph> implementation is one example of a <ph id="ph2">`CView`</ph> class that supports shared scroll bars.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Classes that are not derived from <ph id="ph1">`CView`</ph>, classes that rely on non-control scroll bars, or classes that use standard Windows implementations (for example, <ph id="ph2">`CEditView`</ph>) will not work with the shared scroll bar feature of <ph id="ph3">`CSplitterWnd`</ph>.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Minimum Sizes</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>For each row there is a minimum row height, and for each column there is a minimum column width.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>This minimum guarantees that a pane is not too small to be shown in complete detail.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>For a static splitter window, the initial minimum row height and column width is 0.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>For a dynamic splitter window, the initial minimum row height and column width are set by the <ph id="ph1">`sizeMin`</ph> parameter of the <ph id="ph2">`CSplitterWnd::Create`</ph> function.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>You can change these minimum sizes by using the <bpt id="p1">[</bpt>CSplitterWnd::SetRowInfo<ept id="p1">](../mfc/reference/csplitterwnd-class.md#csplitterwnd__setrowinfo)</ept> and <bpt id="p2">[</bpt>CSplitterWnd::SetColumnInfo<ept id="p2">](../mfc/reference/csplitterwnd-class.md#csplitterwnd__setcolumninfo)</ept> functions.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Actual vs. Ideal Sizes</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>The layout of the panes in the splitter window depends on the size of the frame that contains them.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>When a user resizes the containing frame, the <ph id="ph1">`CSplitterWnd`</ph> repositions and resizes the panes so that they fit as well as possible.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>The user can manually set the row height and column width sizes, or the program can set the ideal size by using the <ph id="ph1">`CSplitterWnd`</ph> class.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>The actual size can be smaller or larger than the ideal.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Windows will adjust the actual size if there is not enough room to display the ideal size or if there is too much empty space on the right or bottom of the splitter window.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Custom Controls</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>You can override many functions to provide customized behavior and a customized interface.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>You can override this first set to provide alternate imagery for the various graphical components of a splitter window.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>You call this function to create a shared scroll bar control.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>You can override it to create extra controls next to the scroll bar.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>These functions implement the logic of the dynamic splitter window.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>You can override these to provide more advanced splitter logic.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>CView Functionality</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`CView`</ph> class uses the following high level commands to delegate to the <ph id="ph2">`CSplitterWnd`</ph> implementation.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Because these commands are virtual, the standard <ph id="ph1">`CView`</ph> implementation will not require the entire <ph id="ph2">`CSplitterWnd`</ph> implementation to be linked in.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>For applications that use <ph id="ph1">`CView`</ph> but not <ph id="ph2">`CSplitterWnd`</ph>, the <ph id="ph3">`CSplitterWnd`</ph> implementation will not be linked with the application.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Checks whether ID_NEXT_PANE or ID_PREV_PANE is currently possible.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Executes the "Next Pane" or "Previous Pane" command.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Executes the keyboard split command, usually "Window Split".</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Technical Notes by Number</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Technical Notes by Category</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>