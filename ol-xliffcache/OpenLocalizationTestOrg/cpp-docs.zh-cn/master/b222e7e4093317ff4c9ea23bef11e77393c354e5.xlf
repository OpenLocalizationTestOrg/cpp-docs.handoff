<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-04506c2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b222e7e4093317ff4c9ea23bef11e77393c354e5</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\c-runtime-library\is-isw-routines.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">40be0ac09445b8d90a9528f90ce18692f929dee6</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a164c83487bbe8ab8cacf9f5317f71f8a80f4522</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>is, isw Routines | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>is, isw Routines</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>isalnum, iswalnum, _isalnum_l, _iswalnum_l</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>isgraph, iswgraph, _isgraph_l, _iswgraph_l</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>isalpha, iswalpha, _isalpha_l, _iswalpha_l</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>isleadbyte, _isleadbyte_l</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>isascii, __isascii, iswascii</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>islower, iswlower, _islower_l, _iswlower_l</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>isblank, iswblank, _isblank_l, _iswblank_l</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>isprint, iswprint, _isprint_l, _iswprint_l</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>iscntrl, iswcntrl, _iscntrl_l, _iswcntrl_l</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>ispunct, iswpunct, _ispunct_l, _iswpunct_l</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>iscsym, iscsymf, __iscsym, <ph id="ph1">\_</ph>_iswcsym, <ph id="ph2">\_</ph>_iscsymf, <ph id="ph3">\_</ph>_iswcsymf, _iscsym_l, _iswcsym_l, _iscsymf_l, _iswcsymf_l</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>isspace, iswspace, _isspace_l, _iswspace_l</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>_isctype, iswctype, _isctype_l, _iswctype_l</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>isupper, _isupper_l, iswupper, _iswupper_l</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>isdigit, iswdigit, _isdigit_l, _iswdigit_l</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>isxdigit, iswxdigit, _isxdigit_l, _iswxdigit_l</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>These routines test characters for specified conditions.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>is<ept id="p1">**</ept> routines produce meaningful results for any integer argument from –1 (<ph id="ph1">`EOF`</ph>) to <bpt id="p2">**</bpt>UCHAR_MAX<ept id="p2">**</ept> (0xFF), inclusive.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The expected argument type is <ph id="ph1">`int`</ph>.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>For the <bpt id="p1">**</bpt>is<ept id="p1">**</ept> routines, passing an argument of type <ph id="ph1">`char`</ph> may yield unpredictable results.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>An SBCS or MBCS single-byte character of type <ph id="ph1">`char`</ph> with a value greater than 0x7F is negative.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>If a <ph id="ph1">`char`</ph> is passed, the compiler may convert the value to a signed <ph id="ph2">`int`</ph> or a signed <bpt id="p1">**</bpt>long<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>This value may be sign-extended by the compiler, with unexpected results.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>isw<ept id="p1">**</ept> routines produce meaningful results for any integer value from – 1 (<bpt id="p2">**</bpt>WEOF<ept id="p2">**</ept>) to 0xFFFF, inclusive.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>wint_t<ept id="p1">**</ept> data type is defined in WCHAR.H as an <bpt id="p2">**</bpt>unsigned short<ept id="p2">**</ept>; it can hold any wide character or the wide-character end-of-file (<bpt id="p3">**</bpt>WEOF<ept id="p3">**</ept>) value.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The output value is affected by the setting of the <ph id="ph1">`LC_CTYPE`</ph> category setting of the locale; see <bpt id="p1">[</bpt>setlocale<ept id="p1">](../c-runtime-library/reference/setlocale-wsetlocale.md)</ept> for more information.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The versions of these functions without the <bpt id="p1">**</bpt>_l<ept id="p1">**</ept> suffix use the current locale for this locale-dependent behavior; the versions with the <bpt id="p2">**</bpt>_l<ept id="p2">**</ept> suffix are identical except that they use the locale parameter passed in instead.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>In the "C" locale, the test conditions for the <bpt id="p1">**</bpt>is<ept id="p1">**</ept> routines are as follows:</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Alphanumeric (A – Z, a – z, or 0 – 9).</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Alphabetic (A – Z or a – z).</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>ASCII character (0x00 – 0x7F).</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Horizontal tab or space character (0x09 or 0x20).</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Control character (0x00 – 0x1F or 0x7F).</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Letter, underscore, or digit.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Letter or underscore.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>isdigit</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Decimal digit (0 – 9).</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Printable character except space ( ).</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Lowercase letter (a – z).</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Printable character including space (0x20 – 0x7E).</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Punctuation character.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>White-space character (0x09 – 0x0D or 0x20).</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Uppercase letter (A – Z).</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Hexadecimal digit (A – F, a – f, or 0 – 9).</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>For the <bpt id="p1">**</bpt>isw<ept id="p1">**</ept> routines, the result of the test for the specified condition is independent of locale.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The test conditions for the <bpt id="p1">**</bpt>isw<ept id="p1">**</ept> functions are as follows:</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>or <ph id="ph1">`iswdigit`</ph>.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Any wide character that is one of an implementation-defined set for which none of <ph id="ph1">`iswcntrl`</ph>, <ph id="ph2">`iswdigit`</ph>, <ph id="ph3">`iswpunct`</ph>, or <ph id="ph4">`iswspace`</ph> is nonzero.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>returns nonzero only for wide characters for which <ph id="ph1">`iswupper`</ph> or <ph id="ph2">`iswlower`</ph> is nonzero.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Wide-character representation of ASCII character (0x0000 – 0x007F).</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Wide character that corresponds to the standard space character or is one of an implementation-defined set of wide characters for which <ph id="ph1">`iswalnum`</ph> is false.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Standard blank characters are space (L' ') and horizontal tab (L'\t').</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Control wide character.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>__iswcsym</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Any wide character for which <bpt id="p1">**</bpt>isalnum<ept id="p1">**</ept> is true, or the '_' character.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>__iswcsymf</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Any wide character for which <ph id="ph1">`iswalpha`</ph> is true, or the '_' character.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Character has property specified by the <ph id="ph1">`desc`</ph> argument.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>For each valid value of the <ph id="ph1">`desc`</ph> argument of <ph id="ph2">`iswctype`</ph>, there is an equivalent wide-character classification routine, as shown in the following table:</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Equivalence of iswctype(</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>c, desc<ept id="p1">*</ept> ) to Other isw Testing Routines</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Value of <bpt id="p1">*</bpt>desc<ept id="p1">*</ept> argument</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>iswctype( <bpt id="p1">*</bpt>c, desc<ept id="p1">*</ept> ) equivalent</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>_ALPHA</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>iswalpha(<ept id="p1">**</ept> <ph id="ph1">`c`</ph> <bpt id="p2">**</bpt>)<ept id="p2">**</ept></source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>_ALPHA<ept id="p1">**</ept> &amp;#124; <bpt id="p2">**</bpt>_DIGIT<ept id="p2">**</ept></source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>iswalnum(<ept id="p1">**</ept> <ph id="ph1">`c`</ph> <bpt id="p2">**</bpt>)<ept id="p2">**</ept></source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>_BLANK</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>iswblank(<ept id="p1">**</ept> <ph id="ph1">`c`</ph> <bpt id="p2">**</bpt>)<ept id="p2">**</ept></source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>_CONTROL</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>iswcntrl(<ept id="p1">**</ept> <ph id="ph1">`c`</ph> <bpt id="p2">**</bpt>)<ept id="p2">**</ept></source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>_DIGIT</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>iswdigit(<ept id="p1">**</ept> <ph id="ph1">`c`</ph> <bpt id="p2">**</bpt>)<ept id="p2">**</ept></source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>_ALPHA<ept id="p1">**</ept> &amp;#124; <bpt id="p2">**</bpt>_DIGIT<ept id="p2">**</ept> &amp;#124; <bpt id="p3">**</bpt>_PUNCT<ept id="p3">**</ept></source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>iswgraph(<ept id="p1">**</ept> <ph id="ph1">`c`</ph> <bpt id="p2">**</bpt>)<ept id="p2">**</ept></source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>_LOWER</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>iswlower(<ept id="p1">**</ept> <ph id="ph1">`c`</ph> <bpt id="p2">**</bpt>)<ept id="p2">**</ept></source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>_ALPHA<ept id="p1">**</ept> &amp;#124; <bpt id="p2">**</bpt>_BLANK<ept id="p2">**</ept> &amp;#124; <bpt id="p3">**</bpt>_DIGIT<ept id="p3">**</ept> &amp;#124; <bpt id="p4">**</bpt>_PUNCT<ept id="p4">**</ept></source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>iswprint(<ept id="p1">**</ept> <ph id="ph1">`c`</ph> <bpt id="p2">**</bpt>)<ept id="p2">**</ept></source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>_PUNCT</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>iswpunct(<ept id="p1">**</ept> <ph id="ph1">`c`</ph> <bpt id="p2">**</bpt>)<ept id="p2">**</ept></source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>_BLANK</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>iswblank(<ept id="p1">**</ept> <ph id="ph1">`c`</ph> <bpt id="p2">**</bpt>)<ept id="p2">**</ept></source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>_SPACE</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>iswspace(<ept id="p1">**</ept> <ph id="ph1">`c`</ph> <bpt id="p2">**</bpt>)<ept id="p2">**</ept></source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>_UPPER</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>iswupper(<ept id="p1">**</ept> <ph id="ph1">`c`</ph> <bpt id="p2">**</bpt>)<ept id="p2">**</ept></source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>_HEX</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>iswxdigit(<ept id="p1">**</ept> <ph id="ph1">`c`</ph> <bpt id="p2">**</bpt>)<ept id="p2">**</ept></source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Wide character corresponding to a decimal-digit character.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Printable wide character except space wide character (L' ').</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Lowercase letter, or one of implementation-defined set of wide characters for which none of <ph id="ph1">`iswcntrl`</ph>, <ph id="ph2">`iswdigit`</ph>, <ph id="ph3">`iswpunct`</ph>, or <ph id="ph4">`iswspace`</ph> is nonzero.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>returns nonzero only for wide characters that correspond to lowercase letters.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Printable wide character, including space wide character (L' ').</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Printable wide character that is neither space wide character (L' ') nor wide character for which <ph id="ph1">`iswalnum`</ph> is nonzero.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Wide character that corresponds to standard white-space character or is one of implementation-defined set of wide characters for which <ph id="ph1">`iswalnum`</ph> is false.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Standard white-space characters are: space (L' '), formfeed (L'\f'), newline (L'\n'), carriage return (L'\r'), horizontal tab (L'\t'), and vertical tab (L'\v').</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Wide character that is uppercase or is one of an implementation-defined set of wide characters for which none of <ph id="ph1">`iswcntrl`</ph>, <ph id="ph2">`iswdigit`</ph>, <ph id="ph3">`iswpunct`</ph>, or <ph id="ph4">`iswspace`</ph> is nonzero.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>returns nonzero only for wide characters that correspond to uppercase characters.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Wide character that corresponds to a hexadecimal-digit character.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Output</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Character Classification</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Locale</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>setlocale, _wsetlocale</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Interpretation of Multibyte-Character Sequences</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>to Functions</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>