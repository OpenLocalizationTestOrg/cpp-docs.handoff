<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-787e512" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b7c7e1195a83dda002d7a427bd7685ff87699a8e</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\mfc\dynamic-layout.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">15af62d52ddb95b876eb1008a5a9b362ad94d6c4</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">66973ff04a7e3aa44f66400b8a3cfefa66ae968c</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Dynamic Layout | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Dynamic Layout</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>With MFC in <ph id="ph1">[!INCLUDE[vs_dev14](../ide/includes/vs_dev14_md.md)]</ph>, you can create dialogs that the user can resize, and you can control the way the layout adjusts to the change in size.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>For example, you can attach buttons at the bottom of a dialog to the bottom edge so they always stay at the bottom.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>You can also set up certain controls such as listboxes, editboxes, and text fields to expand as the user expands the dialog.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Specifying dynamic layout settings for an MFC dialog box</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>When the user resizes a dialog, the controls in the dialog can resize or move in the X and Y directions.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The change in size or position of a control when the user resizes a dialog is called dynamic layout.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>For example, the following is a dialog before being resized:</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Dialog before being resized.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>After being resized, the listbox area is increased to show more items, and the buttons are moved along with the bottom right corner:</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Dialog after being resized.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>You can control dynamic layout by specifying the details for each control in the Resource Editor in the IDE, or you can do so programmatically by accessing the CMFCDynamicLayout object for a particular control and setting the properties.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Setting dynamic layout properties in the resource editor</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>You can set the dynamic layout behavior for a dialog box without having to write any code, by using the resource editor.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>To set dynamic layout properties in the resource editor</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>With an MFC project open, open the dialog you want to work with in the dialog editor.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Open the dialog in the resource editor.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Select a control and in the properties window, set its dynamic layout properties.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Dynamic Layout<ept id="p1">**</ept> section in the properties window contains the properties <bpt id="p2">**</bpt>Moving Type<ept id="p2">**</ept>, <bpt id="p3">**</bpt>Sizing Type<ept id="p3">**</ept>, and, depending on the values selected for those properties, specific properties that define how much controls move or change size.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Moving Type<ept id="p1">**</ept> determines how a control is moved as the size of the dialog is changed; <bpt id="p2">**</bpt>Sizing Type<ept id="p2">**</ept> determines how a control is resized as the size of the dialog is changed.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Moving Type<ept id="p1">**</ept> and <bpt id="p2">**</bpt>Sizing Type<ept id="p2">**</ept> may be <bpt id="p3">**</bpt>Horizontal<ept id="p3">**</ept>, <bpt id="p4">**</bpt>Vertical<ept id="p4">**</ept>, <bpt id="p5">**</bpt>Both<ept id="p5">**</ept>, or <bpt id="p6">**</bpt>None<ept id="p6">**</ept> depending on the dimensions that you want to change dynamically.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Horizontal is the X dimension; Vertical is the Y direction.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>If you want a control such as a button to be at a fixed size and stay in place at the bottom right, as is common for the <bpt id="p1">**</bpt>OK<ept id="p1">**</ept> or <bpt id="p2">**</bpt>Cancel<ept id="p2">**</ept> buttons, set the <bpt id="p3">**</bpt>Sizing Type<ept id="p3">**</ept> to <bpt id="p4">**</bpt>None<ept id="p4">**</ept>, and set the <bpt id="p5">**</bpt>Moving Type<ept id="p5">**</ept> to <bpt id="p6">**</bpt>Both<ept id="p6">**</ept>.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>For the <bpt id="p1">**</bpt>Moving X<ept id="p1">**</ept> and <bpt id="p2">**</bpt>Moving Y<ept id="p2">**</ept> values under <bpt id="p3">**</bpt>Moving Type<ept id="p3">**</ept>, set 100% to cause the control to stay a fixed distance from the bottom right corner.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Dynamic Layout</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Suppose you also have a control that you want to expand as the dialog expands.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Typically, a user might expand a dialog in order to expand a multiline editbox to increase the size of the text area, or they might expand a list control to see more data.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>For this case, set the <bpt id="p1">**</bpt>Sizing Type<ept id="p1">**</ept> to Both, and set the <bpt id="p2">**</bpt>Moving Type<ept id="p2">**</ept> to none.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Then, set the <bpt id="p1">**</bpt>Sizing X<ept id="p1">**</ept> and <bpt id="p2">**</bpt>Sizing Y<ept id="p2">**</ept> values to 100.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Dynamic Layout Settings</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Experiment with other values that might make sense for your controls.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>A dialog with a one-line textbox might have the <bpt id="p1">**</bpt>Sizing Type<ept id="p1">**</ept> set to <bpt id="p2">**</bpt>Horizontal<ept id="p2">**</ept> only, for example.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Setting dynamic layout properties programmatically</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The previous procedure is useful for specifying dynamic layout properties for a dialog at design time, but if you want to control the dynamic layout at runtime, you can set dynamic layout properties programmatically.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>To set dynamic layout properties programmatically</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Find or create a place in your dialog class's implementation code where you want to specify the dynamic layout for the dialog.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>For example, you might want to add a method such as <ph id="ph1">`AdjustLayout`</ph> in your dialog, and call it from places where the layout needs to be changed.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>You might first call this from the constructor, or after making changes to the dialog.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>For the dialog, call <bpt id="p1">[</bpt>GetDynamicLayout<ept id="p1">](../mfc/reference/cwnd-class.md#cwnd__getdynamiclayout)</ept>, a method of the CWnd class.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>GetDynamicLayout returns a pointer to a CMFCDynamicLayout object.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>For the first control to which you want to add dynamic behavior, use the static methods on the dynamic layout class to create the <bpt id="p1">[</bpt>MoveSettings<ept id="p1">](../mfc/reference/cmfcdynamiclayout-class.md#cmfcdynamiclayout__movesettings_structure)</ept> structure that encodes the way the control should be adjusted.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>You do this by first choosing the appropriate static method: <bpt id="p1">[</bpt>CMFCDynamicLayout::MoveHorizontal<ept id="p1">](../mfc/reference/cmfcdynamiclayout-class.md#cmfcdynamiclayout__movehorizontal)</ept>, <bpt id="p2">[</bpt>CMFCDynamicLayout::MoveVertical<ept id="p2">](../mfc/reference/cmfcdynamiclayout-class.md#cmfcdynamiclayout__movevertical)</ept>, <bpt id="p3">[</bpt>CMFCDynamicLayout::MoveNone<ept id="p3">](../mfc/reference/cmfcdynamiclayout-class.md#cmfcdynamiclayout__movenone)</ept>, or <bpt id="p4">[</bpt>CMFCDynamicLayout::MoveHorizontalAndVertical<ept id="p4">](../mfc/reference/cmfcdynamiclayout-class.md#cmfcdynamiclayout__movehorizontalandvertical)</ept>.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>You pass in a percentage for the horizontal and/or vertical aspects of the move.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>These static methods all return a newly created MoveSettings object that you can use to specify a control's move behavior.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Keep in mind that 100 means move exactly as much as the dialog changes size, which causes a control's edge to stay a fixed distance from the new border.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Do the same thing for the size behavior, which uses the <bpt id="p1">[</bpt>SizeSettings<ept id="p1">](../mfc/reference/cmfcdynamiclayout-class.md#cmfcdynamiclayout__sizesettings_structure)</ept> type.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>For example, to specify that a control does not change size when the dialog resizes, use the following code:</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Add the control to the dynamic layout manager using the <bpt id="p1">[</bpt>CMFCDynamicLayout::AddItem<ept id="p1">](../mfc/reference/cmfcdynamiclayout-class.md#cmfcdynamiclayout__additem)</ept> method.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>There are two overloads for different ways of specifying the desired control.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>One takes the control's window handle (HWND), and the other takes the control ID.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Repeat for each control that needs to be moved or resized.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>If necessary, can use the <bpt id="p1">[</bpt>CMFCDynamicLayout::HasItem<ept id="p1">](../mfc/reference/cmfcdynamiclayout-class.md#cmfcdynamiclayout__hasitem)</ept> method to determine if a control is already on the list of controls subjected to dyamic layout changes, or the <bpt id="p2">[</bpt>CMFCDynamicLayout::IsEmpty<ept id="p2">](../mfc/reference/cmfcdynamiclayout-class.md#cmfcdynamiclayout__isempty)</ept> method to determine if there are any controls that are subject to changes.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>To enable dialog layout, call the <bpt id="p1">[</bpt>CWnd::EnableDynamicLayout<ept id="p1">](../mfc/reference/cwnd-class.md#cwnd__enabledynamiclayout)</ept> method.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The next time the user resizes the dialog, the <bpt id="p1">[</bpt>CMFCDynamicLayout::Adjust<ept id="p1">](../mfc/reference/cmfcdynamiclayout-class.md#cmfcdynamiclayout__adjust)</ept> method is called which actually applies the settings.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>If you want to disable dynamic layout, call <bpt id="p1">[</bpt>CWnd::EnableDynamicLayout<ept id="p1">](../mfc/reference/cwnd-class.md#cwnd__enabledynamiclayout)</ept> with <ph id="ph1">`FALSE`</ph> as for the <ph id="ph2">`bEnabled`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>To set the dynamic layout programmatically from a resource file</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Use the <bpt id="p1">[</bpt>CMFCDynamicLayout::MoveHorizontalAndVertical<ept id="p1">](../mfc/reference/cmfcdynamiclayout-class.md#cmfcdynamiclayout__movehorizontalandvertical)</ept> method to specify a resource name in the relevant resource script file (.rc file) that specifies dynamic layout information, as in the following example:</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The named resource must reference a dialog that contains layout information in the form of an AFX_DIALOG_LAYOUT entry in the resource file, as in the following example:</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt><ph id="ph1">///////////////////////////////////////////////////////////////////////////// </ph><ept id="p1">*</ept><ph id="ph2">// </ph><bpt id="p2">*</bpt>// AFX_DIALOG_LAYOUT <ept id="p2">*</ept></source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>IDD_MFCAPPLICATION1_DIALOG AFX_DIALOG_LAYOUT</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>BEGIN 0x0000, 0x6400, 0x0028, 0x643c, 0x0028</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>END</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>IDD_DIALOG1 AFX_DIALOG_LAYOUT</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>BEGIN 0x0000, 0x6464, 0x0000, 0x6464, 0x0000, 0x0000, 0x6464, 0x0000, 0x0000</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>END</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>