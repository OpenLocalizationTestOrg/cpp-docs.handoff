{"nodes":[{"pos":[12,100],"content":"Changes in the DLL Delayed Loading Helper Function Since Visual C++ 6.0 | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Changes in the DLL Delayed Loading Helper Function Since Visual C++ 6.0 | Microsoft Docs","pos":[0,88]}]},{"content":"Changes in the DLL Delayed Loading Helper Function Since Visual C++ 6.0","pos":[743,814]},{"content":"If you have multiple versions of Visual C++ on your computer or if you defined your own helper function, you may be affected by changes made to the DLL delayed loading helper function.","pos":[815,999]},{"content":"For example:","pos":[1000,1012]},{"pos":[1022,1073],"content":"<bpt id=\"p1\">**</bpt>__delayLoadHelper<ept id=\"p1\">**</ept> is now <bpt id=\"p2\">**</bpt>__delayLoadHelper2<ept id=\"p2\">**</ept>","source":"**__delayLoadHelper** is now **__delayLoadHelper2**"},{"pos":[1083,1136],"content":"<bpt id=\"p1\">**</bpt>__pfnDliNotifyHook<ept id=\"p1\">**</ept> is now <bpt id=\"p2\">**</bpt>__pfnDliNotifyHook2<ept id=\"p2\">**</ept>","source":"**__pfnDliNotifyHook** is now **__pfnDliNotifyHook2**"},{"pos":[1146,1201],"content":"<bpt id=\"p1\">**</bpt>__pfnDliFailureHook<ept id=\"p1\">**</ept> is now <bpt id=\"p2\">**</bpt>__pfnDliFailureHook2<ept id=\"p2\">**</ept>","source":"**__pfnDliFailureHook** is now **__pfnDliFailureHook2**"},{"pos":[1211,1274],"content":"<bpt id=\"p1\">**</bpt>__FUnloadDelayLoadedDLL<ept id=\"p1\">**</ept> is now <bpt id=\"p2\">**</bpt>__FUnloadDelayLoadedDLL2<ept id=\"p2\">**</ept>","source":"**__FUnloadDelayLoadedDLL** is now **__FUnloadDelayLoadedDLL2**"},{"pos":[1282,1431],"content":"[!NOTE]\n If you are using the default helper function, these changes will not affect you. There are no changes regarding how you invoke the linker.","leadings":["","> "],"nodes":[{"content":" If you are using the default helper function, these changes will not affect you. There are no changes regarding how you invoke the linker.","pos":[8,147],"nodes":[{"content":"If you are using the default helper function, these changes will not affect you.","pos":[1,81]},{"content":"There are no changes regarding how you invoke the linker.","pos":[82,139]}]}]},{"content":"Multiple Versions of Visual C++","pos":[1440,1471]},{"content":"If you have multiple versions of Visual C++ on your computer, make sure the linker matches delayimp.lib.","pos":[1475,1579]},{"content":"If there is a mismatch, you will get a linker error reporting either <ph id=\"ph1\">`___delayLoadHelper2@8`</ph> or <ph id=\"ph2\">`___delayLoadHelper@8`</ph> as an unresolved external symbol.","pos":[1580,1732],"source":" If there is a mismatch, you will get a linker error reporting either `___delayLoadHelper2@8` or `___delayLoadHelper@8` as an unresolved external symbol."},{"content":"The former implies a new linker with an old delayimp.lib, and the latter implies an old linker with a new delayimp.lib.","pos":[1733,1852]},{"content":"If you get an unresolved linker error, run <bpt id=\"p1\">[</bpt>dumpbin /linkermember<ept id=\"p1\">](../../build/reference/linkermember.md)</ept>:1 on the delayimp.lib that you expect to contain the helper function to see which helper function is defined instead.","pos":[1859,2082],"source":"If you get an unresolved linker error, run [dumpbin /linkermember](../../build/reference/linkermember.md):1 on the delayimp.lib that you expect to contain the helper function to see which helper function is defined instead."},{"content":"The helper function could also be defined in an object file; run <bpt id=\"p1\">[</bpt>dumpbin /symbols<ept id=\"p1\">](../../build/reference/symbols.md)</ept> and look for <ph id=\"ph1\">`delayLoadHelper(2)`</ph>.","pos":[2083,2235],"source":" The helper function could also be defined in an object file; run [dumpbin /symbols](../../build/reference/symbols.md) and look for `delayLoadHelper(2)`."},{"content":"If you know you have the Visual C++ 6.0 linker, then:","pos":[2242,2295]},{"content":"Run dumpbin on the delay load helper's .lib or .obj file to determine whether it defines <bpt id=\"p1\">**</bpt>__delayLoadHelper2<ept id=\"p1\">**</ept>.","pos":[2305,2417],"source":"Run dumpbin on the delay load helper's .lib or .obj file to determine whether it defines **__delayLoadHelper2**."},{"content":"If not, the link will fail.","pos":[2418,2445]},{"pos":[2455,2529],"content":"Define <bpt id=\"p1\">**</bpt>__delayLoadHelper<ept id=\"p1\">**</ept> in the delay load helper's .lib or .obj file.","source":"Define **__delayLoadHelper** in the delay load helper's .lib or .obj file."},{"content":"User-Defined Helper Function","pos":[2538,2566]},{"content":"If you defined your own helper function and are using the current version of Visual C++, do the following:","pos":[2570,2676]},{"pos":[2686,2739],"content":"Rename the helper function to <bpt id=\"p1\">**</bpt>__delayLoadHelper2<ept id=\"p1\">**</ept>.","source":"Rename the helper function to **__delayLoadHelper2**."},{"content":"Since the pointers in the delay descriptor (ImgDelayDescr in delayimp.h) have been changed from absolute addresses (VAs) to relative addresses (RVAs) to work as expected in both 32- and 64-bit programs, you need to convert these back to pointers.","pos":[2749,2995]},{"content":"A new function has been introduced: PFromRva, found in delayhlp.cpp.","pos":[2996,3064]},{"content":"You can use this function on each of the fields in the descriptor to convert them back to either 32- or 64-bit pointers.","pos":[3065,3185]},{"content":"The default delay load helper function continues to be a good template to use as an example.","pos":[3186,3278]},{"content":"Load All Imports for a Delay-Loaded DLL","pos":[3287,3326]},{"content":"The linker can load all imports from a DLL that you specified to be delay loaded.","pos":[3330,3411]},{"content":"See <bpt id=\"p1\">[</bpt>Loading All Imports for a Delay-Loaded DLL<ept id=\"p1\">](../../build/reference/loading-all-imports-for-a-delay-loaded-dll.md)</ept> for more information.","pos":[3412,3551],"source":" See [Loading All Imports for a Delay-Loaded DLL](../../build/reference/loading-all-imports-for-a-delay-loaded-dll.md) for more information."},{"content":"See Also","pos":[3560,3568]},{"content":"Understanding the Helper Function","pos":[3573,3606]}],"content":"---\ntitle: \"Changes in the DLL Delayed Loading Helper Function Since Visual C++ 6.0 | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"delayed loading of DLLs, what's changed\"\n  - \"PFromRva method\"\n  - \"__delayLoadHelper2 function\"\n  - \"helper functions, what's changed\"\nms.assetid: 99f0be69-105d-49ba-8dd5-3be7939c0c72\ncaps.latest.revision: 6\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Changes in the DLL Delayed Loading Helper Function Since Visual C++ 6.0\nIf you have multiple versions of Visual C++ on your computer or if you defined your own helper function, you may be affected by changes made to the DLL delayed loading helper function. For example:  \n  \n-   **__delayLoadHelper** is now **__delayLoadHelper2**  \n  \n-   **__pfnDliNotifyHook** is now **__pfnDliNotifyHook2**  \n  \n-   **__pfnDliFailureHook** is now **__pfnDliFailureHook2**  \n  \n-   **__FUnloadDelayLoadedDLL** is now **__FUnloadDelayLoadedDLL2**  \n  \n> [!NOTE]\n>  If you are using the default helper function, these changes will not affect you. There are no changes regarding how you invoke the linker.  \n  \n## Multiple Versions of Visual C++  \n If you have multiple versions of Visual C++ on your computer, make sure the linker matches delayimp.lib. If there is a mismatch, you will get a linker error reporting either `___delayLoadHelper2@8` or `___delayLoadHelper@8` as an unresolved external symbol. The former implies a new linker with an old delayimp.lib, and the latter implies an old linker with a new delayimp.lib.  \n  \n If you get an unresolved linker error, run [dumpbin /linkermember](../../build/reference/linkermember.md):1 on the delayimp.lib that you expect to contain the helper function to see which helper function is defined instead. The helper function could also be defined in an object file; run [dumpbin /symbols](../../build/reference/symbols.md) and look for `delayLoadHelper(2)`.  \n  \n If you know you have the Visual C++ 6.0 linker, then:  \n  \n-   Run dumpbin on the delay load helper's .lib or .obj file to determine whether it defines **__delayLoadHelper2**. If not, the link will fail.  \n  \n-   Define **__delayLoadHelper** in the delay load helper's .lib or .obj file.  \n  \n## User-Defined Helper Function  \n If you defined your own helper function and are using the current version of Visual C++, do the following:  \n  \n-   Rename the helper function to **__delayLoadHelper2**.  \n  \n-   Since the pointers in the delay descriptor (ImgDelayDescr in delayimp.h) have been changed from absolute addresses (VAs) to relative addresses (RVAs) to work as expected in both 32- and 64-bit programs, you need to convert these back to pointers. A new function has been introduced: PFromRva, found in delayhlp.cpp. You can use this function on each of the fields in the descriptor to convert them back to either 32- or 64-bit pointers. The default delay load helper function continues to be a good template to use as an example.  \n  \n## Load All Imports for a Delay-Loaded DLL  \n The linker can load all imports from a DLL that you specified to be delay loaded. See [Loading All Imports for a Delay-Loaded DLL](../../build/reference/loading-all-imports-for-a-delay-loaded-dll.md) for more information.  \n  \n## See Also  \n [Understanding the Helper Function](http://msdn.microsoft.com/en-us/6279c12c-d908-4967-b0b3-cabfc3e91d3d)"}