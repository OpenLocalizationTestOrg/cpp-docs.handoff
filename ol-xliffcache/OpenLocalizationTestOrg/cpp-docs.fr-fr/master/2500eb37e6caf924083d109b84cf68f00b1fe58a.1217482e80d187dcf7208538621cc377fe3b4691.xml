{"nodes":[{"pos":[12,77],"content":"Recommendations for Choosing Between ATL and MFC | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Recommendations for Choosing Between ATL and MFC | Microsoft Docs","pos":[0,65]}]},{"content":"Recommendations for Choosing Between ATL and MFC","pos":[622,670]},{"content":"When developing components and applications, you can choose between two approaches — ATL and MFC (the Microsoft Foundation Class Library).","pos":[671,809]},{"content":"Using ATL","pos":[818,827]},{"content":"ATL is a fast, easy way to both create a COM component in C++ and maintain a small footprint.","pos":[831,924]},{"content":"Use ATL to create a control if you don't need all of the built-in functionality that MFC automatically provides.","pos":[925,1037]},{"content":"Using MFC","pos":[1046,1055]},{"content":"MFC allows you to create full applications, ActiveX controls, and active documents.","pos":[1059,1142]},{"content":"If you have already created a control with MFC, you may want to continue development in MFC.","pos":[1143,1235]},{"content":"When creating a new control, consider using ATL if you don't need all of MFC's built-in functionality.","pos":[1236,1338]},{"content":"Using ATL in an MFC Project","pos":[1347,1374]},{"content":"You can add support for using ATL in an existing MFC project by running a wizard.","pos":[1378,1459]},{"content":"For details, see <bpt id=\"p1\">[</bpt>Adding ATL Support to Your MFC Project<ept id=\"p1\">](../mfc/reference/adding-atl-support-to-your-mfc-project.md)</ept>.","pos":[1460,1578],"source":" For details, see [Adding ATL Support to Your MFC Project](../mfc/reference/adding-atl-support-to-your-mfc-project.md)."},{"content":"See Also","pos":[1587,1595]},{"content":"Introduction to ATL","pos":[1600,1619]}],"content":"---\ntitle: \"Recommendations for Choosing Between ATL and MFC | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"MFC, ATL support\"\n  - \"ATL, vs. MFC\"\nms.assetid: 269325bb-11a8-4330-ad2b-a14a2458679e\ncaps.latest.revision: 10\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Recommendations for Choosing Between ATL and MFC\nWhen developing components and applications, you can choose between two approaches — ATL and MFC (the Microsoft Foundation Class Library).  \n  \n## Using ATL  \n ATL is a fast, easy way to both create a COM component in C++ and maintain a small footprint. Use ATL to create a control if you don't need all of the built-in functionality that MFC automatically provides.  \n  \n## Using MFC  \n MFC allows you to create full applications, ActiveX controls, and active documents. If you have already created a control with MFC, you may want to continue development in MFC. When creating a new control, consider using ATL if you don't need all of MFC's built-in functionality.  \n  \n## Using ATL in an MFC Project  \n You can add support for using ATL in an existing MFC project by running a wizard. For details, see [Adding ATL Support to Your MFC Project](../mfc/reference/adding-atl-support-to-your-mfc-project.md).  \n  \n## See Also  \n [Introduction to ATL](../atl/introduction-to-atl.md)\n\n"}