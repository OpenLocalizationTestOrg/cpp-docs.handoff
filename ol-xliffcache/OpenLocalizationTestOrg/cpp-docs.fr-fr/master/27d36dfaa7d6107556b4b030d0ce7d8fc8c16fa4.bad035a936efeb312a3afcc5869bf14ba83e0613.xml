{"nodes":[{"pos":[12,54],"content":"CAtlFileMappingBase Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"CAtlFileMappingBase Class | Microsoft Docs","pos":[0,42]}]},{"content":"CAtlFileMappingBase Class","pos":[692,717]},{"content":"This class represents a memory-mapped file.","pos":[718,761]},{"pos":[769,879],"content":"[!IMPORTANT]\n This class and its members cannot be used in applications that execute in the Windows Runtime.","leadings":["","> "],"nodes":[{"content":"This class and its members cannot be used in applications that execute in the Windows Runtime.","pos":[14,108]}]},{"content":"Syntax","pos":[888,894]},{"content":"Members","pos":[942,949]},{"content":"Public Constructors","pos":[959,978]},{"content":"Name","pos":[985,989]},{"content":"Description","pos":[990,1001]},{"content":"CAtlFileMappingBase::CAtlFileMappingBase","pos":[1040,1080]},{"content":"The constructor.","pos":[1125,1141]},{"content":"CAtlFileMappingBase::~CAtlFileMappingBase","pos":[1147,1188]},{"content":"The destructor.","pos":[1238,1253]},{"content":"Public Methods","pos":[1264,1278]},{"content":"Name","pos":[1285,1289]},{"content":"Description","pos":[1290,1301]},{"content":"CAtlFileMappingBase::CopyFrom","pos":[1340,1369]},{"content":"Call this method to copy from a file-mapping object.","pos":[1403,1455]},{"content":"CAtlFileMappingBase::GetData","pos":[1461,1489]},{"content":"Call this method to get the data from a file-mapping object.","pos":[1522,1582]},{"content":"CAtlFileMappingBase::GetHandle","pos":[1588,1618]},{"content":"Call this method to return the file handle.","pos":[1653,1696]},{"content":"CAtlFileMappingBase::GetMappingSize","pos":[1702,1737]},{"content":"Call this method to get the mapping size from a file-mapping object.","pos":[1777,1845]},{"content":"CAtlFileMappingBase::MapFile","pos":[1851,1879]},{"content":"Call this method to create a file-mapping object.","pos":[1912,1961]},{"content":"CAtlFileMappingBase::MapSharedMem","pos":[1967,2000]},{"content":"Call this method to create a file-mapping object that permits full access to all processes.","pos":[2038,2129]},{"content":"CAtlFileMappingBase::OpenMapping","pos":[2135,2167]},{"content":"Call this method to return a handle to the file-mapping object.","pos":[2204,2267]},{"content":"CAtlFileMappingBase::Unmap","pos":[2273,2299]},{"content":"Call this method to unmap a file-mapping object.","pos":[2330,2378]},{"content":"Public Operators","pos":[2389,2405]},{"content":"Name","pos":[2412,2416]},{"content":"Description","pos":[2417,2428]},{"content":"CAtlFileMappingBase::operator =","pos":[2467,2498]},{"content":"Sets the current file-mapping object to another file-mapping object.","pos":[2535,2603]},{"content":"Remarks","pos":[2613,2620]},{"content":"File mapping is the association of a file's contents with a portion of the virtual address space of a process.","pos":[2624,2734]},{"content":"This class provides methods for creating file-mapping objects that permit programs to easily access and share data.","pos":[2735,2850]},{"pos":[2857,3017],"content":"For more information, see <bpt id=\"p1\">[</bpt>File Mapping<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/aa366556)</ept> in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"For more information, see [File Mapping](http://msdn.microsoft.com/library/windows/desktop/aa366556) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"content":"Requirements","pos":[3026,3038]},{"pos":[3042,3063],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> atlfile.h","source":"**Header:** atlfile.h"},{"pos":[3130,3170],"content":"CAtlFileMappingBase::CAtlFileMappingBase"},{"content":"The constructor.","pos":[3174,3190]},{"content":"Parameters","pos":[3297,3307]},{"content":"The original file-mapping object to copy to create the new object.","pos":[3321,3387]},{"content":"Remarks","pos":[3397,3404]},{"content":"Creates a new file-mapping object, optionally using an existing object.","pos":[3408,3479]},{"content":"It is still necessary to call <bpt id=\"p1\">[</bpt>CAtlFileMappingBase::MapFile<ept id=\"p1\">](#catlfilemappingbase__mapfile)</ept> to open or create the file-mapping object for a particular file.","pos":[3480,3636],"source":" It is still necessary to call [CAtlFileMappingBase::MapFile](#catlfilemappingbase__mapfile) to open or create the file-mapping object for a particular file."},{"content":"Example","pos":[3646,3653]},{"pos":[3668,3688],"content":"NVC_ATL_Utilities#71"},{"pos":[3821,3862],"content":"CAtlFileMappingBase::~CAtlFileMappingBase"},{"content":"The destructor.","pos":[3866,3881]},{"content":"Remarks","pos":[3936,3943]},{"pos":[3947,4069],"content":"Frees any resources allocated by the class and calls the <bpt id=\"p1\">[</bpt>CAtlFileMappingBase::Unmap<ept id=\"p1\">](#catlfilemappingbase__unmap)</ept> method.","source":"Frees any resources allocated by the class and calls the [CAtlFileMappingBase::Unmap](#catlfilemappingbase__unmap) method."},{"pos":[4125,4154],"content":"CAtlFileMappingBase::CopyFrom"},{"content":"Call this method to copy from a file-mapping object.","pos":[4158,4210]},{"content":"Parameters","pos":[4286,4296]},{"content":"The original file-mapping object to copy from.","pos":[4310,4356]},{"content":"Return Value","pos":[4366,4378]},{"pos":[4382,4442],"content":"Returns <ph id=\"ph1\">`S_OK`</ph> on success, or an error <ph id=\"ph2\">`HRESULT`</ph> on failure.","source":"Returns `S_OK` on success, or an error `HRESULT` on failure."},{"pos":[4497,4525],"content":"CAtlFileMappingBase::GetData"},{"content":"Call this method to get the data from a file-mapping object.","pos":[4529,4589]},{"content":"Return Value","pos":[4643,4655]},{"content":"Returns a pointer to the data.","pos":[4659,4689]},{"pos":[4746,4776],"content":"CAtlFileMappingBase::GetHandle"},{"content":"Call this method to return a handle to the file-mapping object.","pos":[4780,4843]},{"content":"Return Value","pos":[4895,4907]},{"content":"Returns a handle to the file-mapping object.","pos":[4911,4955]},{"pos":[5017,5052],"content":"CAtlFileMappingBase::GetMappingSize"},{"content":"Call this method to get the mapping size from a file-mapping object.","pos":[5056,5124]},{"content":"Return Value","pos":[5180,5192]},{"content":"Returns the mapping size.","pos":[5196,5221]},{"content":"Example","pos":[5231,5238]},{"pos":[5242,5348],"content":"See the example for <bpt id=\"p1\">[</bpt>CAtlFileMappingBase::CAtlFileMappingBase<ept id=\"p1\">](#catlfilemappingbase__catlfilemappingbase)</ept>.","source":"See the example for [CAtlFileMappingBase::CAtlFileMappingBase](#catlfilemappingbase__catlfilemappingbase)."},{"pos":[5403,5431],"content":"CAtlFileMappingBase::MapFile"},{"content":"Call this method to open or create a file-mapping object for the specified file.","pos":[5435,5515]},{"content":"Parameters","pos":[5732,5742]},{"content":"Handle to the file from which to create a mapping object.","pos":[5757,5814]},{"content":"must be valid and cannot be set to INVALID_HANDLE_VALUE.","pos":[5823,5879]},{"content":"The mapping size.","pos":[5904,5921]},{"content":"If 0, the maximum size of the file-mapping object is equal to the current size of the file identified by <bpt id=\"p1\">*</bpt>hFile.<ept id=\"p1\">*</ept>","pos":[5922,6035],"source":" If 0, the maximum size of the file-mapping object is equal to the current size of the file identified by *hFile.*"},{"content":"The file offset where mapping is to begin.","pos":[6055,6097]},{"content":"The offset value must be a multiple of the system's memory allocation granularity.","pos":[6098,6180]},{"content":"The protection desired for the file view when the file is mapped.","pos":[6212,6277]},{"content":"See <ph id=\"ph1\">`flProtect`</ph> in <bpt id=\"p1\">[</bpt>CreateFileMapping<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/aa366537)</ept> in the <ph id=\"ph2\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","pos":[6278,6436],"source":" See `flProtect` in [CreateFileMapping](http://msdn.microsoft.com/library/windows/desktop/aa366537) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"content":"Specifies the type of access to the file view and, therefore, the protection of the pages mapped by the file.","pos":[6468,6577]},{"content":"See <ph id=\"ph1\">`dwDesiredAccess`</ph> in <bpt id=\"p1\">[</bpt>MapViewOfFileEx<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/aa366763)</ept> in the <ph id=\"ph2\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","pos":[6578,6740],"source":" See `dwDesiredAccess` in [MapViewOfFileEx](http://msdn.microsoft.com/library/windows/desktop/aa366763) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"content":"Return Value","pos":[6750,6762]},{"pos":[6766,6826],"content":"Returns <ph id=\"ph1\">`S_OK`</ph> on success, or an error <ph id=\"ph2\">`HRESULT`</ph> on failure.","source":"Returns `S_OK` on success, or an error `HRESULT` on failure."},{"content":"Remarks","pos":[6836,6843]},{"content":"After a file-mapping object has been created, the size of the file must not exceed the size of the file-mapping object; if it does, not all of the file's contents will be available for sharing.","pos":[6847,7040]},{"content":"For more details, see <bpt id=\"p1\">[</bpt>CreateFileMapping<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/aa366537)</ept> and <bpt id=\"p2\">[</bpt>MapViewOfFileEx<ept id=\"p2\">](http://msdn.microsoft.com/library/windows/desktop/aa366763)</ept> in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","pos":[7041,7284],"source":" For more details, see [CreateFileMapping](http://msdn.microsoft.com/library/windows/desktop/aa366537) and [MapViewOfFileEx](http://msdn.microsoft.com/library/windows/desktop/aa366763) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"content":"Example","pos":[7294,7301]},{"pos":[7305,7411],"content":"See the example for <bpt id=\"p1\">[</bpt>CAtlFileMappingBase::CAtlFileMappingBase<ept id=\"p1\">](#catlfilemappingbase__catlfilemappingbase)</ept>.","source":"See the example for [CAtlFileMappingBase::CAtlFileMappingBase](#catlfilemappingbase__catlfilemappingbase)."},{"pos":[7471,7504],"content":"CAtlFileMappingBase::MapSharedMem"},{"content":"Call this method to create a file-mapping object that permits full access to all processes.","pos":[7508,7599]},{"content":"Parameters","pos":[7873,7883]},{"content":"The mapping size.","pos":[7905,7922]},{"content":"If 0, the maximum size of the file-mapping object is equal to the current size of the file-mapping object identified by","pos":[7923,8042]},{"content":"The name of the mapping object.","pos":[8071,8102]},{"content":"pbAlreadyExisted","pos":[8110,8126]},{"content":"Points to a BOOL value that is set to TRUE if the mapping object already existed.","pos":[8131,8212]},{"content":"The pointer to a <bpt id=\"p1\">**</bpt>SECURITY_ATTRIBUTES<ept id=\"p1\">**</ept> structure that determines whether the returned handle can be inherited by child processes.","pos":[8229,8360],"source":" The pointer to a **SECURITY_ATTRIBUTES** structure that determines whether the returned handle can be inherited by child processes."},{"content":"See <bpt id=\"p1\">*</bpt>lpAttributes<ept id=\"p1\">*</ept> in <bpt id=\"p2\">[</bpt>CreateFileMapping<ept id=\"p2\">](http://msdn.microsoft.com/library/windows/desktop/aa366537)</ept> in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","pos":[8361,8522],"source":" See *lpAttributes* in [CreateFileMapping](http://msdn.microsoft.com/library/windows/desktop/aa366537) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"content":"The protection desired for the file view, when the file is mapped.","pos":[8554,8620]},{"content":"See <ph id=\"ph1\">`flProtect`</ph> in <bpt id=\"p1\">**</bpt>CreateFileMapping<ept id=\"p1\">**</ept> in the <ph id=\"ph2\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","pos":[8621,8721],"source":" See `flProtect` in **CreateFileMapping** in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"content":"Specifies the type of access to the file view and, therefore, the protection of the pages mapped by the file.","pos":[8753,8862]},{"content":"See <ph id=\"ph1\">`dwDesiredAccess`</ph> in <bpt id=\"p1\">[</bpt>MapViewOfFileEx<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/aa366763)</ept> in the <ph id=\"ph2\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","pos":[8863,9025],"source":" See `dwDesiredAccess` in [MapViewOfFileEx](http://msdn.microsoft.com/library/windows/desktop/aa366763) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"content":"Return Value","pos":[9035,9047]},{"pos":[9051,9111],"content":"Returns <ph id=\"ph1\">`S_OK`</ph> on success, or an error <ph id=\"ph2\">`HRESULT`</ph> on failure.","source":"Returns `S_OK` on success, or an error `HRESULT` on failure."},{"content":"Remarks","pos":[9121,9128]},{"pos":[9132,9311],"content":"<bpt id=\"p1\">**</bpt>MapShareMem<ept id=\"p1\">**</ept> allows an existing file-mapping object, created by <bpt id=\"p2\">[</bpt>CreateFileMapping<ept id=\"p2\">](http://msdn.microsoft.com/library/windows/desktop/aa366537)</ept>, to be shared between processes.","source":"**MapShareMem** allows an existing file-mapping object, created by [CreateFileMapping](http://msdn.microsoft.com/library/windows/desktop/aa366537), to be shared between processes."},{"pos":[9370,9402],"content":"CAtlFileMappingBase::OpenMapping"},{"content":"Call this method to open a named file-mapping object for the specified file.","pos":[9406,9482]},{"content":"Parameters","pos":[9660,9670]},{"content":"The name of the mapping object.","pos":[9686,9717]},{"content":"If there is an open handle to a file-mapping object by this name and the security descriptor on the mapping object does not conflict with the <ph id=\"ph1\">`dwViewDesiredAccess`</ph> parameter, the open operation succeeds.","pos":[9718,9921],"source":" If there is an open handle to a file-mapping object by this name and the security descriptor on the mapping object does not conflict with the `dwViewDesiredAccess` parameter, the open operation succeeds."},{"content":"The mapping size.","pos":[9946,9963]},{"content":"If 0, the maximum size of the file-mapping object is equal to the current size of the file-mapping object identified by","pos":[9964,10083]},{"content":"The file offset where mapping is to begin.","pos":[10113,10155]},{"content":"The offset value must be a multiple of the system's memory allocation granularity.","pos":[10156,10238]},{"content":"Specifies the type of access to the file view and, therefore, the protection of the pages mapped by the file.","pos":[10270,10379]},{"content":"See <ph id=\"ph1\">`dwDesiredAccess`</ph> in <bpt id=\"p1\">[</bpt>MapViewOfFileEx<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/aa366763)</ept> in the <ph id=\"ph2\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","pos":[10380,10542],"source":" See `dwDesiredAccess` in [MapViewOfFileEx](http://msdn.microsoft.com/library/windows/desktop/aa366763) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"content":"Return Value","pos":[10552,10564]},{"pos":[10568,10628],"content":"Returns <ph id=\"ph1\">`S_OK`</ph> on success, or an error <ph id=\"ph2\">`HRESULT`</ph> on failure.","source":"Returns `S_OK` on success, or an error `HRESULT` on failure."},{"content":"Remarks","pos":[10638,10645]},{"content":"In debug builds, an assertion error will occur if the input parameters are invalid.","pos":[10649,10732]},{"pos":[10791,10822],"content":"CAtlFileMappingBase::operator ="},{"content":"Sets the current file-mapping object to another file-mapping object.","pos":[10826,10894]},{"content":"Parameters","pos":[10976,10986]},{"content":"The current file-mapping object.","pos":[11000,11032]},{"content":"Return Value","pos":[11042,11054]},{"content":"Returns a reference to the current object.","pos":[11058,11100]},{"pos":[11153,11179],"content":"CAtlFileMappingBase::Unmap"},{"content":"Call this method to unmap a file-mapping object.","pos":[11183,11231]},{"content":"Return Value","pos":[11279,11291]},{"pos":[11295,11355],"content":"Returns <ph id=\"ph1\">`S_OK`</ph> on success, or an error <ph id=\"ph2\">`HRESULT`</ph> on failure.","source":"Returns `S_OK` on success, or an error `HRESULT` on failure."},{"content":"Remarks","pos":[11365,11372]},{"pos":[11376,11534],"content":"See <bpt id=\"p1\">[</bpt>UnmapViewOfFile<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/aa366882)</ept> in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph> for more details.","source":"See [UnmapViewOfFile](http://msdn.microsoft.com/library/windows/desktop/aa366882) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)] for more details."},{"content":"See Also","pos":[11543,11551]},{"content":"CAtlFileMapping Class","pos":[11556,11577]},{"content":"Class Overview","pos":[11630,11644]}],"content":"---\ntitle: \"CAtlFileMappingBase Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"ATL.CAtlFileMappingBase\"\n  - \"ATL::CAtlFileMappingBase\"\n  - \"CAtlFileMappingBase\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"CAtlFileMappingBase class\"\nms.assetid: be555723-2790-4f57-a8fb-be4d68460775\ncaps.latest.revision: 20\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# CAtlFileMappingBase Class\nThis class represents a memory-mapped file.  \n  \n> [!IMPORTANT]\n>  This class and its members cannot be used in applications that execute in the Windows Runtime.  \n  \n## Syntax  \n  \n```\nclass CAtlFileMappingBase\n```  \n  \n## Members  \n  \n### Public Constructors  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CAtlFileMappingBase::CAtlFileMappingBase](#catlfilemappingbase__catlfilemappingbase)|The constructor.|  \n|[CAtlFileMappingBase::~CAtlFileMappingBase](#catlfilemappingbase___dtorcatlfilemappingbase)|The destructor.|  \n  \n### Public Methods  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CAtlFileMappingBase::CopyFrom](#catlfilemappingbase__copyfrom)|Call this method to copy from a file-mapping object.|  \n|[CAtlFileMappingBase::GetData](#catlfilemappingbase__getdata)|Call this method to get the data from a file-mapping object.|  \n|[CAtlFileMappingBase::GetHandle](#catlfilemappingbase__gethandle)|Call this method to return the file handle.|  \n|[CAtlFileMappingBase::GetMappingSize](#catlfilemappingbase__getmappingsize)|Call this method to get the mapping size from a file-mapping object.|  \n|[CAtlFileMappingBase::MapFile](#catlfilemappingbase__mapfile)|Call this method to create a file-mapping object.|  \n|[CAtlFileMappingBase::MapSharedMem](#catlfilemappingbase__mapsharedmem)|Call this method to create a file-mapping object that permits full access to all processes.|  \n|[CAtlFileMappingBase::OpenMapping](#catlfilemappingbase__openmapping)|Call this method to return a handle to the file-mapping object.|  \n|[CAtlFileMappingBase::Unmap](#catlfilemappingbase__unmap)|Call this method to unmap a file-mapping object.|  \n  \n### Public Operators  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CAtlFileMappingBase::operator =](#catlfilemappingbase__operator_eq)|Sets the current file-mapping object to another file-mapping object.|  \n  \n## Remarks  \n File mapping is the association of a file's contents with a portion of the virtual address space of a process. This class provides methods for creating file-mapping objects that permit programs to easily access and share data.  \n  \n For more information, see [File Mapping](http://msdn.microsoft.com/library/windows/desktop/aa366556) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n## Requirements  \n **Header:** atlfile.h  \n  \n##  <a name=\"catlfilemappingbase__catlfilemappingbase\"></a>  CAtlFileMappingBase::CAtlFileMappingBase  \n The constructor.  \n  \n```\nCAtlFileMappingBase(CAtlFileMappingBase& orig);\n\n    CAtlFileMappingBase() throw();\n```  \n  \n### Parameters  \n `orig`  \n The original file-mapping object to copy to create the new object.  \n  \n### Remarks  \n Creates a new file-mapping object, optionally using an existing object. It is still necessary to call [CAtlFileMappingBase::MapFile](#catlfilemappingbase__mapfile) to open or create the file-mapping object for a particular file.  \n  \n### Example  \n [!code-cpp[NVC_ATL_Utilities#71](../../atl/codesnippet/cpp/catlfilemappingbase-class_1.cpp)]  \n  \n##  <a name=\"catlfilemappingbase___dtorcatlfilemappingbase\"></a>  CAtlFileMappingBase::~CAtlFileMappingBase  \n The destructor.  \n  \n```\n~CAtlFileMappingBase() throw();\n```  \n  \n### Remarks  \n Frees any resources allocated by the class and calls the [CAtlFileMappingBase::Unmap](#catlfilemappingbase__unmap) method.  \n  \n##  <a name=\"catlfilemappingbase__copyfrom\"></a>  CAtlFileMappingBase::CopyFrom  \n Call this method to copy from a file-mapping object.  \n  \n```\nHRESULT CopyFrom(CAtlFileMappingBase& orig) throw();\n```  \n  \n### Parameters  \n `orig`  \n The original file-mapping object to copy from.  \n  \n### Return Value  \n Returns `S_OK` on success, or an error `HRESULT` on failure.  \n  \n##  <a name=\"catlfilemappingbase__getdata\"></a>  CAtlFileMappingBase::GetData  \n Call this method to get the data from a file-mapping object.  \n  \n```\nvoid* GetData() const throw();\n```  \n  \n### Return Value  \n Returns a pointer to the data.  \n  \n##  <a name=\"catlfilemappingbase__gethandle\"></a>  CAtlFileMappingBase::GetHandle  \n Call this method to return a handle to the file-mapping object.  \n  \n```\nHANDLE GetHandle() throw ();\n```  \n  \n### Return Value  \n Returns a handle to the file-mapping object.  \n  \n##  <a name=\"catlfilemappingbase__getmappingsize\"></a>  CAtlFileMappingBase::GetMappingSize  \n Call this method to get the mapping size from a file-mapping object.  \n  \n```\nSIZE_T GetMappingSize() throw();\n```  \n  \n### Return Value  \n Returns the mapping size.  \n  \n### Example  \n See the example for [CAtlFileMappingBase::CAtlFileMappingBase](#catlfilemappingbase__catlfilemappingbase).  \n  \n##  <a name=\"catlfilemappingbase__mapfile\"></a>  CAtlFileMappingBase::MapFile  \n Call this method to open or create a file-mapping object for the specified file.  \n  \n```\nHRESULT MapFile(\n    HANDLE hFile,\n    SIZE_T nMappingSize = 0,\n    ULONGLONG nOffset = 0,\n    DWORD dwMappingProtection = PAGE_READONLY,\n    DWORD dwViewDesiredAccess = FILE_MAP_READ) throw();\n```  \n  \n### Parameters  \n `hFile`  \n Handle to the file from which to create a mapping object. `hFile` must be valid and cannot be set to INVALID_HANDLE_VALUE.  \n  \n `nMappingSize`  \n The mapping size. If 0, the maximum size of the file-mapping object is equal to the current size of the file identified by *hFile.*  \n  \n `nOffset`  \n The file offset where mapping is to begin. The offset value must be a multiple of the system's memory allocation granularity.  \n  \n `dwMappingProtection`  \n The protection desired for the file view when the file is mapped. See `flProtect` in [CreateFileMapping](http://msdn.microsoft.com/library/windows/desktop/aa366537) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n `dwViewDesiredAccess`  \n Specifies the type of access to the file view and, therefore, the protection of the pages mapped by the file. See `dwDesiredAccess` in [MapViewOfFileEx](http://msdn.microsoft.com/library/windows/desktop/aa366763) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n### Return Value  \n Returns `S_OK` on success, or an error `HRESULT` on failure.  \n  \n### Remarks  \n After a file-mapping object has been created, the size of the file must not exceed the size of the file-mapping object; if it does, not all of the file's contents will be available for sharing. For more details, see [CreateFileMapping](http://msdn.microsoft.com/library/windows/desktop/aa366537) and [MapViewOfFileEx](http://msdn.microsoft.com/library/windows/desktop/aa366763) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n### Example  \n See the example for [CAtlFileMappingBase::CAtlFileMappingBase](#catlfilemappingbase__catlfilemappingbase).  \n  \n##  <a name=\"catlfilemappingbase__mapsharedmem\"></a>  CAtlFileMappingBase::MapSharedMem  \n Call this method to create a file-mapping object that permits full access to all processes.  \n  \n```\nHRESULT MapSharedMem(\n    SIZE_T nMappingSize,\n    LPCTSTR szName,\n    BOOL* pbAlreadyExisted = NULL,\n    LPSECURITY_ATTRIBUTES lpsa = NULL,\n    DWORD dwMappingProtection = PAGE_READWRITE,\n    DWORD dwViewDesiredAccess = FILE_MAP_ALL_ACCESS) throw();\n```  \n  \n### Parameters  \n `nMappingSize`  \n The mapping size. If 0, the maximum size of the file-mapping object is equal to the current size of the file-mapping object identified by `szName.`  \n  \n `szName`  \n The name of the mapping object.  \n  \n *pbAlreadyExisted*  \n Points to a BOOL value that is set to TRUE if the mapping object already existed.  \n  \n `lpsa`  \n The pointer to a **SECURITY_ATTRIBUTES** structure that determines whether the returned handle can be inherited by child processes. See *lpAttributes* in [CreateFileMapping](http://msdn.microsoft.com/library/windows/desktop/aa366537) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n `dwMappingProtection`  \n The protection desired for the file view, when the file is mapped. See `flProtect` in **CreateFileMapping** in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n `dwViewDesiredAccess`  \n Specifies the type of access to the file view and, therefore, the protection of the pages mapped by the file. See `dwDesiredAccess` in [MapViewOfFileEx](http://msdn.microsoft.com/library/windows/desktop/aa366763) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n### Return Value  \n Returns `S_OK` on success, or an error `HRESULT` on failure.  \n  \n### Remarks  \n **MapShareMem** allows an existing file-mapping object, created by [CreateFileMapping](http://msdn.microsoft.com/library/windows/desktop/aa366537), to be shared between processes.  \n  \n##  <a name=\"catlfilemappingbase__openmapping\"></a>  CAtlFileMappingBase::OpenMapping  \n Call this method to open a named file-mapping object for the specified file.  \n  \n```\nHRESULT OpenMapping(\n    LPCTSTR szName,\n    SIZE_T nMappingSize,\n    ULONGLONG nOffset = 0,\n    DWORD dwViewDesiredAccess = FILE_MAP_ALL_ACCESS) throw();\n```  \n  \n### Parameters  \n `szName`  \n The name of the mapping object. If there is an open handle to a file-mapping object by this name and the security descriptor on the mapping object does not conflict with the `dwViewDesiredAccess` parameter, the open operation succeeds.  \n  \n `nMappingSize`  \n The mapping size. If 0, the maximum size of the file-mapping object is equal to the current size of the file-mapping object identified by `szName.`  \n  \n `nOffset`  \n The file offset where mapping is to begin. The offset value must be a multiple of the system's memory allocation granularity.  \n  \n `dwViewDesiredAccess`  \n Specifies the type of access to the file view and, therefore, the protection of the pages mapped by the file. See `dwDesiredAccess` in [MapViewOfFileEx](http://msdn.microsoft.com/library/windows/desktop/aa366763) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n### Return Value  \n Returns `S_OK` on success, or an error `HRESULT` on failure.  \n  \n### Remarks  \n In debug builds, an assertion error will occur if the input parameters are invalid.  \n  \n##  <a name=\"catlfilemappingbase__operator_eq\"></a>  CAtlFileMappingBase::operator =  \n Sets the current file-mapping object to another file-mapping object.  \n  \n```\nCAtlFileMappingBase& operator=(CAtlFileMappingBase& orig);\n```  \n  \n### Parameters  \n `orig`  \n The current file-mapping object.  \n  \n### Return Value  \n Returns a reference to the current object.  \n  \n##  <a name=\"catlfilemappingbase__unmap\"></a>  CAtlFileMappingBase::Unmap  \n Call this method to unmap a file-mapping object.  \n  \n```\nHRESULT Unmap() throw();\n```  \n  \n### Return Value  \n Returns `S_OK` on success, or an error `HRESULT` on failure.  \n  \n### Remarks  \n See [UnmapViewOfFile](http://msdn.microsoft.com/library/windows/desktop/aa366882) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)] for more details.  \n  \n## See Also  \n [CAtlFileMapping Class](../../atl/reference/catlfilemapping-class.md)   \n [Class Overview](../../atl/atl-class-overview.md)\n"}