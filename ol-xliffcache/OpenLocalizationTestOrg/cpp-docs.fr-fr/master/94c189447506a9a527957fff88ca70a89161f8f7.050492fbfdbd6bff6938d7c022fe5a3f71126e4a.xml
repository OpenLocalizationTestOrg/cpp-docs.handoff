{"nodes":[{"pos":[12,49],"content":"COleClientItem Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"COleClientItem Class | Microsoft Docs","pos":[0,37]}]},{"content":"COleClientItem Class","pos":[787,807]},{"content":"Defines the container interface to OLE items.","pos":[808,853]},{"content":"Syntax","pos":[862,868]},{"content":"Members","pos":[933,940]},{"content":"Public Constructors","pos":[950,969]},{"content":"Name","pos":[976,980]},{"content":"Description","pos":[981,992]},{"content":"COleClientItem::COleClientItem","pos":[1031,1061]},{"pos":[1096,1133],"content":"Constructs a <ph id=\"ph1\">`COleClientItem`</ph> object.","source":"Constructs a `COleClientItem` object."},{"content":"Public Methods","pos":[1144,1158]},{"content":"Name","pos":[1165,1169]},{"content":"Description","pos":[1170,1181]},{"content":"COleClientItem::Activate","pos":[1220,1244]},{"content":"Opens the OLE item for an operation and then executes the specified verb.","pos":[1273,1346]},{"content":"COleClientItem::ActivateAs","pos":[1352,1378]},{"content":"Activates the item as another type.","pos":[1409,1444]},{"content":"COleClientItem::AttachDataObject","pos":[1450,1482]},{"content":"Accesses the data in the OLE object.","pos":[1519,1555]},{"content":"COleClientItem::CanCreateFromData","pos":[1561,1594]},{"content":"Indicates whether a container application can create an embedded object.","pos":[1632,1704]},{"content":"COleClientItem::CanCreateLinkFromData","pos":[1710,1747]},{"content":"Indicates whether a container application can create a linked object.","pos":[1789,1858]},{"content":"COleClientItem::CanPaste","pos":[1864,1888]},{"content":"Indicates whether the Clipboard contains an embeddable or static OLE item.","pos":[1917,1991]},{"content":"COleClientItem::CanPasteLink","pos":[1997,2025]},{"content":"Indicates whether the Clipboard contains a linkable OLE item.","pos":[2058,2119]},{"content":"COleClientItem::Close","pos":[2125,2146]},{"content":"Closes a link to a server but does not destroy the OLE item.","pos":[2172,2232]},{"content":"COleClientItem::ConvertTo","pos":[2238,2263]},{"content":"Converts the item to another type.","pos":[2293,2327]},{"content":"COleClientItem::CopyToClipboard","pos":[2333,2364]},{"content":"Copies the OLE item to the Clipboard.","pos":[2400,2437]},{"content":"COleClientItem::CreateCloneFrom","pos":[2443,2474]},{"content":"Creates a duplicate of an existing item.","pos":[2510,2550]},{"content":"COleClientItem::CreateFromClipboard","pos":[2556,2591]},{"content":"Creates an embedded item from the Clipboard.","pos":[2631,2675]},{"content":"COleClientItem::CreateFromData","pos":[2681,2711]},{"content":"Creates an embedded item from a data object.","pos":[2746,2790]},{"content":"COleClientItem::CreateFromFile","pos":[2796,2826]},{"content":"Creates an embedded item from a file.","pos":[2861,2898]},{"content":"COleClientItem::CreateLinkFromClipboard","pos":[2904,2943]},{"content":"Creates a linked item from the Clipboard.","pos":[2987,3028]},{"content":"COleClientItem::CreateLinkFromData","pos":[3034,3068]},{"content":"Creates a linked item from a data object.","pos":[3107,3148]},{"content":"COleClientItem::CreateLinkFromFile","pos":[3154,3188]},{"content":"Creates a linked item from a file.","pos":[3227,3261]},{"content":"COleClientItem::CreateNewItem","pos":[3267,3296]},{"content":"Creates a new embedded item by launching the server application.","pos":[3330,3394]},{"content":"COleClientItem::CreateStaticFromClipboard","pos":[3400,3441]},{"content":"Creates a static item from the Clipboard.","pos":[3487,3528]},{"content":"COleClientItem::CreateStaticFromData","pos":[3534,3570]},{"content":"Creates a static item from a data object.","pos":[3611,3652]},{"content":"COleClientItem::Deactivate","pos":[3658,3684]},{"content":"Deactivates the item.","pos":[3715,3736]},{"content":"COleClientItem::DeactivateUI","pos":[3742,3770]},{"content":"Restores the container application's user interface to its original state.","pos":[3803,3877]},{"content":"COleClientItem::Delete","pos":[3883,3905]},{"content":"Deletes or closes the OLE item if it was a linked item.","pos":[3932,3987]},{"content":"COleClientItem::DoDragDrop","pos":[3993,4019]},{"content":"Performs a drag-and-drop operation.","pos":[4050,4085]},{"content":"COleClientItem::DoVerb","pos":[4091,4113]},{"content":"Executes the specified verb.","pos":[4140,4168]},{"content":"COleClientItem::Draw","pos":[4174,4194]},{"content":"Draws the OLE item.","pos":[4219,4238]},{"content":"COleClientItem::GetActiveView","pos":[4244,4273]},{"content":"Gets the view on which the item is activated in place.","pos":[4307,4361]},{"content":"COleClientItem::GetCachedExtent","pos":[4367,4398]},{"content":"Returns the bounds of the OLE item's rectangle.","pos":[4434,4481]},{"content":"COleClientItem::GetClassID","pos":[4487,4513]},{"content":"Gets the present item's class ID.","pos":[4544,4577]},{"content":"COleClientItem::GetClipboardData","pos":[4583,4615]},{"pos":[4652,4753],"content":"Gets the data that would be placed on the Clipboard by calling the <ph id=\"ph1\">`CopyToClipboard`</ph> member function.","source":"Gets the data that would be placed on the Clipboard by calling the `CopyToClipboard` member function."},{"content":"COleClientItem::GetDocument","pos":[4759,4786]},{"pos":[4818,4883],"content":"Returns the <ph id=\"ph1\">`COleDocument`</ph> object that contains the present item.","source":"Returns the `COleDocument` object that contains the present item."},{"content":"COleClientItem::GetDrawAspect","pos":[4889,4918]},{"content":"Gets the item's current view for rendering.","pos":[4952,4995]},{"content":"COleClientItem::GetExtent","pos":[5001,5026]},{"content":"Returns the bounds of the OLE item's rectangle.","pos":[5056,5103]},{"content":"COleClientItem::GetIconFromRegistry","pos":[5109,5144]},{"content":"Retrives a handle to an icon associated with the server of a particular CLSID.","pos":[5184,5262]},{"content":"COleClientItem::GetIconicMetafile","pos":[5268,5301]},{"content":"Gets the metafile used for drawing the item's icon.","pos":[5339,5390]},{"content":"COleClientItem::GetInPlaceWindow","pos":[5396,5428]},{"content":"Returns a pointer to the item's in-place editing window.","pos":[5465,5521]},{"content":"COleClientItem::GetItemState","pos":[5527,5555]},{"content":"Gets the item's current state.","pos":[5588,5618]},{"content":"COleClientItem::GetLastStatus","pos":[5624,5653]},{"content":"Returns the status of the last OLE operation.","pos":[5687,5732]},{"content":"COleClientItem::GetLinkUpdateOptions","pos":[5738,5774]},{"content":"Returns the update mode for a linked item (advanced feature).","pos":[5815,5876]},{"content":"COleClientItem::GetType","pos":[5882,5905]},{"content":"Returns the type (embedded, linked, or static) of the OLE item.","pos":[5933,5996]},{"content":"COleClientItem::GetUserType","pos":[6002,6029]},{"content":"Gets a string describing the item's type.","pos":[6061,6102]},{"content":"COleClientItem::IsInPlaceActive","pos":[6108,6139]},{"pos":[6175,6221],"content":"Returns <ph id=\"ph1\">`TRUE`</ph> if the item is in-place active.","source":"Returns `TRUE` if the item is in-place active."},{"content":"COleClientItem::IsLinkUpToDate","pos":[6227,6257]},{"pos":[6292,6365],"content":"Returns <bpt id=\"p1\">**</bpt>TRUE<ept id=\"p1\">**</ept> if a linked item is up to date with its source document.","source":"Returns **TRUE** if a linked item is up to date with its source document."},{"content":"COleClientItem::IsModified","pos":[6371,6397]},{"pos":[6428,6497],"content":"Returns <ph id=\"ph1\">`TRUE`</ph> if the item has been modified since it was last saved.","source":"Returns `TRUE` if the item has been modified since it was last saved."},{"content":"COleClientItem::IsOpen","pos":[6503,6525]},{"pos":[6552,6623],"content":"Returns <ph id=\"ph1\">`TRUE`</ph> if the item is currently open in the server application.","source":"Returns `TRUE` if the item is currently open in the server application."},{"content":"COleClientItem::IsRunning","pos":[6629,6654]},{"pos":[6684,6743],"content":"Returns <ph id=\"ph1\">`TRUE`</ph> if the item's server application is running.","source":"Returns `TRUE` if the item's server application is running."},{"content":"COleClientItem::OnActivate","pos":[6749,6775]},{"content":"Called by the framework to notify the item that it is activated.","pos":[6806,6870]},{"content":"COleClientItem::OnActivateUI","pos":[6876,6904]},{"content":"Called by the framework to notify the item that it is activated and should show its user interface.","pos":[6937,7036]},{"content":"COleClientItem::OnChange","pos":[7042,7066]},{"content":"Called when the server changes the OLE item.","pos":[7095,7139]},{"content":"Implementation required.","pos":[7140,7164]},{"content":"COleClientItem::OnDeactivate","pos":[7170,7198]},{"content":"Called by the framework when an item is deactivated.","pos":[7231,7283]},{"content":"COleClientItem::OnDeactivateUI","pos":[7289,7319]},{"content":"Called by the framework when the server has removed its in-place user interface.","pos":[7354,7434]},{"content":"COleClientItem::OnGetClipboardData","pos":[7440,7474]},{"content":"Called by the framework to get the data to be copied to the Clipboard.","pos":[7513,7583]},{"content":"COleClientItem::OnInsertMenus","pos":[7589,7618]},{"content":"Called by the framework to create a composite menu.","pos":[7652,7703]},{"content":"COleClientItem::OnRemoveMenus","pos":[7709,7738]},{"content":"Called by the framework to remove the container's menus from a composite menu.","pos":[7772,7850]},{"content":"COleClientItem::OnSetMenu","pos":[7856,7881]},{"content":"Called by the framework to install and remove a composite menu.","pos":[7911,7974]},{"content":"COleClientItem::OnShowControlBars","pos":[7980,8013]},{"content":"Called by the framework to show and hide control bars.","pos":[8051,8105]},{"content":"COleClientItem::OnUpdateFrameTitle","pos":[8111,8145]},{"content":"Called by the framework to update the frame window's title bar.","pos":[8184,8247]},{"content":"COleClientItem::ReactivateAndUndo","pos":[8253,8286]},{"content":"Reactivates the item and undoes the last in-place editing operation.","pos":[8324,8392]},{"content":"COleClientItem::Release","pos":[8398,8421]},{"content":"Releases the connection to an OLE linked item and closes it if it was open.","pos":[8449,8524]},{"content":"Does not destroy the client item.","pos":[8525,8558]},{"content":"COleClientItem::Reload","pos":[8564,8586]},{"pos":[8613,8659],"content":"Reloads the item after a call to <ph id=\"ph1\">`ActivateAs`</ph>.","source":"Reloads the item after a call to `ActivateAs`."},{"content":"COleClientItem::Run","pos":[8665,8684]},{"content":"Runs the application associated with the item.","pos":[8708,8754]},{"content":"COleClientItem::SetDrawAspect","pos":[8760,8789]},{"content":"Sets the item's current view for rendering.","pos":[8823,8866]},{"content":"COleClientItem::SetExtent","pos":[8872,8897]},{"content":"Sets the bounding rectangle of the OLE item.","pos":[8927,8971]},{"content":"COleClientItem::SetHostNames","pos":[8977,9005]},{"content":"Sets the names the server displays when editing the OLE item.","pos":[9038,9099]},{"content":"COleClientItem::SetIconicMetafile","pos":[9105,9138]},{"content":"Caches the metafile used for drawing the item's icon.","pos":[9176,9229]},{"content":"COleClientItem::SetItemRects","pos":[9235,9263]},{"content":"Sets the item's bounding rectangle.","pos":[9296,9331]},{"content":"COleClientItem::SetLinkUpdateOptions","pos":[9337,9373]},{"content":"Sets the update mode for a linked item (advanced feature).","pos":[9414,9472]},{"content":"COleClientItem::SetPrintDevice","pos":[9478,9508]},{"content":"Sets the print-target device for this client item.","pos":[9543,9593]},{"content":"COleClientItem::UpdateLink","pos":[9599,9625]},{"content":"Updates the presentation cache of an item.","pos":[9656,9698]},{"content":"Protected Methods","pos":[9709,9726]},{"content":"Name","pos":[9733,9737]},{"content":"Description","pos":[9738,9749]},{"content":"COleClientItem::CanActivate","pos":[9788,9815]},{"content":"Called by the framework to determine whether in-place activation is allowed.","pos":[9847,9923]},{"content":"COleClientItem::OnChangeItemPosition","pos":[9929,9965]},{"content":"Called by the framework when an item's position changes.","pos":[10006,10062]},{"content":"COleClientItem::OnDeactivateAndUndo","pos":[10068,10103]},{"content":"Called by the framework to undo after activation.","pos":[10143,10192]},{"content":"COleClientItem::OnDiscardUndoState","pos":[10198,10232]},{"content":"Called by the framework to discard the item's undo state information.","pos":[10271,10340]},{"content":"COleClientItem::OnGetClipRect","pos":[10346,10375]},{"content":"Called by the framework to get the item's clipping-rectangle coordinates.","pos":[10409,10482]},{"content":"COleClientItem::OnGetItemPosition","pos":[10488,10521]},{"content":"Called by the framework to get the item's position relative to the view.","pos":[10559,10631]},{"content":"COleClientItem::OnGetWindowContext","pos":[10637,10671]},{"content":"Called by the framework when an item is activated in place.","pos":[10710,10769]},{"content":"COleClientItem::OnScrollBy","pos":[10775,10801]},{"content":"Called by the framework to scroll the item into view.","pos":[10832,10885]},{"content":"COleClientItem::OnShowItem","pos":[10891,10917]},{"content":"Called by the framework to display the OLE item.","pos":[10948,10996]},{"content":"Remarks","pos":[11006,11013]},{"content":"An OLE item represents data, created and maintained by a server application, which can be \"seamlessly\" incorporated into a document so that it appears to the user to be a single document.","pos":[11017,11204]},{"content":"The result is a \"compound document\" made up of the OLE item and a containing document.","pos":[11205,11291]},{"content":"An OLE item can be either embedded or linked.","pos":[11298,11343]},{"content":"If it is embedded, its data is stored as part of the compound document.","pos":[11344,11415]},{"content":"If it is linked, its data is stored as part of a separate file created by the server application, and only a link to that file is stored in the compound document.","pos":[11416,11578]},{"content":"All OLE items contain information specifying the server application that should be called to edit them.","pos":[11579,11682]},{"content":"defines several overridable functions that are called in response to requests from the server application; these overridables usually act as notifications.","pos":[11706,11861]},{"content":"This allows the server application to inform the container of changes the user makes when editing the OLE item, or to retrieve information needed during editing.","pos":[11862,12023]},{"content":"can be used with either the <bpt id=\"p1\">[</bpt>COleDocument<ept id=\"p1\">](../../mfc/reference/coledocument-class.md)</ept>, <bpt id=\"p2\">[</bpt>COleLinkingDoc<ept id=\"p2\">](../../mfc/reference/colelinkingdoc-class.md)</ept>, or <bpt id=\"p3\">[</bpt>COleServerDoc<ept id=\"p3\">](../../mfc/reference/coleserverdoc-class.md)</ept> class.","pos":[12047,12266],"source":" can be used with either the [COleDocument](../../mfc/reference/coledocument-class.md), [COleLinkingDoc](../../mfc/reference/colelinkingdoc-class.md), or [COleServerDoc](../../mfc/reference/coleserverdoc-class.md) class."},{"content":"To use <ph id=\"ph1\">`COleClientItem`</ph>, derive a class from it and implement the <bpt id=\"p1\">[</bpt>OnChange<ept id=\"p1\">](#coleclientitem__onchange)</ept> member function, which defines how the container responds to changes made to the item.","pos":[12267,12457],"source":" To use `COleClientItem`, derive a class from it and implement the [OnChange](#coleclientitem__onchange) member function, which defines how the container responds to changes made to the item."},{"content":"To support in-place activation, override the <bpt id=\"p1\">[</bpt>OnGetItemPosition<ept id=\"p1\">](#coleclientitem__ongetitemposition)</ept> member function.","pos":[12458,12575],"source":" To support in-place activation, override the [OnGetItemPosition](#coleclientitem__ongetitemposition) member function."},{"content":"This function provides information about the displayed position of the OLE item.","pos":[12576,12656]},{"pos":[12663,12873],"content":"For more information about using the container interface, see the articles <bpt id=\"p1\">[</bpt>Containers: Implementing a Container<ept id=\"p1\">](../../mfc/containers-implementing-a-container.md)</ept> and <bpt id=\"p2\">[</bpt>Activation<ept id=\"p2\">](../../mfc/activation-cpp.md)</ept>.","source":"For more information about using the container interface, see the articles [Containers: Implementing a Container](../../mfc/containers-implementing-a-container.md) and [Activation](../../mfc/activation-cpp.md)."},{"pos":[12881,13211],"content":"[!NOTE]\n The [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)] refers to embedded and linked items as \"objects\" and refers to types of items as \"classes.\" This reference uses the term \"item\" to distinguish the OLE entity from the corresponding C++ object and the term \"type\" to distinguish the OLE category from the C++ class.","leadings":["","> "],"nodes":[{"content":" The [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)] refers to embedded and linked items as \"objects\" and refers to types of items as \"classes.\" This reference uses the term \"item\" to distinguish the OLE entity from the corresponding C++ object and the term \"type\" to distinguish the OLE category from the C++ class.","pos":[8,328],"nodes":[{"content":"The <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph> refers to embedded and linked items as \"objects\" and refers to types of items as \"classes.\"","pos":[1,148],"source":" The [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)] refers to embedded and linked items as \"objects\" and refers to types of items as \"classes.\""},{"content":"This reference uses the term \"item\" to distinguish the OLE entity from the corresponding C++ object and the term \"type\" to distinguish the OLE category from the C++ class.","pos":[149,320]}]}]},{"content":"Inheritance Hierarchy","pos":[13220,13241]},{"content":"CObject","pos":[13246,13253]},{"content":"CCmdTarget","pos":[13300,13310]},{"content":"CDocItem","pos":[13360,13368]},{"content":"Requirements","pos":[13440,13452]},{"pos":[13456,13476],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> afxole.h","source":"**Header:** afxole.h"},{"pos":[13527,13551],"content":"COleClientItem::Activate"},{"pos":[13555,13716],"content":"Call this function to execute the specified verb instead of <bpt id=\"p1\">[</bpt>DoVerb<ept id=\"p1\">](#coleclientitem__doverb)</ept> so that you can do your own processing when an exception is thrown.","source":"Call this function to execute the specified verb instead of [DoVerb](#coleclientitem__doverb) so that you can do your own processing when an exception is thrown."},{"content":"Parameters","pos":[13819,13829]},{"content":"Specifies the verb to execute.","pos":[13844,13874]},{"content":"It can be one of the following:","pos":[13875,13906]},{"content":"Value","pos":[13913,13918]},{"content":"Meaning","pos":[13919,13926]},{"content":"Symbol","pos":[13927,13933]},{"content":"– 0","pos":[13981,13984]},{"content":"Primary verb","pos":[13985,13997]},{"content":"– 1","pos":[14021,14024]},{"content":"Secondary verb","pos":[14025,14039]},{"content":"(None)","pos":[14040,14046]},{"content":"– 1","pos":[14051,14054]},{"content":"Display item for editing","pos":[14055,14079]},{"content":"– 2","pos":[14100,14103]},{"content":"Edit item in separate window","pos":[14104,14132]},{"content":"– 3","pos":[14153,14156]},{"content":"Hide item","pos":[14157,14166]},{"content":"The –1 value is typically an alias for another verb.","pos":[14190,14242]},{"content":"If open editing is not supported, –2 has the same effect as –1.","pos":[14243,14306]},{"content":"For additional values, see <bpt id=\"p1\">[</bpt>IOleObject::DoVerb<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms694508)</ept> in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","pos":[14307,14474],"source":" For additional values, see [IOleObject::DoVerb](http://msdn.microsoft.com/library/windows/desktop/ms694508) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"content":"Pointer to the container view window that contains the OLE item; this is used by the server application for in-place activation.","pos":[14492,14620]},{"content":"This parameter should be <bpt id=\"p1\">**</bpt>NULL<ept id=\"p1\">**</ept> if the container does not support in-place activation.","pos":[14621,14709],"source":" This parameter should be **NULL** if the container does not support in-place activation."},{"content":"Pointer to the message that caused the item to be activated.","pos":[14727,14787]},{"content":"Remarks","pos":[14797,14804]},{"pos":[14808,15074],"content":"If the server application was written using the Microsoft Foundation Class Library, this function causes the <bpt id=\"p1\">[</bpt>OnDoVerb<ept id=\"p1\">](../../mfc/reference/coleserveritem-class.md#coleserveritem__ondoverb)</ept> member function of the corresponding <ph id=\"ph1\">`COleServerItem`</ph> object to be executed.","source":"If the server application was written using the Microsoft Foundation Class Library, this function causes the [OnDoVerb](../../mfc/reference/coleserveritem-class.md#coleserveritem__ondoverb) member function of the corresponding `COleServerItem` object to be executed."},{"content":"If the primary verb is Edit and zero is specified in the <ph id=\"ph1\">`nVerb`</ph> parameter, the server application is launched to allow the OLE item to be edited.","pos":[15081,15227],"source":"If the primary verb is Edit and zero is specified in the `nVerb` parameter, the server application is launched to allow the OLE item to be edited."},{"content":"If the container application supports in-place activation, editing can be done in place.","pos":[15228,15316]},{"content":"If the container does not support in-place activation (or if the Open verb is specified), the server is launched in a separate window and editing can be done there.","pos":[15317,15481]},{"content":"Typically, when the user of the container application double-clicks the OLE item, the value for the primary verb in the <ph id=\"ph1\">`nVerb`</ph> parameter determines which action the user can take.","pos":[15482,15662],"source":" Typically, when the user of the container application double-clicks the OLE item, the value for the primary verb in the `nVerb` parameter determines which action the user can take."},{"content":"However, if the server supports only one action, it takes that action, no matter which value is specified in the <ph id=\"ph1\">`nVerb`</ph> parameter.","pos":[15663,15794],"source":" However, if the server supports only one action, it takes that action, no matter which value is specified in the `nVerb` parameter."},{"pos":[15801,15967],"content":"For more information, see <bpt id=\"p1\">[</bpt>IOleObject::DoVerb<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms694508)</ept> in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"For more information, see [IOleObject::DoVerb](http://msdn.microsoft.com/library/windows/desktop/ms694508) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"pos":[16020,16046],"content":"COleClientItem::ActivateAs"},{"pos":[16050,16173],"content":"Uses OLE's object conversion facilities to activate the item as though it were an item of the type specified by <ph id=\"ph1\">`clsidNew`</ph>.","source":"Uses OLE's object conversion facilities to activate the item as though it were an item of the type specified by `clsidNew`."},{"content":"Parameters","pos":[16300,16310]},{"content":"lpszUserType","pos":[16315,16327]},{"content":"Pointer to a string representing the target user type, such as \"Word Document.\"","pos":[16332,16411]},{"content":"clsidOld","pos":[16419,16427]},{"content":"A reference to the item's current class ID.","pos":[16432,16475]},{"content":"The class ID should represent the type of the actual object, as stored, unless it is a link.","pos":[16476,16568]},{"content":"In that case, it should be the CLSID of the item to which the link refers.","pos":[16569,16643]},{"content":"The <bpt id=\"p1\">[</bpt>COleConvertDialog<ept id=\"p1\">](../../mfc/reference/coleconvertdialog-class.md)</ept> automatically provides the correct class ID for the item.","pos":[16644,16773],"source":" The [COleConvertDialog](../../mfc/reference/coleconvertdialog-class.md) automatically provides the correct class ID for the item."},{"content":"A reference to the target class ID.","pos":[16794,16829]},{"content":"Return Value","pos":[16839,16851]},{"content":"Nonzero if successful; otherwise 0.","pos":[16855,16890]},{"content":"Remarks","pos":[16900,16907]},{"content":"This is called automatically by <bpt id=\"p1\">[</bpt>COleConvertDialog::DoConvert<ept id=\"p1\">](../../mfc/reference/coleconvertdialog-class.md#coleconvertdialog__doconvert)</ept>.","pos":[16911,17051],"source":"This is called automatically by [COleConvertDialog::DoConvert](../../mfc/reference/coleconvertdialog-class.md#coleconvertdialog__doconvert)."},{"content":"It is not usually called directly.","pos":[17052,17086]},{"pos":[17145,17177],"content":"COleClientItem::AttachDataObject"},{"pos":[17181,17317],"content":"Call this function to initialize a <bpt id=\"p1\">[</bpt>COleDataObject<ept id=\"p1\">](../../mfc/reference/coledataobject-class.md)</ept> for accessing the data in the OLE item.","source":"Call this function to initialize a [COleDataObject](../../mfc/reference/coledataobject-class.md) for accessing the data in the OLE item."},{"content":"Parameters","pos":[17403,17413]},{"content":"rDataObject","pos":[17418,17429]},{"content":"Reference to a <ph id=\"ph1\">`COleDataObject`</ph> object that will be initialized to allow access to the data in the OLE item.","pos":[17434,17542],"source":" Reference to a `COleDataObject` object that will be initialized to allow access to the data in the OLE item."},{"pos":[17596,17623],"content":"COleClientItem::CanActivate"},{"content":"Called by the framework when the user requests in-place activation of the OLE item; this function's return value determines whether in-place activation is allowed.","pos":[17627,17790]},{"content":"Return Value","pos":[17843,17855]},{"content":"Nonzero if in-place activation is allowed; otherwise 0.","pos":[17859,17914]},{"content":"Remarks","pos":[17924,17931]},{"content":"The default implementation allows in-place activation if the container has a valid window.","pos":[17935,18025]},{"content":"Override this function to implement special logic for accepting or refusing the activation request.","pos":[18026,18125]},{"content":"For example, an activation request can be refused if the OLE item is too small or not currently visible.","pos":[18126,18230]},{"pos":[18237,18420],"content":"For more information, see <bpt id=\"p1\">[</bpt>IOleInPlaceSite::CanInPlaceActivate<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms691236)</ept> in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"For more information, see [IOleInPlaceSite::CanInPlaceActivate](http://msdn.microsoft.com/library/windows/desktop/ms691236) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"pos":[18480,18513],"content":"COleClientItem::CanCreateFromData"},{"pos":[18517,18625],"content":"Checks whether a container application can create an embedded object from the given <ph id=\"ph1\">`COleDataObject`</ph> object.","source":"Checks whether a container application can create an embedded object from the given `COleDataObject` object."},{"content":"Parameters","pos":[18723,18733]},{"content":"Pointer to the <bpt id=\"p1\">[</bpt>COleDataObject<ept id=\"p1\">](../../mfc/reference/coledataobject-class.md)</ept> object from which the OLE item is to be created.","pos":[18754,18879],"source":" Pointer to the [COleDataObject](../../mfc/reference/coledataobject-class.md) object from which the OLE item is to be created."},{"content":"Return Value","pos":[18889,18901]},{"pos":[18905,19006],"content":"Nonzero if the container can create an embedded object from the <ph id=\"ph1\">`COleDataObject`</ph> object; otherwise 0.","source":"Nonzero if the container can create an embedded object from the `COleDataObject` object; otherwise 0."},{"content":"Remarks","pos":[19016,19023]},{"pos":[19027,19191],"content":"The <ph id=\"ph1\">`COleDataObject`</ph> class is used in data transfers for retrieving data in various formats from the Clipboard, through drag and drop, or from an embedded OLE item.","source":"The `COleDataObject` class is used in data transfers for retrieving data in various formats from the Clipboard, through drag and drop, or from an embedded OLE item."},{"content":"Containers can use this function to decide to enable or disable their Edit Paste and Edit Paste Special commands.","pos":[19198,19311]},{"pos":[19318,19442],"content":"For more information, see the article <bpt id=\"p1\">[</bpt>Data Objects and Data Sources (OLE)<ept id=\"p1\">](../../mfc/data-objects-and-data-sources-ole.md)</ept>.","source":"For more information, see the article [Data Objects and Data Sources (OLE)](../../mfc/data-objects-and-data-sources-ole.md)."},{"pos":[19506,19543],"content":"COleClientItem::CanCreateLinkFromData"},{"pos":[19547,19652],"content":"Checks whether a container application can create a linked object from the given <ph id=\"ph1\">`COleDataObject`</ph> object.","source":"Checks whether a container application can create a linked object from the given `COleDataObject` object."},{"content":"Parameters","pos":[19754,19764]},{"content":"Pointer to the <bpt id=\"p1\">[</bpt>COleDataObject<ept id=\"p1\">](../../mfc/reference/coledataobject-class.md)</ept> object from which the OLE item is to be created.","pos":[19785,19910],"source":" Pointer to the [COleDataObject](../../mfc/reference/coledataobject-class.md) object from which the OLE item is to be created."},{"content":"Return Value","pos":[19920,19932]},{"pos":[19936,20021],"content":"Nonzero if the container can create a linked object from the <ph id=\"ph1\">`COleDataObject`</ph> object.","source":"Nonzero if the container can create a linked object from the `COleDataObject` object."},{"content":"Remarks","pos":[20031,20038]},{"pos":[20042,20206],"content":"The <ph id=\"ph1\">`COleDataObject`</ph> class is used in data transfers for retrieving data in various formats from the Clipboard, through drag and drop, or from an embedded OLE item.","source":"The `COleDataObject` class is used in data transfers for retrieving data in various formats from the Clipboard, through drag and drop, or from an embedded OLE item."},{"content":"Containers can use this function to decide to enable or disable their Edit Paste Special and Edit Paste Link commands.","pos":[20213,20331]},{"pos":[20338,20462],"content":"For more information, see the article <bpt id=\"p1\">[</bpt>Data Objects and Data Sources (OLE)<ept id=\"p1\">](../../mfc/data-objects-and-data-sources-ole.md)</ept>.","source":"For more information, see the article [Data Objects and Data Sources (OLE)](../../mfc/data-objects-and-data-sources-ole.md)."},{"pos":[20513,20537],"content":"COleClientItem::CanPaste"},{"content":"Call this function to see whether an embedded OLE item can be pasted from the Clipboard.","pos":[20541,20629]},{"content":"Return Value","pos":[20685,20697]},{"content":"Nonzero if an embedded OLE item can be pasted from the Clipboard; otherwise 0.","pos":[20701,20779]},{"content":"Remarks","pos":[20789,20796]},{"pos":[20800,21052],"content":"For more information, see <bpt id=\"p1\">[</bpt>OleGetClipboard<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms692778)</ept> and <bpt id=\"p2\">[</bpt>OleQueryCreateFromData<ept id=\"p2\">](http://msdn.microsoft.com/library/windows/desktop/ms683739)</ept> in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"For more information, see [OleGetClipboard](http://msdn.microsoft.com/library/windows/desktop/ms692778) and [OleQueryCreateFromData](http://msdn.microsoft.com/library/windows/desktop/ms683739) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"pos":[21107,21135],"content":"COleClientItem::CanPasteLink"},{"content":"Call this function to see whether a linked OLE item can be pasted from the Clipboard.","pos":[21139,21224]},{"content":"Return Value","pos":[21284,21296]},{"content":"Nonzero if a linked OLE item can be pasted from the Clipboard; otherwise 0.","pos":[21300,21375]},{"content":"Remarks","pos":[21385,21392]},{"pos":[21396,21646],"content":"For more information, see <bpt id=\"p1\">[</bpt>OleGetClipboard<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms692778)</ept> and <bpt id=\"p2\">[</bpt>OleQueryLinkFromData<ept id=\"p2\">](http://msdn.microsoft.com/library/windows/desktop/ms690244)</ept> in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"For more information, see [OleGetClipboard](http://msdn.microsoft.com/library/windows/desktop/ms692778) and [OleQueryLinkFromData](http://msdn.microsoft.com/library/windows/desktop/ms690244) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"pos":[21694,21715],"content":"COleClientItem::Close"},{"content":"Call this function to change the state of an OLE item from the running state to the loaded state, that is, loaded with its handler in memory but with the server not running.","pos":[21719,21892]},{"content":"Parameters","pos":[21976,21986]},{"content":"Flag specifying under what circumstances the OLE item is saved when it returns to the loaded state.","pos":[22009,22108]},{"content":"It can have one of the following values:","pos":[22109,22149]},{"pos":[22180,22198],"content":"Save the OLE item."},{"pos":[22224,22249],"content":"Do not save the OLE item."},{"pos":[22279,22327],"content":"Prompt the user on whether to save the OLE item."},{"content":"Remarks","pos":[22337,22344]},{"content":"This function has no effect when the OLE item is not running.","pos":[22348,22409]},{"pos":[22416,22581],"content":"For more information, see <bpt id=\"p1\">[</bpt>IOleObject::Close<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms683922)</ept> in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"For more information, see [IOleObject::Close](http://msdn.microsoft.com/library/windows/desktop/ms683922) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"pos":[22638,22668],"content":"COleClientItem::COleClientItem"},{"pos":[22672,22860],"content":"Constructs a <ph id=\"ph1\">`COleClientItem`</ph> object and adds it to the container document's collection of document items, which constructs only the C++ object and does not perform any OLE initialization.","source":"Constructs a `COleClientItem` object and adds it to the container document's collection of document items, which constructs only the C++ object and does not perform any OLE initialization."},{"content":"Parameters","pos":[22937,22947]},{"content":"Pointer to the container document that will contain this item.","pos":[22970,23032]},{"content":"This can be any <bpt id=\"p1\">[</bpt>COleDocument<ept id=\"p1\">](../../mfc/reference/coledocument-class.md)</ept> derivative.","pos":[23033,23118],"source":" This can be any [COleDocument](../../mfc/reference/coledocument-class.md) derivative."},{"content":"Remarks","pos":[23128,23135]},{"content":"If you pass a <bpt id=\"p1\">**</bpt>NULL<ept id=\"p1\">**</ept> pointer, no addition is made to the container document.","pos":[23139,23217],"source":"If you pass a **NULL** pointer, no addition is made to the container document."},{"content":"You must explicitly call <bpt id=\"p1\">[</bpt>COleDocument::AddItem<ept id=\"p1\">](../../mfc/reference/coledocument-class.md#coledocument__additem)</ept>.","pos":[23218,23332],"source":" You must explicitly call [COleDocument::AddItem](../../mfc/reference/coledocument-class.md#coledocument__additem)."},{"content":"You must call one of the following creation member functions before you use the OLE item:","pos":[23339,23428]},{"content":"CreateFromClipboard","pos":[23437,23456]},{"content":"CreateFromData","pos":[23504,23518]},{"content":"CreateFromFile","pos":[23561,23575]},{"content":"CreateStaticFromClipboard","pos":[23618,23643]},{"content":"CreateStaticFromData","pos":[23697,23717]},{"content":"CreateLinkFromClipboard","pos":[23766,23789]},{"content":"CreateLinkFromData","pos":[23841,23859]},{"content":"CreateLinkFromFile","pos":[23906,23924]},{"content":"CreateNewItem","pos":[23971,23984]},{"content":"CreateCloneFrom","pos":[24026,24041]},{"pos":[24128,24153],"content":"COleClientItem::ConvertTo"},{"pos":[24157,24239],"content":"Call this member function to convert the item to the type specified by <ph id=\"ph1\">`clsidNew`</ph>.","source":"Call this member function to convert the item to the type specified by `clsidNew`."},{"content":"Parameters","pos":[24307,24317]},{"content":"The class ID of the target type.","pos":[24335,24367]},{"content":"Return Value","pos":[24377,24389]},{"content":"Nonzero if successful; otherwise 0.","pos":[24393,24428]},{"content":"Remarks","pos":[24438,24445]},{"content":"This is called automatically by <bpt id=\"p1\">[</bpt>COleConvertDialog<ept id=\"p1\">](../../mfc/reference/coleconvertdialog-class.md)</ept>.","pos":[24449,24549],"source":"This is called automatically by [COleConvertDialog](../../mfc/reference/coleconvertdialog-class.md)."},{"content":"It is not necessary to call it directly.","pos":[24550,24590]},{"pos":[24648,24679],"content":"COleClientItem::CopyToClipboard"},{"content":"Call this function to copy the OLE item to the Clipboard.","pos":[24683,24740]},{"content":"Parameters","pos":[24814,24824]},{"content":"<bpt id=\"p1\"> **</bpt>TRUE<ept id=\"p1\">**</ept> if link information should be copied to the Clipboard, allowing a linked item to be pasted; otherwise <bpt id=\"p2\">**</bpt>FALSE<ept id=\"p2\">**</ept>.","pos":[24845,24967],"source":" **TRUE** if link information should be copied to the Clipboard, allowing a linked item to be pasted; otherwise **FALSE**."},{"content":"Remarks","pos":[24977,24984]},{"content":"Typically, you call this function when writing message handlers for the Copy or Cut commands from the Edit menu.","pos":[24988,25100]},{"content":"You must implement item selection in your container application if you want to implement the Copy or Cut commands.","pos":[25101,25215]},{"pos":[25222,25385],"content":"For more information, see <bpt id=\"p1\">[</bpt>OleSetClipboard<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms686623)</ept> in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"For more information, see [OleSetClipboard](http://msdn.microsoft.com/library/windows/desktop/ms686623) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"pos":[25443,25474],"content":"COleClientItem::CreateCloneFrom"},{"content":"Call this function to create a copy of the specified OLE item.","pos":[25478,25540]},{"content":"Parameters","pos":[25619,25629]},{"content":"pSrcItem","pos":[25634,25642]},{"content":"Pointer to the OLE item to be duplicated.","pos":[25647,25688]},{"content":"Return Value","pos":[25698,25710]},{"content":"Nonzero if successful; otherwise 0.","pos":[25714,25749]},{"content":"Remarks","pos":[25759,25766]},{"content":"The copy is identical to the source item.","pos":[25770,25811]},{"content":"You can use this function to support undo operations.","pos":[25812,25865]},{"pos":[25927,25962],"content":"COleClientItem::CreateFromClipboard"},{"content":"Call this function to create an embedded item from the contents of the Clipboard.","pos":[25966,26047]},{"content":"Parameters","pos":[26207,26217]},{"content":"render","pos":[26222,26228]},{"content":"Flag specifying how the server will render the OLE item.","pos":[26233,26289]},{"content":"For the possible values, see <bpt id=\"p1\">[</bpt>OLERENDER<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms691507)</ept> in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","pos":[26290,26450],"source":" For the possible values, see [OLERENDER](http://msdn.microsoft.com/library/windows/desktop/ms691507) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"content":"Specifies the Clipboard data format to be cached when creating the OLE item.","pos":[26471,26547]},{"content":"Pointer to a <bpt id=\"p1\">[</bpt>FORMATETC<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms682177)</ept> structure used if <bpt id=\"p2\">*</bpt>render<ept id=\"p2\">*</ept> is <bpt id=\"p3\">**</bpt>OLERENDER_FORMAT<ept id=\"p3\">**</ept> or <bpt id=\"p4\">**</bpt>OLERENDER_DRAW<ept id=\"p4\">**</ept>.","pos":[26571,26729],"source":" Pointer to a [FORMATETC](http://msdn.microsoft.com/library/windows/desktop/ms682177) structure used if *render* is **OLERENDER_FORMAT** or **OLERENDER_DRAW**."},{"content":"Provide a value for this parameter only if you want to specify additional format information beyond the Clipboard format specified by <ph id=\"ph1\">`cfFormat`</ph>.","pos":[26730,26875],"source":" Provide a value for this parameter only if you want to specify additional format information beyond the Clipboard format specified by `cfFormat`."},{"content":"If you omit this parameter, default values are used for the other fields in the <bpt id=\"p1\">**</bpt>FORMATETC<ept id=\"p1\">**</ept> structure.","pos":[26876,26980],"source":" If you omit this parameter, default values are used for the other fields in the **FORMATETC** structure."},{"content":"Return Value","pos":[26990,27002]},{"content":"Nonzero if successful; otherwise 0.","pos":[27006,27041]},{"content":"Remarks","pos":[27051,27058]},{"content":"You typically call this function from the message handler for the Paste command on the Edit menu.","pos":[27062,27159]},{"content":"(The Paste command is enabled by the framework if the <bpt id=\"p1\">[</bpt>CanPaste<ept id=\"p1\">](#coleclientitem__canpaste)</ept> member function returns nonzero.)","pos":[27160,27285],"source":" (The Paste command is enabled by the framework if the [CanPaste](#coleclientitem__canpaste) member function returns nonzero.)"},{"pos":[27292,27525],"content":"For more information, see <bpt id=\"p1\">[</bpt>OLERENDER<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms691507)</ept> and <bpt id=\"p2\">[</bpt>FORMATETC<ept id=\"p2\">](http://msdn.microsoft.com/library/windows/desktop/ms682177)</ept> in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"For more information, see [OLERENDER](http://msdn.microsoft.com/library/windows/desktop/ms691507) and [FORMATETC](http://msdn.microsoft.com/library/windows/desktop/ms682177) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"pos":[27582,27612],"content":"COleClientItem::CreateFromData"},{"pos":[27616,27693],"content":"Call this function to create an embedded item from a <ph id=\"ph1\">`COleDataObject`</ph> object.","source":"Call this function to create an embedded item from a `COleDataObject` object."},{"content":"Parameters","pos":[27883,27893]},{"content":"Pointer to the <bpt id=\"p1\">[</bpt>COleDataObject<ept id=\"p1\">](../../mfc/reference/coledataobject-class.md)</ept> object from which the OLE item is to be created.","pos":[27914,28039],"source":" Pointer to the [COleDataObject](../../mfc/reference/coledataobject-class.md) object from which the OLE item is to be created."},{"content":"render","pos":[28047,28053]},{"content":"Flag specifying how the server will render the OLE item.","pos":[28058,28114]},{"content":"For the possible values, see <bpt id=\"p1\">[</bpt>OLERENDER<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms691507)</ept> in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","pos":[28115,28275],"source":" For the possible values, see [OLERENDER](http://msdn.microsoft.com/library/windows/desktop/ms691507) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"content":"Specifies the Clipboard data format to be cached when creating the OLE item.","pos":[28296,28372]},{"content":"Pointer to a <bpt id=\"p1\">[</bpt>FORMATETC<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms682177)</ept> structure used if <bpt id=\"p2\">*</bpt>render<ept id=\"p2\">*</ept> is <bpt id=\"p3\">**</bpt>OLERENDER_FORMAT<ept id=\"p3\">**</ept> or <bpt id=\"p4\">**</bpt>OLERENDER_DRAW<ept id=\"p4\">**</ept>.","pos":[28396,28554],"source":" Pointer to a [FORMATETC](http://msdn.microsoft.com/library/windows/desktop/ms682177) structure used if *render* is **OLERENDER_FORMAT** or **OLERENDER_DRAW**."},{"content":"Provide a value for this parameter only if you want to specify additional format information beyond the Clipboard format specified by <ph id=\"ph1\">`cfFormat`</ph>.","pos":[28555,28700],"source":" Provide a value for this parameter only if you want to specify additional format information beyond the Clipboard format specified by `cfFormat`."},{"content":"If you omit this parameter, default values are used for the other fields in the <bpt id=\"p1\">**</bpt>FORMATETC<ept id=\"p1\">**</ept> structure.","pos":[28701,28805],"source":" If you omit this parameter, default values are used for the other fields in the **FORMATETC** structure."},{"content":"Return Value","pos":[28815,28827]},{"content":"Nonzero if successful; otherwise 0.","pos":[28831,28866]},{"content":"Remarks","pos":[28876,28883]},{"content":"Data transfer operations, such as pasting from the Clipboard or drag-and-drop operations, provide <ph id=\"ph1\">`COleDataObject`</ph> objects containing the information offered by a server application.","pos":[28887,29069],"source":"Data transfer operations, such as pasting from the Clipboard or drag-and-drop operations, provide `COleDataObject` objects containing the information offered by a server application."},{"content":"It is usually used in your override of <bpt id=\"p1\">[</bpt>CView::OnDrop<ept id=\"p1\">](../../mfc/reference/cview-class.md#cview__ondrop)</ept>.","pos":[29070,29175],"source":" It is usually used in your override of [CView::OnDrop](../../mfc/reference/cview-class.md#cview__ondrop)."},{"pos":[29182,29497],"content":"For more information, see <bpt id=\"p1\">[</bpt>OleCreateFromData<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms691211)</ept>, <bpt id=\"p2\">[</bpt>OLERENDER<ept id=\"p2\">](http://msdn.microsoft.com/library/windows/desktop/ms691507)</ept>, and <bpt id=\"p3\">[</bpt>FORMATETC<ept id=\"p3\">](http://msdn.microsoft.com/library/windows/desktop/ms682177)</ept> in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"For more information, see [OleCreateFromData](http://msdn.microsoft.com/library/windows/desktop/ms691211), [OLERENDER](http://msdn.microsoft.com/library/windows/desktop/ms691507), and [FORMATETC](http://msdn.microsoft.com/library/windows/desktop/ms682177) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"pos":[29554,29584],"content":"COleClientItem::CreateFromFile"},{"content":"Call this function to create an embedded OLE item from a file.","pos":[29588,29650]},{"content":"Parameters","pos":[29868,29878]},{"content":"Pointer to the name of the file from which the OLE item is to be created.","pos":[29900,29973]},{"content":"Reserved for future use.","pos":[29991,30015]},{"content":"render","pos":[30023,30029]},{"content":"Flag specifying how the server will render the OLE item.","pos":[30034,30090]},{"content":"For the possible values, see <bpt id=\"p1\">[</bpt>OLERENDER<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms691507)</ept> in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","pos":[30091,30251],"source":" For the possible values, see [OLERENDER](http://msdn.microsoft.com/library/windows/desktop/ms691507) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"content":"Specifies the Clipboard data format to be cached when creating the OLE item.","pos":[30272,30348]},{"content":"Pointer to a <bpt id=\"p1\">[</bpt>FORMATETC<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms682177)</ept> structure used if <bpt id=\"p2\">*</bpt>render<ept id=\"p2\">*</ept> is <bpt id=\"p3\">**</bpt>OLERENDER_FORMAT<ept id=\"p3\">**</ept> or <bpt id=\"p4\">**</bpt>OLERENDER_DRAW<ept id=\"p4\">**</ept>.","pos":[30372,30530],"source":" Pointer to a [FORMATETC](http://msdn.microsoft.com/library/windows/desktop/ms682177) structure used if *render* is **OLERENDER_FORMAT** or **OLERENDER_DRAW**."},{"content":"Provide a value for this parameter only if you want to specify additional format information beyond the Clipboard format specified by <ph id=\"ph1\">`cfFormat`</ph>.","pos":[30531,30676],"source":" Provide a value for this parameter only if you want to specify additional format information beyond the Clipboard format specified by `cfFormat`."},{"content":"If you omit this parameter, default values are used for the other fields in the <bpt id=\"p1\">**</bpt>FORMATETC<ept id=\"p1\">**</ept> structure.","pos":[30677,30781],"source":" If you omit this parameter, default values are used for the other fields in the **FORMATETC** structure."},{"content":"Return Value","pos":[30791,30803]},{"content":"Nonzero if successful; otherwise 0.","pos":[30807,30842]},{"content":"Remarks","pos":[30852,30859]},{"pos":[30863,31111],"content":"The framework calls this function from <bpt id=\"p1\">[</bpt>COleInsertDialog::CreateItem<ept id=\"p1\">](../../mfc/reference/coleinsertdialog-class.md#coleinsertdialog__createitem)</ept> if the user chooses OK from the Insert Object dialog box when the Create from File button is selected.","source":"The framework calls this function from [COleInsertDialog::CreateItem](../../mfc/reference/coleinsertdialog-class.md#coleinsertdialog__createitem) if the user chooses OK from the Insert Object dialog box when the Create from File button is selected."},{"pos":[31118,31433],"content":"For more information, see <bpt id=\"p1\">[</bpt>OleCreateFromFile<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms690116)</ept>, <bpt id=\"p2\">[</bpt>OLERENDER<ept id=\"p2\">](http://msdn.microsoft.com/library/windows/desktop/ms691507)</ept>, and <bpt id=\"p3\">[</bpt>FORMATETC<ept id=\"p3\">](http://msdn.microsoft.com/library/windows/desktop/ms682177)</ept> in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"For more information, see [OleCreateFromFile](http://msdn.microsoft.com/library/windows/desktop/ms690116), [OLERENDER](http://msdn.microsoft.com/library/windows/desktop/ms691507), and [FORMATETC](http://msdn.microsoft.com/library/windows/desktop/ms682177) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"pos":[31499,31538],"content":"COleClientItem::CreateLinkFromClipboard"},{"content":"Call this function to create a linked item from the contents of the Clipboard.","pos":[31542,31620]},{"content":"Parameters","pos":[31784,31794]},{"content":"render","pos":[31799,31805]},{"content":"Flag specifying how the server will render the OLE item.","pos":[31810,31866]},{"content":"For the possible values, see <bpt id=\"p1\">[</bpt>OLERENDER<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms691507)</ept> in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","pos":[31867,32027],"source":" For the possible values, see [OLERENDER](http://msdn.microsoft.com/library/windows/desktop/ms691507) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"content":"Specifies the Clipboard data format to be cached when creating the OLE item.","pos":[32048,32124]},{"content":"Pointer to a <bpt id=\"p1\">[</bpt>FORMATETC<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms682177)</ept> structure used if <bpt id=\"p2\">*</bpt>render<ept id=\"p2\">*</ept> is <bpt id=\"p3\">**</bpt>OLERENDER_FORMAT<ept id=\"p3\">**</ept> or <bpt id=\"p4\">**</bpt>OLERENDER_DRAW<ept id=\"p4\">**</ept>.","pos":[32148,32306],"source":" Pointer to a [FORMATETC](http://msdn.microsoft.com/library/windows/desktop/ms682177) structure used if *render* is **OLERENDER_FORMAT** or **OLERENDER_DRAW**."},{"content":"Provide a value for this parameter only if you want to specify additional format information beyond the Clipboard format specified by <ph id=\"ph1\">`cfFormat`</ph>.","pos":[32307,32452],"source":" Provide a value for this parameter only if you want to specify additional format information beyond the Clipboard format specified by `cfFormat`."},{"content":"If you omit this parameter, default values are used for the other fields in the <bpt id=\"p1\">**</bpt>FORMATETC<ept id=\"p1\">**</ept> structure.","pos":[32453,32557],"source":" If you omit this parameter, default values are used for the other fields in the **FORMATETC** structure."},{"content":"Return Value","pos":[32567,32579]},{"content":"Nonzero if successful; otherwise 0.","pos":[32583,32618]},{"content":"Remarks","pos":[32628,32635]},{"content":"You typically call this function from the message handler for the Paste Link command on the Edit menu.","pos":[32639,32741]},{"content":"(The Paste Link command is enabled in the default implementation of <bpt id=\"p1\">[</bpt>COleDocument<ept id=\"p1\">](../../mfc/reference/coledocument-class.md)</ept> if the Clipboard contains an OLE item that can be linked to.)","pos":[32742,32929],"source":" (The Paste Link command is enabled in the default implementation of [COleDocument](../../mfc/reference/coledocument-class.md) if the Clipboard contains an OLE item that can be linked to.)"},{"pos":[32936,33169],"content":"For more information, see <bpt id=\"p1\">[</bpt>OLERENDER<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms691507)</ept> and <bpt id=\"p2\">[</bpt>FORMATETC<ept id=\"p2\">](http://msdn.microsoft.com/library/windows/desktop/ms682177)</ept> in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"For more information, see [OLERENDER](http://msdn.microsoft.com/library/windows/desktop/ms691507) and [FORMATETC](http://msdn.microsoft.com/library/windows/desktop/ms682177) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"pos":[33230,33264],"content":"COleClientItem::CreateLinkFromData"},{"pos":[33268,33342],"content":"Call this function to create a linked item from a <ph id=\"ph1\">`COleDataObject`</ph> object.","source":"Call this function to create a linked item from a `COleDataObject` object."},{"content":"Parameters","pos":[33536,33546]},{"content":"Pointer to the <bpt id=\"p1\">[</bpt>COleDataObject<ept id=\"p1\">](../../mfc/reference/coledataobject-class.md)</ept> object from which the OLE item is to be created.","pos":[33567,33692],"source":" Pointer to the [COleDataObject](../../mfc/reference/coledataobject-class.md) object from which the OLE item is to be created."},{"content":"render","pos":[33700,33706]},{"content":"Flag specifying how the server will render the OLE item.","pos":[33711,33767]},{"content":"For the possible values, see <bpt id=\"p1\">[</bpt>OLERENDER<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms691507)</ept> in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","pos":[33768,33928],"source":" For the possible values, see [OLERENDER](http://msdn.microsoft.com/library/windows/desktop/ms691507) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"content":"Specifies the Clipboard data format to be cached when creating the OLE item.","pos":[33949,34025]},{"content":"Pointer to a <bpt id=\"p1\">[</bpt>FORMATETC<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms682177)</ept> structure used if <bpt id=\"p2\">*</bpt>render<ept id=\"p2\">*</ept> is <bpt id=\"p3\">**</bpt>OLERENDER_FORMAT<ept id=\"p3\">**</ept> or <bpt id=\"p4\">**</bpt>OLERENDER_DRAW<ept id=\"p4\">**</ept>.","pos":[34049,34207],"source":" Pointer to a [FORMATETC](http://msdn.microsoft.com/library/windows/desktop/ms682177) structure used if *render* is **OLERENDER_FORMAT** or **OLERENDER_DRAW**."},{"content":"Provide a value for this parameter only if you want to specify additional format information beyond the Clipboard format specified by <ph id=\"ph1\">`cfFormat`</ph>.","pos":[34208,34353],"source":" Provide a value for this parameter only if you want to specify additional format information beyond the Clipboard format specified by `cfFormat`."},{"content":"If you omit this parameter, default values are used for the other fields in the <bpt id=\"p1\">**</bpt>FORMATETC<ept id=\"p1\">**</ept> structure.","pos":[34354,34458],"source":" If you omit this parameter, default values are used for the other fields in the **FORMATETC** structure."},{"content":"Return Value","pos":[34468,34480]},{"content":"Nonzero if successful; otherwise 0.","pos":[34484,34519]},{"content":"Remarks","pos":[34529,34536]},{"content":"Call this during a drop operation when the user indicates a link should be created.","pos":[34540,34623]},{"content":"It can also be used to handle the Edit Paste command.","pos":[34624,34677]},{"content":"It is called by the framework in <ph id=\"ph1\">`COleClientItem::CreateLinkFromClipboard`</ph> and in <bpt id=\"p1\">[</bpt>COlePasteSpecialDialog::CreateItem<ept id=\"p1\">](../../mfc/reference/colepastespecialdialog-class.md#colepastespecialdialog__createitem)</ept> when the Link option has been selected.","pos":[34678,34924],"source":" It is called by the framework in `COleClientItem::CreateLinkFromClipboard` and in [COlePasteSpecialDialog::CreateItem](../../mfc/reference/colepastespecialdialog-class.md#colepastespecialdialog__createitem) when the Link option has been selected."},{"pos":[34931,35250],"content":"For more information, see <bpt id=\"p1\">[</bpt>OleCreateLinkFromData<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms680731)</ept>, <bpt id=\"p2\">[</bpt>OLERENDER<ept id=\"p2\">](http://msdn.microsoft.com/library/windows/desktop/ms691507)</ept>, and <bpt id=\"p3\">[</bpt>FORMATETC<ept id=\"p3\">](http://msdn.microsoft.com/library/windows/desktop/ms682177)</ept> in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"For more information, see [OleCreateLinkFromData](http://msdn.microsoft.com/library/windows/desktop/ms680731), [OLERENDER](http://msdn.microsoft.com/library/windows/desktop/ms691507), and [FORMATETC](http://msdn.microsoft.com/library/windows/desktop/ms682177) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"pos":[35311,35345],"content":"COleClientItem::CreateLinkFromFile"},{"content":"Call this function to create a linked OLE item from a file.","pos":[35349,35408]},{"content":"Parameters","pos":[35595,35605]},{"content":"Pointer to the name of the file from which the OLE item is to be created.","pos":[35627,35700]},{"content":"render","pos":[35708,35714]},{"content":"Flag specifying how the server will render the OLE item.","pos":[35719,35775]},{"content":"For the possible values, see <bpt id=\"p1\">[</bpt>OLERENDER<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms691507)</ept> in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","pos":[35776,35936],"source":" For the possible values, see [OLERENDER](http://msdn.microsoft.com/library/windows/desktop/ms691507) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"content":"Specifies the Clipboard data format to be cached when creating the OLE item.","pos":[35957,36033]},{"content":"Pointer to a <bpt id=\"p1\">[</bpt>FORMATETC<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms682177)</ept> structure used if <bpt id=\"p2\">*</bpt>render<ept id=\"p2\">*</ept> is <bpt id=\"p3\">**</bpt>OLERENDER_FORMAT<ept id=\"p3\">**</ept> or <bpt id=\"p4\">**</bpt>OLERENDER_DRAW<ept id=\"p4\">**</ept>.","pos":[36057,36215],"source":" Pointer to a [FORMATETC](http://msdn.microsoft.com/library/windows/desktop/ms682177) structure used if *render* is **OLERENDER_FORMAT** or **OLERENDER_DRAW**."},{"content":"Provide a value for this parameter only if you want to specify additional format information beyond the Clipboard format specified by <ph id=\"ph1\">`cfFormat`</ph>.","pos":[36216,36361],"source":" Provide a value for this parameter only if you want to specify additional format information beyond the Clipboard format specified by `cfFormat`."},{"content":"If you omit this parameter, default values are used for the other fields in the <bpt id=\"p1\">**</bpt>FORMATETC<ept id=\"p1\">**</ept> structure.","pos":[36362,36466],"source":" If you omit this parameter, default values are used for the other fields in the **FORMATETC** structure."},{"content":"Return Value","pos":[36476,36488]},{"content":"Nonzero if successful; otherwise 0.","pos":[36492,36527]},{"content":"Remarks","pos":[36537,36544]},{"content":"The framework calls this function if the user chooses OK from the Insert Object dialog box when the Create from File button is selected and the Link check box is checked.","pos":[36548,36718]},{"content":"It is called from <bpt id=\"p1\">[</bpt>COleInsertDialog::CreateItem<ept id=\"p1\">](../../mfc/reference/coleinsertdialog-class.md#coleinsertdialog__createitem)</ept>.","pos":[36719,36844],"source":" It is called from [COleInsertDialog::CreateItem](../../mfc/reference/coleinsertdialog-class.md#coleinsertdialog__createitem)."},{"pos":[36851,37168],"content":"For more information, see <bpt id=\"p1\">[</bpt>OleCreateLinkToFile<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms678434)</ept>, <bpt id=\"p2\">[</bpt>OLERENDER<ept id=\"p2\">](http://msdn.microsoft.com/library/windows/desktop/ms691507)</ept>, and <bpt id=\"p3\">[</bpt>FORMATETC<ept id=\"p3\">](http://msdn.microsoft.com/library/windows/desktop/ms682177)</ept> in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"For more information, see [OleCreateLinkToFile](http://msdn.microsoft.com/library/windows/desktop/ms678434), [OLERENDER](http://msdn.microsoft.com/library/windows/desktop/ms691507), and [FORMATETC](http://msdn.microsoft.com/library/windows/desktop/ms682177) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"pos":[37224,37253],"content":"COleClientItem::CreateNewItem"},{"content":"Call this function to create an embedded item; this function launches the server application that allows the user to create the OLE item.","pos":[37257,37394]},{"content":"Parameters","pos":[37570,37580]},{"content":"ID that uniquely identifies the type of OLE item to create.","pos":[37595,37654]},{"content":"render","pos":[37662,37668]},{"content":"Flag specifying how the server will render the OLE item.","pos":[37673,37729]},{"content":"For the possible values, see <bpt id=\"p1\">[</bpt>OLERENDER<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms691507)</ept> in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","pos":[37730,37890],"source":" For the possible values, see [OLERENDER](http://msdn.microsoft.com/library/windows/desktop/ms691507) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"content":"Specifies the Clipboard data format to be cached when creating the OLE item.","pos":[37911,37987]},{"content":"Pointer to a <bpt id=\"p1\">[</bpt>FORMATETC<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms682177)</ept> structure used if <bpt id=\"p2\">*</bpt>render<ept id=\"p2\">*</ept> is <bpt id=\"p3\">**</bpt>OLERENDER_FORMAT<ept id=\"p3\">**</ept> or <bpt id=\"p4\">**</bpt>OLERENDER_DRAW<ept id=\"p4\">**</ept>.","pos":[38011,38169],"source":" Pointer to a [FORMATETC](http://msdn.microsoft.com/library/windows/desktop/ms682177) structure used if *render* is **OLERENDER_FORMAT** or **OLERENDER_DRAW**."},{"content":"Provide a value for this parameter only if you want to specify additional format information beyond the Clipboard format specified by <ph id=\"ph1\">`cfFormat`</ph>.","pos":[38170,38315],"source":" Provide a value for this parameter only if you want to specify additional format information beyond the Clipboard format specified by `cfFormat`."},{"content":"If you omit this parameter, default values are used for the other fields in the <bpt id=\"p1\">**</bpt>FORMATETC<ept id=\"p1\">**</ept> structure.","pos":[38316,38420],"source":" If you omit this parameter, default values are used for the other fields in the **FORMATETC** structure."},{"content":"Return Value","pos":[38430,38442]},{"content":"Nonzero if successful; otherwise 0.","pos":[38446,38481]},{"content":"Remarks","pos":[38491,38498]},{"content":"The framework calls this function if the user chooses OK from the Insert Object dialog box when the Create New button is selected.","pos":[38502,38632]},{"pos":[38639,38946],"content":"For more information, see <bpt id=\"p1\">[</bpt>OleCreate<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms678409)</ept>, <bpt id=\"p2\">[</bpt>OLERENDER<ept id=\"p2\">](http://msdn.microsoft.com/library/windows/desktop/ms691507)</ept>, and <bpt id=\"p3\">[</bpt>FORMATETC<ept id=\"p3\">](http://msdn.microsoft.com/library/windows/desktop/ms682177)</ept> in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"For more information, see [OleCreate](http://msdn.microsoft.com/library/windows/desktop/ms678409), [OLERENDER](http://msdn.microsoft.com/library/windows/desktop/ms691507), and [FORMATETC](http://msdn.microsoft.com/library/windows/desktop/ms682177) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"pos":[39014,39055],"content":"COleClientItem::CreateStaticFromClipboard"},{"content":"Call this function to create a static item from the contents of the Clipboard.","pos":[39059,39137]},{"content":"Parameters","pos":[39303,39313]},{"content":"render","pos":[39318,39324]},{"content":"Flag specifying how the server will render the OLE item.","pos":[39329,39385]},{"content":"For the possible values, see <bpt id=\"p1\">[</bpt>OLERENDER<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms691507)</ept> in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","pos":[39386,39546],"source":" For the possible values, see [OLERENDER](http://msdn.microsoft.com/library/windows/desktop/ms691507) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"content":"Specifies the Clipboard data format to be cached when creating the OLE item.","pos":[39567,39643]},{"content":"Pointer to a <bpt id=\"p1\">[</bpt>FORMATETC<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms682177)</ept> structure used if <bpt id=\"p2\">*</bpt>render<ept id=\"p2\">*</ept> is <bpt id=\"p3\">**</bpt>OLERENDER_FORMAT<ept id=\"p3\">**</ept> or <bpt id=\"p4\">**</bpt>OLERENDER_DRAW<ept id=\"p4\">**</ept>.","pos":[39667,39825],"source":" Pointer to a [FORMATETC](http://msdn.microsoft.com/library/windows/desktop/ms682177) structure used if *render* is **OLERENDER_FORMAT** or **OLERENDER_DRAW**."},{"content":"Provide a value for this parameter only if you want to specify additional format information beyond the Clipboard format specified by <ph id=\"ph1\">`cfFormat`</ph>.","pos":[39826,39971],"source":" Provide a value for this parameter only if you want to specify additional format information beyond the Clipboard format specified by `cfFormat`."},{"content":"If you omit this parameter, default values are used for the other fields in the <bpt id=\"p1\">**</bpt>FORMATETC<ept id=\"p1\">**</ept> structure.","pos":[39972,40076],"source":" If you omit this parameter, default values are used for the other fields in the **FORMATETC** structure."},{"content":"Return Value","pos":[40086,40098]},{"content":"Nonzero if successful; otherwise 0.","pos":[40102,40137]},{"content":"Remarks","pos":[40147,40154]},{"content":"A static item contains the presentation data but not the native data; consequently it cannot be edited.","pos":[40158,40261]},{"content":"You typically call this function if the <bpt id=\"p1\">[</bpt>CreateFromClipboard<ept id=\"p1\">](#coleclientitem__createfromclipboard)</ept> member function fails.","pos":[40262,40384],"source":" You typically call this function if the [CreateFromClipboard](#coleclientitem__createfromclipboard) member function fails."},{"pos":[40391,40624],"content":"For more information, see <bpt id=\"p1\">[</bpt>OLERENDER<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms691507)</ept> and <bpt id=\"p2\">[</bpt>FORMATETC<ept id=\"p2\">](http://msdn.microsoft.com/library/windows/desktop/ms682177)</ept> in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"For more information, see [OLERENDER](http://msdn.microsoft.com/library/windows/desktop/ms691507) and [FORMATETC](http://msdn.microsoft.com/library/windows/desktop/ms682177) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"pos":[40687,40723],"content":"COleClientItem::CreateStaticFromData"},{"pos":[40727,40801],"content":"Call this function to create a static item from a <ph id=\"ph1\">`COleDataObject`</ph> object.","source":"Call this function to create a static item from a `COleDataObject` object."},{"content":"Parameters","pos":[40997,41007]},{"content":"Pointer to the <bpt id=\"p1\">[</bpt>COleDataObject<ept id=\"p1\">](../../mfc/reference/coledataobject-class.md)</ept> object from which the OLE item is to be created.","pos":[41028,41153],"source":" Pointer to the [COleDataObject](../../mfc/reference/coledataobject-class.md) object from which the OLE item is to be created."},{"content":"render","pos":[41161,41167]},{"content":"Flag specifying how the server will render the OLE item.","pos":[41172,41228]},{"content":"For the possible values, see <bpt id=\"p1\">[</bpt>OLERENDER<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms691507)</ept> in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","pos":[41229,41389],"source":" For the possible values, see [OLERENDER](http://msdn.microsoft.com/library/windows/desktop/ms691507) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"content":"Specifies the Clipboard data format to be cached when creating the OLE item.","pos":[41410,41486]},{"content":"Pointer to a <bpt id=\"p1\">[</bpt>FORMATETC<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms682177)</ept> structure used if <bpt id=\"p2\">*</bpt>render<ept id=\"p2\">*</ept> is <bpt id=\"p3\">**</bpt>OLERENDER_FORMAT<ept id=\"p3\">**</ept> or <bpt id=\"p4\">**</bpt>OLERENDER_DRAW<ept id=\"p4\">**</ept>.","pos":[41510,41668],"source":" Pointer to a [FORMATETC](http://msdn.microsoft.com/library/windows/desktop/ms682177) structure used if *render* is **OLERENDER_FORMAT** or **OLERENDER_DRAW**."},{"content":"Provide a value for this parameter only if you want to specify additional format information beyond the Clipboard format specified by <ph id=\"ph1\">`cfFormat`</ph>.","pos":[41669,41814],"source":" Provide a value for this parameter only if you want to specify additional format information beyond the Clipboard format specified by `cfFormat`."},{"content":"If you omit this parameter, default values are used for the other fields in the <bpt id=\"p1\">**</bpt>FORMATETC<ept id=\"p1\">**</ept> structure.","pos":[41815,41919],"source":" If you omit this parameter, default values are used for the other fields in the **FORMATETC** structure."},{"content":"Return Value","pos":[41929,41941]},{"content":"Nonzero if successful; otherwise 0.","pos":[41945,41980]},{"content":"Remarks","pos":[41990,41997]},{"content":"A static item contains the presentation data but not the native data; consequently, it cannot be edited.","pos":[42001,42105]},{"content":"This is essentially the same as <bpt id=\"p1\">[</bpt>CreateStaticFromClipboard<ept id=\"p1\">](#coleclientitem__createstaticfromclipboard)</ept> except that a static item can be created from an arbitrary <ph id=\"ph1\">`COleDataObject`</ph>, not just from the Clipboard.","pos":[42106,42315],"source":" This is essentially the same as [CreateStaticFromClipboard](#coleclientitem__createstaticfromclipboard) except that a static item can be created from an arbitrary `COleDataObject`, not just from the Clipboard."},{"pos":[42322,42479],"content":"Used in <bpt id=\"p1\">[</bpt>COlePasteSpecialDialog::CreateItem<ept id=\"p1\">](../../mfc/reference/colepastespecialdialog-class.md#colepastespecialdialog__createitem)</ept> when Static is selected.","source":"Used in [COlePasteSpecialDialog::CreateItem](../../mfc/reference/colepastespecialdialog-class.md#colepastespecialdialog__createitem) when Static is selected."},{"pos":[42486,42807],"content":"For more information, see <bpt id=\"p1\">[</bpt>OleCreateStaticFromData<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms687290)</ept>, <bpt id=\"p2\">[</bpt>OLERENDER<ept id=\"p2\">](http://msdn.microsoft.com/library/windows/desktop/ms691507)</ept>, and <bpt id=\"p3\">[</bpt>FORMATETC<ept id=\"p3\">](http://msdn.microsoft.com/library/windows/desktop/ms682177)</ept> in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"For more information, see [OleCreateStaticFromData](http://msdn.microsoft.com/library/windows/desktop/ms687290), [OLERENDER](http://msdn.microsoft.com/library/windows/desktop/ms691507), and [FORMATETC](http://msdn.microsoft.com/library/windows/desktop/ms682177) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"pos":[42860,42886],"content":"COleClientItem::Deactivate"},{"content":"Call this function to deactivate the OLE item and free any associated resources.","pos":[42890,42970]},{"content":"Remarks","pos":[43014,43021]},{"content":"You typically deactivate an in-place active OLE item when the user clicks the mouse on the client area outside the bounds of the item.","pos":[43025,43159]},{"content":"Note that deactivating the OLE item will discard its undo state, making it impossible to call the <bpt id=\"p1\">[</bpt>ReactivateAndUndo<ept id=\"p1\">](#coleclientitem__reactivateandundo)</ept> member function.","pos":[43160,43330],"source":" Note that deactivating the OLE item will discard its undo state, making it impossible to call the [ReactivateAndUndo](#coleclientitem__reactivateandundo) member function."},{"pos":[43337,43458],"content":"If your application supports undo, do not call <ph id=\"ph1\">`Deactivate`</ph>; instead, call <bpt id=\"p1\">[</bpt>DeactivateUI<ept id=\"p1\">](#coleclientitem__deactivateui)</ept>.","source":"If your application supports undo, do not call `Deactivate`; instead, call [DeactivateUI](#coleclientitem__deactivateui)."},{"pos":[43465,43649],"content":"For more information, see <bpt id=\"p1\">[</bpt>IOleInPlaceObject::InPlaceDeactivate<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms679700)</ept> in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"For more information, see [IOleInPlaceObject::InPlaceDeactivate](http://msdn.microsoft.com/library/windows/desktop/ms679700) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"pos":[43704,43732],"content":"COleClientItem::DeactivateUI"},{"content":"Call this function when the user deactivates an item that was activated in place.","pos":[43736,43817]},{"content":"Remarks","pos":[43863,43870]},{"content":"This function restores the container application's user interface to its original state, hiding any menus and other controls that were created for in-place activation.","pos":[43874,44041]},{"content":"This function does not flush the undo state information for the item.","pos":[44048,44117]},{"content":"That information is retained so that <bpt id=\"p1\">[</bpt>ReactivateAndUndo<ept id=\"p1\">](#coleclientitem__reactivateandundo)</ept> can later be used to execute an undo command in the server application, in case the container's undo command is chosen immediately after deactivating the item.","pos":[44118,44370],"source":" That information is retained so that [ReactivateAndUndo](#coleclientitem__reactivateandundo) can later be used to execute an undo command in the server application, in case the container's undo command is chosen immediately after deactivating the item."},{"pos":[44377,44561],"content":"For more information, see <bpt id=\"p1\">[</bpt>IOleInPlaceObject::InPlaceDeactivate<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms679700)</ept> in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"For more information, see [IOleInPlaceObject::InPlaceDeactivate](http://msdn.microsoft.com/library/windows/desktop/ms679700) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"pos":[44610,44632],"content":"COleClientItem::Delete"},{"content":"Call this function to delete the OLE item from the container document.","pos":[44636,44706]},{"content":"Parameters","pos":[44769,44779]},{"content":"Specifies whether the item is to be removed from the document.","pos":[44800,44862]},{"content":"Remarks","pos":[44872,44879]},{"content":"This function calls the <bpt id=\"p1\">[</bpt>Release<ept id=\"p1\">](#coleclientitem__release)</ept> member function, which in turn deletes the C++ object for the item, permanently removing the OLE item from the document.","pos":[44883,45063],"source":"This function calls the [Release](#coleclientitem__release) member function, which in turn deletes the C++ object for the item, permanently removing the OLE item from the document."},{"content":"If the OLE item is embedded, the native data for the item is deleted.","pos":[45064,45133]},{"content":"It always closes a running server; therefore, if the item is an open link, this function closes it.","pos":[45134,45233]},{"pos":[45286,45312],"content":"COleClientItem::DoDragDrop"},{"pos":[45316,45391],"content":"Call the <ph id=\"ph1\">`DoDragDrop`</ph> member function to perform a drag-and-drop operation.","source":"Call the `DoDragDrop` member function to perform a drag-and-drop operation."},{"content":"Parameters","pos":[45617,45627]},{"content":"The item's rectangle on screen in client coordinates (pixels).","pos":[45647,45709]},{"content":"The offset from <ph id=\"ph1\">`lpItemRect`</ph> where the mouse position was at the time of the drag.","pos":[45730,45812],"source":" The offset from `lpItemRect` where the mouse position was at the time of the drag."},{"content":"Set this to <bpt id=\"p1\">**</bpt>TRUE<ept id=\"p1\">**</ept> if the link data should be copied to the Clipboard.","pos":[45837,45909],"source":" Set this to **TRUE** if the link data should be copied to the Clipboard."},{"content":"Set it to <bpt id=\"p1\">**</bpt>FALSE<ept id=\"p1\">**</ept> if your server application does not support links.","pos":[45910,45980],"source":" Set it to **FALSE** if your server application does not support links."},{"content":"Determines the effects that the drag source will allow in the drag operation.","pos":[46002,46079]},{"content":"Pointer to the rectangle that defines where the drag actually starts.","pos":[46107,46176]},{"content":"For more information, see the following Remarks section.","pos":[46177,46233]},{"content":"Return Value","pos":[46243,46255]},{"content":"A <ph id=\"ph1\">`DROPEFFECT`</ph> value.","pos":[46259,46280],"source":"A `DROPEFFECT` value."},{"content":"If it is <ph id=\"ph1\">`DROPEFFECT_MOVE`</ph>, the original data should be removed.","pos":[46281,46345],"source":" If it is `DROPEFFECT_MOVE`, the original data should be removed."},{"content":"Remarks","pos":[46355,46362]},{"content":"The drag-and-drop operation does not start immediately.","pos":[46366,46421]},{"content":"It waits until the mouse cursor leaves the rectangle specified by <ph id=\"ph1\">`lpRectStartDrag`</ph> or until a specified number of milliseconds have passed.","pos":[46422,46562],"source":" It waits until the mouse cursor leaves the rectangle specified by `lpRectStartDrag` or until a specified number of milliseconds have passed."},{"content":"If <ph id=\"ph1\">`lpRectStartDrag`</ph> is <bpt id=\"p1\">**</bpt>NULL<ept id=\"p1\">**</ept>, the size of the rectangle is one pixel.","pos":[46563,46636],"source":" If `lpRectStartDrag` is **NULL**, the size of the rectangle is one pixel."},{"content":"The delay time is specified by a registry key setting.","pos":[46643,46697]},{"content":"You can change the delay time by calling <bpt id=\"p1\">[</bpt>CWinApp::WriteProfileString<ept id=\"p1\">](../../mfc/reference/cwinapp-class.md#cwinapp__writeprofilestring)</ept> or <bpt id=\"p2\">[</bpt>CWinApp::WriteProfileInt<ept id=\"p2\">](../../mfc/reference/cwinapp-class.md#cwinapp__writeprofileint)</ept>.","pos":[46698,46928],"source":" You can change the delay time by calling [CWinApp::WriteProfileString](../../mfc/reference/cwinapp-class.md#cwinapp__writeprofilestring) or [CWinApp::WriteProfileInt](../../mfc/reference/cwinapp-class.md#cwinapp__writeprofileint)."},{"content":"If you do not specify the delay time, a default value of 200 milliseconds is used.","pos":[46929,47011]},{"content":"Drag delay time is stored as follows:","pos":[47012,47049]},{"content":"Windows NT   Drag delay time is stored in HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\NT\\CurrentVersion\\IniFileMapping\\win.ini\\Windows\\DragDelay.","pos":[47059,47206]},{"content":"Windows 3.x   Drag delay time is stored in the WIN.INI file, under the [Windows} section.","pos":[47216,47305]},{"content":"Windows 95/98   Drag delay time is stored in a cached version of WIN.INI.","pos":[47315,47388]},{"pos":[47395,47644],"content":"For more information about how drag delay information is stored in either the registry or the .INI file, see <bpt id=\"p1\">[</bpt>WriteProfileString<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms725504)</ept> in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"For more information about how drag delay information is stored in either the registry or the .INI file, see [WriteProfileString](http://msdn.microsoft.com/library/windows/desktop/ms725504) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"pos":[47693,47715],"content":"COleClientItem::DoVerb"},{"pos":[47719,47763],"content":"Call <ph id=\"ph1\">`DoVerb`</ph> to execute the specified verb.","source":"Call `DoVerb` to execute the specified verb."},{"content":"Parameters","pos":[47870,47880]},{"content":"Specifies the verb to execute.","pos":[47895,47925]},{"content":"It can include one of the following:","pos":[47926,47962]},{"content":"Value","pos":[47969,47974]},{"content":"Meaning","pos":[47975,47982]},{"content":"Symbol","pos":[47983,47989]},{"content":"– 0","pos":[48037,48040]},{"content":"Primary verb","pos":[48041,48053]},{"content":"– 1","pos":[48077,48080]},{"content":"Secondary verb","pos":[48081,48095]},{"content":"(None)","pos":[48096,48102]},{"content":"– 1","pos":[48107,48110]},{"content":"Display item for editing","pos":[48111,48135]},{"content":"– 2","pos":[48156,48159]},{"content":"Edit item in separate window","pos":[48160,48188]},{"content":"– 3","pos":[48209,48212]},{"content":"Hide item","pos":[48213,48222]},{"content":"The –1 value is typically an alias for another verb.","pos":[48246,48298]},{"content":"If open editing is not supported, –2 has the same effect as –1.","pos":[48299,48362]},{"content":"For additional values, see <bpt id=\"p1\">[</bpt>IOleObject::DoVerb<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms694508)</ept> in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","pos":[48363,48530],"source":" For additional values, see [IOleObject::DoVerb](http://msdn.microsoft.com/library/windows/desktop/ms694508) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"content":"Pointer to the view window; this is used by the server for in-place activation.","pos":[48548,48627]},{"content":"This parameter should be <bpt id=\"p1\">**</bpt>NULL<ept id=\"p1\">**</ept> if the container application does not allow in-place activation.","pos":[48628,48726],"source":" This parameter should be **NULL** if the container application does not allow in-place activation."},{"content":"Pointer to the message that caused the item to be activated.","pos":[48744,48804]},{"content":"Return Value","pos":[48814,48826]},{"content":"Nonzero if the verb was successfully executed; otherwise 0.","pos":[48830,48889]},{"content":"Remarks","pos":[48899,48906]},{"content":"This function calls the <bpt id=\"p1\">[</bpt>Activate<ept id=\"p1\">](#coleclientitem__activate)</ept> member function to execute the verb.","pos":[48910,49008],"source":"This function calls the [Activate](#coleclientitem__activate) member function to execute the verb."},{"content":"It also catches exceptions and displays a message box to the user if one is thrown.","pos":[49009,49092]},{"content":"If the primary verb is Edit and zero is specified in the <ph id=\"ph1\">`nVerb`</ph> parameter, the server application is launched to allow the OLE item to be edited.","pos":[49099,49245],"source":"If the primary verb is Edit and zero is specified in the `nVerb` parameter, the server application is launched to allow the OLE item to be edited."},{"content":"If the container application supports in-place activation, editing can be done in place.","pos":[49246,49334]},{"content":"If the container does not support in-place activation (or if the Open verb is specified), the server is launched in a separate window and editing can be done there.","pos":[49335,49499]},{"content":"Typically, when the user of the container application double-clicks the OLE item, the value for the primary verb in the <ph id=\"ph1\">`nVerb`</ph> parameter determines which action the user can take.","pos":[49500,49680],"source":" Typically, when the user of the container application double-clicks the OLE item, the value for the primary verb in the `nVerb` parameter determines which action the user can take."},{"content":"However, if the server supports only one action, it takes that action, no matter which value is specified in the <ph id=\"ph1\">`nVerb`</ph> parameter.","pos":[49681,49812],"source":" However, if the server supports only one action, it takes that action, no matter which value is specified in the `nVerb` parameter."},{"pos":[49859,49879],"content":"COleClientItem::Draw"},{"content":"Call this function to draw the OLE item into the specified bounding rectangle using the specified device context.","pos":[49883,49996]},{"content":"Parameters","pos":[50114,50124]},{"content":"Pointer to a <bpt id=\"p1\">[</bpt>CDC<ept id=\"p1\">](../../mfc/reference/cdc-class.md)</ept> object used for drawing the OLE item.","pos":[50137,50227],"source":" Pointer to a [CDC](../../mfc/reference/cdc-class.md) object used for drawing the OLE item."},{"content":"Pointer to a <bpt id=\"p1\">[</bpt>CRect<ept id=\"p1\">](../../atl-mfc-shared/reference/crect-class.md)</ept> object or <ph id=\"ph1\">`RECT`</ph> structure that defines the bounding rectangle in which to draw the OLE item (in logical units determined by the device context).","pos":[50248,50461],"source":" Pointer to a [CRect](../../atl-mfc-shared/reference/crect-class.md) object or `RECT` structure that defines the bounding rectangle in which to draw the OLE item (in logical units determined by the device context)."},{"content":"Specifies the aspect of the OLE item, that is, how it should be displayed.","pos":[50485,50559]},{"content":"If <ph id=\"ph1\">`nDrawAspect`</ph> is –1, the last aspect set by using <bpt id=\"p1\">[</bpt>SetDrawAspect<ept id=\"p1\">](#coleclientitem__setdrawaspect)</ept> is used.","pos":[50560,50669],"source":" If `nDrawAspect` is –1, the last aspect set by using [SetDrawAspect](#coleclientitem__setdrawaspect) is used."},{"content":"For more information about possible values for this flag, see <bpt id=\"p1\">[</bpt>SetDrawAspect<ept id=\"p1\">](#coleclientitem__setdrawaspect)</ept>.","pos":[50670,50780],"source":" For more information about possible values for this flag, see [SetDrawAspect](#coleclientitem__setdrawaspect)."},{"content":"Return Value","pos":[50790,50802]},{"content":"Nonzero if successful; otherwise 0.","pos":[50806,50841]},{"content":"Remarks","pos":[50851,50858]},{"pos":[50862,51055],"content":"The function may use the metafile representation of the OLE item created by the <bpt id=\"p1\">[</bpt>OnDraw<ept id=\"p1\">](../../mfc/reference/coleserveritem-class.md#coleserveritem__ondraw)</ept> member function of <ph id=\"ph1\">`COleServerItem`</ph>.","source":"The function may use the metafile representation of the OLE item created by the [OnDraw](../../mfc/reference/coleserveritem-class.md#coleserveritem__ondraw) member function of `COleServerItem`."},{"content":"Typically you use <bpt id=\"p1\">**</bpt>Draw<ept id=\"p1\">**</ept> for screen display, passing the screen device context as <ph id=\"ph1\">`pDC`</ph>.","pos":[51062,51152],"source":"Typically you use **Draw** for screen display, passing the screen device context as `pDC`."},{"content":"In this case, you need to specify only the first two parameters.","pos":[51153,51217]},{"content":"The <ph id=\"ph1\">`lpBounds`</ph> parameter identifies the rectangle in the target device context (relative to its current mapping mode).","pos":[51224,51342],"source":"The `lpBounds` parameter identifies the rectangle in the target device context (relative to its current mapping mode)."},{"content":"Rendering may involve scaling the picture and can be used by container applications to impose a view that scales between the displayed view and the final printed image.","pos":[51343,51511]},{"pos":[51518,51683],"content":"For more information, see <bpt id=\"p1\">[</bpt>IViewObject::Draw<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms688655)</ept> in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"For more information, see [IViewObject::Draw](http://msdn.microsoft.com/library/windows/desktop/ms688655) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"pos":[51739,51768],"content":"COleClientItem::GetActiveView"},{"content":"Returns the view on which the item is in-place activated.","pos":[51772,51829]},{"content":"Return Value","pos":[51887,51899]},{"pos":[51903,51983],"content":"A pointer to the view; otherwise <bpt id=\"p1\">**</bpt>NULL<ept id=\"p1\">**</ept> if the item is not in-place activated.","source":"A pointer to the view; otherwise **NULL** if the item is not in-place activated."},{"pos":[52041,52072],"content":"COleClientItem::GetCachedExtent"},{"content":"Call this function to retrieve the OLE item's size.","pos":[52076,52127]},{"content":"Parameters","pos":[52237,52247]},{"content":"Pointer to a <bpt id=\"p1\">**</bpt>SIZE<ept id=\"p1\">**</ept> structure or a <bpt id=\"p2\">[</bpt>CSize<ept id=\"p2\">](../../atl-mfc-shared/reference/csize-class.md)</ept> object that will receive the size information.","pos":[52263,52401],"source":" Pointer to a **SIZE** structure or a [CSize](../../atl-mfc-shared/reference/csize-class.md) object that will receive the size information."},{"content":"Specifies the aspect of the OLE item whose bounds are to be retrieved.","pos":[52425,52495]},{"content":"For possible values, see <bpt id=\"p1\">[</bpt>SetDrawAspect<ept id=\"p1\">](#coleclientitem__setdrawaspect)</ept>.","pos":[52496,52569],"source":" For possible values, see [SetDrawAspect](#coleclientitem__setdrawaspect)."},{"content":"Return Value","pos":[52579,52591]},{"content":"Nonzero if successful; 0 if the OLE item is blank.","pos":[52595,52645]},{"content":"Remarks","pos":[52655,52662]},{"content":"This function provides the same information as <bpt id=\"p1\">[</bpt>GetExtent<ept id=\"p1\">](#coleclientitem__getextent)</ept>.","pos":[52666,52753],"source":"This function provides the same information as [GetExtent](#coleclientitem__getextent)."},{"content":"However, you can call <ph id=\"ph1\">`GetCachedExtent`</ph> to get extent information during the processing of other OLE handlers, such as <bpt id=\"p1\">[</bpt>OnChange<ept id=\"p1\">](#coleclientitem__onchange)</ept>.","pos":[52754,52911],"source":" However, you can call `GetCachedExtent` to get extent information during the processing of other OLE handlers, such as [OnChange](#coleclientitem__onchange)."},{"content":"The dimensions are in <ph id=\"ph1\">`MM_HIMETRIC`</ph> units.","pos":[52912,52954],"source":" The dimensions are in `MM_HIMETRIC` units."},{"content":"This is possible because <ph id=\"ph1\">`GetCachedExtent`</ph> uses the <bpt id=\"p1\">[</bpt>IViewObject2<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms691318)</ept> interface rather than use the <bpt id=\"p2\">[</bpt>IOleObject<ept id=\"p2\">](http://msdn.microsoft.com/library/windows/desktop/dd542709)</ept> interface to get the extent of this item.","pos":[52961,53232],"source":"This is possible because `GetCachedExtent` uses the [IViewObject2](http://msdn.microsoft.com/library/windows/desktop/ms691318) interface rather than use the [IOleObject](http://msdn.microsoft.com/library/windows/desktop/dd542709) interface to get the extent of this item."},{"content":"The <bpt id=\"p1\">**</bpt>IViewObject2<ept id=\"p1\">**</ept> COM object caches the extent information used in the previous call to <bpt id=\"p2\">[</bpt>IViewObject::Draw<ept id=\"p2\">](http://msdn.microsoft.com/library/windows/desktop/ms688655)</ept>.","pos":[53233,53404],"source":" The **IViewObject2** COM object caches the extent information used in the previous call to [IViewObject::Draw](http://msdn.microsoft.com/library/windows/desktop/ms688655)."},{"pos":[53411,53582],"content":"For more information, see <bpt id=\"p1\">[</bpt>IViewObject2::GetExtent<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms684032)</ept> in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"For more information, see [IViewObject2::GetExtent](http://msdn.microsoft.com/library/windows/desktop/ms684032) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"pos":[53635,53661],"content":"COleClientItem::GetClassID"},{"pos":[53665,53739],"content":"Returns the class ID of the item into the memory pointed to by <ph id=\"ph1\">`pClassID`</ph>.","source":"Returns the class ID of the item into the memory pointed to by `pClassID`."},{"content":"Parameters","pos":[53807,53817]},{"content":"Pointer to an identifier of type <bpt id=\"p1\">[</bpt>CLSID<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms691424)</ept> to retrieve the class ID.","pos":[53835,53961],"source":" Pointer to an identifier of type [CLSID](http://msdn.microsoft.com/library/windows/desktop/ms691424) to retrieve the class ID."},{"content":"For information on <bpt id=\"p1\">**</bpt>CLSID<ept id=\"p1\">**</ept>, see the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","pos":[53962,54052],"source":" For information on **CLSID**, see the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"content":"Remarks","pos":[54062,54069]},{"content":"The class ID is a 128-bit number that uniquely identifies the application that edits the item.","pos":[54073,54167]},{"pos":[54174,54342],"content":"For more information, see <bpt id=\"p1\">[</bpt>IPersist::GetClassID<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms688664)</ept> in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"For more information, see [IPersist::GetClassID](http://msdn.microsoft.com/library/windows/desktop/ms688664) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"pos":[54401,54433],"content":"COleClientItem::GetClipboardData"},{"pos":[54437,54636],"content":"Call this function to get a <ph id=\"ph1\">`COleDataSource`</ph> object containing all the data that would be placed on the Clipboard by a call to the <bpt id=\"p1\">[</bpt>CopyToClipboard<ept id=\"p1\">](#coleclientitem__copytoclipboard)</ept> member function.","source":"Call this function to get a `COleDataSource` object containing all the data that would be placed on the Clipboard by a call to the [CopyToClipboard](#coleclientitem__copytoclipboard) member function."},{"content":"Parameters","pos":[54810,54820]},{"content":"Pointer to a <bpt id=\"p1\">[</bpt>COleDataSource<ept id=\"p1\">](../../mfc/reference/coledatasource-class.md)</ept> object that will receive the data contained in the OLE item.","pos":[54841,54976],"source":" Pointer to a [COleDataSource](../../mfc/reference/coledatasource-class.md) object that will receive the data contained in the OLE item."},{"content":"<bpt id=\"p1\"> **</bpt>TRUE<ept id=\"p1\">**</ept> if link data should be included; otherwise <bpt id=\"p2\">**</bpt>FALSE<ept id=\"p2\">**</ept>.","pos":[55000,55063],"source":" **TRUE** if link data should be included; otherwise **FALSE**."},{"content":"The offset of the mouse cursor from the origin of the object in pixels.","pos":[55084,55155]},{"content":"The size of the object in pixels.","pos":[55174,55207]},{"content":"Remarks","pos":[55217,55224]},{"content":"is called as the default implementation of <bpt id=\"p1\">[</bpt>OnGetClipboardData<ept id=\"p1\">](#coleclientitem__ongetclipboarddata)</ept>.","pos":[55247,55348],"source":" is called as the default implementation of [OnGetClipboardData](#coleclientitem__ongetclipboarddata)."},{"content":"Override <ph id=\"ph1\">`OnGetClipboardData`</ph> only if you want to offer data formats in addition to those offered by <ph id=\"ph2\">`CopyToClipboard`</ph>.","pos":[55349,55468],"source":" Override `OnGetClipboardData` only if you want to offer data formats in addition to those offered by `CopyToClipboard`."},{"content":"Place those formats in the <ph id=\"ph1\">`COleDataSource`</ph> object before or after calling <ph id=\"ph2\">`CopyToClipboard`</ph>, and then pass the <ph id=\"ph3\">`COleDataSource`</ph> object to the <bpt id=\"p1\">[</bpt>COleDataSource::SetClipboard<ept id=\"p1\">](../../mfc/reference/coledatasource-class.md#coledatasource__setclipboard)</ept> function.","pos":[55469,55726],"source":" Place those formats in the `COleDataSource` object before or after calling `CopyToClipboard`, and then pass the `COleDataSource` object to the [COleDataSource::SetClipboard](../../mfc/reference/coledatasource-class.md#coledatasource__setclipboard) function."},{"content":"For example, if you want the OLE item's position in its container document to accompany it on the Clipboard, you would define your own format for passing that information and place it in the <ph id=\"ph1\">`COleDataSource`</ph> before calling <ph id=\"ph2\">`CopyToClipboard`</ph>.","pos":[55727,55968],"source":" For example, if you want the OLE item's position in its container document to accompany it on the Clipboard, you would define your own format for passing that information and place it in the `COleDataSource` before calling `CopyToClipboard`."},{"pos":[56022,56049],"content":"COleClientItem::GetDocument"},{"content":"Call this function to get a pointer to the document that contains the OLE item.","pos":[56053,56132]},{"content":"Return Value","pos":[56195,56207]},{"content":"A pointer to the document that contains the OLE item.","pos":[56211,56264]},{"content":"<bpt id=\"p1\">**</bpt>NULL<ept id=\"p1\">**</ept> if the item is not part of a document.","pos":[56265,56312],"source":"**NULL** if the item is not part of a document."},{"content":"Remarks","pos":[56322,56329]},{"pos":[56333,56456],"content":"This pointer allows access to the <ph id=\"ph1\">`COleDocument`</ph> object that you passed as an argument to the <ph id=\"ph2\">`COleClientItem`</ph> constructor.","source":"This pointer allows access to the `COleDocument` object that you passed as an argument to the `COleClientItem` constructor."},{"pos":[56512,56541],"content":"COleClientItem::GetDrawAspect"},{"pos":[56545,56642],"content":"Call the <ph id=\"ph1\">`GetDrawAspect`</ph> member function to determine the current \"aspect,\" or view, of the item.","source":"Call the `GetDrawAspect` member function to determine the current \"aspect,\" or view, of the item."},{"content":"Return Value","pos":[56702,56714]},{"pos":[56718,56852],"content":"A value from the <ph id=\"ph1\">`DVASPECT`</ph> enumeration, whose values are listed in the reference for <bpt id=\"p1\">[</bpt>SetDrawAspect<ept id=\"p1\">](#coleclientitem__setdrawaspect)</ept>.","source":"A value from the `DVASPECT` enumeration, whose values are listed in the reference for [SetDrawAspect](#coleclientitem__setdrawaspect)."},{"content":"Remarks","pos":[56862,56869]},{"content":"The aspect specifies how the item is to be rendered.","pos":[56873,56925]},{"pos":[56977,57002],"content":"COleClientItem::GetExtent"},{"content":"Call this function to retrieve the OLE item's size.","pos":[57006,57057]},{"content":"Parameters","pos":[57162,57172]},{"content":"Pointer to a <bpt id=\"p1\">**</bpt>SIZE<ept id=\"p1\">**</ept> structure or a <ph id=\"ph1\">`CSize`</ph> object that will receive the size information.","pos":[57188,57279],"source":" Pointer to a **SIZE** structure or a `CSize` object that will receive the size information."},{"content":"Specifies the aspect of the OLE item whose bounds are to be retrieved.","pos":[57303,57373]},{"content":"For possible values, see <bpt id=\"p1\">[</bpt>SetDrawAspect<ept id=\"p1\">](#coleclientitem__setdrawaspect)</ept>.","pos":[57374,57447],"source":" For possible values, see [SetDrawAspect](#coleclientitem__setdrawaspect)."},{"content":"Return Value","pos":[57457,57469]},{"content":"Nonzero if successful; 0 if the OLE item is blank.","pos":[57473,57523]},{"content":"Remarks","pos":[57533,57540]},{"content":"If the server application was written using the Microsoft Foundation Class Library, this function causes the <bpt id=\"p1\">[</bpt>OnGetExtent<ept id=\"p1\">](../../mfc/reference/coleserveritem-class.md#coleserveritem__ongetextent)</ept> member function of the corresponding <ph id=\"ph1\">`COleServerItem`</ph> object to be called.","pos":[57544,57814],"source":"If the server application was written using the Microsoft Foundation Class Library, this function causes the [OnGetExtent](../../mfc/reference/coleserveritem-class.md#coleserveritem__ongetextent) member function of the corresponding `COleServerItem` object to be called."},{"content":"Note that the retrieved size may differ from the size last set by the <bpt id=\"p1\">[</bpt>SetExtent<ept id=\"p1\">](#coleclientitem__setextent)</ept> member function; the size specified by <ph id=\"ph1\">`SetExtent`</ph> is treated as a suggestion.","pos":[57815,58003],"source":" Note that the retrieved size may differ from the size last set by the [SetExtent](#coleclientitem__setextent) member function; the size specified by `SetExtent` is treated as a suggestion."},{"content":"The dimensions are in <ph id=\"ph1\">`MM_HIMETRIC`</ph> units.","pos":[58004,58046],"source":" The dimensions are in `MM_HIMETRIC` units."},{"pos":[58054,58242],"content":"[!NOTE]\n Do not call `GetExtent` during the processing of an OLE handler, such as [OnChange](#coleclientitem__onchange). Call [GetCachedExtent](#coleclientitem__getcachedextent) instead.","leadings":["","> "],"nodes":[{"content":" Do not call `GetExtent` during the processing of an OLE handler, such as [OnChange](#coleclientitem__onchange). Call [GetCachedExtent](#coleclientitem__getcachedextent) instead.","pos":[8,186],"nodes":[{"content":"Do not call <ph id=\"ph1\">`GetExtent`</ph> during the processing of an OLE handler, such as <bpt id=\"p1\">[</bpt>OnChange<ept id=\"p1\">](#coleclientitem__onchange)</ept>.","pos":[1,112],"source":" Do not call `GetExtent` during the processing of an OLE handler, such as [OnChange](#coleclientitem__onchange)."},{"content":"Call <bpt id=\"p1\">[</bpt>GetCachedExtent<ept id=\"p1\">](#coleclientitem__getcachedextent)</ept> instead.","pos":[113,178],"source":" Call [GetCachedExtent](#coleclientitem__getcachedextent) instead."}]}]},{"pos":[58249,58418],"content":"For more information, see <bpt id=\"p1\">[</bpt>IOleObject::GetExtent<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms692325)</ept> in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"For more information, see [IOleObject::GetExtent](http://msdn.microsoft.com/library/windows/desktop/ms692325) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"pos":[58480,58515],"content":"COleClientItem::GetIconFromRegistry"},{"content":"Call this member function to retrieve a handle to an icon resource associated with the server of a particular CLSID.","pos":[58519,58635]},{"content":"Parameters","pos":[58748,58758]},{"content":"A reference to the CLSID for the server associated with the icon.","pos":[58773,58838]},{"content":"Return Value","pos":[58848,58860]},{"pos":[58864,58969],"content":"A valid handle to the icon resource, or <bpt id=\"p1\">**</bpt>NULL<ept id=\"p1\">**</ept> if the server's icon, or a default icon, can't be found.","source":"A valid handle to the icon resource, or **NULL** if the server's icon, or a default icon, can't be found."},{"content":"Remarks","pos":[58979,58986]},{"content":"This member function will not start the server or obtain an icon dynamically, even if the server is already running.","pos":[58990,59106]},{"content":"Instead, this member function opens the server's executable image and retrieves the static icon associated with the server as it was registered.","pos":[59107,59251]},{"pos":[59311,59344],"content":"COleClientItem::GetIconicMetafile"},{"content":"Retrieves the metafile used for drawing the item's icon.","pos":[59348,59404]},{"content":"Return Value","pos":[59458,59470]},{"pos":[59474,59533],"content":"A handle to the metafile if successful; otherwise <bpt id=\"p1\">**</bpt>NULL<ept id=\"p1\">**</ept>.","source":"A handle to the metafile if successful; otherwise **NULL**."},{"content":"Remarks","pos":[59543,59550]},{"content":"If there is no current icon, a default icon is returned.","pos":[59554,59610]},{"content":"This is called automatically by the MFC/OLE dialogs and is usually not called directly.","pos":[59611,59698]},{"pos":[59705,59822],"content":"This function also calls <bpt id=\"p1\">[</bpt>SetIconicMetafile<ept id=\"p1\">](#coleclientitem__seticonicmetafile)</ept> to cache the metafile for later use.","source":"This function also calls [SetIconicMetafile](#coleclientitem__seticonicmetafile) to cache the metafile for later use."},{"pos":[59881,59913],"content":"COleClientItem::GetInPlaceWindow"},{"pos":[59917,60047],"content":"Call the <ph id=\"ph1\">`GetInPlaceWindow`</ph> member function to get a pointer to the window in which the item has been opened for in-place editing.","source":"Call the `GetInPlaceWindow` member function to get a pointer to the window in which the item has been opened for in-place editing."},{"content":"Return Value","pos":[60098,60110]},{"pos":[60114,60230],"content":"A pointer to the item's in-place editing window; <bpt id=\"p1\">**</bpt>NULL<ept id=\"p1\">**</ept> if the item is not active or if its server is unavailable.","source":"A pointer to the item's in-place editing window; **NULL** if the item is not active or if its server is unavailable."},{"content":"Remarks","pos":[60240,60247]},{"content":"This function should be called only for items that are in-place active.","pos":[60251,60322]},{"pos":[60377,60405],"content":"COleClientItem::GetItemState"},{"content":"Call this function to get the OLE item's current state.","pos":[60409,60464]},{"content":"Return Value","pos":[60519,60531]},{"content":"A <bpt id=\"p1\">**</bpt>COleClientItem::ItemState<ept id=\"p1\">**</ept> enumerated value, which can be one of the following: <ph id=\"ph1\">`emptyState`</ph>, <bpt id=\"p2\">**</bpt>loadedState<ept id=\"p2\">**</ept>, <ph id=\"ph2\">`openState`</ph>, <ph id=\"ph3\">`activeState`</ph>, <ph id=\"ph4\">`activeUIState`</ph>.","pos":[60535,60695],"source":"A **COleClientItem::ItemState** enumerated value, which can be one of the following: `emptyState`, **loadedState**, `openState`, `activeState`, `activeUIState`."},{"content":"For information about these states, see the article <bpt id=\"p1\">[</bpt>Containers: Client-Item States<ept id=\"p1\">](../../mfc/containers-client-item-states.md)</ept>.","pos":[60696,60825],"source":" For information about these states, see the article [Containers: Client-Item States](../../mfc/containers-client-item-states.md)."},{"content":"Remarks","pos":[60835,60842]},{"pos":[60846,60958],"content":"To be notified when the OLE item's state changes, use the <bpt id=\"p1\">[</bpt>OnChange<ept id=\"p1\">](#coleclientitem__onchange)</ept> member function.","source":"To be notified when the OLE item's state changes, use the [OnChange](#coleclientitem__onchange) member function."},{"pos":[60965,61080],"content":"For more information, see the article <bpt id=\"p1\">[</bpt>Containers: Client-Item States<ept id=\"p1\">](../../mfc/containers-client-item-states.md)</ept>.","source":"For more information, see the article [Containers: Client-Item States](../../mfc/containers-client-item-states.md)."},{"pos":[61136,61165],"content":"COleClientItem::GetLastStatus"},{"content":"Returns the status code of the last OLE operation.","pos":[61169,61219]},{"content":"Return Value","pos":[61276,61288]},{"pos":[61292,61309],"content":"An <ph id=\"ph1\">`SCODE`</ph> value.","source":"An `SCODE` value."},{"content":"Remarks","pos":[61319,61326]},{"content":"For member functions that return a <bpt id=\"p1\">**</bpt>BOOL<ept id=\"p1\">**</ept> value of <bpt id=\"p2\">**</bpt>FALSE<ept id=\"p2\">**</ept>, or other member functions that return <bpt id=\"p3\">**</bpt>NULL<ept id=\"p3\">**</ept>, <ph id=\"ph1\">`GetLastStatus`</ph> returns more detailed failure information.","pos":[61330,61500],"source":"For member functions that return a **BOOL** value of **FALSE**, or other member functions that return **NULL**, `GetLastStatus` returns more detailed failure information."},{"content":"Be aware that most OLE member functions throw exceptions for more serious errors.","pos":[61501,61582]},{"content":"The specific information on the interpretation of the <ph id=\"ph1\">`SCODE`</ph> depends on the underlying OLE call that last returned an <ph id=\"ph2\">`SCODE`</ph> value.","pos":[61583,61716],"source":" The specific information on the interpretation of the `SCODE` depends on the underlying OLE call that last returned an `SCODE` value."},{"pos":[61723,61924],"content":"For more information on <ph id=\"ph1\">`SCODE`</ph>, see <bpt id=\"p1\">[</bpt>Structure of COM Error Codes<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms690088)</ept> in the <ph id=\"ph2\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph> documentation.","source":"For more information on `SCODE`, see [Structure of COM Error Codes](http://msdn.microsoft.com/library/windows/desktop/ms690088) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)] documentation."},{"pos":[61987,62023],"content":"COleClientItem::GetLinkUpdateOptions"},{"content":"Call this function to get the current value of the link-update option for the OLE item.","pos":[62027,62114]},{"content":"Return Value","pos":[62173,62185]},{"content":"One of the following values:","pos":[62189,62217]},{"content":"Update the linked item whenever possible.","pos":[62244,62285]},{"content":"This option supports the Automatic link-update radio button in the Links dialog box.","pos":[62286,62370]},{"content":"Update the linked item only on request from the container application (when the <bpt id=\"p1\">[</bpt>UpdateLink<ept id=\"p1\">](#coleclientitem__updatelink)</ept> member function is called).","pos":[62397,62546],"source":" Update the linked item only on request from the container application (when the [UpdateLink](#coleclientitem__updatelink) member function is called)."},{"content":"This option supports the Manual link-update radio button in the Links dialog box.","pos":[62547,62628]},{"content":"Remarks","pos":[62638,62645]},{"content":"This is an advanced operation.","pos":[62649,62679]},{"pos":[62686,62801],"content":"This function is called automatically by the <bpt id=\"p1\">[</bpt>COleLinksDialog<ept id=\"p1\">](../../mfc/reference/colelinksdialog-class.md)</ept> class.","source":"This function is called automatically by the [COleLinksDialog](../../mfc/reference/colelinksdialog-class.md) class."},{"pos":[62808,62982],"content":"For more information, see <bpt id=\"p1\">[</bpt>IOleLink::GetUpdateOptions<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms680100)</ept> in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"For more information, see [IOleLink::GetUpdateOptions](http://msdn.microsoft.com/library/windows/desktop/ms680100) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"pos":[63032,63055],"content":"COleClientItem::GetType"},{"content":"Call this function to determine whether the OLE item is embedded or linked, or static.","pos":[63059,63145]},{"content":"Return Value","pos":[63202,63214]},{"content":"An unsigned integer with one of the following values:","pos":[63218,63271]},{"pos":[63289,63312],"content":"The OLE item is a link."},{"pos":[63334,63359],"content":"The OLE item is embedded."},{"pos":[63379,63491],"content":"The OLE item is static, that is, it contains only presentation data, not native data, and thus cannot be edited."},{"pos":[63545,63572],"content":"COleClientItem::GetUserType"},{"content":"Call this function to get the user-visible string describing the OLE item's type, such as \"Word document.\"","pos":[63576,63682]},{"content":"Parameters","pos":[63784,63794]},{"content":"nUserClassType","pos":[63799,63813]},{"content":"A value indicating the desired variant of the string describing the OLE item's type.","pos":[63818,63902]},{"content":"This can have one of the following values:","pos":[63903,63945]},{"pos":[63974,64015],"content":"The full type name displayed to the user."},{"pos":[64045,64136],"content":"A short name (15 characters maximum) for use in pop-up menus and the Edit Links dialog box."},{"pos":[64168,64212],"content":"Name of the application servicing the class."},{"pos":[64219,64385],"content":"`rString`  \nA reference to a [CString](../../atl-mfc-shared/reference/cstringt-class.md) object to which the string describing the OLE item's type is to be returned.","leadings":[""," "],"nodes":[{"content":"A reference to a <bpt id=\"p1\">[</bpt>CString<ept id=\"p1\">](../../atl-mfc-shared/reference/cstringt-class.md)</ept> object to which the string describing the OLE item's type is to be returned.","pos":[12,165],"source":"A reference to a [CString](../../atl-mfc-shared/reference/cstringt-class.md) object to which the string describing the OLE item's type is to be returned."}]},{"content":"Remarks","pos":[64395,64402]},{"content":"This is often the entry in the system registration database.","pos":[64406,64466]},{"content":"If the full type name is requested but not available, the short name is used instead.","pos":[64473,64558]},{"content":"If no entry for the type of OLE item is found in the registration database, or if there are no user types registered for the type of OLE item, then the user type currently stored in the OLE item is used.","pos":[64559,64762]},{"content":"If that user type name is an empty string, \"Unknown Object\" is used.","pos":[64763,64831]},{"pos":[64838,65009],"content":"For more information, see <bpt id=\"p1\">[</bpt>IOleObject::GetUserType<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms688643)</ept> in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"For more information, see [IOleObject::GetUserType](http://msdn.microsoft.com/library/windows/desktop/ms688643) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"pos":[65067,65098],"content":"COleClientItem::IsInPlaceActive"},{"content":"Call this function to see whether the OLE item is in-place active.","pos":[65102,65168]},{"content":"Return Value","pos":[65226,65238]},{"content":"Nonzero if the OLE item is in-place active; otherwise 0.","pos":[65242,65298]},{"content":"Remarks","pos":[65308,65315]},{"content":"It is common to execute different logic depending on whether the item is being edited in place.","pos":[65319,65414]},{"content":"The function checks whether the current item state is equal to either the <ph id=\"ph1\">`activeState`</ph> or the <ph id=\"ph2\">`activeUIState`</ph>.","pos":[65415,65526],"source":" The function checks whether the current item state is equal to either the `activeState` or the `activeUIState`."},{"pos":[65583,65613],"content":"COleClientItem::IsLinkUpToDate"},{"content":"Call this function to see whether the OLE item is up to date.","pos":[65617,65678]},{"content":"Return Value","pos":[65735,65747]},{"content":"Nonzero if the OLE item is up to date; otherwise 0.","pos":[65751,65802]},{"content":"Remarks","pos":[65812,65819]},{"content":"A linked item can be out of date if its source document has been updated.","pos":[65823,65896]},{"content":"An embedded item that contains links within it can similarly become out of date.","pos":[65897,65977]},{"content":"The function does a recursive check of the OLE item.","pos":[65978,66030]},{"content":"Note that determining whether an OLE item is out of date can be as expensive as actually performing an update.","pos":[66031,66141]},{"pos":[66148,66263],"content":"This is called automatically by the <bpt id=\"p1\">[</bpt>COleLinksDialog<ept id=\"p1\">](../../mfc/reference/colelinksdialog-class.md)</ept> implementation.","source":"This is called automatically by the [COleLinksDialog](../../mfc/reference/colelinksdialog-class.md) implementation."},{"pos":[66270,66440],"content":"For more information, see <bpt id=\"p1\">[</bpt>IOleObject::IsUpToDate<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms686624)</ept> in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"For more information, see [IOleObject::IsUpToDate](http://msdn.microsoft.com/library/windows/desktop/ms686624) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"pos":[66493,66519],"content":"COleClientItem::IsModified"},{"content":"Call this function to see whether the OLE item is dirty (modified since it was last saved).","pos":[66523,66614]},{"content":"Return Value","pos":[66667,66679]},{"content":"Nonzero if the OLE item is dirty; otherwise 0.","pos":[66683,66729]},{"content":"Remarks","pos":[66739,66746]},{"pos":[66750,66922],"content":"For more information, see <bpt id=\"p1\">[</bpt>IPersistStorage::IsDirty<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms683910)</ept> in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"For more information, see [IPersistStorage::IsDirty](http://msdn.microsoft.com/library/windows/desktop/ms683910) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"pos":[66971,66993],"content":"COleClientItem::IsOpen"},{"content":"Call this function to see whether the OLE item is open; that is, opened in an instance of the server application running in a separate window.","pos":[66997,67139]},{"content":"Return Value","pos":[67188,67200]},{"content":"Nonzero if the OLE item is open; otherwise 0.","pos":[67204,67249]},{"content":"Remarks","pos":[67259,67266]},{"content":"It is used to determine when to draw the object with a hatching pattern.","pos":[67270,67342]},{"content":"An open object should have a hatch pattern drawn on top of the object.","pos":[67343,67413]},{"content":"You can use a <bpt id=\"p1\">[</bpt>CRectTracker<ept id=\"p1\">](../../mfc/reference/crecttracker-class.md)</ept> object to accomplish this.","pos":[67414,67512],"source":" You can use a [CRectTracker](../../mfc/reference/crecttracker-class.md) object to accomplish this."},{"pos":[67564,67589],"content":"COleClientItem::IsRunning"},{"content":"Call this function to see whether the OLE item is running; that is, whether the item is loaded and running in the server application.","pos":[67593,67726]},{"content":"Return Value","pos":[67778,67790]},{"content":"Nonzero if the OLE item is running; otherwise 0.","pos":[67794,67842]},{"content":"Remarks","pos":[67852,67859]},{"pos":[67863,68023],"content":"For more information, see <bpt id=\"p1\">[</bpt>OleIsRunning<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms688705)</ept> in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"For more information, see [OleIsRunning](http://msdn.microsoft.com/library/windows/desktop/ms688705) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"pos":[68076,68102],"content":"COleClientItem::OnActivate"},{"content":"Called by the framework to notify the item that it has just been activated in place.","pos":[68106,68190]},{"content":"Remarks","pos":[68242,68249]},{"content":"Note that this function is called to indicate that the server is running, not to indicate that its user interface has been installed in the container application.","pos":[68253,68415]},{"content":"At this point, the object does not have an active user interface (is not <ph id=\"ph1\">`activeUIState`</ph>).","pos":[68416,68506],"source":" At this point, the object does not have an active user interface (is not `activeUIState`)."},{"content":"It has not installed its menus or toolbar.","pos":[68507,68549]},{"content":"The <bpt id=\"p1\">[</bpt>OnActivateUI<ept id=\"p1\">](#coleclientitem__onactivateui)</ept> member function is called when that happens.","pos":[68550,68644],"source":" The [OnActivateUI](#coleclientitem__onactivateui) member function is called when that happens."},{"content":"The default implementation calls the <bpt id=\"p1\">[</bpt>OnChange<ept id=\"p1\">](#coleclientitem__onchange)</ept> member function with <bpt id=\"p2\">**</bpt>OLE_CHANGEDSTATE<ept id=\"p2\">**</ept> as a parameter.","pos":[68651,68783],"source":"The default implementation calls the [OnChange](#coleclientitem__onchange) member function with **OLE_CHANGEDSTATE** as a parameter."},{"content":"Override this function to perform custom processing when an item becomes in-place active.","pos":[68784,68873]},{"pos":[68928,68956],"content":"COleClientItem::OnActivateUI"},{"pos":[68960,69043],"content":"The framework calls <ph id=\"ph1\">`OnActivateUI`</ph> when the object has entered the active UI state.","source":"The framework calls `OnActivateUI` when the object has entered the active UI state."},{"content":"Remarks","pos":[69097,69104]},{"content":"The object has now installed its tool bar and menus.","pos":[69108,69160]},{"pos":[69167,69260],"content":"The default implementation remembers the server's <ph id=\"ph1\">`HWND`</ph> for later <bpt id=\"p1\">**</bpt>GetServerWindow<ept id=\"p1\">**</ept> calls.","source":"The default implementation remembers the server's `HWND` for later **GetServerWindow** calls."},{"pos":[69311,69335],"content":"COleClientItem::OnChange"},{"content":"Called by the framework when the user modifies, saves, or closes the OLE item.","pos":[69339,69417]},{"content":"Parameters","pos":[69515,69525]},{"content":"The reason the server changed this item.","pos":[69540,69580]},{"content":"It can have one of the following values:","pos":[69581,69621]},{"pos":[69643,69681],"content":"The OLE item's appearance has changed."},{"pos":[69701,69729],"content":"The OLE item has been saved."},{"pos":[69750,69779],"content":"The OLE item has been closed."},{"pos":[69807,69858],"content":"The OLE item has changed from one state to another."},{"pos":[69865,70407],"content":"`dwParam`  \nIf `nCode` is `OLE_SAVED` or `OLE_CLOSED`, this parameter is not used. If `nCode` is `OLE_CHANGED`, this parameter specifies the aspect of the OLE item that has changed. For possible values, see the `dwParam` parameter of [COleClientItem::Draw](#coleclientitem__draw). If `nCode` is `OLE_CHANGED_STATE`, this parameter is a **COleClientItem::ItemState** enumerated value and describes the state being entered. It can have one of the following values: `emptyState`, **loadedState**, `openState`, `activeState`, or `activeUIState`.","leadings":[""," "],"nodes":[{"content":"If `nCode` is `OLE_SAVED` or `OLE_CLOSED`, this parameter is not used. If `nCode` is `OLE_CHANGED`, this parameter specifies the aspect of the OLE item that has changed. For possible values, see the `dwParam` parameter of [COleClientItem::Draw](#coleclientitem__draw). If `nCode` is `OLE_CHANGED_STATE`, this parameter is a **COleClientItem::ItemState** enumerated value and describes the state being entered. It can have one of the following values: `emptyState`, **loadedState**, `openState`, `activeState`, or `activeUIState`.","pos":[12,541],"nodes":[{"content":"If <ph id=\"ph1\">`nCode`</ph> is <ph id=\"ph2\">`OLE_SAVED`</ph> or <ph id=\"ph3\">`OLE_CLOSED`</ph>, this parameter is not used.","pos":[0,70],"source":"If `nCode` is `OLE_SAVED` or `OLE_CLOSED`, this parameter is not used."},{"content":"If <ph id=\"ph1\">`nCode`</ph> is <ph id=\"ph2\">`OLE_CHANGED`</ph>, this parameter specifies the aspect of the OLE item that has changed.","pos":[71,169],"source":" If `nCode` is `OLE_CHANGED`, this parameter specifies the aspect of the OLE item that has changed."},{"content":"For possible values, see the <ph id=\"ph1\">`dwParam`</ph> parameter of <bpt id=\"p1\">[</bpt>COleClientItem::Draw<ept id=\"p1\">](#coleclientitem__draw)</ept>.","pos":[170,268],"source":" For possible values, see the `dwParam` parameter of [COleClientItem::Draw](#coleclientitem__draw)."},{"content":"If <ph id=\"ph1\">`nCode`</ph> is <ph id=\"ph2\">`OLE_CHANGED_STATE`</ph>, this parameter is a <bpt id=\"p1\">**</bpt>COleClientItem::ItemState<ept id=\"p1\">**</ept> enumerated value and describes the state being entered.","pos":[269,409],"source":" If `nCode` is `OLE_CHANGED_STATE`, this parameter is a **COleClientItem::ItemState** enumerated value and describes the state being entered."},{"content":"It can have one of the following values: <ph id=\"ph1\">`emptyState`</ph>, <bpt id=\"p1\">**</bpt>loadedState<ept id=\"p1\">**</ept>, <ph id=\"ph2\">`openState`</ph>, <ph id=\"ph3\">`activeState`</ph>, or <ph id=\"ph4\">`activeUIState`</ph>.","pos":[410,529],"source":" It can have one of the following values: `emptyState`, **loadedState**, `openState`, `activeState`, or `activeUIState`."}]}]},{"content":"Remarks","pos":[70417,70424]},{"pos":[70428,70733],"content":"(If the server application is written using the Microsoft Foundation Class Library, this function is called in response to the <ph id=\"ph1\">`Notify`</ph> member functions of <ph id=\"ph2\">`COleServerDoc`</ph> or <ph id=\"ph3\">`COleServerItem`</ph>.) The default implementation marks the container document as modified if <ph id=\"ph4\">`nCode`</ph> is <ph id=\"ph5\">`OLE_CHANGED`</ph> or <ph id=\"ph6\">`OLE_SAVED`</ph>.","source":"(If the server application is written using the Microsoft Foundation Class Library, this function is called in response to the `Notify` member functions of `COleServerDoc` or `COleServerItem`.) The default implementation marks the container document as modified if `nCode` is `OLE_CHANGED` or `OLE_SAVED`."},{"pos":[70740,70934],"content":"For <ph id=\"ph1\">`OLE_CHANGED_STATE`</ph>, the current state returned from <bpt id=\"p1\">[</bpt>GetItemState<ept id=\"p1\">](#coleclientitem__getitemstate)</ept> will still be the old state, meaning the state that was current prior to this state change.","source":"For `OLE_CHANGED_STATE`, the current state returned from [GetItemState](#coleclientitem__getitemstate) will still be the old state, meaning the state that was current prior to this state change."},{"content":"Override this function to respond to changes in the OLE item's state.","pos":[70941,71010]},{"content":"Typically you update the item's appearance by invalidating the area in which the item is displayed.","pos":[71011,71110]},{"content":"Call the base class implementation at the beginning of your override.","pos":[71111,71180]},{"pos":[71243,71279],"content":"COleClientItem::OnChangeItemPosition"},{"content":"Called by the framework to notify the container that the OLE item's extent has changed during in-place activation.","pos":[71283,71397]},{"content":"Parameters","pos":[71479,71489]},{"content":"rectPos","pos":[71494,71501]},{"content":"Indicates the item's position relative to the container application's client area.","pos":[71506,71588]},{"content":"Return Value","pos":[71598,71610]},{"content":"Nonzero if the item's position is successfully changed; otherwise 0.","pos":[71614,71682]},{"content":"Remarks","pos":[71692,71699]},{"content":"The default implementation determines the new visible rectangle of the OLE item and calls <bpt id=\"p1\">[</bpt>SetItemRects<ept id=\"p1\">](#coleclientitem__setitemrects)</ept> with the new values.","pos":[71703,71859],"source":"The default implementation determines the new visible rectangle of the OLE item and calls [SetItemRects](#coleclientitem__setitemrects) with the new values."},{"content":"The default implementation calculates the visible rectangle for the item and passes that information to the server.","pos":[71860,71975]},{"content":"Override this function to apply special rules to the resize/move operation.","pos":[71982,72057]},{"content":"If the application is written in MFC, this call results because the server called <bpt id=\"p1\">[</bpt>COleServerDoc::RequestPositionChange<ept id=\"p1\">](../../mfc/reference/coleserverdoc-class.md#coleserverdoc__requestpositionchange)</ept>.","pos":[72058,72260],"source":" If the application is written in MFC, this call results because the server called [COleServerDoc::RequestPositionChange](../../mfc/reference/coleserverdoc-class.md#coleserverdoc__requestpositionchange)."},{"pos":[72315,72343],"content":"COleClientItem::OnDeactivate"},{"pos":[72347,72530],"content":"Called by the framework when the OLE item transitions from the in-place active state ( <ph id=\"ph1\">`activeState`</ph>) to the loaded state, meaning that it is deactivated after an in-place activation.","source":"Called by the framework when the OLE item transitions from the in-place active state ( `activeState`) to the loaded state, meaning that it is deactivated after an in-place activation."},{"content":"Remarks","pos":[72584,72591]},{"content":"Note that this function is called to indicate that the OLE item is closed, not that its user interface has been removed from the container application.","pos":[72595,72746]},{"content":"When that happens, the <bpt id=\"p1\">[</bpt>OnDeactivateUI<ept id=\"p1\">](#coleclientitem__ondeactivateui)</ept> member function is called.","pos":[72747,72846],"source":" When that happens, the [OnDeactivateUI](#coleclientitem__ondeactivateui) member function is called."},{"content":"The default implementation calls the <bpt id=\"p1\">[</bpt>OnChange<ept id=\"p1\">](#coleclientitem__onchange)</ept> member function with <bpt id=\"p2\">**</bpt>OLE_CHANGEDSTATE<ept id=\"p2\">**</ept> as a parameter.","pos":[72853,72985],"source":"The default implementation calls the [OnChange](#coleclientitem__onchange) member function with **OLE_CHANGEDSTATE** as a parameter."},{"content":"Override this function to perform custom processing when an in-place active item is deactivated.","pos":[72986,73082]},{"content":"For example, if you support the undo command in your container application, you can override this function to discard the undo state, indicating that the last operation performed on the OLE item cannot be undone once the item is deactivated.","pos":[73083,73324]},{"pos":[73386,73421],"content":"COleClientItem::OnDeactivateAndUndo"},{"content":"Called by the framework when the user invokes the undo command after activating the OLE item in place.","pos":[73425,73527]},{"content":"Remarks","pos":[73588,73595]},{"content":"The default implementation calls <bpt id=\"p1\">[</bpt>DeactivateUI<ept id=\"p1\">](#coleclientitem__deactivateui)</ept> to deactivate the server's user interface.","pos":[73599,73720],"source":"The default implementation calls [DeactivateUI](#coleclientitem__deactivateui) to deactivate the server's user interface."},{"content":"Override this function if you are implementing the undo command in your container application.","pos":[73721,73815]},{"content":"In your override, call the base class version of the function and then undo the last command executed in your application.","pos":[73816,73938]},{"pos":[73945,74127],"content":"For more information, see <bpt id=\"p1\">[</bpt>IOleInPlaceSite::DeactivateAndUndo<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms683743)</ept> in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"For more information, see [IOleInPlaceSite::DeactivateAndUndo](http://msdn.microsoft.com/library/windows/desktop/ms683743) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"pos":[74184,74214],"content":"COleClientItem::OnDeactivateUI"},{"content":"Called when the user deactivates an item that was activated in place.","pos":[74218,74287]},{"content":"Parameters","pos":[74357,74367]},{"content":"Specifies whether the editing changes are undoable.","pos":[74386,74437]},{"content":"Remarks","pos":[74447,74454]},{"content":"This function restores the container application's user interface to its original state, hiding any menus and other controls that were created for in-place activation.","pos":[74458,74625]},{"pos":[74632,74847],"content":"If <ph id=\"ph1\">`bUndoable`</ph> is <bpt id=\"p1\">**</bpt>FALSE<ept id=\"p1\">**</ept>, the container should disable the undo command, in effect discarding the undo state of the container, because it indicates that the last operation performed by the server is not undoable.","source":"If `bUndoable` is **FALSE**, the container should disable the undo command, in effect discarding the undo state of the container, because it indicates that the last operation performed by the server is not undoable."},{"pos":[74908,74942],"content":"COleClientItem::OnDiscardUndoState"},{"content":"Called by the framework when the user performs an action that discards the undo state while editing the OLE item.","pos":[74946,75059]},{"content":"Remarks","pos":[75119,75126]},{"content":"The default implementation does nothing.","pos":[75130,75170]},{"content":"Override this function if you are implementing the undo command in your container application.","pos":[75171,75265]},{"content":"In your override, discard the container application's undo state.","pos":[75266,75331]},{"pos":[75338,75578],"content":"If the server was written with the Microsoft Foundation Class Library, the server can cause this function to be called by calling <bpt id=\"p1\">[</bpt>COleServerDoc::DiscardUndoState<ept id=\"p1\">](../../mfc/reference/coleserverdoc-class.md#coleserverdoc__discardundostate)</ept>.","source":"If the server was written with the Microsoft Foundation Class Library, the server can cause this function to be called by calling [COleServerDoc::DiscardUndoState](../../mfc/reference/coleserverdoc-class.md#coleserverdoc__discardundostate)."},{"pos":[75585,75766],"content":"For more information, see <bpt id=\"p1\">[</bpt>IOleInPlaceSite::DiscardUndoState<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms688642)</ept> in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"For more information, see [IOleInPlaceSite::DiscardUndoState](http://msdn.microsoft.com/library/windows/desktop/ms688642) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"pos":[75827,75861],"content":"COleClientItem::OnGetClipboardData"},{"pos":[75865,76125],"content":"Called by the framework to get a <ph id=\"ph1\">`COleDataSource`</ph> object containing all the data that would be placed on the Clipboard by a call to either the <bpt id=\"p1\">[</bpt>CopyToClipboard<ept id=\"p1\">](#coleclientitem__copytoclipboard)</ept> or the <bpt id=\"p2\">[</bpt>DoDragDrop<ept id=\"p2\">](#coleclientitem__dodragdrop)</ept> member function.","source":"Called by the framework to get a `COleDataSource` object containing all the data that would be placed on the Clipboard by a call to either the [CopyToClipboard](#coleclientitem__copytoclipboard) or the [DoDragDrop](#coleclientitem__dodragdrop) member function."},{"content":"Parameters","pos":[76263,76273]},{"content":"Set this to <bpt id=\"p1\">**</bpt>TRUE<ept id=\"p1\">**</ept> if link data should be copied to the Clipboard.","pos":[76295,76363],"source":" Set this to **TRUE** if link data should be copied to the Clipboard."},{"content":"Set this to <bpt id=\"p1\">**</bpt>FALSE<ept id=\"p1\">**</ept> if your server application does not support links.","pos":[76364,76436],"source":" Set this to **FALSE** if your server application does not support links."},{"content":"Pointer to the offset of the mouse cursor from the origin of the object in pixels.","pos":[76457,76539]},{"content":"Pointer to the size of the object in pixels.","pos":[76558,76602]},{"content":"Return Value","pos":[76612,76624]},{"pos":[76628,76742],"content":"A pointer to a <bpt id=\"p1\">[</bpt>COleDataSource<ept id=\"p1\">](../../mfc/reference/coledatasource-class.md)</ept> object containing the Clipboard data.","source":"A pointer to a [COleDataSource](../../mfc/reference/coledatasource-class.md) object containing the Clipboard data."},{"content":"Remarks","pos":[76752,76759]},{"pos":[76763,76867],"content":"The default implementation of this function calls <bpt id=\"p1\">[</bpt>GetClipboardData<ept id=\"p1\">](#coleclientitem__getclipboarddata)</ept>.","source":"The default implementation of this function calls [GetClipboardData](#coleclientitem__getclipboarddata)."},{"pos":[76923,76952],"content":"COleClientItem::OnGetClipRect"},{"pos":[76956,77096],"content":"The framework calls the <ph id=\"ph1\">`OnGetClipRect`</ph> member function to get the clipping-rectangle coordinates of the item that is being edited in place.","source":"The framework calls the `OnGetClipRect` member function to get the clipping-rectangle coordinates of the item that is being edited in place."},{"content":"Parameters","pos":[77167,77177]},{"content":"rClipRect","pos":[77182,77191]},{"content":"Pointer to an object of class <bpt id=\"p1\">[</bpt>CRect<ept id=\"p1\">](../../atl-mfc-shared/reference/crect-class.md)</ept> that will hold the clipping-rectangle coordinates of the item.","pos":[77196,77343],"source":" Pointer to an object of class [CRect](../../atl-mfc-shared/reference/crect-class.md) that will hold the clipping-rectangle coordinates of the item."},{"content":"Remarks","pos":[77353,77360]},{"content":"Coordinates are in pixels relative to the container application window's client area.","pos":[77364,77449]},{"content":"The default implementation simply returns the client rectangle of the view on which the item is in-place active.","pos":[77456,77568]},{"pos":[77628,77661],"content":"COleClientItem::OnGetItemPosition"},{"pos":[77665,77790],"content":"The framework calls the <ph id=\"ph1\">`OnGetItemPosition`</ph> member function to get the coordinates of the item that is being edited in place.","source":"The framework calls the `OnGetItemPosition` member function to get the coordinates of the item that is being edited in place."},{"content":"Parameters","pos":[77865,77875]},{"content":"Reference to the <bpt id=\"p1\">[</bpt>CRect<ept id=\"p1\">](../../atl-mfc-shared/reference/crect-class.md)</ept> object that will contain the item's position coordinates.","pos":[77894,78023],"source":" Reference to the [CRect](../../atl-mfc-shared/reference/crect-class.md) object that will contain the item's position coordinates."},{"content":"Remarks","pos":[78033,78040]},{"content":"Coordinates are in pixels relative to the container application window's client area.","pos":[78044,78129]},{"content":"The default implementation of this function does nothing.","pos":[78136,78193]},{"content":"Applications that support in-place editing require its implementation.","pos":[78194,78264]},{"pos":[78325,78359],"content":"COleClientItem::OnGetWindowContext"},{"content":"Called by the framework when an item is activated in place.","pos":[78363,78422]},{"content":"Parameters","pos":[78581,78591]},{"content":"Pointer to a pointer to the main frame window.","pos":[78612,78658]},{"content":"Pointer to a pointer to the document frame window.","pos":[78681,78731]},{"content":"Pointer to an <bpt id=\"p1\">[</bpt>OLEINPLACEFRAMEINFO<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms693737)</ept> structure that will receive frame window information.","pos":[78755,78904],"source":" Pointer to an [OLEINPLACEFRAMEINFO](http://msdn.microsoft.com/library/windows/desktop/ms693737) structure that will receive frame window information."},{"content":"Return Value","pos":[78914,78926]},{"content":"Nonzero if successful; otherwise 0.","pos":[78930,78965]},{"content":"Remarks","pos":[78975,78982]},{"content":"This function is used to retrieve information about the OLE item's parent window.","pos":[78986,79067]},{"content":"If the container is an MDI application, the default implementation returns a pointer to the <bpt id=\"p1\">[</bpt>CMDIFrameWnd<ept id=\"p1\">](../../mfc/reference/cmdiframewnd-class.md)</ept> object in <ph id=\"ph1\">`ppMainFrame`</ph> and a pointer to the active <bpt id=\"p2\">[</bpt>CMDIChildWnd<ept id=\"p2\">](../../mfc/reference/cmdichildwnd-class.md)</ept> object in <ph id=\"ph2\">`ppDocFrame`</ph>.","pos":[79074,79357],"source":"If the container is an MDI application, the default implementation returns a pointer to the [CMDIFrameWnd](../../mfc/reference/cmdiframewnd-class.md) object in `ppMainFrame` and a pointer to the active [CMDIChildWnd](../../mfc/reference/cmdichildwnd-class.md) object in `ppDocFrame`."},{"content":"If the container is an SDI application, the default implementation returns a pointer to the <bpt id=\"p1\">[</bpt>CFrameWnd<ept id=\"p1\">](../../mfc/reference/cframewnd-class.md)</ept> object in <ph id=\"ph1\">`ppMainFrame`</ph> and returns <bpt id=\"p2\">**</bpt>NULL<ept id=\"p2\">**</ept> in <ph id=\"ph2\">`ppDocFrame`</ph>.","pos":[79358,79563],"source":" If the container is an SDI application, the default implementation returns a pointer to the [CFrameWnd](../../mfc/reference/cframewnd-class.md) object in `ppMainFrame` and returns **NULL** in `ppDocFrame`."},{"content":"The default implementation also fills in the members of <ph id=\"ph1\">`lpFrameInfo`</ph>.","pos":[79564,79634],"source":" The default implementation also fills in the members of `lpFrameInfo`."},{"content":"Override this function only if the default implementation does not suit your application; for example, if your application has a user-interface paradigm that differs from SDI or MDI.","pos":[79641,79823]},{"content":"This is an advanced overridable.","pos":[79824,79856]},{"pos":[79863,80144],"content":"For more information, see <bpt id=\"p1\">[</bpt>IOleInPlaceSite::GetWindowContext<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms694366)</ept> and the <bpt id=\"p2\">[</bpt>OLEINPLACEFRAMEINFO<ept id=\"p2\">](http://msdn.microsoft.com/library/windows/desktop/ms693737)</ept> structure in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"For more information, see [IOleInPlaceSite::GetWindowContext](http://msdn.microsoft.com/library/windows/desktop/ms694366) and the [OLEINPLACEFRAMEINFO](http://msdn.microsoft.com/library/windows/desktop/ms693737) structure in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"pos":[80200,80229],"content":"COleClientItem::OnInsertMenus"},{"content":"Called by the framework during in-place activation to insert the container application's menus into an empty menu.","pos":[80233,80347]},{"content":"Parameters","pos":[80466,80476]},{"content":"Points to an empty menu.","pos":[80497,80521]},{"content":"Points to an array of six <bpt id=\"p1\">**</bpt>LONG<ept id=\"p1\">**</ept> values indicating how many menus are in each of the following menu groups: File, Edit, Container, Object, Window, Help.","pos":[80546,80700],"source":" Points to an array of six **LONG** values indicating how many menus are in each of the following menu groups: File, Edit, Container, Object, Window, Help."},{"content":"The container application is responsible for the File, Container, and Window menu groups, corresponding to elements 0, 2, and 4 of this array.","pos":[80701,80843]},{"content":"Remarks","pos":[80853,80860]},{"content":"This menu is then passed to the server, which inserts its own menus, creating a composite menu.","pos":[80864,80959]},{"content":"This function can be called repeatedly to build several composite menus.","pos":[80960,81032]},{"content":"The default implementation inserts into <ph id=\"ph1\">`pMenuShared`</ph> the in-place container menus; that is, the File, Container, and Window menu groups.","pos":[81039,81176],"source":"The default implementation inserts into `pMenuShared` the in-place container menus; that is, the File, Container, and Window menu groups."},{"content":"<bpt id=\"p1\">[</bpt>CDocTemplate::SetContainerInfo<ept id=\"p1\">](../../mfc/reference/cdoctemplate-class.md#cdoctemplate__setcontainerinfo)</ept> is used to set this menu resource.","pos":[81177,81318],"source":"[CDocTemplate::SetContainerInfo](../../mfc/reference/cdoctemplate-class.md#cdoctemplate__setcontainerinfo) is used to set this menu resource."},{"content":"The default implementation also assigns the appropriate values to elements 0, 2, and 4 in <ph id=\"ph1\">`lpMenuWidths`</ph>, depending on the menu resource.","pos":[81319,81456],"source":" The default implementation also assigns the appropriate values to elements 0, 2, and 4 in `lpMenuWidths`, depending on the menu resource."},{"content":"Override this function if the default implementation is not appropriate for your application; for example, if your application does not use document templates for associating resources with document types.","pos":[81457,81662]},{"content":"If you override this function, you should also override <bpt id=\"p1\">[</bpt>OnSetMenu<ept id=\"p1\">](#coleclientitem__onsetmenu)</ept> and <bpt id=\"p2\">[</bpt>OnRemoveMenus<ept id=\"p2\">](#coleclientitem__onremovemenus)</ept>.","pos":[81663,81811],"source":" If you override this function, you should also override [OnSetMenu](#coleclientitem__onsetmenu) and [OnRemoveMenus](#coleclientitem__onremovemenus)."},{"content":"This is an advanced overridable.","pos":[81812,81844]},{"pos":[81851,82028],"content":"For more information, see <bpt id=\"p1\">[</bpt>IOleInPlaceFrame::InsertMenus<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms683987)</ept> in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"For more information, see [IOleInPlaceFrame::InsertMenus](http://msdn.microsoft.com/library/windows/desktop/ms683987) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"pos":[82084,82113],"content":"COleClientItem::OnRemoveMenus"},{"content":"Called by the framework to remove the container's menus from the specified composite menu when in-place activation ends.","pos":[82117,82237]},{"content":"Parameters","pos":[82310,82320]},{"content":"Points to the composite menu constructed by calls to the <bpt id=\"p1\">[</bpt>OnInsertMenus<ept id=\"p1\">](#coleclientitem__oninsertmenus)</ept> member function.","pos":[82341,82462],"source":" Points to the composite menu constructed by calls to the [OnInsertMenus](#coleclientitem__oninsertmenus) member function."},{"content":"Remarks","pos":[82472,82479]},{"content":"The default implementation removes from <ph id=\"ph1\">`pMenuShared`</ph> the in-place container menus, that is, the File, Container, and Window menu groups.","pos":[82483,82620],"source":"The default implementation removes from `pMenuShared` the in-place container menus, that is, the File, Container, and Window menu groups."},{"content":"Override this function if the default implementation is not appropriate for your application; for example, if your application does not use document templates for associating resources with document types.","pos":[82621,82826]},{"content":"If you override this function, you should probably override <bpt id=\"p1\">[</bpt>OnInsertMenus<ept id=\"p1\">](#coleclientitem__oninsertmenus)</ept> and <bpt id=\"p2\">[</bpt>OnSetMenu<ept id=\"p2\">](#coleclientitem__onsetmenu)</ept> as well.","pos":[82827,82987],"source":" If you override this function, you should probably override [OnInsertMenus](#coleclientitem__oninsertmenus) and [OnSetMenu](#coleclientitem__onsetmenu) as well."},{"content":"This is an advanced overridable.","pos":[82988,83020]},{"content":"The submenus on <ph id=\"ph1\">`pMenuShared`</ph> may be shared by more than one composite menu if the server has repeatedly called <ph id=\"ph2\">`OnInsertMenus`</ph>.","pos":[83027,83155],"source":"The submenus on `pMenuShared` may be shared by more than one composite menu if the server has repeatedly called `OnInsertMenus`."},{"content":"Therefore you should not delete any submenus in your override of <ph id=\"ph1\">`OnRemoveMenus`</ph>; you should only detach them.","pos":[83156,83266],"source":" Therefore you should not delete any submenus in your override of `OnRemoveMenus`; you should only detach them."},{"pos":[83273,83450],"content":"For more information, see <bpt id=\"p1\">[</bpt>IOleInPlaceFrame::RemoveMenus<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms688685)</ept> in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"For more information, see [IOleInPlaceFrame::RemoveMenus](http://msdn.microsoft.com/library/windows/desktop/ms688685) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"pos":[83503,83529],"content":"COleClientItem::OnScrollBy"},{"content":"Called by the framework to scroll the OLE item in response to requests from the server.","pos":[83533,83620]},{"content":"Parameters","pos":[83688,83698]},{"content":"sizeExtent","pos":[83703,83713]},{"content":"Specifies the distances, in pixels, to scroll in the x and y directions.","pos":[83718,83790]},{"content":"Return Value","pos":[83800,83812]},{"content":"Nonzero if the item was scrolled; 0 if the item could not be scrolled.","pos":[83816,83886]},{"content":"Remarks","pos":[83896,83903]},{"content":"For example, if the OLE item is partially visible and the user moves outside the visible region while performing in-place editing, this function is called to keep the cursor visible.","pos":[83907,84089]},{"content":"The default implementation does nothing.","pos":[84090,84130]},{"content":"Override this function to scroll the item by the specified amount.","pos":[84131,84197]},{"content":"Note that as a result of scrolling, the visible portion of the OLE item can change.","pos":[84198,84281]},{"content":"Call <bpt id=\"p1\">[</bpt>SetItemRects<ept id=\"p1\">](#coleclientitem__setitemrects)</ept> to update the item's visible rectangle.","pos":[84282,84372],"source":" Call [SetItemRects](#coleclientitem__setitemrects) to update the item's visible rectangle."},{"pos":[84379,84550],"content":"For more information, see <bpt id=\"p1\">[</bpt>IOleInPlaceSite::Scroll<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms690291)</ept> in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"For more information, see [IOleInPlaceSite::Scroll](http://msdn.microsoft.com/library/windows/desktop/ms690291) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"pos":[84602,84627],"content":"COleClientItem::OnSetMenu"},{"pos":[84631,84821],"content":"Called by the framework two times when in-place activation begins and ends; the first time to install the composite menu and the second time (with <ph id=\"ph1\">`holemenu`</ph> equal to <bpt id=\"p1\">**</bpt>NULL<ept id=\"p1\">**</ept>) to remove it.","source":"Called by the framework two times when in-place activation begins and ends; the first time to install the composite menu and the second time (with `holemenu` equal to **NULL**) to remove it."},{"content":"Parameters","pos":[84949,84959]},{"content":"Pointer to the composite menu constructed by calls to the <bpt id=\"p1\">[</bpt>OnInsertMenus<ept id=\"p1\">](#coleclientitem__oninsertmenus)</ept> member function and the <ph id=\"ph1\">`InsertMenu`</ph> function.","pos":[84980,85132],"source":" Pointer to the composite menu constructed by calls to the [OnInsertMenus](#coleclientitem__oninsertmenus) member function and the `InsertMenu` function."},{"content":"Handle to the menu descriptor returned by the <bpt id=\"p1\">**</bpt>OleCreateMenuDescriptor<ept id=\"p1\">**</ept> function, or <bpt id=\"p2\">**</bpt>NULL<ept id=\"p2\">**</ept> if the dispatching code is to be removed.","pos":[85153,85290],"source":" Handle to the menu descriptor returned by the **OleCreateMenuDescriptor** function, or **NULL** if the dispatching code is to be removed."},{"content":"hwndActiveObject","pos":[85298,85314]},{"content":"Handle to the editing window for the OLE item.","pos":[85319,85365]},{"content":"This is the window that will receive editing commands from OLE.","pos":[85366,85429]},{"content":"Remarks","pos":[85439,85446]},{"content":"The default implementation installs or removes the composite menu and then calls the <bpt id=\"p1\">[</bpt>OleSetMenuDescriptor<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms692831)</ept> function to install or remove the dispatching code.","pos":[85450,85669],"source":"The default implementation installs or removes the composite menu and then calls the [OleSetMenuDescriptor](http://msdn.microsoft.com/library/windows/desktop/ms692831) function to install or remove the dispatching code."},{"content":"Override this function if the default implementation is not appropriate for your application.","pos":[85670,85763]},{"content":"If you override this function, you should probably override <bpt id=\"p1\">[</bpt>OnInsertMenus<ept id=\"p1\">](#coleclientitem__oninsertmenus)</ept> and <bpt id=\"p2\">[</bpt>OnRemoveMenus<ept id=\"p2\">](#coleclientitem__onremovemenus)</ept> as well.","pos":[85764,85932],"source":" If you override this function, you should probably override [OnInsertMenus](#coleclientitem__oninsertmenus) and [OnRemoveMenus](#coleclientitem__onremovemenus) as well."},{"content":"This is an advanced overridable.","pos":[85933,85965]},{"pos":[85972,86320],"content":"For more information, see <bpt id=\"p1\">[</bpt>OleCreateMenuDescriptor<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms691415)</ept>, <bpt id=\"p2\">[</bpt>OleSetMenuDescriptor<ept id=\"p2\">](http://msdn.microsoft.com/library/windows/desktop/ms692831)</ept>, and <bpt id=\"p3\">[</bpt>IOleInPlaceFrame::SetMenu<ept id=\"p3\">](http://msdn.microsoft.com/library/windows/desktop/ms693713)</ept> in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"For more information, see [OleCreateMenuDescriptor](http://msdn.microsoft.com/library/windows/desktop/ms691415), [OleSetMenuDescriptor](http://msdn.microsoft.com/library/windows/desktop/ms692831), and [IOleInPlaceFrame::SetMenu](http://msdn.microsoft.com/library/windows/desktop/ms693713) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"pos":[86380,86413],"content":"COleClientItem::OnShowControlBars"},{"content":"Called by the framework to show and hide the container application's control bars.","pos":[86417,86499]},{"content":"Parameters","pos":[86601,86611]},{"content":"Pointer to the container application's frame window.","pos":[86630,86682]},{"content":"This can be either a main frame window or an MDI child window.","pos":[86683,86745]},{"content":"Specifies whether control bars are to be shown or hidden.","pos":[86763,86820]},{"content":"Return Value","pos":[86830,86842]},{"pos":[86846,87016],"content":"Nonzero if the function call causes a change in the control bars' state; 0 if the call causes no change, or if <ph id=\"ph1\">`pFrameWnd`</ph> does not point to the container's frame window.","source":"Nonzero if the function call causes a change in the control bars' state; 0 if the call causes no change, or if `pFrameWnd` does not point to the container's frame window."},{"content":"Remarks","pos":[87026,87033]},{"content":"This function returns 0 if the control bars are already in the state specified by <bpt id=\"p1\">*</bpt>bShow.<ept id=\"p1\">*</ept>","pos":[87037,87127],"source":"This function returns 0 if the control bars are already in the state specified by *bShow.*"},{"content":"This would occur, for example, if the control bars are hidden and <ph id=\"ph1\">`bShow`</ph> is <bpt id=\"p1\">**</bpt>FALSE<ept id=\"p1\">**</ept>.","pos":[87128,87215],"source":" This would occur, for example, if the control bars are hidden and `bShow` is **FALSE**."},{"content":"The default implementation removes the toolbar from the top-level frame window.","pos":[87222,87301]},{"pos":[87354,87380],"content":"COleClientItem::OnShowItem"},{"content":"Called by the framework to display the OLE item, making it totally visible during editing.","pos":[87384,87474]},{"content":"Remarks","pos":[87526,87533]},{"content":"It is used when your container application supports links to embedded items (that is, if you have derived your document class from <bpt id=\"p1\">[</bpt>COleLinkingDoc<ept id=\"p1\">](../../mfc/reference/colelinkingdoc-class.md)</ept>).","pos":[87537,87731],"source":"It is used when your container application supports links to embedded items (that is, if you have derived your document class from [COleLinkingDoc](../../mfc/reference/colelinkingdoc-class.md))."},{"content":"This function is called during in-place activation or when the OLE item is a link source and the user wants to edit it.","pos":[87732,87851]},{"content":"The default implementation activates the first view on the container document.","pos":[87852,87930]},{"content":"Override this function to scroll the document so that the OLE item is visible.","pos":[87931,88009]},{"pos":[88070,88104],"content":"COleClientItem::OnUpdateFrameTitle"},{"content":"Called by the framework during in-place activation to update the frame window's title bar.","pos":[88108,88198]},{"content":"Return Value","pos":[88258,88270]},{"content":"Nonzero if this function successfully updated the frame title, otherwise zero.","pos":[88274,88352]},{"content":"Remarks","pos":[88362,88369]},{"content":"The default implementation does not change the frame window title.","pos":[88373,88439]},{"content":"Override this function if you want a different frame title for your application, for example \" <bpt id=\"p1\">*</bpt>server app<ept id=\"p1\">*</ept><ph id=\"ph1\"> - </ph><bpt id=\"p2\">*</bpt>item<ept id=\"p2\">*</ept> in <bpt id=\"p3\">*</bpt>docname<ept id=\"p3\">*</ept>\" (as in, \"Microsoft Excel - spreadsheet in REPORT.DOC\").","pos":[88440,88626],"source":" Override this function if you want a different frame title for your application, for example \" *server app* - *item* in *docname*\" (as in, \"Microsoft Excel - spreadsheet in REPORT.DOC\")."},{"content":"This is an advanced overridable.","pos":[88627,88659]},{"pos":[88719,88752],"content":"COleClientItem::ReactivateAndUndo"},{"content":"Call this function to reactivate the OLE item and undo the last operation performed by the user during in-place editing.","pos":[88756,88876]},{"content":"Return Value","pos":[88927,88939]},{"content":"Nonzero if successful; otherwise 0.","pos":[88943,88978]},{"content":"Remarks","pos":[88988,88995]},{"content":"If your container application supports the undo command, call this function if the user chooses the undo command immediately after deactivating the OLE item.","pos":[88999,89156]},{"pos":[89163,89403],"content":"If the server application is written with the Microsoft Foundation Class Libraries, this function causes the server to call <bpt id=\"p1\">[</bpt>COleServerDoc::OnReactivateAndUndo<ept id=\"p1\">](../../mfc/reference/coleserverdoc-class.md#coleserverdoc__onreactivateandundo)</ept>.","source":"If the server application is written with the Microsoft Foundation Class Libraries, this function causes the server to call [COleServerDoc::OnReactivateAndUndo](../../mfc/reference/coleserverdoc-class.md#coleserverdoc__onreactivateandundo)."},{"pos":[89410,89594],"content":"For more information, see <bpt id=\"p1\">[</bpt>IOleInPlaceObject::ReactivateAndUndo<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms691372)</ept> in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"For more information, see [IOleInPlaceObject::ReactivateAndUndo](http://msdn.microsoft.com/library/windows/desktop/ms691372) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"pos":[89644,89667],"content":"COleClientItem::Release"},{"content":"Call this function to clean up resources used by the OLE item.","pos":[89671,89733]},{"content":"Parameters","pos":[89822,89832]},{"content":"Flag specifying under what circumstances the OLE item is saved when it returns to the loaded state.","pos":[89855,89954]},{"content":"For a list of possible values, see <bpt id=\"p1\">[</bpt>COleClientItem::Close<ept id=\"p1\">](#coleclientitem__close)</ept>.","pos":[89955,90038],"source":" For a list of possible values, see [COleClientItem::Close](#coleclientitem__close)."},{"content":"Remarks","pos":[90048,90055]},{"pos":[90059,90116],"content":"<bpt id=\"p1\">**</bpt>Release<ept id=\"p1\">**</ept> is called by the <ph id=\"ph1\">`COleClientItem`</ph> destructor.","source":"**Release** is called by the `COleClientItem` destructor."},{"pos":[90123,90288],"content":"For more information, see <bpt id=\"p1\">[</bpt>IUnknown::Release<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms682317)</ept> in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"For more information, see [IUnknown::Release](http://msdn.microsoft.com/library/windows/desktop/ms682317) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"pos":[90337,90359],"content":"COleClientItem::Reload"},{"content":"Closes and reloads the item.","pos":[90363,90391]},{"content":"Return Value","pos":[90431,90443]},{"content":"Nonzero if successful; otherwise 0.","pos":[90447,90482]},{"content":"Remarks","pos":[90492,90499]},{"pos":[90503,90638],"content":"Call the <ph id=\"ph1\">`Reload`</ph> function after activating the item as an item of another type by a call to <bpt id=\"p1\">[</bpt>ActivateAs<ept id=\"p1\">](#coleclientitem__activateas)</ept>.","source":"Call the `Reload` function after activating the item as an item of another type by a call to [ActivateAs](#coleclientitem__activateas)."},{"pos":[90684,90703],"content":"COleClientItem::Run"},{"content":"Runs the application associated with this item.","pos":[90707,90754]},{"content":"Remarks","pos":[90791,90798]},{"content":"Call the <bpt id=\"p1\">**</bpt>Run<ept id=\"p1\">**</ept> member function to launch the server application before activating the item.","pos":[90802,90895],"source":"Call the **Run** member function to launch the server application before activating the item."},{"content":"This is done automatically by <bpt id=\"p1\">[</bpt>Activate<ept id=\"p1\">](#coleclientitem__activate)</ept> and <bpt id=\"p2\">[</bpt>DoVerb<ept id=\"p2\">](#coleclientitem__doverb)</ept>, so it is usually not necessary to call this function.","pos":[90896,91056],"source":" This is done automatically by [Activate](#coleclientitem__activate) and [DoVerb](#coleclientitem__doverb), so it is usually not necessary to call this function."},{"content":"Call this function if it is necessary to run the server in order to set an item attribute, such as <bpt id=\"p1\">[</bpt>SetExtent<ept id=\"p1\">](#coleclientitem__setextent)</ept>, before executing <bpt id=\"p2\">[</bpt>DoVerb<ept id=\"p2\">](#coleclientitem__doverb)</ept>.","pos":[91057,91248],"source":" Call this function if it is necessary to run the server in order to set an item attribute, such as [SetExtent](#coleclientitem__setextent), before executing [DoVerb](#coleclientitem__doverb)."},{"pos":[91304,91333],"content":"COleClientItem::SetDrawAspect"},{"pos":[91337,91420],"content":"Call the <ph id=\"ph1\">`SetDrawAspect`</ph> member function to set the \"aspect,\" or view, of the item.","source":"Call the `SetDrawAspect` member function to set the \"aspect,\" or view, of the item."},{"content":"Parameters","pos":[91495,91505]},{"content":"A value from the <ph id=\"ph1\">`DVASPECT`</ph> enumeration.","pos":[91526,91566],"source":" A value from the `DVASPECT` enumeration."},{"content":"This parameter can have one of the following values:","pos":[91567,91619]},{"pos":[91646,91748],"content":"Item is represented in such a way that it can be displayed as an embedded object inside its container."},{"pos":[91777,91873],"content":"Item is rendered in a \"thumbnail\" representation so that it can be displayed in a browsing tool."},{"pos":[91897,91928],"content":"Item is represented by an icon."},{"pos":[91956,92041],"content":"Item is represented as if it were printed using the Print command from the File menu."},{"content":"Remarks","pos":[92051,92058]},{"pos":[92062,92221],"content":"The aspect specifies how the item is to be rendered by <bpt id=\"p1\">[</bpt>Draw<ept id=\"p1\">](#coleclientitem__draw)</ept> when the default value for that function's <ph id=\"ph1\">`nDrawAspect`</ph> argument is used.","source":"The aspect specifies how the item is to be rendered by [Draw](#coleclientitem__draw) when the default value for that function's `nDrawAspect` argument is used."},{"content":"This function is called automatically by the Change Icon (and other dialogs that call the Change Icon dialog directly) to enable the iconic display aspect when requested by the user.","pos":[92228,92410]},{"pos":[92462,92487],"content":"COleClientItem::SetExtent"},{"content":"Call this function to specify how much space is available to the OLE item.","pos":[92491,92565]},{"content":"Parameters","pos":[92677,92687]},{"content":"A <bpt id=\"p1\">[</bpt>CSize<ept id=\"p1\">](../../atl-mfc-shared/reference/csize-class.md)</ept> object that contains the size information.","pos":[92701,92800],"source":" A [CSize](../../atl-mfc-shared/reference/csize-class.md) object that contains the size information."},{"content":"Specifies the aspect of the OLE item whose bounds are to be set.","pos":[92824,92888]},{"content":"For possible values, see <bpt id=\"p1\">[</bpt>SetDrawAspect<ept id=\"p1\">](#coleclientitem__setdrawaspect)</ept>.","pos":[92889,92962],"source":" For possible values, see [SetDrawAspect](#coleclientitem__setdrawaspect)."},{"content":"Remarks","pos":[92972,92979]},{"content":"If the server application was written using the Microsoft Foundation Class Library, this causes the <bpt id=\"p1\">[</bpt>OnSetExtent<ept id=\"p1\">](../../mfc/reference/coleserveritem-class.md#coleserveritem__onsetextent)</ept> member function of the corresponding <ph id=\"ph1\">`COleServerItem`</ph> object to be called.","pos":[92983,93244],"source":"If the server application was written using the Microsoft Foundation Class Library, this causes the [OnSetExtent](../../mfc/reference/coleserveritem-class.md#coleserveritem__onsetextent) member function of the corresponding `COleServerItem` object to be called."},{"content":"The OLE item can then adjust its display accordingly.","pos":[93245,93298]},{"content":"The dimensions must be in <ph id=\"ph1\">`MM_HIMETRIC`</ph> units.","pos":[93299,93345],"source":" The dimensions must be in `MM_HIMETRIC` units."},{"content":"Call this function when the user resizes the OLE item or if you support some form of layout negotiation.","pos":[93346,93450]},{"pos":[93457,93626],"content":"For more information, see <bpt id=\"p1\">[</bpt>IOleObject::SetExtent<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms694330)</ept> in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"For more information, see [IOleObject::SetExtent](http://msdn.microsoft.com/library/windows/desktop/ms694330) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"pos":[93681,93709],"content":"COleClientItem::SetHostNames"},{"content":"Call this function to specify the name of the container application and the container's name for an embedded OLE item.","pos":[93713,93831]},{"content":"Parameters","pos":[93925,93935]},{"content":"Pointer to the user-visible name of the container application.","pos":[93953,94015]},{"content":"Pointer to an identifying string of the container that contains the OLE item.","pos":[94039,94116]},{"content":"Remarks","pos":[94126,94133]},{"content":"If the server application was written using the Microsoft Foundation Class Library, this function calls the <bpt id=\"p1\">[</bpt>OnSetHostNames<ept id=\"p1\">](../../mfc/reference/coleserverdoc-class.md#coleserverdoc__onsethostnames)</ept> member function of the <ph id=\"ph1\">`COleServerDoc`</ph> document that contains the OLE item.","pos":[94137,94411],"source":"If the server application was written using the Microsoft Foundation Class Library, this function calls the [OnSetHostNames](../../mfc/reference/coleserverdoc-class.md#coleserverdoc__onsethostnames) member function of the `COleServerDoc` document that contains the OLE item."},{"content":"This information is used in window titles when the OLE item is being edited.","pos":[94412,94488]},{"content":"Each time a container document is loaded, the framework calls this function for all the OLE items in the document.","pos":[94489,94603]},{"content":"is applicable only to embedded items.","pos":[94619,94656]},{"content":"It is not necessary to call this function each time an embedded OLE item is activated for editing.","pos":[94657,94755]},{"content":"This is also called automatically with the application name and document name when an object is loaded or when a file is saved under a different name.","pos":[94762,94912]},{"content":"Accordingly, it is not usually necessary to call this function directly.","pos":[94913,94985]},{"pos":[94992,95164],"content":"For more information, see <bpt id=\"p1\">[</bpt>IOleObject::SetHostNames<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms680642)</ept> in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"For more information, see [IOleObject::SetHostNames](http://msdn.microsoft.com/library/windows/desktop/ms680642) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"pos":[95224,95257],"content":"COleClientItem::SetIconicMetafile"},{"content":"Caches the metafile used for drawing the item's icon.","pos":[95261,95314]},{"content":"Parameters","pos":[95382,95392]},{"content":"A handle to the metafile used for drawing the item's icon.","pos":[95411,95469]},{"content":"Return Value","pos":[95479,95491]},{"content":"Nonzero if successful; otherwise 0.","pos":[95495,95530]},{"content":"Remarks","pos":[95540,95547]},{"pos":[95551,95636],"content":"Use <bpt id=\"p1\">[</bpt>GetIconicMetafile<ept id=\"p1\">](#coleclientitem__geticonicmetafile)</ept> to retrieve the metafile.","source":"Use [GetIconicMetafile](#coleclientitem__geticonicmetafile) to retrieve the metafile."},{"pos":[95643,95745],"content":"The <ph id=\"ph1\">`hMetaPict`</ph> parameter is copied into the item; therefore, <ph id=\"ph2\">`hMetaPict`</ph> must be freed by the caller.","source":"The `hMetaPict` parameter is copied into the item; therefore, `hMetaPict` must be freed by the caller."},{"pos":[95800,95828],"content":"COleClientItem::SetItemRects"},{"content":"Call this function to set the bounding rectangle or the visible rectangle of the OLE item.","pos":[95832,95922]},{"content":"Parameters","pos":[96030,96040]},{"content":"lprcPosRect","pos":[96045,96056]},{"content":"Pointer to the rectangle containing the bounds of the OLE item relative to its parent window, in client coordinates.","pos":[96061,96177]},{"content":"lprcClipRect","pos":[96185,96197]},{"content":"Pointer to the rectangle containing the bounds of the visible portion of the OLE item relative to its parent window, in client coordinates.","pos":[96202,96341]},{"content":"Return Value","pos":[96351,96363]},{"content":"Nonzero if successful; otherwise, 0.","pos":[96367,96403]},{"content":"Remarks","pos":[96413,96420]},{"content":"This function is called by the default implementation of the <bpt id=\"p1\">[</bpt>OnChangeItemPosition<ept id=\"p1\">](#coleclientitem__onchangeitemposition)</ept> member function.","pos":[96424,96563],"source":"This function is called by the default implementation of the [OnChangeItemPosition](#coleclientitem__onchangeitemposition) member function."},{"content":"You should call this function whenever the position or visible portion of the OLE item changes.","pos":[96564,96659]},{"content":"Usually this means that you call it from your view's <bpt id=\"p1\">[</bpt>OnSize<ept id=\"p1\">](../../mfc/reference/cwnd-class.md#cwnd__onsize)</ept> and <bpt id=\"p2\">[</bpt>OnScrollBy<ept id=\"p2\">](../../mfc/reference/cview-class.md#cview__onscrollby)</ept> member functions.","pos":[96660,96858],"source":" Usually this means that you call it from your view's [OnSize](../../mfc/reference/cwnd-class.md#cwnd__onsize) and [OnScrollBy](../../mfc/reference/cview-class.md#cview__onscrollby) member functions."},{"pos":[96865,97046],"content":"For more information, see <bpt id=\"p1\">[</bpt>IOleInPlaceObject::SetObjectRects<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms683767)</ept> in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"For more information, see [IOleInPlaceObject::SetObjectRects](http://msdn.microsoft.com/library/windows/desktop/ms683767) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"pos":[97109,97145],"content":"COleClientItem::SetLinkUpdateOptions"},{"content":"Call this function to set the link-update option for the presentation of the specified linked item.","pos":[97149,97248]},{"content":"Parameters","pos":[97323,97333]},{"content":"dwUpdateOpt","pos":[97338,97349]},{"content":"The value of the link-update option for this item.","pos":[97354,97404]},{"content":"This value must be one of the following:","pos":[97405,97445]},{"content":"Update the linked item whenever possible.","pos":[97472,97513]},{"content":"This option supports the Automatic link-update radio button in the Links dialog box.","pos":[97514,97598]},{"content":"Update the linked item only on request from the container application (when the <bpt id=\"p1\">[</bpt>UpdateLink<ept id=\"p1\">](#coleclientitem__updatelink)</ept> member function is called).","pos":[97625,97774],"source":" Update the linked item only on request from the container application (when the [UpdateLink](#coleclientitem__updatelink) member function is called)."},{"content":"This option supports the Manual link-update radio button in the Links dialog box.","pos":[97775,97856]},{"content":"Remarks","pos":[97866,97873]},{"content":"Typically, you should not change the update options chosen by the user in the Links dialog box.","pos":[97877,97972]},{"pos":[97979,98153],"content":"For more information, see <bpt id=\"p1\">[</bpt>IOleLink::SetUpdateOptions<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms680120)</ept> in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"For more information, see [IOleLink::SetUpdateOptions](http://msdn.microsoft.com/library/windows/desktop/ms680120) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"pos":[98210,98240],"content":"COleClientItem::SetPrintDevice"},{"content":"Call this function to change the print-target device for this item.","pos":[98244,98311]},{"content":"Parameters","pos":[98429,98439]},{"content":"Pointer to a <bpt id=\"p1\">[</bpt>DVTARGETDEVICE<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms686613)</ept> data structure, which contains information about the new print-target device.","pos":[98452,98619],"source":" Pointer to a [DVTARGETDEVICE](http://msdn.microsoft.com/library/windows/desktop/ms686613) data structure, which contains information about the new print-target device."},{"content":"Can be <bpt id=\"p1\">**</bpt>NULL<ept id=\"p1\">**</ept>.","pos":[98620,98636],"source":" Can be **NULL**."},{"content":"Pointer to a <bpt id=\"p1\">[</bpt>PRINTDLG<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms646940)</ept> data structure, which contains information about the new print-target device.","pos":[98652,98813],"source":" Pointer to a [PRINTDLG](http://msdn.microsoft.com/library/windows/desktop/ms646940) data structure, which contains information about the new print-target device."},{"content":"Can be <bpt id=\"p1\">**</bpt>NULL<ept id=\"p1\">**</ept>.","pos":[98814,98830],"source":" Can be **NULL**."},{"content":"Return Value","pos":[98840,98852]},{"content":"Nonzero if the function was successful; otherwise 0.","pos":[98856,98908]},{"content":"Remarks","pos":[98918,98925]},{"content":"This function updates the print-target device for the item but does not refresh the presentation cache.","pos":[98929,99032]},{"content":"To update the presentation cache for an item, call <bpt id=\"p1\">[</bpt>UpdateLink<ept id=\"p1\">](#coleclientitem__updatelink)</ept>.","pos":[99033,99126],"source":" To update the presentation cache for an item, call [UpdateLink](#coleclientitem__updatelink)."},{"content":"The arguments to this function contain information that the OLE system uses to identify the target device.","pos":[99133,99239]},{"content":"The <bpt id=\"p1\">**</bpt>PRINTDLG<ept id=\"p1\">**</ept> structure contains information that Windows uses to initialize the common Print dialog box.","pos":[99240,99348],"source":" The **PRINTDLG** structure contains information that Windows uses to initialize the common Print dialog box."},{"content":"After the user closes the dialog box, Windows returns information about the user's selections in this structure.","pos":[99349,99461]},{"content":"The <ph id=\"ph1\">`m_pd`</ph> member of a <bpt id=\"p1\">[</bpt>CPrintDialog<ept id=\"p1\">](../../mfc/reference/cprintdialog-class.md)</ept> object is a <bpt id=\"p2\">**</bpt>PRINTDLG<ept id=\"p2\">**</ept> structure.","pos":[99462,99578],"source":" The `m_pd` member of a [CPrintDialog](../../mfc/reference/cprintdialog-class.md) object is a **PRINTDLG** structure."},{"pos":[99585,99762],"content":"For more information about this structure, see <bpt id=\"p1\">[</bpt>PRINTDLG<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms646843)</ept> in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"For more information about this structure, see [PRINTDLG](http://msdn.microsoft.com/library/windows/desktop/ms646843) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"pos":[99769,99931],"content":"For more information, see <bpt id=\"p1\">[</bpt>DVTARGETDEVICE<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms686613)</ept> in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"For more information, see [DVTARGETDEVICE](http://msdn.microsoft.com/library/windows/desktop/ms686613) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"pos":[99984,100010],"content":"COleClientItem::UpdateLink"},{"content":"Call this function to update the presentation data of the OLE item immediately.","pos":[100014,100093]},{"content":"Return Value","pos":[100137,100149]},{"content":"Nonzero on success; otherwise 0.","pos":[100153,100185]},{"content":"Remarks","pos":[100195,100202]},{"content":"For linked items, the function finds the link source to obtain a new presentation for the OLE item.","pos":[100206,100305]},{"content":"This process may involve running one or more server applications, which could be time-consuming.","pos":[100306,100402]},{"content":"For embedded items, the function operates recursively, checking whether the embedded item contains links that might be out of date and updating them.","pos":[100403,100552]},{"content":"The user can also manually update individual links using the Links dialog box.","pos":[100553,100631]},{"pos":[100638,100802],"content":"For more information, see <bpt id=\"p1\">[</bpt>IOleLink::Update<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms692660)</ept> in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"For more information, see [IOleLink::Update](http://msdn.microsoft.com/library/windows/desktop/ms692660) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"content":"See Also","pos":[100811,100819]},{"content":"MFC Sample MFCBIND","pos":[100824,100842]},{"content":"MFC Sample OCLIENT","pos":[100878,100896]},{"content":"CDocItem Class","pos":[100932,100946]},{"content":"Hierarchy Chart","pos":[100992,101007]},{"content":"COleServerItem Class","pos":[101044,101064]}],"content":"---\ntitle: \"COleClientItem Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"COleClientItem\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"OLE containers, client items\"\n  - \"COleClientItem class\"\n  - \"OLE client item class\"\n  - \"container interface class\"\n  - \"OLE containers, interface class\"\n  - \"client items and OLE containers\"\nms.assetid: 7f571b7c-2758-4839-847a-0cf1ef643128\ncaps.latest.revision: 24\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# COleClientItem Class\nDefines the container interface to OLE items.  \n  \n## Syntax  \n  \n```  \nclass COleClientItem : public CDocItem  \n```  \n  \n## Members  \n  \n### Public Constructors  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[COleClientItem::COleClientItem](#coleclientitem__coleclientitem)|Constructs a `COleClientItem` object.|  \n  \n### Public Methods  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[COleClientItem::Activate](#coleclientitem__activate)|Opens the OLE item for an operation and then executes the specified verb.|  \n|[COleClientItem::ActivateAs](#coleclientitem__activateas)|Activates the item as another type.|  \n|[COleClientItem::AttachDataObject](#coleclientitem__attachdataobject)|Accesses the data in the OLE object.|  \n|[COleClientItem::CanCreateFromData](#coleclientitem__cancreatefromdata)|Indicates whether a container application can create an embedded object.|  \n|[COleClientItem::CanCreateLinkFromData](#coleclientitem__cancreatelinkfromdata)|Indicates whether a container application can create a linked object.|  \n|[COleClientItem::CanPaste](#coleclientitem__canpaste)|Indicates whether the Clipboard contains an embeddable or static OLE item.|  \n|[COleClientItem::CanPasteLink](#coleclientitem__canpastelink)|Indicates whether the Clipboard contains a linkable OLE item.|  \n|[COleClientItem::Close](#coleclientitem__close)|Closes a link to a server but does not destroy the OLE item.|  \n|[COleClientItem::ConvertTo](#coleclientitem__convertto)|Converts the item to another type.|  \n|[COleClientItem::CopyToClipboard](#coleclientitem__copytoclipboard)|Copies the OLE item to the Clipboard.|  \n|[COleClientItem::CreateCloneFrom](#coleclientitem__createclonefrom)|Creates a duplicate of an existing item.|  \n|[COleClientItem::CreateFromClipboard](#coleclientitem__createfromclipboard)|Creates an embedded item from the Clipboard.|  \n|[COleClientItem::CreateFromData](#coleclientitem__createfromdata)|Creates an embedded item from a data object.|  \n|[COleClientItem::CreateFromFile](#coleclientitem__createfromfile)|Creates an embedded item from a file.|  \n|[COleClientItem::CreateLinkFromClipboard](#coleclientitem__createlinkfromclipboard)|Creates a linked item from the Clipboard.|  \n|[COleClientItem::CreateLinkFromData](#coleclientitem__createlinkfromdata)|Creates a linked item from a data object.|  \n|[COleClientItem::CreateLinkFromFile](#coleclientitem__createlinkfromfile)|Creates a linked item from a file.|  \n|[COleClientItem::CreateNewItem](#coleclientitem__createnewitem)|Creates a new embedded item by launching the server application.|  \n|[COleClientItem::CreateStaticFromClipboard](#coleclientitem__createstaticfromclipboard)|Creates a static item from the Clipboard.|  \n|[COleClientItem::CreateStaticFromData](#coleclientitem__createstaticfromdata)|Creates a static item from a data object.|  \n|[COleClientItem::Deactivate](#coleclientitem__deactivate)|Deactivates the item.|  \n|[COleClientItem::DeactivateUI](#coleclientitem__deactivateui)|Restores the container application's user interface to its original state.|  \n|[COleClientItem::Delete](#coleclientitem__delete)|Deletes or closes the OLE item if it was a linked item.|  \n|[COleClientItem::DoDragDrop](#coleclientitem__dodragdrop)|Performs a drag-and-drop operation.|  \n|[COleClientItem::DoVerb](#coleclientitem__doverb)|Executes the specified verb.|  \n|[COleClientItem::Draw](#coleclientitem__draw)|Draws the OLE item.|  \n|[COleClientItem::GetActiveView](#coleclientitem__getactiveview)|Gets the view on which the item is activated in place.|  \n|[COleClientItem::GetCachedExtent](#coleclientitem__getcachedextent)|Returns the bounds of the OLE item's rectangle.|  \n|[COleClientItem::GetClassID](#coleclientitem__getclassid)|Gets the present item's class ID.|  \n|[COleClientItem::GetClipboardData](#coleclientitem__getclipboarddata)|Gets the data that would be placed on the Clipboard by calling the `CopyToClipboard` member function.|  \n|[COleClientItem::GetDocument](#coleclientitem__getdocument)|Returns the `COleDocument` object that contains the present item.|  \n|[COleClientItem::GetDrawAspect](#coleclientitem__getdrawaspect)|Gets the item's current view for rendering.|  \n|[COleClientItem::GetExtent](#coleclientitem__getextent)|Returns the bounds of the OLE item's rectangle.|  \n|[COleClientItem::GetIconFromRegistry](#coleclientitem__geticonfromregistry)|Retrives a handle to an icon associated with the server of a particular CLSID.|  \n|[COleClientItem::GetIconicMetafile](#coleclientitem__geticonicmetafile)|Gets the metafile used for drawing the item's icon.|  \n|[COleClientItem::GetInPlaceWindow](#coleclientitem__getinplacewindow)|Returns a pointer to the item's in-place editing window.|  \n|[COleClientItem::GetItemState](#coleclientitem__getitemstate)|Gets the item's current state.|  \n|[COleClientItem::GetLastStatus](#coleclientitem__getlaststatus)|Returns the status of the last OLE operation.|  \n|[COleClientItem::GetLinkUpdateOptions](#coleclientitem__getlinkupdateoptions)|Returns the update mode for a linked item (advanced feature).|  \n|[COleClientItem::GetType](#coleclientitem__gettype)|Returns the type (embedded, linked, or static) of the OLE item.|  \n|[COleClientItem::GetUserType](#coleclientitem__getusertype)|Gets a string describing the item's type.|  \n|[COleClientItem::IsInPlaceActive](#coleclientitem__isinplaceactive)|Returns `TRUE` if the item is in-place active.|  \n|[COleClientItem::IsLinkUpToDate](#coleclientitem__islinkuptodate)|Returns **TRUE** if a linked item is up to date with its source document.|  \n|[COleClientItem::IsModified](#coleclientitem__ismodified)|Returns `TRUE` if the item has been modified since it was last saved.|  \n|[COleClientItem::IsOpen](#coleclientitem__isopen)|Returns `TRUE` if the item is currently open in the server application.|  \n|[COleClientItem::IsRunning](#coleclientitem__isrunning)|Returns `TRUE` if the item's server application is running.|  \n|[COleClientItem::OnActivate](#coleclientitem__onactivate)|Called by the framework to notify the item that it is activated.|  \n|[COleClientItem::OnActivateUI](#coleclientitem__onactivateui)|Called by the framework to notify the item that it is activated and should show its user interface.|  \n|[COleClientItem::OnChange](#coleclientitem__onchange)|Called when the server changes the OLE item. Implementation required.|  \n|[COleClientItem::OnDeactivate](#coleclientitem__ondeactivate)|Called by the framework when an item is deactivated.|  \n|[COleClientItem::OnDeactivateUI](#coleclientitem__ondeactivateui)|Called by the framework when the server has removed its in-place user interface.|  \n|[COleClientItem::OnGetClipboardData](#coleclientitem__ongetclipboarddata)|Called by the framework to get the data to be copied to the Clipboard.|  \n|[COleClientItem::OnInsertMenus](#coleclientitem__oninsertmenus)|Called by the framework to create a composite menu.|  \n|[COleClientItem::OnRemoveMenus](#coleclientitem__onremovemenus)|Called by the framework to remove the container's menus from a composite menu.|  \n|[COleClientItem::OnSetMenu](#coleclientitem__onsetmenu)|Called by the framework to install and remove a composite menu.|  \n|[COleClientItem::OnShowControlBars](#coleclientitem__onshowcontrolbars)|Called by the framework to show and hide control bars.|  \n|[COleClientItem::OnUpdateFrameTitle](#coleclientitem__onupdateframetitle)|Called by the framework to update the frame window's title bar.|  \n|[COleClientItem::ReactivateAndUndo](#coleclientitem__reactivateandundo)|Reactivates the item and undoes the last in-place editing operation.|  \n|[COleClientItem::Release](#coleclientitem__release)|Releases the connection to an OLE linked item and closes it if it was open. Does not destroy the client item.|  \n|[COleClientItem::Reload](#coleclientitem__reload)|Reloads the item after a call to `ActivateAs`.|  \n|[COleClientItem::Run](#coleclientitem__run)|Runs the application associated with the item.|  \n|[COleClientItem::SetDrawAspect](#coleclientitem__setdrawaspect)|Sets the item's current view for rendering.|  \n|[COleClientItem::SetExtent](#coleclientitem__setextent)|Sets the bounding rectangle of the OLE item.|  \n|[COleClientItem::SetHostNames](#coleclientitem__sethostnames)|Sets the names the server displays when editing the OLE item.|  \n|[COleClientItem::SetIconicMetafile](#coleclientitem__seticonicmetafile)|Caches the metafile used for drawing the item's icon.|  \n|[COleClientItem::SetItemRects](#coleclientitem__setitemrects)|Sets the item's bounding rectangle.|  \n|[COleClientItem::SetLinkUpdateOptions](#coleclientitem__setlinkupdateoptions)|Sets the update mode for a linked item (advanced feature).|  \n|[COleClientItem::SetPrintDevice](#coleclientitem__setprintdevice)|Sets the print-target device for this client item.|  \n|[COleClientItem::UpdateLink](#coleclientitem__updatelink)|Updates the presentation cache of an item.|  \n  \n### Protected Methods  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[COleClientItem::CanActivate](#coleclientitem__canactivate)|Called by the framework to determine whether in-place activation is allowed.|  \n|[COleClientItem::OnChangeItemPosition](#coleclientitem__onchangeitemposition)|Called by the framework when an item's position changes.|  \n|[COleClientItem::OnDeactivateAndUndo](#coleclientitem__ondeactivateandundo)|Called by the framework to undo after activation.|  \n|[COleClientItem::OnDiscardUndoState](#coleclientitem__ondiscardundostate)|Called by the framework to discard the item's undo state information.|  \n|[COleClientItem::OnGetClipRect](#coleclientitem__ongetcliprect)|Called by the framework to get the item's clipping-rectangle coordinates.|  \n|[COleClientItem::OnGetItemPosition](#coleclientitem__ongetitemposition)|Called by the framework to get the item's position relative to the view.|  \n|[COleClientItem::OnGetWindowContext](#coleclientitem__ongetwindowcontext)|Called by the framework when an item is activated in place.|  \n|[COleClientItem::OnScrollBy](#coleclientitem__onscrollby)|Called by the framework to scroll the item into view.|  \n|[COleClientItem::OnShowItem](#coleclientitem__onshowitem)|Called by the framework to display the OLE item.|  \n  \n## Remarks  \n An OLE item represents data, created and maintained by a server application, which can be \"seamlessly\" incorporated into a document so that it appears to the user to be a single document. The result is a \"compound document\" made up of the OLE item and a containing document.  \n  \n An OLE item can be either embedded or linked. If it is embedded, its data is stored as part of the compound document. If it is linked, its data is stored as part of a separate file created by the server application, and only a link to that file is stored in the compound document. All OLE items contain information specifying the server application that should be called to edit them.  \n  \n `COleClientItem` defines several overridable functions that are called in response to requests from the server application; these overridables usually act as notifications. This allows the server application to inform the container of changes the user makes when editing the OLE item, or to retrieve information needed during editing.  \n  \n `COleClientItem` can be used with either the [COleDocument](../../mfc/reference/coledocument-class.md), [COleLinkingDoc](../../mfc/reference/colelinkingdoc-class.md), or [COleServerDoc](../../mfc/reference/coleserverdoc-class.md) class. To use `COleClientItem`, derive a class from it and implement the [OnChange](#coleclientitem__onchange) member function, which defines how the container responds to changes made to the item. To support in-place activation, override the [OnGetItemPosition](#coleclientitem__ongetitemposition) member function. This function provides information about the displayed position of the OLE item.  \n  \n For more information about using the container interface, see the articles [Containers: Implementing a Container](../../mfc/containers-implementing-a-container.md) and [Activation](../../mfc/activation-cpp.md).  \n  \n> [!NOTE]\n>  The [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)] refers to embedded and linked items as \"objects\" and refers to types of items as \"classes.\" This reference uses the term \"item\" to distinguish the OLE entity from the corresponding C++ object and the term \"type\" to distinguish the OLE category from the C++ class.  \n  \n## Inheritance Hierarchy  \n [CObject](../../mfc/reference/cobject-class.md)  \n  \n [CCmdTarget](../../mfc/reference/ccmdtarget-class.md)  \n  \n [CDocItem](../../mfc/reference/cdocitem-class.md)  \n  \n `COleClientItem`  \n  \n## Requirements  \n **Header:** afxole.h  \n  \n##  <a name=\"coleclientitem__activate\"></a>  COleClientItem::Activate  \n Call this function to execute the specified verb instead of [DoVerb](#coleclientitem__doverb) so that you can do your own processing when an exception is thrown.  \n  \n```  \nvoid Activate(\n    LONG nVerb,  \n    CView* pView,  \n    LPMSG lpMsg = NULL);\n```  \n  \n### Parameters  \n `nVerb`  \n Specifies the verb to execute. It can be one of the following:  \n  \n|Value|Meaning|Symbol|  \n|-----------|-------------|------------|  \n|– 0|Primary verb|`OLEIVERB_PRIMARY`|  \n|– 1|Secondary verb|(None)|  \n|– 1|Display item for editing|`OLEIVERB_SHOW`|  \n|– 2|Edit item in separate window|`OLEIVERB_OPEN`|  \n|– 3|Hide item|`OLEIVERB_HIDE`|  \n  \n The –1 value is typically an alias for another verb. If open editing is not supported, –2 has the same effect as –1. For additional values, see [IOleObject::DoVerb](http://msdn.microsoft.com/library/windows/desktop/ms694508) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n `pView`  \n Pointer to the container view window that contains the OLE item; this is used by the server application for in-place activation. This parameter should be **NULL** if the container does not support in-place activation.  \n  \n `lpMsg`  \n Pointer to the message that caused the item to be activated.  \n  \n### Remarks  \n If the server application was written using the Microsoft Foundation Class Library, this function causes the [OnDoVerb](../../mfc/reference/coleserveritem-class.md#coleserveritem__ondoverb) member function of the corresponding `COleServerItem` object to be executed.  \n  \n If the primary verb is Edit and zero is specified in the `nVerb` parameter, the server application is launched to allow the OLE item to be edited. If the container application supports in-place activation, editing can be done in place. If the container does not support in-place activation (or if the Open verb is specified), the server is launched in a separate window and editing can be done there. Typically, when the user of the container application double-clicks the OLE item, the value for the primary verb in the `nVerb` parameter determines which action the user can take. However, if the server supports only one action, it takes that action, no matter which value is specified in the `nVerb` parameter.  \n  \n For more information, see [IOleObject::DoVerb](http://msdn.microsoft.com/library/windows/desktop/ms694508) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n##  <a name=\"coleclientitem__activateas\"></a>  COleClientItem::ActivateAs  \n Uses OLE's object conversion facilities to activate the item as though it were an item of the type specified by `clsidNew`.  \n  \n```  \nvirtual BOOL ActivateAs(\n    LPCTSTR lpszUserType,  \n    REFCLSID clsidOld,  \n    REFCLSID clsidNew);\n```  \n  \n### Parameters  \n *lpszUserType*  \n Pointer to a string representing the target user type, such as \"Word Document.\"  \n  \n *clsidOld*  \n A reference to the item's current class ID. The class ID should represent the type of the actual object, as stored, unless it is a link. In that case, it should be the CLSID of the item to which the link refers. The [COleConvertDialog](../../mfc/reference/coleconvertdialog-class.md) automatically provides the correct class ID for the item.  \n  \n `clsidNew`  \n A reference to the target class ID.  \n  \n### Return Value  \n Nonzero if successful; otherwise 0.  \n  \n### Remarks  \n This is called automatically by [COleConvertDialog::DoConvert](../../mfc/reference/coleconvertdialog-class.md#coleconvertdialog__doconvert). It is not usually called directly.  \n  \n##  <a name=\"coleclientitem__attachdataobject\"></a>  COleClientItem::AttachDataObject  \n Call this function to initialize a [COleDataObject](../../mfc/reference/coledataobject-class.md) for accessing the data in the OLE item.  \n  \n```  \nvoid AttachDataObject(COleDataObject& rDataObject) const;\n\n \n```  \n  \n### Parameters  \n *rDataObject*  \n Reference to a `COleDataObject` object that will be initialized to allow access to the data in the OLE item.  \n  \n##  <a name=\"coleclientitem__canactivate\"></a>  COleClientItem::CanActivate  \n Called by the framework when the user requests in-place activation of the OLE item; this function's return value determines whether in-place activation is allowed.  \n  \n```  \nvirtual BOOL CanActivate();\n```  \n  \n### Return Value  \n Nonzero if in-place activation is allowed; otherwise 0.  \n  \n### Remarks  \n The default implementation allows in-place activation if the container has a valid window. Override this function to implement special logic for accepting or refusing the activation request. For example, an activation request can be refused if the OLE item is too small or not currently visible.  \n  \n For more information, see [IOleInPlaceSite::CanInPlaceActivate](http://msdn.microsoft.com/library/windows/desktop/ms691236) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n##  <a name=\"coleclientitem__cancreatefromdata\"></a>  COleClientItem::CanCreateFromData  \n Checks whether a container application can create an embedded object from the given `COleDataObject` object.  \n  \n```  \nstatic BOOL PASCAL CanCreateFromData(const COleDataObject* pDataObject);\n```  \n  \n### Parameters  \n `pDataObject`  \n Pointer to the [COleDataObject](../../mfc/reference/coledataobject-class.md) object from which the OLE item is to be created.  \n  \n### Return Value  \n Nonzero if the container can create an embedded object from the `COleDataObject` object; otherwise 0.  \n  \n### Remarks  \n The `COleDataObject` class is used in data transfers for retrieving data in various formats from the Clipboard, through drag and drop, or from an embedded OLE item.  \n  \n Containers can use this function to decide to enable or disable their Edit Paste and Edit Paste Special commands.  \n  \n For more information, see the article [Data Objects and Data Sources (OLE)](../../mfc/data-objects-and-data-sources-ole.md).  \n  \n##  <a name=\"coleclientitem__cancreatelinkfromdata\"></a>  COleClientItem::CanCreateLinkFromData  \n Checks whether a container application can create a linked object from the given `COleDataObject` object.  \n  \n```  \nstatic BOOL PASCAL CanCreateLinkFromData(const COleDataObject* pDataObject);\n```  \n  \n### Parameters  \n `pDataObject`  \n Pointer to the [COleDataObject](../../mfc/reference/coledataobject-class.md) object from which the OLE item is to be created.  \n  \n### Return Value  \n Nonzero if the container can create a linked object from the `COleDataObject` object.  \n  \n### Remarks  \n The `COleDataObject` class is used in data transfers for retrieving data in various formats from the Clipboard, through drag and drop, or from an embedded OLE item.  \n  \n Containers can use this function to decide to enable or disable their Edit Paste Special and Edit Paste Link commands.  \n  \n For more information, see the article [Data Objects and Data Sources (OLE)](../../mfc/data-objects-and-data-sources-ole.md).  \n  \n##  <a name=\"coleclientitem__canpaste\"></a>  COleClientItem::CanPaste  \n Call this function to see whether an embedded OLE item can be pasted from the Clipboard.  \n  \n```  \nstatic BOOL PASCAL CanPaste();\n```  \n  \n### Return Value  \n Nonzero if an embedded OLE item can be pasted from the Clipboard; otherwise 0.  \n  \n### Remarks  \n For more information, see [OleGetClipboard](http://msdn.microsoft.com/library/windows/desktop/ms692778) and [OleQueryCreateFromData](http://msdn.microsoft.com/library/windows/desktop/ms683739) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n##  <a name=\"coleclientitem__canpastelink\"></a>  COleClientItem::CanPasteLink  \n Call this function to see whether a linked OLE item can be pasted from the Clipboard.  \n  \n```  \nstatic BOOL PASCAL CanPasteLink();\n```  \n  \n### Return Value  \n Nonzero if a linked OLE item can be pasted from the Clipboard; otherwise 0.  \n  \n### Remarks  \n For more information, see [OleGetClipboard](http://msdn.microsoft.com/library/windows/desktop/ms692778) and [OleQueryLinkFromData](http://msdn.microsoft.com/library/windows/desktop/ms690244) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n##  <a name=\"coleclientitem__close\"></a>  COleClientItem::Close  \n Call this function to change the state of an OLE item from the running state to the loaded state, that is, loaded with its handler in memory but with the server not running.  \n  \n```  \nvoid Close(OLECLOSE dwCloseOption = OLECLOSE_SAVEIFDIRTY);\n```  \n  \n### Parameters  \n `dwCloseOption`  \n Flag specifying under what circumstances the OLE item is saved when it returns to the loaded state. It can have one of the following values:  \n  \n- `OLECLOSE_SAVEIFDIRTY` Save the OLE item.  \n  \n- `OLECLOSE_NOSAVE` Do not save the OLE item.  \n  \n- `OLECLOSE_PROMPTSAVE` Prompt the user on whether to save the OLE item.  \n  \n### Remarks  \n This function has no effect when the OLE item is not running.  \n  \n For more information, see [IOleObject::Close](http://msdn.microsoft.com/library/windows/desktop/ms683922) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n##  <a name=\"coleclientitem__coleclientitem\"></a>  COleClientItem::COleClientItem  \n Constructs a `COleClientItem` object and adds it to the container document's collection of document items, which constructs only the C++ object and does not perform any OLE initialization.  \n  \n```  \nCOleClientItem(COleDocument* pContainerDoc = NULL);\n```  \n  \n### Parameters  \n `pContainerDoc`  \n Pointer to the container document that will contain this item. This can be any [COleDocument](../../mfc/reference/coledocument-class.md) derivative.  \n  \n### Remarks  \n If you pass a **NULL** pointer, no addition is made to the container document. You must explicitly call [COleDocument::AddItem](../../mfc/reference/coledocument-class.md#coledocument__additem).  \n  \n You must call one of the following creation member functions before you use the OLE item:  \n  \n- [CreateFromClipboard](#coleclientitem__createfromclipboard)  \n  \n- [CreateFromData](#coleclientitem__createfromdata)  \n  \n- [CreateFromFile](#coleclientitem__createfromfile)  \n  \n- [CreateStaticFromClipboard](#coleclientitem__createstaticfromclipboard)  \n  \n- [CreateStaticFromData](#coleclientitem__createstaticfromdata)  \n  \n- [CreateLinkFromClipboard](#coleclientitem__createlinkfromclipboard)  \n  \n- [CreateLinkFromData](#coleclientitem__createlinkfromdata)  \n  \n- [CreateLinkFromFile](#coleclientitem__createlinkfromfile)  \n  \n- [CreateNewItem](#coleclientitem__createnewitem)  \n  \n- [CreateCloneFrom](#coleclientitem__createclonefrom)  \n  \n##  <a name=\"coleclientitem__convertto\"></a>  COleClientItem::ConvertTo  \n Call this member function to convert the item to the type specified by `clsidNew`.  \n  \n```  \nvirtual BOOL ConvertTo(REFCLSID clsidNew);\n```  \n  \n### Parameters  \n `clsidNew`  \n The class ID of the target type.  \n  \n### Return Value  \n Nonzero if successful; otherwise 0.  \n  \n### Remarks  \n This is called automatically by [COleConvertDialog](../../mfc/reference/coleconvertdialog-class.md). It is not necessary to call it directly.  \n  \n##  <a name=\"coleclientitem__copytoclipboard\"></a>  COleClientItem::CopyToClipboard  \n Call this function to copy the OLE item to the Clipboard.  \n  \n```  \nvoid CopyToClipboard(BOOL bIncludeLink = FALSE);\n```  \n  \n### Parameters  \n `bIncludeLink`  \n **TRUE** if link information should be copied to the Clipboard, allowing a linked item to be pasted; otherwise **FALSE**.  \n  \n### Remarks  \n Typically, you call this function when writing message handlers for the Copy or Cut commands from the Edit menu. You must implement item selection in your container application if you want to implement the Copy or Cut commands.  \n  \n For more information, see [OleSetClipboard](http://msdn.microsoft.com/library/windows/desktop/ms686623) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n##  <a name=\"coleclientitem__createclonefrom\"></a>  COleClientItem::CreateCloneFrom  \n Call this function to create a copy of the specified OLE item.  \n  \n```  \nBOOL CreateCloneFrom(const COleClientItem* pSrcItem);\n```  \n  \n### Parameters  \n *pSrcItem*  \n Pointer to the OLE item to be duplicated.  \n  \n### Return Value  \n Nonzero if successful; otherwise 0.  \n  \n### Remarks  \n The copy is identical to the source item. You can use this function to support undo operations.  \n  \n##  <a name=\"coleclientitem__createfromclipboard\"></a>  COleClientItem::CreateFromClipboard  \n Call this function to create an embedded item from the contents of the Clipboard.  \n  \n```  \nBOOL CreateFromClipboard(\n    OLERENDER render = OLERENDER_DRAW,  \n    CLIPFORMAT cfFormat = 0,  \n    LPFORMATETC lpFormatEtc = NULL);\n```  \n  \n### Parameters  \n *render*  \n Flag specifying how the server will render the OLE item. For the possible values, see [OLERENDER](http://msdn.microsoft.com/library/windows/desktop/ms691507) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n `cfFormat`  \n Specifies the Clipboard data format to be cached when creating the OLE item.  \n  \n `lpFormatEtc`  \n Pointer to a [FORMATETC](http://msdn.microsoft.com/library/windows/desktop/ms682177) structure used if *render* is **OLERENDER_FORMAT** or **OLERENDER_DRAW**. Provide a value for this parameter only if you want to specify additional format information beyond the Clipboard format specified by `cfFormat`. If you omit this parameter, default values are used for the other fields in the **FORMATETC** structure.  \n  \n### Return Value  \n Nonzero if successful; otherwise 0.  \n  \n### Remarks  \n You typically call this function from the message handler for the Paste command on the Edit menu. (The Paste command is enabled by the framework if the [CanPaste](#coleclientitem__canpaste) member function returns nonzero.)  \n  \n For more information, see [OLERENDER](http://msdn.microsoft.com/library/windows/desktop/ms691507) and [FORMATETC](http://msdn.microsoft.com/library/windows/desktop/ms682177) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n##  <a name=\"coleclientitem__createfromdata\"></a>  COleClientItem::CreateFromData  \n Call this function to create an embedded item from a `COleDataObject` object.  \n  \n```  \nBOOL CreateFromData(\n    COleDataObject* pDataObject,  \n    OLERENDER render = OLERENDER_DRAW,  \n    CLIPFORMAT cfFormat = 0,  \n    LPFORMATETC lpFormatEtc = NULL);\n```  \n  \n### Parameters  \n `pDataObject`  \n Pointer to the [COleDataObject](../../mfc/reference/coledataobject-class.md) object from which the OLE item is to be created.  \n  \n *render*  \n Flag specifying how the server will render the OLE item. For the possible values, see [OLERENDER](http://msdn.microsoft.com/library/windows/desktop/ms691507) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n `cfFormat`  \n Specifies the Clipboard data format to be cached when creating the OLE item.  \n  \n `lpFormatEtc`  \n Pointer to a [FORMATETC](http://msdn.microsoft.com/library/windows/desktop/ms682177) structure used if *render* is **OLERENDER_FORMAT** or **OLERENDER_DRAW**. Provide a value for this parameter only if you want to specify additional format information beyond the Clipboard format specified by `cfFormat`. If you omit this parameter, default values are used for the other fields in the **FORMATETC** structure.  \n  \n### Return Value  \n Nonzero if successful; otherwise 0.  \n  \n### Remarks  \n Data transfer operations, such as pasting from the Clipboard or drag-and-drop operations, provide `COleDataObject` objects containing the information offered by a server application. It is usually used in your override of [CView::OnDrop](../../mfc/reference/cview-class.md#cview__ondrop).  \n  \n For more information, see [OleCreateFromData](http://msdn.microsoft.com/library/windows/desktop/ms691211), [OLERENDER](http://msdn.microsoft.com/library/windows/desktop/ms691507), and [FORMATETC](http://msdn.microsoft.com/library/windows/desktop/ms682177) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n##  <a name=\"coleclientitem__createfromfile\"></a>  COleClientItem::CreateFromFile  \n Call this function to create an embedded OLE item from a file.  \n  \n```  \nBOOL CreateFromFile(\n    LPCTSTR lpszFileName,  \n    REFCLSID clsid = CLSID_NULL,  \n    OLERENDER render = OLERENDER_DRAW,  \n    CLIPFORMAT cfFormat = 0,  \n    LPFORMATETC lpFormatEtc = NULL);\n```  \n  \n### Parameters  \n `lpszFileName`  \n Pointer to the name of the file from which the OLE item is to be created.  \n  \n `clsid`  \n Reserved for future use.  \n  \n *render*  \n Flag specifying how the server will render the OLE item. For the possible values, see [OLERENDER](http://msdn.microsoft.com/library/windows/desktop/ms691507) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n `cfFormat`  \n Specifies the Clipboard data format to be cached when creating the OLE item.  \n  \n `lpFormatEtc`  \n Pointer to a [FORMATETC](http://msdn.microsoft.com/library/windows/desktop/ms682177) structure used if *render* is **OLERENDER_FORMAT** or **OLERENDER_DRAW**. Provide a value for this parameter only if you want to specify additional format information beyond the Clipboard format specified by `cfFormat`. If you omit this parameter, default values are used for the other fields in the **FORMATETC** structure.  \n  \n### Return Value  \n Nonzero if successful; otherwise 0.  \n  \n### Remarks  \n The framework calls this function from [COleInsertDialog::CreateItem](../../mfc/reference/coleinsertdialog-class.md#coleinsertdialog__createitem) if the user chooses OK from the Insert Object dialog box when the Create from File button is selected.  \n  \n For more information, see [OleCreateFromFile](http://msdn.microsoft.com/library/windows/desktop/ms690116), [OLERENDER](http://msdn.microsoft.com/library/windows/desktop/ms691507), and [FORMATETC](http://msdn.microsoft.com/library/windows/desktop/ms682177) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n##  <a name=\"coleclientitem__createlinkfromclipboard\"></a>  COleClientItem::CreateLinkFromClipboard  \n Call this function to create a linked item from the contents of the Clipboard.  \n  \n```  \nBOOL CreateLinkFromClipboard(\n    OLERENDER render = OLERENDER_DRAW,  \n    CLIPFORMAT cfFormat = 0,  \n    LPFORMATETC lpFormatEtc = NULL);\n```  \n  \n### Parameters  \n *render*  \n Flag specifying how the server will render the OLE item. For the possible values, see [OLERENDER](http://msdn.microsoft.com/library/windows/desktop/ms691507) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n `cfFormat`  \n Specifies the Clipboard data format to be cached when creating the OLE item.  \n  \n `lpFormatEtc`  \n Pointer to a [FORMATETC](http://msdn.microsoft.com/library/windows/desktop/ms682177) structure used if *render* is **OLERENDER_FORMAT** or **OLERENDER_DRAW**. Provide a value for this parameter only if you want to specify additional format information beyond the Clipboard format specified by `cfFormat`. If you omit this parameter, default values are used for the other fields in the **FORMATETC** structure.  \n  \n### Return Value  \n Nonzero if successful; otherwise 0.  \n  \n### Remarks  \n You typically call this function from the message handler for the Paste Link command on the Edit menu. (The Paste Link command is enabled in the default implementation of [COleDocument](../../mfc/reference/coledocument-class.md) if the Clipboard contains an OLE item that can be linked to.)  \n  \n For more information, see [OLERENDER](http://msdn.microsoft.com/library/windows/desktop/ms691507) and [FORMATETC](http://msdn.microsoft.com/library/windows/desktop/ms682177) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n##  <a name=\"coleclientitem__createlinkfromdata\"></a>  COleClientItem::CreateLinkFromData  \n Call this function to create a linked item from a `COleDataObject` object.  \n  \n```  \nBOOL CreateLinkFromData(\n    COleDataObject* pDataObject,  \n    OLERENDER render = OLERENDER_DRAW,  \n    CLIPFORMAT cfFormat = 0,  \n    LPFORMATETC lpFormatEtc = NULL);\n```  \n  \n### Parameters  \n `pDataObject`  \n Pointer to the [COleDataObject](../../mfc/reference/coledataobject-class.md) object from which the OLE item is to be created.  \n  \n *render*  \n Flag specifying how the server will render the OLE item. For the possible values, see [OLERENDER](http://msdn.microsoft.com/library/windows/desktop/ms691507) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n `cfFormat`  \n Specifies the Clipboard data format to be cached when creating the OLE item.  \n  \n `lpFormatEtc`  \n Pointer to a [FORMATETC](http://msdn.microsoft.com/library/windows/desktop/ms682177) structure used if *render* is **OLERENDER_FORMAT** or **OLERENDER_DRAW**. Provide a value for this parameter only if you want to specify additional format information beyond the Clipboard format specified by `cfFormat`. If you omit this parameter, default values are used for the other fields in the **FORMATETC** structure.  \n  \n### Return Value  \n Nonzero if successful; otherwise 0.  \n  \n### Remarks  \n Call this during a drop operation when the user indicates a link should be created. It can also be used to handle the Edit Paste command. It is called by the framework in `COleClientItem::CreateLinkFromClipboard` and in [COlePasteSpecialDialog::CreateItem](../../mfc/reference/colepastespecialdialog-class.md#colepastespecialdialog__createitem) when the Link option has been selected.  \n  \n For more information, see [OleCreateLinkFromData](http://msdn.microsoft.com/library/windows/desktop/ms680731), [OLERENDER](http://msdn.microsoft.com/library/windows/desktop/ms691507), and [FORMATETC](http://msdn.microsoft.com/library/windows/desktop/ms682177) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n##  <a name=\"coleclientitem__createlinkfromfile\"></a>  COleClientItem::CreateLinkFromFile  \n Call this function to create a linked OLE item from a file.  \n  \n```  \nBOOL CreateLinkFromFile(\n    LPCTSTR lpszFileName,  \n    OLERENDER render = OLERENDER_DRAW,  \n    CLIPFORMAT cfFormat = 0,  \n    LPFORMATETC lpFormatEtc = NULL);\n```  \n  \n### Parameters  \n `lpszFileName`  \n Pointer to the name of the file from which the OLE item is to be created.  \n  \n *render*  \n Flag specifying how the server will render the OLE item. For the possible values, see [OLERENDER](http://msdn.microsoft.com/library/windows/desktop/ms691507) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n `cfFormat`  \n Specifies the Clipboard data format to be cached when creating the OLE item.  \n  \n `lpFormatEtc`  \n Pointer to a [FORMATETC](http://msdn.microsoft.com/library/windows/desktop/ms682177) structure used if *render* is **OLERENDER_FORMAT** or **OLERENDER_DRAW**. Provide a value for this parameter only if you want to specify additional format information beyond the Clipboard format specified by `cfFormat`. If you omit this parameter, default values are used for the other fields in the **FORMATETC** structure.  \n  \n### Return Value  \n Nonzero if successful; otherwise 0.  \n  \n### Remarks  \n The framework calls this function if the user chooses OK from the Insert Object dialog box when the Create from File button is selected and the Link check box is checked. It is called from [COleInsertDialog::CreateItem](../../mfc/reference/coleinsertdialog-class.md#coleinsertdialog__createitem).  \n  \n For more information, see [OleCreateLinkToFile](http://msdn.microsoft.com/library/windows/desktop/ms678434), [OLERENDER](http://msdn.microsoft.com/library/windows/desktop/ms691507), and [FORMATETC](http://msdn.microsoft.com/library/windows/desktop/ms682177) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n##  <a name=\"coleclientitem__createnewitem\"></a>  COleClientItem::CreateNewItem  \n Call this function to create an embedded item; this function launches the server application that allows the user to create the OLE item.  \n  \n```  \nBOOL CreateNewItem(\n    REFCLSID clsid,  \n    OLERENDER render = OLERENDER_DRAW,  \n    CLIPFORMAT cfFormat = 0,  \n    LPFORMATETC lpFormatEtc = NULL);\n```  \n  \n### Parameters  \n `clsid`  \n ID that uniquely identifies the type of OLE item to create.  \n  \n *render*  \n Flag specifying how the server will render the OLE item. For the possible values, see [OLERENDER](http://msdn.microsoft.com/library/windows/desktop/ms691507) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n `cfFormat`  \n Specifies the Clipboard data format to be cached when creating the OLE item.  \n  \n `lpFormatEtc`  \n Pointer to a [FORMATETC](http://msdn.microsoft.com/library/windows/desktop/ms682177) structure used if *render* is **OLERENDER_FORMAT** or **OLERENDER_DRAW**. Provide a value for this parameter only if you want to specify additional format information beyond the Clipboard format specified by `cfFormat`. If you omit this parameter, default values are used for the other fields in the **FORMATETC** structure.  \n  \n### Return Value  \n Nonzero if successful; otherwise 0.  \n  \n### Remarks  \n The framework calls this function if the user chooses OK from the Insert Object dialog box when the Create New button is selected.  \n  \n For more information, see [OleCreate](http://msdn.microsoft.com/library/windows/desktop/ms678409), [OLERENDER](http://msdn.microsoft.com/library/windows/desktop/ms691507), and [FORMATETC](http://msdn.microsoft.com/library/windows/desktop/ms682177) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n##  <a name=\"coleclientitem__createstaticfromclipboard\"></a>  COleClientItem::CreateStaticFromClipboard  \n Call this function to create a static item from the contents of the Clipboard.  \n  \n```  \nBOOL CreateStaticFromClipboard(\n    OLERENDER render = OLERENDER_DRAW,  \n    CLIPFORMAT cfFormat = 0,  \n    LPFORMATETC lpFormatEtc = NULL);\n```  \n  \n### Parameters  \n *render*  \n Flag specifying how the server will render the OLE item. For the possible values, see [OLERENDER](http://msdn.microsoft.com/library/windows/desktop/ms691507) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n `cfFormat`  \n Specifies the Clipboard data format to be cached when creating the OLE item.  \n  \n `lpFormatEtc`  \n Pointer to a [FORMATETC](http://msdn.microsoft.com/library/windows/desktop/ms682177) structure used if *render* is **OLERENDER_FORMAT** or **OLERENDER_DRAW**. Provide a value for this parameter only if you want to specify additional format information beyond the Clipboard format specified by `cfFormat`. If you omit this parameter, default values are used for the other fields in the **FORMATETC** structure.  \n  \n### Return Value  \n Nonzero if successful; otherwise 0.  \n  \n### Remarks  \n A static item contains the presentation data but not the native data; consequently it cannot be edited. You typically call this function if the [CreateFromClipboard](#coleclientitem__createfromclipboard) member function fails.  \n  \n For more information, see [OLERENDER](http://msdn.microsoft.com/library/windows/desktop/ms691507) and [FORMATETC](http://msdn.microsoft.com/library/windows/desktop/ms682177) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n##  <a name=\"coleclientitem__createstaticfromdata\"></a>  COleClientItem::CreateStaticFromData  \n Call this function to create a static item from a `COleDataObject` object.  \n  \n```  \nBOOL CreateStaticFromData(\n    COleDataObject* pDataObject,  \n    OLERENDER render = OLERENDER_DRAW,  \n    CLIPFORMAT cfFormat = 0,  \n    LPFORMATETC lpFormatEtc = NULL);\n```  \n  \n### Parameters  \n `pDataObject`  \n Pointer to the [COleDataObject](../../mfc/reference/coledataobject-class.md) object from which the OLE item is to be created.  \n  \n *render*  \n Flag specifying how the server will render the OLE item. For the possible values, see [OLERENDER](http://msdn.microsoft.com/library/windows/desktop/ms691507) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n `cfFormat`  \n Specifies the Clipboard data format to be cached when creating the OLE item.  \n  \n `lpFormatEtc`  \n Pointer to a [FORMATETC](http://msdn.microsoft.com/library/windows/desktop/ms682177) structure used if *render* is **OLERENDER_FORMAT** or **OLERENDER_DRAW**. Provide a value for this parameter only if you want to specify additional format information beyond the Clipboard format specified by `cfFormat`. If you omit this parameter, default values are used for the other fields in the **FORMATETC** structure.  \n  \n### Return Value  \n Nonzero if successful; otherwise 0.  \n  \n### Remarks  \n A static item contains the presentation data but not the native data; consequently, it cannot be edited. This is essentially the same as [CreateStaticFromClipboard](#coleclientitem__createstaticfromclipboard) except that a static item can be created from an arbitrary `COleDataObject`, not just from the Clipboard.  \n  \n Used in [COlePasteSpecialDialog::CreateItem](../../mfc/reference/colepastespecialdialog-class.md#colepastespecialdialog__createitem) when Static is selected.  \n  \n For more information, see [OleCreateStaticFromData](http://msdn.microsoft.com/library/windows/desktop/ms687290), [OLERENDER](http://msdn.microsoft.com/library/windows/desktop/ms691507), and [FORMATETC](http://msdn.microsoft.com/library/windows/desktop/ms682177) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n##  <a name=\"coleclientitem__deactivate\"></a>  COleClientItem::Deactivate  \n Call this function to deactivate the OLE item and free any associated resources.  \n  \n```  \nvoid Deactivate();\n```  \n  \n### Remarks  \n You typically deactivate an in-place active OLE item when the user clicks the mouse on the client area outside the bounds of the item. Note that deactivating the OLE item will discard its undo state, making it impossible to call the [ReactivateAndUndo](#coleclientitem__reactivateandundo) member function.  \n  \n If your application supports undo, do not call `Deactivate`; instead, call [DeactivateUI](#coleclientitem__deactivateui).  \n  \n For more information, see [IOleInPlaceObject::InPlaceDeactivate](http://msdn.microsoft.com/library/windows/desktop/ms679700) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n##  <a name=\"coleclientitem__deactivateui\"></a>  COleClientItem::DeactivateUI  \n Call this function when the user deactivates an item that was activated in place.  \n  \n```  \nvoid DeactivateUI();\n```  \n  \n### Remarks  \n This function restores the container application's user interface to its original state, hiding any menus and other controls that were created for in-place activation.  \n  \n This function does not flush the undo state information for the item. That information is retained so that [ReactivateAndUndo](#coleclientitem__reactivateandundo) can later be used to execute an undo command in the server application, in case the container's undo command is chosen immediately after deactivating the item.  \n  \n For more information, see [IOleInPlaceObject::InPlaceDeactivate](http://msdn.microsoft.com/library/windows/desktop/ms679700) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n##  <a name=\"coleclientitem__delete\"></a>  COleClientItem::Delete  \n Call this function to delete the OLE item from the container document.  \n  \n```  \nvoid Delete(BOOL bAutoDelete = TRUE);\n```  \n  \n### Parameters  \n `bAutoDelete`  \n Specifies whether the item is to be removed from the document.  \n  \n### Remarks  \n This function calls the [Release](#coleclientitem__release) member function, which in turn deletes the C++ object for the item, permanently removing the OLE item from the document. If the OLE item is embedded, the native data for the item is deleted. It always closes a running server; therefore, if the item is an open link, this function closes it.  \n  \n##  <a name=\"coleclientitem__dodragdrop\"></a>  COleClientItem::DoDragDrop  \n Call the `DoDragDrop` member function to perform a drag-and-drop operation.  \n  \n```  \nDROPEFFECT DoDragDrop(\n    LPCRECT lpItemRect,  \n    CPoint ptOffset,  \n    BOOL bIncludeLink = FALSE,  \n    DWORD dwEffects = DROPEFFECT_COPY | DROPEFFECT_MOVE,  \n    LPCRECT lpRectStartDrag = NULL);\n```  \n  \n### Parameters  \n `lpItemRect`  \n The item's rectangle on screen in client coordinates (pixels).  \n  \n `ptOffset`  \n The offset from `lpItemRect` where the mouse position was at the time of the drag.  \n  \n `bIncludeLink`  \n Set this to **TRUE** if the link data should be copied to the Clipboard. Set it to **FALSE** if your server application does not support links.  \n  \n `dwEffects`  \n Determines the effects that the drag source will allow in the drag operation.  \n  \n `lpRectStartDrag`  \n Pointer to the rectangle that defines where the drag actually starts. For more information, see the following Remarks section.  \n  \n### Return Value  \n A `DROPEFFECT` value. If it is `DROPEFFECT_MOVE`, the original data should be removed.  \n  \n### Remarks  \n The drag-and-drop operation does not start immediately. It waits until the mouse cursor leaves the rectangle specified by `lpRectStartDrag` or until a specified number of milliseconds have passed. If `lpRectStartDrag` is **NULL**, the size of the rectangle is one pixel.  \n  \n The delay time is specified by a registry key setting. You can change the delay time by calling [CWinApp::WriteProfileString](../../mfc/reference/cwinapp-class.md#cwinapp__writeprofilestring) or [CWinApp::WriteProfileInt](../../mfc/reference/cwinapp-class.md#cwinapp__writeprofileint). If you do not specify the delay time, a default value of 200 milliseconds is used. Drag delay time is stored as follows:  \n  \n-   Windows NT   Drag delay time is stored in HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\NT\\CurrentVersion\\IniFileMapping\\win.ini\\Windows\\DragDelay.  \n  \n-   Windows 3.x   Drag delay time is stored in the WIN.INI file, under the [Windows} section.  \n  \n-   Windows 95/98   Drag delay time is stored in a cached version of WIN.INI.  \n  \n For more information about how drag delay information is stored in either the registry or the .INI file, see [WriteProfileString](http://msdn.microsoft.com/library/windows/desktop/ms725504) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n##  <a name=\"coleclientitem__doverb\"></a>  COleClientItem::DoVerb  \n Call `DoVerb` to execute the specified verb.  \n  \n```  \nvirtual BOOL DoVerb(\n    LONG nVerb,  \n    CView* pView,\n    LPMSG lpMsg = NULL);\n```  \n  \n### Parameters  \n `nVerb`  \n Specifies the verb to execute. It can include one of the following:  \n  \n|Value|Meaning|Symbol|  \n|-----------|-------------|------------|  \n|– 0|Primary verb|`OLEIVERB_PRIMARY`|  \n|– 1|Secondary verb|(None)|  \n|– 1|Display item for editing|`OLEIVERB_SHOW`|  \n|– 2|Edit item in separate window|`OLEIVERB_OPEN`|  \n|– 3|Hide item|`OLEIVERB_HIDE`|  \n  \n The –1 value is typically an alias for another verb. If open editing is not supported, –2 has the same effect as –1. For additional values, see [IOleObject::DoVerb](http://msdn.microsoft.com/library/windows/desktop/ms694508) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n `pView`  \n Pointer to the view window; this is used by the server for in-place activation. This parameter should be **NULL** if the container application does not allow in-place activation.  \n  \n `lpMsg`  \n Pointer to the message that caused the item to be activated.  \n  \n### Return Value  \n Nonzero if the verb was successfully executed; otherwise 0.  \n  \n### Remarks  \n This function calls the [Activate](#coleclientitem__activate) member function to execute the verb. It also catches exceptions and displays a message box to the user if one is thrown.  \n  \n If the primary verb is Edit and zero is specified in the `nVerb` parameter, the server application is launched to allow the OLE item to be edited. If the container application supports in-place activation, editing can be done in place. If the container does not support in-place activation (or if the Open verb is specified), the server is launched in a separate window and editing can be done there. Typically, when the user of the container application double-clicks the OLE item, the value for the primary verb in the `nVerb` parameter determines which action the user can take. However, if the server supports only one action, it takes that action, no matter which value is specified in the `nVerb` parameter.  \n  \n##  <a name=\"coleclientitem__draw\"></a>  COleClientItem::Draw  \n Call this function to draw the OLE item into the specified bounding rectangle using the specified device context.  \n  \n```  \nBOOL Draw(\n    CDC* pDC,  \n    LPCRECT lpBounds,  \n    DVASPECT nDrawAspect = (DVASPECT)-1);\n```  \n  \n### Parameters  \n `pDC`  \n Pointer to a [CDC](../../mfc/reference/cdc-class.md) object used for drawing the OLE item.  \n  \n `lpBounds`  \n Pointer to a [CRect](../../atl-mfc-shared/reference/crect-class.md) object or `RECT` structure that defines the bounding rectangle in which to draw the OLE item (in logical units determined by the device context).  \n  \n `nDrawAspect`  \n Specifies the aspect of the OLE item, that is, how it should be displayed. If `nDrawAspect` is –1, the last aspect set by using [SetDrawAspect](#coleclientitem__setdrawaspect) is used. For more information about possible values for this flag, see [SetDrawAspect](#coleclientitem__setdrawaspect).  \n  \n### Return Value  \n Nonzero if successful; otherwise 0.  \n  \n### Remarks  \n The function may use the metafile representation of the OLE item created by the [OnDraw](../../mfc/reference/coleserveritem-class.md#coleserveritem__ondraw) member function of `COleServerItem`.  \n  \n Typically you use **Draw** for screen display, passing the screen device context as `pDC`. In this case, you need to specify only the first two parameters.  \n  \n The `lpBounds` parameter identifies the rectangle in the target device context (relative to its current mapping mode). Rendering may involve scaling the picture and can be used by container applications to impose a view that scales between the displayed view and the final printed image.  \n  \n For more information, see [IViewObject::Draw](http://msdn.microsoft.com/library/windows/desktop/ms688655) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n##  <a name=\"coleclientitem__getactiveview\"></a>  COleClientItem::GetActiveView  \n Returns the view on which the item is in-place activated.  \n  \n```  \nCView* GetActiveView() const;\n\n \n```  \n  \n### Return Value  \n A pointer to the view; otherwise **NULL** if the item is not in-place activated.  \n  \n##  <a name=\"coleclientitem__getcachedextent\"></a>  COleClientItem::GetCachedExtent  \n Call this function to retrieve the OLE item's size.  \n  \n```  \nBOOL GetCachedExtent(\n    LPSIZE lpSize,  \n    DVASPECT nDrawAspect = (DVASPECT)-1);\n```  \n  \n### Parameters  \n `lpSize`  \n Pointer to a **SIZE** structure or a [CSize](../../atl-mfc-shared/reference/csize-class.md) object that will receive the size information.  \n  \n `nDrawAspect`  \n Specifies the aspect of the OLE item whose bounds are to be retrieved. For possible values, see [SetDrawAspect](#coleclientitem__setdrawaspect).  \n  \n### Return Value  \n Nonzero if successful; 0 if the OLE item is blank.  \n  \n### Remarks  \n This function provides the same information as [GetExtent](#coleclientitem__getextent). However, you can call `GetCachedExtent` to get extent information during the processing of other OLE handlers, such as [OnChange](#coleclientitem__onchange). The dimensions are in `MM_HIMETRIC` units.  \n  \n This is possible because `GetCachedExtent` uses the [IViewObject2](http://msdn.microsoft.com/library/windows/desktop/ms691318) interface rather than use the [IOleObject](http://msdn.microsoft.com/library/windows/desktop/dd542709) interface to get the extent of this item. The **IViewObject2** COM object caches the extent information used in the previous call to [IViewObject::Draw](http://msdn.microsoft.com/library/windows/desktop/ms688655).  \n  \n For more information, see [IViewObject2::GetExtent](http://msdn.microsoft.com/library/windows/desktop/ms684032) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n##  <a name=\"coleclientitem__getclassid\"></a>  COleClientItem::GetClassID  \n Returns the class ID of the item into the memory pointed to by `pClassID`.  \n  \n```  \nvoid GetClassID(CLSID* pClassID) const;\n\n \n```  \n  \n### Parameters  \n `pClassID`  \n Pointer to an identifier of type [CLSID](http://msdn.microsoft.com/library/windows/desktop/ms691424) to retrieve the class ID. For information on **CLSID**, see the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n### Remarks  \n The class ID is a 128-bit number that uniquely identifies the application that edits the item.  \n  \n For more information, see [IPersist::GetClassID](http://msdn.microsoft.com/library/windows/desktop/ms688664) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n##  <a name=\"coleclientitem__getclipboarddata\"></a>  COleClientItem::GetClipboardData  \n Call this function to get a `COleDataSource` object containing all the data that would be placed on the Clipboard by a call to the [CopyToClipboard](#coleclientitem__copytoclipboard) member function.  \n  \n```  \nvoid GetClipboardData(\n    COleDataSource* pDataSource,  \n    BOOL bIncludeLink = FALSE,  \n    LPPOINT lpOffset = NULL,  \n    LPSIZE lpSize = NULL);\n```  \n  \n### Parameters  \n `pDataSource`  \n Pointer to a [COleDataSource](../../mfc/reference/coledatasource-class.md) object that will receive the data contained in the OLE item.  \n  \n `bIncludeLink`  \n **TRUE** if link data should be included; otherwise **FALSE**.  \n  \n `lpOffset`  \n The offset of the mouse cursor from the origin of the object in pixels.  \n  \n `lpSize`  \n The size of the object in pixels.  \n  \n### Remarks  \n `GetClipboardData` is called as the default implementation of [OnGetClipboardData](#coleclientitem__ongetclipboarddata). Override `OnGetClipboardData` only if you want to offer data formats in addition to those offered by `CopyToClipboard`. Place those formats in the `COleDataSource` object before or after calling `CopyToClipboard`, and then pass the `COleDataSource` object to the [COleDataSource::SetClipboard](../../mfc/reference/coledatasource-class.md#coledatasource__setclipboard) function. For example, if you want the OLE item's position in its container document to accompany it on the Clipboard, you would define your own format for passing that information and place it in the `COleDataSource` before calling `CopyToClipboard`.  \n  \n##  <a name=\"coleclientitem__getdocument\"></a>  COleClientItem::GetDocument  \n Call this function to get a pointer to the document that contains the OLE item.  \n  \n```  \nCOleDocument* GetDocument() const;\n\n \n```  \n  \n### Return Value  \n A pointer to the document that contains the OLE item. **NULL** if the item is not part of a document.  \n  \n### Remarks  \n This pointer allows access to the `COleDocument` object that you passed as an argument to the `COleClientItem` constructor.  \n  \n##  <a name=\"coleclientitem__getdrawaspect\"></a>  COleClientItem::GetDrawAspect  \n Call the `GetDrawAspect` member function to determine the current \"aspect,\" or view, of the item.  \n  \n```  \nDVASPECT GetDrawAspect() const;\n\n \n```  \n  \n### Return Value  \n A value from the `DVASPECT` enumeration, whose values are listed in the reference for [SetDrawAspect](#coleclientitem__setdrawaspect).  \n  \n### Remarks  \n The aspect specifies how the item is to be rendered.  \n  \n##  <a name=\"coleclientitem__getextent\"></a>  COleClientItem::GetExtent  \n Call this function to retrieve the OLE item's size.  \n  \n```  \nBOOL GetExtent(\n    LPSIZE lpSize,  \n    DVASPECT nDrawAspect = (DVASPECT)- 1);\n```  \n  \n### Parameters  \n `lpSize`  \n Pointer to a **SIZE** structure or a `CSize` object that will receive the size information.  \n  \n `nDrawAspect`  \n Specifies the aspect of the OLE item whose bounds are to be retrieved. For possible values, see [SetDrawAspect](#coleclientitem__setdrawaspect).  \n  \n### Return Value  \n Nonzero if successful; 0 if the OLE item is blank.  \n  \n### Remarks  \n If the server application was written using the Microsoft Foundation Class Library, this function causes the [OnGetExtent](../../mfc/reference/coleserveritem-class.md#coleserveritem__ongetextent) member function of the corresponding `COleServerItem` object to be called. Note that the retrieved size may differ from the size last set by the [SetExtent](#coleclientitem__setextent) member function; the size specified by `SetExtent` is treated as a suggestion. The dimensions are in `MM_HIMETRIC` units.  \n  \n> [!NOTE]\n>  Do not call `GetExtent` during the processing of an OLE handler, such as [OnChange](#coleclientitem__onchange). Call [GetCachedExtent](#coleclientitem__getcachedextent) instead.  \n  \n For more information, see [IOleObject::GetExtent](http://msdn.microsoft.com/library/windows/desktop/ms692325) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n##  <a name=\"coleclientitem__geticonfromregistry\"></a>  COleClientItem::GetIconFromRegistry  \n Call this member function to retrieve a handle to an icon resource associated with the server of a particular CLSID.  \n  \n```  \nHICON GetIconFromRegistry() const;\n\n \n \nstatic HICON GetIconFromRegistry(CLSID& clsid);\n```  \n  \n### Parameters  \n `clsid`  \n A reference to the CLSID for the server associated with the icon.  \n  \n### Return Value  \n A valid handle to the icon resource, or **NULL** if the server's icon, or a default icon, can't be found.  \n  \n### Remarks  \n This member function will not start the server or obtain an icon dynamically, even if the server is already running. Instead, this member function opens the server's executable image and retrieves the static icon associated with the server as it was registered.  \n  \n##  <a name=\"coleclientitem__geticonicmetafile\"></a>  COleClientItem::GetIconicMetafile  \n Retrieves the metafile used for drawing the item's icon.  \n  \n```  \nHGLOBAL GetIconicMetafile();\n```  \n  \n### Return Value  \n A handle to the metafile if successful; otherwise **NULL**.  \n  \n### Remarks  \n If there is no current icon, a default icon is returned. This is called automatically by the MFC/OLE dialogs and is usually not called directly.  \n  \n This function also calls [SetIconicMetafile](#coleclientitem__seticonicmetafile) to cache the metafile for later use.  \n  \n##  <a name=\"coleclientitem__getinplacewindow\"></a>  COleClientItem::GetInPlaceWindow  \n Call the `GetInPlaceWindow` member function to get a pointer to the window in which the item has been opened for in-place editing.  \n  \n```  \nCWnd* GetInPlaceWindow();\n```  \n  \n### Return Value  \n A pointer to the item's in-place editing window; **NULL** if the item is not active or if its server is unavailable.  \n  \n### Remarks  \n This function should be called only for items that are in-place active.  \n  \n##  <a name=\"coleclientitem__getitemstate\"></a>  COleClientItem::GetItemState  \n Call this function to get the OLE item's current state.  \n  \n```  \nUINT GetItemState() const;\n\n \n```  \n  \n### Return Value  \n A **COleClientItem::ItemState** enumerated value, which can be one of the following: `emptyState`, **loadedState**, `openState`, `activeState`, `activeUIState`. For information about these states, see the article [Containers: Client-Item States](../../mfc/containers-client-item-states.md).  \n  \n### Remarks  \n To be notified when the OLE item's state changes, use the [OnChange](#coleclientitem__onchange) member function.  \n  \n For more information, see the article [Containers: Client-Item States](../../mfc/containers-client-item-states.md).  \n  \n##  <a name=\"coleclientitem__getlaststatus\"></a>  COleClientItem::GetLastStatus  \n Returns the status code of the last OLE operation.  \n  \n```  \nSCODE GetLastStatus() const;\n\n \n```  \n  \n### Return Value  \n An `SCODE` value.  \n  \n### Remarks  \n For member functions that return a **BOOL** value of **FALSE**, or other member functions that return **NULL**, `GetLastStatus` returns more detailed failure information. Be aware that most OLE member functions throw exceptions for more serious errors. The specific information on the interpretation of the `SCODE` depends on the underlying OLE call that last returned an `SCODE` value.  \n  \n For more information on `SCODE`, see [Structure of COM Error Codes](http://msdn.microsoft.com/library/windows/desktop/ms690088) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)] documentation.  \n  \n##  <a name=\"coleclientitem__getlinkupdateoptions\"></a>  COleClientItem::GetLinkUpdateOptions  \n Call this function to get the current value of the link-update option for the OLE item.  \n  \n```  \nOLEUPDATE GetLinkUpdateOptions();\n```  \n  \n### Return Value  \n One of the following values:  \n  \n- `OLEUPDATE_ALWAYS` Update the linked item whenever possible. This option supports the Automatic link-update radio button in the Links dialog box.  \n  \n- `OLEUPDATE_ONCALL` Update the linked item only on request from the container application (when the [UpdateLink](#coleclientitem__updatelink) member function is called). This option supports the Manual link-update radio button in the Links dialog box.  \n  \n### Remarks  \n This is an advanced operation.  \n  \n This function is called automatically by the [COleLinksDialog](../../mfc/reference/colelinksdialog-class.md) class.  \n  \n For more information, see [IOleLink::GetUpdateOptions](http://msdn.microsoft.com/library/windows/desktop/ms680100) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n##  <a name=\"coleclientitem__gettype\"></a>  COleClientItem::GetType  \n Call this function to determine whether the OLE item is embedded or linked, or static.  \n  \n```  \nOLE_OBJTYPE GetType() const;\n\n \n```  \n  \n### Return Value  \n An unsigned integer with one of the following values:  \n  \n- `OT_LINK` The OLE item is a link.  \n  \n- `OT_EMBEDDED` The OLE item is embedded.  \n  \n- `OT_STATIC` The OLE item is static, that is, it contains only presentation data, not native data, and thus cannot be edited.  \n  \n##  <a name=\"coleclientitem__getusertype\"></a>  COleClientItem::GetUserType  \n Call this function to get the user-visible string describing the OLE item's type, such as \"Word document.\"  \n  \n```  \nvoid GetUserType(\n    USERCLASSTYPE nUserClassType,  \n    CString& rString);\n```  \n  \n### Parameters  \n *nUserClassType*  \n A value indicating the desired variant of the string describing the OLE item's type. This can have one of the following values:  \n  \n- `USERCLASSTYPE_FULL` The full type name displayed to the user.  \n  \n- `USERCLASSTYPE_SHORT` A short name (15 characters maximum) for use in pop-up menus and the Edit Links dialog box.  \n  \n- `USERCLASSTYPE_APPNAME` Name of the application servicing the class.  \n  \n `rString`  \n A reference to a [CString](../../atl-mfc-shared/reference/cstringt-class.md) object to which the string describing the OLE item's type is to be returned.  \n  \n### Remarks  \n This is often the entry in the system registration database.  \n  \n If the full type name is requested but not available, the short name is used instead. If no entry for the type of OLE item is found in the registration database, or if there are no user types registered for the type of OLE item, then the user type currently stored in the OLE item is used. If that user type name is an empty string, \"Unknown Object\" is used.  \n  \n For more information, see [IOleObject::GetUserType](http://msdn.microsoft.com/library/windows/desktop/ms688643) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n##  <a name=\"coleclientitem__isinplaceactive\"></a>  COleClientItem::IsInPlaceActive  \n Call this function to see whether the OLE item is in-place active.  \n  \n```  \nBOOL IsInPlaceActive() const;\n\n \n```  \n  \n### Return Value  \n Nonzero if the OLE item is in-place active; otherwise 0.  \n  \n### Remarks  \n It is common to execute different logic depending on whether the item is being edited in place. The function checks whether the current item state is equal to either the `activeState` or the `activeUIState`.  \n  \n##  <a name=\"coleclientitem__islinkuptodate\"></a>  COleClientItem::IsLinkUpToDate  \n Call this function to see whether the OLE item is up to date.  \n  \n```  \nBOOL IsLinkUpToDate() const;\n\n \n```  \n  \n### Return Value  \n Nonzero if the OLE item is up to date; otherwise 0.  \n  \n### Remarks  \n A linked item can be out of date if its source document has been updated. An embedded item that contains links within it can similarly become out of date. The function does a recursive check of the OLE item. Note that determining whether an OLE item is out of date can be as expensive as actually performing an update.  \n  \n This is called automatically by the [COleLinksDialog](../../mfc/reference/colelinksdialog-class.md) implementation.  \n  \n For more information, see [IOleObject::IsUpToDate](http://msdn.microsoft.com/library/windows/desktop/ms686624) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n##  <a name=\"coleclientitem__ismodified\"></a>  COleClientItem::IsModified  \n Call this function to see whether the OLE item is dirty (modified since it was last saved).  \n  \n```  \nBOOL IsModified() const;\n\n \n```  \n  \n### Return Value  \n Nonzero if the OLE item is dirty; otherwise 0.  \n  \n### Remarks  \n For more information, see [IPersistStorage::IsDirty](http://msdn.microsoft.com/library/windows/desktop/ms683910) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n##  <a name=\"coleclientitem__isopen\"></a>  COleClientItem::IsOpen  \n Call this function to see whether the OLE item is open; that is, opened in an instance of the server application running in a separate window.  \n  \n```  \nBOOL IsOpen() const;\n\n \n```  \n  \n### Return Value  \n Nonzero if the OLE item is open; otherwise 0.  \n  \n### Remarks  \n It is used to determine when to draw the object with a hatching pattern. An open object should have a hatch pattern drawn on top of the object. You can use a [CRectTracker](../../mfc/reference/crecttracker-class.md) object to accomplish this.  \n  \n##  <a name=\"coleclientitem__isrunning\"></a>  COleClientItem::IsRunning  \n Call this function to see whether the OLE item is running; that is, whether the item is loaded and running in the server application.  \n  \n```  \nBOOL IsRunning() const;\n\n \n```  \n  \n### Return Value  \n Nonzero if the OLE item is running; otherwise 0.  \n  \n### Remarks  \n For more information, see [OleIsRunning](http://msdn.microsoft.com/library/windows/desktop/ms688705) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n##  <a name=\"coleclientitem__onactivate\"></a>  COleClientItem::OnActivate  \n Called by the framework to notify the item that it has just been activated in place.  \n  \n```  \nvirtual void OnActivate();\n```  \n  \n### Remarks  \n Note that this function is called to indicate that the server is running, not to indicate that its user interface has been installed in the container application. At this point, the object does not have an active user interface (is not `activeUIState`). It has not installed its menus or toolbar. The [OnActivateUI](#coleclientitem__onactivateui) member function is called when that happens.  \n  \n The default implementation calls the [OnChange](#coleclientitem__onchange) member function with **OLE_CHANGEDSTATE** as a parameter. Override this function to perform custom processing when an item becomes in-place active.  \n  \n##  <a name=\"coleclientitem__onactivateui\"></a>  COleClientItem::OnActivateUI  \n The framework calls `OnActivateUI` when the object has entered the active UI state.  \n  \n```  \nvirtual void OnActivateUI();\n```  \n  \n### Remarks  \n The object has now installed its tool bar and menus.  \n  \n The default implementation remembers the server's `HWND` for later **GetServerWindow** calls.  \n  \n##  <a name=\"coleclientitem__onchange\"></a>  COleClientItem::OnChange  \n Called by the framework when the user modifies, saves, or closes the OLE item.  \n  \n```  \nvirtual void OnChange(\n    OLE_NOTIFICATION nCode,  \n    DWORD dwParam);\n```  \n  \n### Parameters  \n `nCode`  \n The reason the server changed this item. It can have one of the following values:  \n  \n- `OLE_CHANGED` The OLE item's appearance has changed.  \n  \n- `OLE_SAVED` The OLE item has been saved.  \n  \n- `OLE_CLOSED` The OLE item has been closed.  \n  \n- `OLE_CHANGED_STATE` The OLE item has changed from one state to another.  \n  \n `dwParam`  \n If `nCode` is `OLE_SAVED` or `OLE_CLOSED`, this parameter is not used. If `nCode` is `OLE_CHANGED`, this parameter specifies the aspect of the OLE item that has changed. For possible values, see the `dwParam` parameter of [COleClientItem::Draw](#coleclientitem__draw). If `nCode` is `OLE_CHANGED_STATE`, this parameter is a **COleClientItem::ItemState** enumerated value and describes the state being entered. It can have one of the following values: `emptyState`, **loadedState**, `openState`, `activeState`, or `activeUIState`.  \n  \n### Remarks  \n (If the server application is written using the Microsoft Foundation Class Library, this function is called in response to the `Notify` member functions of `COleServerDoc` or `COleServerItem`.) The default implementation marks the container document as modified if `nCode` is `OLE_CHANGED` or `OLE_SAVED`.  \n  \n For `OLE_CHANGED_STATE`, the current state returned from [GetItemState](#coleclientitem__getitemstate) will still be the old state, meaning the state that was current prior to this state change.  \n  \n Override this function to respond to changes in the OLE item's state. Typically you update the item's appearance by invalidating the area in which the item is displayed. Call the base class implementation at the beginning of your override.  \n  \n##  <a name=\"coleclientitem__onchangeitemposition\"></a>  COleClientItem::OnChangeItemPosition  \n Called by the framework to notify the container that the OLE item's extent has changed during in-place activation.  \n  \n```  \nvirtual BOOL OnChangeItemPosition(const CRect& rectPos);\n```  \n  \n### Parameters  \n *rectPos*  \n Indicates the item's position relative to the container application's client area.  \n  \n### Return Value  \n Nonzero if the item's position is successfully changed; otherwise 0.  \n  \n### Remarks  \n The default implementation determines the new visible rectangle of the OLE item and calls [SetItemRects](#coleclientitem__setitemrects) with the new values. The default implementation calculates the visible rectangle for the item and passes that information to the server.  \n  \n Override this function to apply special rules to the resize/move operation. If the application is written in MFC, this call results because the server called [COleServerDoc::RequestPositionChange](../../mfc/reference/coleserverdoc-class.md#coleserverdoc__requestpositionchange).  \n  \n##  <a name=\"coleclientitem__ondeactivate\"></a>  COleClientItem::OnDeactivate  \n Called by the framework when the OLE item transitions from the in-place active state ( `activeState`) to the loaded state, meaning that it is deactivated after an in-place activation.  \n  \n```  \nvirtual void OnDeactivate();\n```  \n  \n### Remarks  \n Note that this function is called to indicate that the OLE item is closed, not that its user interface has been removed from the container application. When that happens, the [OnDeactivateUI](#coleclientitem__ondeactivateui) member function is called.  \n  \n The default implementation calls the [OnChange](#coleclientitem__onchange) member function with **OLE_CHANGEDSTATE** as a parameter. Override this function to perform custom processing when an in-place active item is deactivated. For example, if you support the undo command in your container application, you can override this function to discard the undo state, indicating that the last operation performed on the OLE item cannot be undone once the item is deactivated.  \n  \n##  <a name=\"coleclientitem__ondeactivateandundo\"></a>  COleClientItem::OnDeactivateAndUndo  \n Called by the framework when the user invokes the undo command after activating the OLE item in place.  \n  \n```  \nvirtual void OnDeactivateAndUndo();\n```  \n  \n### Remarks  \n The default implementation calls [DeactivateUI](#coleclientitem__deactivateui) to deactivate the server's user interface. Override this function if you are implementing the undo command in your container application. In your override, call the base class version of the function and then undo the last command executed in your application.  \n  \n For more information, see [IOleInPlaceSite::DeactivateAndUndo](http://msdn.microsoft.com/library/windows/desktop/ms683743) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n##  <a name=\"coleclientitem__ondeactivateui\"></a>  COleClientItem::OnDeactivateUI  \n Called when the user deactivates an item that was activated in place.  \n  \n```  \nvirtual void OnDeactivateUI(BOOL bUndoable);\n```  \n  \n### Parameters  \n `bUndoable`  \n Specifies whether the editing changes are undoable.  \n  \n### Remarks  \n This function restores the container application's user interface to its original state, hiding any menus and other controls that were created for in-place activation.  \n  \n If `bUndoable` is **FALSE**, the container should disable the undo command, in effect discarding the undo state of the container, because it indicates that the last operation performed by the server is not undoable.  \n  \n##  <a name=\"coleclientitem__ondiscardundostate\"></a>  COleClientItem::OnDiscardUndoState  \n Called by the framework when the user performs an action that discards the undo state while editing the OLE item.  \n  \n```  \nvirtual void OnDiscardUndoState();\n```  \n  \n### Remarks  \n The default implementation does nothing. Override this function if you are implementing the undo command in your container application. In your override, discard the container application's undo state.  \n  \n If the server was written with the Microsoft Foundation Class Library, the server can cause this function to be called by calling [COleServerDoc::DiscardUndoState](../../mfc/reference/coleserverdoc-class.md#coleserverdoc__discardundostate).  \n  \n For more information, see [IOleInPlaceSite::DiscardUndoState](http://msdn.microsoft.com/library/windows/desktop/ms688642) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n##  <a name=\"coleclientitem__ongetclipboarddata\"></a>  COleClientItem::OnGetClipboardData  \n Called by the framework to get a `COleDataSource` object containing all the data that would be placed on the Clipboard by a call to either the [CopyToClipboard](#coleclientitem__copytoclipboard) or the [DoDragDrop](#coleclientitem__dodragdrop) member function.  \n  \n```  \nvirtual COleDataSource* OnGetClipboardData(\n    BOOL bIncludeLink,  \n    LPPOINT lpOffset,  \n    LPSIZE lpSize);\n```  \n  \n### Parameters  \n `bIncludeLink`  \n Set this to **TRUE** if link data should be copied to the Clipboard. Set this to **FALSE** if your server application does not support links.  \n  \n `lpOffset`  \n Pointer to the offset of the mouse cursor from the origin of the object in pixels.  \n  \n `lpSize`  \n Pointer to the size of the object in pixels.  \n  \n### Return Value  \n A pointer to a [COleDataSource](../../mfc/reference/coledatasource-class.md) object containing the Clipboard data.  \n  \n### Remarks  \n The default implementation of this function calls [GetClipboardData](#coleclientitem__getclipboarddata).  \n  \n##  <a name=\"coleclientitem__ongetcliprect\"></a>  COleClientItem::OnGetClipRect  \n The framework calls the `OnGetClipRect` member function to get the clipping-rectangle coordinates of the item that is being edited in place.  \n  \n```  \nvirtual void OnGetClipRect(CRect& rClipRect);\n```  \n  \n### Parameters  \n *rClipRect*  \n Pointer to an object of class [CRect](../../atl-mfc-shared/reference/crect-class.md) that will hold the clipping-rectangle coordinates of the item.  \n  \n### Remarks  \n Coordinates are in pixels relative to the container application window's client area.  \n  \n The default implementation simply returns the client rectangle of the view on which the item is in-place active.  \n  \n##  <a name=\"coleclientitem__ongetitemposition\"></a>  COleClientItem::OnGetItemPosition  \n The framework calls the `OnGetItemPosition` member function to get the coordinates of the item that is being edited in place.  \n  \n```  \nvirtual void OnGetItemPosition(CRect& rPosition);\n```  \n  \n### Parameters  \n `rPosition`  \n Reference to the [CRect](../../atl-mfc-shared/reference/crect-class.md) object that will contain the item's position coordinates.  \n  \n### Remarks  \n Coordinates are in pixels relative to the container application window's client area.  \n  \n The default implementation of this function does nothing. Applications that support in-place editing require its implementation.  \n  \n##  <a name=\"coleclientitem__ongetwindowcontext\"></a>  COleClientItem::OnGetWindowContext  \n Called by the framework when an item is activated in place.  \n  \n```  \nvirtual BOOL OnGetWindowContext(\n    CFrameWnd** ppMainFrame,  \n    CFrameWnd** ppDocFrame,  \n    LPOLEINPLACEFRAMEINFO lpFrameInfo);\n```  \n  \n### Parameters  \n `ppMainFrame`  \n Pointer to a pointer to the main frame window.  \n  \n `ppDocFrame`  \n Pointer to a pointer to the document frame window.  \n  \n `lpFrameInfo`  \n Pointer to an [OLEINPLACEFRAMEINFO](http://msdn.microsoft.com/library/windows/desktop/ms693737) structure that will receive frame window information.  \n  \n### Return Value  \n Nonzero if successful; otherwise 0.  \n  \n### Remarks  \n This function is used to retrieve information about the OLE item's parent window.  \n  \n If the container is an MDI application, the default implementation returns a pointer to the [CMDIFrameWnd](../../mfc/reference/cmdiframewnd-class.md) object in `ppMainFrame` and a pointer to the active [CMDIChildWnd](../../mfc/reference/cmdichildwnd-class.md) object in `ppDocFrame`. If the container is an SDI application, the default implementation returns a pointer to the [CFrameWnd](../../mfc/reference/cframewnd-class.md) object in `ppMainFrame` and returns **NULL** in `ppDocFrame`. The default implementation also fills in the members of `lpFrameInfo`.  \n  \n Override this function only if the default implementation does not suit your application; for example, if your application has a user-interface paradigm that differs from SDI or MDI. This is an advanced overridable.  \n  \n For more information, see [IOleInPlaceSite::GetWindowContext](http://msdn.microsoft.com/library/windows/desktop/ms694366) and the [OLEINPLACEFRAMEINFO](http://msdn.microsoft.com/library/windows/desktop/ms693737) structure in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n##  <a name=\"coleclientitem__oninsertmenus\"></a>  COleClientItem::OnInsertMenus  \n Called by the framework during in-place activation to insert the container application's menus into an empty menu.  \n  \n```  \nvirtual void OnInsertMenus(\n    CMenu* pMenuShared,  \n    LPOLEMENUGROUPWIDTHS lpMenuWidths);\n```  \n  \n### Parameters  \n `pMenuShared`  \n Points to an empty menu.  \n  \n `lpMenuWidths`  \n Points to an array of six **LONG** values indicating how many menus are in each of the following menu groups: File, Edit, Container, Object, Window, Help. The container application is responsible for the File, Container, and Window menu groups, corresponding to elements 0, 2, and 4 of this array.  \n  \n### Remarks  \n This menu is then passed to the server, which inserts its own menus, creating a composite menu. This function can be called repeatedly to build several composite menus.  \n  \n The default implementation inserts into `pMenuShared` the in-place container menus; that is, the File, Container, and Window menu groups. [CDocTemplate::SetContainerInfo](../../mfc/reference/cdoctemplate-class.md#cdoctemplate__setcontainerinfo) is used to set this menu resource. The default implementation also assigns the appropriate values to elements 0, 2, and 4 in `lpMenuWidths`, depending on the menu resource. Override this function if the default implementation is not appropriate for your application; for example, if your application does not use document templates for associating resources with document types. If you override this function, you should also override [OnSetMenu](#coleclientitem__onsetmenu) and [OnRemoveMenus](#coleclientitem__onremovemenus). This is an advanced overridable.  \n  \n For more information, see [IOleInPlaceFrame::InsertMenus](http://msdn.microsoft.com/library/windows/desktop/ms683987) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n##  <a name=\"coleclientitem__onremovemenus\"></a>  COleClientItem::OnRemoveMenus  \n Called by the framework to remove the container's menus from the specified composite menu when in-place activation ends.  \n  \n```  \nvirtual void OnRemoveMenus(CMenu* pMenuShared);\n```  \n  \n### Parameters  \n `pMenuShared`  \n Points to the composite menu constructed by calls to the [OnInsertMenus](#coleclientitem__oninsertmenus) member function.  \n  \n### Remarks  \n The default implementation removes from `pMenuShared` the in-place container menus, that is, the File, Container, and Window menu groups. Override this function if the default implementation is not appropriate for your application; for example, if your application does not use document templates for associating resources with document types. If you override this function, you should probably override [OnInsertMenus](#coleclientitem__oninsertmenus) and [OnSetMenu](#coleclientitem__onsetmenu) as well. This is an advanced overridable.  \n  \n The submenus on `pMenuShared` may be shared by more than one composite menu if the server has repeatedly called `OnInsertMenus`. Therefore you should not delete any submenus in your override of `OnRemoveMenus`; you should only detach them.  \n  \n For more information, see [IOleInPlaceFrame::RemoveMenus](http://msdn.microsoft.com/library/windows/desktop/ms688685) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n##  <a name=\"coleclientitem__onscrollby\"></a>  COleClientItem::OnScrollBy  \n Called by the framework to scroll the OLE item in response to requests from the server.  \n  \n```  \nvirtual BOOL OnScrollBy(CSize sizeExtent);\n```  \n  \n### Parameters  \n *sizeExtent*  \n Specifies the distances, in pixels, to scroll in the x and y directions.  \n  \n### Return Value  \n Nonzero if the item was scrolled; 0 if the item could not be scrolled.  \n  \n### Remarks  \n For example, if the OLE item is partially visible and the user moves outside the visible region while performing in-place editing, this function is called to keep the cursor visible. The default implementation does nothing. Override this function to scroll the item by the specified amount. Note that as a result of scrolling, the visible portion of the OLE item can change. Call [SetItemRects](#coleclientitem__setitemrects) to update the item's visible rectangle.  \n  \n For more information, see [IOleInPlaceSite::Scroll](http://msdn.microsoft.com/library/windows/desktop/ms690291) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n##  <a name=\"coleclientitem__onsetmenu\"></a>  COleClientItem::OnSetMenu  \n Called by the framework two times when in-place activation begins and ends; the first time to install the composite menu and the second time (with `holemenu` equal to **NULL**) to remove it.  \n  \n```  \nvirtual void OnSetMenu(\n    CMenu* pMenuShared,  \n    HOLEMENU holemenu,  \n    HWND hwndActiveObject);\n```  \n  \n### Parameters  \n `pMenuShared`  \n Pointer to the composite menu constructed by calls to the [OnInsertMenus](#coleclientitem__oninsertmenus) member function and the `InsertMenu` function.  \n  \n `holemenu`  \n Handle to the menu descriptor returned by the **OleCreateMenuDescriptor** function, or **NULL** if the dispatching code is to be removed.  \n  \n *hwndActiveObject*  \n Handle to the editing window for the OLE item. This is the window that will receive editing commands from OLE.  \n  \n### Remarks  \n The default implementation installs or removes the composite menu and then calls the [OleSetMenuDescriptor](http://msdn.microsoft.com/library/windows/desktop/ms692831) function to install or remove the dispatching code. Override this function if the default implementation is not appropriate for your application. If you override this function, you should probably override [OnInsertMenus](#coleclientitem__oninsertmenus) and [OnRemoveMenus](#coleclientitem__onremovemenus) as well. This is an advanced overridable.  \n  \n For more information, see [OleCreateMenuDescriptor](http://msdn.microsoft.com/library/windows/desktop/ms691415), [OleSetMenuDescriptor](http://msdn.microsoft.com/library/windows/desktop/ms692831), and [IOleInPlaceFrame::SetMenu](http://msdn.microsoft.com/library/windows/desktop/ms693713) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n##  <a name=\"coleclientitem__onshowcontrolbars\"></a>  COleClientItem::OnShowControlBars  \n Called by the framework to show and hide the container application's control bars.  \n  \n```  \nvirtual BOOL OnShowControlBars(\n    CFrameWnd* pFrameWnd,  \n    BOOL bShow);\n```  \n  \n### Parameters  \n `pFrameWnd`  \n Pointer to the container application's frame window. This can be either a main frame window or an MDI child window.  \n  \n `bShow`  \n Specifies whether control bars are to be shown or hidden.  \n  \n### Return Value  \n Nonzero if the function call causes a change in the control bars' state; 0 if the call causes no change, or if `pFrameWnd` does not point to the container's frame window.  \n  \n### Remarks  \n This function returns 0 if the control bars are already in the state specified by *bShow.* This would occur, for example, if the control bars are hidden and `bShow` is **FALSE**.  \n  \n The default implementation removes the toolbar from the top-level frame window.  \n  \n##  <a name=\"coleclientitem__onshowitem\"></a>  COleClientItem::OnShowItem  \n Called by the framework to display the OLE item, making it totally visible during editing.  \n  \n```  \nvirtual void OnShowItem();\n```  \n  \n### Remarks  \n It is used when your container application supports links to embedded items (that is, if you have derived your document class from [COleLinkingDoc](../../mfc/reference/colelinkingdoc-class.md)). This function is called during in-place activation or when the OLE item is a link source and the user wants to edit it. The default implementation activates the first view on the container document. Override this function to scroll the document so that the OLE item is visible.  \n  \n##  <a name=\"coleclientitem__onupdateframetitle\"></a>  COleClientItem::OnUpdateFrameTitle  \n Called by the framework during in-place activation to update the frame window's title bar.  \n  \n```  \nvirtual BOOL OnUpdateFrameTitle();\n```  \n  \n### Return Value  \n Nonzero if this function successfully updated the frame title, otherwise zero.  \n  \n### Remarks  \n The default implementation does not change the frame window title. Override this function if you want a different frame title for your application, for example \" *server app* - *item* in *docname*\" (as in, \"Microsoft Excel - spreadsheet in REPORT.DOC\"). This is an advanced overridable.  \n  \n##  <a name=\"coleclientitem__reactivateandundo\"></a>  COleClientItem::ReactivateAndUndo  \n Call this function to reactivate the OLE item and undo the last operation performed by the user during in-place editing.  \n  \n```  \nBOOL ReactivateAndUndo();\n```  \n  \n### Return Value  \n Nonzero if successful; otherwise 0.  \n  \n### Remarks  \n If your container application supports the undo command, call this function if the user chooses the undo command immediately after deactivating the OLE item.  \n  \n If the server application is written with the Microsoft Foundation Class Libraries, this function causes the server to call [COleServerDoc::OnReactivateAndUndo](../../mfc/reference/coleserverdoc-class.md#coleserverdoc__onreactivateandundo).  \n  \n For more information, see [IOleInPlaceObject::ReactivateAndUndo](http://msdn.microsoft.com/library/windows/desktop/ms691372) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n##  <a name=\"coleclientitem__release\"></a>  COleClientItem::Release  \n Call this function to clean up resources used by the OLE item.  \n  \n```  \nvirtual void Release(OLECLOSE dwCloseOption = OLECLOSE_NOSAVE);\n```  \n  \n### Parameters  \n `dwCloseOption`  \n Flag specifying under what circumstances the OLE item is saved when it returns to the loaded state. For a list of possible values, see [COleClientItem::Close](#coleclientitem__close).  \n  \n### Remarks  \n **Release** is called by the `COleClientItem` destructor.  \n  \n For more information, see [IUnknown::Release](http://msdn.microsoft.com/library/windows/desktop/ms682317) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n##  <a name=\"coleclientitem__reload\"></a>  COleClientItem::Reload  \n Closes and reloads the item.  \n  \n```  \nBOOL Reload();\n```  \n  \n### Return Value  \n Nonzero if successful; otherwise 0.  \n  \n### Remarks  \n Call the `Reload` function after activating the item as an item of another type by a call to [ActivateAs](#coleclientitem__activateas).  \n  \n##  <a name=\"coleclientitem__run\"></a>  COleClientItem::Run  \n Runs the application associated with this item.  \n  \n```  \nvoid Run();\n```  \n  \n### Remarks  \n Call the **Run** member function to launch the server application before activating the item. This is done automatically by [Activate](#coleclientitem__activate) and [DoVerb](#coleclientitem__doverb), so it is usually not necessary to call this function. Call this function if it is necessary to run the server in order to set an item attribute, such as [SetExtent](#coleclientitem__setextent), before executing [DoVerb](#coleclientitem__doverb).  \n  \n##  <a name=\"coleclientitem__setdrawaspect\"></a>  COleClientItem::SetDrawAspect  \n Call the `SetDrawAspect` member function to set the \"aspect,\" or view, of the item.  \n  \n```  \nvirtual void SetDrawAspect(DVASPECT nDrawAspect);\n```  \n  \n### Parameters  \n `nDrawAspect`  \n A value from the `DVASPECT` enumeration. This parameter can have one of the following values:  \n  \n- `DVASPECT_CONTENT` Item is represented in such a way that it can be displayed as an embedded object inside its container.  \n  \n- `DVASPECT_THUMBNAIL` Item is rendered in a \"thumbnail\" representation so that it can be displayed in a browsing tool.  \n  \n- `DVASPECT_ICON` Item is represented by an icon.  \n  \n- `DVASPECT_DOCPRINT` Item is represented as if it were printed using the Print command from the File menu.  \n  \n### Remarks  \n The aspect specifies how the item is to be rendered by [Draw](#coleclientitem__draw) when the default value for that function's `nDrawAspect` argument is used.  \n  \n This function is called automatically by the Change Icon (and other dialogs that call the Change Icon dialog directly) to enable the iconic display aspect when requested by the user.  \n  \n##  <a name=\"coleclientitem__setextent\"></a>  COleClientItem::SetExtent  \n Call this function to specify how much space is available to the OLE item.  \n  \n```  \nvoid SetExtent(\n    const CSize& size,  \n    DVASPECT nDrawAspect = DVASPECT_CONTENT);\n```  \n  \n### Parameters  \n `size`  \n A [CSize](../../atl-mfc-shared/reference/csize-class.md) object that contains the size information.  \n  \n `nDrawAspect`  \n Specifies the aspect of the OLE item whose bounds are to be set. For possible values, see [SetDrawAspect](#coleclientitem__setdrawaspect).  \n  \n### Remarks  \n If the server application was written using the Microsoft Foundation Class Library, this causes the [OnSetExtent](../../mfc/reference/coleserveritem-class.md#coleserveritem__onsetextent) member function of the corresponding `COleServerItem` object to be called. The OLE item can then adjust its display accordingly. The dimensions must be in `MM_HIMETRIC` units. Call this function when the user resizes the OLE item or if you support some form of layout negotiation.  \n  \n For more information, see [IOleObject::SetExtent](http://msdn.microsoft.com/library/windows/desktop/ms694330) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n##  <a name=\"coleclientitem__sethostnames\"></a>  COleClientItem::SetHostNames  \n Call this function to specify the name of the container application and the container's name for an embedded OLE item.  \n  \n```  \nvoid SetHostNames(\n    LPCTSTR lpszHost,  \n    LPCTSTR lpszHostObj);\n```  \n  \n### Parameters  \n `lpszHost`  \n Pointer to the user-visible name of the container application.  \n  \n `lpszHostObj`  \n Pointer to an identifying string of the container that contains the OLE item.  \n  \n### Remarks  \n If the server application was written using the Microsoft Foundation Class Library, this function calls the [OnSetHostNames](../../mfc/reference/coleserverdoc-class.md#coleserverdoc__onsethostnames) member function of the `COleServerDoc` document that contains the OLE item. This information is used in window titles when the OLE item is being edited. Each time a container document is loaded, the framework calls this function for all the OLE items in the document. `SetHostNames` is applicable only to embedded items. It is not necessary to call this function each time an embedded OLE item is activated for editing.  \n  \n This is also called automatically with the application name and document name when an object is loaded or when a file is saved under a different name. Accordingly, it is not usually necessary to call this function directly.  \n  \n For more information, see [IOleObject::SetHostNames](http://msdn.microsoft.com/library/windows/desktop/ms680642) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n##  <a name=\"coleclientitem__seticonicmetafile\"></a>  COleClientItem::SetIconicMetafile  \n Caches the metafile used for drawing the item's icon.  \n  \n```  \nBOOL SetIconicMetafile(HGLOBAL hMetaPict);\n```  \n  \n### Parameters  \n `hMetaPict`  \n A handle to the metafile used for drawing the item's icon.  \n  \n### Return Value  \n Nonzero if successful; otherwise 0.  \n  \n### Remarks  \n Use [GetIconicMetafile](#coleclientitem__geticonicmetafile) to retrieve the metafile.  \n  \n The `hMetaPict` parameter is copied into the item; therefore, `hMetaPict` must be freed by the caller.  \n  \n##  <a name=\"coleclientitem__setitemrects\"></a>  COleClientItem::SetItemRects  \n Call this function to set the bounding rectangle or the visible rectangle of the OLE item.  \n  \n```  \nBOOL SetItemRects(\n    LPCRECT lpPosRect = NULL,  \n    LPCRECT lpClipRect = NULL);\n```  \n  \n### Parameters  \n *lprcPosRect*  \n Pointer to the rectangle containing the bounds of the OLE item relative to its parent window, in client coordinates.  \n  \n *lprcClipRect*  \n Pointer to the rectangle containing the bounds of the visible portion of the OLE item relative to its parent window, in client coordinates.  \n  \n### Return Value  \n Nonzero if successful; otherwise, 0.  \n  \n### Remarks  \n This function is called by the default implementation of the [OnChangeItemPosition](#coleclientitem__onchangeitemposition) member function. You should call this function whenever the position or visible portion of the OLE item changes. Usually this means that you call it from your view's [OnSize](../../mfc/reference/cwnd-class.md#cwnd__onsize) and [OnScrollBy](../../mfc/reference/cview-class.md#cview__onscrollby) member functions.  \n  \n For more information, see [IOleInPlaceObject::SetObjectRects](http://msdn.microsoft.com/library/windows/desktop/ms683767) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n##  <a name=\"coleclientitem__setlinkupdateoptions\"></a>  COleClientItem::SetLinkUpdateOptions  \n Call this function to set the link-update option for the presentation of the specified linked item.  \n  \n```  \nvoid SetLinkUpdateOptions(OLEUPDATE dwUpdateOpt);\n```  \n  \n### Parameters  \n *dwUpdateOpt*  \n The value of the link-update option for this item. This value must be one of the following:  \n  \n- `OLEUPDATE_ALWAYS` Update the linked item whenever possible. This option supports the Automatic link-update radio button in the Links dialog box.  \n  \n- `OLEUPDATE_ONCALL` Update the linked item only on request from the container application (when the [UpdateLink](#coleclientitem__updatelink) member function is called). This option supports the Manual link-update radio button in the Links dialog box.  \n  \n### Remarks  \n Typically, you should not change the update options chosen by the user in the Links dialog box.  \n  \n For more information, see [IOleLink::SetUpdateOptions](http://msdn.microsoft.com/library/windows/desktop/ms680120) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n##  <a name=\"coleclientitem__setprintdevice\"></a>  COleClientItem::SetPrintDevice  \n Call this function to change the print-target device for this item.  \n  \n```  \nBOOL SetPrintDevice(const DVTARGETDEVICE* ptd);\n\n \nBOOL SetPrintDevice(const PRINTDLG* ppd);\n```  \n  \n### Parameters  \n `ptd`  \n Pointer to a [DVTARGETDEVICE](http://msdn.microsoft.com/library/windows/desktop/ms686613) data structure, which contains information about the new print-target device. Can be **NULL**.  \n  \n `ppd`  \n Pointer to a [PRINTDLG](http://msdn.microsoft.com/library/windows/desktop/ms646940) data structure, which contains information about the new print-target device. Can be **NULL**.  \n  \n### Return Value  \n Nonzero if the function was successful; otherwise 0.  \n  \n### Remarks  \n This function updates the print-target device for the item but does not refresh the presentation cache. To update the presentation cache for an item, call [UpdateLink](#coleclientitem__updatelink).  \n  \n The arguments to this function contain information that the OLE system uses to identify the target device. The **PRINTDLG** structure contains information that Windows uses to initialize the common Print dialog box. After the user closes the dialog box, Windows returns information about the user's selections in this structure. The `m_pd` member of a [CPrintDialog](../../mfc/reference/cprintdialog-class.md) object is a **PRINTDLG** structure.  \n  \n For more information about this structure, see [PRINTDLG](http://msdn.microsoft.com/library/windows/desktop/ms646843) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n For more information, see [DVTARGETDEVICE](http://msdn.microsoft.com/library/windows/desktop/ms686613) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n##  <a name=\"coleclientitem__updatelink\"></a>  COleClientItem::UpdateLink  \n Call this function to update the presentation data of the OLE item immediately.  \n  \n```  \nBOOL UpdateLink();\n```  \n  \n### Return Value  \n Nonzero on success; otherwise 0.  \n  \n### Remarks  \n For linked items, the function finds the link source to obtain a new presentation for the OLE item. This process may involve running one or more server applications, which could be time-consuming. For embedded items, the function operates recursively, checking whether the embedded item contains links that might be out of date and updating them. The user can also manually update individual links using the Links dialog box.  \n  \n For more information, see [IOleLink::Update](http://msdn.microsoft.com/library/windows/desktop/ms692660) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n## See Also  \n [MFC Sample MFCBIND](../../visual-cpp-samples.md)   \n [MFC Sample OCLIENT](../../visual-cpp-samples.md)   \n [CDocItem Class](../../mfc/reference/cdocitem-class.md)   \n [Hierarchy Chart](../../mfc/hierarchy-chart.md)   \n [COleServerItem Class](../../mfc/reference/coleserveritem-class.md)\n"}