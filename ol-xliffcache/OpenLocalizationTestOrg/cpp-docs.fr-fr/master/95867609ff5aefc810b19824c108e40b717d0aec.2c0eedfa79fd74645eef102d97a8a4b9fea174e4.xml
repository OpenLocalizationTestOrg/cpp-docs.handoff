{"nodes":[{"pos":[12,45],"content":"CStatusBar Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"CStatusBar Class | Microsoft Docs","pos":[0,33]}]},{"pos":[692,708],"content":"CStatusBar Class","linkify":"CStatusBar Class","nodes":[{"content":"CStatusBar Class","pos":[0,16]}]},{"content":"A control bar with a row of text output panes, or \"indicators.\"","pos":[709,772]},{"pos":[781,787],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[851,858],"content":"Members","linkify":"Members","nodes":[{"content":"Members","pos":[0,7]}]},{"pos":[868,887],"content":"Public Constructors","linkify":"Public Constructors","nodes":[{"content":"Public Constructors","pos":[0,19]}]},{"content":"Name","pos":[894,898]},{"content":"Description","pos":[899,910]},{"pos":[948,997],"content":"<bpt id=\"p1\">[</bpt>CStatusBar::CStatusBar<ept id=\"p1\">](#cstatusbar__cstatusbar)</ept>","source":"[CStatusBar::CStatusBar](#cstatusbar__cstatusbar)"},{"pos":[998,1031],"content":"Constructs a <ph id=\"ph1\">`CStatusBar`</ph> object.","source":"Constructs a `CStatusBar` object."},{"pos":[1042,1056],"content":"Public Methods","linkify":"Public Methods","nodes":[{"content":"Public Methods","pos":[0,14]}]},{"content":"Name","pos":[1063,1067]},{"content":"Description","pos":[1068,1079]},{"pos":[1117,1174],"content":"<bpt id=\"p1\">[</bpt>CStatusBar::CommandToIndex<ept id=\"p1\">](#cstatusbar__commandtoindex)</ept>","source":"[CStatusBar::CommandToIndex](#cstatusbar__commandtoindex)"},{"content":"Gets index for a given indicator ID.","pos":[1175,1211]},{"pos":[1216,1257],"content":"<bpt id=\"p1\">[</bpt>CStatusBar::Create<ept id=\"p1\">](#cstatusbar__create)</ept>","source":"[CStatusBar::Create](#cstatusbar__create)"},{"pos":[1258,1363],"content":"Creates the status bar, attaches it to the <ph id=\"ph1\">`CStatusBar`</ph> object, and sets the initial font and bar height.","source":"Creates the status bar, attaches it to the `CStatusBar` object, and sets the initial font and bar height."},{"pos":[1368,1413],"content":"<bpt id=\"p1\">[</bpt>CStatusBar::CreateEx<ept id=\"p1\">](#cstatusbar__createex)</ept>","source":"[CStatusBar::CreateEx](#cstatusbar__createex)"},{"pos":[1414,1508],"content":"Creates a <ph id=\"ph1\">`CStatusBar`</ph> object with additional styles for the embedded <ph id=\"ph2\">`CStatusBarCtrl`</ph> object.","source":"Creates a `CStatusBar` object with additional styles for the embedded `CStatusBarCtrl` object."},{"pos":[1513,1558],"content":"<bpt id=\"p1\">[</bpt>CStatusBar::DrawItem<ept id=\"p1\">](#cstatusbar__drawitem)</ept>","source":"[CStatusBar::DrawItem](#cstatusbar__drawitem)"},{"content":"Called when a visual aspect of an owner-draw status bar control changes.","pos":[1559,1631]},{"pos":[1636,1683],"content":"<bpt id=\"p1\">[</bpt>CStatusBar::GetItemID<ept id=\"p1\">](#cstatusbar__getitemid)</ept>","source":"[CStatusBar::GetItemID](#cstatusbar__getitemid)"},{"content":"Gets indicator ID for a given index.","pos":[1684,1720]},{"pos":[1725,1776],"content":"<bpt id=\"p1\">[</bpt>CStatusBar::GetItemRect<ept id=\"p1\">](#cstatusbar__getitemrect)</ept>","source":"[CStatusBar::GetItemRect](#cstatusbar__getitemrect)"},{"content":"Gets display rectangle for a given index.","pos":[1777,1818]},{"pos":[1823,1874],"content":"<bpt id=\"p1\">[</bpt>CStatusBar::GetPaneInfo<ept id=\"p1\">](#cstatusbar__getpaneinfo)</ept>","source":"[CStatusBar::GetPaneInfo](#cstatusbar__getpaneinfo)"},{"content":"Gets indicator ID, style, and width for a given index.","pos":[1875,1929]},{"pos":[1934,1987],"content":"<bpt id=\"p1\">[</bpt>CStatusBar::GetPaneStyle<ept id=\"p1\">](#cstatusbar__getpanestyle)</ept>","source":"[CStatusBar::GetPaneStyle](#cstatusbar__getpanestyle)"},{"content":"Gets indicator style for a given index.","pos":[1988,2027]},{"pos":[2032,2083],"content":"<bpt id=\"p1\">[</bpt>CStatusBar::GetPaneText<ept id=\"p1\">](#cstatusbar__getpanetext)</ept>","source":"[CStatusBar::GetPaneText](#cstatusbar__getpanetext)"},{"content":"Gets indicator text for a given index.","pos":[2084,2122]},{"pos":[2127,2188],"content":"<bpt id=\"p1\">[</bpt>CStatusBar::GetStatusBarCtrl<ept id=\"p1\">](#cstatusbar__getstatusbarctrl)</ept>","source":"[CStatusBar::GetStatusBarCtrl](#cstatusbar__getstatusbarctrl)"},{"content":"Allows direct access to the underlying common control.","pos":[2189,2243]},{"pos":[2248,2303],"content":"<bpt id=\"p1\">[</bpt>CStatusBar::SetIndicators<ept id=\"p1\">](#cstatusbar__setindicators)</ept>","source":"[CStatusBar::SetIndicators](#cstatusbar__setindicators)"},{"content":"Sets indicator IDs.","pos":[2304,2323]},{"pos":[2328,2379],"content":"<bpt id=\"p1\">[</bpt>CStatusBar::SetPaneInfo<ept id=\"p1\">](#cstatusbar__setpaneinfo)</ept>","source":"[CStatusBar::SetPaneInfo](#cstatusbar__setpaneinfo)"},{"content":"Sets indicator ID, style, and width for a given index.","pos":[2380,2434]},{"pos":[2439,2492],"content":"<bpt id=\"p1\">[</bpt>CStatusBar::SetPaneStyle<ept id=\"p1\">](#cstatusbar__setpanestyle)</ept>","source":"[CStatusBar::SetPaneStyle](#cstatusbar__setpanestyle)"},{"content":"Sets indicator style for a given index.","pos":[2493,2532]},{"pos":[2537,2588],"content":"<bpt id=\"p1\">[</bpt>CStatusBar::SetPaneText<ept id=\"p1\">](#cstatusbar__setpanetext)</ept>","source":"[CStatusBar::SetPaneText](#cstatusbar__setpanetext)"},{"content":"Sets indicator text for a given index.","pos":[2589,2627]},{"pos":[2637,2644],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The output panes commonly are used as message lines and as status indicators.","pos":[2648,2725]},{"content":"Examples include the menu help-message lines that briefly explain the selected menu command and the indicators that show the status of the SCROLL LOCK, NUM LOCK, and other keys.","pos":[2726,2903]},{"content":"<bpt id=\"p1\">[</bpt>CStatusBar::GetStatusBarCtrl<ept id=\"p1\">](#cstatusbar__getstatusbarctrl)</ept>, a member function new to MFC 4.0, allows you to take advantage of the Windows common control's support for status bar customization and additional functionality.","pos":[2910,3134],"source":"[CStatusBar::GetStatusBarCtrl](#cstatusbar__getstatusbarctrl), a member function new to MFC 4.0, allows you to take advantage of the Windows common control's support for status bar customization and additional functionality."},{"content":"<ph id=\"ph1\">`CStatusBar`</ph> member functions give you most of the functionality of the Windows common controls; however, when you call <ph id=\"ph2\">`GetStatusBarCtrl`</ph>, you can give your status bars even more of the characteristics of a Windows 95/98 status bar.","pos":[3135,3368],"source":"`CStatusBar` member functions give you most of the functionality of the Windows common controls; however, when you call `GetStatusBarCtrl`, you can give your status bars even more of the characteristics of a Windows 95/98 status bar."},{"content":"When you call <ph id=\"ph1\">`GetStatusBarCtrl`</ph>, it will return a reference to a <ph id=\"ph2\">`CStatusBarCtrl`</ph> object.","pos":[3369,3459],"source":" When you call `GetStatusBarCtrl`, it will return a reference to a `CStatusBarCtrl` object."},{"content":"See <bpt id=\"p1\">[</bpt>CStatusBarCtrl<ept id=\"p1\">](../../mfc/reference/cstatusbarctrl-class.md)</ept> for more information about designing toolbars using Windows common controls.","pos":[3460,3602],"source":" See [CStatusBarCtrl](../../mfc/reference/cstatusbarctrl-class.md) for more information about designing toolbars using Windows common controls."},{"content":"For more general information about common controls, see <bpt id=\"p1\">[</bpt>Common Controls<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb775493)</ept> in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","pos":[3603,3796],"source":" For more general information about common controls, see [Common Controls](http://msdn.microsoft.com/library/windows/desktop/bb775493) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"content":"The framework stores indicator information in an array with the leftmost indicator at position 0.","pos":[3803,3900]},{"content":"When you create a status bar, you use an array of string IDs that the framework associates with the corresponding indicators.","pos":[3901,4026]},{"content":"You can then use either a string ID or an index to access an indicator.","pos":[4027,4098]},{"content":"By default, the first indicator is \"elastic\": it takes up the status-bar length not used by the other indicator panes, so that the other panes are right-aligned.","pos":[4105,4266]},{"content":"To create a status bar, follow these steps:","pos":[4273,4316]},{"pos":[4326,4360],"content":"Construct the <ph id=\"ph1\">`CStatusBar`</ph> object.","source":"Construct the `CStatusBar` object."},{"pos":[4370,4530],"content":"Call the <bpt id=\"p1\">[</bpt>Create<ept id=\"p1\">](#cstatusbar__create)</ept> (or <bpt id=\"p2\">[</bpt>CreateEx<ept id=\"p2\">](#cstatusbar__createex)</ept>) function to create the status-bar window and attach it to the <ph id=\"ph1\">`CStatusBar`</ph> object.","source":"Call the [Create](#cstatusbar__create) (or [CreateEx](#cstatusbar__createex)) function to create the status-bar window and attach it to the `CStatusBar` object."},{"pos":[4540,4634],"content":"Call <bpt id=\"p1\">[</bpt>SetIndicators<ept id=\"p1\">](#cstatusbar__setindicators)</ept> to associate a string ID with each indicator.","source":"Call [SetIndicators](#cstatusbar__setindicators) to associate a string ID with each indicator."},{"content":"There are three ways to update the text in a status-bar pane:","pos":[4641,4702]},{"pos":[4712,4828],"content":"Call <bpt id=\"p1\">[</bpt>CWnd::SetWindowText<ept id=\"p1\">](../../mfc/reference/cwnd-class.md#cwnd__setwindowtext)</ept> to update the text in pane 0 only.","source":"Call [CWnd::SetWindowText](../../mfc/reference/cwnd-class.md#cwnd__setwindowtext) to update the text in pane 0 only."},{"pos":[4838,4965],"content":"Call <bpt id=\"p1\">[</bpt>CCmdUI::SetText<ept id=\"p1\">](../../mfc/reference/ccmdui-class.md#ccmdui__settext)</ept> in the status bar's <ph id=\"ph1\">`ON_UPDATE_COMMAND_UI`</ph> handler.","source":"Call [CCmdUI::SetText](../../mfc/reference/ccmdui-class.md#ccmdui__settext) in the status bar's `ON_UPDATE_COMMAND_UI` handler."},{"pos":[4975,5052],"content":"Call <bpt id=\"p1\">[</bpt>SetPaneText<ept id=\"p1\">](#cstatusbar__setpanetext)</ept> to update the text for any pane.","source":"Call [SetPaneText](#cstatusbar__setpanetext) to update the text for any pane."},{"pos":[5059,5147],"content":"Call <bpt id=\"p1\">[</bpt>SetPaneStyle<ept id=\"p1\">](#cstatusbar__setpanestyle)</ept> to update the style of a status-bar pane.","source":"Call [SetPaneStyle](#cstatusbar__setpanestyle) to update the style of a status-bar pane."},{"pos":[5154,5368],"content":"For more information on using <ph id=\"ph1\">`CStatusBar`</ph>, see the article <bpt id=\"p1\">[</bpt>Status Bar Implementation in MFC<ept id=\"p1\">](../../mfc/status-bar-implementation-in-mfc.md)</ept> and <bpt id=\"p2\">[</bpt>Technical Note 31 : Control Bars<ept id=\"p2\">](../../mfc/tn031-control-bars.md)</ept>.","source":"For more information on using `CStatusBar`, see the article [Status Bar Implementation in MFC](../../mfc/status-bar-implementation-in-mfc.md) and [Technical Note 31 : Control Bars](../../mfc/tn031-control-bars.md)."},{"pos":[5377,5398],"content":"Inheritance Hierarchy","linkify":"Inheritance Hierarchy","nodes":[{"content":"Inheritance Hierarchy","pos":[0,21]}]},{"pos":[5402,5449],"content":"<bpt id=\"p1\">[</bpt>CObject<ept id=\"p1\">](../../mfc/reference/cobject-class.md)</ept>","source":"[CObject](../../mfc/reference/cobject-class.md)"},{"pos":[5456,5509],"content":"<bpt id=\"p1\">[</bpt>CCmdTarget<ept id=\"p1\">](../../mfc/reference/ccmdtarget-class.md)</ept>","source":"[CCmdTarget](../../mfc/reference/ccmdtarget-class.md)"},{"pos":[5516,5557],"content":"<bpt id=\"p1\">[</bpt>CWnd<ept id=\"p1\">](../../mfc/reference/cwnd-class.md)</ept>","source":"[CWnd](../../mfc/reference/cwnd-class.md)"},{"pos":[5564,5619],"content":"<bpt id=\"p1\">[</bpt>CControlBar<ept id=\"p1\">](../../mfc/reference/ccontrolbar-class.md)</ept>","source":"[CControlBar](../../mfc/reference/ccontrolbar-class.md)"},{"pos":[5647,5659],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[5663,5683],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> afxext.h","source":"**Header:** afxext.h"},{"pos":[5693,5762],"content":"<bpt id=\"p1\">&lt;a name=\"cstatusbar__commandtoindex\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CStatusBar::CommandToIndex","linkify":"<a name=\"cstatusbar__commandtoindex\"></a>  CStatusBar::CommandToIndex","source":"<a name=\"cstatusbar__commandtoindex\"></a>  CStatusBar::CommandToIndex"},{"content":"Gets the indicator index for a given ID.","pos":[5766,5806]},{"pos":[5874,5884],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"String ID of the indicator whose index is to be retrieved.","pos":[5901,5959]},{"pos":[5969,5981],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The index of the indicator if successful; –1 if not successful.","pos":[5985,6048]},{"pos":[6058,6065],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The index of the first indicator is 0.","pos":[6069,6107]},{"pos":[6117,6170],"content":"<bpt id=\"p1\">&lt;a name=\"cstatusbar__create\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CStatusBar::Create","linkify":"<a name=\"cstatusbar__create\"></a>  CStatusBar::Create","source":"<a name=\"cstatusbar__create\"></a>  CStatusBar::Create"},{"pos":[6174,6259],"content":"Creates a status bar (a child window) and associates it with the <ph id=\"ph1\">`CStatusBar`</ph> object.","source":"Creates a status bar (a child window) and associates it with the `CStatusBar` object."},{"pos":[6424,6434],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Pointer to the <bpt id=\"p1\">[</bpt>CWnd<ept id=\"p1\">](../../mfc/reference/cwnd-class.md)</ept> object whose Windows window is the parent of the status bar.","pos":[6454,6571],"source":" Pointer to the [CWnd](../../mfc/reference/cwnd-class.md) object whose Windows window is the parent of the status bar."},{"content":"The status-bar style.","pos":[6591,6612]},{"content":"In addition to the standard Windows <bpt id=\"p1\">[</bpt>styles<ept id=\"p1\">](../../mfc/reference/window-styles.md)</ept>, these styles are supported.","pos":[6613,6724],"source":" In addition to the standard Windows [styles](../../mfc/reference/window-styles.md), these styles are supported."},{"pos":[6732,6781],"content":"<ph id=\"ph1\">`CBRS_TOP`</ph> Control bar is at top of frame window.","source":"`CBRS_TOP` Control bar is at top of frame window."},{"pos":[6789,6844],"content":"<ph id=\"ph1\">`CBRS_BOTTOM`</ph> Control bar is at bottom of frame window.","source":"`CBRS_BOTTOM` Control bar is at bottom of frame window."},{"pos":[6852,6926],"content":"<ph id=\"ph1\">`CBRS_NOALIGN`</ph> Control bar is not repositioned when the parent is resized.","source":"`CBRS_NOALIGN` Control bar is not repositioned when the parent is resized."},{"pos":[6933,6972],"content":"`nID`  \nThe toolbar's child-window ID.","leadings":[""," "],"nodes":[{"content":"The toolbar's child-window ID.","pos":[8,38]}]},{"pos":[6982,6994],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Nonzero if successful; otherwise 0.","pos":[6998,7033]},{"pos":[7043,7050],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Also sets the initial font and sets the status bar's height to a default value.","pos":[7054,7133]},{"pos":[7143,7200],"content":"<bpt id=\"p1\">&lt;a name=\"cstatusbar__createex\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CStatusBar::CreateEx","linkify":"<a name=\"cstatusbar__createex\"></a>  CStatusBar::CreateEx","source":"<a name=\"cstatusbar__createex\"></a>  CStatusBar::CreateEx"},{"pos":[7204,7309],"content":"Call this function to create a status bar (a child window) and associate it with the <ph id=\"ph1\">`CStatusBar`</ph> object.","source":"Call this function to create a status bar (a child window) and associate it with the `CStatusBar` object."},{"pos":[7505,7515],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Pointer to the <bpt id=\"p1\">[</bpt>CWnd<ept id=\"p1\">](../../mfc/reference/cwnd-class.md)</ept> object whose Windows window is the parent of the status bar.","pos":[7535,7652],"source":" Pointer to the [CWnd](../../mfc/reference/cwnd-class.md) object whose Windows window is the parent of the status bar."},{"content":"Additional styles for the creation of the embedded <bpt id=\"p1\">[</bpt>CStatusBarCtrl<ept id=\"p1\">](../../mfc/reference/cstatusbarctrl-class.md)</ept> object.","pos":[7676,7796],"source":" Additional styles for the creation of the embedded [CStatusBarCtrl](../../mfc/reference/cstatusbarctrl-class.md) object."},{"content":"The default specifies a status bar without a sizing grip or tooltip support.","pos":[7797,7873]},{"content":"Status bar styles supported are:","pos":[7874,7906]},{"content":"<bpt id=\"p1\">**</bpt>SBARS_SIZEGRIP<ept id=\"p1\">**</ept> The status bar control includes a sizing grip at the right end of the status bar.","pos":[7914,8014],"source":"**SBARS_SIZEGRIP** The status bar control includes a sizing grip at the right end of the status bar."},{"content":"A sizing grip is similar to a sizing border; it is a rectangular area that the user can click and drag to resize the parent window.","pos":[8015,8146]},{"pos":[8154,8204],"content":"<bpt id=\"p1\">**</bpt>SBT_TOOLTIPS<ept id=\"p1\">**</ept> The status bar supports tooltips.","source":"**SBT_TOOLTIPS** The status bar supports tooltips."},{"pos":[8211,8324],"content":"For details on these styles, see <bpt id=\"p1\">[</bpt>Settings for the CStatusBarCtrl<ept id=\"p1\">](../../mfc/settings-for-the-cstatusbarctrl.md)</ept>.","source":"For details on these styles, see [Settings for the CStatusBarCtrl](../../mfc/settings-for-the-cstatusbarctrl.md)."},{"pos":[8331,8742],"content":"`dwStyle`  \nThe status bar style. The default specifies that a visible status bar be created at the bottom of the frame window. Apply any combination of status bar control styles listed in [Window Styles](../../mfc/reference/window-styles.md) and [CDialogBar::Create](../../mfc/reference/cdialogbar-class.md#cdialogbar__create). However, this parameter should always include the WS_CHILD and WS_VISIBLE styles.","leadings":[""," "],"nodes":[{"content":"The status bar style. The default specifies that a visible status bar be created at the bottom of the frame window. Apply any combination of status bar control styles listed in [Window Styles](../../mfc/reference/window-styles.md) and [CDialogBar::Create](../../mfc/reference/cdialogbar-class.md#cdialogbar__create). However, this parameter should always include the WS_CHILD and WS_VISIBLE styles.","pos":[12,410],"nodes":[{"content":"The status bar style.","pos":[0,21]},{"content":"The default specifies that a visible status bar be created at the bottom of the frame window.","pos":[22,115]},{"content":"Apply any combination of status bar control styles listed in <bpt id=\"p1\">[</bpt>Window Styles<ept id=\"p1\">](../../mfc/reference/window-styles.md)</ept> and <bpt id=\"p2\">[</bpt>CDialogBar::Create<ept id=\"p2\">](../../mfc/reference/cdialogbar-class.md#cdialogbar__create)</ept>.","pos":[116,316],"source":" Apply any combination of status bar control styles listed in [Window Styles](../../mfc/reference/window-styles.md) and [CDialogBar::Create](../../mfc/reference/cdialogbar-class.md#cdialogbar__create)."},{"content":"However, this parameter should always include the WS_CHILD and WS_VISIBLE styles.","pos":[317,398]}]}]},{"pos":[8749,8791],"content":"`nID`  \nThe status bar's child-window ID.","leadings":[""," "],"nodes":[{"content":"The status bar's child-window ID.","pos":[8,41]}]},{"pos":[8801,8813],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Nonzero if successful; otherwise 0.","pos":[8817,8852]},{"pos":[8862,8869],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This function also sets the initial font and sets the status bar's height to a default value.","pos":[8873,8966]},{"content":"Use <ph id=\"ph1\">`CreateEx`</ph>, instead of <bpt id=\"p1\">[</bpt>Create<ept id=\"p1\">](#cstatusbar__create)</ept>, when certain styles need to be present during the creation of the embedded status bar control.","pos":[8973,9125],"source":"Use `CreateEx`, instead of [Create](#cstatusbar__create), when certain styles need to be present during the creation of the embedded status bar control."},{"content":"For example, set <ph id=\"ph1\">`dwCtrlStyle`</ph> to <bpt id=\"p1\">**</bpt>SBT_TOOLTIPS<ept id=\"p1\">**</ept> to display tooltips in a status bar object.","pos":[9126,9220],"source":" For example, set `dwCtrlStyle` to **SBT_TOOLTIPS** to display tooltips in a status bar object."},{"pos":[9230,9291],"content":"<bpt id=\"p1\">&lt;a name=\"cstatusbar__cstatusbar\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CStatusBar::CStatusBar","linkify":"<a name=\"cstatusbar__cstatusbar\"></a>  CStatusBar::CStatusBar","source":"<a name=\"cstatusbar__cstatusbar\"></a>  CStatusBar::CStatusBar"},{"pos":[9295,9429],"content":"Constructs a <ph id=\"ph1\">`CStatusBar`</ph> object, creates a default status-bar font if necessary, and sets the font characteristics to default values.","source":"Constructs a `CStatusBar` object, creates a default status-bar font if necessary, and sets the font characteristics to default values."},{"pos":[9468,9525],"content":"<bpt id=\"p1\">&lt;a name=\"cstatusbar__drawitem\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CStatusBar::DrawItem","linkify":"<a name=\"cstatusbar__drawitem\"></a>  CStatusBar::DrawItem","source":"<a name=\"cstatusbar__drawitem\"></a>  CStatusBar::DrawItem"},{"content":"This member function is called by the framework when a visual aspect of an owner-drawn status bar changes.","pos":[9529,9635]},{"pos":[9718,9728],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"A pointer to a <bpt id=\"p1\">[</bpt>DRAWITEMSTRUCT<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb775802)</ept> structure that contains information about the type of drawing required.","pos":[9754,9917],"source":" A pointer to a [DRAWITEMSTRUCT](http://msdn.microsoft.com/library/windows/desktop/bb775802) structure that contains information about the type of drawing required."},{"pos":[9927,9934],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The <bpt id=\"p1\">**</bpt>itemAction<ept id=\"p1\">**</ept> member of the <ph id=\"ph1\">`DRAWITEMSTRUCT`</ph> structure defines the drawing action that is to be performed.","pos":[9938,10049],"source":"The **itemAction** member of the `DRAWITEMSTRUCT` structure defines the drawing action that is to be performed."},{"content":"Override this member function to implement drawing for an owner-draw <ph id=\"ph1\">`CStatusBar`</ph> object.","pos":[10050,10139],"source":" Override this member function to implement drawing for an owner-draw `CStatusBar` object."},{"content":"The application should restore all graphics device interface (GDI) objects selected for the display context supplied in <ph id=\"ph1\">`lpDrawItemStruct`</ph> before the termination of this member function.","pos":[10140,10326],"source":" The application should restore all graphics device interface (GDI) objects selected for the display context supplied in `lpDrawItemStruct` before the termination of this member function."},{"pos":[10336,10395],"content":"<bpt id=\"p1\">&lt;a name=\"cstatusbar__getitemid\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CStatusBar::GetItemID","linkify":"<a name=\"cstatusbar__getitemid\"></a>  CStatusBar::GetItemID","source":"<a name=\"cstatusbar__getitemid\"></a>  CStatusBar::GetItemID"},{"pos":[10399,10453],"content":"Returns the ID of the indicator specified by <ph id=\"ph1\">`nIndex`</ph>.","source":"Returns the ID of the indicator specified by `nIndex`."},{"pos":[10515,10525],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Index of the indicator whose ID is to be retrieved.","pos":[10541,10592]},{"pos":[10602,10614],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[10618,10664],"content":"The ID of the indicator specified by <ph id=\"ph1\">`nIndex`</ph>.","source":"The ID of the indicator specified by `nIndex`."},{"pos":[10674,10737],"content":"<bpt id=\"p1\">&lt;a name=\"cstatusbar__getitemrect\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CStatusBar::GetItemRect","linkify":"<a name=\"cstatusbar__getitemrect\"></a>  CStatusBar::GetItemRect","source":"<a name=\"cstatusbar__getitemrect\"></a>  CStatusBar::GetItemRect"},{"pos":[10741,10845],"content":"Copies the coordinates of the indicator specified by <ph id=\"ph1\">`nIndex`</ph> into the structure pointed to by <ph id=\"ph2\">`lpRect`</ph>.","source":"Copies the coordinates of the indicator specified by `nIndex` into the structure pointed to by `lpRect`."},{"pos":[10935,10945],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Index of the indicator whose rectangle coordinates are to be retrieved.","pos":[10961,11032]},{"content":"Points to a <bpt id=\"p1\">[</bpt>RECT<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/dd162897)</ept> structure or a <bpt id=\"p2\">[</bpt>CRect<ept id=\"p2\">](../../atl-mfc-shared/reference/crect-class.md)</ept> object that will receive the coordinates of the indicator specified by <ph id=\"ph1\">`nIndex`</ph>.","pos":[11051,11280],"source":" Points to a [RECT](http://msdn.microsoft.com/library/windows/desktop/dd162897) structure or a [CRect](../../atl-mfc-shared/reference/crect-class.md) object that will receive the coordinates of the indicator specified by `nIndex`."},{"pos":[11290,11297],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Coordinates are in pixels relative to the upper-left corner of the status bar.","pos":[11301,11379]},{"pos":[11389,11452],"content":"<bpt id=\"p1\">&lt;a name=\"cstatusbar__getpaneinfo\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CStatusBar::GetPaneInfo","linkify":"<a name=\"cstatusbar__getpaneinfo\"></a>  CStatusBar::GetPaneInfo","source":"<a name=\"cstatusbar__getpaneinfo\"></a>  CStatusBar::GetPaneInfo"},{"pos":[11456,11580],"content":"Sets <ph id=\"ph1\">`nID`</ph>, <ph id=\"ph2\">`nStyle`</ph>, and <ph id=\"ph3\">`cxWidth`</ph> to the ID, style, and width of the indicator pane at the location specified by <ph id=\"ph4\">`nIndex`</ph>.","source":"Sets `nID`, `nStyle`, and `cxWidth` to the ID, style, and width of the indicator pane at the location specified by `nIndex`."},{"pos":[11706,11716],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Index of the pane whose information is to be retrieved.","pos":[11732,11787]},{"content":"Reference to a <bpt id=\"p1\">**</bpt>UINT<ept id=\"p1\">**</ept> that is set to the ID of the pane.","pos":[11803,11861],"source":" Reference to a **UINT** that is set to the ID of the pane."},{"content":"Reference to a <bpt id=\"p1\">**</bpt>UINT<ept id=\"p1\">**</ept> that is set to the style of the pane.","pos":[11880,11941],"source":" Reference to a **UINT** that is set to the style of the pane."},{"content":"Reference to an integer that is set to the width of the pane.","pos":[11961,12022]},{"pos":[12032,12097],"content":"<bpt id=\"p1\">&lt;a name=\"cstatusbar__getpanestyle\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CStatusBar::GetPaneStyle","linkify":"<a name=\"cstatusbar__getpanestyle\"></a>  CStatusBar::GetPaneStyle","source":"<a name=\"cstatusbar__getpanestyle\"></a>  CStatusBar::GetPaneStyle"},{"content":"Call this member function to retrieve the style of a status bar's pane.","pos":[12101,12172]},{"pos":[12237,12247],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Index of the pane whose style is to be retrieved.","pos":[12263,12312]},{"pos":[12322,12334],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[12338,12393],"content":"The style of the status-bar pane specified by <ph id=\"ph1\">`nIndex`</ph>.","source":"The style of the status-bar pane specified by `nIndex`."},{"pos":[12403,12410],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"A pane's style determines how the pane appears.","pos":[12414,12461]},{"pos":[12468,12550],"content":"For a list of styles available for status bars, see <bpt id=\"p1\">[</bpt>Create<ept id=\"p1\">](#cstatusbar__create)</ept>.","source":"For a list of styles available for status bars, see [Create](#cstatusbar__create)."},{"pos":[12560,12623],"content":"<bpt id=\"p1\">&lt;a name=\"cstatusbar__getpanetext\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CStatusBar::GetPaneText","linkify":"<a name=\"cstatusbar__getpanetext\"></a>  CStatusBar::GetPaneText","source":"<a name=\"cstatusbar__getpanetext\"></a>  CStatusBar::GetPaneText"},{"content":"Call this member function to retrieve the text that appears in a status-bar pane.","pos":[12627,12708]},{"pos":[12850,12860],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Index of the pane whose text is to be retrieved.","pos":[12876,12924]},{"content":"A reference to a <bpt id=\"p1\">[</bpt>CString<ept id=\"p1\">](../../atl-mfc-shared/reference/cstringt-class.md)</ept> object that contains the text to be retrieved.","pos":[12944,13067],"source":" A reference to a [CString](../../atl-mfc-shared/reference/cstringt-class.md) object that contains the text to be retrieved."},{"pos":[13077,13089],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[13093,13139],"content":"A <ph id=\"ph1\">`CString`</ph> object containing the pane's text.","source":"A `CString` object containing the pane's text."},{"pos":[13149,13156],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[13160,13246],"content":"The second form of this member function fills a <ph id=\"ph1\">`CString`</ph> object with the string text.","source":"The second form of this member function fills a `CString` object with the string text."},{"pos":[13256,13329],"content":"<bpt id=\"p1\">&lt;a name=\"cstatusbar__getstatusbarctrl\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CStatusBar::GetStatusBarCtrl","linkify":"<a name=\"cstatusbar__getstatusbarctrl\"></a>  CStatusBar::GetStatusBarCtrl","source":"<a name=\"cstatusbar__getstatusbarctrl\"></a>  CStatusBar::GetStatusBarCtrl"},{"content":"This member function allows direct access to the underlying common control.","pos":[13333,13408]},{"pos":[13478,13490],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[13494,13589],"content":"Contains a reference to a <bpt id=\"p1\">[</bpt>CStatusBarCtrl<ept id=\"p1\">](../../mfc/reference/cstatusbarctrl-class.md)</ept> object.","source":"Contains a reference to a [CStatusBarCtrl](../../mfc/reference/cstatusbarctrl-class.md) object."},{"pos":[13599,13606],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Use <ph id=\"ph1\">`GetStatusBarCtrl`</ph> to take advantage of the functionality of the Windows status-bar common control, and to take advantage of the support <bpt id=\"p1\">[</bpt>CStatusBarCtrl<ept id=\"p1\">](../../mfc/reference/cstatusbarctrl-class.md)</ept> provides for status-bar customization.","pos":[13610,13851],"source":"Use `GetStatusBarCtrl` to take advantage of the functionality of the Windows status-bar common control, and to take advantage of the support [CStatusBarCtrl](../../mfc/reference/cstatusbarctrl-class.md) provides for status-bar customization."},{"content":"For example, by using the common control, you can specify a style that includes a sizing grip on the status bar, or you can specify a style to have the status bar appear at the top of the parent window's client area.","pos":[13852,14068]},{"pos":[14075,14268],"content":"For more general information about common controls, See <bpt id=\"p1\">[</bpt>Common Controls<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb775493)</ept> in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"For more general information about common controls, See [Common Controls](http://msdn.microsoft.com/library/windows/desktop/bb775493) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"pos":[14278,14345],"content":"<bpt id=\"p1\">&lt;a name=\"cstatusbar__setindicators\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CStatusBar::SetIndicators","linkify":"<a name=\"cstatusbar__setindicators\"></a>  CStatusBar::SetIndicators","source":"<a name=\"cstatusbar__setindicators\"></a>  CStatusBar::SetIndicators"},{"pos":[14349,14544],"content":"Sets each indicator's ID to the value specified by the corresponding element of the array <ph id=\"ph1\">`lpIDArray`</ph>, loads the string resource specified by each ID, and sets the indicator's text to the string.","source":"Sets each indicator's ID to the value specified by the corresponding element of the array `lpIDArray`, loads the string resource specified by each ID, and sets the indicator's text to the string."},{"pos":[14637,14647],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Pointer to an array of IDs.","pos":[14666,14693]},{"content":"Number of elements in the array pointed to by <ph id=\"ph1\">`lpIDArray`</ph>.","pos":[14714,14772],"source":" Number of elements in the array pointed to by `lpIDArray`."},{"pos":[14782,14794],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Nonzero if successful; otherwise 0.","pos":[14798,14833]},{"pos":[14843,14906],"content":"<bpt id=\"p1\">&lt;a name=\"cstatusbar__setpaneinfo\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CStatusBar::SetPaneInfo","linkify":"<a name=\"cstatusbar__setpaneinfo\"></a>  CStatusBar::SetPaneInfo","source":"<a name=\"cstatusbar__setpaneinfo\"></a>  CStatusBar::SetPaneInfo"},{"content":"Sets the specified indicator pane to a new ID, style, and width.","pos":[14910,14974]},{"pos":[15088,15098],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Index of the indicator pane whose style is to be set.","pos":[15114,15167]},{"content":"New ID for the indicator pane.","pos":[15183,15213]},{"content":"New style for the indicator pane.","pos":[15232,15265]},{"content":"New width for the indicator pane.","pos":[15285,15318]},{"pos":[15328,15335],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The following indicator styles are supported:","pos":[15339,15384]},{"pos":[15392,15441],"content":"<bpt id=\"p1\">**</bpt>SBPS_NOBORDERS<ept id=\"p1\">**</ept> No 3-D border around the pane.","source":"**SBPS_NOBORDERS** No 3-D border around the pane."},{"pos":[15449,15504],"content":"<bpt id=\"p1\">**</bpt>SBPS_POPOUT<ept id=\"p1\">**</ept> Reverse border so that text \"pops out.\"","source":"**SBPS_POPOUT** Reverse border so that text \"pops out.\""},{"pos":[15512,15547],"content":"<bpt id=\"p1\">**</bpt>SBPS_DISABLED<ept id=\"p1\">**</ept> Do not draw text.","source":"**SBPS_DISABLED** Do not draw text."},{"content":"<bpt id=\"p1\">**</bpt>SBPS_STRETCH<ept id=\"p1\">**</ept> Stretch pane to fill unused space.","pos":[15555,15606],"source":"**SBPS_STRETCH** Stretch pane to fill unused space."},{"content":"Only one pane per status bar can have this style.","pos":[15607,15656]},{"pos":[15664,15712],"content":"<bpt id=\"p1\">**</bpt>SBPS_NORMAL<ept id=\"p1\">**</ept> No stretch, borders, or pop-out.","source":"**SBPS_NORMAL** No stretch, borders, or pop-out."},{"pos":[15722,15787],"content":"<bpt id=\"p1\">&lt;a name=\"cstatusbar__setpanestyle\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CStatusBar::SetPaneStyle","linkify":"<a name=\"cstatusbar__setpanestyle\"></a>  CStatusBar::SetPaneStyle","source":"<a name=\"cstatusbar__setpanestyle\"></a>  CStatusBar::SetPaneStyle"},{"content":"Call this member function to set the style of a status bar's pane.","pos":[15791,15857]},{"pos":[15937,15947],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Index of the pane whose style is to be set.","pos":[15963,16006]},{"content":"Style of the pane whose style is to be set.","pos":[16025,16068]},{"pos":[16078,16085],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"A pane's style determines how the pane appears.","pos":[16089,16136]},{"pos":[16143,16235],"content":"For a list of styles available for status bars, see <bpt id=\"p1\">[</bpt>SetPaneInfo<ept id=\"p1\">](#cstatusbar__setpaneinfo)</ept>.","source":"For a list of styles available for status bars, see [SetPaneInfo](#cstatusbar__setpaneinfo)."},{"pos":[16245,16308],"content":"<bpt id=\"p1\">&lt;a name=\"cstatusbar__setpanetext\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CStatusBar::SetPaneText","linkify":"<a name=\"cstatusbar__setpanetext\"></a>  CStatusBar::SetPaneText","source":"<a name=\"cstatusbar__setpanetext\"></a>  CStatusBar::SetPaneText"},{"pos":[16312,16401],"content":"Call this member function to set the pane text to the string pointed to by <ph id=\"ph1\">`lpszNewText`</ph>.","source":"Call this member function to set the pane text to the string pointed to by `lpszNewText`."},{"pos":[16515,16525],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Index of the pane whose text is to be set.","pos":[16541,16583]},{"content":"Pointer to the new pane text.","pos":[16607,16636]},{"content":"<bpt id=\"p1\">*</bpt>bUpdate<ept id=\"p1\">*</ept>","pos":[16643,16652],"source":"*bUpdate*"},{"content":"If <bpt id=\"p1\">**</bpt>TRUE<ept id=\"p1\">**</ept>, the pane is invalidated after the text is set.","pos":[16656,16715],"source":" If **TRUE**, the pane is invalidated after the text is set."},{"pos":[16725,16737],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Nonzero if successful; otherwise 0.","pos":[16741,16776]},{"pos":[16786,16793],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[16797,16902],"content":"After you call <ph id=\"ph1\">`SetPaneText`</ph>, you must add a UI update handler to display the new text in the status bar.","source":"After you call `SetPaneText`, you must add a UI update handler to display the new text in the status bar."},{"pos":[16912,16919],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[16923,17004],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_MFCDocView#176<ept id=\"p2\">](../../mfc/codesnippet/cpp/cstatusbar-class_1.cpp)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_MFCDocView#176](../../mfc/codesnippet/cpp/cstatusbar-class_1.cpp)]"},{"pos":[17011,17092],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_MFCDocView#177<ept id=\"p2\">](../../mfc/codesnippet/cpp/cstatusbar-class_2.cpp)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_MFCDocView#177](../../mfc/codesnippet/cpp/cstatusbar-class_2.cpp)]"},{"pos":[17099,17180],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_MFCDocView#178<ept id=\"p2\">](../../mfc/codesnippet/cpp/cstatusbar-class_3.cpp)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_MFCDocView#178](../../mfc/codesnippet/cpp/cstatusbar-class_3.cpp)]"},{"pos":[17189,17197],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>MFC Sample CTRLBARS<ept id=\"p1\">](../../visual-cpp-samples.md)</ept><ph id=\"ph1\"> </ph>","pos":[17201,17252],"source":"[MFC Sample CTRLBARS](../../visual-cpp-samples.md) "},{"content":"<bpt id=\"p1\"> [</bpt>MFC Sample DLGCBR32<ept id=\"p1\">](../../visual-cpp-samples.md)</ept><ph id=\"ph1\"> </ph>","pos":[17255,17307],"source":" [MFC Sample DLGCBR32](../../visual-cpp-samples.md) "},{"content":"<bpt id=\"p1\"> [</bpt>CControlBar Class<ept id=\"p1\">](../../mfc/reference/ccontrolbar-class.md)</ept><ph id=\"ph1\"> </ph>","pos":[17310,17373],"source":" [CControlBar Class](../../mfc/reference/ccontrolbar-class.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Hierarchy Chart<ept id=\"p1\">](../../mfc/hierarchy-chart.md)</ept><ph id=\"ph1\"> </ph>","pos":[17376,17425],"source":" [Hierarchy Chart](../../mfc/hierarchy-chart.md) "},{"content":"<bpt id=\"p1\"> [</bpt>CStatusBarCtrl Class<ept id=\"p1\">](../../mfc/reference/cstatusbarctrl-class.md)</ept><ph id=\"ph1\"> </ph>","pos":[17428,17497],"source":" [CStatusBarCtrl Class](../../mfc/reference/cstatusbarctrl-class.md) "},{"content":"<bpt id=\"p1\"> [</bpt>CControlBar Class<ept id=\"p1\">](../../mfc/reference/ccontrolbar-class.md)</ept>","pos":[17500,17562],"source":" [CControlBar Class](../../mfc/reference/ccontrolbar-class.md)"}],"content":"---\ntitle: \"CStatusBar Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"CStatusBar\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"indicators, status bar\"\n  - \"CStatusBar class\"\n  - \"status bars\"\n  - \"indicators\"\n  - \"status indicators\"\nms.assetid: a3bde3db-e71c-4881-a3ca-1d5481c345ba\ncaps.latest.revision: 24\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# CStatusBar Class\nA control bar with a row of text output panes, or \"indicators.\"  \n  \n## Syntax  \n  \n```  \nclass CStatusBar : public CControlBar  \n```  \n  \n## Members  \n  \n### Public Constructors  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CStatusBar::CStatusBar](#cstatusbar__cstatusbar)|Constructs a `CStatusBar` object.|  \n  \n### Public Methods  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CStatusBar::CommandToIndex](#cstatusbar__commandtoindex)|Gets index for a given indicator ID.|  \n|[CStatusBar::Create](#cstatusbar__create)|Creates the status bar, attaches it to the `CStatusBar` object, and sets the initial font and bar height.|  \n|[CStatusBar::CreateEx](#cstatusbar__createex)|Creates a `CStatusBar` object with additional styles for the embedded `CStatusBarCtrl` object.|  \n|[CStatusBar::DrawItem](#cstatusbar__drawitem)|Called when a visual aspect of an owner-draw status bar control changes.|  \n|[CStatusBar::GetItemID](#cstatusbar__getitemid)|Gets indicator ID for a given index.|  \n|[CStatusBar::GetItemRect](#cstatusbar__getitemrect)|Gets display rectangle for a given index.|  \n|[CStatusBar::GetPaneInfo](#cstatusbar__getpaneinfo)|Gets indicator ID, style, and width for a given index.|  \n|[CStatusBar::GetPaneStyle](#cstatusbar__getpanestyle)|Gets indicator style for a given index.|  \n|[CStatusBar::GetPaneText](#cstatusbar__getpanetext)|Gets indicator text for a given index.|  \n|[CStatusBar::GetStatusBarCtrl](#cstatusbar__getstatusbarctrl)|Allows direct access to the underlying common control.|  \n|[CStatusBar::SetIndicators](#cstatusbar__setindicators)|Sets indicator IDs.|  \n|[CStatusBar::SetPaneInfo](#cstatusbar__setpaneinfo)|Sets indicator ID, style, and width for a given index.|  \n|[CStatusBar::SetPaneStyle](#cstatusbar__setpanestyle)|Sets indicator style for a given index.|  \n|[CStatusBar::SetPaneText](#cstatusbar__setpanetext)|Sets indicator text for a given index.|  \n  \n## Remarks  \n The output panes commonly are used as message lines and as status indicators. Examples include the menu help-message lines that briefly explain the selected menu command and the indicators that show the status of the SCROLL LOCK, NUM LOCK, and other keys.  \n  \n [CStatusBar::GetStatusBarCtrl](#cstatusbar__getstatusbarctrl), a member function new to MFC 4.0, allows you to take advantage of the Windows common control's support for status bar customization and additional functionality. `CStatusBar` member functions give you most of the functionality of the Windows common controls; however, when you call `GetStatusBarCtrl`, you can give your status bars even more of the characteristics of a Windows 95/98 status bar. When you call `GetStatusBarCtrl`, it will return a reference to a `CStatusBarCtrl` object. See [CStatusBarCtrl](../../mfc/reference/cstatusbarctrl-class.md) for more information about designing toolbars using Windows common controls. For more general information about common controls, see [Common Controls](http://msdn.microsoft.com/library/windows/desktop/bb775493) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n The framework stores indicator information in an array with the leftmost indicator at position 0. When you create a status bar, you use an array of string IDs that the framework associates with the corresponding indicators. You can then use either a string ID or an index to access an indicator.  \n  \n By default, the first indicator is \"elastic\": it takes up the status-bar length not used by the other indicator panes, so that the other panes are right-aligned.  \n  \n To create a status bar, follow these steps:  \n  \n1.  Construct the `CStatusBar` object.  \n  \n2.  Call the [Create](#cstatusbar__create) (or [CreateEx](#cstatusbar__createex)) function to create the status-bar window and attach it to the `CStatusBar` object.  \n  \n3.  Call [SetIndicators](#cstatusbar__setindicators) to associate a string ID with each indicator.  \n  \n There are three ways to update the text in a status-bar pane:  \n  \n1.  Call [CWnd::SetWindowText](../../mfc/reference/cwnd-class.md#cwnd__setwindowtext) to update the text in pane 0 only.  \n  \n2.  Call [CCmdUI::SetText](../../mfc/reference/ccmdui-class.md#ccmdui__settext) in the status bar's `ON_UPDATE_COMMAND_UI` handler.  \n  \n3.  Call [SetPaneText](#cstatusbar__setpanetext) to update the text for any pane.  \n  \n Call [SetPaneStyle](#cstatusbar__setpanestyle) to update the style of a status-bar pane.  \n  \n For more information on using `CStatusBar`, see the article [Status Bar Implementation in MFC](../../mfc/status-bar-implementation-in-mfc.md) and [Technical Note 31 : Control Bars](../../mfc/tn031-control-bars.md).  \n  \n## Inheritance Hierarchy  \n [CObject](../../mfc/reference/cobject-class.md)  \n  \n [CCmdTarget](../../mfc/reference/ccmdtarget-class.md)  \n  \n [CWnd](../../mfc/reference/cwnd-class.md)  \n  \n [CControlBar](../../mfc/reference/ccontrolbar-class.md)  \n  \n `CStatusBar`  \n  \n## Requirements  \n **Header:** afxext.h  \n  \n##  <a name=\"cstatusbar__commandtoindex\"></a>  CStatusBar::CommandToIndex  \n Gets the indicator index for a given ID.  \n  \n```  \nint CommandToIndex(UINT nIDFind) const;\n\n \n```  \n  \n### Parameters  \n `nIDFind`  \n String ID of the indicator whose index is to be retrieved.  \n  \n### Return Value  \n The index of the indicator if successful; –1 if not successful.  \n  \n### Remarks  \n The index of the first indicator is 0.  \n  \n##  <a name=\"cstatusbar__create\"></a>  CStatusBar::Create  \n Creates a status bar (a child window) and associates it with the `CStatusBar` object.  \n  \n```  \nvirtual BOOL Create(\n    CWnd* pParentWnd,  \n    DWORD dwStyle = WS_CHILD | WS_VISIBLE | CBRS_BOTTOM,  \n    UINT nID = AFX_IDW_STATUS_BAR);\n```  \n  \n### Parameters  \n `pParentWnd`  \n Pointer to the [CWnd](../../mfc/reference/cwnd-class.md) object whose Windows window is the parent of the status bar.  \n  \n `dwStyle`  \n The status-bar style. In addition to the standard Windows [styles](../../mfc/reference/window-styles.md), these styles are supported.  \n  \n- `CBRS_TOP` Control bar is at top of frame window.  \n  \n- `CBRS_BOTTOM` Control bar is at bottom of frame window.  \n  \n- `CBRS_NOALIGN` Control bar is not repositioned when the parent is resized.  \n  \n `nID`  \n The toolbar's child-window ID.  \n  \n### Return Value  \n Nonzero if successful; otherwise 0.  \n  \n### Remarks  \n Also sets the initial font and sets the status bar's height to a default value.  \n  \n##  <a name=\"cstatusbar__createex\"></a>  CStatusBar::CreateEx  \n Call this function to create a status bar (a child window) and associate it with the `CStatusBar` object.  \n  \n```  \nvirtual BOOL CreateEx(\n    CWnd* pParentWnd,  \n    DWORD dwCtrlStyle = 0,  \n    DWORD dwStyle = WS_CHILD | WS_VISIBLE | CBRS_BOTTOM,  \n    UINT nID = AFX_IDW_STATUS_BAR);\n```  \n  \n### Parameters  \n `pParentWnd`  \n Pointer to the [CWnd](../../mfc/reference/cwnd-class.md) object whose Windows window is the parent of the status bar.  \n  \n `dwCtrlStyle`  \n Additional styles for the creation of the embedded [CStatusBarCtrl](../../mfc/reference/cstatusbarctrl-class.md) object. The default specifies a status bar without a sizing grip or tooltip support. Status bar styles supported are:  \n  \n- **SBARS_SIZEGRIP** The status bar control includes a sizing grip at the right end of the status bar. A sizing grip is similar to a sizing border; it is a rectangular area that the user can click and drag to resize the parent window.  \n  \n- **SBT_TOOLTIPS** The status bar supports tooltips.  \n  \n For details on these styles, see [Settings for the CStatusBarCtrl](../../mfc/settings-for-the-cstatusbarctrl.md).  \n  \n `dwStyle`  \n The status bar style. The default specifies that a visible status bar be created at the bottom of the frame window. Apply any combination of status bar control styles listed in [Window Styles](../../mfc/reference/window-styles.md) and [CDialogBar::Create](../../mfc/reference/cdialogbar-class.md#cdialogbar__create). However, this parameter should always include the WS_CHILD and WS_VISIBLE styles.  \n  \n `nID`  \n The status bar's child-window ID.  \n  \n### Return Value  \n Nonzero if successful; otherwise 0.  \n  \n### Remarks  \n This function also sets the initial font and sets the status bar's height to a default value.  \n  \n Use `CreateEx`, instead of [Create](#cstatusbar__create), when certain styles need to be present during the creation of the embedded status bar control. For example, set `dwCtrlStyle` to **SBT_TOOLTIPS** to display tooltips in a status bar object.  \n  \n##  <a name=\"cstatusbar__cstatusbar\"></a>  CStatusBar::CStatusBar  \n Constructs a `CStatusBar` object, creates a default status-bar font if necessary, and sets the font characteristics to default values.  \n  \n```  \nCStatusBar();\n```  \n  \n##  <a name=\"cstatusbar__drawitem\"></a>  CStatusBar::DrawItem  \n This member function is called by the framework when a visual aspect of an owner-drawn status bar changes.  \n  \n```  \nvirtual void DrawItem(LPDRAWITEMSTRUCT lpDrawItemStruct);\n```  \n  \n### Parameters  \n `lpDrawItemStruct`  \n A pointer to a [DRAWITEMSTRUCT](http://msdn.microsoft.com/library/windows/desktop/bb775802) structure that contains information about the type of drawing required.  \n  \n### Remarks  \n The **itemAction** member of the `DRAWITEMSTRUCT` structure defines the drawing action that is to be performed. Override this member function to implement drawing for an owner-draw `CStatusBar` object. The application should restore all graphics device interface (GDI) objects selected for the display context supplied in `lpDrawItemStruct` before the termination of this member function.  \n  \n##  <a name=\"cstatusbar__getitemid\"></a>  CStatusBar::GetItemID  \n Returns the ID of the indicator specified by `nIndex`.  \n  \n```  \nUINT GetItemID(int nIndex) const;\n\n \n```  \n  \n### Parameters  \n `nIndex`  \n Index of the indicator whose ID is to be retrieved.  \n  \n### Return Value  \n The ID of the indicator specified by `nIndex`.  \n  \n##  <a name=\"cstatusbar__getitemrect\"></a>  CStatusBar::GetItemRect  \n Copies the coordinates of the indicator specified by `nIndex` into the structure pointed to by `lpRect`.  \n  \n```  \nvoid GetItemRect(\n    int nIndex,  \n    LPRECT lpRect) const;\n\n \n```  \n  \n### Parameters  \n `nIndex`  \n Index of the indicator whose rectangle coordinates are to be retrieved.  \n  \n `lpRect`  \n Points to a [RECT](http://msdn.microsoft.com/library/windows/desktop/dd162897) structure or a [CRect](../../atl-mfc-shared/reference/crect-class.md) object that will receive the coordinates of the indicator specified by `nIndex`.  \n  \n### Remarks  \n Coordinates are in pixels relative to the upper-left corner of the status bar.  \n  \n##  <a name=\"cstatusbar__getpaneinfo\"></a>  CStatusBar::GetPaneInfo  \n Sets `nID`, `nStyle`, and `cxWidth` to the ID, style, and width of the indicator pane at the location specified by `nIndex`.  \n  \n```  \nvoid GetPaneInfo(\n    int nIndex,  \n    UINT& nID,  \n    UINT& nStyle,  \n    int& cxWidth) const;\n\n \n```  \n  \n### Parameters  \n `nIndex`  \n Index of the pane whose information is to be retrieved.  \n  \n `nID`  \n Reference to a **UINT** that is set to the ID of the pane.  \n  \n `nStyle`  \n Reference to a **UINT** that is set to the style of the pane.  \n  \n `cxWidth`  \n Reference to an integer that is set to the width of the pane.  \n  \n##  <a name=\"cstatusbar__getpanestyle\"></a>  CStatusBar::GetPaneStyle  \n Call this member function to retrieve the style of a status bar's pane.  \n  \n```  \nUINT GetPaneStyle(int nIndex) const;\n\n \n```  \n  \n### Parameters  \n `nIndex`  \n Index of the pane whose style is to be retrieved.  \n  \n### Return Value  \n The style of the status-bar pane specified by `nIndex`.  \n  \n### Remarks  \n A pane's style determines how the pane appears.  \n  \n For a list of styles available for status bars, see [Create](#cstatusbar__create).  \n  \n##  <a name=\"cstatusbar__getpanetext\"></a>  CStatusBar::GetPaneText  \n Call this member function to retrieve the text that appears in a status-bar pane.  \n  \n```  \nCString GetPaneText(\n    int nIndex) const;\n\n \n \nvoid GetPaneText(\n    int nIndex,  \n    CString& rString) const;\n\n \n```  \n  \n### Parameters  \n `nIndex`  \n Index of the pane whose text is to be retrieved.  \n  \n `rString`  \n A reference to a [CString](../../atl-mfc-shared/reference/cstringt-class.md) object that contains the text to be retrieved.  \n  \n### Return Value  \n A `CString` object containing the pane's text.  \n  \n### Remarks  \n The second form of this member function fills a `CString` object with the string text.  \n  \n##  <a name=\"cstatusbar__getstatusbarctrl\"></a>  CStatusBar::GetStatusBarCtrl  \n This member function allows direct access to the underlying common control.  \n  \n```  \nCStatusBarCtrl& GetStatusBarCtrl() const;\n\n \n```  \n  \n### Return Value  \n Contains a reference to a [CStatusBarCtrl](../../mfc/reference/cstatusbarctrl-class.md) object.  \n  \n### Remarks  \n Use `GetStatusBarCtrl` to take advantage of the functionality of the Windows status-bar common control, and to take advantage of the support [CStatusBarCtrl](../../mfc/reference/cstatusbarctrl-class.md) provides for status-bar customization. For example, by using the common control, you can specify a style that includes a sizing grip on the status bar, or you can specify a style to have the status bar appear at the top of the parent window's client area.  \n  \n For more general information about common controls, See [Common Controls](http://msdn.microsoft.com/library/windows/desktop/bb775493) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n##  <a name=\"cstatusbar__setindicators\"></a>  CStatusBar::SetIndicators  \n Sets each indicator's ID to the value specified by the corresponding element of the array `lpIDArray`, loads the string resource specified by each ID, and sets the indicator's text to the string.  \n  \n```  \nBOOL SetIndicators(\n    const UINT* lpIDArray,  \n    int nIDCount);\n```  \n  \n### Parameters  \n `lpIDArray`  \n Pointer to an array of IDs.  \n  \n `nIDCount`  \n Number of elements in the array pointed to by `lpIDArray`.  \n  \n### Return Value  \n Nonzero if successful; otherwise 0.  \n  \n##  <a name=\"cstatusbar__setpaneinfo\"></a>  CStatusBar::SetPaneInfo  \n Sets the specified indicator pane to a new ID, style, and width.  \n  \n```  \nvoid SetPaneInfo(\n    int nIndex,  \n    UINT nID,  \n    UINT nStyle,  \n    int cxWidth);\n```  \n  \n### Parameters  \n `nIndex`  \n Index of the indicator pane whose style is to be set.  \n  \n `nID`  \n New ID for the indicator pane.  \n  \n `nStyle`  \n New style for the indicator pane.  \n  \n `cxWidth`  \n New width for the indicator pane.  \n  \n### Remarks  \n The following indicator styles are supported:  \n  \n- **SBPS_NOBORDERS** No 3-D border around the pane.  \n  \n- **SBPS_POPOUT** Reverse border so that text \"pops out.\"  \n  \n- **SBPS_DISABLED** Do not draw text.  \n  \n- **SBPS_STRETCH** Stretch pane to fill unused space. Only one pane per status bar can have this style.  \n  \n- **SBPS_NORMAL** No stretch, borders, or pop-out.  \n  \n##  <a name=\"cstatusbar__setpanestyle\"></a>  CStatusBar::SetPaneStyle  \n Call this member function to set the style of a status bar's pane.  \n  \n```  \nvoid SetPaneStyle(\n    int nIndex,  \n    UINT nStyle);\n```  \n  \n### Parameters  \n `nIndex`  \n Index of the pane whose style is to be set.  \n  \n `nStyle`  \n Style of the pane whose style is to be set.  \n  \n### Remarks  \n A pane's style determines how the pane appears.  \n  \n For a list of styles available for status bars, see [SetPaneInfo](#cstatusbar__setpaneinfo).  \n  \n##  <a name=\"cstatusbar__setpanetext\"></a>  CStatusBar::SetPaneText  \n Call this member function to set the pane text to the string pointed to by `lpszNewText`.  \n  \n```  \nBOOL SetPaneText(\n    int nIndex,  \n    LPCTSTR lpszNewText,  \n    BOOL bUpdate = TRUE);\n```  \n  \n### Parameters  \n `nIndex`  \n Index of the pane whose text is to be set.  \n  \n `lpszNewText`  \n Pointer to the new pane text.  \n  \n *bUpdate*  \n If **TRUE**, the pane is invalidated after the text is set.  \n  \n### Return Value  \n Nonzero if successful; otherwise 0.  \n  \n### Remarks  \n After you call `SetPaneText`, you must add a UI update handler to display the new text in the status bar.  \n  \n### Example  \n [!code-cpp[NVC_MFCDocView#176](../../mfc/codesnippet/cpp/cstatusbar-class_1.cpp)]  \n  \n [!code-cpp[NVC_MFCDocView#177](../../mfc/codesnippet/cpp/cstatusbar-class_2.cpp)]  \n  \n [!code-cpp[NVC_MFCDocView#178](../../mfc/codesnippet/cpp/cstatusbar-class_3.cpp)]  \n  \n## See Also  \n [MFC Sample CTRLBARS](../../visual-cpp-samples.md)   \n [MFC Sample DLGCBR32](../../visual-cpp-samples.md)   \n [CControlBar Class](../../mfc/reference/ccontrolbar-class.md)   \n [Hierarchy Chart](../../mfc/hierarchy-chart.md)   \n [CStatusBarCtrl Class](../../mfc/reference/cstatusbarctrl-class.md)   \n [CControlBar Class](../../mfc/reference/ccontrolbar-class.md)\n"}