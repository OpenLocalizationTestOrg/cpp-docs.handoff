{"nodes":[{"pos":[12,46],"content":"_putenv, _wputenv | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"_putenv, _wputenv | Microsoft Docs","pos":[0,34]}]},{"pos":[1225,1242],"content":"_putenv, _wputenv","linkify":"_putenv, _wputenv","nodes":[{"content":"_putenv, _wputenv","pos":[0,17]}]},{"content":"Creates, modifies, or removes environment variables.","pos":[1243,1295]},{"content":"More secure versions of these functions are available; see <bpt id=\"p1\">[</bpt>_putenv_s, _wputenv_s<ept id=\"p1\">](../../c-runtime-library/reference/putenv-s-wputenv-s.md)</ept>.","pos":[1296,1436],"source":" More secure versions of these functions are available; see [_putenv_s, _wputenv_s](../../c-runtime-library/reference/putenv-s-wputenv-s.md)."},{"pos":[1444,1664],"content":"[!IMPORTANT]\n This API cannot be used in applications that execute in the Windows Runtime. For more information, see [CRT functions not supported with /ZW](http://msdn.microsoft.com/library/windows/apps/jj606124.aspx).","leadings":["","> "],"nodes":[{"content":" This API cannot be used in applications that execute in the Windows Runtime. For more information, see [CRT functions not supported with /ZW](http://msdn.microsoft.com/library/windows/apps/jj606124.aspx).","pos":[13,218],"nodes":[{"content":"This API cannot be used in applications that execute in the Windows Runtime.","pos":[1,77]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>CRT functions not supported with /ZW<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/apps/jj606124.aspx)</ept>.","pos":[78,205],"source":" For more information, see [CRT functions not supported with /ZW](http://msdn.microsoft.com/library/windows/apps/jj606124.aspx)."}]}]},{"pos":[1673,1679],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[1805,1815],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Environment-string definition.","pos":[1834,1864]},{"pos":[1873,1885],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Return 0 if successful or –1 in the case of an error.","pos":[1889,1942]},{"pos":[1951,1958],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The <ph id=\"ph1\">`_putenv`</ph> function adds new environment variables or modifies the values of existing environment variables.","pos":[1962,2073],"source":"The `_putenv` function adds new environment variables or modifies the values of existing environment variables."},{"content":"Environment variables define the environment in which a process executes (for example, the default search path for libraries to be linked with a program).","pos":[2074,2228]},{"content":"<ph id=\"ph1\">`_wputenv`</ph> is a wide-character version of <ph id=\"ph2\">`_putenv`</ph>; the <ph id=\"ph3\">`envstring`</ph> argument to <ph id=\"ph4\">`_wputenv`</ph> is a wide-character string.","pos":[2229,2348],"source":"`_wputenv` is a wide-character version of `_putenv`; the `envstring` argument to `_wputenv` is a wide-character string."},{"pos":[2358,2387],"content":"Generic-Text Routine Mappings","linkify":"Generic-Text Routine Mappings","nodes":[{"content":"Generic-Text Routine Mappings","pos":[0,29]}]},{"content":"Tchar.h routine","pos":[2394,2409]},{"content":"_UNICODE and _MBCS not defined","pos":[2410,2440]},{"content":"_MBCS defined","pos":[2441,2454]},{"content":"_UNICODE defined","pos":[2455,2471]},{"content":"The <ph id=\"ph1\">`envstring`</ph> argument must be a pointer to a string of the form <ph id=\"ph2\">`varname=string`</ph>, where <ph id=\"ph3\">`varname`</ph> is the name of the environment variable to be added or modified and <ph id=\"ph4\">`string`</ph> is the variable's value.","pos":[2635,2837],"source":"The `envstring` argument must be a pointer to a string of the form `varname=string`, where `varname` is the name of the environment variable to be added or modified and `string` is the variable's value."},{"content":"If <ph id=\"ph1\">`varname`</ph> is already part of the environment, its value is replaced by <ph id=\"ph2\">`string`</ph>; otherwise, the new <ph id=\"ph3\">`varname`</ph> variable and its <ph id=\"ph4\">`string`</ph> value are added to the environment.","pos":[2838,3012],"source":" If `varname` is already part of the environment, its value is replaced by `string`; otherwise, the new `varname` variable and its `string` value are added to the environment."},{"content":"You can remove a variable from the environment by specifying an empty <ph id=\"ph1\">`string`</ph> — in other words, by specifying only <ph id=\"ph2\">`varname=`</ph>.","pos":[3013,3140],"source":" You can remove a variable from the environment by specifying an empty `string` — in other words, by specifying only `varname=`."},{"content":"<ph id=\"ph1\">`_putenv`</ph> and <ph id=\"ph2\">`_wputenv`</ph> affect only the environment that is local to the current process; you cannot use them to modify the command-level environment.","pos":[3147,3298],"source":"`_putenv` and `_wputenv` affect only the environment that is local to the current process; you cannot use them to modify the command-level environment."},{"content":"That is, these functions operate only on data structures accessible to the run-time library and not on the environment segment created for a process by the operating system.","pos":[3299,3472]},{"content":"When the current process terminates, the environment reverts to the level of the calling process (in most cases, the operating-system level).","pos":[3473,3614]},{"content":"However, the modified environment can be passed to any new processes created by <ph id=\"ph1\">`_spawn`</ph>, <ph id=\"ph2\">`_exec`</ph>, or <ph id=\"ph3\">`system`</ph>, and these new processes get any new items added by <ph id=\"ph4\">`_putenv`</ph> and <ph id=\"ph5\">`_wputenv`</ph>.","pos":[3615,3803],"source":" However, the modified environment can be passed to any new processes created by `_spawn`, `_exec`, or `system`, and these new processes get any new items added by `_putenv` and `_wputenv`."},{"content":"Do not change an environment entry directly: instead, use <ph id=\"ph1\">`_putenv`</ph> or <ph id=\"ph2\">`_wputenv`</ph> to change it.","pos":[3810,3905],"source":"Do not change an environment entry directly: instead, use `_putenv` or `_wputenv` to change it."},{"content":"In particular, direct freeing elements of the <ph id=\"ph1\">`_environ[]`</ph> global array might lead to invalid memory being addressed.","pos":[3906,4023],"source":" In particular, direct freeing elements of the `_environ[]` global array might lead to invalid memory being addressed."},{"content":"<ph id=\"ph1\">`getenv`</ph> and <ph id=\"ph2\">`_putenv`</ph> use the global variable <ph id=\"ph3\">`_environ`</ph> to access the environment table; <ph id=\"ph4\">`_wgetenv`</ph> and <ph id=\"ph5\">`_wputenv`</ph> use <ph id=\"ph6\">`_wenviron`</ph>.","pos":[4030,4163],"source":"`getenv` and `_putenv` use the global variable `_environ` to access the environment table; `_wgetenv` and `_wputenv` use `_wenviron`."},{"content":"<ph id=\"ph1\">`_putenv`</ph> and <ph id=\"ph2\">`_wputenv`</ph> might change the value of <ph id=\"ph3\">`_environ`</ph> and <ph id=\"ph4\">`_wenviron`</ph>, thus invalidating the <ph id=\"ph5\">`_envp`</ph> argument to <ph id=\"ph6\">`main`</ph> and the _<ph id=\"ph7\">`wenvp`</ph> argument to <ph id=\"ph8\">`wmain`</ph>.","pos":[4164,4329],"source":"`_putenv` and `_wputenv` might change the value of `_environ` and `_wenviron`, thus invalidating the `_envp` argument to `main` and the _`wenvp` argument to `wmain`."},{"content":"Therefore, it is safer to use <ph id=\"ph1\">`_environ`</ph> or <ph id=\"ph2\">`_wenviron`</ph> to access the environment information.","pos":[4330,4424],"source":" Therefore, it is safer to use `_environ` or `_wenviron` to access the environment information."},{"content":"For more information about the relation of <ph id=\"ph1\">`_putenv`</ph> and <ph id=\"ph2\">`_wputenv`</ph> to global variables, see <bpt id=\"p1\">[</bpt>_environ, _wenviron<ept id=\"p1\">](../../c-runtime-library/environ-wenviron.md)</ept>.","pos":[4425,4585],"source":" For more information about the relation of `_putenv` and `_wputenv` to global variables, see [_environ, _wenviron](../../c-runtime-library/environ-wenviron.md)."},{"pos":[4593,4838],"content":"[!NOTE]\n The `_putenv` and `_getenv` families of functions are not thread-safe. `_getenv` could return a string pointer while `_putenv` is modifying the string, causing random failures. Make sure that calls to these functions are synchronized.","leadings":["","> "],"nodes":[{"content":" The `_putenv` and `_getenv` families of functions are not thread-safe. `_getenv` could return a string pointer while `_putenv` is modifying the string, causing random failures. Make sure that calls to these functions are synchronized.","pos":[8,243],"nodes":[{"content":"The <ph id=\"ph1\">`_putenv`</ph> and <ph id=\"ph2\">`_getenv`</ph> families of functions are not thread-safe.","pos":[1,71],"source":" The `_putenv` and `_getenv` families of functions are not thread-safe."},{"content":"<ph id=\"ph1\">`_getenv`</ph> could return a string pointer while <ph id=\"ph2\">`_putenv`</ph> is modifying the string, causing random failures.","pos":[72,177],"source":"`_getenv` could return a string pointer while `_putenv` is modifying the string, causing random failures."},{"content":"Make sure that calls to these functions are synchronized.","pos":[178,235]}]}]},{"pos":[4847,4859],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"content":"Routine","pos":[4866,4873]},{"content":"Required header","pos":[4874,4889]},{"content":"<ph id=\"ph1\">\\&lt;</ph>stdlib.h&gt;","pos":[4944,4955],"source":"\\<stdlib.h>"},{"content":"<ph id=\"ph1\">\\&lt;</ph>stdlib.h&gt; or <ph id=\"ph2\">\\&lt;</ph>wchar.h&gt;","pos":[4971,4996],"source":"\\<stdlib.h> or \\<wchar.h>"},{"pos":[5004,5102],"content":"For more compatibility information, see <bpt id=\"p1\">[</bpt>Compatibility<ept id=\"p1\">](../../c-runtime-library/compatibility.md)</ept>.","source":"For more compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md)."},{"pos":[5111,5118],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[5122,5236],"content":"For a sample of how to use <ph id=\"ph1\">`_putenv`</ph>, see <bpt id=\"p1\">[</bpt>getenv, _wgetenv<ept id=\"p1\">](../../c-runtime-library/reference/getenv-wgetenv.md)</ept>.","source":"For a sample of how to use `_putenv`, see [getenv, _wgetenv](../../c-runtime-library/reference/getenv-wgetenv.md)."},{"pos":[5245,5270],"content":".NET Framework Equivalent","linkify":".NET Framework Equivalent","nodes":[{"content":".NET Framework Equivalent","pos":[0,25]}]},{"content":"Not applicable.","pos":[5274,5289]},{"content":"To call the standard C function, use <ph id=\"ph1\">`PInvoke`</ph>.","pos":[5290,5337],"source":" To call the standard C function, use `PInvoke`."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Platform Invoke Examples<ept id=\"p1\">](http://msdn.microsoft.com/Library/15926806-f0b7-487e-93a6-4e9367ec689f)</ept>.","pos":[5338,5463],"source":" For more information, see [Platform Invoke Examples](http://msdn.microsoft.com/Library/15926806-f0b7-487e-93a6-4e9367ec689f)."},{"pos":[5472,5480],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Process and Environment Control<ept id=\"p1\">](../../c-runtime-library/process-and-environment-control.md)</ept><ph id=\"ph1\"> </ph>","pos":[5484,5578],"source":"[Process and Environment Control](../../c-runtime-library/process-and-environment-control.md) "},{"content":"<bpt id=\"p1\"> [</bpt>getenv, _wgetenv<ept id=\"p1\">](../../c-runtime-library/reference/getenv-wgetenv.md)</ept><ph id=\"ph1\"> </ph>","pos":[5581,5654],"source":" [getenv, _wgetenv](../../c-runtime-library/reference/getenv-wgetenv.md) "},{"content":"<bpt id=\"p1\"> [</bpt>_searchenv, _wsearchenv<ept id=\"p1\">](../../c-runtime-library/reference/searchenv-wsearchenv.md)</ept>","pos":[5657,5742],"source":" [_searchenv, _wsearchenv](../../c-runtime-library/reference/searchenv-wsearchenv.md)"}],"content":"---\ntitle: \"_putenv, _wputenv | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\napiname: \n  - \"_putenv\"\n  - \"_wputenv\"\napilocation: \n  - \"msvcrt.dll\"\n  - \"msvcr80.dll\"\n  - \"msvcr90.dll\"\n  - \"msvcr100.dll\"\n  - \"msvcr100_clr0400.dll\"\n  - \"msvcr110.dll\"\n  - \"msvcr110_clr0400.dll\"\n  - \"msvcr120.dll\"\n  - \"msvcr120_clr0400.dll\"\n  - \"ucrtbase.dll\"\n  - \"api-ms-win-crt-environment-l1-1-0.dll\"\napitype: \"DLLExport\"\nf1_keywords: \n  - \"_tputenv\"\n  - \"_wputenv\"\n  - \"_putenv\"\n  - \"wputenv\"\n  - \"tputenv\"\ndev_langs: \n  - \"C++\"\n  - \"C\"\nhelpviewer_keywords: \n  - \"_putenv function\"\n  - \"environment variables, deleting\"\n  - \"putenv function\"\n  - \"tputenv function\"\n  - \"environment variables, creating\"\n  - \"wputenv function\"\n  - \"_wputenv function\"\n  - \"_tputenv function\"\n  - \"environment variables, modifying\"\nms.assetid: 9ba9b7fd-276e-45df-8420-d70c4204b8bd\ncaps.latest.revision: 22\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# _putenv, _wputenv\nCreates, modifies, or removes environment variables. More secure versions of these functions are available; see [_putenv_s, _wputenv_s](../../c-runtime-library/reference/putenv-s-wputenv-s.md).  \n  \n> [!IMPORTANT]\n>  This API cannot be used in applications that execute in the Windows Runtime. For more information, see [CRT functions not supported with /ZW](http://msdn.microsoft.com/library/windows/apps/jj606124.aspx).  \n  \n## Syntax  \n  \n```  \nint _putenv(  \n   const char *envstring   \n);  \nint _wputenv(  \n   const wchar_t *envstring   \n);  \n```  \n  \n#### Parameters  \n `envstring`  \n Environment-string definition.  \n  \n## Return Value  \n Return 0 if successful or –1 in the case of an error.  \n  \n## Remarks  \n The `_putenv` function adds new environment variables or modifies the values of existing environment variables. Environment variables define the environment in which a process executes (for example, the default search path for libraries to be linked with a program). `_wputenv` is a wide-character version of `_putenv`; the `envstring` argument to `_wputenv` is a wide-character string.  \n  \n### Generic-Text Routine Mappings  \n  \n|Tchar.h routine|_UNICODE and _MBCS not defined|_MBCS defined|_UNICODE defined|  \n|---------------------|--------------------------------------|--------------------|-----------------------|  \n|`_tputenv`|`_putenv`|`_putenv`|`_wputenv`|  \n  \n The `envstring` argument must be a pointer to a string of the form `varname=string`, where `varname` is the name of the environment variable to be added or modified and `string` is the variable's value. If `varname` is already part of the environment, its value is replaced by `string`; otherwise, the new `varname` variable and its `string` value are added to the environment. You can remove a variable from the environment by specifying an empty `string` — in other words, by specifying only `varname=`.  \n  \n `_putenv` and `_wputenv` affect only the environment that is local to the current process; you cannot use them to modify the command-level environment. That is, these functions operate only on data structures accessible to the run-time library and not on the environment segment created for a process by the operating system. When the current process terminates, the environment reverts to the level of the calling process (in most cases, the operating-system level). However, the modified environment can be passed to any new processes created by `_spawn`, `_exec`, or `system`, and these new processes get any new items added by `_putenv` and `_wputenv`.  \n  \n Do not change an environment entry directly: instead, use `_putenv` or `_wputenv` to change it. In particular, direct freeing elements of the `_environ[]` global array might lead to invalid memory being addressed.  \n  \n `getenv` and `_putenv` use the global variable `_environ` to access the environment table; `_wgetenv` and `_wputenv` use `_wenviron`. `_putenv` and `_wputenv` might change the value of `_environ` and `_wenviron`, thus invalidating the `_envp` argument to `main` and the _`wenvp` argument to `wmain`. Therefore, it is safer to use `_environ` or `_wenviron` to access the environment information. For more information about the relation of `_putenv` and `_wputenv` to global variables, see [_environ, _wenviron](../../c-runtime-library/environ-wenviron.md).  \n  \n> [!NOTE]\n>  The `_putenv` and `_getenv` families of functions are not thread-safe. `_getenv` could return a string pointer while `_putenv` is modifying the string, causing random failures. Make sure that calls to these functions are synchronized.  \n  \n## Requirements  \n  \n|Routine|Required header|  \n|-------------|---------------------|  \n|`_putenv`|\\<stdlib.h>|  \n|`_wputenv`|\\<stdlib.h> or \\<wchar.h>|  \n  \n For more compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md).  \n  \n## Example  \n For a sample of how to use `_putenv`, see [getenv, _wgetenv](../../c-runtime-library/reference/getenv-wgetenv.md).  \n  \n## .NET Framework Equivalent  \n Not applicable. To call the standard C function, use `PInvoke`. For more information, see [Platform Invoke Examples](http://msdn.microsoft.com/Library/15926806-f0b7-487e-93a6-4e9367ec689f).  \n  \n## See Also  \n [Process and Environment Control](../../c-runtime-library/process-and-environment-control.md)   \n [getenv, _wgetenv](../../c-runtime-library/reference/getenv-wgetenv.md)   \n [_searchenv, _wsearchenv](../../c-runtime-library/reference/searchenv-wsearchenv.md)"}