{"nodes":[{"pos":[12,49],"content":"COleDropTarget Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"COleDropTarget Class | Microsoft Docs","pos":[0,37]}]},{"pos":[700,720],"content":"COleDropTarget Class","linkify":"COleDropTarget Class","nodes":[{"content":"COleDropTarget Class","pos":[0,20]}]},{"content":"Provides the communication mechanism between a window and the OLE libraries.","pos":[721,797]},{"pos":[806,812],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[879,886],"content":"Members","linkify":"Members","nodes":[{"content":"Members","pos":[0,7]}]},{"pos":[896,915],"content":"Public Constructors","linkify":"Public Constructors","nodes":[{"content":"Public Constructors","pos":[0,19]}]},{"content":"Name","pos":[922,926]},{"content":"Description","pos":[927,938]},{"pos":[976,1041],"content":"<bpt id=\"p1\">[</bpt>COleDropTarget::COleDropTarget<ept id=\"p1\">](#coledroptarget__coledroptarget)</ept>","source":"[COleDropTarget::COleDropTarget](#coledroptarget__coledroptarget)"},{"pos":[1042,1079],"content":"Constructs a <ph id=\"ph1\">`COleDropTarget`</ph> object.","source":"Constructs a `COleDropTarget` object."},{"pos":[1090,1104],"content":"Public Methods","linkify":"Public Methods","nodes":[{"content":"Public Methods","pos":[0,14]}]},{"content":"Name","pos":[1111,1115]},{"content":"Description","pos":[1116,1127]},{"pos":[1165,1224],"content":"<bpt id=\"p1\">[</bpt>COleDropTarget::OnDragEnter<ept id=\"p1\">](#coledroptarget__ondragenter)</ept>","source":"[COleDropTarget::OnDragEnter](#coledroptarget__ondragenter)"},{"content":"Called when the cursor first enters the window.","pos":[1225,1272]},{"pos":[1277,1336],"content":"<bpt id=\"p1\">[</bpt>COleDropTarget::OnDragLeave<ept id=\"p1\">](#coledroptarget__ondragleave)</ept>","source":"[COleDropTarget::OnDragLeave](#coledroptarget__ondragleave)"},{"content":"Called when the cursor is dragged out of the window.","pos":[1337,1389]},{"pos":[1394,1451],"content":"<bpt id=\"p1\">[</bpt>COleDropTarget::OnDragOver<ept id=\"p1\">](#coledroptarget__ondragover)</ept>","source":"[COleDropTarget::OnDragOver](#coledroptarget__ondragover)"},{"content":"Called repeatedly when the cursor is dragged over the window.","pos":[1452,1513]},{"pos":[1518,1579],"content":"<bpt id=\"p1\">[</bpt>COleDropTarget::OnDragScroll<ept id=\"p1\">](#coledroptarget__ondragscroll)</ept>","source":"[COleDropTarget::OnDragScroll](#coledroptarget__ondragscroll)"},{"content":"Called to determine whether the cursor is dragged into the scroll region of the window.","pos":[1580,1667]},{"pos":[1672,1721],"content":"<bpt id=\"p1\">[</bpt>COleDropTarget::OnDrop<ept id=\"p1\">](#coledroptarget__ondrop)</ept>","source":"[COleDropTarget::OnDrop](#coledroptarget__ondrop)"},{"content":"Called when data is dropped into the window, default handler.","pos":[1722,1783]},{"pos":[1788,1841],"content":"<bpt id=\"p1\">[</bpt>COleDropTarget::OnDropEx<ept id=\"p1\">](#coledroptarget__ondropex)</ept>","source":"[COleDropTarget::OnDropEx](#coledroptarget__ondropex)"},{"content":"Called when data is dropped into the window, initial handler.","pos":[1842,1903]},{"pos":[1908,1961],"content":"<bpt id=\"p1\">[</bpt>COleDropTarget::Register<ept id=\"p1\">](#coledroptarget__register)</ept>","source":"[COleDropTarget::Register](#coledroptarget__register)"},{"content":"Registers the window as a valid drop target.","pos":[1962,2006]},{"pos":[2011,2060],"content":"<bpt id=\"p1\">[</bpt>COleDropTarget::Revoke<ept id=\"p1\">](#coledroptarget__revoke)</ept>","source":"[COleDropTarget::Revoke](#coledroptarget__revoke)"},{"content":"Causes the window to cease being a valid drop target.","pos":[2061,2114]},{"pos":[2124,2131],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Creating an object of this class allows a window to accept data through the OLE drag-and-drop mechanism.","pos":[2135,2239]},{"pos":[2246,2483],"content":"To get a window to accept drop commands, you should first create an object of the <ph id=\"ph1\">`COleDropTarget`</ph> class, and then call the <bpt id=\"p1\">[</bpt>Register<ept id=\"p1\">](#coledroptarget__register)</ept> function with a pointer to the desired <ph id=\"ph2\">`CWnd`</ph> object as the only parameter.","source":"To get a window to accept drop commands, you should first create an object of the `COleDropTarget` class, and then call the [Register](#coledroptarget__register) function with a pointer to the desired `CWnd` object as the only parameter."},{"pos":[2490,2620],"content":"For more information on drag-and-drop operations using OLE, see the article <bpt id=\"p1\">[</bpt>Drag and Drop (OLE)<ept id=\"p1\">](../../mfc/drag-and-drop-ole.md)</ept>.","source":"For more information on drag-and-drop operations using OLE, see the article [Drag and Drop (OLE)](../../mfc/drag-and-drop-ole.md)."},{"pos":[2629,2650],"content":"Inheritance Hierarchy","linkify":"Inheritance Hierarchy","nodes":[{"content":"Inheritance Hierarchy","pos":[0,21]}]},{"pos":[2654,2701],"content":"<bpt id=\"p1\">[</bpt>CObject<ept id=\"p1\">](../../mfc/reference/cobject-class.md)</ept>","source":"[CObject](../../mfc/reference/cobject-class.md)"},{"pos":[2708,2761],"content":"<bpt id=\"p1\">[</bpt>CCmdTarget<ept id=\"p1\">](../../mfc/reference/ccmdtarget-class.md)</ept>","source":"[CCmdTarget](../../mfc/reference/ccmdtarget-class.md)"},{"pos":[2793,2805],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[2809,2829],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> afxole.h","source":"**Header:** afxole.h"},{"pos":[2839,2916],"content":"<bpt id=\"p1\">&lt;a name=\"coledroptarget__coledroptarget\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  COleDropTarget::COleDropTarget","linkify":"<a name=\"coledroptarget__coledroptarget\"></a>  COleDropTarget::COleDropTarget","source":"<a name=\"coledroptarget__coledroptarget\"></a>  COleDropTarget::COleDropTarget"},{"pos":[2920,2967],"content":"Constructs an object of class <ph id=\"ph1\">`COleDropTarget`</ph>.","source":"Constructs an object of class `COleDropTarget`."},{"pos":[3010,3017],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[3021,3103],"content":"Call <bpt id=\"p1\">[</bpt>Register<ept id=\"p1\">](#coledroptarget__register)</ept> to associate this object with a window.","source":"Call [Register](#coledroptarget__register) to associate this object with a window."},{"pos":[3113,3184],"content":"<bpt id=\"p1\">&lt;a name=\"coledroptarget__ondragenter\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  COleDropTarget::OnDragEnter","linkify":"<a name=\"coledroptarget__ondragenter\"></a>  COleDropTarget::OnDragEnter","source":"<a name=\"coledroptarget__ondragenter\"></a>  COleDropTarget::OnDragEnter"},{"content":"Called by the framework when the cursor is first dragged into the window.","pos":[3188,3261]},{"pos":[3414,3424],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Points to the window the cursor is entering.","pos":[3438,3482]},{"content":"Points to the data object containing the data that can be dropped.","pos":[3506,3572]},{"content":"Contains the state of the modifier keys.","pos":[3595,3635]},{"content":"This is a combination of any number of the following: <bpt id=\"p1\">**</bpt>MK_CONTROL<ept id=\"p1\">**</ept>, <bpt id=\"p2\">**</bpt>MK_SHIFT<ept id=\"p2\">**</ept>, <bpt id=\"p3\">**</bpt>MK_ALT<ept id=\"p3\">**</ept>, <bpt id=\"p4\">**</bpt>MK_LBUTTON<ept id=\"p4\">**</ept>, <bpt id=\"p5\">**</bpt>MK_MBUTTON<ept id=\"p5\">**</ept>, and <bpt id=\"p6\">**</bpt>MK_RBUTTON<ept id=\"p6\">**</ept>.","pos":[3636,3783],"source":" This is a combination of any number of the following: **MK_CONTROL**, **MK_SHIFT**, **MK_ALT**, **MK_LBUTTON**, **MK_MBUTTON**, and **MK_RBUTTON**."},{"content":"Contains the current location of the cursor in client coordinates.","pos":[3801,3867]},{"pos":[3877,3889],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The effect that would result if a drop were attempted at the location specified by <ph id=\"ph1\">`point`</ph>.","pos":[3893,3984],"source":"The effect that would result if a drop were attempted at the location specified by `point`."},{"content":"It can be one or more of the following:","pos":[3985,4024]},{"pos":[4032,4078],"content":"<ph id=\"ph1\">`DROPEFFECT_NONE`</ph> A drop would not be allowed.","source":"`DROPEFFECT_NONE` A drop would not be allowed."},{"pos":[4086,4140],"content":"<ph id=\"ph1\">`DROPEFFECT_COPY`</ph> A copy operation would be performed.","source":"`DROPEFFECT_COPY` A copy operation would be performed."},{"pos":[4148,4202],"content":"<ph id=\"ph1\">`DROPEFFECT_MOVE`</ph> A move operation would be performed.","source":"`DROPEFFECT_MOVE` A move operation would be performed."},{"pos":[4210,4299],"content":"<ph id=\"ph1\">`DROPEFFECT_LINK`</ph> A link from the dropped data to the original data would be established.","source":"`DROPEFFECT_LINK` A link from the dropped data to the original data would be established."},{"pos":[4307,4399],"content":"<ph id=\"ph1\">`DROPEFFECT_SCROLL`</ph> A drag scroll operation is about to occur or is occurring in the target.","source":"`DROPEFFECT_SCROLL` A drag scroll operation is about to occur or is occurring in the target."},{"pos":[4409,4416],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Override this function to allow drop operations to occur in the window.","pos":[4420,4491]},{"content":"The default implementation calls <bpt id=\"p1\">[</bpt>CView::OnDragEnter<ept id=\"p1\">](../../mfc/reference/cview-class.md#cview__ondragenter)</ept>, which simply returns <ph id=\"ph1\">`DROPEFFECT_NONE`</ph> by default.","pos":[4492,4652],"source":" The default implementation calls [CView::OnDragEnter](../../mfc/reference/cview-class.md#cview__ondragenter), which simply returns `DROPEFFECT_NONE` by default."},{"pos":[4659,4829],"content":"For more information, see <bpt id=\"p1\">[</bpt>IDropTarget::DragEnter<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms680106)</ept> in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"For more information, see [IDropTarget::DragEnter](http://msdn.microsoft.com/library/windows/desktop/ms680106) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"pos":[4839,4910],"content":"<bpt id=\"p1\">&lt;a name=\"coledroptarget__ondragleave\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  COleDropTarget::OnDragLeave","linkify":"<a name=\"coledroptarget__ondragleave\"></a>  COleDropTarget::OnDragLeave","source":"<a name=\"coledroptarget__ondragleave\"></a>  COleDropTarget::OnDragLeave"},{"content":"Called by the framework when the cursor leaves the window while a dragging operation is in effect.","pos":[4914,5012]},{"pos":[5075,5085],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Points to the window the cursor is leaving.","pos":[5099,5142]},{"pos":[5152,5159],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Override this function if you want special behavior when the drag operation leaves the specified window.","pos":[5163,5267]},{"content":"The default implementation of this function calls <bpt id=\"p1\">[</bpt>CView::OnDragLeave<ept id=\"p1\">](../../mfc/reference/cview-class.md#cview__ondragleave)</ept>.","pos":[5268,5394],"source":" The default implementation of this function calls [CView::OnDragLeave](../../mfc/reference/cview-class.md#cview__ondragleave)."},{"pos":[5401,5571],"content":"For more information, see <bpt id=\"p1\">[</bpt>IDropTarget::DragLeave<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms680110)</ept> in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"For more information, see [IDropTarget::DragLeave](http://msdn.microsoft.com/library/windows/desktop/ms680110) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"pos":[5581,5650],"content":"<bpt id=\"p1\">&lt;a name=\"coledroptarget__ondragover\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  COleDropTarget::OnDragOver","linkify":"<a name=\"coledroptarget__ondragover\"></a>  COleDropTarget::OnDragOver","source":"<a name=\"coledroptarget__ondragover\"></a>  COleDropTarget::OnDragOver"},{"content":"Called by the framework when the cursor is dragged over the window.","pos":[5654,5721]},{"pos":[5873,5883],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Points to the window that the cursor is over.","pos":[5897,5942]},{"content":"Points to the data object that contains the data to be dropped.","pos":[5966,6029]},{"content":"Contains the state of the modifier keys.","pos":[6052,6092]},{"content":"This is a combination of any number of the following: <bpt id=\"p1\">**</bpt>MK_CONTROL<ept id=\"p1\">**</ept>, <bpt id=\"p2\">**</bpt>MK_SHIFT<ept id=\"p2\">**</ept>, <bpt id=\"p3\">**</bpt>MK_ALT<ept id=\"p3\">**</ept>, <bpt id=\"p4\">**</bpt>MK_LBUTTON<ept id=\"p4\">**</ept>, <bpt id=\"p5\">**</bpt>MK_MBUTTON<ept id=\"p5\">**</ept>, and <bpt id=\"p6\">**</bpt>MK_RBUTTON<ept id=\"p6\">**</ept>.","pos":[6093,6240],"source":" This is a combination of any number of the following: **MK_CONTROL**, **MK_SHIFT**, **MK_ALT**, **MK_LBUTTON**, **MK_MBUTTON**, and **MK_RBUTTON**."},{"content":"Contains the current location of the cursor in client coordinates.","pos":[6258,6324]},{"pos":[6334,6346],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The effect that would result if a drop were attempted at the location specified by <ph id=\"ph1\">`point`</ph>.","pos":[6350,6441],"source":"The effect that would result if a drop were attempted at the location specified by `point`."},{"content":"It can be one or more of the following:","pos":[6442,6481]},{"pos":[6489,6535],"content":"<ph id=\"ph1\">`DROPEFFECT_NONE`</ph> A drop would not be allowed.","source":"`DROPEFFECT_NONE` A drop would not be allowed."},{"pos":[6543,6597],"content":"<ph id=\"ph1\">`DROPEFFECT_COPY`</ph> A copy operation would be performed.","source":"`DROPEFFECT_COPY` A copy operation would be performed."},{"pos":[6605,6659],"content":"<ph id=\"ph1\">`DROPEFFECT_MOVE`</ph> A move operation would be performed.","source":"`DROPEFFECT_MOVE` A move operation would be performed."},{"pos":[6667,6756],"content":"<ph id=\"ph1\">`DROPEFFECT_LINK`</ph> A link from the dropped data to the original data would be established.","source":"`DROPEFFECT_LINK` A link from the dropped data to the original data would be established."},{"pos":[6764,6871],"content":"<ph id=\"ph1\">`DROPEFFECT_SCROLL`</ph> Indicates that a drag scroll operation is about to occur or is occurring in the target.","source":"`DROPEFFECT_SCROLL` Indicates that a drag scroll operation is about to occur or is occurring in the target."},{"pos":[6881,6888],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This function should be overridden to allow drop operations to occur in the window.","pos":[6892,6975]},{"content":"The default implementation of this function calls <bpt id=\"p1\">[</bpt>CView::OnDragOver<ept id=\"p1\">](../../mfc/reference/cview-class.md#cview__ondragover)</ept>, which returns <ph id=\"ph1\">`DROPEFFECT_NONE`</ph> by default.","pos":[6976,7144],"source":" The default implementation of this function calls [CView::OnDragOver](../../mfc/reference/cview-class.md#cview__ondragover), which returns `DROPEFFECT_NONE` by default."},{"content":"Because this function is called frequently during a drag-and-drop operation, it should be optimized as much as possible.","pos":[7145,7265]},{"pos":[7272,7441],"content":"For more information, see <bpt id=\"p1\">[</bpt>IDropTarget::DragOver<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms680129)</ept> in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"For more information, see [IDropTarget::DragOver](http://msdn.microsoft.com/library/windows/desktop/ms680129) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"pos":[7451,7458],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[7462,7551],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_MFCOleContainer#21<ept id=\"p2\">](../../mfc/codesnippet/cpp/coledroptarget-class_1.cpp)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_MFCOleContainer#21](../../mfc/codesnippet/cpp/coledroptarget-class_1.cpp)]"},{"pos":[7561,7634],"content":"<bpt id=\"p1\">&lt;a name=\"coledroptarget__ondragscroll\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  COleDropTarget::OnDragScroll","linkify":"<a name=\"coledroptarget__ondragscroll\"></a>  COleDropTarget::OnDragScroll","source":"<a name=\"coledroptarget__ondragscroll\"></a>  COleDropTarget::OnDragScroll"},{"pos":[7638,7822],"content":"Called by the framework before calling <bpt id=\"p1\">[</bpt>OnDragEnter<ept id=\"p1\">](#coledroptarget__ondragenter)</ept> or <bpt id=\"p2\">[</bpt>OnDragOver<ept id=\"p2\">](#coledroptarget__ondragover)</ept> to determine whether <ph id=\"ph1\">`point`</ph> is in the scrolling region.","source":"Called by the framework before calling [OnDragEnter](#coledroptarget__ondragenter) or [OnDragOver](#coledroptarget__ondragover) to determine whether `point` is in the scrolling region."},{"pos":[7941,7951],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Points to the window the cursor is currently over.","pos":[7965,8015]},{"content":"Contains the state of the modifier keys.","pos":[8038,8078]},{"content":"This is a combination of any number of the following: <bpt id=\"p1\">**</bpt>MK_CONTROL<ept id=\"p1\">**</ept>, <bpt id=\"p2\">**</bpt>MK_SHIFT<ept id=\"p2\">**</ept>, <bpt id=\"p3\">**</bpt>MK_ALT<ept id=\"p3\">**</ept>, <bpt id=\"p4\">**</bpt>MK_LBUTTON<ept id=\"p4\">**</ept>, <bpt id=\"p5\">**</bpt>MK_MBUTTON<ept id=\"p5\">**</ept>, and <bpt id=\"p6\">**</bpt>MK_RBUTTON<ept id=\"p6\">**</ept>.","pos":[8079,8226],"source":" This is a combination of any number of the following: **MK_CONTROL**, **MK_SHIFT**, **MK_ALT**, **MK_LBUTTON**, **MK_MBUTTON**, and **MK_RBUTTON**."},{"content":"Contains the location of the cursor, in pixels, relative to the screen.","pos":[8244,8315]},{"pos":[8325,8337],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The effect that would result if a drop were attempted at the location specified by <ph id=\"ph1\">`point`</ph>.","pos":[8341,8432],"source":"The effect that would result if a drop were attempted at the location specified by `point`."},{"content":"It can be one or more of the following:","pos":[8433,8472]},{"pos":[8480,8526],"content":"<ph id=\"ph1\">`DROPEFFECT_NONE`</ph> A drop would not be allowed.","source":"`DROPEFFECT_NONE` A drop would not be allowed."},{"pos":[8534,8588],"content":"<ph id=\"ph1\">`DROPEFFECT_COPY`</ph> A copy operation would be performed.","source":"`DROPEFFECT_COPY` A copy operation would be performed."},{"pos":[8596,8650],"content":"<ph id=\"ph1\">`DROPEFFECT_MOVE`</ph> A move operation would be performed.","source":"`DROPEFFECT_MOVE` A move operation would be performed."},{"pos":[8658,8747],"content":"<ph id=\"ph1\">`DROPEFFECT_LINK`</ph> A link from the dropped data to the original data would be established.","source":"`DROPEFFECT_LINK` A link from the dropped data to the original data would be established."},{"pos":[8755,8862],"content":"<ph id=\"ph1\">`DROPEFFECT_SCROLL`</ph> Indicates that a drag scroll operation is about to occur or is occurring in the target.","source":"`DROPEFFECT_SCROLL` Indicates that a drag scroll operation is about to occur or is occurring in the target."},{"pos":[8872,8879],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Override this function when you want to provide special behavior for this event.","pos":[8883,8963]},{"content":"The default implementation of this function calls <bpt id=\"p1\">[</bpt>CView::OnDragScroll<ept id=\"p1\">](../../mfc/reference/cview-class.md#cview__ondragscroll)</ept>, which returns <ph id=\"ph1\">`DROPEFFECT_NONE`</ph> and scrolls the window when the cursor is dragged into the default scroll region inside the border of the window.","pos":[8964,9238],"source":" The default implementation of this function calls [CView::OnDragScroll](../../mfc/reference/cview-class.md#cview__ondragscroll), which returns `DROPEFFECT_NONE` and scrolls the window when the cursor is dragged into the default scroll region inside the border of the window."},{"pos":[9248,9309],"content":"<bpt id=\"p1\">&lt;a name=\"coledroptarget__ondrop\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  COleDropTarget::OnDrop","linkify":"<a name=\"coledroptarget__ondrop\"></a>  COleDropTarget::OnDrop","source":"<a name=\"coledroptarget__ondrop\"></a>  COleDropTarget::OnDrop"},{"content":"Called by the framework when a drop operation is to occur.","pos":[9313,9371]},{"pos":[9518,9528],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Points to the window the cursor is currently over.","pos":[9542,9592]},{"content":"Points to the data object that contains the data to be dropped.","pos":[9616,9679]},{"content":"The effect that the user chose for the drop operation.","pos":[9702,9756]},{"content":"It can be one or more of the following:","pos":[9757,9796]},{"pos":[9804,9858],"content":"<ph id=\"ph1\">`DROPEFFECT_COPY`</ph> A copy operation would be performed.","source":"`DROPEFFECT_COPY` A copy operation would be performed."},{"pos":[9866,9920],"content":"<ph id=\"ph1\">`DROPEFFECT_MOVE`</ph> A move operation would be performed.","source":"`DROPEFFECT_MOVE` A move operation would be performed."},{"pos":[9928,10017],"content":"<ph id=\"ph1\">`DROPEFFECT_LINK`</ph> A link from the dropped data to the original data would be established.","source":"`DROPEFFECT_LINK` A link from the dropped data to the original data would be established."},{"pos":[10024,10106],"content":"`point`  \nContains the location of the cursor, in pixels, relative to the screen.","leadings":[""," "],"nodes":[{"content":"Contains the location of the cursor, in pixels, relative to the screen.","pos":[10,81]}]},{"pos":[10116,10128],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Nonzero if the drop is successful; otherwise 0.","pos":[10132,10179]},{"pos":[10189,10196],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The framework first calls <bpt id=\"p1\">[</bpt>OnDropEx<ept id=\"p1\">](#coledroptarget__ondropex)</ept>.","pos":[10200,10264],"source":"The framework first calls [OnDropEx](#coledroptarget__ondropex)."},{"content":"If the <ph id=\"ph1\">`OnDropEx`</ph> function does not handle the drop, the framework then calls this member function, <ph id=\"ph2\">`OnDrop`</ph>.","pos":[10265,10374],"source":" If the `OnDropEx` function does not handle the drop, the framework then calls this member function, `OnDrop`."},{"content":"Typically, the application overrides <bpt id=\"p1\">[</bpt>OnDropEx<ept id=\"p1\">](../../mfc/reference/cview-class.md#cview__ondropex)</ept> in the view class to handle right mouse-button drag and drop.","pos":[10375,10536],"source":" Typically, the application overrides [OnDropEx](../../mfc/reference/cview-class.md#cview__ondropex) in the view class to handle right mouse-button drag and drop."},{"content":"Typically, the view class <bpt id=\"p1\">[</bpt>OnDrop<ept id=\"p1\">](../../mfc/reference/cview-class.md#cview__ondrop)</ept> is used to handle simple drag and drop.","pos":[10537,10661],"source":" Typically, the view class [OnDrop](../../mfc/reference/cview-class.md#cview__ondrop) is used to handle simple drag and drop."},{"pos":[10668,10838],"content":"The default implementation of <ph id=\"ph1\">`COleDropTarget::OnDrop`</ph> calls <bpt id=\"p1\">[</bpt>CView::OnDrop<ept id=\"p1\">](../../mfc/reference/cview-class.md#cview__ondrop)</ept>, which simply returns <bpt id=\"p2\">**</bpt>FALSE<ept id=\"p2\">**</ept> by default.","source":"The default implementation of `COleDropTarget::OnDrop` calls [CView::OnDrop](../../mfc/reference/cview-class.md#cview__ondrop), which simply returns **FALSE** by default."},{"pos":[10845,11010],"content":"For more information, see <bpt id=\"p1\">[</bpt>IDropTarget::Drop<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms687242)</ept> in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"For more information, see [IDropTarget::Drop](http://msdn.microsoft.com/library/windows/desktop/ms687242) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"pos":[11020,11085],"content":"<bpt id=\"p1\">&lt;a name=\"coledroptarget__ondropex\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  COleDropTarget::OnDropEx","linkify":"<a name=\"coledroptarget__ondropex\"></a>  COleDropTarget::OnDropEx","source":"<a name=\"coledroptarget__ondropex\"></a>  COleDropTarget::OnDropEx"},{"content":"Called by the framework when a drop operation is to occur.","pos":[11089,11147]},{"pos":[11330,11340],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Points to the window the cursor is currently over.","pos":[11354,11404]},{"content":"Points to the data object that contains the data to be dropped.","pos":[11428,11491]},{"content":"The effect that the user chose for the default drop operation based on the current key state.","pos":[11515,11608]},{"content":"It can be <ph id=\"ph1\">`DROPEFFECT_NONE`</ph>.","pos":[11609,11637],"source":" It can be `DROPEFFECT_NONE`."},{"content":"Drop effects are discussed in the Remarks section.","pos":[11638,11688]},{"content":"A list of the drop effects that the drop source supports.","pos":[11709,11766]},{"content":"Drop effect values can be combined using the bitwise OR ( <bpt id=\"p1\">**</bpt>&amp;#124;<ept id=\"p1\">**</ept>) operation.","pos":[11767,11847],"source":" Drop effect values can be combined using the bitwise OR ( **&#124;**) operation."},{"content":"Drop effects are discussed in the Remarks section.","pos":[11848,11898]},{"content":"Contains the location of the cursor, in pixels, relative to the screen.","pos":[11916,11987]},{"pos":[11997,12009],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The drop effect that resulted from the drop attempt at the location specified by <ph id=\"ph1\">`point`</ph>.","pos":[12013,12102],"source":"The drop effect that resulted from the drop attempt at the location specified by `point`."},{"content":"Drop effects are discussed in the Remarks section.","pos":[12103,12153]},{"pos":[12163,12170],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The framework first calls this function.","pos":[12174,12214]},{"content":"If it does not handle the drop, the framework then calls <bpt id=\"p1\">[</bpt>OnDrop<ept id=\"p1\">](#coledroptarget__ondrop)</ept>.","pos":[12215,12306],"source":" If it does not handle the drop, the framework then calls [OnDrop](#coledroptarget__ondrop)."},{"content":"Typically, you will override <bpt id=\"p1\">[</bpt>OnDropEx<ept id=\"p1\">](../../mfc/reference/cview-class.md#cview__ondropex)</ept> in the view class to support right mouse-button drag and drop.","pos":[12307,12461],"source":" Typically, you will override [OnDropEx](../../mfc/reference/cview-class.md#cview__ondropex) in the view class to support right mouse-button drag and drop."},{"content":"Typically, the view class <bpt id=\"p1\">[</bpt>OnDrop<ept id=\"p1\">](../../mfc/reference/cview-class.md#cview__ondrop)</ept> is used to handle the case of support for simple drag and drop.","pos":[12462,12610],"source":" Typically, the view class [OnDrop](../../mfc/reference/cview-class.md#cview__ondrop) is used to handle the case of support for simple drag and drop."},{"content":"The default implementation of <ph id=\"ph1\">`COleDropTarget::OnDropEx`</ph> calls <bpt id=\"p1\">[</bpt>CView::OnDropEx<ept id=\"p1\">](../../mfc/reference/cview-class.md#cview__ondropex)</ept>.","pos":[12617,12750],"source":"The default implementation of `COleDropTarget::OnDropEx` calls [CView::OnDropEx](../../mfc/reference/cview-class.md#cview__ondropex)."},{"content":"By default, <bpt id=\"p1\">[</bpt>CView::OnDropEx<ept id=\"p1\">](../../mfc/reference/cview-class.md#cview__ondropex)</ept> simply returns a dummy value to indicate the <bpt id=\"p2\">[</bpt>OnDrop<ept id=\"p2\">](#coledroptarget__ondrop)</ept> member function should be called.","pos":[12751,12945],"source":" By default, [CView::OnDropEx](../../mfc/reference/cview-class.md#cview__ondropex) simply returns a dummy value to indicate the [OnDrop](#coledroptarget__ondrop) member function should be called."},{"content":"Drop effects describe the action associated with a drop operation.","pos":[12952,13018]},{"content":"See the following list of drop effects:","pos":[13019,13058]},{"pos":[13066,13112],"content":"<ph id=\"ph1\">`DROPEFFECT_NONE`</ph> A drop would not be allowed.","source":"`DROPEFFECT_NONE` A drop would not be allowed."},{"pos":[13120,13174],"content":"<ph id=\"ph1\">`DROPEFFECT_COPY`</ph> A copy operation would be performed.","source":"`DROPEFFECT_COPY` A copy operation would be performed."},{"pos":[13182,13236],"content":"<ph id=\"ph1\">`DROPEFFECT_MOVE`</ph> A move operation would be performed.","source":"`DROPEFFECT_MOVE` A move operation would be performed."},{"pos":[13244,13333],"content":"<ph id=\"ph1\">`DROPEFFECT_LINK`</ph> A link from the dropped data to the original data would be established.","source":"`DROPEFFECT_LINK` A link from the dropped data to the original data would be established."},{"pos":[13341,13448],"content":"<ph id=\"ph1\">`DROPEFFECT_SCROLL`</ph> Indicates that a drag scroll operation is about to occur or is occurring in the target.","source":"`DROPEFFECT_SCROLL` Indicates that a drag scroll operation is about to occur or is occurring in the target."},{"pos":[13455,13620],"content":"For more information, see <bpt id=\"p1\">[</bpt>IDropTarget::Drop<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms687242)</ept> in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"For more information, see [IDropTarget::Drop](http://msdn.microsoft.com/library/windows/desktop/ms687242) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"pos":[13630,13695],"content":"<bpt id=\"p1\">&lt;a name=\"coledroptarget__register\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  COleDropTarget::Register","linkify":"<a name=\"coledroptarget__register\"></a>  COleDropTarget::Register","source":"<a name=\"coledroptarget__register\"></a>  COleDropTarget::Register"},{"content":"Call this function to register your window with the OLE DLLs as a valid drop target.","pos":[13699,13783]},{"pos":[13835,13845],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Points to the window that is to be registered as a drop target.","pos":[13859,13922]},{"pos":[13932,13944],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Nonzero if registration is successful; otherwise 0.","pos":[13948,13999]},{"pos":[14009,14016],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This function must be called for drop operations to be accepted.","pos":[14020,14084]},{"pos":[14091,14255],"content":"For more information, see <bpt id=\"p1\">[</bpt>RegisterDragDrop<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms678405)</ept> in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"For more information, see [RegisterDragDrop](http://msdn.microsoft.com/library/windows/desktop/ms678405) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"pos":[14265,14326],"content":"<bpt id=\"p1\">&lt;a name=\"coledroptarget__revoke\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  COleDropTarget::Revoke","linkify":"<a name=\"coledroptarget__revoke\"></a>  COleDropTarget::Revoke","source":"<a name=\"coledroptarget__revoke\"></a>  COleDropTarget::Revoke"},{"pos":[14330,14519],"content":"Call this function before destroying any window that has been registered as a drop target through a call to <bpt id=\"p1\">[</bpt>Register<ept id=\"p1\">](#coledroptarget__register)</ept> to remove it from the list of drop targets.","source":"Call this function before destroying any window that has been registered as a drop target through a call to [Register](#coledroptarget__register) to remove it from the list of drop targets."},{"pos":[14567,14574],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[14578,14796],"content":"This function is called automatically from the <bpt id=\"p1\">[</bpt>OnDestroy<ept id=\"p1\">](../../mfc/reference/cwnd-class.md#cwnd__ondestroy)</ept> handler for the window that was registered, so it is usually not necessary to call this function explicitly.","source":"This function is called automatically from the [OnDestroy](../../mfc/reference/cwnd-class.md#cwnd__ondestroy) handler for the window that was registered, so it is usually not necessary to call this function explicitly."},{"pos":[14803,14965],"content":"For more information, see <bpt id=\"p1\">[</bpt>RevokeDragDrop<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms692643)</ept> in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"For more information, see [RevokeDragDrop](http://msdn.microsoft.com/library/windows/desktop/ms692643) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"pos":[14974,14982],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>MFC Sample HIERSVR<ept id=\"p1\">](../../visual-cpp-samples.md)</ept><ph id=\"ph1\"> </ph>","pos":[14986,15036],"source":"[MFC Sample HIERSVR](../../visual-cpp-samples.md) "},{"content":"<bpt id=\"p1\"> [</bpt>MFC Sample OCLIENT<ept id=\"p1\">](../../visual-cpp-samples.md)</ept><ph id=\"ph1\"> </ph>","pos":[15039,15090],"source":" [MFC Sample OCLIENT](../../visual-cpp-samples.md) "},{"content":"<bpt id=\"p1\"> [</bpt>CCmdTarget Class<ept id=\"p1\">](../../mfc/reference/ccmdtarget-class.md)</ept><ph id=\"ph1\"> </ph>","pos":[15093,15154],"source":" [CCmdTarget Class](../../mfc/reference/ccmdtarget-class.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Hierarchy Chart<ept id=\"p1\">](../../mfc/hierarchy-chart.md)</ept><ph id=\"ph1\"> </ph>","pos":[15157,15206],"source":" [Hierarchy Chart](../../mfc/hierarchy-chart.md) "},{"content":"<bpt id=\"p1\"> [</bpt>COleDropSource Class<ept id=\"p1\">](../../mfc/reference/coledropsource-class.md)</ept>","pos":[15209,15277],"source":" [COleDropSource Class](../../mfc/reference/coledropsource-class.md)"}],"content":"---\ntitle: \"COleDropTarget Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"COleDropTarget\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"COleDropTarget class\"\n  - \"drag and drop, drop target\"\n  - \"drop commands, accepting\"\n  - \"drop commands\"\nms.assetid: a58c9a48-6a93-4357-b078-4594df258311\ncaps.latest.revision: 23\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# COleDropTarget Class\nProvides the communication mechanism between a window and the OLE libraries.  \n  \n## Syntax  \n  \n```  \nclass COleDropTarget : public CCmdTarget  \n```  \n  \n## Members  \n  \n### Public Constructors  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[COleDropTarget::COleDropTarget](#coledroptarget__coledroptarget)|Constructs a `COleDropTarget` object.|  \n  \n### Public Methods  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[COleDropTarget::OnDragEnter](#coledroptarget__ondragenter)|Called when the cursor first enters the window.|  \n|[COleDropTarget::OnDragLeave](#coledroptarget__ondragleave)|Called when the cursor is dragged out of the window.|  \n|[COleDropTarget::OnDragOver](#coledroptarget__ondragover)|Called repeatedly when the cursor is dragged over the window.|  \n|[COleDropTarget::OnDragScroll](#coledroptarget__ondragscroll)|Called to determine whether the cursor is dragged into the scroll region of the window.|  \n|[COleDropTarget::OnDrop](#coledroptarget__ondrop)|Called when data is dropped into the window, default handler.|  \n|[COleDropTarget::OnDropEx](#coledroptarget__ondropex)|Called when data is dropped into the window, initial handler.|  \n|[COleDropTarget::Register](#coledroptarget__register)|Registers the window as a valid drop target.|  \n|[COleDropTarget::Revoke](#coledroptarget__revoke)|Causes the window to cease being a valid drop target.|  \n  \n## Remarks  \n Creating an object of this class allows a window to accept data through the OLE drag-and-drop mechanism.  \n  \n To get a window to accept drop commands, you should first create an object of the `COleDropTarget` class, and then call the [Register](#coledroptarget__register) function with a pointer to the desired `CWnd` object as the only parameter.  \n  \n For more information on drag-and-drop operations using OLE, see the article [Drag and Drop (OLE)](../../mfc/drag-and-drop-ole.md).  \n  \n## Inheritance Hierarchy  \n [CObject](../../mfc/reference/cobject-class.md)  \n  \n [CCmdTarget](../../mfc/reference/ccmdtarget-class.md)  \n  \n `COleDropTarget`  \n  \n## Requirements  \n **Header:** afxole.h  \n  \n##  <a name=\"coledroptarget__coledroptarget\"></a>  COleDropTarget::COleDropTarget  \n Constructs an object of class `COleDropTarget`.  \n  \n```  \nCOleDropTarget();\n```  \n  \n### Remarks  \n Call [Register](#coledroptarget__register) to associate this object with a window.  \n  \n##  <a name=\"coledroptarget__ondragenter\"></a>  COleDropTarget::OnDragEnter  \n Called by the framework when the cursor is first dragged into the window.  \n  \n```  \nvirtual DROPEFFECT OnDragEnter(\n    CWnd* pWnd,  \n    COleDataObject* pDataObject,  \n    DWORD dwKeyState,  \n    CPoint point);\n```  \n  \n### Parameters  \n `pWnd`  \n Points to the window the cursor is entering.  \n  \n `pDataObject`  \n Points to the data object containing the data that can be dropped.  \n  \n `dwKeyState`  \n Contains the state of the modifier keys. This is a combination of any number of the following: **MK_CONTROL**, **MK_SHIFT**, **MK_ALT**, **MK_LBUTTON**, **MK_MBUTTON**, and **MK_RBUTTON**.  \n  \n `point`  \n Contains the current location of the cursor in client coordinates.  \n  \n### Return Value  \n The effect that would result if a drop were attempted at the location specified by `point`. It can be one or more of the following:  \n  \n- `DROPEFFECT_NONE` A drop would not be allowed.  \n  \n- `DROPEFFECT_COPY` A copy operation would be performed.  \n  \n- `DROPEFFECT_MOVE` A move operation would be performed.  \n  \n- `DROPEFFECT_LINK` A link from the dropped data to the original data would be established.  \n  \n- `DROPEFFECT_SCROLL` A drag scroll operation is about to occur or is occurring in the target.  \n  \n### Remarks  \n Override this function to allow drop operations to occur in the window. The default implementation calls [CView::OnDragEnter](../../mfc/reference/cview-class.md#cview__ondragenter), which simply returns `DROPEFFECT_NONE` by default.  \n  \n For more information, see [IDropTarget::DragEnter](http://msdn.microsoft.com/library/windows/desktop/ms680106) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n##  <a name=\"coledroptarget__ondragleave\"></a>  COleDropTarget::OnDragLeave  \n Called by the framework when the cursor leaves the window while a dragging operation is in effect.  \n  \n```  \nvirtual void OnDragLeave(CWnd* pWnd);\n```  \n  \n### Parameters  \n `pWnd`  \n Points to the window the cursor is leaving.  \n  \n### Remarks  \n Override this function if you want special behavior when the drag operation leaves the specified window. The default implementation of this function calls [CView::OnDragLeave](../../mfc/reference/cview-class.md#cview__ondragleave).  \n  \n For more information, see [IDropTarget::DragLeave](http://msdn.microsoft.com/library/windows/desktop/ms680110) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n##  <a name=\"coledroptarget__ondragover\"></a>  COleDropTarget::OnDragOver  \n Called by the framework when the cursor is dragged over the window.  \n  \n```  \nvirtual DROPEFFECT OnDragOver(\n    CWnd* pWnd,  \n    COleDataObject* pDataObject,  \n    DWORD dwKeyState,  \n    CPoint point);\n```  \n  \n### Parameters  \n `pWnd`  \n Points to the window that the cursor is over.  \n  \n `pDataObject`  \n Points to the data object that contains the data to be dropped.  \n  \n `dwKeyState`  \n Contains the state of the modifier keys. This is a combination of any number of the following: **MK_CONTROL**, **MK_SHIFT**, **MK_ALT**, **MK_LBUTTON**, **MK_MBUTTON**, and **MK_RBUTTON**.  \n  \n `point`  \n Contains the current location of the cursor in client coordinates.  \n  \n### Return Value  \n The effect that would result if a drop were attempted at the location specified by `point`. It can be one or more of the following:  \n  \n- `DROPEFFECT_NONE` A drop would not be allowed.  \n  \n- `DROPEFFECT_COPY` A copy operation would be performed.  \n  \n- `DROPEFFECT_MOVE` A move operation would be performed.  \n  \n- `DROPEFFECT_LINK` A link from the dropped data to the original data would be established.  \n  \n- `DROPEFFECT_SCROLL` Indicates that a drag scroll operation is about to occur or is occurring in the target.  \n  \n### Remarks  \n This function should be overridden to allow drop operations to occur in the window. The default implementation of this function calls [CView::OnDragOver](../../mfc/reference/cview-class.md#cview__ondragover), which returns `DROPEFFECT_NONE` by default. Because this function is called frequently during a drag-and-drop operation, it should be optimized as much as possible.  \n  \n For more information, see [IDropTarget::DragOver](http://msdn.microsoft.com/library/windows/desktop/ms680129) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n### Example  \n [!code-cpp[NVC_MFCOleContainer#21](../../mfc/codesnippet/cpp/coledroptarget-class_1.cpp)]  \n  \n##  <a name=\"coledroptarget__ondragscroll\"></a>  COleDropTarget::OnDragScroll  \n Called by the framework before calling [OnDragEnter](#coledroptarget__ondragenter) or [OnDragOver](#coledroptarget__ondragover) to determine whether `point` is in the scrolling region.  \n  \n```  \nvirtual DROPEFFECT OnDragScroll(\n    CWnd* pWnd,  \n    DWORD dwKeyState,  \n    CPoint point);\n```  \n  \n### Parameters  \n `pWnd`  \n Points to the window the cursor is currently over.  \n  \n `dwKeyState`  \n Contains the state of the modifier keys. This is a combination of any number of the following: **MK_CONTROL**, **MK_SHIFT**, **MK_ALT**, **MK_LBUTTON**, **MK_MBUTTON**, and **MK_RBUTTON**.  \n  \n `point`  \n Contains the location of the cursor, in pixels, relative to the screen.  \n  \n### Return Value  \n The effect that would result if a drop were attempted at the location specified by `point`. It can be one or more of the following:  \n  \n- `DROPEFFECT_NONE` A drop would not be allowed.  \n  \n- `DROPEFFECT_COPY` A copy operation would be performed.  \n  \n- `DROPEFFECT_MOVE` A move operation would be performed.  \n  \n- `DROPEFFECT_LINK` A link from the dropped data to the original data would be established.  \n  \n- `DROPEFFECT_SCROLL` Indicates that a drag scroll operation is about to occur or is occurring in the target.  \n  \n### Remarks  \n Override this function when you want to provide special behavior for this event. The default implementation of this function calls [CView::OnDragScroll](../../mfc/reference/cview-class.md#cview__ondragscroll), which returns `DROPEFFECT_NONE` and scrolls the window when the cursor is dragged into the default scroll region inside the border of the window.  \n  \n##  <a name=\"coledroptarget__ondrop\"></a>  COleDropTarget::OnDrop  \n Called by the framework when a drop operation is to occur.  \n  \n```  \nvirtual BOOL OnDrop(\n    CWnd* pWnd,  \n    COleDataObject* pDataObject,  \n    DROPEFFECT dropEffect,  \n    CPoint point);\n```  \n  \n### Parameters  \n `pWnd`  \n Points to the window the cursor is currently over.  \n  \n `pDataObject`  \n Points to the data object that contains the data to be dropped.  \n  \n `dropEffect`  \n The effect that the user chose for the drop operation. It can be one or more of the following:  \n  \n- `DROPEFFECT_COPY` A copy operation would be performed.  \n  \n- `DROPEFFECT_MOVE` A move operation would be performed.  \n  \n- `DROPEFFECT_LINK` A link from the dropped data to the original data would be established.  \n  \n `point`  \n Contains the location of the cursor, in pixels, relative to the screen.  \n  \n### Return Value  \n Nonzero if the drop is successful; otherwise 0.  \n  \n### Remarks  \n The framework first calls [OnDropEx](#coledroptarget__ondropex). If the `OnDropEx` function does not handle the drop, the framework then calls this member function, `OnDrop`. Typically, the application overrides [OnDropEx](../../mfc/reference/cview-class.md#cview__ondropex) in the view class to handle right mouse-button drag and drop. Typically, the view class [OnDrop](../../mfc/reference/cview-class.md#cview__ondrop) is used to handle simple drag and drop.  \n  \n The default implementation of `COleDropTarget::OnDrop` calls [CView::OnDrop](../../mfc/reference/cview-class.md#cview__ondrop), which simply returns **FALSE** by default.  \n  \n For more information, see [IDropTarget::Drop](http://msdn.microsoft.com/library/windows/desktop/ms687242) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n##  <a name=\"coledroptarget__ondropex\"></a>  COleDropTarget::OnDropEx  \n Called by the framework when a drop operation is to occur.  \n  \n```  \nvirtual DROPEFFECT OnDropEx(\n    CWnd* pWnd,  \n    COleDataObject* pDataObject,  \n    DROPEFFECT dropDefault,  \n    DROPEFFECT dropList,  \n    CPoint point);\n```  \n  \n### Parameters  \n `pWnd`  \n Points to the window the cursor is currently over.  \n  \n `pDataObject`  \n Points to the data object that contains the data to be dropped.  \n  \n `dropDefault`  \n The effect that the user chose for the default drop operation based on the current key state. It can be `DROPEFFECT_NONE`. Drop effects are discussed in the Remarks section.  \n  \n `dropList`  \n A list of the drop effects that the drop source supports. Drop effect values can be combined using the bitwise OR ( **&#124;**) operation. Drop effects are discussed in the Remarks section.  \n  \n `point`  \n Contains the location of the cursor, in pixels, relative to the screen.  \n  \n### Return Value  \n The drop effect that resulted from the drop attempt at the location specified by `point`. Drop effects are discussed in the Remarks section.  \n  \n### Remarks  \n The framework first calls this function. If it does not handle the drop, the framework then calls [OnDrop](#coledroptarget__ondrop). Typically, you will override [OnDropEx](../../mfc/reference/cview-class.md#cview__ondropex) in the view class to support right mouse-button drag and drop. Typically, the view class [OnDrop](../../mfc/reference/cview-class.md#cview__ondrop) is used to handle the case of support for simple drag and drop.  \n  \n The default implementation of `COleDropTarget::OnDropEx` calls [CView::OnDropEx](../../mfc/reference/cview-class.md#cview__ondropex). By default, [CView::OnDropEx](../../mfc/reference/cview-class.md#cview__ondropex) simply returns a dummy value to indicate the [OnDrop](#coledroptarget__ondrop) member function should be called.  \n  \n Drop effects describe the action associated with a drop operation. See the following list of drop effects:  \n  \n- `DROPEFFECT_NONE` A drop would not be allowed.  \n  \n- `DROPEFFECT_COPY` A copy operation would be performed.  \n  \n- `DROPEFFECT_MOVE` A move operation would be performed.  \n  \n- `DROPEFFECT_LINK` A link from the dropped data to the original data would be established.  \n  \n- `DROPEFFECT_SCROLL` Indicates that a drag scroll operation is about to occur or is occurring in the target.  \n  \n For more information, see [IDropTarget::Drop](http://msdn.microsoft.com/library/windows/desktop/ms687242) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n##  <a name=\"coledroptarget__register\"></a>  COleDropTarget::Register  \n Call this function to register your window with the OLE DLLs as a valid drop target.  \n  \n```  \nBOOL Register(CWnd* pWnd);\n```  \n  \n### Parameters  \n `pWnd`  \n Points to the window that is to be registered as a drop target.  \n  \n### Return Value  \n Nonzero if registration is successful; otherwise 0.  \n  \n### Remarks  \n This function must be called for drop operations to be accepted.  \n  \n For more information, see [RegisterDragDrop](http://msdn.microsoft.com/library/windows/desktop/ms678405) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n##  <a name=\"coledroptarget__revoke\"></a>  COleDropTarget::Revoke  \n Call this function before destroying any window that has been registered as a drop target through a call to [Register](#coledroptarget__register) to remove it from the list of drop targets.  \n  \n```  \nvirtual void Revoke();\n```  \n  \n### Remarks  \n This function is called automatically from the [OnDestroy](../../mfc/reference/cwnd-class.md#cwnd__ondestroy) handler for the window that was registered, so it is usually not necessary to call this function explicitly.  \n  \n For more information, see [RevokeDragDrop](http://msdn.microsoft.com/library/windows/desktop/ms692643) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n## See Also  \n [MFC Sample HIERSVR](../../visual-cpp-samples.md)   \n [MFC Sample OCLIENT](../../visual-cpp-samples.md)   \n [CCmdTarget Class](../../mfc/reference/ccmdtarget-class.md)   \n [Hierarchy Chart](../../mfc/hierarchy-chart.md)   \n [COleDropSource Class](../../mfc/reference/coledropsource-class.md)\n"}