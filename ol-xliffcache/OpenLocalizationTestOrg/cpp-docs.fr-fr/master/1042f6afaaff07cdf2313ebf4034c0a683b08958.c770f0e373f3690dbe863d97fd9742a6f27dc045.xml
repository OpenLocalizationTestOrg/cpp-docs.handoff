{"nodes":[{"pos":[12,39],"content":"clearerr_s | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"clearerr_s | Microsoft Docs","pos":[0,27]}]},{"content":"clearerr_s","pos":[990,1000]},{"content":"Resets the error indicator for a stream.","pos":[1001,1041]},{"content":"This is a version of <bpt id=\"p1\">[</bpt>clearerr<ept id=\"p1\">](../../c-runtime-library/reference/clearerr.md)</ept> with security enhancements as described in <bpt id=\"p2\">[</bpt>Security Features in the CRT<ept id=\"p2\">](../../c-runtime-library/security-features-in-the-crt.md)</ept>.","pos":[1042,1252],"source":" This is a version of [clearerr](../../c-runtime-library/reference/clearerr.md) with security enhancements as described in [Security Features in the CRT](../../c-runtime-library/security-features-in-the-crt.md)."},{"content":"Syntax","pos":[1261,1267]},{"content":"Parameters","pos":[1339,1349]},{"content":"Pointer to <ph id=\"ph1\">`FILE`</ph> structure","pos":[1365,1392],"source":" Pointer to `FILE` structure"},{"content":"Return Value","pos":[1401,1413]},{"pos":[1417,1466],"content":"Zero if successful; <ph id=\"ph1\">`EINVAL`</ph> if <ph id=\"ph2\">`stream`</ph> is NULL.","source":"Zero if successful; `EINVAL` if `stream` is NULL."},{"content":"Remarks","pos":[1475,1482]},{"content":"The <ph id=\"ph1\">`clearerr_s`</ph> function resets the error indicator and end-of-file indicator for <ph id=\"ph2\">`stream`</ph>.","pos":[1486,1578],"source":"The `clearerr_s` function resets the error indicator and end-of-file indicator for `stream`."},{"content":"Error indicators are not automatically cleared; once the error indicator for a specified stream is set, operations on that stream continue to return an error value until <ph id=\"ph1\">`clearerr_s`</ph>, <ph id=\"ph2\">`clearerr`</ph>, <ph id=\"ph3\">`fseek`</ph>, <ph id=\"ph4\">`fsetpos`</ph>, or <ph id=\"ph5\">`rewind`</ph> is called.","pos":[1579,1817],"source":" Error indicators are not automatically cleared; once the error indicator for a specified stream is set, operations on that stream continue to return an error value until `clearerr_s`, `clearerr`, `fseek`, `fsetpos`, or `rewind` is called."},{"content":"If <ph id=\"ph1\">`stream`</ph> is NULL, the invalid parameter handler is invoked, as described in <bpt id=\"p1\">[</bpt>Parameter Validation<ept id=\"p1\">](../../c-runtime-library/parameter-validation.md)</ept>.","pos":[1824,1975],"source":"If `stream` is NULL, the invalid parameter handler is invoked, as described in [Parameter Validation](../../c-runtime-library/parameter-validation.md)."},{"content":"If execution is allowed to continue, this function sets <ph id=\"ph1\">`errno`</ph> to <ph id=\"ph2\">`EINVAL`</ph> and returns <ph id=\"ph3\">`EINVAL`</ph>.","pos":[1976,2073],"source":" If execution is allowed to continue, this function sets `errno` to `EINVAL` and returns `EINVAL`."},{"content":"Requirements","pos":[2082,2094]},{"content":"Routine","pos":[2101,2108]},{"content":"Required header","pos":[2109,2124]},{"content":"stdio.h&gt;","pos":[2184,2192],"source":"stdio.h>"},{"pos":[2200,2324],"content":"For additional compatibility information, see <bpt id=\"p1\">[</bpt>Compatibility<ept id=\"p1\">](../../c-runtime-library/compatibility.md)</ept> in the Introduction.","source":"For additional compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md) in the Introduction."},{"content":"Example","pos":[2333,2340]},{"content":".NET Framework Equivalent","pos":[3254,3279]},{"content":"Not applicable.","pos":[3283,3298]},{"content":"To call the standard C function, use <ph id=\"ph1\">`PInvoke`</ph>.","pos":[3299,3346],"source":" To call the standard C function, use `PInvoke`."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Platform Invoke Examples<ept id=\"p1\">](http://msdn.microsoft.com/Library/15926806-f0b7-487e-93a6-4e9367ec689f)</ept>.","pos":[3347,3472],"source":" For more information, see [Platform Invoke Examples](http://msdn.microsoft.com/Library/15926806-f0b7-487e-93a6-4e9367ec689f)."},{"content":"See Also","pos":[3481,3489]},{"content":"Error Handling","pos":[3494,3508]},{"content":"Stream I/O","pos":[3562,3572]},{"content":"clearerr","pos":[3618,3626]},{"content":"_eof","pos":[3680,3684]},{"content":"feof","pos":[3733,3737]},{"content":"ferror","pos":[3787,3793]},{"content":"perror, _wperror","pos":[3845,3861]}],"content":"---\ntitle: \"clearerr_s | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\napiname: \n  - \"clearerr_s\"\napilocation: \n  - \"msvcrt.dll\"\n  - \"msvcr80.dll\"\n  - \"msvcr90.dll\"\n  - \"msvcr100.dll\"\n  - \"msvcr100_clr0400.dll\"\n  - \"msvcr110.dll\"\n  - \"msvcr110_clr0400.dll\"\n  - \"msvcr120.dll\"\n  - \"msvcr120_clr0400.dll\"\n  - \"ucrtbase.dll\"\n  - \"api-ms-win-crt-stdio-l1-1-0.dll\"\napitype: \"DLLExport\"\nf1_keywords: \n  - \"clearerr_s\"\ndev_langs: \n  - \"C++\"\n  - \"C\"\nhelpviewer_keywords: \n  - \"error indicator for streams\"\n  - \"resetting stream error indicator\"\n  - \"clearerr_s function\"\nms.assetid: b74d014d-b7a8-494a-a330-e5ffd5614772\ncaps.latest.revision: 19\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# clearerr_s\nResets the error indicator for a stream. This is a version of [clearerr](../../c-runtime-library/reference/clearerr.md) with security enhancements as described in [Security Features in the CRT](../../c-runtime-library/security-features-in-the-crt.md).  \n  \n## Syntax  \n  \n```  \nerrno_t clearerr_s(  \n   FILE *stream   \n);  \n```  \n  \n#### Parameters  \n `stream`  \n Pointer to `FILE` structure  \n  \n## Return Value  \n Zero if successful; `EINVAL` if `stream` is NULL.  \n  \n## Remarks  \n The `clearerr_s` function resets the error indicator and end-of-file indicator for `stream`. Error indicators are not automatically cleared; once the error indicator for a specified stream is set, operations on that stream continue to return an error value until `clearerr_s`, `clearerr`, `fseek`, `fsetpos`, or `rewind` is called.  \n  \n If `stream` is NULL, the invalid parameter handler is invoked, as described in [Parameter Validation](../../c-runtime-library/parameter-validation.md). If execution is allowed to continue, this function sets `errno` to `EINVAL` and returns `EINVAL`.  \n  \n## Requirements  \n  \n|Routine|Required header|  \n|-------------|---------------------|  \n|`clearerr_s`|\\<stdio.h>|  \n  \n For additional compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md) in the Introduction.  \n  \n## Example  \n  \n```  \n// crt_clearerr_s.c  \n// This program creates an error  \n// on the standard input stream, then clears  \n// it so that future reads won't fail.  \n  \n#include <stdio.h>  \n  \nint main( void )  \n{  \n   int c;  \n   errno_t err;  \n  \n   // Create an error by writing to standard input.  \n   putc( 'c', stdin );  \n   if( ferror( stdin ) )  \n   {  \n      perror( \"Write error\" );  \n      err = clearerr_s( stdin );  \n      if (err != 0)  \n      {  \n         abort();  \n      }  \n   }  \n  \n   // See if read causes an error.  \n   printf( \"Will input cause an error? \" );  \n   c = getc( stdin );  \n   if( ferror( stdin ) )  \n   {  \n      perror( \"Read error\" );  \n      err = clearerr_s( stdin );  \n      if (err != 0)  \n      {  \n         abort();  \n      }  \n   }  \n}  \n```  \n  \n```Output  \n  \nn  \n  \n```  \n  \n```Output  \n  \n      nWrite error: Bad file descriptor  \nWill input cause an error? n  \n```  \n  \n## .NET Framework Equivalent  \n Not applicable. To call the standard C function, use `PInvoke`. For more information, see [Platform Invoke Examples](http://msdn.microsoft.com/Library/15926806-f0b7-487e-93a6-4e9367ec689f).  \n  \n## See Also  \n [Error Handling](../../c-runtime-library/error-handling-crt.md)   \n [Stream I/O](../../c-runtime-library/stream-i-o.md)   \n [clearerr](../../c-runtime-library/reference/clearerr.md)   \n [_eof](../../c-runtime-library/reference/eof.md)   \n [feof](../../c-runtime-library/reference/feof.md)   \n [ferror](../../c-runtime-library/reference/ferror.md)   \n [perror, _wperror](../../c-runtime-library/reference/perror-wperror.md)"}