{"nodes":[{"pos":[12,71],"content":"Concurrency::fast_math namespace functions | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Concurrency::fast_math namespace functions | Microsoft Docs","pos":[0,59]}]},{"content":"Concurrency::fast_math namespace functions","pos":[313,355]},{"content":"acos Function (fast_math)","pos":[375,400]},{"content":"acosf Function (fast_math)","pos":[419,445]},{"content":"asin Function (fast_math)","pos":[465,490]},{"content":"asinf Function (fast_math)","pos":[513,539]},{"content":"atan Function (fast_math)","pos":[559,584]},{"content":"atan2 Function (fast_math)","pos":[603,629]},{"content":"atan2f Function (fast_math)","pos":[653,680]},{"content":"atanf Function (fast_math)","pos":[701,727]},{"content":"ceil Function (fast_math)","pos":[747,772]},{"content":"ceilf Function (fast_math)","pos":[795,821]},{"content":"cos Function (fast_math)","pos":[841,865]},{"content":"cosf Function (fast_math)","pos":[883,908]},{"content":"cosh Function (fast_math)","pos":[931,956]},{"content":"coshf Function (fast_math)","pos":[975,1001]},{"content":"exp Function (fast_math)","pos":[1021,1045]},{"content":"exp2 Function (fast_math)","pos":[1067,1092]},{"content":"exp2f Function (fast_math)","pos":[1111,1137]},{"content":"expf Function (fast_math)","pos":[1157,1182]},{"content":"fabs Function (fast_math)","pos":[1205,1230]},{"content":"fabsf Function (fast_math)","pos":[1249,1275]},{"content":"floor Function (fast_math)","pos":[1295,1321]},{"content":"floorf Function (fast_math)","pos":[1345,1372]},{"content":"fmax Function (fast_math)","pos":[1393,1418]},{"content":"fmaxf Function (fast_math)","pos":[1437,1463]},{"content":"fmin Function (fast_math)","pos":[1487,1512]},{"content":"fminf Function (fast_math)","pos":[1531,1557]},{"content":"fmod Function (fast_math)","pos":[1577,1602]},{"content":"fmodf Function (fast_math)","pos":[1625,1651]},{"content":"frexp Function (fast_math)","pos":[1671,1697]},{"content":"frexpf Function (fast_math)","pos":[1717,1744]},{"content":"isfinite Function (fast_math)","pos":[1769,1798]},{"content":"isinf Function (fast_math)","pos":[1821,1847]},{"content":"isnan Function (fast_math)","pos":[1867,1893]},{"content":"ldexp Function (fast_math)","pos":[1917,1943]},{"content":"ldexpf Function (fast_math)","pos":[1963,1990]},{"content":"log Function (fast_math)","pos":[2011,2035]},{"content":"log10 Function (fast_math)","pos":[2057,2083]},{"content":"log10f Function (fast_math)","pos":[2103,2130]},{"content":"log2 Function (fast_math)","pos":[2151,2176]},{"content":"log2f Function (fast_math)","pos":[2199,2225]},{"content":"logf Function (fast_math)","pos":[2245,2270]},{"content":"modf Function (fast_math)","pos":[2289,2314]},{"content":"modff Function (fast_math)","pos":[2337,2363]},{"content":"pow Function (fast_math)","pos":[2383,2407]},{"content":"powf Function (fast_math)","pos":[2425,2450]},{"content":"round Function (fast_math)","pos":[2473,2499]},{"content":"roundf Function (fast_math)","pos":[2519,2546]},{"content":"rsqrt Function (fast_math)","pos":[2567,2593]},{"content":"rsqrtf Function (fast_math)","pos":[2617,2644]},{"content":"signbit Function (fast_math)","pos":[2665,2693]},{"content":"signbitf Function (fast_math)","pos":[2715,2744]},{"content":"sin Function (fast_math)","pos":[2771,2795]},{"content":"sincos Function (fast_math)","pos":[2813,2840]},{"content":"sincosf Function (fast_math)","pos":[2861,2889]},{"content":"sinf Function (fast_math)","pos":[2915,2940]},{"content":"sinh Function (fast_math)","pos":[2959,2984]},{"content":"sinhf Function (fast_math)","pos":[3003,3029]},{"content":"sqrt Function (fast_math)","pos":[3053,3078]},{"content":"sqrtf Function (fast_math)","pos":[3097,3123]},{"content":"tan Function (fast_math)","pos":[3143,3167]},{"content":"tanf Function (fast_math)","pos":[3189,3214]},{"content":"tanh Function (fast_math)","pos":[3233,3258]},{"content":"tanhf Function (fast_math)","pos":[3277,3303]},{"content":"trunc Function (fast_math)","pos":[3327,3353]},{"content":"truncf Function (fast_math)","pos":[3373,3400]},{"pos":[3460,3485],"content":"acos Function (fast_math)"},{"content":"Calculates the arccosine of the argument","pos":[3489,3529]},{"content":"Parameters","pos":[3597,3607]},{"content":"Floating-point value","pos":[3619,3639]},{"content":"Return Value","pos":[3649,3661]},{"content":"Returns the arccosine value of the argument","pos":[3665,3708]},{"pos":[3749,3775],"content":"acosf Function (fast_math)"},{"content":"Calculates the arccosine of the argument","pos":[3779,3819]},{"content":"Parameters","pos":[3888,3898]},{"content":"Floating-point value","pos":[3910,3930]},{"content":"Return Value","pos":[3940,3952]},{"content":"Returns the arccosine value of the argument","pos":[3956,3999]},{"pos":[4039,4064],"content":"asin Function (fast_math)"},{"content":"Calculates the arcsine of the argument","pos":[4068,4106]},{"content":"Parameters","pos":[4174,4184]},{"content":"Floating-point value","pos":[4196,4216]},{"content":"Return Value","pos":[4226,4238]},{"content":"Returns the arcsine value of the argument","pos":[4242,4283]},{"pos":[4324,4350],"content":"asinf Function (fast_math)"},{"content":"Calculates the arcsine of the argument","pos":[4354,4392]},{"content":"Parameters","pos":[4461,4471]},{"content":"Floating-point value","pos":[4483,4503]},{"content":"Return Value","pos":[4513,4525]},{"content":"Returns the arcsine value of the argument","pos":[4529,4570]},{"pos":[4610,4635],"content":"atan Function (fast_math)"},{"content":"Calculates the arctangent of the argument","pos":[4639,4680]},{"content":"Parameters","pos":[4748,4758]},{"content":"Floating-point value","pos":[4770,4790]},{"content":"Return Value","pos":[4800,4812]},{"content":"Returns the arctangent value of the argument","pos":[4816,4860]},{"pos":[4901,4927],"content":"atan2 Function (fast_math)"},{"content":"Calculates the arctangent of _Y/_X","pos":[4931,4965]},{"content":"Parameters","pos":[5055,5065]},{"content":"Floating-point value","pos":[5077,5097]},{"content":"Floating-point value","pos":[5112,5132]},{"content":"Return Value","pos":[5142,5154]},{"content":"Returns the arctangent value of _Y/_X","pos":[5158,5195]},{"pos":[5237,5264],"content":"atan2f Function (fast_math)"},{"content":"Calculates the arctangent of _Y/_X","pos":[5268,5302]},{"content":"Parameters","pos":[5393,5403]},{"content":"Floating-point value","pos":[5415,5435]},{"content":"Floating-point value","pos":[5450,5470]},{"content":"Return Value","pos":[5480,5492]},{"content":"Returns the arctangent value of _Y/_X","pos":[5496,5533]},{"pos":[5574,5600],"content":"atanf Function (fast_math)"},{"content":"Calculates the arctangent of the argument","pos":[5604,5645]},{"content":"Parameters","pos":[5714,5724]},{"content":"Floating-point value","pos":[5736,5756]},{"content":"Return Value","pos":[5766,5778]},{"content":"Returns the arctangent value of the argument","pos":[5782,5826]},{"pos":[5866,5891],"content":"ceil Function (fast_math)"},{"content":"Calculates the ceiling of the argument","pos":[5895,5933]},{"content":"Parameters","pos":[6001,6011]},{"content":"Floating-point value","pos":[6023,6043]},{"content":"Return Value","pos":[6053,6065]},{"content":"Returns the ceiling of the argument","pos":[6069,6104]},{"pos":[6145,6171],"content":"ceilf Function (fast_math)"},{"content":"Calculates the ceiling of the argument","pos":[6175,6213]},{"content":"Parameters","pos":[6282,6292]},{"content":"Floating-point value","pos":[6304,6324]},{"content":"Return Value","pos":[6334,6346]},{"content":"Returns the ceiling of the argument","pos":[6350,6385]},{"pos":[6425,6450],"content":"cosf Function (fast_math)"},{"content":"Calculates the cosine of the argument","pos":[6454,6491]},{"content":"Parameters","pos":[6559,6569]},{"content":"Floating-point value","pos":[6581,6601]},{"content":"Return Value","pos":[6611,6623]},{"content":"Returns the cosine value of the argument","pos":[6627,6667]},{"pos":[6708,6734],"content":"coshf Function (fast_math)"},{"content":"Calculates the hyperbolic cosine value of the argument","pos":[6738,6792]},{"content":"Parameters","pos":[6861,6871]},{"content":"Floating-point value","pos":[6883,6903]},{"content":"Return Value","pos":[6913,6925]},{"content":"Returns the hyperbolic cosine value of the argument","pos":[6929,6980]},{"pos":[7019,7044],"content":"cos Function  (fast_math)"},{"content":"Calculates the cosine of the argument","pos":[7048,7085]},{"content":"Parameters","pos":[7152,7162]},{"content":"Floating-point value","pos":[7174,7194]},{"content":"Return Value","pos":[7204,7216]},{"content":"Returns the cosine value of the argument","pos":[7220,7260]},{"pos":[7300,7325],"content":"cosh Function (fast_math)"},{"content":"Calculates the hyperbolic cosine value of the argument","pos":[7329,7383]},{"content":"Parameters","pos":[7451,7461]},{"content":"Floating-point value","pos":[7473,7493]},{"content":"Return Value","pos":[7503,7515]},{"content":"Returns the hyperbolic cosine value of the argument","pos":[7519,7570]},{"pos":[7609,7633],"content":"exp Function (fast_math)"},{"content":"Calculates the base-e exponential of the argument","pos":[7637,7686]},{"content":"Parameters","pos":[7753,7763]},{"content":"Floating-point value","pos":[7775,7795]},{"content":"Return Value","pos":[7805,7817]},{"content":"Returns the base-e exponential of the argument","pos":[7821,7867]},{"pos":[7907,7932],"content":"exp2 Function (fast_math)"},{"content":"Calculates the base-2 exponential of the argument","pos":[7936,7985]},{"content":"Parameters","pos":[8053,8063]},{"content":"Floating-point value","pos":[8075,8095]},{"content":"Return Value","pos":[8105,8117]},{"content":"Returns the base-2 exponential of the argument","pos":[8121,8167]},{"pos":[8208,8234],"content":"exp2f Function (fast_math)"},{"content":"Calculates the base-2 exponential of the argument","pos":[8238,8287]},{"content":"Parameters","pos":[8356,8366]},{"content":"Floating-point value","pos":[8378,8398]},{"content":"Return Value","pos":[8408,8420]},{"content":"Returns the base-2 exponential of the argument","pos":[8424,8470]},{"pos":[8510,8535],"content":"expf Function (fast_math)"},{"content":"Calculates the base-e exponential of the argument","pos":[8539,8588]},{"content":"Parameters","pos":[8656,8666]},{"content":"Floating-point value","pos":[8678,8698]},{"content":"Return Value","pos":[8708,8720]},{"content":"Returns the base-e exponential of the argument","pos":[8724,8770]},{"pos":[8810,8835],"content":"fabs Function (fast_math)"},{"content":"Returns the absolute value of the argument","pos":[8839,8881]},{"content":"Parameters","pos":[8949,8959]},{"content":"Integer value","pos":[8971,8984]},{"content":"Return Value","pos":[8994,9006]},{"content":"Returns the absolute value of the argument","pos":[9010,9052]},{"pos":[9093,9119],"content":"fabsf Function (fast_math)"},{"content":"Returns the absolute value of the argument","pos":[9123,9165]},{"content":"Parameters","pos":[9234,9244]},{"content":"Floating-point value","pos":[9256,9276]},{"content":"Return Value","pos":[9286,9298]},{"content":"Returns the absolute value of the argument","pos":[9302,9344]},{"pos":[9385,9411],"content":"floor Function (fast_math)"},{"content":"Calculates the floor of the argument","pos":[9415,9451]},{"content":"Parameters","pos":[9520,9530]},{"content":"Floating-point value","pos":[9542,9562]},{"content":"Return Value","pos":[9572,9584]},{"content":"Returns the floor of the argument","pos":[9588,9621]},{"pos":[9663,9690],"content":"floorf Function (fast_math)"},{"content":"Calculates the floor of the argument","pos":[9694,9730]},{"content":"Parameters","pos":[9800,9810]},{"content":"Floating-point value","pos":[9822,9842]},{"content":"Return Value","pos":[9852,9864]},{"content":"Returns the floor of the argument","pos":[9868,9901]},{"pos":[9941,9966],"content":"fmax Function (fast_math)"},{"content":"Determine the maximum numeric value of the arguments","pos":[9970,10022]},{"content":"Parameters","pos":[10110,10120]},{"content":"Integer value","pos":[10132,10145]},{"content":"Integer value","pos":[10160,10173]},{"content":"Return Value","pos":[10183,10195]},{"content":"Return the maximum numeric value of the arguments","pos":[10199,10248]},{"pos":[10289,10315],"content":"fmaxf Function (fast_math)"},{"content":"Determine the maximum numeric value of the arguments","pos":[10319,10371]},{"content":"Parameters","pos":[10461,10471]},{"content":"Floating-point value","pos":[10483,10503]},{"content":"Floating-point value","pos":[10518,10538]},{"content":"Return Value","pos":[10548,10560]},{"content":"Return the maximum numeric value of the arguments","pos":[10564,10613]},{"pos":[10653,10678],"content":"fmin Function (fast_math)"},{"content":"Determine the minimum numeric value of the arguments","pos":[10682,10734]},{"content":"Parameters","pos":[10822,10832]},{"content":"Integer value","pos":[10844,10857]},{"content":"Integer value","pos":[10872,10885]},{"content":"Return Value","pos":[10895,10907]},{"content":"Return the minimum numeric value of the arguments","pos":[10911,10960]},{"pos":[11001,11027],"content":"fminf Function (fast_math)"},{"content":"Determine the minimum numeric value of the arguments","pos":[11031,11083]},{"content":"Parameters","pos":[11173,11183]},{"content":"Floating-point value","pos":[11195,11215]},{"content":"Floating-point value","pos":[11230,11250]},{"content":"Return Value","pos":[11260,11272]},{"content":"Return the minimum numeric value of the arguments","pos":[11276,11325]},{"pos":[11365,11390],"content":"fmod Function (fast_math)"},{"content":"Calculates the floating-point remainder of _X/_Y","pos":[11394,11442]},{"content":"Parameters","pos":[11531,11541]},{"content":"Floating-point value","pos":[11553,11573]},{"content":"Floating-point value","pos":[11588,11608]},{"content":"Return Value","pos":[11618,11630]},{"content":"Returns the floating-point remainder of _X/_Y","pos":[11634,11679]},{"pos":[11720,11746],"content":"fmodf Function (fast_math)"},{"content":"Calculates the floating-point remainder of _X/_Y.","pos":[11750,11799]},{"content":"Parameters","pos":[11889,11899]},{"content":"Floating-point value","pos":[11911,11931]},{"content":"Floating-point value","pos":[11946,11966]},{"content":"Return Value","pos":[11976,11988]},{"content":"Returns the floating-point remainder of _X/_Y","pos":[11992,12037]},{"pos":[12078,12104],"content":"frexp Function (fast_math)"},{"content":"Gets the mantissa and exponent of _X","pos":[12108,12144]},{"content":"Parameters","pos":[12241,12251]},{"content":"Floating-point value","pos":[12263,12283]},{"content":"Returns the integer exponent of _X in floating-point value","pos":[12300,12358]},{"content":"Return Value","pos":[12368,12380]},{"content":"Returns the mantissa _X","pos":[12384,12407]},{"pos":[12449,12476],"content":"frexpf Function (fast_math)"},{"content":"Gets the mantissa and exponent of _X","pos":[12480,12516]},{"content":"Parameters","pos":[12614,12624]},{"content":"Floating-point value","pos":[12636,12656]},{"content":"Returns the integer exponent of _X in floating-point value","pos":[12673,12731]},{"content":"Return Value","pos":[12741,12753]},{"content":"Returns the mantissa _X","pos":[12757,12780]},{"pos":[12824,12853],"content":"isfinite Function (fast_math)"},{"content":"Determines whether the argument has a finite value","pos":[12857,12907]},{"content":"Parameters","pos":[12977,12987]},{"content":"Floating-point value","pos":[12999,13019]},{"content":"Return Value","pos":[13029,13041]},{"content":"Returns a nonzero value if and only if the argument has a finite value","pos":[13045,13115]},{"pos":[13156,13182],"content":"isinf Function (fast_math)"},{"content":"Determines whether the argument is an infinity","pos":[13186,13232]},{"content":"Parameters","pos":[13299,13309]},{"content":"Floating-point value","pos":[13321,13341]},{"content":"Return Value","pos":[13351,13363]},{"content":"Returns a nonzero value if and only if the argument has an infinite value","pos":[13367,13440]},{"pos":[13481,13507],"content":"isnan Function (fast_math)"},{"content":"Determines whether the argument is a NaN","pos":[13511,13551]},{"content":"Parameters","pos":[13618,13628]},{"content":"Floating-point value","pos":[13640,13660]},{"content":"Return Value","pos":[13670,13682]},{"content":"Returns a nonzero value if and only if the argument has a NaN value","pos":[13686,13753]},{"pos":[13794,13820],"content":"ldexp Function (fast_math)"},{"content":"Computes a real number from the mantissa and exponent","pos":[13824,13877]},{"content":"Parameters","pos":[13967,13977]},{"content":"Floating-point value, mentissa","pos":[13989,14019]},{"content":"Integer exponent","pos":[14036,14052]},{"content":"Return Value","pos":[14062,14074]},{"content":"Returns _X * 2^_Exp","pos":[14078,14097]},{"pos":[14139,14166],"content":"ldexpf Function (fast_math)"},{"content":"Computes a real number from the mantissa and exponent","pos":[14170,14223]},{"content":"Parameters","pos":[14314,14324]},{"content":"Floating-point value, mentissa","pos":[14336,14366]},{"content":"Integer exponent","pos":[14383,14399]},{"content":"Return Value","pos":[14409,14421]},{"content":"Returns _X * 2^_Exp","pos":[14425,14444]},{"pos":[14483,14507],"content":"log Function (fast_math)"},{"content":"Calculates the base-e logarithm of the argument","pos":[14511,14558]},{"content":"Parameters","pos":[14625,14635]},{"content":"Floating-point value","pos":[14647,14667]},{"content":"Return Value","pos":[14677,14689]},{"content":"Returns the base-e logarithm of the argument","pos":[14693,14737]},{"pos":[14778,14804],"content":"log10 Function (fast_math)"},{"content":"Calculates the base-10 logarithm of the argument","pos":[14808,14856]},{"content":"Parameters","pos":[14925,14935]},{"content":"Floating-point value","pos":[14947,14967]},{"content":"Return Value","pos":[14977,14989]},{"content":"Returns the base-10 logarithm of the argument","pos":[14993,15038]},{"pos":[15080,15107],"content":"log10f Function (fast_math)"},{"content":"Calculates the base-10 logarithm of the argument","pos":[15111,15159]},{"content":"Parameters","pos":[15229,15239]},{"content":"Floating-point value","pos":[15251,15271]},{"content":"Return Value","pos":[15281,15293]},{"content":"Returns the base-10 logarithm of the argument","pos":[15297,15342]},{"pos":[15382,15407],"content":"log2 Function (fast_math)"},{"content":"Calculates the base-2 logarithm of the argument","pos":[15411,15458]},{"content":"Parameters","pos":[15526,15536]},{"content":"Floating-point value","pos":[15548,15568]},{"content":"Return Value","pos":[15578,15590]},{"content":"Returns the base-2 logarithm of the argument","pos":[15594,15638]},{"pos":[15679,15705],"content":"log2f Function (fast_math)"},{"content":"Calculates the base-2 logarithm of the argument","pos":[15709,15756]},{"content":"Parameters","pos":[15825,15835]},{"content":"Floating-point value","pos":[15847,15867]},{"content":"Return Value","pos":[15877,15889]},{"content":"Returns the base-10 logarithm of the argument","pos":[15893,15938]},{"pos":[15978,16003],"content":"logf Function (fast_math)"},{"content":"Calculates the base-e logarithm of the argument","pos":[16007,16054]},{"content":"Parameters","pos":[16122,16132]},{"content":"Floating-point value","pos":[16144,16164]},{"content":"Return Value","pos":[16174,16186]},{"content":"Returns the base-e logarithm of the argument","pos":[16190,16234]},{"pos":[16274,16299],"content":"modf Function (fast_math)"},{"content":"Splits _X into fractional and integer parts.","pos":[16303,16347]},{"content":"Parameters","pos":[16438,16448]},{"content":"Floating-point value","pos":[16460,16480]},{"content":"Return Value","pos":[16502,16514]},{"content":"Returns the signed fractional portion of _X","pos":[16518,16561]},{"pos":[16602,16628],"content":"modff Function (fast_math)"},{"content":"Splits _X into fractional and integer parts.","pos":[16632,16676]},{"content":"Parameters","pos":[16768,16778]},{"content":"Floating-point value","pos":[16790,16810]},{"content":"Return Value","pos":[16832,16844]},{"content":"Returns the signed fractional portion of _X","pos":[16848,16891]},{"pos":[16930,16954],"content":"pow Function (fast_math)"},{"content":"Calculates _X raised to the power of _Y","pos":[16958,16997]},{"content":"Parameters","pos":[17085,17095]},{"content":"Floating-point value, base","pos":[17107,17133]},{"content":"Floating-point value, exponent","pos":[17148,17178]},{"content":"Return Value","pos":[17188,17200]},{"content":"Returns the value of _X raised to the power of _Y","pos":[17204,17253]},{"pos":[17293,17318],"content":"powf Function (fast_math)"},{"content":"Calculates _X raised to the power of _Y","pos":[17322,17361]},{"content":"Parameters","pos":[17450,17460]},{"content":"Floating-point value, base","pos":[17472,17498]},{"content":"Floating-point value, exponent","pos":[17513,17543]},{"content":"Return Value","pos":[17553,17565]},{"pos":[17606,17632],"content":"round Function (fast_math)"},{"content":"Rounds _X to the nearest integer","pos":[17636,17668]},{"content":"Parameters","pos":[17737,17747]},{"content":"Floating-point value","pos":[17759,17779]},{"content":"Return Value","pos":[17789,17801]},{"content":"Returns the nearest integer of _X","pos":[17805,17838]},{"pos":[17880,17907],"content":"roundf Function (fast_math)"},{"content":"Rounds _X to the nearest integer","pos":[17911,17943]},{"content":"Parameters","pos":[18013,18023]},{"content":"Floating-point value","pos":[18035,18055]},{"content":"Return Value","pos":[18065,18077]},{"content":"Returns the nearest integer of _X","pos":[18081,18114]},{"pos":[18155,18181],"content":"rsqrt Function (fast_math)"},{"content":"Returns the reciprocal of the square root of the argument","pos":[18185,18242]},{"content":"Parameters","pos":[18311,18321]},{"content":"Floating-point value","pos":[18333,18353]},{"content":"Return Value","pos":[18363,18375]},{"content":"Returns the reciprocal of the square root of the argument","pos":[18379,18436]},{"pos":[18478,18505],"content":"rsqrtf Function (fast_math)"},{"content":"Returns the reciprocal of the square root of the argument","pos":[18509,18566]},{"content":"Parameters","pos":[18636,18646]},{"content":"Floating-point value","pos":[18658,18678]},{"content":"Return Value","pos":[18688,18700]},{"content":"Returns the reciprocal of the square root of the argument","pos":[18704,18761]},{"pos":[18804,18832],"content":"signbit Function (fast_math)"},{"content":"Determines whether the sign of _X is negative","pos":[18836,18881]},{"content":"Parameters","pos":[18950,18960]},{"content":"Floating-point value","pos":[18972,18992]},{"content":"Return Value","pos":[19002,19014]},{"content":"Returns a nonzero value if and only if the sign of _X is negative","pos":[19018,19083]},{"pos":[19127,19156],"content":"signbitf Function (fast_math)"},{"content":"Determines whether the sign of _X is negative","pos":[19160,19205]},{"content":"Parameters","pos":[19275,19285]},{"content":"Floating-point value","pos":[19297,19317]},{"content":"Return Value","pos":[19327,19339]},{"content":"Returns a nonzero value if and only if the sign of _X is negative","pos":[19343,19408]},{"pos":[19447,19471],"content":"sin Function (fast_math)"},{"content":"Calculates the sine value of the argument","pos":[19475,19516]},{"content":"Parameters","pos":[19583,19593]},{"content":"Floating-point value","pos":[19605,19625]},{"content":"Return Value","pos":[19635,19647]},{"content":"Returns the sine value of the argument","pos":[19651,19689]},{"pos":[19729,19754],"content":"sinf Function (fast_math)"},{"content":"Calculates the sine value of the argument","pos":[19758,19799]},{"content":"Parameters","pos":[19867,19877]},{"content":"Floating-point value","pos":[19889,19909]},{"content":"Return Value","pos":[19919,19931]},{"content":"Returns the sine value of the argument","pos":[19935,19973]},{"pos":[20015,20042],"content":"sincos Function (fast_math)"},{"content":"Calculates sine and cosine value of _X","pos":[20046,20084]},{"content":"Parameters","pos":[20192,20202]},{"content":"Floating-point value","pos":[20214,20234]},{"content":"Returns the sine value of _X","pos":[20249,20277]},{"content":"Returns the cosine value of _X","pos":[20292,20322]},{"pos":[20365,20393],"content":"sincosf Function (fast_math)"},{"content":"Calculates sine and cosine value of _X","pos":[20397,20435]},{"content":"Parameters","pos":[20544,20554]},{"content":"Floating-point value","pos":[20566,20586]},{"content":"Returns the sine value of _X","pos":[20601,20629]},{"content":"Returns the cosine value of _X","pos":[20644,20674]},{"pos":[20714,20739],"content":"sinh Function (fast_math)"},{"content":"Calculates the hyperbolic sine value of the argument","pos":[20743,20795]},{"content":"Parameters","pos":[20863,20873]},{"content":"Floating-point value","pos":[20885,20905]},{"content":"Return Value","pos":[20915,20927]},{"content":"Returns the hyperbolic sine value of the argument","pos":[20931,20980]},{"pos":[21021,21047],"content":"sinhf Function (fast_math)"},{"content":"Calculates the hyperbolic sine value of the argument","pos":[21051,21103]},{"content":"Parameters","pos":[21172,21182]},{"content":"Floating-point value","pos":[21194,21214]},{"content":"Return Value","pos":[21224,21236]},{"content":"Returns the hyperbolic sine value of the argument","pos":[21240,21289]},{"pos":[21329,21354],"content":"sqrt Function (fast_math)"},{"content":"Calculates the squre root of the argument","pos":[21358,21399]},{"content":"Parameters","pos":[21467,21477]},{"content":"Floating-point value","pos":[21489,21509]},{"content":"Return Value","pos":[21519,21531]},{"content":"Returns the squre root of the argument","pos":[21535,21573]},{"pos":[21614,21640],"content":"sqrtf Function (fast_math)"},{"content":"Calculates the squre root of the argument","pos":[21644,21685]},{"content":"Parameters","pos":[21754,21764]},{"content":"Floating-point value","pos":[21776,21796]},{"content":"Return Value","pos":[21806,21818]},{"content":"Returns the squre root of the argument","pos":[21822,21860]},{"pos":[21899,21923],"content":"tan Function (fast_math)"},{"content":"Calculates the tangent value of the argument","pos":[21927,21971]},{"content":"Parameters","pos":[22038,22048]},{"content":"Floating-point value","pos":[22060,22080]},{"content":"Return Value","pos":[22090,22102]},{"content":"Returns the tangent value of the argument","pos":[22106,22147]},{"pos":[22187,22212],"content":"tanf Function (fast_math)"},{"content":"Calculates the tangent value of the argument","pos":[22216,22260]},{"content":"Parameters","pos":[22328,22338]},{"content":"Floating-point value","pos":[22350,22370]},{"content":"Return Value","pos":[22380,22392]},{"content":"Returns the tangent value of the argument","pos":[22396,22437]},{"pos":[22477,22502],"content":"tanh Function (fast_math)"},{"content":"Calculates the hyperbolic tangent value of the argument","pos":[22506,22561]},{"content":"Parameters","pos":[22629,22639]},{"content":"Floating-point value","pos":[22651,22671]},{"content":"Return Value","pos":[22681,22693]},{"content":"Returns the hyperbolic tangent value of the argument","pos":[22697,22749]},{"pos":[22790,22816],"content":"tanhf Function (fast_math)"},{"content":"Calculates the hyperbolic tangent value of the argument","pos":[22820,22875]},{"content":"Parameters","pos":[22944,22954]},{"content":"Floating-point value","pos":[22966,22986]},{"content":"Return Value","pos":[22996,23008]},{"content":"Returns the hyperbolic tangent value of the argument","pos":[23012,23064]},{"pos":[23105,23131],"content":"trunc Function (fast_math)"},{"content":"Truncates the argument to the integer component","pos":[23135,23182]},{"content":"Parameters","pos":[23251,23261]},{"content":"Floating-point value","pos":[23273,23293]},{"content":"Return Value","pos":[23303,23315]},{"content":"Returns the integer component of the argument","pos":[23319,23364]},{"pos":[23406,23433],"content":"truncf Function (fast_math)"},{"content":"Truncates the argument to the integer component","pos":[23437,23484]},{"content":"Parameters","pos":[23554,23564]},{"content":"Floating-point value","pos":[23576,23596]},{"content":"Return Value","pos":[23606,23618]},{"content":"Returns the integer component of the argument","pos":[23622,23667]},{"content":"See Also","pos":[23676,23684]},{"content":"Concurrency::fast_math Namespace","pos":[23689,23721]}],"content":"---\ntitle: \"Concurrency::fast_math namespace functions | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nms.assetid: f5763d62-795b-4de6-a7a5-c7115f158708\ncaps.latest.revision: 8\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\n---\n# Concurrency::fast_math namespace functions\n||||  \n|-|-|-|  \n|[acos Function (fast_math)](#acos_function)|[acosf Function (fast_math)](#acosf_function)|[asin Function (fast_math)](#asin_function)|  \n|[asinf Function (fast_math)](#asinf_function)|[atan Function (fast_math)](#atan_function)|[atan2 Function (fast_math)](#atan2_function)|  \n|[atan2f Function (fast_math)](#atan2f_function)|[atanf Function (fast_math)](#atanf_function)|[ceil Function (fast_math)](#ceil_function)|  \n|[ceilf Function (fast_math)](#ceilf_function)|[cos Function (fast_math)](#cos_function)|[cosf Function (fast_math)](#cosf_function)|  \n|[cosh Function (fast_math)](#cosh_function)|[coshf Function (fast_math)](#coshf_function)|[exp Function (fast_math)](#exp_function)|  \n|[exp2 Function (fast_math)](#exp2_function)|[exp2f Function (fast_math)](#exp2f_function)|[expf Function (fast_math)](#expf_function)|  \n|[fabs Function (fast_math)](#fabs_function)|[fabsf Function (fast_math)](#fabsf_function)|[floor Function (fast_math)](#floor_function)|  \n|[floorf Function (fast_math)](#floorf_function)|[fmax Function (fast_math)](#fmax_function)|[fmaxf Function (fast_math)](#fmaxf_function)|  \n|[fmin Function (fast_math)](#fmin_function)|[fminf Function (fast_math)](#fminf_function)|[fmod Function (fast_math)](#fmod_function)|  \n|[fmodf Function (fast_math)](#fmodf_function)|[frexp Function (fast_math)](#frexp_function)|[frexpf Function (fast_math)](#frexpf_function)|  \n|[isfinite Function (fast_math)](#isfinite_function)|[isinf Function (fast_math)](#isinf_function)|[isnan Function (fast_math)](#isnan_function)|  \n|[ldexp Function (fast_math)](#ldexp_function)|[ldexpf Function (fast_math)](#ldexpf_function)|[log Function (fast_math)](#log_function)|  \n|[log10 Function (fast_math)](#log10_function)|[log10f Function (fast_math)](#log10f_function)|[log2 Function (fast_math)](#log2_function)|  \n|[log2f Function (fast_math)](#log2f_function)|[logf Function (fast_math)](#logf_function)|[modf Function (fast_math)](#modf_function)|  \n|[modff Function (fast_math)](#modff_function)|[pow Function (fast_math)](#pow_function)|[powf Function (fast_math)](#powf_function)|  \n|[round Function (fast_math)](#round_function)|[roundf Function (fast_math)](#roundf_function)|[rsqrt Function (fast_math)](#rsqrt_function)|  \n|[rsqrtf Function (fast_math)](#rsqrtf_function)|[signbit Function (fast_math)](#signbit_function)|[signbitf Function (fast_math)](#signbitf_function)|  \n|[sin Function (fast_math)](#sin_function)|[sincos Function (fast_math)](#sincos_function)|[sincosf Function (fast_math)](#sincosf_function)|  \n|[sinf Function (fast_math)](#sinf_function)|[sinh Function (fast_math)](#sinh_function)|[sinhf Function (fast_math)](#sinhf_function)|  \n|[sqrt Function (fast_math)](#sqrt_function)|[sqrtf Function (fast_math)](#sqrtf_function)|[tan Function (fast_math)](#tan_function)|  \n|[tanf Function (fast_math)](#tanf_function)|[tanh Function (fast_math)](#tanh_function)|[tanhf Function (fast_math)](#tanhf_function)|  \n|[trunc Function (fast_math)](#trunc_function)|[truncf Function (fast_math)](#truncf_function)|  \n  \n##  <a name=\"acos_function\"></a>  acos Function (fast_math)  \n Calculates the arccosine of the argument  \n  \n```  \ninline float acos(float _X) restrict(amp);\n```  \n  \n### Parameters  \n `_X`  \n Floating-point value  \n  \n### Return Value  \n Returns the arccosine value of the argument  \n  \n##  <a name=\"acosf_function\"></a>  acosf Function (fast_math)  \n Calculates the arccosine of the argument  \n  \n```  \ninline float acosf(float _X) restrict(amp);\n```  \n  \n### Parameters  \n `_X`  \n Floating-point value  \n  \n### Return Value  \n Returns the arccosine value of the argument  \n  \n##  <a name=\"asin_function\"></a>  asin Function (fast_math)  \n Calculates the arcsine of the argument  \n  \n```  \ninline float asin(float _X) restrict(amp);\n```  \n  \n### Parameters  \n `_X`  \n Floating-point value  \n  \n### Return Value  \n Returns the arcsine value of the argument  \n  \n##  <a name=\"asinf_function\"></a>  asinf Function (fast_math)  \n Calculates the arcsine of the argument  \n  \n```  \ninline float asinf(float _X) restrict(amp);\n```  \n  \n### Parameters  \n `_X`  \n Floating-point value  \n  \n### Return Value  \n Returns the arcsine value of the argument  \n  \n##  <a name=\"atan_function\"></a>  atan Function (fast_math)  \n Calculates the arctangent of the argument  \n  \n```  \ninline float atan(float _X) restrict(amp);\n```  \n  \n### Parameters  \n `_X`  \n Floating-point value  \n  \n### Return Value  \n Returns the arctangent value of the argument  \n  \n##  <a name=\"atan2_function\"></a>  atan2 Function (fast_math)  \n Calculates the arctangent of _Y/_X  \n  \n```  \ninline float atan2(\n    float _Y,  \n    float _X) restrict(amp);\n```  \n  \n### Parameters  \n `_Y`  \n Floating-point value  \n  \n `_X`  \n Floating-point value  \n  \n### Return Value  \n Returns the arctangent value of _Y/_X  \n  \n##  <a name=\"atan2f_function\"></a>  atan2f Function (fast_math)  \n Calculates the arctangent of _Y/_X  \n  \n```  \ninline float atan2f(\n    float _Y,  \n    float _X) restrict(amp);\n```  \n  \n### Parameters  \n `_Y`  \n Floating-point value  \n  \n `_X`  \n Floating-point value  \n  \n### Return Value  \n Returns the arctangent value of _Y/_X  \n  \n##  <a name=\"atanf_function\"></a>  atanf Function (fast_math)  \n Calculates the arctangent of the argument  \n  \n```  \ninline float atanf(float _X) restrict(amp);\n```  \n  \n### Parameters  \n `_X`  \n Floating-point value  \n  \n### Return Value  \n Returns the arctangent value of the argument  \n  \n##  <a name=\"ceil_function\"></a>  ceil Function (fast_math)  \n Calculates the ceiling of the argument  \n  \n```  \ninline float ceil(float _X) restrict(amp);\n```  \n  \n### Parameters  \n `_X`  \n Floating-point value  \n  \n### Return Value  \n Returns the ceiling of the argument  \n  \n##  <a name=\"ceilf_function\"></a>  ceilf Function (fast_math)  \n Calculates the ceiling of the argument  \n  \n```  \ninline float ceilf(float _X) restrict(amp);\n```  \n  \n### Parameters  \n `_X`  \n Floating-point value  \n  \n### Return Value  \n Returns the ceiling of the argument  \n  \n##  <a name=\"cosf_function\"></a>  cosf Function (fast_math)  \n Calculates the cosine of the argument  \n  \n```  \ninline float cosf(float _X) restrict(amp);\n```  \n  \n### Parameters  \n `_X`  \n Floating-point value  \n  \n### Return Value  \n Returns the cosine value of the argument  \n  \n##  <a name=\"coshf_function\"></a>  coshf Function (fast_math)  \n Calculates the hyperbolic cosine value of the argument  \n  \n```  \ninline float coshf(float _X) restrict(amp);\n```  \n  \n### Parameters  \n `_X`  \n Floating-point value  \n  \n### Return Value  \n Returns the hyperbolic cosine value of the argument  \n  \n##  <a name=\"cos_function\"></a>  cos Function  (fast_math)  \n Calculates the cosine of the argument  \n  \n```  \ninline float cos(float _X) restrict(amp);\n```  \n  \n### Parameters  \n `_X`  \n Floating-point value  \n  \n### Return Value  \n Returns the cosine value of the argument  \n  \n##  <a name=\"cosh_function\"></a>  cosh Function (fast_math)  \n Calculates the hyperbolic cosine value of the argument  \n  \n```  \ninline float cosh(float _X) restrict(amp);\n```  \n  \n### Parameters  \n `_X`  \n Floating-point value  \n  \n### Return Value  \n Returns the hyperbolic cosine value of the argument  \n  \n##  <a name=\"exp_function\"></a>  exp Function (fast_math)  \n Calculates the base-e exponential of the argument  \n  \n```  \ninline float exp(float _X) restrict(amp);\n```  \n  \n### Parameters  \n `_X`  \n Floating-point value  \n  \n### Return Value  \n Returns the base-e exponential of the argument  \n  \n##  <a name=\"exp2_function\"></a>  exp2 Function (fast_math)  \n Calculates the base-2 exponential of the argument  \n  \n```  \ninline float exp2(float _X) restrict(amp);\n```  \n  \n### Parameters  \n `_X`  \n Floating-point value  \n  \n### Return Value  \n Returns the base-2 exponential of the argument  \n  \n##  <a name=\"exp2f_function\"></a>  exp2f Function (fast_math)  \n Calculates the base-2 exponential of the argument  \n  \n```  \ninline float exp2f(float _X) restrict(amp);\n```  \n  \n### Parameters  \n `_X`  \n Floating-point value  \n  \n### Return Value  \n Returns the base-2 exponential of the argument  \n  \n##  <a name=\"expf_function\"></a>  expf Function (fast_math)  \n Calculates the base-e exponential of the argument  \n  \n```  \ninline float expf(float _X) restrict(amp);\n```  \n  \n### Parameters  \n `_X`  \n Floating-point value  \n  \n### Return Value  \n Returns the base-e exponential of the argument  \n  \n##  <a name=\"fabs_function\"></a>  fabs Function (fast_math)  \n Returns the absolute value of the argument  \n  \n```  \ninline float fabs(float _X) restrict(amp);\n```  \n  \n### Parameters  \n `_X`  \n Integer value  \n  \n### Return Value  \n Returns the absolute value of the argument  \n  \n##  <a name=\"fabsf_function\"></a>  fabsf Function (fast_math)  \n Returns the absolute value of the argument  \n  \n```  \ninline float fabsf(float _X) restrict(amp);\n```  \n  \n### Parameters  \n `_X`  \n Floating-point value  \n  \n### Return Value  \n Returns the absolute value of the argument  \n  \n##  <a name=\"floor_function\"></a>  floor Function (fast_math)  \n Calculates the floor of the argument  \n  \n```  \ninline float floor(float _X) restrict(amp);\n```  \n  \n### Parameters  \n `_X`  \n Floating-point value  \n  \n### Return Value  \n Returns the floor of the argument  \n  \n##  <a name=\"floorf_function\"></a>  floorf Function (fast_math)  \n Calculates the floor of the argument  \n  \n```  \ninline float floorf(float _X) restrict(amp);\n```  \n  \n### Parameters  \n `_X`  \n Floating-point value  \n  \n### Return Value  \n Returns the floor of the argument  \n  \n##  <a name=\"fmax_function\"></a>  fmax Function (fast_math)  \n Determine the maximum numeric value of the arguments  \n  \n```  \ninline float max(\n    float _X,  \n    float _Y) restrict(amp);\n```  \n  \n### Parameters  \n `_X`  \n Integer value  \n  \n `_Y`  \n Integer value  \n  \n### Return Value  \n Return the maximum numeric value of the arguments  \n  \n##  <a name=\"fmaxf_function\"></a>  fmaxf Function (fast_math)  \n Determine the maximum numeric value of the arguments  \n  \n```  \ninline float fmaxf(\n    float _X,  \n    float _Y) restrict(amp);\n```  \n  \n### Parameters  \n `_X`  \n Floating-point value  \n  \n `_Y`  \n Floating-point value  \n  \n### Return Value  \n Return the maximum numeric value of the arguments  \n  \n##  <a name=\"fmin_function\"></a>  fmin Function (fast_math)  \n Determine the minimum numeric value of the arguments  \n  \n```  \ninline float min(\n    float _X,  \n    float _Y) restrict(amp);\n```  \n  \n### Parameters  \n `_X`  \n Integer value  \n  \n `_Y`  \n Integer value  \n  \n### Return Value  \n Return the minimum numeric value of the arguments  \n  \n##  <a name=\"fminf_function\"></a>  fminf Function (fast_math)  \n Determine the minimum numeric value of the arguments  \n  \n```  \ninline float fminf(\n    float _X,  \n    float _Y) restrict(amp);\n```  \n  \n### Parameters  \n `_X`  \n Floating-point value  \n  \n `_Y`  \n Floating-point value  \n  \n### Return Value  \n Return the minimum numeric value of the arguments  \n  \n##  <a name=\"fmod_function\"></a>  fmod Function (fast_math)  \n Calculates the floating-point remainder of _X/_Y  \n  \n```  \ninline float fmod(\n    float _X,  \n    float _Y) restrict(amp);\n```  \n  \n### Parameters  \n `_X`  \n Floating-point value  \n  \n `_Y`  \n Floating-point value  \n  \n### Return Value  \n Returns the floating-point remainder of _X/_Y  \n  \n##  <a name=\"fmodf_function\"></a>  fmodf Function (fast_math)  \n Calculates the floating-point remainder of _X/_Y.  \n  \n```  \ninline float fmodf(\n    float _X,  \n    float _Y) restrict(amp);\n```  \n  \n### Parameters  \n `_X`  \n Floating-point value  \n  \n `_Y`  \n Floating-point value  \n  \n### Return Value  \n Returns the floating-point remainder of _X/_Y  \n  \n##  <a name=\"frexp_function\"></a>  frexp Function (fast_math)  \n Gets the mantissa and exponent of _X  \n  \n```  \ninline float frexp(\n    float _X,  \n    _Out_ int* _Exp) restrict(amp);\n```  \n  \n### Parameters  \n `_X`  \n Floating-point value  \n  \n `_Exp`  \n Returns the integer exponent of _X in floating-point value  \n  \n### Return Value  \n Returns the mantissa _X  \n  \n##  <a name=\"frexpf_function\"></a>  frexpf Function (fast_math)  \n Gets the mantissa and exponent of _X  \n  \n```  \ninline float frexpf(\n    float _X,  \n    _Out_ int* _Exp) restrict(amp);\n```  \n  \n### Parameters  \n `_X`  \n Floating-point value  \n  \n `_Exp`  \n Returns the integer exponent of _X in floating-point value  \n  \n### Return Value  \n Returns the mantissa _X  \n  \n##  <a name=\"isfinite_function\"></a>  isfinite Function (fast_math)  \n Determines whether the argument has a finite value  \n  \n```  \ninline int isfinite(float _X) restrict(amp);\n```  \n  \n### Parameters  \n `_X`  \n Floating-point value  \n  \n### Return Value  \n Returns a nonzero value if and only if the argument has a finite value  \n  \n##  <a name=\"isinf_function\"></a>  isinf Function (fast_math)  \n Determines whether the argument is an infinity  \n  \n```  \ninline int isinf(float _X) restrict(amp);\n```  \n  \n### Parameters  \n `_X`  \n Floating-point value  \n  \n### Return Value  \n Returns a nonzero value if and only if the argument has an infinite value  \n  \n##  <a name=\"isnan_function\"></a>  isnan Function (fast_math)  \n Determines whether the argument is a NaN  \n  \n```  \ninline int isnan(float _X) restrict(amp);\n```  \n  \n### Parameters  \n `_X`  \n Floating-point value  \n  \n### Return Value  \n Returns a nonzero value if and only if the argument has a NaN value  \n  \n##  <a name=\"ldexp_function\"></a>  ldexp Function (fast_math)  \n Computes a real number from the mantissa and exponent  \n  \n```  \ninline float ldexp(\n    float _X,  \n    int _Exp) restrict(amp);\n```  \n  \n### Parameters  \n `_X`  \n Floating-point value, mentissa  \n  \n `_Exp`  \n Integer exponent  \n  \n### Return Value  \n Returns _X * 2^_Exp  \n  \n##  <a name=\"ldexpf_function\"></a>  ldexpf Function (fast_math)  \n Computes a real number from the mantissa and exponent  \n  \n```  \ninline float ldexpf(\n    float _X,  \n    int _Exp) restrict(amp);\n```  \n  \n### Parameters  \n `_X`  \n Floating-point value, mentissa  \n  \n `_Exp`  \n Integer exponent  \n  \n### Return Value  \n Returns _X * 2^_Exp  \n  \n##  <a name=\"log_function\"></a>  log Function (fast_math)  \n Calculates the base-e logarithm of the argument  \n  \n```  \ninline float log(float _X) restrict(amp);\n```  \n  \n### Parameters  \n `_X`  \n Floating-point value  \n  \n### Return Value  \n Returns the base-e logarithm of the argument  \n  \n##  <a name=\"log10_function\"></a>  log10 Function (fast_math)  \n Calculates the base-10 logarithm of the argument  \n  \n```  \ninline float log10(float _X) restrict(amp);\n```  \n  \n### Parameters  \n `_X`  \n Floating-point value  \n  \n### Return Value  \n Returns the base-10 logarithm of the argument  \n  \n##  <a name=\"log10f_function\"></a>  log10f Function (fast_math)  \n Calculates the base-10 logarithm of the argument  \n  \n```  \ninline float log10f(float _X) restrict(amp);\n```  \n  \n### Parameters  \n `_X`  \n Floating-point value  \n  \n### Return Value  \n Returns the base-10 logarithm of the argument  \n  \n##  <a name=\"log2_function\"></a>  log2 Function (fast_math)  \n Calculates the base-2 logarithm of the argument  \n  \n```  \ninline float log2(float _X) restrict(amp);\n```  \n  \n### Parameters  \n `_X`  \n Floating-point value  \n  \n### Return Value  \n Returns the base-2 logarithm of the argument  \n  \n##  <a name=\"log2f_function\"></a>  log2f Function (fast_math)  \n Calculates the base-2 logarithm of the argument  \n  \n```  \ninline float log2f(float _X) restrict(amp);\n```  \n  \n### Parameters  \n `_X`  \n Floating-point value  \n  \n### Return Value  \n Returns the base-10 logarithm of the argument  \n  \n##  <a name=\"logf_function\"></a>  logf Function (fast_math)  \n Calculates the base-e logarithm of the argument  \n  \n```  \ninline float logf(float _X) restrict(amp);\n```  \n  \n### Parameters  \n `_X`  \n Floating-point value  \n  \n### Return Value  \n Returns the base-e logarithm of the argument  \n  \n##  <a name=\"modf_function\"></a>  modf Function (fast_math)  \n Splits _X into fractional and integer parts.  \n  \n```  \ninline float modf(\n    float _X,  \n    float* _Ip) restrict(amp);\n```  \n  \n### Parameters  \n `_X`  \n Floating-point value  \n  \n `_Ip`  \n  \n### Return Value  \n Returns the signed fractional portion of _X  \n  \n##  <a name=\"modff_function\"></a>  modff Function (fast_math)  \n Splits _X into fractional and integer parts.  \n  \n```  \ninline float modff(\n    float _X,  \n    float* _Ip) restrict(amp);\n```  \n  \n### Parameters  \n `_X`  \n Floating-point value  \n  \n `_Ip`  \n  \n### Return Value  \n Returns the signed fractional portion of _X  \n  \n##  <a name=\"pow_function\"></a>  pow Function (fast_math)  \n Calculates _X raised to the power of _Y  \n  \n```  \ninline float pow(\n    float _X,  \n    float _Y) restrict(amp);\n```  \n  \n### Parameters  \n `_X`  \n Floating-point value, base  \n  \n `_Y`  \n Floating-point value, exponent  \n  \n### Return Value  \n Returns the value of _X raised to the power of _Y  \n  \n##  <a name=\"powf_function\"></a>  powf Function (fast_math)  \n Calculates _X raised to the power of _Y  \n  \n```  \ninline float powf(\n    float _X,  \n    float _Y) restrict(amp);\n```  \n  \n### Parameters  \n `_X`  \n Floating-point value, base  \n  \n `_Y`  \n Floating-point value, exponent  \n  \n### Return Value  \n  \n##  <a name=\"round_function\"></a>  round Function (fast_math)  \n Rounds _X to the nearest integer  \n  \n```  \ninline float round(float _X) restrict(amp);\n```  \n  \n### Parameters  \n `_X`  \n Floating-point value  \n  \n### Return Value  \n Returns the nearest integer of _X  \n  \n##  <a name=\"roundf_function\"></a>  roundf Function (fast_math)  \n Rounds _X to the nearest integer  \n  \n```  \ninline float roundf(float _X) restrict(amp);\n```  \n  \n### Parameters  \n `_X`  \n Floating-point value  \n  \n### Return Value  \n Returns the nearest integer of _X  \n  \n##  <a name=\"rsqrt_function\"></a>  rsqrt Function (fast_math)  \n Returns the reciprocal of the square root of the argument  \n  \n```  \ninline float rsqrt(float _X) restrict(amp);\n```  \n  \n### Parameters  \n `_X`  \n Floating-point value  \n  \n### Return Value  \n Returns the reciprocal of the square root of the argument  \n  \n##  <a name=\"rsqrtf_function\"></a>  rsqrtf Function (fast_math)  \n Returns the reciprocal of the square root of the argument  \n  \n```  \ninline float rsqrtf(float _X) restrict(amp);\n```  \n  \n### Parameters  \n `_X`  \n Floating-point value  \n  \n### Return Value  \n Returns the reciprocal of the square root of the argument  \n  \n##  <a name=\"signbit_function\"></a>  signbit Function (fast_math)  \n Determines whether the sign of _X is negative  \n  \n```  \ninline int signbit(float _X) restrict(amp);\n```  \n  \n### Parameters  \n `_X`  \n Floating-point value  \n  \n### Return Value  \n Returns a nonzero value if and only if the sign of _X is negative  \n  \n##  <a name=\"signbitf_function\"></a>  signbitf Function (fast_math)  \n Determines whether the sign of _X is negative  \n  \n```  \ninline int signbitf(float _X) restrict(amp);\n```  \n  \n### Parameters  \n `_X`  \n Floating-point value  \n  \n### Return Value  \n Returns a nonzero value if and only if the sign of _X is negative  \n  \n##  <a name=\"sin_function\"></a>  sin Function (fast_math)  \n Calculates the sine value of the argument  \n  \n```  \ninline float sin(float _X) restrict(amp);\n```  \n  \n### Parameters  \n `_X`  \n Floating-point value  \n  \n### Return Value  \n Returns the sine value of the argument  \n  \n##  <a name=\"sinf_function\"></a>  sinf Function (fast_math)  \n Calculates the sine value of the argument  \n  \n```  \ninline float sinf(float _X) restrict(amp);\n```  \n  \n### Parameters  \n `_X`  \n Floating-point value  \n  \n### Return Value  \n Returns the sine value of the argument  \n  \n##  <a name=\"sincos_function\"></a>  sincos Function (fast_math)  \n Calculates sine and cosine value of _X  \n  \n```  \ninline void sincos(\n    float _X,  \n    float* _S,  \n    float* _C) restrict(amp);\n```  \n  \n### Parameters  \n `_X`  \n Floating-point value  \n  \n `_S`  \n Returns the sine value of _X  \n  \n `_C`  \n Returns the cosine value of _X  \n  \n##  <a name=\"sincosf_function\"></a>  sincosf Function (fast_math)  \n Calculates sine and cosine value of _X  \n  \n```  \ninline void sincosf(\n    float _X,  \n    float* _S,  \n    float* _C) restrict(amp);\n```  \n  \n### Parameters  \n `_X`  \n Floating-point value  \n  \n `_S`  \n Returns the sine value of _X  \n  \n `_C`  \n Returns the cosine value of _X  \n  \n##  <a name=\"sinh_function\"></a>  sinh Function (fast_math)  \n Calculates the hyperbolic sine value of the argument  \n  \n```  \ninline float sinh(float _X) restrict(amp);\n```  \n  \n### Parameters  \n `_X`  \n Floating-point value  \n  \n### Return Value  \n Returns the hyperbolic sine value of the argument  \n  \n##  <a name=\"sinhf_function\"></a>  sinhf Function (fast_math)  \n Calculates the hyperbolic sine value of the argument  \n  \n```  \ninline float sinhf(float _X) restrict(amp);\n```  \n  \n### Parameters  \n `_X`  \n Floating-point value  \n  \n### Return Value  \n Returns the hyperbolic sine value of the argument  \n  \n##  <a name=\"sqrt_function\"></a>  sqrt Function (fast_math)  \n Calculates the squre root of the argument  \n  \n```  \ninline float sqrt(float _X) restrict(amp);\n```  \n  \n### Parameters  \n `_X`  \n Floating-point value  \n  \n### Return Value  \n Returns the squre root of the argument  \n  \n##  <a name=\"sqrtf_function\"></a>  sqrtf Function (fast_math)  \n Calculates the squre root of the argument  \n  \n```  \ninline float sqrtf(float _X) restrict(amp);\n```  \n  \n### Parameters  \n `_X`  \n Floating-point value  \n  \n### Return Value  \n Returns the squre root of the argument  \n  \n##  <a name=\"tan_function\"></a>  tan Function (fast_math)  \n Calculates the tangent value of the argument  \n  \n```  \ninline float tan(float _X) restrict(amp);\n```  \n  \n### Parameters  \n `_X`  \n Floating-point value  \n  \n### Return Value  \n Returns the tangent value of the argument  \n  \n##  <a name=\"tanf_function\"></a>  tanf Function (fast_math)  \n Calculates the tangent value of the argument  \n  \n```  \ninline float tanf(float _X) restrict(amp);\n```  \n  \n### Parameters  \n `_X`  \n Floating-point value  \n  \n### Return Value  \n Returns the tangent value of the argument  \n  \n##  <a name=\"tanh_function\"></a>  tanh Function (fast_math)  \n Calculates the hyperbolic tangent value of the argument  \n  \n```  \ninline float tanh(float _X) restrict(amp);\n```  \n  \n### Parameters  \n `_X`  \n Floating-point value  \n  \n### Return Value  \n Returns the hyperbolic tangent value of the argument  \n  \n##  <a name=\"tanhf_function\"></a>  tanhf Function (fast_math)  \n Calculates the hyperbolic tangent value of the argument  \n  \n```  \ninline float tanhf(float _X) restrict(amp);\n```  \n  \n### Parameters  \n `_X`  \n Floating-point value  \n  \n### Return Value  \n Returns the hyperbolic tangent value of the argument  \n  \n##  <a name=\"trunc_function\"></a>  trunc Function (fast_math)  \n Truncates the argument to the integer component  \n  \n```  \ninline float trunc(float _X) restrict(amp);\n```  \n  \n### Parameters  \n `_X`  \n Floating-point value  \n  \n### Return Value  \n Returns the integer component of the argument  \n  \n##  <a name=\"truncf_function\"></a>  truncf Function (fast_math)  \n Truncates the argument to the integer component  \n  \n```  \ninline float truncf(float _X) restrict(amp);\n```  \n  \n### Parameters  \n `_X`  \n Floating-point value  \n  \n### Return Value  \n Returns the integer component of the argument  \n  \n## See Also  \n [Concurrency::fast_math Namespace](concurrency-fast-math-namespace.md)\n"}