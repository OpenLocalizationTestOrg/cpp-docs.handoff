<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="fr-fr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-04506c2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">230222e432e58608a77c4c7a4daf7ba6fad41710</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\mfc\reference\cdaoworkspace-class.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dc32b6a01524d8be37b8b24b8f7d0482d87b5ae6</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c737b6e963d3d1f3adef74a586c0b2a6393cc68c</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>CDaoWorkspace Class | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>CDaoWorkspace Class</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Manages a named, password-protected database session from login to logoff, by a single user.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Members</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Public Constructors</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>CDaoWorkspace::CDaoWorkspace</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Constructs a workspace object.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Afterwards, call <bpt id="p1">**</bpt>Create<ept id="p1">**</ept> or <bpt id="p2">**</bpt>Open<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Public Methods</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>CDaoWorkspace::Append</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Appends a newly created workspace to the database engine's Workspaces collection.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>CDaoWorkspace::BeginTrans</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Begins a new transaction, which applies to all databases open in the workspace.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>CDaoWorkspace::Close</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Closes the workspace and all of the objects it contains.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Pending transactions are rolled back.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>CDaoWorkspace::CommitTrans</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Completes the current transaction and saves the changes.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>CDaoWorkspace::CompactDatabase</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Compacts (or duplicates) a database.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>CDaoWorkspace::Create</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Creates a new DAO workspace object.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>CDaoWorkspace::GetDatabaseCount</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Returns the number of DAO database objects in the workspace's Databases collection.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>CDaoWorkspace::GetDatabaseInfo</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Returns information about a specified DAO database defined in the workspace's Databases collection.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>CDaoWorkspace::GetIniPath</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Returns the location of the Microsoft Jet database engine's initialization settings in the Windows registry.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>CDaoWorkspace::GetIsolateODBCTrans</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Returns a value that indicates whether multiple transactions that involve the same ODBC data source are isolated via forced multiple connections to the data source.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>CDaoWorkspace::GetLoginTimeout</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Returns the number of seconds before an error occurs when the user attempts to log in to an ODBC database.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>CDaoWorkspace::GetName</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Returns the user-defined name for the workspace object.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>CDaoWorkspace::GetUserName</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Returns the user name specified when the workspace was created.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>This is the name of the workspace owner.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>CDaoWorkspace::GetVersion</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Returns a string that contains the version of the database engine associated with the workspace.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>CDaoWorkspace::GetWorkspaceCount</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Returns the number of DAO workspace objects in the database engine's Workspaces collection.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>CDaoWorkspace::GetWorkspaceInfo</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Returns information about a specified DAO workspace defined in the database engine's Workspaces collection.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>CDaoWorkspace::Idle</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Allows the database engine to perform background tasks.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>CDaoWorkspace::IsOpen</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Returns nonzero if the workspace is open.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>CDaoWorkspace::Open</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Explicitly opens a workspace object associated with DAO's default workspace.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>CDaoWorkspace::RepairDatabase</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Attempts to repair a damaged database.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>CDaoWorkspace::Rollback</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Ends the current transaction and does not save the changes.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>CDaoWorkspace::SetDefaultPassword</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Sets the password that the database engine uses when a workspace object is created without a specific password.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>CDaoWorkspace::SetDefaultUser</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Sets the user name that the database engine uses when a workspace object is created without a specific user name.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>CDaoWorkspace::SetIniPath</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Sets the location of the Microsoft Jet database engine's initialization settings in the Windows registry.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>CDaoWorkspace::SetIsolateODBCTrans</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Specifies whether multiple transactions that involve the same ODBC data source are isolated by forcing multiple connections to the data source.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>CDaoWorkspace::SetLoginTimeout</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Sets the number of seconds before an error occurs when the user attempts to log in to an ODBC data source.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Public Data Members</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>CDaoWorkspace::m_pDAOWorkspace</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Points to the underlying DAO workspace object.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>In most cases, you will not need multiple workspaces, and you will not need to create explicit workspace objects; when you open database and recordset objects, they use DAO's default workspace.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>However, if needed, you can run multiple sessions at a time by creating additional workspace objects.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Each workspace object can contain multiple open database objects in its own Databases collection.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>In MFC, a workspace is primarily a transaction manager, specifying a set of open databases all in the same "transaction space."</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>The DAO database classes are distinct from the MFC database classes based on Open Database Connectivity (ODBC).</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>All DAO database class names have a "CDao" prefix.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>In general, the MFC classes based on DAO are more capable than the MFC classes based on ODBC.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>The DAO-based classes access data through the Microsoft Jet database engine, including ODBC drivers.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>They also support Data Definition Language (DDL) operations, such as creating databases and adding tables and fields via the classes, without having to call DAO directly.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Capabilities</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Class <ph id="ph1">`CDaoWorkspace`</ph> provides the following:</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Explicit access, if needed, to a default workspace, created by initializing the database engine.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Usually you use DAO's default workspace implicitly by creating database and recordset objects.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>A transaction space in which transactions apply to all databases open in the workspace.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>You can create additional workspaces to manage separate transaction spaces.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>An interface to many properties of the underlying Microsoft Jet database engine (see the static member functions).</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Opening or creating a workspace, or calling a static member function before open or create, initializes the database engine.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Access to the database engine's Workspaces collection, which stores all active workspaces that have been appended to it.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>You can also create and work with workspaces without appending them to the collection.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Security</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>MFC does not implement the Users and Groups collections in DAO, which are used for security control.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>If you need those aspects of DAO, you must program them yourself via direct calls to DAO interfaces.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>For information, see <bpt id="p1">[</bpt>Technical Note 54<ept id="p1">](../../mfc/tn054-calling-dao-directly-while-using-mfc-dao-classes.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Usage</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>You can use class <ph id="ph1">`CDaoWorkspace`</ph> to:</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Explicitly open the default workspace.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Usually your use of the default workspace is implicit — when you open new <bpt id="p1">[</bpt>CDaoDatabase<ept id="p1">](../../mfc/reference/cdaodatabase-class.md)</ept> or <bpt id="p2">[</bpt>CDaoRecordset<ept id="p2">](../../mfc/reference/cdaorecordset-class.md)</ept> objects.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>But you might need to access it explicitly — for example, to access database engine properties or the Workspaces collection.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>See "Implicit Use of the Default Workspace" below.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Create new workspaces.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Call <bpt id="p1">[</bpt>Append<ept id="p1">](#cdaoworkspace__append)</ept> if you want to add them to the Workspaces collection.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Open an existing workspace in the Workspaces collection.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Creating a new workspace that does not already exist in the Workspaces collection is described under the <bpt id="p1">[</bpt>Create<ept id="p1">](#cdaoworkspace__create)</ept> member function.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Workspace objects do not persist in any way between datababase engine sessions.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>If your application links MFC statically, ending the application uninitializes the database engine.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>If your application links with MFC dynamically, the database engine is uninitialized when the MFC DLL is unloaded.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Explicitly opening the default workspace, or opening an existing workspace in the Workspaces collection, is described under the <bpt id="p1">[</bpt>Open<ept id="p1">](#cdaoworkspace__open)</ept> member function.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>End a workspace session by closing the workspace with the <bpt id="p1">[</bpt>Close<ept id="p1">](#cdaoworkspace__close)</ept> member function.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Close<ept id="p1">**</ept> closes any databases you have not closed previously, rolling back any uncommitted transactions.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Transactions</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>DAO manages transactions at the workspace level; hence, transactions on a workspace with multiple open databases apply to all of the databases.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>For example, if two databases have uncommitted updates and you call <bpt id="p1">[</bpt>CommitTrans<ept id="p1">](#cdaoworkspace__committrans)</ept>, all of the updates are committed.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>If you want to limit transactions to a single database, you need a separate workspace object for it.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>Implicit Use of the Default Workspace</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>MFC uses DAO's default workspace implicitly under the following circumstances:</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>If you create a new <ph id="ph1">`CDaoDatabase`</ph> object but do not do so through an existing <ph id="ph2">`CDaoWorkspace`</ph> object, MFC creates a temporary workspace object for you, which corresponds to DAO's default workspace.</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>If you do so for multiple databases, all of the database objects are associated with the default workspace.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>You can access a database's workspace through a <ph id="ph1">`CDaoDatabase`</ph> data member.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Similarly, if you create a <ph id="ph1">`CDaoRecordset`</ph> object without supplying a pointer to a <ph id="ph2">`CDaoDatabase`</ph> object, MFC creates a temporary database object and, by extension, a temporary workspace object.</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>You can access a recordset's database, and indirectly its workspace, through a <ph id="ph1">`CDaoRecordset`</ph> data member.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>Other Operations</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>Other database operations are also provided, such as repairing a corrupted database or compacting a database.</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>For information about calling DAO directly and about DAO security, see <bpt id="p1">[</bpt>Technical Note 54<ept id="p1">](../../mfc/tn054-calling-dao-directly-while-using-mfc-dao-classes.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>Inheritance Hierarchy</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>CObject</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>Requirements</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Header:<ept id="p1">**</ept> afxdao.h</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>CDaoWorkspace::Append</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>Call this member function after you call <bpt id="p1">[</bpt>Create<ept id="p1">](#cdaoworkspace__create)</ept>.</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Append<ept id="p1">**</ept> appends a newly created workspace object to the database engine's Workspaces collection.</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>Workspaces do not persist between database engine sessions; they are stored only in memory, not on disk.</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>You do not have to append a workspace; if you do not, you can still use it.</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>An appended workspace remains in the Workspaces collection, in an active, open state, until you call its <bpt id="p1">[</bpt>Close<ept id="p1">](#cdaoworkspace__close)</ept> member function.</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>For related information, see the topic "Append Method" in DAO Help.</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>CDaoWorkspace::BeginTrans</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>Call this member function to initiate a transaction.</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>After you call <bpt id="p1">**</bpt>BeginTrans<ept id="p1">**</ept>, updates you make to your data or database structure take effect when you commit the transaction.</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>Because the workspace defines a single transaction space, the transaction applies to all open databases in the workspace.</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>There are two ways to complete the transaction:</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>Call the <bpt id="p1">[</bpt>CommitTrans<ept id="p1">](#cdaoworkspace__committrans)</ept> member function to commit the transaction and save changes to the data source.</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>Or call the <bpt id="p1">[</bpt>Rollback<ept id="p1">](#cdaoworkspace__rollback)</ept> member function to cancel the transaction.</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>Closing the workspace object or a database object while a transaction is pending rolls back all pending transactions.</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>If you need to isolate transactions on one ODBC data source from those on another ODBC data source, see the <bpt id="p1">[</bpt>SetIsolateODBCTrans<ept id="p1">](#cdaoworkspace__setisolateodbctrans)</ept> member function.</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>CDaoWorkspace::CDaoWorkspace</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>Constructs a <ph id="ph1">`CDaoWorkspace`</ph> object.</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>After constructing the C++ object, you have two options:</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>Call the object's <bpt id="p1">[</bpt>Open<ept id="p1">](#cdaoworkspace__open)</ept> member function to open the default workspace or to open an existing object in the Workspaces collection.</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>Or call the object's <bpt id="p1">[</bpt>Create<ept id="p1">](#cdaoworkspace__create)</ept> member function to create a new DAO workspace object.</source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>This explicitly starts a new workspace session, which you can refer to via the <ph id="ph1">`CDaoWorkspace`</ph> object.</source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>After calling <bpt id="p1">**</bpt>Create<ept id="p1">**</ept>, you can call <bpt id="p2">[</bpt>Append<ept id="p2">](#cdaoworkspace__append)</ept> if you want to add the workspace to the database engine's Workspaces collection.</source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>See the class overview for <bpt id="p1">[</bpt>CDaoWorkspace<ept id="p1">](../../mfc/reference/cdaoworkspace-class.md)</ept> for information about when you need to explicitly create a <ph id="ph1">`CDaoWorkspace`</ph> object.</source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>Usually, you use workspaces created implicitly when you open a <bpt id="p1">[</bpt>CDaoDatabase<ept id="p1">](../../mfc/reference/cdaodatabase-class.md)</ept> object without specifying a workspace or when you open a <bpt id="p2">[</bpt>CDaoRecordset<ept id="p2">](../../mfc/reference/cdaorecordset-class.md)</ept> object without specifying a database object.</source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>MFC DAO objects created in this way use DAO's default workspace, which is created once and reused.</source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>To release a workspace and its contained objects, call the workspace object's <bpt id="p1">[</bpt>Close<ept id="p1">](#cdaoworkspace__close)</ept> member function.</source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>CDaoWorkspace::Close</source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>Call this member function to close the workspace object.</source>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>Closing an open workspace object releases the underlying DAO object and, if the workspace is a member of the Workspaces collection, removes it from the collection.</source>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>Calling <bpt id="p1">**</bpt>Close<ept id="p1">**</ept> is good programming practice.</source>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>Closing a workspace object closes any open databases in the workspace.</source>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>This results in any recordsets open in the databases being closed as well, and any pending edits or updates are rolled back.</source>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>For related information, see the <bpt id="p1">[</bpt>CDaoDatabase::Close<ept id="p1">](../../mfc/reference/cdaodatabase-class.md#cdaodatabase__close)</ept>, <bpt id="p2">[</bpt>CDaoRecordset::Close<ept id="p2">](../../mfc/reference/cdaorecordset-class.md#cdaorecordset__close)</ept>, <bpt id="p3">[</bpt>CDaoTableDef::Close<ept id="p3">](../../mfc/reference/cdaotabledef-class.md#cdaotabledef__close)</ept>, and <bpt id="p4">[</bpt>CDaoQueryDef::Close<ept id="p4">](../../mfc/reference/cdaoquerydef-class.md#cdaoquerydef__close)</ept> member functions.</source>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>Workspace objects are not permanent; they only exist while references to them exist.</source>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>This means that when the database engine session ends, the workspace and its Databases collection do not persist.</source>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>You must re-create them for the next session by opening your workspace and database(s) again.</source>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>For related information, see the topic "Close Method" in DAO Help.</source>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>CDaoWorkspace::CommitTrans</source>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>Call this member function to commit a transaction — save a group of edits and updates to one or more databases in the workspace.</source>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>A transaction consists of a series of changes to the database's data or its structure, beginning with a call to <bpt id="p1">[</bpt>BeginTrans<ept id="p1">](#cdaoworkspace__begintrans)</ept>.</source>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>When you complete the transaction, either commit it or roll it back (cancel the changes) with <bpt id="p1">[</bpt>Rollback<ept id="p1">](#cdaoworkspace__rollback)</ept>.</source>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>By default, without transactions, updates to records are committed immediately.</source>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>Calling <bpt id="p1">**</bpt>BeginTrans<ept id="p1">**</ept> causes commitment of updates to be delayed until you call <bpt id="p2">**</bpt>CommitTrans<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>Within one workspace, transactions are always global to the workspace and are not limited to only one database or recordset.</source>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>If you perform operations on more than one database or recordset within a workspace transaction, <bpt id="p1">**</bpt>CommitTrans<ept id="p1">**</ept> commits all pending updates, and <bpt id="p2">**</bpt>Rollback<ept id="p2">**</ept> restores all operations on those databases and recordsets.</source>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>When you close a database or workspace with pending transactions, the transactions are all rolled back.</source>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>This is not a two-phase commit mechanism.</source>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>If one update fails to commit, others still will commit.</source>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>CDaoWorkspace::CompactDatabase</source>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>Call this member function to compact a specified Microsoft Jet (.MDB) database.</source>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>The name of an existing, closed database.</source>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>It can be a full path and filename, such as "C:<ph id="ph1">\\</ph>\MYDB.MDB".</source>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>If the filename has an extension, you must specify it.</source>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>If your network supports the uniform naming convention (UNC), you can also specify a network path, such as "<ph id="ph1">\\\\\\</ph>\MYSERVER<ph id="ph2">\\</ph>\MYSHARE<ph id="ph3">\\</ph>\MYDIR<ph id="ph4">\\</ph>\MYDB.MDB".</source>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>(Double backslashes are required in the path strings because "<ph id="ph1">\\</ph>" is the C++ escape character.)</source>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>The full path of the compacted database that you are creating.</source>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>You can also specify a network path as with <ph id="ph1">`lpszSrcName`</ph>.</source>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>You cannot use the <ph id="ph1">`lpszDestName`</ph> argument to specify the same database file as <ph id="ph2">`lpszSrcName`</ph>.</source>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>A password, used when you want to compact a password-protected database.</source>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>Note that if you use the version of <ph id="ph1">`CompactDatabase`</ph> that takes a password, you must supply all parameters.</source>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>Also, because this is a connect parameter, it requires special formatting, as follows: ;PWD= <ph id="ph1">`lpszPassword`</ph>.</source>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>For example: ;PWD="Happy".</source>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>(The leading semicolon is required.)</source>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>A string expression used to specify collating order for creating <ph id="ph1">`lpszDestName`</ph>.</source>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>If you omit this argument by accepting the default value of <bpt id="p1">**</bpt>dbLangGeneral<ept id="p1">**</ept> (see below), the locale of the new database is the same as that of the old database.</source>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>Possible values are:</source>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>dbLangGeneral<ept id="p1">**</ept> English, German, French, Portuguese, Italian, and Modern Spanish</source>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>dbLangArabic<ept id="p1">**</ept> Arabic</source>
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>dbLangCyrillic<ept id="p1">**</ept> Russian</source>
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>dbLangCzech<ept id="p1">**</ept> Czech</source>
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>dbLangDutch<ept id="p1">**</ept> Dutch</source>
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>dbLangGreek<ept id="p1">**</ept> Greek</source>
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>dbLangHebrew<ept id="p1">**</ept> Hebrew</source>
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>dbLangHungarian<ept id="p1">**</ept> Hungarian</source>
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>dbLangIcelandic<ept id="p1">**</ept> Icelandic</source>
        </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>dbLangNordic<ept id="p1">**</ept> Nordic languages (Microsoft Jet database engine version 1.0 only)</source>
        </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>dbLangNorwdan<ept id="p1">**</ept> Norwegian and Danish</source>
        </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>dbLangPolish<ept id="p1">**</ept> Polish</source>
        </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>dbLangSpanish<ept id="p1">**</ept> Traditional Spanish</source>
        </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>dbLangSwedfin<ept id="p1">**</ept> Swedish and Finnish</source>
        </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>dbLangTurkish<ept id="p1">**</ept> Turkish</source>
        </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>Indicates one or more options for the target database, <ph id="ph1">`lpszDestName`</ph>.</source>
        </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>If you omit this argument by accepting the default value, the <ph id="ph1">`lpszDestName`</ph> will have the same encryption and the same version as <ph id="ph2">`lpszSrcName`</ph>.</source>
        </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>You can combine the <bpt id="p1">**</bpt>dbEncrypt<ept id="p1">**</ept> or <bpt id="p2">**</bpt>dbDecrypt<ept id="p2">**</ept> option with one of the version options using the bitwise-OR operator.</source>
        </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>Possible values, which specify a database format, not a database engine version, are:</source>
        </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>dbEncrypt<ept id="p1">**</ept> Encrypt the database while compacting.</source>
        </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>dbDecrypt<ept id="p1">**</ept> Decrypt the database while compacting.</source>
        </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>dbVersion10<ept id="p1">**</ept> Create a database that uses the Microsoft Jet database engine version 1.0 while compacting.</source>
        </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>dbVersion11<ept id="p1">**</ept> Create a database that uses the Microsoft Jet database engine version 1.1 while compacting.</source>
        </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>dbVersion20<ept id="p1">**</ept> Create a database that uses the Microsoft Jet database engine version 2.0 while compacting.</source>
        </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>dbVersion30<ept id="p1">**</ept> Create a database that uses the Microsoft Jet database engine version 3.0 while compacting.</source>
        </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>You can use <bpt id="p1">**</bpt>dbEncrypt<ept id="p1">**</ept> or <bpt id="p2">**</bpt>dbDecrypt<ept id="p2">**</ept> in the options argument to specify whether to encrypt or to decrypt the database as it is compacted.</source>
        </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>If you omit an encryption constant or if you include both <bpt id="p1">**</bpt>dbDecrypt<ept id="p1">**</ept> and <bpt id="p2">**</bpt>dbEncrypt<ept id="p2">**</ept>, <ph id="ph1">`lpszDestName`</ph> will have the same encryption as <ph id="ph2">`lpszSrcName`</ph>.</source>
        </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>You can use one of the version constants in the options argument to specify the version of the data format for the compacted database.</source>
        </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>This constant affects only the version of the data format of <ph id="ph1">`lpszDestName`</ph>.</source>
        </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>You can specify only one version constant.</source>
        </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source>If you omit a version constant, <ph id="ph1">`lpszDestName`</ph> will have the same version as <ph id="ph2">`lpszSrcName`</ph>.</source>
        </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>You can compact <ph id="ph1">`lpszDestName`</ph> only to a version that is the same or later than that of <ph id="ph2">`lpszSrcName`</ph>.</source>
        </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>If a database is not encrypted, it is possible, even if you implement user/password security, to directly read the binary disk file that constitutes the database.</source>
        </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>As you change data in a database, the database file can become fragmented and use more disk space than necessary.</source>
        </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>Periodically, you should compact your database to defragment the database file.</source>
        </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>The compacted database is usually smaller.</source>
        </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source>You can also choose to change the collating order, the encryption, or the version of the data format while you copy and compact the database.</source>
        </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`CompactDatabase`</ph> member function will not correctly convert a complete Microsoft Access database from one version to another.</source>
        </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>Only the data format is converted.</source>
        </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>Microsoft Access-defined objects, such as forms and reports, are not converted.</source>
        </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>However, the data is correctly converted.</source>
        </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>You can also use <ph id="ph1">`CompactDatabase`</ph> to copy a database file.</source>
        </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source>For more information about compacting databases, see the topic "CompactDatabase Method" in DAO Help.</source>
        </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source>CDaoWorkspace::Create</source>
        </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>Call this member function to create a new DAO workspace object and associate it with the MFC <ph id="ph1">`CDaoWorkspace`</ph> object.</source>
        </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source>A string with up to 14 characters that uniquely names the new workspace object.</source>
        </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source>You must supply a name.</source>
        </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source>For related information, see the topic "Name Property" in DAO Help.</source>
        </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source>lpszUserName</source>
        </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source>The user name of the workspace's owner.</source>
        </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source>For requirements, see the <ph id="ph1">`lpszDefaultUser`</ph> parameter to the <bpt id="p1">[</bpt>SetDefaultUser<ept id="p1">](#cdaoworkspace__setdefaultuser)</ept> member function.</source>
        </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source>For related information, see the topic "UserName Property" in DAO Help.</source>
        </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve">
          <source>The password for the new workspace object.</source>
        </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve">
          <source>A password can be up to 14 characters long and can contain any character except ASCII 0 (null).</source>
        </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve">
          <source>Passwords are case-sensitive.</source>
        </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve">
          <source>For related information, see the topic "Password Property" in DAO Help.</source>
        </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve">
          <source>The overall creation process is:</source>
        </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve">
          <source>Construct a <bpt id="p1">[</bpt>CDaoWorkspace<ept id="p1">](#cdaoworkspace__cdaoworkspace)</ept> object.</source>
        </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve">
          <source>Call the object's <bpt id="p1">**</bpt>Create<ept id="p1">**</ept> member function to create the underlying DAO workspace.</source>
        </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve">
          <source>You must specify a workspace name.</source>
        </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve">
          <source>Optionally call <bpt id="p1">[</bpt>Append<ept id="p1">](#cdaoworkspace__append)</ept> if you want to add the workspace to the database engine's Workspaces collection.</source>
        </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve">
          <source>You can work with the workspace without appending it.</source>
        </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve">
          <source>After the <bpt id="p1">**</bpt>Create<ept id="p1">**</ept> call, the workspace object is in an open state, ready for use.</source>
        </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve">
          <source>You do not call <bpt id="p1">**</bpt>Open<ept id="p1">**</ept> after <bpt id="p2">**</bpt>Create<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve">
          <source>You do not call <bpt id="p1">**</bpt>Create<ept id="p1">**</ept> if the workspace already exists in the Workspaces collection.</source>
        </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Create<ept id="p1">**</ept> initializes the database engine if it has not already been initialized for your application.</source>
        </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve">
          <source>CDaoWorkspace::GetDatabaseCount</source>
        </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve">
          <source>Call this member function to retrieve the number of DAO database objects in the workspace's Databases collection — the number of open databases in the workspace.</source>
        </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve">
          <source>The number of open databases in the workspace.</source>
        </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve">
          <source>is useful if you need to loop through all defined databases in the workspace's Databases collection.</source>
        </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve">
          <source>To obtain information about a given database in the collection, see <bpt id="p1">[</bpt>GetDatabaseInfo<ept id="p1">](#cdaoworkspace__getdatabaseinfo)</ept>.</source>
        </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve">
          <source>Typical usage is to call <ph id="ph1">`GetDatabaseCount`</ph> for the number of open databases, then use that number as a loop index for repeated calls to <ph id="ph2">`GetDatabaseInfo`</ph>.</source>
        </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve">
          <source>CDaoWorkspace::GetDatabaseInfo</source>
        </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve">
          <source>Call this member function to obtain various kinds of information about a database open in the workspace.</source>
        </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve">
          <source>The zero-based index of the database object in the workspace's Databases collection, for lookup by index.</source>
        </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve">
          <source>A reference to a <bpt id="p1">[</bpt>CDaoDatabaseInfo<ept id="p1">](../../mfc/reference/cdaodatabaseinfo-structure.md)</ept> object that returns the information requested.</source>
        </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve">
          <source>Options that specify which information about the database to retrieve.</source>
        </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve">
          <source>The available options are listed here along with what they cause the function to return:</source>
        </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve">
          <source>(Default) Name, Updatable, Transactions</source>
        </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve">
          <source>Primary information plus: Version, Collating Order, Query Timeout</source>
        </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve">
          <source>Primary and secondary information plus: Connect</source>
        </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve">
          <source>The name of the database object, for lookup by name.</source>
        </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve">
          <source>The name is a string with up to 14 characters that uniquely names the new workspace object.</source>
        </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve">
          <source>One version of the function lets you look up a database by index.</source>
        </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve">
          <source>The other version lets you look up a database by name.</source>
        </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve">
          <source>For a description of the information returned in <ph id="ph1">`dbinfo`</ph>, see the <bpt id="p1">[</bpt>CDaoDatabaseInfo<ept id="p1">](../../mfc/reference/cdaodatabaseinfo-structure.md)</ept> structure.</source>
        </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve">
          <source>This structure has members that correspond to the items of information listed above in the description of <ph id="ph1">`dwInfoOptions`</ph>.</source>
        </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve">
          <source>When you request information at one level, you get information for any prior levels as well.</source>
        </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve">
          <source>CDaoWorkspace::GetIniPath</source>
        </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve">
          <source>Call this member function to obtain the location of the Microsoft Jet database engine's initialization settings in the Windows registry.</source>
        </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">[</bpt>CString<ept id="p1">](../../atl-mfc-shared/reference/cstringt-class.md)</ept> containing the registry location.</source>
        </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve">
          <source>You can use the location to obtain information about settings for the database engine.</source>
        </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve">
          <source>The information returned is actually the name of a registry subkey.</source>
        </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve">
          <source>For related information, see the topics "IniPath Property" and "Customizing Windows Registry Settings for Data Access" in DAO Help.</source>
        </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve">
          <source>CDaoWorkspace::GetIsolateODBCTrans</source>
        </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve">
          <source>Call this member function to get the current value of the DAO IsolateODBCTrans property for the workspace.</source>
        </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve">
          <source>Nonzero if ODBC transactions are isolated; otherwise 0.</source>
        </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve">
          <source>In some situations, you might need to have multiple simultaneous transactions pending on the same ODBC database.</source>
        </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve">
          <source>To do this, you need to open a separate workspace for each transaction.</source>
        </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve">
          <source>Keep in mind that although each workspace can have its own ODBC connection to the database, this slows system performance.</source>
        </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve">
          <source>Because transaction isolation is not normally required, ODBC connections from multiple workspace objects opened by the same user are shared by default.</source>
        </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve">
          <source>Some ODBC servers, such as Microsoft SQL Server, do not allow simultaneous transactions on a single connection.</source>
        </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve">
          <source>If you need to have more than one transaction at a time pending against such a database, set the IsolateODBCTrans property to <bpt id="p1">**</bpt>TRUE<ept id="p1">**</ept> on each workspace as soon as you open it.</source>
        </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve">
          <source>This forces a separate ODBC connection for each workspace.</source>
        </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve">
          <source>For related information, see the topic "IsolateODBCTrans Property" in DAO Help.</source>
        </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve">
          <source>CDaoWorkspace::GetLoginTimeout</source>
        </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve">
          <source>Call this member function to get the current value of the DAO LoginTimeout property for the workspace.</source>
        </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve">
          <source>The number of seconds before an error occurs when you attempt to log in to an ODBC database.</source>
        </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve">
          <source>This value represents the number of seconds before an error occurs when you attempt to log in to an ODBC database.</source>
        </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve">
          <source>The default LoginTimeout setting is 20 seconds.</source>
        </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve">
          <source>When LoginTimeout is set to 0, no timeout occurs and the communication with the data source might stop responding.</source>
        </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve">
          <source>When you are attempting to log in to an ODBC database, such as Microsoft SQL Server, the connection may fail as a result of network errors or because the server is not running.</source>
        </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve">
          <source>Rather than waiting for the default 20 seconds to connect, you can specify how long the database engine waits before it produces an error.</source>
        </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve">
          <source>Logging in to the server happens implicitly as part of a number of different events, such as running a query on an external server database.</source>
        </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve">
          <source>For related information, see the topic "LoginTimeout Property" in DAO Help.</source>
        </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve">
          <source>CDaoWorkspace::GetName</source>
        </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve">
          <source>Call this member function to get the user-defined name of the DAO workspace object underlying the <ph id="ph1">`CDaoWorkspace`</ph> object.</source>
        </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">[</bpt>CString<ept id="p1">](../../atl-mfc-shared/reference/cstringt-class.md)</ept> containing the user-defined name of the DAO workspace object.</source>
        </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve">
          <source>The name is useful for accessing the DAO workspace object in the database engine's Workspaces collection by name.</source>
        </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve">
          <source>For related information, see the topic "Name Property" in DAO Help.</source>
        </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve">
          <source>CDaoWorkspace::GetUserName</source>
        </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve">
          <source>Call this member function to obtain the name of the owner of the workspace.</source>
        </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">[</bpt>CString<ept id="p1">](../../atl-mfc-shared/reference/cstringt-class.md)</ept> that represents the owner of the workspace object.</source>
        </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve">
          <source>To get or set the permissions for the workspace owner, call DAO directly to check the Permissions property setting; this determines what permissions that user has.</source>
        </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve">
          <source>To work with permissions, you need a SYSTEM.MDA file.</source>
        </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve">
          <source>For information about calling DAO directly, see <bpt id="p1">[</bpt>Technical Note 54<ept id="p1">](../../mfc/tn054-calling-dao-directly-while-using-mfc-dao-classes.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve">
          <source>For related information, see the topic "UserName Property" in DAO Help.</source>
        </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve">
          <source>CDaoWorkspace::GetVersion</source>
        </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve">
          <source>Call this member function to determine the version of the Microsoft Jet database engine in use.</source>
        </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">[</bpt>CString<ept id="p1">](../../atl-mfc-shared/reference/cstringt-class.md)</ept> that indicates the version of the database engine associated with the object.</source>
        </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve">
          <source>The value returned represents the version number in the form "major.minor"; for example, "3.0".</source>
        </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve">
          <source>The product version number (for example, 3.0) consists of the version number (3), a period, and the release number (0).</source>
        </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve">
          <source>For related information, see the topic "Version Property" in DAO Help.</source>
        </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve">
          <source>CDaoWorkspace::GetWorkspaceCount</source>
        </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve">
          <source>Call this member function to retrieve the number of DAO workspace objects in the database engine's Workspaces collection.</source>
        </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve">
          <source>The number of open workspaces in the Workspaces collection.</source>
        </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve">
          <source>This count does not include any open workspaces not appended to the collection.</source>
        </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve">
          <source>is useful if you need to loop through all defined workspaces in the Workspaces collection.</source>
        </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve">
          <source>To obtain information about a given workspace in the collection, see <bpt id="p1">[</bpt>GetWorkspaceInfo<ept id="p1">](#cdaoworkspace__getworkspaceinfo)</ept>.</source>
        </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve">
          <source>Typical usage is to call <ph id="ph1">`GetWorkspaceCount`</ph> for the number of open workspaces, then use that number as a loop index for repeated calls to <ph id="ph2">`GetWorkspaceInfo`</ph>.</source>
        </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve">
          <source>CDaoWorkspace::GetWorkspaceInfo</source>
        </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve">
          <source>Call this member function to obtain various kinds of information about a workspace open in the session.</source>
        </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve">
          <source>The zero-based index of the database object in the Workspaces collection, for lookup by index.</source>
        </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve">
          <source>A reference to a <bpt id="p1">[</bpt>CDaoWorkspaceInfo<ept id="p1">](../../mfc/reference/cdaoworkspaceinfo-structure.md)</ept> object that returns the information requested.</source>
        </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve">
          <source>Options that specify which information about the workspace to retrieve.</source>
        </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve">
          <source>The available options are listed here along with what they cause the function to return:</source>
        </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve">
          <source>(Default) Name</source>
        </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve">
          <source>Primary information plus: User Name</source>
        </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve">
          <source>Primary and secondary information plus: Isolate ODBCTrans</source>
        </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve">
          <source>The name of the workspace object, for lookup by name.</source>
        </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve">
          <source>The name is a string with up to 14 characters that uniquely names the new workspace object.</source>
        </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve">
          <source>For a description of the information returned in <ph id="ph1">`wkspcinfo`</ph>, see the <bpt id="p1">[</bpt>CDaoWorkspaceInfo<ept id="p1">](../../mfc/reference/cdaoworkspaceinfo-structure.md)</ept> structure.</source>
        </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve">
          <source>This structure has members that correspond to the items of information listed above in the description of <ph id="ph1">`dwInfoOptions`</ph>.</source>
        </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve">
          <source>When you request information at one level, you get information for prior levels as well.</source>
        </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve">
          <source>CDaoWorkspace::Idle</source>
        </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve">
          <source>Call <bpt id="p1">**</bpt>Idle<ept id="p1">**</ept> to provide the database engine with the opportunity to perform background tasks that may not be up-to-date because of intense data processing.</source>
        </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve">
          <source>An action to take during the idle processing.</source>
        </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve">
          <source>Currently the only valid action is <bpt id="p1">**</bpt>dbFreeLocks<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve">
          <source>This is often true in multiuser, multitasking environments in which there is not enough background processing time to keep all records in a recordset current.</source>
        </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve">
          <source>Calling <bpt id="p1">**</bpt>Idle<ept id="p1">**</ept> is not necessary with databases created with version 3.0 of the Microsoft Jet database engine.</source>
        </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve">
          <source>Use <bpt id="p1">**</bpt>Idle<ept id="p1">**</ept> only for databases created with earlier versions.</source>
        </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve">
          <source>Usually, read locks are removed and data in local dynaset-type recordset objects is updated only when no other actions (including mouse movements) are occurring.</source>
        </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve">
          <source>If you periodically call <bpt id="p1">**</bpt>Idle<ept id="p1">**</ept>, you provide the database engine with time to catch up on background processing tasks by releasing unneeded read locks.</source>
        </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve">
          <source>Specifying the <bpt id="p1">**</bpt>dbFreeLocks<ept id="p1">**</ept> constant as an argument delays processing until all read locks are released.</source>
        </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve">
          <source>This member function is not needed in single-user environments unless multiple instances of an application are running.</source>
        </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Idle<ept id="p1">**</ept> member function may increase performance in a multiuser environment because it forces the database engine to flush data to disk, releasing locks on memory.</source>
        </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve">
          <source>You can also release read locks by making operations part of a transaction.</source>
        </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve">
          <source>For related information, see the topic "Idle Method" in DAO Help.</source>
        </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve">
          <source>CDaoWorkspace::IsOpen</source>
        </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve">
          <source>Call this member function to determine whether the <ph id="ph1">`CDaoWorkspace`</ph> object is open — that is, whether the MFC object has been initialized by a call to <bpt id="p1">[</bpt>Open<ept id="p1">](#cdaoworkspace__open)</ept> or a call to <bpt id="p2">[</bpt>Create<ept id="p2">](#cdaoworkspace__create)</ept>.</source>
        </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve">
          <source>Nonzero if the workspace object is open; otherwise 0.</source>
        </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve">
          <source>You can call any of the member functions of a workspace that is in an open state.</source>
        </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve">
          <source>CDaoWorkspace::m_pDAOWorkspace</source>
        </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve">
          <source>A pointer to the underlying DAO workspace object.</source>
        </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve">
          <source>Use this data member if you need direct access to the underlying DAO object.</source>
        </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve">
          <source>You can call the DAO object's interfaces through this pointer.</source>
        </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve">
          <source>For information about accessing DAO objects directly, see <bpt id="p1">[</bpt>Technical Note 54<ept id="p1">](../../mfc/tn054-calling-dao-directly-while-using-mfc-dao-classes.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve">
          <source>CDaoWorkspace::Open</source>
        </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve">
          <source>Explicitly opens a workspace object associated with DAO's default workspace.</source>
        </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve">
          <source>The name of the DAO workspace object to open — a string with up to 14 characters that uniquely names the workspace.</source>
        </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve">
          <source>Accept the default value <bpt id="p1">**</bpt>NULL<ept id="p1">**</ept> to explicitly open the default workspace.</source>
        </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve">
          <source>For naming requirements, see the <ph id="ph1">`lpszName`</ph> parameter for <bpt id="p1">[</bpt>Create<ept id="p1">](#cdaoworkspace__create)</ept>.</source>
        </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve">
          <source>For related information, see the topic "Name Property" in DAO Help.</source>
        </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve">
          <source>After constructing a <ph id="ph1">`CDaoWorkspace`</ph> object, call this member function to do one of the following:</source>
        </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve">
          <source>Explicitly open the default workspace.</source>
        </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve">
          <source>Pass <bpt id="p1">**</bpt>NULL<ept id="p1">**</ept> for <ph id="ph1">`lpszName`</ph>.</source>
        </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve">
          <source>Open an existing <ph id="ph1">`CDaoWorkspace`</ph> object, a member of the Workspaces collection, by name.</source>
        </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve">
          <source>Pass a valid name for an existing workspace object.</source>
        </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Open<ept id="p1">**</ept> puts the workspace object into an open state and also initializes the database engine if it has not already been initialized for your application.</source>
        </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve">
          <source>Although many <ph id="ph1">`CDaoWorkspace`</ph> member functions can only be called after the workspace has been opened, the following member functions, which operate on the database engine, are available after construction of the C++ object but before a call to <bpt id="p1">**</bpt>Open<ept id="p1">**</ept>:</source>
        </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve">
          <source>Create</source>
        </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve">
          <source>GetVersion</source>
        </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve">
          <source>SetDefaultUser</source>
        </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve">
          <source>GetIniPath</source>
        </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve">
          <source>Idle</source>
        </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve">
          <source>SetIniPath</source>
        </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve">
          <source>GetLoginTimeout</source>
        </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve">
          <source>SetDefaultPassword</source>
        </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve">
          <source>SetLoginTimeout</source>
        </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve">
          <source>CDaoWorkspace::RepairDatabase</source>
        </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve">
          <source>Call this member function if you need to attempt to repair a corrupted database that accesses the Microsoft Jet database engine.</source>
        </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve">
          <source>The path and filename for an existing Microsoft Jet engine database file.</source>
        </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve">
          <source>If you omit the path, only the current directory is searched.</source>
        </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve">
          <source>If your system supports the uniform naming convention (UNC), you can also specify a network path, such as: "<ph id="ph1">\\\\\\</ph>\MYSERVER<ph id="ph2">\\</ph>\MYSHARE<ph id="ph3">\\</ph>\MYDIR<ph id="ph4">\\</ph>\MYDB.MDB".</source>
        </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve">
          <source>(Double backslashes are required in the path string because "<ph id="ph1">\\</ph>" is the C++ escape character.)</source>
        </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve">
          <source>You must close the database specified by <ph id="ph1">`lpszName`</ph> before you repair it.</source>
        </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve">
          <source>In a multiuser environment, other users cannot have <ph id="ph1">`lpszName`</ph> open while you are repairing it.</source>
        </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`lpszName`</ph> is not closed or is not available for exclusive use, an error occurs.</source>
        </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve">
          <source>This member function attempts to repair a database that was marked as possibly corrupt by an incomplete write operation.</source>
        </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve">
          <source>This can occur if an application using the Microsoft Jet database engine is closed unexpectedly because of a power outage or computer hardware problem.</source>
        </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve">
          <source>If you complete the operation and call the <bpt id="p1">[</bpt>Close<ept id="p1">](../../mfc/reference/cdaodatabase-class.md#cdaodatabase__close)</ept> member function or you quit the application in a usual way, the database will not be marked as possibly corrupt.</source>
        </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve">
          <source>After repairing a database, it is also a good idea to compact it using the <bpt id="p1">[</bpt>CompactDatabase<ept id="p1">](#cdaoworkspace__compactdatabase)</ept> member function to defragment the file and to recover disk space.</source>
        </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve">
          <source>For more information about repairing databases, see the topic "RepairDatabase Method" in DAO Help.</source>
        </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve">
          <source>CDaoWorkspace::Rollback</source>
        </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve">
          <source>Call this member function to end the current transaction and restore all databases in the workspace to their condition before the transaction was begun.</source>
        </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve">
          <source>Within one workspace object, transactions are always global to the workspace and are not limited to only one database or recordset.</source>
        </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve">
          <source>If you perform operations on more than one database or recordset within a workspace transaction, <bpt id="p1">**</bpt>Rollback<ept id="p1">**</ept> restores all operations on all of those databases and recordsets.</source>
        </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve">
          <source>If you close a workspace object without saving or rolling back any pending transactions, the transactions are automatically rolled back.</source>
        </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve">
          <source>If you call <bpt id="p1">[</bpt>CommitTrans<ept id="p1">](#cdaoworkspace__committrans)</ept> or <bpt id="p2">**</bpt>Rollback<ept id="p2">**</ept> without first calling <bpt id="p3">[</bpt>BeginTrans<ept id="p3">](#cdaoworkspace__begintrans)</ept>, an error occurs.</source>
        </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve">
          <source>When you begin a transaction, the database engine records its operations in a file kept in the directory specified by the TEMP environment variable on the workstation.</source>
        </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve">
          <source>If the transaction log file exhausts the available storage on your TEMP drive, the database engine will cause MFC to throw a <ph id="ph1">`CDaoException`</ph> (DAO error 2004).</source>
        </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve">
          <source>At this point, if you call <bpt id="p1">**</bpt>CommitTrans<ept id="p1">**</ept>, an indeterminate number of operations are committed but the remaining uncompleted operations are lost, and the operation has to be restarted.</source>
        </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve">
          <source>Calling <bpt id="p1">**</bpt>Rollback<ept id="p1">**</ept> releases the transaction log and rolls back all operations in the transaction.</source>
        </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve">
          <source>CDaoWorkspace::SetDefaultPassword</source>
        </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve">
          <source>Call this member function to set the default password that the database engine uses when a workspace object is created without a specific password.</source>
        </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve">
          <source>The default password.</source>
        </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve">
          <source>A password can be up to 14 characters long and can contain any character except ASCII 0 (null).</source>
        </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve">
          <source>Passwords are case-sensitive.</source>
        </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve">
          <source>The default password that you set applies to new workspaces you create after the call.</source>
        </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve">
          <source>When you create subsequent workspaces, you do not need to specify a password in the <bpt id="p1">[</bpt>Create<ept id="p1">](#cdaoworkspace__create)</ept> call.</source>
        </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve">
          <source>To use this member function:</source>
        </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve">
          <source>Construct a <ph id="ph1">`CDaoWorkspace`</ph> object but do not call <bpt id="p1">**</bpt>Create<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve">
          <source>Call <ph id="ph1">`SetDefaultPassword`</ph> and, if you like, <bpt id="p1">[</bpt>SetDefaultUser<ept id="p1">](#cdaoworkspace__setdefaultuser)</ept>.</source>
        </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve">
          <source>Call <bpt id="p1">**</bpt>Create<ept id="p1">**</ept> for this workspace object or subsequent ones, without specifying a password.</source>
        </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve">
          <source>By default, the DefaultUser property is set to "admin" and the DefaultPassword property is set to an empty string ("").</source>
        </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve">
          <source>For more about security, see the topic "Permissions Property" in DAO Help.</source>
        </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve">
          <source>For related information, see the topics "DefaultPassword Property" and "DefaultUser Property" in DAO Help.</source>
        </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve">
          <source>CDaoWorkspace::SetDefaultUser</source>
        </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve">
          <source>Call this member function to set the default user name that the database engine uses when a workspace object is created without a specific user name.</source>
        </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve">
          <source>The default user name.</source>
        </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve">
          <source>A user name can be 1 – 20 characters long and include alphabetic characters, accented characters, numbers, spaces, and symbols except for: " (quotation marks), / (forward slash), \ (backslash), <ph id="ph1">\[</ph> <ph id="ph2">\]</ph> (brackets), : (colon), &amp;#124; (pipe), <ph id="ph3">\&lt;</ph> (less-than sign), &gt; (greater-than sign), + (plus sign), = (equal sign), ; (semicolon), , ( comma),  (question mark), * (asterisk), leading spaces, and control characters (ASCII 00 to ASCII 31).</source>
        </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve">
          <source>For related information, see the topic "UserName Property" in DAO Help.</source>
        </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve">
          <source>The default user name that you set applies to new workspaces you create after the call.</source>
        </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve">
          <source>When you create subsequent workspaces, you do not need to specify a user name in the <bpt id="p1">[</bpt>Create<ept id="p1">](#cdaoworkspace__create)</ept> call.</source>
        </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve">
          <source>To use this member function:</source>
        </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve">
          <source>Construct a <ph id="ph1">`CDaoWorkspace`</ph> object but do not call <bpt id="p1">**</bpt>Create<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve">
          <source>Call <ph id="ph1">`SetDefaultUser`</ph> and, if you like, <bpt id="p1">[</bpt>SetDefaultPassword<ept id="p1">](#cdaoworkspace__setdefaultpassword)</ept>.</source>
        </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve">
          <source>Call <bpt id="p1">**</bpt>Create<ept id="p1">**</ept> for this workspace object or subsequent ones, without specifying a user name.</source>
        </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve">
          <source>By default, the DefaultUser property is set to "admin" and the DefaultPassword property is set to an empty string ("").</source>
        </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve">
          <source>For related information, see the topics "DefaultUser Property" and "DefaultPassword Property" in DAO Help.</source>
        </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve">
          <source>CDaoWorkspace::SetIniPath</source>
        </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve">
          <source>Call this member function to specify the location of Windows registry settings for the Microsoft Jet database engine.</source>
        </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve">
          <source>lpszRegistrySubkey</source>
        </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve">
          <source>A string containing the name of a Windows registry subkey for the location of Microsoft Jet database engine settings or parameters needed for installable ISAM databases.</source>
        </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve">
          <source>Call <ph id="ph1">`SetIniPath`</ph> only if you need to specify special settings.</source>
        </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve">
          <source>For more information, see the topic "IniPath Property" in DAO Help.</source>
        </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve">
          <source>Call <ph id="ph1">`SetIniPath`</ph> during application installation, not when the application runs.</source>
        </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve">
          <source>must be called before you open any workspaces, databases, or recordsets; otherwise, MFC throws an exception.</source>
        </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve">
          <source>You can use this mechanism to configure the database engine with user-provided registry settings.</source>
        </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve">
          <source>The scope of this attribute is limited to your application and cannot be changed without restarting your application.</source>
        </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve">
          <source>CDaoWorkspace::SetIsolateODBCTrans</source>
        </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve">
          <source>Call this member function to set the value of the DAO IsolateODBCTrans property for the workspace.</source>
        </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve">
          <source>bIsolateODBCTrans</source>
        </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve">
          <source>Pass <bpt id="p1">**</bpt>TRUE<ept id="p1">**</ept> if you want to begin isolating ODBC transactions.</source>
        </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve">
          <source>Pass <bpt id="p1">**</bpt>FALSE<ept id="p1">**</ept> if you want to stop isolating ODBC transactions.</source>
        </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve">
          <source>In some situations, you might need to have multiple simultaneous transactions pending on the same ODBC database.</source>
        </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve">
          <source>To do this, you need to open a separate workspace for each transaction.</source>
        </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve">
          <source>Although each workspace can have its own ODBC connection to the database, this slows system performance.</source>
        </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve">
          <source>Because transaction isolation is not normally required, ODBC connections from multiple workspace objects opened by the same user are shared by default.</source>
        </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve">
          <source>Some ODBC servers, such as Microsoft SQL Server, do not allow simultaneous transactions on a single connection.</source>
        </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve">
          <source>If you need to have more than one transaction at a time pending against such a database, set the IsolateODBCTrans property to <bpt id="p1">**</bpt>TRUE<ept id="p1">**</ept> on each workspace as soon as you open it.</source>
        </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve">
          <source>This forces a separate ODBC connection for each workspace.</source>
        </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve">
          <source>CDaoWorkspace::SetLoginTimeout</source>
        </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve">
          <source>Call this member function to set the value of the DAO LoginTimeout property for the workspace.</source>
        </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve">
          <source>The number of seconds before an error occurs when you attempt to log in to an ODBC database.</source>
        </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve">
          <source>This value represents the number of seconds before an error occurs when you attempt to log in to an ODBC database.</source>
        </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve">
          <source>The default LoginTimeout setting is 20 seconds.</source>
        </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve">
          <source>When LoginTimeout is set to 0, no timeout occurs and the communication with the data source might stop responding.</source>
        </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve">
          <source>When you are attempting to log in to an ODBC database, such as Microsoft SQL Server, the connection may fail as a result of network errors or because the server is not running.</source>
        </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve">
          <source>Rather than waiting for the default 20 seconds to connect, you can specify how long the database engine waits before it produces an error.</source>
        </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve">
          <source>Logging on to the server happens implicitly as part of a number of different events, such as running a query on an external server database.</source>
        </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve">
          <source>The timeout value is determined by the current setting of the LoginTimeout property.</source>
        </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve">
          <source>For related information, see the topic "LoginTimeout Property" in DAO Help.</source>
        </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve">
          <source>CObject Class</source>
        </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve">
          <source>Hierarchy Chart</source>
        </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve">
          <source>CDaoDatabase Class</source>
        </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve">
          <source>CDaoRecordset Class</source>
        </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve">
          <source>CDaoTableDef Class</source>
        </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve">
          <source>CDaoQueryDef Class</source>
        </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve">
          <source>CDaoException Class</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>