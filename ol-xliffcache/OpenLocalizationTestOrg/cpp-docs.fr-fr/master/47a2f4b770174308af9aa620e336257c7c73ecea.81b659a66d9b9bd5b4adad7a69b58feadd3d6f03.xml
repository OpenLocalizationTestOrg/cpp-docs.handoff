{"nodes":[{"pos":[12,47],"content":"CGlobalUtils Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"CGlobalUtils Class | Microsoft Docs","pos":[0,35]}]},{"content":"CGlobalUtils Class","pos":[610,628]},{"content":"Syntax","pos":[737,743]},{"content":"Members","pos":[788,795]},{"content":"Public Methods","pos":[805,819]},{"content":"Name","pos":[826,830]},{"content":"Description","pos":[831,842]},{"content":"CGlobalUtils::AdjustRectToWorkArea","pos":[881,915]},{"content":"CGlobalUtils::CalcExpectedDockedRect","pos":[960,996]},{"content":"CGlobalUtils::CanBeAttached","pos":[1043,1070]},{"content":"CGlobalUtils::CanPaneBeInFloatingMultiPaneFrameWnd","pos":[1108,1158]},{"content":"CGlobalUtils::CheckAlignment","pos":[1219,1247]},{"content":"CGlobalUtils::CyFromString","pos":[1286,1312]},{"content":"CGlobalUtils::DecimalFromString","pos":[1349,1380]},{"content":"CGlobalUtils::FlipRect","pos":[1422,1444]},{"content":"CGlobalUtils::ForceAdjustLayout","pos":[1477,1508]},{"content":"CGlobalUtils::GetDockingManager","pos":[1550,1581]},{"content":"CGlobalUtils::GetOppositeAlignment","pos":[1623,1657]},{"content":"CGlobalUtils::GetPaneAndAlignFromPoint","pos":[1702,1740]},{"content":"CGlobalUtils::GetWndIcon","pos":[1789,1813]},{"content":"CGlobalUtils::SetNewParent","pos":[1848,1874]},{"content":"CGlobalUtils::StringFromCy","pos":[1911,1937]},{"content":"CGlobalUtils::StringFromDecimal","pos":[1974,2005]},{"content":"Remarks","pos":[2051,2058]},{"content":"Inheritance Hierarchy","pos":[2067,2088]},{"content":"CGlobalUtils","pos":[2093,2105]},{"content":"Requirements","pos":[2158,2170]},{"pos":[2174,2202],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> afxglobalutils.h","source":"**Header:** afxglobalutils.h"},{"pos":[2263,2297],"content":"CGlobalUtils::AdjustRectToWorkArea"},{"content":"Parameters","pos":[2502,2512]},{"content":"[in, out]","pos":[2516,2525]},{"content":"[in]","pos":[2536,2540]},{"content":"Remarks","pos":[2563,2570]},{"pos":[2633,2669],"content":"CGlobalUtils::CalcExpectedDockedRect"},{"content":"Parameters","pos":[3003,3013]},{"content":"[in]","pos":[3017,3021]},{"content":"[in]","pos":[3047,3051]},{"content":"[in]","pos":[3068,3072]},{"content":"[out]","pos":[3086,3091]},{"content":"[out]","pos":[3108,3113]},{"content":"[out]","pos":[3128,3133]},{"content":"Remarks","pos":[3157,3164]},{"pos":[3218,3245],"content":"CGlobalUtils::CanBeAttached"},{"content":"Parameters","pos":[3414,3424]},{"pos":[3428,3432],"content":"[in]"},{"content":"Return Value","pos":[3449,3461]},{"content":"Remarks","pos":[3471,3478]},{"pos":[3555,3605],"content":"CGlobalUtils::CanPaneBeInFloatingMultiPaneFrameWnd"},{"content":"Parameters","pos":[3797,3807]},{"pos":[3811,3815],"content":"[in]"},{"content":"Return Value","pos":[3832,3844]},{"content":"Remarks","pos":[3854,3861]},{"pos":[3916,3944],"content":"CGlobalUtils::CheckAlignment"},{"content":"Parameters","pos":[4343,4353]},{"content":"[in]","pos":[4357,4361]},{"content":"[in]","pos":[4373,4377]},{"content":"[in]","pos":[4388,4392]},{"content":"[in]","pos":[4411,4415]},{"content":"[in]","pos":[4434,4438]},{"content":"[out]","pos":[4455,4460]},{"content":"[in]","pos":[4478,4482]},{"content":"[in]","pos":[4506,4510]},{"content":"Return Value","pos":[4535,4547]},{"content":"Remarks","pos":[4557,4564]},{"pos":[4617,4643],"content":"CGlobalUtils::CyFromString"},{"content":"Parameters","pos":[4822,4832]},{"content":"[out]","pos":[4836,4841]},{"content":"[in]","pos":[4850,4854]},{"content":"Return Value","pos":[4870,4882]},{"content":"Remarks","pos":[4892,4899]},{"pos":[4957,4988],"content":"CGlobalUtils::DecimalFromString"},{"content":"Parameters","pos":[5182,5192]},{"content":"[out]","pos":[5196,5201]},{"content":"[in]","pos":[5215,5219]},{"content":"Return Value","pos":[5235,5247]},{"content":"Remarks","pos":[5257,5264]},{"pos":[5313,5335],"content":"CGlobalUtils::FlipRect"},{"content":"Parameters","pos":[5516,5526]},{"content":"[in, out]","pos":[5530,5539]},{"content":"[in]","pos":[5550,5554]},{"content":"Remarks","pos":[5575,5582]},{"pos":[5640,5671],"content":"CGlobalUtils::ForceAdjustLayout"},{"content":"Parameters","pos":[5922,5932]},{"content":"[in, out]","pos":[5936,5945]},{"content":"[in]","pos":[5964,5968]},{"content":"[in]","pos":[5981,5985]},{"content":"Remarks","pos":[6013,6020]},{"pos":[6078,6109],"content":"CGlobalUtils::GetDockingManager"},{"content":"Parameters","pos":[6285,6295]},{"pos":[6299,6303],"content":"[in]"},{"content":"Return Value","pos":[6320,6332]},{"content":"Remarks","pos":[6342,6349]},{"pos":[6410,6444],"content":"CGlobalUtils::GetOppositeAlignment"},{"content":"Parameters","pos":[6615,6625]},{"pos":[6629,6633],"content":"[in]"},{"content":"Return Value","pos":[6653,6665]},{"content":"Remarks","pos":[6675,6682]},{"pos":[6747,6785],"content":"CGlobalUtils::GetPaneAndAlignFromPoint"},{"content":"Parameters","pos":[7122,7132]},{"content":"[in]","pos":[7136,7140]},{"content":"[in]","pos":[7166,7170]},{"content":"[out]","pos":[7179,7184]},{"content":"[out]","pos":[7209,7214]},{"content":"[out]","pos":[7232,7237]},{"content":"[out]","pos":[7252,7257]},{"content":"Return Value","pos":[7278,7290]},{"content":"Remarks","pos":[7300,7307]},{"pos":[7358,7382],"content":"CGlobalUtils::GetWndIcon"},{"content":"Parameters","pos":[7540,7550]},{"pos":[7554,7558],"content":"[in]"},{"content":"Return Value","pos":[7575,7587]},{"content":"Remarks","pos":[7597,7604]},{"pos":[7657,7683],"content":"CGlobalUtils::SetNewParent"},{"content":"Parameters","pos":[7920,7930]},{"content":"[in]","pos":[7934,7938]},{"content":"[in]","pos":[7959,7963]},{"content":"[in]","pos":[7980,7984]},{"content":"Remarks","pos":[8013,8020]},{"pos":[8073,8099],"content":"CGlobalUtils::StringFromCy"},{"content":"Parameters","pos":[8279,8289]},{"content":"[out]","pos":[8293,8298]},{"content":"[in]","pos":[8308,8312]},{"content":"Return Value","pos":[8327,8339]},{"content":"Remarks","pos":[8349,8356]},{"pos":[8414,8445],"content":"CGlobalUtils::StringFromDecimal"},{"content":"Parameters","pos":[8640,8650]},{"content":"[out]","pos":[8654,8659]},{"content":"[in]","pos":[8669,8673]},{"content":"Return Value","pos":[8693,8705]},{"content":"Remarks","pos":[8715,8722]},{"content":"See Also","pos":[8731,8739]},{"content":"Hierarchy Chart","pos":[8744,8759]},{"content":"Classes","pos":[8796,8803]}],"content":"---\ntitle: \"CGlobalUtils Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"CGlobalUtils\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"CGlobalUtils class\"\nms.assetid: 2c5bd1a6-f80c-4e79-a476-b4ceebabfb2f\ncaps.latest.revision: 16\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# CGlobalUtils Class\n[!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n## Syntax  \n  \n```  \nclass CGlobalUtils  \n```  \n  \n## Members  \n  \n### Public Methods  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CGlobalUtils::AdjustRectToWorkArea](#cglobalutils__adjustrecttoworkarea)||  \n|[CGlobalUtils::CalcExpectedDockedRect](#cglobalutils__calcexpecteddockedrect)||  \n|[CGlobalUtils::CanBeAttached](#cglobalutils__canbeattached)||  \n|[CGlobalUtils::CanPaneBeInFloatingMultiPaneFrameWnd](#cglobalutils__canpanebeinfloatingmultipaneframewnd)||  \n|[CGlobalUtils::CheckAlignment](#cglobalutils__checkalignment)||  \n|[CGlobalUtils::CyFromString](#cglobalutils__cyfromstring)||  \n|[CGlobalUtils::DecimalFromString](#cglobalutils__decimalfromstring)||  \n|[CGlobalUtils::FlipRect](#cglobalutils__fliprect)||  \n|[CGlobalUtils::ForceAdjustLayout](#cglobalutils__forceadjustlayout)||  \n|[CGlobalUtils::GetDockingManager](#cglobalutils__getdockingmanager)||  \n|[CGlobalUtils::GetOppositeAlignment](#cglobalutils__getoppositealignment)||  \n|[CGlobalUtils::GetPaneAndAlignFromPoint](#cglobalutils__getpaneandalignfrompoint)||  \n|[CGlobalUtils::GetWndIcon](#cglobalutils__getwndicon)||  \n|[CGlobalUtils::SetNewParent](#cglobalutils__setnewparent)||  \n|[CGlobalUtils::StringFromCy](#cglobalutils__stringfromcy)||  \n|[CGlobalUtils::StringFromDecimal](#cglobalutils__stringfromdecimal)||  \n  \n## Remarks  \n  \n## Inheritance Hierarchy  \n [CGlobalUtils](../../mfc/reference/cglobalutils-class.md)  \n  \n## Requirements  \n **Header:** afxglobalutils.h  \n  \n##  <a name=\"cglobalutils__adjustrecttoworkarea\"></a>  CGlobalUtils::AdjustRectToWorkArea  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvoid AdjustRectToworkArea(\n    CRect& rect,  \n    CRect* pRectDelta = NULL);\n```  \n  \n### Parameters  \n [in, out] `rect`  \n [in] `pRectDelta`  \n  \n### Remarks  \n  \n##  <a name=\"cglobalutils__calcexpecteddockedrect\"></a>  CGlobalUtils::CalcExpectedDockedRect  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvoid CalcExpectedDockedRect(\n    CPaneContainerManager& barContainerManager,  \n    CWnd* pWndTodock,  \n    CPoint ptMouse,  \n    CRect& rectResult,  \n    BOOL& bDrawTab,  \n    CDockablePane** ppTargetBar);\n```  \n  \n### Parameters  \n [in] `barContainerManager`  \n [in] `pWndTodock`  \n [in] `ptMouse`  \n [out] `rectResult`  \n [out] `bDrawTab`  \n [out] `ppTargetBar`  \n  \n### Remarks  \n  \n##  <a name=\"cglobalutils__canbeattached\"></a>  CGlobalUtils::CanBeAttached  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nBOOL CanBeAttached(CWnd* pWnd) const;\n\n \n```  \n  \n### Parameters  \n [in] `pWnd`  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cglobalutils__canpanebeinfloatingmultipaneframewnd\"></a>  CGlobalUtils::CanPaneBeInFloatingMultiPaneFrameWnd  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nBOOL CanPaneBeInFloatingMultiPaneFrameWnd(CWnd* pWnd) const;\n\n \n```  \n  \n### Parameters  \n [in] `pWnd`  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cglobalutils__checkalignment\"></a>  CGlobalUtils::CheckAlignment  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nBOOL CheckAlignment(\n    CPoint point,  \n    CBasePane* pBar,  \n    int nSensitivity,  \n    const CDockingManager* pDockManager,  \n    BOOL bOuterEdge,  \n    DWORD& dwAlignment,  \n    DWORD dwEnabledDockBars = CBRS_ALIGN_ANY,  \n    LPCRECT lpRectBounds = NULL) const;\n\n \n```  \n  \n### Parameters  \n [in] `point`  \n [in] `pBar`  \n [in] `nSensitivity`  \n [in] `pDockManager`  \n [in] `bOuterEdge`  \n [out] `dwAlignment`  \n [in] `dwEnabledDockBars`  \n [in] `lpRectBounds`  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cglobalutils__cyfromstring\"></a>  CGlobalUtils::CyFromString  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nBOOL CyFromString(\n    CY& cy,  \n    LPCTSTR psz);\n```  \n  \n### Parameters  \n [out] `cy`  \n [in] `psz`  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cglobalutils__decimalfromstring\"></a>  CGlobalUtils::DecimalFromString  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nBOOL DecimalFromString(\n    DECIMAL& decimal,  \n    LPCTSTR psz);\n```  \n  \n### Parameters  \n [out] `decimal`  \n [in] `psz`  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cglobalutils__fliprect\"></a>  CGlobalUtils::FlipRect  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvoid FlipRect(\n    CRect& rect,  \n    int nDegrees);\n```  \n  \n### Parameters  \n [in, out] `rect`  \n [in] `nDegrees`  \n  \n### Remarks  \n  \n##  <a name=\"cglobalutils__forceadjustlayout\"></a>  CGlobalUtils::ForceAdjustLayout  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvoid ForceAdjustLayout(\n    CDockingManager* pDockManager,  \n    BOOL bForce = FALSE,  \n    BOOL bForceInvisible = FALSE);\n```  \n  \n### Parameters  \n [in, out] `pDockManager`  \n [in] `bForce`  \n [in] `bForceInvisible`  \n  \n### Remarks  \n  \n##  <a name=\"cglobalutils__getdockingmanager\"></a>  CGlobalUtils::GetDockingManager  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nCDockingManager* GetDockingManager(CWnd* pWnd);\n```  \n  \n### Parameters  \n [in] `pWnd`  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cglobalutils__getoppositealignment\"></a>  CGlobalUtils::GetOppositeAlignment  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nDWORD GetOppositeAlignment(DWORD dwAlign);\n```  \n  \n### Parameters  \n [in] `dwAlign`  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cglobalutils__getpaneandalignfrompoint\"></a>  CGlobalUtils::GetPaneAndAlignFromPoint  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nBOOL GetPaneAndAlignFromPoint(\n    CPaneContainerManager& barContainerManager,  \n    CPoint pt,  \n    CDockablePane** ppTargetControlBar,  \n    DWORD& dwAlignment,  \n    BOOL& bTabArea,  \n    BOOL& bCaption);\n```  \n  \n### Parameters  \n [in] `barContainerManager`  \n [in] `pt`  \n [out] `ppTargetControlBar`  \n [out] `dwAlignment`  \n [out] `bTabArea`  \n [out] `bCaption`  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cglobalutils__getwndicon\"></a>  CGlobalUtils::GetWndIcon  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nHICON GetWndIcon(CWnd* pWnd);\n```  \n  \n### Parameters  \n [in] `pWnd`  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cglobalutils__setnewparent\"></a>  CGlobalUtils::SetNewParent  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nvoid SetNewParent(\n    CObList& lstControlBars,  \n    CWnd* pNewParent,  \n    BOOL bCheckVisibility = TRUE);\n```  \n  \n### Parameters  \n [in] `lstControlBars`  \n [in] `pNewParent`  \n [in] `bCheckVisibility`  \n  \n### Remarks  \n  \n##  <a name=\"cglobalutils__stringfromcy\"></a>  CGlobalUtils::StringFromCy  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nBOOL StringFromCy(\n    CString& str,  \n    CY& cy);\n```  \n  \n### Parameters  \n [out] `str`  \n [in] `cy`  \n  \n### Return Value  \n  \n### Remarks  \n  \n##  <a name=\"cglobalutils__stringfromdecimal\"></a>  CGlobalUtils::StringFromDecimal  \n [!INCLUDE[cpp_fp_under_construction](../../mfc/reference/includes/cpp_fp_under_construction_md.md)]  \n  \n```  \nBOOL StringFromDecimal(\n    CString& str,  \n    DECIMAL& decimal);\n```  \n  \n### Parameters  \n [out] `str`  \n [in] `decimal`  \n  \n### Return Value  \n  \n### Remarks  \n  \n## See Also  \n [Hierarchy Chart](../../mfc/hierarchy-chart.md)   \n [Classes](../../mfc/reference/mfc-classes.md)\n"}