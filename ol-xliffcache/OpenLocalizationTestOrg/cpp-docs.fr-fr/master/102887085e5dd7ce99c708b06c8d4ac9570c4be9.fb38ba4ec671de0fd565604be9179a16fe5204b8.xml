{"nodes":[{"pos":[12,40],"content":"class (C++) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"class (C++) | Microsoft Docs","pos":[0,28]}]},{"content":"class (C++)","pos":[657,668]},{"pos":[669,748],"content":"The <ph id=\"ph1\">`class`</ph> keyword declares a class type or defines an object of a class type.","source":"The `class` keyword declares a class type or defines an object of a class type."},{"content":"Syntax","pos":[757,763]},{"content":"Parameters","pos":[936,946]},{"content":"Optional template specifications.","pos":[969,1002]},{"content":"For more information, refer to <bpt id=\"p1\">[</bpt>Templates<ept id=\"p1\">](templates-cpp.md)</ept>.","pos":[1003,1064],"source":" For more information, refer to [Templates](templates-cpp.md)."},{"content":"The <ph id=\"ph1\">`class`</ph> keyword.","pos":[1082,1102],"source":" The `class` keyword."},{"content":"Optional storage-class specification.","pos":[1127,1164]},{"content":"For more information, refer to the <bpt id=\"p1\">[</bpt>__declspec<ept id=\"p1\">](../cpp/declspec.md)</ept> keyword.","pos":[1165,1241],"source":" For more information, refer to the [__declspec](../cpp/declspec.md) keyword."},{"content":"The type name given to the class.","pos":[1257,1290]},{"content":"The tag becomes a reserved word within the scope of the class.","pos":[1291,1353]},{"content":"The tag is optional.","pos":[1354,1374]},{"content":"If omitted, an anonymous class is defined.","pos":[1375,1417]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Anonymous Class Types<ept id=\"p1\">](../cpp/anonymous-class-types.md)</ept>.","pos":[1418,1501],"source":" For more information, see [Anonymous Class Types](../cpp/anonymous-class-types.md)."},{"content":"Optional list of classes or structures this class will derive its members from.","pos":[1523,1602]},{"content":"See <bpt id=\"p1\">[</bpt>Base Classes<ept id=\"p1\">](../cpp/base-classes.md)</ept> for more information.","pos":[1603,1667],"source":" See [Base Classes](../cpp/base-classes.md) for more information."},{"content":"Each base class or structure name can be preceded by an access specifier (<bpt id=\"p1\">[</bpt>public<ept id=\"p1\">](../cpp/public-cpp.md)</ept>, <bpt id=\"p2\">[</bpt>private<ept id=\"p2\">](../cpp/private-cpp.md)</ept>, <bpt id=\"p3\">[</bpt>protected<ept id=\"p3\">](../cpp/protected-cpp.md)</ept>) and the <bpt id=\"p4\">[</bpt>virtual<ept id=\"p4\">](../cpp/virtual-cpp.md)</ept> keyword.","pos":[1668,1895],"source":" Each base class or structure name can be preceded by an access specifier ([public](../cpp/public-cpp.md), [private](../cpp/private-cpp.md), [protected](../cpp/protected-cpp.md)) and the [virtual](../cpp/virtual-cpp.md) keyword."},{"content":"See the member-access table in <bpt id=\"p1\">[</bpt>Controlling Access to Class Members<ept id=\"p1\">](member-access-control-cpp.md)</ept> for more information.","pos":[1896,2016],"source":" See the member-access table in [Controlling Access to Class Members](member-access-control-cpp.md) for more information."},{"content":"List of class members.","pos":[2040,2062]},{"content":"Refer to <bpt id=\"p1\">[</bpt>Class Member Overview<ept id=\"p1\">](../cpp/class-member-overview.md)</ept> for more information.","pos":[2063,2150],"source":" Refer to [Class Member Overview](../cpp/class-member-overview.md) for more information."},{"content":"Declarator list specifying the names of one or more instances of the class type.","pos":[2174,2254]},{"content":"Declarators may include initializer lists if all data members of the class are <ph id=\"ph1\">`public`</ph>.","pos":[2255,2343],"source":" Declarators may include initializer lists if all data members of the class are `public`."},{"content":"This is more common in structures, whose data members are <ph id=\"ph1\">`public`</ph> by default, than in classes.","pos":[2344,2439],"source":" This is more common in structures, whose data members are `public` by default, than in classes."},{"content":"See <bpt id=\"p1\">[</bpt>Overview of Declarators<ept id=\"p1\">](../cpp/overview-of-declarators.md)</ept> for more information.","pos":[2440,2526],"source":" See [Overview of Declarators](../cpp/overview-of-declarators.md) for more information."},{"content":"Remarks","pos":[2535,2542]},{"content":"For more information on classes in general, refer to one of the following topics:","pos":[2546,2627]},{"content":"struct","pos":[2638,2644]},{"content":"union","pos":[2678,2683]},{"content":"__multiple_inheritance","pos":[2713,2735]},{"content":"__single_inheritance","pos":[2779,2799]},{"content":"__virtual_inheritance","pos":[2843,2864]},{"pos":[2904,3037],"content":"For information on managed classes and structs, see <bpt id=\"p1\">[</bpt>Classes and Structs<ept id=\"p1\">](../windows/classes-and-structs-cpp-component-extensions.md)</ept>","source":"For information on managed classes and structs, see [Classes and Structs](../windows/classes-and-structs-cpp-component-extensions.md)"},{"content":"Example","pos":[3046,3053]},{"content":"See Also","pos":[4304,4312]},{"content":"Keywords","pos":[4317,4325]},{"content":"Classes and Structs","pos":[4356,4375]}],"content":"---\ntitle: \"class (C++) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"language-reference\"\nf1_keywords: \n  - \"class_cpp\"\n  - \"class\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"class types, class statements\"\n  - \"class keyword [C++]\"\nms.assetid: dd23c09f-6598-4069-8bff-69c7f2518b9f\ncaps.latest.revision: 8\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# class (C++)\nThe `class` keyword declares a class type or defines an object of a class type.  \n  \n## Syntax  \n  \n```  \n  \n      [template-spec]  \n       class [ms-decl-spec] [tag [: base-list ]]  \n{  \n   member-list  \n} [declarators];  \n[ class ] tag declarators;  \n```  \n  \n#### Parameters  \n `template-spec`  \n Optional template specifications. For more information, refer to [Templates](templates-cpp.md).  \n  \n `class`  \n The `class` keyword.  \n  \n `ms-decl-spec`  \n Optional storage-class specification. For more information, refer to the [__declspec](../cpp/declspec.md) keyword.  \n  \n `tag`  \n The type name given to the class. The tag becomes a reserved word within the scope of the class. The tag is optional. If omitted, an anonymous class is defined. For more information, see [Anonymous Class Types](../cpp/anonymous-class-types.md).  \n  \n `base-list`  \n Optional list of classes or structures this class will derive its members from. See [Base Classes](../cpp/base-classes.md) for more information. Each base class or structure name can be preceded by an access specifier ([public](../cpp/public-cpp.md), [private](../cpp/private-cpp.md), [protected](../cpp/protected-cpp.md)) and the [virtual](../cpp/virtual-cpp.md) keyword. See the member-access table in [Controlling Access to Class Members](member-access-control-cpp.md) for more information.  \n  \n `member-list`  \n List of class members. Refer to [Class Member Overview](../cpp/class-member-overview.md) for more information.  \n  \n `declarators`  \n Declarator list specifying the names of one or more instances of the class type. Declarators may include initializer lists if all data members of the class are `public`. This is more common in structures, whose data members are `public` by default, than in classes. See [Overview of Declarators](../cpp/overview-of-declarators.md) for more information.  \n  \n## Remarks  \n For more information on classes in general, refer to one of the following topics:  \n  \n-   [struct](../cpp/struct-cpp.md)  \n  \n-   [union](../cpp/unions.md)  \n  \n-   [__multiple_inheritance](../cpp/inheritance-keywords.md)  \n  \n-   [__single_inheritance](../cpp/inheritance-keywords.md)  \n  \n-   [__virtual_inheritance](../cpp/inheritance-keywords.md)  \n  \n For information on managed classes and structs, see [Classes and Structs](../windows/classes-and-structs-cpp-component-extensions.md)  \n  \n## Example  \n  \n```  \n// class.cpp  \n// compile with: /EHsc  \n// Example of the class keyword  \n// Exhibits polymorphism/virtual functions.  \n  \n#include <iostream>  \n#include <string>  \n#define TRUE = 1  \nusing namespace std;  \n  \nclass dog  \n{  \npublic:  \n   dog()  \n   {  \n      _legs = 4;  \n      _bark = true;  \n   }  \n  \n   void setDogSize(string dogSize)  \n   {  \n      _dogSize = dogSize;  \n   }  \n   virtual void setEars(string type)      // virtual function  \n   {  \n      _earType = type;  \n   }  \n  \nprivate:  \n   string _dogSize, _earType;  \n   int _legs;  \n   bool _bark;  \n  \n};  \n  \nclass breed : public dog  \n{  \npublic:  \n   breed( string color, string size)  \n   {  \n      _color = color;  \n      setDogSize(size);  \n   }  \n  \n   string getColor()  \n   {  \n      return _color;  \n   }  \n  \n   // virtual function redefined  \n   void setEars(string length, string type)  \n   {  \n      _earLength = length;  \n      _earType = type;  \n   }  \n  \nprotected:  \n   string _color, _earLength, _earType;  \n};  \n  \nint main()  \n{  \n   dog mongrel;  \n   breed labrador(\"yellow\", \"large\");  \n   mongrel.setEars(\"pointy\");  \n   labrador.setEars(\"long\", \"floppy\");  \n   cout << \"Cody is a \" << labrador.getColor() << \" labrador\" << endl;  \n}  \n```  \n  \n## See Also  \n [Keywords](../cpp/keywords-cpp.md)   \n [Classes and Structs](../cpp/classes-and-structs-cpp.md)"}