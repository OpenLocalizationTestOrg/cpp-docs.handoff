{"nodes":[{"pos":[12,51],"content":"CComObjectGlobal Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"CComObjectGlobal Class | Microsoft Docs","pos":[0,39]}]},{"content":"CComObjectGlobal Class","pos":[744,766]},{"pos":[767,848],"content":"This class manages a reference count on the module containing your <ph id=\"ph1\">`Base`</ph> object.","source":"This class manages a reference count on the module containing your `Base` object."},{"content":"Syntax","pos":[857,863]},{"content":"Parameters","pos":[947,957]},{"content":"Your class, derived from <bpt id=\"p1\">[</bpt>CComObjectRoot<ept id=\"p1\">](../../atl/reference/ccomobjectroot-class.md)</ept> or <bpt id=\"p2\">[</bpt>CComObjectRootEx<ept id=\"p2\">](../../atl/reference/ccomobjectrootex-class.md)</ept>, as well as from any other interface you want to support on the object.","pos":[971,1198],"source":" Your class, derived from [CComObjectRoot](../../atl/reference/ccomobjectroot-class.md) or [CComObjectRootEx](../../atl/reference/ccomobjectrootex-class.md), as well as from any other interface you want to support on the object."},{"content":"Members","pos":[1207,1214]},{"content":"Public Constructors","pos":[1224,1243]},{"content":"Name","pos":[1250,1254]},{"content":"Description","pos":[1255,1266]},{"content":"CComObjectGlobal::CComObjectGlobal","pos":[1305,1339]},{"content":"The constructor.","pos":[1378,1394]},{"content":"CComObjectGlobal::~CComObjectGlobal","pos":[1400,1435]},{"content":"The destructor.","pos":[1479,1494]},{"content":"Public Methods","pos":[1505,1519]},{"content":"Name","pos":[1526,1530]},{"content":"Description","pos":[1531,1542]},{"content":"CComObjectGlobal::AddRef","pos":[1581,1605]},{"pos":[1634,1663],"content":"Implements a global <ph id=\"ph1\">`AddRef`</ph>.","source":"Implements a global `AddRef`."},{"content":"CComObjectGlobal::QueryInterface","pos":[1669,1701]},{"pos":[1738,1775],"content":"Implements a global <ph id=\"ph1\">`QueryInterface`</ph>.","source":"Implements a global `QueryInterface`."},{"content":"CComObjectGlobal::Release","pos":[1781,1806]},{"pos":[1836,1868],"content":"Implements a global <bpt id=\"p1\">**</bpt>Release<ept id=\"p1\">**</ept>.","source":"Implements a global **Release**."},{"content":"Public Data Members","pos":[1879,1898]},{"content":"Name","pos":[1905,1909]},{"content":"Description","pos":[1910,1921]},{"content":"CComObjectGlobal::m_hResFinalConstruct","pos":[1960,1998]},{"pos":[2041,2128],"content":"Contains the <bpt id=\"p1\">**</bpt>HRESULT<ept id=\"p1\">**</ept> returned during construction of the <ph id=\"ph1\">`CComObjectGlobal`</ph> object.","source":"Contains the **HRESULT** returned during construction of the `CComObjectGlobal` object."},{"content":"Remarks","pos":[2138,2145]},{"content":"manages a reference count on the module containing your <ph id=\"ph1\">`Base`</ph> object.","pos":[2168,2238],"source":" manages a reference count on the module containing your `Base` object."},{"content":"ensures your object will not be deleted as long as the module is not released.","pos":[2258,2336]},{"content":"Your object will only be removed when the reference count on the entire module goes to zero.","pos":[2337,2429]},{"pos":[2436,2557],"content":"For example, using <ph id=\"ph1\">`CComObjectGlobal`</ph>, a class factory can hold a common global object that is shared by all its clients.","source":"For example, using `CComObjectGlobal`, a class factory can hold a common global object that is shared by all its clients."},{"content":"Inheritance Hierarchy","pos":[2566,2587]},{"content":"Requirements","pos":[2631,2643]},{"pos":[2647,2667],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> atlcom.h","source":"**Header:** atlcom.h"},{"pos":[2718,2742],"content":"CComObjectGlobal::AddRef"},{"content":"Increments the reference count of the object by 1.","pos":[2746,2796]},{"content":"Return Value","pos":[2848,2860]},{"content":"A value that may be useful for diagnostics and testing.","pos":[2864,2919]},{"content":"Remarks","pos":[2929,2936]},{"pos":[2940,3111],"content":"By default, <ph id=\"ph1\">`AddRef`</ph> calls <bpt id=\"p1\">**</bpt>_Module::Lock<ept id=\"p1\">**</ept>, where <bpt id=\"p2\">**</bpt>_Module<ept id=\"p2\">**</ept> is the global instance of <bpt id=\"p3\">[</bpt>CComModule<ept id=\"p3\">](../../atl/reference/ccommodule-class.md)</ept> or a class derived from it.","source":"By default, `AddRef` calls **_Module::Lock**, where **_Module** is the global instance of [CComModule](../../atl/reference/ccommodule-class.md) or a class derived from it."},{"pos":[3172,3206],"content":"CComObjectGlobal::CComObjectGlobal"},{"content":"The constructor.","pos":[3210,3226]},{"content":"Calls <ph id=\"ph1\">`FinalConstruct`</ph> and then sets <bpt id=\"p1\">[</bpt>m_hResFinalConstruct<ept id=\"p1\">](#ccomobjectglobal__m_hresfinalconstruct)</ept> to the <ph id=\"ph2\">`HRESULT`</ph> returned by <ph id=\"ph3\">`FinalConstruct`</ph>.","pos":[3227,3374],"source":" Calls `FinalConstruct` and then sets [m_hResFinalConstruct](#ccomobjectglobal__m_hresfinalconstruct) to the `HRESULT` returned by `FinalConstruct`."},{"content":"Remarks","pos":[3430,3437]},{"content":"If you have not derived your base class from <bpt id=\"p1\">[</bpt>CComObjectRoot<ept id=\"p1\">](../../atl/reference/ccomobjectroot-class.md)</ept>, you must supply your own <ph id=\"ph1\">`FinalConstruct`</ph> method.","pos":[3441,3598],"source":"If you have not derived your base class from [CComObjectRoot](../../atl/reference/ccomobjectroot-class.md), you must supply your own `FinalConstruct` method."},{"content":"The destructor calls <ph id=\"ph1\">`FinalRelease`</ph>.","pos":[3599,3635],"source":" The destructor calls `FinalRelease`."},{"pos":[3701,3736],"content":"CComObjectGlobal::~CComObjectGlobal"},{"content":"The destructor.","pos":[3740,3755]},{"content":"Remarks","pos":[3798,3805]},{"pos":[3809,3922],"content":"Frees all allocated resources and calls <bpt id=\"p1\">[</bpt>FinalRelease<ept id=\"p1\">](ccomobjectrootex-class.md#ccomobjectrootex__finalrelease)</ept>.","source":"Frees all allocated resources and calls [FinalRelease](ccomobjectrootex-class.md#ccomobjectrootex__finalrelease)."},{"pos":[3987,4025],"content":"CComObjectGlobal::m_hResFinalConstruct"},{"pos":[4029,4135],"content":"Contains the <ph id=\"ph1\">`HRESULT`</ph> from calling <ph id=\"ph2\">`FinalConstruct`</ph> during construction of the <ph id=\"ph3\">`CComObjectGlobal`</ph> object.","source":"Contains the `HRESULT` from calling `FinalConstruct` during construction of the `CComObjectGlobal` object."},{"pos":[4237,4269],"content":"CComObjectGlobal::QueryInterface"},{"content":"Retrieves a pointer to the requested interface pointer.","pos":[4273,4328]},{"content":"Parameters","pos":[4414,4424]},{"content":"[in] The GUID of the interface being requested.","pos":[4437,4484]},{"content":"[out] A pointer to the interface pointer identified by iid, or <bpt id=\"p1\">**</bpt>NULL<ept id=\"p1\">**</ept> if the interface is not found.","pos":[4506,4608],"source":" [out] A pointer to the interface pointer identified by iid, or **NULL** if the interface is not found."},{"content":"Return Value","pos":[4618,4630]},{"pos":[4634,4661],"content":"A standard <ph id=\"ph1\">`HRESULT`</ph> value.","source":"A standard `HRESULT` value."},{"content":"Remarks","pos":[4671,4678]},{"pos":[4699,4744],"content":"only handles interfaces in the COM map table."},{"pos":[4796,4821],"content":"CComObjectGlobal::Release"},{"content":"Decrements the reference count of the object by 1.","pos":[4825,4875]},{"content":"Return Value","pos":[4928,4940]},{"content":"In debug builds, <bpt id=\"p1\">**</bpt>Release<ept id=\"p1\">**</ept> returns a value that may be useful for diagnostics and testing.","pos":[4944,5036],"source":"In debug builds, **Release** returns a value that may be useful for diagnostics and testing."},{"content":"In non-debug builds, <bpt id=\"p1\">**</bpt>Release<ept id=\"p1\">**</ept> always returns 0.","pos":[5037,5087],"source":" In non-debug builds, **Release** always returns 0."},{"content":"Remarks","pos":[5097,5104]},{"pos":[5108,5284],"content":"By default, <bpt id=\"p1\">**</bpt>Release<ept id=\"p1\">**</ept> calls <bpt id=\"p2\">**</bpt>_Module::Unlock<ept id=\"p2\">**</ept>, where <bpt id=\"p3\">**</bpt>_Module<ept id=\"p3\">**</ept> is the global instance of <bpt id=\"p4\">[</bpt>CComModule<ept id=\"p4\">](../../atl/reference/ccommodule-class.md)</ept> or a class derived from it.","source":"By default, **Release** calls **_Module::Unlock**, where **_Module** is the global instance of [CComModule](../../atl/reference/ccommodule-class.md) or a class derived from it."},{"content":"See Also","pos":[5293,5301]},{"content":"CComObjectStack Class","pos":[5306,5327]},{"content":"CComAggObject Class","pos":[5380,5399]},{"content":"CComObject Class","pos":[5450,5466]},{"content":"Class Overview","pos":[5514,5528]}],"content":"---\ntitle: \"CComObjectGlobal Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"CComObjectGlobal\"\n  - \"ATL::CComObjectGlobal<Base>\"\n  - \"ATL::CComObjectGlobal\"\n  - \"ATL.CComObjectGlobal\"\n  - \"ATL.CComObjectGlobal<Base>\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"CComObjectGlobal class\"\nms.assetid: 79bdee55-66e4-4536-b5b3-bdf09f78b9a6\ncaps.latest.revision: 19\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# CComObjectGlobal Class\nThis class manages a reference count on the module containing your `Base` object.  \n  \n## Syntax  \n  \n```\ntemplate<class Base>\nclass CComObjectGlobal\n :  public Base\n```  \n  \n#### Parameters  \n `Base`  \n Your class, derived from [CComObjectRoot](../../atl/reference/ccomobjectroot-class.md) or [CComObjectRootEx](../../atl/reference/ccomobjectrootex-class.md), as well as from any other interface you want to support on the object.  \n  \n## Members  \n  \n### Public Constructors  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CComObjectGlobal::CComObjectGlobal](#ccomobjectglobal__ccomobjectglobal)|The constructor.|  \n|[CComObjectGlobal::~CComObjectGlobal](#ccomobjectglobal___dtorccomobjectglobal)|The destructor.|  \n  \n### Public Methods  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CComObjectGlobal::AddRef](#ccomobjectglobal__addref)|Implements a global `AddRef`.|  \n|[CComObjectGlobal::QueryInterface](#ccomobjectglobal__queryinterface)|Implements a global `QueryInterface`.|  \n|[CComObjectGlobal::Release](#ccomobjectglobal__release)|Implements a global **Release**.|  \n  \n### Public Data Members  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CComObjectGlobal::m_hResFinalConstruct](#ccomobjectglobal__m_hresfinalconstruct)|Contains the **HRESULT** returned during construction of the `CComObjectGlobal` object.|  \n  \n## Remarks  \n `CComObjectGlobal` manages a reference count on the module containing your `Base` object. `CComObjectGlobal` ensures your object will not be deleted as long as the module is not released. Your object will only be removed when the reference count on the entire module goes to zero.  \n  \n For example, using `CComObjectGlobal`, a class factory can hold a common global object that is shared by all its clients.  \n  \n## Inheritance Hierarchy  \n `Base`  \n  \n `CComObjectGlobal`  \n  \n## Requirements  \n **Header:** atlcom.h  \n  \n##  <a name=\"ccomobjectglobal__addref\"></a>  CComObjectGlobal::AddRef  \n Increments the reference count of the object by 1.  \n  \n```\nSTDMETHOD_(ULONG, AddRef)();\n```  \n  \n### Return Value  \n A value that may be useful for diagnostics and testing.  \n  \n### Remarks  \n By default, `AddRef` calls **_Module::Lock**, where **_Module** is the global instance of [CComModule](../../atl/reference/ccommodule-class.md) or a class derived from it.  \n  \n##  <a name=\"ccomobjectglobal__ccomobjectglobal\"></a>  CComObjectGlobal::CComObjectGlobal  \n The constructor. Calls `FinalConstruct` and then sets [m_hResFinalConstruct](#ccomobjectglobal__m_hresfinalconstruct) to the `HRESULT` returned by `FinalConstruct`.  \n  \n```\nCComObjectGlobal(void* = NULL));\n```  \n  \n### Remarks  \n If you have not derived your base class from [CComObjectRoot](../../atl/reference/ccomobjectroot-class.md), you must supply your own `FinalConstruct` method. The destructor calls `FinalRelease`.  \n  \n##  <a name=\"ccomobjectglobal___dtorccomobjectglobal\"></a>  CComObjectGlobal::~CComObjectGlobal  \n The destructor.  \n  \n```\nCComObjectGlobal();\n```  \n  \n### Remarks  \n Frees all allocated resources and calls [FinalRelease](ccomobjectrootex-class.md#ccomobjectrootex__finalrelease).  \n  \n##  <a name=\"ccomobjectglobal__m_hresfinalconstruct\"></a>  CComObjectGlobal::m_hResFinalConstruct  \n Contains the `HRESULT` from calling `FinalConstruct` during construction of the `CComObjectGlobal` object.  \n  \n```\nHRESULT m_hResFinalConstruct;\n```  \n  \n##  <a name=\"ccomobjectglobal__queryinterface\"></a>  CComObjectGlobal::QueryInterface  \n Retrieves a pointer to the requested interface pointer.  \n  \n```\nSTDMETHOD(QueryInterface)(REFIID iid,\n    void** ppvObject)\n ;\n```  \n  \n### Parameters  \n `iid`  \n [in] The GUID of the interface being requested.  \n  \n `ppvObject`  \n [out] A pointer to the interface pointer identified by iid, or **NULL** if the interface is not found.  \n  \n### Return Value  \n A standard `HRESULT` value.  \n  \n### Remarks  \n `QueryInterface` only handles interfaces in the COM map table.  \n  \n##  <a name=\"ccomobjectglobal__release\"></a>  CComObjectGlobal::Release  \n Decrements the reference count of the object by 1.  \n  \n```\nSTDMETHOD_(ULONG, Release)();\n```  \n  \n### Return Value  \n In debug builds, **Release** returns a value that may be useful for diagnostics and testing. In non-debug builds, **Release** always returns 0.  \n  \n### Remarks  \n By default, **Release** calls **_Module::Unlock**, where **_Module** is the global instance of [CComModule](../../atl/reference/ccommodule-class.md) or a class derived from it.  \n  \n## See Also  \n [CComObjectStack Class](../../atl/reference/ccomobjectstack-class.md)   \n [CComAggObject Class](../../atl/reference/ccomaggobject-class.md)   \n [CComObject Class](../../atl/reference/ccomobject-class.md)   \n [Class Overview](../../atl/atl-class-overview.md)\n"}