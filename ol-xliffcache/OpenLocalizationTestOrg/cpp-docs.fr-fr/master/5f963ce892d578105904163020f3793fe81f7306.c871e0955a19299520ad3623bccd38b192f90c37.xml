{"nodes":[{"pos":[12,51],"content":"allocator_newdel Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"allocator_newdel Class | Microsoft Docs","pos":[0,39]}]},{"pos":[869,891],"content":"allocator_newdel Class","linkify":"allocator_newdel Class","nodes":[{"content":"allocator_newdel Class","pos":[0,22]}]},{"pos":[892,1019],"content":"Implements an allocator that uses <ph id=\"ph1\">`operator delete`</ph> to deallocate a memory block and <ph id=\"ph2\">`operator new`</ph> to allocate a memory block.","source":"Implements an allocator that uses `operator delete` to deallocate a memory block and `operator new` to allocate a memory block."},{"pos":[1028,1034],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[1106,1116],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[1123,1132]},{"content":"Description","pos":[1133,1144]},{"content":"The type of elements allocated by the allocator.","pos":[1194,1242]},{"pos":[1252,1259],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[1263,1515],"content":"The <bpt id=\"p1\">[</bpt>ALLOCATOR_DECL<ept id=\"p1\">](../standard-library/allocators-functions.md#allocator_decl)</ept> macro passes this class as the <ph id=\"ph1\">`name`</ph> parameter in the following statement: <ph id=\"ph2\">`ALLOCATOR_DECL(CACHE_FREELIST stdext::allocators::max_none), SYNC_DEFAULT, allocator_newdel);`</ph>","source":"The [ALLOCATOR_DECL](../standard-library/allocators-functions.md#allocator_decl) macro passes this class as the `name` parameter in the following statement: `ALLOCATOR_DECL(CACHE_FREELIST stdext::allocators::max_none), SYNC_DEFAULT, allocator_newdel);`"},{"pos":[1524,1536],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[1540,1565],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> <ph id=\"ph1\">\\&lt;</ph>allocators&gt;","source":"**Header:** \\<allocators>"},{"pos":[1572,1593],"content":"<bpt id=\"p1\">**</bpt>Namespace:<ept id=\"p1\">**</ept> stdext","source":"**Namespace:** stdext"},{"pos":[1602,1610],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"pos":[1614,1671],"content":"<bpt id=\"p1\">[</bpt><ph id=\"ph1\">\\&lt;</ph>allocators&gt;<ept id=\"p1\">](../standard-library/allocators-header.md)</ept>","source":"[\\<allocators>](../standard-library/allocators-header.md)"}],"content":"---\ntitle: \"allocator_newdel Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"allocators::allocator_newdel\"\n  - \"allocators/stdext::allocators::allocator_newdel\"\n  - \"stdext.allocators.allocator_newdel\"\n  - \"allocators/stdext::allocator_newdel\"\n  - \"allocator_newdel\"\n  - \"stdext::allocators::allocator_newdel\"\n  - \"allocators.allocator_newdel\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"allocator_newdel class\"\nms.assetid: 62666cd2-3afe-49f7-9dd1-9bbbb154da98\ncaps.latest.revision: 18\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# allocator_newdel Class\nImplements an allocator that uses `operator delete` to deallocate a memory block and `operator new` to allocate a memory block.  \n  \n## Syntax  \n  \n```\ntemplate <class Type>  \nclass allocator_newdel;\n```  \n  \n#### Parameters  \n  \n|Parameter|Description|  \n|---------------|-----------------|  \n|`Type`|The type of elements allocated by the allocator.|  \n  \n## Remarks  \n The [ALLOCATOR_DECL](../standard-library/allocators-functions.md#allocator_decl) macro passes this class as the `name` parameter in the following statement: `ALLOCATOR_DECL(CACHE_FREELIST stdext::allocators::max_none), SYNC_DEFAULT, allocator_newdel);`  \n  \n## Requirements  \n **Header:** \\<allocators>  \n  \n **Namespace:** stdext  \n  \n## See Also  \n [\\<allocators>](../standard-library/allocators-header.md)\n\n\n\n"}