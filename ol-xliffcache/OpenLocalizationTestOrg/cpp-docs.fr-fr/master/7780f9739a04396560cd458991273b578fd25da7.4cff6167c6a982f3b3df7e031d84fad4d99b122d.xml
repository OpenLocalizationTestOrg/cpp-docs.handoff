{"nodes":[{"pos":[12,52],"content":"CUtlProps::IsValidValue | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"CUtlProps::IsValidValue | Microsoft Docs","pos":[0,40]}]},{"content":"CUtlProps::IsValidValue","pos":[672,695]},{"content":"Used to validate a value before setting a property.","pos":[696,747]},{"content":"Syntax","pos":[756,762]},{"content":"Parameters","pos":[897,907]},{"content":"The index into the property-set array; zero if there is only one property set.","pos":[924,1002]},{"content":"The property ID and new value in a <bpt id=\"p1\">[</bpt>DBPROP<ept id=\"p1\">](https://msdn.microsoft.com/en-us/library/ms717970.aspx)</ept> structure.","pos":[1022,1132],"source":" The property ID and new value in a [DBPROP](https://msdn.microsoft.com/en-us/library/ms717970.aspx) structure."},{"content":"Return Value","pos":[1141,1153]},{"content":"A standard <ph id=\"ph1\">`HRESULT`</ph>.","pos":[1157,1178],"source":"A standard `HRESULT`."},{"content":"The default return value is <ph id=\"ph1\">`S_OK`</ph>.","pos":[1179,1214],"source":" The default return value is `S_OK`."},{"content":"Remarks","pos":[1223,1230]},{"content":"If you have any validation routines you want to run on a value that you are about to use to set a property, you should override this function.","pos":[1234,1376]},{"content":"For example, you could validate <bpt id=\"p1\">**</bpt>DBPROP_AUTH_PASSWORD<ept id=\"p1\">**</ept> against a password table to determine a valid value.","pos":[1377,1486],"source":" For example, you could validate **DBPROP_AUTH_PASSWORD** against a password table to determine a valid value."},{"content":"Requirements","pos":[1495,1507]},{"pos":[1511,1530],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> atldb.h","source":"**Header:** atldb.h"},{"content":"See Also","pos":[1539,1547]},{"content":"CUtlProps Class","pos":[1552,1567]}],"content":"---\ntitle: \"CUtlProps::IsValidValue | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"CUtlProps::IsValidValue\"\n  - \"CUtlProps.IsValidValue\"\n  - \"IsValidValue\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"IsValidValue method\"\nms.assetid: 1164556e-8d98-429c-a396-fc9a699e0e97\ncaps.latest.revision: 8\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# CUtlProps::IsValidValue\nUsed to validate a value before setting a property.  \n  \n## Syntax  \n  \n```  \n  \n      virtual HRESULT CUtlPropsBase::IsValidValue(  \n   ULONG /* iCurSet */,  \n   DBPROP* pDBProp   \n);  \n```  \n  \n#### Parameters  \n `iCurSet`  \n The index into the property-set array; zero if there is only one property set.  \n  \n `pDBProp`  \n The property ID and new value in a [DBPROP](https://msdn.microsoft.com/en-us/library/ms717970.aspx) structure.  \n  \n## Return Value  \n A standard `HRESULT`. The default return value is `S_OK`.  \n  \n## Remarks  \n If you have any validation routines you want to run on a value that you are about to use to set a property, you should override this function. For example, you could validate **DBPROP_AUTH_PASSWORD** against a password table to determine a valid value.  \n  \n## Requirements  \n **Header:** atldb.h  \n  \n## See Also  \n [CUtlProps Class](../../data/oledb/cutlprops-class.md)"}