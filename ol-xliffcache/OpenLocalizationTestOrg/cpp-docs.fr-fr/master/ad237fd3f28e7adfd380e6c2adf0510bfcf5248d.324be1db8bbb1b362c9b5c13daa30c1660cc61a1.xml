{"nodes":[{"pos":[12,40],"content":"&lt;new&gt; | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&amp;lt;</ph>new<ph id=\"ph2\">&amp;gt;</ph> | Microsoft Docs","pos":[0,28],"source":"&lt;new&gt; | Microsoft Docs"}]},{"pos":[619,630],"content":"&lt;new&gt;","linkify":"&lt;new&gt;","nodes":[{"content":"<ph id=\"ph1\">&amp;lt;</ph>new<ph id=\"ph2\">&amp;gt;</ph>","pos":[0,11],"source":"&lt;new&gt;"}]},{"content":"Defines several types and functions that control the allocation and freeing of storage under program control.","pos":[631,740]},{"content":"It also defines components for reporting on storage management errors.","pos":[741,811]},{"pos":[820,826],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[870,877],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Some of the functions declared in this header are replaceable.","pos":[881,943]},{"content":"The implementation supplies a default version, whose behavior is described in this document.","pos":[944,1036]},{"content":"A program can, however, define a function with the same signature to replace the default version at link time.","pos":[1037,1147]},{"content":"The replacement version must satisfy the requirements described in this document.","pos":[1148,1229]},{"pos":[1239,1246],"content":"Objects","linkify":"Objects","nodes":[{"content":"Objects","pos":[0,7]}]},{"pos":[1267,1322],"content":"<bpt id=\"p1\">[</bpt>nothrow<ept id=\"p1\">](../standard-library/new-functions.md#nothrow)</ept>","source":"[nothrow](../standard-library/new-functions.md#nothrow)"},{"pos":[1323,1421],"content":"Provides an object to be used as an argument for the <ph id=\"ph1\">`nothrow`</ph> versions of <bpt id=\"p1\">**</bpt>new<ept id=\"p1\">**</ept> and <bpt id=\"p2\">**</bpt>delete<ept id=\"p2\">**</ept>.","source":"Provides an object to be used as an argument for the `nothrow` versions of **new** and **delete**."},{"pos":[1432,1440],"content":"Typedefs","linkify":"Typedefs","nodes":[{"content":"Typedefs","pos":[0,8]}]},{"pos":[1461,1523],"content":"<bpt id=\"p1\">[</bpt>new_handler<ept id=\"p1\">](../standard-library/new-typedefs.md#new_handler)</ept>","source":"[new_handler](../standard-library/new-typedefs.md#new_handler)"},{"content":"A type that points to a function suitable for use as a new handler.","pos":[1524,1591]},{"pos":[1602,1611],"content":"Functions","linkify":"Functions","nodes":[{"content":"Functions","pos":[0,9]}]},{"pos":[1632,1703],"content":"<bpt id=\"p1\">[</bpt>set_new_handler<ept id=\"p1\">](../standard-library/new-functions.md#set_new_handler)</ept>","source":"[set_new_handler](../standard-library/new-functions.md#set_new_handler)"},{"content":"Installs a user function that is called when new fails in its attempt to allocate memory.","pos":[1704,1793]},{"pos":[1804,1813],"content":"Operators","linkify":"Operators","nodes":[{"content":"Operators","pos":[0,9]}]},{"pos":[1834,1905],"content":"<bpt id=\"p1\">[</bpt>operator delete<ept id=\"p1\">](../standard-library/new-operators.md#operator_delete)</ept>","source":"[operator delete](../standard-library/new-operators.md#operator_delete)"},{"content":"The function called by a delete expression to deallocate storage for individual of objects.","pos":[1906,1997]},{"pos":[2002,2087],"content":"<bpt id=\"p1\">[</bpt>operator delete&amp;#91;&amp;#93;<ept id=\"p1\">](../standard-library/new-operators.md#operator_delete_arr)</ept>","source":"[operator delete&#91;&#93;](../standard-library/new-operators.md#operator_delete_arr)"},{"content":"The function called by a delete expression to deallocate storage for an array of objects.","pos":[2088,2177]},{"pos":[2182,2247],"content":"<bpt id=\"p1\">[</bpt>operator new<ept id=\"p1\">](../standard-library/new-operators.md#operator_new)</ept>","source":"[operator new](../standard-library/new-operators.md#operator_new)"},{"content":"The function called by a new expression to allocate storage for individual objects.","pos":[2248,2331]},{"pos":[2336,2415],"content":"<bpt id=\"p1\">[</bpt>operator new&amp;#91;&amp;#93;<ept id=\"p1\">](../standard-library/new-operators.md#operator_new_arr)</ept>","source":"[operator new&#91;&#93;](../standard-library/new-operators.md#operator_new_arr)"},{"content":"The function called by a new expression to allocate storage for an array of objects.","pos":[2416,2500]},{"pos":[2511,2518],"content":"Classes","linkify":"Classes","nodes":[{"content":"Classes","pos":[0,7]}]},{"pos":[2539,2596],"content":"<bpt id=\"p1\">[</bpt>bad_alloc Class<ept id=\"p1\">](../standard-library/bad-alloc-class.md)</ept>","source":"[bad_alloc Class](../standard-library/bad-alloc-class.md)"},{"content":"The class describes an exception thrown to indicate that an allocation request did not succeed.","pos":[2597,2692]},{"pos":[2697,2758],"content":"<bpt id=\"p1\">[</bpt>nothrow_t Class<ept id=\"p1\">](../standard-library/nothrow-t-structure.md)</ept>","source":"[nothrow_t Class](../standard-library/nothrow-t-structure.md)"},{"content":"The class is used as a function parameter to operator new to indicate that the function should return a null pointer to report an allocation failure, rather than throw an exception.","pos":[2759,2940]},{"pos":[2950,2958],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Header Files Reference<ept id=\"p1\">](../standard-library/cpp-standard-library-header-files.md)</ept><ph id=\"ph1\"> </ph>","pos":[2962,3045],"source":"[Header Files Reference](../standard-library/cpp-standard-library-header-files.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Thread Safety in the C++ Standard Library<ept id=\"p1\">](../standard-library/thread-safety-in-the-cpp-standard-library.md)</ept>","pos":[3048,3158],"source":" [Thread Safety in the C++ Standard Library](../standard-library/thread-safety-in-the-cpp-standard-library.md)"}],"content":"---\ntitle: \"&lt;new&gt; | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"std::<new>\"\n  - \"<new>\"\n  - \"std.<new>\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"new header\"\nms.assetid: 218e2a15-34e8-4ef3-9122-1e90eccf8559\ncaps.latest.revision: 18\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# &lt;new&gt;\nDefines several types and functions that control the allocation and freeing of storage under program control. It also defines components for reporting on storage management errors.  \n  \n## Syntax  \n  \n```  \n#include <new>  \n  \n```  \n  \n## Remarks  \n Some of the functions declared in this header are replaceable. The implementation supplies a default version, whose behavior is described in this document. A program can, however, define a function with the same signature to replace the default version at link time. The replacement version must satisfy the requirements described in this document.  \n  \n### Objects  \n  \n|||  \n|-|-|  \n|[nothrow](../standard-library/new-functions.md#nothrow)|Provides an object to be used as an argument for the `nothrow` versions of **new** and **delete**.|  \n  \n### Typedefs  \n  \n|||  \n|-|-|  \n|[new_handler](../standard-library/new-typedefs.md#new_handler)|A type that points to a function suitable for use as a new handler.|  \n  \n### Functions  \n  \n|||  \n|-|-|  \n|[set_new_handler](../standard-library/new-functions.md#set_new_handler)|Installs a user function that is called when new fails in its attempt to allocate memory.|  \n  \n### Operators  \n  \n|||  \n|-|-|  \n|[operator delete](../standard-library/new-operators.md#operator_delete)|The function called by a delete expression to deallocate storage for individual of objects.|  \n|[operator delete&#91;&#93;](../standard-library/new-operators.md#operator_delete_arr)|The function called by a delete expression to deallocate storage for an array of objects.|  \n|[operator new](../standard-library/new-operators.md#operator_new)|The function called by a new expression to allocate storage for individual objects.|  \n|[operator new&#91;&#93;](../standard-library/new-operators.md#operator_new_arr)|The function called by a new expression to allocate storage for an array of objects.|  \n  \n### Classes  \n  \n|||  \n|-|-|  \n|[bad_alloc Class](../standard-library/bad-alloc-class.md)|The class describes an exception thrown to indicate that an allocation request did not succeed.|  \n|[nothrow_t Class](../standard-library/nothrow-t-structure.md)|The class is used as a function parameter to operator new to indicate that the function should return a null pointer to report an allocation failure, rather than throw an exception.|  \n  \n## See Also  \n [Header Files Reference](../standard-library/cpp-standard-library-header-files.md)   \n [Thread Safety in the C++ Standard Library](../standard-library/thread-safety-in-the-cpp-standard-library.md)\n\n\n\n"}