{"nodes":[{"pos":[12,47],"content":"add_volatile Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"add_volatile Class | Microsoft Docs","pos":[0,35]}]},{"content":"add_volatile Class","pos":[772,790]},{"content":"Makes volatile type from the specified type.","pos":[791,835]},{"content":"Syntax","pos":[844,850]},{"content":"Parameters","pos":[998,1008]},{"content":"The type to modify.","pos":[1020,1039]},{"content":"Remarks","pos":[1048,1055]},{"pos":[1059,1217],"content":"An instance of the type modifier holds a modified-type that is <ph id=\"ph1\">`Ty`</ph> if <ph id=\"ph2\">`Ty`</ph> is a reference, a function, or a volatile-qualified type, otherwise <ph id=\"ph3\">`volatile Ty`</ph>.","source":"An instance of the type modifier holds a modified-type that is `Ty` if `Ty` is a reference, a function, or a volatile-qualified type, otherwise `volatile Ty`."},{"content":"Example","pos":[1226,1233]},{"content":"Requirements","pos":[1609,1621]},{"pos":[1625,1650],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> &lt;type_traits&gt;","source":"**Header:** <type_traits>"},{"pos":[1657,1675],"content":"<bpt id=\"p1\">**</bpt>Namespace:<ept id=\"p1\">**</ept> std","source":"**Namespace:** std"},{"content":"See Also","pos":[1684,1692]},{"content":"&lt;type_traits&gt;","pos":[1697,1710],"source":"<type_traits>"},{"content":"remove_volatile Class","pos":[1753,1774]}],"content":"---\ntitle: \"add_volatile Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"std::tr1::add_volatile\"\n  - \"add_volatile\"\n  - \"std.tr1.add_volatile\"\n  - \"std.add_volatile\"\n  - \"std::add_volatile\"\n  - \"type_traits/std::add_volatile\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"add_volatile class [TR1]\"\n  - \"add_volatile\"\nms.assetid: cde57277-d764-402d-841e-97611ebaab14\ncaps.latest.revision: 21\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# add_volatile Class\nMakes volatile type from the specified type.  \n  \n## Syntax  \n  \n```  \ntemplate <class Ty>  \nstruct add_volatile;  \n \ntemplate <class T>using add_volatile_t = typename add_volatile<T>::type;  \n```  \n  \n#### Parameters  \n `Ty`  \n The type to modify.  \n  \n## Remarks  \n An instance of the type modifier holds a modified-type that is `Ty` if `Ty` is a reference, a function, or a volatile-qualified type, otherwise `volatile Ty`.  \n  \n## Example  \n  \n```cpp  \n#include <type_traits>   \n#include <iostream>   \n  \nint main()   \n    {   \n    std::add_volatile_t<int> *p = (volatile int *)0;   \n  \n    p = p;  // to quiet \"unused\" warning   \n    std::cout << \"add_volatile<int> == \"   \n        << typeid(*p).name() << std::endl;   \n  \n    return (0);   \n    }  \n  \n```  \n  \n```Output  \nadd_volatile<int> == int  \n```  \n  \n## Requirements  \n **Header:** <type_traits>  \n  \n **Namespace:** std  \n  \n## See Also  \n [<type_traits>](../standard-library/type-traits.md)   \n [remove_volatile Class](../standard-library/remove-volatile-class.md)\n"}