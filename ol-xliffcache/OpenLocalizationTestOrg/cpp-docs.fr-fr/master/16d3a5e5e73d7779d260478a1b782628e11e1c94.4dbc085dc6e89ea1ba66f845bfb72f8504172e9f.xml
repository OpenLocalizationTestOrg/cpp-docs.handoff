{"nodes":[{"pos":[12,38],"content":"fesetenv1 | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"fesetenv1 | Microsoft Docs","pos":[0,26]}]},{"pos":[941,949],"content":"fesetenv","linkify":"fesetenv","nodes":[{"content":"fesetenv","pos":[0,8]}]},{"content":"Sets the current floating-point environment.","pos":[950,994]},{"pos":[1003,1009],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[1083,1093],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Pointer to a <ph id=\"ph1\">`fenv_t`</ph> object that contains a floating-point environment as set by a call to <bpt id=\"p1\">[</bpt>fegetenv<ept id=\"p1\">](http://msdn.microsoft.com/Library/61df848d-6ba8-4c6e-be35-216436fe7736)</ept> or <bpt id=\"p2\">[</bpt>feholdexcept<ept id=\"p2\">](http://msdn.microsoft.com/Library/c286ace3-ec39-482a-be8b-f998d31003d9)</ept>.","pos":[1107,1372],"source":" Pointer to a `fenv_t` object that contains a floating-point environment as set by a call to [fegetenv](http://msdn.microsoft.com/Library/61df848d-6ba8-4c6e-be35-216436fe7736) or [feholdexcept](http://msdn.microsoft.com/Library/c286ace3-ec39-482a-be8b-f998d31003d9)."},{"content":"You can also specify the default startup floating-point environment by using the FE_DFL_ENV macro.","pos":[1373,1471]},{"pos":[1480,1492],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Returns 0 if the environment was successfully set.","pos":[1496,1546]},{"content":"Otherwise, returns a nonzero value.","pos":[1554,1589]},{"pos":[1598,1605],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The <ph id=\"ph1\">`fesetenv`</ph> function sets the current floating-point environment from the value stored in the <ph id=\"ph2\">`fenv_t`</ph> object pointed to by <ph id=\"ph3\">`penv`</ph>.","pos":[1609,1743],"source":"The `fesetenv` function sets the current floating-point environment from the value stored in the `fenv_t` object pointed to by `penv`."},{"content":"The floating point environment is the set of status flags and control modes that affect floating-point calculations.","pos":[1744,1860]},{"content":"This includes the rounding mode and the status flags for floating-point exceptions.","pos":[1861,1944]},{"content":"If <ph id=\"ph1\">`penv`</ph> is not FE_DFL_ENV or does not point to a valid <ph id=\"ph2\">`fenv_t`</ph> object, subsequent behavior is undefined.","pos":[1946,2053],"source":"  If `penv` is not FE_DFL_ENV or does not point to a valid `fenv_t` object, subsequent behavior is undefined."},{"pos":[2060,2186],"content":"A call to this function sets the exception status flags that are in the <ph id=\"ph1\">`penv`</ph> object, but it does not raise those exceptions.","source":"A call to this function sets the exception status flags that are in the `penv` object, but it does not raise those exceptions."},{"content":"To use this function, you must turn off floating-point optimizations that could prevent access by using the <ph id=\"ph1\">`#pragma fenv_access(on)`</ph> directive prior to the call.","pos":[2193,2355],"source":"To use this function, you must turn off floating-point optimizations that could prevent access by using the `#pragma fenv_access(on)` directive prior to the call."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>fenv_access<ept id=\"p1\">](../../preprocessor/fenv-access.md)</ept>.","pos":[2356,2431],"source":" For more information, see [fenv_access](../../preprocessor/fenv-access.md)."},{"pos":[2440,2452],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"content":"Function","pos":[2459,2467]},{"content":"C header","pos":[2468,2476]},{"content":"C++ header","pos":[2477,2487]},{"content":"<ph id=\"ph1\">\\&lt;</ph>fenv.h&gt;","pos":[2556,2565],"source":"\\<fenv.h>"},{"content":"<ph id=\"ph1\">\\&lt;</ph>cfenv&gt;","pos":[2566,2574],"source":"\\<cfenv>"},{"pos":[2582,2686],"content":"For additional compatibility information, see <bpt id=\"p1\">[</bpt>Compatibility<ept id=\"p1\">](../../c-runtime-library/compatibility.md)</ept>.","source":"For additional compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md)."},{"pos":[2695,2703],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Alphabetical Function Reference<ept id=\"p1\">](../../c-runtime-library/reference/crt-alphabetical-function-reference.md)</ept><ph id=\"ph1\"> </ph>","pos":[2707,2815],"source":"[Alphabetical Function Reference](../../c-runtime-library/reference/crt-alphabetical-function-reference.md) "},{"content":"<bpt id=\"p1\"> [</bpt>fegetenv<ept id=\"p1\">](../../c-runtime-library/reference/fegetenv1.md)</ept><ph id=\"ph1\"> </ph>","pos":[2818,2878],"source":" [fegetenv](../../c-runtime-library/reference/fegetenv1.md) "},{"content":"<bpt id=\"p1\"> [</bpt>feclearexcept<ept id=\"p1\">](../../c-runtime-library/reference/feclearexcept1.md)</ept><ph id=\"ph1\"> </ph>","pos":[2881,2951],"source":" [feclearexcept](../../c-runtime-library/reference/feclearexcept1.md) "},{"content":"<bpt id=\"p1\"> [</bpt>feholdexcept<ept id=\"p1\">](../../c-runtime-library/reference/feholdexcept2.md)</ept><ph id=\"ph1\"> </ph>","pos":[2954,3022],"source":" [feholdexcept](../../c-runtime-library/reference/feholdexcept2.md) "},{"content":"<bpt id=\"p1\"> [</bpt>fesetexceptflag<ept id=\"p1\">](../../c-runtime-library/reference/fesetexceptflag2.md)</ept>","pos":[3025,3098],"source":" [fesetexceptflag](../../c-runtime-library/reference/fesetexceptflag2.md)"}],"content":"---\ntitle: \"fesetenv1 | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"cpp\"\n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\napiname: \n  - \"fesetenv\"\napilocation: \n  - \"msvcrt.dll\"\n  - \"msvcr80.dll\"\n  - \"msvcr90.dll\"\n  - \"msvcr100.dll\"\n  - \"msvcr100_clr0400.dll\"\n  - \"msvcr110.dll\"\n  - \"msvcr110_clr0400.dll\"\n  - \"msvcr120.dll\"\n  - \"msvcr120_clr0400.dll\"\n  - \"ucrtbase.dll\"\n  - \"api-ms-win-crt-runtime-l1-1-0.dll\"\napitype: \"DLLExport\"\nf1_keywords: \n  - \"fesetenv\"\n  - \"fenv/fesetenv\"\ndev_langs: \n  - \"C\"\n  - \"C++\"\nhelpviewer_keywords: \n  - \"fesetenv function\"\nms.assetid: ffc64fff-8ea7-4d59-9e04-ff96ef8cd012\ncaps.latest.revision: 6\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# fesetenv\nSets the current floating-point environment.  \n  \n## Syntax  \n  \n```  \nint fesetenv(  \n   const fenv_t *penv  \n);  \n  \n```  \n  \n#### Parameters  \n `penv`  \n Pointer to a `fenv_t` object that contains a floating-point environment as set by a call to [fegetenv](http://msdn.microsoft.com/Library/61df848d-6ba8-4c6e-be35-216436fe7736) or [feholdexcept](http://msdn.microsoft.com/Library/c286ace3-ec39-482a-be8b-f998d31003d9). You can also specify the default startup floating-point environment by using the FE_DFL_ENV macro.  \n  \n## Return Value  \n Returns 0 if the environment was successfully set.        Otherwise, returns a nonzero value.  \n  \n## Remarks  \n The `fesetenv` function sets the current floating-point environment from the value stored in the `fenv_t` object pointed to by `penv`. The floating point environment is the set of status flags and control modes that affect floating-point calculations. This includes the rounding mode and the status flags for floating-point exceptions.  If `penv` is not FE_DFL_ENV or does not point to a valid `fenv_t` object, subsequent behavior is undefined.  \n  \n A call to this function sets the exception status flags that are in the `penv` object, but it does not raise those exceptions.  \n  \n To use this function, you must turn off floating-point optimizations that could prevent access by using the `#pragma fenv_access(on)` directive prior to the call. For more information, see [fenv_access](../../preprocessor/fenv-access.md).  \n  \n## Requirements  \n  \n|Function|C header|C++ header|  \n|--------------|--------------|------------------|  \n|`fesetenv`|\\<fenv.h>|\\<cfenv>|  \n  \n For additional compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md).  \n  \n## See Also  \n [Alphabetical Function Reference](../../c-runtime-library/reference/crt-alphabetical-function-reference.md)   \n [fegetenv](../../c-runtime-library/reference/fegetenv1.md)   \n [feclearexcept](../../c-runtime-library/reference/feclearexcept1.md)   \n [feholdexcept](../../c-runtime-library/reference/feholdexcept2.md)   \n [fesetexceptflag](../../c-runtime-library/reference/fesetexceptflag2.md)"}