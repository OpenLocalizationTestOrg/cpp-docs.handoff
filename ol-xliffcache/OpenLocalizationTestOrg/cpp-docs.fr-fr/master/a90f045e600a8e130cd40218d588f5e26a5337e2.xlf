<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="fr-fr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-04506c2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a90f045e600a8e130cd40218d588f5e26a5337e2</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\error-messages\compiler-errors-2\compiler-error-c2558.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f7706ba9bafd90fccbdd27e9e681f55292725f1a</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6d4929ec46655a7f9c20952a3d174f281aaf98b0</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Compiler Error C2558 | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Compiler Error C2558</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>'identifier' : no copy constructor available or copy constructor is declared 'explicit'</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>A copy constructor initializes an object from another object of the same type.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>(It makes a copy of the object.) The compiler generates a default copy constructor if you do not define any constructors.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>To fix this error</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The problem can occur when an attempt is made to copy a class whose copy constructor is <ph id="ph1">`private`</ph>.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>In most cases, a class that has a <ph id="ph1">`private`</ph> copy constructor should not be copied.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>A common programming technique declares a <ph id="ph1">`private`</ph> copy constructor to prevent the direct use of a class.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The class may be useless by itself or require another class in order to work correctly.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>If you determine that it is safe to use a class that has a <ph id="ph1">`private`</ph> copy constructor, derive a new class from the class that has the <ph id="ph2">`private`</ph> constructor and make a <ph id="ph3">`public`</ph> or <ph id="ph4">`protected`</ph> copy constructor available in the new class.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Use the derived class in place of the original.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The problem can occur when an attempt is made to copy a class whose copy constructor is explicit.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Declaring a copy constructor as <ph id="ph1">`explicit`</ph> prevents passing/returning objects of a class to/from functions.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>For more information about explicit constructors, see <bpt id="p1">[</bpt>User-Defined Type Conversions<ept id="p1">](../../cpp/user-defined-type-conversions-cpp.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The problem can occur when an attempt is made to copy a class instance declared <ph id="ph1">`const`</ph> by using a copy constructor that does not take a <ph id="ph2">`const`</ph> reference parameter.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Declare your copy constructor with a <ph id="ph1">`const`</ph> type reference instead of a non-const type reference.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>