{"nodes":[{"pos":[12,49],"content":"Compiler Error C3651 | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Compiler Error C3651 | Microsoft Docs","pos":[0,37]}]},{"content":"Compiler Error C3651","pos":[624,644]},{"content":"'member' : cannot be used as an explicit override, must be a member of a base class","pos":[645,728]},{"content":"An explicit override was specified, but the function being overridden was in a type that is not a base type.","pos":[735,843]},{"pos":[850,959],"content":"For more information, see <bpt id=\"p1\">[</bpt>Explicit Overrides<ept id=\"p1\">](../../windows/explicit-overrides-cpp-component-extensions.md)</ept>.","source":"For more information, see [Explicit Overrides](../../windows/explicit-overrides-cpp-component-extensions.md)."},{"content":"The following sample generates C3651:","pos":[966,1003]}],"content":"---\ntitle: \"Compiler Error C3651 | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"error-reference\"\nf1_keywords: \n  - \"C3651\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"C3651\"\nms.assetid: a03e692e-c219-4654-9827-8415cfa5a22d\ncaps.latest.revision: 10\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"ru-ru\"\n  - \"zh-cn\"\n  - \"zh-tw\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"tr-tr\"\n---\n# Compiler Error C3651\n'member' : cannot be used as an explicit override, must be a member of a base class  \n  \n An explicit override was specified, but the function being overridden was in a type that is not a base type.  \n  \n For more information, see [Explicit Overrides](../../windows/explicit-overrides-cpp-component-extensions.md).  \n  \n The following sample generates C3651:  \n  \n```  \n// C3651.cpp  \n// compile with: /clr /c  \nref class C {  \npublic:  \n   virtual void func2();  \n};  \n  \nref class Other {  \npublic:  \n   virtual void func();  \n};  \n  \nref class D : public C {  \npublic:  \n   virtual void func() new sealed = Other::func;   // C3651  \n   virtual void func2() new sealed = C::func2;   // OK  \n};  \n```"}