{"nodes":[{"pos":[12,45],"content":"OpenMP Functions | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"OpenMP Functions | Microsoft Docs","pos":[0,33]}]},{"pos":[525,541],"content":"OpenMP Functions","linkify":"OpenMP Functions","nodes":[{"content":"OpenMP Functions","pos":[0,16]}]},{"content":"Provides links to functions used in the OpenMP API.","pos":[542,593]},{"content":"The Visual C++ implementation of the OpenMP standard includes the following functions.","pos":[600,686]},{"content":"Function","pos":[693,701]},{"content":"Description","pos":[702,713]},{"pos":[755,829],"content":"<bpt id=\"p1\">[</bpt>omp_destroy_lock<ept id=\"p1\">](../../../parallel/openmp/reference/omp-destroy-lock.md)</ept>","source":"[omp_destroy_lock](../../../parallel/openmp/reference/omp-destroy-lock.md)"},{"content":"Uninitializes a lock.","pos":[830,851]},{"pos":[856,940],"content":"<bpt id=\"p1\">[</bpt>omp_destroy_nest_lock<ept id=\"p1\">](../../../parallel/openmp/reference/omp-destroy-nest-lock.md)</ept>","source":"[omp_destroy_nest_lock](../../../parallel/openmp/reference/omp-destroy-nest-lock.md)"},{"content":"Uninitializes a nestable lock.","pos":[941,971]},{"pos":[976,1048],"content":"<bpt id=\"p1\">[</bpt>omp_get_dynamic<ept id=\"p1\">](../../../parallel/openmp/reference/omp-get-dynamic.md)</ept>","source":"[omp_get_dynamic](../../../parallel/openmp/reference/omp-get-dynamic.md)"},{"content":"Returns a value that indicates if the number of threads available in subsequent parallel region can be adjusted by the run time.","pos":[1049,1177]},{"pos":[1182,1262],"content":"<bpt id=\"p1\">[</bpt>omp_get_max_threads<ept id=\"p1\">](../../../parallel/openmp/reference/omp-get-max-threads.md)</ept>","source":"[omp_get_max_threads](../../../parallel/openmp/reference/omp-get-max-threads.md)"},{"pos":[1263,1494],"content":"Returns an integer that is equal to or greater than the number of threads that would be available if a parallel region without <bpt id=\"p1\">[</bpt>num_threads<ept id=\"p1\">](../../../parallel/openmp/reference/num-threads.md)</ept> were defined at that point in the code.","source":"Returns an integer that is equal to or greater than the number of threads that would be available if a parallel region without [num_threads](../../../parallel/openmp/reference/num-threads.md) were defined at that point in the code."},{"pos":[1499,1569],"content":"<bpt id=\"p1\">[</bpt>omp_get_nested<ept id=\"p1\">](../../../parallel/openmp/reference/omp-get-nested.md)</ept>","source":"[omp_get_nested](../../../parallel/openmp/reference/omp-get-nested.md)"},{"content":"Returns a value that indicates if nested parallelism is enabled.","pos":[1570,1634]},{"pos":[1639,1715],"content":"<bpt id=\"p1\">[</bpt>omp_get_num_procs<ept id=\"p1\">](../../../parallel/openmp/reference/omp-get-num-procs.md)</ept>","source":"[omp_get_num_procs](../../../parallel/openmp/reference/omp-get-num-procs.md)"},{"content":"Returns the number of processors that are available when the function is called.","pos":[1716,1796]},{"pos":[1801,1881],"content":"<bpt id=\"p1\">[</bpt>omp_get_num_threads<ept id=\"p1\">](../../../parallel/openmp/reference/omp-get-num-threads.md)</ept>","source":"[omp_get_num_threads](../../../parallel/openmp/reference/omp-get-num-threads.md)"},{"content":"Returns the number of threads in the parallel region.","pos":[1882,1935]},{"pos":[1940,2018],"content":"<bpt id=\"p1\">[</bpt>omp_get_thread_num<ept id=\"p1\">](../../../parallel/openmp/reference/omp-get-thread-num.md)</ept>","source":"[omp_get_thread_num](../../../parallel/openmp/reference/omp-get-thread-num.md)"},{"content":"Returns the thread number of the thread executing within its thread team.","pos":[2019,2092]},{"pos":[2097,2165],"content":"<bpt id=\"p1\">[</bpt>omp_get_wtick<ept id=\"p1\">](../../../parallel/openmp/reference/omp-get-wtick.md)</ept>","source":"[omp_get_wtick](../../../parallel/openmp/reference/omp-get-wtick.md)"},{"content":"Returns the number of seconds between processor clock ticks.","pos":[2166,2226]},{"pos":[2231,2299],"content":"<bpt id=\"p1\">[</bpt>omp_get_wtime<ept id=\"p1\">](../../../parallel/openmp/reference/omp-get-wtime.md)</ept>","source":"[omp_get_wtime](../../../parallel/openmp/reference/omp-get-wtime.md)"},{"content":"Returns a value in seconds of the time elapsed from some point.","pos":[2300,2363]},{"pos":[2368,2440],"content":"<bpt id=\"p1\">[</bpt>omp_in_parallel<ept id=\"p1\">](../../../parallel/openmp/reference/omp-in-parallel.md)</ept>","source":"[omp_in_parallel](../../../parallel/openmp/reference/omp-in-parallel.md)"},{"content":"Returns nonzero if called from within a parallel region.","pos":[2441,2497]},{"pos":[2502,2570],"content":"<bpt id=\"p1\">[</bpt>omp_init_lock<ept id=\"p1\">](../../../parallel/openmp/reference/omp-init-lock.md)</ept>","source":"[omp_init_lock](../../../parallel/openmp/reference/omp-init-lock.md)"},{"content":"Initializes a simple lock.","pos":[2571,2597]},{"pos":[2602,2680],"content":"<bpt id=\"p1\">[</bpt>omp_init_nest_lock<ept id=\"p1\">](../../../parallel/openmp/reference/omp-init-nest-lock.md)</ept>","source":"[omp_init_nest_lock](../../../parallel/openmp/reference/omp-init-nest-lock.md)"},{"content":"Initializes a lock.","pos":[2681,2700]},{"pos":[2705,2777],"content":"<bpt id=\"p1\">[</bpt>omp_set_dynamic<ept id=\"p1\">](../../../parallel/openmp/reference/omp-set-dynamic.md)</ept>","source":"[omp_set_dynamic](../../../parallel/openmp/reference/omp-set-dynamic.md)"},{"content":"Indicates that the number of threads available in subsequent parallel region can be adjusted by the run time.","pos":[2778,2887]},{"pos":[2892,2958],"content":"<bpt id=\"p1\">[</bpt>omp_set_lock<ept id=\"p1\">](../../../parallel/openmp/reference/omp-set-lock.md)</ept>","source":"[omp_set_lock](../../../parallel/openmp/reference/omp-set-lock.md)"},{"content":"Blocks thread execution until a lock is available.","pos":[2959,3009]},{"pos":[3014,3090],"content":"<bpt id=\"p1\">[</bpt>omp_set_nest_lock<ept id=\"p1\">](../../../parallel/openmp/reference/omp-set-nest-lock.md)</ept>","source":"[omp_set_nest_lock](../../../parallel/openmp/reference/omp-set-nest-lock.md)"},{"content":"Blocks thread execution until a lock is available.","pos":[3091,3141]},{"pos":[3146,3216],"content":"<bpt id=\"p1\">[</bpt>omp_set_nested<ept id=\"p1\">](../../../parallel/openmp/reference/omp-set-nested.md)</ept>","source":"[omp_set_nested](../../../parallel/openmp/reference/omp-set-nested.md)"},{"content":"Enables nested parallelism.","pos":[3217,3244]},{"pos":[3249,3329],"content":"<bpt id=\"p1\">[</bpt>omp_set_num_threads<ept id=\"p1\">](../../../parallel/openmp/reference/omp-set-num-threads.md)</ept>","source":"[omp_set_num_threads](../../../parallel/openmp/reference/omp-set-num-threads.md)"},{"pos":[3330,3484],"content":"Sets the number of threads in subsequent parallel regions, unless overridden by a <bpt id=\"p1\">[</bpt>num_threads<ept id=\"p1\">](../../../parallel/openmp/reference/num-threads.md)</ept> clause.","source":"Sets the number of threads in subsequent parallel regions, unless overridden by a [num_threads](../../../parallel/openmp/reference/num-threads.md) clause."},{"pos":[3489,3557],"content":"<bpt id=\"p1\">[</bpt>omp_test_lock<ept id=\"p1\">](../../../parallel/openmp/reference/omp-test-lock.md)</ept>","source":"[omp_test_lock](../../../parallel/openmp/reference/omp-test-lock.md)"},{"content":"Attempts to set a lock but does not block thread execution.","pos":[3558,3617]},{"pos":[3622,3700],"content":"<bpt id=\"p1\">[</bpt>omp_test_nest_lock<ept id=\"p1\">](../../../parallel/openmp/reference/omp-test-nest-lock.md)</ept>","source":"[omp_test_nest_lock](../../../parallel/openmp/reference/omp-test-nest-lock.md)"},{"content":"Attempts to set a nestable lock but does not block thread execution.","pos":[3701,3769]},{"pos":[3774,3844],"content":"<bpt id=\"p1\">[</bpt>omp_unset_lock<ept id=\"p1\">](../../../parallel/openmp/reference/omp-unset-lock.md)</ept>","source":"[omp_unset_lock](../../../parallel/openmp/reference/omp-unset-lock.md)"},{"content":"Releases a lock.","pos":[3845,3861]},{"pos":[3866,3946],"content":"<bpt id=\"p1\">[</bpt>omp_unset_nest_lock<ept id=\"p1\">](../../../parallel/openmp/reference/omp-unset-nest-lock.md)</ept>","source":"[omp_unset_nest_lock](../../../parallel/openmp/reference/omp-unset-nest-lock.md)"},{"content":"Releases a nestable lock.","pos":[3947,3972]},{"pos":[3982,3990],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"pos":[3994,4077],"content":"<bpt id=\"p1\">[</bpt>Library Reference<ept id=\"p1\">](../../../parallel/openmp/reference/openmp-library-reference.md)</ept>","source":"[Library Reference](../../../parallel/openmp/reference/openmp-library-reference.md)"}],"content":"---\ntitle: \"OpenMP Functions | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"C++\"\nms.assetid: a55a2e5c-a260-44ee-bbd6-de7e2351b384\ncaps.latest.revision: 7\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# OpenMP Functions\nProvides links to functions used in the OpenMP API.  \n  \n The Visual C++ implementation of the OpenMP standard includes the following functions.  \n  \n|Function|Description|  \n|--------------|-----------------|  \n|[omp_destroy_lock](../../../parallel/openmp/reference/omp-destroy-lock.md)|Uninitializes a lock.|  \n|[omp_destroy_nest_lock](../../../parallel/openmp/reference/omp-destroy-nest-lock.md)|Uninitializes a nestable lock.|  \n|[omp_get_dynamic](../../../parallel/openmp/reference/omp-get-dynamic.md)|Returns a value that indicates if the number of threads available in subsequent parallel region can be adjusted by the run time.|  \n|[omp_get_max_threads](../../../parallel/openmp/reference/omp-get-max-threads.md)|Returns an integer that is equal to or greater than the number of threads that would be available if a parallel region without [num_threads](../../../parallel/openmp/reference/num-threads.md) were defined at that point in the code.|  \n|[omp_get_nested](../../../parallel/openmp/reference/omp-get-nested.md)|Returns a value that indicates if nested parallelism is enabled.|  \n|[omp_get_num_procs](../../../parallel/openmp/reference/omp-get-num-procs.md)|Returns the number of processors that are available when the function is called.|  \n|[omp_get_num_threads](../../../parallel/openmp/reference/omp-get-num-threads.md)|Returns the number of threads in the parallel region.|  \n|[omp_get_thread_num](../../../parallel/openmp/reference/omp-get-thread-num.md)|Returns the thread number of the thread executing within its thread team.|  \n|[omp_get_wtick](../../../parallel/openmp/reference/omp-get-wtick.md)|Returns the number of seconds between processor clock ticks.|  \n|[omp_get_wtime](../../../parallel/openmp/reference/omp-get-wtime.md)|Returns a value in seconds of the time elapsed from some point.|  \n|[omp_in_parallel](../../../parallel/openmp/reference/omp-in-parallel.md)|Returns nonzero if called from within a parallel region.|  \n|[omp_init_lock](../../../parallel/openmp/reference/omp-init-lock.md)|Initializes a simple lock.|  \n|[omp_init_nest_lock](../../../parallel/openmp/reference/omp-init-nest-lock.md)|Initializes a lock.|  \n|[omp_set_dynamic](../../../parallel/openmp/reference/omp-set-dynamic.md)|Indicates that the number of threads available in subsequent parallel region can be adjusted by the run time.|  \n|[omp_set_lock](../../../parallel/openmp/reference/omp-set-lock.md)|Blocks thread execution until a lock is available.|  \n|[omp_set_nest_lock](../../../parallel/openmp/reference/omp-set-nest-lock.md)|Blocks thread execution until a lock is available.|  \n|[omp_set_nested](../../../parallel/openmp/reference/omp-set-nested.md)|Enables nested parallelism.|  \n|[omp_set_num_threads](../../../parallel/openmp/reference/omp-set-num-threads.md)|Sets the number of threads in subsequent parallel regions, unless overridden by a [num_threads](../../../parallel/openmp/reference/num-threads.md) clause.|  \n|[omp_test_lock](../../../parallel/openmp/reference/omp-test-lock.md)|Attempts to set a lock but does not block thread execution.|  \n|[omp_test_nest_lock](../../../parallel/openmp/reference/omp-test-nest-lock.md)|Attempts to set a nestable lock but does not block thread execution.|  \n|[omp_unset_lock](../../../parallel/openmp/reference/omp-unset-lock.md)|Releases a lock.|  \n|[omp_unset_nest_lock](../../../parallel/openmp/reference/omp-unset-nest-lock.md)|Releases a nestable lock.|  \n  \n## See Also  \n [Library Reference](../../../parallel/openmp/reference/openmp-library-reference.md)"}