{"nodes":[{"pos":[12,66],"content":"A.22   Using the default(none) Clause | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"A.22   Using the default(none) Clause | Microsoft Docs","pos":[0,54]}]},{"content":"A.22   Using the default(none) Clause","pos":[546,583]},{"pos":[584,706],"content":"The following example distinguishes the variables that are affected by the <ph id=\"ph1\">`default(none)`</ph> clause from those that are not:","source":"The following example distinguishes the variables that are affected by the `default(none)` clause from those that are not:"},{"pos":[1724,1845],"content":"For more information on the <ph id=\"ph1\">`default`</ph> clause, see <bpt id=\"p1\">[</bpt>Section 2.7.2.5<ept id=\"p1\">](../../parallel/openmp/2-7-2-5-default.md)</ept> on page 28.","source":"For more information on the `default` clause, see [Section 2.7.2.5](../../parallel/openmp/2-7-2-5-default.md) on page 28."}],"content":"---\ntitle: \"A.22   Using the default(none) Clause | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"C++\"\nms.assetid: a3fa4e62-1e92-4896-ae3f-be268067d917\ncaps.latest.revision: 8\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# A.22   Using the default(none) Clause\nThe following example distinguishes the variables that are affected by the `default(none)` clause from those that are not:  \n  \n```  \n// openmp_using_clausedefault.c  \n// compile with: /openmp  \n#include <stdio.h>  \n#include <omp.h>  \n  \nint x, y, z[1000];  \n#pragma omp threadprivate(x)  \n  \nvoid fun(int a) {  \n   const int c = 1;  \n   int i = 0;  \n  \n   #pragma omp parallel default(none) private(a) shared(z)  \n   {  \n      int j = omp_get_num_thread();  \n             //O.K.  - j is declared within parallel region  \n      a = z[j];       // O.K.  - a is listed in private clause  \n                      //      - z is listed in shared clause  \n      x = c;          // O.K.  - x is threadprivate  \n                      //      - c has const-qualified type  \n      z[i] = y;       // C3052 error - cannot reference i or y here  \n  \n      #pragma omp for firstprivate(y)  \n         for (i=0; i<10 ; i++) {  \n            z[i] = y;  // O.K. - i is the loop control variable  \n                       // - y is listed in firstprivate clause  \n          }  \n       z[i] = y;   // Error - cannot reference i or y here  \n   }  \n}  \n```  \n  \n For more information on the `default` clause, see [Section 2.7.2.5](../../parallel/openmp/2-7-2-5-default.md) on page 28."}