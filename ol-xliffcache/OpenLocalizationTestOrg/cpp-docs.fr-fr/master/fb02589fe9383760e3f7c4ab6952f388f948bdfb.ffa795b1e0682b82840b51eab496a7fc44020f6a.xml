{"nodes":[{"pos":[12,35],"content":"_umask | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"_umask | Microsoft Docs","pos":[0,23]}]},{"pos":[1048,1054],"content":"_umask","linkify":"_umask","nodes":[{"content":"_umask","pos":[0,6]}]},{"content":"Sets the default file-permission mask.","pos":[1055,1093]},{"content":"A more secure version of this function is available; see <bpt id=\"p1\">[</bpt>_umask_s<ept id=\"p1\">](../../c-runtime-library/reference/umask-s.md)</ept>.","pos":[1094,1208],"source":" A more secure version of this function is available; see [_umask_s](../../c-runtime-library/reference/umask-s.md)."},{"pos":[1217,1223],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[1284,1294],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Default permission setting.","pos":[1309,1336]},{"pos":[1345,1357],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"<ph id=\"ph1\">`_umask`</ph> returns the previous value of <ph id=\"ph2\">`pmode`</ph>.","pos":[1361,1408],"source":"`_umask` returns the previous value of `pmode`."},{"content":"There is no error return.","pos":[1409,1434]},{"pos":[1443,1450],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The <ph id=\"ph1\">`_umask`</ph> function sets the file-permission mask of the current process to the mode specified by <ph id=\"ph2\">`pmode`</ph><bpt id=\"p1\">*</bpt>.<ept id=\"p1\">*</ept>","pos":[1454,1564],"source":"The `_umask` function sets the file-permission mask of the current process to the mode specified by `pmode`*.*"},{"content":"The file-permission mask modifies the permission setting of new files created by <ph id=\"ph1\">`_creat`</ph>, <ph id=\"ph2\">`_open`</ph>, or <ph id=\"ph3\">`_sopen`</ph>.","pos":[1565,1677],"source":" The file-permission mask modifies the permission setting of new files created by `_creat`, `_open`, or `_sopen`."},{"content":"If a bit in the mask is 1, the corresponding bit in the file's requested permission value is set to 0 (disallowed).","pos":[1678,1793]},{"content":"If a bit in the mask is 0, the corresponding bit is left unchanged.","pos":[1794,1861]},{"content":"The permission setting for a new file is not set until the file is closed for the first time.","pos":[1862,1955]},{"pos":[1962,2073],"content":"The integer expression <ph id=\"ph1\">`pmode`</ph> contains one or both of the following manifest constants, defined in SYS\\STAT.H:","source":"The integer expression `pmode` contains one or both of the following manifest constants, defined in SYS\\STAT.H:"},{"content":"Writing permitted.","pos":[2095,2113]},{"content":"Reading permitted.","pos":[2134,2152]},{"content":"Reading and writing permitted.","pos":[2185,2215]},{"content":"When both constants are given, they are joined with the bitwise-OR operator ( <ph id=\"ph1\">`|`</ph> ).","pos":[2222,2306],"source":"When both constants are given, they are joined with the bitwise-OR operator ( `|` )."},{"content":"If the <ph id=\"ph1\">`pmode`</ph> argument is <ph id=\"ph2\">`_S_IREAD`</ph>, reading is not allowed (the file is write-only).","pos":[2307,2394],"source":" If the `pmode` argument is `_S_IREAD`, reading is not allowed (the file is write-only)."},{"content":"If the <ph id=\"ph1\">`pmode`</ph> argument is <ph id=\"ph2\">`_S_IWRITE`</ph>, writing is not allowed (the file is read-only).","pos":[2395,2482],"source":" If the `pmode` argument is `_S_IWRITE`, writing is not allowed (the file is read-only)."},{"content":"For example, if the write bit is set in the mask, any new files will be read-only.","pos":[2483,2565]},{"content":"Note that with MS-DOS and the Windows operating systems, all files are readable; it is not possible to give write-only permission.","pos":[2566,2696]},{"content":"Therefore, setting the read bit with <ph id=\"ph1\">`_umask`</ph> has no effect on the file's modes.","pos":[2697,2777],"source":" Therefore, setting the read bit with `_umask` has no effect on the file's modes."},{"pos":[2784,2934],"content":"If <ph id=\"ph1\">`pmode`</ph> is not a combination of one of the manifest constants or incorporates an alternate set of constants, the function will simply ignore those.","source":"If `pmode` is not a combination of one of the manifest constants or incorporates an alternate set of constants, the function will simply ignore those."},{"pos":[2943,2955],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"content":"Routine","pos":[2962,2969]},{"content":"Required header","pos":[2970,2985]},{"content":"<ph id=\"ph1\">\\&lt;</ph>io.h&gt;, <ph id=\"ph2\">\\&lt;</ph>sys/stat.h&gt;, <ph id=\"ph3\">\\&lt;</ph>sys/types.h&gt;","pos":[3039,3077],"source":"\\<io.h>, \\<sys/stat.h>, \\<sys/types.h>"},{"pos":[3085,3209],"content":"For additional compatibility information, see <bpt id=\"p1\">[</bpt>Compatibility<ept id=\"p1\">](../../c-runtime-library/compatibility.md)</ept> in the Introduction.","source":"For additional compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md) in the Introduction."},{"pos":[3218,3227],"content":"Libraries","linkify":"Libraries","nodes":[{"content":"Libraries","pos":[0,9]}]},{"pos":[3231,3323],"content":"All versions of the <bpt id=\"p1\">[</bpt>C run-time libraries<ept id=\"p1\">](../../c-runtime-library/crt-library-features.md)</ept>.","source":"All versions of the [C run-time libraries](../../c-runtime-library/crt-library-features.md)."},{"pos":[3332,3339],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[3945,3970],"content":".NET Framework Equivalent","linkify":".NET Framework Equivalent","nodes":[{"content":".NET Framework Equivalent","pos":[0,25]}]},{"pos":[3974,4083],"content":"<bpt id=\"p1\">[</bpt>System::IO::File::SetAttributes<ept id=\"p1\">](https://msdn.microsoft.com/en-us/library/system.io.file.setattributes.aspx)</ept>","source":"[System::IO::File::SetAttributes](https://msdn.microsoft.com/en-us/library/system.io.file.setattributes.aspx)"},{"pos":[4092,4100],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>File Handling<ept id=\"p1\">](../../c-runtime-library/file-handling.md)</ept><ph id=\"ph1\"> </ph>","pos":[4104,4162],"source":"[File Handling](../../c-runtime-library/file-handling.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Low-Level I/O<ept id=\"p1\">](../../c-runtime-library/low-level-i-o.md)</ept><ph id=\"ph1\"> </ph>","pos":[4165,4224],"source":" [Low-Level I/O](../../c-runtime-library/low-level-i-o.md) "},{"content":"<bpt id=\"p1\"> [</bpt>_chmod, _wchmod<ept id=\"p1\">](../../c-runtime-library/reference/chmod-wchmod.md)</ept><ph id=\"ph1\"> </ph>","pos":[4227,4297],"source":" [_chmod, _wchmod](../../c-runtime-library/reference/chmod-wchmod.md) "},{"content":"<bpt id=\"p1\"> [</bpt>_creat, _wcreat<ept id=\"p1\">](../../c-runtime-library/reference/creat-wcreat.md)</ept><ph id=\"ph1\"> </ph>","pos":[4300,4370],"source":" [_creat, _wcreat](../../c-runtime-library/reference/creat-wcreat.md) "},{"content":"<bpt id=\"p1\"> [</bpt>_mkdir, _wmkdir<ept id=\"p1\">](../../c-runtime-library/reference/mkdir-wmkdir.md)</ept><ph id=\"ph1\"> </ph>","pos":[4373,4443],"source":" [_mkdir, _wmkdir](../../c-runtime-library/reference/mkdir-wmkdir.md) "},{"content":"<bpt id=\"p1\"> [</bpt>_open, _wopen<ept id=\"p1\">](../../c-runtime-library/reference/open-wopen.md)</ept>","pos":[4446,4511],"source":" [_open, _wopen](../../c-runtime-library/reference/open-wopen.md)"}],"content":"---\ntitle: \"_umask | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\napiname: \n  - \"_umask\"\napilocation: \n  - \"msvcrt.dll\"\n  - \"msvcr80.dll\"\n  - \"msvcr90.dll\"\n  - \"msvcr100.dll\"\n  - \"msvcr100_clr0400.dll\"\n  - \"msvcr110.dll\"\n  - \"msvcr110_clr0400.dll\"\n  - \"msvcr120.dll\"\n  - \"msvcr120_clr0400.dll\"\n  - \"ucrtbase.dll\"\n  - \"api-ms-win-crt-filesystem-l1-1-0.dll\"\napitype: \"DLLExport\"\nf1_keywords: \n  - \"_umask\"\ndev_langs: \n  - \"C++\"\n  - \"C\"\nhelpviewer_keywords: \n  - \"masks, file-permission-setting\"\n  - \"_umask function\"\n  - \"masks\"\n  - \"umask function\"\n  - \"file permissions [C++]\"\n  - \"files [C++], permission settings for\"\nms.assetid: 5e9a13ba-5321-4536-8721-6afb6f4c8483\ncaps.latest.revision: 21\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# _umask\nSets the default file-permission mask. A more secure version of this function is available; see [_umask_s](../../c-runtime-library/reference/umask-s.md).  \n  \n## Syntax  \n  \n```  \nint _umask(  \n   int pmode   \n);  \n```  \n  \n#### Parameters  \n `pmode`  \n Default permission setting.  \n  \n## Return Value  \n `_umask` returns the previous value of `pmode`. There is no error return.  \n  \n## Remarks  \n The `_umask` function sets the file-permission mask of the current process to the mode specified by `pmode`*.* The file-permission mask modifies the permission setting of new files created by `_creat`, `_open`, or `_sopen`. If a bit in the mask is 1, the corresponding bit in the file's requested permission value is set to 0 (disallowed). If a bit in the mask is 0, the corresponding bit is left unchanged. The permission setting for a new file is not set until the file is closed for the first time.  \n  \n The integer expression `pmode` contains one or both of the following manifest constants, defined in SYS\\STAT.H:  \n  \n `_S_IWRITE`  \n Writing permitted.  \n  \n `_S_IREAD`  \n Reading permitted.  \n  \n `_S_IREAD | _S_IWRITE`  \n Reading and writing permitted.  \n  \n When both constants are given, they are joined with the bitwise-OR operator ( `|` ). If the `pmode` argument is `_S_IREAD`, reading is not allowed (the file is write-only). If the `pmode` argument is `_S_IWRITE`, writing is not allowed (the file is read-only). For example, if the write bit is set in the mask, any new files will be read-only. Note that with MS-DOS and the Windows operating systems, all files are readable; it is not possible to give write-only permission. Therefore, setting the read bit with `_umask` has no effect on the file's modes.  \n  \n If `pmode` is not a combination of one of the manifest constants or incorporates an alternate set of constants, the function will simply ignore those.  \n  \n## Requirements  \n  \n|Routine|Required header|  \n|-------------|---------------------|  \n|`_umask`|\\<io.h>, \\<sys/stat.h>, \\<sys/types.h>|  \n  \n For additional compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md) in the Introduction.  \n  \n## Libraries  \n All versions of the [C run-time libraries](../../c-runtime-library/crt-library-features.md).  \n  \n## Example  \n  \n```  \n// crt_umask.c  \n// compile with: /W3  \n// This program uses _umask to set  \n// the file-permission mask so that all future  \n// files will be created as read-only files.  \n// It also displays the old mask.  \n#include <sys/stat.h>  \n#include <sys/types.h>  \n#include <io.h>  \n#include <stdio.h>  \n  \nint main( void )  \n{  \n   int oldmask;  \n  \n   /* Create read-only files: */  \n   oldmask = _umask( _S_IWRITE ); // C4996  \n   // Note: _umask is deprecated; consider using _umask_s instead  \n   printf( \"Oldmask = 0x%.4x\\n\", oldmask );  \n}  \n```  \n  \n```Output  \nOldmask = 0x0000  \n```  \n  \n## .NET Framework Equivalent  \n [System::IO::File::SetAttributes](https://msdn.microsoft.com/en-us/library/system.io.file.setattributes.aspx)  \n  \n## See Also  \n [File Handling](../../c-runtime-library/file-handling.md)   \n [Low-Level I/O](../../c-runtime-library/low-level-i-o.md)   \n [_chmod, _wchmod](../../c-runtime-library/reference/chmod-wchmod.md)   \n [_creat, _wcreat](../../c-runtime-library/reference/creat-wcreat.md)   \n [_mkdir, _wmkdir](../../c-runtime-library/reference/mkdir-wmkdir.md)   \n [_open, _wopen](../../c-runtime-library/reference/open-wopen.md)"}