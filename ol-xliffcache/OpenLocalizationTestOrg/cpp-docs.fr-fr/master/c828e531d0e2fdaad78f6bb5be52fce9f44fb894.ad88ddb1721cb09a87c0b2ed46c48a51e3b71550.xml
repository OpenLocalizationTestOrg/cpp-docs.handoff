{"nodes":[{"pos":[12,48],"content":"_strdate, _wstrdate | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"_strdate, _wstrdate | Microsoft Docs","pos":[0,36]}]},{"pos":[1184,1203],"content":"_strdate, _wstrdate","linkify":"_strdate, _wstrdate","nodes":[{"content":"_strdate, _wstrdate","pos":[0,19]}]},{"content":"Copy current system date to a buffer.","pos":[1204,1241]},{"content":"More secure versions of these functions are available; see <bpt id=\"p1\">[</bpt>_strdate_s, _wstrdate_s<ept id=\"p1\">](../../c-runtime-library/reference/strdate-s-wstrdate-s.md)</ept>.","pos":[1242,1386],"source":" More secure versions of these functions are available; see [_strdate_s, _wstrdate_s](../../c-runtime-library/reference/strdate-s-wstrdate-s.md)."},{"pos":[1395,1401],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[1701,1711],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"A pointer to a buffer containing the formatted date string.","pos":[1728,1787]},{"pos":[1796,1808],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[1812,1898],"content":"Each of these functions returns a pointer to the resulting character string <ph id=\"ph1\">`datestr`</ph>.","source":"Each of these functions returns a pointer to the resulting character string `datestr`."},{"pos":[1907,1914],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"More secure versions of these functions are available; see <bpt id=\"p1\">[</bpt>_strdate_s, _wstrdate_s<ept id=\"p1\">](../../c-runtime-library/reference/strdate-s-wstrdate-s.md)</ept>.","pos":[1918,2062],"source":"More secure versions of these functions are available; see [_strdate_s, _wstrdate_s](../../c-runtime-library/reference/strdate-s-wstrdate-s.md)."},{"content":"It is recommended that the more secure functions be used wherever possible.","pos":[2063,2138]},{"content":"The <ph id=\"ph1\">`_strdate`</ph> function copies the current system date to the buffer pointed to by <ph id=\"ph2\">`datestr`</ph>, formatted <ph id=\"ph3\">`mm`</ph><ph id=\"ph4\">/</ph><ph id=\"ph5\">`dd`</ph><ph id=\"ph6\">/</ph><ph id=\"ph7\">`yy`</ph>, where <ph id=\"ph8\">`mm`</ph> is two digits representing the month, <ph id=\"ph9\">`dd`</ph> is two digits representing the day, and <ph id=\"ph10\">`yy`</ph> is the last two digits of the year.","pos":[2145,2399],"source":"The `_strdate` function copies the current system date to the buffer pointed to by `datestr`, formatted `mm`/`dd`/`yy`, where `mm` is two digits representing the month, `dd` is two digits representing the day, and `yy` is the last two digits of the year."},{"content":"For example, the string <ph id=\"ph1\">`12/05/99`</ph> represents December 5, 1999.","pos":[2400,2463],"source":" For example, the string `12/05/99` represents December 5, 1999."},{"content":"The buffer must be at least 9 bytes long.","pos":[2464,2505]},{"content":"If <ph id=\"ph1\">`datestr`</ph> is a <ph id=\"ph2\">`NULL`</ph> pointer, the invalid parameter handler is invoked, as described in <bpt id=\"p1\">[</bpt>Parameter Validation<ept id=\"p1\">](../../c-runtime-library/parameter-validation.md)</ept>.","pos":[2512,2676],"source":"If `datestr` is a `NULL` pointer, the invalid parameter handler is invoked, as described in [Parameter Validation](../../c-runtime-library/parameter-validation.md)."},{"content":"If execution is allowed to continue, these functions return -1 and set <ph id=\"ph1\">`errno`</ph> to <ph id=\"ph2\">`EINVAL`</ph>.","pos":[2677,2768],"source":" If execution is allowed to continue, these functions return -1 and set `errno` to `EINVAL`."},{"content":"<ph id=\"ph1\">`_wstrdate`</ph> is a wide-character version of <ph id=\"ph2\">`_strdate`</ph>; the argument and return value of <ph id=\"ph3\">`_wstrdate`</ph> are wide-character strings.","pos":[2775,2902],"source":"`_wstrdate` is a wide-character version of `_strdate`; the argument and return value of `_wstrdate` are wide-character strings."},{"content":"These functions behave identically otherwise.","pos":[2903,2948]},{"content":"In C++, these functions have template overloads that invoke the newer, secure counterparts of these functions.","pos":[2955,3065]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Secure Template Overloads<ept id=\"p1\">](../../c-runtime-library/secure-template-overloads.md)</ept>.","pos":[3066,3174],"source":" For more information, see [Secure Template Overloads](../../c-runtime-library/secure-template-overloads.md)."},{"pos":[3184,3213],"content":"Generic-Text Routine Mappings","linkify":"Generic-Text Routine Mappings","nodes":[{"content":"Generic-Text Routine Mappings","pos":[0,29]}]},{"content":"TCHAR.H routine","pos":[3220,3235]},{"content":"_UNICODE &amp; _MBCS not defined","pos":[3236,3264],"source":"_UNICODE & _MBCS not defined"},{"content":"_MBCS defined","pos":[3265,3278]},{"content":"_UNICODE defined","pos":[3279,3295]},{"pos":[3463,3475],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"content":"Routine","pos":[3482,3489]},{"content":"Required header","pos":[3490,3505]},{"content":"<ph id=\"ph1\">\\&lt;</ph>time.h&gt;","pos":[3561,3570],"source":"\\<time.h>"},{"content":"<ph id=\"ph1\">\\&lt;</ph>time.h&gt; or <ph id=\"ph2\">\\&lt;</ph>wchar.h&gt;","pos":[3587,3610],"source":"\\<time.h> or \\<wchar.h>"},{"pos":[3618,3742],"content":"For additional compatibility information, see <bpt id=\"p1\">[</bpt>Compatibility<ept id=\"p1\">](../../c-runtime-library/compatibility.md)</ept> in the Introduction.","source":"For additional compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md) in the Introduction."},{"pos":[3751,3758],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[4278,4303],"content":".NET Framework Equivalent","linkify":".NET Framework Equivalent","nodes":[{"content":".NET Framework Equivalent","pos":[0,25]}]},{"pos":[4307,4401],"content":"<bpt id=\"p1\">[</bpt>System::DateTime::Parse<ept id=\"p1\">](https://msdn.microsoft.com/en-us/library/system.datetime.parse.aspx)</ept>","source":"[System::DateTime::Parse](https://msdn.microsoft.com/en-us/library/system.datetime.parse.aspx)"},{"pos":[4410,4418],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Time Management<ept id=\"p1\">](../../c-runtime-library/time-management.md)</ept><ph id=\"ph1\"> </ph>","pos":[4422,4484],"source":"[Time Management](../../c-runtime-library/time-management.md) "},{"content":"<bpt id=\"p1\"> [</bpt>asctime, _wasctime<ept id=\"p1\">](../../c-runtime-library/reference/asctime-wasctime.md)</ept><ph id=\"ph1\"> </ph>","pos":[4487,4564],"source":" [asctime, _wasctime](../../c-runtime-library/reference/asctime-wasctime.md) "},{"content":"<bpt id=\"p1\"> [</bpt>ctime, _ctime32, _ctime64, _wctime, _wctime32, _wctime64<ept id=\"p1\">](../../c-runtime-library/reference/ctime-ctime32-ctime64-wctime-wctime32-wctime64.md)</ept><ph id=\"ph1\"> </ph>","pos":[4567,4712],"source":" [ctime, _ctime32, _ctime64, _wctime, _wctime32, _wctime64](../../c-runtime-library/reference/ctime-ctime32-ctime64-wctime-wctime32-wctime64.md) "},{"content":"<bpt id=\"p1\"> [</bpt>gmtime, _gmtime32, _gmtime64<ept id=\"p1\">](../../c-runtime-library/reference/gmtime-gmtime32-gmtime64.md)</ept><ph id=\"ph1\"> </ph>","pos":[4715,4810],"source":" [gmtime, _gmtime32, _gmtime64](../../c-runtime-library/reference/gmtime-gmtime32-gmtime64.md) "},{"content":"<bpt id=\"p1\"> [</bpt>localtime, _localtime32, _localtime64<ept id=\"p1\">](../../c-runtime-library/reference/localtime-localtime32-localtime64.md)</ept><ph id=\"ph1\"> </ph>","pos":[4813,4926],"source":" [localtime, _localtime32, _localtime64](../../c-runtime-library/reference/localtime-localtime32-localtime64.md) "},{"content":"<bpt id=\"p1\"> [</bpt>mktime, _mktime32, _mktime64<ept id=\"p1\">](../../c-runtime-library/reference/mktime-mktime32-mktime64.md)</ept><ph id=\"ph1\"> </ph>","pos":[4929,5024],"source":" [mktime, _mktime32, _mktime64](../../c-runtime-library/reference/mktime-mktime32-mktime64.md) "},{"content":"<bpt id=\"p1\"> [</bpt>time, _time32, _time64<ept id=\"p1\">](../../c-runtime-library/reference/time-time32-time64.md)</ept><ph id=\"ph1\"> </ph>","pos":[5027,5110],"source":" [time, _time32, _time64](../../c-runtime-library/reference/time-time32-time64.md) "},{"content":"<bpt id=\"p1\"> [</bpt>_tzset<ept id=\"p1\">](../../c-runtime-library/reference/tzset.md)</ept>","pos":[5113,5166],"source":" [_tzset](../../c-runtime-library/reference/tzset.md)"}],"content":"---\ntitle: \"_strdate, _wstrdate | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\napiname: \n  - \"_strdate\"\n  - \"_wstrdate\"\napilocation: \n  - \"msvcrt.dll\"\n  - \"msvcr80.dll\"\n  - \"msvcr90.dll\"\n  - \"msvcr100.dll\"\n  - \"msvcr100_clr0400.dll\"\n  - \"msvcr110.dll\"\n  - \"msvcr110_clr0400.dll\"\n  - \"msvcr120.dll\"\n  - \"msvcr120_clr0400.dll\"\n  - \"ucrtbase.dll\"\n  - \"api-ms-win-crt-time-l1-1-0.dll\"\napitype: \"DLLExport\"\nf1_keywords: \n  - \"_tstrdate\"\n  - \"wstrdate\"\n  - \"_wstrdate\"\n  - \"_strdate\"\n  - \"strdate\"\ndev_langs: \n  - \"C++\"\n  - \"C\"\nhelpviewer_keywords: \n  - \"strdate function\"\n  - \"dates, copying\"\n  - \"tstrdate function\"\n  - \"_wstrdate function\"\n  - \"wstrdate function\"\n  - \"_strdate function\"\n  - \"_tstrdate function\"\n  - \"copying dates\"\nms.assetid: de8e4097-58f8-42ba-9dcd-cb4d9a9f1696\ncaps.latest.revision: 26\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"ru-ru\"\n  - \"zh-cn\"\n  - \"zh-tw\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"tr-tr\"\n---\n# _strdate, _wstrdate\nCopy current system date to a buffer. More secure versions of these functions are available; see [_strdate_s, _wstrdate_s](../../c-runtime-library/reference/strdate-s-wstrdate-s.md).  \n  \n## Syntax  \n  \n```  \nchar *_strdate(  \n   char *datestr   \n);  \nwchar_t *_wstrdate(  \n   wchar_t *datestr   \n);  \ntemplate <size_t size>  \nchar *_strdate(  \n   char (&datestr)[size]  \n); // C++ only  \ntemplate <size_t size>  \nwchar_t *_wstrdate(  \n   wchar_t (&datestr)[size]  \n); // C++ only  \n```  \n  \n#### Parameters  \n `datestr`  \n A pointer to a buffer containing the formatted date string.  \n  \n## Return Value  \n Each of these functions returns a pointer to the resulting character string `datestr`.  \n  \n## Remarks  \n More secure versions of these functions are available; see [_strdate_s, _wstrdate_s](../../c-runtime-library/reference/strdate-s-wstrdate-s.md). It is recommended that the more secure functions be used wherever possible.  \n  \n The `_strdate` function copies the current system date to the buffer pointed to by `datestr`, formatted `mm`/`dd`/`yy`, where `mm` is two digits representing the month, `dd` is two digits representing the day, and `yy` is the last two digits of the year. For example, the string `12/05/99` represents December 5, 1999. The buffer must be at least 9 bytes long.  \n  \n If `datestr` is a `NULL` pointer, the invalid parameter handler is invoked, as described in [Parameter Validation](../../c-runtime-library/parameter-validation.md). If execution is allowed to continue, these functions return -1 and set `errno` to `EINVAL`.  \n  \n `_wstrdate` is a wide-character version of `_strdate`; the argument and return value of `_wstrdate` are wide-character strings. These functions behave identically otherwise.  \n  \n In C++, these functions have template overloads that invoke the newer, secure counterparts of these functions. For more information, see [Secure Template Overloads](../../c-runtime-library/secure-template-overloads.md).  \n  \n### Generic-Text Routine Mappings  \n  \n|TCHAR.H routine|_UNICODE & _MBCS not defined|_MBCS defined|_UNICODE defined|  \n|---------------------|------------------------------------|--------------------|-----------------------|  \n|`_tstrdate`|`_strdate`|`_strdate`|`_wstrdate`|  \n  \n## Requirements  \n  \n|Routine|Required header|  \n|-------------|---------------------|  \n|`_strdate`|\\<time.h>|  \n|`_wstrdate`|\\<time.h> or \\<wchar.h>|  \n  \n For additional compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md) in the Introduction.  \n  \n## Example  \n  \n```  \n// strdate.c  \n// compile with: /W3  \n#include <time.h>  \n#include <stdio.h>  \nint main()  \n{  \n    char tmpbuf[9];  \n  \n    // Set time zone from TZ environment variable. If TZ is not set,  \n    // the operating system is queried to obtain the default value   \n    // for the variable.   \n    //  \n    _tzset();  \n  \n    printf( \"OS date: %s\\n\", _strdate(tmpbuf) ); // C4996  \n    // Note: _strdate is deprecated; consider using _strdate_s instead  \n}  \n```  \n  \n```Output  \nOS date: 04/25/03  \n```  \n  \n## .NET Framework Equivalent  \n [System::DateTime::Parse](https://msdn.microsoft.com/en-us/library/system.datetime.parse.aspx)  \n  \n## See Also  \n [Time Management](../../c-runtime-library/time-management.md)   \n [asctime, _wasctime](../../c-runtime-library/reference/asctime-wasctime.md)   \n [ctime, _ctime32, _ctime64, _wctime, _wctime32, _wctime64](../../c-runtime-library/reference/ctime-ctime32-ctime64-wctime-wctime32-wctime64.md)   \n [gmtime, _gmtime32, _gmtime64](../../c-runtime-library/reference/gmtime-gmtime32-gmtime64.md)   \n [localtime, _localtime32, _localtime64](../../c-runtime-library/reference/localtime-localtime32-localtime64.md)   \n [mktime, _mktime32, _mktime64](../../c-runtime-library/reference/mktime-mktime32-mktime64.md)   \n [time, _time32, _time64](../../c-runtime-library/reference/time-time32-time64.md)   \n [_tzset](../../c-runtime-library/reference/tzset.md)"}