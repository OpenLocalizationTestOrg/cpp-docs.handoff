{"nodes":[{"pos":[12,51],"content":"CTokenPrivileges Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"CTokenPrivileges Class | Microsoft Docs","pos":[0,39]}]},{"pos":[677,699],"content":"CTokenPrivileges Class","linkify":"CTokenPrivileges Class","nodes":[{"content":"CTokenPrivileges Class","pos":[0,22]}]},{"pos":[700,763],"content":"This class is a wrapper for the <bpt id=\"p1\">**</bpt>TOKEN_PRIVILEGES<ept id=\"p1\">**</ept> structure.","source":"This class is a wrapper for the **TOKEN_PRIVILEGES** structure."},{"pos":[771,881],"content":"[!IMPORTANT]\n This class and its members cannot be used in applications that execute in the Windows Runtime.","leadings":["","> "],"nodes":[{"content":"This class and its members cannot be used in applications that execute in the Windows Runtime.","pos":[14,108]}]},{"pos":[890,896],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[941,948],"content":"Members","linkify":"Members","nodes":[{"content":"Members","pos":[0,7]}]},{"pos":[958,977],"content":"Public Constructors","linkify":"Public Constructors","nodes":[{"content":"Public Constructors","pos":[0,19]}]},{"content":"Name","pos":[984,988]},{"content":"Description","pos":[989,1000]},{"pos":[1038,1111],"content":"<bpt id=\"p1\">[</bpt>CTokenPrivileges::CTokenPrivileges<ept id=\"p1\">](#ctokenprivileges__ctokenprivileges)</ept>","source":"[CTokenPrivileges::CTokenPrivileges](#ctokenprivileges__ctokenprivileges)"},{"content":"The constructor.","pos":[1112,1128]},{"pos":[1133,1212],"content":"<bpt id=\"p1\">[</bpt>CTokenPrivileges::~CTokenPrivileges<ept id=\"p1\">](#ctokenprivileges___dtorctokenprivileges)</ept>","source":"[CTokenPrivileges::~CTokenPrivileges](#ctokenprivileges___dtorctokenprivileges)"},{"content":"The destructor.","pos":[1213,1228]},{"pos":[1239,1253],"content":"Public Methods","linkify":"Public Methods","nodes":[{"content":"Public Methods","pos":[0,14]}]},{"content":"Name","pos":[1260,1264]},{"content":"Description","pos":[1265,1276]},{"pos":[1314,1361],"content":"<bpt id=\"p1\">[</bpt>CTokenPrivileges::Add<ept id=\"p1\">](#ctokenprivileges__add)</ept>","source":"[CTokenPrivileges::Add](#ctokenprivileges__add)"},{"pos":[1362,1423],"content":"Adds one or more privileges to the <ph id=\"ph1\">`CTokenPrivileges`</ph> object.","source":"Adds one or more privileges to the `CTokenPrivileges` object."},{"pos":[1428,1481],"content":"<bpt id=\"p1\">[</bpt>CTokenPrivileges::Delete<ept id=\"p1\">](#ctokenprivileges__delete)</ept>","source":"[CTokenPrivileges::Delete](#ctokenprivileges__delete)"},{"pos":[1482,1537],"content":"Deletes a privilege from the <ph id=\"ph1\">`CTokenPrivileges`</ph> object.","source":"Deletes a privilege from the `CTokenPrivileges` object."},{"pos":[1542,1601],"content":"<bpt id=\"p1\">[</bpt>CTokenPrivileges::DeleteAll<ept id=\"p1\">](#ctokenprivileges__deleteall)</ept>","source":"[CTokenPrivileges::DeleteAll](#ctokenprivileges__deleteall)"},{"pos":[1602,1660],"content":"Deletes all privileges from the <ph id=\"ph1\">`CTokenPrivileges`</ph> object.","source":"Deletes all privileges from the `CTokenPrivileges` object."},{"pos":[1665,1722],"content":"<bpt id=\"p1\">[</bpt>CTokenPrivileges::GetCount<ept id=\"p1\">](#ctokenprivileges__getcount)</ept>","source":"[CTokenPrivileges::GetCount](#ctokenprivileges__getcount)"},{"pos":[1723,1796],"content":"Returns the number of privilege entries in the <ph id=\"ph1\">`CTokenPrivileges`</ph> object.","source":"Returns the number of privilege entries in the `CTokenPrivileges` object."},{"pos":[1801,1872],"content":"<bpt id=\"p1\">[</bpt>CTokenPrivileges::GetDisplayNames<ept id=\"p1\">](#ctokenprivileges__getdisplaynames)</ept>","source":"[CTokenPrivileges::GetDisplayNames](#ctokenprivileges__getdisplaynames)"},{"pos":[1873,1959],"content":"Retrieves display names for the privileges contained in the <ph id=\"ph1\">`CTokenPrivileges`</ph> object.","source":"Retrieves display names for the privileges contained in the `CTokenPrivileges` object."},{"pos":[1964,2023],"content":"<bpt id=\"p1\">[</bpt>CTokenPrivileges::GetLength<ept id=\"p1\">](#ctokenprivileges__getlength)</ept>","source":"[CTokenPrivileges::GetLength](#ctokenprivileges__getlength)"},{"pos":[2024,2154],"content":"Returns the buffer size in bytes required to hold the <bpt id=\"p1\">**</bpt>TOKEN_PRIVILEGES<ept id=\"p1\">**</ept> structure represented by the <ph id=\"ph1\">`CTokenPrivileges`</ph> object.","source":"Returns the buffer size in bytes required to hold the **TOKEN_PRIVILEGES** structure represented by the `CTokenPrivileges` object."},{"pos":[2159,2242],"content":"<bpt id=\"p1\">[</bpt>CTokenPrivileges::GetLuidsAndAttributes<ept id=\"p1\">](#ctokenprivileges__getluidsandattributes)</ept>","source":"[CTokenPrivileges::GetLuidsAndAttributes](#ctokenprivileges__getluidsandattributes)"},{"pos":[2243,2347],"content":"Retrieves the locally unique identifiers (LUIDs) and attribute flags from the <ph id=\"ph1\">`CTokenPrivileges`</ph> object.","source":"Retrieves the locally unique identifiers (LUIDs) and attribute flags from the `CTokenPrivileges` object."},{"pos":[2352,2435],"content":"<bpt id=\"p1\">[</bpt>CTokenPrivileges::GetNamesAndAttributes<ept id=\"p1\">](#ctokenprivileges__getnamesandattributes)</ept>","source":"[CTokenPrivileges::GetNamesAndAttributes](#ctokenprivileges__getnamesandattributes)"},{"pos":[2436,2521],"content":"Retrieves the privilege names and attribute flags from the <ph id=\"ph1\">`CTokenPrivileges`</ph> object.","source":"Retrieves the privilege names and attribute flags from the `CTokenPrivileges` object."},{"pos":[2526,2607],"content":"<bpt id=\"p1\">[</bpt>CTokenPrivileges::GetPTOKEN_PRIVILEGES<ept id=\"p1\">](#ctokenprivileges__getptoken_privileges)</ept>","source":"[CTokenPrivileges::GetPTOKEN_PRIVILEGES](#ctokenprivileges__getptoken_privileges)"},{"pos":[2608,2664],"content":"Returns a pointer to the <bpt id=\"p1\">**</bpt>TOKEN_PRIVILEGES<ept id=\"p1\">**</ept> structure.","source":"Returns a pointer to the **TOKEN_PRIVILEGES** structure."},{"pos":[2669,2740],"content":"<bpt id=\"p1\">[</bpt>CTokenPrivileges::LookupPrivilege<ept id=\"p1\">](#ctokenprivileges__lookupprivilege)</ept>","source":"[CTokenPrivileges::LookupPrivilege](#ctokenprivileges__lookupprivilege)"},{"content":"Retrieves the attribute associated with a given privilege name.","pos":[2741,2804]},{"pos":[2815,2831],"content":"Public Operators","linkify":"Public Operators","nodes":[{"content":"Public Operators","pos":[0,16]}]},{"content":"Name","pos":[2838,2842]},{"content":"Description","pos":[2843,2854]},{"pos":[2892,3003],"content":"<bpt id=\"p1\">[</bpt>CTokenPrivileges::operator const TOKEN_PRIVILEGES *<ept id=\"p1\">](#ctokenprivileges__operator_const_token_privileges__star)</ept>","source":"[CTokenPrivileges::operator const TOKEN_PRIVILEGES *](#ctokenprivileges__operator_const_token_privileges__star)"},{"pos":[3004,3069],"content":"Casts a value to a pointer to the <bpt id=\"p1\">**</bpt>TOKEN_PRIVILEGES<ept id=\"p1\">**</ept> structure.","source":"Casts a value to a pointer to the **TOKEN_PRIVILEGES** structure."},{"pos":[3074,3136],"content":"<bpt id=\"p1\">[</bpt>CTokenPrivileges::operator =<ept id=\"p1\">](#ctokenprivileges__operator_eq)</ept>","source":"[CTokenPrivileges::operator =](#ctokenprivileges__operator_eq)"},{"content":"Assignment operator.","pos":[3137,3157]},{"pos":[3167,3174],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[3178,3406],"content":"An <bpt id=\"p1\">[</bpt>access token<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/aa374909)</ept> is an object that describes the security context of a process or thread and is allocated to each user logged onto a Windows NT or Windows 2000 system.","source":"An [access token](http://msdn.microsoft.com/library/windows/desktop/aa374909) is an object that describes the security context of a process or thread and is allocated to each user logged onto a Windows NT or Windows 2000 system."},{"content":"The access token is used to describe the various security privileges granted to each user.","pos":[3413,3503]},{"content":"A privilege consists of a 64-bit number called a locally unique identifier ( <bpt id=\"p1\">[</bpt>LUID<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/aa379261)</ept>) and a descriptor string.","pos":[3504,3673],"source":" A privilege consists of a 64-bit number called a locally unique identifier ( [LUID](http://msdn.microsoft.com/library/windows/desktop/aa379261)) and a descriptor string."},{"content":"The <ph id=\"ph1\">`CTokenPrivileges`</ph> class is a wrapper for the <bpt id=\"p1\">[</bpt>TOKEN_PRIVILEGES<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/aa379630)</ept> structure and contains 0 or more privileges.","pos":[3680,3853],"source":"The `CTokenPrivileges` class is a wrapper for the [TOKEN_PRIVILEGES](http://msdn.microsoft.com/library/windows/desktop/aa379630) structure and contains 0 or more privileges."},{"content":"Privileges can be added, deleted, or queried using the supplied class methods.","pos":[3854,3932]},{"pos":[3939,4139],"content":"For an introduction to the access control model in Windows, see <bpt id=\"p1\">[</bpt>Access Control<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/aa374860)</ept> in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"For an introduction to the access control model in Windows, see [Access Control](http://msdn.microsoft.com/library/windows/desktop/aa374860) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"pos":[4148,4160],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[4164,4189],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> atlsecurity.h","source":"**Header:** atlsecurity.h"},{"pos":[4199,4258],"content":"<bpt id=\"p1\">&lt;a name=\"ctokenprivileges__add\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CTokenPrivileges::Add","linkify":"<a name=\"ctokenprivileges__add\"></a>  CTokenPrivileges::Add","source":"<a name=\"ctokenprivileges__add\"></a>  CTokenPrivileges::Add"},{"pos":[4262,4336],"content":"Adds one or more privileges to the <ph id=\"ph1\">`CTokenPrivileges`</ph> access token object.","source":"Adds one or more privileges to the `CTokenPrivileges` access token object."},{"pos":[4480,4490],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Pointer to a null-terminated string that specifies the name of the privilege, as defined in the WINNT.H header file.","pos":[4512,4628]},{"content":"If true, the privilege is enabled.","pos":[4648,4682]},{"content":"If false, the privilege is disabled.","pos":[4683,4719]},{"content":"Reference to a <bpt id=\"p1\">[</bpt>TOKEN_PRIVILEGES<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/aa379630)</ept> structure.","pos":[4743,4847],"source":" Reference to a [TOKEN_PRIVILEGES](http://msdn.microsoft.com/library/windows/desktop/aa379630) structure."},{"content":"The privileges and attributes are copied from this structure and added to the <ph id=\"ph1\">`CTokenPrivileges`</ph> object.","pos":[4848,4952],"source":" The privileges and attributes are copied from this structure and added to the `CTokenPrivileges` object."},{"pos":[4962,4974],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The first form of this method returns true if the privileges are successfully added, false otherwise.","pos":[4978,5079]},{"pos":[5089,5174],"content":"<bpt id=\"p1\">&lt;a name=\"ctokenprivileges__ctokenprivileges\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CTokenPrivileges::CTokenPrivileges","linkify":"<a name=\"ctokenprivileges__ctokenprivileges\"></a>  CTokenPrivileges::CTokenPrivileges","source":"<a name=\"ctokenprivileges__ctokenprivileges\"></a>  CTokenPrivileges::CTokenPrivileges"},{"content":"The constructor.","pos":[5178,5194]},{"pos":[5374,5384],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"The <ph id=\"ph1\">`CTokenPrivileges`</ph> object to assign to the new object.","pos":[5397,5455],"source":" The `CTokenPrivileges` object to assign to the new object."},{"content":"The <bpt id=\"p1\">[</bpt>TOKEN_PRIVILEGES<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/aa379630)</ept> structure to assign to the new <ph id=\"ph1\">`CTokenPrivileges`</ph> object.","pos":[5479,5619],"source":" The [TOKEN_PRIVILEGES](http://msdn.microsoft.com/library/windows/desktop/aa379630) structure to assign to the new `CTokenPrivileges` object."},{"pos":[5629,5636],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[5640,5785],"content":"The <ph id=\"ph1\">`CTokenPrivileges`</ph> object can optionally be created using a <bpt id=\"p1\">**</bpt>TOKEN_PRIVILEGES<ept id=\"p1\">**</ept> structure or a previously defined <ph id=\"ph2\">`CTokenPrivileges`</ph> object.","source":"The `CTokenPrivileges` object can optionally be created using a **TOKEN_PRIVILEGES** structure or a previously defined `CTokenPrivileges` object."},{"pos":[5795,5886],"content":"<bpt id=\"p1\">&lt;a name=\"ctokenprivileges___dtorctokenprivileges\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CTokenPrivileges::~CTokenPrivileges","linkify":"<a name=\"ctokenprivileges___dtorctokenprivileges\"></a>  CTokenPrivileges::~CTokenPrivileges","source":"<a name=\"ctokenprivileges___dtorctokenprivileges\"></a>  CTokenPrivileges::~CTokenPrivileges"},{"content":"The destructor.","pos":[5890,5905]},{"pos":[5965,5972],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The destructor frees all allocated resources.","pos":[5976,6021]},{"pos":[6031,6096],"content":"<bpt id=\"p1\">&lt;a name=\"ctokenprivileges__delete\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CTokenPrivileges::Delete","linkify":"<a name=\"ctokenprivileges__delete\"></a>  CTokenPrivileges::Delete","source":"<a name=\"ctokenprivileges__delete\"></a>  CTokenPrivileges::Delete"},{"pos":[6100,6168],"content":"Deletes a privilege from the <ph id=\"ph1\">`CTokenPrivileges`</ph> access token object.","source":"Deletes a privilege from the `CTokenPrivileges` access token object."},{"pos":[6234,6244],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Pointer to a null-terminated string that specifies the name of the privilege, as defined in the WINNT.H header file.","pos":[6266,6382]},{"content":"For example, this parameter could specify the constant SE_SECURITY_NAME, or its corresponding string, \"SeSecurityPrivilege.\"","pos":[6383,6507]},{"pos":[6517,6529],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Returns true if the privilege was successfully deleted, false otherwise.","pos":[6533,6605]},{"pos":[6615,6622],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This method is useful as a tool for creating restricted tokens under Windows 2000.","pos":[6626,6708]},{"pos":[6718,6789],"content":"<bpt id=\"p1\">&lt;a name=\"ctokenprivileges__deleteall\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CTokenPrivileges::DeleteAll","linkify":"<a name=\"ctokenprivileges__deleteall\"></a>  CTokenPrivileges::DeleteAll","source":"<a name=\"ctokenprivileges__deleteall\"></a>  CTokenPrivileges::DeleteAll"},{"pos":[6793,6864],"content":"Deletes all privileges from the <ph id=\"ph1\">`CTokenPrivileges`</ph> access token object.","source":"Deletes all privileges from the `CTokenPrivileges` access token object."},{"pos":[6913,6920],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[6924,7003],"content":"Deletes all privileges contained in the <ph id=\"ph1\">`CTokenPrivileges`</ph> access token object.","source":"Deletes all privileges contained in the `CTokenPrivileges` access token object."},{"pos":[7013,7096],"content":"<bpt id=\"p1\">&lt;a name=\"ctokenprivileges__getdisplaynames\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CTokenPrivileges::GetDisplayNames","linkify":"<a name=\"ctokenprivileges__getdisplaynames\"></a>  CTokenPrivileges::GetDisplayNames","source":"<a name=\"ctokenprivileges__getdisplaynames\"></a>  CTokenPrivileges::GetDisplayNames"},{"pos":[7100,7199],"content":"Retrieves display names for the privileges contained in the <ph id=\"ph1\">`CTokenPrivileges`</ph> access token object.","source":"Retrieves display names for the privileges contained in the `CTokenPrivileges` access token object."},{"pos":[7284,7294],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"A pointer to an array of <ph id=\"ph1\">`CString`</ph> objects.","pos":[7317,7360],"source":" A pointer to an array of `CString` objects."},{"content":"<bpt id=\"p1\">**</bpt>CNames<ept id=\"p1\">**</ept> is defined as a typedef: <bpt id=\"p2\">**</bpt>CTokenPrivileges::CAtlArray<ph id=\"ph1\">\\&lt;</ph>CString&gt;<ept id=\"p2\">**</ept>.","pos":[7361,7439],"source":"**CNames** is defined as a typedef: **CTokenPrivileges::CAtlArray\\<CString>**."},{"pos":[7449,7456],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The parameter <ph id=\"ph1\">`pDisplayNames`</ph> is a pointer to an array of <ph id=\"ph2\">`CString`</ph> objects which will receive the display names corresponding to the privileges contained in the <ph id=\"ph3\">`CTokenPrivileges`</ph> object.","pos":[7460,7648],"source":"The parameter `pDisplayNames` is a pointer to an array of `CString` objects which will receive the display names corresponding to the privileges contained in the `CTokenPrivileges` object."},{"content":"This method retrieves display names only for the privileges specified in the Defined Privileges section of WINNT.H.","pos":[7649,7764]},{"content":"This method retrieves a displayable name: for example, if the attribute name is SE_REMOTE_SHUTDOWN_NAME, the displayable name is \"Force shutdown from a remote system.\"","pos":[7771,7938]},{"content":"To obtain the system name, use <bpt id=\"p1\">[</bpt>CTokenPrivileges::GetNamesAndAttributes<ept id=\"p1\">](#ctokenprivileges__getnamesandattributes)</ept>.","pos":[7939,8054],"source":" To obtain the system name, use [CTokenPrivileges::GetNamesAndAttributes](#ctokenprivileges__getnamesandattributes)."},{"pos":[8064,8133],"content":"<bpt id=\"p1\">&lt;a name=\"ctokenprivileges__getcount\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CTokenPrivileges::GetCount","linkify":"<a name=\"ctokenprivileges__getcount\"></a>  CTokenPrivileges::GetCount","source":"<a name=\"ctokenprivileges__getcount\"></a>  CTokenPrivileges::GetCount"},{"pos":[8137,8210],"content":"Returns the number of privilege entries in the <ph id=\"ph1\">`CTokenPrivileges`</ph> object.","source":"Returns the number of privilege entries in the `CTokenPrivileges` object."},{"pos":[8264,8276],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[8280,8356],"content":"Returns the number of privileges contained in the <ph id=\"ph1\">`CTokenPrivileges`</ph> object.","source":"Returns the number of privileges contained in the `CTokenPrivileges` object."},{"pos":[8366,8437],"content":"<bpt id=\"p1\">&lt;a name=\"ctokenprivileges__getlength\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CTokenPrivileges::GetLength","linkify":"<a name=\"ctokenprivileges__getlength\"></a>  CTokenPrivileges::GetLength","source":"<a name=\"ctokenprivileges__getlength\"></a>  CTokenPrivileges::GetLength"},{"pos":[8441,8493],"content":"Returns the length of the <ph id=\"ph1\">`CTokenPrivileges`</ph> object.","source":"Returns the length of the `CTokenPrivileges` object."},{"pos":[8548,8560],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[8564,8739],"content":"Returns the number of bytes required to hold a <bpt id=\"p1\">**</bpt>TOKEN_PRIVILEGES<ept id=\"p1\">**</ept> structure represented by the <ph id=\"ph1\">`CTokenPrivileges`</ph> object, including all of the privilege entries it contains.","source":"Returns the number of bytes required to hold a **TOKEN_PRIVILEGES** structure represented by the `CTokenPrivileges` object, including all of the privilege entries it contains."},{"pos":[8749,8844],"content":"<bpt id=\"p1\">&lt;a name=\"ctokenprivileges__getluidsandattributes\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CTokenPrivileges::GetLuidsAndAttributes","linkify":"<a name=\"ctokenprivileges__getluidsandattributes\"></a>  CTokenPrivileges::GetLuidsAndAttributes","source":"<a name=\"ctokenprivileges__getluidsandattributes\"></a>  CTokenPrivileges::GetLuidsAndAttributes"},{"pos":[8848,8952],"content":"Retrieves the locally unique identifiers (LUIDs) and attribute flags from the <ph id=\"ph1\">`CTokenPrivileges`</ph> object.","source":"Retrieves the locally unique identifiers (LUIDs) and attribute flags from the `CTokenPrivileges` object."},{"pos":[9087,9097],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Pointer to an array of <bpt id=\"p1\">[</bpt>LUID<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/aa379261)</ept> objects.","pos":[9118,9216],"source":" Pointer to an array of [LUID](http://msdn.microsoft.com/library/windows/desktop/aa379261) objects."},{"content":"<bpt id=\"p1\">**</bpt>CLUIDArray<ept id=\"p1\">**</ept> is a typedef defined as <bpt id=\"p2\">**</bpt>CAtlArray<ph id=\"ph1\">\\&lt;</ph>LUID&gt; CLUIDArray<ept id=\"p2\">**</ept>.","pos":[9217,9288],"source":"**CLUIDArray** is a typedef defined as **CAtlArray\\<LUID> CLUIDArray**."},{"content":"Pointer to an array of DWORD objects.","pos":[9312,9349]},{"content":"If this parameter is omitted or NULL, the attributes are not retrieved.","pos":[9350,9421]},{"content":"<bpt id=\"p1\">**</bpt>CAttributes<ept id=\"p1\">**</ept> is a typedef defined as <bpt id=\"p2\">**</bpt>CAtlArray <ph id=\"ph1\">\\&lt;</ph>DWORD&gt; CAttributes<ept id=\"p2\">**</ept>.","pos":[9422,9497],"source":"**CAttributes** is a typedef defined as **CAtlArray \\<DWORD> CAttributes**."},{"pos":[9507,9514],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[9518,9710],"content":"This method will enumerate all of the privileges contained in the <ph id=\"ph1\">`CTokenPrivileges`</ph> access token object and place the individual LUIDs and (optionally) the attribute flags into array objects.","source":"This method will enumerate all of the privileges contained in the `CTokenPrivileges` access token object and place the individual LUIDs and (optionally) the attribute flags into array objects."},{"pos":[9720,9815],"content":"<bpt id=\"p1\">&lt;a name=\"ctokenprivileges__getnamesandattributes\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CTokenPrivileges::GetNamesAndAttributes","linkify":"<a name=\"ctokenprivileges__getnamesandattributes\"></a>  CTokenPrivileges::GetNamesAndAttributes","source":"<a name=\"ctokenprivileges__getnamesandattributes\"></a>  CTokenPrivileges::GetNamesAndAttributes"},{"pos":[9819,9893],"content":"Retrieves the name and attribute flags from the <ph id=\"ph1\">`CTokenPrivileges`</ph> object.","source":"Retrieves the name and attribute flags from the `CTokenPrivileges` object."},{"pos":[10019,10029],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"<bpt id=\"p1\">*</bpt>pNames<ept id=\"p1\">*</ept>","pos":[10033,10041],"source":"*pNames*"},{"content":"Pointer to an array of <ph id=\"ph1\">`CString`</ph> objects.","pos":[10045,10086],"source":" Pointer to an array of `CString` objects."},{"content":"<bpt id=\"p1\">**</bpt>CNames<ept id=\"p1\">**</ept> is a typedef defined as <bpt id=\"p2\">**</bpt>CAtlArray <ph id=\"ph1\">\\&lt;</ph>CString&gt; CNames<ept id=\"p2\">**</ept>.","pos":[10087,10154],"source":"**CNames** is a typedef defined as **CAtlArray \\<CString> CNames**."},{"content":"Pointer to an array of DWORD objects.","pos":[10178,10215]},{"content":"If this parameter is omitted or NULL, the attributes are not retrieved.","pos":[10216,10287]},{"content":"<bpt id=\"p1\">**</bpt>CAttributes<ept id=\"p1\">**</ept> is a typedef defined as <bpt id=\"p2\">**</bpt>CAtlArray <ph id=\"ph1\">\\&lt;</ph>DWORD&gt; CAttributes<ept id=\"p2\">**</ept>.","pos":[10288,10363],"source":"**CAttributes** is a typedef defined as **CAtlArray \\<DWORD> CAttributes**."},{"pos":[10373,10380],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[10384,10550],"content":"This method will enumerate all of the privileges contained in the <ph id=\"ph1\">`CTokenPrivileges`</ph> object, placing the name and (optionally) the attribute flags into array objects.","source":"This method will enumerate all of the privileges contained in the `CTokenPrivileges` object, placing the name and (optionally) the attribute flags into array objects."},{"content":"This method retrieves the attribute name, rather than the displayable name: for example, if the attribute name is SE_REMOTE_SHUTDOWN_NAME, the system name is \"SeRemoteShutdownPrivilege.\"","pos":[10557,10743]},{"content":"To obtain the displayable name, use the method <bpt id=\"p1\">[</bpt>CTokenPrivileges::GetDisplayNames<ept id=\"p1\">](#ctokenprivileges__getdisplaynames)</ept>.","pos":[10744,10863],"source":" To obtain the displayable name, use the method [CTokenPrivileges::GetDisplayNames](#ctokenprivileges__getdisplaynames)."},{"pos":[10873,10966],"content":"<bpt id=\"p1\">&lt;a name=\"ctokenprivileges__getptoken_privileges\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CTokenPrivileges::GetPTOKEN_PRIVILEGES","linkify":"<a name=\"ctokenprivileges__getptoken_privileges\"></a>  CTokenPrivileges::GetPTOKEN_PRIVILEGES","source":"<a name=\"ctokenprivileges__getptoken_privileges\"></a>  CTokenPrivileges::GetPTOKEN_PRIVILEGES"},{"pos":[10970,11026],"content":"Returns a pointer to the <bpt id=\"p1\">**</bpt>TOKEN_PRIVILEGES<ept id=\"p1\">**</ept> structure.","source":"Returns a pointer to the **TOKEN_PRIVILEGES** structure."},{"pos":[11114,11126],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[11130,11244],"content":"Returns a pointer to the <bpt id=\"p1\">[</bpt>TOKEN_PRIVILEGES<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/aa379630)</ept> structure.","source":"Returns a pointer to the [TOKEN_PRIVILEGES](http://msdn.microsoft.com/library/windows/desktop/aa379630) structure."},{"pos":[11254,11337],"content":"<bpt id=\"p1\">&lt;a name=\"ctokenprivileges__lookupprivilege\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CTokenPrivileges::LookupPrivilege","linkify":"<a name=\"ctokenprivileges__lookupprivilege\"></a>  CTokenPrivileges::LookupPrivilege","source":"<a name=\"ctokenprivileges__lookupprivilege\"></a>  CTokenPrivileges::LookupPrivilege"},{"content":"Retrieves the attribute associated with a given privilege name.","pos":[11341,11404]},{"pos":[11521,11531],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Pointer to a null-terminated string that specifies the name of the privilege, as defined in the WINNT.H header file.","pos":[11553,11669]},{"content":"For example, this parameter could specify the constant SE_SECURITY_NAME, or its corresponding string, \"SeSecurityPrivilege.\"","pos":[11670,11794]},{"content":"Pointer to a variable that receives the attributes.","pos":[11820,11871]},{"pos":[11881,11893],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Returns true if the attribute is successfully retrieved, false otherwise.","pos":[11897,11970]},{"pos":[11980,12054],"content":"<bpt id=\"p1\">&lt;a name=\"ctokenprivileges__operator_eq\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CTokenPrivileges::operator =","linkify":"<a name=\"ctokenprivileges__operator_eq\"></a>  CTokenPrivileges::operator =","source":"<a name=\"ctokenprivileges__operator_eq\"></a>  CTokenPrivileges::operator ="},{"content":"Assignment operator.","pos":[12058,12078]},{"pos":[12254,12264],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"The <bpt id=\"p1\">[</bpt>TOKEN_PRIVILEGES<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/aa379630)</ept> structure to assign to the <ph id=\"ph1\">`CTokenPrivileges`</ph> object.","pos":[12285,12421],"source":" The [TOKEN_PRIVILEGES](http://msdn.microsoft.com/library/windows/desktop/aa379630) structure to assign to the `CTokenPrivileges` object."},{"content":"The <ph id=\"ph1\">`CTokenPrivileges`</ph> object to assign to the object.","pos":[12437,12491],"source":" The `CTokenPrivileges` object to assign to the object."},{"pos":[12501,12513],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[12517,12563],"content":"Returns the updated <ph id=\"ph1\">`CTokenPrivileges`</ph> object.","source":"Returns the updated `CTokenPrivileges` object."},{"pos":[12573,12696],"content":"<bpt id=\"p1\">&lt;a name=\"ctokenprivileges__operator_const_token_privileges__star\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CTokenPrivileges::operator const TOKEN_PRIVILEGES *","linkify":"<a name=\"ctokenprivileges__operator_const_token_privileges__star\"></a>  CTokenPrivileges::operator const TOKEN_PRIVILEGES *","source":"<a name=\"ctokenprivileges__operator_const_token_privileges__star\"></a>  CTokenPrivileges::operator const TOKEN_PRIVILEGES *"},{"pos":[12700,12765],"content":"Casts a value to a pointer to the <bpt id=\"p1\">**</bpt>TOKEN_PRIVILEGES<ept id=\"p1\">**</ept> structure.","source":"Casts a value to a pointer to the **TOKEN_PRIVILEGES** structure."},{"content":"```operator const TOKEN_PRIVILEGES *() const throw(...);","pos":[12771,12827]}],"content":"---\ntitle: \"CTokenPrivileges Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"ATL::CTokenPrivileges\"\n  - \"CTokenPrivileges\"\n  - \"ATL.CTokenPrivileges\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"CTokenPrivileges class\"\nms.assetid: 89590105-f001-4014-870d-142926091231\ncaps.latest.revision: 23\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# CTokenPrivileges Class\nThis class is a wrapper for the **TOKEN_PRIVILEGES** structure.  \n  \n> [!IMPORTANT]\n>  This class and its members cannot be used in applications that execute in the Windows Runtime.  \n  \n## Syntax  \n  \n```\nclass CTokenPrivileges\n```  \n  \n## Members  \n  \n### Public Constructors  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CTokenPrivileges::CTokenPrivileges](#ctokenprivileges__ctokenprivileges)|The constructor.|  \n|[CTokenPrivileges::~CTokenPrivileges](#ctokenprivileges___dtorctokenprivileges)|The destructor.|  \n  \n### Public Methods  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CTokenPrivileges::Add](#ctokenprivileges__add)|Adds one or more privileges to the `CTokenPrivileges` object.|  \n|[CTokenPrivileges::Delete](#ctokenprivileges__delete)|Deletes a privilege from the `CTokenPrivileges` object.|  \n|[CTokenPrivileges::DeleteAll](#ctokenprivileges__deleteall)|Deletes all privileges from the `CTokenPrivileges` object.|  \n|[CTokenPrivileges::GetCount](#ctokenprivileges__getcount)|Returns the number of privilege entries in the `CTokenPrivileges` object.|  \n|[CTokenPrivileges::GetDisplayNames](#ctokenprivileges__getdisplaynames)|Retrieves display names for the privileges contained in the `CTokenPrivileges` object.|  \n|[CTokenPrivileges::GetLength](#ctokenprivileges__getlength)|Returns the buffer size in bytes required to hold the **TOKEN_PRIVILEGES** structure represented by the `CTokenPrivileges` object.|  \n|[CTokenPrivileges::GetLuidsAndAttributes](#ctokenprivileges__getluidsandattributes)|Retrieves the locally unique identifiers (LUIDs) and attribute flags from the `CTokenPrivileges` object.|  \n|[CTokenPrivileges::GetNamesAndAttributes](#ctokenprivileges__getnamesandattributes)|Retrieves the privilege names and attribute flags from the `CTokenPrivileges` object.|  \n|[CTokenPrivileges::GetPTOKEN_PRIVILEGES](#ctokenprivileges__getptoken_privileges)|Returns a pointer to the **TOKEN_PRIVILEGES** structure.|  \n|[CTokenPrivileges::LookupPrivilege](#ctokenprivileges__lookupprivilege)|Retrieves the attribute associated with a given privilege name.|  \n  \n### Public Operators  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CTokenPrivileges::operator const TOKEN_PRIVILEGES *](#ctokenprivileges__operator_const_token_privileges__star)|Casts a value to a pointer to the **TOKEN_PRIVILEGES** structure.|  \n|[CTokenPrivileges::operator =](#ctokenprivileges__operator_eq)|Assignment operator.|  \n  \n## Remarks  \n An [access token](http://msdn.microsoft.com/library/windows/desktop/aa374909) is an object that describes the security context of a process or thread and is allocated to each user logged onto a Windows NT or Windows 2000 system.  \n  \n The access token is used to describe the various security privileges granted to each user. A privilege consists of a 64-bit number called a locally unique identifier ( [LUID](http://msdn.microsoft.com/library/windows/desktop/aa379261)) and a descriptor string.  \n  \n The `CTokenPrivileges` class is a wrapper for the [TOKEN_PRIVILEGES](http://msdn.microsoft.com/library/windows/desktop/aa379630) structure and contains 0 or more privileges. Privileges can be added, deleted, or queried using the supplied class methods.  \n  \n For an introduction to the access control model in Windows, see [Access Control](http://msdn.microsoft.com/library/windows/desktop/aa374860) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n## Requirements  \n **Header:** atlsecurity.h  \n  \n##  <a name=\"ctokenprivileges__add\"></a>  CTokenPrivileges::Add  \n Adds one or more privileges to the `CTokenPrivileges` access token object.  \n  \n```\nbool Add(LPCTSTR pszPrivilege,  bool bEnable) throw(...);\n\n    void Add(const TOKEN_PRIVILEGES& rPrivileges) throw(...);\n```  \n  \n### Parameters  \n `pszPrivilege`  \n Pointer to a null-terminated string that specifies the name of the privilege, as defined in the WINNT.H header file.  \n  \n `bEnable`  \n If true, the privilege is enabled. If false, the privilege is disabled.  \n  \n `rPrivileges`  \n Reference to a [TOKEN_PRIVILEGES](http://msdn.microsoft.com/library/windows/desktop/aa379630) structure. The privileges and attributes are copied from this structure and added to the `CTokenPrivileges` object.  \n  \n### Return Value  \n The first form of this method returns true if the privileges are successfully added, false otherwise.  \n  \n##  <a name=\"ctokenprivileges__ctokenprivileges\"></a>  CTokenPrivileges::CTokenPrivileges  \n The constructor.  \n  \n```\nCTokenPrivileges() throw();\nCTokenPrivileges(const CTokenPrivileges& rhs) throw(...);\n\n    CTokenPrivileges(const TOKEN_PRIVILEGES& rPrivileges) throw(...);\n```  \n  \n### Parameters  \n `rhs`  \n The `CTokenPrivileges` object to assign to the new object.  \n  \n `rPrivileges`  \n The [TOKEN_PRIVILEGES](http://msdn.microsoft.com/library/windows/desktop/aa379630) structure to assign to the new `CTokenPrivileges` object.  \n  \n### Remarks  \n The `CTokenPrivileges` object can optionally be created using a **TOKEN_PRIVILEGES** structure or a previously defined `CTokenPrivileges` object.  \n  \n##  <a name=\"ctokenprivileges___dtorctokenprivileges\"></a>  CTokenPrivileges::~CTokenPrivileges  \n The destructor.  \n  \n```\nvirtual ~CTokenPrivileges() throw();\n```  \n  \n### Remarks  \n The destructor frees all allocated resources.  \n  \n##  <a name=\"ctokenprivileges__delete\"></a>  CTokenPrivileges::Delete  \n Deletes a privilege from the `CTokenPrivileges` access token object.  \n  \n```\nbool Delete(LPCTSTR pszPrivilege) throw();\n```  \n  \n### Parameters  \n `pszPrivilege`  \n Pointer to a null-terminated string that specifies the name of the privilege, as defined in the WINNT.H header file. For example, this parameter could specify the constant SE_SECURITY_NAME, or its corresponding string, \"SeSecurityPrivilege.\"  \n  \n### Return Value  \n Returns true if the privilege was successfully deleted, false otherwise.  \n  \n### Remarks  \n This method is useful as a tool for creating restricted tokens under Windows 2000.  \n  \n##  <a name=\"ctokenprivileges__deleteall\"></a>  CTokenPrivileges::DeleteAll  \n Deletes all privileges from the `CTokenPrivileges` access token object.  \n  \n```\nvoid DeleteAll() throw();\n```  \n  \n### Remarks  \n Deletes all privileges contained in the `CTokenPrivileges` access token object.  \n  \n##  <a name=\"ctokenprivileges__getdisplaynames\"></a>  CTokenPrivileges::GetDisplayNames  \n Retrieves display names for the privileges contained in the `CTokenPrivileges` access token object.  \n  \n```\nvoid GetDisplayNames(CNames* pDisplayNames) const throw(...);\n```  \n  \n### Parameters  \n `pDisplayNames`  \n A pointer to an array of `CString` objects. **CNames** is defined as a typedef: **CTokenPrivileges::CAtlArray\\<CString>**.  \n  \n### Remarks  \n The parameter `pDisplayNames` is a pointer to an array of `CString` objects which will receive the display names corresponding to the privileges contained in the `CTokenPrivileges` object. This method retrieves display names only for the privileges specified in the Defined Privileges section of WINNT.H.  \n  \n This method retrieves a displayable name: for example, if the attribute name is SE_REMOTE_SHUTDOWN_NAME, the displayable name is \"Force shutdown from a remote system.\" To obtain the system name, use [CTokenPrivileges::GetNamesAndAttributes](#ctokenprivileges__getnamesandattributes).  \n  \n##  <a name=\"ctokenprivileges__getcount\"></a>  CTokenPrivileges::GetCount  \n Returns the number of privilege entries in the `CTokenPrivileges` object.  \n  \n```\nUINT GetCount() const throw();\n```  \n  \n### Return Value  \n Returns the number of privileges contained in the `CTokenPrivileges` object.  \n  \n##  <a name=\"ctokenprivileges__getlength\"></a>  CTokenPrivileges::GetLength  \n Returns the length of the `CTokenPrivileges` object.  \n  \n```\nUINT GetLength() const throw();\n```  \n  \n### Return Value  \n Returns the number of bytes required to hold a **TOKEN_PRIVILEGES** structure represented by the `CTokenPrivileges` object, including all of the privilege entries it contains.  \n  \n##  <a name=\"ctokenprivileges__getluidsandattributes\"></a>  CTokenPrivileges::GetLuidsAndAttributes  \n Retrieves the locally unique identifiers (LUIDs) and attribute flags from the `CTokenPrivileges` object.  \n  \n```\nvoid GetLuidsAndAttributes(\n    CLUIDArray* pPrivileges,\n    CAttributes* pAttributes = NULL) const throw(...);\n```  \n  \n### Parameters  \n `pPrivileges`  \n Pointer to an array of [LUID](http://msdn.microsoft.com/library/windows/desktop/aa379261) objects. **CLUIDArray** is a typedef defined as **CAtlArray\\<LUID> CLUIDArray**.  \n  \n `pAttributes`  \n Pointer to an array of DWORD objects. If this parameter is omitted or NULL, the attributes are not retrieved. **CAttributes** is a typedef defined as **CAtlArray \\<DWORD> CAttributes**.  \n  \n### Remarks  \n This method will enumerate all of the privileges contained in the `CTokenPrivileges` access token object and place the individual LUIDs and (optionally) the attribute flags into array objects.  \n  \n##  <a name=\"ctokenprivileges__getnamesandattributes\"></a>  CTokenPrivileges::GetNamesAndAttributes  \n Retrieves the name and attribute flags from the `CTokenPrivileges` object.  \n  \n```\nvoid GetNamesAndAttributes(\n    CNames* pNames,\n    CAttributes* pAttributes = NULL) const throw(...);\n```  \n  \n### Parameters  \n *pNames*  \n Pointer to an array of `CString` objects. **CNames** is a typedef defined as **CAtlArray \\<CString> CNames**.  \n  \n `pAttributes`  \n Pointer to an array of DWORD objects. If this parameter is omitted or NULL, the attributes are not retrieved. **CAttributes** is a typedef defined as **CAtlArray \\<DWORD> CAttributes**.  \n  \n### Remarks  \n This method will enumerate all of the privileges contained in the `CTokenPrivileges` object, placing the name and (optionally) the attribute flags into array objects.  \n  \n This method retrieves the attribute name, rather than the displayable name: for example, if the attribute name is SE_REMOTE_SHUTDOWN_NAME, the system name is \"SeRemoteShutdownPrivilege.\" To obtain the displayable name, use the method [CTokenPrivileges::GetDisplayNames](#ctokenprivileges__getdisplaynames).  \n  \n##  <a name=\"ctokenprivileges__getptoken_privileges\"></a>  CTokenPrivileges::GetPTOKEN_PRIVILEGES  \n Returns a pointer to the **TOKEN_PRIVILEGES** structure.  \n  \n```\nconst TOKEN_PRIVILEGES* GetPTOKEN_PRIVILEGES() const throw(...);\n```  \n  \n### Return Value  \n Returns a pointer to the [TOKEN_PRIVILEGES](http://msdn.microsoft.com/library/windows/desktop/aa379630) structure.  \n  \n##  <a name=\"ctokenprivileges__lookupprivilege\"></a>  CTokenPrivileges::LookupPrivilege  \n Retrieves the attribute associated with a given privilege name.  \n  \n```\nbool LookupPrivilege(LPCTSTR pszPrivilege,\n    DWORD* pdwAttributes = NULL) const throw(...);\n```  \n  \n### Parameters  \n `pszPrivilege`  \n Pointer to a null-terminated string that specifies the name of the privilege, as defined in the WINNT.H header file. For example, this parameter could specify the constant SE_SECURITY_NAME, or its corresponding string, \"SeSecurityPrivilege.\"  \n  \n `pdwAttributes`  \n Pointer to a variable that receives the attributes.  \n  \n### Return Value  \n Returns true if the attribute is successfully retrieved, false otherwise.  \n  \n##  <a name=\"ctokenprivileges__operator_eq\"></a>  CTokenPrivileges::operator =  \n Assignment operator.  \n  \n```\nCTokenPrivileges& operator= (const TOKEN_PRIVILEGES& rPrivileges) throw(...);\n\n    CTokenPrivileges& operator= (const CTokenPrivileges& rhs) throw(...);\n```  \n  \n### Parameters  \n `rPrivileges`  \n The [TOKEN_PRIVILEGES](http://msdn.microsoft.com/library/windows/desktop/aa379630) structure to assign to the `CTokenPrivileges` object.  \n  \n `rhs`  \n The `CTokenPrivileges` object to assign to the object.  \n  \n### Return Value  \n Returns the updated `CTokenPrivileges` object.  \n  \n##  <a name=\"ctokenprivileges__operator_const_token_privileges__star\"></a>  CTokenPrivileges::operator const TOKEN_PRIVILEGES *  \n Casts a value to a pointer to the **TOKEN_PRIVILEGES** structure.  \n  \n```operator const TOKEN_PRIVILEGES *() const throw(...);\n```  \n  \n### Remarks  \n Casts a value to a pointer to the [TOKEN_PRIVILEGES](http://msdn.microsoft.com/library/windows/desktop/aa379630) structure.  \n  \n## See Also  \n [Security Sample](../../visual-cpp-samples.md)   \n [TOKEN_PRIVILEGES](http://msdn.microsoft.com/library/windows/desktop/aa379630)   \n [LUID](http://msdn.microsoft.com/library/windows/desktop/aa379261)   \n [LUID_AND_ATTRIBUTES](http://msdn.microsoft.com/library/windows/desktop/aa379263)   \n [Class Overview](../../atl/atl-class-overview.md)   \n [Security Global Functions](../../atl/reference/security-global-functions.md)\n"}