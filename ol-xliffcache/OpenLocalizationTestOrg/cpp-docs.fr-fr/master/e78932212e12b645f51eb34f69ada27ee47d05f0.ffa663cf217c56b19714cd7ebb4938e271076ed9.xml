{"nodes":[{"pos":[12,64],"content":"hash_multimap::value_comp (STL-CLR) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"hash_multimap::value_comp (STL-CLR) | Microsoft Docs","pos":[0,52]}]},{"content":"hash_multimap::value_comp (STL/CLR)","pos":[656,691]},{"content":"Copies the ordering delegate for two element values.","pos":[692,744]},{"content":"Syntax","pos":[753,759]},{"content":"Remarks","pos":[814,821]},{"content":"The member function returns the ordering delegate used to order the controlled sequence.","pos":[825,913]},{"content":"You use it to compare two element values.","pos":[914,955]},{"content":"Example","pos":[964,971]},{"content":"Requirements","pos":[2026,2038]},{"pos":[2042,2072],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> <ph id=\"ph1\">\\&lt;</ph>cliext/hash_map&gt;","source":"**Header:** \\<cliext/hash_map>"},{"pos":[2079,2100],"content":"<bpt id=\"p1\">**</bpt>Namespace:<ept id=\"p1\">**</ept> cliext","source":"**Namespace:** cliext"},{"content":"See Also","pos":[2109,2117]},{"content":"hash_multimap (STL/CLR)","pos":[2122,2145]},{"content":"hash_multimap::value_compare (STL/CLR)","pos":[2188,2226]},{"content":"hash_multimap::value_type (STL/CLR)","pos":[2283,2318]}],"content":"---\ntitle: \"hash_multimap::value_comp (STL-CLR) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"cliext::hash_multimap::value_comp\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"value_comp member [STL/CLR]\"\nms.assetid: ec6108b8-a529-499b-bc7f-dce41f5b6175\ncaps.latest.revision: 8\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# hash_multimap::value_comp (STL/CLR)\nCopies the ordering delegate for two element values.  \n  \n## Syntax  \n  \n```  \nvalue_compare^ value_comp();  \n```  \n  \n## Remarks  \n The member function returns the ordering delegate used to order the controlled sequence. You use it to compare two element values.  \n  \n## Example  \n  \n```  \n// cliext_hash_multimap_value_comp.cpp   \n// compile with: /clr   \n#include <cliext/hash_map>   \n  \ntypedef cliext::hash_map<wchar_t, int> Myhash_multimap;   \nint main()   \n    {   \n    Myhash_multimap c1;   \n    Myhash_multimap::value_compare^ kcomp = c1.value_comp();   \n  \n    System::Console::WriteLine(\"compare([L'a', 1], [L'a', 1]) = {0}\",   \n        kcomp(Myhash_multimap::make_value(L'a', 1),   \n            Myhash_multimap::make_value(L'a', 1)));   \n    System::Console::WriteLine(\"compare([L'a', 1], [L'b', 2]) = {0}\",   \n        kcomp(Myhash_multimap::make_value(L'a', 1),   \n            Myhash_multimap::make_value(L'b', 2)));   \n    System::Console::WriteLine(\"compare([L'b', 2], [L'a', 1]) = {0}\",   \n        kcomp(Myhash_multimap::make_value(L'b', 2),   \n            Myhash_multimap::make_value(L'a', 1)));   \n    System::Console::WriteLine();   \n    return (0);   \n    }  \n  \n```  \n  \n```Output  \ncompare([L'a', 1], [L'a', 1]) = True  \ncompare([L'a', 1], [L'b', 2]) = True  \ncompare([L'b', 2], [L'a', 1]) = False  \n```  \n  \n## Requirements  \n **Header:** \\<cliext/hash_map>  \n  \n **Namespace:** cliext  \n  \n## See Also  \n [hash_multimap (STL/CLR)](../dotnet/hash-multimap-stl-clr.md)   \n [hash_multimap::value_compare (STL/CLR)](../dotnet/hash-multimap-value-compare-stl-clr.md)   \n [hash_multimap::value_type (STL/CLR)](../dotnet/hash-multimap-value-type-stl-clr.md)"}