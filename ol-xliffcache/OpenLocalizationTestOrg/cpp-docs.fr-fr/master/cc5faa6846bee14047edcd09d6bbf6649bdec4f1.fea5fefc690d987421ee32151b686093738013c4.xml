{"nodes":[{"pos":[12,53],"content":"_mbsnbicmp, _mbsnbicmp_l | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"_mbsnbicmp, _mbsnbicmp_l | Microsoft Docs","pos":[0,41]}]},{"pos":[1345,1369],"content":"_mbsnbicmp, _mbsnbicmp_l","linkify":"_mbsnbicmp, _mbsnbicmp_l","nodes":[{"content":"_mbsnbicmp, _mbsnbicmp_l","pos":[0,24]}]},{"pos":[1370,1442],"content":"Compares <ph id=\"ph1\">`n`</ph> bytes of two multibyte-character strings, and ignores case.","source":"Compares `n` bytes of two multibyte-character strings, and ignores case."},{"pos":[1450,1670],"content":"[!IMPORTANT]\n This API cannot be used in applications that execute in the Windows Runtime. For more information, see [CRT functions not supported with /ZW](http://msdn.microsoft.com/library/windows/apps/jj606124.aspx).","leadings":["","> "],"nodes":[{"content":" This API cannot be used in applications that execute in the Windows Runtime. For more information, see [CRT functions not supported with /ZW](http://msdn.microsoft.com/library/windows/apps/jj606124.aspx).","pos":[13,218],"nodes":[{"content":"This API cannot be used in applications that execute in the Windows Runtime.","pos":[1,77]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>CRT functions not supported with /ZW<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/apps/jj606124.aspx)</ept>.","pos":[78,205],"source":" For more information, see [CRT functions not supported with /ZW](http://msdn.microsoft.com/library/windows/apps/jj606124.aspx)."}]}]},{"pos":[1679,1685],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[1823,1833],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Null-terminated strings to compare.","pos":[1859,1894]},{"content":"Number of bytes to compare.","pos":[1912,1939]},{"pos":[1948,1960],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The return value indicates the relationship between the substrings.","pos":[1964,2031]},{"content":"Return value","pos":[2038,2050]},{"content":"Description","pos":[2051,2062]},{"content":"&lt; 0","pos":[2108,2111],"source":"< 0"},{"pos":[2112,2162],"content":"<ph id=\"ph1\">`string1`</ph> substring less than <ph id=\"ph2\">`string2`</ph> substring.","source":"`string1` substring less than `string2` substring."},{"content":"0","pos":[2167,2168]},{"pos":[2169,2222],"content":"<ph id=\"ph1\">`string1`</ph> substring identical to <ph id=\"ph2\">`string2`</ph> substring.","source":"`string1` substring identical to `string2` substring."},{"content":"&gt; 0","pos":[2227,2230],"source":"> 0"},{"pos":[2231,2284],"content":"<ph id=\"ph1\">`string1`</ph> substring greater than <ph id=\"ph2\">`string2`</ph> substring.","source":"`string1` substring greater than `string2` substring."},{"pos":[2292,2385],"content":"On an error, <ph id=\"ph1\">`_mbsnbcmp`</ph> returns <ph id=\"ph2\">`_NLSCMPERROR`</ph>, which is defined in String.h and Mbstring.h.","source":"On an error, `_mbsnbcmp` returns `_NLSCMPERROR`, which is defined in String.h and Mbstring.h."},{"pos":[2394,2401],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The <ph id=\"ph1\">`_mbsnbicmp`</ph> function performs an ordinal comparison of at most the first <ph id=\"ph2\">`count`</ph> bytes of <ph id=\"ph3\">`string1`</ph> and <ph id=\"ph4\">`string2`</ph>.","pos":[2405,2524],"source":"The `_mbsnbicmp` function performs an ordinal comparison of at most the first `count` bytes of `string1` and `string2`."},{"content":"The comparison is performed by converting each character to lowercase; <ph id=\"ph1\">`_mbsnbcmp`</ph> is a case-sensitive version of <ph id=\"ph2\">`_mbsnbicmp`</ph>.","pos":[2525,2652],"source":" The comparison is performed by converting each character to lowercase; `_mbsnbcmp` is a case-sensitive version of `_mbsnbicmp`."},{"content":"The comparison ends if a terminating null character is reached in either string before <ph id=\"ph1\">`count`</ph> characters are compared.","pos":[2653,2772],"source":" The comparison ends if a terminating null character is reached in either string before `count` characters are compared."},{"content":"If the strings are equal when a terminating null character is reached in either string before <ph id=\"ph1\">`count`</ph> characters are compared, the shorter string is lesser.","pos":[2773,2929],"source":" If the strings are equal when a terminating null character is reached in either string before `count` characters are compared, the shorter string is lesser."},{"pos":[2936,3054],"content":"<ph id=\"ph1\">`_mbsnbicmp`</ph>  is similar to <ph id=\"ph2\">`_mbsnicmp`</ph>, except that it compares strings up to <ph id=\"ph3\">`count`</ph> bytes instead of by characters.","source":"`_mbsnbicmp`  is similar to `_mbsnicmp`, except that it compares strings up to `count` bytes instead of by characters."},{"content":"Two strings containing characters located between 'Z' and 'a' in the ASCII table ('[', '<ph id=\"ph1\">\\\\</ph>', ']', '^', '_', and '<ph id=\"ph2\">\\`</ph>') compare differently, depending on their case.","pos":[3061,3224],"source":"Two strings containing characters located between 'Z' and 'a' in the ASCII table ('[', '\\\\', ']', '^', '_', and '\\`') compare differently, depending on their case."},{"content":"For example, the two strings \"<ph id=\"ph1\">`ABCDE`</ph>\" and \"<ph id=\"ph2\">`ABCD^`</ph>\" compare one way if the comparison is lowercase (\"<ph id=\"ph3\">`abcde`</ph>\" &gt; \"<ph id=\"ph4\">`abcd^`</ph>\") and the other way (\"<ph id=\"ph5\">`ABCDE`</ph>\" &lt; \"<ph id=\"ph6\">`ABCD^`</ph>\") if it is uppercase.","pos":[3225,3410],"source":" For example, the two strings \"`ABCDE`\" and \"`ABCD^`\" compare one way if the comparison is lowercase (\"`abcde`\" > \"`abcd^`\") and the other way (\"`ABCDE`\" < \"`ABCD^`\") if it is uppercase."},{"content":"<ph id=\"ph1\">`_mbsnbicmp`</ph> recognizes multibyte-character sequences according to the <bpt id=\"p1\">[</bpt>multibyte code page<ept id=\"p1\">](../../c-runtime-library/code-pages.md)</ept> currently in use.","pos":[3417,3566],"source":"`_mbsnbicmp` recognizes multibyte-character sequences according to the [multibyte code page](../../c-runtime-library/code-pages.md) currently in use."},{"content":"It is not affected by the current locale setting.","pos":[3567,3616]},{"content":"If either <ph id=\"ph1\">`string1`</ph> or <ph id=\"ph2\">`string2`</ph> is a null pointer, <ph id=\"ph3\">`_mbsnbicmp`</ph> invokes the invalid parameter handler as described in <bpt id=\"p1\">[</bpt>Parameter Validation<ept id=\"p1\">](../../c-runtime-library/parameter-validation.md)</ept>.","pos":[3623,3814],"source":"If either `string1` or `string2` is a null pointer, `_mbsnbicmp` invokes the invalid parameter handler as described in [Parameter Validation](../../c-runtime-library/parameter-validation.md)."},{"content":"If execution is allowed to continue, the function returns <ph id=\"ph1\">`_NLSCMPERROR`</ph> and sets <ph id=\"ph2\">`errno`</ph> to <ph id=\"ph3\">`EINVAL`</ph>.","pos":[3815,3917],"source":" If execution is allowed to continue, the function returns `_NLSCMPERROR` and sets `errno` to `EINVAL`."},{"pos":[3927,3956],"content":"Generic-Text Routine Mappings","linkify":"Generic-Text Routine Mappings","nodes":[{"content":"Generic-Text Routine Mappings","pos":[0,29]}]},{"content":"Tchar.h routine","pos":[3963,3978]},{"content":"_UNICODE and _MBCS not defined","pos":[3979,4009]},{"content":"_MBCS defined","pos":[4010,4023]},{"content":"_UNICODE defined","pos":[4024,4040]},{"pos":[4274,4286],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"content":"Routine","pos":[4293,4300]},{"content":"Required header","pos":[4301,4316]},{"content":"&lt;mbstring.h&gt;","pos":[4374,4386],"source":"<mbstring.h>"},{"pos":[4394,4492],"content":"For more compatibility information, see <bpt id=\"p1\">[</bpt>Compatibility<ept id=\"p1\">](../../c-runtime-library/compatibility.md)</ept>.","source":"For more compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md)."},{"pos":[4501,4508],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[4512,4615],"content":"See the example for <bpt id=\"p1\">[</bpt>_mbsnbcmp, _mbsnbcmp_l<ept id=\"p1\">](../../c-runtime-library/reference/mbsnbcmp-mbsnbcmp-l.md)</ept>.","source":"See the example for [_mbsnbcmp, _mbsnbcmp_l](../../c-runtime-library/reference/mbsnbcmp-mbsnbcmp-l.md)."},{"pos":[4624,4649],"content":".NET Framework Equivalent","linkify":".NET Framework Equivalent","nodes":[{"content":".NET Framework Equivalent","pos":[0,25]}]},{"content":"Not applicable.","pos":[4653,4668]},{"content":"To call the standard C function, use <ph id=\"ph1\">`PInvoke`</ph>.","pos":[4669,4716],"source":" To call the standard C function, use `PInvoke`."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Platform Invoke Examples<ept id=\"p1\">](http://msdn.microsoft.com/Library/15926806-f0b7-487e-93a6-4e9367ec689f)</ept>.","pos":[4717,4842],"source":" For more information, see [Platform Invoke Examples](http://msdn.microsoft.com/Library/15926806-f0b7-487e-93a6-4e9367ec689f)."},{"pos":[4851,4859],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>String Manipulation<ept id=\"p1\">](../../c-runtime-library/string-manipulation-crt.md)</ept><ph id=\"ph1\"> </ph>","pos":[4863,4937],"source":"[String Manipulation](../../c-runtime-library/string-manipulation-crt.md) "},{"content":"<bpt id=\"p1\"> [</bpt>_mbsnbcat, _mbsnbcat_l<ept id=\"p1\">](../../c-runtime-library/reference/mbsnbcat-mbsnbcat-l.md)</ept><ph id=\"ph1\"> </ph>","pos":[4940,5024],"source":" [_mbsnbcat, _mbsnbcat_l](../../c-runtime-library/reference/mbsnbcat-mbsnbcat-l.md) "},{"content":"<bpt id=\"p1\"> [</bpt>_mbsnbcmp, _mbsnbcmp_l<ept id=\"p1\">](../../c-runtime-library/reference/mbsnbcmp-mbsnbcmp-l.md)</ept><ph id=\"ph1\"> </ph>","pos":[5027,5111],"source":" [_mbsnbcmp, _mbsnbcmp_l](../../c-runtime-library/reference/mbsnbcmp-mbsnbcmp-l.md) "},{"content":"<bpt id=\"p1\"> [</bpt>_stricmp, _wcsicmp, _mbsicmp, _stricmp_l, _wcsicmp_l, _mbsicmp_l<ept id=\"p1\">](../../c-runtime-library/reference/stricmp-wcsicmp-mbsicmp-stricmp-l-wcsicmp-l-mbsicmp-l.md)</ept>","pos":[5114,5273],"source":" [_stricmp, _wcsicmp, _mbsicmp, _stricmp_l, _wcsicmp_l, _mbsicmp_l](../../c-runtime-library/reference/stricmp-wcsicmp-mbsicmp-stricmp-l-wcsicmp-l-mbsicmp-l.md)"}],"content":"---\ntitle: \"_mbsnbicmp, _mbsnbicmp_l | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\napiname: \n  - \"_mbsnbicmp_l\"\n  - \"_mbsnbicmp\"\napilocation: \n  - \"msvcrt.dll\"\n  - \"msvcr80.dll\"\n  - \"msvcr90.dll\"\n  - \"msvcr100.dll\"\n  - \"msvcr100_clr0400.dll\"\n  - \"msvcr110.dll\"\n  - \"msvcr110_clr0400.dll\"\n  - \"msvcr120.dll\"\n  - \"msvcr120_clr0400.dll\"\n  - \"ucrtbase.dll\"\n  - \"api-ms-win-crt-multibyte-l1-1-0.dll\"\napitype: \"DLLExport\"\nf1_keywords: \n  - \"_strnicmp\"\n  - \"_wcsnicmp_l\"\n  - \"_mbsnbicmp\"\n  - \"mbsnbicmp\"\n  - \"mbsnbicmp_l\"\n  - \"_tcsnicmp\"\n  - \"_strnicmp_l\"\n  - \"_tcsnicmp_l\"\n  - \"_wcsnicmp\"\n  - \"_mbsnbicmp_l\"\ndev_langs: \n  - \"C++\"\n  - \"C\"\nhelpviewer_keywords: \n  - \"_tcsnicmp_l function\"\n  - \"_strnicmp function\"\n  - \"mbsnbicmp_l function\"\n  - \"_wcsnicmp_l function\"\n  - \"_mbsnbicmp function\"\n  - \"_mbsnbicmp_l function\"\n  - \"_tcsnicmp function\"\n  - \"_strnicmp_l function\"\n  - \"mbsnbicmp function\"\n  - \"_wcsnicmp function\"\nms.assetid: ddb44974-8b0c-42f0-90d0-56c9350bae0c\ncaps.latest.revision: 16\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# _mbsnbicmp, _mbsnbicmp_l\nCompares `n` bytes of two multibyte-character strings, and ignores case.  \n  \n> [!IMPORTANT]\n>  This API cannot be used in applications that execute in the Windows Runtime. For more information, see [CRT functions not supported with /ZW](http://msdn.microsoft.com/library/windows/apps/jj606124.aspx).  \n  \n## Syntax  \n  \n```  \nint _mbsnbicmp(  \n   const unsigned char *string1,  \n   const unsigned char *string2,  \n   size_t count   \n);  \n```  \n  \n#### Parameters  \n `string1, string2`  \n Null-terminated strings to compare.  \n  \n `count`  \n Number of bytes to compare.  \n  \n## Return Value  \n The return value indicates the relationship between the substrings.  \n  \n|Return value|Description|  \n|------------------|-----------------|  \n|< 0|`string1` substring less than `string2` substring.|  \n|0|`string1` substring identical to `string2` substring.|  \n|> 0|`string1` substring greater than `string2` substring.|  \n  \n On an error, `_mbsnbcmp` returns `_NLSCMPERROR`, which is defined in String.h and Mbstring.h.  \n  \n## Remarks  \n The `_mbsnbicmp` function performs an ordinal comparison of at most the first `count` bytes of `string1` and `string2`. The comparison is performed by converting each character to lowercase; `_mbsnbcmp` is a case-sensitive version of `_mbsnbicmp`. The comparison ends if a terminating null character is reached in either string before `count` characters are compared. If the strings are equal when a terminating null character is reached in either string before `count` characters are compared, the shorter string is lesser.  \n  \n `_mbsnbicmp`  is similar to `_mbsnicmp`, except that it compares strings up to `count` bytes instead of by characters.  \n  \n Two strings containing characters located between 'Z' and 'a' in the ASCII table ('[', '\\\\', ']', '^', '_', and '\\`') compare differently, depending on their case. For example, the two strings \"`ABCDE`\" and \"`ABCD^`\" compare one way if the comparison is lowercase (\"`abcde`\" > \"`abcd^`\") and the other way (\"`ABCDE`\" < \"`ABCD^`\") if it is uppercase.  \n  \n `_mbsnbicmp` recognizes multibyte-character sequences according to the [multibyte code page](../../c-runtime-library/code-pages.md) currently in use. It is not affected by the current locale setting.  \n  \n If either `string1` or `string2` is a null pointer, `_mbsnbicmp` invokes the invalid parameter handler as described in [Parameter Validation](../../c-runtime-library/parameter-validation.md). If execution is allowed to continue, the function returns `_NLSCMPERROR` and sets `errno` to `EINVAL`.  \n  \n### Generic-Text Routine Mappings  \n  \n|Tchar.h routine|_UNICODE and _MBCS not defined|_MBCS defined|_UNICODE defined|  \n|---------------------|--------------------------------------|--------------------|-----------------------|  \n|`_tcsnicmp`|`_strnicmp`|`_mbsnbicmp`|`_wcsnicmp`|  \n|`_tcsnicmp_l`|`_strnicmp_l`|`_mbsnbicmp_l`|`_wcsnicmp_l`|  \n  \n## Requirements  \n  \n|Routine|Required header|  \n|-------------|---------------------|  \n|`_mbsnbicmp`|<mbstring.h>|  \n  \n For more compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md).  \n  \n## Example  \n See the example for [_mbsnbcmp, _mbsnbcmp_l](../../c-runtime-library/reference/mbsnbcmp-mbsnbcmp-l.md).  \n  \n## .NET Framework Equivalent  \n Not applicable. To call the standard C function, use `PInvoke`. For more information, see [Platform Invoke Examples](http://msdn.microsoft.com/Library/15926806-f0b7-487e-93a6-4e9367ec689f).  \n  \n## See Also  \n [String Manipulation](../../c-runtime-library/string-manipulation-crt.md)   \n [_mbsnbcat, _mbsnbcat_l](../../c-runtime-library/reference/mbsnbcat-mbsnbcat-l.md)   \n [_mbsnbcmp, _mbsnbcmp_l](../../c-runtime-library/reference/mbsnbcmp-mbsnbcmp-l.md)   \n [_stricmp, _wcsicmp, _mbsicmp, _stricmp_l, _wcsicmp_l, _mbsicmp_l](../../c-runtime-library/reference/stricmp-wcsicmp-mbsicmp-stricmp-l-wcsicmp-l-mbsicmp-l.md)"}