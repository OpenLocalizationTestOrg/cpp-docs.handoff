<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="fr-fr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-04506c2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f45d6bba3af721ff4415c6b3e57cbc8d5e7e9e36</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\c-runtime-library\reference\fclose-fcloseall.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1754860d24ebe6f3988c5e85044b9fb11dfdddb7</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">499cc694f2d01b39b5d756a778928ec49d5d7dd4</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>fclose, _fcloseall | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>fclose, _fcloseall</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Closes a stream (<ph id="ph1">`fclose`</ph>) or closes all open streams (<ph id="ph2">`_fcloseall`</ph>).</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Pointer to <ph id="ph1">`FILE`</ph> structure.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>returns 0 if the stream is successfully closed.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>returns the total number of streams closed.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Both functions return <ph id="ph1">`EOF`</ph> to indicate an error.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`fclose`</ph> function closes <ph id="ph2">`stream`</ph>.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`stream`</ph> is <ph id="ph2">`NULL`</ph>, the invalid parameter handler is invoked, as described in <bpt id="p1">[</bpt>Parameter Validation<ept id="p1">](../../c-runtime-library/parameter-validation.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>If execution is allowed to continue, <ph id="ph1">`fclose`</ph> sets <ph id="ph2">`errno`</ph> to <ph id="ph3">`EINVAL`</ph> and returns <ph id="ph4">`EOF`</ph>.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>It is recommended that the <ph id="ph1">`stream`</ph> pointer always be checked prior to calling this function.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>_doserrno, errno, _sys_errlist, and _sys_nerr<ept id="p1">](../../c-runtime-library/errno-doserrno-sys-errlist-and-sys-nerr.md)</ept> for more information on these, and other, error codes.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`_fcloseall`</ph> function closes all open streams except <ph id="ph2">`stdin`</ph>, <ph id="ph3">`stdout`</ph>, <ph id="ph4">`stderr`</ph> (and, in MS-DOS, <ph id="ph5">`_stdaux`</ph> and <ph id="ph6">`_stdprn`</ph>).</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>It also closes and deletes any temporary files created by <ph id="ph1">`tmpfile`</ph>.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>In both functions, all buffers associated with the stream are flushed prior to closing.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>System-allocated buffers are released when the stream is closed.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Buffers assigned by the user with <ph id="ph1">`setbuf`</ph> and <ph id="ph2">`setvbuf`</ph> are not automatically released.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Note:<ept id="p1">**</ept> When these functions are used to close a stream, the underlying file descriptor and OS file handle (or socket) are closed, as well as the stream.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Thus, if the file was originally opened as a file handle or file descriptor and is closed with <ph id="ph1">`fclose`</ph>, do not also call <ph id="ph2">`_close`</ph> to close the file descriptor; do not call the Win32 function <ph id="ph3">`CloseHandle`</ph> to close the file handle.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>and <ph id="ph1">`_fcloseall`</ph> include code to protect against interference from other threads.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>For non-locking version of a <ph id="ph1">`fclose`</ph>, see <ph id="ph2">`_fclose_nolock`</ph>.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Requirements</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Function</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Required header</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>stdio.h&gt;</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>stdio.h&gt;</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>For additional compatibility information, see <bpt id="p1">[</bpt>Compatibility<ept id="p1">](../../c-runtime-library/compatibility.md)</ept> in the Introduction.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>See the example for <bpt id="p1">[</bpt>fopen<ept id="p1">](../../c-runtime-library/reference/fopen-wfopen.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>.NET Framework Equivalent</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>System::IO::BinaryReader::Close</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>System::IO::BinaryWriter::Close</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>System::IO::StringReader::Close</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>System::IO::StringWriter::Close</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>System::IO::Stream::Close</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>System::IO::StreamReader::Close</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>System::IO::StreamWriter::Close</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>System::IO::TextReader::Close</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>System::IO::TextWriter::Close</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Stream I/O</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>_close</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>_fdopen, _wfdopen</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>fflush</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>fopen, _wfopen</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>freopen, _wfreopen</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>