{"nodes":[{"pos":[12,58],"content":"Implementing CComObjectRootEx | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Implementing CComObjectRootEx | Microsoft Docs","pos":[0,46]}]},{"content":"Implementing CComObjectRootEx","pos":[668,697]},{"content":"<bpt id=\"p1\">[</bpt>CComObjectRootEx<ept id=\"p1\">](../atl/reference/ccomobjectrootex-class.md)</ept> is essential; all ATL objects must have one instance of <ph id=\"ph1\">`CComObjectRootEx`</ph> or <bpt id=\"p2\">[</bpt>CComObjectRoot<ept id=\"p2\">](../atl/reference/ccomobjectroot-class.md)</ept> in their inheritance.","pos":[698,919],"source":"[CComObjectRootEx](../atl/reference/ccomobjectrootex-class.md) is essential; all ATL objects must have one instance of `CComObjectRootEx` or [CComObjectRoot](../atl/reference/ccomobjectroot-class.md) in their inheritance."},{"content":"provides the default <ph id=\"ph1\">`QueryInterface`</ph> mechanism based on COM map entries.","pos":[939,1012],"source":" provides the default `QueryInterface` mechanism based on COM map entries."},{"content":"Through its COM map, an object's interfaces are exposed to a client when the client queries for an interface.","pos":[1019,1128]},{"content":"The query is performed through <ph id=\"ph1\">`CComObjectRootEx::InternalQueryInterface`</ph>.","pos":[1129,1203],"source":" The query is performed through `CComObjectRootEx::InternalQueryInterface`."},{"content":"only handles interfaces in the COM map table.","pos":[1229,1274]},{"content":"You can enter interfaces into the COM map table with the <bpt id=\"p1\">[</bpt>COM_INTERFACE_ENTRY<ept id=\"p1\">](http://msdn.microsoft.com/library/c5363b8b-a1a2-471e-ad3a-d472f6c356c5)</ept> macro or one of its variants.","pos":[1281,1461],"source":"You can enter interfaces into the COM map table with the [COM_INTERFACE_ENTRY](http://msdn.microsoft.com/library/c5363b8b-a1a2-471e-ad3a-d472f6c356c5) macro or one of its variants."},{"content":"For example, the following code enters the interfaces <ph id=\"ph1\">`IDispatch`</ph>, <ph id=\"ph2\">`IBeeper`</ph>, and <ph id=\"ph3\">`ISupportErrorInfo`</ph> into the COM map table:","pos":[1462,1587],"source":" For example, the following code enters the interfaces `IDispatch`, `IBeeper`, and `ISupportErrorInfo` into the COM map table:"},{"pos":[1605,1618],"content":"NVC_ATL_COM#1"},{"content":"See Also","pos":[1687,1695]},{"content":"Fundamentals of ATL COM Objects","pos":[1700,1731]},{"content":"COM Map Macros","pos":[1781,1795]}],"content":"---\ntitle: \"Implementing CComObjectRootEx | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"CComObjectRootEx\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"CComObjectRoot class, implementing\"\n  - \"CComObjectRootEx class\"\nms.assetid: 79630c44-f2df-4e9e-b730-400a0ebfbd2b\ncaps.latest.revision: 13\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Implementing CComObjectRootEx\n[CComObjectRootEx](../atl/reference/ccomobjectrootex-class.md) is essential; all ATL objects must have one instance of `CComObjectRootEx` or [CComObjectRoot](../atl/reference/ccomobjectroot-class.md) in their inheritance. `CComObjectRootEx` provides the default `QueryInterface` mechanism based on COM map entries.  \n  \n Through its COM map, an object's interfaces are exposed to a client when the client queries for an interface. The query is performed through `CComObjectRootEx::InternalQueryInterface`. `InternalQueryInterface` only handles interfaces in the COM map table.  \n  \n You can enter interfaces into the COM map table with the [COM_INTERFACE_ENTRY](http://msdn.microsoft.com/library/c5363b8b-a1a2-471e-ad3a-d472f6c356c5) macro or one of its variants. For example, the following code enters the interfaces `IDispatch`, `IBeeper`, and `ISupportErrorInfo` into the COM map table:  \n  \n [!code-cpp[NVC_ATL_COM#1](../atl/codesnippet/cpp/implementing-ccomobjectrootex_1.h)]  \n  \n## See Also  \n [Fundamentals of ATL COM Objects](../atl/fundamentals-of-atl-com-objects.md)   \n [COM Map Macros](../atl/reference/com-map-macros.md)\n\n"}