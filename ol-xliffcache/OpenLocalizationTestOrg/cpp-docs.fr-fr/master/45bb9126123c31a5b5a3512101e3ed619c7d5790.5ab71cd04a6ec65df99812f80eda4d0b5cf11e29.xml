{"nodes":[{"pos":[12,35],"content":"_scalb | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"_scalb | Microsoft Docs","pos":[0,23]}]},{"pos":[964,970],"content":"_scalb","linkify":"_scalb","nodes":[{"content":"_scalb","pos":[0,6]}]},{"content":"Scales argument by a power of 2.","pos":[971,1003]},{"pos":[1012,1018],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[1096,1106],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Double-precision, floating-point value.","pos":[1117,1156]},{"content":"Long integer exponent.","pos":[1172,1194]},{"pos":[1203,1215],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Returns an exponential value if successful.","pos":[1219,1262]},{"content":"On overflow (depending on the sign of <ph id=\"ph1\">`x`</ph>), <ph id=\"ph2\">`_scalb`</ph> returns +/– <ph id=\"ph3\">`HUGE_VAL`</ph>; the <ph id=\"ph4\">`errno`</ph> variable is set to <ph id=\"ph5\">`ERANGE`</ph>.","pos":[1263,1380],"source":" On overflow (depending on the sign of `x`), `_scalb` returns +/– `HUGE_VAL`; the `errno` variable is set to `ERANGE`."},{"pos":[1387,1563],"content":"For more information about this and other return codes, see <bpt id=\"p1\">[</bpt>_doserrno, errno, _sys_errlist, and _sys_nerr<ept id=\"p1\">](../../c-runtime-library/errno-doserrno-sys-errlist-and-sys-nerr.md)</ept>.","source":"For more information about this and other return codes, see [_doserrno, errno, _sys_errlist, and _sys_nerr](../../c-runtime-library/errno-doserrno-sys-errlist-and-sys-nerr.md)."},{"pos":[1572,1579],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[1583,1640],"content":"The <ph id=\"ph1\">`_scalb`</ph> function calculates the value of <ph id=\"ph2\">`x *`</ph> 2exp.","source":"The `_scalb` function calculates the value of `x *` 2exp."},{"pos":[1649,1661],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"content":"Routine","pos":[1668,1675]},{"content":"Required header","pos":[1676,1691]},{"content":"<ph id=\"ph1\">\\&lt;</ph>float.h&gt;","pos":[1745,1755],"source":"\\<float.h>"},{"pos":[1763,1881],"content":"For more compatibility information, see <bpt id=\"p1\">[</bpt>Compatibility<ept id=\"p1\">](../../c-runtime-library/compatibility.md)</ept> in the Introduction.","source":"For more compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md) in the Introduction."},{"pos":[1890,1915],"content":".NET Framework Equivalent","linkify":".NET Framework Equivalent","nodes":[{"content":".NET Framework Equivalent","pos":[0,25]}]},{"content":"Not applicable.","pos":[1919,1934]},{"content":"To call the standard C function, use <ph id=\"ph1\">`PInvoke`</ph>.","pos":[1935,1982],"source":" To call the standard C function, use `PInvoke`."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Platform Invoke Examples<ept id=\"p1\">](http://msdn.microsoft.com/Library/15926806-f0b7-487e-93a6-4e9367ec689f)</ept>.","pos":[1983,2108],"source":" For more information, see [Platform Invoke Examples](http://msdn.microsoft.com/Library/15926806-f0b7-487e-93a6-4e9367ec689f)."},{"pos":[2117,2125],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Floating-Point Support<ept id=\"p1\">](../../c-runtime-library/floating-point-support.md)</ept><ph id=\"ph1\"> </ph>","pos":[2129,2205],"source":"[Floating-Point Support](../../c-runtime-library/floating-point-support.md) "},{"content":"<bpt id=\"p1\"> [</bpt>ldexp<ept id=\"p1\">](../../c-runtime-library/reference/ldexp.md)</ept>","pos":[2208,2260],"source":" [ldexp](../../c-runtime-library/reference/ldexp.md)"}],"content":"---\ntitle: \"_scalb | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\napiname: \n  - \"_scalb\"\napilocation: \n  - \"msvcrt.dll\"\n  - \"msvcr80.dll\"\n  - \"msvcr90.dll\"\n  - \"msvcr100.dll\"\n  - \"msvcr100_clr0400.dll\"\n  - \"msvcr110.dll\"\n  - \"msvcr110_clr0400.dll\"\n  - \"msvcr120.dll\"\n  - \"msvcr120_clr0400.dll\"\n  - \"ucrtbase.dll\"\n  - \"api-ms-win-crt-math-l1-1-0.dll\"\napitype: \"DLLExport\"\nf1_keywords: \n  - \"scalb\"\n  - \"_scalb\"\ndev_langs: \n  - \"C++\"\n  - \"C\"\nhelpviewer_keywords: \n  - \"exponential calculations\"\n  - \"_scalb function\"\n  - \"scalb function\"\nms.assetid: 148cf5a8-b405-44bf-a1f0-7487adba2421\ncaps.latest.revision: 14\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# _scalb\nScales argument by a power of 2.  \n  \n## Syntax  \n  \n```  \ndouble _scalb(  \n   double x,  \n   long exp   \n);  \n```  \n  \n#### Parameters  \n `x`  \n Double-precision, floating-point value.  \n  \n `exp`  \n Long integer exponent.  \n  \n## Return Value  \n Returns an exponential value if successful. On overflow (depending on the sign of `x`), `_scalb` returns +/– `HUGE_VAL`; the `errno` variable is set to `ERANGE`.  \n  \n For more information about this and other return codes, see [_doserrno, errno, _sys_errlist, and _sys_nerr](../../c-runtime-library/errno-doserrno-sys-errlist-and-sys-nerr.md).  \n  \n## Remarks  \n The `_scalb` function calculates the value of `x *` 2exp.  \n  \n## Requirements  \n  \n|Routine|Required header|  \n|-------------|---------------------|  \n|`_scalb`|\\<float.h>|  \n  \n For more compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md) in the Introduction.  \n  \n## .NET Framework Equivalent  \n Not applicable. To call the standard C function, use `PInvoke`. For more information, see [Platform Invoke Examples](http://msdn.microsoft.com/Library/15926806-f0b7-487e-93a6-4e9367ec689f).  \n  \n## See Also  \n [Floating-Point Support](../../c-runtime-library/floating-point-support.md)   \n [ldexp](../../c-runtime-library/reference/ldexp.md)"}