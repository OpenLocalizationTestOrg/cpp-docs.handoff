{"nodes":[{"pos":[12,47],"content":"rint, rintf, rintl | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"rint, rintf, rintl | Microsoft Docs","pos":[0,35]}]},{"content":"rint, rintf, rintl","pos":[1013,1031]},{"content":"Rounds a floating-point value to the nearest integer in floating-point format.","pos":[1032,1110]},{"content":"Syntax","pos":[1119,1125]},{"content":"Parameters","pos":[1334,1344]},{"content":"The floating-point value to round.","pos":[1355,1389]},{"content":"Return Value","pos":[1398,1410]},{"content":"The <ph id=\"ph1\">`rint`</ph> functions return a floating-point value that represents the nearest integer to <ph id=\"ph2\">`x`</ph>.","pos":[1414,1508],"source":"The `rint` functions return a floating-point value that represents the nearest integer to `x`."},{"content":"Halfway values are rounded according to the current setting of the floating-point rounding mode, the same as the <ph id=\"ph1\">`nearbyint`</ph> functions.","pos":[1509,1644],"source":" Halfway values are rounded according to the current setting of the floating-point rounding mode, the same as the `nearbyint` functions."},{"content":"Unlike the <ph id=\"ph1\">`nearbyint`</ph> functions, the <ph id=\"ph2\">`rint`</ph> functions may raise the <ph id=\"ph3\">`FE_INEXACT`</ph> floating-point exception if the result differs in value from the argument.","pos":[1645,1801],"source":" Unlike the `nearbyint` functions, the `rint` functions may raise the `FE_INEXACT` floating-point exception if the result differs in value from the argument."},{"content":"There is no error return.","pos":[1802,1827]},{"content":"Input","pos":[1834,1839]},{"content":"SEH Exception","pos":[1840,1853]},{"pos":[1865,1874],"content":"Exception"},{"content":"± ∞, QNAN, IND","pos":[1942,1956]},{"content":"none","pos":[1957,1961]},{"content":"none","pos":[1962,1966]},{"content":"Denormals","pos":[1971,1980]},{"content":"EXCEPTION_FLT_UNDERFLOW","pos":[1981,2004]},{"content":"none","pos":[2005,2009]},{"content":"Remarks","pos":[2019,2026]},{"content":"Because C++ allows overloading, you can call overloads of <ph id=\"ph1\">`rint`</ph> that take and return <ph id=\"ph2\">`float`</ph> and <ph id=\"ph3\">`long double`</ph> values.","pos":[2030,2149],"source":"Because C++ allows overloading, you can call overloads of `rint` that take and return `float` and `long double` values."},{"content":"In a C program, <ph id=\"ph1\">`rint`</ph> always takes and returns a <ph id=\"ph2\">`double`</ph>.","pos":[2150,2209],"source":" In a C program, `rint` always takes and returns a `double`."},{"content":"Requirements","pos":[2218,2230]},{"content":"Function","pos":[2237,2245]},{"content":"C header","pos":[2246,2254]},{"content":"C++ header","pos":[2255,2265]},{"pos":[2329,2339],"content":", <ph id=\"ph1\">`rintf`</ph>,","source":", `rintf`, "},{"content":"math.h&gt;","pos":[2350,2357],"source":"math.h>"},{"content":"cmath&gt;","pos":[2360,2366],"source":"cmath>"},{"pos":[2374,2478],"content":"For additional compatibility information, see <bpt id=\"p1\">[</bpt>Compatibility<ept id=\"p1\">](../../c-runtime-library/compatibility.md)</ept>.","source":"For additional compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md)."},{"content":"Example","pos":[2487,2494]},{"content":".NET Framework Equivalent","pos":[3321,3346]},{"content":"System::Math::Round","pos":[3351,3370]},{"content":"See Also","pos":[3445,3453]},{"content":"Floating-Point Support","pos":[3458,3480]},{"content":"ceil, ceilf, ceill","pos":[3538,3556]},{"content":"floor, floorf, floorl","pos":[3618,3639]},{"content":"fmod, fmodf","pos":[3704,3715]},{"content":"lrint, lrintf, lrintl, llrint, llrintf, llrintl","pos":[3771,3818]},{"content":"lround, lroundf, lroundl, llround, llroundf, llroundl","pos":[3895,3948]},{"content":"nearbyint, nearbyintf, nearbyintl","pos":[4042,4075]},{"content":"rint","pos":[4152,4156]}],"content":"---\ntitle: \"rint, rintf, rintl | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\napiname: \n  - \"rintf\"\n  - \"rintl\"\n  - \"rint\"\napilocation: \n  - \"msvcrt.dll\"\n  - \"msvcr80.dll\"\n  - \"msvcr90.dll\"\n  - \"msvcr100.dll\"\n  - \"msvcr100_clr0400.dll\"\n  - \"msvcr110.dll\"\n  - \"msvcr110_clr0400.dll\"\n  - \"msvcr120.dll\"\n  - \"msvcr120_clr0400.dll\"\n  - \"ucrtbase.dll\"\n  - \"api-ms-win-crt-math-l1-1-0.dll\"\napitype: \"DLLExport\"\nf1_keywords: \n  - \"rintf\"\n  - \"rintl\"\n  - \"rint\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"rintf function\"\n  - \"rint function\"\n  - \"rintl function\"\nms.assetid: 312ae3e6-278c-459a-9393-11b8f87d9184\ncaps.latest.revision: 8\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"ru-ru\"\n  - \"zh-cn\"\n  - \"zh-tw\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"tr-tr\"\n---\n# rint, rintf, rintl\nRounds a floating-point value to the nearest integer in floating-point format.  \n  \n## Syntax  \n  \n```  \ndouble rint( double x );  \nfloat rint( float x );  // C++ only  \nlong double rint( long double x );  // C++ only  \nfloat rintf( float x );   \nlong double rintl( long double x );  \n  \n```  \n  \n#### Parameters  \n `x`  \n The floating-point value to round.  \n  \n## Return Value  \n The `rint` functions return a floating-point value that represents the nearest integer to `x`. Halfway values are rounded according to the current setting of the floating-point rounding mode, the same as the `nearbyint` functions. Unlike the `nearbyint` functions, the `rint` functions may raise the `FE_INEXACT` floating-point exception if the result differs in value from the argument. There is no error return.  \n  \n|Input|SEH Exception|`_matherr` Exception|  \n|-----------|-------------------|--------------------------|  \n|± ∞, QNAN, IND|none|none|  \n|Denormals|EXCEPTION_FLT_UNDERFLOW|none|  \n  \n## Remarks  \n Because C++ allows overloading, you can call overloads of `rint` that take and return `float` and `long double` values. In a C program, `rint` always takes and returns a `double`.  \n  \n## Requirements  \n  \n|Function|C header|C++ header|  \n|--------------|--------------|------------------|  \n|`rint`, `rintf`, `rintl`|\\<math.h>|\\<cmath>|  \n  \n For additional compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md).  \n  \n## Example  \n  \n```  \n// crt_rint.c  \n// Build with: cl /W3 /Tc crt_rint.c  \n// This example displays the rounded results of  \n// the floating-point values 2.499999, -2.499999,   \n// 2.8, -2.8, 2.5 and -2.5.  \n  \n#include <math.h>  \n#include <stdio.h>  \n  \nint main( void )  \n{  \n   double x = 2.499999;  \n   float y = 2.8f;  \n   long double z = 2.5;  \n  \n   printf(\"rint(%f) is %.0f\\n\", x, rint (x));  \n   printf(\"rint(%f) is %.0f\\n\", -x, rint (-x));  \n   printf(\"rintf(%f) is %.0f\\n\", y, rintf(y));  \n   printf(\"rintf(%f) is %.0f\\n\", -y, rintf(-y));  \n   printf(\"rintl(%Lf) is %.0Lf\\n\", z, rintl(z));  \n   printf(\"rintl(%Lf) is %.0Lf\\n\", -z, rintl(-z));  \n}  \n```  \n  \n```Output  \nrint(2.499999) is 2  \nrint(-2.499999) is -2  \nrintf(2.800000) is 3  \nrintf(-2.800000) is -3  \nrintl(2.500000) is 3  \nrintl(-2.500000) is -3  \n```  \n  \n## .NET Framework Equivalent  \n [System::Math::Round](https://msdn.microsoft.com/en-us/library/system.math.round.aspx)  \n  \n## See Also  \n [Floating-Point Support](../../c-runtime-library/floating-point-support.md)   \n [ceil, ceilf, ceill](../../c-runtime-library/reference/ceil-ceilf-ceill.md)   \n [floor, floorf, floorl](../../c-runtime-library/reference/floor-floorf-floorl.md)   \n [fmod, fmodf](../../c-runtime-library/reference/fmod-fmodf.md)   \n [lrint, lrintf, lrintl, llrint, llrintf, llrintl](http://msdn.microsoft.com/en-us/312fd869-a9c0-4107-bb23-ab8299d04385)   \n [lround, lroundf, lroundl, llround, llroundf, llroundl](../../c-runtime-library/reference/lround-lroundf-lroundl-llround-llroundf-llroundl.md)   \n [nearbyint, nearbyintf, nearbyintl](http://msdn.microsoft.com/en-us/15111e73-331d-41d1-81b7-3e10df894848)   \n [rint](../../c-runtime-library/reference/rint-rintf-rintl.md)"}