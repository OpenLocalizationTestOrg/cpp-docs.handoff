{"nodes":[{"pos":[12,56],"content":"is_copy_constructible Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"is_copy_constructible Class | Microsoft Docs","pos":[0,44]}]},{"pos":[739,766],"content":"is_copy_constructible Class","linkify":"is_copy_constructible Class","nodes":[{"content":"is_copy_constructible Class","pos":[0,27]}]},{"content":"Tests if type has a copy constructor.","pos":[767,804]},{"pos":[813,819],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[899,909],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"The type to query.","pos":[921,939]},{"pos":[948,955],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[959,1086],"content":"An instance of the type predicate holds true if the type <ph id=\"ph1\">`Ty`</ph> is a class that has a copy constructor, otherwise it holds false.","source":"An instance of the type predicate holds true if the type `Ty` is a class that has a copy constructor, otherwise it holds false."},{"pos":[1095,1102],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[1776,1788],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[1792,1817],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> &lt;type_traits&gt;","source":"**Header:** <type_traits>"},{"pos":[1824,1842],"content":"<bpt id=\"p1\">**</bpt>Namespace:<ept id=\"p1\">**</ept> std","source":"**Namespace:** std"},{"pos":[1851,1859],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"pos":[1863,1914],"content":"<bpt id=\"p1\">[</bpt>&lt;type_traits&gt;<ept id=\"p1\">](../standard-library/type-traits.md)</ept>","source":"[<type_traits>](../standard-library/type-traits.md)"}],"content":"---\ntitle: \"is_copy_constructible Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"is_copy_constructible\"\n  - \"std.is_copy_constructible\"\n  - \"std::is_copy_constructible\"\n  - \"type_traits/std::is_copy_constructible\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"is_copy_constructible\"\nms.assetid: d8db9d4c-21ed-4884-bead-0b0b562de007\ncaps.latest.revision: 13\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# is_copy_constructible Class\nTests if type has a copy constructor.  \n  \n## Syntax  \n  \n```  \ntemplate <class Ty>  \nstruct is_copy_constructible;  \n```  \n  \n#### Parameters  \n `Ty`  \n The type to query.  \n  \n## Remarks  \n An instance of the type predicate holds true if the type `Ty` is a class that has a copy constructor, otherwise it holds false.  \n  \n## Example  \n  \n```cpp  \n#include <type_traits>   \n#include <iostream>   \n  \nstruct Copyable  \n{  \n    int val;  \n};  \n  \nstruct NotCopyable  \n{  \n   NotCopyable(const NotCopyable&) = delete;  \n   int val;  \n  \n};  \n  \nint main()  \n{  \n    std::cout << \"is_copy_constructible<Copyable> == \" << std::boolalpha  \n        << std::is_copy_constructible<Copyable>::value << std::endl;  \n    std::cout << \"is_copy_constructible<NotCopyable> == \" << std::boolalpha  \n        << std::is_copy_constructible<NotCopyable>::value << std::endl;  \n  \n    return (0);  \n}  \n  \n```  \n  \n```Output  \nis_copy_constructible<Copyable> == true  \nis_copy_constructible<NotCopyable > == false  \n```  \n  \n## Requirements  \n **Header:** <type_traits>  \n  \n **Namespace:** std  \n  \n## See Also  \n [<type_traits>](../standard-library/type-traits.md)\n\n"}