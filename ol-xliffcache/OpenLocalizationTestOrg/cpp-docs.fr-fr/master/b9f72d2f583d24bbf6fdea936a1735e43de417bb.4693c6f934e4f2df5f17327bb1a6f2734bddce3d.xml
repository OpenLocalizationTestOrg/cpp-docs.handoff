{"nodes":[{"pos":[12,43],"content":"CTabCtrl Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"CTabCtrl Class | Microsoft Docs","pos":[0,31]}]},{"pos":[655,669],"content":"CTabCtrl Class","linkify":"CTabCtrl Class","nodes":[{"content":"CTabCtrl Class","pos":[0,14]}]},{"content":"Provides the functionality of the Windows common tab control.","pos":[670,731]},{"pos":[740,746],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[801,808],"content":"Members","linkify":"Members","nodes":[{"content":"Members","pos":[0,7]}]},{"pos":[818,837],"content":"Public Constructors","linkify":"Public Constructors","nodes":[{"content":"Public Constructors","pos":[0,19]}]},{"content":"Name","pos":[844,848]},{"content":"Description","pos":[849,860]},{"pos":[898,939],"content":"<bpt id=\"p1\">[</bpt>CTabCtrl::CTabCtrl<ept id=\"p1\">](#ctabctrl__ctabctrl)</ept>","source":"[CTabCtrl::CTabCtrl](#ctabctrl__ctabctrl)"},{"pos":[940,971],"content":"Constructs a <ph id=\"ph1\">`CTabCtrl`</ph> object.","source":"Constructs a `CTabCtrl` object."},{"pos":[982,996],"content":"Public Methods","linkify":"Public Methods","nodes":[{"content":"Public Methods","pos":[0,14]}]},{"content":"Name","pos":[1003,1007]},{"content":"Description","pos":[1008,1019]},{"pos":[1057,1102],"content":"<bpt id=\"p1\">[</bpt>CTabCtrl::AdjustRect<ept id=\"p1\">](#ctabctrl__adjustrect)</ept>","source":"[CTabCtrl::AdjustRect](#ctabctrl__adjustrect)"},{"content":"Calculates a tab control's display area given a window rectangle, or calculates the window rectangle that would correspond to a given display area.","pos":[1103,1250]},{"pos":[1255,1292],"content":"<bpt id=\"p1\">[</bpt>CTabCtrl::Create<ept id=\"p1\">](#ctabctrl__create)</ept>","source":"[CTabCtrl::Create](#ctabctrl__create)"},{"pos":[1293,1369],"content":"Creates a tab control and attaches it to an instance of a <ph id=\"ph1\">`CTabCtrl`</ph> object.","source":"Creates a tab control and attaches it to an instance of a `CTabCtrl` object."},{"pos":[1374,1415],"content":"<bpt id=\"p1\">[</bpt>CTabCtrl::CreateEx<ept id=\"p1\">](#ctabctrl__createex)</ept>","source":"[CTabCtrl::CreateEx](#ctabctrl__createex)"},{"pos":[1416,1535],"content":"Creates a tab control with the specified Windows extended styles and attaches it to an instance of a <ph id=\"ph1\">`CTabCtrl`</ph> object.","source":"Creates a tab control with the specified Windows extended styles and attaches it to an instance of a `CTabCtrl` object."},{"pos":[1540,1593],"content":"<bpt id=\"p1\">[</bpt>CTabCtrl::DeleteAllItems<ept id=\"p1\">](#ctabctrl__deleteallitems)</ept>","source":"[CTabCtrl::DeleteAllItems](#ctabctrl__deleteallitems)"},{"content":"Removes all items from a tab control.","pos":[1594,1631]},{"pos":[1636,1681],"content":"<bpt id=\"p1\">[</bpt>CTabCtrl::DeleteItem<ept id=\"p1\">](#ctabctrl__deleteitem)</ept>","source":"[CTabCtrl::DeleteItem](#ctabctrl__deleteitem)"},{"content":"Removes an item from a tab control.","pos":[1682,1717]},{"pos":[1722,1769],"content":"<bpt id=\"p1\">[</bpt>CTabCtrl::DeselectAll<ept id=\"p1\">](#ctabctrl__deselectall)</ept>","source":"[CTabCtrl::DeselectAll](#ctabctrl__deselectall)"},{"content":"Resets items in a tab control, clearing any that were pressed.","pos":[1770,1832]},{"pos":[1837,1878],"content":"<bpt id=\"p1\">[</bpt>CTabCtrl::DrawItem<ept id=\"p1\">](#ctabctrl__drawitem)</ept>","source":"[CTabCtrl::DrawItem](#ctabctrl__drawitem)"},{"content":"Draws a specified item of a tab control.","pos":[1879,1919]},{"pos":[1924,1971],"content":"<bpt id=\"p1\">[</bpt>CTabCtrl::GetCurFocus<ept id=\"p1\">](#ctabctrl__getcurfocus)</ept>","source":"[CTabCtrl::GetCurFocus](#ctabctrl__getcurfocus)"},{"content":"Retrieves the tab with the current focus of a tab control.","pos":[1972,2030]},{"pos":[2035,2078],"content":"<bpt id=\"p1\">[</bpt>CTabCtrl::GetCurSel<ept id=\"p1\">](#ctabctrl__getcursel)</ept>","source":"[CTabCtrl::GetCurSel](#ctabctrl__getcursel)"},{"content":"Determines the currently selected tab in a tab control.","pos":[2079,2134]},{"pos":[2139,2196],"content":"<bpt id=\"p1\">[</bpt>CTabCtrl::GetExtendedStyle<ept id=\"p1\">](#ctabctrl__getextendedstyle)</ept>","source":"[CTabCtrl::GetExtendedStyle](#ctabctrl__getextendedstyle)"},{"content":"Retrieves the extended styles that are currently in use for the tab control.","pos":[2197,2273]},{"pos":[2278,2327],"content":"<bpt id=\"p1\">[</bpt>CTabCtrl::GetImageList<ept id=\"p1\">](#ctabctrl__getimagelist)</ept>","source":"[CTabCtrl::GetImageList](#ctabctrl__getimagelist)"},{"content":"Retrieves the image list associated with a tab control.","pos":[2328,2383]},{"pos":[2388,2427],"content":"<bpt id=\"p1\">[</bpt>CTabCtrl::GetItem<ept id=\"p1\">](#ctabctrl__getitem)</ept>","source":"[CTabCtrl::GetItem](#ctabctrl__getitem)"},{"content":"Retrieves information about a tab in a tab control.","pos":[2428,2479]},{"pos":[2484,2533],"content":"<bpt id=\"p1\">[</bpt>CTabCtrl::GetItemCount<ept id=\"p1\">](#ctabctrl__getitemcount)</ept>","source":"[CTabCtrl::GetItemCount](#ctabctrl__getitemcount)"},{"content":"Retrieves the number of tabs in the tab control.","pos":[2534,2582]},{"pos":[2587,2634],"content":"<bpt id=\"p1\">[</bpt>CTabCtrl::GetItemRect<ept id=\"p1\">](#ctabctrl__getitemrect)</ept>","source":"[CTabCtrl::GetItemRect](#ctabctrl__getitemrect)"},{"content":"Retrieves the bounding rectangle for a tab in a tab control.","pos":[2635,2695]},{"pos":[2700,2749],"content":"<bpt id=\"p1\">[</bpt>CTabCtrl::GetItemState<ept id=\"p1\">](#ctabctrl__getitemstate)</ept>","source":"[CTabCtrl::GetItemState](#ctabctrl__getitemstate)"},{"content":"Retrieves the state of the indicated tab control item.","pos":[2750,2804]},{"pos":[2809,2856],"content":"<bpt id=\"p1\">[</bpt>CTabCtrl::GetRowCount<ept id=\"p1\">](#ctabctrl__getrowcount)</ept>","source":"[CTabCtrl::GetRowCount](#ctabctrl__getrowcount)"},{"content":"Retrieves the current number of rows of tabs in a tab control.","pos":[2857,2919]},{"pos":[2924,2971],"content":"<bpt id=\"p1\">[</bpt>CTabCtrl::GetToolTips<ept id=\"p1\">](#ctabctrl__gettooltips)</ept>","source":"[CTabCtrl::GetToolTips](#ctabctrl__gettooltips)"},{"content":"Retrieves the handle of the tool tip control associated with a tab control.","pos":[2972,3047]},{"pos":[3052,3103],"content":"<bpt id=\"p1\">[</bpt>CTabCtrl::HighlightItem<ept id=\"p1\">](#ctabctrl__highlightitem)</ept>","source":"[CTabCtrl::HighlightItem](#ctabctrl__highlightitem)"},{"content":"Sets the highlight state of a tab item.","pos":[3104,3143]},{"pos":[3148,3187],"content":"<bpt id=\"p1\">[</bpt>CTabCtrl::HitTest<ept id=\"p1\">](#ctabctrl__hittest)</ept>","source":"[CTabCtrl::HitTest](#ctabctrl__hittest)"},{"content":"Determines which tab, if any, is at a specified screen position.","pos":[3188,3252]},{"pos":[3257,3302],"content":"<bpt id=\"p1\">[</bpt>CTabCtrl::InsertItem<ept id=\"p1\">](#ctabctrl__insertitem)</ept>","source":"[CTabCtrl::InsertItem](#ctabctrl__insertitem)"},{"content":"Inserts a new tab in a tab control.","pos":[3303,3338]},{"pos":[3343,3390],"content":"<bpt id=\"p1\">[</bpt>CTabCtrl::RemoveImage<ept id=\"p1\">](#ctabctrl__removeimage)</ept>","source":"[CTabCtrl::RemoveImage](#ctabctrl__removeimage)"},{"content":"Removes an image from a tab control's image list.","pos":[3391,3440]},{"pos":[3445,3492],"content":"<bpt id=\"p1\">[</bpt>CTabCtrl::SetCurFocus<ept id=\"p1\">](#ctabctrl__setcurfocus)</ept>","source":"[CTabCtrl::SetCurFocus](#ctabctrl__setcurfocus)"},{"content":"Sets the focus to a specified tab in a tab control.","pos":[3493,3544]},{"pos":[3549,3592],"content":"<bpt id=\"p1\">[</bpt>CTabCtrl::SetCurSel<ept id=\"p1\">](#ctabctrl__setcursel)</ept>","source":"[CTabCtrl::SetCurSel](#ctabctrl__setcursel)"},{"content":"Selects a tab in a tab control.","pos":[3593,3624]},{"pos":[3629,3686],"content":"<bpt id=\"p1\">[</bpt>CTabCtrl::SetExtendedStyle<ept id=\"p1\">](#ctabctrl__setextendedstyle)</ept>","source":"[CTabCtrl::SetExtendedStyle](#ctabctrl__setextendedstyle)"},{"content":"Sets the extended styles for a tab control.","pos":[3687,3730]},{"pos":[3735,3784],"content":"<bpt id=\"p1\">[</bpt>CTabCtrl::SetImageList<ept id=\"p1\">](#ctabctrl__setimagelist)</ept>","source":"[CTabCtrl::SetImageList](#ctabctrl__setimagelist)"},{"content":"Assigns an image list to a tab control.","pos":[3785,3824]},{"pos":[3829,3868],"content":"<bpt id=\"p1\">[</bpt>CTabCtrl::SetItem<ept id=\"p1\">](#ctabctrl__setitem)</ept>","source":"[CTabCtrl::SetItem](#ctabctrl__setitem)"},{"content":"Sets some or all of a tab's attributes.","pos":[3869,3908]},{"pos":[3913,3962],"content":"<bpt id=\"p1\">[</bpt>CTabCtrl::SetItemExtra<ept id=\"p1\">](#ctabctrl__setitemextra)</ept>","source":"[CTabCtrl::SetItemExtra](#ctabctrl__setitemextra)"},{"content":"Sets the number of bytes per tab reserved for application-defined data in a tab control.","pos":[3963,4051]},{"pos":[4056,4103],"content":"<bpt id=\"p1\">[</bpt>CTabCtrl::SetItemSize<ept id=\"p1\">](#ctabctrl__setitemsize)</ept>","source":"[CTabCtrl::SetItemSize](#ctabctrl__setitemsize)"},{"content":"Sets the width and height of an item.","pos":[4104,4141]},{"pos":[4146,4195],"content":"<bpt id=\"p1\">[</bpt>CTabCtrl::SetItemState<ept id=\"p1\">](#ctabctrl__setitemstate)</ept>","source":"[CTabCtrl::SetItemState](#ctabctrl__setitemstate)"},{"content":"Sets the state of the indicated tab control item.","pos":[4196,4245]},{"pos":[4250,4303],"content":"<bpt id=\"p1\">[</bpt>CTabCtrl::SetMinTabWidth<ept id=\"p1\">](#ctabctrl__setmintabwidth)</ept>","source":"[CTabCtrl::SetMinTabWidth](#ctabctrl__setmintabwidth)"},{"content":"Sets the minimum width of items in a tab control.","pos":[4304,4353]},{"pos":[4358,4403],"content":"<bpt id=\"p1\">[</bpt>CTabCtrl::SetPadding<ept id=\"p1\">](#ctabctrl__setpadding)</ept>","source":"[CTabCtrl::SetPadding](#ctabctrl__setpadding)"},{"content":"Sets the amount of space (padding) around each tab's icon and label in a tab control.","pos":[4404,4489]},{"pos":[4494,4541],"content":"<bpt id=\"p1\">[</bpt>CTabCtrl::SetToolTips<ept id=\"p1\">](#ctabctrl__settooltips)</ept>","source":"[CTabCtrl::SetToolTips](#ctabctrl__settooltips)"},{"content":"Assigns a tool tip control to a tab control.","pos":[4542,4586]},{"pos":[4596,4603],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"A \"tab control\" is analogous to the dividers in a notebook or the labels in a file cabinet.","pos":[4607,4698]},{"content":"By using a tab control, an application can define multiple pages for the same area of a window or dialog box.","pos":[4699,4808]},{"content":"Each page consists of a set of information or a group of controls that the application displays when the user selects the corresponding tab.","pos":[4809,4949]},{"content":"A special type of tab control displays tabs that look like buttons.","pos":[4950,5017]},{"content":"Clicking a button should immediately perform a command instead of displaying a page.","pos":[5018,5102]},{"pos":[5109,5255],"content":"This control (and therefore the <ph id=\"ph1\">`CTabCtrl`</ph> class) is available only to programs running under Windows 95/98 and Windows NT version 3.51 and later.","source":"This control (and therefore the `CTabCtrl` class) is available only to programs running under Windows 95/98 and Windows NT version 3.51 and later."},{"pos":[5262,5396],"content":"For more information on using <ph id=\"ph1\">`CTabCtrl`</ph>, see <bpt id=\"p1\">[</bpt>Controls<ept id=\"p1\">](../../mfc/controls-mfc.md)</ept> and <bpt id=\"p2\">[</bpt>Using CTabCtrl<ept id=\"p2\">](../../mfc/using-ctabctrl.md)</ept>.","source":"For more information on using `CTabCtrl`, see [Controls](../../mfc/controls-mfc.md) and [Using CTabCtrl](../../mfc/using-ctabctrl.md)."},{"pos":[5405,5426],"content":"Inheritance Hierarchy","linkify":"Inheritance Hierarchy","nodes":[{"content":"Inheritance Hierarchy","pos":[0,21]}]},{"pos":[5430,5477],"content":"<bpt id=\"p1\">[</bpt>CObject<ept id=\"p1\">](../../mfc/reference/cobject-class.md)</ept>","source":"[CObject](../../mfc/reference/cobject-class.md)"},{"pos":[5484,5537],"content":"<bpt id=\"p1\">[</bpt>CCmdTarget<ept id=\"p1\">](../../mfc/reference/ccmdtarget-class.md)</ept>","source":"[CCmdTarget](../../mfc/reference/ccmdtarget-class.md)"},{"pos":[5544,5585],"content":"<bpt id=\"p1\">[</bpt>CWnd<ept id=\"p1\">](../../mfc/reference/cwnd-class.md)</ept>","source":"[CWnd](../../mfc/reference/cwnd-class.md)"},{"pos":[5611,5623],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[5627,5647],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> afxcmn.h","source":"**Header:** afxcmn.h"},{"pos":[5657,5714],"content":"<bpt id=\"p1\">&lt;a name=\"ctabctrl__adjustrect\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CTabCtrl::AdjustRect","linkify":"<a name=\"ctabctrl__adjustrect\"></a>  CTabCtrl::AdjustRect","source":"<a name=\"ctabctrl__adjustrect\"></a>  CTabCtrl::AdjustRect"},{"content":"Calculates a tab control's display area given a window rectangle, or calculates the window rectangle that would correspond to a given display area.","pos":[5718,5865]},{"pos":[5943,5953],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Indicates which operation to perform.","pos":[5970,6007]},{"content":"If this parameter is <bpt id=\"p1\">**</bpt>TRUE<ept id=\"p1\">**</ept>, <ph id=\"ph1\">`lpRect`</ph> specifies a display rectangle and receives the corresponding window rectangle.","pos":[6008,6126],"source":" If this parameter is **TRUE**, `lpRect` specifies a display rectangle and receives the corresponding window rectangle."},{"content":"If this parameter is <bpt id=\"p1\">**</bpt>FALSE<ept id=\"p1\">**</ept>, <ph id=\"ph1\">`lpRect`</ph> specifies a window rectangle and receives the corresponding display rectangle.","pos":[6127,6246],"source":" If this parameter is **FALSE**, `lpRect` specifies a window rectangle and receives the corresponding display rectangle."},{"content":"Pointer to a <bpt id=\"p1\">[</bpt>RECT<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/dd162897)</ept> structure that specifies the given rectangle and receives the calculated rectangle.","pos":[6265,6428],"source":" Pointer to a [RECT](http://msdn.microsoft.com/library/windows/desktop/dd162897) structure that specifies the given rectangle and receives the calculated rectangle."},{"pos":[6438,6445],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[6449,6538],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_MFC_CTabCtrl#1<ept id=\"p2\">](../../mfc/reference/codesnippet/cpp/ctabctrl-class_1.cpp)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_MFC_CTabCtrl#1](../../mfc/reference/codesnippet/cpp/ctabctrl-class_1.cpp)]"},{"pos":[6548,6597],"content":"<bpt id=\"p1\">&lt;a name=\"ctabctrl__create\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CTabCtrl::Create","linkify":"<a name=\"ctabctrl__create\"></a>  CTabCtrl::Create","source":"<a name=\"ctabctrl__create\"></a>  CTabCtrl::Create"},{"pos":[6601,6677],"content":"Creates a tab control and attaches it to an instance of a <ph id=\"ph1\">`CTabCtrl`</ph> object.","source":"Creates a tab control and attaches it to an instance of a `CTabCtrl` object."},{"pos":[6801,6811],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Specifies the tab control's style.","pos":[6828,6862]},{"content":"Apply any combination of <bpt id=\"p1\">[</bpt>tab control styles<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb760549)</ept>, described in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","pos":[6863,7039],"source":" Apply any combination of [tab control styles](http://msdn.microsoft.com/library/windows/desktop/bb760549), described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"content":"See <bpt id=\"p1\">**</bpt>Remarks<ept id=\"p1\">**</ept> for a list of window styles that you can also apply to the control.","pos":[7040,7123],"source":" See **Remarks** for a list of window styles that you can also apply to the control."},{"content":"Specifies the tab control's size and position.","pos":[7140,7186]},{"content":"It can be either a <bpt id=\"p1\">[</bpt>CRect<ept id=\"p1\">](../../atl-mfc-shared/reference/crect-class.md)</ept> object or a <bpt id=\"p2\">[</bpt>RECT<ept id=\"p2\">](http://msdn.microsoft.com/library/windows/desktop/dd162897)</ept> structure.","pos":[7187,7350],"source":" It can be either a [CRect](../../atl-mfc-shared/reference/crect-class.md) object or a [RECT](http://msdn.microsoft.com/library/windows/desktop/dd162897) structure."},{"content":"Specifies the tab control's parent window, usually a <ph id=\"ph1\">`CDialog`</ph>.","pos":[7373,7436],"source":" Specifies the tab control's parent window, usually a `CDialog`."},{"content":"It must not be <bpt id=\"p1\">**</bpt>NULL<ept id=\"p1\">**</ept>.","pos":[7437,7461],"source":" It must not be **NULL**."},{"content":"Specifies the tab control's ID.","pos":[7477,7508]},{"pos":[7518,7530],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[7534,7611],"content":"<bpt id=\"p1\">**</bpt>TRUE<ept id=\"p1\">**</ept> if initialization of the object was successful; otherwise <bpt id=\"p2\">**</bpt>FALSE<ept id=\"p2\">**</ept>.","source":"**TRUE** if initialization of the object was successful; otherwise **FALSE**."},{"pos":[7621,7628],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"You construct a <ph id=\"ph1\">`CTabCtrl`</ph> object in two steps.","pos":[7632,7679],"source":"You construct a `CTabCtrl` object in two steps."},{"content":"First, call the constructor, and then call <bpt id=\"p1\">**</bpt>Create<ept id=\"p1\">**</ept>, which creates the tab control and attaches it to the <ph id=\"ph1\">`CTabCtrl`</ph> object.","pos":[7680,7806],"source":" First, call the constructor, and then call **Create**, which creates the tab control and attaches it to the `CTabCtrl` object."},{"content":"In addition to tab control styles, you can apply the following window styles to a tab control:","pos":[7813,7907]},{"content":"<bpt id=\"p1\">**</bpt>WS_CHILD<ept id=\"p1\">**</ept> Creates a child window that represents the tab control.","pos":[7915,7983],"source":"**WS_CHILD** Creates a child window that represents the tab control."},{"content":"Cannot be used with the <ph id=\"ph1\">`WS_POPUP`</ph> style.","pos":[7984,8025],"source":" Cannot be used with the `WS_POPUP` style."},{"pos":[8033,8096],"content":"<bpt id=\"p1\">**</bpt>WS_VISIBLE<ept id=\"p1\">**</ept> Creates a tab control that is initially visible.","source":"**WS_VISIBLE** Creates a tab control that is initially visible."},{"pos":[8104,8164],"content":"<bpt id=\"p1\">**</bpt>WS_DISABLED<ept id=\"p1\">**</ept> Creates a window that is initially disabled.","source":"**WS_DISABLED** Creates a window that is initially disabled."},{"content":"<bpt id=\"p1\">**</bpt>WS_GROUP<ept id=\"p1\">**</ept> Specifies the first control of a group of controls in which the user can move from one control to the next with the arrow keys.","pos":[8172,8312],"source":"**WS_GROUP** Specifies the first control of a group of controls in which the user can move from one control to the next with the arrow keys."},{"content":"All controls defined with the <bpt id=\"p1\">**</bpt>WS_GROUP<ept id=\"p1\">**</ept> style after the first control belong to the same group.","pos":[8313,8411],"source":" All controls defined with the **WS_GROUP** style after the first control belong to the same group."},{"content":"The next control with the <bpt id=\"p1\">**</bpt>WS_GROUP<ept id=\"p1\">**</ept> style ends the style group and starts the next group (that is, one group ends where the next begins).","pos":[8412,8552],"source":" The next control with the **WS_GROUP** style ends the style group and starts the next group (that is, one group ends where the next begins)."},{"content":"<bpt id=\"p1\">**</bpt>WS_TABSTOP<ept id=\"p1\">**</ept> Specifies one of any number of controls through which the user can move by using the TAB key.","pos":[8560,8668],"source":"**WS_TABSTOP** Specifies one of any number of controls through which the user can move by using the TAB key."},{"content":"The TAB key moves the user to the next control specified by the <bpt id=\"p1\">**</bpt>WS_TABSTOP<ept id=\"p1\">**</ept> style.","pos":[8669,8754],"source":" The TAB key moves the user to the next control specified by the **WS_TABSTOP** style."},{"pos":[8761,8883],"content":"To create a tab control with extended window styles, call <bpt id=\"p1\">[</bpt>CTabCtrl::CreateEx<ept id=\"p1\">](#ctabctrl__createex)</ept> instead of <bpt id=\"p2\">**</bpt>Create<ept id=\"p2\">**</ept>.","source":"To create a tab control with extended window styles, call [CTabCtrl::CreateEx](#ctabctrl__createex) instead of **Create**."},{"pos":[8893,8900],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[8904,8993],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_MFC_CTabCtrl#2<ept id=\"p2\">](../../mfc/reference/codesnippet/cpp/ctabctrl-class_2.cpp)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_MFC_CTabCtrl#2](../../mfc/reference/codesnippet/cpp/ctabctrl-class_2.cpp)]"},{"pos":[9003,9056],"content":"<bpt id=\"p1\">&lt;a name=\"ctabctrl__createex\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CTabCtrl::CreateEx","linkify":"<a name=\"ctabctrl__createex\"></a>  CTabCtrl::CreateEx","source":"<a name=\"ctabctrl__createex\"></a>  CTabCtrl::CreateEx"},{"pos":[9060,9140],"content":"Creates a control (a child window) and associates it with the <ph id=\"ph1\">`CTabCtrl`</ph> object.","source":"Creates a control (a child window) and associates it with the `CTabCtrl` object."},{"pos":[9287,9297],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Specifies the extended style of the control being created.","pos":[9316,9374]},{"content":"For a list of extended Windows styles, see the <ph id=\"ph1\">`dwExStyle`</ph> parameter for <bpt id=\"p1\">[</bpt>CreateWindowEx<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms632680)</ept> in the <ph id=\"ph2\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","pos":[9375,9584],"source":" For a list of extended Windows styles, see the `dwExStyle` parameter for [CreateWindowEx](http://msdn.microsoft.com/library/windows/desktop/ms632680) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"content":"Specifies the tab control's style.","pos":[9604,9638]},{"content":"Apply any combination of <bpt id=\"p1\">[</bpt>tab control styles<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb760549)</ept>, described in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","pos":[9639,9815],"source":" Apply any combination of [tab control styles](http://msdn.microsoft.com/library/windows/desktop/bb760549), described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"content":"See <bpt id=\"p1\">**</bpt>Remarks<ept id=\"p1\">**</ept> in <bpt id=\"p2\">[</bpt>Create<ept id=\"p2\">](#ctabctrl__create)</ept> for a list of window styles that you can also apply to the control.","pos":[9816,9930],"source":" See **Remarks** in [Create](#ctabctrl__create) for a list of window styles that you can also apply to the control."},{"content":"A reference to a <bpt id=\"p1\">[</bpt>RECT<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/dd162897)</ept> structure describing the size and position of the window to be created, in client coordinates of <ph id=\"ph1\">`pParentWnd`</ph>.","pos":[9947,10141],"source":" A reference to a [RECT](http://msdn.microsoft.com/library/windows/desktop/dd162897) structure describing the size and position of the window to be created, in client coordinates of `pParentWnd`."},{"content":"A pointer to the window that is the control's parent.","pos":[10164,10217]},{"content":"The control's child-window ID.","pos":[10233,10263]},{"pos":[10273,10285],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Nonzero if successful otherwise 0.","pos":[10289,10323]},{"pos":[10333,10340],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[10344,10491],"content":"Use <ph id=\"ph1\">`CreateEx`</ph> instead of <bpt id=\"p1\">[</bpt>Create<ept id=\"p1\">](#ctabctrl__create)</ept> to apply extended Windows styles, specified by the Windows extended style preface <bpt id=\"p2\">**</bpt>WS_EX_<ept id=\"p2\">**</ept>.","source":"Use `CreateEx` instead of [Create](#ctabctrl__create) to apply extended Windows styles, specified by the Windows extended style preface **WS_EX_**."},{"content":"<ph id=\"ph1\">`CreateEx`</ph> creates the control with the extended Windows styles specified by <ph id=\"ph2\">`dwExStyle`</ph>.","pos":[10498,10587],"source":"`CreateEx` creates the control with the extended Windows styles specified by `dwExStyle`."},{"content":"Set extended styles specific to a control using <bpt id=\"p1\">[</bpt>SetExtendedStyle<ept id=\"p1\">](#ctabctrl__setextendedstyle)</ept>.","pos":[10588,10684],"source":" Set extended styles specific to a control using [SetExtendedStyle](#ctabctrl__setextendedstyle)."},{"content":"For example, use <ph id=\"ph1\">`CreateEx`</ph> to set such styles as <bpt id=\"p1\">**</bpt>WS_EX_CONTEXTHELP<ept id=\"p1\">**</ept>, but use <ph id=\"ph2\">`SetExtendedStyle`</ph> to set such styles as <bpt id=\"p2\">**</bpt>TCS_EX_FLATSEPARATORS<ept id=\"p2\">**</ept>.","pos":[10685,10833],"source":" For example, use `CreateEx` to set such styles as **WS_EX_CONTEXTHELP**, but use `SetExtendedStyle` to set such styles as **TCS_EX_FLATSEPARATORS**."},{"content":"For more information, see the styles described in <bpt id=\"p1\">[</bpt>Tab Control Extended Styles<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb760546)</ept> in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","pos":[10834,11033],"source":" For more information, see the styles described in [Tab Control Extended Styles](http://msdn.microsoft.com/library/windows/desktop/bb760546) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"pos":[11043,11096],"content":"<bpt id=\"p1\">&lt;a name=\"ctabctrl__ctabctrl\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CTabCtrl::CTabCtrl","linkify":"<a name=\"ctabctrl__ctabctrl\"></a>  CTabCtrl::CTabCtrl","source":"<a name=\"ctabctrl__ctabctrl\"></a>  CTabCtrl::CTabCtrl"},{"pos":[11100,11131],"content":"Constructs a <ph id=\"ph1\">`CTabCtrl`</ph> object.","source":"Constructs a `CTabCtrl` object."},{"pos":[11168,11233],"content":"<bpt id=\"p1\">&lt;a name=\"ctabctrl__deleteallitems\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CTabCtrl::DeleteAllItems","linkify":"<a name=\"ctabctrl__deleteallitems\"></a>  CTabCtrl::DeleteAllItems","source":"<a name=\"ctabctrl__deleteallitems\"></a>  CTabCtrl::DeleteAllItems"},{"content":"Removes all items from a tab control.","pos":[11237,11274]},{"pos":[11322,11334],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Nonzero if successful; otherwise 0.","pos":[11338,11373]},{"pos":[11383,11440],"content":"<bpt id=\"p1\">&lt;a name=\"ctabctrl__deleteitem\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CTabCtrl::DeleteItem","linkify":"<a name=\"ctabctrl__deleteitem\"></a>  CTabCtrl::DeleteItem","source":"<a name=\"ctabctrl__deleteitem\"></a>  CTabCtrl::DeleteItem"},{"content":"Removes the specified item from a tab control.","pos":[11444,11490]},{"pos":[11543,11553],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Zero-based value of the item to delete.","pos":[11568,11607]},{"pos":[11617,11629],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Nonzero if successful; otherwise 0.","pos":[11633,11668]},{"pos":[11678,11685],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[11689,11778],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_MFC_CTabCtrl#3<ept id=\"p2\">](../../mfc/reference/codesnippet/cpp/ctabctrl-class_3.cpp)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_MFC_CTabCtrl#3](../../mfc/reference/codesnippet/cpp/ctabctrl-class_3.cpp)]"},{"pos":[11788,11847],"content":"<bpt id=\"p1\">&lt;a name=\"ctabctrl__deselectall\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CTabCtrl::DeselectAll","linkify":"<a name=\"ctabctrl__deselectall\"></a>  CTabCtrl::DeselectAll","source":"<a name=\"ctabctrl__deselectall\"></a>  CTabCtrl::DeselectAll"},{"content":"Resets items in a tab control, clearing any that were pressed.","pos":[11851,11913]},{"pos":[11976,11986],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"<bpt id=\"p1\">*</bpt>fExcludeFocus<ept id=\"p1\">*</ept>","pos":[11990,12005],"source":"*fExcludeFocus*"},{"content":"Flag that specifies the scope of the item deselection.","pos":[12009,12063]},{"content":"If this parameter is set to <bpt id=\"p1\">**</bpt>FALSE<ept id=\"p1\">**</ept>, all tab buttons will be reset.","pos":[12064,12133],"source":" If this parameter is set to **FALSE**, all tab buttons will be reset."},{"content":"If it is set to <bpt id=\"p1\">**</bpt>TRUE<ept id=\"p1\">**</ept>, then all tab items except for the one currently selected will be reset.","pos":[12134,12231],"source":" If it is set to **TRUE**, then all tab items except for the one currently selected will be reset."},{"pos":[12241,12248],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[12252,12470],"content":"This member function implements the behavior of the Win32 message, <bpt id=\"p1\">[</bpt>TCM_DESELECTALL<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb760579)</ept>, as described in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"This member function implements the behavior of the Win32 message, [TCM_DESELECTALL](http://msdn.microsoft.com/library/windows/desktop/bb760579), as described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"pos":[12480,12533],"content":"<bpt id=\"p1\">&lt;a name=\"ctabctrl__drawitem\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CTabCtrl::DrawItem","linkify":"<a name=\"ctabctrl__drawitem\"></a>  CTabCtrl::DrawItem","source":"<a name=\"ctabctrl__drawitem\"></a>  CTabCtrl::DrawItem"},{"content":"Called by the framework when a visual aspect of an owner-draw tab control changes.","pos":[12537,12619]},{"pos":[12702,12712],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"A pointer to a <bpt id=\"p1\">[</bpt>DRAWITEMSTRUCT<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb775802)</ept> structure describing the item to be painted.","pos":[12738,12874],"source":" A pointer to a [DRAWITEMSTRUCT](http://msdn.microsoft.com/library/windows/desktop/bb775802) structure describing the item to be painted."},{"pos":[12884,12891],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[12895,13006],"content":"The <bpt id=\"p1\">**</bpt>itemAction<ept id=\"p1\">**</ept> member of the <ph id=\"ph1\">`DRAWITEMSTRUCT`</ph> structure defines the drawing action that is to be performed.","source":"The **itemAction** member of the `DRAWITEMSTRUCT` structure defines the drawing action that is to be performed."},{"content":"By default, this member function does nothing.","pos":[13013,13059]},{"content":"Override this member function to implement drawing for an owner-draw <ph id=\"ph1\">`CTabCtrl`</ph> object.","pos":[13060,13147],"source":" Override this member function to implement drawing for an owner-draw `CTabCtrl` object."},{"pos":[13154,13332],"content":"The application should restore all graphics device interface (GDI) objects selected for the display context supplied in <ph id=\"ph1\">`lpDrawItemStruct`</ph> before this member function terminates.","source":"The application should restore all graphics device interface (GDI) objects selected for the display context supplied in `lpDrawItemStruct` before this member function terminates."},{"pos":[13342,13401],"content":"<bpt id=\"p1\">&lt;a name=\"ctabctrl__getcurfocus\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CTabCtrl::GetCurFocus","linkify":"<a name=\"ctabctrl__getcurfocus\"></a>  CTabCtrl::GetCurFocus","source":"<a name=\"ctabctrl__getcurfocus\"></a>  CTabCtrl::GetCurFocus"},{"content":"Retrieves the index of the tab with the current focus.","pos":[13405,13459]},{"pos":[13512,13524],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The zero-based index of the tab with the current focus.","pos":[13528,13583]},{"pos":[13593,13648],"content":"<bpt id=\"p1\">&lt;a name=\"ctabctrl__getcursel\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CTabCtrl::GetCurSel","linkify":"<a name=\"ctabctrl__getcursel\"></a>  CTabCtrl::GetCurSel","source":"<a name=\"ctabctrl__getcursel\"></a>  CTabCtrl::GetCurSel"},{"content":"Retrieves the currently selected tab in a tab control.","pos":[13652,13706]},{"pos":[13757,13769],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Zero-based index of the selected tab if successful or – 1 if no tab is selected.","pos":[13773,13853]},{"pos":[13863,13932],"content":"<bpt id=\"p1\">&lt;a name=\"ctabctrl__getextendedstyle\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CTabCtrl::GetExtendedStyle","linkify":"<a name=\"ctabctrl__getextendedstyle\"></a>  CTabCtrl::GetExtendedStyle","source":"<a name=\"ctabctrl__getextendedstyle\"></a>  CTabCtrl::GetExtendedStyle"},{"content":"Retrieves the extended styles that are currently in use for the tab control.","pos":[13936,14012]},{"pos":[14063,14075],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Represents the extended styles currently in use for the tab control.","pos":[14079,14147]},{"content":"This value is a combination of <bpt id=\"p1\">[</bpt>tab control extended styles<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb760546)</ept>, as described in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","pos":[14148,14342],"source":" This value is a combination of [tab control extended styles](http://msdn.microsoft.com/library/windows/desktop/bb760546), as described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"pos":[14352,14359],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[14363,14585],"content":"This member function implements the behavior of the Win32 message <bpt id=\"p1\">[</bpt>TCM_GETEXTENDEDSTYLE<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb760585)</ept>, as described in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"This member function implements the behavior of the Win32 message [TCM_GETEXTENDEDSTYLE](http://msdn.microsoft.com/library/windows/desktop/bb760585), as described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"pos":[14595,14656],"content":"<bpt id=\"p1\">&lt;a name=\"ctabctrl__getimagelist\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CTabCtrl::GetImageList","linkify":"<a name=\"ctabctrl__getimagelist\"></a>  CTabCtrl::GetImageList","source":"<a name=\"ctabctrl__getimagelist\"></a>  CTabCtrl::GetImageList"},{"content":"Retrieves the image list that's associated with a tab control.","pos":[14660,14722]},{"pos":[14784,14796],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[14800,14883],"content":"If successful, a pointer to the image list of the tab control; otherwise, <bpt id=\"p1\">**</bpt>NULL<ept id=\"p1\">**</ept>.","source":"If successful, a pointer to the image list of the tab control; otherwise, **NULL**."},{"pos":[14893,14944],"content":"<bpt id=\"p1\">&lt;a name=\"ctabctrl__getitem\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CTabCtrl::GetItem","linkify":"<a name=\"ctabctrl__getitem\"></a>  CTabCtrl::GetItem","source":"<a name=\"ctabctrl__getitem\"></a>  CTabCtrl::GetItem"},{"content":"Retrieves information about a tab in a tab control.","pos":[14948,14999]},{"pos":[15087,15097],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Zero-based index of the tab.","pos":[15112,15140]},{"content":"Pointer to a <bpt id=\"p1\">[</bpt>TCITEM<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb760554)</ept> structure, used to specify the information to retrieve.","pos":[15165,15302],"source":" Pointer to a [TCITEM](http://msdn.microsoft.com/library/windows/desktop/bb760554) structure, used to specify the information to retrieve."},{"content":"Also used to receive information about the tab.","pos":[15303,15350]},{"content":"This structure is used with the <ph id=\"ph1\">`InsertItem`</ph>, <ph id=\"ph2\">`GetItem`</ph>, and <ph id=\"ph3\">`SetItem`</ph> member functions.","pos":[15351,15439],"source":" This structure is used with the `InsertItem`, `GetItem`, and `SetItem` member functions."},{"pos":[15449,15461],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[15465,15517],"content":"Returns <bpt id=\"p1\">**</bpt>TRUE<ept id=\"p1\">**</ept> if successful; <bpt id=\"p2\">**</bpt>FALSE<ept id=\"p2\">**</ept> otherwise.","source":"Returns **TRUE** if successful; **FALSE** otherwise."},{"pos":[15527,15534],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"When the message is sent, the <bpt id=\"p1\">**</bpt>mask<ept id=\"p1\">**</ept> member specifies which attributes to return.","pos":[15538,15621],"source":"When the message is sent, the **mask** member specifies which attributes to return."},{"content":"If the <bpt id=\"p1\">**</bpt>mask<ept id=\"p1\">**</ept> member specifies the <ph id=\"ph1\">`TCIF_TEXT`</ph> value, the <bpt id=\"p2\">**</bpt>pszText<ept id=\"p2\">**</ept> member must contain the address of the buffer that receives the item text and the <bpt id=\"p3\">**</bpt>cchTextMax<ept id=\"p3\">**</ept> member must specify the size of the buffer.","pos":[15622,15834],"source":" If the **mask** member specifies the `TCIF_TEXT` value, the **pszText** member must contain the address of the buffer that receives the item text and the **cchTextMax** member must specify the size of the buffer."},{"content":"<bpt id=\"p1\">**</bpt>mask<ept id=\"p1\">**</ept>","pos":[15841,15849],"source":"**mask**"},{"content":"Value specifying which <ph id=\"ph1\">`TCITEM`</ph> structure members to retrieve or set.","pos":[15853,15922],"source":" Value specifying which `TCITEM` structure members to retrieve or set."},{"content":"This member can be zero or a combination of the following values:","pos":[15923,15988]},{"pos":[15996,16040],"content":"<ph id=\"ph1\">`TCIF_TEXT`</ph> The <bpt id=\"p1\">**</bpt>pszText<ept id=\"p1\">**</ept> member is valid.","source":"`TCIF_TEXT` The **pszText** member is valid."},{"pos":[16048,16090],"content":"<ph id=\"ph1\">`TCIF_IMAGE`</ph> The <ph id=\"ph2\">`iImage`</ph> member is valid.","source":"`TCIF_IMAGE` The `iImage` member is valid."},{"pos":[16098,16142],"content":"<ph id=\"ph1\">`TCIF_PARAM`</ph> The <bpt id=\"p1\">**</bpt>lParam<ept id=\"p1\">**</ept> member is valid.","source":"`TCIF_PARAM` The **lParam** member is valid."},{"pos":[16150,16267],"content":"<ph id=\"ph1\">`TCIF_RTLREADING`</ph> The text of <bpt id=\"p1\">**</bpt>pszText<ept id=\"p1\">**</ept> is displayed using right-to-left reading order on Hebrew or Arabic systems.","source":"`TCIF_RTLREADING` The text of **pszText** is displayed using right-to-left reading order on Hebrew or Arabic systems."},{"pos":[16275,16320],"content":"<ph id=\"ph1\">`TCIF_STATE`</ph> The <bpt id=\"p1\">**</bpt>dwState<ept id=\"p1\">**</ept> member is valid.","source":"`TCIF_STATE` The **dwState** member is valid."},{"pos":[16327,16571],"content":"**pszText**  \nPointer to a null-terminated string containing the tab text if the structure contains information about a tab. If the structure is receiving information, this member specifies the address of the buffer that receives the tab text.","leadings":[""," "],"nodes":[{"content":"<bpt id=\"p1\">**</bpt>pszText<ept id=\"p1\">**</ept>","pos":[0,11],"source":"**pszText**"},{"content":"Pointer to a null-terminated string containing the tab text if the structure contains information about a tab. If the structure is receiving information, this member specifies the address of the buffer that receives the tab text.","pos":[14,243],"nodes":[{"content":"Pointer to a null-terminated string containing the tab text if the structure contains information about a tab.","pos":[0,110]},{"content":"If the structure is receiving information, this member specifies the address of the buffer that receives the tab text.","pos":[111,229]}]}]},{"pos":[16578,16711],"content":"**cchTextMax**  \nSize of the buffer pointed to by **pszText**. This member is ignored if the structure is not receiving information.","leadings":[""," "],"nodes":[{"content":"<bpt id=\"p1\">**</bpt>cchTextMax<ept id=\"p1\">**</ept>","pos":[0,14],"source":"**cchTextMax**"},{"content":"Size of the buffer pointed to by **pszText**. This member is ignored if the structure is not receiving information.","pos":[17,132],"nodes":[{"content":"Size of the buffer pointed to by <bpt id=\"p1\">**</bpt>pszText<ept id=\"p1\">**</ept>.","pos":[0,45],"source":"Size of the buffer pointed to by **pszText**."},{"content":"This member is ignored if the structure is not receiving information.","pos":[46,115]}]}]},{"pos":[16718,16811],"content":"`iImage`  \nIndex into the tab control's image list, or – 1 if there is no image for the tab.","leadings":[""," "],"nodes":[{"content":"Index into the tab control's image list, or – 1 if there is no image for the tab.","pos":[11,92]}]},{"pos":[16818,17437],"content":"**lParam**  \nApplication-defined data associated with the tab. If there are more than four bytes of application-defined data per tab, an application must define a structure and use it instead of the `TCITEM` structure. The first member of the application-defined structure must be a [TCITEMHEADER](http://msdn.microsoft.com/library/windows/desktop/bb760556)structure. The **TCITEMHEADER** structure is identical to the `TCITEM` structure, but without the **lParam** member. The difference between the size of your structure and the size of the **TCITEMHEADER** structure should equal the number of extra bytes per tab.","leadings":[""," "],"nodes":[{"content":"<bpt id=\"p1\">**</bpt>lParam<ept id=\"p1\">**</ept>","pos":[0,10],"source":"**lParam**"},{"content":"Application-defined data associated with the tab. If there are more than four bytes of application-defined data per tab, an application must define a structure and use it instead of the `TCITEM` structure. The first member of the application-defined structure must be a [TCITEMHEADER](http://msdn.microsoft.com/library/windows/desktop/bb760556)structure. The **TCITEMHEADER** structure is identical to the `TCITEM` structure, but without the **lParam** member. The difference between the size of your structure and the size of the **TCITEMHEADER** structure should equal the number of extra bytes per tab.","pos":[13,618],"nodes":[{"content":"Application-defined data associated with the tab.","pos":[0,49]},{"content":"If there are more than four bytes of application-defined data per tab, an application must define a structure and use it instead of the <ph id=\"ph1\">`TCITEM`</ph> structure.","pos":[50,205],"source":" If there are more than four bytes of application-defined data per tab, an application must define a structure and use it instead of the `TCITEM` structure."},{"content":"The first member of the application-defined structure must be a <bpt id=\"p1\">[</bpt>TCITEMHEADER<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb760556)</ept>structure.","pos":[206,354],"source":" The first member of the application-defined structure must be a [TCITEMHEADER](http://msdn.microsoft.com/library/windows/desktop/bb760556)structure."},{"content":"The <bpt id=\"p1\">**</bpt>TCITEMHEADER<ept id=\"p1\">**</ept> structure is identical to the <ph id=\"ph1\">`TCITEM`</ph> structure, but without the <bpt id=\"p2\">**</bpt>lParam<ept id=\"p2\">**</ept> member.","pos":[355,460],"source":" The **TCITEMHEADER** structure is identical to the `TCITEM` structure, but without the **lParam** member."},{"content":"The difference between the size of your structure and the size of the <bpt id=\"p1\">**</bpt>TCITEMHEADER<ept id=\"p1\">**</ept> structure should equal the number of extra bytes per tab.","pos":[461,605],"source":" The difference between the size of your structure and the size of the **TCITEMHEADER** structure should equal the number of extra bytes per tab."}]}]},{"pos":[17447,17454],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[17458,17547],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_MFC_CTabCtrl#4<ept id=\"p2\">](../../mfc/reference/codesnippet/cpp/ctabctrl-class_4.cpp)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_MFC_CTabCtrl#4](../../mfc/reference/codesnippet/cpp/ctabctrl-class_4.cpp)]"},{"pos":[17557,17618],"content":"<bpt id=\"p1\">&lt;a name=\"ctabctrl__getitemcount\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CTabCtrl::GetItemCount","linkify":"<a name=\"ctabctrl__getitemcount\"></a>  CTabCtrl::GetItemCount","source":"<a name=\"ctabctrl__getitemcount\"></a>  CTabCtrl::GetItemCount"},{"content":"Retrieves the number of tabs in the tab control.","pos":[17622,17670]},{"pos":[17724,17736],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Number of items in the tab control.","pos":[17740,17775]},{"pos":[17785,17792],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[17797,17924],"content":"See the example for <bpt id=\"p1\">[</bpt>CPropertySheet::GetTabControl<ept id=\"p1\">](../../mfc/reference/cpropertysheet-class.md#cpropertysheet__gettabcontrol)</ept>.","source":"See the example for [CPropertySheet::GetTabControl](../../mfc/reference/cpropertysheet-class.md#cpropertysheet__gettabcontrol)."},{"pos":[17934,17993],"content":"<bpt id=\"p1\">&lt;a name=\"ctabctrl__getitemrect\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CTabCtrl::GetItemRect","linkify":"<a name=\"ctabctrl__getitemrect\"></a>  CTabCtrl::GetItemRect","source":"<a name=\"ctabctrl__getitemrect\"></a>  CTabCtrl::GetItemRect"},{"content":"Retrieves the bounding rectangle for the specified tab in a tab control.","pos":[17997,18069]},{"pos":[18154,18164],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Zero-based index of the tab item.","pos":[18179,18212]},{"content":"Pointer to a <bpt id=\"p1\">[</bpt>RECT<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/dd162897)</ept> structure that receives the bounding rectangle of the tab.","pos":[18231,18369],"source":" Pointer to a [RECT](http://msdn.microsoft.com/library/windows/desktop/dd162897) structure that receives the bounding rectangle of the tab."},{"content":"These coordinates use the viewport's current mapping mode.","pos":[18370,18428]},{"pos":[18438,18450],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Nonzero if successful; otherwise 0.","pos":[18454,18489]},{"pos":[18499,18506],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[18511,18638],"content":"See the example for <bpt id=\"p1\">[</bpt>CPropertySheet::GetTabControl<ept id=\"p1\">](../../mfc/reference/cpropertysheet-class.md#cpropertysheet__gettabcontrol)</ept>.","source":"See the example for [CPropertySheet::GetTabControl](../../mfc/reference/cpropertysheet-class.md#cpropertysheet__gettabcontrol)."},{"pos":[18648,18709],"content":"<bpt id=\"p1\">&lt;a name=\"ctabctrl__getitemstate\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CTabCtrl::GetItemState","linkify":"<a name=\"ctabctrl__getitemstate\"></a>  CTabCtrl::GetItemState","source":"<a name=\"ctabctrl__getitemstate\"></a>  CTabCtrl::GetItemState"},{"pos":[18713,18779],"content":"Retrieves the state of the tab control item identified by <ph id=\"ph1\">`nItem`</ph>.","source":"Retrieves the state of the tab control item identified by `nItem`."},{"pos":[18869,18879],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"The zero-based index number of the item for which to retrieve state information.","pos":[18894,18974]},{"content":"Mask specifying which of the item's state flags to return.","pos":[18993,19051]},{"content":"For a list of values, see the mask member of the <bpt id=\"p1\">[</bpt>TCITEM<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb760554)</ept> structure, as described in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","pos":[19052,19253],"source":" For a list of values, see the mask member of the [TCITEM](http://msdn.microsoft.com/library/windows/desktop/bb760554) structure, as described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"pos":[19263,19275],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A reference to a <ph id=\"ph1\">`DWORD`</ph> value receiving the state information.","pos":[19279,19342],"source":"A reference to a `DWORD` value receiving the state information."},{"content":"Can be one of the following values:","pos":[19343,19378]},{"content":"Value","pos":[19385,19390]},{"content":"Description","pos":[19391,19402]},{"pos":[19441,19463],"content":"<bpt id=\"p1\">**</bpt>TCIS_BUTTONPRESSED<ept id=\"p1\">**</ept>","source":"**TCIS_BUTTONPRESSED**"},{"content":"The tab control item is selected.","pos":[19464,19497]},{"pos":[19502,19522],"content":"<bpt id=\"p1\">**</bpt>TCIS_HIGHLIGHTED<ept id=\"p1\">**</ept>","source":"**TCIS_HIGHLIGHTED**"},{"content":"The tab control item is highlighted, and the tab and text are drawn using the current highlight color.","pos":[19523,19625]},{"content":"When using highlight color, this will be a true interpolation, not a dithered color.","pos":[19626,19710]},{"pos":[19721,19728],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[19732,19813],"content":"An item's state is specified by the <bpt id=\"p1\">**</bpt>dwState<ept id=\"p1\">**</ept> member of the <ph id=\"ph1\">`TCITEM`</ph> structure.","source":"An item's state is specified by the **dwState** member of the `TCITEM` structure."},{"pos":[19823,19882],"content":"<bpt id=\"p1\">&lt;a name=\"ctabctrl__getrowcount\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CTabCtrl::GetRowCount","linkify":"<a name=\"ctabctrl__getrowcount\"></a>  CTabCtrl::GetRowCount","source":"<a name=\"ctabctrl__getrowcount\"></a>  CTabCtrl::GetRowCount"},{"content":"Retrieves the current number of rows in a tab control.","pos":[19886,19940]},{"pos":[19993,20005],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The number of rows of tabs in the tab control.","pos":[20009,20055]},{"pos":[20065,20072],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[20076,20163],"content":"Only tab controls that have the <bpt id=\"p1\">**</bpt>TCS_MULTILINE<ept id=\"p1\">**</ept> style can have multiple rows of tabs.","source":"Only tab controls that have the **TCS_MULTILINE** style can have multiple rows of tabs."},{"pos":[20173,20232],"content":"<bpt id=\"p1\">&lt;a name=\"ctabctrl__gettooltips\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CTabCtrl::GetToolTips","linkify":"<a name=\"ctabctrl__gettooltips\"></a>  CTabCtrl::GetToolTips","source":"<a name=\"ctabctrl__gettooltips\"></a>  CTabCtrl::GetToolTips"},{"content":"Retrieves the handle of the tool tip control associated with a tab control.","pos":[20236,20311]},{"pos":[20374,20386],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[20390,20455],"content":"Handle of the tool tip control if successful; otherwise <bpt id=\"p1\">**</bpt>NULL<ept id=\"p1\">**</ept>.","source":"Handle of the tool tip control if successful; otherwise **NULL**."},{"pos":[20465,20472],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"A tab control creates a tool tip control if it has the <bpt id=\"p1\">**</bpt>TCS_TOOLTIPS<ept id=\"p1\">**</ept> style.","pos":[20476,20554],"source":"A tab control creates a tool tip control if it has the **TCS_TOOLTIPS** style."},{"content":"You can also assign a tool tip control to a tab control by using the <ph id=\"ph1\">`SetToolTips`</ph> member function.","pos":[20555,20654],"source":" You can also assign a tool tip control to a tab control by using the `SetToolTips` member function."},{"pos":[20664,20727],"content":"<bpt id=\"p1\">&lt;a name=\"ctabctrl__highlightitem\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CTabCtrl::HighlightItem","linkify":"<a name=\"ctabctrl__highlightitem\"></a>  CTabCtrl::HighlightItem","source":"<a name=\"ctabctrl__highlightitem\"></a>  CTabCtrl::HighlightItem"},{"content":"Sets the highlight state of a tab item.","pos":[20731,20770]},{"pos":[20858,20868],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Zero-based index of a tab control item.","pos":[20884,20923]},{"content":"Value specifying the highlight state to be set.","pos":[20946,20993]},{"content":"If this value is <bpt id=\"p1\">**</bpt>TRUE<ept id=\"p1\">**</ept>, the tab is highlighted; if <bpt id=\"p2\">**</bpt>FALSE<ept id=\"p2\">**</ept>, the tab is set to its default state.","pos":[20994,21095],"source":" If this value is **TRUE**, the tab is highlighted; if **FALSE**, the tab is set to its default state."},{"pos":[21105,21117],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Nonzero if successful; otherwise zero.","pos":[21121,21159]},{"pos":[21169,21176],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[21180,21383],"content":"This member function implements the Win32 message <bpt id=\"p1\">[</bpt>TCM_HIGHLIGHTITEM<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb760602)</ept>, as described in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"This member function implements the Win32 message [TCM_HIGHLIGHTITEM](http://msdn.microsoft.com/library/windows/desktop/bb760602), as described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"pos":[21393,21444],"content":"<bpt id=\"p1\">&lt;a name=\"ctabctrl__hittest\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CTabCtrl::HitTest","linkify":"<a name=\"ctabctrl__hittest\"></a>  CTabCtrl::HitTest","source":"<a name=\"ctabctrl__hittest\"></a>  CTabCtrl::HitTest"},{"content":"Determines which tab, if any, is at the specified screen position.","pos":[21448,21514]},{"pos":[21590,21600],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Pointer to a <bpt id=\"p1\">[</bpt>TCHITTESTINFO<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb760553)</ept> structure, as described in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>, which specifies the screen position to test.","pos":[21622,21839],"source":" Pointer to a [TCHITTESTINFO](http://msdn.microsoft.com/library/windows/desktop/bb760553) structure, as described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)], which specifies the screen position to test."},{"pos":[21849,21861],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Returns the zero-based index of the tab or – 1 if no tab is at the specified position.","pos":[21865,21951]},{"pos":[21961,22018],"content":"<bpt id=\"p1\">&lt;a name=\"ctabctrl__insertitem\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CTabCtrl::InsertItem","linkify":"<a name=\"ctabctrl__insertitem\"></a>  CTabCtrl::InsertItem","source":"<a name=\"ctabctrl__insertitem\"></a>  CTabCtrl::InsertItem"},{"content":"Inserts a new tab in an existing tab control.","pos":[22022,22067]},{"pos":[22555,22565],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Zero-based index of the new tab.","pos":[22580,22612]},{"content":"Pointer to a <bpt id=\"p1\">[</bpt>TCITEM<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb760554)</ept> structure that specifies the attributes of the tab.","pos":[22637,22770],"source":" Pointer to a [TCITEM](http://msdn.microsoft.com/library/windows/desktop/bb760554) structure that specifies the attributes of the tab."},{"content":"Address of a null-terminated string that contains the text of the tab.","pos":[22791,22861]},{"content":"The zero-based index of an image to insert from an image list.","pos":[22880,22942]},{"content":"Specifies which <ph id=\"ph1\">`TCITEM`</ph> structure attributes to set.","pos":[22960,23013],"source":" Specifies which `TCITEM` structure attributes to set."},{"content":"Can be zero or a combination of the following values:","pos":[23014,23067]},{"pos":[23075,23119],"content":"<ph id=\"ph1\">`TCIF_TEXT`</ph> The <bpt id=\"p1\">**</bpt>pszText<ept id=\"p1\">**</ept> member is valid.","source":"`TCIF_TEXT` The **pszText** member is valid."},{"pos":[23127,23169],"content":"<ph id=\"ph1\">`TCIF_IMAGE`</ph> The <ph id=\"ph2\">`iImage`</ph> member is valid.","source":"`TCIF_IMAGE` The `iImage` member is valid."},{"pos":[23177,23221],"content":"<ph id=\"ph1\">`TCIF_PARAM`</ph> The <bpt id=\"p1\">**</bpt>lParam<ept id=\"p1\">**</ept> member is valid.","source":"`TCIF_PARAM` The **lParam** member is valid."},{"pos":[23229,23346],"content":"<ph id=\"ph1\">`TCIF_RTLREADING`</ph> The text of <bpt id=\"p1\">**</bpt>pszText<ept id=\"p1\">**</ept> is displayed using right-to-left reading order on Hebrew or Arabic systems.","source":"`TCIF_RTLREADING` The text of **pszText** is displayed using right-to-left reading order on Hebrew or Arabic systems."},{"pos":[23354,23399],"content":"<ph id=\"ph1\">`TCIF_STATE`</ph> The <bpt id=\"p1\">**</bpt>dwState<ept id=\"p1\">**</ept> member is valid.","source":"`TCIF_STATE` The **dwState** member is valid."},{"pos":[23406,23467],"content":"`lParam`  \nApplication-defined data associated with the tab.","leadings":[""," "],"nodes":[{"content":"Application-defined data associated with the tab.","pos":[11,60]}]},{"pos":[23474,23681],"content":"`dwState`  \nSpecifies values for the item's states. For more information, see [TCITEM](http://msdn.microsoft.com/library/windows/desktop/bb760554) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].","leadings":[""," "],"nodes":[{"content":"Specifies values for the item's states. For more information, see [TCITEM](http://msdn.microsoft.com/library/windows/desktop/bb760554) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].","pos":[12,206],"nodes":[{"content":"Specifies values for the item's states.","pos":[0,39]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>TCITEM<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb760554)</ept> in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","pos":[40,194],"source":" For more information, see [TCITEM](http://msdn.microsoft.com/library/windows/desktop/bb760554) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."}]}]},{"pos":[23688,23897],"content":"*dwStateMask*  \nSpecifies which states are to be set. For more information, see [TCITEM](http://msdn.microsoft.com/library/windows/desktop/bb760554) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].","leadings":[""," "],"nodes":[{"content":"<bpt id=\"p1\">*</bpt>dwStateMask<ept id=\"p1\">*</ept>","pos":[0,13],"source":"*dwStateMask*"},{"content":"Specifies which states are to be set. For more information, see [TCITEM](http://msdn.microsoft.com/library/windows/desktop/bb760554) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].","pos":[16,208],"nodes":[{"content":"Specifies which states are to be set.","pos":[0,37]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>TCITEM<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb760554)</ept> in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","pos":[38,192],"source":" For more information, see [TCITEM](http://msdn.microsoft.com/library/windows/desktop/bb760554) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."}]}]},{"pos":[23907,23919],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Zero-based index of the new tab if successful; otherwise – 1.","pos":[23923,23984]},{"pos":[23994,24001],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[24005,24094],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>NVC_MFC_CTabCtrl#5<ept id=\"p2\">](../../mfc/reference/codesnippet/cpp/ctabctrl-class_5.cpp)</ept><ept id=\"p1\">]</ept>","source":"[!code-cpp[NVC_MFC_CTabCtrl#5](../../mfc/reference/codesnippet/cpp/ctabctrl-class_5.cpp)]"},{"pos":[24104,24163],"content":"<bpt id=\"p1\">&lt;a name=\"ctabctrl__removeimage\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CTabCtrl::RemoveImage","linkify":"<a name=\"ctabctrl__removeimage\"></a>  CTabCtrl::RemoveImage","source":"<a name=\"ctabctrl__removeimage\"></a>  CTabCtrl::RemoveImage"},{"content":"Removes the specified image from a tab control's image list.","pos":[24167,24227]},{"pos":[24282,24292],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Zero-based index of the image to remove.","pos":[24308,24348]},{"pos":[24358,24365],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The tab control updates each tab's image index so that each tab remains associated with the same image.","pos":[24369,24472]},{"pos":[24482,24541],"content":"<bpt id=\"p1\">&lt;a name=\"ctabctrl__setcurfocus\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CTabCtrl::SetCurFocus","linkify":"<a name=\"ctabctrl__setcurfocus\"></a>  CTabCtrl::SetCurFocus","source":"<a name=\"ctabctrl__setcurfocus\"></a>  CTabCtrl::SetCurFocus"},{"content":"Sets the focus to a specified tab in a tab control.","pos":[24545,24596]},{"pos":[24650,24660],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Specifies the index of the tab that gets the focus.","pos":[24675,24726]},{"pos":[24736,24743],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[24747,24964],"content":"This member function implements the behavior of the Win32 message <bpt id=\"p1\">[</bpt>TCM_SETCURFOCUS<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb760610)</ept>, as described in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"This member function implements the behavior of the Win32 message [TCM_SETCURFOCUS](http://msdn.microsoft.com/library/windows/desktop/bb760610), as described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"pos":[24974,25029],"content":"<bpt id=\"p1\">&lt;a name=\"ctabctrl__setcursel\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CTabCtrl::SetCurSel","linkify":"<a name=\"ctabctrl__setcursel\"></a>  CTabCtrl::SetCurSel","source":"<a name=\"ctabctrl__setcursel\"></a>  CTabCtrl::SetCurSel"},{"content":"Selects a tab in a tab control.","pos":[25033,25064]},{"pos":[25115,25125],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"The zero-based index of the item to be selected.","pos":[25140,25188]},{"pos":[25198,25210],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Zero-based index of the previously selected tab if successful, otherwise – 1.","pos":[25214,25291]},{"pos":[25301,25308],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"A tab control does not send a <bpt id=\"p1\">**</bpt>TCN_SELCHANGING<ept id=\"p1\">**</ept> or <bpt id=\"p2\">**</bpt>TCN_SELCHANGE<ept id=\"p2\">**</ept> notification message when a tab is selected using this function.","pos":[25312,25447],"source":"A tab control does not send a **TCN_SELCHANGING** or **TCN_SELCHANGE** notification message when a tab is selected using this function."},{"content":"These notifications are sent, using <bpt id=\"p1\">**</bpt>WM_NOTIFY<ept id=\"p1\">**</ept>, when the user clicks or uses the keyboard to change tabs.","pos":[25448,25556],"source":" These notifications are sent, using **WM_NOTIFY**, when the user clicks or uses the keyboard to change tabs."},{"pos":[25566,25635],"content":"<bpt id=\"p1\">&lt;a name=\"ctabctrl__setextendedstyle\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CTabCtrl::SetExtendedStyle","linkify":"<a name=\"ctabctrl__setextendedstyle\"></a>  CTabCtrl::SetExtendedStyle","source":"<a name=\"ctabctrl__setextendedstyle\"></a>  CTabCtrl::SetExtendedStyle"},{"content":"Sets the extended styles for a tab control.","pos":[25639,25682]},{"pos":[25776,25786],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Value specifying a combination of tab control extended styles.","pos":[25806,25868]},{"content":"A <ph id=\"ph1\">`DWORD`</ph> value that indicates which styles in <ph id=\"ph2\">`dwNewStyle`</ph> are to be affected.","pos":[25889,25968],"source":" A `DWORD` value that indicates which styles in `dwNewStyle` are to be affected."},{"content":"Only the extended styles in <ph id=\"ph1\">`dwExMask`</ph> will be changed.","pos":[25969,26024],"source":" Only the extended styles in `dwExMask` will be changed."},{"content":"All other styles will be maintained as is.","pos":[26025,26067]},{"content":"If this parameter is zero, then all of the styles in <ph id=\"ph1\">`dwNewStyle`</ph> will be affected.","pos":[26068,26151],"source":" If this parameter is zero, then all of the styles in `dwNewStyle` will be affected."},{"pos":[26161,26173],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[26177,26383],"content":"A <ph id=\"ph1\">`DWORD`</ph> value that contains the previous <bpt id=\"p1\">[</bpt>tab control extended styles<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb760546)</ept>, as described in the <ph id=\"ph2\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"A `DWORD` value that contains the previous [tab control extended styles](http://msdn.microsoft.com/library/windows/desktop/bb760546), as described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"pos":[26393,26405],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[26409,26631],"content":"This member function implements the behavior of the Win32 message <bpt id=\"p1\">[</bpt>TCM_SETEXTENDEDSTYLE<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb760627)</ept>, as described in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"This member function implements the behavior of the Win32 message [TCM_SETEXTENDEDSTYLE](http://msdn.microsoft.com/library/windows/desktop/bb760627), as described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"pos":[26641,26702],"content":"<bpt id=\"p1\">&lt;a name=\"ctabctrl__setimagelist\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CTabCtrl::SetImageList","linkify":"<a name=\"ctabctrl__setimagelist\"></a>  CTabCtrl::SetImageList","source":"<a name=\"ctabctrl__setimagelist\"></a>  CTabCtrl::SetImageList"},{"content":"Assigns an image list to a tab control.","pos":[26706,26745]},{"pos":[26820,26830],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Pointer to the image list to be assigned to the tab control.","pos":[26850,26910]},{"pos":[26920,26932],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[26936,27028],"content":"Returns a pointer to the previous image list or <bpt id=\"p1\">**</bpt>NULL<ept id=\"p1\">**</ept> if there is no previous image list.","source":"Returns a pointer to the previous image list or **NULL** if there is no previous image list."},{"pos":[27038,27089],"content":"<bpt id=\"p1\">&lt;a name=\"ctabctrl__setitem\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CTabCtrl::SetItem","linkify":"<a name=\"ctabctrl__setitem\"></a>  CTabCtrl::SetItem","source":"<a name=\"ctabctrl__setitem\"></a>  CTabCtrl::SetItem"},{"content":"Sets some or all of a tab's attributes.","pos":[27093,27132]},{"pos":[27211,27221],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Zero-based index of the item.","pos":[27236,27265]},{"content":"Pointer to a <bpt id=\"p1\">[</bpt>TCITEM<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb760554)</ept> structure that contains the new item attributes.","pos":[27290,27420],"source":" Pointer to a [TCITEM](http://msdn.microsoft.com/library/windows/desktop/bb760554) structure that contains the new item attributes."},{"content":"The <bpt id=\"p1\">**</bpt>mask<ept id=\"p1\">**</ept> member specifies which attributes to set.","pos":[27421,27475],"source":" The **mask** member specifies which attributes to set."},{"content":"If the <bpt id=\"p1\">**</bpt>mask<ept id=\"p1\">**</ept> member specifies the <ph id=\"ph1\">`TCIF_TEXT`</ph> value, the <bpt id=\"p2\">**</bpt>pszText<ept id=\"p2\">**</ept> member is the address of a null-terminated string and the <bpt id=\"p3\">**</bpt>cchTextMax<ept id=\"p3\">**</ept> member is ignored.","pos":[27476,27639],"source":" If the **mask** member specifies the `TCIF_TEXT` value, the **pszText** member is the address of a null-terminated string and the **cchTextMax** member is ignored."},{"pos":[27649,27661],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Nonzero if successful; otherwise 0.","pos":[27665,27700]},{"pos":[27710,27717],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[27722,27772],"content":"See the example for <bpt id=\"p1\">[</bpt>GetItem<ept id=\"p1\">](#ctabctrl__getitem)</ept>.","source":"See the example for [GetItem](#ctabctrl__getitem)."},{"pos":[27782,27843],"content":"<bpt id=\"p1\">&lt;a name=\"ctabctrl__setitemextra\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CTabCtrl::SetItemExtra","linkify":"<a name=\"ctabctrl__setitemextra\"></a>  CTabCtrl::SetItemExtra","source":"<a name=\"ctabctrl__setitemextra\"></a>  CTabCtrl::SetItemExtra"},{"content":"Sets the number of bytes per tab reserved for application-defined data in a tab control.","pos":[27847,27935]},{"pos":[27991,28001],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"The number of extra bytes to set.","pos":[28017,28050]},{"pos":[28060,28072],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Nonzero if successful; otherwise zero.","pos":[28076,28114]},{"pos":[28124,28131],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[28135,28353],"content":"This member function implements the behavior of the Win32 message <bpt id=\"p1\">[</bpt>TCM_SETITEMEXTRA<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb760633)</ept>, as described in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"This member function implements the behavior of the Win32 message [TCM_SETITEMEXTRA](http://msdn.microsoft.com/library/windows/desktop/bb760633), as described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"pos":[28363,28422],"content":"<bpt id=\"p1\">&lt;a name=\"ctabctrl__setitemsize\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CTabCtrl::SetItemSize","linkify":"<a name=\"ctabctrl__setitemsize\"></a>  CTabCtrl::SetItemSize","source":"<a name=\"ctabctrl__setitemsize\"></a>  CTabCtrl::SetItemSize"},{"content":"Sets the width and height of the tab control items.","pos":[28426,28477]},{"pos":[28533,28543],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"The new width and height, in pixels, of the tab control items.","pos":[28557,28619]},{"pos":[28629,28641],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Returns the old width and height of the tab control items.","pos":[28645,28703]},{"pos":[28713,28774],"content":"<bpt id=\"p1\">&lt;a name=\"ctabctrl__setitemstate\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CTabCtrl::SetItemState","linkify":"<a name=\"ctabctrl__setitemstate\"></a>  CTabCtrl::SetItemState","source":"<a name=\"ctabctrl__setitemstate\"></a>  CTabCtrl::SetItemState"},{"pos":[28778,28839],"content":"Sets the state of the tab control item identified by <ph id=\"ph1\">`nItem`</ph>.","source":"Sets the state of the tab control item identified by `nItem`."},{"pos":[28936,28946],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"The zero-based index number of the item for which to set state information.","pos":[28961,29036]},{"content":"Mask specifying which of the item's state flags to set.","pos":[29055,29110]},{"content":"For a list of values, see the mask member of the <bpt id=\"p1\">[</bpt>TCITEM<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb760554)</ept> structure, as described in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","pos":[29111,29312],"source":" For a list of values, see the mask member of the [TCITEM](http://msdn.microsoft.com/library/windows/desktop/bb760554) structure, as described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"content":"A reference to a <ph id=\"ph1\">`DWORD`</ph> value containing the state information.","pos":[29332,29396],"source":" A reference to a `DWORD` value containing the state information."},{"content":"Can be one of the following values:","pos":[29397,29432]},{"content":"Value","pos":[29439,29444]},{"content":"Description","pos":[29445,29456]},{"pos":[29495,29517],"content":"<bpt id=\"p1\">**</bpt>TCIS_BUTTONPRESSED<ept id=\"p1\">**</ept>","source":"**TCIS_BUTTONPRESSED**"},{"content":"The tab control item is selected.","pos":[29518,29551]},{"pos":[29556,29576],"content":"<bpt id=\"p1\">**</bpt>TCIS_HIGHLIGHTED<ept id=\"p1\">**</ept>","source":"**TCIS_HIGHLIGHTED**"},{"content":"The tab control item is highlighted, and the tab and text are drawn using the current highlight color.","pos":[29577,29679]},{"content":"When using highlight color, this will be a true interpolation, not a dithered color.","pos":[29680,29764]},{"pos":[29775,29787],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Nonzero if successful; otherwise 0.","pos":[29791,29826]},{"pos":[29836,29901],"content":"<bpt id=\"p1\">&lt;a name=\"ctabctrl__setmintabwidth\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CTabCtrl::SetMinTabWidth","linkify":"<a name=\"ctabctrl__setmintabwidth\"></a>  CTabCtrl::SetMinTabWidth","source":"<a name=\"ctabctrl__setmintabwidth\"></a>  CTabCtrl::SetMinTabWidth"},{"content":"Sets the minimum width of items in a tab control.","pos":[29905,29954]},{"pos":[30007,30017],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Minimum width to be set for a tab control item.","pos":[30029,30076]},{"content":"If this parameter is set to -1, the control will use the default tab width.","pos":[30077,30152]},{"pos":[30162,30174],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The previous minimum tab width.","pos":[30178,30209]},{"pos":[30219,30231],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[30235,30455],"content":"This member function implements the behavior of the Win32 message <bpt id=\"p1\">[</bpt>TCM_SETMINTABWIDTH<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb760637)</ept>, as described in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"This member function implements the behavior of the Win32 message [TCM_SETMINTABWIDTH](http://msdn.microsoft.com/library/windows/desktop/bb760637), as described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"pos":[30465,30522],"content":"<bpt id=\"p1\">&lt;a name=\"ctabctrl__setpadding\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CTabCtrl::SetPadding","linkify":"<a name=\"ctabctrl__setpadding\"></a>  CTabCtrl::SetPadding","source":"<a name=\"ctabctrl__setpadding\"></a>  CTabCtrl::SetPadding"},{"content":"Sets the amount of space (padding) around each tab's icon and label in a tab control.","pos":[30526,30611]},{"pos":[30665,30675],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Sets the amount of space (padding) around each tab's icon and label in a tab control.","pos":[30689,30774]},{"pos":[30784,30843],"content":"<bpt id=\"p1\">&lt;a name=\"ctabctrl__settooltips\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>  CTabCtrl::SetToolTips","linkify":"<a name=\"ctabctrl__settooltips\"></a>  CTabCtrl::SetToolTips","source":"<a name=\"ctabctrl__settooltips\"></a>  CTabCtrl::SetToolTips"},{"content":"Assigns a tool tip control to a tab control.","pos":[30847,30891]},{"pos":[30957,30967],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Handle of the tool tip control.","pos":[30984,31015]},{"pos":[31025,31032],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[31036,31133],"content":"You can get the tool tip control associated with a tab control by making a call to <ph id=\"ph1\">`GetToolTips`</ph>.","source":"You can get the tool tip control associated with a tab control by making a call to `GetToolTips`."},{"pos":[31143,31150],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[31155,31282],"content":"See the example for <bpt id=\"p1\">[</bpt>CPropertySheet::GetTabControl<ept id=\"p1\">](../../mfc/reference/cpropertysheet-class.md#cpropertysheet__gettabcontrol)</ept>.","source":"See the example for [CPropertySheet::GetTabControl](../../mfc/reference/cpropertysheet-class.md#cpropertysheet__gettabcontrol)."},{"pos":[31291,31299],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>CWnd Class<ept id=\"p1\">](../../mfc/reference/cwnd-class.md)</ept><ph id=\"ph1\"> </ph>","pos":[31303,31351],"source":"[CWnd Class](../../mfc/reference/cwnd-class.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Hierarchy Chart<ept id=\"p1\">](../../mfc/hierarchy-chart.md)</ept><ph id=\"ph1\"> </ph>","pos":[31354,31403],"source":" [Hierarchy Chart](../../mfc/hierarchy-chart.md) "},{"content":"<bpt id=\"p1\"> [</bpt>CHeaderCtrl Class<ept id=\"p1\">](../../mfc/reference/cheaderctrl-class.md)</ept><ph id=\"ph1\"> </ph>","pos":[31406,31469],"source":" [CHeaderCtrl Class](../../mfc/reference/cheaderctrl-class.md) "},{"content":"<bpt id=\"p1\"> [</bpt>CListCtrl Class<ept id=\"p1\">](../../mfc/reference/clistctrl-class.md)</ept>","pos":[31472,31530],"source":" [CListCtrl Class](../../mfc/reference/clistctrl-class.md)"}],"content":"---\ntitle: \"CTabCtrl Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"CTabCtrl\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"tab controls\"\n  - \"CTabCtrl class, common controls\"\n  - \"CTabCtrl class\"\nms.assetid: 42e4aff6-46ae-4b2c-beaa-d1dce8d82138\ncaps.latest.revision: 21\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# CTabCtrl Class\nProvides the functionality of the Windows common tab control.  \n  \n## Syntax  \n  \n```  \nclass CTabCtrl : public CWnd  \n```  \n  \n## Members  \n  \n### Public Constructors  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CTabCtrl::CTabCtrl](#ctabctrl__ctabctrl)|Constructs a `CTabCtrl` object.|  \n  \n### Public Methods  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CTabCtrl::AdjustRect](#ctabctrl__adjustrect)|Calculates a tab control's display area given a window rectangle, or calculates the window rectangle that would correspond to a given display area.|  \n|[CTabCtrl::Create](#ctabctrl__create)|Creates a tab control and attaches it to an instance of a `CTabCtrl` object.|  \n|[CTabCtrl::CreateEx](#ctabctrl__createex)|Creates a tab control with the specified Windows extended styles and attaches it to an instance of a `CTabCtrl` object.|  \n|[CTabCtrl::DeleteAllItems](#ctabctrl__deleteallitems)|Removes all items from a tab control.|  \n|[CTabCtrl::DeleteItem](#ctabctrl__deleteitem)|Removes an item from a tab control.|  \n|[CTabCtrl::DeselectAll](#ctabctrl__deselectall)|Resets items in a tab control, clearing any that were pressed.|  \n|[CTabCtrl::DrawItem](#ctabctrl__drawitem)|Draws a specified item of a tab control.|  \n|[CTabCtrl::GetCurFocus](#ctabctrl__getcurfocus)|Retrieves the tab with the current focus of a tab control.|  \n|[CTabCtrl::GetCurSel](#ctabctrl__getcursel)|Determines the currently selected tab in a tab control.|  \n|[CTabCtrl::GetExtendedStyle](#ctabctrl__getextendedstyle)|Retrieves the extended styles that are currently in use for the tab control.|  \n|[CTabCtrl::GetImageList](#ctabctrl__getimagelist)|Retrieves the image list associated with a tab control.|  \n|[CTabCtrl::GetItem](#ctabctrl__getitem)|Retrieves information about a tab in a tab control.|  \n|[CTabCtrl::GetItemCount](#ctabctrl__getitemcount)|Retrieves the number of tabs in the tab control.|  \n|[CTabCtrl::GetItemRect](#ctabctrl__getitemrect)|Retrieves the bounding rectangle for a tab in a tab control.|  \n|[CTabCtrl::GetItemState](#ctabctrl__getitemstate)|Retrieves the state of the indicated tab control item.|  \n|[CTabCtrl::GetRowCount](#ctabctrl__getrowcount)|Retrieves the current number of rows of tabs in a tab control.|  \n|[CTabCtrl::GetToolTips](#ctabctrl__gettooltips)|Retrieves the handle of the tool tip control associated with a tab control.|  \n|[CTabCtrl::HighlightItem](#ctabctrl__highlightitem)|Sets the highlight state of a tab item.|  \n|[CTabCtrl::HitTest](#ctabctrl__hittest)|Determines which tab, if any, is at a specified screen position.|  \n|[CTabCtrl::InsertItem](#ctabctrl__insertitem)|Inserts a new tab in a tab control.|  \n|[CTabCtrl::RemoveImage](#ctabctrl__removeimage)|Removes an image from a tab control's image list.|  \n|[CTabCtrl::SetCurFocus](#ctabctrl__setcurfocus)|Sets the focus to a specified tab in a tab control.|  \n|[CTabCtrl::SetCurSel](#ctabctrl__setcursel)|Selects a tab in a tab control.|  \n|[CTabCtrl::SetExtendedStyle](#ctabctrl__setextendedstyle)|Sets the extended styles for a tab control.|  \n|[CTabCtrl::SetImageList](#ctabctrl__setimagelist)|Assigns an image list to a tab control.|  \n|[CTabCtrl::SetItem](#ctabctrl__setitem)|Sets some or all of a tab's attributes.|  \n|[CTabCtrl::SetItemExtra](#ctabctrl__setitemextra)|Sets the number of bytes per tab reserved for application-defined data in a tab control.|  \n|[CTabCtrl::SetItemSize](#ctabctrl__setitemsize)|Sets the width and height of an item.|  \n|[CTabCtrl::SetItemState](#ctabctrl__setitemstate)|Sets the state of the indicated tab control item.|  \n|[CTabCtrl::SetMinTabWidth](#ctabctrl__setmintabwidth)|Sets the minimum width of items in a tab control.|  \n|[CTabCtrl::SetPadding](#ctabctrl__setpadding)|Sets the amount of space (padding) around each tab's icon and label in a tab control.|  \n|[CTabCtrl::SetToolTips](#ctabctrl__settooltips)|Assigns a tool tip control to a tab control.|  \n  \n## Remarks  \n A \"tab control\" is analogous to the dividers in a notebook or the labels in a file cabinet. By using a tab control, an application can define multiple pages for the same area of a window or dialog box. Each page consists of a set of information or a group of controls that the application displays when the user selects the corresponding tab. A special type of tab control displays tabs that look like buttons. Clicking a button should immediately perform a command instead of displaying a page.  \n  \n This control (and therefore the `CTabCtrl` class) is available only to programs running under Windows 95/98 and Windows NT version 3.51 and later.  \n  \n For more information on using `CTabCtrl`, see [Controls](../../mfc/controls-mfc.md) and [Using CTabCtrl](../../mfc/using-ctabctrl.md).  \n  \n## Inheritance Hierarchy  \n [CObject](../../mfc/reference/cobject-class.md)  \n  \n [CCmdTarget](../../mfc/reference/ccmdtarget-class.md)  \n  \n [CWnd](../../mfc/reference/cwnd-class.md)  \n  \n `CTabCtrl`  \n  \n## Requirements  \n **Header:** afxcmn.h  \n  \n##  <a name=\"ctabctrl__adjustrect\"></a>  CTabCtrl::AdjustRect  \n Calculates a tab control's display area given a window rectangle, or calculates the window rectangle that would correspond to a given display area.  \n  \n```  \nvoid AdjustRect(\n    BOOL bLarger,   LPRECT lpRect);\n```  \n  \n### Parameters  \n `bLarger`  \n Indicates which operation to perform. If this parameter is **TRUE**, `lpRect` specifies a display rectangle and receives the corresponding window rectangle. If this parameter is **FALSE**, `lpRect` specifies a window rectangle and receives the corresponding display rectangle.  \n  \n `lpRect`  \n Pointer to a [RECT](http://msdn.microsoft.com/library/windows/desktop/dd162897) structure that specifies the given rectangle and receives the calculated rectangle.  \n  \n### Example  \n [!code-cpp[NVC_MFC_CTabCtrl#1](../../mfc/reference/codesnippet/cpp/ctabctrl-class_1.cpp)]  \n  \n##  <a name=\"ctabctrl__create\"></a>  CTabCtrl::Create  \n Creates a tab control and attaches it to an instance of a `CTabCtrl` object.  \n  \n```  \nvirtual BOOL Create(\n    DWORD dwStyle,\n    const RECT& rect,\n    CWnd* pParentWnd,\n    UINT nID);\n```  \n  \n### Parameters  \n `dwStyle`  \n Specifies the tab control's style. Apply any combination of [tab control styles](http://msdn.microsoft.com/library/windows/desktop/bb760549), described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]. See **Remarks** for a list of window styles that you can also apply to the control.  \n  \n `rect`  \n Specifies the tab control's size and position. It can be either a [CRect](../../atl-mfc-shared/reference/crect-class.md) object or a [RECT](http://msdn.microsoft.com/library/windows/desktop/dd162897) structure.  \n  \n `pParentWnd`  \n Specifies the tab control's parent window, usually a `CDialog`. It must not be **NULL**.  \n  \n `nID`  \n Specifies the tab control's ID.  \n  \n### Return Value  \n **TRUE** if initialization of the object was successful; otherwise **FALSE**.  \n  \n### Remarks  \n You construct a `CTabCtrl` object in two steps. First, call the constructor, and then call **Create**, which creates the tab control and attaches it to the `CTabCtrl` object.  \n  \n In addition to tab control styles, you can apply the following window styles to a tab control:  \n  \n- **WS_CHILD** Creates a child window that represents the tab control. Cannot be used with the `WS_POPUP` style.  \n  \n- **WS_VISIBLE** Creates a tab control that is initially visible.  \n  \n- **WS_DISABLED** Creates a window that is initially disabled.  \n  \n- **WS_GROUP** Specifies the first control of a group of controls in which the user can move from one control to the next with the arrow keys. All controls defined with the **WS_GROUP** style after the first control belong to the same group. The next control with the **WS_GROUP** style ends the style group and starts the next group (that is, one group ends where the next begins).  \n  \n- **WS_TABSTOP** Specifies one of any number of controls through which the user can move by using the TAB key. The TAB key moves the user to the next control specified by the **WS_TABSTOP** style.  \n  \n To create a tab control with extended window styles, call [CTabCtrl::CreateEx](#ctabctrl__createex) instead of **Create**.  \n  \n### Example  \n [!code-cpp[NVC_MFC_CTabCtrl#2](../../mfc/reference/codesnippet/cpp/ctabctrl-class_2.cpp)]  \n  \n##  <a name=\"ctabctrl__createex\"></a>  CTabCtrl::CreateEx  \n Creates a control (a child window) and associates it with the `CTabCtrl` object.  \n  \n```  \nvirtual BOOL CreateEx(\n    DWORD dwExStyle,\n    DWORD dwStyle,\n    const RECT& rect,\n    CWnd* pParentWnd,\n    UINT nID);\n```  \n  \n### Parameters  \n `dwExStyle`  \n Specifies the extended style of the control being created. For a list of extended Windows styles, see the `dwExStyle` parameter for [CreateWindowEx](http://msdn.microsoft.com/library/windows/desktop/ms632680) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n `dwStyle`  \n Specifies the tab control's style. Apply any combination of [tab control styles](http://msdn.microsoft.com/library/windows/desktop/bb760549), described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]. See **Remarks** in [Create](#ctabctrl__create) for a list of window styles that you can also apply to the control.  \n  \n `rect`  \n A reference to a [RECT](http://msdn.microsoft.com/library/windows/desktop/dd162897) structure describing the size and position of the window to be created, in client coordinates of `pParentWnd`.  \n  \n `pParentWnd`  \n A pointer to the window that is the control's parent.  \n  \n `nID`  \n The control's child-window ID.  \n  \n### Return Value  \n Nonzero if successful otherwise 0.  \n  \n### Remarks  \n Use `CreateEx` instead of [Create](#ctabctrl__create) to apply extended Windows styles, specified by the Windows extended style preface **WS_EX_**.  \n  \n `CreateEx` creates the control with the extended Windows styles specified by `dwExStyle`. Set extended styles specific to a control using [SetExtendedStyle](#ctabctrl__setextendedstyle). For example, use `CreateEx` to set such styles as **WS_EX_CONTEXTHELP**, but use `SetExtendedStyle` to set such styles as **TCS_EX_FLATSEPARATORS**. For more information, see the styles described in [Tab Control Extended Styles](http://msdn.microsoft.com/library/windows/desktop/bb760546) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n##  <a name=\"ctabctrl__ctabctrl\"></a>  CTabCtrl::CTabCtrl  \n Constructs a `CTabCtrl` object.  \n  \n```  \nCTabCtrl();\n```  \n  \n##  <a name=\"ctabctrl__deleteallitems\"></a>  CTabCtrl::DeleteAllItems  \n Removes all items from a tab control.  \n  \n```  \nBOOL DeleteAllItems();\n```  \n  \n### Return Value  \n Nonzero if successful; otherwise 0.  \n  \n##  <a name=\"ctabctrl__deleteitem\"></a>  CTabCtrl::DeleteItem  \n Removes the specified item from a tab control.  \n  \n```  \nBOOL DeleteItem(int nItem);\n```  \n  \n### Parameters  \n `nItem`  \n Zero-based value of the item to delete.  \n  \n### Return Value  \n Nonzero if successful; otherwise 0.  \n  \n### Example  \n [!code-cpp[NVC_MFC_CTabCtrl#3](../../mfc/reference/codesnippet/cpp/ctabctrl-class_3.cpp)]  \n  \n##  <a name=\"ctabctrl__deselectall\"></a>  CTabCtrl::DeselectAll  \n Resets items in a tab control, clearing any that were pressed.  \n  \n```  \nvoid DeselectAll(BOOL fExcludeFocus);\n```  \n  \n### Parameters  \n *fExcludeFocus*  \n Flag that specifies the scope of the item deselection. If this parameter is set to **FALSE**, all tab buttons will be reset. If it is set to **TRUE**, then all tab items except for the one currently selected will be reset.  \n  \n### Remarks  \n This member function implements the behavior of the Win32 message, [TCM_DESELECTALL](http://msdn.microsoft.com/library/windows/desktop/bb760579), as described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n##  <a name=\"ctabctrl__drawitem\"></a>  CTabCtrl::DrawItem  \n Called by the framework when a visual aspect of an owner-draw tab control changes.  \n  \n```  \nvirtual void DrawItem(LPDRAWITEMSTRUCT lpDrawItemStruct);\n```  \n  \n### Parameters  \n `lpDrawItemStruct`  \n A pointer to a [DRAWITEMSTRUCT](http://msdn.microsoft.com/library/windows/desktop/bb775802) structure describing the item to be painted.  \n  \n### Remarks  \n The **itemAction** member of the `DRAWITEMSTRUCT` structure defines the drawing action that is to be performed.  \n  \n By default, this member function does nothing. Override this member function to implement drawing for an owner-draw `CTabCtrl` object.  \n  \n The application should restore all graphics device interface (GDI) objects selected for the display context supplied in `lpDrawItemStruct` before this member function terminates.  \n  \n##  <a name=\"ctabctrl__getcurfocus\"></a>  CTabCtrl::GetCurFocus  \n Retrieves the index of the tab with the current focus.  \n  \n```  \nint GetCurFocus() const;\n\n \n```  \n  \n### Return Value  \n The zero-based index of the tab with the current focus.  \n  \n##  <a name=\"ctabctrl__getcursel\"></a>  CTabCtrl::GetCurSel  \n Retrieves the currently selected tab in a tab control.  \n  \n```  \nint GetCurSel() const;\n\n \n```  \n  \n### Return Value  \n Zero-based index of the selected tab if successful or – 1 if no tab is selected.  \n  \n##  <a name=\"ctabctrl__getextendedstyle\"></a>  CTabCtrl::GetExtendedStyle  \n Retrieves the extended styles that are currently in use for the tab control.  \n  \n```  \nDWORD GetExtendedStyle();\n```  \n  \n### Return Value  \n Represents the extended styles currently in use for the tab control. This value is a combination of [tab control extended styles](http://msdn.microsoft.com/library/windows/desktop/bb760546), as described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n### Remarks  \n This member function implements the behavior of the Win32 message [TCM_GETEXTENDEDSTYLE](http://msdn.microsoft.com/library/windows/desktop/bb760585), as described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n##  <a name=\"ctabctrl__getimagelist\"></a>  CTabCtrl::GetImageList  \n Retrieves the image list that's associated with a tab control.  \n  \n```  \nCImageList* GetImageList() const;\n\n \n```  \n  \n### Return Value  \n If successful, a pointer to the image list of the tab control; otherwise, **NULL**.  \n  \n##  <a name=\"ctabctrl__getitem\"></a>  CTabCtrl::GetItem  \n Retrieves information about a tab in a tab control.  \n  \n```  \nBOOL GetItem(\n    int nItem,   TCITEM* pTabCtrlItem) const;\n\n \n```  \n  \n### Parameters  \n `nItem`  \n Zero-based index of the tab.  \n  \n `pTabCtrlItem`  \n Pointer to a [TCITEM](http://msdn.microsoft.com/library/windows/desktop/bb760554) structure, used to specify the information to retrieve. Also used to receive information about the tab. This structure is used with the `InsertItem`, `GetItem`, and `SetItem` member functions.  \n  \n### Return Value  \n Returns **TRUE** if successful; **FALSE** otherwise.  \n  \n### Remarks  \n When the message is sent, the **mask** member specifies which attributes to return. If the **mask** member specifies the `TCIF_TEXT` value, the **pszText** member must contain the address of the buffer that receives the item text and the **cchTextMax** member must specify the size of the buffer.  \n  \n **mask**  \n Value specifying which `TCITEM` structure members to retrieve or set. This member can be zero or a combination of the following values:  \n  \n- `TCIF_TEXT` The **pszText** member is valid.  \n  \n- `TCIF_IMAGE` The `iImage` member is valid.  \n  \n- `TCIF_PARAM` The **lParam** member is valid.  \n  \n- `TCIF_RTLREADING` The text of **pszText** is displayed using right-to-left reading order on Hebrew or Arabic systems.  \n  \n- `TCIF_STATE` The **dwState** member is valid.  \n  \n **pszText**  \n Pointer to a null-terminated string containing the tab text if the structure contains information about a tab. If the structure is receiving information, this member specifies the address of the buffer that receives the tab text.  \n  \n **cchTextMax**  \n Size of the buffer pointed to by **pszText**. This member is ignored if the structure is not receiving information.  \n  \n `iImage`  \n Index into the tab control's image list, or – 1 if there is no image for the tab.  \n  \n **lParam**  \n Application-defined data associated with the tab. If there are more than four bytes of application-defined data per tab, an application must define a structure and use it instead of the `TCITEM` structure. The first member of the application-defined structure must be a [TCITEMHEADER](http://msdn.microsoft.com/library/windows/desktop/bb760556)structure. The **TCITEMHEADER** structure is identical to the `TCITEM` structure, but without the **lParam** member. The difference between the size of your structure and the size of the **TCITEMHEADER** structure should equal the number of extra bytes per tab.  \n  \n### Example  \n [!code-cpp[NVC_MFC_CTabCtrl#4](../../mfc/reference/codesnippet/cpp/ctabctrl-class_4.cpp)]  \n  \n##  <a name=\"ctabctrl__getitemcount\"></a>  CTabCtrl::GetItemCount  \n Retrieves the number of tabs in the tab control.  \n  \n```  \nint GetItemCount() const;\n\n \n```  \n  \n### Return Value  \n Number of items in the tab control.  \n  \n### Example  \n  See the example for [CPropertySheet::GetTabControl](../../mfc/reference/cpropertysheet-class.md#cpropertysheet__gettabcontrol).  \n  \n##  <a name=\"ctabctrl__getitemrect\"></a>  CTabCtrl::GetItemRect  \n Retrieves the bounding rectangle for the specified tab in a tab control.  \n  \n```  \nBOOL GetItemRect(\n    int nItem,   LPRECT lpRect) const;\n\n \n```  \n  \n### Parameters  \n `nItem`  \n Zero-based index of the tab item.  \n  \n `lpRect`  \n Pointer to a [RECT](http://msdn.microsoft.com/library/windows/desktop/dd162897) structure that receives the bounding rectangle of the tab. These coordinates use the viewport's current mapping mode.  \n  \n### Return Value  \n Nonzero if successful; otherwise 0.  \n  \n### Example  \n  See the example for [CPropertySheet::GetTabControl](../../mfc/reference/cpropertysheet-class.md#cpropertysheet__gettabcontrol).  \n  \n##  <a name=\"ctabctrl__getitemstate\"></a>  CTabCtrl::GetItemState  \n Retrieves the state of the tab control item identified by `nItem`.  \n  \n```  \nDWORD GetItemState(\n    int nItem,  \n    DWORD dwMask) const;\n\n \n```  \n  \n### Parameters  \n `nItem`  \n The zero-based index number of the item for which to retrieve state information.  \n  \n `dwMask`  \n Mask specifying which of the item's state flags to return. For a list of values, see the mask member of the [TCITEM](http://msdn.microsoft.com/library/windows/desktop/bb760554) structure, as described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n### Return Value  \n A reference to a `DWORD` value receiving the state information. Can be one of the following values:  \n  \n|Value|Description|  \n|-----------|-----------------|  \n|**TCIS_BUTTONPRESSED**|The tab control item is selected.|  \n|**TCIS_HIGHLIGHTED**|The tab control item is highlighted, and the tab and text are drawn using the current highlight color. When using highlight color, this will be a true interpolation, not a dithered color.|  \n  \n### Remarks  \n An item's state is specified by the **dwState** member of the `TCITEM` structure.  \n  \n##  <a name=\"ctabctrl__getrowcount\"></a>  CTabCtrl::GetRowCount  \n Retrieves the current number of rows in a tab control.  \n  \n```  \nint GetRowCount() const;\n\n \n```  \n  \n### Return Value  \n The number of rows of tabs in the tab control.  \n  \n### Remarks  \n Only tab controls that have the **TCS_MULTILINE** style can have multiple rows of tabs.  \n  \n##  <a name=\"ctabctrl__gettooltips\"></a>  CTabCtrl::GetToolTips  \n Retrieves the handle of the tool tip control associated with a tab control.  \n  \n```  \nCToolTipCtrl* GetToolTips() const;\n\n \n```  \n  \n### Return Value  \n Handle of the tool tip control if successful; otherwise **NULL**.  \n  \n### Remarks  \n A tab control creates a tool tip control if it has the **TCS_TOOLTIPS** style. You can also assign a tool tip control to a tab control by using the `SetToolTips` member function.  \n  \n##  <a name=\"ctabctrl__highlightitem\"></a>  CTabCtrl::HighlightItem  \n Sets the highlight state of a tab item.  \n  \n```  \nBOOL HighlightItem(\n    int idItem,   BOOL fHighlight = TRUE);\n```  \n  \n### Parameters  \n `idItem`  \n Zero-based index of a tab control item.  \n  \n `fHighlight`  \n Value specifying the highlight state to be set. If this value is **TRUE**, the tab is highlighted; if **FALSE**, the tab is set to its default state.  \n  \n### Return Value  \n Nonzero if successful; otherwise zero.  \n  \n### Remarks  \n This member function implements the Win32 message [TCM_HIGHLIGHTITEM](http://msdn.microsoft.com/library/windows/desktop/bb760602), as described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n##  <a name=\"ctabctrl__hittest\"></a>  CTabCtrl::HitTest  \n Determines which tab, if any, is at the specified screen position.  \n  \n```  \nint HitTest(TCHITTESTINFO* pHitTestInfo) const;\n\n \n```  \n  \n### Parameters  \n `pHitTestInfo`  \n Pointer to a [TCHITTESTINFO](http://msdn.microsoft.com/library/windows/desktop/bb760553) structure, as described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)], which specifies the screen position to test.  \n  \n### Return Value  \n Returns the zero-based index of the tab or – 1 if no tab is at the specified position.  \n  \n##  <a name=\"ctabctrl__insertitem\"></a>  CTabCtrl::InsertItem  \n Inserts a new tab in an existing tab control.  \n  \n```  \nLONG InsertItem(\n    int nItem,\n    TCITEM* pTabCtrlItem);\n\n \nLONG InsertItem(\n    int nItem,\n    LPCTSTR lpszItem);\n\n \nLONG InsertItem(\n    int nItem,\n    LPCTSTR lpszItem,\n    int nImage);\n\n \nLONG InsertItem(\n    UINT nMask,\n    int nItem,\n    LPCTSTR lpszItem,\n    int nImage,\n    LPARAM lParam);\n\n \nLONG InsertItem(\n    UINT nMask,  \n    int nItem,  \n    LPCTSTR lpszItem,  \n    int nImage,  \n    LPARAM lParam,  \n    DWORD dwState,  \n    DWORD dwStateMask);\n```  \n  \n### Parameters  \n `nItem`  \n Zero-based index of the new tab.  \n  \n `pTabCtrlItem`  \n Pointer to a [TCITEM](http://msdn.microsoft.com/library/windows/desktop/bb760554) structure that specifies the attributes of the tab.  \n  \n `lpszItem`  \n Address of a null-terminated string that contains the text of the tab.  \n  \n `nImage`  \n The zero-based index of an image to insert from an image list.  \n  \n `nMask`  \n Specifies which `TCITEM` structure attributes to set. Can be zero or a combination of the following values:  \n  \n- `TCIF_TEXT` The **pszText** member is valid.  \n  \n- `TCIF_IMAGE` The `iImage` member is valid.  \n  \n- `TCIF_PARAM` The **lParam** member is valid.  \n  \n- `TCIF_RTLREADING` The text of **pszText** is displayed using right-to-left reading order on Hebrew or Arabic systems.  \n  \n- `TCIF_STATE` The **dwState** member is valid.  \n  \n `lParam`  \n Application-defined data associated with the tab.  \n  \n `dwState`  \n Specifies values for the item's states. For more information, see [TCITEM](http://msdn.microsoft.com/library/windows/desktop/bb760554) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n *dwStateMask*  \n Specifies which states are to be set. For more information, see [TCITEM](http://msdn.microsoft.com/library/windows/desktop/bb760554) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n### Return Value  \n Zero-based index of the new tab if successful; otherwise – 1.  \n  \n### Example  \n [!code-cpp[NVC_MFC_CTabCtrl#5](../../mfc/reference/codesnippet/cpp/ctabctrl-class_5.cpp)]  \n  \n##  <a name=\"ctabctrl__removeimage\"></a>  CTabCtrl::RemoveImage  \n Removes the specified image from a tab control's image list.  \n  \n```  \nvoid RemoveImage(int nImage);\n```  \n  \n### Parameters  \n `nImage`  \n Zero-based index of the image to remove.  \n  \n### Remarks  \n The tab control updates each tab's image index so that each tab remains associated with the same image.  \n  \n##  <a name=\"ctabctrl__setcurfocus\"></a>  CTabCtrl::SetCurFocus  \n Sets the focus to a specified tab in a tab control.  \n  \n```  \nvoid SetCurFocus(int nItem);\n```  \n  \n### Parameters  \n `nItem`  \n Specifies the index of the tab that gets the focus.  \n  \n### Remarks  \n This member function implements the behavior of the Win32 message [TCM_SETCURFOCUS](http://msdn.microsoft.com/library/windows/desktop/bb760610), as described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n##  <a name=\"ctabctrl__setcursel\"></a>  CTabCtrl::SetCurSel  \n Selects a tab in a tab control.  \n  \n```  \nint SetCurSel(int nItem);\n```  \n  \n### Parameters  \n `nItem`  \n The zero-based index of the item to be selected.  \n  \n### Return Value  \n Zero-based index of the previously selected tab if successful, otherwise – 1.  \n  \n### Remarks  \n A tab control does not send a **TCN_SELCHANGING** or **TCN_SELCHANGE** notification message when a tab is selected using this function. These notifications are sent, using **WM_NOTIFY**, when the user clicks or uses the keyboard to change tabs.  \n  \n##  <a name=\"ctabctrl__setextendedstyle\"></a>  CTabCtrl::SetExtendedStyle  \n Sets the extended styles for a tab control.  \n  \n```  \nDWORD SetExtendedStyle(\n    DWORD dwNewStyle,   DWORD dwExMask = 0);\n```  \n  \n### Parameters  \n `dwNewStyle`  \n Value specifying a combination of tab control extended styles.  \n  \n `dwExMask`  \n A `DWORD` value that indicates which styles in `dwNewStyle` are to be affected. Only the extended styles in `dwExMask` will be changed. All other styles will be maintained as is. If this parameter is zero, then all of the styles in `dwNewStyle` will be affected.  \n  \n### Return Value  \n A `DWORD` value that contains the previous [tab control extended styles](http://msdn.microsoft.com/library/windows/desktop/bb760546), as described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n### Return Value  \n This member function implements the behavior of the Win32 message [TCM_SETEXTENDEDSTYLE](http://msdn.microsoft.com/library/windows/desktop/bb760627), as described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n##  <a name=\"ctabctrl__setimagelist\"></a>  CTabCtrl::SetImageList  \n Assigns an image list to a tab control.  \n  \n```  \nCImageList* SetImageList(CImageList* pImageList);\n```  \n  \n### Parameters  \n `pImageList`  \n Pointer to the image list to be assigned to the tab control.  \n  \n### Return Value  \n Returns a pointer to the previous image list or **NULL** if there is no previous image list.  \n  \n##  <a name=\"ctabctrl__setitem\"></a>  CTabCtrl::SetItem  \n Sets some or all of a tab's attributes.  \n  \n```  \nBOOL SetItem(\n    int nItem,   TCITEM* pTabCtrlItem);\n```  \n  \n### Parameters  \n `nItem`  \n Zero-based index of the item.  \n  \n `pTabCtrlItem`  \n Pointer to a [TCITEM](http://msdn.microsoft.com/library/windows/desktop/bb760554) structure that contains the new item attributes. The **mask** member specifies which attributes to set. If the **mask** member specifies the `TCIF_TEXT` value, the **pszText** member is the address of a null-terminated string and the **cchTextMax** member is ignored.  \n  \n### Return Value  \n Nonzero if successful; otherwise 0.  \n  \n### Example  \n  See the example for [GetItem](#ctabctrl__getitem).  \n  \n##  <a name=\"ctabctrl__setitemextra\"></a>  CTabCtrl::SetItemExtra  \n Sets the number of bytes per tab reserved for application-defined data in a tab control.  \n  \n```  \nBOOL SetItemExtra(int nBytes);\n```  \n  \n### Parameters  \n `nBytes`  \n The number of extra bytes to set.  \n  \n### Return Value  \n Nonzero if successful; otherwise zero.  \n  \n### Remarks  \n This member function implements the behavior of the Win32 message [TCM_SETITEMEXTRA](http://msdn.microsoft.com/library/windows/desktop/bb760633), as described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n##  <a name=\"ctabctrl__setitemsize\"></a>  CTabCtrl::SetItemSize  \n Sets the width and height of the tab control items.  \n  \n```  \nCSize SetItemSize(CSize size);\n```  \n  \n### Parameters  \n `size`  \n The new width and height, in pixels, of the tab control items.  \n  \n### Return Value  \n Returns the old width and height of the tab control items.  \n  \n##  <a name=\"ctabctrl__setitemstate\"></a>  CTabCtrl::SetItemState  \n Sets the state of the tab control item identified by `nItem`.  \n  \n```  \nBOOL SetItemState(\n    int nItem,\n    DWORD dwMask,\n    DWORD dwState);\n```  \n  \n### Parameters  \n `nItem`  \n The zero-based index number of the item for which to set state information.  \n  \n `dwMask`  \n Mask specifying which of the item's state flags to set. For a list of values, see the mask member of the [TCITEM](http://msdn.microsoft.com/library/windows/desktop/bb760554) structure, as described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n `dwState`  \n A reference to a `DWORD` value containing the state information. Can be one of the following values:  \n  \n|Value|Description|  \n|-----------|-----------------|  \n|**TCIS_BUTTONPRESSED**|The tab control item is selected.|  \n|**TCIS_HIGHLIGHTED**|The tab control item is highlighted, and the tab and text are drawn using the current highlight color. When using highlight color, this will be a true interpolation, not a dithered color.|  \n  \n### Return Value  \n Nonzero if successful; otherwise 0.  \n  \n##  <a name=\"ctabctrl__setmintabwidth\"></a>  CTabCtrl::SetMinTabWidth  \n Sets the minimum width of items in a tab control.  \n  \n```  \nint SetMinTabWidth(int cx);\n```  \n  \n### Parameters  \n `cx`  \n Minimum width to be set for a tab control item. If this parameter is set to -1, the control will use the default tab width.  \n  \n### Return Value  \n The previous minimum tab width.  \n  \n### Return Value  \n This member function implements the behavior of the Win32 message [TCM_SETMINTABWIDTH](http://msdn.microsoft.com/library/windows/desktop/bb760637), as described in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n##  <a name=\"ctabctrl__setpadding\"></a>  CTabCtrl::SetPadding  \n Sets the amount of space (padding) around each tab's icon and label in a tab control.  \n  \n```  \nvoid SetPadding(CSize size);\n```  \n  \n### Parameters  \n `size`  \n Sets the amount of space (padding) around each tab's icon and label in a tab control.  \n  \n##  <a name=\"ctabctrl__settooltips\"></a>  CTabCtrl::SetToolTips  \n Assigns a tool tip control to a tab control.  \n  \n```  \nvoid SetToolTips(CToolTipCtrl* pWndTip);\n```  \n  \n### Parameters  \n `pWndTip`  \n Handle of the tool tip control.  \n  \n### Remarks  \n You can get the tool tip control associated with a tab control by making a call to `GetToolTips`.  \n  \n### Example  \n  See the example for [CPropertySheet::GetTabControl](../../mfc/reference/cpropertysheet-class.md#cpropertysheet__gettabcontrol).  \n  \n## See Also  \n [CWnd Class](../../mfc/reference/cwnd-class.md)   \n [Hierarchy Chart](../../mfc/hierarchy-chart.md)   \n [CHeaderCtrl Class](../../mfc/reference/cheaderctrl-class.md)   \n [CListCtrl Class](../../mfc/reference/clistctrl-class.md)\n"}