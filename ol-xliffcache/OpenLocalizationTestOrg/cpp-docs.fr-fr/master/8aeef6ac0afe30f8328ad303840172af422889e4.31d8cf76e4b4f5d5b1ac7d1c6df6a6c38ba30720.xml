{"nodes":[{"pos":[12,81],"content":"3.2.5 omp_test_lock and omp_test_nest_lock Functions | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"3.2.5 omp_test_lock and omp_test_nest_lock Functions | Microsoft Docs","pos":[0,69]}]},{"content":"3.2.5 omp_test_lock and omp_test_nest_lock Functions","pos":[561,613]},{"content":"These functions attempt to set a lock but do not block execution of the thread.","pos":[614,693]},{"content":"The format is as follows:","pos":[694,719]},{"content":"The argument must point to an initialized lock variable.","pos":[848,904]},{"content":"These functions attempt to set a lock in the same manner as <ph id=\"ph1\">`omp_set_lock`</ph> and <ph id=\"ph2\">`omp_set_nest_lock`</ph>, except that they do not block execution of the thread.","pos":[905,1059],"source":" These functions attempt to set a lock in the same manner as `omp_set_lock` and `omp_set_nest_lock`, except that they do not block execution of the thread."},{"pos":[1066,1198],"content":"For a simple lock, the <ph id=\"ph1\">`omp_test_lock`</ph> function returns a nonzero value if the lock is successfully set; otherwise, it returns zero.","source":"For a simple lock, the `omp_test_lock` function returns a nonzero value if the lock is successfully set; otherwise, it returns zero."},{"pos":[1205,1350],"content":"For a nestable lock, the <ph id=\"ph1\">`omp_test_nest_lock`</ph> function returns the new nesting count if the lock is successfully set; otherwise, it returns zero.","source":"For a nestable lock, the `omp_test_nest_lock` function returns the new nesting count if the lock is successfully set; otherwise, it returns zero."}],"content":"---\ntitle: \"3.2.5 omp_test_lock and omp_test_nest_lock Functions | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"C++\"\nms.assetid: 36818945-c22c-4c24-b754-4e73eba6f3f8\ncaps.latest.revision: 6\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# 3.2.5 omp_test_lock and omp_test_nest_lock Functions\nThese functions attempt to set a lock but do not block execution of the thread. The format is as follows:  \n  \n```  \n#include <omp.h>  \nint omp_test_lock(omp_lock_t *lock);  \nint omp_test_nest_lock(omp_nest_lock_t *lock);  \n```  \n  \n The argument must point to an initialized lock variable. These functions attempt to set a lock in the same manner as `omp_set_lock` and `omp_set_nest_lock`, except that they do not block execution of the thread.  \n  \n For a simple lock, the `omp_test_lock` function returns a nonzero value if the lock is successfully set; otherwise, it returns zero.  \n  \n For a nestable lock, the `omp_test_nest_lock` function returns the new nesting count if the lock is successfully set; otherwise, it returns zero."}