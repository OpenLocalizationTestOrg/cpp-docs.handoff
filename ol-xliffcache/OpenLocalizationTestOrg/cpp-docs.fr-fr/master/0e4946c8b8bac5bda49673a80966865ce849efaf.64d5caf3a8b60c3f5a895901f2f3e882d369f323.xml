{"nodes":[{"pos":[12,67],"content":"How to: Consume a C# Indexer (C++-CLI) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"How to: Consume a C# Indexer (C++-CLI) | Microsoft Docs","pos":[0,55]}]},{"content":"How to: Consume a C# Indexer (C++/CLI)","pos":[631,669]},{"content":"Visual C++ does not contain indexers; it has indexed properties.","pos":[670,734]},{"content":"To consume a C# indexer, access the indexer as if it were an indexed property.","pos":[735,813]},{"content":"For more information about indexers, see:","pos":[820,861]},{"content":"Indexers","pos":[872,880]},{"content":"Example","pos":[940,947]},{"content":"The following C# program defines an indexer.","pos":[951,995]},{"content":"Example","pos":[1892,1899]},{"content":"This Visual C++ program consumes the indexer.","pos":[1903,1948]},{"content":"See Also","pos":[2497,2505]},{"content":"Interoperability with Other .NET Languages (C++/CLI)","pos":[2510,2562]}],"content":"---\ntitle: \"How to: Consume a C# Indexer (C++-CLI) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"get-started-article\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"C++, indexers\"\n  - \"indexers, consuming C#\"\nms.assetid: 5a11850c-a1a2-4a0a-b95e-f6dc5a87f439\ncaps.latest.revision: 13\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# How to: Consume a C# Indexer (C++/CLI)\nVisual C++ does not contain indexers; it has indexed properties. To consume a C# indexer, access the indexer as if it were an indexed property.  \n  \n For more information about indexers, see:  \n  \n-   [Indexers](https://msdn.microsoft.com/library/6x16t2tx.aspx)  \n  \n## Example  \n The following C# program defines an indexer.  \n  \n```  \n// consume_cs_indexers.cs  \n// compile with: /target:library  \nusing System;  \npublic class IndexerClass {  \n   private int [] myArray = new int[100];   \n   public int this [int index] {   // Indexer declaration  \n      get {  \n         // Check the index limits.  \n         if (index < 0 || index >= 100)  \n            return 0;  \n         else  \n            return myArray[index];  \n      }  \n      set {  \n         if (!(index < 0 || index >= 100))  \n            myArray[index] = value;  \n      }  \n   }  \n}  \n/*  \n// code to consume the indexer  \npublic class MainClass {  \n   public static void Main() {  \n      IndexerClass b = new IndexerClass();  \n  \n      // Call indexer to initialize elements 3 and 5  \n      b[3] = 256;  \n      b[5] = 1024;  \n      for (int i = 0 ; i <= 10 ; i++)   \n         Console.WriteLine(\"Element #{0} = {1}\", i, b[i]);  \n   }  \n}  \n*/  \n```  \n  \n## Example  \n This Visual C++ program consumes the indexer.  \n  \n```  \n// consume_cs_indexers_2.cpp  \n// compile with: /clr  \n#using \"consume_cs_indexers.dll\"  \nusing namespace System;  \n  \nint main() {  \n   IndexerClass ^ ic = gcnew IndexerClass;  \n   ic->default[0] = 21;  \n   for (int i = 0 ; i <= 10 ; i++)  \n      Console::WriteLine(\"Element #{0} = {1}\", i, ic->default[i]);  \n}  \n```  \n  \n```Output  \nElement #0 = 21  \nElement #1 = 0  \nElement #2 = 0  \nElement #3 = 0  \nElement #4 = 0  \nElement #5 = 0  \nElement #6 = 0  \nElement #7 = 0  \nElement #8 = 0  \nElement #9 = 0  \nElement #10 = 0  \n```  \n  \n## See Also  \n [Interoperability with Other .NET Languages (C++/CLI)](../dotnet/interoperability-with-other-dotnet-languages-cpp-cli.md)"}