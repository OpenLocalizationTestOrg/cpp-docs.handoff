{"nodes":[{"pos":[12,35],"content":"atomic | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"atomic | Microsoft Docs","pos":[0,23]}]},{"content":"atomic","pos":[595,601]},{"content":"Specifies that a memory location that will be updated atomically.","pos":[602,667]},{"content":"Syntax","pos":[676,682]},{"content":"Parameters","pos":[745,755]},{"content":"The statement containing the lvalue whose memory location you want to protect against multiple writes.","pos":[775,877]},{"content":"For more information about legal expression forms, see the OpenMP specification.","pos":[878,958]},{"content":"Remarks","pos":[967,974]},{"pos":[978,1028],"content":"The <ph id=\"ph1\">`atomic`</ph> directive supports no OpenMP clauses.","source":"The `atomic` directive supports no OpenMP clauses."},{"pos":[1035,1138],"content":"For more information, see <bpt id=\"p1\">[</bpt>2.6.4 atomic Construct<ept id=\"p1\">](../../../parallel/openmp/2-6-4-atomic-construct.md)</ept>.","source":"For more information, see [2.6.4 atomic Construct](../../../parallel/openmp/2-6-4-atomic-construct.md)."},{"content":"Example","pos":[1147,1154]},{"content":"See Also","pos":[1523,1531]},{"content":"OpenMP","pos":[1536,1542]}],"content":"---\ntitle: \"atomic | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"atomic\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"atomic OpenMP directive\"\nms.assetid: 275e0338-cf2f-4525-97b5-696250000df7\ncaps.latest.revision: 11\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# atomic\nSpecifies that a memory location that will be updated atomically.  \n  \n## Syntax  \n  \n```  \n#pragma omp atomic  \n   expression  \n```  \n  \n#### Parameters  \n `expression`  \n The statement containing the lvalue whose memory location you want to protect against multiple writes. For more information about legal expression forms, see the OpenMP specification.  \n  \n## Remarks  \n The `atomic` directive supports no OpenMP clauses.  \n  \n For more information, see [2.6.4 atomic Construct](../../../parallel/openmp/2-6-4-atomic-construct.md).  \n  \n## Example  \n  \n```  \n// omp_atomic.cpp  \n// compile with: /openmp   \n#include <stdio.h>  \n#include <omp.h>  \n  \n#define MAX 10  \n  \nint main() {  \n   int count = 0;  \n   #pragma omp parallel num_threads(MAX)  \n   {  \n      #pragma omp atomic  \n      count++;  \n   }  \n   printf_s(\"Number of threads: %d\\n\", count);  \n}  \n```  \n  \n```Output  \nNumber of threads: 10  \n```  \n  \n## See Also  \n [OpenMP](../../../parallel/openmp/openmp-in-visual-cpp.md)"}