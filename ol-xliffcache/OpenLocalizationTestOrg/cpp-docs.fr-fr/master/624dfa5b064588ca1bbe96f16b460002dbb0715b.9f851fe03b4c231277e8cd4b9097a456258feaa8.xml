{"nodes":[{"pos":[12,66],"content":"CMyProviderSession (MyProviderSess.H) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"CMyProviderSession (MyProviderSess.H) | Microsoft Docs","pos":[0,54]}]},{"content":"CMyProviderSession (MyProviderSess.H)","pos":[728,765]},{"content":"MyProviderSess.H contains the declaration and implementation for the OLE DB session object.","pos":[766,857]},{"content":"The data source object creates the session object and represents a conversation between a consumer and provider.","pos":[858,970]},{"content":"Several simultaneous sessions can be open for one data source.","pos":[971,1033]},{"content":"The inheritance list for <ph id=\"ph1\">`CMyProviderSession`</ph> follows:","pos":[1034,1088],"source":" The inheritance list for `CMyProviderSession` follows:"},{"content":"The session object inherits from <bpt id=\"p1\">**</bpt>IGetDataSource<ept id=\"p1\">**</ept>, <ph id=\"ph1\">`IOpenRowset`</ph>, <bpt id=\"p2\">**</bpt>ISessionProperties<ept id=\"p2\">**</ept>, and <bpt id=\"p3\">**</bpt>IDBCreateCommand<ept id=\"p3\">**</ept>.","pos":[1650,1767],"source":"The session object inherits from **IGetDataSource**, `IOpenRowset`, **ISessionProperties**, and **IDBCreateCommand**."},{"content":"The <bpt id=\"p1\">**</bpt>IGetDataSource<ept id=\"p1\">**</ept> interface allows a session to retrieve the data source that created it.","pos":[1768,1862],"source":" The **IGetDataSource** interface allows a session to retrieve the data source that created it."},{"content":"This is useful if you need to get properties from the data source that you created or other information that the data source can provide.","pos":[1863,2000]},{"content":"The <bpt id=\"p1\">**</bpt>ISessionProperties<ept id=\"p1\">**</ept> interface handles all the properties for the session.","pos":[2001,2081],"source":" The **ISessionProperties** interface handles all the properties for the session."},{"content":"The <ph id=\"ph1\">`IOpenRowset`</ph> and <bpt id=\"p1\">**</bpt>IDBCreateCommand<ept id=\"p1\">**</ept> interfaces are used to do the database work.","pos":[2082,2169],"source":" The `IOpenRowset` and **IDBCreateCommand** interfaces are used to do the database work."},{"content":"If the provider supports commands, it implements the <bpt id=\"p1\">**</bpt>IDBCreateCommand<ept id=\"p1\">**</ept> interface.","pos":[2170,2254],"source":" If the provider supports commands, it implements the **IDBCreateCommand** interface."},{"content":"It is used to create the command object that can execute commands.","pos":[2255,2321]},{"content":"The provider always implements the <ph id=\"ph1\">`IOpenRowset`</ph> object.","pos":[2322,2378],"source":" The provider always implements the `IOpenRowset` object."},{"content":"It is used to generate a simple rowset from a provider.","pos":[2379,2434]},{"content":"It is a default rowset (for example, <ph id=\"ph1\">`\"select * from mytable\"`</ph>) from a provider.","pos":[2435,2515],"source":" It is a default rowset (for example, `\"select * from mytable\"`) from a provider."},{"content":"The wizard also generates three session classes: <ph id=\"ph1\">`CMyProviderSessionColSchema`</ph>, <ph id=\"ph2\">`CMyProviderSessionPTSchema`</ph>, and <ph id=\"ph3\">`CMyProviderSessionTRSchema`</ph>.","pos":[2522,2665],"source":"The wizard also generates three session classes: `CMyProviderSessionColSchema`, `CMyProviderSessionPTSchema`, and `CMyProviderSessionTRSchema`."},{"content":"These sessions are used for schema rowsets.","pos":[2666,2709]},{"content":"Schema rowsets allow the provider to return metadata to the consumer without the consumer having to execute a query or fetch data.","pos":[2710,2840]},{"content":"Fetching metadata can be far quicker than discovering a providers capabilities.","pos":[2841,2920]},{"content":"The OLE DB specification requires that providers implementing the <bpt id=\"p1\">**</bpt>IDBSchemaRowset<ept id=\"p1\">**</ept> interface support three schema rowset types: <bpt id=\"p2\">**</bpt>DBSCHEMA_COLUMNS<ept id=\"p2\">**</ept>, <bpt id=\"p3\">**</bpt>DBSCHEMA_PROVIDER_TYPES<ept id=\"p3\">**</ept>, and <ph id=\"ph1\">`DBSCHEMA_TABLES`</ph>.","pos":[2927,3131],"source":"The OLE DB specification requires that providers implementing the **IDBSchemaRowset** interface support three schema rowset types: **DBSCHEMA_COLUMNS**, **DBSCHEMA_PROVIDER_TYPES**, and `DBSCHEMA_TABLES`."},{"content":"The wizard generates implementations for each schema rowset.","pos":[3132,3192]},{"content":"Each class generated by the wizard contains an <ph id=\"ph1\">`Execute`</ph> method.","pos":[3193,3257],"source":" Each class generated by the wizard contains an `Execute` method."},{"content":"In this <ph id=\"ph1\">`Execute`</ph> method, you can return data to the provider about which tables, columns, and data types you support.","pos":[3258,3376],"source":" In this `Execute` method, you can return data to the provider about which tables, columns, and data types you support."},{"content":"This data is usually known at compile time.","pos":[3377,3420]},{"content":"See Also","pos":[3429,3437]},{"content":"Provider Wizard-Generated Files","pos":[3442,3473]}],"content":"---\ntitle: \"CMyProviderSession (MyProviderSess.H) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"cmyprovidersession\"\n  - \"myprovidersess.h\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"CMyProviderSession class in MyProviderSess.H\"\n  - \"OLE DB providers, wizard-generated files\"\nms.assetid: d37ad471-cf05-49c5-aa47-cd10824d777f\ncaps.latest.revision: 7\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# CMyProviderSession (MyProviderSess.H)\nMyProviderSess.H contains the declaration and implementation for the OLE DB session object. The data source object creates the session object and represents a conversation between a consumer and provider. Several simultaneous sessions can be open for one data source. The inheritance list for `CMyProviderSession` follows:  \n  \n```  \n/////////////////////////////////////////////////////////////////////////  \n// CMyProviderSession  \nclass ATL_NO_VTABLE CMyProviderSession :   \n   public CComObjectRootEx<CComSingleThreadModel>,  \n   public IGetDataSourceImpl<CMyProviderSession>,  \n   public IOpenRowsetImpl<CMyProviderSession>,  \n   public ISessionPropertiesImpl<CMyProviderSession>,  \n   public IObjectWithSiteSessionImpl<CMyProviderSession>,  \n   public IDBSchemaRowsetImpl<CMyProviderSession>,  \n   public IDBCreateCommandImpl<CMyProviderSession, CMyProviderCommand>  \n```  \n  \n The session object inherits from **IGetDataSource**, `IOpenRowset`, **ISessionProperties**, and **IDBCreateCommand**. The **IGetDataSource** interface allows a session to retrieve the data source that created it. This is useful if you need to get properties from the data source that you created or other information that the data source can provide. The **ISessionProperties** interface handles all the properties for the session. The `IOpenRowset` and **IDBCreateCommand** interfaces are used to do the database work. If the provider supports commands, it implements the **IDBCreateCommand** interface. It is used to create the command object that can execute commands. The provider always implements the `IOpenRowset` object. It is used to generate a simple rowset from a provider. It is a default rowset (for example, `\"select * from mytable\"`) from a provider.  \n  \n The wizard also generates three session classes: `CMyProviderSessionColSchema`, `CMyProviderSessionPTSchema`, and `CMyProviderSessionTRSchema`. These sessions are used for schema rowsets. Schema rowsets allow the provider to return metadata to the consumer without the consumer having to execute a query or fetch data. Fetching metadata can be far quicker than discovering a providers capabilities.  \n  \n The OLE DB specification requires that providers implementing the **IDBSchemaRowset** interface support three schema rowset types: **DBSCHEMA_COLUMNS**, **DBSCHEMA_PROVIDER_TYPES**, and `DBSCHEMA_TABLES`. The wizard generates implementations for each schema rowset. Each class generated by the wizard contains an `Execute` method. In this `Execute` method, you can return data to the provider about which tables, columns, and data types you support. This data is usually known at compile time.  \n  \n## See Also  \n [Provider Wizard-Generated Files](../../data/oledb/provider-wizard-generated-files.md)"}