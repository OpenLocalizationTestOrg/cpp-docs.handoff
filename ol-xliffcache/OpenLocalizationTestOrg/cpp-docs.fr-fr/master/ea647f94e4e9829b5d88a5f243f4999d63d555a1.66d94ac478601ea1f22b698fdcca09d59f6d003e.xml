{"nodes":[{"pos":[12,53],"content":"do-while Statement (C++) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"do-while Statement (C++) | Microsoft Docs","pos":[0,41]}]},{"content":"do-while Statement (C++)","pos":[785,809]},{"pos":[810,923],"content":"Executes a <bpt id=\"p1\">*</bpt>statement<ept id=\"p1\">*</ept> repeatedly until the specified termination condition (the <bpt id=\"p2\">*</bpt>expression<ept id=\"p2\">*</ept>) evaluates to zero.","source":"Executes a *statement* repeatedly until the specified termination condition (the *expression*) evaluates to zero."},{"content":"Syntax","pos":[932,938]},{"content":"Remarks","pos":[1019,1026]},{"content":"The test of the termination condition is made after each execution of the loop; therefore, a <ph id=\"ph1\">`do-while`</ph> loop executes one or more times, depending on the value of the termination expression.","pos":[1030,1220],"source":"The test of the termination condition is made after each execution of the loop; therefore, a `do-while` loop executes one or more times, depending on the value of the termination expression."},{"content":"The <ph id=\"ph1\">`do-while`</ph> statement can also terminate when a <bpt id=\"p1\">[</bpt>break<ept id=\"p1\">](../cpp/break-statement-cpp.md)</ept>, <bpt id=\"p2\">[</bpt>goto<ept id=\"p2\">](../cpp/goto-statement-cpp.md)</ept>, or <bpt id=\"p3\">[</bpt>return<ept id=\"p3\">](../cpp/return-statement-cpp.md)</ept> statement is executed within the statement body.","pos":[1221,1442],"source":" The `do-while` statement can also terminate when a [break](../cpp/break-statement-cpp.md), [goto](../cpp/goto-statement-cpp.md), or [return](../cpp/return-statement-cpp.md) statement is executed within the statement body."},{"content":"The <bpt id=\"p1\">*</bpt>expression<ept id=\"p1\">*</ept> must have arithmetic or pointer type.","pos":[1449,1503],"source":"The *expression* must have arithmetic or pointer type."},{"content":"Execution proceeds as follows:","pos":[1504,1534]},{"content":"The statement body is executed.","pos":[1544,1575]},{"content":"Next, <bpt id=\"p1\">*</bpt>expression<ept id=\"p1\">*</ept> is evaluated.","pos":[1585,1617],"source":"Next, *expression* is evaluated."},{"content":"If <bpt id=\"p1\">*</bpt>expression<ept id=\"p1\">*</ept> is false, the <ph id=\"ph1\">`do-while`</ph> statement terminates and control passes to the next statement in the program.","pos":[1618,1736],"source":" If *expression* is false, the `do-while` statement terminates and control passes to the next statement in the program."},{"content":"If <bpt id=\"p1\">*</bpt>expression<ept id=\"p1\">*</ept> is true (nonzero), the process is repeated, beginning with step 1.","pos":[1737,1819],"source":" If *expression* is true (nonzero), the process is repeated, beginning with step 1."},{"content":"Example","pos":[1828,1835]},{"pos":[1839,1898],"content":"The following sample demonstrates the <ph id=\"ph1\">`do-while`</ph> statement:","source":"The following sample demonstrates the `do-while` statement:"},{"content":"See Also","pos":[2081,2089]},{"content":"Iteration Statements","pos":[2094,2114]},{"content":"Keywords","pos":[2157,2165]},{"content":"while Statement (C++)","pos":[2196,2217]},{"content":"for Statement (C++)","pos":[2255,2274]},{"content":"Range-based for Statement (C++)","pos":[2310,2341]}],"content":"---\ntitle: \"do-while Statement (C++) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"language-reference\"\nf1_keywords: \n  - \"do-while_cpp\"\n  - \"do-while\"\n  - \"do\"\n  - \"while_cpp\"\n  - \"do_cpp\"\n  - \"while\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"do keyword [C++], do-while\"\n  - \"do-while keyword [C++]\"\n  - \"do keyword [C++]\"\n  - \"while keyword [C++], do-while\"\nms.assetid: e01e6f7c-7da1-4591-87f9-c26ff848e7b0\ncaps.latest.revision: 9\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# do-while Statement (C++)\nExecutes a *statement* repeatedly until the specified termination condition (the *expression*) evaluates to zero.  \n  \n## Syntax  \n  \n```  \n  \n      do  \n   statement  \n   while ( expression ) ;  \n```  \n  \n## Remarks  \n The test of the termination condition is made after each execution of the loop; therefore, a `do-while` loop executes one or more times, depending on the value of the termination expression. The `do-while` statement can also terminate when a [break](../cpp/break-statement-cpp.md), [goto](../cpp/goto-statement-cpp.md), or [return](../cpp/return-statement-cpp.md) statement is executed within the statement body.  \n  \n The *expression* must have arithmetic or pointer type. Execution proceeds as follows:  \n  \n1.  The statement body is executed.  \n  \n2.  Next, *expression* is evaluated. If *expression* is false, the `do-while` statement terminates and control passes to the next statement in the program. If *expression* is true (nonzero), the process is repeated, beginning with step 1.  \n  \n## Example  \n The following sample demonstrates the `do-while` statement:  \n  \n```  \n// do_while_statement.cpp  \n#include <stdio.h>  \nint main()  \n{  \n    int i = 0;  \n    do  \n    {  \n        printf_s(\"\\n%d\",i++);  \n    } while (i < 3);  \n}  \n```  \n  \n## See Also  \n [Iteration Statements](../cpp/iteration-statements-cpp.md)   \n [Keywords](../cpp/keywords-cpp.md)   \n [while Statement (C++)](../cpp/while-statement-cpp.md)   \n [for Statement (C++)](../cpp/for-statement-cpp.md)   \n [Range-based for Statement (C++)](../cpp/range-based-for-statement-cpp.md)"}