{"nodes":[{"pos":[12,61],"content":"CPrivateObjectSecurityDesc Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"CPrivateObjectSecurityDesc Class | Microsoft Docs","pos":[0,49]}]},{"content":"CPrivateObjectSecurityDesc Class","pos":[727,759]},{"content":"This class represents a private object security descriptor object.","pos":[760,826]},{"content":"Syntax","pos":[835,841]},{"content":"Members","pos":[919,926]},{"content":"Public Constructors","pos":[936,955]},{"content":"Name","pos":[962,966]},{"content":"Description","pos":[967,978]},{"content":"CPrivateObjectSecurityDesc::CPrivateObjectSecurityDesc","pos":[1017,1071]},{"content":"The constructor.","pos":[1130,1146]},{"content":"CPrivateObjectSecurityDesc::~CPrivateObjectSecurityDesc","pos":[1152,1207]},{"content":"The destructor.","pos":[1271,1286]},{"content":"Public Methods","pos":[1297,1311]},{"content":"Name","pos":[1318,1322]},{"content":"Description","pos":[1323,1334]},{"content":"CPrivateObjectSecurityDesc::ConvertToAutoInherit","pos":[1373,1421]},{"content":"Call this method to convert a security descriptor and its access-control lists (ACLs) to a format that supports automatic propagation of inheritable access-control entries (ACEs).","pos":[1474,1653]},{"content":"CPrivateObjectSecurityDesc::Create","pos":[1659,1693]},{"content":"Call this method to allocate and initialize a self-relative security descriptor for the private object created by the calling resource manager.","pos":[1732,1875]},{"content":"CPrivateObjectSecurityDesc::Get","pos":[1881,1912]},{"content":"Call this method to retrieve information from a private object's security descriptor.","pos":[1948,2033]},{"content":"CPrivateObjectSecurityDesc::Set","pos":[2039,2070]},{"content":"Call this method to modify a private object's security descriptor.","pos":[2106,2172]},{"content":"Operators","pos":[2183,2192]},{"content":"operator =","pos":[2214,2224]},{"content":"Assignment operator.","pos":[2268,2288]},{"content":"Remarks","pos":[2298,2305]},{"pos":[2309,2482],"content":"This class, derived from <bpt id=\"p1\">[</bpt>CSecurityDesc<ept id=\"p1\">](../../atl/reference/csecuritydesc-class.md)</ept>, provides methods for creating and managing the security descriptor of a private object.","source":"This class, derived from [CSecurityDesc](../../atl/reference/csecuritydesc-class.md), provides methods for creating and managing the security descriptor of a private object."},{"pos":[2489,2689],"content":"For an introduction to the access control model in Windows, see <bpt id=\"p1\">[</bpt>Access Control<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/aa374860)</ept> in the <ph id=\"ph1\">[!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]</ph>.","source":"For an introduction to the access control model in Windows, see [Access Control](http://msdn.microsoft.com/library/windows/desktop/aa374860) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)]."},{"content":"Inheritance Hierarchy","pos":[2698,2719]},{"content":"CSecurityDesc","pos":[2724,2737]},{"content":"Requirements","pos":[2826,2838]},{"pos":[2842,2867],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> atlsecurity.h","source":"**Header:** atlsecurity.h"},{"pos":[2942,2990],"content":"CPrivateObjectSecurityDesc::ConvertToAutoInherit"},{"content":"Call this method to convert a security descriptor and its access-control lists (ACLs) to a format that supports automatic propagation of inheritable access-control entries (ACEs).","pos":[2994,3173]},{"content":"Parameters","pos":[3349,3359]},{"content":"Pointer to a <bpt id=\"p1\">[</bpt>CSecurityDesc<ept id=\"p1\">](../../atl/reference/csecuritydesc-class.md)</ept> object referencing the parent container of the object.","pos":[3376,3503],"source":" Pointer to a [CSecurityDesc](../../atl/reference/csecuritydesc-class.md) object referencing the parent container of the object."},{"content":"If there is no parent container, this parameter is NULL.","pos":[3504,3560]},{"content":"Pointer to a <bpt id=\"p1\">**</bpt>GUID<ept id=\"p1\">**</ept> structure that identifies the type of object associated with the current object.","pos":[3583,3685],"source":" Pointer to a **GUID** structure that identifies the type of object associated with the current object."},{"content":"Set <ph id=\"ph1\">`ObjectType`</ph> to NULL if the object does not have a GUID.","pos":[3686,3746],"source":" Set `ObjectType` to NULL if the object does not have a GUID."},{"content":"Specifies whether the new object can contain other objects.","pos":[3777,3836]},{"content":"A value of true indicates that the new object is a container.","pos":[3837,3898]},{"content":"A value of false indicates that the new object is not a container.","pos":[3899,3965]},{"content":"Pointer to a <bpt id=\"p1\">[</bpt>GENERIC_MAPPING<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/aa446633)</ept> structure that specifies the mapping from each generic right to specific rights for the object.","pos":[3992,4178],"source":" Pointer to a [GENERIC_MAPPING](http://msdn.microsoft.com/library/windows/desktop/aa446633) structure that specifies the mapping from each generic right to specific rights for the object."},{"content":"Return Value","pos":[4188,4200]},{"content":"Returns true on success, false on failure.","pos":[4204,4246]},{"content":"Remarks","pos":[4256,4263]},{"content":"This method attempts to determine whether the ACEs in the discretionary access-control list (DACL) and system access-control list (SACL) of the current security descriptor were inherited from the parent security descriptor.","pos":[4267,4490]},{"content":"It calls the <bpt id=\"p1\">[</bpt>ConvertToAutoInheritPrivateObjectSecurity<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/aa376403)</ept> function.","pos":[4491,4617],"source":" It calls the [ConvertToAutoInheritPrivateObjectSecurity](http://msdn.microsoft.com/library/windows/desktop/aa376403) function."},{"pos":[4698,4752],"content":"CPrivateObjectSecurityDesc::CPrivateObjectSecurityDesc"},{"content":"The constructor.","pos":[4756,4772]},{"content":"Remarks","pos":[4833,4840]},{"pos":[4844,4896],"content":"Initializes the <ph id=\"ph1\">`CPrivateObjectSecurityDesc`</ph> object.","source":"Initializes the `CPrivateObjectSecurityDesc` object."},{"pos":[4982,5037],"content":"CPrivateObjectSecurityDesc::~CPrivateObjectSecurityDesc"},{"content":"The destructor.","pos":[5041,5056]},{"content":"Remarks","pos":[5118,5125]},{"content":"The destructor frees all allocated resources and deletes the private object's security descriptor.","pos":[5129,5227]},{"pos":[5288,5322],"content":"CPrivateObjectSecurityDesc::Create"},{"content":"Call this method to allocate and initialize a self-relative security descriptor for the private object created by the calling resource manager.","pos":[5326,5469]},{"content":"Parameters","pos":[5908,5918]},{"content":"Pointer to a <bpt id=\"p1\">[</bpt>CSecurityDesc<ept id=\"p1\">](../../atl/reference/csecuritydesc-class.md)</ept> object referencing the parent directory in which a new object is being created.","pos":[5935,6087],"source":" Pointer to a [CSecurityDesc](../../atl/reference/csecuritydesc-class.md) object referencing the parent directory in which a new object is being created."},{"content":"Set to NULL if there is no parent directory.","pos":[6088,6132]},{"content":"Pointer to a security descriptor provided by the creator of the object.","pos":[6153,6224]},{"content":"If the object's creator does not explicitly pass security information for the new object, set this parameter to NULL.","pos":[6225,6342]},{"content":"Specifies whether the new object can contain other objects.","pos":[6373,6432]},{"content":"A value of true indicates that the new object is a container.","pos":[6433,6494]},{"content":"A value of false indicates that the new object is not a container.","pos":[6495,6561]},{"content":"Reference to the <bpt id=\"p1\">[</bpt>CAccessToken<ept id=\"p1\">](../../atl/reference/caccesstoken-class.md)</ept> object for the client process on whose behalf the object is being created.","pos":[6579,6728],"source":" Reference to the [CAccessToken](../../atl/reference/caccesstoken-class.md) object for the client process on whose behalf the object is being created."},{"content":"Pointer to a <bpt id=\"p1\">[</bpt>GENERIC_MAPPING<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/aa446633)</ept> structure that specifies the mapping from each generic right to specific rights for the object.","pos":[6755,6941],"source":" Pointer to a [GENERIC_MAPPING](http://msdn.microsoft.com/library/windows/desktop/aa446633) structure that specifies the mapping from each generic right to specific rights for the object."},{"content":"Pointer to a <bpt id=\"p1\">**</bpt>GUID<ept id=\"p1\">**</ept> structure that identifies the type of object associated with the current object.","pos":[6964,7066],"source":" Pointer to a **GUID** structure that identifies the type of object associated with the current object."},{"content":"Set <ph id=\"ph1\">`ObjectType`</ph> to NULL if the object does not have a GUID.","pos":[7067,7127],"source":" Set `ObjectType` to NULL if the object does not have a GUID."},{"content":"bIsContainerObject","pos":[7135,7153]},{"content":"Specifies whether the new object can contain other objects.","pos":[7158,7217]},{"content":"A value of true indicates that the new object is a container.","pos":[7218,7279]},{"content":"A value of false indicates that the new object is not a container.","pos":[7280,7346]},{"content":"A set of bit flags that control how access-control entries (ACEs) are inherited from <ph id=\"ph1\">`pParent`</ph>.","pos":[7375,7470],"source":" A set of bit flags that control how access-control entries (ACEs) are inherited from `pParent`."},{"content":"See <bpt id=\"p1\">[</bpt>CreatePrivateObjectSecurityEx<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/aa446581)</ept> for more details.","pos":[7471,7584],"source":" See [CreatePrivateObjectSecurityEx](http://msdn.microsoft.com/library/windows/desktop/aa446581) for more details."},{"content":"Return Value","pos":[7594,7606]},{"content":"Returns true on success, false on failure.","pos":[7610,7652]},{"content":"Remarks","pos":[7662,7669]},{"pos":[7673,7877],"content":"This method calls <bpt id=\"p1\">[</bpt>CreatePrivateObjectSercurity<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/aa376405)</ept> or <bpt id=\"p2\">[</bpt>CreatePrivateObjectSecurityEx<ept id=\"p2\">](http://msdn.microsoft.com/library/windows/desktop/aa446581)</ept>.","source":"This method calls [CreatePrivateObjectSercurity](http://msdn.microsoft.com/library/windows/desktop/aa376405) or [CreatePrivateObjectSecurityEx](http://msdn.microsoft.com/library/windows/desktop/aa446581)."},{"content":"The second method, which permits specifying the object type GUID of the new object or controlling how ACEs are inherited, is only available on systems running Windows 2000 and later.","pos":[7884,8066]},{"pos":[8074,8222],"content":"[!NOTE]\n A self-relative security descriptor is a security descriptor that stores all of its security information in a contiguous block of memory.","leadings":["","> "],"nodes":[{"content":"A self-relative security descriptor is a security descriptor that stores all of its security information in a contiguous block of memory.","pos":[9,146]}]},{"pos":[8280,8311],"content":"CPrivateObjectSecurityDesc::Get"},{"content":"Call this method to retrieve information from a private object's security descriptor.","pos":[8315,8400]},{"content":"Parameters","pos":[8500,8510]},{"content":"A set of bit flags that indicate the parts of the security descriptor to retrieve.","pos":[8522,8604]},{"content":"This value can be a combination of the <bpt id=\"p1\">[</bpt>SECURITY_INFORMATION<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/aa379573)</ept> bit flags.","pos":[8605,8737],"source":" This value can be a combination of the [SECURITY_INFORMATION](http://msdn.microsoft.com/library/windows/desktop/aa379573) bit flags."},{"content":"Pointer to a <bpt id=\"p1\">[</bpt>CSecurityDesc<ept id=\"p1\">](../../atl/reference/csecuritydesc-class.md)</ept> object that receives a copy of the requested information from the specified security descriptor.","pos":[8757,8926],"source":" Pointer to a [CSecurityDesc](../../atl/reference/csecuritydesc-class.md) object that receives a copy of the requested information from the specified security descriptor."},{"content":"Return Value","pos":[8936,8948]},{"content":"Returns true on success, false on failure.","pos":[8952,8994]},{"content":"Remarks","pos":[9004,9011]},{"content":"The security descriptor is a structure and associated data that contains the security information for a securable object.","pos":[9015,9136]},{"pos":[9202,9240],"content":"CPrivateObjectSecurityDesc::operator ="},{"content":"Assignment operator.","pos":[9244,9264]},{"content":"Parameters","pos":[9377,9387]},{"content":"The <ph id=\"ph1\">`CPrivateObjectSecurityDesc`</ph> object to assign to the current object.","pos":[9400,9472],"source":" The `CPrivateObjectSecurityDesc` object to assign to the current object."},{"content":"Return Value","pos":[9482,9494]},{"pos":[9498,9554],"content":"Returns the updated <ph id=\"ph1\">`CPrivateObjectSecurityDesc`</ph> object.","source":"Returns the updated `CPrivateObjectSecurityDesc` object."},{"pos":[9612,9643],"content":"CPrivateObjectSecurityDesc::Set"},{"content":"Call this method to modify a private object's security descriptor.","pos":[9647,9713]},{"content":"Parameters","pos":[10064,10074]},{"content":"A set of bit flags that indicate the parts of the security descriptor to set.","pos":[10086,10163]},{"content":"This value can be a combination of the <bpt id=\"p1\">[</bpt>SECURITY_INFORMATION<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/aa379573)</ept> bit flags.","pos":[10164,10296],"source":" This value can be a combination of the [SECURITY_INFORMATION](http://msdn.microsoft.com/library/windows/desktop/aa379573) bit flags."},{"content":"Modification","pos":[10304,10316]},{"content":"Pointer to a <bpt id=\"p1\">[</bpt>CSecurityDesc<ept id=\"p1\">](../../atl/reference/csecuritydesc-class.md)</ept> object.","pos":[10321,10401],"source":" Pointer to a [CSecurityDesc](../../atl/reference/csecuritydesc-class.md) object."},{"content":"The parts of this security descriptor indicated by the <ph id=\"ph1\">`si`</ph> parameter are applied to the object's security descriptor.","pos":[10402,10520],"source":" The parts of this security descriptor indicated by the `si` parameter are applied to the object's security descriptor."},{"content":"Pointer to a <bpt id=\"p1\">[</bpt>GENERIC_MAPPING<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/aa446633)</ept> structure that specifies the mapping from each generic right to specific rights for the object.","pos":[10547,10733],"source":" Pointer to a [GENERIC_MAPPING](http://msdn.microsoft.com/library/windows/desktop/aa446633) structure that specifies the mapping from each generic right to specific rights for the object."},{"content":"Reference to the <bpt id=\"p1\">[</bpt>CAccessToken<ept id=\"p1\">](../../atl/reference/caccesstoken-class.md)</ept> object for the client process on whose behalf the object is being created.","pos":[10751,10900],"source":" Reference to the [CAccessToken](../../atl/reference/caccesstoken-class.md) object for the client process on whose behalf the object is being created."},{"content":"A set of bit flags that control how access-control entries (ACEs) are inherited from <ph id=\"ph1\">`pParent`</ph>.","pos":[10929,11024],"source":" A set of bit flags that control how access-control entries (ACEs) are inherited from `pParent`."},{"content":"See <bpt id=\"p1\">[</bpt>CreatePrivateObjectSecurityEx<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/aa446581)</ept> for more details.","pos":[11025,11138],"source":" See [CreatePrivateObjectSecurityEx](http://msdn.microsoft.com/library/windows/desktop/aa446581) for more details."},{"content":"Return Value","pos":[11148,11160]},{"content":"Returns true on success, false on failure.","pos":[11164,11206]},{"content":"Remarks","pos":[11216,11223]},{"content":"The second method, which permits specifying the object type GUID of the object or controlling how ACEs are inherited, is only available on systems running Windows 2000 and later.","pos":[11227,11405]},{"content":"See Also","pos":[11414,11422]},{"content":"SECURITY_DESCRIPTOR","pos":[11427,11446]},{"content":"Class Overview","pos":[11513,11527]},{"content":"Security Global Functions","pos":[11567,11592]},{"content":"CSecurityDesc Class","pos":[11649,11668]}],"content":"---\ntitle: \"CPrivateObjectSecurityDesc Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"ATL.CPrivateObjectSecurityDesc\"\n  - \"ATL::CPrivateObjectSecurityDesc\"\n  - \"CPrivateObjectSecurityDesc\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"CPrivateObjectSecurityDesc class\"\nms.assetid: 2c4bbb13-bf99-4833-912a-197f6815bb5d\ncaps.latest.revision: 20\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# CPrivateObjectSecurityDesc Class\nThis class represents a private object security descriptor object.  \n  \n## Syntax  \n  \n```\nclass CPrivateObjectSecurityDesc : public CSecurityDesc\n```  \n  \n## Members  \n  \n### Public Constructors  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CPrivateObjectSecurityDesc::CPrivateObjectSecurityDesc](#cprivateobjectsecuritydesc__cprivateobjectsecuritydesc)|The constructor.|  \n|[CPrivateObjectSecurityDesc::~CPrivateObjectSecurityDesc](#cprivateobjectsecuritydesc___dtorcprivateobjectsecuritydesc)|The destructor.|  \n  \n### Public Methods  \n  \n|Name|Description|  \n|----------|-----------------|  \n|[CPrivateObjectSecurityDesc::ConvertToAutoInherit](#cprivateobjectsecuritydesc__converttoautoinherit)|Call this method to convert a security descriptor and its access-control lists (ACLs) to a format that supports automatic propagation of inheritable access-control entries (ACEs).|  \n|[CPrivateObjectSecurityDesc::Create](#cprivateobjectsecuritydesc__create)|Call this method to allocate and initialize a self-relative security descriptor for the private object created by the calling resource manager.|  \n|[CPrivateObjectSecurityDesc::Get](#cprivateobjectsecuritydesc__get)|Call this method to retrieve information from a private object's security descriptor.|  \n|[CPrivateObjectSecurityDesc::Set](#cprivateobjectsecuritydesc__set)|Call this method to modify a private object's security descriptor.|  \n  \n### Operators  \n  \n|||  \n|-|-|  \n|[operator =](#cprivateobjectsecuritydesc__operator_eq)|Assignment operator.|  \n  \n## Remarks  \n This class, derived from [CSecurityDesc](../../atl/reference/csecuritydesc-class.md), provides methods for creating and managing the security descriptor of a private object.  \n  \n For an introduction to the access control model in Windows, see [Access Control](http://msdn.microsoft.com/library/windows/desktop/aa374860) in the [!INCLUDE[winSDK](../../atl/includes/winsdk_md.md)].  \n  \n## Inheritance Hierarchy  \n [CSecurityDesc](../../atl/reference/csecuritydesc-class.md)  \n  \n `CPrivateObjectSecurityDesc`  \n  \n## Requirements  \n **Header:** atlsecurity.h  \n  \n##  <a name=\"cprivateobjectsecuritydesc__converttoautoinherit\"></a>  CPrivateObjectSecurityDesc::ConvertToAutoInherit  \n Call this method to convert a security descriptor and its access-control lists (ACLs) to a format that supports automatic propagation of inheritable access-control entries (ACEs).  \n  \n```\nbool ConvertToAutoInherit(const CSecurityDesc* pParent,\n    GUID* ObjectType,\n    bool bIsDirectoryObject,\n    PGENERIC_MAPPING GenericMapping) throw();\n```  \n  \n### Parameters  \n `pParent`  \n Pointer to a [CSecurityDesc](../../atl/reference/csecuritydesc-class.md) object referencing the parent container of the object. If there is no parent container, this parameter is NULL.  \n  \n `ObjectType`  \n Pointer to a **GUID** structure that identifies the type of object associated with the current object. Set `ObjectType` to NULL if the object does not have a GUID.  \n  \n `bIsDirectoryObject`  \n Specifies whether the new object can contain other objects. A value of true indicates that the new object is a container. A value of false indicates that the new object is not a container.  \n  \n `GenericMapping`  \n Pointer to a [GENERIC_MAPPING](http://msdn.microsoft.com/library/windows/desktop/aa446633) structure that specifies the mapping from each generic right to specific rights for the object.  \n  \n### Return Value  \n Returns true on success, false on failure.  \n  \n### Remarks  \n This method attempts to determine whether the ACEs in the discretionary access-control list (DACL) and system access-control list (SACL) of the current security descriptor were inherited from the parent security descriptor. It calls the [ConvertToAutoInheritPrivateObjectSecurity](http://msdn.microsoft.com/library/windows/desktop/aa376403) function.  \n  \n##  <a name=\"cprivateobjectsecuritydesc__cprivateobjectsecuritydesc\"></a>  CPrivateObjectSecurityDesc::CPrivateObjectSecurityDesc  \n The constructor.  \n  \n```\nCPrivateObjectSecurityDesc() throw();\n```  \n  \n### Remarks  \n Initializes the `CPrivateObjectSecurityDesc` object.  \n  \n##  <a name=\"cprivateobjectsecuritydesc___dtorcprivateobjectsecuritydesc\"></a>  CPrivateObjectSecurityDesc::~CPrivateObjectSecurityDesc  \n The destructor.  \n  \n```\n~CPrivateObjectSecurityDesc() throw();\n```  \n  \n### Remarks  \n The destructor frees all allocated resources and deletes the private object's security descriptor.  \n  \n##  <a name=\"cprivateobjectsecuritydesc__create\"></a>  CPrivateObjectSecurityDesc::Create  \n Call this method to allocate and initialize a self-relative security descriptor for the private object created by the calling resource manager.  \n  \n```\nbool Create(const CSecurityDesc* pParent,\n    const CSecurityDesc* pCreator,\n    bool bIsDirectoryObject,\n    const CAccessToken& Token,\n    PGENERIC_MAPPING GenericMapping) throw();\nbool Create(const CSecurityDesc* pParent,\n    const CSecurityDesc* pCreator,\n    GUID* ObjectType,\n    bool bIsContainerObject,\n    ULONG AutoInheritFlags,\n    const CAccessToken& Token,\n    PGENERIC_MAPPING GenericMapping) throw();\n```  \n  \n### Parameters  \n `pParent`  \n Pointer to a [CSecurityDesc](../../atl/reference/csecuritydesc-class.md) object referencing the parent directory in which a new object is being created. Set to NULL if there is no parent directory.  \n  \n `pCreator`  \n Pointer to a security descriptor provided by the creator of the object. If the object's creator does not explicitly pass security information for the new object, set this parameter to NULL.  \n  \n `bIsDirectoryObject`  \n Specifies whether the new object can contain other objects. A value of true indicates that the new object is a container. A value of false indicates that the new object is not a container.  \n  \n `Token`  \n Reference to the [CAccessToken](../../atl/reference/caccesstoken-class.md) object for the client process on whose behalf the object is being created.  \n  \n `GenericMapping`  \n Pointer to a [GENERIC_MAPPING](http://msdn.microsoft.com/library/windows/desktop/aa446633) structure that specifies the mapping from each generic right to specific rights for the object.  \n  \n `ObjectType`  \n Pointer to a **GUID** structure that identifies the type of object associated with the current object. Set `ObjectType` to NULL if the object does not have a GUID.  \n  \n *bIsContainerObject*  \n Specifies whether the new object can contain other objects. A value of true indicates that the new object is a container. A value of false indicates that the new object is not a container.  \n  \n `AutoInheritFlags`  \n A set of bit flags that control how access-control entries (ACEs) are inherited from `pParent`. See [CreatePrivateObjectSecurityEx](http://msdn.microsoft.com/library/windows/desktop/aa446581) for more details.  \n  \n### Return Value  \n Returns true on success, false on failure.  \n  \n### Remarks  \n This method calls [CreatePrivateObjectSercurity](http://msdn.microsoft.com/library/windows/desktop/aa376405) or [CreatePrivateObjectSecurityEx](http://msdn.microsoft.com/library/windows/desktop/aa446581).  \n  \n The second method, which permits specifying the object type GUID of the new object or controlling how ACEs are inherited, is only available on systems running Windows 2000 and later.  \n  \n> [!NOTE]\n>  A self-relative security descriptor is a security descriptor that stores all of its security information in a contiguous block of memory.  \n  \n##  <a name=\"cprivateobjectsecuritydesc__get\"></a>  CPrivateObjectSecurityDesc::Get  \n Call this method to retrieve information from a private object's security descriptor.  \n  \n```\nbool Get(SECURITY_INFORMATION si,\n    CSecurityDesc* pResult) const throw();\n```  \n  \n### Parameters  \n `si`  \n A set of bit flags that indicate the parts of the security descriptor to retrieve. This value can be a combination of the [SECURITY_INFORMATION](http://msdn.microsoft.com/library/windows/desktop/aa379573) bit flags.  \n  \n `pResult`  \n Pointer to a [CSecurityDesc](../../atl/reference/csecuritydesc-class.md) object that receives a copy of the requested information from the specified security descriptor.  \n  \n### Return Value  \n Returns true on success, false on failure.  \n  \n### Remarks  \n The security descriptor is a structure and associated data that contains the security information for a securable object.  \n  \n##  <a name=\"cprivateobjectsecuritydesc__operator_eq\"></a>  CPrivateObjectSecurityDesc::operator =  \n Assignment operator.  \n  \n```\nCPrivateObjectSecurityDesc& operator= (const CPrivateObjectSecurityDesc& rhs) throw(...);\n```  \n  \n### Parameters  \n `rhs`  \n The `CPrivateObjectSecurityDesc` object to assign to the current object.  \n  \n### Return Value  \n Returns the updated `CPrivateObjectSecurityDesc` object.  \n  \n##  <a name=\"cprivateobjectsecuritydesc__set\"></a>  CPrivateObjectSecurityDesc::Set  \n Call this method to modify a private object's security descriptor.  \n  \n```\nbool Set(SECURITY_INFORMATION si,\n    const CSecurityDesc& Modification,\n    PGENERIC_MAPPING GenericMapping,\n    const CAccessToken& Token) throw();\nbool Set(SECURITY_INFORMATION si,\n    const CSecurityDesc& Modification,\n    ULONG AutoInheritFlags,\n    PGENERIC_MAPPING GenericMapping,\n    const CAccessToken& Token) throw();\n```  \n  \n### Parameters  \n `si`  \n A set of bit flags that indicate the parts of the security descriptor to set. This value can be a combination of the [SECURITY_INFORMATION](http://msdn.microsoft.com/library/windows/desktop/aa379573) bit flags.  \n  \n *Modification*  \n Pointer to a [CSecurityDesc](../../atl/reference/csecuritydesc-class.md) object. The parts of this security descriptor indicated by the `si` parameter are applied to the object's security descriptor.  \n  \n `GenericMapping`  \n Pointer to a [GENERIC_MAPPING](http://msdn.microsoft.com/library/windows/desktop/aa446633) structure that specifies the mapping from each generic right to specific rights for the object.  \n  \n `Token`  \n Reference to the [CAccessToken](../../atl/reference/caccesstoken-class.md) object for the client process on whose behalf the object is being created.  \n  \n `AutoInheritFlags`  \n A set of bit flags that control how access-control entries (ACEs) are inherited from `pParent`. See [CreatePrivateObjectSecurityEx](http://msdn.microsoft.com/library/windows/desktop/aa446581) for more details.  \n  \n### Return Value  \n Returns true on success, false on failure.  \n  \n### Remarks  \n The second method, which permits specifying the object type GUID of the object or controlling how ACEs are inherited, is only available on systems running Windows 2000 and later.  \n  \n## See Also  \n [SECURITY_DESCRIPTOR](http://msdn.microsoft.com/library/windows/desktop/aa379561)   \n [Class Overview](../../atl/atl-class-overview.md)   \n [Security Global Functions](../../atl/reference/security-global-functions.md)   \n [CSecurityDesc Class](../../atl/reference/csecuritydesc-class.md)\n"}