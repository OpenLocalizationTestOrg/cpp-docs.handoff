{"nodes":[{"pos":[12,42],"content":"fetestexcept1 | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"fetestexcept1 | Microsoft Docs","pos":[0,30]}]},{"content":"fetestexcept","pos":[960,972]},{"content":"Determines which of the specified floating-point exception status flags are currently set.","pos":[973,1063]},{"content":"Syntax","pos":[1072,1078]},{"content":"Parameters","pos":[1149,1159]},{"content":"A bitwise OR of the floating-point     status flags to test.","pos":[1176,1236]},{"content":"Return Value","pos":[1245,1257]},{"content":"On success, returns a bitmask containing a bitwise OR of the floating-point exception macros that correspond to the exception status flags currently set.","pos":[1261,1414]},{"content":"Returns 0 if none of the exceptions are set.","pos":[1415,1459]},{"content":"Remarks","pos":[1468,1475]},{"content":"Use the fetestexcept function to determine which exceptions were raised by a floating point operation.","pos":[1479,1581]},{"content":"Use the <ph id=\"ph1\">`excepts`</ph> parameter to specify which exception status flags to test.","pos":[1582,1658],"source":" Use the `excepts` parameter to specify which exception status flags to test."},{"content":"The <ph id=\"ph1\">`fetestexcept`</ph> function uses these exception macros defined in <ph id=\"ph2\">\\&lt;</ph>fenv.h&gt; in <ph id=\"ph3\">`excepts`</ph> and the return value:","pos":[1659,1770],"source":" The `fetestexcept` function uses these exception macros defined in \\<fenv.h> in `excepts` and the return value:"},{"content":"Exception Macro","pos":[1777,1792]},{"content":"Description","pos":[1793,1804]},{"content":"FE_DIVBYZERO","pos":[1853,1865]},{"content":"A singularity or pole error occurred in an earlier floating-point operation; an infinity value was created.","pos":[1866,1973]},{"content":"FE_INEXACT","pos":[1978,1988]},{"content":"The function was forced to round the stored result of an earlier floating-point operation.","pos":[1989,2079]},{"content":"FE_INVALID","pos":[2084,2094]},{"content":"A domain error occurred in an earlier floating-point operation.","pos":[2095,2158]},{"content":"FE_OVERFLOW","pos":[2163,2174]},{"content":"A range error occurred; an earlier floating-point operation result was too large to be represented.","pos":[2175,2274]},{"content":"FE_UNDERFLOW","pos":[2279,2291]},{"content":"An earlier floating-point operation result was too small to be represented at full precision; a denormal value was created.","pos":[2292,2415]},{"content":"FE_ALLEXCEPT","pos":[2420,2432]},{"content":"The bitwise OR of all supported floating-point exceptions.","pos":[2433,2491]},{"content":"The specified <ph id=\"ph1\">`excepts`</ph> argument may be 0, one of the supported floating-point exception macros, or the bitwise OR of two or more of the macros.","pos":[2499,2643],"source":"The specified `excepts` argument may be 0, one of the supported floating-point exception macros, or the bitwise OR of two or more of the macros."},{"content":"The effect of any other <ph id=\"ph1\">`excepts`</ph> argument value is undefined.","pos":[2644,2706],"source":" The effect of any other `excepts` argument value is undefined."},{"content":"To use this function, you must turn off floating-point optimizations that could prevent access by using the <ph id=\"ph1\">`#pragma fenv_access(on)`</ph> directive prior to the call.","pos":[2713,2875],"source":"To use this function, you must turn off floating-point optimizations that could prevent access by using the `#pragma fenv_access(on)` directive prior to the call."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>fenv_access<ept id=\"p1\">](../../preprocessor/fenv-access.md)</ept>.","pos":[2876,2951],"source":" For more information, see [fenv_access](../../preprocessor/fenv-access.md)."},{"content":"Requirements","pos":[2960,2972]},{"content":"Function","pos":[2979,2987]},{"content":"C header","pos":[2988,2996]},{"content":"C++ header","pos":[2997,3007]},{"content":"fenv.h&gt;","pos":[3082,3089],"source":"fenv.h>"},{"content":"cfenv&gt;","pos":[3092,3098],"source":"cfenv>"},{"pos":[3106,3210],"content":"For additional compatibility information, see <bpt id=\"p1\">[</bpt>Compatibility<ept id=\"p1\">](../../c-runtime-library/compatibility.md)</ept>.","source":"For additional compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md)."},{"content":"See Also","pos":[3219,3227]},{"content":"Alphabetical Function Reference","pos":[3232,3263]},{"content":"feclearexcept","pos":[3344,3357]},{"content":"feraiseexcept","pos":[3417,3430]}],"content":"---\ntitle: \"fetestexcept1 | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"cpp\"\n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\napiname: \n  - \"fetestexcept\"\napilocation: \n  - \"msvcrt.dll\"\n  - \"msvcr80.dll\"\n  - \"msvcr90.dll\"\n  - \"msvcr100.dll\"\n  - \"msvcr100_clr0400.dll\"\n  - \"msvcr110.dll\"\n  - \"msvcr110_clr0400.dll\"\n  - \"msvcr120.dll\"\n  - \"msvcr120_clr0400.dll\"\n  - \"ucrtbase.dll\"\n  - \"api-ms-win-crt-runtime-l1-1-0.dll\"\napitype: \"DLLExport\"\nf1_keywords: \n  - \"fetestexcept\"\n  - \"fenv/fetestexcept\"\ndev_langs: \n  - \"C\"\n  - \"C++\"\nhelpviewer_keywords: \n  - \"fetestexept function\"\nms.assetid: ca4dc43f-5573-440d-bc19-ead7571b13dc\ncaps.latest.revision: 5\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# fetestexcept\nDetermines which of the specified floating-point exception status flags are currently set.  \n  \n## Syntax  \n  \n```  \nint fetestexcept(  \n   int excepts  \n);  \n  \n```  \n  \n#### Parameters  \n `excepts`  \n A bitwise OR of the floating-point     status flags to test.  \n  \n## Return Value  \n On success, returns a bitmask containing a bitwise OR of the floating-point exception macros that correspond to the exception status flags currently set. Returns 0 if none of the exceptions are set.  \n  \n## Remarks  \n Use the fetestexcept function to determine which exceptions were raised by a floating point operation. Use the `excepts` parameter to specify which exception status flags to test. The `fetestexcept` function uses these exception macros defined in \\<fenv.h> in `excepts` and the return value:  \n  \n|Exception Macro|Description|  \n|---------------------|-----------------|  \n|FE_DIVBYZERO|A singularity or pole error occurred in an earlier floating-point operation; an infinity value was created.|  \n|FE_INEXACT|The function was forced to round the stored result of an earlier floating-point operation.|  \n|FE_INVALID|A domain error occurred in an earlier floating-point operation.|  \n|FE_OVERFLOW|A range error occurred; an earlier floating-point operation result was too large to be represented.|  \n|FE_UNDERFLOW|An earlier floating-point operation result was too small to be represented at full precision; a denormal value was created.|  \n|FE_ALLEXCEPT|The bitwise OR of all supported floating-point exceptions.|  \n  \n The specified `excepts` argument may be 0, one of the supported floating-point exception macros, or the bitwise OR of two or more of the macros. The effect of any other `excepts` argument value is undefined.  \n  \n To use this function, you must turn off floating-point optimizations that could prevent access by using the `#pragma fenv_access(on)` directive prior to the call. For more information, see [fenv_access](../../preprocessor/fenv-access.md).  \n  \n## Requirements  \n  \n|Function|C header|C++ header|  \n|--------------|--------------|------------------|  \n|`fetestexcept`|\\<fenv.h>|\\<cfenv>|  \n  \n For additional compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md).  \n  \n## See Also  \n [Alphabetical Function Reference](../../c-runtime-library/reference/crt-alphabetical-function-reference.md)   \n [feclearexcept](../../c-runtime-library/reference/feclearexcept1.md)   \n [feraiseexcept](../../c-runtime-library/reference/feraiseexcept.md)"}