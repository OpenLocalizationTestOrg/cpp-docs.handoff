{"nodes":[{"pos":[12,53],"content":"auto_handle::auto_handle | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"auto_handle::auto_handle | Microsoft Docs","pos":[0,41]}]},{"content":"auto_handle::auto_handle","pos":[732,756]},{"pos":[757,787],"content":"The <ph id=\"ph1\">`auto_handle`</ph> constructor.","source":"The `auto_handle` constructor."},{"content":"Syntax","pos":[796,802]},{"content":"Parameters","pos":[1044,1054]},{"content":"The object to own.","pos":[1068,1086]},{"content":"An existing <ph id=\"ph1\">`auto_handle`</ph>.","pos":[1105,1131],"source":" An existing `auto_handle`."},{"content":"Example","pos":[1140,1147]},{"content":"Requirements","pos":[2604,2616]},{"pos":[2620,2658],"content":"<bpt id=\"p1\">**</bpt>Header file<ept id=\"p1\">**</ept> <ph id=\"ph1\">\\&lt;</ph>msclr\\auto_handle.h&gt;","source":"**Header file** \\<msclr\\auto_handle.h>"},{"pos":[2665,2684],"content":"<bpt id=\"p1\">**</bpt>Namespace<ept id=\"p1\">**</ept> msclr","source":"**Namespace** msclr"},{"content":"See Also","pos":[2693,2701]},{"content":"auto_handle Members","pos":[2706,2725]},{"content":"auto_handle::operator=","pos":[2766,2788]},{"content":"auto_handle::~auto_handle","pos":[2837,2862]}],"content":"---\ntitle: \"auto_handle::auto_handle | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"auto_handle::auto_handle\"\n  - \"msclr.auto_handle.auto_handle\"\n  - \"auto_handle.auto_handle\"\n  - \"msclr::auto_handle::auto_handle\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"auto_handle method\"\nms.assetid: 0b68ab31-023c-4224-9601-9231412c4e13\ncaps.latest.revision: 10\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# auto_handle::auto_handle\nThe `auto_handle` constructor.  \n  \n## Syntax  \n  \n```  \nauto_handle();  \nauto_handle(  \n   _element_type ^ _ptr  \n);  \nauto_handle(  \n   auto_handle<_element_type> % _right  \n);  \ntemplate<typename _other_type>  \nauto_handle(  \n   auto_handle<_other_type> % _right  \n);  \n```  \n  \n#### Parameters  \n `_ptr`  \n The object to own.  \n  \n `_right`  \n An existing `auto_handle`.  \n  \n## Example  \n  \n```  \n// msl_auto_handle_auto_handle.cpp  \n// compile with: /clr  \n#include \"msclr\\auto_handle.h\"  \n  \nusing namespace System;  \nusing namespace msclr;  \nref class RefClassA {  \nprotected:  \n   String^ m_s;     \npublic:  \n   RefClassA(String^ s) : m_s(s) {  \n      Console::WriteLine( \"in RefClassA constructor: \" + m_s );  \n   }  \n   ~RefClassA() {  \n      Console::WriteLine( \"in RefClassA destructor: \" + m_s );  \n   }  \n  \n   virtual void PrintHello() {  \n      Console::WriteLine( \"Hello from {0} A!\", m_s );  \n   }  \n};  \n  \nref class RefClassB : RefClassA {  \npublic:     \n   RefClassB( String^ s ) : RefClassA( s ) {}  \n   virtual void PrintHello() new {  \n      Console::WriteLine( \"Hello from {0} B!\", m_s );  \n   }  \n};  \n  \nint main()  \n{  \n   {  \n      auto_handle<RefClassA> a(gcnew RefClassA( \"first\" ) );  \n      a->PrintHello();  \n   }  \n  \n   {  \n      auto_handle<RefClassB> b(gcnew RefClassB( \"second\" ) );  \n      b->PrintHello();  \n      auto_handle<RefClassA> a(b); //construct from derived type  \n      a->PrintHello();  \n      auto_handle<RefClassA> a2(a); //construct from same type  \n      a2->PrintHello();  \n   }  \n  \n   Console::WriteLine(\"done\");  \n}  \n```  \n  \n```Output  \nin RefClassA constructor: first  \nHello from first A!  \nin RefClassA destructor: first  \nin RefClassA constructor: second  \nHello from second B!  \nHello from second A!  \nHello from second A!  \nin RefClassA destructor: second  \ndone  \n```  \n  \n## Requirements  \n **Header file** \\<msclr\\auto_handle.h>  \n  \n **Namespace** msclr  \n  \n## See Also  \n [auto_handle Members](../dotnet/auto-handle-members.md)   \n [auto_handle::operator=](../dotnet/auto-handle-operator-assign.md)   \n [auto_handle::~auto_handle](../dotnet/auto-handle-tilde-auto-handle.md)"}