{"nodes":[{"pos":[12,64],"content":"priority_queue::operator= (STL-CLR) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"priority_queue::operator= (STL-CLR) | Microsoft Docs","pos":[0,52]}]},{"content":"priority_queue::operator= (STL/CLR)","pos":[656,691]},{"content":"Replaces the controlled sequence.","pos":[692,725]},{"content":"Syntax","pos":[734,740]},{"content":"Parameters","pos":[856,866]},{"content":"right","pos":[870,875]},{"content":"Container adapter to copy.","pos":[879,905]},{"content":"Remarks","pos":[914,921]},{"content":"The member operator copies <ph id=\"ph1\">`right`</ph> to the object, then returns <ph id=\"ph2\">`*this`</ph>.","pos":[925,996],"source":"The member operator copies `right` to the object, then returns `*this`."},{"content":"You use it to replace the controlled sequence with a copy of the controlled sequence in <ph id=\"ph1\">`right`</ph>.","pos":[997,1093],"source":" You use it to replace the controlled sequence with a copy of the controlled sequence in `right`."},{"content":"Example","pos":[1102,1109]},{"content":"Requirements","pos":[1869,1881]},{"pos":[1885,1912],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> <ph id=\"ph1\">\\&lt;</ph>cliext/queue&gt;","source":"**Header:** \\<cliext/queue>"},{"pos":[1919,1940],"content":"<bpt id=\"p1\">**</bpt>Namespace:<ept id=\"p1\">**</ept> cliext","source":"**Namespace:** cliext"},{"content":"See Also","pos":[1949,1957]},{"content":"priority_queue (STL/CLR)","pos":[1962,1986]},{"content":"priority_queue::assign (STL/CLR)","pos":[2030,2062]}],"content":"---\ntitle: \"priority_queue::operator= (STL-CLR) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"cliext::priority_queue::operator=\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"operator= member [STL/CLR]\"\nms.assetid: 796b4ad2-3e40-49e8-8462-87460d086fe4\ncaps.latest.revision: 16\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# priority_queue::operator= (STL/CLR)\nReplaces the controlled sequence.  \n  \n## Syntax  \n  \n```  \npriority_queue <Value, Container>% operator=(priority_queue <Value, Container>% right);  \n```  \n  \n#### Parameters  \n right  \n Container adapter to copy.  \n  \n## Remarks  \n The member operator copies `right` to the object, then returns `*this`. You use it to replace the controlled sequence with a copy of the controlled sequence in `right`.  \n  \n## Example  \n  \n```  \n// cliext_priority_queue_operator_as.cpp   \n// compile with: /clr   \n#include <cliext/queue>   \n  \ntypedef cliext::priority_queue<wchar_t> Mypriority_queue;   \nint main()   \n    {   \n    Mypriority_queue c1;   \n    c1.push(L'a');   \n    c1.push(L'b');   \n    c1.push(L'c');   \n  \n// display contents \" a b c\"   \n    for each (wchar_t elem in c1.get_container())   \n        System::Console::Write(\" {0}\", elem);   \n    System::Console::WriteLine();   \n  \n// assign to a new container   \n    Mypriority_queue c2;   \n    c2 = c1;   \n    for each (wchar_t elem in c2.get_container())   \n        System::Console::Write(\" {0}\", elem);   \n    System::Console::WriteLine();   \n    return (0);   \n    }  \n  \n```  \n  \n```Output  \nc a b  \nc a b  \n```  \n  \n## Requirements  \n **Header:** \\<cliext/queue>  \n  \n **Namespace:** cliext  \n  \n## See Also  \n [priority_queue (STL/CLR)](../dotnet/priority-queue-stl-clr.md)   \n [priority_queue::assign (STL/CLR)](../dotnet/priority-queue-assign-stl-clr.md)"}