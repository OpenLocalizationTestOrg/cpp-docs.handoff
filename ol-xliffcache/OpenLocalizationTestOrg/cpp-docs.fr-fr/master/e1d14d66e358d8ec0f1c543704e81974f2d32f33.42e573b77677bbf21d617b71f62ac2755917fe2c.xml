{"nodes":[{"pos":[12,83],"content":"Context-Sensitive Keywords  (C++ Component Extensions) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Context-Sensitive Keywords  (C++ Component Extensions) | Microsoft Docs","pos":[0,71]}]},{"content":"Context-Sensitive Keywords  (C++ Component Extensions)","pos":[689,743]},{"content":"<bpt id=\"p1\">*</bpt>Context-sensitive keywords<ept id=\"p1\">*</ept> are language elements that are recognized only in specific contexts.","pos":[744,841],"source":"*Context-sensitive keywords* are language elements that are recognized only in specific contexts."},{"content":"Outside the specific context, a context-sensitive keyword can be a user-defined symbol.","pos":[842,929]},{"content":"All Runtimes","pos":[938,950]},{"content":"Remarks","pos":[956,963]},{"content":"The following is a list of context-sensitive keywords:","pos":[972,1026]},{"content":"abstract","pos":[1037,1045]},{"content":"delegate","pos":[1106,1114]},{"content":"event","pos":[1175,1180]},{"content":"finally","pos":[1238,1245]},{"content":"for each, in","pos":[1279,1291]},{"content":"initonly","pos":[1329,1337]},{"content":"literal","pos":[1401,1408]},{"content":"override","pos":[1468,1476]},{"content":"property","pos":[1537,1545]},{"content":"sealed","pos":[1606,1612]},{"pos":[1678,1747],"content":"(part of <bpt id=\"p1\">[</bpt>Generics<ept id=\"p1\">](../windows/generics-cpp-component-extensions.md)</ept>)","source":" (part of [Generics](../windows/generics-cpp-component-extensions.md))"},{"content":"For readability purposes, you may want to limit your use of context-sensitive keywords as user–defined symbols.","pos":[1754,1865]},{"content":"Remarks","pos":[1932,1939]},{"content":"(There are no platform-specific remarks for this feature.)","pos":[1948,2006]},{"content":"Requirements","pos":[2016,2028]},{"pos":[2032,2056],"content":"Compiler option: <bpt id=\"p1\">**</bpt>/ZW<ept id=\"p1\">**</ept>","source":"Compiler option: **/ZW**"},{"content":"Remarks","pos":[2142,2149]},{"content":"(There are no platform-specific remarks for this feature.)","pos":[2158,2216]},{"content":"Requirements","pos":[2226,2238]},{"pos":[2242,2267],"content":"Compiler option: <bpt id=\"p1\">**</bpt>/clr<ept id=\"p1\">**</ept>","source":"Compiler option: **/clr**"},{"content":"Examples","pos":[2277,2285]},{"content":"Example","pos":[2291,2298]},{"pos":[2307,2462],"content":"The following code example shows that in the appropriate context, the <ph id=\"ph1\">`property`</ph> context-sensitive keyword can be used to define a property and a variable.","source":"The following code example shows that in the appropriate context, the `property` context-sensitive keyword can be used to define a property and a variable."},{"content":"Output","pos":[2920,2926]},{"content":"See Also","pos":[2964,2972]},{"content":"Component Extensions for Runtime Platforms","pos":[2977,3019]}],"content":"---\ntitle: \"Context-Sensitive Keywords  (C++ Component Extensions) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"language-reference\"\nf1_keywords: \n  - \"internal_CPP\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"context-sensitive keywords\"\nms.assetid: e33da089-f434-44e9-8cce-4668d05a8939\ncaps.latest.revision: 19\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"ru-ru\"\n  - \"zh-cn\"\n  - \"zh-tw\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"tr-tr\"\n---\n# Context-Sensitive Keywords  (C++ Component Extensions)\n*Context-sensitive keywords* are language elements that are recognized only in specific contexts. Outside the specific context, a context-sensitive keyword can be a user-defined symbol.  \n  \n## All Runtimes  \n **Remarks**  \n  \n The following is a list of context-sensitive keywords:  \n  \n-   [abstract](../windows/abstract-cpp-component-extensions.md)  \n  \n-   [delegate](../windows/delegate-cpp-component-extensions.md)  \n  \n-   [event](../windows/event-cpp-component-extensions.md)  \n  \n-   [finally](../dotnet/finally.md)  \n  \n-   [for each, in](../dotnet/for-each-in.md)  \n  \n-   [initonly](../dotnet/initonly-cpp-cli.md)  \n  \n-   `internal`   \n  \n-   [literal](../windows/literal-cpp-component-extensions.md)  \n  \n-   [override](../windows/override-cpp-component-extensions.md)  \n  \n-   [property](../windows/property-cpp-component-extensions.md)  \n  \n-   [sealed](../windows/sealed-cpp-component-extensions.md)  \n  \n-   `where` (part of [Generics](../windows/generics-cpp-component-extensions.md))  \n  \n For readability purposes, you may want to limit your use of context-sensitive keywords as user–defined symbols.  \n  \n## [!INCLUDE[wrt](../atl/reference/includes/wrt_md.md)]  \n **Remarks**  \n  \n (There are no platform-specific remarks for this feature.)  \n  \n### Requirements  \n Compiler option: **/ZW**  \n  \n## [!INCLUDE[clr_for_headings](../dotnet/includes/clr_for_headings_md.md)]  \n **Remarks**  \n  \n (There are no platform-specific remarks for this feature.)  \n  \n### Requirements  \n Compiler option: **/clr**  \n  \n### Examples  \n **Example**  \n  \n The following code example shows that in the appropriate context, the `property` context-sensitive keyword can be used to define a property and a variable.  \n  \n```  \n// context_sensitive_keywords.cpp  \n// compile with: /clr  \npublic ref class C {  \n   int MyInt;  \npublic:  \n   C() : MyInt(99) {}  \n  \n   property int Property_Block {   // context-sensitive keyword  \n      int get() { return MyInt; }  \n   }  \n};  \n  \nint main() {  \n   int property = 0;               // variable name  \n   C ^ MyC = gcnew C();  \n   property = MyC->Property_Block;  \n   System::Console::WriteLine(++property);  \n}  \n```  \n  \n **Output**  \n  \n```Output  \n100  \n```  \n  \n## See Also  \n [Component Extensions for Runtime Platforms](../windows/component-extensions-for-runtime-platforms.md)"}