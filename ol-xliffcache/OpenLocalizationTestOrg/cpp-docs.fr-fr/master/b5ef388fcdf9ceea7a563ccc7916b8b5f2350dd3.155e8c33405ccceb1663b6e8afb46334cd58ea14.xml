{"nodes":[{"pos":[12,58],"content":"is_error_condition_enum Class | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"is_error_condition_enum Class | Microsoft Docs","pos":[0,46]}]},{"content":"is_error_condition_enum Class","pos":[758,787]},{"pos":[788,911],"content":"Represents a type predicate that tests for the <bpt id=\"p1\">[</bpt>error_condition<ept id=\"p1\">](../standard-library/error-condition-class.md)</ept> enumeration.","source":"Represents a type predicate that tests for the [error_condition](../standard-library/error-condition-class.md) enumeration."},{"content":"Syntax","pos":[920,926]},{"content":"Remarks","pos":[996,1003]},{"pos":[1007,1195],"content":"An instance of this <bpt id=\"p1\">[</bpt>type predicate<ept id=\"p1\">](../standard-library/type-traits.md)</ept> holds true if the type <ph id=\"ph1\">`_Enum`</ph> is an enumeration value suitable for storing in an object of type <ph id=\"ph2\">`error_condition`</ph>.","source":"An instance of this [type predicate](../standard-library/type-traits.md) holds true if the type `_Enum` is an enumeration value suitable for storing in an object of type `error_condition`."},{"content":"It is permissible to add specializations to this type for user-defined types.","pos":[1202,1279]},{"content":"Requirements","pos":[1288,1300]},{"pos":[1304,1330],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> &lt;system_error&gt;","source":"**Header:** <system_error>"},{"pos":[1337,1355],"content":"<bpt id=\"p1\">**</bpt>Namespace:<ept id=\"p1\">**</ept> std","source":"**Namespace:** std"},{"content":"See Also","pos":[1364,1372]},{"content":"&lt;type_traits&gt;","pos":[1377,1390],"source":"<type_traits>"},{"content":"&lt;system_error&gt;","pos":[1433,1447],"source":"<system_error>"}],"content":"---\ntitle: \"is_error_condition_enum Class | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"std::is_error_condition_enum\"\n  - \"std.is_error_condition_enum\"\n  - \"is_error_condition_enum\"\n  - \"system_error/std::is_error_condition_enum\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"is_error_condition_enum class\"\nms.assetid: 752bb87a-c61c-4304-9254-5aaf228b59c0\ncaps.latest.revision: 15\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# is_error_condition_enum Class\nRepresents a type predicate that tests for the [error_condition](../standard-library/error-condition-class.md) enumeration.  \n  \n## Syntax  \n  \n```\ntemplate <_Enum>\nclass is_error_condition_enum;\n```  \n  \n## Remarks  \n An instance of this [type predicate](../standard-library/type-traits.md) holds true if the type `_Enum` is an enumeration value suitable for storing in an object of type `error_condition`.  \n  \n It is permissible to add specializations to this type for user-defined types.  \n  \n## Requirements  \n **Header:** <system_error>  \n  \n **Namespace:** std  \n  \n## See Also  \n [<type_traits>](../standard-library/type-traits.md)   \n [<system_error>](../standard-library/system-error.md)\n\n\n\n"}