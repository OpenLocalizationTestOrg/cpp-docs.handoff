{"nodes":[{"pos":[12,67],"content":"strpbrk, wcspbrk, _mbspbrk, _mbspbrk_l | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"strpbrk, wcspbrk, _mbspbrk, _mbspbrk_l | Microsoft Docs","pos":[0,55]}]},{"content":"strpbrk, wcspbrk, _mbspbrk, _mbspbrk_l","pos":[1498,1536]},{"content":"Scans strings for characters in specified character sets.","pos":[1537,1594]},{"pos":[1602,1841],"content":"[!IMPORTANT]\n `_mbspbrk` and `_mbspbrk_l` cannot be used in applications that execute in the Windows Runtime. For more information, see [CRT functions not supported with /ZW](http://msdn.microsoft.com/library/windows/apps/jj606124.aspx).","leadings":["","> "],"nodes":[{"content":" and `_mbspbrk_l` cannot be used in applications that execute in the Windows Runtime. For more information, see [CRT functions not supported with /ZW](http://msdn.microsoft.com/library/windows/apps/jj606124.aspx).","pos":[24,237],"nodes":[{"content":"and <ph id=\"ph1\">`_mbspbrk_l`</ph> cannot be used in applications that execute in the Windows Runtime.","pos":[1,85],"source":" and `_mbspbrk_l` cannot be used in applications that execute in the Windows Runtime."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>CRT functions not supported with /ZW<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/apps/jj606124.aspx)</ept>.","pos":[86,213],"source":" For more information, see [CRT functions not supported with /ZW](http://msdn.microsoft.com/library/windows/apps/jj606124.aspx)."}]}]},{"content":"Syntax","pos":[1850,1856]},{"content":"Parameters","pos":[3161,3171]},{"content":"Null-terminated, searched string.","pos":[3184,3217]},{"content":"Null-terminated character set.","pos":[3240,3270]},{"content":"Locale to use.","pos":[3289,3303]},{"content":"Return Value","pos":[3312,3324]},{"pos":[3328,3492],"content":"Returns a pointer to the first occurrence of any character from <ph id=\"ph1\">`strCharSet`</ph> in <ph id=\"ph2\">`str`</ph>, or a <ph id=\"ph3\">`NULL`</ph> pointer if the two string arguments have no characters in common.","source":"Returns a pointer to the first occurrence of any character from `strCharSet` in `str`, or a `NULL` pointer if the two string arguments have no characters in common."},{"content":"Remarks","pos":[3501,3508]},{"content":"The <ph id=\"ph1\">`strpbrk`</ph> function returns a pointer to the first occurrence of a character in <ph id=\"ph2\">`str`</ph> that belongs to the set of characters in <ph id=\"ph3\">`strCharSet`</ph>.","pos":[3512,3655],"source":"The `strpbrk` function returns a pointer to the first occurrence of a character in `str` that belongs to the set of characters in `strCharSet`."},{"content":"The search does not include the terminating null character.","pos":[3656,3715]},{"content":"and <ph id=\"ph1\">`_mbspbrk`</ph> are wide-character and multibyte-character versions of <ph id=\"ph2\">`strpbrk`</ph>.","pos":[3732,3812],"source":" and `_mbspbrk` are wide-character and multibyte-character versions of `strpbrk`."},{"content":"The arguments and return value of <ph id=\"ph1\">`wcspbrk`</ph> are wide-character strings; those of <ph id=\"ph2\">`_mbspbrk`</ph> are multibyte-character strings.","pos":[3813,3937],"source":" The arguments and return value of `wcspbrk` are wide-character strings; those of `_mbspbrk` are multibyte-character strings."},{"content":"validates its parameters.","pos":[3955,3980]},{"content":"If <ph id=\"ph1\">`str`</ph> or <ph id=\"ph2\">`strCharSet`</ph> is <ph id=\"ph3\">`NULL`</ph>, the invalid parameter handler is invoked, as described in <bpt id=\"p1\">[</bpt>Parameter Validation<ept id=\"p1\">](../../c-runtime-library/parameter-validation.md)</ept>.","pos":[3981,4147],"source":" If `str` or `strCharSet` is `NULL`, the invalid parameter handler is invoked, as described in [Parameter Validation](../../c-runtime-library/parameter-validation.md)."},{"content":"If execution is allowed to continue, <ph id=\"ph1\">`_mbspbrk`</ph> returns <ph id=\"ph2\">`NULL`</ph> and sets <ph id=\"ph3\">`errno`</ph> to <ph id=\"ph4\">`EINVAL`</ph>.","pos":[4148,4240],"source":" If execution is allowed to continue, `_mbspbrk` returns `NULL` and sets `errno` to `EINVAL`."},{"content":"and <ph id=\"ph1\">`wcspbrk`</ph> do not validate their parameters.","pos":[4251,4298],"source":" and `wcspbrk` do not validate their parameters."},{"content":"These three functions behave identically otherwise.","pos":[4299,4350]},{"pos":[4368,4514],"content":"is similar to <ph id=\"ph1\">`_mbscspn`</ph> except that <ph id=\"ph2\">`_mbspbrk`</ph> returns a pointer rather than a value of type <bpt id=\"p1\">[</bpt>size_t<ept id=\"p1\">](../../c-runtime-library/standard-types.md)</ept>.","source":" is similar to `_mbscspn` except that `_mbspbrk` returns a pointer rather than a value of type [size_t](../../c-runtime-library/standard-types.md)."},{"content":"In C, these functions take a <ph id=\"ph1\">`const`</ph> pointer for the first argument.","pos":[4521,4589],"source":"In C, these functions take a `const` pointer for the first argument."},{"content":"In C++, two overloads are available.","pos":[4590,4626]},{"content":"The overload taking a pointer to <ph id=\"ph1\">`const`</ph> returns a pointer to <ph id=\"ph2\">`const`</ph>; the version that takes a pointer to non-<ph id=\"ph3\">`const`</ph> returns a pointer to non-<ph id=\"ph4\">`const`</ph>.","pos":[4627,4779],"source":" The overload taking a pointer to `const` returns a pointer to `const`; the version that takes a pointer to non-`const` returns a pointer to non-`const`."},{"content":"The macro _CONST_CORRECT_OVERLOADS is defined if both the <ph id=\"ph1\">`const`</ph> and non-<ph id=\"ph2\">`const`</ph> versions of these functions are available.","pos":[4780,4904],"source":" The macro _CONST_CORRECT_OVERLOADS is defined if both the `const` and non-`const` versions of these functions are available."},{"content":"If you require the non-<ph id=\"ph1\">`const`</ph> behavior for both C++ overloads, define the symbol _CONST_RETURN.","pos":[4905,5001],"source":" If you require the non-`const` behavior for both C++ overloads, define the symbol _CONST_RETURN."},{"content":"The output value is affected by the setting of the <ph id=\"ph1\">`LC_CTYPE`</ph> category setting of the locale; for more information, see <bpt id=\"p1\">[</bpt>setlocale<ept id=\"p1\">](../../c-runtime-library/reference/setlocale-wsetlocale.md)</ept>.","pos":[5008,5199],"source":"The output value is affected by the setting of the `LC_CTYPE` category setting of the locale; for more information, see [setlocale](../../c-runtime-library/reference/setlocale-wsetlocale.md)."},{"content":"The versions of these functions without the <ph id=\"ph1\">`_l`</ph> suffix use the current locale for this locale-dependent behavior; the version with the <ph id=\"ph2\">`_l`</ph> suffix is identical except that it uses the locale parameter passed in instead.","pos":[5200,5420],"source":" The versions of these functions without the `_l` suffix use the current locale for this locale-dependent behavior; the version with the `_l` suffix is identical except that it uses the locale parameter passed in instead."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Locale<ept id=\"p1\">](../../c-runtime-library/locale.md)</ept>.","pos":[5421,5491],"source":" For more information, see [Locale](../../c-runtime-library/locale.md)."},{"content":"Generic-Text Routine Mappings","pos":[5501,5530]},{"content":"TCHAR.H routine","pos":[5537,5552]},{"content":"_UNICODE &amp; _MBCS not defined","pos":[5553,5581],"source":"_UNICODE & _MBCS not defined"},{"content":"_MBCS defined","pos":[5582,5595]},{"content":"_UNICODE defined","pos":[5596,5612]},{"content":"n/a","pos":[5773,5776]},{"content":"n/a","pos":[5781,5784]},{"content":"n/a","pos":[5802,5805]},{"content":"Requirements","pos":[5817,5829]},{"content":"Routine","pos":[5836,5843]},{"content":"Required header","pos":[5844,5859]},{"content":"string.h&gt;","pos":[5916,5925],"source":"string.h>"},{"content":"string.h&gt; or <ph id=\"ph1\">\\&lt;</ph>wchar.h&gt;","pos":[5942,5965],"source":"string.h> or \\<wchar.h>"},{"pos":[5980,5981],"content":","},{"content":"mbstring.h&gt;","pos":[5997,6008],"source":"mbstring.h>"},{"pos":[6016,6120],"content":"For more information about compatibility, see <bpt id=\"p1\">[</bpt>Compatibility<ept id=\"p1\">](../../c-runtime-library/compatibility.md)</ept>.","source":"For more information about compatibility, see [Compatibility](../../c-runtime-library/compatibility.md)."},{"content":"Example","pos":[6129,6136]},{"content":".NET Framework Equivalent","pos":[6812,6837]},{"content":"System::String::IndexOfAny","pos":[6842,6868]},{"content":"See Also","pos":[6950,6958]},{"content":"String Manipulation","pos":[6963,6982]},{"content":"Locale","pos":[7041,7047]},{"content":"Interpretation of Multibyte-Character Sequences","pos":[7089,7136]},{"content":"strcspn, wcscspn, _mbscspn, _mbscspn_l","pos":[7219,7257]},{"content":"strchr, wcschr, _mbschr, _mbschr_l","pos":[7336,7370]},{"content":"strrchr, wcsrchr, _mbsrchr, _mbsrchr_l","pos":[7445,7483]}],"content":"---\ntitle: \"strpbrk, wcspbrk, _mbspbrk, _mbspbrk_l | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\napiname: \n  - \"_mbspbrk\"\n  - \"wcspbrk\"\n  - \"_mbspbrk_l\"\n  - \"strpbrk\"\napilocation: \n  - \"msvcrt.dll\"\n  - \"msvcr80.dll\"\n  - \"msvcr90.dll\"\n  - \"msvcr100.dll\"\n  - \"msvcr100_clr0400.dll\"\n  - \"msvcr110.dll\"\n  - \"msvcr110_clr0400.dll\"\n  - \"msvcr120.dll\"\n  - \"msvcr120_clr0400.dll\"\n  - \"ucrtbase.dll\"\n  - \"api-ms-win-crt-multibyte-l1-1-0.dll\"\n  - \"api-ms-win-crt-string-l1-1-0.dll\"\napitype: \"DLLExport\"\nf1_keywords: \n  - \"_fstrpbrk\"\n  - \"_mbspbrk\"\n  - \"strpbrk\"\n  - \"_tcspbrk\"\n  - \"_ftcspbrk\"\n  - \"wcspbrk\"\ndev_langs: \n  - \"C++\"\n  - \"C\"\nhelpviewer_keywords: \n  - \"fstrpbrk function\"\n  - \"_ftcspbrk function\"\n  - \"_mbspbrk_l function\"\n  - \"strpbrk function\"\n  - \"_fstrpbrk function\"\n  - \"mbspbrk function\"\n  - \"characters [C++], scanning strings\"\n  - \"_tcspbrk function\"\n  - \"wcspbrk function\"\n  - \"ftcspbrk function\"\n  - \"character sets [C++], scanning strings for characters\"\n  - \"strings [C++], scanning\"\n  - \"tcspbrk function\"\n  - \"_mbspbrk function\"\n  - \"mbspbrk_l function\"\nms.assetid: 80b504f7-a167-4dde-97ad-4ae3000dc810\ncaps.latest.revision: 30\nauthor: \"corob-msft\"\nms.author: \"corob\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# strpbrk, wcspbrk, _mbspbrk, _mbspbrk_l\nScans strings for characters in specified character sets.  \n  \n> [!IMPORTANT]\n>  `_mbspbrk` and `_mbspbrk_l` cannot be used in applications that execute in the Windows Runtime. For more information, see [CRT functions not supported with /ZW](http://msdn.microsoft.com/library/windows/apps/jj606124.aspx).  \n  \n## Syntax  \n  \n```  \nchar *strpbrk(  \n   const char *str,  \n   const char *strCharSet   \n); // C only  \nchar *strpbrk(  \n   char *str,  \n   const char *strCharSet   \n); // C++ only  \nconst char *strpbrk(  \n   const char *str,  \n   const char *strCharSet   \n); // C++ only  \nwchar_t *wcspbrk(  \n   const wchar_t *str,  \n   const wchar_t *strCharSet   \n); // C only  \nwchar_t *wcspbrk(  \n   wchar_t *str,  \n   const wchar_t *strCharSet   \n); // C++ only  \nconst wchar_t *wcspbrk(  \n   const wchar_t *str,  \n   const wchar_t *strCharSet   \n); // C++ only  \nunsigned char *_mbspbrk(  \n   const unsigned char *str,  \n   const unsigned char *strCharSet   \n); // C only  \nunsigned char *_mbspbrk(  \n   unsigned char *str,  \n   const unsigned char *strCharSet   \n); // C++ only  \nconst unsigned char *_mbspbrk(  \n   const unsigned char *str,  \n   const unsigned char *strCharSet   \n); // C++ only  \nunsigned char *_mbspbrk_l(  \n   const unsigned char *str,  \n   const unsigned char *strCharSet,  \n   _locale_t locale  \n); // C only  \nunsigned char *_mbspbrk_l(  \n   unsigned char *str,  \n   const unsigned char *strCharSet,  \n   _locale_t locale  \n); // C++ only  \nconst unsigned char *_mbspbrk_l(  \n   const unsigned char *str,  \n   const unsigned char* strCharSet,  \n   _locale_t locale  \n); // C++ only  \n```  \n  \n#### Parameters  \n `str`  \n Null-terminated, searched string.  \n  \n `strCharSet`  \n Null-terminated character set.  \n  \n `locale`  \n Locale to use.  \n  \n## Return Value  \n Returns a pointer to the first occurrence of any character from `strCharSet` in `str`, or a `NULL` pointer if the two string arguments have no characters in common.  \n  \n## Remarks  \n The `strpbrk` function returns a pointer to the first occurrence of a character in `str` that belongs to the set of characters in `strCharSet`. The search does not include the terminating null character.  \n  \n `wcspbrk` and `_mbspbrk` are wide-character and multibyte-character versions of `strpbrk`. The arguments and return value of `wcspbrk` are wide-character strings; those of `_mbspbrk` are multibyte-character strings.  \n  \n `_mbspbrk` validates its parameters. If `str` or `strCharSet` is `NULL`, the invalid parameter handler is invoked, as described in [Parameter Validation](../../c-runtime-library/parameter-validation.md). If execution is allowed to continue, `_mbspbrk` returns `NULL` and sets `errno` to `EINVAL`. `strpbrk` and `wcspbrk` do not validate their parameters. These three functions behave identically otherwise.  \n  \n `_mbspbrk` is similar to `_mbscspn` except that `_mbspbrk` returns a pointer rather than a value of type [size_t](../../c-runtime-library/standard-types.md).  \n  \n In C, these functions take a `const` pointer for the first argument. In C++, two overloads are available. The overload taking a pointer to `const` returns a pointer to `const`; the version that takes a pointer to non-`const` returns a pointer to non-`const`. The macro _CONST_CORRECT_OVERLOADS is defined if both the `const` and non-`const` versions of these functions are available. If you require the non-`const` behavior for both C++ overloads, define the symbol _CONST_RETURN.  \n  \n The output value is affected by the setting of the `LC_CTYPE` category setting of the locale; for more information, see [setlocale](../../c-runtime-library/reference/setlocale-wsetlocale.md). The versions of these functions without the `_l` suffix use the current locale for this locale-dependent behavior; the version with the `_l` suffix is identical except that it uses the locale parameter passed in instead. For more information, see [Locale](../../c-runtime-library/locale.md).  \n  \n### Generic-Text Routine Mappings  \n  \n|TCHAR.H routine|_UNICODE & _MBCS not defined|_MBCS defined|_UNICODE defined|  \n|---------------------|------------------------------------|--------------------|-----------------------|  \n|`_tcspbrk`|`strpbrk`|`_mbspbrk`|`wcspbrk`|  \n|**n/a**|**n/a**|`_mbspbrk_l`|**n/a**|  \n  \n## Requirements  \n  \n|Routine|Required header|  \n|-------------|---------------------|  \n|`strpbrk`|\\<string.h>|  \n|`wcspbrk`|\\<string.h> or \\<wchar.h>|  \n|`_mbspbrk`, `_mbspbrk_l`|\\<mbstring.h>|  \n  \n For more information about compatibility, see [Compatibility](../../c-runtime-library/compatibility.md).  \n  \n## Example  \n  \n```  \n// crt_strpbrk.c  \n  \n#include <string.h>  \n#include <stdio.h>  \n  \nint main( void )  \n{  \n   char string[100] = \"The 3 men and 2 boys ate 5 pigs\\n\";  \n   char *result = NULL;  \n  \n   // Return pointer to first digit in \"string\".  \n   printf( \"1: %s\\n\", string );  \n   result = strpbrk( string, \"0123456789\" );  \n   printf( \"2: %s\\n\", result++ );  \n   result = strpbrk( result, \"0123456789\" );  \n   printf( \"3: %s\\n\", result++ );  \n   result = strpbrk( result, \"0123456789\" );  \n   printf( \"4: %s\\n\", result );  \n}  \n```  \n  \n```Output  \n1: The 3 men and 2 boys ate 5 pigs  \n  \n2: 3 men and 2 boys ate 5 pigs  \n  \n3: 2 boys ate 5 pigs  \n  \n4: 5 pigs  \n```  \n  \n## .NET Framework Equivalent  \n [System::String::IndexOfAny](https://msdn.microsoft.com/en-us/library/system.string.indexofany.aspx)  \n  \n## See Also  \n [String Manipulation](../../c-runtime-library/string-manipulation-crt.md)   \n [Locale](../../c-runtime-library/locale.md)   \n [Interpretation of Multibyte-Character Sequences](../../c-runtime-library/interpretation-of-multibyte-character-sequences.md)   \n [strcspn, wcscspn, _mbscspn, _mbscspn_l](../../c-runtime-library/reference/strcspn-wcscspn-mbscspn-mbscspn-l.md)   \n [strchr, wcschr, _mbschr, _mbschr_l](../../c-runtime-library/reference/strchr-wcschr-mbschr-mbschr-l.md)   \n [strrchr, wcsrchr, _mbsrchr, _mbsrchr_l](../../c-runtime-library/reference/strrchr-wcsrchr-mbsrchr-mbsrchr-l.md)"}