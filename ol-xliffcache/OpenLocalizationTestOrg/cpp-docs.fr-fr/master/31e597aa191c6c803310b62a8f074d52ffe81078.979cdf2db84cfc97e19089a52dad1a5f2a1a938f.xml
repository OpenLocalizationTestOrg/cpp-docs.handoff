{"nodes":[{"pos":[12,67],"content":"hash_multimap::value_compare (STL-CLR) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"hash_multimap::value_compare (STL-CLR) | Microsoft Docs","pos":[0,55]}]},{"content":"hash_multimap::value_compare (STL/CLR)","pos":[665,703]},{"content":"The ordering delegate for two element values.","pos":[704,749]},{"content":"Syntax","pos":[758,764]},{"content":"Remarks","pos":[890,897]},{"content":"The type is a synonym for the delegate that determines the ordering of its value arguments.","pos":[901,992]},{"content":"Example","pos":[1001,1008]},{"content":"Requirements","pos":[2066,2078]},{"pos":[2082,2112],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> <ph id=\"ph1\">\\&lt;</ph>cliext/hash_map&gt;","source":"**Header:** \\<cliext/hash_map>"},{"pos":[2119,2140],"content":"<bpt id=\"p1\">**</bpt>Namespace:<ept id=\"p1\">**</ept> cliext","source":"**Namespace:** cliext"},{"content":"See Also","pos":[2149,2157]},{"content":"hash_multimap (STL/CLR)","pos":[2162,2185]},{"content":"hash_multimap::key_compare (STL/CLR)","pos":[2228,2264]},{"content":"hash_multimap::value_comp (STL/CLR)","pos":[2319,2354]},{"content":"hash_multimap::value_type (STL/CLR)","pos":[2408,2443]}],"content":"---\ntitle: \"hash_multimap::value_compare (STL-CLR) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\nf1_keywords: \n  - \"cliext::hash_multimap::value_compare\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"value_compare member [STL/CLR]\"\nms.assetid: 64daa1b6-3019-4850-9ec5-ae63c01fe819\ncaps.latest.revision: 8\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# hash_multimap::value_compare (STL/CLR)\nThe ordering delegate for two element values.  \n  \n## Syntax  \n  \n```  \nMicrosoft::VisualC::StlClr::BinaryDelegate<generic_value, generic_value, bool>  \n    value_compare;  \n```  \n  \n## Remarks  \n The type is a synonym for the delegate that determines the ordering of its value arguments.  \n  \n## Example  \n  \n```  \n// cliext_hash_multimap_value_compare.cpp   \n// compile with: /clr   \n#include <cliext/hash_map>   \n  \ntypedef cliext::hash_map<wchar_t, int> Myhash_multimap;   \nint main()   \n    {   \n    Myhash_multimap c1;   \n    Myhash_multimap::value_compare^ kcomp = c1.value_comp();   \n  \n    System::Console::WriteLine(\"compare([L'a', 1], [L'a', 1]) = {0}\",   \n        kcomp(Myhash_multimap::make_value(L'a', 1),   \n            Myhash_multimap::make_value(L'a', 1)));   \n    System::Console::WriteLine(\"compare([L'a', 1], [L'b', 2]) = {0}\",   \n        kcomp(Myhash_multimap::make_value(L'a', 1),   \n            Myhash_multimap::make_value(L'b', 2)));   \n    System::Console::WriteLine(\"compare([L'b', 2], [L'a', 1]) = {0}\",   \n        kcomp(Myhash_multimap::make_value(L'b', 2),   \n            Myhash_multimap::make_value(L'a', 1)));   \n    System::Console::WriteLine();   \n    return (0);   \n    }  \n  \n```  \n  \n```Output  \ncompare([L'a', 1], [L'a', 1]) = True  \ncompare([L'a', 1], [L'b', 2]) = True  \ncompare([L'b', 2], [L'a', 1]) = False  \n```  \n  \n## Requirements  \n **Header:** \\<cliext/hash_map>  \n  \n **Namespace:** cliext  \n  \n## See Also  \n [hash_multimap (STL/CLR)](../dotnet/hash-multimap-stl-clr.md)   \n [hash_multimap::key_compare (STL/CLR)](../dotnet/hash-multimap-key-compare-stl-clr.md)   \n [hash_multimap::value_comp (STL/CLR)](../dotnet/hash-multimap-value-comp-stl-clr.md)   \n [hash_multimap::value_type (STL/CLR)](../dotnet/hash-multimap-value-type-stl-clr.md)"}