{"nodes":[{"pos":[12,57],"content":"A.18   Nested for Directives | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"A.18   Nested for Directives | Microsoft Docs","pos":[0,45]}]},{"content":"A.18   Nested for Directives","pos":[537,565]},{"pos":[566,783],"content":"The following example of <ph id=\"ph1\">`for`</ph> directive nesting (<bpt id=\"p1\">[</bpt>Section 2.9<ept id=\"p1\">](../../parallel/openmp/2-9-directive-nesting.md)</ept> on page 33) is compliant because the inner and outer <ph id=\"ph2\">`for`</ph> directives bind to different parallel regions:","source":"The following example of `for` directive nesting ([Section 2.9](../../parallel/openmp/2-9-directive-nesting.md) on page 33) is compliant because the inner and outer `for` directives bind to different parallel regions:"},{"content":"A following variation of the preceding example is also compliant:","pos":[1123,1188]}],"content":"---\ntitle: \"A.18   Nested for Directives | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"11/04/2016\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-cpp\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"C++\"\nms.assetid: ae2b2e0b-ec94-43f8-928c-6d621b51f0df\ncaps.latest.revision: 7\nauthor: \"mikeblome\"\nms.author: \"mblome\"\nmanager: \"ghogen\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# A.18   Nested for Directives\nThe following example of `for` directive nesting ([Section 2.9](../../parallel/openmp/2-9-directive-nesting.md) on page 33) is compliant because the inner and outer `for` directives bind to different parallel regions:  \n  \n```  \n#pragma omp parallel default(shared)  \n{  \n    #pragma omp for  \n        for (i=0; i<n; i++)   \n        {  \n            #pragma omp parallel shared(i, n)  \n            {  \n                #pragma omp for  \n                    for (j=0; j<n; j++)  \n                        work(i, j);  \n            }  \n        }  \n}  \n```  \n  \n A following variation of the preceding example is also compliant:  \n  \n```  \n#pragma omp parallel default(shared)  \n{  \n    #pragma omp for  \n        for (i=0; i<n; i++)  \n            work1(i, n);  \n}  \n  \nvoid work1(int i, int n)  \n{  \n    int j;  \n    #pragma omp parallel default(shared)  \n    {  \n        #pragma omp for  \n            for (j=0; j<n; j++)  \n                work2(i, j);  \n    }  \n    return;  \n}  \n```"}